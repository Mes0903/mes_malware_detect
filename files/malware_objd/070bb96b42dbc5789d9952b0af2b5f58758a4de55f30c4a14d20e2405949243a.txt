
070bb96b42dbc5789d9952b0af2b5f58758a4de55f30c4a14d20e2405949243a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	sub    esp,0x120
  401006:	push   esi
  401007:	push   0x0
  401009:	push   0x0
  40100b:	push   0x0
  40100d:	push   0x446a54
  401012:	push   0x0
  401014:	call   DWORD PTR ds:0x444058
  40101a:	lea    eax,[esp+0x4]
  40101e:	push   eax
  40101f:	call   DWORD PTR ds:0x444060
  401025:	mov    eax,DWORD PTR [esp+0x4]
  401029:	mov    ecx,DWORD PTR [eax]
  40102b:	mov    edx,DWORD PTR [ecx+0x10]
  40102e:	push   0x10
  401030:	push   eax
  401031:	call   edx
  401033:	mov    ds:0x447cfc,eax
  401038:	call   DWORD PTR ds:0x444044
  40103e:	mov    esi,eax
  401040:	call   0x409c30
  401045:	push   0x43bf50
  40104a:	call   0x4203f0
  40104f:	call   0x434e80
  401054:	push   0x4209e0
  401059:	call   0x41b980
  40105e:	push   0x43ecf0
  401063:	call   0x440750
  401068:	add    esp,0xc
  40106b:	lea    eax,[esp+0x8]
  40106f:	push   eax
  401070:	push   0x0
  401072:	push   0x3
  401074:	call   DWORD PTR ds:0x444004
  40107a:	call   0x417190
  40107f:	push   0x34
  401081:	push   0x42
  401083:	call   DWORD PTR ds:0x44400c
  401089:	test   eax,eax
  40108b:	je     0x401094
  40108d:	push   eax
  40108e:	call   DWORD PTR ds:0x444018
  401094:	push   0x0
  401096:	push   0xf9
  40109b:	push   0x9e
  4010a0:	push   0x1f
  4010a2:	push   0x69
  4010a4:	push   0x0
  4010a6:	push   esi
  4010a7:	call   DWORD PTR ds:0x44404c
  4010ad:	pop    esi
  4010ae:	add    esp,0x120
  4010b4:	jmp    0x417890
  4010b9:	int3   
  4010ba:	int3   
  4010bb:	int3   
  4010bc:	int3   
  4010bd:	int3   
  4010be:	int3   
  4010bf:	int3   
  4010c0:	dec    esp
  4010c2:	inc    DWORD PTR [ebx+0x7027d18]
  4010c8:	mov    eax,0xffb865
  4010cd:	mov    DWORD PTR [ebx+0xffccff],0x866cce00
  4010d7:	mov    ch,0x25
  4010d9:	xor    bh,BYTE PTR [ecx-0x77]
  4010dc:	add    BYTE PTR [ebp-0x1],ah
  4010df:	inc    DWORD PTR [ebx+0x483ff00]
  4010e5:	inc    ebp
  4010e6:	mov    ah,bh
  4010e8:	mov    ah,0xea
  4010ea:	in     al,0x0
  4010ec:	cmp    DWORD PTR [edi+0x0],0xffffffff
  4010f0:	add    DWORD PTR [ebx-0x73c80100],0xffffffc1
  4010f7:	gs sbb eax,esi
  4010fa:	mov    edi,0xff3800ff
  4010ff:	add    bh,bh
  401101:	(bad)  
  401102:	dec    DWORD PTR [ecx-0x335d9c1b]
  401108:	sub    al,0xae
  40110a:	and    eax,0xff0f00ff
  40110f:	int3   
  401110:	add    bh,bh
  401112:	(bad)  
  401113:	call   DWORD PTR [ebx]
  401115:	dec    ebx
  401116:	add    eax,0xe6595ad
  40111b:	mov    esp,ecx
  40111d:	jae    0x40111f
  40111f:	add    bh,bh
  401121:	inc    DWORD PTR [ebx-0x42f0ca00]
  401127:	or     DWORD PTR [edi-0x33768046],esi
  40112d:	jae    0x834110ff
  401133:	add    BYTE PTR [ebp+0x27],bh
  401136:	or     bl,bh
  401138:	push   0x83ff8b8b
  40113d:	lods   eax,DWORD PTR ds:[esi]
  40113e:	mov    DWORD PTR [eax],eax
  401140:	or     esp,0xffffffff
  401143:	int3   
  401144:	lods   eax,DWORD PTR ds:[esi]
  401145:	dec    eax
  401146:	nop    DWORD PTR [edi]
  401149:	call   0xff83:0x25008958
  401150:	mov    edi,edi
  401152:	cmp    edi,0xfffffff9
  401155:	ja     0x4011b4
  401157:	jl     0x40113b
  401159:	pop    ecx
  40115a:	mov    al,0x0
  40115c:	inc    ebp
  40115e:	add    BYTE PTR [ebx-0x333334],al
  401164:	jo     0x40118e
  401166:	int    0xe7
  401168:	cli    
  401169:	outs   dx,DWORD PTR ds:[esi]
  40116a:	jnp    0x4010f5
  40116c:	jmp    DWORD PTR [edx]
  40116e:	add    bh,bh
  401170:	int3   
  401171:	int3   
  401172:	or     esp,0xffffffa5
  401175:	js     0x40115f
  401177:	mov    eax,ds:0x8926fb8b
  40117c:	mov    DWORD PTR [eax+0x0],ecx
  40117f:	dec    DWORD PTR [ecx+0x2bffcc83]
  401185:	mov    al,0x99
  401187:	les    edx,FWORD PTR [esi+eiz*2+0x41]
  40118b:	int3   
  40118c:	add    BYTE PTR [ecx-0x34],dl
  40118f:	add    bh,bh
  401191:	inc    DWORD PTR [ebx+0x5bf00cff]
  401197:	jmp    0x4011ba
  401199:	lods   al,BYTE PTR ds:[esi]
  40119a:	lods   al,BYTE PTR ds:[esi]
  40119b:	add    bh,bh
  40119d:	cmp    BYTE PTR [ebx-0x76010000],al
  4011a3:	or     DWORD PTR ds:0xc1090add,0x15
  4011aa:	inc    ebp
  4011ab:	dec    esp
  4011ad:	sar    edi,0x0
  4011b0:	add    BYTE PTR [ebx+0x26e88983],al
  4011b6:	loop   0x401177
  4011b8:	adc    BYTE PTR [esp+eax*4-0x1],0x0
  4011bd:	mov    eax,0xffff8900
  4011c2:	or     esp,0x4a
  4011c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011c6:	pop    esi
  4011c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011c8:	je     0x40116b
  4011ca:	in     al,0x0
  4011cc:	add    DWORD PTR [edi+edi*8],0x0
  4011d0:	int3   
  4011d1:	dec    DWORD PTR [ecx+0x38047d00]
  4011d7:	lods   eax,DWORD PTR ds:[esi]
  4011d8:	pcmpeqw mm6,mm3
  4011db:	inc    DWORD PTR [eax]
  4011dd:	dec    esi
  4011de:	inc    DWORD PTR [ebx-0x33ff01]
  4011e4:	add    dh,bl
  4011e6:	leave  
  4011e7:	das    
  4011e8:	jl     0x4011ff
  4011ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011eb:	int3   
  4011ec:	add    BYTE PTR [esi],cl
  4011ee:	add    BYTE PTR [ebx-0x767c01],al
  4011f4:	imul   edx,edx,0x60367f14
  4011fa:	xor    al,0x83
  4011fc:	add    bl,bh
  4011fe:	add    DWORD PTR [eax],0xffffff83
  401201:	add    DWORD PTR [ebx-0x625fa701],0xfffffffc
  401208:	fcmove st,st(2)
  40120a:	aas    
  40120b:	cmp    edi,0xffffff88
  40120e:	add    BYTE PTR [eax],al
  401210:	(bad)  
  401211:	(bad)  
  401212:	dec    DWORD PTR [ecx+0x4a1f1e0f]
  401218:	sub    ebx,DWORD PTR [edx+0x6e]
  40121b:	add    DWORD PTR [eax],0xffffffeb
  40121e:	(bad)  
  40121f:	(bad)  
  401220:	inc    DWORD PTR [eax]
  401222:	inc    DWORD PTR [eax]
  401224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401225:	jecxz  0x401203
  401227:	jb     0x401273
  401229:	jne    0x401269
  40122b:	(bad)  
  40122c:	inc    DWORD PTR [ebp+0x0]
  40122f:	dec    esp
  401231:	add    BYTE PTR [ebx+0xe6333cc],al
  401237:	push   esi
  401238:	and    DWORD PTR [eax+0x4bffff81],ebp
  40123e:	add    BYTE PTR [eax],al
  401240:	inc    DWORD PTR [ebx-0x44dfff7d]
  401246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401247:	sti    
  401248:	aad    0xf2
  40124a:	or     ecx,DWORD PTR [ecx+0x5f00]
  401250:	(bad)  
  401251:	(bad)  
  401252:	inc    DWORD PTR [eax]
  401254:	int3   
  401255:	gs pop ds
  401257:	cmp    DWORD PTR [esi+edi*4+0x5e00cc56],ebx
  40125e:	(bad)  
  40125f:	inc    DWORD PTR [eax]
  401261:	inc    DWORD PTR [ebx+0x6dca3189]
  401267:	aaa    
  401268:	gs dec eax
  40126a:	push   0x89d400ff
  40126f:	add    BYTE PTR [eax],al
  401271:	(bad)  
  401272:	inc    DWORD PTR [ebx+0x76230002]
  401278:	(bad)  
  401279:	daa    
  40127a:	test   al,0x89
  40127c:	add    al,bh
  40127e:	(bad)  
  40127f:	inc    DWORD PTR [ebx-0x5000ff01]
  401285:	dec    esi
  401286:	iret   
  401287:	mov    esp,tr7
  40128a:	test   DWORD PTR [ecx-0x7cff2901],ecx
  401290:	add    bh,bh
  401292:	add    DWORD PTR [eax],0xffffffab
  401295:	pushf  
  401296:	adc    eax,0x372e233c
  40129b:	add    ah,cl
  40129d:	sub    eax,0x8900
  4012a2:	inc    DWORD PTR [ebx-0x1c6e96f9]
  4012a8:	ficom  WORD PTR [ebx+0x16]
  4012ab:	int3   
  4012ac:	add    BYTE PTR [edi+edi*8],dl
  4012af:	mov    DWORD PTR [eax],eax
  4012b1:	inc    DWORD PTR [eax]
  4012b3:	add    BYTE PTR [esi+0x7c],cl
  4012b6:	jae    0x40132e
  4012b8:	cs (bad) 
  4012ba:	jle    0x4012bb
  4012bc:	add    ch,al
  4012be:	(bad)  
  4012bf:	dec    esp
  4012c1:	add    bh,bh
  4012c3:	dec    eax
  4012c5:	jmp    esi
  4012c7:	jge    0x4012d7
  4012c9:	dec    di
  4012cb:	int3   
  4012cc:	(bad)  
  4012cd:	mov    ebx,0xff000000
  4012d2:	add    bh,bh
  4012d4:	mov    eax,0x1663f6df
  4012d9:	lea    ecx,[ebp+0xb683ff]
  4012df:	inc    DWORD PTR [ebx+0x4aff0000]
  4012e5:	mov    ?,edx
  4012e7:	pop    ds
  4012e8:	adc    DWORD PTR [ebp-0x62007c8a],0xffffff00
  4012f2:	add    DWORD PTR [eax],0x1e
  4012f5:	add    DWORD PTR ds:0xa080564b,ecx
  4012fb:	inc    DWORD PTR [eax]
  4012fd:	jns    0x4012fe
  4012ff:	(bad)  
  401300:	(bad)  
  401301:	dec    DWORD PTR [ecx-0x46cfe934]
  401307:	scas   al,BYTE PTR es:[edi]
  401308:	cmp    al,0x56
  40130a:	xchg   edx,eax
  40130b:	add    BYTE PTR [eax],al
  40130d:	mov    dl,0x89
  40130f:	add    bh,bh
  401311:	int3   
  401312:	dec    esp
  401314:	in     al,0x78
  401316:	push   esp
  401317:	int3   
  401318:	xchg   ebp,eax
  401319:	in     eax,dx
  40131a:	xor    eax,0x7700ff
  40131f:	add    ah,cl
  401321:	dec    esp
  401323:	mov    DWORD PTR [eax],ebx
  401325:	es adc al,0xec
  401328:	das    
  401329:	sbb    BYTE PTR [edi-0x7d],al
  40132c:	dec    DWORD PTR [edi-0x34]
  40132f:	inc    DWORD PTR [eax]
  401331:	inc    DWORD PTR [ebx+0x2a2b15cc]
  401337:	stos   BYTE PTR es:[edi],al
  401338:	cmc    
  401339:	or     al,0xea
  40133b:	add    bh,bh
  40133d:	ud0    ecx,esp
  401340:	add    DWORD PTR [ebx-0x606e0034],0xffffffb8
  401347:	sub    ah,BYTE PTR cs:[edi+0x36]
  40134b:	add    BYTE PTR [eax],al
  40134d:	dec    esi
  40134e:	add    BYTE PTR [eax],al
  401350:	add    bh,bh
  401352:	dec    DWORD PTR [ecx+0x788c8419]
  401358:	push   eax
  401359:	sahf   
  40135a:	(bad)  
  40135b:	(bad)  
  40135c:	inc    DWORD PTR ds:0x83ffff00
  401362:	add    bh,bh
  401364:	fild   QWORD PTR [edx]
  401366:	xor    DWORD PTR [ecx+0xdf2015],ecx
  40136c:	push   eax
  40136e:	add    ah,cl
  401370:	add    BYTE PTR [eax],al
  401372:	int3   
  401373:	jmp    FWORD PTR [esi-0x5]
  401376:	nop
  401377:	int    0x43
  401379:	sub    eax,DWORD PTR [esi-0x7d]
  40137c:	dec    ebp
  40137e:	(bad)  
  40137f:	dec    DWORD PTR [ecx+0x6e0000ff]
  401385:	mov    bh,BYTE PTR [esi+0x2d]
  401388:	stc    
  401389:	scas   eax,DWORD PTR es:[edi]
  40138a:	jo     0x40138c
  40138c:	add    BYTE PTR [ebx+0x0],dl
  40138f:	(bad)  
  401390:	(bad)  
  401391:	dec    DWORD PTR [ecx-0x18680b01]
  401397:	and    ebx,ebx
  401399:	out    dx,eax
  40139a:	out    dx,al
  40139b:	add    bh,bh
  40139d:	or     DWORD PTR [eax],eax
  40139f:	inc    DWORD PTR [eax]
  4013a1:	int3   
  4013a2:	inc    DWORD PTR [eax]
  4013a4:	pop    ecx
  4013a5:	cwde   
  4013a6:	retf   
  4013a7:	jnp    0x40135a
  4013a9:	mov    ecx,0x1fff89e5
  4013ae:	add    BYTE PTR [ebx-0x7c007c01],al
  4013b4:	int    0x59
  4013b6:	pop    esp
  4013b7:	in     al,0xfd
  4013b9:	test   BYTE PTR [edi+edi*8-0x4501],bh
  4013c0:	add    bh,bh
  4013c2:	add    BYTE PTR [eax],al
  4013c4:	dec    ebp
  4013c5:	xchg   edi,eax
  4013c6:	ss mov edi,0xff620a92
  4013cc:	push   DWORD PTR [edi-0x34]
  4013cf:	(bad)  
  4013d0:	(bad)  
  4013d1:	inc    DWORD PTR [eax]
  4013d3:	jmp    FWORD PTR [ebp-0x5036f041]
  4013d9:	inc    eax
  4013da:	and    edi,edi
  4013dc:	jmp    FWORD PTR [ebx-0x1]
  4013df:	cmp    edi,0x0
  4013e2:	add    BYTE PTR [eax],al
  4013e4:	sub    edi,DWORD PTR [ecx]
  4013e6:	or     DWORD PTR [ecx-0x489d8e],ebp
  4013ec:	inc    DWORD PTR [eax]
  4013ee:	add    bh,bh
  4013f0:	inc    DWORD PTR [ebx+0x1e9e83ff]
  4013f6:	mov    al,ds:0xa20b7839
  4013fb:	(bad)  
  4013fc:	call   FWORD PTR [ecx-0x7d]
  4013ff:	int3   
  401400:	mov    DWORD PTR [eax],eax
  401402:	int3   
  401403:	inc    DWORD PTR [esi-0x12]
  401406:	adc    ebp,DWORD PTR [eax+0x6c]
  401409:	stos   DWORD PTR es:[edi],eax
  40140a:	test   BYTE PTR [ebx-0xffd77d],al
  401410:	(bad)  
  401411:	(bad)  
  401412:	(bad)  
  401413:	call   FWORD PTR [edx+edi*8+0x4b]
  401417:	icebp  
  401418:	xchg   esp,eax
  401419:	pop    ss
  40141a:	inc    DWORD PTR es:[ebx+0xff00b8]
  401421:	add    DWORD PTR [ebx-0x6365747d],0xffffffe9
  401428:	test   al,0x43
  40142a:	in     al,0xcc
  40142c:	int3   
  40142d:	aas    
  40142e:	dec    esp
  401430:	add    BYTE PTR [ecx-0x2b610100],cl
  401436:	dec    ecx
  401437:	push   es
  401438:	or     al,0x26
  40143a:	and    al,0x83
  40143c:	call   ebx
  40143e:	inc    DWORD PTR [eax]
  401440:	add    BYTE PTR [eax],al
  401442:	inc    DWORD PTR [eax]
  401444:	add    DWORD PTR [ebp+0x5748417a],eax
  40144a:	data16 (bad) 
  40144c:	(bad)  
  40144d:	mov    ebp,0xff00ffcc
  401452:	int3   
  401453:	add    BYTE PTR [esp+ecx*8-0x1dcf8ef3],al
  40145a:	push   edx
  40145b:	add    BYTE PTR [eax],al
  40145d:	popa   
  40145e:	add    bh,bh
  401460:	inc    DWORD PTR [eax]
  401462:	add    bh,bh
  401464:	or     ecx,esp
  401466:	ror    BYTE PTR cs:[esi],0xfa
  40146a:	(bad)  
  40146d:	test   al,0x0
  40146f:	(bad)  
  401470:	(bad)  
  401471:	inc    DWORD PTR [ebx+0x7b1eb9cc]
  401477:	push   ebx
  401478:	push   edi
  401479:	fmulp  st(0),st
  40147b:	(bad)  
  40147c:	call   FWORD PTR [ecx+0x0]
  40147f:	add    BYTE PTR [ecx-0x50330001],cl
  401485:	call   0xffd6:0x2287697b
  40148c:	dec    DWORD PTR [eax-0x7d]
  40148f:	inc    DWORD PTR [eax]
  401491:	inc    DWORD PTR [eax]
  401493:	int3   
  401494:	shl    DWORD PTR [esi+0x75],cl
  401497:	mov    eax,ds:0xffe02de5
  40149c:	add    BYTE PTR [edi],bl
  40149e:	add    DWORD PTR [eax],0x0
  4014a1:	mov    DWORD PTR [eax],eax
  4014a3:	call   DWORD PTR [ecx-0x222bb3f6]
  4014a9:	mov    al,ds:0x26ff00ec
  4014ae:	add    bh,bh
  4014b0:	inc    DWORD PTR [ebx+0x70968989]
  4014b6:	adc    BYTE PTR [edx-0x3a2374],0xff
  4014bd:	push   cs
  4014be:	inc    DWORD PTR [ebx+0xff83ff]
  4014c4:	mov    WORD PTR [edx],es
  4014c6:	ins    DWORD PTR es:[edi],dx
  4014c7:	pop    es
  4014c8:	popf   
  4014c9:	cmc    
  4014ca:	data16 add bh,bh
  4014cd:	sti    
  4014ce:	add    BYTE PTR [eax],al
  4014d0:	inc    DWORD PTR [eax]
  4014d2:	inc    DWORD PTR [eax]
  4014d4:	or     DWORD PTR [esi+0x26],ecx
  4014d7:	push   ds
  4014d8:	mov    ch,0x5
  4014da:	das    
  4014db:	(bad)  
  4014dc:	jmp    FWORD PTR [eax+eax*1+0x0]
  4014e0:	(bad)  
  4014e1:	(bad)  
  4014e2:	(bad)  
  4014e3:	call   DWORD PTR [eax+0x4e7950bd]
  4014e9:	dec    edi
  4014ea:	stos   DWORD PTR es:[edi],eax
  4014eb:	inc    DWORD PTR [ebx-0xff3a]
  4014f1:	inc    DWORD PTR [ebx-0x7f197b77]
  4014f7:	jmp    0xff690aad
  4014fc:	call   DWORD PTR [eax+eax*1+0xff8300]
  401503:	jmp    FWORD PTR [ebp-0x54ebaa3b]
  401509:	add    BYTE PTR [edx],ch
  40150b:	add    bh,bh
  40150d:	push   esp
  40150e:	(bad)  
  40150f:	inc    DWORD PTR [eax]
  401511:	(bad)  
  401512:	dec    DWORD PTR [ecx+0x2bbf087d]
  401518:	jae    0x401510
  40151a:	push   edi
  40151b:	(bad)  
  40151c:	push   DWORD PTR [ebx-0x7c01]
  401522:	mov    DWORD PTR [eax],eax
  401524:	sub    BYTE PTR [eax],ah
  401526:	iret   
  401527:	dec    eax
  401528:	adc    dh,ah
  40152a:	mov    edi,0xff5483ff
  40152f:	inc    DWORD PTR [eax]
  401531:	add    bh,bh
  401533:	inc    DWORD PTR [ebx-0x3b]
  401536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401537:	icebp  
  401538:	mov    ebx,0xff00d69a
  40153d:	das    
  40153e:	mov    DWORD PTR [ebx-0xffff01],eax
  401544:	out    0xec,eax
  401546:	adc    al,BYTE PTR [edi+0x64]
  401549:	push   es
  40154a:	jecxz  0x40154b
  40154c:	call   FWORD PTR [ecx]
  40154e:	(bad)  
  40154f:	inc    DWORD PTR [ebx-0x4ffff01]
  401555:	mov    cl,0x51
  401557:	adc    eax,eax
  401559:	fs cs add bh,bh
  40155d:	daa    
  40155e:	inc    DWORD PTR [ebx-0x76760001]
  401564:	dec    ebx
  401565:	sbb    dl,al
  401567:	push   eax
  401568:	xchg   esp,eax
  401569:	lods   eax,DWORD PTR ds:[esi]
  40156a:	into   
  40156b:	inc    DWORD PTR [eax]
  40156d:	mov    cl,0xff
  40156f:	(bad)  
  401570:	inc    DWORD PTR [eax]
  401572:	inc    DWORD PTR [ebx-0x4a48d5ac]
  401578:	dec    ecx
  401579:	les    edx,FWORD PTR ds:0xffddffff
  40157f:	(bad)  
  401580:	inc    DWORD PTR [eax]
  401582:	int3   
  401583:	add    BYTE PTR [ebx-0x6e],al
  401586:	pop    ss
  401587:	les    edi,FWORD PTR [edx+0x3c]
  40158a:	idiv   bh
  40158c:	call   DWORD PTR [ebx-0x7d]
  40158f:	add    bh,bh
  401591:	add    BYTE PTR [eax],al
  401593:	jmp    FWORD PTR [edx]
  401595:	sub    BYTE PTR [esp+eax*1],cl
  401598:	leave  
  401599:	xchg   esp,eax
  40159a:	mov    ebp,0x7e8989
  40159f:	int3   
  4015a0:	inc    DWORD PTR [ebx-0x5cb1ff7d]
  4015a6:	sub    BYTE PTR [eax+0x5b882e],bl
  4015ac:	add    bl,cl
  4015ae:	or     esp,0xffffff83
  4015b1:	add    ah,cl
  4015b3:	mov    esi,edx
  4015b5:	push   0xffffffd2
  4015b7:	xor    al,dh
  4015b9:	in     eax,0xcd
  4015bb:	add    bh,bh
  4015bd:	jmp    0x4015be
  4015bf:	add    BYTE PTR [ebx-0x6a003301],al
  4015c5:	in     eax,0x87
  4015c7:	sub    bl,BYTE PTR [eax-0x766efe]
  4015cd:	idiv   edi
  4015cf:	add    BYTE PTR [ebx+0x11ffff89],al
  4015d5:	mov    esi,0x81bbca6a
  4015da:	mov    ds:0x40ff83,al
  4015df:	int3   
  4015e0:	add    bh,bh
  4015e2:	(bad)  
  4015e3:	call   DWORD PTR ds:0x5cfc8782
  4015e9:	inc    eax
  4015ea:	call   0x89b19eef
  4015ef:	dec    esp
  4015f1:	(bad)  
  4015f2:	inc    DWORD PTR [eax]
  4015f4:	cdq    
  4015f5:	out    0x27,al
  4015f7:	jbe    0x4015af
  4015f9:	in     al,dx
  4015fa:	repz int3 
  4015fc:	add    BYTE PTR [edi-0x1],bh
  4015ff:	mov    DWORD PTR [eax],eax
  401601:	int3   
  401602:	add    bh,bh
  401604:	xchg   ebp,eax
  401605:	fisub  WORD PTR [ebp-0xbf5d49b]
  40160b:	add    BYTE PTR [eax],al
  40160d:	scas   al,BYTE PTR es:[edi]
  40160e:	add    BYTE PTR [ebx+0xffff83],al
  401614:	stos   BYTE PTR es:[edi],al
  401615:	ret    0xd682
  401618:	call   0x49:0xff89f9c2
  40161f:	inc    DWORD PTR [eax]
  401621:	dec    DWORD PTR [ecx+0x627e5a83]
  401627:	into   
  401628:	div    BYTE PTR [edx]
  40162a:	push   eax
  40162b:	cmp    edi,0x26
  40162e:	inc    DWORD PTR [eax]
  401630:	dec    esp
  401632:	(bad)  
  401633:	(bad)  
  401634:	std    
  401635:	and    al,0x62
  401637:	fistp  QWORD PTR [edi-0xe8ae]
  40163d:	outs   dx,DWORD PTR ds:[esi]
  40163e:	add    BYTE PTR [eax],al
  401640:	add    DWORD PTR [eax],0xffffffff
  401643:	call   DWORD PTR [ebx]
  401645:	pop    ebx
  401646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401647:	xchg   edx,eax
  401648:	(bad)  
  401649:	dec    esp
  40164a:	jae    0x40164c
  40164c:	sbb    DWORD PTR [ebx],0xffffffff
  40164f:	inc    DWORD PTR [eax]
  401651:	(bad)  
  401652:	(bad)  
  401653:	push   DWORD PTR [esi]
  401655:	fdiv   st,st(3)
  401657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401658:	retf   
  401659:	imul   BYTE PTR [ecx-0x3356ff77]
  40165f:	(bad)  
  401660:	inc    DWORD PTR [ebx+0x1a3c00ff]
  401666:	jle    0x4016ce
  401668:	mov    ecx,0xff0088f5
  40166d:	jno    0x40166f
  40166f:	dec    esp
  401671:	int3   
  401672:	int3   
  401673:	(bad)  
  401674:	sti    
  401675:	aam    0xf
  401677:	(bad)  
  401678:	xchg   ecx,eax
  401679:	stos   BYTE PTR es:[edi],al
  40167a:	fdivr  st,st(7)
  40167c:	dec    edi
  40167e:	add    bh,bh
  401680:	add    bh,bh
  401682:	(bad)  
  401683:	jmp    FWORD PTR [esp+edx*2+0x3e3f78eb]
  40168a:	xchg   edi,eax
  40168b:	int3   
  40168c:	call   esi
  40168e:	(bad)  
  40168f:	inc    DWORD PTR [ebx-0x5200007d]
  401695:	xlat   BYTE PTR ds:[ebx]
  401696:	dec    esi
  401697:	shl    bl,1
  401699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40169a:	xchg   ebp,eax
  40169b:	inc    DWORD PTR [eax]
  40169d:	pop    ebx
  40169e:	dec    esp
  4016a0:	add    bh,bh
  4016a2:	add    bh,bh
  4016a4:	ds dec esp
  4016a6:	retf   
  4016a7:	push   edx
  4016a8:	and    BYTE PTR [esp+ebx*8-0x370001],cl
  4016af:	inc    DWORD PTR [ebx-0x447cff01]
  4016b5:	pop    ebp
  4016b6:	or     eax,0xedee8920
  4016bb:	inc    DWORD PTR [ebx-0x7c006a]
  4016c1:	(bad)  
  4016c2:	(bad)  
  4016c3:	call   FWORD PTR [ecx+0x7486d417]
  4016c9:	dec    eax
  4016ca:	cmp    bh,0x0
  4016cd:	add    al,0xff
  4016cf:	(bad)  
  4016d0:	(bad)  
  4016d1:	inc    DWORD PTR [eax]
  4016d3:	jmp    FWORD PTR [ebx-0x5c]
  4016d6:	enter  0xed0f,0x2
  4016da:	aad    0xff
  4016dc:	jmp    DWORD PTR [esi]
  4016de:	(bad)  
  4016df:	(bad)  
  4016e0:	dec    esp
  4016e2:	add    BYTE PTR [eax],al
  4016e4:	daa    
  4016e5:	dec    DWORD PTR [ebp-0x54897a59]
  4016eb:	inc    DWORD PTR [eax]
  4016ed:	and    bh,bh
  4016ef:	add    BYTE PTR [eax],al
  4016f1:	add    BYTE PTR [eax],al
  4016f3:	sub    DWORD PTR [esp+ebx*2+0xc],0xffffffaa
  4016f8:	dec    ecx
  4016f9:	or     edx,edi
  4016fb:	(bad)  
  4016fc:	dec    ebp
  4016fe:	(bad)  
  4016ff:	(bad)  
  401700:	inc    DWORD PTR [eax]
  401702:	add    BYTE PTR [ebx-0x57ca8f30],al
  401708:	and    DWORD PTR [eax+0x29],eax
  40170b:	inc    DWORD PTR [eax]
  40170d:	or     edi,edi
  40170f:	(bad)  
  401710:	inc    DWORD PTR [eax]
  401712:	cmp    edi,0xffffffcb
  401715:	ret    
  401716:	push   ebp
  401717:	cmp    DWORD PTR [ebx],eax
  401719:	mov    bl,0x39
  40171b:	add    BYTE PTR [eax],al
  40171d:	dec    ebx
  40171e:	int3   
  40171f:	add    BYTE PTR [ebx-0x1376ff34],al
  401725:	or     al,0x87
  401727:	test   eax,0x89b47f9a
  40172c:	inc    DWORD PTR ds:0xcc
  401732:	inc    DWORD PTR [ebx+0x172981ca]
  401738:	cmp    edx,DWORD PTR [edx+eiz*1]
  40173b:	(bad)  
  40173c:	inc    DWORD PTR [edx-0x1]
  40173f:	add    bh,bh
  401741:	inc    DWORD PTR [ebx+0x452f01ff]
  401747:	mov    ecx,0xff0aad0b
  40174c:	dec    DWORD PTR [edi-0x1]
  40174f:	inc    DWORD PTR [eax]
  401751:	(bad)  
  401752:	inc    DWORD PTR [ebx+0x1538368f]
  401758:	jo     0x40175a
  40175a:	mov    bl,0x83
  40175c:	push   DWORD PTR [ebx]
  40175e:	inc    DWORD PTR [ebx+0xff0089]
  401764:	int3   
  401765:	sti    
  401766:	pop    es
  401767:	outs   dx,BYTE PTR ds:[esi]
  401768:	jns    0x401705
  40176a:	push   edi
  40176b:	add    BYTE PTR [eax],al
  40176d:	or     al,0xff
  40176f:	add    bh,bh
  401771:	add    BYTE PTR [eax],al
  401773:	push   ecx
  401775:	mov    bh,BYTE PTR [ebp-0x490312c4]
  40177b:	(bad)  
  40177c:	call   FWORD PTR [ecx-0x1]
  40177f:	add    BYTE PTR [eax],al
  401781:	dec    esp
  401783:	cmp    DWORD PTR [edx-0x6b4996d7],0x25
  40178a:	nop
  40178b:	add    bh,bh
  40178d:	inc    DWORD PTR cs:[eax]
  401790:	(bad)  
  401791:	dec    DWORD PTR [ecx-0x5dc3697d]
  401797:	and    al,ah
  401799:	inc    ecx
  40179a:	mov    cl,0xff
  40179c:	add    BYTE PTR [eax],ch
  40179e:	inc    DWORD PTR [eax]
  4017a0:	add    bh,bh
  4017a2:	add    BYTE PTR [eax],al
  4017a4:	sub    dl,0x35
  4017a7:	jb     0x401809
  4017a9:	pop    ds
  4017aa:	jae    0x401735
  4017ac:	add    dh,ah
  4017ae:	inc    DWORD PTR [ebx-0x100]
  4017b4:	push   0x65a556a4
  4017b9:	int    0x2c
  4017bb:	int3   
  4017bc:	int3   
  4017bd:	add    DWORD PTR [bx+si],0xffffffff
  4017c1:	dec    DWORD PTR [ecx-0xd394e01]
  4017c7:	cmp    DWORD PTR [edx-0x7c00b2dd],0x83ff8343
  4017d1:	mov    edi,edi
  4017d3:	dec    DWORD PTR [esi]
  4017d5:	ss pop es
  4017d7:	jecxz  0x4017d9
  4017d9:	mov    ?,WORD PTR [edi-0x1]
  4017dc:	add    al,ch
  4017de:	inc    DWORD PTR [eax]
  4017e0:	dec    DWORD PTR [ecx-0x4116ff01]
  4017e6:	or     al,0x4f
  4017e8:	cmp    esp,DWORD PTR [ecx-0x7b]
  4017eb:	cmp    edi,0xffffffdf
  4017ee:	inc    DWORD PTR [eax]
  4017f0:	add    bh,bh
  4017f2:	add    bh,bh
  4017f4:	jg     0x4017cc
  4017f6:	pop    ss
  4017f7:	inc    edi
  4017f8:	clc    
  4017f9:	sub    esi,DWORD PTR [edi-0x77]
  4017fc:	mov    DWORD PTR [ecx],ebx
  4017fe:	(bad)  
  4017ff:	(bad)  
  401800:	dec    DWORD PTR [ecx-0x3850001]
  401806:	rcr    DWORD PTR [ebx-0x12],1
  401809:	and    eax,0x72ffff75
  40180e:	add    ah,cl
  401810:	inc    DWORD PTR [eax]
  401812:	inc    DWORD PTR [ebx-0x613c2f73]
  401818:	sahf   
  401819:	xchg   edx,eax
  40181a:	cmp    eax,0xff35ffcc
  40181f:	int3   
  401820:	add    BYTE PTR [ecx-0x7144ff01],cl
  401826:	loopne 0x401810
  401828:	icebp  
  401829:	scas   al,BYTE PTR es:[edi]
  40182a:	push   cs
  40182b:	or     esp,0xffffffb2
  40182e:	add    BYTE PTR [ebx-0x337cff01],al
  401834:	(bad)  
  401835:	shl    BYTE PTR [esi],1
  401837:	mov    DWORD PTR [ebx-0x7ce4e5],ebp
  40183d:	pusha  
  40183e:	(bad)  
  40183f:	inc    DWORD PTR [eax]
  401841:	add    bh,bh
  401843:	add    BYTE PTR [edx-0x5474f4f],ah
  401849:	jne    0x40186b
  40184b:	add    BYTE PTR [eax],al
  40184d:	mov    ebx,0xff00
  401852:	cmp    edi,0xffffff9f
  401855:	cdq    
  401856:	xchg   ebp,eax
  401857:	inc    esi
  401858:	or     al,0x54
  40185a:	mov    dl,0x0
  40185c:	int3   
  40185d:	jae    0x40185e
  40185f:	add    bh,bh
  401861:	(bad)  
  401862:	(bad)  
  401863:	dec    ebx
  401865:	lods   al,BYTE PTR ds:[esi]
  401866:	gs lahf 
  401868:	scas   al,BYTE PTR es:[edi]
  401869:	test   DWORD PTR [edi],ebx
  40186b:	(bad)  
  40186c:	push   DWORD PTR [edx-0x7d]
  40186f:	inc    DWORD PTR [eax]
  401871:	inc    DWORD PTR [eax]
  401873:	(bad)  
  401874:	(bad)  [ebx-0x17c40171]
  40187a:	jns    0x40187b
  40187c:	inc    DWORD PTR [edx-0x1]
  401882:	add    BYTE PTR [ecx-0x16636071],cl
  401888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401889:	jne    0x40189f
  40188b:	(bad)  
  40188c:	dec    DWORD PTR [eax+0xff8389]
  401892:	add    bh,bh
  401894:	push   es
  401895:	rcr    BYTE PTR [edi-0x5b504e56],0xff
  40189c:	add    BYTE PTR [edi],ch
  40189e:	add    bh,bh
  4018a0:	dec    esp
  4018a2:	add    BYTE PTR [eax],al
  4018a4:	bound  eax,QWORD PTR [esi]
  4018a6:	xor    esp,esp
  4018a8:	fist   DWORD PTR [esi+eiz*1]
  4018ab:	mov    DWORD PTR [ebx-0xff0012],eax
  4018b1:	add    ah,cl
  4018b3:	add    BYTE PTR [ebx],ch
  4018b5:	dec    esp
  4018b6:	dec    edx
  4018b7:	dec    esi
  4018b8:	lods   eax,DWORD PTR ds:[esi]
  4018b9:	imul   eax,DWORD PTR [eax-0x1],0xffffff83
  4018bd:	pushf  
  4018be:	add    bh,bh
  4018c0:	dec    DWORD PTR [ecx-0x69a2ff7d]
  4018c6:	ficomp WORD PTR [esi]
  4018c8:	mov    ds:0xffff9107,eax
  4018cd:	or     bh,bh
  4018cf:	(bad)  
  4018d0:	inc    DWORD PTR [eax]
  4018d2:	(bad)  
  4018d3:	inc    ebx
  4018d5:	xlat   BYTE PTR ds:[ebx]
  4018d6:	sbb    eax,0x4df99f57
  4018db:	(bad)  
  4018dc:	call   eax
  4018de:	inc    DWORD PTR [ebx-0xff0034]
  4018e4:	mov    al,ch
  4018e6:	out    0x8a,eax
  4018e8:	and    BYTE PTR [ecx+esi*8-0x1],ah
  4018ec:	jmp    DWORD PTR [ecx-0x7c330034]
  4018f2:	inc    DWORD PTR [eax]
  4018f4:	mov    BYTE PTR [ebp-0x5f],ah
  4018f7:	dec    esi
  4018f8:	enter  0xe2e6,0xcc
  4018fc:	add    BYTE PTR [ebx-0x1],bl
  4018ff:	add    bh,bh
  401901:	add    BYTE PTR [eax],al
  401903:	int3   
  401904:	and    al,0x4f
  401906:	pop    esi
  401907:	shr    DWORD PTR [ebx+edx*4-0x7733ffd3],0x0
  40190f:	inc    DWORD PTR [eax]
  401911:	(bad)  
  401912:	(bad)  
  401913:	(bad)  
  401914:	sti    
  401915:	xchg   BYTE PTR ds:0x34fb6e49,dl
  40191b:	(bad)  
  40191c:	inc    DWORD PTR [edx-0x100]
  401922:	(bad)  
  401923:	dec    DWORD PTR [ecx-0x465b5548]
  401929:	jl     0x4019a3
  40192b:	add    bh,bh
  40192d:	mov    al,ds:0x83ffff
  401932:	dec    DWORD PTR [ecx-0x39e1811a]
  401938:	repnz cli 
  40193a:	dec    ebp
  40193b:	(bad)  
  40193c:	jmp    ecx
  40193e:	(bad)  
  40193f:	inc    DWORD PTR [eax]
  401941:	add    bh,bh
  401943:	call   FWORD PTR [esi+0xcc402d7]
  401949:	outs   dx,DWORD PTR ds:[esi]
  40194a:	xor    bh,bh
  40194c:	adc    DWORD PTR [edi-0xff0077],0xffffffff
  401953:	int3   
  401954:	sub    ecx,DWORD PTR [ecx-0x40]
  401957:	sbb    BYTE PTR [ebx-0x4ef0],dh
  40195d:	push   eax
  40195e:	(bad)  
  40195f:	inc    DWORD PTR [eax]
  401961:	cmp    edi,0x0
  401964:	ret    
  401965:	dec    esi
  401966:	test   BYTE PTR [edi+eiz*4],ch
  401969:	arpl   WORD PTR [edi+edi*8-0x8501],bx
  401970:	int3   
  401971:	(bad)  
  401972:	(bad)  
  401973:	inc    eax
  401975:	push   cs
  401976:	in     al,0x3d
  401978:	inc    edx
  401979:	pusha  
  40197a:	pop    eax
  40197b:	inc    DWORD PTR [eax]
  40197d:	mov    dh,0x0
  40197f:	add    BYTE PTR [ecx-0x287c0100],cl
  401985:	imul   esi,DWORD PTR [esi+0x256ae797],0xffffffff
  40198c:	int3   
  40198d:	mov    al,ds:0xff00ff
  401992:	add    bh,bh
  401994:	jb     0x40193f
  401996:	push   es
  401997:	clc    
  401998:	inc    ebx
  401999:	jnp    0x4019ea
  40199b:	mov    DWORD PTR [ecx+0x83ff8c],ecx
  4019a1:	(bad)  
  4019a2:	inc    DWORD PTR [eax]
  4019a4:	xchg   eax,eax
  4019a6:	xor    ebx,DWORD PTR [edi-0x7f0e4a]
  4019ac:	add    BYTE PTR [ebp+0xff],ah
  4019b2:	add    DWORD PTR [eax],0xffffff96
  4019b5:	jecxz  0x401a08
  4019b7:	mov    ah,0xac
  4019b9:	adc    BYTE PTR [edx+0xaf00ff],cl
  4019bf:	int3   
  4019c0:	add    bh,bh
  4019c2:	(bad)  
  4019c3:	call   DWORD PTR [ebp+0x2af7f214]
  4019c9:	ins    DWORD PTR es:[edi],dx
  4019ca:	xlat   BYTE PTR ds:[ebx]
  4019cb:	inc    DWORD PTR [eax]
  4019cd:	sub    edi,edi
  4019cf:	int3   
  4019d0:	int3   
  4019d1:	add    bh,bh
  4019d3:	xor    DWORD PTR [eax*4+0x792bb352],0x12
  4019db:	int3   
  4019dc:	int3   
  4019dd:	xchg   DWORD PTR [eax],eax
  4019df:	add    ah,cl
  4019e1:	add    BYTE PTR [ecx+0x498050cc],cl
  4019e7:	sbb    DWORD PTR [esi],edx
  4019e9:	lahf   
  4019ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019eb:	inc    DWORD PTR [eax]
  4019ed:	xchg   esi,eax
  4019ee:	add    DWORD PTR [eax],0x0
  4019f1:	inc    DWORD PTR [eax]
  4019f3:	dec    DWORD PTR [esi+0x39f74848]
  4019f9:	adc    al,0x85
  4019fb:	(bad)  
  4019fc:	(bad)  
  4019fd:	out    dx,al
  4019fe:	inc    DWORD PTR [eax]
  401a00:	int3   
  401a01:	inc    DWORD PTR [eax]
  401a03:	jmp    eax
  401a05:	mov    eax,ds:0x1e03d9d4
  401a0a:	or     edi,edi
  401a0c:	add    BYTE PTR [eax+eax*1-0x1],dl
  401a10:	add    bh,bh
  401a12:	dec    esp
  401a14:	or     eax,0xebcd1f12
  401a19:	loop   0x401a6b
  401a1b:	inc    DWORD PTR [eax]
  401a1d:	dec    ebx
  401a1e:	(bad)  
  401a1f:	inc    DWORD PTR [eax]
  401a21:	add    ah,cl
  401a23:	inc    DWORD PTR [ebp-0x6642122f]
  401a29:	addr16 pop edx
  401a2b:	add    BYTE PTR [ecx-0x7c33ffab],cl
  401a31:	(bad)  
  401a32:	inc    DWORD PTR [eax]
  401a34:	inc    eax
  401a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a36:	jge    0x4019e2
  401a38:	lahf   
  401a39:	int    0xcd
  401a3b:	int3   
  401a3c:	int3   
  401a3d:	outs   dx,DWORD PTR ds:[esi]
  401a3e:	int3   
  401a3f:	add    bh,bh
  401a41:	cmp    edi,0xffffff83
  401a44:	xor    eax,0xce78205f
  401a49:	push   0x6f
  401a4b:	(bad)  
  401a4c:	(bad)  
  401a4d:	mov    esi,0xff008389
  401a52:	add    DWORD PTR [eax],0x75
  401a55:	mov    dl,0xff
  401a57:	mov    ds:0xcc21c166,al
  401a5c:	cmp    DWORD PTR [ebp-0x1],0xffffffff
  401a60:	dec    DWORD PTR [ecx-0x47aff01]
  401a66:	mov    WORD PTR [eax-0x4c],fs
  401a69:	sbb    eax,0x33ff0032
  401a6e:	(bad)  
  401a6f:	inc    DWORD PTR [eax]
  401a71:	int3   
  401a72:	int3   
  401a73:	call   FWORD PTR [ebp+0x75]
  401a76:	cmp    eax,0x8f464bb6
  401a7b:	mov    edi,edi
  401a7d:	mov    cs,esp
  401a7f:	(bad)  
  401a80:	(bad)  
  401a81:	(bad)  
  401a82:	dec    esp
  401a84:	mov    esp,DWORD PTR [esi+eiz*2-0x1e6ebe5c]
  401a8b:	(bad)  
  401a8c:	(bad)  
  401a8d:	std    
  401a8e:	(bad)  
  401a8f:	dec    esp
  401a91:	int3   
  401a92:	add    BYTE PTR [eax],al
  401a94:	imul   edi,DWORD PTR [edi+0x1a3aa2a],0xffffffa2
  401a9b:	inc    DWORD PTR [eax]
  401a9d:	mov    ch,0xff
  401a9f:	dec    DWORD PTR [ecx+0x340000ff]
  401aa5:	xor    dl,bh
  401aa7:	dec    ecx
  401aa8:	out    0x3c,eax
  401aaa:	add    bh,bh
  401aac:	(bad)  
  401aad:	call   0x401ab1
  401ab2:	add    bh,bh
  401ab4:	add    al,0x8b
  401ab6:	add    ebx,esi
  401ab8:	sbb    eax,edi
  401aba:	ret    
  401abb:	inc    DWORD PTR [eax]
  401abd:	(bad)  
  401abe:	int3   
  401abf:	add    bh,bh
  401ac1:	inc    DWORD PTR [ebx-0x6347c400]
  401ac7:	repnz test DWORD PTR [ecx-0x30ff00b6],esi
  401ace:	cmp    edi,0xffffff89
  401ad1:	inc    DWORD PTR [ebx+0x37164383]
  401ad7:	push   cs
  401ad8:	push   eax
  401ad9:	adc    dl,BYTE PTR [edi+edi*8]
  401adc:	call   FWORD PTR [ebx-0x1]
  401adf:	inc    DWORD PTR [eax]
  401ae1:	(bad)  
  401ae2:	inc    DWORD PTR [ebx+0x753f4be0]
  401ae8:	cmp    cl,BYTE PTR [ecx-0x6600ff23]
  401aee:	inc    DWORD PTR [eax]
  401af0:	inc    DWORD PTR [eax]
  401af2:	inc    DWORD PTR [eax]
  401af4:	cmp    DWORD PTR [eax-0x14],ecx
  401af7:	mov    al,0x89
  401af9:	or     al,0xd9
  401afb:	(bad)  
  401afc:	jmp    DWORD PTR [edi]
  401afe:	add    DWORD PTR [eax],0xffffffff
  401b01:	(bad)  
  401b02:	inc    DWORD PTR [eax]
  401b04:	sub    DWORD PTR [edi-0x26],ebx
  401b07:	jl     0x401af4
  401b09:	jle    0x401a8d
  401b0b:	or     DWORD PTR [ecx+0xff0079],0xffffffff
  401b12:	(bad)  
  401b13:	dec    DWORD PTR [eax+edi*4]
  401b16:	mov    ds:0x538b7b94,al
  401b1b:	mov    DWORD PTR [ecx+0x890015],ecx
  401b21:	inc    DWORD PTR [eax]
  401b23:	jmp    DWORD PTR [edx]
  401b25:	not    ch
  401b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b28:	mov    bh,0x12
  401b2a:	dec    esp
  401b2b:	add    BYTE PTR [ecx+0x83ff67],cl
  401b31:	(bad)  
  401b32:	inc    DWORD PTR [eax]
  401b34:	int    0xa3
  401b36:	call   FWORD PTR ds:0x897ed858
  401b3c:	add    ah,ah
  401b3e:	cmp    edi,0xffffffff
  401b41:	inc    DWORD PTR [eax]
  401b43:	add    BYTE PTR [ebx],ah
  401b45:	xor    DWORD PTR ss:[ecx],0x89987468
  401b4c:	add    BYTE PTR [edi-0x1],bl
  401b4f:	inc    DWORD PTR [eax]
  401b51:	dec    esp
  401b53:	mov    DWORD PTR [esi-0x2d91d050],edi
  401b59:	fcmovnu st,st(6)
  401b5b:	(bad)  
  401b5c:	jmp    FWORD PTR [ebp-0x1]
  401b62:	add    BYTE PTR [eax],al
  401b64:	pop    ebx
  401b65:	jno    0x401b56
  401b67:	mov    edi,0xccc5ba5a
  401b6c:	add    BYTE PTR [edx],ch
  401b6e:	add    BYTE PTR [eax],al
  401b70:	add    bh,bh
  401b72:	int3   
  401b73:	(bad)  
  401b74:	jmp    0x26877b60
  401b79:	sub    al,0xd2
  401b7b:	(bad)  
  401b7c:	call   FWORD PTR [ebp-0x1]
  401b7f:	add    BYTE PTR [eax],al
  401b81:	cmp    edi,0xffffff83
  401b84:	sub    al,0xc9
  401b86:	or     esp,DWORD PTR [esi-0xeca064]
  401b8c:	dec    DWORD PTR [edi]
  401b8e:	inc    DWORD PTR [eax]
  401b90:	mov    DWORD PTR [ecx+0x25fbffff],ecx
  401b96:	in     eax,dx
  401b97:	add    edx,DWORD PTR [eax+0xffef62]
  401b9d:	sar    edi,cl
  401b9f:	(bad)  
  401ba0:	inc    DWORD PTR [ebx-0x7bd90000]
  401ba6:	cmp    DWORD PTR [ebp-0x6d10f],ebx
  401bac:	call   ecx
  401bae:	inc    DWORD PTR [ebx+0xffffcc]
  401bb4:	retf   0x949a
  401bb7:	push   ebp
  401bb8:	dec    ebx
  401bb9:	mov    ebp,DWORD PTR ds:0xccc8ffff
  401bbf:	inc    DWORD PTR [ebx-0x3fffff7d]
  401bc5:	mov    esi,0xbb3deb45
  401bca:	mov    ah,0x0
  401bcc:	mov    DWORD PTR [edi],edx
  401bce:	add    bh,bh
  401bd0:	add    bh,bh
  401bd2:	add    DWORD PTR [eax],0xffffffa5
  401bd5:	aad    0xce
  401bd7:	test   BYTE PTR [esi+0x58],dl
  401bda:	test   al,0x89
  401bdc:	int3   
  401bdd:	add    DWORD PTR es:[eax],0x0
  401be1:	inc    DWORD PTR [eax]
  401be3:	jmp    FWORD PTR [esi-0x45]
  401be6:	dec    ebp
  401be7:	inc    eax
  401be8:	sub    DWORD PTR [ebx],0xffffffac
  401beb:	cmp    edi,0x41
  401bee:	cmp    edi,0x0
  401bf1:	add    DWORD PTR [eax],0xffffff83
  401bf4:	pop    ebx
  401bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bf7:	mov    dh,0x5d
  401bf9:	jmp    edx
  401bfb:	mov    DWORD PTR [ecx-0xff28],ecx
  401c01:	add    BYTE PTR [eax],al
  401c03:	add    cl,dl
  401c05:	jp     0x401c3c
  401c07:	mov    ch,0xba
  401c09:	sti    
  401c0a:	aam    0x89
  401c0c:	mov    edi,edi
  401c0e:	add    bh,bh
  401c10:	cmp    edi,0xffffffff
  401c13:	add    bh,dl
  401c15:	mov    ch,0xb4
  401c17:	cmp    DWORD PTR [esi+eiz*8-0x16],esi
  401c1b:	(bad)  
  401c1c:	call   DWORD PTR [eax+eax*1]
  401c1f:	add    bh,bh
  401c21:	add    BYTE PTR [eax],al
  401c23:	add    bh,dl
  401c25:	mov    ebp,0x8ea2f26
  401c2a:	mov    ch,0x83
  401c2c:	call   DWORD PTR [esi]
  401c2e:	inc    DWORD PTR [eax]
  401c30:	add    bh,bh
  401c32:	cmp    edi,0x27
  401c35:	rol    BYTE PTR [ecx],0x6c
  401c38:	adc    ecx,esi
  401c3a:	cwde   
  401c3b:	dec    DWORD PTR [ecx-0xff2e]
  401c41:	inc    DWORD PTR [ebx+0x1185cb00]
  401c47:	(bad)  
  401c48:	cld    
  401c49:	jno    0x401c2a
  401c4b:	int3   
  401c4c:	dec    DWORD PTR [edi-0x1]
  401c4f:	inc    DWORD PTR [eax]
  401c51:	add    bh,bh
  401c53:	add    BYTE PTR [ebx],dl
  401c55:	test   DWORD PTR [ebx+0x7da9581c],ebx
  401c5b:	inc    DWORD PTR [ebx-0xff39]
  401c61:	inc    DWORD PTR [eax]
  401c63:	call   ebp
  401c65:	jmp    0x24:0x7493c888
  401c6c:	push   DWORD PTR [esi]
  401c6e:	add    BYTE PTR [ebx-0x330001],al
  401c74:	ins    DWORD PTR es:[edi],dx
  401c75:	imul   edi,DWORD PTR [esi+0x42db458],0x42ff00
  401c7f:	inc    DWORD PTR [eax]
  401c81:	inc    DWORD PTR [eax]
  401c83:	int3   
  401c84:	xchg   esi,eax
  401c85:	lods   eax,DWORD PTR ds:[esi]
  401c86:	lods   al,BYTE PTR ds:[esi]
  401c87:	repnz cmc 
  401c89:	dec    esi
  401c8a:	test   DWORD PTR [eax],0x83ffc700
  401c90:	add    BYTE PTR [ebx+0x265000ff],al
  401c96:	sbb    esp,DWORD PTR [ebx]
  401c98:	fmul   st(2),st
  401c9a:	xchg   ebp,eax
  401c9b:	(bad)  
  401c9c:	call   FWORD PTR [ecx-0x7cff77]
  401ca2:	add    DWORD PTR [eax],0xa
  401ca5:	xchg   ebp,eax
  401ca6:	cmp    al,0x76
  401ca8:	sub    eax,0x8963
  401cad:	cmp    DWORD PTR [eax],eax
  401caf:	add    BYTE PTR [ebx-0x51ff0001],al
  401cb5:	out    0x41,al
  401cb7:	lds    edi,FWORD PTR [esi-0x80]
  401cba:	lahf   
  401cbb:	add    bh,bh
  401cbd:	rol    DWORD PTR [eax],0x0
  401cc0:	inc    DWORD PTR [eax]
  401cc2:	(bad)  
  401cc3:	dec    DWORD PTR [ebp-0x6e]
  401cc6:	lods   eax,DWORD PTR ds:[esi]
  401cc7:	mov    ds:0xffc621dd,eax
  401ccc:	int3   
  401ccd:	je     0x401ccf
  401ccf:	add    DWORD PTR [ebx+0x40890089],0x3d
  401cd6:	ins    DWORD PTR es:[edi],dx
  401cd7:	jbe    0x401cd6
  401cd9:	ins    DWORD PTR es:[edi],dx
  401cda:	test   edi,edi
  401cdc:	cmp    edi,0xffffffff
  401cdf:	inc    DWORD PTR [ebx-0x747cff01]
  401ce5:	jns    0x401d3d
  401ce7:	bnd jbe 0x401cc3
  401cea:	xor    cl,ah
  401cec:	push   DWORD PTR [esi+0xffff]
  401cf2:	add    bh,bh
  401cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cf5:	adc    ebx,esp
  401cf7:	arpl   WORD PTR [eax+edx*4-0x3a00ff93],ax
  401cfe:	(bad)  
  401cff:	(bad)  
  401d00:	inc    DWORD PTR [ebx-0x4476ff01]
  401d06:	jo     0x401c9b
  401d08:	imul   esp,DWORD PTR [ebx-0x5fffff53],0x0
  401d0f:	add    bh,bh
  401d11:	(bad)  
  401d12:	(bad)  
  401d13:	jmp    esp
  401d15:	mov    dh,0x2a
  401d17:	leave  
  401d18:	repz es retf 
  401d1b:	inc    DWORD PTR [ebx-0x330020]
  401d21:	int3   
  401d22:	inc    DWORD PTR [ebx-0x44d8dfe7]
  401d28:	and    DWORD PTR [esi-0x74ff7c27],edx
  401d2e:	cmp    edi,0xffffffff
  401d31:	inc    DWORD PTR [eax]
  401d33:	jmp    DWORD PTR [eax-0x447391e9]
  401d39:	xchg   ebx,eax
  401d3a:	pop    ebp
  401d3b:	add    bh,bh
  401d3d:	sar    bh,cl
  401d3f:	or     DWORD PTR [ecx+0x19008900],0xffffffe2
  401d46:	in     al,dx
  401d47:	push   esp
  401d48:	ret    
  401d49:	mov    eax,ds:0xf3ff00b3
  401d4e:	(bad)  
  401d4f:	(bad)  
  401d50:	(bad)  
  401d51:	inc    DWORD PTR [eax]
  401d53:	add    DWORD PTR [ebx+0x7afb8d31],0x34
  401d5a:	dec    ebx
  401d5b:	inc    DWORD PTR [eax]
  401d5d:	imul   eax,DWORD PTR [eax],0xffffff
  401d63:	jmp    FWORD PTR [esi-0x21]
  401d66:	dec    ecx
  401d67:	clc    
  401d68:	daa    
  401d69:	pop    ebp
  401d6a:	pop    edx
  401d6b:	int3   
  401d6c:	add    BYTE PTR [esi+0x0],cl
  401d6f:	inc    DWORD PTR [eax]
  401d71:	mov    edi,edi
  401d73:	call   DWORD PTR [ecx+0x5b93a9bf]
  401d79:	adc    DWORD PTR [eax-0x1],esp
  401d7c:	sub    ecx,0xffffffff
  401d7f:	inc    DWORD PTR [eax]
  401d81:	add    DWORD PTR [eax],0xffffffcc
  401d84:	cld    
  401d85:	xchg   edx,eax
  401d86:	not    BYTE PTR [ecx-0x45]
  401d89:	xor    DWORD PTR [esi],0xffffffff
  401d8c:	jmp    eax
  401d8e:	add    bh,bh
  401d90:	cmp    edi,0x0
  401d93:	int3   
  401d94:	xchg   edi,eax
  401d95:	jge    0x401dc8
  401d97:	cld    
  401d98:	and    ebx,ecx
  401d9a:	pop    esi
  401d9b:	add    BYTE PTR [ebx-0xff82],al
  401da1:	(bad)  
  401da2:	(bad)  
  401da3:	dec    ecx
  401da5:	pop    ebp
  401da6:	popa   
  401da7:	add    eax,0xff51d2bc
  401dac:	add    dh,bl
  401dae:	add    BYTE PTR [ebx-0x7c01],al
  401db4:	mov    dh,0xc1
  401db6:	push   eax
  401db7:	mov    bh,0x20
  401db9:	or     al,0x3d
  401dbb:	add    bh,bh
  401dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dbe:	inc    DWORD PTR [eax]
  401dc0:	dec    DWORD PTR [ecx+0x13b6ffff]
  401dc6:	xchg   ebx,eax
  401dc7:	push   0x6c
  401dc9:	mov    cs,WORD PTR [esi+0x0]
  401dcc:	inc    DWORD PTR [ecx-0xff01]
  401dd2:	cmp    edi,0xffffffa2
  401dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dd6:	cwde   
  401dd7:	fs jg  0x401d5b
  401dda:	push   eax
  401ddb:	(bad)  
  401ddc:	jmp    FWORD PTR [ebx-0x1]
  401ddf:	int3   
  401de0:	inc    DWORD PTR [eax]
  401de2:	(bad)  
  401de3:	(bad)  
  401de4:	mov    ebx,0x23ef0ae4
  401de9:	sbb    al,0x2d
  401deb:	inc    DWORD PTR [eax]
  401ded:	mov    al,ds:0xcc0089
  401df2:	add    DWORD PTR [eax],0xffffff85
  401df5:	shr    BYTE PTR [ecx+0xae70991],0x83
  401dfc:	int3   
  401dfd:	mov    al,ds:0x89ffff
  401e02:	add    BYTE PTR [eax],al
  401e04:	mov    edx,0x568ea8de
  401e09:	mov    dl,0xf8
  401e0b:	add    DWORD PTR [ebx+0xff0034],0xffffffff
  401e12:	add    BYTE PTR [eax],al
  401e14:	adc    dh,BYTE PTR [ecx+0x7d]
  401e17:	mov    ch,0x44
  401e19:	xor    BYTE PTR [edi-0x77],ch
  401e1c:	dec    DWORD PTR [eax-0x337c01]
  401e22:	add    bh,bh
  401e24:	dec    ecx
  401e25:	test   BYTE PTR [ebx-0x6],ah
  401e28:	jl     0x401e0c
  401e2a:	dec    esp
  401e2b:	add    bh,bh
  401e2d:	jl     0x401dfb
  401e2f:	add    BYTE PTR [eax],al
  401e31:	inc    DWORD PTR [eax]
  401e33:	mov    DWORD PTR [edx],edx
  401e35:	pop    ebx
  401e36:	loopne 0x401e76
  401e38:	(bad)  
  401e39:	(bad)  
  401e3a:	aam    0xff
  401e3c:	int3   
  401e3d:	xchg   edi,eax
  401e3e:	(bad)  
  401e3f:	inc    DWORD PTR [eax]
  401e41:	int3   
  401e42:	mov    edi,edi
  401e44:	xor    BYTE PTR [ecx+eiz*1+0x14],bl
  401e48:	push   es
  401e49:	lahf   
  401e4a:	mov    DWORD PTR [ebx-0x937d],eax
  401e50:	add    BYTE PTR [eax],al
  401e52:	add    bh,bh
  401e54:	sbb    al,0x92
  401e56:	jmp    0x401e31
  401e58:	std    
  401e59:	push   edx
  401e5a:	dec    edi
  401e5b:	add    bh,bh
  401e5d:	mov    al,ds:0xffff00ff
  401e62:	mov    DWORD PTR [eax],eax
  401e64:	push   edx
  401e65:	pop    ss
  401e66:	test   al,0x14
  401e68:	fadd   st(3),st
  401e6a:	adc    eax,0x700000
  401e6f:	int3   
  401e70:	inc    DWORD PTR [eax]
  401e72:	(bad)  
  401e73:	call   FWORD PTR [edi]
  401e75:	dec    edi
  401e76:	sahf   
  401e77:	or     DWORD PTR [esi-0x7c],ebp
  401e7a:	cwde   
  401e7b:	(bad)  
  401e7c:	jmp    DWORD PTR [edi+edi*8-0xff0001]
  401e83:	jmp    esp
  401e85:	fs jb  0x401ec2
  401e88:	and    al,0x5c
  401e8a:	cmp    bh,bh
  401e8c:	mov    edx,ecx
  401e8e:	add    BYTE PTR [ebx-0x330034],al
  401e94:	dec    ebp
  401e95:	test   al,0x85
  401e97:	fs push ecx
  401e99:	xchg   ebx,eax
  401e9a:	mov    eax,ds:0xa089ff
  401e9f:	add    bh,bh
  401ea1:	(bad)  
  401ea2:	inc    DWORD PTR [eax]
  401ea4:	in     al,dx
  401ea5:	pusha  
  401ea6:	sub    al,0xa4
  401ea8:	call   0xff45:0xff83afb9
  401eaf:	int3   
  401eb0:	add    DWORD PTR [ebx+0x19d68300],0x7f
  401eb7:	loop   0x401e8d
  401eb9:	push   edx
  401eba:	cmc    
  401ebb:	add    BYTE PTR [ecx-0x7cbe],cl
  401ec1:	add    BYTE PTR [eax],al
  401ec3:	jmp    FWORD PTR [edx+0xe01bda8]
  401ec9:	jb     0x401f47
  401ecb:	add    bh,bh
  401ecd:	mov    edx,0xccff00ff
  401ed2:	add    bh,bh
  401ed4:	jg     0x401e87
  401ed6:	inc    edx
  401ed7:	push   esp
  401ed8:	mov    bh,0x58
  401eda:	cwde   
  401edb:	(bad)  
  401edc:	(bad)  
  401edd:	cli    
  401ede:	int3   
  401edf:	mov    edi,edi
  401ee1:	int3   
  401ee2:	inc    DWORD PTR [ebx+0x31da29bd]
  401ee8:	add    bh,bh
  401eea:	dec    esp
  401eec:	mov    DWORD PTR [ebx-0x5b007c34],eax
  401ef2:	jnp    0x401ef3
  401ef4:	mov    BYTE PTR [eax+0x0],cl
  401ef7:	int3   
  401ef8:	jmp    FWORD PTR [ecx+ebp*8-0x1]
  401efc:	cmp    al,0xeb
  401efe:	add    BYTE PTR [eax],al
  401f00:	(bad)  
  401f01:	fstp   QWORD PTR [ecx]
  401f03:	xor    DWORD PTR [eax],0xf
  401f06:	(bad)  
  401f07:	dec    esp
  401f09:	outs   dx,DWORD PTR ds:[esi]
  401f0a:	mov    DWORD PTR [eax],eax
  401f0c:	and    DWORD PTR [ecx+0x3aff00ff],esp
  401f12:	mov    ds:0xff3aadff,eax
  401f17:	add    bh,bh
  401f19:	data16 or al,0xff
  401f1c:	push   edi
  401f1d:	push   esi
  401f1e:	inc    DWORD PTR [eax]
  401f20:	sub    DWORD PTR [eax+0x3418ffeb],0xffffffcc
  401f27:	inc    DWORD PTR [eax]
  401f29:	sub    esi,eax
  401f2b:	cmp    DWORD PTR ds:0xffff008f,0xffffffc5
  401f32:	inc    ecx
  401f33:	call   DWORD PTR [eax-0x33]
  401f36:	mov    DWORD PTR [eax],eax
  401f38:	add    BYTE PTR [esi-0x29],bh
  401f3b:	add    BYTE PTR [ecx],dh
  401f3d:	dec    esp
  401f3e:	add    bh,bh
  401f40:	add    BYTE PTR [eax-0x3597ca2],ch
  401f46:	dec    DWORD PTR [ecx-0x33f96c7d]
  401f4c:	(bad)  
  401f4d:	fild   WORD PTR [eax]
  401f4f:	(bad)  
  401f50:	dec    DWORD PTR [esi-0x69]
  401f53:	inc    DWORD PTR [ecx]
  401f55:	fild   DWORD PTR [ebx-0x5a3e0001]
  401f5b:	int3   
  401f5c:	mov    ss,WORD PTR [ebx-0x2333ff01]
  401f62:	inc    edi
  401f63:	add    ch,al
  401f65:	(bad)  
  401f66:	(bad)  
  401f67:	(bad)  
  401f68:	(bad)  
  401f69:	jmp    0x401f00
  401f6b:	int3   
  401f6c:	scas   al,BYTE PTR es:[edi]
  401f6d:	fild   WORD PTR [eax]
  401f6f:	add    bh,bh
  401f71:	and    eax,0x36700078
  401f76:	(bad)  
  401f77:	(bad)  
  401f78:	dec    DWORD PTR [edx+0x10]
  401f7b:	mov    DWORD PTR [ebx-0xff00c2],ecx
  401f81:	aam    0x2b
  401f83:	add    al,dl
  401f85:	add    ecx,DWORD PTR [ecx-0x6ae37c01]
  401f8b:	call   ecx
  401f8d:	xor    edi,edi
  401f8f:	inc    DWORD PTR [eax]
  401f91:	push   ebp
  401f92:	pop    ss
  401f93:	sub    DWORD PTR [esi-0xff3328],0xffffffa5
  401f9a:	mov    ?,edi
  401f9c:	nop
  401f9d:	push   esp
  401f9e:	int3   
  401f9f:	(bad)  
  401fa0:	call   ebp
  401fa2:	stos   BYTE PTR es:[edi],al
  401fa3:	mov    DWORD PTR [edi],edx
  401fa5:	aad    0xff
  401fa7:	inc    DWORD PTR [ebx+0x2b83267c]
  401fad:	daa    
  401fae:	add    DWORD PTR [eax],0x0
  401fb1:	cmp    eax,0xcc8d00aa
  401fb6:	int3   
  401fb7:	add    bh,bh
  401fb9:	inc    eax
  401fba:	add    DWORD PTR [eax],0xffff90eb
  401fc0:	call   eax
  401fc2:	fadd   QWORD PTR [ebx-0xff390f]
  401fc8:	dec    DWORD PTR [ebp+0x75cc1e]
  401fce:	inc    DWORD PTR [ebx-0x81ab00]
  401fd4:	push   0xc
  401fd6:	cmp    edi,0xffffffff
  401fd9:	jne    0x401f87
  401fdb:	add    BYTE PTR [edi+0x54],cl
  401fde:	inc    DWORD PTR [ebx-0xbe807d]
  401fe4:	pop    ebp
  401fe5:	es add bh,bh
  401fe8:	call   DWORD PTR [edx]
  401fea:	adc    eax,0xff280a00
  401fef:	inc    DWORD PTR [eax]
  401ff1:	adc    al,0xc3
  401ff3:	add    BYTE PTR [edi],dl
  401ff5:	xchg   esp,eax
  401ff6:	(bad)  
  401ff7:	dec    DWORD PTR [ecx-0x760026f8]
  401ffd:	add    DWORD PTR [ebx+0x2ee700ff],0xffffffff
  402004:	icebp  
  402005:	sbb    bh,bh
  402007:	(bad)  
  402008:	push   DWORD PTR [esp+edx*4-0x610601]
  40200f:	(bad)  
  402010:	call   DWORD PTR [esi-0x60]
  402013:	call   DWORD PTR [edx-0x7cff001d]
  402019:	ret    0xff64
  40201c:	sbb    DWORD PTR [ebx],0xffffffff
  40201f:	(bad)  
  402020:	call   FWORD PTR [ecx-0x1a2a0010]
  402026:	(bad)  
  402027:	inc    DWORD PTR [eax]
  402029:	popf   
  40202a:	sub    eax,0xfffe38ff
  40202f:	(bad)  
  402030:	(bad)  
  402031:	jp     0x4020a6
  402033:	jmp    edx
  402035:	cld    
  402036:	(bad)  
  402037:	(bad)  
  402038:	jmp    ebp
  40203a:	mov    ds:0x391900,eax
  40203f:	dec    DWORD PTR [ecx-0x4500c313]
  402045:	stos   BYTE PTR es:[edi],al
  402046:	inc    DWORD PTR [eax]
  402048:	add    BYTE PTR [edx-0x3a],al
  40204b:	call   FWORD PTR [ebx-0x55]
  40204e:	(bad)  
  40204f:	(bad)  
  402050:	dec    DWORD PTR [ecx+0x72]
  402053:	add    BYTE PTR [eax-0x43],al
  402056:	add    bh,bh
  402058:	(bad)  
  402059:	(bad)  
  40205a:	mov    eax,ds:0xff85eaff
  40205f:	(bad)  
  402060:	jmp    DWORD PTR [esi]
  402062:	(bad)  
  402063:	int3   
  402064:	push   eax
  402065:	or     eax,0x160000cc
  40206a:	xchg   ebx,eax
  40206b:	call   DWORD PTR [esi]
  40206d:	jae    0x180a2073
  402073:	call   DWORD PTR [ebx+ebx*2-0x1a330001]
  40207a:	xlat   BYTE PTR ds:[ebx]
  40207b:	jmp    FWORD PTR [ecx+0xccff1c]
  402081:	rol    DWORD PTR [edx-0x76bbc301],cl
  402087:	inc    DWORD PTR [eax]
  402089:	sar    DWORD PTR [esi],cl
  40208b:	(bad)  
  40208c:	out    dx,eax
  40208d:	cmc    
  40208e:	inc    DWORD PTR [eax]
  402090:	jmp    edi
  402092:	mov    bl,0xcc
  402094:	adc    al,0x73
  402096:	cmp    edi,0xffffffff
  402099:	mov    ds:0xd13eff53,eax
  40209e:	add    DWORD PTR [eax],0xffffffff
  4020a1:	xchg   ecx,eax
  4020a2:	pop    ds
  4020a3:	add    BYTE PTR [ebx+0x32],al
  4020a6:	add    BYTE PTR [ecx-0xfa4b00],cl
  4020ac:	xor    esi,ebx
  4020ae:	inc    DWORD PTR [eax]
  4020b0:	mov    DWORD PTR [esi+0xa],esi
  4020b3:	(bad)  
  4020b4:	cmp    al,0xa5
  4020b6:	add    bh,bh
  4020b8:	add    BYTE PTR [ecx+0x2],cl
  4020bb:	cmp    DWORD PTR [edi-0x7c0000b2],0x69
  4020c2:	sub    eax,DWORD PTR [eax]
  4020c4:	adc    eax,0xff00ff26
  4020c9:	adc    BYTE PTR [ecx-0x31c200],0xff
  4020d0:	add    BYTE PTR [edx+0x36],bl
  4020d3:	(bad)  
  4020d4:	cmp    al,BYTE PTR [eax+eax*1]
  4020d7:	mov    edi,edi
  4020d9:	call   0xce52a4a9
  4020de:	(bad)  
  4020df:	inc    DWORD PTR [eax]
  4020e1:	jnp    0x4020da
  4020e3:	inc    eax
  4020e5:	mov    ecx,0xeb00ffff
  4020ea:	adc    bh,bh
  4020ec:	mov    eax,ds:0xff83ff41
  4020f1:	jbe    0x40208f
  4020f3:	or     ebp,0x78
  4020f6:	(bad)  
  4020f7:	dec    DWORD PTR [ecx-0x2e0055ce]
  4020fd:	adc    edi,edi
  4020ff:	int3   
  402100:	add    BYTE PTR [ebp+eax*4-0xcd01],ch
  402107:	add    BYTE PTR [ebx+0x1883699c],al
  40210d:	stos   DWORD PTR es:[edi],eax
  40210e:	inc    DWORD PTR [eax]
  402110:	call   FWORD PTR ds:0xe6e4008d
  402116:	add    DWORD PTR [eax],0xffffffff
  402119:	mov    ch,dh
  40211b:	push   DWORD PTR [ebx-0x59]
  40211e:	add    BYTE PTR [eax],al
  402120:	inc    DWORD PTR [edx]
  402122:	jo     0x402124
  402124:	adc    ah,BYTE PTR [edi+edi*8]
  402127:	add    BYTE PTR [ebx+0x4b00e34d],al
  40212d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40212e:	(bad)  
  40212f:	(bad)  
  402130:	jmp    DWORD PTR [ebx]
  402132:	sti    
  402133:	call   DWORD PTR [ecx+edx*4]
  402136:	inc    DWORD PTR [eax]
  402138:	(bad)  
  402139:	mov    edi,0x35eeffdb
  40213e:	dec    esp
  402140:	add    bh,cl
  402142:	mov    edx,0x83c24300
  402147:	add    BYTE PTR [eax],al
  402149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40214a:	dec    ecx
  40214b:	or     esp,0xffffffd2
  40214e:	dec    esp
  402150:	(bad)  
  402151:	fdivp  st(1),st
  402153:	jmp    FWORD PTR [edi+0x63]
  402156:	dec    esp
  402158:	add    BYTE PTR [eax],dl
  40215a:	in     al,0xff
  40215c:	js     0x40212c
  40215e:	add    bh,bh
  402160:	sub    ebx,0x65
  402163:	add    BYTE PTR [ecx-0x7c763334],ch
  402169:	push   edx
  40216a:	pushf  
  40216b:	add    BYTE PTR [eax+0x2],cl
  40216e:	inc    DWORD PTR [ebx+0x8baa89]
  402174:	ror    edx,cl
  402176:	inc    DWORD PTR [eax]
  402178:	add    BYTE PTR [ebx],bl
  40217a:	sub    al,0x83
  40217c:	je     0x4021da
  40217e:	inc    DWORD PTR [ebx-0x3a5e01]
  402184:	cmp    al,0xda
  402186:	or     DWORD PTR [ecx-0xacda00],0xffffff8b
  40218d:	dec    esi
  40218e:	add    BYTE PTR [eax],al
  402190:	add    BYTE PTR [eax],dh
  402192:	sub    eax,0xcc742900
  402197:	inc    DWORD PTR [eax]
  402199:	les    esi,FWORD PTR [edi]
  40219b:	adc    DWORD PTR [ebp-0xee],0xffffffa7
  4021a2:	(bad)  
  4021a3:	jmp    DWORD PTR [esi-0x84]
  4021a9:	add    bh,BYTE PTR [edi+edi*8]
  4021ac:	arpl   WORD PTR [ecx-0x1],ax
  4021af:	inc    DWORD PTR [eax]
  4021b1:	xchg   edx,eax
  4021b2:	stos   DWORD PTR es:[edi],eax
  4021b3:	add    BYTE PTR [edx-0x13],al
  4021b6:	add    BYTE PTR [ebx-0xd8da00],al
  4021bc:	pop    ebx
  4021bd:	xchg   ebp,eax
  4021be:	(bad)  
  4021bf:	(bad)  
  4021c0:	(bad)  
  4021c1:	jmp    0x468a58a
  4021c6:	inc    DWORD PTR [eax]
  4021c8:	int3   
  4021c9:	lds    ebp,FWORD PTR [ecx+0x0]
  4021cc:	test   DWORD PTR [ebx-0x597cff77],edi
  4021d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d3:	int3   
  4021d4:	xchg   DWORD PTR [eax-0x67ffff01],edi
  4021da:	inc    ebx
  4021db:	call   DWORD PTR [edi+0x13]
  4021de:	(bad)  
  4021df:	(bad)  
  4021e0:	dec    DWORD PTR [edx]
  4021e2:	cmp    edi,0xffffffd2
  4021e5:	sbb    edi,edi
  4021e7:	dec    DWORD PTR [ecx-0x12ff4407]
  4021ed:	or     eax,0xd300cc00
  4021f2:	cmp    BYTE PTR [eax],al
  4021f4:	fsub   st,st(6)
  4021f6:	dec    esp
  4021f8:	inc    DWORD PTR [edi+0x6b]
  4021fb:	mov    DWORD PTR [ecx+0xff0031],eax
  402201:	es and eax,0x6699cc
  402207:	inc    DWORD PTR [eax]
  402209:	lahf   
  40220a:	fcos   
  40220c:	test   eax,0xffffff8e
  402211:	stos   DWORD PTR es:[edi],eax
  402212:	push   esi
  402213:	(bad)  
  402214:	cmp    al,BYTE PTR [esi-0x1]
  402217:	add    bh,bh
  402219:	pop    ebp
  40221a:	aad    0x89
  40221c:	mov    cl,0xed
  40221e:	inc    DWORD PTR [eax]
  402220:	call   DWORD PTR [edx]
  402222:	jb     0x4021a7
  402224:	aaa    
  402225:	imul   edi,edi,0xffffffff
  402228:	add    bl,dl
  40222a:	xor    DWORD PTR ss:[edi+0x6b],0x0
  40222f:	mov    edi,edi
  402231:	jp     0x4021dc
  402233:	add    BYTE PTR [ecx+0x89ffb2],bh
  402239:	adc    ah,cl
  40223b:	inc    esi
  40223d:	fwait
  40223e:	(bad)  
  40223f:	inc    DWORD PTR [ebx-0x3fffd114]
  402245:	aaa    
  402246:	inc    DWORD PTR [eax]
  402248:	add    BYTE PTR [eax+0x5d4589ef],cl
  40224e:	(bad)  
  40224f:	(bad)  
  402250:	(bad)  
  402251:	(bad)  
  402252:	pop    ecx
  402253:	add    BYTE PTR [ebx-0xff17],dl
  402259:	push   esp
  40225a:	out    dx,eax
  40225b:	add    dh,ah
  40225d:	adc    ah,cl
  40225f:	cmp    edi,0x6f
  402262:	ret    
  402263:	add    BYTE PTR [ebx],dh
  402265:	jl     0x402266
  402267:	(bad)  
  402268:	call   eax
  40226a:	xor    eax,0x65a583
  40226f:	dec    esp
  402271:	or     BYTE PTR [eax-0xec7201],bl
  402277:	(bad)  
  402278:	call   FWORD PTR [edi]
  40227a:	xchg   DWORD PTR [eax],eax
  40227c:	jecxz  0x402275
  40227e:	add    bh,bh
  402280:	mov    ecx,ebp
  402282:	mov    esp,0x33a6cc
  402287:	add    bh,bh
  402289:	(bad)  
  40228a:	and    al,BYTE PTR [ebx-0x3376d151]
  402290:	push   DWORD PTR [ebp-0x46]
  402293:	push   DWORD PTR [ecx-0x7cff335f]
  402299:	inc    esi
  40229a:	jb     0x40221f
  40229c:	mov    dh,0x7a
  40229e:	add    bh,bh
  4022a0:	inc    DWORD PTR [esi]
  4022a2:	stos   BYTE PTR es:[edi],al
  4022a3:	(bad)  
  4022a4:	(bad)  [ebx-0x4e000001]
  4022aa:	call   0x8383:0xffddb7ff
  4022b1:	int    0x9
  4022b3:	int3   
  4022b4:	scas   al,BYTE PTR es:[edi]
  4022b5:	push   0xc383ffff
  4022ba:	enter  0xfacc,0xa4
  4022be:	(bad)  
  4022bf:	(bad)  
  4022c0:	call   FWORD PTR [esi+0x71]
  4022c3:	(bad)  
  4022c4:	jle    0x40226d
  4022c6:	mov    edi,edi
  4022c8:	mov    DWORD PTR [ebx+0x4cef0015],esi
  4022ce:	add    bh,bh
  4022d0:	add    dh,dl
  4022d2:	lods   al,BYTE PTR ds:[esi]
  4022d3:	mov    DWORD PTR [esi-0x7600eb],esp
  4022d9:	pop    es
  4022da:	jmp    0x4022db
  4022dc:	xor    esp,0xffffff83
  4022df:	mov    edi,edi
  4022e1:	dec    ecx
  4022e2:	sub    edi,edi
  4022e4:	std    
  4022e5:	xor    eax,0xa0000083
  4022ea:	pop    ds
  4022eb:	push   esi
  4022ed:	loope  0x402278
  4022ef:	(bad)  
  4022f0:	call   FWORD PTR [edx]
  4022f2:	mov    cl,0xff
  4022f4:	xchg   esp,eax
  4022f5:	sti    
  4022f6:	add    BYTE PTR [eax],al
  4022f8:	add    BYTE PTR [edi+0x1],dh
  4022fb:	add    BYTE PTR [ecx],ch
  4022fd:	xchg   edi,eax
  4022fe:	add    bh,bh
  402300:	or     DWORD PTR [ecx+0x4584ffd5],0xffffffff
  402307:	(bad)  
  402308:	(bad)  
  402309:	cmp    eax,0xcc1100b5
  40230e:	add    bh,bh
  402310:	inc    ebx
  402312:	sub    edi,edi
  402314:	enter  0x87,0xff
  402318:	jmp    FWORD PTR [edx+0x1f]
  40231b:	add    BYTE PTR [eax-0x77],dl
  40231e:	mov    DWORD PTR [ebx-0x908900],eax
  402324:	jg     0x4022bf
  402326:	inc    DWORD PTR [eax]
  402328:	mov    DWORD PTR [edi-0x53fa7cb5],esi
  40232e:	int3   
  40232f:	dec    DWORD PTR [ecx+0x7aff7624]
  402335:	js     0x402337
  402337:	add    BYTE PTR [ebx-0xbff2a59],al
  40233d:	ud0    eax,DWORD PTR [eax]
  402340:	jmp    DWORD PTR [esi-0x32]
  402343:	add    BYTE PTR [edi],cl
  402345:	and    BYTE PTR [eax],al
  402347:	int3   
  402348:	(bad)  
  402349:	std    
  40234a:	cs (bad) 
  40234c:	fbld   TBYTE PTR [ecx+0x0]
  40234f:	int3   
  402350:	call   DWORD PTR [edx]
  402352:	stos   BYTE PTR es:[edi],al
  402353:	inc    DWORD PTR [ecx]
  402355:	push   eax
  402356:	int3   
  402357:	add    bh,bh
  402359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40235a:	int    0x0
  40235c:	in     eax,0xe7
  40235e:	inc    DWORD PTR [eax]
  402360:	jmp    DWORD PTR [ecx]
  402362:	int3   
  402363:	sub    DWORD PTR [esi+0x73],0xffffffff
  402367:	inc    DWORD PTR [eax]
  402369:	sbb    BYTE PTR [esi+0xa803ff],bh
  40236f:	dec    DWORD PTR [ecx-0x2300e8cc]
  402375:	xchg   ebp,eax
  402376:	add    DWORD PTR [eax],0xffffffff
  402379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40237a:	pop    esp
  40237b:	add    BYTE PTR ds:0x830035,bh
  402381:	and    al,0xa2
  402383:	add    BYTE PTR [ebx+0x76],bh
  402386:	mov    edi,edi
  402388:	push   ebx
  40238a:	lods   eax,DWORD PTR ds:[esi]
  40238b:	add    dl,bl
  40238d:	inc    WORD PTR [ebx-0x7638f201]
  402394:	sub    al,0x20
  402396:	add    bh,bh
  402398:	int3   
  402399:	push   ds
  40239a:	aaa    
  40239b:	call   DWORD PTR [ebx+0x4]
  40239e:	(bad)  
  40239f:	(bad)  
  4023a0:	inc    DWORD PTR [edi]
  4023a2:	jae    0x402327
  4023a4:	aam    0x4e
  4023a6:	(bad)  
  4023a7:	dec    DWORD PTR [ecx+0x71830699]
  4023ad:	cs add bh,bh
  4023b0:	(bad)  
  4023b1:	mov    eax,0xef44ffd4
  4023b6:	add    bh,bh
  4023b8:	int3   
  4023b9:	and    bl,BYTE PTR [ebx-0x33dff201]
  4023bf:	cmp    edi,0x51
  4023c2:	in     eax,dx
  4023c3:	add    ah,cl
  4023c5:	dec    ebp
  4023c6:	int3   
  4023c7:	inc    DWORD PTR [eax]
  4023c9:	xchg   edx,eax
  4023ca:	or     al,BYTE PTR [ebx-0xfeb2]
  4023d0:	call   FWORD PTR [edx+0x70c9ff1d]
  4023d6:	add    BYTE PTR [eax],al
  4023d8:	inc    DWORD PTR [edi+0x170f8362]
  4023de:	mov    DWORD PTR [eax],eax
  4023e0:	add    BYTE PTR [ebx],ch
  4023e2:	aas    
  4023e3:	(bad)  
  4023e4:	cmp    bl,BYTE PTR [edx]
  4023e6:	add    BYTE PTR [eax],al
  4023e8:	int3   
  4023e9:	fidivr WORD PTR [esi-0x1]
  4023ec:	dec    ebx
  4023ed:	push   ecx
  4023ee:	add    BYTE PTR [ebx-0x109401],al
  4023f4:	sub    edx,ebx
  4023f6:	mov    DWORD PTR [ebx-0xcd1300],eax
  4023fc:	nop
  4023fd:	add    al,0x0
  4023ff:	add    BYTE PTR [ebx+0x48cc2cdf],al
  402405:	dec    eax
  402406:	(bad)  
  402407:	inc    DWORD PTR [eax]
  402409:	dec    ebp
  40240a:	imul   ecx,DWORD PTR [ecx+0xff0f9e],0xffffffff
  402411:	sbb    DWORD PTR [edx],ebp
  402413:	(bad)  
  402414:	js     0x4023c4
  402416:	(bad)  
  402417:	(bad)  
  402418:	push   DWORD PTR [esi]
  40241a:	nop
  40241b:	mov    DWORD PTR [eax],edi
  40241d:	sar    bh,1
  40241f:	cmp    edi,0xffffff85
  402422:	ret    0xe7ff
  402425:	xor    DWORD PTR [ebx-0x344e0034],eax
  40242b:	or     DWORD PTR [edx+esi*8],0xffffffcc
  40242f:	add    bh,bh
  402431:	out    dx,al
  402432:	repnz or DWORD PTR [ebp-0xb1],0xffffff8c
  40243a:	cmp    al,BYTE PTR [eax]
  40243c:	xchg   ebx,eax
  40243d:	push   esi
  40243e:	cmp    edi,0xffffffff
  402441:	and    eax,0xc212ffda
  402446:	add    bh,bh
  402448:	int3   
  402449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40244a:	jno    0x40244c
  40244c:	dec    esi
  40244d:	cmp    DWORD PTR [eax],eax
  40244f:	add    bh,bh
  402451:	data16 jo 0x402453
  402454:	jb     0x4024d3
  402456:	add    BYTE PTR [ecx-0x2aaa01],cl
  40245c:	xor    al,0xc5
  40245e:	add    bh,bh
  402460:	(bad)  
  402461:	fxch   st(4)
  402463:	call   FWORD PTR [edi]
  402465:	(bad)  
  402466:	int3   
  402467:	(bad)  
  402468:	(bad)  
  402469:	repz add BYTE PTR ds:[edx],al
  40246d:	push   esi
  40246e:	inc    DWORD PTR [eax]
  402470:	(bad)  
  402471:	js     0x40243f
  402473:	call   DWORD PTR [edi+0x6e]
  402476:	add    BYTE PTR [ebx-0x33249b01],al
  40247c:	adc    cl,BYTE PTR ds:0x9500ff00
  402482:	ins    BYTE PTR es:[edi],dx
  402483:	add    BYTE PTR [ecx-0x4d],al
  402486:	add    bh,bh
  402488:	jmp    DWORD PTR [esp+eiz*2]
  40248b:	(bad)  
  40248c:	mov    ecx,0xcc004f
  402491:	sbb    eax,esi
  402493:	inc    ebp
  402495:	ret    0x0
  402498:	mov    DWORD PTR [ebx-0x10327c88],edx
  40249e:	int3   
  40249f:	add    bh,bh
  4024a1:	mov    eax,0x514183fd
  4024a6:	or     esp,0xffffff83
  4024a9:	mov    ah,0x16
  4024ab:	(bad)  
  4024ac:	fbld   TBYTE PTR [ebx]
  4024ae:	cmp    edi,0x0
  4024b1:	and    eax,0x45ee0083
  4024b6:	add    DWORD PTR [eax],0xffffff89
  4024b9:	mov    ch,0xe5
  4024bb:	(bad)  
  4024bc:	inc    BYTE PTR [edi+edi*8]
  4024bf:	add    bh,bh
  4024c1:	mov    esi,0x375eff23
  4024c6:	(bad)  
  4024c7:	(bad)  
  4024c8:	dec    DWORD PTR [edx-0x3e85ff64]
  4024ce:	add    BYTE PTR [eax],al
  4024d0:	add    BYTE PTR [ebx],bl
  4024d2:	pushf  
  4024d3:	inc    esp
  4024d5:	mov    ecx,esp
  4024d7:	(bad)  
  4024d8:	jmp    FWORD PTR [eax]
  4024da:	push   ecx
  4024db:	int3   
  4024dc:	in     al,0x34
  4024de:	add    BYTE PTR [eax],al
  4024e0:	jmp    DWORD PTR [ebp+0x5d8900a6]
  4024e6:	dec    esp
  4024e8:	or     DWORD PTR [edx],0xffffff96
  4024eb:	call   DWORD PTR [ebx-0xff3369]
  4024f1:	in     eax,dx
  4024f2:	mov    esp,0xcbe3cc
  4024f7:	add    BYTE PTR [eax],al
  4024f9:	fucomip st,st(7)
  4024fb:	add    BYTE PTR [ecx-0x3300c3],cl
  402501:	(bad)  
  402502:	loopne 0x40248d
  402504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402505:	inc    esi
  402506:	(bad)  
  402507:	(bad)  
  402508:	call   eax
  40250a:	(bad)  
  40250b:	dec    DWORD PTR [esi-0x337c38]
  402511:	mov    edi,0x44aff04
  402516:	cmp    edi,0xffffffff
  402519:	jns    0x402597
  40251b:	mov    DWORD PTR [edx-0x6d],ebx
  40251e:	inc    DWORD PTR [ebx-0x277f01]
  402524:	cmp    al,0xd7
  402526:	add    bh,bh
  402528:	add    BYTE PTR [ecx+edx*8-0x7cf2f101],ah
  40252f:	inc    DWORD PTR [ebx-0xa338aca]
  402535:	jmp    0xff3d:0x8fffffff
  40253c:	and    eax,0xffffffa7
  402541:	xchg   ecx,eax
  402542:	mov    esp,0xffb12383
  402547:	int3   
  402548:	add    BYTE PTR [ecx-0x4c],dl
  40254b:	call   FWORD PTR [ebx-0x7c33fffd]
  402551:	test   al,0x55
  402553:	(bad)  
  402554:	mov    ebx,0xffccb3
  402559:	fwait
  40255a:	(bad)  
  40255b:	dec    DWORD PTR [esi+0xccffbe]
  402561:	stos   DWORD PTR es:[edi],eax
  402562:	dec    edx
  402563:	add    BYTE PTR [esi+0x83a9],ah
  402569:	scas   eax,DWORD PTR es:[edi]
  40256a:	idiv   bh
  40256c:	adc    ebp,DWORD PTR [edx-0x5000000]
  402572:	or     edi,edi
  402574:	adc    BYTE PTR [edi+0x23838300],bh
  40257a:	bound  eax,QWORD PTR [eax]
  40257c:	bound  edi,QWORD PTR [edi+edi*8]
  40257f:	inc    DWORD PTR [eax]
  402581:	jecxz  0x402558
  402583:	int3   
  402584:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402586:	add    BYTE PTR [eax],al
  402588:	int3   
  402589:	mov    ah,0xe2
  40258b:	sub    esi,0x69
  40258e:	int3   
  40258f:	add    bh,bh
  402591:	mov    eax,ds:0xc49dcc59
  402596:	add    BYTE PTR [ebx-0x7c0fdc7d],al
  40259c:	mov    ds:0xffffff46,eax
  4025a1:	add    al,0x8b
  4025a3:	mov    eax,ebp
  4025a5:	mov    eax,ds:0xe6ffff89
  4025aa:	(bad)  
  4025ab:	mov    DWORD PTR [eax-0x16],edx
  4025ae:	inc    DWORD PTR [eax]
  4025b0:	mov    DWORD PTR [edi],eax
  4025b2:	xchg   ebx,eax
  4025b3:	adc    edx,0x33
  4025b6:	inc    DWORD PTR [eax]
  4025b8:	int3   
  4025b9:	xchg   ecx,eax
  4025ba:	retf   0xae00
  4025bd:	and    eax,DWORD PTR [eax]
  4025bf:	(bad)  
  4025c0:	call   esi
  4025c2:	(bad)  
  4025c4:	xor    bl,dh
  4025c6:	add    bh,bh
  4025c8:	xor    DWORD PTR [ebp+0x196e0074],0xffffffff
  4025cf:	mov    DWORD PTR [eax],eax
  4025d1:	js     0x4025c6
  4025d3:	call   DWORD PTR [esi+0xffffff]
  4025d9:	sub    DWORD PTR [ecx-0x4d9401],ebx
  4025df:	(bad)  
  4025e0:	push   DWORD PTR [esi-0x326eff58]
  4025e6:	inc    DWORD PTR [eax]
  4025e8:	int3   
  4025e9:	jns    0x4025c4
  4025eb:	add    ah,dl
  4025ed:	mov    DWORD PTR [eax],0x9e34ff83
  4025f3:	inc    esp
  4025f5:	mov    edx,0x8e00ffff
  4025fa:	sub    eax,0x89af1f89
  4025ff:	add    bh,bh
  402601:	popa   
  402602:	(bad)  
  402603:	(bad)  
  402604:	(bad)  
  402606:	add    ah,cl
  402608:	or     edi,0xffffff87
  40260b:	call   DWORD PTR [edx+0xff8971]
  402611:	jbe    0x40266b
  402613:	inc    DWORD PTR [esi]
  402615:	pop    esi
  402616:	(bad)  
  402617:	inc    DWORD PTR [ebx-0x3aff1d4b]
  40261d:	or     edi,edi
  40261f:	add    bh,bh
  402621:	xchg   ebx,eax
  402622:	xchg   edx,eax
  402623:	add    BYTE PTR [edi],al
  402625:	aad    0xff
  402627:	int3   
  402628:	int3   
  402629:	inc    edx
  40262a:	cmp    BYTE PTR [eax],al
  40262c:	mov    al,ds:0x83ffb6
  402631:	pop    ecx
  402632:	stos   BYTE PTR es:[edi],al
  402633:	add    ch,bh
  402635:	fadd   QWORD PTR [eax]
  402637:	(bad)  
  402638:	jmp    DWORD PTR [ebx]
  40263a:	jns    0x4025c5
  40263c:	enter  0xd7,0xff
  402640:	add    BYTE PTR [ebp-0x78],ah
  402643:	jmp    FWORD PTR [eax+0x33]
  402646:	add    BYTE PTR [eax],al
  402648:	call   ebp
  40264a:	xlat   BYTE PTR ds:[ebx]
  40264b:	mov    DWORD PTR [ecx-0x3300ffa0],edx
  402651:	aas    
  402652:	inc    ebp
  402653:	add    BYTE PTR [esi-0x7c54],cl
  402659:	lds    esi,FWORD PTR [edi-0x768e6c01]
  40265f:	add    BYTE PTR [ebx-0x73ffe9b7],al
  402665:	addr16 add bh,bh
  402668:	call   DWORD PTR [edi]
  40266a:	aad    0x83
  40266c:	push   eax
  40266d:	mov    esp,0xbf89ffff
  402672:	and    eax,DWORD PTR [eax]
  402674:	(bad)  
  402675:	call   0x5e:0x5ffffff
  40267c:	dec    ecx
  40267d:	leave  
  40267e:	int3   
  40267f:	add    bh,bh
  402681:	mov    al,0xe5
  402683:	(bad)  
  402684:	jge    0x402640
  402686:	add    BYTE PTR [eax],al
  402688:	call   FWORD PTR [eax-0x52]
  40268b:	add    BYTE PTR [edx+0x8300ee],bh
  402691:	sub    eax,0xe94d000f
  402696:	(bad)  
  402697:	(bad)  
  402698:	dec    DWORD PTR [edi-0x17]
  40269b:	add    BYTE PTR [edx-0x7c76004f],al
  4026a1:	pop    edi
  4026a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026a3:	jmp    FWORD PTR [edi+edx*2]
  4026a6:	int3   
  4026a7:	(bad)  
  4026a8:	jmp    ebp
  4026aa:	dec    BYTE PTR [ecx-0x76004499]
  4026b0:	call   FWORD PTR [edi-0x2257ffe1]
  4026b6:	(bad)  
  4026b7:	inc    DWORD PTR [ebx-0x36000125]
  4026bd:	jle    0x4026be
  4026bf:	inc    DWORD PTR [ebx+0x78ff1692]
  4026c5:	cmp    cl,ah
  4026c7:	(bad)  
  4026c8:	jmp    DWORD PTR [edi+0x3d]
  4026cb:	jmp    FWORD PTR [edx+ebp*4-0x6b010000]
  4026d2:	loope  0x4026d4
  4026d4:	mov    esp,0xccffffb6
  4026d9:	shr    BYTE PTR [eax-0x7cd57c01],cl
  4026df:	dec    DWORD PTR [ecx+0x32ffe889]
  4026e5:	pop    es
  4026e6:	add    BYTE PTR [ebx-0x7ceab600],al
  4026ec:	mov    ebp,0x89ff00d8
  4026f1:	xchg   BYTE PTR [ebp-0x347b00],cl
  4026f7:	add    bh,bh
  4026f9:	mov    ds:0x5137ffbc,al
  4026fe:	inc    DWORD PTR [eax]
  402700:	add    dh,ch
  402702:	pop    edi
  402703:	call   edi
  402705:	cmp    eax,DWORD PTR [ebx-0x5fb17c01]
  40270b:	add    BYTE PTR [ebx+0x64],cl
  40270e:	or     esp,0xffffffff
  402711:	fs je  0x402714
  402714:	xchg   ecx,eax
  402715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402716:	mov    DWORD PTR [eax],eax
  402718:	jmp    FWORD PTR [ebp-0x3b7a008f]
  40271e:	(bad)  
  40271f:	inc    DWORD PTR [eax]
  402721:	pop    edi
  402722:	push   0xff94e5ff
  402727:	int3   
  402728:	mov    DWORD PTR [ebp+0x5b4c0030],esp
  40272e:	add    BYTE PTR [eax],al
  402730:	(bad)  
  402731:	jmp    0x67c3b120
  402736:	(bad)  
  402737:	dec    esp
  402739:	mov    edx,0xf0cc00a1
  40273e:	dec    esp
  402740:	add    BYTE PTR [edi-0x3a],dh
  402743:	dec    DWORD PTR [edi-0x7c7c]
  402749:	jp     0x402773
  40274b:	mov    DWORD PTR [eax-0x21],ebx
  40274e:	add    BYTE PTR [ebx-0x76f5b000],al
  402754:	pusha  
  402755:	cmp    ecx,DWORD PTR [ecx+0xa2083ff]
  40275b:	push   DWORD PTR [edx]
  40275d:	pop    ss
  40275e:	dec    esp
  402760:	add    DWORD PTR [edx],0x8
  402763:	inc    DWORD PTR [edx+0x1b]
  402766:	inc    DWORD PTR [eax]
  402768:	call   DWORD PTR [eax]
  40276a:	add    BYTE PTR cs:[ebp-0x56],bl
  40276e:	add    BYTE PTR [eax],al
  402770:	and    DWORD PTR [edx+0x54],0x0
  402774:	shr    ebx,cl
  402776:	inc    DWORD PTR [eax]
  402778:	(bad)  
  402779:	call   0x4dd7b15d
  40277e:	inc    DWORD PTR [eax]
  402780:	add    BYTE PTR [ebp+0x40],bh
  402783:	add    dl,cl
  402785:	mov    eax,0xc3ff00ff
  40278a:	jg     0x40278c
  40278c:	(bad)  
  40278d:	daa    
  40278e:	int3   
  40278f:	inc    DWORD PTR [eax]
  402791:	aam    0x11
  402793:	call   DWORD PTR [ebx+0xffff19]
  402799:	mov    ds:0x6cd7ff8a,eax
  40279e:	cmp    edi,0x0
  4027a1:	neg    BYTE PTR [edx-0xc20501]
  4027a7:	dec    DWORD PTR [ecx-0x6a7c9776]
  4027ad:	call   0xff04:0x8b0000ff
  4027b4:	mov    eax,DWORD PTR [edx]
  4027b6:	mov    edi,edi
  4027b8:	add    BYTE PTR [edi+0x6a6f89c1],ah
  4027be:	add    ah,cl
  4027c0:	add    BYTE PTR [edi+0x5317ff07],bl
  4027c6:	inc    DWORD PTR [eax]
  4027c8:	add    BYTE PTR [ebp+0x596b00f5],ah
  4027ce:	inc    DWORD PTR [ebx-0x149401]
  4027d4:	inc    esp
  4027d5:	jecxz  0x4027d7
  4027d7:	(bad)  
  4027d8:	inc    DWORD PTR [edx]
  4027da:	xchg   esp,eax
  4027db:	int3   
  4027dc:	push   esi
  4027dd:	mov    cl,0xcc
  4027df:	int3   
  4027e0:	cmp    edx,0xffffffe9
  4027e3:	dec    DWORD PTR [edx+0x29]
  4027e6:	add    DWORD PTR [eax],0x0
  4027e9:	ss cmp edi,0xff005fa2
  4027f0:	inc    DWORD PTR [edi+0x74]
  4027f3:	push   DWORD PTR [ebx+0xffff20]
  4027f9:	outs   dx,DWORD PTR ds:[esi]
  4027fa:	pusha  
  4027fb:	inc    DWORD PTR [ebp-0x2d]
  4027fe:	add    DWORD PTR [ebx+0x9513cc],0x76
  402805:	retf   0xffff
  402808:	jmp    DWORD PTR [eax]
  40280a:	mov    bl,0xcc
  40280c:	mov    ch,0x1d
  40280e:	(bad)  
  40280f:	inc    DWORD PTR [eax]
  402811:	ja     0x4027cc
  402813:	(bad)  
  402814:	sti    
  402815:	enter  0x83ff,0x0
  402819:	adc    BYTE PTR [ecx-0x7d],bl
  40281c:	xchg   esp,eax
  40281d:	leave  
  40281e:	(bad)  
  40281f:	(bad)  
  402820:	push   DWORD PTR [esi+0x3d]
  402823:	(bad)  
  402824:	aas    
  402825:	retf   0xff89
  402828:	jmp    FWORD PTR [ecx-0x6a]
  40282b:	add    dl,bh
  40282d:	retf   0xff
  402830:	inc    DWORD PTR [edi]
  402832:	rol    DWORD PTR [ebx-0x76ff355a],cl
  402838:	jmp    esi
  40283a:	push   esi
  40283b:	jmp    FWORD PTR [ebp-0xff76]
  402841:	rol    BYTE PTR [esi],1
  402843:	inc    DWORD PTR [ecx]
  402845:	xchg   ecx,eax
  402846:	add    DWORD PTR [eax],0xffffffff
  402849:	lahf   
  40284a:	push   ss
  40284b:	add    BYTE PTR [ebp+0x7],bh
  402851:	mov    ah,0x0
  402853:	add    BYTE PTR [ebx-0x12],al
  402856:	inc    DWORD PTR [eax]
  402858:	or     esp,0xffffffbb
  40285b:	add    BYTE PTR [esi],dh
  40285d:	pop    ss
  40285e:	add    BYTE PTR [eax],al
  402860:	sbb    ecx,0xffffff83
  402863:	mov    DWORD PTR [ebx-0x33e0],edi
  402869:	mov    dh,0x7b
  40286b:	int3   
  40286c:	call   0x5c65:0xffccffb0
  402873:	int3   
  402874:	dec    esi
  402875:	icebp  
  402876:	inc    DWORD PTR [eax]
  402878:	call   FWORD PTR [edi]
  40287a:	sti    
  40287b:	sbb    DWORD PTR [edi-0x33ffab],0xfffffff2
  402882:	jno    0x402884
  402884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402885:	mov    edi,edi
  402887:	(bad)  
  402888:	call   DWORD PTR [eax-0x45b1005d]
  40288e:	add    ah,cl
  402890:	add    dh,ch
  402892:	mov    dl,0xff
  402894:	xor    BYTE PTR [ecx-0x71003301],ch
  40289a:	ror    ah,0x71
  40289d:	mov    eax,0x4983ff83
  4028a2:	xchg   edi,edi
  4028a4:	jno    0x4028bf
  4028a6:	cmp    edi,0x0
  4028a9:	xchg   ebx,eax
  4028aa:	icebp  
  4028ab:	inc    ebx
  4028ad:	daa    
  4028ae:	add    BYTE PTR [eax],al
  4028b0:	or     DWORD PTR [ebx+ebp*4-0x7c50dd7d],0xffffffff
  4028b8:	call   DWORD PTR [ecx]
  4028ba:	in     al,dx
  4028bb:	call   FWORD PTR [esi+0x39]
  4028be:	(bad)  
  4028bf:	inc    DWORD PTR [ebx-0x377c6d4a]
  4028c5:	scas   eax,DWORD PTR es:[edi]
  4028c6:	inc    DWORD PTR [eax]
  4028c8:	or     DWORD PTR [edx],0xffffffac
  4028cb:	int3   
  4028cc:	fstp   QWORD PTR [esp+ecx*8]
  4028cf:	cmp    edi,0x53
  4028d2:	push   ebp
  4028d3:	add    BYTE PTR [eax+edx*2],al
  4028d6:	inc    DWORD PTR [eax]
  4028d8:	call   DWORD PTR [ebp+0x3d]
  4028db:	int3   
  4028dc:	dec    ebx
  4028dd:	push   0x80ff83ff
  4028e2:	in     al,0xff
  4028e4:	sub    BYTE PTR [edx+0x10ff0000],ah
  4028ea:	or     eax,DWORD PTR [eax]
  4028ec:	lock cmp eax,0xe6ccff00
  4028f2:	int3   
  4028f3:	int3   
  4028f4:	mov    ah,0xe0
  4028f6:	inc    DWORD PTR [eax]
  4028f8:	push   DWORD PTR [eax-0x2ea3ff22]
  4028fe:	add    BYTE PTR [ecx-0xf32e01],cl
  402904:	je     0x4028a0
  402906:	mov    DWORD PTR [ecx+0xc8c800],ecx
  40290c:	or     ebx,DWORD PTR [edx-0x1]
  40290f:	add    bh,bh
  402911:	jno    0x402924
  402913:	add    BYTE PTR ds:0x8900003a,al
  402919:	pop    ebp
  40291a:	jecxz  0x40291b
  40291c:	aaa    
  40291d:	retf   0x83
  402920:	add    BYTE PTR [edi],dh
  402922:	lock mov edx,eax
  402925:	add    al,0xff
  402927:	add    bh,bh
  402929:	add    ah,0xff
  40292c:	cs jb  0x40292f
  40292f:	inc    DWORD PTR [ebx-0x7fffee65]
  402935:	inc    ecx
  402936:	add    BYTE PTR [eax],al
  402938:	push   DWORD PTR [ebp-0x3f867ca8]
  40293e:	mov    DWORD PTR [ecx-0x76ab3a01],ecx
  402944:	into   
  402945:	out    dx,al
  402946:	add    BYTE PTR [ebx-0x2c9e00],al
  40294c:	jmp    0x402931
  402951:	push   eax
  402952:	xchg   edi,edi
  402954:	add    cl,BYTE PTR [ecx-0x1]
  402957:	cmp    edi,0x4a
  40295a:	mov    eax,DWORD PTR [eax]
  40295c:	jmp    0x8a3f29c1
  402961:	repz xchg edi,eax
  402963:	dec    DWORD PTR [ebx]
  402965:	xchg   ecx,eax
  402966:	(bad)  
  402967:	dec    esp
  402969:	or     BYTE PTR [edx-0x7d],ch
  40296c:	aaa    
  40296d:	mov    esp,0xcecc83ff
  402972:	sbb    edi,edi
  402974:	cmp    eax,0xff83836e
  402979:	ins    BYTE PTR es:[edi],dx
  40297a:	mov    eax,DWORD PTR [eax]
  40297c:	daa    
  40297d:	push   ebx
  40297e:	add    bh,bh
  402980:	add    BYTE PTR [ecx],ah
  402982:	pusha  
  402983:	int3   
  402984:	ficomp DWORD PTR [ebx]
  402986:	add    bh,bh
  402988:	int3   
  402989:	mov    cl,0x8c
  40298b:	call   DWORD PTR [eax]
  40298d:	mov    bl,0xff
  40298f:	mov    edi,edi
  402991:	das    
  402992:	mov    esp,0x132483
  402997:	inc    DWORD PTR [ebx+0x49008f71]
  40299d:	sar    edi,cl
  40299f:	inc    DWORD PTR [ebx-0x30002024]
  4029a5:	xchg   edx,eax
  4029a6:	inc    DWORD PTR [ebx-0xabd01]
  4029ac:	mov    BYTE PTR ds:0xf3ffff00,bl
  4029b2:	cmp    DWORD PTR [eax],eax
  4029b4:	or     BYTE PTR [ebx+0x0],ch
  4029b7:	inc    DWORD PTR [ebx+0x71cca7e5]
  4029bd:	in     al,0xff
  4029bf:	add    BYTE PTR [ecx+0x7e008caf],cl
  4029c5:	mov    ebp,0x9cc8300
  4029ca:	dec    esi
  4029cb:	add    BYTE PTR [edx],dl
  4029cd:	dec    ebx
  4029ce:	add    bh,bh
  4029d0:	jmp    FWORD PTR ds:0x9a5c00a8
  4029d6:	inc    DWORD PTR [eax]
  4029d8:	jmp    DWORD PTR [edi+0x54]
  4029db:	add    BYTE PTR [ebp-0x76],ah
  4029de:	add    bh,bh
  4029e0:	add    ah,dh
  4029e2:	aad    0x0
  4029e4:	xchg   ecx,eax
  4029e5:	(bad)  
  4029e6:	(bad)  
  4029e7:	dec    DWORD PTR [ecx+0x17893e20]
  4029ed:	das    
  4029ee:	add    bh,bh
  4029f0:	int3   
  4029f1:	dec    eax
  4029f2:	pop    esi
  4029f3:	inc    DWORD PTR [ebx-0x7600004d]
  4029f9:	sub    eax,0x94a00e9
  4029fe:	add    DWORD PTR [eax],0xffffffff
  402a01:	mov    ch,0x73
  402a03:	int3   
  402a04:	or     DWORD PTR [edi+edi*8-0x34],ebx
  402a08:	add    cl,bh
  402a0a:	add    BYTE PTR [eax],0x85
  402a0d:	rol    DWORD PTR [ebx-0x32e0100],0x0
  402a14:	ins    BYTE PTR es:[edi],dx
  402a15:	xchg   edx,eax
  402a16:	(bad)  
  402a17:	inc    DWORD PTR [ebx+0x43ff9511]
  402a1d:	dec    esi
  402a1e:	cmp    edi,0xffffff83
  402a21:	push   ebx
  402a22:	xchg   bh,bh
  402a24:	fs jmp 0x402a27
  402a27:	add    bh,bh
  402a29:	mov    ebx,0x8f5e00a4
  402a2e:	(bad)  
  402a2f:	inc    DWORD PTR [eax]
  402a31:	(bad)  
  402a32:	stc    
  402a33:	(bad)  
  402a34:	jl     0x402a5d
  402a36:	add    BYTE PTR [ebx-0x3340b777],al
  402a3c:	and    al,0x5c
  402a3e:	int3   
  402a3f:	inc    DWORD PTR [eax]
  402a41:	dec    ecx
  402a42:	mov    BYTE PTR [eax],al
  402a44:	(bad)  
  402a45:	pop    edx
  402a46:	add    bh,bh
  402a48:	(bad)  
  402a49:	mov    esi,0xbdab00b2
  402a4e:	inc    DWORD PTR [ebx+0xa17a00]
  402a54:	cmc    
  402a55:	mov    es,WORD PTR [eax]
  402a57:	inc    DWORD PTR [ebx+0x29cceb66]
  402a5d:	jge    0x402a5e
  402a5f:	add    bh,bh
  402a61:	imul   BYTE PTR [esi]
  402a63:	int3   
  402a64:	pop    edx
  402a65:	stos   DWORD PTR es:[edi],eax
  402a66:	cmp    edi,0x0
  402a69:	std    
  402a6a:	lahf   
  402a6b:	int3   
  402a6c:	aam    0xd7
  402a6e:	int3   
  402a6f:	inc    DWORD PTR [eax]
  402a71:	fs mov ?,edi
  402a74:	fiadd  WORD PTR [eax-0x34]
  402a77:	add    bh,bh
  402a79:	add    ecx,esi
  402a7b:	add    BYTE PTR [eax-0xff68],dh
  402a81:	mov    ds:0x6c55ffce,al
  402a86:	dec    esp
  402a88:	add    cl,ch
  402a8a:	in     eax,0xff
  402a8c:	cmp    al,0x1f
  402a8e:	inc    DWORD PTR [ebx-0x76f7e834]
  402a94:	cmp    ch,BYTE PTR [eax]
  402a96:	add    BYTE PTR [ebx-0x7cf96000],al
  402a9c:	xchg   ebp,eax
  402a9d:	mov    dl,0x83
  402a9f:	(bad)  
  402aa0:	call   DWORD PTR [eax+0x3248cc0d]
  402aa6:	inc    DWORD PTR [ebx-0xe96934]
  402aac:	mov    edi,0xff00ffe0
  402ab1:	sub    eax,0x7e37ff1e
  402ab6:	(bad)  
  402ab7:	dec    esp
  402ab9:	lods   al,BYTE PTR ds:[esi]
  402aba:	add    BYTE PTR ss:[eax+esi*1-0x1f337c7d],ah
  402ac2:	add    eax,0xff275500
  402ac7:	add    bh,bh
  402ac9:	jae    0x402ae7
  402acb:	inc    DWORD PTR ds:0x89ff8950
  402ad1:	lahf   
  402ad2:	push   esp
  402ad3:	inc    DWORD PTR [esi+0x7b]
  402ad6:	add    bh,bh
  402ad8:	dec    esi
  402ada:	mov    ecx,0xffd015ff
  402adf:	add    DWORD PTR [eax],0x6a
  402ae2:	in     al,0xff
  402ae4:	mov    ebp,edi
  402ae6:	add    BYTE PTR [eax],al
  402ae8:	jmp    FWORD PTR [ecx+ebp*1]
  402aeb:	int3   
  402aec:	cmp    DWORD PTR [esi],edi
  402aee:	inc    DWORD PTR [eax]
  402af0:	int3   
  402af1:	cmp    al,0x96
  402af3:	int3   
  402af4:	lea    esp,[ecx]
  402af6:	cmp    edi,0xffffff83
  402af9:	adc    DWORD PTR [edx-0xf5401],edx
  402aff:	inc    DWORD PTR [ebx-0x40000568]
  402b05:	bound  ecx,QWORD PTR [ecx+0x4e040000]
  402b0b:	add    ch,ah
  402b0d:	adc    ah,cl
  402b0f:	add    DWORD PTR [eax],0xfffffff5
  402b12:	sub    edi,edi
  402b14:	mov    dl,0x86
  402b16:	add    BYTE PTR [eax],al
  402b18:	(bad)  
  402b19:	mov    ebp,0x48fd0014
  402b1e:	(bad)  
  402b1f:	dec    esp
  402b21:	xchg   ah,al
  402b23:	int3   
  402b24:	or     DWORD PTR [esi+0x5dff0083],edi
  402b2a:	pop    edi
  402b2b:	sbb    DWORD PTR [ebx],0xffffffc6
  402b2e:	add    BYTE PTR [eax],al
  402b30:	xor    DWORD PTR [eax+esi*2+0x0],0xffffffd7
  402b35:	call   0xdf:0xe6ff0083
  402b3c:	ret    0xffa6
  402b3f:	mov    esp,ecx
  402b41:	push   ds
  402b42:	hlt    
  402b43:	inc    DWORD PTR [esi-0x7c]
  402b46:	(bad)  
  402b47:	(bad)  
  402b48:	inc    DWORD PTR [esi]
  402b4a:	xchg   edi,eax
  402b4b:	push   DWORD PTR [ebp-0x7c3f]
  402b51:	ja     0x402b4f
  402b53:	call   DWORD PTR [edx]
  402b55:	inc    edx
  402b56:	mov    edi,edi
  402b58:	add    BYTE PTR [edx],bh
  402b5a:	cmp    al,0xff
  402b5c:	inc    edi
  402b5d:	xor    BYTE PTR [eax],al
  402b5f:	inc    DWORD PTR [eax]
  402b61:	arpl   si,dx
  402b63:	(bad)  
  402b64:	(bad)  
  402b65:	ds int3 
  402b67:	dec    DWORD PTR [ecx-0x9f67]
  402b6d:	mov    edx,0x97ffffff
  402b72:	inc    ebp
  402b73:	jmp    DWORD PTR [edi-0x76ff009c]
  402b79:	iret   
  402b7a:	and    edi,edi
  402b7c:	out    dx,eax
  402b7d:	pusha  
  402b7e:	(bad)  
  402b7f:	(bad)  
  402b80:	jmp    DWORD PTR [edx]
  402b82:	add    BYTE PTR cs:[edx+0x5a],bh
  402b86:	dec    esp
  402b88:	adc    DWORD PTR [ecx+0xf],0xffffff83
  402b8c:	inc    ecx
  402b8d:	xor    edi,edi
  402b8f:	add    BYTE PTR [eax],al
  402b91:	jmp    0x26e22bd8
  402b96:	add    BYTE PTR [eax],al
  402b98:	sbb    DWORD PTR [esi-0x2f790046],0xffffffff
  402b9f:	add    BYTE PTR [ebx+0x5b000c3d],al
  402ba5:	cmc    
  402ba6:	add    bh,bh
  402ba8:	int3   
  402ba9:	mov    WORD PTR ds:[eax],es
  402bac:	inc    ebp
  402bad:	mov    ds:0x38300ff,al
  402bb2:	dec    eax
  402bb3:	xor    DWORD PTR [esp+edi*4],0xffffffff
  402bb7:	inc    DWORD PTR [eax]
  402bb9:	rcr    BYTE PTR [ecx-0x76f91f00],cl
  402bbf:	add    BYTE PTR [eax],al
  402bc1:	jge    0x402b58
  402bc3:	add    BYTE PTR [edi],bl
  402bc5:	sub    al,BYTE PTR [ebx+0x81600cc]
  402bcb:	dec    DWORD PTR [eax-0x6d]
  402bce:	add    bh,bh
  402bd0:	push   DWORD PTR [eax-0x1]
  402bd3:	call   DWORD PTR [ebx-0xffffc7]
  402bd9:	or     al,0x7a
  402bdb:	push   DWORD PTR [eax-0x44]
  402bde:	inc    DWORD PTR [eax]
  402be0:	mov    DWORD PTR [ebx+esi*8-0x1],eax
  402be4:	adc    ebp,edi
  402be6:	add    BYTE PTR [eax],al
  402be8:	add    BYTE PTR [ebp-0x4f],al
  402beb:	push   DWORD PTR [edx+0x83002b]
  402bf1:	mov    WORD PTR [eax-0x765d1b01],gs
  402bf7:	inc    DWORD PTR [eax]
  402bf9:	iret   
  402bfa:	loope  0x402b85
  402bfc:	jge    0x402ba3
  402bfe:	(bad)  
  402bff:	dec    esp
  402c01:	mov    ds:0xf59b00ab,eax
  402c06:	add    DWORD PTR [ebx-0x76621e01],0x2
  402c0d:	pop    ecx
  402c0e:	int3   
  402c0f:	add    BYTE PTR [eax],al
  402c11:	aaa    
  402c12:	inc    ecx
  402c13:	int3   
  402c14:	jmp    0x731f:0xffff000d
  402c1b:	call   DWORD PTR [ecx]
  402c1d:	add    BYTE PTR [ecx-0x5ca7c34],cl
  402c23:	call   DWORD PTR [edx+0x23]
  402c26:	(bad)  
  402c27:	(bad)  
  402c28:	dec    DWORD PTR [edi-0x52]
  402c2b:	add    BYTE PTR [esi-0x3],dh
  402c31:	fdivr  st(1),st
  402c33:	add    ecx,0x61
  402c36:	add    DWORD PTR [ebx+0x1d57ff],0x7c
  402c3d:	push   edx
  402c3e:	add    BYTE PTR [eax],al
  402c40:	sbb    DWORD PTR [edx],0xffffff87
  402c43:	dec    DWORD PTR [ebp+0x8900a6]
  402c49:	ja     0x402be6
  402c4b:	add    BYTE PTR [ecx+ecx*1-0x1],dh
  402c4f:	add    bh,bh
  402c51:	adc    ecx,eax
  402c53:	call   DWORD PTR [ebp+0x83ba]
  402c59:	dec    ebp
  402c5a:	inc    DWORD PTR es:[esi-0x5f]
  402c5e:	add    bh,bh
  402c60:	push   DWORD PTR [eax+0x700fccf2]
  402c66:	cmp    edi,0x0
  402c69:	xor    bh,BYTE PTR [edx]
  402c6b:	add    BYTE PTR [edx],dh
  402c6d:	mov    ds:0x9bffff00,al
  402c72:	inc    DWORD PTR fs:[ebx-0x49]
  402c79:	dec    edi
  402c7a:	fs int3 
  402c7c:	retf   0x71
  402c7f:	add    ah,cl
  402c81:	sub    ebp,DWORD PTR [esi-0x1]
  402c84:	sti    
  402c85:	add    BYTE PTR ss:[ebx-0x33c5f87d],al
  402c8c:	jge    0x402ce1
  402c8e:	cmp    edi,0xffffff89
  402c91:	mov    DWORD PTR [edx-0x2dd901],edi
  402c97:	int3   
  402c98:	jmp    DWORD PTR [ecx-0x57]
  402c9b:	add    ch,ah
  402c9d:	push   esi
  402c9e:	add    bh,bh
  402ca0:	and    DWORD PTR [ebp-0x10],0xffffffcc
  402ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ca5:	jne    0x402c73
  402ca7:	add    bh,bh
  402ca9:	add    bl,BYTE PTR [eax+0x762bff]
  402caf:	add    BYTE PTR [eax],al
  402cb1:	sub    ecx,edx
  402cb3:	sub    DWORD PTR [eax-0x7b],0xffffffb9
  402cba:	idiv   bh
  402cbc:	cdq    
  402cbd:	les    eax,FWORD PTR [ebx-0x49ebff01]
  402cc3:	add    BYTE PTR [ebx-0xffff9c],dh
  402cc9:	mov    ds:0x83e7ff2b,eax
  402cce:	add    DWORD PTR [eax],0xffffff83
  402cd1:	lock stos BYTE PTR es:[edi],al
  402cd3:	add    BYTE PTR [ecx],al
  402cd5:	jo     0x402cd7
  402cd7:	dec    esp
  402cd9:	int3   
  402cda:	int3   
  402cdb:	int3   
  402cdc:	int3   
  402cdd:	int3   
  402cde:	int3   
  402cdf:	int3   
  402ce0:	pop    DWORD PTR [ebx]
  402ce2:	inc    DWORD PTR [eax]
  402ce4:	add    bh,bh
  402ce6:	loope  0x402d06
  402ce8:	jmp    FWORD PTR [ebp-0x129c01]
  402cee:	int3   
  402cef:	and    DWORD PTR [edi],0xffffffd8
  402cf2:	add    bh,bh
  402cf4:	inc    DWORD PTR [ebx+0x3ecce6dd]
  402cfa:	mov    DWORD PTR [edx-0x357cffd3],ecx
  402d00:	repnz out dx,eax
  402d02:	add    BYTE PTR [ebx+0x74d3ff83],al
  402d08:	inc    DWORD PTR [ebx]
  402d0a:	int3   
  402d0b:	cmp    BYTE PTR [edx-0x1],0x83
  402d0f:	mov    ecx,0xffcc3e3f
  402d14:	inc    DWORD PTR [eax]
  402d16:	cmp    eax,0xff27ffc3
  402d1b:	cmp    al,0xd4
  402d1d:	(bad)  
  402d1e:	jmp    FWORD PTR [edx+ecx*4-0x1e]
  402d22:	int3   
  402d23:	add    BYTE PTR [ebx-0x33a63a7d],al
  402d29:	push   cs
  402d2a:	add    BYTE PTR [edi+0xd00ff2d],dl
  402d30:	sti    
  402d31:	xor    bh,bh
  402d33:	dec    DWORD PTR [ecx-0x7680fc01]
  402d39:	imul   edi,edi,0xff001805
  402d3f:	sbb    ch,BYTE PTR [eax+edi*4]
  402d42:	(bad)  
  402d43:	(bad)  
  402d44:	inc    DWORD PTR [ebx+0x2a07]
  402d4a:	jmp    FWORD PTR ds:0x950000ef
  402d50:	in     al,0x40
  402d52:	dec    esp
  402d54:	inc    DWORD PTR [eax]
  402d56:	cmp    DWORD PTR [esi-0x34],esp
  402d59:	push   ecx
  402d5a:	int3   
  402d5b:	jle    0x402d52
  402d5d:	cmp    edi,0xffffffb7
  402d60:	rcr    BYTE PTR [esi-0x7d],0x7c
  402d67:	pop    DWORD PTR [ebx-0x338000cd]
  402d6d:	mov    DWORD PTR [eax],eax
  402d6f:	jecxz  0x402dcf
  402d71:	lds    eax,FWORD PTR [eax]
  402d73:	add    ah,cl
  402d75:	xor    DWORD PTR [eax],0x23
  402d78:	add    ah,bl
  402d7a:	(bad)  
  402d7b:	mov    esp,0x87000025
  402d80:	outs   dx,BYTE PTR ds:[esi]
  402d81:	cmp    bh,0x0
  402d84:	(bad)  
  402d85:	inc    DWORD PTR [ebx-0x7c]
  402d88:	int3   
  402d89:	lods   eax,DWORD PTR ds:[esi]
  402d8a:	int3   
  402d8b:	(bad)  
  402d8c:	cmc    
  402d8d:	add    DWORD PTR [eax],0xffffffbc
  402d90:	cmc    
  402d91:	fdiv   st(7),st
  402d93:	add    DWORD PTR [eax],0x0
  402d96:	fdiv   QWORD PTR [ebx-0x7d]
  402d99:	mov    es,WORD PTR [eax]
  402d9b:	imul   esi,DWORD PTR [edx-0x27a8ff7d],0xffffffed
  402da2:	inc    DWORD PTR [eax]
  402da4:	dec    DWORD PTR [ecx+0x18cc3cd1]
  402daa:	inc    DWORD PTR ds:0xaaffff9e
  402db0:	imul   ecx,DWORD PTR [edx-0x7c0001],0x75
  402db7:	stc    
  402db8:	jmp    FWORD PTR [ebx-0x76ffdc01]
  402dbe:	call   edx
  402dc0:	aam    0x46
  402dc2:	add    bh,bh
  402dc4:	add    bh,bh
  402dc6:	or     esi,esp
  402dc8:	add    dl,ch
  402dca:	dec    DWORD PTR ds:0xc5ffcca9
  402dd0:	inc    edi
  402dd1:	jns    0xb6402dd6
  402dd7:	mov    bh,0xff
  402dd9:	xlat   BYTE PTR ds:[ebx]
  402dda:	push   DWORD PTR [edi+edx*2]
  402ddd:	inc    DWORD PTR [eax]
  402ddf:	fsub   st,st(0)
  402de1:	cmp    ecx,DWORD PTR [ecx-0x6b000001]
  402de7:	inc    esi
  402de8:	push   DWORD PTR [ecx-0x577000]
  402dee:	int3   
  402def:	sub    edx,DWORD PTR [eax]
  402df1:	and    DWORD PTR [ebx-0x44ff007d],eax
  402df7:	retf   0xdd00
  402dfa:	add    BYTE PTR [ebx+0x6e],bh
  402dfd:	add    BYTE PTR [eax],al
  402dff:	sbb    eax,0xff83770a
  402e04:	inc    DWORD PTR [eax]
  402e06:	lods   eax,DWORD PTR ds:[esi]
  402e07:	in     eax,0x83
  402e09:	cli    
  402e0a:	add    BYTE PTR [ecx],ch
  402e0c:	in     al,0x0
  402e0e:	inc    DWORD PTR [esi+eax*8-0xff3368]
  402e15:	add    BYTE PTR [ebp-0x7c5f7c86],ch
  402e1b:	stos   DWORD PTR es:[edi],eax
  402e1c:	lods   eax,DWORD PTR ds:[esi]
  402e1d:	(bad)  
  402e1e:	call   DWORD PTR [ecx+0x3859]
  402e24:	mov    DWORD PTR [eax],eax
  402e26:	out    0x3a,al
  402e28:	add    BYTE PTR [ecx+0x0],bh
  402e2b:	cmp    bl,dl
  402e2d:	or     esp,0xffffff82
  402e30:	hlt    
  402e31:	pop    ecx
  402e32:	add    bh,bh
  402e34:	add    bh,bh
  402e36:	js     0x402e3b
  402e38:	dec    DWORD PTR [esi+0x12baff]
  402e3e:	add    BYTE PTR [eax+ecx*8+0xa],ch
  402e42:	(bad)  
  402e43:	(bad)  
  402e44:	inc    DWORD PTR [eax]
  402e46:	dec    ecx
  402e47:	mov    cs,WORD PTR [ecx-0x853003a]
  402e4d:	add    BYTE PTR [eax],al
  402e4f:	fwait
  402e50:	test   DWORD PTR [ebx],esp
  402e52:	add    bh,bh
  402e54:	add    BYTE PTR [ebx-0x4eff2399],al
  402e5a:	(bad)  
  402e5b:	mov    esp,0xe7ff8985
  402e60:	xor    DWORD PTR [edi],ebp
  402e62:	add    BYTE PTR [ecx-0x591a0001],cl
  402e68:	int3   
  402e69:	xor    BYTE PTR [eax],al
  402e6b:	cmp    ch,BYTE PTR ds:0x6bd08383
  402e71:	cmp    al,0xff
  402e73:	mov    esp,ecx
  402e75:	add    BYTE PTR [esi-0x33d2ff7a],dh
  402e7b:	adc    eax,0xe7ff0002
  402e80:	mov    eax,0x89fffffd
  402e85:	int3   
  402e86:	jmp    0xff9db1f4
  402e8b:	fiadd  WORD PTR [ebx-0x1]
  402e8e:	(bad)  
  402e8f:	stc    
  402e90:	ror    BYTE PTR [ecx-0x1],0x0
  402e94:	(bad)  
  402e95:	(bad)  
  402e96:	fmul   DWORD PTR ds:0x63832eff
  402e9c:	mov    ds:0x90a38383,eax
  402ea1:	cwde   
  402ea2:	inc    DWORD PTR [eax]
  402ea4:	add    BYTE PTR [eax],al
  402ea6:	das    
  402ea7:	nop
  402ea8:	add    DWORD PTR [ecx+0xe592ff],0xffffff89
  402eaf:	or     DWORD PTR [esi-0xfffff1],edx
  402eb5:	add    al,bh
  402eb7:	push   ecx
  402eb8:	dec    DWORD PTR [edx]
  402eba:	call   FWORD PTR [ebp+0x7000837a]
  402ec0:	adc    ebx,DWORD PTR [eax+eax*1]
  402ec3:	inc    DWORD PTR [eax]
  402ec5:	(bad)  
  402ec6:	stc    
  402ec7:	inc    esi
  402ec8:	call   FWORD PTR [edi-0x7c0e4834]
  402ece:	jmp    DWORD PTR [ebx+0xc291]
  402ed4:	add    bh,bh
  402ed6:	jno    0x402f38
  402ed8:	inc    DWORD PTR [esi]
  402eda:	call   FWORD PTR ds:0x35ffff2d
  402ee0:	dec    esp
  402ee1:	cmp    bh,0xcc
  402ee4:	add    BYTE PTR [eax],al
  402ee6:	mov    esp,DWORD PTR [ebx]
  402ee8:	int3   
  402ee9:	sbb    eax,0x1eaeff
  402eee:	and    DWORD PTR [ebx-0x337c6d75],0xffffff83
  402ef5:	inc    DWORD PTR [edx-0x7076da]
  402efb:	lds    edi,FWORD PTR ds:0x420ccff
  402f01:	jmp    0xff403005
  402f06:	push   ebx
  402f07:	sbb    DWORD PTR ss:[ebx],0xffffffcc
  402f0b:	sub    BYTE PTR [esp+ecx*8+0x0],0x83
  402f10:	add    DWORD PTR [esi-0x1],edi
  402f13:	inc    DWORD PTR [eax]
  402f15:	add    dh,bl
  402f17:	add    eax,0x2e83c300
  402f1c:	sbb    edi,edi
  402f1e:	call   FWORD PTR [esi-0xa2c]
  402f24:	cmp    edi,0xffffffea
  402f27:	lods   al,BYTE PTR ds:[esi]
  402f28:	add    BYTE PTR [edi+0x560c00],bl
  402f2e:	add    cl,bh
  402f30:	push   0x83ffff6d
  402f35:	add    BYTE PTR [ebp-0x4a],cl
  402f38:	sub    DWORD PTR [esi+0x9c9600],0xffffffff
  402f3f:	xchg   ebx,eax
  402f40:	mov    dh,0x43
  402f42:	mov    edi,edi
  402f44:	add    bh,bh
  402f46:	xchg   esi,eax
  402f47:	test   edi,edi
  402f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4a:	push   edi
  402f4c:	or     al,0x0
  402f4e:	dec    eax
  402f50:	daa    
  402f51:	das    
  402f52:	add    BYTE PTR [ebx+0x6f94ffff],al
  402f58:	add    BYTE PTR [esi],al
  402f5a:	mov    DWORD PTR [eax+ebx*4+0x0],ebx
  402f5e:	mov    DWORD PTR [esi],ebx
  402f60:	add    BYTE PTR [esi+0x83],bl
  402f66:	jne    0x402efd
  402f68:	jmp    FWORD PTR [ebx-0x1]
  402f6b:	sbb    eax,0x23838355
  402f70:	pusha  
  402f71:	or     edi,edi
  402f73:	dec    esp
  402f75:	inc    DWORD PTR [ebx+0x42]
  402f78:	call   FWORD PTR [esi]
  402f7a:	inc    DWORD PTR [ebp+0x22]
  402f7d:	(bad)  
  402f7e:	call   DWORD PTR [ebx]
  402f80:	or     bl,BYTE PTR [edx-0x1]
  402f83:	inc    DWORD PTR [eax]
  402f85:	call   esp
  402f87:	ins    BYTE PTR es:[edi],dx
  402f88:	dec    DWORD PTR [esi]
  402f8a:	(bad)  
  402f8b:	mov    edi,0x2effffc2
  402f90:	out    0x5c,al
  402f92:	(bad)  
  402f93:	inc    DWORD PTR [ebx-0xe3f601]
  402f99:	aaa    
  402f9a:	add    BYTE PTR ds:0x9683001a,dl
  402fa0:	arpl   cx,dx
  402fa2:	int3   
  402fa3:	int3   
  402fa4:	mov    DWORD PTR [ebx-0x3eff2231],eax
  402faa:	add    bl,bh
  402fac:	xchg   ebp,eax
  402fad:	add    bh,bh
  402faf:	mov    ebx,0xff8364fb
  402fb4:	(bad)  
  402fb5:	push   DWORD PTR [esi-0xc7ff02]
  402fbb:	scas   al,BYTE PTR es:[edi]
  402fbc:	(bad)  
  402fbe:	int3   
  402fbf:	mov    ebp,0x8383e330
  402fc4:	or     DWORD PTR [ecx+0x7cffda7e],0xffffff83
  402fcb:	into   
  402fcc:	fiadd  WORD PTR [ebx-0x2cc10f34]
  402fd2:	dec    DWORD PTR [ecx-0x691f0000]
  402fd8:	mov    DWORD PTR [ebp+0x4f4b83],edx
  402fde:	add    BYTE PTR [eax-0x7c000652],ah
  402fe4:	(bad)  
  402fe5:	call   FWORD PTR [ecx+0x19]
  402fe8:	add    BYTE PTR [ecx],bh
  402fea:	add    BYTE PTR [eax-0x76],bh
  402fed:	inc    DWORD PTR [eax]
  402fef:	in     eax,0x1c
  402ff1:	clc    
  402ff2:	inc    DWORD PTR [ebx-0x3a8a7c01]
  402ff8:	push   DWORD PTR [ebx]
  402ffa:	and    DWORD PTR [ecx],0x1b
  402ffd:	add    bh,bh
  402fff:	pop    ebx
  403000:	xor    al,0xd2
  403002:	dec    DWORD PTR [ecx+0x7a508300]
  403008:	add    bl,bh
  40300a:	jmp    FWORD PTR [ebx+0x77]
  40300d:	inc    DWORD PTR [ebx-0x760ed8fa]
  403013:	add    BYTE PTR [eax],al
  403015:	call   DWORD PTR [esi]
  403017:	pop    ebx
  403018:	call   FWORD PTR [ebp+0x0]
  40301b:	mov    bh,0xec
  40301d:	inc    DWORD PTR [eax]
  40301f:	xor    eax,0x89ffd886
  403024:	dec    DWORD PTR [ecx-0x2d00c36c]
  40302a:	add    DWORD PTR [esi+0x5d],0x0
  40302e:	add    BYTE PTR [ecx+0xffc745],dl
  403034:	inc    DWORD PTR [eax]
  403036:	cmp    BYTE PTR [eax+0x0],cl
  403039:	out    0xff,al
  40303b:	mov    ebx,0xebff0041
  403040:	push   esp
  403041:	jmp    0x69af:0xffffff00
  403048:	dec    esp
  40304a:	(bad)  
  40304b:	dec    BYTE PTR [esi]
  40304d:	add    BYTE PTR [ebx-0x8a8aa3],al
  403053:	mov    edi,edi
  403055:	add    BYTE PTR [edx-0x257c63],dl
  40305b:	mov    ?,ecx
  40305d:	add    BYTE PTR [ebx+0x9b97a2],al
  403063:	inc    DWORD PTR [eax]
  403065:	(bad)  
  403066:	call   0xcc543027
  40306b:	jecxz  0x4030cb
  40306d:	inc    DWORD PTR [eax]
  40306f:	jne    0x4030e7
  403071:	pop    DWORD PTR [eax]
  403073:	add    DWORD PTR [eax],0xffffffff
  403076:	xlat   BYTE PTR ds:[ebx]
  403077:	sub    ah,cl
  403079:	and    BYTE PTR [eax],al
  40307b:	xchg   esp,eax
  40307c:	mov    ds:0xa958300,eax
  403081:	clc    
  403082:	(bad)  
  403083:	dec    esp
  403085:	add    BYTE PTR [esi-0x7d],bh
  403088:	sbb    DWORD PTR [esi-0x1],0x75
  40308c:	pop    edi
  40308d:	add    BYTE PTR [eax],al
  40308f:	mov    ch,0xe
  403091:	xor    edi,edi
  403093:	(bad)  
  403094:	inc    DWORD PTR [eax]
  403096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403097:	add    bh,bh
  403099:	add    eax,0xff441fff
  40309e:	add    BYTE PTR [ebx+0x11],ah
  4030a1:	icebp  
  4030a2:	inc    DWORD PTR [eax]
  4030a4:	inc    DWORD PTR [ebx+0x1aff6dff]
  4030aa:	or     DWORD PTR ds:0x3e000037,0x36
  4030b1:	push   ecx
  4030b2:	inc    DWORD PTR [eax]
  4030b4:	add    bh,bh
  4030b6:	pop    ebp
  4030b7:	ins    DWORD PTR es:[edi],dx
  4030b8:	add    BYTE PTR [esi-0x9dba7d],ah
  4030be:	call   DWORD PTR [edi-0x1e]
  4030c1:	enter  0xff,0x83
  4030c5:	call   DWORD PTR [ebx+esi*8-0x1]
  4030c9:	pop    ecx
  4030ca:	adc    DWORD PTR [edx+ecx*2-0x1d300077],0x2b
  4030d2:	inc    DWORD PTR [eax]
  4030d4:	add    BYTE PTR [eax],al
  4030d6:	mov    BYTE PTR [edx-0x16007201],bh
  4030dc:	out    dx,al
  4030dd:	mov    esp,ecx
  4030df:	leave  
  4030e0:	pop    ss
  4030e1:	and    BYTE PTR [eax],al
  4030e3:	add    BYTE PTR [ecx-0x7c9a8101],cl
  4030e9:	daa    
  4030ea:	add    BYTE PTR [edx+0xa],bh
  4030ed:	add    BYTE PTR [eax],al
  4030ef:	leave  
  4030f0:	rol    BYTE PTR [ebx+eax*4+0x0],0x0
  4030f5:	add    BYTE PTR [eax+0xb0080],cl
  4030fb:	or     ch,bl
  4030fd:	dec    esp
  4030ff:	(bad)  
  403100:	in     al,0xab
  403102:	add    DWORD PTR [eax],0xffffffcc
  403105:	add    BYTE PTR [ecx],dh
  403107:	inc    esi
  403108:	(bad)  
  403109:	stc    
  40310a:	add    BYTE PTR [esi],dh
  40310c:	adc    al,0xff
  40310e:	add    ch,cl
  403110:	mov    ecx,0xffff8907
  403115:	add    dh,bh
  403117:	mov    esp,0x22ff45ff
  40311c:	sar    bh,0xff
  40311f:	ret    
  403120:	jno    0x403151
  403122:	or     DWORD PTR [ecx+0x78dffff],0x0
  403129:	and    BYTE PTR [eax],al
  40312b:	jbe    0x4030c6
  40312d:	add    bh,bh
  40312f:	inc    ecx
  403130:	enter  0xfff5,0x0
  403134:	add    bh,bh
  403136:	arpl   WORD PTR [ebx+0x1800e083],bx
  40313c:	cmp    bh,bh
  40313e:	int3   
  40313f:	lock idiv BYTE PTR [ebx-0x3300ff01]
  403146:	mov    dl,0x66
  403148:	int3   
  403149:	fiadd  DWORD PTR [eax]
  40314b:	test   BYTE PTR [edi],bl
  40314d:	mov    DWORD PTR [eax],eax
  40314f:	xor    eax,0xccffed3a
  403154:	add    bh,bh
  403156:	jne    0x4030dd
  403158:	add    DWORD PTR [edx],0xffffffff
  40315b:	loope  0x403144
  40315d:	(bad)  
  40315e:	call   DWORD PTR [ebx-0x5b]
  403161:	mov    edx,0xffffccff
  403166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403167:	and    al,0xff
  403169:	xchg   esi,eax
  40316a:	push   DWORD PTR ds:0x80000044
  403170:	sub    DWORD PTR [bx+di-0x1],ecx
  403175:	cmp    DWORD PTR [ecx],0x53
  403178:	inc    DWORD PTR [ebp-0x1]
  40317b:	adc    cl,0xff
  40317e:	call   FWORD PTR [edi-0x1e]
  403181:	loopne 0x403182
  403183:	int3   
  403184:	add    ah,cl
  403186:	mov    edi,0xcc82893f
  40318b:	or     esi,DWORD PTR [edx+0x508cffff]
  403191:	(bad)
  403194:	add    bh,bh
  403196:	fisubr DWORD PTR [ebx+0x0]
  403199:	pop    edx
  40319a:	add    BYTE PTR [ecx-0x677c7c4d],ah
  4031a0:	sti    
  4031a1:	mov    ecx,0xff00ff00
  4031a6:	lods   al,BYTE PTR ds:[esi]
  4031a7:	add    BYTE PTR es:[ecx+ecx*4-0xff1ce8],ah
  4031af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b0:	sub    esp,DWORD PTR [ebp-0x34]
  4031b6:	gs mov dl,0xff
  4031b9:	call   0xff8331bd
  4031be:	add    BYTE PTR [ebx-0x6c],ah
  4031c1:	fdivr  st,st(7)
  4031c3:	add    ah,cl
  4031c5:	xor    DWORD PTR [edx-0x7c26fff9],0xb
  4031cc:	dec    eax
  4031cd:	add    BYTE PTR [eax],al
  4031cf:	scas   eax,DWORD PTR es:[edi]
  4031d0:	mov    bh,0x4b
  4031d2:	inc    DWORD PTR [eax]
  4031d4:	dec    DWORD PTR [ecx+0x34ff520a]
  4031da:	(bad)  
  4031db:	fadd   st,st(5)
  4031dd:	cmp    edi,0xffffffae
  4031e0:	inc    ebx
  4031e1:	mov    edi,0xff0083
  4031e6:	loope  0x4031cb
  4031e8:	call   DWORD PTR [edx+0x32cdff]
  4031ee:	call   FWORD PTR [eax]
  4031f0:	lds    esp,FWORD PTR [eax]
  4031f2:	inc    DWORD PTR [eax]
  4031f4:	inc    DWORD PTR [eax]
  4031f6:	or     al,0xfa
  4031f8:	add    BYTE PTR [edi+edi*8-0x337c446d],dh
  4031ff:	clc    
  403200:	out    0x42,al
  403202:	mov    edi,edi
  403204:	inc    DWORD PTR [eax]
  403206:	push   ebp
  403207:	sbb    eax,0xab832d00
  40320c:	pop    eax
  40320d:	(bad)  
  40320e:	(bad)  
  40320f:	jge    0x403258
  403211:	out    dx,al
  403212:	add    BYTE PTR [eax],al
  403214:	(bad)  
  403215:	jmp    DWORD PTR [edx]
  403217:	cmp    bh,bh
  403219:	mov    al,ds:0xffa94eff
  40321e:	mov    DWORD PTR [edi+0x83ee08],ebx
  403224:	add    BYTE PTR [eax],al
  403226:	jle    0x40320e
  403228:	add    BYTE PTR [esi],al
  40322a:	call   edx
  40322c:	jge    0x40322e
  40322e:	add    BYTE PTR [ecx+0x38],bl
  403231:	sub    esp,ecx
  403233:	cmp    edi,0xffffff89
  403236:	mov    cl,0x14
  403238:	add    BYTE PTR [ebx],bh
  40323a:	jmp    DWORD PTR [ebx-0x7f]
  40323d:	add    ah,cl
  40323f:	sub    DWORD PTR [edi],eax
  403241:	loop   0x40320f
  403243:	(bad)  
  403244:	inc    DWORD PTR [ebx+0x6e89d0a3]
  40324a:	add    ah,al
  40324c:	out    0xff,al
  40324e:	mov    DWORD PTR [edx+0xffc71f],edi
  403254:	int3   
  403255:	mov    DWORD PTR [eax+0x6],ecx
  403258:	mov    esp,edi
  40325a:	add    BYTE PTR [ebx+0x5bff893b],bl
  403260:	adc    al,0x3f
  403262:	int3   
  403263:	add    bh,bh
  403265:	and    DWORD PTR [edi-0x5f],0xffffffcc
  403269:	cli    
  40326a:	adc    edx,0x21
  40326d:	add    bh,bh
  40326f:	cmp    ebp,0x32
  403272:	add    bh,bh
  403274:	add    BYTE PTR [eax],al
  403276:	test   al,0x12
  403278:	dec    DWORD PTR [edx]
  40327a:	mov    DWORD PTR [ecx+0x6c],ebx
  40327d:	(bad)  
  40327e:	push   ebp
  403280:	dec    esp
  403281:	xor    al,BYTE PTR [eax]
  403283:	inc    DWORD PTR [eax]
  403285:	inc    DWORD PTR [ecx]
  403287:	dec    DWORD PTR cs:[edx]
  40328a:	add    ch,bh
  40328c:	sar    bh,cl
  40328e:	mov    DWORD PTR [esi],esp
  403290:	mov    ebx,0xcc00ae
  403295:	sbb    DWORD PTR [ebx],0x21
  403298:	int3   
  403299:	imul   edi,edi,0x89ffae95
  40329f:	and    bh,BYTE PTR [edi]
  4032a1:	aaa    
  4032a2:	(bad)  
  4032a3:	(bad)  
  4032a4:	inc    DWORD PTR [eax]
  4032a6:	ret    
  4032a7:	xor    DWORD PTR [eax],eax
  4032a9:	lahf   
  4032aa:	inc    DWORD PTR [esi]
  4032ac:	loop   0x4032ad
  4032ae:	push   edx
  4032b0:	and    eax,0x83ff8335
  4032b5:	add    BYTE PTR [edi-0x88ff0e],bl
  4032bb:	xor    edi,ebp
  4032bd:	add    bh,bh
  4032bf:	sahf   
  4032c0:	add    esp,ecx
  4032c2:	(bad)  
  4032c3:	(bad)  
  4032c4:	(bad)  
  4032c5:	jmp    DWORD PTR [ebp-0x4e]
  4032c8:	call   FWORD PTR [ebx]
  4032ca:	int3   
  4032cb:	xchg   esp,eax
  4032cc:	mov    ebx,0x6ef18983
  4032d1:	mov    cl,0xcc
  4032d3:	inc    DWORD PTR [ebx+0x9a7aff]
  4032d9:	lock add BYTE PTR [esi+edx*2],bl
  4032dd:	mov    edi,edi
  4032df:	xor    eax,0x899aae
  4032e4:	add    bh,bh
  4032e6:	addr16 iret 
  4032e8:	add    BYTE PTR [ecx],al
  4032ea:	add    BYTE PTR [eax],ch
  4032ec:	and    edi,edi
  4032ee:	jmp    FWORD PTR [eax+0x9]
  4032f1:	or     al,0x0
  4032f3:	int3   
  4032f4:	cmp    edi,0x56
  4032f7:	pop    eax
  4032f8:	add    BYTE PTR [ebp+0x950eff],ah
  4032fe:	int3   
  4032ff:	sbb    eax,0xffcc9ea0
  403304:	(bad)  
  403305:	jmp    FWORD PTR [ebp-0x2f00d1]
  40330b:	adc    al,0xe2
  40330d:	add    BYTE PTR [eax],al
  40330f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403310:	pushf  
  403311:	and    BYTE PTR [eax],al
  403313:	add    bh,bh
  403315:	add    bl,cl
  403317:	sub    DWORD PTR ss:[esi],0xffffffff
  40331b:	test   al,0x39
  40331d:	add    BYTE PTR [eax],al
  40331f:	xor    BYTE PTR [edi+ecx*1+0x0],bh
  403323:	(bad)  
  403324:	(bad)  
  403325:	(bad)  
  403326:	call   0x583361
  40332b:	(bad)  
  40332c:	test   DWORD PTR [eax],0x46afb4cc
  403332:	int3   
  403333:	add    BYTE PTR [ebx+0x88c383],al
  403339:	loopne 0x40333b
  40333b:	and    dh,BYTE PTR [eax-0x1]
  40333e:	dec    DWORD PTR [ecx]
  403340:	pop    ebp
  403341:	(bad)  
  403342:	inc    DWORD PTR [eax]
  403344:	add    bh,bh
  403346:	or     al,0x3d
  403348:	push   esi
  40334a:	call   FWORD PTR ds:0x6c8300a3
  403350:	(bad)  
  403352:	(bad)  
  403353:	inc    DWORD PTR [eax]
  403355:	add    BYTE PTR [edx],bh
  403357:	or     eax,0xab006800
  40335c:	dec    edx
  40335d:	inc    DWORD PTR [eax]
  40335f:	cmp    eax,ebx
  403361:	stos   BYTE PTR es:[edi],al
  403362:	(bad)  
  403363:	inc    DWORD PTR [ebx+0xe47483]
  403369:	mov    bl,0x0
  40336b:	fisttp QWORD PTR [esi-0xd6bff01]
  403371:	test   edi,edi
  403373:	add    BYTE PTR [eax],al
  403375:	mov    DWORD PTR [eax+0x41],ebx
  403378:	call   FWORD PTR [ebp-0x951801]
  40337e:	xor    esi,0xfffffff4
  403381:	test   eax,0xffccff83
  403386:	xor    al,0xd5
  403388:	jmp    FWORD PTR [eax-0x760bae00]
  40338e:	call   FWORD PTR [edx]
  403390:	rol    DWORD PTR [eax+eax*1],0x0
  403394:	inc    DWORD PTR [eax]
  403396:	test   eax,0x836283eb
  40339b:	rol    DWORD PTR es:[eax],0xff
  40339f:	mov    cl,0x99
  4033a1:	fcos   
  4033a3:	inc    DWORD PTR [eax]
  4033a5:	push   DWORD PTR [ecx-0x3d]
  4033a8:	jmp    DWORD PTR [eax]
  4033aa:	int3   
  4033ab:	minps  xmm7,xmm7
  4033ae:	push   DWORD PTR [eax+0x130e]
  4033b4:	(bad)  
  4033b5:	inc    DWORD PTR [edx-0x7c0633de]
  4033bb:	ss mov ecx,0x1347ff83
  4033c1:	sbb    cl,BYTE PTR [ecx-0x5a000001]
  4033c7:	mov    BYTE PTR [eax],0x10
  4033ca:	int3   
  4033cb:	jecxz  0x40338d
  4033cd:	add    bh,bh
  4033cf:	xchg   ebp,eax
  4033d0:	dec    eax
  4033d1:	mov    ebx,0xff89ffcc
  4033d6:	or     dl,ch
  4033d8:	(bad)  
  4033d9:	jle    0x4033da
  4033db:	ins    DWORD PTR es:[edi],dx
  4033dc:	nop
  4033dd:	(bad)  
  4033de:	call   DWORD PTR ds:0xffcc68af
  4033e4:	inc    DWORD PTR [ebx+0x3f0075f7]
  4033ea:	and    ecx,0x5a
  4033ed:	(bad)  
  4033ee:	call   DWORD PTR [esi+0xc1b9]
  4033f4:	inc    DWORD PTR [eax]
  4033f6:	mov    al,ds:0xe289ea
  4033fb:	out    0x82,eax
  4033fd:	or     esp,0x39
  403400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403401:	add    bh,bh
  403403:	(bad)  
  403404:	dec    DWORD PTR [ecx+0x11ffa6ca]
  40340a:	add    BYTE PTR [ecx-0x28],dl
  40340d:	add    bh,bh
  40340f:	lods   al,BYTE PTR ds:[esi]
  403410:	adc    ah,dh
  403412:	or     DWORD PTR [ecx-0x22c30000],0xffffffff
  403419:	jmp    0xcceb021d
  40341e:	int3   
  40341f:	jbe    0x4033db
  403421:	test   BYTE PTR [eax],al
  403423:	add    bh,bh
  403425:	add    BYTE PTR [esi-0x4a],dh
  403428:	int3   
  403429:	sbb    bh,bh
  40342b:	test   BYTE PTR [edi],0x0
  40342e:	mov    DWORD PTR [edi+ecx*1],esp
  403431:	aam    0xff
  403433:	int3   
  403434:	add    ah,cl
  403436:	clc    
  403437:	bnd call ebx
  40343a:	add    BYTE PTR [ebp+0x53],ch
  40343d:	add    bh,bh
  40343f:	xchg   esi,eax
  403440:	sbb    eax,0x8383ff65
  403445:	add    BYTE PTR [eax],bh
  403447:	mov    ah,0x0
  403449:	fdiv   st(7),st
  40344b:	sub    ah,BYTE PTR [ebx-0x46c40001]
  403451:	test   esp,0x75ff00ff
  403457:	jmp    0x403458
  403459:	inc    esi
  40345a:	call   eax
  40345c:	mov    DWORD PTR [ebx-0x409c9300],eax
  403462:	add    BYTE PTR [ebx-0x7769ff7d],al
  403468:	call   DWORD PTR [eax-0x7d]
  40346b:	lea    ebx,[ebx]
  40346d:	inc    DWORD PTR [eax]
  40346f:	or     al,0xa3
  403471:	test   BYTE PTR [eax],0xff
  403474:	(bad)  
  403475:	jmp    FWORD PTR [edx+0x140072]
  40347b:	loope  0x4034f7
  40347d:	inc    DWORD PTR [eax]
  40347f:	push   es
  403480:	fdiv   QWORD PTR [ebx-0x77]
  403483:	add    BYTE PTR [eax],al
  403485:	push   DWORD PTR [esi+0x15008a]
  40348b:	in     al,dx
  40348c:	ins    DWORD PTR es:[edi],dx
  40348d:	inc    DWORD PTR [eax]
  40348f:	scas   eax,DWORD PTR es:[edi]
  403490:	das    
  403491:	in     al,0x83
  403493:	dec    esp
  403495:	call   FWORD PTR [edx]
  403497:	dec    esp
  403498:	call   FWORD PTR [ebp-0x1]
  40349b:	loope  0x40350c
  40349d:	inc    DWORD PTR [eax]
  40349f:	and    al,0x40
  4034a1:	pop    es
  4034a2:	int3   
  4034a3:	(bad)  
  4034a4:	inc    DWORD PTR [eax]
  4034a6:	fs xchg ah,cl
  4034a9:	sar    edi,1
  4034ab:	stos   DWORD PTR es:[edi],eax
  4034ac:	inc    edi
  4034ad:	int3   
  4034ae:	int3   
  4034af:	into   
  4034b0:	xchg   esp,eax
  4034b1:	cmp    eax,DWORD PTR [ebx+0x12ff83ff]
  4034b7:	or     al,0xcc
  4034b9:	push   edx
  4034ba:	jmp    esi
  4034bc:	ins    DWORD PTR es:[edi],dx
  4034bd:	add    BYTE PTR [eax],al
  4034bf:	mov    al,0xe5
  4034c1:	jle    0x4034c2
  4034c3:	mov    DWORD PTR [ebx+0x597ff],eax
  4034c9:	sub    BYTE PTR [ebx-0x5ac4],al
  4034cf:	sahf   
  4034d0:	pop    esp
  4034d1:	push   0xffffffff
  4034d6:	neg    BYTE PTR ds:0x20ff1089
  4034dc:	in     al,dx
  4034dd:	(bad)  
  4034de:	dec    DWORD PTR [ecx+0x46]
  4034e1:	sahf   
  4034e2:	(bad)  
  4034e3:	(bad)  
  4034e4:	dec    esp
  4034e6:	clc    
  4034e7:	push   edx
  4034e8:	call   FWORD PTR [esi]
  4034ea:	push   DWORD PTR [edx-0x26]
  4034ed:	inc    DWORD PTR [eax]
  4034ef:	neg    cl
  4034f1:	js     0x4034f2
  4034f3:	add    ah,cl
  4034f5:	add    BYTE PTR [edx-0x2],ah
  4034f8:	add    BYTE PTR [ebx],cl
  4034fa:	push   DWORD PTR [edx-0x5]
  4034fd:	inc    DWORD PTR [eax]
  4034ff:	mov    edx,0xff00f520
  403504:	(bad)  
  403505:	(bad)  
  403506:	js     0x4034d8
  403508:	call   edx
  40350a:	call   DWORD PTR [edx+0x71ff00f7]
  403510:	or     ebx,DWORD PTR [edi-0x1]
  403513:	inc    DWORD PTR [ebx+0x578b00]
  403519:	test   eax,0xfff11aff
  40351e:	push   DWORD PTR [edx+ebx*1+0x83891c]
  403525:	int3   
  403526:	(bad)  
  403527:	and    al,BYTE PTR [ebx-0x6c310007]
  40352d:	inc    DWORD PTR [eax]
  40352f:	adc    eax,0xccff665b
  403534:	add    bh,bh
  403536:	into   
  403537:	icebp  
  403538:	add    BYTE PTR [ecx-0xcfb200],bl
  40353e:	dec    DWORD PTR [edi-0x23]
  403541:	sbb    eax,DWORD PTR [eax]
  403543:	(bad)  
  403544:	(bad)  
  403545:	push   DWORD PTR [edx-0x79]
  403548:	adc    DWORD PTR [ecx],0x0
  40354b:	dec    eax
  40354c:	mov    ebp,0x332683cc
  403551:	outs   dx,DWORD PTR ds:[esi]
  403552:	add    BYTE PTR [eax],al
  403554:	inc    DWORD PTR [eax]
  403556:	push   esp
  403557:	mov    al,0xff
  403559:	mov    ebp,0x835d9e00
  40355e:	adc    DWORD PTR [edi],0xe
  403561:	dec    esp
  403562:	add    DWORD PTR [eax],0xffffffff
  403565:	int3   
  403566:	pusha  
  403567:	ret    
  403568:	add    BYTE PTR [ebx-0x33fcbf00],ah
  40356e:	mov    eax,edx
  403570:	jno    0x40354a
  403572:	cmp    edi,0xffffffff
  403575:	mov    DWORD PTR [eax],eax
  403577:	cli    
  403578:	(bad)  
  403579:	fld    DWORD PTR [eax]
  40357b:	mov    edi,DWORD PTR [edx-0x1]
  40357e:	push   DWORD PTR [edx+ebp*2-0x7c33]
  403585:	inc    edx
  403587:	iret   
  403588:	jmp    FWORD PTR [ecx+0x324c89]
  40358e:	cmp    DWORD PTR ds:0xffcc0893,0xffffffff
  403595:	int3   
  403596:	sbb    edi,ebp
  403598:	push   eax
  40359a:	add    BYTE PTR ds:0xc5ff8958,bl
  4035a0:	xlat   BYTE PTR ds:[ebx]
  4035a1:	mov    ebp,0xffcc00ff
  4035a6:	push   ds
  4035a7:	add    eax,DWORD PTR [ebx+0x66a8ff62]
  4035ad:	add    DWORD PTR [eax],0xffffffbc
  4035b0:	add    DWORD PTR [edi],eax
  4035b2:	int3   
  4035b3:	add    bh,bh
  4035b5:	inc    DWORD PTR [eax]
  4035b7:	iret   
  4035b8:	add    BYTE PTR [eax+eax*1-0xb],bl
  4035bc:	(bad)  
  4035be:	add    BYTE PTR [edx],ah
  4035c0:	push   ebp
  4035c1:	push   ecx
  4035c2:	cmp    edi,0xffffffff
  4035c5:	add    BYTE PTR [esi+0x1],dl
  4035c8:	(bad)  
  4035c9:	jnp    0x4035cb
  4035cb:	cmp    bl,dl
  4035cd:	add    BYTE PTR [eax],al
  4035cf:	sub    BYTE PTR [edx-0x33ffffc8],dh
  4035d5:	push   DWORD PTR [edx+ebp*1-0x1]
  4035d9:	jno    0x4035da
  4035db:	lahf   
  4035dc:	dec    ecx
  4035dd:	add    bh,bh
  4035df:	cmp    ah,ah
  4035e1:	xor    DWORD PTR [ecx+0x67ffffcc],ecx
  4035e7:	adc    bh,bh
  4035e9:	push   ss
  4035ea:	call   esi
  4035ec:	aad    0x0
  4035ee:	call   edx
  4035f0:	push   edx
  4035f1:	in     eax,0xff
  4035f3:	add    DWORD PTR [eax],0xffffff83
  4035f6:	jb     0x40364a
  4035f8:	add    BYTE PTR [ebp-0x34],al
  4035fb:	mov    ds,WORD PTR [ebp-0x558dff01]
  403601:	or     bh,bh
  403603:	(bad)  
  403604:	inc    DWORD PTR [eax]
  403606:	popa   
  403607:	aas    
  403608:	call   DWORD PTR [eax]
  40360a:	mov    DWORD PTR [eax+ecx*4-0x1],ecx
  40360e:	and    ebx,0x41
  403611:	lods   eax,DWORD PTR ds:[esi]
  403612:	add    bh,bh
  403614:	add    bh,bh
  403616:	(bad)  
  403617:	jge    0x403618
  403619:	lds    ecx,FWORD PTR [ecx+0xff3752]
  40361f:	inc    eax
  403620:	cdq    
  403621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403622:	dec    esp
  403624:	int3   
  403625:	add    BYTE PTR [ecx+edx*2-0x1d764e34],ch
  40362c:	mov    ch,0xff
  40362e:	inc    DWORD PTR ds:0x834ed7
  403634:	mov    edi,edi
  403636:	pusha  
  403637:	test   BYTE PTR [eax],al
  403639:	add    bh,bh
  40363b:	xor    eax,0x3eccff4f
  403640:	push   es
  403641:	mov    edx,0xccff8900
  403646:	repnz adc edi,edi
  403649:	jb     0x403617
  40364b:	xor    DWORD PTR [ebp+0x0],ebx
  40364e:	add    BYTE PTR [ebx-0x33ff018c],ah
  403654:	mov    edi,edi
  403656:	popa   
  403657:	lock add BYTE PTR [edx],dh
  40365a:	call   FWORD PTR [esi-0x3500ff99]
  403660:	rcr    eax,cl
  403662:	add    BYTE PTR [eax],al
  403664:	cmp    edi,0xffffffe0
  403667:	outs   dx,DWORD PTR ds:[esi]
  403668:	int3   
  403669:	cmp    al,0xff
  40366b:	push   0xffffffe4
  40366d:	(bad)  
  40366e:	inc    ecx
  403670:	shr    DWORD PTR [esi-0x77],cl
  403673:	add    bh,bh
  403675:	add    dl,bl
  403677:	and    bh,bh
  403679:	scas   al,BYTE PTR es:[edi]
  40367a:	adc    eax,0x1b
  40367d:	add    BYTE PTR [eax],al
  40367f:	shl    DWORD PTR [esi],cl
  403681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403682:	(bad)  
  403683:	dec    DWORD PTR [ecx+0x2bcc83]
  403689:	fiadd  WORD PTR [eax]
  40368b:	sbb    ebx,DWORD PTR [esi-0x7a8a0000]
  403691:	adc    DWORD PTR [eax],eax
  403693:	add    BYTE PTR [ebx-0x207f01],al
  403699:	test   edi,edi
  40369b:	mov    eax,0x77ffcc4d
  4036a0:	push   esi
  4036a1:	hlt    
  4036a2:	add    bh,bh
  4036a4:	or     esp,0x18
  4036a7:	rol    DWORD PTR [eax],1
  4036a9:	enter  0x7aff,0xd7
  4036ad:	(bad)  
  4036ae:	(bad)  
  4036af:	aas    
  4036b0:	les    esi,FWORD PTR ds:0xff8389ff
  4036b6:	sbb    bl,BYTE PTR [edx+0xfccf383]
  4036bc:	sub    bh,bh
  4036be:	mov    DWORD PTR [eax],ebx
  4036c0:	enter  0x892d,0xff
  4036c4:	add    DWORD PTR [eax],0x33
  4036c7:	push   ds
  4036c8:	call   FWORD PTR [eax]
  4036ca:	(bad)  
  4036cb:	mov    eax,0xde000084
  4036d0:	je     0x40370b
  4036d2:	add    bh,bh
  4036d4:	inc    DWORD PTR [eax]
  4036d6:	sub    ecx,DWORD PTR [edi-0x1]
  4036d9:	stos   DWORD PTR es:[edi],eax
  4036da:	mov    DWORD PTR [edx-0x76],ebp
  4036dd:	add    bh,bh
  4036df:	(bad)  
  4036e0:	push   edi
  4036e1:	xchg   BYTE PTR [ecx-0x5e337d00],cl
  4036e7:	xor    BYTE PTR [ebx-0x6b40330c],al
  4036ed:	(bad)  
  4036ee:	call   DWORD PTR [ebp+eax*2-0xffff80]
  4036f5:	push   edx
  4036f7:	call   0x1b:0x6d8382cc
  4036fe:	add    cl,dl
  403700:	push   ebx
  403701:	adc    al,BYTE PTR [eax]
  403703:	dec    esp
  403705:	add    bl,bl
  403707:	xchg   ebp,eax
  403708:	add    BYTE PTR [ecx-0xd85034],cl
  40370e:	jmp    FWORD PTR [ebx-0x5]
  403711:	gs (bad) 
  403713:	(bad)  
  403714:	inc    DWORD PTR [eax]
  403716:	or     al,0xb6
  403718:	push   DWORD PTR [ecx]
  40371a:	add    BYTE PTR [esi],bl
  40371c:	mov    eax,DWORD PTR [eax]
  40371e:	cmp    DWORD PTR [edx-0x50],0xffffffbd
  403722:	(bad)  
  403723:	(bad)  
  403724:	dec    esp
  403726:	inc    ecx
  403727:	cmc    
  403728:	adc    DWORD PTR [eax],0xffffff89
  40372b:	sub    edi,edi
  40372d:	add    DWORD PTR [eax],0x31
  403730:	mov    al,ds:0x83ffffcc
  403735:	add    ch,al
  403737:	jecxz  0x403738
  403739:	mov    edx,0xc211ff
  40373e:	push   edi
  403740:	test   al,0x11
  403742:	add    bh,bh
  403744:	int3   
  403745:	(bad)  
  403746:	jmp    0xc6364e
  40374b:	dec    ebp
  40374c:	xor    DWORD PTR [eax],eax
  40374e:	add    al,ah
  403750:	add    eax,0xffffccae
  403755:	inc    DWORD PTR [eax+0x6989a9]
  40375b:	mov    esi,0xeccffee
  403760:	mov    eax,ds:0xff83ff1c
  403765:	jmp    DWORD PTR [eax+0x7b8379]
  40376b:	pop    es
  40376c:	ret    0xff00
  40376f:	push   0x1a
  403771:	pop    ebx
  403772:	add    ah,cl
  403774:	dec    DWORD PTR [ecx-0x1e0059d0]
  40377a:	(bad)  
  40377b:	jnp    0x40370a
  40377d:	add    bh,bh
  40377f:	data16 mov al,0x96
  403782:	(bad)  
  403783:	inc    DWORD PTR [eax]
  403785:	add    BYTE PTR [edi-0x440019],bl
  40378b:	xchg   esi,eax
  40378c:	js     0x40378d
  40378e:	and    DWORD PTR [eax],0x4b
  403791:	inc    ebx
  403792:	int3   
  403793:	add    BYTE PTR [ebx+0x36a5ff],al
  403799:	jecxz  0x40379b
  40379b:	dec    ecx
  40379c:	fdiv   st(7),st
  40379e:	call   DWORD PTR [edx]
  4037a0:	mov    WORD PTR [eax+0xff],gs
  4037a6:	rcl    DWORD PTR [ebp+0x6ffae00],1
  4037ac:	leave  
  4037ad:	or     esp,0x2e
  4037b0:	leave  
  4037b1:	and    cl,ah
  4037b3:	(bad)  
  4037b4:	(bad)  
  4037b5:	dec    DWORD PTR [eax-0xf700c0]
  4037bb:	adc    ebx,DWORD PTR [ecx]
  4037bd:	(bad)  
  4037be:	dec    DWORD PTR [edx-0x64]
  4037c1:	inc    esi
  4037c2:	add    DWORD PTR [eax],0xffffffcc
  4037c5:	add    BYTE PTR [esi+0xfcffee],bh
  4037cb:	or     DWORD PTR [esi],0x0
  4037ce:	adc    DWORD PTR [edx],0xffffff96
  4037d1:	aad    0x0
  4037d3:	add    bh,bh
  4037d5:	adc    DWORD PTR [eax],0x5b
  4037d8:	call   DWORD PTR [ecx]
  4037da:	jmp    DWORD PTR ds:0x9683ffba
  4037e0:	jp     0x4037ac
  4037e2:	inc    DWORD PTR [eax]
  4037e4:	int3   
  4037e5:	and    DWORD PTR [eax],0xffffff8b
  4037e8:	inc    DWORD PTR [edi-0x7cd1fa7d]
  4037ee:	add    BYTE PTR [esi+0x12],cl
  4037f1:	mov    ds:0xffff00ff,eax
  4037f6:	jne    0x4037a6
  4037f8:	add    ch,bl
  4037fa:	add    dh,dh
  4037fc:	icebp  
  4037fd:	int3   
  4037fe:	cmp    DWORD PTR [ebx-0x76],0xfffffff3
  403802:	add    BYTE PTR [ebx-0x4173ff01],al
  403808:	add    dh,bl
  40380a:	and    DWORD PTR [edx-0x35ffff6d],0xffffffd3
  403811:	je     0x40379c
  403813:	mov    edi,edi
  403815:	adc    DWORD PTR [esi],0xfffffff2
  403818:	(bad)  
  403819:	mov    edi,0xb6afff
  40381e:	(bad)  
  40381f:	cmp    ah,BYTE PTR [edx]
  403821:	sbb    al,BYTE PTR [ebx-0x17340000]
  403827:	jae    0x403829
  403829:	and    eax,0xff5ed000
  40382e:	add    al,bh
  403830:	es xor bh,bh
  403833:	mov    DWORD PTR [eax],eax
  403835:	or     DWORD PTR [ecx],0xffffffca
  403838:	mov    DWORD PTR [ebx-0x76623700],edx
  40383e:	mov    DWORD PTR [edx-0x1d],ebx
  403841:	xchg   ebx,eax
  403842:	inc    DWORD PTR [eax]
  403844:	inc    DWORD PTR [eax]
  403846:	add    al,0x14
  403848:	push   DWORD PTR [esi]
  40384a:	add    BYTE PTR [eax+0x7c],bh
  40384d:	inc    DWORD PTR [eax]
  40384f:	(bad)  
  403850:	xchg   ebx,eax
  403851:	out    dx,eax
  403852:	add    DWORD PTR [eax],0x0
  403855:	call   FWORD PTR [esi+0x5e]
  403858:	add    BYTE PTR [eax-0x471f00],bl
  40385e:	int3   
  40385f:	inc    edi
  403860:	scas   eax,DWORD PTR es:[edi]
  403861:	mov    ebx,0xffccff
  403866:	or     al,0x7f
  403868:	call   DWORD PTR [edi-0x34]
  40386b:	arpl   si,sp
  40386d:	add    BYTE PTR [eax],al
  40386f:	fiadd  DWORD PTR gs:[eax]
  403872:	add    bh,bh
  403874:	inc    DWORD PTR [eax]
  403876:	daa    
  403877:	sbb    cl,BYTE PTR [ecx+0x650fff7a]
  40387d:	inc    DWORD PTR [ebx-0xb58888]
  403883:	mov    DWORD PTR [eax],eax
  403885:	(bad)  
  403886:	mov    edx,0xcc7700a4
  40388b:	in     al,0xaa
  40388d:	inc    DWORD PTR [eax]
  40388f:	push   esp
  403890:	jb     0x4038a2
  403892:	(bad)  
  403893:	inc    DWORD PTR [eax]
  403895:	int3   
  403896:	or     DWORD PTR [edi+edi*8],0xffffff82
  40389a:	push   esp
  40389c:	in     al,dx
  40389d:	(bad)  
  40389e:	(bad)  
  40389f:	cli    
  4038a0:	mov    DWORD PTR ds:0xcc00ffff,esp
  4038a6:	aaa    
  4038a7:	pop    ebx
  4038a8:	call   FWORD PTR [ebx]
  4038aa:	inc    DWORD PTR [ebx+0x14]
  4038ad:	inc    DWORD PTR [eax]
  4038af:	ret    0x34d6
  4038b2:	or     DWORD PTR [ecx+0x4d0dff00],0xffffffcc
  4038b9:	add    BYTE PTR [eax],0xdd
  4038bc:	add    DWORD PTR [eax],0x43b554ff
  4038c2:	cmp    edi,0xffffffff
  4038c5:	sub    DWORD PTR [edi],0xfffffff0
  4038c8:	add    cl,ah
  4038ca:	mov    DWORD PTR [ecx],eax
  4038cc:	cmp    BYTE PTR [eax],al
  4038ce:	int3   
  4038cf:	cwde   
  4038d0:	lahf   
  4038d1:	push   ebp
  4038d2:	(bad)  
  4038d3:	(bad)  
  4038d4:	inc    DWORD PTR [eax]
  4038d6:	das    
  4038d7:	add    BYTE PTR [eax],0x4c
  4038da:	int3   
  4038db:	mov    bh,0x57
  4038dd:	add    bh,bh
  4038df:	sub    al,0x6a
  4038e1:	rol    DWORD PTR [ebx+0xa83ffcc],0x90
  4038e8:	(bad)  
  4038e9:	fcos   
  4038eb:	mov    ds:0xfeff0099,al
  4038f0:	or     BYTE PTR [ebp-0x100],cl
  4038f6:	jb     0x4038fc
  4038f8:	dec    DWORD PTR [edi-0x4e3b01]
  4038fe:	add    BYTE PTR [edi],dl
  403900:	pop    edi
  403901:	out    0xff,eax
  403903:	(bad)  
  403904:	dec    esp
  403906:	cmp    eax,0xff310072
  40390b:	jmp    0x2a09:0xc5ffff0b
  403912:	add    BYTE PTR [eax],al
  403914:	inc    DWORD PTR [ebx+0x4883b241]
  40391a:	jmp    FWORD PTR [esi+ecx*4]
  40391d:	add    BYTE PTR [eax],al
  40391f:	in     al,dx
  403920:	stc    
  403921:	jnp    0x4038ac
  403923:	add    bh,bh
  403925:	mov    DWORD PTR [esi],esp
  403927:	lea    eax,[eax]
  403929:	bound  eax,QWORD PTR [ebx-0xb870]
  40392f:	and    BYTE PTR [edx+0x43],ch
  403932:	inc    DWORD PTR [eax]
  403934:	(bad)  
  403935:	dec    DWORD PTR [ebx-0x27]
  403938:	add    BYTE PTR [esi+0x0],ah
  40393b:	neg    esi
  40393d:	add    bh,bh
  40393f:	mov    DWORD PTR [ecx+0xff69],esi
  403945:	call   FWORD PTR [esi-0x8cffff]
  40394b:	mov    ecx,0x21cc00a1
  403950:	mov    ebx,0xffff8316
  403955:	inc    DWORD PTR [esi]
  403957:	or     bh,bh
  403959:	cmp    DWORD PTR es:[edx+0x35],0xffffff83
  40395e:	add    dl,bh
  403960:	mov    ch,0x36
  403962:	inc    DWORD PTR [eax]
  403964:	dec    DWORD PTR [ecx-0x65ffe734]
  40396a:	add    al,dh
  40396c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40396d:	int3   
  40396e:	jmp    DWORD PTR [esi+edx*8-0xa]
  403972:	cmp    edi,0xffffff89
  403975:	jmp    FWORD PTR [edi+0x25]
  403978:	int3   
  403979:	pop    esp
  40397a:	add    BYTE PTR [esi-0x5f000079],bl
  403980:	push   ebp
  403981:	dec    ebp
  403982:	inc    DWORD PTR [eax]
  403984:	add    bh,bh
  403986:	and    eax,0xcc8400d0
  40398b:	pop    edx
  40398c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398d:	add    ah,cl
  40398f:	test   eax,0xffff3d1d
  403994:	add    bh,bh
  403996:	fwait
  403997:	sar    bh,0x5d
  40399a:	inc    DWORD PTR [ecx+0xfffcc4b]
  4039a0:	in     al,0xd1
  4039a2:	inc    DWORD PTR [eax]
  4039a4:	or     esp,0x2c
  4039a7:	and    ecx,DWORD PTR [ecx+0x10d9ff83]
  4039ad:	add    bh,bh
  4039af:	xchg   BYTE PTR [ecx-0x18],ch
  4039b2:	cmp    edi,0xffffffff
  4039b5:	add    BYTE PTR [ebx-0x5d0074],cl
  4039bb:	cwde   
  4039bc:	sahf   
  4039bd:	add    BYTE PTR [eax],al
  4039bf:	sub    eax,0x83ff0c90
  4039c4:	or     esp,0x30
  4039c7:	fadd   QWORD PTR [ebx+0x29cbfff9]
  4039cd:	inc    DWORD PTR [eax]
  4039cf:	inc    esp
  4039d0:	add    DWORD PTR [edi-0xff337d],ebx
  4039d6:	aam    0xce
  4039d8:	call   FWORD PTR [ebp-0x1]
  4039db:	push   0x15ffff7e
  4039e0:	(bad)
  4039e3:	(bad)  
  4039e4:	(bad)  
  4039e5:	(bad)  
  4039e6:	in     eax,dx
  4039e7:	std    
  4039e8:	int3   
  4039e9:	mov    ah,0xff
  4039eb:	arpl   WORD PTR [esi+0x2be9ff83],sp
  4039f1:	jne    0x403976
  4039f3:	add    bh,bh
  4039f5:	add    BYTE PTR [ebx-0x4600f6],dl
  4039fb:	push   edx
  4039fc:	mov    cl,0x89
  4039fe:	inc    DWORD PTR [esi-0x18]
  403a01:	pusha  
  403a02:	mov    esp,ecx
  403a04:	mov    DWORD PTR [ebx-0x2fff189e],eax
  403a0a:	dec    DWORD PTR [edx+0x64000021]
  403a10:	ret    
  403a11:	xchg   edi,edi
  403a13:	add    bh,bh
  403a15:	jmp    DWORD PTR [ebx]
  403a17:	mov    ds:0x2dff98ff,al
  403a1c:	sti    
  403a1d:	int3   
  403a1e:	add    al,al
  403a20:	jle    0x4039d1
  403a22:	int3   
  403a23:	cmp    edi,0xffffffff
  403a26:	cmp    dl,BYTE PTR [ebx+0x4ff67ff]
  403a2c:	ret    
  403a2d:	dec    DWORD PTR [ecx+0xdbec5d]
  403a33:	add    BYTE PTR [eax],al
  403a35:	add    BYTE PTR [edx-0x9d00d5],ah
  403a3b:	xor    bl,dh
  403a3d:	cmp    edi,0x33
  403a40:	inc    esi
  403a41:	call   0x1403a45
  403a46:	cmc    
  403a47:	xor    al,0xff
  403a49:	xor    bh,bh
  403a4b:	cmc    
  403a4c:	cmc    
  403a4d:	dec    esp
  403a4f:	pop    ecx
  403a50:	into   
  403a51:	ror    esp,1
  403a53:	add    BYTE PTR [ecx-0xc0901],cl
  403a59:	loope  0x403a5b
  403a5b:	popa   
  403a5c:	or     al,BYTE PTR [eax]
  403a5e:	and    DWORD PTR [edx-0x765bf5],0xffffffcc
  403a65:	add    BYTE PTR [ecx+0x29],ch
  403a68:	int3   
  403a69:	push   esp
  403a6a:	inc    ecx
  403a6c:	adc    eax,0x3fbaffff
  403a71:	loopne 0x403a73
  403a73:	add    bh,bh
  403a75:	add    dh,ch
  403a77:	ins    BYTE PTR es:[edi],dx
  403a78:	cmp    DWORD PTR ds:0xff546b00,0xffffffff
  403a7f:	inc    ebx
  403a80:	mov    eax,0xcc83006e
  403a85:	add    BYTE PTR [ebx],bl
  403a87:	test   esp,0x7a5dff5a
  403a8d:	mov    edi,edi
  403a8f:	push   edi
  403a90:	sbb    cl,BYTE PTR [ebp+0x0]
  403a93:	add    bh,bh
  403a95:	(bad)  
  403a96:	jg     0x403a62
  403a98:	add    BYTE PTR [ebx-0x1],bh
  403a9b:	test   dl,cl
  403a9d:	add    bh,bh
  403a9f:	std    
  403aa0:	outs   dx,BYTE PTR ds:[esi]
  403aa1:	idiv   edi
  403aa3:	int3   
  403aa4:	add    BYTE PTR [eax],al
  403aa6:	or     eax,0xcc6b0070
  403aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aac:	popf   
  403aad:	(bad)  
  403aae:	jmp    esp
  403ab0:	cmp    ah,BYTE PTR ds:0x89ffffff
  403ab6:	push   ecx
  403ab7:	jmp    0xfffe:0xf0ffa483
  403abe:	call   ebx
  403ac0:	cmovb  edi,edi
  403ac3:	int3   
  403ac4:	add    ah,cl
  403ac6:	ret    0xff3c
  403ac9:	add    bh,bh
  403acb:	sub    BYTE PTR [edi-0x1],ch
  403ace:	add    ebp,0xffffffbc
  403ad1:	xchg   edi,eax
  403ad2:	add    DWORD PTR [ebx+0x54658300],0xffffffff
  403ad9:	into   
  403ada:	push   DWORD PTR [edx-0xa]
  403add:	(bad)  
  403ade:	jmp    FWORD PTR [ecx]
  403ae0:	mov    ecx,0xffff8992
  403ae5:	call   DWORD PTR [ecx-0x7605003d]
  403aeb:	jecxz  0x403aef
  403aed:	add    BYTE PTR [eax],al
  403aef:	sub    al,0x68
  403af1:	js     0x403a7c
  403af3:	(bad)  
  403af4:	(bad)  
  403af5:	jmp    DWORD PTR [ebx-0x4d]
  403af8:	jmp    DWORD PTR [esi]
  403afa:	(bad)  
  403afb:	mov    esi,0xe283ff01
  403b00:	lods   eax,DWORD PTR ds:[esi]
  403b01:	sbb    al,0x83
  403b03:	add    BYTE PTR [ecx-0x670f01],cl
  403b09:	mov    WORD PTR [ecx-0x72],cx
  403b0d:	inc    DWORD PTR [eax]
  403b0f:	sbb    al,0x4
  403b11:	or     al,BYTE PTR [eax]
  403b13:	int3   
  403b14:	inc    DWORD PTR [ebx+0x18ffa2bf]
  403b1a:	int3   
  403b1b:	or     eax,0x6affcc94
  403b20:	ja     0x403b67
  403b22:	mov    edi,edi
  403b24:	(bad)  
  403b25:	call   FWORD PTR [edi+ebp*2+0xdff1483]
  403b2c:	sti    
  403b2d:	add    bh,bh
  403b2f:	repz push edx
  403b31:	xor    al,0xff
  403b33:	dec    esp
  403b35:	sub    DWORD PTR [esi],0x69
  403b38:	int3   
  403b39:	aas    
  403b3a:	add    cl,bh
  403b3c:	(bad)  
  403b3e:	call   FWORD PTR [eax]
  403b40:	xchg   edx,eax
  403b41:	(bad)  
  403b42:	int3   
  403b43:	add    BYTE PTR [eax],al
  403b45:	or     DWORD PTR [eax-0x760cffbd],0xfffffffc
  403b4c:	(bad)  
  403b4d:	(bad)  
  403b4e:	jmp    DWORD PTR [ebp-0x2f]
  403b51:	add    edi,edi
  403b53:	mov    edi,edi
  403b55:	(bad)  
  403b56:	jl     0x403ba1
  403b58:	add    BYTE PTR [ebx+0x0],cl
  403b5b:	shr    ch,1
  403b5d:	inc    DWORD PTR [eax]
  403b5f:	mov    esp,0x83ffd360
  403b64:	cmp    edi,0xffffffc7
  403b67:	xor    bh,bh
  403b69:	xlat   BYTE PTR ds:[ebx]
  403b6a:	push   DWORD PTR [esp+eiz*4-0x1]
  403b6e:	(bad)  
  403b6f:	fyl2xp1 
  403b71:	aas    
  403b72:	add    BYTE PTR [eax],al
  403b74:	inc    DWORD PTR [eax]
  403b76:	int3   
  403b77:	in     eax,0x0
  403b79:	popf   
  403b7a:	inc    DWORD PTR [ebp-0x66]
  403b7d:	add    BYTE PTR [ebx-0x5c9f3e],al
  403b83:	add    BYTE PTR [ecx-0xbef434],cl
  403b89:	xchg   ebx,eax
  403b8a:	call   DWORD PTR [ebp+eax*2-0x1]
  403b8e:	call   DWORD PTR [esi+0x588d]
  403b94:	inc    DWORD PTR [eax]
  403b96:	call   0x840fbee9
  403b9b:	jge    0x403b56
  403b9d:	add    bh,bh
  403b9f:	mov    eax,0xff007516
  403ba4:	add    BYTE PTR [eax],al
  403ba6:	xor    BYTE PTR [ecx],cl
  403ba8:	adc    ecx,0xffffffff
  403bab:	sub    eax,DWORD PTR [ebx]
  403bad:	add    bh,bh
  403baf:	(bad)  
  403bb0:	adc    edx,DWORD PTR [esi-0xff3400]
  403bb6:	das    
  403bb7:	push   eax
  403bb8:	jmp    ebp
  403bba:	add    bl,ah
  403bbc:	lods   eax,DWORD PTR ds:[esi]
  403bbd:	inc    DWORD PTR [ebx-0x33d45654]
  403bc3:	add    bh,bh
  403bc5:	add    BYTE PTR [ebp+0x20],bl
  403bc8:	add    BYTE PTR [edx],dl
  403bca:	mov    DWORD PTR [esi-0x2d],esi
  403bcd:	(bad)  
  403bce:	jmp    DWORD PTR [edi]
  403bd0:	adc    al,0xa5
  403bd2:	add    BYTE PTR [eax],al
  403bd4:	cmp    edi,0x27
  403bd7:	fadd   DWORD PTR [ebx+0x5490899e]
  403bdd:	inc    DWORD PTR [ebx-0x7c7c5e35]
  403be3:	inc    DWORD PTR [eax]
  403be5:	add    DWORD PTR [edi-0x327ced],0x70
  403bec:	pop    edi
  403bed:	int3   
  403bee:	add    ebx,0xffffff8e
  403bf1:	out    dx,eax
  403bf2:	add    bh,bh
  403bf4:	add    bh,bh
  403bf6:	(bad)  
  403bf7:	mov    BYTE PTR [eax],0xa
  403bfa:	mov    DWORD PTR [eax-0x10000c1],eax
  403c00:	adc    DWORD PTR [eax],ebp
  403c02:	add    bh,bh
  403c04:	inc    DWORD PTR [eax]
  403c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c07:	je     0x403c09
  403c09:	rol    BYTE PTR [eax],0xa0
  403c0c:	add    al,0xff
  403c0e:	add    BYTE PTR [edi+0x3a],ch
  403c11:	into   
  403c12:	inc    DWORD PTR [ebx-0x69430034]
  403c18:	jmp    ebp
  403c1a:	call   DWORD PTR [edi]
  403c1c:	pop    esp
  403c1d:	inc    DWORD PTR [ebx+0x2f64fb]
  403c23:	(bad)  
  403c24:	(bad)  
  403c25:	jmp    FWORD PTR [esi+0xb7ff12]
  403c2b:	mov    eax,ds:0x5800ff6a
  403c30:	or     al,0xd8
  403c32:	int3   
  403c33:	inc    DWORD PTR [eax]
  403c35:	push   esp
  403c37:	xchg   esi,eax
  403c38:	dec    DWORD PTR [edx+0x71300]
  403c3e:	add    DWORD PTR [ebp+0x874],0xffffffcc
  403c45:	dec    DWORD PTR [ecx-0x8e7c57]
  403c4b:	xor    dl,bl
  403c4d:	(bad)  
  403c4e:	(bad)  
  403c4f:	fcom   QWORD PTR [ebx+ebx*2+0x0]
  403c53:	add    BYTE PTR [eax],al
  403c55:	add    BYTE PTR [esi-0x3d],bl
  403c58:	jmp    DWORD PTR [ebx]
  403c5a:	add    BYTE PTR [ecx+0x900ff90],dh
  403c60:	mov    ds:0xffff0033,al
  403c65:	push   esi
  403c67:	jns    0x403c68
  403c69:	cmp    eax,DWORD PTR [ebx-0xff46c5]
  403c6f:	test   BYTE PTR [ebp+0x4d],0xff
  403c73:	add    DWORD PTR [ebx+0xbde000],0xffffff84
  403c7a:	add    BYTE PTR [ecx],bh
  403c7c:	push   cs
  403c7d:	inc    DWORD PTR [eax]
  403c7f:	and    eax,0x6998
  403c84:	add    DWORD PTR [eax],0xffffffc4
  403c87:	inc    esi
  403c88:	add    BYTE PTR [edx-0x77],ah
  403c8b:	mov    al,ds:0xdfffff6f
  403c90:	dec    ebx
  403c91:	ret    0xccff
  403c94:	add    DWORD PTR [ebx-0x1c00a5ea],0xffffff89
  403c9b:	clc    
  403c9c:	jg     0x403c9d
  403c9e:	int3   
  403c9f:	or     al,BYTE PTR [ecx-0xff76e5]
  403ca5:	add    BYTE PTR [ebx-0x3b],ch
  403ca8:	add    ah,ch
  403caa:	jmp    FWORD PTR [eax]
  403cac:	(bad)  
  403cad:	(bad)  
  403cae:	jmp    DWORD PTR [eax-0x993e]
  403cb4:	add    bh,bh
  403cb6:	clc    
  403cb7:	aad    0xff
  403cb9:	push   edx
  403cba:	push   DWORD PTR [ecx-0x2c]
  403cbd:	inc    DWORD PTR [eax]
  403cbf:	jnp    0x403ce4
  403cc1:	inc    esi
  403cc2:	inc    DWORD PTR [eax]
  403cc4:	add    BYTE PTR [eax],al
  403cc6:	adc    esp,DWORD PTR [ebp-0x70760401]
  403ccc:	xlat   BYTE PTR ds:[ebx]
  403ccd:	inc    DWORD PTR [eax]
  403ccf:	mov    DWORD PTR [ecx-0x7c332e],edx
  403cd5:	(bad)  
  403cd6:	jg     0x403cd8
  403cd8:	(bad)  
  403cd9:	(bad)  
  403cdb:	jmp    0x403d4e
  403cdd:	add    bh,bh
  403cdf:	or     ecx,DWORD PTR [eax-0xe]
  403ce2:	inc    DWORD PTR [eax]
  403ce4:	or     esp,0xffffffd5
  403ce7:	sub    cl,ah
  403ce9:	imul   edi,edi,0x29
  403cec:	pop    eax
  403ced:	add    bh,bh
  403cef:	mov    ds:0xff0070c5,eax
  403cf4:	(bad)  
  403cf5:	call   FWORD PTR [edi]
  403cf7:	loope  0x403cf9
  403cf9:	push   edi
  403cfa:	add    BYTE PTR [esi+eax*2],cl
  403cfd:	add    BYTE PTR [eax],al
  403cff:	jge    0x403cd8
  403d01:	cmc    
  403d02:	cmp    edi,0xffffffff
  403d05:	add    BYTE PTR [ebx+eax*4-0x77],ch
  403d09:	or     al,0x83
  403d0b:	xchg   edx,eax
  403d0c:	push   cs
  403d0d:	dec    esp
  403d0f:	fadd   QWORD PTR [esi+ebp*4]
  403d12:	inc    DWORD PTR [eax]
  403d14:	inc    DWORD PTR [eax]
  403d16:	retf   0x84
  403d19:	inc    esp
  403d1a:	dec    esp
  403d1c:	mov    al,ds:0x5ae700ff
  403d21:	mov    dh,0xff
  403d23:	add    bh,bh
  403d25:	jmp    FWORD PTR [edi+ebp*1]
  403d28:	inc    ebp
  403d2a:	(bad)  
  403d2b:	out    dx,eax
  403d2c:	mov    bh,0xff
  403d2e:	inc    DWORD PTR [ebp+eiz*4-0x7c005d]
  403d35:	jmp    DWORD PTR [edx-0x7c7a00a6]
  403d3b:	or     eax,DWORD PTR es:[eax]
  403d3e:	add    BYTE PTR [ebx+0xccb205],cl
  403d44:	inc    DWORD PTR [eax]
  403d46:	adc    eax,0xd40012
  403d4b:	add    al,al
  403d4d:	dec    DWORD PTR [ecx+0x3baff3]
  403d53:	(bad)  
  403d54:	(bad)  
  403d55:	call   FWORD PTR [edx]
  403d57:	sti    
  403d58:	add    BYTE PTR [edi+0x0],dl
  403d5b:	test   eax,0xd789ff05
  403d60:	xor    BYTE PTR [ecx-0x7601],dh
  403d66:	and    al,0x93
  403d68:	adc    DWORD PTR [ebp-0xc9a57d],0x0
  403d6f:	push   ss
  403d70:	jb     0x403ded
  403d72:	add    BYTE PTR [ebx-0x5d6b0001],al
  403d78:	dec    DWORD PTR [eax-0x1]
  403d7b:	out    dx,al
  403d7c:	xor    al,BYTE PTR [eax]
  403d7e:	(bad)  
  403d7f:	fstp   QWORD PTR [eax-0x20]
  403d85:	add    BYTE PTR [ecx-0xafff82],dl
  403d8b:	fcomip st,st(4)
  403d8d:	add    DWORD PTR [ebx+0x8a2992],0xffffff83
  403d94:	add    bh,bh
  403d96:	jbe    0x403da0
  403d98:	inc    DWORD PTR [ecx-0x2c4a01]
  403d9e:	inc    DWORD PTR [edx-0x76ffcc72]
  403da4:	add    ah,cl
  403da6:	and    eax,0xccb40089
  403dab:	jb     0x403de3
  403dad:	add    BYTE PTR [eax],al
  403daf:	dec    edi
  403db0:	xchg   esi,eax
  403db1:	nop
  403db2:	cmp    edi,0xffffffcc
  403db5:	add    BYTE PTR [esi],dh
  403db7:	jmp    0xcc16:0x9c8336cc
  403dbe:	dec    DWORD PTR [edi+edx*8+0x20]
  403dc2:	inc    DWORD PTR [eax]
  403dc4:	add    bh,bh
  403dc6:	outs   dx,DWORD PTR fs:[esi]
  403dc8:	add    BYTE PTR [ebp-0x1],ah
  403dcb:	xlat   BYTE PTR ds:[ebx]
  403dcc:	dec    ecx
  403dcd:	(bad)  
  403dce:	jmp    DWORD PTR [ebx-0x70]
  403dd1:	push   eax
  403dd2:	add    BYTE PTR [eax],al
  403dd4:	(bad)  
  403dd5:	call   FWORD PTR [esi+0x27]
  403dd8:	push   DWORD PTR [ebx-0x1]
  403ddb:	sub    bl,ah
  403ddd:	add    DWORD PTR [ebx-0x76ecc7bb],0xffffff83
  403de4:	inc    DWORD PTR [ebx+0x59ff67fe]
  403dea:	add    BYTE PTR [esi+0x16ffff0c],cl
  403df0:	rol    DWORD PTR [ebx+eax*4],cl
  403df3:	add    BYTE PTR [ebx+0xdb3c00],al
  403df9:	sbb    ecx,esp
  403dfb:	and    eax,0x7bff00d3
  403e00:	sub    BYTE PTR [edx+0x0],ah
  403e03:	int3   
  403e04:	(bad)  
  403e05:	jmp    DWORD PTR [ebx]
  403e07:	cmp    DWORD PTR [eax],eax
  403e09:	dec    ebp
  403e0a:	call   DWORD PTR [ecx]
  403e0c:	cs int3 
  403e0e:	call   FWORD PTR [edx-0x12]
  403e11:	sub    eax,0xcc00ff00
  403e16:	mov    ah,0xb0
  403e18:	inc    DWORD PTR [edi+0x0]
  403e1b:	(bad)  
  403e1c:	mov    bh,0xff
  403e1e:	jmp    DWORD PTR [edi+ebx*1-0xff336a]
  403e25:	int3   
  403e26:	inc    ecx
  403e27:	inc    ecx
  403e28:	jmp    FWORD PTR [eax-0x315001]
  403e2e:	int3   
  403e2f:	push   ss
  403e30:	out    0x1b,eax
  403e32:	inc    DWORD PTR [eax]
  403e34:	int3   
  403e35:	int3   
  403e36:	leave  
  403e37:	ret    
  403e38:	add    BYTE PTR [eax+0x9027ff],bl
  403e3e:	add    BYTE PTR [esi+0x873d],ch
  403e44:	(bad)  
  403e45:	call   DWORD PTR [ebx]
  403e47:	cwde   
  403e48:	dec    esi
  403e4a:	(bad)  
  403e4b:	fst    DWORD PTR [eax+eax*1+0xb49edcc]
  403e52:	int3   
  403e53:	add    BYTE PTR [ebx-0x6dd301],al
  403e59:	cmp    eax,0x834f2189
  403e5e:	push   DWORD PTR [edx+0x6b]
  403e61:	scas   eax,DWORD PTR es:[edi]
  403e62:	(bad)  
  403e63:	inc    DWORD PTR [eax]
  403e65:	jmp    eax
  403e67:	push   eax
  403e68:	inc    DWORD PTR [ecx+0x0]
  403e6b:	data16 jl 0x403e6d
  403e6e:	call   DWORD PTR [esi]
  403e70:	neg    DWORD PTR [ebx+0x83ff83]
  403e76:	mov    ds:0xffeaffb2,al
  403e7b:	fs xor bh,bh
  403e7e:	cmp    DWORD PTR [ebx+0x79],0x22
  403e82:	int3   
  403e83:	(bad)  
  403e84:	(bad)  
  403e85:	jmp    DWORD PTR [esi+eiz*2-0x34]
  403e89:	es inc eax
  403e8c:	jl     0x403e8d
  403e8e:	call   FWORD PTR [esi]
  403e90:	sbb    BYTE PTR [ecx+ecx*4+0x0],bh
  403e94:	mov    edi,edi
  403e96:	lods   eax,DWORD PTR ds:[esi]
  403e97:	add    BYTE PTR fs:[ebp-0xc31c01],al
  403e9e:	add    DWORD PTR [ebp+0x62],0xffffffda
  403ea2:	inc    DWORD PTR [eax]
  403ea4:	add    BYTE PTR [ebx-0x27ce37b],al
  403eaa:	add    bh,bh
  403eac:	ins    BYTE PTR es:[edi],dx
  403ead:	int3   
  403eae:	call   FWORD PTR [ebp+0x73]
  403eb1:	xlat   BYTE PTR ds:[ebx]
  403eb2:	(bad)  
  403eb3:	(bad)  
  403eb4:	inc    DWORD PTR [eax]
  403eb6:	cwde   
  403eb7:	mov    ds:0x5200f200,al
  403ebc:	add    DWORD PTR [eax],0xffffffff
  403ebf:	ins    DWORD PTR es:[edi],dx
  403ec0:	lods   eax,DWORD PTR ds:[esi]
  403ec1:	add    DWORD PTR es:[eax],0xffffffff
  403ec5:	jmp    FWORD PTR [ebx]
  403ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec8:	(bad)  
  403ec9:	out    dx,al
  403eca:	add    ah,dh
  403ecc:	xchg   bh,bh
  403ece:	int3   
  403ecf:	das    
  403ed0:	xchg   edx,eax
  403ed1:	and    al,0x0
  403ed3:	dec    DWORD PTR [ecx-0x87a00]
  403ed9:	cmp    edi,0x33
  403edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403edd:	int3   
  403ede:	jmp    DWORD PTR [eax]
  403ee0:	pop    esp
  403ee1:	sub    eax,0xff0083ff
  403ee6:	jp     0x403eb1
  403ee8:	add    dl,al
  403eea:	or     esi,0xffffffca
  403eed:	add    BYTE PTR [eax],al
  403eef:	mov    ebx,0x830057e3
  403ef4:	add    bh,bh
  403ef6:	mov    al,ds:0x835200d5
  403efb:	xchg   esi,eax
  403efc:	icebp  
  403efd:	cmp    edi,0xfffffffb
  403f00:	jbe    0x403ed3
  403f02:	(bad)  
  403f03:	(bad)  
  403f04:	(bad)  
  403f05:	inc    DWORD PTR [ebp+ecx*1-0x7d]
  403f09:	das    
  403f0a:	add    BYTE PTR [ecx+0x33],bh
  403f0d:	(bad)  
  403f0e:	inc    edx
  403f10:	mov    ds,WORD PTR [ebp-0x1]
  403f13:	add    BYTE PTR [ebx-0x7cd47377],al
  403f19:	dec    ecx
  403f1a:	int3   
  403f1b:	out    dx,al
  403f1c:	ins    BYTE PTR es:[edi],dx
  403f1d:	add    BYTE PTR [ecx+0x2c8fc],cl
  403f23:	(bad)  
  403f24:	(bad)  
  403f25:	(bad)  
  403f26:	cmp    bh,dh
  403f28:	mov    DWORD PTR [esi-0x1],ecx
  403f2b:	cmp    DWORD PTR [ebx-0x732f0100],edx
  403f31:	mov    eax,ds:0x83ff89
  403f36:	cli    
  403f37:	int    0x0
  403f39:	mov    BYTE PTR [eax],al
  403f3b:	ins    DWORD PTR es:[edi],dx
  403f3c:	mov    ebx,0x7a920083
  403f41:	stos   DWORD PTR es:[edi],eax
  403f42:	or     esp,0xffffffff
  403f45:	inc    esi
  403f47:	fwait
  403f48:	add    DWORD PTR [eax-0x854800],0xffffff89
  403f4f:	inc    BYTE PTR [edi+0xe]
  403f52:	inc    DWORD PTR [ebx-0x5d2c0001]
  403f58:	add    ch,dl
  403f5a:	jmp    ebp
  403f5c:	fdiv   st(7),st
  403f5e:	add    BYTE PTR [ebp-0x6c],al
  403f61:	test   edi,edi
  403f63:	add    ah,cl
  403f65:	xor    ebp,0x3f
  403f68:	add    BYTE PTR [esi+0x0],bl
  403f6b:	and    DWORD PTR [edi-0x7b070001],edx
  403f71:	aaa    
  403f72:	add    BYTE PTR [eax],al
  403f74:	add    DWORD PTR [eax],0xffffff9c
  403f77:	and    eax,0x51ff9183
  403f7c:	sbb    eax,0xb8848983
  403f81:	xor    edi,edi
  403f83:	add    bh,bh
  403f85:	push   DWORD PTR ds:0xffd4ffab
  403f8b:	xor    DWORD PTR [ebp+0x0],esi
  403f8e:	adc    DWORD PTR [ecx],0x56
  403f91:	dec    ebp
  403f92:	dec    esp
  403f94:	mov    edi,edi
  403f96:	cmp    al,0x5b
  403f98:	add    al,bh
  403f9a:	add    BYTE PTR [edx+0x2ff83a9],ch
  403fa0:	mov    eax,ds:0x830083b5
  403fa5:	call   FWORD PTR [ebp+0x5a8392]
  403fab:	and    BYTE PTR [eax+eax*1],ah
  403fae:	call   FWORD PTR [ebp+0x2]
  403fb1:	xchg   edx,eax
  403fb2:	or     DWORD PTR [ecx+0x5cb10083],0xffffff83
  403fb9:	mov    eax,0xe63cc
  403fbe:	add    BYTE PTR [ebx-0x67],bh
  403fc1:	mov    dh,0xff
  403fc3:	mov    DWORD PTR [eax],eax
  403fc5:	add    BYTE PTR ds:0xff2d0035,al
  403fcb:	ja     0x403fae
  403fcd:	add    bh,bh
  403fcf:	cmc    
  403fd0:	add    eax,0xffff0024
  403fd5:	call   FWORD PTR ds:0xffe1ff60
  403fdb:	fld    DWORD PTR [eax-0x22c00001]
  403fe1:	js     0x403fe2
  403fe3:	add    bh,bh
  403fe5:	jmp    DWORD PTR [edx-0x25]
  403fe8:	add    ah,ah
  403fea:	mov    DWORD PTR [edi+0xe],esi
  403fed:	(bad)  
  403fee:	push   DWORD PTR [esi-0x769e9b]
  403ff4:	add    ah,cl
  403ff6:	test   DWORD PTR [esi-0x1],edx
  403ff9:	and    al,BYTE PTR [eax]
  403ffb:	push   ds
  403ffc:	adc    eax,0xf51100ff
  404001:	jae    0x404003
  404003:	add    bh,bh
  404005:	jmp    DWORD PTR [esi]
  404007:	aam    0x89
  404009:	push   ss
  40400a:	add    BYTE PTR [eax-0x3d],bl
  40400d:	cmp    edi,0xffffff91
  404010:	ret    
  404011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404012:	add    BYTE PTR [eax],al
  404014:	inc    DWORD PTR [eax]
  404016:	pop    esp
  404017:	inc    edi
  404018:	jmp    edx
  40401a:	int3   
  40401b:	sbb    edx,0x4423ff00
  404021:	and    BYTE PTR [eax],al
  404023:	mov    DWORD PTR [eax],eax
  404025:	dec    DWORD PTR [edx+0x42]
  404028:	(bad)  
  404029:	(bad)  
  40402b:	mov    ch,0x39
  40402d:	mov    DWORD PTR [eax],eax
  40402f:	push   esi
  404030:	dec    ecx
  404031:	in     al,0xff
  404033:	add    BYTE PTR [ecx-0x1b6801],cl
  404039:	popf   
  40403a:	jmp    FWORD PTR [ebp-0x3aff7cfa]
  404040:	lds    esp,FWORD PTR [esi+0xff83ff]
  404046:	sub    dh,cl
  404048:	(bad)  
  404049:	cld    
  40404a:	int3   
  40404b:	cmp    eax,0x77ff83fd
  404050:	jp     0x404098
  404052:	inc    DWORD PTR [ebx-0x31c50100]
  404058:	dec    DWORD PTR [edi+edi*8]
  40405b:	fsubr  st(6),st
  40405d:	cmp    edi,0x4e
  404060:	fdivr  QWORD PTR [eax-0x7c337d]
  404066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404067:	mov    al,ds:0x65006dff
  40406c:	mov    edi,edi
  40406e:	inc    DWORD PTR [ebp-0x76334ec1]
  404074:	inc    DWORD PTR [eax]
  404076:	jl     0x4040cb
  404078:	add    BYTE PTR [ecx-0x1],cl
  40407b:	test   eax,0x36ff8327
  404080:	and    al,0xd8
  404082:	add    ah,cl
  404084:	(bad)  
  404085:	call   FWORD PTR [edx+0x3a]
  404088:	jmp    FWORD PTR [edi-0x474301]
  40408e:	(bad)  
  40408f:	jns    0x40402b
  404091:	cmp    bh,bh
  404093:	add    bh,bh
  404095:	call   FWORD PTR [ebx-0x700088]
  40409b:	push   0xfffffff5
  40409d:	add    bh,bh
  40409f:	stc    
  4040a0:	jo     0x40406e
  4040a2:	add    BYTE PTR [eax],al
  4040a4:	mov    DWORD PTR [eax],eax
  4040a6:	xchg   ebx,eax
  4040a7:	inc    edi
  4040a8:	dec    edx
  4040aa:	(bad)  
  4040ab:	jns    0x404043
  4040ad:	add    bh,bh
  4040af:	push   DWORD PTR [eax+0x1c]
  4040b2:	mov    DWORD PTR [eax],eax
  4040b4:	add    BYTE PTR [eax],al
  4040b6:	aas    
  4040b7:	aam    0xff
  4040b9:	sbb    eax,0xa2efff
  4040be:	int3   
  4040bf:	cmovnp eax,DWORD PTR [edx]
  4040c2:	add    DWORD PTR [ebx+0x131b83ff],0xffffffff
  4040c9:	mov    BYTE PTR [eax],0x5d
  4040cc:	xchg   edx,eax
  4040cd:	add    BYTE PTR [ebx+0xd04e8e],al
  4040d3:	add    ah,cl
  4040d5:	add    dh,ch
  4040d7:	push   cs
  4040d8:	inc    DWORD PTR [esi+0x0]
  4040db:	mov    ebx,DWORD PTR [esi]
  4040dd:	cmp    edi,0x47
  4040e0:	icebp  
  4040e1:	inc    ebp
  4040e2:	mov    edi,edi
  4040e4:	inc    DWORD PTR [eax]
  4040e6:	fstp   QWORD PTR [eax-0x1]
  4040e9:	ror    DWORD PTR [ecx-0x7c526a],cl
  4040ef:	cmp    DWORD PTR [esi],ebx
  4040f1:	ss mov edi,edi
  4040f4:	(bad)  
  4040f5:	jmp    FWORD PTR [edi+edi*8+0x0]
  4040f9:	mov    ?,edi
  4040fb:	jp     0x404153
  4040fd:	add    BYTE PTR [eax],al
  4040ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404100:	mov    edi,DWORD PTR [ebx+0xffff]
  404106:	cmp    eax,0xc7ccc6
  40410b:	dec    esi
  40410c:	inc    ecx
  40410d:	add    DWORD PTR [eax],0xffffffc7
  404110:	cmp    dl,bl
  404112:	add    BYTE PTR [eax],al
  404114:	cmp    edi,0xfffffffa
  404117:	sub    esp,ecx
  404119:	daa    
  40411a:	add    dl,dl
  40411c:	aam    0xff
  40411e:	mov    edx,ebp
  404120:	stos   DWORD PTR es:[edi],eax
  404121:	das    
  404122:	add    BYTE PTR [eax],al
  404124:	cmp    edi,0x2a
  404127:	sar    bh,cl
  404129:	or     edi,edi
  40412b:	mov    al,ds:0xd0ff89d1
  404130:	mov    DWORD PTR [edx],ebp
  404132:	add    ah,cl
  404134:	add    ah,cl
  404136:	or     BYTE PTR [edi-0x77],bl
  404139:	and    al,0x0
  40413b:	jl     0x4041b2
  40413d:	(bad)  
  40413e:	push   DWORD PTR [esi]
  404140:	mov    esp,DWORD PTR [ebx-0x7d]
  404143:	inc    DWORD PTR [eax]
  404145:	call   DWORD PTR [esi+eiz*1-0x3e00f301]
  40414c:	sub    edi,edi
  40414e:	(bad)  
  40414f:	jns    0x40410f
  404151:	inc    esp
  404152:	add    bh,bh
  404154:	cmp    edi,0x22
  404157:	push   ebp
  404158:	add    BYTE PTR [edi+edi*8+0x5],cl
  40415c:	data16 add BYTE PTR [eax],al
  40415f:	test   eax,0xff0007ab
  404164:	add    DWORD PTR [eax],0xffffffa7
  404167:	arpl   WORD PTR [eax],ax
  404169:	cwde   
  40416a:	(bad)  
  40416b:	jp     0x4040f3
  40416d:	int3   
  40416e:	adc    DWORD PTR [edi-0x76],0xffffffe0
  404172:	add    bh,bh
  404174:	add    bh,bh
  404176:	ror    DWORD PTR [ecx+0x0],cl
  404179:	ja     0x40417b
  40417b:	fild   DWORD PTR [eax-0x13dc0100]
  404181:	jae    0x404183
  404183:	add    BYTE PTR [ebx-0x33cebc01],al
  404189:	xor    eax,0xffb2c7ff
  40418e:	add    BYTE PTR [eax+esi*4-0x32],dl
  404192:	(bad)  
  404193:	inc    DWORD PTR [ebx-0x27c500]
  404199:	js     0x40419a
  40419b:	aam    0x3f
  40419d:	inc    DWORD PTR [ebx-0x17646d]
  4041a3:	mov    DWORD PTR [eax],eax
  4041a5:	call   esi
  4041a7:	xchg   edi,eax
  4041a8:	(bad)  
  4041a9:	cmp    edi,edi
  4041ab:	repnz mov esp,0xa7c2ffff
  4041b1:	push   edx
  4041b2:	int3   
  4041b3:	add    BYTE PTR [ebx+0x3754ff],al
  4041b9:	xlat   BYTE PTR ds:[ebx]
  4041ba:	inc    edx
  4041bc:	scas   eax,DWORD PTR es:[edi]
  4041bd:	inc    DWORD PTR [eax]
  4041bf:	xor    al,0x6f
  4041c1:	pop    eax
  4041c2:	(bad)  
  4041c3:	inc    DWORD PTR [ebx+0x661fff]
  4041c9:	sbb    ecx,esp
  4041cb:	mov    esp,0xfa0000dd
  4041d0:	aam    0x98
  4041d2:	(bad)  
  4041d3:	inc    DWORD PTR [eax]
  4041d5:	and    DWORD PTR [ebp-0x4fffaa],0x17
  4041dc:	or     bh,bh
  4041de:	add    dl,bh
  4041e0:	and    ch,cl
  4041e2:	add    ah,cl
  4041e4:	add    DWORD PTR [eax],0x2e
  4041e7:	std    
  4041e8:	add    BYTE PTR [edx-0xbebb34],bl
  4041ee:	call   DWORD PTR [eax]
  4041f0:	and    ah,BYTE PTR [esi+0x0]
  4041f3:	inc    DWORD PTR [eax]
  4041f5:	dec    eax
  4041f7:	jecxz  0x4041f9
  4041f9:	xor    al,0xff
  4041fb:	mov    ch,0x4c
  4041fd:	dec    esp
  4041ff:	dec    esp
  404200:	pushf  
  404201:	data16 add BYTE PTR [eax],al
  404204:	dec    esp
  404206:	lea    ecx,[esi]
  404208:	inc    DWORD PTR [ecx]
  40420a:	add    bh,ch
  40420c:	xchg   ecx,eax
  40420d:	inc    DWORD PTR [eax]
  40420f:	pop    edi
  404210:	(bad)  
  404211:	out    dx,al
  404212:	add    bh,bh
  404214:	add    DWORD PTR [ebx+0x3eff3f5c],0xffffffff
  40421b:	xor    eax,0xad000054
  404220:	adc    DWORD PTR [esi],ebx
  404222:	inc    DWORD PTR [eax]
  404224:	(bad)  
  404225:	inc    DWORD PTR [edi]
  404227:	add    bh,bh
  404229:	sub    DWORD PTR [eax],eax
  40422b:	jne    0x404285
  40422d:	dec    esp
  40422f:	fldenv [edx]
  404231:	add    BYTE PTR fs:[ecx+0x14348383],cl
  404238:	add    BYTE PTR [edi],dh
  40423a:	sub    DWORD PTR [edi-0x10],0xffffffff
  40423e:	int3   
  40423f:	daa    
  404240:	les    esi,FWORD PTR [ebp-0x7c000100]
  404246:	jp     0x4042c5
  404248:	int3   
  404249:	push   esp
  40424a:	add    BYTE PTR [edi+0xc830011],bh
  404250:	sub    eax,0x83ff89a8
  404255:	add    dl,dh
  404257:	(bad)  
  404259:	mov    es,WORD PTR [eax]
  40425b:	mov    ch,0xfe
  40425d:	mov    edi,edi
  40425f:	push   edi
  404260:	mov    esp,0xff008331
  404265:	call   edx
  404267:	loop   0x404269
  404269:	mov    bl,0x83
  40426b:	cdq    
  40426c:	add    eax,0x4d9800ff
  404271:	and    al,0xff
  404273:	(bad)  
  404274:	(bad)  
  404275:	jmp    DWORD PTR [ebx+0x23]
  404278:	sub    DWORD PTR [eax+eax*1],0x3b
  40427c:	pop    edi
  40427d:	mov    edi,edi
  40427f:	mov    ds:0xffffd930,eax
  404284:	add    BYTE PTR [eax],al
  404286:	jmp    0x404210
  404288:	int3   
  404289:	outs   dx,DWORD PTR ds:[esi]
  40428a:	push   ebp
  40428c:	dec    ecx
  40428d:	dec    DWORD PTR [ecx-0x68e1cf]
  404293:	inc    DWORD PTR [eax]
  404295:	dec    DWORD PTR [edx]
  404297:	cmp    bh,0x11
  40429a:	call   DWORD PTR [ebp+0x2c00ff21]
  4042a0:	js     0x40426c
  4042a2:	add    BYTE PTR [ebx+0x79b600ff],al
  4042a8:	add    BYTE PTR [ebp-0x155801],bl
  4042ae:	adc    DWORD PTR [edi+0x54],0x73
  4042b2:	inc    DWORD PTR [eax]
  4042b4:	cmp    edi,0x4d
  4042b7:	push   0xffffffff
  4042b9:	mov    ds:0x87d6ff,eax
  4042be:	call   DWORD PTR [eax+ecx*4+0xff35]
  4042c5:	int3   
  4042c6:	pop    edx
  4042c7:	dec    ebx
  4042c8:	add    BYTE PTR [ebp-0x7ccb9200],ch
  4042ce:	(bad)  
  4042cf:	jle    0x4042a1
  4042d1:	adc    al,0x83
  4042d3:	inc    DWORD PTR [eax]
  4042d5:	add    BYTE PTR [ebx-0x16],al
  4042d8:	add    BYTE PTR [edx-0x7cfbd801],dh
  4042de:	mov    edi,edi
  4042e0:	push   ebp
  4042e1:	adc    eax,0xff83ffcc
  4042e6:	inc    edi
  4042e7:	(bad)  
  4042e9:	in     eax,dx
  4042ea:	mov    DWORD PTR [ebx+0xf00830d],eax
  4042f0:	out    0x7e,al
  4042f2:	(bad)  
  4042f3:	inc    DWORD PTR [eax]
  4042f5:	add    BYTE PTR [eax+0x21],al
  4042f8:	sbb    ebx,0x0
  4042fb:	cmp    eax,0xc20083b6
  404300:	or     BYTE PTR [edx],ch
  404302:	inc    DWORD PTR [eax]
  404304:	inc    DWORD PTR [eax]
  404306:	push   edi
  404307:	mov    eax,DWORD PTR [eax]
  404309:	popf   
  40430a:	add    BYTE PTR [ebp+0x2f00ff16],bh
  404310:	aam    0xa0
  404312:	cmp    edi,0xffffff83
  404315:	int3   
  404316:	das    
  404317:	pop    edx
  404318:	jmp    DWORD PTR [eax]
  40431a:	add    BYTE PTR [eax+0xa],bl
  40431d:	add    BYTE PTR [eax],al
  40431f:	xchg   BYTE PTR [ebx],dh
  404321:	inc    edx
  404322:	add    BYTE PTR [eax],al
  404324:	inc    DWORD PTR [eax]
  404326:	leave  
  404327:	rol    DWORD PTR [eax],1
  404329:	jbe    0x4042ae
  40432b:	inc    BYTE PTR [edi-0x1]
  40432e:	jmp    FWORD PTR [ecx-0xffa202]
  404334:	inc    DWORD PTR [eax]
  404336:	push   ss
  404337:	mov    bl,0xff
  404339:	pop    ebp
  40433a:	jmp    FWORD PTR [esp+esi*2]
  40433d:	inc    DWORD PTR [eax]
  40433f:	sub    DWORD PTR [ebx+0x39],edi
  404342:	add    DWORD PTR [eax],0xffffffff
  404345:	mov    ebp,ebx
  404347:	pushf  
  404348:	(bad)  
  404349:	call   0x8408c64e
  40434e:	add    ch,al
  404350:	xchg   edx,eax
  404351:	loop   0x404353
  404353:	(bad)  
  404354:	inc    DWORD PTR [ebx+0x19ffa8f2]
  40435a:	int3   
  40435b:	cdq    
  40435c:	jno    0x4042e1
  40435e:	jmp    DWORD PTR [ebp-0x5c]
  404361:	sub    ecx,esp
  404363:	add    bh,bh
  404365:	inc    DWORD PTR [edi]
  404367:	dec    eax
  404368:	call   FWORD PTR [ebp-0x1]
  40436b:	push   ecx
  40436c:	(bad)  
  40436d:	inc    DWORD PTR [eax]
  40436f:	mov    ch,0xcb
  404371:	add    al,BYTE PTR [eax]
  404373:	inc    DWORD PTR [eax]
  404375:	call   FWORD PTR [edx-0x1c0077]
  40437b:	fbstp  TBYTE PTR [esi]
  40437d:	add    bh,bh
  40437f:	or     DWORD PTR ds:0x83ffb3,ecx
  404385:	int3   
  404386:	sbb    al,BYTE PTR [edi-0x1]
  404389:	mov    edi,0xe0dbff
  40438e:	push   DWORD PTR [esi-0xfffee4]
  404394:	add    BYTE PTR [ebx-0x54002e5f],al
  40439a:	dec    edx
  40439c:	push   ebp
  40439d:	add    DWORD PTR [eax],0x1c
  4043a0:	rcr    cl,0xff
  4043a3:	cmp    edi,0xffffff83
  4043a6:	push   cs
  4043a7:	mov    edi,?
  4043a9:	mov    cl,0xff
  4043ab:	clc    
  4043ac:	dec    ebx
  4043ad:	add    BYTE PTR [eax],al
  4043af:	add    BYTE PTR cs:[edi+edi*8],cl
  4043b3:	(bad)  
  4043b4:	dec    esp
  4043b6:	test   eax,0x8931ff9a
  4043bb:	adc    eax,ebp
  4043bd:	mov    DWORD PTR [ebx+0x6eaae2],eax
  4043c3:	inc    DWORD PTR [eax]
  4043c5:	add    dl,ah
  4043c7:	(bad)  
  4043c8:	jmp    DWORD PTR [edx]
  4043ca:	push   DWORD PTR [ebp-0x10]
  4043cd:	mov    esp,ecx
  4043cf:	push   DWORD PTR [ebp+0x53]
  4043d2:	add    BYTE PTR [eax],al
  4043d4:	cmp    edi,0x4f
  4043d7:	add    DWORD PTR [eax],0x5566ff0b
  4043dd:	cmp    edi,0x29
  4043e0:	cmp    edi,ecx
  4043e2:	mov    DWORD PTR [ebx+0x4ea00000],eax
  4043e8:	add    BYTE PTR [edi-0x1],dh
  4043eb:	cmc    
  4043ec:	sbb    eax,DWORD PTR [eax]
  4043ee:	push   DWORD PTR [esp+edx*8-0x33007691]
  4043f5:	add    ch,bh
  4043f7:	push   cs
  4043f8:	add    BYTE PTR [edi-0x1],al
  4043fb:	jns    0x4043af
  4043fd:	inc    DWORD PTR [ebx-0xaca563]
  404403:	add    BYTE PTR [eax],al
  404405:	jmp    FWORD PTR [eax-0x3385ffad]
  40440b:	lea    esi,ds:0xdf2d0000
  404411:	lods   al,BYTE PTR ds:[esi]
  404412:	int3   
  404413:	(bad)  
  404414:	(bad)  
  404415:	inc    DWORD PTR [edx-0x9ff44]
  40441b:	pusha  
  40441c:	sbb    eax,0xb69400cc
  404421:	mov    edi,edi
  404423:	(bad)  
  404424:	(bad)  
  404425:	(bad)  
  404426:	fisttp WORD PTR [ecx]
  404428:	add    BYTE PTR [esi-0x76173f00],bl
  40442e:	call   FWORD PTR [ebx+0x2f]
  404431:	hlt    
  404432:	add    bh,bh
  404434:	inc    DWORD PTR [eax]
  404436:	jp     0x40440f
  404438:	inc    DWORD PTR [eax]
  40443a:	(bad)  
  40443b:	dec    esp
  40443d:	add    bh,bh
  40443f:	dec    DWORD PTR [edi]
  404441:	in     al,dx
  404442:	mov    ecx,0x6fb18fd1
  404447:	inc    DWORD PTR [eax]
  404449:	mov    DWORD PTR [eax],eax
  40444b:	inc    DWORD PTR [eax]
  40444d:	add    bh,bh
  40444f:	mov    al,0x57
  404451:	push   edi
  404452:	mov    cl,cl
  404454:	push   esp
  404455:	and    al,0x64
  404457:	add    BYTE PTR [eax],al
  404459:	add    BYTE PTR [eax],al
  40445b:	int3   
  40445c:	mov    DWORD PTR [eax],eax
  40445e:	int3   
  40445f:	je     0x4044b0
  404461:	adc    DWORD PTR [ecx-0x39],edi
  404464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404465:	or     eax,0xff89ffb3
  40446a:	dec    DWORD PTR [ecx+0x5e89cccc]
  404470:	in     eax,0xbd
  404472:	mov    cl,0x74
  404474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404475:	jg     0x40446c
  404477:	mov    DWORD PTR [ecx-0xff0001],ecx
  40447d:	add    BYTE PTR [ecx-0x60cc418d],cl
  404483:	mov    esi,0xffe19f5a
  404488:	(bad)  
  404489:	inc    DWORD PTR [eax]
  40448b:	inc    DWORD PTR [eax]
  40448d:	inc    DWORD PTR [ebx+0x63ec46c]
  404493:	sbb    eax,0x837a2364
  404498:	inc    DWORD PTR [eax]
  40449a:	add    BYTE PTR [eax],al
  40449c:	dec    DWORD PTR [ecx-0x45b1b177]
  4044a2:	adc    eax,0xbf7b6565
  4044a7:	add    BYTE PTR [eax],al
  4044a9:	add    bh,bh
  4044ab:	(bad)  
  4044ac:	(bad)  
  4044ad:	inc    DWORD PTR [eax]
  4044af:	adc    DWORD PTR [edx+0xb],0xffffffe6
  4044b3:	sub    al,0xa1
  4044b5:	(bad)  
  4044b6:	mov    al,0x0
  4044b8:	add    bh,bh
  4044ba:	(bad)  
  4044bb:	inc    DWORD PTR [eax]
  4044bd:	(bad)  
  4044be:	inc    DWORD PTR [ebp-0x7664ed]
  4044c4:	adc    al,0x6a
  4044c6:	add    BYTE PTR fs:[eax],al
  4044c9:	inc    DWORD PTR [ebx-0x7cff0001]
  4044cf:	mov    edx,0x96fb856e
  4044d4:	ja     0x4044e7
  4044d6:	int3   
  4044d7:	int3   
  4044d8:	cmp    edi,0x0
  4044db:	(bad)  
  4044dc:	inc    DWORD PTR [eax]
  4044de:	int3   
  4044df:	popa   
  4044e0:	jbe    0x4044da
  4044e2:	push   es
  4044e3:	dec    ecx
  4044e4:	test   eax,0x5bfc
  4044e9:	(bad)  
  4044ea:	(bad)  
  4044eb:	dec    esp
  4044ed:	add    BYTE PTR [eax],al
  4044ef:	fs push ss
  4044f1:	xor    ah,BYTE PTR [edi+0x69]
  4044f4:	pop    ebp
  4044f5:	push   esp
  4044f6:	push   ecx
  4044f7:	dec    esp
  4044f9:	add    bh,bh
  4044fb:	(bad)  
  4044fc:	inc    DWORD PTR [eax]
  4044fe:	int3   
  4044ff:	int3   
  404500:	xor    al,0x64
  404502:	jbe    0x40454a
  404504:	mov    bh,BYTE PTR [edx]
  404506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404507:	add    ah,cl
  404509:	cmp    edi,0x0
  40450c:	inc    DWORD PTR [eax]
  40450e:	jmp    ecx
  404510:	mov    edi,0x1f1f10f2
  404515:	out    0xe5,al
  404517:	int3   
  404518:	or     esp,0xffffff83
  40451b:	(bad)  
  40451c:	dec    esp
  40451e:	inc    DWORD PTR [ebx]
  404520:	call   0x54cd:0xfe1c5bd6
  404527:	add    BYTE PTR [eax],al
  404529:	inc    DWORD PTR [ebx-0x1000000]
  40452f:	pop    es
  404530:	adc    eax,DWORD PTR [edx-0x44]
  404533:	adc    al,0x78
  404535:	loopne 0x40455d
  404537:	dec    DWORD PTR [ecx-0x76000001]
  40453d:	mov    DWORD PTR [eax],eax
  40453f:	pushf  
  404540:	adc    eax,0xd1390791
  404545:	daa    
  404546:	push   0xffffffff
  404548:	mov    edi,edi
  40454a:	(bad)  
  40454b:	inc    DWORD PTR [eax]
  40454d:	add    bh,bh
  40454f:	inc    esp
  404550:	rol    BYTE PTR [edx+0x48ccabf4],0x14
  404557:	cmp    edi,0x0
  40455a:	(bad)  
  40455b:	dec    esp
  40455d:	(bad)  
  40455e:	dec    DWORD PTR [edi-0x19]
  404561:	fistp  QWORD PTR [eax-0x49]
  404564:	and    al,0x52
  404566:	out    0x83,al
  404568:	(bad)  
  404569:	(bad)  
  40456a:	(bad)  
  40456b:	(bad)  
  40456c:	inc    DWORD PTR [ebx-0x7b2f8b7d]
  404572:	mov    dl,0xe7
  404574:	jecxz  0x4045cd
  404576:	inc    edx
  404577:	add    BYTE PTR [eax],al
  404579:	inc    DWORD PTR [eax]
  40457b:	add    bh,bh
  40457d:	(bad)  
  40457e:	call   esp
  404580:	mov    DWORD PTR [edx-0x46],ecx
  404583:	inc    ecx
  404584:	fdivr  DWORD PTR ds:0xccff4f
  40458a:	(bad)  
  40458b:	inc    DWORD PTR [eax]
  40458d:	add    BYTE PTR [eax],al
  40458f:	xor    eax,0x60749cb1
  404594:	imul   esi,DWORD PTR [esi],0xffffff83
  404597:	inc    DWORD PTR [eax]
  404599:	(bad)  
  40459a:	(bad)  
  40459b:	(bad)  
  40459c:	inc    DWORD PTR [eax]
  40459e:	dec    DWORD PTR [edx+eiz*2-0x46]
  4045a2:	xor    DWORD PTR [ecx-0x332358f3],esp
  4045a8:	mov    DWORD PTR [ecx-0x7c01],ecx
  4045ae:	jmp    DWORD PTR [esi]
  4045b0:	in     eax,0xc6
  4045b2:	int    0x55
  4045b4:	sbb    ah,dl
  4045b6:	sar    edi,cl
  4045b8:	add    ah,cl
  4045ba:	inc    DWORD PTR [eax]
  4045bc:	inc    DWORD PTR [eax]
  4045be:	mov    DWORD PTR [edi-0x3c],edi
  4045c1:	(bad)  
  4045c3:	and    ebp,ecx
  4045c5:	(bad)  
  4045c6:	dec    ebp
  4045c7:	or     esp,0x0
  4045ca:	dec    esp
  4045cc:	(bad)  
  4045cd:	(bad)  
  4045ce:	push   DWORD PTR [ecx-0x70]
  4045d1:	jecxz  0x404625
  4045d3:	and    BYTE PTR [edx-0x59],bl
  4045d6:	jp     0x4045d7
  4045d8:	(bad)  
  4045d9:	inc    DWORD PTR [eax]
  4045db:	(bad)  
  4045dc:	(bad)  
  4045dd:	dec    DWORD PTR [ecx-0x13009004]
  4045e3:	sub    edi,DWORD PTR [esi-0x5b]
  4045e6:	xchg   bh,bh
  4045e8:	add    BYTE PTR [eax],al
  4045ea:	dec    DWORD PTR [ecx+0x51008383]
  4045f0:	ret    
  4045f1:	jge    0x404614
  4045f3:	vmptrld QWORD PTR [edi-0x22]
  4045f7:	int3   
  4045f8:	(bad)  
  4045f9:	inc    DWORD PTR [eax]
  4045fb:	add    BYTE PTR [ecx+0xdf3ff00],cl
  404601:	xor    ch,cl
  404603:	(bad)  
  404604:	repz out dx,al
  404606:	cmp    ecx,esp
  404608:	inc    DWORD PTR [ebx-0xff01]
  40460e:	or     DWORD PTR [edi-0x4875d334],0xfffffff0
  404615:	mov    eax,0xffff00e8
  40461a:	inc    DWORD PTR [ebx+0x6300ffff]
  404620:	or     DWORD PTR [edi+0x1bcd489b],0xffffffc5
  404627:	cmp    edi,0xffffff83
  40462a:	add    bh,bh
  40462c:	mov    esp,ecx
  40462e:	dec    DWORD PTR [esi+edx*2+0x163b76d5]
  404635:	push   esi
  404636:	stos   BYTE PTR es:[edi],al
  404637:	(bad)  
  404638:	inc    DWORD PTR [eax]
  40463a:	dec    esp
  40463c:	inc    DWORD PTR [ebx+0x4a3c8dff]
  404642:	(bad)  
  404644:	mov    WORD PTR [ebx],cs
  404646:	js     0x404648
  404648:	mov    DWORD PTR [ebx-0x77],eax
  40464e:	inc    DWORD PTR [esi-0x3b16224]
  404654:	call   0xff83:0xffff2e71
  40465b:	mov    DWORD PTR [ebx+0x36fffff],eax
  404661:	loope  0x40462b
  404663:	xchg   ebx,eax
  404664:	sbb    BYTE PTR [ebx+ecx*8-0xff3377],0xff
  40466c:	mov    edi,edi
  40466e:	add    BYTE PTR [edi-0x3673c3af],bh
  404674:	dec    esp
  404675:	fisubr DWORD PTR [ecx]
  404677:	add    bh,bh
  404679:	inc    DWORD PTR [eax]
  40467b:	add    BYTE PTR [eax],al
  40467d:	add    DWORD PTR [eax],0xffffffee
  404680:	mov    ebx,0x851f2df6
  404685:	jle    0x404697
  404687:	dec    DWORD PTR [ecx-0x7700]
  40468d:	int3   
  40468e:	push   DWORD PTR [edx-0x5f]
  404691:	dec    ebx
  404692:	sub    al,0xf0
  404694:	dec    eax
  404695:	out    0x3a,al
  404697:	mov    DWORD PTR [ebx-0x7cff0001],eax
  40469d:	add    bh,bh
  40469f:	add    bh,BYTE PTR [eax]
  4046a1:	xor    al,0x52
  4046a3:	int    0xeb
  4046a5:	jg     0x4046b7
  4046a7:	add    BYTE PTR [ebx+0x8300ff],al
  4046ad:	add    bh,bh
  4046af:	nop
  4046b0:	les    ecx,FWORD PTR [edx]
  4046b2:	or     DWORD PTR [edx-0x7c9679ac],ebx
  4046b8:	add    bh,bh
  4046ba:	inc    DWORD PTR [ebx-0x17ff0100]
  4046c0:	xchg   ebp,eax
  4046c1:	inc    esp
  4046c2:	rcr    BYTE PTR [ebp+0x41],0xb1
  4046c6:	iret   
  4046c7:	add    DWORD PTR [eax],0xffffffff
  4046ca:	inc    DWORD PTR [eax]
  4046cc:	cmp    edi,0xffffff89
  4046cf:	dec    ebp
  4046d0:	pop    esp
  4046d1:	sub    edx,edx
  4046d3:	push   esp
  4046d4:	js     0x4046ae
  4046d6:	cmp    edi,edi
  4046d8:	(bad)  
  4046d9:	(bad)  
  4046da:	inc    DWORD PTR [ebx+0x780000ff]
  4046e0:	enter  0xef91,0x55
  4046e4:	imul   esi,DWORD PTR [ebx-0xae],0xffffff89
  4046eb:	inc    DWORD PTR [eax]
  4046ed:	(bad)  
  4046ee:	call   DWORD PTR [eax]
  4046f0:	inc    ebx
  4046f1:	js     0x4046c7
  4046f3:	test   eax,0x83840e7c
  4046f8:	mov    DWORD PTR [eax],eax
  4046fa:	dec    esp
  4046fc:	(bad)  
  4046fd:	(bad)  
  4046fe:	inc    DWORD PTR [eax]
  404700:	(bad)  
  404701:	and    al,0x93
  404703:	inc    edx
  404704:	outs   dx,BYTE PTR ds:[esi]
  404705:	repz es dec esp
  404709:	(bad)  
  40470a:	(bad)  
  40470b:	inc    DWORD PTR [eax]
  40470d:	add    BYTE PTR [ecx-0x36c998d0],cl
  404713:	call   0x83ff:0x90a1
  40471a:	add    BYTE PTR [eax],al
  40471c:	(bad)  
  40471d:	inc    DWORD PTR [eax]
  40471f:	loope  0x404700
  404721:	loope  0x404764
  404723:	sub    al,ah
  404725:	and    bl,dh
  404727:	add    bh,bh
  404729:	add    BYTE PTR [eax],al
  40472b:	add    BYTE PTR [eax],al
  40472d:	inc    DWORD PTR [ebx+0x2aca4906]
  404733:	loop   0x4046fc
  404735:	stos   BYTE PTR es:[edi],al
  404736:	mov    edi,?
  404738:	add    bh,bh
  40473a:	or     esp,0xffffffff
  40473d:	add    BYTE PTR [eax],al
  40473f:	hlt    
  404740:	arpl   WORD PTR [eax],cx
  404742:	dec    eax
  404743:	mov    esp,0x8319bb49
  404748:	add    BYTE PTR [eax],al
  40474a:	dec    DWORD PTR [ecx-0x72000100]
  404750:	cmp    al,0xf3
  404752:	mov    ds:0x767b607d,al
  404757:	add    DWORD PTR [ebx+0xff0089],0xffffffff
  40475e:	dec    ebx
  404760:	or     bl,ch
  404762:	mov    bh,0x46
  404764:	cld    
  404765:	xchg   ecx,eax
  404766:	outs   dx,DWORD PTR ds:[esi]
  404767:	add    bh,bh
  404769:	inc    DWORD PTR [ebx-0x7cffff01]
  40476f:	out    0x7c,al
  404771:	(bad)  
  404772:	or     DWORD PTR [eax+0x27],eax
  404775:	adc    BYTE PTR [ecx+0xff8300],0x83
  40477c:	or     esp,0x0
  40477f:	in     al,0x4f
  404781:	cdq    
  404782:	test   DWORD PTR [di],0x89bf25
  404789:	inc    DWORD PTR [eax]
  40478b:	int3   
  40478c:	add    bh,bh
  40478e:	inc    DWORD PTR [esi+0x8]
  404791:	aaa    
  404792:	pop    edx
  404793:	fistp  DWORD PTR [ecx]
  404795:	push   0xff0000e1
  40479a:	int3   
  40479b:	add    BYTE PTR [eax],al
  40479d:	(bad)  
  40479e:	(bad)  
  40479f:	jl     0x4047fe
  4047a1:	add    DWORD PTR [edi+0x33a646f0],ecx
  4047a7:	or     esp,0xffffffff
  4047aa:	mov    DWORD PTR [eax],eax
  4047ac:	mov    DWORD PTR [ecx+0x10f9bcff],ecx
  4047b2:	pop    eax
  4047b3:	pusha  
  4047b4:	clc    
  4047b5:	cmp    eax,0x8300007a
  4047ba:	(bad)  
  4047bb:	inc    DWORD PTR [eax]
  4047bd:	(bad)  
  4047be:	call   esp
  4047c0:	cmp    BYTE PTR [edx+0x1c],ah
  4047c3:	add    edx,ecx
  4047c5:	ret    0xffa8
  4047c8:	dec    DWORD PTR [ecx-0xff0100]
  4047ce:	add    BYTE PTR [edi+0x38bb2b34],dl
  4047d4:	sub    BYTE PTR [edx],0xe3
  4047d7:	inc    DWORD PTR [eax]
  4047d9:	add    bh,bh
  4047db:	add    bh,bh
  4047dd:	inc    DWORD PTR [eax]
  4047df:	fbstp  TBYTE PTR [edx+0x33]
  4047e2:	aaa    
  4047e3:	mov    dh,0x2d
  4047e5:	outs   dx,BYTE PTR ds:[esi]
  4047e6:	add    eax,0xffffffcc
  4047eb:	(bad)  
  4047ec:	dec    esp
  4047ee:	inc    DWORD PTR [ebx+0x6d]
  4047f1:	xor    dl,al
  4047f3:	xchg   ecx,eax
  4047f4:	push   edx
  4047f5:	mov    esi,0xffdc
  4047fa:	add    DWORD PTR [eax],0x0
  4047fd:	(bad)  
  4047fe:	(bad)  
  4047ff:	jg     0x4047ef
  404801:	pop    edi
  404802:	retf   
  404803:	inc    esp
  404804:	xchg   edx,eax
  404805:	lahf   
  404806:	test   edi,edi
  404808:	inc    DWORD PTR [eax]
  40480a:	inc    DWORD PTR [eax]
  40480c:	add    bh,bh
  40480e:	and    esi,0x72
  404811:	xchg   ecx,eax
  404812:	xchg   esi,eax
  404813:	imul   edx,DWORD PTR [ebx-0x7cfff94a],0x0
  40481a:	int3   
  40481b:	inc    DWORD PTR [eax]
  40481d:	dec    DWORD PTR [ecx+0x7b8d791e]
  404823:	cs pop eax
  404825:	mov    al,BYTE PTR [esi+0xff00ff]
  40482b:	add    BYTE PTR [ebx-0x237cff01],al
  404831:	das    
  404832:	mov    eax,ds:0xdda4aea1
  404837:	add    BYTE PTR [ebx+0xff89ff],al
  40483d:	add    DWORD PTR [ebx-0x12529c41],0xffffffe8
  404844:	mov    eax,ds:0xb967
  404849:	add    BYTE PTR [eax],al
  40484b:	mov    edi,edi
  40484d:	add    bh,bh
  40484f:	(bad)  
  404851:	lods   al,BYTE PTR ds:[esi]
  404852:	outs   dx,DWORD PTR ds:[esi]
  404853:	push   ecx
  404854:	add    eax,0x96c
  404859:	(bad)  
  40485a:	(bad)  
  40485b:	(bad)  
  40485c:	inc    DWORD PTR [eax]
  40485e:	cmp    DWORD PTR [edi+ebp*8-0x4],0xfffffff9
  404863:	data16 out dx,al
  404865:	outs   dx,BYTE PTR ds:[esi]
  404866:	sbb    al,0xff
  404868:	add    DWORD PTR [ebx-0xff7c01],0x0
  40486f:	imul   ebx,esp,0xe5e4cfc2
  404875:	rcl    bl,1
  404877:	(bad)  
  404878:	(bad)  
  404879:	(bad)  
  40487a:	inc    DWORD PTR [eax]
  40487c:	add    BYTE PTR [ebx-0x4a403c00],al
  404882:	cmp    BYTE PTR [esi+0x8dc25c],ah
  404888:	(bad)  
  404889:	(bad)  
  40488a:	inc    DWORD PTR [eax]
  40488c:	add    bh,bh
  40488e:	add    ch,dh
  404890:	xchg   BYTE PTR [ebp+0x11],ah
  404893:	(bad)  
  404895:	iret   
  404896:	fild   WORD PTR [ebx-0x767c7c7d]
  40489c:	dec    esp
  40489e:	jmp    FWORD PTR [ebx]
  4048a0:	cld    
  4048a1:	add    eax,0xde4443d6
  4048a6:	sub    eax,DWORD PTR [eax]
  4048a8:	(bad)  
  4048a9:	inc    DWORD PTR [eax]
  4048ab:	add    bh,bh
  4048ad:	cmp    edi,0xffffff88
  4048b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048b1:	sub    al,0x7b
  4048b3:	pop    esi
  4048b4:	mov    eax,0x89834520
  4048b9:	inc    DWORD PTR [ebx-0xff0001]
  4048bf:	pop    edi
  4048c0:	inc    ebp
  4048c1:	or     al,0x3a
  4048c3:	xor    BYTE PTR [ebx],cl
  4048c5:	sbb    ch,dl
  4048c7:	inc    DWORD PTR [eax]
  4048c9:	cmp    edi,0xffffff83
  4048cc:	inc    DWORD PTR [ebx-0x507d197d]
  4048d2:	adc    dl,dl
  4048d4:	sbb    DWORD PTR [ecx+0x24],ecx
  4048d7:	add    BYTE PTR [eax],al
  4048d9:	or     esp,0xffffff83
  4048dc:	add    bh,bh
  4048de:	or     DWORD PTR [ebx-0x77],0x31
  4048e2:	jbe    0x40491c
  4048e4:	fidivr WORD PTR [ecx]
  4048e6:	fxch   st(4)
  4048e8:	(bad)  
  4048e9:	inc    DWORD PTR [eax]
  4048eb:	inc    DWORD PTR [eax]
  4048ed:	add    DWORD PTR [eax],0xffffffb6
  4048f0:	or     ebx,esi
  4048f2:	test   BYTE PTR [eax-0x548c7f],0xff
  4048f9:	add    BYTE PTR [ebx+0xccff],al
  4048ff:	xchg   esp,eax
  404900:	sub    eax,0x17910f32
  404905:	add    al,0x31
  404907:	(bad)  
  404908:	(bad)  
  404909:	inc    DWORD PTR [eax]
  40490b:	add    bh,bh
  40490d:	add    bh,bh
  40490f:	rol    ecx,0x16
  404912:	jne    0x4048aa
  404914:	and    ebx,DWORD PTR [eax-0x3f]
  404917:	(bad)  
  404918:	(bad)  
  404919:	dec    esp
  40491b:	int3   
  40491c:	(bad)  
  40491d:	(bad)  
  40491e:	(bad)  
  40491f:	fsub   DWORD PTR [eax-0x80]
  404922:	dec    edx
  404923:	adc    DWORD PTR [ebp-0x3300d696],eax
  404929:	add    bh,bh
  40492b:	(bad)  
  40492c:	(bad)  
  40492d:	inc    DWORD PTR [eax]
  40492f:	mov    eax,ds:0x833dbb8c
  404934:	test   DWORD PTR [edi-0x7ced],edi
  40493a:	dec    DWORD PTR [ecx+0x41ff00ff]
  404940:	cmp    al,0x8e
  404942:	xlat   BYTE PTR ds:[ebx]
  404943:	mov    ah,0x27
  404945:	pop    ecx
  404946:	mov    dl,0x83
  404948:	int3   
  404949:	add    BYTE PTR [eax],al
  40494b:	cmp    edi,0xffffff89
  40494e:	push   edi
  404950:	fidivr WORD PTR [edi]
  404952:	pop    ds
  404953:	fxch   st(4)
  404955:	std    
  404956:	aad    0x0
  404958:	(bad)  
  404959:	inc    DWORD PTR [eax]
  40495b:	add    BYTE PTR [eax],al
  40495d:	add    BYTE PTR [eax],al
  40495f:	test   BYTE PTR [ebp+0x72],bh
  404962:	mov    cl,0x85
  404964:	xchg   DWORD PTR [eax-0xff57],esp
  40496a:	inc    DWORD PTR [eax]
  40496c:	add    BYTE PTR [ebx+0x3179c4cc],al
  404972:	int    0x3d
  404974:	adc    al,0xd7
  404976:	push   cs
  404977:	add    DWORD PTR [ebx+0xff0000],0xffffff89
  40497e:	sub    DWORD PTR [ecx+0x3e],0x61
  404982:	daa    
  404983:	dec    edx
  404984:	out    0x7b,al
  404986:	xchg   esp,eax
  404987:	dec    DWORD PTR [ecx-0x76000001]
  40498d:	(bad)  
  40498e:	jmp    DWORD PTR [edx]
  404990:	or     edx,DWORD PTR [edx]
  404992:	cmp    DWORD PTR [edx-0x64],0x2a
  404996:	cdq    
  404997:	(bad)  
  404998:	inc    DWORD PTR [eax]
  40499a:	(bad)  
  40499b:	(bad)  
  40499c:	inc    DWORD PTR [eax]
  40499e:	or     edx,0xffffffea
  4049a1:	lahf   
  4049a2:	fsub   st,st(2)
  4049a4:	push   0xb
  4049a6:	stos   DWORD PTR es:[edi],eax
  4049a7:	dec    DWORD PTR [ecx-0x7c7c01]
  4049ad:	int3   
  4049ae:	dec    DWORD PTR [edi+0x263416e8]
  4049b4:	retf   
  4049b5:	cmc    
  4049b6:	pop    esp
  4049b7:	add    BYTE PTR [ecx-0x77000000],cl
  4049bd:	mov    edi,edi
  4049bf:	mov    eax,ds:0xd5773927
  4049c4:	ja     0x4049cd
  4049c6:	pop    edi
  4049c7:	inc    DWORD PTR [eax]
  4049c9:	(bad)  
  4049ca:	inc    DWORD PTR [eax]
  4049cc:	add    DWORD PTR [eax],0xffffffff
  4049cf:	ins    BYTE PTR es:[edi],dx
  4049d0:	clc    
  4049d1:	sar    DWORD PTR [ecx],0xa6
  4049d4:	dec    esi
  4049d5:	in     al,dx
  4049d6:	nop
  4049d7:	add    BYTE PTR [eax],al
  4049d9:	add    BYTE PTR [eax],al
  4049db:	(bad)  
  4049dc:	dec    DWORD PTR [ecx-0x372ae600]
  4049e2:	inc    edx
  4049e3:	sub    al,0xd8
  4049e5:	sti    
  4049e6:	pop    ebx
  4049e7:	add    bh,bh
  4049e9:	add    DWORD PTR [eax],0xffffffff
  4049ec:	add    bh,bh
  4049ee:	jmp    FWORD PTR [esp+esi*8]
  4049f1:	add    ah,BYTE PTR [eax]
  4049f3:	aas    
  4049f4:	shl    DWORD PTR [edx-0xff70],1
  4049fa:	inc    DWORD PTR [eax]
  4049fc:	add    BYTE PTR [eax],al
  4049fe:	dec    DWORD PTR [esi+ebx*8+0x713a5293]
  404a05:	imul   esi,DWORD PTR [eax+0xff83],0xffffffff
  404a0c:	cmp    edi,0x0
  404a0f:	sahf   
  404a10:	pop    edi
  404a11:	mov    ecx,0x9087f50c
  404a16:	xor    edi,edi
  404a18:	add    BYTE PTR [eax],al
  404a1a:	mov    DWORD PTR [ecx+0x2e8989cc],ecx
  404a20:	mov    dl,0x5
  404a22:	scas   eax,DWORD PTR es:[edi]
  404a23:	jbe    0x404a26
  404a25:	mov    ah,0xc
  404a27:	dec    DWORD PTR [ecx+0xffffff]
  404a2d:	(bad)  
  404a2e:	(bad)  
  404a2f:	jmp    DWORD PTR [ebp+ebp*4-0x3f4b7969]
  404a36:	mov    ah,0x0
  404a38:	add    DWORD PTR [ebx-0x7600ff01],0x0
  404a3f:	call   0x37ca:0x7458c17a
  404a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a47:	int3   
  404a48:	mov    esp,ecx
  404a4a:	inc    DWORD PTR [eax]
  404a4c:	mov    esp,ecx
  404a4e:	dec    DWORD PTR [esi]
  404a50:	xchg   ebx,eax
  404a51:	rcr    BYTE PTR [edi+0x5cd092e4],1
  404a57:	add    DWORD PTR [ebx+0x89ff],0x0
  404a5e:	add    DWORD PTR [edi+0x3e],0xffffffc2
  404a62:	iret   
  404a63:	push   esi
  404a64:	pop    esi
  404a65:	sbb    edi,DWORD PTR [edi-0x7d]
  404a68:	add    BYTE PTR [eax],al
  404a6a:	add    ah,cl
  404a6c:	inc    DWORD PTR [eax]
  404a6e:	add    cl,ch
  404a70:	leave  
  404a71:	mov    ebp,ebp
  404a73:	stos   BYTE PTR es:[edi],al
  404a74:	test   al,0x97
  404a76:	mov    cl,0x89
  404a78:	inc    DWORD PTR [eax]
  404a7a:	(bad)  
  404a7b:	inc    DWORD PTR [ebx-0x3b18ff01]
  404a81:	xchg   edi,eax
  404a82:	pushf  
  404a83:	daa    
  404a84:	pop    esp
  404a85:	cdq    
  404a86:	retf   
  404a87:	add    bh,bh
  404a89:	(bad)  
  404a8a:	inc    DWORD PTR [eax]
  404a8c:	add    bh,bh
  404a8e:	add    bl,ch
  404a90:	dec    eax
  404a91:	sbb    DWORD PTR [esi],0xb5ab89da
  404a97:	(bad)  
  404a98:	(bad)  
  404a99:	(bad)  
  404a9a:	dec    esp
  404a9c:	add    bh,bh
  404a9e:	int3   
  404a9f:	in     eax,0x9e
  404aa1:	out    0xc2,al
  404aa3:	out    dx,eax
  404aa4:	data16 cmc 
  404aa6:	inc    DWORD PTR [eax]
  404aa8:	add    DWORD PTR [eax],0xffffffff
  404aab:	mov    edi,edi
  404aad:	add    BYTE PTR [eax],al
  404aaf:	outs   dx,DWORD PTR ds:[esi]
  404ab0:	mov    esp,0xbde45210
  404ab5:	push   0xcc0060
  404aba:	inc    DWORD PTR [eax]
  404abc:	inc    DWORD PTR [eax]
  404abe:	add    BYTE PTR [ebx-0x25],bh
  404ac1:	fisub  WORD PTR [eax+0x64e9ecb3]
  404ac7:	add    BYTE PTR [ebx-0xff0001],al
  404acd:	add    bh,bh
  404acf:	out    dx,eax
  404ad0:	cli    
  404ad1:	(bad)  
  404ad2:	xor    DWORD PTR [edx+esi*8],eax
  404ad5:	das    
  404ad6:	jecxz  0x404ad7
  404ad8:	cmp    edi,0xffffffff
  404adb:	inc    DWORD PTR [ebx-0x62ddff01]
  404ae1:	push   edx
  404ae2:	mov    ds:0x42a49752,al
  404ae7:	(bad)  
  404ae8:	inc    DWORD PTR [eax]
  404aea:	dec    DWORD PTR [ecx-0x3b000001]
  404af0:	dec    esp
  404af1:	dec    ebp
  404af2:	jmp    0x404ad0
  404af4:	and    BYTE PTR [eax+0x57],cl
  404af7:	(bad)  
  404af8:	inc    DWORD PTR [eax]
  404afa:	add    bh,bh
  404afc:	int3   
  404afd:	add    BYTE PTR [ebx-0x782237da],al
  404b03:	das    
  404b04:	pop    ds
  404b05:	pop    edi
  404b06:	jne    0x404b07
  404b08:	(bad)  
  404b09:	inc    DWORD PTR [ebx-0x7c000001]
  404b0f:	add    DWORD PTR [esi+0x6ac0e5cd],0xcc83b3fa
  404b19:	inc    DWORD PTR [ebx-0x7cff01]
  404b1f:	mov    edx,0xdddb54b8
  404b24:	mov    ds:0x83ff0c76,eax
  404b29:	add    BYTE PTR [ebx-0x33ff01],al
  404b2f:	in     al,dx
  404b30:	cld    
  404b31:	dec    ebp
  404b32:	mov    bh,0xb
  404b34:	add    dh,0x88
  404b37:	(bad)  
  404b38:	inc    DWORD PTR [eax]
  404b3a:	inc    DWORD PTR [eax]
  404b3c:	inc    DWORD PTR [eax]
  404b3e:	mov    edx,ebp
  404b40:	add    bh,BYTE PTR [esp+edi*8]
  404b43:	out    dx,eax
  404b44:	ins    BYTE PTR es:[edi],dx
  404b45:	and    esp,DWORD PTR [eax]
  404b47:	add    DWORD PTR [eax],0xffffffff
  404b4a:	add    BYTE PTR [eax],al
  404b4c:	(bad)  
  404b4d:	inc    DWORD PTR [ebx+0x38a4f787]
  404b53:	stos   DWORD PTR es:[edi],eax
  404b54:	(bad)  
  404b55:	push   cs
  404b56:	sub    eax,0x8900ffcc
  404b5b:	int3   
  404b5c:	add    BYTE PTR [eax],al
  404b5e:	or     DWORD PTR [edi+0xbc1f025],0xffffffd2
  404b65:	sbb    DWORD PTR [eax],edx
  404b67:	mov    edi,edi
  404b69:	(bad)  
  404b6a:	inc    DWORD PTR [ebx+0x7300ff00]
  404b70:	aaa    
  404b71:	bound  edx,QWORD PTR [edx+0x409c0041]
  404b77:	inc    DWORD PTR [ebx+0xffffcc]
  404b7d:	add    BYTE PTR [ebx+0x3342cb66],al
  404b83:	repz mov eax,ds:0xe9f6
  404b89:	add    bh,bh
  404b8b:	dec    DWORD PTR [ecx+0x6b9bff00]
  404b91:	pop    ecx
  404b92:	pop    ebp
  404b93:	addr16 push esi
  404b95:	test   DWORD PTR [edi],esi
  404b97:	inc    DWORD PTR [eax]
  404b99:	add    DWORD PTR [eax],0xffffffff
  404b9c:	add    bh,bh
  404b9e:	xor    DWORD PTR [edi],0xffffff9b
  404ba1:	mov    esp,0x2244582f
  404ba6:	xchg   bh,bh
  404ba8:	(bad)  
  404ba9:	(bad)  
  404baa:	dec    esp
  404bac:	(bad)  
  404bad:	(bad)  
  404bae:	(bad)  
  404baf:	mov    esp,0x9cfacc2d
  404bb4:	call   0x400d17
  404bb9:	add    ah,cl
  404bbb:	inc    DWORD PTR [eax]
  404bbd:	(bad)  
  404bbe:	jmp    FWORD PTR [edx+0x28]
  404bc1:	scas   al,BYTE PTR es:[edi]
  404bc2:	stc    
  404bc3:	or     eax,0xff876994
  404bc8:	add    bh,bh
  404bca:	dec    DWORD PTR [ecx-0x497c7677]
  404bd0:	retf   
  404bd1:	out    dx,al
  404bd2:	repnz inc eax
  404bd4:	(bad)  
  404bd5:	(bad)  
  404bd6:	mov    edi,0x8389ccff
  404bdb:	add    BYTE PTR [ebx+0x42b6ccff],al
  404be1:	and    DWORD PTR [edi+0x7e1129e7],esp
  404be7:	(bad)  
  404be8:	inc    DWORD PTR [eax]
  404bea:	inc    DWORD PTR [eax]
  404bec:	dec    DWORD PTR [ecx-0x3ad94434]
  404bf2:	xor    ebp,DWORD PTR ds:[esi+0x60]
  404bf6:	and    BYTE PTR [eax],al
  404bf8:	cmp    edi,0xffffffff
  404bfb:	int3   
  404bfc:	(bad)  
  404bfd:	(bad)  
  404bfe:	push   DWORD PTR [eax+0x3c]
  404c01:	dec    esi
  404c02:	and    DWORD PTR [edi],ebp
  404c04:	sbb    al,0x3f
  404c06:	cmp    DWORD PTR [eax],eax
  404c08:	int3   
  404c09:	cmp    edi,0xffffffff
  404c0c:	mov    edi,edi
  404c0e:	add    dl,ah
  404c10:	cmp    ecx,DWORD PTR [ecx]
  404c12:	cmc    
  404c13:	fmul   QWORD PTR [ebx-0x7c7640a2]
  404c19:	add    BYTE PTR [ebx+0xffff00],al
  404c1f:	jecxz  0x404c8d
  404c21:	xchg   DWORD PTR [eax],esp
  404c23:	call   0xccad281c
  404c28:	add    bh,bh
  404c2a:	add    bh,bh
  404c2c:	add    bh,bh
  404c2e:	int3   
  404c2f:	int3   
  404c30:	nop
  404c31:	(bad)  
  404c32:	in     eax,dx
  404c33:	and    ch,dh
  404c35:	(bad)  
  404c39:	add    bh,bh
  404c3b:	(bad)  
  404c3c:	inc    DWORD PTR [eax]
  404c3e:	add    BYTE PTR [ebp-0x55],dl
  404c41:	ins    BYTE PTR es:[edi],dx
  404c42:	xor    eax,0x7dc42810
  404c47:	add    BYTE PTR [eax],al
  404c49:	add    bh,bh
  404c4b:	dec    DWORD PTR [ecx+0x429789cc]
  404c51:	jg     0x404c4e
  404c53:	aas    
  404c54:	data16 aam 0xd7
  404c57:	add    bh,bh
  404c59:	mov    DWORD PTR [ebx-0x330100],eax
  404c5f:	mov    edx,0xec921e98
  404c64:	loopne 0x404c16
  404c66:	sar    bh,1
  404c68:	add    DWORD PTR [ebx-0x7c0001],0xffffffff
  404c6f:	out    dx,eax
  404c70:	jns    0x404c70
  404c72:	pop    edi
  404c73:	xchg   edx,eax
  404c74:	sub    DWORD PTR [edx+0x63],edi
  404c77:	int3   
  404c78:	add    BYTE PTR [eax],al
  404c7a:	dec    esp
  404c7c:	cmp    edi,0xffffffff
  404c7f:	sub    ecx,edi
  404c81:	cwde   
  404c82:	(bad)  
  404c83:	jge    0x404c8b
  404c85:	add    edi,edx
  404c87:	add    DWORD PTR [eax],0xffffffff
  404c8a:	add    BYTE PTR [ebx-0x46007c01],al
  404c90:	mov    ebx,0x6f2f70ca
  404c95:	hlt    
  404c96:	in     eax,dx
  404c97:	(bad)  
  404c98:	inc    DWORD PTR [eax]
  404c9a:	or     esp,0xffffff83
  404c9d:	add    BYTE PTR [ebx+0x4179bbbb],al
  404ca3:	(bad)  
  404ca4:	mov    bh,0xbf
  404ca6:	stos   DWORD PTR es:[edi],eax
  404ca7:	inc    DWORD PTR [eax]
  404ca9:	inc    DWORD PTR [eax]
  404cab:	(bad)  
  404cac:	dec    esp
  404cae:	add    BYTE PTR [ebx-0x17],dl
  404cb1:	and    DWORD PTR [edx+0x5b],eax
  404cb4:	icebp  
  404cb5:	xchg   al,bh
  404cb7:	dec    esp
  404cb9:	inc    DWORD PTR [eax]
  404cbb:	add    bh,bh
  404cbd:	inc    DWORD PTR [ebx+0x28960367]
  404cc3:	bound  esi,QWORD PTR [esi+0xff2a86]
  404cc9:	inc    DWORD PTR [ebx+0xff00]
  404ccf:	mov    al,bl
  404cd1:	xchg   esp,eax
  404cd2:	inc    ebp
  404cd3:	push   es
  404cd4:	mov    bh,0x63
  404cd6:	daa    
  404cd7:	add    bh,bh
  404cd9:	dec    DWORD PTR [ecx-0x100]
  404cdf:	sbb    dl,dl
  404ce1:	xchg   esi,eax
  404ce2:	or     edx,DWORD PTR [ecx+esi*1-0x27]
  404ce6:	push   edi
  404ce7:	dec    esp
  404ce9:	inc    DWORD PTR [eax]
  404ceb:	dec    esp
  404ced:	add    bh,bh
  404cef:	aaa    
  404cf0:	jecxz  0x404cca
  404cf2:	ins    DWORD PTR es:[edi],dx
  404cf3:	lea    eax,[edx+0x9a35]
  404cf9:	add    bh,bh
  404cfb:	int3   
  404cfc:	(bad)  
  404cfd:	inc    DWORD PTR [eax]
  404cff:	ret    0x724
  404d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d03:	fisttp DWORD PTR [ecx-0x5770]
  404d09:	inc    DWORD PTR [eax]
  404d0b:	dec    esp
  404d0d:	inc    DWORD PTR [eax]
  404d0f:	dec    eax
  404d10:	push   edx
  404d11:	mov    cl,0x4b
  404d13:	leave  
  404d14:	dec    ebx
  404d15:	xor    DWORD PTR [ecx],eax
  404d17:	dec    DWORD PTR [ecx-0x767c7c01]
  404d1d:	cmp    edi,0xfffffff9
  404d20:	test   eax,0x675f295f
  404d25:	jl     0x404d30
  404d27:	inc    DWORD PTR [eax]
  404d29:	cmp    edi,0xffffffff
  404d2c:	add    bh,bh
  404d2e:	mov    esi,esi
  404d30:	retf   0x5179
  404d33:	sar    esp,0xbd
  404d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d37:	inc    DWORD PTR [eax]
  404d39:	dec    esp
  404d3b:	inc    DWORD PTR [eax]
  404d3d:	add    BYTE PTR [eax],al
  404d3f:	imul   edx,DWORD PTR [ecx+0x4a],0x45
  404d43:	(bad)  
  404d44:	call   0x40fc12
  404d49:	(bad)  
  404d4a:	inc    DWORD PTR [eax]
  404d4c:	add    DWORD PTR [eax],0xffffffff
  404d4f:	in     al,dx
  404d50:	jg     0x404cee
  404d52:	jb     0x404cdd
  404d54:	jmp    0x13f6849
  404d59:	add    BYTE PTR [eax],al
  404d5b:	(bad)  
  404d5c:	(bad)  
  404d5d:	(bad)  
  404d5e:	jmp    DWORD PTR [ebx+0x32]
  404d61:	push   0xbf54a88a
  404d66:	ins    BYTE PTR es:[edi],dx
  404d67:	(bad)  
  404d68:	dec    esp
  404d6a:	add    BYTE PTR [eax],al
  404d6c:	inc    DWORD PTR [ebx+0x68956b83]
  404d72:	xor    eax,0x1c9d7eb3
  404d77:	inc    DWORD PTR [eax]
  404d79:	add    bh,bh
  404d7b:	inc    DWORD PTR [eax]
  404d7d:	add    bh,bh
  404d7f:	dec    esp
  404d80:	mov    esi,0xa42959ba
  404d85:	ins    DWORD PTR es:[edi],dx
  404d86:	mov    eax,0x8300
  404d8b:	add    BYTE PTR [eax],al
  404d8d:	(bad)  
  404d8e:	call   esi
  404d90:	scas   eax,DWORD PTR es:[edi]
  404d91:	imul   ecx,DWORD PTR [edx+0x7b],0x83055b2c
  404d98:	add    BYTE PTR [eax],al
  404d9a:	mov    DWORD PTR [eax],eax
  404d9c:	(bad)  
  404d9d:	inc    DWORD PTR [eax]
  404d9f:	mov    ds:0x4aefcee5,eax
  404da4:	mov    WORD PTR [edx-0x26],ds
  404da7:	inc    DWORD PTR [ebx-0xff7c01]
  404dad:	inc    DWORD PTR [eax]
  404daf:	popf   
  404db0:	lea    ebp,[edx]
  404db2:	sbb    ah,BYTE PTR [ebp+ecx*2+0xff7c2d]
  404db9:	mov    edi,edi
  404dbb:	dec    DWORD PTR [ecx-0x34570001]
  404dc1:	dec    ecx
  404dc2:	aas    
  404dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dc4:	and    al,BYTE PTR [ecx+0xcc00f1]
  404dca:	add    BYTE PTR [ecx-0x76007c01],cl
  404dd0:	mov    eax,cs
  404dd2:	out    dx,al
  404dd3:	nop
  404dd4:	cmp    DWORD PTR [ecx],esi
  404dd6:	mov    ebx,0x89ff89cc
  404ddb:	(bad)  
  404ddc:	(bad)  
  404ddd:	inc    DWORD PTR [ebx-0x58e72c59]
  404de3:	jo     0x404dc4
  404de5:	mov    esp,0x8300ff19
  404dea:	add    BYTE PTR [eax],al
  404dec:	inc    DWORD PTR [eax]
  404dee:	dec    DWORD PTR ds:0xf74f2adf
  404df4:	ror    BYTE PTR [edx-0x7c003d],0xff
  404dfb:	(bad)  
  404dfc:	(bad)  
  404dfd:	inc    DWORD PTR [eax]
  404dff:	xlat   BYTE PTR ds:[ebx]
  404e00:	mov    ?,WORD PTR [edi-0x21]
  404e03:	retf   0x1d47
  404e06:	xlat   BYTE PTR ds:[ebx]
  404e07:	cmp    edi,0xffffffff
  404e0a:	add    BYTE PTR [eax],al
  404e0c:	inc    DWORD PTR [eax]
  404e0e:	add    dh,cl
  404e10:	inc    edx
  404e11:	mov    dl,0x44
  404e13:	ja     0x404e5b
  404e15:	sub    BYTE PTR [edi-0x33ffff01],0x0
  404e1c:	(bad)  
  404e1d:	(bad)  
  404e1e:	jmp    DWORD PTR [esi-0x1d]
  404e21:	and    al,0x2d
  404e23:	lahf   
  404e24:	mov    edx,0xccff231b
  404e29:	add    bh,bh
  404e2b:	dec    esp
  404e2d:	inc    DWORD PTR [eax]
  404e2f:	mov    ch,0x3c
  404e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e32:	cmp    eax,0x23d490d8
  404e37:	int3   
  404e38:	(bad)  
  404e39:	dec    esp
  404e3b:	add    bh,bh
  404e3d:	(bad)  
  404e3e:	push   DWORD PTR [eax+0x5fa9fcd4]
  404e44:	fidivr WORD PTR [ebp-0x33767c93]
  404e4a:	inc    DWORD PTR [ebx+0x1d890000]
  404e50:	pusha  
  404e51:	shl    DWORD PTR [edi-0x797eb45c],0xff
  404e58:	int3   
  404e59:	add    DWORD PTR [eax],0x0
  404e5c:	add    ah,cl
  404e5e:	add    BYTE PTR [ebx+0x16],dh
  404e61:	push   es
  404e62:	les    ebx,FWORD PTR [ebp-0x20]
  404e65:	or     cl,bl
  404e67:	int3   
  404e68:	int3   
  404e69:	add    BYTE PTR [ebx-0x7d],al
  404e6f:	pop    esp
  404e70:	sub    edx,DWORD PTR [esi+0x4f]
  404e73:	add    cl,al
  404e75:	sar    DWORD PTR [ebp-0x1],cl
  404e78:	int3   
  404e79:	add    DWORD PTR [eax],0xffffffff
  404e7c:	dec    DWORD PTR [ecx+0x32dd18ff]
  404e82:	push   0x69
  404e84:	fucomi st,st(5)
  404e86:	iret   
  404e87:	(bad)  
  404e88:	(bad)  
  404e89:	inc    DWORD PTR [eax]
  404e8b:	add    bh,bh
  404e8d:	add    bh,bh
  404e8f:	push   ecx
  404e90:	icebp  
  404e91:	ret    0x89d2
  404e94:	std    
  404e95:	lds    ebx,FWORD PTR [eax-0x1]
  404e98:	cmp    edi,0x0
  404e9b:	add    DWORD PTR [eax],0xffffff83
  404e9e:	mov    ecx,ebx
  404ea0:	jle    0x404efd
  404ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ea3:	fsubr  QWORD PTR [ebx+eax*4]
  404ea6:	fdivp  st(7),st
  404ea8:	add    BYTE PTR [eax],al
  404eaa:	add    bh,bh
  404eac:	add    BYTE PTR [eax],al
  404eae:	xor    DWORD PTR [ecx-0x466fafca],0x6a
  404eb5:	rcl    BYTE PTR [ecx-0x77],1
  404eb8:	(bad)  
  404eb9:	(bad)  
  404eba:	inc    DWORD PTR [eax]
  404ebc:	add    BYTE PTR [ebx-0x6059e134],al
  404ec2:	pop    es
  404ec3:	in     eax,0x17
  404ec5:	cld    
  404ec6:	mov    ch,0x0
  404ec8:	inc    DWORD PTR [eax]
  404eca:	inc    DWORD PTR [ebx+0x70089ff]
  404ed0:	or     ecx,ebx
  404ed2:	adc    al,0x7c
  404ed4:	mov    ah,0xb8
  404ed6:	or     al,0x0
  404ed8:	inc    DWORD PTR [eax]
  404eda:	(bad)  
  404edb:	dec    DWORD PTR [ecx-0x29a33400]
  404ee1:	ds xchg esp,eax
  404ee3:	mov    edx,0x83ed8eef
  404ee8:	int3   
  404ee9:	inc    DWORD PTR [ebx-0x7d]
  404eef:	int3   
  404ef0:	or     bh,BYTE PTR [eax]
  404ef2:	dec    edx
  404ef3:	(bad)
  404ef6:	cs mov edi,edi
  404ef9:	dec    DWORD PTR [ecx+0xff83ff]
  404eff:	add    ebx,esp
  404f01:	fcomp  st(3)
  404f03:	xchg   ebp,eax
  404f04:	xlat   BYTE PTR ds:[ebx]
  404f05:	ss ror ah,0x83
  404f09:	add    bh,bh
  404f0b:	add    BYTE PTR [eax],al
  404f0d:	(bad)  
  404f0e:	dec    DWORD PTR [edi+eax*2]
  404f11:	dec    edi
  404f12:	jbe    0x404f14
  404f14:	and    DWORD PTR [esi-0x51],edi
  404f17:	add    bh,bh
  404f19:	int3   
  404f1a:	int3   
  404f1b:	dec    DWORD PTR [ecx+0x455cff83]
  404f21:	cld    
  404f22:	loopne 0x404f93
  404f24:	stc    
  404f25:	aaa    
  404f26:	push   edi
  404f27:	inc    DWORD PTR [eax]
  404f29:	add    bh,bh
  404f2b:	(bad)  
  404f2c:	dec    esp
  404f2e:	jmp    DWORD PTR [edx+0x79]
  404f31:	fadd   DWORD PTR [ebx+0x60dea456]
  404f37:	(bad)  
  404f38:	inc    DWORD PTR [eax]
  404f3a:	add    BYTE PTR [eax],al
  404f3c:	cmp    edi,0xffffffff
  404f3f:	pop    ebp
  404f40:	icebp  
  404f41:	ins    DWORD PTR es:[edi],dx
  404f42:	dec    esi
  404f43:	pop    edx
  404f44:	push   esp
  404f45:	sbb    cl,dl
  404f47:	add    bh,bh
  404f49:	add    BYTE PTR [eax],al
  404f4b:	int3   
  404f4c:	inc    DWORD PTR [eax]
  404f4e:	dec    DWORD PTR [edi+0x49]
  404f51:	adc    eax,0xf65c2ad5
  404f56:	and    cl,ah
  404f58:	mov    DWORD PTR [eax],eax
  404f5a:	add    DWORD PTR [ebx-0x3b00ff01],0xffffffd1
  404f61:	or     edi,DWORD PTR ds:0xf66330da
  404f67:	add    BYTE PTR [ebx-0x7600ff01],al
  404f6d:	(bad)  
  404f6e:	inc    ebp
  404f70:	inc    esi
  404f71:	sti    
  404f72:	pop    ebp
  404f73:	stc    
  404f74:	xchg   ebx,ebp
  404f76:	leave  
  404f77:	cmp    edi,0xffffffff
  404f7a:	mov    DWORD PTR [ebx-0x2300007d],eax
  404f80:	dec    edi
  404f81:	stc    
  404f82:	cwde   
  404f83:	in     al,0xb5
  404f85:	fimul  WORD PTR [ecx+ecx*4-0xff0001]
  404f8c:	inc    DWORD PTR [eax]
  404f8e:	jmp    FWORD PTR [edi+0x15]
  404f91:	int    0xfa
  404f93:	adc    DWORD PTR [edx+0xcc16f1],0x83ff8900
  404f9d:	add    BYTE PTR [eax],al
  404f9f:	and    BYTE PTR [eax+eiz*1],0x7
  404fa3:	xchg   esi,eax
  404fa4:	gs mov edx,0x83ffff68
  404faa:	inc    DWORD PTR [eax]
  404fac:	int3   
  404fad:	add    DWORD PTR [eax],0xffffffe3
  404fb0:	out    dx,al
  404fb1:	lock mov eax,ds:0x48ace88a
  404fb7:	inc    DWORD PTR [eax]
  404fb9:	inc    DWORD PTR [eax]
  404fbb:	(bad)  
  404fbc:	(bad)  
  404fbd:	inc    DWORD PTR [eax]
  404fbf:	push   es
  404fc0:	repz mov ch,0x6d
  404fc3:	jp     0x404fb3
  404fc5:	pop    esi
  404fc6:	mov    ecx,0xffffff83
  404fcb:	inc    DWORD PTR [eax]
  404fcd:	or     esp,0xf
  404fd0:	xor    BYTE PTR [ebx-0x6240cd24],cl
  404fd6:	inc    DWORD PTR es:[eax]
  404fd9:	add    ah,cl
  404fdb:	cmp    edi,0xffffffff
  404fde:	(bad)  
  404fdf:	sti    
  404fe0:	into   
  404fe1:	pop    ds
  404fe2:	sub    eax,ebx
  404fe4:	ret    0x7901
  404fe7:	(bad)  
  404fe8:	(bad)  
  404fe9:	dec    DWORD PTR [ecx-0x7c003301]
  404fef:	or     al,BYTE PTR [edi+0x2be99af0]
  404ff5:	mov    eax,0xffffffe1
  404ffa:	(bad)  
  404ffb:	inc    DWORD PTR [ebx+0x64700000]
  405001:	ds dec edx
  405003:	sub    esp,DWORD PTR gs:[ebp+ecx*2+0x83ff00]
  40500b:	inc    DWORD PTR [ebx+0x4edaffff]
  405011:	repz (bad) 
  405013:	pop    esi
  405014:	stos   DWORD PTR es:[edi],eax
  405015:	xor    DWORD PTR [esi-0x1],edx
  405018:	cmp    edi,0x0
  40501b:	add    bh,bh
  40501d:	or     esp,0xffffffe1
  405020:	lds    eax,FWORD PTR [esi]
  405022:	outs   dx,DWORD PTR ds:[esi]
  405023:	and    al,0xbe
  405025:	int    0x2d
  405027:	int3   
  405028:	inc    DWORD PTR [eax]
  40502a:	cmp    edi,0x0
  40502d:	add    DWORD PTR [eax],0xffffffa3
  405030:	jle    0x404fbb
  405032:	out    dx,al
  405033:	sub    ah,BYTE PTR [edi]
  405035:	add    esp,eax
  405037:	add    BYTE PTR [eax],al
  405039:	int3   
  40503a:	dec    DWORD PTR [ecx+0xfffcc00]
  405040:	mov    edi,0xd955e8ec
  405045:	mov    dl,0xf0
  405047:	add    bh,bh
  405049:	cmp    edi,0xffffffff
  40504c:	add    bh,bh
  40504e:	int3   
  40504f:	cli    
  405050:	into   
  405051:	loope  0x40503a
  405053:	sub    ch,BYTE PTR [ebp+0x0]
  405056:	sbb    eax,0xffff00ff
  40505b:	add    DWORD PTR [ebx-0x13a5ff01],0x59
  405062:	call   0xcc:0x7abaf226
  405069:	add    DWORD PTR [eax],0xffffffff
  40506c:	add    DWORD PTR [eax],0xffffffff
  40506f:	xor    DWORD PTR [ecx-0x2b],ebx
  405072:	test   al,0xc5
  405074:	mov    ebx,0xccff302e
  405079:	inc    DWORD PTR [eax]
  40507b:	add    bh,bh
  40507d:	add    BYTE PTR [eax],al
  40507f:	and    BYTE PTR [ebx+0x41dfef9e],dl
  405085:	adc    BYTE PTR [esi-0x340000],cl
  40508b:	(bad)  
  40508c:	(bad)  
  40508d:	(bad)  
  40508e:	jmp    FWORD PTR [ecx-0x1187797c]
  405094:	sub    al,0x83
  405096:	out    0xff,eax
  405098:	inc    DWORD PTR [eax]
  40509a:	(bad)  
  40509b:	inc    DWORD PTR [eax]
  40509d:	add    bh,bh
  40509f:	xchg   esi,eax
  4050a0:	mov    dh,0x2
  4050a2:	clc    
  4050a3:	or     eax,0x17287a
  4050a8:	inc    DWORD PTR [eax]
  4050aa:	(bad)  
  4050ab:	inc    DWORD PTR [ebx-0x120ff01]
  4050b1:	retf   
  4050b2:	add    al,0x69
  4050b4:	adc    DWORD PTR [ecx+eiz*2-0x7d],edi
  4050bb:	(bad)  
  4050bc:	inc    DWORD PTR [eax]
  4050be:	jmp    DWORD PTR [esi]
  4050c0:	and    al,0x54
  4050c2:	jmp    0xcd0abb7d
  4050c7:	add    ah,cl
  4050c9:	(bad)  
  4050ca:	dec    esp
  4050cc:	inc    DWORD PTR [eax]
  4050ce:	call   FWORD PTR [edi-0x7c]
  4050d1:	rcr    DWORD PTR [eax],cl
  4050d3:	pop    ds
  4050d4:	pop    ss
  4050d5:	fmul   QWORD PTR [eax-0x1]
  4050db:	add    BYTE PTR [ecx+0x26e5ff00],cl
  4050e1:	fmul   QWORD PTR [ebp+0x45c9fdfb]
  4050e7:	inc    DWORD PTR [eax]
  4050e9:	(bad)  
  4050ea:	inc    DWORD PTR [ebx-0x23ff0001]
  4050f0:	adc    dh,BYTE PTR [edx]
  4050f2:	pop    edx
  4050f3:	adc    eax,0xadac8b
  4050f8:	add    DWORD PTR [eax],0x0
  4050fb:	inc    DWORD PTR [ebx-0x65287c77]
  405101:	xor    eax,0x3168b728
  405106:	xchg   DWORD PTR [eax],eax
  405108:	add    DWORD PTR [ebx+0xffff],0x0
  40510f:	es scas al,BYTE PTR es:[edi]
  405111:	ss jg  0x4050f1
  405114:	das    
  405115:	fs pop edi
  405117:	add    ah,cl
  405119:	inc    DWORD PTR [eax]
  40511b:	add    BYTE PTR [ecx-0x1f7c0000],cl
  405121:	xchg   ebp,eax
  405122:	(bad)  
  405123:	pop    ss
  405124:	cld    
  405125:	inc    edi
  405126:	loop   0x405127
  405128:	inc    DWORD PTR [eax]
  40512a:	mov    DWORD PTR [eax],eax
  40512c:	cmp    edi,0xffffffff
  40512f:	ins    BYTE PTR es:[edi],dx
  405130:	mov    esp,0xf7496e96
  405135:	and    DWORD PTR [ebx+eax*4],edx
  405138:	cmp    edi,0xffffffff
  40513b:	inc    DWORD PTR [eax]
  40513d:	inc    DWORD PTR [ebx+0x41a1452a]
  405143:	mov    ebx,0x836e9635
  405148:	add    bh,bh
  40514a:	inc    DWORD PTR [eax]
  40514c:	(bad)  
  40514d:	inc    DWORD PTR [eax]
  40514f:	cli    
  405150:	pushf  
  405151:	stos   BYTE PTR es:[edi],al
  405152:	xchg   ecx,eax
  405153:	mov    ecx,ebp
  405155:	pop    edx
  405156:	adc    BYTE PTR [eax],al
  405158:	(bad)  
  405159:	dec    DWORD PTR [ecx+0x89ccff]
  40515f:	sub    ebx,esp
  405161:	jb     0x405199
  405163:	pop    ss
  405164:	test   al,0xe0
  405166:	mov    edx,0x83ff83
  40516b:	add    DWORD PTR [eax],0xffffffcc
  40516e:	dec    DWORD PTR [esi+eiz*1]
  405171:	and    DWORD PTR [ebp+0x4b7ab7a7],edx
  405177:	mov    edi,edi
  405179:	(bad)  
  40517a:	dec    DWORD PTR [ecx+0x16ff00ff]
  405180:	cdq    
  405181:	clc    
  405182:	sbb    dh,BYTE PTR [ebp+0x19]
  405185:	repnz call 0xccff:0xccffff
  40518d:	(bad)  
  40518e:	jmp    DWORD PTR [eax-0x3b]
  405191:	push   0x7244b122
  405196:	sub    al,0x0
  405198:	mov    edi,edi
  40519a:	add    BYTE PTR [eax],al
  40519c:	(bad)  
  40519d:	inc    DWORD PTR [eax]
  40519f:	pop    es
  4051a0:	stos   DWORD PTR es:[edi],eax
  4051a1:	fild   QWORD PTR [ecx+0x3]
  4051a4:	shr    bh,1
  4051a6:	jg     0x4051a7
  4051a8:	(bad)  
  4051a9:	(bad)  
  4051aa:	(bad)  
  4051ab:	inc    DWORD PTR [eax]
  4051ad:	add    BYTE PTR [eax],al
  4051af:	push   edx
  4051b0:	mov    al,ss:0x64358499
  4051b6:	xchg   edi,eax
  4051b7:	inc    DWORD PTR [ebx+0xffffff]
  4051bd:	int3   
  4051be:	inc    DWORD PTR [edx-0x50]
  4051c1:	in     eax,dx
  4051c2:	aaa    
  4051c3:	mov    dl,0x90
  4051c5:	add    DWORD PTR [edx],0x83ff83
  4051cb:	add    bh,bh
  4051cd:	inc    DWORD PTR [eax]
  4051cf:	mov    cl,0x42
  4051d1:	mov    gs,edx
  4051d3:	jno    0x40522c
  4051d5:	sbb    BYTE PTR [edi-0x330001],bl
  4051db:	inc    DWORD PTR [ebx+0x622dccff]
  4051e1:	adc    ebx,eax
  4051e3:	mov    esi,0xfe901f
  4051e8:	add    DWORD PTR [ebx+0x83],0xffffffff
  4051ef:	outs   dx,BYTE PTR ds:[esi]
  4051f0:	ins    BYTE PTR es:[edi],dx
  4051f1:	ss das 
  4051f3:	xor    ebp,DWORD PTR [eax+ebx*2+0x83ff17]
  4051fa:	int3   
  4051fb:	int3   
  4051fc:	dec    esp
  4051fe:	int3   
  4051ff:	sbb    bl,BYTE PTR [ecx-0x23]
  405202:	cmp    DWORD PTR [ecx],ebx
  405204:	adc    BYTE PTR [ebx-0x38],dh
  405207:	cmp    edi,0xffffffff
  40520a:	add    bh,bh
  40520c:	(bad)  
  40520d:	(bad)  
  40520e:	push   DWORD PTR [edx-0x6b138d90]
  405214:	add    BYTE PTR [edx],cl
  405216:	dec    ebx
  405217:	dec    esp
  405219:	inc    DWORD PTR [eax]
  40521b:	(bad)  
  40521c:	dec    esp
  40521e:	(bad)  
  40521f:	jge    0x405214
  405221:	inc    ecx
  405222:	add    ebx,DWORD PTR [edx+edx*8]
  405225:	pop    es
  405226:	mov    eax,ds:0xffffffff
  40522b:	(bad)  
  40522c:	(bad)  
  40522d:	dec    DWORD PTR [ecx-0x1ea687c7]
  405233:	push   edi
  405234:	and    DWORD PTR [ecx+eax*8],edx
  405237:	inc    DWORD PTR [eax]
  405239:	int3   
  40523a:	(bad)  
  40523b:	inc    DWORD PTR [eax]
  40523d:	(bad)  
  40523e:	push   DWORD PTR [edi+0x3cc28d3a]
  405244:	mov    bh,0x67
  405246:	in     eax,0xff
  405248:	cmp    edi,0xffffffff
  40524b:	add    bh,bh
  40524d:	int3   
  40524e:	add    BYTE PTR [esi+0x73],bh
  405251:	sbb    BYTE PTR [ebp+esi*1+0x51],cl
  405255:	cmp    DWORD PTR ds:0xccff83ff,esi
  40525b:	add    bh,bh
  40525d:	add    BYTE PTR [eax],al
  40525f:	mov    ds:0xd81ccb97,eax
  405264:	adc    bh,cl
  405266:	add    BYTE PTR es:[ebx+0x89ffff],al
  40526d:	(bad)  
  40526e:	jmp    FWORD PTR [eax-0x6]
  405271:	mov    ebp,ecx
  405273:	push   ebx
  405274:	xchg   edi,eax
  405275:	sahf   
  405276:	sahf   
  405277:	(bad)  
  405278:	inc    DWORD PTR [ebx-0x76007d]
  40527e:	call   FWORD PTR [edi+0x6bcd776c]
  405284:	popf   
  405285:	cmp    DWORD PTR [ecx-0x1],ebx
  405288:	mov    edi,edi
  40528a:	int3   
  40528b:	mov    DWORD PTR [eax],eax
  40528d:	int3   
  40528e:	sub    DWORD PTR [ebx+0x18],0xffffffca
  405292:	mov    esi,0xbaf15f0
  405297:	(bad)  
  405298:	(bad)  
  405299:	inc    DWORD PTR [eax]
  40529b:	(bad)  
  40529c:	dec    esp
  40529e:	add    BYTE PTR [edx+0x66],ch
  4052a1:	push   ds
  4052a2:	(bad)  
  4052a3:	push   esi
  4052a4:	xchg   ebx,eax
  4052a5:	in     eax,0x93
  4052a7:	add    bh,bh
  4052a9:	(bad)  
  4052aa:	inc    DWORD PTR [ebx+0x3e00ff00]
  4052b0:	enter  0x2edc,0x30
  4052b4:	mov    bh,BYTE PTR [eax]
  4052b6:	std    
  4052b7:	(bad)  
  4052b8:	dec    esp
  4052ba:	mov    edi,edi
  4052bc:	inc    DWORD PTR [eax]
  4052be:	add    ch,cl
  4052c0:	aaa    
  4052c1:	pop    es
  4052c2:	test   eax,0xd9420606
  4052c7:	add    bh,bh
  4052c9:	(bad)  
  4052ca:	inc    DWORD PTR [ebx-0x77c3334]
  4052d0:	push   esi
  4052d1:	add    BYTE PTR ds:0x2f1dd5de,cl
  4052d7:	(bad)  
  4052d8:	inc    DWORD PTR [eax]
  4052da:	(bad)  
  4052db:	inc    DWORD PTR [eax]
  4052dd:	(bad)  
  4052de:	call   esi
  4052e0:	out    0x5e,al
  4052e2:	loop   0x40531e
  4052e4:	nop
  4052e5:	outs   dx,BYTE PTR ds:[esi]
  4052e6:	or     bh,bh
  4052e8:	(bad)  
  4052e9:	inc    DWORD PTR [ebx-0x33ff01]
  4052ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052f0:	cmp    DWORD PTR [eax],eax
  4052f2:	pop    eax
  4052f3:	cmp    al,0x36
  4052f5:	adc    edi,DWORD PTR [eax-0x1]
  4052f8:	int3   
  4052f9:	mov    edi,edi
  4052fb:	cmp    edi,0x0
  4052fe:	int3   
  4052ff:	or     DWORD PTR [edx],esi
  405301:	je     0x405367
  405303:	fisubr DWORD PTR [esi]
  405305:	sub    eax,0xffffcce5
  40530a:	mov    DWORD PTR [ecx-0x17ff7c7d],ecx
  405310:	daa    
  405311:	pop    eax
  405312:	repz push edi
  405314:	add    dh,dl
  405316:	pop    es
  405317:	int3   
  405318:	inc    DWORD PTR [eax]
  40531a:	inc    DWORD PTR [eax]
  40531c:	inc    DWORD PTR [eax]
  40531e:	int3   
  40531f:	jge    0x405357
  405321:	mov    esi,0x74f01e47
  405326:	inc    ebp
  405327:	add    BYTE PTR [eax],al
  405329:	cmp    edi,0x0
  40532c:	add    bh,bh
  40532e:	(bad)  
  40532f:	fsubr  DWORD PTR [esi-0x76]
  405332:	addr16 mov dl,0x43
  405335:	pusha  
  405336:	jg     0x405338
  405338:	inc    DWORD PTR [ebx-0xffff77]
  40533e:	dec    DWORD PTR ds:0x7e5329b3
  405344:	not    DWORD PTR [eax]
  405346:	pusha  
  405347:	(bad)  
  405348:	(bad)  
  405349:	(bad)  
  40534a:	(bad)  
  40534b:	(bad)  
  40534c:	(bad)  
  40534d:	(bad)  
  40534e:	(bad)  
  40534f:	std    
  405350:	scas   eax,DWORD PTR es:[edi]
  405351:	in     al,0xb6
  405353:	xor    edx,eax
  405355:	and    BYTE PTR [esi-0x33ffff34],0x0
  40535c:	int3   
  40535d:	(bad)  
  40535e:	jmp    FWORD PTR [esi+ecx*4+0x2b]
  405362:	into   
  405363:	mov    eax,0xff9798a9
  405368:	(bad)  
  405369:	(bad)  
  40536a:	inc    DWORD PTR [eax]
  40536c:	add    BYTE PTR [ebx+0x4f17da83],al
  405372:	mov    esp,0xc01fd21c
  405377:	inc    DWORD PTR [eax]
  405379:	add    BYTE PTR [eax],al
  40537b:	mov    edi,edi
  40537d:	add    BYTE PTR [ecx+0x272ae467],cl
  405383:	xchg   ecx,eax
  405385:	push   ds
  405386:	mov    al,0x83
  405388:	(bad)  
  405389:	(bad)  
  40538a:	dec    DWORD PTR [ecx-0x45000001]
  405390:	(bad)  
  405391:	aam    0x5d
  405393:	pop    ds
  405394:	pop    edx
  405395:	push   es
  405396:	arpl   di,di
  405398:	add    BYTE PTR [eax],al
  40539a:	int3   
  40539b:	(bad)  
  40539c:	dec    esp
  40539e:	add    BYTE PTR [eax+0x14],bh
  4053a1:	(bad)  
  4053a2:	(bad)  
  4053a3:	xor    edx,esp
  4053a5:	and    al,0xd6
  4053a7:	cmp    edi,0xffffffff
  4053aa:	add    bh,bh
  4053ac:	add    DWORD PTR [eax],0xffffff83
  4053af:	ins    DWORD PTR es:[edi],dx
  4053b0:	inc    esp
  4053b1:	cdq    
  4053b2:	dec    esi
  4053b3:	cmp    eax,0x4d7f96
  4053b8:	inc    DWORD PTR [eax]
  4053ba:	mov    edi,edi
  4053bc:	(bad)  
  4053bd:	dec    esp
  4053bf:	jnp    0x405406
  4053c1:	sbb    ch,BYTE PTR [edx]
  4053c3:	mov    eax,ds:0xffe03393
  4053c8:	(bad)  
  4053c9:	(bad)  
  4053ca:	dec    esp
  4053cc:	(bad)  
  4053cd:	(bad)  
  4053ce:	(bad)  
  4053cf:	push   DWORD PTR [edx-0x18]
  4053d2:	sub    eax,0x96f14168
  4053d7:	inc    DWORD PTR [eax]
  4053d9:	add    BYTE PTR [ebx-0x100],al
  4053df:	shl    edx,cl
  4053e1:	inc    eax
  4053e2:	mov    edx,0x1e91a607
  4053e7:	add    DWORD PTR [eax],0xffffff89
  4053ea:	(bad)  
  4053eb:	(bad)  
  4053ec:	(bad)  
  4053ed:	(bad)  
  4053ee:	call   FWORD PTR [eax]
  4053f0:	add    ch,BYTE PTR [edx+0x32]
  4053f3:	add    eax,0xcc5a983d
  4053f8:	dec    DWORD PTR [ecx+0xff]
  4053fe:	push   DWORD PTR [esi]
  405400:	cmp    BYTE PTR [edi-0x16ff36f0],0x12
  405407:	inc    DWORD PTR [ebx-0x1]
  40540d:	dec    esp
  40540f:	out    0xbf,al
  405411:	jmp    0xb99f0919
  405416:	int3   
  405417:	(bad)  
  405418:	(bad)  
  405419:	(bad)  
  40541a:	inc    DWORD PTR [eax]
  40541c:	add    BYTE PTR [eax],al
  40541e:	add    BYTE PTR [edi-0x66eac7f9],ah
  405424:	jnp    0x4053b1
  405426:	sub    al,0x83
  405428:	add    DWORD PTR [ebx-0x7c0001],0xffffffff
  40542f:	cwde   
  405430:	mov    bl,0xf3
  405432:	mov    ch,0x3c
  405434:	push   ss
  405435:	hlt    
  405436:	lock (bad) 
  405438:	inc    DWORD PTR [ebx+0xff0000]
  40543e:	jmp    DWORD PTR [ebx+0xd4ba248]
  405444:	mov    edi,0xffb78a
  405449:	add    bh,bh
  40544b:	add    DWORD PTR [ebx+0x1db8ff83],0xffffff93
  405452:	add    BYTE PTR [di+0x5df2],dh
  405457:	inc    DWORD PTR [ebx-0x337d]
  40545d:	cmp    edi,0xffffffce
  405460:	xchg   BYTE PTR [ecx-0x7f0cc28c],cl
  405466:	lods   al,BYTE PTR ds:[esi]
  405467:	or     esp,0xffffffff
  40546a:	add    bh,bh
  40546c:	or     esp,0xffffffff
  40546f:	inc    esp
  405470:	push   eax
  405471:	dec    ebx
  405472:	sbb    eax,0x5f8835d0
  405477:	(bad)  
  405478:	inc    DWORD PTR [eax]
  40547a:	add    bh,bh
  40547c:	add    BYTE PTR [ebx-0xd585734],al
  405482:	loopne 0x4054b9
  405484:	mov    dh,0x37
  405486:	loop   0x405487
  405488:	dec    esp
  40548a:	dec    esp
  40548c:	add    DWORD PTR [ebx-0x12ced300],0xffffffc2
  405493:	adc    dl,dl
  405495:	xchg   ebp,eax
  405496:	inc    DWORD PTR ss:[eax]
  405499:	inc    DWORD PTR [eax]
  40549b:	add    BYTE PTR [ebx-0x4f750001],al
  4054a1:	aas    
  4054a2:	(bad)  
  4054a3:	sbb    esi,esi
  4054a5:	fdiv   DWORD PTR [ebp+0x0]
  4054a8:	inc    DWORD PTR [eax]
  4054aa:	cmp    edi,0xffffffcc
  4054ad:	add    BYTE PTR [ecx+0x5794f01b],cl
  4054b3:	cdq    
  4054b4:	push   cs
  4054b5:	cdq    
  4054b6:	retf   0x8900
  4054b9:	inc    DWORD PTR [eax]
  4054bb:	(bad)  
  4054bc:	inc    DWORD PTR [eax]
  4054be:	add    BYTE PTR [edi],dh
  4054c0:	mov    dh,0x54
  4054c2:	bound  edx,QWORD PTR [bp+di+0x2]
  4054c6:	dec    edx
  4054c7:	or     DWORD PTR [ecx-0x1],0x0
  4054ce:	add    ch,al
  4054d0:	adc    ah,dh
  4054d2:	adc    eax,0x87d5b372
  4054d7:	add    bh,bh
  4054d9:	add    bh,bh
  4054db:	inc    DWORD PTR [eax]
  4054dd:	inc    DWORD PTR [ebx+0x22296cb8]
  4054e3:	add    BYTE PTR [edi-0x62de],bh
  4054e9:	(bad)  
  4054ea:	inc    DWORD PTR [ebx+0x3a00ffff]
  4054f0:	inc    ebx
  4054f1:	ja     0x40555c
  4054f3:	push   ss
  4054f4:	test   al,0xa6
  4054f6:	js     0x4054f7
  4054f8:	mov    DWORD PTR [ebx+0x83ffff],eax
  4054fe:	add    BYTE PTR [eax-0x4d],bh
  405501:	adc    DWORD PTR [edi-0x1ba619eb],ebx
  405507:	(bad)  
  405508:	(bad)  
  405509:	inc    DWORD PTR [ebx-0x760001]
  40550f:	js     0x405581
  405511:	pop    ecx
  405512:	cwde   
  405513:	push   edx
  405514:	xor    al,0x9b
  405516:	mov    al,ds:0xff89ffff
  40551b:	add    BYTE PTR [eax],al
  40551d:	add    bh,bh
  40551f:	cwde   
  405520:	add    BYTE PTR [eax-0x4b],cl
  405523:	push   ebx
  405524:	mov    eax,0xff892536
  405529:	or     DWORD PTR [ecx+0xffff00],0x45
  405530:	xor    al,0xfb
  405532:	adc    bl,BYTE PTR [edi+0x34]
  405535:	cwde   
  405536:	push   ecx
  405537:	int3   
  405538:	add    bh,bh
  40553a:	add    BYTE PTR [ecx+0x4b83ff00],cl
  405540:	arpl   WORD PTR [ecx-0x54],cx
  405543:	add    DWORD PTR [ebx+0x7b],ebp
  405546:	jle    0x405514
  405548:	int3   
  405549:	or     DWORD PTR [ecx-0x1],0xffffffaa
  405550:	sbb    BYTE PTR [ecx],bl
  405552:	es inc edx
  405554:	sub    esp,DWORD PTR [esi]
  405556:	pop    ebp
  405557:	cmp    edi,0xffffffff
  40555a:	int3   
  40555b:	mov    esp,ecx
  40555d:	add    BYTE PTR [eax],al
  40555f:	pop    ss
  405560:	and    BYTE PTR [edx-0x29],al
  405563:	add    ch,BYTE PTR [eax+0x23]
  405566:	or     eax,0xffffffff
  40556b:	inc    DWORD PTR [eax]
  40556d:	inc    DWORD PTR [ebx+0xe62aa6a]
  405573:	xor    DWORD PTR [edx-0x14],eax
  405576:	and    eax,DWORD PTR [ebx+0x8389ff]
  40557c:	inc    DWORD PTR [eax]
  40557e:	push   DWORD PTR [ebx+0x5d]
  405581:	in     eax,0xc2
  405583:	cmp    DWORD PTR [ebx-0xffdd75],0xff00ff
  40558d:	add    bh,bh
  40558f:	jo     0x4055fc
  405591:	adc    esi,DWORD PTR [ecx]
  405593:	stos   BYTE PTR es:[edi],al
  405594:	inc    ebp
  405595:	pop    ss
  405596:	cdq    
  405597:	add    ah,cl
  405599:	int3   
  40559a:	or     DWORD PTR [ecx+0xdffff00],0x45
  4055a1:	push   ebp
  4055a2:	or     esp,DWORD PTR [eax+0xbaaca2]
  4055a8:	int3   
  4055a9:	(bad)  
  4055aa:	(bad)  
  4055ab:	inc    DWORD PTR [ebx-0x4eb60100]
  4055b1:	xor    eax,0xf1edffe7
  4055b6:	fiadd  WORD PTR [ebx+0xff00ff]
  4055bc:	add    BYTE PTR [eax],al
  4055be:	push   edi
  4055c0:	sbb    eax,0x18f38d57
  4055c5:	push   eax
  4055c6:	or     bh,bh
  4055c8:	mov    DWORD PTR [eax],eax
  4055ca:	inc    DWORD PTR [ebx+0x800ff83]
  4055d0:	cmp    al,0x84
  4055d2:	(bad)  
  4055d3:	mov    cl,0x6a
  4055d5:	mov    ah,0x8a
  4055d7:	dec    DWORD PTR [ecx-0x7d]
  4055dd:	mov    DWORD PTR [ebx+0x205d734c],eax
  4055e3:	pop    edx
  4055e4:	call   0xffc400a2
  4055e9:	cmp    edi,0xffffffff
  4055ec:	add    bh,bh
  4055ee:	mov    edx,ebx
  4055f0:	mov    ds:0x60b3e2a2,eax
  4055f5:	adc    eax,0x61
  4055fa:	(bad)  
  4055fb:	inc    DWORD PTR [eax]
  4055fd:	add    bh,bh
  4055ff:	les    esp,FWORD PTR [eax+0x50]
  405602:	xchg   esi,eax
  405603:	mov    BYTE PTR [edx*8-0x7cff002e],al
  40560a:	inc    DWORD PTR [eax]
  40560c:	add    ah,cl
  40560e:	push   ecx
  405610:	test   DWORD PTR [edx+0x4b],edx
  405613:	shr    BYTE PTR [edi],cl
  405615:	jmp    0x14055af
  40561a:	inc    DWORD PTR [eax]
  40561c:	dec    esp
  40561e:	push   DWORD PTR [edx+esi*8+0x1d]
  405622:	cld    
  405623:	das    
  405624:	mov    ecx,edx
  405626:	ja     0x4055ab
  405628:	add    BYTE PTR [eax],al
  40562a:	add    BYTE PTR [ebx+0x37ffffcc],al
  405630:	lods   eax,DWORD PTR ds:[esi]
  405631:	sti    
  405632:	xlat   BYTE PTR ds:[ebx]
  405633:	add    al,0x90
  405635:	addr16 cmp ecx,esp
  405638:	add    bh,bh
  40563a:	add    bh,bh
  40563c:	add    BYTE PTR [eax],al
  40563e:	call   FWORD PTR [ecx]
  405640:	mov    bh,0xe1
  405642:	pop    ebx
  405643:	rcl    edx,1
  405645:	aam    0x14
  405647:	(bad)  
  405648:	(bad)  
  405649:	inc    DWORD PTR [ebx+0xffff83]
  40564f:	scas   eax,DWORD PTR es:[edi]
  405650:	sub    DWORD PTR [esi],eax
  405652:	adc    BYTE PTR es:[edx],al
  405655:	pop    eax
  405656:	cmp    al,0xff
  405658:	add    BYTE PTR [ebx-0x7d],al
  40565e:	call   DWORD PTR [edx+0x22c5e4a8]
  405664:	inc    DWORD PTR [eax]
  405666:	(bad)  
  405667:	(bad)  
  405668:	(bad)  
  405669:	(bad)  
  40566a:	(bad)  
  40566b:	inc    DWORD PTR [eax]
  40566d:	add    DWORD PTR [eax],0xffffff89
  405670:	add    BYTE PTR [eax],al
  405672:	bound  eax,QWORD PTR [eax]
  405674:	call   FWORD PTR [ebx-0x44]
  405677:	sar    bh,cl
  405679:	xor    esi,0x0
  40567c:	add    BYTE PTR [esi],bh
  40567e:	in     al,0x16
  405680:	int3   
  405681:	(bad)  
  405682:	mov    edx,0xc8708300
  405687:	cwde   
  405688:	add    bh,bh
  40568a:	fdivp  st(7),st
  40568c:	add    BYTE PTR [esi+esi*4],cl
  40568f:	cmp    bh,0xcc
  405692:	push   edx
  405693:	add    BYTE PTR [ecx+0x47c60f],cl
  405699:	jmp    DWORD PTR [ebx-0x5e5f007d]
  40569f:	xchg   ecx,eax
  4056a0:	add    BYTE PTR [eax],al
  4056a2:	cmp    edi,edi
  4056a4:	mov    DWORD PTR [ecx],edi
  4056a6:	mov    eax,ds:0x36ffff91
  4056ab:	add    BYTE PTR [eax],al
  4056ad:	nop
  4056ae:	jns    0x40565f
  4056b0:	inc    DWORD PTR [eax]
  4056b2:	cli    
  4056b3:	add    BYTE PTR [eax],al
  4056b5:	dec    eax
  4056b6:	sbb    dh,BYTE PTR [ebx-0x77]
  4056b9:	call   FWORD PTR [edi+edi*8]
  4056bc:	jmp    DWORD PTR [eax-0x6]
  4056bf:	sbb    BYTE PTR [ecx-0x33ff9c01],cl
  4056c5:	neg    BYTE PTR [eax+edi*1+0xea00cc]
  4056cc:	(bad)  
  4056cd:	jns    0x4056c5
  4056cf:	pop    es
  4056d0:	(bad)  
  4056d1:	call   DWORD PTR [edx+0x0]
  4056d4:	add    BYTE PTR [edi+0x4a],bh
  4056d7:	push   0xff15ffff
  4056dc:	int3   
  4056dd:	dec    esi
  4056de:	pop    ecx
  4056df:	cmp    al,0xff
  4056e1:	push   ebx
  4056e3:	dec    DWORD PTR [ecx-0xf13ef5]
  4056e9:	inc    edx
  4056eb:	(bad)  
  4056ec:	call   DWORD PTR [ebx]
  4056ee:	xchg   ebp,eax
  4056ef:	das    
  4056f0:	cmp    edi,0x39
  4056f3:	cmp    edi,0xffffff93
  4056f6:	mov    edi,0x9200ffdb
  4056fb:	int3   
  4056fc:	inc    DWORD PTR [ebx-0x39]
  4056ff:	xchg   ebx,eax
  405700:	add    bh,bh
  405702:	mov    dh,0x83
  405704:	call   DWORD PTR [ebp+0x13]
  405707:	cmp    bh,0xff
  40570a:	mov    eax,0xcc9a0000
  40570f:	fwait
  405710:	inc    DWORD PTR [eax]
  405712:	inc    eax
  405713:	(bad)  
  405714:	jmp    DWORD PTR [edi-0x7c7c9e90]
  40571a:	inc    ecx
  40571b:	add    BYTE PTR [ecx+0x12a637],cl
  405721:	(bad)  
  405722:	jns    0x405724
  405724:	add    BYTE PTR [ebx+0x3dee],bh
  40572a:	pop    ebx
  40572b:	add    ah,cl
  40572d:	push   eax
  40572e:	lahf   
  40572f:	cmp    edi,edi
  405731:	add    BYTE PTR [eax],bl
  405733:	inc    DWORD PTR [eax]
  405735:	inc    edx
  405736:	ficomp DWORD PTR [edi+0x0]
  405739:	cmp    DWORD PTR [ecx],0x0
  40573c:	(bad)  
  40573d:	jmp    0x58:0x830035a2
  405744:	add    dl,bl
  405746:	bound  esi,QWORD PTR [esi-0x53ff01]
  40574c:	inc    DWORD PTR [ebp-0x92db]
  405752:	inc    ecx
  405753:	inc    DWORD PTR [eax]
  405755:	(bad)  
  405757:	inc    ecx
  405758:	inc    DWORD PTR [eax]
  40575a:	aad    0xff
  40575c:	dec    DWORD PTR [eax+0xd]
  40575f:	js     0x405761
  405761:	int3   
  405762:	fcos   
  405764:	int3   
  405765:	lods   eax,DWORD PTR ds:[esi]
  405766:	add    DWORD PTR [ecx],eax
  405768:	cmp    edi,0xffffffc4
  40576b:	(bad)  
  40576c:	dec    DWORD PTR [edx+esi*4]
  40576f:	mov    eax,DWORD PTR [ebx+0x67ff]
  405775:	push   edx
  405776:	cdq    
  405777:	es cmp edi,0xfffffff7
  40577b:	int3   
  40577c:	jmp    DWORD PTR [esi+edi*8]
  40577f:	in     eax,dx
  405780:	inc    DWORD PTR [ebx+0xfff89cb]
  405786:	pop    eax
  405787:	and    al,0xff
  405789:	add    BYTE PTR [edx],cl
  40578b:	mov    DWORD PTR [eax],eax
  40578d:	mov    esp,0xff00c951
  405792:	mov    bh,0xff
  405794:	jmp    FWORD PTR ds:0xff00b535
  40579a:	and    bh,bh
  40579c:	sub    edi,0xffffffc1
  40579f:	cmp    al,0x83
  4057a1:	mov    DWORD PTR [ebp+0x0],ebp
  4057a4:	xor    DWORD PTR [ebp+0x1a],0xffffff9a
  4057a8:	(bad)  
  4057a9:	push   DWORD PTR [esi-0x1]
  4057ac:	add    BYTE PTR [ecx],bl
  4057ae:	sub    BYTE PTR [edx-0x33c0ff01],ch
  4057b4:	add    al,dl
  4057b6:	push   ebp
  4057b7:	mov    ch,0x89
  4057b9:	xor    DWORD PTR [edx+0x230c00ff],0xffffffe0
  4057c0:	cmp    edi,0xffffffb1
  4057c3:	mov    DWORD PTR [ebx+0x8db0e3],eax
  4057c9:	dec    DWORD PTR [ebx+eax*4+0x0]
  4057cd:	or     ebx,DWORD PTR [ebx-0x46000028]
  4057d3:	add    DWORD PTR [eax],0x1b
  4057d6:	sub    eax,DWORD PTR [esi-0x847700]
  4057dc:	mov    DWORD PTR [edi+0xda68],edi
  4057e2:	fild   WORD PTR [eax]
  4057e4:	(bad)  
  4057e5:	out    dx,al
  4057e6:	sar    DWORD PTR [ebx+eax*4-0x7c002901],cl
  4057ed:	mov    ebx,0x83ff384c
  4057f2:	or     eax,0xe672ff83
  4057f7:	sahf   
  4057f8:	mov    DWORD PTR [eax],eax
  4057fa:	dec    edi
  4057fb:	cmp    edi,0x24
  4057fe:	mov    al,ds:0xb800ff11
  405803:	cmp    edi,0x7a
  405806:	call   0x35ca5780
  40580b:	add    BYTE PTR [ecx-0x7631e804],cl
  405811:	add    dl,cl
  405813:	inc    DWORD PTR [eax]
  405815:	rcl    BYTE PTR [ecx+0x79],cl
  405818:	add    bh,bh
  40581a:	push   ecx
  40581b:	inc    DWORD PTR [ebx-0xd5dc50]
  405821:	call   FWORD PTR [edi]
  405823:	dec    esp
  405825:	jnp    0x4057ce
  405827:	pop    ebx
  405828:	cmp    edi,0x5d
  40582b:	(bad)  
  40582c:	jmp    DWORD PTR [edx]
  40582e:	mov    DWORD PTR [ecx-0xfc7d00],0x2bc4c3ff
  405838:	(bad)  
  405839:	inc    DWORD PTR [ebx+eax*4]
  40583c:	sub    DWORD PTR [edi+0x5d],0x73
  405840:	add    BYTE PTR [ebx+0x72ffffa2],al
  405846:	jl     0x405846
  405848:	(bad)  
  405849:	call   DWORD PTR [ebp+0x0]
  40584c:	(bad)  
  40584d:	cmp    ch,cl
  40584f:	enter  0x83ff,0xe0
  405853:	cmp    edi,0x1e
  405856:	pushf  
  405857:	popa   
  405858:	cmp    edi,0xffffff91
  40585b:	add    bh,bh
  40585d:	mul    BYTE PTR [eax]
  40585f:	aaa    
  405860:	add    BYTE PTR [eax],al
  405862:	xlat   BYTE PTR ds:[ebx]
  405863:	inc    DWORD PTR [eax]
  405865:	in     eax,dx
  405866:	lahf   
  405867:	xchg   edi,eax
  405868:	add    DWORD PTR [eax],0xffffffb7
  40586b:	cmp    edi,0xffffffc4
  40586e:	jge    0x405881
  405870:	(bad)  
  405871:	dec    DWORD PTR [esi-0x33e0001]
  405877:	sub    bh,bh
  405879:	call   FWORD PTR [eax+eax*1]
  40587c:	dec    DWORD PTR [esi+ecx*4+0x55ff004e]
  405883:	(bad)  
  405884:	jmp    FWORD PTR [ebx+0x60]
  405887:	clc    
  405888:	add    bh,bh
  40588a:	xlat   BYTE PTR ds:[ebx]
  40588b:	add    bh,bh
  40588d:	ficomp DWORD PTR [eax+ebx*4-0x1]
  405891:	add    ah,ch
  405893:	dec    DWORD PTR [ecx-0xdfc96c]
  405899:	mov    DWORD PTR [ecx-0x135d7c34],ecx
  40589f:	retf   
  4058a0:	inc    DWORD PTR [eax]
  4058a2:	push   es
  4058a3:	add    DWORD PTR [eax],0xd
  4058a6:	sti    
  4058a7:	dec    ecx
  4058a8:	add    BYTE PTR [eax],al
  4058aa:	cmp    edi,edi
  4058ac:	(bad)  
  4058ad:	mov    ebx,0xff00ee8d
  4058b2:	rol    DWORD PTR [eax],1
  4058b4:	add    BYTE PTR [esi-0xf5dd],cl
  4058ba:	inc    DWORD PTR [eax]
  4058bc:	push   DWORD PTR [eax-0x1e]
  4058bf:	mov    dh,0xff
  4058c1:	add    al,dh
  4058c3:	add    DWORD PTR [eax],0xffffff81
  4058c6:	dec    edx
  4058c7:	mov    edi,?
  4058c9:	mov    DWORD PTR [eax+0x7f8b8983],esp
  4058cf:	test   eax,0xffeb00ff
  4058d4:	add    BYTE PTR [ebx],dl
  4058d6:	pop    eax
  4058d7:	add    edi,edi
  4058d9:	add    BYTE PTR [ebp-0x2b820000],dh
  4058df:	inc    ebx
  4058e0:	inc    DWORD PTR [ebx+0xf0000d6]
  4058e6:	add    ah,BYTE PTR [esi]
  4058e8:	(bad)  
  4058e9:	call   esi
  4058eb:	dec    DWORD PTR [ecx-0xe9a90a]
  4058f1:	mov    DWORD PTR [eax],esp
  4058f3:	inc    DWORD PTR [eax]
  4058f5:	push   0xffdb0b
  4058fa:	push   es
  4058fb:	inc    DWORD PTR [ebx-0xb11baa]
  405901:	call   FWORD PTR [ebx]
  405903:	add    BYTE PTR [eax],al
  405905:	loop   0x405982
  405907:	hlt    
  405908:	inc    DWORD PTR [eax]
  40590a:	cmc    
  40590b:	(bad)  
  40590c:	call   DWORD PTR [ebp+0xccec05]
  405912:	bound  eax,QWORD PTR [ebx-0x28012300]
  405918:	(bad)  
  405919:	(bad)  
  40591a:	mov    ecx,0x735c8989
  40591f:	pop    DWORD PTR [eax]
  405921:	jmp    FWORD PTR [esi]
  405923:	add    BYTE PTR [eax],al
  405925:	mov    ds:0x1f47,al
  40592a:	jns    0x4058af
  40592c:	call   DWORD PTR [ebp-0x9ac1]
  405932:	ret    
  405933:	inc    DWORD PTR [eax]
  405935:	mov    BYTE PTR [esi],ah
  405937:	pop    edx
  405938:	inc    DWORD PTR [eax]
  40593a:	sbb    eax,0xf6bcffff
  40593f:	add    BYTE PTR es:[eax],al
  405942:	sti    
  405943:	(bad)  
  405944:	call   FWORD PTR [eax+ebx*4-0x6d000053]
  40594b:	add    BYTE PTR [eax],al
  40594d:	sbb    esp,esp
  40594f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405950:	add    bh,bh
  405952:	inc    edi
  405953:	(bad)  
  405954:	inc    eax
  405956:	push   eax
  405957:	cmc    
  405958:	add    bh,bh
  40595a:	xor    al,0xff
  40595c:	add    BYTE PTR [edx],dh
  40595e:	adc    dl,al
  405960:	add    DWORD PTR [eax],0x5d
  405963:	(bad)  
  405964:	inc    DWORD PTR ds:0x832912
  40596a:	or     edi,edi
  40596c:	or     DWORD PTR [ebx+0x60],0xffffffde
  405970:	(bad)  
  405971:	inc    DWORD PTR [esi]
  405973:	int3   
  405974:	int3   
  405975:	scas   eax,DWORD PTR es:[edi]
  405976:	out    0x99,al
  405978:	dec    esp
  40597a:	mov    ebx,0xfa67ffff
  40597f:	jae    0x405980
  405981:	inc    edx
  405983:	dec    DWORD PTR [ecx-0x7b6ba7]
  405989:	add    bh,ah
  40598b:	dec    DWORD PTR [ecx-0x398979]
  405991:	jmp    DWORD PTR [ebx]
  405993:	add    ah,cl
  405995:	jb     0x4059ed
  405997:	jmp    0x8a315a9b
  40599c:	inc    DWORD PTR [edi-0xf541]
  4059a2:	inc    ebp
  4059a3:	(bad)  
  4059a4:	jmp    FWORD PTR [edi+0x59]
  4059a7:	add    al,0x0
  4059a9:	sub    DWORD PTR [eax-0x77],0xffffff89
  4059ad:	ficom  WORD PTR [edi+0x5c008968]
  4059b3:	(bad)  
  4059b4:	jmp    DWORD PTR [edi]
  4059b6:	jecxz  0x405a16
  4059b8:	inc    DWORD PTR [eax]
  4059ba:	add    BYTE PTR [eax],0xff
  4059bd:	xchg   BYTE PTR [edx+0x6aff83b7],dl
  4059c3:	add    bh,bh
  4059c5:	outs   dx,BYTE PTR ds:[esi]
  4059c6:	stos   BYTE PTR es:[edi],al
  4059c7:	dec    ecx
  4059c8:	inc    DWORD PTR [eax]
  4059ca:	test   DWORD PTR [ebx-0x527c3600],eax
  4059d0:	add    BYTE PTR [eax],al
  4059d2:	push   ecx
  4059d3:	add    DWORD PTR [ebx-0xc98b5b],0xffffffff
  4059da:	or     DWORD PTR [eax],eax
  4059dc:	push   DWORD PTR [edi+ecx*1+0x3f]
  4059e0:	(bad)  
  4059e1:	push   DWORD PTR [eax-0x7d]
  4059e4:	jmp    DWORD PTR [edx-0x15]
  4059e7:	jp     0x4059e8
  4059e9:	int3   
  4059ea:	fdivp  st(7),st
  4059ec:	(bad)  
  4059ed:	mov    ecx,0xe5a1
  4059f2:	add    BYTE PTR fs:[eax],al
  4059f5:	push   ebp
  4059f6:	and    al,0x30
  4059f8:	(bad)  
  4059f9:	jmp    DWORD PTR [eax-0x7d]
  4059fc:	int3   
  4059fd:	sub    eax,0xffffe6
  405a02:	or     BYTE PTR [ebx+0x268ac7ff],al
  405a08:	add    BYTE PTR [eax],al
  405a0a:	ja     0x405a0b
  405a0c:	push   DWORD PTR [edi-0xd]
  405a0f:	imul   edi,edi,0xccfffe00
  405a15:	clc    
  405a16:	xor    BYTE PTR [edx],bh
  405a18:	mov    DWORD PTR [eax],eax
  405a1a:	xor    esp,ecx
  405a1c:	int3   
  405a1d:	rol    DWORD PTR [edx+0x61],cl
  405a20:	(bad)  
  405a21:	dec    esp
  405a23:	inc    DWORD PTR [ebx-0xa0d298]
  405a29:	add    BYTE PTR [eax],bl
  405a2b:	(bad)  
  405a2c:	inc    DWORD PTR [eax]
  405a2e:	mov    dh,bh
  405a30:	(bad)  
  405a31:	(bad)  
  405a32:	jg     0x405a33
  405a34:	inc    DWORD PTR [eax-0x45]
  405a37:	jmp    0x4059c2
  405a39:	add    DWORD PTR [eax-0x1],0xffffff89
  405a3d:	jnp    0x4059f7
  405a3f:	cwde   
  405a40:	mov    DWORD PTR [eax],eax
  405a42:	mov    al,ds:0xf98cc00
  405a47:	jle    0x405a49
  405a49:	push   edi
  405a4b:	add    bh,bh
  405a4d:	retf   
  405a4e:	jge    0x4059fb
  405a50:	(bad)  
  405a51:	jmp    DWORD PTR [ecx]
  405a53:	add    BYTE PTR [eax],al
  405a55:	in     al,0x74
  405a57:	scas   al,BYTE PTR es:[edi]
  405a58:	add    BYTE PTR [eax],al
  405a5a:	pop    edi
  405a5b:	dec    DWORD PTR [ecx-0x25a55c]
  405a61:	add    cl,dh
  405a63:	add    BYTE PTR [eax],al
  405a65:	sti    
  405a66:	pop    edi
  405a67:	popa   
  405a68:	inc    DWORD PTR [eax]
  405a6a:	xchg   ebx,eax
  405a6b:	add    BYTE PTR [ebx-0x3320da47],al
  405a71:	add    DWORD PTR [ecx+0x0],0xffffff83
  405a75:	mov    eax,0xffff21fd
  405a7a:	xor    bh,bh
  405a7c:	add    dh,ah
  405a7e:	aam    0x1b
  405a80:	int3   
  405a81:	(bad)  
  405a82:	inc    BYTE PTR [eax]
  405a84:	add    BYTE PTR [ebp+0xff562d],al
  405a8a:	out    dx,al
  405a8b:	(bad)  
  405a8c:	jmp    FWORD PTR [ebx+0x54]
  405a8f:	fs int3 
  405a91:	add    BYTE PTR [eax-0x63c47d00],al
  405a97:	push   eax
  405a98:	(bad)  
  405a99:	dec    DWORD PTR [edi]
  405a9b:	(bad)  
  405a9c:	jmp    DWORD PTR [esi+0x5d]
  405a9f:	push   eax
  405aa0:	add    bh,bh
  405aa2:	mov    ah,0xff
  405aa4:	sub    DWORD PTR [edi-0x7cff68b1],0x43
  405aab:	cmp    edi,0xfffffffb
  405aae:	mov    edx,0xd6ffffd5
  405ab3:	add    bh,bh
  405ab5:	mov    DWORD PTR [ecx],ebx
  405ab7:	ror    esp,cl
  405ab9:	(bad)  
  405aba:	jmp    0x405abb
  405abc:	dec    DWORD PTR [esi+0x59]
  405abf:	out    dx,eax
  405ac0:	inc    DWORD PTR [eax]
  405ac2:	test   DWORD PTR [ebx-0x134a2101],0xff18ff00
  405acc:	mov    DWORD PTR [esp+edi*8-0x30],edi
  405ad0:	add    BYTE PTR [ecx-0x2633ff3f],cl
  405ad6:	popf   
  405ad7:	xor    eax,0xcc9383ff
  405adc:	and    edx,0x6d
  405adf:	xor    edi,edi
  405ae1:	add    BYTE PTR [ebx+0x3e63ffff],dh
  405ae7:	cdq    
  405ae8:	int3   
  405ae9:	add    DWORD PTR [esi+0x0],0xffffffff
  405aed:	xor    al,0x9b
  405aef:	sub    bh,bh
  405af1:	add    BYTE PTR [edx-0x7d],dl
  405af4:	add    BYTE PTR [ebp+0x55],al
  405af7:	sub    eax,0xccfcff00
  405afc:	add    BYTE PTR [ebx+ebp*2-0x78],dh
  405b00:	add    BYTE PTR [ebx-0x59ff7cf5],al
  405b06:	xor    ah,BYTE PTR [edi]
  405b08:	add    BYTE PTR [eax],al
  405b0a:	mov    ?,edi
  405b0c:	call   FWORD PTR [esi+ecx*1-0x44007636]
  405b13:	add    bh,bh
  405b15:	xor    BYTE PTR [ebx-0x4a],dl
  405b1b:	(bad)  
  405b1c:	(bad)  
  405b1d:	jns    0x405ac1
  405b1f:	adc    BYTE PTR [ecx-0xe801],cl
  405b25:	xor    ecx,DWORD PTR [edx+ecx*1-0x34]
  405b29:	add    BYTE PTR [ebx-0x1],cl
  405b2c:	add    BYTE PTR [eax-0xff2b84],ch
  405b32:	int3   
  405b33:	(bad)  
  405b34:	jmp    FWORD PTR [edx]
  405b36:	xchg   ebp,eax
  405b37:	pop    edx
  405b38:	(bad)  
  405b39:	call   FWORD PTR [esi+0x0]
  405b3c:	add    cl,al
  405b3e:	adc    BYTE PTR [ebp-0x7c0100],0xff
  405b45:	mov    bl,0xcd
  405b47:	hlt    
  405b48:	(bad)  
  405b49:	jmp    DWORD PTR [edi-0x6a59337d]
  405b4f:	adc    BYTE PTR [eax],al
  405b51:	push   DWORD PTR [ebx+0x0]
  405b54:	dec    eax
  405b56:	push   0x2
  405b58:	(bad)  
  405b59:	call   FWORD PTR [edi+edi*8+0x0]
  405b5d:	sub    ch,BYTE PTR [esi+0x6d00ff02]
  405b63:	(bad)  
  405b64:	(bad)  
  405b65:	cmp    al,0xd7
  405b67:	(bad)  
  405b69:	push   esi
  405b6b:	add    BYTE PTR [ecx-0x7698352e],cl
  405b71:	mov    DWORD PTR [edi],esp
  405b73:	(bad)  
  405b74:	call   FWORD PTR [ecx]
  405b76:	xchg   edx,eax
  405b77:	inc    ecx
  405b78:	cmp    edi,0x6c
  405b7b:	(bad)  
  405b7c:	(bad)  
  405b7d:	fiadd  DWORD PTR ds:0x40000c8
  405b83:	inc    DWORD PTR [eax]
  405b85:	sub    ebp,DWORD PTR [ebx-0x3f0000c7]
  405b8b:	(bad)  
  405b8c:	dec    ecx
  405b8e:	dec    edx
  405b8f:	retf   
  405b90:	(bad)  
  405b91:	jmp    FWORD PTR [edi-0x7d]
  405b94:	int3   
  405b95:	loopne 0x405b34
  405b97:	sub    al,BYTE PTR [eax]
  405b99:	jmp    FWORD PTR [eax-0x1]
  405b9c:	(bad)  
  405b9d:	call   0x13f98ef
  405ba2:	fs (bad) 
  405ba4:	dec    DWORD PTR [eax-0x76354f]
  405baa:	fs (bad) 
  405bac:	jmp    DWORD PTR [edx]
  405bae:	adc    ch,0x83
  405bb1:	add    cl,cl
  405bb3:	inc    DWORD PTR [eax]
  405bb5:	mov    cl,0x9
  405bb7:	and    cl,ah
  405bb9:	add    BYTE PTR [ebx],al
  405bbb:	or     esp,0x34
  405bbe:	push   esp
  405bbf:	mov    cl,0xff
  405bc1:	int3   
  405bc2:	xchg   ebx,eax
  405bc3:	(bad)  
  405bc4:	(bad)  
  405bc5:	mov    ebp,0xffff08f3
  405bca:	sub    al,0xff
  405bcc:	jmp    FWORD PTR [eax-0x7c6f47]
  405bd2:	or     edi,edi
  405bd4:	dec    DWORD PTR [ebx]
  405bd6:	in     eax,0xbf
  405bd8:	int3   
  405bd9:	push   DWORD PTR [esi-0x43dc0034]
  405bdf:	std    
  405be0:	(bad)  
  405be1:	dec    DWORD PTR [ecx]
  405be3:	add    BYTE PTR [eax],al
  405be5:	shl    BYTE PTR ds:0xbdff8343,0xff
  405bec:	dec    DWORD PTR [eax]
  405bee:	fisub  DWORD PTR [ebx+0x0]
  405bf1:	jmp    FWORD PTR [eax]
  405bf3:	add    ah,cl
  405bf5:	adc    eax,0xff000838
  405bfa:	or     eax,0x1325ffff
  405bff:	loop   0x405c00
  405c01:	add    BYTE PTR [edx],dh
  405c03:	(bad)  
  405c04:	dec    ebx
  405c06:	js     0x405bf2
  405c08:	cmp    edi,0x63
  405c0b:	cmp    edi,0x9
  405c0e:	pop    ss
  405c0f:	adc    edi,edi
  405c11:	jmp    edx
  405c13:	dec    esp
  405c15:	mov    ch,dl
  405c17:	mov    dh,0x0
  405c19:	call   DWORD PTR [esi-0x1]
  405c1c:	add    BYTE PTR [edx-0x1ef],bl
  405c22:	mov    esi,0x6152ffff
  405c27:	cmp    edi,edi
  405c29:	add    BYTE PTR [edi],al
  405c2b:	add    bh,bh
  405c2d:	sub    al,0xe5
  405c2f:	or     DWORD PTR [eax],eax
  405c31:	mov    DWORD PTR [ebx],ebp
  405c33:	(bad)  
  405c34:	call   eax
  405c36:	xchg   edx,eax
  405c37:	stos   BYTE PTR es:[edi],al
  405c38:	add    BYTE PTR [eax],al
  405c3a:	xchg   ecx,eax
  405c3b:	cmp    edi,0xffffffd7
  405c3e:	in     eax,0xa9
  405c40:	or     esp,0x65
  405c43:	int3   
  405c44:	call   FWORD PTR [edi]
  405c46:	(bad)  
  405c47:	and    DWORD PTR [eax],eax
  405c49:	(bad)  
  405c4a:	aas    
  405c4b:	int3   
  405c4c:	push   edi
  405c4e:	inc    ebp
  405c4f:	cmp    eax,DWORD PTR [eax]
  405c51:	push   DWORD PTR [eax-0x1]
  405c54:	add    BYTE PTR ds:0xff8a83,bh
  405c5a:	lods   eax,DWORD PTR ds:[esi]
  405c5b:	inc    DWORD PTR [ebx-0x38b22d]
  405c61:	inc    esp
  405c63:	(bad)  
  405c64:	call   DWORD PTR [edx+0xfffb08]
  405c6a:	cmc    
  405c6b:	mov    edi,edi
  405c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c6e:	xchg   edi,eax
  405c6f:	dec    edi
  405c70:	(bad)  
  405c71:	jmp    DWORD PTR [edx-0x1]
  405c74:	call   DWORD PTR [ecx+0x3a]
  405c77:	add    BYTE PTR es:[ebx+0x72ffff09],al
  405c7e:	dec    edx
  405c7f:	jmp    0x89f3e584
  405c84:	add    BYTE PTR [edi],dh
  405c86:	stos   BYTE PTR es:[edi],al
  405c87:	mov    ds:0xffd20083,eax
  405c8c:	(bad)  
  405c8d:	stc    
  405c8e:	push   esp
  405c8f:	test   eax,0x60ff83
  405c94:	jmp    FWORD PTR [eax+eiz*1+0x3783ffaa]
  405c9b:	add    BYTE PTR [eax],al
  405c9d:	sbb    DWORD PTR [eax],esp
  405c9f:	repnz (bad) 
  405ca1:	push   eax
  405ca3:	add    BYTE PTR [eax],al
  405ca5:	jmp    0xd5713
  405caa:	and    bh,bh
  405cac:	call   DWORD PTR [esi]
  405cae:	push   ds
  405caf:	dec    esp
  405cb0:	or     DWORD PTR [ecx-0x15007cb1],0xfffffff4
  405cb7:	fadd   QWORD PTR [ebx+0x2ff]
  405cbd:	sub    DWORD PTR [ecx],edx
  405cbf:	pop    eax
  405cc0:	int3   
  405cc1:	(bad)  
  405cc2:	out    dx,eax
  405cc3:	(bad)  
  405cc4:	call   ebp
  405cc6:	push   ebx
  405cc7:	rol    BYTE PTR [eax],1
  405cc9:	(bad)  
  405cca:	jl     0x405c55
  405ccc:	add    BYTE PTR [edi+0x6b],ch
  405ccf:	adc    edi,edi
  405cd1:	push   DWORD PTR [edx]
  405cd3:	add    BYTE PTR [ecx-0xe6ac94],cl
  405cd9:	xor    DWORD PTR ds:0x13b6ff89,0xffffffce
  405ce0:	(bad)  
  405ce1:	inc    DWORD PTR [ebp+0x3157ffff]
  405ce7:	pop    esi
  405ce8:	(bad)  
  405ce9:	jmp    DWORD PTR [ebx-0x2f507c01]
  405cef:	into   
  405cf0:	int3   
  405cf1:	add    dh,dl
  405cf3:	inc    DWORD PTR [eax]
  405cf5:	jp     0x405cd8
  405cf7:	mov    ch,0xff
  405cf9:	add    BYTE PTR [ecx-0x1],al
  405cfc:	adc    edi,0xffffffa1
  405cff:	loop   0x405d00
  405d01:	and    DWORD PTR [ebx-0x2dab0000],0x71
  405d08:	(bad)  
  405d09:	dec    DWORD PTR [edi-0x63050001]
  405d0f:	pop    edi
  405d10:	add    BYTE PTR [eax],al
  405d12:	inc    edi
  405d13:	add    BYTE PTR [ecx-0x3c867d],cl
  405d19:	add    BYTE PTR ds:0xb798ffff,ch
  405d1f:	(bad)  
  405d20:	dec    esp
  405d22:	adc    eax,0x8e2cffcc
  405d27:	mov    esi,0xffd7ffff
  405d2c:	xor    esi,0x59
  405d2f:	jg     0x405cb4
  405d31:	add    BYTE PTR [eax-0x515c3377],ah
  405d37:	mov    al,0x83
  405d39:	xor    DWORD PTR [edx-0x550d0000],0x44
  405d40:	int3   
  405d41:	add    bl,al
  405d43:	add    BYTE PTR [eax],al
  405d45:	sub    DWORD PTR [ecx+0x43],0xff67ffff
  405d4c:	call   DWORD PTR [esi]
  405d4e:	ins    BYTE PTR es:[edi],dx
  405d4f:	mov    eax,ds:0x6e8383
  405d54:	adc    DWORD PTR ds:0x83009801,0x15
  405d5b:	add    bh,bh
  405d5d:	inc    esi
  405d5e:	ret    
  405d5f:	out    dx,eax
  405d60:	add    BYTE PTR [ebx+0x1800ff01],al
  405d66:	add    al,0x8e
  405d68:	(bad)  
  405d69:	push   DWORD PTR [ebx-0x1]
  405d6c:	jmp    DWORD PTR [ebp+0x48]
  405d6f:	cdq    
  405d70:	inc    DWORD PTR [ebx-0x4433009b]
  405d76:	loop   0x405dba
  405d78:	(bad)  
  405d79:	call   eax
  405d7b:	add    bh,bh
  405d7d:	xor    al,0xd8
  405d7f:	adc    bh,bh
  405d81:	add    ch,ah
  405d83:	cmp    edi,0xffffff86
  405d86:	jb     0x405d66
  405d88:	inc    DWORD PTR [eax]
  405d8a:	js     0x405d0f
  405d8c:	add    BYTE PTR [ebx],ch
  405d8e:	addr16 mov edi,?
  405d91:	dec    DWORD PTR [ebp-0x1]
  405d94:	add    BYTE PTR [ebx],dl
  405d96:	iret   
  405d97:	std    
  405d98:	add    ah,cl
  405d9a:	jno    0x405d9c
  405d9c:	int3   
  405d9d:	mov    ds:0x8971ed,al
  405da2:	loopne 0x405da3
  405da4:	mov    DWORD PTR [edx],eax
  405da6:	mov    ebp,gs
  405da8:	(bad)  
  405da9:	push   DWORD PTR [ecx]
  405dab:	add    BYTE PTR [ebx-0x6ac632],al
  405db1:	call   DWORD PTR [ecx+0x541d83ff]
  405db7:	push   0x892dff00
  405dbc:	jmp    DWORD PTR [ebp+0x1d]
  405dbf:	push   es
  405dc0:	dec    DWORD PTR [ecx-0x157c7609]
  405dc6:	mov    al,0xf6
  405dc8:	inc    DWORD PTR [ebx+0x6f83ffaa]
  405dce:	adc    esi,DWORD PTR [ecx-0x1]
  405dd1:	xor    esp,0xffffffff
  405dd4:	add    BYTE PTR [ebx+0x69],bh
  405dd7:	add    eax,DWORD PTR [ebx-0x7c7301]
  405ddd:	dec    eax
  405dde:	push   0xc8ffff26
  405de3:	add    bh,bh
  405de5:	sbb    dh,BYTE PTR [esi-0x77]
  405de8:	inc    DWORD PTR [eax]
  405dea:	dec    ah
  405dec:	sbb    eax,0x7b
  405def:	mov    DWORD PTR fs:[eax],eax
  405df2:	xchg   edi,eax
  405df3:	cmp    edi,0xffffffb6
  405df6:	(bad)  
  405df8:	add    bh,bh
  405dfa:	(bad)  
  405dfb:	inc    DWORD PTR [eax]
  405dfd:	ss int 0x98
  405e00:	(bad)  
  405e01:	dec    DWORD PTR [esp+ecx*8+0xbf058ff]
  405e08:	add    BYTE PTR [ebx+0x2bffccdd],al
  405e0e:	js     0x405e59
  405e10:	mov    edi,edi
  405e12:	inc    ebx
  405e13:	(bad)  
  405e14:	inc    ebp
  405e16:	xchg   ecx,eax
  405e17:	cmp    edi,0xccff7300
  405e1d:	push   esi
  405e1e:	jl     0x405e2d
  405e20:	or     DWORD PTR [ecx-0x53337cd7],0x1a
  405e27:	cmp    bh,0x0
  405e2a:	xor    al,0x0
  405e2c:	and    DWORD PTR [esi-0x55b2],0x20
  405e33:	(bad)  
  405e34:	inc    DWORD PTR [esi-0x2c]
  405e37:	add    eax,0x9a00ff
  405e3c:	sbb    DWORD PTR [ebx+0x29],0x39
  405e40:	(bad)  
  405e41:	inc    DWORD PTR [ebx]
  405e43:	dec    DWORD PTR [ecx-0x7a7e89]
  405e49:	dec    DWORD PTR [ebx+0x0]
  405e4c:	dec    DWORD PTR [edx-0x1246]
  405e52:	pop    eax
  405e53:	add    bh,bh
  405e55:	jb     0x405de8
  405e57:	pop    ebp
  405e58:	inc    DWORD PTR [ebx+0x3383fff2]
  405e5e:	lods   ax,WORD PTR ds:[esi]
  405e60:	(bad)  
  405e61:	push   DWORD PTR [edi+edi*8]
  405e64:	add    BYTE PTR [ecx],bh
  405e66:	add    ecx,esp
  405e68:	inc    DWORD PTR [eax]
  405e6a:	leave  
  405e6b:	add    ah,cl
  405e6d:	adc    dh,BYTE PTR [ebx-0x42]
  405e70:	(bad)  
  405e71:	(bad)  
  405e72:	mov    edx,0xf35d8383
  405e77:	xchg   edi,eax
  405e78:	inc    DWORD PTR [eax]
  405e7a:	cmp    eax,DWORD PTR [eax]
  405e7c:	add    BYTE PTR [eax+0xffc350],dh
  405e82:	push   ecx
  405e83:	(bad)  
  405e84:	inc    DWORD PTR [ecx]
  405e86:	bswap  ecx
  405e88:	inc    DWORD PTR [eax]
  405e8a:	push   ss
  405e8b:	add    BYTE PTR [ecx-0x338faff9],cl
  405e91:	push   ebx
  405e93:	int3   
  405e94:	inc    ecx
  405e96:	push   ss
  405e97:	sar    edi,1
  405e99:	jmp    DWORD PTR [ebx-0x1]
  405e9c:	or     DWORD PTR [edi],0xffffffe9
  405e9f:	and    ecx,esp
  405ea1:	dec    DWORD PTR [ebx-0x376a767d]
  405ea7:	xor    eax,0x41ff00
  405eac:	or     DWORD PTR [esi],0xffffffb7
  405eaf:	inc    edx
  405eb0:	or     DWORD PTR [ecx+0xc838944],0x78
  405eb7:	(bad)  
  405eb8:	inc    DWORD PTR [ebx-0x5330015]
  405ebe:	leave  
  405ebf:	idiv   edi
  405ec1:	dec    DWORD PTR [edi-0x78fa0001]
  405ec7:	push   ds
  405ec8:	mov    DWORD PTR [eax],eax
  405eca:	sbb    edi,edi
  405ecc:	add    bh,bh
  405ece:	xor    ecx,DWORD PTR [edi]
  405ed0:	add    DWORD PTR [eax],0x27
  405ed3:	dec    esp
  405ed5:	cmp    eax,0xccdd13
  405eda:	cmp    bh,bh
  405edc:	dec    DWORD PTR [esi]
  405ede:	hlt    
  405edf:	adc    BYTE PTR [eax],al
  405ee1:	add    BYTE PTR [eax+eax*1+0x56bd95ff],bh
  405ee8:	add    bh,bh
  405eea:	fcmove st,st(4)
  405eec:	jmp    DWORD PTR [eax]
  405eee:	daa    
  405eef:	mov    eax,ds:0xffe90000
  405ef4:	int3   
  405ef5:	inc    esi
  405ef6:	pop    ebx
  405ef7:	push   edi
  405ef8:	add    bh,bh
  405efa:	or     BYTE PTR [eax],al
  405efc:	add    BYTE PTR [ebx],bl
  405efe:	daa    
  405eff:	in     al,0xff
  405f01:	dec    DWORD PTR [ecx]
  405f03:	inc    DWORD PTR [ebx-0x335227f0]
  405f09:	mov    DWORD PTR [esi],ebp
  405f0b:	int3   
  405f0c:	int3   
  405f0d:	hlt    
  405f0e:	adc    al,BYTE PTR cs:[eax]
  405f11:	add    BYTE PTR [edx],ch
  405f13:	add    BYTE PTR [eax],al
  405f15:	sbb    esi,DWORD PTR [edi-0x6b33765f]
  405f1b:	(bad)  
  405f1c:	dec    DWORD PTR [ecx-0x77]
  405f1f:	pop    eax
  405f20:	inc    DWORD PTR [eax]
  405f22:	and    eax,0x2bd500ff
  405f27:	jae    0x405f28
  405f29:	add    BYTE PTR [ebp-0x1],cl
  405f2c:	add    ch,bh
  405f2e:	fdiv   DWORD PTR [eax+0x7083ff]
  405f34:	(bad)  
  405f35:	cmp    edi,ebx
  405f37:	inc    ebp
  405f38:	(bad)  
  405f39:	(bad)  
  405f3a:	cmp    edi,edi
  405f3c:	(bad)  
  405f3d:	cmp    al,0xa4
  405f3f:	sar    bh,0xff
  405f42:	scas   al,BYTE PTR es:[edi]
  405f43:	add    BYTE PTR [eax],al
  405f45:	out    0xd4,al
  405f47:	and    eax,0xfaffff
  405f4c:	xor    DWORD PTR [edi-0x22d3],0x5e
  405f53:	add    bh,bh
  405f55:	ret    
  405f56:	fistp  DWORD PTR [eax-0x76550100]
  405f5c:	(bad)  
  405f5d:	cld    
  405f5e:	adc    ebx,ebp
  405f60:	add    ah,cl
  405f62:	add    BYTE PTR gs:[eax],al
  405f65:	test   al,0xf5
  405f67:	sub    bh,bh
  405f69:	adc    DWORD PTR [ecx],0xffffffff
  405f6c:	jmp    DWORD PTR [ebx-0xff70ab]
  405f72:	push   cs
  405f73:	(bad)  
  405f74:	jmp    FWORD PTR [ecx+0x83f303]
  405f7a:	inc    eax
  405f7b:	(bad)  
  405f7c:	call   DWORD PTR [ebp+0x56]
  405f7f:	cli    
  405f80:	int3   
  405f81:	cmp    DWORD PTR [ebx],0xffffffff
  405f84:	dec    DWORD PTR [edi]
  405f86:	add    al,BYTE PTR [esi]
  405f88:	int3   
  405f89:	int3   
  405f8a:	dec    ecx
  405f8b:	(bad)  
  405f8c:	(bad)  
  405f8d:	jnp    0x405fe3
  405f8f:	pop    es
  405f90:	add    DWORD PTR [eax],0x7d
  405f93:	inc    DWORD PTR [eax]
  405f95:	jecxz  0x405f8b
  405f97:	in     al,dx
  405f98:	(bad)  
  405f99:	jmp    FWORD PTR [edx+0x39ccff89]
  405f9f:	mov    ch,0xff
  405fa1:	call   FWORD PTR [edi+edi*8+0x168a0100]
  405fa8:	dec    esp
  405faa:	leave  
  405fab:	inc    DWORD PTR [eax]
  405fad:	call   0xff60:0xffffbda0
  405fb4:	mov    DWORD PTR [ebx],esi
  405fb6:	test   esp,eax
  405fb8:	add    BYTE PTR [ebx+0xfff00a8],al
  405fbe:	pop    esp
  405fbf:	outs   dx,DWORD PTR ds:[esi]
  405fc0:	add    DWORD PTR [eax],0x4c
  405fc3:	add    BYTE PTR [ebx-0xe46ca4],al
  405fc9:	add    BYTE PTR [edx-0x77],bh
  405fcc:	mov    DWORD PTR [ebp-0x76c946],ebp
  405fd2:	ja     0x405fd3
  405fd4:	add    DWORD PTR [eax+0x8306cc],0xffffffa4
  405fdb:	inc    DWORD PTR [ebx-0x7760c6]
  405fe1:	jmp    esp
  405fe3:	(bad)  
  405fe4:	(bad)  
  405fe5:	mov    esp,0xffff1159
  405fea:	jns    0x96a57779
  405ff0:	int3   
  405ff1:	jmp    FWORD PTR [ebp+0x778effff]
  405ff7:	das    
  405ff8:	add    bh,bh
  405ffa:	out    0x89,al
  405ffc:	add    BYTE PTR [esi-0x62],bh
  405fff:	push   0xffffffff
  406001:	dec    DWORD PTR [edi+edi*8-0x55058501]
  406008:	(bad)  
  406009:	call   FWORD PTR [ebx+eax*4+0x7857d400]
  406010:	inc    DWORD PTR [eax]
  406012:	xchg   ecx,eax
  406013:	(bad)  
  406014:	dec    DWORD PTR [ebx]
  406016:	inc    eax
  406017:	add    BYTE PTR [eax],al
  406019:	jmp    FWORD PTR [esi+0x0]
  40601c:	mov    DWORD PTR [edx-0x46],ebx
  40601f:	push   ss
  406020:	add    BYTE PTR [eax],al
  406022:	jmp    0x406023
  406024:	add    BYTE PTR [edi+0x2b],cl
  406027:	imul   ecx,DWORD PTR [ecx-0xff1401],0xff143db5
  406031:	xor    ebx,0xffffffff
  406034:	int3   
  406035:	fidivr WORD PTR [edi]
  406037:	fild   DWORD PTR [eax]
  406039:	add    BYTE PTR [ebx-0x7d],dl
  40603c:	add    al,bh
  40603e:	push   ds
  40603f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406040:	add    bh,bh
  406042:	sar    edi,0x0
  406045:	jmp    0xffb0:0xff007b17
  40604c:	add    BYTE PTR [ebx+0x833fdf],dh
  406052:	xlat   BYTE PTR ds:[ebx]
  406053:	inc    DWORD PTR [eax]
  406055:	inc    ebx
  406056:	shl    BYTE PTR [ecx+ecx*4],0xff
  40605a:	or     al,0xff
  40605c:	push   DWORD PTR [esi]
  40605e:	mov    ebp,0x43ffffb4
  406063:	(bad)  
  406064:	jmp    DWORD PTR [esi-0x7c7c710b]
  40606a:	(bad)  
  40606b:	inc    DWORD PTR [eax]
  40606d:	mov    ah,0x42
  40606f:	test   al,0xff
  406071:	jne    0x40605a
  406073:	les    eax,FWORD PTR [ebx-0xcc7c01]
  406079:	fistp  WORD PTR [edx]
  40607b:	inc    ebx
  40607c:	add    BYTE PTR [ebx-0x6aff4900],al
  406082:	(bad)  
  406083:	add    DWORD PTR es:[ebx-0x5d76f877],0x42
  40608b:	(bad)  
  40608c:	dec    esp
  40608e:	add    BYTE PTR [ebx+0x45c2c3ff],dl
  406094:	inc    DWORD PTR [eax]
  406096:	call   FWORD PTR [edx-0x6acdeb01]
  40609c:	add    DWORD PTR [ebx+0x51835283],0x10
  4060a3:	or     DWORD PTR [eax],eax
  4060a5:	inc    DWORD PTR [eax]
  4060a7:	inc    edi
  4060a8:	call   FWORD PTR [edi+0x1d]
  4060ab:	pop    ss
  4060ac:	add    BYTE PTR [eax],al
  4060ae:	(bad)  
  4060af:	jnp    0x406034
  4060b1:	(bad)  
  4060b2:	mov    edi,0xff83ffcc
  4060b7:	cmp    BYTE PTR [ebx-0x7cdfbbe8],al
  4060bd:	add    bh,bh
  4060bf:	add    esp,ecx
  4060c1:	pop    es
  4060c2:	in     al,0x19
  4060c4:	add    bh,bh
  4060c6:	(bad)  
  4060c7:	mov    esp,0xea20c289
  4060cc:	inc    DWORD PTR [ebx+0x76ffe4ff]
  4060d2:	dec    ecx
  4060d3:	cmp    eax,0x55cc8900
  4060d8:	call   FWORD PTR [ebx-0x41]
  4060db:	je     0x406060
  4060dd:	(bad)  
  4060de:	push   DWORD PTR [edi+edi*8-0x6b]
  4060e2:	or     BYTE PTR [ebp-0x7d],dl
  4060e5:	(bad)  
  4060e6:	dec    DWORD PTR [ebp+0x0]
  4060e9:	cdq    
  4060ea:	mov    ah,0x39
  4060ec:	(bad)  
  4060ed:	(bad)  
  4060ee:	push   ebx
  4060f0:	add    BYTE PTR [ebx],cl
  4060f2:	cmc    
  4060f3:	sub    al,0xff
  4060f5:	add    bh,bh
  4060f7:	js     0x4060f8
  4060f9:	in     al,dx
  4060fa:	cmp    al,0xdc
  4060fc:	(bad)  
  4060fd:	inc    DWORD PTR [ebx-0x713d76eb]
  406103:	mov    dh,0xff
  406105:	or     DWORD PTR [ecx-0x60b300df],0x5
  40610c:	inc    DWORD PTR [ebx-0x5200567d]
  406112:	jmp    0x4060a2
  406114:	add    ah,cl
  406116:	add    esp,0x0
  406119:	push   ss
  40611a:	cwde   
  40611b:	xchg   esp,eax
  40611c:	int3   
  40611d:	add    DWORD PTR [ebx+0x552083eb],0x40
  406124:	add    bh,bh
  406126:	inc    ebp
  406128:	add    dh,al
  40612a:	rol    bh,0x0
  40612d:	cmp    edi,0xffffffaf
  406130:	and    DWORD PTR ds:0xffff5e78,0xffffffff
  406137:	loope  0x406139
  406139:	and    ebp,ecx
  40613b:	push   0x43ffffff
  406140:	call   eax
  406142:	mov    edi,0x8300cc
  406147:	mov    ds:0xccf56d83,al
  40614c:	int3   
  40614d:	add    bh,bh
  40614f:	stc    
  406150:	sub    DWORD PTR [edx],0x75
  406153:	xlat   BYTE PTR ds:[ebx]
  406154:	add    DWORD PTR [eax],0xffffff83
  406157:	(bad)  
  406158:	jmp    FWORD PTR [ebx+edi*8-0x27]
  40615c:	(bad)  
  40615d:	(bad)  
  40615e:	jmp    FWORD PTR [edi-0x7d]
  406161:	jl     0x40611d
  406163:	hlt    
  406164:	add    bh,bh
  406166:	add    BYTE PTR [esi],dh
  406168:	inc    DWORD PTR [edi+ebp*8-0x330000cc]
  40616f:	(bad)  
  406170:	call   FWORD PTR [esi-0x1822]
  406176:	jmp    FWORD PTR [edx+0x62ddf2ff]
  40617c:	int3   
  40617d:	inc    DWORD PTR [eax]
  40617f:	ja     0x406180
  406181:	xchg   esi,eax
  406182:	or     DWORD PTR [edi+0x15ff00ff],edi
  406188:	sub    DWORD PTR [edi+0x5],0x52
  40618c:	add    BYTE PTR [eax],al
  40618e:	push   DWORD PTR ds:0x4212c6ff
  406194:	(bad)  
  406195:	(bad)  
  406196:	jmp    eax
  406198:	mov    DWORD PTR [ecx+0xff9a40],esi
  40619e:	add    bl,bl
  4061a0:	add    BYTE PTR ds:0xccb6e9,dl
  4061a6:	push   DWORD PTR [eax+0x0]
  4061a9:	sub    eax,0xff83f7d3
  4061ae:	and    DWORD PTR [ebx],0xffffffff
  4061b1:	in     al,dx
  4061b2:	push   edi
  4061b3:	ins    DWORD PTR es:[edi],dx
  4061b4:	add    DWORD PTR [eax],0xffffffff
  4061b7:	mov    eax,0x3fc41589
  4061bc:	add    bh,bh
  4061be:	add    BYTE PTR [edx+0x12f01183],bl
  4061c4:	inc    DWORD PTR [ebx-0x24ff3701]
  4061ca:	xor    eax,0xf2
  4061cf:	pop    ebx
  4061d0:	(bad)  
  4061d1:	js     0x40617b
  4061d3:	call   0xf6ff:0x6983ff89
  4061da:	mov    eax,ebx
  4061dc:	add    bh,bh
  4061de:	cmp    DWORD PTR [ecx-0x34],0xffffffdd
  4061e2:	and    BYTE PTR [edi],bl
  4061e4:	inc    DWORD PTR [eax]
  4061e6:	int3   
  4061e7:	les    eax,FWORD PTR [eax]
  4061e9:	mov    edi,0x83ff8534
  4061ee:	call   esp
  4061f0:	int3   
  4061f1:	popa   
  4061f2:	xchg   ebp,eax
  4061f3:	je     0x4061f4
  4061f5:	add    DWORD PTR [eax],0xffffffe7
  4061f8:	call   FWORD PTR ds:0x5a2e
  4061fe:	push   DWORD PTR [esi]
  406200:	int3   
  406201:	push   eax
  406202:	mov    ah,BYTE PTR [eax+0x0]
  406205:	add    BYTE PTR [ebx+0x3e9eff1b],al
  40620b:	inc    DWORD PTR [ebx-0x7c2e7c01]
  406211:	inc    edi
  406212:	(bad)  
  406213:	pop    ecx
  406214:	mov    edi,edi
  406216:	inc    DWORD PTR [ebp-0x34]
  406219:	dec    esp
  40621a:	pop    edi
  40621b:	pusha  
  40621c:	add    BYTE PTR [ebx+0x3889b1cc],al
  406222:	and    esp,DWORD PTR [edi+edi*8]
  406225:	mov    DWORD PTR [eax],eax
  406227:	clc    
  406228:	dec    eax
  40622a:	retf   
  40622b:	sub    BYTE PTR [ebx-0xb5767d],al
  406231:	ret    
  406232:	adc    al,0x57
  406234:	(bad)  
  406235:	(bad)  
  406236:	inc    DWORD PTR [esi-0x1]
  406239:	sti    
  40623a:	mov    DWORD PTR [edx-0x1],ebp
  40623d:	add    BYTE PTR [ecx+0x45da00bc],cl
  406243:	jle    0x406245
  406245:	add    bh,bh
  406247:	jg     0x406248
  406249:	xchg   ecx,eax
  40624a:	jns    0x4061e7
  40624c:	cmp    edi,0x0
  40624f:	stos   BYTE PTR es:[edi],al
  406250:	int3   
  406251:	cld    
  406252:	pop    ebp
  406253:	sbb    bh,bh
  406255:	int3   
  406256:	inc    DWORD PTR [ebp-0x209bce01]
  40625c:	inc    DWORD PTR [eax]
  40625e:	add    BYTE PTR [ecx],ch
  406260:	dec    DWORD PTR [esi-0xffb373]
  406266:	push   DWORD PTR [ebp-0x1]
  406269:	dec    edx
  40626a:	stc    
  40626b:	mov    cl,0x0
  40626d:	add    DWORD PTR [eax],0xffffffa9
  406270:	(bad)  
  406271:	jns    0x406267
  406273:	in     al,dx
  406274:	(bad)  
  406275:	(bad)  
  406276:	push   DWORD PTR [eax]
  406278:	add    cl,bl
  40627a:	xor    bh,dl
  40627c:	(bad)  
  40627d:	(bad)  
  40627e:	(bad)  
  40627f:	js     0x406281
  406281:	and    bh,BYTE PTR [eax]
  406283:	loope  0x406208
  406285:	dec    DWORD PTR [ecx-0x77aa3397]
  40628b:	dec    ecx
  40628c:	inc    DWORD PTR [eax]
  40628e:	add    DWORD PTR [ecx],0xffffffcc
  406291:	shl    edi,1
  406293:	and    bh,bh
  406295:	dec    esp
  406297:	cmp    eax,0xccd5a8cc
  40629c:	int3   
  40629d:	mov    esp,ecx
  40629f:	jmp    0xb93cbca3
  4062a4:	inc    DWORD PTR [eax]
  4062a6:	add    dh,ah
  4062a8:	dec    eax
  4062aa:	loopne 0x4062c2
  4062ac:	(bad)  
  4062ad:	inc    DWORD PTR [eax]
  4062af:	jg     0x4062b1
  4062b1:	mov    edx,0x83ffb152
  4062b6:	int3   
  4062b7:	mov    es,WORD PTR [ebx-0x7c52a9fd]
  4062bd:	(bad)  
  4062be:	(bad)  
  4062bf:	cli    
  4062c0:	(bad)  
  4062c1:	clc    
  4062c2:	ins    BYTE PTR es:[edi],dx
  4062c3:	outs   dx,DWORD PTR ds:[esi]
  4062c4:	inc    DWORD PTR [eax]
  4062c6:	int3   
  4062c7:	inc    ecx
  4062c8:	inc    edi
  4062ca:	mov    ax,0x83ff
  4062ce:	add    dh,dh
  4062d0:	add    bh,cl
  4062d2:	loope  0x4062a7
  4062d4:	add    DWORD PTR [eax],0xffffff83
  4062d7:	mov    esi,0xcf083d00
  4062dc:	add    BYTE PTR [ecx+0x5acc7bcc],cl
  4062e2:	xor    esp,ecx
  4062e4:	add    BYTE PTR [eax],al
  4062e6:	add    BYTE PTR [esi-0x1],bh
  4062e9:	imul   DWORD PTR [edi]
  4062eb:	sbb    al,0x0
  4062ed:	inc    DWORD PTR [eax]
  4062ef:	and    al,0x0
  4062f1:	dec    esi
  4062f2:	jp     0x40634f
  4062f4:	dec    esp
  4062f6:	add    al,dl
  4062f8:	sub    DWORD PTR [edx],0x3f
  4062fb:	dec    eax
  4062fc:	add    ah,cl
  4062fe:	add    BYTE PTR [esi-0x4ea5d47d],dh
  406304:	or     DWORD PTR [ecx+0x10ccf8ff],0x7d
  40630b:	fdiv   st(7),st
  40630d:	dec    esp
  40630f:	sub    edi,edi
  406311:	mov    eax,ds:0x83ff0151
  406316:	dec    DWORD PTR [edi]
  406318:	dec    ebp
  40631a:	ret    0xffb6
  40631d:	add    BYTE PTR [eax],al
  40631f:	aaa    
  406320:	dec    DWORD PTR [ebp+0x837e06]
  406326:	int3   
  406327:	mov    DWORD PTR [ebx-0x5f743],eax
  40632d:	inc    DWORD PTR [eax]
  40632f:	jmp    0xff:0xc2ca8b83
  406336:	jmp    DWORD PTR [ecx+0x612784ff]
  40633c:	cmp    edi,0xffffffff
  40633f:	test   eax,0x20d2f5cc
  406344:	add    bh,bh
  406346:	push   ebx
  406348:	cmp    esp,0xffffffe6
  40634b:	xchg   BYTE PTR [eax],al
  40634d:	(bad)  
  40634e:	jmp    DWORD PTR [edx]
  406350:	add    BYTE PTR [edi+ebx*8-0x7c000035],ch
  406357:	out    dx,eax
  406358:	(bad)  
  406359:	mov    esi,0xcc00dfb9
  40635e:	jmp    FWORD PTR [eax+eax*1-0x9ab58c]
  406365:	cmp    edi,0xffffffaa
  406368:	add    cl,ah
  40636a:	inc    eax
  40636b:	mov    dl,0xff
  40636d:	inc    DWORD PTR [eax]
  40636f:	mov    ebx,0x8b078a00
  406374:	(bad)  
  406375:	(bad)  
  406376:	jmp    FWORD PTR [edx+0x0]
  406379:	xor    ecx,DWORD PTR [ebx]
  40637b:	daa    
  40637c:	add    bh,bh
  40637e:	add    BYTE PTR [ebx+0x0],bh
  406381:	sahf   
  406382:	out    dx,al
  406383:	add    edi,edi
  406385:	int3   
  406386:	inc    DWORD PTR [eax]
  406388:	call   DWORD PTR [edx]
  40638a:	scas   al,BYTE PTR es:[edi]
  40638b:	imul   ecx,esp,0x89c9ff89
  406391:	push   edx
  406392:	push   esi
  406393:	mov    ecx,0xdffffff
  406398:	inc    DWORD PTR [edi-0x76ff0e05]
  40639e:	push   DWORD PTR [eax-0x1]
  4063a1:	in     eax,0xbc
  4063a3:	sub    bh,bh
  4063a5:	int3   
  4063a6:	add    bl,ah
  4063a8:	add    BYTE PTR [edi-0x9ddb],ah
  4063ae:	jmp    FWORD PTR [esi]
  4063b0:	mov    eax,edi
  4063b2:	xchg   edi,eax
  4063b3:	cwde   
  4063b4:	inc    DWORD PTR [ebx+0x58001f00]
  4063ba:	out    0xba,al
  4063bc:	add    BYTE PTR [ebx+0x610038ff],al
  4063c2:	addr16 sbb edi,edi
  4063c5:	(bad)  
  4063c6:	call   ebx
  4063c8:	dec    DWORD PTR [ebx+0x17]
  4063cb:	mov    bh,0x83
  4063cd:	inc    DWORD PTR [eax]
  4063cf:	fild   DWORD PTR [eax]
  4063d1:	or     edx,ecx
  4063d3:	pop    ebp
  4063d4:	(bad)  
  4063d5:	(bad)  
  4063d6:	call   edi
  4063d8:	inc    DWORD PTR [ecx-0x15f1]
  4063de:	add    BYTE PTR [edx-0x1],cl
  4063e1:	dec    esp
  4063e2:	add    BYTE PTR fs:[eax],0x83
  4063e6:	push   DWORD PTR [esi+0x0]
  4063e9:	adc    ebp,esi
  4063eb:	and    al,BYTE PTR [eax]
  4063ed:	add    BYTE PTR [eax],al
  4063ef:	outs   dx,BYTE PTR ds:[esi]
  4063f0:	inc    DWORD PTR [ecx+0x899e4c]
  4063f6:	sbb    DWORD PTR [edx-0x7a396801],0xffffff89
  4063fd:	(bad)  
  4063fe:	jmp    DWORD PTR [edi]
  406400:	add    BYTE PTR [esi+0xffeb02],dl
  406406:	add    bl,dh
  406408:	add    BYTE PTR [esp+ebp*1],dh
  40640b:	mov    eax,ds:0xe0000ff
  406410:	(bad)  
  406411:	jge    0x4063bd
  406413:	push   eax
  406414:	add    BYTE PTR [ebx-0x49009301],al
  40641a:	repz mov esi,0x6c00ffcc
  406420:	int3   
  406421:	dec    edx
  406422:	inc    eax
  406423:	or     al,0x0
  406425:	add    DWORD PTR [ebx-0x7fc3ffd6],0x71
  40642c:	(bad)  
  40642d:	(bad)  
  40642e:	dec    DWORD PTR [edx]
  406430:	call   ebx
  406432:	pop    eax
  406433:	pop    esi
  406434:	(bad)  
  406435:	dec    esp
  406437:	jg     0x406439
  406439:	sub    al,ch
  40643b:	ins    BYTE PTR es:[edi],dx
  40643c:	(bad)  
  40643d:	inc    DWORD PTR [eax]
  40643f:	sar    edi,1
  406441:	or     eax,0xff836f89
  406446:	jmp    DWORD PTR [ebp-0x88cbd00]
  40644c:	add    BYTE PTR [ebx-0x4500fe01],al
  406452:	data16 aad 0x83
  406455:	inc    DWORD PTR [eax]
  406457:	mov    ebp,0x6b11fe00
  40645c:	int3   
  40645d:	or     esp,0x2f
  406460:	add    dl,bl
  406462:	scas   eax,DWORD PTR es:[edi]
  406463:	adc    edi,edi
  406465:	mov    edi,edi
  406467:	push   es
  406468:	sub    DWORD PTR [edx+0xc1f7],0xffffffff
  40646f:	pop    ecx
  406470:	push   DWORD PTR [eax]
  406472:	adc    eax,0xff89df
  406477:	aam    0xcc
  406479:	in     eax,0xe3
  40647b:	int    0xff
  40647d:	inc    DWORD PTR [eax]
  40647f:	xor    eax,0x650a95cc
  406484:	add    BYTE PTR [ecx+0x36006600],cl
  40648a:	adc    eax,0xffffffe5
  40648f:	add    ecx,esp
  406491:	aam    0xdf
  406493:	or     edi,edi
  406495:	add    DWORD PTR [ebx+0x39f2ffe8],0xfffffff1
  40649c:	(bad)  
  40649d:	dec    DWORD PTR [ecx+0x77a7cc61]
  4064a3:	xchg   edi,eax
  4064a4:	(bad)  
  4064a5:	dec    esp
  4064a7:	stos   BYTE PTR es:[edi],al
  4064a8:	int3   
  4064a9:	es dec esp
  4064ab:	test   edi,edi
  4064ad:	(bad)  
  4064ae:	inc    DWORD PTR [ebx+0x0]
  4064b1:	test   DWORD PTR [ebx-0x1c],edx
  4064b4:	inc    DWORD PTR [eax]
  4064b6:	mov    DWORD PTR [esi],edx
  4064b8:	(bad)  
  4064b9:	cmp    ecx,esp
  4064bb:	jno    0x4064bd
  4064bd:	mov    edi,edi
  4064bf:	bound  eax,QWORD PTR [ebx-0x62a94e]
  4064c5:	dec    DWORD PTR [ecx+0x1a2d009e]
  4064cb:	xchg   ecx,eax
  4064cc:	add    BYTE PTR [ebx-0x200ee01],al
  4064d2:	lea    ebp,[esi+0x63ff8989]
  4064d8:	add    ah,bh
  4064da:	in     eax,0x8a
  4064dc:	(bad)  
  4064dd:	(bad)  
  4064de:	(bad)  
  4064df:	call   0xefd4b9e4
  4064e4:	inc    DWORD PTR [ebx-0x64ff4077]
  4064ea:	xchg   edi,eax
  4064eb:	and    al,0xff
  4064ed:	mov    edi,edi
  4064ef:	ins    DWORD PTR es:[edi],dx
  4064f0:	call   esp
  4064f2:	jae    0x4064e0
  4064f4:	add    ah,cl
  4064f6:	cmp    DWORD PTR [ebx+0x449d2e00],0xffffffff
  4064fd:	add    BYTE PTR [ebx+0x22c3ffa9],al
  406503:	push   esi
  406504:	inc    DWORD PTR [ebx+0x35ff69ff]
  40650a:	mov    ah,0xd7
  40650c:	dec    esp
  40650e:	add    BYTE PTR [ebx+0x0],cl
  406511:	fst    QWORD PTR [edi]
  406513:	and    eax,DWORD PTR [eax]
  406515:	add    BYTE PTR [eax],al
  406517:	and    BYTE PTR [eax],al
  406519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651a:	push   ebx
  40651b:	mov    ebx,0xb38389cc
  406520:	add    DWORD PTR [esp+edi*8],0x79
  406524:	inc    DWORD PTR [eax]
  406526:	push   DWORD PTR [ecx]
  406528:	dec    DWORD PTR ds:0xff8018
  40652e:	add    BYTE PTR [eax],ch
  406530:	inc    DWORD PTR [ebx-0x7cf01b]
  406536:	add    BYTE PTR [edi],dh
  406538:	dec    DWORD PTR [ebp+ebx*4-0x48]
  40653f:	pop    eax
  406540:	add    BYTE PTR [ebp+0xccebd5],dh
  406546:	add    BYTE PTR [eax-0x1],bh
  406549:	loop   0x4064d5
  40654b:	add    cl,BYTE PTR [ecx-0x757c77]
  406551:	inc    edx
  406552:	xchg   esp,eax
  406553:	xchg   bh,bh
  406555:	inc    DWORD PTR [eax]
  406557:	test   DWORD PTR [ebx-0xfa9285],eax
  40655d:	(bad)  
  40655e:	push   edx
  406560:	and    DWORD PTR [eax-0x2f],0xffffffff
  406564:	add    ah,cl
  406566:	call   FWORD PTR [eax-0x1]
  406569:	pushf  
  40656a:	fnstcw WORD PTR [edi-0x1]
  40656d:	add    BYTE PTR [ebx+0x7b72ff70],al
  406573:	dec    edx
  406574:	add    bh,bh
  406576:	add    ah,ch
  406578:	push   DWORD PTR [ebx-0x60]
  40657b:	test   esp,ecx
  40657d:	inc    DWORD PTR [ebx+0x7fcacc68]
  406583:	gs mov edi,edi
  406586:	mov    ecx,edi
  406588:	add    BYTE PTR [esi+eax*1],dl
  40658b:	(bad)  
  40658c:	inc    DWORD PTR [eax]
  40658e:	mov    DWORD PTR [edx],esi
  406590:	add    BYTE PTR [ecx],cl
  406592:	out    0xc8,eax
  406594:	add    bh,bh
  406596:	sub    DWORD PTR [edx-0x1],0x4a
  40659a:	mov    esi,0xffff8389
  40659f:	mov    esp,0x6f87d1cc
  4065a4:	mov    edi,edi
  4065a6:	add    BYTE PTR [eax-0xbcdf47d],bl
  4065ac:	dec    DWORD PTR [ecx+0x20ff2983]
  4065b2:	jp     0x40655e
  4065b4:	(bad)  
  4065b5:	inc    DWORD PTR [eax]
  4065b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b8:	mov    DWORD PTR [ebp-0x25],edx
  4065bb:	xlat   BYTE PTR ds:[ebx]
  4065bc:	(bad)  
  4065bd:	(bad)  
  4065be:	jmp    FWORD PTR [ebp+0x3b21d800]
  4065c4:	dec    esp
  4065c6:	add    BYTE PTR [edi+0x13b29500],bh
  4065cc:	(bad)  
  4065cd:	inc    DWORD PTR [ebx+0x6000016]
  4065d3:	aas    
  4065d4:	(bad)  
  4065d5:	inc    DWORD PTR [ebx-0xf4800fc]
  4065db:	clc    
  4065dc:	int3   
  4065dd:	cmp    edi,0x21
  4065e0:	call   edx
  4065e2:	test   ecx,esi
  4065e4:	mov    edi,edi
  4065e6:	call   DWORD PTR [edi-0x4b92a77]
  4065ec:	mov    DWORD PTR [eax],eax
  4065ee:	add    BYTE PTR [ecx+0x20a63fff],ah
  4065f4:	inc    DWORD PTR [eax]
  4065f6:	inc    DWORD PTR [edi+edi*8]
  4065f9:	gs test al,0x4d
  4065fc:	inc    DWORD PTR [eax]
  4065fe:	cmp    DWORD PTR [ecx-0x34],0xffffff81
  406602:	jmp    0x40666c
  406604:	inc    DWORD PTR [eax]
  406606:	mov    DWORD PTR [eax+0x5cee3000],ecx
  40660c:	inc    DWORD PTR [eax]
  40660e:	dec    DWORD PTR [edx]
  406610:	add    BYTE PTR [edi-0xffb781],ah
  406616:	inc    DWORD PTR [edi]
  406618:	call   DWORD PTR [edi+0x2b86]
  40661e:	int3   
  40661f:	ret    0x7683
  406622:	xchg   esi,eax
  406623:	pop    ebx
  406624:	(bad)  
  406625:	(bad)  
  406626:	dec    esp
  406628:	adc    DWORD PTR [eax],0xffffff9a
  40662b:	mov    ebp,0xd483ffff
  406630:	inc    ecx
  406632:	and    bh,BYTE PTR [ebx]
  406634:	inc    DWORD PTR [eax]
  406636:	mov    edx,ebx
  406638:	call   FWORD PTR [edx-0x10]
  40663b:	inc    edi
  40663c:	add    BYTE PTR [ebx+0x500e7ff],al
  406642:	dec    ecx
  406643:	mov    al,0xff
  406645:	(bad)  
  406646:	(bad)  
  406647:	out    dx,eax
  406648:	jmp    DWORD PTR [ecx-0x25]
  40664b:	xchg   ecx,eax
  40664c:	dec    esp
  40664e:	add    BYTE PTR [edi+edi*8-0x76e51372],dh
  406655:	(bad)  
  406656:	call   FWORD PTR [ebx-0x1]
  406659:	pop    ss
  40665a:	mov    dl,0xd4
  40665c:	cmp    edi,0xffffffff
  40665f:	pop    ds
  406660:	add    DWORD PTR [esi+0x7a],0xffffffc1
  406664:	inc    DWORD PTR [ebx-0x22ff3100]
  40666a:	push   esi
  40666b:	xor    al,0xff
  40666d:	add    BYTE PTR [eax],al
  40666f:	std    
  406670:	dec    ebx
  406672:	and    DWORD PTR [edi+edi*8],eax
  406675:	inc    DWORD PTR [ebx+0x6f71839f]
  40667b:	add    al,BYTE PTR [ebx+0x38ffff]
  406681:	and    BYTE PTR [edx-0xff3305],dh
  406687:	and    eax,0x3a7ef8ff
  40668c:	(bad)  
  40668d:	(bad)  
  40668e:	inc    DWORD PTR [edi+edi*8+0x33]
  406692:	sti    
  406693:	pop    ebx
  406694:	cmp    edi,0x0
  406697:	and    al,0xff
  406699:	test   DWORD PTR [eax+0x89cc4e],esi
  40669f:	push   0xffffffff
  4066a1:	ror    bh,1
  4066a3:	rol    DWORD PTR [ebx-0x76137d00],cl
  4066a9:	aaa    
  4066aa:	inc    ebp
  4066ab:	dec    edi
  4066ac:	or     esp,0xffffffcc
  4066af:	add    eax,0x62a9fa83
  4066b4:	(bad)  
  4066b5:	inc    DWORD PTR [eax]
  4066b7:	lahf   
  4066b8:	add    BYTE PTR [ebx-0x21],dh
  4066bb:	loop   0x406646
  4066bd:	add    BYTE PTR [ecx+0xdd90079],cl
  4066c3:	or     eax,0x330089ff
  4066c8:	adc    DWORD PTR [ebp-0x76decd],0xffffffff
  4066cf:	jmp    0x12712fd3
  4066d4:	add    bh,bh
  4066d6:	push   DWORD PTR [edi+edi*8+0xcb4e73]
  4066dd:	dec    DWORD PTR [ecx+0x26f7ff0b]
  4066e3:	pop    edx
  4066e4:	dec    esp
  4066e6:	add    BYTE PTR [edi+edi*8-0x10],cl
  4066ea:	scas   eax,DWORD PTR es:[edi]
  4066eb:	and    al,BYTE PTR [eax]
  4066ed:	dec    esp
  4066ef:	push   ds
  4066f0:	mov    DWORD PTR [esp+esi*1+0x63],ecx
  4066f4:	(bad)  
  4066f5:	inc    DWORD PTR [eax]
  4066f7:	ds int3 
  4066f9:	and    ebx,DWORD PTR [ecx]
  4066fb:	ja     0x4066fc
  4066fd:	dec    esp
  4066ff:	pop    ss
  406700:	add    DWORD PTR [esi+0xff6cd3],0xffffffff
  406707:	lds    ecx,FWORD PTR [ecx-0x83597c]
  40670d:	int3   
  40670e:	dec    DWORD PTR [edx+0x592c1c83]
  406714:	add    BYTE PTR [eax],al
  406716:	int3   
  406717:	(bad)  
  406718:	int3   
  406719:	mov    cl,0x88
  40671b:	(bad)  
  40671d:	(bad)  
  40671e:	call   FWORD PTR [ecx-0x77]
  406721:	inc    ecx
  406722:	inc    eax
  406723:	imul   edi,edi,0xff75ff00
  406729:	inc    ebp
  40672a:	sbb    ebx,DWORD PTR [esi]
  40672c:	add    DWORD PTR [eax],0x0
  40672f:	cmp    eax,0x56260fff
  406734:	(bad)  
  406735:	dec    esp
  406737:	push   esp
  406738:	(bad)  
  406739:	mov    edi,0x89ff9ee9
  40673e:	mov    ecx,eax
  406740:	cmp    DWORD PTR [edx-0x3360],0xffffffff
  406747:	(bad)  
  406748:	call   DWORD PTR [eax-0xffdab9]
  40674e:	add    BYTE PTR [eax+eax*1+0x3a],al
  406752:	jge    0x4067c0
  406754:	add    BYTE PTR [eax],al
  406756:	add    cl,cl
  406758:	mov    eax,ebp
  40675a:	inc    esp
  40675b:	inc    edi
  40675c:	(bad)  
  40675d:	(bad)  
  40675e:	inc    DWORD PTR [esi+0x0]
  406761:	adc    edx,edi
  406763:	push   cs
  406764:	cmp    edi,0xffffffff
  406767:	sbb    edi,edi
  406769:	aaa    
  40676a:	repnz lods eax,DWORD PTR ds:[esi]
  40676c:	add    bh,bh
  40676e:	sbb    DWORD PTR [ebx+0x7c23a900],0xffffffff
  406775:	int3   
  406776:	add    BYTE PTR [edi+edi*8],ah
  406779:	xchg   ebp,edi
  40677b:	call   0x2dc3eb7f
  406780:	call   FWORD PTR [ebx+0x4c]
  406783:	stc    
  406784:	add    bh,bh
  406786:	add    BYTE PTR [esi+0x6df86189],al
  40678c:	add    bh,bh
  40678e:	add    dl,dh
  406790:	(bad)  
  406791:	cmp    eax,DWORD PTR [ecx+edx*1]
  406794:	add    bh,bh
  406796:	push   esi
  406798:	jmp    FWORD PTR [ebx-0xffb80e]
  40679e:	cmp    edi,0xffffff83
  4067a1:	mov    ebp,0xff83d430
  4067a6:	jmp    FWORD PTR [ecx+0x0]
  4067a9:	in     eax,0x35
  4067ab:	adc    edi,edi
  4067ad:	add    ah,cl
  4067af:	icebp  
  4067b0:	add    DWORD PTR [esi-0x1a5f],0xffffffff
  4067b7:	mov    ds:0x70ac6a00,al
  4067bc:	(bad)  
  4067bd:	(bad)  
  4067be:	call   FWORD PTR [ecx]
  4067c0:	add    BYTE PTR [ebp-0x1d],ch
  4067c3:	mov    edx,0x38ff8983
  4067c8:	inc    DWORD PTR [edx-0xe621]
  4067ce:	sub    ecx,0xffffffff
  4067d1:	mov    ds:0xffff4429,eax
  4067d6:	add    BYTE PTR [ecx],al
  4067d8:	add    bl,bl
  4067da:	push   esp
  4067db:	mov    ds:0xa1000089,eax
  4067e0:	call   FWORD PTR [esi-0x7e]
  4067e3:	push   ss
  4067e4:	inc    DWORD PTR [ebx+0x508920ff]
  4067ea:	iret   
  4067eb:	fcmove st,st(4)
  4067ed:	add    BYTE PTR [eax],al
  4067ef:	xor    ecx,esp
  4067f1:	mov    eax,ds:0xffdf40
  4067f6:	(bad)  
  4067f7:	mov    ecx,0xe4d538ff
  4067fc:	or     esp,0xffffffff
  4067ff:	inc    esi
  406800:	add    BYTE PTR [esi],cl
  406802:	test   eax,0x83ffffd6
  406807:	and    BYTE PTR [ebx+0x56919e],al
  40680d:	(bad)  
  40680e:	push   DWORD PTR [ebx-0x1]
  406811:	add    al,0x1f
  406813:	adc    al,BYTE PTR [eax]
  406815:	add    DWORD PTR [eax],0xffffffb1
  406818:	add    BYTE PTR [ecx],bl
  40681a:	aaa    
  40681b:	dec    ecx
  40681c:	add    bh,bh
  40681e:	(bad)  
  40681f:	fild   WORD PTR [ebx+0xe4a007]
  406825:	(bad)  
  406826:	(bad)  
  406827:	mov    eax,0xe82683ff
  40682c:	inc    DWORD PTR [eax]
  40682e:	int3   
  40682f:	inc    edi
  406830:	add    dh,cl
  406832:	jge    0x406872
  406834:	add    bh,bh
  406836:	adc    ebx,0x0
  406839:	push   cs
  40683a:	mov    ?,WORD PTR [edi+edi*8-0x7ccf3301]
  406841:	lea    ebp,[edi+0xcc7b]
  406847:	inc    ebx
  406848:	(bad)  
  406849:	stc    
  40684a:	pop    esp
  40684b:	dec    ebp
  40684c:	inc    DWORD PTR [ebx+0x6fcc47ff]
  406852:	xor    BYTE PTR [eax],ch
  406854:	dec    DWORD PTR [ecx+0x6aff4bff]
  40685a:	xor    DWORD PTR [eax-0x34],ecx
  40685d:	add    bh,bh
  40685f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406860:	add    BYTE PTR [ebx+edx*8-0x70],cl
  406864:	(bad)  
  406865:	inc    DWORD PTR [eax]
  406867:	dec    ebx
  406868:	int3   
  406869:	pushf  
  40686a:	jb     0x40682e
  40686c:	(bad)  
  40686d:	dec    DWORD PTR [ecx-0x51f5005d]
  406873:	clc    
  406874:	add    BYTE PTR [eax],al
  406876:	adc    ebx,0x0
  406879:	retf   
  40687a:	add    bh,cl
  40687c:	mov    edi,edi
  40687e:	int3   
  40687f:	mov    dh,0xcc
  406881:	dec    eax
  406882:	dec    esi
  406883:	clc    
  406884:	add    DWORD PTR [ebx-0x5f767277],0x35
  40688b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688c:	add    ah,cl
  40688e:	jmp    DWORD PTR [edx+0x55b58c00]
  406894:	int3   
  406895:	inc    DWORD PTR [eax]
  406897:	mov    al,ds:0x99c74ff
  40689c:	cmp    edi,0xffffffcc
  40689f:	aam    0xcc
  4068a1:	sbb    eax,0xff00195b
  4068a6:	jmp    DWORD PTR [edx-0x1]
  4068a9:	pusha  
  4068aa:	or     DWORD PTR [eax+eax*1-0x7cf20100],0xffffffce
  4068b2:	cli    
  4068b3:	sub    bh,bh
  4068b5:	dec    DWORD PTR [ecx+0x4ff4833f]
  4068bb:	mov    ah,0x0
  4068bd:	add    BYTE PTR [eax],al
  4068bf:	jp     0x4068c0
  4068c1:	ins    BYTE PTR es:[edi],dx
  4068c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c3:	mov    ecx,0x1389ccff
  4068c8:	add    BYTE PTR [esi],al
  4068ca:	inc    edx
  4068cb:	out    0xff,eax
  4068cd:	mov    DWORD PTR [eax],eax
  4068cf:	cmp    bh,0x47
  4068d2:	nop
  4068d3:	cli    
  4068d4:	(bad)  
  4068d5:	(bad)  
  4068d6:	dec    DWORD PTR [eax+eax*1-0x14337b]
  4068dd:	inc    DWORD PTR [ebx-0x3e6d00c2]
  4068e3:	xchg   ecx,eax
  4068e4:	(bad)  
  4068e5:	(bad)  
  4068e6:	jmp    DWORD PTR [ecx+0x32b8b7cc]
  4068ec:	add    BYTE PTR [ecx-0x65ffe901],cl
  4068f2:	pop    ss
  4068f3:	jp     0x4068f4
  4068f5:	cmp    edi,0x38
  4068f8:	mov    DWORD PTR [edx+ebp*2-0x3300f8],ecx
  4068ff:	adc    al,0xff
  406901:	and    edi,DWORD PTR [edx]
  406903:	icebp  
  406904:	add    bh,bh
  406906:	jmp    FWORD PTR [ebp-0x3cedef00]
  40690c:	add    BYTE PTR [ecx-0x15ff3e01],cl
  406912:	mov    ds:0x83ffff31,al
  406917:	ins    DWORD PTR es:[edi],dx
  406918:	int3   
  406919:	mov    cl,al
  40691b:	iret   
  40691c:	(bad)  
  40691d:	inc    DWORD PTR [ebx+0x532d00f2]
  406923:	test   bh,bh
  406925:	add    DWORD PTR [eax],0x3c
  406928:	dec    DWORD PTR [ebp-0x38]
  40692b:	adc    BYTE PTR [ebx+0x65ffff],al
  406931:	(bad)  
  406932:	int    0x76
  406934:	(bad)  
  406935:	(bad)  
  406936:	call   DWORD PTR [eax-0xabdbf34]
  40693c:	(bad)  
  40693d:	dec    DWORD PTR [ecx-0x8470067]
  406943:	pop    edx
  406944:	mov    edi,edi
  406946:	push   eax
  406948:	add    BYTE PTR [ebx-0x50],dh
  40694b:	add    al,BYTE PTR [ebx+0xbdffff]
  406951:	and    esp,DWORD PTR [ebx]
  406953:	in     eax,0xff
  406955:	(bad)  
  406956:	call   FWORD PTR [eax-0x1]
  406959:	cmp    BYTE PTR [ecx+0x6e],0xff
  40695d:	add    BYTE PTR [eax],al
  40695f:	mov    ebx,0xe5451b00
  406964:	inc    DWORD PTR [eax]
  406966:	add    BYTE PTR [eax-0x68888f7d],bh
  40696c:	add    BYTE PTR [eax],al
  40696e:	push   edi
  406970:	add    BYTE PTR [edi],cl
  406972:	pop    ebx
  406973:	jbe    0x406975
  406975:	(bad)  
  406976:	inc    eax
  406978:	call   FWORD PTR [ecx-0xffc9ee]
  40697e:	int3   
  40697f:	pop    esi
  406980:	jmp    DWORD PTR [edx-0x13]
  406983:	push   edi
  406984:	add    bh,bh
  406986:	mov    DWORD PTR [ecx+0x0],esp
  406989:	pop    ds
  40698a:	mov    ecx,0xffff834b
  40698f:	call   0xffff:0x769175ff
  406996:	jmp    ebx
  406998:	add    BYTE PTR [ecx],dh
  40699a:	or     al,0x33
  40699c:	add    DWORD PTR [eax],0xffffffff
  40699f:	clc    
  4069a0:	int3   
  4069a1:	cmp    edi,DWORD PTR [edx+0x75]
  4069a4:	(bad)  
  4069a5:	(bad)  
  4069a6:	inc    DWORD PTR [eax-0x1]
  4069a9:	or     DWORD PTR ds:[ebx-0x7d],0x0
  4069ae:	(bad)  
  4069af:	out    dx,eax
  4069b0:	jmp    FWORD PTR [ecx]
  4069b2:	fwait
  4069b3:	mov    ds:0x81ffff83,al
  4069b8:	add    ah,dh
  4069ba:	sahf   
  4069bb:	leave  
  4069bc:	(bad)  
  4069bd:	(bad)  
  4069be:	call   DWORD PTR [eax+eax*1+0xf01b54]
  4069c5:	inc    DWORD PTR [eax]
  4069c7:	(bad)  
  4069c8:	(bad)  
  4069c9:	ds js  0x4069e3
  4069cc:	(bad)  
  4069cd:	inc    DWORD PTR [eax]
  4069cf:	inc    ebx
  4069d0:	jmp    DWORD PTR [edx]
  4069d2:	push   ecx
  4069d3:	out    dx,al
  4069d4:	cmp    edi,0xffffffff
  4069d7:	mov    al,0xff
  4069d9:	mov    esp,0xff250a
  4069de:	add    BYTE PTR [ebx],al
  4069e0:	add    dl,ah
  4069e2:	fs cmp al,0xff
  4069e5:	int3   
  4069e6:	mov    DWORD PTR [edx],eax
  4069e8:	inc    eax
  4069ea:	(bad)  
  4069eb:	cmp    eax,0xdccffff
  4069f0:	cmp    edi,0xffffffd6
  4069f3:	ins    DWORD PTR es:[edi],dx
  4069f4:	add    BYTE PTR [ecx+0x2bffd900],cl
  4069fa:	outs   dx,BYTE PTR ds:[esi]
  4069fb:	push   es
  4069fc:	cmp    edi,0xffffffff
  4069ff:	sub    ah,cl
  406a01:	mov    ebx,0x2cfc
  406a06:	or     DWORD PTR [edi+edi*8+0x68],0xffffffb9
  406a0b:	push   ecx
  406a0c:	(bad)  
  406a0d:	inc    DWORD PTR [ebx+0x1695ffb4]
  406a13:	ud0    ecx,esp
  406a16:	int3   
  406a17:	in     eax,0xff
  406a19:	fsubr  DWORD PTR [eax-0x337c0023]
  406a1f:	jns    0x406a20
  406a21:	add    eax,DWORD PTR [ecx+0xff895f]
  406a27:	(bad)  
  406a29:	inc    edi
  406a2a:	inc    edx
  406a2b:	retf   0xffff
  406a2e:	inc    DWORD PTR [esi+0x2e0281ff]
  406a34:	dec    DWORD PTR [ecx+0x58004a00]
  406a3a:	mov    al,0xdc
  406a3c:	dec    esp
  406a3e:	add    BYTE PTR [eax+0x76946cff],dl
  406a44:	(bad)  
  406a45:	inc    DWORD PTR [eax]
  406a47:	popa   
  406a48:	or     DWORD PTR [ebx+0x3e],0x6d
  406a4c:	dec    esp
  406a4e:	add    BYTE PTR [edi],bl
  406a50:	call   DWORD PTR [esi]
  406a52:	imul   eax,DWORD PTR [ecx-0x39ff0001],0xffffffff
  406a59:	lea    esp,[eax+0x43]
  406a5c:	add    bh,bh
  406a5e:	jmp    DWORD PTR [edi-0x1]
  406a61:	inc    esi
  406a62:	popa   
  406a63:	mov    WORD PTR [eax],es
  406a65:	or     esp,0x6e
  406a68:	call   DWORD PTR [esi-0xe624]
  406a6e:	jmp    FWORD PTR [eax-0x5fb68d34]
  406a74:	dec    DWORD PTR [ecx-0x3bffe200]
  406a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a7b:	add    BYTE PTR cs:[ecx-0x5f7c6f01],cl
  406a82:	test   ebp,esp
  406a84:	inc    DWORD PTR [eax]
  406a86:	(bad)  
  406a87:	jmp    0xe70b948c
  406a8c:	add    bh,bh
  406a8e:	(bad)  
  406a8f:	cli    
  406a90:	mov    DWORD PTR [esp+ecx*4-0x7c760024],esi
  406a97:	jg     0x406a98
  406a99:	clc    
  406a9a:	mov    ds:0xff0000e8,al
  406a9f:	rol    DWORD PTR [ebx-0x48fc7a],1
  406aa5:	inc    DWORD PTR [ebx+0x167900ec]
  406aab:	std    
  406aac:	or     DWORD PTR [ecx+0xcff4aff],0x17
  406ab3:	mov    esp,0x5e00ffff
  406ab8:	xor    DWORD PTR ds:0xff00bd51,0xffffffff
  406abf:	iret   
  406ac0:	dec    ecx
  406ac2:	inc    edx
  406ac3:	xchg   edi,eax
  406ac4:	or     DWORD PTR [ecx-0x764900],0xffffffca
  406acb:	xchg   esp,eax
  406acc:	cmp    edi,0x0
  406acf:	adc    edi,edi
  406ad1:	ret    0xf6d0
  406ad4:	add    bh,bh
  406ad6:	dec    DWORD PTR [ebx-0x2bd001]
  406adc:	dec    esp
  406ade:	push   edx
  406ae0:	add    BYTE PTR [ebx+0x33],bh
  406ae3:	data16 add BYTE PTR [eax],al
  406ae6:	sub    DWORD PTR [edi+edi*8],0x44
  406aea:	jb     0x406b0d
  406aec:	inc    DWORD PTR [ebx+0xe89d9ff]
  406af2:	lds    esp,FWORD PTR [ebx-0x59010000]
  406af8:	call   FWORD PTR [edx+ecx*4-0x1e]
  406afc:	add    BYTE PTR [eax],al
  406afe:	add    BYTE PTR [edi+edi*8+0x995c41],ch
  406b05:	(bad)  
  406b06:	call   DWORD PTR [edi+edi*8-0x55]
  406b0a:	pop    ds
  406b0b:	jle    0x406ad9
  406b0d:	inc    DWORD PTR [eax]
  406b0f:	mov    eax,0x767da5cc
  406b14:	add    BYTE PTR [eax],al
  406b16:	dec    ebx
  406b18:	inc    ecx
  406b1a:	fnsave [ebx+0x0]
  406b1d:	(bad)  
  406b1e:	push   ebx
  406b20:	call   edx
  406b22:	jecxz  0x406ba0
  406b24:	add    bh,bh
  406b26:	add    ah,dh
  406b28:	call   FWORD PTR [eax+0x63]
  406b2b:	mov    al,0x0
  406b2d:	add    BYTE PTR [eax],al
  406b2f:	push   esp
  406b30:	add    BYTE PTR [ebx-0x9ab5],bh
  406b36:	call   DWORD PTR [edx]
  406b38:	int3   
  406b39:	pushf  
  406b3a:	pop    eax
  406b3b:	adc    bh,bh
  406b3d:	inc    DWORD PTR [eax]
  406b3f:	ud0    esp,ecx
  406b42:	push   ecx
  406b43:	mov    ds:0x14ff00ff,eax
  406b48:	dec    DWORD PTR [esi+0x7c]
  406b4b:	aas    
  406b4c:	add    bh,bh
  406b4e:	add    BYTE PTR [ebx+eax*4-0xbb865d],bl
  406b55:	int3   
  406b56:	int3   
  406b57:	aaa    
  406b58:	add    BYTE PTR [ebx],ch
  406b5a:	stos   DWORD PTR es:[edi],eax
  406b5b:	(bad)  
  406b5c:	(bad)  
  406b5d:	(bad)  
  406b5e:	inc    DWORD PTR [edi+edi*8+0xc15e69]
  406b65:	add    DWORD PTR [ebx-0x3838ff9c],0x44
  406b6c:	add    ah,cl
  406b6e:	and    DWORD PTR [ebx-0x1],0x2f
  406b72:	cwde   
  406b73:	loopne 0x406b74
  406b75:	(bad)  
  406b76:	jmp    FWORD PTR [edx]
  406b78:	xor    DWORD PTR [ebx+ebx*4-0x7c330097],0xffffffce
  406b80:	add    BYTE PTR [ecx-0x7c336e73],dl
  406b86:	add    BYTE PTR [edx],cl
  406b88:	jmp    DWORD PTR [ebx-0x15]
  406b8b:	mov    al,0x0
  406b8d:	add    bh,bh
  406b8f:	jo     0x406b90
  406b91:	mov    al,0xa1
  406b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b94:	add    BYTE PTR [ebx+0x20ffadff],al
  406b9a:	pop    eax
  406b9b:	or     eax,0xd6ff0083
  406ba0:	int3   
  406ba1:	jl     0x406b80
  406ba3:	xchg   esi,eax
  406ba4:	(bad)  
  406ba5:	(bad)  
  406ba6:	inc    DWORD PTR [ecx-0xb65da00]
  406bac:	cmp    edi,0xffffff83
  406baf:	inc    esi
  406bb0:	add    BYTE PTR [eax-0x30],dh
  406bb3:	cmp    edi,edi
  406bb5:	inc    DWORD PTR [ebx-0x4dc6ffe9]
  406bbb:	aam    0xff
  406bbd:	add    DWORD PTR [ebx-0x170d00f7],0xffffffdf
  406bc4:	(bad)  
  406bc5:	(bad)  
  406bc6:	call   DWORD PTR [eax]
  406bc8:	mov    DWORD PTR [ecx+esi*2+0x59],eax
  406bcf:	sti    
  406bd0:	add    dh,dh
  406bd2:	sub    BYTE PTR [ebx-0x417cffbd],al
  406bd8:	jmp    DWORD PTR [ebx]
  406bda:	add    al,0x0
  406bdc:	pusha  
  406bdd:	add    BYTE PTR [eax],al
  406bdf:	jge    0x406be0
  406be1:	out    0x2b,al
  406be3:	inc    ebp
  406be5:	dec    esp
  406be7:	rol    BYTE PTR [eax],1
  406be9:	and    bl,bl
  406beb:	int3   
  406bec:	or     bh,bh
  406bee:	add    BYTE PTR [esi-0x76d0d501],ch
  406bf4:	leave  
  406bf5:	inc    DWORD PTR [eax]
  406bf7:	stc    
  406bf8:	call   ebp
  406bfa:	addr16 push edx
  406bfd:	add    BYTE PTR [eax],al
  406bff:	lahf   
  406c00:	add    DWORD PTR [edi],0xffffff88
  406c03:	call   FWORD PTR [ebx-0x8a0001]
  406c09:	scas   eax,DWORD PTR es:[edi]
  406c0a:	and    bh,bh
  406c0c:	inc    ecx
  406c0d:	add    DWORD PTR [ebx+0x3798ffe6],0xffffffff
  406c14:	retf   
  406c15:	(bad)  
  406c16:	jmp    FWORD PTR [ecx+0x0]
  406c19:	sbb    DWORD PTR [eax],ebp
  406c1b:	add    BYTE PTR [edx-0x1],dl
  406c1e:	int3   
  406c1f:	xchg   edx,eax
  406c20:	add    BYTE PTR [edx],bh
  406c22:	retf   0x7900
  406c25:	inc    DWORD PTR [eax]
  406c27:	xchg   ebp,eax
  406c28:	add    cl,bl
  406c2a:	and    al,0xff
  406c2c:	pop    edx
  406c2d:	dec    esp
  406c2f:	retf   0x95ff
  406c32:	dec    ecx
  406c33:	add    BYTE PTR [esi+0x0],ah
  406c36:	int3   
  406c37:	dec    esp
  406c38:	dec    DWORD PTR [eax]
  406c3a:	xchg   edi,eax
  406c3b:	add    BYTE PTR [ebx],dh
  406c3d:	or     esp,0xffffffe6
  406c40:	add    bh,al
  406c42:	adc    DWORD PTR [bx],0xffffffff
  406c46:	add    BYTE PTR [ebx-0x806301],cl
  406c4c:	jg     0x406c4d
  406c4e:	call   DWORD PTR [eax-0x7cfe3001]
  406c54:	imul   eax,DWORD PTR [ebx+0x6ff3300],0x11
  406c5b:	jmp    DWORD PTR [edx]
  406c5d:	int3   
  406c5e:	(bad)  
  406c5f:	std    
  406c60:	xor    DWORD PTR [edx+0x6d],0xffffffff
  406c64:	(bad)  
  406c65:	inc    DWORD PTR [eax]
  406c67:	loopne 0x406c68
  406c69:	pushf  
  406c6a:	adc    BYTE PTR [eax],al
  406c6c:	out    0xff,al
  406c6e:	int3   
  406c6f:	jb     0x406c70
  406c71:	in     al,0xbb
  406c73:	cmp    DWORD PTR [edi-0x1],0xffffffcc
  406c77:	push   ebp
  406c78:	int3   
  406c79:	fs nop
  406c7b:	jmp    DWORD PTR [ecx-0x7ce20100]
  406c81:	pop    edx
  406c82:	int    0x83
  406c84:	mov    ah,0xcc
  406c86:	push   esp
  406c88:	add    bl,ah
  406c8a:	icebp  
  406c8b:	or     DWORD PTR ds:0xff48cc00,0x79
  406c92:	rol    BYTE PTR [eax],cl
  406c94:	adc    ah,cl
  406c96:	mov    edx,ebx
  406c98:	add    BYTE PTR [eax+0x3e0085],ah
  406c9e:	(bad)  
  406c9f:	inc    BYTE PTR [eax]
  406ca1:	adc    BYTE PTR [esi+0x0],cl
  406ca4:	inc    edx
  406ca5:	mov    DWORD PTR [ecx-0x68cd00e2],ecx
  406cab:	cmp    DWORD PTR [ebx-0x77],0xffffffcc
  406caf:	jmp    0xff68:0x839c23ff
  406cb6:	push   DWORD PTR [esi-0x7c9f4b01]
  406cbc:	push   ebp
  406cbd:	inc    DWORD PTR [eax]
  406cbf:	push   0xc33883
  406cc4:	inc    DWORD PTR gs:[ebx-0x35620060]
  406ccb:	add    BYTE PTR [edx+0x0],al
  406cce:	and    DWORD PTR [ebx-0x7d],0xffffffdf
  406cd2:	mov    eax,ds:0xff44ff
  406cd7:	jecxz  0x406c5c
  406cd9:	(bad)  
  406cda:	cli    
  406cdb:	add    bh,bh
  406cdd:	(bad)  
  406cde:	inc    DWORD PTR [edx]
  406ce0:	add    dl,ah
  406ce2:	mov    bh,bh
  406ce4:	xchg   ebp,eax
  406ce5:	(bad)  
  406ce6:	(bad)  
  406ce7:	mov    esp,0xff1358cc
  406cec:	xor    al,0xff
  406cee:	add    BYTE PTR [eax-0x3dfe00],ah
  406cf4:	mov    ds:0xffab8900,eax
  406cf9:	or     BYTE PTR [eax+0x0],0x8a
  406cfd:	int3   
  406cfe:	add    BYTE PTR [esi+0x6a19cc],ah
  406d04:	pop    ecx
  406d05:	add    BYTE PTR [eax],al
  406d07:	xchg   bh,bh
  406d09:	push   ecx
  406d0a:	push   esp
  406d0b:	dec    eax
  406d0d:	or     DWORD PTR [ecx+0x27ddff65],0xffffffff
  406d14:	mov    dh,0x0
  406d16:	dec    DWORD PTR [ebx+eax*4]
  406d19:	leave  
  406d1a:	sbb    eax,0xff006200
  406d1f:	pop    ss
  406d20:	mov    DWORD PTR [ecx+0x8200f4],ecx
  406d26:	add    BYTE PTR [edi-0x8f3f00],al
  406d2c:	aas    
  406d2d:	add    BYTE PTR [eax],al
  406d2f:	lahf   
  406d30:	adc    DWORD PTR [ebx-0x5affb2],0xffffffff
  406d37:	jl     0x406cbc
  406d39:	pop    ebp
  406d3a:	adc    bh,bh
  406d3c:	cmp    edi,edi
  406d3e:	jmp    DWORD PTR [edx+0x676b83]
  406d44:	sub    al,0x89
  406d46:	add    BYTE PTR ds:0xffb3cd00,al
  406d4c:	(bad)  
  406d4d:	add    DWORD PTR [eax],0xffffff8a
  406d50:	call   DWORD PTR [eax+eax*1-0x5501]
  406d57:	pop    ebx
  406d58:	mov    ebx,edx
  406d5a:	xchg   ecx,eax
  406d5b:	(bad)  
  406d5c:	(bad)  
  406d5e:	add    bh,al
  406d60:	(bad)  
  406d61:	mov    esi,0xffa50011
  406d66:	mov    DWORD PTR [ebx],ebx
  406d68:	call   FWORD PTR [edx+0x38]
  406d6b:	call   DWORD PTR [ecx]
  406d6d:	add    bh,bh
  406d6f:	leave  
  406d70:	dec    edx
  406d72:	sub    al,0xff
  406d74:	iret   
  406d75:	int3   
  406d76:	int3   
  406d77:	inc    DWORD PTR [eax]
  406d79:	or     eax,0xff810009
  406d7e:	mov    DWORD PTR [ebp-0xe3ab7d],esp
  406d84:	popf   
  406d85:	add    bh,bh
  406d87:	lods   al,BYTE PTR ds:[esi]
  406d88:	int3   
  406d89:	stc    
  406d8a:	push   eax
  406d8b:	add    BYTE PTR [edi-0x1],dl
  406d8e:	xor    esp,0xffffffcc
  406d91:	das    
  406d92:	pop    DWORD PTR [eax]
  406d94:	push   ecx
  406d95:	inc    DWORD PTR [eax]
  406d97:	(bad)  
  406d99:	jne    0x406d40
  406d9b:	int3   
  406d9c:	mov    dl,0xff
  406d9e:	add    BYTE PTR [eax],ch
  406da0:	add    DWORD PTR [edi],0xffffffef
  406da3:	add    dl,dh
  406da5:	(bad)  
  406da6:	inc    DWORD PTR [ecx]
  406da8:	inc    DWORD PTR [edi-0xfff54]
  406dae:	sbb    eax,0xffffffff
  406db1:	fwait
  406db2:	add    DWORD PTR [ebx-0x2a0000ca],0xffffffff
  406db9:	pop    ds
  406dba:	retf   0xeff
  406dbd:	cmp    edi,0xffffffb8
  406dc0:	add    BYTE PTR [eax],bl
  406dc2:	pop    esp
  406dc3:	int3   
  406dc4:	push   ss
  406dc5:	mov    DWORD PTR [ebx+0x10180030],eax
  406dcb:	jmp    edi
  406dcd:	(bad)  
  406dce:	jmp    FWORD PTR [edi+0x0]
  406dd1:	arpl   WORD PTR [eax],ax
  406dd3:	push   DWORD PTR [esi+0x3bffcc]
  406dd9:	fidivr DWORD PTR [ecx]
  406ddb:	inc    DWORD PTR [edi+edi*8+0x0]
  406ddf:	fcos   
  406de1:	xchg   edi,eax
  406de2:	xlat   BYTE PTR ds:[ebx]
  406de3:	jmp    FWORD PTR [edx-0x7d]
  406de6:	add    BYTE PTR [ebx],ah
  406de8:	(bad)  
  406de9:	cmp    DWORD PTR [edx-0x77],eax
  406dec:	loopne 0x406dee
  406dee:	call   FWORD PTR [edi+edi*8]
  406df1:	sub    al,0x56
  406df3:	add    al,ah
  406df5:	inc    DWORD PTR [eax]
  406df7:	jge    0x406df8
  406df9:	cmp    eax,0x200087
  406dfe:	(bad)  
  406dff:	jmp    0x406d8a
  406e01:	lahf   
  406e02:	sbb    eax,DWORD PTR [eax]
  406e04:	pop    esi
  406e05:	dec    esp
  406e07:	pop    ebx
  406e08:	mov    DWORD PTR [ebp-0x6c008f],ebp
  406e0e:	(bad)  
  406e0f:	jl     0x406e11
  406e11:	mov    WORD PTR [eax],ds
  406e13:	add    BYTE PTR [ebp+0x28900],ch
  406e19:	in     eax,0x50
  406e1b:	add    BYTE PTR ds:0xff510083,ch
  406e21:	mov    DWORD PTR [eax-0x1],ebp
  406e24:	das    
  406e25:	(bad)  
  406e26:	jmp    edi
  406e28:	mov    DWORD PTR [edi+eax*1-0x1],esi
  406e2c:	sub    edi,edi
  406e2e:	jmp    ecx
  406e30:	int3   
  406e31:	stos   BYTE PTR es:[edi],al
  406e32:	xchg   ecx,eax
  406e33:	call   DWORD PTR [esi]
  406e35:	inc    DWORD PTR [eax]
  406e37:	out    dx,eax
  406e38:	(bad)  
  406e39:	cmp    ch,BYTE PTR [eax-0x34]
  406e3c:	sar    edi,0xff
  406e3f:	cmp    bh,bh
  406e41:	cmp    esp,ebx
  406e43:	call   DWORD PTR [ebx]
  406e45:	add    bh,bh
  406e47:	mov    edi,0x68c3cc
  406e4c:	lds    eax,FWORD PTR [ebx+0x4c008b00]
  406e52:	mov    esp,0xcc7800
  406e57:	or     edi,edi
  406e59:	pslld  mm0,QWORD PTR [eax]
  406e5c:	addr16 mov edi,edi
  406e5f:	(bad)  
  406e60:	push   DWORD PTR [edi-0xe20065]
  406e66:	mov    DWORD PTR [ecx],ebx
  406e68:	mov    DWORD PTR [ebx],esp
  406e6a:	jns    0x406e6c
  406e6c:	cmp    bh,0x0
  406e6f:	call   0xfff23273
  406e74:	dec    eax
  406e75:	mov    esp,ecx
  406e77:	sbb    eax,0x1c4500
  406e7c:	push   ecx
  406e7d:	add    ah,cl
  406e7f:	mov    edx,0x8b71ff
  406e84:	pop    ss
  406e85:	add    BYTE PTR [ebx+0x7c7fff69],al
  406e8b:	add    BYTE PTR [ecx-0x7d],ah
  406e8e:	add    BYTE PTR [ecx],bl
  406e90:	dec    DWORD PTR [edx+0x63]
  406e93:	adc    esp,0xffffff89
  406e96:	jmp    eax
  406e98:	jmp    FWORD PTR ds:0xccbc00ee
  406e9e:	call   FWORD PTR [edx]
  406ea0:	add    BYTE PTR [edx],dl
  406ea2:	push   ss
  406ea3:	or     esi,0xffffffff
  406ea6:	add    BYTE PTR [edi+edi*8-0x6a],ah
  406eaa:	aaa    
  406eab:	inc    DWORD PTR [esi+0x0]
  406eae:	add    BYTE PTR [esi-0x766d5f01],ch
  406eb4:	in     al,dx
  406eb5:	add    BYTE PTR [eax],al
  406eb7:	leave  
  406eb8:	call   ebx
  406eba:	sub    eax,DWORD PTR [ebx+0x71cc0078]
  406ec0:	cmp    DWORD PTR [ebx+0x4b],0xffffff83
  406ec4:	mov    al,BYTE PTR [eax]
  406ec6:	add    BYTE PTR [eax+eax*1-0x71ffb375],cl
  406ecd:	inc    DWORD PTR [eax]
  406ecf:	repz adc DWORD PTR [ebx+0x59],0xffffffff
  406ed4:	pop    ebx
  406ed5:	inc    DWORD PTR [eax]
  406ed7:	call   0xa5:0xff9ee300
  406ede:	add    bh,ch
  406ee0:	push   DWORD PTR [edx-0x68]
  406ee3:	jmp    DWORD PTR [edi-0x1]
  406ee6:	dec    ecx
  406ee8:	mov    DWORD PTR [eax],esi
  406eea:	outs   dx,DWORD PTR ds:[esi]
  406eeb:	inc    DWORD PTR [ecx]
  406eed:	int3   
  406eee:	add    BYTE PTR [ebp-0x7d],dl
  406ef1:	xor    bl,BYTE PTR [edx]
  406ef3:	add    bh,al
  406ef5:	mov    edi,edi
  406ef7:	jno    0x406e7c
  406ef9:	and    BYTE PTR [eax],cl
  406efb:	push   DWORD PTR [edx-0x7d]
  406efe:	add    BYTE PTR [edx-0x1],bh
  406f01:	sti    
  406f02:	js     0x406f03
  406f04:	(bad)  
  406f05:	inc    DWORD PTR [eax]
  406f07:	jmp    0x836e8b0b
  406f0c:	test   edi,edi
  406f0e:	and    DWORD PTR [esp+ecx*8-0x7e],0xffffffcb
  406f13:	add    cl,bl
  406f15:	add    BYTE PTR [eax],al
  406f17:	call   0x8970:0xccfb9883
  406f1e:	add    BYTE PTR [edx+0x5375ff],al
  406f24:	sbb    eax,DWORD PTR [eax]
  406f26:	add    BYTE PTR [esi-0x1],al
  406f29:	add    edi,esp
  406f2b:	add    BYTE PTR [ecx],dh
  406f2d:	inc    DWORD PTR [eax]
  406f2f:	push   ecx
  406f30:	sbb    DWORD PTR [ecx-0x768f0070],0xffffffff
  406f37:	xchg   esp,ecx
  406f39:	push   edx
  406f3a:	add    DWORD PTR [eax],0xffffffdb
  406f3d:	(bad)  
  406f3e:	call   eax
  406f40:	inc    DWORD PTR [esi]
  406f42:	dec    ebx
  406f43:	jmp    DWORD PTR [eax+0xaf8900]
  406f49:	adc    BYTE PTR [esi-0xffd901],bl
  406f4f:	cmp    bh,0xc3
  406f52:	call   0x1c:0x83004200
  406f59:	xchg   BYTE PTR [eax+eax*1+0xf],bl
  406f5d:	(bad)  
  406f5e:	jmp    DWORD PTR [edi-0x1]
  406f61:	and    al,0x84
  406f63:	add    ah,dh
  406f65:	mov    edi,edi
  406f67:	clc    
  406f68:	jmp    ebp
  406f6a:	dec    eax
  406f6b:	and    ecx,0x0
  406f6e:	xor    DWORD PTR [ebx+eax*4],0xffffffb2
  406f72:	push   0xffffffff
  406f74:	mov    ch,0x0
  406f76:	add    BYTE PTR [eax-0x7d],dh
  406f79:	out    0x87,eax
  406f7b:	add    BYTE PTR [ebx],al
  406f7d:	add    ah,cl
  406f7f:	(bad)  
  406f81:	add    BYTE PTR [esi-0x1],0x88
  406f85:	inc    DWORD PTR [eax]
  406f87:	mov    ds:0x83064e00,eax
  406f8c:	xor    bh,bh
  406f8e:	add    BYTE PTR [eax-0x34],bl
  406f91:	fcmovnb st,st(7)
  406f93:	sbb    DWORD PTR [ecx],0xffffffff
  406f96:	inc    DWORD PTR [eax-0x80397d]
  406f9c:	jge    0x406f9d
  406f9e:	add    BYTE PTR [ebx],bl
  406fa0:	add    BYTE PTR ds:0xff5983c8,bh
  406fa6:	(bad)  
  406fa7:	call   0xe74fab
  406fac:	sub    eax,0x8968ffcc
  406fb1:	shl    DWORD PTR [ebx+eax*4-0x7f000074],cl
  406fb8:	call   DWORD PTR [edx-0x335c0018]
  406fbe:	add    BYTE PTR [eax-0x74a400],bl
  406fc4:	iret   
  406fc5:	add    BYTE PTR [eax],al
  406fc7:	push   es
  406fc8:	jmp    DWORD PTR [edi]
  406fca:	pop    edi
  406fcb:	sub    DWORD PTR [ecx-0x1],0xffffffff
  406fcf:	xchg   esi,eax
  406fd0:	call   DWORD PTR [ecx-0x7c36ff28]
  406fd6:	inc    DWORD PTR [edi]
  406fd8:	jmp    FWORD PTR [edx-0x2f]
  406fdb:	int3   
  406fdc:	sub    al,0xff
  406fde:	adc    ebx,0xffffffff
  406fe1:	adc    eax,0xfffeffe9
  406fe6:	add    BYTE PTR [eax-0xb3b000],bh
  406fec:	hlt    
  406fed:	add    BYTE PTR [eax],al
  406fef:	into   
  406ff0:	(bad)  
  406ff1:	dec    ch
  406ff3:	inc    esi
  406ff5:	add    ah,cl
  406ff7:	jae    0x406fc5
  406ff9:	inc    edi
  406ffa:	(bad)  
  406ffb:	dec    ecx
  406ffd:	add    BYTE PTR [ebx-0x7877c21],al
  407003:	mov    esp,ebp
  407005:	add    bh,bh
  407007:	pop    ss
  407008:	adc    DWORD PTR ds:0xffbc8999,0xffffffcc
  40700f:	lods   al,BYTE PTR ds:[esi]
  407010:	and    DWORD PTR [esi-0xff0077],0xffffffff
  407017:	out    dx,al
  407018:	(bad)  
  407019:	stc    
  40701a:	cmp    eax,DWORD PTR [eax]
  40701c:	mov    edi,edi
  40701e:	call   DWORD PTR [esi]
  407020:	call   FWORD PTR ds:0x8917ff7c
  407026:	add    BYTE PTR [edx+0xa0f400],al
  40702c:	bound  eax,QWORD PTR [eax]
  40702e:	mov    DWORD PTR [edx+0x2d7bff],eax
  407034:	imul   edi,edi,0x0
  407037:	push   edx
  407038:	add    BYTE PTR [ebx],al
  40703a:	add    ah,cl
  40703c:	adc    eax,DWORD PTR [eax]
  40703e:	dec    DWORD PTR [esi+0x8a7c83]
  407044:	hlt    
  407045:	add    bh,bh
  407047:	inc    ecx
  407048:	adc    DWORD PTR [edx+0x5],0xffffffff
  40704c:	add    DWORD PTR ss:[eax],0xfffffff6
  407050:	dec    DWORD PTR [ecx-0x3f]
  407053:	add    bl,ch
  407055:	add    BYTE PTR [ebx+0x4714cc29],al
  40705b:	int3   
  40705c:	dec    DWORD PTR cs:[ecx-0x754600c2]
  407063:	sub    DWORD PTR [ecx],0xffffffff
  407066:	add    bl,bl
  407068:	jmp    FWORD PTR [esi+0xe6ffc5]
  40706e:	jmp    FWORD PTR [ecx+0x0]
  407071:	ja     0x4070d5
  407073:	int3   
  407074:	sub    al,0x83
  407076:	(bad)  
  407077:	mov    eax,0xffee4183
  40707c:	xchg   BYTE PTR [eax],al
  40707e:	(bad)  
  40707f:	fiadd  WORD PTR [eax]
  407081:	xchg   edi,eax
  407082:	jmp    0x407084
  407084:	jp     0x407085
  407086:	inc    DWORD PTR [ebx+0x862a00]
  40708c:	outs   dx,DWORD PTR ds:[esi]
  40708d:	int3   
  40708e:	(bad)  
  40708f:	jmp    0x40705d
  407091:	ds stos BYTE PTR es:[edi],al
  407093:	int3   
  407094:	sub    BYTE PTR [ebx-0x4200f501],al
  40709a:	xchg   DWORD PTR [eax],eax
  40709c:	dec    esp
  40709d:	mov    DWORD PTR [eax],eax
  40709f:	adc    eax,0x6e8bff
  4070a4:	xor    ah,cl
  4070a6:	jmp    DWORD PTR [eax]
  4070a8:	int3   
  4070a9:	rcr    DWORD PTR [edx-0x34],cl
  4070ac:	add    eax,DWORD PTR [eax]
  4070ae:	add    BYTE PTR [eax],al
  4070b0:	add    BYTE PTR [edi],ch
  4070b2:	(bad)  
  4070b3:	int3   
  4070b4:	jne    0x4070b5
  4070b6:	call   FWORD PTR [eax-0x515000]
  4070bc:	lds    eax,FWORD PTR [eax]
  4070be:	sbb    DWORD PTR [edi],0xffffffff
  4070c1:	call   0x187067
  4070c6:	dec    ecx
  4070c8:	call   DWORD PTR [ebx+ebp*2]
  4070cb:	dec    DWORD PTR [ebp+0x0]
  4070ce:	add    BYTE PTR [ebx+0xdbf189],bl
  4070d4:	call   0x98eb:0xff2500ff
  4070db:	int3   
  4070dc:	int    0x0
  4070de:	push   DWORD PTR [edi-0xa5700]
  4070e4:	popf   
  4070e5:	add    ah,cl
  4070e7:	xchg   esp,eax
  4070e8:	(bad)  
  4070e9:	in     al,dx
  4070ea:	xor    edi,edi
  4070ec:	dec    edi
  4070ed:	or     DWORD PTR [ecx+0x59efffee],0x0
  4070f4:	or     bh,bh
  4070f6:	call   DWORD PTR [edi]
  4070f8:	mov    DWORD PTR [ebx+ebp*8-0x33f477],ecx
  4070ff:	or     al,0xff
  407101:	call   0x8389709b
  407106:	add    BYTE PTR [eax+eax*1-0x100ef1c],dh
  40710d:	add    ah,cl
  40710f:	nop
  407110:	(bad)  
  407111:	mov    eax,0xff27ffe6
  407116:	add    dl,cl
  407118:	jmp    FWORD PTR [edi-0xd]
  40711b:	add    BYTE PTR [edi-0x1],ch
  40711e:	add    BYTE PTR [ecx],dh
  407120:	add    dh,cl
  407122:	xchg   esp,eax
  407123:	inc    DWORD PTR [eax+eax*1-0x7d]
  407127:	dec    esi
  407128:	jmp    DWORD PTR [edi-0x7f]
  40712b:	add    BYTE PTR [esi-0x34],ch
  40712e:	add    BYTE PTR [edx-0x1],ah
  407131:	xchg   DWORD PTR [ebp+0x0],eax
  407134:	mov    edx,0xffabffff
  407139:	mov    esp,DWORD PTR [edx]
  40713b:	jmp    FWORD PTR [ecx+ecx*4]
  40713e:	call   DWORD PTR [esp+ecx*8+0xaff347c]
  407145:	mov    edi,edi
  407147:	sbb    eax,0xcc68dcff
  40714c:	push   ss
  40714d:	inc    DWORD PTR [eax]
  40714f:	dec    eax
  407150:	call   FWORD PTR [ebp-0xdfff34]
  407156:	jmp    FWORD PTR [ebx+0x0]
  407159:	fwait
  40715a:	hlt    
  40715b:	add    BYTE PTR [ecx+0x0],bh
  40715e:	push   DWORD PTR [eax]
  407160:	push   DWORD PTR [edx]
  407162:	mov    DWORD PTR [bx],edx
  407165:	add    DWORD PTR [ebx-0x2fcd0058],0xffffffff
  40716c:	dec    ebx
  40716d:	(bad)  
  40716e:	jmp    DWORD PTR [esi+0x0]
  407171:	lock jl 0x407173
  407174:	loope  0x4070f9
  407176:	call   FWORD PTR [edx-0x1]
  407179:	inc    ebx
  40717a:	imul   edi,edi,0x3b89ffeb
  407180:	xor    DWORD PTR [ecx-0xecfff1],0xffffffff
  407187:	xchg   edi,eax
  407188:	(bad)  
  407189:	jg     0x4071bc
  40718b:	(bad)  
  40718c:	jg     0x40718e
  40718e:	mov    DWORD PTR [ebx+0x4e5ccc],edx
  407194:	adc    al,0xff
  407196:	sbb    edx,0x0
  407199:	mov    DWORD PTR [edi+edi*8+0x2],esi
  40719d:	add    bh,bh
  40719f:	mov    esi,0xffcabf00
  4071a4:	xchg   esi,eax
  4071a5:	int3   
  4071a6:	inc    DWORD PTR [edi+edi*8-0x22]
  4071aa:	inc    ebp
  4071ab:	dec    DWORD PTR ds:0xffabff83
  4071b1:	inc    edx
  4071b2:	sub    eax,DWORD PTR [eax]
  4071b4:	mov    ebx,0xff4d00cc
  4071b9:	push   eax
  4071ba:	repz (bad) 
  4071bc:	fdiv   st(7),st
  4071be:	dec    DWORD PTR [edi-0x9bb201]
  4071c4:	inc    DWORD PTR fs:[ebx+0x7294ff31]
  4071cb:	mov    DWORD PTR [ebx-0x7685ff34],ecx
  4071d1:	scas   eax,DWORD PTR es:[edi]
  4071d2:	push   es
  4071d3:	add    BYTE PTR [eax-0x33960001],ch
  4071d9:	clc    
  4071da:	(bad)  
  4071db:	dec    DWORD PTR [edx-0x33560100]
  4071e1:	out    0x19,eax
  4071e3:	(bad)  
  4071e4:	mov    eax,0xd18300
  4071e9:	ret    0x833e
  4071ec:	push   eax
  4071ed:	add    BYTE PTR [ebx+0x6f0a00fa],al
  4071f3:	add    bl,ch
  4071f5:	int3   
  4071f6:	add    BYTE PTR [ecx-0xeb857d],ah
  4071fc:	sti    
  4071fd:	add    bh,bh
  4071ff:	outs   dx,BYTE PTR ds:[esi]
  407200:	jmp    FWORD PTR [esi-0x89ffc9]
  407206:	adc    DWORD PTR [edx],0x0
  407209:	sbb    DWORD PTR [edi-0x34],edx
  40720c:	push   ebx
  40720d:	mov    DWORD PTR [eax],eax
  40720f:	ret    
  407210:	add    BYTE PTR [ebp+0x46],bh
  407213:	add    BYTE PTR [edi+edi*8-0x7cff7300],dl
  40721a:	aam    0x0
  40721c:	cmp    edi,0x4dffa800
  407222:	mov    esp,0xffff6800
  407227:	cmp    DWORD PTR cs:[ebx-0x68],0x0
  40722c:	push   0x430083
  407231:	inc    esi
  407232:	je     0x4071b7
  407234:	and    eax,0xffe7ffff
  407239:	imul   edx,DWORD PTR ds:0xffff4c00,0xffffffc7
  407240:	adc    DWORD PTR [esi],0xffffffe5
  407243:	cmp    DWORD PTR [eax],0xffffffff
  407246:	dec    DWORD PTR [ebx+eax*4]
  407249:	adc    eax,0x79839a
  40724e:	push   ebp
  407250:	call   DWORD PTR [ebp-0x1e]
  407253:	(bad)  
  407254:	jmp    0x407256
  407256:	jmp    FWORD PTR [edi-0xc4117d]
  40725c:	xchg   edx,eax
  40725d:	inc    DWORD PTR [eax]
  40725f:	add    DWORD PTR [eax],eax
  407261:	ucomiss xmm7,xmm7
  407264:	sub    bh,bh
  407266:	add    bh,ch
  407268:	call   DWORD PTR [esi+0x1e]
  40726b:	add    BYTE PTR [esi-0x7c1c7c77],al
  407271:	xor    al,0xec
  407273:	inc    DWORD PTR [eax+eax*1+0x58002f00]
  40727a:	push   ds
  40727b:	cmp    DWORD PTR [ecx],0x0
  40727e:	inc    ebp
  407280:	add    DWORD PTR [eax+0x40],0xffffffff
  407284:	ud0    eax,DWORD PTR [eax]
  407287:	pop    edx
  407288:	(bad)  
  407289:	fistp  DWORD PTR [eax+eax*1-0x52]
  40728d:	(bad)  
  40728e:	call   FWORD PTR [ecx-0x1]
  407291:	popf   
  407292:	mov    edx,0x8929cc
  407297:	sub    al,0xff
  407299:	jbe    0x40727a
  40729b:	jmp    DWORD PTR [eax-0x1]
  40729e:	mov    DWORD PTR [ebx-0x1],ebx
  4072a1:	jne    0x4072da
  4072a3:	and    DWORD PTR [ecx-0x1],0xffffffcc
  4072a7:	cmp    eax,0xcc6e34ff
  4072ac:	cmc    
  4072ad:	add    DWORD PTR [eax],0xf
  4072b0:	adc    esi,0x6
  4072b3:	add    BYTE PTR [ecx],bl
  4072b5:	add    BYTE PTR [eax],al
  4072b7:	leave  
  4072b8:	dec    DWORD PTR [ecx-0x23]
  4072bb:	add    BYTE PTR [ebp-0x77],ah
  4072be:	add    BYTE PTR [eax],dh
  4072c0:	add    BYTE PTR [esp+edi*8-0x1],cl
  4072c4:	retf   0xccff
  4072c7:	sti    
  4072c8:	adc    DWORD PTR [edi+0xc2ffb9],0xffffffcc
  4072cf:	mov    bh,0x0
  4072d1:	leave  
  4072d2:	jge    0x4072d3
  4072d4:	pop    ds
  4072d5:	(bad)  
  4072d6:	jmp    FWORD PTR [esi-0x33f35401]
  4072dc:	sar    bh,cl
  4072de:	call   FWORD PTR [edx+0x0]
  4072e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e2:	dec    eax
  4072e3:	push   DWORD PTR [edi+0x0]
  4072e6:	push   DWORD PTR [edx]
  4072e8:	and    DWORD PTR [edx+0x37],0xffffffff
  4072ec:	dec    ebx
  4072ed:	cmp    edi,0x46
  4072f0:	call   FWORD PTR [ebp-0x7ce7333a]
  4072f6:	jmp    DWORD PTR [ebx-0xf08b7d]
  4072fc:	and    BYTE PTR [eax],al
  4072fe:	inc    DWORD PTR [ebp-0x7cebe901]
  407304:	stos   BYTE PTR es:[edi],al
  407305:	add    bh,bh
  407307:	aaa    
  407308:	jmp    edx
  40730a:	outs   dx,BYTE PTR ds:[esi]
  40730b:	add    BYTE PTR [ebp-0x90001],bh
  407311:	and    dh,cl
  407313:	(bad)  
  407314:	mov    edi,0xff7bffff
  407319:	xchg   ecx,eax
  40731a:	mov    bh,bh
  40731c:	into   
  40731d:	add    DWORD PTR [ebx-0x1383335d],0x0
  407324:	pop    esi
  407325:	add    ah,cl
  407327:	cmp    DWORD PTR [eax],eax
  407329:	ins    DWORD PTR es:[edi],dx
  40732a:	sub    bh,bh
  40732c:	dec    ebx
  40732d:	or     esp,0xffffffe7
  407330:	jmp    DWORD PTR [edx]
  407332:	sub    bh,bh
  407334:	sbb    edi,edi
  407336:	add    bl,dl
  407338:	int3   
  407339:	add    DWORD PTR [ebx+eax*4-0xc76ffe1],edi
  407340:	call   FWORD PTR [eax]
  407342:	push   edi
  407343:	add    BYTE PTR [esi-0x1],cl
  407346:	add    BYTE PTR [ecx+0x0],dl
  407349:	push   eax
  40734a:	push   0x83ffb5ff
  40734f:	or     al,0x0
  407351:	call   0xffa17305
  407356:	inc    DWORD PTR [ebx-0x7d]
  407359:	dec    ebp
  40735a:	pop    edi
  40735b:	jmp    eax
  40735d:	int3   
  40735e:	add    BYTE PTR [ebp-0x743d01],bl
  407364:	xchg   esi,eax
  407365:	add    BYTE PTR [ebx-0xeff7c59],al
  40736b:	add    BYTE PTR [esi-0x1],cl
  40736e:	add    BYTE PTR [edx],bh
  407370:	add    BYTE PTR [ecx+0x71],bl
  407373:	int3   
  407374:	out    0xff,eax
  407376:	cmp    ebx,0xffffffff
  407379:	adc    esp,eax
  40737b:	xor    DWORD PTR [edx+0x99ff83],0x44
  407382:	mov    BYTE PTR [eax],al
  407384:	xor    al,0x83
  407386:	call   DWORD PTR ds:0xffafe800
  40738c:	mov    al,BYTE PTR [eax]
  40738e:	dec    edx
  407390:	int3   
  407391:	loope  0x407339
  407393:	mov    DWORD PTR [esi-0x1],esi
  407396:	call   FWORD PTR [eax-0x1]
  407399:	sar    DWORD PTR [ecx+0x830583],0x55
  4073a0:	sbb    DWORD PTR [ecx+0x36],0xffffffff
  4073a4:	dec    esi
  4073a5:	(bad)  
  4073a6:	push   ecx
  4073a8:	int3   
  4073a9:	sbb    DWORD PTR [esi],0xccffd0ff
  4073af:	icebp  
  4073b0:	(bad)  
  4073b1:	jge    0x40737f
  4073b3:	int3   
  4073b4:	clc    
  4073b5:	inc    DWORD PTR [eax]
  4073b7:	cmp    bh,0x4f
  4073ba:	cmp    edi,0x9989ff3e
  4073c0:	push   DWORD PTR [edx]
  4073c2:	xchg   ecx,eax
  4073c3:	int3   
  4073c4:	or     DWORD PTR [eax],eax
  4073c6:	jmp    DWORD PTR [edx-0x62dc01]
  4073cc:	mov    ebp,0xff59ff83
  4073d1:	(bad)  
  4073d2:	fmul   st(4),st
  4073d4:	aam    0xff
  4073d6:	add    BYTE PTR [edi],bh
  4073d8:	add    BYTE PTR [edx-0x9a007f],bl
  4073de:	add    BYTE PTR [edx],dl
  4073e0:	call   ecx
  4073e2:	loopne 0x407367
  4073e4:	jp     0x4073e6
  4073e6:	(bad)  
  4073e7:	jle    0x4073b5
  4073e9:	mov    edx,0x488312
  4073ee:	(bad)  
  4073ef:	jnp    0x407374
  4073f1:	xchg   ebx,eax
  4073f2:	cmp    eax,0xffffc3ff
  4073f7:	sub    edi,edi
  4073f9:	inc    esi
  4073fa:	push   ds
  4073fb:	int3   
  4073fc:	loop   0x4073ca
  4073fe:	(bad)  
  4073ff:	(bad)  
  407401:	xor    BYTE PTR [edi+0x0],ah
  407404:	cwde   
  407405:	(bad)  
  407406:	(bad)  
  407407:	cli    
  407408:	mov    DWORD PTR [edx],edx
  40740a:	(bad)  
  40740c:	fwait
  40740d:	inc    DWORD PTR [eax]
  40740f:	pop    ebp
  407410:	jmp    DWORD PTR [ebx-0x65]
  407413:	int3   
  407414:	int3   
  407415:	or     DWORD PTR [ecx-0x1c7400c6],0xffffff83
  40741c:	dec    ebx
  40741d:	int3   
  40741e:	call   DWORD PTR [ebx]
  407420:	add    BYTE PTR [ecx],bl
  407422:	(bad)  
  407424:	cdq    
  407425:	(bad)  
  407426:	push   DWORD PTR [ebp-0x7d]
  407429:	iret   
  40742a:	cs add ch,al
  40742d:	add    bh,bh
  40742f:	(bad)  
  407431:	clc    
  407432:	in     al,0xff
  407434:	jb     0x407402
  407436:	inc    DWORD PTR ds:0x838b79ff
  40743c:	pop    edx
  40743d:	inc    DWORD PTR [eax]
  40743f:	mov    bl,0x0
  407441:	pop    edi
  407442:	xchg   edi,eax
  407443:	push   DWORD PTR [ecx+0x4c0083]
  407449:	shr    DWORD PTR [ebp+0x0],1
  40744c:	nop
  40744d:	add    DWORD PTR [ebx+0x6f55ff36],0xffffffff
  407454:	xlat   BYTE PTR ds:[ebx]
  407455:	mov    edi,edi
  407457:	xchg   ecx,eax
  407458:	add    BYTE PTR [edi-0x7ce47cdf],dl
  40745e:	push   edx
  407460:	dec    eax
  407462:	pop    esi
  407463:	call   FWORD PTR [edi]
  407465:	inc    DWORD PTR [eax]
  407467:	inc    ecx
  407468:	add    BYTE PTR [ebp-0xd67ccd],ch
  40746e:	mov    DWORD PTR [ebx],ebp
  407470:	mov    DWORD PTR [eax-0x717c65],edx
  407476:	add    BYTE PTR [ecx],al
  407478:	inc    esi
  40747a:	mov    bl,0x89
  40747c:	fmul   st(4),st
  40747e:	dec    edi
  407480:	add    BYTE PTR [ebp+0x3d],al
  407483:	sbb    DWORD PTR [edx],0x0
  407486:	jmp    edx
  407488:	add    BYTE PTR [ecx+0x7e],bl
  40748b:	(bad)  
  40748c:	mov    esp,0x99ff83
  407491:	outs   dx,BYTE PTR ds:[esi]
  407492:	xchg   DWORD PTR [eax],eax
  407494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407495:	cmp    edi,0x1d
  407498:	add    BYTE PTR [ebx],ah
  40749a:	jp     0x407425
  40749c:	lds    eax,FWORD PTR [eax]
  40749e:	mov    DWORD PTR [edi+edi*8-0x760040a8],esp
  4074a5:	inc    DWORD PTR [eax]
  4074a7:	mov    eax,DWORD PTR [eax]
  4074a9:	or     BYTE PTR [esi+0x0],cl
  4074ac:	(bad)  
  4074ad:	cmp    edi,0x2
  4074b0:	mov    DWORD PTR [ecx-0x41],eax
  4074b3:	dec    DWORD PTR [edi-0x77]
  4074b6:	call   FWORD PTR [esi+0x0]
  4074b9:	cmp    al,0x14
  4074bb:	add    cl,ah
  4074bd:	add    DWORD PTR [eax],0x2
  4074c0:	sub    esp,0x73
  4074c3:	xor    ebx,0xffffff89
  4074c6:	jmp    eax
  4074c8:	add    BYTE PTR [ecx-0x1aff51],dh
  4074ce:	int3   
  4074cf:	push   es
  4074d0:	call   DWORD PTR [eax+ecx*8-0x33006034]
  4074d7:	dec    ecx
  4074d8:	dec    DWORD PTR [edx-0x2c]
  4074db:	sbb    DWORD PTR [edx-0x3301007d],0xffffff94
  4074e2:	sub    al,BYTE PTR [eax]
  4074e4:	jmp    0x5a1b:0xff4effff
  4074eb:	sub    DWORD PTR [edi-0x1],0xffffff83
  4074ef:	sar    bh,cl
  4074f1:	test   eax,0xccbe00b0
  4074f6:	add    BYTE PTR [edx+0xb0c5ff],ch
  4074fc:	xor    edi,edi
  4074fe:	add    BYTE PTR [edx],ah
  407500:	add    al,cl
  407502:	clc    
  407503:	add    BYTE PTR [eax+0x63ff00],bh
  407509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40750a:	and    edi,edi
  40750c:	rol    DWORD PTR [ebx-0x1d009201],1
  407512:	xchg   edi,eax
  407513:	add    dl,ah
  407515:	add    BYTE PTR [eax],al
  407517:	fs (bad) 
  407519:	jg     0x40755f
  40751b:	add    cl,bh
  40751d:	add    DWORD PTR [ebx-0x9f700c0],0xffffff83
  407524:	(bad)  
  407525:	int3   
  407526:	or     DWORD PTR [edi-0x7d],0x7a
  40752a:	jecxz  0x40752c
  40752c:	out    dx,eax
  40752d:	add    BYTE PTR [eax],al
  40752f:	cmp    DWORD PTR [ebx+0x4b008327],eax
  407535:	int3   
  407536:	jmp    FWORD PTR [edi+0x0]
  407539:	lods   eax,DWORD PTR ds:[esi]
  40753a:	xchg   ecx,eax
  40753b:	(bad)  
  40753c:	clc    
  40753d:	add    DWORD PTR [eax],0x60
  407540:	jmp    DWORD PTR [edi+eiz*4]
  407543:	sub    DWORD PTR [edi+edi*8+0x6cccd500],0x22
  40754b:	add    BYTE PTR [eax+eax*1-0x1],dh
  40754f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407550:	add    BYTE PTR [ebx],cl
  407552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407553:	mov    DWORD PTR [eax],ebp
  407555:	(bad)  
  407556:	call   DWORD PTR [edx]
  407558:	push   esp
  40755a:	aas    
  40755b:	call   FWORD PTR [edx-0xfe0100]
  407561:	inc    esi
  407562:	push   cs
  407563:	inc    DWORD PTR [edi+edi*8+0x4a00cd89]
  40756a:	pop    edx
  40756b:	dec    DWORD PTR [edi-0x7cb33301]
  407571:	in     al,dx
  407572:	dec    esi
  407573:	push   DWORD PTR [eax-0x1]
  407576:	jmp    ecx
  407578:	int3   
  407579:	fcmove st,st(0)
  40757b:	add    BYTE PTR [edi],dh
  40757d:	(bad)  
  40757e:	jmp    DWORD PTR [eax-0x4a0e01]
  407584:	pop    ds
  407585:	inc    DWORD PTR [eax]
  407587:	rol    BYTE PTR [eax],1
  407589:	out    0x22,al
  40758b:	add    esp,0xffffff83
  40758e:	mov    DWORD PTR [edx],esp
  407590:	dec    DWORD PTR [edx-0x65ff62]
  407596:	jmp    DWORD PTR [ecx-0x7d]
  407599:	loop   0x40751d
  40759b:	call   FWORD PTR [eax]
  40759d:	mov    DWORD PTR [ebx+0x3adecc27],eax
  4075a3:	(bad)  
  4075a4:	jl     0x4075a5
  4075a6:	call   edx
  4075a8:	jmp    FWORD PTR [esi+0x6c]
  4075ab:	add    BYTE PTR [ebp-0x7d],ah
  4075ae:	and    DWORD PTR [eax+0x1dce89],0xc
  4075b5:	add    bh,bh
  4075b7:	cmp    al,0xff
  4075b9:	sub    eax,0x5200a6
  4075be:	add    BYTE PTR [ebx],dl
  4075c0:	xor    DWORD PTR [esi+eax*8],0xffffffff
  4075c4:	fadd   QWORD PTR [eax]
  4075c6:	add    BYTE PTR [eax],cl
  4075c8:	call   DWORD PTR ds:0x1cffc5
  4075ce:	add    BYTE PTR [edx],ch
  4075d0:	jmp    FWORD PTR [ebx-0xab0043]
  4075d6:	add    BYTE PTR [eax-0x1],al
  4075d9:	out    0x98,al
  4075db:	add    BYTE PTR [ebx-0x910001],al
  4075e1:	mov    dh,0x3b
  4075e3:	add    BYTE PTR [esi],ch
  4075e5:	(bad)  
  4075e6:	(bad)  
  4075e7:	in     eax,dx
  4075e8:	int3   
  4075e9:	xchg   BYTE PTR [edi+edi*8],cl
  4075ec:	sub    bh,bh
  4075ee:	mov    DWORD PTR [ebx-0x301f01],esi
  4075f4:	ret    
  4075f5:	cmp    edi,0x7d
  4075f8:	mov    DWORD PTR ds:0xff7800d1,edx
  4075fe:	mov    DWORD PTR ds:0xe7c283,edi
  407604:	clc    
  407605:	mov    DWORD PTR [eax],eax
  407607:	mov    edi,0xff1c60ff
  40760c:	mov    BYTE PTR [eax],0x0
  40760f:	cmp    eax,0xccc3bb00
  407614:	sar    edi,cl
  407616:	inc    esi
  407618:	jmp    FWORD PTR [ebp-0x13]
  40761b:	call   DWORD PTR [eax]
  40761d:	add    bh,bh
  40761f:	ja     0x407621
  407621:	imul   ebp,DWORD PTR [edx-0x2e01],0x69
  407628:	call   FWORD PTR [eax+ebx*1+0x0]
  40762c:	inc    edi
  40762d:	add    DWORD PTR [eax],0xffffffcf
  407630:	int3   
  407631:	test   BYTE PTR [ebx],cl
  407633:	add    BYTE PTR [eax+eax*1-0x6f33f17d],bl
  40763a:	cmp    al,0x0
  40763c:	test   eax,0x83478383
  407641:	outs   dx,BYTE PTR ds:[esi]
  407642:	ret    
  407643:	add    BYTE PTR [edi-0x7ce90100],bl
  407649:	aaa    
  40764a:	cmp    eax,DWORD PTR [eax]
  40764c:	sahf   
  40764d:	int3   
  40764e:	xor    DWORD PTR [ebp-0x1],0xffffffd9
  407652:	mov    al,ds:0x89cc4aff
  407657:	sub    cl,ah
  407659:	ja     0x407661
  40765b:	add    BYTE PTR [ecx-0xf97d00],bh
  407661:	(bad)  
  407663:	int3   
  407664:	arpl   WORD PTR [ebx-0x21ff7100],ax
  40766a:	pop    ss
  40766b:	(bad)  
  40766c:	jle    0x4075f1
  40766e:	add    BYTE PTR [esi],ah
  407670:	sbb    DWORD PTR ds:0xbb008a,0x0
  407677:	mov    ch,0x83
  407679:	(bad)  
  40767a:	mov    ebx,0x83e9ff
  40767f:	add    edi,edi
  407681:	mov    BYTE PTR [edi-0x34],cl
  407684:	das    
  407685:	int3   
  407686:	mov    DWORD PTR [ebp-0x7d],esp
  407689:	jp     0x40768e
  40768b:	and    DWORD PTR [eax],0xffffffff
  40768e:	(bad)  
  40768f:	jnp    0x407614
  407691:	adc    BYTE PTR [esi],al
  407693:	add    BYTE PTR [edi+edi*8],cl
  407696:	(bad)  
  407697:	stc    
  407698:	add    dh,cl
  40769a:	adc    ah,cl
  40769c:	(bad)  
  40769d:	(bad)  
  40769e:	call   esi
  4076a0:	add    BYTE PTR [edx+0x14],al
  4076a3:	int3   
  4076a4:	lea    eax,[eax]
  4076a6:	add    BYTE PTR [ecx+ecx*4+0x21],cl
  4076aa:	cmp    edi,edi
  4076ac:	mov    edi,0x83338300
  4076b1:	add    dl,BYTE PTR [ebx+eax*4+0x2700ccac]
  4076b8:	jmp    FWORD PTR [ebp+0x10]
  4076bb:	add    cl,bl
  4076bd:	add    DWORD PTR [eax],0xffffffdb
  4076c0:	dec    esi
  4076c2:	hlt    
  4076c3:	add    ah,cl
  4076c5:	add    BYTE PTR [eax],al
  4076c7:	std    
  4076c8:	adc    DWORD PTR [edx-0x25],0xffffffff
  4076cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076cd:	add    BYTE PTR [ebx+0x34fbff33],al
  4076d3:	jmp    FWORD PTR [edx]
  4076d5:	add    DWORD PTR [eax],0xffffffdd
  4076d8:	call   DWORD PTR [eax+0x65ff44]
  4076de:	jmp    DWORD PTR [ebx-0x1]
  4076e1:	cmp    eax,DWORD PTR [edi-0x7c7c3701]
  4076e7:	cmp    eax,0xc11ecc
  4076ec:	jbe    0x407677
  4076ee:	inc    DWORD PTR [eax-0x77]
  4076f1:	sub    DWORD PTR [edi+0x898700],esi
  4076f7:	out    0x0,al
  4076f9:	into   
  4076fa:	repz jmp DWORD PTR [ecx]
  4076fd:	add    BYTE PTR [eax],al
  4076ff:	sub    eax,DWORD PTR [eax]
  407701:	ins    BYTE PTR es:[edi],dx
  407702:	fadd   QWORD PTR [ebx+0x4300ffe3]
  407708:	add    BYTE PTR [ecx+edi*4-0xffe300],bl
  40770f:	lahf   
  407710:	cmp    DWORD PTR [ecx-0xfe766d],0xffffff83
  407717:	mov    cl,0x83
  407719:	xchg   edx,eax
  40771a:	xchg   DWORD PTR [ebx+0x1d89ffbb],eax
  407720:	sbb    eax,0x7b
  407723:	add    BYTE PTR [ebx-0x7d],ch
  407726:	add    BYTE PTR [eax+0xd3ecff],cl
  40772c:	mov    eax,DWORD PTR [ebx-0x66ff9600]
  407732:	loopne 0x407700
  407734:	sbb    BYTE PTR [eax],al
  407736:	add    BYTE PTR ds:0x5a7100,bl
  40773c:	test   al,0x0
  40773e:	add    BYTE PTR [esi-0x34],bh
  407741:	stc    
  407742:	ror    esp,cl
  407744:	mov    al,ds:0x56ffff
  407749:	in     al,0x44
  40774b:	and    DWORD PTR [esi-0xf53301],0x50
  407752:	ds dec ebp
  407755:	inc    DWORD PTR [eax]
  407757:	inc    esi
  407758:	jmp    FWORD PTR [esi+0x6800f6]
  40775e:	(bad)  
  40775f:	jge    0x407760
  407761:	mov    edi,0xff2b8361
  407766:	add    BYTE PTR [ebp+0x985383],al
  40776c:	mov    ?,edi
  40776e:	int3   
  40776f:	push   ebp
  407770:	mov    DWORD PTR [edi],esp
  407772:	(bad)  
  407776:	or     DWORD PTR [edi-0x7d],0xffffff9a
  40777a:	lock add BYTE PTR [ecx-0x1],ah
  40777e:	int3   
  40777f:	ret    
  407780:	mov    DWORD PTR [edi-0x4f],esp
  407783:	add    bh,bh
  407785:	add    BYTE PTR [eax],al
  407787:	xchg   bh,bh
  407789:	or     ch,cl
  40778b:	mov    ecx,edi
  40778d:	(bad)  
  40778e:	dec    DWORD PTR [ebx]
  407790:	inc    DWORD PTR [edi+0xf200ae]
  407796:	add    bl,bh
  407798:	add    BYTE PTR [esp+ebp*4-0x1],ah
  40779c:	in     eax,0xff
  40779e:	sbb    DWORD PTR [esi],0xffffffcc
  4077a1:	pop    es
  4077a2:	cmp    bh,bh
  4077a4:	push   edi
  4077a5:	cmp    edi,0x4
  4077a8:	add    BYTE PTR [eax],bl
  4077aa:	arpl   sp,cx
  4077ac:	jo     0x4077ae
  4077ae:	call   DWORD PTR [edi+0x79d8ff]
  4077b4:	adc    eax,0x83f700cc
  4077b9:	mov    ch,0xed
  4077bb:	add    bh,cl
  4077bd:	(bad)  
  4077be:	call   ebx
  4077c0:	cmp    DWORD PTR [edi+0x61],0x0
  4077c4:	add    eax,DWORD PTR [ebx-0x487ce801]
  4077ca:	clc    
  4077cb:	add    BYTE PTR [esi-0x1],cl
  4077ce:	jmp    DWORD PTR [edi]
  4077d0:	dec    DWORD PTR [ebp-0xa]
  4077d3:	add    BYTE PTR [eax+eax*1+0x1500e3ff],dl
  4077da:	lods   eax,DWORD PTR ds:[esi]
  4077db:	add    BYTE PTR [edi],cl
  4077dd:	add    bh,bh
  4077df:	repnz inc DWORD PTR [ebx+0x2b]
  4077e3:	jmp    DWORD PTR [edx-0x1]
  4077e6:	call   FWORD PTR [edx]
  4077e8:	add    BYTE PTR [eax+edx*8-0x1],cl
  4077ec:	cwde   
  4077ed:	inc    DWORD PTR [ebx-0x18a900ca]
  4077f3:	add    BYTE PTR [ebx-0x1],ch
  4077f6:	int3   
  4077f7:	clc    
  4077f8:	add    BYTE PTR [edx],bl
  4077fa:	mov    edi,edi
  4077fc:	es add bh,bh
  4077ff:	ror    esp,cl
  407801:	rcr    DWORD PTR [ecx-0xff4b77],cl
  407807:	(bad)  
  407808:	int3   
  407809:	gs jg  0x40780c
  40780c:	push   esp
  40780d:	add    bh,bh
  40780f:	imul   eax,DWORD PTR [ebx-0x7000e102],0xffffff83
  407816:	add    BYTE PTR [ecx],ch
  407818:	dec    DWORD PTR [ebx]
  40781a:	dec    ebx
  40781b:	call   DWORD PTR [edi]
  40781d:	(bad)  
  40781e:	call   DWORD PTR [ebx]
  407820:	sub    DWORD PTR [ebp-0x7c677c82],0xffffffff
  407827:	test   bh,bh
  407829:	mov    al,ds:0x40065
  40782e:	jmp    FWORD PTR [esi-0x1]
  407831:	inc    esp
  407832:	add    al,0xff
  407834:	fiadd  DWORD PTR [eax]
  407836:	push   DWORD PTR [edx+0x0]
  407839:	and    esp,DWORD PTR [edi+edi*8+0x2]
  40783d:	add    BYTE PTR [eax],al
  40783f:	(bad)  
  407840:	call   DWORD PTR [eax-0x3500a6]
  407846:	add    dh,bl
  407848:	add    BYTE PTR [ebx+0x10],ah
  40784b:	call   FWORD PTR [esi+0x3e00ff]
  407851:	aam    0x82
  407853:	jmp    ebx
  407855:	inc    DWORD PTR [ebx+0x7be483f5]
  40785b:	add    ch,bl
  40785d:	(bad)  
  40785e:	dec    edi
  407860:	or     DWORD PTR [ebx-0xd],0xffffffff
  407864:	ins    BYTE PTR es:[edi],dx
  407865:	add    bh,bh
  407867:	sub    bh,bh
  407869:	data16 loop 0x40786b
  40786c:	jo     0x4077f1
  40786e:	call   DWORD PTR [edx-0x34]
  407871:	mov    esi,0xff5a0002
  407876:	inc    DWORD PTR [ecx+0x1bc600]
  40787c:	mov    ebp,0x837e00ff
  407881:	xchg   esi,eax
  407882:	mov    al,0x89
  407884:	mov    edi,0x8942ffcc
  407889:	push   es
  40788a:	pop    eax
  40788b:	add    BYTE PTR [ebx-0x1],cl
  40788e:	push   DWORD PTR [edi+edi*8]
  407891:	cmc    
  407892:	inc    esp
  407893:	xor    DWORD PTR [edi-0x1],0xffffffff
  407897:	ins    BYTE PTR es:[edi],dx
  407898:	dec    DWORD PTR [ecx+0xf9001c]
  40789e:	jmp    DWORD PTR [edi+edi*8-0x2d]
  4078a2:	cmp    bh,0x54
  4078a5:	mov    DWORD PTR [eax],eax
  4078a7:	iret   
  4078a8:	jmp    ebx
  4078aa:	xlat   BYTE PTR ds:[ebx]
  4078ab:	add    BYTE PTR [ebx-0x1],cl
  4078ae:	dec    DWORD PTR [esi-0x7cffcc01]
  4078b4:	iret   
  4078b5:	inc    DWORD PTR [eax]
  4078b7:	in     al,0xff
  4078b9:	shl    DWORD PTR [eax],cl
  4078bb:	jmp    FWORD PTR [edi-0xd20001]
  4078c1:	or     esp,DWORD PTR [edi+edi*8+0x62]
  4078c5:	add    bh,bh
  4078c7:	ret    
  4078c8:	int3   
  4078c9:	dec    edx
  4078ca:	inc    esi
  4078cb:	add    al,ch
  4078cd:	int3   
  4078ce:	(bad)  
  4078cf:	mov    ebp,0xff49d4ff
  4078d4:	xchg   edi,eax
  4078d5:	add    bh,bh
  4078d7:	push   cs
  4078d8:	add    BYTE PTR [ebx],ch
  4078da:	dec    eax
  4078db:	add    al,bh
  4078dd:	add    bh,bh
  4078df:	xor    ecx,DWORD PTR [ecx+0x5fffd011]
  4078e5:	(bad)  
  4078e6:	(bad)  
  4078e7:	out    dx,eax
  4078e8:	(bad)  
  4078e9:	fcomp  DWORD PTR [esi+0x835b83]
  4078ef:	imul   edi,edi,0x46
  4078f2:	sti    
  4078f3:	(bad)  
  4078f4:	out    dx,al
  4078f5:	inc    DWORD PTR [eax]
  4078f7:	test   al,0xff
  4078f9:	in     eax,0xa
  4078fb:	add    dl,bh
  4078fd:	add    DWORD PTR [ebx-0x50077c88],0xffffffcc
  407904:	cmp    edi,edi
  407906:	int3   
  407907:	scas   eax,DWORD PTR es:[edi]
  407908:	jmp    DWORD PTR [edi+0x98ff07]
  40790e:	add    BYTE PTR [edx],cl
  407910:	call   DWORD PTR [edi]
  407912:	and    BYTE PTR [ebx-0x20760043],al
  407918:	mov    DWORD PTR [edx+0x2e005e],esi
  40791e:	call   FWORD PTR [ecx]
  407920:	add    BYTE PTR [esi+esi*1-0x1],bh
  407924:	mov    ch,0xcc
  407926:	add    al,dh
  407928:	add    cl,dh
  40792a:	xor    eax,DWORD PTR [ebx-0x427c00a5]
  407930:	push   DWORD PTR [esi]
  407932:	adc    edi,edi
  407934:	add    DWORD PTR [ecx+0x3efff100],ecx
  40793a:	mov    ah,0x83
  40793c:	and    eax,0x6283cc
  407941:	adc    eax,0xff858382
  407946:	jmp    DWORD PTR [edi]
  407948:	add    BYTE PTR [esi-0x45],al
  40794b:	call   FWORD PTR [edi+edi*8-0x1]
  40794f:	mov    ds:0x83400689,eax
  407954:	std    
  407955:	(bad)  
  407956:	inc    DWORD PTR [esi+0x0]
  407959:	aad    0x67
  40795b:	(bad)  
  40795c:	inc    DWORD PTR [ebx-0x4a002e34]
  407962:	data16 int3 
  407964:	mov    al,0xcc
  407966:	dec    DWORD PTR [esi-0xda2001]
  40796c:	out    0xff,eax
  40796e:	call   FWORD PTR [ebp-0x59dd01]
  407974:	clc    
  407975:	add    bh,bh
  407977:	ret    0x9189
  40797a:	dec    BYTE PTR [ecx+0x26cc00e5]
  407980:	call   DWORD PTR [esi]
  407982:	ret    0x44ff
  407985:	(bad)  
  407986:	jmp    DWORD PTR [edi+edi*8-0x1b]
  40798a:	ror    DWORD PTR [ecx+0x6dffffda],0xff
  407991:	sub    ecx,esp
  407993:	add    BYTE PTR [eax],dl
  407995:	add    BYTE PTR [eax],al
  407997:	dec    esi
  407998:	(bad)  
  407999:	std    
  40799a:	xchg   esp,eax
  40799b:	adc    DWORD PTR [ebp-0x1],0xffffffff
  40799f:	aas    
  4079a0:	mov    DWORD PTR [ecx+esi*4],ecx
  4079a3:	jmp    FWORD PTR [ebx]
  4079a5:	int3   
  4079a6:	inc    DWORD PTR [ebx+eax*4]
  4079a9:	sahf   
  4079aa:	jge    0x4079ab
  4079ac:	loop   0x4079ad
  4079ae:	add    DWORD PTR [edi],0xffffff89
  4079b1:	idiv   DWORD PTR [edi+0x0]
  4079b4:	outs   dx,BYTE PTR ds:[esi]
  4079b5:	(bad)  
  4079b6:	call   DWORD PTR [edx]
  4079b8:	int3   
  4079b9:	xor    edi,0x0
  4079bc:	es int3 
  4079be:	add    BYTE PTR [edi-0x1],ch
  4079c1:	cmp    esi,0xffffff83
  4079c4:	adc    bh,bh
  4079c6:	add    BYTE PTR [eax],cl
  4079c8:	(bad)  
  4079c9:	jmp    0xb189:0xff35ff4c
  4079d0:	dec    DWORD PTR [esi-0x33837c50]
  4079d6:	add    dh,dh
  4079d8:	int3   
  4079d9:	mov    edx,0xe000f9
  4079de:	call   DWORD PTR [ecx]
  4079e0:	int3   
  4079e1:	mov    esi,0xcc17ff2f
  4079e6:	int3   
  4079e7:	mov    eax,0xff75d3ff
  4079ec:	and    al,0xff
  4079ee:	inc    DWORD PTR [edi+0xca6f83]
  4079f4:	mov    ecx,0x8331ffff
  4079f9:	stc    
  4079fa:	cmp    BYTE PTR [eax],al
  4079fc:	pop    ebp
  4079fd:	(bad)  
  4079fe:	call   DWORD PTR [ebx+0x0]
  407a01:	aaa    
  407a02:	inc    DWORD PTR [ebx+0x39cc0018]
  407a08:	int3   
  407a09:	outs   dx,BYTE PTR ds:[esi]
  407a0a:	test   al,0x83
  407a0c:	mov    bh,0x83
  407a0e:	add    BYTE PTR [edi+edi*8],cl
  407a11:	dec    esi
  407a12:	mov    esi,0x830099ff
  407a17:	jbe    0x407a19
  407a19:	test   al,0xf3
  407a1b:	jmp    DWORD PTR [ebp-0x7c630001]
  407a21:	mov    dh,0x44
  407a23:	int3   
  407a24:	and    bh,bh
  407a26:	add    BYTE PTR [edx],bh
  407a28:	adc    DWORD PTR ds:0x83eeff8f,0xffffffff
  407a2f:	sbb    DWORD PTR [eax],eax
  407a31:	sub    esp,esp
  407a33:	add    BYTE PTR [ecx],ah
  407a35:	(bad)  
  407a36:	call   DWORD PTR [eax]
  407a38:	add    BYTE PTR [esp+ebp*1],ah
  407a3b:	jmp    DWORD PTR [edi+edi*8]
  407a3e:	add    BYTE PTR [ebp-0x7d],ch
  407a41:	movq   mm0,QWORD PTR [ebx+0x3bffff20]
  407a48:	call   FWORD PTR [ebx+0x47]
  407a4b:	add    BYTE PTR [edx],ch
  407a4d:	add    bh,bh
  407a4f:	jmp    0x83c4:0x320b00
  407a56:	(bad)  
  407a57:	out    dx,eax
  407a58:	add    BYTE PTR [ebp+edi*8-0x1],ch
  407a5c:	ret    0xff
  407a5f:	imul   eax,DWORD PTR [ebx-0x20006f24],0xfdff00
  407a69:	leave  
  407a6a:	test   eax,0xffff79ff
  407a6f:	cdq    
  407a70:	push   DWORD PTR [esi+ebp*2-0x76336400]
  407a77:	mov    ebx,0xff54d3ff
  407a7c:	js     0x407a7d
  407a7e:	add    BYTE PTR [edi+edi*8-0x7f766fb6],dl
  407a85:	int3   
  407a86:	(bad)  
  407a87:	jmp    0xe0540f
  407a8c:	add    eax,0xff1f00cc
  407a91:	fimul  WORD PTR ds:0xcc89b583
  407a97:	push   ebp
  407a98:	add    al,ah
  407a9a:	adc    eax,0x89000bff
  407a9f:	outs   dx,DWORD PTR ds:[esi]
  407aa0:	add    BYTE PTR [edx],ch
  407aa2:	push   cs
  407aa3:	(bad)  
  407aa4:	jge    0x407aa5
  407aa6:	(bad)  
  407aa7:	in     eax,dx
  407aa8:	dec    DWORD PTR [edx-0x7c3b0085]
  407aae:	sub    DWORD PTR [ebx-0x34],0x44
  407ab2:	scas   al,BYTE PTR es:[edi]
  407ab3:	add    dl,ch
  407ab5:	(bad)  
  407ab6:	push   edi
  407ab8:	(bad)  
  407ab9:	stc    
  407aba:	(bad)  
  407abc:	clc    
  407abd:	(bad)  
  407abe:	push   DWORD PTR [ebx]
  407ac0:	add    BYTE PTR [ebp+ecx*8+0x898400],al
  407ac7:	mov    dh,0xff
  407ac9:	sub    BYTE PTR [ecx-0xe401],cl
  407acf:	jnp    0x407ad0
  407ad1:	lahf   
  407ad2:	push   esi
  407ad3:	(bad)  
  407ad4:	fild   WORD PTR [eax]
  407ad6:	add    dh,bl
  407ad8:	inc    DWORD PTR [edx*2+0xffa7ff]
  407adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ae0:	jmp    FWORD PTR [ebp-0x4009d]
  407ae6:	inc    edx
  407ae8:	(bad)  
  407ae9:	fidiv  DWORD PTR [edi-0x77]
  407aec:	inc    DWORD PTR cs:[ebx-0x5e660011]
  407af3:	add    BYTE PTR [esi-0x1],ah
  407af6:	add    BYTE PTR ds:0xffe0c900,bl
  407afc:	int    0xff
  407afe:	call   DWORD PTR [ecx-0x826b01]
  407b04:	inc    ebp
  407b05:	(bad)  
  407b06:	inc    DWORD PTR [eax]
  407b08:	push   DWORD PTR [ebx]
  407b0a:	scas   eax,DWORD PTR es:[edi]
  407b0b:	sbb    DWORD PTR [edi+0x0],0xffffffff
  407b0f:	adc    eax,0x83f95283
  407b14:	test   BYTE PTR [eax],al
  407b16:	jmp    DWORD PTR [esi-0x34]
  407b19:	fisttp DWORD PTR [esi-0x1]
  407b1c:	sub    DWORD PTR [eax],eax
  407b1e:	add    BYTE PTR [eax+0x0],dh
  407b21:	sub    ebp,edi
  407b23:	jmp    DWORD PTR [eax+eax*1-0x1]
  407b27:	imul   ecx,esp,0x43cc0056
  407b2d:	add    DWORD PTR [eax],0x28
  407b30:	inc    DWORD PTR [ebx]
  407b32:	or     eax,DWORD PTR [eax]
  407b34:	pop    ecx
  407b35:	inc    DWORD PTR [ebx+0xae2ff05]
  407b3b:	xor    eax,0xffffff83
  407b3e:	inc    DWORD PTR [ecx-0x2ef600]
  407b44:	stos   DWORD PTR es:[edi],eax
  407b45:	inc    DWORD PTR [eax]
  407b47:	and    eax,0xff6fbfff
  407b4c:	fiadd  DWORD PTR [eax]
  407b4e:	int3   
  407b4f:	icebp  
  407b50:	dec    DWORD PTR [ebx+eax*1]
  407b53:	dec    ecx
  407b55:	add    bh,bh
  407b57:	enter  0xabff,0xa9
  407b5b:	call   FWORD PTR [eax-0x7cb47c01]
  407b61:	push   0x833f00ab
  407b66:	dec    DWORD PTR [edx-0x7d]
  407b69:	or     cl,BYTE PTR [eax-0x7c9c7d]
  407b6f:	jmp    FWORD PTR ss:[eax-0x65]
  407b73:	add    BYTE PTR [esi],ah
  407b75:	add    BYTE PTR [ecx+0x1e8acc98],cl
  407b7b:	add    BYTE PTR [edi-0x150001],bl
  407b81:	sub    BYTE PTR [ebp-0x7d],al
  407b84:	rol    BYTE PTR [eax],0x89
  407b87:	mov    edi,edi
  407b89:	div    BYTE PTR [edi+edi*8-0x68ff00eb]
  407b90:	push   eax
  407b92:	retf   0x1eff
  407b95:	add    BYTE PTR [eax],al
  407b97:	add    edi,edi
  407b99:	in     eax,dx
  407b9a:	xchg   edx,eax
  407b9b:	mov    DWORD PTR [edx+0x0],esi
  407b9e:	push   DWORD PTR [esi+0x0]
  407ba1:	(bad)  
  407ba2:	loope  0x407ba4
  407ba4:	and    eax,DWORD PTR [eax]
  407ba6:	jmp    DWORD PTR [ebx]
  407ba8:	inc    DWORD PTR [eax]
  407baa:	push   ebp
  407bab:	dec    DWORD PTR [eax]
  407bad:	inc    DWORD PTR [eax]
  407baf:	dec    edx
  407bb0:	inc    DWORD PTR [ecx+ebx*1-0x1]
  407bb4:	sub    bh,bh
  407bb6:	add    al,bh
  407bb8:	call   FWORD PTR [eax]
  407bba:	adc    ah,cl
  407bbc:	cmp    al,0xff
  407bbe:	mov    DWORD PTR [esi-0x332b4b01],eax
  407bc4:	push   0xffffffff
  407bc6:	add    BYTE PTR [edi-0x7d],dh
  407bc9:	mov    edi,ss
  407bcb:	(bad)  
  407bcc:	mov    ebx,0xccb9ff83
  407bd1:	mov    BYTE PTR [ebx],ch
  407bd3:	push   DWORD PTR [eax]
  407bd5:	inc    DWORD PTR [eax]
  407bd7:	bswap  esp
  407bd9:	scas   eax,DWORD PTR es:[edi]
  407bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bdb:	push   eax
  407bdd:	add    bh,bh
  407bdf:	mov    dh,0x83
  407be1:	xchg   esi,eax
  407be2:	call   0x843fb0e7
  407be7:	jae    0x2240b6d9
  407bed:	(bad)  
  407bee:	call   FWORD PTR [eax+eax*1]
  407bf1:	imul   eax,DWORD PTR [edx-0x9101],0xb
  407bf8:	push   DWORD PTR [ebx]
  407bfa:	int    0xff
  407bfc:	jl     0x407b87
  407bfe:	jmp    DWORD PTR [edi+edi*8]
  407c01:	popf   
  407c02:	(bad)  
  407c03:	push   ecx
  407c05:	int3   
  407c06:	add    ch,al
  407c08:	int3   
  407c09:	adc    al,0x84
  407c0b:	call   ebp
  407c0d:	add    bh,bh
  407c0f:	std    
  407c10:	dec    DWORD PTR [eax+0xcd83b0]
  407c16:	call   FWORD PTR [ecx-0x1]
  407c19:	or     edx,DWORD PTR [esi]
  407c1b:	jmp    FWORD PTR [ecx-0x1]
  407c1e:	inc    esp
  407c20:	add    ch,dh
  407c22:	mov    bh,bh
  407c24:	push   ecx
  407c25:	(bad)  
  407c26:	call   FWORD PTR [ebp-0x1]
  407c29:	mov    edi,0x831affab
  407c2e:	sub    DWORD PTR [ebp-0x77],0x36
  407c32:	sub    bh,bh
  407c34:	and    DWORD PTR [eax],eax
  407c36:	add    BYTE PTR [ebx+0x0],ah
  407c39:	dec    esp
  407c3a:	xchg   esp,eax
  407c3b:	add    BYTE PTR [esi-0x33a6ff01],ch
  407c41:	mov    ebx,0x2183b2
  407c46:	adc    DWORD PTR [ebx-0x1],0xb
  407c4a:	sti    
  407c4b:	mov    ebp,edi
  407c4d:	add    DWORD PTR [ebx+0x677783e1],0xffffffff
  407c54:	sbb    al,0xff
  407c56:	add    BYTE PTR [ebx-0x77],dl
  407c59:	ret    
  407c5a:	inc    eax
  407c5b:	jmp    DWORD PTR [ebx-0x10001]
  407c61:	mov    ds:0xb83d3,eax
  407c66:	inc    edx
  407c68:	add    dh,al
  407c6a:	pusha  
  407c6b:	call   FWORD PTR [esi-0x77]
  407c6e:	jmp    esi
  407c70:	int3   
  407c71:	xor    ch,al
  407c73:	mov    DWORD PTR [eax],esp
  407c75:	add    bh,bh
  407c77:	retf   0x3bff
  407c7a:	mov    ah,0xff
  407c7c:	xchg   ebp,eax
  407c7d:	add    BYTE PTR [eax],al
  407c7f:	aaa    
  407c80:	call   DWORD PTR [ebx+0xd0cce0]
  407c86:	inc    DWORD PTR [edx-0x7cdcbc34]
  407c8c:	inc    edi
  407c8d:	int3   
  407c8e:	(bad)  
  407c8f:	jnp    0x407c14
  407c91:	sbb    bh,BYTE PTR [esi]
  407c93:	push   DWORD PTR [ecx-0x33ce7601]
  407c99:	cmp    BYTE PTR [edi],bh
  407c9b:	jmp    esp
  407c9d:	add    BYTE PTR [ebx-0x62bf7615],al
  407ca3:	mov    DWORD PTR [edx],edx
  407ca5:	add    DWORD PTR [eax],0x6b
  407ca8:	int3   
  407ca9:	int3   
  407caa:	int3   
  407cab:	int3   
  407cac:	int3   
  407cad:	int3   
  407cae:	int3   
  407caf:	int3   
  407cb0:	popf   
  407cb1:	int3   
  407cb2:	push   DWORD PTR [ecx]
  407cb4:	outs   dx,BYTE PTR ds:[esi]
  407cb5:	pop    edi
  407cb6:	int3   
  407cb7:	add    BYTE PTR [edi],dh
  407cb9:	push   edi
  407cbb:	ds mov esi,0x4bff0083
  407cc1:	or     esp,0xffffff95
  407cc4:	int    0xc5
  407cc6:	inc    DWORD PTR [eax]
  407cc8:	rol    DWORD PTR [eax],cl
  407cca:	push   ecx
  407ccb:	sahf   
  407ccc:	add    eax,0xb50000ff
  407cd1:	add    DWORD PTR [ebx-0x8a22bf],0xffffffff
  407cd8:	jns    0xda41a0
  407cde:	mov    edi,edi
  407ce0:	ins    BYTE PTR es:[edi],dx
  407ce1:	(bad)  
  407ce2:	jmp    ecx
  407ce4:	mov    eax,ds:0x6accffa6
  407ce9:	and    DWORD PTR [edi+ebp*4],0x44
  407ced:	or     esp,0xffffffff
  407cf0:	ds (bad) 
  407cf2:	call   DWORD PTR [edi]
  407cf4:	bound  ebp,QWORD PTR [edx]
  407cf6:	cmp    edi,0x79
  407cf9:	add    BYTE PTR [eax],bh
  407cfb:	inc    edi
  407cfc:	outs   dx,BYTE PTR ds:[esi]
  407cfd:	add    bh,bh
  407cff:	add    DWORD PTR [ecx+0x7977ff00],0x4e
  407d06:	(bad)  
  407d07:	jmp    DWORD PTR [ebp+0xd533aff]
  407d0d:	inc    DWORD PTR [eax]
  407d0f:	jmp    edi
  407d11:	add    BYTE PTR [eax],al
  407d13:	retf   
  407d14:	add    BYTE PTR [ebx+0x0],al
  407d17:	add    dh,dh
  407d19:	(bad)  
  407d1a:	jmp    0x21ff:0x22e8
  407d21:	cmp    edi,0x7f
  407d24:	mov    al,dh
  407d26:	add    BYTE PTR [eax],al
  407d28:	aaa    
  407d29:	jmp    ebp
  407d2b:	shl    BYTE PTR [edi],cl
  407d2d:	(bad)  
  407d2e:	inc    DWORD PTR [eax]
  407d30:	jmp    0xffba:0x5e9c0000
  407d37:	dec    DWORD PTR [eax+eax*1]
  407d3a:	in     al,dx
  407d3b:	mov    ch,0x4e
  407d3d:	inc    DWORD PTR [eax]
  407d3f:	call   FWORD PTR [eax-0x1]
  407d42:	jmp    DWORD PTR [ebx-0x7cff78d8]
  407d48:	or     bh,bh
  407d4a:	push   cs
  407d4b:	stos   BYTE PTR es:[edi],al
  407d4c:	test   al,0xff
  407d4e:	mov    edi,edi
  407d50:	pop    ss
  407d51:	add    BYTE PTR [eax],al
  407d53:	sub    BYTE PTR [esi],bh
  407d55:	mov    bl,0x83
  407d57:	int3   
  407d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d59:	jmp    FWORD PTR [ecx+0x6e5b]
  407d5f:	add    bl,ch
  407d61:	inc    DWORD PTR [eax]
  407d63:	aaa    
  407d64:	push   cs
  407d65:	jbe    0x407d67
  407d67:	push   DWORD PTR [ecx]
  407d69:	xor    DWORD PTR [edx+0x9d10],0x0
  407d70:	outs   dx,BYTE PTR ds:[esi]
  407d71:	inc    DWORD PTR [eax]
  407d73:	push   cs
  407d74:	xchg   esi,eax
  407d75:	push   edi
  407d76:	add    bh,bh
  407d78:	pop    edx
  407d79:	add    BYTE PTR [edi],ah
  407d7b:	jg     0x407df8
  407d7d:	mov    esp,ecx
  407d7f:	(bad)  
  407d80:	cmp    al,0x0
  407d82:	call   DWORD PTR [ecx-0x337c5907]
  407d88:	xchg   esp,eax
  407d89:	int3   
  407d8a:	or     al,0xb5
  407d8c:	fmul   st(4),st
  407d8e:	inc    DWORD PTR [eax]
  407d90:	retf   0xff
  407d93:	jne    0x407df2
  407d95:	adc    eax,0xff2f0089
  407d9a:	dec    ebx
  407d9b:	pop    edi
  407d9c:	mov    ah,cl
  407d9e:	mov    edi,edi
  407da0:	xchg   edi,edi
  407da2:	add    BYTE PTR [eax+ecx*4-0x4676ffa6],al
  407da9:	adc    DWORD PTR [esi+ebx*1],0x4
  407dad:	int3   
  407dae:	add    DWORD PTR [eax],0xffffffe7
  407db1:	(bad)  
  407db2:	(bad)  
  407db3:	jns    0x407dc8
  407db5:	adc    BYTE PTR [ecx+0xafff389],cl
  407dbb:	mov    ds:0xff008366,al
  407dc0:	lods   eax,DWORD PTR ds:[esi]
  407dc1:	inc    DWORD PTR [ebx+0xac9142]
  407dc7:	mov    DWORD PTR [edx-0x1],ebx
  407dca:	pop    edx
  407dcb:	repnz xor al,BYTE PTR [eax]
  407dce:	add    BYTE PTR [eax],al
  407dd0:	mov    ?,edi
  407dd2:	dec    DWORD PTR [esi-0x29]
  407dd5:	cwde   
  407dd6:	add    bh,bh
  407dd8:	or     al,0x89
  407dda:	(bad)  
  407ddd:	inc    DWORD PTR [eax]
  407ddf:	xor    DWORD PTR [ebx+eax*4+0xc49cc00],0xffffffff
  407de7:	call   DWORD PTR [edx+0x0]
  407dea:	sbb    ebx,edx
  407dec:	pusha  
  407ded:	add    ah,cl
  407def:	add    BYTE PTR [eax+0x3c8eff83],ah
  407df5:	jns    0x407dc3
  407df7:	add    dl,dh
  407df9:	(bad)  
  407dfa:	cmp    eax,0xffff27cb
  407dff:	and    DWORD PTR [ebx-0x1],0xffffffff
  407e03:	sbb    al,0xd1
  407e05:	test   BYTE PTR [ebx+0x18ff7e00],al
  407e0b:	pop    esi
  407e0c:	jmp    0xff83:0xf2ffff83
  407e13:	(bad)  
  407e14:	in     eax,dx
  407e15:	addr16 (bad) 
  407e17:	inc    DWORD PTR [edi+edi*8]
  407e1a:	pop    esp
  407e1b:	pop    ebp
  407e1c:	test   BYTE PTR [ebx-0x760d7c34],al
  407e22:	call   FWORD PTR [esi+0x6bdf]
  407e28:	mov    ds:0x9f624700,al
  407e2d:	inc    DWORD PTR [eax]
  407e2f:	call   ebp
  407e31:	add    bh,bh
  407e33:	arpl   WORD PTR [edi],cx
  407e35:	push   ecx
  407e36:	or     esp,0x3f
  407e39:	jmp    FWORD PTR [eax+0x12]
  407e3c:	aaa    
  407e3d:	(bad)  
  407e3e:	inc    DWORD PTR [eax]
  407e40:	sbb    bh,bh
  407e42:	sub    DWORD PTR [ebx+0x64],0xffffffad
  407e46:	inc    DWORD PTR [ebx-0x1a6a00d7]
  407e4c:	rol    BYTE PTR [eax],cl
  407e4e:	dec    DWORD PTR [ecx-0x3a007662]
  407e54:	mov    cl,0x53
  407e56:	(bad)  
  407e57:	jmp    DWORD PTR [ecx-0x4359ec01]
  407e5d:	add    bh,bh
  407e5f:	push   DWORD PTR [esi+0x61e40000]
  407e65:	imul   ecx,DWORD PTR [ecx+0x34006eff],0xff3e56
  407e6f:	(bad)  
  407e70:	cli    
  407e71:	int3   
  407e72:	add    BYTE PTR [eax+edx*8-0x7f],dl
  407e76:	int3   
  407e77:	int3   
  407e78:	in     al,0x0
  407e7a:	jg     0x407dff
  407e7c:	adc    eax,0xbd83ffff
  407e81:	(bad)  
  407e82:	inc    DWORD PTR ds:0xcc62ac
  407e88:	(bad)  
  407e89:	jmp    DWORD PTR [ebx-0xff26be]
  407e8f:	jmp    DWORD PTR [edi+0x5e5b00ff]
  407e95:	int    0x0
  407e97:	mov    esp,edi
  407e99:	mov    esp,edx
  407e9b:	add    esp,DWORD PTR [ecx-0x1]
  407e9e:	add    bh,bh
  407ea0:	jge    0x407e25
  407ea2:	jmp    DWORD PTR [edi+0x6e]
  407ea5:	adc    al,0x0
  407ea7:	int3   
  407ea8:	cmp    eax,DWORD PTR [eax]
  407eaa:	fisttp WORD PTR [ebx-0x33]
  407ead:	add    bh,bh
  407eaf:	or     DWORD PTR [ebx-0x1],0xffffff89
  407eb3:	mov    ebx,0xff003fc9
  407eb8:	mov    ah,0x89
  407eba:	fld    DWORD PTR [ebp-0x7c00ff4e]
  407ec0:	mov    al,ds:0xd8810089
  407ec5:	xor    eax,DWORD PTR [eax]
  407ec7:	jmp    ebx
  407ec9:	call   DWORD PTR [esi]
  407ecb:	inc    ecx
  407ecc:	cmp    BYTE PTR [eax],al
  407ece:	or     esp,0xfffffff4
  407ed1:	add    BYTE PTR [eax],al
  407ed3:	pop    esi
  407ed4:	sbb    DWORD PTR [eax-0x1],ebx
  407ed7:	int3   
  407ed8:	repz (bad) 
  407eda:	mov    esi,0xff0e7a
  407edf:	mov    DWORD PTR [ebx+eax*4],esp
  407ee2:	mov    eax,esp
  407ee4:	adc    eax,0x55ff00ad
  407ee9:	add    dh,cl
  407eeb:	inc    ecx
  407eec:	ret    
  407eed:	add    ah,cl
  407eef:	add    BYTE PTR [ebx+eax*4-0x1dcb8f00],dh
  407ef6:	(bad)  
  407ef7:	(bad)  
  407ef8:	jmp    0x0:0xd8d3e2ff
  407eff:	(bad)  
  407f00:	mov    ebp,0xe50f0083
  407f05:	test   al,0x0
  407f07:	call   FWORD PTR [eax+0x5d14e1ff]
  407f0d:	add    bh,bh
  407f0f:	jmp    FWORD PTR [ebp-0x1]
  407f12:	mov    DWORD PTR [edi],esp
  407f14:	in     al,0x90
  407f16:	cmp    edi,0xffffff98
  407f19:	add    BYTE PTR [ebx],cl
  407f1b:	mov    al,ds:0xcc00ff8d
  407f20:	and    eax,0x8d8cffff
  407f25:	inc    DWORD PTR cs:[eax]
  407f28:	jno    0x407f2a
  407f2a:	out    0x62,al
  407f2c:	out    dx,al
  407f2d:	add    BYTE PTR [eax],al
  407f2f:	(bad)  
  407f30:	jns    0x407f31
  407f32:	adc    DWORD PTR [esi-0x7a],0x7a
  407f36:	add    BYTE PTR [ecx-0x61687666],cl
  407f3c:	(bad)  
  407f3e:	add    BYTE PTR [eax],al
  407f40:	inc    edx
  407f41:	add    bh,bh
  407f43:	ret    0xa6ef
  407f46:	add    DWORD PTR [ebx+0x4046ffa6],0xffffffb2
  407f4d:	add    bh,bh
  407f4f:	call   FWORD PTR [eax]
  407f51:	inc    DWORD PTR [eax]
  407f53:	ds in  eax,dx
  407f55:	pushf  
  407f56:	add    bh,bh
  407f58:	cmp    eax,DWORD PTR [eax]
  407f5a:	pop    eax
  407f5b:	or     eax,0xff00ccad
  407f60:	pop    ds
  407f61:	inc    DWORD PTR [eax]
  407f63:	mov    al,0x55
  407f65:	pop    ds
  407f66:	add    BYTE PTR [ebx+0x426cff11],al
  407f6c:	or     ecx,esp
  407f6e:	add    bh,bh
  407f70:	(bad)  
  407f71:	inc    DWORD PTR [ebx-0x7c65e167]
  407f77:	inc    ecx
  407f79:	push   DWORD PTR [ebx-0x75b]
  407f7f:	int3   
  407f80:	xor    bh,bh
  407f82:	add    ah,bh
  407f84:	adc    ch,BYTE PTR [eax-0x1]
  407f87:	add    BYTE PTR [edx],ch
  407f89:	add    BYTE PTR ds:0xffff0986,dh
  407f8f:	jmp    eax
  407f91:	mov    edi,edi
  407f93:	rcr    BYTE PTR [edx+0x7],1
  407f96:	inc    DWORD PTR [eax]
  407f98:	mov    bh,0xff
  407f9a:	ins    DWORD PTR es:[edi],dx
  407f9b:	sbb    edx,DWORD PTR [edi+edi*8-0x7cc0ff7d]
  407fa2:	jmp    DWORD PTR ds:0x84f5
  407fa8:	sbb    edi,edi
  407faa:	pop    ebx
  407fab:	mov    eax,0xffff00f8
  407fb0:	pop    ss
  407fb1:	add    DWORD PTR [ebx+0xae847f],0xffffff89
  407fb8:	add    ah,cl
  407fba:	out    dx,eax
  407fbb:	mov    es,WORD PTR [ebx-0x34]
  407fbe:	add    bh,bh
  407fc0:	dec    eax
  407fc1:	add    DWORD PTR [eax],0xffffff8e
  407fc4:	inc    esp
  407fc5:	int    0x83
  407fc7:	add    BYTE PTR [esi+0x0],bh
  407fca:	(bad)  
  407fcb:	(bad)  
  407fcd:	(bad)  
  407fce:	inc    DWORD PTR [eax]
  407fd0:	jo     0x407f9e
  407fd2:	add    BYTE PTR [eax+0x38],ah
  407fd5:	add    ecx,esp
  407fd7:	add    BYTE PTR [ebx-0x77],dh
  407fda:	sti    
  407fdb:	and    al,0xd0
  407fdd:	add    ah,cl
  407fdf:	add    BYTE PTR [edi-0x4dcbff01],bh
  407fe5:	cmp    eax,0xffbe8983
  407fea:	nop
  407feb:	pop    ss
  407fec:	jae    0x407f71
  407fee:	dec    DWORD PTR [ecx-0x3d330034]
  407ff4:	cmc    
  407ff5:	int3   
  407ff6:	int3   
  407ff7:	inc    esi
  407ff9:	add    BYTE PTR [edx],cl
  407ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ffc:	or     al,0x83
  407ffe:	inc    DWORD PTR [ebx+0x46cc00b3]
  408004:	arpl   sp,sp
  408006:	inc    DWORD PTR [eax]
  408008:	dec    ecx
  408009:	jmp    FWORD PTR [eax-0x7c763917]
  40800f:	inc    DWORD PTR [edi-0x34]
  408012:	sub    DWORD PTR [ebp-0x44],0xd
  408016:	mov    esp,ecx
  408018:	popa   
  408019:	sub    DWORD PTR [ecx-0x33cfb4],0x0
  408020:	je     0x408021
  408022:	add    BYTE PTR [edi-0xd],al
  408025:	cmp    eax,0xffec0000
  40802a:	ror    BYTE PTR [edi+0xff00d6],1
  408030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408031:	inc    DWORD PTR [ebx-0x14fbc4]
  408037:	add    BYTE PTR ds:0xca0639cc,bh
  40803d:	(bad)  
  40803e:	(bad)  
  40803f:	(bad)  
  408040:	mov    edx,0x2d9dff00
  408045:	jno    0x408047
  408047:	int3   
  408048:	inc    eax
  408049:	adc    DWORD PTR [ebp-0x7c91],0x0
  408050:	sahf   
  408051:	add    DWORD PTR [eax],0xa
  408054:	or     BYTE PTR [edi+edi*8-0x1],bl
  408058:	pop    es
  408059:	jmp    FWORD PTR [edi]
  40805b:	pusha  
  40805c:	xchg   esi,eax
  40805d:	inc    DWORD PTR [eax]
  40805f:	dec    DWORD PTR [ebx]
  408061:	add    BYTE PTR [eax],al
  408063:	pop    esp
  408064:	ja     0x4080b2
  408066:	add    BYTE PTR [ecx-0x206d7c8b],cl
  40806c:	pushf  
  40806d:	add    BYTE PTR [ebx-0x76004601],al
  408073:	fistp  QWORD PTR [edx+0x13]
  408076:	mov    edi,edi
  408078:	xchg   edi,eax
  408079:	int3   
  40807a:	test   edx,0xffff89bf
  408080:	enter  0xff,0x91
  408084:	pop    ebx
  408085:	add    al,0x0
  408087:	mov    DWORD PTR [edx+0x0],ecx
  40808a:	mov    eax,0xffcc0f71
  40808f:	push   eax
  408091:	add    bh,bh
  408093:	retf   
  408094:	jge    0x408072
  408096:	(bad)  
  408097:	dec    DWORD PTR ds:0x5ae91083
  40809d:	int3   
  40809e:	add    ah,cl
  4080a0:	in     al,dx
  4080a1:	cmp    edi,0xffffffb4
  4080a4:	repz mov dl,0xff
  4080a7:	dec    DWORD PTR [eax-0x20cd0e00]
  4080ad:	add    ah,cl
  4080af:	jmp    ebp
  4080b1:	add    bh,bh
  4080b3:	mov    DWORD PTR [ecx-0x57c0071],ebp
  4080b9:	int3   
  4080ba:	xor    eax,0x838655
  4080bf:	add    BYTE PTR [ecx+ecx*4+0x0],bl
  4080c3:	mov    al,ds:0xd2c3
  4080c8:	and    ecx,esp
  4080ca:	dec    edx
  4080cb:	rol    BYTE PTR [ecx-0x37007c01],cl
  4080d1:	(bad)  
  4080d2:	inc    DWORD PTR [ebx-0x20]
  4080d5:	cmp    edi,edi
  4080d7:	add    BYTE PTR [ecx],al
  4080d9:	add    bl,dh
  4080db:	rcl    BYTE PTR [ebx],1
  4080dd:	add    bh,bh
  4080df:	push   esp
  4080e1:	(bad)  
  4080e2:	(bad)  
  4080e3:	jge    0x408102
  4080e5:	add    BYTE PTR [ebx+0x7e892e00],al
  4080eb:	mov    ebp,0xff003d
  4080f0:	pop    ebx
  4080f1:	add    bh,bh
  4080f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f4:	push   ebx
  4080f5:	sub    al,0x0
  4080f7:	push   DWORD PTR [eax]
  4080f9:	add    BYTE PTR [esi-0x7ebd],ah
  4080ff:	and    esi,0xffffffcc
  408102:	(bad)  
  408103:	jl     0x408170
  408105:	pop    esp
  408106:	add    bh,bh
  408108:	jmp    0xffff:0xbcbcb700
  40810f:	call   DWORD PTR [edx-0x1]
  408112:	add    BYTE PTR [esi],bl
  408114:	das    
  408115:	mov    bh,bh
  408117:	add    BYTE PTR [esi],bl
  408119:	add    BYTE PTR [edi+ecx*1],bl
  40811c:	inc    DWORD PTR ss:[eax]
  40811f:	and    DWORD PTR [esi],0xffffffff
  408122:	int3   
  408123:	(bad)  
  408124:	fcomp  DWORD PTR [eax+0x0]
  408127:	int3   
  408128:	fild   WORD PTR [eax]
  40812a:	add    ch,BYTE PTR [esi-0x33337624]
  408130:	inc    esp
  408131:	mov    DWORD PTR [ebx-0x85746a],eax
  408137:	add    BYTE PTR [ebx-0x77],dh
  40813a:	adc    eax,DWORD PTR [eax]
  40813c:	adc    al,0xff
  40813e:	(bad)  
  40813f:	inc    DWORD PTR [edi+edi*8+0xe4b4c83]
  408146:	add    bh,bh
  408148:	aas    
  408149:	add    BYTE PTR ds:0xffd93d,al
  40814f:	(bad)  
  408150:	out    dx,eax
  408151:	inc    DWORD PTR [eax]
  408153:	pusha  
  408154:	dec    ecx
  408155:	add    eax,0xe4ffff
  40815a:	mov    esp,gs
  40815c:	inc    ecx
  40815d:	add    bh,bh
  40815f:	push   edi
  408161:	add    DWORD PTR [eax],0xffffffb6
  408164:	fild   QWORD PTR [ebx+0x5dff00]
  40816a:	out    0x81,eax
  40816c:	adc    eax,DWORD PTR [eax]
  40816e:	(bad)  
  40816f:	jmp    DWORD PTR [ecx+ecx*4]
  408172:	mov    DWORD PTR [ebp*4+0x19ffff4f],esp
  408179:	int3   
  40817a:	inc    eax
  40817b:	adc    DWORD PTR [esi-0x7d],ebp
  40817e:	inc    DWORD PTR [ebx+0x3affffb5]
  408184:	loop   0x408122
  408186:	(bad)  
  408187:	call   DWORD PTR [eax]
  408189:	call   FWORD PTR [ecx]
  40818b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40818c:	mov    eax,DWORD PTR [eax]
  40818e:	add    bh,bh
  408190:	dec    edi
  408191:	dec    esp
  408193:	xor    ecx,DWORD PTR [edi]
  408195:	inc    edx
  408196:	add    BYTE PTR [eax],al
  408198:	imul   eax,DWORD PTR [ebx-0x76ed4207],0xffffffff
  40819f:	add    DWORD PTR [edi-0x32c10077],0xffffffba
  4081a6:	dec    esp
  4081a8:	data16 add BYTE PTR [ebx],ah
  4081ab:	fiadd  WORD PTR [eax]
  4081ad:	add    ah,cl
  4081af:	add    BYTE PTR [ebx-0x1],bl
  4081b2:	add    BYTE PTR [eax+eax*1-0xb],ch
  4081b6:	inc    DWORD PTR [eax]
  4081b8:	push   ds
  4081b9:	add    BYTE PTR [esi+esi*2],bh
  4081bc:	mov    ch,0x83
  4081be:	add    ah,cl
  4081c0:	or     BYTE PTR [eax],al
  4081c2:	push   DWORD PTR [eax]
  4081c4:	pop    ecx
  4081c5:	mov    ebx,0xcc2bffff
  4081ca:	leave  
  4081cb:	mov    ch,0x8
  4081cd:	add    BYTE PTR [eax],al
  4081cf:	add    BYTE PTR ds:0xb860ffff,cl
  4081d5:	call   0xb795:0x890dffff
  4081dc:	ror    esp,1
  4081de:	(bad)  
  4081df:	inc    DWORD PTR [edi-0x36c37c77]
  4081e5:	out    dx,eax
  4081e6:	add    BYTE PTR [eax],al
  4081e8:	into   
  4081e9:	jmp    DWORD PTR [edx]
  4081eb:	adc    eax,0xffffe9
  4081f0:	sub    edi,edi
  4081f2:	push   edi
  4081f4:	mov    bh,bh
  4081f6:	add    BYTE PTR [ebx-0xfe1ff5e],al
  4081fc:	aad    0x0
  4081fe:	add    BYTE PTR [ebx-0x2900ff89],al
  408204:	and    DWORD PTR [eax+eax*1-0x1],ebx
  408208:	add    eax,0xe52ad989
  40820d:	add    DWORD PTR [eax],0x0
  408210:	repnz dec DWORD PTR [ecx-0xfccbf3]
  408217:	dec    DWORD PTR [ecx]
  408219:	add    BYTE PTR [eax-0x3300c374],dh
  40821f:	add    BYTE PTR [eax+0x62ee89ff],ch
  408225:	add    bh,bh
  408227:	sbb    DWORD PTR [edi+0x0],0xffffffb4
  40822b:	pop    ds
  40822c:	add    bh,bh
  40822e:	dec    esp
  408230:	inc    esi
  408231:	add    BYTE PTR [ecx-0xb2c660],cl
  408237:	int3   
  408238:	xchg   esi,eax
  408239:	(bad)  
  40823a:	fiadd  WORD PTR [edx-0x7c00ff74]
  408240:	(bad)  
  408241:	dec    DWORD PTR [ecx-0xaeed2a]
  408247:	int3   
  408248:	jmp    DWORD PTR ss:[edi+eiz*1-0xff0004]
  408250:	mov    ?,edi
  408252:	int3   
  408253:	lock std 
  408255:	inc    esi
  408256:	cmp    edi,0x65
  408259:	call   FWORD PTR [edi+ebx*1-0xff33a8]
  408260:	add    al,0x0
  408262:	add    BYTE PTR [ebp+0x1a],cl
  408265:	(bad)  
  408266:	add    BYTE PTR [eax],al
  408268:	jae    0x408236
  40826a:	pushf  
  40826b:	je     0x4082b7
  40826d:	(bad)  
  40826e:	inc    DWORD PTR [eax]
  408270:	add    eax,0xb1fcff00
  408275:	lock add bh,bh
  408278:	(bad)  
  408279:	call   FWORD PTR [edx-0x22]
  40827c:	popa   
  40827d:	int3   
  40827e:	(bad)  
  40827f:	jmp    edx
  408281:	mov    edi,edi
  408283:	(bad)  
  408284:	jbe    0x4082fb
  408286:	inc    DWORD PTR [ebx+0x2aacff9b]
  40828c:	mov    al,ds:0x3100ff00
  408291:	int3   
  408292:	add    BYTE PTR [esi+0xff6f83],bh
  408298:	fwait
  408299:	add    BYTE PTR [edi-0x42],bl
  40829c:	lods   al,BYTE PTR ds:[esi]
  40829d:	(bad)  
  40829e:	inc    DWORD PTR [ebx+0x3c83ff7e]
  4082a4:	add    esi,DWORD PTR [eax+0x0]
  4082a7:	jmp    DWORD PTR [eax-0x10b9a01]
  4082ad:	dec    DWORD PTR [ecx-0x7cffed01]
  4082b3:	sar    DWORD PTR [edx],cl
  4082b5:	adc    eax,0xccc3ffcc
  4082ba:	xchg   edi,edx
  4082bc:	pop    esi
  4082bd:	add    DWORD PTR [eax],0xffffffff
  4082c0:	mov    edi,edi
  4082c2:	sub    DWORD PTR [edi],0xffffffba
  4082c5:	jmp    0x4082c7
  4082c7:	mov    edx,esp
  4082c9:	push   DWORD PTR [ebp-0xff2138]
  4082cf:	call   DWORD PTR [ebx+eax*4+0x0]
  4082d3:	sbb    DWORD PTR [ebx+eiz*1-0x332cff34],ecx
  4082da:	pushf  
  4082db:	pop    ecx
  4082dc:	inc    edx
  4082dd:	(bad)  
  4082de:	inc    DWORD PTR [eax]
  4082e0:	fcos   
  4082e2:	call   DWORD PTR [edi-0x1f]
  4082e5:	xchg   ebp,eax
  4082e6:	(bad)  
  4082e7:	(bad)  
  4082e8:	fcos   
  4082ea:	add    al,0x7b
  4082ec:	je     0x4082ee
  4082ee:	inc    DWORD PTR [eax]
  4082f0:	sub    eax,DWORD PTR [eax]
  4082f2:	adc    DWORD PTR [esi-0xff75a9],0xffffff9c
  4082f9:	mov    DWORD PTR [esi+0x3],esp
  4082fc:	cmp    BYTE PTR [eax],al
  4082fe:	mov    edi,edi
  408300:	fdivr  st,st(7)
  408302:	and    DWORD PTR [esi-0x7c5830],0x3
  408309:	inc    DWORD PTR [ebx-0x33fffb75]
  40830f:	jmp    FWORD PTR [edx]
  408311:	cmp    edi,0x2e
  408314:	fs mov bh,0x0
  408317:	mov    DWORD PTR [ecx+0x0],edx
  40831a:	mov    eax,ds:0x53ce
  40831f:	add    BYTE PTR [ebx-0x1],bh
  408322:	int3   
  408323:	mov    ds:0xff536d,eax
  408328:	pop    ebp
  408329:	sub    edx,0x74
  40832c:	int3   
  40832d:	(bad)  
  40832e:	(bad)  
  40832f:	(bad)  
  408330:	mov    ebx,0x5de583ff
  408335:	dec    eax
  408336:	dec    DWORD PTR [ecx-0x2f403373]
  40833c:	jae    0x1190741
  408342:	add    BYTE PTR [edi-0x6de4],ah
  408348:	push   ebx
  408349:	call   FWORD PTR [ebp+0x52]
  40834c:	(bad)  
  40834d:	(bad)  
  40834e:	inc    DWORD PTR [eax]
  408350:	test   DWORD PTR [ecx+0x31590789],ecx
  408356:	add    BYTE PTR [ebx+0x453200a3],al
  40835c:	std    
  40835d:	dec    esp
  40835f:	dec    DWORD PTR [edx-0x1]
  408362:	jmp    FWORD PTR [edi]
  408364:	(bad)
  408367:	add    DWORD PTR [eax-0x726af901],0xffffffff
  40836e:	dec    DWORD PTR [ecx-0x1300ff84]
  408374:	or     DWORD PTR [edi-0x1],ebp
  408377:	jmp    DWORD PTR [ebx-0x7d]
  40837a:	test   eax,0xffffad85
  40837f:	add    BYTE PTR [edx],bh
  408381:	add    bh,bh
  408383:	mov    ebx,0x838684
  408388:	ror    BYTE PTR [ecx+0x8ee941],0x83
  40838f:	dec    eax
  408391:	inc    DWORD PTR [ebx-0x76605737]
  408397:	jmp    FWORD PTR [ebp-0x1]
  40839a:	loop   0x408358
  40839c:	and    al,0xcc
  40839e:	cmp    edi,0xffffffe9
  4083a1:	int3   
  4083a2:	inc    ecx
  4083a4:	xor    BYTE PTR [ebp-0x1],0x0
  4083a8:	jmp    0x4083a9
  4083aa:	cli    
  4083ab:	not    eax
  4083ad:	(bad)  
  4083ae:	inc    DWORD PTR [ebx+0x54fffff1]
  4083b4:	pop    ebx
  4083b5:	and    edi,edi
  4083b7:	mov    DWORD PTR [ecx+0xa4eef83],esi
  4083bd:	add    BYTE PTR [eax],al
  4083bf:	call   DWORD PTR [eax-0x34]
  4083c2:	int3   
  4083c3:	cmp    eax,0x83ff77cc
  4083c8:	ja     0x4083ca
  4083ca:	pop    ebp
  4083cb:	aaa    
  4083cc:	xor    edi,edi
  4083ce:	add    DWORD PTR [ebx+0x10ff83a7],0xffffff9a
  4083d5:	xchg   ecx,eax
  4083d6:	(bad)  
  4083d7:	(bad)  
  4083d8:	sti    
  4083d9:	dec    DWORD PTR [esi]
  4083db:	jno    0x408428
  4083dd:	or     DWORD PTR [ecx-0x4800],0xffffffd5
  4083e4:	cli    
  4083e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e6:	or     esp,0x75
  4083e9:	int3   
  4083ea:	lahf   
  4083eb:	aaa    
  4083ec:	js     0x4083ed
  4083ee:	dec    DWORD PTR [ecx+0x7589ccdf]
  4083f4:	mov    DWORD PTR [edx],eax
  4083f6:	int3   
  4083f7:	add    BYTE PTR [edi-0x1],bl
  4083fa:	sub    BYTE PTR [ebp+0x8354],al
  408400:	fmul   QWORD PTR [ecx+0x5260d700]
  408406:	dec    DWORD PTR [ecx-0x519000a4]
  40840c:	test   DWORD PTR [ebx-0xdeff01],0xb5361c00
  408416:	mov    DWORD PTR [eax],eax
  408418:	pop    edx
  408419:	(bad)  
  40841a:	mov    ebp,0xefb
  40841f:	jmp    DWORD PTR ds:0x84a0ffff
  408425:	in     eax,0xff
  408427:	add    cl,cl
  408429:	add    esp,0xffffffdc
  40842c:	repz (bad) 
  40842e:	(bad)  
  40842f:	inc    DWORD PTR [eax-0x1]
  408432:	add    cl,ch
  408434:	cmp    BYTE PTR [edx+0x0],0xff
  408438:	sub    al,BYTE PTR [ebx-0xb83c95]
  40843e:	add    bh,bh
  408440:	dec    edx
  408441:	add    BYTE PTR [eax],al
  408443:	les    esi,FWORD PTR ds:0x1affffc2
  408449:	dec    DWORD PTR [ebp-0x4d]
  40844c:	mov    eax,0x5100cc00
  408451:	add    BYTE PTR [eax],al
  408453:	dec    ecx
  408454:	loope  0x40845c
  408456:	add    bh,bh
  408458:	xchg   ebp,eax
  408459:	call   FWORD PTR [ebx-0x6d]
  40845c:	rol    BYTE PTR [ebx+0xe8ff00],1
  408462:	int3   
  408463:	adc    al,0xac
  408465:	cmp    BYTE PTR [eax],al
  408467:	add    BYTE PTR [esi+0x0],dl
  40846a:	push   0xfffffff9
  40846c:	xchg   ebp,eax
  40846d:	add    BYTE PTR [eax],al
  40846f:	call   DWORD PTR [ebx-0x1]
  408472:	add    BYTE PTR [esi-0x33ff3f0a],ch
  408478:	dec    edi
  408479:	inc    DWORD PTR [ebx-0x7cd495]
  40847f:	xor    DWORD PTR ds:0x4bdb8983,0xfffffffa
  408486:	add    ah,cl
  408488:	inc    ecx
  408489:	cmp    DWORD PTR [edi+0xffe99d],0xffffffff
  408490:	push   esp
  408491:	mov    DWORD PTR [eax],eax
  408493:	ins    DWORD PTR es:[edi],dx
  408494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408495:	ins    DWORD PTR es:[edi],dx
  408496:	cmp    edi,0xffffffdc
  408499:	inc    DWORD PTR [eax-0x22]
  40849c:	(bad)  
  40849f:	call   esi
  4084a1:	(bad)  
  4084a2:	jmp    FWORD PTR [ecx-0x50]
  4084a5:	retf   
  4084a6:	(bad)  
  4084a7:	jmp    FWORD PTR [edi]
  4084a9:	add    BYTE PTR [eax],dl
  4084ab:	idiv   DWORD PTR [ebx]
  4084ad:	add    BYTE PTR [eax],al
  4084af:	(bad)  
  4084b0:	mov    esp,0xe6c3ffff
  4084b5:	add    BYTE PTR [eax],0x0
  4084b8:	in     eax,0x0
  4084ba:	out    0x91,eax
  4084bc:	push   eax
  4084bd:	inc    DWORD PTR [eax]
  4084bf:	mov    ebp,esp
  4084c1:	dec    esp
  4084c3:	mov    ds:0xcca236,al
  4084c8:	ltr    WORD PTR [edi-0x19]
  4084cc:	inc    eax
  4084cd:	add    BYTE PTR [ecx-0xdd34],cl
  4084d3:	xchg   esp,eax
  4084d4:	out    0x67,al
  4084d6:	int3   
  4084d7:	add    BYTE PTR [edx+0x6971d583],bh
  4084dd:	add    DWORD PTR [eax],0xffffffff
  4084e0:	jbe    0x4084e1
  4084e2:	int3   
  4084e3:	ja     0x408563
  4084e5:	pop    edx
  4084e6:	add    bh,bh
  4084e8:	icebp  
  4084e9:	add    BYTE PTR [ebp-0xff965e],ah
  4084ef:	int3   
  4084f0:	sub    BYTE PTR [ebx+0x23ee9e89],al
  4084f6:	add    DWORD PTR [ebx+0x2c64ff21],0xffffffe1
  4084fd:	cmp    edi,0xffffffff
  408500:	cli    
  408501:	inc    DWORD PTR [eax]
  408503:	sub    eax,0xffff3b2b
  408508:	data16 add BYTE PTR [eax],dh
  40850b:	push   esi
  40850c:	mov    edi,edi
  40850e:	inc    DWORD PTR [eax]
  408510:	out    dx,al
  408511:	add    bh,bh
  408513:	ret    
  408514:	imul   DWORD PTR [esi]
  408516:	add    bh,bh
  408518:	nop
  408519:	add    BYTE PTR [ecx-0x7cd57a],ch
  40851f:	int3   
  408520:	sti    
  408521:	(bad)  
  408522:	jmp    DWORD PTR [esi]
  408524:	and    BYTE PTR [esi-0x7d],al
  408527:	add    BYTE PTR [eax+eax*1+0x582fdc],ch
  40852e:	add    DWORD PTR [eax],0x47
  408531:	inc    DWORD PTR [ebx-0x75473c]
  408537:	mov    DWORD PTR [esp+ecx*8+0x4a],ebx
  40853b:	or     esi,esp
  40853d:	add    bh,bh
  40853f:	call   DWORD PTR [esi-0x34]
  408542:	jmp    esi
  408544:	and    ebx,edi
  408546:	(bad)  
  408547:	push   DWORD PTR [ebx]
  408549:	add    BYTE PTR [ecx-0x7633b00c],ch
  40854f:	and    ebp,0xffffffff
  408552:	add    BYTE PTR [esi+0x63],ch
  408555:	add    BYTE PTR ds:[eax],al
  408558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408559:	sub    DWORD PTR [edx+0x5c],0xfffffffb
  40855d:	add    bh,bh
  40855f:	jmp    esi
  408561:	dec    DWORD PTR [ecx-0x49ab22]
  408567:	xor    DWORD PTR [edx-0x7d],0xffffff9f
  40856b:	fistp  QWORD PTR [ebx]
  40856d:	dec    esp
  40856f:	or     ebp,0xffffff89
  408572:	add    BYTE PTR ds:0xff68c0,ch
  408578:	loopne 0x408579
  40857a:	inc    ebx
  40857b:	std    
  40857c:	ins    DWORD PTR es:[edi],dx
  40857d:	dec    esp
  40857f:	mov    DWORD PTR [ebx],ebx
  408581:	(bad)  
  408582:	(bad)  
  408583:	cmp    ebx,DWORD PTR [ecx+0x7]
  408586:	inc    DWORD PTR [ebx-0x66ef0018]
  40858c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40858d:	inc    DWORD PTR [eax]
  40858f:	add    BYTE PTR ds:0xe483ff00,dh
  408595:	inc    edx
  408596:	dec    esp
  408598:	ja     0x40859a
  40859a:	push   di
  40859c:	mov    ch,0x0
  40859e:	inc    DWORD PTR [ebx+0x75ff0049]
  4085a4:	div    ebp
  4085a6:	add    bh,bh
  4085a8:	pop    edx
  4085a9:	inc    ecx
  4085ab:	ja     0x4085a6
  4085ad:	inc    DWORD PTR [ebx+0x87cc]
  4085b3:	mov    edi,0xff0034de
  4085b8:	data16 add BYTE PTR [edi-0x33009b70],bl
  4085bf:	call   FWORD PTR [ecx-0x1]
  4085c2:	inc    DWORD PTR [ebx+ecx*8+0x6a]
  4085c6:	add    BYTE PTR [ebx+0x707b00d6],al
  4085cc:	xor    eax,0x8bffffff
  4085d1:	add    BYTE PTR [eax],al
  4085d3:	ss inc ebp
  4085d5:	sub    al,0x83
  4085d7:	add    BYTE PTR [edi+edi*8-0x33f71bcd],dl
  4085de:	int3   
  4085df:	add    BYTE PTR [ebx],ch
  4085e1:	inc    DWORD PTR [ebx-0x7ce1fcd3]
  4085e7:	add    BYTE PTR [ecx],ah
  4085e9:	add    BYTE PTR [ecx-0x51],ch
  4085ec:	dec    esp
  4085ed:	int3   
  4085ee:	cmp    edi,0x57
  4085f1:	int3   
  4085f2:	mov    DWORD PTR [edx-0x7c338f3c],edx
  4085f8:	test   al,0x0
  4085fa:	add    BYTE PTR [ebx-0x333333fa],ah
  408600:	push   ebx
  408601:	mov    edi,edi
  408603:	aaa    
  408604:	es cmp eax,0x8385ccff
  40860a:	sbb    ebp,esp
  40860c:	mov    al,BYTE PTR [ebx-0x7c470000]
  408612:	jmp    FWORD PTR [edi]
  408614:	pop    ss
  408615:	cwde   
  408616:	(bad)  
  408617:	jmp    FWORD PTR [ebx+eax*4+0x13]
  40861b:	ds push edx
  40861d:	cmp    edi,0xffffffff
  408620:	mov    ecx,0x7fc00cc
  408625:	xchg   esp,eax
  408626:	(bad)  
  408627:	jmp    ebx
  408629:	call   edx
  40862b:	push   ecx
  40862c:	jae    0x4085fa
  40862e:	inc    DWORD PTR [eax]
  408630:	adc    esp,ecx
  408632:	dec    edi
  408634:	push   0xffffff98
  408636:	inc    DWORD PTR [ebx-0x282bff5f]
  40863c:	mov    ah,0xff
  40863e:	mov    DWORD PTR [eax],eax
  408640:	data16 add BYTE PTR [eax],al
  408643:	outs   dx,BYTE PTR ds:[esi]
  408644:	jns    0x4085d1
  408646:	add    BYTE PTR [ebx+0x13e5839c],al
  40864c:	add    BYTE PTR gs:[ebx+0x830c00],al
  408653:	jnp    0x408655
  408655:	imul   eax,DWORD PTR [eax],0xe2001b00
  40865b:	jbe    0x4086c5
  40865d:	inc    DWORD PTR [ebx+0xffd1ff]
  408663:	xchg   esi,eax
  408664:	cmc    
  408665:	fwait
  408666:	inc    DWORD PTR [ebx+0x266289c6]
  40866c:	xchg   bh,bh
  40866e:	add    BYTE PTR [eax],al
  408670:	sub    al,0xff
  408672:	int3   
  408673:	shl    BYTE PTR [ebp+0x5b],cl
  408676:	mov    DWORD PTR [eax],eax
  408678:	popa   
  408679:	push   edx
  40867b:	xchg   edx,eax
  40867c:	daa    
  40867d:	int3   
  40867e:	add    BYTE PTR [eax],al
  408680:	(bad)  
  408682:	add    BYTE PTR ds:0xffff8d62,dl
  408688:	fdivp  st(7),st
  40868a:	(bad)  
  40868b:	jg     0x4086d2
  40868d:	dec    esp
  40868f:	mov    DWORD PTR [edx-0x1],eax
  408692:	inc    DWORD PTR [eax-0x3c]
  408695:	jge    0x408696
  408697:	call   edi
  408699:	call   DWORD PTR [eax+0x31]
  40869c:	jle    0x40869d
  40869e:	add    bh,bh
  4086a0:	(bad)  
  4086a1:	dec    DWORD PTR [ecx-0x76f002f4]
  4086a7:	jmp    FWORD PTR [esi]
  4086a9:	add    dh,dl
  4086ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ac:	mov    bh,0x83
  4086ae:	(bad)  
  4086af:	call   DWORD PTR [eax]
  4086b1:	add    BYTE PTR [eax],al
  4086b3:	fdiv   QWORD PTR [esi+0x1f]
  4086b6:	add    bh,bh
  4086b8:	push   edi
  4086b9:	inc    DWORD PTR [esp+eiz*4-0x41]
  4086bd:	add    BYTE PTR [ebx-0x7c006b01],al
  4086c3:	lods   eax,DWORD PTR ds:[esi]
  4086c4:	dec    esi
  4086c5:	push   ss
  4086c6:	inc    DWORD PTR [eax]
  4086c8:	sar    bh,cl
  4086ca:	iret   
  4086cb:	popa   
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	add    BYTE PTR [ecx+0xfff100],cl
  4086d3:	mov    esi,0xff008f64
  4086d8:	add    DWORD PTR [eax],0x3a
  4086db:	push   ecx
  4086dc:	into   
  4086dd:	add    BYTE PTR [eax],al
  4086df:	add    cl,ah
  4086e1:	int3   
  4086e2:	mov    ebx,edx
  4086e4:	jmp    0x79ff:0x14cc00e6
  4086eb:	push   edx
  4086ec:	xchg   ecx,eax
  4086ed:	mov    edi,edi
  4086ef:	call   DWORD PTR [esi-0x77]
  4086f2:	int3   
  4086f3:	iret   
  4086f4:	pop    edi
  4086f5:	fmul   st,st(4)
  4086f7:	mov    DWORD PTR [ebx-0x4822f377],ebp
  4086fd:	mov    edi,edi
  4086ff:	(bad)  
  408700:	fadd   QWORD PTR [eax]
  408702:	inc    DWORD PTR [eax-0x76ffadca]
  408708:	mov    bl,0xff
  40870a:	imul   esi,DWORD PTR [edi-0x50],0x1900ffff
  408711:	inc    DWORD PTR [eax]
  408713:	je     0x408714
  408715:	or     al,0xff
  408717:	sub    esp,0xffffff83
  40871a:	(bad)  
  40871b:	out    dx,eax
  40871c:	(bad)  
  40871d:	inc    DWORD PTR [eax]
  40871f:	add    BYTE PTR [ebx],ch
  408721:	add    bh,bh
  408723:	pop    esp
  408724:	test   DWORD PTR [ecx+ecx*4-0x4bffb477],edi
  40872b:	lock fwait
  40872d:	add    BYTE PTR [eax],al
  40872f:	jmp    DWORD PTR [edi-0x1]
  408732:	(bad)  
  408733:	fld    QWORD PTR [edx+0x33]
  408736:	inc    DWORD PTR [eax]
  408738:	pop    edi
  408739:	add    BYTE PTR [edx-0xfffa96],ch
  40873f:	inc    edx
  408741:	inc    DWORD PTR [eax]
  408743:	xor    BYTE PTR [ebp+edi*4-0x1],0xff
  408748:	in     al,dx
  408749:	add    bl,bh
  40874b:	push   ds
  40874c:	pop    ebp
  40874d:	add    bh,bh
  40874f:	or     DWORD PTR [edx+0x5c4cffff],0x33
  408756:	add    BYTE PTR [ebx-0x49b33c0],al
  40875c:	push   esi
  40875d:	cmp    edi,0x0
  408760:	aaa    
  408761:	(bad)  
  408762:	push   DWORD PTR [eax-0x77]
  408765:	call   0x384b:0xf0cc00
  40876c:	out    0x0,al
  40876e:	(bad)  
  40876f:	jmp    edx
  408771:	dec    esp
  408773:	lods   al,BYTE PTR ds:[esi]
  408774:	cmp    BYTE PTR ds:0xffce0000,dl
  40877a:	jns    0x408735
  40877c:	sub    ecx,esp
  40877e:	add    bh,bh
  408780:	imul   edi,edi,0xffffffff
  408783:	xchg   ebp,eax
  408784:	cmc    
  408785:	and    eax,0xe3cc00
  40878a:	gs cld 
  40878c:	mov    bh,0xcc
  40878e:	cmp    edi,0xffffff9d
  408791:	add    bh,bh
  408793:	loope  0x4087e3
  408795:	aam    0x0
  408797:	jmp    FWORD PTR [ebp-0x34]
  40879a:	push   ebx
  40879b:	push   eax
  40879c:	dec    edx
  40879d:	or     esp,0xffffff83
  4087a0:	data16 (bad) 
  4087a2:	call   FWORD PTR [ecx]
  4087a4:	clc    
  4087a5:	adc    cl,ah
  4087a7:	call   DWORD PTR [ebp-0x67957a00]
  4087ad:	add    bh,bh
  4087af:	sbb    DWORD PTR [edi],0x0
  4087b2:	add    BYTE PTR [ecx],dh
  4087b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087b5:	cmp    eax,DWORD PTR [eax]
  4087b7:	push   esp
  4087b9:	dec    ecx
  4087bb:	pop    ss
  4087bc:	int3   
  4087bd:	mov    edi,edi
  4087bf:	(bad)  
  4087c0:	cli    
  4087c1:	dec    DWORD PTR [ecx-0x766c3d59]
  4087c7:	add    BYTE PTR [ebx-0x1],al
  4087ca:	jb     0x40882d
  4087cc:	or     BYTE PTR [ecx-0xa00001],0x0
  4087d3:	fisubr WORD PTR [ebp+edi*2+0x0]
  4087d7:	dec    DWORD PTR [eax+0x26187583]
  4087dd:	inc    DWORD PTR [eax]
  4087df:	(bad)  
  4087e0:	cmp    bh,bh
  4087e2:	int3   
  4087e3:	jl     0x40885e
  4087e5:	and    bh,bh
  4087e7:	inc    DWORD PTR [eax-0x7d]
  4087ea:	mov    esi,0xffff3ad0
  4087ef:	jmp    FWORD PTR [edi+edi*8]
  4087f2:	call   ebx
  4087f4:	out    0x88,al
  4087f6:	add    DWORD PTR [ebx+0x3d680073],0x3d
  4087fd:	add    bh,bh
  4087ff:	add    BYTE PTR [ecx],ch
  408801:	add    bh,bh
  408803:	scas   eax,DWORD PTR es:[edi]
  408804:	ins    BYTE PTR es:[edi],dx
  408805:	(bad)  
  408806:	(bad)  
  408807:	push   DWORD PTR [ebp+0x4c524dff]
  40880d:	int3   
  40880e:	add    bh,bh
  408810:	in     eax,0xff
  408812:	add    BYTE PTR [eax+0xb1f7],ch
  408818:	add    edi,edi
  40881a:	push   edi
  40881b:	xchg   ebp,eax
  40881c:	inc    ecx
  40881d:	add    bh,bh
  40881f:	dec    esi
  408821:	(bad)  
  408822:	call   FWORD PTR [ebx+0xc]
  408825:	inc    ecx
  408826:	add    bh,bh
  408828:	call   0x8989:0xacdb5cc
  40882f:	call   DWORD PTR [eax+0x2042ff83]
  408835:	(bad)  
  408836:	(bad)  
  408837:	(bad)  
  408838:	in     al,dx
  408839:	dec    edi
  40883b:	pop    es
  40883c:	mov    BYTE PTR [eax],al
  40883e:	int3   
  40883f:	dec    DWORD PTR [ecx]
  408841:	add    bh,bh
  408843:	shr    DWORD PTR [eax-0x76ffae],0x83
  40884a:	ret    
  40884b:	stos   DWORD PTR es:[edi],eax
  40884c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40884d:	int3   
  40884e:	add    bh,bh
  408850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408851:	int3   
  408852:	call   DWORD PTR [edi]
  408854:	adc    edi,DWORD PTR [edi-0xa0001]
  40885a:	add    BYTE PTR [esi],0xaf
  40885d:	(bad)  
  40885e:	inc    DWORD PTR [eax]
  408860:	je     0x408861
  408862:	jmp    FWORD PTR [eax-0x76008559]
  408868:	sar    edi,cl
  40886a:	cmp    ah,BYTE PTR [ecx+esi*4+0x72ff0000]
  408871:	mov    DWORD PTR [ebx-0x7cbd3fe3],eax
  408877:	add    ch,ah
  408879:	int3   
  40887a:	push   cs
  40887b:	sti    
  40887c:	js     0x40887d
  40887e:	inc    DWORD PTR [eax]
  408880:	inc    ecx
  408881:	add    BYTE PTR [ecx+0x9b936b],cl
  408887:	dec    DWORD PTR [esp+ecx*8]
  40888a:	outs   dx,DWORD PTR ds:[esi]
  40888b:	out    dx,eax
  40888c:	add    al,0xff
  40888e:	cmp    edi,0x49
  408891:	add    bh,bh
  408893:	(bad)  
  408894:	pop    ebp
  408895:	inc    DWORD PTR cs:[ebx+0x1df40031]
  40889c:	and    eax,0xbaffffff
  4088a1:	cmp    edi,0xffffffbb
  4088a4:	xlat   BYTE PTR ds:[ebx]
  4088a5:	or     al,0xff
  4088a7:	add    dh,ah
  4088a9:	adc    DWORD PTR [eax+0x43],0xd
  4088ad:	inc    DWORD PTR [ebx-0x76006300]
  4088b3:	lea    edx,[ecx+0x3d]
  4088b6:	int3   
  4088b7:	jmp    DWORD PTR [ecx]
  4088b9:	(bad)  
  4088ba:	jmp    0x4088d9
  4088bc:	inc    esp
  4088bd:	inc    DWORD PTR [eax]
  4088bf:	(bad)  
  4088c0:	fxch   st(4)
  4088c2:	call   DWORD PTR [edx]
  4088c4:	rcl    cl,cl
  4088c6:	cmp    edi,0xffffffee
  4088c9:	add    BYTE PTR [esi],bl
  4088cb:	mov    ds:0x89838915,al
  4088d0:	cmp    edi,0xdc05f3ff
  4088d6:	(bad)  
  4088d7:	dec    DWORD PTR [edi+0x78325cff]
  4088dd:	inc    DWORD PTR [ebx-0x7c76a601]
  4088e3:	dec    edi
  4088e4:	push   esp
  4088e5:	gs (bad) 
  4088e7:	call   FWORD PTR [edx+0x156cfd89]
  4088ed:	int3   
  4088ee:	add    bh,bh
  4088f0:	mov    dl,0xff
  4088f2:	mov    DWORD PTR [edi-0x4b],edi
  4088f5:	push   ecx
  4088f6:	inc    DWORD PTR [eax]
  4088f8:	dec    ecx
  4088f9:	add    ah,ah
  4088fb:	sbb    esi,DWORD PTR [ebx-0x1]
  4088fe:	inc    DWORD PTR [eax]
  408900:	scas   eax,DWORD PTR es:[edi]
  408901:	add    BYTE PTR [eax],al
  408903:	mul    DWORD PTR [eax]
  408905:	rol    BYTE PTR [ebx+0x13ff9700],1
  40890b:	jnp    0x4088f1
  40890d:	mov    DWORD PTR [eax],eax
  40890f:	mov    DWORD PTR [edx-0x1],eax
  408912:	jmp    FWORD PTR [ebp-0x337118]
  408918:	imul   ecx,DWORD PTR [ecx-0x7c54f6d3],0x59ffff
  408922:	cmp    DWORD PTR [esi-0xff286f],0xffffffc2
  408929:	add    BYTE PTR [eax+edi*4+0xff83c9],dl
  408930:	fadd   DWORD PTR [ebx+0x6377c00]
  408936:	add    bh,bh
  408938:	dec    ebx
  408939:	adc    DWORD PTR [esi-0xffd50f],0xffffffff
  408940:	je     0x4088c5
  408942:	add    BYTE PTR [eax+edx*2],dh
  408945:	jbe    0x408946
  408947:	add    dl,dh
  408949:	sbb    DWORD PTR [edi],0xffffffeb
  40894c:	rol    BYTE PTR [eax],cl
  40894e:	(bad)  
  40894f:	(bad)  
  408950:	fiadd  DWORD PTR [eax]
  408952:	sbb    DWORD PTR [ebx],0xffffff85
  408955:	popa   
  408956:	dec    DWORD PTR [ecx-0x42410043]
  40895c:	xor    eax,0xd2ffffff
  408961:	cmp    edi,0xfffffff6
  408964:	inc    ecx
  408965:	add    BYTE PTR fs:[eax],al
  408968:	jp     0x408969
  40896a:	sbb    eax,0xffff164e
  40896f:	mov    DWORD PTR [edi],edx
  408971:	inc    DWORD PTR [eax]
  408973:	push   ebx
  408975:	call   0x83788979
  40897a:	fadd   QWORD PTR [edi+0x7d]
  40897d:	mov    DWORD PTR [eax],eax
  40897f:	dec    edx
  408981:	int3   
  408982:	inc    DWORD PTR [edx+ebp*2+0x37ffffa3]
  408989:	inc    DWORD PTR [ecx]
  40898b:	mov    cl,0x9d
  40898d:	int3   
  40898e:	(bad)  
  40898f:	dec    DWORD PTR [esi-0x1]
  408992:	add    BYTE PTR [edi],cl
  408994:	data16 js 0x408997
  408997:	mov    DWORD PTR [ebp-0x24594300],eax
  40899d:	inc    DWORD PTR [ebx-0xff7500]
  4089a3:	pop    edx
  4089a4:	fadd   DWORD PTR [ebp-0x1]
  4089a7:	add    BYTE PTR [esi],ch
  4089a9:	add    BYTE PTR [esi],ch
  4089ab:	arpl   WORD PTR [ecx],dx
  4089ad:	inc    DWORD PTR [eax]
  4089af:	add    BYTE PTR [ebx],cl
  4089b1:	add    BYTE PTR [eax],al
  4089b3:	cmp    DWORD PTR ds:0xec83ffd2,eax
  4089b9:	inc    ebp
  4089bb:	arpl   ax,di
  4089bd:	add    bh,bh
  4089bf:	and    DWORD PTR [eax+0x26beffcc],0xffffffec
  4089c6:	add    BYTE PTR [eax],al
  4089c8:	popa   
  4089c9:	or     DWORD PTR [ebp+0x5e],0xffffffba
  4089cd:	add    BYTE PTR [eax],al
  4089cf:	dec    DWORD PTR [eax+0x47ba0089]
  4089d5:	pop    esp
  4089d6:	(bad)  
  4089d7:	call   FWORD PTR [ecx-0x7d]
  4089da:	ss mov esi,0x8983ad
  4089e0:	inc    DWORD PTR gs:[eax]
  4089e3:	loope  0x408989
  4089e5:	sar    bh,1
  4089e7:	(bad)  
  4089e8:	jg     0x4089ea
  4089ea:	sub    ah,BYTE PTR [edx]
  4089ec:	iret   
  4089ed:	(bad)  
  4089ee:	inc    DWORD PTR [ebx+0x2000ff64]
  4089f4:	jne    0x4089d5
  4089f6:	add    BYTE PTR [ebx-0xda3ff20],al
  4089fc:	dec    eax
  4089fd:	cmp    edi,0x0
  408a00:	inc    esi
  408a01:	add    DWORD PTR [ebx-0x33cb83ec],0x0
  408a08:	aam    0x89
  408a0a:	jno    0x4089f0
  408a0c:	inc    BYTE PTR [eax]
  408a0e:	inc    DWORD PTR [eax]
  408a10:	xchg   edi,eax
  408a11:	int3   
  408a12:	add    dl,cl
  408a14:	mov    edx,0x50ffff15
  408a19:	add    BYTE PTR [eax+eax*2+0x7e],dl
  408a1d:	add    bh,bh
  408a1f:	int3   
  408a20:	or     BYTE PTR [eax],al
  408a22:	add    bh,dh
  408a24:	ins    BYTE PTR es:[edi],dx
  408a25:	icebp  
  408a26:	(bad)  
  408a27:	jmp    FWORD PTR [eax-0x7d]
  408a2a:	call   0xcd003
  408a2f:	mov    DWORD PTR [edi+0x0],ebp
  408a32:	mov    DWORD PTR [edi],edx
  408a34:	push   ebp
  408a35:	ret    
  408a36:	mov    edi,edi
  408a38:	inc    edx
  408a39:	add    BYTE PTR [eax],cl
  408a3b:	rcr    DWORD PTR [eax+eax*1-0x7d],1
  408a3f:	dec    DWORD PTR [eax-0x1851ff01]
  408a45:	jnp    0x408a46
  408a47:	call   FWORD PTR [ebx+0x47b04eff]
  408a4d:	dec    DWORD PTR [ecx+0xffbd00]
  408a53:	cs popa 
  408a55:	xchg   ebx,eax
  408a56:	inc    DWORD PTR [eax]
  408a58:	xor    edi,edi
  408a5a:	mov    ecx,0xcfae
  408a5f:	call   FWORD PTR [esi]
  408a61:	add    bh,bh
  408a63:	push   ebx
  408a64:	(bad)  
  408a65:	ins    BYTE PTR es:[edi],dx
  408a66:	inc    DWORD PTR [eax]
  408a68:	push   es
  408a69:	int3   
  408a6a:	test   esp,0xffffff55
  408a70:	outs   dx,BYTE PTR ds:[esi]
  408a71:	(bad)  
  408a72:	(bad)  
  408a73:	cli    
  408a74:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a76:	int3   
  408a77:	call   DWORD PTR [esi-0x1]
  408a7a:	push   ds
  408a7b:	xor    ch,ah
  408a7d:	add    BYTE PTR [eax],al
  408a7f:	sub    DWORD PTR [eax+eax*1+0x0],0x49
  408a84:	mov    ah,0x7a
  408a86:	(bad)  
  408a87:	inc    ebp
  408a89:	inc    DWORD PTR [ebp+0xff0b33]
  408a8f:	call   DWORD PTR [eax]
  408a91:	add    BYTE PTR [eax],al
  408a93:	loope  0x408af7
  408a95:	mov    ebx,0x983ff
  408a9a:	ins    DWORD PTR es:[edi],dx
  408a9b:	mov    ah,0x98
  408a9d:	add    DWORD PTR [eax],0xffffffcc
  408aa0:	cmc    
  408aa1:	inc    DWORD PTR [eax]
  408aa3:	or     al,BYTE PTR [eax-0x72]
  408aa6:	dec    DWORD PTR [ecx+0x47b2ff7f]
  408aac:	pop    esp
  408aad:	add    bh,bh
  408aaf:	add    BYTE PTR [edx+0x0],ah
  408ab2:	or     DWORD PTR [ecx+0xfff96b],0xffffffc9
  408ab9:	add    BYTE PTR [ebp-0x39],ah
  408abc:	lods   al,BYTE PTR ds:[esi]
  408abd:	cmp    edi,0xffffff89
  408ac0:	sub    eax,0xb19a00ff
  408ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ac6:	add    DWORD PTR [ebx-0x4595ff8f],0xffffffb0
  408acd:	add    BYTE PTR [eax],al
  408acf:	add    bh,bl
  408ad1:	mov    edi,edi
  408ad3:	std    
  408ad4:	dec    ebp
  408ad5:	mov    eax,DWORD PTR [eax]
  408ad7:	inc    DWORD PTR [edx-0x22792400]
  408add:	add    bh,bh
  408adf:	dec    DWORD PTR [ebp-0x5a0a0001]
  408ae5:	sbb    eax,0xffe68300
  408aea:	(bad)  
  408aeb:	pusha  
  408aec:	test   BYTE PTR [ebx-0x7c69007d],0x0
  408af3:	pushf  
  408af4:	or     ebp,DWORD PTR ds:0xff8300ff
  408afa:	fistp  WORD PTR [edi]
  408afc:	lahf   
  408afd:	(bad)  
  408afe:	(bad)  
  408aff:	push   DWORD PTR [edi-0x413f0000]
  408b05:	xchg   ecx,eax
  408b06:	add    DWORD PTR [eax],0x36
  408b09:	add    BYTE PTR [edx-0xdcb9],bl
  408b0f:	dec    DWORD PTR [edi]
  408b11:	add    BYTE PTR [eax],al
  408b13:	add    esp,edi
  408b15:	and    al,0xff
  408b17:	add    BYTE PTR [edi-0x7d],ah
  408b1a:	out    dx,al
  408b1b:	sub    DWORD PTR [ebx-0x7d],eax
  408b1e:	add    DWORD PTR [ebx-0x2a0076a0],0xffffff9d
  408b25:	push   ss
  408b26:	int3   
  408b27:	dec    DWORD PTR [edx-0x52651600]
  408b2d:	(bad)  
  408b2e:	inc    DWORD PTR [eax]
  408b30:	mov    esp,0x1422ff00
  408b35:	cmp    eax,DWORD PTR [ebx-0x4c7c8201]
  408b3b:	js     0x408b84
  408b3d:	mov    edi,edi
  408b3f:	sbb    eax,0xffffffff
  408b42:	jmp    FWORD PTR [eax+esi*1-0x1600ff22]
  408b49:	call   DWORD PTR [edi+0x52]
  408b4c:	fadd   DWORD PTR [eax]
  408b4e:	cmp    edi,0xffffff88
  408b51:	cmp    edi,0xffffff84
  408b54:	out    0x77,al
  408b56:	add    DWORD PTR [ebx+0x1e57007a],0x47
  408b5d:	add    BYTE PTR [ebx+0x8314cc],al
  408b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b64:	fisttp QWORD PTR [eax-0x33507c01]
  408b6a:	lea    ecx,[ebx+0xffff8b]
  408b70:	adc    bh,bh
  408b72:	add    BYTE PTR [ebx-0x68],ch
  408b75:	jmp    0x82b2:0xff8d0083
  408b7c:	arpl   di,di
  408b7e:	add    BYTE PTR [ebx+0x4ccfff2],al
  408b84:	dec    esi
  408b85:	lea    eax,[eax]
  408b87:	add    bh,bh
  408b89:	(bad)  
  408b8a:	inc    DWORD PTR [eax]
  408b8c:	add    bh,bh
  408b8e:	add    bh,bh
  408b90:	(bad)  
  408b91:	(bad)  
  408b92:	push   DWORD PTR [eax+0x2d]
  408b95:	sbb    DWORD PTR [edx-0x33763396],0x7b
  408b9c:	mov    cl,0xcc
  408b9e:	inc    edx
  408b9f:	jne    0x408ba1
  408ba1:	add    BYTE PTR [eax],al
  408ba3:	cmp    bh,BYTE PTR [eax-0x76192a00]
  408ba9:	int3   
  408baa:	call   FWORD PTR [eax-0x1fb00020]
  408bb0:	inc    DWORD PTR [eax]
  408bb2:	dec    DWORD PTR [ebx+esi*8]
  408bb5:	add    BYTE PTR [eax+eax*4-0x1],dl
  408bb9:	add    bh,bh
  408bbb:	and    edx,esp
  408bbd:	add    BYTE PTR [esi],al
  408bbf:	inc    edx
  408bc0:	inc    DWORD PTR [ebx-0xc3400]
  408bc6:	or     eax,0xffffff3b
  408bcb:	js     0x408c15
  408bcd:	call   DWORD PTR [esi+ebx*2]
  408bd0:	(bad)  
  408bd1:	inc    DWORD PTR [eax]
  408bd3:	aas    
  408bd4:	mov    al,BYTE PTR [eax]
  408bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd7:	dec    ebx
  408bd8:	(bad)  
  408bd9:	inc    DWORD PTR [eax]
  408bdb:	mov    ch,dl
  408bdd:	or     edx,0xffffff80
  408be0:	(bad)  
  408be1:	inc    DWORD PTR [eax]
  408be3:	lods   al,BYTE PTR ds:[esi]
  408be4:	dec    edi
  408be5:	(bad)  
  408be6:	jg     0x408b7d
  408be8:	add    bh,bh
  408bea:	mov    esp,edx
  408bec:	lock call FWORD PTR [edx]
  408bef:	add    BYTE PTR [eax],0xcc
  408bf2:	add    BYTE PTR [esi+0x74],bh
  408bf5:	add    BYTE PTR [edx-0x27],bh
  408bf8:	inc    DWORD PTR [ebx-0x8e5801]
  408bfe:	inc    edi
  408bff:	pop    edi
  408c00:	add    bh,bh
  408c02:	dec    DWORD PTR [edx]
  408c04:	jne    0x408c05
  408c06:	cmp    BYTE PTR [esi],dh
  408c08:	add    DWORD PTR [eax],0xffffffff
  408c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c0c:	pop    ds
  408c0d:	inc    esi
  408c0f:	aaa    
  408c10:	int3   
  408c11:	cmp    edi,0xffffffb9
  408c14:	outs   dx,BYTE PTR ds:[esi]
  408c15:	jmp    FWORD PTR [esi-0x33339a]
  408c1b:	xchg   esp,eax
  408c1c:	pop    ecx
  408c1d:	(bad)  
  408c1e:	fst    QWORD PTR [edx]
  408c20:	add    DWORD PTR [eax],0xffffffff
  408c23:	fdiv   QWORD PTR [ecx]
  408c25:	add    dh,dl
  408c27:	iret   
  408c28:	(bad)  
  408c29:	dec    DWORD PTR [ecx-0x2f002872]
  408c2f:	xor    bh,bh
  408c31:	(bad)  
  408c32:	call   DWORD PTR [ebx-0x5118ff5c]
  408c38:	dec    esp
  408c3a:	jmp    FWORD PTR [edx+0x27]
  408c3d:	add    BYTE PTR [ecx-0xc6],bl
  408c43:	in     al,0xac
  408c45:	mov    edx,eax
  408c47:	add    BYTE PTR es:[ebx-0x38d300],al
  408c4e:	jmp    0x5de5:0x831b
  408c55:	cmp    DWORD PTR [esi+esi*4-0x1],0x0
  408c5a:	mov    DWORD PTR [edx],ebp
  408c5c:	enter  0x9089,0x7
  408c60:	mov    edi,edi
  408c62:	push   DWORD PTR [ebp+0x64]
  408c65:	sub    esi,0xffffff99
  408c68:	add    DWORD PTR [eax],0xffffffff
  408c6b:	and    al,0x22
  408c6d:	cmp    DWORD PTR [ecx],0x60
  408c70:	(bad)  
  408c71:	(bad)  
  408c72:	call   edi
  408c74:	sbb    edi,edi
  408c76:	(bad)  
  408c77:	mov    ebp,0xd489ffff
  408c7c:	out    dx,al
  408c7d:	mov    DWORD PTR [ecx+ebx*4],esi
  408c80:	int3   
  408c81:	(bad)  
  408c82:	jmp    FWORD PTR [ebx-0x25]
  408c85:	dec    eax
  408c87:	ss add bh,bh
  408c8a:	mov    eax,esi
  408c8c:	xchg   BYTE PTR [eax],al
  408c8e:	jno    0x408c98
  408c90:	(bad)  
  408c91:	(bad)  
  408c92:	jmp    DWORD PTR [eax]
  408c94:	jl     0x408c95
  408c96:	in     eax,0x57
  408c98:	(bad)  
  408c99:	inc    DWORD PTR [ebx-0x47ff9054]
  408c9f:	cmp    bh,0x0
  408ca2:	jmp    DWORD PTR [edx+0x3e4dffd2]
  408ca8:	add    bh,bh
  408caa:	add    BYTE PTR [edx+0x2bab897c],ah
  408cb0:	add    BYTE PTR [eax],al
  408cb2:	jmp    FWORD PTR ds:0x4ba00fa
  408cb8:	mov    edi,edi
  408cba:	add    ch,dl
  408cbc:	inc    esp
  408cbd:	call   DWORD PTR [ecx]
  408cbf:	pop    eax
  408cc0:	inc    DWORD PTR [ebx-0x334c0c01]
  408cc6:	cmp    BYTE PTR [esi],dl
  408cc8:	add    BYTE PTR [eax],al
  408cca:	cmp    edx,0x41
  408ccd:	add    BYTE PTR [edi-0x28],ch
  408cd0:	add    bh,bh
  408cd2:	jmp    DWORD PTR [ecx+0x4f]
  408cd5:	add    bh,dh
  408cd7:	das    
  408cd8:	add    bh,bh
  408cda:	call   DWORD PTR [eax-0x77]
  408cdd:	add    BYTE PTR [edi],dl
  408cdf:	push   ecx
  408ce0:	add    DWORD PTR [eax],0xffffffff
  408ce3:	push   esi
  408ce4:	jecxz  0x408ce6
  408ce6:	lods   eax,DWORD PTR ss:[esi]
  408ce8:	mov    edi,edi
  408cea:	dec    DWORD PTR [ebx-0x11a000a7]
  408cf0:	(bad)  
  408cf1:	(bad)  
  408cf2:	jmp    DWORD PTR [ebp+0x31]
  408cf5:	push   DWORD PTR [ecx+esi*1]
  408cf8:	add    DWORD PTR [ebx+0x653eff],0xfffffff3
  408cff:	pop    esi
  408d00:	cmp    edi,0xffffffff
  408d03:	or     ch,BYTE PTR [ebx+0x0]
  408d06:	mov    cl,0x61
  408d08:	mov    edi,edi
  408d0a:	or     DWORD PTR [esi+0x61ceff61],0xffffff83
  408d11:	or     DWORD PTR [ecx-0x56007850],0x62
  408d18:	add    DWORD PTR [ebx-0x8fa300],0xffffff8c
  408d1f:	fadd   DWORD PTR [ebx+0x4fcaff00]
  408d25:	call   DWORD PTR [esi-0x760000e2]
  408d2b:	nop
  408d2c:	dec    eax
  408d2d:	call   DWORD PTR [edi+0x67]
  408d30:	inc    DWORD PTR [eax]
  408d32:	(bad)  
  408d33:	mov    ebx,0x9bd5897c
  408d38:	inc    DWORD PTR [ebx-0x33105101]
  408d3e:	cmp    edx,DWORD PTR [edx]
  408d40:	add    BYTE PTR [eax],al
  408d42:	(bad)  
  408d43:	js     0x408ce0
  408d45:	add    BYTE PTR [ebx+0x47],bl
  408d48:	int3   
  408d49:	add    BYTE PTR [eax],al
  408d4b:	stos   BYTE PTR es:[edi],al
  408d4c:	add    DWORD PTR [ebx+0x839f76],0xffffffff
  408d53:	push   ecx
  408d54:	clc    
  408d55:	add    cl,bh
  408d57:	mov    ds:0x4dffff00,eax
  408d5c:	inc    esp
  408d5d:	sub    DWORD PTR [ebp-0x2f],0xffffffff
  408d61:	cmp    edi,0x68
  408d64:	and    edi,edi
  408d66:	neg    al
  408d68:	int3   
  408d69:	dec    esp
  408d6b:	fs fwait
  408d6d:	adc    DWORD PTR [ecx+0x77],0xffffffff
  408d71:	add    bh,bh
  408d73:	mov    bh,0xc4
  408d75:	int3   
  408d76:	push   ecx
  408d77:	out    0x0,al
  408d79:	add    BYTE PTR [eax],al
  408d7b:	int    0xa5
  408d7d:	inc    ebp
  408d7f:	sbb    al,0xff
  408d81:	(bad)  
  408d82:	dec    DWORD PTR [esi]
  408d84:	cld    
  408d85:	add    BYTE PTR [edx-0x32],bl
  408d8b:	jae    0x408d80
  408d8d:	int3   
  408d8e:	rcr    BYTE PTR [eax-0x79000001],1
  408d94:	int3   
  408d95:	add    BYTE PTR [edx+0xb],ch
  408d98:	(bad)  
  408d99:	dec    esp
  408d9b:	int3   
  408d9c:	cmc    
  408d9d:	jmp    DWORD PTR [ebp+0x39]
  408da0:	add    BYTE PTR [eax],al
  408da2:	push   DWORD PTR [eax+0x59]
  408da5:	push   DWORD PTR [eax]
  408da7:	(bad)  
  408da8:	int3   
  408da9:	cmp    edi,0xffffffca
  408dac:	retf   
  408dad:	push   eax
  408daf:	or     BYTE PTR [ecx-0x42700001],cl
  408db5:	add    BYTE PTR [edx+0xffcc5f],dl
  408dbb:	add    cl,ch
  408dbd:	dec    DWORD PTR [edi]
  408dbf:	mov    ah,0x83
  408dc1:	add    BYTE PTR [eax],al
  408dc3:	jecxz  0x408ded
  408dc5:	add    ch,cl
  408dc7:	xchg   esp,eax
  408dc8:	cmp    edi,0x0
  408dcb:	jp     0x408e27
  408dcd:	add    BYTE PTR [ecx+ebx*8-0x34],bl
  408dd1:	add    bh,bh
  408dd3:	push   esi
  408dd4:	lahf   
  408dd5:	jmp    edi
  408dd7:	jmp    0x408dd9
  408dd9:	int3   
  408dda:	sub    DWORD PTR [ebp+0x73],0x0
  408dde:	xor    edx,DWORD PTR [esp+ecx*8-0x27300100]
  408de5:	int3   
  408de6:	mov    al,BYTE PTR [edx-0x7d]
  408de9:	inc    DWORD PTR [ebx+0x37009a74]
  408def:	add    al,0xff
  408df1:	mov    DWORD PTR [eax],eax
  408df3:	jmp    0xc5e51121
  408df8:	int3   
  408df9:	int3   
  408dfa:	(bad)  
  408dfb:	clc    
  408dfc:	inc    DWORD PTR [eax]
  408dfe:	(bad)  
  408dff:	loopne 0x408e00
  408e01:	int3   
  408e02:	inc    DWORD PTR [eax+edi*2]
  408e05:	add    BYTE PTR ds:0xffffff30,ah
  408e0b:	mov    ebx,0x24100b1
  408e10:	add    BYTE PTR [eax],al
  408e12:	mov    DWORD PTR [ecx+0x11],ecx
  408e15:	push   DWORD PTR [ebx-0x45]
  408e18:	(bad)  
  408e19:	(bad)  
  408e1a:	inc    DWORD PTR [edi]
  408e1c:	push   es
  408e1d:	call   DWORD PTR [ebp+0xffff21]
  408e23:	aam    0xf4
  408e25:	(bad)  
  408e26:	jnp    0x408e7b
  408e28:	add    BYTE PTR [eax],al
  408e2a:	jmp    DWORD PTR [ecx-0x58f6ffa7]
  408e30:	inc    DWORD PTR [eax]
  408e32:	int3   
  408e33:	push   cs
  408e34:	sub    eax,DWORD PTR [eax]
  408e36:	cmp    DWORD PTR [ebx-0x1],0x0
  408e3a:	add    BYTE PTR [edi+eax*2],dl
  408e3d:	(bad)  
  408e3e:	cmp    esp,edx
  408e40:	add    DWORD PTR [ebx-0x7cdaf67d],0xffffffb8
  408e47:	loopne 0x408e15
  408e49:	add    bh,bh
  408e4b:	sub    DWORD PTR [edi],eax
  408e4d:	jmp    DWORD PTR [edi]
  408e4f:	cmp    eax,0x78ffcc83
  408e54:	push   esp
  408e55:	call   FWORD PTR [edi]
  408e57:	push   esi
  408e58:	dec    DWORD PTR [ecx-0xb62001]
  408e5e:	into   
  408e5f:	mov    bh,0x0
  408e61:	(bad)  
  408e62:	jmp    DWORD PTR [edi]
  408e64:	sbb    DWORD PTR [eax],eax
  408e66:	and    DWORD PTR [edx],ecx
  408e68:	add    BYTE PTR [ebx-0xd89f01],al
  408e6e:	aaa    
  408e6f:	scas   al,BYTE PTR es:[edi]
  408e70:	add    DWORD PTR [eax],0xffffffff
  408e73:	aas    
  408e74:	aam    0xff
  408e76:	xor    al,0x97
  408e78:	add    bh,bh
  408e7a:	push   ebx
  408e7c:	push   ecx
  408e7d:	add    BYTE PTR [esi-0x20],bh
  408e80:	add    bh,bh
  408e82:	jmp    FWORD PTR [edx+0x56cb8319]
  408e88:	inc    DWORD PTR [eax]
  408e8a:	jmp    FWORD PTR [edi-0x54]
  408e8d:	call   FWORD PTR [esi+ecx*8+0xffff83]
  408e94:	xchg   edx,eax
  408e95:	add    eax,0xffffff8f
  408e98:	(bad)  
  408e99:	inc    DWORD PTR [ebx+0x5e83090d]
  408e9f:	cmp    al,0x83
  408ea1:	inc    DWORD PTR [ebx-0x7e00a2f4]
  408ea7:	jmp    0x408e32
  408ea9:	add    BYTE PTR [ecx-0xf7cb2fb],cl
  408eaf:	into   
  408eb0:	inc    DWORD PTR [eax]
  408eb2:	add    BYTE PTR [esi],ch
  408eb4:	out    0xff,eax
  408eb6:	out    0x78,al
  408eb8:	cmp    edi,0xffffffff
  408ebb:	xor    dl,dh
  408ebd:	int3   
  408ebe:	mov    esp,0xccdb
  408ec3:	jb     0x408e4c
  408ec5:	add    eax,0x59
  408ec8:	add    BYTE PTR [eax],al
  408eca:	add    al,bh
  408ecc:	push   ss
  408ecd:	dec    DWORD PTR [ecx+ebp*1+0x0]
  408ed1:	add    BYTE PTR [eax],al
  408ed3:	pushf  
  408ed4:	inc    esp
  408ed5:	add    BYTE PTR [eax+0x15],cl
  408ed8:	inc    DWORD PTR [eax]
  408eda:	call   FWORD PTR [ecx]
  408edc:	jge    0x408edd
  408ede:	inc    esi
  408edf:	and    al,BYTE PTR [eax]
  408ee1:	int3   
  408ee2:	inc    DWORD PTR [eax-0x326aff5e]
  408ee8:	add    BYTE PTR [ebx-0xd4ab7d],al
  408eee:	jmp    0x689:0xff89fff1
  408ef5:	dec    DWORD PTR [edx]
  408ef7:	fld    QWORD PTR [ebx+0x760a8389]
  408efd:	int3   
  408efe:	(bad)  
  408eff:	sbb    eax,DWORD PTR [ebx-0x6f01ff01]
  408f05:	jmp    FWORD PTR [ebx-0xffffad]
  408f0b:	int    0xcd
  408f0d:	int3   
  408f0e:	lds    ebp,FWORD PTR [ebp+0x48ffffcc]
  408f14:	test   al,0xff
  408f16:	push   ds
  408f17:	dec    edx
  408f18:	add    bh,bh
  408f1a:	add    BYTE PTR [edi],cl
  408f1c:	rol    BYTE PTR [ebx+0xff30e8],0xcc
  408f23:	mov    WORD PTR [edx-0xc5a000],fs
  408f29:	add    bh,bh
  408f2b:	cmp    ecx,DWORD PTR [edx-0x33aa4601]
  408f31:	add    bh,bh
  408f33:	push   eax
  408f34:	ja     0x408f36
  408f36:	push   esi
  408f37:	push   es
  408f38:	add    BYTE PTR [eax],al
  408f3a:	and    ecx,0x66
  408f3d:	call   FWORD PTR [edx-0x7c00ff3e]
  408f43:	(bad)  
  408f44:	pop    edx
  408f45:	mov    esi,eax
  408f47:	loope  0x408ecc
  408f49:	add    bh,bh
  408f4b:	xchg   ecx,eax
  408f4c:	dec    eax
  408f4d:	jmp    DWORD PTR [edi+esi*4]
  408f50:	add    bh,bh
  408f52:	int3   
  408f53:	push   edx
  408f54:	lahf   
  408f55:	(bad)  
  408f56:	jmp    0x3ec:0xff8383af
  408f5d:	add    BYTE PTR [ecx],dh
  408f5f:	stos   BYTE PTR es:[edi],al
  408f60:	add    bh,bh
  408f62:	jmp    FWORD PTR [eax-0x1c28ffec]
  408f68:	(bad)  
  408f69:	inc    DWORD PTR [eax]
  408f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f6c:	sbb    eax,0x837979cc
  408f71:	(bad)  
  408f72:	jmp    DWORD PTR [ebp+0x39]
  408f75:	add    BYTE PTR [ebx-0xff7c35],ch
  408f7b:	dec    ebx
  408f7c:	or     ah,0xc8
  408f7f:	sub    BYTE PTR [eax],al
  408f81:	(bad)  
  408f82:	inc    eax
  408f84:	imul   eax,DWORD PTR [eax],0x8983f45f
  408f8a:	(bad)  
  408f8b:	cmp    eax,0xb41e00d0
  408f90:	inc    DWORD PTR [eax]
  408f92:	call   FWORD PTR [eax+0x42]
  408f95:	mov    DWORD PTR [ebx],esp
  408f97:	stc    
  408f98:	add    DWORD PTR [eax],0xffffffff
  408f9b:	push   ss
  408f9c:	mov    eax,0x897fac00
  408fa1:	inc    DWORD PTR [eax]
  408fa3:	pusha  
  408fa4:	add    al,BYTE PTR [eax]
  408fa6:	push   ebp
  408fa7:	imul   edi,edi,0xffffffff
  408faa:	add    BYTE PTR [ecx+0x25],dl
  408fad:	add    BYTE PTR [ebp+edx*2-0x1],bl
  408fb1:	(bad)  
  408fb2:	(bad)  
  408fb3:	jns    0x408f3d
  408fb5:	add    BYTE PTR [edx-0x33003380],ah
  408fbb:	cmp    ebp,DWORD PTR [ebx-0xeb3900]
  408fc1:	inc    DWORD PTR [eax]
  408fc3:	dec    edi
  408fc4:	call   0x1048bc9
  408fc9:	add    bh,bh
  408fcb:	das    
  408fcc:	add    eax,0x247dff
  408fd1:	dec    DWORD PTR [ecx-0x250062eb]
  408fd7:	ss int3 
  408fd9:	inc    DWORD PTR [eax]
  408fdb:	sbb    BYTE PTR [edi+0x0],bh
  408fde:	scas   eax,DWORD PTR es:[edi]
  408fdf:	outs   dx,DWORD PTR ds:[esi]
  408fe0:	int3   
  408fe1:	inc    DWORD PTR [eax]
  408fe3:	je     0x408fcb
  408fe5:	int3   
  408fe6:	stc    
  408fe7:	xchg   edi,eax
  408fe8:	add    BYTE PTR [eax],al
  408fea:	add    cl,ah
  408fec:	fadd   DWORD PTR [eax]
  408fee:	data16 loop 0x408ff0
  408ff1:	add    bh,bh
  408ff3:	push   edi
  408ff4:	jnp    0x408f7f
  408ff6:	dec    esi
  408ff7:	sub    DWORD PTR [eax],eax
  408ff9:	add    BYTE PTR [ebx+0x7f001dca],al
  408fff:	pop    ebx
  409000:	inc    DWORD PTR [eax]
  409002:	dec    DWORD PTR [edx+eax*4]
  409005:	inc    DWORD PTR [ebx-0x7c0000fc]
  40900b:	pop    sp
  40900d:	add    BYTE PTR [edx-0x5e],bl
  409010:	inc    DWORD PTR [eax]
  409012:	add    DWORD PTR [ecx],0xffffffc8
  409015:	call   DWORD PTR [ecx-0xf]
  409018:	inc    DWORD PTR [ebx+0xb438ff]
  40901e:	push   0x83ff0094
  409023:	cli    
  409024:	cs int3 
  409026:	mov    edx,0x83ffffc3
  40902b:	aam    0xb1
  40902d:	add    BYTE PTR [ebp+0xffff9f],dh
  409033:	sahf   
  409034:	ret    
  409035:	call   FWORD PTR [edi+0x43]
  409038:	mov    edi,edi
  40903a:	call   DWORD PTR [edx+0x75]
  40903d:	add    BYTE PTR [edx+0x25],dl
  409040:	inc    DWORD PTR [eax]
  409042:	push   DWORD PTR [eax]
  409044:	rol    BYTE PTR [eax],0xf4
  409047:	(bad)  
  409048:	inc    DWORD PTR [ebx+0x849ff]
  40904e:	fs (bad) 
  409050:	add    BYTE PTR [eax],al
  409052:	add    ch,bh
  409054:	pop    ds
  409055:	call   FWORD PTR [ebx+ecx*2-0x4f010000]
  40905c:	mov    ebx,0x1e7cff
  409061:	inc    DWORD PTR [eax]
  409063:	cmp    bh,BYTE PTR [edi+0x399b83]
  409069:	(bad)  
  40906a:	call   ebx
  40906c:	mov    cl,0x0
  40906e:	stc    
  40906f:	or     DWORD PTR [ecx-0x4a7eff7d],ecx
  409075:	inc    DWORD PTR [eax+esi*8+0x0]
  409079:	add    BYTE PTR [ecx-0x60ff7c85],cl
  40907f:	mov    eax,ds:0xb2ffff00
  409084:	add    BYTE PTR ss:[eax-0x83],ah
  40908b:	xchg   edx,eax
  40908c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40908d:	inc    DWORD PTR ds:0xff00ff8c
  409093:	jae    0x409088
  409095:	(bad)  
  409096:	(bad)  [eax-0x1]
  409099:	(bad)  
  40909a:	jmp    DWORD PTR [ebx-0x3c]
  40909d:	(bad)  
  40909e:	jge    0x40909f
  4090a0:	add    bh,bh
  4090a2:	(bad)  
  4090a3:	call   0x25a89101
  4090a8:	inc    DWORD PTR [eax]
  4090aa:	add    BYTE PTR [ecx],ah
  4090ac:	mov    edi,edi
  4090ae:	ds ins BYTE PTR es:[edi],dx
  4090b0:	add    BYTE PTR [eax],al
  4090b2:	add    BYTE PTR [edx+0x36c2ff08],bh
  4090b8:	mov    edi,edi
  4090ba:	add    ebx,0xffffff9e
  4090bd:	or     DWORD PTR [eax-0xdb],0x71
  4090c4:	jmp    0xffff:0x570cff
  4090cb:	das    
  4090cc:	or     bh,bh
  4090ce:	inc    ebx
  4090cf:	(bad)  
  4090d0:	int3   
  4090d1:	int3   
  4090d2:	add    BYTE PTR [esi+esi*1],ah
  4090d5:	add    bl,ch
  4090d7:	jo     0x409062
  4090d9:	(bad)  
  4090da:	inc    DWORD PTR [ebp-0x12]
  4090dd:	int3   
  4090de:	test   al,0x6e
  4090e0:	add    bh,bh
  4090e2:	int3   
  4090e3:	pusha  
  4090e4:	adc    DWORD PTR [ecx-0xdf53],ecx
  4090ea:	(bad)  
  4090eb:	mov    esp,0x173c8359
  4090f0:	or     esp,0xffffffff
  4090f3:	mov    bh,0x21
  4090f5:	dec    eax
  4090f7:	add    al,BYTE PTR [ebx-0x1ac10001]
  4090fd:	add    BYTE PTR [edi],al
  4090ff:	call   0x79401503
  409104:	popa   
  409105:	add    BYTE PTR [edi-0xffff],cl
  40910b:	xor    eax,0x2f900be
  409110:	cmp    edi,0xffffffff
  409113:	dec    eax
  409114:	addr16 add dl,ah
  409117:	push   es
  409118:	inc    DWORD PTR [ebx-0x7638af01]
  40911e:	jnp    0x4090f1
  409120:	inc    DWORD PTR [eax]
  409122:	add    BYTE PTR [esi-0x72217c2d],bh
  409128:	inc    DWORD PTR [ebx+0xe4bc00]
  40912e:	or     DWORD PTR [ebx-0x1],esp
  409131:	add    ah,cl
  409133:	or     ah,BYTE PTR [esi-0xe23701]
  409139:	inc    DWORD PTR [ebx+0x5d0004d0]
  40913f:	mov    esp,0xa58300ff
  409144:	xor    edi,edi
  409146:	scas   al,BYTE PTR es:[edi]
  409147:	mov    eax,ds:0x32ffff00
  40914c:	xlat   BYTE PTR ds:[ebx]
  40914d:	jmp    DWORD PTR [ebx]
  40914f:	(bad)  
  409153:	sti    
  409154:	(bad)  
  409155:	inc    edi
  409157:	je     0x409159
  409159:	cmp    edi,0x3a
  40915c:	pusha  
  40915d:	and    DWORD PTR [ecx+0x83fc],0xffffff99
  409164:	cmp    ecx,esp
  409166:	bound  ecx,QWORD PTR [ebx+0x7ff0089]
  40916c:	sar    edi,cl
  40916e:	int3   
  40916f:	jns    0x409170
  409171:	cmp    edi,0x22
  409174:	jmp    DWORD PTR es:[ebp+esi*8-0x1]
  409179:	add    BYTE PTR [ecx+0x60ff282d],cl
  40917f:	stos   BYTE PTR es:[edi],al
  409180:	(bad)  
  409181:	dec    esp
  409183:	pop    ebp
  409184:	in     al,dx
  409185:	add    BYTE PTR [ecx],ch
  409187:	ss add bh,bh
  40918a:	add    BYTE PTR [eax-0x78d400e7],ch
  409190:	int3   
  409191:	int3   
  409192:	mov    DWORD PTR ds:0xd80eff15,edx
  409198:	(bad)  
  409199:	inc    DWORD PTR [ebx+0x25002b72]
  40919f:	test   al,0xff
  4091a1:	mov    edi,edi
  4091a3:	lds    ebx,FWORD PTR [ecx-0x832200]
  4091a9:	(bad)  
  4091aa:	jmp    DWORD PTR [edi-0x28c005a]
  4091b0:	add    BYTE PTR [eax],al
  4091b2:	(bad)  
  4091b3:	mov    edi,0x2508ff52
  4091b8:	add    ah,cl
  4091ba:	call   FWORD PTR [ecx-0x6e]
  4091bd:	add    ch,dl
  4091bf:	jnp    0x4091c0
  4091c1:	add    ah,cl
  4091c3:	lahf   
  4091c4:	sub    cl,BYTE PTR [ecx-0xbb72]
  4091ca:	inc    edi
  4091cc:	mov    eax,0x9de900
  4091d1:	add    bh,bh
  4091d3:	es scas eax,DWORD PTR es:[edi]
  4091d5:	add    BYTE PTR [edi-0xff90],ch
  4091db:	rcl    BYTE PTR [eax+eax*1-0x3],1
  4091df:	mov    al,BYTE PTR [ebx+0x1cc4ffff]
  4091e5:	(bad)  
  4091e6:	cmp    dl,BYTE PTR [ebx-0x65000000]
  4091ec:	and    DWORD PTR [eax],eax
  4091ee:	sub    BYTE PTR [esi-0x7d],ch
  4091f1:	inc    DWORD PTR [ebx+0x3200b99a]
  4091f7:	stos   BYTE PTR es:[edi],al
  4091f8:	cmp    edi,0xffffffff
  4091fb:	xchg   edx,eax
  4091fc:	pop    esp
  4091fd:	add    BYTE PTR [ebx-0x58],bh
  409200:	int3   
  409201:	add    DWORD PTR [eax],0x32
  409204:	aaa    
  409205:	add    BYTE PTR [edi+ebx*8],cl
  409208:	int3   
  409209:	dec    DWORD PTR [ecx-0x61ff989d]
  40920f:	mov    eax,ds:0xc0ffffff
  409214:	ins    DWORD PTR es:[edi],dx
  409215:	add    ah,bl
  409217:	(bad)  
  409218:	(bad)  
  409219:	(bad)  
  40921a:	dec    ecx
  40921c:	adc    BYTE PTR [eax],al
  40921e:	xchg   edi,eax
  40921f:	sbb    al,0x0
  409221:	add    ah,cl
  409223:	cld    
  409224:	mov    ds:0xff63c5ff,al
  409229:	add    ah,cl
  40922b:	cmc    
  40922c:	retf   0x3dff
  40922f:	aas    
  409230:	(bad)  
  409231:	inc    DWORD PTR [eax]
  409233:	mov    dl,BYTE PTR [esi-0x143677]
  409239:	inc    DWORD PTR [eax]
  40923b:	adc    ebx,edx
  40923d:	call   edx
  40923f:	mov    ?,edi
  409241:	or     DWORD PTR [ecx+0xe004736],0x62
  409248:	inc    DWORD PTR [eax]
  40924a:	adc    DWORD PTR ds:0x808000f8,0x0
  409251:	add    BYTE PTR [ecx+0x7cff4a4e],cl
  409257:	xchg   esi,eax
  409258:	(bad)  
  409259:	inc    DWORD PTR [eax]
  40925b:	mov    eax,ds:0xf4510004
  409260:	add    DWORD PTR [eax],0xffffffff
  409263:	mov    DWORD PTR [esi-0x425c01],edx
  409269:	inc    DWORD PTR [eax]
  40926b:	je     0x4092e0
  40926d:	inc    DWORD PTR [ebx]
  40926f:	sub    eax,0x9c000089
  409274:	jno    0x409275
  409276:	std    
  409277:	xor    cl,ah
  409279:	add    BYTE PTR [eax],al
  40927b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40927c:	dec    edx
  40927d:	jmp    esi
  40927f:	scas   eax,DWORD PTR es:[edi]
  409280:	(bad)  
  409281:	(bad)  
  409282:	call   FWORD PTR [ebp+0x53]
  409285:	int3   
  409286:	pop    ecx
  409287:	mov    eax,ds:0xa00000ff
  40928c:	jb     0x40928d
  40928e:	mov    dl,0x86
  409290:	add    bh,bh
  409292:	int3   
  409293:	call   0x0:0x9cc80060
  40929a:	inc    DWORD PTR [ebx-0x14]
  40929d:	mov    eax,edi
  40929f:	rol    DWORD PTR [eax],1
  4092a1:	add    BYTE PTR [eax],al
  4092a3:	jno    0x409263
  4092a5:	jmp    FWORD PTR [eax]
  4092a7:	inc    DWORD PTR gs:[eax]
  4092aa:	add    BYTE PTR [eax+ebx*4+0x2a600],dl
  4092b1:	inc    DWORD PTR [ebx-0x6733ca69]
  4092b7:	(bad)  
  4092b8:	dec    esp
  4092ba:	sub    eax,0xffffff8e
  4092bd:	mov    DWORD PTR [edi],ecx
  4092bf:	lea    eax,[eax]
  4092c1:	inc    DWORD PTR [eax]
  4092c3:	addr16 jge 0x40924f
  4092c6:	cli    
  4092c7:	sti    
  4092c8:	int3   
  4092c9:	inc    DWORD PTR [eax]
  4092cb:	mov    eax,ds:0xfe56ffb3
  4092d0:	add    DWORD PTR [eax],0x0
  4092d3:	cmc    
  4092d4:	adc    DWORD PTR [eax],eax
  4092d6:	rcr    DWORD PTR [eax+eax*1],cl
  4092d9:	dec    esp
  4092db:	test   eax,0x7d3aff2f
  4092e0:	(bad)  
  4092e1:	(bad)  
  4092e2:	jmp    DWORD PTR [edx]
  4092e4:	(bad)  
  4092e5:	add    BYTE PTR [edi-0xffc7],dl
  4092eb:	enter  0xc8,0xd6
  4092ef:	push   esi
  4092f0:	add    bh,bh
  4092f2:	cmp    DWORD PTR [edx-0x180e0057],0xffffffff
  4092f9:	or     esp,0x46
  4092fc:	mov    BYTE PTR [ebx-0x155a],0x0
  409303:	rcl    BYTE PTR [eax-0x1],0xbe
  409307:	aas    
  409308:	mov    DWORD PTR [eax],eax
  40930a:	jmp    DWORD PTR ds:0x682bff94
  409310:	(bad)  
  409311:	(bad)  
  409312:	jmp    DWORD PTR [eax]
  409314:	sti    
  409315:	int3   
  409316:	mov    eax,ds:0xff89cc70
  40931b:	mov    ebx,0xa39effb8
  409320:	add    bh,bh
  409322:	(bad)  
  409323:	sti    
  409324:	call   0xffff:0xcc9c3300
  40932b:	push   edx
  40932c:	mov    edx,0x89f61983
  409331:	int3   
  409332:	or     edi,0xffffff9b
  409335:	(bad)  
  409336:	jp     0x4093a8
  409338:	mov    edi,edi
  40933a:	mov    esi,ebp
  40933c:	sub    BYTE PTR [ecx-0xff3c4b],cl
  409342:	add    bl,dl
  409344:	xlat   BYTE PTR ds:[ebx]
  409345:	jmp    FWORD PTR [eax+ecx*1]
  409348:	add    ah,cl
  40934a:	mov    DWORD PTR [eax],eax
  40934c:	imul   eax,DWORD PTR [eax],0xcc003c76
  409352:	add    BYTE PTR [ebp+0x55],ch
  409355:	dec    DWORD PTR [edi-0xf]
  409358:	add    bh,bh
  40935a:	mov    ebp,ebx
  40935c:	push   cs
  40935d:	(bad)  
  40935e:	sti    
  40935f:	push   es
  409360:	inc    DWORD PTR [ebx+0xd76f00]
  409366:	dec    eax
  409367:	xchg   esi,eax
  409368:	add    ah,cl
  40936a:	jmp    DWORD PTR [ecx]
  40936c:	adc    eax,0xff46dbff
  409371:	add    DWORD PTR [ebx-0x2c7c45b2],0xffffffa9
  409378:	add    BYTE PTR [eax],al
  40937a:	add    BYTE PTR [edi-0x388400d5],al
  409380:	dec    esp
  409382:	mov    ebp,eax
  409384:	lds    eax,FWORD PTR [eax]
  409386:	xchg   edx,eax
  409387:	repnz add bh,bh
  40938a:	add    BYTE PTR [ebx-0x7b],al
  40938d:	(bad)  
  40938e:	cmp    al,0xa2
  409390:	or     DWORD PTR [ecx-0x6e7c01],0xffffff9a
  409397:	sub    al,BYTE PTR [eax]
  409399:	(bad)  
  40939a:	call   FWORD PTR [esp+ebx*4-0x1]
  40939e:	shl    edi,cl
  4093a0:	inc    DWORD PTR [ebx+0x8624ff]
  4093a6:	adc    BYTE PTR [edx],dh
  4093a8:	inc    DWORD PTR [ebx-0x413f01]
  4093ae:	popa   
  4093af:	mov    ah,0xff
  4093b1:	add    bh,bh
  4093b3:	aam    0x4e
  4093b5:	inc    DWORD PTR [edi+0xffe3]
  4093bb:	xchg   DWORD PTR cs:[eax],eax
  4093be:	jg     0x4093c1
  4093c0:	add    ah,cl
  4093c2:	call   FWORD PTR ds:0xe494ffe7
  4093c8:	(bad)  
  4093c9:	(bad)  
  4093ca:	call   FWORD PTR [ecx]
  4093cc:	push   0xffffffff
  4093ce:	cld    
  4093cf:	mov    cl,0xff
  4093d1:	(bad)  
  4093d2:	(bad)  
  4093d3:	mov    eax,0x5a8d83b5
  4093d8:	(bad)  
  4093d9:	(bad)  
  4093da:	push   DWORD PTR [ebp+0x44]
  4093dd:	(bad)  
  4093de:	jns    0x409432
  4093e0:	inc    DWORD PTR [ebx-0xd34934]
  4093e6:	pop    ss
  4093e7:	xchg   bh,bh
  4093e9:	add    bh,bh
  4093eb:	pop    edi
  4093ec:	and    edi,edi
  4093ee:	cdq    
  4093ef:	clc    
  4093f0:	add    BYTE PTR [ecx-0x7c614134],cl
  4093f6:	add    al,0x9
  4093f8:	dec    esp
  4093fa:	add    BYTE PTR [ebx-0x74010042],cl
  409400:	add    bh,bh
  409402:	add    BYTE PTR [edx],ch
  409404:	add    al,0x0
  409406:	mov    bh,0x50
  409408:	inc    DWORD PTR [ebx-0x7c972200]
  40940e:	pop    ebp
  40940f:	xor    al,BYTE PTR [eax]
  409411:	inc    DWORD PTR [eax]
  409413:	inc    esi
  409414:	imul   eax,DWORD PTR [eax],0x1e
  409417:	jae    0x40939c
  409419:	add    bh,bh
  40941b:	mov    al,ds:0x34bc0081
  409420:	add    BYTE PTR [ecx-0x339d3101],cl
  409426:	jmp    0x4093e2
  409428:	dec    esp
  40942a:	jmp    DWORD PTR [eax]
  40942c:	aad    0xff
  40942e:	icebp  
  40942f:	push   0x0
  409431:	(bad)  
  409432:	jmp    edx
  409434:	xchg   ebx,eax
  409435:	sbb    DWORD PTR [edi+0x10],0xffffffff
  409439:	(bad)  
  40943a:	jmp    DWORD PTR [edi]
  40943c:	call   0x8383:0xdb54ff
  409443:	or     DWORD PTR [edi],edi
  409445:	add    BYTE PTR [eax],ch
  409447:	pop    eax
  409448:	add    bh,bh
  40944a:	adc    DWORD PTR [eax],0x12
  40944d:	and    DWORD PTR [esi],0x12
  409450:	inc    DWORD PTR [eax]
  409452:	add    DWORD PTR [edx-0x7eedff30],0xffffff83
  409459:	add    BYTE PTR [ebx-0x4d00b3be],al
  40945f:	test   bh,bh
  409461:	inc    DWORD PTR [ebx-0x6ffff4c7]
  409467:	int    0xff
  409469:	inc    DWORD PTR [eax]
  40946b:	mov    ecx,0x822f00e8
  409470:	add    BYTE PTR [ebx-0x7c24e000],al
  409476:	aas    
  409477:	rol    DWORD PTR [ebx+0x5277ffff],0xff
  40947e:	xor    BYTE PTR [edi],ah
  409480:	inc    DWORD PTR [ebx+0xec76cc]
  409486:	lahf   
  409487:	mov    WORD PTR [eax],ax
  40948a:	push   ebp
  40948c:	inc    ecx
  40948d:	call   FWORD PTR [ebp+0x23]
  409490:	cmp    edi,0xffffffff
  409493:	cwde   
  409494:	mov    esi,0xfffaceff
  409499:	add    BYTE PTR [ebx+0x41ff7663],al
  40949f:	mov    edx,0x2100ff00
  4094a4:	pushf  
  4094a5:	add    BYTE PTR [edx],ch
  4094a7:	jae    0x4094a8
  4094a9:	(bad)  
  4094aa:	dec    esp
  4094ac:	or     al,0xcc
  4094ae:	jne    0x409460
  4094b0:	(bad)  
  4094b1:	dec    esp
  4094b3:	ret    0xed
  4094b6:	cmp    al,0x5d
  4094b8:	add    bh,bh
  4094ba:	jmp    DWORD PTR [ecx+0x5d]
  4094bd:	push   DWORD PTR [esi]
  4094bf:	add    BYTE PTR [eax],al
  4094c1:	dec    DWORD PTR [ecx-0x3dffedda]
  4094c7:	jne    0x4094c8
  4094c9:	add    BYTE PTR [eax],al
  4094cb:	pop    ecx
  4094cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094cd:	int3   
  4094ce:	test   eax,0xffee
  4094d3:	je     0x409502
  4094d5:	add    bl,ah
  4094d7:	adc    DWORD PTR [eax],eax
  4094d9:	int3   
  4094da:	add    BYTE PTR [ecx-0x12d1000a],dl
  4094e0:	add    bh,bh
  4094e2:	int3   
  4094e3:	jnp    0x409508
  4094e5:	add    bl,dl
  4094e7:	(bad)  
  4094e8:	inc    DWORD PTR [eax]
  4094ea:	add    BYTE PTR [ecx],ah
  4094ec:	adc    bh,bh
  4094ee:	xor    DWORD PTR [edi],ebx
  4094f0:	inc    DWORD PTR [eax]
  4094f2:	call   DWORD PTR [esi+0x44]
  4094f5:	inc    DWORD PTR ds:0xffccff55
  4094fb:	std    
  4094fc:	xchg   esp,eax
  4094fd:	call   DWORD PTR [eax-0x7633004b]
  409503:	retf   
  409504:	lods   eax,DWORD PTR ds:[esi]
  409505:	call   DWORD PTR [edx]
  409507:	inc    esp
  409508:	add    BYTE PTR [ebx-0x336301],al
  40950e:	xor    al,BYTE PTR [bx+si]
  409511:	add    BYTE PTR [ebx+0x4832e2c],al
  409517:	loopne 0x409518
  409519:	inc    DWORD PTR [ebx-0x79004d21]
  40951f:	jae    0x4094a4
  409521:	add    bh,bh
  409523:	pop    ebp
  409524:	mov    edi,0x6daa83
  409529:	add    bh,bh
  40952b:	pop    edi
  40952c:	mov    BYTE PTR [eax],0xab
  40952f:	ds int3 
  409531:	inc    DWORD PTR [ebx-0x4933bec7]
  409537:	pop    ebx
  409538:	add    DWORD PTR [eax],0xffffffff
  40953b:	pop    ecx
  40953c:	xchg   edx,eax
  40953d:	add    cl,ah
  40953f:	adc    bh,bh
  409541:	inc    DWORD PTR [eax]
  409543:	mov    ah,0x13
  409545:	dec    DWORD PTR [ebx+0x74]
  409548:	add    bh,bh
  40954a:	int3   
  40954b:	std    
  40954c:	push   ds
  40954d:	or     ebx,0x3d
  409550:	add    DWORD PTR [eax],0xffffffcc
  409553:	fadd   DWORD PTR [edi+edi*8]
  409556:	sahf   
  409557:	jns    0x409559
  409559:	inc    DWORD PTR [ebx+0x2d8366b2]
  40955f:	mov    esp,0xd700ff83
  409564:	jno    0x4094e9
  409566:	xor    eax,0xffffffbc
  40956b:	test   BYTE PTR [ebx],bh
  40956d:	jmp    DWORD PTR [ecx+0x43]
  409570:	add    BYTE PTR [eax],al
  409572:	jmp    FWORD PTR [ebx-0x483337f]
  409578:	add    ah,cl
  40957a:	add    BYTE PTR [ebp+0x68],al
  40957d:	int3   
  40957e:	iret   
  40957f:	(bad)  
  409580:	add    ah,cl
  409582:	push   eax
  409584:	sti    
  409585:	or     esi,0xffffffbd
  409588:	(bad)  
  409589:	inc    DWORD PTR [eax]
  40958b:	push   eax
  40958c:	add    BYTE PTR [ebx-0xff7efc],0x83
  409593:	jae    0x40951a
  409595:	add    BYTE PTR [ecx+0x7a],ch
  409598:	add    bh,bh
  40959a:	(bad)  
  40959b:	aas    
  40959c:	sbb    bh,bh
  40959e:	and    eax,esi
  4095a0:	(bad)  
  4095a1:	(bad)  
  4095a2:	jmp    DWORD PTR [edx+0x26]
  4095a5:	add    BYTE PTR [eax-0xe],ah
  4095a8:	inc    DWORD PTR [eax]
  4095aa:	add    BYTE PTR [eax+0x4573ff29],ah
  4095b0:	(bad)  
  4095b1:	inc    DWORD PTR [eax]
  4095b3:	out    dx,eax
  4095b4:	fild   DWORD PTR [eax]
  4095b6:	cmp    bl,ah
  4095b8:	add    ah,cl
  4095ba:	(bad)  
  4095bb:	js     0x4095ff
  4095bd:	call   ebx
  4095bf:	mov    al,0x89
  4095c1:	mov    edi,edi
  4095c3:	sbb    ch,BYTE PTR [edi-0x1]
  4095c6:	cmp    DWORD PTR [ebx+0x1ff00ff],ebx
  4095cc:	repz (bad) 
  4095ce:	dec    BYTE PTR [edx]
  4095d0:	dec    esp
  4095d2:	jmp    FWORD PTR [esp+esi*4+0x0]
  4095d6:	push   ecx
  4095d7:	aam    0x83
  4095d9:	inc    DWORD PTR [eax]
  4095db:	aam    0xba
  4095dd:	and    DWORD PTR [edi+0x64],0x0
  4095e1:	add    bh,bh
  4095e3:	sub    dl,BYTE PTR [ebx+0xbdfd00]
  4095e9:	add    BYTE PTR [ecx-0x4700a4c2],cl
  4095ef:	repnz inc DWORD PTR [ebx-0xa9c01]
  4095f6:	cmc    
  4095f7:	mov    al,ds:0xc600ff83
  4095fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095fd:	jmp    DWORD PTR [edi+edx*2]
  409600:	add    bh,bh
  409602:	add    BYTE PTR [ebp-0x3ff7001f],al
  409608:	(bad)  
  409609:	inc    DWORD PTR [eax]
  40960b:	loop   0x4095a5
  40960d:	sub    DWORD PTR [edi+0xffff77],0xffffff91
  409614:	xor    al,0x89
  409616:	int    0x8b
  409618:	add    bh,bh
  40961a:	add    BYTE PTR [ebx],dl
  40961c:	add    bh,bh
  40961e:	loop   0x4095e7
  409620:	dec    esp
  409622:	call   FWORD PTR [ebp+0x8]
  409625:	call   FWORD PTR [eax-0xff33c2]
  40962b:	in     eax,0xc
  40962d:	call   DWORD PTR [edx]
  40962f:	adc    bh,bh
  409631:	add    DWORD PTR [ebx-0x177c0bdd],0xfffffff5
  409638:	cmp    edi,0xffffffff
  40963b:	xor    al,0x96
  40963d:	inc    DWORD PTR [edi]
  40963f:	lock inc DWORD PTR [ebx-0x33d22901]
  409646:	mov    ds:0xb7,al
  40964b:	(bad)  
  40964c:	and    eax,0x249200
  409651:	dec    esp
  409653:	pop    esp
  409654:	inc    esi
  409655:	dec    DWORD PTR [eax+0x15]
  409658:	(bad)  
  409659:	(bad)  
  40965a:	(bad)  
  40965b:	ficomp WORD PTR [esi-0x34]
  40965e:	pop    ecx
  40965f:	adc    DWORD PTR [ebx-0x63301],eax
  409665:	call   DWORD PTR [eax-0xff7c6c]
  40966b:	repnz xchg edi,eax
  40966d:	add    BYTE PTR [edi+0xffffbc],dh
  409673:	cs pop edi
  409675:	(bad)  
  409676:	mov    esi,0xffff68
  40967b:	sti    
  40967c:	jle    0x40967e
  40967e:	add    esp,DWORD PTR [eax+eax*1]
  409681:	add    bh,bh
  409683:	sbb    edx,DWORD PTR [eax+eax*1+0x22]
  409687:	mov    di,di
  40968a:	add    BYTE PTR [eax+0x6bf900bb],dh
  409690:	inc    DWORD PTR [eax]
  409692:	dec    DWORD PTR [ebx]
  409694:	push   0x0
  409696:	das    
  409697:	loop   0x409665
  409699:	(bad)  
  40969a:	(bad)  
  40969b:	jmp    0xff:0x9783ff62
  4096a2:	int3   
  4096a3:	clc    
  4096a4:	leave  
  4096a5:	(bad)  
  4096a6:	aas    
  4096a7:	adc    eax,0x72ffff00
  4096ac:	mov    bl,0x0
  4096ae:	out    dx,eax
  4096af:	outs   dx,BYTE PTR ds:[esi]
  4096b0:	add    BYTE PTR [eax],al
  4096b2:	and    ecx,0x78
  4096b5:	add    DWORD PTR [edx-0x43],0xffffffff
  4096b9:	inc    DWORD PTR [eax]
  4096bb:	ret    0xff64
  4096be:	and    al,0xc0
  4096c0:	cmp    edi,0xffffffff
  4096c3:	mov    al,ds:0x24b6ff02
  4096c8:	inc    DWORD PTR [eax]
  4096ca:	and    DWORD PTR [esi],0x2e
  4096cd:	dec    DWORD PTR [ecx-0x2f]
  4096d0:	add    bh,bh
  4096d2:	call   FWORD PTR ds:0x554aff80
  4096d8:	or     DWORD PTR [ecx-0x77857d],0x28
  4096df:	adc    edi,edi
  4096e1:	add    BYTE PTR [eax],al
  4096e3:	imul   edi,DWORD PTR [ecx+0x0],0xff890513
  4096ea:	dec    DWORD PTR [ebx]
  4096ec:	inc    eax
  4096ed:	mov    DWORD PTR [ebp-0xff45],ebx
  4096f3:	add    ecx,DWORD PTR [ecx-0x3369f800]
  4096f9:	(bad)  
  4096fa:	(bad)  
  4096fb:	jmp    0xe7cc9796
  409700:	add    BYTE PTR [eax],al
  409702:	jmp    DWORD PTR [eax-0x52]
  409705:	dec    DWORD PTR [ecx+0x38]
  409708:	add    BYTE PTR [eax],al
  40970a:	dec    DWORD PTR [ebp-0x7d]
  40970d:	add    bl,dh
  40970f:	test   al,0x83
  409711:	int3   
  409712:	dec    DWORD PTR [ebp-0x53fb0023]
  409718:	add    BYTE PTR [ebx-0x190c00],al
  40971e:	and    eax,0x8390
  409723:	jmp    0xdfbe632c
  409728:	inc    DWORD PTR [eax]
  40972a:	int3   
  40972b:	ins    BYTE PTR es:[edi],dx
  40972c:	mov    ebx,0xff01cccc
  409731:	add    DWORD PTR [eax],0x31
  409734:	push   cs
  409735:	mov    DWORD PTR [ebp-0x7c000005],edx
  40973b:	xchg   ecx,eax
  40973c:	std    
  40973d:	mov    DWORD PTR [eax+0xff0027],esp
  409743:	pop    DWORD PTR ds:0xffebd8ff
  409749:	(bad)  
  40974a:	jmp    FWORD PTR [ebx]
  40974c:	mov    cl,0x83
  40974e:	rdtsc  
  409750:	int3   
  409751:	add    DWORD PTR [eax],0x75
  409754:	jecxz  0x409755
  409756:	mov    ebx,0xff00ff94
  40975b:	adc    eax,0x92a2ff65
  409760:	add    BYTE PTR [eax],al
  409762:	int3   
  409763:	bound  esp,QWORD PTR [esi]
  409765:	mov    edi,ecx
  409767:	retf   
  409768:	(bad)  
  409769:	(bad)  
  40976a:	(bad)  
  40976b:	inc    DWORD PTR [edi]
  40976d:	mov    DWORD PTR [edx-0x2],esi
  409770:	dec    DWORD PTR [ecx-0x76815801]
  409776:	ss in  al,dx
  409778:	inc    DWORD PTR [eax]
  40977a:	(bad)  
  40977b:	jle    0x40975d
  40977d:	add    dh,dl
  40977f:	les    eax,FWORD PTR [eax]
  409781:	add    BYTE PTR [eax],al
  409783:	js     0x4097c2
  409785:	add    BYTE PTR [ebp+edi*2-0x1a330100],bh
  40978c:	cld    
  40978d:	sub    ebx,0x77
  409790:	inc    DWORD PTR [ebx+0x63eaff]
  409796:	sub    DWORD PTR [ebx-0x647c0100],edi
  40979c:	pop    edx
  40979d:	add    BYTE PTR [edx+ebp*2],dl
  4097a0:	add    bh,bh
  4097a2:	add    BYTE PTR [edx-0x2aeaffee],dh
  4097a8:	inc    DWORD PTR [eax]
  4097aa:	push   DWORD PTR [ebx]
  4097ac:	repnz xor DWORD PTR ds:0xffffcce9,0xffffff9b
  4097b4:	mov    edx,0x6ec7cc
  4097b9:	inc    DWORD PTR [eax]
  4097bb:	pop    ds
  4097bc:	sub    bh,bh
  4097be:	aas    
  4097bf:	inc    ecx
  4097c0:	inc    DWORD PTR [ebx-0xe40534]
  4097c6:	nop
  4097c7:	add    eax,0xe4838389
  4097cc:	call   0xcc:0xcc6012ff
  4097d3:	imul   eax,ebx,0xffffffff
  4097d6:	jnp    0x409843
  4097d8:	int3   
  4097d9:	int3   
  4097da:	add    dh,ch
  4097dc:	int3   
  4097dd:	add    al,ch
  4097df:	scas   al,BYTE PTR es:[edi]
  4097e0:	inc    DWORD PTR [eax]
  4097e2:	(bad)  
  4097e3:	jg     0x4097ae
  4097e5:	call   FWORD PTR [esi-0x33ffffcb]
  4097eb:	das    
  4097ec:	ja     0x409771
  4097ee:	jle    0x4097ad
  4097f0:	add    BYTE PTR [ecx-0x7c266434],cl
  4097f6:	mov    dh,0x1a
  4097f8:	int3   
  4097f9:	add    bh,bh
  4097fb:	mov    ah,0xd2
  4097fd:	add    BYTE PTR [edx],bl
  4097ff:	pushf  
  409800:	add    BYTE PTR [eax],al
  409802:	xor    DWORD PTR [eax-0x63ec7cbe],0xffffff89
  409809:	add    ah,cl
  40980b:	stos   DWORD PTR es:[edi],eax
  40980c:	imul   edi,edi,0xffffff96
  40980f:	icebp  
  409810:	add    BYTE PTR [eax],al
  409812:	add    dh,al
  409814:	aas    
  409815:	add    BYTE PTR [ebp+0x6a],bh
  409818:	inc    DWORD PTR [ebx-0x1a8c00]
  40981e:	pusha  
  40981f:	imul   eax,DWORD PTR [ebx-0x6560ff77],0xffffffff
  409826:	loop   0x409841
  409828:	add    bh,bh
  40982a:	add    BYTE PTR [edi],al
  40982c:	sbb    bh,bh
  40982e:	fdiv   QWORD PTR [eax-0x7d]
  409831:	inc    DWORD PTR [eax]
  409833:	lods   eax,DWORD PTR ds:[esi]
  409834:	adc    edi,edi
  409836:	pop    ecx
  409837:	adc    BYTE PTR [eax],al
  409839:	(bad)  
  40983a:	dec    DWORD PTR [ebx-0x3c]
  40983d:	int3   
  40983e:	push   ss
  40983f:	add    al,BYTE PTR [eax]
  409841:	inc    DWORD PTR [eax]
  409843:	mov    eax,DWORD PTR [eax]
  409845:	int3   
  409846:	mov    bl,0x27
  409848:	add    BYTE PTR [eax],al
  40984a:	(bad)  
  40984b:	in     al,dx
  40984c:	sbb    al,BYTE PTR [eax]
  40984e:	adc    eax,0xcccc00f2
  409853:	pushf  
  409854:	mov    ds:0xff13f700,al
  409859:	int3   
  40985a:	or     esp,0x1a
  40985d:	int3   
  40985e:	cli    
  40985f:	inc    ecx
  409860:	add    bh,bh
  409862:	add    bl,dl
  409864:	or     al,0x0
  409866:	sti    
  409867:	in     eax,dx
  409868:	mov    edi,edi
  40986a:	add    BYTE PTR [edx+0x67],ah
  40986d:	(bad)  
  40986e:	cmp    al,0x30
  409870:	add    bh,bh
  409872:	add    BYTE PTR [eax+0x5e51ff7f],al
  409878:	(bad)  
  409879:	inc    DWORD PTR [eax]
  40987b:	push   ebx
  40987c:	xchg   edi,edi
  40987e:	dec    esi
  40987f:	out    0x0,eax
  409881:	inc    DWORD PTR [ebx+0x2d83f3d3]
  409887:	cmp    bh,bh
  409889:	inc    DWORD PTR [eax]
  40988b:	jmp    0x40985e
  40988d:	inc    DWORD PTR [ebx-0x76ff22]
  409893:	sahf   
  409894:	sar    edi,1
  409896:	cmp    DWORD PTR [eax-0x1],edi
  409899:	mov    edi,edi
  40989b:	jae    0x409881
  40989d:	or     DWORD PTR [edx-0x7c0000e8],0xffffff81
  4098a4:	and    eax,DWORD PTR [ebx-0x6abc]
  4098aa:	int3   
  4098ab:	or     esi,DWORD PTR [ecx-0x7ccb9301]
  4098b1:	inc    DWORD PTR [eax]
  4098b3:	pop    esi
  4098b4:	js     0x4098b5
  4098b6:	adc    al,0xc2
  4098b8:	add    ah,cl
  4098ba:	add    BYTE PTR [esp+edx*2-0x6ea01],ch
  4098c1:	add    BYTE PTR [eax],al
  4098c3:	add    bl,ah
  4098c5:	add    BYTE PTR [esi+ebp*1-0x1],bl
  4098c9:	(bad)  
  4098ca:	push   DWORD PTR [ebx+0x30]
  4098cd:	push   edx
  4098cf:	sub    DWORD PTR [ecx+0x447e83ff],ecx
  4098d5:	add    ch,dl
  4098d7:	xchg   edi,edi
  4098d9:	dec    DWORD PTR [ecx-0x720032bb]
  4098df:	lahf   
  4098e0:	(bad)  
  4098e1:	inc    DWORD PTR [ebx-0x7600bc73]
  4098e7:	out    dx,eax
  4098e8:	mov    edi,edi
  4098ea:	call   DWORD PTR [ebp+0x3fb5ffdd]
  4098f0:	(bad)  
  4098f1:	dec    esp
  4098f3:	push   edx
  4098f4:	xchg   esi,eax
  4098f5:	or     ecx,0x51
  4098f8:	inc    DWORD PTR [eax]
  4098fa:	add    BYTE PTR [edi-0x15],dl
  4098fd:	call   FWORD PTR [esi+0xac]
  409903:	or     BYTE PTR [ecx-0x1],dl
  409906:	sahf   
  409907:	dec    edi
  409908:	(bad)  
  409909:	(bad)  
  40990a:	jmp    FWORD PTR [ebx+0x781c8394]
  409910:	add    DWORD PTR [eax],0x0
  409913:	cmp    eax,0x225c8389
  409918:	(bad)  
  409919:	(bad)  
  40991a:	dec    DWORD PTR [ecx-0x2f]
  40991d:	add    BYTE PTR [ebx+edi*2],ah
  409920:	cmp    edi,0xffffffff
  409923:	call   0x1cb1983d
  409928:	int3   
  409929:	inc    DWORD PTR [eax]
  40992b:	sbb    al,0x5c
  40992d:	jmp    DWORD PTR [ebx-0x76ff75]
  409933:	mov    esp,0x1460075
  409938:	add    bh,bh
  40993a:	cmp    ebp,0xffffffe4
  40993d:	add    BYTE PTR ds:0x83cc0001,dl
  409943:	scas   al,BYTE PTR es:[edi]
  409944:	and    al,0x89
  409946:	xchg   esi,eax
  409947:	fadd   QWORD PTR [eax]
  409949:	or     esp,0x29
  40994c:	aam    0x0
  40994e:	dec    edx
  40994f:	int    0x83
  409951:	int3   
  409952:	int3   
  409953:	inc    eax
  409954:	and    eax,0x83a739cc
  409959:	inc    DWORD PTR [ebx-0x5b00a148]
  40995f:	aam    0x0
  409961:	inc    DWORD PTR [eax]
  409963:	push   ebp
  409964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409965:	sub    eax,0x7a
  409968:	inc    DWORD PTR [eax]
  40996a:	int3   
  40996b:	imul   esi,DWORD PTR [ebp+0xdbbdff],0x6e1283ff
  409975:	(bad)  
  409976:	jmp    0x4098fa
  409978:	or     esp,0xffffffff
  40997b:	aam    0x8
  40997d:	call   DWORD PTR [ebx+0x0]
  409980:	(bad)  
  409981:	(bad)  
  409982:	call   edx
  409984:	sbb    al,0xff
  409986:	lods   al,BYTE PTR ds:[esi]
  409987:	lock add DWORD PTR [eax],0xffffffff
  40998b:	adc    DWORD PTR [esi],edx
  40998d:	(bad)  
  40998e:	jge    0x409993
  409990:	int3   
  409991:	dec    DWORD PTR [ecx+0x40ff5f12]
  409997:	adc    edi,edi
  409999:	int3   
  40999a:	call   FWORD PTR [edi]
  40999c:	ret    0x22ff
  40999f:	scas   eax,DWORD PTR es:[edi]
  4099a0:	add    bh,bh
  4099a2:	mov    DWORD PTR [eax+0xa],esi
  4099a5:	dec    DWORD PTR [eax-0x2c]
  4099a8:	inc    DWORD PTR [ebx-0x2b267d]
  4099ae:	or     DWORD PTR [ebx],esp
  4099b0:	int3   
  4099b1:	mov    DWORD PTR [eax],eax
  4099b3:	pop    esi
  4099b4:	dec    edi
  4099b5:	jmp    DWORD PTR [eax+ebp*8]
  4099b8:	mov    esp,ecx
  4099ba:	push   edx
  4099bc:	daa    
  4099bd:	call   DWORD PTR [esi-0x66]
  4099c0:	add    bh,bh
  4099c2:	mov    DWORD PTR [edx],ebp
  4099c4:	cs int3 
  4099c6:	dec    edx
  4099c7:	scas   al,BYTE PTR es:[edi]
  4099c8:	dec    esp
  4099ca:	int3   
  4099cb:	jmp    0x19791d77
  4099d0:	add    bh,bh
  4099d2:	inc    DWORD PTR [edi-0x15263326]
  4099d8:	dec    esp
  4099da:	call   FWORD PTR [eax]
  4099dc:	cmp    bh,bh
  4099de:	mov    ebx,0xffcc83e0
  4099e3:	add    eax,0xc073004b
  4099e8:	int3   
  4099e9:	inc    DWORD PTR [eax]
  4099eb:	cli    
  4099ec:	or     BYTE PTR [eax],al
  4099ee:	nop
  4099ef:	(bad)  
  4099f0:	add    ah,cl
  4099f2:	add    BYTE PTR [edi],bl
  4099f4:	inc    ebx
  4099f5:	add    BYTE PTR [ebp-0x7c7c45],dh
  4099fb:	scas   eax,DWORD PTR es:[edi]
  4099fc:	fdiv   st(7),st
  4099fe:	pushf  
  4099ff:	cli    
  409a00:	inc    DWORD PTR [eax]
  409a02:	call   ecx
  409a04:	add    al,0xcc
  409a06:	cmp    edi,ebp
  409a08:	add    BYTE PTR [eax],al
  409a0a:	(bad)  
  409a0b:	jmp    0x4099cd
  409a0d:	add    BYTE PTR [ecx+eiz*4],ah
  409a10:	(bad)  
  409a11:	inc    DWORD PTR [ebx+0x5002e53]
  409a17:	mov    BYTE PTR [ecx-0x5482007d],cl
  409a1d:	add    BYTE PTR [ebx-0x7c00ff19],al
  409a23:	test   BYTE PTR [ebx],dh
  409a25:	jmp    FWORD PTR [esi-0x7c0000d1]
  409a2b:	push   ecx
  409a2c:	outs   dx,DWORD PTR ds:[esi]
  409a2d:	add    dl,dl
  409a2f:	push   eax
  409a30:	add    BYTE PTR [ecx+0x86e200],cl
  409a36:	pushf  
  409a37:	adc    ecx,DWORD PTR [ecx+0x588d8383]
  409a3d:	push   ecx
  409a3f:	ror    BYTE PTR [ecx+0x1dcc00],cl
  409a45:	add    BYTE PTR [eax-0x760018],cl
  409a4b:	repnz and bh,bh
  409a4e:	xchg   ecx,eax
  409a4f:	adc    bh,bh
  409a51:	int3   
  409a52:	add    BYTE PTR [esi+eiz*4],al
  409a55:	(bad)  
  409a56:	mov    ebp,0x830083c9
  409a5b:	and    BYTE PTR [ecx-0x1],0xc7
  409a5f:	fild   DWORD PTR [eax]
  409a61:	dec    esp
  409a63:	mov    ebp,0xdcb4ff02
  409a68:	(bad)  
  409a69:	(bad)  
  409a6a:	jmp    edx
  409a6c:	cmp    bh,bh
  409a6e:	fbstp  TBYTE PTR [esi+0x1b00ffff]
  409a74:	aas    
  409a75:	call   FWORD PTR [esi]
  409a77:	mov    cl,0xff
  409a79:	add    DWORD PTR [eax],0x7d
  409a7c:	mov    cl,BYTE PTR [ecx-0x7676e04f]
  409a82:	push   DWORD PTR [edx-0x112aff46]
  409a88:	int3   
  409a89:	add    ah,cl
  409a8b:	pop    ss
  409a8c:	dec    ebx
  409a8d:	add    cl,bl
  409a8f:	adc    DWORD PTR [eax],eax
  409a91:	inc    DWORD PTR [ebx+0x18ffb9e3]
  409a97:	cmp    al,0xff
  409a99:	(bad)  
  409a9a:	push   eax
  409a9c:	iret   
  409a9d:	inc    DWORD PTR [esi]
  409a9f:	mov    ah,0x83
  409aa1:	(bad)  
  409aa2:	dec    DWORD PTR [ebp-0x39ff7c97]
  409aa8:	add    BYTE PTR [eax],al
  409aaa:	add    BYTE PTR [eax],al
  409aac:	inc    eax
  409aad:	sbb    DWORD PTR [ecx+ebp*1-0x1],0xffffffff
  409ab2:	add    BYTE PTR [ebp+0x8],al
  409ab5:	inc    DWORD PTR [eax+edi*8]
  409ab8:	add    bh,bh
  409aba:	add    dl,al
  409abc:	int    0x89
  409abe:	sub    DWORD PTR [ebx+eax*4],0x0
  409ac2:	add    BYTE PTR [ecx-0x43b57683],bh
  409ac8:	add    bh,bh
  409aca:	sub    DWORD PTR [edx+0x5661ffa3],0xffffffff
  409ad1:	add    bh,bh
  409ad3:	adc    al,0x93
  409ad5:	jmp    FWORD PTR [ecx+0xb]
  409ad8:	add    BYTE PTR [eax],al
  409ada:	mov    ebp,edx
  409adc:	xor    ecx,DWORD PTR [ecx-0x1741]
  409ae2:	int3   
  409ae3:	adc    dl,ah
  409ae5:	call   FWORD PTR [esi]
  409ae7:	cmp    eax,0xc7ff8983
  409aec:	popa   
  409aed:	mov    DWORD PTR [edi-0xff33ff],ebx
  409af3:	add    eax,0x1da98334
  409af8:	inc    DWORD PTR [eax]
  409afa:	add    ah,ch
  409afc:	sar    bh,0x7c
  409aff:	xchg   esp,eax
  409b00:	cmp    edi,0x0
  409b03:	pusha  
  409b04:	lea    eax,[eax]
  409b06:	dec    esp
  409b07:	aad    0x0
  409b09:	mov    edi,edi
  409b0b:	and    esi,DWORD PTR [esi]
  409b0d:	mov    esi,esi
  409b0f:	fimul  DWORD PTR [ecx-0x2b830000]
  409b15:	push   ebp
  409b17:	pop    esp
  409b18:	mov    edi,edi
  409b1a:	add    BYTE PTR [ebp+ecx*1-0x34],cl
  409b1e:	aas    
  409b1f:	sar    edi,1
  409b21:	add    BYTE PTR [eax],al
  409b23:	into   
  409b24:	pusha  
  409b25:	inc    DWORD PTR [ebx]
  409b27:	xchg   edi,eax
  409b28:	(bad)  
  409b29:	dec    DWORD PTR [ecx+0x39ff7395]
  409b2f:	push   0x60ff83ff
  409b34:	test   eax,0xff9455cc
  409b39:	add    bh,bh
  409b3b:	dec    ebp
  409b3c:	xchg   ebx,eax
  409b3d:	call   DWORD PTR [ebx-0x48]
  409b43:	push   ss
  409b44:	mov    bl,0xff
  409b46:	inc    ebx
  409b47:	or     al,BYTE PTR [ebx+0x703ecc83]
  409b4d:	add    BYTE PTR [ecx-0x7c00003a],al
  409b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b54:	mov    ?,edi
  409b56:	cld    
  409b57:	test   eax,0xf4ffcc00
  409b5c:	dec    esp
  409b5d:	call   DWORD PTR [esi+edx*4+0x1e89ff00]
  409b64:	mov    bh,bh
  409b66:	scas   eax,DWORD PTR es:[edi]
  409b67:	pop    es
  409b68:	inc    DWORD PTR [eax]
  409b6a:	int3   
  409b6b:	aaa    
  409b6c:	in     eax,dx
  409b6d:	and    DWORD PTR [ecx],0x54
  409b70:	mov    DWORD PTR [eax],eax
  409b72:	jmp    FWORD PTR [esi-0x5433ffe8]
  409b78:	(bad)  
  409b79:	(bad)  
  409b7a:	call   DWORD PTR [ebp+0x7e10ff7d]
  409b80:	dec    DWORD PTR [ecx-0x6e557d]
  409b86:	sbb    cl,cl
  409b88:	cmp    edi,0xffffff83
  409b8b:	ret    0xffeb
  409b8e:	dec    edi
  409b8f:	jmp    0x409b5d
  409b91:	add    BYTE PTR [ebx+0x5e00c48c],al
  409b97:	fadd   DWORD PTR [eax]
  409b99:	add    BYTE PTR [ebx-0xa00cc9c],al
  409b9f:	dec    ecx
  409ba0:	dec    DWORD PTR [ecx-0x7c185e7d]
  409ba6:	mov    ch,0xd0
  409ba8:	(bad)  
  409ba9:	(bad)  
  409baa:	jmp    FWORD PTR [edx-0x58230068]
  409bb0:	inc    DWORD PTR [ebx-0x7c5efa7d]
  409bb6:	xlat   BYTE PTR ds:[ebx]
  409bb7:	sbb    BYTE PTR [eax],al
  409bb9:	inc    DWORD PTR [ebx-0x30ff285f]
  409bbf:	adc    BYTE PTR [eax],al
  409bc1:	(bad)  
  409bc2:	jmp    FWORD PTR [ebp+0x70f20096]
  409bc8:	mov    DWORD PTR [eax],eax
  409bca:	add    dh,bh
  409bcc:	pop    ds
  409bcd:	(bad)  
  409bce:	jp     0x409c4b
  409bd0:	mov    edi,edi
  409bd2:	(bad)  
  409bd3:	fsub   DWORD PTR [ebp-0x1]
  409bd6:	pop    esp
  409bd7:	out    dx,al
  409bd8:	inc    DWORD PTR [eax]
  409bda:	call   FWORD PTR [edi]
  409bdc:	push   ebp
  409bdd:	call   DWORD PTR [edi-0xff0065]
  409be3:	mov    esp,0x8049ffb2
  409be8:	add    bh,bh
  409bea:	mov    DWORD PTR [esi-0x38],ebp
  409bed:	jmp    FWORD PTR [ebp-0x5c]
  409bf0:	(bad)  
  409bf1:	(bad)  
  409bf2:	call   DWORD PTR [esp+eax*2-0x77]
  409bf6:	out    dx,al
  409bf7:	fs cmp edi,0x0
  409bfb:	(bad)  
  409bfc:	das    
  409bfd:	mov    DWORD PTR [eax+0x4b],ebx
  409c00:	(bad)  
  409c01:	dec    DWORD PTR [ecx-0x24ffbe71]
  409c07:	(bad)  
  409c08:	(bad)  
  409c09:	(bad)  
  409c0a:	(bad)  
  409c0b:	jmp    DWORD PTR [ecx-0xe00401]
  409c11:	int3   
  409c12:	add    BYTE PTR [ebp+0x73ea83aa],bl
  409c18:	add    bh,bh
  409c1a:	adc    DWORD PTR [edi],0xffffffa4
  409c1d:	(bad)  
  409c1e:	cld    
  409c1f:	xchg   ebp,eax
  409c20:	inc    DWORD PTR [eax]
  409c22:	(bad)  
  409c23:	ds cmp edi,0xccccd5d2
  409c2a:	int3   
  409c2b:	int3   
  409c2c:	int3   
  409c2d:	int3   
  409c2e:	int3   
  409c2f:	int3   
  409c30:	push   ebx
  409c31:	push   esi
  409c32:	mov    esi,DWORD PTR ds:0x44400c
  409c38:	push   edi
  409c39:	push   0xc7
  409c3e:	push   0x42
  409c40:	call   esi
  409c42:	push   0x0
  409c44:	mov    edi,eax
  409c46:	call   DWORD PTR ds:0x444010
  409c4c:	push   0x66
  409c4e:	push   0x42
  409c50:	call   esi
  409c52:	test   BYTE PTR ds:0x447d44,0x1
  409c59:	mov    ebx,eax
  409c5b:	jne    0x409c6e
  409c5d:	mov    eax,ds:0x444014
  409c62:	or     DWORD PTR ds:0x447d44,0x1
  409c69:	mov    ds:0x447d40,eax
  409c6e:	push   0x0
  409c70:	push   0x54328
  409c75:	push   0x40000
  409c7a:	call   DWORD PTR ds:0x447d40
  409c80:	push   0x447d30
  409c85:	push   0x0
  409c87:	mov    esi,eax
  409c89:	call   DWORD PTR ds:0x444064
  409c8f:	cmp    eax,0x80070057
  409c94:	jne    0x409ccd
  409c96:	test   BYTE PTR ds:0x447d28,0x1
  409c9d:	jne    0x409cb6
  409c9f:	or     DWORD PTR ds:0x447d28,0x1
  409ca6:	push   0x446a38
  409cab:	call   DWORD PTR ds:0x44401c
  409cb1:	mov    ds:0x447d24,eax
  409cb6:	mov    ecx,DWORD PTR ds:0x447d24
  409cbc:	push   0x446a2c
  409cc1:	push   ecx
  409cc2:	call   DWORD PTR ds:0x444020
  409cc8:	mov    ds:0x447d2c,eax
  409ccd:	push   0x54328
  409cd2:	push   0x0
  409cd4:	push   esi
  409cd5:	call   DWORD PTR ds:0x447d2c
  409cdb:	mov    esi,DWORD PTR ds:0x444018
  409ce1:	mov    ds:0x447d00,eax
  409ce6:	test   edi,edi
  409ce8:	je     0x409ced
  409cea:	push   edi
  409ceb:	call   esi
  409ced:	test   ebx,ebx
  409cef:	je     0x409cf4
  409cf1:	push   ebx
  409cf2:	call   esi
  409cf4:	pop    edi
  409cf5:	pop    esi
  409cf6:	pop    ebx
  409cf7:	ret    
  409cf8:	int3   
  409cf9:	int3   
  409cfa:	int3   
  409cfb:	int3   
  409cfc:	int3   
  409cfd:	int3   
  409cfe:	int3   
  409cff:	int3   
  409d00:	add    ah,bh
  409d02:	sub    esp,0xffffffad
  409d05:	daa    
  409d06:	(bad)  
  409d07:	(bad)  
  409d08:	push   DWORD PTR [ecx+0x0]
  409d0b:	arpl   dx,si
  409d0d:	cmc    
  409d0e:	(bad)  
  409d0f:	(bad)  
  409d10:	push   DWORD PTR [ebx-0x5764417d]
  409d16:	cmp    edi,0xffffffff
  409d19:	test   eax,0xa6b33fcc
  409d1e:	(bad)  
  409d1f:	inc    DWORD PTR [eax]
  409d21:	loopne 0x409cef
  409d23:	and    DWORD PTR [eax-0xffff89],0x3f
  409d2a:	mov    DWORD PTR [edi-0x21],edx
  409d2d:	mov    eax,ds:0xcd00ff00
  409d32:	(bad)  
  409d33:	fidiv  WORD PTR [edi]
  409d35:	mov    edi,0x7b0083ff
  409d3a:	jmp    FWORD PTR [edx-0xbcc3]
  409d40:	call   FWORD PTR [esi+0x71bc1400]
  409d46:	add    bh,bh
  409d48:	add    BYTE PTR [edi],cl
  409d4a:	adc    eax,0x6b
  409d4d:	cli    
  409d4e:	int3   
  409d4f:	inc    DWORD PTR [ebx+0x1a3089a8]
  409d55:	xchg   esp,eax
  409d56:	inc    DWORD PTR [eax]
  409d58:	jmp    FWORD PTR [ebp+0x0]
  409d5b:	and    BYTE PTR [eax-0x40],cl
  409d5e:	(bad)  
  409d5f:	(bad)  
  409d60:	dec    DWORD PTR [edx-0x2ab8a801]
  409d66:	add    BYTE PTR [eax],al
  409d68:	add    ch,ah
  409d6a:	mov    DWORD PTR [ebp-0x338c85],ebp
  409d70:	add    BYTE PTR [edx-0x77],ah
  409d73:	cs jmp 0x84409d07
  409d79:	fdivp  st(7),st
  409d7b:	shl    DWORD PTR [edi-0x2e],cl
  409d7e:	(bad)  
  409d7f:	(bad)  
  409d80:	jmp    DWORD PTR [esi-0x1]
  409d83:	add    DWORD PTR [esi+esi*4],ecx
  409d86:	cmp    edi,0xffffffff
  409d89:	add    DWORD PTR [eax],0x890b7fe7
  409d8f:	add    BYTE PTR [ecx-0x7110ff72],cl
  409d95:	sti    
  409d96:	inc    DWORD PTR [eax]
  409d98:	add    BYTE PTR [edi+edi*8],cl
  409d9b:	push   ecx
  409d9c:	js     0x409d37
  409d9e:	(bad)  
  409d9f:	(bad)  
  409da0:	call   FWORD PTR [edi-0x1]
  409da3:	pop    eax
  409da4:	sub    ecx,DWORD PTR ds:0x55ccffff
  409daa:	add    BYTE PTR [ebx+0x35],dl
  409dad:	(bad)  
  409daf:	add    bh,bh
  409db1:	in     al,dx
  409db2:	or     DWORD PTR [ebx],0x7c
  409db5:	out    dx,al
  409db6:	(bad)  
  409db7:	(bad)  
  409db8:	call   DWORD PTR ds:0x42693aff
  409dbe:	add    bh,bh
  409dc0:	add    ch,dl
  409dc2:	sub    DWORD PTR [esi+esi*1-0x41],0xffffff89
  409dc7:	add    BYTE PTR [eax],al
  409dc9:	call   DWORD PTR cs:[eax+0x8c17]
  409dd0:	dec    ecx
  409dd2:	add    cl,cl
  409dd4:	out    dx,eax
  409dd5:	dec    esp
  409dd6:	add    BYTE PTR [eax],al
  409dd8:	int3   
  409dd9:	(bad)  
  409dda:	(bad)  
  409ddb:	in     eax,dx
  409ddc:	cli    
  409ddd:	addr16 cmp edi,0x0
  409de1:	xor    al,0x0
  409de3:	fld    DWORD PTR [eax]
  409de5:	push   edi
  409de6:	(bad)  
  409de7:	(bad)  
  409de8:	jmp    FWORD PTR [esi]
  409dea:	add    al,dh
  409dec:	out    0xe8,al
  409dee:	add    bh,bh
  409df0:	int3   
  409df1:	push   esi
  409df2:	call   FWORD PTR [edx-0x33001c21]
  409df8:	jmp    DWORD PTR [esi]
  409dfa:	call   eax
  409dfc:	fdiv   DWORD PTR [ebp+0x10000000]
  409e02:	int3   
  409e03:	and    eax,DWORD PTR [edx+0x7d]
  409e06:	inc    DWORD PTR [eax]
  409e08:	push   DWORD PTR [edi]
  409e0a:	mov    esp,ebx
  409e0c:	nop
  409e0d:	ins    BYTE PTR es:[edi],dx
  409e0e:	int3   
  409e0f:	mov    DWORD PTR [eax],eax
  409e11:	inc    ebx
  409e12:	jmp    DWORD PTR [ebx-0x1d]
  409e15:	rol    BYTE PTR [eax],1
  409e17:	inc    DWORD PTR [eax]
  409e19:	jno    0x409d9e
  409e1b:	mov    ebp,0xffff2177
  409e20:	add    bl,dl
  409e22:	add    BYTE PTR [eax+0xb2b9],ah
  409e28:	int3   
  409e29:	jmp    DWORD PTR gs:[ebx-0x7c009381]
  409e30:	int3   
  409e31:	sar    bh,0x96
  409e34:	sbb    bh,BYTE PTR [edi-0x69007700]
  409e3a:	dec    DWORD PTR ds:0xff000b47
  409e40:	add    BYTE PTR [esi+0x73beaaff],ah
  409e46:	dec    esp
  409e48:	and    ebp,0xffffff83
  409e4b:	in     al,0x46
  409e4d:	loop   0x409e4e
  409e4f:	mov    edi,edi
  409e51:	sahf   
  409e52:	call   FWORD PTR [edx-0x42]
  409e55:	dec    edi
  409e56:	(bad)  
  409e57:	inc    DWORD PTR [eax]
  409e59:	fwait
  409e5a:	mov    esi,esp
  409e5c:	out    0x85,al
  409e5e:	inc    DWORD PTR [ebx+0x540051ff]
  409e64:	push   ebp
  409e65:	stos   BYTE PTR es:[edi],al
  409e66:	add    bh,bh
  409e68:	add    ah,dh
  409e6a:	int3   
  409e6b:	das    
  409e6c:	mov    ebp,0x8900ff1e
  409e71:	nop
  409e72:	add    ah,ch
  409e74:	dec    esi
  409e75:	(bad)  
  409e76:	int3   
  409e77:	add    DWORD PTR [eax],0x7b
  409e7a:	(bad)  
  409e7b:	jmp    FWORD PTR [eax-0x6]
  409e7e:	add    bh,bh
  409e80:	call   DWORD PTR [ecx+0x7ef9e883]
  409e86:	mov    edi,edi
  409e88:	call   FWORD PTR [esi-0x66204a01]
  409e8e:	add    bh,bh
  409e90:	xor    DWORD PTR [edx],0xffffffcc
  409e93:	inc    esi
  409e94:	iret   
  409e95:	ins    BYTE PTR es:[edi],dx
  409e96:	(bad)  
  409e97:	(bad)  
  409e98:	jmp    ebx
  409e9a:	jmp    FWORD PTR [ebx]
  409e9c:	dec    esi
  409e9d:	adc    eax,0x12838983
  409ea2:	call   DWORD PTR [eax-0x7c00f161]
  409ea8:	int3   
  409ea9:	dec    edx
  409eaa:	int3   
  409eab:	cmp    DWORD PTR [edi+ecx*2+0x0],esi
  409eaf:	add    BYTE PTR [eax],al
  409eb1:	cmp    eax,0x97c0ba83
  409eb6:	(bad)  
  409eb7:	inc    DWORD PTR [ebx-0x77ad0010]
  409ebd:	dec    ebx
  409ebe:	add    BYTE PTR [ebx+0x40ccb100],al
  409ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec5:	adc    ecx,DWORD PTR [ecx+0x4eff83]
  409ecb:	dec    cx
  409ecd:	test   bh,bh
  409ecf:	dec    DWORD PTR [ecx+0x39f6ff00]
  409ed5:	mov    esi,0x520000cc
  409eda:	dec    DWORD PTR [ebp-0x45]
  409edd:	sub    eax,0x5d0083ff
  409ee2:	jmp    DWORD PTR [edi+eiz*4-0x19]
  409ee6:	or     esp,0xffffffff
  409ee9:	(bad)  
  409eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eec:	push   ebx
  409eed:	out    0xff,al
  409eef:	add    bh,bh
  409ef1:	idiv   edi
  409ef3:	xor    al,0x88
  409ef5:	sub    edi,edi
  409ef7:	mov    DWORD PTR [ebx+0x3a82ffed],eax
  409efd:	(bad)  
  409efe:	int3   
  409eff:	add    bh,bh
  409f01:	in     al,0x83
  409f03:	fsubr  QWORD PTR [ecx+esi*1+0x71000083]
  409f0a:	sub    DWORD PTR [edi+0xcc20c7],0xffffffff
  409f11:	or     bh,bh
  409f13:	dec    esi
  409f14:	push   0x60
  409f16:	mov    DWORD PTR [ebx+0x11ffe583],eax
  409f1c:	in     al,dx
  409f1d:	jnp    0x409f1e
  409f1f:	add    BYTE PTR [eax],al
  409f21:	mov    ch,0xff
  409f23:	jnp    0x409f9f
  409f25:	jge    0x409f27
  409f27:	inc    DWORD PTR [eax]
  409f29:	xor    al,0x0
  409f2b:	(bad)  
  409f2c:	jns    0x409f3a
  409f2e:	add    DWORD PTR [ebx+0x21cc2ccc],0xffffffb8
  409f35:	leave  
  409f36:	inc    DWORD PTR [ebx+0x2bfff900]
  409f3c:	sub    bh,bh
  409f3e:	add    BYTE PTR [eax],al
  409f40:	call   DWORD PTR [esi]
  409f42:	jmp    DWORD PTR [ecx-0x56]
  409f45:	jo     0x409eca
  409f47:	cmp    edi,0xffffffcf
  409f4a:	push   DWORD PTR [esi]
  409f4c:	fst    QWORD PTR [ebx-0x1]
  409f4f:	(bad)  
  409f50:	jmp    FWORD PTR [esi]
  409f52:	cmp    eax,0xffffff8a
  409f55:	jge    0x409f57
  409f57:	(bad)  
  409f58:	dec    ecx
  409f5a:	jmp    edi
  409f5c:	imul   ebp,DWORD PTR [ecx-0x50ff7c01],0x264bb900
  409f66:	inc    DWORD PTR [eax]
  409f68:	jmp    ebx
  409f6a:	cmp    eax,0xffffffd6
  409f6d:	push   0xf200ff89
  409f72:	jmp    DWORD PTR [edx-0x3f]
  409f75:	sbb    edi,edi
  409f77:	cmp    edi,0x32
  409f7a:	jmp    edx
  409f7c:	test   al,0xcf
  409f7e:	inc    DWORD PTR [eax]
  409f80:	add    BYTE PTR [edx],bh
  409f82:	add    BYTE PTR [ebx-0xff20e1],dh
  409f88:	add    BYTE PTR [edx],cl
  409f8a:	add    BYTE PTR [eax+0x2e],dl
  409f8d:	icebp  
  409f8e:	add    bh,bh
  409f90:	int3   
  409f91:	nop
  409f92:	add    BYTE PTR [edx+0x36],cl
  409f95:	adc    al,0xff
  409f97:	add    BYTE PTR [ebx+0x2f3fcc2c],al
  409f9d:	retf   0xff00
  409fa0:	int3   
  409fa1:	or     al,BYTE PTR [eax]
  409fa3:	aam    0xfe
  409fa5:	mov    al,ds:0xe10000ff
  409faa:	inc    DWORD PTR [eax-0x66]
  409fad:	sbb    cl,ah
  409faf:	mov    edi,edi
  409fb1:	in     al,dx
  409fb2:	add    ah,bl
  409fb4:	sub    DWORD PTR [edi-0x1],esp
  409fb7:	(bad)  
  409fb8:	push   esp
  409fba:	adc    DWORD PTR ds:0xff832d61,0xffffffff
  409fc1:	inc    esi
  409fc2:	add    bl,dl
  409fc4:	mov    bl,0x19
  409fc6:	(bad)  
  409fc7:	(bad)  
  409fc8:	push   DWORD PTR [ebp-0x1]
  409fcb:	sbb    eax,0xffff1ce1
  409fd0:	add    BYTE PTR [ebp-0x1],dl
  409fd3:	test   BYTE PTR [edi],dh
  409fd5:	and    DWORD PTR [eax],eax
  409fd7:	add    bh,bh
  409fd9:	aam    0xff
  409fdb:	outs   dx,DWORD PTR ds:[esi]
  409fdc:	retf   
  409fdd:	scas   eax,DWORD PTR es:[edi]
  409fde:	add    DWORD PTR [eax],0xffffff83
  409fe1:	and    BYTE PTR [ecx-0xa9f95a],cl
  409fe7:	cmp    edi,0xffffffc9
  409fea:	add    BYTE PTR [esi-0x6a],dh
  409fed:	lods   al,BYTE PTR ds:[esi]
  409fee:	add    BYTE PTR [eax],al
  409ff0:	int3   
  409ff1:	inc    DWORD PTR es:[edx-0x5f]
  409ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff6:	add    BYTE PTR [ebx+0xf007fff],al
  409ffc:	adc    cl,BYTE PTR [edi+edi*8-0x77]
  40a000:	add    al,dl
  40a002:	inc    DWORD PTR [esi-0x7c93f3]
  40a008:	(bad)  
  40a009:	cmp    bh,bh
  40a00b:	push   es
  40a00c:	jge    0x409ffb
  40a00e:	add    BYTE PTR [eax],al
  40a010:	call   FWORD PTR [ebx-0x1d421500]
  40a016:	inc    DWORD PTR [eax]
  40a018:	xor    edi,0xffffff83
  40a01b:	gs ret 0xcc24
  40a01f:	add    DWORD PTR [ebx+0xb7e001f],0x66
  40a026:	(bad)  
  40a027:	inc    DWORD PTR [ebx+0x1a08ffaf]
  40a02d:	sbb    DWORD PTR [eax],eax
  40a02f:	int3   
  40a030:	inc    eax
  40a032:	(bad)  
  40a033:	mov    edx,0xff890c49
  40a038:	dec    esp
  40a03a:	call   DWORD PTR ds:0xff000d34
  40a040:	int3   
  40a041:	inc    esp
  40a042:	jmp    edx
  40a044:	push   ecx
  40a045:	or     ah,0x89
  40a048:	cmp    DWORD PTR [ecx-0x1],0xffffffe5
  40a04c:	sbb    ecx,DWORD PTR [esi+0x5e00ffff]
  40a052:	add    cl,bh
  40a054:	stos   DWORD PTR es:[edi],eax
  40a055:	dec    ebp
  40a056:	add    bh,bh
  40a058:	xor    edx,0xffffffcc
  40a05b:	sbb    al,0xb5
  40a05d:	data16 add BYTE PTR [ecx-0x3d008f00],cl
  40a064:	scas   al,BYTE PTR es:[edi]
  40a065:	jl     0x40a066
  40a067:	mov    edi,edi
  40a069:	(bad)  
  40a06c:	sbb    DWORD PTR [edx-0x7d],esi
  40a06f:	(bad)  
  40a070:	jmp    DWORD PTR [ebp-0x245ef477]
  40a076:	add    BYTE PTR [eax],al
  40a078:	push   eax
  40a07a:	add    dl,cl
  40a07c:	nop
  40a07d:	add    BYTE PTR [eax],0xff
  40a080:	and    DWORD PTR [ebx],0xffffffff
  40a083:	imul   ebp,DWORD PTR [edi-0x333332],0xe05d006b
  40a08d:	xlat   BYTE PTR ds:[ebx]
  40a08e:	mov    DWORD PTR [eax],eax
  40a090:	or     DWORD PTR [esi-0x4a46cd01],0x0
  40a097:	cmp    edi,0x56
  40a09a:	sbb    DWORD PTR [eax+0x4a],0xffffffac
  40a09e:	add    ah,cl
  40a0a0:	push   DWORD PTR [ebp+0x2742dcff]
  40a0a6:	add    DWORD PTR [eax],0xffffffcc
  40a0a9:	sar    bh,cl
  40a0ab:	js     0x40a121
  40a0ad:	mov    DWORD PTR [eax],eax
  40a0af:	add    bh,bh
  40a0b1:	pushf  
  40a0b2:	jmp    DWORD PTR [eax]
  40a0b4:	and    esi,DWORD PTR [ecx-0x64ffff77]
  40a0ba:	and    DWORD PTR [ebx-0x48],0x3c
  40a0be:	dec    esp
  40a0c0:	mov    DWORD PTR [ecx+ecx*4+0x19],ecx
  40a0c4:	pushf  
  40a0c5:	ret    
  40a0c6:	add    BYTE PTR [eax],al
  40a0c8:	jmp    FWORD PTR [edi+0x0]
  40a0cb:	pop    ecx
  40a0cc:	sub    ebp,edi
  40a0ce:	(bad)  
  40a0cf:	dec    esp
  40a0d1:	iret   
  40a0d2:	add    bl,cl
  40a0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d5:	mov    esi,0xbfffcc83
  40a0da:	dec    esi
  40a0dc:	jne    0x40a095
  40a0de:	mov    DWORD PTR [eax],eax
  40a0e0:	add    BYTE PTR [ecx-0x77],bl
  40a0e3:	or     eax,DWORD PTR [edi+0x1d]
  40a0e6:	inc    DWORD PTR [eax]
  40a0e8:	push   DWORD PTR [edi+edi*8-0x18]
  40a0ec:	in     eax,dx
  40a0ed:	cmp    bh,0xff
  40a0f0:	call   DWORD PTR [eax-0x5995e01]
  40a0f6:	(bad)  
  40a0f7:	(bad)  
  40a0f8:	inc    DWORD PTR [esi]
  40a0fa:	push   DWORD PTR [esi+0x48]
  40a0fd:	sbb    al,0x89
  40a0ff:	inc    DWORD PTR [ebx+0x7f74ffb5]
  40a105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a106:	mov    edi,edi
  40a108:	mov    ecx,ecx
  40a10a:	dec    DWORD PTR [edi]
  40a10c:	push   ss
  40a10d:	add    BYTE PTR cs:[eax],al
  40a110:	int3   
  40a111:	ins    DWORD PTR es:[edi],dx
  40a112:	call   DWORD PTR [edx+0x833458]
  40a118:	int3   
  40a119:	(bad)  
  40a11a:	call   FWORD PTR [edi]
  40a11c:	mov    bh,BYTE PTR [eax+0x19ff00cc]
  40a122:	adc    DWORD PTR [edi-0x4c],0xffffffd3
  40a126:	add    bh,bh
  40a128:	or     DWORD PTR [ecx],0xffffffcc
  40a12b:	cld    
  40a12c:	dec    ebx
  40a12d:	jb     0x40a12e
  40a12f:	add    BYTE PTR [eax],al
  40a131:	push   eax
  40a132:	inc    DWORD PTR [ecx+0xccd1]
  40a138:	sbb    DWORD PTR [eax-0x7d],0xffffffee
  40a13c:	push   esi
  40a13d:	pop    ebx
  40a13e:	(bad)  
  40a13f:	dec    DWORD PTR [ecx+0x70ce0019]
  40a145:	push   ss
  40a146:	mov    edi,edi
  40a148:	call   FWORD PTR [esi-0x6a433e01]
  40a14e:	dec    esp
  40a150:	add    ebx,0xffffff83
  40a153:	fistp  DWORD PTR [edi-0x337e]
  40a159:	sbb    eax,0x6269e3ff
  40a15e:	cmp    edi,0x0
  40a161:	lods   eax,DWORD PTR ds:[esi]
  40a162:	add    BYTE PTR ds:0x83ffe282,cl
  40a168:	add    BYTE PTR [esi+0x3207efff],bl
  40a16e:	(bad)  
  40a16f:	(bad)  
  40a170:	inc    DWORD PTR [edi+0x59fe00ff]
  40a176:	add    bh,bh
  40a178:	add    BYTE PTR [ebx+0x0],al
  40a17b:	aad    0x4f
  40a17d:	pop    edx
  40a17e:	add    BYTE PTR [eax],al
  40a180:	inc    DWORD PTR [esi]
  40a182:	add    BYTE PTR [edi],ch
  40a184:	jmp    0x843fa227
  40a189:	sbb    bh,bh
  40a18b:	ins    BYTE PTR es:[edi],dx
  40a18c:	nop
  40a18d:	add    BYTE PTR ss:[eax],al
  40a190:	jmp    DWORD PTR [edi-0x1]
  40a193:	test   BYTE PTR [eax-0x74],al
  40a196:	inc    DWORD PTR [eax]
  40a198:	add    BYTE PTR [ebx+0x0],ch
  40a19b:	mov    dh,0xfe
  40a19d:	(bad)  
  40a19e:	(bad)  
  40a19f:	inc    DWORD PTR [eax]
  40a1a1:	call   0x5f6a42a5
  40a1a6:	add    bh,bh
  40a1a8:	jmp    DWORD PTR [edi+edi*8+0x6175d3]
  40a1af:	cmp    edi,0xffffffad
  40a1b2:	jmp    ecx
  40a1b4:	cs push 0xbd00ff89
  40a1ba:	add    cl,ch
  40a1bc:	cdq    
  40a1bd:	stos   DWORD PTR es:[edi],eax
  40a1be:	or     esp,0xffffffff
  40a1c1:	xor    eax,DWORD PTR [eax]
  40a1c3:	rcl    BYTE PTR [edx-0xffff30],cl
  40a1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ca:	add    BYTE PTR [edi-0x7],cl
  40a1cd:	push   ebp
  40a1ce:	add    bh,bh
  40a1d0:	cmp    esp,0x0
  40a1d3:	in     ax,0xd5
  40a1d6:	add    BYTE PTR [eax],al
  40a1d8:	jmp    DWORD PTR [eax+0x5d4a4000]
  40a1de:	add    bh,bh
  40a1e0:	add    BYTE PTR [ebx],dl
  40a1e2:	mov    DWORD PTR [ebp-0x3f],ecx
  40a1e5:	jl     0x40a1b3
  40a1e7:	inc    DWORD PTR [eax]
  40a1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ea:	push   DWORD PTR [ecx-0x75]
  40a1ed:	pop    esp
  40a1ee:	or     esp,0xffffffcc
  40a1f1:	inc    eax
  40a1f2:	int3   
  40a1f3:	and    ebx,DWORD PTR [edi+0x78]
  40a1f6:	inc    DWORD PTR [eax]
  40a1f8:	dec    DWORD PTR [ebp+0x21900900]
  40a1fe:	mov    DWORD PTR [eax],eax
  40a200:	dec    eax
  40a202:	int3   
  40a203:	jecxz  0x40a21e
  40a205:	pop    ss
  40a206:	mov    edi,edi
  40a208:	inc    ebp
  40a20a:	add    BYTE PTR [eax-0x76ff452e],bl
  40a210:	add    edx,0xffffffcc
  40a213:	pop    ds
  40a214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a215:	mov    DWORD PTR [ebx-0xc60100],eax
  40a21b:	mov    ds:0x8989ac8d,eax
  40a220:	jmp    FWORD PTR [edi-0x3648947d]
  40a226:	add    bh,bh
  40a228:	inc    DWORD PTR [ecx-0x3914257d]
  40a22e:	add    BYTE PTR [ecx-0x52ff7401],cl
  40a234:	mov    WORD PTR [eax+eax*1-0xdd0100],es
  40a23b:	push   ecx
  40a23c:	add    al,0x1d
  40a23e:	add    bh,bh
  40a240:	mov    DWORD PTR [esi+0x79c3afff],ebx
  40a246:	add    BYTE PTR [ebx+0x800bc83],al
  40a24c:	xchg   DWORD PTR [edx-0x1],edi
  40a24f:	inc    DWORD PTR [eax]
  40a251:	les    eax,FWORD PTR [eax]
  40a253:	imul   edi,DWORD PTR [edi-0x17],0xffffffcc
  40a257:	add    BYTE PTR [ebx+0x4530ff21],al
  40a25d:	cs int3 
  40a25f:	add    bh,bh
  40a261:	fdiv   st(7),st
  40a263:	int3   
  40a264:	mov    esp,0xff83ffc5
  40a269:	sar    edi,1
  40a26b:	cmp    bh,ch
  40a26d:	test   BYTE PTR [ebx-0x7c750100],al
  40a273:	enter  0xc589,0xff
  40a277:	inc    DWORD PTR [ebx-0x215400ce]
  40a27d:	cs (bad) 
  40a27f:	(bad)  
  40a280:	(bad)  
  40a281:	jmp    0x83cc:0x8e16cc83
  40a288:	mov    DWORD PTR [ebp+0xe4235ff],esi
  40a28e:	add    BYTE PTR [eax],al
  40a290:	add    bl,dh
  40a292:	inc    ebx
  40a294:	sbb    al,bh
  40a296:	add    bh,bh
  40a298:	add    BYTE PTR [ebx+0x4dddbfff],ah
  40a29e:	or     esp,0xffffffff
  40a2a1:	mov    ah,0xff
  40a2a3:	dec    edx
  40a2a4:	and    bh,BYTE PTR [edx+0x40ff00ff]
  40a2aa:	adc    DWORD PTR [esi],0xffffffca
  40a2ad:	and    edi,edi
  40a2af:	cmp    edi,0x25
  40a2b2:	add    dl,al
  40a2b4:	scas   eax,DWORD PTR es:[edi]
  40a2b5:	clc    
  40a2b6:	dec    DWORD PTR [ecx+0x25ff7f89]
  40a2bc:	popf   
  40a2bd:	cmp    al,0xff
  40a2bf:	(bad)  
  40a2c0:	call   FWORD PTR [eax]
  40a2c2:	add    BYTE PTR [eax],cl
  40a2c4:	ret    
  40a2c5:	dec    esi
  40a2c6:	(bad)  
  40a2c7:	inc    DWORD PTR [eax]
  40a2c9:	push   ebp
  40a2ca:	add    BYTE PTR [ecx+edx*8+0xff892b],bh
  40a2d1:	inc    eax
  40a2d2:	push   ebx
  40a2d4:	lea    ecx,[eax+0x0]
  40a2d7:	dec    esp
  40a2d9:	in     eax,dx
  40a2da:	add    BYTE PTR [ebx],al
  40a2dc:	les    ebx,FWORD PTR [eax+0x1200cccc]
  40a2e2:	call   FWORD PTR [eax-0x7c005f89]
  40a2e8:	push   DWORD PTR [ebp-0x1]
  40a2eb:	lods   al,BYTE PTR ds:[esi]
  40a2ec:	retf   
  40a2ed:	dec    esi
  40a2ee:	int3   
  40a2ef:	add    bh,bh
  40a2f1:	inc    ebx
  40a2f2:	add    BYTE PTR [ebx-0xe6a1],al
  40a2f8:	(bad)  
  40a2f9:	cmp    al,0x0
  40a2fb:	pop    esi
  40a2fc:	jbe    0x40a2b3
  40a2fe:	add    BYTE PTR [ecx-0x7c00b877],cl
  40a304:	mov    ecx,DWORD PTR [eax-0x267c0100]
  40a30a:	(bad)  
  40a30b:	aas    
  40a30c:	test   al,0x10
  40a30e:	add    ah,cl
  40a310:	add    BYTE PTR [ecx+0x0],bh
  40a313:	(bad)  
  40a314:	aad    0x92
  40a316:	inc    DWORD PTR [ebx-0x5d76c801]
  40a31c:	pop    eax
  40a31d:	cmp    eax,DWORD PTR [eax]
  40a31f:	dec    DWORD PTR [ecx-0x1fa6ffbb]
  40a325:	pop    eax
  40a326:	inc    DWORD PTR [ebx-0x75ff3677]
  40a32c:	inc    ecx
  40a32d:	dec    edx
  40a32e:	add    bh,bh
  40a330:	(bad)  
  40a331:	jg     0x40a333
  40a333:	pop    edx
  40a334:	and    BYTE PTR [edi],al
  40a336:	or     esp,0x0
  40a339:	in     al,0x0
  40a33b:	fimul  WORD PTR [edx-0x43]
  40a33e:	dec    esp
  40a340:	(bad)  
  40a341:	std    
  40a342:	jmp    FWORD PTR [ebx+edx*4-0x30]
  40a346:	add    BYTE PTR [ecx-0x2276967d],cl
  40a34c:	add    dh,BYTE PTR [ecx+0x0]
  40a34f:	inc    DWORD PTR [eax]
  40a351:	rol    BYTE PTR [eax],1
  40a353:	das    
  40a354:	xor    DWORD PTR [edx-0x34],edx
  40a357:	add    BYTE PTR [ebx+0x3c580009],al
  40a35d:	add    edi,edi
  40a35f:	(bad)  
  40a360:	inc    edi
  40a362:	add    BYTE PTR [ebx],bh
  40a364:	dec    ebp
  40a365:	arpl   WORD PTR [eax],ax
  40a367:	inc    DWORD PTR [ebx-0x660eff23]
  40a36d:	aaa    
  40a36e:	add    bh,bh
  40a370:	push   eax
  40a372:	add    dh,bh
  40a374:	push   ebx
  40a375:	xchg   edi,edi
  40a377:	(bad)  
  40a378:	inc    esi
  40a37a:	mov    esp,ebx
  40a37c:	pop    edi
  40a37d:	add    al,0x83
  40a37f:	inc    DWORD PTR [eax]
  40a381:	adc    bh,bh
  40a383:	addr16 aad 0x8e
  40a386:	add    ah,cl
  40a388:	jmp    FWORD PTR [edi-0x85af701]
  40a38e:	inc    DWORD PTR [eax]
  40a390:	add    BYTE PTR [edx],al
  40a392:	add    BYTE PTR [ebx],ch
  40a394:	(bad)  
  40a396:	add    bh,bh
  40a398:	(bad)  
  40a399:	stc    
  40a39a:	or     DWORD PTR [eax],0xffffffc2
  40a39d:	dec    edi
  40a39e:	add    BYTE PTR [ecx+0x64ff0689],cl
  40a3a4:	ret    0xbc
  40a3a7:	add    BYTE PTR [eax],al
  40a3a9:	mov    ah,0xff
  40a3ab:	cmp    al,0xf1
  40a3ad:	das    
  40a3ae:	add    DWORD PTR [ebx+0x400055ff],0xffffffa3
  40a3b5:	idiv   bh
  40a3b7:	(bad)  
  40a3b8:	dec    eax
  40a3ba:	add    BYTE PTR [esi],bl
  40a3bc:	cmp    BYTE PTR [edi],bh
  40a3be:	add    bh,bh
  40a3c0:	add    BYTE PTR [edx+0x7f1b64cc],bh
  40a3c6:	add    bh,bh
  40a3c8:	dec    DWORD PTR [eax+eax*1+0xa13afd]
  40a3cf:	cmp    edi,0x0
  40a3d2:	int3   
  40a3d3:	xor    BYTE PTR [edx],dh
  40a3d5:	sbb    eax,0xeffff00
  40a3da:	add    edi,0x25
  40a3dd:	adc    eax,DWORD PTR [ebx-0xd10001]
  40a3e3:	cmp    bh,ah
  40a3e5:	dec    ecx
  40a3e6:	dec    esp
  40a3e8:	jmp    DWORD PTR [eax+0x0]
  40a3eb:	pop    eax
  40a3ec:	cwde   
  40a3ed:	sub    eax,0xcb0000ff
  40a3f2:	(bad)  
  40a3f3:	mov    edi,0xffffb676
  40a3f8:	mov    esi,esi
  40a3fa:	call   DWORD PTR [ebp+0x73]
  40a3fd:	inc    DWORD PTR cs:[eax]
  40a400:	push   DWORD PTR [edx]
  40a402:	inc    DWORD PTR [edi+ecx*2]
  40a405:	mov    ecx,0x65830083
  40a40a:	(bad)  
  40a40b:	jp     0x40a3c7
  40a40d:	sbb    BYTE PTR [eax],al
  40a40f:	add    bh,bh
  40a411:	jmp    0x40a413
  40a413:	xchg   ebp,eax
  40a414:	mov    al,0xf5
  40a416:	(bad)  
  40a417:	inc    DWORD PTR [ebx+0x54d383cd]
  40a41d:	xor    eax,0x2dcc8900
  40a422:	int3   
  40a423:	add    al,bl
  40a425:	add    eax,DWORD PTR [eax]
  40a427:	inc    DWORD PTR [ebx-0x4c1cfffc]
  40a42d:	add    BYTE PTR [ebx-0xf0000],0x12
  40a434:	mov    al,0x70
  40a436:	inc    DWORD PTR [eax]
  40a438:	int3   
  40a439:	jecxz  0x40a43b
  40a43b:	jmp    0x10cd33a
  40a440:	mov    DWORD PTR [esi],ebx
  40a442:	add    BYTE PTR [edx-0x77],dh
  40a445:	cmp    cl,ah
  40a447:	add    bh,bh
  40a449:	in     eax,0x0
  40a44b:	repnz fisubr WORD PTR [eax]
  40a44e:	or     DWORD PTR [ecx+0x4183b4ff],0xffffffba
  40a455:	push   ds
  40a456:	dec    DWORD PTR [ecx+0x3bcc91ff]
  40a45c:	sbb    ch,BYTE PTR [ebp-0x34]
  40a45f:	inc    DWORD PTR [eax]
  40a461:	out    0x83,eax
  40a463:	mov    esi,ebx
  40a465:	and    edi,edi
  40a467:	add    DWORD PTR [eax],0xffffffb7
  40a46a:	int3   
  40a46b:	out    dx,eax
  40a46c:	daa    
  40a46d:	pop    esp
  40a46e:	inc    DWORD PTR [eax]
  40a470:	inc    DWORD PTR [ebx-0x77]
  40a473:	sub    ebx,ebx
  40a475:	fild   DWORD PTR [ebx-0x7cce3301]
  40a47b:	mov    ecx,0xcc89bf55
  40a480:	sub    DWORD PTR [edi-0x23a48434],0xffffffff
  40a487:	add    bh,bh
  40a489:	xor    DWORD PTR [eax],eax
  40a48b:	or     dl,bl
  40a48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a48e:	add    BYTE PTR [eax],al
  40a490:	inc    DWORD PTR [ebx]
  40a492:	add    BYTE PTR [edi+0xffb62f],bl
  40a498:	call   DWORD PTR [edx]
  40a49a:	or     DWORD PTR [edi+0xff5ef0],0xffffffcc
  40a4a1:	xchg   esi,eax
  40a4a2:	jmp    FWORD PTR [esi-0xa0a6]
  40a4a8:	add    BYTE PTR [edi+edi*8+0xdac251],dl
  40a4af:	int3   
  40a4b0:	sbb    ecx,0xffffffff
  40a4b3:	arpl   WORD PTR [esi-0x7cff002b],bx
  40a4b9:	pop    edx
  40a4ba:	add    BYTE PTR [ecx+0x75],bh
  40a4bd:	or     edi,edi
  40a4bf:	(bad)  
  40a4c0:	jmp    DWORD PTR [edi]
  40a4c2:	(bad)  
  40a4c3:	jp     0x40a4d4
  40a4c5:	dec    esi
  40a4c6:	add    bh,bh
  40a4c8:	add    BYTE PTR [eax+0x0],ah
  40a4cb:	pop    ds
  40a4cc:	cmp    BYTE PTR [eax+eax*1-0x77],0x83
  40a4d1:	mov    ds:0x8bf26c00,eax
  40a4d6:	cmp    edi,0xffffffff
  40a4d9:	pop    esi
  40a4da:	mov    DWORD PTR [eax+0x1e],ebp
  40a4dd:	xlat   BYTE PTR ds:[ebx]
  40a4de:	mov    edi,edi
  40a4e0:	int3   
  40a4e1:	dec    BYTE PTR [ecx-0x72e9ba]
  40a4e7:	(bad)  
  40a4e8:	jmp    esp
  40a4ea:	add    ch,al
  40a4ec:	cmp    ch,BYTE PTR [eax]
  40a4ee:	add    BYTE PTR [ecx-0x4d33b600],cl
  40a4f4:	jo     0x40a4b9
  40a4f6:	(bad)  
  40a4f7:	inc    DWORD PTR [eax]
  40a4f9:	push   ecx
  40a4fa:	(bad)  
  40a4fb:	jnp    0x40a4e2
  40a4fd:	dec    esp
  40a4fe:	(bad)  
  40a4ff:	inc    DWORD PTR [ebx+0x7ce7ccba]
  40a505:	jne    0x40a507
  40a507:	int3   
  40a508:	xor    DWORD PTR [esi],0xffffffff
  40a50b:	stc    
  40a50c:	mov    eax,ds:0xffffcc
  40a511:	mov    ebp,0x38507400
  40a516:	int3   
  40a517:	inc    DWORD PTR [eax]
  40a519:	jg     0x40a51a
  40a51b:	out    dx,eax
  40a51c:	mov    ebx,0xcc83ff3e
  40a521:	jmp    0x96816ea9
  40a526:	add    BYTE PTR [eax],al
  40a528:	mov    DWORD PTR [ecx],ebp
  40a52a:	add    BYTE PTR [esi-0x3b],al
  40a52d:	and    al,BYTE PTR [eax]
  40a52f:	add    ah,cl
  40a531:	or     edi,edi
  40a533:	cmp    ebx,DWORD PTR ds:0xffff836d
  40a539:	scas   al,BYTE PTR es:[edi]
  40a53a:	jmp    DWORD PTR [edx+0xff0f0b]
  40a540:	add    BYTE PTR [edx],bl
  40a542:	add    BYTE PTR ds:0xffff685c,dh
  40a548:	call   esp
  40a54a:	call   FWORD PTR [ebx]
  40a54c:	mov    eax,ds:0x8900831e
  40a551:	mov    DWORD PTR [eax],0xfffb2967
  40a557:	add    BYTE PTR [eax],al
  40a559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a55a:	dec    DWORD PTR [ecx]
  40a55c:	jne    0x40a52b
  40a55e:	add    bh,bh
  40a560:	add    BYTE PTR [ecx-0x1],al
  40a563:	dec    ecx
  40a564:	xchg   ebp,eax
  40a565:	or     bh,bh
  40a567:	or     esp,0x8
  40a56a:	dec    DWORD PTR ds:0xff006af5
  40a570:	add    BYTE PTR [edi+edi*8-0x6f],ch
  40a574:	mov    BYTE PTR [esi-0x1],dh
  40a577:	(bad)  
  40a578:	dec    DWORD PTR [ecx]
  40a57a:	add    BYTE PTR [eax],dl
  40a57c:	(bad)  
  40a57d:	pop    ebx
  40a57e:	inc    DWORD PTR [eax]
  40a580:	add    BYTE PTR [edi],dl
  40a582:	push   DWORD PTR [esp+ebp*4-0x2d]
  40a586:	add    BYTE PTR [ebx+0x4ccc02ff],al
  40a58c:	dec    esp
  40a58d:	xor    eax,0xdd00cc00
  40a592:	mov    DWORD PTR [eax],eax
  40a594:	adc    DWORD PTR [ecx-0x34],0xffffffcc
  40a598:	mov    DWORD PTR [edx-0x7d],esi
  40a59b:	enter  0xe53f,0xff
  40a59f:	add    BYTE PTR [ecx+0x31d7ff34],cl
  40a5a5:	(bad)  
  40a5a8:	inc    DWORD PTR [esi-0x7178b67d]
  40a5ae:	add    bh,bh
  40a5b0:	add    BYTE PTR [ebx],ah
  40a5b2:	push   DWORD PTR [ebx+ebp*1-0x17]
  40a5b6:	add    bh,bh
  40a5b8:	call   DWORD PTR [eax+0x28afc400]
  40a5be:	(bad)  
  40a5bf:	inc    DWORD PTR [eax]
  40a5c1:	or     DWORD PTR [eax],eax
  40a5c3:	push   cs
  40a5c4:	(bad)  
  40a5c5:	gs (bad) 
  40a5c7:	inc    DWORD PTR [ebx-0xa74ffcf]
  40a5cd:	adc    al,0x0
  40a5cf:	inc    DWORD PTR [eax]
  40a5d1:	mov    ecx,0x21e8a300
  40a5d6:	(bad)  
  40a5d7:	dec    DWORD PTR [ecx-0x23c4765b]
  40a5dd:	loop   0x40a5de
  40a5df:	dec    esp
  40a5e1:	cli    
  40a5e2:	adc    ebp,0x57
  40a5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5e6:	inc    DWORD PTR [ebx+0x17ff9cff]
  40a5ec:	jmp    0x40a59d
  40a5f1:	and    BYTE PTR [eax],al
  40a5f3:	inc    esp
  40a5f4:	jbe    0x40a5c2
  40a5f6:	add    bh,bh
  40a5f8:	jmp    DWORD PTR [eax]
  40a5fa:	int3   
  40a5fb:	hlt    
  40a5fc:	inc    edx
  40a5fd:	inc    esp
  40a5fe:	add    BYTE PTR [eax],al
  40a600:	xor    DWORD PTR [edi],0xffffff89
  40a603:	pop    ebx
  40a604:	mov    ds:0x8983ff3d,eax
  40a609:	jne    0x40a60a
  40a60b:	test   ecx,eax
  40a60d:	call   0x90417311
  40a612:	add    BYTE PTR [ecx+0xccb729],bl
  40a618:	jmp    FWORD PTR [esi-0x66245f00]
  40a61e:	inc    DWORD PTR [eax]
  40a620:	add    BYTE PTR [edx-0x7d],ch
  40a623:	sub    bl,BYTE PTR [edi+0xcc0089]
  40a629:	inc    edi
  40a62a:	jmp    FWORD PTR [ecx+0xb]
  40a62d:	cs (bad) 
  40a62f:	dec    esp
  40a631:	sbb    DWORD PTR [eax],eax
  40a633:	fimul  WORD PTR [ebp+0x20]
  40a636:	add    BYTE PTR [eax],al
  40a638:	(bad)  
  40a639:	mov    eax,0x9d8330ff
  40a63e:	(bad)  
  40a63f:	dec    DWORD PTR [ecx+0x4ee0cc92]
  40a645:	push   cs
  40a646:	(bad)  
  40a647:	dec    DWORD PTR [ecx-0x619d7ca1]
  40a64d:	mov    eax,DWORD PTR [eax]
  40a64f:	add    bh,bh
  40a651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a652:	jmp    DWORD PTR [ebp+0x74]
  40a655:	ret    
  40a656:	inc    DWORD PTR [eax]
  40a658:	jmp    FWORD PTR [ecx]
  40a65a:	call   DWORD PTR [eax-0x7cffbf46]
  40a660:	add    al,dl
  40a662:	add    BYTE PTR [ebx-0x79],cl
  40a665:	mov    BYTE PTR [eax],al
  40a667:	add    DWORD PTR [eax],0x1b
  40a66a:	call   DWORD PTR [ebx-0xff67f3]
  40a670:	mov    DWORD PTR [ecx-0x7d],eax
  40a673:	mov    cl,0xfb
  40a675:	jl     0x40a677
  40a677:	add    bh,bh
  40a679:	push   0xffffff89
  40a67b:	out    0xb4,al
  40a67d:	ss (bad) 
  40a67f:	inc    DWORD PTR [eax]
  40a681:	sahf   
  40a682:	inc    DWORD PTR [edi+0xcc81ff]
  40a688:	inc    edx
  40a68a:	mov    DWORD PTR [ecx],ecx
  40a68c:	js     0x40a6ca
  40a68e:	inc    DWORD PTR [ebx+0x30ffc600]
  40a694:	xchg   esp,eax
  40a695:	sbb    bh,bh
  40a697:	int3   
  40a698:	add    ah,dh
  40a69a:	mov    DWORD PTR [edx],ecx
  40a69c:	cmp    al,0x37
  40a69e:	dec    esp
  40a6a0:	(bad)  
  40a6a1:	sti    
  40a6a2:	add    dl,ah
  40a6a4:	les    ebp,FWORD PTR [ebp-0x1]
  40a6a7:	cmp    edi,0x4c
  40a6aa:	mov    ecx,esp
  40a6ac:	jbe    0x40a656
  40a6ae:	dec    esp
  40a6b0:	dec    DWORD PTR [edi]
  40a6b2:	(bad)  
  40a6b3:	out    dx,eax
  40a6b4:	mov    DWORD PTR [eax+eax*1-0x1],eax
  40a6b8:	inc    ecx
  40a6ba:	int3   
  40a6bb:	mov    dh,0x12
  40a6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6be:	cmp    edi,0xffffffff
  40a6c1:	cs int3 
  40a6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c4:	or     cl,BYTE PTR [edi+0x4c00ff00]
  40a6ca:	add    BYTE PTR [edi*1-0x33ffff6a],ah
  40a6d1:	adc    edi,edi
  40a6d3:	leave  
  40a6d4:	js     0x40a70f
  40a6d6:	inc    DWORD PTR [eax]
  40a6d8:	add    BYTE PTR [eax],ah
  40a6da:	(bad)  
  40a6db:	jg     0x40a6c0
  40a6dd:	dec    edi
  40a6de:	add    bh,bh
  40a6e0:	push   DWORD PTR [eax-0x34]
  40a6e3:	loop   0x40a6cc
  40a6e5:	aas    
  40a6e6:	(bad)  
  40a6e7:	dec    DWORD PTR [ecx-0x253400ea]
  40a6ed:	cmc    
  40a6ee:	inc    DWORD PTR [ebx+0x6c001bff]
  40a6f4:	jnp    0x40a6ce
  40a6f6:	inc    DWORD PTR [eax]
  40a6f8:	int3   
  40a6f9:	mov    ebx,0xa2c56d00
  40a6fe:	inc    DWORD PTR [eax]
  40a700:	add    BYTE PTR [ecx],al
  40a702:	jmp    DWORD PTR [ecx]
  40a704:	nop
  40a705:	(bad)  
  40a707:	cmp    edi,0x4d
  40a70a:	add    DWORD PTR [ecx+ebp*1-0x20],0x0
  40a70f:	(bad)  
  40a710:	inc    DWORD PTR [esi+0x2e8b0bff]
  40a716:	mov    edi,edi
  40a718:	add    BYTE PTR [ecx],dl
  40a71a:	add    DWORD PTR [ecx-0x33c262],0xffffffcc
  40a721:	fiadd  DWORD PTR [ebx+0x7e2ee9]
  40a727:	(bad)  
  40a728:	inc    DWORD PTR [ebx+eax*4]
  40a72b:	rol    DWORD PTR [ebp-0x7],0x0
  40a72f:	mov    edi,edi
  40a731:	iret   
  40a732:	add    BYTE PTR [ebx-0xb50d],al
  40a738:	add    DWORD PTR [ecx],0x0
  40a73b:	loop   0x40a71b
  40a73d:	imul   ecx,esp,0x0
  40a740:	int3   
  40a741:	adc    bh,bh
  40a743:	rcl    ebp,0x6f
  40a746:	inc    DWORD PTR [eax]
  40a748:	jmp    DWORD PTR [esi-0x1]
  40a74b:	push   ss
  40a74c:	pop    ds
  40a74d:	cli    
  40a74e:	(bad)  
  40a74f:	(bad)  
  40a750:	call   ecx
  40a752:	add    cl,ch
  40a754:	icebp  
  40a755:	xchg   edx,eax
  40a756:	inc    DWORD PTR [eax]
  40a758:	add    BYTE PTR [edi],dh
  40a75a:	adc    DWORD PTR [edi+0x45],0xffffffb5
  40a75e:	add    bh,bh
  40a760:	mov    DWORD PTR ds:0x83a5d400,ebp
  40a766:	mov    edi,edi
  40a768:	inc    ebp
  40a76a:	or     DWORD PTR [ecx-0x48],0xffffff8d
  40a76e:	cmp    edi,0xffffffff
  40a771:	ins    BYTE PTR es:[edi],dx
  40a772:	add    BYTE PTR [ebp-0x339be4],dh
  40a778:	xor    DWORD PTR [ebp+0x3dd35bff],0x0
  40a77f:	mov    DWORD PTR [eax],eax
  40a781:	xchg   ebx,eax
  40a782:	add    BYTE PTR [edi],ch
  40a784:	pop    esp
  40a785:	and    BYTE PTR [eax],al
  40a787:	add    bh,bh
  40a789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a78a:	int3   
  40a78b:	repz scas al,BYTE PTR es:[edi]
  40a78d:	jb     0x40a78e
  40a78f:	add    BYTE PTR [ebx+0x2913ffcc],al
  40a795:	push   ebp
  40a796:	(bad)  
  40a797:	(bad)  
  40a798:	inc    DWORD PTR [esi]
  40a79a:	sub    DWORD PTR [ebx],0xffffffdd
  40a79d:	sub    edi,edi
  40a79f:	mov    esp,ecx
  40a7a1:	pusha  
  40a7a2:	cmp    edx,0x4c
  40a7a5:	xor    edi,edi
  40a7a7:	add    DWORD PTR [eax],0xffffffb8
  40a7aa:	add    BYTE PTR [ebp-0x33],dh
  40a7ad:	arpl   di,di
  40a7af:	(bad)  
  40a7b0:	jmp    DWORD PTR [edx]
  40a7b2:	jmp    DWORD PTR [ebx+0xffe879]
  40a7b8:	mov    edx,ebp
  40a7ba:	mov    DWORD PTR [edi],eax
  40a7bc:	mov    bl,0x2e
  40a7be:	add    BYTE PTR [ebx-0x1000af00],al
  40a7c4:	(bad)  
  40a7c5:	test   al,0xcc
  40a7c7:	(bad)  
  40a7c8:	dec    DWORD PTR [ecx]
  40a7ca:	jmp    DWORD PTR [esi]
  40a7cc:	sub    BYTE PTR [ebx-0xe007c01],cl
  40a7d2:	jmp    FWORD PTR [eax+eax*2+0x89ffd1]
  40a7d9:	cmp    al,0xff
  40a7db:	je     0x40a81d
  40a7dd:	sub    edi,edi
  40a7df:	inc    DWORD PTR [ebx-0x77bc0063]
  40a7e5:	mov    ch,0xff
  40a7e7:	add    BYTE PTR [eax],al
  40a7e9:	jmp    0x787d5ced
  40a7ee:	add    DWORD PTR [eax],0xffffff89
  40a7f1:	test   al,0x0
  40a7f3:	gs or  BYTE PTR fs:[ebx-0x7cd80001],al
  40a7fb:	js     0x40a7b7
  40a7fd:	call   0x7840a78b
  40a802:	int3   
  40a803:	or     BYTE PTR [eax],ch
  40a805:	cmp    eax,DWORD PTR [ebx-0x9d3301]
  40a80b:	inc    ebp
  40a80c:	or     DWORD PTR [ebx-0x6200ff01],ecx
  40a812:	call   eax
  40a814:	stos   DWORD PTR es:[edi],eax
  40a815:	mov    ch,0xff
  40a817:	cmp    edi,0x3f
  40a81a:	(bad)  
  40a81b:	fdiv   DWORD PTR [ebx+eiz*1-0x1]
  40a81f:	mov    DWORD PTR [ebx-0x2471ff8d],eax
  40a825:	add    DWORD PTR [eax],0xffffffff
  40a828:	int3   
  40a829:	inc    ecx
  40a82a:	int3   
  40a82b:	xchg   BYTE PTR [edi-0x78],ah
  40a82e:	inc    DWORD PTR [ebx+0x4aff8d00]
  40a834:	les    ebp,FWORD PTR [ebx-0x7d]
  40a837:	add    DWORD PTR [ebx+0x633fff7],0x12
  40a83e:	(bad)  
  40a83f:	(bad)  
  40a840:	dec    DWORD PTR [edx-0x6abe0d7d]
  40a846:	mov    DWORD PTR [eax],eax
  40a848:	dec    eax
  40a84a:	jmp    DWORD PTR [esi]
  40a84c:	inc    ebx
  40a84d:	sub    BYTE PTR [ebx-0xd03334],al
  40a853:	sub    dh,BYTE PTR [esi-0x337600aa]
  40a859:	xchg   DWORD PTR [ecx-0x33afd227],ecx
  40a85f:	add    bh,bh
  40a861:	dec    ebx
  40a862:	cmp    DWORD PTR [edx],0xffffffd1
  40a865:	nop
  40a866:	add    BYTE PTR [eax],al
  40a868:	mov    esi,ecx
  40a86a:	add    cl,ch
  40a86c:	mov    dh,0xfe
  40a86e:	dec    DWORD PTR [ecx-0xf7ca301]
  40a874:	ret    
  40a875:	dec    esi
  40a876:	inc    DWORD PTR [eax]
  40a878:	call   FWORD PTR [edi+0x0]
  40a87b:	neg    DWORD PTR ds:0xff0089e9
  40a881:	add    BYTE PTR [bp+si-0x2b88],bh
  40a886:	add    bh,bh
  40a888:	push   DWORD PTR [ebx+0x7bf5c0ff]
  40a88e:	inc    DWORD PTR [eax]
  40a890:	and    DWORD PTR [esi-0x1],0xffffff83
  40a894:	pop    ss
  40a895:	idiv   bh
  40a897:	(bad)  
  40a898:	push   esp
  40a89a:	add    BYTE PTR [eax-0xff99d0],bh
  40a8a0:	sub    ebp,0xffffffff
  40a8a3:	inc    ecx
  40a8a4:	sbb    al,0xdc
  40a8a6:	add    bh,bh
  40a8a8:	add    BYTE PTR [ebx+0x4db23d00],bl
  40a8ae:	(bad)  
  40a8af:	(bad)  
  40a8b0:	jmp    eax
  40a8b2:	add    BYTE PTR [edx],dl
  40a8b4:	sbb    al,0x1f
  40a8b6:	int3   
  40a8b7:	add    BYTE PTR [eax],al
  40a8b9:	mov    ebp,0x89676700
  40a8be:	add    bh,bh
  40a8c0:	(bad)  
  40a8c1:	mov    ebx,0xc9a57d83
  40a8c6:	add    bh,bh
  40a8c8:	add    BYTE PTR [ebp+0x1298b3cc],bh
  40a8ce:	add    BYTE PTR [eax],al
  40a8d0:	add    BYTE PTR [eax+eax*1+0xbfbbab],bl
  40a8d7:	(bad)  
  40a8d8:	(bad)  
  40a8d9:	mov    esi,0x7d27a300
  40a8de:	add    ah,cl
  40a8e0:	jmp    FWORD PTR [edi]
  40a8e2:	or     DWORD PTR [ebx],0xffffffd9
  40a8e5:	or     eax,0x348383ff
  40a8ea:	mov    DWORD PTR [ebx-0x3d],edx
  40a8ed:	retf   0xcc00
  40a8f0:	adc    DWORD PTR [eax-0x1],0x3a
  40a8f4:	loopne 0x40a8f1
  40a8f6:	add    bh,bh
  40a8f8:	mov    ebp,edx
  40a8fa:	add    BYTE PTR [ebx-0x7c5f96],dh
  40a900:	push   DWORD PTR [edi+edi*8+0x5f]
  40a904:	add    eax,0xffffffe0
  40a909:	cmp    edi,0x25
  40a90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a90d:	mov    dh,0xff
  40a90f:	inc    DWORD PTR [eax]
  40a911:	outs   dx,BYTE PTR ds:[esi]
  40a912:	add    bh,bh
  40a914:	dec    ebp
  40a915:	dec    eax
  40a916:	add    bh,bh
  40a918:	(bad)  
  40a919:	(bad)  
  40a91b:	(bad)  
  40a91c:	and    ah,BYTE PTR [ebx]
  40a91e:	add    BYTE PTR [eax],al
  40a920:	add    BYTE PTR [esi],ah
  40a922:	call   FWORD PTR [edi]
  40a924:	push   edx
  40a925:	or     al,BYTE PTR [eax]
  40a927:	mov    edi,edi
  40a929:	addr16 int3 
  40a92b:	(bad)  
  40a92d:	dec    ah
  40a92f:	add    BYTE PTR [eax],al
  40a931:	mov    edi,0x9fe67300
  40a936:	mov    esp,ecx
  40a938:	jmp    esi
  40a93a:	dec    DWORD PTR [edx+edx*2-0x7cff3388]
  40a941:	sbb    al,BYTE PTR [ebx+0x4d3a3]
  40a947:	(bad)  
  40a948:	(bad)  
  40a949:	jle    0x40a917
  40a94b:	inc    esp
  40a94c:	inc    esp
  40a94d:	or     eax,DWORD PTR [eax]
  40a94f:	inc    DWORD PTR [eax]
  40a951:	sbb    BYTE PTR [eax],al
  40a953:	push   ss
  40a954:	push   0xc
  40a956:	dec    esp
  40a958:	and    DWORD PTR [ebx-0x4617f77],0xffffff83
  40a95f:	cmp    edi,0xffffffea
  40a962:	xor    DWORD PTR [ebx],0xfffffffa
  40a965:	mov    ds:0xb4ffffff,al
  40a96a:	add    BYTE PTR [esi-0xee26],ch
  40a970:	add    BYTE PTR [eax-0x1],ch
  40a973:	mov    eax,0xffcaba
  40a978:	add    dl,ch
  40a97a:	push   DWORD PTR [edi-0x6d]
  40a97d:	xor    DWORD PTR [eax],eax
  40a97f:	inc    DWORD PTR [eax]
  40a981:	sbb    eax,0x2f4f0883
  40a986:	dec    esp
  40a988:	(bad)  
  40a989:	jmp    0xba03468d
  40a98e:	add    DWORD PTR [eax],0x0
  40a991:	xchg   edx,eax
  40a992:	add    al,ah
  40a994:	inc    ebp
  40a995:	mov    WORD PTR [ebx-0x7c9e0100],es
  40a99b:	repnz jecxz 0x40a960
  40a99e:	dec    DWORD PTR [ecx-0x1cff5834]
  40a9a4:	and    eax,0xccffffd1
  40a9a9:	jmp    FWORD PTR es:0xffffccdc
  40a9b0:	add    ah,al
  40a9b2:	int3   
  40a9b3:	jecxz  0x40aa02
  40a9b5:	ret    0x8389
  40a9b8:	jmp    eax
  40a9ba:	add    ah,cl
  40a9bc:	arpl   dx,dx
  40a9be:	add    BYTE PTR [eax],al
  40a9c0:	sbb    ebx,0x0
  40a9c3:	or     DWORD PTR [eax],edi
  40a9c5:	jmp    0x40a9c6
  40a9c7:	(bad)  
  40a9c8:	jmp    DWORD PTR [eax-0x324a6e77]
  40a9ce:	inc    DWORD PTR [ebx-0x7100787d]
  40a9d4:	daa    
  40a9d5:	sbb    esp,ecx
  40a9d7:	or     DWORD PTR [ecx-0x44f6ffed],0x1c
  40a9de:	inc    DWORD PTR [eax]
  40a9e0:	jmp    DWORD PTR [edx]
  40a9e2:	(bad)  
  40a9e3:	jmp    DWORD PTR [edi-0x76337f]
  40a9e9:	in     eax,0xff
  40a9eb:	fwait
  40a9ec:	sub    DWORD PTR [eax-0x1],edi
  40a9ef:	cmp    edi,0xffffff84
  40a9f2:	call   DWORD PTR [ebp-0x43]
  40a9f5:	inc    edx
  40a9f6:	add    BYTE PTR [eax],al
  40a9f8:	add    BYTE PTR [ebx-0x1],ah
  40a9fb:	jmp    0x40a9c6
  40a9fd:	push   edx
  40a9fe:	dec    esp
  40aa00:	add    BYTE PTR [edx+0x0],bl
  40aa03:	loope  0x40a985
  40aa05:	xor    edi,edi
  40aa07:	add    DWORD PTR [eax],0x33
  40aa0a:	jmp    DWORD PTR [ebx+0x4c]
  40aa0d:	inc    eax
  40aa0e:	add    bh,bh
  40aa10:	call   FWORD PTR ds:0x772e5fff
  40aa16:	or     esp,0x0
  40aa19:	inc    ecx
  40aa1a:	add    BYTE PTR [ebp+0x3d],al
  40aa1d:	int    0x0
  40aa1f:	inc    DWORD PTR [eax]
  40aa21:	sub    bh,bh
  40aa23:	add    esp,DWORD PTR [edi]
  40aa25:	in     eax,dx
  40aa26:	int3   
  40aa27:	(bad)  
  40aa28:	(bad)  
  40aa29:	jnp    0x40aa2a
  40aa2b:	mov    WORD PTR [eax],ss
  40aa2d:	jg     0x40aa2f
  40aa2f:	add    DWORD PTR [eax],0xffffffff
  40aa32:	jmp    DWORD PTR [eax+0x5]
  40aa35:	stos   BYTE PTR es:[edi],al
  40aa36:	(bad)  
  40aa37:	inc    DWORD PTR [eax]
  40aa39:	jb     0x40aa3b
  40aa3b:	jne    0x40aa24
  40aa3d:	js     0x40a9c2
  40aa3f:	add    bh,bh
  40aa41:	add    ah,cl
  40aa43:	xor    eax,0xcce8b0
  40aa48:	inc    DWORD PTR [ebx-0x58c8d67d]
  40aa4e:	add    DWORD PTR [eax],0x0
  40aa51:	cmp    ecx,esp
  40aa53:	add    ecx,DWORD PTR [ecx+0x5]
  40aa56:	cmp    edi,0xffffffcc
  40aa59:	dec    esi
  40aa5a:	mov    DWORD PTR [ebp-0x68],edi
  40aa5d:	mov    bh,0xcc
  40aa5f:	add    DWORD PTR [eax],0xffffffbb
  40aa62:	int3   
  40aa63:	inc    edi
  40aa64:	outs   dx,DWORD PTR ds:[esi]
  40aa65:	loopne 0x40aa33
  40aa67:	int3   
  40aa68:	mov    DWORD PTR [edi],ecx
  40aa6a:	call   FWORD PTR [edx]
  40aa6c:	push   ebx
  40aa6d:	stos   DWORD PTR es:[edi],eax
  40aa6e:	dec    esp
  40aa70:	or     DWORD PTR [edx-0x75f71c7d],0x0
  40aa77:	add    BYTE PTR [ebx+0x843ff5d],al
  40aa7d:	hlt    
  40aa7e:	(bad)  
  40aa7f:	inc    DWORD PTR [ebx+0x4dcf8360]
  40aa85:	dec    eax
  40aa86:	(bad)  
  40aa87:	dec    esp
  40aa89:	push   edx
  40aa8a:	add    dh,ah
  40aa8c:	retf   
  40aa8d:	jnp    0x40aa8e
  40aa8f:	(bad)  
  40aa90:	push   DWORD PTR [esi-0x2b6b0234]
  40aa96:	inc    DWORD PTR [eax]
  40aa98:	int3   
  40aa99:	stos   BYTE PTR es:[edi],al
  40aa9a:	dec    DWORD PTR [esi-0x7c00f2c3]
  40aaa0:	add    BYTE PTR [ebx-0x54814d01],bl
  40aaa6:	mov    DWORD PTR [eax],eax
  40aaa8:	add    BYTE PTR ds:0xd93da800,ch
  40aaae:	add    BYTE PTR [ebx+0x24008d83],al
  40aab4:	push   cs
  40aab5:	fild   WORD PTR [ebx+0x588300]
  40aabb:	repnz pop eax
  40aabd:	mov    ch,0x0
  40aabf:	add    BYTE PTR [eax],al
  40aac1:	or     edi,edi
  40aac3:	jmp    0x40aa61
  40aac5:	dec    ebp
  40aac6:	cmp    edi,0xffffffff
  40aac9:	push   edx
  40aaca:	add    BYTE PTR [esp+ecx*1-0x767c0089],cl
  40aad1:	push   ebx
  40aad2:	call   FWORD PTR [ecx+0xad]
  40aad8:	inc    DWORD PTR [esp+ecx*8+0x28]
  40aadc:	jmp    0xcc35:0xff008930
  40aae3:	or     ebp,DWORD PTR [esi*1-0x6f340000]
  40aaea:	add    BYTE PTR [esi+0x11],ch
  40aaed:	mov    dh,0xff
  40aaef:	(bad)  
  40aaf0:	jmp    FWORD PTR [ebx+0x2a8958ff]
  40aaf6:	int3   
  40aaf7:	mov    edi,edi
  40aaf9:	dec    eax
  40aafa:	inc    DWORD PTR [ebx+ebx*1+0x18]
  40aafe:	(bad)  
  40aaff:	(bad)  
  40ab00:	call   ebx
  40ab02:	dec    DWORD PTR [eax-0xff45de]
  40ab08:	dec    ebx
  40ab0a:	mov    DWORD PTR [ecx],esi
  40ab0c:	mov    edx,0xff89e4
  40ab11:	sub    BYTE PTR [ebx-0xebdb19],al
  40ab17:	inc    DWORD PTR [eax]
  40ab19:	sbb    al,BYTE PTR [eax]
  40ab1b:	add    dh,BYTE PTR [eax]
  40ab1d:	mov    DWORD PTR [eax],eax
  40ab1f:	(bad)  
  40ab20:	(bad)  
  40ab21:	jg     0x40ab23
  40ab23:	cmp    ah,BYTE PTR [edx-0x26]
  40ab26:	cmp    edi,0xffffffff
  40ab29:	loop   0x40aaae
  40ab2b:	(bad)  
  40ab2c:	imul   edi,ebx,0xffffffff
  40ab2f:	add    BYTE PTR [eax],dh
  40ab31:	add    BYTE PTR [ebp-0xff33c6],cl
  40ab37:	mov    edi,edi
  40ab39:	mov    edi,edi
  40ab3b:	sub    ebx,DWORD PTR [esi-0x267c07e7]
  40ab41:	(bad)  
  40ab42:	clc    
  40ab43:	test   BYTE PTR [ebx-0x33c20034],0x83
  40ab4a:	mov    DWORD PTR [ebx-0x15],edx
  40ab4d:	push   ss
  40ab4e:	xchg   ecx,eax
  40ab4f:	add    BYTE PTR [ecx-0x1],dh
  40ab52:	mov    ch,0x5d
  40ab54:	mov    DWORD PTR [ebx-0xff8000],eax
  40ab5a:	int3   
  40ab5b:	ficomp WORD PTR [ecx]
  40ab5d:	mov    BYTE PTR [eax-0x34],ah
  40ab60:	(bad)  
  40ab62:	xor    ecx,DWORD PTR [ebx]
  40ab64:	int3   
  40ab65:	inc    DWORD PTR [eax]
  40ab67:	pop    ecx
  40ab68:	int3   
  40ab69:	cmp    edi,0x40
  40ab6c:	xor    BYTE PTR [esi],bh
  40ab6e:	cld    
  40ab6f:	and    ebp,0xffffff83
  40ab72:	dec    edx
  40ab73:	cmp    bh,bh
  40ab75:	add    BYTE PTR [ebx-0xffff85],al
  40ab7b:	out    0xd,al
  40ab7d:	or     DWORD PTR ds:0x3f831800,ebp
  40ab83:	test   edi,edi
  40ab85:	inc    DWORD PTR [eax]
  40ab87:	ud0    edi,edi
  40ab8a:	int3   
  40ab8b:	(bad)  
  40ab8c:	jns    0x40ac0a
  40ab8e:	sbb    bh,bh
  40ab90:	ret    0x26ff
  40ab93:	popf   
  40ab94:	add    DWORD PTR [eax],0xffffffcc
  40ab97:	pop    ss
  40ab98:	add    BYTE PTR [ebx-0x35300800],al
  40ab9e:	hlt    
  40ab9f:	add    bh,al
  40aba1:	xor    DWORD PTR [edi],0x0
  40aba4:	int3   
  40aba5:	add    BYTE PTR [eax],al
  40aba7:	cmp    edi,edi
  40aba9:	add    BYTE PTR [eax],al
  40abab:	inc    esi
  40abac:	xor    DWORD PTR [eax+eiz*2],ecx
  40abaf:	push   DWORD PTR [edi]
  40abb1:	mov    DWORD PTR [ebx-0x77],edx
  40abb4:	dec    DWORD PTR [ecx-0xffbb01]
  40abba:	mov    DWORD PTR [edx],esp
  40abbc:	loope  0x40aba6
  40abbe:	jne    0x40abbf
  40abc0:	mov    eax,DWORD PTR [ebx-0x7c009f5e]
  40abc6:	add    BYTE PTR [esi+0xcff83ff],dh
  40abcc:	icebp  
  40abcd:	out    0xdc,eax
  40abcf:	add    BYTE PTR [edx-0x7d],ch
  40abd2:	inc    esp
  40abd3:	xchg   ebx,eax
  40abd4:	add    BYTE PTR [ebx-0x76ffef7d],al
  40abda:	jmp    ebp
  40abdc:	(bad)  
  40abdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abde:	aas    
  40abdf:	mov    DWORD PTR [ebx-0x464901],ebp
  40abe5:	dec    esp
  40abe7:	or     bh,bh
  40abe9:	add    BYTE PTR [eax],al
  40abeb:	jmp    DWORD PTR [ecx]
  40abed:	and    ah,BYTE PTR [ebx]
  40abef:	add    BYTE PTR [edi-0x1],cl
  40abf2:	cdq    
  40abf3:	cmp    esp,ecx
  40abf5:	add    bh,bh
  40abf7:	jg     0x40abf8
  40abf9:	(bad)  
  40abfa:	call   FWORD PTR [edx+0x7e]
  40abfd:	adc    ch,ch
  40abff:	add    BYTE PTR [edx-0xa8227d],ch
  40ac05:	add    BYTE PTR [eax],al
  40ac07:	into   
  40ac08:	(bad)  
  40ac09:	(bad)  
  40ac0a:	call   DWORD PTR [eax+0x67]
  40ac0d:	(bad)  
  40ac0e:	test   al,0x89
  40ac10:	mov    al,0xff
  40ac12:	clc    
  40ac13:	or     eax,0x6b00ff00
  40ac18:	add    BYTE PTR [eax],al
  40ac1a:	call   DWORD PTR [ebx-0x2]
  40ac1d:	jmp    0xf493:0xff4b831a
  40ac24:	inc    DWORD PTR [ebx+0xff3f00]
  40ac2a:	sbb    DWORD PTR [eax-0x21e285],0xffffffa7
  40ac31:	add    BYTE PTR [edx+0x25],ah
  40ac34:	(bad)  
  40ac35:	inc    DWORD PTR [eax]
  40ac37:	idiv   edi
  40ac39:	inc    DWORD PTR [eax]
  40ac3b:	int3   
  40ac3c:	and    DWORD PTR [edi-0x69],0x77ffe183
  40ac43:	fild   DWORD PTR [ebx-0x340001]
  40ac49:	int3   
  40ac4a:	call   DWORD PTR [ebp+0x44]
  40ac4d:	addr16 inc ebx
  40ac4f:	add    BYTE PTR [edi+edi*8],bl
  40ac52:	aas    
  40ac53:	dec    esi
  40ac54:	inc    DWORD PTR [ebx-0xff5200]
  40ac5a:	add    BYTE PTR [edx+edx*2+0x1dcc0c63],al
  40ac61:	jmp    FWORD PTR [eax+0x65]
  40ac64:	add    BYTE PTR [ebx+0xff3acc],al
  40ac6a:	add    BYTE PTR [eax+ebp*2-0x5d],dl
  40ac6e:	cmp    edi,0x39
  40ac71:	add    al,dl
  40ac73:	pop    ebp
  40ac74:	inc    DWORD PTR [eax]
  40ac76:	mov    eax,ecx
  40ac78:	inc    DWORD PTR [eax]
  40ac7a:	call   FWORD PTR [eax-0x7c5d8d68]
  40ac80:	addr16 int3 
  40ac82:	stos   BYTE PTR es:[edi],al
  40ac83:	jg     0x40ac08
  40ac85:	mov    edi,edi
  40ac87:	ret    
  40ac88:	int3   
  40ac89:	dec    DWORD PTR [ecx-0x584432a0]
  40ac8f:	sbb    edx,0xffffffff
  40ac92:	or     BYTE PTR [eax],ah
  40ac94:	inc    DWORD PTR [eax]
  40ac96:	and    DWORD PTR [edx-0xc000001],0xffffff92
  40ac9d:	shl    DWORD PTR [ebx+0x0],1
  40aca0:	mov    DWORD PTR [ebx-0x767102],eax
  40aca6:	mov    DWORD PTR [edi-0x77],ecx
  40aca9:	add    bh,bh
  40acab:	dec    ecx
  40acac:	sar    BYTE PTR [esi-0x75],0x0
  40acb0:	jb     0x40acb1
  40acb2:	in     eax,dx
  40acb3:	or     edi,edi
  40acb5:	inc    DWORD PTR [eax]
  40acb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acb8:	inc    DWORD PTR [eax]
  40acba:	add    BYTE PTR ds:0xcc4af5da,al
  40acc0:	ret    0xacff
  40acc3:	or     bh,bh
  40acc5:	(bad)  
  40acc6:	call   FWORD PTR [ebx]
  40acc8:	(bad)  
  40acc9:	(bad)  
  40acca:	call   FWORD PTR [esp+ebx*4+0x7e001585]
  40acd1:	add    ah,al
  40acd3:	cmp    bh,0xff
  40acd6:	add    BYTE PTR [eax],ah
  40acd8:	inc    DWORD PTR [eax]
  40acda:	mov    DWORD PTR [esi+0x33],ebx
  40acdd:	call   0x9f21:0xffe3002a
  40ace4:	inc    DWORD PTR [ebx+0xcca3cc]
  40acea:	add    BYTE PTR [ecx-0x6a],ah
  40aced:	js     0x40ad43
  40acef:	push   DWORD PTR [eax-0x1]
  40acf2:	enter  0xff49,0xcc
  40acf6:	call   FWORD PTR [ebx-0x77]
  40acf9:	or     esp,0xffffffe7
  40acfc:	scas   al,BYTE PTR es:[edi]
  40acfd:	lea    ecx,[eax+eax*1-0x2d]
  40ad01:	int3   
  40ad02:	repnz cld 
  40ad04:	inc    DWORD PTR [eax]
  40ad06:	jmp    DWORD PTR [ecx]
  40ad08:	(bad)  
  40ad09:	dec    DWORD PTR [ecx+0xcf6dbac]
  40ad0f:	call   ebx
  40ad11:	jmp    FWORD PTR [edx]
  40ad13:	xor    al,0x0
  40ad15:	inc    DWORD PTR [ebx-0x33ff7c5a]
  40ad1b:	add    dl,cl
  40ad1d:	mov    al,0x8f
  40ad1f:	call   DWORD PTR [esi-0x164d01]
  40ad25:	(bad)  
  40ad26:	push   DWORD PTR [eax]
  40ad28:	(bad)  
  40ad29:	inc    DWORD PTR [eax]
  40ad2b:	outs   dx,DWORD PTR ds:[esi]
  40ad2c:	add    eax,0xae00d278
  40ad31:	add    BYTE PTR [edi],al
  40ad33:	xor    BYTE PTR [eax],al
  40ad35:	inc    DWORD PTR [eax]
  40ad37:	push   edi
  40ad38:	add    bh,bh
  40ad3a:	(bad)  
  40ad3b:	call   0x3edc25
  40ad40:	arpl   WORD PTR [ecx-0x7c7a2d],cx
  40ad46:	mov    DWORD PTR [ebp-0x7d],esp
  40ad49:	int3   
  40ad4a:	and    DWORD PTR [edx+edi*1+0x3683a405],0xffffff89
  40ad52:	pushf  
  40ad53:	push   ds
  40ad54:	add    bh,bh
  40ad56:	add    BYTE PTR [edi+0x0],bh
  40ad59:	mov    edi,edi
  40ad5b:	mov    al,0xff
  40ad5d:	cdq    
  40ad5e:	bswap  esp
  40ad60:	push   ds
  40ad61:	int3   
  40ad62:	mov    esp,0x83ffd4
  40ad67:	cmp    edi,0x661800ff
  40ad6d:	and    DWORD PTR [eax-0x1],esp
  40ad70:	lock call FWORD PTR [edi]
  40ad73:	pop    ecx
  40ad74:	int3   
  40ad75:	inc    DWORD PTR [eax]
  40ad77:	lods   eax,DWORD PTR ds:[esi]
  40ad78:	add    BYTE PTR [eax],al
  40ad7a:	(bad)  
  40ad7b:	jge    0x40ad3a
  40ad7d:	out    0x98,al
  40ad7f:	push   DWORD PTR [esp+ecx*8]
  40ad82:	cwde   
  40ad83:	xchg   ebp,eax
  40ad84:	(bad)  
  40ad85:	inc    DWORD PTR [ebx-0xb2]
  40ad8b:	arpl   ax,dx
  40ad8d:	jns    0x40adca
  40ad8f:	inc    DWORD PTR [edx-0x1]
  40ad92:	mov    eax,0xffccff10
  40ad97:	das    
  40ad98:	inc    DWORD PTR [ebx-0x15bcde00]
  40ad9e:	out    0xff,al
  40ada0:	xchg   bh,bh
  40ada2:	hlt    
  40ada3:	cmp    bh,bh
  40ada5:	add    DWORD PTR [eax],0x7c
  40ada8:	inc    DWORD PTR [ebx+0x1986c5ff]
  40adae:	mov    edx,0x6100bd00
  40adb3:	mov    ?,edi
  40adb5:	(bad)  
  40adb6:	(bad)  
  40adb7:	in     eax,dx
  40adb8:	add    DWORD PTR [eax],0xffffff89
  40adbb:	into   
  40adbc:	fs dec eax
  40adbe:	inc    ebp
  40adbf:	mov    DWORD PTR [ebx-0x7d],eax
  40adc2:	xor    al,0xa4
  40adc4:	add    BYTE PTR [ecx-0x762201],cl
  40adca:	mov    DWORD PTR [edx-0xf3c57b],ebp
  40add0:	cli    
  40add1:	cmp    DWORD PTR [esi],0x26
  40add4:	add    ah,cl
  40add6:	add    bh,dl
  40add8:	(bad)  
  40add9:	(bad)  
  40adda:	jmp    FWORD PTR [ecx+edi*8-0x1e]
  40adde:	jl     0x40addf
  40ade0:	xlat   BYTE PTR ds:[ebx]
  40ade1:	mov    DWORD PTR [eax],ecx
  40ade3:	adc    bh,bh
  40ade5:	inc    DWORD PTR [eax]
  40ade7:	(bad)  
  40ade8:	dec    DWORD PTR [ecx+0x1c5ce2cc]
  40adee:	sar    edi,0x77
  40adf1:	add    BYTE PTR [ebx+0x3a],cl
  40adf4:	inc    DWORD PTR [eax]
  40adf6:	mov    ebx,edx
  40adf8:	add    BYTE PTR [eax],al
  40adfa:	(bad)  
  40adfb:	(bad)  
  40adfc:	jns    0x40ae0d
  40adfe:	jmp    0xeb:0x9aff2083
  40ae05:	add    DWORD PTR [ebx-0x3376fff5],0x67
  40ae0c:	lds    ecx,FWORD PTR [esi]
  40ae0e:	fld    DWORD PTR [eax]
  40ae10:	sub    BYTE PTR [ecx-0x76ff0b51],cl
  40ae16:	add    al,dh
  40ae18:	add    bh,bh
  40ae1a:	add    bh,dl
  40ae1c:	pushf  
  40ae1d:	(bad)  
  40ae1e:	loop   0x40adec
  40ae20:	pop    edx
  40ae21:	sbb    DWORD PTR [eax],0xfffffff7
  40ae24:	add    BYTE PTR [eax],al
  40ae26:	cmp    DWORD PTR [eax+eax*1-0x7d],0xffffffff
  40ae2b:	adc    ebp,esp
  40ae2d:	leave  
  40ae2e:	popa   
  40ae2f:	inc    DWORD PTR [ecx]
  40ae31:	add    ch,al
  40ae33:	xor    eax,DWORD PTR [eax]
  40ae35:	(bad)  
  40ae36:	jmp    FWORD PTR ds:0x3a8983ff
  40ae3c:	adc    DWORD PTR [edi+0x3c],esp
  40ae3f:	add    BYTE PTR [ebx],cl
  40ae41:	adc    DWORD PTR [eax-0xffff2a],0xffffffee
  40ae48:	int3   
  40ae49:	add    bh,bh
  40ae4b:	sub    esp,DWORD PTR [ebp+0x38004f2e]
  40ae51:	add    BYTE PTR [edi-0x64],ah
  40ae54:	(bad)  
  40ae55:	inc    DWORD PTR [ebx+0x8383bf]
  40ae5b:	ss jmp 0x2a4007e5
  40ae61:	jmp    DWORD PTR [esi]
  40ae63:	loop   0x40ae64
  40ae65:	inc    DWORD PTR [eax]
  40ae67:	repnz add DWORD PTR [ebx+0x718999ff],0x0
  40ae6f:	add    ch,dh
  40ae71:	add    BYTE PTR [edx+ebx*4+0x0],ch
  40ae75:	inc    DWORD PTR [eax]
  40ae77:	add    DWORD PTR [eax],0xfeabff00
  40ae7d:	popf   
  40ae7e:	stc    
  40ae7f:	add    dh,bh
  40ae81:	add    BYTE PTR [ebx-0x7c007cab],ch
  40ae87:	clc    
  40ae88:	add    BYTE PTR [eax],al
  40ae8a:	push   DWORD PTR [esp+edi*1-0x76]
  40ae8e:	dec    esi
  40ae8f:	(bad)  
  40ae90:	fdiv   st(7),st
  40ae92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae93:	aam    0xff
  40ae95:	add    DWORD PTR [eax],0xffffffb7
  40ae98:	(bad)  
  40ae99:	inc    DWORD PTR [ebx+0x62cee1bd]
  40ae9f:	push   DWORD PTR [eax+0xc1cfff]
  40aea5:	dec    esp
  40aea7:	ret    0xff83
  40aeaa:	call   FWORD PTR [ebx-0x3328d190]
  40aeb0:	repz (bad) 
  40aeb2:	sti    
  40aeb3:	pop    ss
  40aeb4:	(bad)  
  40aeb5:	dec    esp
  40aeb7:	sti    
  40aeb8:	inc    DWORD PTR [ebx+0x88fd89]
  40aebe:	pushf  
  40aebf:	call   DWORD PTR [edx]
  40aec1:	(bad)  
  40aec2:	out    dx,al
  40aec3:	cmp    al,BYTE PTR [eax]
  40aec5:	cmp    edi,0xffffffd6
  40aec8:	(bad)  
  40aec9:	inc    DWORD PTR [ebx-0x79ae31a4]
  40aecf:	mov    esp,eax
  40aed1:	add    BYTE PTR [ebp*1+0x240000ff],bh
  40aed8:	dec    esp
  40aeda:	push   eax
  40aedc:	inc    ebp
  40aedd:	(bad)  
  40aede:	xchg   esi,eax
  40aedf:	add    al,ah
  40aee1:	push   DWORD PTR [eax+0x1e]
  40aee4:	cmp    edi,0xffffffff
  40aee7:	inc    esp
  40aee8:	add    BYTE PTR [eax],al
  40aeea:	jmp    ebp
  40aeec:	cmp    eax,0x66ff7fb2
  40aef1:	add    BYTE PTR [ebp+ecx*8+0x6bff00ff],ch
  40aef8:	inc    DWORD PTR [eax]
  40aefa:	add    BYTE PTR [ebx],ch
  40aefc:	cmp    BYTE PTR [edx+eiz*2],dh
  40aeff:	add    BYTE PTR [esi],ch
  40af01:	dec    DWORD PTR ds:0xff008346
  40af07:	jge    0x40af08
  40af09:	cmp    edi,0xfffffff9
  40af0c:	adc    DWORD PTR [ecx+0x7d],ebx
  40af0f:	mov    DWORD PTR [ecx+0x0],esi
  40af12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af13:	cmp    bh,0x0
  40af16:	jmp    DWORD PTR [ebp-0x34]
  40af19:	add    bh,bh
  40af1b:	sub    bh,ah
  40af1d:	ins    DWORD PTR es:[edi],dx
  40af1e:	ror    DWORD PTR [ecx-0x4146ff5c],1
  40af24:	inc    DWORD PTR [eax]
  40af26:	add    BYTE PTR [ecx],ch
  40af28:	cmp    edi,0x0
  40af2b:	pop    bp
  40af2e:	int3   
  40af2f:	add    BYTE PTR [eax+eax*1],al
  40af32:	xlat   BYTE PTR ds:[ebx]
  40af33:	test   al,0x0
  40af35:	inc    DWORD PTR [ebx-0x7c33000a]
  40af3b:	sbb    bl,BYTE PTR [edi+0xfcc9302]
  40af41:	add    cl,dl
  40af43:	ins    BYTE PTR es:[edi],dx
  40af44:	inc    DWORD PTR [eax]
  40af46:	inc    DWORD PTR [edi+0xdffffff]
  40af4c:	or     BYTE PTR [eax],0xb2
  40af4f:	sub    DWORD PTR [ebx+0xc30aff],0xffffffcc
  40af56:	int3   
  40af57:	idiv   edi
  40af59:	(bad)  
  40af5a:	dec    DWORD PTR [edx-0x79c309]
  40af60:	mov    ?,edi
  40af62:	int    0xef
  40af64:	int3   
  40af65:	int3   
  40af66:	cmp    DWORD PTR ds:0x7830083,0x47
  40af6d:	(bad)  
  40af6e:	mov    al,BYTE PTR [eax]
  40af70:	mov    edx,0xff2c4bff
  40af75:	inc    DWORD PTR [ebx-0x7c7cffc5]
  40af7b:	repz mov al,ds:0x84837173
  40af81:	xor    DWORD PTR [eax-0x7600ffea],0x66
  40af88:	mov    DWORD PTR [ebx+0x231a76ff],eax
  40af8e:	iret   
  40af8f:	add    bh,dh
  40af91:	add    BYTE PTR [esi-0x337c0c],bh
  40af97:	in     al,dx
  40af98:	dec    esp
  40af9a:	add    BYTE PTR [ecx],bh
  40af9c:	jle    0x40afc4
  40af9e:	sbb    edi,edi
  40afa0:	mov    bh,0xff
  40afa2:	and    esi,edi
  40afa4:	add    BYTE PTR [ebx+0x1cff],al
  40afaa:	add    BYTE PTR [ebx+0x28],bl
  40afad:	mov    BYTE PTR ds:[eax],al
  40afb0:	retf   0x77ff
  40afb3:	ret    
  40afb4:	(bad)  
  40afb5:	(bad)  
  40afb6:	jmp    edi
  40afb8:	(bad)  
  40afb9:	(bad)  
  40afba:	call   FWORD PTR [ebx]
  40afbc:	pop    ss
  40afbd:	xor    esp,DWORD PTR [eax+eax*1+0x57]
  40afc1:	add    BYTE PTR ds:0x890018,cl
  40afc7:	int    0xff
  40afc9:	int3   
  40afca:	add    BYTE PTR [esi],bl
  40afcc:	adc    al,0x66
  40afce:	dec    esi
  40afcf:	adc    DWORD PTR [ecx-0x1],0xffffffc9
  40afd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd4:	or     DWORD PTR [ecx-0x76003534],0x0
  40afdb:	and    ebp,esi
  40afdd:	add    DWORD PTR [esi],0xffffffff
  40afe0:	mov    eax,ds:0xce3200
  40afe5:	int3   
  40afe6:	push   DWORD PTR [edi]
  40afe8:	inc    DWORD PTR [ebx-0x71916801]
  40afee:	jns    0x40aff0
  40aff0:	push   ebx
  40aff1:	cmp    DWORD PTR [eax-0x80],0x0
  40aff5:	dec    esp
  40aff7:	sbb    DWORD PTR [ecx+0x3ac00000],ecx
  40affd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40affe:	ins    BYTE PTR es:[edi],dx
  40afff:	push   ebp
  40b001:	call   FWORD PTR [ebx+0x3b]
  40b004:	inc    DWORD PTR [eax]
  40b006:	xor    esi,0xffffffff
  40b009:	inc    DWORD PTR [eax]
  40b00b:	fabs   
  40b00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b00e:	fild   DWORD PTR [eax]
  40b010:	sub    eax,0xff084089
  40b015:	mov    DWORD PTR [eax],eax
  40b017:	jl     0x40b018
  40b019:	add    bh,bh
  40b01b:	int    0x55
  40b01d:	pop    esi
  40b01e:	mov    edi,0x8aff02ff
  40b023:	cwde   
  40b024:	(bad)  
  40b025:	dec    DWORD PTR [ecx-0xff3392]
  40b02b:	xchg   esp,eax
  40b02c:	pop    ebx
  40b02d:	push   esp
  40b02e:	rol    BYTE PTR [ebx-0x3091ff1f],1
  40b034:	add    BYTE PTR [eax],al
  40b036:	add    al,dh
  40b038:	(bad)  
  40b039:	(bad)  
  40b03a:	jmp    DWORD PTR [ebx]
  40b03c:	ror    DWORD PTR [edi+0x3d],0x89
  40b040:	mov    eax,ds:0x4825ff
  40b045:	or     DWORD PTR [ecx-0xc4],0xffffff92
  40b04c:	or     BYTE PTR ds:0xcca1ffc9,bh
  40b052:	xor    al,0xc4
  40b054:	(bad)  
  40b055:	inc    DWORD PTR [ebx+0xcc003b]
  40b05b:	mov    eax,ds:0xff93da3b
  40b060:	fs int3 
  40b062:	out    0x8,al
  40b064:	mov    DWORD PTR [eax],eax
  40b066:	mov    edx,esp
  40b068:	or     esp,0x0
  40b06b:	sti    
  40b06c:	(bad)  
  40b06d:	mov    ds:0x1d000f,eax
  40b072:	dec    esp
  40b073:	sub    al,0x83
  40b075:	add    BYTE PTR [ebx-0x33007655],al
  40b07b:	jo     0x40b0e4
  40b07d:	call   0xf276:0xff130026
  40b084:	add    bh,bh
  40b086:	add    BYTE PTR [edi+0x0],ah
  40b089:	add    ah,cl
  40b08b:	add    BYTE PTR [eax],bh
  40b08d:	sub    al,0x76
  40b08f:	add    ch,bh
  40b091:	sbb    DWORD PTR [ecx],0x34
  40b094:	add    BYTE PTR [ebx-0x7ce077],al
  40b09a:	push   DWORD PTR [esi+0x6d]
  40b09d:	mov    ebx,0xcc0183e0
  40b0a2:	hlt    
  40b0a3:	pop    edx
  40b0a4:	dec    DWORD PTR [ecx-0x33ff9701]
  40b0aa:	jmp    DWORD PTR [eax+0x2f]
  40b0ad:	lea    esi,[ebx-0x7d]
  40b0b0:	push   ecx
  40b0b1:	or     DWORD PTR [edx+0x6c],0xffffff83
  40b0b5:	(bad)  
  40b0b6:	call   DWORD PTR [ecx]
  40b0b8:	(bad)  
  40b0b9:	inc    DWORD PTR [eax]
  40b0bb:	mov    bl,BYTE PTR [esp+ecx*8+0x4c]
  40b0bf:	(bad)  
  40b0c0:	mov    esp,0xff14f200
  40b0c5:	or     esp,0xffffffe0
  40b0c8:	or     DWORD PTR [ecx+0x40bf78ff],0x5b
  40b0cf:	jmp    DWORD PTR [edx-0xaa1700]
  40b0d5:	add    BYTE PTR [eax],al
  40b0d7:	or     al,0x89
  40b0d9:	add    BYTE PTR [eax],al
  40b0db:	or     BYTE PTR [edi+0x7bff6669],dh
  40b0e1:	add    BYTE PTR [ebp+0xff8320],al
  40b0e7:	outs   dx,BYTE PTR ds:[esi]
  40b0e8:	(bad)  
  40b0e9:	(bad)  
  40b0ea:	dec    DWORD PTR [ecx]
  40b0ec:	or     al,0xb3
  40b0ee:	jmp    0xb4027f2
  40b0f3:	pop    ebp
  40b0f4:	add    bh,bh
  40b0f6:	int3   
  40b0f7:	adc    al,0xff
  40b0f9:	int3   
  40b0fa:	add    al,bl
  40b0fc:	xor    eax,0x57ff0d2b
  40b101:	dec    DWORD PTR [ecx]
  40b103:	ror    ah,cl
  40b105:	inc    DWORD PTR [ebx-0x7cff0070]
  40b10b:	repz sub al,0x7f
  40b10e:	fwait
  40b10f:	call   DWORD PTR [edi]
  40b111:	int3   
  40b112:	(bad)  
  40b113:	dec    edi
  40b114:	inc    DWORD PTR [eax]
  40b116:	add    BYTE PTR [eax-0x1900ff77],bl
  40b11c:	cmp    bh,BYTE PTR [edx]
  40b11e:	xor    bh,bh
  40b120:	jge    0x40b0a5
  40b122:	push   0x63
  40b124:	add    bh,bh
  40b126:	adc    ebx,0x0
  40b129:	add    DWORD PTR [eax],0xc
  40b12c:	lods   al,BYTE PTR ds:[esi]
  40b12d:	(bad)  
  40b12e:	out    0xff,eax
  40b130:	into   
  40b131:	xor    DWORD PTR [eax],0x1a
  40b134:	add    DWORD PTR [eax],0xffffffff
  40b137:	iret   
  40b138:	inc    DWORD PTR [eax]
  40b13a:	dec    DWORD PTR [esi+0x834bbb]
  40b140:	jbe    0x40b141
  40b142:	neg    BYTE PTR [edx+0x1a89ffff]
  40b148:	inc    DWORD PTR [eax]
  40b14a:	push   DWORD PTR [ebp-0x332788f5]
  40b150:	jg     0x40b152
  40b152:	cmp    eax,0xffffff8d
  40b157:	fisttp WORD PTR [ecx-0x61baff34]
  40b15d:	pop    edi
  40b15e:	out    0x0,eax
  40b160:	push   ss
  40b161:	call   FWORD PTR [eax]
  40b163:	dec    eax
  40b164:	inc    DWORD PTR [ebx-0x33769300]
  40b16a:	or     DWORD PTR [ebx-0x3358585a],0x4a
  40b171:	jmp    FWORD PTR ds:0x830093
  40b177:	cmp    edi,0xffffff83
  40b17a:	mov    DWORD PTR [ecx],eax
  40b17c:	xchg   edx,eax
  40b17d:	ins    BYTE PTR es:[edi],dx
  40b17e:	jg     0x40b180
  40b180:	push   0xcc2a2883
  40b185:	dec    esp
  40b187:	push   eax
  40b188:	mov    DWORD PTR [eax],eax
  40b18a:	and    DWORD PTR [esi-0xb9d6fb],0x52
  40b191:	mov    esi,ebx
  40b193:	sbb    edi,edi
  40b195:	cmp    edi,0x1d
  40b198:	add    bh,bh
  40b19a:	add    dh,cl
  40b19c:	scas   eax,DWORD PTR es:[edi]
  40b19d:	xchg   edi,eax
  40b19e:	imul   eax,DWORD PTR [ebx-0x300633b0],0x40ffcccc
  40b1a8:	mov    edi,edi
  40b1aa:	add    al,al
  40b1ac:	stos   BYTE PTR es:[edi],al
  40b1ad:	ror    DWORD PTR [edi+edi*8-0xde337c],1
  40b1b4:	int3   
  40b1b5:	or     esp,0xfffffff6
  40b1b8:	mov    DWORD PTR [ecx-0x6f221600],ecx
  40b1be:	stc    
  40b1bf:	call   FWORD PTR [edi]
  40b1c1:	mov    DWORD PTR [ecx+0x63],eax
  40b1c4:	or     esp,0xffffffff
  40b1c7:	mov    cl,0xcc
  40b1c9:	add    ah,cl
  40b1cb:	jns    0x40b14f
  40b1cd:	push   edx
  40b1ce:	ins    BYTE PTR es:[edi],dx
  40b1cf:	add    BYTE PTR ds:0xffc7cbff,al
  40b1d5:	cmp    edi,0x42
  40b1d8:	add    bh,bh
  40b1da:	add    DWORD PTR [edx+0x6090fa],0x1f
  40b1e1:	add    BYTE PTR [edi],ch
  40b1e3:	sbb    eax,0x8e8389ff
  40b1e8:	dec    esp
  40b1ea:	jmp    DWORD PTR [edi]
  40b1ec:	push   0xcc00fb03
  40b1f1:	add    BYTE PTR [edx],al
  40b1f3:	sub    al,0x83
  40b1f5:	or     DWORD PTR [ecx+0xffec],0x3c
  40b1fc:	cwde   
  40b1fd:	in     al,0xa6
  40b1ff:	mov    DWORD PTR [esi-0x1],ebx
  40b202:	mov    al,0xb5
  40b204:	inc    DWORD PTR [ebx-0x7cff0f34]
  40b20a:	jmp    FWORD PTR [ecx]
  40b20c:	add    DWORD PTR cs:[eax],eax
  40b20f:	add    BYTE PTR [esi-0xc46934],cl
  40b215:	mov    DWORD PTR [eax],eax
  40b217:	fwait
  40b218:	inc    DWORD PTR [eax]
  40b21a:	dec    DWORD PTR [edx-0x11]
  40b21d:	imul   ecx,DWORD PTR [ecx-0x2f000f7d],0xffffffaa
  40b224:	add    ah,cl
  40b226:	call   FWORD PTR [ebp-0x6ffff34]
  40b22c:	bound  ebx,QWORD PTR [ebx+ebx*8]
  40b22f:	or     esi,0xffffffff
  40b232:	imul   esp,DWORD PTR [eax],0x70ff8983
  40b238:	add    DWORD PTR [eax],0xffffff83
  40b23b:	jnp    0x40b1f2
  40b23d:	push   ebx
  40b23e:	push   0x4183b500
  40b243:	iret   
  40b244:	add    DWORD PTR [ebx-0x7cc101],0x0
  40b24b:	xlat   BYTE PTR ds:[ebx]
  40b24c:	sbb    BYTE PTR [ecx],bh
  40b24e:	xchg   esp,eax
  40b24f:	add    BYTE PTR [edi-0x9a5801],al
  40b255:	dec    DWORD PTR [ecx-0xff7c93]
  40b25b:	sub    DWORD PTR [edx+0x64fff02e],ebx
  40b261:	dec    ebp
  40b263:	mov    ds:0x7b00ff00,al
  40b268:	(bad)  
  40b269:	inc    DWORD PTR [eax]
  40b26b:	adc    DWORD PTR [eax+0x6bff623b],ecx
  40b271:	int3   
  40b272:	xchg   cl,ah
  40b274:	add    BYTE PTR [ebx-0xe34],al
  40b27a:	add    BYTE PTR [ecx+0x6a28ed],dh
  40b280:	jb     0x40b281
  40b282:	ret    
  40b283:	push   edi
  40b284:	add    DWORD PTR [ebx+0x897000],0x0
  40b28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b28c:	in     eax,dx
  40b28d:	loopne 0x40b2f8
  40b28f:	add    BYTE PTR [ebp-0x1],al
  40b292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b293:	add    al,0xff
  40b295:	inc    DWORD PTR [eax]
  40b297:	cmp    ecx,esp
  40b299:	add    bh,bh
  40b29b:	or     al,0x8c
  40b29d:	aas    
  40b29e:	aam    0xff
  40b2a0:	mov    ch,0x0
  40b2a2:	sti    
  40b2a3:	jl     0x40b2a4
  40b2a5:	or     DWORD PTR [ecx-0x76ff0024],0xffffffa3
  40b2ac:	mov    ds:0x35009996,eax
  40b2b1:	add    BYTE PTR [edx-0x7c00007d],ch
  40b2b7:	sbb    al,0x89
  40b2b9:	add    bh,bh
  40b2bb:	icebp  
  40b2bc:	pop    ebp
  40b2bd:	jne    0x40b309
  40b2bf:	inc    edi
  40b2c1:	or     DWORD PTR [edi+0x63],0xffffffff
  40b2c5:	add    bh,bh
  40b2c7:	jge    0x40b252
  40b2c9:	inc    DWORD PTR [eax]
  40b2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2cc:	nop
  40b2cd:	push   edx
  40b2ce:	push   ebp
  40b2cf:	add    DWORD PTR [eax],0x0
  40b2d2:	int3   
  40b2d3:	int    0xff
  40b2d5:	add    DWORD PTR [eax],0xffffffe1
  40b2d8:	add    ah,cl
  40b2da:	add    BYTE PTR [edx-0x761f7c29],bh
  40b2e0:	out    dx,al
  40b2e1:	add    BYTE PTR [esi+ecx*8-0x347c0100],dl
  40b2e8:	int3   
  40b2e9:	add    bh,bh
  40b2eb:	retf   
  40b2ec:	in     al,0x0
  40b2ee:	fmul   QWORD PTR [ecx-0x6536ff37]
  40b2f4:	inc    DWORD PTR [eax]
  40b2f6:	add    BYTE PTR [ebx-0x1],ah
  40b2f9:	add    bh,bh
  40b2fb:	(bad)  
  40b2fc:	cs retf 
  40b2fe:	jmp    0xa4:0x7ccc8eff
  40b305:	(bad)  
  40b306:	push   DWORD PTR [eax-0x34]
  40b309:	inc    DWORD PTR [eax]
  40b30b:	fsubrp st(6),st
  40b30d:	xchg   edx,eax
  40b30e:	fadd   QWORD PTR [eax]
  40b310:	test   DWORD PTR [eax],0xff853c
  40b316:	dec    DWORD PTR [esi-0x1]
  40b319:	add    DWORD PTR [eax],0xffffffc1
  40b31c:	data16 int3 
  40b31e:	sar    edi,cl
  40b320:	xchg   DWORD PTR [ebx+0x15d1],eax
  40b326:	jmp    esi
  40b328:	cmp    edi,0x0
  40b32b:	imul   edi,DWORD PTR [ebx-0x3f],0xff94ffe2
  40b332:	or     DWORD PTR [edi],edx
  40b334:	inc    DWORD PTR [ebx+0xff1700]
  40b33a:	call   DWORD PTR [ecx-0x22]
  40b33d:	fistp  DWORD PTR [edi-0x10006301]
  40b343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b344:	dec    DWORD PTR [ecx+0xbccc]
  40b34a:	mov    DWORD PTR [edx],ecx
  40b34c:	pop    es
  40b34d:	or     BYTE PTR [edx+0x0],cl
  40b350:	lahf   
  40b351:	call   FWORD PTR [edi+0x12]
  40b354:	int3   
  40b355:	dec    esp
  40b357:	mov    edi,edi
  40b359:	add    BYTE PTR [eax],al
  40b35b:	(bad)  
  40b35c:	jbe    0x40b358
  40b35e:	icebp  
  40b35f:	add    BYTE PTR [esi-0x34],bh
  40b362:	retfw  0xccff
  40b366:	mov    DWORD PTR [ebp+0x7eccff83],ebp
  40b36c:	pop    edi
  40b36d:	(bad)  
  40b36e:	pop    ecx
  40b36f:	call   FWORD PTR [eax+eax*1+0xd]
  40b373:	and    bh,bh
  40b375:	or     esp,0x32
  40b378:	add    bh,bh
  40b37a:	inc    edx
  40b37c:	ficom  WORD PTR [esp+ebx*1-0x5d7cda34]
  40b383:	add    DWORD PTR [ebx+0x33ffcc],0x58550000
  40b38d:	pop    ecx
  40b38e:	jmp    0xff39:0x44009a00
  40b395:	dec    DWORD PTR [ecx+0xfffffd]
  40b39b:	ret    0x23e5
  40b39e:	inc    eax
  40b39f:	(bad)  
  40b3a0:	jge    0x40b3a1
  40b3a2:	pop    ss
  40b3a3:	push   ebp
  40b3a4:	add    DWORD PTR [eax],0xffffffff
  40b3a7:	pusha  
  40b3a8:	add    bh,bh
  40b3aa:	add    BYTE PTR [esi],dh
  40b3ac:	in     eax,0x16
  40b3ae:	es int3 
  40b3b0:	mov    esi,0x44bc00
  40b3b5:	int3   
  40b3b6:	push   DWORD PTR [ecx-0x7d]
  40b3b9:	(bad)  
  40b3ba:	call   DWORD PTR [ecx-0x7849f3]
  40b3c0:	jecxz  0x40b34b
  40b3c2:	shr    BYTE PTR [edi+edi*8+0x490000],0x0
  40b3ca:	add    cl,dl
  40b3cc:	xchg   edx,eax
  40b3cd:	jl     0x40b39d
  40b3cf:	dec    DWORD PTR [esi-0x1]
  40b3d2:	mov    esi,0xff89ff1d
  40b3d7:	pop    ss
  40b3d8:	add    bh,bh
  40b3da:	add    ah,ch
  40b3dc:	ss cli 
  40b3de:	mov    bh,bh
  40b3e0:	cmc    
  40b3e1:	add    BYTE PTR [edi],bh
  40b3e3:	jp     0x40b3b1
  40b3e5:	inc    DWORD PTR [eax]
  40b3e7:	or     ecx,DWORD PTR [ecx+0x643b00ff]
  40b3ed:	mov    bl,0x4f
  40b3ef:	xor    DWORD PTR [ebx-0x7cd22c01],0xffffffff
  40b3f6:	add    DWORD PTR [ebx],0xffffffff
  40b3f9:	(bad)  
  40b3fa:	call   DWORD PTR [ebx]
  40b3fc:	(bad)  
  40b3fd:	push   ss
  40b3fe:	cdq    
  40b3ff:	push   DWORD PTR [edx]
  40b401:	add    ah,bl
  40b403:	cmp    eax,0xce0000ff
  40b408:	(bad)  
  40b409:	dec    esp
  40b40b:	push   ss
  40b40c:	cmp    eax,0x63ffde48
  40b411:	(bad)  
  40b412:	jns    0x40b47e
  40b414:	inc    DWORD PTR [eax]
  40b416:	(bad)  
  40b417:	clc    
  40b418:	(bad)  
  40b419:	(bad)  
  40b41a:	dec    DWORD PTR [ecx]
  40b41c:	sub    BYTE PTR [edi-0xc97c82],bl
  40b422:	pop    esp
  40b423:	xor    eax,0xeb000000
  40b428:	(bad)  
  40b429:	inc    DWORD PTR [eax]
  40b42b:	adc    al,0xe1
  40b42d:	rcl    dh,0xff
  40b430:	adc    eax,0x8318ceff
  40b435:	inc    DWORD PTR [ebx-0x7c0000f6]
  40b43b:	xor    al,dl
  40b43d:	xchg   edi,eax
  40b43e:	push   0xffffffcc
  40b440:	dec    DWORD PTR [edi-0x14]
  40b443:	xor    DWORD PTR [ebx],0xffffffd7
  40b446:	int3   
  40b447:	inc    DWORD PTR [ecx]
  40b449:	mov    eax,DWORD PTR [eax]
  40b44b:	add    BYTE PTR [ecx+0x89d400],ah
  40b451:	lahf   
  40b452:	in     eax,dx
  40b453:	int3   
  40b454:	jp     0x40b44c
  40b456:	add    bh,bh
  40b458:	inc    edi
  40b459:	pop    DWORD PTR [ebx-0x77009a7d]
  40b45f:	dec    esp
  40b461:	cld    
  40b462:	mov    DWORD PTR [eax],eax
  40b464:	shl    BYTE PTR [edx+0x150fff00],1
  40b46a:	dec    DWORD PTR [ecx+0x93004f]
  40b470:	call   FWORD PTR [eax-0x48]
  40b473:	jmp    DWORD PTR ds:0xcf8900c2
  40b479:	ret    
  40b47a:	(bad)  
  40b47b:	dec    DWORD PTR [edi]
  40b47d:	add    BYTE PTR [eax],al
  40b47f:	add    BYTE PTR [ebx+0x4bffd5e2],al
  40b485:	inc    esi
  40b486:	add    BYTE PTR [eax],al
  40b488:	or     eax,ebp
  40b48a:	(bad)  
  40b48b:	jmp    DWORD PTR [ecx]
  40b48d:	mov    esi,esp
  40b48f:	dec    DWORD PTR [ecx-0x10006479]
  40b495:	and    edi,edi
  40b497:	mov    DWORD PTR [ebx],edi
  40b499:	mov    ebp,0xff53ffff
  40b49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49f:	inc    DWORD PTR [ebx+0x3cca816]
  40b4a5:	(bad)  
  40b4a6:	(bad)  
  40b4a7:	push   DWORD PTR [edx-0x4bffffce]
  40b4ad:	call   DWORD PTR [edi+edi*8+0x0]
  40b4b1:	xchg   esp,eax
  40b4b2:	inc    ebx
  40b4b3:	sub    DWORD PTR [edi-0x97676e0],0xffffffaf
  40b4ba:	(bad)  
  40b4bb:	(bad)  
  40b4bc:	fdivr  st,st(7)
  40b4be:	jb     0x40b4c0
  40b4c0:	inc    DWORD PTR [edx+edx*1-0x1]
  40b4c4:	mov    ?,esp
  40b4c6:	add    bh,bh
  40b4c8:	dec    edi
  40b4c9:	dec    edx
  40b4ca:	inc    DWORD PTR [eax]
  40b4cc:	fs int3 
  40b4ce:	popf   
  40b4cf:	inc    DWORD PTR [ebx-0x1200f5da]
  40b4d5:	or     edi,edi
  40b4d7:	call   FWORD PTR [edx-0xb00ff1e]
  40b4dd:	jmp    DWORD PTR [ebx-0x51ab0077]
  40b4e3:	inc    ecx
  40b4e5:	test   eax,0x77e1ffff
  40b4ea:	mov    edi,edi
  40b4ec:	cwde   
  40b4ed:	(bad)  
  40b4ee:	mov    ebp,0xbfff8300
  40b4f3:	add    BYTE PTR [eax-0x17],cl
  40b4f6:	dec    esp
  40b4f8:	inc    eax
  40b4f9:	ss (bad) 
  40b4fb:	jmp    FWORD PTR [edi]
  40b4fd:	add    BYTE PTR [edi],ch
  40b4ff:	add    bh,bh
  40b501:	hlt    
  40b502:	cwde   
  40b503:	push   DWORD PTR [ecx]
  40b505:	mov    eax,ds:0xbdb1cc00
  40b50a:	inc    DWORD PTR [ebx+0x4d0075]
  40b510:	int3   
  40b511:	jnp    0x40b541
  40b513:	add    BYTE PTR [esi],cl
  40b515:	pop    ss
  40b516:	dec    DWORD PTR [ecx-0xff8402]
  40b51c:	imul   edi,edi,0x73ffff83
  40b522:	add    BYTE PTR [ebx-0xff0a97],al
  40b528:	das    
  40b529:	add    DWORD PTR ds:[ebx+0xbf00a9],0xffffffff
  40b531:	mov    ecx,0x4aa6ffd3
  40b536:	dec    DWORD PTR [ecx+0xff69bb]
  40b53c:	dec    edx
  40b53d:	dec    DWORD PTR [ecx+0x0]
  40b540:	call   DWORD PTR [ecx-0x4a]
  40b543:	adc    DWORD PTR [ecx+0x53ff003c],0x60
  40b54a:	add    BYTE PTR [eax],al
  40b54c:	clc    
  40b54d:	or     DWORD PTR [ebx+0x0],0xffffff83
  40b551:	jp     0x40b566
  40b553:	int3   
  40b554:	dec    eax
  40b555:	xchg   esi,eax
  40b556:	int3   
  40b557:	xor    DWORD PTR [ebx+ebx*2],0xffffffff
  40b55b:	add    ah,ah
  40b55d:	add    BYTE PTR [edx+0xe0dffff],bh
  40b563:	add    BYTE PTR [ecx-0x38],dl
  40b566:	int3   
  40b567:	push   DWORD PTR [edx+0x6f]
  40b56a:	(bad)  
  40b56b:	inc    DWORD PTR [eax+eax*1+0x3c]
  40b56f:	add    DWORD PTR [eax],0x26
  40b572:	jo     0x40b574
  40b574:	mov    ds:0x97ffff0a,eax
  40b579:	pop    edi
  40b57a:	add    bh,bh
  40b57c:	retf   
  40b57d:	(bad)  
  40b57e:	mov    ecx,0x54850000
  40b583:	add    BYTE PTR [edx+0x2700834b],bl
  40b589:	push   ss
  40b58a:	(bad)  
  40b58b:	dec    ecx
  40b58d:	add    BYTE PTR [esi+0x0],al
  40b590:	jmp    FWORD PTR [ebx]
  40b592:	pop    ss
  40b593:	call   DWORD PTR [esi]
  40b595:	jg     0x40b596
  40b597:	and    DWORD PTR [esp+esi*1+0x0],0xffffff89
  40b59c:	xchg   ecx,eax
  40b59d:	sub    DWORD PTR [ecx],0xffffffff
  40b5a0:	(bad)  
  40b5a1:	cli    
  40b5a2:	mov    BYTE PTR [ebx-0xd174],0xb2
  40b5a9:	popa   
  40b5aa:	add    BYTE PTR [ebx+0x25ff5f],al
  40b5b0:	inc    DWORD PTR ds:0xafebff72
  40b5b6:	int3   
  40b5b7:	jmp    DWORD PTR [ebx]
  40b5b9:	sbb    eax,DWORD PTR [ebx-0x4b335f00]
  40b5bf:	inc    DWORD PTR [ebx+0x62004812]
  40b5c5:	mov    ch,0x0
  40b5c7:	add    BYTE PTR [ecx-0x52767cca],dl
  40b5cd:	add    BYTE PTR [ebx],dl
  40b5cf:	inc    DWORD PTR [eax]
  40b5d1:	call   0xcc:0x391c00b5
  40b5d8:	mov    bh,0x69
  40b5da:	dec    DWORD PTR [ecx-0x7c7b00f5]
  40b5e0:	add    BYTE PTR [eax],dl
  40b5e2:	out    dx,eax
  40b5e3:	cmp    DWORD PTR [edi-0x773300de],0x59
  40b5ea:	cmp    edi,0x55
  40b5ed:	call   DWORD PTR [esp+ecx*8-0x1e6401]
  40b5f4:	pushf  
  40b5f5:	pop    ecx
  40b5f6:	add    BYTE PTR [eax],al
  40b5f8:	sbb    ecx,DWORD PTR ds:0xffd3cc83
  40b5fe:	iret   
  40b5ff:	(bad)  
  40b600:	inc    DWORD PTR [esi-0x2b]
  40b603:	mov    esi,ebx
  40b605:	sub    esp,ecx
  40b607:	dec    DWORD PTR [esi+0xe8383ea]
  40b60d:	or     DWORD PTR [eax-0x66eb0001],0xffffff83
  40b614:	and    edi,edx
  40b616:	(bad)  
  40b617:	dec    DWORD PTR [ebx-0x9]
  40b61a:	add    bh,bh
  40b61c:	adc    bh,bh
  40b61e:	dec    eax
  40b61f:	add    bh,bh
  40b621:	cld    
  40b622:	cmp    eax,DWORD PTR [eax]
  40b624:	out    dx,eax
  40b625:	std    
  40b626:	add    BYTE PTR [eax],al
  40b628:	or     edx,edi
  40b62a:	mov    DWORD PTR [eax],eax
  40b62c:	daa    
  40b62d:	(bad)  
  40b62e:	cmp    eax,DWORD PTR [eax]
  40b630:	add    dh,dl
  40b632:	pop    ds
  40b633:	add    DWORD PTR [eax+0x18ffffae],0x6a
  40b63a:	add    bh,bh
  40b63c:	add    al,0xff
  40b63e:	out    0x89,al
  40b640:	jmp    FWORD PTR [esi-0x59cdffa7]
  40b646:	(bad)  
  40b647:	(bad)  
  40b648:	mov    esp,0xecc00e2
  40b64d:	push   DWORD PTR [ebp-0x1]
  40b650:	(bad)  
  40b651:	fidivr DWORD PTR [edx+0x6e15ff]
  40b657:	sub    ecx,0x67
  40b65a:	(bad)  
  40b65b:	call   FWORD PTR [eax-0x3300bc01]
  40b661:	in     al,dx
  40b662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b663:	call   DWORD PTR [ecx-0x457cff9b]
  40b669:	jns    0x40b66b
  40b66b:	add    BYTE PTR [edi],bh
  40b66d:	jmp    FWORD PTR [edx]
  40b66f:	mov    DWORD PTR [ecx-0x37644c6],ecx
  40b675:	sub    edi,edi
  40b677:	int3   
  40b678:	xor    esi,DWORD PTR [edx+0x0]
  40b67b:	add    BYTE PTR [ebp-0x7c7cd27d],dl
  40b681:	pop    ebx
  40b682:	cmp    bh,bh
  40b684:	cwde   
  40b685:	xor    DWORD PTR [eax],eax
  40b687:	add    al,bl
  40b689:	popf   
  40b68a:	inc    DWORD PTR [eax]
  40b68c:	push   esi
  40b68d:	call   FWORD PTR [ecx-0x1]
  40b690:	add    al,bh
  40b692:	pop    eax
  40b693:	add    ah,dh
  40b695:	sub    eax,0x13f8ffff
  40b69a:	inc    DWORD PTR [ebx+0xfff3]
  40b6a0:	add    BYTE PTR [eax-0x30a7ffb1],ch
  40b6a6:	(bad)  
  40b6a7:	push   DWORD PTR [edi]
  40b6a9:	mov    bl,0x89
  40b6ab:	mov    DWORD PTR [ecx],ebx
  40b6ad:	mov    ebp,edx
  40b6af:	inc    DWORD PTR [ebx-0x4c002f07]
  40b6b5:	xchg   edx,eax
  40b6b6:	int3   
  40b6b7:	(bad)  
  40b6b8:	js     0x40b6eb
  40b6ba:	add    BYTE PTR [ebx+0x208372],al
  40b6c0:	int3   
  40b6c1:	ret    
  40b6c2:	in     al,dx
  40b6c3:	add    BYTE PTR [esi+0xd00005a],dl
  40b6c9:	inc    ecx
  40b6ca:	(bad)  
  40b6cb:	dec    DWORD PTR [ebx-0x1]
  40b6ce:	push   esp
  40b6cf:	int3   
  40b6d0:	mov    ebx,ebp
  40b6d2:	sar    edi,0x3e
  40b6d5:	adc    al,0xff
  40b6d7:	jmp    DWORD PTR [esi]
  40b6d9:	ins    BYTE PTR es:[edi],dx
  40b6da:	cmp    edi,0xffffffb0
  40b6dd:	mov    edi,edi
  40b6df:	dec    esp
  40b6e1:	mov    ds,WORD PTR [edi-0x266e00]
  40b6e7:	int3   
  40b6e8:	jg     0x40b6e2
  40b6ea:	(bad)  
  40b6eb:	(bad)  
  40b6ec:	cmp    al,0xff
  40b6ee:	rol    DWORD PTR [ebx-0x86c67d],0x9d
  40b6f5:	stos   DWORD PTR es:[edi],eax
  40b6f6:	add    bh,bh
  40b6f8:	test   esp,eax
  40b6fa:	mov    DWORD PTR [ebx+0x36ffd6],eax
  40b700:	int3   
  40b701:	out    0x72,al
  40b703:	add    BYTE PTR [eax],ah
  40b705:	jmp    0xc8a4b809
  40b70a:	add    bh,bh
  40b70c:	jg     0x40b70d
  40b70e:	and    eax,0x5a87ff89
  40b713:	add    BYTE PTR [ecx],bh
  40b715:	dec    esp
  40b716:	add    BYTE PTR [ebx-0xffc586],al
  40b71c:	into   
  40b71d:	jmp    FWORD PTR [edx]
  40b71f:	(bad)  
  40b720:	dec    DWORD PTR [edi-0x14a400ea]
  40b726:	(bad)  
  40b727:	call   FWORD PTR [edi+0x3d00fff1]
  40b72d:	(bad)  
  40b72e:	fiadd  DWORD PTR [ebx-0x335b9a77]
  40b734:	inc    esi
  40b735:	fild   WORD PTR [eax]
  40b737:	add    al,dl
  40b739:	mov    ds:0x7200ff,al
  40b73e:	mov    ah,cl
  40b740:	or     edi,0xc
  40b743:	mov    DWORD PTR [ecx+0x62],ebx
  40b746:	inc    DWORD PTR [eax]
  40b748:	test   BYTE PTR [edx-0x1],ah
  40b74b:	call   DWORD PTR [ebp-0x34]
  40b74e:	ss add ah,cl
  40b751:	repnz in eax,0x0
  40b754:	(bad)  
  40b755:	mov    WORD PTR [eax],es
  40b757:	add    dh,ah
  40b759:	arpl   WORD PTR [eax],ax
  40b75b:	(bad)  
  40b75c:	jmp    0x9a31:0xff69cc
  40b763:	jmp    DWORD PTR [edi-0x7e]
  40b766:	add    bh,bh
  40b768:	xchg   esp,eax
  40b769:	sti    
  40b76a:	int3   
  40b76b:	add    BYTE PTR [eax],dl
  40b76d:	int3   
  40b76e:	and    eax,0xac5500ff
  40b773:	sub    DWORD PTR [edi-0x77],0x0
  40b777:	mov    DWORD PTR [ecx-0xd],ebx
  40b77a:	(bad)  
  40b77b:	jmp    DWORD PTR [edi-0x1]
  40b77e:	inc    esp
  40b77f:	(bad)  
  40b780:	jmp    FWORD PTR [ebp-0x257100fb]
  40b786:	add    DWORD PTR [ebx+0xffec2e],0xfffffffa
  40b78d:	adc    DWORD PTR [esi-0x1],0xffffff83
  40b791:	sbb    edi,esi
  40b793:	add    ebp,0xb
  40b796:	inc    DWORD PTR [eax]
  40b798:	cwde   
  40b799:	cmp    BYTE PTR [ecx-0x3a008600],cl
  40b79f:	dec    DWORD PTR [ecx-0x76ff0450]
  40b7a5:	sar    edi,cl
  40b7a7:	(bad)  
  40b7a8:	call   ebp
  40b7aa:	(bad)  
  40b7ab:	inc    DWORD PTR [eax-0x1]
  40b7ae:	adc    eax,0x6e568989
  40b7b3:	call   edx
  40b7b5:	aaa    
  40b7b6:	inc    DWORD PTR [ebx-0xaacd]
  40b7bc:	call   0x3929:0xffbaff
  40b7c3:	call   ebx
  40b7c5:	jne    0x40b750
  40b7c7:	add    ah,al
  40b7c9:	push   0xffffff83
  40b7cb:	call   DWORD PTR [ebx+0xff6fff]
  40b7d1:	mov    ah,0x18
  40b7d3:	(bad)  
  40b7d4:	fcomip st,st(5)
  40b7d6:	(bad)  
  40b7d7:	inc    edx
  40b7d9:	push   edx
  40b7da:	add    bh,bh
  40b7dc:	fadd   DWORD PTR [eax]
  40b7de:	dec    edi
  40b7df:	mov    DWORD PTR [ebx-0x1cff8c43],eax
  40b7e5:	adc    al,0x83
  40b7e7:	add    dl,dh
  40b7e9:	fcos   
  40b7eb:	add    BYTE PTR [ecx-0x1],bh
  40b7ee:	in     al,dx
  40b7ef:	inc    DWORD PTR [eax]
  40b7f1:	mov    ds:0xda0e0048,al
  40b7f6:	mov    DWORD PTR [eax],eax
  40b7f8:	jp     0x40b7ef
  40b7fa:	inc    DWORD PTR [eax]
  40b7fc:	sbb    eax,0xccff8dff
  40b801:	lock push 0xd48f89
  40b807:	inc    DWORD PTR [edx-0x1c76ff77]
  40b80d:	(bad)  
  40b80e:	mov    esp,0x7a040083
  40b813:	add    BYTE PTR [eax+0x46ffff07],dh
  40b819:	pop    edi
  40b81a:	add    bh,bh
  40b81c:	aaa    
  40b81d:	push   DWORD PTR [edi+edi*8-0x76017201]
  40b824:	fdiv   QWORD PTR [eax+0xc26ff00]
  40b82a:	(bad)  
  40b82b:	(bad)  
  40b82c:	fld    DWORD PTR [ebx-0x360033a4]
  40b832:	or     edi,edi
  40b834:	imul   esp,DWORD PTR ds:0x78b7cc00,0xffffffcc
  40b83b:	(bad)  
  40b83c:	inc    DWORD PTR [ebx+0x500083c3]
  40b842:	outs   dx,DWORD PTR ds:[esi]
  40b843:	jmp    FWORD PTR [ecx-0xb]
  40b846:	cmp    edi,0x4c
  40b849:	push   es
  40b84a:	(bad)  
  40b84b:	(bad)  
  40b84c:	stc    
  40b84d:	dec    DWORD PTR [edi-0x6595ff34]
  40b853:	dec    ebp
  40b855:	into   
  40b856:	(bad)  
  40b857:	push   DWORD PTR [ebx-0x5a]
  40b85a:	add    ah,cl
  40b85c:	aad    0xff
  40b85e:	sar    edi,cl
  40b860:	add    BYTE PTR [ebx+0x6690000d],cl
  40b866:	cmp    edi,0xffffff82
  40b869:	dec    ebx
  40b86a:	inc    DWORD PTR [ebx-0x330d7cfb]
  40b870:	dec    ebx
  40b872:	add    edi,edi
  40b874:	jmp    0x40b876
  40b876:	add    bh,bh
  40b878:	mov    edx,0xf1000094
  40b87d:	xor    DWORD PTR [edi],0xffffffff
  40b880:	(bad)  
  40b881:	cmp    eax,esp
  40b883:	mov    ecx,eax
  40b885:	add    al,0x0
  40b887:	add    al,bh
  40b889:	rol    BYTE PTR [eax],0xff
  40b88c:	xor    eax,0x83832cff
  40b891:	cmp    BYTE PTR [eax],dh
  40b893:	call   DWORD PTR [edx-0x6500ff75]
  40b899:	mov    al,0x83
  40b89b:	mov    DWORD PTR [esi-0x7c33ad00],esp
  40b8a1:	xor    BYTE PTR [edi+edi*8+0x6],dh
  40b8a5:	loopne 0x40b8a7
  40b8a7:	(bad)  
  40b8a8:	mov    edx,0x9000ffc0
  40b8ad:	mov    DWORD PTR [esi],edi
  40b8af:	(bad)  
  40b8b0:	inc    ecx
  40b8b2:	sbb    eax,0x83e1f4ff
  40b8b7:	call   esi
  40b8b9:	sahf   
  40b8ba:	(bad)  
  40b8bb:	dec    DWORD PTR ds:0x833bff
  40b8c1:	mov    dh,0x70
  40b8c3:	inc    edx
  40b8c5:	jmp    0x40b8c6
  40b8c7:	call   DWORD PTR [edx+0x1fffccde]
  40b8cd:	mov    DWORD PTR [ebp+0x720ccc83],edx
  40b8d3:	(bad)  
  40b8d4:	mov    edi,0xecffff19
  40b8d9:	adc    eax,DWORD PTR [ebx+0x35ff7783]
  40b8df:	add    BYTE PTR [eax],al
  40b8e1:	mov    dh,0xb8
  40b8e3:	inc    edi
  40b8e5:	add    bh,bh
  40b8e7:	add    BYTE PTR [ebx-0x3fff76a6],al
  40b8ed:	push   ebx
  40b8ef:	inc    DWORD PTR [ebx+0x12cc2b3d]
  40b8f5:	push   ebx
  40b8f6:	add    DWORD PTR [eax],0xffffffa9
  40b8f9:	out    dx,al
  40b8fa:	(bad)  
  40b8fb:	call   DWORD PTR [ebp+0xff2f00]
  40b901:	mov    esi,0xedc7ffde
  40b906:	(bad)  
  40b907:	jmp    FWORD PTR ds:0x3ffccd6
  40b90d:	inc    DWORD PTR [edx+0x6673ff00]
  40b913:	dec    DWORD PTR [ebx]
  40b915:	mov    WORD PTR [ebx-0x7c9bb6],ax
  40b91c:	xor    al,BYTE PTR [eax]
  40b91e:	mov    ch,0xff
  40b920:	add    BYTE PTR [edx+edi*1],bl
  40b923:	add    BYTE PTR [ebp+edx*1-0x1],bh
  40b927:	add    ch,bl
  40b929:	push   esi
  40b92a:	add    bh,bh
  40b92c:	dec    esi
  40b92d:	cmp    DWORD PTR [ecx+0x0],0xffffff89
  40b931:	sub    DWORD PTR [ebp-0x1d657d],0x3e4500
  40b93b:	sub    DWORD PTR [ebp-0xff9201],0xa
  40b942:	pop    esp
  40b943:	jmp    DWORD PTR [ecx]
  40b945:	or     eax,0xf316ffcc
  40b94a:	add    BYTE PTR [eax],al
  40b94c:	out    dx,eax
  40b94d:	push   DWORD PTR [esi+0x345cff00]
  40b953:	cmp    DWORD PTR [esi+0x54ffff26],0x39
  40b95a:	add    BYTE PTR [eax],al
  40b95c:	mov    cl,0x89
  40b95e:	sti    
  40b95f:	add    bh,bh
  40b961:	jno    0x40b9ae
  40b963:	mov    ecx,edx
  40b965:	jbe    0x40b967
  40b967:	call   FWORD PTR [ebx+0x5d]
  40b96a:	(bad)  
  40b96b:	dec    esp
  40b96d:	or     eax,0xffffff89
  40b970:	add    bl,bl
  40b972:	lea    ecx,[ecx-0x7cf513]
  40b978:	aaa    
  40b979:	add    BYTE PTR [eax],0xff
  40b97c:	cmp    cl,BYTE PTR [ecx+0x17ff837d]
  40b982:	mov    ds:0xebb400,al
  40b987:	int3   
  40b988:	ins    DWORD PTR es:[edi],dx
  40b989:	jne    0x40b98a
  40b98b:	jmp    DWORD PTR [edi+edi*8+0x21]
  40b98f:	add    BYTE PTR [eax],al
  40b991:	xchg   BYTE PTR [ebp-0xe2da01],bl
  40b997:	add    BYTE PTR [ebp+0x5aff8359],bh
  40b99d:	push   DWORD PTR [esi-0x4411007d]
  40b9a3:	(bad)  
  40b9a4:	jnp    0x40b960
  40b9a6:	dec    DWORD PTR [ecx-0x7600bf17]
  40b9ac:	lahf   
  40b9ad:	cmp    DWORD PTR [ecx],0xffffffff
  40b9b0:	add    BYTE PTR [edx-0x610cff58],bl
  40b9b6:	add    BYTE PTR [eax],al
  40b9b8:	push   0x30ffffdc
  40b9bd:	dec    esi
  40b9bf:	(bad)  
  40b9c0:	jmp    FWORD PTR [ebp+eiz*8-0x77]
  40b9c4:	inc    ebx
  40b9c5:	and    eax,0x19bfff89
  40b9ca:	add    ah,cl
  40b9cc:	sub    DWORD PTR [ebx+0x4ffcc9e],eax
  40b9d2:	push   cs
  40b9d3:	push   eax
  40b9d5:	fld    QWORD PTR [eax]
  40b9d7:	add    BYTE PTR [ebx],bl
  40b9d9:	pop    edi
  40b9da:	dec    DWORD PTR [ecx-0x7c070061]
  40b9e0:	jmp    FWORD PTR [edx]
  40b9e2:	stos   BYTE PTR es:[edi],al
  40b9e3:	dec    DWORD PTR [edi+0x68ffffdb]
  40b9e9:	out    0x0,al
  40b9eb:	add    BYTE PTR [edi+edi*8+0x2b],bl
  40b9ef:	cmp    edi,0xffffffe8
  40b9f2:	mov    dl,0x83
  40b9f4:	mov    eax,0xb6ccff11
  40b9f9:	in     eax,dx
  40b9fa:	(bad)  
  40b9fb:	inc    ecx
  40b9fd:	add    dh,bl
  40b9ff:	inc    DWORD PTR [eax]
  40ba01:	stos   DWORD PTR es:[edi],eax
  40ba02:	xor    edi,edi
  40ba04:	test   al,0x16
  40ba06:	inc    DWORD PTR [eax]
  40ba08:	push   ebx
  40ba09:	push   ecx
  40ba0a:	mov    esp,ecx
  40ba0c:	add    bh,bh
  40ba0e:	std    
  40ba0f:	add    BYTE PTR [eax],al
  40ba11:	and    BYTE PTR [esi-0x76205e00],0x89
  40ba18:	push   ebx
  40ba19:	fisttp DWORD PTR [ecx-0x7476fb01]
  40ba1f:	add    DWORD PTR [ebx-0x4c008c1c],0x7
  40ba26:	int3   
  40ba27:	add    dl,al
  40ba29:	cmp    al,BYTE PTR [eax]
  40ba2b:	(bad)  
  40ba2c:	jle    0x40b9fa
  40ba2e:	xchg   ecx,eax
  40ba2f:	mov    DWORD PTR [eax],eax
  40ba31:	shl    BYTE PTR [edx],cl
  40ba33:	adc    ecx,0xfffffff1
  40ba36:	add    ah,cl
  40ba38:	sub    DWORD PTR [ecx],edx
  40ba3a:	inc    DWORD PTR [ebx+0xb3007a]
  40ba40:	jmp    DWORD PTR [eax+0x131bff6d]
  40ba46:	dec    esp
  40ba48:	xchg   edi,eax
  40ba49:	mov    ch,0x0
  40ba4b:	push   DWORD PTR ds:0x893900
  40ba51:	inc    ebx
  40ba52:	stc    
  40ba53:	call   FWORD PTR [ebx]
  40ba55:	sub    eax,0xcbeb83ff
  40ba5a:	add    BYTE PTR [ebx-0xa77c7d],al
  40ba60:	add    bh,bl
  40ba62:	loopne 0x40ba30
  40ba64:	dec    eax
  40ba65:	arpl   di,di
  40ba67:	call   DWORD PTR [ebx-0x30]
  40ba6a:	add    ah,cl
  40ba6c:	jb     0x40ba6e
  40ba6e:	cld    
  40ba6f:	mov    edi,edi
  40ba71:	loope  0x40baa7
  40ba73:	inc    DWORD PTR [edx-0x5f]
  40ba76:	(bad)  
  40ba77:	jmp    FWORD PTR [ebp+0x5e]
  40ba7a:	inc    DWORD PTR [eax]
  40ba7c:	gs add cl,bl
  40ba7f:	add    bh,bh
  40ba81:	adc    al,BYTE PTR [esi]
  40ba83:	add    BYTE PTR [edi+esi*2],bh
  40ba86:	(bad)  
  40ba87:	jmp    DWORD PTR [eax-0x44]
  40ba8a:	add    ah,cl
  40ba8c:	test   edi,edi
  40ba8e:	icebp  
  40ba8f:	(bad)  
  40ba90:	jmp    DWORD PTR [ebx-0x509476b7]
  40ba96:	inc    DWORD PTR [ebx-0x33ff6b81]
  40ba9c:	sbb    eax,0xffffdbff
  40baa1:	lea    eax,fs:[ebx-0x7c8c45]
  40baa8:	mov    esi,0x9f00fffa
  40baad:	jmp    esi
  40baaf:	mov    edi,edi
  40bab1:	sti    
  40bab2:	sbb    BYTE PTR [eax],al
  40bab4:	adc    dh,BYTE PTR [eax]
  40bab6:	add    bh,bh
  40bab8:	dec    ecx
  40bab9:	add    DWORD PTR [ecx+0x76ff52ff],ecx
  40babf:	mov    edi,edi
  40bac1:	pop    esp
  40bac2:	loope  0x40ba90
  40bac4:	ins    DWORD PTR es:[edi],dx
  40bac5:	push   0x0
  40bac7:	dec    DWORD PTR [edx+0x72ff008e]
  40bacd:	add    BYTE PTR [edi+0x0],dh
  40bad0:	inc    DWORD PTR [ebx-0x77207cdb]
  40bad6:	add    bh,bh
  40bad8:	mov    al,ds:0x6aff89fb
  40badd:	call   DWORD PTR [edx]
  40badf:	inc    DWORD PTR [ebx-0x1e0000ff]
  40bae5:	je     0x40bae6
  40bae7:	add    BYTE PTR [esi+edi*2],cl
  40baea:	int3   
  40baeb:	push   DWORD PTR [edi-0x77]
  40baee:	sar    bh,1
  40baf0:	dec    DWORD PTR [ecx+0xc]
  40baf3:	jmp    DWORD PTR [edi+0x73]
  40baf6:	add    bh,bh
  40baf8:	mov    eax,0xbc8900cf
  40bafd:	call   ecx
  40baff:	add    BYTE PTR [eax],al
  40bb01:	add    al,dh
  40bb03:	(bad)  
  40bb04:	sti    
  40bb05:	jge    0x40bb06
  40bb07:	adc    DWORD PTR [ebx-0x43],0xffffffcc
  40bb0b:	int3   
  40bb0c:	int3   
  40bb0d:	(bad)  
  40bb0e:	(bad)  
  40bb10:	dec    ecx
  40bb12:	cmp    al,0xcc
  40bb14:	jle    0x40bb26
  40bb16:	(bad)  
  40bb17:	(bad)  
  40bb18:	cmp    al,0xbe
  40bb1a:	add    bh,bh
  40bb1c:	adc    eax,DWORD PTR [eax]
  40bb1e:	dec    esi
  40bb1f:	inc    DWORD PTR [ebx-0x607cbdbb]
  40bb25:	int3   
  40bb26:	int3   
  40bb27:	dec    DWORD PTR [ebx]
  40bb29:	loop   0x40baf7
  40bb2b:	jmp    esp
  40bb2d:	dec    ecx
  40bb2f:	cmp    edi,0x48
  40bb32:	sub    eax,0xcc7f2489
  40bb37:	call   esi
  40bb39:	push   esi
  40bb3a:	mov    DWORD PTR [ecx-0xfa7639],ecx
  40bb40:	push   ebx
  40bb42:	jae    0x40bb43
  40bb44:	out    0x66,al
  40bb46:	inc    DWORD PTR [eax]
  40bb48:	xchg   ebp,eax
  40bb49:	cmp    eax,DWORD PTR [ebx-0x1533fa01]
  40bb4f:	inc    DWORD PTR [eax]
  40bb51:	test   eax,0xe508004f
  40bb56:	cmp    edi,0x56
  40bb59:	inc    DWORD PTR fs:[eax]
  40bb5c:	stos   BYTE PTR es:[edi],al
  40bb5d:	add    dh,ah
  40bb5f:	inc    DWORD PTR [ebx-0x58ff680e]
  40bb65:	(bad)  
  40bb66:	(bad)  
  40bb67:	call   DWORD PTR [esi+0x5000ff8a]
  40bb6d:	push   DWORD PTR [edx]
  40bb6f:	add    BYTE PTR [eax],al
  40bb71:	rcr    BYTE PTR [eax+eax*1],1
  40bb74:	cmp    dl,bl
  40bb76:	add    BYTE PTR [eax],al
  40bb78:	dec    edi
  40bb79:	xlat   BYTE PTR ds:[ebx]
  40bb7a:	add    BYTE PTR [ebx-0xbb7c97],al
  40bb80:	add    BYTE PTR [edi-0x1b],bh
  40bb83:	add    BYTE PTR [edx-0x75],bl
  40bb86:	add    bh,bh
  40bb88:	mov    eax,eax
  40bb8a:	mov    esp,ecx
  40bb8c:	idiv   bh
  40bb8e:	stos   DWORD PTR es:[edi],eax
  40bb8f:	cmp    edi,0xffffff9d
  40bb92:	mov    edi,edi
  40bb94:	push   0x6f83ffe7
  40bb99:	(bad)  
  40bb9a:	dec    DWORD PTR [ecx+0x6600b6]
  40bba0:	inc    DWORD PTR [ecx]
  40bba2:	mov    eax,ds:0xff4bf4ff
  40bba7:	add    BYTE PTR [ecx+0x3],dl
  40bbaa:	cmp    edi,0xffffffb0
  40bbad:	jmp    esp
  40bbaf:	int3   
  40bbb0:	call   DWORD PTR ds:0xcdb8376
  40bbb6:	dec    esp
  40bbb8:	inc    ebp
  40bbb9:	sar    edi,1
  40bbbb:	(bad)  
  40bbbc:	call   0xca48c0
  40bbc1:	fwait
  40bbc2:	xor    al,0x0
  40bbc4:	jp     0x40bbc4
  40bbc6:	add    ah,cl
  40bbc8:	adc    DWORD PTR [edi],ecx
  40bbca:	add    bh,bh
  40bbcc:	pop    esp
  40bbcd:	inc    DWORD PTR [eax+0x0]
  40bbd0:	add    BYTE PTR [ecx+0x517d83d8],cl
  40bbd6:	(bad)  
  40bbd7:	jmp    FWORD PTR [esi]
  40bbd9:	dec    ecx
  40bbda:	cmp    edi,0xffffff90
  40bbdd:	jmp    DWORD PTR [edi]
  40bbdf:	inc    DWORD PTR [ebx-0x19ffbc38]
  40bbe5:	sbb    al,0xff
  40bbe7:	mov    DWORD PTR [ebx],edx
  40bbe9:	clc    
  40bbea:	add    DWORD PTR [eax],0x45
  40bbed:	call   ebx
  40bbef:	add    DWORD PTR [eax],0x33
  40bbf2:	ret    
  40bbf3:	add    cl,bl
  40bbf5:	mov    dl,0xff
  40bbf7:	adc    DWORD PTR [eax+esi*4+0x17ffff],0x6c
  40bbff:	inc    DWORD PTR [eax]
  40bc01:	shr    ecx,cl
  40bc03:	call   FWORD PTR ds:0xbfff8343
  40bc09:	(bad)  
  40bc0a:	inc    DWORD PTR [eax]
  40bc0c:	scas   eax,DWORD PTR es:[edi]
  40bc0d:	int3   
  40bc0e:	and    al,0xff
  40bc10:	(bad)  
  40bc11:	cld    
  40bc12:	sbb    al,BYTE PTR [eax]
  40bc14:	daa    
  40bc15:	pop    eax
  40bc16:	add    bh,bh
  40bc18:	call   0x7ff:0xa800ff78
  40bc1f:	(bad)  
  40bc20:	call   esp
  40bc22:	std    
  40bc23:	jmp    FWORD PTR [esi+0x4ff0058]
  40bc29:	nop
  40bc2a:	(bad)  
  40bc2b:	call   FWORD PTR [edx-0xf501]
  40bc31:	rol    DWORD PTR [ecx+ecx*4-0x3317fa],0x9a
  40bc39:	xchg   esp,eax
  40bc3a:	int3   
  40bc3b:	push   DWORD PTR [esi-0x1]
  40bc3e:	enter  0xcc83,0xd3
  40bc42:	inc    ebp
  40bc43:	dec    DWORD PTR [esi-0x54]
  40bc46:	add    DWORD PTR [ebx-0x3345e5],0xffffffd2
  40bc4d:	mov    DWORD PTR [ecx+ecx*4-0x7cb84901],ebp
  40bc54:	mul    BYTE PTR [eax+eax*1-0x1]
  40bc58:	and    eax,0x87ff8377
  40bc5d:	add    BYTE PTR [edi-0x34],dl
  40bc60:	int3   
  40bc61:	fwait
  40bc62:	mov    ds:0xff630fff,eax
  40bc67:	(bad)  
  40bc68:	jns    0x40bcca
  40bc6a:	add    bh,bh
  40bc6c:	pusha  
  40bc6d:	add    BYTE PTR [eax+0x0],bl
  40bc70:	int3   
  40bc71:	mov    edx,0xb76cffa9
  40bc76:	add    BYTE PTR [eax],al
  40bc78:	js     0x40bc3a
  40bc7a:	int3   
  40bc7b:	push   esi
  40bc7d:	sbb    DWORD PTR [ebp-0x1],0x0
  40bc81:	cli    
  40bc82:	fwait
  40bc83:	(bad)  
  40bc84:	jl     0x40bce8
  40bc86:	add    BYTE PTR [eax],al
  40bc88:	mov    ds:0x33ffffbd,al
  40bc8d:	call   ebp
  40bc8f:	(bad)  
  40bc90:	dec    DWORD PTR [edx-0x4b]
  40bc93:	int3   
  40bc94:	stos   BYTE PTR es:[edi],al
  40bc95:	or     eax,0x6d3d00ff
  40bc9a:	(bad)  
  40bc9b:	jmp    DWORD PTR [ebx+0x0]
  40bc9e:	nop
  40bc9f:	(bad)  
  40bca0:	(bad)  
  40bca1:	ds or  bh,bh
  40bca4:	ins    DWORD PTR es:[edi],dx
  40bca5:	cmp    al,0x89
  40bca7:	mov    eax,ecx
  40bca9:	daa    
  40bcaa:	add    BYTE PTR [eax],al
  40bcac:	call   0xff4156b0
  40bcb1:	(bad)  
  40bcb2:	pushf  
  40bcb3:	inc    DWORD PTR [ebx+edi*4+0x0]
  40bcb7:	add    BYTE PTR [esi-0x1f],dh
  40bcba:	add    BYTE PTR [ebx-0xc10004],al
  40bcc0:	dec    edx
  40bcc2:	dec    eax
  40bcc3:	add    BYTE PTR [esi],bh
  40bcc5:	stos   BYTE PTR es:[edi],al
  40bcc6:	add    BYTE PTR [ecx-0x7c7603be],cl
  40bccc:	dec    esi
  40bccd:	mov    DWORD PTR [eax+eax*1-0xb8917d],esp
  40bcd4:	or     DWORD PTR [ebx+0x0],0xffffff89
  40bcd8:	mov    cl,0xd0
  40bcda:	(bad)  
  40bcdb:	jmp    ecx
  40bcdd:	mov    DWORD PTR [esi-0x34],eax
  40bce0:	add    BYTE PTR [edi-0x2b],al
  40bce3:	add    BYTE PTR [ecx],bh
  40bce5:	lahf   
  40bce6:	inc    DWORD PTR [eax]
  40bce8:	das    
  40bce9:	sti    
  40bcea:	inc    DWORD PTR [eax]
  40bcec:	sbb    BYTE PTR [eax],al
  40bcee:	add    BYTE PTR [ebx-0x7c815601],al
  40bcf4:	popf   
  40bcf5:	int3   
  40bcf6:	add    BYTE PTR [eax],al
  40bcf8:	adc    ebx,esp
  40bcfa:	add    bh,bh
  40bcfc:	and    esp,ecx
  40bcfe:	out    0xff,eax
  40bd00:	inc    DWORD PTR [ecx]
  40bd02:	std    
  40bd03:	(bad)  
  40bd04:	fistp  DWORD PTR [ecx-0xb34ff77]
  40bd0a:	add    bh,bh
  40bd0c:	sar    bh,1
  40bd0e:	hlt    
  40bd0f:	add    DWORD PTR [eax],0x47
  40bd12:	add    ah,cl
  40bd14:	imul   ebx,ebp,0xeb5aff83
  40bd1a:	add    bh,bh
  40bd1c:	push   esi
  40bd1d:	dec    DWORD PTR [ebx-0x97aff01]
  40bd23:	inc    DWORD PTR [eax+edx*8-0x1]
  40bd27:	jmp    esi
  40bd29:	pop    es
  40bd2a:	dec    DWORD PTR [ecx+0x13cc6b]
  40bd30:	inc    DWORD PTR [ebx]
  40bd32:	xor    al,BYTE PTR [eax]
  40bd34:	and    ch,BYTE PTR [eax+0xd400089]
  40bd3a:	add    DWORD PTR [eax],0x10
  40bd3d:	add    BYTE PTR [edi],al
  40bd3f:	cmp    edi,0xffffffe6
  40bd42:	mov    ?,edi
  40bd44:	iret   
  40bd45:	jg     0x40bd46
  40bd47:	int3   
  40bd48:	add    eax,0x5cc8302
  40bd4d:	adc    DWORD PTR [edi],0xffffffff
  40bd50:	adc    ebx,0x54
  40bd53:	inc    DWORD PTR [eax]
  40bd55:	inc    WORD PTR [eax]
  40bd58:	fnstenv [ecx]
  40bd5a:	or     esp,0xffffffaf
  40bd5d:	(bad)  
  40bd5e:	jge    0x40bd5f
  40bd60:	add    BYTE PTR [edi-0x60],ah
  40bd63:	dec    DWORD PTR [edx]
  40bd65:	sar    bh,0x89
  40bd68:	dec    ecx
  40bd69:	stc    
  40bd6a:	add    BYTE PTR [eax],al
  40bd6c:	pop    ebp
  40bd6d:	int3   
  40bd6e:	mov    dl,0x83
  40bd70:	int3   
  40bd71:	fdiv   st,st(4)
  40bd73:	call   DWORD PTR [eax+0x68]
  40bd76:	add    BYTE PTR [eax],al
  40bd78:	sbb    ah,BYTE PTR [ebx+0x900083]
  40bd7e:	add    bh,bh
  40bd80:	dec    ebp
  40bd82:	lods   eax,DWORD PTR ds:[esi]
  40bd83:	add    al,bl
  40bd85:	push   es
  40bd86:	(bad)  
  40bd87:	push   DWORD PTR [edi+0x4c]
  40bd8a:	(bad)  
  40bd8b:	inc    DWORD PTR [esi-0x7d]
  40bd8e:	cmp    al,BYTE PTR [eax]
  40bd90:	inc    DWORD PTR [edi+ecx*1]
  40bd93:	(bad)  
  40bd94:	mov    edi,0x5783ffba
  40bd99:	(bad)  
  40bd9b:	call   FWORD PTR [ebx]
  40bd9d:	add    cl,ch
  40bd9f:	dec    DWORD PTR [ecx+0x2cffadff]
  40bda5:	push   cs
  40bda6:	cmp    edi,0xffffff8b
  40bda9:	mov    edi,edi
  40bdab:	add    BYTE PTR [eax-0x4801],ah
  40bdb1:	sbb    ch,bl
  40bdb3:	(bad)  
  40bdb4:	mov    ecx,0x95ffff59
  40bdb9:	jecxz  0x40bdbb
  40bdbb:	add    BYTE PTR [edi-0x7d],ah
  40bdbe:	xchg   ebx,eax
  40bdbf:	dec    esp
  40bdc1:	lock adc eax,0xff75cdcc
  40bdc7:	(bad)  
  40bdc8:	mov    edi,0x69ff83cd
  40bdcd:	(bad)  
  40bdce:	mov    eax,0x9a650000
  40bdd3:	adc    DWORD PTR [edi],0x53
  40bdd6:	add    bh,bh
  40bdd8:	(bad)  
  40bdd9:	jns    0x40bdda
  40bddb:	jmp    DWORD PTR [edi]
  40bddd:	push   DWORD PTR [edx+0x8938383]
  40bde3:	(bad)  
  40bde4:	jmp    0xa0:0xb1ffffb8
  40bdeb:	sbb    ebx,0x0
  40bdee:	and    al,0x89
  40bdf0:	inc    DWORD PTR [ecx]
  40bdf2:	pop    ecx
  40bdf3:	add    BYTE PTR [eax+0x57],bh
  40bdf6:	inc    DWORD PTR [ebx-0x767c14d0]
  40bdfc:	cmp    al,0x0
  40bdfe:	test   al,0xff
  40be00:	(bad)  
  40be01:	call   0x1f87bd4f
  40be06:	int3   
  40be07:	dec    DWORD PTR ds:0x2e00ffd0
  40be0d:	add    BYTE PTR [esi+0x15e9ff00],bl
  40be13:	(bad)  
  40be14:	in     eax,dx
  40be15:	mov    esi,0x9d8f8300
  40be1a:	inc    DWORD PTR [ebx-0x5533f5]
  40be20:	inc    ebp
  40be22:	mov    al,ds:0xd046ff
  40be27:	and    DWORD PTR [edx+esi*8+0xa4cc00],0x1c
  40be2f:	cmp    edi,0x8
  40be32:	loopne 0x40be34
  40be34:	push   edi
  40be35:	scas   al,BYTE PTR es:[edi]
  40be36:	or     DWORD PTR [ecx-0x3300403a],0x45
  40be3d:	dec    esp
  40be3f:	add    BYTE PTR [eax],al
  40be41:	push   esi
  40be42:	pop    eax
  40be43:	int3   
  40be44:	mov    BYTE PTR [edi],ch
  40be46:	(bad)  
  40be47:	jmp    DWORD PTR [ebp-0x24007ca5]
  40be4d:	add    BYTE PTR [ebp+0x0],bl
  40be50:	mov    DWORD PTR [ecx-0x719c0002],edi
  40be56:	add    ah,cl
  40be58:	addr16 mov edi,0xff750000
  40be5e:	cmc    
  40be5f:	cmp    edi,0xffffff95
  40be62:	(bad)  
  40be63:	dec    esp
  40be65:	jmp    0x89ff:0xeb93ff89
  40be6c:	add    eax,DWORD PTR [eax]
  40be6e:	sbb    al,0xff
  40be70:	inc    DWORD PTR [esp+edi*1+0xe8b8ff]
  40be77:	add    DWORD PTR ds:0xacff890b,0x0
  40be7e:	cmp    bh,bh
  40be80:	add    BYTE PTR [ecx-0x2c],cl
  40be83:	add    BYTE PTR [edi+ebx*4],dh
  40be86:	add    BYTE PTR [ebx-0xffa1c3],al
  40be8c:	or     eax,DWORD PTR [eax]
  40be8e:	sub    bh,bh
  40be90:	add    BYTE PTR [ecx+0x2946ffa4],bh
  40be96:	inc    DWORD PTR [ebx+0x8970e4]
  40be9c:	leave  
  40be9d:	sub    DWORD PTR ds:0x505cccff,0x0
  40bea4:	cmp    eax,0x5689ff8a
  40bea9:	pushf  
  40beaa:	add    bh,bh
  40beac:	jne    0x40bead
  40beae:	loopne 0x40beaf
  40beb0:	(bad)  
  40beb1:	mov    ebp,0xb53bfff8
  40beb6:	add    BYTE PTR [eax],al
  40beb8:	or     BYTE PTR ds:0x83aeff83,bl
  40bebe:	jle    0x40bec0
  40bec0:	call   FWORD PTR [ecx]
  40bec2:	int    0x0
  40bec4:	ja     0x40be5b
  40bec6:	(bad)  
  40bec7:	inc    DWORD PTR [edx+ebp*4]
  40beca:	inc    DWORD PTR [eax]
  40becc:	sub    ecx,esp
  40bece:	or     esp,0xff6d84ff
  40bed4:	sub    eax,0xa5830050
  40bed9:	mov    cl,0x83
  40bedb:	sub    DWORD PTR [esi-0x7d],0x7a
  40bedf:	(bad)  
  40bee0:	(bad)  
  40bee1:	js     0x40bf39
  40bee3:	adc    DWORD PTR [edi-0xe],0x0
  40bee7:	sbb    DWORD PTR [ebp+0x61],0x0
  40beeb:	dec    DWORD PTR [ebx+0xff6a83]
  40bef1:	push   edx
  40bef2:	imul   edi,edi,0x51
  40bef5:	inc    edi
  40bef6:	add    bh,bh
  40bef8:	mov    bh,0xdb
  40befa:	add    bh,bh
  40befc:	nop
  40befd:	add    BYTE PTR [ecx+ecx*4],al
  40bf00:	inc    DWORD PTR [edi-0xf017c6b]
  40bf06:	(bad)  
  40bf07:	push   DWORD PTR [ecx+0x4400ff17]
  40bf0d:	push   edi
  40bf0f:	mov    DWORD PTR [eax],eax
  40bf11:	pslld  mm1,QWORD PTR [ecx+0xc4c8]
  40bf18:	lods   al,BYTE PTR ds:[esi]
  40bf19:	fdiv   st(7),st
  40bf1b:	add    bh,ch
  40bf1d:	call   ebx
  40bf1f:	add    bh,bh
  40bf21:	les    edx,FWORD PTR [ebx+0x6dfaff]
  40bf27:	add    BYTE PTR [ebx+ebp*4],ah
  40bf2a:	add    ah,cl
  40bf2c:	xor    bh,bh
  40bf2e:	out    0x83,al
  40bf30:	call   DWORD PTR [ebx-0x2]
  40bf33:	add    BYTE PTR [ebp+0x32fffff4],bh
  40bf39:	out    0xff,eax
  40bf3b:	add    BYTE PTR [edx-0x1],bl
  40bf3e:	dec    esp
  40bf3f:	add    bh,bh
  40bf41:	fsubr  QWORD PTR [ebx-0xd97401]
  40bf47:	(bad)  
  40bf48:	mov    edi,0xdc00ff6e
  40bf4d:	add    BYTE PTR [ecx+0x584583cc],dl
  40bf53:	inc    eax
  40bf55:	mov    dl,0xcc
  40bf57:	call   DWORD PTR [esi*4-0xf4ff01]
  40bf5e:	add    BYTE PTR [eax],0xff
  40bf61:	std    
  40bf62:	push   esi
  40bf63:	add    BYTE PTR [eax-0x2833009a],al
  40bf69:	std    
  40bf6a:	inc    DWORD PTR [eax]
  40bf6c:	mov    BYTE PTR [ebx+0x5000074],0xc9
  40bf73:	call   FWORD PTR [ebp+0x47]
  40bf76:	(bad)  
  40bf77:	inc    ebp
  40bf79:	jae    0x40bf7a
  40bf7b:	xor    DWORD PTR [esi],0xffffffff
  40bf7e:	retf   
  40bf7f:	int3   
  40bf80:	add    BYTE PTR [ebp+0x2a00008e],cl
  40bf86:	(bad)  
  40bf87:	call   FWORD PTR [edx+0x3600ff03]
  40bf8d:	cmp    DWORD PTR [eax-0x50a00001],0xffffffff
  40bf94:	ds out 0xff,eax
  40bf97:	mov    DWORD PTR [ebx],ebp
  40bf99:	hlt    
  40bf9a:	add    BYTE PTR [ecx-0xae00cd],cl
  40bfa0:	int3   
  40bfa1:	addr16 and edi,edi
  40bfa4:	mov    dh,0x3f
  40bfa6:	inc    DWORD PTR [ebx+0x8aa9]
  40bfac:	pushf  
  40bfad:	inc    DWORD PTR [edx-0x1]
  40bfb0:	add    ch,ah
  40bfb2:	mov    ebp,0x83513fff
  40bfb7:	inc    DWORD PTR [esi+0x0]
  40bfba:	(bad)  
  40bfbb:	(bad)  
  40bfbc:	out    dx,eax
  40bfbd:	add    ah,ah
  40bfbf:	inc    DWORD PTR [eax]
  40bfc1:	jmp    0x69ad8cb3
  40bfc6:	inc    DWORD PTR [ebx-0xfd6c]
  40bfcc:	repnz int3 
  40bfce:	mov    cl,0x0
  40bfd0:	add    BYTE PTR [esi+0x53],dh
  40bfd3:	add    BYTE PTR [ebx+edx*2],ah
  40bfd6:	add    DWORD PTR [eax],0xffffff9e
  40bfd9:	mov    ds:0xa20000,eax
  40bfde:	stc    
  40bfdf:	(bad)  
  40bfe0:	inc    esi
  40bfe2:	(bad)  
  40bfe4:	pop    ebp
  40bfe5:	iret   
  40bfe6:	(bad)  
  40bfe7:	push   DWORD PTR [edx]
  40bfe9:	call   0xff93:0xff62cc00
  40bff0:	dec    ebp
  40bff2:	out    dx,al
  40bff3:	and    DWORD PTR [edx-0x29330051],0xfffffff8
  40bffa:	mov    DWORD PTR [eax],eax
  40bffc:	cmc    
  40bffd:	cmp    esp,0xffffffcc
  40c000:	(bad)  
  40c001:	mov    ebx,0xa4f58328
  40c006:	(bad)  
  40c007:	push   DWORD PTR [edx]
  40c009:	mov    ds:0xff700089,eax
  40c00e:	loop   0x40c010
  40c010:	add    cl,bl
  40c012:	imul   ecx,esp,0x835ab4
  40c018:	inc    ebp
  40c019:	outs   dx,BYTE PTR ds:[esi]
  40c01a:	(bad)  
  40c01b:	push   esi
  40c01d:	inc    DWORD PTR [edx+0x0]
  40c020:	add    cl,bl
  40c022:	sti    
  40c023:	sbb    DWORD PTR [ebp-0x1c],0xffffffcc
  40c027:	add    al,bh
  40c029:	mov    WORD PTR [ecx+0x74ff7f00],cs
  40c02f:	add    BYTE PTR [eax],al
  40c031:	inc    edx
  40c032:	adc    eax,0xffb29fff
  40c037:	add    BYTE PTR [ebp-0x50],bl
  40c03a:	add    bh,bh
  40c03c:	jne    0x40c03e
  40c03e:	stos   DWORD PTR es:[edi],eax
  40c03f:	add    BYTE PTR [ecx-0x197c5d2c],cl
  40c045:	push   0x0
  40c047:	(bad)  
  40c048:	sti    
  40c049:	xlat   BYTE PTR ds:[ebx]
  40c04a:	add    bh,bh
  40c04c:	dec    esi
  40c04d:	jmp    DWORD PTR [ebx]
  40c04f:	add    BYTE PTR [eax],al
  40c051:	mov    esp,0x498e00f9
  40c056:	inc    DWORD PTR [ebx-0x761c89]
  40c05c:	jmp    0x8291:0x83ff57ff
  40c063:	add    DWORD PTR [edx],0xffffffc2
  40c066:	(bad)  
  40c067:	push   edi
  40c069:	mov    BYTE PTR [eax],al
  40c06b:	inc    DWORD PTR ds:0xff68ff
  40c071:	std    
  40c072:	ud0    ebp,DWORD PTR [ebx-0x6f7c0013]
  40c079:	pop    ss
  40c07a:	add    DWORD PTR [ebx-0x3ff5d],0x0
  40c081:	das    
  40c082:	nop
  40c083:	inc    DWORD PTR [esp+edi*1-0x7f430100]
  40c08a:	(bad)  
  40c08b:	inc    DWORD PTR [ebp+0x8934ff]
  40c091:	add    ah,BYTE PTR [edi]
  40c093:	add    BYTE PTR [ecx+0x2f],dh
  40c096:	add    bh,bh
  40c098:	imul   ebp,DWORD PTR [eax+eax*1],0x380055ff
  40c09f:	inc    DWORD PTR [eax]
  40c0a1:	inc    esi
  40c0a2:	pushf  
  40c0a3:	dec    DWORD PTR [ecx+eiz*2+0x0]
  40c0a7:	jmp    edi
  40c0a9:	fimul  WORD PTR [ecx+0xd894500]
  40c0af:	int3   
  40c0b0:	(bad)  
  40c0b1:	jp     0x40c0bb
  40c0b3:	(bad)  
  40c0b4:	fstp   QWORD PTR [ebx-0x1]
  40c0b7:	call   DWORD PTR [ebx]
  40c0b9:	imul   eax,DWORD PTR [eax],0xffffffff
  40c0bc:	inc    edi
  40c0bd:	(bad)  
  40c0be:	mov    ebx,0x8f9d00ff
  40c0c3:	call   DWORD PTR ds:0x52ffff0a
  40c0c9:	mov    ds:0xb20000,al
  40c0ce:	push   eax
  40c0cf:	cmp    edi,0xffffffb8
  40c0d2:	inc    edi
  40c0d3:	add    BYTE PTR [eax-0x4d00006f],dh
  40c0d9:	arpl   di,di
  40c0db:	(bad)  
  40c0dc:	fdivr  st,st(7)
  40c0de:	ins    BYTE PTR es:[edi],dx
  40c0df:	mov    DWORD PTR [eax],eax
  40c0e1:	add    edx,edi
  40c0e3:	call   ebp
  40c0e5:	xchg   edx,eax
  40c0e6:	(bad)  
  40c0e7:	dec    DWORD PTR [edi]
  40c0e9:	sub    al,0xff
  40c0eb:	inc    DWORD PTR [ecx]
  40c0ed:	call   DWORD PTR [esi]
  40c0ef:	(bad)  
  40c0f0:	call   FWORD PTR [esi+0x84cff64]
  40c0f6:	int3   
  40c0f7:	(bad)  
  40c0f8:	jmp    0xfb40c1e2
  40c0fd:	mov    DWORD PTR [edi+edi*8-0xf70b34],esp
  40c104:	xlat   BYTE PTR ds:[ebx]
  40c105:	fs (bad) 
  40c107:	(bad)  
  40c108:	out    dx,al
  40c109:	cmp    eax,0x5eff83
  40c10e:	mov    al,ds:0xda1dff00
  40c113:	add    BYTE PTR [ecx+0x19000096],ah
  40c119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c11a:	(bad)  
  40c11b:	push   ecx
  40c11d:	sbb    DWORD PTR [eax-0x1],0xffffff83
  40c121:	data16 das 
  40c123:	add    BYTE PTR [edx+0x46ffcc4f],bh
  40c129:	jecxz  0x40c12a
  40c12b:	(bad)  
  40c12c:	cmp    bh,bh
  40c12e:	push   ecx
  40c12f:	inc    DWORD PTR [ebx+0x63ff2874]
  40c135:	(bad)  
  40c137:	push   DWORD PTR [ecx]
  40c139:	push   esi
  40c13a:	(bad)  
  40c13b:	(bad)  
  40c13c:	fld    QWORD PTR [eax]
  40c13e:	pop    esi
  40c13f:	add    BYTE PTR [eax],al
  40c141:	push   0xe81ff62
  40c146:	mov    edi,edi
  40c148:	mov    edx,0x83ff00b3
  40c14d:	add    BYTE PTR [edx-0x2d2dff01],bl
  40c153:	add    BYTE PTR [eax+edi*2],bl
  40c156:	int3   
  40c157:	add    BYTE PTR [eax-0x68],bh
  40c15a:	add    BYTE PTR [ebx-0xd3000a],al
  40c160:	add    BYTE PTR [ecx+0x2e],bl
  40c163:	push   DWORD PTR [edx-0x44]
  40c166:	add    bh,bh
  40c168:	inc    ebx
  40c169:	pop    ebx
  40c16a:	add    bh,bh
  40c16c:	xchg   ebx,eax
  40c16d:	mov    DWORD PTR [ecx+0x0],edi
  40c170:	add    BYTE PTR [ebx+0x3d9bff58],dh
  40c176:	cmp    edi,0xffffffe8
  40c179:	in     al,dx
  40c17a:	(bad)  
  40c17b:	inc    DWORD PTR [esi-0x332500]
  40c181:	ffreep st(7)
  40c183:	add    BYTE PTR [eax-0x66],ch
  40c186:	(bad)  
  40c187:	push   edx
  40c189:	cmp    BYTE PTR [eax],al
  40c18b:	inc    DWORD PTR [esi]
  40c18d:	push   edi
  40c18f:	mov    edi,edi
  40c191:	sub    BYTE PTR [eax],0xff
  40c194:	lock push es
  40c196:	mov    edi,edi
  40c198:	out    dx,eax
  40c199:	sbb    eax,0xd5ff00
  40c19e:	pop    ss
  40c19f:	inc    DWORD PTR [eax]
  40c1a1:	or     DWORD PTR [eax],ebp
  40c1a3:	add    dl,bh
  40c1a5:	pop    ebx
  40c1a6:	mov    DWORD PTR [eax],eax
  40c1a8:	rcl    DWORD PTR [edi],cl
  40c1aa:	mov    esp,ecx
  40c1ac:	dec    esi
  40c1ad:	jmp    edi
  40c1af:	inc    DWORD PTR [eax]
  40c1b1:	dec    edi
  40c1b2:	sbb    ecx,esp
  40c1b4:	add    dh,BYTE PTR [ecx]
  40c1b6:	inc    DWORD PTR [ebx+0x8300ff]
  40c1bc:	add    BYTE PTR [ebx-0x3639337d],al
  40c1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1c3:	add    DWORD PTR [ebx+0x4889ff45],0xffffffce
  40c1ca:	pop    edi
  40c1cb:	add    DWORD PTR [eax],0x46
  40c1ce:	add    DWORD PTR [eax],0xffffffe3
  40c1d1:	addr16 cmp edi,edi
  40c1d4:	add    BYTE PTR [ecx],bh
  40c1d6:	add    DWORD PTR [eax],0x44
  40c1d9:	mov    dl,0xd7
  40c1db:	add    ah,cl
  40c1dd:	pop    edi
  40c1de:	add    BYTE PTR [eax],al
  40c1e0:	xchg   DWORD PTR [edx],esp
  40c1e2:	enter  0x0,0xef
  40c1e6:	add    BYTE PTR [eax],al
  40c1e8:	mov    DWORD PTR [eax],esp
  40c1ea:	pusha  
  40c1eb:	int3   
  40c1ec:	int3   
  40c1ed:	xor    bh,bh
  40c1ef:	dec    esi
  40c1f1:	fmul   st(2),st
  40c1f3:	add    BYTE PTR [ebx-0x5b3300c1],al
  40c1f9:	shl    dh,1
  40c1fb:	(bad)  
  40c1fc:	call   DWORD PTR [edi+0x175600ff]
  40c202:	cmp    edi,0x0
  40c205:	pop    eax
  40c206:	add    bh,bh
  40c208:	fisub  WORD PTR [ecx+0x5383ff81]
  40c20e:	inc    DWORD PTR [eax]
  40c210:	retf   
  40c211:	pop    ecx
  40c212:	das    
  40c213:	add    DWORD PTR [eax],0x53
  40c216:	dec    esp
  40c218:	cli    
  40c219:	js     0x40c234
  40c21b:	mov    DWORD PTR [ecx+0x5a830008],ecx
  40c221:	scas   al,BYTE PTR es:[edi]
  40c222:	inc    eax
  40c223:	add    DWORD PTR [eax],0xffffff81
  40c226:	dec    esp
  40c228:	or     DWORD PTR [esi-0x3eff76cf],esp
  40c22e:	add    BYTE PTR [eax],al
  40c230:	cmp    esi,DWORD PTR [ecx]
  40c232:	cmp    edi,0xffffbe89
  40c238:	aam    0xa5
  40c23a:	cmp    eax,0x2000ff
  40c23f:	add    BYTE PTR [esi-0xffa5fb],al
  40c245:	xchg   bh,bh
  40c247:	or     DWORD PTR [ecx-0x335595],0x0
  40c24e:	cmp    edi,0x2c
  40c251:	js     0x40c264
  40c253:	add    ah,cl
  40c255:	push   ebx
  40c256:	add    bh,bh
  40c258:	mov    dh,0xa4
  40c25a:	push   edi
  40c25b:	inc    DWORD PTR [eax]
  40c25d:	out    dx,eax
  40c25e:	int3   
  40c25f:	add    BYTE PTR [esi+eiz*8-0xb],cl
  40c263:	add    DWORD PTR [eax],0xffffff86
  40c266:	(bad)  
  40c267:	inc    DWORD PTR [ebx+0x837455]
  40c26d:	mov    DWORD PTR [ebx+0xaadc5ff],0xff7b0083
  40c277:	(bad)  
  40c278:	call   0x140b874
  40c27d:	test   DWORD PTR [eax],0x998f10ff
  40c283:	add    BYTE PTR [eax],al
  40c285:	repnz add bh,bh
  40c288:	mov    bl,0x28
  40c28a:	push   ss
  40c28b:	(bad)  
  40c28c:	call   DWORD PTR [ebx]
  40c28e:	(bad)  
  40c28f:	(bad)  
  40c290:	out    dx,eax
  40c291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c292:	mov    edx,0xff86ff00
  40c297:	and    DWORD PTR [ecx+0xffda39],0xffffffbd
  40c29e:	dec    esp
  40c2a0:	and    DWORD PTR [esi],ecx
  40c2a2:	daa    
  40c2a3:	add    bh,bh
  40c2a5:	pop    esi
  40c2a6:	add    bh,bh
  40c2a8:	jb     0x40c27f
  40c2aa:	retf   0x89cc
  40c2ad:	adc    eax,0xcad3ff00
  40c2b2:	dec    esp
  40c2b4:	add    BYTE PTR [eax+eax*1+0x79a538ff],ah
  40c2bb:	cmp    edi,0xffffff95
  40c2be:	add    DWORD PTR [eax],0xffffffa1
  40c2c1:	adc    eax,0xb3ffff8f
  40c2c6:	(bad)  
  40c2c7:	jmp    FWORD PTR [ebx+0x6d]
  40c2ca:	lods   al,BYTE PTR ds:[esi]
  40c2cb:	add    DWORD PTR [ebx+0x2fff83e8],0xffffffc4
  40c2d2:	lahf   
  40c2d3:	inc    DWORD PTR [eax]
  40c2d5:	bound  eax,QWORD PTR [eax]
  40c2d7:	call   FWORD PTR [edx]
  40c2d9:	pop    ebp
  40c2da:	stc    
  40c2db:	(bad)  
  40c2dc:	call   FWORD PTR [edi+0x30a5ff00]
  40c2e2:	pop    ecx
  40c2e3:	add    bh,bh
  40c2e5:	pop    ecx
  40c2e6:	add    BYTE PTR [eax],al
  40c2e8:	imul   edx,DWORD PTR [ebp+ebp*1-0x1],0xffffffff
  40c2ed:	(bad)  
  40c2ef:	add    BYTE PTR [esi],ah
  40c2f1:	add    edi,ebx
  40c2f3:	add    bh,bh
  40c2f5:	mov    esp,0x5cc200ff
  40c2fa:	clc    
  40c2fb:	add    bh,bh
  40c2fd:	(bad)  
  40c2fe:	inc    DWORD PTR [ebx-0x7ca8196e]
  40c304:	add    BYTE PTR [ebp+0x6d7fffff],ah
  40c30a:	xchg   DWORD PTR [ebx-0xff1301],eax
  40c310:	fnsave [edi-0x3e00009e]
  40c316:	cmp    edi,0x43
  40c319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c31a:	add    esp,ecx
  40c31c:	add    BYTE PTR [edx+0x3e1bffff],ch
  40c322:	add    BYTE PTR [eax],0x0
  40c325:	mov    esp,0xcae000ff
  40c32a:	mov    dh,0x83
  40c32c:	mov    DWORD PTR [eax-0x7c490034],ebx
  40c332:	dec    ebx
  40c333:	mov    DWORD PTR [eax],eax
  40c335:	nop
  40c336:	(bad)  
  40c337:	dec    ecx
  40c339:	loope  0x40c2d2
  40c33b:	inc    DWORD PTR [ebx+0x16ffff6b]
  40c341:	aaa    
  40c342:	in     al,dx
  40c343:	inc    DWORD PTR [eax]
  40c345:	hlt    
  40c346:	add    bh,bh
  40c348:	sbb    esp,DWORD PTR [ebp+0x4cfffff6]
  40c34e:	mov    DWORD PTR [eax],eax
  40c350:	inc    ebx
  40c351:	ins    BYTE PTR es:[edi],dx
  40c352:	jae    0x40c353
  40c354:	add    dl,bh
  40c356:	(bad)  
  40c357:	call   FWORD PTR [ecx-0x7c00a116]
  40c35d:	xchg   bh,bh
  40c35f:	add    BYTE PTR [edi+0x37],ch
  40c362:	push   ebx
  40c363:	(bad)  
  40c364:	push   DWORD PTR [eax]
  40c366:	(bad)  
  40c367:	jmp    DWORD PTR [edi+0x29]
  40c36a:	or     edi,edi
  40c36c:	jmp    DWORD PTR [eax+eax*1]
  40c36f:	push   eax
  40c371:	cmp    ecx,edi
  40c373:	int3   
  40c374:	add    cl,dh
  40c376:	int3   
  40c377:	dec    eax
  40c379:	ja     0x40c2fd
  40c37b:	(bad)  
  40c37c:	call   FWORD PTR [ecx]
  40c37e:	add    bh,bh
  40c380:	mov    ebp,0x9687
  40c385:	mov    esi,0xfbb6ff00
  40c38a:	or     al,0x89
  40c38c:	jmp    ebx
  40c38e:	(bad)  
  40c38f:	inc    DWORD PTR [ebp-0x7e]
  40c392:	out    dx,eax
  40c393:	inc    DWORD PTR [ebx+0x1e00834f]
  40c399:	add    eax,0xffffff0c
  40c39e:	inc    DWORD PTR [eax]
  40c3a0:	aad    0xdc
  40c3a2:	lods   al,BYTE PTR ds:[esi]
  40c3a3:	inc    DWORD PTR [eax]
  40c3a5:	outs   dx,DWORD PTR ds:[esi]
  40c3a6:	add    DWORD PTR [ebx-0x7c4429e5],0xffffffcc
  40c3ad:	mov    eax,0xcb85ccff
  40c3b2:	je     0x40c3b3
  40c3b4:	call   DWORD PTR [edi]
  40c3b6:	add    BYTE PTR [eax],al
  40c3b8:	leave  
  40c3b9:	out    0xea,al
  40c3bb:	inc    DWORD PTR [ebx-0x7c760050]
  40c3c1:	xor    ecx,eax
  40c3c3:	mov    DWORD PTR [eax],eax
  40c3c5:	data16 add bh,bh
  40c3c8:	ror    DWORD PTR [ebp-0x6600ff90],1
  40c3ce:	int3   
  40c3cf:	add    dl,cl
  40c3d1:	adc    eax,0xa4830035
  40c3d6:	inc    DWORD PTR [ebx-0xc5e26f]
  40c3dc:	(bad)  
  40c3dd:	fisttp DWORD PTR [ecx-0x23232400]
  40c3e3:	inc    DWORD PTR [ebx-0x717c338e]
  40c3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ea:	xor    BYTE PTR [eax],al
  40c3ec:	sbb    esp,0xffffffff
  40c3ef:	jmp    DWORD PTR [ecx+ebp*4-0x7a00ff0e]
  40c3f6:	(bad)  
  40c3f7:	dec    esp
  40c3f9:	mov    ds:0xae838991,eax
  40c3fe:	(bad)  
  40c3ff:	call   DWORD PTR [esi-0xff1e96]
  40c405:	test   DWORD PTR [ebx-0x4d64b434],0xcc7dccff
  40c40f:	jmp    FWORD PTR [ebx]
  40c411:	pop    ebx
  40c412:	pop    es
  40c413:	(bad)  
  40c414:	dec    ecx
  40c416:	(bad)  
  40c417:	(bad)  
  40c418:	in     eax,dx
  40c419:	xor    DWORD PTR [ecx+0xd5ffff],ebp
  40c41f:	(bad)  
  40c420:	jmp    0x89c9e729
  40c425:	mov    al,ds:0x7368cc00
  40c42a:	or     edi,edi
  40c42c:	jmp    DWORD PTR [ecx-0x1]
  40c42f:	jmp    DWORD PTR [ecx-0x76000c39]
  40c435:	imul   edi,edi,0xffffffff
  40c438:	jmp    0x140ad9c
  40c43d:	sub    eax,0x2b300000
  40c442:	enter  0x83ff,0xf2
  40c446:	(bad)  
  40c447:	call   DWORD PTR [edi+0x51]
  40c44a:	jmp    0xcc5cc3d8
  40c44f:	(bad)  
  40c450:	jge    0x40c49e
  40c452:	push   edi
  40c453:	cmp    edi,0x30
  40c456:	inc    DWORD PTR [ebx-0x76d2f71b]
  40c45c:	add    al,ch
  40c45e:	(bad)  
  40c45f:	dec    DWORD PTR [eax-0x2]
  40c462:	lods   al,BYTE PTR ds:[esi]
  40c463:	int3   
  40c464:	add    BYTE PTR [esi],ch
  40c466:	int3   
  40c467:	add    BYTE PTR [ebx+ebx*1],ch
  40c46a:	inc    DWORD PTR es:[ebx+0x4f00ff8f]
  40c471:	sub    eax,0x63ffff4e
  40c476:	dec    DWORD PTR [ecx-0x654580]
  40c47c:	adc    DWORD PTR [esp+ecx*8+0x74d2e000],0xffffffcc
  40c484:	add    BYTE PTR [ecx-0x17620100],cl
  40c48a:	dec    ebx
  40c48b:	int3   
  40c48c:	inc    DWORD PTR [esp+ecx*8]
  40c48f:	int3   
  40c490:	pop    ecx
  40c491:	pop    esi
  40c492:	and    al,0xff
  40c494:	jmp    FWORD PTR [edi+edi*8-0x1]
  40c498:	fimul  DWORD PTR [edi]
  40c49a:	xor    eax,0xff890083
  40c49f:	dec    DWORD PTR [eax]
  40c4a1:	(bad)  [esi-0xccff7d]
  40c4a7:	call   FWORD PTR [ecx]
  40c4a9:	iret   
  40c4aa:	sldt   WORD PTR [ebx+0x4acc0060]
  40c4b1:	xchg   esi,eax
  40c4b2:	or     esp,0x839783
  40c4b8:	jns    0x40c4e0
  40c4ba:	xor    bh,bh
  40c4bc:	call   ecx
  40c4be:	add    BYTE PTR [ebx+0x5cf04f],al
  40c4c4:	push   DWORD PTR [eax]
  40c4c6:	(bad)  
  40c4c7:	jmp    DWORD PTR [edi]
  40c4c9:	adc    DWORD PTR ds:0xffa7cc83,edx
  40c4cf:	add    BYTE PTR [ebx],ah
  40c4d1:	retf   
  40c4d2:	or     al,0x83
  40c4d4:	jmp    FWORD PTR [esi-0x3571007d]
  40c4da:	call   0xff5dc4df
  40c4df:	(bad)  
  40c4e0:	sti    
  40c4e1:	adc    edx,ebx
  40c4e3:	add    bh,bh
  40c4e5:	push   ds
  40c4e6:	inc    DWORD PTR [eax]
  40c4e8:	xchg   ebx,eax
  40c4e9:	aaa    
  40c4ea:	add    eax,DWORD PTR [ebx-0xe47d]
  40c4f0:	adc    al,0xc0
  40c4f2:	push   eax
  40c4f3:	inc    DWORD PTR [eax]
  40c4f5:	pusha  
  40c4f6:	add    bh,bh
  40c4f8:	aam    0xbd
  40c4fa:	xchg   BYTE PTR [eax],al
  40c4fc:	add    dl,cl
  40c4fe:	cmp    edi,0x28
  40c501:	data16 test al,0x0
  40c504:	jmp    DWORD PTR [esi]
  40c506:	inc    DWORD PTR [eax]
  40c508:	imul   esp,DWORD PTR [ebp-0x45007c21],0x9a5eff00
  40c512:	push   cs
  40c513:	add    bh,bh
  40c515:	(bad)  
  40c517:	inc    DWORD PTR [ecx]
  40c519:	icebp  
  40c51a:	cmp    bh,bh
  40c51c:	add    ch,bl
  40c51e:	int3   
  40c51f:	mov    DWORD PTR [edx+0x3d],ecx
  40c522:	adc    al,0xff
  40c524:	(bad)  
  40c525:	aas    
  40c526:	inc    DWORD PTR [eax]
  40c528:	shr    dl,1
  40c52a:	and    bh,bh
  40c52c:	mov    DWORD PTR [edx+0x52afffcc],ebp
  40c532:	out    dx,al
  40c533:	add    DWORD PTR [eax],0x16
  40c536:	int3   
  40c537:	add    BYTE PTR [edi-0x7c00de38],bl
  40c53d:	inc    esi
  40c53e:	mov    esp,ecx
  40c540:	push   0xff00f8ec
  40c545:	add    BYTE PTR [eax],0x89
  40c548:	gs xchg ebp,eax
  40c54a:	pop    ecx
  40c54b:	add    bh,bh
  40c54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c54e:	(bad)  
  40c54f:	push   esp
  40c551:	jne    0x40c5b4
  40c553:	(bad)  
  40c554:	inc    DWORD PTR ds:0x647f8383
  40c55a:	push   0xffffffcc
  40c55c:	add    BYTE PTR [edi-0x7f010001],dh
  40c562:	test   bh,bh
  40c564:	dec    DWORD PTR [ecx-0x1]
  40c567:	dec    DWORD PTR [eax]
  40c569:	inc    ebx
  40c56a:	jnp    0x40c56c
  40c56c:	add    BYTE PTR [ebp-0x77],dh
  40c56f:	add    BYTE PTR [ebx-0x685d],bh
  40c575:	inc    esi
  40c576:	(bad)  
  40c577:	push   esp
  40c579:	adc    eax,0x43ffff9c
  40c57e:	add    BYTE PTR [eax],al
  40c580:	loopne 0x40c502
  40c582:	lods   al,BYTE PTR ds:[esi]
  40c583:	(bad)  
  40c584:	push   DWORD PTR [ecx-0x1]
  40c587:	add    bl,ch
  40c589:	pop    ecx
  40c58a:	and    bh,bh
  40c58c:	jmp    FWORD PTR [ebp-0x3b960001]
  40c592:	ja     0x40c593
  40c594:	mov    DWORD PTR [ecx],edi
  40c596:	inc    DWORD PTR [ebx-0x53ea27]
  40c59c:	add    BYTE PTR [ebx],al
  40c59e:	inc    DWORD PTR [eax]
  40c5a0:	add    DWORD PTR [edx],0xffffffbe
  40c5a3:	add    bh,bh
  40c5a5:	ret    0xffff
  40c5a8:	push   ecx
  40c5a9:	xor    eax,0x41ffff52
  40c5ae:	(bad)  
  40c5af:	dec    DWORD PTR [edx+edi*1]
  40c5b2:	inc    DWORD PTR ss:[ebx+0x5bff0043]
  40c5b9:	bound  edx,QWORD PTR [esi+0x7f8383]
  40c5bf:	jmp    FWORD PTR [ecx]
  40c5c1:	add    edi,0xffffffcc
  40c5c4:	push   DWORD PTR [esi+0x6de30000]
  40c5ca:	jb     0x40c5cc
  40c5cc:	dec    esp
  40c5ce:	add    bh,bh
  40c5d0:	pushf  
  40c5d1:	jns    0x40c5cc
  40c5d3:	int3   
  40c5d4:	int3   
  40c5d5:	inc    ebx
  40c5d6:	add    DWORD PTR [eax],0x37
  40c5d9:	pop    ebx
  40c5da:	xchg   ebp,eax
  40c5db:	inc    DWORD PTR [eax]
  40c5dd:	inc    DWORD PTR ss:[ebx-0x460841]
  40c5e4:	adc    DWORD PTR [ebx-0xe90007d],0x3a
  40c5eb:	add    bh,bh
  40c5ed:	aaa    
  40c5ee:	inc    DWORD PTR [eax]
  40c5f0:	push   0xffffffed
  40c5f2:	loop   0x40c5f3
  40c5f4:	jmp    edi
  40c5f6:	add    ah,cl
  40c5f8:	jb     0x40c614
  40c5fa:	push   edi
  40c5fb:	(bad)  
  40c5fc:	inc    DWORD PTR [ebp+0x0]
  40c5ff:	push   DWORD PTR [ebx-0xd219]
  40c605:	(bad)  
  40c606:	inc    DWORD PTR [ebx-0x7cdceb3f]
  40c60c:	add    BYTE PTR [edi+0x5870ff83],dl
  40c612:	mov    WORD PTR [ebx-0x7c247d],es
  40c618:	rol    esi,0xee
  40c61b:	inc    DWORD PTR [eax]
  40c61d:	mov    BYTE PTR [eax],al
  40c61f:	mov    DWORD PTR [edx],ecx
  40c621:	hlt    
  40c622:	push   esp
  40c623:	int3   
  40c624:	add    BYTE PTR [edi+edi*8],dl
  40c627:	(bad)  
  40c628:	cmp    dh,BYTE PTR [edi+0x183ff0c]
  40c62e:	add    BYTE PTR [ecx-0x6369f4],cl
  40c634:	inc    ebp
  40c636:	inc    DWORD PTR [eax]
  40c638:	jb     0x40c6a5
  40c63a:	mov    eax,ds:0xfbffff
  40c63f:	add    BYTE PTR [ebp-0x48],ch
  40c642:	pop    es
  40c643:	dec    DWORD PTR [ecx+0x46ff0042]
  40c649:	inc    ebx
  40c64a:	jg     0x40c64c
  40c64c:	add    BYTE PTR [eax+eax*1],ah
  40c64f:	push   eax
  40c651:	ins    DWORD PTR es:[edi],dx
  40c652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c653:	(bad)  
  40c654:	dec    DWORD PTR [edi+edi*8+0xd648000]
  40c65b:	(bad)  
  40c65c:	(bad)  
  40c65d:	cmp    edi,edi
  40c65f:	add    BYTE PTR [ebx-0x3300e82a],cl
  40c665:	pop    esp
  40c666:	dec    DWORD PTR [ecx-0xae1527]
  40c66c:	int3   
  40c66d:	jmp    0x40c66e
  40c66f:	add    BYTE PTR [ebp+0x35],cl
  40c672:	mov    ebp,0x83e2ff83
  40c677:	inc    DWORD PTR [ebx-0x4a]
  40c67a:	cld    
  40c67b:	int3   
  40c67c:	dec    DWORD PTR [edx]
  40c67e:	inc    DWORD PTR [eax]
  40c680:	adc    ah,BYTE PTR [ecx-0x62]
  40c683:	int3   
  40c684:	inc    edx
  40c686:	add    bh,bh
  40c688:	jmp    0x40c666
  40c68a:	push   ebx
  40c68b:	add    DWORD PTR [eax],0x45
  40c68e:	inc    DWORD PTR [ebx-0x7c15f103]
  40c694:	add    BYTE PTR [edx-0x1],dh
  40c697:	push   ebp
  40c699:	cmc    
  40c69a:	inc    ebx
  40c69b:	add    bh,bh
  40c69d:	out    dx,eax
  40c69e:	(bad)  
  40c69f:	inc    eax
  40c6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a2:	lods   eax,DWORD PTR ds:[esi]
  40c6a3:	(bad)  
  40c6a4:	push   DWORD PTR [edi]
  40c6a6:	mov    edi,edi
  40c6a8:	cmp    al,0x49
  40c6aa:	(bad)  
  40c6ac:	(bad)  
  40c6ad:	(bad)  
  40c6af:	add    dl,dh
  40c6b1:	cmp    ah,BYTE PTR [edx+0x92ffcc]
  40c6b7:	jmp    DWORD PTR [eax]
  40c6b9:	jmp    0x40c6c7
  40c6bb:	inc    DWORD PTR [ebx+0xaff00e8]
  40c6c1:	outs   dx,BYTE PTR ds:[esi]
  40c6c2:	(bad)  
  40c6c3:	(bad)  
  40c6c4:	call   DWORD PTR [edi+0x6c6effff]
  40c6ca:	popa   
  40c6cb:	add    bh,bh
  40c6cd:	fcos   
  40c6cf:	jmp    FWORD PTR [edx-0x19c8]
  40c6d5:	ins    BYTE PTR es:[edi],dx
  40c6d6:	add    DWORD PTR [ebx-0x765bcd0b],0xffffffff
  40c6dd:	adc    al,0x0
  40c6df:	add    BYTE PTR [edx],al
  40c6e1:	dec    edi
  40c6e2:	xchg   BYTE PTR [eax],al
  40c6e4:	add    BYTE PTR ds:0x814500ff,ah
  40c6ea:	add    eax,0xe883cc
  40c6ef:	and    DWORD PTR [esi+ebp*1-0x3],0xffffffff
  40c6f4:	mov    DWORD PTR [ebx-0x7d],ebx
  40c6f7:	xor    DWORD PTR [eax+ecx*2],0xffffff93
  40c6fb:	cmp    edi,0xffffffb4
  40c6fe:	inc    DWORD PTR [eax]
  40c700:	xor    DWORD PTR [eax+0x1aff8962],ebp
  40c706:	(bad)  
  40c707:	inc    esp
  40c709:	mov    al,ds:0xe883ff31
  40c70e:	add    bh,bh
  40c710:	cmp    BYTE PTR gs:0x89e8ff00,cl
  40c717:	push   DWORD PTR [edi]
  40c719:	xchg   esi,eax
  40c71a:	jae    0x40c6e8
  40c71c:	mov    DWORD PTR [esi+0x5684ff00],ebp
  40c722:	push   0x55ffff
  40c727:	add    BYTE PTR [edx],bh
  40c729:	inc    edx
  40c72a:	cli    
  40c72b:	dec    esp
  40c72d:	and    BYTE PTR [eax],al
  40c72f:	inc    DWORD PTR [edx]
  40c731:	adc    eax,0x5783cc28
  40c736:	int3   
  40c737:	call   FWORD PTR [eax-0x7c9303]
  40c73d:	loopne 0x40c73e
  40c73f:	mov    edi,eax
  40c741:	inc    esp
  40c742:	stos   BYTE PTR es:[edi],al
  40c743:	int3   
  40c744:	jmp    DWORD PTR [esi+0x0]
  40c747:	add    DWORD PTR [eax+esi*2+0x6789896a],0xffffff83
  40c74f:	add    ch,al
  40c751:	adc    al,0xc8
  40c753:	add    bh,bh
  40c755:	jmp    0x40c757
  40c757:	add    BYTE PTR [esi],bl
  40c759:	ror    bh,0x0
  40c75c:	dec    DWORD PTR [edi+0x30a683ff]
  40c762:	sbb    bh,bh
  40c764:	or     DWORD PTR [edx],0xffffff83
  40c767:	sbb    DWORD PTR [eax+edx*4-0x7d33ff77],0xffffffcc
  40c76f:	call   FWORD PTR [edi+0x7a]
  40c772:	outs   dx,BYTE PTR ds:[esi]
  40c773:	int3   
  40c774:	int3   
  40c775:	fdivp  st(7),st
  40c777:	dec    DWORD PTR ds:0xff009492
  40c77d:	jne    0x40c77e
  40c77f:	mov    esp,ebp
  40c781:	outs   dx,BYTE PTR ds:[esi]
  40c782:	add    DWORD PTR [ebx-0x8301],0x894a579a
  40c78c:	inc    DWORD PTR [ebp+0x0]
  40c78f:	add    dh,dl
  40c791:	out    dx,al
  40c792:	scas   eax,DWORD PTR es:[edi]
  40c793:	int3   
  40c794:	add    BYTE PTR [ecx],bl
  40c796:	add    bh,bh
  40c798:	push   ebp
  40c799:	bound  ebx,QWORD PTR [ebx]
  40c79b:	(bad)  
  40c79c:	(bad)  
  40c79d:	sti    
  40c79e:	inc    DWORD PTR [ebx-0x4381eb]
  40c7a4:	inc    DWORD PTR [esi-0x1]
  40c7a7:	inc    DWORD PTR [ebp+0x68]
  40c7aa:	je     0x40c7ab
  40c7ac:	int3   
  40c7ad:	repz inc DWORD PTR [ebx-0x7cc318a8]
  40c7b4:	mov    DWORD PTR [edx],edx
  40c7b6:	(bad)  
  40c7b7:	inc    ebp
  40c7b9:	mov    DWORD PTR [eax-0x7c520077],edi
  40c7bf:	call   FWORD PTR [ebx-0x330063ac]
  40c7c5:	mov    al,0x83
  40c7c7:	push   ebp
  40c7c9:	xchg   edi,eax
  40c7ca:	add    al,BYTE PTR [ebx-0x7cff3900]
  40c7d0:	mov    ebp,0xff00a7c3
  40c7d5:	sub    al,0x89
  40c7d7:	inc    DWORD PTR [ecx+0x29]
  40c7da:	jnp    0x40c7db
  40c7dc:	add    BYTE PTR [edi],dh
  40c7de:	(bad)  
  40c7df:	jmp    DWORD PTR [edx]
  40c7e1:	cmp    BYTE PTR ds:0x89f2ff00,0x0
  40c7e8:	pushf  
  40c7e9:	jbe    0x40c7e7
  40c7eb:	inc    DWORD PTR [ebx-0x1f000073]
  40c7f1:	or     eax,0x9a00ff6a
  40c7f6:	add    bh,bh
  40c7f8:	ret    
  40c7f9:	lds    ebp,FWORD PTR [ecx-0x1]
  40c7fc:	inc    ecx
  40c7fe:	add    bh,bh
  40c800:	and    BYTE PTR [ebx],bh
  40c802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c803:	add    BYTE PTR [ecx-0x60760055],cl
  40c809:	mov    ecx,esp
  40c80b:	mov    edi,edi
  40c80d:	pop    esp
  40c80e:	add    bh,bh
  40c810:	pusha  
  40c811:	aam    0xf9
  40c813:	inc    DWORD PTR [eax]
  40c815:	cmp    edi,0xffffffff
  40c818:	ins    BYTE PTR es:[edi],dx
  40c819:	ins    DWORD PTR es:[edi],dx
  40c81a:	adc    al,0xff
  40c81c:	mov    DWORD PTR [ecx-0x2c570000],ecx
  40c822:	pop    edi
  40c823:	add    BYTE PTR [eax],al
  40c825:	outs   dx,BYTE PTR ds:[esi]
  40c826:	add    BYTE PTR [eax],al
  40c828:	adc    BYTE PTR [ecx+0x63],dl
  40c82b:	(bad)  
  40c82c:	push   DWORD PTR [esi]
  40c82e:	cmp    edi,0xffffffe0
  40c831:	jae    0x40c7f6
  40c833:	cmp    edi,0xffffffdd
  40c836:	int3   
  40c837:	inc    DWORD PTR [ebp+0xff25f4]
  40c83d:	pop    DWORD PTR [eax]
  40c83f:	call   edi
  40c841:	into   
  40c842:	xchg   bh,bh
  40c844:	dec    edx
  40c846:	inc    DWORD PTR [ebx+0xa16460]
  40c84c:	(bad)  
  40c84d:	cli    
  40c84e:	(bad)  
  40c84f:	call   DWORD PTR [ecx-0x17]
  40c852:	push   edi
  40c853:	inc    DWORD PTR [ebx-0x460033d9]
  40c859:	les    edi,FWORD PTR [ebx]
  40c85b:	add    BYTE PTR [eax],al
  40c85d:	and    bh,bh
  40c85f:	add    BYTE PTR [edi-0x3379c9],ch
  40c865:	mov    edi,0x67cc00ff
  40c86a:	jp     0x40c86c
  40c86c:	or     DWORD PTR [edi],0xffffffcc
  40c86f:	jmp    DWORD PTR [esp+eiz*8]
  40c872:	out    0xff,al
  40c874:	dec    DWORD PTR [esp+ecx*8+0x27878583]
  40c87b:	int3   
  40c87c:	adc    edx,0xffffffff
  40c87f:	(bad)  
  40c880:	mov    ebp,0xff004700
  40c885:	xor    bh,bh
  40c887:	int3   
  40c888:	fisubr WORD PTR [edi]
  40c88a:	jns    0x40c88b
  40c88c:	jmp    DWORD PTR [ecx+0x580aff00]
  40c892:	or     bh,bh
  40c894:	inc    DWORD PTR [ebx+eax*4+0x0]
  40c898:	sub    dl,0x89
  40c89b:	inc    DWORD PTR [eax]
  40c89d:	into   
  40c89e:	add    BYTE PTR [ebx+0x5efe1],al
  40c8a4:	(bad)  
  40c8a5:	cmp    al,0x0
  40c8a7:	add    BYTE PTR [ebx-0x8],bh
  40c8aa:	mov    al,BYTE PTR [eax]
  40c8ac:	or     DWORD PTR [ecx+0x0],0xffffffff
  40c8b0:	push   0x23
  40c8b2:	sbb    bh,bh
  40c8b4:	call   DWORD PTR ds:0x1acbffcc
  40c8ba:	out    dx,eax
  40c8bb:	mov    DWORD PTR [eax],eax
  40c8bd:	fwait
  40c8be:	add    BYTE PTR [eax],al
  40c8c0:	repz sbb al,0x87
  40c8c3:	(bad)  
  40c8c4:	(bad)  
  40c8c5:	(bad)  
  40c8c7:	add    BYTE PTR [esi-0x79dc],al
  40c8cd:	dec    esi
  40c8ce:	add    bh,bh
  40c8d0:	xor    DWORD PTR [esi+0x36],esi
  40c8d3:	(bad)  
  40c8d4:	(bad)  
  40c8d5:	out    dx,eax
  40c8d6:	inc    DWORD PTR [ebx-0x75d53b]
  40c8dc:	add    BYTE PTR [ecx-0x4fbb0001],bh
  40c8e2:	or     eax,0x832000ff
  40c8e7:	add    BYTE PTR [ebx-0x7c00d599],al
  40c8ed:	mov    WORD PTR [eax],es
  40c8ef:	push   DWORD PTR [ecx+0xcc4ce1]
  40c8f5:	push   ebp
  40c8f6:	(bad)  
  40c8f7:	call   DWORD PTR [edx+eax*8-0x1d7cff12]
  40c8fe:	(bad)  
  40c8ff:	dec    DWORD PTR [esi-0x54]
  40c902:	cdq    
  40c903:	add    bh,bh
  40c905:	ret    
  40c906:	(bad)  
  40c907:	jmp    FWORD PTR [edx+ebp*8]
  40c90a:	add    eax,0x83ab0000
  40c90f:	or     DWORD PTR [edx+0xffcadb],0x22
  40c916:	inc    DWORD PTR [ebx+0x67dd92]
  40c91c:	add    BYTE PTR [edi+edi*8+0x3e1331ff],bl
  40c923:	(bad)  
  40c924:	push   ebx
  40c926:	inc    DWORD PTR [eax]
  40c928:	stc    
  40c929:	jo     0x40c8d1
  40c92b:	dec    esp
  40c92d:	retf   0xff00
  40c930:	or     edx,ecx
  40c932:	enter  0x83ff,0x7c
  40c936:	(bad)  
  40c937:	jmp    DWORD PTR [ebp-0x55]
  40c93a:	iret   
  40c93b:	or     DWORD PTR [ecx-0x7a00ff78],0xffffffe4
  40c942:	fadd   DWORD PTR [eax]
  40c944:	call   DWORD PTR [esi-0x7d]
  40c947:	call   FWORD PTR ds:0x5b2a
  40c94d:	pop    ds
  40c94e:	add    BYTE PTR [eax],al
  40c950:	xlat   BYTE PTR ds:[ebx]
  40c951:	push   esi
  40c952:	jns    0x40c953
  40c954:	and    DWORD PTR [edi+edi*8+0x0],0xffffff85
  40c959:	ss cmp eax,0xfff200ff
  40c95f:	(bad)  
  40c960:	mov    eax,0xe21b
  40c965:	imul   edi,edi,0xffffffff
  40c968:	cmp    dh,BYTE PTR [edi-0x14]
  40c96b:	inc    DWORD PTR [eax]
  40c96d:	dec    esp
  40c96e:	inc    DWORD PTR [eax]
  40c970:	in     al,dx
  40c971:	push   edx
  40c972:	mov    dl,0xff
  40c974:	add    BYTE PTR [eax],bh
  40c976:	(bad)  
  40c977:	push   ebx
  40c979:	fwait
  40c97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c97b:	inc    DWORD PTR [ebx-0x497c3349]
  40c981:	sbb    dh,BYTE PTR [edi-0x7cc50001]
  40c987:	add    BYTE PTR [eax],bh
  40c989:	push   edx
  40c98a:	iret   
  40c98b:	add    BYTE PTR [ebx-0x13ff001e],al
  40c991:	sub    esp,ebx
  40c993:	inc    DWORD PTR [eax]
  40c995:	add    bh,bh
  40c997:	dec    DWORD PTR ds:0xff836e35
  40c99d:	(bad)  
  40c99f:	dec    ebx
  40c9a1:	adc    ch,dh
  40c9a3:	add    BYTE PTR [ebx+0x4789cc1d],al
  40c9a9:	mov    ds:0x8bffff5a,al
  40c9ae:	add    DWORD PTR [ebx-0xec089a],0xffffffff
  40c9b5:	jnp    0x40c9b7
  40c9b7:	and    esp,0x69
  40c9ba:	add    DWORD PTR [eax],0xffffffff
  40c9bd:	xchg   ebx,eax
  40c9be:	inc    DWORD PTR [eax]
  40c9c0:	sub    edx,edx
  40c9c2:	out    0x0,eax
  40c9c4:	add    BYTE PTR [edx-0x3f0f0001],dl
  40c9ca:	lock cmp edi,0x33
  40c9ce:	int3   
  40c9cf:	inc    DWORD PTR [edi-0x12]
  40c9d2:	std    
  40c9d3:	add    BYTE PTR [ebx-0x61760003],al
  40c9d9:	pop    edi
  40c9da:	sbb    bh,bh
  40c9dc:	(bad)  
  40c9dd:	js     0x40c9de
  40c9df:	add    BYTE PTR [ecx-0x4a],dl
  40c9e2:	add    esp,ecx
  40c9e4:	inc    ecx
  40c9e6:	add    DWORD PTR [eax],0x68
  40c9e9:	outs   dx,BYTE PTR ds:[esi]
  40c9ea:	xor    edi,edi
  40c9ec:	add    BYTE PTR [eax+eax*1],cl
  40c9ef:	add    BYTE PTR [ecx],dl
  40c9f1:	mov    ecx,0x70ffffe6
  40c9f6:	or     DWORD PTR [ecx+0xed6558],0xffffffff
  40c9fd:	ror    BYTE PTR [ecx-0xe1b4a01],0x83
  40ca04:	inc    DWORD PTR [ebp-0x1]
  40ca07:	(bad)  
  40ca08:	out    dx,al
  40ca09:	in     eax,dx
  40ca0a:	push   edi
  40ca0b:	(bad)  
  40ca0c:	jmp    eax
  40ca0e:	add    BYTE PTR [eax],al
  40ca10:	mov    ebp,0x83003350
  40ca15:	mov    bh,0x0
  40ca17:	jmp    FWORD PTR [esi-0x23]
  40ca1a:	out    0xff,al
  40ca1c:	int3   
  40ca1d:	idiv   edi
  40ca1f:	(bad)  
  40ca20:	jnp    0x40ca4a
  40ca22:	in     al,0x0
  40ca24:	add    BYTE PTR [esi-0x1],bh
  40ca27:	int3   
  40ca28:	and    BYTE PTR [ecx-0x1aff337d],al
  40ca2e:	add    bh,bh
  40ca30:	fisttp QWORD PTR [edx]
  40ca32:	leave  
  40ca33:	add    bh,bh
  40ca35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca36:	add    BYTE PTR [eax],al
  40ca38:	sub    BYTE PTR [edi+0x3ccff94],0x0
  40ca3f:	(bad)  
  40ca40:	mov    edi,0x831c2d
  40ca45:	dec    WORD PTR [ecx+0xc75f65]
  40ca4c:	jmp    DWORD PTR ds:0x559cff00
  40ca52:	dec    ebp
  40ca53:	int3   
  40ca54:	inc    DWORD PTR [eax-0x29360100]
  40ca5a:	push   es
  40ca5b:	add    DWORD PTR [eax],0xffffffc2
  40ca5e:	dec    DWORD PTR [ecx-0x335d3ba5]
  40ca64:	push   ebx
  40ca66:	add    bh,bh
  40ca68:	and    eax,0xffcc7be9
  40ca6d:	add    DWORD PTR [eax],0xea3f04cc
  40ca73:	(bad)  
  40ca74:	dec    DWORD PTR [ebx-0x64bf7677]
  40ca7a:	push   0x0
  40ca7c:	add    bl,al
  40ca7e:	inc    DWORD PTR [ebx-0xc6ec72]
  40ca84:	dec    DWORD PTR [ebp-0x1]
  40ca87:	add    BYTE PTR [edi-0x7b],dh
  40ca8a:	mov    BYTE PTR [eax],0x0
  40ca8d:	pop    ebx
  40ca8e:	mov    DWORD PTR [eax],eax
  40ca90:	push   ecx
  40ca91:	fs xchg edi,eax
  40ca93:	(bad)  
  40ca94:	(bad)  
  40ca95:	clc    
  40ca96:	(bad)  
  40ca97:	inc    DWORD PTR [esi-0x1d]
  40ca9a:	popf   
  40ca9b:	int3   
  40ca9c:	sbb    DWORD PTR ds:0xa5f300cc,0xfffffff9
  40caa3:	cmp    edi,0x72
  40caa6:	add    BYTE PTR [eax],al
  40caa8:	and    al,0x7
  40caaa:	add    al,0xff
  40caac:	int3   
  40caad:	push   0x891dff00
  40cab2:	pop    edi
  40cab3:	mov    edi,edi
  40cab5:	mov    ds:0x22dd8389,eax
  40caba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cabb:	or     DWORD PTR [ecx+0x39ff0074],0xffffffd8
  40cac2:	push   esp
  40cac3:	add    bh,bh
  40cac5:	jns    0x40cac6
  40cac7:	(bad)  
  40cac8:	jmp    0xffc3e76a
  40cacd:	in     eax,0xff
  40cacf:	push   DWORD PTR ds:0xff00a333
  40cad5:	mov    bl,0x0
  40cad7:	jmp    FWORD PTR [eax]
  40cad9:	in     al,0x9a
  40cadb:	add    bh,bh
  40cadd:	jnp    0x40cade
  40cadf:	inc    eax
  40cae1:	cmp    al,0x43
  40cae3:	cmp    edi,0xffffffe9
  40cae6:	add    bh,bh
  40cae8:	ins    DWORD PTR es:[edi],dx
  40cae9:	jg     0x40ca72
  40caeb:	(bad)  
  40caec:	dec    DWORD PTR [esi+0x45f7ff00]
  40caf2:	str    WORD PTR [ecx+0x23ff83fd]
  40caf9:	adc    DWORD PTR [edi-0x7ca3007d],0xffffffff
  40cb00:	mov    eax,0x83ff4fee
  40cb05:	xor    BYTE PTR [eax],al
  40cb07:	add    BYTE PTR [eax-0x7c7c8d1a],bh
  40cb0d:	mov    bh,0x0
  40cb0f:	int3   
  40cb10:	out    0x9b,al
  40cb12:	jo     0x40cb13
  40cb14:	dec    DWORD PTR [edx-0x77]
  40cb17:	inc    DWORD PTR [edx+0x6b]
  40cb1a:	dec    edi
  40cb1b:	add    bh,bh
  40cb1d:	jbe    0x40cb1e
  40cb1f:	call   ecx
  40cb21:	sti    
  40cb22:	je     0x40cb23
  40cb24:	add    BYTE PTR [eax],cl
  40cb26:	add    BYTE PTR [ecx-0xf1338f],cl
  40cb2c:	call   DWORD PTR [esi+0x788c8300]
  40cb32:	cmc    
  40cb33:	inc    DWORD PTR [eax]
  40cb35:	popa   
  40cb36:	(bad)  
  40cb37:	call   DWORD PTR [eax+0xff8b95]
  40cb3d:	stc    
  40cb3e:	add    bh,bh
  40cb40:	rcr    BYTE PTR [ebx-0x277c7c06],1
  40cb46:	add    DWORD PTR [eax],0xffffffe4
  40cb49:	dec    edx
  40cb4a:	pop    ss
  40cb4b:	add    BYTE PTR [eax],al
  40cb4d:	cli    
  40cb4e:	add    bh,bh
  40cb50:	push   ebp
  40cb51:	loope  0x40cb0a
  40cb53:	int3   
  40cb54:	(bad)  
  40cb55:	jmp    0x3:0x24a7ff00
  40cb5c:	push   ebx
  40cb5e:	int3   
  40cb5f:	add    dl,dl
  40cb61:	push   ds
  40cb62:	ror    DWORD PTR [ecx-0x7600ce01],1
  40cb68:	xchg   esp,eax
  40cb69:	mov    eax,0xe7ccff2c
  40cb6e:	add    bh,bh
  40cb70:	jmp    0x8940debd
  40cb75:	dec    ecx
  40cb76:	mov    DWORD PTR [eax],eax
  40cb78:	test   BYTE PTR [eax-0x7100ffab],dl
  40cb7e:	dec    DWORD PTR [ecx-0x7c6481c8]
  40cb84:	mov    DWORD PTR [esi],ebx
  40cb86:	int3   
  40cb87:	xor    DWORD PTR [esi-0x7c006ba9],0x10
  40cb8e:	add    BYTE PTR [ebx-0x1d244a],al
  40cb94:	push   edx
  40cb96:	inc    DWORD PTR [ebx-0x27550b]
  40cb9c:	add    dh,bh
  40cb9e:	int3   
  40cb9f:	add    cl,al
  40cba1:	push   ecx
  40cba2:	mov    cl,ah
  40cba4:	inc    DWORD PTR [eax-0x34]
  40cba7:	add    BYTE PTR [ebp-0xb6e7],ch
  40cbad:	mov    BYTE PTR [eax],al
  40cbaf:	dec    ecx
  40cbb1:	mov    dh,0x86
  40cbb3:	mov    DWORD PTR [ebx+0x7300cc00],eax
  40cbb9:	add    BYTE PTR [ebx-0x76e4ff01],al
  40cbbf:	(bad)  
  40cbc0:	clc    
  40cbc1:	push   ebp
  40cbc2:	sbb    eax,DWORD PTR [ebx-0xff3000]
  40cbc8:	push   ds
  40cbc9:	ins    BYTE PTR es:[edi],dx
  40cbca:	inc    ebx
  40cbcb:	add    BYTE PTR [eax],al
  40cbcd:	stos   DWORD PTR es:[edi],eax
  40cbce:	int3   
  40cbcf:	cmp    DWORD PTR [ebx],0x69
  40cbd2:	ins    DWORD PTR es:[edi],dx
  40cbd3:	add    BYTE PTR [ebx-0x60ff0024],al
  40cbd9:	(bad)  
  40cbda:	pop    edx
  40cbdb:	(bad)  
  40cbdc:	inc    DWORD PTR [ecx-0x7d0eff34]
  40cbe2:	add    DWORD PTR [ebx-0x97d],0x2b
  40cbe9:	or     ch,BYTE PTR [edi+0x0]
  40cbec:	mov    DWORD PTR [esi-0x51717d00],edi
  40cbf2:	mov    ds:0xa700ff,al
  40cbf7:	inc    DWORD PTR [edx]
  40cbf9:	pushf  
  40cbfa:	(bad)  
  40cbfb:	dec    esp
  40cbfd:	test   DWORD PTR [eax],0xfb2253cc
  40cc03:	or     esp,0x5a
  40cc06:	add    bh,bh
  40cc08:	test   BYTE PTR [ecx+0x4b],ch
  40cc0b:	(bad)  
  40cc0c:	(bad)  
  40cc0d:	out    dx,eax
  40cc0e:	add    bh,bh
  40cc10:	mov    ah,0x94
  40cc12:	jne    0x40cc14
  40cc14:	mov    DWORD PTR [ebx-0x34],edx
  40cc17:	add    BYTE PTR [eax+0xb745],ch
  40cc1d:	adc    al,0xff
  40cc1f:	add    BYTE PTR [ebx-0x3300ec27],bl
  40cc25:	xor    al,0xff
  40cc27:	add    ch,bh
  40cc29:	pop    esp
  40cc2a:	fadd   QWORD PTR [eax]
  40cc2c:	or     DWORD PTR [eax-0x34],0xffffffff
  40cc30:	iret   
  40cc31:	push   0x7c
  40cc33:	int3   
  40cc34:	call   DWORD PTR [ebx-0x34]
  40cc37:	(bad)  
  40cc38:	std    
  40cc39:	lods   al,BYTE PTR ds:[esi]
  40cc3a:	mov    ebp,0x5fff89
  40cc3f:	add    BYTE PTR [ebp-0x1e],ah
  40cc42:	inc    eax
  40cc43:	add    bh,bh
  40cc45:	idiv   bh
  40cc47:	jmp    DWORD PTR [edi]
  40cc49:	xor    BYTE PTR [edx],0x0
  40cc4c:	(bad)  
  40cc4d:	fcmovne st,st(4)
  40cc4f:	int3   
  40cc50:	sti    
  40cc51:	fld    QWORD PTR [ebx+eax*4+0xff6fff]
  40cc58:	sar    BYTE PTR [edi-0x2e003315],0xff
  40cc5f:	add    bl,cl
  40cc61:	jo     0x40cc1f
  40cc63:	cmp    edi,0x9
  40cc66:	(bad)  
  40cc67:	push   DWORD PTR [edi+ebx*1]
  40cc6a:	(bad)  
  40cc6c:	int3   
  40cc6d:	pop    eax
  40cc6e:	or     esp,0x4d
  40cc71:	call   ecx
  40cc73:	(bad)  
  40cc74:	inc    DWORD PTR [esi-0x1]
  40cc77:	jmp    FWORD PTR [ecx+0xffbf30]
  40cc7d:	hlt    
  40cc7e:	(bad)  
  40cc7f:	call   DWORD PTR [ecx-0x52]
  40cc82:	sbb    bh,bh
  40cc84:	inc    DWORD PTR [edi+edi*8-0x1]
  40cc88:	test   eax,0x83ffdcf2
  40cc8d:	xchg   ebp,eax
  40cc8e:	dec    DWORD PTR [ecx-0xa79c1a]
  40cc94:	add    BYTE PTR [edx-0x34],dh
  40cc97:	add    BYTE PTR [ecx-0x24],ah
  40cc9a:	jp     0x40cc9c
  40cc9c:	jmp    FWORD PTR [eax+eax*1]
  40cc9f:	add    BYTE PTR [ebx],ah
  40cca1:	jl     0x40cc9e
  40cca3:	inc    DWORD PTR [ebx+0x4cffff4d]
  40cca9:	retf   
  40ccaa:	jno    0x40ccab
  40ccac:	inc    ebp
  40ccae:	(bad)  
  40ccaf:	call   FWORD PTR [edx-0x1c]
  40ccb2:	cmc    
  40ccb3:	add    DWORD PTR [ebx+0x6683ff2c],0x2c
  40ccba:	out    dx,al
  40ccbb:	inc    DWORD PTR [ebx-0x5e00ffb3]
  40ccc1:	and    esp,ecx
  40ccc3:	add    BYTE PTR [eax],al
  40ccc5:	sub    ecx,DWORD PTR [ecx+0x455ab083]
  40cccb:	add    BYTE PTR [eax],al
  40cccd:	ret    0xff83
  40ccd0:	jmp    0x6f:0x83cc54ec
  40ccd7:	add    BYTE PTR [eax-0xe],bh
  40ccda:	xchg   esp,eax
  40ccdb:	inc    DWORD PTR [ebx-0x23ff7c23]
  40cce1:	push   esi
  40cce2:	arpl   WORD PTR [eax],ax
  40cce4:	add    BYTE PTR [ecx+0x0],ch
  40cce7:	jmp    DWORD PTR ds:0xb934
  40cced:	sbb    al,0xff
  40ccef:	call   FWORD PTR [edx]
  40ccf1:	jne    0x40cce1
  40ccf3:	(bad)  
  40ccf4:	jmp    DWORD PTR [eax+eax*1]
  40ccf7:	add    BYTE PTR [ebx+0x5],bl
  40ccfa:	mov    edi,0xff4483ff
  40ccff:	add    dl,ch
  40cd01:	mov    ebx,0x5ff0037
  40cd06:	add    BYTE PTR [eax],al
  40cd08:	and    eax,0xcc00c48f
  40cd0d:	push   es
  40cd0e:	inc    DWORD PTR [ebx+0xb7ff36]
  40cd14:	call   DWORD PTR [esi-0x122c0000]
  40cd1a:	mov    DWORD PTR gs:[eax],eax
  40cd1d:	mov    dl,0xff
  40cd1f:	add    bl,dh
  40cd21:	lock inc ebx
  40cd23:	(bad)  
  40cd24:	call   FWORD PTR [edi-0x1]
  40cd27:	dec    DWORD PTR [ebp-0x1e]
  40cd2a:	mov    ah,0x0
  40cd2c:	int3   
  40cd2d:	mov    eax,ds:0x807100ff
  40cd32:	or     al,0x83
  40cd34:	dec    DWORD PTR [edx-0x46330077]
  40cd3a:	cli    
  40cd3b:	add    BYTE PTR [eax],al
  40cd3d:	or     al,0x0
  40cd3f:	sub    DWORD PTR [edi],0xfffffff3
  40cd42:	aad    0x0
  40cd44:	mov    DWORD PTR [edx],esp
  40cd46:	inc    DWORD PTR [eax]
  40cd48:	jecxz  0x40cd17
  40cd4a:	xor    al,0x89
  40cd4c:	mov    DWORD PTR [eax+eax*1],esp
  40cd4f:	add    BYTE PTR [ecx-0x2d0ac600],cl
  40cd55:	dec    DWORD PTR [ecx+0x4983ff81]
  40cd5b:	arpl   WORD PTR [edi-0xfcff01],bx
  40cd61:	add    BYTE PTR [ecx],ch
  40cd63:	and    al,dl
  40cd65:	mov    DWORD PTR [eax],eax
  40cd67:	or     edi,edi
  40cd69:	add    BYTE PTR [esi+0x34],dl
  40cd6c:	push   0xff70ff00
  40cd71:	dec    edx
  40cd73:	dec    ecx
  40cd74:	in     al,0xff
  40cd76:	add    ah,dl
  40cd78:	cmp    edi,0xffffffdc
  40cd7b:	jbe    0x40cd67
  40cd7d:	(bad)  
  40cd7e:	call   FWORD PTR [edi+edi*8-0x41540100]
  40cd85:	add    bh,bh
  40cd87:	sbb    DWORD PTR [ebx-0x66990d01],eax
  40cd8d:	add    bh,bh
  40cd8f:	leave  
  40cd90:	add    BYTE PTR [eax],al
  40cd92:	dec    ebp
  40cd93:	sahf   
  40cd94:	sub    edi,edi
  40cd96:	dec    DWORD PTR [edi+edi*8+0x33b4f700]
  40cd9d:	int3   
  40cd9e:	add    BYTE PTR [ebp+0x135b0000],cl
  40cda4:	lds    eax,FWORD PTR [eax]
  40cda6:	jmp    DWORD PTR [ebx]
  40cda8:	inc    DWORD PTR [ebx+0x8f078]
  40cdae:	jmp    edi
  40cdb0:	add    ah,cl
  40cdb2:	push   edx
  40cdb3:	loopne 0x40cd46
  40cdb5:	add    BYTE PTR [eax],al
  40cdb7:	or     eax,0x55b40000
  40cdbc:	ins    DWORD PTR es:[edi],dx
  40cdbd:	add    bh,bh
  40cdbf:	jne    0x40cdc0
  40cdc1:	add    dl,bl
  40cdc3:	add    eax,0xbdcc00e0
  40cdc8:	inc    DWORD PTR [ebx-0x1817db]
  40cdce:	and    DWORD PTR [edi],0xffffff83
  40cdd1:	mov    DWORD PTR [esi],edi
  40cdd3:	and    ebx,esi
  40cdd5:	add    ah,cl
  40cdd7:	or     al,BYTE PTR [ebx+0x336293ff]
  40cddd:	add    bh,bh
  40cddf:	mov    ch,0x89
  40cde1:	add    dh,al
  40cde3:	or     BYTE PTR [ecx],cl
  40cde5:	cmp    edi,0x2e
  40cde8:	(bad)  
  40cde9:	(bad)  
  40cdea:	clc    
  40cdeb:	or     eax,0x9dffff28
  40cdf0:	(bad)  
  40cdf1:	call   DWORD PTR [eax+0x2c]
  40cdf4:	cli    
  40cdf5:	(bad)  
  40cdf6:	call   ebp
  40cdf8:	add    BYTE PTR [eax],al
  40cdfa:	mov    ch,0x89
  40cdfc:	push   ds
  40cdfd:	add    bh,bh
  40cdff:	lahf   
  40ce00:	(bad)  
  40ce01:	inc    DWORD PTR [eax+0x827e]
  40ce07:	adc    BYTE PTR [eax],al
  40ce09:	jmp    FWORD PTR [eax]
  40ce0b:	daa    
  40ce0c:	test   BYTE PTR [eax],al
  40ce0e:	mov    ebp,ebx
  40ce10:	dec    esp
  40ce12:	repnz mov ds:0xcc83,al
  40ce18:	add    BYTE PTR [eax],al
  40ce1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce1b:	mov    ebp,0x22cc89ec
  40ce20:	(bad)  
  40ce21:	dec    DWORD PTR [edx+0xcc537f]
  40ce27:	jb     0x40cdac
  40ce29:	cmp    eax,0xffffff8a
  40ce2c:	jge    0x40ce2e
  40ce2e:	push   ebx
  40ce30:	dec    esp
  40ce32:	pop    esi
  40ce33:	scas   eax,DWORD PTR es:[edi]
  40ce34:	pop    ebp
  40ce35:	add    bh,bh
  40ce37:	rol    DWORD PTR [eax],1
  40ce39:	add    BYTE PTR [ebp-0x2b],ah
  40ce3c:	mov    al,0xff
  40ce3e:	int3   
  40ce3f:	pushf  
  40ce40:	or     DWORD PTR [ecx-0x7ce707dd],0xffffff83
  40ce47:	(bad)  
  40ce4a:	adc    eax,0xffff977d
  40ce4f:	jne    0x40ce50
  40ce51:	add    BYTE PTR [ecx],bh
  40ce53:	jle    0x40ce9d
  40ce55:	(bad)  
  40ce56:	dec    DWORD PTR [eax]
  40ce58:	add    bh,bh
  40ce5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce5b:	fdiv   QWORD PTR [eax]
  40ce5d:	inc    DWORD PTR [eax]
  40ce5f:	call   0xeb62cd64
  40ce64:	mov    ch,0x0
  40ce66:	(bad)  
  40ce67:	cmp    eax,0xf3db8300
  40ce6c:	call   0xffc99b70
  40ce71:	push   DWORD PTR [eax-0x11]
  40ce74:	sbb    eax,0xe0083
  40ce79:	add    BYTE PTR [esi+0x837147],ah
  40ce7f:	push   ds
  40ce80:	inc    DWORD PTR [ebx-0x241766]
  40ce86:	mov    DWORD PTR [edx],edi
  40ce88:	int3   
  40ce89:	add    BYTE PTR [ebx],al
  40ce8b:	xchg   esi,eax
  40ce8c:	sbb    bh,bh
  40ce8e:	jmp    DWORD PTR [ebp-0x34]
  40ce91:	dec    DWORD PTR [edi+eiz*1-0x7b]
  40ce95:	(bad)  
  40ce96:	jmp    ebp
  40ce98:	add    ah,cl
  40ce9a:	pop    edi
  40ce9b:	jge    0x40ce93
  40ce9d:	mov    DWORD PTR [ebx-0x25ff0034],eax
  40cea3:	and    al,BYTE PTR gs:[eax]
  40cea6:	add    BYTE PTR [ebx+eax*4+0x0],bl
  40ceaa:	and    al,0xef
  40ceac:	push   cs
  40cead:	(bad)  
  40ceae:	inc    DWORD PTR [edi+edi*8-0x77]
  40ceb2:	and    eax,DWORD PTR [ebx+0x2583fff5]
  40ceb8:	cmp    edi,0xb
  40cebb:	aaa    
  40cebc:	pop    esp
  40cebd:	int3   
  40cebe:	add    edi,0xffffff89
  40cec1:	add    BYTE PTR [esi+0xff6518],al
  40cec7:	ret    
  40cec8:	(bad)  
  40cec9:	(bad)  
  40ceca:	jge    0x40ce53
  40cecc:	pop    ebp
  40cecd:	int3   
  40cece:	mov    edx,esp
  40ced0:	(bad)  
  40ced1:	dec    DWORD PTR [esi+0x29]
  40ced4:	sar    edi,1
  40ced6:	sbb    edx,0xffffffff
  40ced9:	call   DWORD PTR [esp+eiz*4+0x440000b8]
  40cee0:	add    bh,bh
  40cee2:	repnz or BYTE PTR [eax+0xe2ccff],bh
  40cee9:	add    bl,ch
  40ceeb:	mov    ds:0x1e83ff1e,eax
  40cef0:	add    bh,bh
  40cef2:	stos   BYTE PTR es:[edi],al
  40cef3:	mov    ds:0x52ff0053,eax
  40cef8:	(bad)  
  40cef9:	dec    DWORD PTR [ebx+0x2c]
  40cefc:	adc    DWORD PTR [ebx+0x3cc],eax
  40cf02:	cdq    
  40cf03:	sar    BYTE PTR [eax+eax*1-0x1],0x65
  40cf08:	add    bh,bh
  40cf0a:	rcr    esp,0x1b
  40cf0d:	int3   
  40cf0e:	dec    DWORD PTR [esi]
  40cf10:	(bad)  
  40cf11:	jmp    FWORD PTR [edi+ebp*2-0x5f7cffd6]
  40cf18:	add    bh,bh
  40cf1a:	shl    BYTE PTR [ecx-0x1d],0xff
  40cf1e:	call   DWORD PTR [edi]
  40cf20:	add    BYTE PTR [eax],al
  40cf22:	pop    ebx
  40cf23:	jecxz  0x40cf4b
  40cf25:	add    DWORD PTR [eax],0x59
  40cf28:	dec    esp
  40cf2a:	fdivrp st(4),st
  40cf2c:	push   ebx
  40cf2d:	int3   
  40cf2e:	add    BYTE PTR [ebx-0x37487c01],ah
  40cf34:	enter  0x83,0x6
  40cf38:	add    ah,cl
  40cf3a:	js     0x40ced7
  40cf3c:	ja     0x40cec1
  40cf3e:	call   DWORD PTR [ecx-0x56de7634]
  40cf44:	xor    ecx,esp
  40cf46:	or     DWORD PTR [ebp-0x2a373400],0xffffff85
  40cf4d:	int3   
  40cf4e:	int3   
  40cf4f:	ror    BYTE PTR [ecx+0x3390f4ff],1
  40cf55:	dec    esp
  40cf57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf58:	add    DWORD PTR [ebx+0x1698b3],0x0
  40cf5f:	sub    DWORD PTR [ebx+0x203875ff],eax
  40cf65:	(bad)  
  40cf66:	call   ecx
  40cf68:	add    DWORD PTR [ebx-0xcb60c5],0xffffffff
  40cf6f:	pop    edi
  40cf70:	int3   
  40cf71:	add    dh,dl
  40cf73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf74:	mov    ch,0xff
  40cf76:	inc    DWORD PTR [edi+edi*8-0x34]
  40cf7a:	or     al,0x89
  40cf7c:	inc    DWORD PTR ss:[eax]
  40cf7f:	and    ecx,esp
  40cf81:	inc    ecx
  40cf83:	mov    bh,cl
  40cf85:	inc    DWORD PTR [ebx+0x61ff0019]
  40cf8b:	hlt    
  40cf8c:	pop    edx
  40cf8d:	mov    DWORD PTR [eax],eax
  40cf8f:	cli    
  40cf90:	add    BYTE PTR [eax],al
  40cf92:	(bad)  
  40cf93:	out    0x5a,eax
  40cf95:	add    BYTE PTR [ebx+0x4400837e],al
  40cf9b:	mov    eax,0x5e008316
  40cfa0:	add    DWORD PTR [eax],0x21
  40cfa3:	ficomp DWORD PTR [edx]
  40cfa5:	add    BYTE PTR [eax],al
  40cfa7:	jle    0x40cfa9
  40cfa9:	dec    DWORD PTR [edx-0x7c82c7]
  40cfaf:	cmc    
  40cfb0:	inc    DWORD PTR [eax]
  40cfb2:	mov    edx,0x83ff0656
  40cfb7:	das    
  40cfb8:	mov    edi,edi
  40cfba:	repnz mov WORD PTR [edx],?
  40cfbd:	add    BYTE PTR [eax],al
  40cfbf:	mov    bh,0xff
  40cfc1:	int3   
  40cfc2:	and    dh,BYTE PTR [ecx+ebp*2-0x96ff77]
  40cfc9:	int3   
  40cfca:	jl     0x40cfe7
  40cfcc:	ret    
  40cfcd:	add    BYTE PTR [eax],al
  40cfcf:	or     eax,0xcb4700cc
  40cfd4:	call   0xcaff:0xff90ffff
  40cfdb:	push   esp
  40cfdc:	push   edx
  40cfdd:	int3   
  40cfde:	mov    DWORD PTR ds:0xfc57ffff,esp
  40cfe4:	imul   edi,edi,0xffff39ff
  40cfea:	int    0x54
  40cfec:	push   edi
  40cfed:	add    bh,bh
  40cfef:	(bad)  
  40cff0:	dec    DWORD PTR [ecx-0x76bde33a]
  40cff6:	call   FWORD PTR [edi]
  40cff8:	add    BYTE PTR [ebx-0x54a7a8],al
  40cffe:	dec    edx
  40d000:	add    BYTE PTR [eax],al
  40d002:	scas   al,BYTE PTR es:[edi]
  40d003:	enter  0x9c,0xff
  40d007:	idiv   edi
  40d009:	add    BYTE PTR [ebx-0x7c9941],dl
  40d00f:	retf   0x83ff
  40d012:	das    
  40d013:	sub    BYTE PTR [esi-0x1],0x0
  40d017:	(bad)  
  40d018:	inc    DWORD PTR [eax]
  40d01a:	jbe    0x40d05a
  40d01c:	scas   al,BYTE PTR es:[edi]
  40d01d:	mov    DWORD PTR [eax],eax
  40d01f:	mov    dh,0xff
  40d021:	add    cl,dl
  40d023:	ins    DWORD PTR es:[edi],dx
  40d024:	bound  eax,QWORD PTR [eax]
  40d026:	dec    DWORD PTR [ebp+0x0]
  40d029:	add    BYTE PTR [edi],bl
  40d02b:	sub    ch,BYTE PTR [eax+eax*1]
  40d02e:	add    BYTE PTR [esp+ecx*8-0x77],al
  40d032:	and    DWORD PTR [esi],esi
  40d034:	mov    ah,0x0
  40d036:	int3   
  40d037:	or     eax,0xd2c189ff
  40d03c:	(bad)  
  40d03d:	(bad)  
  40d03e:	dec    esp
  40d040:	mov    esp,ecx
  40d042:	fistp  WORD PTR [edx+0x3]
  40d045:	int3   
  40d046:	mov    DWORD PTR [ecx+ecx*4+0x2512b789],esi
  40d04d:	(bad)  
  40d04e:	jmp    FWORD PTR [esi+0x0]
  40d051:	inc    edx
  40d053:	jmp    0x40d0b6
  40d055:	add    BYTE PTR [ecx-0x7e0000c3],cl
  40d05b:	xchg   edx,eax
  40d05c:	adc    bh,bh
  40d05e:	add    BYTE PTR [ebx],bh
  40d060:	inc    DWORD PTR [eax]
  40d062:	push   0xffffffeb
  40d064:	push   0x832483ff
  40d069:	(bad)  
  40d06a:	fdivr  st,st(4)
  40d06c:	jo     0x40d06e
  40d06e:	add    BYTE PTR [esi-0x57bb0100],ah
  40d074:	or     al,0x89
  40d076:	mov    DWORD PTR [eax+0x0],ecx
  40d079:	add    BYTE PTR [edi],dl
  40d07b:	adc    bl,0x0
  40d07e:	call   ecx
  40d080:	(bad)  
  40d081:	push   DWORD PTR [ebp+0xffea55]
  40d087:	imul   eax,DWORD PTR [eax],0x0
  40d08a:	jae    0x40d0db
  40d08c:	mov    bh,0xff
  40d08e:	jmp    FWORD PTR [edi+edi*8-0x4ff88400]
  40d095:	(bad)  
  40d096:	push   DWORD PTR [edi-0x5d9b0000]
  40d09c:	outs   dx,BYTE PTR ds:[esi]
  40d09d:	inc    DWORD PTR [ebx+0x5bffff2e]
  40d0a3:	push   esi
  40d0a4:	and    eax,0xcc298300
  40d0a9:	xor    DWORD PTR [edx+0xff8a45],0xfffffff7
  40d0b0:	(bad)  
  40d0b1:	dec    DWORD PTR [esi-0x1e]
  40d0b4:	loope  0x40d0b6
  40d0b6:	int3   
  40d0b7:	mov    BYTE PTR [eax],0x0
  40d0ba:	sbb    ebx,DWORD PTR [ecx+0x55ffff04]
  40d0c0:	dec    esp
  40d0c2:	mov    ah,0x72
  40d0c4:	jmp    0x9acc:0xff430000
  40d0cb:	push   es
  40d0cc:	aad    0x0
  40d0ce:	call   DWORD PTR [ebp-0x11af0001]
  40d0d4:	mov    bl,0x0
  40d0d6:	int3   
  40d0d7:	mov    edi,0xda39cc00
  40d0dc:	sbb    al,0x83
  40d0de:	call   DWORD PTR [edi]
  40d0e0:	add    bh,bh
  40d0e2:	enter  0x3bc7,0x0
  40d0e6:	call   DWORD PTR [esi-0x34]
  40d0e9:	add    DWORD PTR ds:0x83cc2f29,0xffffff86
  40d0f0:	(bad)  
  40d0f1:	dec    DWORD PTR [edx-0x331a67]
  40d0f7:	dec    esi
  40d0f8:	add    BYTE PTR [eax],al
  40d0fa:	mov    eax,0x83ffb77e
  40d0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d100:	add    BYTE PTR [eax],al
  40d102:	xor    dh,BYTE PTR [ebp+0x7dff000d]
  40d108:	dec    DWORD PTR [ecx-0xd313ad]
  40d10e:	(bad)  
  40d10f:	jmp    0x89d3:0x45389ff
  40d116:	add    BYTE PTR [edx-0x419d7601],bl
  40d11c:	mov    al,ds:0xffecffff
  40d121:	add    bh,bl
  40d123:	fbld   TBYTE PTR [ecx-0x7c670100]
  40d129:	inc    DWORD PTR [ecx-0xffe75f]
  40d12f:	fdivr  st,st(7)
  40d131:	int3   
  40d132:	mov    DWORD PTR [esi+0x34ffff00],edx
  40d138:	cmp    edi,0xffffffdc
  40d13b:	sti    
  40d13c:	(bad)  
  40d13d:	(bad)  
  40d13e:	call   DWORD PTR ds:0xa968ffff
  40d144:	mov    WORD PTR [ebx+0x7c83],es
  40d14a:	mov    eax,ds:0xff5fa5
  40d14f:	dec    esi
  40d150:	add    bh,bh
  40d152:	cmp    BYTE PTR [eax],al
  40d154:	(bad)  
  40d156:	dec    DWORD PTR [edi+edi*8-0x34]
  40d15a:	mov    eax,ds:0xff00eb3e
  40d15f:	jb     0x40d160
  40d161:	add    BYTE PTR [eax+0x24],dl
  40d164:	xchg   edx,eax
  40d165:	add    BYTE PTR [eax],al
  40d167:	dec    ebp
  40d168:	inc    DWORD PTR [eax]
  40d16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16b:	mov    ecx,0x14ffff3c
  40d170:	(bad)  
  40d171:	jmp    FWORD PTR [edi-0xff285e]
  40d177:	push   ecx
  40d178:	int3   
  40d179:	mov    DWORD PTR [edi-0x761006],esp
  40d17f:	repnz cmp edi,0x6c
  40d183:	loopne 0x40d13a
  40d185:	(bad)  
  40d186:	dec    DWORD PTR [esi-0x1]
  40d189:	add    BYTE PTR [edx+eax*4+0x30ffcc83],bh
  40d190:	add    bh,bh
  40d192:	and    bh,BYTE PTR ds:0xbb8900fd
  40d198:	or     esp,0xffffffba
  40d19b:	sbb    cl,BYTE PTR [ebp+0x0]
  40d19e:	call   DWORD PTR [esp+ecx*8-0x1]
  40d1a2:	enter  0x9391,0xff
  40d1a6:	call   DWORD PTR [edi]
  40d1a8:	(bad)  
  40d1a9:	dec    DWORD PTR [edx]
  40d1ab:	stc    
  40d1ac:	inc    edi
  40d1ad:	inc    DWORD PTR [eax]
  40d1af:	push   ss
  40d1b0:	(bad)  
  40d1b1:	jmp    DWORD PTR [ebx]
  40d1b3:	dec    bx
  40d1b5:	dec    DWORD PTR [ecx-0x41ff002d]
  40d1bb:	cmp    al,0x81
  40d1bd:	add    bh,bh
  40d1bf:	into   
  40d1c0:	mov    DWORD PTR [ebx-0x7c930b17],eax
  40d1c6:	add    BYTE PTR [ebx-0x34],al
  40d1c9:	dec    DWORD PTR [edx-0x46]
  40d1cc:	sub    edi,edi
  40d1ce:	add    BYTE PTR [ebx],cl
  40d1d0:	add    BYTE PTR [ecx+0x3874c8],cl
  40d1d6:	dec    DWORD PTR [esi-0x34]
  40d1d9:	call   FWORD PTR [edi-0x7ce6ad]
  40d1df:	clc    
  40d1e0:	add    bh,bh
  40d1e2:	hlt    
  40d1e3:	push   0x17
  40d1e5:	inc    DWORD PTR [ebx-0x3e00ffee]
  40d1eb:	mov    bh,0xe3
  40d1ed:	(bad)  
  40d1ee:	inc    DWORD PTR [ebx+eax*4]
  40d1f1:	call   FWORD PTR [ebp+0xff4c33]
  40d1f7:	xor    eax,0x26f0ff83
  40d1fc:	aad    0x83
  40d1fe:	add    BYTE PTR [ebx-0x794f7601],ah
  40d204:	dec    eax
  40d205:	int3   
  40d206:	call   ecx
  40d208:	(bad)  
  40d209:	call   FWORD PTR [edx+edi*8+0x53ff0062]
  40d210:	int3   
  40d211:	call   DWORD PTR [eax]
  40d213:	retf   
  40d214:	mov    al,ds:0xfbff83
  40d219:	mov    DWORD PTR [esp+esi*1+0x1d8983f7],eax
  40d220:	(bad)  
  40d221:	(bad)  
  40d222:	fst    DWORD PTR [ecx-0x3c]
  40d225:	(bad)  
  40d226:	jmp    FWORD PTR [esi]
  40d228:	(bad)  
  40d229:	(bad)  
  40d22a:	ds hlt 
  40d22c:	aam    0x83
  40d22e:	(bad)  
  40d22f:	stc    
  40d230:	mov    DWORD PTR [ebx-0xa97865],eax
  40d236:	jmp    FWORD PTR ds:0x9ec3cc89
  40d23c:	xchg   edx,eax
  40d23d:	add    bh,bh
  40d23f:	cdq    
  40d240:	dec    DWORD PTR [ecx-0xeeae42]
  40d246:	add    BYTE PTR ds:0xcbf9ff00,cl
  40d24c:	and    bh,bh
  40d24e:	add    BYTE PTR [ecx+0x9380000],ch
  40d254:	loopne 0x40d1d9
  40d256:	add    BYTE PTR [ebx-0x11837601],bh
  40d25c:	sbb    al,0x0
  40d25e:	mov    ecx,esi
  40d260:	(bad)  
  40d261:	(bad)  
  40d262:	fimul  WORD PTR [eax]
  40d264:	(bad)  
  40d265:	int3   
  40d266:	inc    DWORD PTR [ecx+ecx*4+0x27217c83]
  40d26d:	(bad)  
  40d26e:	(bad)  
  40d26f:	mov    eax,0xab7b8300
  40d274:	fld    QWORD PTR [eax]
  40d276:	jmp    FWORD PTR [eax]
  40d278:	add    BYTE PTR [ebx-0x70c22e],al
  40d27e:	add    BYTE PTR [esi+0x63020083],dh
  40d284:	in     eax,dx
  40d285:	add    bh,bh
  40d287:	push   ds
  40d288:	add    DWORD PTR [eax],0x33
  40d28b:	cdq    
  40d28c:	push   ecx
  40d28d:	(bad)  
  40d28e:	push   edx
  40d290:	add    DWORD PTR [eax],0x54
  40d293:	and    esi,DWORD PTR [edi-0x1]
  40d296:	add    BYTE PTR [ecx+0x64e10083],ch
  40d29c:	aas    
  40d29d:	(bad)  
  40d29e:	jmp    DWORD PTR [ebx-0x442e7d00]
  40d2a4:	pop    esp
  40d2a5:	dec    DWORD PTR [ecx-0x10000d7]
  40d2ab:	or     eax,0xbaffffb5
  40d2b0:	cmp    edi,0x54
  40d2b3:	fcmovne st,st(2)
  40d2b5:	add    BYTE PTR [eax],al
  40d2b7:	and    eax,0xdb41ffff
  40d2bc:	cmp    bh,bh
  40d2be:	mov    DWORD PTR [ebp-0x1],ebp
  40d2c1:	add    BYTE PTR [esi-0xd117],bl
  40d2c7:	call   0xb0c65c4f
  40d2cc:	fild   WORD PTR [eax]
  40d2ce:	(bad)  
  40d2cf:	mov    edi,0x4b47ffcc
  40d2d4:	xchg   esi,eax
  40d2d5:	(bad)  
  40d2d6:	push   eax
  40d2d8:	dec    esp
  40d2da:	sub    eax,0xfffff482
  40d2df:	mov    al,ds:0x858200ff
  40d2e4:	cld    
  40d2e5:	add    BYTE PTR [ecx+0x5eff009d],cl
  40d2eb:	gs sub al,0x83
  40d2ee:	add    dl,ah
  40d2f0:	add    bh,bh
  40d2f2:	or     ch,BYTE PTR [esi+0x6300ffa0]
  40d2f8:	add    bh,bh
  40d2fa:	in     eax,dx
  40d2fb:	popf   
  40d2fc:	mov    edx,0x9a0000
  40d301:	add    BYTE PTR [ebx-0x7c005145],cl
  40d307:	inc    DWORD PTR es:[eax]
  40d30a:	sahf   
  40d30b:	cdq    
  40d30c:	lahf   
  40d30d:	inc    DWORD PTR [ebx+0x4cffccae]
  40d313:	mov    bh,0x5e
  40d315:	add    BYTE PTR [eax],al
  40d317:	dec    ebp
  40d318:	add    DWORD PTR [eax],0x48
  40d31b:	cmovne eax,DWORD PTR [eax]
  40d31e:	call   ecx
  40d320:	mov    DWORD PTR [eax],eax
  40d322:	add    al,0xce
  40d324:	jns    0x40d325
  40d326:	(bad)  
  40d327:	cmp    al,0x83
  40d329:	sbb    DWORD PTR [esi],0x74
  40d32c:	ror    BYTE PTR [ecx+0xffa600],0x49
  40d333:	bts    edi,edi
  40d336:	call   DWORD PTR [ebx+0x0]
  40d339:	inc    DWORD PTR [edx]
  40d33b:	and    al,0xf5
  40d33d:	inc    DWORD PTR [ebx+0x5500ff06]
  40d343:	xor    ebp,esp
  40d345:	add    BYTE PTR [ebx-0x2d7cffd4],al
  40d34b:	gs adc edi,edi
  40d34e:	add    BYTE PTR [ecx-0x73207c7d],al
  40d354:	leave  
  40d355:	int3   
  40d356:	add    BYTE PTR ds:0x90840089,cl
  40d35c:	mov    edi,0xcc2d00ff
  40d361:	add    BYTE PTR [eax+0x37],ah
  40d364:	ins    DWORD PTR es:[edi],dx
  40d365:	(bad)  
  40d366:	jmp    esp
  40d368:	add    BYTE PTR [eax],al
  40d36a:	(bad)  
  40d36b:	cmc    
  40d36c:	(bad)  
  40d36e:	int3   
  40d36f:	or     al,BYTE PTR [eax]
  40d371:	add    dh,dl
  40d373:	ret    
  40d374:	lods   eax,DWORD PTR ds:[esi]
  40d375:	(bad)  
  40d376:	call   ebx
  40d378:	or     esp,0x41
  40d37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d37c:	fcos   
  40d37e:	mov    DWORD PTR [esi],eax
  40d380:	add    BYTE PTR [ecx-0x767510ad],cl
  40d386:	inc    DWORD PTR [ebx]
  40d388:	add    BYTE PTR [eax],al
  40d38a:	out    dx,al
  40d38b:	add    cl,ch
  40d38d:	cmp    edi,0xffffffa8
  40d390:	inc    DWORD PTR [eax]
  40d392:	repnz pop ds
  40d394:	lods   eax,DWORD PTR ds:[esi]
  40d395:	(bad)  
  40d396:	dec    ebx
  40d398:	(bad)  
  40d399:	call   FWORD PTR [esi+0x890dc4]
  40d39f:	repnz inc DWORD PTR [eax]
  40d3a2:	pop    esp
  40d3a3:	(bad)  
  40d3a5:	inc    DWORD PTR [eax]
  40d3a7:	xchg   esp,eax
  40d3a8:	inc    DWORD PTR [eax]
  40d3aa:	in     al,dx
  40d3ab:	jae    0x40d3af
  40d3ad:	add    bh,bh
  40d3af:	pop    ss
  40d3b0:	add    bh,bh
  40d3b2:	mov    dh,0xb3
  40d3b4:	sahf   
  40d3b5:	inc    DWORD PTR [eax]
  40d3b7:	or     ah,0xff
  40d3ba:	xor    DWORD PTR [ecx],edi
  40d3bc:	mov    bh,bh
  40d3be:	push   edi
  40d3c0:	(bad)  
  40d3c1:	(bad)  
  40d3c2:	fdiv   DWORD PTR [edx+0x20ffcc60]
  40d3c8:	inc    DWORD PTR [eax]
  40d3ca:	dec    esp
  40d3cb:	jnp    0x40d43d
  40d3cd:	add    BYTE PTR [ebx-0x51ffff55],al
  40d3d3:	cmp    ch,cl
  40d3d5:	(bad)  
  40d3d6:	inc    DWORD PTR [edi+0x7dc1ffff]
  40d3dc:	sbb    DWORD PTR [eax],eax
  40d3de:	call   DWORD PTR [ecx]
  40d3e0:	add    BYTE PTR [eax],al
  40d3e2:	out    0x50,eax
  40d3e4:	push   cs
  40d3e5:	inc    DWORD PTR [ebx+0x708300d6]
  40d3eb:	ds retf 0xcc00
  40d3ef:	mov    bh,bh
  40d3f1:	add    BYTE PTR [edx],al
  40d3f3:	call   0x91cad34c
  40d3f8:	inc    DWORD PTR [eax]
  40d3fa:	hlt    
  40d3fb:	in     eax,0x29
  40d3fd:	inc    DWORD PTR [eax]
  40d3ff:	or     al,0x0
  40d401:	add    DWORD PTR [edi+0x6a],0x4c
  40d405:	inc    DWORD PTR [eax]
  40d407:	fiadd  WORD PTR [eax]
  40d409:	add    DWORD PTR [eax],0xffffffb4
  40d40c:	jo     0x40d40d
  40d40e:	mov    DWORD PTR [esi],esi
  40d410:	inc    DWORD PTR [eax]
  40d412:	test   BYTE PTR ds:0xdd838324,bl
  40d418:	add    BYTE PTR [eax],al
  40d41a:	outs   dx,BYTE PTR ds:[esi]
  40d41b:	retf   0x93
  40d41e:	add    BYTE PTR [edi-0x77],cl
  40d421:	inc    DWORD PTR [ecx+0x15]
  40d424:	push   esp
  40d425:	add    bh,bh
  40d427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d428:	add    BYTE PTR [eax],al
  40d42a:	fdivr  DWORD PTR [ebx+0x34ffff30]
  40d430:	(bad)  
  40d431:	inc    DWORD PTR [eax+ebx*2]
  40d434:	push   cs
  40d435:	add    BYTE PTR [ebx+0x2d83ff03],al
  40d43b:	aas    
  40d43c:	lock cmp edi,0x7e
  40d440:	add    DWORD PTR [eax],0x36
  40d443:	out    dx,eax
  40d444:	mov    ah,0xff
  40d446:	add    BYTE PTR [ebx-0x18d60001],ch
  40d44c:	inc    ecx
  40d44d:	(bad)  
  40d44e:	push   DWORD PTR [edi+0x0]
  40d451:	add    BYTE PTR [ebp-0x71],al
  40d454:	adc    eax,0x700083
  40d459:	inc    ecx
  40d45b:	neg    BYTE PTR [edx+0x9ffff]
  40d461:	add    BYTE PTR ds:0xff33c3,al
  40d467:	inc    edi
  40d468:	add    DWORD PTR [ebx-0x7c8d71f7],0xffffff83
  40d46f:	pop    ds
  40d470:	mov    edi,edi
  40d472:	push   ds
  40d473:	mov    DWORD PTR ds:0x15ffcc,edx
  40d479:	jmp    FWORD PTR [ecx+0x2e]
  40d47c:	sub    bh,bh
  40d47e:	add    BYTE PTR [eax+eax*1],al
  40d481:	dec    DWORD PTR [edx+edx*2-0x74]
  40d485:	cmp    edi,0x56
  40d488:	or     DWORD PTR [ecx-0x94deea],0xffffff83
  40d48f:	xchg   esp,eax
  40d490:	(bad)  
  40d491:	push   DWORD PTR [edi]
  40d493:	call   0xff:0x46ff002f
  40d49a:	sbb    al,0x56
  40d49c:	jb     0x40d421
  40d49e:	call   DWORD PTR [esi-0x136007d]
  40d4a4:	or     BYTE PTR [ebx+0x3283],al
  40d4aa:	pop    ecx
  40d4ab:	cmp    dl,BYTE PTR ds:0x83c0cc83
  40d4b1:	add    BYTE PTR [ebp+ebx*8+0x7883ffc0],dl
  40d4b8:	int3   
  40d4b9:	call   DWORD PTR [edx+0xff0fc7]
  40d4bf:	xlat   BYTE PTR ds:[ebx]
  40d4c0:	inc    DWORD PTR [eax]
  40d4c2:	stos   BYTE PTR es:[edi],al
  40d4c3:	xor    BYTE PTR [edi-0x3cff7d],bl
  40d4c9:	(bad)  
  40d4ca:	jge    0x40d46e
  40d4cc:	adc    DWORD PTR [eax],eax
  40d4ce:	add    ebp,0xffffffff
  40d4d1:	int3   
  40d4d2:	push   0xeb97
  40d4d7:	add    bh,bh
  40d4d9:	inc    DWORD PTR [edx-0x73]
  40d4dc:	push   ebx
  40d4dd:	inc    DWORD PTR [eax]
  40d4df:	mov    dl,0x0
  40d4e1:	call   FWORD PTR ds:0xff00d52c
  40d4e7:	out    0xff,al
  40d4e9:	dec    DWORD PTR [edi]
  40d4eb:	mov    ds:0xb6ccffe6,al
  40d4f0:	int3   
  40d4f1:	call   FWORD PTR [esi+0x72]
  40d4f4:	sbb    edi,edi
  40d4f6:	push   DWORD PTR [edi+edi*8+0x5d143ecc]
  40d4fd:	add    bh,bh
  40d4ff:	mov    eax,ds:0x2effffff
  40d504:	clc    
  40d505:	inc    DWORD PTR [eax]
  40d507:	inc    edx
  40d508:	cmp    edi,0xffffff86
  40d50b:	jo     0x40d53b
  40d50d:	(bad)  
  40d50e:	(bad)  
  40d50f:	mov    edi,0x7caff89
  40d514:	mov    al,ds:0x8332ff00
  40d519:	int3   
  40d51a:	pop    ebx
  40d51b:	jmp    0xff83:0x7c00006f
  40d522:	xor    ecx,eax
  40d524:	adc    DWORD PTR [ecx-0xffca01],ecx
  40d52a:	jg     0x40d543
  40d52c:	in     eax,dx
  40d52d:	inc    DWORD PTR [eax]
  40d52f:	cmc    
  40d530:	add    BYTE PTR [eax],al
  40d532:	mov    ebx,0x6ee2
  40d537:	xchg   ebp,eax
  40d538:	add    bh,bh
  40d53a:	inc    esp
  40d53b:	inc    esi
  40d53c:	pop    ecx
  40d53d:	(bad)  
  40d53e:	jmp    DWORD PTR [edi+0x0]
  40d541:	add    bl,bl
  40d543:	add    DWORD PTR [ebx+eax*4-0x34],edi
  40d547:	add    DWORD PTR [bp+di-0x6cbd],0x23
  40d54d:	add    BYTE PTR [eax],al
  40d54f:	dec    esi
  40d550:	inc    DWORD PTR [eax]
  40d552:	inc    ecx
  40d553:	mov    BYTE PTR [edx-0x77],cl
  40d556:	cmp    eax,0xffffffff
  40d559:	mov    DWORD PTR ds:0xffffd3b2,esi
  40d55f:	push   ebx
  40d560:	dec    DWORD PTR [ecx-0x2539d6]
  40d566:	inc    DWORD PTR [edi-0x6f150001]
  40d56c:	jnp    0x40d56e
  40d56e:	jmp    DWORD PTR [edi+edi*8+0x3b2ce1ff]
  40d575:	add    BYTE PTR [ebx+0x4489ff06],al
  40d57b:	es mov edi,?
  40d57e:	and    DWORD PTR [edx-0xe31007d],0xfffffff4
  40d585:	int3   
  40d586:	(bad)  
  40d587:	inc    DWORD PTR [eax]
  40d589:	mov    DWORD PTR [ecx+0x1],edx
  40d58c:	jl     0x40d58e
  40d58e:	add    BYTE PTR [edx],dh
  40d590:	add    BYTE PTR [ecx-0x76f39ab3],cl
  40d596:	jmp    DWORD PTR [ebx]
  40d598:	inc    DWORD PTR [eax]
  40d59a:	lods   al,BYTE PTR ds:[esi]
  40d59b:	in     eax,dx
  40d59c:	(bad)  
  40d59d:	(bad)  
  40d59e:	jmp    FWORD PTR [edx-0x4e917d00]
  40d5a4:	sbb    DWORD PTR [eax],eax
  40d5a6:	(bad)  
  40d5a7:	inc    DWORD PTR [eax]
  40d5a9:	add    BYTE PTR [edx-0x1b],ch
  40d5ac:	jecxz  0x40d5ae
  40d5ae:	add    BYTE PTR [edi+edi*8],cl
  40d5b1:	(bad)  
  40d5b2:	mov    edi,0x891569
  40d5b7:	inc    ecx
  40d5b8:	add    bh,bh
  40d5ba:	repnz xchg esp,eax
  40d5bc:	xor    DWORD PTR [ebx+0xfffb00],eax
  40d5c2:	cmp    BYTE PTR [ebp+ebx*2-0x1],al
  40d5c6:	jmp    edi
  40d5c8:	add    bh,bh
  40d5ca:	call   0xce:0xffff3064
  40d5d1:	add    al,bl
  40d5d3:	xor    esp,eax
  40d5d5:	add    bh,bh
  40d5d7:	aaa    
  40d5d8:	cmp    edi,0xb
  40d5db:	lds    ecx,FWORD PTR [ebp-0xec0000]
  40d5e1:	add    DWORD PTR [edx],0x63
  40d5e4:	sbb    edi,edi
  40d5e6:	add    BYTE PTR [ebp+0x26d400ff],dh
  40d5ec:	adc    eax,DWORD PTR [eax]
  40d5ee:	mov    DWORD PTR [edx-0x77],edi
  40d5f1:	int3   
  40d5f2:	mov    edi,0x89893d52
  40d5f7:	dec    DWORD PTR fs:[ecx-0xf8a950]
  40d5fe:	(bad)  
  40d5ff:	sti    
  40d600:	inc    DWORD PTR [eax]
  40d602:	gs pop ds
  40d604:	inc    edx
  40d605:	(bad)  
  40d606:	dec    DWORD PTR [eax+eax*1-0x7d]
  40d60a:	pop    esi
  40d60b:	fisub  DWORD PTR [ebx+0x5eff83]
  40d611:	dec    DWORD PTR [edx]
  40d613:	fwait
  40d614:	or     al,0x89
  40d616:	add    BYTE PTR [ecx],al
  40d618:	int3   
  40d619:	mov    DWORD PTR [edx+0x63],esi
  40d61c:	push   0x30ffcc
  40d621:	mov    DWORD PTR [eax-0x40],ebx
  40d624:	sbb    eax,0x83ddffcc
  40d629:	adc    DWORD PTR [esi-0x7600579f],0x3
  40d630:	add    BYTE PTR [eax],al
  40d632:	push   ebx
  40d633:	retf   
  40d634:	pop    ds
  40d635:	add    BYTE PTR [ebx+0x80083ee],al
  40d63b:	jnp    0x40d67a
  40d63d:	add    BYTE PTR [eax],al
  40d63f:	push   ds
  40d640:	int3   
  40d641:	call   DWORD PTR [ecx]
  40d643:	cmp    ecx,esi
  40d645:	add    BYTE PTR [eax],al
  40d647:	test   eax,0xfc86ff89
  40d64c:	retf   0xff00
  40d64f:	xchg   ebp,eax
  40d650:	inc    DWORD PTR [ebx-0x4d9410]
  40d656:	add    BYTE PTR ds:0x13c2ff00,dh
  40d65c:	ret    
  40d65d:	(bad)  
  40d65e:	inc    DWORD PTR [ecx+0x0]
  40d661:	add    BYTE PTR [eax+0xff7cfa],bh
  40d667:	in     eax,0xff
  40d669:	push   DWORD PTR [eax-0x8efa]
  40d66f:	mov    ah,cl
  40d671:	add    BYTE PTR [ecx],dh
  40d673:	push   ebp
  40d674:	inc    edi
  40d675:	dec    esp
  40d677:	jmp    0x40d679
  40d679:	cmp    edx,0xffffffff
  40d67c:	adc    eax,DWORD PTR [eax]
  40d67e:	inc    DWORD PTR [ebx]
  40d680:	mov    edi,edi
  40d682:	call   0x41354f
  40d687:	bound  eax,QWORD PTR [eax]
  40d689:	int3   
  40d68a:	aaa    
  40d68b:	leave  
  40d68c:	cmp    al,BYTE PTR [eax]
  40d68e:	dec    DWORD PTR [ebp+0x0]
  40d691:	push   DWORD PTR [edi+0xaee4]
  40d697:	add    DWORD PTR [eax],0xffffff83
  40d69a:	cld    
  40d69b:	adc    bl,dh
  40d69d:	(bad)  
  40d69e:	inc    DWORD PTR [edi]
  40d6a0:	add    bh,bh
  40d6a2:	xor    BYTE PTR [ecx+0x41],dl
  40d6a5:	add    bh,bh
  40d6a7:	xchg   bh,bh
  40d6a9:	cmp    DWORD PTR [edx+0x3b],0xfffffffe
  40d6ad:	(bad)  
  40d6ae:	inc    DWORD PTR [eax-0x1]
  40d6b1:	cmp    ecx,0x9
  40d6b4:	or     eax,0xff3d00ff
  40d6b9:	(bad)  
  40d6ba:	cld    
  40d6bb:	sbb    al,0x3c
  40d6bd:	add    bh,bh
  40d6bf:	int    0x89
  40d6c1:	push   DWORD PTR [edi+0x3f]
  40d6c4:	or     edi,edi
  40d6c6:	(bad)  
  40d6c7:	mov    esp,0x1d40ffff
  40d6cc:	and    al,BYTE PTR [eax]
  40d6ce:	add    ch,ah
  40d6d0:	dec    esp
  40d6d2:	mov    dl,BYTE PTR [eax]
  40d6d4:	stc    
  40d6d5:	add    BYTE PTR [ebx-0x6500005a],al
  40d6db:	or     dl,ah
  40d6dd:	inc    DWORD PTR [ebx-0x610000ed]
  40d6e3:	imul   ebp,DWORD PTR [esi-0x1],0xcc832483
  40d6ea:	add    ch,dl
  40d6ec:	sar    bh,cl
  40d6ee:	add    DWORD PTR [eax-0x1],0x0
  40d6f2:	inc    eax
  40d6f3:	xor    ch,BYTE PTR [ebx+eax*4-0x7c005501]
  40d6fa:	mul    BYTE PTR [ebx]
  40d6fc:	dec    eax
  40d6fd:	add    BYTE PTR [ebx+0x6200ffc8],al
  40d703:	es pop ds
  40d705:	int3   
  40d706:	inc    DWORD PTR [edi]
  40d708:	(bad)  
  40d709:	(bad)  
  40d70a:	jp     0x40d757
  40d70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d70d:	add    bh,bh
  40d70f:	rol    DWORD PTR [eax],cl
  40d711:	jmp    FWORD PTR [edx]
  40d713:	xchg   ebx,eax
  40d714:	fiadd  WORD PTR [eax]
  40d716:	mov    DWORD PTR [esi],edx
  40d718:	add    DWORD PTR [eax],0x30
  40d71b:	fmul   DWORD PTR [edx]
  40d71d:	inc    DWORD PTR [eax]
  40d71f:	pop    eax
  40d720:	add    bh,bh
  40d722:	rcr    BYTE PTR ds:0x1983ff9a,0xcc
  40d729:	push   DWORD PTR [ebp+0x25]
  40d72c:	mov    ecx,0xcc6e8900
  40d731:	add    BYTE PTR [edx-0x7cffc458],dh
  40d737:	mov    di,di
  40d73a:	mov    ch,0xf9
  40d73c:	or     al,0xff
  40d73e:	call   ebx
  40d740:	add    DWORD PTR [eax],0x25
  40d743:	out    dx,al
  40d744:	lods   eax,DWORD PTR ds:[esi]
  40d745:	inc    DWORD PTR [eax]
  40d747:	mov    al,0xff
  40d749:	sbb    ecx,0xffffff96
  40d74c:	cmp    esp,ecx
  40d74e:	jmp    DWORD PTR [edi]
  40d750:	inc    DWORD PTR [eax]
  40d752:	iret   
  40d753:	mov    dl,0xb1
  40d755:	add    BYTE PTR [ebx+0x12000091],al
  40d75b:	lods   al,BYTE PTR ds:[esi]
  40d75c:	adc    al,BYTE PTR [eax]
  40d75e:	(bad)  
  40d75f:	jmp    0x31a56163
  40d764:	sbb    al,BYTE PTR [eax]
  40d766:	call   FWORD PTR [edi+edi*8+0x1b96f400]
  40d76d:	add    DWORD PTR [eax],0x6e
  40d770:	inc    DWORD PTR [eax]
  40d772:	xchg   esp,eax
  40d773:	gs jl  0x40d775
  40d776:	xor    DWORD PTR [edi-0x1],0xffffffff
  40d77a:	sub    eax,0xf6ffff26
  40d780:	int3   
  40d781:	dec    DWORD PTR [ebp-0x24]
  40d784:	cmp    edi,0xffffffff
  40d787:	addr16 (bad) 
  40d789:	call   DWORD PTR [edi-0x33ff922e]
  40d78f:	pop    ebp
  40d790:	inc    DWORD PTR [eax]
  40d792:	jmp    0x40d761
  40d794:	stc    
  40d795:	(bad)  
  40d796:	call   FWORD PTR [edi-0x1]
  40d799:	add    dl,bl
  40d79b:	sub    DWORD PTR [ecx],0xffffffff
  40d79e:	inc    DWORD PTR [edi-0x77]
  40d7a1:	mov    DWORD PTR [ecx-0x7c76cf38],ebx
  40d7a7:	push   ds
  40d7a8:	dec    esp
  40d7aa:	pusha  
  40d7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ac:	ret    0x8389
  40d7af:	outs   dx,BYTE PTR ds:[esi]
  40d7b0:	add    BYTE PTR [ebx-0xe83c58],al
  40d7b6:	int3   
  40d7b7:	retf   0xffff
  40d7ba:	pop    eax
  40d7bb:	mov    al,0xf3
  40d7bd:	add    bh,bh
  40d7bf:	sub    eax,0x447fff00
  40d7c4:	mov    bh,0x89
  40d7c6:	int3   
  40d7c7:	jg     0x40d7c9
  40d7c9:	add    DWORD PTR [eax-0xfb6],0xffffffc6
  40d7d0:	int3   
  40d7d1:	jmp    ebx
  40d7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7d4:	nop
  40d7d5:	(bad)  
  40d7d6:	jmp    DWORD PTR [eax+0x4092cc00]
  40d7dc:	test   DWORD PTR [ebx-0x7600e401],eax
  40d7e2:	out    dx,al
  40d7e3:	lods   al,BYTE PTR ds:[esi]
  40d7e4:	outs   dx,DWORD PTR ds:[esi]
  40d7e5:	inc    DWORD PTR [eax]
  40d7e7:	leave  
  40d7e8:	mov    DWORD PTR [ebx+0xd1afa3],eax
  40d7ee:	adc    DWORD PTR [edx+0x7df0ff00],0xe
  40d7f5:	inc    DWORD PTR [eax]
  40d7f7:	jp     0x40d7c5
  40d7f9:	add    BYTE PTR [esi+0x53],bl
  40d7fc:	sahf   
  40d7fd:	inc    DWORD PTR [eax]
  40d7ff:	sub    edi,edi
  40d801:	add    dh,bl
  40d803:	adc    eax,0x37ccff68
  40d808:	(bad)  
  40d809:	(bad)  
  40d80a:	stc    
  40d80b:	add    eax,0xc8ff0057
  40d810:	(bad)  
  40d811:	push   DWORD PTR [ecx-0x3a]
  40d814:	pop    ds
  40d815:	add    BYTE PTR [eax],al
  40d817:	ins    BYTE PTR es:[edi],dx
  40d818:	add    BYTE PTR [eax],al
  40d81a:	push   edi
  40d81b:	jle    0x40d886
  40d81d:	add    bh,bh
  40d81f:	sar    bh,1
  40d821:	mov    DWORD PTR [esp+edx*2],ebx
  40d824:	pop    edx
  40d825:	int3   
  40d826:	mov    DWORD PTR [esi-0x23100100],esp
  40d82c:	mov    esp,0xca8389
  40d831:	jmp    DWORD PTR [eax+0x43]
  40d834:	inc    ebp
  40d835:	int3   
  40d836:	(bad)  
  40d837:	mov    ebx,0xa1d083ff
  40d83c:	aas    
  40d83d:	cmp    edi,0x2
  40d840:	inc    DWORD PTR [ebx-0xa40c4d]
  40d846:	inc    DWORD PTR [ebx]
  40d848:	int3   
  40d849:	add    BYTE PTR [esi-0xff9559],cl
  40d84f:	repnz int3 
  40d851:	adc    DWORD PTR [ecx-0x904d],0x6c
  40d858:	add    DWORD PTR [eax],0x3b
  40d85b:	out    dx,eax
  40d85c:	mov    bh,bh
  40d85e:	add    BYTE PTR [edi-0x7d],bl
  40d861:	call   DWORD PTR [ebp-0x7c6369]
  40d867:	mov    eax,0xc0e7ffff
  40d86c:	add    BYTE PTR cs:[ebx-0x167c33c9],al
  40d873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d874:	push   es
  40d875:	add    BYTE PTR [ebx+0x2c00ffc8],al
  40d87b:	loop   0x40d80c
  40d87d:	inc    DWORD PTR [eax]
  40d87f:	outs   dx,BYTE PTR ds:[esi]
  40d880:	(bad)  
  40d881:	dec    ebx
  40d883:	imul   edi,eax,0xffffffcc
  40d886:	add    BYTE PTR [ebx-0x33a73301],bh
  40d88c:	arpl   di,di
  40d88e:	add    BYTE PTR [edi-0x41e20100],ah
  40d894:	mov    ds:0xffd583ff,eax
  40d899:	add    BYTE PTR [edx-0x7c003f76],ah
  40d89f:	xchg   ebx,eax
  40d8a0:	add    bh,bh
  40d8a2:	mov    dl,dl
  40d8a4:	rol    DWORD PTR [eax],cl
  40d8a6:	add    BYTE PTR [edi+0x0],cl
  40d8a9:	call   FWORD PTR [edi-0x76008ca5]
  40d8af:	lods   eax,DWORD PTR ds:[esi]
  40d8b0:	add    bh,bh
  40d8b2:	mov    ah,0x39
  40d8b4:	nop
  40d8b5:	(bad)  
  40d8b6:	inc    DWORD PTR [esi-0x1]
  40d8b9:	int3   
  40d8ba:	fadd   QWORD PTR [ebx-0xb]
  40d8bd:	inc    DWORD PTR [eax]
  40d8bf:	mov    bl,0xff
  40d8c1:	int3   
  40d8c2:	adc    al,0xda
  40d8c4:	add    BYTE PTR [eax],al
  40d8c6:	push   DWORD PTR [edx]
  40d8c8:	add    BYTE PTR [eax],al
  40d8ca:	ins    DWORD PTR es:[edi],dx
  40d8cb:	rcr    BYTE PTR ds:0xcc7dff00,1
  40d8d1:	push   DWORD PTR [eax+0xff87b2]
  40d8d7:	or     eax,0xa7ecffff
  40d8dc:	inc    ebp
  40d8dd:	inc    DWORD PTR [eax]
  40d8df:	or     bh,bh
  40d8e1:	int3   
  40d8e2:	outs   dx,DWORD PTR ds:[esi]
  40d8e3:	rcl    cl,cl
  40d8e5:	inc    DWORD PTR [eax]
  40d8e7:	int3   
  40d8e8:	dec    DWORD PTR [ecx-0x320666]
  40d8ee:	sub    DWORD PTR [edx-0x7d],0xffffff89
  40d8f2:	mov    ds:0xff83cfda,eax
  40d8f7:	dec    esp
  40d8f8:	inc    DWORD PTR [eax]
  40d8fa:	arpl   WORD PTR [edi],sp
  40d8fc:	rol    BYTE PTR [ebx+0xff24ff],cl
  40d902:	enter  0x806d,0xff
  40d906:	mov    DWORD PTR [eax+0x732400ff],eax
  40d90c:	jbe    0x40d90d
  40d90e:	int3   
  40d90f:	dec    ebx
  40d910:	inc    DWORD PTR [eax]
  40d912:	iret   
  40d913:	inc    ebp
  40d914:	or     eax,0x170000
  40d919:	add    BYTE PTR [eax],dl
  40d91b:	add    DWORD PTR [edx-0x1],0x8300e6ff
  40d922:	ss pop ebx
  40d924:	test   DWORD PTR [eax],0xff74ff
  40d92a:	dec    edx
  40d92b:	(bad)  
  40d92d:	add    BYTE PTR [eax],al
  40d92f:	popa   
  40d930:	(bad)  
  40d931:	push   DWORD PTR [edx+0x51]
  40d934:	aaa    
  40d935:	(bad)  
  40d936:	call   DWORD PTR [edi+edi*8]
  40d939:	dec    eax
  40d93b:	or     esp,DWORD PTR [esi]
  40d93d:	int3   
  40d93e:	add    BYTE PTR [esi+0x0],dl
  40d941:	call   DWORD PTR [esi]
  40d943:	imul   ecx,DWORD PTR [eax-0xa67c7d],0xfdb9bb00
  40d94d:	add    bh,bh
  40d94f:	mov    bh,0xff
  40d951:	add    ah,bl
  40d953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d954:	mov    DWORD PTR [eax],eax
  40d956:	(bad)  
  40d957:	in     eax,dx
  40d958:	add    BYTE PTR [ebx+0x9c8008],al
  40d95e:	add    BYTE PTR [eax+eax*1],bh
  40d961:	add    BYTE PTR [ecx-0x5a1a],ah
  40d967:	cmc    
  40d968:	add    DWORD PTR [eax],0xfffffff7
  40d96b:	sbb    DWORD PTR [eax+eax*1-0xff5e77],esp
  40d972:	das    
  40d973:	mov    edx,0xb600ff0e
  40d978:	inc    DWORD PTR [ebx-0xd17e92]
  40d97e:	xor    edx,0x0
  40d981:	call   DWORD PTR [edi]
  40d983:	retf   0xffb9
  40d986:	add    BYTE PTR [eax-0x1],dh
  40d989:	add    cl,bl
  40d98b:	xchg   esp,eax
  40d98c:	inc    ebx
  40d98d:	mov    edi,edi
  40d98f:	mov    dl,0xff
  40d991:	mov    DWORD PTR [ecx+ebx*8+0x68],eax
  40d995:	(bad)  
  40d996:	jmp    DWORD PTR [edx]
  40d998:	add    ah,cl
  40d99a:	push   esp
  40d99b:	xor    BYTE PTR [ebx],bh
  40d99d:	add    BYTE PTR [eax],al
  40d99f:	lods   eax,DWORD PTR ds:[esi]
  40d9a0:	mov    edi,edi
  40d9a2:	dec    ebp
  40d9a3:	jne    0x40d931
  40d9a5:	cmp    edi,0x51
  40d9a8:	int3   
  40d9a9:	mov    DWORD PTR [edx-0x79],edi
  40d9ac:	dec    ebx
  40d9ad:	dec    DWORD PTR [ecx-0x2100006a]
  40d9b3:	mov    BYTE PTR [eax-0xaf7c01],cl
  40d9b9:	add    BYTE PTR [ebx+0x45],ch
  40d9bc:	cwde   
  40d9bd:	add    DWORD PTR [eax],0x51
  40d9c0:	add    bh,bh
  40d9c2:	push   ss
  40d9c3:	fst    QWORD PTR [ecx-0x100100]
  40d9c9:	or     edi,0x13
  40d9cc:	dec    edx
  40d9cd:	(bad)  
  40d9ce:	(bad)  
  40d9cf:	jnp    0x40d9d0
  40d9d1:	push   DWORD PTR [eax]
  40d9d3:	jno    0x40d96c
  40d9d5:	inc    DWORD PTR [eax]
  40d9d7:	sbb    DWORD PTR [ebx+0x31e4ccff],eax
  40d9dd:	inc    DWORD PTR [eax]
  40d9df:	xchg   edi,eax
  40d9e0:	add    bh,bh
  40d9e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9e3:	inc    ecx
  40d9e4:	xor    DWORD PTR [eax],eax
  40d9e6:	add    BYTE PTR [ecx],bh
  40d9e8:	inc    DWORD PTR [eax]
  40d9ea:	sbb    ch,BYTE PTR [ebx-0x47]
  40d9ed:	add    ah,cl
  40d9ef:	push   eax
  40d9f0:	add    bh,bh
  40d9f2:	adc    eax,0xffffcfd3
  40d9f7:	xor    edi,edi
  40d9f9:	int3   
  40d9fa:	iret   
  40d9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9fc:	stc    
  40d9fd:	add    bh,bh
  40d9ff:	xchg   ebx,eax
  40da00:	dec    esp
  40da02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da03:	repnz sar edi,0x0
  40da07:	jbe    0x40d9d5
  40da09:	inc    DWORD PTR [ebx-0x21]
  40da0c:	mov    edx,0xd3ccff
  40da11:	jmp    esp
  40da13:	jl     0x40d9ee
  40da15:	(bad)  
  40da16:	inc    DWORD PTR [ebx+eax*4+0x8710989]
  40da1d:	int3   
  40da1e:	push   DWORD PTR [ecx-0x14baff7d]
  40da24:	imul   eax,DWORD PTR [eax],0xccffb589
  40da2a:	loope  0x40daa2
  40da2c:	xor    eax,DWORD PTR [ebx+0x9500]
  40da32:	das    
  40da33:	ss (bad) 
  40da35:	int3   
  40da36:	add    BYTE PTR [eax-0x34],dh
  40da39:	int3   
  40da3a:	pop    eax
  40da3b:	mov    dh,0xbe
  40da3d:	add    BYTE PTR [ebx-0x2007cca],al
  40da43:	loopne 0x40dab6
  40da45:	(bad)  
  40da46:	dec    DWORD PTR [eax]
  40da48:	dec    esp
  40da4a:	xor    DWORD PTR [ecx+ebx*1],esp
  40da4d:	add    DWORD PTR [eax],0xffffffa4
  40da50:	(bad)  
  40da51:	inc    edx
  40da53:	and    ecx,DWORD PTR cs:[ecx-0x501]
  40da5a:	mov    dh,0xd9
  40da5c:	sar    bh,cl
  40da5e:	add    BYTE PTR [esi+0x0],bh
  40da61:	call   DWORD PTR [ebp+0x40]
  40da64:	cmp    al,0x0
  40da66:	dec    ecx
  40da68:	inc    DWORD PTR [ebx-0xb5f58f]
  40da6e:	add    BYTE PTR [esi],ah
  40da70:	add    DWORD PTR [eax],0xffffffae
  40da73:	pop    ds
  40da74:	mov    al,0x83
  40da76:	mov    DWORD PTR [ebx+0x7bb900ff],ebx
  40da7c:	test   eax,0xffd80000
  40da81:	add    BYTE PTR [eax-0x7cffb199],dh
  40da87:	add    al,0x89
  40da89:	push   DWORD PTR [esi-0x4009]
  40da8f:	add    BYTE PTR fs:[eax],al
  40da92:	dec    ebx
  40da93:	loopne 0x40da22
  40da95:	or     esp,0x16
  40da98:	add    bh,bh
  40da9a:	mov    esi,0xff00f1e2
  40da9f:	jno    0x40da24
  40daa1:	jmp    DWORD PTR ds:0x89eaad
  40daa7:	ds add bh,bh
  40daaa:	push   ebx
  40daab:	inc    edi
  40daac:	fld    QWORD PTR [eax]
  40daae:	dec    esp
  40dab0:	dec    DWORD PTR [ecx+0x647456]
  40dab6:	int3   
  40dab7:	jne    0x40da3c
  40dab9:	int3   
  40daba:	pop    ss
  40dabb:	js     0x40da6e
  40dabd:	inc    DWORD PTR [ebx-0x64007c12]
  40dac3:	dec    edi
  40dac4:	(bad)  
  40dac6:	(bad)  
  40dac7:	mov    esp,0x3645ff89
  40dacc:	jno    0x40dacd
  40dace:	mov    DWORD PTR [ecx],edi
  40dad0:	inc    DWORD PTR [ebx-0xb5da2f]
  40dad6:	add    dh,dl
  40dad8:	int3   
  40dad9:	add    DWORD PTR [ebp-0xffe406],0xffffffcc
  40dae0:	add    BYTE PTR [eax],al
  40dae2:	fsub   DWORD PTR [edx-0x1e]
  40dae5:	(bad)  
  40dae6:	dec    edi
  40dae8:	add    bh,bh
  40daea:	scas   eax,DWORD PTR es:[edi]
  40daeb:	sub    ch,BYTE PTR [esp+ecx*8-0x76001234]
  40daf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daf3:	jns    0x40dafb
  40daf5:	cmp    edi,0xffffffa3
  40daf8:	inc    DWORD PTR [eax]
  40dafa:	js     0x40db02
  40dafc:	or     al,0x0
  40dafe:	jmp    ebp
  40db00:	(bad)  
  40db01:	dec    ecx
  40db03:	cmp    eax,0x57ffcc19
  40db08:	(bad)  
  40db09:	(bad)  
  40db0a:	jmp    0xa5:0x3149
  40db11:	or     DWORD PTR [ecx-0x7290],0xfffffffe
  40db18:	add    bh,bh
  40db1a:	add    eax,0x6ea2
  40db1f:	int    0xcc
  40db21:	push   esp
  40db23:	cmp    bh,dl
  40db25:	add    bh,bh
  40db27:	pop    ebp
  40db28:	int3   
  40db29:	mov    DWORD PTR [eax-0x7cffed9d],ecx
  40db2f:	cmc    
  40db30:	cmp    edi,0x1
  40db33:	cs mov bh,0x0
  40db36:	inc    DWORD PTR [esi+0x0]
  40db39:	cmp    DWORD PTR [edi],0x78
  40db3c:	idiv   edi
  40db3e:	add    BYTE PTR [edi+edi*8],bh
  40db41:	mov    edi,ecx
  40db43:	lahf   
  40db44:	and    eax,0x8360ffff
  40db49:	call   FWORD PTR ds:0x89ff1af7
  40db4f:	mov    bl,0x83
  40db51:	or     DWORD PTR [ebp-0x30],0xfffffffd
  40db55:	(bad)  
  40db56:	dec    DWORD PTR [ecx+ecx*4-0x1]
  40db5a:	jne    0x40dade
  40db5c:	test   eax,0xffbe00ff
  40db61:	push   DWORD PTR ds:0xff008c0b
  40db67:	push   esp
  40db68:	int3   
  40db69:	add    BYTE PTR [edx],ch
  40db6b:	sbb    esp,DWORD PTR [ecx+0x0]
  40db6e:	mov    DWORD PTR [edx],ebp
  40db70:	inc    DWORD PTR [ebx+0x1bdb5e]
  40db76:	add    BYTE PTR [ebp-0x1],al
  40db79:	jmp    edi
  40db7b:	les    eax,FWORD PTR [esi]
  40db7d:	cmp    edi,0x73
  40db80:	add    ah,cl
  40db82:	mov    dh,0xed
  40db84:	mov    al,ds:0xff8d0083
  40db89:	add    bl,dh
  40db8b:	aad    0x9b
  40db8d:	inc    DWORD PTR [eax]
  40db8f:	int    0xff
  40db91:	inc    DWORD PTR [esi+0xff106a]
  40db97:	lods   eax,DWORD PTR ds:[esi]
  40db98:	cmp    edi,0xffffff9d
  40db9b:	imul   esp,DWORD PTR [edi+edi*8],0xffe3ff
  40dba2:	test   BYTE PTR [eax+0x63],ch
  40dba5:	or     esp,0x79
  40dba8:	inc    DWORD PTR [eax]
  40dbaa:	inc    edi
  40dbab:	lds    ecx,FWORD PTR [edx]
  40dbad:	add    ah,cl
  40dbaf:	dec    eax
  40dbb0:	cmp    edi,0xffffffe5
  40dbb3:	adc    esi,eax
  40dbb5:	(bad)  
  40dbb6:	call   FWORD PTR [ebp-0x1]
  40dbb9:	(bad)  
  40dbba:	jle    0x40db79
  40dbbc:	push   es
  40dbbd:	dec    DWORD PTR [ecx-0x123300b4]
  40dbc3:	xor    ebx,esi
  40dbc5:	inc    DWORD PTR [ebx-0x33000060]
  40dbcb:	sub    eax,0xbdffffd7
  40dbd0:	inc    DWORD PTR [ebx+0x1f2bfb]
  40dbd6:	add    BYTE PTR [eax+eax*1-0x1],al
  40dbda:	leave  
  40dbdb:	sahf   
  40dbdc:	pop    ds
  40dbdd:	add    DWORD PTR [eax],0xffffff96
  40dbe0:	inc    DWORD PTR [ebx-0xf57c36]
  40dbe6:	(bad)  
  40dbe7:	std    
  40dbe8:	inc    DWORD PTR [ebx-0xb50946]
  40dbee:	add    al,cl
  40dbf0:	add    bh,bh
  40dbf2:	mov    dl,0x32
  40dbf4:	add    al,BYTE PTR [ebx-0x339634]
  40dbfa:	imul   edx,DWORD PTR [ebp-0x5c7cff8f],0x89b300ff
  40dc04:	push   edi
  40dc05:	add    DWORD PTR [eax],0xffffff84
  40dc08:	add    BYTE PTR [eax],al
  40dc0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0b:	push   0xc8ffcccf
  40dc10:	mov    DWORD PTR [eax],eax
  40dc12:	cmp    bh,cl
  40dc14:	push   ds
  40dc15:	int3   
  40dc16:	(bad)  
  40dc17:	jp     0x40dc19
  40dc19:	call   DWORD PTR [edx+eax*4+0x5dff837c]
  40dc20:	inc    DWORD PTR [eax]
  40dc22:	es retf 
  40dc24:	aaa    
  40dc25:	dec    esp
  40dc27:	adc    edi,edi
  40dc29:	add    BYTE PTR [edx+eiz*1+0x1f],bl
  40dc2d:	(bad)  
  40dc2e:	call   FWORD PTR [esi]
  40dc30:	add    DWORD PTR [ebx-0x547566],0x0
  40dc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc38:	int3   
  40dc39:	add    BYTE PTR [ebx],cl
  40dc3b:	dec    ebp
  40dc3c:	rol    BYTE PTR [ebx-0x7c009100],0x63
  40dc43:	test   eax,0x3bff00f4
  40dc48:	dec    esp
  40dc4a:	or     edx,0x3d
  40dc4d:	inc    DWORD PTR [eax]
  40dc4f:	and    al,BYTE PTR [eax]
  40dc51:	(bad)  
  40dc52:	mov    edx,0x37a6
  40dc57:	sub    al,0x0
  40dc59:	add    BYTE PTR [ecx-0x53],dh
  40dc5c:	retf   0xffcc
  40dc5f:	push   esp
  40dc60:	(bad)  
  40dc61:	jmp    FWORD PTR [edx-0x37]
  40dc64:	test   edi,edi
  40dc66:	call   esi
  40dc68:	(bad)  
  40dc69:	call   DWORD PTR [edx-0x41]
  40dc6c:	push   cs
  40dc6d:	add    bh,bh
  40dc6f:	push   ecx
  40dc70:	inc    DWORD PTR [eax]
  40dc72:	mov    ah,0x8
  40dc74:	pop    ebx
  40dc75:	add    bh,bh
  40dc77:	daa    
  40dc78:	add    bh,bh
  40dc7a:	loop   0x40dcce
  40dc7c:	loopne 0x40dc7e
  40dc7e:	push   ebp
  40dc80:	inc    DWORD PTR [ebx-0xe30177]
  40dc86:	add    BYTE PTR [ebx-0x7d],dh
  40dc89:	push   DWORD PTR [edi]
  40dc8b:	jle    0x40dc4f
  40dc8d:	(bad)  
  40dc8e:	jmp    FWORD PTR [ebp-0x6670001]
  40dc94:	retf   
  40dc95:	add    bh,bh
  40dc97:	push   es
  40dc98:	add    ah,cl
  40dc9a:	mul    DWORD PTR [ebx+0x6]
  40dc9d:	(bad)  
  40dc9e:	(bad)  
  40dc9f:	ds int3 
  40dca1:	call   esp
  40dca3:	aad    0x7d
  40dca5:	add    bh,bh
  40dca7:	mov    esp,0xfff8ffff
  40dcac:	(bad)  
  40dcad:	(bad)  
  40dcae:	push   ebx
  40dcb0:	add    BYTE PTR [ecx+0x36817],cl
  40dcb6:	push   DWORD PTR [ecx]
  40dcb8:	inc    DWORD PTR [eax]
  40dcba:	mov    eax,0xffff1ce9
  40dcbf:	inc    DWORD PTR [ebx-0x605e1d01]
  40dcc5:	inc    DWORD PTR [eax]
  40dcc7:	fadd   QWORD PTR [eax]
  40dcc9:	sub    DWORD PTR [ebp-0x53],0xffffffe5
  40dccd:	add    BYTE PTR [eax],al
  40dccf:	xor    al,0xff
  40dcd1:	sbb    DWORD PTR [ebp+0x1d],0x8
  40dcd5:	mov    DWORD PTR [ebx-0x37cff19],eax
  40dcdb:	(bad)  
  40dcdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcdd:	cmp    edi,0xffffffe6
  40dce0:	inc    DWORD PTR [eax]
  40dce2:	inc    eax
  40dce3:	loopne 0x40dcd5
  40dce5:	add    BYTE PTR [eax],al
  40dce7:	enter  0xcc00,0x3c
  40dceb:	call   0xb141dc5d
  40dcf0:	add    BYTE PTR [ecx+0xa230d5],cl
  40dcf6:	add    BYTE PTR [ebx+0x694fffff],dl
  40dcfc:	loope  0x40dcfe
  40dcfe:	mov    DWORD PTR [edx],edi
  40dd00:	add    BYTE PTR [ebx-0x228ceb],al
  40dd06:	inc    edi
  40dd08:	add    DWORD PTR [ebx-0x2e620a],0xffffffff
  40dd0f:	mov    ecx,0x51d00ff
  40dd14:	mov    bl,0xff
  40dd16:	adc    DWORD PTR [esi],0xffffff83
  40dd19:	add    BYTE PTR [ebp-0x57],dh
  40dd1c:	aam    0xff
  40dd1e:	call   esi
  40dd20:	add    bh,bh
  40dd22:	push   ss
  40dd23:	daa    
  40dd24:	popa   
  40dd25:	inc    DWORD PTR [eax]
  40dd27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd28:	add    bh,bh
  40dd2a:	push   eax
  40dd2b:	mov    ecx,0x4b89ffe6
  40dd30:	dec    esp
  40dd32:	xor    esi,edi
  40dd34:	or     cl,BYTE PTR [ecx-0x7c7200]
  40dd3a:	jnp    0x40dd62
  40dd3c:	fld    DWORD PTR [ebx+0x838700]
  40dd42:	dec    ebx
  40dd43:	mov    eax,ds:0xecffcca0
  40dd48:	mov    edi,edi
  40dd4a:	mov    ebp,0xffff4a28
  40dd4f:	ror    DWORD PTR [ecx-0x5a39d901],cl
  40dd55:	add    bh,bh
  40dd57:	(bad)  
  40dd59:	jmp    DWORD PTR [esi]
  40dd5b:	sbb    DWORD PTR [edx],ebx
  40dd5d:	int3   
  40dd5e:	add    BYTE PTR [edi+edi*8-0x34],dh
  40dd62:	psubusb mm3,QWORD PTR [esi]
  40dd65:	(bad)  
  40dd66:	jmp    DWORD PTR [ebx]
  40dd68:	add    BYTE PTR [ecx-0x92e202],cl
  40dd6e:	add    BYTE PTR [eax+eax*1-0x1],cl
  40dd72:	pop    esi
  40dd73:	shr    ah,0xff
  40dd76:	add    BYTE PTR [eax+0x90ffff],cl
  40dd7c:	cmc    
  40dd7d:	(bad)  
  40dd7e:	push   DWORD PTR [ebx-0x1]
  40dd81:	add    BYTE PTR [edx+0x0],bh
  40dd84:	pushf  
  40dd85:	add    BYTE PTR [eax],al
  40dd87:	inc    DWORD PTR gs:[ebx-0x91e205]
  40dd8e:	dec    DWORD PTR [esi]
  40dd90:	inc    DWORD PTR [eax]
  40dd92:	stos   BYTE PTR es:[edi],al
  40dd93:	es pop edx
  40dd95:	int3   
  40dd96:	call   FWORD PTR [ebx+eax*4-0x5097b001]
  40dd9d:	add    DWORD PTR [eax],0x71
  40dda0:	add    bh,bh
  40dda2:	hlt    
  40dda3:	push   0xd300ffde
  40dda8:	(bad)  
  40dda9:	(bad)  
  40ddaa:	sti    
  40ddab:	xchg   BYTE PTR [esi],dh
  40ddad:	int3   
  40ddae:	jmp    FWORD PTR [edi+edi*8-0x7d]
  40ddb2:	inc    ebp
  40ddb3:	leave  
  40ddb4:	idiv   bh
  40ddb6:	int3   
  40ddb7:	inc    esp
  40ddb8:	add    BYTE PTR [ebx-0x7c846a38],al
  40ddbe:	sbb    DWORD PTR [eax+0x0],0x0
  40ddc2:	xchg   ebp,eax
  40ddc3:	push   ss
  40ddc4:	cmp    al,BYTE PTR [eax]
  40ddc6:	jmp    FWORD PTR ds:0x11b983ff
  40ddcc:	popa   
  40ddcd:	add    ah,cl
  40ddcf:	outs   dx,DWORD PTR ds:[esi]
  40ddd0:	int3   
  40ddd1:	inc    DWORD PTR [esi]
  40ddd3:	sbb    edx,DWORD PTR [eax-0x7cf53334]
  40ddd9:	jmp    ecx
  40dddb:	mov    eax,ds:0x1b00ff9d
  40dde0:	(bad)  
  40dde1:	dec    edi
  40dde3:	or     ch,al
  40dde5:	(bad)  
  40dde6:	call   FWORD PTR [esi]
  40dde8:	dec    esp
  40ddea:	repnz adc dh,BYTE PTR [edi+edi*8-0x9e00]
  40ddf2:	add    DWORD PTR [edx-0x25],edi
  40ddf5:	int3   
  40ddf6:	inc    eax
  40ddf8:	(bad)  
  40ddf9:	jmp    DWORD PTR [edx-0x2d51]
  40ddff:	push   esi
  40de00:	(bad)  
  40de01:	push   DWORD PTR [eax-0x760060a3]
  40de07:	xchg   ebx,eax
  40de08:	inc    DWORD PTR [eax]
  40de0a:	cli    
  40de0b:	and    bh,BYTE PTR [esi]
  40de0d:	int3   
  40de0e:	(bad)  
  40de0f:	(bad)  
  40de11:	add    BYTE PTR [ecx+0x5f],al
  40de14:	nop
  40de15:	(bad)  
  40de16:	jmp    DWORD PTR [ecx-0x1]
  40de19:	add    DWORD PTR [ecx],0xffffffe9
  40de1c:	jo     0x40de1d
  40de1e:	push   DWORD PTR [edi]
  40de20:	add    bh,bh
  40de22:	fwait
  40de23:	push   edx
  40de24:	sbb    ah,cl
  40de26:	add    BYTE PTR [ecx-0xeb77c01],al
  40de2c:	inc    ebx
  40de2d:	dec    esp
  40de2f:	in     al,dx
  40de30:	sub    esp,0xc
  40de33:	push   ebx
  40de34:	push   ebp
  40de35:	push   esi
  40de36:	push   edi
  40de37:	push   0x18
  40de39:	push   0x42
  40de3b:	call   DWORD PTR ds:0x44400c
  40de41:	mov    DWORD PTR [esp+0x10],eax
  40de45:	call   DWORD PTR ds:0x444044
  40de4b:	mov    esi,DWORD PTR ds:0x447d00
  40de51:	mov    ecx,DWORD PTR ds:0x447070
  40de57:	mov    ebp,eax
  40de59:	add    esi,0xbaf8
  40de5f:	mov    edx,0x33
  40de64:	movzx  eax,WORD PTR [ecx+0x6]
  40de68:	movzx  ecx,WORD PTR [ecx+0x1]
  40de6c:	shl    eax,0x10
  40de6f:	add    eax,ecx
  40de71:	mov    ds:0x447cf0,eax
  40de76:	mov    ecx,0x2b02cb8c
  40de7b:	sub    ecx,DWORD PTR ds:0x447cfc
  40de81:	add    esi,0x18
  40de84:	xor    ecx,eax
  40de86:	mov    DWORD PTR [esi-0x18],ecx
  40de89:	mov    ecx,DWORD PTR ds:0x447070
  40de8f:	movzx  eax,WORD PTR [ecx+0xe]
  40de93:	movzx  edi,BYTE PTR [ecx+0xc]
  40de97:	movzx  ecx,BYTE PTR [ecx+0x8]
  40de9b:	shl    eax,0x8
  40de9e:	add    eax,edi
  40dea0:	shl    eax,0x8
  40dea3:	add    eax,ecx
  40dea5:	mov    ds:0x447cf0,eax
  40deaa:	mov    ecx,0x2b02cb8c
  40deaf:	sub    ecx,DWORD PTR ds:0x447cfc
  40deb5:	xor    ecx,eax
  40deb7:	mov    DWORD PTR [esi-0x14],ecx
  40deba:	mov    ecx,DWORD PTR ds:0x447070
  40dec0:	add    ecx,0x10
  40dec3:	mov    DWORD PTR ds:0x447070,ecx
  40dec9:	movzx  eax,WORD PTR [ecx+0x6]
  40decd:	movzx  ecx,WORD PTR [ecx+0x1]
  40ded1:	shl    eax,0x10
  40ded4:	add    eax,ecx
  40ded6:	mov    ds:0x447cf0,eax
  40dedb:	mov    ecx,0x2b02cb8c
  40dee0:	sub    ecx,DWORD PTR ds:0x447cfc
  40dee6:	xor    ecx,eax
  40dee8:	mov    DWORD PTR [esi-0x10],ecx
  40deeb:	mov    ecx,DWORD PTR ds:0x447070
  40def1:	movzx  eax,WORD PTR [ecx+0xe]
  40def5:	movzx  edi,BYTE PTR [ecx+0xc]
  40def9:	movzx  ecx,BYTE PTR [ecx+0x8]
  40defd:	shl    eax,0x8
  40df00:	add    eax,edi
  40df02:	shl    eax,0x8
  40df05:	add    eax,ecx
  40df07:	mov    ds:0x447cf0,eax
  40df0c:	mov    ecx,0x2b02cb8c
  40df11:	sub    ecx,DWORD PTR ds:0x447cfc
  40df17:	xor    ecx,eax
  40df19:	mov    DWORD PTR [esi-0xc],ecx
  40df1c:	mov    ecx,DWORD PTR ds:0x447070
  40df22:	add    ecx,0x10
  40df25:	mov    DWORD PTR ds:0x447070,ecx
  40df2b:	movzx  eax,WORD PTR [ecx+0x6]
  40df2f:	movzx  ecx,WORD PTR [ecx+0x1]
  40df33:	shl    eax,0x10
  40df36:	add    eax,ecx
  40df38:	mov    ds:0x447cf0,eax
  40df3d:	mov    ecx,0x2b02cb8c
  40df42:	sub    ecx,DWORD PTR ds:0x447cfc
  40df48:	xor    ecx,eax
  40df4a:	mov    DWORD PTR [esi-0x8],ecx
  40df4d:	mov    ecx,DWORD PTR ds:0x447070
  40df53:	movzx  eax,WORD PTR [ecx+0xe]
  40df57:	movzx  edi,BYTE PTR [ecx+0xc]
  40df5b:	movzx  ecx,BYTE PTR [ecx+0x8]
  40df5f:	shl    eax,0x8
  40df62:	add    eax,edi
  40df64:	shl    eax,0x8
  40df67:	add    eax,ecx
  40df69:	mov    ecx,0x2b02cb8c
  40df6e:	sub    ecx,DWORD PTR ds:0x447cfc
  40df74:	mov    ds:0x447cf0,eax
  40df79:	xor    ecx,eax
  40df7b:	mov    DWORD PTR [esi-0x4],ecx
  40df7e:	mov    ecx,DWORD PTR ds:0x447070
  40df84:	add    ecx,0x10
  40df87:	dec    edx
  40df88:	mov    DWORD PTR ds:0x447070,ecx
  40df8e:	jne    0x40de64
  40df94:	movzx  edx,WORD PTR [ecx+0x6]
  40df98:	movzx  eax,WORD PTR [ecx+0x1]
  40df9c:	mov    ebx,DWORD PTR ds:0x444008
  40dfa2:	shl    edx,0x10
  40dfa5:	add    edx,eax
  40dfa7:	push   0x0
  40dfa9:	mov    DWORD PTR ds:0x447cf0,edx
  40dfaf:	call   ebx
  40dfb1:	mov    ecx,DWORD PTR ds:0x447cfc
  40dfb7:	add    ecx,0x2afacb84
  40dfbd:	xor    ecx,DWORD PTR ds:0x447cf0
  40dfc3:	mov    DWORD PTR [esi],ecx
  40dfc5:	mov    edx,DWORD PTR ds:0x447d00
  40dfcb:	mov    ecx,DWORD PTR ds:0x447074
  40dfd1:	add    edx,0xbfc4
  40dfd7:	mov    esi,0x1d3
  40dfdc:	lea    esp,[esp+0x0]
  40dfe0:	movzx  eax,WORD PTR [ecx+0x5]
  40dfe4:	movzx  edi,BYTE PTR [ecx+0x3]
  40dfe8:	movzx  ecx,BYTE PTR [ecx]
  40dfeb:	shl    eax,0x8
  40dfee:	add    eax,edi
  40dff0:	shl    eax,0x8
  40dff3:	add    eax,ecx
  40dff5:	mov    ecx,0xe39d84a1
  40dffa:	sub    ecx,DWORD PTR ds:0x447cfc
  40e000:	mov    ds:0x447cf0,eax
  40e005:	xor    ecx,eax
  40e007:	mov    DWORD PTR [edx],ecx
  40e009:	mov    ecx,DWORD PTR ds:0x447074
  40e00f:	add    ecx,0x8
  40e012:	add    edx,0x4
  40e015:	dec    esi
  40e016:	mov    DWORD PTR ds:0x447074,ecx
  40e01c:	jne    0x40dfe0
  40e01e:	mov    ecx,DWORD PTR ds:0x447d00
  40e024:	mov    edx,DWORD PTR ds:0x447078
  40e02a:	add    ecx,0xc710
  40e030:	mov    esi,0x6b
  40e035:	movzx  eax,BYTE PTR [edx+0x7]
  40e039:	movzx  edi,WORD PTR [edx+0x3]
  40e03d:	movzx  edx,BYTE PTR [edx]
  40e040:	shl    eax,0x10
  40e043:	add    eax,edi
  40e045:	shl    eax,0x8
  40e048:	add    eax,edx
  40e04a:	mov    edx,DWORD PTR ds:0x447cfc
  40e050:	sub    edx,0x80040004
  40e056:	neg    edx
  40e058:	sbb    edx,edx
  40e05a:	and    edx,0x3d506232
  40e060:	add    edx,0xc2b0320b
  40e066:	xor    edx,eax
  40e068:	mov    ds:0x447cf0,eax
  40e06d:	mov    DWORD PTR [ecx],edx
  40e06f:	mov    edx,DWORD PTR ds:0x447078
  40e075:	add    edx,0x8
  40e078:	mov    DWORD PTR ds:0x447078,edx
  40e07e:	movzx  eax,BYTE PTR [edx+0x7]
  40e082:	movzx  edi,WORD PTR [edx+0x3]
  40e086:	movzx  edx,BYTE PTR [edx]
  40e089:	shl    eax,0x10
  40e08c:	add    eax,edi
  40e08e:	shl    eax,0x8
  40e091:	add    eax,edx
  40e093:	mov    edx,DWORD PTR ds:0x447cfc
  40e099:	sub    edx,0x80040004
  40e09f:	neg    edx
  40e0a1:	sbb    edx,edx
  40e0a3:	and    edx,0x3d506232
  40e0a9:	add    edx,0xc2b0320b
  40e0af:	xor    edx,eax
  40e0b1:	mov    ds:0x447cf0,eax
  40e0b6:	mov    DWORD PTR [ecx+0x4],edx
  40e0b9:	mov    edx,DWORD PTR ds:0x447078
  40e0bf:	add    edx,0x8
  40e0c2:	mov    DWORD PTR ds:0x447078,edx
  40e0c8:	movzx  eax,BYTE PTR [edx+0x7]
  40e0cc:	movzx  edi,WORD PTR [edx+0x3]
  40e0d0:	movzx  edx,BYTE PTR [edx]
  40e0d3:	shl    eax,0x10
  40e0d6:	add    eax,edi
  40e0d8:	shl    eax,0x8
  40e0db:	add    eax,edx
  40e0dd:	mov    edx,DWORD PTR ds:0x447cfc
  40e0e3:	sub    edx,0x80040004
  40e0e9:	neg    edx
  40e0eb:	sbb    edx,edx
  40e0ed:	and    edx,0x3d506232
  40e0f3:	add    edx,0xc2b0320b
  40e0f9:	xor    edx,eax
  40e0fb:	mov    ds:0x447cf0,eax
  40e100:	mov    DWORD PTR [ecx+0x8],edx
  40e103:	mov    edx,DWORD PTR ds:0x447078
  40e109:	add    edx,0x8
  40e10c:	add    ecx,0xc
  40e10f:	dec    esi
  40e110:	mov    DWORD PTR ds:0x447078,edx
  40e116:	jne    0x40e035
  40e11c:	mov    esi,DWORD PTR ds:0x447d00
  40e122:	mov    eax,DWORD PTR [esp+0x20]
  40e126:	add    esi,0xcc14
  40e12c:	mov    edx,0x6b
  40e131:	movzx  ecx,BYTE PTR [eax+0x4]
  40e135:	movzx  edi,WORD PTR [eax+0x2]
  40e139:	shl    ecx,0x10
  40e13c:	add    ecx,edi
  40e13e:	movzx  edi,BYTE PTR [eax]
  40e141:	shl    ecx,0x8
  40e144:	add    ecx,edi
  40e146:	mov    DWORD PTR ds:0x447cf0,ecx
  40e14c:	mov    edi,DWORD PTR ds:0x447cfc
  40e152:	add    edi,0x4da5987a
  40e158:	xor    edi,ecx
  40e15a:	mov    DWORD PTR [esi],edi
  40e15c:	movzx  ecx,BYTE PTR [eax+0xf]
  40e160:	movzx  edi,BYTE PTR [eax+0xa]
  40e164:	shl    ecx,0x8
  40e167:	add    ecx,edi
  40e169:	movzx  edi,BYTE PTR [eax+0x8]
  40e16d:	shl    ecx,0x8
  40e170:	add    ecx,edi
  40e172:	movzx  edi,BYTE PTR [eax+0x5]
  40e176:	shl    ecx,0x8
  40e179:	add    ecx,edi
  40e17b:	mov    edi,DWORD PTR ds:0x447cfc
  40e181:	sub    edi,0x80040004
  40e187:	mov    DWORD PTR ds:0x447cf0,ecx
  40e18d:	neg    edi
  40e18f:	sbb    edi,edi
  40e191:	and    edi,0x325697a5
  40e197:	add    edi,0xcda9987e
  40e19d:	xor    edi,ecx
  40e19f:	mov    DWORD PTR [esi+0x4],edi
  40e1a2:	movzx  ecx,BYTE PTR [eax+0x14]
  40e1a6:	movzx  edi,WORD PTR [eax+0x12]
  40e1aa:	shl    ecx,0x10
  40e1ad:	add    ecx,edi
  40e1af:	movzx  edi,BYTE PTR [eax+0x10]
  40e1b3:	shl    ecx,0x8
  40e1b6:	add    ecx,edi
  40e1b8:	mov    edi,DWORD PTR ds:0x447cfc
  40e1be:	mov    DWORD PTR ds:0x447cf0,ecx
  40e1c4:	add    edi,0x4da5987a
  40e1ca:	xor    edi,ecx
  40e1cc:	mov    DWORD PTR [esi+0x8],edi
  40e1cf:	movzx  ecx,BYTE PTR [eax+0x1f]
  40e1d3:	movzx  edi,BYTE PTR [eax+0x1a]
  40e1d7:	shl    ecx,0x8
  40e1da:	add    ecx,edi
  40e1dc:	movzx  edi,BYTE PTR [eax+0x18]
  40e1e0:	shl    ecx,0x8
  40e1e3:	add    ecx,edi
  40e1e5:	movzx  edi,BYTE PTR [eax+0x15]
  40e1e9:	shl    ecx,0x8
  40e1ec:	add    ecx,edi
  40e1ee:	mov    edi,DWORD PTR ds:0x447cfc
  40e1f4:	sub    edi,0x80040004
  40e1fa:	neg    edi
  40e1fc:	sbb    edi,edi
  40e1fe:	mov    DWORD PTR ds:0x447cf0,ecx
  40e204:	and    edi,0x325697a5
  40e20a:	add    edi,0xcda9987e
  40e210:	xor    edi,ecx
  40e212:	mov    DWORD PTR [esi+0xc],edi
  40e215:	movzx  ecx,BYTE PTR [eax+0x24]
  40e219:	movzx  edi,WORD PTR [eax+0x22]
  40e21d:	shl    ecx,0x10
  40e220:	add    ecx,edi
  40e222:	movzx  edi,BYTE PTR [eax+0x20]
  40e226:	shl    ecx,0x8
  40e229:	add    ecx,edi
  40e22b:	mov    edi,DWORD PTR ds:0x447cfc
  40e231:	mov    DWORD PTR ds:0x447cf0,ecx
  40e237:	add    edi,0x4da5987a
  40e23d:	xor    edi,ecx
  40e23f:	mov    DWORD PTR [esi+0x10],edi
  40e242:	movzx  ecx,BYTE PTR [eax+0x2f]
  40e246:	movzx  edi,BYTE PTR [eax+0x2a]
  40e24a:	shl    ecx,0x8
  40e24d:	add    ecx,edi
  40e24f:	movzx  edi,BYTE PTR [eax+0x28]
  40e253:	shl    ecx,0x8
  40e256:	add    ecx,edi
  40e258:	movzx  edi,BYTE PTR [eax+0x25]
  40e25c:	shl    ecx,0x8
  40e25f:	add    ecx,edi
  40e261:	mov    edi,DWORD PTR ds:0x447cfc
  40e267:	sub    edi,0x80040004
  40e26d:	neg    edi
  40e26f:	sbb    edi,edi
  40e271:	and    edi,0x325697a5
  40e277:	add    edi,0xcda9987e
  40e27d:	xor    edi,ecx
  40e27f:	mov    DWORD PTR ds:0x447cf0,ecx
  40e285:	mov    DWORD PTR [esi+0x14],edi
  40e288:	add    esi,0x18
  40e28b:	add    eax,0x30
  40e28e:	dec    edx
  40e28f:	jne    0x40e131
  40e295:	movzx  ecx,BYTE PTR [eax+0x4]
  40e299:	movzx  edx,WORD PTR [eax+0x2]
  40e29d:	movzx  eax,BYTE PTR [eax]
  40e2a0:	mov    edi,DWORD PTR ds:0x44404c
  40e2a6:	push   0x0
  40e2a8:	push   0x135
  40e2ad:	push   0x123
  40e2b2:	shl    ecx,0x10
  40e2b5:	push   0x64
  40e2b7:	add    ecx,edx
  40e2b9:	push   0x9e
  40e2be:	shl    ecx,0x8
  40e2c1:	push   0x0
  40e2c3:	add    ecx,eax
  40e2c5:	push   ebp
  40e2c6:	mov    DWORD PTR ds:0x447cf0,ecx
  40e2cc:	call   edi
  40e2ce:	mov    ecx,DWORD PTR ds:0x447cfc
  40e2d4:	add    ecx,0x4da5987a
  40e2da:	xor    ecx,DWORD PTR ds:0x447cf0
  40e2e0:	mov    DWORD PTR [esi],ecx
  40e2e2:	mov    edx,DWORD PTR ds:0x447d00
  40e2e8:	mov    ecx,DWORD PTR ds:0x44707c
  40e2ee:	add    edx,0xd620
  40e2f4:	mov    esi,0x22f
  40e2f9:	lea    esp,[esp+0x0]
  40e300:	movzx  eax,WORD PTR [ecx+0x3]
  40e304:	movzx  ecx,WORD PTR [ecx]
  40e307:	shl    eax,0x10
  40e30a:	add    eax,ecx
  40e30c:	mov    ecx,0xe030c706
  40e311:	sub    ecx,DWORD PTR ds:0x447cfc
  40e317:	mov    ds:0x447cf0,eax
  40e31c:	xor    ecx,eax
  40e31e:	mov    DWORD PTR [edx],ecx
  40e320:	mov    ecx,DWORD PTR ds:0x44707c
  40e326:	add    ecx,0x8
  40e329:	add    edx,0x4
  40e32c:	dec    esi
  40e32d:	mov    DWORD PTR ds:0x44707c,ecx
  40e333:	jne    0x40e300
  40e335:	push   esi
  40e336:	call   ebx
  40e338:	mov    esi,DWORD PTR ds:0x447d00
  40e33e:	push   0x0
  40e340:	push   0xcc
  40e345:	push   0x91
  40e34a:	push   0x68
  40e34c:	push   0xf4
  40e351:	push   0x0
  40e353:	push   ebp
  40e354:	add    esi,0xdedc
  40e35a:	call   edi
  40e35c:	mov    ebx,DWORD PTR ds:0x444028
  40e362:	mov    ecx,DWORD PTR ds:0x447080
  40e368:	mov    edi,0xd2
  40e36d:	lea    ecx,[ecx+0x0]
  40e370:	movzx  eax,BYTE PTR [ecx+0x9]
  40e374:	movzx  edx,BYTE PTR [ecx+0x6]
  40e378:	shl    eax,0x8
  40e37b:	add    eax,edx
  40e37d:	movzx  edx,BYTE PTR [ecx+0x3]
  40e381:	movzx  ecx,BYTE PTR [ecx]
  40e384:	shl    eax,0x8
  40e387:	add    eax,edx
  40e389:	mov    edx,DWORD PTR ds:0x447cfc
  40e38f:	shl    eax,0x8
  40e392:	add    eax,ecx
  40e394:	add    edx,0xd9e6c248
  40e39a:	mov    ds:0x447cf0,eax
  40e39f:	xor    edx,eax
  40e3a1:	lea    eax,[esp+0x14]
  40e3a5:	push   eax
  40e3a6:	lea    ecx,[esp+0x1c]
  40e3aa:	push   ecx
  40e3ab:	push   0xee3514e
  40e3b0:	mov    DWORD PTR [esi],edx
  40e3b2:	call   ebx
  40e3b4:	mov    ecx,DWORD PTR ds:0x447080
  40e3ba:	movzx  eax,BYTE PTR [ecx+0xf]
  40e3be:	movzx  edx,WORD PTR [ecx+0xd]
  40e3c2:	movzx  ecx,BYTE PTR [ecx+0xa]
  40e3c6:	shl    eax,0x10
  40e3c9:	add    eax,edx
  40e3cb:	shl    eax,0x8
  40e3ce:	add    eax,ecx
  40e3d0:	mov    edx,0xd9eec250
  40e3d5:	sub    edx,DWORD PTR ds:0x447cfc
  40e3db:	mov    ds:0x447cf0,eax
  40e3e0:	xor    edx,eax
  40e3e2:	mov    DWORD PTR [esi+0x4],edx
  40e3e5:	mov    ecx,DWORD PTR ds:0x447080
  40e3eb:	add    ecx,0x10
  40e3ee:	add    esi,0x8
  40e3f1:	dec    edi
  40e3f2:	mov    DWORD PTR ds:0x447080,ecx
  40e3f8:	jne    0x40e370
  40e3fe:	mov    eax,DWORD PTR [esp+0x10]
  40e402:	pop    edi
  40e403:	pop    esi
  40e404:	pop    ebp
  40e405:	pop    ebx
  40e406:	test   eax,eax
  40e408:	je     0x40e411
  40e40a:	push   eax
  40e40b:	call   DWORD PTR ds:0x444018
  40e411:	add    esp,0xc
  40e414:	ret    
  40e415:	int3   
  40e416:	int3   
  40e417:	int3   
  40e418:	int3   
  40e419:	int3   
  40e41a:	int3   
  40e41b:	int3   
  40e41c:	int3   
  40e41d:	int3   
  40e41e:	int3   
  40e41f:	int3   
  40e420:	add    al,bl
  40e422:	cld    
  40e423:	call   DWORD PTR [ebp+0x0]
  40e429:	mov    ebx,0xff6dff48
  40e42e:	dec    esi
  40e42f:	cmp    edi,0x6e
  40e432:	or     DWORD PTR [ebx-0x7c477cdc],eax
  40e438:	add    BYTE PTR [ecx+0x57],ah
  40e43b:	int3   
  40e43c:	outs   dx,BYTE PTR ds:[esi]
  40e43d:	int3   
  40e43e:	(bad)  
  40e43f:	dec    esp
  40e441:	shr    BYTE PTR [edx-0x34],0x28
  40e445:	(bad)  
  40e446:	jp     0x40e447
  40e448:	add    BYTE PTR [edi-0x190087],cl
  40e44e:	lahf   
  40e44f:	mov    DWORD PTR [ebx+0x3effd2df],eax
  40e455:	call   DWORD PTR [eax-0x1]
  40e458:	mov    DWORD PTR [eax*8-0x5fff7a01],esi
  40e45f:	add    ah,cl
  40e461:	mov    esi,0xd400ad
  40e466:	std    
  40e467:	(bad)  
  40e468:	dec    DWORD PTR ds:0xff0dfff0
  40e46e:	ins    DWORD PTR es:[edi],dx
  40e46f:	cmp    edi,0xffffffa7
  40e472:	mov    eax,ds:0x87ffecff
  40e477:	(bad)  
  40e478:	dec    DWORD PTR [esi+esi*1-0xe00f934]
  40e47f:	add    DWORD PTR [ebx-0x6b7604f6],0xffffffff
  40e486:	fdivp  st(7),st
  40e488:	mov    DWORD PTR [edi-0x7c6f00f0],edi
  40e48e:	jmp    0xce55e492
  40e493:	int3   
  40e494:	mov    WORD PTR [ebx+0x6e83ffa1],es
  40e49a:	lods   al,BYTE PTR ds:[esi]
  40e49b:	add    BYTE PTR [esi+0x0],cl
  40e49e:	ins    DWORD PTR es:[edi],dx
  40e49f:	add    DWORD PTR [eax],0xfffffff0
  40e4a2:	cmc    
  40e4a3:	(bad)  
  40e4a4:	fmul   DWORD PTR [ecx+0x61ffffa3]
  40e4aa:	repz add cl,ah
  40e4ad:	jmp    FWORD PTR [esi-0xb85ff01]
  40e4b3:	push   DWORD PTR [edx-0x77]
  40e4b6:	ds add bh,bh
  40e4b9:	adc    bh,0x83
  40e4bc:	sub    eax,0xffffaeff
  40e4c1:	lds    esi,FWORD PTR [edi]
  40e4c3:	add    BYTE PTR [edx],ch
  40e4c5:	add    BYTE PTR [edi-0x1],bh
  40e4c8:	push   esp
  40e4ca:	out    dx,eax
  40e4cb:	inc    edx
  40e4cd:	add    BYTE PTR [edx],al
  40e4cf:	inc    DWORD PTR [eax]
  40e4d1:	neg    DWORD PTR [ebx]
  40e4d3:	mov    DWORD PTR [esi],ecx
  40e4d5:	(bad)  
  40e4d6:	mov    esi,0x92b68989
  40e4db:	jmp    DWORD PTR [edi-0x9f00]
  40e4e1:	jb     0x40e4f4
  40e4e3:	add    BYTE PTR [ebx-0x1],dl
  40e4e6:	pop    edx
  40e4e7:	(bad)  
  40e4e8:	push   DWORD PTR [edi-0x58]
  40e4eb:	mov    DWORD PTR [ebp+0x0],ecx
  40e4ee:	push   edi
  40e4ef:	add    BYTE PTR [eax],al
  40e4f1:	xchg   DWORD PTR [esi],esp
  40e4f3:	add    BYTE PTR [eax-0xff8400],dh
  40e4f9:	inc    edi
  40e4fa:	or     al,0xff
  40e4fc:	call   0x84402c84
  40e501:	push   cs
  40e502:	jae    0x40e503
  40e504:	pusha  
  40e505:	int3   
  40e506:	lods   al,BYTE PTR ds:[esi]
  40e507:	(bad)  
  40e508:	push   DWORD PTR [ebp+0xed003c]
  40e50e:	push   eax
  40e50f:	(bad)  
  40e510:	call   eax
  40e512:	gs call ecx
  40e515:	push   DWORD PTR [ebx+0x30c90083]
  40e51b:	inc    DWORD PTR [ebx-0x1]
  40e51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51f:	(bad)  
  40e520:	(bad)  
  40e521:	mov    eax,0xccd583f1
  40e526:	in     al,0xff
  40e528:	add    ah,al
  40e52a:	inc    esi
  40e52b:	add    dh,bl
  40e52d:	push   ebx
  40e52f:	add    ah,cl
  40e531:	and    dl,cl
  40e533:	inc    DWORD PTR [ebp-0x1]
  40e536:	ret    
  40e537:	add    BYTE PTR [eax],al
  40e539:	lods   al,BYTE PTR ds:[esi]
  40e53a:	inc    esi
  40e53b:	sbb    DWORD PTR [eax-0x34],0xffffffc4
  40e53f:	(bad)  
  40e540:	jmp    DWORD PTR [ebx-0x71]
  40e543:	call   FWORD PTR [esi-0x34]
  40e546:	add    BYTE PTR [ebx-0x7c469334],0xe2
  40e54d:	call   DWORD PTR [esi-0x1]
  40e550:	add    al,cl
  40e552:	sub    al,0xff
  40e554:	das    
  40e555:	call   DWORD PTR [ebx]
  40e557:	int3   
  40e558:	inc    DWORD PTR [eax+0x33ffb6]
  40e55e:	fcos   
  40e560:	(bad)  
  40e561:	jnp    0x40e58f
  40e563:	dec    DWORD PTR [ebp-0x7d]
  40e566:	lds    eax,FWORD PTR [eax]
  40e568:	call   DWORD PTR [ebp+0x10]
  40e56b:	add    al,ch
  40e56d:	add    dl,ch
  40e56f:	add    DWORD PTR [eax],0xfffffffa
  40e572:	mov    bh,bh
  40e574:	inc    DWORD PTR [eax]
  40e576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e577:	add    BYTE PTR [eax],al
  40e579:	cmp    BYTE PTR [edi+0x1700e283],0xff
  40e580:	jmp    FWORD PTR [ecx-0x339600d1]
  40e586:	idiv   edi
  40e588:	mov    ebx,eax
  40e58a:	pop    edi
  40e58b:	add    bh,bh
  40e58d:	add    BYTE PTR [ebx+0x910ff00],dl
  40e593:	(bad)  
  40e594:	jnp    0x40e595
  40e596:	cmp    eax,DWORD PTR [eax]
  40e598:	dec    DWORD PTR [ebp+0x2fff1f]
  40e59e:	adc    bh,bh
  40e5a0:	push   DWORD PTR [esi]
  40e5a2:	mov    edx,0x74ffe4ff
  40e5a7:	cmp    edi,0x27
  40e5aa:	mov    bl,0x0
  40e5ac:	mov    eax,ds:0xffff34ff
  40e5b1:	dec    edi
  40e5b2:	push   ebx
  40e5b3:	add    dh,bh
  40e5b5:	cmp    ecx,0x0
  40e5b8:	jmp    FWORD PTR [eax+0x7e]
  40e5bb:	sub    DWORD PTR [ebp-0x33003700],0x3a
  40e5c2:	das    
  40e5c3:	add    BYTE PTR [edi],bh
  40e5c5:	(bad)  
  40e5c6:	jp     0x40e5c7
  40e5c8:	add    BYTE PTR [esi-0x947cbc],dl
  40e5ce:	inc    edi
  40e5cf:	inc    DWORD PTR [eax]
  40e5d1:	inc    eax
  40e5d2:	leave  
  40e5d3:	(bad)  
  40e5d4:	std    
  40e5d5:	inc    DWORD PTR [esi]
  40e5d7:	inc    DWORD PTR [eax]
  40e5d9:	add    al,cl
  40e5db:	add    BYTE PTR [esi-0x7ce17d],dl
  40e5e1:	push   es
  40e5e2:	ins    BYTE PTR es:[edi],dx
  40e5e3:	add    BYTE PTR [esi-0x1],ah
  40e5e6:	enter  0x83,0x57
  40e5ea:	add    BYTE PTR [eax],al
  40e5ec:	stc    
  40e5ed:	jmp    FWORD PTR [edi-0x1]
  40e5f0:	(bad)  
  40e5f1:	fadd   QWORD PTR [eax]
  40e5f3:	jmp    esi
  40e5f5:	push   DWORD PTR [ecx+0x0]
  40e5f8:	dec    DWORD PTR [ebx]
  40e5fa:	call   0xffff:0x2b0098cc
  40e601:	cmp    cl,ch
  40e603:	cmp    DWORD PTR [edx],0xffffffff
  40e606:	cmp    bh,0x83
  40e609:	pop    eax
  40e60a:	fisttp WORD PTR [ecx-0x3dff1d]
  40e610:	add    BYTE PTR ds:0x83bfff9b,dl
  40e616:	cmp    bh,bh
  40e618:	add    dl,ah
  40e61a:	cmp    eax,DWORD PTR [eax]
  40e61c:	ret    0xa00
  40e61f:	add    bh,bh
  40e621:	leave  
  40e622:	add    DWORD PTR [ebx+0x33fff9],0xb5ebff
  40e62c:	jmp    0x35f2:0xffb0ff
  40e633:	add    BYTE PTR [edi],dh
  40e635:	(bad)  
  40e636:	(bad)  
  40e638:	push   DWORD PTR [esp+eiz*4]
  40e63b:	add    BYTE PTR [edi],dl
  40e63d:	call   DWORD PTR [eax+eax*1+0xe7dcff]
  40e644:	xchg   esp,eax
  40e645:	call   DWORD PTR [esi]
  40e647:	(bad)  
  40e648:	dec    DWORD PTR [eax+0x62]
  40e64b:	cmp    ebp,0xffffffcc
  40e64e:	mov    al,ds:0xe271ff83
  40e653:	(bad)  
  40e654:	mov    esi,0xaf83
  40e659:	cmp    al,0x29
  40e65b:	add    DWORD PTR [eax-0x1],0x23
  40e65f:	add    bh,bh
  40e661:	jl     0x40e5f9
  40e663:	add    BYTE PTR [edi+edi*8],dl
  40e666:	pop    es
  40e667:	inc    DWORD PTR [ebx+0x6aff2a17]
  40e66d:	int3   
  40e66e:	aas    
  40e66f:	inc    DWORD PTR [eax]
  40e671:	inc    ebp
  40e672:	lds    eax,FWORD PTR [ebx-0x76ae33e0]
  40e678:	jmp    FWORD PTR [eax]
  40e67a:	hlt    
  40e67b:	(bad)  
  40e67c:	mov    eax,0xff83b183
  40e681:	jmp    0xe1e61d
  40e686:	inc    edi
  40e687:	add    DWORD PTR [eax],0x47
  40e68a:	adc    al,0xff
  40e68c:	out    0xff,al
  40e68e:	lods   al,BYTE PTR ds:[esi]
  40e68f:	add    BYTE PTR [eax],al
  40e691:	inc    edx
  40e692:	ret    
  40e693:	add    cl,ch
  40e695:	(bad)  
  40e696:	(bad)  
  40e697:	inc    DWORD PTR [ebx-0x47008807]
  40e69d:	int3   
  40e69e:	xor    edi,edi
  40e6a0:	add    BYTE PTR [ebp-0x447c93],ah
  40e6a6:	dec    eax
  40e6a7:	mov    edi,edi
  40e6a9:	test   al,0x3e
  40e6ab:	call   FWORD PTR [eax-0x33ffe801]
  40e6b1:	sub    DWORD PTR [ebp-0x1],ebx
  40e6b4:	lods   al,BYTE PTR ds:[esi]
  40e6b5:	add    DWORD PTR [esi],0x0
  40e6b8:	jmp    DWORD PTR [esp+esi*1]
  40e6bb:	add    BYTE PTR [edi+0x0],bh
  40e6be:	popa   
  40e6bf:	add    bh,bh
  40e6c1:	add    al,0x14
  40e6c3:	jmp    edi
  40e6c5:	sub    DWORD PTR [edi-0x28d9ff77],0xffffffff
  40e6cc:	cmp    eax,0x83ff7089
  40e6d1:	dec    esp
  40e6d3:	call   FWORD PTR [esi]
  40e6d5:	call   DWORD PTR [ebx-0x661f0001]
  40e6db:	jmp    FWORD PTR [ebx+0x0]
  40e6de:	lods   al,BYTE PTR ds:[esi]
  40e6df:	add    BYTE PTR [eax],al
  40e6e1:	sub    al,0xb0
  40e6e3:	adc    DWORD PTR [esi],0x0
  40e6e6:	pop    esi
  40e6e7:	(bad)  
  40e6e8:	call   FWORD PTR [eax]
  40e6ea:	or     eax,0x20ff03cc
  40e6ef:	inc    DWORD PTR [eax]
  40e6f1:	int    0x95
  40e6f3:	add    BYTE PTR [ebp-0x1],cl
  40e6f6:	push   esp
  40e6f7:	int3   
  40e6f8:	int3   
  40e6f9:	fld    TBYTE PTR [ecx+0x0]
  40e6fc:	add    BYTE PTR cs:[ecx],al
  40e6ff:	inc    DWORD PTR [eax]
  40e701:	push   0xffffffd4
  40e703:	jmp    DWORD PTR [esi+0x0]
  40e706:	mov    al,0x0
  40e708:	jmp    DWORD PTR [ebx+0x24]
  40e70b:	int3   
  40e70c:	xchg   ecx,eax
  40e70d:	add    BYTE PTR [edi+0x632883ff],ah
  40e713:	add    BYTE PTR [edx],ah
  40e715:	call   DWORD PTR [edx-0x576eff77]
  40e71b:	jmp    DWORD PTR [ecx-0x3300c500]
  40e721:	push   ecx
  40e722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e723:	push   DWORD PTR [eax+eax*1]
  40e726:	iret   
  40e727:	inc    DWORD PTR [ebx-0x38ff5aad]
  40e72d:	(bad)  
  40e72e:	fisttp DWORD PTR [ecx-0x671434]
  40e734:	push   cs
  40e735:	add    BYTE PTR [ebp-0x1],ch
  40e738:	int3   
  40e739:	and    edi,DWORD PTR [ebp-0x1]
  40e73c:	pop    ds
  40e73d:	add    dl,bh
  40e73f:	int3   
  40e740:	push   DWORD PTR [ecx-0x25]
  40e743:	jmp    DWORD PTR [esi+0x891189]
  40e749:	mov    bh,0x6
  40e74b:	add    bh,bl
  40e74d:	dec    DWORD PTR [eax+0x9e1ff83]
  40e753:	inc    DWORD PTR [edx+0x1ff]
  40e759:	mov    al,BYTE PTR [ebx]
  40e75b:	add    BYTE PTR [ecx],dh
  40e75d:	mov    DWORD PTR [eax+eax*1-0x1],ecx
  40e761:	jle    0x40e742
  40e763:	jmp    FWORD PTR [esi-0x33006a01]
  40e769:	inc    ecx
  40e76a:	lock sbb ecx,0xffffffcc
  40e76e:	clc    
  40e76f:	add    BYTE PTR [ebx-0x6300bf36],al
  40e775:	add    BYTE PTR [ebx+0x0],dh
  40e778:	jmp    FWORD PTR [edi]
  40e77a:	xor    cl,ah
  40e77c:	popa   
  40e77d:	add    dl,dh
  40e77f:	dec    DWORD PTR [ecx+0x64ff5d4d]
  40e785:	mov    DWORD PTR [ecx-0x7d],edi
  40e788:	sub    eax,0x40
  40e78b:	mov    edx,esp
  40e78d:	add    ah,ah
  40e78f:	inc    DWORD PTR [eax]
  40e791:	cwde   
  40e792:	adc    edi,edi
  40e794:	scas   eax,DWORD PTR es:[edi]
  40e795:	jmp    DWORD PTR [eax]
  40e797:	inc    DWORD PTR [ebx-0x4c000479]
  40e79d:	(bad)  
  40e79e:	fdiv   st(7),st
  40e7a0:	add    BYTE PTR [ebp+eax*8-0x1],al
  40e7a4:	push   0xff2a00
  40e7a9:	bound  esp,QWORD PTR [esi]
  40e7ab:	dec    DWORD PTR [edx-0x7c00c401]
  40e7b1:	(bad)  
  40e7b2:	or     eax,0xd800adff
  40e7b7:	(bad)  
  40e7b8:	call   FWORD PTR [ecx+eiz*1]
  40e7bb:	(bad)  
  40e7bc:	jmp    0x40e7be
  40e7be:	(bad)  
  40e7bf:	inc    DWORD PTR [eax]
  40e7c1:	mov    dh,BYTE PTR [ecx]
  40e7c3:	mov    eax,ecx
  40e7c5:	cmp    DWORD PTR [eax-0x1],0xffffff83
  40e7c9:	pusha  
  40e7ca:	outs   dx,DWORD PTR ds:[esi]
  40e7cb:	(bad)  
  40e7cc:	fiadd  DWORD PTR [ebx+0x5ffff7a]
  40e7d2:	or     eax,0x77003483
  40e7d7:	add    BYTE PTR [ebx-0x5e7c9ecd],al
  40e7dd:	add    BYTE PTR [edx-0x34],ch
  40e7e0:	(bad)  
  40e7e1:	cmp    eax,0x895fff75
  40e7e6:	jnp    0x40e7e7
  40e7e8:	add    bl,ah
  40e7ea:	cmp    bh,0xc9
  40e7ed:	call   FWORD PTR [edi+edi*8-0x1]
  40e7f1:	pop    ecx
  40e7f2:	lods   eax,DWORD PTR ds:[esi]
  40e7f3:	add    ah,ah
  40e7f5:	add    ch,dh
  40e7f7:	mov    edi,edi
  40e7f9:	jp     0x40e84d
  40e7fb:	jmp    FWORD PTR [ecx+0x0]
  40e7fe:	inc    ecx
  40e7ff:	cmp    edi,0x3e
  40e802:	rol    BYTE PTR [eax],0x16
  40e805:	call   DWORD PTR [edi]
  40e807:	(bad)  
  40e808:	jmp    FWORD PTR [edi+0x31]
  40e80b:	add    BYTE PTR [eax+0x0],ah
  40e80e:	out    dx,al
  40e80f:	inc    DWORD PTR [ebx-0x487ccd23]
  40e815:	adc    DWORD PTR [edx+0x692f0000],0x0
  40e81c:	fld    QWORD PTR [eax]
  40e81e:	sar    edi,cl
  40e820:	int3   
  40e821:	pusha  
  40e822:	fdivp  st(7),st
  40e824:	cwde   
  40e825:	add    BYTE PTR [ebp-0x1],al
  40e828:	add    BYTE PTR [edx],ch
  40e82a:	xchg   edi,eax
  40e82b:	call   FWORD PTR [eax-0x34]
  40e82e:	scas   al,BYTE PTR es:[edi]
  40e82f:	add    BYTE PTR [ecx-0x5e00b150],cl
  40e835:	jmp    FWORD PTR [ecx-0x77]
  40e838:	jmp    FWORD PTR [eax+0x5f]
  40e83b:	int3   
  40e83c:	lock add BYTE PTR [ebx+0x2b7b00ff],cl
  40e843:	mov    esp,esi
  40e845:	mov    DWORD PTR [eax],ecx
  40e847:	add    BYTE PTR [eax],al
  40e849:	xor    cl,dh
  40e84b:	call   DWORD PTR [edi-0x7c766601]
  40e851:	jmp    0x838a:0xcc2f89e6
  40e858:	jmp    DWORD PTR [esi*4-0x5aff727d]
  40e85f:	cmp    edi,0x1e
  40e862:	mov    ebp,0xbdff12ff
  40e867:	cmp    edi,0x33
  40e86a:	push   es
  40e86b:	add    BYTE PTR [ebx-0x34],ch
  40e86e:	jp     0x40e870
  40e870:	int3   
  40e871:	scas   al,BYTE PTR es:[edi]
  40e872:	test   al,0xff
  40e874:	sti    
  40e875:	int3   
  40e876:	xchg   BYTE PTR [eax],al
  40e878:	(bad)  
  40e879:	jnp    0x40e8dd
  40e87b:	dec    DWORD PTR [ecx-0x76003600]
  40e881:	sbb    edx,DWORD PTR [edi]
  40e883:	and    edx,0xffffffcc
  40e886:	mov    ch,0x0
  40e888:	call   DWORD PTR ds:0x891d0009
  40e88e:	sar    bh,0x83
  40e891:	lahf   
  40e892:	mov    eax,ds:0x2100e000
  40e897:	inc    DWORD PTR [eax]
  40e899:	jbe    0x40e876
  40e89b:	add    BYTE PTR [ecx-0x34],cl
  40e89e:	das    
  40e89f:	add    DWORD PTR [eax],0x76
  40e8a2:	add    DWORD PTR [ebx+0x24ffc6],0xffffffff
  40e8a9:	adc    BYTE PTR [eax-0x1],al
  40e8ac:	fwait
  40e8ad:	int3   
  40e8ae:	rol    DWORD PTR [eax],0x83
  40e8b1:	retf   
  40e8b2:	retf   
  40e8b3:	add    DWORD PTR [eax],0xffffffff
  40e8b6:	ins    BYTE PTR es:[edi],dx
  40e8b7:	inc    DWORD PTR [eax]
  40e8b9:	shl    BYTE PTR [edi-0x77],0x92
  40e8bd:	add    BYTE PTR [ecx-0x7d],bh
  40e8c0:	inc    DWORD PTR [esi+ebp*4]
  40e8c3:	add    BYTE PTR [eax+0x0],ch
  40e8c6:	sbb    edi,edi
  40e8c8:	inc    DWORD PTR [ecx+0x23]
  40e8cb:	int3   
  40e8cc:	jle    0x40e8ce
  40e8ce:	cmp    al,0xcc
  40e8d0:	add    ecx,0xffffffb1
  40e8d3:	int3   
  40e8d4:	repnz add BYTE PTR ds:0xbae3ffff,ah
  40e8db:	dec    DWORD PTR [ebx+0x0]
  40e8de:	mov    eax,0x2a1b00ff
  40e8e3:	mov    DWORD PTR [ebp+0x3bcc],esp
  40e8e9:	imul   BYTE PTR [ebx]
  40e8eb:	add    BYTE PTR [esi],dh
  40e8ed:	push   DWORD PTR [ebx+0x421cff00]
  40e8f3:	int3   
  40e8f4:	lock dec DWORD PTR [eax]
  40e8f7:	add    BYTE PTR [eax],al
  40e8f9:	jno    0x40e957
  40e8fb:	sub    DWORD PTR [ecx-0x33005f34],0x4d
  40e902:	pop    eax
  40e903:	call   FWORD PTR [edx]
  40e905:	int3   
  40e906:	mov    edi,?
  40e908:	mov    DWORD PTR [edx+0xbbff49],esp
  40e90e:	inc    edx
  40e90f:	add    BYTE PTR [eax],al
  40e911:	retf   0xfff7
  40e914:	and    bh,bh
  40e916:	mov    ds:0x50fb00ff,al
  40e91b:	dec    DWORD PTR [ebp-0x34]
  40e91e:	ins    BYTE PTR es:[edi],dx
  40e91f:	int3   
  40e920:	adc    DWORD PTR [edx],0xffffffdd
  40e923:	inc    esp
  40e925:	push   DWORD PTR ds:0x24cdcc00
  40e92b:	(bad)  
  40e92c:	aas    
  40e92d:	call   esp
  40e92f:	add    BYTE PTR [ebx+0x47ff20d6],al
  40e935:	jmp    FWORD PTR [edi+edi*8-0x1]
  40e939:	loope  0x40e968
  40e93b:	int3   
  40e93c:	xlat   BYTE PTR ds:[ebx]
  40e93d:	add    DWORD PTR [esp+ecx*8-0xacce01],0xffffffb7
  40e945:	inc    DWORD PTR [ebp-0x17480001]
  40e94b:	add    BYTE PTR [ecx],dh
  40e94d:	(bad)  
  40e94e:	mov    esi,0xdbfffff
  40e953:	push   edx
  40e955:	push   DWORD PTR [ecx-0x1]
  40e958:	(bad)  
  40e959:	fsub   QWORD PTR [ebp-0x7d]
  40e95c:	ja     0x40e95d
  40e95e:	xchg   ecx,eax
  40e95f:	mov    edi,edi
  40e961:	cdq    
  40e962:	out    0x0,eax
  40e964:	adc    al,0xcc
  40e966:	dec    ebx
  40e967:	add    BYTE PTR [eax],al
  40e969:	and    eax,DWORD PTR [edi+edi*8+0x92002e]
  40e970:	inc    DWORD PTR ds:0xff528346
  40e976:	arpl   di,di
  40e978:	dec    DWORD PTR [edx-0xfe0037]
  40e97e:	pop    ds
  40e97f:	inc    DWORD PTR [ebx+0x3f837f01]
  40e985:	jmp    FWORD PTR [edi+0x4147ff83]
  40e98b:	add    DWORD PTR [eax+0x0],0x30
  40e98f:	inc    DWORD PTR [eax]
  40e991:	jo     0x40e916
  40e993:	add    BYTE PTR [ecx+ecx*4-0x14ff7c84],dh
  40e99a:	xchg   ebp,eax
  40e99b:	add    BYTE PTR [ebp-0x3300e57d],cl
  40e9a1:	loopne 0x40ea20
  40e9a3:	and    esp,0x0
  40e9a6:	in     al,0x0
  40e9a8:	call   DWORD PTR [edx-0x7c027c18]
  40e9ae:	fiadd  WORD PTR [eax]
  40e9b0:	add    BYTE PTR [edi+0xa0002e],ah
  40e9b6:	mov    bh,0xff
  40e9b8:	add    BYTE PTR [ebx-0x98ffd4],cl
  40e9be:	xor    edi,edi
  40e9c0:	call   FWORD PTR [ebp+0x2fffa3]
  40e9c6:	loope  0x40e9c8
  40e9c8:	call   DWORD PTR ds:0xff01831d
  40e9ce:	call   0x65ff:0x37a80000
  40e9d5:	add    BYTE PTR [ebx],dh
  40e9d7:	add    BYTE PTR [eax],al
  40e9d9:	hlt    
  40e9da:	sub    ecx,esp
  40e9dc:	adc    eax,0x83ddff
  40e9e1:	aas    
  40e9e2:	jp     0x40e9e3
  40e9e4:	test   DWORD PTR [eax],eax
  40e9e6:	push   edx
  40e9e7:	add    BYTE PTR [ecx+0x3b007451],cl
  40e9ed:	inc    ebp
  40e9ef:	add    bh,bh
  40e9f1:	cmp    eax,0xff2dff06
  40e9f6:	cmp    bh,0x0
  40e9f9:	or     DWORD PTR [ebx-0x34],0xffffffc8
  40e9fd:	jmp    FWORD PTR [ebx+0x0]
  40ea00:	sub    DWORD PTR [ebp-0x76c10010],0xfffffff5
  40ea07:	inc    DWORD PTR [eax]
  40ea09:	push   ebx
  40ea0a:	dec    edx
  40ea0b:	add    cl,cl
  40ea0d:	add    BYTE PTR [eax+0x62750083],al
  40ea13:	mov    DWORD PTR [ebx-0x1],edx
  40ea16:	leave  
  40ea17:	add    BYTE PTR [ecx+0x7b893639],cl
  40ea1d:	add    BYTE PTR [eax+eax*1],dh
  40ea20:	dec    DWORD PTR [eax+0x6e]
  40ea23:	push   DWORD PTR [ebp+0x0]
  40ea26:	xor    eax,DWORD PTR [eax]
  40ea28:	dec    ebx
  40ea2a:	sbb    eax,0x17ccf5ff
  40ea2f:	int3   
  40ea30:	add    BYTE PTR [ebx+0x83b6],ch
  40ea36:	lods   al,BYTE PTR ds:[esi]
  40ea37:	int3   
  40ea38:	call   DWORD PTR [edi-0x64]
  40ea3b:	xor    DWORD PTR [ebx-0x33e534],0xffffffa1
  40ea42:	hlt    
  40ea43:	(bad)  
  40ea44:	cmp    DWORD PTR [ecx-0x70000064],ecx
  40ea4a:	push   cs
  40ea4b:	add    BYTE PTR [eax-0x7c009f01],dl
  40ea51:	pop    ebp
  40ea52:	mov    ch,0x0
  40ea54:	pop    ss
  40ea55:	int3   
  40ea56:	out    dx,al
  40ea57:	(bad)  
  40ea58:	push   esi
  40ea5a:	inc    edi
  40ea5b:	(bad)  
  40ea5c:	fdiv   st(7),st
  40ea5e:	(bad)  
  40ea60:	jmp    FWORD PTR [esi]
  40ea62:	pusha  
  40ea63:	int3   
  40ea64:	test   al,0x0
  40ea66:	sub    ecx,DWORD PTR [ecx-0xa5fc00]
  40ea6c:	dec    BYTE PTR [ecx+0x67cc00c8]
  40ea72:	sbb    al,0xff
  40ea74:	or     DWORD PTR [eax],eax
  40ea76:	in     eax,0xff
  40ea78:	int3   
  40ea79:	pop    ebp
  40ea7a:	in     eax,dx
  40ea7b:	add    BYTE PTR [esi-0x76fff700],cl
  40ea81:	ins    BYTE PTR es:[edi],dx
  40ea82:	push   eax
  40ea83:	add    BYTE PTR [edx-0x1],al
  40ea86:	ud0    eax,DWORD PTR [eax]
  40ea89:	pushf  
  40ea8a:	adc    eax,0xa2ff79ff
  40ea8f:	dec    esp
  40ea91:	adc    eax,0xffd1006d
  40ea96:	add    al,0x0
  40ea98:	(bad)  
  40ea99:	cmp    eax,0xff208392
  40ea9e:	pop    ebx
  40ea9f:	add    BYTE PTR [ebx-0x59ffd943],al
  40eaa5:	add    BYTE PTR [ebp-0x34],bh
  40eaa8:	add    BYTE PTR [edi-0x7a],cl
  40eaab:	int3   
  40eaac:	xchg   edi,eax
  40eaad:	add    BYTE PTR [ebp-0x34],ah
  40eab0:	add    BYTE PTR [ebp+0xa300e9],bh
  40eab6:	out    dx,eax
  40eab7:	inc    DWORD PTR [eax]
  40eab9:	out    dx,eax
  40eaba:	call   FWORD PTR ds:[eax]
  40eabd:	mov    DWORD PTR [ebx+0x0],eax
  40eac0:	cmp    ebp,0x1f
  40eac3:	(bad)  
  40eac4:	fdivp  st(7),st
  40eac6:	es (bad) 
  40eac8:	inc    edi
  40eaca:	pusha  
  40eacb:	sub    DWORD PTR [edx-0xff2701],0x4c
  40ead2:	and    esp,ecx
  40ead4:	push   edi
  40ead5:	dec    ecx
  40ead7:	add    DWORD PTR [eax],0xffffff90
  40eada:	jae    0x40eadc
  40eadc:	pushf  
  40eadd:	add    BYTE PTR [edi+edi*8],bl
  40eae0:	inc    DWORD PTR [eax+0x60]
  40eae3:	push   eax
  40eae5:	add    BYTE PTR ds:0xcb5cc83,bh
  40eaeb:	call   DWORD PTR ds:0xff83b4ff
  40eaf1:	std    
  40eaf2:	or     ecx,DWORD PTR [ecx+0xd3ff4f]
  40eaf8:	mov    ebp,esp
  40eafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafb:	or     DWORD PTR [ebx+0x0],0x71
  40eaff:	mov    DWORD PTR [ecx+0x79898983],ecx
  40eb05:	mov    edx,ebp
  40eb07:	(bad)  
  40eb08:	push   DWORD PTR [edi-0x1a]
  40eb0b:	add    BYTE PTR [ebx+eax*4-0x6dff00d6],cl
  40eb12:	ins    BYTE PTR es:[edi],dx
  40eb13:	(bad)  
  40eb14:	jl     0x40eb15
  40eb16:	mov    ecx,0xcc7000ff
  40eb1b:	or     ebx,0xffffffff
  40eb1e:	xchg   edx,eax
  40eb1f:	inc    DWORD PTR [ebx-0x5e00b087]
  40eb25:	inc    DWORD PTR [ecx+ecx*4-0x34]
  40eb29:	shr    BYTE PTR [eax-0x1],cl
  40eb2c:	inc    eax
  40eb2d:	(bad)  
  40eb2e:	out    dx,eax
  40eb2f:	(bad)  
  40eb30:	call   FWORD PTR [ecx-0x76]
  40eb33:	call   edx
  40eb35:	add    BYTE PTR ds:0x322eff00,ch
  40eb3b:	call   FWORD PTR [ebx]
  40eb3d:	jmp    DWORD PTR [ebp+0x3448ffff]
  40eb43:	add    BYTE PTR [esp+ecx*8-0x17],al
  40eb47:	int3   
  40eb48:	jmp    DWORD PTR [esi]
  40eb4a:	leave  
  40eb4b:	int3   
  40eb4c:	dec    eax
  40eb4d:	inc    DWORD PTR ds:0x434789ff
  40eb53:	add    BYTE PTR [ebp+0x0],dl
  40eb56:	in     eax,0x0
  40eb58:	cmp    DWORD PTR [esi-0x73ff8e],0xc
  40eb5f:	add    DWORD PTR [eax],0x4c
  40eb62:	fdivp  st(7),st
  40eb64:	push   es
  40eb65:	jmp    FWORD PTR [eax+eax*1]
  40eb68:	dec    DWORD PTR [ebx+0xe83b7]
  40eb6e:	pop    esp
  40eb6f:	add    bh,bh
  40eb71:	outs   dx,DWORD PTR ds:[esi]
  40eb72:	push   ss
  40eb73:	push   DWORD PTR [ebx]
  40eb75:	(bad)  
  40eb76:	jg     0x40eb77
  40eb78:	dec    DWORD PTR [edi]
  40eb7a:	adc    bh,bh
  40eb7c:	cs (bad) 
  40eb7e:	fimul  DWORD PTR [ecx+0x456083]
  40eb84:	dec    edx
  40eb85:	dec    DWORD PTR [edx]
  40eb87:	inc    DWORD PTR [ebx+0x48ff9052]
  40eb8d:	jmp    DWORD PTR [edi+0x25fffff]
  40eb93:	push   DWORD PTR ds:0xffffe189
  40eb99:	and    eax,0xff8b89de
  40eb9e:	mov    ?,edi
  40eba0:	add    dh,bh
  40eba2:	xchg   edi,eax
  40eba3:	dec    DWORD PTR [ecx-0x3300a501]
  40eba9:	ins    DWORD PTR es:[edi],dx
  40ebaa:	jb     0x40ebab
  40ebac:	and    DWORD PTR [ebx-0x313300d6],eax
  40ebb2:	sbb    al,BYTE PTR [eax]
  40ebb4:	mov    al,ds:0xcc00ed00
  40ebb9:	fisubr DWORD PTR [esi+0xd005fcc]
  40ebbf:	mov    esp,ecx
  40ebc1:	retf   0xff5f
  40ebc4:	xchg   ebx,eax
  40ebc5:	call   ebp
  40ebc7:	inc    DWORD PTR [eax]
  40ebc9:	push   esi
  40ebca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebcb:	jmp    FWORD PTR [eax-0x33000c00]
  40ebd1:	add    al,0x6b
  40ebd3:	call   FWORD PTR [edx+0xffe600]
  40ebd9:	lods   al,BYTE PTR ds:[esi]
  40ebda:	push   edx
  40ebdb:	inc    DWORD PTR [ecx+0x0]
  40ebde:	sbb    eax,0x55b6ffff
  40ebe3:	add    dl,dl
  40ebe5:	mov    DWORD PTR [edx-0x62400001],eax
  40ebeb:	add    BYTE PTR [edx-0x1],dl
  40ebee:	cmp    al,0x0
  40ebf0:	int3   
  40ebf1:	jecxz  0x40ec38
  40ebf3:	jmp    FWORD PTR [eax]
  40ebf5:	(bad)  
  40ebf6:	cmp    edi,edi
  40ebf8:	add    ah,ah
  40ebfa:	lock int3 
  40ebfc:	leave  
  40ebfd:	and    DWORD PTR [ebx-0x21e77d00],0xffffffff
  40ec04:	in     eax,0x89
  40ec06:	xor    al,0x0
  40ec08:	push   DWORD PTR [ebp-0x66]
  40ec0b:	add    BYTE PTR ds:0x19ff,al
  40ec11:	push   0x66ff30
  40ec16:	mov    bl,0x83
  40ec18:	add    bl,dl
  40ec1a:	ins    BYTE PTR es:[edi],dx
  40ec1b:	adc    DWORD PTR [edx-0x7cff6400],0xffffffda
  40ec22:	mov    al,ds:0x7200ec83
  40ec27:	add    DWORD PTR [ebx-0x51ff3058],0xffffffff
  40ec2e:	call   0x1aff:0x38a1ff83
  40ec35:	push   DWORD PTR [ebp-0x1]
  40ec38:	jmp    DWORD PTR [esi-0x60]
  40ec3b:	add    al,al
  40ec3d:	call   FWORD PTR [ebp-0x7d]
  40ec40:	add    bh,dl
  40ec42:	jbe    0x40ebc7
  40ec44:	jmp    0x40ec45
  40ec46:	adc    bh,bh
  40ec48:	add    BYTE PTR [edx-0x3b7621],al
  40ec4e:	sub    al,0x0
  40ec50:	jmp    DWORD PTR [esp+edi*4]
  40ec53:	add    BYTE PTR [ebp-0x337cd701],dl
  40ec59:	into   
  40ec5a:	cmp    edi,edi
  40ec5c:	push   esi
  40ec5d:	call   DWORD PTR [esi+0x0]
  40ec60:	inc    eax
  40ec62:	mov    bl,0x0
  40ec64:	test   DWORD PTR [eax],eax
  40ec66:	sub    eax,DWORD PTR [eax]
  40ec68:	call   FWORD PTR [esi+0x21]
  40ec6b:	add    dh,al
  40ec6d:	add    BYTE PTR [ecx],al
  40ec6f:	inc    DWORD PTR [ebx+0x23ff9095]
  40ec75:	jmp    FWORD PTR [edi+0x70120000]
  40ec7b:	push   DWORD PTR [edx+0xbcc]
  40ec81:	jae    0x40ec83
  40ec83:	add    BYTE PTR [edi+edi*8+0x44],dl
  40ec87:	(bad)  
  40ec88:	call   FWORD PTR [ecx]
  40ec8a:	push   ebp
  40ec8b:	call   DWORD PTR [edi+edi*8+0x10]
  40ec8f:	(bad)  
  40ec90:	jmp    eax
  40ec92:	popf   
  40ec93:	(bad)  
  40ec94:	mov    edx,0xff837f00
  40ec99:	loop   0x40ecb4
  40ec9b:	call   FWORD PTR [esi]
  40ec9d:	jmp    FWORD PTR [ecx-0x7d]
  40eca0:	cmp    DWORD PTR [edx],0xffffffb4
  40eca3:	dec    DWORD PTR [edx+0xff2883]
  40eca9:	(bad)  
  40ecaa:	or     BYTE PTR [eax],al
  40ecac:	xchg   edi,eax
  40ecad:	add    BYTE PTR [ebx],ch
  40ecaf:	cmp    edi,0x8
  40ecb2:	or     eax,0xf5ccde00
  40ecb7:	add    DWORD PTR [eax],0x6f
  40ecba:	cmp    bh,bh
  40ecbc:	cmp    edi,edi
  40ecbe:	test   edi,edi
  40ecc0:	(bad)  
  40ecc1:	mov    edi,0x8322008a
  40ecc6:	retf   
  40ecc7:	add    ah,cl
  40ecc9:	push   ecx
  40ecca:	mov    edi,0x6500a300
  40eccf:	or     esp,0x12
  40ecd2:	push   es
  40ecd3:	mov    DWORD PTR [ebx-0x7600cb01],ebx
  40ecd9:	add    al,0x64
  40ecdb:	add    BYTE PTR [eax],bh
  40ecdd:	or     DWORD PTR [ecx+0x503d0083],0xffffffff
  40ece4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ece5:	add    DWORD PTR [edi],0x0
  40ece8:	mov    DWORD PTR [edi+0x5e],eax
  40eceb:	add    DWORD PTR [esi],0x0
  40ecee:	into   
  40ecef:	(bad)  
  40ecf0:	jmp    DWORD PTR [ebx-0x71]
  40ecf3:	add    dh,al
  40ecf5:	int3   
  40ecf6:	xor    eax,0xb790000
  40ecfb:	dec    DWORD PTR [esi-0x1]
  40ecfe:	sub    eax,0x956783ff
  40ed03:	sbb    DWORD PTR [edi+edi*8+0x43ffff93],0x6b
  40ed0b:	jmp    FWORD PTR [ebp-0x1]
  40ed0e:	mov    ebp,0x878800cc
  40ed13:	dec    DWORD PTR [eax-0x1]
  40ed16:	push   edi
  40ed17:	(bad)  
  40ed18:	push   DWORD PTR [esi+0x86fffb]
  40ed1e:	xor    al,0xff
  40ed20:	and    eax,0xffffffc7
  40ed23:	jmp    FWORD PTR [ebp-0x7c003001]
  40ed29:	mov    edi,0x28303
  40ed2e:	(bad)  
  40ed30:	add    ah,ah
  40ed32:	(bad)  
  40ed33:	(bad)  
  40ed34:	call   0xc49638
  40ed39:	(bad)  
  40ed3a:	pop    ds
  40ed3b:	int3   
  40ed3c:	pop    es
  40ed3d:	add    BYTE PTR [esi-0x34],cl
  40ed40:	add    BYTE PTR [eax],dh
  40ed42:	outs   dx,BYTE PTR ds:[esi]
  40ed43:	jmp    DWORD PTR [ebp-0x34]
  40ed46:	es int3 
  40ed48:	inc    edx
  40ed4a:	pop    ecx
  40ed4b:	dec    DWORD PTR [edx+0x0]
  40ed4e:	xchg   ebp,eax
  40ed4f:	cmp    edi,0xffffffed
  40ed52:	xchg   bh,bh
  40ed54:	mov    edx,0x83ff8bff
  40ed59:	iret   
  40ed5a:	jnp    0x40ed5b
  40ed5c:	popa   
  40ed5d:	or     DWORD PTR [ebx+eax*4-0x1],0xffffffae
  40ed62:	mov    al,ds:0xf3001383
  40ed67:	add    BYTE PTR [ecx+0x4f89cc32],cl
  40ed6d:	inc    DWORD PTR [edx+0x59dc00ff]
  40ed73:	dec    DWORD PTR ds:0xfffffdcc
  40ed79:	push   ecx
  40ed7a:	pop    ss
  40ed7b:	sbb    DWORD PTR [edx],0xffffffff
  40ed7e:	jbe    0x40ed4c
  40ed80:	dec    DWORD PTR [edx+0x30]
  40ed83:	(bad)  
  40ed84:	call   0xcd3ffe88
  40ed89:	test   BYTE PTR [eax+0x15ff5900],ch
  40ed8f:	(bad)  
  40ed90:	call   DWORD PTR [edx+0x848328]
  40ed96:	cmp    al,BYTE PTR [eax]
  40ed98:	jmp    DWORD PTR [esi-0x5f]
  40ed9b:	jmp    DWORD PTR [ebp+0x0]
  40ed9e:	pop    edi
  40ed9f:	(bad)  
  40eda0:	push   DWORD PTR [ebx+0xbdff5f]
  40eda6:	ud0    ecx,DWORD PTR [ecx-0xd0051a5]
  40edad:	jmp    ebx
  40edaf:	add    BYTE PTR [ebx-0x1f00fec8],al
  40edb5:	call   FWORD PTR [ecx-0x1]
  40edb8:	(bad)  
  40edb9:	cld    
  40edba:	ja     0x40edbb
  40edbc:	inc    esp
  40edbd:	mov    ecx,eax
  40edbf:	inc    DWORD PTR [eax]
  40edc1:	push   ds
  40edc2:	hlt    
  40edc3:	jmp    FWORD PTR [eax-0x7c767a77]
  40edc9:	inc    edi
  40edca:	daa    
  40edcb:	add    BYTE PTR ds:0xff0c00,al
  40edd1:	outs   dx,DWORD PTR ds:[esi]
  40edd2:	loop   0x40edd4
  40edd4:	sbb    al,0x83
  40edd6:	jbe    0x40edd7
  40edd8:	dec    edi
  40edda:	in     al,dx
  40eddb:	add    BYTE PTR [ecx-0x7d],ch
  40edde:	or     eax,0xad6bff00
  40ede3:	mov    DWORD PTR [eax+eax*1-0x333300ef],ecx
  40edea:	int3   
  40edeb:	int3   
  40edec:	int3   
  40eded:	int3   
  40edee:	int3   
  40edef:	int3   
  40edf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edf1:	mov    bl,0x83
  40edf3:	add    BYTE PTR [eax],al
  40edf5:	in     eax,0x32
  40edf7:	add    BYTE PTR [edi],dh
  40edf9:	in     al,0x0
  40edfb:	inc    DWORD PTR [ebx-0x510070cc]
  40ee01:	jns    0x40ee03
  40ee03:	add    bh,bh
  40ee05:	dec    esi
  40ee06:	retf   
  40ee07:	adc    ecx,0x1d
  40ee0a:	(bad)  
  40ee0b:	inc    DWORD PTR [eax]
  40ee0d:	mov    gs:0x899e15ff,al
  40ee13:	add    BYTE PTR [eax],al
  40ee15:	jnp    0x40ee35
  40ee17:	inc    DWORD PTR [ebp-0x337c7cfc]
  40ee1d:	lods   eax,DWORD PTR ds:[esi]
  40ee1e:	xchg   edx,eax
  40ee1f:	sbb    DWORD PTR [ecx+0x29],0xffffffff
  40ee23:	cmp    edi,0xfffffffe
  40ee26:	push   ss
  40ee27:	push   DWORD PTR [ebp+0xff004a]
  40ee2d:	adc    bl,ah
  40ee2f:	(bad)  
  40ee30:	js     0x40edfa
  40ee32:	add    bh,bh
  40ee34:	jmp    FWORD PTR [edx-0x4b520032]
  40ee3a:	add    BYTE PTR [ecx-0xd80000],cl
  40ee40:	xor    eax,0xffffffdc
  40ee45:	das    
  40ee46:	add    al,BYTE PTR [ebx+0xafa]
  40ee4c:	(bad)  
  40ee4d:	jle    0x40ee2d
  40ee4f:	cmp    DWORD PTR [esi],0xffffffa2
  40ee52:	add    bh,bh
  40ee54:	add    BYTE PTR [ebx+0x72948355],dl
  40ee5a:	add    bh,bh
  40ee5c:	(bad)  
  40ee5d:	in     eax,dx
  40ee5e:	fadd   DWORD PTR [eax]
  40ee60:	inc    ebp
  40ee61:	push   es
  40ee62:	add    BYTE PTR [ebx-0x767e5b01],al
  40ee68:	imul   edx,ecx,0xffffffff
  40ee6b:	or     DWORD PTR [ecx-0x17ffc6c0],0xffffffb8
  40ee72:	dec    DWORD PTR [ecx+0x8549ff]
  40ee78:	mov    dh,0xe8
  40ee7a:	cmp    edi,0xffffffff
  40ee7d:	dec    ecx
  40ee7e:	int3   
  40ee7f:	inc    DWORD PTR [edi]
  40ee81:	adc    bh,bh
  40ee83:	int3   
  40ee84:	int3   
  40ee85:	ja     0x40eeba
  40ee87:	call   FWORD PTR [ecx+0x60]
  40ee8a:	(bad)  
  40ee8b:	(bad)  
  40ee8c:	inc    DWORD PTR [edi+0x1bfd0011]
  40ee92:	(bad)  
  40ee93:	inc    DWORD PTR [eax]
  40ee95:	dec    ebp
  40ee96:	inc    eax
  40ee97:	push   DWORD PTR [eax-0x5b]
  40ee9a:	(bad)  
  40ee9b:	inc    DWORD PTR [eax]
  40ee9d:	mov    ds:0x47a98311,al
  40eea2:	add    bh,bh
  40eea4:	jmp    FWORD PTR [edx+0x6e]
  40eea7:	add    BYTE PTR [esi+0x3e],bh
  40eeaa:	int3   
  40eeab:	add    ah,cl
  40eead:	dec    ecx
  40eeae:	cwde   
  40eeaf:	call   DWORD PTR [ecx]
  40eeb1:	xor    edi,edi
  40eeb3:	add    BYTE PTR [eax],al
  40eeb5:	ins    DWORD PTR es:[edi],dx
  40eeb6:	inc    eax
  40eeb7:	add    BYTE PTR [ecx+0x5c],bh
  40eeba:	inc    DWORD PTR [eax]
  40eebc:	cmp    DWORD PTR [ebp+ecx*8-0x7d],0xffffffc7
  40eec1:	in     eax,dx
  40eec2:	add    ah,cl
  40eec4:	jmp    FWORD PTR [esi+0x7ff2ff60]
  40eeca:	add    DWORD PTR [eax],0xffffffcc
  40eecd:	nop
  40eece:	lods   al,BYTE PTR ds:[esi]
  40eecf:	jmp    ebp
  40eed1:	xor    edi,edi
  40eed3:	(bad)  
  40eed4:	jmp    esi
  40eed6:	retf   
  40eed7:	inc    eax
  40eed9:	cmp    ecx,esp
  40eedb:	int3   
  40eedc:	inc    DWORD PTR [eax]
  40eede:	sar    edi,0x50
  40eee1:	jge    0x40eee2
  40eee3:	inc    DWORD PTR [eax]
  40eee5:	nop
  40eee6:	dec    esp
  40eee7:	mov    DWORD PTR [edi],ebp
  40eee9:	fwait
  40eeea:	inc    DWORD PTR [ebx+0x44a000]
  40eef0:	imul   esp,DWORD PTR [ebx+0xe8300ff],0x2f808344
  40eefa:	cmp    edi,0x0
  40eefd:	sbb    eax,0x5426008a
  40ef02:	(bad)  
  40ef03:	(bad)  
  40ef04:	inc    edx
  40ef06:	mov    ebp,0xff732aff
  40ef0b:	add    BYTE PTR [eax],al
  40ef0d:	fadd   st(1),st
  40ef0f:	(bad)  
  40ef10:	jp     0x40ef18
  40ef12:	inc    DWORD PTR [eax]
  40ef14:	dec    DWORD PTR [edi-0x38]
  40ef17:	add    BYTE PTR [ebx],dl
  40ef19:	call   0xff4b:0x34ffffff
  40ef20:	xchg   ecx,eax
  40ef21:	adc    BYTE PTR [eax],al
  40ef23:	add    BYTE PTR [ebx-0x78000d4f],al
  40ef29:	push   ebx
  40ef2a:	(bad)  
  40ef2b:	(bad)  
  40ef2c:	call   DWORD PTR [ebx-0x3638ff45]
  40ef32:	dec    DWORD PTR [ecx-0xf42701]
  40ef38:	out    0x55,al
  40ef3a:	dec    DWORD PTR [ecx-0x7c949877]
  40ef40:	ins    DWORD PTR es:[edi],dx
  40ef41:	std    
  40ef42:	(bad)  
  40ef43:	inc    DWORD PTR [eax]
  40ef45:	jno    0x40ef73
  40ef47:	jmp    DWORD PTR [esi+0x28]
  40ef4a:	dec    esp
  40ef4c:	(bad)  
  40ef4d:	mov    ebp,0xbc3b83a2
  40ef52:	add    BYTE PTR [eax],al
  40ef54:	jmp    DWORD PTR [ecx+edi*1]
  40ef57:	jmp    DWORD PTR [ecx+0x25]
  40ef5a:	cmp    edi,0xffffff89
  40ef5d:	mov    ds,WORD PTR [ecx+ecx*4]
  40ef60:	mov    edi,0x89ff006f
  40ef65:	call   0xba9cef40
  40ef6a:	add    bh,bh
  40ef6c:	call   DWORD PTR [edx]
  40ef6e:	pop    ss
  40ef6f:	jmp    FWORD PTR [edi-0x760045]
  40ef75:	xchg   edi,eax
  40ef76:	pop    esp
  40ef77:	jmp    eax
  40ef79:	and    eax,0x9483ffff
  40ef7e:	in     eax,dx
  40ef7f:	add    dh,al
  40ef81:	jmp    0xce40ef85
  40ef86:	ins    DWORD PTR es:[edi],dx
  40ef87:	push   DWORD PTR [ecx+0xffffe8]
  40ef8d:	cmp    al,0xe8
  40ef8f:	sub    DWORD PTR [ecx+0xff0065],0x44
  40ef96:	mov    cl,0xff
  40ef98:	sar    DWORD PTR [eax-0xe00ff01],0x90
  40ef9f:	jmp    FWORD PTR [esp+edx*4]
  40efa2:	(bad)  
  40efa3:	inc    DWORD PTR [eax]
  40efa5:	cmp    eax,0x5384ff56
  40efaa:	int3   
  40efab:	add    bh,bh
  40efad:	jecxz  0x40effe
  40efaf:	push   ecx
  40efb1:	aam    0x0
  40efb3:	add    BYTE PTR [eax],al
  40efb5:	imul   esp,DWORD PTR [ebx],0x2a0589
  40efbb:	add    ah,cl
  40efbd:	js     0x40efdd
  40efbf:	call   DWORD PTR [esi+0x2e]
  40efc2:	add    DWORD PTR [eax],0xffffffcc
  40efc5:	or     al,0x67
  40efc7:	sbb    DWORD PTR [esi+0x7d],0x0
  40efcb:	add    BYTE PTR [eax],al
  40efcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efce:	imul   eax,DWORD PTR [eax],0xffffffb5
  40efd1:	dec    WORD PTR [ecx-0xbba501]
  40efd8:	in     al,dx
  40efd9:	jae    0xb5feefde
  40efdf:	add    BYTE PTR [edi-0xfff7],dh
  40efe5:	(bad)  
  40efe7:	add    BYTE PTR [ecx],dh
  40efe9:	popf   
  40efea:	add    DWORD PTR [eax],0xffffffff
  40efed:	enter  0x8916,0x6
  40eff1:	mov    BYTE PTR [eax],al
  40eff3:	add    bh,bh
  40eff5:	mov    ecx,0xa42bff10
  40effa:	cmp    edi,0xffffffcc
  40effd:	jmp    0x9d51ef80
  40f002:	mov    DWORD PTR [eax],eax
  40f004:	sub    DWORD PTR [eax-0x45],0xffffffff
  40f008:	sub    edi,DWORD PTR [ebx]
  40f00a:	add    BYTE PTR [ebx-0x6dad01],al
  40f010:	lods   al,BYTE PTR ds:[esi]
  40f011:	sahf   
  40f012:	int3   
  40f013:	add    BYTE PTR [eax],al
  40f015:	pop    edi
  40f016:	ret    0x6aff
  40f019:	adc    eax,0x9700ffcc
  40f01e:	sar    edi,0x7e
  40f021:	pop    esp
  40f022:	add    bh,bh
  40f024:	dec    DWORD PTR [ecx]
  40f026:	dec    edx
  40f027:	push   eax
  40f029:	loopne 0x40efae
  40f02b:	dec    esp
  40f02d:	test   DWORD PTR [esp+ecx*8+0xffc8ab],esi
  40f034:	add    BYTE PTR [eax],al
  40f036:	mov    ecx,DWORD PTR [ecx-0x33003648]
  40f03c:	jmp    DWORD PTR [ecx+0x5e]
  40f03f:	mov    esp,esp
  40f041:	jns    0x40f042
  40f043:	(bad)  
  40f044:	jmp    DWORD PTR [edx-0x3dd9ff5c]
  40f04a:	mov    DWORD PTR [ebx+0x24d583],eax
  40f050:	xchg   ecx,eax
  40f051:	adc    eax,DWORD PTR [eax]
  40f053:	inc    DWORD PTR [eax]
  40f055:	sbb    ch,dh
  40f057:	inc    DWORD PTR [edx+ecx*4]
  40f05a:	add    bh,bh
  40f05c:	add    BYTE PTR [edx],bl
  40f05e:	mov    ds:0xa434ff,al
  40f063:	add    bh,bh
  40f065:	jmp    0x8459f115
  40f06a:	int3   
  40f06b:	int3   
  40f06c:	add    BYTE PTR [ebp+0x60],bl
  40f06f:	mov    DWORD PTR [ebx-0x70],esi
  40f072:	add    DWORD PTR [ebx+0x1f2aff],0xffffff91
  40f079:	cmp    BYTE PTR [eax],al
  40f07b:	add    BYTE PTR [eax],al
  40f07d:	or     al,0x62
  40f07f:	inc    DWORD PTR [ecx-0x7cffb0]
  40f085:	jmp    esp
  40f087:	int3   
  40f088:	cmp    al,bl
  40f08a:	add    ah,cl
  40f08c:	add    BYTE PTR [ebx],bl
  40f08e:	xor    al,0xcc
  40f090:	int    0x9b
  40f092:	inc    DWORD PTR [ebx-0xd78634]
  40f098:	ja     0x40f0f1
  40f09a:	add    BYTE PTR [eax],al
  40f09c:	dec    DWORD PTR [esi]
  40f09e:	add    bh,bh
  40f0a0:	adc    ah,bh
  40f0a2:	inc    DWORD PTR [ebx+0xbd84cc]
  40f0a8:	arpl   WORD PTR [edi+0x76ccffff],bp
  40f0ae:	add    bh,bh
  40f0b0:	add    BYTE PTR [ecx-0x1],bh
  40f0b3:	add    BYTE PTR [ebx-0x68ff3473],al
  40f0b9:	mov    dl,0x83
  40f0bb:	cmp    edi,0x40
  40f0be:	cmp    BYTE PTR [ebx+0x8318bd],al
  40f0c4:	jmp    FWORD PTR [edx+ebp*8+0x0]
  40f0c8:	ret    
  40f0c9:	cli    
  40f0ca:	add    bh,bh
  40f0cc:	add    BYTE PTR ds:0x7874ff33,cl
  40f0d2:	cmp    edi,0xffffffff
  40f0d5:	mov    eax,0x798f00c6
  40f0da:	inc    DWORD PTR [ebx+0xee0ff]
  40f0e0:	lea    esi,[ebx+0x0]
  40f0e3:	add    bh,bh
  40f0e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e6:	jns    0x40f0e7
  40f0e8:	scas   eax,DWORD PTR es:[edi]
  40f0e9:	adc    al,BYTE PTR [eax]
  40f0eb:	dec    DWORD PTR [ecx+0x6eff3fb4]
  40f0f1:	inc    DWORD PTR [eax]
  40f0f3:	dec    DWORD PTR [ecx-0x2300396b]
  40f0f9:	mov    ecx,0x9effff00
  40f0fe:	mov    cl,0x83
  40f100:	loopne 0x40f148
  40f102:	add    bh,bh
  40f104:	dec    ebp
  40f106:	adc    eax,0x83de83ff
  40f10b:	mov    esp,ecx
  40f10d:	not    esp
  40f10f:	call   FWORD PTR [ecx+0x39]
  40f112:	add    BYTE PTR [ebx-0xcf6901],al
  40f118:	sbb    dh,BYTE PTR [eax-0x1]
  40f11b:	int3   
  40f11c:	dec    DWORD PTR [ebp-0x634aff61]
  40f122:	add    ah,cl
  40f124:	mov    ebp,edx
  40f126:	in     al,0x0
  40f128:	fimul  WORD PTR [edx+0x0]
  40f12b:	int3   
  40f12c:	add    BYTE PTR [ecx+eiz*1-0x1],bh
  40f130:	mov    bh,0x78
  40f132:	inc    DWORD PTR [ebx-0x86f01]
  40f138:	mov    edi,0x83000030
  40f13d:	ds push cs
  40f13f:	call   FWORD PTR [edx+0xccff9f]
  40f145:	aas    
  40f146:	aas    
  40f147:	jmp    FWORD PTR [edi+ebx*8+0x72cc83ff]
  40f14e:	cmp    edi,edi
  40f150:	in     al,0x8b
  40f152:	inc    DWORD PTR [eax]
  40f154:	mov    esp,esi
  40f156:	jl     0x40f0e1
  40f158:	adc    BYTE PTR [edi],ch
  40f15a:	inc    DWORD PTR [eax]
  40f15c:	dec    DWORD PTR [ebx+0x58500dd]
  40f162:	add    bh,bh
  40f164:	dec    DWORD PTR [edx-0x42]
  40f167:	mov    DWORD PTR ds:0x8983ffff,edi
  40f16d:	outs   dx,BYTE PTR ds:[esi]
  40f16e:	pop    edi
  40f16f:	jmp    FWORD PTR [edx]
  40f171:	int    0x0
  40f173:	dec    esp
  40f175:	and    al,0x88
  40f177:	inc    DWORD PTR [esi-0x3358]
  40f17d:	cmp    DWORD PTR [eax+0x0],esp
  40f180:	pop    ebx
  40f181:	add    DWORD PTR [ebx+0x2931ffff],0x0
  40f188:	jnp    0x40f1cb
  40f18a:	inc    DWORD PTR [eax]
  40f18c:	add    BYTE PTR [ecx-0x3f3dff9c],dh
  40f192:	inc    DWORD PTR [ebx-0x81b01]
  40f198:	jmp    0xd29d:0xff00ff85
  40f19f:	or     DWORD PTR [ebx+ebp*8-0x2c7c7d00],0x10
  40f1a7:	add    BYTE PTR [edi+0x15],cl
  40f1aa:	add    BYTE PTR [eax],al
  40f1ac:	jmp    esi
  40f1ae:	in     eax,0xff
  40f1b0:	dec    ebx
  40f1b1:	(bad)  
  40f1b2:	dec    DWORD PTR [ecx-0x2e2001]
  40f1b8:	mov    ebx,0xff0000ee
  40f1bd:	clc    
  40f1be:	fwait
  40f1bf:	and    DWORD PTR [edx-0xe],0xffffff83
  40f1c3:	int3   
  40f1c4:	add    BYTE PTR ds:0x25ab00e5,bl
  40f1ca:	add    bh,bh
  40f1cc:	jmp    DWORD PTR [ecx+esi*1-0xfced77]
  40f1d3:	cmp    edi,0xffffffc4
  40f1d6:	push   ebx
  40f1d7:	add    BYTE PTR [ebp-0x76ffff33],ah
  40f1dd:	push   esp
  40f1de:	push   0x6067ff
  40f1e3:	add    BYTE PTR [eax],al
  40f1e5:	dec    esi
  40f1e6:	cdq    
  40f1e7:	add    BYTE PTR [esi],ah
  40f1e9:	cmp    esp,ecx
  40f1eb:	add    BYTE PTR [eax],al
  40f1ed:	mov    eax,ecx
  40f1ef:	jmp    DWORD PTR [ebx+0x26]
  40f1f2:	add    bh,bh
  40f1f4:	(bad)  
  40f1f5:	jle    0x40f230
  40f1f7:	dec    DWORD PTR [ecx-0x80]
  40f1fa:	inc    DWORD PTR [eax]
  40f1fc:	int3   
  40f1fd:	jne    0x40f1d7
  40f1ff:	add    DWORD PTR [edi+esi*4],0x0
  40f203:	add    bh,bh
  40f205:	ja     0x40f213
  40f207:	int3   
  40f208:	sbb    DWORD PTR [ebx],esi
  40f20a:	(bad)  
  40f20b:	inc    DWORD PTR [eax]
  40f20d:	jg     0x40f1c4
  40f20f:	add    BYTE PTR [edi-0xff3b],cl
  40f215:	inc    esp
  40f216:	pop    ebp
  40f217:	sbb    DWORD PTR [esi],0xe
  40f21a:	add    bh,bh
  40f21c:	jmp    DWORD PTR [ebp-0x16437c90]
  40f222:	add    bh,bh
  40f224:	add    BYTE PTR [ebx],dh
  40f226:	loopne 0x40f227
  40f228:	and    DWORD PTR [ebp+0x0],ebp
  40f22b:	inc    DWORD PTR [ebx-0x7ff7074]
  40f231:	out    dx,al
  40f232:	dec    esp
  40f234:	adc    ecx,0x64
  40f237:	inc    edi
  40f239:	test   edi,edi
  40f23b:	add    BYTE PTR [ebx-0x2ffff70f],al
  40f241:	rol    DWORD PTR [eax],0x0
  40f244:	dec    DWORD PTR [eax+0x6]
  40f247:	add    BYTE PTR ds:0x838337,cl
  40f24d:	mov    ds:0xa8e1ff7f,al
  40f252:	add    BYTE PTR [ebx-0x5ca534],al
  40f258:	popa   
  40f259:	pop    es
  40f25a:	mov    edi,edi
  40f25c:	sbb    DWORD PTR [ebx+0x3b7e00b4],0xffffffcc
  40f263:	add    DWORD PTR [ebx-0x37c2afc],0x77
  40f26a:	add    bh,bh
  40f26c:	add    bh,ah
  40f26e:	repz int3 
  40f270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f271:	scas   al,BYTE PTR es:[edi]
  40f272:	mov    DWORD PTR [eax],eax
  40f274:	and    DWORD PTR [esi+0x12c7cca1],0x0
  40f27b:	inc    DWORD PTR [eax]
  40f27d:	push   esi
  40f27e:	push   cs
  40f27f:	add    al,bl
  40f281:	adc    al,0x0
  40f283:	add    bh,bh
  40f285:	pop    ebx
  40f286:	and    al,0xff
  40f288:	and    DWORD PTR [ebx],esp
  40f28a:	add    bh,bh
  40f28c:	add    BYTE PTR ds:0xcd02ff88,dh
  40f292:	add    bh,bh
  40f294:	push   DWORD PTR [edx]
  40f296:	jns    0x40f264
  40f298:	(bad)  
  40f299:	jmp    0x40f29a
  40f29b:	add    BYTE PTR [eax],al
  40f29d:	pop    ds
  40f29e:	adc    al,BYTE PTR [ebx-0x33ff9230]
  40f2a4:	jmp    esi
  40f2a6:	mov    ecx,0xff370a00
  40f2ab:	dec    DWORD PTR [ecx+0x59ffd663]
  40f2b1:	cli    
  40f2b2:	add    BYTE PTR [ebx+0x7143ff],al
  40f2b8:	jp     0x40f25b
  40f2ba:	int3   
  40f2bb:	(bad)  
  40f2bc:	dec    DWORD PTR ds:0xc28003e
  40f2c2:	add    DWORD PTR [eax],0xffffffcc
  40f2c5:	mov    edx,?
  40f2c7:	jmp    DWORD PTR [edx]
  40f2c9:	adc    edi,edi
  40f2cb:	(bad)  
  40f2cc:	call   edi
  40f2ce:	push   edi
  40f2cf:	add    BYTE PTR [eax+0x79],ch
  40f2d2:	add    BYTE PTR [ecx-0xd7f877],cl
  40f2d8:	jae    0x40f2c4
  40f2da:	add    DWORD PTR [ebx-0x7c83fd01],0xffffffa3
  40f2e1:	daa    
  40f2e2:	inc    DWORD PTR [eax]
  40f2e4:	add    BYTE PTR [esi-0x6795ff71],al
  40f2ea:	inc    DWORD PTR [ebx+0x9165ff]
  40f2f0:	xor    esp,DWORD PTR [edx-0x6e000001]
  40f2f6:	inc    DWORD PTR [eax]
  40f2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2f9:	mov    esi,0xa300ffcc
  40f2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ff:	int3   
  40f300:	aaa    
  40f301:	sub    DWORD PTR [ebx-0x4a44767d],eax
  40f307:	and    DWORD PTR [eax-0x3a],0x0
  40f30b:	(bad)  
  40f30c:	push   DWORD PTR [ecx-0x42e9007b]
  40f312:	add    DWORD PTR [eax],0xffffff89
  40f315:	test   ebx,ebp
  40f317:	jmp    ebp
  40f319:	in     eax,0x83
  40f31b:	add    bh,bh
  40f31d:	cmp    dl,bh
  40f31f:	add    BYTE PTR [ebp-0xff0052],ch
  40f325:	and    dl,BYTE PTR [ecx-0x956200]
  40f32b:	(bad)  
  40f32c:	inc    DWORD PTR [eax-0x367d0074]
  40f332:	add    bh,bh
  40f334:	(bad)  
  40f335:	mov    ecx,0xeeddff07
  40f33a:	add    bh,bh
  40f33c:	call   FWORD PTR [ecx]
  40f33e:	add    al,0x0
  40f340:	pop    ecx
  40f341:	mov    DWORD PTR [eax],0x11acffff
  40f347:	push   DWORD PTR [edi-0x34]
  40f34a:	add    BYTE PTR [ecx+0x3b9000],cl
  40f350:	pop    eax
  40f351:	inc    ebp
  40f352:	add    BYTE PTR [eax],al
  40f354:	mov    DWORD PTR [edx-0x12],ebp
  40f357:	jmp    DWORD PTR [ecx+0xff0096]
  40f35d:	icebp  
  40f35e:	sbb    eax,0xff9dafff
  40f363:	(bad)  
  40f364:	jmp    DWORD PTR [edx-0x2dda002f]
  40f36a:	cmp    edi,0xffffffff
  40f36d:	stos   BYTE PTR es:[edi],al
  40f36e:	or     bh,bh
  40f370:	sbb    BYTE PTR [ecx],al
  40f372:	add    ah,cl
  40f374:	add    BYTE PTR [edi+0x75],bl
  40f377:	(bad)  
  40f378:	clc    
  40f379:	xor    eax,0x87000000
  40f37e:	mov    esp,ecx
  40f380:	in     al,dx
  40f381:	out    0x83,al
  40f383:	int3   
  40f384:	(bad)  
  40f385:	jmp    0xffff:0xd6ad0067
  40f38c:	int3   
  40f38d:	imul   edx,ecx,0x83ceca83
  40f393:	dec    DWORD PTR [ecx+0x70cc0ebe]
  40f399:	sbb    BYTE PTR [eax],al
  40f39b:	dec    esp
  40f39d:	pop    edx
  40f39e:	sub    DWORD PTR [ebx-0x76003bd2],eax
  40f3a4:	push   DWORD PTR [eax]
  40f3a6:	mov    eax,0xffe9d183
  40f3ab:	dec    DWORD PTR [ecx+0x83eb1d]
  40f3b1:	fadd   DWORD PTR [eax]
  40f3b3:	int3   
  40f3b4:	(bad)  
  40f3b5:	jge    0x40f3ca
  40f3b7:	jmp    DWORD PTR [ebx]
  40f3b9:	int    0xcc
  40f3bb:	add    bh,bh
  40f3bd:	shl    ch,1
  40f3bf:	add    BYTE PTR [ebp+0x65],dh
  40f3c2:	int3   
  40f3c3:	add    bh,bh
  40f3c5:	xchg   dx,ax
  40f3c7:	add    BYTE PTR [ebx+0x55],ch
  40f3ca:	inc    DWORD PTR [eax]
  40f3cc:	push   DWORD PTR [ebx-0x488bff83]
  40f3d2:	or     esp,0xffffffff
  40f3d5:	sub    DWORD PTR [eax+eax*1],edx
  40f3d8:	je     0x40f3fc
  40f3da:	add    BYTE PTR [eax],al
  40f3dc:	add    BYTE PTR [ecx+0x2277ff70],cl
  40f3e2:	(bad)  
  40f3e3:	(bad)  
  40f3e4:	jmp    FWORD PTR [ecx]
  40f3e6:	or     DWORD PTR [eax],eax
  40f3e8:	retf   0xff6e
  40f3eb:	mov    edi,edi
  40f3ed:	mov    edi,0xeb14ff40
  40f3f2:	add    BYTE PTR [ebx-0x7c122900],al
  40f3f8:	or     BYTE PTR ss:[ebx+0x7073ff00],al
  40f3ff:	and    DWORD PTR [esp+eiz*4-0x2000001],0xffffffd9
  40f407:	add    dh,dh
  40f409:	fcos   
  40f40b:	(bad)  
  40f40c:	dec    edi
  40f40e:	outs   dx,DWORD PTR ds:[esi]
  40f40f:	add    BYTE PTR [ebp+0xffff37],bh
  40f415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f416:	jo     0x40f3e4
  40f418:	dec    ebp
  40f419:	mov    al,0xff
  40f41b:	dec    DWORD PTR [ecx+0x12ff1685]
  40f421:	es add bh,bh
  40f424:	add    BYTE PTR [eax],dh
  40f426:	push   edx
  40f427:	dec    DWORD PTR [ebx-0x61]
  40f42d:	push   ds
  40f42e:	dec    ebx
  40f42f:	and    DWORD PTR ds:0xffffcc28,0x7e
  40f436:	jmp    0x40f404
  40f438:	enter  0x8370,0xff
  40f43c:	cmp    DWORD PTR [ebx+edi*1+0x0],0xffffffcc
  40f441:	sbb    al,0x0
  40f443:	add    bh,bh
  40f445:	jae    0x40f458
  40f447:	and    ecx,0xffffffca
  40f44a:	inc    DWORD PTR [eax]
  40f44c:	or     DWORD PTR [edx],0xffffffeb
  40f44f:	call   eax
  40f451:	(bad)  
  40f452:	inc    DWORD PTR [ebx-0x8e667d]
  40f458:	mov    dl,0xf3
  40f45a:	add    BYTE PTR [eax],al
  40f45c:	jmp    edx
  40f45e:	mov    bh,bh
  40f460:	mov    eax,ds:0xffff9b
  40f465:	es stos BYTE PTR es:[edi],al
  40f467:	jmp    DWORD PTR [ebx-0x79]
  40f46a:	cmp    edi,0xffffff83
  40f46d:	test   al,0x1
  40f46f:	inc    DWORD PTR [ecx]
  40f471:	iret   
  40f472:	cmp    edi,0x0
  40f475:	sub    al,0xf2
  40f477:	add    BYTE PTR [ebx-0x80],dh
  40f47a:	mov    DWORD PTR [ecx-0x7681bb01],ecx
  40f480:	fwait
  40f481:	scas   eax,DWORD PTR es:[edi]
  40f482:	add    BYTE PTR [eax],al
  40f484:	or     DWORD PTR [eax+0xc],0xffffff83
  40f488:	and    al,0xc7
  40f48a:	(bad)  
  40f48b:	(bad)  
  40f48c:	dec    DWORD PTR ds:0x880600d1
  40f492:	add    bh,bh
  40f494:	inc    eax
  40f496:	ja     0x40f498
  40f498:	sbb    al,0x9c
  40f49a:	add    bh,bh
  40f49c:	add    BYTE PTR [edi+0x275389d1],dl
  40f4a2:	add    BYTE PTR [ebx-0x339fce01],al
  40f4a8:	inc    eax
  40f4a9:	mov    dh,0xcc
  40f4ab:	(bad)  
  40f4ac:	jmp    DWORD PTR [ebp-0x5f]
  40f4af:	add    BYTE PTR ds:0xffffff36,bl
  40f4b5:	and    ah,dl
  40f4b7:	dec    DWORD PTR [edx]
  40f4b9:	inc    ecx
  40f4ba:	add    bh,bh
  40f4bc:	add    BYTE PTR [ebx+0x4d],dh
  40f4bf:	(bad)  
  40f4c0:	jg     0x40f512
  40f4c2:	inc    DWORD PTR [eax]
  40f4c4:	add    BYTE PTR [edx-0xe9c7c33],al
  40f4ca:	add    BYTE PTR [eax],al
  40f4cc:	int3   
  40f4cd:	gs je  0x40f4cf
  40f4d0:	mov    al,0xb0
  40f4d2:	dec    DWORD PTR [ecx-0xa04234]
  40f4d8:	test   BYTE PTR [ebx+0x0],cl
  40f4db:	add    BYTE PTR [eax],al
  40f4dd:	fdivr  DWORD PTR [eax-0x7ccfbb77]
  40f4e3:	int3   
  40f4e4:	add    BYTE PTR [ecx+0x26],ch
  40f4e7:	push   DWORD PTR [esp+ebx*2-0x60ffff01]
  40f4ee:	pop    ss
  40f4ef:	jmp    DWORD PTR [esi]
  40f4f1:	stos   DWORD PTR es:[edi],eax
  40f4f2:	inc    DWORD PTR [eax]
  40f4f4:	jmp    DWORD PTR [esi+0x190400c3]
  40f4fa:	(bad)  
  40f4fb:	dec    DWORD PTR [ecx+0x31007771]
  40f501:	stos   BYTE PTR es:[edi],al
  40f502:	cmp    edi,0x0
  40f505:	cwde   
  40f506:	mov    ebp,0x838d9500
  40f50b:	add    BYTE PTR [ecx+0x7f89ba42],cl
  40f511:	add    BYTE PTR [eax],0xcc
  40f514:	call   DWORD PTR [ebx+eax*2-0x34]
  40f518:	or     DWORD PTR [edx+0x27ffff83],eax
  40f51e:	cmp    al,0xff
  40f520:	mov    ebx,cs
  40f522:	mov    DWORD PTR [eax],eax
  40f524:	mov    ebx,ecx
  40f526:	xor    bh,bh
  40f528:	test   eax,0xccffff61
  40f52d:	cmp    eax,0xc0550049
  40f532:	add    BYTE PTR [eax],al
  40f534:	inc    DWORD PTR ds:0x758cff6e
  40f53a:	mov    DWORD PTR [eax],eax
  40f53c:	add    BYTE PTR [ecx+0x72],ch
  40f53f:	call   FWORD PTR [ebp-0x7c007cdf]
  40f545:	ss pop esp
  40f547:	add    bh,dl
  40f549:	xchg   edx,eax
  40f54a:	(bad)  
  40f54b:	(bad)  
  40f54c:	(bad)  
  40f54d:	mov    ebx,0xf6a1ff72
  40f552:	add    BYTE PTR [eax],al
  40f554:	jmp    DWORD PTR [ecx]
  40f556:	int3   
  40f557:	inc    DWORD PTR [ebp+eax*8+0x6b83ff00]
  40f55e:	aaa    
  40f55f:	add    BYTE PTR [edi-0x3300008c],ah
  40f565:	call   0x1cf7f5eb
  40f56a:	(bad)  
  40f56b:	dec    esp
  40f56d:	ins    BYTE PTR es:[edi],dx
  40f56e:	es add dl,bh
  40f571:	add    BYTE PTR es:[ebx-0x3387307d],al
  40f578:	lahf   
  40f579:	ja     0x40f4fe
  40f57b:	add    BYTE PTR [eax],al
  40f57d:	mov    eax,0xc32ccc6b
  40f582:	add    BYTE PTR [ebx-0xdef000],al
  40f588:	shr    ecx,cl
  40f58a:	int3   
  40f58b:	inc    DWORD PTR [eax]
  40f58d:	mov    cl,0x74
  40f58f:	add    BYTE PTR [edi-0x36],cl
  40f592:	mov    edi,edi
  40f594:	int3   
  40f595:	(bad)  
  40f596:	fld    QWORD PTR [eax]
  40f598:	out    0xbd,al
  40f59a:	add    ah,cl
  40f59c:	and    ebx,0x1
  40f59f:	jmp    DWORD PTR [edi+edi*2-0x2a003334]
  40f5a6:	aad    0xcc
  40f5a8:	dec    DWORD PTR [esi]
  40f5aa:	inc    DWORD PTR [eax]
  40f5ac:	jmp    DWORD PTR [ebp+0x42]
  40f5af:	call   DWORD PTR [esi+esi*4-0x157c0001]
  40f5b6:	jae    0xcd4057cd
  40f5bc:	(bad)  
  40f5bd:	jnp    0x40f637
  40f5bf:	jmp    FWORD PTR [ecx]
  40f5c1:	sahf   
  40f5c2:	inc    DWORD PTR [eax]
  40f5c4:	add    cl,dh
  40f5c6:	mov    DWORD PTR [eax],0xff00c07e
  40f5cc:	dec    DWORD PTR [ecx]
  40f5ce:	jg     0x40f559
  40f5d0:	out    0x83,eax
  40f5d2:	(bad)  
  40f5d3:	inc    DWORD PTR [eax]
  40f5d5:	fld    TBYTE PTR [edi+edi*8]
  40f5d8:	mov    bh,0x68
  40f5da:	add    BYTE PTR [ebx-0x7c8dfb00],al
  40f5e0:	xor    BYTE PTR [edi],dh
  40f5e2:	inc    DWORD PTR [eax]
  40f5e4:	mov    edi,edx
  40f5e6:	cs (bad) 
  40f5e8:	js     0x40f578
  40f5ea:	mov    DWORD PTR [ebx+0x808eff],eax
  40f5f0:	sti    
  40f5f1:	inc    eax
  40f5f2:	(bad)  
  40f5f3:	dec    esp
  40f5f5:	adc    al,0x20
  40f5f7:	add    BYTE PTR [edi+ebx*2],bl
  40f5fa:	cmp    edi,0x0
  40f5fd:	stos   DWORD PTR es:[edi],eax
  40f5fe:	jae    0x40f600
  40f600:	jo     0x40f66b
  40f602:	cmp    edi,0x0
  40f605:	and    DWORD PTR [eax-0x1],0xff89c9e0
  40f60c:	sub    DWORD PTR [edi+0xb],0x0
  40f610:	lock rol BYTE PTR [ebx+0x2b77cc00],1
  40f617:	jmp    DWORD PTR [ecx-0x7d]
  40f61a:	cmp    edi,0x0
  40f61d:	push   0xdfe0830c
  40f622:	add    bh,bh
  40f624:	dec    DWORD PTR ds:0xc1b9ff1a
  40f62a:	add    bh,bh
  40f62c:	dec    eax
  40f62e:	lea    eax,[ebx-0x7600f13f]
  40f634:	add    BYTE PTR [ecx-0x1cfcff17],ch
  40f63a:	inc    DWORD PTR [eax]
  40f63c:	inc    DWORD PTR [ecx+0x7fc6ff64]
  40f642:	add    DWORD PTR [eax],0xffffffcc
  40f645:	jne    0x40f68f
  40f647:	inc    DWORD PTR [eax+0x12]
  40f64a:	int3   
  40f64b:	mov    DWORD PTR [ebx+0x5fff3692],eax
  40f651:	cdq    
  40f652:	add    bh,bh
  40f654:	(bad)  
  40f655:	std    
  40f656:	cli    
  40f657:	jmp    ebx
  40f659:	adc    DWORD PTR [ebx+0x2f9c89ff],eax
  40f65f:	add    ah,bl
  40f661:	dec    ecx
  40f662:	or     esp,0x0
  40f665:	clc    
  40f666:	inc    ecx
  40f667:	push   DWORD PTR [eax+edx*1+0x3c00ccff]
  40f66e:	stos   BYTE PTR es:[edi],al
  40f66f:	add    al,bh
  40f671:	xor    ah,cl
  40f673:	inc    DWORD PTR [eax]
  40f675:	mov    ch,0x63
  40f677:	add    DWORD PTR [ecx+0x70],0xffffffff
  40f67b:	cmp    edi,0xffffffd9
  40f67e:	mov    edi,0x16d5ff
  40f683:	add    DWORD PTR [eax],0xffffffcb
  40f686:	inc    ebp
  40f687:	int3   
  40f688:	lock mov esi,0xc100ffff
  40f68e:	mov    edi,0x7a3300
  40f693:	cmp    edi,0x58
  40f696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f697:	adc    DWORD PTR [ebx+0x1f],0xffffffff
  40f69b:	add    bh,bh
  40f69d:	mov    dl,0xc3
  40f69f:	jmp    DWORD PTR [esi]
  40f6a1:	adc    edi,edi
  40f6a3:	inc    DWORD PTR [ebx+0xeff46cf]
  40f6a9:	dec    esp
  40f6aa:	dec    esp
  40f6ac:	dec    DWORD PTR [esi-0x3d]
  40f6af:	add    BYTE PTR [edi],cl
  40f6b1:	test   DWORD PTR [ebx+0xdd6cc00],eax
  40f6b7:	call   FWORD PTR [ebx-0xd]
  40f6ba:	add    BYTE PTR [eax],al
  40f6bc:	(bad)  
  40f6bd:	mov    edi,0x62aaffe5
  40f6c2:	(bad)  
  40f6c3:	(bad)  
  40f6c4:	call   ebp
  40f6c6:	int3   
  40f6c7:	call   DWORD PTR [edx+0x59]
  40f6ca:	inc    DWORD PTR [ebx+0x1e0d89]
  40f6d0:	inc    ebp
  40f6d1:	(bad)  
  40f6d2:	inc    DWORD PTR [eax]
  40f6d4:	push   edi
  40f6d6:	fadd   DWORD PTR [ebx-0x333345d8]
  40f6dc:	or     DWORD PTR [edi],0xffffff83
  40f6df:	jmp    DWORD PTR [eax]
  40f6e1:	in     eax,0xff
  40f6e3:	add    DWORD PTR [ebx+0x8ff5068],0xffffffb9
  40f6ea:	(bad)  
  40f6eb:	inc    DWORD PTR [eax]
  40f6ed:	shl    BYTE PTR [ebp-0xeeb901],cl
  40f6f3:	inc    DWORD PTR [eax]
  40f6f5:	or     al,0x53
  40f6f7:	inc    DWORD PTR [ecx]
  40f6f9:	or     eax,DWORD PTR [eax]
  40f6fb:	inc    DWORD PTR [eax]
  40f6fd:	cmp    DWORD PTR [ebx+0xe106ff],edx
  40f703:	add    DWORD PTR [eax],0xffffffba
  40f706:	sar    bh,cl
  40f708:	aas    
  40f709:	inc    esi
  40f70a:	(bad)  
  40f70b:	(bad)  
  40f70c:	call   FWORD PTR [edi-0x24f60010]
  40f712:	inc    DWORD PTR [eax]
  40f714:	inc    DWORD PTR [edi+0x1a]
  40f717:	add    BYTE PTR [ecx+0x48],cl
  40f71a:	inc    DWORD PTR [ebx-0x7c00d777]
  40f720:	adc    cl,dl
  40f722:	inc    DWORD PTR [eax]
  40f724:	mov    edi,edx
  40f726:	inc    edx
  40f727:	add    BYTE PTR [edx],al
  40f729:	int3   
  40f72a:	add    DWORD PTR [eax],0x0
  40f72d:	mov    ds:0x5e790044,eax
  40f732:	(bad)  
  40f733:	inc    DWORD PTR [eax]
  40f735:	and    al,0x7b
  40f737:	add    DWORD PTR [esi+0x5a],0xffffffff
  40f73b:	dec    DWORD PTR [ecx+0x2d83d879]
  40f741:	aas    
  40f742:	add    BYTE PTR [eax],al
  40f744:	cmp    DWORD PTR [edx],0x71
  40f747:	add    cl,ch
  40f749:	mov    al,ds:0xb78383ff
  40f74e:	js     0x40f74f
  40f750:	shl    DWORD PTR [ecx],0x0
  40f753:	inc    DWORD PTR [eax]
  40f755:	in     eax,dx
  40f756:	cwde   
  40f757:	call   FWORD PTR ds:0x89ff89
  40f75d:	and    DWORD PTR [ebx+eax*4],esi
  40f760:	push   ebx
  40f761:	push   es
  40f762:	inc    DWORD PTR [ebx-0xdce234]
  40f768:	mov    ds:0x83cc30,eax
  40f76d:	xchg   DWORD PTR [edx-0x7c8f6900],edx
  40f773:	(bad)  
  40f774:	(bad)  
  40f775:	stc    
  40f776:	repnz add BYTE PTR [esi-0xff0046],ah
  40f77d:	adc    bl,0xff
  40f780:	dec    esp
  40f781:	jne    0x40f70c
  40f783:	inc    DWORD PTR [ebx+0x4900e0ac]
  40f789:	push   ds
  40f78a:	(bad)  
  40f78b:	dec    esp
  40f78d:	jnp    0x40f770
  40f78f:	mov    DWORD PTR [eax-0xffffe1],edi
  40f795:	(bad)  
  40f796:	aam    0x83
  40f798:	mov    dl,0xf3
  40f79a:	inc    DWORD PTR [eax]
  40f79c:	and    DWORD PTR [edi],0xffffffe4
  40f79f:	(bad)  
  40f7a0:	cli    
  40f7a1:	jmp    0x40f7a2
  40f7a3:	cmp    edi,0x60
  40f7a6:	add    bh,bh
  40f7a8:	xchg   esp,eax
  40f7a9:	mov    bh,bh
  40f7ab:	add    BYTE PTR [ebx+0xd005cc6],al
  40f7b1:	(bad)  
  40f7b2:	inc    DWORD PTR [ebx-0x563900]
  40f7b8:	sbb    BYTE PTR [ecx],dl
  40f7ba:	inc    DWORD PTR [ebx-0x4bca34]
  40f7c0:	mov    ebx,0xcc0064
  40f7c5:	inc    ebp
  40f7c6:	mov    ebp,0xcce64589
  40f7cb:	(bad)  
  40f7cc:	push   DWORD PTR [ecx]
  40f7ce:	dec    esp
  40f7d0:	cli    
  40f7d1:	imul   edi,edi,0x1bb48983
  40f7d7:	push   DWORD PTR ds:0x83cc8957
  40f7dd:	in     eax,0xab
  40f7df:	add    DWORD PTR [ecx],0xffffffb6
  40f7e2:	mov    edi,edi
  40f7e4:	xor    edx,0xfffffffb
  40f7e7:	call   FWORD PTR [edi-0x4b]
  40f7ea:	(bad)  
  40f7eb:	(bad)  
  40f7ec:	push   DWORD PTR [edi]
  40f7ee:	xchg   esp,eax
  40f7ef:	add    BYTE PTR [edi],dh
  40f7f1:	mov    eax,0x810000ff
  40f7f6:	add    DWORD PTR [eax],0x4c
  40f7f9:	jae    0x40f7fb
  40f7fb:	add    bh,bh
  40f7fd:	int    0x6b
  40f7ff:	add    BYTE PTR [eax],dh
  40f801:	jmp    0x43407bd2
  40f806:	test   BYTE PTR [ecx-0xff1194],cl
  40f80c:	mov    eax,eax
  40f80e:	(bad)  
  40f810:	test   esp,edx
  40f812:	add    DWORD PTR [eax],0x0
  40f815:	jecxz  0x40f7aa
  40f817:	int3   
  40f818:	scas   eax,DWORD PTR es:[edi]
  40f819:	dec    ebx
  40f81a:	cmp    edi,0xffffffff
  40f81d:	(bad)  
  40f81f:	mov    ecx,edx
  40f821:	xchg   edi,eax
  40f822:	add    bh,bh
  40f824:	inc    DWORD PTR [eax+ecx*1-0x61b200]
  40f82b:	cmp    edi,0x6
  40f82e:	repz add al,bl
  40f831:	pop    ebp
  40f832:	add    bh,bh
  40f834:	add    BYTE PTR [edx+0x3a],dh
  40f837:	jmp    DWORD PTR [eax]
  40f839:	cmp    eax,DWORD PTR [ebx-0x6a537c01]
  40f83f:	dec    DWORD PTR [edx+0xc]
  40f842:	add    bh,bh
  40f844:	int3   
  40f845:	jl     0x40f8b8
  40f847:	add    esi,0xffffffe8
  40f84a:	inc    DWORD PTR [ebx-0xfc7500]
  40f850:	ja     0x40f82b
  40f852:	inc    DWORD PTR [eax]
  40f854:	or     ebx,0xffffff89
  40f857:	add    BYTE PTR [edx],ch
  40f859:	test   edi,edi
  40f85b:	(bad)  
  40f85c:	inc    esi
  40f85e:	inc    esi
  40f85f:	jmp    DWORD PTR [edi+0x57]
  40f862:	(bad)  
  40f863:	inc    DWORD PTR [eax]
  40f865:	out    dx,al
  40f866:	push   esi
  40f867:	and    DWORD PTR [ecx],0xffffffba
  40f86a:	int3   
  40f86b:	inc    DWORD PTR [eax]
  40f86d:	popa   
  40f86e:	inc    DWORD PTR [ebx-0x33008d68]
  40f874:	add    DWORD PTR [edx-0x1c],0xffffffff
  40f878:	clc    
  40f879:	jb     0x40f87b
  40f87b:	(bad)  
  40f87c:	push   DWORD PTR [eax-0x5cacff80]
  40f882:	inc    DWORD PTR [eax]
  40f884:	add    DWORD PTR [edx+0x4ff5cc34],0xffffffff
  40f88b:	int3   
  40f88c:	push   DWORD PTR [ebp-0x10]
  40f88f:	mov    ebp,esp
  40f891:	leave  
  40f892:	(bad)  
  40f893:	(bad)  
  40f894:	(bad)  
  40f895:	sti    
  40f896:	jle    0x40f898
  40f898:	or     eax,0xcc00ffbb
  40f89d:	scas   al,BYTE PTR es:[edi]
  40f89e:	lds    ecx,FWORD PTR [ecx+0xff26dd]
  40f8a4:	add    BYTE PTR [ebp+ebx*8-0x7cdb3401],dl
  40f8ab:	(bad)  
  40f8ac:	jmp    FWORD PTR [ecx-0x3203007e]
  40f8b2:	add    BYTE PTR [eax],al
  40f8b4:	add    BYTE PTR [edx+0x2bb001c],cl
  40f8ba:	(bad)  
  40f8bb:	inc    DWORD PTR [eax]
  40f8bd:	(bad)  
  40f8be:	or     eax,DWORD PTR [ebx-0xffc7e7]
  40f8c4:	xor    DWORD PTR [ecx+eiz*2-0x763b3e01],0x0
  40f8cc:	add    BYTE PTR [ecx+0x58],dh
  40f8cf:	add    BYTE PTR [edx-0x45],dh
  40f8d5:	mov    edi,DWORD PTR [ebx]
  40f8d7:	(bad)  
  40f8d8:	jmp    0x40f8e5
  40f8da:	(bad)  
  40f8db:	(bad)  
  40f8dc:	(bad)  
  40f8dd:	mov    ebx,0x8fef0019
  40f8e2:	(bad)  
  40f8e3:	(bad)  
  40f8e4:	inc    DWORD PTR [edx]
  40f8e6:	ja     0x40f8e7
  40f8e8:	inc    esp
  40f8e9:	xchg   edi,edi
  40f8eb:	cmp    edi,0x25
  40f8ee:	test   edi,edi
  40f8f0:	lock out 0xcc,eax
  40f8f3:	add    DWORD PTR [ebx+0x6fffabca],0xfffffffb
  40f8fa:	add    ah,cl
  40f8fc:	and    DWORD PTR [ebp-0x6],0xffffff83
  40f900:	jle    0x40f8dc
  40f902:	dec    esp
  40f904:	(bad)  
  40f905:	mov    ebx,0x457aff4f
  40f90a:	(bad)  
  40f90b:	inc    DWORD PTR [eax]
  40f90d:	xor    al,0xa4
  40f90f:	(bad)  
  40f910:	jp     0x40f93e
  40f912:	int3   
  40f913:	dec    esp
  40f915:	sub    al,0x6a
  40f917:	push   DWORD PTR [eiz*2-0x1c007700]
  40f91e:	scas   eax,DWORD PTR es:[edi]
  40f91f:	dec    DWORD PTR [eax+0x5]
  40f922:	mov    DWORD PTR [eax],eax
  40f924:	inc    DWORD PTR [edi]
  40f926:	gs add ch,ah
  40f929:	and    esp,ecx
  40f92b:	inc    DWORD PTR [eax]
  40f92d:	adc    al,cl
  40f92f:	push   DWORD PTR [edx-0x71]
  40f932:	(bad)  
  40f933:	(bad)  
  40f934:	jmp    FWORD PTR [edx+esi*1+0x13bdff]
  40f93b:	inc    DWORD PTR [eax]
  40f93d:	mov    bh,0x49
  40f93f:	(bad)  
  40f940:	out    dx,eax
  40f941:	add    edi,edi
  40f943:	cmp    edi,0xffffff82
  40f946:	pusha  
  40f947:	jmp    DWORD PTR ds:0x8900ff6b
  40f94d:	lea    ebx,[ebx-0x1]
  40f950:	(bad)  
  40f951:	aam    0x0
  40f953:	cmp    edi,0x58
  40f956:	pop    es
  40f957:	inc    DWORD PTR [edx]
  40f959:	clc    
  40f95a:	dec    DWORD PTR [ecx-0x409d34]
  40f960:	mov    BYTE PTR [edi-0x6cff0001],dh
  40f966:	ins    BYTE PTR es:[edi],dx
  40f967:	inc    DWORD PTR [edi-0x60]
  40f96a:	add    bh,bh
  40f96c:	inc    ebx
  40f96e:	test   al,0xcc
  40f970:	jmp    0x83c4f8bc
  40f975:	int    0xb1
  40f977:	inc    DWORD PTR [esi-0x7cff7c43]
  40f97d:	scas   al,BYTE PTR es:[edi]
  40f97e:	or     DWORD PTR [ebx-0xb8aa],eax
  40f984:	add    ch,bl
  40f986:	xchg   edi,eax
  40f987:	int3   
  40f988:	(bad)  
  40f989:	sbb    eax,DWORD PTR [eax]
  40f98b:	int3   
  40f98c:	int3   
  40f98d:	and    eax,0xb96500f4
  40f992:	(bad)  
  40f993:	(bad)  
  40f994:	jmp    DWORD PTR [ecx-0x22]
  40f997:	mov    DWORD PTR [esi],esi
  40f999:	sub    DWORD PTR [eax],eax
  40f99b:	add    DWORD PTR [eax],0xfffffffb
  40f99e:	and    al,0x83
  40f9a0:	xor    DWORD PTR [edi+edi*8-0x3876ff77],ebp
  40f9a7:	dec    DWORD PTR ds:0x89ffa3
  40f9ad:	out    dx,eax
  40f9ae:	pop    ss
  40f9af:	call   DWORD PTR [ecx-0xfffa]
  40f9b5:	xor    DWORD PTR ds:0xffd8b4ff,0xffffffff
  40f9bc:	add    BYTE PTR [ecx+0x47d20001],bh
  40f9c2:	inc    DWORD PTR [eax]
  40f9c4:	mov    DWORD PTR [ecx+ebx*4],esp
  40f9c7:	(bad)  
  40f9c8:	jns    0x40f9ab
  40f9ca:	int3   
  40f9cb:	add    ah,cl
  40f9cd:	inc    edx
  40f9ce:	ret    0xad83
  40f9d1:	ja     0x40f9d2
  40f9d3:	inc    DWORD PTR [eax]
  40f9d5:	fdivr  st,st(5)
  40f9d7:	(bad)  
  40f9d8:	cmp    DWORD PTR [ebp-0x1],edx
  40f9db:	add    BYTE PTR [eax],al
  40f9dd:	and    al,0x53
  40f9df:	adc    DWORD PTR [ecx-0x76ffff3a],0x3d
  40f9e6:	and    cl,BYTE PTR [ecx-0x7cff97a6]
  40f9ec:	add    BYTE PTR [esi+0x40],cl
  40f9ef:	add    cl,bh
  40f9f1:	stc    
  40f9f2:	add    bh,bh
  40f9f4:	inc    DWORD PTR [edx+eiz*2+0xa27fff]
  40f9fb:	(bad)  
  40f9fc:	inc    DWORD PTR [esp+esi*2-0x1]
  40fa00:	jns    0x40fa13
  40fa02:	int3   
  40fa03:	add    BYTE PTR [eax],al
  40fa05:	cmc    
  40fa06:	js     0x40fa07
  40fa08:	fdecstp 
  40fa0a:	inc    DWORD PTR [eax]
  40fa0c:	call   FWORD PTR [edx-0x48]
  40fa0f:	add    BYTE PTR [edi+0x83cc51],ch
  40fa15:	adc    edx,ebx
  40fa17:	add    BYTE PTR [ebp-0xffbd],al
  40fa1d:	and    DWORD PTR [edi-0x7c679801],0xffffff89
  40fa24:	call   DWORD PTR [ecx-0x17]
  40fa27:	int3   
  40fa28:	mov    ch,0xe2
  40fa2a:	(bad)  
  40fa2b:	dec    esp
  40fa2d:	mov    cs,WORD PTR [eax+eax*1-0x7600794e]
  40fa34:	add    BYTE PTR [edx-0x2a],cl
  40fa37:	jmp    FWORD PTR [ecx]
  40fa39:	test   DWORD PTR [ebx+0x61a6ffff],eax
  40fa3f:	mov    DWORD PTR [ecx],eax
  40fa41:	xor    al,0x0
  40fa43:	inc    DWORD PTR [ebx+0x6dff8a23]
  40fa49:	hlt    
  40fa4a:	inc    DWORD PTR [eax]
  40fa4c:	mov    DWORD PTR [eax],esi
  40fa4e:	pop    eax
  40fa4f:	int3   
  40fa50:	outs   dx,BYTE PTR ds:[esi]
  40fa51:	adc    edi,edi
  40fa53:	inc    DWORD PTR [eax]
  40fa55:	out    dx,al
  40fa56:	mov    al,0x0
  40fa58:	dec    ebp
  40fa59:	arpl   di,di
  40fa5b:	or     esp,0x8
  40fa5e:	sbb    edi,edi
  40fa60:	std    
  40fa61:	xlat   BYTE PTR ds:[ebx]
  40fa62:	or     esp,0xffffff83
  40fa65:	aam    0xc4
  40fa67:	add    DWORD PTR [esi-0x33ff0017],0xfffffff9
  40fa6e:	mov    cl,0x89
  40fa70:	cmp    ebp,ecx
  40fa72:	add    bh,bh
  40fa74:	call   FWORD PTR ds:0xc7b88342
  40fa7a:	or     esp,0xffffffff
  40fa7d:	test   al,0xac
  40fa7f:	sbb    DWORD PTR [eax-0x12],0x0
  40fa83:	add    BYTE PTR [eax],al
  40fa85:	inc    ecx
  40fa86:	out    dx,al
  40fa87:	(bad)  
  40fa88:	fst    QWORD PTR [ebp-0x1]
  40fa8b:	(bad)  
  40fa8c:	jmp    DWORD PTR [esp+ebp*4+0x45b700]
  40fa93:	or     esp,0xffffffb0
  40fa96:	xchg   ecx,eax
  40fa97:	(bad)  
  40fa98:	out    dx,al
  40fa99:	(bad)  
  40fa9a:	inc    DWORD PTR [eax]
  40fa9c:	mov    DWORD PTR ds:0x966c0055,ebx
  40faa2:	add    BYTE PTR [ebx+0x4abdff],al
  40faa8:	jl     0x40fa54
  40faaa:	add    BYTE PTR [ebx+0x8e6700],al
  40fab0:	test   BYTE PTR [ecx+0x0],dh
  40fab3:	(bad)  
  40fab4:	inc    DWORD PTR [ebx+edi*2-0x77]
  40fab8:	retf   0x9d
  40fabb:	inc    DWORD PTR [ebx-0x40334953]
  40fac1:	and    bh,bh
  40fac3:	add    BYTE PTR [ebx+0x4dff189f],al
  40fac9:	loope  0x40faca
  40facb:	add    bh,bh
  40facd:	jb     0x40fb10
  40facf:	call   DWORD PTR [ebx]
  40fad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad2:	add    bh,bh
  40fad4:	mov    DWORD PTR [ebp-0x4a],ebx
  40fad7:	add    BYTE PTR [eax],al
  40fad9:	mov    DWORD PTR [eax],eax
  40fadb:	(bad)  
  40fadc:	push   DWORD PTR [ebx-0x47]
  40fadf:	inc    DWORD PTR [ecx]
  40fae1:	dec    esp
  40fae2:	or     esp,0xffffffcc
  40fae5:	bound  ecx,QWORD PTR [edi+0x0]
  40fae8:	ret    0x836f
  40faeb:	dec    DWORD PTR [ecx-0x6500ee16]
  40faf1:	sub    edi,edi
  40faf3:	add    BYTE PTR [ecx+0x34835ab5],cl
  40faf9:	push   esi
  40fafa:	inc    DWORD PTR [eax]
  40fafc:	call   DWORD PTR [ebx]
  40fafe:	out    dx,eax
  40faff:	inc    DWORD PTR [esi-0x4e]
  40fb05:	jb     0x40fab9
  40fb07:	add    BYTE PTR [eax-0x30],dh
  40fb0a:	add    BYTE PTR [ecx+0x86e400],cl
  40fb10:	scas   al,BYTE PTR es:[edi]
  40fb11:	push   ecx
  40fb12:	inc    DWORD PTR [eax]
  40fb14:	int3   
  40fb15:	ret    
  40fb16:	pop    edx
  40fb17:	(bad)  
  40fb18:	ds ret 0xff89
  40fb1c:	add    BYTE PTR [eax],al
  40fb1e:	push   ds
  40fb1f:	add    BYTE PTR [edi-0x56],bl
  40fb22:	(bad)  
  40fb23:	inc    DWORD PTR [eax]
  40fb25:	pop    es
  40fb26:	lods   eax,DWORD PTR ds:[esi]
  40fb27:	dec    DWORD PTR [eax-0x7cff0021]
  40fb2d:	jae    0x40fba2
  40fb2f:	call   FWORD PTR [ecx+0x7e]
  40fb32:	inc    DWORD PTR [ebx-0xad897d]
  40fb38:	inc    esp
  40fb39:	fmul   st,st(4)
  40fb3b:	add    bh,bh
  40fb3d:	mov    edi,0x2c58ff3d
  40fb42:	mov    edi,edi
  40fb44:	call   edi
  40fb46:	daa    
  40fb47:	dec    DWORD PTR [ebp+0x38]
  40fb4a:	inc    DWORD PTR [eax]
  40fb4c:	(bad)  
  40fb4d:	jmp    0xccff:0xf868fff5
  40fb54:	add    BYTE PTR [esi-0x1ef00028],ch
  40fb5a:	(bad)  
  40fb5b:	inc    DWORD PTR [ebx+0x4689f87e]
  40fb61:	call   0x8f40fb66
  40fb66:	in     eax,dx
  40fb67:	(bad)  
  40fb68:	cli    
  40fb69:	ror    ah,1
  40fb6b:	(bad)  
  40fb6c:	jmp    DWORD PTR [ecx+0x64]
  40fb6f:	add    cl,bh
  40fb71:	and    edi,edi
  40fb73:	int3   
  40fb74:	int3   
  40fb75:	pop    ds
  40fb76:	add    al,BYTE PTR [eax]
  40fb78:	aaa    
  40fb79:	leave  
  40fb7a:	dec    DWORD PTR [ecx-0x7c1d0d01]
  40fb80:	enter  0x833b,0x0
  40fb84:	add    BYTE PTR [edi-0x2147fff4],dh
  40fb8a:	add    DWORD PTR [eax],0x0
  40fb8d:	(bad)  
  40fb8e:	aam    0x83
  40fb90:	sti    
  40fb91:	jmp    0x7f:0xbffff00
  40fb98:	rcl    DWORD PTR [eax+eax*1+0x7d450000],cl
  40fb9f:	int3   
  40fba0:	rcr    BYTE PTR [ecx-0x276ff7d],1
  40fba6:	and    edi,edi
  40fba8:	lahf   
  40fba9:	inc    eax
  40fbaa:	add    bh,bh
  40fbac:	push   DWORD PTR [esi-0x25]
  40fbaf:	add    bh,bl
  40fbb1:	pop    ds
  40fbb2:	(bad)  
  40fbb3:	(bad)  
  40fbb4:	(bad)  
  40fbb5:	js     0x40fb4f
  40fbb7:	add    BYTE PTR [ecx-0x17],bh
  40fbba:	(bad)  
  40fbbb:	(bad)  
  40fbbc:	(bad)  
  40fbbd:	mov    ecx,0x5c3ff4d
  40fbc2:	cmp    edi,0xffffff89
  40fbc5:	pop    eax
  40fbc6:	fiadd  DWORD PTR [ebx+0xff725e]
  40fbcc:	add    BYTE PTR [ecx],bl
  40fbce:	jb     0x40fbcf
  40fbd0:	imul   esp,DWORD PTR [ecx-0x7776ff01],0x31
  40fbd7:	add    BYTE PTR ds:0xff8397,dh
  40fbdd:	adc    eax,0x910c0020
  40fbe2:	inc    DWORD PTR [ebx-0x884401]
  40fbe8:	and    edi,DWORD PTR [esi+0x0]
  40fbeb:	inc    DWORD PTR [eax]
  40fbed:	sbb    bh,BYTE PTR [ebp-0x1]
  40fbf0:	fs mov esp,0x54000083
  40fbf6:	and    edi,edi
  40fbf8:	aaa    
  40fbf9:	(bad)  
  40fbfa:	(bad)  
  40fbfb:	inc    DWORD PTR [eax]
  40fbfd:	repnz repnz push DWORD PTR [ebx+0x3c]
  40fc02:	add    ah,cl
  40fc04:	inc    DWORD PTR [edi+edi*8]
  40fc07:	(bad)  
  40fc08:	aas    
  40fc09:	mov    esp,0x5dffff83
  40fc0e:	(bad)  
  40fc0f:	inc    DWORD PTR [ebx+eiz*4+0x1effff83]
  40fc16:	rol    DWORD PTR [eax],0x3c
  40fc19:	pop    ds
  40fc1a:	dec    DWORD PTR [ecx-0x7ca9e834]
  40fc20:	out    dx,al
  40fc21:	jmp    0x40fc22
  40fc23:	add    BYTE PTR [eax],al
  40fc25:	lea    edx,[esi]
  40fc27:	call   DWORD PTR [ebx+ebx*2+0x21ffff83]
  40fc2e:	push   edi
  40fc2f:	mov    DWORD PTR [ebx-0x7c00ff29],ebp
  40fc35:	fisubr WORD PTR [ecx+0x0]
  40fc38:	and    DWORD PTR [edi+edi*8-0x1],edx
  40fc3c:	add    BYTE PTR [edi],cl
  40fc3e:	fadd   DWORD PTR [eax]
  40fc40:	(bad)  
  40fc41:	push   esi
  40fc42:	cmp    edi,0xffffff83
  40fc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc46:	in     al,0x0
  40fc48:	hlt    
  40fc49:	fiadd  WORD PTR [eax]
  40fc4b:	(bad)  
  40fc4c:	call   DWORD PTR [edx]
  40fc4e:	add    DWORD PTR [ebx-0x7c00e1ad],eax
  40fc54:	mov    DWORD PTR [ebx],ecx
  40fc56:	sbb    edi,edi
  40fc58:	add    dl,al
  40fc5a:	inc    DWORD PTR [eax]
  40fc5c:	add    BYTE PTR [ecx+0x64c1ff23],bh
  40fc62:	cmp    edi,0x0
  40fc65:	(bad)  
  40fc66:	xor    al,0xff
  40fc68:	cmp    DWORD PTR [esp+ecx*8-0x1],0xffffffcc
  40fc6d:	fs mov eax,0x4ea200
  40fc73:	add    bh,bh
  40fc75:	pop    es
  40fc76:	(bad)  
  40fc77:	(bad)  
  40fc78:	mov    ebp,0xffffff04
  40fc7d:	mov    ds:0xefdffbe,eax
  40fc82:	add    BYTE PTR [ebx-0xd96f01],al
  40fc88:	cmp    eax,DWORD PTR [ebx]
  40fc8a:	or     esp,0xffffffff
  40fc8d:	pop    esi
  40fc8e:	int3   
  40fc8f:	add    BYTE PTR [ecx-0xff0086],ah
  40fc95:	mov    al,0xb9
  40fc97:	add    BYTE PTR [edx],dh
  40fc99:	cmp    esp,ecx
  40fc9b:	cmp    edi,0xffffffee
  40fc9e:	push   edx
  40fc9f:	add    DWORD PTR [eax+eax*1+0x0],0x0
  40fca4:	(bad)  
  40fca5:	js     0x40fd1d
  40fca7:	jmp    DWORD PTR [ecx]
  40fca9:	std    
  40fcaa:	inc    DWORD PTR [eax]
  40fcac:	call   FWORD PTR [edx+0x501ccc2e]
  40fcb2:	add    BYTE PTR [ebx-0xc6ac7d],al
  40fcb8:	not    BYTE PTR [ecx+0x0]
  40fcbb:	mov    edi,edi
  40fcbd:	sub    DWORD PTR [ebx-0xb25e01],eax
  40fcc3:	cmp    edi,0x5a
  40fcc6:	rol    DWORD PTR [ebx-0xa643],1
  40fccc:	call   FWORD PTR [ebx]
  40fcce:	test   eax,0xffa512ff
  40fcd3:	add    bh,bh
  40fcd5:	inc    ebx
  40fcd6:	sbb    al,0x89
  40fcd8:	pop    es
  40fcd9:	add    WORD PTR [ebx-0x294000],0xffa8
  40fce1:	sbb    bh,bh
  40fce3:	add    BYTE PTR [eax],al
  40fce5:	dec    esi
  40fce6:	scas   eax,DWORD PTR es:[edi]
  40fce7:	add    BYTE PTR [ecx+0x48],al
  40fcea:	add    bh,bh
  40fcec:	add    bl,dh
  40fcee:	loopne 0x40fcef
  40fcf0:	mov    cl,0x5d
  40fcf2:	inc    DWORD PTR [ebx-0x55c600]
  40fcf8:	cld    
  40fcf9:	cwde   
  40fcfa:	(bad)  
  40fcfb:	inc    DWORD PTR [ebx-0x3bffed7a]
  40fd01:	mov    al,ds:0x20ffffff
  40fd06:	inc    edi
  40fd07:	add    BYTE PTR [edi+0x69],dh
  40fd0a:	cmp    edi,0xffffffff
  40fd0d:	or     eax,0x88ab0069
  40fd12:	inc    DWORD PTR [ebx-0x355000]
  40fd18:	cld    
  40fd19:	imul   eax,DWORD PTR [ebx-0x2e4b7601],0x0
  40fd20:	lahf   
  40fd21:	test   DWORD PTR [eax],0x844500ff
  40fd27:	int3   
  40fd28:	test   al,0x4c
  40fd2a:	or     DWORD PTR [ecx-0x7f0d01],0x52
  40fd31:	pop    esp
  40fd32:	mov    DWORD PTR [eax],eax
  40fd34:	int3   
  40fd35:	sbb    eax,0xdd49ff19
  40fd3a:	add    bh,bh
  40fd3c:	add    BYTE PTR [edi],bh
  40fd3e:	inc    edx
  40fd3f:	add    dl,bl
  40fd41:	xor    al,0xff
  40fd43:	add    BYTE PTR [eax],al
  40fd45:	xlat   BYTE PTR ds:[ebx]
  40fd46:	in     al,dx
  40fd47:	inc    ebp
  40fd49:	and    eax,0x4f890000
  40fd4e:	imul   ecx,esp,0xff8403
  40fd54:	jmp    FWORD PTR [edi]
  40fd56:	fld    DWORD PTR [eax]
  40fd58:	(bad)  
  40fd59:	test   al,0xff
  40fd5b:	add    DWORD PTR [ebx-0x60ff2c3c],0xffffff98
  40fd62:	add    bh,bh
  40fd64:	push   DWORD PTR [esi+esi*4+0xf46b00]
  40fd6b:	or     DWORD PTR [ecx+0x5f00e631],0x64
  40fd72:	mov    DWORD PTR [ebx-0x6ce701],eax
  40fd78:	sbb    eax,0xff000093
  40fd7d:	call   0x83:0x30a1ff0a
  40fd84:	and    DWORD PTR [edi],0x3d
  40fd87:	sbb    DWORD PTR [ecx-0x86],0xfffffff4
  40fd8e:	inc    ebp
  40fd8f:	push   DWORD PTR [esi-0x7c43]
  40fd95:	dec    edx
  40fd96:	pop    ss
  40fd97:	push   DWORD PTR [edi]
  40fd99:	adc    DWORD PTR [ebx-0x45c60001],eax
  40fd9f:	add    BYTE PTR [esi],ah
  40fda1:	lea    eax,[eax]
  40fda3:	add    ah,cl
  40fda5:	sahf   
  40fda6:	add    BYTE PTR [ebx-0x3300bade],al
  40fdac:	jmp    DWORD PTR [ebx-0x64167c12]
  40fdb2:	(bad)  
  40fdb3:	(bad)  
  40fdb4:	jmp    edi
  40fdb6:	cmp    bh,bh
  40fdb8:	icebp  
  40fdb9:	mov    bh,0xcc
  40fdbb:	mov    DWORD PTR [ebx+0x7b005ca6],eax
  40fdc1:	mov    DWORD PTR [eax],0xfc13ff89
  40fdc7:	dec    DWORD PTR [ebx+0x36]
  40fdca:	add    bh,bh
  40fdcc:	add    BYTE PTR [ebp+0x3ac100d3],cl
  40fdd2:	inc    DWORD PTR [ebx-0x582a00]
  40fdd8:	test   eax,0x83ff002b
  40fddd:	inc    ecx
  40fdde:	inc    eax
  40fddf:	jmp    DWORD PTR [eax]
  40fde1:	cdq    
  40fde2:	add    BYTE PTR [eax],al
  40fde4:	add    BYTE PTR [edi+eax*1],bh
  40fde7:	int3   
  40fde8:	loopne 0x40fdb6
  40fdea:	add    DWORD PTR [eax],0x0
  40fded:	idiv   ebx
  40fdef:	and    DWORD PTR [edi],0x3e
  40fdf2:	(bad)  
  40fdf3:	dec    DWORD PTR [ecx+0xa00997c]
  40fdf9:	mov    edi,edi
  40fdfb:	inc    DWORD PTR [eax]
  40fdfd:	and    esi,DWORD PTR [ecx+0x0]
  40fe00:	cmc    
  40fe01:	jnp    0x40fe02
  40fe03:	int3   
  40fe04:	call   FWORD PTR [ebx]
  40fe06:	and    bh,bh
  40fe08:	inc    ebx
  40fe09:	mov    BYTE PTR [ecx+0x778c8389],cl
  40fe0f:	jmp    DWORD PTR [ecx]
  40fe11:	and    eax,0x90ffff89
  40fe16:	pop    edi
  40fe17:	call   FWORD PTR [ecx-0x9]
  40fe1a:	(bad)  
  40fe1b:	(bad)  
  40fe1c:	(bad)  
  40fe1d:	jg     0x40fe71
  40fe1f:	dec    edi
  40fe21:	adc    bh,bh
  40fe23:	inc    DWORD PTR [eax]
  40fe25:	mov    ecx,0xb944001c
  40fe2a:	(bad)  
  40fe2b:	(bad)  
  40fe2c:	inc    DWORD PTR [edi]
  40fe2e:	call   0xffff:0xffd44700
  40fe35:	mov    ch,0xd0
  40fe37:	dec    DWORD PTR [ecx]
  40fe39:	mov    edi,0xd400ff83
  40fe3e:	jae    0x40fe3f
  40fe40:	(bad)  
  40fe41:	push   cs
  40fe42:	mov    DWORD PTR [eax],eax
  40fe44:	call   FWORD PTR [ecx]
  40fe46:	sub    eax,0xff0cb1cc
  40fe4b:	add    BYTE PTR [eax],al
  40fe4d:	adc    al,0xc5
  40fe4f:	inc    edi
  40fe51:	aad    0xff
  40fe53:	inc    DWORD PTR [eax]
  40fe55:	cmp    DWORD PTR [eax],0xfff41000
  40fe5b:	inc    DWORD PTR [eax]
  40fe5d:	out    dx,al
  40fe5e:	dec    ebx
  40fe5f:	int3   
  40fe60:	mov    ebp,esi
  40fe62:	(bad)  
  40fe63:	(bad)  
  40fe64:	push   DWORD PTR ds:0x7ffb8323
  40fe6a:	add    ah,cl
  40fe6c:	add    bl,ah
  40fe6e:	(bad)  
  40fe6f:	(bad)  
  40fe70:	jmp    0x41fdae
  40fe75:	arpl   dx,dx
  40fe77:	add    BYTE PTR [edx-0x23],bh
  40fe7a:	add    ah,cl
  40fe7c:	jmp    FWORD PTR [ecx+esi*4-0x1]
  40fe80:	(bad)  
  40fe81:	dec    ebp
  40fe82:	add    BYTE PTR [ecx-0xf41401],cl
  40fe88:	iret   
  40fe89:	out    0x0,al
  40fe8b:	inc    DWORD PTR [eax]
  40fe8d:	cmp    al,bl
  40fe8f:	and    ebp,0x4f
  40fe92:	add    ah,cl
  40fe94:	jmp    DWORD PTR [ecx]
  40fe96:	cli    
  40fe97:	and    DWORD PTR [edx+0x3b],0x0
  40fe9b:	inc    DWORD PTR [eax]
  40fe9d:	fwait
  40fe9e:	call   0xffcc:0xffd1f0ff
  40fea5:	bound  ebp,QWORD PTR [ecx-0x780f7d]
  40feab:	int3   
  40feac:	add    BYTE PTR [edx],bl
  40feae:	adc    edi,edi
  40feb0:	pop    esi
  40feb1:	cdq    
  40feb2:	(bad)  
  40feb3:	(bad)  
  40feb4:	call   DWORD PTR [edx+0x1e]
  40feb7:	dec    DWORD PTR ds:0xffffff2f
  40febd:	loopne 0x40fea1
  40febf:	inc    DWORD PTR [ecx-0xed]
  40fec5:	dec    ecx
  40fec6:	stos   BYTE PTR es:[edi],al
  40fec7:	add    cl,dl
  40fec9:	(bad)  
  40feca:	(bad)  
  40fecb:	inc    DWORD PTR [eax]
  40fecd:	lods   al,BYTE PTR ds:[esi]
  40fece:	(bad)  
  40fed0:	add    dh,BYTE PTR [ebx+0x7283ffff]
  40fed6:	mov    ds:0x83c2a5ff,eax
  40fedb:	add    bh,bh
  40fedd:	add    al,0x18
  40fedf:	add    bh,dh
  40fee1:	rol    BYTE PTR [eax],1
  40fee3:	int3   
  40fee4:	add    BYTE PTR [ebx+edx*2-0xd29300],al
  40feeb:	(bad)  
  40feec:	call   DWORD PTR [edi]
  40feee:	push   esi
  40feef:	or     DWORD PTR [eax+0x70],0xffffffff
  40fef3:	add    bh,bh
  40fef5:	mov    ds:0x69ea00b2,eax
  40fefa:	cmp    edi,0xffffff83
  40fefd:	mov    WORD PTR [edx-0x725800],fs
  40ff03:	int3   
  40ff04:	push   DWORD PTR [ebp-0x43]
  40ff07:	add    BYTE PTR [esi],ch
  40ff09:	mov    ds:0x568983ff,eax
  40ff0e:	or     eax,0xc92800
  40ff13:	inc    DWORD PTR [eax]
  40ff15:	sbb    al,0xa1
  40ff17:	dec    esp
  40ff19:	int3   
  40ff1a:	int3   
  40ff1b:	int3   
  40ff1c:	int3   
  40ff1d:	int3   
  40ff1e:	int3   
  40ff1f:	int3   
  40ff20:	xor    bh,bh
  40ff22:	push   es
  40ff23:	fs and bh,bh
  40ff26:	xchg   ebx,eax
  40ff27:	ret    
  40ff28:	(bad)  
  40ff29:	js     0x40fef7
  40ff2b:	int3   
  40ff2c:	(bad)  
  40ff2d:	jmp    FWORD PTR [ecx-0x1]
  40ff30:	sar    bh,cl
  40ff32:	retf   0x9bf4
  40ff35:	int3   
  40ff36:	xor    ebx,edi
  40ff38:	add    BYTE PTR [esi],ch
  40ff3a:	(bad)  
  40ff3b:	(bad)  
  40ff3c:	(bad)  
  40ff3d:	(bad)  
  40ff3e:	in     eax,dx
  40ff3f:	add    BYTE PTR [ecx-0x7d],ah
  40ff42:	and    al,0xdf
  40ff44:	mov    al,ds:0xff6466ff
  40ff49:	sar    edi,0x89
  40ff4c:	inc    DWORD PTR [eax]
  40ff4e:	ins    BYTE PTR es:[edi],dx
  40ff4f:	call   FWORD PTR [ecx-0x7d]
  40ff52:	or     BYTE PTR [edx],ah
  40ff54:	sub    al,0xcc
  40ff56:	mov    ah,0xc5
  40ff58:	add    al,bl
  40ff5a:	add    BYTE PTR [ebx-0x1a7601],al
  40ff60:	cmc    
  40ff61:	add    BYTE PTR [ebx+0x7e],bh
  40ff64:	ins    DWORD PTR es:[edi],dx
  40ff65:	push   DWORD PTR [edi-0x42]
  40ff68:	push   DWORD PTR [edi+0x0]
  40ff6b:	add    BYTE PTR [eax],al
  40ff6d:	add    BYTE PTR ds:0x80001400,al
  40ff73:	xchg   DWORD PTR [edi+edi*8+0x5cff84f9],ebp
  40ff7a:	inc    DWORD PTR [eax]
  40ff7c:	add    BYTE PTR [ebx-0x7c20331b],al
  40ff82:	xchg   edx,eax
  40ff83:	in     eax,0x89
  40ff85:	or     edx,0xffffffd8
  40ff88:	add    BYTE PTR ds:0x8900ff00,dl
  40ff8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8f:	cmp    esi,0xffffffff
  40ff92:	xor    ch,BYTE PTR [esi+0x23f58903]
  40ff98:	push   DWORD PTR [edi-0x760001]
  40ff9e:	dec    ebx
  40ff9f:	call   FWORD PTR [edi]
  40ffa1:	inc    DWORD PTR [esi]
  40ffa3:	jbe    0x40ff45
  40ffa5:	jmp    FWORD PTR [eax+eax*2]
  40ffa8:	add    BYTE PTR [esi-0x1],dl
  40ffab:	(bad)  
  40ffac:	inc    DWORD PTR [eax]
  40ffae:	rol    DWORD PTR [ebx+0x39f6ffb3],0x12
  40ffb5:	mov    edi,ebx
  40ffb7:	mov    esp,0x83839fff
  40ffbc:	dec    esp
  40ffbe:	outs   dx,BYTE PTR ds:[esi]
  40ffbf:	jmp    DWORD PTR [edx]
  40ffc1:	add    BYTE PTR [edi-0x1b],bl
  40ffc4:	hlt    
  40ffc5:	mov    DWORD PTR [edi+eiz*1+0xce00],esi
  40ffcc:	mov    DWORD PTR [ecx-0x8e008d],ecx
  40ffd2:	mov    ds,WORD PTR [esp+ebx*1]
  40ffd5:	add    BYTE PTR [esi],dh
  40ffd7:	inc    ebx
  40ffd8:	jmp    DWORD PTR [eax]
  40ffda:	inc    DWORD PTR [eax]
  40ffdc:	add    DWORD PTR [eax],0xffffffbb
  40ffdf:	call   DWORD PTR ds:0x2da04900
  40ffe5:	add    BYTE PTR [eax+0x220021],ah
  40ffeb:	(bad)  
  40ffec:	dec    DWORD PTR [ecx+0x200fc]
  40fff2:	sub    esi,DWORD PTR [eax-0x8aa0015]
  40fff8:	adc    DWORD PTR [edx+0x0],0xffffffff
  40fffc:	add    bh,bh
  40fffe:	xchg   ebx,eax
  40ffff:	push   DWORD PTR [edx]
  410001:	add    BYTE PTR [ebx+0x8],cl
  410004:	push   edx
  410005:	dec    DWORD PTR [edi+0x0]
  410008:	(bad)  
  410009:	cmp    bh,bh
  41000b:	add    BYTE PTR [eax],al
  41000d:	add    ah,ch
  41000f:	jmp    eax
  410011:	cmp    DWORD PTR [edi-0x68007a96],0x49
  410018:	add    BYTE PTR [edx+0x0],al
  41001b:	inc    DWORD PTR [ebx+0x130062ff]
  410021:	push   edx
  410023:	mov    ds:0xc2580039,eax
  410028:	add    BYTE PTR [ecx-0x76337677],al
  41002e:	xchg   ecx,eax
  41002f:	mov    DWORD PTR [ecx-0x1],esi
  410032:	and    al,0x29
  410034:	sbb    al,0x89
  410036:	arpl   bx,cx
  410038:	push   esp
  41003a:	(bad)  
  41003b:	inc    DWORD PTR [eax]
  41003d:	(bad)  
  41003e:	jp     0x41003f
  410040:	in     al,0x0
  410042:	mov    bh,0x95
  410044:	retf   
  410045:	sub    esp,0x69
  410048:	or     DWORD PTR [edi],0xffffffff
  41004b:	add    bh,bh
  41004d:	mov    DWORD PTR [eax+eax*1],eax
  410050:	cmp    esp,ecx
  410052:	push   esp
  410053:	sbb    al,0x51
  410055:	mov    DWORD PTR [edx],edi
  410057:	adc    eax,0xffa3cc
  41005c:	mov    esp,ecx
  41005e:	cmp    edi,0xc5628313
  410064:	xor    al,BYTE PTR [ebx+0x38ff1b41]
  41006a:	mov    DWORD PTR [eax],eax
  41006c:	add    BYTE PTR [eax],al
  41006e:	hlt    
  41006f:	xor    ebp,0xffffff83
  410072:	addr16 xchg edx,eax
  410074:	add    BYTE PTR [eax],al
  410076:	imul   ecx,DWORD PTR [ebx+0x0],0xffcc0019
  41007d:	add    BYTE PTR [ecx],ch
  41007f:	add    BYTE PTR [esi-0x31b00a77],dh
  410085:	dec    DWORD PTR [esi+0x22]
  410088:	add    BYTE PTR [edx-0x7c0001],ch
  41008e:	fiadd  WORD PTR [eax]
  410090:	mov    al,0x0
  410092:	into   
  410093:	cli    
  410094:	jmp    0xff5b5798
  410099:	mov    eax,0xff0000ff
  41009e:	push   ecx
  41009f:	add    BYTE PTR [ecx-0x1],bh
  4100a2:	add    eax,DWORD PTR [ebx]
  4100a4:	and    bh,bh
  4100a6:	mov    bl,0xd8
  4100a8:	(bad)  
  4100a9:	(bad)  
  4100ab:	int3   
  4100ac:	add    bh,bh
  4100ae:	fxch   st(4)
  4100b0:	dec    edx
  4100b1:	add    cl,cl
  4100b3:	dec    eax
  4100b4:	fld    DWORD PTR [ebx-0x2aff4593]
  4100ba:	dec    DWORD PTR [ecx+0x8400ff]
  4100c0:	add    BYTE PTR ds:[ebp-0x12],dh
  4100c4:	pop    ecx
  4100c5:	int3   
  4100c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100c7:	test   DWORD PTR [eax],eax
  4100c9:	add    al,0xff
  4100cb:	add    bh,bh
  4100cd:	add    BYTE PTR [ebx+0x38007f00],dl
  4100d3:	shr    BYTE PTR [ebx-0x26657d],0x83
  4100da:	inc    DWORD PTR [eax]
  4100dc:	inc    DWORD PTR [eax]
  4100de:	push   DWORD PTR ds:0x446a50ff
  4100e5:	adc    DWORD PTR [edx-0x50],0xffffffff
  4100e9:	(bad)  
  4100ec:	cmp    edi,0x56
  4100ef:	add    BYTE PTR [ecx-0x1],ah
  4100f2:	(bad)  
  4100f3:	es pop eax
  4100f5:	jmp    DWORD PTR [ebx]
  4100f7:	aas    
  4100f8:	add    BYTE PTR [eax-0x1],bl
  4100fb:	mov    edi,edi
  4100fd:	call   ebp
  4100ff:	(bad)  
  410100:	(bad)  
  410102:	lea    ecx,[ebx]
  410104:	jg     0x410105
  410106:	in     al,dx
  410107:	sti    
  410108:	add    BYTE PTR [eax+eax*1+0xa00ccff],al
  41010f:	adc    DWORD PTR [edi],0xffffffff
  410112:	sbb    ah,BYTE PTR [edi+0x665affe7]
  410118:	jmp    ebp
  41011a:	cmp    edi,0xffffffff
  41011d:	jmp    FWORD PTR [ecx-0x7d]
  410120:	jge    0x4100a5
  410122:	mov    esp,0x21ccd04b
  410127:	es call ebx
  41012a:	cmp    edi,0x0
  41012d:	adc    ecx,0xffffffff
  410130:	aaa    
  410131:	jmp    ebx
  410133:	test   eax,0x722983a5
  410138:	add    BYTE PTR [edi-0x7d],bl
  41013b:	inc    DWORD PTR [eax]
  41013d:	int3   
  41013e:	cmc    
  41013f:	(bad)  
  410140:	jle    0x410141
  410142:	xchg   edi,eax
  410143:	push   es
  410144:	sbb    bh,bh
  410146:	jnp    0x41014c
  410148:	add    BYTE PTR [edi],bh
  41014a:	inc    DWORD PTR [eax]
  41014c:	inc    DWORD PTR [eax]
  41014e:	pushf  
  41014f:	mov    DWORD PTR [ebx+eax*4+0xa],edx
  410153:	add    ebx,edx
  410155:	add    BYTE PTR [eax],bl
  410157:	sub    edi,edi
  410159:	into   
  41015a:	add    BYTE PTR [eax],al
  41015c:	(bad)  
  41015d:	call   DWORD PTR [ebp+0x33cc8b83]
  410163:	out    dx,al
  410164:	mov    ecx,0xf51bff
  410169:	xchg   edx,eax
  41016a:	mov    esp,ecx
  41016c:	add    BYTE PTR [eax],al
  41016e:	in     eax,0x83
  410170:	and    al,0x89
  410172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410173:	push   edi
  410174:	push   DWORD PTR fs:[edx-0x4b]
  410178:	jmp    DWORD PTR [edx-0xff7c01]
  41017e:	and    eax,DWORD PTR [eax]
  410180:	in     al,0xff
  410182:	js     0x41016b
  410184:	xchg   edi,eax
  410185:	add    DWORD PTR [ebx-0x653340],0xffffffff
  41018c:	add    BYTE PTR [eax],al
  41018e:	sti    
  41018f:	adc    DWORD PTR [eax+eax*1-0x22],0xffffffc9
  410194:	icebp  
  410195:	add    BYTE PTR [esi],ch
  410197:	push   0xffff0d00
  41019c:	mov    DWORD PTR [eax],eax
  41019e:	adc    eax,0x42ff0dff
  4101a3:	dec    eax
  4101a4:	nop
  4101a5:	add    bl,cl
  4101a7:	xchg   edi,eax
  4101a8:	add    eax,0x0
  4101ab:	inc    DWORD PTR [eax]
  4101ad:	(bad)  
  4101ae:	in     eax,dx
  4101af:	or     DWORD PTR [ebx],0xffffffff
  4101b2:	ror    DWORD PTR [edx+0x3e80ffac],1
  4101b8:	call   DWORD PTR [esi-0x1]
  4101bb:	int3   
  4101bc:	(bad)  
  4101bd:	inc    DWORD PTR [edi+edi*8+0x73]
  4101c1:	call   DWORD PTR [ebx-0x7b]
  4101c4:	xchg   ebp,eax
  4101c5:	jmp    DWORD PTR [esi-0x33b3ff0b]
  4101cb:	inc    DWORD PTR [eax]
  4101cd:	jmp    DWORD PTR [edi]
  4101cf:	jmp    DWORD PTR [edi-0x1]
  4101d2:	dec    edx
  4101d3:	out    dx,al
  4101d4:	je     0x4101d6
  4101d6:	xor    eax,0xffd4ff6e
  4101db:	mov    DWORD PTR [ecx+0x2383b489],ecx
  4101e1:	call   DWORD PTR [esi+ebx*8-0x26f23384]
  4101e8:	mov    DWORD PTR [ebp-0x7cff7d],edx
  4101ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ef:	int3   
  4101f0:	inc    edi
  4101f1:	call   DWORD PTR [ebx+0x2b]
  4101f4:	mov    ebp,0xe131ff
  4101f9:	(bad)  
  4101fb:	add    bh,bh
  4101fd:	mov    DWORD PTR [edx-0x34],ebx
  410200:	or     eax,DWORD PTR [eax]
  410202:	bswap  edx
  410204:	pop    eax
  410205:	sub    ecx,0x33
  410208:	call   DWORD PTR [eax]
  41020a:	dec    esp
  41020c:	(bad)  
  41020d:	call   eax
  41020f:	jmp    edx
  410211:	add    BYTE PTR [edi+edi*1+0x64],bl
  410215:	int3   
  410216:	xchg   ecx,eax
  410217:	xlat   BYTE PTR ds:[ebx]
  410218:	xor    DWORD PTR [eax-0x760001],0x29
  41021f:	add    BYTE PTR [ebx-0x7f203f77],ch
  410225:	adc    DWORD PTR [ebx-0x7cf3ffc6],0x0
  41022c:	(bad)  
  41022d:	push   DWORD PTR [edi+0x0]
  410230:	jb     0x4101fe
  410232:	pop    ebx
  410233:	jmp    0x6f93032b
  410238:	inc    edx
  41023a:	add    bh,bh
  41023c:	add    bh,bh
  41023e:	pop    esi
  41023f:	int3   
  410240:	lock dec eax
  410243:	or     cl,bl
  410245:	call   DWORD PTR [ebp-0x52]
  410248:	add    BYTE PTR [ebp-0x1],al
  41024b:	(bad)  
  41024c:	inc    DWORD PTR [eax]
  41024e:	and    eax,0xa5000200
  410253:	jg     0x410220
  410255:	add    BYTE PTR [ecx],cl
  410257:	sbb    DWORD PTR [eax],eax
  410259:	sar    edi,1
  41025b:	dec    DWORD PTR [ecx+0x798961cc]
  410261:	add    BYTE PTR [ebx],bl
  410263:	(bad)  
  410264:	adc    edi,edi
  410266:	add    al,0x87
  410268:	mov    DWORD PTR [eax],esi
  41026a:	add    DWORD PTR [eax],0xffffffff
  41026d:	int3   
  41026e:	hlt    
  41026f:	(bad)  
  410270:	fdiv   st(7),st
  410272:	and    ecx,edi
  410274:	push   ebp
  410275:	or     DWORD PTR [esi-0x787c2b],0xffffffff
  41027c:	cmp    edi,0x3a
  41027f:	jmp    DWORD PTR [esi-0x34]
  410282:	pop    esp
  410283:	or     al,0x4a
  410285:	add    BYTE PTR [ebx-0x4],ch
  410288:	add    BYTE PTR [edi-0x7c3301],al
  41028e:	push   cs
  41028f:	inc    ebp
  410291:	and    DWORD PTR [eax],0xffffffed
  410294:	enter  0xb000,0x72
  410298:	jmp    DWORD PTR [edx-0x7c007d00]
  41029e:	jg     0x41029f
  4102a0:	sbb    al,0xff
  4102a2:	add    ebx,ebx
  4102a4:	stc    
  4102a5:	dec    DWORD PTR [edi+0x64]
  4102a8:	add    BYTE PTR [eax],cl
  4102aa:	or     esp,0xffffff83
  4102ad:	add    BYTE PTR [ebx-0x7d],ah
  4102b0:	xor    al,0xff
  4102b2:	loopne 0x410237
  4102b4:	in     eax,0x0
  4102b6:	ins    BYTE PTR es:[edi],dx
  4102b7:	jb     0x4102b8
  4102b9:	mov    edx,0xccffff00
  4102be:	xor    al,0x0
  4102c0:	mov    bh,0xff
  4102c2:	cli    
  4102c3:	adc    BYTE PTR [esi-0x34],dl
  4102c6:	dec    esi
  4102c7:	sbb    bh,bh
  4102c9:	lahf   
  4102ca:	add    BYTE PTR [eax],al
  4102cc:	(bad)  
  4102cd:	(bad)  
  4102ce:	jp     0x410253
  4102d0:	(bad)  
  4102d2:	aas    
  4102d3:	fld    TBYTE PTR [edx+0x0]
  4102d6:	or     dh,BYTE PTR [ecx]
  4102d8:	inc    DWORD PTR [ebx+0xff0083]
  4102de:	fild   DWORD PTR [eax]
  4102e0:	xchg   ecx,eax
  4102e1:	add    BYTE PTR [ebp+0x44ff0a46],al
  4102e7:	leave  
  4102e8:	call   DWORD PTR [esi-0x77]
  4102eb:	add    bh,bh
  4102ed:	dec    ecx
  4102ef:	inc    DWORD PTR [edx]
  4102f1:	jmp    FWORD PTR [ecx+ebx*4-0x58]
  4102f5:	int3   
  4102f6:	imul   ecx,DWORD PTR [edi+edi*8],0xffffffd9
  4102fa:	add    bh,bh
  4102fc:	int3   
  4102fd:	add    BYTE PTR [eax-0x66ffc101],dh
  410303:	out    0xf5,al
  410305:	add    ah,dh
  410307:	sub    al,0x0
  410309:	aaa    
  41030a:	dec    esp
  41030c:	(bad)  
  41030d:	jmp    DWORD PTR [edx+0x0]
  410310:	je     0x410311
  410312:	std    
  410313:	and    eax,0xf9b5ff0b
  410318:	push   ecx
  41031a:	add    bh,bh
  41031c:	int3   
  41031d:	(bad)  
  41031e:	js     0x410320
  410320:	(bad)  
  410321:	(bad)  
  410322:	cli    
  410323:	in     al,dx
  410324:	xchg   edi,eax
  410325:	mov    ebx,eax
  410327:	adc    eax,0x8383b3ff
  41032c:	mov    DWORD PTR [ebx-0x17006f],eax
  410332:	xor    ecx,0xffffffa1
  410335:	add    BYTE PTR [edi+ebp*2-0x327d],ah
  41033c:	add    bh,bh
  41033e:	fisttp WORD PTR [ecx-0x30f5001b]
  410344:	cmp    al,BYTE PTR [eax]
  410346:	cs (bad) 
  410349:	aas    
  41034a:	int3   
  41034b:	inc    DWORD PTR [eax]
  41034d:	add    BYTE PTR [ecx+0xe004b00],dl
  410353:	fild   WORD PTR [edi+0x0]
  410356:	push   esi
  410357:	retf   
  410358:	jmp    edx
  41035a:	inc    DWORD PTR [eax]
  41035c:	add    DWORD PTR [eax],0xffffff93
  41035f:	inc    DWORD PTR [ebx+0x191e57ff]
  410365:	add    BYTE PTR [eax+0x9b0006],cl
  41036b:	(bad)  
  41036c:	(bad)  
  41036d:	dec    DWORD PTR [edx-0x1]
  410370:	sbb    bh,bh
  410372:	and    BYTE PTR [esi-0x1b6d0018],cl
  410378:	int3   
  410379:	or     al,BYTE PTR [eax]
  41037b:	add    bh,bh
  41037d:	sbb    DWORD PTR [ebx],0xffffff83
  410380:	loopne 0x410381
  410382:	inc    esp
  410383:	mov    WORD PTR [edx],fs
  410385:	add    BYTE PTR [ebp-0xf6ff7d],al
  41038b:	inc    DWORD PTR [eax]
  41038d:	add    al,ch
  41038f:	(bad)  
  410390:	mov    edi,0xfb01ce00
  410395:	and    DWORD PTR [esi+0x2a0006],0x0
  41039c:	add    bh,bh
  41039e:	and    al,0xff
  4103a0:	add    eax,0xec71ca83
  4103a5:	add    BYTE PTR [eax-0x23],dh
  4103a8:	add    BYTE PTR [ebx],ah
  4103aa:	mov    DWORD PTR [eax],eax
  4103ac:	(bad)  
  4103ad:	(bad)  
  4103ae:	js     0x4103b0
  4103b0:	xor    bh,bh
  4103b2:	cwde   
  4103b3:	mov    eax,ds:0x2f94838c
  4103b8:	push   DWORD PTR [esi-0xff7d]
  4103be:	or     al,BYTE PTR [eax]
  4103c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103c1:	(bad)  
  4103c2:	jg     0x410424
  4103c4:	popf   
  4103c5:	add    BYTE PTR [eax-0x46],dh
  4103c8:	mov    edi,esi
  4103ca:	(bad)  
  4103cb:	dec    DWORD PTR [ecx-0x22001801]
  4103d1:	add    BYTE PTR [esi+0x1c],dh
  4103d4:	int3   
  4103d5:	int3   
  4103d6:	push   es
  4103d7:	push   esi
  4103d8:	add    BYTE PTR [ebp-0x7c007700],dh
  4103de:	out    dx,eax
  4103df:	call   esi
  4103e1:	int3   
  4103e2:	mov    esp,0x2891e50
  4103e7:	ja     0x4103e8
  4103e9:	hlt    
  4103ea:	mov    edi,edi
  4103ec:	(bad)  
  4103ed:	call   DWORD PTR [esi-0x7d]
  4103f0:	mov    eax,0x3cb606ff
  4103f5:	add    BYTE PTR [esi+0xb083f8],dl
  4103fb:	add    bh,bh
  4103fd:	add    BYTE PTR [esi+0x3bff16ff],cl
  410403:	dec    esp
  410404:	scas   eax,DWORD PTR es:[edi]
  410405:	add    DWORD PTR [edi+ebx*4-0x1],0xffffffc5
  41040a:	(bad)  
  41040b:	(bad)  
  41040c:	(bad)  
  41040d:	inc    DWORD PTR [edx]
  41040f:	add    BYTE PTR [edi-0x6032737d],bl
  410415:	push   DWORD PTR [esi]
  410417:	adc    al,0xff
  410419:	fiadd  WORD PTR [eax]
  41041b:	add    bh,bh
  41041d:	add    bl,bh
  41041f:	add    BYTE PTR [esi+0x5c2150ff],bh
  410425:	add    ch,bl
  410427:	dec    ebp
  410428:	add    BYTE PTR [edx],dh
  41042a:	int3   
  41042b:	add    bh,bh
  41042d:	(bad)  
  41042e:	clc    
  41042f:	dec    DWORD PTR [esi]
  410431:	call   DWORD PTR [ebp-0x75]
  410434:	cmc    
  410435:	int3   
  410436:	sub    al,BYTE PTR [ecx]
  410438:	add    BYTE PTR [edi+edi*8-0x1],cl
  41043c:	int3   
  41043d:	dec    DWORD PTR [esi-0x1b33d400]
  410443:	sbb    ebp,DWORD PTR [ebp-0x1]
  410446:	xor    al,0xa3
  410448:	jmp    esi
  41044a:	int3   
  41044b:	add    bh,bh
  41044d:	push   DWORD PTR [eax-0x1]
  410450:	rol    BYTE PTR [ebx-0x760679c4],0x17
  410457:	mov    ah,0xcc
  410459:	int3   
  41045a:	inc    DWORD PTR [ebx-0x765e0000]
  410460:	sar    edi,cl
  410462:	mov    cl,0xda
  410464:	test   ah,cl
  410466:	pop    ds
  410467:	xor    al,BYTE PTR [ebx+0xb5]
  41046d:	int3   
  41046e:	rol    DWORD PTR [eax],0x70
  410471:	int3   
  410472:	push   0xe5cc5342
  410477:	rol    BYTE PTR [eax],0xd5
  41047a:	add    DWORD PTR [ebx-0x6e0001],0xffffff98
  410481:	jmp    FWORD PTR ds:0xceccb4db
  410487:	mov    ch,0x83
  410489:	push   ebp
  41048a:	add    bh,bh
  41048c:	dec    DWORD PTR [ecx-0x200066]
  410492:	mov    edi,ebp
  410494:	std    
  410495:	jmp    DWORD PTR [ebx]
  410497:	mov    al,ds:0xb9ff
  41049c:	inc    DWORD PTR [eax]
  41049e:	lahf   
  41049f:	inc    DWORD PTR [eax-0x1]
  4104a2:	inc    edi
  4104a3:	icebp  
  4104a4:	clc    
  4104a5:	cmp    DWORD PTR [edx-0x13],0xffffffff
  4104a9:	(bad)  
  4104aa:	add    BYTE PTR [ebx-0x76807d00],al
  4104b0:	xor    eax,0xee2b94ff
  4104b5:	add    BYTE PTR [esi+0xea001b],dh
  4104bb:	inc    DWORD PTR [eax]
  4104bd:	add    BYTE PTR [ecx-0x7d],ah
  4104c0:	arpl   WORD PTR [ecx-0x7b9769],cx
  4104c6:	push   ebx
  4104c7:	retf   0xe3ff
  4104ca:	inc    DWORD PTR [eax]
  4104cc:	add    BYTE PTR [ebx+0xc1cc96],al
  4104d2:	loopne 0x410524
  4104d4:	out    0xff,eax
  4104d6:	or     ebx,DWORD PTR [eax]
  4104d8:	add    BYTE PTR [eax],cl
  4104da:	inc    DWORD PTR [ebx+0x9e89ff]
  4104e0:	mov    dl,0x0
  4104e2:	aaa    
  4104e3:	(bad)  
  4104e4:	or     edi,edi
  4104e6:	test   eax,0xffdb0002
  4104eb:	dec    DWORD PTR [ecx+0x23ccab00]
  4104f1:	or     DWORD PTR [edx-0x14337225],0x32
  4104f8:	push   esp
  4104fa:	add    DWORD PTR [ebx-0xe40001],0xffffffbf
  410501:	mov    DWORD PTR [edi+0x3effdd16],ebp
  410507:	ud0    esp,esp
  41050a:	mov    edi,edi
  41050c:	cmp    edi,0xffffff80
  41050f:	add    BYTE PTR [ebp-0x13230434],ch
  410515:	cmp    DWORD PTR [ebp-0x80ffb5],0x0
  41051c:	add    bh,bh
  41051e:	test   al,0xff
  410520:	mov    edx,0xccd21900
  410525:	jmp    FWORD PTR [ebp+0x3f]
  410528:	int3   
  410529:	ror    ah,0xff
  41052c:	mov    DWORD PTR [ebx-0x860072],eax
  410532:	pop    esi
  410533:	in     al,dx
  410534:	lahf   
  410535:	add    BYTE PTR [ecx+0x32],ah
  410538:	add    BYTE PTR [edi+edi*8-0x1],cl
  41053c:	dec    esp
  41053e:	cld    
  41053f:	(bad)  
  410540:	stc    
  410541:	inc    DWORD PTR [eax-0x5a]
  410544:	push   WORD PTR [ebx-0x26]
  410548:	add    BYTE PTR [eax+0x0],dh
  41054b:	add    BYTE PTR [ebx+0x53ff07ff],al
  410551:	add    BYTE PTR [edx+0x40],ch
  410554:	dec    edi
  410555:	inc    DWORD PTR [eax]
  410557:	aaa    
  410558:	add    BYTE PTR [eax+eax*1-0x34],al
  41055c:	inc    DWORD PTR [eax]
  41055e:	addr16 dec edi
  410561:	int3   
  410562:	je     0x41053d
  410564:	pop    ss
  410565:	mov    ebp,edi
  410567:	ds add cl,dl
  41056a:	add    DWORD PTR [ebx-0x98ff01],0xffffffdd
  410571:	add    BYTE PTR [ebx+eiz*4-0x6c],dl
  410575:	xor    DWORD PTR ds:0x9fff27,0xffffffff
  41057c:	mov    edi,edi
  41057e:	jno    0x41057f
  410580:	jb     0x410505
  410582:	dec    eax
  410583:	scas   eax,DWORD PTR es:[edi]
  410584:	loop   0x410585
  410586:	mov    ds:0x8997ff05,eax
  41058b:	add    DWORD PTR [ebx-0x78004701],0xffffff89
  410592:	push   ecx
  410593:	addr16 xchg esp,eax
  410595:	push   DWORD PTR [edx+0x4]
  410598:	dec    DWORD PTR [eax+eax*1+0x3c00ffff]
  41059f:	jmp    DWORD PTR [edx+0xebc0ecc]
  4105a5:	add    BYTE PTR [eax-0x76fdff98],bl
  4105ab:	inc    DWORD PTR [ebx+0x3e008300]
  4105b1:	(bad)  
  4105b2:	jmp    0xf6407527
  4105b7:	pop    ecx
  4105b8:	and    edi,0xffffffff
  4105bb:	add    ah,cl
  4105bd:	sub    DWORD PTR [esi+0x0],0xffffff9c
  4105c1:	push   DWORD PTR [ebx-0x77]
  4105c4:	test   BYTE PTR [eax],al
  4105c6:	xchg   esp,eax
  4105c7:	iret   
  4105c8:	push   DWORD PTR [ebp-0x100]
  4105ce:	fld    QWORD PTR [eax]
  4105d0:	int    0x83
  4105d2:	scas   eax,DWORD PTR es:[edi]
  4105d3:	add    DWORD PTR [edx-0x1],eax
  4105d6:	addr16 and al,0xff
  4105d9:	pop    es
  4105da:	(bad)  
  4105db:	inc    DWORD PTR [eax]
  4105dd:	and    esi,0xffffffcc
  4105e0:	mov    dl,0xff
  4105e2:	cmp    dh,BYTE PTR [edx+ebp*1]
  4105e5:	add    BYTE PTR [edi],al
  4105e7:	loope  0x4105e9
  4105e9:	mov    cs,esp
  4105eb:	cmp    edi,0xffffffff
  4105ee:	jge    0x4105ef
  4105f0:	jo     0x4105f1
  4105f2:	dec    ebx
  4105f3:	lods   al,BYTE PTR ds:[esi]
  4105f4:	(bad)  
  4105f5:	call   DWORD PTR [edx]
  4105f7:	push   edx
  4105f8:	inc    DWORD PTR [eax]
  4105fa:	mov    edi,edi
  4105fc:	int3   
  4105fd:	call   FWORD PTR [ebp-0x7d]
  410600:	jae    0x410601
  410602:	aaa    
  410603:	mov    ebx,0x584bff6f
  410608:	jmp    ebp
  41060a:	(bad)  
  41060b:	inc    DWORD PTR [ebx-0x47ff9800]
  410611:	add    BYTE PTR [edi],al
  410613:	data16 stos BYTE PTR es:[edi],al
  410615:	call   FWORD PTR [ebp+esi*4-0xff9a7d]
  41061c:	cmp    edi,0x1b
  41061f:	call   DWORD PTR [edx-0x1]
  410622:	dec    edi
  410623:	test   dh,0x83
  410626:	jbe    0x4105ff
  410628:	(bad)  
  410629:	in     eax,dx
  41062a:	add    BYTE PTR [eax],al
  41062c:	inc    DWORD PTR [ebx-0x33173332]
  410632:	cdq    
  410633:	repnz ins DWORD PTR es:[edi],dx
  410635:	call   FWORD PTR [edx]
  410637:	rol    DWORD PTR [eax],cl
  410639:	mov    edx,0x8300ff83
  41063e:	dec    esp
  41063f:	add    dh,dl
  410641:	add    BYTE PTR [eax+0x2a009bc7],ah
  410647:	test   esp,0x89ffac
  41064d:	int3   
  41064e:	lods   eax,DWORD PTR ds:[esi]
  41064f:	dec    ebp
  410651:	add    BYTE PTR [eax],bh
  410653:	pop    ecx
  410654:	leave  
  410655:	call   DWORD PTR [edx]
  410657:	push   edi
  410658:	add    ebp,0xffffffff
  41065b:	inc    DWORD PTR [eax]
  41065d:	push   DWORD PTR [esi+0x4ff14cc]
  410663:	(bad)  
  410664:	cwde   
  410665:	add    BYTE PTR [esi],bh
  410667:	add    edi,edi
  410669:	push   ebx
  41066a:	inc    DWORD PTR [ebx+0x2aff83]
  410670:	(bad)  
  410672:	pop    ebp
  410673:	jl     0x410645
  410675:	add    BYTE PTR [ebx],bl
  410677:	or     DWORD PTR [ebx-0x7c00ffaa],eax
  41067d:	add    ah,dh
  41067f:	(bad)  
  410680:	jl     0x410681
  410682:	mov    ebx,0xd4cc2688
  410687:	idiv   bh
  410689:	mov    bl,0x0
  41068b:	add    bh,bh
  41068d:	add    BYTE PTR [ebx],dl
  41068f:	add    cl,cl
  410691:	add    dl,bh
  410693:	ja     0x410644
  410695:	add    BYTE PTR [esi+edi*2-0x34],bh
  410699:	xchg   esi,eax
  41069a:	(bad)  
  41069b:	(bad)  
  41069c:	(bad)  
  41069d:	jmp    FWORD PTR [ecx-0x7000d401]
  4106a3:	lock (bad) 
  4106a5:	jmp    DWORD PTR [ecx-0x45ff9d]
  4106ab:	inc    DWORD PTR [eax]
  4106ad:	add    BYTE PTR [ebx-0x1],bl
  4106b0:	lods   eax,DWORD PTR ds:[esi]
  4106b1:	add    BYTE PTR [ebx-0x25],bh
  4106b4:	push   ds
  4106b5:	(bad)  
  4106b6:	mov    esp,0xffc9007b
  4106bb:	inc    DWORD PTR [ebx-0x7cffbd01]
  4106c1:	sbb    DWORD PTR [eax],0xffffff83
  4106c4:	leave  
  4106c5:	call   DWORD PTR [ecx-0x2f00a4]
  4106cb:	(bad)  
  4106cc:	inc    DWORD PTR [eax]
  4106ce:	jo     0x4106cf
  4106d0:	call   0x98cc:0x8afd9800
  4106d7:	dec    edx
  4106d8:	(bad)  
  4106d9:	mov    esp,0xffccff
  4106de:	dec    ebx
  4106df:	inc    DWORD PTR [ecx-0x6bcf0101]
  4106e5:	inc    DWORD PTR ds:0xffd1ff68
  4106eb:	add    BYTE PTR [ecx-0x5c005800],cl
  4106f1:	call   FWORD PTR [ecx]
  4106f3:	or     DWORD PTR [edx],esp
  4106f5:	add    BYTE PTR [edx+eiz*1-0x1],ch
  4106f9:	jmp    0x408afd
  4106fe:	loop   0x410700
  410700:	or     al,BYTE PTR [eax]
  410702:	fld    QWORD PTR [edx-0x12]
  410705:	or     DWORD PTR [edx],0x20
  410708:	add    BYTE PTR [edi],ah
  41070a:	add    bh,bh
  41070c:	or     DWORD PTR [ecx+0xda837f],0xffffffcc
  410713:	pop    esi
  410714:	xchg   ecx,eax
  410715:	sub    DWORD PTR [edi-0x51],0xffffff83
  410719:	sub    al,0xff
  41071b:	inc    DWORD PTR [eax]
  41071d:	add    BYTE PTR [ecx],dh
  41071f:	add    BYTE PTR [eax+eax*1],dl
  410722:	iret   
  410723:	xor    DWORD PTR [ebp-0x34],ebx
  410726:	jle    0x410708
  410728:	inc    DWORD PTR [esi]
  41072a:	add    BYTE PTR [eax],al
  41072c:	mov    DWORD PTR [eax],eax
  41072e:	imul   eax,DWORD PTR [eax],0x1dd9ffd6
  410734:	iret   
  410735:	inc    DWORD PTR [esi]
  410737:	lea    eax,[eax]
  410739:	jmp    0xffc407c7
  41073e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41073f:	call   FWORD PTR [ecx-0x62645f7d]
  410745:	sbb    DWORD PTR [ebp-0xfe008d],0xffffffff
  41074c:	add    bh,bh
  41074e:	mov    al,ds:0x32836e83
  410753:	push   0xe6190040
  410758:	inc    DWORD PTR [esi]
  41075a:	inc    DWORD PTR [eax]
  41075c:	(bad)  
  41075d:	(bad)  
  41075e:	js     0x410760
  410760:	mov    edi,0xc27f2d00
  410765:	jmp    esp
  410767:	jmp    0x89cc:0xff8953ff
  41076e:	call   0x6b21:0xa0834000
  410775:	call   FWORD PTR [ebp+0x8683be]
  41077b:	add    DWORD PTR [eax],0xffffffcc
  41077e:	in     eax,dx
  41077f:	jmp    FWORD PTR [edx-0x13d0a777]
  410785:	jmp    FWORD PTR [edi+eax*8-0x1]
  410789:	adc    edi,edi
  41078b:	mov    edi,edi
  41078d:	add    BYTE PTR [ecx+0x6ff28ff],bh
  410793:	xlat   BYTE PTR ds:[ebx]
  410794:	scas   al,BYTE PTR es:[edi]
  410795:	(bad)  
  410796:	cmp    edi,esi
  410798:	int3   
  410799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41079a:	add    bh,bh
  41079c:	int3   
  41079d:	dec    DWORD PTR [edi-0x1]
  4107a0:	sub    al,BYTE PTR [eax]
  4107a2:	cmp    BYTE PTR [edx+0x7c89f0],dl
  4107a8:	push   DWORD PTR ds:0xffff0000
  4107ae:	ja     0x4107b0
  4107b0:	push   0x574ec7ff
  4107b5:	dec    DWORD PTR [eax]
  4107b7:	imul   edi,edi,0xffffb4
  4107bd:	add    BYTE PTR [esi],ch
  4107bf:	add    bl,dl
  4107c1:	push   DWORD PTR [ebx+ebp*4+0x9]
  4107c5:	sub    DWORD PTR [edx-0x17],0xffffffff
  4107c9:	jmp    0x4107ca
  4107cb:	inc    DWORD PTR [eax]
  4107cd:	int3   
  4107ce:	ja     0x4107cf
  4107d0:	pop    DWORD PTR [ebx-0x1dcdbd]
  4107d6:	inc    DWORD PTR fs:[ebx-0xffff39]
  4107dd:	call   DWORD PTR [edx]
  4107df:	add    BYTE PTR [edi+0x67f2fdff],dh
  4107e5:	call   DWORD PTR ds:0xff37cc3b
  4107eb:	inc    DWORD PTR [ebx+0x7fcce7ff]
  4107f1:	add    bl,ah
  4107f3:	stos   DWORD PTR es:[edi],eax
  4107f4:	xor    al,BYTE PTR [ebx+0x5c839c35]
  4107fa:	add    DWORD PTR [eax],0x0
  4107fd:	add    bh,dh
  4107ff:	inc    DWORD PTR [esi-0xc7a7401]
  410805:	cmp    DWORD PTR [ebp-0x33b0ff25],0xffffffcc
  41080c:	dec    esp
  41080e:	xlat   BYTE PTR ds:[ebx]
  41080f:	int3   
  410810:	in     eax,dx
  410811:	adc    DWORD PTR [ebp+eax*4-0x57600093],0xffffffff
  410819:	jg     0x41081b
  41081b:	(bad)  
  41081c:	(bad)  
  41081d:	inc    DWORD PTR [ebp-0x1]
  410820:	inc    ebx
  410821:	jmp    FWORD PTR [esi+0xecc18a0]
  410827:	bnd call DWORD PTR [ecx+0x0]
  41082b:	(bad)  
  41082c:	dec    esp
  41082e:	iret   
  41082f:	inc    DWORD PTR [eax]
  410831:	push   edx
  410833:	ss and bh,bh
  410836:	addr16 mov ds:0x53ff,eax
  41083a:	(bad)  
  41083b:	(bad)  
  41083c:	(bad)  
  41083d:	inc    DWORD PTR ds:0x93ff9b89
  410843:	(bad)  
  410844:	fld    QWORD PTR [eax]
  410846:	clc    
  410847:	xlat   BYTE PTR ds:[ebx]
  410848:	int3   
  410849:	fdivr  st,st(7)
  41084b:	inc    DWORD PTR [eax]
  41084d:	push   DWORD PTR [esi-0x1]
  410850:	mov    ds:0xb9b81aff,al
  410855:	sbb    DWORD PTR [edx],0xffffffab
  410858:	jmp    DWORD PTR [edi+edi*8]
  41085b:	add    bh,bh
  41085d:	int3   
  41085e:	aas    
  41085f:	add    BYTE PTR [esi],bl
  410861:	jmp    DWORD PTR [eax-0x19]
  410864:	jle    0x4107e9
  410866:	in     al,dx
  410867:	leave  
  410868:	(bad)  
  410869:	cmp    esp,ecx
  41086b:	add    bh,bh
  41086d:	add    BYTE PTR [eax+eax*1+0x4da700c9],bl
  410874:	jb     0x4107f9
  410876:	jne    0x410803
  410878:	(bad)  
  410879:	jle    0x41087a
  41087b:	mov    DWORD PTR [eax],eax
  41087d:	dec    DWORD PTR [edx-0x1]
  410880:	jg     0x410881
  410882:	in     al,dx
  410883:	push   cs
  410884:	push   esp
  410885:	(bad)  
  410886:	jl     0x410856
  410888:	or     DWORD PTR ds:0xff89ff83,0xffffff89
  41088f:	inc    DWORD PTR [ebp-0x1]
  410892:	adc    edi,esp
  410894:	push   edi
  410895:	mov    DWORD PTR [eax],eax
  410897:	call   FWORD PTR gs:[edx]
  41089a:	int3   
  41089b:	mov    DWORD PTR [eax],eax
  41089d:	int3   
  41089e:	aad    0x83
  4108a0:	mov    bh,0xff
  4108a2:	sar    BYTE PTR [edi],0x87
  4108a5:	(bad)  
  4108a6:	mov    ebp,0xc1ff52
  4108ab:	(bad)  
  4108ac:	dec    esp
  4108ae:	xchg   edx,eax
  4108af:	add    BYTE PTR [edx+0x7f72fc00],ch
  4108b5:	call   ebx
  4108b7:	adc    al,0xff
  4108b9:	push   cs
  4108ba:	inc    DWORD PTR [ebx+0x51ff00]
  4108c0:	xor    edi,edi
  4108c2:	dec    eax
  4108c3:	addr16 cmp bh,bh
  4108c6:	sub    al,0xe9
  4108c8:	int3   
  4108c9:	sbb    DWORD PTR [ecx+0x4200ffff],ecx
  4108cf:	add    bh,dl
  4108d1:	add    BYTE PTR [ebp+0x16],ah
  4108d4:	(bad)  
  4108d5:	dec    DWORD PTR [ecx-0xd600fa]
  4108db:	or     esp,0xffffffcc
  4108de:	mov    ds:0xeefff283,al
  4108e3:	lds    edi,FWORD PTR [ecx-0x1]
  4108e6:	jns    0x4108d6
  4108e8:	add    BYTE PTR [edx-0x1],ch
  4108eb:	inc    DWORD PTR [eax]
  4108ed:	jmp    FWORD PTR [edi+edi*8+0x72]
  4108f1:	jmp    DWORD PTR [eax-0x6000a6aa]
  4108f7:	sub    eax,0xff8349ff
  4108fc:	add    ah,cl
  4108fe:	out    dx,al
  4108ff:	inc    DWORD PTR [ebp-0x1]
  410902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410903:	imul   ebp,DWORD PTR [edi],0xffffffcc
  410906:	jg     0x410943
  410908:	mov    DWORD PTR [ecx-0x1],ebx
  41090b:	cmp    edi,0x0
  41090e:	cld    
  41090f:	int3   
  410910:	int    0xcc
  410912:	inc    ebp
  410913:	lods   al,BYTE PTR ds:[esi]
  410914:	cld    
  410915:	call   FWORD PTR [eax-0x768e007c]
  41091b:	mov    DWORD PTR [ebx+0x69002683],eax
  410921:	int3   
  410922:	hlt    
  410923:	inc    edx
  410924:	retf   
  410925:	push   DWORD PTR [ecx+0x11]
  410928:	add    BYTE PTR [eax],bh
  41092a:	inc    DWORD PTR [eax]
  41092c:	inc    DWORD PTR [eax]
  41092e:	xor    ecx,esp
  410930:	sbb    al,BYTE PTR [eax]
  410932:	cmp    dh,BYTE PTR fs:[ecx-0x7c841900]
  410939:	aam    0xff
  41093b:	add    BYTE PTR [eax],al
  41093d:	inc    DWORD PTR [esi-0x1]
  410940:	in     eax,dx
  410941:	add    dl,ch
  410943:	push   cs
  410944:	call   FWORD PTR gs:[ebx-0x765b7ca1]
  41094b:	add    BYTE PTR [eax],al
  41094d:	call   FWORD PTR [esi-0x1]
  410950:	xchg   edi,edi
  410952:	cdq    
  410953:	jno    0x41094c
  410955:	inc    esi
  410957:	inc    esi
  410958:	(bad)  
  410959:	ds (bad) 
  41095b:	(bad)  
  41095c:	(bad)  
  41095d:	call   FWORD PTR [esi]
  41095f:	dec    ecx
  410961:	int3   
  410962:	or     bl,BYTE PTR [eax+0x18]
  410965:	add    bh,ah
  410967:	xchg   edx,eax
  410968:	add    BYTE PTR [edx-0x34],bl
  41096b:	add    ah,cl
  41096d:	dec    DWORD PTR [esi]
  41096f:	jmp    FWORD PTR [edi]
  410971:	inc    DWORD PTR ds:0x7cff19d8
  410977:	xchg   edx,eax
  410978:	inc    DWORD PTR [ecx-0x1]
  41097b:	add    BYTE PTR [eax],al
  41097d:	or     esi,0xffffff83
  410980:	pop    ebp
  410981:	call   DWORD PTR [ebx-0x61]
  410984:	leave  
  410985:	add    cl,al
  410987:	das    
  410988:	add    bl,ah
  41098a:	add    BYTE PTR [ecx-0x7605ff01],cl
  410990:	fadd   QWORD PTR [ebx-0xa48148]
  410996:	mov    al,BYTE PTR [esi-0x1]
  410999:	retf   0x89ff
  41099c:	(bad)  
  41099d:	call   DWORD PTR [ebx-0x44009701]
  4109a3:	or     DWORD PTR [ebx+0x6ee00],edx
  4109a9:	or     esp,ecx
  4109ab:	(bad)  
  4109ac:	dec    esp
  4109ae:	fild   DWORD PTR [eax]
  4109b0:	xor    al,BYTE PTR [ebx-0x17f58b]
  4109b6:	jnp    0x410a2c
  4109b8:	inc    DWORD PTR [esi+0x0]
  4109bb:	inc    DWORD PTR [ebx-0x527c4e00]
  4109c1:	add    BYTE PTR [ebp-0x5f005710],ch
  4109c7:	pop    DWORD PTR [eax]
  4109c9:	cs mov edi,edi
  4109cc:	(bad)  
  4109cd:	push   esi
  4109cf:	int3   
  4109d0:	jle    0x4109d1
  4109d2:	fwait
  4109d3:	dec    esp
  4109d4:	call   WORD PTR [eax]
  4109d7:	aad    0xff
  4109d9:	std    
  4109da:	dec    esp
  4109dc:	(bad)  
  4109dd:	call   DWORD PTR [ebp-0x1]
  4109e0:	gs (bad) 
  4109e2:	aas    
  4109e3:	and    ch,BYTE PTR [eax]
  4109e5:	add    dh,cl
  4109e7:	mov    ch,0x0
  4109e9:	out    dx,al
  4109ea:	add    DWORD PTR [eax],0xffffffff
  4109ed:	call   ebx
  4109ef:	(bad)  
  4109f0:	jmp    0x410975
  4109f2:	sbb    cl,ch
  4109f4:	scas   eax,DWORD PTR es:[edi]
  4109f5:	add    BYTE PTR [esi],al
  4109f7:	test   BYTE PTR [ecx-0x32],0xff
  4109fe:	call   0x606e:0xe5cccbff
  410a05:	(bad)  
  410a06:	cmp    al,BYTE PTR [ecx-0x77]
  410a09:	cmp    bh,bh
  410a0b:	add    BYTE PTR [eax],al
  410a0d:	add    BYTE PTR [esi-0x1],cl
  410a10:	lock call DWORD PTR [ecx+0x5f83acc9]
  410a17:	gs (bad) 
  410a19:	(bad)  
  410a1b:	(bad)  
  410a1c:	(bad)  
  410a1d:	call   DWORD PTR [eax-0x34]
  410a20:	in     eax,0xff
  410a22:	dec    ecx
  410a23:	pop    esi
  410a24:	sar    edi,0xae
  410a27:	or     bh,bh
  410a29:	xor    bh,bh
  410a2b:	add    BYTE PTR [eax],al
  410a2d:	add    BYTE PTR ds:0x1e832b00,bl
  410a33:	enter  0x835a,0xb4
  410a37:	xor    eax,DWORD PTR [ebx-0x7c00000d]
  410a3d:	call   DWORD PTR [ecx]
  410a3f:	(bad)  
  410a40:	call   0x1ab8cb44
  410a45:	call   DWORD PTR [eax-0x79]
  410a48:	add    DWORD PTR [esi+0xff0000],0xffffff85
  410a4f:	inc    edx
  410a51:	jmp    FWORD PTR [ecx]
  410a53:	jecxz  0x410a9f
  410a55:	add    al,al
  410a57:	rol    DWORD PTR [eax],0xc2
  410a5a:	inc    DWORD PTR [ebx-0x4c7c7d]
  410a60:	fdivr  st,st(7)
  410a62:	test   cl,bh
  410a64:	mov    ds:0x83080883,eax
  410a69:	push   edi
  410a6a:	int3   
  410a6b:	(bad)  
  410a6c:	inc    DWORD PTR [ebx-0x7ca500b9]
  410a72:	fsub   QWORD PTR [ebx-0x4e]
  410a75:	int3   
  410a76:	imul   ebx,DWORD PTR [eax],0xffffffff
  410a79:	ins    DWORD PTR es:[edi],dx
  410a7a:	add    bh,bh
  410a7c:	or     esp,0x63
  410a7f:	call   DWORD PTR [edi+edi*8-0x78d3c3]
  410a86:	cld    
  410a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a88:	add    BYTE PTR [edx+0x0],cl
  410a8b:	inc    DWORD PTR [eax]
  410a8d:	adc    DWORD PTR [ebp-0x34],0xffffffcb
  410a91:	jmp    FWORD PTR [ecx-0x7e006b53]
  410a97:	adc    ecx,esp
  410a99:	(bad)  
  410a9c:	add    DWORD PTR [ebx-0xa1ffc5],0x1d
  410aa3:	cmc    
  410aa4:	sbb    DWORD PTR [eax],eax
  410aa6:	jmp    0x8300:0x43ffe2
  410aad:	push   DWORD PTR [esi]
  410aaf:	(bad)  
  410ab0:	mov    eax,0xcf257100
  410ab5:	call   DWORD PTR [ebx-0x7ccfff1f]
  410abb:	dec    esp
  410abd:	add    BYTE PTR [eax+0x5d003889],al
  410ac3:	enter  0x891e,0xb9
  410ac7:	xchg   ebp,eax
  410ac8:	push   DWORD PTR [esi+0xffff00]
  410ace:	std    
  410acf:	add    BYTE PTR [ecx-0x286f8a7d],dl
  410ad5:	mov    DWORD PTR [esi-0x5d],ebx
  410ad8:	inc    esi
  410ada:	(bad)  
  410adb:	(bad)  
  410adc:	inc    DWORD PTR [eax]
  410ade:	out    dx,eax
  410adf:	add    BYTE PTR [ecx-0x1fb47300],dh
  410ae5:	jmp    esp
  410ae7:	sub    eax,DWORD PTR [eax]
  410ae9:	call   0xff420aed
  410aee:	retf   
  410aef:	cmp    DWORD PTR ds:0x853c81ff,0xffffffff
  410af6:	pop    eax
  410af7:	mov    ds:0x83ffe7ff,eax
  410afc:	(bad)  
  410afd:	inc    DWORD PTR [edx+0x3bffc300]
  410b03:	mov    BYTE PTR [ebp-0x7cf37d77],ch
  410b09:	jnp    0x410b0a
  410b0b:	inc    DWORD PTR [ebx+0x27000700]
  410b11:	call   FWORD PTR [edi-0x2c00f789]
  410b17:	pop    edx
  410b18:	jmp    DWORD PTR [ebx+eax*4-0x1]
  410b1c:	dec    DWORD PTR [ecx-0x470055]
  410b22:	mov    dh,0xc3
  410b24:	add    al,0xff
  410b26:	rol    BYTE PTR [ecx],0x89
  410b29:	fdivp  st(7),st
  410b2b:	add    BYTE PTR [eax],al
  410b2d:	add    BYTE PTR [edx-0x2c763201],dl
  410b33:	xchg   BYTE PTR [eax],ah
  410b35:	push   DWORD PTR [ecx-0x760f7ce1]
  410b3b:	add    bh,bh
  410b3d:	push   edx
  410b3f:	add    bl,bh
  410b41:	int3   
  410b42:	cmp    edi,DWORD PTR [edi-0x3af1ff14]
  410b48:	(bad)  
  410b49:	jg     0x410b4b
  410b4b:	mov    DWORD PTR [eax],eax
  410b4d:	call   FWORD PTR [edi]
  410b4f:	or     DWORD PTR [esi-0x34],0x61
  410b53:	sub    DWORD PTR [edx-0x7c345434],esi
  410b59:	inc    edi
  410b5a:	mov    edi,edi
  410b5c:	(bad)  
  410b5d:	jmp    FWORD PTR [ebp-0x507c5601]
  410b63:	aas    
  410b64:	(bad)  
  410b65:	dec    DWORD PTR [edi]
  410b67:	jle    0x410b68
  410b69:	add    cl,ah
  410b6b:	mov    esp,ecx
  410b6d:	add    BYTE PTR [eax+0x1fff5f00],ch
  410b73:	adc    BYTE PTR [edx-0x1],dl
  410b76:	(bad)  
  410b77:	xor    edi,edi
  410b79:	pop    ecx
  410b7a:	(bad)  
  410b7b:	inc    DWORD PTR [eax]
  410b7d:	push   DWORD PTR [eax-0x7d]
  410b80:	cmp    al,BYTE PTR [ebx-0xc15cb5]
  410b86:	add    dl,BYTE PTR [ecx+0x833f89]
  410b8c:	inc    DWORD PTR [eax]
  410b8e:	jmp    0x3541f092
  410b93:	out    dx,al
  410b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b95:	(bad)  
  410b96:	jmp    DWORD PTR [edx-0xff4901]
  410b9c:	add    BYTE PTR [eax],al
  410b9e:	scas   eax,DWORD PTR es:[edi]
  410b9f:	push   DWORD PTR [ebp-0x11c67300]
  410ba5:	int3   
  410ba6:	or     BYTE PTR [esi-0x34],bh
  410ba9:	repz or DWORD PTR [ecx-0x250100],0x39
  410bb1:	add    BYTE PTR [edx+edx*1+0x50],bh
  410bb5:	int3   
  410bb6:	sbb    bh,ah
  410bb8:	call   DWORD PTR [eax+0x83ffff]
  410bbe:	xlat   BYTE PTR ds:[ebx]
  410bbf:	call   FWORD PTR [edi]
  410bc1:	adc    DWORD PTR [ebx-0x3f],0xffffffb4
  410bc5:	call   FWORD PTR [ecx-0x7c]
  410bc8:	add    BYTE PTR [edi+0xff],dl
  410bce:	jo     0x410bcf
  410bd0:	out    dx,eax
  410bd1:	dec    DWORD PTR [ecx+eiz*1-0x3b]
  410bd5:	mov    ebx,esi
  410bd7:	mov    al,ds:0x83ff1600
  410bdc:	cmp    edi,0xffffffba
  410bdf:	add    BYTE PTR [esi],bh
  410be1:	(bad)  
  410be2:	fst    st(1)
  410be4:	add    al,0x89
  410be6:	and    BYTE PTR ss:[ebx-0x45],al
  410bed:	mov    DWORD PTR [eax],edi
  410bef:	sbb    DWORD PTR [edi+0x5e70e983],0xffffffff
  410bf6:	imul   esi,DWORD PTR [edi-0xf77d],0x0
  410bfd:	inc    DWORD PTR [esi]
  410bff:	mov    DWORD PTR [eax+eax*1],ebp
  410c02:	sbb    al,0x5a
  410c04:	sub    eax,0x152300
  410c09:	mov    ecx,0xffff
  410c0e:	dec    ebp
  410c0f:	push   DWORD PTR [edi+edi*8+0x1a]
  410c13:	adc    BYTE PTR [ecx-0x7c620b00],0x52
  410c1a:	inc    DWORD PTR [eax]
  410c1c:	add    ah,cl
  410c1e:	pop    esp
  410c1f:	dec    eax
  410c21:	jmp    DWORD PTR [esi+0x19ff8963]
  410c27:	dec    ebp
  410c28:	add    BYTE PTR [edi],dl
  410c2a:	inc    DWORD PTR [eax]
  410c2c:	dec    esp
  410c2e:	pop    edi
  410c2f:	(bad)  
  410c30:	mov    edi,0xbd1dc283
  410c35:	add    BYTE PTR [ecx-0x7a],ch
  410c38:	add    dl,cl
  410c3a:	add    BYTE PTR [ebx-0xd30034],al
  410c40:	jbe    0x410c0e
  410c42:	mov    ebx,0x3d007fd3
  410c47:	int    0xff
  410c49:	mov    ds:0xff00,eax
  410c4e:	add    eax,0x16ff53ff
  410c53:	mov    ds,WORD PTR [ebp-0x1]
  410c56:	clc    
  410c57:	sti    
  410c58:	jmp    DWORD PTR [eax-0x7c7d]
  410c5e:	mov    ds:0x47ffdd00,al
  410c63:	test   ebx,esp
  410c65:	add    BYTE PTR [edi-0x7cc37cc1],ah
  410c6b:	(bad)  
  410c6c:	(bad)  
  410c6d:	push   DWORD PTR [ecx-0x1]
  410c70:	pop    ecx
  410c71:	jmp    DWORD PTR [edx+0x41]
  410c74:	pop    edi
  410c75:	add    BYTE PTR [ebx-0x66],al
  410c78:	inc    DWORD PTR [ebx-0x1]
  410c7b:	(bad)  
  410c7c:	(bad)  
  410c7d:	call   esp
  410c7f:	inc    esp
  410c81:	add    al,ch
  410c83:	rcl    dl,1
  410c85:	xor    DWORD PTR [eax-0x76dbff26],0xffffff89
  410c8c:	dec    esp
  410c8e:	dec    ebx
  410c8f:	(bad)  
  410c90:	stc    
  410c91:	int3   
  410c92:	stos   BYTE PTR es:[edi],al
  410c93:	jge    0x410c3c
  410c95:	(bad)  
  410c96:	mov    esp,0x52ffbc
  410c9b:	(bad)  
  410c9c:	(bad)  
  410c9d:	inc    ebx
  410c9f:	push   DWORD PTR [ebp+0x0]
  410ca2:	fild   WORD PTR ds:0xc2188398
  410ca8:	add    BYTE PTR [edi+edi*8],bh
  410cab:	inc    DWORD PTR [eax]
  410cad:	call   DWORD PTR [ebx-0x7d]
  410cb0:	jmp    0x7b340c3e
  410cb5:	(bad)  
  410cb6:	fnstsw WORD PTR [ebp+0xff1383]
  410cbc:	add    ah,cl
  410cbe:	mov    cl,0x0
  410cc0:	test   al,0x0
  410cc2:	jmp    0x410cfe
  410cc4:	arpl   WORD PTR [eax],ax
  410cc6:	add    bh,bh
  410cc8:	(bad)  
  410cc9:	inc    DWORD PTR [eax]
  410ccb:	add    BYTE PTR [eax],al
  410ccd:	add    BYTE PTR [ebx-0x72da00],al
  410cd3:	(bad)  
  410cd4:	dec    esp
  410cd6:	xchg   ebp,eax
  410cd7:	das    
  410cd8:	ds jp  0x410c5e
  410cdb:	int3   
  410cdc:	cmp    edi,0xffffffb4
  410cdf:	pop    eax
  410ce0:	xchg   edx,eax
  410ce1:	adc    eax,0xffff83
  410ce6:	and    esi,eax
  410ce8:	cmp    eax,0xffcc8350
  410ced:	(bad)  
  410cee:	sti    
  410cef:	clc    
  410cf0:	iret   
  410cf1:	mov    edi,edi
  410cf3:	pop    ebx
  410cf4:	add    BYTE PTR [eax-0xe50008],ah
  410cfa:	xchg   edx,eax
  410cfb:	(bad)  
  410cfc:	ficom  WORD PTR [ebx+0xf9ff00]
  410d02:	or     edx,0xffffffff
  410d05:	ins    BYTE PTR es:[edi],dx
  410d06:	pop    esi
  410d07:	call   FWORD PTR [ebx-0xa76b800]
  410d0d:	adc    al,BYTE PTR [eax]
  410d0f:	mov    ebx,esp
  410d11:	add    DWORD PTR [eax],0x2e
  410d14:	add    BYTE PTR [ecx-0xa3ff72],al
  410d1a:	mov    esi,0x83a39bff
  410d1f:	add    DWORD PTR [edi+edi*8-0x1],0x3c
  410d24:	int3   
  410d25:	enter  0xff18,0x53
  410d29:	call   FWORD PTR [esi-0x1]
  410d2c:	arpl   WORD PTR [esi-0x1],ax
  410d2f:	call   DWORD PTR [ebx]
  410d31:	(bad)  
  410d32:	inc    DWORD PTR [ecx-0x66d600]
  410d38:	add    bh,bh
  410d3a:	inc    esp
  410d3b:	(bad)  
  410d3c:	cmp    dl,BYTE PTR [edi-0x230001]
  410d42:	push   DWORD PTR [ebx+eax*4]
  410d45:	add    DWORD PTR [edi+edi*8+0x2b],esi
  410d49:	(bad)  
  410d4a:	jg     0x410d4c
  410d4c:	pop    ebx
  410d4d:	mov    WORD PTR [eax],es
  410d4f:	or     DWORD PTR [ebx-0x34],0xffffffcc
  410d53:	mov    DWORD PTR [ecx-0x357c173d],ecx
  410d59:	add    BYTE PTR [eax+0xa4e500],cl
  410d5f:	(bad)  
  410d60:	clc    
  410d61:	cmp    edi,0xffffffa6
  410d64:	inc    ecx
  410d66:	out    0xff,eax
  410d68:	lock add BYTE PTR [esi-0x1],cl
  410d6c:	jmp    0x410dd3
  410d6e:	dec    esp
  410d70:	call   0x53b2:0x83868383
  410d77:	mov    DWORD PTR [eax-0x217cc301],ebp
  410d7d:	pop    edi
  410d7e:	or     esp,0xffffffca
  410d81:	dec    DWORD PTR [ecx+0x1ecc0001]
  410d87:	add    cl,bh
  410d89:	mov    DWORD PTR [ebp+0xb81583],eax
  410d8f:	add    BYTE PTR [eax-0x1],bl
  410d92:	sub    DWORD PTR [edi-0x1],0x4e
  410d96:	or     edi,edi
  410d98:	mov    al,BYTE PTR [eax]
  410d9a:	xor    al,0x0
  410d9c:	add    eax,0x6700ff52
  410da1:	inc    DWORD PTR [ebx-0x289100e2]
  410da7:	sub    DWORD PTR [esi],0xffffffff
  410daa:	push   0xffffff83
  410dac:	jmp    0x410d90
  410dae:	add    bh,bh
  410db0:	cmp    edi,0xffffff89
  410db3:	rol    BYTE PTR [eax],0x1a
  410db6:	adc    al,BYTE PTR [ebx-0xf1ff87]
  410dbc:	cmp    BYTE PTR [edi-0x769c7c01],dh
  410dc2:	add    bh,al
  410dc4:	add    BYTE PTR [edx-0x8700b9],ah
  410dca:	cld    
  410dcb:	add    BYTE PTR [edi-0x74ff009c],dh
  410dd1:	dec    DWORD PTR [ecx+0x3f93ff2f]
  410dd7:	mov    DWORD PTR [eax-0x1],edx
  410dda:	in     eax,dx
  410ddb:	sub    DWORD PTR [edi],0xffffff9e
  410dde:	add    BYTE PTR [eax],al
  410de0:	xor    bh,bh
  410de2:	add    al,al
  410de4:	call   DWORD PTR [eax+0x68]
  410de7:	add    BYTE PTR [edx+0x0],dh
  410dea:	cmp    eax,0x6de7ff
  410def:	(bad)  
  410df0:	js     0x410df2
  410df2:	inc    ecx
  410df4:	call   FWORD PTR [edx]
  410df6:	retf   0x7ff
  410df9:	dec    DWORD PTR ds:0xa0f3ff
  410dff:	adc    ecx,0xffffffff
  410e02:	mov    esi,esp
  410e04:	(bad)  
  410e05:	aas    
  410e06:	pop    edi
  410e07:	add    BYTE PTR [ebx],ah
  410e09:	adc    DWORD PTR ds:0x918eff,0xffffff83
  410e10:	std    
  410e11:	add    bh,bh
  410e13:	mov    al,BYTE PTR [eax]
  410e15:	pop    ebx
  410e16:	test   edi,edi
  410e18:	fdiv   st(7),st
  410e1a:	test   esp,0xff37a9
  410e20:	mov    al,BYTE PTR [eax]
  410e22:	sub    DWORD PTR ds:0xffc2c000,0xffffff96
  410e29:	int3   
  410e2a:	iret   
  410e2b:	add    BYTE PTR [ecx-0x50],bh
  410e2e:	add    BYTE PTR [ebx+0x6effff02],al
  410e34:	int3   
  410e35:	fstp   st(1)
  410e37:	add    BYTE PTR [ebx+eax*4],bh
  410e3a:	pop    esi
  410e3b:	dec    DWORD PTR [esi-0x74]
  410e3e:	add    BYTE PTR [eax],al
  410e40:	push   esi
  410e41:	(bad)  
  410e42:	push   esp
  410e44:	(bad)  
  410e45:	jnp    0x410dcf
  410e47:	add    BYTE PTR [edx+0x71ff60ff],ch
  410e4d:	mov    ah,0xff
  410e4f:	add    BYTE PTR [ebp-0x1],al
  410e52:	add    BYTE PTR [ecx-0x1],bh
  410e55:	pop    ds
  410e56:	xchg   esp,eax
  410e57:	or     DWORD PTR [edx],0xffffffff
  410e5a:	lods   al,BYTE PTR ds:[esi]
  410e5b:	add    DWORD PTR [edi+0x42],0x0
  410e5f:	add    BYTE PTR [ecx-0x1],dh
  410e62:	add    BYTE PTR [ebx],al
  410e64:	add    dl,ch
  410e66:	push   ebx
  410e67:	inc    ebp
  410e69:	add    BYTE PTR [esi-0x7d],bh
  410e6c:	fxtract 
  410e6e:	(bad)  
  410e6f:	push   ebx
  410e71:	inc    DWORD PTR [eax]
  410e73:	cdq    
  410e74:	and    DWORD PTR [edi],0xffffffaa
  410e77:	call   DWORD PTR [ebp-0x217c1401]
  410e7d:	push   esi
  410e7e:	mov    edi,edi
  410e80:	imul   edi,edi,0x0
  410e83:	adc    al,0x0
  410e85:	sbb    DWORD PTR [ecx-0x4f004800],0xffffffff
  410e8c:	fcom   QWORD PTR [ebx]
  410e8e:	mov    esp,ecx
  410e90:	jle    0x410e92
  410e92:	add    bl,dh
  410e94:	mov    DWORD PTR [edi],edx
  410e96:	inc    ebp
  410e97:	push   DWORD PTR [esi]
  410e99:	adc    DWORD PTR [ebx+0x575200],0x0
  410ea0:	aad    0x83
  410ea2:	add    ch,bh
  410ea4:	add    BYTE PTR [edx+0xee00a3],ch
  410eaa:	or     al,0x0
  410eac:	mov    al,ds:0xfeccff55
  410eb1:	add    DWORD PTR [eax],0x63
  410eb4:	int3   
  410eb5:	push   esi
  410eb6:	add    BYTE PTR ds:[ebp-0x5cff5f01],dh
  410ebd:	adc    al,0xff
  410ebf:	add    BYTE PTR [esi-0x780077],cl
  410ec5:	arpl   WORD PTR [edi+0x11ff8a00],di
  410ecb:	push   DWORD PTR [esi+0x6ffff22]
  410ed1:	or     DWORD PTR [ecx-0x3d5d0083],0xffffffff
  410ed8:	push   0x0
  410eda:	in     eax,0x0
  410edc:	enter  0xfe,0xff
  410ee0:	sar    bh,1
  410ee2:	add    BYTE PTR [eax-0xf0300],cl
  410ee8:	(bad)  
  410ee9:	adc    DWORD PTR ds:0xffd3bb00,0xffffffcc
  410ef0:	and    al,0xff
  410ef2:	add    BYTE PTR [ebx],ah
  410ef4:	inc    DWORD PTR ds:0xcc17cc63
  410efa:	xor    DWORD PTR [eax],eax
  410efc:	sbb    ebp,DWORD PTR [ebp-0xe4ff77]
  410f02:	int3   
  410f03:	icebp  
  410f04:	add    BYTE PTR [edi+eax*8-0x17cf601],al
  410f0b:	inc    edx
  410f0d:	mov    ebx,0xffa5ffff
  410f12:	int3   
  410f13:	scas   eax,DWORD PTR es:[edi]
  410f14:	inc    DWORD PTR [edi-0xc400b6]
  410f1a:	inc    ecx
  410f1b:	push   DWORD PTR [esi+esi*1-0x76e90000]
  410f22:	dec    DWORD PTR [ecx-0x1]
  410f25:	dec    esi
  410f26:	xchg   ecx,eax
  410f27:	xor    DWORD PTR [edi+edi*8],0x0
  410f2b:	(bad)  
  410f2c:	cmp    al,0x52
  410f2e:	(bad)  
  410f2f:	jmp    FWORD PTR [esi]
  410f31:	dec    esp
  410f33:	ja     0x410f35
  410f35:	mov    dl,0xc1
  410f37:	int3   
  410f38:	mov    WORD PTR [ecx-0x5aba33d0],cs
  410f3e:	(bad)  
  410f3f:	push   ecx
  410f41:	int3   
  410f42:	push   DWORD PTR ds:0xffefdb00
  410f48:	rol    DWORD PTR [eax],cl
  410f4a:	or     al,BYTE PTR [eax]
  410f4c:	dec    ecx
  410f4d:	mov    edi,0xcc8383
  410f52:	dec    DWORD PTR [ecx+0x0]
  410f55:	add    eax,0xb7ffaf
  410f5a:	or     BYTE PTR [ecx-0xffd840],cl
  410f60:	jns    0x410f2e
  410f62:	inc    DWORD PTR [edi]
  410f64:	push   ebx
  410f66:	in     eax,dx
  410f67:	inc    edi
  410f69:	jmp    FWORD PTR [edx-0xb6dd01]
  410f6f:	add    BYTE PTR [ebp-0x1],cl
  410f72:	add    al,bh
  410f74:	int3   
  410f75:	xchg   ecx,eax
  410f76:	jmp    0x410efb
  410f78:	fadd   DWORD PTR [eax]
  410f7a:	aaa    
  410f7b:	sub    DWORD PTR [edi],0xffffff94
  410f7e:	add    BYTE PTR [eax],al
  410f80:	or     bh,bh
  410f82:	add    BYTE PTR ds:0x89a37fff,bl
  410f88:	push   ebx
  410f89:	inc    DWORD PTR [eax-0x1]
  410f8c:	iret   
  410f8d:	fadd   DWORD PTR [ebx+0x8368ff]
  410f93:	out    dx,eax
  410f94:	jmp    FWORD PTR [esi-0xebff57]
  410f9a:	and    bh,bh
  410f9c:	lods   eax,DWORD PTR ds:[esi]
  410f9d:	lods   eax,DWORD PTR ds:[esi]
  410f9e:	add    bh,bh
  410fa0:	xchg   ebx,eax
  410fa1:	inc    DWORD PTR [eax]
  410fa3:	jp     0x410fa4
  410fa5:	loopne 0x410f5b
  410fa7:	add    BYTE PTR [ecx],ah
  410fa9:	add    BYTE PTR [ecx-0x7c2e5001],cl
  410faf:	int3   
  410fb0:	sbb    eax,0xff65ff89
  410fb5:	xchg   edi,eax
  410fb6:	mov    ebp,0x55004000
  410fbb:	xor    DWORD PTR [eax+0x4cffffbd],0x0
  410fc2:	add    BYTE PTR [edx],ch
  410fc4:	dec    DWORD PTR [ebx]
  410fc6:	aad    0xff
  410fc8:	(bad)  
  410fca:	popf   
  410fcb:	push   DWORD PTR [esi-0x5a]
  410fce:	dec    DWORD PTR [ecx-0x45ff7cc4]
  410fd4:	add    BYTE PTR [ecx+0x4500be],bh
  410fda:	fdiv   st(7),st
  410fdc:	adc    al,0x73
  410fde:	add    BYTE PTR [eax],al
  410fe0:	out    dx,eax
  410fe1:	int3   
  410fe2:	xor    DWORD PTR [ebp-0x76008201],0xffffffc5
  410fe9:	add    BYTE PTR [edx-0x1],cl
  410fec:	and    BYTE PTR [esi-0x331a3400],bl
  410ff2:	jmp    FWORD PTR [edi+edi*8+0x2f]
  410ff6:	aas    
  410ff7:	sub    DWORD PTR [ecx+ecx*4],0x1c
  410ffb:	add    BYTE PTR [ebp-0x68],bh
  410ffe:	dec    DWORD PTR [ecx+0x7c00ff61]
  411004:	int3   
  411005:	outs   dx,DWORD PTR ds:[esi]
  411006:	mov    DWORD PTR cs:[ebp-0x77],eax
  41100a:	int    0x0
  41100c:	cmp    edx,DWORD PTR [ebp-0x77]
  41100f:	dec    DWORD PTR [ebx-0x77ff34]
  411015:	loope  0x41102f
  411017:	add    eax,0xffffffcc
  41101a:	lock adc DWORD PTR [edx+0x66],0x0
  41101f:	call   ebx
  411021:	add    bh,bh
  411023:	mov    esp,0xa39b00
  411028:	xchg   esi,eax
  411029:	(bad)  
  41102a:	jmp    0x8aff:0xff30b589
  411031:	add    bh,bh
  411033:	xlat   BYTE PTR ds:[ebx]
  411034:	add    bh,bl
  411036:	or     edi,edi
  411038:	cdq    
  411039:	(bad)  
  41103a:	clc    
  41103b:	add    BYTE PTR [edi+0x89ff18],ah
  411041:	add    ah,cl
  411043:	mov    BYTE PTR [eax],al
  411045:	lds    ecx,FWORD PTR [eax-0x133327d]
  41104b:	inc    DWORD PTR [edi+0x4c]
  41104e:	dec    DWORD PTR [ecx-0x13000002]
  411054:	dec    eax
  411056:	jmp    0x4aff:0x89007700
  41105d:	pop    es
  41105e:	(bad)  
  41105f:	inc    DWORD PTR [edi-0x7c72007d]
  411065:	mov    bl,0x9e
  411067:	add    BYTE PTR [ecx+0x0],bh
  41106a:	scas   al,BYTE PTR es:[edi]
  41106b:	dec    DWORD PTR [edi+0x5fff009e]
  411071:	(bad)  
  411072:	push   DWORD PTR [edx-0x4e0f01]
  411078:	cmp    edi,0xffffffa4
  41107b:	int3   
  41107c:	push   0x22898364
  411081:	int3   
  411082:	jmp    DWORD PTR [ebp-0xeca97d]
  411088:	push   eax
  411089:	add    BYTE PTR [esi],ah
  41108b:	add    bl,cl
  41108d:	fisttp DWORD PTR [ecx+0x8983ff]
  411093:	cwde   
  411094:	add    BYTE PTR [edi+0xa9ff7e],ch
  41109a:	out    0x0,al
  41109c:	xor    DWORD PTR [edx+0xa7ffff],esp
  4110a2:	int3   
  4110a3:	push   ecx
  4110a4:	adc    DWORD PTR [ebp+0x26ff23],0xffffff9a
  4110ab:	jmp    FWORD PTR [eax+0x56cc0011]
  4110b1:	int3   
  4110b2:	dec    DWORD PTR [edi]
  4110b4:	call   DWORD PTR [ebx+0x2c]
  4110b7:	(bad)  
  4110b8:	fdivr  st,st(7)
  4110ba:	mov    ah,0xff
  4110bc:	mov    ebx,0x760000cc
  4110c1:	add    BYTE PTR [eax],al
  4110c3:	mov    bh,0xff
  4110c5:	ds mov eax,0x60837f00
  4110cb:	push   esp
  4110cd:	ret    0x0
  4110d0:	inc    BYTE PTR [eax]
  4110d2:	jmp    DWORD PTR [eax]
  4110d4:	inc    DWORD PTR [esi+0x67ffd2]
  4110da:	fild   DWORD PTR [eax]
  4110dc:	clc    
  4110dd:	or     eax,DWORD PTR [eax]
  4110df:	int3   
  4110e0:	ror    esp,0x0
  4110e3:	jae    0x411068
  4110e5:	mov    bl,0xc2
  4110e7:	xor    esp,0x0
  4110ea:	pop    ebx
  4110eb:	add    al,ch
  4110ed:	lods   al,BYTE PTR ds:[esi]
  4110ee:	(bad)  
  4110ef:	call   DWORD PTR [esi]
  4110f1:	inc    DWORD PTR [eax]
  4110f3:	xor    DWORD PTR [eax],eax
  4110f5:	gs jbe 0x4110f7
  4110f8:	mov    eax,ds:0xf7ff9eff
  4110fd:	outs   dx,DWORD PTR ds:[esi]
  4110fe:	add    BYTE PTR [ebx-0x2200005a],al
  411104:	add    BYTE PTR [edi+ecx*4+0x0],ch
  411108:	and    DWORD PTR [eax],eax
  41110a:	popf   
  41110b:	add    ch,al
  41110d:	ins    BYTE PTR es:[edi],dx
  41110e:	inc    DWORD PTR [eax]
  411110:	pop    es
  411111:	(bad)  
  411112:	jmp    FWORD PTR [esi-0x7c8d5c7d]
  411118:	sbb    eax,0x83003400
  41111d:	jg     0x41111e
  41111f:	add    BYTE PTR [edi+0x8b00ff],ah
  411125:	ja     0x4110fa
  411127:	mov    DWORD PTR [ecx],esp
  411129:	(bad)  
  41112a:	jmp    0x41112b
  41112c:	adc    ch,bl
  41112e:	inc    DWORD PTR [ebx+0x10ff832c]
  411134:	int3   
  411135:	push   ebx
  411136:	clc    
  411137:	(bad)  
  411138:	cmp    al,0xff
  41113a:	mov    al,ds:0x893f7e00
  41113f:	push   ecx
  411141:	add    BYTE PTR [eax],al
  411143:	push   esp
  411144:	call   FWORD PTR [edi+ebp*2+0x0]
  411148:	push   ds
  411149:	or     DWORD PTR ds:0x2a7683,0xffffffff
  411150:	mov    edx,0x6affff
  411155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411156:	xchg   ecx,eax
  411157:	jmp    DWORD PTR [ebp+0x34cc53ff]
  41115d:	sar    bh,1
  41115f:	call   DWORD PTR [edx-0xad0000]
  411165:	cs popa 
  411167:	(bad)  
  411168:	cmp    cl,ah
  41116a:	mov    ds:0x8351c883,al
  41116f:	dec    eax
  411171:	mov    edi,edi
  411173:	(bad)  
  411175:	fimul  WORD PTR [edi+edi*8+0x58]
  411179:	add    BYTE PTR [eax],bl
  41117b:	int3   
  41117c:	mov    ah,0xce
  41117e:	add    bh,bh
  411180:	push   ecx
  411181:	int3   
  411182:	(bad)  
  411183:	jle    0x41110e
  411185:	bound  esi,QWORD PTR [edi+edi*8]
  411188:	cmp    bh,bh
  41118a:	mov    dl,0xff
  41118c:	not    bl
  41118e:	(bad)  
  41118f:	inc    DWORD PTR [ebp-0x34]
  411192:	dec    DWORD PTR [edi+edi*8]
  411195:	shl    BYTE PTR [eax+0x7d005e83],0x83
  41119c:	xor    eax,0x19ffff41
  4111a1:	add    BYTE PTR [eax],al
  4111a3:	sub    eax,0xbc8dff
  4111a8:	jne    0x411133
  4111aa:	nop
  4111ab:	add    ch,bh
  4111ad:	sbb    al,0x83
  4111af:	int3   
  4111b0:	fwait
  4111b1:	(bad)  
  4111b2:	push   DWORD PTR [edx-0x767b2501]
  4111b8:	pop    ds
  4111b9:	inc    DWORD PTR [ecx+0x827800]
  4111bf:	dec    DWORD PTR [ebp-0x7d]
  4111c2:	mov    DWORD PTR [ebx],ecx
  4111c4:	add    BYTE PTR [edx+ecx*4],dh
  4111c7:	add    BYTE PTR ds:0x50ffbbff,bl
  4111cd:	repnz int3 
  4111cf:	int3   
  4111d0:	adc    DWORD PTR [eax],eax
  4111d2:	add    BYTE PTR [ebx],bl
  4111d4:	(bad)  
  4111d5:	mov    edi,0xcce40000
  4111da:	mov    edi,?
  4111dc:	sbb    eax,0x5989001b
  4111e1:	dec    esp
  4111e3:	jecxz  0x4111e5
  4111e5:	loope  0x411258
  4111e7:	int3   
  4111e8:	or     bh,bh
  4111ea:	test   eax,0x91f300
  4111ef:	jmp    esi
  4111f1:	inc    DWORD PTR [ebx-0x7f807cf0]
  4111f7:	add    bh,bh
  4111f9:	add    BYTE PTR [esi],al
  4111fb:	(bad)  
  4111fc:	(bad)  
  4111fd:	mov    eax,ds:0xccbfffff
  411202:	push   eax
  411204:	add    BYTE PTR [esi-0x21],cl
  411207:	push   DWORD PTR [ecx]
  411209:	(bad)  
  41120a:	cld    
  41120b:	push   DWORD PTR [ebx-0x1cff7c79]
  411211:	add    BYTE PTR [ebx+0x26a083e2],al
  411217:	add    BYTE PTR [edi],dh
  411219:	call   FWORD PTR [ecx-0x7d]
  41121c:	or     dh,BYTE PTR [eax+0x7700ff]
  411222:	inc    DWORD PTR ds:0xff7b97ff
  411228:	mov    bh,0x0
  41122a:	mov    al,0x0
  41122c:	adc    eax,0x4600ffff
  411231:	mov    DWORD PTR [eax],eax
  411233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411234:	add    BYTE PTR [ebx],dl
  411236:	or     eax,0x3800c0ff
  41123b:	add    BYTE PTR [ecx+0x7700ff17],dl
  411241:	cmp    edi,0xfffffffc
  411244:	int3   
  411245:	pop    ds
  411246:	mov    cl,0xff
  411248:	lods   eax,DWORD PTR ds:[esi]
  411249:	inc    DWORD PTR [edx]
  41124b:	dec    DWORD PTR [edx]
  41124d:	mov    dl,0xff
  41124f:	add    cl,ah
  411251:	int3   
  411252:	add    al,dl
  411254:	mov    DWORD PTR [eax],eax
  411256:	cmp    bh,bh
  411258:	int3   
  411259:	fadd   QWORD PTR [esi+0x33d3ff00]
  41125f:	sbb    eax,DWORD PTR [ebp-0xc1007d]
  411265:	inc    DWORD PTR [ecx+0xc14ccff]
  41126b:	(bad)  
  41126c:	dec    DWORD PTR [eax+0x4b]
  41126f:	out    0xc6,al
  411271:	(bad)  
  411272:	dec    DWORD PTR [edx+0x0]
  411275:	add    BYTE PTR [edx+0x7d6dff89],ah
  41127b:	inc    DWORD PTR [ebx+0x7adf6e3]
  411281:	(bad)  
  411282:	(bad)  
  411283:	fcos   
  411285:	dec    DWORD PTR [ecx]
  411287:	dec    esp
  411289:	lock fwait
  41128b:	add    ah,cl
  41128d:	mov    ah,0xa6
  41128f:	and    BYTE PTR [ebx-0x77],bl
  411292:	int3   
  411293:	addr16 (bad) 
  411295:	jmp    FWORD PTR [edx]
  411297:	int3   
  411298:	push   DWORD PTR [edx+0x1c]
  41129b:	add    bh,bh
  41129d:	mov    eax,0xe8f967
  4112a2:	add    ah,bl
  4112a4:	add    DWORD PTR [ebx-0x3b00ff51],0xffffffaf
  4112ab:	add    bh,bh
  4112ad:	inc    esi
  4112ae:	pop    ebx
  4112af:	xchg   BYTE PTR [ebx+0xd58900],dh
  4112b5:	push   DWORD PTR [edx+0x1c6effcc]
  4112bb:	(bad)  
  4112bc:	push   DWORD PTR [esi-0x8]
  4112bf:	mov    al,0x9b
  4112c1:	(bad)  
  4112c2:	call   DWORD PTR [edx]
  4112c4:	inc    DWORD PTR [eax]
  4112c6:	cmp    al,0xff
  4112c8:	add    BYTE PTR [esi-0x3b],ch
  4112cb:	int3   
  4112cc:	sbb    esi,0xffffff9b
  4112cf:	retf   0xe8
  4112d2:	sub    DWORD PTR [eax-0xfb0000],0x0
  4112d9:	mov    ecx,DWORD PTR [edi-0x1]
  4112dc:	mov    DWORD PTR [ecx+0x64],esi
  4112df:	pusha  
  4112e0:	idiv   bh
  4112e2:	dec    DWORD PTR [ebx-0x7d]
  4112e5:	(bad)  
  4112e6:	fiadd  WORD PTR [ebx-0xc4600]
  4112ec:	add    BYTE PTR [esi-0xe29c2b],bl
  4112f2:	jmp    DWORD PTR [ecx]
  4112f4:	add    bh,bh
  4112f6:	sub    edi,edi
  4112f8:	add    BYTE PTR [ebp*2-0x565fff01],bh
  4112ff:	adc    DWORD PTR [eax],esp
  411301:	add    bh,bh
  411303:	ins    BYTE PTR es:[edi],dx
  411304:	or     esp,0xffffff82
  411307:	mov    edi,edi
  411309:	cdq    
  41130a:	sbb    eax,0xa30000ff
  41130f:	les    edx,FWORD PTR [ebx]
  411311:	add    BYTE PTR [ebx+0x68ffffe3],al
  411317:	add    BYTE PTR [eax],al
  411319:	xchg   edx,eax
  41131a:	jmp    0x133131e
  41131f:	call   0x89ff:0x89ffff90
  411326:	in     al,0x83
  411328:	add    BYTE PTR [eax+0x69],cl
  41132b:	add    BYTE PTR [eax],al
  41132d:	xchg   esp,eax
  41132e:	cmp    eax,0xff00cccb
  411333:	out    0x0,eax
  411335:	add    BYTE PTR [ebp-0x724f7c34],dl
  41133b:	dec    DWORD PTR [ecx-0x346bacb7]
  411341:	add    bh,bh
  411343:	je     0x411345
  411345:	int3   
  411346:	inc    esi
  411347:	int3   
  411348:	call   FWORD PTR [eax]
  41134a:	pushf  
  41134b:	inc    DWORD PTR [ebx-0x2bd8bda2]
  411351:	mov    DWORD PTR [eax],eax
  411353:	sahf   
  411354:	dec    DWORD PTR [ecx-0x39ff00f9]
  41135a:	xchg   esp,eax
  41135b:	int3   
  41135c:	mov    DWORD PTR [esi-0x76405d61],ebp
  411362:	add    BYTE PTR [ecx+ecx*4],dl
  411365:	call   DWORD PTR [edx-0x34]
  411368:	add    BYTE PTR [edx+0x2f],bh
  41136b:	inc    DWORD PTR [ebx-0x5f15bff4]
  411371:	int3   
  411372:	and    DWORD PTR [ebx],0x0
  411375:	call   FWORD PTR [edx+0x3f94ff00]
  41137b:	add    BYTE PTR [eax],al
  41137d:	xchg   ebx,eax
  41137e:	adc    DWORD PTR [ecx],edi
  411380:	and    edi,edi
  411382:	mov    DWORD PTR [esi-0x1],ebp
  411385:	call   FWORD PTR [edi]
  411387:	add    bh,bh
  411389:	dec    ebx
  41138a:	stos   BYTE PTR es:[edi],al
  41138b:	add    bh,bh
  41138d:	(bad)  [eax]
  41138f:	cmc    
  411390:	in     al,dx
  411391:	inc    DWORD PTR [eax]
  411393:	cmc    
  411394:	dec    DWORD PTR [ecx-0x4233ffb8]
  41139a:	pop    ss
  41139b:	add    BYTE PTR [ebx+0x1abfd2d4],al
  4113a1:	int3   
  4113a2:	(bad)  
  4113a3:	aas    
  4113a4:	dec    DWORD PTR [ecx+0x79ffff95]
  4113aa:	out    dx,al
  4113ab:	inc    DWORD PTR [eax]
  4113ad:	cli    
  4113ae:	inc    ebx
  4113af:	je     0x411375
  4113b1:	add    bh,bh
  4113b3:	sub    bh,bh
  4113b5:	(bad)  
  4113b6:	out    dx,eax
  4113b7:	cmp    edi,0xffffffcc
  4113ba:	xchg   ecx,eax
  4113bb:	add    DWORD PTR [eax],0x4e
  4113be:	push   edx
  4113bf:	pop    ds
  4113c0:	dec    esp
  4113c1:	add    bh,bh
  4113c3:	cwde   
  4113c4:	add    bh,bh
  4113c6:	mov    ecx,0x5e13ffff
  4113cb:	(bad)  
  4113cc:	jmp    DWORD PTR [esi+0xe]
  4113cf:	mov    edx,0x82ccfffc
  4113d4:	or     DWORD PTR [ecx-0x370033f0],0x7b
  4113db:	cmp    edi,0xffffffd7
  4113de:	imul   esp,DWORD PTR [edx],0xffffff85
  4113e1:	add    BYTE PTR [eax],al
  4113e3:	push   es
  4113e4:	mov    edi,edi
  4113e6:	leave  
  4113e7:	mov    DWORD PTR [eax],eax
  4113e9:	and    dh,BYTE PTR [ebx]
  4113eb:	add    bh,bh
  4113ed:	jmp    0x411428
  4113ef:	call   0xffff:0xd0000f5
  4113f6:	xor    eax,0x29d1cc00
  4113fb:	cmp    edi,0x1c
  4113fe:	pop    ds
  4113ff:	stos   DWORD PTR es:[edi],eax
  411400:	test   eax,0x4dff00
  411405:	int3   
  411406:	sbb    cl,ah
  411408:	dec    ecx
  41140a:	hlt    
  41140b:	(bad)  
  41140c:	jmp    DWORD PTR [edx]
  41140e:	jecxz  0x411397
  411410:	cmp    eax,0xe2ffff
  411415:	add    BYTE PTR ds:0x7da40000,dh
  41141b:	inc    DWORD PTR [eax]
  41141d:	jl     0x4113cb
  41141f:	jnp    0x41146a
  411421:	cmp    edi,0xffffff9d
  411424:	add    BYTE PTR [eax],al
  411426:	jns    0x411428
  411428:	call   FWORD PTR [ecx+eax*1+0x213bffff]
  41142f:	mov    ecx,DWORD PTR [esi+0x0]
  411432:	add    BYTE PTR [eax+eax*1+0xccb6cc],al
  411439:	addr16 in al,dx
  41143b:	add    DWORD PTR [ebx-0x3083f430],0x0
  411442:	add    BYTE PTR [edi-0x1],dh
  411445:	call   ebx
  411447:	inc    DWORD PTR [eax]
  411449:	xor    eax,0x74ff0020
  41144e:	rep lods eax,DWORD PTR ds:[esi]
  411450:	lods   al,BYTE PTR ds:[esi]
  411451:	(bad)  
  411452:	dec    DWORD PTR [edx-0xa77d00]
  411458:	push   esp
  41145a:	dec    ecx
  41145b:	add    BYTE PTR [eax],al
  41145d:	sti    
  41145e:	jae    0x4114dc
  411460:	add    BYTE PTR fs:[eax],al
  411463:	leave  
  411464:	inc    DWORD PTR [eax]
  411466:	and    edi,edi
  411468:	dec    DWORD PTR [eax-0xc7c7c45]
  41146e:	data16 sub ch,BYTE PTR [edi-0x910000]
  411475:	add    dl,ah
  411477:	inc    DWORD PTR [eax]
  411479:	inc    eax
  41147a:	ins    DWORD PTR es:[edi],dx
  41147b:	add    BYTE PTR [ecx-0x7458f17b],cl
  411481:	(bad)  
  411482:	jmp    FWORD PTR [esi]
  411484:	inc    DWORD PTR [ebx+0x42ff8365]
  41148a:	mov    dh,0xcc
  41148c:	jmp    DWORD PTR [edx-0x68]
  41148f:	setnp  bh
  411492:	add    BYTE PTR [ecx+ecx*4],bh
  411495:	call   FWORD PTR [ebp-0x62390000]
  41149b:	inc    DWORD PTR [eax]
  41149d:	jmp    0x83fc4aa1
  4114a2:	cmp    DWORD PTR [edx],0x0
  4114a5:	(bad)  
  4114a6:	fdivr  st,st(7)
  4114a8:	jmp    DWORD PTR [ecx]
  4114aa:	jbe    0x4114ac
  4114ac:	push   DWORD PTR [eax+0x74]
  4114af:	jne    0x4114a0
  4114b1:	dec    esp
  4114b3:	xchg   edi,edi
  4114b5:	call   FWORD PTR [eax+eax*1]
  4114b8:	add    BYTE PTR [edx],ch
  4114ba:	aas    
  4114bb:	(bad)  
  4114bc:	jmp    DWORD PTR [esi-0x332a2097]
  4114c2:	sub    DWORD PTR [ebx-0x7d],0xffffffff
  4114c6:	fisttp WORD PTR [ecx-0xec8f01]
  4114cc:	jmp    FWORD PTR [ebp-0x5]
  4114cf:	in     al,dx
  4114d0:	jne    0x4114d2
  4114d2:	int3   
  4114d3:	les    eax,FWORD PTR [eax]
  4114d5:	push   DWORD PTR [ecx-0x34]
  4114d8:	jmp    FWORD PTR [edi+0x7f]
  4114db:	mov    edi,edi
  4114dd:	xchg   edi,eax
  4114de:	xchg   ebx,eax
  4114df:	jl     0x411524
  4114e1:	(bad)  
  4114e2:	(bad)  
  4114e3:	mov    edi,0xcc84ffff
  4114e8:	push   DWORD PTR [eax-0x6d]
  4114eb:	inc    DWORD PTR [ebx-0x58d0807c]
  4114f1:	add    BYTE PTR [ebx+0x8ffff2d],al
  4114f7:	add    BYTE PTR [eax],al
  4114f9:	(bad)  
  4114fa:	mov    eax,ds:0x8eaf00ff
  4114ff:	aam    0x16
  411501:	mov    DWORD PTR [eax],eax
  411503:	add    BYTE PTR [ebx-0x7b34],al
  411509:	popf   
  41150a:	mov    al,ds:0xa32b89ff
  41150f:	add    eax,0xb000ff58
  411514:	add    bh,bh
  411516:	in     al,0x83
  411518:	mov    eax,esi
  41151a:	fiadd  WORD PTR [eax]
  41151c:	add    BYTE PTR [edi],al
  41151e:	pop    edi
  41151f:	jo     0x41152d
  411521:	(bad)  
  411522:	(bad)  
  411523:	cmp    esp,ecx
  411525:	int3   
  411526:	std    
  411527:	add    BYTE PTR [eax],al
  411529:	mov    esp,DWORD PTR [ebx-0x1]
  41152c:	add    BYTE PTR [edx+0x3a],ch
  41152f:	mov    eax,ds:0xe4ffccbf
  411534:	add    BYTE PTR [ecx-0x63300d3],cl
  41153a:	push   ds
  41153b:	add    ah,cl
  41153d:	(bad)  
  41153e:	ficom  WORD PTR [edx+0x3b]
  411541:	inc    DWORD PTR [eax]
  411543:	bound  eax,QWORD PTR [eax]
  411545:	(bad)  
  411546:	fcos   
  411548:	and    DWORD PTR [esi+0x140083c7],0x59
  41154f:	dec    ecx
  411550:	fiadd  DWORD PTR [eax]
  411552:	jmp    DWORD PTR [ebp-0x1]
  411555:	call   FWORD PTR [eax+0x3d30ffcc]
  41155b:	add    bh,bh
  41155d:	sahf   
  41155e:	pop    edx
  41155f:	mov    ah,0x8b
  411561:	(bad)  
  411562:	inc    ebp
  411564:	add    DWORD PTR [eax],0x3b
  411567:	add    BYTE PTR [ebx+0x830c06],al
  41156d:	sbb    dh,dh
  41156f:	repnz xlat BYTE PTR ds:[ebx]
  411571:	inc    DWORD PTR [ebx+0x1700ffc6]
  411577:	add    bh,bh
  411579:	mov    DWORD PTR [edx-0x1],edi
  41157c:	call   FWORD PTR ds:0xd15f02
  411582:	add    BYTE PTR [edx-0x1],ah
  411585:	add    BYTE PTR [eax-0x77],dl
  411588:	add    BYTE PTR [eax],dh
  41158a:	bound  eax,QWORD PTR [eax]
  41158c:	(bad)  
  41158d:	stc    
  41158e:	jg     0x411553
  411590:	push   es
  411591:	add    BYTE PTR [eax],al
  411593:	mov    ah,0xff
  411595:	add    ah,bh
  411597:	cmp    edi,0x5
  41159a:	fmul   st(4),st
  41159c:	call   FWORD PTR [ecx]
  41159e:	inc    ebp
  41159f:	and    DWORD PTR [edx-0xe00001],eax
  4115a5:	add    BYTE PTR [edx+0x762affcc],al
  4115ab:	inc    DWORD PTR [eax]
  4115ad:	mov    esi,0xccbfb357
  4115b2:	jmp    FWORD PTR [esi]
  4115b4:	int3   
  4115b5:	int3   
  4115b6:	fiadd  WORD PTR [ebx-0x7cae6701]
  4115bc:	(bad)  
  4115bd:	jmp    0xcc832f87
  4115c2:	call   FWORD PTR [edi-0x400000]
  4115c8:	mov    DWORD PTR [ecx+0x37],esp
  4115cb:	cmp    edi,0xffffffd2
  4115ce:	add    ebx,edx
  4115d0:	jo     0x4115d2
  4115d2:	adc    DWORD PTR [edi-0x1],0xffffffff
  4115d6:	inc    esp
  4115d7:	(bad)  
  4115d8:	jmp    DWORD PTR ds:0x8bffff70
  4115de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115df:	ins    DWORD PTR es:[edi],dx
  4115e0:	push   ebx
  4115e1:	mov    edi,edi
  4115e3:	outs   dx,BYTE PTR ds:[esi]
  4115e4:	(bad)  
  4115e5:	(bad)  
  4115e6:	jns    0x4115e7
  4115e8:	(bad)  
  4115e9:	out    dx,eax
  4115ea:	stos   DWORD PTR es:[edi],eax
  4115eb:	dec    esp
  4115ed:	xchg   edx,eax
  4115ee:	add    BYTE PTR [edi+ebp*8],bl
  4115f1:	(bad)  
  4115f2:	push   DWORD PTR [ecx]
  4115f4:	inc    DWORD PTR [eax]
  4115f6:	cmp    eax,0xdebe00ff
  4115fb:	int3   
  4115fc:	add    BYTE PTR [eax+0xe318b5],bh
  411602:	(bad)  
  411603:	mov    edx,0x700ff
  411608:	push   ebx
  41160a:	cld    
  41160b:	(bad)  
  41160c:	jmp    FWORD PTR [ebx-0xaa1612]
  411612:	push   esp
  411614:	add    bh,bh
  411616:	jl     0x411617
  411618:	call   FWORD PTR [eax-0x5]
  41161b:	add    DWORD PTR [eax],0x64
  41161e:	inc    ebx
  41161f:	xchg   ebp,eax
  411620:	mov    ch,0x0
  411622:	call   ecx
  411624:	(bad)  
  411625:	jmp    DWORD PTR [edx-0x60d17c77]
  41162b:	add    ah,cl
  41162d:	scas   eax,DWORD PTR es:[edi]
  41162e:	adc    al,0x51
  411630:	enter  0xff83,0x2a
  411634:	inc    DWORD PTR [eax]
  411636:	into   
  411637:	dec    esp
  411639:	out    0x65,eax
  41163b:	add    bh,bh
  41163d:	sub    eax,0xb056d6
  411642:	add    dl,cl
  411644:	(bad)  
  411645:	push   edi
  411647:	add    bh,bh
  411649:	pop    edx
  41164a:	push   esp
  41164b:	(bad)  
  41164c:	call   DWORD PTR [ebp-0x7c9b444b]
  411652:	add    BYTE PTR [esi+0x3383cc],ah
  411658:	add    bh,dh
  41165a:	inc    DWORD PTR gs:[eax]
  41165d:	mov    DWORD PTR [ecx+0xff068a],esp
  411663:	iret   
  411664:	add    DWORD PTR [ebx-0x63ff7cd0],0x3e
  41166b:	dec    esp
  41166d:	sbb    ecx,DWORD PTR [ecx+0x20b1]
  411673:	and    al,0xcc
  411675:	mov    DWORD PTR [ecx-0x7d],eax
  411678:	push   DWORD PTR [edi+0x6f]
  41167b:	dec    DWORD PTR [ecx+0x5a99562]
  411681:	inc    DWORD PTR [eax]
  411683:	or     bh,bh
  411685:	jmp    ebp
  411687:	cmp    edi,0xffffffc4
  41168a:	dec    esp
  41168b:	(bad)  
  41168c:	jmp    DWORD PTR [esi-0x6c84b9]
  411692:	mov    DWORD PTR [edx],esp
  411694:	add    BYTE PTR [ebx-0x49003360],al
  41169a:	mov    esi,0x7011ccff
  41169f:	hlt    
  4116a0:	pop    edx
  4116a1:	inc    DWORD PTR [eax]
  4116a3:	and    DWORD PTR [ecx+0xffe3ff],ecx
  4116a9:	or     ah,BYTE PTR [edx]
  4116ab:	int3   
  4116ac:	push   esi
  4116ae:	lds    ebp,FWORD PTR ss:[esi-0x7cc2007d]
  4116b5:	add    BYTE PTR [ebp-0x34],al
  4116b8:	add    BYTE PTR [ebx-0x20000da],cl
  4116be:	shl    DWORD PTR [ebp+0x46],0x0
  4116c2:	add    al,ch
  4116c4:	inc    DWORD PTR [eax]
  4116c6:	mov    ds:0x609dff83,eax
  4116cb:	inc    DWORD PTR [eax]
  4116cd:	sub    ecx,DWORD PTR es:[edi+0xb00ff13]
  4116d4:	add    BYTE PTR [eax],al
  4116d6:	pop    esp
  4116d7:	add    BYTE PTR [eax],al
  4116d9:	dec    ecx
  4116da:	ret    
  4116db:	int3   
  4116dc:	jmp    FWORD PTR [ecx-0xc4a5fd]
  4116e2:	call   FWORD PTR ds:0x8989ff00
  4116e8:	int3   
  4116e9:	mov    ecx,0x38ffffdf
  4116ee:	inc    ebx
  4116ef:	dec    esi
  4116f0:	sbb    edi,edi
  4116f2:	jmp    DWORD PTR [esi-0xa40100]
  4116f8:	or     DWORD PTR [esi+ebp*8+0x0],0xffffff83
  4116fd:	inc    esi
  4116fe:	mov    DWORD PTR [ebp-0x4b33fff4],edi
  411704:	inc    DWORD PTR [eax]
  411706:	data16 (bad) 
  411708:	dec    esp
  41170a:	int3   
  41170b:	inc    DWORD PTR [eax]
  41170d:	xor    BYTE PTR [ecx-0x9],al
  411710:	mov    ds:0xff0289ff,al
  411715:	or     DWORD PTR [edx+0x0],0xffffffff
  411719:	bound  ebx,QWORD PTR [eax+eax*1-0xb37e701]
  411720:	or     al,0xff
  411722:	mov    DWORD PTR [edi+edi*8-0x33006000],eax
  411729:	inc    ebp
  41172a:	sub    ecx,esp
  41172c:	add    BYTE PTR [esi],bh
  41172e:	add    al,0xc2
  411730:	cmp    esp,ecx
  411732:	mov    DWORD PTR [ebx],edx
  411734:	(bad)  
  411735:	call   FWORD PTR [ebx+eax*4]
  411738:	add    BYTE PTR [esi+edi*1-0x77],dl
  41173c:	jmp    FWORD PTR [edi-0x68]
  41173f:	call   0xccff:0x2dff0033
  411746:	inc    DWORD PTR [eax]
  411748:	mov    DWORD PTR [edi],esp
  41174a:	(bad)  
  41174b:	dec    esp
  41174d:	jecxz  0x4116e7
  41174f:	pusha  
  411750:	stos   DWORD PTR es:[edi],eax
  411751:	dec    esp
  411753:	das    
  411754:	add    BYTE PTR [eax],al
  411756:	rol    DWORD PTR [eax],cl
  411758:	int3   
  411759:	test   eax,0x61ff89de
  41175e:	xor    BYTE PTR [esi-0x3600ff96],ah
  411764:	add    bh,bh
  411766:	das    
  411767:	add    BYTE PTR [eax],al
  411769:	popf   
  41176a:	fiadd  WORD PTR [ebx-0x2887e901]
  411770:	add    esp,ecx
  411772:	call   esp
  411774:	(bad)  
  411775:	(bad)  
  411776:	cmp    DWORD PTR [ecx-0x29e300],ecx
  41177c:	add    BYTE PTR [ebx+0x47],dl
  41177f:	dec    esi
  411780:	jmp    0xea00:0x4483ff
  411787:	(bad)  
  411788:	dec    DWORD PTR [ecx]
  41178a:	fmul   DWORD PTR [ecx-0x98e587d]
  411790:	lea    eax,[eax]
  411792:	add    BYTE PTR [edi+0x720000],ah
  411798:	add    BYTE PTR [esi+0x3eff833f],ah
  41179e:	ficomp DWORD PTR [edi]
  4117a0:	jne    0x4117a1
  4117a2:	dec    DWORD PTR [ecx+0x69ffcc]
  4117a8:	call   DWORD PTR [eax-0x75]
  4117ab:	or     esp,0xffffffc4
  4117ae:	mov    dh,0xd2
  4117b0:	sub    al,0x0
  4117b2:	inc    DWORD PTR [ebp-0x1]
  4117b5:	jmp    FWORD PTR [edi-0x73097601]
  4117bb:	cmp    edi,0x6
  4117be:	je     0x4117a7
  4117c0:	daa    
  4117c1:	or     esp,0xffffffd3
  4117c4:	dec    DWORD PTR [ecx+0x3ff89e3]
  4117ca:	mov    al,BYTE PTR [ebx+0x77947d00]
  4117d0:	pushf  
  4117d1:	(bad)  
  4117d2:	jmp    DWORD PTR [ebx]
  4117d4:	add    BYTE PTR [eax],al
  4117d6:	xchg   edx,eax
  4117d7:	add    bh,bh
  4117d9:	dec    esi
  4117da:	and    edi,edi
  4117dc:	add    BYTE PTR [edx-0x5bf22b],al
  4117e2:	mov    DWORD PTR [edi+0x0],esi
  4117e5:	jmp    FWORD PTR [ebx]
  4117e7:	mov    DWORD PTR [eax],eax
  4117e9:	sub    eax,0xafcc837e
  4117ee:	push   ss
  4117ef:	les    edx,FWORD PTR [edx]
  4117f1:	or     esp,0x6
  4117f4:	(bad)  
  4117f5:	dec    DWORD PTR [esi]
  4117f7:	add    BYTE PTR [eax],al
  4117f9:	fs xchg edi,eax
  4117fb:	(bad)  
  4117fc:	(bad)  
  4117fd:	fisub  DWORD PTR [eax]
  4117ff:	mov    edi,0x5c83cc94
  411804:	add    BYTE PTR [eax],al
  411806:	loope  0x411808
  411808:	call   DWORD PTR [eax]
  41180a:	dec    edi
  41180b:	int3   
  41180c:	add    dl,ah
  41180e:	pop    edx
  41180f:	and    al,0xd9
  411811:	add    ah,cl
  411813:	cmp    al,0xff
  411815:	(bad)  
  411816:	mov    eax,0x5bbaffff
  41181b:	inc    DWORD PTR [eax]
  41181d:	dec    ebp
  41181e:	shl    BYTE PTR ds:0x8700ff9d,0x0
  411825:	xor    DWORD PTR [esi-0x1],0xffffffff
  411829:	js     0x41187f
  41182b:	dec    esp
  41182d:	adc    al,0x8c
  41182f:	rol    BYTE PTR gs:[ebx+0x839889],cl
  411836:	inc    edx
  411837:	(bad)  
  411838:	(bad)  
  411839:	fld    DWORD PTR [ebx-0x7d]
  41183c:	add    BYTE PTR [ebp-0x375f8e],cl
  411842:	jmp    DWORD PTR ds:0x2bff00
  411848:	jmp    DWORD PTR [esp+ebp*2-0x34]
  41184c:	call   FWORD PTR [esi-0x66830d]
  411852:	add    bh,al
  411854:	add    BYTE PTR [eax],al
  411856:	mov    ebp,0x2b21ffcc
  41185b:	(bad)  
  41185c:	jmp    ecx
  41185e:	mov    dh,0x24
  411860:	inc    ebp
  411861:	mov    DWORD PTR [eax],eax
  411863:	in     al,dx
  411864:	dec    esp
  411866:	repz inc DWORD PTR [ebx-0x7cac]
  41186d:	pop    edx
  41186e:	pop    esp
  41186f:	cmp    DWORD PTR [ecx-0x7d],0x0
  411873:	dec    ebx
  411874:	add    bh,bh
  411876:	mov    BYTE PTR [eax],al
  411878:	int3   
  411879:	out    0x8d,eax
  41187b:	dec    DWORD PTR [ecx+0x1b8a1da5]
  411881:	(bad)  
  411882:	jmp    FWORD PTR [ecx+0x0]
  411885:	call   DWORD PTR [edx-0x1]
  411888:	jmp    FWORD PTR [esi+0x40]
  41188b:	add    BYTE PTR [eax],al
  41188d:	data16 xchg BYTE PTR [ebx-0x640000e0],cl
  411894:	inc    DWORD PTR [ebx+0x2300cc2f]
  41189a:	mov    dl,0x83
  41189c:	push   DWORD PTR [esi+0x45]
  41189f:	jge    0x411873
  4118a1:	add    BYTE PTR [eax],al
  4118a3:	push   esi
  4118a4:	(bad)  
  4118a5:	jmp    esp
  4118a7:	inc    DWORD PTR [eax]
  4118a9:	sbb    BYTE PTR [eax+eax*1+0x0],bh
  4118ad:	mul    DWORD PTR [ebp+0x25]
  4118b0:	mov    bh,0x0
  4118b2:	dec    DWORD PTR [ebx+eax*4]
  4118b5:	int3   
  4118b6:	jae    0x411884
  4118b8:	inc    DWORD PTR [ebx+0x42]
  4118bb:	(bad)  
  4118bc:	inc    DWORD PTR [ebx+0x6e]
  4118bf:	shl    dl,0xff
  4118c2:	call   FWORD PTR [esi]
  4118c4:	(bad)  
  4118c5:	jmp    FWORD PTR [edi]
  4118c7:	add    DWORD PTR [eax],0x7d
  4118ca:	pop    ss
  4118cb:	int3   
  4118cc:	add    bh,ch
  4118ce:	imul   ebp,DWORD PTR [edi],0x4100ffb9
  4118d4:	add    BYTE PTR [ebx+0x59000031],al
  4118da:	jae    0x4118db
  4118dc:	and    DWORD PTR [eax+ebp*4+0x78],0xe
  4118e1:	(bad)  
  4118e2:	inc    eax
  4118e4:	inc    DWORD PTR [ebx-0x49ff0032]
  4118ea:	dec    eax
  4118eb:	int3   
  4118ec:	or     ebx,0xffffffc7
  4118ef:	stc    
  4118f0:	and    bh,bh
  4118f2:	adc    DWORD PTR [ebx],0xffffff83
  4118f5:	add    BYTE PTR [edi+edi*8],dh
  4118f8:	add    BYTE PTR [eax],bh
  4118fa:	sar    bh,1
  4118fc:	call   DWORD PTR [edx+0x49]
  4118ff:	add    ecx,DWORD PTR [edi-0x33db0000]
  411905:	and    edx,0x0
  411908:	sbb    DWORD PTR [ecx+0x5100ff14],0xffffff85
  41190f:	add    al,BYTE PTR fs:[eax]
  411912:	sub    DWORD PTR [eax],0x0
  411915:	add    BYTE PTR [ecx-0x8e57677],al
  41191b:	inc    DWORD PTR [ebx-0x24816cb]
  411921:	(bad)  
  411922:	inc    DWORD PTR [ebx-0x7c2a0100]
  411928:	add    BYTE PTR [edx],al
  41192a:	leave  
  41192b:	add    ah,cl
  41192d:	adc    esp,edx
  41192f:	leave  
  411930:	sub    eax,DWORD PTR [eax]
  411932:	add    BYTE PTR [ebp-0xeff01],dh
  411938:	mov    DWORD PTR [edx+0x69],edi
  41193b:	add    BYTE PTR [ebx+0x45a376ef],al
  411941:	mov    DWORD PTR [eax],eax
  411943:	jo     0x4118ce
  411945:	mov    DWORD PTR [edi+edi*8-0x785900],edx
  41194c:	add    BYTE PTR [edx],cl
  41194e:	les    ebp,FWORD PTR [ecx-0x7bff002c]
  411954:	inc    DWORD PTR [eax]
  411956:	adc    al,0x83
  411958:	add    dh,bh
  41195a:	cmp    BYTE PTR [eax],al
  41195c:	(bad)  
  41195d:	inc    DWORD PTR [ebp+0xa6d5]
  411963:	stc    
  411964:	dec    esp
  411966:	mov    ?,edi
  411968:	int3   
  411969:	pusha  
  41196a:	jmp    0x7431:0x321900ff
  411971:	dec    esp
  411973:	sti    
  411974:	add    BYTE PTR [eax],al
  411976:	push   ss
  411977:	add    bh,bh
  411979:	fbstp  TBYTE PTR [edx-0x1]
  41197c:	add    bh,ch
  41197e:	pop    edi
  41197f:	dec    edx
  411980:	add    DWORD PTR [ecx-0x7c009001],ecx
  411986:	idiv   edi
  411988:	mov    eax,ebp
  41198a:	and    al,BYTE PTR [eax]
  41198c:	jmp    DWORD PTR [esi]
  41198e:	fcmovnu st,st(1)
  411990:	sbb    al,0x0
  411992:	int3   
  411993:	xlat   BYTE PTR ds:[ebx]
  411994:	inc    DWORD PTR [eax]
  411996:	add    bh,bh
  411998:	(bad)  
  411999:	cmp    DWORD PTR [ebx+0x2692cc00],edx
  41199f:	xchg   DWORD PTR [ecx-0x1],edx
  4119a2:	jmp    FWORD PTR [edi]
  4119a4:	(bad)  
  4119a5:	call   DWORD PTR [esi-0x109c0001]
  4119ab:	add    ah,cl
  4119ad:	adc    DWORD PTR [edi],0xffffc11e
  4119b3:	outs   dx,BYTE PTR ds:[esi]
  4119b4:	inc    DWORD PTR [eax]
  4119b6:	cli    
  4119b7:	or     DWORD PTR [ecx-0xff1e89],0x23
  4119be:	outs   dx,BYTE PTR ds:[esi]
  4119bf:	adc    al,0xd0
  4119c1:	int3   
  4119c2:	add    ch,cl
  4119c4:	add    bh,bh
  4119c6:	cmp    eax,0xe7ceff83
  4119cb:	inc    DWORD PTR [ebx+0x1187441e]
  4119d1:	add    BYTE PTR [ecx+0x39cc00b0],cl
  4119d7:	(bad)  
  4119d8:	push   edi
  4119da:	adc    edi,edi
  4119dc:	add    BYTE PTR [eax+edx*2-0x51],bl
  4119e0:	lods   eax,DWORD PTR ds:[esi]
  4119e1:	add    ah,cl
  4119e3:	inc    eax
  4119e4:	add    bh,bh
  4119e6:	mov    ah,0x83
  4119e8:	int3   
  4119e9:	mov    eax,ds:0x3c83ff7f
  4119ee:	cs xchg edx,eax
  4119f0:	xor    edi,edi
  4119f2:	dec    DWORD PTR [eax]
  4119f4:	add    bh,bh
  4119f6:	data16 add bh,bh
  4119f9:	bound  esi,QWORD PTR [edi+0x53afffff]
  4119ff:	stos   DWORD PTR es:[edi],eax
  411a00:	jb     0x411a01
  411a02:	jmp    FWORD PTR [ebx-0xacff01]
  411a08:	jmp    DWORD PTR [ebx-0x76330046]
  411a0e:	push   ds
  411a0f:	int3   
  411a10:	pop    esi
  411a11:	add    bh,bh
  411a13:	mov    esi,0x31ffff
  411a18:	add    BYTE PTR [edi-0x3d],cl
  411a1b:	inc    DWORD PTR [ebx+0x1aee7afe]
  411a21:	cmp    edi,0xffffffa7
  411a24:	add    BYTE PTR [eax],al
  411a26:	pop    edi
  411a27:	mov    DWORD PTR [eax],eax
  411a29:	dec    edi
  411a2a:	retf   
  411a2b:	dec    DWORD PTR [ecx+0x35747072]
  411a31:	add    BYTE PTR [ebx+0x45ffff60],al
  411a37:	inc    DWORD PTR [eax]
  411a39:	addr16 pop ss
  411a3b:	(bad)  
  411a3c:	dec    DWORD PTR [eax]
  411a3e:	inc    esp
  411a3f:	js     0x411a7f
  411a41:	add    BYTE PTR [eax],al
  411a43:	out    dx,eax
  411a44:	add    bh,bh
  411a46:	(bad)  
  411a48:	add    BYTE PTR [esi+0x30ff0045],cl
  411a4e:	lods   al,BYTE PTR ds:[esi]
  411a4f:	push   edi
  411a50:	add    eax,0x12ff00
  411a55:	int3   
  411a56:	call   0xffff:0x2016ff83
  411a5d:	dec    edx
  411a5e:	rcl    al,0xe3
  411a61:	inc    DWORD PTR [ebx+0x38008343]
  411a67:	inc    DWORD PTR [eax]
  411a69:	or     ecx,ebp
  411a6b:	dec    DWORD PTR [ecx+0x5fd63dac]
  411a71:	add    BYTE PTR [eax],al
  411a73:	dec    ecx
  411a74:	int3   
  411a75:	dec    DWORD PTR [edi+0x1d7fff83]
  411a7b:	mov    edi,edi
  411a7d:	dec    ebx
  411a7e:	sbb    BYTE PTR ds:0xb000cca1,cl
  411a84:	(bad)  
  411a85:	call   DWORD PTR [ecx+0x342200ff]
  411a8b:	add    bh,bh
  411a8d:	or     al,0x13
  411a8f:	mov    esp,DWORD PTR [esi+0x82cc00]
  411a95:	int3   
  411a96:	pop    edx
  411a97:	(bad)  
  411a98:	inc    DWORD PTR [ecx]
  411a9a:	or     DWORD PTR [eax],eax
  411a9c:	call   DWORD PTR [eax-0x931c97]
  411aa2:	dec    DWORD PTR [edx-0x34]
  411aa5:	jmp    DWORD PTR [eax-0x1]
  411aa8:	add    BYTE PTR [edx+edx*4+0x287cc83],ah
  411aaf:	jge    0x411a41
  411ab1:	mov    edi,edi
  411ab3:	cwde   
  411ab4:	add    bh,bh
  411ab6:	xor    al,0x83
  411ab8:	push   DWORD PTR [ebp+0x5900ff6f]
  411abe:	cmp    eax,0xffff3eb1
  411ac3:	in     eax,dx
  411ac4:	add    BYTE PTR [eax],al
  411ac6:	add    al,0xff
  411ac8:	and    DWORD PTR [eax+0x5bcc8360],0x63
  411acf:	shl    BYTE PTR [ecx],0x83
  411ad2:	inc    DWORD PTR [eax-0x1]
  411ad5:	add    BYTE PTR [edi-0x7d],al
  411ad8:	int3   
  411ad9:	(bad)  
  411ada:	sti    
  411adb:	add    bh,bh
  411add:	mov    ebp,0xff2fe27a
  411ae2:	dec    DWORD PTR [edi-0x1]
  411ae5:	call   DWORD PTR [ebp-0x1]
  411ae8:	call   edi
  411aea:	icebp  
  411aeb:	(bad)  
  411aec:	inc    edi
  411aee:	(bad)  
  411aef:	jns    0x411a8e
  411af1:	int3   
  411af2:	dec    eax
  411af4:	cmp    edi,0x36
  411af7:	add    DWORD PTR [eax],0x4f
  411afa:	mov    bh,bh
  411afc:	add    BYTE PTR [ecx-0x5a],al
  411aff:	outs   dx,DWORD PTR ds:[esi]
  411b00:	sub    edi,edi
  411b02:	dec    edx
  411b04:	mov    edi,edi
  411b06:	xlat   BYTE PTR ds:[ebx]
  411b07:	mov    esp,ecx
  411b09:	iret   
  411b0a:	call   0x5ffe9e98
  411b0f:	lahf   
  411b10:	cmp    DWORD PTR [eax],eax
  411b12:	inc    DWORD PTR [ecx]
  411b14:	add    BYTE PTR [eax],al
  411b16:	in     eax,dx
  411b17:	inc    DWORD PTR [eax]
  411b19:	lods   eax,DWORD PTR ds:[esi]
  411b1a:	sbb    al,0xff
  411b1c:	(bad)  
  411b1d:	fidivr WORD PTR [esi+eiz*8-0x23000096]
  411b24:	int3   
  411b25:	add    BYTE PTR [eax],bl
  411b27:	int3   
  411b28:	add    esp,0xffffffda
  411b2b:	(bad)  
  411b2c:	call   DWORD PTR [esi+0x2f]
  411b2f:	lahf   
  411b30:	cmp    bh,bh
  411b32:	call   edi
  411b34:	dec    DWORD PTR [ecx+0x7b00007e]
  411b3a:	pop    ebp
  411b3b:	add    BYTE PTR [eax],al
  411b3d:	inc    esp
  411b3e:	push   cs
  411b3f:	mov    bh,0xa0
  411b41:	(bad)  
  411b42:	(bad)  
  411b43:	inc    DWORD PTR [ebx-0xc201]
  411b49:	push   ecx
  411b4a:	loop   0x411b4b
  411b4c:	add    dh,dh
  411b4e:	(bad)  
  411b50:	mov    bh,0xff
  411b52:	jmp    DWORD PTR [eax-0x1]
  411b55:	int3   
  411b56:	push   ebp
  411b57:	int3   
  411b58:	add    bl,dh
  411b5a:	pop    esp
  411b5b:	mov    edi,edi
  411b5d:	iret   
  411b5e:	inc    esi
  411b5f:	pop    esi
  411b60:	nop
  411b61:	inc    DWORD PTR [eax]
  411b63:	in     al,0x0
  411b65:	sbb    DWORD PTR [esi],0xffffff89
  411b68:	call   DWORD PTR [ebp+0x6c00cca6]
  411b6e:	repz rol BYTE PTR [edi-0x34],1
  411b72:	call   DWORD PTR [esi]
  411b74:	(bad)  
  411b75:	call   DWORD PTR [eax+0x0]
  411b78:	add    dh,al
  411b7a:	pop    edi
  411b7b:	inc    DWORD PTR [eax]
  411b7d:	out    0x4,eax
  411b7f:	dec    edi
  411b80:	nop
  411b81:	add    DWORD PTR [eax],0x52
  411b84:	(bad)  
  411b85:	call   edi
  411b87:	add    BYTE PTR [ebx+0xcc9634],al
  411b8d:	add    edi,0xffcc28fb
  411b93:	sub    al,0x89
  411b95:	push   DWORD PTR [eax+eax*1+0x0]
  411b99:	repnz pop edx
  411b9b:	(bad)  
  411b9c:	push   DWORD PTR ds:0x5d294e
  411ba2:	inc    DWORD PTR [eax-0x790100]
  411ba8:	int3   
  411ba9:	dec    ecx
  411baa:	xor    eax,0x62e80000
  411baf:	and    bh,dl
  411bb1:	add    ah,cl
  411bb3:	mov    esp,0xff9fffff
  411bb8:	dec    DWORD PTR [eax-0x60]
  411bbb:	dec    DWORD PTR [ecx-0x1553bb57]
  411bc1:	cmp    edi,0xffffffa8
  411bc4:	(bad)  
  411bc5:	jmp    FWORD PTR [ebx-0x1]
  411bc8:	int3   
  411bc9:	xchg   ecx,eax
  411bca:	sti    
  411bcb:	add    ah,cl
  411bcd:	fs nop
  411bcf:	mov    al,ds:0xcbffff69
  411bd4:	inc    DWORD PTR [ebx+0x658383f5]
  411bda:	scas   al,BYTE PTR es:[edi]
  411bdb:	add    BYTE PTR [ebx+0x1ae011f7],al
  411be1:	(bad)  
  411be2:	(bad)  
  411be3:	cld    
  411be4:	(bad)  
  411be5:	call   DWORD PTR [eax-0x77]
  411be8:	call   DWORD PTR [edi+0x6dffff65]
  411bee:	xchg   ebx,eax
  411bef:	cmp    BYTE PTR [ecx-0x1],ch
  411bf2:	mov    DWORD PTR [edi],esi
  411bf4:	add    BYTE PTR [eax],al
  411bf6:	cmp    cl,BYTE PTR [ecx-0x998301]
  411bfc:	dec    edx
  411bfe:	sbb    BYTE PTR [esi+0x2e],cl
  411c01:	(bad)  
  411c02:	push   DWORD PTR [ebx]
  411c04:	inc    DWORD PTR [ebx-0x7aff7c16]
  411c0a:	out    0x89,al
  411c0c:	call   ecx
  411c0e:	cmp    BYTE PTR [ecx+0x5e],ah
  411c11:	dec    DWORD PTR [ecx+0x2100ff34]
  411c17:	add    ah,cl
  411c19:	sbb    DWORD PTR [ecx+0x3d4f83ff],eax
  411c1f:	cli    
  411c20:	sbb    bh,bh
  411c22:	int3   
  411c23:	mov    ah,0xcc
  411c25:	dec    ebp
  411c27:	mov    edi,edi
  411c29:	mov    bl,0x7b
  411c2b:	(bad)  
  411c2c:	(bad)  
  411c2d:	mov    eax,0x832ef2de
  411c32:	call   edi
  411c34:	add    bh,bh
  411c36:	mov    esi,0xd7d2ffff
  411c3b:	int3   
  411c3c:	add    DWORD PTR [ecx-0x4],0xfffffffa
  411c40:	pop    ds
  411c41:	int3   
  411c42:	add    BYTE PTR [esi],bh
  411c44:	(bad)  
  411c45:	jmp    FWORD PTR [esp+ecx*8]
  411c48:	add    BYTE PTR [esi-0xb],dh
  411c4b:	add    BYTE PTR [ebx+0x1b14e434],al
  411c51:	add    BYTE PTR [ecx+0x51ffff85],cl
  411c57:	dec    DWORD PTR [ecx-0xedd4]
  411c5d:	and    al,0x6
  411c5f:	mov    al,0xb2
  411c61:	add    BYTE PTR [eax],al
  411c63:	jnp    0x411c64
  411c65:	add    BYTE PTR [esi-0x1],al
  411c68:	cmp    ebp,0xffffffa8
  411c6b:	cmp    edi,0xffffff86
  411c6e:	push   es
  411c6f:	stc    
  411c70:	or     bh,bh
  411c72:	(bad)  
  411c73:	mov    esp,0x9ffff
  411c78:	add    dl,bh
  411c7a:	xchg   edi,edi
  411c7c:	add    BYTE PTR [eax+0x41],cl
  411c7f:	cmp    eax,0x43ff0086
  411c84:	add    BYTE PTR [ebx+0x6600ff1d],al
  411c8a:	out    0x89,eax
  411c8c:	int3   
  411c8d:	jp     0x411c3a
  411c8f:	out    dx,eax
  411c90:	mov    bl,0xff
  411c92:	dec    ebp
  411c94:	(bad)  
  411c95:	jmp    DWORD PTR [ebx+0x0]
  411c98:	add    BYTE PTR [edi+0x1200ff0c],bl
  411c9e:	test   al,0x85
  411ca0:	iret   
  411ca1:	add    DWORD PTR [ebx-0x5000ffa2],0x0
  411ca8:	call   FWORD PTR [eax]
  411caa:	hlt    
  411cab:	add    BYTE PTR [eax],al
  411cad:	mov    bl,0x2a
  411caf:	es pop edi
  411cb1:	cmp    edi,0xfffffff1
  411cb4:	add    bh,bh
  411cb6:	push   edi
  411cb7:	add    ah,cl
  411cb9:	lahf   
  411cba:	into   
  411cbb:	add    bh,bh
  411cbd:	popf   
  411cbe:	(bad)  
  411cbf:	xor    DWORD PTR [ebp-0x1eff01],ebx
  411cc5:	and    DWORD PTR ds:0xba4800cc,0xffffffff
  411ccc:	add    BYTE PTR [esi+0x688e98],ah
  411cd2:	mov    edx,esi
  411cd4:	(bad)  
  411cd5:	push   DWORD PTR [esi+0x2d2c0000]
  411cdb:	cmp    edi,0xffffffef
  411cde:	int    0xd6
  411ce0:	and    al,0x83
  411ce2:	mov    DWORD PTR [edi],edx
  411ce4:	inc    DWORD PTR [ebx+0x35ff8327]
  411cea:	xlat   BYTE PTR ds:[ebx]
  411ceb:	add    BYTE PTR [ebx-0x3ed0a343],al
  411cf1:	cmp    edi,0x6b
  411cf4:	int3   
  411cf5:	and    DWORD PTR [ecx],0x0
  411cf8:	(bad)  
  411cf9:	mov    edi,0x23ff0068
  411cfe:	push   cs
  411cff:	out    dx,al
  411d00:	cmp    eax,DWORD PTR [eax]
  411d02:	mov    edx,esp
  411d04:	(bad)  
  411d05:	(bad)  
  411d06:	cmp    al,BYTE PTR [eax]
  411d08:	(bad)  
  411d09:	jnp    0x411d2c
  411d0b:	inc    DWORD PTR [eax]
  411d0d:	hlt    
  411d0e:	sbb    dl,BYTE PTR [edi-0x1d]
  411d11:	add    BYTE PTR [eax],al
  411d13:	dec    ecx
  411d14:	inc    DWORD PTR [eax]
  411d16:	mov    bh,bh
  411d18:	adc    DWORD PTR [ecx-0x6b00338f],0x1b
  411d1f:	jnp    0x411d69
  411d21:	(bad)  
  411d22:	call   FWORD PTR [eax-0x1]
  411d25:	sub    DWORD PTR [ebx],0x0
  411d28:	(bad)  
  411d29:	jg     0x411d1c
  411d2b:	(bad)  
  411d2c:	call   FWORD PTR [ecx+0x6a]
  411d2f:	fcmove st,st(7)
  411d31:	inc    DWORD PTR [eax]
  411d33:	in     al,0xff
  411d35:	add    BYTE PTR [ebx],ch
  411d37:	int3   
  411d38:	call   FWORD PTR [ecx]
  411d3a:	aas    
  411d3b:	add    bh,bh
  411d3d:	sbb    eax,0xffbcdae1
  411d42:	add    BYTE PTR [ebp+0x0],bh
  411d45:	adc    DWORD PTR [eax],0x0
  411d48:	add    ch,bh
  411d4a:	ror    esp,1
  411d4c:	jmp    FWORD PTR [eax]
  411d4e:	mov    dl,0xe4
  411d50:	ins    DWORD PTR es:[edi],dx
  411d51:	cmp    edi,0xffffff85
  411d54:	(bad)  
  411d55:	jmp    DWORD PTR [eax]
  411d57:	add    BYTE PTR [eax],al
  411d59:	add    al,0xf0
  411d5b:	add    BYTE PTR [eax],al
  411d5d:	(bad)  
  411d5e:	sbb    al,0xc7
  411d60:	inc    esi
  411d61:	inc    DWORD PTR [eax]
  411d63:	mov    ds:0x2200ff,al
  411d68:	(bad)  
  411d69:	jmp    0x8d5c:0xabffff74
  411d70:	adc    edi,edi
  411d72:	or     DWORD PTR [esi-0x270100],0xffffff83
  411d79:	mov    dl,0xe2
  411d7b:	add    DWORD PTR [eax],0x64
  411d7e:	ret    0x1bf
  411d81:	add    BYTE PTR [eax],al
  411d83:	pop    esi
  411d84:	inc    DWORD PTR [eax]
  411d86:	or     al,0x0
  411d88:	add    BYTE PTR [edx+0x6700835c],dh
  411d8e:	and    BYTE PTR [ecx+0x338900ff],dh
  411d94:	(bad)  
  411d95:	jmp    DWORD PTR [esi]
  411d97:	dec    esp
  411d99:	das    
  411d9a:	je     0x411d1f
  411d9c:	sub    DWORD PTR [edx-0xdbd1e],0xffffff89
  411da3:	xchg   ebp,eax
  411da4:	dec    esp
  411da6:	int3   
  411da7:	mov    DWORD PTR [eax],eax
  411da9:	fstp   TBYTE PTR [esi-0x1]
  411dac:	add    BYTE PTR [ebx+0x63],al
  411daf:	dec    ebp
  411db0:	push   edi
  411db1:	add    bh,bh
  411db3:	sar    bh,0xff
  411db6:	push   es
  411db7:	(bad)  
  411db8:	(bad)  
  411db9:	cmp    BYTE PTR [edi+0x22c9ff00],cl
  411dbf:	dec    eax
  411dc0:	inc    edi
  411dc1:	(bad)  
  411dc2:	call   FWORD PTR [ecx-0x38ff01]
  411dc8:	add    BYTE PTR [eax-0xfffff01],ah
  411dce:	in     eax,0xb1
  411dd0:	jae    0x411dd1
  411dd2:	mov    DWORD PTR [eax],eax
  411dd4:	inc    DWORD PTR [eax]
  411dd6:	adc    eax,0x6dc083cc
  411ddb:	(bad)  
  411ddc:	dec    DWORD PTR [esi+0x54]
  411ddf:	loop   0x411df5
  411de1:	(bad)  
  411de2:	jmp    DWORD PTR [ebx+0x0]
  411de5:	call   FWORD PTR [edi]
  411de7:	inc    DWORD PTR [eax]
  411de9:	(bad)  
  411deb:	or     esp,0x1e
  411dee:	dec    ebx
  411def:	addr16 out dx,eax
  411df1:	int3   
  411df2:	(bad)  
  411df3:	cmp    al,0x0
  411df5:	jmp    edx
  411df7:	add    bh,bh
  411df9:	out    dx,al
  411dfa:	enter  0xffff,0x5b
  411dfe:	add    esp,esp
  411e00:	inc    ebx
  411e01:	add    BYTE PTR [eax],al
  411e03:	cmp    al,0x0
  411e05:	add    cl,dh
  411e07:	cmp    edi,0x2e
  411e0a:	fdiv   st(7),st
  411e0c:	add    dl,cl
  411e0e:	popa   
  411e0f:	cmp    BYTE PTR [ebp-0xe87c77],dl
  411e15:	int3   
  411e16:	inc    DWORD PTR fs:[eax]
  411e19:	leave  
  411e1a:	add    edi,edi
  411e1c:	add    BYTE PTR [edi-0x3],cl
  411e1f:	jg     0x411e18
  411e21:	add    bh,bh
  411e23:	and    eax,0xff2800ff
  411e28:	add    BYTE PTR [ecx],cl
  411e2a:	idiv   bh
  411e2c:	(bad)  
  411e2d:	stc    
  411e2e:	mov    ecx,0xffff5467
  411e33:	(bad)  
  411e35:	(bad)  
  411e36:	fcos   
  411e38:	cmp    DWORD PTR [ecx-0xe],0xffffffff
  411e3c:	inc    DWORD PTR [esi-0x35]
  411e3f:	jb     0x411e9f
  411e41:	inc    DWORD PTR [ebx-0x41ffff6c]
  411e47:	int3   
  411e48:	add    ah,dl
  411e4a:	inc    eax
  411e4b:	inc    DWORD PTR [eax]
  411e4d:	mov    ebx,0x714d93
  411e52:	add    BYTE PTR [eax-0x1],dl
  411e55:	mov    DWORD PTR [esi],edx
  411e57:	add    bh,bh
  411e59:	mov    WORD PTR [edi+edi*8],ss
  411e5c:	(bad)  
  411e5d:	jle    0x411e68
  411e5f:	fisub  WORD PTR [esi+0x0]
  411e62:	add    BYTE PTR [edi-0x1],dl
  411e65:	mov    DWORD PTR [edi+edi*8-0xa3677],esp
  411e6c:	dec    DWORD PTR [ecx+edi*8-0x76]
  411e70:	dec    eax
  411e71:	add    DWORD PTR [ebx+0x4300ff6a],0x0
  411e78:	and    DWORD PTR [ecx+ecx*4],0xffffffff
  411e7c:	inc    DWORD PTR [edx-0x12]
  411e7f:	aad    0x90
  411e81:	(bad)  
  411e82:	dec    DWORD PTR [eax]
  411e84:	add    bh,bh
  411e86:	data16 (bad) 
  411e88:	inc    DWORD PTR [edx]
  411e8a:	outs   dx,BYTE PTR ds:[esi]
  411e8b:	inc    DWORD PTR [eax]
  411e8d:	out    dx,al
  411e8e:	ret    
  411e8f:	jns    0x411e83
  411e91:	add    bh,bh
  411e93:	cmp    al,0x83
  411e95:	sub    DWORD PTR [ecx],0x0
  411e98:	xor    DWORD PTR [eax*1-0x4be30100],0xffffff88
  411ea0:	and    bh,bh
  411ea2:	inc    DWORD PTR [ecx+0xd6ffff]
  411ea8:	mov    DWORD PTR [edi],eax
  411eaa:	dec    eax
  411eab:	add    ah,cl
  411ead:	outs   dx,BYTE PTR ds:[esi]
  411eae:	fsub   QWORD PTR ds:0xe8cc00fc
  411eb4:	add    BYTE PTR [eax],al
  411eb6:	ret    0xff83
  411eb9:	mov    bh,0xd9
  411ebb:	int3   
  411ebc:	add    ch,dl
  411ebe:	out    0x27,eax
  411ec0:	into   
  411ec1:	int3   
  411ec2:	cmp    DWORD PTR [eax],0xffffffcc
  411ec5:	call   FWORD PTR [esi+0x6f4800ff]
  411ecb:	add    bh,bh
  411ecd:	and    al,0xb0
  411ecf:	shl    DWORD PTR [esi+0x0],0xff
  411ed3:	scas   al,BYTE PTR es:[edi]
  411ed4:	(bad)  
  411ed5:	call   DWORD PTR [esi-0x62b80000]
  411edb:	(bad)  
  411edc:	call   FWORD PTR [eax]
  411ede:	add    eax,0xffff11fc
  411ee3:	or     eax,DWORD PTR [ebx-0x7c76377d]
  411ee9:	fiadd  DWORD PTR [ebx-0x1]
  411eec:	sub    DWORD PTR [eax],0x5c
  411eef:	icebp  
  411ef0:	mov    edi,edi
  411ef2:	add    BYTE PTR [edx],ch
  411ef4:	(bad)  
  411ef5:	(bad)  
  411ef6:	out    dx,eax
  411ef7:	add    DWORD PTR [eax],0x2f
  411efa:	add    DWORD PTR fs:[eax],0x1
  411efe:	scas   eax,DWORD PTR es:[edi]
  411eff:	out    dx,eax
  411f00:	adc    BYTE PTR [eax],al
  411f02:	int3   
  411f03:	mov    BYTE PTR [eax],0xff
  411f06:	dec    eax
  411f07:	add    ah,cl
  411f09:	push   edi
  411f0a:	lahf   
  411f0b:	(bad)  
  411f0c:	dec    DWORD PTR [ebx]
  411f0e:	add    BYTE PTR [esi+0x7a],bh
  411f11:	add    bh,bh
  411f13:	mov    al,ds:0x9affcc
  411f18:	(bad)  
  411f19:	mov    esi,0x96cc00b6
  411f1e:	aam    0xf3
  411f20:	mov    bh,bh
  411f22:	add    BYTE PTR [edx],al
  411f24:	(bad)  
  411f25:	dec    DWORD PTR [ebp-0x6b79ff34]
  411f2b:	dec    esp
  411f2d:	pop    esp
  411f2e:	aam    0x0
  411f30:	out    dx,al
  411f31:	(bad)  
  411f32:	call   FWORD PTR [ebx-0xd23301]
  411f38:	add    BYTE PTR [edx+0x52ccccc1],cl
  411f3e:	aas    
  411f3f:	out    dx,al
  411f40:	adc    eax,0x27ff00
  411f45:	add    BYTE PTR [edx+0x0],dh
  411f48:	add    BYTE PTR [ebp-0x4c],cl
  411f4b:	(bad)  
  411f4c:	dec    DWORD PTR [ebp+0x46]
  411f4f:	in     al,dx
  411f50:	sti    
  411f51:	(bad)  
  411f52:	dec    DWORD PTR [ebx]
  411f54:	add    ah,cl
  411f56:	ins    BYTE PTR es:[edi],dx
  411f57:	int3   
  411f58:	add    BYTE PTR [esi-0x36007c09],al
  411f5e:	add    esp,eax
  411f60:	mov    ds:0x832189ff,al
  411f65:	inc    ebp
  411f67:	(bad)  
  411f68:	dec    ecx
  411f6a:	jmp    0x411f6c
  411f6c:	jmp    esi
  411f6e:	retf   0x5782
  411f71:	or     eax,DWORD PTR [eax]
  411f73:	add    BYTE PTR [edi+0x368700ff],dl
  411f79:	mov    dl,0xff
  411f7b:	add    BYTE PTR [eax+0x729f8300],ch
  411f81:	adc    edi,edi
  411f83:	or     esi,0x0
  411f86:	add    BYTE PTR [ebp-0xff4dc9],bl
  411f8c:	adc    cl,ah
  411f8e:	push   DWORD PTR [ebp+0x0]
  411f91:	mov    ebp,0x3e838655
  411f96:	add    BYTE PTR [eax+eax*1-0x3400],ch
  411f9d:	(bad)  
  411f9e:	mov    eax,0x6a9800a6
  411fa3:	xor    eax,0x48357cc
  411fa8:	(bad)  
  411fa9:	inc    DWORD PTR [ebx+0x504d0083]
  411faf:	dec    ebp
  411fb0:	int3   
  411fb1:	stos   BYTE PTR es:[edi],al
  411fb2:	jmp    0x139a319
  411fb7:	pop    es
  411fb8:	(bad)  
  411fb9:	inc    DWORD PTR [eax]
  411fbb:	dec    esp
  411fbd:	clc    
  411fbe:	xchg   ebx,eax
  411fbf:	pop    edx
  411fc0:	adc    DWORD PTR ds:0xc6ff85bb,0x0
  411fc7:	test   bh,bh
  411fc9:	inc    DWORD PTR [eax]
  411fcb:	(bad)  
  411fcc:	inc    eax
  411fce:	mov    ds:0xa4108356,al
  411fd3:	jg     0x411fd5
  411fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd6:	add    BYTE PTR [ebp-0x7d],bh
  411fdc:	push   DWORD PTR [edx+ebp*2+0x2c]
  411fe0:	sbb    DWORD PTR [ecx],0x3b
  411fe3:	cmp    eax,DWORD PTR [eax]
  411fe5:	mov    BYTE PTR [eax],0x19
  411fe8:	inc    DWORD PTR [ebx+0xeff8300]
  411fee:	xor    DWORD PTR [ebx+0x36886fff],esi
  411ff4:	add    DWORD PTR [eax-0x1],0x4
  411ff8:	add    BYTE PTR [eax],al
  411ffa:	inc    DWORD PTR [eax]
  411ffc:	add    BYTE PTR [ecx],cl
  411ffe:	inc    ecx
  411fff:	aas    
  412000:	inc    DWORD PTR [esi+0x1f831071]
  412006:	add    BYTE PTR ds:0xcc83ffff,dh
  41200c:	inc    DWORD PTR [esi+0x70]
  41200f:	add    BYTE PTR ss:[ecx],cl
  412012:	pop    ss
  412013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412014:	call   FWORD PTR [edi+0xcc8aff]
  41201a:	inc    DWORD PTR [eax]
  41201c:	and    DWORD PTR [eax-0xe],0x59
  412020:	push   edi
  412022:	sbb    DWORD PTR [ebp-0x67ff3434],0xffffffff
  412029:	inc    DWORD PTR [ebx-0x50f0100]
  41202f:	mov    esi,0x8d81a989
  412034:	int3   
  412035:	mov    ds:0xffe400,al
  41203a:	add    bh,bh
  41203c:	call   edi
  41203e:	pusha  
  41203f:	fcos   
  412041:	push   edx
  412042:	add    dh,BYTE PTR [edi+0x0]
  412045:	pushf  
  412046:	add    BYTE PTR [ebx+0x0],ah
  412049:	(bad)  
  41204a:	(bad)  
  41204b:	inc    DWORD PTR [eax]
  41204d:	(bad)  
  41204e:	ficom  DWORD PTR ds:0xb9db98ff
  412054:	add    BYTE PTR [ecx+ecx*4-0x76b0],dl
  41205b:	add    BYTE PTR [eax],al
  41205d:	ds retf 
  41205f:	(bad)  
  412060:	call   DWORD PTR [edi+0x60041fe]
  412066:	int3   
  412067:	mov    edx,0xff838300
  41206c:	add    BYTE PTR [ecx-0x6c],cl
  41206f:	call   0x74cc:0xfc492ff
  412076:	push   ecx
  412078:	(bad)  
  412079:	inc    DWORD PTR [eax]
  41207b:	int3   
  41207c:	mov    esi,esp
  41207e:	xchg   esp,eax
  41207f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412080:	add    BYTE PTR [eax],cl
  412082:	loop   0x4120a9
  412084:	sub    DWORD PTR [ecx+ecx*4],0x3e
  412088:	add    bh,bh
  41208a:	add    bh,bh
  41208c:	add    BYTE PTR [esp+edi*4+0x28],ch
  412090:	jmp    DWORD PTR [esi+0x6a]
  412093:	test   BYTE PTR [ebx-0xb4ff93],0x83
  41209a:	inc    DWORD PTR [eax]
  41209c:	cmp    DWORD PTR [edi-0x55ffebab],0xffffffc5
  4120a3:	cwde   
  4120a4:	add    dh,ah
  4120a6:	(bad)  
  4120a7:	cmp    bh,bh
  4120a9:	inc    DWORD PTR [eax]
  4120ab:	(bad)  
  4120ac:	call   ebx
  4120ae:	std    
  4120af:	adc    eax,DWORD PTR [eax]
  4120b1:	(bad)
  4120b6:	jmp    FWORD PTR [edi-0x1]
  4120b9:	int3   
  4120ba:	inc    DWORD PTR [eax]
  4120bc:	dec    DWORD PTR [ebp+0x5ffab57]
  4120c2:	mov    ah,0x53
  4120c4:	add    BYTE PTR [ebx-0x1],cl
  4120c7:	cld    
  4120c8:	add    ah,cl
  4120ca:	(bad)  
  4120cb:	inc    DWORD PTR [ebx+0x2a4cfa]
  4120d1:	pop    ss
  4120d2:	mov    esi,DWORD PTR [esi-0x1]
  4120d5:	xlat   BYTE PTR ds:[ebx]
  4120d6:	add    BYTE PTR [ebp-0x33ff0100],dh
  4120dc:	or     edi,0xffffffff
  4120df:	mov    WORD PTR [ebx-0x1c3159],es
  4120e5:	fdivp  st(7),st
  4120e7:	push   ds
  4120e8:	int3   
  4120e9:	dec    DWORD PTR [ecx+0x2e728300]
  4120ef:	xor    eax,0xd7ea7dff
  4120f4:	add    BYTE PTR [ebx-0x767c8d00],al
  4120fa:	(bad)  
  4120fb:	inc    DWORD PTR [ebx+0x5bc387]
  412101:	mov    bh,al
  412103:	lock add BYTE PTR [edx-0x7c00bb00],al
  41210a:	add    bh,bh
  41210c:	call   DWORD PTR [ebx+0x27]
  41210f:	outs   dx,DWORD PTR ds:[esi]
  412110:	add    BYTE PTR [eax+0xcccdb8b],ch
  412116:	add    BYTE PTR [ebp-0x7d],bh
  412119:	(bad)  
  41211a:	(bad)  
  41211b:	inc    DWORD PTR [eax]
  41211d:	pop    es
  41211e:	xchg   BYTE PTR [edi+0x5dab4600],dl
  412124:	xor    esp,0xffffffff
  412127:	mov    DWORD PTR [ebx-0x33ff0001],0xffe367f4
  412131:	add    al,0xa0
  412133:	mov    bh,0xff
  412135:	xchg   DWORD PTR [eax],eax
  412137:	or     eax,DWORD PTR [eax]
  412139:	(bad)  
  41213a:	(bad)  
  41213b:	inc    DWORD PTR [eax]
  41213d:	fwait
  41213e:	push   es
  41213f:	sar    edi,0x61
  412142:	push   0xe80018
  412147:	sub    edi,edi
  412149:	inc    DWORD PTR [eax]
  41214b:	cmp    edi,0x2b
  41214e:	push   0x2e
  412150:	push   DWORD PTR [edx+0x7f]
  412153:	or     al,0xff
  412155:	push   eax
  412156:	jmp    FWORD PTR [eax+eax*1-0x1]
  41215a:	add    bh,bh
  41215c:	or     DWORD PTR [ebx-0x25ff2762],0x69
  412163:	sub    al,0xff
  412165:	lods   al,BYTE PTR ds:[esi]
  412166:	sbb    DWORD PTR [ebp-0xff01],0x0
  41216d:	test   DWORD PTR [edi-0x27610041],ecx
  412173:	in     al,dx
  412174:	(bad)  
  412175:	jnp    0x412177
  412177:	test   al,0x0
  412179:	int3   
  41217a:	add    BYTE PTR [ebx+0x5e03aeff],al
  412180:	jmp    FWORD PTR [edi]
  412182:	xchg   ebx,eax
  412183:	loopne 0x412108
  412185:	mov    es,WORD PTR [ebx-0x7c760072]
  41218b:	add    bh,bh
  41218d:	arpl   WORD PTR [edi+edx*1-0x1],di
  412191:	out    dx,al
  412192:	mul    BYTE PTR [ebx-0x38ffca01]
  412198:	int3   
  412199:	add    BYTE PTR [eax],al
  41219b:	inc    DWORD PTR [ebx-0x7c3a699b]
  4121a1:	dec    ebx
  4121a2:	dec    edx
  4121a3:	stos   BYTE PTR es:[edi],al
  4121a4:	int3   
  4121a5:	ins    BYTE PTR es:[edi],dx
  4121a6:	(bad)  
  4121a7:	fdivp  st(7),st
  4121a9:	mov    esp,ecx
  4121ab:	int3   
  4121ac:	add    BYTE PTR [ecx-0x28],bh
  4121af:	and    al,0x0
  4121b1:	or     DWORD PTR [eax+esi*2+0x67831a83],edx
  4121b8:	mov    esp,ecx
  4121ba:	add    bh,bh
  4121bc:	add    BYTE PTR [ebp-0x2a],ah
  4121bf:	out    dx,eax
  4121c0:	add    BYTE PTR [edx],ah
  4121c2:	in     eax,0x93
  4121c4:	add    ah,ah
  4121c6:	push   DWORD PTR [esi-0x1]
  4121c9:	(bad)  
  4121ca:	dec    DWORD PTR [ecx+0x5ccc3eff]
  4121d0:	add    ch,bh
  4121d2:	xor    BYTE PTR [ebp-0x1],ch
  4121d5:	fdivr  st,st(7)
  4121d7:	test   BYTE PTR [eax],al
  4121d9:	inc    DWORD PTR [eax]
  4121db:	inc    DWORD PTR [eax]
  4121dd:	inc    edi
  4121de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121df:	je     0x4121e1
  4121e1:	push   edi
  4121e2:	popa   
  4121e3:	call   0x96402cb4
  4121e8:	cmp    edi,0x0
  4121eb:	(bad)  
  4121ec:	jmp    ebx
  4121ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ef:	fdivr  st,st(7)
  4121f1:	mov    esp,0xed837c44
  4121f6:	xor    DWORD PTR [edi-0x100],0xffffffff
  4121fd:	fisub  DWORD PTR [ebx-0x7b67ff37]
  412203:	sub    edi,edi
  412205:	or     al,0xff
  412207:	(bad)  
  412208:	inc    DWORD PTR [eax]
  41220a:	add    bh,bh
  41220c:	(bad)  
  41220d:	cli    
  41220e:	lahf   
  41220f:	pusha  
  412210:	add    BYTE PTR [eax-0x900e384],ch
  412216:	jmp    DWORD PTR [ebx-0x1]
  41221c:	and    edx,0x8
  41221f:	push   ebx
  412220:	dec    DWORD PTR [ebx]
  412222:	imul   edi,DWORD PTR [esi],0xffffffff
  412225:	mov    DWORD PTR [eax],eax
  412227:	std    
  412228:	dec    esp
  41222a:	inc    DWORD PTR [eax]
  41222c:	mov    DWORD PTR [eax-0x24005eb4],esp
  412232:	xor    bl,bl
  412234:	sbb    DWORD PTR [edx-0x33001c00],0xffffff83
  41223b:	(bad)  
  41223c:	push   DWORD PTR [esi+ebx*4]
  41223f:	sub    eax,0x9f0437ff
  412244:	call   FWORD PTR [edi-0x76ffcf01]
  41224a:	inc    DWORD PTR [eax]
  41224c:	(bad)  
  41224d:	push   DWORD PTR [ebx-0x3f]
  412250:	adc    ecx,0x35
  412253:	test   eax,0xaf002500
  412258:	(bad)  
  412259:	(bad)  
  41225a:	(bad)  
  41225b:	(bad)  
  41225c:	inc    DWORD PTR [esi]
  41225e:	and    DWORD PTR [ecx],ecx
  412260:	or     DWORD PTR [edx-0x5e],0xffffffc1
  412264:	int3   
  412265:	(bad)  
  412266:	inc    DWORD PTR [esi]
  412268:	int3   
  412269:	dec    DWORD PTR [ecx+0x326bff89]
  41226f:	xchg   esp,eax
  412270:	inc    DWORD PTR [edx+0x3f]
  412273:	into   
  412274:	dec    DWORD PTR [ebx-0x7600a001]
  41227a:	add    bh,bh
  41227c:	dec    DWORD PTR [ebp-0x7633e620]
  412282:	mov    ebp,0xff05ff55
  412287:	inc    eax
  412288:	dec    esp
  41228a:	inc    DWORD PTR [eax]
  41228c:	or     edx,0xffffff96
  41228f:	fiadd  WORD PTR [eax]
  412291:	xlat   BYTE PTR ds:[ebx]
  412292:	push   esp
  412293:	addr16 (bad) 
  412295:	clc    
  412296:	dec    edi
  412298:	int3   
  412299:	(bad)  
  41229a:	inc    DWORD PTR [eax]
  41229c:	int3   
  41229d:	test   al,0xa5
  41229f:	and    edi,edi
  4122a1:	pop    ss
  4122a2:	adc    al,0xef
  4122a4:	dec    DWORD PTR [edx+0x0]
  4122a7:	sbb    al,BYTE PTR [eax]
  4122a9:	inc    DWORD PTR [eax]
  4122ab:	(bad)  
  4122ac:	jmp    DWORD PTR [esi-0x30]
  4122af:	stc    
  4122b0:	int3   
  4122b1:	xchg   edi,eax
  4122b2:	adc    al,0x86
  4122b4:	push   DWORD PTR [eax+eax*1]
  4122b7:	sub    eax,0xff00ff
  4122bc:	add    BYTE PTR [edx+0x5f],ch
  4122bf:	fiadd  WORD PTR [ebx+0x3360c9]
  4122c5:	and    bh,bh
  4122c7:	out    0xff,al
  4122c9:	inc    DWORD PTR [eax]
  4122cb:	(bad)  
  4122cc:	call   FWORD PTR [eax+0x33]
  4122cf:	mov    ebx,0xa17b5800
  4122d4:	add    BYTE PTR [esi-0x5201],dl
  4122da:	int3   
  4122db:	(bad)  
  4122dc:	jmp    FWORD PTR [edi+0x2d]
  4122df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e0:	add    BYTE PTR [eax+0x75],bl
  4122e3:	xchg   edi,eax
  4122e4:	add    BYTE PTR [eax],cl
  4122e6:	add    dh,ch
  4122e8:	dec    esp
  4122ea:	(bad)  
  4122eb:	inc    DWORD PTR [eax]
  4122ed:	and    eax,0x8ccca825
  4122f2:	cld    
  4122f3:	sar    edi,cl
  4122f5:	retf   0xa5ff
  4122f8:	inc    DWORD PTR [eax]
  4122fa:	add    ah,cl
  4122fc:	mov    DWORD PTR ds:0xf8ff99b3,esp
  412302:	mov    ds:0xffbaff27,al
  412307:	sub    al,0x83
  412309:	(bad)  
  41230a:	(bad)  
  41230b:	inc    DWORD PTR [ebx+0xf79b71]
  412311:	fsubr  DWORD PTR [ebx+0x71]
  412314:	adc    DWORD PTR ds:0x89ff9c83,0x0
  41231b:	cmp    edi,0x1e
  41231e:	addr16 mov esi,0xaf9d100
  412324:	add    BYTE PTR [ecx+0x0],bl
  412327:	sub    bh,bh
  412329:	(bad)  
  41232a:	inc    DWORD PTR [ebx-0x7a8ec7d]
  412330:	add    BYTE PTR [ecx+0xf],bh
  412333:	into   
  412334:	int3   
  412335:	inc    ecx
  412336:	(bad)  
  412337:	mov    esi,0xff8900ff
  41233c:	int3   
  41233d:	inc    eax
  41233e:	dec    ebp
  41233f:	fdiv   st(7),st
  412341:	scas   al,BYTE PTR es:[edi]
  412342:	stos   DWORD PTR es:[edi],eax
  412343:	stos   DWORD PTR es:[edi],eax
  412344:	(bad)  
  412345:	mov    edi,0xccd6ff
  41234a:	inc    DWORD PTR [ebx-0x53030e00]
  412350:	add    BYTE PTR [eax],bh
  412352:	mov    cs,esp
  412354:	mov    esi,ecx
  412356:	push   DWORD PTR [edi-0x1]
  412359:	inc    DWORD PTR [eax]
  41235b:	add    BYTE PTR [ecx-0x76dab784],cl
  412361:	(bad)  
  412362:	pop    esi
  412363:	inc    edx
  412364:	int3   
  412365:	and    al,BYTE PTR [eax]
  412367:	pushf  
  412368:	add    BYTE PTR [ecx-0x63337c01],cl
  41236e:	loopne 0x412332
  412370:	add    BYTE PTR [edx+0x70],ch
  412373:	mov    bh,bh
  412375:	fxch   st(4)
  412377:	mov    ?,edi
  412379:	add    ah,cl
  41237b:	cmp    edi,0x45
  41237e:	(bad)  
  41237f:	dec    BYTE PTR [ecx-0x27d640]
  412385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412386:	(bad)  
  412387:	fild   WORD PTR [eax]
  412389:	add    BYTE PTR [eax],al
  41238b:	add    bh,bh
  41238d:	pop    es
  41238e:	sbb    ebp,DWORD PTR [edi-0x4ee7f400]
  412394:	call   edi
  412396:	add    BYTE PTR [edx],dl
  412398:	(bad)  
  412399:	inc    DWORD PTR [eax]
  41239b:	(bad)  
  41239c:	push   esi
  41239e:	cmp    bl,BYTE PTR [edi+edi*8]
  4123a1:	inc    ecx
  4123a2:	push   0xcc02ff70
  4123a7:	out    0x0,al
  4123a9:	add    bh,bh
  4123ab:	inc    DWORD PTR [ebx-0xc3a702]
  4123b1:	mov    al,0xe8
  4123b3:	in     al,0xff
  4123b5:	retf   0xf183
  4123b8:	add    BYTE PTR [eax],al
  4123ba:	(bad)  
  4123bb:	(bad)  
  4123bc:	jmp    edi
  4123be:	sti    
  4123bf:	cmp    eax,0x600485ff
  4123c4:	call   edx
  4123c6:	(bad)  
  4123c7:	jle    0x41234c
  4123c9:	add    BYTE PTR [eax],al
  4123cb:	int3   
  4123cc:	dec    DWORD PTR [edx+ebp*2]
  4123cf:	in     al,dx
  4123d0:	int3   
  4123d1:	pop    esi
  4123d2:	dec    esi
  4123d3:	push   ecx
  4123d4:	push   DWORD PTR [edi+edi*8]
  4123d7:	aam    0x0
  4123d9:	add    BYTE PTR [ecx+0x5a49ccff],cl
  4123df:	(bad)  
  4123e0:	mov    DWORD PTR [edi-0x53],eax
  4123e3:	fiadd  WORD PTR [eax]
  4123e5:	jle    0x4123e7
  4123e7:	imul   ecx,DWORD PTR [ecx-0x340000],0xffffffd2
  4123ee:	and    al,0xc7
  4123f0:	push   DWORD PTR [edi-0x4cff117f]
  4123f6:	add    DWORD PTR [eax],0xffffffff
  4123f9:	inc    DWORD PTR [ebx+0x70cbffff]
  4123ff:	inc    ebx
  412400:	call   DWORD PTR [ecx]
  412402:	or     DWORD PTR [esi],esi
  412404:	jmp    FWORD PTR ds:0xff002fff
  41240a:	add    BYTE PTR [eax],al
  41240c:	add    dh,dh
  41240e:	(bad)  
  41240f:	in     al,0xff
  412411:	ja     0x412432
  412413:	mov    dh,0xff
  412415:	outs   dx,DWORD PTR ds:[esi]
  412416:	dec    DWORD PTR [edi-0x1]
  412419:	inc    DWORD PTR [eax]
  41241b:	int3   
  41241c:	int3   
  41241d:	sti    
  41241e:	mov    eax,0x91b4002c
  412423:	pop    ebx
  412424:	mov    DWORD PTR [ecx],esp
  412426:	inc    eax
  412428:	add    DWORD PTR [eax],0xffffff83
  41242b:	(bad)  
  41242c:	push   ebp
  41242e:	mov    DWORD PTR [ecx-0x1],esi
  412431:	mov    dl,0xa6
  412433:	jmp    0xffff:0x89ff6f00
  41243a:	add    DWORD PTR [ebx+0x222354ff],0xffffffff
  412441:	ins    BYTE PTR es:[edi],dx
  412442:	out    dx,al
  412443:	mov    eax,0xa3ff8ecc
  412448:	inc    DWORD PTR [eax]
  41244a:	int3   
  41244b:	add    BYTE PTR [eax],al
  41244d:	scas   al,BYTE PTR es:[edi]
  41244e:	data16 jns 0x412450
  412451:	pop    esp
  412452:	(bad)  
  412453:	jmp    0x5e4164e1
  412458:	inc    DWORD PTR [eax]
  41245a:	(bad)  
  41245b:	inc    DWORD PTR [ebx+0x1fd1b6]
  412461:	jg     0x412497
  412463:	sar    bh,1
  412465:	hlt    
  412466:	inc    DWORD PTR [edi+edi*8-0xffff01]
  41246d:	loopne 0x412438
  41246f:	and    al,0x0
  412471:	xchg   esp,eax
  412472:	into   
  412473:	jecxz  0x4123f8
  412475:	or     ecx,esp
  412477:	(bad)  
  412478:	inc    DWORD PTR [ebx-0xcff0077]
  41247e:	les    ebp,FWORD PTR [esi-0x663c7b01]
  412484:	add    BYTE PTR [eax-0x1],bl
  412487:	inc    ecx
  412488:	(bad)  
  412489:	(bad)  
  41248a:	inc    DWORD PTR [eax]
  41248c:	add    BYTE PTR [eax-0x4cffe8d8],ch
  412492:	mov    DWORD PTR [ebx],0xb4ccc089
  412498:	inc    DWORD PTR [eax]
  41249a:	mov    edi,edi
  41249c:	jmp    FWORD PTR [edx+ebx*8-0x76]
  4124a0:	adc    DWORD PTR [ebx],0xc
  4124a3:	or     bh,bh
  4124a5:	in     eax,dx
  4124a6:	inc    eax
  4124a8:	(bad)  
  4124a9:	(bad)  
  4124aa:	inc    DWORD PTR [ebx-0x174b5901]
  4124b0:	(bad)  
  4124b1:	call   FWORD PTR [ebx+ebx*2]
  4124b4:	add    ch,dh
  4124b6:	mov    DWORD PTR [ecx+0x0],ebx
  4124b9:	mov    DWORD PTR [eax],eax
  4124bb:	inc    DWORD PTR [eax]
  4124bd:	cmp    ah,BYTE PTR [edx+ebp*1+0x0]
  4124c1:	clc    
  4124c2:	xchg   ebp,eax
  4124c3:	sti    
  4124c4:	jmp    FWORD PTR [esi-0x9401]
  4124ca:	(bad)  
  4124cb:	(bad)  
  4124cc:	push   DWORD PTR [ecx]
  4124ce:	cld    
  4124cf:	leave  
  4124d0:	int3   
  4124d1:	sbb    DWORD PTR [ebp-0x46],edx
  4124d4:	add    ah,bl
  4124d6:	jmp    FWORD PTR [eax+0x0]
  4124d9:	inc    DWORD PTR [ebx+0x1c9fffff]
  4124df:	dec    eax
  4124e0:	inc    DWORD PTR [ebx+0x1fffc07b]
  4124e6:	add    BYTE PTR [esi-0x767cff01],cl
  4124ec:	add    BYTE PTR [edi+edx*2],dh
  4124ef:	sub    al,0x0
  4124f1:	pop    esp
  4124f2:	inc    ecx
  4124f3:	(bad)  
  4124f6:	add    BYTE PTR [eax+0xff00],bl
  4124fc:	add    BYTE PTR [ecx-0x5e338cb4],al
  412502:	pushf  
  412503:	push   0x168324ff
  412508:	inc    DWORD PTR [eax]
  41250a:	add    bh,bh
  41250c:	push   ebp
  41250e:	call   0x96c82447
  412513:	pop    ebx
  412514:	add    bh,cl
  412516:	add    bl,al
  412518:	dec    esp
  41251a:	(bad)  
  41251b:	dec    esp
  41251d:	ins    DWORD PTR es:[edi],dx
  41251e:	ret    
  41251f:	sbb    bh,bh
  412521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412522:	push   ebx
  412523:	loope  0x412524
  412525:	pop    ss
  412526:	add    ch,dh
  412528:	add    BYTE PTR [eax],al
  41252a:	int3   
  41252b:	inc    DWORD PTR [eax]
  41252d:	mov    eax,es
  41252f:	push   edi
  412530:	(bad)  
  412531:	jmp    0x4125a7
  412533:	loopne 0x4124be
  412535:	stos   DWORD PTR es:[edi],eax
  412536:	int3   
  412537:	jbe    0x4124c2
  412539:	add    bh,bh
  41253b:	add    bh,bh
  41253d:	fimul  WORD PTR [edi+edx*4+0x62085000]
  412544:	xor    esp,0xffffffff
  412547:	(bad)  
  412549:	add    BYTE PTR [eax],al
  41254b:	add    BYTE PTR [eax],al
  41254d:	xchg   edx,eax
  41254e:	rcl    DWORD PTR [edi-0x34],1
  412551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412552:	push   edx
  412553:	(bad)  
  412555:	ja     0x412556
  412557:	test   BYTE PTR [ebx-0x76ff0034],al
  41255d:	or     al,0xe
  41255f:	into   
  412560:	jmp    FWORD PTR [ebp-0x4600d017]
  412566:	add    BYTE PTR [edi+edi*8],ah
  412569:	add    bh,bh
  41256b:	dec    esp
  41256d:	popa   
  41256e:	sbb    al,0xc0
  412570:	sbb    ecx,0xffffff8e
  412573:	push   esi
  412574:	and    DWORD PTR [eax],0xffffffff
  412577:	cmp    al,0x89
  412579:	(bad)  
  41257a:	(bad)  
  41257b:	(bad)  
  41257c:	dec    DWORD PTR [ebx-0x1f]
  41257f:	rol    DWORD PTR [eax],1
  412581:	inc    ebx
  412582:	sti    
  412583:	xor    al,0x89
  412585:	mov    cl,0xff
  412587:	popa   
  412588:	cmp    edi,0x0
  41258b:	add    bh,bh
  41258d:	or     ecx,DWORD PTR ds:0x86420041
  412593:	jno    0x412561
  412595:	mov    ecx,0x8900c8ff
  41259a:	add    ah,cl
  41259c:	or     esi,0xffffff97
  41259f:	mov    bh,0x0
  4125a1:	aam    0x30
  4125a3:	inc    esp
  4125a4:	(bad)  
  4125a5:	fild   WORD PTR [eax]
  4125a7:	sub    bh,bh
  4125a9:	inc    DWORD PTR [ebx-0x58f30077]
  4125af:	cmp    bh,0xc7
  4125b2:	push   ebp
  4125b3:	clc    
  4125b4:	inc    eax
  4125b6:	add    BYTE PTR [eax],al
  4125b8:	inc    DWORD PTR [ebx-0x5d000034]
  4125be:	arpl   WORD PTR [edx-0x1],di
  4125c1:	xlat   BYTE PTR ds:[ebx]
  4125c2:	ja     0x412556
  4125c4:	jmp    FWORD PTR [edx-0x7d]
  4125c7:	or     DWORD PTR [ecx-0x7c00007d],0xccd32f7a
  4125d1:	addr16 mov dl,0x5c
  4125d4:	int3   
  4125d5:	retf   
  4125d6:	add    BYTE PTR [ebp-0x7d0000],dl
  4125dc:	inc    DWORD PTR [eax]
  4125de:	scas   al,BYTE PTR es:[edi]
  4125df:	mov    cl,0x83
  4125e1:	fisttp QWORD PTR [ebp+0xe3ffae]
  4125e7:	pop    ebp
  4125e8:	add    DWORD PTR [eax],0xffffffcc
  4125eb:	mov    DWORD PTR [ebx-0x27af4a],eax
  4125f1:	ins    BYTE PTR es:[edi],dx
  4125f2:	(bad)  
  4125f3:	xlat   BYTE PTR ds:[ebx]
  4125f4:	add    BYTE PTR [ebp-0x1],bl
  4125f7:	(bad)  
  4125f8:	dec    DWORD PTR [ecx+0x7000ccff]
  4125fe:	jmp    0x455a26de
  412603:	jns    0x412604
  412605:	imul   edi,edi,0x4d
  412608:	add    DWORD PTR [eax],0xffffffff
  41260b:	or     esp,0xffffffda
  41260e:	pop    esi
  41260f:	aad    0xff
  412611:	jo     0x4125c2
  412613:	iret   
  412614:	(bad)  
  412615:	in     al,dx
  412616:	jmp    DWORD PTR [edx]
  412618:	add    bh,bh
  41261a:	(bad)  
  41261b:	dec    DWORD PTR [ecx-0x7cd74d54]
  412621:	mov    al,BYTE PTR [edi+ecx*8]
  412624:	jmp    DWORD PTR [eax-0xff4434]
  41262a:	add    DWORD PTR [ebx-0x652db900],0x0
  412631:	mov    ds,WORD PTR [esp+edi*8-0x7a33d47d]
  412638:	add    bh,bh
  41263a:	dec    DWORD PTR [ecx+0x4c907783]
  412640:	add    DWORD PTR [ecx+0x28],0xfffffff6
  412644:	inc    DWORD PTR [edi-0x1]
  412647:	and    BYTE PTR [eax],al
  412649:	add    bh,bh
  41264b:	add    bh,bh
  41264d:	and    DWORD PTR [ebx],esi
  41264f:	mov    eax,ds:0x939300
  412654:	add    bl,ch
  412656:	or     DWORD PTR [edx-0x33337d],0xffffff83
  41265d:	inc    esp
  41265e:	mov    al,ds:0x7a5e0065
  412663:	(bad)  
  412664:	inc    ecx
  412666:	add    BYTE PTR [edi-0x7c000100],bl
  41266c:	or     DWORD PTR [eax+0x54],0xffffffb3
  412670:	(bad)  
  412671:	stc    
  412672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412674:	call   ebx
  412676:	dec    DWORD PTR [eax]
  412678:	(bad)  
  412679:	inc    DWORD PTR [ebx-0x7d950100]
  41267f:	mov    bh,0xff
  412681:	dec    BYTE PTR [ecx-0x41009a]
  412687:	fld    QWORD PTR [ebx+0xff0000]
  41268d:	ret    0x6f91
  412690:	call   FWORD PTR [esi]
  412692:	dec    esi
  412693:	add    al,0x83
  412695:	and    DWORD PTR [ecx-0xff00ec],ecx
  41269b:	inc    DWORD PTR [ebx-0xa09ae2]
  4126a1:	adc    BYTE PTR [ebx-0x7a0006],al
  4126a7:	daa    
  4126a8:	add    BYTE PTR [eax],al
  4126aa:	add    BYTE PTR [eax],al
  4126ac:	dec    eax
  4126ae:	repz in eax,dx
  4126b0:	add    BYTE PTR [ebx],dh
  4126b2:	pop    ebx
  4126b3:	fiadd  DWORD PTR [eax]
  4126b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b6:	add    BYTE PTR [edi-0x1],dl
  4126b9:	int3   
  4126ba:	add    bh,bh
  4126bc:	add    BYTE PTR [ecx+0x6a837a26],dl
  4126c2:	stos   DWORD PTR es:[edi],eax
  4126c3:	leave  
  4126c4:	int3   
  4126c5:	data16 add BYTE PTR [edi+edi*8],ch
  4126c9:	int3   
  4126ca:	add    bh,bh
  4126cc:	add    BYTE PTR [eax],bh
  4126ce:	int    0x81
  4126d0:	add    bl,cl
  4126d2:	pop    es
  4126d3:	out    dx,eax
  4126d4:	inc    DWORD PTR [eax-0x34]
  4126d7:	jne    0x412662
  4126d9:	inc    DWORD PTR [eax]
  4126db:	(bad)  
  4126dc:	push   esp
  4126de:	xor    al,0x70
  4126e0:	call   DWORD PTR [eax-0x1]
  4126e3:	mov    esi,0x13834183
  4126e8:	(bad)  
  4126e9:	inc    DWORD PTR [eax]
  4126eb:	(bad)  
  4126ec:	call   DWORD PTR [eax+0x31]
  4126ef:	jb     0x4126f0
  4126f1:	mov    al,0x5b
  4126f3:	pop    edx
  4126f4:	dec    DWORD PTR [edi]
  4126f6:	push   DWORD PTR [edi+0xff00ff]
  4126fc:	add    al,al
  4126fe:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  412700:	dec    DWORD PTR [ecx]
  412702:	sbb    al,0x79
  412704:	dec    eax
  412706:	sbb    DWORD PTR [esi-0x767d00],0xffffff83
  41270d:	int    0x80
  41270f:	mov    dh,0xff
  412711:	jmp    0xba41e7f2
  412716:	add    BYTE PTR [ecx+0xffcc00],al
  41271c:	xor    DWORD PTR [ebx-0x7a003631],0xfffffffa
  412723:	repnz add dl,cl
  412726:	jmp    FWORD PTR ds:0x83ff0089
  41272c:	(bad)  
  41272d:	jge    0x412725
  41272f:	mov    ds:0x24571dff,eax
  412734:	push   DWORD PTR [edi+0x0]
  412737:	add    al,BYTE PTR [eax]
  412739:	inc    DWORD PTR [eax]
  41273b:	inc    DWORD PTR [eax]
  41273d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273e:	add    eax,0xe03e833a
  412743:	sbb    DWORD PTR ss:[ebx-0x34],0xffffffde
  412748:	add    DWORD PTR [ebx-0x65000100],0xc
  41274f:	inc    DWORD PTR [ebx-0x2ab2eb]
  412755:	jb     0x412757
  412757:	pop    es
  412758:	int3   
  412759:	(bad)  
  41275a:	dec    DWORD PTR [ecx+0x5033a5ff]
  412760:	inc    DWORD PTR [edx]
  412762:	cmp    DWORD PTR [ebp-0x1],esi
  412765:	out    dx,al
  412766:	add    bh,cl
  412768:	dec    esp
  41276a:	dec    esp
  41276c:	mov    DWORD PTR [ebx-0x45],ecx
  41276f:	add    al,BYTE PTR [ebx-0x921546]
  412775:	jae    0x412776
  412777:	or     eax,0xff
  41277c:	(bad)  
  41277d:	mov    esi,0xb88326e5
  412782:	cdq    
  412783:	cmp    cl,ah
  412785:	adc    al,0x0
  412787:	mov    DWORD PTR ss:[eax],eax
  41278a:	(bad)  
  41278b:	dec    DWORD PTR [ecx-0xe2c87a]
  412791:	test   BYTE PTR [eax+0x1b],0xff
  412795:	or     BYTE PTR [ebx-0x760000eb],al
  41279b:	add    BYTE PTR [eax],al
  41279d:	xchg   esp,eax
  41279e:	ins    DWORD PTR es:[edi],dx
  41279f:	call   FWORD PTR es:[esi+0x5d008e8e]
  4127a6:	add    BYTE PTR [ebx-0x1],al
  4127a9:	cmp    edi,0xffffffcc
  4127ac:	int3   
  4127ad:	mov    dh,0x5c
  4127af:	and    bh,bh
  4127b1:	sbb    al,0xa2
  4127b3:	pop    DWORD PTR [eax]
  4127b5:	cmp    ecx,DWORD PTR [ecx-0x7cff7c]
  4127bb:	add    BYTE PTR [ebx-0x915308],al
  4127c1:	aaa    
  4127c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c3:	and    DWORD PTR [ebx-0x3396ffa3],eax
  4127c9:	(bad)  
  4127ca:	inc    DWORD PTR [ebx+0x6d0da800]
  4127d0:	int3   
  4127d1:	out    dx,al
  4127d2:	sar    DWORD PTR [ecx],cl
  4127d4:	inc    DWORD PTR ds:0xff006b00
  4127da:	dec    DWORD PTR [ecx-0x5e562000]
  4127e0:	add    BYTE PTR [edi],dl
  4127e2:	adc    dh,BYTE PTR [ecx+0x5fffd83]
  4127e8:	int3   
  4127e9:	mov    DWORD PTR [ecx+0x55aa0000],ecx
  4127ef:	push   0xffffffff
  4127f1:	inc    ecx
  4127f2:	out    dx,al
  4127f3:	lods   al,BYTE PTR ds:[esi]
  4127f4:	add    BYTE PTR [ebp-0x33006401],cl
  4127fa:	add    BYTE PTR [ebx+0x273656cc],al
  412800:	jmp    DWORD PTR [ebx+0x1d]
  412803:	and    bh,bh
  412805:	xchg   BYTE PTR [ecx-0x76ffffd9],cl
  41280b:	inc    DWORD PTR [eax]
  41280d:	mov    bh,BYTE PTR [edi-0x23]
  412810:	(bad)  
  412811:	aas    
  412812:	xor    bl,BYTE PTR [edx-0x27005c01]
  412818:	(bad)  
  412819:	(bad)  
  41281a:	(bad)  
  41281b:	(bad)  
  41281c:	push   DWORD PTR [edi+0xbff1cc7]
  412822:	jl     0x41282a
  412824:	call   FWORD PTR [edx-0x77]
  412827:	xchg   edi,edi
  412829:	cmp    edi,0xffffff89
  41282c:	call   FWORD PTR [edx-0x1576993e]
  412832:	ficomp DWORD PTR [edx-0x1]
  412835:	mov    edx,0xcc00a000
  41283a:	inc    DWORD PTR [ebx-0x4e17a900]
  412840:	mov    edx,DWORD PTR ds:0x447d00
  412846:	mov    ecx,DWORD PTR ds:0x447084
  41284c:	sub    esp,0x8
  41284f:	push   esi
  412850:	push   edi
  412851:	add    edx,0x9e70
  412857:	mov    esi,0x119
  41285c:	lea    esp,[esp+0x0]
  412860:	movzx  eax,WORD PTR [ecx+0x4]
  412864:	movzx  ecx,WORD PTR [ecx]
  412867:	shl    eax,0x10
  41286a:	add    eax,ecx
  41286c:	mov    ecx,DWORD PTR ds:0x447cfc
  412872:	sub    ecx,0x80040004
  412878:	neg    ecx
  41287a:	sbb    ecx,ecx
  41287c:	and    ecx,0x137ec0d0
  412882:	add    ecx,0xec818085
  412888:	xor    ecx,eax
  41288a:	mov    ds:0x447cf0,eax
  41288f:	mov    DWORD PTR [edx],ecx
  412891:	mov    ecx,DWORD PTR ds:0x447084
  412897:	add    ecx,0x8
  41289a:	mov    DWORD PTR ds:0x447084,ecx
  4128a0:	movzx  eax,WORD PTR [ecx+0x4]
  4128a4:	movzx  ecx,WORD PTR [ecx]
  4128a7:	shl    eax,0x10
  4128aa:	add    eax,ecx
  4128ac:	mov    ecx,DWORD PTR ds:0x447cfc
  4128b2:	sub    ecx,0x80040004
  4128b8:	neg    ecx
  4128ba:	sbb    ecx,ecx
  4128bc:	and    ecx,0x137ec0d0
  4128c2:	add    ecx,0xec818085
  4128c8:	xor    ecx,eax
  4128ca:	mov    ds:0x447cf0,eax
  4128cf:	mov    DWORD PTR [edx+0x4],ecx
  4128d2:	mov    ecx,DWORD PTR ds:0x447084
  4128d8:	add    ecx,0x8
  4128db:	add    edx,0x8
  4128de:	dec    esi
  4128df:	mov    DWORD PTR ds:0x447084,ecx
  4128e5:	jne    0x412860
  4128eb:	mov    edi,DWORD PTR ds:0x447d00
  4128f1:	mov    esi,DWORD PTR [esp+0x14]
  4128f5:	push   ebx
  4128f6:	push   ebp
  4128f7:	mov    ebp,DWORD PTR ds:0x444028
  4128fd:	add    edi,0xa738
  412903:	add    esi,0x2
  412906:	mov    ebx,0x105
  41290b:	jmp    0x412910
  41290d:	lea    ecx,[ecx+0x0]
  412910:	movzx  edx,BYTE PTR [esi+0x4]
  412914:	movzx  eax,BYTE PTR [esi]
  412917:	movzx  ecx,WORD PTR [esi-0x2]
  41291b:	shl    edx,0x8
  41291e:	add    edx,eax
  412920:	shl    edx,0x10
  412923:	add    edx,ecx
  412925:	mov    DWORD PTR ds:0x447cf0,edx
  41292b:	lea    edx,[esp+0x10]
  41292f:	push   edx
  412930:	lea    eax,[esp+0x18]
  412934:	push   eax
  412935:	push   0x9acb4cdb
  41293a:	call   ebp
  41293c:	mov    ecx,DWORD PTR ds:0x447cfc
  412942:	add    ecx,0xfa7722fd
  412948:	xor    ecx,DWORD PTR ds:0x447cf0
  41294e:	add    edi,0x8
  412951:	mov    DWORD PTR [edi-0x8],ecx
  412954:	movzx  eax,BYTE PTR [esi+0xd]
  412958:	movzx  edx,BYTE PTR [esi+0x9]
  41295c:	movzx  ecx,WORD PTR [esi+0x6]
  412960:	shl    eax,0x8
  412963:	add    eax,edx
  412965:	shl    eax,0x10
  412968:	mov    edx,0xfa7f2305
  41296d:	sub    edx,DWORD PTR ds:0x447cfc
  412973:	add    eax,ecx
  412975:	xor    edx,eax
  412977:	mov    ds:0x447cf0,eax
  41297c:	mov    DWORD PTR [edi-0x4],edx
  41297f:	add    esi,0x10
  412982:	dec    ebx
  412983:	jne    0x412910
  412985:	mov    ecx,DWORD PTR ds:0x447d00
  41298b:	mov    edx,DWORD PTR ds:0x447088
  412991:	pop    ebp
  412992:	add    ecx,0xaf60
  412998:	mov    esi,0x173
  41299d:	pop    ebx
  41299e:	mov    edi,edi
  4129a0:	movzx  eax,WORD PTR [edx+0x9]
  4129a4:	movzx  edi,BYTE PTR [edx+0x4]
  4129a8:	movzx  edx,BYTE PTR [edx]
  4129ab:	shl    eax,0x8
  4129ae:	add    eax,edi
  4129b0:	shl    eax,0x8
  4129b3:	add    eax,edx
  4129b5:	mov    edx,DWORD PTR ds:0x447cfc
  4129bb:	add    edx,0xc2d5e089
  4129c1:	xor    edx,eax
  4129c3:	mov    ds:0x447cf0,eax
  4129c8:	mov    DWORD PTR [ecx],edx
  4129ca:	mov    edx,DWORD PTR ds:0x447088
  4129d0:	movzx  eax,BYTE PTR [edx+0xf]
  4129d4:	movzx  edi,WORD PTR [edx+0xd]
  4129d8:	movzx  edx,BYTE PTR [edx+0xb]
  4129dc:	shl    eax,0x10
  4129df:	add    eax,edi
  4129e1:	shl    eax,0x8
  4129e4:	add    eax,edx
  4129e6:	mov    edx,DWORD PTR ds:0x447cfc
  4129ec:	xor    edx,eax
  4129ee:	xor    edx,0xc2dde089
  4129f4:	mov    ds:0x447cf0,eax
  4129f9:	mov    DWORD PTR [ecx+0x4],edx
  4129fc:	mov    edx,DWORD PTR ds:0x447088
  412a02:	add    edx,0x10
  412a05:	add    ecx,0x8
  412a08:	dec    esi
  412a09:	mov    DWORD PTR ds:0x447088,edx
  412a0f:	jne    0x4129a0
  412a11:	pop    edi
  412a12:	pop    esi
  412a13:	add    esp,0x8
  412a16:	ret    
  412a17:	int3   
  412a18:	int3   
  412a19:	int3   
  412a1a:	int3   
  412a1b:	int3   
  412a1c:	int3   
  412a1d:	int3   
  412a1e:	int3   
  412a1f:	int3   
  412a20:	add    BYTE PTR [edi],ah
  412a22:	mov    ecx,0xa100ff00
  412a27:	call   DWORD PTR [ecx]
  412a29:	add    bh,bh
  412a2b:	int3   
  412a2c:	mov    cl,0xff
  412a2e:	adc    cl,BYTE PTR [eax]
  412a30:	push   esp
  412a32:	jl     0x412a00
  412a34:	mov    edi,edi
  412a36:	je     0x4129cb
  412a38:	popf   
  412a39:	mov    edi,edi
  412a3b:	jmp    FWORD PTR [edi+edi*8-0x32006a96]
  412a42:	push   edx
  412a43:	add    BYTE PTR [ecx-0x9310001],cl
  412a49:	(bad)  
  412a4a:	dec    esp
  412a4c:	mov    al,ds:0xf9fd00
  412a51:	mov    bl,0x78
  412a53:	(bad)  
  412a54:	(bad)  
  412a55:	call   ecx
  412a57:	push   ebx
  412a58:	out    0x89,eax
  412a5a:	inc    DWORD PTR [ebx-0x1828ffde]
  412a60:	add    bl,ch
  412a62:	push   edi
  412a63:	add    BYTE PTR [ebx+0x4cfaceff],al
  412a69:	add    bh,bh
  412a6b:	jmp    DWORD PTR [eax]
  412a6d:	push   DWORD PTR [edx]
  412a6f:	loopne 0x412a70
  412a71:	jno    0x412a2d
  412a73:	cmp    edi,0x0
  412a76:	ja     0x412a78
  412a78:	add    al,0x0
  412a7a:	(bad)  
  412a7b:	push   DWORD PTR [esi-0xbc2b01]
  412a81:	jbe    0x412a9e
  412a83:	(bad)  
  412a84:	inc    DWORD PTR [eax]
  412a86:	xchg   esp,eax
  412a87:	sub    DWORD PTR [ebx],esi
  412a89:	inc    DWORD PTR [eax]
  412a8b:	cmp    ebx,0xffffffff
  412a8e:	imul   edi,DWORD PTR [eax+eax*1+0x36],0x1e
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ecx*4+0x89ff41],al
  412a9c:	jb     0x412a21
  412a9e:	jg     0x412a33
  412aa0:	dec    DWORD PTR [ecx]
  412aa2:	mov    edi,0x65ffff89
  412aa7:	pop    esp
  412aa8:	call   0x804229ad
  412aad:	add    BYTE PTR [eax+0x5de0063],dh
  412ab3:	inc    DWORD PTR [eax]
  412ab5:	add    BYTE PTR [edi-0xf],bh
  412ab8:	inc    DWORD PTR cs:[eax]
  412abb:	adc    DWORD PTR [edi-0x603101],0xffffff83
  412ac2:	push   ebp
  412ac3:	int3   
  412ac4:	inc    DWORD PTR [eax]
  412ac6:	dec    ecx
  412ac7:	push   cs
  412ac8:	push   edi
  412ac9:	int3   
  412aca:	add    BYTE PTR [ebx-0x7ef87c2f],al
  412ad0:	add    BYTE PTR [edx],cl
  412ad2:	xor    edi,edi
  412ad4:	(bad)  
  412ad5:	jmp    DWORD PTR [eax-0x65]
  412ad8:	enter  0xffff,0xff
  412adc:	ror    esp,0xf6
  412adf:	out    0x0,eax
  412ae1:	cs xor al,0xff
  412ae4:	inc    DWORD PTR [eax]
  412ae6:	mov    bl,0xc3
  412ae8:	sar    bh,cl
  412aea:	cmp    edi,0xfffffff8
  412aed:	push   DWORD PTR ds:0xdbd00007
  412af3:	add    BYTE PTR [ebx+0x2fa5ceff],al
  412af9:	inc    DWORD PTR [ebx+0x510053ff]
  412aff:	cli    
  412b00:	add    ah,al
  412b02:	(bad)
  412b05:	int3   
  412b06:	or     BYTE PTR [esi],cl
  412b08:	repz add bh,bh
  412b0b:	mov    DWORD PTR [eax-0x7c551201],ebx
  412b11:	fisttp DWORD PTR [ecx-0x21010000]
  412b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b18:	mov    eax,ds:0x88ff89ff
  412b1d:	add    BYTE PTR [edi-0x2c4d33ff],dl
  412b23:	(bad)  
  412b24:	inc    DWORD PTR [eax]
  412b26:	push   esp
  412b27:	or     eax,0x8900cca8
  412b2c:	push   0x0
  412b2e:	dec    edi
  412b2f:	adc    eax,DWORD PTR [eax]
  412b31:	cmp    cl,bh
  412b33:	(bad)  
  412b34:	(bad)  
  412b35:	inc    DWORD PTR [edi+ebx*2]
  412b38:	mov    edi,0x7083ffcc
  412b3d:	or     edx,0xffffffad
  412b40:	push   DWORD PTR [eax]
  412b42:	aam    0xff
  412b44:	dec    DWORD PTR [ecx-0x33f8ea4f]
  412b4a:	(bad)  
  412b4b:	dec    DWORD PTR [ebx]
  412b4d:	int3   
  412b4e:	mov    ebp,0xf017cc38
  412b53:	(bad)  
  412b54:	(bad)  
  412b55:	call   DWORD PTR [ebx+esi*1+0xff0059]
  412b5c:	push   esp
  412b5d:	mov    esp,ebx
  412b5f:	or     bh,bh
  412b61:	test   eax,0xff8900d7
  412b66:	or     eax,0xff83e7e4
  412b6b:	call   DWORD PTR [ecx-0x77]
  412b6e:	jl     0x412b5f
  412b70:	add    BYTE PTR [ebx+0x5e],dl
  412b73:	add    BYTE PTR [ebx+0x91ea0ff],al
  412b79:	dec    DWORD PTR [ecx-0x5c002277]
  412b7f:	fs add dl,dl
  412b82:	std    
  412b83:	(bad)  
  412b84:	(bad)  
  412b85:	dec    DWORD PTR [esi-0xff77b4]
  412b8b:	and    DWORD PTR [ecx+ecx*4],0xffffffe6
  412b8f:	mov    dl,0x0
  412b91:	loopne 0x412bb9
  412b93:	dec    DWORD PTR [ecx-0x209bc701]
  412b99:	inc    DWORD PTR [eax]
  412b9b:	int3   
  412b9c:	pop    edi
  412b9d:	adc    DWORD PTR [ebx+0x7a],0x0
  412ba1:	mov    ch,0xd
  412ba3:	inc    DWORD PTR [eax]
  412ba5:	adc    ebp,0xffffff97
  412ba8:	repnz (bad) 
  412baa:	inc    DWORD PTR [ebx+0x26d2fff6]
  412bb0:	push   DWORD PTR [eax]
  412bb2:	push   ecx
  412bb3:	dec    esp
  412bb5:	add    BYTE PTR [edi+eax*8],al
  412bb8:	push   edi
  412bb9:	add    BYTE PTR [eax],al
  412bbb:	add    BYTE PTR [eax+eax*1-0x7bffe66d],dl
  412bc2:	ror    ah,0x89
  412bc5:	cmp    DWORD PTR [esi-0x7c0fee],0x0
  412bcc:	push   eax
  412bcd:	call   DWORD PTR [ebx]
  412bcf:	inc    edx
  412bd0:	push   DWORD PTR [edx]
  412bd2:	inc    WORD PTR [eax]
  412bd5:	add    BYTE PTR [esi],ch
  412bd7:	iret   
  412bd8:	pop    ecx
  412bd9:	inc    DWORD PTR [ebx+0x2700a1ff]
  412bdf:	sar    edi,1
  412be1:	mov    ah,0x20
  412be3:	(bad)  
  412be4:	(bad)  
  412be5:	(bad)  
  412be6:	cmp    DWORD PTR [ecx+0xcc00e7],esi
  412bec:	hlt    
  412bed:	add    BYTE PTR [edi+edx*1-0x1],cl
  412bf1:	push   0x20
  412bf3:	mov    DWORD PTR [ecx+0x28d05683],ecx
  412bf9:	(bad)  
  412bfa:	(bad)  
  412bfb:	call   FWORD PTR [ecx]
  412bfd:	add    ch,bh
  412bff:	cmc    
  412c00:	cmp    edx,0x2c
  412c03:	(bad)  
  412c04:	(bad)  
  412c05:	jmp    DWORD PTR [eax]
  412c07:	mov    ds:0xcc0083e4,eax
  412c0c:	jecxz  0x412c0d
  412c0e:	fcom   st(3)
  412c10:	call   FWORD PTR [ebp-0x31]
  412c13:	inc    DWORD PTR [eax]
  412c15:	sub    DWORD PTR [ebp+edi*1-0xff00a4],0xffffffa1
  412c1d:	add    cl,dl
  412c1f:	hlt    
  412c20:	inc    DWORD PTR [ebx]
  412c22:	mov    bl,0xcc
  412c24:	inc    DWORD PTR [ebx-0x33d1802f]
  412c2a:	mov    edi,edi
  412c2c:	js     0x412bb7
  412c2e:	lahf   
  412c2f:	add    BYTE PTR [eax],al
  412c31:	frstor [ebp-0x1276ff01]
  412c37:	sub    eax,0xff000031
  412c3c:	pop    ecx
  412c3d:	sub    ebx,0x68
  412c40:	dec    ebp
  412c42:	pop    eax
  412c43:	cmp    edi,0xffffffff
  412c46:	cmp    ebp,DWORD PTR [eax+edi*2-0x34]
  412c4a:	mov    edi,edi
  412c4c:	in     eax,dx
  412c4d:	add    BYTE PTR [eax],dl
  412c4f:	xchg   esp,eax
  412c50:	and    DWORD PTR [ecx-0x7c76004d],0xffffffac
  412c57:	mov    bh,0x2a
  412c59:	(bad)  
  412c5a:	(bad)  
  412c5b:	call   DWORD PTR [esi+0x0]
  412c5e:	nop    DWORD PTR [ecx-0xe3cf]
  412c65:	push   DWORD PTR [esi-0xffeb32]
  412c6b:	int3   
  412c6c:	push   ss
  412c6d:	add    BYTE PTR [esi*4-0xa9300],dh
  412c74:	inc    DWORD PTR [ebx+0x8a3e2f]
  412c7a:	(bad)  
  412c7b:	call   FWORD PTR [edi]
  412c7d:	sbb    DWORD PTR [edi*4-0x33c75101],0xffffff83
  412c85:	(bad)  
  412c86:	cmp    ch,BYTE PTR ds:0xff89ff0e
  412c8c:	out    0xff,al
  412c8e:	leave  
  412c8f:	mov    ebp,0x89cd0389
  412c94:	add    BYTE PTR [eax],al
  412c96:	bound  esi,QWORD PTR [esi]
  412c98:	fdivp  st(7),st
  412c9a:	inc    DWORD PTR [eax]
  412c9c:	mov    edi,?
  412c9e:	and    eax,0xe7e1ffe6
  412ca3:	inc    DWORD PTR [eax]
  412ca5:	add    DWORD PTR [eax-0x71],0xffffffae
  412ca9:	int3   
  412caa:	inc    DWORD PTR [eax]
  412cac:	pusha  
  412cad:	mov    ecx,eax
  412caf:	sub    eax,0xff9b1c00
  412cb4:	add    bh,bh
  412cb6:	test   DWORD PTR [edi-0xffff34],esp
  412cbc:	cmp    bh,0xa7
  412cbf:	mov    ?,edi
  412cc1:	lods   eax,DWORD PTR ds:[esi]
  412cc2:	pop    esi
  412cc3:	add    BYTE PTR [eax],al
  412cc5:	int3   
  412cc6:	lahf   
  412cc7:	sti    
  412cc8:	jno    0x412c4d
  412cca:	(bad)  
  412ccb:	push   esp
  412ccd:	push   DWORD PTR [ecx-0xf]
  412cd0:	cmp    edx,0xffffff92
  412cd3:	(bad)  
  412cd4:	inc    DWORD PTR [ebx-0x3485a3]
  412cda:	inc    DWORD PTR [eax]
  412cdc:	pop    esi
  412cdd:	mov    DWORD PTR [ebp-0x20],esi
  412ce0:	jmp    DWORD PTR [esi+ecx*2-0x38007d00]
  412ce7:	adc    eax,0xffff000a
  412cec:	ds (bad) 
  412cee:	(bad)  
  412cf0:	call   FWORD PTR [esi+0xccff2b]
  412cf6:	test   eax,0x89ffb6c5
  412cfb:	call   esp
  412cfd:	call   DWORD PTR [ebx-0x5cc7006e]
  412d03:	cmp    edi,0xffffffff
  412d06:	mov    dl,0xd8
  412d08:	rol    BYTE PTR [ebx+0x9883ff],cl
  412d0e:	sbb    eax,0x5d5200f3
  412d13:	inc    DWORD PTR [eax]
  412d15:	add    BYTE PTR [ebx-0x79],cl
  412d18:	mov    bh,bh
  412d1a:	(bad)  
  412d1b:	call   FWORD PTR [edx-0x7d]
  412d1e:	outs   dx,BYTE PTR ds:[esi]
  412d1f:	jae    0xffc46a9e
  412d25:	push   DWORD PTR [edx+ebp*1+0xcc00e6]
  412d2c:	jbe    0x412d2d
  412d2e:	cmp    BYTE PTR [ecx-0x1],al
  412d31:	mov    DWORD PTR [ebp+0x72ffffff],eax
  412d37:	sub    eax,edx
  412d39:	inc    DWORD PTR [ebx+0x3100daff]
  412d3f:	popf   
  412d40:	inc    DWORD PTR [ebp+0x3]
  412d43:	int3   
  412d44:	mov    DWORD PTR [eax],eax
  412d46:	mov    eax,0x83ff431c
  412d4b:	add    BYTE PTR [ebx+eax*4],bh
  412d4e:	mov    al,0x84
  412d50:	mov    DWORD PTR [ebp-0x33337ca6],ebp
  412d56:	cld    
  412d57:	adc    eax,0xffff8309
  412d5c:	xchg   esp,eax
  412d5d:	add    cl,bl
  412d5f:	sbb    DWORD PTR [eax],eax
  412d61:	repz enter 0x89,0x89
  412d66:	xor    DWORD PTR [ecx],esi
  412d68:	pop    ds
  412d69:	add    bh,bh
  412d6b:	mov    DWORD PTR [ebx+0x0],edx
  412d6e:	add    esp,DWORD PTR [eax-0x7d]
  412d71:	and    edi,edx
  412d73:	mov    edi,edi
  412d75:	(bad)  
  412d76:	mov    edi,0xffbdbf
  412d7b:	inc    esp
  412d7d:	call   esp
  412d7f:	iret   
  412d80:	(bad)  
  412d81:	cmp    eax,DWORD PTR [edx+0x0]
  412d84:	dec    DWORD PTR [ecx-0x64981b]
  412d8a:	dec    esp
  412d8c:	jbe    0x412d8e
  412d8e:	les    ebp,FWORD PTR [eax]
  412d90:	(bad)  
  412d91:	jge    0x412d64
  412d93:	add    bh,bh
  412d95:	int3   
  412d96:	mov    al,ch
  412d98:	pop    edi
  412d99:	mov    edi,edi
  412d9b:	call   edx
  412d9d:	add    BYTE PTR [ecx-0x91933cc],ah
  412da3:	(bad)  
  412da4:	dec    esp
  412da6:	sub    esp,DWORD PTR [eax+0xff8380]
  412dac:	mov    bl,0xff
  412dae:	(bad)  
  412daf:	call   0xff74f03d
  412db4:	int3   
  412db5:	call   FWORD PTR [edx-0x47]
  412db8:	test   DWORD PTR [ebx-0x33db0000],0xd2cca904
  412dc2:	out    dx,al
  412dc3:	(bad)  
  412dc4:	(bad)  
  412dc5:	dec    ecx
  412dc7:	lea    eax,[edi-0x77]
  412dca:	inc    DWORD PTR [eax]
  412dcc:	sub    bh,bh
  412dce:	adc    bh,BYTE PTR [eax-0x7c368901]
  412dd4:	add    BYTE PTR [eax],al
  412dd6:	sbb    edi,eax
  412dd8:	(bad)  
  412dd9:	(bad)  
  412dda:	(bad)  
  412ddb:	push   DWORD PTR [edi-0xdfb434]
  412de1:	call   0xe995:0x8989ff87
  412de8:	mov    bl,0x83
  412dea:	(bad)  
  412deb:	inc    DWORD PTR [edi+edi*8+0x5a]
  412def:	inc    esp
  412df0:	dec    DWORD PTR [eax+0x3b]
  412df3:	add    bh,bh
  412df5:	add    BYTE PTR [esi+0x6a16],ch
  412dfb:	add    BYTE PTR [ecx],ah
  412dfd:	add    cl,bh
  412dff:	stos   BYTE PTR es:[edi],al
  412e00:	mov    DWORD PTR [edx-0x2],ebp
  412e03:	(bad)  
  412e04:	(bad)  
  412e05:	call   DWORD PTR [eax+ebx*1-0x80]
  412e09:	add    BYTE PTR [ebx-0xe008101],al
  412e0f:	adc    eax,0x62efff
  412e14:	inc    DWORD PTR [ebx+0x38c69a]
  412e1a:	dec    esp
  412e1c:	adc    eax,DWORD PTR [eax]
  412e1e:	jmp    0x70e32e22
  412e23:	inc    DWORD PTR [ebx+0x59d07783]
  412e29:	inc    DWORD PTR [eax]
  412e2b:	jmp    DWORD PTR [esi]
  412e2d:	add    BYTE PTR [edx+0x4c568912],bh
  412e33:	add    bh,bh
  412e35:	add    BYTE PTR [esi+0xff8a64],bl
  412e3b:	push   ebx
  412e3d:	(bad)  
  412e3e:	cld    
  412e3f:	icebp  
  412e40:	jmp    FWORD PTR [eax]
  412e42:	cs add bh,bh
  412e45:	and    esp,0x20
  412e48:	adc    BYTE PTR [ebx-0x6d007d],al
  412e4e:	cmp    eax,0x92080081
  412e53:	inc    DWORD PTR [eax]
  412e55:	int3   
  412e56:	sub    DWORD PTR [ebx],ebp
  412e58:	sbb    DWORD PTR [ebx-0x5e0001],eax
  412e5e:	not    edi
  412e60:	add    BYTE PTR [ebp+0x16],al
  412e63:	(bad)  
  412e64:	(bad)  
  412e65:	dec    ebp
  412e67:	xchg   esp,eax
  412e68:	sbb    BYTE PTR [eax],al
  412e6a:	or     DWORD PTR [ecx-0x41230098],0xffffffff
  412e71:	dec    edi
  412e72:	mov    edi,edi
  412e74:	inc    DWORD PTR [ebx-0xf27abf]
  412e7a:	(bad)  
  412e7b:	call   esi
  412e7d:	add    cl,cl
  412e7f:	sub    eax,DWORD PTR [eax]
  412e81:	mov    BYTE PTR [edi-0x77],ch
  412e84:	add    BYTE PTR [eax],al
  412e86:	pop    esp
  412e87:	imul   esp,DWORD PTR [esi+0x6e83ffff],0xffffffff
  412e8e:	mov    ah,0xa7
  412e90:	mov    DWORD PTR [ebx],ebx
  412e92:	gs int3 
  412e94:	add    BYTE PTR [eax],al
  412e96:	cs lock (bad) 
  412e99:	int3   
  412e9a:	inc    DWORD PTR [eax]
  412e9c:	sbb    edi,edi
  412e9e:	sbb    esi,DWORD PTR [ebx-0x1]
  412ea1:	inc    edi
  412ea2:	sub    al,BYTE PTR [ebx-0x17de0034]
  412ea8:	mov    BYTE PTR [eax],0xff
  412eab:	(bad)  
  412eac:	cmp    DWORD PTR [ebx-0x4e7c71ba],eax
  412eb2:	test   DWORD PTR [eax],eax
  412eb4:	(bad)  
  412eb5:	call   DWORD PTR [eax+esi*2+0x4]
  412eb9:	inc    DWORD PTR [eax]
  412ebb:	xor    DWORD PTR [eax+eax*1],0xffffff9d
  412ebf:	call   0xffff:0x2ab500
  412ec6:	dec    edi
  412ec7:	call   0xffe1:0xff00832a
  412ece:	fdiv   st(7),st
  412ed1:	inc    eax
  412ed2:	fcos   
  412ed4:	add    ah,cl
  412ed6:	loope  0x412e6f
  412ed8:	out    dx,al
  412ed9:	add    BYTE PTR [eax],al
  412edb:	(bad)  
  412edc:	cmp    al,BYTE PTR [ebx-0x78ff9025]
  412ee2:	ret    0xffff
  412ee5:	int3   
  412ee6:	and    al,0xc2
  412ee8:	sub    al,0x83
  412eea:	int3   
  412eeb:	add    BYTE PTR [ebx+0x0],bl
  412eee:	inc    ebp
  412eef:	loope  0x412ef0
  412ef1:	pusha  
  412ef2:	scas   eax,DWORD PTR es:[edi]
  412ef3:	inc    DWORD PTR [ebx+0x4db17eff]
  412ef9:	int3   
  412efa:	dec    DWORD PTR [ecx-0x289600bb]
  412f00:	dec    esp
  412f02:	imul   ecx,esp,0x0
  412f05:	call   DWORD PTR [ebx-0xff2007]
  412f0b:	inc    esp
  412f0d:	add    BYTE PTR [ebx+edx*2-0xbfbc34],dh
  412f14:	dec    DWORD PTR [ecx-0x2b9446]
  412f1a:	add    BYTE PTR [eax],al
  412f1c:	out    0x83,al
  412f1e:	mov    esi,DWORD PTR [edx]
  412f20:	add    ch,cl
  412f22:	pusha  
  412f23:	mov    edi,edi
  412f25:	int3   
  412f26:	imul   eax,DWORD PTR [edi+ecx*2-0x34],0x89878383
  412f2e:	dec    ecx
  412f2f:	scas   eax,DWORD PTR es:[edi]
  412f30:	mov    DWORD PTR [eax-0x3a],edi
  412f33:	add    ah,cl
  412f35:	jmp    DWORD PTR [edi-0x33ff524b]
  412f3b:	push   DWORD PTR ds:0xff7c5600
  412f41:	idiv   BYTE PTR [esi]
  412f43:	cmp    edi,0xffffffcc
  412f46:	les    ecx,FWORD PTR ss:[ecx-0x34]
  412f4a:	add    bh,bh
  412f4c:	imul   edi,edi,0xb3ff2152
  412f52:	cli    
  412f53:	add    BYTE PTR [eax],al
  412f55:	jmp    DWORD PTR [eax-0x7cedd6]
  412f5b:	jmp    FWORD PTR [esi-0x7ca19d77]
  412f61:	retf   
  412f62:	enter  0x0,0x0
  412f66:	loop   0x412f92
  412f68:	sub    al,0xff
  412f6a:	dec    esp
  412f6c:	sti    
  412f6d:	mov    DWORD PTR [ebx],edi
  412f6f:	rol    DWORD PTR [eax],0xc9
  412f72:	lock dec DWORD PTR [ecx+0x6ed83900]
  412f79:	(bad)  
  412f7a:	(bad)  
  412f7b:	call   ebp
  412f7d:	call   DWORD PTR [esi]
  412f7f:	stos   DWORD PTR es:[edi],eax
  412f80:	add    BYTE PTR [edx-0x7c0000bb],bh
  412f86:	pop    ecx
  412f87:	mov    ebx,0xffffffc5
  412f8c:	fwait
  412f8d:	dec    DWORD PTR [edi-0x5c0933e4]
  412f93:	add    BYTE PTR [ecx-0x7e805501],cl
  412f99:	add    bh,bh
  412f9b:	add    DWORD PTR [eax-0x765fce01],0x56
  412fa2:	or     bh,bh
  412fa4:	int3   
  412fa5:	jmp    edi
  412fa7:	outs   dx,DWORD PTR ds:[esi]
  412fa8:	cmp    al,0xff
  412faa:	add    bh,bh
  412fac:	sar    edi,cl
  412fae:	jge    0x412fd0
  412fb0:	add    cl,ch
  412fb2:	xchg   edi,eax
  412fb3:	add    BYTE PTR [ecx-0x40f84201],cl
  412fb9:	add    bh,bh
  412fbb:	call   FWORD PTR [edx]
  412fbd:	adc    DWORD PTR [esi+0x47],0xffffffcc
  412fc1:	fnsave [eax-0x1]
  412fc4:	inc    DWORD PTR [ebx+0x41ed7c]
  412fca:	inc    DWORD PTR [ebx-0x7a1eff08]
  412fd0:	(bad)  
  412fd1:	in     al,dx
  412fd2:	in     eax,dx
  412fd3:	cmp    edi,0xffffffff
  412fd6:	push   ss
  412fd7:	xchg   edi,eax
  412fd8:	or     al,0x0
  412fda:	(bad)  
  412fdb:	call   ebx
  412fdd:	dec    DWORD PTR ds:0xbb87cc97
  412fe3:	(bad)  
  412fe4:	dec    DWORD PTR [ecx-0xd05b95]
  412fea:	mov    edi,edi
  412fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fed:	jmp    esp
  412fef:	cli    
  412ff0:	add    BYTE PTR [ebx-0x74],dl
  412ff3:	cmp    edi,0xffffffff
  412ff6:	jge    0x412fcb
  412ff8:	mov    al,BYTE PTR [eax]
  412ffa:	(bad)  
  412ffb:	push   DWORD PTR [ebp-0x57ff01]
  413001:	pop    edx
  413002:	out    0xff,al
  413004:	add    BYTE PTR [eax],al
  413006:	jp     0x412ff4
  413008:	xchg   esi,eax
  413009:	add    bh,bh
  41300b:	add    BYTE PTR ds:0x83b32d00,bl
  413011:	retf   
  413012:	ins    BYTE PTR es:[edi],dx
  413013:	add    BYTE PTR [eax],al
  413015:	call   edi
  413017:	pusha  
  413018:	lds    eax,FWORD PTR [eax]
  41301a:	add    bh,bh
  41301c:	(bad)  
  41301e:	in     al,dx
  41301f:	cmc    
  413020:	inc    esi
  413022:	mov    bh,0x0
  413024:	dec    esp
  413026:	xor    dh,BYTE PTR ds:0xff00ff3d
  41302c:	(bad)  
  41302d:	mov    ecx,edx
  41302f:	xor    al,0x0
  413031:	scas   eax,DWORD PTR es:[edi]
  413032:	fwait
  413033:	cmp    edi,0xffffffff
  413036:	bnd ret 
  413038:	lods   eax,DWORD PTR ds:[esi]
  413039:	(bad)  
  41303a:	(bad)  
  41303b:	(bad)  
  41303c:	(bad)  
  41303e:	xor    esp,DWORD PTR [eax+0x0]
  413041:	or     eax,0xff0083a1
  413046:	mov    dh,0x9e
  413048:	xlat   BYTE PTR ds:[ebx]
  413049:	int3   
  41304a:	(bad)  
  41304b:	call   FWORD PTR [eax]
  41304d:	call   FWORD PTR [ebp+0x2f]
  413050:	jmp    DWORD PTR [ecx]
  413052:	dec    eax
  413053:	add    DWORD PTR [eax],0xffffffff
  413056:	stos   BYTE PTR es:[edi],al
  413057:	cwde   
  413058:	adc    edi,edi
  41305a:	cmp    edi,0xffffff89
  41305d:	jmp    FWORD PTR [eax+0x7b]
  413060:	add    BYTE PTR [edx+eax*1-0x2b000001],bh
  413067:	fisubr DWORD PTR [ebp-0x41010000]
  41306d:	add    BYTE PTR [ebx+0x21],cl
  413070:	push   DWORD PTR [edx+0x12]
  413073:	(bad)  
  413074:	inc    DWORD PTR [eax]
  413076:	mov    BYTE PTR [ebp-0x2d],ch
  413079:	inc    DWORD PTR [ebx-0x4a000c01]
  41307f:	pop    esp
  413080:	(bad)  
  413081:	call   0x422fae
  413086:	and    eax,0xff007557
  41308b:	int3   
  41308c:	je     0x413017
  41308e:	inc    ecx
  41308f:	xchg   edi,eax
  413090:	jmp    DWORD PTR [ebx]
  413092:	push   es
  413093:	(bad)  
  413094:	dec    esp
  413096:	mov    ebx,0x83d0d5
  41309b:	mov    DWORD PTR [ebp+0x0],eax
  41309e:	xchg   edi,eax
  41309f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a0:	(bad)  
  4130a1:	jge    0x413069
  4130a3:	cmp    edi,0xffffffff
  4130a6:	fwait
  4130a7:	mov    BYTE PTR [eax-0x28ffff34],ah
  4130ad:	and    esi,0xffffff99
  4130b0:	call   FWORD PTR [ecx-0x45]
  4130b3:	(bad)  
  4130b4:	inc    DWORD PTR [ebx-0x9adfea]
  4130ba:	dec    esp
  4130bc:	xchg   edx,eax
  4130bd:	int3   
  4130be:	mov    eax,0x8e83ff04
  4130c3:	inc    DWORD PTR [ebx+0x559c3ecc]
  4130c9:	dec    DWORD PTR [ecx+0x3c0005ff]
  4130cf:	dec    ecx
  4130d0:	int3   
  4130d1:	jb     0x4130b1
  4130d3:	(bad)  
  4130d4:	(bad)  
  4130d5:	call   FWORD PTR [ebx-0xc428]
  4130db:	mov    DWORD PTR [edi+0x0],ebx
  4130de:	mov    gs,WORD PTR [ebx-0x76e000]
  4130e4:	int3   
  4130e5:	add    al,bl
  4130e7:	frstor [eax-0x1]
  4130ea:	(bad)  
  4130eb:	(bad)  
  4130ec:	inc    BYTE PTR [eax]
  4130ee:	dec    esi
  4130ef:	outs   dx,BYTE PTR ds:[esi]
  4130f0:	sbb    DWORD PTR [esi+0x59],0xffffffff
  4130f4:	int3   
  4130f5:	add    BYTE PTR [edx-0x4df0],dl
  4130fb:	inc    esi
  4130fd:	add    dl,al
  4130ff:	inc    eax
  413100:	inc    DWORD PTR [edx-0xff88]
  413106:	adc    bh,bl
  413108:	std    
  413109:	inc    DWORD PTR [eax]
  41310b:	cmp    DWORD PTR [eax-0xc99734],0x57
  413112:	iret   
  413113:	(bad)  
  413114:	(bad)  
  413115:	call   DWORD PTR [eax-0x2c]
  413118:	(bad)  
  413119:	int3   
  41311a:	dec    DWORD PTR [ecx-0x68d5ffb2]
  413120:	add    BYTE PTR [esi-0x76fff4],bh
  413126:	inc    esi
  413127:	pop    ebp
  413128:	sub    BYTE PTR [ebx-0x21ff01],al
  41312e:	push   0x3
  413130:	add    BYTE PTR [edx-0xffa8],dl
  413136:	retf   
  413137:	adc    eax,0x89ff89d4
  41313c:	dec    ebp
  41313d:	adc    DWORD PTR ds:0x443cff21,0x0
  413144:	add    bh,bh
  413146:	(bad)  [esi]
  413148:	in     eax,0x83
  41314a:	(bad)  
  41314b:	push   DWORD PTR [edi]
  41314d:	add    eax,0x5
  413150:	add    bh,bl
  413152:	xchg   DWORD PTR [ebx-0x3dc20077],eax
  413158:	jmp    0xca41315c
  41315d:	add    BYTE PTR [ebx],ah
  41315f:	lods   eax,DWORD PTR ds:[esi]
  413160:	sub    ebx,0xffffffe5
  413163:	add    bh,bh
  413165:	jmp    FWORD PTR [esi]
  413167:	repz xor eax,0x118983ff
  41316d:	add    BYTE PTR [eax],ah
  41316f:	ins    DWORD PTR es:[edi],dx
  413170:	mov    DWORD PTR [edx-0x5],esp
  413173:	cmp    edi,0x0
  413176:	sbb    DWORD PTR [ebp-0x14],edx
  413179:	inc    DWORD PTR [eax]
  41317b:	dec    DWORD PTR ds:0xffc0d9ff
  413181:	leave  
  413182:	js     0x413183
  413184:	int3   
  413185:	dec    DWORD PTR [edx+0x59]
  413188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413189:	add    BYTE PTR [eax],al
  41318b:	add    BYTE PTR [edi],al
  41318d:	and    DWORD PTR [eax],0xffffff93
  413190:	(bad)  
  413191:	jl     0x41311e
  413193:	inc    DWORD PTR [ebx+0x76f0e2ff]
  413199:	mov    DWORD PTR [eax],eax
  41319b:	add    BYTE PTR [edx-0x832501],ah
  4131a1:	jns    0x413214
  4131a3:	add    BYTE PTR [eax],al
  4131a5:	add    BYTE PTR [eax+0xffbebb],cl
  4131ab:	dec    DWORD PTR [eax-0x1]
  4131ae:	(bad)  
  4131b0:	call   DWORD PTR [ebp+edi*2+0x7100ffcc]
  4131b7:	push   edi
  4131b8:	dec    ecx
  4131b9:	int3   
  4131ba:	add    BYTE PTR [eax],al
  4131bc:	jne    0x4131bd
  4131be:	sub    cl,dl
  4131c0:	dec    DWORD PTR [edi+ecx*8+0x3ffff00]
  4131c7:	or     eax,0xff00ffa0
  4131cc:	add    BYTE PTR fs:[ebx-0x3bae00bc],cl
  4131d3:	add    BYTE PTR [eax],al
  4131d5:	add    BYTE PTR [esi+0x2a],al
  4131d8:	mov    WORD PTR [eax],es
  4131da:	(bad)  
  4131db:	jmp    FWORD PTR [esi]
  4131dd:	(bad)  
  4131de:	inc    BYTE PTR [edx-0x759b34]
  4131e4:	inc    DWORD PTR [eax]
  4131e6:	repz push esi
  4131e8:	cmp    edi,edi
  4131ea:	inc    DWORD PTR [eax]
  4131ec:	pop    edx
  4131ed:	inc    DWORD PTR [edx+0x2902ffac]
  4131f3:	add    bh,bh
  4131f5:	add    BYTE PTR [eax-0x61],bh
  4131f8:	mov    dl,0x83
  4131fa:	dec    esp
  4131fc:	xor    al,0xcc
  4131fe:	cmp    al,0xb8
  413200:	add    BYTE PTR [eax+0x22],cl
  413203:	(bad)  
  413204:	(bad)  
  413205:	(bad)  
  413206:	cmp    dh,BYTE PTR [edx+0x50]
  413209:	inc    DWORD PTR [eax]
  41320b:	cmp    DWORD PTR [ebp-0x7d],0xffffffae
  41320f:	add    DWORD PTR [eax],eax
  413211:	ret    
  413212:	add    eax,DWORD PTR [eax]
  413214:	int3   
  413215:	adc    DWORD PTR [ebp-0xacd7],0xffffffff
  41321c:	mov    edx,0x83e16bff
  413221:	sub    edx,DWORD PTR [ecx-0x187c3301]
  413227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413228:	push   edx
  413229:	add    ah,cl
  41322b:	or     DWORD PTR [edx+0x0],0x4a
  41322f:	jp     0x413230
  413231:	xchg   edi,eax
  413232:	pop    eax
  413233:	add    BYTE PTR [eax],al
  413235:	call   DWORD PTR [ebx+ecx*8-0x7cff008c]
  41323c:	add    al,0xff
  41323e:	je     0x4131c9
  413240:	jmp    FWORD PTR [esi]
  413242:	inc    edi
  413243:	add    DWORD PTR [eax],0xffffffff
  413246:	mov    es,WORD PTR [ecx]
  413248:	fxch   st(4)
  41324a:	(bad)  
  41324b:	call   DWORD PTR [edi-0x1]
  41324e:	repz mov bh,0x0
  413251:	dec    ecx
  413252:	repnz cmp edi,0xffffff83
  413256:	dec    ebp
  413257:	test   DWORD PTR [ecx-0x26000100],0x182e83
  413261:	jb     0x413206
  413263:	inc    DWORD PTR [ebx+0x1f026e83]
  413269:	(bad)  
  41326a:	(bad)  
  41326b:	dec    ebx
  41326d:	inc    DWORD PTR [ebp-0x6b]
  413270:	mov    DWORD PTR [edx],edi
  413272:	cmp    al,0x0
  413274:	add    BYTE PTR [eax],al
  413276:	xchg   esp,edx
  413278:	fiadd  WORD PTR [eax]
  41327a:	add    DWORD PTR [eax],0xffffff98
  41327d:	sub    DWORD PTR [esi],0x27
  413280:	call   esp
  413282:	add    BYTE PTR es:[eax],al
  413285:	add    bh,bh
  413287:	sbb    BYTE PTR [edi+edi*8-0x338c0001],dl
  41328e:	ret    0xe3
  413291:	out    dx,al
  413292:	fmulp  st(4),st
  413294:	inc    DWORD PTR [eax]
  413296:	test   al,0x81
  413298:	ret    0x89ff
  41329b:	call   FWORD PTR [esi-0x63a200]
  4132a1:	push   eax
  4132a2:	xchg   edx,eax
  4132a3:	inc    DWORD PTR [eax]
  4132a5:	add    BYTE PTR [eax-0x7cc7fa],bh
  4132ab:	(bad)  
  4132ac:	sti    
  4132ad:	(bad)  
  4132ae:	fdivr  DWORD PTR [ecx-0xaf5101]
  4132b4:	add    DWORD PTR [ebx-0x4dec8d],0xffffffff
  4132bb:	inc    DWORD PTR [edi+edi*8]
  4132be:	mov    bl,0x0
  4132c1:	xor    al,0x9f
  4132c3:	add    bh,bh
  4132c5:	int3   
  4132c6:	std    
  4132c7:	sti    
  4132c8:	das    
  4132c9:	add    BYTE PTR [eax],al
  4132cb:	call   DWORD PTR [edx+0x6c3000]
  4132d1:	adc    esi,DWORD PTR [ebx-0x1]
  4132d4:	dec    esp
  4132d6:	mov    BYTE PTR [ecx+0xc],0xff
  4132da:	add    BYTE PTR [eax],al
  4132dc:	mov    bl,0xcc
  4132de:	mov    eax,0x4556ffd4
  4132e3:	add    BYTE PTR [ebx-0x11ff4e34],al
  4132e9:	add    BYTE PTR [ebx+0x78001aff],al
  4132ef:	jae    0x4132f0
  4132f1:	sahf   
  4132f2:	pop    edi
  4132f3:	(bad)  
  4132f4:	(bad)  
  4132f5:	dec    DWORD PTR [eax]
  4132f7:	stos   DWORD PTR es:[edi],eax
  4132f8:	inc    DWORD PTR fs:[ebx+0x5d00c583]
  4132ff:	(bad)  
  413301:	ret    
  413302:	dec    edx
  413303:	dec    esp
  413305:	(bad)  
  413306:	cmp    al,0x9a
  413308:	out    dx,al
  413309:	cmp    edi,0xffffffff
  41330c:	inc    BYTE PTR [eax]
  41330e:	pop    eax
  41330f:	cdq    
  413310:	call   DWORD PTR [edx-0x3300ff77]
  413316:	inc    ebp
  413317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413318:	nop
  413319:	inc    DWORD PTR [ebx+0x13cc20ff]
  41331f:	ret    0x2acc
  413322:	mov    ecx,0xc3ff00ff
  413327:	sbb    bh,BYTE PTR [esi-0x25337c7d]
  41332d:	jmp    FWORD PTR [ebx]
  41332f:	cdq    
  413330:	add    BYTE PTR [ecx+0x36],cl
  413333:	add    DWORD PTR [eax],0xffffffcc
  413336:	(bad)  
  413337:	loop   0x4132dd
  413339:	inc    DWORD PTR [eax]
  41333b:	int3   
  41333c:	pop    edx
  41333d:	mov    DWORD PTR [ebx],edx
  41333f:	sub    eax,0x5ffe00
  413344:	add    bh,bh
  413346:	ret    0xf819
  413349:	add    BYTE PTR [eax],al
  41334b:	mov    DWORD PTR [esi-0x224677],edx
  413351:	aad    0x48
  413353:	or     DWORD PTR [ecx+0x606f75cc],0xffffffff
  41335a:	cmp    edi,0xffffff95
  41335d:	call   esp
  41335f:	pop    eax
  413360:	jmp    FWORD PTR [ecx]
  413362:	jns    0x4132e7
  413364:	inc    DWORD PTR [eax]
  413366:	imul   edi,DWORD PTR [edx-0x35],0xd8ff0083
  41336d:	and    DWORD PTR [edi],0x19
  413370:	call   DWORD PTR [edx+0x4b]
  413373:	add    BYTE PTR [eax],al
  413375:	sub    DWORD PTR ds:0xff83fce6,0xffffffff
  41337c:	add    BYTE PTR [bx+di-0x7c2e],al
  413381:	dec    esp
  413382:	and    eax,0xefffff00
  413387:	in     eax,dx
  413388:	and    eax,DWORD PTR [eax]
  41338a:	(bad)  
  41338b:	push   DWORD PTR [ecx-0x3306f901]
  413391:	cmp    eax,esi
  413393:	(bad)  
  413394:	inc    DWORD PTR [eax]
  413396:	(bad)  
  413397:	push   ecx
  413398:	xlat   BYTE PTR ds:[ebx]
  413399:	add    bh,bh
  41339b:	add    BYTE PTR [edi-0x77],ah
  41339e:	xchg   esp,eax
  41339f:	cmp    bh,0x89
  4133a2:	mov    bl,0x0
  4133a4:	int3   
  4133a5:	add    BYTE PTR [edi+0xcce5d0],bl
  4133ab:	add    bl,cl
  4133ad:	add    cl,dl
  4133af:	push   ss
  4133b0:	inc    esp
  4133b2:	push   esi
  4133b3:	inc    DWORD PTR [ebx-0xe0db77]
  4133b9:	inc    DWORD PTR [eax]
  4133bb:	inc    DWORD PTR [ebx-0x69010000]
  4133c1:	inc    edi
  4133c2:	(bad)  
  4133c3:	(bad)  
  4133c4:	jns    0x41340f
  4133c6:	(bad)  
  4133c7:	(bad)  
  4133c8:	ds push cs
  4133ca:	add    ah,cl
  4133cc:	stc    
  4133cd:	mov    ah,0xff
  4133cf:	add    bl,cl
  4133d1:	idiv   bh
  4133d3:	call   FWORD PTR [ebx-0x39]
  4133d6:	inc    DWORD PTR [eax]
  4133d8:	sti    
  4133d9:	retf   0xffff
  4133dc:	js     0x413393
  4133de:	inc    DWORD PTR [ebx+0xff29d9]
  4133e4:	adc    eax,DWORD PTR [ebx]
  4133e6:	(bad)  
  4133e7:	inc    DWORD PTR [edx+0x64]
  4133ea:	(bad)  
  4133eb:	call   DWORD PTR [eax+0x4b]
  4133ee:	cmp    edi,0xffffffe2
  4133f1:	nop
  4133f2:	inc    DWORD PTR [eax]
  4133f4:	imul   esi,DWORD PTR [eax],0xffffffff
  4133f7:	push   esp
  4133f9:	pop    ebx
  4133fa:	cmp    edi,0x7a
  4133fd:	push   ds
  4133fe:	(bad)  
  4133ff:	jmp    DWORD PTR ds:0x5a008323
  413405:	cli    
  413406:	add    BYTE PTR [eax],al
  413408:	inc    ebp
  413409:	cmp    ecx,DWORD PTR [ecx-0x7604097d]
  41340f:	push   DWORD PTR [esi-0x6b33ff5a]
  413415:	(bad)  
  413416:	(bad)  
  413417:	inc    DWORD PTR [ebp-0x663300c8]
  41341d:	xchg   esi,eax
  41341e:	inc    DWORD PTR [ebx-0x7600455c]
  413424:	popa   
  413425:	sub    BYTE PTR [eax],al
  413427:	inc    DWORD PTR [esi]
  413429:	jg     0x41342a
  41342b:	add    BYTE PTR [ebx+0x5b],dl
  41342e:	add    bh,bh
  413430:	stos   DWORD PTR es:[edi],eax
  413431:	jnp    0x413432
  413433:	cmp    DWORD PTR [esi],0xffffffd1
  413436:	inc    DWORD PTR [eax]
  413438:	push   edx
  413439:	test   eax,0xe328cccc
  41343e:	add    BYTE PTR [ecx-0xd89e],cl
  413444:	test   al,0xdf
  413446:	add    BYTE PTR [ecx+0x833dfe],cl
  41344c:	cmp    DWORD PTR ds:0x868883cc,0xcfeb0000
  413456:	inc    DWORD PTR [eax]
  413458:	or     BYTE PTR [edi],dh
  41345a:	inc    DWORD PTR [ebx-0x9d81]
  413460:	div    BYTE PTR [eax]
  413462:	add    bh,bh
  413464:	cli    
  413465:	pushf  
  413466:	inc    DWORD PTR [eax]
  413468:	icebp  
  413469:	inc    esi
  41346a:	inc    DWORD PTR [eax]
  41346c:	pusha  
  41346d:	mov    esi,0x118ff00
  413472:	(bad)  
  413473:	dec    edx
  413475:	or     al,0x83
  413477:	int3   
  413478:	jmp    0xab423463
  41347d:	cmp    BYTE PTR [eax],al
  41347f:	add    BYTE PTR [ebx],ch
  413481:	in     eax,dx
  413482:	(bad)  
  413483:	push   DWORD PTR [esi+ebp*2]
  413486:	cmp    edi,0x9
  413489:	mov    ah,0x0
  41348b:	push   DWORD PTR [eax+0x2e838359]
  413491:	hlt    
  413492:	add    bh,bh
  413494:	xchg   ebx,eax
  413495:	aas    
  413496:	add    BYTE PTR [ebx-0x3307d5],al
  41349c:	inc    ecx
  41349d:	addr16 (bad) 
  41349f:	push   DWORD PTR [edi-0x39]
  4134a2:	add    BYTE PTR [ebx-0x76334d5f],al
  4134a8:	daa    
  4134a9:	test   DWORD PTR [eax],eax
  4134ab:	inc    DWORD PTR [edx]
  4134ad:	repnz inc DWORD PTR [eax]
  4134b0:	mov    ch,0x8
  4134b2:	(bad)  
  4134b3:	dec    DWORD PTR [ebx+ebx*8]
  4134b6:	(bad)  
  4134b7:	call   FWORD PTR [edi+0x43ff006a]
  4134bd:	rol    BYTE PTR [ebx-0x765fc401],0xff
  4134c4:	out    dx,al
  4134c5:	outs   dx,DWORD PTR ds:[esi]
  4134c6:	add    ah,cl
  4134c8:	add    DWORD PTR [eax+eax*1],ebp
  4134cb:	push   DWORD PTR [eax+0x56]
  4134ce:	add    BYTE PTR [eax],al
  4134d0:	pusha  
  4134d1:	stc    
  4134d2:	(bad)  
  4134d3:	(bad)  
  4134d4:	jmp    FWORD PTR [edi+edi*8]
  4134d7:	call   FWORD PTR ds:0xceffffc5
  4134dd:	add    bh,bh
  4134df:	dec    ebp
  4134e1:	push   cs
  4134e2:	int3   
  4134e3:	add    DWORD PTR [ebx-0x25],0xffffff83
  4134e7:	inc    esp
  4134e9:	sub    eax,0x6c28ff83
  4134ee:	int3   
  4134ef:	call   DWORD PTR [ebx]
  4134f1:	push   eax
  4134f2:	add    ah,cl
  4134f4:	xor    BYTE PTR [ebp-0x44100000],0x89
  4134fb:	add    BYTE PTR [ecx],cl
  4134fd:	sub    edi,edi
  4134ff:	add    BYTE PTR [esi-0x6e],bl
  413502:	mov    edi,edi
  413504:	push   0x42
  413506:	inc    DWORD PTR [eax]
  413508:	loop   0x413552
  41350a:	dec    DWORD PTR [ecx+0x64fa]
  413510:	pushf  
  413511:	pushf  
  413512:	int3   
  413513:	add    BYTE PTR [ecx],ch
  413515:	add    al,0x83
  413517:	(bad)  
  413518:	jmp    0xc5:0x50ffff1b
  41351f:	mov    DWORD PTR [ebp-0x32],edi
  413522:	(bad)  
  413523:	jmp    FWORD PTR [ebp+ebx*8-0x1]
  413527:	dec    DWORD PTR [ecx-0x5a]
  41352a:	mov    edi,edi
  41352c:	aaa    
  41352d:	inc    edx
  41352e:	add    BYTE PTR [ebx+0x837dc5],al
  413534:	or     eax,0xc60000a2
  413539:	jne    0x41353a
  41353b:	add    BYTE PTR [edx],dh
  41353d:	adc    bh,bh
  41353f:	dec    ebx
  413541:	(bad)  
  413542:	int3   
  413543:	sbb    DWORD PTR [edx-0x7a760021],0xffffff8f
  41354a:	inc    DWORD PTR [ebx-0x7c008a37]
  413550:	daa    
  413551:	sub    DWORD PTR [eax],eax
  413553:	inc    DWORD PTR [eax+0x20ff8332]
  413559:	enter  0x83cc,0x96
  41355d:	(bad)  
  41355e:	(bad)  
  41355f:	push   DWORD PTR [eax-0x48]
  413562:	add    BYTE PTR [eax],al
  413564:	mov    eax,ds:0x5689001f
  413569:	rol    DWORD PTR [eax],0xff
  41356c:	sub    DWORD PTR [edx+0x2797ff83],ebp
  413572:	inc    DWORD PTR [ebx-0x33004a82]
  413578:	adc    BYTE PTR [eax-0x3d307d00],bh
  41357e:	(bad)  
  41357f:	(bad)  
  413580:	cmp    eax,0x2f8383fd
  413585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413586:	dec    DWORD PTR [ecx-0xff8dce]
  41358c:	fiadd  WORD PTR [ecx]
  41358e:	add    ah,cl
  413590:	jg     0x4135c3
  413592:	add    bh,bh
  413594:	(bad)  
  413596:	mov    edi,edi
  413598:	cmp    eax,0xfd00ffe6
  41359d:	adc    al,BYTE PTR [ebx+0xfb8acc]
  4135a3:	dec    edx
  4135a5:	xor    eax,0x8b3a89ff
  4135aa:	(bad)  
  4135ab:	call   DWORD PTR [edi+eiz*8-0x1]
  4135af:	and    eax,0x65
  4135b2:	inc    DWORD PTR [ebx-0x3300c960]
  4135b8:	test   BYTE PTR ds:0x6146ccff,dl
  4135be:	int3   
  4135bf:	add    BYTE PTR [eax],ah
  4135c1:	in     al,dx
  4135c2:	inc    DWORD PTR [eax]
  4135c4:	cwde   
  4135c5:	add    bh,bh
  4135c7:	call   FWORD PTR [esi+ebp*2+0x0]
  4135cb:	dec    DWORD PTR [edx+ebx*4+0x5d34ffcc]
  4135d2:	or     esp,0xa
  4135d5:	jb     0x4135d7
  4135d7:	(bad)  
  4135d8:	cmp    eax,0x42ffff16
  4135dd:	mov    ebx,0xc646ffff
  4135e2:	mov    edi,edi
  4135e4:	add    DWORD PTR [ebx+0x71f90000],eax
  4135ea:	inc    DWORD PTR [eax]
  4135ec:	sub    eax,0xc5ffccd1
  4135f1:	add    edi,edi
  4135f3:	add    BYTE PTR [ebp+0x6f],ch
  4135f6:	add    BYTE PTR [eax],al
  4135f8:	fstp   st(7)
  4135fa:	(bad)  
  4135fb:	(bad)  
  4135fc:	js     0x4135b8
  4135fe:	(bad)  
  4135ff:	inc    DWORD PTR [ebp-0xf00ff94]
  413605:	jno    0x413606
  413607:	add    DWORD PTR [edi],0x47
  41360a:	dec    DWORD PTR [ecx-0xff717c]
  413610:	cs fs mov edi,edi
  413614:	ins    BYTE PTR es:[edi],dx
  413615:	mov    ebx,0xbb900000
  41361a:	(bad)  
  41361b:	dec    edi
  41361d:	mov    ds:0xfba800ff,al
  413622:	(bad)  
  413623:	push   DWORD PTR [eax+ebp*4-0x34]
  413627:	add    BYTE PTR [ebx],dh
  413629:	jl     0x4135b4
  41362b:	add    BYTE PTR [edx],ah
  41362d:	push   ebx
  41362e:	(bad)  
  41362f:	(bad)  
  413630:	fcompp 
  413632:	(bad)  
  413633:	jmp    DWORD PTR [eax-0x21]
  413636:	(bad)  
  413637:	push   DWORD PTR [ecx-0x64]
  41363a:	(bad)  
  41363b:	call   DWORD PTR [ebx-0x770076f1]
  413641:	jg     0x413642
  413643:	call   DWORD PTR [esi+0x6b]
  413646:	add    BYTE PTR [eax],al
  413648:	arpl   WORD PTR [eax],bx
  41364a:	dec    esp
  41364c:	scas   al,BYTE PTR es:[edi]
  41364d:	ud0    edi,edi
  413650:	pop    ebp
  413651:	xchg   ecx,eax
  413652:	inc    DWORD PTR [ebx+0x5fb9]
  413658:	dec    esp
  413659:	aas    
  41365a:	inc    DWORD PTR [ebx+0xff26cc]
  413660:	and    ch,bh
  413662:	inc    DWORD PTR [eax]
  413664:	lahf   
  413665:	and    edi,edi
  413667:	mov    DWORD PTR [ebx-0xe],esp
  41366a:	add    ah,cl
  41366c:	push   edx
  41366d:	sbb    DWORD PTR [eax],eax
  41366f:	add    BYTE PTR [ebp+0x66ff0051],al
  413675:	sbb    esp,ecx
  413677:	add    BYTE PTR [edi+0x51],al
  41367a:	(bad)  
  41367b:	(bad)  
  41367c:	jle    0x4136fc
  41367e:	cmp    edi,0xfffffff2
  413681:	xor    eax,DWORD PTR [ebx-0x708601]
  413687:	dec    DWORD PTR [edi]
  413689:	mov    bl,0x83
  41368b:	jmp    FWORD PTR [ebp-0x5a]
  41368e:	mov    edi,edi
  413690:	sar    bl,1
  413692:	add    bh,bh
  413694:	fs loop 0x413620
  413697:	inc    esp
  413699:	push   edi
  41369a:	(bad)  
  41369b:	jmp    DWORD PTR [edx-0x3b]
  41369e:	(bad)  
  41369f:	(bad)  
  4136a0:	out    dx,al
  4136a1:	in     al,dx
  4136a2:	inc    DWORD PTR [ebx-0xff0326]
  4136a8:	mov    ebp,0x2389ccde
  4136ad:	inc    DWORD PTR [eax]
  4136af:	add    BYTE PTR [esp+ebp*2+0x0],ch
  4136b3:	jmp    DWORD PTR [esi+0x1fffff60]
  4136b9:	mov    dh,0xff
  4136bb:	sub    DWORD PTR [ebx-0x32ff7c36],0xffffffa1
  4136c2:	(bad)  
  4136c3:	jmp    DWORD PTR [ebx]
  4136c5:	test   bh,bh
  4136c7:	add    ch,al
  4136c9:	lea    eax,[eax]
  4136cb:	call   esp
  4136cd:	sbb    BYTE PTR [eax],al
  4136cf:	add    BYTE PTR [edi-0x20],bl
  4136d2:	int3   
  4136d3:	sbb    DWORD PTR [ebp-0x58],0xffffffcc
  4136d7:	add    BYTE PTR [esi-0x31],bl
  4136da:	add    DWORD PTR [eax],0x74
  4136dd:	jp     0x4136df
  4136df:	call   DWORD PTR [ecx+0x34ff00b3]
  4136e5:	lea    eax,[eax]
  4136e7:	(bad)  
  4136e8:	mov    esp,0xbf830031
  4136ed:	ja     0x4136ef
  4136ef:	int3   
  4136f0:	sbb    eax,0x1783ff71
  4136f5:	cmc    
  4136f6:	inc    DWORD PTR [eax]
  4136f8:	pop    ebx
  4136f9:	sti    
  4136fa:	add    DWORD PTR [ebx-0x76ff9e88],0xffffffea
  413701:	cmp    eax,0x1a14cc83
  413706:	inc    DWORD PTR [eax]
  413708:	(bad)  
  41370a:	add    BYTE PTR [ecx-0x3300483c],cl
  413710:	push   cs
  413711:	mov    ecx,0xfeed00ff
  413716:	mov    DWORD PTR [ebx-0x7c67a5],eax
  41371c:	push   ss
  41371d:	outs   dx,DWORD PTR ds:[esi]
  41371e:	add    DWORD PTR [eax],0xffffffa0
  413721:	cmp    cl,BYTE PTR [ecx-0x40db01]
  413727:	call   DWORD PTR [esi+0x6e]
  41372a:	add    DWORD PTR [eax],0xffffffe1
  41372d:	push   0x1d0bccff
  413732:	add    DWORD PTR [eax],0xffffff9b
  413735:	cmc    
  413736:	add    DWORD PTR [ebx+0xd9c5],0xb
  41373d:	inc    ebp
  41373e:	(bad)  
  41373f:	(bad)  
  413740:	mov    eax,0x84ffffe3
  413745:	mov    edi,edi
  413747:	sbb    DWORD PTR [edx],0xffffffd9
  41374a:	add    BYTE PTR [eax],al
  41374c:	mov    eax,ds:0xa5ccff4d
  413751:	enter  0xccff,0x48
  413755:	(bad)  
  413756:	(bad)  
  413757:	dec    esi
  413759:	retf   0xffff
  41375c:	call   0xff64:0x2a00ff58
  413763:	adc    DWORD PTR [eax-0x73ff339a],0x6c
  41376a:	inc    DWORD PTR [eax]
  41376c:	and    DWORD PTR [edi+edi*8],eax
  41376f:	xor    DWORD PTR [edx-0x6d],0xffffffff
  413773:	add    BYTE PTR [esi-0x62],bl
  413776:	(bad)  
  413777:	jmp    DWORD PTR [edx+0x1ffffb2]
  41377d:	mov    al,ds:0x9acfcc00
  413782:	(bad)  
  413783:	inc    esp
  413785:	xor    DWORD PTR [eax],eax
  413787:	add    ch,ah
  413789:	add    eax,DWORD PTR [ebx+0xf4ac83]
  41378f:	cmp    DWORD PTR [ecx+0x74],0xffffffff
  413793:	call   DWORD PTR ds:0xc5cc8383
  413799:	clc    
  41379a:	or     esp,0xffffff9c
  41379d:	inc    ecx
  41379e:	(bad)  
  41379f:	call   FWORD PTR [edi-0x2]
  4137a2:	(bad)  
  4137a3:	dec    DWORD PTR [ebx-0x2a000091]
  4137a9:	push   esi
  4137aa:	int3   
  4137ab:	(bad)  
  4137ac:	jg     0x413769
  4137ae:	inc    DWORD PTR [eax]
  4137b0:	sub    al,0xf5
  4137b2:	inc    DWORD PTR [eax]
  4137b4:	ss test eax,0x1a9effff
  4137ba:	or     esp,0xffffffff
  4137bd:	jns    0x4137be
  4137bf:	int3   
  4137c0:	popa   
  4137c1:	sub    BYTE PTR [ebx-0x1aa301],al
  4137c7:	add    BYTE PTR [esi+0x3a00ff7c],dh
  4137cd:	(bad)  
  4137d0:	test   eax,0x5cffff65
  4137d5:	aam    0x83
  4137d7:	add    BYTE PTR [eax],al
  4137d9:	idiv   edi
  4137db:	add    BYTE PTR [ebp*2-0x733bff01],dl
  4137e2:	(bad)  
  4137e3:	dec    edi
  4137e5:	lods   eax,DWORD PTR ds:[esi]
  4137e6:	mov    DWORD PTR [eax],eax
  4137e8:	enter  0xff0e,0x89
  4137ec:	dec    di
  4137ee:	add    DWORD PTR [ebx-0xff4676],0x77
  4137f5:	xchg   ebx,eax
  4137f6:	(bad)  
  4137f7:	(bad)  
  4137f8:	cmp    eax,0x7500cc37
  4137fd:	xchg   edi,edi
  4137ff:	dec    DWORD PTR [edx]
  413801:	mov    ebx,0x9f288300
  413806:	int3   
  413807:	add    BYTE PTR ds:0x54ff83c9,al
  41380d:	sar    edi,cl
  41380f:	push   edx
  413811:	pushf  
  413812:	add    ah,cl
  413814:	cld    
  413815:	outs   dx,DWORD PTR ds:[esi]
  413816:	add    bh,bh
  413818:	sub    edx,DWORD PTR [esi]
  41381a:	add    bh,bh
  41381c:	fcomp  DWORD PTR [ebp-0x34480001]
  413822:	add    DWORD PTR [eax],0x67
  413825:	add    edi,edi
  413827:	add    cl,ch
  413829:	add    DWORD PTR [ebx-0xcc4e00],0x0
  413830:	pop    ss
  413831:	jmp    0x413832
  413833:	add    DWORD PTR [ebp+0x3a],0x0
  413837:	push   DWORD PTR [esp+esi*8+0x577489ff]
  41383e:	(bad)  
  41383f:	jmp    DWORD PTR [edi]
  413841:	std    
  413842:	add    bh,bh
  413844:	stos   DWORD PTR es:[edi],eax
  413845:	idiv   bh
  413847:	add    BYTE PTR [edi+0x31ffff84],dl
  41384d:	mov    al,ds:0x718cffff
  413852:	(bad)  
  413853:	push   DWORD PTR [eax]
  413855:	stc    
  413856:	inc    DWORD PTR [eax]
  413858:	cmp    BYTE PTR [edi+0x7073ff00],cl
  41385e:	inc    DWORD PTR [eax]
  413860:	repnz mov eax,0x786c0000
  413866:	(bad)  
  413867:	call   FWORD PTR [ebx+eax*8+0x0]
  41386b:	inc    DWORD PTR [edi+0x60]
  41386e:	add    bh,bh
  413870:	mov    ebp,0xb30000d4
  413875:	lock (bad) 
  413877:	(bad)  
  413878:	cmp    ch,BYTE PTR [esi-0x60710034]
  41387e:	(bad)  
  41387f:	push   edi
  413881:	push   cs
  413882:	cmp    edi,0xffffff86
  413885:	inc    edi
  413886:	(bad)  
  413887:	inc    DWORD PTR [ecx+ecx*1+0x759200ff]
  41388e:	int3   
  41388f:	add    al,cl
  413891:	lahf   
  413892:	(bad)  
  413893:	call   DWORD PTR [eax]
  413895:	push   edx
  413896:	add    bh,bh
  413898:	ret    0xfd
  41389b:	(bad)  
  41389c:	in     eax,dx
  41389d:	push   edx
  41389e:	add    BYTE PTR [eax],al
  4138a0:	mov    ds:0xc089839a,al
  4138a5:	push   0x0
  4138a7:	mov    DWORD PTR [edi+0x58000017],esi
  4138ad:	jbe    0x4138ae
  4138af:	add    BYTE PTR [ecx+0x11ffffad],al
  4138b5:	out    0xff,eax
  4138b7:	(bad)  
  4138b8:	jl     0x413930
  4138ba:	(bad)  
  4138bb:	call   DWORD PTR [ebx]
  4138bd:	scas   al,BYTE PTR es:[edi]
  4138be:	add    BYTE PTR [eax],al
  4138c0:	dec    ebp
  4138c1:	ror    ah,cl
  4138c3:	add    BYTE PTR [edi+0x40],ch
  4138c6:	add    bh,bh
  4138c8:	std    
  4138c9:	inc    BYTE PTR [eax]
  4138cb:	dec    DWORD PTR [ebx]
  4138cd:	fwait
  4138ce:	add    BYTE PTR [eax],al
  4138d0:	dec    esi
  4138d1:	mov    edi,edi
  4138d3:	push   DWORD PTR [edx*1-0x19920100]
  4138da:	cmp    edi,0x49
  4138dd:	rol    BYTE PTR [ebx-0x9a9e01],1
  4138e3:	add    BYTE PTR [esi],dl
  4138e5:	adc    bh,bh
  4138e7:	sub    DWORD PTR [edi-0x60],0x0
  4138eb:	and    DWORD PTR [esi+0x46fffff3],0x7a
  4138f2:	(bad)  
  4138f3:	call   FWORD PTR [ebp+0x7d00ccc6]
  4138f9:	add    eax,0x1e1200ff
  4138fe:	add    BYTE PTR [eax],al
  413900:	mul    BYTE PTR [esi+0x0]
  413903:	add    dl,dl
  413905:	xor    edi,edi
  413907:	jmp    eax
  413909:	int    0x0
  41390b:	sbb    DWORD PTR ds:0x783ff1a,0x36
  413912:	add    bh,bh
  413914:	retf   
  413915:	mov    ah,0xff
  413917:	inc    DWORD PTR [eax-0x7d007c93]
  41391d:	dec    edx
  41391e:	int3   
  41391f:	dec    ebp
  413921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413922:	inc    DWORD PTR [eax]
  413924:	mov    ds:0x783ff9d,eax
  413929:	and    eax,0x9b6783ff
  41392e:	mov    DWORD PTR [ecx+0xcdab],ecx
  413934:	gs mov edi,0x43b100cc
  41393a:	(bad)  
  41393b:	(bad)  
  41393c:	fld    QWORD PTR [edx]
  41393e:	or     esp,0x3f
  413941:	xchg   ecx,eax
  413942:	add    bh,bh
  413944:	xor    BYTE PTR [ebx+eax*4-0x34],0xf0
  413949:	fiadd  WORD PTR [eax]
  41394b:	int3   
  41394c:	inc    ebp
  41394d:	and    esp,ecx
  41394f:	and    DWORD PTR [esi+0x25ff00f9],0xffffffa3
  413956:	(bad)  
  413957:	dec    DWORD PTR [edx+0x76]
  41395a:	add    BYTE PTR [eax],al
  41395c:	bound  ebp,QWORD PTR [edi+0x0]
  41395f:	add    BYTE PTR [esi+0x31],bl
  413962:	add    bh,bh
  413964:	test   al,0xa1
  413966:	inc    DWORD PTR [eax]
  413968:	xchg   BYTE PTR [edi],bh
  41396a:	add    BYTE PTR [ebx-0xff6629],al
  413970:	addr16 pop esi
  413972:	dec    esp
  413974:	nop
  413975:	xchg   bh,bh
  413977:	dec    DWORD PTR [eax+0x6cff0037]
  41397d:	dec    eax
  41397e:	add    BYTE PTR [eax],al
  413980:	repnz or edi,edi
  413983:	add    ch,dh
  413985:	sar    bh,1
  413987:	jmp    FWORD PTR [edx-0xfff0026]
  41398d:	mov    al,0x0
  41398f:	and    DWORD PTR [ebp+ebx*8-0x1],0xffffffff
  413994:	cwde   
  413995:	mov    ebx,0x6513ff00
  41399a:	mov    edi,edi
  41399c:	aas    
  41399d:	and    al,BYTE PTR [eax]
  41399f:	add    BYTE PTR [esi],dl
  4139a1:	mov    ds:0x284589ff,al
  4139a6:	add    BYTE PTR [eax],al
  4139a8:	jmp    0x8956:0x91ff0071
  4139af:	call   DWORD PTR [edi-0x6f00004e]
  4139b5:	and    bh,bh
  4139b7:	inc    DWORD PTR [edi+0x1fffffc8]
  4139bd:	fild   WORD PTR [ebx-0x8cd577]
  4139c3:	add    BYTE PTR [edx],al
  4139c5:	push   cs
  4139c6:	add    bh,bh
  4139c8:	pop    edi
  4139c9:	push   ebx
  4139ca:	inc    DWORD PTR [ebx-0xffc790]
  4139d0:	add    DWORD PTR [esi+0x0],ebx
  4139d3:	add    BYTE PTR [ecx],ah
  4139d5:	pop    es
  4139d6:	add    DWORD PTR [ebx+0xff874b],0xffffffd4
  4139dd:	bound  eax,QWORD PTR [ebx-0xc5a67d]
  4139e3:	add    DWORD PTR [edi-0x2],0xffffffff
  4139e7:	add    BYTE PTR [ebp-0x52ff7c01],dh
  4139ed:	clc    
  4139ee:	(bad)  
  4139ef:	dec    ebp
  4139f1:	jge    0x4139f3
  4139f3:	add    BYTE PTR [ecx],al
  4139f5:	imul   eax,DWORD PTR [eax],0xffffff83
  4139f8:	jle    0x4139e3
  4139fa:	add    DWORD PTR [eax],0x4b
  4139fd:	sbb    bh,bh
  4139ff:	push   DWORD PTR [edx]
  413a01:	lahf   
  413a02:	mov    esp,ecx
  413a04:	push   ebx
  413a05:	imul   ecx,esp,0xffee02ff
  413a0b:	dec    DWORD PTR [ebx]
  413a0d:	outs   dx,DWORD PTR ds:[esi]
  413a0e:	(bad)  
  413a0f:	inc    DWORD PTR [edx]
  413a11:	test   al,0x83
  413a13:	jmp    DWORD PTR [ebx]
  413a15:	and    al,0xcc
  413a17:	add    BYTE PTR [ebp+ebx*1+0x5373ffff],bl
  413a1e:	(bad)  
  413a1f:	(bad)  
  413a20:	fadd   QWORD PTR [edi+0x6539ffff]
  413a26:	add    BYTE PTR [eax],al
  413a28:	add    DWORD PTR [ebp+0x5d59ffff],ebx
  413a2e:	add    DWORD PTR [eax],0xffffff95
  413a31:	aas    
  413a32:	inc    DWORD PTR [ebx-0x7c9f11]
  413a38:	lods   eax,DWORD PTR ds:[esi]
  413a39:	in     al,dx
  413a3a:	int3   
  413a3b:	(bad)  
  413a3c:	fisttp DWORD PTR [ebp+0x10800089]
  413a42:	(bad)  
  413a43:	(bad)  
  413a44:	clc    
  413a45:	fdivp  st(7),st
  413a47:	add    BYTE PTR [ebx+0x1c00ffa2],bh
  413a4d:	and    al,0xff
  413a4f:	dec    esi
  413a51:	push   cs
  413a52:	add    bh,bh
  413a54:	dec    DWORD PTR [edx+0x29fe0083]
  413a5a:	mov    DWORD PTR [eax],eax
  413a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a5d:	scas   al,BYTE PTR es:[edi]
  413a5e:	(bad)  
  413a5f:	(bad)  
  413a60:	mov    ebx,0x41cc00b7
  413a65:	call   0xd1263a6a
  413a6a:	add    DWORD PTR [eax],0xffffff93
  413a6d:	addr16 add bh,bh
  413a70:	and    DWORD PTR [esi-0x2897ff01],ebp
  413a76:	cmp    edi,0x1e
  413a79:	xchg   ecx,eax
  413a7a:	mov    edi,edi
  413a7c:	fs js  0x413a02
  413a7f:	add    dl,dl
  413a81:	mov    ds:0x4c46ffff,al
  413a86:	cmp    edi,0xffffffb6
  413a89:	cmp    edi,edi
  413a8b:	add    BYTE PTR [edi+0x5c],dl
  413a8e:	(bad)  
  413a8f:	jmp    DWORD PTR [esi-0x48000099]
  413a95:	mov    eax,ds:0x687dffff
  413a9a:	add    BYTE PTR [ebx+0x2a45],al
  413aa0:	mov    bh,0x4a
  413aa2:	mov    DWORD PTR [ebx+0xcc0dc7],eax
  413aa8:	scas   al,BYTE PTR es:[edi]
  413aa9:	xor    eax,0xc474ffff
  413aae:	inc    DWORD PTR [eax]
  413ab0:	push   ds
  413ab1:	(bad)  
  413ab2:	int3   
  413ab3:	add    bl,bh
  413ab5:	pushf  
  413ab6:	(bad)  
  413ab7:	(bad)  
  413ab8:	in     eax,dx
  413ab9:	cmp    al,0xcc
  413abb:	add    BYTE PTR [esi-0x200000c8],al
  413ac1:	push   es
  413ac2:	add    BYTE PTR [ebx-0xa0dd],al
  413ac8:	dec    edx
  413ac9:	jp     0x413acb
  413acb:	jmp    FWORD PTR [ebp+ebp*4+0x0]
  413acf:	mov    DWORD PTR [ebx],esp
  413ad1:	pop    ebp
  413ad2:	add    BYTE PTR [eax],al
  413ad4:	jae    0x413ae0
  413ad6:	add    BYTE PTR [eax],al
  413ad8:	and    eax,0xabff8951
  413add:	cmp    edi,edi
  413adf:	add    BYTE PTR [ebx],dh
  413ae1:	jle    0x413ae2
  413ae3:	add    BYTE PTR [edi],ch
  413ae5:	cdq    
  413ae6:	add    DWORD PTR [ebx+0x165c],0xfffffff5
  413aed:	push   eax
  413aee:	int3   
  413aef:	inc    esp
  413af1:	jle    0x413a7c
  413af3:	inc    DWORD PTR [edx]
  413af5:	dec    esp
  413af6:	add    DWORD PTR [eax],0xffffffa4
  413af9:	pop    ebx
  413afa:	(bad)  
  413afb:	call   DWORD PTR [ecx+esi*8-0x161b0001]
  413b02:	add    BYTE PTR [eax],al
  413b04:	jno    0x413ae5
  413b06:	dec    esp
  413b08:	enter  0xff1d,0xff
  413b0c:	xchg   DWORD PTR [edi+edi*8],esp
  413b0f:	inc    DWORD PTR [edx+0x4a]
  413b12:	(bad)  
  413b13:	inc    edx
  413b15:	mov    eax,0x1dc000ff
  413b1a:	(bad)  
  413b1b:	inc    DWORD PTR [eax-0x437c00af]
  413b21:	ss (bad) 
  413b23:	jmp    DWORD PTR [esi+0x2c]
  413b26:	cmp    edi,0x46
  413b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b2a:	add    BYTE PTR [eax],al
  413b2c:	xor    ebp,esi
  413b2e:	add    BYTE PTR [eax],al
  413b30:	add    eax,DWORD PTR [ebp-0x1]
  413b33:	inc    DWORD PTR [ecx]
  413b35:	(bad)  
  413b38:	sti    
  413b39:	lahf   
  413b3a:	add    BYTE PTR [eax],al
  413b3c:	fwait
  413b3d:	push   ebx
  413b3e:	inc    DWORD PTR [eax]
  413b40:	stc    
  413b41:	aam    0xff
  413b43:	and    ebp,0x77
  413b46:	add    ah,cl
  413b48:	or     ecx,ecx
  413b4a:	add    DWORD PTR [ebx+0xff43ba],0x6d
  413b51:	sub    esp,ecx
  413b53:	jmp    FWORD PTR [eax+0x6a00ff73]
  413b59:	popf   
  413b5a:	add    BYTE PTR [ebx-0x3e3d],al
  413b60:	and    edi,ecx
  413b62:	(bad)  
  413b63:	inc    DWORD PTR [ebp-0xf]
  413b66:	(bad)  
  413b67:	inc    DWORD PTR [edx+0x60]
  413b6a:	(bad)  
  413b6b:	jmp    DWORD PTR [edx+0xf898342]
  413b71:	mov    ebp,0x263ccc00
  413b76:	dec    esp
  413b78:	adc    DWORD PTR [edi+0x0],0x0
  413b7c:	or     ebx,ebp
  413b7e:	(bad)  
  413b7f:	call   FWORD PTR [eax-0x500000c7]
  413b85:	xchg   ebp,eax
  413b86:	add    BYTE PTR [ebx+0xff0575],al
  413b8c:	jl     0x413bd8
  413b8e:	int3   
  413b8f:	mov    DWORD PTR [edx],edi
  413b91:	jecxz  0x413b93
  413b93:	add    BYTE PTR [edx],dl
  413b95:	sbb    eax,0x34eeffff
  413b9a:	(bad)  
  413b9b:	call   FWORD PTR [edi-0x5700ff36]
  413ba1:	ins    BYTE PTR es:[edi],dx
  413ba2:	(bad)  
  413ba3:	jmp    FWORD PTR [ebx+0x5cff0041]
  413ba9:	js     0x413baa
  413bab:	add    BYTE PTR [ecx-0x75ff7cac],bl
  413bb1:	jmp    0x413b3c
  413bb3:	int3   
  413bb4:	lock cmp al,0x0
  413bb7:	or     DWORD PTR [ebx],0xfffffff3
  413bba:	add    bh,bh
  413bbc:	sti    
  413bbd:	mov    ds:0x4323ff00,eax
  413bc2:	mov    edi,edi
  413bc4:	dec    esp
  413bc5:	sti    
  413bc6:	dec    DWORD PTR [ecx-0x7cff7afe]
  413bcc:	call   0x6d420811
  413bd1:	inc    DWORD PTR [eax]
  413bd3:	add    bh,bl
  413bd5:	stos   BYTE PTR es:[edi],al
  413bd6:	inc    DWORD PTR [eax]
  413bd8:	jnp    0x413b6a
  413bda:	dec    DWORD PTR [ecx+0xffbfac]
  413be0:	mov    bl,0x83
  413be2:	(bad)  
  413be3:	(bad)  
  413be4:	in     al,dx
  413be5:	test   DWORD PTR [ebx-0x3352817d],eax
  413beb:	dec    ecx
  413bed:	jmp    0x413bee
  413bef:	jmp    FWORD PTR ds:0xc800002d
  413bf5:	jecxz  0x413bf7
  413bf7:	int3   
  413bf8:	xor    ebp,DWORD PTR [edi]
  413bfa:	add    BYTE PTR [eax],al
  413bfc:	dec    ebx
  413bfd:	sub    al,0xcc
  413bff:	call   FWORD PTR [eax]
  413c01:	mov    ch,0x0
  413c03:	add    BYTE PTR ds:0xd6ffccaa,al
  413c09:	sahf   
  413c0a:	add    bh,bh
  413c0c:	jmp    0x8326:0x700000e8
  413c13:	add    dl,ch
  413c15:	sbb    edi,edi
  413c17:	int3   
  413c18:	cmp    eax,0x54cc834b
  413c1d:	mov    al,BYTE PTR [eax]
  413c1f:	add    BYTE PTR [eax],ch
  413c21:	mov    eax,0x5dcfff00
  413c26:	(bad)  
  413c27:	inc    DWORD PTR [edx+0x2500ccfd]
  413c2d:	or     al,0x83
  413c2f:	(bad)  
  413c30:	mov    esi,0x39ff0094
  413c35:	inc    edi
  413c36:	int3   
  413c37:	adc    DWORD PTR [edi-0x61ffff95],0xfffffffc
  413c3e:	add    bh,bh
  413c40:	jle    0x413c13
  413c42:	add    ah,cl
  413c44:	pop    esi
  413c45:	pop    es
  413c46:	add    BYTE PTR [ecx-0xbf25],cl
  413c4c:	pushf  
  413c4d:	or     BYTE PTR [eax],al
  413c4f:	cmp    ebp,0xa
  413c52:	add    bh,bh
  413c54:	out    0x87,al
  413c56:	(bad)  
  413c57:	(bad)  
  413c58:	fbld   TBYTE PTR [ebp+0x0]
  413c5b:	(bad)  
  413c5c:	stc    
  413c5d:	mov    ah,0x0
  413c5f:	sbb    ebp,0x1c
  413c62:	dec    DWORD PTR [ecx+0xff1b92]
  413c68:	jp     0x413c91
  413c6a:	add    DWORD PTR [eax],0xffffffc2
  413c6d:	stos   DWORD PTR es:[edi],eax
  413c6e:	add    bh,bh
  413c70:	lods   al,BYTE PTR ds:[esi]
  413c71:	pop    edx
  413c72:	int3   
  413c73:	call   DWORD PTR [eax+0x4200ffa5]
  413c79:	and    bh,bh
  413c7b:	add    BYTE PTR [edx],bh
  413c7d:	mov    ds:0xdf84ccff,al
  413c82:	cmp    edi,0xfffffff7
  413c85:	test   edi,edi
  413c87:	add    BYTE PTR [edi-0x2c],ah
  413c8a:	cmp    edi,0x6c
  413c8d:	in     al,0x0
  413c8f:	(bad)  
  413c90:	cmp    dl,BYTE PTR [edx]
  413c92:	add    bh,bh
  413c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c95:	stc    
  413c96:	(bad)  
  413c97:	call   FWORD PTR [eax+0x6d]
  413c9a:	add    ah,cl
  413c9c:	ret    
  413c9d:	jmp    0x413c9f
  413c9f:	(bad)  
  413ca0:	std    
  413ca1:	jmp    0x413ca2
  413ca3:	mov    ecx,eax
  413ca5:	hlt    
  413ca6:	inc    DWORD PTR [ebx-0x7c00a8ac]
  413cac:	imul   eax,ecx,0x9b1dffcc
  413cb2:	int3   
  413cb3:	and    DWORD PTR [ebx+edi*1+0x48c20089],0xffffffff
  413cbb:	mov    esi,ebx
  413cbd:	aam    0x83
  413cbf:	add    cl,ch
  413cc1:	mov    ecx,0xa71ff00
  413cc6:	int3   
  413cc7:	int3   
  413cc8:	(bad)  
  413cc9:	sub    edi,edi
  413ccb:	int3   
  413ccc:	inc    ebp
  413ccd:	outs   dx,BYTE PTR ds:[esi]
  413cce:	inc    DWORD PTR [eax]
  413cd0:	jne    0x413d41
  413cd2:	int3   
  413cd3:	sub    DWORD PTR [edi-0x87c00a6],0x46
  413cda:	cmp    edi,0x7d
  413cdd:	sbb    eax,0x84e78300
  413ce2:	add    BYTE PTR [eax],al
  413ce4:	dec    ebp
  413ce5:	sbb    edi,edi
  413ce7:	add    BYTE PTR [esi-0x67],cl
  413cea:	cmp    edi,0x79
  413ced:	jne    0x413cee
  413cef:	add    BYTE PTR ds:0xffffffca,ah
  413cf5:	test   esp,ecx
  413cf7:	(bad)  
  413cf8:	jp     0x413d23
  413cfa:	inc    DWORD PTR [ebx-0x33ff8bf0]
  413d00:	xchg   edi,eax
  413d01:	rol    BYTE PTR [eax],cl
  413d03:	and    DWORD PTR [eax],0xffffff9b
  413d06:	add    BYTE PTR [eax],al
  413d08:	mov    ah,0x7b
  413d0a:	or     esp,0x16
  413d0d:	cmp    eax,DWORD PTR [eax]
  413d0f:	add    bl,dh
  413d11:	lods   al,BYTE PTR ds:[esi]
  413d12:	inc    DWORD PTR [eax]
  413d14:	stos   BYTE PTR es:[edi],al
  413d15:	or     eax,DWORD PTR [eax]
  413d17:	dec    DWORD PTR [edx]
  413d19:	stc    
  413d1a:	mov    edi,edi
  413d1c:	mov    dl,0xdd
  413d1e:	mov    edi,edi
  413d20:	xchg   edx,eax
  413d21:	push   ebx
  413d22:	add    bh,bh
  413d24:	pop    esp
  413d25:	and    eax,0x1f3eff89
  413d2a:	cmp    edi,0x2b
  413d2d:	dec    edx
  413d2e:	add    DWORD PTR [eax],0x54
  413d31:	pop    eax
  413d32:	inc    DWORD PTR [ebx+0xff9796]
  413d38:	xor    DWORD PTR [esi-0x7d],ebx
  413d3b:	add    al,dl
  413d3d:	xor    eax,DWORD PTR [ebx+0x558b83]
  413d43:	mov    DWORD PTR [eax],ebp
  413d45:	mov    al,0xff
  413d47:	mov    DWORD PTR [ebp-0x21],edi
  413d4a:	(bad)  
  413d4b:	(bad)  
  413d4c:	fdiv   DWORD PTR [esi-0x1]
  413d4f:	int3   
  413d50:	cs (bad) 
  413d52:	inc    DWORD PTR [eax]
  413d54:	adc    bh,BYTE PTR [edi+0xc800000]
  413d5a:	dec    esp
  413d5c:	sti    
  413d5d:	repnz add bh,bh
  413d60:	jno    0x413ce9
  413d62:	(bad)  
  413d63:	inc    DWORD PTR [eax-0x76ff00f1]
  413d69:	dec    edx
  413d6a:	cmp    edi,0xffffff83
  413d6d:	daa    
  413d6e:	add    BYTE PTR [eax],al
  413d70:	pop    ds
  413d71:	pop    ebp
  413d72:	(bad)  
  413d73:	(bad)  
  413d74:	out    dx,al
  413d75:	mov    edi,0x345e89ff
  413d7a:	inc    DWORD PTR [eax]
  413d7c:	and    BYTE PTR [edi-0x44daff01],dh
  413d82:	add    BYTE PTR [eax],al
  413d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d86:	inc    DWORD PTR [ebx-0xd03a]
  413d8c:	jno    0x413d8f
  413d8e:	add    DWORD PTR [eax],0x47
  413d91:	cmp    edi,edi
  413d93:	add    BYTE PTR [ebx-0xe],al
  413d96:	cmp    edi,0xffffff99
  413d99:	daa    
  413d9a:	add    bh,bh
  413d9c:	mov    edx,0xa100ff0e
  413da1:	add    edi,edi
  413da3:	(bad)  
  413da4:	mov    esi,0x528300ca
  413da9:	popf   
  413daa:	inc    DWORD PTR [ebx-0x771d]
  413db0:	mov    dh,0x82
  413db2:	dec    esp
  413db4:	das    
  413db5:	cmp    bh,bh
  413db7:	add    BYTE PTR [edx],bl
  413db9:	outs   dx,BYTE PTR ds:[esi]
  413dba:	(bad)  
  413dbb:	jmp    DWORD PTR ds:0x5600835c
  413dc1:	or     al,0x0
  413dc3:	jmp    DWORD PTR [esi]
  413dc5:	mov    WORD PTR [eax],es
  413dc7:	int3   
  413dc8:	out    dx,eax
  413dc9:	cmp    edi,0x0
  413dcc:	test   eax,0xbccc83e0
  413dd1:	stos   DWORD PTR es:[edi],eax
  413dd2:	inc    DWORD PTR [eax]
  413dd4:	and    al,0x52
  413dd6:	add    bh,bh
  413dd8:	popa   
  413dd9:	in     eax,0x0
  413ddb:	jmp    FWORD PTR [edi+0x4289007d]
  413de1:	cmp    edi,0x0
  413de4:	repz aad 0xff
  413de7:	and    DWORD PTR [ecx+0x3f],0xffffffcc
  413deb:	sub    DWORD PTR [ecx-0x6e00763a],0xffffffbf
  413df2:	int3   
  413df3:	push   DWORD PTR [esi+0x71]
  413df6:	mov    DWORD PTR [ebx-0xfe6b],eax
  413dfc:	daa    
  413dfd:	or     BYTE PTR [eax],al
  413dff:	adc    DWORD PTR ds:0x6bffff1f,0x5
  413e06:	inc    DWORD PTR [eax]
  413e08:	mov    bl,BYTE PTR [esi+0x58798983]
  413e0e:	dec    DWORD PTR [ecx+0x89e9f7]
  413e14:	mov    ebx,0x5e00ff2b
  413e19:	pushf  
  413e1a:	(bad)  
  413e1b:	call   DWORD PTR [ecx-0xff005f]
  413e21:	pop    es
  413e22:	inc    DWORD PTR [eax]
  413e24:	mov    ecx,0x10cc0068
  413e29:	(bad)  
  413e2a:	(bad)  
  413e2b:	jmp    DWORD PTR [ebx]
  413e2d:	pop    ss
  413e2e:	(bad)  
  413e2f:	dec    DWORD PTR [ebx]
  413e31:	ds (bad) 
  413e33:	dec    DWORD PTR [esi]
  413e35:	(bad)  
  413e37:	add    BYTE PTR [esi],al
  413e39:	jbe    0x413e3b
  413e3b:	(bad)  
  413e3c:	std    
  413e3d:	and    eax,0xc7ce00ff
  413e42:	inc    DWORD PTR [eax]
  413e44:	(bad)  
  413e46:	mov    DWORD PTR [eax],eax
  413e48:	push   esi
  413e49:	fdivp  st(7),st
  413e4b:	jmp    DWORD PTR [ebp-0x3e]
  413e4e:	or     esp,0x10
  413e51:	dec    esp
  413e52:	int3   
  413e53:	add    BYTE PTR [ebx-0x2f00ff18],ah
  413e59:	push   esi
  413e5a:	(bad)  
  413e5b:	dec    DWORD PTR [edx]
  413e5d:	sbb    ah,cl
  413e5f:	jmp    edi
  413e61:	out    dx,eax
  413e62:	mov    DWORD PTR [ebx+0xccf936],eax
  413e68:	fs icebp 
  413e6a:	int3   
  413e6b:	dec    DWORD PTR [ebx-0x300ff5c]
  413e71:	popf   
  413e72:	(bad)  
  413e73:	call   ebp
  413e75:	xor    eax,0xb0dbff89
  413e7a:	inc    DWORD PTR [eax]
  413e7c:	shr    DWORD PTR [esi+0x48e083ff],cl
  413e82:	add    DWORD PTR [eax],0xfffffff1
  413e85:	sbb    al,0xcc
  413e87:	call   FWORD PTR [edi+0x8]
  413e8a:	(bad)  
  413e8b:	(bad)  
  413e8c:	(bad)  
  413e8e:	(bad)  
  413e8f:	(bad)  
  413e90:	fisttp WORD PTR [ecx-0x1]
  413e93:	dec    DWORD PTR [edx-0x40ffff76]
  413e99:	xchg   edx,eax
  413e9a:	add    BYTE PTR [eax],al
  413e9c:	pop    es
  413e9d:	call   0xff00:0x599f00ff
  413ea4:	xchg   BYTE PTR [edi-0x1],al
  413ea7:	jmp    DWORD PTR [edi+ecx*1]
  413eaa:	mov    DWORD PTR [ebx-0x76004e15],eax
  413eb0:	mov    dl,0x6d
  413eb2:	or     esp,0xfffffff9
  413eb5:	add    DWORD PTR fs:[ebx+0x895ea0],0x2d
  413ebd:	inc    DWORD PTR ss:[eax]
  413ec0:	lods   al,BYTE PTR ds:[esi]
  413ec1:	nop
  413ec2:	add    BYTE PTR [ecx-0x3300e260],cl
  413ec8:	into   
  413ec9:	xor    al,0xcc
  413ecb:	push   DWORD PTR ds:0xb800831d
  413ed1:	mov    edi,?
  413ed3:	(bad)  
  413ed4:	jg     0x413f18
  413ed6:	add    bh,bh
  413ed8:	push   0x5eccff62
  413edd:	dec    ebx
  413ede:	inc    DWORD PTR [eax]
  413ee0:	mov    al,0xbc
  413ee2:	add    BYTE PTR [eax],al
  413ee4:	fst    QWORD PTR [edi+edi*8-0x1]
  413ee8:	aam    0x71
  413eea:	int3   
  413eeb:	call   DWORD PTR [ecx+ecx*1]
  413eee:	inc    DWORD PTR [ebx-0xef06]
  413ef4:	cld    
  413ef5:	idiv   edi
  413ef7:	call   FWORD PTR [esi-0x2b000022]
  413efd:	test   ah,0xff
  413f00:	push   ebx
  413f01:	in     al,0xff
  413f03:	or     DWORD PTR ds:0xdff0016,0xffffff9d
  413f0a:	(bad)  
  413f0b:	call   DWORD PTR [ecx+0x74]
  413f0e:	add    DWORD PTR [eax],0x37
  413f11:	mov    dl,0xff
  413f13:	or     DWORD PTR [esi],0x6c
  413f16:	inc    DWORD PTR [eax]
  413f18:	jbe    0x413f47
  413f1a:	add    bh,bh
  413f1c:	lds    esi,FWORD PTR [esi-0x1]
  413f1f:	(bad)  
  413f20:	fistp  WORD PTR [ebx+eax*4-0x76b8bc00]
  413f27:	mov    DWORD PTR [ecx],eax
  413f29:	out    0x83,eax
  413f2b:	add    BYTE PTR [ecx+0x74ff893d],dl
  413f31:	add    eax,0xc02eff89
  413f36:	mov    edi,edi
  413f38:	int3   
  413f39:	sub    BYTE PTR [ebx-0x33606100],al
  413f3f:	add    BYTE PTR [edx-0x77],bl
  413f42:	(bad)  
  413f43:	jmp    DWORD PTR [edx-0x2c000086]
  413f49:	cdq    
  413f4a:	mov    edi,edi
  413f4c:	push   cs
  413f4d:	mov    bl,0xff
  413f4f:	add    BYTE PTR [ebx+esi*1-0x74207601],al
  413f56:	int3   
  413f57:	dec    DWORD PTR [edi+0x22ff0075]
  413f5d:	str    WORD PTR [ecx+0xbbfe]
  413f64:	push   edi
  413f65:	lods   al,BYTE PTR ds:[esi]
  413f66:	inc    DWORD PTR [ebx+0xff3b1f]
  413f6c:	fst    DWORD PTR [ebx]
  413f6e:	add    DWORD PTR [ebx-0x76ffe5bc],0xffffffc8
  413f75:	mov    ds:0xe25900cc,eax
  413f7a:	mov    DWORD PTR [eax],eax
  413f7c:	push   es
  413f7d:	jno    0x413f08
  413f7f:	add    BYTE PTR [ebx],cl
  413f81:	pop    edi
  413f82:	add    bh,bh
  413f84:	jg     0x413f20
  413f86:	add    ah,cl
  413f88:	mov    edi,0xdb008389
  413f8d:	int3   
  413f8e:	add    BYTE PTR [ebx-0x7cff566c],al
  413f94:	scas   al,BYTE PTR es:[edi]
  413f95:	out    0xff,al
  413f97:	(bad)  
  413f98:	(bad)  
  413f9a:	add    BYTE PTR [eax],al
  413f9c:	pop    ds
  413f9d:	call   0x83ff:0xc80effff
  413fa4:	fadd   DWORD PTR [ebx+0x2ac0089]
  413faa:	add    DWORD PTR [eax],0xffffffe8
  413fad:	push   ds
  413fae:	add    bh,bh
  413fb0:	aam    0xbb
  413fb2:	int3   
  413fb3:	add    BYTE PTR [esi+0x2a00ffb8],ah
  413fb9:	call   0x83ff:0x827dff00
  413fc0:	mov    dl,0x2f
  413fc2:	add    DWORD PTR [ebx-0xff23d8],0x45
  413fc9:	xor    edi,edi
  413fcb:	push   DWORD PTR [esi]
  413fcd:	mov    ?,edi
  413fcf:	add    dh,bh
  413fd1:	(bad)  
  413fd2:	add    DWORD PTR [ebx+0xff1b62],0x7
  413fd9:	pop    es
  413fda:	add    BYTE PTR [eax],al
  413fdc:	mov    cl,0xe4
  413fde:	inc    DWORD PTR [eax]
  413fe0:	mov    bh,0xf
  413fe2:	add    BYTE PTR [eax],al
  413fe4:	test   BYTE PTR [edi+edi*8+0xc11600],ah
  413feb:	xor    DWORD PTR [edi],0x42
  413fee:	inc    DWORD PTR [ebx+0x63e4]
  413ff4:	gs (bad) 
  413ff6:	(bad)  
  413ff7:	push   DWORD PTR [edi-0x6b0000f7]
  413ffd:	jmp    0x413f82
  413fff:	add    BYTE PTR [eax+0x51ffff3f],ch
  414005:	test   BYTE PTR [ebx-0x3ae301],0x0
  41400c:	mov    dl,0x1d
  41400e:	dec    esp
  414010:	pop    ss
  414011:	mov    DWORD PTR [ebx-0x7ce501],0xffb5eccc
  41401b:	call   FWORD PTR [ebp+eiz*8-0x1]
  41401f:	int3   
  414020:	xchg   esi,eax
  414021:	out    0xff,eax
  414023:	or     DWORD PTR [ecx],0x13
  414026:	mov    edi,edi
  414028:	(bad)  
  414029:	idiv   bh
  41402b:	add    BYTE PTR [esp+edx*1],bl
  41402e:	cmp    edi,0x7b
  414031:	(bad)  
  414033:	push   DWORD PTR [esi-0x16]
  414036:	or     DWORD PTR [ecx-0xff9606],0x65
  41403d:	aas    
  41403e:	add    BYTE PTR [eax],al
  414040:	xor    BYTE PTR [edi+edi*8-0x99e734],ch
  414047:	add    BYTE PTR [esi+0x18],dl
  41404a:	inc    DWORD PTR [ebx-0xadeb]
  414050:	adc    cl,BYTE PTR [ebp-0x4530000]
  414056:	(bad)  
  414057:	jmp    FWORD PTR [edx-0x2d00ff9f]
  41405d:	rol    BYTE PTR [eax],cl
  41405f:	push   esp
  414061:	mov    dl,0xff
  414063:	add    BYTE PTR ds:0x4a00008f,al
  414069:	stc    
  41406a:	inc    DWORD PTR [ebx-0xff84d9]
  414070:	sub    al,0xca
  414072:	inc    DWORD PTR [ebx-0x760069ad]
  414078:	and    DWORD PTR [eax+eax*1+0x8a39ff],ecx
  41407f:	call   DWORD PTR [esp+edx*1-0x378ff34]
  414086:	dec    DWORD PTR [ecx-0xffc4fd]
  41408c:	aam    0xae
  41408e:	add    BYTE PTR [eax],al
  414090:	aad    0x61
  414092:	cmp    edi,0x1c
  414095:	push   0x0
  414097:	add    BYTE PTR [esi-0x4cfffff9],dl
  41409d:	(bad)  
  41409f:	xor    DWORD PTR [eax],0xe
  4140a2:	dec    esp
  4140a4:	hlt    
  4140a5:	fld    DWORD PTR [ebx+0xdebcc]
  4140ab:	inc    DWORD PTR ds:0xe0ff0016
  4140b1:	aam    0xff
  4140b3:	jmp    DWORD PTR [eax-0x7e]
  4140b6:	inc    DWORD PTR [ebx+0xff28b6]
  4140bc:	repz pop es
  4140be:	int3   
  4140bf:	int3   
  4140c0:	rol    ebp,0xff
  4140c3:	push   DWORD PTR [ebp-0x1000048]
  4140c9:	or     edi,edi
  4140cb:	int3   
  4140cc:	xchg   edi,eax
  4140cd:	jmp    0x83:0xf33b83cc
  4140d4:	jae    0x414092
  4140d6:	add    DWORD PTR [eax],0xfffffff0
  4140d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140da:	(bad)  
  4140db:	jmp    FWORD PTR [ecx-0x37c006f]
  4140e1:	test   al,0x0
  4140e3:	and    ebp,0xffffffde
  4140e6:	add    DWORD PTR [ebx+0x830c14],0xffffff8f
  4140ed:	sbb    bh,bh
  4140ef:	mov    ebp,esp
  4140f1:	jge    0x41407c
  4140f3:	cmp    DWORD PTR [edi-0x57],0xffffffff
  4140f7:	add    BYTE PTR [esi-0x687cff2d],bh
  4140fd:	mov    edi,0x1c96ffcc
  414102:	dec    esp
  414104:	pop    eax
  414105:	mov    eax,0x8b09ff00
  41410a:	inc    DWORD PTR [eax]
  41410c:	dec    eax
  41410d:	les    eax,FWORD PTR [ebx+0x7b22ff]
  414113:	add    BYTE PTR [ecx-0x64ffff76],al
  414119:	inc    esp
  41411a:	(bad)  
  41411b:	jmp    FWORD PTR [ebx+eiz*8+0x533fffff]
  414122:	(bad)  
  414123:	call   FWORD PTR [ecx]
  414125:	(bad)  
  414126:	inc    DWORD PTR [eax]
  414128:	xchg   esp,eax
  414129:	je     0x41412b
  41412b:	add    BYTE PTR [ecx-0x4eff76a6],bh
  414131:	(bad)  
  414132:	dec    esp
  414134:	jno    0x414135
  414136:	add    BYTE PTR [ebx-0x7c00324a],al
  41413c:	fsubr  DWORD PTR ds:0x57e4cc89
  414142:	dec    DWORD PTR [ecx-0xffecce]
  414148:	inc    esp
  414149:	in     eax,0x0
  41414b:	add    BYTE PTR [edx],ch
  41414d:	dec    esp
  41414f:	(bad)  
  414150:	mov    ebp,0xb783ff80
  414155:	cwde   
  414156:	inc    DWORD PTR [eax]
  414158:	call   0xab41c49f
  41415d:	sar    edi,1
  41415f:	int3   
  414160:	add    edi,ebp
  414162:	mov    DWORD PTR [eax],eax
  414164:	cdq    
  414165:	mov    es,WORD PTR [eax]
  414167:	call   DWORD PTR [edi]
  414169:	and    bh,bh
  41416b:	jmp    FWORD PTR [ebx+0x32830095]
  414171:	popa   
  414172:	(bad)  
  414173:	jmp    FWORD PTR [eax-0x48ffff17]
  414179:	xchg   esp,eax
  41417a:	mov    edi,edi
  41417c:	js     0x4141c8
  41417e:	mov    DWORD PTR [eax],eax
  414180:	shl    BYTE PTR [ecx],cl
  414182:	inc    DWORD PTR [eax]
  414184:	imul   BYTE PTR [eax]
  414186:	(bad)  
  414187:	jmp    FWORD PTR [edx]
  414189:	out    dx,eax
  41418a:	(bad)  
  41418b:	inc    DWORD PTR [esp+ecx*4-0x1]
  41418f:	mov    ebx,ebp
  414191:	inc    ebp
  414192:	int3   
  414193:	add    BYTE PTR [ebx],cl
  414195:	and    bh,bh
  414197:	and    DWORD PTR [esi+esi*4+0x0],0x0
  41419c:	xchg   DWORD PTR [eax+eax*1],edx
  41419f:	add    BYTE PTR [ecx],dl
  4141a1:	dec    eax
  4141a2:	(bad)  
  4141a3:	call   DWORD PTR [eax-0x4e]
  4141a6:	dec    DWORD PTR [ecx+0xffe55a]
  4141ac:	jg     0x41421d
  4141ae:	or     DWORD PTR [ecx-0x53cf],0x7a
  4141b5:	(bad)  
  4141b6:	(bad)  
  4141b7:	(bad)  
  4141b8:	clc    
  4141b9:	jbe    0x414187
  4141bb:	inc    DWORD PTR [edi+edi*4-0x19eb7c01]
  4141c2:	add    ah,cl
  4141c4:	jmp    0x41419e
  4141c6:	add    bh,bh
  4141c8:	push   ds
  4141c9:	ror    esp,0x89
  4141cc:	sbb    bl,bh
  4141ce:	add    BYTE PTR [ecx-0x337c0a92],cl
  4141d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d5:	cmp    DWORD PTR [eax],eax
  4141d7:	add    BYTE PTR ds:0xb08300a2,dl
  4141dd:	hlt    
  4141de:	add    BYTE PTR [ebx-0x764bdb],al
  4141e4:	inc    ebp
  4141e5:	inc    esi
  4141e6:	int3   
  4141e7:	add    BYTE PTR [ebp+0x6400ff43],cl
  4141ed:	cmp    edi,0xb60f00
  4141f3:	add    bh,bl
  4141f5:	(bad)  
  4141f6:	int3   
  4141f7:	add    ch,bl
  4141f9:	xchg   esi,eax
  4141fa:	add    DWORD PTR [eax],0xe
  4141fd:	hlt    
  4141fe:	or     DWORD PTR [ecx-0x7c716d],0x49
  414205:	jle    0x414206
  414207:	sbb    DWORD PTR [edi+ecx*2-0x34],0xffffffff
  41420c:	cwde   
  41420d:	mov    esp,0x9edaff89
  414212:	add    ah,cl
  414214:	jne    0x414279
  414216:	inc    DWORD PTR [ebx-0x7c7c9eb2]
  41421c:	pop    ebp
  41421d:	imul   edi,edi,0xffffffff
  414220:	nop
  414221:	and    bh,bh
  414223:	jmp    DWORD PTR [ecx-0x7100ff58]
  414229:	mov    ds:0x9988ff00,al
  41422e:	or     esp,0xffffff92
  414231:	or     DWORD PTR gs:[ecx-0xe6f0],0xffffffa6
  414239:	inc    ecx
  41423a:	add    bh,bh
  41423c:	in     eax,0xa7
  41423e:	add    BYTE PTR [eax],al
  414240:	cmp    ah,BYTE PTR [ecx-0x77]
  414243:	add    BYTE PTR [ebp+0xe],bh
  414246:	add    bh,bh
  414248:	pop    edx
  414249:	pop    ds
  41424a:	add    BYTE PTR [ebx+0xff698f],al
  414250:	and    DWORD PTR [ecx-0x1],ebp
  414253:	jmp    FWORD PTR ds:0x23ffffc3
  414259:	jns    0x41425a
  41425b:	add    BYTE PTR [edx-0x3533007c],bh
  414261:	(bad)  
  414262:	dec    esp
  414264:	int    0x6a
  414266:	add    bh,bh
  414268:	dec    esp
  414269:	and    bh,bh
  41426b:	int3   
  41426c:	add    eax,0xc183ff8c
  414271:	in     al,dx
  414272:	inc    DWORD PTR [eax]
  414274:	add    bh,ah
  414276:	cmp    edi,0x9
  414279:	xchg   edi,eax
  41427a:	int3   
  41427b:	push   DWORD PTR [esi]
  41427d:	xchg   esp,eax
  41427e:	add    BYTE PTR [eax],al
  414280:	push   ds
  414281:	dec    ebx
  414282:	mov    DWORD PTR [eax],eax
  414284:	cmp    eax,DWORD PTR ds:0x148affff
  41428a:	add    DWORD PTR [eax],0x5a
  41428d:	xchg   esp,eax
  41428e:	inc    DWORD PTR [ebx-0x7cff787e]
  414294:	fdivr  st,st(1)
  414296:	add    bh,bh
  414298:	pop    ebx
  414299:	adc    al,0x83
  41429b:	or     DWORD PTR [ecx+0x56],0x0
  41429f:	jmp    FWORD PTR [esp+esi*4]
  4142a2:	inc    DWORD PTR [eax]
  4142a4:	retf   0xffdb
  4142a7:	add    BYTE PTR [ebx],bh
  4142a9:	loop   0x4142aa
  4142ab:	call   DWORD PTR [eax-0x7b]
  4142ae:	dec    DWORD PTR [ecx+0xff3795]
  4142b4:	cmp    BYTE PTR [edx],0xff
  4142b7:	int3   
  4142b8:	ds xchg edi,eax
  4142ba:	add    bh,bh
  4142bc:	(bad)  
  4142bd:	test   eax,0x2d3ffff
  4142c2:	mov    esp,ecx
  4142c4:	mov    dl,0x0
  4142c7:	add    bh,bh
  4142c9:	fdivp  st(7),st
  4142cb:	jmp    DWORD PTR [ebx-0x18ff7c93]
  4142d1:	sub    DWORD PTR [ecx-0x7cf56234],ecx
  4142d7:	int3   
  4142d8:	fisubr DWORD PTR [ebx]
  4142da:	inc    DWORD PTR [eax]
  4142dc:	scas   eax,DWORD PTR es:[edi]
  4142dd:	add    DWORD PTR [ebx-0x715f00],eax
  4142e3:	xor    DWORD PTR [ebp+0x9],0xffffff89
  4142e7:	add    ch,dh
  4142e9:	imul   eax,DWORD PTR [ebx-0xe4f834],0xffffffcc
  4142f0:	and    BYTE PTR [edi],bh
  4142f2:	mov    DWORD PTR [eax],eax
  4142f4:	xor    bl,ah
  4142f6:	cmp    edi,0xfffffff3
  4142f9:	pop    edi
  4142fa:	mov    edi,edi
  4142fc:	icebp  
  4142fd:	sub    DWORD PTR [ebx+0x1726ff],eax
  414303:	call   DWORD PTR [eax-0x3e7cff63]
  414309:	push   edx
  41430a:	int3   
  41430b:	int3   
  41430c:	les    esp,FWORD PTR [ebx]
  41430e:	int3   
  41430f:	(bad)  
  414310:	cmp    DWORD PTR [ecx+0x4594ff89],ebp
  414316:	add    bh,bh
  414318:	in     al,dx
  414319:	into   
  41431a:	int3   
  41431b:	int3   
  41431c:	pop    ds
  41431d:	xor    eax,DWORD PTR [ebx-0x76de9f34]
  414323:	mov    DWORD PTR [esi+0x2d],edx
  414326:	add    bh,bh
  414328:	jb     0x414332
  41432a:	mov    DWORD PTR [ebx-0x33345d],eax
  414330:	aad    0x6f
  414332:	int3   
  414333:	add    dl,bh
  414335:	cmp    ecx,esp
  414337:	add    dl,bl
  414339:	sub    bh,bh
  41433b:	call   edx
  41433d:	inc    ebp
  41433e:	cmp    edi,0xffffff94
  414341:	mov    eax,0x2a1ff00
  414346:	add    DWORD PTR [eax],0xffffffb8
  414349:	ret    
  41434a:	add    bh,bh
  41434c:	hlt    
  41434d:	leave  
  41434e:	mov    DWORD PTR [ebx-0x33004f91],eax
  414354:	inc    esp
  414355:	(bad)  
  414358:	and    DWORD PTR [ebx+0x0],edx
  41435b:	or     DWORD PTR [ebp-0x1f],0xffffff83
  41435f:	mov    DWORD PTR [eax+edi*8],eax
  414362:	inc    DWORD PTR [eax]
  414364:	pop    esi
  414365:	xor    al,0x0
  414367:	mov    edx,edi
  414369:	push   es
  41436a:	(bad)  
  41436b:	(bad)  
  41436c:	ficom  DWORD PTR ds:0x9f17cc83
  414372:	add    BYTE PTR [ebx+0xffbcf4],al
  414378:	imul   eax,ebx,0x9904ffcc
  41437e:	mov    DWORD PTR [eax],eax
  414380:	retf   0xffd9
  414383:	add    BYTE PTR [edx-0x48],ah
  414386:	inc    DWORD PTR [ebx+0xff6f26]
  41438c:	mov    edi,0x12ffcca6
  414391:	out    0xcc,al
  414393:	add    BYTE PTR [ebx],cl
  414395:	stos   DWORD PTR es:[edi],eax
  414396:	add    BYTE PTR [ebx-0x7c002bf1],al
  41439c:	call   FWORD PTR [ecx-0x77]
  41439f:	jmp    FWORD PTR [ebp-0x30ff7cf9]
  4143a5:	ja     0x41432a
  4143a7:	add    BYTE PTR [esi+0x4d838393],dl
  4143ad:	popa   
  4143ae:	cmp    edi,0xffffffd4
  4143b1:	mov    al,ds:0x2665ff83
  4143b6:	add    BYTE PTR [eax],al
  4143b8:	mov    cs:0xa127ffff,eax
  4143be:	dec    DWORD PTR [ecx+0x8311f4]
  4143c4:	mov    esi,0x67ffffe9
  4143c9:	stc    
  4143ca:	inc    DWORD PTR [eax]
  4143cc:	mov    ds:0x4c00ff6e,eax
  4143d1:	pop    esi
  4143d2:	(bad)  
  4143d3:	inc    ecx
  4143d5:	add    al,0x0
  4143d7:	call   ebp
  4143d9:	jnp    0x4143a7
  4143db:	add    BYTE PTR [ebx+0x7ecc83b1],ah
  4143e1:	pop    esi
  4143e2:	(bad)  
  4143e3:	(bad)  
  4143e4:	mov    eax,0x1300002f
  4143e9:	fdivr  st,st(7)
  4143eb:	sbb    ebx,0x2e
  4143ee:	add    DWORD PTR [eax],0xffffffde
  4143f1:	xrelease mov DWORD PTR [eax],eax
  4143f4:	aad    0x3f
  4143f6:	add    BYTE PTR [eax],al
  4143f8:	imul   ebp,DWORD PTR [eax],0xd7a9ffff
  4143fe:	inc    DWORD PTR [eax]
  414400:	xchg   edx,eax
  414401:	cmp    esp,ecx
  414403:	add    BYTE PTR [esi-0x7e0000db],dh
  414409:	aas    
  41440a:	add    bh,bh
  41440c:	inc    ecx
  41440d:	sub    al,0x83
  41440f:	mov    DWORD PTR [edi-0x15],ebp
  414412:	inc    DWORD PTR [eax]
  414414:	aas    
  414415:	push   ebp
  414416:	mov    DWORD PTR [eax],eax
  414418:	je     0x4143ea
  41441a:	add    bh,bh
  41441c:	test   esi,edx
  41441e:	inc    DWORD PTR [ebx+0x893b1d]
  414424:	push   ebp
  414425:	fdivr  st,st(7)
  414427:	(bad)  
  414428:	fild   WORD PTR [esi]
  41442a:	cmp    edi,0xffffffbe
  41442d:	mov    eax,DWORD PTR [eax]
  41442f:	push   DWORD PTR [esi-0x78]
  414432:	mov    edi,edi
  414434:	mov    al,ds:0xac830042
  414439:	add    BYTE PTR [eax],0xff
  41443c:	test   BYTE PTR [ebp-0x7d],ch
  41443f:	add    BYTE PTR [edx],al
  414441:	dec    esp
  414442:	add    ah,cl
  414444:	test   al,0x3f
  414446:	add    BYTE PTR [ecx+0x595c],cl
  41444c:	bound  ebx,QWORD PTR [edx]
  41444e:	inc    DWORD PTR [ebx+0xcc03d8]
  414454:	jge    0x4144b0
  414456:	dec    DWORD PTR [ecx-0xffc291]
  41445c:	dec    esi
  41445d:	add    DWORD PTR [eax],eax
  41445f:	add    BYTE PTR [edx],bl
  414461:	adc    al,0xff
  414463:	add    BYTE PTR [ebx],bh
  414465:	add    bh,bh
  414467:	inc    DWORD PTR [ebp-0x25]
  41446a:	int3   
  41446b:	add    ah,dh
  41446d:	dec    esi
  41446e:	(bad)  
  41446f:	jmp    DWORD PTR ds:0x66ffcc95
  414475:	fadd   DWORD PTR [eax]
  414477:	add    ah,dh
  414479:	add    al,0x0
  41447b:	call   DWORD PTR [ecx]
  41447d:	mov    al,BYTE PTR [eax]
  41447f:	jmp    DWORD PTR [edx+0x6383ff24]
  414485:	repnz add bh,bh
  414488:	pushf  
  414489:	cmp    DWORD PTR [ebx+0x90bd00],eax
  41448f:	push   esp
  414491:	add    BYTE PTR [ebx+0x8d98ff],0xff
  414498:	jp     0x41441e
  41449a:	(bad)  
  41449b:	jmp    DWORD PTR [esi*8+0x493c0083]
  4144a2:	inc    DWORD PTR [eax]
  4144a4:	nop
  4144a5:	popf   
  4144a6:	(bad)  
  4144a7:	push   DWORD PTR [eax-0x330000ee]
  4144ad:	adc    DWORD PTR [ecx+0x6ec8cc],ecx
  4144b3:	add    cl,ch
  4144b5:	mov    al,ds:0x4c010089
  4144ba:	dec    esp
  4144bc:	(bad)  
  4144bd:	jno    0x4144be
  4144bf:	int3   
  4144c0:	cmp    dl,al
  4144c2:	inc    DWORD PTR [eax]
  4144c4:	adc    BYTE PTR [ebp+0x471a0000],ch
  4144ca:	int3   
  4144cb:	(bad)  
  4144cc:	fucomp st(6)
  4144ce:	int3   
  4144cf:	mov    DWORD PTR [ecx+0x69],ecx
  4144d2:	cmp    edi,0xffffffb7
  4144d5:	inc    eax
  4144d6:	int3   
  4144d7:	(bad)  
  4144d8:	mov    ebp,0xb0ff0043
  4144dd:	add    BYTE PTR [ebx+0x7eeacc],0xff
  4144e4:	mov    bh,0x80
  4144e6:	dec    esp
  4144e8:	push   eax
  4144e9:	mov    DWORD PTR [ebx-0x3306ac7d],0x86d2ff
  4144f3:	add    BYTE PTR [edx-0x1d],cl
  4144f6:	add    BYTE PTR [eax],al
  4144f8:	xor    ah,bl
  4144fa:	add    bh,bh
  4144fc:	push   ecx
  4144fd:	(bad)  
  4144fe:	dec    DWORD PTR [ecx-0xa94]
  414504:	repnz ds add bh,bh
  414508:	xor    eax,0xd783ff67
  41450d:	fs add bh,bh
  414510:	or     edx,DWORD PTR [eax]
  414512:	add    bh,bh
  414514:	or     edx,ebp
  414516:	add    ah,cl
  414518:	inc    edi
  414519:	std    
  41451a:	add    BYTE PTR [eax],al
  41451c:	imul   ebx,DWORD PTR [ecx],0x8c82ffcc
  414522:	cmp    edi,0xffffffba
  414525:	lock (bad) 
  414527:	call   FWORD PTR [ecx+0xa]
  41452a:	mov    edi,edi
  41452c:	cli    
  41452d:	add    DWORD PTR [eax],0xeaff00
  414533:	add    BYTE PTR [ebx+0x3],dh
  414536:	add    bh,bh
  414538:	loope  0x4144f1
  41453a:	(bad)  
  41453b:	(bad)  
  41453c:	cmp    DWORD PTR [eax+0x4d2cff89],esi
  414542:	add    bh,bh
  414544:	imul   ebp,DWORD PTR [eax+eax*1],0xac01ff
  41454b:	int3   
  41454c:	and    ch,cl
  41454e:	inc    DWORD PTR [eax]
  414550:	cmp    edi,0x57
  414553:	(bad)  
  414554:	fsub   DWORD PTR [edx]
  414556:	add    BYTE PTR [edi-0x77],bh
  414559:	(bad)  
  41455a:	fadd   QWORD PTR [ebx+0x19ff18f4]
  414560:	add    DWORD PTR [ebx-0x4d9c7663],0xffffffff
  414567:	sub    eax,DWORD PTR [ebx-0xdffa77d]
  41456d:	xchg   ebx,eax
  41456e:	push   esp
  414570:	add    DWORD PTR [eax],0x16
  414573:	jmp    FWORD PTR [ebp-0xc6007a]
  414579:	inc    DWORD PTR ds:0xff227c89
  41457f:	sub    edi,edi
  414581:	add    BYTE PTR [ebx-0x765a3901],bh
  414587:	cmp    edi,edi
  414589:	adc    DWORD PTR [eax],0xffffffff
  41458c:	xchg   esp,eax
  41458d:	out    dx,al
  41458e:	int3   
  41458f:	sub    al,BYTE PTR [eax]
  414591:	add    BYTE PTR [ebp+0xe4b8ff],ah
  414597:	add    ecx,esp
  414599:	add    bh,dh
  41459b:	add    BYTE PTR [edx-0x7c727c85],dl
  4145a1:	add    dh,al
  4145a3:	(bad)  
  4145a4:	jmp    0xeeff:0xd700a2
  4145ab:	(bad)  
  4145ac:	mov    ebx,0xff5283c3
  4145b1:	sub    ebx,0xffffffff
  4145b4:	mov    ds:0xcc50ff61,eax
  4145b9:	(bad)  
  4145ba:	fcmovne st,st(4)
  4145bc:	cmp    BYTE PTR [edx+0xff2283],ch
  4145c2:	sar    bh,1
  4145c4:	ja     0x4145dd
  4145c6:	int3   
  4145c7:	cmp    DWORD PTR [eax],eax
  4145c9:	add    BYTE PTR [esi-0x874000],ah
  4145cf:	popa   
  4145d0:	(bad)  
  4145d1:	push   DWORD PTR [edx-0x1]
  4145d4:	cmp    eax,ecx
  4145d6:	add    BYTE PTR [ebp-0xb20001],al
  4145dc:	jae    0x4145ac
  4145de:	int3   
  4145df:	mov    bh,bh
  4145e1:	inc    DWORD PTR [edx-0x1]
  4145e4:	pusha  
  4145e5:	push   esi
  4145e6:	add    BYTE PTR [ebx-0x1],ch
  4145e9:	push   DWORD PTR [eax-0x34]
  4145ec:	shl    BYTE PTR [edi+0xd4ff],1
  4145f2:	dec    esp
  4145f3:	push   DWORD PTR [esi-0x33a20044]
  4145f9:	sub    DWORD PTR [ecx-0x1],0x2a
  4145fd:	inc    eax
  4145fe:	jmp    DWORD PTR [ecx+ecx*4-0x1]
  414602:	lock jmp DWORD PTR [ecx]
  414605:	xchg   ebp,eax
  414606:	add    BYTE PTR [eax],ch
  414608:	int3   
  414609:	call   FWORD PTR [eax+eax*1]
  41460c:	mul    DWORD PTR [ebp-0x1]
  41460f:	jmp    0x414594
  414611:	add    BYTE PTR [ecx],al
  414613:	add    al,al
  414615:	ret    
  414616:	add    BYTE PTR [ecx],al
  414618:	cmp    edi,0xffffffb0
  41461b:	add    dl,dh
  41461d:	daa    
  41461e:	add    dh,ah
  414620:	int3   
  414621:	add    BYTE PTR [ebp-0xe2a801],bl
  414627:	inc    BYTE PTR [eax]
  414629:	int3   
  41462a:	cwde   
  41462b:	add    ebp,0xffffff9e
  41462e:	add    BYTE PTR [ebx-0xcaff34],al
  414634:	mov    ebp,0x83d9cc65
  414639:	dec    DWORD PTR [ecx+0x489b83]
  41463f:	outs   dx,BYTE PTR ds:[esi]
  414640:	dec    DWORD PTR [ecx+0x41a100b2]
  414646:	xor    DWORD PTR [eax-0x34],0xffffffcc
  41464a:	retf   
  41464b:	jmp    eax
  41464d:	and    BYTE PTR [eax],al
  41464f:	ret    0xccff
  414652:	aad    0xff
  414654:	inc    esp
  414655:	popf   
  414656:	add    bl,cl
  414658:	(bad)  
  414659:	dec    DWORD PTR [edx]
  41465b:	inc    DWORD PTR [eax+0xaf00af]
  414661:	add    ah,bl
  414663:	mov    DWORD PTR [ebx-0x24],esi
  414666:	jmp    FWORD PTR [edi+edi*8-0x6b002601]
  41466d:	xchg   edi,eax
  41466e:	(bad)  
  41466f:	jmp    0xa74673
  414674:	mul    DWORD PTR [edi+0x9dff]
  41467a:	adc    bh,bh
  41467c:	add    BYTE PTR [edx+0x0],al
  41467f:	(bad)  
  414681:	add    cl,ah
  414683:	int3   
  414684:	fisub  WORD PTR [edi+0xff5100]
  41468a:	cs add ch,cl
  41468d:	jbe    0x41468e
  41468f:	scas   al,BYTE PTR es:[edi]
  414690:	add    DWORD PTR [ebx+0x4a8f8382],0xffffff83
  414697:	or     esp,ecx
  414699:	add    BYTE PTR [esi-0xfd1c01],dl
  41469f:	call   0x361327
  4146a4:	cli    
  4146a5:	out    0xff,eax
  4146a7:	arpl   di,di
  4146a9:	mov    DWORD PTR [edx-0xadc801],edx
  4146af:	inc    esi
  4146b0:	add    bh,bh
  4146b2:	mov    al,ds:0xff1fff
  4146b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146b8:	add    BYTE PTR [ebx+0x7858ff7d],al
  4146be:	dec    esp
  4146c0:	add    DWORD PTR [eax],0x54
  4146c3:	push   DWORD PTR [eax-0x16]
  4146c6:	jmp    DWORD PTR [edx]
  4146c8:	add    bh,bh
  4146ca:	ins    BYTE PTR es:[edi],dx
  4146cb:	push   ebp
  4146cd:	pop    DWORD PTR [eax]
  4146cf:	lds    eax,FWORD PTR [eax]
  4146d1:	call   DWORD PTR [edi-0x7caaf901]
  4146d7:	dec    ecx
  4146d8:	inc    DWORD PTR [eax]
  4146da:	jle    0x4146db
  4146dc:	pop    es
  4146dd:	sbb    edi,edi
  4146df:	pop    ebx
  4146e0:	cmp    edi,0xffffffe2
  4146e3:	jmp    DWORD PTR [ebx]
  4146e5:	loopne 0x41466a
  4146e7:	jns    0x4146e8
  4146e9:	(bad)  
  4146ea:	fild   DWORD PTR [ebx+0x51838f88]
  4146f0:	cmp    edi,0xffffff94
  4146f3:	sub    DWORD PTR [ebp+edx*1+0x891dff],0x4e
  4146fb:	mov    DWORD PTR ds:0xff14832b,ecx
  414701:	add    BYTE PTR [esi-0x448600],cl
  414707:	adc    BYTE PTR [ebx+0x10ffe1ff],al
  41470d:	stos   DWORD PTR es:[edi],eax
  41470e:	int3   
  41470f:	sahf   
  414710:	int3   
  414711:	add    BYTE PTR [edi+0x0],cl
  414714:	inc    edi
  414715:	retf   0xaa83
  414718:	add    BYTE PTR [eax],al
  41471a:	push   0xffc81f00
  41471f:	pusha  
  414720:	add    BYTE PTR [eax],al
  414722:	test   al,0x0
  414724:	jnp    0x41478f
  414726:	add    ch,cl
  414728:	inc    DWORD PTR [eax]
  41472a:	outs   dx,DWORD PTR ds:[esi]
  41472b:	dec    DWORD PTR [edi+0x7c]
  41472e:	push   esi
  414730:	add    ah,cl
  414732:	dec    esp
  414733:	jmp    DWORD PTR [esp+edx*8+0x0]
  414737:	add    BYTE PTR [bp+di-0x7cfd],al
  41473c:	mov    ah,0xbc
  41473e:	call   esp
  414740:	dec    DWORD PTR [ecx-0x689005e]
  414746:	call   DWORD PTR [ecx]
  414748:	or     DWORD PTR [ecx+0x739b83ee],0xffffffcc
  41474f:	adc    eax,DWORD PTR [ebx+0x1900f8ff]
  414755:	push   ds
  414756:	dec    DWORD PTR [ebp+0x0]
  414759:	add    BYTE PTR [edi+edi*8-0x3d],dh
  41475d:	sub    ecx,esp
  41475f:	adc    al,0xcc
  414761:	push   DWORD PTR [edi+edi*8+0x55]
  414765:	outs   dx,BYTE PTR ds:[esi]
  414766:	(bad)  
  414767:	jmp    0x79466c
  41476c:	mov    cs,WORD PTR [ecx-0x7d]
  41476f:	in     eax,dx
  414770:	inc    DWORD PTR [eax]
  414772:	pop    ebp
  414773:	int3   
  414774:	stos   BYTE PTR es:[edi],al
  414775:	sbb    al,0x0
  414777:	cmp    edi,0xf7ff2000
  41477d:	loopne 0x41477e
  41477f:	push   edi
  414780:	int3   
  414781:	add    BYTE PTR [ecx+0x9e4bff],ah
  414787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414788:	add    BYTE PTR [eax],al
  41478a:	pop    edx
  41478b:	cmp    DWORD PTR [edx+0xcff21],0xffffffff
  414792:	and    al,BYTE PTR [ebx+0x7a89cc42]
  414798:	add    DWORD PTR [eax],0x13
  41479b:	push   DWORD PTR [ebp-0x70]
  41479e:	push   DWORD PTR [ecx]
  4147a0:	add    bh,bh
  4147a2:	(bad)  
  4147a3:	int3   
  4147a4:	iret   
  4147a5:	sub    bh,bh
  4147a7:	mov    ds:0xffd68383,al
  4147ac:	inc    esp
  4147ad:	add    BYTE PTR fs:[edi+0x0],dl
  4147b1:	jmp    FWORD PTR [esi+0x1b40ff]
  4147b7:	mov    bh,0xff
  4147b9:	call   FWORD PTR ds:0xccb29e00
  4147bf:	or     BYTE PTR [ebx+0x51ff41ff],al
  4147c5:	dec    edx
  4147c6:	add    BYTE PTR [edx-0x7d],bh
  4147c9:	add    ch,cl
  4147cb:	call   FWORD PTR [eax+0xbbccd1]
  4147d1:	dec    eax
  4147d3:	jmp    FWORD PTR [esi]
  4147d5:	mov    al,0x0
  4147d7:	retf   0x8983
  4147da:	call   0xba80de
  4147df:	jno    0x4147e0
  4147e1:	add    BYTE PTR [ebx-0x763b4c01],bl
  4147e7:	rol    DWORD PTR [ebx-0x54009d00],0x80
  4147ee:	add    dh,bl
  4147f0:	mov    edi,edi
  4147f2:	clc    
  4147f3:	add    bl,al
  4147f5:	int    0x0
  4147f7:	sar    bh,0xff
  4147fa:	mov    WORD PTR [eax],es
  4147fc:	test   BYTE PTR [ecx],bh
  4147fe:	add    bh,bh
  414800:	(bad)  
  414801:	call   DWORD PTR [edi+edi*8]
  414804:	pop    ebp
  414805:	cmp    eax,DWORD PTR [eax]
  414807:	xchg   esi,eax
  414808:	int3   
  414809:	inc    DWORD PTR [esi-0x34]
  41480c:	fsubr  QWORD PTR [ebx+0x0]
  41480f:	inc    esi
  414810:	(bad)  
  414811:	jmp    DWORD PTR [edi+0xba8e00]
  414817:	repnz add BYTE PTR [eax],al
  41481a:	call   0xff49401e
  41481f:	pusha  
  414820:	add    bh,bh
  414822:	mov    DWORD PTR fs:[edi],ebp
  414825:	jno    0x414826
  414827:	xor    eax,0xa1ffcc
  41482c:	rcr    DWORD PTR [edx-0x33c300],0x9e
  414833:	add    BYTE PTR [ecx],cl
  414835:	jg     0x414803
  414837:	or     al,BYTE PTR [eax]
  414839:	add    dl,ah
  41483b:	add    BYTE PTR [ecx-0xfffbc],dh
  414841:	add    BYTE PTR [ebx-0x76b41d01],bh
  414847:	jg     0x414849
  414849:	add    BYTE PTR [ebx-0x7d],dh
  41484c:	pop    ss
  41484d:	call   0x1408552
  414852:	cmp    al,0xff
  414854:	mov    bh,0x7c
  414856:	(bad)  
  414857:	cmp    eax,0x8346ffff
  41485c:	mov    ebp,0xffee0050
  414861:	add    BYTE PTR [ebx-0x79ba7d],al
  414867:	lods   al,BYTE PTR ds:[esi]
  414868:	inc    DWORD PTR [ebx+0x25ccff00]
  41486e:	add    BYTE PTR [eax+eax*1-0x1],ah
  414872:	add    al,0x83
  414874:	daa    
  414875:	mov    cl,0xcc
  414877:	xchg   edi,eax
  414878:	(bad)  
  414879:	push   DWORD PTR [eax]
  41487b:	sub    DWORD PTR [ebx-0xc8ffd4],0xffffffff
  414882:	jmp    0x3f3d87
  414887:	repz mov edi,edi
  41488a:	in     al,0xff
  41488c:	gs add eax,0xffb300
  414892:	idiv   edi
  414894:	fcomp  QWORD PTR [ebx+0x0]
  414897:	cmp    bh,bh
  414899:	sbb    edx,0xffffffff
  41489c:	and    eax,0x7200f3
  4148a1:	add    BYTE PTR [ebx-0xfb7100],bl
  4148a7:	ins    DWORD PTR es:[edi],dx
  4148a8:	add    BYTE PTR [eax],al
  4148aa:	(bad)  
  4148ab:	call   FWORD PTR [ecx+0xbeff7e]
  4148b1:	call   FWORD PTR [esi]
  4148b3:	add    BYTE PTR [edi+0x5383ee],bl
  4148b9:	call   esp
  4148bb:	push   DWORD PTR [esi]
  4148bd:	aam    0x0
  4148bf:	pop    ds
  4148c0:	mov    DWORD PTR [ebx-0x4d06ff3b],eax
  4148c6:	(bad)  
  4148c7:	cmp    al,0x0
  4148c9:	add    ah,cl
  4148cb:	mov    DWORD PTR [edx],ecx
  4148cd:	or     DWORD PTR [eax],eax
  4148cf:	das    
  4148d0:	add    bh,bh
  4148d2:	push   0x7046ff
  4148d7:	jg     0x4148d8
  4148d9:	call   edx
  4148db:	call   DWORD PTR [ebx-0x9b0020]
  4148e1:	add    BYTE PTR [esi-0x1],dl
  4148e4:	int3   
  4148e5:	or     al,0xff
  4148e7:	pusha  
  4148e8:	(bad)  
  4148e9:	inc    DWORD PTR [edi+edi*8]
  4148ec:	in     eax,0xc7
  4148ee:	call   DWORD PTR [eax+eax*1+0x20ffa2ff]
  4148f5:	push   ecx
  4148f6:	add    BYTE PTR [ebp+0x5d00ff],al
  4148fc:	and    BYTE PTR [esi],ah
  4148fe:	(bad)  
  4148ff:	jg     0x414901
  414901:	add    ch,bh
  414903:	add    BYTE PTR [edx],dh
  414905:	inc    DWORD PTR gs:[esi-0x7c480077]
  41490c:	(bad)  
  41490d:	sbb    eax,DWORD PTR [ebx+0x2ffff9e]
  414913:	(bad)  
  414914:	(bad)  
  414915:	stos   DWORD PTR es:[edi],eax
  414916:	jmp    DWORD PTR [eax+eax*1-0x1]
  41491a:	sub    eax,0xffb308ff
  41491f:	push   eax
  414920:	int3   
  414921:	int3   
  414922:	fiadd  WORD PTR [eax]
  414924:	popf   
  414925:	cld    
  414926:	add    dh,cl
  414928:	mov    edi,edi
  41492a:	stos   BYTE PTR es:[edi],al
  41492b:	dec    DWORD PTR [ebp+ebx*4-0xff0534]
  414932:	in     eax,0xcc
  414934:	lds    ebp,FWORD PTR [edx-0xac77]
  41493a:	adc    eax,0x83bb3fff
  41493f:	mov    eax,0xff21cc83
  414944:	stos   DWORD PTR es:[edi],eax
  414945:	or     bh,bh
  414947:	test   DWORD PTR [ebx+0x1bff7dff],eax
  41494d:	mov    edx,0x83ff6800
  414952:	cmp    bh,0xc9
  414955:	xor    BYTE PTR [eax],al
  414957:	jne    0x414959
  414959:	jmp    DWORD PTR [ebp+0x303aff]
  41495f:	push   0xffb6ff83
  414964:	pop    ecx
  414965:	mov    ecx,0x83ff7d00
  41496a:	fcos   
  41496c:	pop    edx
  41496d:	imul   ecx,DWORD PTR [ecx-0x7fff0097],0x83afaf00
  414977:	inc    DWORD PTR [bp+di+0x5d]
  41497c:	fst    QWORD PTR [esi]
  41497e:	add    BYTE PTR [esi-0x1],ah
  414981:	add    BYTE PTR [ecx],ah
  414983:	int3   
  414984:	shr    DWORD PTR [edi+edi*8+0x32],cl
  414988:	(bad)  
  414989:	call   FWORD PTR [edi]
  41498b:	adc    ebx,0xffffffd3
  41498e:	add    BYTE PTR [edi-0x7c4aff01],bh
  414994:	or     edx,ebx
  414996:	call   DWORD PTR [eax]
  414998:	add    bh,bh
  41499a:	sub    edi,edi
  41499c:	push   esi
  41499d:	stc    
  41499e:	jmp    DWORD PTR [eax-0xe80077]
  4149a4:	stc    
  4149a5:	mov    ecx,0x8300c4ff
  4149aa:	retf   
  4149ab:	jmp    DWORD PTR [eax-0x7cf87c62]
  4149b1:	add    cl,ah
  4149b3:	add    BYTE PTR [ebp-0x767d330e],bh
  4149b9:	add    BYTE PTR [esi-0x45da01],bh
  4149bf:	fdiv   st(7),st
  4149c1:	cmp    DWORD PTR ds:0xffdc33ff,0x52
  4149c8:	inc    DWORD PTR [eax]
  4149ca:	mov    edx,0xff797889
  4149cf:	dec    ecx
  4149d0:	(bad)  
  4149d1:	push   DWORD PTR [esp+ecx*8-0x67ff82a3]
  4149d8:	add    bh,bh
  4149da:	data16 add dl,cl
  4149dd:	push   esi
  4149de:	dec    esp
  4149e0:	int3   
  4149e1:	int3   
  4149e2:	add    ecx,DWORD PTR [ecx+0x11ffc80b]
  4149e8:	(bad)  
  4149e9:	dec    DWORD PTR ds:0x164983
  4149ef:	lahf   
  4149f0:	dec    DWORD PTR [ecx-0x794f0091]
  4149f6:	add    ah,bh
  4149f8:	(bad)  
  4149f9:	push   DWORD PTR [ebx]
  4149fb:	call   ebp
  4149fd:	das    
  4149fe:	(bad)  
  4149ff:	fadd   DWORD PTR [eax]
  414a01:	add    dh,bh
  414a03:	push   edx
  414a05:	out    dx,eax
  414a06:	inc    DWORD PTR [ecx]
  414a08:	add    ah,cl
  414a0a:	mov    ecx,0xd98aff
  414a0f:	sbb    edi,edi
  414a11:	add    BYTE PTR [esi],ch
  414a13:	int3   
  414a14:	sub    BYTE PTR [ecx+ecx*4+0x4a],ch
  414a18:	(bad)  
  414a19:	(bad)  
  414a1a:	ds push ecx
  414a1d:	ret    
  414a1e:	add    BYTE PTR [esi],ch
  414a20:	add    BYTE PTR [eax],al
  414a22:	adc    edi,edi
  414a24:	rcl    DWORD PTR [esi-0xff9d00],0xcf
  414a2b:	jmp    edx
  414a2d:	xchg   esp,eax
  414a2e:	add    BYTE PTR [ebx],dh
  414a30:	cmp    edi,0xffffffbd
  414a33:	call   esp
  414a35:	mov    dl,0xff
  414a37:	clc    
  414a38:	add    BYTE PTR [eax],al
  414a3a:	mov    eax,ds:0xadc700
  414a3f:	or     al,BYTE PTR [ebx+0x5783a0ff]
  414a45:	xchg   ecx,eax
  414a46:	add    dl,al
  414a48:	cmp    edi,0x77
  414a4b:	call   DWORD PTR [edx+esi*1+0x0]
  414a4f:	scas   al,BYTE PTR es:[edi]
  414a50:	int3   
  414a51:	add    DWORD PTR [eax+0x0],0x77
  414a55:	mov    ch,0x0
  414a57:	push   ds
  414a58:	int3   
  414a59:	dec    DWORD PTR [edi]
  414a5b:	mov    DWORD PTR [ebp-0x67],ecx
  414a5e:	add    BYTE PTR [edi-0xc30001],dl
  414a64:	cmp    ch,cl
  414a66:	add    BYTE PTR [ebx-0x1],al
  414a69:	(bad)  
  414a6a:	(bad)  
  414a6b:	jmp    DWORD PTR [eax+0xea00c7]
  414a71:	add    BYTE PTR [ecx],dh
  414a73:	int3   
  414a74:	nop
  414a75:	sbb    bh,bh
  414a77:	fwait
  414a78:	inc    DWORD PTR [eax]
  414a7a:	retf   0xc5cc
  414a7d:	cwde   
  414a7e:	inc    esi
  414a80:	(bad)  
  414a81:	call   DWORD PTR [esi+0x0]
  414a84:	stos   BYTE PTR es:[edi],al
  414a85:	jnp    0x414a10
  414a87:	push   esi
  414a88:	(bad)  
  414a89:	inc    esp
  414a8b:	add    BYTE PTR [ecx-0x940011],al
  414a91:	adc    DWORD PTR [edx+0x919989],0xfffffff5
  414a98:	inc    DWORD PTR [eax]
  414a9a:	pusha  
  414a9b:	cmp    DWORD PTR [ecx-0x69],0x0
  414a9f:	mov    ebx,0x897e0000
  414aa4:	cdq    
  414aa5:	mov    bh,0xff
  414aa7:	cmp    bh,bh
  414aa9:	(bad)  
  414aaa:	inc    DWORD PTR [eax]
  414aac:	pop    ebx
  414aad:	xchg   edx,eax
  414aae:	add    BYTE PTR [ebp-0xd8ff7d],ah
  414ab4:	ins    BYTE PTR es:[edi],dx
  414ab5:	gs (bad) 
  414ab7:	out    dx,al
  414ab8:	(bad)  
  414ab9:	dec    ecx
  414abb:	add    ch,bl
  414abd:	(bad)  
  414ac0:	mov    DWORD PTR [eax],eax
  414ac2:	popf   
  414ac3:	add    BYTE PTR ds:0xcccaffd2,ch
  414ac9:	add    dh,ah
  414acb:	add    ch,bh
  414acd:	imul   edi,edi,0xffffdd
  414ad3:	push   DWORD PTR [esp+edi*8-0x34]
  414ad7:	xor    bh,bh
  414ad9:	add    ch,al
  414adb:	add    dh,ah
  414add:	push   ss
  414ade:	(bad)  
  414adf:	fadd   DWORD PTR [eax]
  414ae1:	jmp    FWORD PTR [ebx]
  414ae3:	int3   
  414ae4:	das    
  414ae5:	mov    edi,0xb00
  414aea:	dec    esi
  414aeb:	(bad)  
  414aec:	jp     0x414aea
  414aee:	mov    DWORD PTR [edx+0x5b0000],ebp
  414af4:	sbb    BYTE PTR ds:0xff4bff,0xd5
  414afb:	add    BYTE PTR [edi-0x7],ah
  414afe:	add    BYTE PTR [ebx-0x7c9a0100],ah
  414b04:	je     0x414b3e
  414b06:	int3   
  414b07:	(bad)  
  414b0a:	push   ecx
  414b0b:	or     DWORD PTR [edi+0x49],0xffffff89
  414b0f:	add    al,0x0
  414b11:	(bad)  
  414b12:	in     eax,dx
  414b13:	add    BYTE PTR [edx],bl
  414b15:	ror    DWORD PTR [ecx+0xeffcc2a],cl
  414b1b:	add    cl,ch
  414b1d:	mov    edi,0x8308ff
  414b22:	mov    ds:0x326200,al
  414b27:	pop    ss
  414b28:	add    bh,bh
  414b2a:	ja     0x414af8
  414b2c:	test   edi,ebp
  414b2e:	dec    DWORD PTR [edi+edi*8-0x1900c701]
  414b35:	scas   al,BYTE PTR es:[edi]
  414b36:	add    BYTE PTR [eax+eax*1-0x33001701],bl
  414b3d:	fiadd  DWORD PTR [eax]
  414b3f:	pusha  
  414b40:	add    bh,bh
  414b42:	int3   
  414b43:	and    DWORD PTR [ecx-0x5e00bf],0xffffff83
  414b4a:	dec    ebx
  414b4b:	int3   
  414b4c:	jo     0x414b67
  414b4e:	or     DWORD PTR [ecx-0x1],0xffffffff
  414b52:	sub    DWORD PTR [eax],eax
  414b54:	push   cs
  414b55:	int    0xff
  414b57:	mov    eax,0xffd00089
  414b5c:	pop    esi
  414b5d:	sub    al,0xff
  414b5f:	(bad)  
  414b60:	(bad)  
  414b61:	jmp    FWORD PTR [edi+edi*8-0x6333228c]
  414b68:	int3   
  414b69:	mov    DWORD PTR [edi-0x1],ebx
  414b6c:	jno    0x414b5d
  414b6e:	dec    DWORD PTR [edx+0x0]
  414b71:	call   DWORD PTR [ecx+0xef71ff]
  414b77:	pop    esp
  414b78:	int3   
  414b79:	dec    DWORD PTR [esi-0x1]
  414b7c:	je     0x414b28
  414b7e:	sbb    DWORD PTR [ecx],0xffffff89
  414b81:	int3   
  414b82:	call   0x8902:0xffc95f83
  414b89:	(bad)  
  414b8a:	jmp    0x414b15
  414b8c:	out    0xdb,al
  414b8e:	mov    edi,esi
  414b90:	add    bh,bh
  414b92:	inc    esi
  414b93:	add    dl,ch
  414b95:	sar    bh,0x9a
  414b98:	add    ah,cl
  414b9a:	ror    DWORD PTR [ecx+0x6700e272],cl
  414ba0:	add    ah,cl
  414ba2:	push   0x0
  414ba4:	jo     0x414b9b
  414ba6:	call   DWORD PTR [ecx-0x76b30100]
  414bac:	sbb    BYTE PTR [edx-0x1],bl
  414baf:	push   ebx
  414bb0:	inc    DWORD PTR [ebx-0x4ef5ff74]
  414bb6:	add    BYTE PTR [ecx],dh
  414bb8:	add    ah,cl
  414bba:	inc    esi
  414bbb:	jmp    DWORD PTR [eax-0x410012]
  414bc1:	sbb    DWORD PTR [ebx+eax*4-0x467c7d71],0x0
  414bc9:	add    BYTE PTR [esi-0x9cdc00],ah
  414bcf:	jnp    0x414bd0
  414bd1:	int3   
  414bd2:	mov    DWORD PTR ss:[edx+0xa0009c],edi
  414bd9:	jmp    DWORD PTR ds:0xff4ce100
  414bdf:	sub    al,0x83
  414be1:	mov    DWORD PTR ds:0xff1533ff,ecx
  414be7:	xchg   edi,eax
  414be8:	add    bh,bh
  414bea:	mov    bh,bh
  414bec:	std    
  414bed:	push   edx
  414bee:	(bad)  
  414bef:	mov    ebx,0xff7883ff
  414bf4:	repnz hlt 
  414bf6:	add    BYTE PTR [ebp-0x1],dl
  414bf9:	sbb    DWORD PTR [eax],0xffffffff
  414bfc:	xor    BYTE PTR [edi+0xffb7ff],dl
  414c02:	stc    
  414c03:	(bad)  
  414c04:	jnp    0x414b9f
  414c06:	inc    DWORD PTR [edi]
  414c08:	inc    DWORD PTR [eax]
  414c0a:	jge    0x414c0c
  414c0c:	jp     0x414c60
  414c0e:	add    BYTE PTR [eax+0x0],ch
  414c11:	int3   
  414c12:	aaa    
  414c13:	(bad)  
  414c14:	jmp    0x414c43
  414c16:	call   DWORD PTR [ecx]
  414c18:	(bad)  
  414c19:	push   DWORD PTR [ecx]
  414c1b:	inc    DWORD PTR [edi]
  414c1d:	adc    bh,bh
  414c1f:	dec    esi
  414c20:	(bad)  
  414c21:	(bad)  
  414c22:	clc    
  414c23:	(bad)  
  414c24:	cmp    BYTE PTR [ebx+eax*4],ch
  414c27:	fcos   
  414c29:	call   DWORD PTR [ecx]
  414c2b:	(bad)  
  414c2c:	in     eax,dx
  414c2d:	inc    WORD PTR [edx-0x1]
  414c31:	and    DWORD PTR [esp+ecx*8+0x6effc19c],0xffffffff
  414c39:	add    bh,bl
  414c3b:	push   eax
  414c3d:	dec    ebx
  414c3e:	call   DWORD PTR [esi]
  414c40:	add    BYTE PTR [ecx+0x51cccc63],cl
  414c46:	sbb    DWORD PTR [ecx],0xffffffff
  414c49:	int3   
  414c4a:	stos   DWORD PTR es:[edi],eax
  414c4b:	add    cl,al
  414c4d:	clc    
  414c4e:	dec    DWORD PTR [esi]
  414c50:	add    bh,bh
  414c52:	mov    eax,ds:0x1a8f00
  414c57:	fdiv   st(7),st
  414c59:	xor    DWORD PTR [eax+eax*1+0x38],0x66
  414c5e:	and    DWORD PTR [edi],0x0
  414c61:	(bad)  
  414c62:	jge    0x414c64
  414c64:	pop    edi
  414c65:	out    0x0,al
  414c67:	xor    al,BYTE PTR [ebx+0x17ffa000]
  414c6d:	mov    ah,0x0
  414c6f:	mov    es,WORD PTR [eax]
  414c71:	mov    DWORD PTR [edx-0x1],edx
  414c74:	pop    ebx
  414c75:	test   ah,0x50
  414c78:	dec    esp
  414c7a:	add    eax,0xffad88ff
  414c7f:	scas   al,BYTE PTR es:[edi]
  414c80:	add    bh,bh
  414c82:	xchg   ecx,eax
  414c83:	inc    DWORD PTR [ecx]
  414c85:	push   ebx
  414c86:	cmp    DWORD PTR [edi],0xffffffff
  414c89:	call   DWORD PTR [edi+edi*8]
  414c8c:	and    cl,0xff
  414c8f:	in     al,dx
  414c90:	add    BYTE PTR [ebx+0x55b28377],al
  414c96:	add    BYTE PTR [ebp-0x7cb00100],dh
  414c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c9d:	add    DWORD PTR [ebx-0x42ff00e7],0xffffff83
  414ca4:	(bad)  
  414ca5:	je     0x414ca7
  414ca7:	mov    dh,0x83
  414ca9:	add    BYTE PTR [eax-0x7d],al
  414cac:	std    
  414cad:	test   edi,edi
  414caf:	imul   edi,edi,0x5883f2ff
  414cb5:	mov    ebp,0xffffac00
  414cba:	mov    BYTE PTR [eax],0x19
  414cbd:	sbb    al,BYTE PTR [eax]
  414cbf:	and    al,BYTE PTR [eax]
  414cc1:	sub    esp,0x0
  414cc4:	adc    BYTE PTR [ebp-0x7d],bh
  414cc7:	out    dx,eax
  414cc8:	cmp    edi,0x5d
  414ccb:	jmp    DWORD PTR [eax+0x5b]
  414cce:	jmp    DWORD PTR [edi-0x330b7c01]
  414cd4:	(bad)  
  414cd5:	jbe    0x414cd7
  414cd7:	dec    ecx
  414cd8:	mov    DWORD PTR [eax],eax
  414cda:	pop    ds
  414cdb:	(bad)  
  414cdc:	mov    eax,0x8327ff77
  414ce1:	(bad)  
  414ce2:	cmp    bh,bh
  414ce4:	ret    
  414ce5:	ud0    ecx,DWORD PTR [edi-0x7c6cff01]
  414cec:	repnz and bh,bh
  414cef:	pop    ecx
  414cf0:	add    bh,bh
  414cf2:	jae    0x414cf4
  414cf4:	sub    dl,cl
  414cf6:	add    BYTE PTR ds:0xffefffff,dh
  414cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cfd:	hlt    
  414cfe:	int3   
  414cff:	add    al,0xff
  414d01:	dec    DWORD PTR [edx-0x34]
  414d04:	mov    al,BYTE PTR [eax+eax*1]
  414d07:	or     al,0x0
  414d09:	dec    DWORD PTR [eax-0x1ea101]
  414d0f:	sbb    eax,DWORD PTR [eax]
  414d11:	dec    DWORD PTR [ecx+ecx*4-0x21ffd4a2]
  414d18:	inc    DWORD PTR [eax]
  414d1a:	nop
  414d1b:	add    BYTE PTR [ebp+0x2f],bl
  414d1e:	int3   
  414d1f:	daa    
  414d20:	inc    DWORD PTR [eax]
  414d22:	nop
  414d23:	add    BYTE PTR [edx-0x18],bh
  414d26:	add    BYTE PTR [ecx],ah
  414d28:	add    ah,cl
  414d2a:	dec    esp
  414d2b:	add    BYTE PTR [ebx],al
  414d2d:	je     0x414d2e
  414d2f:	lods   al,BYTE PTR ds:[esi]
  414d30:	add    bh,bh
  414d32:	retf   0xc4cc
  414d35:	push   ebx
  414d36:	add    BYTE PTR [ebx-0x1],ah
  414d39:	add    cl,ch
  414d3b:	add    BYTE PTR ds:0xffb0ff4a,dl
  414d41:	add    BYTE PTR [eax-0x1],cl
  414d44:	std    
  414d45:	mov    edi,edi
  414d47:	jo     0x414d48
  414d49:	int3   
  414d4a:	(bad)  
  414d4b:	jmp    FWORD PTR [esi+0x4b]
  414d4e:	dec    DWORD PTR [esi]
  414d50:	dec    esp
  414d52:	lods   eax,DWORD PTR ds:[esi]
  414d53:	mov    DWORD PTR [esp+ebp*4],edi
  414d56:	jmp    FWORD PTR [eax+eax*1-0x7d]
  414d5a:	aam    0xff
  414d5c:	and    al,BYTE PTR [edx+0xe0ff]
  414d62:	push   ds
  414d63:	or     DWORD PTR [ebp-0x767cd8],0xffffffff
  414d6a:	mov    bl,0x83
  414d6c:	inc    edi
  414d6d:	dec    ebx
  414d6e:	dec    DWORD PTR [esi-0x91ff7d]
  414d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d75:	or     DWORD PTR cs:[edx-0xa80000],0xffffffe0
  414d7d:	aad    0x0
  414d7f:	outs   dx,BYTE PTR ds:[esi]
  414d80:	int3   
  414d81:	push   DWORD PTR [edx-0x7d]
  414d84:	(bad)  
  414d85:	or     ecx,esp
  414d87:	ret    
  414d88:	add    DWORD PTR [eax],0xffffff9f
  414d8b:	call   FWORD PTR [esi+0x57]
  414d8e:	add    dl,ch
  414d90:	(bad)  
  414d91:	inc    DWORD PTR [ebx-0x2e8000]
  414d97:	fadd   QWORD PTR [eax]
  414d99:	inc    DWORD PTR [edi-0x7c45a234]
  414d9f:	bound  eax,QWORD PTR [ebx+0x19cc5b00]
  414da5:	dec    DWORD PTR [si-0x100]
  414daa:	cwde   
  414dab:	or     DWORD PTR ds:0x834983a6,0xffffffff
  414db2:	pop    eax
  414db3:	add    BYTE PTR [eax-0x5e],bl
  414db6:	and    DWORD PTR [esi-0x1],0xffffffff
  414dba:	call   0x60:0xff42b3ff
  414dc1:	add    al,dl
  414dc3:	call   DWORD PTR [ebx+eax*4-0x34]
  414dc7:	add    eax,0xa9cc00
  414dcc:	pusha  
  414dcd:	ins    BYTE PTR es:[edi],dx
  414dce:	int3   
  414dcf:	ds add ah,cl
  414dd2:	xchg   edi,edi
  414dd4:	aam    0x35
  414dd6:	adc    DWORD PTR [eax+0xbdffff],0xffffffc0
  414ddd:	push   0xff000683
  414de2:	xchg   ebx,eax
  414de3:	cmp    DWORD PTR [ebp-0x52],0x0
  414de7:	or     eax,0xff1cff00
  414dec:	push   esp
  414ded:	js     0x414dee
  414def:	iret   
  414df0:	(bad)  
  414df1:	inc    DWORD PTR [edi+edi*8-0x1c]
  414df5:	mov    ds:0xff2c00,eax
  414dfa:	enter  0x5400,0xb7
  414dfe:	inc    DWORD PTR [edi+edi*8]
  414e01:	(bad)  
  414e02:	jnp    0x414e04
  414e04:	rcr    BYTE PTR [esi-0x33ff4000],1
  414e0a:	sub    edi,edi
  414e0c:	aas    
  414e0d:	(bad)  
  414e0e:	call   DWORD PTR [eax]
  414e10:	mov    DWORD PTR [ecx-0x37e6002c],ecx
  414e16:	call   DWORD PTR [eax-0xa0ff01]
  414e1c:	sbb    BYTE PTR ds:0xccff39ff,0xab
  414e23:	dec    DWORD PTR [esi]
  414e25:	and    al,BYTE PTR [eax]
  414e27:	loop   0x414dac
  414e29:	call   DWORD PTR [ecx+0x0]
  414e2c:	ret    0x8340
  414e2f:	sbb    al,0x0
  414e31:	add    BYTE PTR [ebp-0x1],ch
  414e34:	test   DWORD PTR [edi],edx
  414e36:	add    ch,ch
  414e38:	add    BYTE PTR [eax],al
  414e3a:	jecxz  0x414dc5
  414e3c:	call   0xe483:0xff6dff78
  414e43:	jmp    ebp
  414e45:	mov    ebp,0xff831bff
  414e4a:	inc    esp
  414e4b:	add    dl,bl
  414e4d:	add    edi,edi
  414e4f:	in     eax,dx
  414e50:	add    bh,bh
  414e52:	push   0xff23b400
  414e57:	mov    ah,0xff
  414e59:	call   DWORD PTR [eax+eax*1+0x7e83e060]
  414e60:	(bad)  
  414e61:	call   FWORD PTR [esi-0x76ae6500]
  414e67:	add    eax,DWORD PTR [eax]
  414e69:	jmp    FWORD PTR [ebx]
  414e6b:	add    BYTE PTR [edx+0x77],dh
  414e6e:	(bad)  
  414e6f:	jge    0x414e70
  414e71:	int3   
  414e72:	mov    dl,0xff
  414e74:	adc    ebp,DWORD PTR [edx+0xcc0eff]
  414e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e7b:	inc    DWORD PTR [ecx+0x0]
  414e7e:	call   DWORD PTR [eax-0x7cb67c01]
  414e84:	mov    esp,DWORD PTR [edi]
  414e86:	or     DWORD PTR [eax],0xffffff83
  414e89:	jmp    FWORD PTR [edx]
  414e8b:	dec    DWORD PTR [edx+0x71]
  414e8e:	jmp    FWORD PTR [ebx-0x127c01]
  414e94:	rol    DWORD PTR [eax-0x34],0xc
  414e98:	add    BYTE PTR [eax],al
  414e9a:	add    BYTE PTR gs:[ecx],bh
  414e9d:	jne    0x414e9f
  414e9f:	or     BYTE PTR [eax],al
  414ea1:	call   DWORD PTR [edx]
  414ea3:	int3   
  414ea4:	xor    BYTE PTR [edi],ch
  414ea6:	jmp    ebp
  414ea8:	(bad)  
  414ea9:	call   FWORD PTR [esi]
  414eab:	push   DWORD PTR [ebx+0x11]
  414eae:	int3   
  414eaf:	inc    ebx
  414eb0:	cmp    edi,0x45
  414eb3:	int3   
  414eb4:	xor    ecx,DWORD PTR [esi+0x8393ff]
  414eba:	cmp    edi,0xa5009653
  414ec0:	(bad)  
  414ec1:	inc    DWORD PTR [ebx]
  414ec3:	add    BYTE PTR [ebx+0x11],bl
  414ec6:	(bad)  
  414ec7:	jmp    0x414ec8
  414ec9:	(bad)  
  414eca:	jl     0x414ecc
  414ecc:	mov    bh,0x5e
  414ece:	add    BYTE PTR [edx+0x0],cl
  414ed1:	add    BYTE PTR [ecx+0xf6ceff],bh
  414ed7:	cli    
  414ed8:	mov    edi,edi
  414eda:	sub    DWORD PTR [eax],eax
  414edc:	or     DWORD PTR [eax+0xff3b00],esi
  414ee2:	sar    bh,1
  414ee4:	(bad)  
  414ee5:	out    0x0,eax
  414ee7:	popa   
  414ee8:	int3   
  414ee9:	(bad)  
  414eea:	mov    ebx,0xff29c0ff
  414eef:	inc    WORD PTR [eax]
  414ef2:	xor    eax,0xff390fcc
  414ef7:	pop    eax
  414ef8:	add    bh,bh
  414efa:	cmc    
  414efb:	jmp    FWORD PTR [edx]
  414efd:	push   esi
  414efe:	add    BYTE PTR [eax+eax*1+0x0],dh
  414f02:	mov    dh,0x83
  414f04:	xchg   ebx,eax
  414f05:	pop    ss
  414f06:	and    DWORD PTR [ecx-0x1],0xffffffff
  414f0a:	xor    eax,DWORD PTR [eax]
  414f0c:	jmp    0x83ae4edd
  414f11:	inc    DWORD PTR [ebp-0xda2e01]
  414f17:	mov    edx,0x832f00ff
  414f1c:	scas   al,BYTE PTR es:[edi]
  414f1d:	mov    edi,0xff0061ff
  414f22:	jbe    0x414f23
  414f24:	and    BYTE PTR [ebx-0x767c1401],0xa2
  414f2b:	adc    DWORD PTR [ebx-0x240052],0x0
  414f32:	mov    eax,DWORD PTR [eax]
  414f34:	push   ds
  414f35:	test   DWORD PTR [eax],eax
  414f37:	sbb    eax,0xcccccccc
  414f3c:	int3   
  414f3d:	int3   
  414f3e:	int3   
  414f3f:	int3   
  414f40:	popa   
  414f41:	inc    DWORD PTR [eax]
  414f43:	dec    eax
  414f44:	adc    al,BYTE PTR [ebx-0x7c7300b8]
  414f4a:	mov    WORD PTR [ebx+0x476bff],es
  414f50:	or     BYTE PTR [ecx-0x4cf000],cl
  414f56:	dec    eax
  414f57:	jmp    DWORD PTR [esi-0xff4477]
  414f5d:	ins    BYTE PTR es:[edi],dx
  414f5e:	push   es
  414f5f:	jmp    esi
  414f61:	(bad)  
  414f62:	jmp    FWORD PTR [ecx-0x7630002d]
  414f68:	cmc    
  414f69:	mov    DWORD PTR [ebp-0x1],esi
  414f6c:	(bad)  
  414f6d:	fsubr  DWORD PTR [eax-0x337d]
  414f73:	ds jno 0x414f75
  414f76:	out    dx,al
  414f77:	dec    DWORD PTR [edx+0x0]
  414f7a:	push   edi
  414f7b:	dec    DWORD PTR [ecx+0x6e0080d9]
  414f81:	cmp    edi,0x71
  414f84:	xchg   esi,eax
  414f85:	inc    DWORD PTR [esi-0x1]
  414f88:	pop    ds
  414f89:	add    BYTE PTR [ebp-0x23cd0001],cl
  414f8f:	(bad)  
  414f90:	jmp    0x729b4e95
  414f95:	add    BYTE PTR ds:0xaa83c189,bl
  414f9b:	add    BYTE PTR [ebx-0x25ff4a93],al
  414fa1:	inc    DWORD PTR [eax]
  414fa3:	lea    ebp,[edi+edi*8]
  414fa6:	idiv   bh
  414fa8:	mov    ch,0x0
  414faa:	pop    ss
  414fab:	add    BYTE PTR [ecx+0x380055c3],cl
  414fb1:	inc    DWORD PTR [eax]
  414fb3:	in     eax,0x9f
  414fb5:	call   FWORD PTR [ebx-0x1]
  414fb8:	inc    edx
  414fb9:	int3   
  414fba:	fimul  DWORD PTR [ecx-0xea2200]
  414fc0:	mov    al,BYTE PTR [eax]
  414fc2:	mov    DWORD PTR [eax-0x7cd60039],edx
  414fc8:	inc    edx
  414fc9:	add    BYTE PTR [eax+eax*1-0x1],dh
  414fcd:	loop   0x415015
  414fcf:	dec    DWORD PTR [ebx+0x22acff00]
  414fd5:	(bad)  
  414fd6:	jmp    0xf04057da
  414fdb:	mov    DWORD PTR [eax],eax
  414fdd:	cmp    ah,BYTE PTR [edi+edi*8-0x64]
  414fe1:	(bad)  
  414fe2:	jmp    DWORD PTR [edi-0xd]
  414fe5:	or     DWORD PTR [ecx+0x4fff29cc],0xffffffff
  414fec:	add    BYTE PTR [edi],bl
  414fee:	test   esp,ecx
  414ff0:	data16 int3 
  414ff2:	(bad)  
  414ff3:	mov    ecx,0x832c836e
  414ff8:	dec    eax
  414ff9:	add    BYTE PTR [ecx],dl
  414ffb:	inc    DWORD PTR [ebx-0x580037b6]
  415001:	(bad)  
  415002:	call   DWORD PTR [eax]
  415004:	adc    al,0xff
  415006:	inc    esp
  415007:	int3   
  415008:	adc    al,0x0
  41500a:	mov    ebx,0xc484ffff
  41500f:	(bad)  
  415010:	mov    ecx,0x79d7cc00
  415015:	dec    DWORD PTR [eax-0x1fff301]
  41501b:	add    BYTE PTR [ebx+0x2eff70af],al
  415021:	inc    DWORD PTR [ebx+0x4c839fcf]
  415027:	int3   
  415028:	sar    bh,cl
  41502a:	js     0x41502b
  41502c:	add    BYTE PTR [ecx],dh
  41502e:	mov    eax,ds:0xe9ff
  415033:	push   es
  415034:	fild   WORD PTR [ebx-0xa50028]
  41503a:	push   0x1bc60089
  41503f:	add    dl,dh
  415041:	add    bh,bh
  415043:	repnz inc esp
  415045:	dec    DWORD PTR [ebx+0x9832d83]
  41504b:	inc    DWORD PTR [eax]
  41504d:	frstor [edi+edi*8]
  415050:	inc    ebp
  415051:	or     DWORD PTR [ecx+0x1800908e],0xffffffcc
  415058:	jl     0x414fdd
  41505a:	add    edi,edi
  41505c:	add    BYTE PTR [ebx],dl
  41505e:	(bad)  
  41505f:	jmp    DWORD PTR [edi+edi*8]
  415062:	add    al,al
  415064:	mov    cs,WORD PTR [ecx-0x22003b]
  41506a:	mov    ecx,0x549983ff
  41506f:	dec    DWORD PTR [esi-0x1]
  415072:	jmp    DWORD PTR [ebx-0x7c1200f0]
  415078:	out    0x0,al
  41507a:	aad    0xff
  41507c:	dec    DWORD PTR [ebx+edi*8-0x1]
  415080:	add    ah,cl
  415082:	call   FWORD PTR [ebx]
  415084:	adc    cl,BYTE PTR [ecx-0x33d57c5c]
  41508a:	cld    
  41508b:	(bad)  
  41508c:	(bad)  
  41508d:	js     0x4150cc
  41508f:	push   DWORD PTR [edx-0x7c4d7c7d]
  415095:	(bad)  
  415096:	jmp    0xf5420a9b
  41509b:	(bad)  
  41509c:	inc    ebx
  41509e:	push   esp
  41509f:	add    BYTE PTR [esi-0x77],al
  4150a2:	add    ch,bh
  4150a4:	xchg   ebx,eax
  4150a5:	dec    DWORD PTR [ecx]
  4150a7:	call   FWORD PTR [ebx+eax*4-0x5]
  4150ab:	int3   
  4150ac:	adc    ebx,0x51
  4150af:	add    cl,cl
  4150b1:	(bad)  
  4150b2:	push   DWORD PTR [ebx+ecx*1-0x6800c700]
  4150b9:	add    BYTE PTR [ecx-0x4b880001],bh
  4150bf:	call   FWORD PTR [esi]
  4150c1:	int3   
  4150c2:	jmp    FWORD PTR [ecx-0x45]
  4150c5:	jmp    DWORD PTR [edx-0xb004300]
  4150cb:	dec    DWORD PTR [ecx+0x358365d9]
  4150d1:	cmp    edi,0xffffffa7
  4150d4:	mov    es,WORD PTR [eax]
  4150d6:	leave  
  4150d7:	jmp    FWORD PTR [eax+eax*1-0xe00ffc2]
  4150de:	rol    DWORD PTR [eax],cl
  4150e0:	push   0x820dff00
  4150e5:	adc    DWORD PTR [edx+0x0],0x43
  4150e9:	mov    DWORD PTR [ebp-0x7d],edx
  4150ec:	inc    DWORD PTR [esi-0x2c]
  4150ef:	add    BYTE PTR [ebp+0x0],cl
  4150f2:	sbb    DWORD PTR [edi+0x80ff9d],0x64
  4150f9:	push   DWORD PTR [esi-0x1]
  4150fc:	int3   
  4150fd:	fwait
  4150fe:	out    dx,al
  4150ff:	(bad)  
  415100:	aas    
  415101:	add    BYTE PTR [eax],al
  415103:	mul    BYTE PTR [edi]
  415105:	push   DWORD PTR [edx]
  415107:	add    BYTE PTR [edx],bh
  415109:	(bad)  
  41510a:	mov    ebp,0x5038ff83
  41510f:	jmp    FWORD PTR [ebx+0x0]
  415112:	add    ah,ch
  415114:	jmp    0x3a41e6a2
  415119:	dec    ebx
  41511b:	mov    DWORD PTR [eax],eax
  41511d:	push   eax
  41511e:	addr16 (bad) 
  415120:	mov    ecx,0x2044ffff
  415125:	xor    DWORD PTR [ebx-0x77],0xffffffeb
  415129:	add    BYTE PTR [ecx-0x77],dh
  41512c:	sub    DWORD PTR [esi],0xffffffe0
  41512f:	call   esp
  415131:	add    bh,bh
  415133:	stos   BYTE PTR es:[edi],al
  415134:	sbb    ecx,DWORD PTR [ecx-0xa57c0b]
  41513a:	xchg   esi,eax
  41513b:	add    BYTE PTR [eax],al
  41513d:	shl    edi,cl
  41513f:	int3   
  415140:	idiv   bh
  415142:	inc    DWORD PTR [ebp-0xb]
  415145:	jmp    DWORD PTR ds:0xde006600
  41514b:	(bad)  
  41514c:	call   FWORD PTR [ebx-0x48]
  41514f:	add    BYTE PTR [ebp-0x509007d],al
  415155:	(bad)  
  415156:	out    dx,al
  415157:	and    DWORD PTR [edi],0xffffffff
  41515a:	(bad)  
  41515c:	(bad)  
  41515d:	out    dx,al
  41515e:	in     al,0x89
  415160:	lock dec DWORD PTR [ecx-0x1f7cd201]
  415167:	push   ebx
  415169:	add    BYTE PTR [esi],dh
  41516b:	add    BYTE PTR [eax],al
  41516d:	loopne 0x41516d
  41516f:	add    ah,bh
  415171:	(bad)  
  415172:	call   esi
  415174:	(bad)  
  415177:	push   edx
  415179:	inc    DWORD PTR [esi]
  41517b:	mov    DWORD PTR [ecx+0xeffb330],ecx
  415181:	add    ah,cl
  415183:	cmp    DWORD PTR [ebp-0x2f338c7d],ebx
  415189:	jmp    FWORD PTR [edx]
  41518b:	inc    DWORD PTR [eax]
  41518d:	cld    
  41518e:	add    DWORD PTR [eax],0x2b89ff4d
  415194:	(bad)  
  415195:	call   ebx
  415197:	adc    DWORD PTR [edi],0xffffffff
  41519a:	cwde   
  41519b:	(bad)  
  41519c:	jmp    FWORD PTR [esi]
  41519e:	lods   al,BYTE PTR ds:[esi]
  41519f:	jmp    FWORD PTR [ebx-0x13110000]
  4151a5:	jmp    DWORD PTR [edx]
  4151a7:	and    DWORD PTR [edi+edi*8+0x73],0xffffff83
  4151ac:	dec    DWORD PTR [ebx]
  4151ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151af:	int3   
  4151b0:	cmp    edi,edi
  4151b2:	push   DWORD PTR [eax+0x5]
  4151b5:	add    bh,bl
  4151b7:	call   DWORD PTR [edx-0x7f00]
  4151bd:	adc    ebx,edi
  4151bf:	add    BYTE PTR [edi],al
  4151c1:	mov    esp,ecx
  4151c3:	clc    
  4151c4:	(bad)  
  4151c6:	mov    ebx,0xcd000500
  4151cb:	add    BYTE PTR [ecx+0x3089f823],cl
  4151d1:	mov    edi,edi
  4151d3:	push   ecx
  4151d4:	ret    
  4151d5:	mov    DWORD PTR ds:0xf83a883,edi
  4151db:	dec    esp
  4151dd:	fwait
  4151de:	arpl   WORD PTR [eax],ax
  4151e0:	dec    ebx
  4151e1:	add    bh,bh
  4151e3:	(bad)  
  4151e4:	and    ecx,esp
  4151e6:	inc    ebx
  4151e7:	mov    DWORD PTR [eax],ecx
  4151e9:	add    BYTE PTR [edi-0x71caff7d],bl
  4151ef:	int3   
  4151f0:	enter  0x83ff,0x62
  4151f4:	jnp    0x4151f6
  4151f6:	aaa    
  4151f7:	add    ah,bh
  4151f9:	call   FWORD PTR [edx]
  4151fb:	(bad)  
  4151fc:	dec    esp
  4151fe:	push   0xff004acc
  415203:	(bad)  
  415204:	jl     0x415206
  415206:	gs mov eax,edx
  415209:	add    BYTE PTR [edx+0x1291ffff],bl
  41520f:	sbb    DWORD PTR [edi],0x0
  415212:	sub    DWORD PTR [ebp-0x24],0xffffff83
  415216:	mov    ch,0xff
  415218:	ja     0x41521a
  41521a:	dec    ah
  41521c:	call   DWORD PTR [ecx-0x75]
  41521f:	call   edi
  415221:	add    ah,cl
  415223:	add    eax,0x892b00e7
  415228:	outs   dx,DWORD PTR ds:[esi]
  415229:	(bad)  
  41522a:	cmp    bh,bh
  41522c:	inc    ecx
  41522e:	aas    
  41522f:	inc    edx
  415231:	inc    DWORD PTR [eax]
  415233:	mov    ecx,0x230021
  415238:	cmp    edi,0x9ff00a5
  41523e:	(bad)  
  41523f:	dec    ebx
  415241:	add    ah,cl
  415243:	lahf   
  415244:	sbb    bh,bh
  415246:	sar    bh,0x3b
  415249:	call   FWORD PTR [ecx+ecx*4-0x1]
  41524d:	jns    0x41521c
  41524f:	cmp    DWORD PTR [esi+0x17cacc00],0xffffffff
  415256:	push   DWORD PTR [bp+si-0x1]
  41525a:	xchg   ecx,eax
  41525b:	add    DWORD PTR [ebx+0x47ff5961],0xffffffff
  415262:	add    BYTE PTR [esi],bh
  415264:	call   DWORD PTR fs:[edi]
  415267:	mov    DWORD PTR [edi+edi*8-0xaffff5a],ebx
  41526e:	or     bh,bh
  415270:	and    cl,BYTE PTR [ecx-0x82dd01]
  415276:	nop
  415277:	mov    DWORD PTR ds:0xccebff,eax
  41527d:	or     eax,0xdfffc9
  415282:	jmp    FWORD PTR [edx+0x23]
  415285:	add    BYTE PTR [ebx+0x8ff2500],bl
  41528b:	add    DWORD PTR [eax],0x60
  41528e:	and    al,0xff
  415290:	push   ecx
  415291:	mov    edi,edi
  415293:	std    
  415294:	(bad)  
  415295:	call   edi
  415297:	jmp    FWORD PTR [esi-0x7d]
  41529a:	aas    
  41529b:	(bad)  
  41529c:	call   FWORD PTR [ecx-0x39]
  41529f:	add    BYTE PTR [esi],dl
  4152a1:	int3   
  4152a2:	call   FWORD PTR [eax-0xe1763b]
  4152a8:	test   bh,bh
  4152aa:	aas    
  4152ab:	inc    DWORD PTR [eax]
  4152ad:	cmp    BYTE PTR ds:0x8900e5ff,ch
  4152b3:	out    dx,eax
  4152b4:	hlt    
  4152b5:	call   DWORD PTR [ebp-0x46ff1300]
  4152bb:	(bad)  
  4152bc:	jmp    edi
  4152be:	inc    edi
  4152bf:	or     DWORD PTR [esp+ecx*8],0xffffffcc
  4152c3:	imul   esi,ecx,0xffffffff
  4152c6:	daa    
  4152c7:	(bad)  
  4152c8:	mov    esi,0xffcc15ff
  4152cd:	in     eax,dx
  4152ce:	hlt    
  4152cf:	jmp    FWORD PTR [esi+0x79dff00]
  4152d5:	add    BYTE PTR [esi-0x1],dh
  4152d8:	pop    ds
  4152d9:	sub    esi,0xffffff83
  4152dc:	int3   
  4152dd:	out    0x33,eax
  4152df:	call   ecx
  4152e1:	int3   
  4152e2:	call   DWORD PTR [ebx-0x20]
  4152e5:	(bad)  
  4152e6:	jnp    0x41526b
  4152e8:	aaa    
  4152e9:	dec    esp
  4152eb:	mov    esp,ecx
  4152ed:	inc    ebp
  4152ee:	iret   
  4152ef:	inc    ebx
  4152f1:	mov    DWORD PTR [ecx+0xd89cf7f],ecx
  4152f7:	push   DWORD PTR [ebx]
  4152f9:	jmp    DWORD PTR [edi+0x5b59ffff]
  4152ff:	add    BYTE PTR [ebx+0x51eff83],cl
  415305:	int3   
  415306:	(bad)  
  415309:	add    BYTE PTR [eax+eax*1-0x7d],ah
  41530d:	xor    BYTE PTR [ebx+0xff8bff],ah
  415313:	lods   eax,DWORD PTR ds:[esi]
  415314:	jb     0x415316
  415316:	je     0x415317
  415318:	enter  0xba83,0x0
  41531c:	jmp    esp
  41531e:	and    al,0xff
  415320:	pop    edx
  415321:	inc    DWORD PTR [eax]
  415323:	dec    esp
  415324:	xor    bh,bh
  415326:	dec    esp
  415327:	add    BYTE PTR [eax+eax*1],bl
  41532a:	push   esp
  41532b:	add    BYTE PTR [eax],al
  41532d:	xor    DWORD PTR [esi+0x0],0x3d
  415331:	add    BYTE PTR [ebx-0x477c4351],al
  415337:	(bad)  
  415338:	add    BYTE PTR ds:[esi+0x0],dh
  41533c:	add    BYTE PTR [edi-0x56],dh
  41533f:	call   FWORD PTR [eax]
  415341:	mov    esp,ecx
  415343:	(bad)  
  415344:	pop    es
  415345:	inc    DWORD PTR [eax-0x5100317d]
  41534b:	(bad)  
  41534c:	(bad)  
  41534d:	mov    esi,0xff968359
  415352:	mov    DWORD PTR [esi+0x58],esp
  415355:	add    BYTE PTR [ecx+0x0],cl
  415358:	adc    edi,edi
  41535a:	jmp    0xb600:0xb0cfffff
  415361:	cmp    edi,0xfffffffa
  415364:	and    eax,0xc6cc49ff
  415369:	dec    DWORD PTR [edx-0x1d5d007d]
  41536f:	int3   
  415370:	and    edi,edi
  415372:	jmp    DWORD PTR [edi-0x768d00de]
  415378:	pop    eax
  415379:	add    BYTE PTR [ecx-0x45320000],ah
  41537f:	int3   
  415380:	out    dx,eax
  415381:	add    bh,bh
  415383:	xchg   ebp,eax
  415384:	jo     0x415385
  415386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415387:	add    BYTE PTR [eax+eax*1-0x34],ch
  41538b:	cmp    edi,0x3a
  41538e:	xchg   esi,eax
  41538f:	dec    DWORD PTR [edx-0x7d]
  415392:	jmp    FWORD PTR [ecx-0x7c]
  415395:	call   FWORD PTR [edi+edi*8+0xb883da]
  41539c:	jmp    DWORD PTR [esi-0xe]
  41539f:	mov    DWORD PTR [edi-0x7d],ebp
  4153a2:	add    dh,al
  4153a4:	dec    ebp
  4153a5:	inc    DWORD PTR [eax-0x7d]
  4153a8:	sbb    BYTE PTR [eax],al
  4153aa:	pop    edx
  4153ab:	add    bh,bh
  4153ad:	mov    WORD PTR [esi-0x87d],ss
  4153b3:	fisttp DWORD PTR [ecx]
  4153b5:	add    BYTE PTR [edi+0x5700d9ff],ch
  4153bb:	inc    DWORD PTR [ebx-0x28004c2e]
  4153c1:	inc    DWORD PTR [eax]
  4153c3:	jl     0x415404
  4153c5:	int3   
  4153c6:	mov    ebx,0x35fff6ff
  4153cb:	add    BYTE PTR [eax],al
  4153cd:	xchg   eax,ecx
  4153cf:	(bad)  
  4153d0:	inc    DWORD PTR ds:[eax]
  4153d3:	lahf   
  4153d4:	ins    DWORD PTR es:[edi],dx
  4153d5:	jmp    DWORD PTR [edi+edi*8-0x2b004e]
  4153dc:	add    bl,ch
  4153de:	jmp    0x64ea:0xfffff7ff
  4153e5:	call   FWORD PTR [ebp-0x1]
  4153e8:	ud0    eax,esp
  4153eb:	mov    esp,ecx
  4153ed:	pusha  
  4153ee:	push   ds
  4153ef:	inc    DWORD PTR ds:0x14a0ffcc
  4153f5:	inc    DWORD PTR [ebx-0x4833107d]
  4153fb:	inc    DWORD PTR [ebx-0x2a7c6f1f]
  415401:	int3   
  415402:	push   DWORD PTR [ebx-0x76ea7696]
  415408:	dec    eax
  415409:	(bad)  
  41540a:	clc    
  41540b:	add    DWORD PTR [eax],0x6f
  41540e:	mov    dl,0xff
  415410:	xchg   BYTE PTR [ebx+0x3b9dff],al
  415416:	adc    eax,0xabcc42cc
  41541b:	(bad)  
  41541c:	(bad)  
  41541d:	fbstp  TBYTE PTR [ebx-0xffb001]
  415423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415424:	test   eax,0x7d006800
  415429:	int3   
  41542a:	pop    edx
  41542b:	inc    DWORD PTR [eax]
  41542d:	jp     0x415460
  41542f:	add    BYTE PTR [eax+0x3050ffcc],al
  415435:	add    DWORD PTR [edx],0xffffffff
  415438:	pushf  
  415439:	add    BYTE PTR [ebx],dh
  41543b:	inc    DWORD PTR [eax]
  41543d:	dec    ecx
  41543e:	daa    
  41543f:	add    BYTE PTR [edx-0x1],al
  415442:	push   DWORD PTR [ecx+esi*1-0x55004101]
  415449:	inc    DWORD PTR [ecx-0x4b720034]
  41544f:	add    BYTE PTR [esi],dl
  415451:	(bad)  
  415452:	dec    DWORD PTR [edx+esi*2+0xfff4600]
  415459:	push   DWORD PTR [edi+edi*8-0x77]
  41545d:	fisttp QWORD PTR ds:[ecx-0x5fffff12]
  415464:	out    0xff,al
  415466:	mov    bh,0x0
  415468:	push   edx
  415469:	inc    DWORD PTR ds:0x102d00ff
  41546f:	add    cl,al
  415471:	add    BYTE PTR [ebx-0x100082cf],al
  415477:	call   DWORD PTR [ebx-0x1]
  41547a:	xchg   edi,eax
  41547b:	add    BYTE PTR [eax],al
  41547d:	stos   DWORD PTR es:[edi],eax
  41547e:	scas   eax,DWORD PTR es:[edi]
  41547f:	mov    DWORD PTR [ecx+ecx*4],ebp
  415482:	xor    esi,0x60
  415485:	mov    edi,ebp
  415487:	add    BYTE PTR [edi],ah
  415489:	cmp    DWORD PTR [eax-0x1],0x0
  41548d:	and    BYTE PTR [edx-0xfd77],bh
  415493:	sub    BYTE PTR [esi],cl
  415495:	mov    DWORD PTR [edx],ebp
  415497:	int3   
  415498:	jno    0x41549a
  41549a:	push   es
  41549b:	add    bh,bh
  41549d:	pop    edi
  41549e:	dec    ebx
  41549f:	add    BYTE PTR [edi],dh
  4154a1:	inc    DWORD PTR [eax]
  4154a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a4:	xchg   esi,eax
  4154a5:	add    BYTE PTR [edi-0x7e00cb7d],al
  4154ab:	add    DWORD PTR [eax],0x4d
  4154ae:	sub    DWORD PTR [eax],eax
  4154b0:	inc    esp
  4154b1:	add    bh,bh
  4154b3:	bnd jle 0x415482
  4154b6:	xor    al,0xff
  4154b8:	(bad)  
  4154ba:	adc    al,0xff
  4154bc:	mov    DWORD PTR [esi+0x23],ebx
  4154bf:	add    dl,dh
  4154c1:	add    bh,bh
  4154c3:	jle    0x4154d6
  4154c5:	jmp    FWORD PTR [edx-0x7d]
  4154c8:	xchg   BYTE PTR [eax],al
  4154ca:	(bad)  
  4154cb:	int3   
  4154cc:	and    DWORD PTR [edx],0xffffffef
  4154cf:	call   FWORD PTR [esi-0x646a0100]
  4154d5:	call   DWORD PTR [eax]
  4154d7:	jmp    edx
  4154d9:	add    BYTE PTR [edx],bh
  4154db:	(bad)  
  4154dc:	jmp    DWORD PTR [ecx]
  4154de:	xor    edi,edi
  4154e0:	(bad)  
  4154e1:	dec    DWORD PTR [ecx+0x6fccf191]
  4154e7:	add    BYTE PTR [ebx-0x1],al
  4154ea:	xchg   ebp,eax
  4154eb:	add    BYTE PTR [ecx+0x43002c01],cl
  4154f1:	add    DWORD PTR [eax],0xffffffa2
  4154f4:	add    BYTE PTR [eax],0x87
  4154f7:	or     ecx,0xffffffff
  4154fa:	loop   0x4154fb
  4154fc:	call   DWORD PTR [edi-0x26]
  4154ff:	int3   
  415500:	icebp  
  415501:	or     esp,0xffffff81
  415504:	jg     0x415489
  415506:	cmc    
  415507:	jmp    DWORD PTR [ebx+eax*4]
  41550a:	sub    bh,bh
  41550c:	(bad)  
  41550d:	fdivr  DWORD PTR [eax+0x0]
  415510:	and    eax,0xaf7ecc83
  415515:	jmp    DWORD PTR ds:0xae0095ff
  41551b:	(bad)  
  41551c:	call   FWORD PTR [ecx-0x6d]
  41551f:	mov    DWORD PTR [edx+0x8170000],ebx
  415525:	int3   
  415526:	stos   DWORD PTR es:[edi],eax
  415527:	sub    DWORD PTR [edx],0xffffffcc
  41552a:	mov    esi,0x359b00ff
  41552f:	add    BYTE PTR [ebx-0x5fcff7d],bl
  415535:	add    BYTE PTR [esi-0x1],dh
  415538:	push   ss
  415539:	inc    edx
  41553b:	add    bh,bh
  41553d:	in     al,dx
  41553e:	xor    eax,0xffff2fff
  415543:	push   0xffffffcc
  415545:	sub    DWORD PTR [ecx+0x0],0xffffff8a
  415549:	inc    DWORD PTR [edi+edi*8-0x1]
  41554d:	xchg   BYTE PTR [edi-0x7d],cl
  415550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415551:	add    bh,bh
  415553:	cmp    DWORD PTR [edi-0x2b001700],edx
  415559:	mov    DWORD PTR [ebp-0x16a7c01],eax
  41555f:	(bad)  
  415560:	fdivp  st(7),st
  415562:	add    BYTE PTR [ebp+0x58],ah
  415565:	jmp    FWORD PTR [ecx-0x1]
  415568:	mov    ds:0xffffe1ff,eax
  41556d:	test   BYTE PTR [ebx+0x71ff],ah
  415573:	mov    ebx,gs
  415575:	add    DWORD PTR [eax],0xffffffff
  415578:	sub    ah,cl
  41557a:	push   es
  41557b:	int3   
  41557c:	inc    DWORD PTR [eax]
  41557e:	out    0xff,al
  415580:	scas   eax,DWORD PTR es:[edi]
  415581:	cmp    edi,0x2e
  415584:	push   0x800a3ff
  415589:	add    BYTE PTR [edi-0x7d],al
  41558c:	add    BYTE PTR [ebp-0xd9003f],bh
  415592:	push   edx
  415594:	sbb    edi,edi
  415596:	icebp  
  415597:	cmp    DWORD PTR [ebx+eax*4-0x29],0xffffffff
  41559c:	dec    DWORD PTR [eax+0x34ff08]
  4155a2:	or     DWORD PTR ds:0x89dd0062,0xffffff9b
  4155a9:	call   DWORD PTR [eax+eax*1-0x1]
  4155ad:	popa   
  4155ae:	imul   eax,DWORD PTR [ebx+0x32898336],0xffffffd6
  4155b5:	add    BYTE PTR [edi+edi*8-0xe4004a],ah
  4155bc:	int3   
  4155bd:	cmc    
  4155be:	cmp    eax,0xffbfff
  4155c3:	mov    cl,BYTE PTR [eax+eax*1-0x77ff9e]
  4155ca:	(bad)  
  4155cb:	inc    DWORD PTR [eax]
  4155cd:	out    dx,eax
  4155ce:	xchg   esp,eax
  4155cf:	sbb    DWORD PTR [eax],0xffffffff
  4155d2:	sbb    DWORD PTR [ebx-0xd73373],0x3b
  4155d9:	(bad)  
  4155da:	fdivp  st(7),st
  4155dc:	add    BYTE PTR [ebp+0x39],ch
  4155df:	xor    eax,0x0
  4155e2:	int3   
  4155e3:	jnp    0x4155a3
  4155e5:	add    BYTE PTR [eax-0x49005e7d],ah
  4155eb:	add    BYTE PTR [ebx-0x4576ba4e],al
  4155f1:	dec    esp
  4155f3:	stos   DWORD PTR es:[edi],eax
  4155f4:	stos   BYTE PTR es:[edi],al
  4155f5:	(bad)  
  4155f6:	mov    edi,0xbc009900
  4155fb:	int3   
  4155fc:	inc    DWORD PTR [ebx-0x76]
  4155ff:	call   FWORD PTR ds:0x6ed6ff83
  415605:	add    BYTE PTR ds:0x5489bd00,cl
  41560b:	inc    DWORD PTR [eax]
  41560d:	test   BYTE PTR [esp+ecx*8-0x6b],0x0
  415612:	add    BYTE PTR [ebx-0x1b],ah
  415615:	jmp    DWORD PTR [eax-0x7d]
  415618:	mov    edi,0x89ffb9ff
  41561d:	add    ebp,eax
  41561f:	call   FWORD PTR [edx]
  415621:	dec    DWORD PTR [ecx+0x100259f]
  415627:	(bad)  
  415628:	jmp    0x1407d2c
  41562d:	mov    ah,0x52
  41562f:	or     ebp,0xffffff89
  415632:	push   DWORD PTR [edi]
  415634:	popf   
  415635:	add    BYTE PTR [ebx],ah
  415637:	inc    DWORD PTR [ebx+0x2700]
  41563d:	sub    BYTE PTR [esi],bl
  41563f:	add    DWORD PTR [edi+0x0],0xffffffff
  415643:	repnz sub DWORD PTR [eax],eax
  415646:	call   0xffff:0xe00020ff
  41564d:	sub    edx,ecx
  41564f:	xor    DWORD PTR [eax+0x316b0089],0xffffff83
  415656:	mov    edi,edi
  415658:	ror    esp,0x51
  41565b:	add    bh,bh
  41565d:	xchg   ebp,eax
  41565e:	cmp    BYTE PTR [ecx-0x2700ff24],cl
  415664:	mov    ds:0xbfff80ff,al
  415669:	push   DWORD PTR [esi-0x18aeff01]
  41566f:	add    BYTE PTR [ebx+eax*4-0x7c8c9201],bl
  415676:	sti    
  415677:	add    BYTE PTR [edi-0x1],cl
  41567a:	xlat   BYTE PTR ds:[ebx]
  41567b:	add    bh,bh
  41567d:	lds    ecx,FWORD PTR [ecx-0x1]
  415680:	sbb    bh,bh
  415682:	add    BYTE PTR ds:0xcc78cc97,cl
  415688:	loope  0x415689
  41568a:	cld    
  41568b:	inc    DWORD PTR [eax]
  41568d:	inc    ebp
  41568e:	cs xor esp,0xffffff83
  415692:	and    DWORD PTR [ebp+0x23],0xffffff83
  415696:	in     eax,dx
  415697:	push   DWORD PTR [edi+edi*8+0x68]
  41569b:	add    DWORD PTR [eax],0xffffffab
  41569e:	xchg   BYTE PTR [ebx+0x5bff00bf],al
  4156a4:	cmp    al,0x83
  4156a6:	mov    al,ds:0x3d004cff
  4156ab:	inc    DWORD PTR [eax]
  4156ad:	or     esp,DWORD PTR [ebx-0xff8401]
  4156b3:	cwde   
  4156b4:	out    dx,al
  4156b5:	add    BYTE PTR [ecx+ecx*4],bl
  4156b8:	(bad)  
  4156ba:	fadd   DWORD PTR [ebx-0x894a01]
  4156c0:	jb     0x4156c1
  4156c2:	add    BYTE PTR [eax-0x76790015],ah
  4156c8:	and    eax,0x892000
  4156cd:	sub    al,0x7d
  4156cf:	add    BYTE PTR [ecx-0x38cfff01],bl
  4156d5:	dec    edx
  4156d7:	add    BYTE PTR [ebx],dl
  4156d9:	jmp    edx
  4156db:	inc    DWORD PTR [eax]
  4156dd:	xchg   esi,eax
  4156de:	add    BYTE PTR cs:[ecx],dl
  4156e1:	add    ah,cl
  4156e3:	or     bl,BYTE PTR [eax+0x18307ff]
  4156e9:	inc    DWORD PTR [eax+eax*1-0x79ba01]
  4156f0:	cmp    edi,edi
  4156f2:	add    bh,ch
  4156f4:	pushf  
  4156f5:	dec    DWORD PTR [ebx]
  4156f7:	add    BYTE PTR [edi],dl
  4156f9:	inc    DWORD PTR [ecx-0x3d780001]
  4156ff:	jmp    FWORD PTR [edi+0x2c8800ff]
  415705:	add    BYTE PTR [eax],cl
  415707:	int3   
  415708:	scas   eax,DWORD PTR es:[edi]
  415709:	xor    esp,0xffffffff
  41570c:	int3   
  41570d:	das    
  41570e:	xor    bh,bh
  415710:	fcos   
  415712:	add    ah,ch
  415714:	in     al,dx
  415715:	push   DWORD PTR [ecx+0x0]
  415718:	pop    esi
  415719:	dec    esi
  41571b:	add    bh,bh
  41571d:	(bad)  
  41571e:	(bad)  
  415720:	outs   dx,DWORD PTR ds:[esi]
  415721:	inc    DWORD PTR [eax]
  415723:	lds    edx,FWORD PTR [ebx-0x7d]
  415726:	iret   
  415727:	add    bl,dh
  415729:	add    BYTE PTR [ebx-0x1],dh
  41572c:	call   FWORD PTR [esi-0xbb004a]
  415732:	sub    DWORD PTR [edx],0x78
  415735:	(bad)  
  415736:	jp     0x415704
  415738:	push   eax
  415739:	add    cl,bl
  41573b:	add    bh,bh
  41573d:	imul   esi,DWORD PTR [edx-0x1],0xffffffce
  415741:	inc    DWORD PTR [eax]
  415743:	dec    edi
  415744:	enter  0x8983,0xff
  415748:	cmp    eax,0xffffd8ff
  41574d:	sub    bl,BYTE PTR [edx-0x76ffd177]
  415753:	ss mov ?,edi
  415756:	sub    al,0xff
  415758:	dec    ah
  41575a:	cmp    al,0xff
  41575c:	push   DWORD PTR [edx-0x78]
  41575f:	cmp    DWORD PTR [esi-0x27b30000],0xffffffff
  415766:	mov    ebx,0xb200dcff
  41576b:	inc    DWORD PTR [ebx+0x78ff6a78]
  415771:	(bad)  
  415772:	call   DWORD PTR [ebp+0x3e]
  415775:	add    BYTE PTR [edi+0x4000c4ff],bh
  41577b:	int3   
  41577c:	jmp    FWORD PTR [ecx+0x3d]
  41577f:	and    DWORD PTR [ebx+0x4852ffff],0xffffffcc
  415786:	sahf   
  415787:	add    ch,dh
  415789:	add    BYTE PTR [ebp+0x0],dh
  41578c:	or     DWORD PTR [edx+0x6d],0x0
  415790:	aaa    
  415791:	add    BYTE PTR [eax],al
  415793:	add    al,0xa2
  415795:	add    ch,cl
  415797:	inc    DWORD PTR ds:0xffffa1ff
  41579d:	fld    QWORD PTR [edx-0x33ffac01]
  4157a3:	jle    0x4157e6
  4157a5:	(bad)  
  4157a6:	aas    
  4157a7:	inc    ebp
  4157a9:	jmp    DWORD PTR ds:0x4e67ff83
  4157af:	int3   
  4157b0:	cwde   
  4157b1:	mov    DWORD PTR [eax],eax
  4157b3:	shl    ebp,cl
  4157b5:	add    DWORD PTR [edi],0xffffffcc
  4157b8:	adc    al,0xff
  4157ba:	jmp    0xc7ff:0x8ea0ff83
  4157c1:	mov    DWORD PTR [eax],eax
  4157c3:	push   0x14
  4157c5:	call   DWORD PTR [edi+0x34003500]
  4157cb:	int3   
  4157cc:	xor    DWORD PTR [ecx],0xffffff89
  4157cf:	add    dl,al
  4157d1:	(bad)  
  4157d2:	jmp    ebx
  4157d4:	jnp    0x4157d5
  4157d6:	rol    DWORD PTR [eax],0x69
  4157d9:	add    cl,ch
  4157db:	or     esp,0xffffff99
  4157de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157df:	add    al,al
  4157e1:	mov    DWORD PTR [eax],eax
  4157e3:	xchg   bh,dl
  4157e5:	push   DWORD PTR [ecx+0x0]
  4157e8:	or     al,BYTE PTR [eax]
  4157ea:	ds (bad) 
  4157ec:	dec    DWORD PTR [eax+edi*4-0xff5b00]
  4157f3:	cmc    
  4157f4:	bound  eax,QWORD PTR [eax]
  4157f6:	out    dx,al
  4157f7:	add    BYTE PTR [ecx+ecx*4],dh
  4157fa:	je     0x41577f
  4157fc:	add    BYTE PTR [eax-0x42],al
  4157ff:	push   DWORD PTR [esi]
  415801:	add    bh,bh
  415803:	jnp    0x4157bd
  415805:	jmp    DWORD PTR [eax+eax*1+0xfd00d3]
  41580c:	push   ebx
  41580e:	in     eax,0x83
  415810:	clc    
  415811:	mov    edi,edi
  415813:	cmc    
  415814:	fdivp  st(7),st
  415816:	call   FWORD PTR [bx]
  415819:	and    DWORD PTR [edi-0x3b3007d],0xffffffff
  415820:	fadd   QWORD PTR [eax]
  415822:	(bad)  
  415823:	cmp    ecx,DWORD PTR [edx-0x1500fe01]
  415829:	add    BYTE PTR [edx],al
  41582b:	(bad)  
  41582c:	inc    ebp
  41582e:	xchg   ecx,eax
  41582f:	add    DWORD PTR [edx],0xffffff83
  415832:	or     ecx,0xffffffb3
  415835:	add    BYTE PTR [edi-0x28ff5c01],ch
  41583b:	inc    DWORD PTR [eax]
  41583d:	sub    al,0xd1
  41583f:	call   DWORD PTR [edi-0x1]
  415842:	call   DWORD PTR [ecx]
  415844:	call   0x5cb1648
  415849:	add    BYTE PTR [ebx-0x6d210000],ah
  41584f:	call   edx
  415851:	add    bh,bh
  415853:	xchg   ebp,eax
  415854:	add    BYTE PTR es:[edx+0x7e004aff],bl
  41585b:	inc    DWORD PTR [eax]
  41585d:	sahf   
  41585e:	jnp    0x41585f
  415860:	xrelease mov DWORD PTR [eax],eax
  415863:	stos   DWORD PTR es:[edi],eax
  415864:	in     al,dx
  415865:	mov    DWORD PTR [esp+ecx*8-0x3d0076],esi
  41586c:	jmp    FWORD PTR [edx+ecx*8-0xff7301]
  415873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415874:	and    bh,bh
  415876:	and    edi,edi
  415878:	pop    eax
  415879:	add    dl,ah
  41587b:	(bad)  
  41587c:	(bad)  
  41587d:	jl     0x4158c0
  41587f:	call   edi
  415881:	add    BYTE PTR [eax],al
  415883:	jo     0x4158f5
  415885:	add    cl,bl
  415887:	xor    DWORD PTR [edx-0x1],0xffffffd4
  41588b:	add    bh,bh
  41588d:	and    dl,BYTE PTR [eax-0xc01]
  415893:	or     al,0x5f
  415895:	(bad)  
  415896:	cli    
  415897:	mov    DWORD PTR [edx-0x1800],eax
  41589d:	mov    al,ds:0xff16ff45
  4158a2:	call   FWORD PTR [edx-0x9e0026]
  4158a8:	push   esp
  4158a9:	jmp    FWORD PTR [ebp-0x1]
  4158ac:	int3   
  4158ad:	mov    bl,0x1b
  4158af:	inc    edi
  4158b1:	add    BYTE PTR [eax],al
  4158b3:	ror    DWORD PTR [ecx+ecx*4-0x338500f5],0x6
  4158bb:	(bad)  
  4158bc:	inc    DWORD PTR [ebp-0x7f]
  4158bf:	dec    DWORD PTR [edx-0x7d]
  4158c2:	call   esp
  4158c4:	mov    al,BYTE PTR [eax]
  4158c6:	leave  
  4158c7:	add    BYTE PTR [edx+0x4dff],ah
  4158cd:	out    0xd8,eax
  4158cf:	add    BYTE PTR [edi+edi*8],dl
  4158d2:	(bad)  
  4158d3:	call   0xff6ddc47
  4158d8:	fild   DWORD PTR [ebx+0x13cc00a7]
  4158de:	outs   dx,DWORD PTR ds:[esi]
  4158df:	call   FWORD PTR [edi+0x3ed3ffff]
  4158e5:	jmp    ecx
  4158e7:	jmp    DWORD PTR [ecx-0x187d]
  4158ed:	and    eax,0xff77ff83
  4158f2:	call   FWORD PTR [eax+0x7a]
  4158f5:	add    ah,al
  4158f7:	add    BYTE PTR [esi+0x0],bl
  4158fa:	sbb    eax,0x4a4689ff
  4158ff:	push   DWORD PTR [ebx]
  415901:	add    bh,bh
  415903:	hlt    
  415904:	ltr    WORD PTR [esi-0x70ff7801]
  41590b:	add    ah,cl
  41590d:	enter  0xc8,0x52
  415911:	add    BYTE PTR [ebx+0x7affe66c],al
  415917:	inc    DWORD PTR [esi+0x0]
  41591a:	push   ebp
  41591b:	inc    DWORD PTR [eax]
  41591d:	mov    esp,ebp
  41591f:	call   FWORD PTR [ecx-0x59eb0100]
  415925:	mov    DWORD PTR [eax+eax*1+0x73],edi
  415929:	add    ah,ah
  41592b:	inc    DWORD PTR [ebx+0xdff20d8]
  415931:	(bad)  
  415932:	(bad)  
  415933:	fisubr WORD PTR [eax+0x49cc3400]
  415939:	dec    ecx
  41593b:	add    bh,bh
  41593d:	cmp    esi,DWORD PTR [edi+edi*8-0x6]
  415941:	add    bh,bh
  415943:	mov    al,ds:0x89f9ff9e
  415948:	cmp    edi,0x9589ffcd
  41594e:	inc    esi
  41594f:	(bad)  
  415950:	cmp    eax,DWORD PTR [eax]
  415952:	push   DWORD PTR [edx-0xf9ff24]
  415958:	ins    DWORD PTR es:[edi],dx
  415959:	add    BYTE PTR [ebx-0x3be37700],dh
  41595f:	add    ah,bl
  415961:	mov    esp,ecx
  415963:	rcr    BYTE PTR [ebp-0x50004601],cl
  415969:	add    ch,bh
  41596b:	int3   
  41596c:	(bad)  
  41596d:	cmp    edi,ebp
  41596f:	sbb    DWORD PTR [edi+edi*8+0x0],0x39
  415974:	leave  
  415975:	xor    DWORD PTR [eax],0x0
  415978:	mov    DWORD PTR [eax],0x228383c3
  41597e:	jno    0x41594c
  415980:	jae    0x415905
  415982:	call   DWORD PTR [eax+eax*2-0x1]
  415986:	mov    al,ds:0x89005d00
  41598b:	add    DWORD PTR [eax],0x9
  41598e:	imul   eax,DWORD PTR [eax],0xffffffa5
  415991:	inc    DWORD PTR [eax]
  415993:	sbb    cl,BYTE PTR [edx]
  415995:	add    BYTE PTR [ebx-0x33a701],ch
  41599b:	add    bh,bh
  41599d:	fistp  DWORD PTR [eax+eax*1]
  4159a0:	dec    ecx
  4159a1:	add    BYTE PTR [eax],al
  4159a3:	iret   
  4159a4:	arpl   di,di
  4159a6:	inc    ebx
  4159a7:	add    BYTE PTR [ebx-0x1377],dl
  4159ad:	and    eax,0xffadffe7
  4159b2:	cmp    DWORD PTR [ebx+0x1c],0xffffffff
  4159b6:	and    al,0x89
  4159b8:	cld    
  4159b9:	int3   
  4159ba:	stc    
  4159bb:	int3   
  4159bc:	sbb    DWORD PTR [edi-0x62],0xffffffff
  4159c0:	cli    
  4159c1:	dec    esp
  4159c3:	sub    bh,dl
  4159c5:	jmp    DWORD PTR [ebp+0x68005189]
  4159cb:	cmp    edi,0xffffff98
  4159ce:	das    
  4159cf:	call   FWORD PTR [esi]
  4159d1:	inc    DWORD PTR [eax]
  4159d3:	ds sub al,0xcc
  4159d6:	adc    eax,DWORD PTR [eax]
  4159d8:	fdiv   st(7),st
  4159da:	xlat   BYTE PTR ds:[ebx]
  4159db:	add    BYTE PTR [ecx+0x3600a799],cl
  4159e1:	mov    DWORD PTR [eax],eax
  4159e3:	push   edx
  4159e4:	add    edi,edi
  4159e6:	cdq    
  4159e7:	call   FWORD PTR [edi-0x34]
  4159ea:	jmp    0xbcfa5aee
  4159ef:	add    BYTE PTR [ebx],bh
  4159f1:	(bad)  
  4159f2:	call   ecx
  4159f4:	xchg   ebx,eax
  4159f5:	mov    DWORD PTR [eax],edi
  4159f7:	(bad)  
  4159f8:	jle    0x4159fa
  4159fa:	outs   dx,DWORD PTR ds:[esi]
  4159fb:	int3   
  4159fc:	add    BYTE PTR [edx],cl
  4159fe:	cmp    eax,0xffbf00
  415a03:	retf   0xff3b
  415a06:	cmc    
  415a07:	add    BYTE PTR [edx-0x1],dl
  415a0a:	jo     0x415a0c
  415a0c:	add    BYTE PTR [edi],cl
  415a0e:	xchg   esp,eax
  415a0f:	jmp    FWORD PTR [ecx]
  415a11:	add    BYTE PTR [eax],al
  415a13:	ror    BYTE PTR [edx+0x74fff783],1
  415a19:	add    BYTE PTR [ebx],ch
  415a1b:	mov    edi,edi
  415a1d:	popa   
  415a1e:	out    dx,eax
  415a1f:	int3   
  415a20:	mov    ebp,0x98e0ff00
  415a25:	add    BYTE PTR [ebx+eax*4-0xd0ff6d],ah
  415a2c:	mov    DWORD PTR [edi+0x3c],ecx
  415a2f:	jmp    DWORD PTR [edi+edi*8+0xd560ff]
  415a36:	push   esi
  415a37:	add    BYTE PTR [eax],cl
  415a39:	jmp    FWORD PTR [ebx]
  415a3b:	inc    DWORD PTR [eax]
  415a3d:	cmovb  edi,edi
  415a40:	add    al,BYTE PTR [ebx-0x5bb177]
  415a46:	add    BYTE PTR [eax],0x66
  415a49:	or     DWORD PTR [esi+0x98883ff],0xffffff89
  415a50:	retf   
  415a51:	add    bh,bh
  415a53:	enter  0x83be,0xd6
  415a57:	add    BYTE PTR ds:0x894389,ch
  415a5d:	shl    dl,cl
  415a5f:	int3   
  415a60:	imul   ecx,esp,0xffa64f00
  415a66:	sahf   
  415a67:	int3   
  415a68:	repz int3 
  415a6a:	mov    ?,edi
  415a6c:	int3   
  415a6d:	es xchg ebx,eax
  415a6f:	and    DWORD PTR [ecx+0x6c7b83ff],0xffffffff
  415a76:	jno    0x415a44
  415a78:	mov    al,0x0
  415a7a:	retf   
  415a7b:	(bad)  
  415a7c:	call   FWORD PTR [edx-0x30]
  415a7f:	(bad)  
  415a80:	js     0x415a82
  415a82:	(bad)  
  415a83:	cmp    ebx,DWORD PTR [edx-0x1733f501]
  415a89:	add    dh,cl
  415a8b:	int3   
  415a8c:	dec    DWORD PTR [ecx]
  415a8e:	out    dx,al
  415a8f:	add    DWORD PTR [edi],0xffffff83
  415a92:	(bad)  
  415a93:	jns    0x415b10
  415a95:	add    BYTE PTR [ebp+0x0],cl
  415a98:	adc    edi,edi
  415a9a:	fild   WORD PTR [ebx+0x1bc7ff]
  415aa0:	(bad)  
  415aa2:	add    BYTE PTR [eax-0x60767c],dl
  415aa8:	pop    eax
  415aa9:	dec    DWORD PTR [esi-0x4570000]
  415aaf:	add    ah,bl
  415ab1:	int3   
  415ab2:	call   DWORD PTR [ecx+0x40ffb7]
  415ab8:	sub    edi,edi
  415aba:	xchg   esi,eax
  415abb:	inc    DWORD PTR [eax]
  415abd:	add    BYTE PTR [ecx+0x83bdff],dl
  415ac3:	cmp    al,cl
  415ac5:	jmp    FWORD PTR [edx]
  415ac7:	add    BYTE PTR [ebp+0x0],bh
  415aca:	xor    eax,0xb6b500ff
  415acf:	add    dl,cl
  415ad1:	add    DWORD PTR [eax],0xffffff8d
  415ad4:	je     0x415ad5
  415ad6:	loopne 0x415a5b
  415ad8:	fdivp  st(7),st
  415ada:	xor    edi,edi
  415adc:	inc    DWORD PTR [ebx-0x23]
  415adf:	or     DWORD PTR [eax+0x307bff00],0x0
  415ae6:	cmp    bh,bh
  415ae8:	fdiv   st(7),st
  415aea:	mov    eax,ds:0x8b54ff00
  415aef:	jmp    FWORD PTR [esi+0x0]
  415af2:	add    bh,dl
  415af4:	cmc    
  415af5:	(bad)  
  415af6:	mov    edi,0x9f834c83
  415afb:	cmp    edi,0x1f
  415afe:	xchg   ebx,eax
  415aff:	call   FWORD PTR [edi+edi*8]
  415b02:	dec    DWORD PTR [edi+esi*2-0x77]
  415b06:	out    0xff,eax
  415b08:	lldt   bx
  415b0b:	dec    DWORD PTR [ecx+0x7accdcc3]
  415b11:	cmp    edi,0x7a
  415b14:	je     0x415b16
  415b16:	pop    edi
  415b17:	add    ah,dh
  415b19:	add    BYTE PTR [ebx+0x4c16ccff],cl
  415b1f:	sbb    DWORD PTR [esi-0xf980001],0xffffffff
  415b26:	cmp    al,0x89
  415b28:	mov    DWORD PTR [eax],0x27ffff3f
  415b2e:	jnp    0x415b30
  415b30:	in     al,0xcc
  415b32:	add    BYTE PTR [edx-0x5b],ah
  415b35:	add    BYTE PTR [ecx-0x3d7cf501],ch
  415b3b:	(bad)  
  415b3c:	(bad)  
  415b3d:	cmp    al,0xce
  415b3f:	add    ch,al
  415b41:	add    BYTE PTR [ecx+0x68ff72dd],cl
  415b47:	add    BYTE PTR [edx+0xffb2ff],bl
  415b4d:	out    dx,eax
  415b4e:	push   edx
  415b4f:	adc    DWORD PTR [ebx+0x6df6ff83],0xffffffff
  415b56:	mov    bh,0xff
  415b58:	es add dh,dl
  415b5b:	add    BYTE PTR [eax],al
  415b5d:	sahf   
  415b5e:	xchg   edx,eax
  415b5f:	push   DWORD PTR [ebx+0x6d500ff]
  415b65:	inc    DWORD PTR [ecx+0x0]
  415b68:	sub    DWORD PTR fs:[esi-0x2c4c7d00],0xffffffff
  415b70:	popf   
  415b71:	add    BYTE PTR [eax],al
  415b73:	(bad)  
  415b74:	cli    
  415b75:	add    BYTE PTR [edi-0x41008d00],bl
  415b7b:	inc    DWORD PTR [ebx-0x5100b784]
  415b81:	mov    edi,edi
  415b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b84:	pop    ebx
  415b85:	(bad)  
  415b86:	out    dx,al
  415b87:	add    BYTE PTR [ecx-0x76003300],bl
  415b8d:	jmp    0x3dff:0xff9389e2
  415b94:	je     0x415b1f
  415b96:	ret    
  415b97:	and    DWORD PTR [ebx-0xffff00],0x74
  415b9e:	cmp    bh,0xac
  415ba1:	inc    DWORD PTR [ebx+0x7ffe628]
  415ba7:	add    BYTE PTR [eax-0xff3e00],dh
  415bad:	cmc    
  415bae:	and    ah,cl
  415bb0:	and    edi,edi
  415bb2:	add    BYTE PTR [esi],dl
  415bb4:	mov    edi,edi
  415bb6:	bound  eax,QWORD PTR [eax]
  415bb8:	fcos   
  415bba:	push   edx
  415bbb:	add    bh,bh
  415bbd:	push   eax
  415bbe:	xchg   esi,eax
  415bbf:	mov    DWORD PTR [ecx],esi
  415bc1:	add    BYTE PTR [eax],al
  415bc3:	mov    esi,0x8910ff63
  415bc8:	arpl   WORD PTR [eax],ax
  415bca:	jb     0x415bcb
  415bcc:	dec    DWORD PTR [esp+esi*4-0xff4e01]
  415bd3:	sar    BYTE PTR [ecx-0x53008301],1
  415bd9:	inc    edx
  415bdb:	inc    DWORD PTR [ebx-0x30ffcf58]
  415be1:	add    BYTE PTR [eax],al
  415be3:	pop    ebx
  415be4:	rol    BYTE PTR [eax],0x98
  415be7:	jmp    DWORD PTR [esi-0x1]
  415bea:	test   al,0xff
  415bec:	jmp    FWORD PTR [ecx+0x27894c]
  415bf2:	int3   
  415bf3:	mov    esp,0xccd0cc96
  415bf8:	add    eax,DWORD PTR [eax]
  415bfa:	xchg   BYTE PTR [eax],al
  415bfc:	or     DWORD PTR [ecx+0x5f0075],0xffffff83
  415c03:	shr    bl,1
  415c05:	jmp    FWORD PTR [eax+eax*1+0x99ff6b]
  415c0c:	sub    ebx,0x40
  415c0f:	adc    DWORD PTR ds:0xb0b5ff00,0x0
  415c16:	cmp    eax,0xa2833600
  415c1b:	dec    esp
  415c1d:	lea    edx,[ebx-0x3333e800]
  415c23:	inc    edx
  415c24:	pop    DWORD PTR [eax]
  415c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c27:	add    BYTE PTR [ecx],dl
  415c29:	add    BYTE PTR [ecx+0x6d158300],ch
  415c2f:	call   DWORD PTR [edi-0x2d25ff01]
  415c35:	jmp    FWORD PTR [ecx-0x1]
  415c38:	cmp    eax,DWORD PTR [eax]
  415c3a:	push   ecx
  415c3b:	cmp    edi,0x28
  415c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c3f:	add    esp,0xffffffff
  415c42:	inc    DWORD PTR [ebx-0x29]
  415c45:	xor    DWORD PTR [edx-0x1],0x66
  415c49:	mov    DWORD PTR [eax-0x34],eax
  415c4c:	add    BYTE PTR [ebp-0x57],bh
  415c4f:	mov    DWORD PTR [edi-0x7d],ecx
  415c52:	add    BYTE PTR [ebx],dh
  415c54:	pop    ds
  415c55:	int3   
  415c56:	cmp    al,0x89
  415c58:	push   esi
  415c59:	(bad)  
  415c5a:	sti    
  415c5b:	add    bh,bh
  415c5d:	into   
  415c5e:	repz (bad) 
  415c60:	mov    ebp,0xc25d00ff
  415c65:	inc    DWORD PTR [edi-0x77]
  415c68:	in     al,dx
  415c69:	adc    DWORD PTR [edi+0x7e180000],0x0
  415c70:	mov    ecx,0x4850ccff
  415c75:	dec    ebx
  415c77:	xor    DWORD PTR [esi],0xffffffff
  415c7a:	repz dec esp
  415c7d:	push   ecx
  415c7e:	jns    0x415c80
  415c80:	inc    esp
  415c81:	add    BYTE PTR [eax],al
  415c83:	inc    ebx
  415c84:	call   DWORD PTR fs:[ecx-0x1]
  415c88:	into   
  415c89:	dec    esi
  415c8b:	(bad)  
  415c8c:	jmp    FWORD PTR [eax+0xc000c4]
  415c92:	int3   
  415c93:	dec    ebp
  415c94:	call   0x92419e1c
  415c99:	add    DWORD PTR [edx],0xffffffff
  415c9c:	push   DWORD PTR [edi+0x9]
  415c9f:	(bad)  
  415ca0:	in     al,dx
  415ca1:	inc    DWORD PTR [eax]
  415ca3:	cmp    DWORD PTR [edi-0x6dff4a01],ebp
  415ca9:	dec    DWORD PTR [ebp-0x1]
  415cac:	int3   
  415cad:	pushf  
  415cae:	cmp    edi,edi
  415cb0:	inc    DWORD PTR gs:[ebx-0x36004ea8]
  415cb7:	int3   
  415cb8:	push   ss
  415cb9:	add    dl,ah
  415cbb:	(bad)  
  415cbc:	dec    DWORD PTR [esi]
  415cbe:	push   eax
  415cbf:	mov    esp,eax
  415cc1:	cmp    edi,0xffffff84
  415cc4:	stos   BYTE PTR es:[edi],al
  415cc5:	inc    DWORD PTR [esi-0x7d]
  415cc8:	push   0xffffffff
  415cca:	jb     0x415ccb
  415ccc:	add    esi,0xd
  415ccf:	mov    edx,ebp
  415cd1:	or     esp,0xffffffaa
  415cd4:	out    0xff,eax
  415cd6:	or     DWORD PTR ss:[eax-0x77],0xffffffc0
  415cdb:	inc    DWORD PTR [eax]
  415cdd:	or     al,0x3b
  415cdf:	dec    ebx
  415ce1:	inc    DWORD PTR [eax]
  415ce3:	shl    bh,1
  415ce5:	dec    DWORD PTR [esi]
  415ce7:	add    BYTE PTR [eax-0x76004077],bl
  415ced:	jg     0x415c99
  415cef:	push   DWORD PTR [edx-0x1]
  415cf2:	inc    DWORD PTR [edi+0x25]
  415cf5:	int3   
  415cf6:	xor    eax,0xdfffb1cc
  415cfb:	dec    esp
  415cfd:	lahf   
  415cfe:	fdivr  st,st(7)
  415d00:	sbb    al,0xff
  415d02:	push   DWORD PTR [ebp-0x27]
  415d05:	add    BYTE PTR [edx-0x62338000],cl
  415d0b:	mov    edi,edi
  415d0d:	or     BYTE PTR [esi],0xff
  415d10:	dec    eax
  415d11:	add    BYTE PTR [eax],al
  415d13:	jbe    0x415c96
  415d15:	call   FWORD PTR ds:0x73ff7600
  415d1b:	add    bh,bh
  415d1d:	mov    esp,0xff49ff01
  415d22:	int3   
  415d23:	test   cl,dh
  415d25:	jmp    DWORD PTR [edi+edi*8-0x70015]
  415d2c:	add    BYTE PTR [esp+esi*4-0x1],cl
  415d30:	retf   0x8300
  415d33:	sti    
  415d34:	pop    eax
  415d35:	call   FWORD PTR [ebx-0x13003a00]
  415d3b:	add    DWORD PTR [eax],0x4e
  415d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d3f:	mov    DWORD PTR [esi-0xeeaff01],esi
  415d45:	add    BYTE PTR [eax+eax*1-0x36],ch
  415d49:	push   DWORD PTR [eax]
  415d4b:	inc    DWORD PTR [eax]
  415d4d:	mov    eax,ds:0x24007d
  415d52:	push   DWORD PTR [eax]
  415d54:	jmp    0x7ccb2458
  415d59:	add    BYTE PTR [edi+edi*8-0x7cc3c101],al
  415d60:	(bad)  
  415d61:	inc    DWORD PTR [eax]
  415d63:	call   0x65:0x893b00a5
  415d6a:	enter  0xff,0x77
  415d6e:	mov    edi,0xffffe683
  415d73:	(bad)  
  415d74:	push   esi
  415d75:	call   DWORD PTR [ecx+0x0]
  415d78:	out    0x0,al
  415d7a:	push   ebx
  415d7b:	add    ah,cl
  415d7d:	data16 jne 0x415d80
  415d80:	int3   
  415d81:	add    BYTE PTR [eax],al
  415d83:	mov    cl,0x4a
  415d85:	int3   
  415d86:	or     eax,0xb7ffae89
  415d8b:	add    bh,bh
  415d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d8e:	(bad)  
  415d8f:	push   DWORD PTR [esi]
  415d91:	add    BYTE PTR [ecx+0x7aff6a46],cl
  415d97:	add    BYTE PTR [eax+eax*1-0x7a],dl
  415d9b:	add    BYTE PTR [eax],al
  415d9d:	mov    eax,0x830600fd
  415da2:	(bad)  
  415da3:	ds hlt 
  415da5:	int3   
  415da6:	cmc    
  415da7:	add    BYTE PTR [eax],al
  415da9:	(bad)  
  415daa:	mov    ecx,0xa4a0ffff
  415daf:	or     DWORD PTR [ebx-0x3c71007d],0x0
  415db6:	stos   DWORD PTR es:[edi],eax
  415db7:	add    BYTE PTR ds:0x83e789,ah
  415dbd:	stos   DWORD PTR es:[edi],eax
  415dbe:	push   edi
  415dbf:	dec    DWORD PTR [edi+0x100ccff]
  415dc5:	add    BYTE PTR [ebx+0x0],ah
  415dc8:	mov    ds:0xffff71ff,eax
  415dcd:	jle    0x415e47
  415dcf:	add    al,bl
  415dd1:	add    ah,cl
  415dd3:	popf   
  415dd4:	xchg   DWORD PTR [ebx-0x33fc0049],eax
  415dda:	idiv   edi
  415ddc:	and    eax,0x6b
  415ddf:	add    ah,ch
  415de1:	add    ah,cl
  415de3:	pusha  
  415de4:	pop    ebx
  415de5:	add    BYTE PTR [esi-0x1],al
  415de8:	popf   
  415de9:	add    ch,al
  415deb:	add    bh,bh
  415ded:	adc    al,0xe7
  415def:	sbb    esp,0xffffff89
  415df2:	xor    DWORD PTR [edi-0x3300ea],0xfffffffc
  415df9:	dec    DWORD PTR [eax+eax*1+0x0]
  415dfd:	fdivr  st(4),st
  415dff:	call   DWORD PTR [edx-0x77]
  415e02:	add    BYTE PTR [esi],ah
  415e04:	mov    bh,bh
  415e06:	mov    cl,0xff
  415e08:	repz and DWORD PTR [ebx],0xffffffff
  415e0c:	mov    DWORD PTR [edx],edi
  415e0e:	mov    ebp,0xff834000
  415e13:	div    DWORD PTR [edi]
  415e15:	call   DWORD PTR [ecx]
  415e17:	mov    DWORD PTR [esi-0x1],ebx
  415e1a:	xchg   BYTE PTR [ebx-0x3c4d01],al
  415e20:	mov    dh,0xff
  415e22:	add    BYTE PTR [esi-0xd8335c],cl
  415e28:	adc    BYTE PTR [eax],al
  415e2a:	data16 add BYTE PTR [eax],al
  415e2d:	mov    eax,DWORD PTR [ebx-0xb034]
  415e33:	in     al,dx
  415e34:	enter  0x40ff,0xff
  415e38:	push   es
  415e39:	call   DWORD PTR [ebx+0x11888983]
  415e3f:	jmp    DWORD PTR [eax+0x4be600ff]
  415e45:	add    BYTE PTR ds:0x83002883,ah
  415e4b:	(bad)  
  415e4c:	call   DWORD PTR [ebx+0x26]
  415e4f:	jmp    FWORD PTR [ebx+0x0]
  415e52:	(bad)  
  415e53:	cli    
  415e54:	(bad)  
  415e55:	int3   
  415e56:	jl     0x415de1
  415e58:	in     al,0xff
  415e5a:	add    BYTE PTR ds:[eax],al
  415e5d:	mov    esi,0x6b833d
  415e62:	add    BYTE PTR [edx],ah
  415e64:	(bad)  
  415e65:	jmp    FWORD PTR [ebp+0xe0085ff]
  415e6b:	(bad)  
  415e6c:	call   DWORD PTR [ecx-0x21]
  415e6f:	dec    edx
  415e71:	add    bh,bh
  415e73:	add    DWORD PTR [ecx],ebx
  415e75:	call   FWORD PTR [ecx-0x2cff6600]
  415e7b:	(bad)  
  415e7c:	call   FWORD PTR [esi-0x730034]
  415e82:	push   DWORD PTR [ebx+0x348993]
  415e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e89:	int3   
  415e8a:	lock mov DWORD PTR [eax],eax
  415e8d:	retf   
  415e8e:	mov    esi,0xff83d0ff
  415e93:	push   eax
  415e94:	fadd   QWORD PTR [ebx-0x880085]
  415e9a:	mov    cs,esp
  415e9c:	(bad)  
  415e9d:	cli    
  415e9e:	into   
  415e9f:	add    BYTE PTR [ebx-0x6fb70001],dl
  415ea5:	dec    DWORD PTR [ecx+0x4bff4900]
  415eab:	add    DWORD PTR [eax],0xffffffd8
  415eae:	pop    edx
  415eaf:	add    bl,al
  415eb1:	mov    DWORD PTR [ecx-0x683368e7],ecx
  415eb7:	mov    ebp,eax
  415eb9:	add    BYTE PTR [esi],ah
  415ebb:	(bad)  
  415ebc:	dec    DWORD PTR [edi+eax*2]
  415ebf:	int3   
  415ec0:	or     bh,bh
  415ec2:	int3   
  415ec3:	xchg   edi,eax
  415ec4:	cmp    eax,0xe3ff1400
  415ec9:	jmp    FWORD PTR [ebx-0x1]
  415ecc:	add    BYTE PTR [edx],dl
  415ece:	add    al,0x0
  415ed0:	or     DWORD PTR [eax],eax
  415ed2:	(bad)  
  415ed3:	fiadd  DWORD PTR [esi]
  415ed5:	int3   
  415ed6:	sub    al,BYTE PTR [eax]
  415ed8:	(bad)  
  415ed9:	int3   
  415eda:	ss add bh,bh
  415edd:	pop    edx
  415ede:	fdiv   st(7),st
  415ee0:	test   BYTE PTR [eax],0x0
  415ee3:	pushf  
  415ee4:	jbe    0x415ee5
  415ee6:	and    eax,0xa9001300
  415eeb:	add    bh,bh
  415eed:	test   DWORD PTR [ecx-0x7d],0xf600cc2f
  415ef4:	lahf   
  415ef5:	jmp    FWORD PTR [edx-0x1]
  415ef8:	push   edi
  415ef9:	call   esp
  415efb:	inc    DWORD PTR [ebx-0x18ff0c11]
  415f01:	(bad)  
  415f02:	(bad)  
  415f03:	mov    esp,0xff71831a
  415f08:	out    dx,al
  415f09:	push   DWORD PTR [edx]
  415f0b:	inc    DWORD PTR [eax]
  415f0d:	ja     0x415ed6
  415f0f:	int3   
  415f10:	sub    ecx,DWORD PTR [ecx+0xd21cff]
  415f16:	cmp    edi,0x25
  415f19:	(bad)  
  415f1a:	jnp    0x415f1b
  415f1c:	add    cl,bh
  415f1e:	(bad)  
  415f1f:	add    BYTE PTR [edx-0x77],bh
  415f22:	jmp    FWORD PTR [ecx-0x52334c]
  415f28:	adc    edi,edi
  415f2a:	nop
  415f2b:	int3   
  415f2c:	add    cl,ch
  415f2e:	pop    edi
  415f2f:	(bad)  
  415f30:	mov    esp,0x547f00ff
  415f35:	jmp    FWORD PTR [ebx-0x1]
  415f38:	mov    cl,0xff
  415f3a:	xor    al,0x0
  415f3c:	sub    DWORD PTR [esi-0x4e0080],0xffffffff
  415f43:	xchg   BYTE PTR [edi-0x1],dh
  415f46:	jle    0x415f47
  415f48:	mov    BYTE PTR [ebx+0x5783ff94],al
  415f4e:	into   
  415f4f:	add    ch,bl
  415f51:	(bad)  
  415f52:	inc    DWORD PTR [ebp*8+0x6c0012ff]
  415f59:	inc    DWORD PTR [ebx-0x4bb40100]
  415f5f:	int3   
  415f60:	pop    ds
  415f61:	(bad)  
  415f62:	jmp    DWORD PTR [esi-0x33e17c3f]
  415f68:	push   es
  415f69:	add    DWORD PTR [ebx],0x0
  415f6c:	int3   
  415f6d:	cmp    esp,DWORD PTR [esi]
  415f6f:	xor    DWORD PTR [esi+0x21fb8300],0xffffffff
  415f76:	fild   DWORD PTR [ebx-0x90ff4d]
  415f7c:	add    BYTE PTR [edx],bh
  415f7e:	jo     0x415f7f
  415f80:	sar    bh,1
  415f82:	add    BYTE PTR [ebx+eiz*4],dl
  415f85:	add    BYTE PTR [ecx-0x2576bc01],dl
  415f8b:	add    bh,bh
  415f8d:	xchg   ebx,eax
  415f8e:	sti    
  415f8f:	int3   
  415f90:	(bad)  
  415f91:	dec    esp
  415f93:	xchg   edi,eax
  415f94:	xor    bh,bh
  415f96:	pop    ebp
  415f97:	call   FWORD PTR [esi-0x1]
  415f9a:	push   ecx
  415f9b:	add    BYTE PTR [ebx-0x7c76b8c8],al
  415fa1:	inc    DWORD PTR [ebx+0x6889af9c]
  415fa7:	add    bl,bh
  415fa9:	call   DWORD PTR [ecx-0x5532007d]
  415faf:	jmp    FWORD PTR [ecx+0x1ca7ff00]
  415fb5:	add    BYTE PTR [ecx-0x1],dl
  415fb8:	stos   DWORD PTR es:[edi],eax
  415fb9:	jmp    FWORD PTR [edi-0x1]
  415fbc:	mov    DWORD PTR [ebp+0x1b8374],esp
  415fc2:	mov    DWORD PTR [ebp+0x76],ebp
  415fc5:	(bad)  
  415fc6:	jg     0x415fc7
  415fc8:	rol    BYTE PTR [eax],cl
  415fca:	arpl   di,di
  415fcc:	cmp    DWORD PTR [eax+0x15ffa6],0xffffffcc
  415fd3:	cs loope 0x415fd5
  415fd6:	pop    eax
  415fd7:	add    BYTE PTR ds:0xff89ef00,cl
  415fdd:	push   es
  415fde:	mov    edi,?
  415fe0:	aam    0x0
  415fe2:	add    BYTE PTR [ebp-0x1d],cl
  415fe5:	call   DWORD PTR [edx-0x1]
  415fe8:	test   BYTE PTR [eax],0x71
  415feb:	inc    DWORD PTR [eax]
  415fed:	add    WORD PTR [eax],0xff10
  415ff2:	int3   
  415ff3:	or     edi,DWORD PTR [ecx+ecx*4]
  415ff6:	lods   al,BYTE PTR ds:[esi]
  415ff7:	add    BYTE PTR [ebx+0x0],cl
  415ffa:	test   al,0xff
  415ffc:	adc    DWORD PTR [esi+0xf],0x0
  416000:	mov    edi,0x459783ff
  416005:	jmp    DWORD PTR [eax+eax*1-0x7c3b004c]
  41600c:	add    BYTE PTR [eax-0x7cb3ff7a],bh
  416012:	inc    DWORD PTR [edx+0x4f]
  416015:	call   FWORD PTR [edx+0x27002800]
  41601b:	dec    esp
  41601d:	xor    al,0x7e
  41601f:	add    BYTE PTR [eax],al
  416021:	inc    DWORD PTR [ebx-0x24002a3c]
  416027:	add    ah,dl
  416029:	inc    ebp
  41602b:	(bad)  
  41602c:	(bad)  
  41602d:	jmp    0x84325fb2
  416032:	call   ebp
  416034:	retf   0x8e00
  416037:	add    BYTE PTR [ecx-0x8801],ah
  41603d:	pop    esi
  41603e:	fmulp  st(4),st
  416040:	cmp    ecx,esp
  416042:	(bad)  
  416043:	jle    0x41607e
  416045:	int3   
  416046:	fild   WORD PTR [ebx-0x7c037cc5]
  41604c:	add    BYTE PTR [esi],dh
  41604e:	out    0xff,al
  416050:	jmp    0xff106054
  416055:	add    BYTE PTR [eax+eax*1+0x29ff39],cl
  41605c:	add    bh,bl
  41605e:	nop
  41605f:	inc    DWORD PTR [edx+0x0]
  416062:	add    dh,bl
  416064:	cmp    BYTE PTR [eax],al
  416066:	dec    esi
  416067:	(bad)  
  416068:	inc    DWORD PTR [eax]
  41606a:	fadd   QWORD PTR [eax]
  41606c:	int3   
  41606d:	test   eax,0xcc6fff5f
  416072:	call   DWORD PTR [ebx-0x76537c3a]
  416078:	cmp    ecx,esp
  41607a:	fld    DWORD PTR [eax]
  41607c:	inc    DWORD PTR [ebx]
  41607e:	loopne 0x41607f
  416080:	in     al,0x0
  416082:	(bad)  
  416083:	fild   WORD PTR [esi]
  416085:	mov    edx,edx
  416087:	jmp    eax
  416089:	inc    DWORD PTR [edx+0x39510000]
  41608f:	push   DWORD PTR [edi]
  416091:	cmp    edi,0xffffff8b
  416094:	xchg   esp,ecx
  416096:	sbb    DWORD PTR [ebx-0x16ff01],eax
  41609c:	cmp    ecx,0x3f
  41609f:	add    ah,bl
  4160a1:	int3   
  4160a2:	inc    DWORD PTR [ebx-0x55]
  4160a5:	call   FWORD PTR [edi-0x7d]
  4160a8:	into   
  4160a9:	inc    DWORD PTR [ecx+0x0]
  4160ac:	add    BYTE PTR [ebp-0x33340],ah
  4160b2:	jmp    FWORD PTR [eax+esi*4-0x1]
  4160b6:	adc    eax,DWORD PTR [eax]
  4160b8:	mov    cl,0x0
  4160ba:	dec    esi
  4160bb:	add    BYTE PTR [eax],al
  4160bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160be:	mov    ah,0x0
  4160c0:	xor    eax,0x359fff83
  4160c5:	int3   
  4160c6:	xchg   esi,eax
  4160c7:	or     eax,0xffffffcc
  4160ca:	mov    edx,0x7ecbff00
  4160cf:	push   DWORD PTR [edi+edi*8]
  4160d2:	(bad)  
  4160d3:	jg     0x4160be
  4160d5:	cmp    DWORD PTR [eax+0x0],0x1d
  4160d9:	dec    DWORD PTR [ecx-0x1]
  4160dc:	push   DWORD PTR [edi]
  4160de:	(bad)  
  4160e1:	add    bh,bh
  4160e3:	jmp    FWORD PTR [edi]
  4160e5:	add    BYTE PTR [edi+edi*8],al
  4160e8:	int    0x89
  4160ea:	cmp    eax,DWORD PTR [ebx-0x7c88097d]
  4160f0:	fild   DWORD PTR [eax]
  4160f2:	push   ebp
  4160f4:	inc    esi
  4160f5:	push   DWORD PTR [edi+0x0]
  4160f8:	gs int3 
  4160fa:	and    bh,bh
  4160fc:	add    BYTE PTR ds:0xff3c0071,al
  416102:	adc    esp,0x70
  416105:	add    BYTE PTR [edi-0x1],cl
  416108:	add    edi,edi
  41610a:	xchg   ecx,eax
  41610b:	mov    edi,edi
  41610d:	mov    dh,0xa
  41610f:	add    DWORD PTR [eax+eax*1-0xdf4201],0xffffffe0
  416117:	(bad)  
  416118:	jle    0x416119
  41611a:	hlt    
  41611b:	inc    DWORD PTR [eax]
  41611d:	push   esi
  41611e:	test   al,0xff
  416120:	pop    esi
  416121:	(bad)  
  416122:	push   DWORD PTR [edx-0x3c]
  416125:	add    BYTE PTR [ecx+0x0],dl
  416128:	mov    eax,ds:0xd2cc
  41612d:	je     0x4160d5
  41612f:	sub    DWORD PTR [ecx+0x137083ff],0x0
  416136:	cmp    edi,edi
  416138:	inc    ebp
  416139:	add    BYTE PTR ds:0x392600ff,cl
  41613f:	jmp    DWORD PTR [eax-0x4f740001]
  416145:	add    BYTE PTR [edx+0x0],cl
  416148:	daa    
  416149:	mov    DWORD PTR [eax-0x1],ecx
  41614c:	jmp    FWORD PTR [esi+ecx*8-0xb401]
  416153:	lods   al,BYTE PTR ds:[esi]
  416154:	cdq    
  416155:	call   FWORD PTR [edx-0x1]
  416158:	adc    bh,bh
  41615a:	dec    ebx
  41615b:	add    bh,bh
  41615d:	mov    dh,0x3
  41615f:	inc    ebp
  416161:	(bad)  
  416162:	jmp    DWORD PTR [edx-0x33c3ff3c]
  416168:	jno    0x416169
  41616a:	mov    dl,0x0
  41616c:	int3   
  41616d:	icebp  
  41616e:	dec    ebx
  41616f:	add    cl,ah
  416171:	add    DWORD PTR [ebx-0x7576ccc6],0xffffffff
  416178:	sub    al,0xff
  41617a:	or     ah,0xff
  41617d:	js     0x416118
  41617f:	add    dh,dh
  416181:	(bad)  
  416182:	dec    DWORD PTR [esi+0xfeff26]
  416188:	and    DWORD PTR [ebx-0x44007c9c],eax
  41618e:	dec    ebp
  41618f:	add    cl,dh
  416191:	add    bh,bh
  416193:	pop    es
  416194:	(bad)  
  416195:	jmp    FWORD PTR [ecx-0x2ff287d]
  41619b:	mov    DWORD PTR [ebx-0xca01],eax
  4161a1:	add    bh,bh
  4161a3:	mov    esi,0xff64ffd8
  4161a8:	xor    BYTE PTR [eax],al
  4161aa:	sub    eax,DWORD PTR [ebx-0x33bbd101]
  4161b0:	outs   dx,BYTE PTR ds:[esi]
  4161b1:	inc    DWORD PTR [eax]
  4161b3:	cdq    
  4161b4:	push   eax
  4161b5:	inc    ebx
  4161b7:	add    DWORD PTR [ebp-0xffab00],0xffffff82
  4161be:	inc    esp
  4161bf:	add    BYTE PTR [edi-0x1],dl
  4161c2:	jmp    FWORD PTR [ebx]
  4161c4:	cli    
  4161c5:	call   FWORD PTR [edx+0x44ff4aff]
  4161cb:	(bad)  
  4161cc:	dec    DWORD PTR [esi]
  4161ce:	aam    0xff
  4161d0:	add    eax,DWORD PTR [eax]
  4161d2:	add    ah,dh
  4161d4:	push   ebp
  4161d5:	add    BYTE PTR [edi-0x1],dl
  4161d8:	sbb    al,BYTE PTR [eax]
  4161da:	sar    bh,1
  4161dc:	xor    DWORD PTR [ebp-0x5f0023],0x0
  4161e3:	lea    esi,[eax]
  4161e5:	add    BYTE PTR [ebx+0x0],dl
  4161e8:	push   esi
  4161e9:	mov    DWORD PTR [ecx],esi
  4161eb:	cmp    edi,0x3c
  4161ee:	outs   dx,BYTE PTR ds:[esi]
  4161ef:	mov    DWORD PTR [ecx+0x1cbcc00],ebp
  4161f5:	jmp    esi
  4161f7:	add    BYTE PTR [eax-0x7c005d01],ah
  4161fd:	bound  ebp,QWORD PTR [eax-0x1]
  416200:	idiv   edi
  416202:	xor    DWORD PTR [esi+0x50],0x0
  416206:	pop    ds
  416207:	call   DWORD PTR [esi-0x33ffd201]
  41620d:	mov    cl,0xcc
  41620f:	inc    DWORD PTR [ecx-0x6edbff01]
  416215:	mov    edx,eax
  416217:	dec    DWORD PTR [edx]
  416219:	add    ch,ah
  41621b:	add    BYTE PTR [ecx-0x3e00244d],cl
  416221:	add    DWORD PTR [ebx+0x70890b17],0x0
  416228:	ret    
  416229:	int3   
  41622a:	mov    DWORD PTR [ebx-0x33d0ae01],0x9bff8369
  416234:	rol    BYTE PTR [ebx-0x387cbf],0xdb
  41623b:	inc    DWORD PTR [ebx+0x1fff069c]
  416241:	add    BYTE PTR [eax],al
  416243:	test   dl,al
  416245:	inc    DWORD PTR [edi-0x1]
  416248:	rol    BYTE PTR [eax],cl
  41624a:	retf   0x83ff
  41624d:	shl    DWORD PTR [ebp+0x0],1
  416250:	xlat   BYTE PTR ds:[ebx]
  416251:	(bad)  
  416252:	(bad)  
  416253:	inc    DWORD PTR [eax]
  416255:	mov    edx,ebx
  416257:	call   FWORD PTR [eax+eax*1]
  41625a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625b:	(bad)  
  41625c:	push   eax
  41625e:	jae    0x41625f
  416260:	mov    bh,0x0
  416262:	add    BYTE PTR [edi],dh
  416264:	adc    bh,bh
  416266:	push   ebx
  416267:	add    BYTE PTR ds:0x890683,al
  41626d:	inc    ecx
  41626e:	add    eax,0xffffacff
  416273:	aaa    
  416274:	inc    esi
  416275:	add    BYTE PTR [esi-0x1],bh
  416278:	cmp    edi,0x8300ff45
  41627e:	push   cs
  41627f:	and    DWORD PTR [edi],0xffffffff
  416282:	and    ecx,0xffffffeb
  416285:	jmp    FWORD PTR [esi-0x6affbc00]
  41628b:	add    BYTE PTR [ecx+0x60ff3174],cl
  416291:	int3   
  416292:	inc    DWORD PTR [esp+edi*4+0x3fff54ff]
  416299:	jmp    FWORD PTR [eax+0x0]
  41629c:	add    bh,bh
  41629e:	push   ebx
  41629f:	(bad)  
  4162a0:	jge    0x4162a1
  4162a2:	(bad)  
  4162a3:	in     al,dx
  4162a4:	inc    DWORD PTR fs:[edx+0x8005000]
  4162ab:	add    bh,bh
  4162ad:	inc    ebx
  4162ae:	in     al,dx
  4162af:	add    BYTE PTR [ebp+0x0],ch
  4162b2:	call   DWORD PTR [ebx-0x16]
  4162b5:	jmp    DWORD PTR [ebx-0x1]
  4162b8:	xchg   ebx,eax
  4162b9:	adc    DWORD PTR [edi+edi*8],0xffffffff
  4162bd:	iret   
  4162be:	popa   
  4162bf:	jmp    esi
  4162c1:	inc    DWORD PTR [eax]
  4162c3:	push   0xffa80075
  4162c8:	adc    al,0xff
  4162ca:	clc    
  4162cb:	mov    edi,edi
  4162cd:	dec    edx
  4162ce:	lock (bad) 
  4162d0:	mov    ecx,0xb49e0000
  4162d5:	add    BYTE PTR [edx-0x77],al
  4162d8:	mov    edi,edi
  4162da:	xor    al,BYTE PTR [ebx+0x216cff]
  4162e0:	sub    eax,0x25c58389
  4162e5:	int3   
  4162e6:	push   es
  4162e7:	add    BYTE PTR [eax+eax*1],bh
  4162ea:	xor    eax,0xcf25ffff
  4162ef:	(bad)  
  4162f0:	fld    DWORD PTR [ebx-0x7cfd1001]
  4162f6:	inc    DWORD PTR [eax]
  4162f8:	mov    edi,edi
  4162fa:	mov    ch,0x0
  4162fc:	add    ebx,0xffffffb9
  4162ff:	add    BYTE PTR [edi+edi*8-0x34],ch
  416303:	inc    esp
  416304:	jae    0x416306
  416306:	and    bh,bh
  416308:	scas   al,BYTE PTR es:[edi]
  416309:	jmp    FWORD PTR [ebx-0x7d]
  41630c:	add    BYTE PTR [esi-0x3a],cl
  41630f:	jmp    FWORD PTR [ebx+0x0]
  416312:	jmp    ebp
  416314:	rol    BYTE PTR [eax],1
  416316:	fild   WORD PTR [eax]
  416318:	jno    0x41631a
  41631a:	aaa    
  41631b:	mov    esp,ecx
  41631d:	mov    BYTE PTR ds:0xffff1cff,dl
  416323:	inc    edi
  416324:	lods   al,BYTE PTR ds:[esi]
  416325:	add    BYTE PTR [edi-0x7d],ch
  416328:	push   edx
  416329:	(bad)  
  41632a:	stc    
  41632b:	add    BYTE PTR [eax],al
  41632d:	stc    
  41632e:	push   0x89ffd100
  416333:	cld    
  416334:	call   DWORD PTR es:[ebx+eax*4]
  416338:	sbb    bh,bh
  41633a:	xor    al,0x0
  41633c:	sub    esp,0xa
  41633f:	dec    DWORD PTR ds:0x6e728900
  416345:	inc    DWORD PTR [edi+edi*8+0x13]
  416349:	call   FWORD PTR [eax+eax*1]
  41634c:	dec    DWORD PTR [edi]
  41634e:	mov    cl,0xff
  416350:	cmc    
  416351:	add    BYTE PTR [eax],al
  416353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416354:	cmp    eax,0x7bff80ff
  416359:	add    BYTE PTR [esi-0x2eba0000],dl
  41635f:	add    BYTE PTR [eax-0x1],bl
  416362:	mov    ebx,eax
  416364:	outs   dx,DWORD PTR ds:[esi]
  416365:	add    BYTE PTR [esi],dl
  416367:	inc    DWORD PTR [eax-0x7d]
  41636a:	aad    0xff
  41636c:	inc    DWORD PTR [ebp-0x2]
  41636f:	and    edi,0xffffffcc
  416372:	adc    DWORD PTR [esi],0x46
  416375:	xor    DWORD PTR ds:0x3589c9ff,0xffffffff
  41637c:	mov    DWORD PTR [edx],eax
  41637e:	xor    eax,DWORD PTR [eax]
  416380:	sbb    eax,0xce2eff00
  416385:	inc    DWORD PTR [ecx]
  416387:	mov    DWORD PTR [ebp+0x0],esi
  41638a:	sub    DWORD PTR [eax],eax
  41638c:	push   ecx
  41638e:	pop    esp
  41638f:	call   DWORD PTR [esi]
  416391:	add    DWORD PTR [ebx+0x33003482],0xffffffff
  416398:	inc    eax
  416399:	add    bl,ah
  41639b:	(bad)  
  41639c:	push   DWORD PTR [ecx+ebp*8-0x7f00ff01]
  4163a3:	adc    DWORD PTR [esi+0x0],0x25
  4163a7:	call   FWORD PTR [ecx+0x1aff8483]
  4163ad:	jmp    DWORD PTR [eax]
  4163af:	scas   eax,DWORD PTR es:[edi]
  4163b0:	add    bh,bh
  4163b2:	sar    edi,0xae
  4163b5:	call   FWORD PTR ds:0x26fff5cc
  4163bb:	call   FWORD PTR [ecx-0x77]
  4163be:	xlat   BYTE PTR ds:[ebx]
  4163bf:	fcos   
  4163c1:	mov    DWORD PTR [edi+edi*8+0x1eff56],ebp
  4163c8:	jo     0x41634d
  4163ca:	enter  0x16ff,0xff
  4163ce:	cmp    eax,0xc1ff00bb
  4163d3:	inc    edx
  4163d5:	jmp    DWORD PTR [edi+0x1eff51ff]
  4163db:	add    BYTE PTR [eax],ch
  4163dd:	add    BYTE PTR [edi+0x72ff000b],dl
  4163e3:	add    BYTE PTR [esi+0x0],ch
  4163e6:	inc    edx
  4163e7:	adc    DWORD PTR [edx+0x3c00c000],0xffffffff
  4163ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ef:	sbb    al,BYTE PTR [eax]
  4163f1:	add    BYTE PTR [ecx-0x1],cl
  4163f4:	cdq    
  4163f5:	(bad)  
  4163f6:	std    
  4163f7:	push   DWORD PTR [ecx]
  4163f9:	add    ah,bh
  4163fb:	(bad)  
  4163fc:	jge    0x4163ca
  4163fe:	pusha  
  4163ff:	loopne 0x416400
  416401:	add    BYTE PTR [edx-0x6476f101],cl
  416407:	add    BYTE PTR [edi-0x7d],bl
  41640a:	retf   
  41640b:	inc    eax
  41640d:	inc    DWORD PTR [edx+0x24]
  416410:	(bad)  
  416411:	push   DWORD PTR [esi]
  416413:	push   DWORD PTR [ebp+0x550043ff]
  416419:	sub    ecx,0x0
  41641c:	sub    bh,bh
  41641e:	ja     0x41640c
  416420:	int3   
  416421:	inc    DWORD PTR [edi-0x1]
  416424:	inc    edx
  416425:	(bad)  
  416426:	(bad)  
  416428:	test   BYTE PTR [ebx-0xc9ffb4],al
  41642e:	out    0x76,eax
  416430:	inc    DWORD PTR [ebx-0x900a9]
  416436:	inc    esp
  416437:	add    al,cl
  416439:	call   DWORD PTR [edi+edi*8]
  41643c:	sar    edi,cl
  41643e:	test   dh,dh
  416440:	add    BYTE PTR [eax],al
  416442:	add    eax,0x500bfff
  416447:	inc    DWORD PTR [edi+edi*8+0xf9ff8c]
  41644e:	and    eax,0xe283ff24
  416453:	inc    edi
  416455:	push   DWORD PTR [edi-0x1]
  416458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416459:	call   FWORD PTR [ebp-0x34ffaf00]
  41645f:	aas    
  416460:	add    bh,bh
  416462:	push   ecx
  416463:	int3   
  416464:	inc    esp
  416465:	mov    DWORD PTR [edx+0x5cff2bff],eax
  41646b:	call   FWORD PTR [ecx-0x34]
  41646e:	stos   BYTE PTR es:[edi],al
  41646f:	jecxz  0x4163f4
  416471:	add    BYTE PTR [ebx+0x42004e89],al
  416477:	(bad)  
  416478:	std    
  416479:	sbb    edx,0xffffffff
  41647c:	sbb    eax,0xcc1671ff
  416481:	add    BYTE PTR ds:0x483ff00,al
  416487:	(bad)  
  416488:	cmp    eax,0xc8ff4eff
  41648d:	xor    esi,0xffffffc1
  416490:	(bad)  
  416491:	dec    DWORD PTR [esi-0x6a331c34]
  416497:	jmp    FWORD PTR [ebx-0x1]
  41649a:	jo     0x41641f
  41649c:	scas   al,BYTE PTR es:[edi]
  41649d:	int3   
  41649e:	and    bl,bl
  4164a0:	dec    DWORD PTR [ecx+0x4bff06]
  4164a6:	xchg   esp,ecx
  4164a8:	das    
  4164a9:	(bad)  
  4164aa:	mov    esi,0x6affdcff
  4164af:	cld    
  4164b0:	(bad)  
  4164b1:	push   DWORD PTR [ecx-0x62ff4777]
  4164b7:	add    BYTE PTR [esi],ah
  4164b9:	inc    DWORD PTR [esi-0x34]
  4164bc:	nop
  4164bd:	add    BYTE PTR [ebp-0x5700002f],cl
  4164c3:	(bad)  
  4164c4:	jmp    0x4164c6
  4164c6:	mov    esi,0x55ff9483
  4164cb:	int3   
  4164cc:	adc    eax,DWORD PTR [eax]
  4164ce:	jecxz  0x416473
  4164d0:	(bad)  
  4164d1:	(bad)  
  4164d2:	fdivp  st(7),st
  4164d4:	jp     0x4164d6
  4164d6:	test   al,0xff
  4164d8:	ins    BYTE PTR es:[edi],dx
  4164d9:	add    al,cl
  4164db:	(bad)  
  4164dc:	call   0x1c5ee0
  4164e1:	add    cl,ch
  4164e3:	adc    DWORD PTR [ecx],0xffffffcc
  4164e6:	ins    DWORD PTR es:[edi],dx
  4164e7:	push   ecx
  4164e9:	(bad)  
  4164ea:	fdivr  st,st(7)
  4164ec:	sar    bh,1
  4164ee:	pop    ds
  4164ef:	pop    ds
  4164f0:	int3   
  4164f1:	dec    DWORD PTR [edx+0x1d00b989]
  4164f7:	add    BYTE PTR [edx+0x4989fd00],bh
  4164fd:	jmp    FWORD PTR [esi+0x16ff83c2]
  416503:	add    BYTE PTR [edx-0x1],dh
  416506:	inc    esi
  416507:	add    BYTE PTR [ecx],bh
  416509:	add    bh,ch
  41650b:	push   ebp
  41650d:	call   FWORD PTR [edi-0x4300769d]
  416513:	mov    DWORD PTR [ecx],eax
  416515:	and    DWORD PTR [edx-0x2ff2e01],0x0
  41651c:	or     edi,edi
  41651e:	fild   DWORD PTR [bp+di-0x6001]
  416523:	inc    DWORD PTR [esi-0x7d]
  416526:	dec    esp
  416527:	add    BYTE PTR [esi-0x4676a07d],al
  41652d:	(bad)  
  41652e:	cld    
  41652f:	jb     0x416530
  416531:	call   ebp
  416533:	(bad)  
  416534:	clc    
  416535:	add    BYTE PTR [edx],cl
  416537:	or     edx,0x0
  41653a:	loop   0x41653b
  41653c:	adc    eax,0xff315eff
  416541:	sbb    DWORD PTR [eax],0xffffff89
  416544:	fiadd  DWORD PTR [eax]
  416546:	mov    esi,0x29830e89
  41654b:	inc    esi
  41654d:	add    BYTE PTR [ebx],bh
  41654f:	repnz inc DWORD PTR [eax]
  416552:	inc    ebp
  416553:	jmp    FWORD PTR [edi+edi*8]
  416556:	aad    0xff
  416558:	pop    esi
  416559:	inc    esi
  41655b:	int3   
  41655c:	cmp    edi,0x68f4
  416562:	dec    edx
  416563:	add    BYTE PTR [edx+0x28ff5e83],ch
  416569:	(bad)  
  41656a:	sti    
  41656b:	add    DWORD PTR [edi+edi*8-0x1e],0xffffffe9
  416570:	mov    DWORD PTR [eax],eax
  416572:	std    
  416573:	add    BYTE PTR [edi+edi*8+0x8fff23],bh
  41657a:	das    
  41657b:	add    BYTE PTR [esi-0xaff000],bh
  416581:	add    BYTE PTR [edi+edi*8],al
  416584:	test   eax,0x63ff40ff
  416589:	int3   
  41658a:	add    edi,edi
  41658c:	pop    DWORD PTR [eax]
  41658e:	ins    DWORD PTR es:[edi],dx
  41658f:	(bad)  
  416591:	add    dl,bl
  416593:	add    BYTE PTR [esi],cl
  416595:	(bad)  
  416596:	js     0x416597
  416598:	adc    al,0x0
  41659a:	cmp    eax,0xf7ffb4ff
  41659f:	push   edx
  4165a0:	inc    DWORD PTR [eax]
  4165a2:	sbb    bh,bh
  4165a4:	jmp    0x2600:0x3bff2b00
  4165ab:	add    BYTE PTR [edx+0xd1e700],ah
  4165b1:	inc    DWORD PTR [esi-0x1]
  4165b4:	mov    edi,edi
  4165b6:	add    esp,ecx
  4165b8:	jmp    0xc340cebc
  4165bd:	add    BYTE PTR [eax-0x51000091],ch
  4165c3:	add    bh,bl
  4165c5:	dec    DWORD PTR [esi-0x1]
  4165c8:	cmp    eax,0x7eff9d00
  4165cd:	add    BYTE PTR [edi-0x3007cc3],ch
  4165d3:	int3   
  4165d4:	(bad)  
  4165d6:	add    DWORD PTR [eax],0xffffffc5
  4165d9:	jmp    FWORD PTR [ecx-0x1100a501]
  4165df:	adc    al,0xff
  4165e1:	add    BYTE PTR [edx-0x7d],al
  4165e4:	or     BYTE PTR [ebx+0xc0001e],al
  4165ea:	inc    edi
  4165eb:	int3   
  4165ec:	xchg   ecx,eax
  4165ed:	cmp    ebx,0x72
  4165f0:	(bad)  
  4165f1:	push   DWORD PTR [ebp-0x1]
  4165f4:	fwait
  4165f5:	call   FWORD PTR [ebp-0x7d]
  4165f8:	icebp  
  4165f9:	jmp    DWORD PTR [ebp-0x5b7c9a34]
  4165ff:	sbb    eax,0x830bcc00
  416604:	lahf   
  416605:	add    BYTE PTR [ebx-0x1],dh
  416608:	daa    
  416609:	add    BYTE PTR [esi+0x56ffff00],dl
  41660f:	cmp    edi,edi
  416611:	add    dh,bh
  416613:	xor    DWORD PTR [ecx+0x12ffe3ff],0xffffff83
  41661a:	mov    esp,0xb6ff9700
  41661f:	sub    ecx,esp
  416621:	jmp    DWORD PTR [edi]
  416623:	dec    DWORD PTR [ecx]
  416625:	push   DWORD PTR [ecx+0x0]
  416628:	loope  0x4165ad
  41662a:	mov    bl,0xff
  41662c:	jb     0x4165b1
  41662e:	cmp    edi,edi
  416630:	add    bh,bh
  416632:	pop    ecx
  416633:	push   DWORD PTR [edi+0x47006683]
  416639:	push   DWORD PTR [ebx+0x5b83d883]
  41663f:	add    bh,bh
  416641:	jmp    FWORD PTR [edi]
  416643:	(bad)  
  416644:	jns    0x416645
  416646:	retf   0x8789
  416649:	add    BYTE PTR [eax-0x73fffe00],dl
  41664f:	hlt    
  416650:	add    BYTE PTR [ebx-0x7ca8ff70],al
  416656:	jmp    DWORD PTR cs:[ecx+0x5c00cd00]
  41665d:	add    BYTE PTR [ebx+0x50],bl
  416660:	(bad)  
  416661:	call   FWORD PTR [edx-0x1]
  416664:	out    dx,eax
  416665:	int3   
  416666:	add    BYTE PTR ss:[eax-0x34],ch
  41666a:	jbe    0x41666b
  41666c:	jle    0x41666e
  41666e:	ss dec edx
  416670:	dec    DWORD PTR [ecx+0x7aff38]
  416676:	ja     0x416677
  416678:	ins    DWORD PTR es:[edi],dx
  416679:	inc    DWORD PTR [ebx]
  41667b:	add    dl,al
  41667d:	add    BYTE PTR [eax+ebx*2-0xa1007d],bh
  416684:	xor    al,0xff
  416686:	jmp    DWORD PTR [bx+di+0x6eff]
  41668b:	and    DWORD PTR [eax-0x7d],0x4d
  41668f:	loop   0x416690
  416691:	jmp    DWORD PTR [edx-0x1]
  416694:	aas    
  416695:	push   DWORD PTR [eax+0x0]
  416698:	add    BYTE PTR es:[ebx-0x1],cl
  41669c:	aaa    
  41669d:	int3   
  41669e:	mov    dh,0x4
  4166a0:	add    BYTE PTR [eax],al
  4166a2:	push   ebp
  4166a3:	jmp    DWORD PTR [ebx]
  4166a5:	add    BYTE PTR [eax+eax*1],bl
  4166a8:	das    
  4166a9:	push   DWORD PTR [ecx-0x1]
  4166ac:	and    eax,0xff3624cc
  4166b1:	add    ch,cl
  4166b3:	add    BYTE PTR [ebx-0x2b006c34],bh
  4166b9:	add    BYTE PTR [eax-0x7d],bl
  4166bc:	mov    edx,0x9e77cc
  4166c1:	or     DWORD PTR [ecx],0xffffffff
  4166c4:	fild   WORD PTR [eax]
  4166c6:	or     bh,bh
  4166c8:	das    
  4166c9:	jmp    esi
  4166cb:	jmp    FWORD PTR [ebp-0x127801]
  4166d1:	or     DWORD PTR [ebx+eax*4],0xffffffe9
  4166d5:	add    BYTE PTR [ecx-0x24006d01],al
  4166db:	int3   
  4166dc:	jecxz  0x4166dd
  4166de:	ins    DWORD PTR es:[edi],dx
  4166df:	pusha  
  4166e0:	cmp    edi,0x31
  4166e3:	jmp    esp
  4166e5:	add    BYTE PTR [esi-0x1],bh
  4166e8:	jnp    0x4166ea
  4166ea:	xchg   edi,edi
  4166ec:	mov    ds:0xffdd70cc,eax
  4166f1:	add    DWORD PTR [ecx-0x1],0xffffff9a
  4166f5:	int3   
  4166f6:	add    eax,0x21ffd2cc
  4166fb:	add    dl,ah
  4166fd:	jmp    FWORD PTR [eax]
  4166ff:	jnp    0x416684
  416701:	and    DWORD PTR [edx+0x72ff31cc],0x0
  416708:	test   DWORD PTR [ebx-0x3346ff2f],0xff9e50
  416712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416713:	int3   
  416714:	push   es
  416715:	mov    DWORD PTR [eax+0x0],edx
  416718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416719:	add    BYTE PTR [edx-0x1400b300],bh
  41671f:	mov    eax,ds:0x89ec0000
  416724:	cmp    al,0x89
  416726:	int    0xff
  416728:	leave  
  416729:	adc    DWORD PTR [esi-0x77],0x11
  41672d:	int3   
  41672e:	mov    ch,0xb9
  416730:	inc    DWORD PTR [ebx-0xf80035]
  416736:	int3   
  416737:	push   DWORD PTR [edx-0x7d]
  41673a:	out    dx,al
  41673b:	dec    DWORD PTR [ebp+0x0]
  41673e:	push   eax
  41673f:	rol    BYTE PTR [ebx-0x18003200],cl
  416745:	sbb    ebp,0xffffffff
  416748:	outs   dx,BYTE PTR ds:[esi]
  416749:	add    BYTE PTR [ebx+0x6c838100],dl
  41674f:	retf   
  416750:	cmp    edi,0x40
  416753:	call   FWORD PTR [ebp+0x79833b00]
  416759:	add    dl,dl
  41675b:	jmp    FWORD PTR [edi+edi*8-0xff17ab]
  416762:	mov    ch,0xff
  416764:	pop    eax
  416765:	call   DWORD PTR [ecx-0x50007134]
  41676b:	push   edi
  41676d:	add    BYTE PTR [ebp-0x1b],ah
  416770:	add    bh,bh
  416772:	data16 add BYTE PTR [ebp-0x77],al
  416776:	fwait
  416777:	jmp    DWORD PTR [edx+0x0]
  41677a:	lods   eax,DWORD PTR ds:[esi]
  41677b:	int3   
  41677c:	pop    DWORD PTR [eax]
  41677e:	(bad)  
  416780:	int3   
  416781:	add    BYTE PTR [eax],ch
  416783:	add    dl,bl
  416785:	add    BYTE PTR [esi-0x79001801],cl
  41678b:	add    DWORD PTR [esi],0xffffff89
  41678e:	stc    
  41678f:	and    edi,edi
  416791:	inc    edx
  416793:	add    BYTE PTR [edi],bh
  416795:	dec    DWORD PTR [ebx-0x7d]
  416798:	xor    BYTE PTR [eax],al
  41679a:	leave  
  41679b:	add    BYTE PTR ds:0x893ac4ff,al
  4167a1:	add    BYTE PTR [eax-0xff9c00],dl
  4167a7:	add    dl,dh
  4167a9:	call   eax
  4167ab:	add    bh,bl
  4167ad:	add    BYTE PTR ds:0x8008303,bh
  4167b3:	call   FWORD PTR [edi+edi*8-0x7d]
  4167b7:	sub    DWORD PTR [eax-0x1],0xffffffcf
  4167bb:	push   DWORD PTR [ebx-0x1]
  4167be:	xor    bl,cl
  4167c0:	add    DWORD PTR [eax],0xffffffca
  4167c3:	mov    DWORD PTR [edx+0x0],ecx
  4167c6:	jmp    0x4167c8
  4167c8:	enter  0x63ff,0x83
  4167cc:	call   0x288ad1
  4167d1:	(bad)  
  4167d2:	cmp    edi,edi
  4167d4:	mov    eax,0x418956ff
  4167d9:	call   FWORD PTR [ebp-0x52ff6a01]
  4167df:	dec    ecx
  4167e0:	inc    DWORD PTR [eax]
  4167e2:	or     edi,edi
  4167e4:	xlat   BYTE PTR ds:[ebx]
  4167e5:	mov    DWORD PTR [edx],ebp
  4167e7:	jmp    DWORD PTR [edi+edi*8-0xefffb6]
  4167ee:	add    ah,bl
  4167f0:	(bad)  
  4167f1:	dec    DWORD PTR [edi-0x34]
  4167f4:	sti    
  4167f5:	int3   
  4167f6:	in     eax,dx
  4167f7:	add    BYTE PTR [eax],dh
  4167f9:	add    BYTE PTR [edi-0x3c761e01],bh
  4167ff:	and    al,0x83
  416801:	(bad)  
  416802:	jmp    0x4ccc:0x74ff5c00
  416809:	add    dl,bl
  41680b:	dec    DWORD PTR [esi]
  41680d:	adc    DWORD PTR [ebp-0x42ff33fc],0xffffffff
  416814:	mov    eax,ds:0x6fff0300
  416819:	int3   
  41681a:	cmp    edi,0xffffffb5
  41681d:	add    BYTE PTR [eax+0x350083ae],al
  416823:	push   DWORD PTR [eax-0x7d002c01]
  416829:	add    BYTE PTR [edi+edi*8-0x11],al
  41682d:	adc    DWORD PTR [eax],0x5
  416830:	inc    DWORD PTR [ebx-0x3e00d8]
  416836:	or     bh,bh
  416838:	or     edi,edi
  41683a:	mov    edx,0x6dffd283
  41683f:	jg     0x416841
  416841:	int3   
  416842:	test   eax,0x13833a89
  416847:	add    BYTE PTR ds:0xb1ff5aff,bl
  41684d:	push   DWORD PTR [edi]
  41684f:	jne    0x416851
  416851:	call   DWORD PTR [ecx+0x12ff84cc]
  416857:	add    BYTE PTR [eax-0x40002c01],ch
  41685d:	add    BYTE PTR [ebx],bl
  41685f:	scas   al,BYTE PTR es:[edi]
  416860:	(bad)  
  416861:	push   edx
  416863:	xor    DWORD PTR [ebx+0x62ff7700],0xffffff89
  41686a:	cli    
  41686b:	add    al,ah
  41686d:	call   DWORD PTR [esi-0x64ff004a]
  416873:	call   DWORD PTR [ebp+0x11ff8600]
  416879:	add    BYTE PTR [edi],bh
  41687b:	add    BYTE PTR [ecx],bl
  41687d:	call   DWORD PTR [edi-0x41ff7630]
  416883:	inc    DWORD PTR [ecx-0x34]
  416886:	jle    0x416811
  416888:	ins    BYTE PTR es:[edi],dx
  416889:	(bad)  
  41688a:	cmp    al,0xff
  41688c:	add    edi,edi
  41688e:	nop
  41688f:	or     eax,0xd20000
  416894:	into   
  416895:	mov    DWORD PTR [edi+0x2f000800],edi
  41689b:	xor    DWORD PTR [edi+0x0],0x56
  41689f:	in     al,dx
  4168a0:	(bad)  
  4168a1:	call   FWORD PTR [ebx-0x1]
  4168a4:	mov    edx,0x64895dff
  4168a9:	dec    eax
  4168ab:	call   esp
  4168ad:	(bad)  
  4168ae:	sti    
  4168af:	jecxz  0x41687d
  4168b1:	(bad)  
  4168b2:	out    dx,al
  4168b3:	push   edi
  4168b5:	add    BYTE PTR [edi],dl
  4168b7:	(bad)  
  4168b8:	jmp    0x416886
  4168ba:	inc    edx
  4168bb:	call   esi
  4168bd:	call   DWORD PTR [esi]
  4168bf:	inc    ebx
  4168c0:	(bad)  
  4168c1:	jmp    DWORD PTR [ebx]
  4168c3:	add    BYTE PTR [esi-0x1],ah
  4168c6:	test   esp,ecx
  4168c8:	repz add BYTE PTR [edi-0x7d],ah
  4168cc:	xchg   ebx,eax
  4168cd:	add    BYTE PTR [edx+0x6e00007c],ah
  4168d3:	int3   
  4168d4:	outs   dx,DWORD PTR ds:[esi]
  4168d5:	add    BYTE PTR [ebp-0x1],bh
  4168d8:	mov    ecx,0x7389ae00
  4168dd:	inc    DWORD PTR [edx]
  4168df:	sbb    bh,bh
  4168e1:	jmp    DWORD PTR [ebx]
  4168e3:	jmp    DWORD PTR [edi+0x55890b89]
  4168e9:	add    cl,ch
  4168eb:	dec    DWORD PTR [esi]
  4168ed:	add    BYTE PTR [ebp+0x6b],ah
  4168f0:	(bad)  
  4168f1:	push   DWORD PTR [edx-0x77]
  4168f4:	ss int3 
  4168f6:	cmp    al,BYTE PTR [eax]
  4168f8:	add    eax,DWORD PTR [eax]
  4168fa:	xor    al,BYTE PTR [eax]
  4168fc:	in     al,dx
  4168fd:	int3   
  4168fe:	in     eax,dx
  4168ff:	(bad)  
  416901:	add    BYTE PTR [edx-0xa7c0400],ah
  416907:	push   DWORD PTR [esi-0x587cdb00]
  41690d:	add    BYTE PTR [esp+eiz*8-0x1],dh
  416911:	or     DWORD PTR [esi-0x77],0xc
  416915:	inc    DWORD PTR [ebp-0x1]
  416918:	xchg   BYTE PTR [eax],al
  41691a:	(bad)  
  41691b:	int3   
  41691c:	ret    0xabff
  41691f:	aad    0x0
  416921:	adc    DWORD PTR [esi-0x1],0x2c
  416925:	add    al,al
  416927:	dec    DWORD PTR [edi+0x1d00f1ff]
  41692d:	add    BYTE PTR [eax-0x54],dl
  416930:	dec    DWORD PTR [ecx+0xc00c1]
  416936:	nop
  416937:	jmp    edi
  416939:	xor    DWORD PTR ds:0x4accdf00,0xffffffc5
  416940:	add    DWORD PTR [ebx+0x2d0045],0xffffffcb
  416947:	add    BYTE PTR [eax+eax*1],dl
  41694a:	mov    esi,0x9e0065ff
  41694f:	ret    
  416950:	cmp    edi,0xffffffb9
  416953:	call   DWORD PTR [eax]
  416955:	add    ch,bl
  416957:	add    BYTE PTR [edx-0x1],cl
  41695a:	call   0xbe41f25f
  41695f:	mov    al,0xff
  416961:	call   DWORD PTR [ebx]
  416963:	jmp    DWORD PTR [edi+edi*8-0x2a7614]
  41696a:	push   ebp
  41696b:	int3   
  41696c:	inc    ecx
  41696d:	add    ah,dh
  41696f:	aam    0x83
  416971:	add    BYTE PTR [esi],bl
  416973:	mov    DWORD PTR [edi+edi*8-0x2f],esi
  416977:	xor    DWORD PTR [ecx-0x1],0x65
  41697b:	and    DWORD PTR [ebp-0xa61300],0xffffffff
  416982:	(bad)  
  416983:	jmp    FWORD PTR [edx]
  416985:	add    BYTE PTR [ecx],bh
  416987:	inc    DWORD PTR [edi]
  416989:	cmp    DWORD PTR [edi+edi*8],0x44
  41698d:	sbb    DWORD PTR [edx+edi*8-0x34],0x0
  416992:	inc    ebx
  416993:	add    BYTE PTR [edi+0x0],cl
  416996:	mov    al,0x83
  416998:	or     eax,0x1589edcc
  41699d:	add    BYTE PTR [ebp-0x61],bh
  4169a0:	inc    DWORD PTR [eax]
  4169a2:	ins    BYTE PTR es:[edi],dx
  4169a3:	add    al,cl
  4169a5:	add    BYTE PTR [edi+edi*8-0x33ffdb],al
  4169ac:	les    eax,FWORD PTR [eax]
  4169ae:	dec    edi
  4169af:	mov    ds:0x8959ff83,eax
  4169b4:	jnp    0x4169b5
  4169b6:	ins    BYTE PTR es:[edi],dx
  4169b7:	int3   
  4169b8:	jns    0x4169ba
  4169ba:	inc    esi
  4169bb:	(bad)  
  4169bc:	(bad)  
  4169be:	ss sar edi,0xff
  4169c2:	cdq    
  4169c3:	add    BYTE PTR [edx],cl
  4169c5:	mov    DWORD PTR [edi+0x0],esi
  4169c8:	and    eax,0x9c006aff
  4169cd:	dec    eax
  4169cf:	pop    ss
  4169d0:	inc    DWORD PTR [eax]
  4169d2:	push   edi
  4169d3:	add    BYTE PTR [edx],ah
  4169d5:	xor    DWORD PTR [ebx-0x7ff9d00],0xffffffff
  4169dc:	and    edi,edi
  4169de:	fstp   TBYTE PTR [edi-0x7699ff01]
  4169e4:	cmp    eax,0x8eff05ff
  4169e9:	cmp    DWORD PTR [eax],0x0
  4169ec:	jg     0x416971
  4169ee:	mov    ebx,0xfff830c
  4169f3:	add    BYTE PTR [ebx+0x0],ch
  4169f6:	cld    
  4169f7:	add    DWORD PTR [edi-0x36ff3800],0xffffffcc
  4169fe:	jne    0x416a0e
  416a00:	(bad)  
  416a01:	dec    DWORD PTR [eax]
  416a03:	jmp    DWORD PTR [eax]
  416a05:	add    BYTE PTR [esi],bh
  416a07:	add    BYTE PTR [edx+0x3bff8583],dl
  416a0d:	add    al,ah
  416a0f:	stc    
  416a10:	int3   
  416a11:	adc    DWORD PTR [eax-0x1],0xffffffcd
  416a15:	jmp    FWORD PTR [edi]
  416a17:	and    DWORD PTR [ebp-0x1],0x7b
  416a1b:	(bad)  
  416a1c:	mov    edx,0xa35100
  416a21:	sbb    esi,0xffffffff
  416a24:	xchg   esp,eax
  416a25:	call   FWORD PTR [edi+edi*8+0x75]
  416a29:	add    dh,cl
  416a2b:	int3   
  416a2c:	dec    ebp
  416a2d:	call   FWORD PTR [edx]
  416a2f:	xor    eax,0xff318389
  416a34:	adc    edi,edi
  416a36:	aad    0xff
  416a38:	mov    esi,0x27cc2fff
  416a3d:	add    BYTE PTR [edx-0x35],bl
  416a40:	add    bh,bh
  416a42:	sub    al,BYTE PTR [eax]
  416a44:	or     eax,DWORD PTR [eax]
  416a46:	lods   eax,DWORD PTR ds:[esi]
  416a47:	jmp    ecx
  416a49:	sbb    DWORD PTR [ecx],0xffffffff
  416a4c:	outs   dx,DWORD PTR ds:[esi]
  416a4d:	inc    DWORD PTR [edi]
  416a4f:	(bad)  
  416a51:	add    bh,al
  416a53:	or     DWORD PTR [esi],0xffffffff
  416a56:	(bad)  
  416a57:	call   FWORD PTR ds:0x40ff25cc
  416a5d:	and    ebx,0x36
  416a60:	(bad)  
  416a61:	push   DWORD PTR [edi-0x1]
  416a64:	test   BYTE PTR [eax],al
  416a66:	push   edi
  416a67:	add    BYTE PTR [ebx+0x6800b7ff],ah
  416a6d:	add    al,cl
  416a6f:	xchg   edx,eax
  416a70:	(bad)  
  416a71:	jmp    DWORD PTR [ebx+0x0]
  416a74:	cli    
  416a75:	int3   
  416a76:	and    esp,ecx
  416a78:	popa   
  416a79:	push   edx
  416a7b:	add    BYTE PTR [eax-0x7d],dl
  416a7e:	inc    eax
  416a7f:	and    DWORD PTR [ebx+0x2000cf89],eax
  416a85:	inc    esp
  416a87:	cmp    esp,0xffffff89
  416a8a:	cmp    al,0xff
  416a8c:	sub    ah,cl
  416a8e:	xor    DWORD PTR [ebx-0x7d],esp
  416a91:	(bad)  
  416a92:	jmp    0x416a93
  416a94:	pop    esp
  416a95:	(bad)  
  416a96:	mov    edx,0x91003aff
  416a9b:	call   DWORD PTR [ebp-0x1]
  416a9e:	inc    ecx
  416a9f:	cmp    bh,0xff
  416aa2:	jae    0x416a2d
  416aa4:	inc    BYTE PTR [eax]
  416aa6:	cmc    
  416aa7:	add    al,al
  416aa9:	add    BYTE PTR [ebp-0x72761200],bh
  416aaf:	pusha  
  416ab0:	inc    DWORD PTR [eax]
  416ab2:	in     eax,0xff
  416ab4:	cmp    eax,DWORD PTR [eax]
  416ab6:	pop    es
  416ab7:	add    BYTE PTR [esi],ch
  416ab9:	int3   
  416aba:	in     al,0x0
  416abc:	in     eax,dx
  416abd:	jmp    DWORD PTR [edi]
  416abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac0:	add    DWORD PTR [eax],0xfffffffd
  416ac3:	add    BYTE PTR [ebp-0x1],ah
  416ac6:	inc    ebx
  416ac7:	adc    DWORD PTR [eax],0xffffffff
  416aca:	lods   al,BYTE PTR ds:[esi]
  416acb:	add    DWORD PTR [esi+0x0],0xffffffe6
  416acf:	js     0x416ad0
  416ad1:	add    BYTE PTR [ecx+0x0],ch
  416ad4:	inc    ecx
  416ad5:	add    DWORD PTR [ecx+0x2ecc99cc],0xffffffff
  416adc:	mov    esi,0xff88e589
  416ae1:	adc    DWORD PTR [eax],0xffffffff
  416ae4:	loop   0x416ae6
  416ae6:	jbe    0x416ae7
  416ae8:	pop    edi
  416ae9:	jmp    eax
  416aeb:	add    dh,dl
  416aed:	inc    DWORD PTR [eax+ebx*1+0x0]
  416af1:	int3   
  416af2:	mov    esi,0xbbff3583
  416af7:	xor    ebx,0xffffffff
  416afa:	xlat   BYTE PTR ds:[ebx]
  416afb:	add    BYTE PTR ds:0xffc2ff,dh
  416b01:	add    BYTE PTR [ecx-0x1],bl
  416b04:	in     al,0xff
  416b06:	sahf   
  416b07:	add    bh,dl
  416b09:	add    bh,cl
  416b0b:	int3   
  416b0c:	(bad)  
  416b0e:	sub    ebp,DWORD PTR [eax-0x34]
  416b11:	int3   
  416b12:	pop    ebx
  416b13:	sub    DWORD PTR [edx-0x1],0x17
  416b17:	call   FWORD PTR [esi+0x0]
  416b1a:	dec    edi
  416b1b:	mov    edx,ebp
  416b1d:	add    BYTE PTR [ebx],cl
  416b1f:	(bad)  
  416b20:	inc    DWORD PTR [eax]
  416b22:	daa    
  416b23:	int3   
  416b24:	pop    ebp
  416b25:	dec    esp
  416b27:	int3   
  416b28:	adc    ecx,esp
  416b2a:	pop    edx
  416b2b:	add    BYTE PTR [edi+0x0],al
  416b2e:	inc    esp
  416b2f:	jns    0x416b31
  416b31:	int3   
  416b32:	jno    0x416b33
  416b34:	push   ecx
  416b35:	dec    DWORD PTR [eax+eax*1]
  416b38:	jo     0x416b39
  416b3a:	push   edx
  416b3b:	add    BYTE PTR [ebp-0x3bbc7d],dl
  416b41:	call   FWORD PTR [eax]
  416b43:	jmp    FWORD PTR [edi+edi*8]
  416b46:	mov    ?,edi
  416b48:	sar    edi,cl
  416b4a:	pop    es
  416b4b:	add    BYTE PTR [esi+0x0],bh
  416b4e:	push   esi
  416b4f:	js     0x416ada
  416b51:	add    ch,dl
  416b53:	call   FWORD PTR [edi]
  416b55:	add    BYTE PTR [edi-0x1],al
  416b58:	mov    dh,0xcc
  416b5a:	inc    esi
  416b5b:	add    BYTE PTR [ebx-0x1],ah
  416b5e:	inc    esi
  416b5f:	xchg   ecx,eax
  416b60:	add    bh,bh
  416b62:	push   ebp
  416b63:	add    BYTE PTR ds:0x79ff75cc,dh
  416b69:	(bad)  
  416b6a:	cmp    eax,DWORD PTR [ebx+0x145f89e3]
  416b70:	inc    DWORD PTR [eax]
  416b72:	mov    eax,ds:0x60ff04ff
  416b77:	mov    ebp,eax
  416b79:	mov    edi,esp
  416b7b:	int3   
  416b7c:	in     eax,0xff
  416b7e:	(bad)  
  416b80:	(bad)  
  416b81:	push   eax
  416b83:	sub    ecx,0x0
  416b86:	enter  0x7d00,0xff
  416b8a:	push   cs
  416b8b:	add    BYTE PTR [edx-0x34],ch
  416b8e:	pop    ebp
  416b8f:	push   ss
  416b90:	(bad)  
  416b91:	call   ecx
  416b93:	call   FWORD PTR [edi]
  416b95:	add    BYTE PTR [ecx-0x1],bh
  416b98:	cli    
  416b99:	add    BYTE PTR [ebp+0x4c009bff],dl
  416b9f:	push   ss
  416ba0:	add    bh,bh
  416ba2:	pushf  
  416ba3:	add    BYTE PTR [edx],al
  416ba5:	and    DWORD PTR [edx+0x2d0091ff],0xffffffcc
  416bac:	sub    al,0x0
  416bae:	xor    ebp,esi
  416bb0:	inc    DWORD PTR [eax]
  416bb2:	or     al,0xff
  416bb4:	ins    DWORD PTR es:[edi],dx
  416bb5:	push   edi
  416bb7:	call   FWORD PTR [ebp-0x1]
  416bba:	ds mov ebx,ebp
  416bbd:	call   DWORD PTR [edi]
  416bbf:	mov    esp,ecx
  416bc1:	dec    DWORD PTR [ebx+0x5effe089]
  416bc7:	call   FWORD PTR [eax+0x24ff09cc]
  416bcd:	add    BYTE PTR [ebp+0x28],cl
  416bd0:	inc    DWORD PTR [eax]
  416bd2:	jo     0x416bd3
  416bd4:	push   esi
  416bd5:	(bad)  
  416bd6:	cmp    al,BYTE PTR [eax]
  416bd8:	pop    ebx
  416bd9:	add    BYTE PTR [ebp+0x0],ah
  416bdc:	fcos   
  416bde:	inc    edi
  416bdf:	hlt    
  416be0:	dec    DWORD PTR [ecx-0x7c317c08]
  416be6:	or     bh,bh
  416be8:	iret   
  416be9:	jmp    DWORD PTR [edi+edi*8+0x48]
  416bed:	call   FWORD PTR [eax]
  416bef:	mov    eax,DWORD PTR [eax]
  416bf1:	(bad)  
  416bf2:	std    
  416bf3:	sub    DWORD PTR ds:0xa2fff5ff,0xffffffff
  416bfa:	in     al,dx
  416bfb:	jmp    ebx
  416bfd:	mov    DWORD PTR [eax+0x710083f1],edi
  416c03:	push   DWORD PTR [edi-0x1]
  416c06:	jecxz  0x416c07
  416c08:	ud0    esi,edx
  416c0b:	add    BYTE PTR [ecx-0x77],ah
  416c0e:	lock cmp esp,ecx
  416c11:	add    BYTE PTR [edi+edi*8+0x1c],cl
  416c15:	sbb    DWORD PTR [esi],0x0
  416c18:	add    eax,0x3d0072ff
  416c1d:	(bad)  
  416c1e:	js     0x416bf1
  416c20:	add    bh,bh
  416c22:	fs int3 
  416c24:	ret    
  416c25:	inc    esi
  416c27:	(bad)  
  416c28:	mov    edx,0x5483ecff
  416c2d:	call   DWORD PTR [ebp+0xa00ffd4]
  416c33:	int3   
  416c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c35:	add    cl,cl
  416c37:	push   edi
  416c39:	(bad)  
  416c3a:	fdivp  st(7),st
  416c3c:	cmp    eax,0xffce9eff
  416c41:	call   DWORD PTR [ecx]
  416c43:	jmp    ecx
  416c45:	or     DWORD PTR [ecx-0x1],0xffffff90
  416c49:	mov    DWORD PTR [edx+0x5300c3cc],esi
  416c4f:	mov    al,0x89
  416c51:	add    BYTE PTR [edx-0x1],dh
  416c54:	cmp    edi,edi
  416c56:	and    ah,cl
  416c58:	out    dx,eax
  416c59:	jmp    FWORD PTR [edi]
  416c5b:	add    dh,bl
  416c5d:	jmp    FWORD PTR [edx-0x27]
  416c60:	int3   
  416c61:	jmp    DWORD PTR [ebx+0x0]
  416c64:	mov    eax,0xa800a083
  416c69:	cmp    esi,0x0
  416c6c:	cmp    eax,DWORD PTR [ebx+0x1438]
  416c72:	fxch   st(4)
  416c74:	add    al,BYTE PTR [eax]
  416c76:	mov    ebx,0xc2ffd083
  416c7b:	add    BYTE PTR [esi-0x392c01],bh
  416c81:	add    bh,dh
  416c83:	jmp    FWORD PTR [ebx+eax*4]
  416c86:	add    BYTE PTR gs:[edi],al
  416c89:	int3   
  416c8a:	add    eax,0xd100d689
  416c8f:	mov    bh,0x0
  416c91:	add    BYTE PTR [ebx],al
  416c93:	call   FWORD PTR [eax+0x4200cf00]
  416c99:	add    dl,ch
  416c9b:	inc    DWORD PTR [eax-0x657d00]
  416ca1:	add    BYTE PTR [esi-0x1],cl
  416ca4:	adc    edi,edi
  416ca6:	repnz add ebx,0x0
  416caa:	or     DWORD PTR [ebx+0x31a90066],eax
  416cb0:	add    BYTE PTR [ebx-0x6a00e4],al
  416cb6:	jne    0x416cb7
  416cb8:	rol    DWORD PTR [eax],cl
  416cba:	sbb    edi,edi
  416cbc:	and    edi,edi
  416cbe:	mov    BYTE PTR [esi-0x9a7c7d],al
  416cc4:	adc    bh,bh
  416cc6:	pop    ds
  416cc7:	xor    DWORD PTR [esi+0x78006e83],0xffffffff
  416cce:	jns    0x416c89
  416cd0:	(bad)  
  416cd1:	jmp    FWORD PTR [ebx+0x2afffb00]
  416cd7:	adc    DWORD PTR [edi],0xffffffff
  416cda:	sbb    edi,edi
  416cdc:	and    DWORD PTR [eax],eax
  416cde:	ds push es
  416ce0:	add    bh,bh
  416ce2:	mov    edi,?
  416ce4:	lds    eax,FWORD PTR [eax]
  416ce6:	xor    edi,edi
  416ce8:	pop    esi
  416ce9:	add    BYTE PTR [ecx-0x77],al
  416cec:	lds    eax,FWORD PTR [ebx-0x7c797c]
  416cf2:	pop    es
  416cf3:	add    BYTE PTR [eax+eax*1+0x3],dh
  416cf7:	add    BYTE PTR [ecx-0x48ffec7d],cl
  416cfd:	push   DWORD PTR [esi+0x7c]
  416d00:	cmp    edi,0xffffffa2
  416d03:	(bad)  
  416d04:	fld    QWORD PTR [eax]
  416d06:	pop    esi
  416d07:	call   FWORD PTR [esi]
  416d09:	add    BYTE PTR [ecx-0x1],bl
  416d0c:	fs inc esp
  416d0f:	mov    al,ds:0x89c3ccff
  416d14:	pop    DWORD PTR [eax]
  416d16:	inc    esi
  416d17:	jmp    FWORD PTR [edi+edi*8-0x50]
  416d1b:	call   DWORD PTR [edx]
  416d1d:	mov    DWORD PTR [edx-0x1d],edx
  416d20:	inc    DWORD PTR [ebx-0x334d00e9]
  416d26:	(bad)  
  416d27:	(bad)  
  416d28:	jle    0x416cf6
  416d2a:	int    0x83
  416d2c:	fiadd  WORD PTR [eax]
  416d2e:	test   BYTE PTR [edx+0x40083],cl
  416d34:	add    eax,0xaff7000
  416d39:	add    BYTE PTR [ecx-0x77],ah
  416d3c:	push   eax
  416d3d:	add    BYTE PTR [edx+ebx*4+0x0],dl
  416d41:	push   DWORD PTR [ebp-0x1]
  416d44:	push   esp
  416d45:	int3   
  416d46:	test   eax,0x75ff9f83
  416d4b:	add    ah,bh
  416d4d:	int3   
  416d4e:	and    al,0x6f
  416d50:	add    bh,bh
  416d52:	scas   eax,DWORD PTR es:[edi]
  416d53:	dec    DWORD PTR [ebx+0xaffbaff]
  416d59:	int3   
  416d5a:	jmp    0x5c41235e
  416d5f:	or     DWORD PTR [eax],eax
  416d61:	(bad)  
  416d62:	fild   WORD PTR [eax]
  416d64:	xor    bh,bh
  416d66:	xor    eax,0x52ffcf83
  416d6b:	xor    DWORD PTR [esi],0xffffffff
  416d6e:	(bad)  
  416d6f:	pop    esp
  416d70:	dec    esp
  416d72:	adc    al,0x83
  416d74:	dec    edx
  416d75:	call   DWORD PTR [eax]
  416d77:	add    DWORD PTR [eax-0x1],0x3c
  416d7b:	add    BYTE PTR [ebx-0x1ea101],al
  416d81:	adc    ebp,0x0
  416d84:	inc    ebp
  416d85:	jmp    DWORD PTR [ebp-0x1]
  416d88:	add    BYTE PTR es:[edi+edi*8-0x31500029],ch
  416d90:	(bad)  
  416d91:	call   DWORD PTR [edi+edi*8-0x11008a]
  416d98:	out    dx,eax
  416d99:	jmp    esi
  416d9b:	xor    DWORD PTR [ebp-0x7d],0xffffffd4
  416d9f:	enter  0xcc,0x96
  416da3:	add    bh,bl
  416da5:	int3   
  416da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da7:	add    BYTE PTR [eax],bh
  416da9:	dec    DWORD PTR ds:0x26cc2483
  416daf:	arpl   di,di
  416db1:	(bad)  
  416db2:	jmp    0x416db3
  416db4:	sub    al,0x0
  416db6:	pop    ecx
  416db7:	int3   
  416db8:	lods   al,BYTE PTR ds:[esi]
  416db9:	cmp    DWORD PTR [esi],0x0
  416dbc:	lods   al,BYTE PTR ds:[esi]
  416dbd:	mov    ebp,ebp
  416dbf:	mov    edi,?
  416dc1:	add    BYTE PTR [ecx-0x1],ch
  416dc4:	xchg   edi,eax
  416dc5:	add    BYTE PTR [eax+0x0],cl
  416dc8:	inc    eax
  416dc9:	(bad)  
  416dca:	cmp    edi,edi
  416dcc:	xchg   edx,eax
  416dcd:	xor    eax,0xffffff87
  416dd0:	add    bh,bh
  416dd2:	and    bh,bh
  416dd4:	(bad)  
  416dd5:	(bad)  
  416dd6:	mov    edi,0xf8ffb083
  416ddb:	int3   
  416ddc:	mov    ah,0x0
  416dde:	lahf   
  416ddf:	int    0xff
  416de1:	push   DWORD PTR [ebx+0x5683a100]
  416de7:	sub    DWORD PTR ds:0xb2ff9800,0x0
  416dee:	(bad)  
  416def:	mov    edi,0xff91cc00
  416df4:	imul   eax,DWORD PTR [ebx-0x7c600067],0x2f
  416dfb:	sub    ebx,0xffffffff
  416dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dff:	xchg   edx,eax
  416e00:	add    BYTE PTR [eax],al
  416e02:	mov    cl,0x83
  416e04:	stos   DWORD PTR es:[edi],eax
  416e05:	inc    DWORD PTR [ebp+0x0]
  416e08:	sar    edi,cl
  416e0a:	dec    edi
  416e0b:	add    BYTE PTR [ecx],cl
  416e0d:	call   FWORD PTR [eax-0x42]
  416e10:	int3   
  416e11:	mov    DWORD PTR [ecx-0x5500d501],edi
  416e17:	(bad)  
  416e18:	cmp    eax,DWORD PTR [ebx+0x3e83b7]
  416e1e:	retf   
  416e1f:	adc    al,0x83
  416e21:	(bad)  
  416e22:	fcos   
  416e24:	push   eax
  416e25:	call   eax
  416e27:	int3   
  416e28:	pop    ebp
  416e29:	push   DWORD PTR [edx+0x3bccf3ff]
  416e2f:	mov    dh,0xff
  416e31:	int3   
  416e32:	lods   al,BYTE PTR ds:[esi]
  416e33:	jmp    ecx
  416e35:	add    BYTE PTR [eax-0x4c005001],cl
  416e3b:	inc    DWORD PTR [ecx+ecx*4+0x2a]
  416e3f:	retf   0xccff
  416e42:	in     al,dx
  416e43:	add    BYTE PTR [edi+edi*8+0x17],al
  416e47:	push   DWORD PTR [edx+0xa83f4ff]
  416e4d:	(bad)  
  416e4e:	mov    esi,0x81ccff75
  416e53:	inc    ebx
  416e55:	add    BYTE PTR [ebp+0x8fffb00],bh
  416e5b:	(bad)  
  416e5c:	fild   WORD PTR [eax]
  416e5e:	clc    
  416e5f:	leave  
  416e60:	inc    DWORD PTR [ebx-0x49ff9e]
  416e66:	popf   
  416e67:	int3   
  416e68:	push   edx
  416e69:	xor    DWORD PTR [ebp+0x1dff7500],0x18
  416e70:	cmp    edi,0x61
  416e73:	jmp    FWORD PTR [edi-0x1]
  416e76:	cmp    edi,edi
  416e78:	inc    eax
  416e79:	int3   
  416e7a:	pop    esp
  416e7b:	int3   
  416e7c:	ret    0xbfff
  416e7f:	pop    ecx
  416e80:	inc    DWORD PTR [eax]
  416e82:	test   bh,bh
  416e84:	test   bh,bh
  416e86:	inc    eax
  416e87:	mov    DWORD PTR [ebx-0x1c00b101],esp
  416e8d:	add    BYTE PTR [eax-0x4e33009a],dl
  416e93:	xor    ecx,0xffffff89
  416e96:	lods   eax,DWORD PTR ds:[esi]
  416e97:	call   DWORD PTR [edi-0x7d]
  416e9a:	and    esp,ecx
  416e9c:	enter  0x29ff,0xc9
  416ea0:	add    bh,bh
  416ea2:	das    
  416ea3:	dec    DWORD PTR [edi+edi*8]
  416ea6:	xor    eax,0xfe000f83
  416eab:	add    BYTE PTR [edx-0xf5ae01],ah
  416eb1:	inc    esp
  416eb3:	int3   
  416eb4:	dec    esi
  416eb5:	(bad)  
  416eb6:	sti    
  416eb7:	(bad)  
  416eb8:	fadd   QWORD PTR [ebx+0x96ff02]
  416ebe:	dec    esi
  416ebf:	nop
  416ec0:	add    bh,bh
  416ec2:	add    al,BYTE PTR [ebx+0x450084]
  416ec8:	hlt    
  416ec9:	add    BYTE PTR [ebx+eax*4-0x17d17c4b],ch
  416ed0:	(bad)  
  416ed1:	inc    DWORD PTR [edi-0x74009d77]
  416ed7:	add    ch,ah
  416ed9:	adc    ebp,0xffffff83
  416edc:	inc    eax
  416edd:	jmp    FWORD PTR [edx+0x61]
  416ee0:	(bad)  
  416ee1:	inc    ecx
  416ee3:	push   ecx
  416ee5:	add    BYTE PTR [eax+eax*1-0xbf7c48],ah
  416eec:	pop    edi
  416eed:	mov    ebx,esp
  416eef:	stos   BYTE PTR es:[edi],al
  416ef0:	mov    DWORD PTR [ebx+0xa0ff68],eax
  416ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef7:	(bad)  
  416ef8:	jg     0x416e83
  416efa:	inc    esp
  416efb:	int3   
  416efc:	cdq    
  416efd:	dec    DWORD PTR [edi+eax*8+0xbb8300]
  416f04:	icebp  
  416f05:	inc    ecx
  416f07:	add    BYTE PTR [ebx+0x778391ff],dl
  416f0d:	(bad)  
  416f0e:	mov    ecx,0x2c000069
  416f13:	cmp    DWORD PTR [edx-0x4cff8c01],0xffffff89
  416f1a:	mov    es,WORD PTR [eax]
  416f1c:	pop    ss
  416f1d:	mov    eax,ebp
  416f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f20:	(bad)  
  416f21:	inc    DWORD PTR [esi-0x13ff2001]
  416f27:	add    BYTE PTR [ebx],dh
  416f29:	add    BYTE PTR [ebx],cl
  416f2b:	xor    DWORD PTR [edi+edi*8-0x762767],0xfffffff6
  416f33:	mov    DWORD PTR [eax],edx
  416f35:	jmp    FWORD PTR [eax+0x0]
  416f38:	or     eax,DWORD PTR [eax]
  416f3a:	xor    eax,0xba001283
  416f3f:	add    DWORD PTR ss:[ebx-0x6d76db],0x37
  416f47:	add    BYTE PTR [ecx+0x0],dl
  416f4a:	test   eax,0xdacc5cff
  416f4f:	sbb    eax,0xffd4ccff
  416f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f55:	int3   
  416f56:	(bad)  
  416f57:	push   DWORD PTR ds:0xff834a83
  416f5d:	jmp    DWORD PTR [ebx+eax*2-0x3fff34]
  416f64:	jge    0x416f65
  416f66:	jne    0x416f67
  416f68:	scas   al,BYTE PTR es:[edi]
  416f69:	adc    DWORD PTR [ebx],0xffffffff
  416f6c:	xchg   edx,eax
  416f6d:	and    DWORD PTR [edx],0x56
  416f70:	inc    DWORD PTR [eax]
  416f72:	ror    ah,0x63
  416f75:	add    BYTE PTR [edx-0x1],bh
  416f78:	inc    eax
  416f79:	add    BYTE PTR [edi+edi*8],cl
  416f7c:	sbb    al,BYTE PTR [eax]
  416f7e:	inc    ebp
  416f7f:	pop    ds
  416f80:	add    BYTE PTR [eax],al
  416f82:	lahf   
  416f83:	add    BYTE PTR [esi],ch
  416f85:	dec    DWORD PTR [ecx+0x0]
  416f88:	fdivp  st(7),st
  416f8a:	dec    ecx
  416f8b:	xor    eax,0xffffffff
  416f8e:	sub    esi,edi
  416f90:	inc    DWORD PTR [eax]
  416f92:	and    DWORD PTR [eax],eax
  416f94:	mov    WORD PTR [eax],es
  416f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f97:	inc    DWORD PTR [ebp+0x0]
  416f9a:	clc    
  416f9b:	add    edx,0xffffff83
  416f9e:	popf   
  416f9f:	mov    edi,0xccd783ff
  416fa4:	mov    ebx,0xcc83af83
  416fa9:	add    al,ah
  416fab:	add    bh,ch
  416fad:	add    ah,cl
  416faf:	call   0xcc9f7037
  416fb4:	sbb    al,0xff
  416fb6:	xchg   ebp,eax
  416fb7:	add    BYTE PTR [edi+edi*8+0x6283aa],al
  416fbe:	aam    0x5a
  416fc0:	inc    DWORD PTR [ebx+0x98ff11]
  416fc6:	mov    ebp,0x100050cc
  416fcb:	add    BYTE PTR [edx-0x1],bl
  416fce:	xchg   ebx,eax
  416fcf:	mov    dh,0x0
  416fd1:	mov    DWORD PTR [edi+edi*8-0xb70054],esi
  416fd8:	dec    ebp
  416fd9:	jmp    DWORD PTR [ebx+0x0]
  416fdc:	mov    dh,0xff
  416fde:	push   es
  416fdf:	or     bh,bh
  416fe1:	(bad)  
  416fe2:	mov    esi,0x2d896aff
  416fe7:	add    BYTE PTR [ebp-0x56009a01],bl
  416fed:	int3   
  416fee:	mov    bl,0xcd
  416ff0:	cmp    edi,0x28
  416ff3:	call   esp
  416ff5:	jmp    FWORD PTR [eax]
  416ff7:	int3   
  416ff8:	push   es
  416ff9:	add    al,al
  416ffb:	dec    ebx
  416ffd:	(bad)  
  416ffe:	call   0x4b416f5d
  417003:	push   eax
  417005:	add    BYTE PTR ds:0x54831900,ch
  41700b:	cmp    DWORD PTR [esi],0xffffff89
  41700e:	out    0xc3,al
  417010:	inc    DWORD PTR [eax]
  417012:	xchg   bh,bh
  417014:	fdivr  st,st(7)
  417016:	call   0xde89:0x72ff8583
  41701d:	and    esp,0xffffffae
  417020:	int3   
  417021:	(bad)  
  417022:	cld    
  417023:	call   FWORD PTR [ecx-0x71000401]
  417029:	add    ch,al
  41702b:	or     DWORD PTR [edi-0x7d],0xffffffab
  41702f:	sahf   
  417030:	mov    DWORD PTR [eax],eax
  417032:	gs add bh,ch
  417035:	(bad)  
  417036:	jmp    0x417037
  417038:	outs   dx,BYTE PTR ds:[esi]
  417039:	add    BYTE PTR [ecx+0x0],ch
  41703c:	call   0x8dff:0x8329bc00
  417043:	add    bl,cl
  417045:	add    BYTE PTR [esi-0x1],al
  417048:	retf   
  417049:	dec    DWORD PTR [esi+0x0]
  41704c:	add    BYTE PTR gs:[esp+esi*4-0x1],dl
  417051:	inc    DWORD PTR [esi-0x2fff1601]
  417057:	inc    DWORD PTR [esi+0x0]
  41705a:	add    edi,edi
  41705c:	scas   al,BYTE PTR es:[edi]
  41705d:	call   DWORD PTR [ecx+0x3700ffc8]
  417063:	inc    DWORD PTR [eax-0x1]
  417066:	mov    cl,0xcc
  417068:	idiv   bh
  41706a:	and    eax,0x698973ff
  41706f:	mov    ah,0xff
  417071:	(bad)  
  417072:	jns    0x416ff7
  417074:	jmp    DWORD PTR [bp-0x77]
  417078:	stos   DWORD PTR es:[edi],eax
  417079:	add    bh,bl
  41707b:	inc    DWORD PTR [esi-0x7c3b1d77]
  417081:	add    BYTE PTR ds:0x2b00a589,cl
  417087:	dec    DWORD PTR [edx]
  417089:	inc    DWORD PTR [edx]
  41708b:	add    al,cl
  41708d:	add    BYTE PTR [edx+ebp*2-0x7f3400],al
  417094:	mov    bh,bh
  417096:	mov    bh,bh
  417098:	out    0xff,al
  41709a:	jmp    0xb409f9f
  41709f:	push   0xfffbff00
  4170a4:	jl     0x4170a5
  4170a6:	mov    ecx,0x600a1ff
  4170ab:	cmp    DWORD PTR [eax+eax*1+0xcc83cb],0xffffffe0
  4170b3:	add    al,dh
  4170b5:	adc    eax,0xffffffcc
  4170b8:	mov    esi,0x8783e300
  4170bd:	add    ebx,0x59
  4170c0:	add    DWORD PTR [eax],0xffffffe3
  4170c3:	add    al,ch
  4170c5:	call   ebx
  4170c7:	and    DWORD PTR [edi],0x0
  4170ca:	push   edi
  4170cb:	int3   
  4170cc:	mov    dh,0x83
  4170ce:	mov    eax,0xb0ffff62
  4170d3:	int3   
  4170d4:	pop    edi
  4170d5:	mov    DWORD PTR [ebx-0x34],ebx
  4170d8:	pop    esi
  4170d9:	add    BYTE PTR [edi],al
  4170db:	add    BYTE PTR [edi],dh
  4170dd:	adc    DWORD PTR [edi],0x1b
  4170e0:	dec    esp
  4170e2:	mov    eax,ds:0x2000383
  4170e7:	add    BYTE PTR [esi+0x618333ff],bl
  4170ed:	add    BYTE PTR [ebx],ch
  4170ef:	add    BYTE PTR [ebx-0x1fff4000],0x0
  4170f6:	inc    esp
  4170f7:	sub    DWORD PTR [edx],0xffffffff
  4170fa:	icebp  
  4170fb:	cmp    DWORD PTR [eax+eax*1+0x6e],0xffffff94
  417100:	dec    esp
  417102:	jge    0x4170d0
  417104:	sbb    al,0x89
  417106:	jmp    0xf3ff:0xbb83db83
  41710d:	jmp    DWORD PTR [eax+0x6d]
  417110:	add    DWORD PTR [eax],0xffffff9c
  417113:	push   DWORD PTR [edx+0x7f00c1ff]
  417119:	int3   
  41711a:	pop    es
  41711b:	call   ecx
  41711d:	(bad)  
  41711e:	jp     0x417101
  417120:	add    ah,cl
  417122:	push   ecx
  417123:	add    al,ah
  417125:	add    BYTE PTR [edx-0x77],bl
  417128:	jnp    0x417129
  41712a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41712b:	add    ah,dh
  41712d:	add    DWORD PTR [ebx],0xfffffff2
  417130:	add    DWORD PTR [ebx+0xb3cc23],0x42
  417137:	call   FWORD PTR ds:0x8a838500
  41713d:	add    BYTE PTR [edx],ah
  41713f:	add    bh,bh
  417141:	add    BYTE PTR [edi+0x0],ah
  417144:	inc    ebx
  417145:	add    al,dl
  417147:	sbb    DWORD PTR [ebx],0xffffffff
  41714a:	push   cs
  41714b:	add    BYTE PTR [edi],dl
  41714d:	and    ebp,0x53
  417150:	(bad)  
  417151:	push   DWORD PTR [edx-0x57ff557d]
  417157:	push   DWORD PTR [ebx-0x2eff2601]
  41715d:	call   FWORD PTR [ecx-0x37]
  417160:	(bad)  
  417161:	dec    DWORD PTR [ecx]
  417163:	adc    DWORD PTR [ecx-0x4533e17d],0x0
  41716a:	or     BYTE PTR [ecx+0x2589ffce],0x89
  417171:	add    BYTE PTR [ecx+ecx*4],bh
  417174:	test   al,0x0
  417176:	rol    BYTE PTR [eax],cl
  417178:	das    
  417179:	call   FWORD PTR [ebp-0x26ffd600]
  41717f:	aaa    
  417180:	add    BYTE PTR [ebx+0x6ffd6],al
  417186:	es add dl,al
  417189:	add    BYTE PTR [eax],al
  41718b:	inc    DWORD PTR [ebx-0x7e7c0077]
  417191:	in     al,dx
  417192:	add    al,0x4
  417194:	add    BYTE PTR [eax],al
  417196:	push   ebx
  417197:	push   ebp
  417198:	push   esi
  417199:	push   edi
  41719a:	push   0xe3
  41719f:	push   0x42
  4171a1:	call   DWORD PTR ds:0x44400c
  4171a7:	mov    ebp,DWORD PTR ds:0x444040
  4171ad:	mov    DWORD PTR [esp+0x10],eax
  4171b1:	push   0x100
  4171b6:	lea    eax,[esp+0x18]
  4171ba:	push   eax
  4171bb:	push   0x446a88
  4171c0:	call   ebp
  4171c2:	mov    edx,DWORD PTR ds:0x447d00
  4171c8:	mov    ecx,DWORD PTR ds:0x4470b4
  4171ce:	add    edx,0x173b4
  4171d4:	mov    esi,0xe3
  4171d9:	lea    esp,[esp+0x0]
  4171e0:	movzx  eax,BYTE PTR [ecx+0x5]
  4171e4:	movzx  edi,WORD PTR [ecx+0x3]
  4171e8:	movzx  ecx,BYTE PTR [ecx+0x1]
  4171ec:	shl    eax,0x10
  4171ef:	add    eax,edi
  4171f1:	shl    eax,0x8
  4171f4:	add    eax,ecx
  4171f6:	mov    ecx,DWORD PTR ds:0x447cfc
  4171fc:	add    ecx,0xc4fdd957
  417202:	xor    ecx,eax
  417204:	mov    ds:0x447cf0,eax
  417209:	mov    DWORD PTR [edx],ecx
  41720b:	mov    ecx,DWORD PTR ds:0x4470b4
  417211:	add    ecx,0x8
  417214:	mov    DWORD PTR ds:0x4470b4,ecx
  41721a:	movzx  eax,BYTE PTR [ecx+0x5]
  41721e:	movzx  edi,WORD PTR [ecx+0x3]
  417222:	movzx  ecx,BYTE PTR [ecx+0x1]
  417226:	shl    eax,0x10
  417229:	add    eax,edi
  41722b:	shl    eax,0x8
  41722e:	add    eax,ecx
  417230:	mov    ecx,DWORD PTR ds:0x447cfc
  417236:	add    ecx,0xc4fdd957
  41723c:	xor    ecx,eax
  41723e:	mov    ds:0x447cf0,eax
  417243:	mov    DWORD PTR [edx+0x4],ecx
  417246:	mov    ecx,DWORD PTR ds:0x4470b4
  41724c:	add    ecx,0x8
  41724f:	add    edx,0x8
  417252:	dec    esi
  417253:	mov    DWORD PTR ds:0x4470b4,ecx
  417259:	jne    0x4171e0
  41725b:	mov    esi,DWORD PTR ds:0x447d00
  417261:	mov    ebx,DWORD PTR ds:0x444050
  417267:	add    esi,0x17acc
  41726d:	mov    edi,0x122
  417272:	call   ebx
  417274:	mov    edx,DWORD PTR ds:0x4470b8
  41727a:	mov    eax,DWORD PTR [edx]
  41727c:	mov    ds:0x447cf0,eax
  417281:	mov    ecx,0xdf945f80
  417286:	sub    ecx,DWORD PTR ds:0x447cfc
  41728c:	add    esi,0x8
  41728f:	xor    ecx,eax
  417291:	mov    DWORD PTR [esi-0x8],ecx
  417294:	mov    ecx,DWORD PTR ds:0x4470b8
  41729a:	movzx  eax,BYTE PTR [ecx+0xf]
  41729e:	movzx  edx,BYTE PTR [ecx+0x6]
  4172a2:	movzx  ecx,WORD PTR [ecx+0x4]
  4172a6:	shl    eax,0x8
  4172a9:	add    eax,edx
  4172ab:	shl    eax,0x10
  4172ae:	mov    edx,0xdf945f80
  4172b3:	sub    edx,DWORD PTR ds:0x447cfc
  4172b9:	add    eax,ecx
  4172bb:	xor    edx,eax
  4172bd:	mov    ds:0x447cf0,eax
  4172c2:	mov    DWORD PTR [esi-0x4],edx
  4172c5:	add    DWORD PTR ds:0x4470b8,0x10
  4172cc:	dec    edi
  4172cd:	jne    0x417272
  4172cf:	mov    eax,ds:0x4470b8
  4172d4:	mov    eax,DWORD PTR [eax]
  4172d6:	mov    ecx,0xdf945f80
  4172db:	sub    ecx,DWORD PTR ds:0x447cfc
  4172e1:	mov    ds:0x447cf0,eax
  4172e6:	xor    ecx,eax
  4172e8:	mov    DWORD PTR [esi],ecx
  4172ea:	mov    edx,DWORD PTR ds:0x447d00
  4172f0:	mov    ecx,DWORD PTR ds:0x4470bc
  4172f6:	add    edx,0x183e0
  4172fc:	mov    esi,0x169
  417301:	movzx  eax,BYTE PTR [ecx+0x6]
  417305:	movzx  edi,WORD PTR [ecx+0x4]
  417309:	movzx  ecx,BYTE PTR [ecx+0x1]
  41730d:	shl    eax,0x10
  417310:	add    eax,edi
  417312:	shl    eax,0x8
  417315:	add    eax,ecx
  417317:	mov    ecx,DWORD PTR ds:0x447cfc
  41731d:	add    ecx,0xd91ac46a
  417323:	xor    ecx,eax
  417325:	mov    ds:0x447cf0,eax
  41732a:	mov    DWORD PTR [edx],ecx
  41732c:	mov    ecx,DWORD PTR ds:0x4470bc
  417332:	movzx  eax,WORD PTR [ecx+0xa]
  417336:	movzx  ecx,WORD PTR [ecx+0x7]
  41733a:	shl    eax,0x10
  41733d:	add    eax,ecx
  41733f:	mov    ecx,0xd922c472
  417344:	sub    ecx,DWORD PTR ds:0x447cfc
  41734a:	mov    ds:0x447cf0,eax
  41734f:	xor    ecx,eax
  417351:	mov    DWORD PTR [edx+0x4],ecx
  417354:	mov    ecx,DWORD PTR ds:0x4470bc
  41735a:	add    ecx,0x10
  41735d:	add    edx,0x8
  417360:	dec    esi
  417361:	mov    DWORD PTR ds:0x4470bc,ecx
  417367:	jne    0x417301
  417369:	movzx  eax,BYTE PTR [ecx+0x6]
  41736d:	movzx  esi,WORD PTR [ecx+0x4]
  417371:	movzx  ecx,BYTE PTR [ecx+0x1]
  417375:	mov    ebx,DWORD PTR ds:0x444008
  41737b:	shl    eax,0x10
  41737e:	add    eax,esi
  417380:	shl    eax,0x8
  417383:	add    eax,ecx
  417385:	mov    ecx,0xd922c472
  41738a:	sub    ecx,DWORD PTR ds:0x447cfc
  417390:	mov    ds:0x447cf0,eax
  417395:	xor    ecx,eax
  417397:	mov    DWORD PTR [edx],ecx
  417399:	mov    esi,DWORD PTR ds:0x447d00
  41739f:	mov    ecx,DWORD PTR ds:0x4470c0
  4173a5:	add    esi,0x18f2c
  4173ab:	mov    edi,0x24f
  4173b0:	movzx  eax,BYTE PTR [ecx+0x5]
  4173b4:	movzx  edx,BYTE PTR [ecx+0x2]
  4173b8:	movzx  ecx,WORD PTR [ecx]
  4173bb:	shl    eax,0x8
  4173be:	add    eax,edx
  4173c0:	mov    edx,DWORD PTR ds:0x447cfc
  4173c6:	sub    edx,0x80040004
  4173cc:	shl    eax,0x10
  4173cf:	add    eax,ecx
  4173d1:	neg    edx
  4173d3:	sbb    edx,edx
  4173d5:	and    edx,0x9283c882
  4173db:	add    edx,0x6d7d08ac
  4173e1:	xor    edx,eax
  4173e3:	mov    ds:0x447cf0,eax
  4173e8:	push   0x0
  4173ea:	mov    DWORD PTR [esi],edx
  4173ec:	call   ebx
  4173ee:	mov    ecx,DWORD PTR ds:0x4470c0
  4173f4:	add    ecx,0x8
  4173f7:	add    esi,0x4
  4173fa:	dec    edi
  4173fb:	mov    DWORD PTR ds:0x4470c0,ecx
  417401:	jne    0x4173b0
  417403:	push   0x100
  417408:	lea    eax,[esp+0x218]
  41740f:	push   eax
  417410:	push   0x446a7c
  417415:	call   ebp
  417417:	mov    eax,ds:0x447d00
  41741c:	mov    edx,DWORD PTR ds:0x4470c4
  417422:	add    eax,0x19868
  417427:	mov    esi,0xa3
  41742c:	lea    esp,[esp+0x0]
  417430:	movzx  ecx,BYTE PTR [edx+0x6]
  417434:	movzx  edi,WORD PTR [edx+0x3]
  417438:	movzx  edx,BYTE PTR [edx]
  41743b:	shl    ecx,0x10
  41743e:	add    ecx,edi
  417440:	shl    ecx,0x8
  417443:	add    ecx,edx
  417445:	mov    edx,DWORD PTR ds:0x447cfc
  41744b:	mov    DWORD PTR ds:0x447cf0,ecx
  417451:	add    edx,0xa0ec5462
  417457:	xor    edx,ecx
  417459:	mov    DWORD PTR [eax],edx
  41745b:	mov    edx,DWORD PTR ds:0x4470c4
  417461:	movzx  ecx,WORD PTR [edx+0xd]
  417465:	movzx  edi,BYTE PTR [edx+0xa]
  417469:	movzx  edx,BYTE PTR [edx+0x8]
  41746d:	shl    ecx,0x8
  417470:	add    ecx,edi
  417472:	shl    ecx,0x8
  417475:	add    ecx,edx
  417477:	mov    edx,DWORD PTR ds:0x447cfc
  41747d:	mov    DWORD PTR ds:0x447cf0,ecx
  417483:	add    edx,0xa0ec5462
  417489:	xor    edx,ecx
  41748b:	mov    DWORD PTR [eax+0x4],edx
  41748e:	mov    edx,DWORD PTR ds:0x4470c4
  417494:	add    edx,0x10
  417497:	mov    DWORD PTR ds:0x4470c4,edx
  41749d:	movzx  ecx,BYTE PTR [edx+0x6]
  4174a1:	movzx  edi,WORD PTR [edx+0x3]
  4174a5:	movzx  edx,BYTE PTR [edx]
  4174a8:	shl    ecx,0x10
  4174ab:	add    ecx,edi
  4174ad:	shl    ecx,0x8
  4174b0:	add    ecx,edx
  4174b2:	mov    edx,DWORD PTR ds:0x447cfc
  4174b8:	add    edx,0xa0ec5462
  4174be:	xor    edx,ecx
  4174c0:	mov    DWORD PTR ds:0x447cf0,ecx
  4174c6:	mov    DWORD PTR [eax+0x8],edx
  4174c9:	mov    edx,DWORD PTR ds:0x4470c4
  4174cf:	movzx  ecx,WORD PTR [edx+0xd]
  4174d3:	movzx  edi,BYTE PTR [edx+0xa]
  4174d7:	movzx  edx,BYTE PTR [edx+0x8]
  4174db:	shl    ecx,0x8
  4174de:	add    ecx,edi
  4174e0:	shl    ecx,0x8
  4174e3:	add    ecx,edx
  4174e5:	mov    edx,DWORD PTR ds:0x447cfc
  4174eb:	add    edx,0xa0ec5462
  4174f1:	xor    edx,ecx
  4174f3:	mov    DWORD PTR ds:0x447cf0,ecx
  4174f9:	mov    DWORD PTR [eax+0xc],edx
  4174fc:	mov    edx,DWORD PTR ds:0x4470c4
  417502:	add    edx,0x10
  417505:	add    eax,0x10
  417508:	dec    esi
  417509:	mov    DWORD PTR ds:0x4470c4,edx
  41750f:	jne    0x417430
  417515:	mov    eax,ds:0x447d00
  41751a:	mov    edx,DWORD PTR ds:0x4470c8
  417520:	add    eax,0x1a298
  417525:	mov    esi,0x3f
  41752a:	lea    ebx,[ebx+0x0]
  417530:	movzx  ecx,BYTE PTR [edx+0x9]
  417534:	movzx  edi,BYTE PTR [edx+0x5]
  417538:	movzx  edx,WORD PTR [edx+0x1]
  41753c:	shl    ecx,0x8
  41753f:	add    ecx,edi
  417541:	shl    ecx,0x10
  417544:	add    ecx,edx
  417546:	mov    DWORD PTR ds:0x447cf0,ecx
  41754c:	mov    edx,0xcb3ffb64
  417551:	sub    edx,DWORD PTR ds:0x447cfc
  417557:	xor    edx,ecx
  417559:	mov    DWORD PTR [eax],edx
  41755b:	mov    edx,DWORD PTR ds:0x447cfc
  417561:	mov    ecx,DWORD PTR ds:0x4470c8
  417567:	mov    ecx,DWORD PTR [ecx+0xc]
  41756a:	sub    edx,0x80040004
  417570:	neg    edx
  417572:	sbb    edx,edx
  417574:	and    edx,0xb4c4f66a
  41757a:	add    edx,0x4b3bfb60
  417580:	xor    edx,ecx
  417582:	mov    DWORD PTR ds:0x447cf0,ecx
  417588:	mov    DWORD PTR [eax+0x4],edx
  41758b:	mov    edx,DWORD PTR ds:0x4470c8
  417591:	add    edx,0x10
  417594:	mov    DWORD PTR ds:0x4470c8,edx
  41759a:	movzx  ecx,BYTE PTR [edx+0x9]
  41759e:	movzx  edi,BYTE PTR [edx+0x5]
  4175a2:	movzx  edx,WORD PTR [edx+0x1]
  4175a6:	shl    ecx,0x8
  4175a9:	add    ecx,edi
  4175ab:	shl    ecx,0x10
  4175ae:	add    ecx,edx
  4175b0:	mov    DWORD PTR ds:0x447cf0,ecx
  4175b6:	mov    edx,0xcb3ffb64
  4175bb:	sub    edx,DWORD PTR ds:0x447cfc
  4175c1:	xor    edx,ecx
  4175c3:	mov    DWORD PTR [eax+0x8],edx
  4175c6:	mov    edx,DWORD PTR ds:0x447cfc
  4175cc:	mov    ecx,DWORD PTR ds:0x4470c8
  4175d2:	mov    ecx,DWORD PTR [ecx+0xc]
  4175d5:	sub    edx,0x80040004
  4175db:	neg    edx
  4175dd:	sbb    edx,edx
  4175df:	and    edx,0xb4c4f66a
  4175e5:	add    edx,0x4b3bfb60
  4175eb:	xor    edx,ecx
  4175ed:	mov    DWORD PTR ds:0x447cf0,ecx
  4175f3:	mov    DWORD PTR [eax+0xc],edx
  4175f6:	mov    edx,DWORD PTR ds:0x4470c8
  4175fc:	add    edx,0x10
  4175ff:	mov    DWORD PTR ds:0x4470c8,edx
  417605:	movzx  ecx,BYTE PTR [edx+0x9]
  417609:	movzx  edi,BYTE PTR [edx+0x5]
  41760d:	movzx  edx,WORD PTR [edx+0x1]
  417611:	shl    ecx,0x8
  417614:	add    ecx,edi
  417616:	shl    ecx,0x10
  417619:	add    ecx,edx
  41761b:	mov    DWORD PTR ds:0x447cf0,ecx
  417621:	mov    edx,0xcb3ffb64
  417626:	sub    edx,DWORD PTR ds:0x447cfc
  41762c:	xor    edx,ecx
  41762e:	mov    DWORD PTR [eax+0x10],edx
  417631:	mov    edx,DWORD PTR ds:0x447cfc
  417637:	mov    ecx,DWORD PTR ds:0x4470c8
  41763d:	mov    ecx,DWORD PTR [ecx+0xc]
  417640:	sub    edx,0x80040004
  417646:	neg    edx
  417648:	sbb    edx,edx
  41764a:	and    edx,0xb4c4f66a
  417650:	add    edx,0x4b3bfb60
  417656:	xor    edx,ecx
  417658:	mov    DWORD PTR ds:0x447cf0,ecx
  41765e:	mov    DWORD PTR [eax+0x14],edx
  417661:	mov    edx,DWORD PTR ds:0x4470c8
  417667:	add    edx,0x10
  41766a:	mov    DWORD PTR ds:0x4470c8,edx
  417670:	movzx  ecx,BYTE PTR [edx+0x9]
  417674:	movzx  edi,BYTE PTR [edx+0x5]
  417678:	shl    ecx,0x8
  41767b:	movzx  edx,WORD PTR [edx+0x1]
  41767f:	add    ecx,edi
  417681:	shl    ecx,0x10
  417684:	add    ecx,edx
  417686:	mov    DWORD PTR ds:0x447cf0,ecx
  41768c:	mov    edx,0xcb3ffb64
  417691:	sub    edx,DWORD PTR ds:0x447cfc
  417697:	xor    edx,ecx
  417699:	mov    DWORD PTR [eax+0x18],edx
  41769c:	mov    edx,DWORD PTR ds:0x447cfc
  4176a2:	mov    ecx,DWORD PTR ds:0x4470c8
  4176a8:	mov    ecx,DWORD PTR [ecx+0xc]
  4176ab:	sub    edx,0x80040004
  4176b1:	neg    edx
  4176b3:	sbb    edx,edx
  4176b5:	and    edx,0xb4c4f66a
  4176bb:	add    edx,0x4b3bfb60
  4176c1:	xor    edx,ecx
  4176c3:	mov    DWORD PTR ds:0x447cf0,ecx
  4176c9:	mov    DWORD PTR [eax+0x1c],edx
  4176cc:	mov    edx,DWORD PTR ds:0x4470c8
  4176d2:	add    edx,0x10
  4176d5:	mov    DWORD PTR ds:0x4470c8,edx
  4176db:	movzx  ecx,BYTE PTR [edx+0x9]
  4176df:	movzx  edi,BYTE PTR [edx+0x5]
  4176e3:	movzx  edx,WORD PTR [edx+0x1]
  4176e7:	shl    ecx,0x8
  4176ea:	add    ecx,edi
  4176ec:	shl    ecx,0x10
  4176ef:	add    ecx,edx
  4176f1:	mov    edx,0xcb3ffb64
  4176f6:	sub    edx,DWORD PTR ds:0x447cfc
  4176fc:	mov    DWORD PTR ds:0x447cf0,ecx
  417702:	xor    edx,ecx
  417704:	mov    DWORD PTR [eax+0x20],edx
  417707:	mov    edx,DWORD PTR ds:0x447cfc
  41770d:	mov    ecx,DWORD PTR ds:0x4470c8
  417713:	mov    ecx,DWORD PTR [ecx+0xc]
  417716:	sub    edx,0x80040004
  41771c:	neg    edx
  41771e:	sbb    edx,edx
  417720:	and    edx,0xb4c4f66a
  417726:	add    edx,0x4b3bfb60
  41772c:	xor    edx,ecx
  41772e:	mov    DWORD PTR ds:0x447cf0,ecx
  417734:	mov    DWORD PTR [eax+0x24],edx
  417737:	mov    edx,DWORD PTR ds:0x4470c8
  41773d:	add    edx,0x10
  417740:	add    eax,0x28
  417743:	dec    esi
  417744:	mov    DWORD PTR ds:0x4470c8,edx
  41774a:	jne    0x417530
  417750:	push   esi
  417751:	call   ebx
  417753:	mov    ecx,DWORD PTR ds:0x447d00
  417759:	mov    edx,DWORD PTR ds:0x4470cc
  41775f:	add    ecx,0x1ac70
  417765:	mov    esi,0x95
  41776a:	lea    ebx,[ebx+0x0]
  417770:	movzx  eax,WORD PTR [edx+0x4]
  417774:	movzx  edx,WORD PTR [edx+0x1]
  417778:	shl    eax,0x10
  41777b:	add    eax,edx
  41777d:	mov    ds:0x447cf0,eax
  417782:	mov    edx,0xf0579351
  417787:	sub    edx,DWORD PTR ds:0x447cfc
  41778d:	add    ecx,0x10
  417790:	xor    edx,eax
  417792:	mov    DWORD PTR [ecx-0x10],edx
  417795:	mov    edx,DWORD PTR ds:0x4470cc
  41779b:	movzx  eax,BYTE PTR [edx+0xe]
  41779f:	movzx  edi,BYTE PTR [edx+0xb]
  4177a3:	shl    eax,0x8
  4177a6:	add    eax,edi
  4177a8:	movzx  edi,BYTE PTR [edx+0x9]
  4177ac:	movzx  edx,BYTE PTR [edx+0x6]
  4177b0:	shl    eax,0x8
  4177b3:	add    eax,edi
  4177b5:	shl    eax,0x8
  4177b8:	add    eax,edx
  4177ba:	mov    edx,DWORD PTR ds:0x447cfc
  4177c0:	mov    ds:0x447cf0,eax
  4177c5:	add    edx,0xf04f9349
  4177cb:	xor    edx,eax
  4177cd:	mov    DWORD PTR [ecx-0xc],edx
  4177d0:	mov    edx,DWORD PTR ds:0x4470cc
  4177d6:	add    edx,0x10
  4177d9:	mov    DWORD PTR ds:0x4470cc,edx
  4177df:	movzx  eax,WORD PTR [edx+0x4]
  4177e3:	movzx  edx,WORD PTR [edx+0x1]
  4177e7:	shl    eax,0x10
  4177ea:	add    eax,edx
  4177ec:	mov    ds:0x447cf0,eax
  4177f1:	mov    edx,0xf0579351
  4177f6:	sub    edx,DWORD PTR ds:0x447cfc
  4177fc:	xor    edx,eax
  4177fe:	mov    DWORD PTR [ecx-0x8],edx
  417801:	mov    edx,DWORD PTR ds:0x4470cc
  417807:	movzx  eax,BYTE PTR [edx+0xe]
  41780b:	movzx  edi,BYTE PTR [edx+0xb]
  41780f:	shl    eax,0x8
  417812:	add    eax,edi
  417814:	movzx  edi,BYTE PTR [edx+0x9]
  417818:	movzx  edx,BYTE PTR [edx+0x6]
  41781c:	shl    eax,0x8
  41781f:	add    eax,edi
  417821:	shl    eax,0x8
  417824:	add    eax,edx
  417826:	mov    edx,DWORD PTR ds:0x447cfc
  41782c:	add    edx,0xf04f9349
  417832:	xor    edx,eax
  417834:	mov    ds:0x447cf0,eax
  417839:	mov    DWORD PTR [ecx-0x4],edx
  41783c:	mov    edx,DWORD PTR ds:0x4470cc
  417842:	add    edx,0x10
  417845:	dec    esi
  417846:	mov    DWORD PTR ds:0x4470cc,edx
  41784c:	jne    0x417770
  417852:	mov    eax,DWORD PTR [esp+0x10]
  417856:	pop    edi
  417857:	pop    esi
  417858:	pop    ebp
  417859:	pop    ebx
  41785a:	test   eax,eax
  41785c:	je     0x417865
  41785e:	push   eax
  41785f:	call   DWORD PTR ds:0x444018
  417865:	add    esp,0x404
  41786b:	ret    
  41786c:	int3   
  41786d:	int3   
  41786e:	int3   
  41786f:	int3   
  417870:	jmp    FWORD PTR [edi-0xffab39]
  417876:	inc    DWORD PTR [esp+eiz*2-0x7c4a]
  41787d:	push   cs
  41787e:	add    DWORD PTR [eax],0xffffffff
  417881:	mov    ch,0xcb
  417883:	(bad)  
  417884:	(bad)  
  417885:	inc    DWORD PTR [ebx+0x47896893]
  41788b:	add    bh,bh
  41788d:	or     BYTE PTR [eax],al
  41788f:	inc    DWORD PTR [ebx+0x565530ec]
  417895:	push   edi
  417896:	push   0x1e
  417898:	push   0x42
  41789a:	call   DWORD PTR ds:0x44400c
  4178a0:	mov    esi,DWORD PTR ds:0x447d00
  4178a6:	mov    ebp,DWORD PTR ds:0x444024
  4178ac:	mov    DWORD PTR [esp+0x14],eax
  4178b0:	mov    eax,ds:0x4470d0
  4178b5:	add    esi,0xe56c
  4178bb:	mov    edi,0x15e
  4178c0:	movzx  ecx,BYTE PTR [eax+0x9]
  4178c4:	movzx  edx,BYTE PTR [eax+0x6]
  4178c8:	shl    ecx,0x8
  4178cb:	add    ecx,edx
  4178cd:	movzx  edx,BYTE PTR [eax+0x2]
  4178d1:	movzx  eax,BYTE PTR [eax]
  4178d4:	shl    ecx,0x8
  4178d7:	add    ecx,edx
  4178d9:	shl    ecx,0x8
  4178dc:	add    ecx,eax
  4178de:	mov    DWORD PTR ds:0x447cf0,ecx
  4178e4:	lea    ecx,[esp+0x18]
  4178e8:	push   ecx
  4178e9:	call   ebp
  4178eb:	mov    edx,0x80a4d4a5
  4178f0:	sub    edx,DWORD PTR ds:0x447cfc
  4178f6:	add    esi,0x8
  4178f9:	xor    edx,DWORD PTR ds:0x447cf0
  4178ff:	mov    DWORD PTR [esi-0x8],edx
  417902:	mov    ecx,DWORD PTR ds:0x4470d0
  417908:	movzx  eax,WORD PTR [ecx+0xe]
  41790c:	movzx  ecx,WORD PTR [ecx+0xa]
  417910:	mov    edx,DWORD PTR ds:0x447cfc
  417916:	shl    eax,0x10
  417919:	add    eax,ecx
  41791b:	xor    edx,eax
  41791d:	mov    ds:0x447cf0,eax
  417922:	xor    edx,0x80a4d4a5
  417928:	mov    DWORD PTR [esi-0x4],edx
  41792b:	mov    eax,ds:0x4470d0
  417930:	add    eax,0x10
  417933:	dec    edi
  417934:	mov    ds:0x4470d0,eax
  417939:	jne    0x4178c0
  41793b:	mov    esi,DWORD PTR ds:0x447d00
  417941:	mov    ecx,DWORD PTR ds:0x4470d4
  417947:	push   ebx
  417948:	mov    ebx,DWORD PTR ds:0x444028
  41794e:	add    esi,0xf05c
  417954:	mov    edi,0x21c
  417959:	lea    esp,[esp+0x0]
  417960:	movzx  eax,BYTE PTR [ecx+0x7]
  417964:	movzx  edx,BYTE PTR [ecx+0x4]
  417968:	movzx  ecx,WORD PTR [ecx+0x2]
  41796c:	shl    eax,0x8
  41796f:	add    eax,edx
  417971:	shl    eax,0x10
  417974:	add    eax,ecx
  417976:	mov    edx,0x595e44e3
  41797b:	sub    edx,DWORD PTR ds:0x447cfc
  417981:	mov    ds:0x447cf0,eax
  417986:	xor    edx,eax
  417988:	lea    eax,[esp+0x10]
  41798c:	push   eax
  41798d:	lea    ecx,[esp+0x18]
  417991:	push   ecx
  417992:	push   0xc01a91bc
  417997:	mov    DWORD PTR [esi],edx
  417999:	call   ebx
  41799b:	mov    ecx,DWORD PTR ds:0x4470d4
  4179a1:	add    ecx,0x8
  4179a4:	add    esi,0x4
  4179a7:	dec    edi
  4179a8:	mov    DWORD PTR ds:0x4470d4,ecx
  4179ae:	jne    0x417960
  4179b0:	mov    esi,DWORD PTR ds:0x447d00
  4179b6:	add    esi,0xf8cc
  4179bc:	mov    edi,0x1e2
  4179c1:	push   0x0
  4179c3:	call   DWORD PTR ds:0x444008
  4179c9:	mov    ecx,DWORD PTR ds:0x4470d8
  4179cf:	movzx  eax,WORD PTR [ecx+0x5]
  4179d3:	movzx  edx,WORD PTR [ecx+0x1]
  4179d7:	shl    eax,0x10
  4179da:	mov    ecx,0xc9c487d8
  4179df:	sub    ecx,DWORD PTR ds:0x447cfc
  4179e5:	add    eax,edx
  4179e7:	xor    ecx,eax
  4179e9:	mov    ds:0x447cf0,eax
  4179ee:	mov    DWORD PTR [esi],ecx
  4179f0:	add    DWORD PTR ds:0x4470d8,0x8
  4179f7:	add    esi,0x4
  4179fa:	dec    edi
  4179fb:	jne    0x4179c1
  4179fd:	mov    ecx,DWORD PTR ds:0x447d00
  417a03:	mov    edx,DWORD PTR ds:0x4470dc
  417a09:	add    ecx,0x10054
  417a0f:	mov    esi,0x16f
  417a14:	movzx  eax,WORD PTR [edx+0x3]
  417a18:	movzx  edx,WORD PTR [edx]
  417a1b:	shl    eax,0x10
  417a1e:	add    eax,edx
  417a20:	mov    edx,DWORD PTR ds:0x447cfc
  417a26:	sub    edx,0x80040004
  417a2c:	neg    edx
  417a2e:	sbb    edx,edx
  417a30:	and    edx,0x37ca11a
  417a36:	add    edx,0xfc83feb1
  417a3c:	xor    edx,eax
  417a3e:	mov    ds:0x447cf0,eax
  417a43:	mov    DWORD PTR [ecx],edx
  417a45:	mov    edx,DWORD PTR ds:0x4470dc
  417a4b:	add    edx,0x8
  417a4e:	mov    DWORD PTR ds:0x4470dc,edx
  417a54:	movzx  eax,WORD PTR [edx+0x3]
  417a58:	movzx  edx,WORD PTR [edx]
  417a5b:	shl    eax,0x10
  417a5e:	add    eax,edx
  417a60:	mov    edx,DWORD PTR ds:0x447cfc
  417a66:	sub    edx,0x80040004
  417a6c:	neg    edx
  417a6e:	sbb    edx,edx
  417a70:	and    edx,0x37ca11a
  417a76:	add    edx,0xfc83feb1
  417a7c:	xor    edx,eax
  417a7e:	mov    ds:0x447cf0,eax
  417a83:	mov    DWORD PTR [ecx+0x4],edx
  417a86:	mov    edx,DWORD PTR ds:0x4470dc
  417a8c:	add    edx,0x8
  417a8f:	add    ecx,0x8
  417a92:	dec    esi
  417a93:	mov    DWORD PTR ds:0x4470dc,edx
  417a99:	jne    0x417a14
  417a9f:	mov    esi,DWORD PTR ds:0x447d00
  417aa5:	add    esi,0x10bcc
  417aab:	mov    edi,0x96
  417ab0:	lea    eax,[esp+0x10]
  417ab4:	push   eax
  417ab5:	lea    ecx,[esp+0x18]
  417ab9:	push   ecx
  417aba:	push   0xc01a91bc
  417abf:	call   ebx
  417ac1:	mov    ecx,DWORD PTR ds:0x4470e0
  417ac7:	movzx  eax,BYTE PTR [ecx+0x4]
  417acb:	movzx  edx,WORD PTR [ecx+0x2]
  417acf:	movzx  ecx,BYTE PTR [ecx]
  417ad2:	shl    eax,0x10
  417ad5:	add    eax,edx
  417ad7:	mov    edx,DWORD PTR ds:0x447cfc
  417add:	shl    eax,0x8
  417ae0:	add    eax,ecx
  417ae2:	add    edx,0x64188b65
  417ae8:	mov    ds:0x447cf0,eax
  417aed:	xor    edx,eax
  417aef:	lea    eax,[esp+0x1c]
  417af3:	push   eax
  417af4:	mov    DWORD PTR [esi],edx
  417af6:	call   ebp
  417af8:	mov    ecx,DWORD PTR ds:0x4470e0
  417afe:	movzx  eax,BYTE PTR [ecx+0xc]
  417b02:	movzx  edx,WORD PTR [ecx+0xa]
  417b06:	movzx  ecx,BYTE PTR [ecx+0x5]
  417b0a:	shl    eax,0x10
  417b0d:	add    eax,edx
  417b0f:	shl    eax,0x8
  417b12:	mov    edx,0x64208b6d
  417b17:	sub    edx,DWORD PTR ds:0x447cfc
  417b1d:	add    eax,ecx
  417b1f:	xor    edx,eax
  417b21:	mov    ds:0x447cf0,eax
  417b26:	mov    DWORD PTR [esi+0x4],edx
  417b29:	add    DWORD PTR ds:0x4470e0,0x10
  417b30:	add    esi,0x8
  417b33:	dec    edi
  417b34:	jne    0x417ab0
  417b3a:	mov    edx,DWORD PTR ds:0x447d00
  417b40:	mov    ecx,DWORD PTR ds:0x4470e4
  417b46:	add    edx,0x1107c
  417b4c:	mov    esi,0xbf
  417b51:	pop    ebx
  417b52:	movzx  eax,WORD PTR [ecx+0x6]
  417b56:	movzx  edi,BYTE PTR [ecx+0x4]
  417b5a:	movzx  ecx,BYTE PTR [ecx+0x1]
  417b5e:	shl    eax,0x8
  417b61:	add    eax,edi
  417b63:	shl    eax,0x8
  417b66:	add    eax,ecx
  417b68:	mov    ecx,DWORD PTR ds:0x447cfc
  417b6e:	add    ecx,0xd1263412
  417b74:	xor    ecx,eax
  417b76:	mov    ds:0x447cf0,eax
  417b7b:	mov    DWORD PTR [edx],ecx
  417b7d:	mov    ecx,DWORD PTR ds:0x4470e4
  417b83:	add    ecx,0x8
  417b86:	mov    DWORD PTR ds:0x4470e4,ecx
  417b8c:	movzx  eax,WORD PTR [ecx+0x6]
  417b90:	movzx  edi,BYTE PTR [ecx+0x4]
  417b94:	movzx  ecx,BYTE PTR [ecx+0x1]
  417b98:	shl    eax,0x8
  417b9b:	add    eax,edi
  417b9d:	shl    eax,0x8
  417ba0:	add    eax,ecx
  417ba2:	mov    ecx,DWORD PTR ds:0x447cfc
  417ba8:	add    ecx,0xd1263412
  417bae:	xor    ecx,eax
  417bb0:	mov    ds:0x447cf0,eax
  417bb5:	mov    DWORD PTR [edx+0x4],ecx
  417bb8:	mov    ecx,DWORD PTR ds:0x4470e4
  417bbe:	add    ecx,0x8
  417bc1:	add    edx,0x8
  417bc4:	dec    esi
  417bc5:	mov    DWORD PTR ds:0x4470e4,ecx
  417bcb:	jne    0x417b52
  417bcd:	mov    eax,ds:0x447d00
  417bd2:	mov    edx,DWORD PTR ds:0x4470e8
  417bd8:	add    eax,0x11674
  417bdd:	mov    esi,0x3e
  417be2:	movzx  ecx,BYTE PTR [edx+0x5]
  417be6:	movzx  edi,WORD PTR [edx+0x3]
  417bea:	movzx  edx,BYTE PTR [edx]
  417bed:	shl    ecx,0x10
  417bf0:	add    ecx,edi
  417bf2:	shl    ecx,0x8
  417bf5:	add    ecx,edx
  417bf7:	mov    edx,DWORD PTR ds:0x447cfc
  417bfd:	mov    DWORD PTR ds:0x447cf0,ecx
  417c03:	add    edx,0x2280740
  417c09:	xor    edx,ecx
  417c0b:	mov    DWORD PTR [eax],edx
  417c0d:	mov    edx,DWORD PTR ds:0x4470e8
  417c13:	add    edx,0x8
  417c16:	mov    DWORD PTR ds:0x4470e8,edx
  417c1c:	movzx  ecx,BYTE PTR [edx+0x5]
  417c20:	movzx  edi,WORD PTR [edx+0x3]
  417c24:	movzx  edx,BYTE PTR [edx]
  417c27:	shl    ecx,0x10
  417c2a:	add    ecx,edi
  417c2c:	shl    ecx,0x8
  417c2f:	add    ecx,edx
  417c31:	mov    edx,DWORD PTR ds:0x447cfc
  417c37:	mov    DWORD PTR ds:0x447cf0,ecx
  417c3d:	add    edx,0x2280740
  417c43:	xor    edx,ecx
  417c45:	mov    DWORD PTR [eax+0x4],edx
  417c48:	mov    edx,DWORD PTR ds:0x4470e8
  417c4e:	add    edx,0x8
  417c51:	mov    DWORD PTR ds:0x4470e8,edx
  417c57:	movzx  ecx,BYTE PTR [edx+0x5]
  417c5b:	movzx  edi,WORD PTR [edx+0x3]
  417c5f:	movzx  edx,BYTE PTR [edx]
  417c62:	shl    ecx,0x10
  417c65:	add    ecx,edi
  417c67:	shl    ecx,0x8
  417c6a:	add    ecx,edx
  417c6c:	mov    edx,DWORD PTR ds:0x447cfc
  417c72:	mov    DWORD PTR ds:0x447cf0,ecx
  417c78:	add    edx,0x2280740
  417c7e:	xor    edx,ecx
  417c80:	mov    DWORD PTR [eax+0x8],edx
  417c83:	mov    edx,DWORD PTR ds:0x4470e8
  417c89:	add    edx,0x8
  417c8c:	mov    DWORD PTR ds:0x4470e8,edx
  417c92:	movzx  ecx,BYTE PTR [edx+0x5]
  417c96:	movzx  edi,WORD PTR [edx+0x3]
  417c9a:	movzx  edx,BYTE PTR [edx]
  417c9d:	shl    ecx,0x10
  417ca0:	add    ecx,edi
  417ca2:	shl    ecx,0x8
  417ca5:	add    ecx,edx
  417ca7:	mov    edx,DWORD PTR ds:0x447cfc
  417cad:	mov    DWORD PTR ds:0x447cf0,ecx
  417cb3:	add    edx,0x2280740
  417cb9:	xor    edx,ecx
  417cbb:	mov    DWORD PTR [eax+0xc],edx
  417cbe:	mov    edx,DWORD PTR ds:0x4470e8
  417cc4:	add    edx,0x8
  417cc7:	mov    DWORD PTR ds:0x4470e8,edx
  417ccd:	movzx  ecx,BYTE PTR [edx+0x5]
  417cd1:	movzx  edi,WORD PTR [edx+0x3]
  417cd5:	movzx  edx,BYTE PTR [edx]
  417cd8:	shl    ecx,0x10
  417cdb:	add    ecx,edi
  417cdd:	shl    ecx,0x8
  417ce0:	add    ecx,edx
  417ce2:	mov    edx,DWORD PTR ds:0x447cfc
  417ce8:	add    edx,0x2280740
  417cee:	xor    edx,ecx
  417cf0:	mov    DWORD PTR ds:0x447cf0,ecx
  417cf6:	mov    DWORD PTR [eax+0x10],edx
  417cf9:	mov    edx,DWORD PTR ds:0x4470e8
  417cff:	add    edx,0x8
  417d02:	mov    DWORD PTR ds:0x4470e8,edx
  417d08:	movzx  ecx,BYTE PTR [edx+0x5]
  417d0c:	movzx  edi,WORD PTR [edx+0x3]
  417d10:	movzx  edx,BYTE PTR [edx]
  417d13:	shl    ecx,0x10
  417d16:	add    ecx,edi
  417d18:	shl    ecx,0x8
  417d1b:	add    ecx,edx
  417d1d:	mov    edx,DWORD PTR ds:0x447cfc
  417d23:	add    edx,0x2280740
  417d29:	xor    edx,ecx
  417d2b:	mov    DWORD PTR ds:0x447cf0,ecx
  417d31:	mov    DWORD PTR [eax+0x14],edx
  417d34:	mov    edx,DWORD PTR ds:0x4470e8
  417d3a:	add    edx,0x8
  417d3d:	add    eax,0x18
  417d40:	dec    esi
  417d41:	mov    DWORD PTR ds:0x4470e8,edx
  417d47:	jne    0x417be2
  417d4d:	lea    eax,[esp+0x18]
  417d51:	push   eax
  417d52:	call   ebp
  417d54:	mov    edx,DWORD PTR ds:0x447d00
  417d5a:	mov    ecx,DWORD PTR ds:0x4470ec
  417d60:	add    edx,0x11c44
  417d66:	mov    esi,0x15d
  417d6b:	jmp    0x417d70
  417d6d:	lea    ecx,[ecx+0x0]
  417d70:	movzx  eax,BYTE PTR [ecx+0x7]
  417d74:	movzx  edi,BYTE PTR [ecx+0x5]
  417d78:	movzx  ecx,WORD PTR [ecx+0x2]
  417d7c:	shl    eax,0x8
  417d7f:	add    eax,edi
  417d81:	shl    eax,0x10
  417d84:	add    eax,ecx
  417d86:	mov    ecx,DWORD PTR ds:0x447cfc
  417d8c:	xor    ecx,eax
  417d8e:	mov    ds:0x447cf0,eax
  417d93:	xor    ecx,0x4942b93a
  417d99:	mov    DWORD PTR [edx],ecx
  417d9b:	mov    ecx,DWORD PTR ds:0x4470ec
  417da1:	movzx  eax,BYTE PTR [ecx+0xf]
  417da5:	movzx  edi,BYTE PTR [ecx+0xb]
  417da9:	movzx  ecx,WORD PTR [ecx+0x9]
  417dad:	shl    eax,0x8
  417db0:	add    eax,edi
  417db2:	shl    eax,0x10
  417db5:	add    eax,ecx
  417db7:	mov    ecx,DWORD PTR ds:0x447cfc
  417dbd:	add    ecx,0x4942b93a
  417dc3:	xor    ecx,eax
  417dc5:	mov    ds:0x447cf0,eax
  417dca:	mov    DWORD PTR [edx+0x4],ecx
  417dcd:	mov    ecx,DWORD PTR ds:0x4470ec
  417dd3:	add    ecx,0x10
  417dd6:	add    edx,0x8
  417dd9:	dec    esi
  417dda:	mov    DWORD PTR ds:0x4470ec,ecx
  417de0:	jne    0x417d70
  417de2:	movzx  eax,BYTE PTR [ecx+0x7]
  417de6:	movzx  esi,BYTE PTR [ecx+0x5]
  417dea:	movzx  ecx,WORD PTR [ecx+0x2]
  417dee:	shl    eax,0x8
  417df1:	add    eax,esi
  417df3:	shl    eax,0x10
  417df6:	add    eax,ecx
  417df8:	mov    ecx,0x494ab942
  417dfd:	sub    ecx,DWORD PTR ds:0x447cfc
  417e03:	mov    ds:0x447cf0,eax
  417e08:	xor    ecx,eax
  417e0a:	push   0x0
  417e0c:	mov    DWORD PTR [edx],ecx
  417e0e:	call   DWORD PTR ds:0x444008
  417e14:	push   0x14
  417e16:	push   0x70
  417e18:	call   DWORD PTR ds:0x447d00
  417e1e:	mov    eax,DWORD PTR [esp+0x1c]
  417e22:	add    esp,0x8
  417e25:	pop    edi
  417e26:	pop    esi
  417e27:	pop    ebp
  417e28:	test   eax,eax
  417e2a:	je     0x417e33
  417e2c:	push   eax
  417e2d:	call   DWORD PTR ds:0x444018
  417e33:	add    esp,0x30
  417e36:	ret    
  417e37:	int3   
  417e38:	int3   
  417e39:	int3   
  417e3a:	int3   
  417e3b:	int3   
  417e3c:	int3   
  417e3d:	int3   
  417e3e:	int3   
  417e3f:	int3   
  417e40:	ror    DWORD PTR [ecx-0xc43400],1
  417e46:	out    0x83,al
  417e48:	adc    esp,DWORD PTR [ebx+eax*4]
  417e4b:	jle    0x417e0f
  417e4d:	add    bh,bh
  417e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e50:	jecxz  0x417e51
  417e52:	(bad)  
  417e53:	(bad)  
  417e54:	(bad)  
  417e56:	sbb    eax,0x83bbe1ff
  417e5b:	das    
  417e5c:	push   edi
  417e5d:	add    bh,bh
  417e5f:	cmc    
  417e60:	fiadd  DWORD PTR [eax]
  417e62:	add    DWORD PTR [ebx-0x338f7c95],0x5d
  417e69:	stc    
  417e6a:	int3   
  417e6b:	xchg   DWORD PTR [ebp+0x4dc9ccff],ecx
  417e71:	add    BYTE PTR [ecx-0xe00a300],cl
  417e77:	sbb    DWORD PTR [esi+0x7ecaff6f],0xffffffff
  417e7e:	add    BYTE PTR [esi+edx*1],bl
  417e81:	add    BYTE PTR [eax],al
  417e83:	push   DWORD PTR [edi]
  417e85:	add    BYTE PTR [edx-0x1],ch
  417e88:	xchg   edi,eax
  417e89:	clc    
  417e8a:	(bad)  
  417e8b:	mov    esi,0xa0ffcc1d
  417e90:	jb     0x417e92
  417e92:	dec    esp
  417e94:	mov    al,ds:0x48000500
  417e99:	jns    0x417e9b
  417e9b:	out    dx,eax
  417e9c:	sti    
  417e9d:	add    bh,bh
  417e9f:	jae    0x417ee6
  417ea1:	inc    DWORD PTR [eax]
  417ea3:	add    ah,dh
  417ea5:	push   DWORD PTR ds:0x38c5ff
  417eab:	and    BYTE PTR [esi],dl
  417ead:	add    bh,bh
  417eaf:	sub    edx,DWORD PTR [edi+edi*8-0x1]
  417eb3:	adc    ebp,0xffffffcc
  417eb6:	fdivp  st(7),st
  417eb8:	sbb    esi,0xffffffff
  417ebb:	inc    edi
  417ebc:	inc    eax
  417ebd:	add    BYTE PTR [eax],al
  417ebf:	cmp    al,0x67
  417ec1:	mov    edi,edi
  417ec3:	push   eax
  417ec5:	int3   
  417ec6:	popa   
  417ec7:	(bad)  
  417ec8:	fnstenv [edi+edi*8+0x56]
  417ecc:	jge    0x417e51
  417ece:	jmp    FWORD PTR [edx+0xff00de]
  417ed4:	jecxz  0x417ea2
  417ed6:	imul   edi,edi,0xed00b1e3
  417edc:	pop    ebx
  417edd:	add    DWORD PTR [eax],0xfffffffc
  417ee0:	test   DWORD PTR [eax],eax
  417ee2:	mov    DWORD PTR [eax],eax
  417ee4:	xchg   ecx,eax
  417ee5:	jmp    DWORD PTR [esi-0x4f7000]
  417eeb:	xchg   edx,eax
  417eec:	add    DWORD PTR [eax],0xffe3b4ff
  417ef2:	or     DWORD PTR [ecx-0x8776dc],0x75
  417ef9:	dec    ecx
  417efa:	inc    DWORD PTR [ecx]
  417efc:	mov    cl,0xff
  417efe:	xor    DWORD PTR [ebx],0x6b
  417f01:	inc    DWORD PTR [ebx+0x3100b4ff]
  417f07:	add    BYTE PTR [edx],bl
  417f09:	mov    ah,0xff
  417f0b:	imul   ecx
  417f0d:	add    BYTE PTR [eax],al
  417f0f:	pop    ebx
  417f10:	(bad)  
  417f11:	inc    DWORD PTR [eax]
  417f13:	inc    DWORD PTR [eax+eax*1]
  417f16:	dec    esi
  417f17:	push   DWORD PTR [eax-0x3b0e000e]
  417f1d:	add    BYTE PTR [eax],al
  417f1f:	std    
  417f20:	xlat   BYTE PTR ds:[ebx]
  417f21:	(bad)  
  417f22:	(bad)  
  417f23:	inc    DWORD PTR [eax-0x1]
  417f26:	adc    bh,bh
  417f28:	mov    ds:0x1cd683f8,al
  417f2d:	add    bh,bh
  417f2f:	mov    bl,0x17
  417f31:	(bad)  
  417f32:	inc    DWORD PTR [ebx-0x8a7674]
  417f38:	mov    ecx,0xc227ff17
  417f3d:	add    BYTE PTR [eax],al
  417f3f:	adc    al,0xca
  417f41:	cmp    edi,0x0
  417f44:	fwait
  417f45:	push   DWORD PTR [ebx-0x3d4800]
  417f4b:	lods   eax,DWORD PTR ds:[esi]
  417f4c:	sar    bh,0xff
  417f4f:	inc    ecx
  417f50:	fild   WORD PTR [eax]
  417f52:	(bad)  
  417f53:	call   FWORD PTR [esi-0x77]
  417f56:	or     edi,edi
  417f58:	addr16 mov ?,edi
  417f5b:	adc    eax,0xc383ffd8
  417f60:	xor    bh,bh
  417f62:	dec    DWORD PTR [ecx-0x45ffff]
  417f68:	into   
  417f69:	imul   eax,DWORD PTR [ebx-0xa7fe],0xc660
  417f73:	inc    DWORD PTR [ecx]
  417f75:	call   DWORD PTR [eax+eax*1+0x2fffbc24]
  417f7c:	sbb    al,0x89
  417f7e:	xor    DWORD PTR [edi+0xfff9],0xffffff97
  417f85:	call   FWORD PTR [edi-0x1]
  417f88:	shl    ebp,1
  417f8a:	call   FWORD PTR [eax-0x1]
  417f8d:	(bad)  
  417f8e:	call   DWORD PTR [eax+0x4e]
  417f91:	cmp    edi,0x0
  417f94:	test   DWORD PTR [eax],0xe300063
  417f9a:	jmp    FWORD PTR [ebp+0x1]
  417f9d:	inc    DWORD PTR [ebx-0xbe62]
  417fa3:	mov    DWORD PTR [eax-0x77],eax
  417fa6:	dec    eax
  417fa7:	dec    DWORD PTR [ebx+ebp*1]
  417faa:	add    BYTE PTR [ecx-0x6e000006],bh
  417fb0:	(bad)  
  417fb2:	add    bh,bh
  417fb4:	inc    esi
  417fb5:	cmp    DWORD PTR [ebp-0x512801],0x30
  417fbc:	cmp    bh,bh
  417fbe:	jmp    FWORD PTR [eax]
  417fc0:	sar    bh,0x0
  417fc3:	int3   
  417fc4:	sub    eax,DWORD PTR [eax]
  417fc6:	pop    ds
  417fc7:	(bad)  
  417fc8:	cmp    al,0x91
  417fca:	(bad)  
  417fcb:	fld    QWORD PTR [eax+0x16330083]
  417fd1:	inc    DWORD PTR [eax]
  417fd3:	add    BYTE PTR [edx-0x1],ch
  417fd6:	ins    DWORD PTR es:[edi],dx
  417fd7:	mov    DWORD PTR [edx-0x6be276ed],ecx
  417fdd:	add    ah,cl
  417fdf:	xlat   BYTE PTR ds:[ebx]
  417fe0:	sub    bh,bh
  417fe2:	add    DWORD PTR [ebx+0x93009e],0xffffff8a
  417fe9:	sub    DWORD PTR [eax],eax
  417feb:	dec    esi
  417fec:	jbe    0x417f71
  417fee:	int3   
  417fef:	cdq    
  417ff0:	dec    edx
  417ff1:	add    DWORD PTR [eax],0xffffffcc
  417ff4:	test   BYTE PTR [ecx+0x37cb001a],cl
  417ffa:	jmp    DWORD PTR [ebx]
  417ffc:	xchg   ebx,eax
  417ffd:	inc    DWORD PTR [eax]
  417fff:	div    BYTE PTR ds:0x8ccff83
  418005:	dec    eax
  418007:	mov    DWORD PTR [ecx+0x314fff1],esp
  41800d:	inc    DWORD PTR [eax]
  41800f:	out    dx,eax
  418010:	cmp    eax,DWORD PTR [ebx-0xf50077]
  418016:	dec    edi
  418017:	add    edx,0x46
  41801a:	call   FWORD PTR [edx]
  41801c:	test   eax,0xb4b5cc00
  418021:	add    bh,bh
  418023:	inc    edx
  418025:	call   FWORD PTR [edx+0x0]
  418028:	mov    bl,0x76
  41802a:	mov    esi,eax
  41802c:	popf   
  41802d:	mov    edi,edi
  41802f:	inc    ebp
  418030:	mov    ch,0xcc
  418032:	(bad)  
  418033:	inc    DWORD PTR [ecx+0x0]
  418036:	jmp    0x7826:0xa35fcc
  41803d:	dec    DWORD PTR [ecx-0x33ff1017]
  418043:	add    al,cl
  418045:	(bad)  
  418046:	stc    
  418047:	add    BYTE PTR [edi-0x632eff4f],bh
  41804d:	add    BYTE PTR [ebx-0x7cdd8c],al
  418053:	call   FWORD PTR [esi-0xc764a00]
  418059:	pop    eax
  41805a:	dec    DWORD PTR [edi]
  41805c:	out    0x0,eax
  41805e:	push   edx
  418060:	inc    esi
  418061:	add    bh,bh
  418063:	mov    DWORD PTR [eax-0x7d],ebp
  418066:	xor    DWORD PTR [ebx+0x21ff5270],eax
  41806c:	mov    ecx,0x7900ff
  418071:	dec    esp
  418073:	dec    DWORD PTR [ebx+0x53ffcaff]
  418079:	ud0    esp,DWORD PTR [edi-0x6a]
  41807d:	add    BYTE PTR [eax],al
  41807f:	ss xor eax,0x5fff0083
  418085:	call   FWORD PTR [ecx-0x7c730100]
  41808b:	into   
  41808c:	adc    bh,bh
  41808e:	push   DWORD PTR [ebx]
  418090:	cwde   
  418091:	add    bh,bh
  418093:	call   FWORD PTR [esi-0x36765c01]
  418099:	pop    edi
  41809a:	add    bh,dl
  41809c:	and    cl,ah
  41809e:	dec    DWORD PTR [ebx-0xd]
  4180a1:	inc    DWORD PTR [ebx-0x42ff1401]
  4180a7:	add    BYTE PTR [ebx],cl
  4180a9:	sub    bh,bh
  4180ab:	push   0xffffffc0
  4180ad:	add    bh,bh
  4180af:	sbb    esi,DWORD PTR [edx]
  4180b1:	int3   
  4180b2:	int3   
  4180b3:	int3   
  4180b4:	mov    edi,?
  4180b6:	mov    ebx,0xfff8ccff
  4180bb:	shr    DWORD PTR ds:0x52eff00,cl
  4180c1:	add    bh,bh
  4180c3:	push   eax
  4180c5:	call   DWORD PTR [edi]
  4180c7:	int3   
  4180c8:	hlt    
  4180c9:	or     edi,edi
  4180cb:	sbb    ebp,DWORD PTR [eax]
  4180cd:	(bad)  
  4180ce:	jmp    FWORD PTR [eax]
  4180d0:	aas    
  4180d1:	add    DWORD PTR [ebx-0x37000901],0xffffffff
  4180d8:	cmp    edi,DWORD PTR ds:0xffd4ba00
  4180de:	int3   
  4180df:	retf   
  4180e0:	loop   0x4180e2
  4180e2:	inc    DWORD PTR [eax]
  4180e4:	push   0xffffffff
  4180e6:	cmp    eax,0xff5b84ff
  4180eb:	in     al,0x68
  4180ed:	(bad)  
  4180ee:	push   DWORD PTR [edi]
  4180f0:	jmp    0x418075
  4180f2:	inc    DWORD PTR [eax]
  4180f4:	and    al,BYTE PTR [ebx+0x6507ff22]
  4180fa:	sub    DWORD PTR [ebx-0x1f7c0008],0xffffffef
  418101:	(bad)  
  418102:	(bad)  
  418103:	call   DWORD PTR ds:0x8eff6cff
  418109:	mov    bl,0x0
  41810b:	mov    dh,0x32
  41810d:	(bad)  
  41810e:	(bad)  
  41810f:	jg     0x418136
  418111:	(bad)  
  418112:	inc    DWORD PTR [eax]
  418114:	jg     0x418115
  418116:	leave  
  418117:	call   DWORD PTR [eax+0x47]
  41811a:	inc    DWORD PTR [edi+0x70ffff7b]
  418120:	pop    ebp
  418121:	dec    esp
  418123:	add    BYTE PTR [edx],al
  418125:	add    BYTE PTR [esi],bh
  418127:	dec    esi
  418129:	adc    BYTE PTR [eax],al
  41812b:	(bad)  
  41812f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418130:	repnz add BYTE PTR [eax],al
  418133:	add    bh,dh
  418135:	sub    DWORD PTR [edi+edi*8],0x6b
  418139:	es call ecx
  41813c:	test   al,0xff
  41813e:	jmp    FWORD PTR [ebx+0xff9b]
  418144:	and    eax,0x8affb583
  418149:	mov    edx,0xfff11c00
  41814e:	(bad)  
  41814f:	mov    esi,0x8300ff8a
  418154:	das    
  418155:	(bad)  
  418156:	jmp    0x418158
  418158:	push   es
  418159:	and    al,0x0
  41815b:	jae    0x4180e4
  41815d:	int3   
  41815e:	add    dl,bl
  418160:	sbb    eax,0x4200cc83
  418165:	mov    DWORD PTR [ebp-0x7b277],edi
  41816b:	les    edx,FWORD PTR [esp+ecx*8]
  41816e:	add    BYTE PTR [esi+0xc],ch
  418171:	add    BYTE PTR [eax],al
  418173:	dec    DWORD PTR [eax-0x7d]
  418176:	adc    bh,bh
  418178:	jmp    0xf3e98141
  41817d:	inc    DWORD PTR [eax]
  41817f:	add    eax,0x83ffff48
  418184:	mov    ds:0x6dff1aff,eax
  418189:	mov    dl,0xff
  41818b:	(bad)  
  41818c:	aam    0xff
  41818e:	call   FWORD PTR [ecx+0x15]
  418191:	add    bh,bh
  418193:	call   DWORD PTR [eax-0x7d]
  418196:	and    eax,DWORD PTR [ebx+0x4ff5a19]
  41819c:	add    edi,edi
  41819e:	and    DWORD PTR [edi-0xff7607],0xffffffd8
  4181a5:	add    BYTE PTR [eax+0x571b00],dh
  4181ab:	xchg   edi,eax
  4181ac:	cmp    edi,0xffd24100
  4181b2:	add    BYTE PTR [eax],al
  4181b4:	pop    edx
  4181b5:	jmp    FWORD PTR [ecx-0x1]
  4181b8:	xchg   edi,eax
  4181b9:	arpl   di,di
  4181bb:	sahf   
  4181bc:	inc    DWORD PTR cs:[eax]
  4181bf:	add    DWORD PTR [eax-0x1a330100],0xec009a83
  4181c9:	mov    edi,0xfff815ff
  4181ce:	add    BYTE PTR ds:0x89ffff47,bh
  4181d4:	xchg   ecx,eax
  4181d5:	or     DWORD PTR [ecx+0xee11ff],0x51
  4181dc:	fcos   
  4181de:	add    BYTE PTR [ecx+0x3c],dh
  4181e1:	add    bh,bh
  4181e3:	add    dh,al
  4181e5:	add    cl,dh
  4181e7:	mov    DWORD PTR [ecx+eax*2-0x49eb00],edi
  4181ee:	add    ecx,0x7c
  4181f1:	add    bh,bh
  4181f3:	call   FWORD PTR [eax-0x1233a901]
  4181f9:	mov    al,ds:0x831666cc
  4181fe:	add    BYTE PTR [ecx+0x18],al
  418201:	(bad)  
  418202:	dec    DWORD PTR [ecx-0x1800ce]
  418208:	cwde   
  418209:	enter  0xa83,0x47
  41820d:	cmp    edi,0xffffff86
  418210:	mov    bl,0x83
  418212:	mov    edi,edi
  418214:	xlat   BYTE PTR ds:[ebx]
  418215:	push   edx
  418217:	call   FWORD PTR [edi+0x55]
  41821a:	add    BYTE PTR [edx+ecx*2+0x1ff700ff],cl
  418221:	dec    DWORD PTR [ecx-0x3cffe001]
  418227:	sub    DWORD PTR [edx],0xffffff81
  41822a:	jmp    FWORD PTR [ebx+eax*4-0x1]
  41822e:	add    BYTE PTR [esi],cl
  418230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418231:	add    bh,bh
  418233:	add    BYTE PTR [edi+edi*8-0x5247763c],ch
  41823a:	mov    DWORD PTR [esi-0x2e000017],esi
  418240:	adc    edi,edi
  418242:	mov    edi,edi
  418244:	repnz (bad) 
  418246:	jge    0x418247
  418248:	clc    
  418249:	out    dx,al
  41824a:	jmp    FWORD PTR [ebx+edi*1+0x58fccc00]
  418251:	inc    DWORD PTR [eax]
  418253:	dec    DWORD PTR [ebp-0x5f33617d]
  418259:	sahf   
  41825a:	call   FWORD PTR ds:0x14ccff74
  418260:	loopne 0x418262
  418262:	mov    edi,edi
  418264:	in     eax,0x0
  418266:	pop    ss
  418267:	xor    DWORD PTR [ebp-0x1dc033ba],0x0
  41826e:	and    DWORD PTR [eax+0x2a],0xffffffff
  418272:	add    BYTE PTR [ebx-0x7c4f3322],al
  418278:	inc    esi
  418279:	jp     0x41827a
  41827b:	xchg   ecx,eax
  41827c:	or     edi,edi
  41827e:	inc    DWORD PTR [eax-0xffffab]
  418284:	dec    edx
  418285:	add    ch,ch
  418287:	add    cl,dl
  418289:	ja     0x41828b
  41828b:	sbb    al,0xea
  41828d:	add    bh,bh
  41828f:	mov    cl,BYTE PTR [eax+eax*1+0x0]
  418293:	add    DWORD PTR [ecx-0x1],0xffffff8f
  418297:	add    BYTE PTR ds:0x303dccff,ah
  41829d:	inc    DWORD PTR [eax]
  41829f:	popa   
  4182a0:	jno    0x4182a1
  4182a2:	(bad)  
  4182a3:	dec    DWORD PTR ds:0xfaff7cff
  4182a9:	cmp    bh,bh
  4182ab:	adc    BYTE PTR [ebx-0x6a34007d],cl
  4182b1:	add    bh,bh
  4182b3:	add    BYTE PTR [ebp-0x1],ah
  4182b6:	jmp    0x4182b7
  4182b8:	mov    dl,0xc3
  4182ba:	inc    DWORD PTR [eax]
  4182bc:	dec    ecx
  4182bd:	(bad)  
  4182be:	push   ebp
  4182c0:	mov    dl,0xff
  4182c2:	inc    DWORD PTR [eax]
  4182c4:	dec    ebp
  4182c5:	mov    esp,edi
  4182c7:	inc    DWORD PTR [ebx-0x11]
  4182ca:	jmp    FWORD PTR [esi]
  4182cc:	cmp    cl,BYTE PTR [ecx-0x693f7d]
  4182d2:	add    BYTE PTR [eax],al
  4182d4:	mov    esp,0x2ffd0ff
  4182d9:	scas   eax,DWORD PTR es:[edi]
  4182da:	add    BYTE PTR [ecx-0x65],dl
  4182dd:	add    bh,bh
  4182df:	push   esp
  4182e0:	(bad)  
  4182e1:	dec    esp
  4182e3:	add    BYTE PTR [edi+0x5e89a800],ch
  4182e9:	adc    eax,0xffd90f83
  4182ee:	add    BYTE PTR [edx-0x33ff000e],ch
  4182f4:	std    
  4182f5:	add    BYTE PTR [ebx-0x1],ch
  4182f8:	fnstsw WORD PTR [ebx+eax*4]
  4182fb:	cmp    eax,0xe7ff00ff
  418300:	mov    edi,edi
  418302:	mov    DWORD PTR [ebx-0x5ffff5],eax
  418308:	sub    BYTE PTR [ebp-0xe9ae01],cl
  41830e:	dec    ecx
  418310:	dec    ecx
  418311:	inc    DWORD PTR [eax]
  418313:	inc    DWORD PTR [edi-0x1]
  418316:	popf   
  418317:	jmp    eax
  418319:	jecxz  0x41831a
  41831b:	push   ecx
  41831c:	aam    0xff
  41831e:	cmp    esp,0xffffffb3
  418321:	int3   
  418322:	inc    DWORD PTR [eax]
  418324:	and    al,0xff
  418326:	aas    
  418327:	inc    DWORD PTR [edi+edx*2-0x1]
  41832b:	mov    ecx,0xa7ffcc7b
  418330:	inc    edi
  418331:	int3   
  418332:	cmp    edi,0x8
  418335:	add    BYTE PTR [edi],bl
  418337:	int3   
  418338:	fwait
  418339:	jge    0x41833b
  41833b:	lods   al,BYTE PTR ds:[esi]
  41833c:	ins    DWORD PTR es:[edi],dx
  41833d:	inc    DWORD PTR [eax]
  41833f:	aaa    
  418340:	cmp    bh,bh
  418342:	add    BYTE PTR [eax],al
  418344:	inc    ebp
  418345:	int3   
  418346:	cmp    eax,0xccf08a00
  41834b:	mov    cl,0x65
  41834d:	add    bh,bh
  41834f:	xor    eax,esi
  418351:	add    bh,bh
  418353:	call   DWORD PTR [esi-0x1]
  418356:	xchg   edi,eax
  418357:	jmp    DWORD PTR ds:0x9d36ff79
  41835d:	add    bh,bh
  41835f:	xchg   BYTE PTR [edi-0xf000001],bl
  418365:	jmp    eax
  418367:	add    ah,bl
  418369:	sar    edi,1
  41836b:	push   es
  41836c:	add    bh,bh
  41836e:	push   esp
  418370:	xor    eax,DWORD PTR [ebx-0x76bb0100]
  418376:	xchg   bh,bh
  418378:	xchg   esi,eax
  418379:	aaa    
  41837a:	call   DWORD PTR [esp+ecx*4+0x62b1ffff]
  418381:	add    BYTE PTR [eax],al
  418383:	(bad)  
  418384:	jg     0x418385
  418386:	cmp    bh,bh
  418388:	cld    
  418389:	dec    esp
  41838a:	sub    ebx,0x2f
  41838d:	mov    edi,edi
  41838f:	jg     0x418312
  418391:	add    bh,bh
  418393:	(bad)  
  418394:	jg     0x418362
  418396:	je     0x418397
  418398:	jmp    0xffff:0x68faff1c
  41839f:	adc    BYTE PTR [esi+0x0],ah
  4183a2:	cmp    edi,0x6c
  4183a5:	add    cl,ah
  4183a7:	push   ecx
  4183a9:	(bad)  
  4183aa:	call   DWORD PTR [ebx-0x2f]
  4183ad:	(bad)  
  4183ae:	call   edi
  4183b0:	and    esp,ecx
  4183b2:	(bad)  
  4183b3:	(bad)  
  4183b4:	fcos   
  4183b6:	pushf  
  4183b7:	jmp    FWORD PTR [edi+0x66]
  4183ba:	add    BYTE PTR [ebx-0x6fffffe0],bh
  4183c0:	pusha  
  4183c1:	mov    DWORD PTR [eax],eax
  4183c3:	(bad)  
  4183c4:	cmp    al,0x83
  4183c6:	inc    ecx
  4183c7:	call   DWORD PTR [esi-0x75]
  4183ca:	int3   
  4183cb:	jge    0x4183da
  4183cd:	inc    DWORD PTR [eax]
  4183cf:	mov    ecx,0xff96
  4183d4:	(bad)  
  4183d5:	jmp    DWORD PTR [edi-0x76b6a377]
  4183db:	mov    eax,ds:0x4383ffd2
  4183e0:	jmp    0x1a4182e5
  4183e5:	add    BYTE PTR [ecx],bh
  4183e7:	dec    ebp
  4183e9:	cmc    
  4183ea:	add    bh,al
  4183ec:	test   eax,0xa09d00ff
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	xor    DWORD PTR [edi],0x0
  4183f6:	imul   edi,edi,0xe00aa1d
  4183fc:	xchg   ecx,eax
  4183fd:	add    ah,cl
  4183ff:	cmc    
  418400:	xchg   ebx,eax
  418401:	add    bh,bh
  418403:	inc    DWORD PTR [ebp-0x1]
  418406:	mov    eax,ds:0x6aabff
  41840b:	mov    edi,0x74ccff50
  418410:	inc    ebx
  418411:	int3   
  418412:	add    bh,bh
  418414:	out    dx,eax
  418415:	sub    DWORD PTR [ebp-0x3376ca34],0x5d
  41841c:	pop    ebp
  41841d:	add    BYTE PTR [eax],al
  41841f:	inc    ecx
  418420:	cmp    al,0xcc
  418422:	add    BYTE PTR [ecx-0xe03316],cl
  418428:	mov    ebx,ds
  41842a:	add    BYTE PTR [esp+ebx*1],bh
  41842d:	add    DWORD PTR [eax],0xffffffd2
  418430:	adc    BYTE PTR [eax],al
  418432:	inc    DWORD PTR [eax]
  418434:	jmp    0x1b40e838
  418439:	je     0x41843a
  41843b:	rcr    BYTE PTR [ecx],cl
  41843d:	inc    DWORD PTR [eax]
  41843f:	jp     0x418475
  418441:	int3   
  418442:	inc    DWORD PTR [eax]
  418444:	(bad)  
  418445:	jmp    DWORD PTR [eax-0x1]
  418448:	pop    ds
  418449:	icebp  
  41844a:	add    BYTE PTR [edx+0x5a],al
  41844d:	add    bh,bh
  41844f:	xchg   ebx,eax
  418450:	fiadd  DWORD PTR [eax]
  418452:	(bad)  
  418453:	call   FWORD PTR [eax]
  418455:	int3   
  418456:	cmp    eax,0xe46dff
  41845b:	aaa    
  41845c:	jmp    0x41845d
  41845e:	push   DWORD PTR [ecx]
  418460:	call   0x20ff:0x6ecc0000
  418467:	add    BYTE PTR [edi-0x57c77699],bh
  41846d:	add    ah,cl
  41846f:	cdq    
  418470:	jnp    0x4183f5
  418472:	(bad)  
  418473:	dec    esi
  418475:	add    BYTE PTR [ebx-0x332bc234],bh
  41847b:	jne    0x418473
  41847d:	int3   
  41847e:	add    BYTE PTR [eax-0x7c00f7],dh
  418484:	scas   al,BYTE PTR es:[edi]
  418485:	cmp    DWORD PTR [esi-0x1],0x40
  418489:	push   ebx
  41848a:	call   FWORD PTR [ebp+0x5e838905]
  418490:	ins    BYTE PTR es:[edi],dx
  418491:	add    bh,bh
  418493:	xor    eax,0x0
  418496:	jmp    0x840a7f67
  41849b:	fwait
  41849c:	sub    eax,0xe926ffff
  4184a1:	dec    DWORD PTR [ecx-0x59ff7601]
  4184a7:	add    BYTE PTR [ebp-0x33],bh
  4184aa:	jmp    FWORD PTR [edx]
  4184ac:	cmp    edi,0x3ca4ff
  4184b2:	int3   
  4184b3:	int3   
  4184b4:	mov    edi,edi
  4184b6:	xchg   esi,eax
  4184b7:	mov    edi,esi
  4184b9:	ja     0x4184ba
  4184bb:	jns    0x418486
  4184bd:	int3   
  4184be:	call   DWORD PTR [esi-0x24]
  4184c1:	(bad)  
  4184c2:	(bad)  
  4184c3:	push   DWORD PTR ds:0xd7ff3ccc
  4184c9:	(bad)  
  4184ca:	inc    DWORD PTR [esi+0x5effff2a]
  4184d0:	sub    esp,ecx
  4184d2:	int3   
  4184d3:	add    BYTE PTR [eax+0x43ff3900],ah
  4184d9:	pop    DWORD PTR [eax]
  4184db:	add    DWORD PTR [ebp-0x1],eax
  4184de:	inc    DWORD PTR [edi-0x5d]
  4184e1:	mov    edi,edi
  4184e3:	add    BYTE PTR [ebp+0x0],bh
  4184e6:	dec    edx
  4184e7:	jmp    esi
  4184e9:	pop    ds
  4184ea:	jmp    DWORD PTR [ecx+0x74ffffed]
  4184f0:	mov    eax,ds:0x8f00ffff
  4184f5:	inc    DWORD PTR [ebx+0xc78bff]
  4184fb:	mov    bl,0x10
  4184fd:	int3   
  4184fe:	add    BYTE PTR [edi-0x33],cl
  418501:	(bad)  
  418502:	inc    DWORD PTR [ebx-0x4eff08]
  418508:	daa    
  418509:	add    BYTE PTR ds:[ebx-0x66],ch
  41850d:	cmp    edi,0xffffffb3
  418510:	sbb    eax,0xbd83ff89
  418515:	xor    ebp,0xffffffff
  418518:	lea    ebp,[ebx]
  41851a:	call   DWORD PTR [edi+0x37]
  41851d:	(bad)  
  41851e:	call   DWORD PTR [edi+edi*8+0x0]
  418522:	(bad)  
  418523:	push   DWORD PTR [edx-0x7d]
  418526:	or     BYTE PTR [eax],al
  418528:	jae    0x41851c
  41852a:	dec    esp
  41852c:	call   0xff:0x3ec100ff
  418533:	(bad)  
  418534:	cli    
  418535:	add    BYTE PTR [edi],ah
  418537:	call   FWORD PTR [ecx+0x51]
  41853a:	inc    edx
  41853c:	add    eax,0x77fd0083
  418541:	(bad)  
  418542:	(bad)  
  418543:	dec    DWORD PTR [ebp+0x3e836b00]
  418549:	dec    ebp
  41854a:	mov    ebx,ebx
  41854c:	retf   0xff00
  41854f:	out    dx,al
  418550:	mov    ch,0x0
  418552:	(bad)  
  418553:	(bad)  
  418554:	mov    ebp,0xaf89ceff
  418559:	aas    
  41855a:	mov    esi,edx
  41855c:	inc    esp
  41855d:	add    BYTE PTR [ecx-0xffe8cc],cl
  418563:	add    BYTE PTR [ecx],dl
  418565:	inc    DWORD PTR [edx+0x0]
  418568:	fisttp WORD PTR [edx-0x77]
  41856b:	and    esp,DWORD PTR [ebx-0x1]
  41856e:	cmp    DWORD PTR [eax+eiz*4+0x0],0xffffffff
  418573:	jmp    DWORD PTR [ebx]
  418575:	add    al,cl
  418577:	mov    ecx,edi
  418579:	dec    ebp
  41857a:	add    BYTE PTR [ebx+0x4dff833e],al
  418580:	imul   edi,edi,0xffffffff
  418583:	add    BYTE PTR [ecx],bh
  418585:	add    BYTE PTR [ecx+ecx*4],bl
  418588:	ins    BYTE PTR es:[edi],dx
  418589:	sbb    DWORD PTR [eax],eax
  41858b:	into   
  41858c:	mov    esp,0xef5dffff
  418591:	add    bh,bh
  418593:	int3   
  418594:	dec    edx
  418595:	mov    DWORD PTR [edi+edi*8+0x35],edi
  418599:	mov    edi,?
  41859b:	inc    esp
  41859c:	dec    eax
  41859d:	(bad)  
  41859e:	call   FWORD PTR [ebx-0x3e]
  4185a1:	(bad)  
  4185a2:	inc    DWORD PTR [eax]
  4185a4:	out    dx,al
  4185a5:	add    BYTE PTR [edi-0x34],ch
  4185a8:	arpl   WORD PTR [edx+0x0],di
  4185ab:	mov    al,0x6a
  4185ad:	add    BYTE PTR [eax],al
  4185af:	sub    DWORD PTR [eax+eax*1],ecx
  4185b2:	dec    esp
  4185b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b5:	call   DWORD PTR [ebx-0x1]
  4185b8:	repnz pushf 
  4185ba:	dec    DWORD PTR [esi-0xeff005b]
  4185c0:	jo     0x4185c2
  4185c2:	cmp    edi,0xffffffcc
  4185c5:	add    DWORD PTR ds:0xff828aff,0x3d
  4185cc:	ret    
  4185cd:	inc    DWORD PTR [eax]
  4185cf:	push   esp
  4185d0:	mov    cl,0x89
  4185d2:	mov    edi,edi
  4185d4:	lahf   
  4185d5:	inc    eax
  4185d7:	call   FWORD PTR [ebp+0x15]
  4185da:	add    dl,ch
  4185dc:	mov    dh,0xff
  4185de:	call   DWORD PTR [eax+0x83ff2f]
  4185e4:	and    BYTE PTR [eax],al
  4185e6:	(bad)  
  4185e7:	inc    DWORD PTR [esp+ecx*8-0x1]
  4185eb:	lahf   
  4185ec:	leave  
  4185ed:	inc    DWORD PTR [ebx-0x3314c2]
  4185f3:	jmp    DWORD PTR [ebp+0x22ffac00]
  4185f9:	mov    bh,0xff
  4185fb:	add    eax,esi
  4185fd:	int3   
  4185fe:	push   DWORD PTR [edi+0x1b]
  418601:	add    DWORD PTR [ebx+0x31008700],0x0
  418608:	int3   
  418609:	fisttp WORD PTR [ecx-0xff2db9]
  41860f:	mov    ds:0x83ff00c2,eax
  418614:	dec    esp
  418615:	add    BYTE PTR [edi-0x77],al
  418618:	sub    cl,BYTE PTR [ebx-0x34]
  41861b:	repz add DWORD PTR fs:[eax],0xd
  418620:	retf   0xff00
  418623:	add    BYTE PTR [edi+edi*8+0x7f],ch
  418627:	adc    DWORD PTR [eax+0x80eff08],0xffffff83
  41862e:	inc    DWORD PTR [esi]
  418630:	pop    ss
  418631:	add    BYTE PTR [ebx-0x357cb700],al
  418637:	mov    esp,edx
  418639:	cld    
  41863a:	mov    DWORD PTR [esi],ecx
  41863c:	mov    es,WORD PTR [eax]
  41863e:	(bad)  
  41863f:	(bad)  
  418640:	call   0xbb418744
  418645:	add    BYTE PTR [eax-0x77],dh
  418648:	mov    bh,0x92
  41864a:	mov    DWORD PTR [esi],esi
  41864c:	pop    ss
  41864d:	add    bh,bh
  41864f:	pusha  
  418650:	test   al,0x83
  418652:	(bad)  
  418653:	push   DWORD PTR [esi]
  418655:	add    BYTE PTR [eax-0x3f1d01],ch
  41865b:	inc    ebp
  41865c:	inc    esi
  41865d:	add    BYTE PTR [eax],al
  41865f:	jmp    DWORD PTR [ecx]
  418661:	inc    DWORD PTR [eax]
  418663:	add    cl,dh
  418665:	add    BYTE PTR [ecx-0x7d],dh
  418668:	adc    al,0xe0
  41866a:	dec    DWORD PTR [ebx]
  41866c:	push   ecx
  41866d:	inc    DWORD PTR [eax]
  41866f:	add    eax,0x83ff0089
  418674:	pop    esp
  418675:	inc    DWORD PTR [eax-0x76609301]
  41867b:	mov    ecx,0xa6ff00f9
  418680:	jae    0x418681
  418682:	inc    DWORD PTR [ebx-0x3354ff22]
  418688:	clc    
  418689:	jbe    0x41868a
  41868b:	ret    
  41868c:	mov    edi,0x939fffff
  418691:	add    BYTE PTR [eax],al
  418693:	(bad)  
  418694:	fiadd  DWORD PTR [eax]
  418696:	adc    eax,0x83b7c3ff
  41869b:	mov    eax,0x56ff00df
  4186a0:	das    
  4186a1:	(bad)  
  4186a2:	inc    DWORD PTR [eax]
  4186a4:	cwde   
  4186a5:	jmp    ebx
  4186a7:	add    BYTE PTR [ecx+0x4147ff63],cl
  4186ad:	add    BYTE PTR [ebx-0xe5ea],al
  4186b3:	int3   
  4186b4:	inc    ebx
  4186b5:	call   DWORD PTR [ebp+0x0]
  4186b8:	outs   dx,BYTE PTR ds:[esi]
  4186b9:	pushf  
  4186ba:	push   edi
  4186bc:	add    eax,DWORD PTR [eax]
  4186be:	jmp    FWORD PTR [esi]
  4186c0:	and    al,BYTE PTR [eax]
  4186c2:	inc    DWORD PTR [eax]
  4186c4:	jecxz  0x418692
  4186c6:	rol    DWORD PTR [eax],0xff
  4186c9:	add    BYTE PTR es:[ebx],bl
  4186cc:	push   ss
  4186cd:	inc    DWORD PTR [ebx-0x7cffeac8]
  4186d3:	push   DWORD PTR [eax-0x39004700]
  4186d9:	iret   
  4186da:	inc    edx
  4186dc:	mov    dl,0x89
  4186de:	add    BYTE PTR ds:0x83ff833c,dl
  4186e4:	inc    DWORD PTR [eax]
  4186e6:	adc    BYTE PTR [eax],al
  4186e8:	cdq    
  4186e9:	push   cs
  4186ea:	add    BYTE PTR ds:0xc7000087,ah
  4186f0:	mov    edi,0x16ffff83
  4186f5:	add    BYTE PTR [esi+0x0],bh
  4186f8:	jl     0x4186e1
  4186fa:	inc    DWORD PTR [ebx-0x6e]
  4186fd:	add    BYTE PTR [eax],al
  4186ff:	hlt    
  418700:	adc    eax,0x5ff00ff
  418705:	call   FWORD PTR [edx-0x1]
  418708:	push   eax
  418709:	xchg   ebx,eax
  41870a:	int3   
  41870b:	retf   
  41870c:	ja     0x41870e
  41870e:	add    DWORD PTR [eax+0x8983df],0x7f
  418715:	mov    DWORD PTR [edx-0x1],ebp
  418718:	loop   0x4186c0
  41871a:	sub    DWORD PTR [edx+0x14],0xffffffff
  41871e:	jmp    FWORD PTR [esi+0x54]
  418721:	cmp    edi,0x0
  418724:	xchg   ebp,eax
  418725:	add    DWORD PTR [ebx-0xc4ae34],0xfffffffb
  41872c:	sbb    al,0xff
  41872e:	jmp    DWORD PTR [ecx+0x69]
  418731:	add    BYTE PTR [eax],al
  418733:	add    BYTE PTR [ecx],cl
  418735:	dec    DWORD PTR [ecx]
  418737:	add    BYTE PTR [ebp-0x6a],dl
  41873a:	call   FWORD PTR [eax]
  41873c:	daa    
  41873d:	(bad)  
  41873e:	call   FWORD PTR [edi-0x11]
  418741:	inc    DWORD PTR [ebx+0x6600feff]
  418747:	add    BYTE PTR [ebp-0xc],dh
  41874a:	add    BYTE PTR [ecx+0x5d],al
  41874d:	add    BYTE PTR [eax],al
  41874f:	test   eax,0xffffffc2
  418754:	mov    ebx,0x5bff23ff
  418759:	cwde   
  41875a:	add    DWORD PTR [ebx],0xffffff8b
  41875d:	dec    esp
  41875f:	rcr    esi,0xff
  418762:	int3   
  418763:	call   DWORD PTR [ecx-0x7d]
  418766:	iret   
  418767:	xor    DWORD PTR [edi-0x61],0x0
  41876b:	jnp    0x418702
  41876d:	cmp    edi,0xffffffeb
  418770:	sahf   
  418771:	(bad)  
  418772:	inc    DWORD PTR [eax]
  418774:	aas    
  418775:	call   DWORD PTR ds:0xff0a3c00
  41877b:	and    BYTE PTR [ecx],al
  41877d:	inc    DWORD PTR [ebx+0x895e78]
  418783:	mov    DWORD PTR [eax+eax*1+0x246a0048],esi
  41878a:	jmp    DWORD PTR [eax+ebx*8-0x1]
  41878e:	call   DWORD PTR [edx+eax*1-0x3ff0001]
  418795:	adc    DWORD PTR [edi+edi*8+0x7f00817d],0xffffff92
  41879d:	add    bh,bh
  41879f:	stos   DWORD PTR es:[edi],eax
  4187a0:	mov    esi,0x4200ffff
  4187a5:	dec    DWORD PTR [esp+ecx*8-0x5bff70cd]
  4187ac:	pop    eax
  4187ad:	add    bh,bh
  4187af:	xchg   ebp,eax
  4187b0:	repnz add BYTE PTR [ecx+0x46ff45ff],cl
  4187b7:	inc    DWORD PTR [ebx]
  4187b9:	or     DWORD PTR fs:[ebx-0x3600002c],0x31
  4187c1:	add    BYTE PTR [ebx-0x6c334b00],al
  4187c7:	jmp    FWORD PTR [ebp+0x68]
  4187ca:	call   FWORD PTR [edx]
  4187cc:	jnp    0x4187ce
  4187ce:	call   DWORD PTR [esi+0xff8329]
  4187d4:	pushf  
  4187d5:	int3   
  4187d6:	in     al,0x0
  4187d8:	popa   
  4187d9:	and    eax,DWORD PTR [ebx-0xffbcac]
  4187df:	enter  0xff10,0xff
  4187e3:	dec    DWORD PTR [ebx-0x1]
  4187e6:	jo     0x4187e7
  4187e8:	clc    
  4187e9:	add    DWORD PTR [eax],0x8300ef1f
  4187ef:	pop    edi
  4187f0:	jp     0x4187f1
  4187f2:	cmp    edi,0xfffffff9
  4187f5:	inc    DWORD PTR [ecx+0x0]
  4187f8:	inc    ebx
  4187f9:	jno    0x4187fa
  4187fb:	out    dx,eax
  4187fc:	inc    ecx
  4187fd:	inc    DWORD PTR [eax]
  4187ff:	into   
  418800:	adc    edi,edi
  418802:	mov    edi,edi
  418804:	stc    
  418805:	inc    DWORD PTR [ebx]
  418807:	add    dh,al
  418809:	adc    bh,bh
  41880b:	xor    esp,DWORD PTR [eax-0x7ae6ff01]
  418811:	(bad)  
  418812:	inc    DWORD PTR [ebx-0xc50021]
  418818:	hlt    
  418819:	in     eax,0xff
  41881b:	push   ebp
  41881c:	sub    bh,bh
  41881e:	int3   
  41881f:	jge    0x4187db
  418821:	inc    DWORD PTR [eax]
  418823:	push   DWORD PTR [ebx]
  418825:	(bad)  
  418826:	sti    
  418827:	inc    edi
  418829:	jno    0x41882b
  41882b:	je     0x418851
  41882d:	mov    DWORD PTR [eax],eax
  41882f:	ret    0xcc22
  418832:	add    BYTE PTR [ebx-0x7c5fff0e],al
  418838:	fsubr  DWORD PTR [esp+ecx*8-0x1a]
  41883c:	sub    bh,bh
  41883e:	jmp    DWORD PTR [ebx]
  418840:	call   0xa94188ce
  418845:	add    BYTE PTR [edi],bl
  418847:	or     DWORD PTR [esi+0x55],0xffffff83
  41884b:	or     ecx,DWORD PTR [ebx+0x0]
  41884e:	call   DWORD PTR [ebp+0xff0055]
  418854:	popa   
  418855:	add    cl,ch
  418857:	mov    DWORD PTR [ecx+edi*4-0x298701],ebp
  41885e:	xor    ebx,0x23
  418861:	int3   
  418862:	inc    DWORD PTR [eax]
  418864:	fwait
  418865:	(bad)  
  418866:	cmp    DWORD PTR [eax],eax
  418868:	stos   BYTE PTR es:[edi],al
  418869:	out    0xff,al
  41886b:	fwait
  41886c:	mov    esp,ecx
  41886e:	add    BYTE PTR [esi+edi*1],al
  418871:	add    bh,bh
  418873:	add    BYTE PTR [ebx],bh
  418875:	mov    DWORD PTR [edx-0x1],ecx
  418878:	jns    0x418820
  41887a:	int3   
  41887b:	(bad)  
  41887c:	sar    bh,1
  41887e:	dec    DWORD PTR [ebx]
  418880:	les    eax,FWORD PTR [eax]
  418882:	int3   
  418883:	mov    DWORD PTR [esi+0x7d838dff],eax
  418889:	add    al,0x83
  41888b:	pop    ebp
  41888c:	or     bh,bh
  41888e:	call   FWORD PTR [ecx+0x4a]
  418894:	sar    edi,cl
  418896:	jg     0x418898
  418898:	lds    ecx,FWORD PTR [ebp-0xf21c01]
  41889e:	add    BYTE PTR [ecx-0x76000073],bl
  4188a4:	mov    ecx,0xa600ec00
  4188a9:	adc    BYTE PTR [eax],al
  4188ab:	and    eax,0xe9cc0077
  4188b0:	sub    edi,edi
  4188b2:	add    bh,bh
  4188b4:	mov    edi,?
  4188b6:	mov    dh,0xff
  4188b8:	(bad)  
  4188b9:	hlt    
  4188ba:	push   DWORD PTR [ecx-0x3b000086]
  4188c0:	inc    esp
  4188c1:	inc    DWORD PTR [eax]
  4188c3:	jmp    FWORD PTR [ebx]
  4188c5:	call   DWORD PTR [eax]
  4188c7:	call   DWORD PTR [eax-0x8b17689]
  4188cd:	add    BYTE PTR [ebx-0x335148],al
  4188d3:	int3   
  4188d4:	xchg   ebp,eax
  4188d5:	(bad)  
  4188d6:	out    dx,al
  4188d7:	call   ebx
  4188d9:	icebp  
  4188da:	mov    DWORD PTR [edi],edi
  4188dc:	test   al,0x0
  4188de:	add    BYTE PTR [ecx-0x64],dh
  4188e1:	(bad)  
  4188e2:	(bad)  
  4188e3:	call   DWORD PTR [esi-0x187c8d00]
  4188e9:	inc    edi
  4188ea:	jmp    FWORD PTR [ebp-0x14]
  4188ed:	dec    esp
  4188ef:	push   ebx
  4188f0:	pop    eax
  4188f1:	add    DWORD PTR [ebx+0x4f835c00],0x0
  4188f8:	loope  0x4188f5
  4188fa:	mov    DWORD PTR [ecx-0x63],eax
  4188fd:	cmp    edi,0xffffffe3
  418900:	jmp    0x418901
  418902:	add    BYTE PTR [eax],al
  418904:	scas   al,BYTE PTR es:[edi]
  418905:	dec    ebx
  418907:	add    BYTE PTR [esi-0x573a00ba],dh
  41890d:	inc    DWORD PTR [eax]
  41890f:	rcr    DWORD PTR [edi],0xff
  418912:	int3   
  418913:	add    BYTE PTR [eax-0x1],al
  418916:	or     al,0xff
  418918:	ficom  WORD PTR [ebp-0x1]
  41891b:	test   DWORD PTR [esp+ecx*8-0x368477],ebp
  418922:	int3   
  418923:	push   DWORD PTR ds:0x6900ca83
  418929:	(bad)  
  41892a:	(bad)  
  41892b:	fidiv  DWORD PTR [esi-0x1]
  41892e:	int3   
  41892f:	fwait
  418930:	test   eax,0x77cc8389
  418935:	sbb    DWORD PTR [esi+0x0],0xfffffffc
  418939:	test   eax,0xbe4b00
  41893e:	(bad)  
  41893f:	mov    edi,0x83ff0b
  418944:	in     al,0x0
  418946:	xor    ah,cl
  418948:	call   0x8300:0x48b5ff2d
  41894f:	mov    ?,WORD PTR [eax+eax*1+0x6fffff]
  418956:	pop    ss
  418957:	call   DWORD PTR [ecx]
  418959:	mov    esp,0xa75bcc
  41895e:	mov    ecx,edx
  418960:	sbb    BYTE PTR [eax],al
  418962:	inc    DWORD PTR [ebx+0x13ff3f]
  418968:	sti    
  418969:	dec    esp
  41896a:	add    BYTE PTR [ebx-0x47],dh
  41896d:	dec    DWORD PTR [ecx-0x1dc0]
  418973:	add    BYTE PTR [ecx-0x5e00d800],dh
  418979:	sahf   
  41897a:	add    BYTE PTR [edx-0x6e],bh
  41897d:	add    BYTE PTR [eax],al
  41897f:	(bad)  
  418980:	(bad)  
  418981:	mov    edi,edi
  418983:	inc    DWORD PTR [ebx]
  418985:	call   edi
  418987:	mov    edx,esi
  418989:	mov    dl,0xff
  41898b:	ins    BYTE PTR es:[edi],dx
  41898c:	dec    edi
  41898d:	add    ah,cl
  41898f:	jecxz  0x418968
  418991:	int3   
  418992:	add    BYTE PTR [eax],al
  418994:	aam    0xff
  418996:	dec    edx
  418997:	push   edx
  418999:	cmp    bh,bh
  41899b:	pop    ss
  41899c:	push   cs
  41899d:	add    BYTE PTR [eax],al
  41899f:	xor    eax,0xffffff3b
  4189a4:	add    eax,0x36ff96cc
  4189a9:	(bad)  
  4189aa:	call   FWORD PTR [ebx-0x50]
  4189ad:	dec    DWORD PTR [ecx-0x4e73]
  4189b3:	(bad)  
  4189b4:	in     eax,dx
  4189b5:	dec    DWORD PTR [eax-0x7d]
  4189b8:	loope  0x418972
  4189ba:	inc    DWORD PTR [edi+eax*4-0x7d]
  4189be:	call   FWORD PTR [ebp-0x2e]
  4189c1:	inc    DWORD PTR [eax]
  4189c3:	int3   
  4189c4:	and    bh,bh
  4189c6:	add    al,0x0
  4189c8:	inc    eax
  4189c9:	jb     0x4189ca
  4189cb:	lock ret 
  4189cd:	cmp    edi,0xffffffa9
  4189d0:	(bad)  
  4189d1:	(bad)  
  4189d2:	inc    DWORD PTR [eax]
  4189d4:	mov    cl,0x0
  4189d6:	lahf   
  4189d7:	dec    DWORD PTR [esi]
  4189d9:	push   cs
  4189da:	add    BYTE PTR [ecx-0xa],ah
  4189dd:	(bad)  
  4189de:	push   DWORD PTR [edi+0x9]
  4189e1:	add    DWORD PTR [ebx-0x2f767300],0x0
  4189e8:	cld    
  4189e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ea:	push   DWORD PTR ds:0x500000d3
  4189f0:	cmp    BYTE PTR [eax],al
  4189f2:	add    BYTE PTR [eax],al
  4189f4:	jp     0x4189c2
  4189f6:	mov    ah,0xff
  4189f8:	push   ebp
  4189f9:	ss add dh,dl
  4189fc:	pusha  
  4189fd:	inc    DWORD PTR [eax]
  4189ff:	xlat   BYTE PTR ds:[ebx]
  418a00:	iret   
  418a01:	add    BYTE PTR [ebx-0x23007900],al
  418a07:	add    al,bh
  418a09:	int3   
  418a0a:	xor    DWORD PTR [eax+0x52000067],0x2f
  418a11:	inc    DWORD PTR [eax]
  418a13:	(bad)  
  418a14:	jle    0x418a15
  418a16:	mov    bh,0xff
  418a18:	je     0x4189e1
  418a1a:	inc    DWORD PTR [esi]
  418a1c:	pop    ds
  418a1d:	inc    DWORD PTR [eax]
  418a1f:	xchg   ah,dl
  418a21:	inc    DWORD PTR [eax]
  418a23:	jmp    FWORD PTR [edx-0x1]
  418a26:	je     0x418a28
  418a28:	or     al,0x1d
  418a2a:	int3   
  418a2b:	outs   dx,DWORD PTR ds:[esi]
  418a2c:	lods   al,BYTE PTR ds:[esi]
  418a2d:	dec    esp
  418a2f:	jb     0x418a18
  418a31:	cmp    edi,0xffffffff
  418a34:	in     al,0xff
  418a36:	sub    DWORD PTR [ebx+0x30ffe14c],eax
  418a3c:	dec    ebp
  418a3d:	add    BYTE PTR [eax],al
  418a3f:	adc    DWORD PTR [eax],ebp
  418a41:	cmp    edi,0xffffffcc
  418a44:	mov    edi,edi
  418a46:	test   eax,0x831309ff
  418a4b:	inc    esp
  418a4c:	mov    eax,0x26a8ff89
  418a51:	inc    DWORD PTR [eax]
  418a53:	mov    DWORD PTR [eax+0x0],ebp
  418a56:	mov    bl,0x0
  418a58:	nop
  418a59:	cli    
  418a5a:	jmp    DWORD PTR [eax-0x67]
  418a5d:	(bad)  
  418a5e:	(bad)  
  418a5f:	jmp    0x418a4b
  418a61:	add    bh,bh
  418a63:	inc    DWORD PTR [edi+0x6f836483]
  418a69:	mov    ecx,DWORD PTR [ecx-0x7cff039a]
  418a6f:	mov    bh,0xd0
  418a71:	(bad)  
  418a72:	(bad)  
  418a73:	call   FWORD PTR [edx]
  418a75:	add    BYTE PTR [ecx],cl
  418a77:	push   DWORD PTR [eax+0x7b430072]
  418a7d:	int3   
  418a7e:	add    BYTE PTR [edi+eax*8-0x77],al
  418a82:	cmp    edi,0x70
  418a85:	add    BYTE PTR [eax-0x7d],bh
  418a88:	fld    DWORD PTR [ecx-0x7685d101]
  418a8e:	cmp    DWORD PTR [edx],0xffffffe2
  418a91:	add    bh,bh
  418a93:	sub    ebp,0x0
  418a96:	call   0x3bce:0xffb946ff
  418a9d:	add    DWORD PTR [eax],0x72
  418aa0:	cmp    al,BYTE PTR [eax]
  418aa2:	mov    edi,edi
  418aa4:	jl     0x418a2f
  418aa6:	sbb    al,0x0
  418aa8:	es mov cl,0x0
  418aab:	add    eax,0x4fff00f7
  418ab0:	sahf   
  418ab1:	cmp    edi,0xffffffff
  418ab4:	jge    0x418a39
  418ab6:	cmp    edi,edi
  418ab8:	jmp    0xff83:0x4bed83a5
  418abf:	jb     0x418a5a
  418ac1:	mov    DWORD PTR [eax],eax
  418ac3:	xor    DWORD PTR [edx],0xffffffff
  418ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac7:	dec    DWORD PTR [eax+0x55]
  418aca:	add    BYTE PTR [edx-0x1c007c02],cl
  418ad0:	push   edi
  418ad1:	dec    DWORD PTR [ecx+0x58890600]
  418ad7:	mov    DWORD PTR [edx-0xb],esi
  418ada:	add    BYTE PTR [ebx+eiz*4-0x717ff01],dh
  418ae1:	add    bh,bh
  418ae3:	dec    DWORD PTR [ebx-0x7d]
  418ae6:	push   edi
  418ae7:	push   DWORD PTR [ecx+0xb]
  418aea:	call   DWORD PTR [edi]
  418aec:	(bad)  
  418aed:	dec    esp
  418aef:	sbb    eax,0xffff8307
  418af4:	nop
  418af5:	(bad)  
  418af6:	out    dx,eax
  418af7:	add    BYTE PTR [ecx+0x79],dl
  418afa:	adc    esi,0xffffffae
  418afd:	(bad)  
  418afe:	push   eax
  418b00:	xchg   esi,eax
  418b01:	(bad)  
  418b02:	inc    DWORD PTR [ebx+0x658323]
  418b08:	jl     0x418ad7
  418b0a:	add    DWORD PTR [ebp+0x5],0xffffffff
  418b0e:	dec    DWORD PTR [ebx+0xffff2f]
  418b14:	xor    eax,0x44ffcbff
  418b19:	icebp  
  418b1a:	or     eax,0xffffffc8
  418b1d:	cmp    edi,0xffffff8e
  418b20:	jle    0x418aa5
  418b22:	inc    DWORD PTR [eax]
  418b24:	daa    
  418b25:	(bad)  
  418b26:	jnp    0x418b28
  418b28:	pop    eax
  418b29:	out    0x0,eax
  418b2b:	sbb    esi,DWORD PTR [eax]
  418b2d:	inc    DWORD PTR [eax]
  418b2f:	ins    DWORD PTR es:[edi],dx
  418b30:	mov    ecx,0x4b830083
  418b35:	(bad)  
  418b36:	fdivr  st,st(7)
  418b38:	push   cs
  418b39:	ja     0x418b3a
  418b3b:	xchg   ebx,eax
  418b3c:	repnz (bad) 
  418b3e:	inc    edi
  418b40:	retf   
  418b41:	(bad)  
  418b42:	inc    DWORD PTR [eax]
  418b44:	pop    eax
  418b45:	jmp    FWORD PTR [ebx+0x0]
  418b48:	sub    al,0x9b
  418b4a:	dec    DWORD PTR [ebx-0x6f000063]
  418b50:	rol    DWORD PTR [eax],1
  418b52:	inc    DWORD PTR [eax]
  418b54:	cdq    
  418b55:	push   eax
  418b57:	inc    DWORD PTR [ecx+0x5cd30053]
  418b5d:	dec    DWORD PTR [ecx-0x760031f6]
  418b63:	int3   
  418b64:	je     0x418ae9
  418b66:	mov    ch,0xff
  418b68:	daa    
  418b69:	dec    ecx
  418b6a:	add    BYTE PTR [esi-0x67],cl
  418b6d:	add    DWORD PTR [eax],0x5d
  418b70:	fld    QWORD PTR [eax]
  418b72:	add    bh,bh
  418b74:	jp     0x418b75
  418b76:	jae    0x418b78
  418b78:	icebp  
  418b79:	inc    esp
  418b7a:	dec    ebp
  418b7c:	sub    eax,0x7a3f0000
  418b81:	(bad)  
  418b82:	inc    DWORD PTR [eax]
  418b84:	sar    bh,cl
  418b86:	mov    bl,0xff
  418b88:	test   ebx,esi
  418b8a:	add    bl,ah
  418b8c:	add    eax,0xcff30083
  418b91:	dec    DWORD PTR [ecx-0x476eb7d]
  418b97:	call   FWORD PTR [esi-0x781cffa4]
  418b9d:	inc    DWORD PTR [eax]
  418b9f:	add    cl,bl
  418ba1:	inc    DWORD PTR [eax]
  418ba3:	add    BYTE PTR [eax+eax*1+0x60f7ff96],al
  418baa:	xor    esp,0x1a
  418bad:	add    BYTE PTR [eax],al
  418baf:	xor    DWORD PTR [edi+edi*8-0x1],ebx
  418bb3:	(bad)  
  418bb4:	fisttp QWORD PTR [ecx-0x3ddb00f9]
  418bba:	mov    DWORD PTR [edi+0x6d00ff8f],ebp
  418bc0:	jmp    0x73408cc4
  418bc5:	adc    DWORD PTR [ebx],0xffffffff
  418bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc9:	js     0x418bca
  418bcb:	and    cl,BYTE PTR [eax+eax*1-0x254600]
  418bd2:	add    bh,bh
  418bd4:	pop    edx
  418bd5:	push   DWORD PTR [ebp+0xfaeccc]
  418bdb:	xchg   ch,cl
  418bdd:	add    DWORD PTR [eax],0xffffff9d
  418be0:	add    bh,bh
  418be2:	dec    DWORD PTR [ecx+0x7d89fe]
  418be8:	fnsave [esi-0x1]
  418beb:	sbb    BYTE PTR [eax+0x216f0000],bl
  418bf1:	add    BYTE PTR [eax],al
  418bf3:	adc    DWORD PTR [ecx],0xffffffff
  418bf6:	in     eax,dx
  418bf7:	jmp    DWORD PTR [edx+0x5d]
  418bfa:	dec    DWORD PTR [esi-0x5cff00f6]
  418c00:	cdq    
  418c01:	inc    DWORD PTR [eax]
  418c03:	(bad)  
  418c04:	mov    ecx,0x2d00fcff
  418c09:	push   ds
  418c0a:	add    bh,al
  418c0c:	ins    BYTE PTR es:[edi],dx
  418c0d:	(bad)  
  418c0e:	(bad)  
  418c0f:	mov    edx,0xffff89
  418c14:	jb     0x418c16
  418c16:	sbb    al,0x0
  418c18:	xor    eax,esp
  418c1a:	call   DWORD PTR [ebp-0x3c0000eb]
  418c20:	sti    
  418c21:	add    bh,bh
  418c23:	call   FWORD PTR [ebx+0x35838e00]
  418c29:	dec    ebx
  418c2a:	add    BYTE PTR [edx+eiz*4-0x2b640001],bl
  418c31:	add    DWORD PTR [eax],0xffffffff
  418c34:	je     0x418bb9
  418c36:	jns    0x418c37
  418c38:	push   ss
  418c39:	(bad)  
  418c3a:	call   DWORD PTR [ebx-0x253333a6]
  418c40:	jo     0x418c41
  418c42:	int3   
  418c43:	(bad)  
  418c44:	jle    0x418c45
  418c46:	and    edi,edi
  418c48:	pushf  
  418c49:	and    edi,edi
  418c4b:	pop    ds
  418c4c:	or     edi,edi
  418c4e:	mov    DWORD PTR [ebx-0xff00b9],ecx
  418c54:	test   BYTE PTR [ecx-0x5a070021],0xff
  418c5b:	inc    esp
  418c5c:	nop
  418c5d:	add    ah,cl
  418c5f:	or     bl,dl
  418c61:	inc    DWORD PTR [eax]
  418c63:	mov    DWORD PTR [ebx+0x43ff99ff],esi
  418c69:	and    edi,edi
  418c6b:	ja     0x418ce3
  418c6d:	(bad)  
  418c6e:	call   DWORD PTR [edi-0x767cff3d]
  418c74:	dec    edi
  418c75:	mov    ebp,edx
  418c77:	mov    esp,ecx
  418c79:	ret    0x2300
  418c7c:	dec    edi
  418c7d:	(bad)  
  418c7e:	call   ecx
  418c80:	sub    edi,edi
  418c82:	add    BYTE PTR [eax],al
  418c84:	push   esp
  418c85:	push   DWORD PTR [ebx+eax*4]
  418c88:	xor    ecx,DWORD PTR [edx-0x1]
  418c8b:	sar    DWORD PTR [edi],0x0
  418c8e:	dec    DWORD PTR [ecx-0xb]
  418c91:	inc    DWORD PTR [eax]
  418c93:	sbb    DWORD PTR [esi-0x53ff6f00],0x6c
  418c9a:	add    BYTE PTR [ecx+0x7f83831b],al
  418ca0:	cmp    bh,bh
  418ca2:	inc    DWORD PTR [eax]
  418ca4:	cli    
  418ca5:	push   DWORD PTR [edx-0x1]
  418ca8:	mov    ch,0xd1
  418caa:	call   FWORD PTR [esi+edi*1]
  418cad:	cmp    edi,0xffffffcc
  418cb0:	dec    ecx
  418cb1:	dec    esp
  418cb3:	jmp    DWORD PTR [edi-0x1]
  418cb6:	or     al,BYTE PTR [eax]
  418cb8:	(bad)  
  418cb9:	push   ecx
  418cba:	add    BYTE PTR [eax-0x67],dh
  418cbd:	add    BYTE PTR [eax],al
  418cbf:	loope  0x418d03
  418cc1:	(bad)  
  418cc2:	inc    DWORD PTR [ebx-0x60334c]
  418cc8:	int    0x18
  418cca:	add    BYTE PTR [ebp+eax*1+0x6f13ff83],ch
  418cd1:	add    BYTE PTR [eax],al
  418cd3:	push   DWORD PTR [edx+0xaff43ff]
  418cd9:	push   es
  418cda:	add    al,bh
  418cdc:	push   ds
  418cdd:	dec    esp
  418cdf:	in     eax,0xc1
  418ce1:	mov    DWORD PTR [eax],eax
  418ce3:	int3   
  418ce4:	in     eax,0xcc
  418ce6:	(bad)  
  418ce8:	jns    0x418ce0
  418cea:	jmp    DWORD PTR [edi+0x47]
  418ced:	inc    DWORD PTR [ebx+0xffa184]
  418cf3:	dec    DWORD PTR [ebx-0x1]
  418cf6:	xchg   bh,bh
  418cf8:	pop    ss
  418cf9:	mov    ds:0xffb32dff,eax
  418cfe:	(bad)  
  418cff:	out    dx,eax
  418d00:	into   
  418d01:	mov    DWORD PTR [ebx+0x68894bff],eax
  418d07:	mov    DWORD PTR [ecx],edi
  418d09:	mov    DWORD PTR [eax],0xcc008cf4
  418d0f:	mov    eax,0xff0007
  418d14:	daa    
  418d15:	inc    DWORD PTR [ebp-0x227101]
  418d1b:	pop    eax
  418d1c:	mov    ebx,0x2bde0000
  418d21:	add    BYTE PTR [eax],al
  418d23:	dec    DWORD PTR [ebp+0x11ffd189]
  418d29:	mov    edi,0x418600
  418d2e:	add    BYTE PTR [esi+0x15],dh
  418d31:	inc    DWORD PTR [eax]
  418d33:	add    BYTE PTR [eax],al
  418d35:	adc    DWORD PTR [eax-0x34],0x3c
  418d39:	jno    0x418cbe
  418d3b:	(bad)  
  418d3c:	add    BYTE PTR ds:[ebx-0x36c8],al
  418d43:	dec    esi
  418d45:	add    BYTE PTR [eax],dl
  418d47:	int3   
  418d48:	adc    BYTE PTR [edi+edi*8+0x83e7],al
  418d4f:	stc    
  418d50:	sti    
  418d51:	inc    DWORD PTR [eax]
  418d53:	jmp    FWORD PTR [esi-0x1]
  418d56:	test   eax,0xe37acc
  418d5b:	or     eax,0xe38300b8
  418d60:	arpl   di,di
  418d62:	(bad)  
  418d63:	inc    DWORD PTR [ecx]
  418d65:	jmp    FWORD PTR [ebx+0x0]
  418d68:	cmp    esp,ebx
  418d6a:	jmp    DWORD PTR [esi+0x22]
  418d6d:	inc    DWORD PTR [ebx-0x7cffc466]
  418d73:	sub    DWORD PTR [ebx+0x15ff67ff],0xffffffa3
  418d7a:	call   FWORD PTR [ecx+esi*4+0x0]
  418d7e:	push   DWORD PTR [eax+0x2e]
  418d81:	int3   
  418d82:	(bad)  
  418d83:	call   FWORD PTR [ecx+0x36ff62ff]
  418d89:	inc    edx
  418d8a:	add    BYTE PTR [esi+0x5aff8323],cl
  418d90:	sbb    al,0x0
  418d92:	(bad)  
  418d93:	call   DWORD PTR [eax-0x77]
  418d96:	mov    ch,0x0
  418d98:	xor    al,BYTE PTR [ecx+ecx*4-0x6]
  418d9c:	xchg   ecx,eax
  418d9d:	add    ah,cl
  418d9f:	sbb    BYTE PTR [ebp-0x6d337c01],ah
  418da5:	sbb    esi,0xffffffff
  418da8:	xchg   ecx,eax
  418da9:	in     al,dx
  418daa:	add    dh,dh
  418dac:	mov    eax,0x2eccffff
  418db1:	int3   
  418db2:	add    DWORD PTR [eax],0x40
  418db5:	jmp    ebp
  418db7:	call   DWORD PTR [eax-0x10d3ffe2]
  418dbd:	add    DWORD PTR [eax],0xfffffffa
  418dc0:	or     al,BYTE PTR [eax]
  418dc2:	dec    esp
  418dc4:	in     eax,0x0
  418dc6:	mov    edi,0x8369c000
  418dcb:	and    al,0x4e
  418dcd:	add    DWORD PTR [eax],0xffffffb7
  418dd0:	adc    eax,0x28ff0000
  418dd5:	inc    DWORD PTR [ecx]
  418dd7:	mov    DWORD PTR [ebx],esp
  418dd9:	xor    eax,0xf293ff
  418dde:	inc    DWORD PTR [ebp+edi*4-0x53000001]
  418de5:	dec    esi
  418de7:	mov    DWORD PTR [ecx-0x18],edx
  418dea:	jmp    DWORD PTR [edx+0x26ffff29]
  418df0:	ins    BYTE PTR es:[edi],dx
  418df1:	int3   
  418df2:	add    bh,bh
  418df4:	test   BYTE PTR [eax],al
  418df6:	and    al,BYTE PTR [eax]
  418df8:	add    edx,0xffffffff
  418dfb:	int3   
  418dfc:	(bad)  
  418dfe:	call   FWORD PTR [edi-0x3a]
  418e01:	(bad)  
  418e02:	inc    DWORD PTR [eax]
  418e04:	sub    al,BYTE PTR [eax]
  418e06:	jne    0x418e08
  418e08:	aad    0xc8
  418e0a:	jmp    esp
  418e0c:	ret    
  418e0d:	(bad)  
  418e0e:	(bad)  
  418e0f:	cmp    esi,DWORD PTR [esi]
  418e11:	(bad)  
  418e12:	inc    DWORD PTR [ebx+0x93ccff]
  418e18:	cmp    eax,0xf1eaff53
  418e1d:	add    bh,bh
  418e1f:	pop    esi
  418e20:	cmc    
  418e21:	(bad)  
  418e22:	(bad)  
  418e23:	call   DWORD PTR [edx+0x70ff5800]
  418e29:	inc    BYTE PTR [eax]
  418e2b:	rol    BYTE PTR [ebx],0xff
  418e2e:	jmp    FWORD PTR [esi+0xffff41]
  418e34:	add    DWORD PTR [ecx-0xb387628],ecx
  418e3a:	mov    DWORD PTR [ebx+0x44ffff09],ebp
  418e40:	fwait
  418e41:	cmp    edi,0xffffffff
  418e44:	stc    
  418e45:	push   DWORD PTR [edi]
  418e47:	add    BYTE PTR [eax],bl
  418e49:	add    BYTE PTR ss:[esi+0x3e00ff18],al
  418e50:	and    edi,edi
  418e52:	(bad)  
  418e53:	call   FWORD PTR [edx-0x300c601]
  418e59:	fdivp  st(7),st
  418e5b:	cmp    ecx,ebx
  418e5d:	or     esp,0x75
  418e60:	cwde   
  418e61:	add    bh,bh
  418e63:	call   DWORD PTR [ebx]
  418e65:	(bad)  
  418e66:	stc    
  418e67:	(bad)  
  418e68:	(bad)  [esi]
  418e6a:	add    BYTE PTR [edi+0x2cffffeb],bl
  418e70:	outs   dx,BYTE PTR ds:[esi]
  418e71:	mov    edi,edi
  418e73:	(bad)  
  418e74:	cld    
  418e75:	dec    DWORD PTR [ebx]
  418e77:	add    DWORD PTR [edi-0x35],0x0
  418e7b:	pop    edi
  418e7c:	xchg   esp,eax
  418e7d:	inc    DWORD PTR [eax]
  418e7f:	jmp    0x83425ada
  418e84:	enter  0x23cc,0xff
  418e88:	add    dh,bh
  418e8a:	int3   
  418e8b:	fiadd  WORD PTR [edx-0x1]
  418e8e:	(bad)  
  418e8f:	mov    esp,0xffffff65
  418e94:	inc    ebx
  418e95:	dec    edx
  418e97:	xor    DWORD PTR [ecx],0xffffffa4
  418e9a:	inc    DWORD PTR [ecx-0x5e]
  418e9d:	(bad)  
  418e9e:	jmp    ecx
  418ea0:	or     ecx,esp
  418ea2:	dec    esp
  418ea4:	test   eax,0x78ff24ff
  418ea9:	push   esi
  418eaa:	push   DWORD PTR [edi+0x70000d7]
  418eb0:	cmc    
  418eb1:	cmp    edi,0xffffffff
  418eb4:	pushf  
  418eb5:	(bad)  
  418eb6:	jg     0x418eb8
  418eb8:	inc    ecx
  418eb9:	dec    ecx
  418eba:	call   DWORD PTR [ecx-0x1133fff0]
  418ec0:	add    BYTE PTR [eax],al
  418ec2:	(bad)  
  418ec3:	call   DWORD PTR [ebx-0x1]
  418ec6:	repz jmp FWORD PTR [ebp-0x2d93fffa]
  418ecd:	(bad)  
  418ece:	jmp    FWORD PTR ds:0x83ff83fd
  418ed4:	xor    eax,0xa8ffc3ff
  418ed9:	or     bh,bh
  418edb:	es and al,0xff
  418ede:	int3   
  418edf:	mov    ebp,0xffff0047
  418ee4:	push   eax
  418ee5:	add    BYTE PTR [ebp-0x1],al
  418ee8:	data16 call DWORD PTR [eax+0x6e]
  418eed:	(bad)  
  418eee:	inc    DWORD PTR [edi+0x4d]
  418ef1:	inc    DWORD PTR [eax]
  418ef3:	add    cl,ah
  418ef5:	inc    DWORD PTR [edi+0x0]
  418ef8:	cmp    bh,bl
  418efa:	mov    DWORD PTR [esi+0x40ffff2a],ebp
  418f00:	in     eax,0x0
  418f02:	add    BYTE PTR [ebx-0x7cbe00ea],al
  418f08:	in     eax,0xa4
  418f0a:	int3   
  418f0b:	scas   al,BYTE PTR es:[edi]
  418f0c:	cmp    cl,ah
  418f0e:	call   DWORD PTR [edx-0x31]
  418f11:	add    bh,bh
  418f13:	int3   
  418f14:	test   al,0xff
  418f16:	pop    ebp
  418f17:	add    BYTE PTR ds:0xf430ff6d,al
  418f1d:	inc    DWORD PTR [eax]
  418f1f:	or     ecx,DWORD PTR [ecx]
  418f21:	inc    DWORD PTR [eax]
  418f23:	jmp    DWORD PTR [ebx+eax*4+0x13]
  418f27:	push   DWORD PTR [edi-0x7e]
  418f2a:	call   DWORD PTR [edi+edx*1]
  418f2d:	(bad)  
  418f2e:	dec    DWORD PTR [ebp-0x76ff0096]
  418f34:	cwde   
  418f35:	dec    DWORD PTR [esi-0xb5c901]
  418f3b:	aas    
  418f3c:	mov    ch,0xff
  418f3e:	jmp    FWORD PTR [ebp-0x7cff6b]
  418f44:	idiv   bh
  418f46:	jae    0x418f48
  418f48:	scas   al,BYTE PTR es:[edi]
  418f49:	(bad)
  418f4d:	mov    DWORD PTR [eax],eax
  418f4f:	mov    es,WORD PTR cs:[ebx-0x700100]
  418f56:	xchg   ebx,eax
  418f57:	or     ebx,0xffffffe2
  418f5a:	call   ebp
  418f5c:	and    eax,DWORD PTR [eax]
  418f5e:	jmp    FWORD PTR [edi+edx*2-0x3eff7c01]
  418f65:	add    BYTE PTR [edi+edi*8],dh
  418f68:	pop    ss
  418f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f6a:	push   eax
  418f6c:	fiadd  WORD PTR [eax]
  418f6e:	add    BYTE PTR [esp+edi*4-0x34],al
  418f72:	(bad)  
  418f73:	(bad)  
  418f74:	cld    
  418f75:	call   DWORD PTR [edx]
  418f77:	and    DWORD PTR [edi-0x4a],0xffffff89
  418f7b:	dec    edi
  418f7c:	clc    
  418f7d:	cmp    edi,0x23
  418f80:	mov    dh,0x83
  418f82:	inc    DWORD PTR [eax]
  418f84:	xor    eax,DWORD PTR [eax]
  418f86:	inc    ebp
  418f87:	int3   
  418f88:	jnp    0x418f2d
  418f8a:	call   edi
  418f8c:	stc    
  418f8d:	(bad)  
  418f8e:	jmp    ecx
  418f90:	mov    DWORD PTR [eax],0xe389ff
  418f96:	dec    DWORD PTR ss:[esi+esi*4+0xd825ff]
  418f9e:	mov    esi,ebx
  418fa0:	sar    edi,1
  418fa2:	or     DWORD PTR [ecx-0xf2006b],0xffffff8e
  418fa9:	mov    ?,edi
  418fab:	pop    esi
  418fac:	dec    ebp
  418fad:	(bad)  
  418fae:	call   DWORD PTR [edi+0x6a]
  418fb1:	(bad)  
  418fb2:	(bad)  
  418fb3:	(bad)  
  418fb4:	js     0x418f39
  418fb6:	sbb    ah,cl
  418fb8:	and    edx,DWORD PTR [eax-0x8f3500]
  418fbe:	add    BYTE PTR [eax-0xff005d],bh
  418fc4:	xor    DWORD PTR [ebx+0x1398fff9],eax
  418fca:	xor    DWORD PTR [ebx],0xffffff89
  418fcd:	add    BYTE PTR [eax],al
  418fcf:	mov    ah,0x3c
  418fd1:	(bad)  
  418fd2:	(bad)  
  418fd3:	call   FWORD PTR [ecx-0x1]
  418fd6:	fild   WORD PTR [eax]
  418fd8:	push   ds
  418fd9:	enter  0x1a00,0x46
  418fdd:	add    BYTE PTR [ecx+0xffbade],cl
  418fe3:	jmp    FWORD PTR [edi+0x14ff20ff]
  418fe9:	jnp    0x418fb7
  418feb:	int    0x4
  418fed:	int3   
  418fee:	(bad)  
  418fef:	jmp    0x418fe2
  418ff1:	(bad)  
  418ff2:	(bad)  
  418ff3:	call   FWORD PTR [ebx+eax*4-0x19]
  418ff7:	sub    DWORD PTR [ecx],0xfffffffb
  418ffa:	add    BYTE PTR [edx],ch
  418ffc:	mov    esi,0x1205cc89
  419001:	add    DWORD PTR [ebx-0x1aff9d00],0xffffffcc
  419008:	imul   esi,DWORD PTR [ecx+0x673a00],0x0
  41900f:	mov    ecx,0xffffffe0
  419014:	outs   dx,DWORD PTR ds:[esi]
  419015:	dec    DWORD PTR [edx-0x7d]
  419018:	mov    esi,0x47738343
  41901d:	add    BYTE PTR [ebx-0x7cff5091],al
  419023:	add    bl,ch
  419025:	jmp    FWORD PTR [esi+0x0]
  419028:	dec    edx
  419029:	pop    es
  41902a:	sub    DWORD PTR [edi+eiz*4+0x43ac00ff],0xffffffff
  419032:	(bad)  
  419033:	inc    DWORD PTR [edi-0x6b000201]
  419039:	jae    0x418fbe
  41903b:	pop    esp
  41903c:	aad    0xff
  41903e:	int3   
  41903f:	repnz inc edi
  419041:	(bad)  
  419042:	inc    DWORD PTR [eax]
  419044:	cmp    al,0xff
  419046:	cmp    edi,0x62
  419049:	in     al,0x0
  41904b:	adc    eax,0x8ff832c
  419050:	in     al,dx
  419051:	inc    DWORD PTR [eax]
  419053:	add    DWORD PTR [ecx-0x7e002500],0x72
  41905a:	push   DWORD PTR [esi+0x6a]
  41905d:	inc    DWORD PTR [eax]
  41905f:	mov    WORD PTR [ebp+0x5d00cc00],cs
  419065:	int3   
  419066:	scas   al,BYTE PTR es:[edi]
  419067:	mov    DWORD PTR [edx-0x3f],edi
  41906a:	add    BYTE PTR [edx],dl
  41906c:	push   esi
  41906d:	dec    DWORD PTR [ecx-0xf714]
  419073:	add    BYTE PTR [eax+0x60ff3b83],bh
  419079:	std    
  41907a:	push   DWORD PTR [eax+0x5483ff2a]
  419080:	mov    DWORD PTR [eax],0xffc189ff
  419086:	cmp    bh,0x8a
  419089:	popa   
  41908a:	mov    eax,ebx
  41908c:	pop    ecx
  41908d:	mov    DWORD PTR [ebx-0x7c008f86],eax
  419093:	dec    DWORD PTR [ebx]
  419095:	xor    DWORD PTR [ebp-0x1],0xffffffe2
  419099:	cmp    BYTE PTR [ebx+0xfffa40],al
  41909f:	xor    BYTE PTR [ebx+eax*4-0xc97c01],cl
  4190a6:	sub    bh,bh
  4190a8:	lds    edi,FWORD PTR [ecx-0x1]
  4190ab:	pusha  
  4190ac:	stc    
  4190ad:	add    bh,bh
  4190af:	dec    ebx
  4190b0:	sbb    edi,edi
  4190b2:	add    ah,cl
  4190b4:	dec    ebx
  4190b5:	and    DWORD PTR [edi],0xffffff89
  4190b8:	pushf  
  4190b9:	js     0x4190bb
  4190bb:	jge    0x41904f
  4190bd:	cmp    edi,0x43
  4190c0:	cwde   
  4190c1:	add    bh,bh
  4190c3:	call   FWORD PTR [edi+0x0]
  4190c6:	jmp    0x4190c7
  4190c8:	in     al,dx
  4190c9:	dec    edx
  4190ca:	call   DWORD PTR [ecx-0xf003330]
  4190d0:	int3   
  4190d1:	add    BYTE PTR [ebx-0x6a001434],al
  4190d7:	mov    DWORD PTR [edi-0x7a5800d2],ecx
  4190dd:	(bad)  
  4190de:	jmp    FWORD PTR [ebp-0xff00a1]
  4190e4:	xchg   ecx,eax
  4190e5:	int3   
  4190e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e7:	or     DWORD PTR [edi],0xffffffd5
  4190ea:	mov    eax,eax
  4190ec:	adc    DWORD PTR [ebx-0xb25734],eax
  4190f2:	add    BYTE PTR [eax],al
  4190f4:	jbe    0x419079
  4190f6:	stos   BYTE PTR es:[edi],al
  4190f7:	jmp    ecx
  4190f9:	sub    edi,edi
  4190fb:	xor    bh,dh
  4190fd:	(bad)  
  4190fe:	jmp    DWORD PTR [ebp+0xff87]
  419104:	or     DWORD PTR fs:[esi-0xcf7e01],0xfffffff3
  41910c:	cmp    edi,edi
  41910e:	mov    DWORD PTR [ebx+0xffffca],ecx
  419114:	icebp  
  419115:	jmp    FWORD PTR [edi+edi*8+0x19ff6e4c]
  41911c:	ret    0xff00
  41911f:	xchg   esp,eax
  419120:	inc    DWORD PTR [bp+di+0xbff]
  419125:	and    DWORD PTR ds:0xff84aaff,0x62
  41912c:	inc    DWORD PTR cs:[eax]
  41912f:	xor    eax,0xff93
  419134:	jnp    0x419102
  419136:	mov    bh,bh
  419138:	fs (bad) 
  41913b:	mov    edx,0xe883836b
  419140:	push   ebp
  419141:	inc    DWORD PTR [eax]
  419143:	add    al,cl
  419145:	add    BYTE PTR [ebx],dh
  419147:	jmp    FWORD PTR [ecx-0x5743ffc2]
  41914d:	(bad)  
  41914e:	call   esi
  419150:	mov    ds:0xec0000ff,al
  419155:	mov    esi,ebp
  419157:	int3   
  419158:	mov    esp,0x8460ffe9
  41915d:	int3   
  41915e:	push   ebx
  419160:	cmp    eax,0x40ffffff
  419165:	and    DWORD PTR [ebx],0xffffffcc
  419168:	cmp    eax,0xa4eff01
  41916d:	or     DWORD PTR [ecx-0xff297e],0x0
  419174:	mov    al,ds:0x4e835a83
  419179:	jmp    0x419104
  41917b:	call   FWORD PTR [eax-0x77]
  41917e:	and    edi,0x34
  419181:	inc    DWORD PTR [ebx+0x46cc3eff]
  419187:	call   FWORD PTR [esi-0x1d5b004b]
  41918d:	(bad)  
  41918e:	jmp    edi
  419190:	adc    al,0x89
  419192:	add    bh,bh
  419194:	add    BYTE PTR [eax],0xfe
  419197:	adc    DWORD PTR [ebp-0x54],0x0
  41919b:	ret    
  41919c:	into   
  41919d:	dec    esp
  41919f:	xor    eax,0xff00cce9
  4191a4:	xor    al,0xff
  4191a6:	xor    al,0x0
  4191a8:	adc    al,BYTE PTR [eax+eax*1-0x7a]
  4191ac:	adc    al,0x0
  4191ae:	jmp    DWORD PTR [edi-0x3300ff9c]
  4191b4:	sub    bh,bh
  4191b6:	or     BYTE PTR [eax],al
  4191b8:	lods   eax,DWORD PTR ds:[esi]
  4191b9:	add    bh,bh
  4191bb:	int3   
  4191bc:	add    bh,bh
  4191be:	add    BYTE PTR [eax],al
  4191c0:	sub    esp,0x128
  4191c6:	push   ebx
  4191c7:	push   esi
  4191c8:	mov    esi,DWORD PTR ds:0x44400c
  4191ce:	push   edi
  4191cf:	push   0x4e
  4191d1:	push   0x42
  4191d3:	call   esi
  4191d5:	push   0x9d
  4191da:	push   0x42
  4191dc:	mov    DWORD PTR [esp+0x14],eax
  4191e0:	call   esi
  4191e2:	mov    DWORD PTR [esp+0x10],eax
  4191e6:	call   DWORD PTR ds:0x444044
  4191ec:	mov    DWORD PTR [esp+0x14],eax
  4191f0:	call   0x42d250
  4191f5:	mov    esi,DWORD PTR ds:0x447d00
  4191fb:	mov    ebx,DWORD PTR ds:0x444048
  419201:	mov    ecx,DWORD PTR ds:0x44703c
  419207:	add    esi,0x5f58
  41920d:	mov    edi,0x8b
  419212:	movzx  eax,BYTE PTR [ecx+0x5]
  419216:	movzx  edx,BYTE PTR [ecx+0x3]
  41921a:	movzx  ecx,WORD PTR [ecx+0x1]
  41921e:	shl    eax,0x8
  419221:	add    eax,edx
  419223:	mov    edx,DWORD PTR ds:0x447cfc
  419229:	shl    eax,0x10
  41922c:	add    eax,ecx
  41922e:	add    edx,0xba164643
  419234:	xor    edx,eax
  419236:	mov    ds:0x447cf0,eax
  41923b:	push   0x3e
  41923d:	mov    DWORD PTR [esi],edx
  41923f:	call   ebx
  419241:	mov    ecx,DWORD PTR ds:0x44703c
  419247:	movzx  eax,BYTE PTR [ecx+0xf]
  41924b:	movzx  edx,WORD PTR [ecx+0xd]
  41924f:	movzx  ecx,BYTE PTR [ecx+0x7]
  419253:	shl    eax,0x10
  419256:	add    eax,edx
  419258:	shl    eax,0x8
  41925b:	add    eax,ecx
  41925d:	mov    edx,0xba1e464b
  419262:	sub    edx,DWORD PTR ds:0x447cfc
  419268:	mov    ds:0x447cf0,eax
  41926d:	xor    edx,eax
  41926f:	mov    DWORD PTR [esi+0x4],edx
  419272:	mov    ecx,DWORD PTR ds:0x44703c
  419278:	add    ecx,0x10
  41927b:	add    esi,0x8
  41927e:	dec    edi
  41927f:	mov    DWORD PTR ds:0x44703c,ecx
  419285:	jne    0x419212
  419287:	mov    esi,DWORD PTR ds:0x447d00
  41928d:	mov    ecx,DWORD PTR ds:0x447040
  419293:	add    esi,0x63b0
  419299:	lea    edx,[edi+0x4f]
  41929c:	lea    esp,[esp+0x0]
  4192a0:	movzx  eax,BYTE PTR [ecx+0x5]
  4192a4:	movzx  edi,WORD PTR [ecx+0x3]
  4192a8:	movzx  ecx,BYTE PTR [ecx]
  4192ab:	shl    eax,0x10
  4192ae:	add    eax,edi
  4192b0:	shl    eax,0x8
  4192b3:	add    eax,ecx
  4192b5:	mov    ecx,DWORD PTR ds:0x447cfc
  4192bb:	mov    ds:0x447cf0,eax
  4192c0:	add    ecx,0x81abb48a
  4192c6:	xor    ecx,eax
  4192c8:	mov    DWORD PTR [esi],ecx
  4192ca:	mov    ecx,DWORD PTR ds:0x447040
  4192d0:	movzx  eax,BYTE PTR [ecx+0xc]
  4192d4:	movzx  edi,WORD PTR [ecx+0xa]
  4192d8:	movzx  ecx,BYTE PTR [ecx+0x8]
  4192dc:	shl    eax,0x10
  4192df:	add    eax,edi
  4192e1:	shl    eax,0x8
  4192e4:	add    eax,ecx
  4192e6:	mov    ds:0x447cf0,eax
  4192eb:	mov    ecx,0x81b3b492
  4192f0:	sub    ecx,DWORD PTR ds:0x447cfc
  4192f6:	xor    ecx,eax
  4192f8:	mov    DWORD PTR [esi+0x4],ecx
  4192fb:	mov    ecx,DWORD PTR ds:0x447040
  419301:	add    ecx,0x10
  419304:	mov    DWORD PTR ds:0x447040,ecx
  41930a:	movzx  eax,BYTE PTR [ecx+0x5]
  41930e:	movzx  edi,WORD PTR [ecx+0x3]
  419312:	movzx  ecx,BYTE PTR [ecx]
  419315:	shl    eax,0x10
  419318:	add    eax,edi
  41931a:	shl    eax,0x8
  41931d:	add    eax,ecx
  41931f:	mov    ecx,DWORD PTR ds:0x447cfc
  419325:	mov    ds:0x447cf0,eax
  41932a:	add    ecx,0x81abb48a
  419330:	xor    ecx,eax
  419332:	mov    DWORD PTR [esi+0x8],ecx
  419335:	mov    ecx,DWORD PTR ds:0x447040
  41933b:	movzx  eax,BYTE PTR [ecx+0xc]
  41933f:	movzx  edi,WORD PTR [ecx+0xa]
  419343:	movzx  ecx,BYTE PTR [ecx+0x8]
  419347:	shl    eax,0x10
  41934a:	add    eax,edi
  41934c:	shl    eax,0x8
  41934f:	add    eax,ecx
  419351:	mov    ds:0x447cf0,eax
  419356:	mov    ecx,0x81b3b492
  41935b:	sub    ecx,DWORD PTR ds:0x447cfc
  419361:	xor    ecx,eax
  419363:	mov    DWORD PTR [esi+0xc],ecx
  419366:	mov    ecx,DWORD PTR ds:0x447040
  41936c:	add    ecx,0x10
  41936f:	mov    DWORD PTR ds:0x447040,ecx
  419375:	movzx  eax,BYTE PTR [ecx+0x5]
  419379:	movzx  edi,WORD PTR [ecx+0x3]
  41937d:	movzx  ecx,BYTE PTR [ecx]
  419380:	shl    eax,0x10
  419383:	add    eax,edi
  419385:	shl    eax,0x8
  419388:	add    eax,ecx
  41938a:	mov    ecx,DWORD PTR ds:0x447cfc
  419390:	mov    ds:0x447cf0,eax
  419395:	add    ecx,0x81abb48a
  41939b:	xor    ecx,eax
  41939d:	mov    DWORD PTR [esi+0x10],ecx
  4193a0:	mov    ecx,DWORD PTR ds:0x447040
  4193a6:	movzx  eax,BYTE PTR [ecx+0xc]
  4193aa:	movzx  edi,WORD PTR [ecx+0xa]
  4193ae:	movzx  ecx,BYTE PTR [ecx+0x8]
  4193b2:	shl    eax,0x10
  4193b5:	add    eax,edi
  4193b7:	shl    eax,0x8
  4193ba:	add    eax,ecx
  4193bc:	mov    ecx,0x81b3b492
  4193c1:	sub    ecx,DWORD PTR ds:0x447cfc
  4193c7:	mov    ds:0x447cf0,eax
  4193cc:	xor    ecx,eax
  4193ce:	mov    DWORD PTR [esi+0x14],ecx
  4193d1:	mov    ecx,DWORD PTR ds:0x447040
  4193d7:	add    ecx,0x10
  4193da:	add    esi,0x18
  4193dd:	dec    edx
  4193de:	mov    DWORD PTR ds:0x447040,ecx
  4193e4:	jne    0x4192a0
  4193ea:	movzx  edx,BYTE PTR [ecx+0x5]
  4193ee:	movzx  eax,WORD PTR [ecx+0x3]
  4193f2:	movzx  ecx,BYTE PTR [ecx]
  4193f5:	shl    edx,0x10
  4193f8:	add    edx,eax
  4193fa:	shl    edx,0x8
  4193fd:	add    edx,ecx
  4193ff:	push   0x59
  419401:	mov    DWORD PTR ds:0x447cf0,edx
  419407:	call   ebx
  419409:	mov    eax,DWORD PTR [esp+0x138]
  419410:	mov    edx,0x81b3b492
  419415:	sub    edx,DWORD PTR ds:0x447cfc
  41941b:	xor    edx,DWORD PTR ds:0x447cf0
  419421:	mov    DWORD PTR [esi],edx
  419423:	mov    ecx,DWORD PTR ds:0x447d00
  419429:	add    ecx,0x6b1c
  41942f:	mov    esi,0x6d
  419434:	movzx  edx,BYTE PTR [eax+0x4]
  419438:	movzx  edi,WORD PTR [eax+0x2]
  41943c:	shl    edx,0x10
  41943f:	add    edx,edi
  419441:	movzx  edi,BYTE PTR [eax]
  419444:	shl    edx,0x8
  419447:	add    edx,edi
  419449:	mov    edi,DWORD PTR ds:0x447cfc
  41944f:	xor    edi,edx
  419451:	mov    DWORD PTR ds:0x447cf0,edx
  419457:	xor    edi,0x9849bdda
  41945d:	mov    DWORD PTR [ecx],edi
  41945f:	movzx  edx,BYTE PTR [eax+0xe]
  419463:	movzx  edi,BYTE PTR [eax+0x9]
  419467:	shl    edx,0x8
  41946a:	add    edx,edi
  41946c:	movzx  edi,WORD PTR [eax+0x6]
  419470:	shl    edx,0x10
  419473:	add    edx,edi
  419475:	mov    edi,DWORD PTR ds:0x447cfc
  41947b:	sub    edi,0x80040004
  419481:	neg    edi
  419483:	sbb    edi,edi
  419485:	and    edi,0xe7b26ec8
  41948b:	add    edi,0x184dbdde
  419491:	xor    edi,edx
  419493:	mov    DWORD PTR ds:0x447cf0,edx
  419499:	mov    DWORD PTR [ecx+0x4],edi
  41949c:	movzx  edx,BYTE PTR [eax+0x14]
  4194a0:	movzx  edi,WORD PTR [eax+0x12]
  4194a4:	shl    edx,0x10
  4194a7:	add    edx,edi
  4194a9:	movzx  edi,BYTE PTR [eax+0x10]
  4194ad:	shl    edx,0x8
  4194b0:	add    edx,edi
  4194b2:	mov    edi,DWORD PTR ds:0x447cfc
  4194b8:	xor    edi,edx
  4194ba:	xor    edi,0x9849bdda
  4194c0:	mov    DWORD PTR ds:0x447cf0,edx
  4194c6:	mov    DWORD PTR [ecx+0x8],edi
  4194c9:	movzx  edx,BYTE PTR [eax+0x1e]
  4194cd:	movzx  edi,BYTE PTR [eax+0x19]
  4194d1:	shl    edx,0x8
  4194d4:	add    edx,edi
  4194d6:	movzx  edi,WORD PTR [eax+0x16]
  4194da:	shl    edx,0x10
  4194dd:	add    edx,edi
  4194df:	mov    edi,DWORD PTR ds:0x447cfc
  4194e5:	sub    edi,0x80040004
  4194eb:	neg    edi
  4194ed:	sbb    edi,edi
  4194ef:	and    edi,0xe7b26ec8
  4194f5:	add    edi,0x184dbdde
  4194fb:	xor    edi,edx
  4194fd:	mov    DWORD PTR ds:0x447cf0,edx
  419503:	mov    DWORD PTR [ecx+0xc],edi
  419506:	add    ecx,0x10
  419509:	add    eax,0x20
  41950c:	dec    esi
  41950d:	jne    0x419434
  419513:	movzx  edx,BYTE PTR [eax+0x4]
  419517:	movzx  esi,WORD PTR [eax+0x2]
  41951b:	movzx  eax,BYTE PTR [eax]
  41951e:	shl    edx,0x10
  419521:	add    edx,esi
  419523:	shl    edx,0x8
  419526:	add    edx,eax
  419528:	mov    eax,ds:0x447cfc
  41952d:	add    eax,0x9849bdda
  419532:	xor    eax,edx
  419534:	mov    DWORD PTR ds:0x447cf0,edx
  41953a:	mov    DWORD PTR [ecx],eax
  41953c:	mov    esi,DWORD PTR ds:0x447d00
  419542:	mov    ecx,DWORD PTR ds:0x447044
  419548:	add    esi,0x71f0
  41954e:	mov    edi,0x28c
  419553:	movzx  eax,BYTE PTR [ecx+0x7]
  419557:	movzx  edx,BYTE PTR [ecx+0x5]
  41955b:	shl    eax,0x8
  41955e:	add    eax,edx
  419560:	movzx  edx,BYTE PTR [ecx+0x2]
  419564:	movzx  ecx,BYTE PTR [ecx]
  419567:	shl    eax,0x8
  41956a:	add    eax,edx
  41956c:	shl    eax,0x8
  41956f:	mov    edx,0x6cd0ca96
  419574:	sub    edx,DWORD PTR ds:0x447cfc
  41957a:	add    eax,ecx
  41957c:	xor    edx,eax
  41957e:	mov    ds:0x447cf0,eax
  419583:	mov    DWORD PTR [esi],edx
  419585:	push   0x5a
  419587:	add    esi,0x4
  41958a:	call   ebx
  41958c:	mov    ecx,DWORD PTR ds:0x447044
  419592:	add    ecx,0x8
  419595:	dec    edi
  419596:	mov    DWORD PTR ds:0x447044,ecx
  41959c:	jne    0x419553
  41959e:	mov    edi,DWORD PTR ds:0x447d00
  4195a4:	mov    ebx,DWORD PTR ds:0x44404c
  4195aa:	mov    esi,DWORD PTR [esp+0x13c]
  4195b1:	push   ebp
  4195b2:	add    edi,0x7c20
  4195b8:	mov    ebp,0x225
  4195bd:	lea    ecx,[ecx+0x0]
  4195c0:	mov    eax,DWORD PTR [esp+0x18]
  4195c4:	push   0x0
  4195c6:	push   0x130
  4195cb:	push   0x115
  4195d0:	push   0x8f
  4195d5:	push   0x7a
  4195d7:	push   0x0
  4195d9:	push   eax
  4195da:	call   ebx
  4195dc:	movzx  eax,WORD PTR [esi+0x5]
  4195e0:	movzx  ecx,WORD PTR [esi]
  4195e3:	shl    eax,0x10
  4195e6:	mov    edx,0x86ab5049
  4195eb:	sub    edx,DWORD PTR ds:0x447cfc
  4195f1:	add    eax,ecx
  4195f3:	xor    edx,eax
  4195f5:	mov    ds:0x447cf0,eax
  4195fa:	mov    DWORD PTR [edi],edx
  4195fc:	add    edi,0x4
  4195ff:	add    esi,0x8
  419602:	dec    ebp
  419603:	jne    0x4195c0
  419605:	mov    esi,DWORD PTR ds:0x447d00
  41960b:	mov    edi,DWORD PTR ds:0x444004
  419611:	mov    eax,ds:0x447048
  419616:	add    esi,0x84b4
  41961c:	mov    ebx,0xd7
  419621:	pop    ebp
  419622:	movzx  ecx,WORD PTR [eax+0x4]
  419626:	movzx  edx,WORD PTR [eax+0x1]
  41962a:	lea    eax,[esp+0x18]
  41962e:	push   eax
  41962f:	shl    ecx,0x10
  419632:	push   0x0
  419634:	add    ecx,edx
  419636:	push   0x3
  419638:	mov    DWORD PTR ds:0x447cf0,ecx
  41963e:	call   edi
  419640:	mov    ecx,DWORD PTR ds:0x447cfc
  419646:	add    ecx,0x44f4f120
  41964c:	xor    ecx,DWORD PTR ds:0x447cf0
  419652:	add    esi,0x8
  419655:	mov    DWORD PTR [esi-0x8],ecx
  419658:	mov    ecx,DWORD PTR ds:0x447048
  41965e:	movzx  eax,BYTE PTR [ecx+0xe]
  419662:	movzx  edx,BYTE PTR [ecx+0xc]
  419666:	movzx  ecx,WORD PTR [ecx+0x8]
  41966a:	shl    eax,0x8
  41966d:	add    eax,edx
  41966f:	mov    edx,DWORD PTR ds:0x447cfc
  419675:	shl    eax,0x10
  419678:	add    eax,ecx
  41967a:	add    edx,0x44f4f120
  419680:	mov    ds:0x447cf0,eax
  419685:	xor    edx,eax
  419687:	lea    eax,[esp+0x18]
  41968b:	push   eax
  41968c:	push   0x0
  41968e:	mov    DWORD PTR [esi-0x4],edx
  419691:	push   0x3
  419693:	call   edi
  419695:	mov    eax,ds:0x447048
  41969a:	add    eax,0x10
  41969d:	dec    ebx
  41969e:	mov    ds:0x447048,eax
  4196a3:	jne    0x419622
  4196a9:	lea    ecx,[esp+0x18]
  4196ad:	push   ecx
  4196ae:	push   ebx
  4196af:	push   0x3
  4196b1:	call   edi
  4196b3:	mov    ecx,DWORD PTR ds:0x447048
  4196b9:	movzx  eax,WORD PTR [ecx+0x4]
  4196bd:	movzx  edx,WORD PTR [ecx+0x1]
  4196c1:	shl    eax,0x10
  4196c4:	add    eax,edx
  4196c6:	mov    ecx,0x44fcf128
  4196cb:	sub    ecx,DWORD PTR ds:0x447cfc
  4196d1:	lea    edx,[esp+0x18]
  4196d5:	push   edx
  4196d6:	xor    ecx,eax
  4196d8:	mov    ds:0x447cf0,eax
  4196dd:	mov    DWORD PTR [esi],ecx
  4196df:	mov    esi,DWORD PTR ds:0x447d00
  4196e5:	push   ebx
  4196e6:	push   0x3
  4196e8:	add    esi,0x8b70
  4196ee:	call   edi
  4196f0:	mov    ecx,DWORD PTR ds:0x44704c
  4196f6:	mov    edx,0xe3
  4196fb:	jmp    0x419700
  4196fd:	lea    ecx,[ecx+0x0]
  419700:	movzx  eax,WORD PTR [ecx+0x5]
  419704:	movzx  ebx,BYTE PTR [ecx+0x3]
  419708:	movzx  ecx,BYTE PTR [ecx+0x1]
  41970c:	shl    eax,0x8
  41970f:	add    eax,ebx
  419711:	shl    eax,0x8
  419714:	add    eax,ecx
  419716:	mov    ecx,DWORD PTR ds:0x447cfc
  41971c:	xor    ecx,eax
  41971e:	xor    ecx,0x86ef3714
  419724:	mov    ds:0x447cf0,eax
  419729:	mov    DWORD PTR [esi],ecx
  41972b:	mov    ecx,DWORD PTR ds:0x44704c
  419731:	add    ecx,0x8
  419734:	mov    DWORD PTR ds:0x44704c,ecx
  41973a:	movzx  eax,WORD PTR [ecx+0x5]
  41973e:	movzx  ebx,BYTE PTR [ecx+0x3]
  419742:	movzx  ecx,BYTE PTR [ecx+0x1]
  419746:	shl    eax,0x8
  419749:	add    eax,ebx
  41974b:	shl    eax,0x8
  41974e:	add    eax,ecx
  419750:	mov    ecx,DWORD PTR ds:0x447cfc
  419756:	xor    ecx,eax
  419758:	xor    ecx,0x86ef3714
  41975e:	mov    ds:0x447cf0,eax
  419763:	mov    DWORD PTR [esi+0x4],ecx
  419766:	mov    ecx,DWORD PTR ds:0x44704c
  41976c:	add    ecx,0x8
  41976f:	add    esi,0x8
  419772:	dec    edx
  419773:	mov    DWORD PTR ds:0x44704c,ecx
  419779:	jne    0x419700
  41977b:	mov    esi,DWORD PTR ds:0x447d00
  419781:	add    esi,0x9288
  419787:	mov    ebx,0x2fa
  41978c:	lea    esp,[esp+0x0]
  419790:	lea    edx,[esp+0x18]
  419794:	push   edx
  419795:	push   0x0
  419797:	push   0x3
  419799:	call   edi
  41979b:	mov    eax,ds:0x447050
  4197a0:	mov    eax,DWORD PTR [eax]
  4197a2:	mov    ecx,0x9ac11d86
  4197a7:	sub    ecx,DWORD PTR ds:0x447cfc
  4197ad:	mov    ds:0x447cf0,eax
  4197b2:	xor    ecx,eax
  4197b4:	mov    DWORD PTR [esi],ecx
  4197b6:	add    DWORD PTR ds:0x447050,0x8
  4197bd:	add    esi,0x4
  4197c0:	dec    ebx
  4197c1:	jne    0x419790
  4197c3:	mov    eax,DWORD PTR [esp+0xc]
  4197c7:	mov    esi,DWORD PTR ds:0x444018
  4197cd:	test   eax,eax
  4197cf:	je     0x4197d4
  4197d1:	push   eax
  4197d2:	call   esi
  4197d4:	mov    eax,DWORD PTR [esp+0x10]
  4197d8:	test   eax,eax
  4197da:	je     0x4197df
  4197dc:	push   eax
  4197dd:	call   esi
  4197df:	pop    edi
  4197e0:	pop    esi
  4197e1:	pop    ebx
  4197e2:	add    esp,0x128
  4197e8:	ret    
  4197e9:	int3   
  4197ea:	int3   
  4197eb:	int3   
  4197ec:	int3   
  4197ed:	int3   
  4197ee:	int3   
  4197ef:	int3   
  4197f0:	inc    BYTE PTR [eax]
  4197f2:	push   DWORD PTR [ebp-0x76005c07]
  4197f8:	and    eax,0x85b8ff00
  4197fd:	sbb    bh,bh
  4197ff:	adc    DWORD PTR [edx+0x28cf00ff],0x24
  419806:	add    BYTE PTR [ecx-0x5500ffc3],cl
  41980c:	pop    ebp
  41980d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41980e:	add    BYTE PTR [ebx+0x58ffffb6],al
  419814:	pusha  
  419815:	outs   dx,BYTE PTR ds:[esi]
  419816:	inc    DWORD PTR [eax]
  419818:	dec    ebp
  419819:	add    BYTE PTR [eax],al
  41981b:	pop    esp
  41981c:	test   esi,ebp
  41981e:	int3   
  41981f:	add    BYTE PTR [ebx+0x5c460000],dl
  419825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419826:	int3   
  419827:	mov    esp,ebp
  419829:	inc    DWORD PTR [eax]
  41982b:	mul    BYTE PTR [ebx-0x140000c3]
  419831:	add    BYTE PTR [ecx-0x8ebe24],cl
  419837:	add    BYTE PTR [ebx-0x37a50000],bh
  41983d:	xor    eax,DWORD PTR [eax]
  41983f:	add    cl,ch
  419841:	cmp    edi,0xffffffe1
  419844:	push   edx
  419845:	mov    cs,esp
  419847:	add    BYTE PTR [ecx-0x1],ah
  41984a:	jmp    FWORD PTR [eax-0x7c0084f1]
  419850:	xor    BYTE PTR [ebx-0x13972201],al
  419856:	add    BYTE PTR [eax],al
  419858:	fmul   DWORD PTR [ecx-0x19a7767d]
  41985e:	add    bh,bh
  419860:	fdivp  st(7),st
  419862:	int3   
  419863:	mov    BYTE PTR [eax],bh
  419865:	les    eax,FWORD PTR [eax]
  419867:	add    BYTE PTR [edx-0x2cd70001],bh
  41986d:	inc    ebp
  41986e:	inc    DWORD PTR [eax]
  419870:	jge    0x419872
  419872:	int3   
  419873:	mov    al,dh
  419875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419876:	cmp    edi,0x57
  419879:	int3   
  41987a:	call   FWORD PTR [edx+0x15]
  41987d:	imul   eax,DWORD PTR [ebx-0x33ff8000],0xae2f66
  419887:	jmp    DWORD PTR [ebp+0x0]
  41988a:	add    BYTE PTR [ecx-0x7c00012b],al
  419890:	aad    0x89
  419892:	add    DWORD PTR [ebx],0xffffffe6
  419895:	mov    edi,0xff54ffff
  41989a:	add    ch,bl
  41989c:	les    esi,FWORD PTR [edi+0x0]
  41989f:	(bad)  
  4198a0:	fmul   QWORD PTR [ecx-0x5dd0a800]
  4198a6:	(bad)  
  4198a7:	dec    DWORD PTR [esi-0x7d]
  4198aa:	call   FWORD PTR [edx]
  4198ac:	call   0x5c422226
  4198b1:	cmp    edi,0xffffffc6
  4198b4:	cmp    BYTE PTR [eax-0x1],cl
  4198b7:	mov    DWORD PTR [esi-0x1],ebp
  4198ba:	sub    edi,0x61
  4198bd:	fwait
  4198be:	(bad)  
  4198bf:	jmp    FWORD PTR [edi+edi*8]
  4198c2:	add    BYTE PTR [edx-0x17],bl
  4198c5:	ror    ah,1
  4198c7:	call   FWORD PTR [eax+eax*1+0x0]
  4198cb:	xor    eax,0xcc006607
  4198d0:	gs (bad) 
  4198d2:	jmp    FWORD PTR [eax-0x80]
  4198d5:	retf   0xffff
  4198d8:	adc    edi,edi
  4198da:	or     DWORD PTR [eax-0x761915],0x72
  4198e1:	inc    DWORD PTR [eax]
  4198e3:	pop    eax
  4198e5:	imul   eax,DWORD PTR [eax],0xffffff83
  4198e8:	sub    al,0x0
  4198ea:	jmp    esp
  4198ec:	int    0xdb
  4198ee:	(bad)  
  4198ef:	jmp    DWORD PTR [ebp+0x0]
  4198f2:	(bad)  
  4198f3:	jnp    0x4198ab
  4198f5:	dec    eax
  4198f6:	int3   
  4198f7:	mov    DWORD PTR [edi-0x1],edi
  4198fa:	add    ch,dl
  4198fc:	mov    dl,0xb7
  4198fe:	add    BYTE PTR [ebx+0x340000c8],al
  419904:	mov    al,0xc1
  419906:	(bad)  
  419907:	inc    DWORD PTR ds:0x8389ff00
  41990d:	cmp    edi,edi
  41990f:	(bad)  
  419910:	fadd   DWORD PTR [eax]
  419912:	dec    eax
  419914:	pushf  
  419915:	enter  0xff,0xa5
  419919:	add    bh,bh
  41991b:	sbb    al,BYTE PTR [ebp-0x120000d8]
  419921:	(bad)  
  419922:	dec    edi
  419924:	loope  0x41991e
  419926:	mov    DWORD PTR [eax],eax
  419928:	dec    ebx
  419929:	int3   
  41992a:	mov    DWORD PTR [edi-0x77],ebp
  41992d:	ret    
  41992e:	add    bh,bh
  419930:	mov    WORD PTR [ebx-0x5b58a701],es
  419936:	cmp    edi,0x4f
  419939:	dec    esp
  41993b:	retf   0x4739
  41993e:	inc    DWORD PTR [eax]
  419940:	or     bh,bh
  419942:	inc    DWORD PTR [ecx+0xa]
  419945:	(bad)  
  419947:	add    BYTE PTR [ebx+0x5fd383ff],cl
  41994d:	mov    dl,0x0
  41994f:	add    BYTE PTR [ebp-0x77],dh
  419952:	mov    DWORD PTR [edx-0x763364f0],eax
  419958:	in     eax,dx
  419959:	add    bh,bh
  41995b:	inc    esi
  41995c:	repz (bad) 
  41995f:	int3   
  419960:	(bad)  
  419961:	dec    esp
  419963:	in     al,dx
  419964:	and    ah,al
  419966:	add    bh,bh
  419968:	xor    al,0xff
  41996a:	inc    DWORD PTR [eax-0x24]
  41996d:	add    DWORD PTR [eax],eax
  41996f:	add    ah,al
  419971:	add    bh,bh
  419973:	dec    esi
  419974:	ja     0x4199ed
  419976:	int3   
  419977:	add    BYTE PTR [eax-0x34],al
  41997a:	add    BYTE PTR [ecx+0x69],bh
  41997d:	ins    DWORD PTR es:[edi],dx
  41997e:	(bad)  
  41997f:	jmp    DWORD PTR [eax+eax*1]
  419982:	add    bl,bh
  419984:	mov    esp,0x5400ff6b
  419989:	add    BYTE PTR [eax],al
  41998b:	cmp    al,0x88
  41998d:	outs   dx,DWORD PTR ds:[esi]
  41998e:	inc    DWORD PTR [ebx+0x400cc06]
  419994:	or     DWORD PTR [eax],ebx
  419996:	(bad)  
  419997:	(bad)  
  419998:	mov    esp,0x541ffff
  41999d:	pop    ebx
  41999e:	add    DWORD PTR [eax],0x18
  4199a1:	(bad)  
  4199a2:	dec    DWORD PTR [ebx-0x7c7c48]
  4199a8:	cmp    bh,bh
  4199aa:	inc    esi
  4199ac:	jp     0x419953
  4199ae:	add    ah,cl
  4199b0:	icebp  
  4199b1:	mov    edi,edi
  4199b3:	cmp    BYTE PTR [eax-0x55],bl
  4199b6:	add    bh,bh
  4199b8:	xchg   edi,edi
  4199ba:	jmp    FWORD PTR ds:0x699c
  4199c0:	jg     0x41994b
  4199c2:	inc    DWORD PTR [ecx-0x2b]
  4199c5:	and    al,0xcc
  4199c7:	(bad)  
  4199c8:	fdivr  st,st(7)
  4199ca:	int3   
  4199cb:	xchg   edi,eax
  4199cc:	iret   
  4199cd:	mov    al,ds:0xffdcff00
  4199d2:	add    BYTE PTR [ebx+ebx*8],dl
  4199d5:	push   0xffffffff
  4199d7:	(bad)  
  4199d8:	in     al,dx
  4199d9:	inc    DWORD PTR [eax]
  4199db:	test   eax,edx
  4199dd:	push   es
  4199de:	cmp    edi,0x51
  4199e1:	(bad)  
  4199e2:	jmp    FWORD PTR [esi+ebp*2]
  4199e5:	xor    edi,edi
  4199e7:	inc    eax
  4199e9:	cmp    edi,0x75
  4199ec:	mov    ebx,0xf300839d
  4199f1:	(bad)  
  4199f2:	push   DWORD PTR [ebx+0xff8cc1]
  4199f8:	jb     0x4199f9
  4199fa:	add    BYTE PTR [esi-0x3300d948],bl
  419a00:	fwait
  419a01:	(bad)  
  419a02:	(bad)  
  419a03:	jge    0x419a22
  419a05:	arpl   WORD PTR [ebx+0x8385cc],ax
  419a0b:	inc    esi
  419a0c:	pushf  
  419a0d:	cld    
  419a0e:	int3   
  419a0f:	add    DWORD PTR [edx],0x0
  419a12:	xor    ebx,0xffffff83
  419a15:	dec    ecx
  419a16:	inc    DWORD PTR [ebx-0x2f00ffe5]
  419a1c:	test   dl,ah
  419a1e:	add    bh,bh
  419a20:	in     al,dx
  419a21:	inc    DWORD PTR [eax]
  419a23:	sbb    al,0x22
  419a25:	in     al,0x0
  419a27:	push   DWORD PTR [esi]
  419a29:	mov    DWORD PTR [eax],eax
  419a2b:	sub    DWORD PTR [ebp+0x1dccff6b],0xffffffff
  419a32:	int3   
  419a33:	xchg   edx,eax
  419a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a35:	cs (bad) 
  419a37:	jmp    DWORD PTR ds:0xb13e00ff
  419a3d:	popf   
  419a3e:	or     DWORD PTR [ecx-0x547c0006],0xfffffffa
  419a45:	jo     0x4199d0
  419a47:	add    BYTE PTR [edi-0x1],dl
  419a4a:	add    DWORD PTR [ecx],0xffffffe1
  419a4d:	and    al,0xff
  419a4f:	(bad)  
  419a50:	mov    esi,0x41a8ff00
  419a55:	dec    edi
  419a56:	add    bh,bh
  419a58:	out    dx,eax
  419a59:	(bad)  
  419a5a:	dec    DWORD PTR [esi-0x7c76ac24]
  419a60:	adc    DWORD PTR [eax],eax
  419a62:	mov    DWORD PTR [eax],ebx
  419a64:	inc    edx
  419a65:	sar    bh,1
  419a67:	push   DWORD PTR [edx+0x0]
  419a6a:	inc    eax
  419a6c:	ja     0x419a01
  419a6e:	cmp    edi,0xffffffbe
  419a71:	add    ah,cl
  419a73:	jg     0x419a5c
  419a75:	sbb    bh,bh
  419a77:	add    BYTE PTR [edi],cl
  419a79:	add    BYTE PTR [ecx-0xcf1797],cl
  419a7f:	dec    DWORD PTR [eax+eax*1+0x0]
  419a83:	fmul   st(1),st
  419a85:	(bad)  
  419a86:	(bad)  
  419a87:	jmp    DWORD PTR [edi+0x0]
  419a8a:	(bad)  
  419a8b:	(bad)  
  419a8c:	in     al,0x4c
  419a8e:	add    BYTE PTR [eax],al
  419a90:	add    edi,edi
  419a92:	int3   
  419a93:	cmp    ah,BYTE PTR [edi+eax*2]
  419a96:	mov    DWORD PTR [eax],eax
  419a98:	ss add bh,bh
  419a9b:	fistp  WORD PTR [ecx+eax*1-0x7d]
  419a9f:	add    BYTE PTR [ebp-0x1],dl
  419aa2:	and    edi,0xffffffa9
  419aa5:	out    dx,al
  419aa6:	inc    DWORD PTR [eax]
  419aa8:	cmp    bh,bh
  419aaa:	adc    ebp,0xfffffffc
  419aad:	outs   dx,DWORD PTR ds:[esi]
  419aae:	add    BYTE PTR [eax],al
  419ab0:	mov    ch,0x83
  419ab2:	call   esi
  419ab4:	jne    0x419a77
  419ab6:	inc    DWORD PTR [eax]
  419ab8:	stc    
  419ab9:	add    bh,bh
  419abb:	call   0xffb2:0xccbdeb
  419ac2:	sub    DWORD PTR [edx],0x70
  419ac5:	cdq    
  419ac6:	inc    DWORD PTR [eax]
  419ac8:	(bad)  
  419ac9:	(bad)  
  419aca:	jmp    DWORD PTR [esi]
  419acc:	jl     0x419a85
  419ace:	(bad)  
  419acf:	push   DWORD PTR [esi+0x6517ff83]
  419ad5:	ret    
  419ad6:	add    BYTE PTR [eax],al
  419ad8:	mov    al,0xff
  419ada:	push   edi
  419adc:	xchg   ebx,eax
  419add:	cmp    edi,edi
  419adf:	int3   
  419ae0:	xchg   ebx,eax
  419ae1:	int3   
  419ae2:	inc    DWORD PTR [ebx-0x69]
  419ae5:	push   ds
  419ae6:	int3   
  419ae7:	adc    DWORD PTR [edx-0x61177c7d],0xffffffe8
  419aee:	add    bh,bh
  419af0:	out    dx,al
  419af1:	(bad)  
  419af2:	call   DWORD PTR [eax]
  419af4:	xor    dh,al
  419af6:	add    BYTE PTR [eax],al
  419af8:	(bad)  
  419af9:	inc    DWORD PTR [eax]
  419afb:	dec    ebp
  419afc:	or     ch,BYTE PTR [esi+0x3eff00]
  419b02:	add    BYTE PTR [edx+0x43],bh
  419b05:	dec    esp
  419b06:	add    bh,bh
  419b08:	mov    WORD PTR [eax],es
  419b0a:	add    BYTE PTR [edi-0x33a279],dh
  419b10:	ds int3 
  419b12:	push   DWORD PTR [esi-0x21]
  419b15:	inc    esp
  419b16:	or     DWORD PTR [ecx-0x62ff3376],0x36
  419b1d:	xchg   esp,eax
  419b1e:	(bad)  
  419b1f:	call   DWORD PTR [ebp+0x0]
  419b22:	inc    DWORD PTR [esi-0x72]
  419b25:	pop    esp
  419b26:	mov    edi,edi
  419b28:	push   ebp
  419b29:	inc    DWORD PTR [eax]
  419b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b2c:	unpcklps xmm0,XMMWORD PTR [eax]
  419b2f:	(bad)  
  419b30:	fild   DWORD PTR [ebx+0x3a04f1ff]
  419b36:	int3   
  419b37:	add    edi,0x0
  419b3a:	call   DWORD PTR [ebp+0x8373e9]
  419b40:	test   esp,0x2b114eff
  419b46:	inc    DWORD PTR [ebx-0x7bff004f]
  419b4c:	(bad)  
  419b4d:	jne    0x419b4f
  419b4f:	int3   
  419b50:	cmp    bh,bh
  419b52:	dec    DWORD PTR [esi-0x1f]
  419b55:	fdivr  st,st(7)
  419b57:	add    BYTE PTR [ebx+0x0],al
  419b5a:	add    cl,bh
  419b5c:	fs pushf 
  419b5e:	add    BYTE PTR [eax],al
  419b60:	push   esi
  419b61:	cmp    edi,0xffffffb3
  419b64:	jbe    0x419bce
  419b66:	int3   
  419b67:	add    esi,0xffffffcc
  419b6a:	add    BYTE PTR [esi],ch
  419b6c:	lahf   
  419b6d:	mov    bh,bh
  419b6f:	dec    DWORD PTR [esi]
  419b71:	(bad)  
  419b72:	push   DWORD PTR [eax]
  419b74:	dec    edi
  419b75:	stos   DWORD PTR es:[edi],eax
  419b76:	add    DWORD PTR [eax],0x1a
  419b79:	(bad)  
  419b7a:	call   FWORD PTR [eax+0x27]
  419b7d:	call   0x1279b81
  419b82:	inc    DWORD PTR [edx-0x2]
  419b85:	jno    0x419b87
  419b87:	push   DWORD PTR [eax]
  419b89:	mov    DWORD PTR [ebx-0x7c66a58a],eax
  419b8f:	xor    DWORD PTR [ebx],0x0
  419b92:	jmp    esi
  419b94:	sti    
  419b95:	sub    eax,0xccb700ff
  419b9a:	jmp    FWORD PTR [ecx+esi*8+0x39]
  419b9e:	add    BYTE PTR [eax],al
  419ba0:	(bad)  
  419ba1:	inc    DWORD PTR [ebx+0xdd08b1]
  419ba7:	jmp    DWORD PTR [ebx]
  419ba9:	dec    DWORD PTR [ecx-0xadf48]
  419baf:	sbb    DWORD PTR [edx+0x6977ff00],0x7a
  419bb6:	(bad)  
  419bb7:	(bad)  
  419bb8:	(bad)  
  419bb9:	(bad)  
  419bba:	inc    DWORD PTR [ecx-0xff64c5]
  419bc0:	xchg   bh,bh
  419bc2:	(bad)  
  419bc3:	fucomip st,st(7)
  419bc5:	test   DWORD PTR [eax],0xcc6d00
  419bcb:	pusha  
  419bcc:	loop   0x419b78
  419bce:	add    BYTE PTR [ebx-0x667c00db],al
  419bd4:	and    ebp,DWORD PTR [eax+eax*1-0x1]
  419bd8:	dec    ecx
  419bd9:	add    bh,bh
  419bdb:	in     al,0x78
  419bdd:	push   ebx
  419bde:	add    bh,bh
  419be0:	inc    eax
  419be1:	(bad)  
  419be2:	push   DWORD PTR [edx+0x7e47]
  419be8:	xor    BYTE PTR [ecx+0x4cd074ff],cl
  419bee:	(bad)  
  419bef:	push   DWORD PTR ds:0xcd91ffff
  419bf5:	stc    
  419bf6:	(bad)  
  419bf7:	jmp    FWORD PTR [edi+edi*8+0x68030800]
  419bfe:	(bad)  
  419bff:	(bad)  
  419c00:	clc    
  419c01:	(bad)  
  419c02:	push   DWORD PTR [ecx]
  419c04:	iret   
  419c05:	ins    DWORD PTR es:[edi],dx
  419c06:	add    ah,cl
  419c08:	dec    eax
  419c09:	inc    DWORD PTR [eax]
  419c0b:	dec    ebp
  419c0c:	dec    edx
  419c0d:	sbb    ah,cl
  419c0f:	add    BYTE PTR [ebp+0x24068383],ah
  419c15:	pop    ds
  419c16:	mov    edi,edi
  419c18:	xchg   ebx,eax
  419c19:	dec    esp
  419c1b:	mov    ebx,0xff5fdb
  419c20:	pop    ebx
  419c21:	(bad)  
  419c22:	inc    DWORD PTR [eax]
  419c24:	rcl    DWORD PTR [edx-0x1],1
  419c27:	add    BYTE PTR [ebx+eax*4-0x7d],cl
  419c2b:	xor    al,0xa4
  419c2d:	pushf  
  419c2e:	inc    DWORD PTR [eax]
  419c30:	adc    BYTE PTR [eax],al
  419c32:	dec    DWORD PTR [edx]
  419c34:	dec    edx
  419c35:	js     0x419c36
  419c37:	add    DWORD PTR [esi],0x0
  419c3a:	mov    ebx,esi
  419c3c:	inc    esi
  419c3d:	inc    eax
  419c3e:	cmp    edi,0x7f
  419c41:	add    bh,bh
  419c43:	sbb    eax,0xffff034a
  419c48:	mov    ds:0x141c8300,al
  419c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c4e:	dec    esp
  419c50:	xchg   edi,eax
  419c51:	inc    DWORD PTR [eax]
  419c53:	sbb    eax,DWORD PTR [eax]
  419c55:	jb     0x419c56
  419c57:	cmp    DWORD PTR [esi+0x0],0x0
  419c5b:	into   
  419c5c:	xchg   ecx,esi
  419c5e:	inc    DWORD PTR [eax]
  419c60:	mov    ah,0xff
  419c62:	dec    esi
  419c64:	ds mov cl,0xff
  419c67:	call   edx
  419c69:	(bad)  
  419c6a:	jmp    DWORD PTR [edi+ebp*1-0x200006c]
  419c71:	add    BYTE PTR [eax],al
  419c73:	loopne 0x419cbc
  419c75:	ja     0x419c77
  419c77:	push   edi
  419c79:	add    bh,bh
  419c7b:	pop    esi
  419c7c:	adc    eax,0xc6ff83a6
  419c81:	inc    DWORD PTR [eax]
  419c83:	or     BYTE PTR [esi+0x43000033],ch
  419c89:	mov    DWORD PTR [ebx-0x501f9],eax
  419c8f:	mov    DWORD PTR [ecx+0x0],esp
  419c92:	int3   
  419c93:	sbb    DWORD PTR [edx-0x6dff0010],0xffffffff
  419c9a:	call   DWORD PTR [ebp+eiz*2+0x3eff83a4]
  419ca1:	inc    DWORD PTR [ebx+0xc978df]
  419ca7:	jmp    DWORD PTR [edi-0x1]
  419caa:	add    BYTE PTR [edx+edx*2],bh
  419cad:	ror    esp,cl
  419caf:	dec    DWORD PTR [esi+0x768200ff]
  419cb5:	push   ecx
  419cb6:	mov    edi,edi
  419cb8:	mov    dl,0x0
  419cba:	add    BYTE PTR [edi],dl
  419cbc:	pusha  
  419cbd:	mov    eax,0x83d6ff89
  419cc2:	cmp    DWORD PTR [eax+0x893b6e],0xffffff83
  419cc9:	int3   
  419cca:	cmp    DWORD PTR [ecx-0x330075cf],0xffffffe9
  419cd1:	cmp    edi,0xffffffa6
  419cd4:	jne    0x419c9e
  419cd6:	add    DWORD PTR [ebx+0x5dffff47],0x4
  419cdd:	fild   WORD PTR [ebx+0xc5ff]
  419ce3:	adc    dl,0x6
  419ce6:	(bad)  
  419ce7:	dec    DWORD PTR [ebx]
  419ce9:	add    bh,bh
  419ceb:	mov    ebx,0x836475
  419cf0:	clc    
  419cf1:	(bad)  
  419cf2:	call   FWORD PTR [edx]
  419cf4:	and    ebp,edx
  419cf6:	mov    edi,edi
  419cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf9:	add    bh,bh
  419cfb:	fsub   st,st(3)
  419cfd:	ss (bad) 
  419cff:	call   FWORD PTR [edi+0x26d60000]
  419d05:	cli    
  419d06:	inc    DWORD PTR [eax]
  419d08:	push   ebp
  419d09:	or     DWORD PTR [ecx+0xfc43f8],0xffffffff
  419d10:	aas    
  419d11:	(bad)  
  419d12:	(bad)  
  419d13:	fsub   QWORD PTR [ebx]
  419d15:	mov    eax,DWORD PTR [eax]
  419d17:	call   FWORD PTR [ecx-0x1]
  419d1a:	jmp    FWORD PTR ds:0x83009065
  419d20:	loop   0x419d21
  419d22:	adc    DWORD PTR [ebx-0x53],0x79
  419d26:	inc    DWORD PTR [eax]
  419d28:	aad    0x0
  419d2a:	add    BYTE PTR [ebp+esi*8+0x49],bh
  419d2e:	mov    edi,edi
  419d30:	add    ah,cl
  419d32:	call   FWORD PTR [esi]
  419d34:	xchg   esi,eax
  419d35:	aas    
  419d36:	(bad)  
  419d37:	call   FWORD PTR [eax-0x1]
  419d3a:	add    BYTE PTR [eax+eax*4-0x6800ff3b],ch
  419d41:	(bad)  
  419d42:	jmp    DWORD PTR [esi+0x25]
  419d45:	inc    DWORD PTR es:[eax]
  419d48:	or     al,BYTE PTR [eax]
  419d4a:	add    bl,cl
  419d4c:	cli    
  419d4d:	(bad)  
  419d4f:	add    BYTE PTR [edx+0x0],ah
  419d52:	jmp    eax
  419d54:	test   al,0x75
  419d56:	(bad)  
  419d57:	call   DWORD PTR [eax+0x2a70ff83]
  419d5d:	xor    eax,0xff77ffff
  419d62:	add    BYTE PTR [eax],bh
  419d64:	sbb    al,0x16
  419d66:	add    bh,bh
  419d68:	dec    esi
  419d69:	dec    DWORD PTR [ecx-0x4c7358]
  419d6f:	inc    DWORD PTR [esi+0x0]
  419d72:	add    BYTE PTR [ebp-0x76ff111e],bh
  419d78:	pop    ds
  419d79:	inc    DWORD PTR [ebx-0x31eaab]
  419d7f:	add    BYTE PTR ds:0x12058389,ch
  419d85:	ins    DWORD PTR es:[edi],dx
  419d86:	int3   
  419d87:	add    BYTE PTR [edx],dh
  419d89:	add    bh,bh
  419d8b:	lods   al,BYTE PTR ds:[esi]
  419d8c:	fs or  edi,edi
  419d8f:	(bad)  
  419d90:	cli    
  419d91:	cmp    edi,0x67
  419d94:	aam    0xe0
  419d96:	add    DWORD PTR [eax],0xffffffe5
  419d99:	inc    DWORD PTR [eax]
  419d9b:	sbb    eax,0x8377fe
  419da0:	jo     0x419da1
  419da2:	int3   
  419da3:	mov    esp,0xff005b07
  419da8:	xchg   ebp,eax
  419da9:	inc    DWORD PTR [ebx+0x31c640]
  419daf:	push   esi
  419db1:	add    bh,bh
  419db3:	add    al,0x51
  419db5:	js     0x419db7
  419db7:	add    BYTE PTR [edx-0x6a677700],al
  419dbd:	mov    edi,0xff80ffcc
  419dc2:	call   FWORD PTR [eax-0x7cff6d2c]
  419dc8:	dec    ebp
  419dc9:	inc    DWORD PTR [eax]
  419dcb:	add    DWORD PTR [esi+eax*1],edx
  419dce:	add    BYTE PTR [eax],al
  419dd0:	and    edi,edi
  419dd2:	mov    edx,ebx
  419dd4:	dec    ecx
  419dd5:	sar    bh,1
  419dd7:	xor    DWORD PTR [edi+edi*8],0x0
  419ddb:	lea    edi,[ecx-0x6d007cee]
  419de1:	add    BYTE PTR [ecx-0xe9c6af],cl
  419de7:	(bad)  
  419de8:	(bad)  
  419dea:	add    BYTE PTR [esi],ch
  419dec:	test   eax,0xf8ffff87
  419df1:	add    BYTE PTR [eax],al
  419df3:	pop    ss
  419df4:	scas   al,BYTE PTR es:[edi]
  419df5:	pop    ebx
  419df6:	(bad)  
  419df7:	push   DWORD PTR [eax+eax*1]
  419dfa:	add    BYTE PTR [ebx],dl
  419dfc:	retf   
  419dfd:	push   ds
  419dfe:	add    BYTE PTR [eax],al
  419e00:	fwait
  419e01:	dec    DWORD PTR [ecx+0xd99ec3]
  419e07:	inc    DWORD PTR [esi-0x2ba2007d]
  419e0d:	and    bh,bh
  419e0f:	sbb    edi,0xffffffcc
  419e12:	sbb    DWORD PTR [edx-0x7cf805],0x15
  419e19:	mov    edi,edi
  419e1b:	lock sti 
  419e1d:	mov    DWORD PTR [ecx-0xff7c00],ecx
  419e23:	inc    ebp
  419e24:	mov    dh,0x34
  419e26:	dec    DWORD PTR [ecx+0x400002c]
  419e2c:	ds ud0 edi,edi
  419e30:	xor    al,BYTE PTR [ebx+0x3ccb4083]
  419e36:	add    bh,bh
  419e38:	xchg   BYTE PTR [eax],al
  419e3a:	jmp    DWORD PTR [esi-0x2a59]
  419e40:	sub    al,BYTE PTR [ebx-0x30ea7101]
  419e46:	(bad)  
  419e47:	call   FWORD PTR [edx]
  419e49:	add    BYTE PTR [eax],al
  419e4b:	push   es
  419e4c:	not    BYTE PTR [edx+0x3c00ff]
  419e52:	push   DWORD PTR [edx-0x4d7b]
  419e58:	jmp    0x2ab59e29
  419e5d:	jecxz  0x419e5f
  419e5f:	add    BYTE PTR [esi],dh
  419e61:	add    DWORD PTR [ebx-0x8c433b],0xffffff89
  419e68:	jbe    0x419e6a
  419e6a:	push   DWORD PTR [ecx+0x65]
  419e6d:	ret    0xffff
  419e70:	mov    DWORD PTR [eax],eax
  419e72:	add    bl,bh
  419e74:	jecxz  0x419e7f
  419e76:	inc    DWORD PTR [eax]
  419e78:	jb     0x419e79
  419e7a:	add    BYTE PTR [edx],ah
  419e7c:	sub    dl,BYTE PTR [ebx]
  419e7e:	(bad)  
  419e7f:	jmp    FWORD PTR [edi-0x45290100]
  419e85:	pop    es
  419e86:	add    bh,bh
  419e88:	mov    bl,0xff
  419e8a:	add    DWORD PTR [eax],0xffffff9c
  419e8d:	pushf  
  419e8e:	mov    DWORD PTR [eax],eax
  419e90:	sbb    DWORD PTR [eax],eax
  419e92:	add    BYTE PTR [edx+0x50],bh
  419e95:	jae    0x419e97
  419e97:	push   esi
  419e99:	mov    edi,edi
  419e9b:	mov    ah,0x1e
  419e9d:	daa    
  419e9e:	(bad)  
  419e9f:	call   FWORD PTR [esi-0x7d]
  419ea2:	add    DWORD PTR [esi+ecx*1-0x48007ca5],0x0
  419eaa:	add    BYTE PTR [ebx],dh
  419eac:	out    0xec,al
  419eae:	inc    DWORD PTR [eax]
  419eb0:	xchg   edx,eax
  419eb1:	(bad)  
  419eb2:	jmp    DWORD PTR [eax-0x7cb80e]
  419eb8:	mov    WORD PTR [ebx+0xf403bcc],es
  419ebe:	inc    DWORD PTR [eax]
  419ec0:	mov    dl,0x89
  419ec2:	inc    DWORD PTR [edx+esi*1-0x4900ff12]
  419ec9:	cmp    edi,0xffffff81
  419ecc:	and    al,0xc1
  419ece:	inc    DWORD PTR [ebx+0x78ff00e4]
  419ed4:	cmp    DWORD PTR [ebp-0x34],edi
  419ed7:	inc    DWORD PTR [esi-0x1]
  419eda:	add    BYTE PTR [edx-0x330081eb],ch
  419ee0:	add    BYTE PTR [eax],al
  419ee2:	xor    DWORD PTR [eax+0x34],0x41
  419ee6:	add    DWORD PTR [ebx+0x42ff006d],0x6a
  419eed:	mov    esp,0x838c00ff
  419ef2:	push   DWORD PTR [ecx-0xff2548]
  419ef8:	retf   
  419ef9:	add    bh,bh
  419efb:	xor    esp,ebp
  419efd:	ja     0x419efe
  419eff:	jmp    DWORD PTR ds:0xb66a00ff
  419f05:	int    0x0
  419f07:	xor    DWORD PTR [ebp+0xde2ffff],0xffffffe4
  419f0e:	add    DWORD PTR [eax],0x35
  419f11:	add    ah,cl
  419f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f14:	add    DWORD PTR [edi+edi*8+0x0],edi
  419f18:	lods   eax,DWORD PTR ds:[esi]
  419f19:	inc    DWORD PTR [eax]
  419f1b:	lds    edx,FWORD PTR [esi+0x49]
  419f1e:	cmp    edi,0xffffffe6
  419f21:	add    DWORD PTR [ebx-0x33325a44],0xffffffff
  419f28:	or     al,BYTE PTR [ebx-0x330f9200]
  419f2e:	add    BYTE PTR [ebx+0x69008328],al
  419f34:	xor    ecx,edi
  419f36:	cmp    edi,0xfffffffb
  419f39:	inc    DWORD PTR [eax]
  419f3b:	aam    0x7b
  419f3d:	pop    eax
  419f3e:	inc    DWORD PTR [eax]
  419f40:	jmp    0xda70a011
  419f45:	ins    DWORD PTR es:[edi],dx
  419f46:	add    ah,cl
  419f48:	stos   DWORD PTR es:[edi],eax
  419f49:	inc    DWORD PTR [eax]
  419f4b:	mov    cl,0x6a
  419f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f4e:	add    BYTE PTR [ebx+0x7ff005a],al
  419f54:	dec    edi
  419f55:	jae    0x419f57
  419f57:	call   DWORD PTR [edx+0x36d00cc]
  419f5d:	sahf   
  419f5e:	(bad)  
  419f5f:	call   ecx
  419f61:	inc    DWORD PTR [ebx-0x7cf312db]
  419f67:	dec    DWORD PTR [ecx]
  419f69:	add    BYTE PTR [eax],al
  419f6b:	or     BYTE PTR [edx+0x30008377],bl
  419f71:	inc    DWORD PTR [eax]
  419f73:	popf   
  419f74:	mov    edi,0xbff002a
  419f79:	(bad)  
  419f7a:	call   DWORD PTR [eax-0xab4c]
  419f80:	xchg   esi,eax
  419f81:	inc    DWORD PTR [eax]
  419f83:	mov    eax,fs:0x3affff7d
  419f89:	add    bh,bh
  419f8b:	jle    0x419ff3
  419f8d:	fadd   QWORD PTR [eax]
  419f8f:	int3   
  419f90:	pop    ecx
  419f91:	dec    esp
  419f93:	xchg   BYTE PTR ds:0x73ff83f9,dl
  419f99:	mov    DWORD PTR [ebx-0x33ad1420],eax
  419f9f:	mov    DWORD PTR [ecx-0x1],esp
  419fa2:	call   DWORD PTR [ecx+0xff6c41]
  419fa8:	sub    bh,bh
  419faa:	add    al,ch
  419fac:	mov    eax,ds:0x6d00fffd
  419fb1:	(bad)  
  419fb2:	dec    DWORD PTR [ecx-0x5d]
  419fb5:	test   BYTE PTR [eax],al
  419fb7:	(bad)  
  419fb8:	cmp    edi,edi
  419fba:	add    ch,bl
  419fbc:	xchg   ebp,eax
  419fbd:	cmp    di,0x1e
  419fc1:	or     esp,0x4c
  419fc4:	lods   eax,DWORD PTR ds:[esi]
  419fc5:	je     0x419fc6
  419fc7:	add    dl,dl
  419fc9:	dec    DWORD PTR [ecx-0xe4f5f4]
  419fcf:	add    BYTE PTR [eax+eax*1],cl
  419fd2:	add    BYTE PTR [ebp+0x18],bh
  419fd5:	jp     0x419fd7
  419fd7:	jmp    DWORD PTR [edi+edi*8]
  419fda:	(bad)  
  419fdb:	mov    edi,0xff834e40
  419fe0:	push   edi
  419fe1:	add    BYTE PTR [ebx-0x3346fc6e],al
  419fe7:	jmp    FWORD PTR [ecx-0x1]
  419fea:	dec    DWORD PTR [ebp-0x7600c12e]
  419ff0:	or     edi,edi
  419ff2:	jmp    DWORD PTR [eax-0x63]
  419ff5:	add    DWORD PTR [eax],0xffffffff
  419ff8:	mov    dh,0xff
  419ffa:	jmp    FWORD PTR [eax-0x4aac]
  41a000:	mov    edi,0x205400cc
  41a005:	xor    eax,0xfff3ffff
  41a00a:	adc    DWORD PTR [eax-0xffd80b],0xffffffaf
  41a011:	int3   
  41a012:	sub    DWORD PTR [ebp+esi*8-0x53],0xffffff83
  41a017:	int3   
  41a018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a019:	mov    DWORD PTR [eax],eax
  41a01b:	shl    DWORD PTR [ebp-0x5d],1
  41a01e:	(bad)  
  41a01f:	jmp    DWORD PTR [ebp-0x1]
  41a022:	add    BYTE PTR [esi],ah
  41a024:	fstp   TBYTE PTR [ebp-0x76fdff01]
  41a02a:	jmp    FWORD PTR [ebx]
  41a02c:	and    dl,BYTE PTR [ebx]
  41a02e:	int3   
  41a02f:	add    DWORD PTR [eax+0x0],0x0
  41a033:	jno    0x41a075
  41a035:	and    eax,0xffd7ffff
  41a03a:	add    ch,ah
  41a03c:	sahf   
  41a03d:	inc    edi
  41a03e:	dec    esp
  41a040:	cmp    al,0x0
  41a042:	mov    DWORD PTR [esi+0x20],ebp
  41a045:	dec    esi
  41a046:	add    bh,bh
  41a048:	jge    0x41a04a
  41a04a:	cmp    DWORD PTR [esi-0x7c063e],0x26
  41a051:	(bad)  
  41a052:	dec    DWORD PTR [edx-0x29]
  41a055:	dec    esi
  41a056:	cmp    edi,0x46
  41a059:	inc    DWORD PTR [eax]
  41a05b:	push   ebp
  41a05c:	dec    edx
  41a05d:	add    eax,0xcffff
  41a062:	add    ch,ch
  41a064:	add    BYTE PTR [ebx+0x0],bh
  41a067:	add    BYTE PTR [eax],ch
  41a069:	inc    DWORD PTR [eax]
  41a06b:	sbb    ebp,DWORD PTR [eax+ebx*2-0x1]
  41a06f:	add    dl,bl
  41a071:	add    BYTE PTR [eax],al
  41a073:	mov    ebx,0xffff1093
  41a078:	cmp    esp,ecx
  41a07a:	cmp    DWORD PTR ds:0xffffcee7,0xffffff8c
  41a081:	inc    DWORD PTR [ebx-0x76133d48]
  41a087:	call   ebp
  41a089:	inc    DWORD PTR [eax]
  41a08b:	xor    DWORD PTR [edx+esi*2-0x5b0000],edx
  41a092:	add    BYTE PTR [edi+0xff0b17],cl
  41a098:	pop    eax
  41a099:	add    BYTE PTR [ebx-0x6c3d87],al
  41a09f:	add    BYTE PTR [ecx+0x57c90000],ch
  41a0a5:	sub    bh,bh
  41a0a7:	cmp    DWORD PTR [esi-0x1],0x0
  41a0ab:	icebp  
  41a0ac:	jnp    0x41a0ec
  41a0ae:	add    bh,bh
  41a0b0:	cwde   
  41a0b1:	(bad)  
  41a0b2:	jmp    DWORD PTR [edx+0x2d]
  41a0b5:	add    al,0x0
  41a0b7:	dec    DWORD PTR [eax-0x1c3b0001]
  41a0bd:	adc    cl,BYTE PTR [ecx-0x76ff9077]
  41a0c3:	ss es stos BYTE PTR es:[edi],al
  41a0c6:	(bad)  
  41a0c7:	call   FWORD PTR [eax+0x58cdff00]
  41a0cd:	xor    al,0xff
  41a0cf:	add    BYTE PTR [eax+0x0],dh
  41a0d2:	push   DWORD PTR [esi-0x337c75b2]
  41a0d8:	inc    eax
  41a0d9:	(bad)  
  41a0da:	push   edi
  41a0dc:	lahf   
  41a0dd:	dec    ebx
  41a0de:	add    DWORD PTR [ebx+0x57ffffe9],0xffffffbf
  41a0e5:	mov    DWORD PTR [ecx+0xffa5ff],ecx
  41a0eb:	ret    0xfb49
  41a0ee:	add    bh,bh
  41a0f0:	idiv   edi
  41a0f2:	(bad)  
  41a0f3:	cmp    cl,bl
  41a0f5:	sub    al,0xff
  41a0f7:	jmp    DWORD PTR [eax+0x0]
  41a0fa:	add    cl,cl
  41a0fc:	fs imul edi,edi,0xcced00
  41a103:	jge    0x41a152
  41a105:	iret   
  41a106:	add    BYTE PTR [eax],al
  41a108:	pop    ecx
  41a109:	add    BYTE PTR [ecx+0x12d24d],cl
  41a10f:	int3   
  41a110:	ins    DWORD PTR es:[edi],dx
  41a111:	inc    DWORD PTR [ebx-0xfc9d75]
  41a117:	cmp    DWORD PTR [edi+edi*8+0x0],0xd
  41a11c:	pop    eax
  41a11d:	adc    edi,edi
  41a11f:	jmp    FWORD PTR [ebp+0x40f2ffff]
  41a125:	jno    0x41a126
  41a127:	or     DWORD PTR [edx],0xffffff83
  41a12a:	cmp    edi,0x6a
  41a12d:	imul   edi,edi,0xff3000
  41a133:	leave  
  41a134:	punpckhbw mm0,QWORD PTR [ebx-0x337c9034]
  41a13b:	cli    
  41a13c:	retf   
  41a13d:	or     bh,bh
  41a13f:	add    BYTE PTR [eax],cl
  41a141:	int3   
  41a142:	jmp    FWORD PTR ds:0xff5f7c
  41a148:	fild   WORD PTR [eax]
  41a14a:	add    BYTE PTR [eax],al
  41a14c:	leave  
  41a14d:	leave  
  41a14e:	(bad)  
  41a14f:	(bad)  
  41a150:	(bad)  
  41a151:	inc    DWORD PTR [eax]
  41a153:	and    eax,0xffff90
  41a158:	stos   DWORD PTR es:[edi],eax
  41a159:	cmp    edi,0xffffffb6
  41a15c:	xor    al,0x8e
  41a15e:	(bad)  
  41a15f:	call   FWORD PTR [eax]
  41a161:	dec    esp
  41a163:	fyl2x  
  41a165:	push   cs
  41a166:	(bad)  
  41a167:	jmp    FWORD PTR [edx-0x62c27c01]
  41a16d:	and    BYTE PTR [eax],al
  41a16f:	(bad)  
  41a170:	out    dx,al
  41a171:	inc    DWORD PTR [ebx-0x7c55f8b4]
  41a177:	jmp    FWORD PTR ds:0x10f600cc
  41a17d:	cmp    edi,edi
  41a17f:	push   DWORD PTR ds:0xc88600ff
  41a185:	(bad)  
  41a186:	dec    DWORD PTR [ecx+0x3dffffcc]
  41a18c:	mul    DWORD PTR [esi-0x77]
  41a18f:	jmp    esp
  41a191:	add    DWORD PTR [eax],0xffffffae
  41a194:	in     eax,0xad
  41a196:	int3   
  41a197:	jmp    edx
  41a199:	add    BYTE PTR [ebx-0x7c9565e3],al
  41a19f:	jmp    edi
  41a1a1:	add    bh,bh
  41a1a3:	lock iret 
  41a1a5:	cwde   
  41a1a6:	add    BYTE PTR [eax],al
  41a1a8:	push   0xffffffff
  41a1aa:	add    BYTE PTR [edx],bh
  41a1ac:	call   0x5ac5a0ef
  41a1b1:	int3   
  41a1b2:	add    BYTE PTR [esi],ch
  41a1b4:	sbb    BYTE PTR [ebx-0x7d],dh
  41a1b7:	push   ecx
  41a1b9:	add    bh,bh
  41a1bb:	sbb    eax,0xffffc9fe
  41a1c0:	outs   dx,DWORD PTR ds:[esi]
  41a1c1:	dec    DWORD PTR [ecx+0xab28a8]
  41a1c7:	add    BYTE PTR [edi+0x319c0000],dh
  41a1cd:	call   0xccc5a2d1
  41a1d2:	sbb    DWORD PTR [ebx-0x7c009cb9],0x35
  41a1d9:	inc    DWORD PTR [eax]
  41a1db:	mov    ecx,0xffcc4fa3
  41a1e0:	lock add DWORD PTR [eax],0x53
  41a1e4:	in     eax,dx
  41a1e5:	xchg   esi,eax
  41a1e6:	inc    DWORD PTR [eax]
  41a1e8:	add    bh,bh
  41a1ea:	jmp    FWORD PTR [edx]
  41a1ec:	dec    eax
  41a1ed:	cmp    bh,0x0
  41a1f0:	mov    WORD PTR [ecx+0x539723ff],cs
  41a1f6:	add    BYTE PTR [eax],al
  41a1f8:	add    bh,bh
  41a1fa:	int3   
  41a1fb:	jne    0x41a211
  41a1fd:	das    
  41a1fe:	(bad)  
  41a1ff:	push   ebx
  41a201:	cmp    edi,0xfffffffe
  41a204:	push   cs
  41a205:	or     edi,edi
  41a207:	int3   
  41a208:	pop    esp
  41a209:	inc    DWORD PTR [eax]
  41a20b:	popf   
  41a20c:	push   cs
  41a20d:	jns    0x41a20e
  41a20f:	int3   
  41a210:	sbb    al,0xff
  41a212:	add    BYTE PTR [edi+0x75],cl
  41a215:	lock add BYTE PTR [ebx+0x77ffcc61],al
  41a21c:	rcr    ch,cl
  41a21e:	cmp    edi,0xffffffe4
  41a221:	dec    DWORD PTR [ecx-0xc2aeb5]
  41a227:	int3   
  41a228:	dec    eax
  41a229:	inc    DWORD PTR [eax]
  41a22b:	out    0xaf,al
  41a22d:	push   edx
  41a22e:	dec    DWORD PTR [ecx-0x2bffff68]
  41a234:	sub    BYTE PTR [edi+edi*8-0x34],bh
  41a238:	mov    dl,0xff
  41a23a:	dec    ecx
  41a23c:	popf   
  41a23d:	mov    dh,0x0
  41a23f:	add    BYTE PTR ds:0x4be000ff,cl
  41a245:	or     bh,bh
  41a247:	(bad)  
  41a248:	cmp    edi,edi
  41a24a:	mov    DWORD PTR [eax],ecx
  41a24c:	scas   eax,DWORD PTR es:[edi]
  41a24d:	inc    ecx
  41a24e:	add    bh,bh
  41a250:	lock inc DWORD PTR [ebx-0x76cd37c0]
  41a257:	jmp    DWORD PTR [ebx]
  41a259:	int3   
  41a25a:	add    BYTE PTR [edi+ecx*2],bh
  41a25d:	jge    0x41a25e
  41a25f:	(bad)  
  41a260:	out    dx,al
  41a261:	add    ah,cl
  41a263:	or     bh,BYTE PTR [edi-0x19]
  41a266:	inc    DWORD PTR [ebx+0x4200ff2d]
  41a26c:	xchg   edx,eax
  41a26d:	sbb    bh,bh
  41a26f:	add    ah,dh
  41a271:	add    bh,bh
  41a273:	call   0x140bfd1
  41a278:	les    eax,FWORD PTR [eax]
  41a27a:	add    ch,dh
  41a27c:	popf   
  41a27d:	add    al,0x83
  41a27f:	call   FWORD PTR [edi-0x1]
  41a282:	call   FWORD PTR [ebp+0x27]
  41a285:	sbb    eax,0xffbaffff
  41a28a:	mov    ebp,eax
  41a28c:	fwait
  41a28d:	cmp    bh,0x0
  41a290:	ins    BYTE PTR es:[edi],dx
  41a291:	add    bh,bh
  41a293:	inc    edi
  41a294:	sbb    edi,DWORD PTR [edi+0x0]
  41a297:	xor    DWORD PTR [edi-0x1],0x0
  41a29b:	xchg   esp,eax
  41a29c:	js     0x41a2c8
  41a29e:	mov    edi,edi
  41a2a0:	adc    edi,edi
  41a2a2:	int3   
  41a2a3:	dec    eax
  41a2a4:	push   cs
  41a2a5:	xor    edi,edi
  41a2a7:	adc    DWORD PTR [edx],0x0
  41a2aa:	add    BYTE PTR [esi+0x37],cl
  41a2ad:	add    bh,bh
  41a2af:	push   DWORD PTR [ebx]
  41a2b1:	inc    DWORD PTR [ebx-0xb82480]
  41a2b7:	(bad)  
  41a2b8:	inc    BYTE PTR [eax]
  41a2ba:	add    BYTE PTR [edx-0x1a],bh
  41a2bd:	push   eax
  41a2be:	(bad)  
  41a2bf:	jmp    esi
  41a2c1:	cmp    edi,0xffffff91
  41a2c4:	not    DWORD PTR [ecx-0x1]
  41a2c7:	add    dl,bh
  41a2c9:	add    BYTE PTR [ecx-0x7c1f0e05],cl
  41a2cf:	add    BYTE PTR [ebx-0x1],ah
  41a2d2:	and    DWORD PTR [eax],0x7b
  41a2d5:	out    dx,al
  41a2d6:	inc    DWORD PTR [eax]
  41a2d8:	daa    
  41a2d9:	add    BYTE PTR [ecx-0x33a6a98f],cl
  41a2df:	add    BYTE PTR [esi],dl
  41a2e1:	(bad)  
  41a2e2:	dec    edi
  41a2e4:	int    0x77
  41a2e6:	inc    DWORD PTR [ebx-0x120000c5]
  41a2ec:	dec    edi
  41a2ed:	and    edi,edi
  41a2ef:	int3   
  41a2f0:	pop    ebx
  41a2f1:	mov    DWORD PTR [eax],eax
  41a2f3:	cmp    DWORD PTR [edi],ecx
  41a2f5:	jo     0x41a2f6
  41a2f7:	add    BYTE PTR [eax],dl
  41a2f9:	add    ah,cl
  41a2fb:	ret    
  41a2fc:	push   ebp
  41a2fd:	out    0xff,al
  41a2ff:	add    BYTE PTR [edi+edi*8-0x1],al
  41a303:	adc    al,0xb5
  41a305:	inc    edi
  41a306:	(bad)  
  41a307:	jmp    FWORD PTR [ebp+0x1f2183cc]
  41a30d:	ud0    eax,DWORD PTR [eax]
  41a310:	dec    ebx
  41a311:	dec    esp
  41a313:	inc    eax
  41a314:	sbb    esp,0x7dff83
  41a31a:	(bad)  
  41a31b:	jmp    0xc9:0xffffccc2
  41a322:	push   ebp
  41a324:	mov    bh,0xec
  41a326:	inc    DWORD PTR [eax]
  41a328:	hlt    
  41a329:	mov    DWORD PTR [ebx-0xccf476],eax
  41a32f:	jmp    ebx
  41a331:	(bad)  
  41a332:	jmp    FWORD PTR [edx]
  41a334:	hlt    
  41a335:	or     al,0x89
  41a337:	add    dl,ch
  41a339:	add    bh,bh
  41a33b:	mov    ecx,0xfffff0bd
  41a340:	push   ebx
  41a341:	inc    DWORD PTR [eax]
  41a343:	sub    eax,DWORD PTR [ebp-0x53]
  41a346:	(bad)  
  41a347:	push   DWORD PTR [edi+0x2d130000]
  41a34d:	cmc    
  41a34e:	int3   
  41a34f:	push   DWORD PTR [ebx]
  41a351:	int3   
  41a352:	add    BYTE PTR [esi+0x4b9b],bl
  41a358:	test   bh,bh
  41a35a:	add    ah,ah
  41a35c:	(bad)  
  41a35d:	jae    0xff426f63
  41a363:	jbe    0x41a312
  41a365:	inc    ebx
  41a366:	add    BYTE PTR [eax],al
  41a368:	cdq    
  41a369:	add    bh,bh
  41a36b:	pop    es
  41a36c:	mov    ds:0x1dff00df,eax
  41a371:	int3   
  41a372:	jmp    DWORD PTR [ebp-0x23]
  41a375:	inc    edi
  41a376:	(bad)  
  41a377:	call   FWORD PTR [esi-0x77]
  41a37a:	or     DWORD PTR [esi],0x70
  41a37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a37e:	add    ah,cl
  41a380:	pop    ecx
  41a381:	cmp    edi,0x50
  41a384:	loop   0x41a349
  41a386:	(bad)  
  41a387:	jmp    FWORD PTR [edx]
  41a389:	add    bh,bh
  41a38b:	add    eax,DWORD PTR [ecx]
  41a38d:	or     esp,0xffffff89
  41a390:	in     al,0x14
  41a392:	add    bh,bh
  41a394:	inc    DWORD PTR [eax]
  41a396:	(bad)  
  41a397:	(bad)  
  41a398:	jle    0x41a360
  41a39a:	retf   
  41a39b:	push   0x16005783
  41a3a0:	cmp    bh,bl
  41a3a2:	dec    DWORD PTR [ecx+0xffff00]
  41a3a8:	jmp    0x31:0xff58c1fd
  41a3af:	fbstp  TBYTE PTR [edx-0x1]
  41a3b2:	inc    DWORD PTR [eax]
  41a3b4:	add    bh,bh
  41a3b6:	mov    DWORD PTR [eax],eax
  41a3b8:	cmp    al,0x90
  41a3bb:	scas   eax,DWORD PTR es:[edi]
  41a3bc:	inc    DWORD PTR [esp+ecx*8+0x33]
  41a3c0:	xchg   ebx,eax
  41a3c1:	clc    
  41a3c2:	mov    edi,edi
  41a3c4:	(bad)  
  41a3c5:	inc    DWORD PTR [eax]
  41a3c7:	add    BYTE PTR ds:0x1b848a,ch
  41a3cd:	test   DWORD PTR [ecx+0x3547e3],0xff008300
  41a3d7:	(bad)  
  41a3d8:	cmp    eax,0xff866381
  41a3dd:	pushf  
  41a3de:	jmp    FWORD PTR [eax-0x764b5f]
  41a3e4:	(bad)  
  41a3e5:	dec    esp
  41a3e7:	inc    DWORD PTR [esi-0x7b]
  41a3ea:	jp     0x41a377
  41a3ec:	jmp    DWORD PTR ds:0x265b5700
  41a3f2:	dec    esp
  41a3f4:	(bad)  
  41a3f5:	(bad)  
  41a3f6:	(bad)  
  41a3f7:	(bad)  
  41a3f8:	fistp  QWORD PTR [ecx+0x18]
  41a3fb:	xchg   DWORD PTR [eax],eax
  41a3fd:	push   cs
  41a3fe:	jmp    edi
  41a400:	cdq    
  41a401:	sub    esp,ecx
  41a403:	add    BYTE PTR [ebx+0x7e000000],al
  41a409:	in     eax,dx
  41a40a:	push   ds
  41a40b:	add    al,0xcc
  41a40d:	jmp    0xff:0xcef70600
  41a414:	mov    edi,edi
  41a416:	(bad)  
  41a417:	jmp    DWORD PTR [eax+0x79]
  41a41a:	or     al,0x16
  41a41c:	(bad)  
  41a41d:	jle    0x41a3a8
  41a41f:	iret   
  41a420:	sahf   
  41a421:	cmp    eax,0xff0089
  41a426:	(bad)  
  41a427:	call   FWORD PTR [ecx-0x76eabdac]
  41a42d:	loope  0x41a3fb
  41a42f:	sub    BYTE PTR [edx],dh
  41a431:	rol    DWORD PTR [eax],cl
  41a433:	add    BYTE PTR [eax],al
  41a435:	int3   
  41a436:	inc    DWORD PTR [eax]
  41a438:	test   bh,cl
  41a43a:	popa   
  41a43b:	jg     0x41a43d
  41a43d:	pop    ecx
  41a43e:	add    esp,0x74
  41a441:	adc    al,0xff
  41a443:	add    BYTE PTR [ebx-0x6f7c0100],al
  41a449:	nop
  41a44a:	push   ebx
  41a44b:	dec    edi
  41a44c:	mov    DWORD PTR [esi+0x16391ff],edi
  41a452:	inc    DWORD PTR [eax]
  41a454:	int3   
  41a455:	inc    DWORD PTR [eax]
  41a457:	or     DWORD PTR [edx-0x621084],0x62
  41a45e:	add    BYTE PTR [edi-0x7210],dl
  41a464:	add    BYTE PTR [eax],al
  41a466:	dec    DWORD PTR [ecx-0x6726fc6a]
  41a46c:	add    dh,bh
  41a46e:	add    BYTE PTR [edi+0x29],bl
  41a471:	lods   al,BYTE PTR ds:[esi]
  41a472:	inc    DWORD PTR [ebx-0x7c7c3400]
  41a478:	(bad)  
  41a479:	(bad)  
  41a47a:	lods   eax,DWORD PTR ds:[esi]
  41a47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a47c:	add    BYTE PTR [ebx],al
  41a47e:	add    BYTE PTR [ebx],cl
  41a480:	add    eax,0xff000029
  41a485:	add    BYTE PTR [ebx-0x469d0b01],al
  41a48b:	add    eax,0xd900aaff
  41a490:	sbb    BYTE PTR [esi+0xff00],ah
  41a496:	(bad)  
  41a497:	jmp    FWORD PTR [edx]
  41a499:	push   esi
  41a49a:	jns    0x41a4c0
  41a49c:	call   FWORD PTR [ebx+0x532ec3ff]
  41a4a2:	mov    edi,edi
  41a4a4:	int3   
  41a4a5:	add    BYTE PTR [ebx+0x2ec4da00],al
  41a4ab:	mov    DWORD PTR [ecx-0x37fd0024],ecx
  41a4b1:	into   
  41a4b2:	cmp    edi,0xffffff83
  41a4b5:	add    bh,bh
  41a4b7:	jmp    DWORD PTR [ebx-0x32]
  41a4ba:	mov    ds:0x46ffbc,eax
  41a4bf:	arpl   WORD PTR [ebx+0x4d],sp
  41a4c2:	inc    DWORD PTR [ebx+0xcc83ff]
  41a4c8:	mov    ds:0xa98449,eax
  41a4cd:	xchg   BYTE PTR [eax],al
  41a4cf:	retf   
  41a4d0:	and    eax,0x89cc837d
  41a4d5:	add    bh,bh
  41a4d7:	add    dl,ah
  41a4d9:	out    dx,eax
  41a4da:	test   eax,0x6d0001
  41a4df:	test   eax,0xffba19
  41a4e4:	inc    DWORD PTR [eax]
  41a4e6:	cmp    edi,0x18
  41a4e9:	xchg   BYTE PTR [ecx-0x5f],ah
  41a4ec:	mov    esi,edi
  41a4ee:	call   DWORD PTR [ecx+0xcc21d4]
  41a4f4:	(bad)  
  41a4f5:	(bad)  
  41a4f6:	(bad)  
  41a4f7:	jmp    DWORD PTR [esp+eiz*8-0x7f]
  41a4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4fc:	add    BYTE PTR [ecx+ecx*4+0xd3a353],dl
  41a503:	inc    DWORD PTR [eax]
  41a505:	(bad)  
  41a506:	inc    DWORD PTR [eax]
  41a508:	xor    BYTE PTR [ebx+edx*4-0x7cadfff1],dh
  41a50f:	sub    cl,dh
  41a511:	jge    0x41a513
  41a513:	add    bh,bh
  41a515:	(bad)  
  41a516:	inc    DWORD PTR [eax]
  41a518:	inc    eax
  41a519:	or     edi,DWORD PTR [esi]
  41a51b:	imul   ecx,DWORD PTR [ecx-0x7fd10088],0xffffff9c
  41a522:	inc    DWORD PTR [ebx-0x7c7d00]
  41a528:	add    DWORD PTR [edi+eiz*1+0x76003c],edi
  41a52f:	out    dx,eax
  41a530:	in     al,dx
  41a531:	xor    DWORD PTR [ebx-0x340000],eax
  41a537:	push   DWORD PTR [edi]
  41a539:	ins    DWORD PTR es:[edi],dx
  41a53a:	ds mov ch,0xff
  41a53d:	jl     0x41a53f
  41a53f:	cmc    
  41a540:	in     al,dx
  41a541:	add    BYTE PTR es:[ebx-0x7c33ff01],al
  41a548:	adc    al,BYTE PTR [ebp-0x7f00d036]
  41a54e:	inc    esi
  41a550:	xor    al,0xaf
  41a552:	cmp    edi,0xffffffff
  41a555:	add    BYTE PTR [eax],al
  41a557:	sub    DWORD PTR [ebx],0xffffff8a
  41a55a:	mov    DWORD PTR [eax-0x1],edi
  41a55d:	je     0x41a55e
  41a55f:	lock test eax,0xcc00ff3d
  41a565:	dec    DWORD PTR [ecx+0x2e752083]
  41a56b:	sar    edi,1
  41a56d:	sub    edi,edi
  41a56f:	shr    ebx,0xb7
  41a572:	(bad)  
  41a573:	dec    esp
  41a575:	add    BYTE PTR [eax],al
  41a577:	push   esp
  41a579:	dec    ebp
  41a57a:	or     ch,ch
  41a57c:	add    BYTE PTR [esi+0x0],cl
  41a57f:	jno    0x41a5dc
  41a581:	fdivp  st(7),st
  41a583:	cmp    edi,0xffffffff
  41a586:	inc    DWORD PTR [eax]
  41a588:	fild   QWORD PTR ds:0x318329ca
  41a58e:	call   FWORD PTR [esi+eax*4]
  41a591:	add    edi,edi
  41a593:	int3   
  41a594:	inc    DWORD PTR [ebx-0x21700001]
  41a59a:	aaa    
  41a59b:	and    eax,0x26006fff
  41a5a0:	push   cs
  41a5a1:	jbe    0x41a5a3
  41a5a3:	inc    DWORD PTR [eax]
  41a5a5:	add    bh,bh
  41a5a7:	jmp    FWORD PTR [esi]
  41a5a9:	xor    ebx,DWORD PTR [ebx]
  41a5ab:	inc    esi
  41a5ac:	add    BYTE PTR [edx-0x3c1a1934],ch
  41a5b2:	int3   
  41a5b3:	inc    DWORD PTR [eax]
  41a5b5:	add    DWORD PTR [ebx+0x37de3389],0xffffffbe
  41a5bc:	add    BYTE PTR [edi+edi*8],ah
  41a5bf:	mov    ds:0x8983befd,al
  41a5c4:	dec    esp
  41a5c6:	cmp    edi,0xc
  41a5c9:	cld    
  41a5ca:	fs xor al,0xff
  41a5cd:	and    al,0xff
  41a5cf:	div    DWORD PTR [edx+0x46]
  41a5d2:	inc    DWORD PTR [eax]
  41a5d4:	(bad)  
  41a5d5:	(bad)  
  41a5d6:	(bad)  
  41a5d7:	call   FWORD PTR [edx]
  41a5d9:	or     al,0xf9
  41a5db:	mov    DWORD PTR ds:[ecx+0x66c8e100],esi
  41a5e2:	add    BYTE PTR [eax],al
  41a5e4:	add    BYTE PTR [ecx+0x350000ff],cl
  41a5ea:	cmc    
  41a5eb:	mov    ebp,0x75006cff
  41a5f0:	or     eax,0xcc00ef
  41a5f5:	inc    DWORD PTR [ebx+0x12bb1300]
  41a5fb:	and    DWORD PTR [eax],eax
  41a5fd:	sub    eax,0xf36c02ff
  41a602:	cmp    edi,0xffffff83
  41a605:	add    bh,bh
  41a607:	add    BYTE PTR [edx],dl
  41a609:	fisttp WORD PTR [ebx]
  41a60b:	(bad)  
  41a60c:	add    BYTE PTR [ecx],ch
  41a60e:	sbb    DWORD PTR [ecx+0x32],0xffffffef
  41a612:	int3   
  41a613:	int3   
  41a614:	dec    DWORD PTR [ecx+0x375a83ff]
  41a61a:	xor    DWORD PTR ds:0x7a0056ff,esp
  41a620:	bound  eax,QWORD PTR [edx]
  41a622:	(bad)  
  41a623:	inc    DWORD PTR [eax]
  41a625:	inc    DWORD PTR [eax]
  41a627:	int3   
  41a628:	enter  0x8127,0xb3
  41a62c:	add    eax,0xffffffff
  41a62f:	sbb    eax,0xff83f1f6
  41a634:	add    bh,bh
  41a636:	add    BYTE PTR [eax],al
  41a638:	mov    dh,0xdf
  41a63a:	mov    al,0xf
  41a63c:	push   edx
  41a63e:	call   FWORD PTR [eax]
  41a640:	sbb    BYTE PTR [ebp-0x340000],dh
  41a646:	int3   
  41a647:	int3   
  41a648:	mov    BYTE PTR [edx],dh
  41a64a:	cmp    BYTE PTR [edx],dh
  41a64c:	xor    DWORD PTR [ebx+0x4059e9ff],0xffffffff
  41a653:	add    BYTE PTR [ecx-0x2eff0100],cl
  41a659:	dec    eax
  41a65a:	cmp    eax,0xff8accaf
  41a65f:	mov    edx,0xcccc3820
  41a664:	add    BYTE PTR [eax],al
  41a666:	add    ah,cl
  41a668:	data16 or bl,BYTE PTR [edi]
  41a66b:	mov    cl,0xff
  41a66d:	(bad)  
  41a66e:	call   DWORD PTR [edi-0x3f]
  41a671:	call   0x8342a576
  41a676:	(bad)  
  41a677:	jmp    DWORD PTR [edi-0x601a16]
  41a67d:	xchg   esp,eax
  41a67e:	jmp    FWORD PTR [ebp+0x6b]
  41a681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a682:	(bad)  
  41a683:	inc    DWORD PTR [eax]
  41a685:	add    BYTE PTR [ecx+0x424b4500],cl
  41a68b:	cdq    
  41a68c:	push   DWORD PTR [ecx+0x0]
  41a68f:	aad    0x42
  41a691:	sar    edi,0xcc
  41a694:	add    bh,bh
  41a696:	add    bh,bh
  41a698:	jno    0x41a6be
  41a69a:	aad    0xda
  41a69c:	add    bh,al
  41a69e:	int3   
  41a69f:	pusha  
  41a6a0:	aaa    
  41a6a1:	mov    cl,0xff
  41a6a3:	inc    DWORD PTR [ebx-0x1cff0077]
  41a6a9:	add    ch,ch
  41a6ab:	dec    ebx
  41a6ac:	push   edi
  41a6ae:	dec    DWORD PTR [ebp-0x40]
  41a6b1:	mov    WORD PTR [ecx-0x34],cx
  41a6b8:	or     BYTE PTR [edi+0x4d],ah
  41a6bb:	mov    BYTE PTR [ebx-0x24dfff1e],al
  41a6c1:	sti    
  41a6c2:	add    bh,bh
  41a6c4:	add    ah,cl
  41a6c6:	(bad)  
  41a6c7:	jmp    DWORD PTR [edx-0x143a8a]
  41a6cd:	cmp    al,0x0
  41a6cf:	xchg   esi,eax
  41a6d0:	lods   al,BYTE PTR ds:[esi]
  41a6d1:	jno    0x41a6d2
  41a6d3:	add    bh,bh
  41a6d5:	add    BYTE PTR [eax],al
  41a6d7:	inc    DWORD PTR [esi]
  41a6d9:	test   cl,bl
  41a6db:	xor    BYTE PTR [eax],al
  41a6dd:	fld    QWORD PTR [ebx-0x21794]
  41a6e3:	add    ah,cl
  41a6e5:	add    bh,bh
  41a6e7:	add    BYTE PTR ds:0xffa3fb15,cl
  41a6ed:	pop    edx
  41a6ee:	call   DWORD PTR [edx-0x1207]
  41a6f4:	mov    edi,edi
  41a6f6:	int3   
  41a6f7:	dec    DWORD PTR [eax-0x7699616a]
  41a6fd:	fdiv   st(7),st
  41a6ff:	pop    ds
  41a700:	pop    ss
  41a701:	cwde   
  41a702:	dec    esp
  41a704:	inc    DWORD PTR [eax]
  41a706:	inc    DWORD PTR [eax]
  41a708:	mov    ds:0xffcf903a,eax
  41a70d:	lods   eax,DWORD PTR ds:[esi]
  41a70e:	jmp    FWORD PTR ds:0xb0a7
  41a714:	add    bh,bh
  41a716:	dec    DWORD PTR [ecx+0x38284e2f]
  41a71c:	add    DWORD PTR [eax-0x70fb757d],0xffffffff
  41a723:	(bad)  
  41a724:	(bad)  
  41a725:	inc    DWORD PTR [eax]
  41a727:	(bad)  
  41a728:	mov    esi,0x83d890c1
  41a72d:	jno    0x41a72e
  41a72f:	lds    eax,FWORD PTR [esi+0x2d]
  41a732:	(bad)  
  41a733:	(bad)  
  41a734:	dec    DWORD PTR [ecx+0x72840083]
  41a73a:	mov    ebp,0xffa3ff6d
  41a73f:	rcr    ch,1
  41a741:	mov    eax,ds:0x8900ffff
  41a746:	int3   
  41a747:	add    BYTE PTR [ebp-0x74ac65],dl
  41a74d:	mov    cl,0x83
  41a74f:	and    bh,dl
  41a751:	push   ss
  41a752:	add    bh,bh
  41a754:	add    bh,bh
  41a756:	add    bh,bh
  41a758:	mov    al,0x7
  41a75a:	adc    DWORD PTR [ecx],edx
  41a75c:	int3   
  41a75d:	dec    esi
  41a75e:	jmp    FWORD PTR [edi-0x54bc]
  41a764:	cmp    edi,0xffffffff
  41a767:	add    BYTE PTR [edi-0x336ccf10],dh
  41a76d:	fld    DWORD PTR [eax]
  41a76f:	stos   BYTE PTR es:[edi],al
  41a770:	out    0x13,al
  41a772:	(bad)  
  41a773:	(bad)  
  41a774:	(bad)  
  41a775:	(bad)  
  41a776:	(bad)  
  41a777:	call   DWORD PTR [edi]
  41a779:	out    0x77,eax
  41a77b:	sar    bh,0x80
  41a77e:	cmp    DWORD PTR [edi-0x7600d590],0xffffffcc
  41a785:	add    BYTE PTR [ecx+0x7ede5b00],cl
  41a78b:	sub    bh,bh
  41a78d:	push   es
  41a78e:	(bad)  
  41a78f:	cmp    eax,DWORD PTR [esi-0x7]
  41a792:	int3   
  41a793:	inc    DWORD PTR [eax]
  41a795:	dec    esp
  41a797:	call   FWORD PTR [ecx+0xbe0b24]
  41a79d:	enter  0x1c83,0x1
  41a7a1:	jl     0x41a7a3
  41a7a3:	add    DWORD PTR [eax],0xffffff83
  41a7a6:	add    BYTE PTR [eax],al
  41a7a8:	mov    bh,0x61
  41a7aa:	mov    WORD PTR [edx-0x34],ss
  41a7ad:	mov    al,0x0
  41a7af:	(bad)  
  41a7b0:	cmp    BYTE PTR [edi-0x7d],dh
  41a7b3:	inc    DWORD PTR [eax]
  41a7b5:	(bad)  
  41a7b6:	inc    DWORD PTR [eax]
  41a7b8:	cmp    DWORD PTR [ebp-0x350013b2],ecx
  41a7be:	add    DWORD PTR [edi],0xffffff9d
  41a7c1:	push   esi
  41a7c2:	add    ah,cl
  41a7c4:	mov    DWORD PTR [eax],eax
  41a7c6:	add    BYTE PTR [eax],al
  41a7c8:	pop    ecx
  41a7c9:	mov    esp,0x76ffa29b
  41a7ce:	add    bh,dh
  41a7d0:	lahf   
  41a7d1:	add    DWORD PTR [eax],0xff00ff00
  41a7d7:	add    BYTE PTR [edi+ebp*8+0x58],ch
  41a7db:	ja     0x41a7dc
  41a7dd:	pop    edx
  41a7de:	jmp    DWORD PTR [ebp+ecx*2-0x7cff7c97]
  41a7e5:	add    BYTE PTR [eax],al
  41a7e7:	or     DWORD PTR [ebp+0x7],0xffffffe9
  41a7eb:	fcos   
  41a7ed:	jae    0x41a7ee
  41a7ef:	xor    esi,DWORD PTR [ecx]
  41a7f1:	pop    ss
  41a7f2:	inc    DWORD PTR [eax]
  41a7f4:	(bad)  
  41a7f5:	inc    DWORD PTR [ebx-0x3a4f497d]
  41a7fb:	lods   eax,DWORD PTR ds:[esi]
  41a7fc:	jmp    FWORD PTR [edi-0x1]
  41a7ff:	jle    0x41a827
  41a801:	adc    BYTE PTR [ebx-0xff7d],al
  41a807:	call   DWORD PTR [edi+0xe95023]
  41a80d:	dec    ecx
  41a80e:	dec    DWORD PTR [edx]
  41a810:	and    eax,0xffff8300
  41a815:	add    BYTE PTR [eax],al
  41a817:	call   DWORD PTR ds:0xff621386
  41a81d:	leave  
  41a81e:	add    BYTE PTR [ecx],ah
  41a820:	add    al,0x53
  41a822:	inc    DWORD PTR [eax]
  41a824:	mov    DWORD PTR [ebx+0x6d5eff83],eax
  41a82a:	cmp    al,0x2
  41a82c:	add    bh,cl
  41a82e:	add    BYTE PTR [ecx+ebx*1-0x36],dh
  41a832:	add    BYTE PTR [ebx-0x7c0100],al
  41a838:	fild   QWORD PTR [edx-0x70005417]
  41a83e:	add    BYTE PTR [ebp+0x77],cl
  41a841:	jl     0x41a842
  41a843:	add    bh,bh
  41a845:	(bad)  
  41a846:	dec    esp
  41a848:	mov    ecx,0x898a1bb8
  41a84d:	lds    eax,FWORD PTR [eax]
  41a84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a850:	mov    bl,0x3e
  41a852:	(bad)  
  41a853:	(bad)  
  41a854:	dec    DWORD PTR [ecx+0x3a2d83ff]
  41a85a:	pop    ebp
  41a85b:	cmp    eax,0xddccebff
  41a860:	out    dx,al
  41a861:	adc    edi,edi
  41a863:	int3   
  41a864:	add    DWORD PTR [eax],0xffffff83
  41a867:	add    ch,bl
  41a869:	xor    al,0xf8
  41a86b:	dec    eax
  41a86c:	add    BYTE PTR [esi],al
  41a86e:	add    BYTE PTR [ebx+0xff2de0],cl
  41a874:	mov    DWORD PTR [eax],eax
  41a876:	add    bh,bh
  41a878:	scas   al,BYTE PTR es:[edi]
  41a879:	(bad)  
  41a87a:	out    dx,al
  41a87b:	push   esp
  41a87c:	jmp    FWORD PTR ds:0xe664e4cc
  41a882:	cmp    edi,0x0
  41a885:	int3   
  41a886:	add    bh,bh
  41a888:	shl    bh,1
  41a88a:	dec    edi
  41a88b:	dec    edx
  41a88c:	(bad)  
  41a88d:	out    dx,al
  41a88e:	jmp    DWORD PTR ds:0xccff3bfb
  41a894:	(bad)  
  41a895:	inc    DWORD PTR [eax]
  41a897:	inc    DWORD PTR [eax+0x24]
  41a89a:	lock jb 0x41a89d
  41a89d:	fdiv   st(7),st
  41a89f:	dec    ebx
  41a8a0:	jg     0x41a855
  41a8a2:	cmp    edi,0xffffff83
  41a8a5:	(bad)  
  41a8a6:	dec    esp
  41a8a8:	dec    ebx
  41a8a9:	sub    al,BYTE PTR [esi-0x947c4d]
  41a8af:	ja     0x41a855
  41a8b1:	add    eax,DWORD PTR [ebx-0xff01]
  41a8b7:	sbb    DWORD PTR [esi],0x68
  41a8ba:	cli    
  41a8bb:	pop    ecx
  41a8bc:	add    dl,dl
  41a8be:	call   esi
  41a8c0:	pop    esi
  41a8c1:	in     eax,dx
  41a8c2:	inc    DWORD PTR [eax]
  41a8c4:	(bad)  
  41a8c5:	(bad)  
  41a8c6:	(bad)  
  41a8c7:	push   DWORD PTR [ebx]
  41a8c9:	ss fcmovne st,st(6)
  41a8cc:	dec    DWORD PTR [esi-0x1]
  41a8cf:	fisttp WORD PTR [ebp-0x7c00003c]
  41a8d5:	or     esp,0x0
  41a8d8:	inc    edx
  41a8d9:	dec    edi
  41a8da:	imul   edx,DWORD PTR [ebx+0x0],0x78d2cc96
  41a8e1:	mov    ch,0x0
  41a8e3:	inc    DWORD PTR [ebx-0x15000034]
  41a8e9:	mov    bl,0x8c
  41a8eb:	mov    cl,0xff
  41a8ed:	sub    DWORD PTR [eax],eax
  41a8ef:	ret    0xc1e2
  41a8f2:	int3   
  41a8f3:	add    DWORD PTR [eax],0xffffff89
  41a8f6:	inc    DWORD PTR [eax]
  41a8f8:	xor    DWORD PTR [esi-0x1e00f1e3],esp
  41a8fe:	add    BYTE PTR [edi],dh
  41a900:	dec    edx
  41a901:	push   0x0
  41a903:	(bad)  
  41a904:	inc    DWORD PTR [ebx+0x3277ff00]
  41a90a:	xor    al,BYTE PTR [eax+0x30ffdfff]
  41a910:	and    edi,DWORD PTR [esi-0x7d]
  41a913:	dec    esp
  41a915:	add    bh,bh
  41a917:	call   DWORD PTR [eax+eax*8]
  41a91a:	sub    al,0x73
  41a91c:	add    BYTE PTR [ebx+eax*4],bh
  41a91f:	mov    ch,0x68
  41a921:	sbb    al,BYTE PTR [ebx+0xff00]
  41a927:	int3   
  41a928:	xor    bl,BYTE PTR [ebx+0x69ffa021]
  41a92e:	or     DWORD PTR [ebp-0x7c0088f8],0xffffff83
  41a935:	inc    DWORD PTR [eax]
  41a937:	add    BYTE PTR [esi-0x7c2fbdc2],ah
  41a93d:	fdivr  st,st(7)
  41a93f:	sahf   
  41a940:	jge    0x41a9bd
  41a942:	add    bh,bh
  41a944:	add    bh,bh
  41a946:	int3   
  41a947:	mov    DWORD PTR [ebp+eax*1-0x55001f42],ebp
  41a94e:	(bad)  
  41a94f:	mov    edx,0x83ff88ef
  41a954:	add    DWORD PTR [eax],0xffffff83
  41a957:	push   DWORD PTR [ecx]
  41a959:	je     0x41a981
  41a95b:	ret    
  41a95c:	call   DWORD PTR [edi+edi*8]
  41a95f:	mov    edi,DWORD PTR [ebx]
  41a961:	and    al,0xcc
  41a963:	(bad)  
  41a964:	dec    esp
  41a966:	dec    esp
  41a968:	dec    esi
  41a969:	rcl    BYTE PTR [ebx+0x4f],cl
  41a96c:	call   FWORD PTR [esi+0x0]
  41a96f:	mov    bl,0xdf
  41a971:	pop    ss
  41a972:	(bad)  
  41a973:	(bad)  
  41a974:	dec    DWORD PTR [ecx-0x1ef93301]
  41a97a:	mov    al,0xab
  41a97c:	add    BYTE PTR [ebp-0x3672c801],cl
  41a982:	(bad)  
  41a983:	inc    DWORD PTR [ebx+0x34ccffff]
  41a989:	jmp    0x41a9e2
  41a98b:	jmp    DWORD PTR [si+0x7f00]
  41a990:	push   ebp
  41a991:	outs   dx,BYTE PTR ds:[esi]
  41a992:	add    bh,bh
  41a994:	inc    DWORD PTR [eax]
  41a996:	inc    DWORD PTR [ebx-0x2f884d28]
  41a99c:	add    BYTE PTR [ecx+0x1b9b12ff],ah
  41a9a2:	int3   
  41a9a3:	add    DWORD PTR [eax],0xffffffff
  41a9a6:	cmp    edi,0x6f
  41a9a9:	iret   
  41a9aa:	pop    ds
  41a9ab:	inc    edi
  41a9ac:	push   DWORD PTR [edi+edi*8-0x74c36e]
  41a9b3:	int3   
  41a9b4:	int3   
  41a9b5:	(bad)  
  41a9b6:	inc    DWORD PTR [eax]
  41a9b8:	mov    al,ds:0xfff5c8dd
  41a9bd:	xchg   ebp,eax
  41a9be:	push   DWORD PTR [edi-0x40]
  41a9c1:	inc    ebp
  41a9c2:	mov    edi,edi
  41a9c4:	inc    DWORD PTR [eax]
  41a9c6:	dec    esp
  41a9c8:	retf   
  41a9c9:	jecxz  0x41a964
  41a9cb:	dec    eax
  41a9cc:	sbb    DWORD PTR [ecx+ecx*4-0x12],0x21
  41a9d1:	out    0xff,al
  41a9d3:	or     esp,0xffffffff
  41a9d6:	add    bh,bh
  41a9d8:	xor    eax,0xffa9f261
  41a9dd:	test   edi,edi
  41a9df:	dec    edi
  41a9e0:	pop    edi
  41a9e1:	jns    0x41a966
  41a9e3:	add    BYTE PTR [eax],al
  41a9e5:	(bad)  
  41a9e6:	(bad)  
  41a9e7:	inc    edi
  41a9e9:	sub    eax,0xbbcc2ff7
  41a9ee:	inc    ecx
  41a9f0:	ret    0xfff0
  41a9f3:	cmp    edi,0x0
  41a9f6:	add    bh,bh
  41a9f8:	call   DWORD PTR [ebx]
  41a9fa:	xlat   BYTE PTR ds:[ebx]
  41a9fb:	test   al,0x83
  41a9fd:	call   0x9ef58c02
  41aa02:	add    BYTE PTR [eax],al
  41aa04:	add    DWORD PTR [ebx+0x4fd6ffff],0xffffffbf
  41aa0b:	(bad)  [ecx-0x3e11007f]
  41aa11:	out    0x0,eax
  41aa13:	add    DWORD PTR [ebx+0x9ffffff],0xffffffdb
  41aa1a:	out    0xf9,eax
  41aa1c:	jmp    FWORD PTR [ecx+0x0]
  41aa1f:	push   ebp
  41aa20:	cmp    al,0xad
  41aa22:	add    BYTE PTR [ebx-0x7c767601],al
  41aa28:	xor    ebx,ecx
  41aa2a:	inc    ebp
  41aa2b:	push   0xffffffff
  41aa2d:	mov    BYTE PTR [eax],0xf9
  41aa30:	daa    
  41aa31:	xchg   ecx,eax
  41aa32:	dec    DWORD PTR [ecx-0x7cff0034]
  41aa38:	adc    al,0x97
  41aa3a:	js     0x41aa0a
  41aa3c:	add    bh,cl
  41aa3e:	jmp    FWORD PTR [ebp-0xf]
  41aa41:	aad    0x0
  41aa43:	inc    DWORD PTR [ebx-0x7ffff01]
  41aa49:	cmp    DWORD PTR es:[edi-0x7d],ebp
  41aa4d:	jmp    0x6f922551
  41aa52:	add    BYTE PTR [ecx-0x7700],cl
  41aa58:	adc    eax,0xffdee493
  41aa5d:	jo     0x41aa5f
  41aa5f:	cli    
  41aa60:	and    eax,0x830000c4
  41aa65:	dec    DWORD PTR [ecx-0x748fa901]
  41aa6b:	ret    
  41aa6c:	mov    DWORD PTR [edi+edi*8+0x270f5d],eax
  41aa73:	add    BYTE PTR [ebx+0x2f838300],al
  41aa79:	not    DWORD PTR [ecx]
  41aa7b:	cld    
  41aa7c:	mov    DWORD PTR [eax-0x3815e001],eax
  41aa82:	add    BYTE PTR [eax],al
  41aa84:	dec    esp
  41aa86:	dec    esp
  41aa88:	pop    eax
  41aa89:	lods   eax,DWORD PTR ds:[esi]
  41aa8a:	aam    0xca
  41aa8c:	dec    DWORD PTR [edi]
  41aa8e:	int3   
  41aa8f:	add    BYTE PTR [eax+0x49],0xff
  41aa93:	add    DWORD PTR [ebx-0x6bff3301],0x37
  41aa9a:	bound  ebx,QWORD PTR [edi+0x2bffe3ff]
  41aaa0:	fnstsw WORD PTR [edi+edi*8]
  41aaa3:	cmp    edi,0xffffff83
  41aaa6:	inc    DWORD PTR [eax]
  41aaa8:	stos   DWORD PTR es:[edi],eax
  41aaa9:	xor    eax,0x97ccf0cf
  41aaae:	add    BYTE PTR [edi+0x5b],ah
  41aab1:	scas   eax,DWORD PTR es:[edi]
  41aab2:	inc    DWORD PTR [eax]
  41aab4:	inc    DWORD PTR [eax]
  41aab6:	add    BYTE PTR [eax],al
  41aab8:	enter  0x1961,0xc8
  41aabc:	add    BYTE PTR [edx],al
  41aabe:	(bad)  
  41aabf:	jl     0x41aa8f
  41aac1:	jmp    0x41aac3
  41aac3:	inc    DWORD PTR [ebx-0x38ff0001]
  41aac9:	mov    al,0xa1
  41aacb:	enter  0x6400,0x0
  41aacf:	gs call 0x8342aa65
  41aad5:	cmp    edi,0xffffff83
  41aad8:	call   0x837f:0xcc6a61b9
  41aadf:	add    edi,DWORD PTR [edx+0x83ff]
  41aae5:	add    BYTE PTR [ebx-0x3559d400],al
  41aaeb:	ss int3 
  41aaed:	or     al,0xff
  41aaef:	sti    
  41aaf0:	mov    dl,0xa4
  41aaf2:	add    bh,bh
  41aaf4:	add    DWORD PTR [eax],0xffffffff
  41aaf7:	sbb    edi,0xffffff95
  41aafa:	mov    ah,ch
  41aafc:	(bad)  
  41aafd:	std    
  41aafe:	add    BYTE PTR [edx],bl
  41ab00:	test   BYTE PTR [esi-0xffff34],0x0
  41ab07:	mov    DWORD PTR [edi+0x20],ecx
  41ab0a:	stos   DWORD PTR es:[edi],eax
  41ab0b:	popa   
  41ab0c:	(bad)  
  41ab0d:	cli    
  41ab0e:	dec    DWORD PTR [ebp+esi*4-0x49]
  41ab12:	(bad)  
  41ab13:	inc    DWORD PTR [eax]
  41ab15:	(bad)  
  41ab16:	(bad)  
  41ab17:	jmp    FWORD PTR [esi+0x43]
  41ab1a:	xchg   esi,eax
  41ab1b:	xchg   edi,edi
  41ab1d:	(bad)  
  41ab1e:	mov    esp,esi
  41ab20:	jg     0x41ab0d
  41ab22:	add    bh,bh
  41ab24:	dec    esp
  41ab26:	cmp    edi,0xffffff9e
  41ab29:	test   al,0x33
  41ab2b:	inc    esp
  41ab2c:	push   eax
  41ab2e:	jmp    DWORD PTR [eax+ebp*8-0x17]
  41ab32:	int3   
  41ab33:	add    bh,bh
  41ab35:	(bad)  
  41ab36:	(bad)  
  41ab37:	call   FWORD PTR [ebx-0xdb803]
  41ab3d:	fadd   QWORD PTR [eax]
  41ab3f:	out    dx,al
  41ab40:	sub    ebp,DWORD PTR [esi-0x767c7d00]
  41ab46:	inc    DWORD PTR [eax]
  41ab48:	adc    eax,0xff493e8b
  41ab4d:	cmp    edi,edi
  41ab4f:	jecxz  0x41abc6
  41ab51:	arpl   WORD PTR [ebx-0x337c7601],ax
  41ab57:	push   edi
  41ab59:	push   0x7ff5ba2
  41ab5e:	jmp    DWORD PTR [esi-0x7e]
  41ab61:	cmp    bh,bh
  41ab63:	add    BYTE PTR [ebx+0x7b008983],al
  41ab69:	mov    edx,DWORD PTR [ebp-0x88ff40]
  41ab6f:	jecxz  0x41ab43
  41ab71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab72:	inc    DWORD PTR [eax]
  41ab74:	add    BYTE PTR [eax],al
  41ab76:	cmp    edi,0x17
  41ab79:	dec    ebp
  41ab7a:	mov    ebx,0x2400d8
  41ab7f:	jmp    0x41ab9a
  41ab81:	inc    eax
  41ab82:	(bad)  
  41ab83:	inc    DWORD PTR [eax]
  41ab85:	add    bh,bh
  41ab87:	jmp    FWORD PTR ds:0xffe10a5f
  41ab8d:	mov    eax,DWORD PTR [eax]
  41ab8f:	lock mov esi,0xff00ffef
  41ab95:	(bad)  
  41ab96:	inc    DWORD PTR [eax]
  41ab98:	adc    BYTE PTR [esi-0x2e00f32d],ah
  41ab9e:	dec    ebx
  41aba0:	jns    0x41abac
  41aba2:	int3   
  41aba3:	(bad)  
  41aba4:	dec    DWORD PTR [ecx-0x55cb0001]
  41abaa:	push   cs
  41abab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abac:	or     DWORD PTR [ecx-0x65d34701],0xffffff89
  41abb3:	add    bh,bh
  41abb5:	mov    DWORD PTR [ebx+0x6d9a1a00],eax
  41abbb:	cld    
  41abbc:	mov    DWORD PTR [eax+eax*1-0x13749d],ecx
  41abc3:	inc    DWORD PTR [eax]
  41abc5:	add    BYTE PTR [eax],al
  41abc7:	int3   
  41abc8:	(bad)  
  41abc9:	rcl    bl,0x68
  41abcc:	call   FWORD PTR [eax-0x2d38ae01]
  41abd2:	(bad)  
  41abd3:	inc    DWORD PTR [eax]
  41abd5:	inc    DWORD PTR [eax]
  41abd7:	inc    ebx
  41abd9:	xchg   esp,eax
  41abda:	fs cmp bh,bh
  41abdd:	lahf   
  41abde:	dec    esi
  41abe0:	imul   edx,DWORD PTR [ecx+0x8300ff],0x2a9c00cc
  41abea:	enter  0x43,0xac
  41abee:	and    DWORD PTR [ebp+0xcc7177],0xffffff83
  41abf5:	add    DWORD PTR [ebx+0x63acd800],0x1e
  41abfc:	add    BYTE PTR [eax-0x297701],al
  41ac02:	add    DWORD PTR [eax],0xffffffcc
  41ac05:	cmp    edi,0xffffffff
  41ac08:	xor    BYTE PTR [edx-0x11],dh
  41ac0b:	loopne 0x41abd9
  41ac0d:	push   0x1e2f89
  41ac12:	int3   
  41ac13:	add    BYTE PTR [eax],al
  41ac15:	cmp    edi,0xffffffcc
  41ac18:	pop    ebx
  41ac19:	jno    0x41ac0d
  41ac1b:	imul   eax,DWORD PTR [ebx-0x7251ff99],0x83ff0005
  41ac25:	add    BYTE PTR [ebx+0x425a1100],al
  41ac2b:	repnz add dl,ah
  41ac2e:	add    BYTE PTR [ecx-0x1f],bl
  41ac31:	les    eax,FWORD PTR [ebx-0xff7c01]
  41ac37:	int3   
  41ac38:	pop    eax
  41ac39:	in     al,0x62
  41ac3b:	dec    ecx
  41ac3c:	int3   
  41ac3d:	pop    ds
  41ac3e:	mov    DWORD PTR [edi-0x7c7cf954],ebp
  41ac44:	(bad)  
  41ac45:	inc    DWORD PTR [ebx-0x1abb8000]
  41ac4b:	xor    bh,bh
  41ac4d:	xchg   ebp,eax
  41ac4e:	inc    DWORD PTR [edx]
  41ac50:	inc    esi
  41ac51:	and    al,BYTE PTR [eax]
  41ac53:	int3   
  41ac54:	(bad)  
  41ac55:	inc    DWORD PTR [eax]
  41ac57:	int3   
  41ac58:	pop    ebp
  41ac59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac5a:	pop    ebx
  41ac5b:	inc    esp
  41ac5c:	add    BYTE PTR [esi],al
  41ac5e:	add    BYTE PTR [edx],dl
  41ac60:	arpl   WORD PTR [eax-0x7cff0077],ax
  41ac66:	add    DWORD PTR [ebx+0x2c3dc57f],0xffffffcc
  41ac6d:	int    0x0
  41ac6f:	repnz push ebp
  41ac72:	inc    DWORD PTR [eax]
  41ac74:	add    DWORD PTR [eax],0xffffffff
  41ac77:	add    BYTE PTR [ebx],ch
  41ac79:	mov    ebx,0x78001e4e
  41ac7e:	add    BYTE PTR [esi],ah
  41ac80:	out    dx,eax
  41ac81:	jmp    0x41ac06
  41ac83:	inc    DWORD PTR [eax]
  41ac85:	cmp    edi,0xffffffff
  41ac88:	lahf   
  41ac89:	adc    ebx,eax
  41ac8b:	test   BYTE PTR [ebx-0x7c97ff24],0x5a
  41ac92:	(bad)  
  41ac93:	inc    DWORD PTR [eax]
  41ac95:	(bad)  
  41ac96:	(bad)  
  41ac97:	dec    DWORD PTR [edi-0x2b]
  41ac9a:	fidivr WORD PTR [ecx+0x44838383]
  41aca0:	scas   al,BYTE PTR es:[edi]
  41aca1:	mov    esp,0xff8900cc
  41aca6:	mov    DWORD PTR [eax],eax
  41aca8:	add    BYTE PTR [edi+0x6893efa],ch
  41acae:	add    BYTE PTR [edx],bl
  41acb0:	jl     0x41ad01
  41acb2:	add    bh,bh
  41acb4:	add    BYTE PTR [eax],al
  41acb6:	add    BYTE PTR [ebx+0x535bc971],al
  41acbc:	jmp    FWORD PTR [edx+0x0]
  41acbf:	test   DWORD PTR [eax+0x27],eax
  41acc2:	add    BYTE PTR [eax],al
  41acc4:	add    bh,bh
  41acc6:	or     DWORD PTR [ecx+0x3d79b05b],0xffffffff
  41accd:	dec    ebx
  41acce:	adc    esp,0x5b
  41acd1:	leave  
  41acd2:	add    DWORD PTR [ebx+0x8389ff],0xfffffff5
  41acd9:	std    
  41acda:	mov    ebp,0xbf832d
  41acdf:	out    dx,eax
  41ace0:	rcl    ebp,1
  41ace2:	inc    DWORD PTR [eax]
  41ace4:	add    DWORD PTR [eax],0x0
  41ace7:	int3   
  41ace8:	push   ss
  41ace9:	xor    edx,DWORD PTR [ebp+0xdf0045]
  41acef:	inc    eax
  41acf0:	push   ds
  41acf1:	pop    esi
  41acf2:	add    BYTE PTR [eax],al
  41acf4:	add    BYTE PTR [eax],al
  41acf6:	int3   
  41acf7:	int3   
  41acf8:	xchg   ebx,eax
  41acf9:	mov    cl,0x29
  41acfb:	push   esi
  41acfc:	dec    DWORD PTR [edi+edi*8]
  41acff:	std    
  41ad00:	shl    ebp,cl
  41ad02:	add    BYTE PTR [ebx-0x3301],al
  41ad08:	pop    edx
  41ad09:	ret    
  41ad0a:	stos   BYTE PTR es:[edi],al
  41ad0b:	dec    ecx
  41ad0c:	inc    DWORD PTR ds:0x6b44a200
  41ad12:	inc    DWORD PTR [eax]
  41ad14:	add    bh,bh
  41ad16:	inc    DWORD PTR [ebx+0x781b5f80]
  41ad1c:	(bad)  
  41ad1d:	fld    QWORD PTR [eax]
  41ad1f:	(bad)
  41ad23:	add    bh,bh
  41ad25:	int3   
  41ad26:	mov    DWORD PTR [ecx+0x7413e22d],ecx
  41ad2c:	add    BYTE PTR [edi-0x7d],ah
  41ad2f:	push   ds
  41ad30:	sub    DWORD PTR [edi-0x7d],ecx
  41ad33:	add    bh,bh
  41ad35:	int3   
  41ad36:	mov    DWORD PTR [eax],eax
  41ad38:	sub    eax,0x2da18a
  41ad3d:	fadd   QWORD PTR [eax]
  41ad3f:	cmp    bh,BYTE PTR [eax]
  41ad41:	cwde   
  41ad42:	dec    DWORD PTR [ecx+0xffffff]
  41ad48:	out    0x51,eax
  41ad4a:	jmp    0x101ad82
  41ad4f:	inc    esp
  41ad50:	jne    0x41adab
  41ad52:	add    bh,bh
  41ad54:	inc    DWORD PTR [ebx+0x434bffcc]
  41ad5a:	adc    DWORD PTR [ebx+eax*4-0x1ca300b5],ebp
  41ad61:	push   edi
  41ad62:	add    ah,cl
  41ad64:	add    bh,bh
  41ad66:	inc    DWORD PTR [eax]
  41ad68:	add    ch,BYTE PTR [edx+0x39cc6c42]
  41ad6e:	add    BYTE PTR [eax*1-0xff7c6f],ch
  41ad75:	inc    DWORD PTR [ebx-0x3938b600]
  41ad7b:	repz sbb DWORD PTR [ecx+0x1de07ff],0xffffff83
  41ad83:	add    bh,bh
  41ad85:	(bad)  
  41ad86:	inc    DWORD PTR [eax]
  41ad88:	mov    dl,0x27
  41ad8a:	(bad)  
  41ad8b:	out    dx,eax
  41ad8c:	add    BYTE PTR [edx-0x79689701],dl
  41ad92:	add    BYTE PTR [eax],al
  41ad94:	add    bh,bh
  41ad96:	(bad)  
  41ad97:	push   DWORD PTR [ecx]
  41ad99:	cmp    edx,0xff86ff52
  41ad9f:	std    
  41ada0:	mov    eax,0xffff0079
  41ada5:	cmp    edi,0x0
  41ada8:	mov    edi,0xff116879
  41adad:	add    eax,0xabfd75cc
  41adb2:	add    bh,bh
  41adb4:	add    bh,bh
  41adb6:	int3   
  41adb7:	mov    DWORD PTR [edx+0x2a],ebx
  41adba:	pop    es
  41adbb:	sub    al,0x0
  41adbd:	and    al,0xff
  41adbf:	mov    WORD PTR [ebx],ds
  41adc1:	sbb    eax,0xff0000cc
  41adc6:	cmp    edi,0x45
  41adc9:	sub    eax,0x9b83db86
  41adce:	add    BYTE PTR [edi-0x849d],bh
  41add4:	(bad)  
  41add5:	inc    DWORD PTR [ebx-0xe63c87d]
  41addb:	push   0xffffff83
  41addd:	xor    edi,edi
  41addf:	add    al,0x98
  41ade1:	xchg   edi,eax
  41ade2:	inc    DWORD PTR [eax]
  41ade4:	add    bh,bh
  41ade6:	(bad)  
  41ade7:	inc    DWORD PTR [edi+0x6e]
  41adea:	sbb    al,0x52
  41adec:	add    bl,ah
  41adee:	jmp    DWORD PTR [ecx-0xffd90c]
  41adf4:	add    BYTE PTR [eax],al
  41adf6:	(bad)  
  41adf7:	jmp    edi
  41adf9:	push   edx
  41adfa:	(bad)  
  41adfb:	sub    edi,edi
  41adfd:	adc    DWORD PTR [eax],eax
  41adff:	push   esi
  41ae00:	in     al,dx
  41ae01:	jbe    0x41ae03
  41ae03:	(bad)  
  41ae04:	inc    DWORD PTR [eax]
  41ae06:	add    bh,bh
  41ae08:	fdiv   DWORD PTR [ecx+eax*2-0x70]
  41ae0c:	dec    edi
  41ae0e:	adc    edi,0xffffffce
  41ae11:	stos   DWORD PTR es:[edi],eax
  41ae12:	add    DWORD PTR [eax],0xffffffff
  41ae15:	inc    DWORD PTR [ebx+0x62cbf0ff]
  41ae1b:	dec    ebp
  41ae1c:	add    BYTE PTR [edi+edi*8-0x8b18e9],bh
  41ae23:	inc    DWORD PTR [ebx+0x7600ccff]
  41ae29:	cwde   
  41ae2a:	pushf  
  41ae2b:	lahf   
  41ae2c:	call   FWORD PTR [ecx-0x1]
  41ae2f:	pushf  
  41ae30:	mov    edi,0xff000072
  41ae35:	add    BYTE PTR [ebx-0x56a8e877],al
  41ae3b:	nop
  41ae3c:	int3   
  41ae3d:	jecxz  0x41ae3e
  41ae3f:	pop    es
  41ae40:	pushf  
  41ae41:	xor    DWORD PTR [ecx-0x100],ecx
  41ae47:	adc    DWORD PTR [ebx-0xc8ff01],0x65
  41ae4e:	jmp    ecx
  41ae50:	stos   DWORD PTR es:[edi],eax
  41ae51:	stc    
  41ae52:	inc    DWORD PTR [eax]
  41ae54:	add    bh,bh
  41ae56:	(bad)  
  41ae57:	call   DWORD PTR [esi+0x40]
  41ae5a:	add    al,0x43
  41ae5c:	mov    edx,edi
  41ae5e:	add    BYTE PTR [ebp-0x7b],dl
  41ae61:	(bad)  
  41ae62:	inc    DWORD PTR [eax]
  41ae64:	(bad)  
  41ae65:	(bad)  
  41ae66:	inc    DWORD PTR [ebx-0x16acb200]
  41ae6c:	call   DWORD PTR [edi-0x3ba8b800]
  41ae72:	(bad)  
  41ae73:	(bad)  
  41ae74:	(bad)  
  41ae75:	(bad)  
  41ae76:	(bad)  
  41ae77:	call   DWORD PTR [edi-0x3]
  41ae7a:	data16 loop 0x41ae7d
  41ae7d:	inc    edi
  41ae7e:	call   FWORD PTR ds:0xcc1c01
  41ae84:	int3   
  41ae85:	(bad)  
  41ae86:	(bad)  
  41ae87:	jmp    FWORD PTR [ebp-0x2d]
  41ae8a:	jns    0x41ae4f
  41ae8c:	add    BYTE PTR [edx],bh
  41ae8e:	push   DWORD PTR [edi+0x9493]
  41ae94:	add    bh,bh
  41ae96:	mov    edi,edi
  41ae98:	dec    ebx
  41ae99:	push   es
  41ae9a:	xor    ecx,DWORD PTR [eax-0xa000401]
  41aea0:	lds    ebp,FWORD PTR [ecx+0x8383ff]
  41aea6:	(bad)  
  41aea7:	call   DWORD PTR [ebp+eax*2+0x72]
  41aeab:	jmp    FWORD PTR cs:[edx+0x0]
  41aeaf:	xchg   DWORD PTR [edi-0xe],ebp
  41aeb2:	inc    DWORD PTR [eax]
  41aeb4:	add    DWORD PTR [ebx+0x5dddcc83],0xffffffbc
  41aebb:	mov    edi,0x99cc63ff
  41aec0:	add    cl,0xff
  41aec3:	inc    DWORD PTR [eax]
  41aec5:	add    bh,bh
  41aec7:	cmp    esi,0x19
  41aeca:	lods   eax,DWORD PTR ds:[esi]
  41aecb:	adc    bh,bh
  41aecd:	ds mov ebp,ebx
  41aed0:	mov    eax,0x8918
  41aed5:	inc    DWORD PTR [eax]
  41aed7:	dec    DWORD PTR [ebx-0x33941409]
  41aedd:	ja     0x41aedf
  41aedf:	xchg   esi,eax
  41aee0:	mov    edx,DWORD PTR [ebp+0x0]
  41aee3:	cmp    edi,0xffffff83
  41aee6:	(bad)  
  41aee7:	push   esp
  41aee9:	leave  
  41aeea:	arpl   WORD PTR [bx+di+0xe],cx
  41aeef:	stos   BYTE PTR es:[edi],al
  41aef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aef1:	xchg   ecx,eax
  41aef2:	inc    DWORD PTR [ebx-0x7cff7c34]
  41aef8:	sbb    ebp,DWORD PTR [edx-0x6200fa2b]
  41aefe:	inc    eax
  41af00:	into   
  41af01:	sub    eax,0xffffff00
  41af06:	mov    DWORD PTR [ebx+0x274ad104],eax
  41af0c:	call   esi
  41af0e:	(bad)  
  41af0f:	call   DWORD PTR [eax-0x7c00ffbb]
  41af15:	int3   
  41af16:	dec    esp
  41af18:	sti    
  41af19:	push   ebx
  41af1a:	xchg   BYTE PTR [esp+ecx*8],dh
  41af1d:	push   WORD PTR [edi-0xc2e6]
  41af24:	(bad)  
  41af25:	(bad)  
  41af26:	(bad)  
  41af27:	jmp    DWORD PTR [edx+0x9fbe13]
  41af2d:	ins    DWORD PTR es:[edi],dx
  41af2e:	push   ebp
  41af30:	ss dec ebp
  41af32:	mov    DWORD PTR [ecx-0x3400],ecx
  41af38:	mov    WORD PTR [ebx],fs
  41af3a:	cmp    BYTE PTR [edx],ch
  41af3c:	dec    DWORD PTR [eax]
  41af3e:	inc    DWORD PTR [ebx-0x76003715]
  41af44:	(bad)  
  41af45:	(bad)  
  41af46:	inc    DWORD PTR [eax]
  41af48:	js     0x41af11
  41af4a:	xchg   edi,eax
  41af4b:	jns    0x41af4d
  41af4d:	repz add BYTE PTR [edx],cl
  41af50:	les    ecx,FWORD PTR [eax]
  41af52:	inc    DWORD PTR [ebx-0x760001]
  41af58:	sub    eax,0xcc1382d4
  41af5d:	(bad)  
  41af5e:	inc    DWORD PTR [ebx+eiz*2]
  41af61:	sub    al,BYTE PTR [ebx-0x767c0001]
  41af67:	add    ah,ah
  41af69:	clc    
  41af6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af6b:	pusha  
  41af6c:	(bad)  
  41af6d:	jmp    0x71651371
  41af72:	int3   
  41af73:	add    ah,cl
  41af75:	add    bh,bh
  41af77:	add    DWORD PTR [edx],0x1e
  41af7a:	mov    al,bh
  41af7c:	(bad)  
  41af7d:	jnp    0x41af7f
  41af7f:	ficomp WORD PTR [ebp+0x11]
  41af82:	(bad)  
  41af83:	(bad)  
  41af84:	dec    DWORD PTR [ecx-0x18d37c01]
  41af8a:	or     al,0x5a
  41af8c:	int3   
  41af8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af8e:	add    BYTE PTR [edx],bh
  41af90:	shr    BYTE PTR [ecx],1
  41af92:	int3   
  41af93:	add    BYTE PTR [eax],al
  41af95:	dec    esp
  41af97:	dec    esi
  41af99:	shl    al,1
  41af9b:	je     0x41af69
  41af9d:	call   0xffff:0x4276fccc
  41afa4:	(bad)  
  41afa5:	inc    DWORD PTR [ebx-0x33409000]
  41afab:	push   ebp
  41afac:	call   FWORD PTR [esi+0x55b88bff]
  41afb2:	add    DWORD PTR [eax],0xffffffff
  41afb5:	inc    DWORD PTR [eax]
  41afb7:	and    edi,0xffffffeb
  41afba:	xor    al,0xaf
  41afbc:	add    BYTE PTR [esp+ecx*8-0x33a353ce],bl
  41afc3:	add    DWORD PTR [ebx+0x3ffff00],0xffffffab
  41afca:	push   edi
  41afcb:	mov    esi,0x1d836000
  41afd0:	pop    ebx
  41afd1:	xchg   ebp,eax
  41afd2:	add    bh,bh
  41afd4:	(bad)  
  41afd5:	inc    DWORD PTR [ebx+0x178f4cc]
  41afdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afdc:	jmp    DWORD PTR [ecx+0x0]
  41afdf:	adc    ebp,DWORD PTR ds:0x83ff83bb
  41afe5:	inc    DWORD PTR [eax]
  41afe7:	add    BYTE PTR [edi-0x23],dh
  41afea:	call   0x2031:0xffa7ffaa
  41aff1:	add    eax,0xffff00
  41aff6:	add    DWORD PTR [ebx+0x13776047],0xffffffff
  41affd:	(bad)  
  41b000:	loope  0x41afc4
  41b002:	inc    DWORD PTR [eax]
  41b004:	add    bh,bh
  41b006:	add    BYTE PTR [eax],al
  41b008:	jmp    0xff03:0x8333b544
  41b00f:	fucomip st,st(4)
  41b011:	pop    edx
  41b012:	add    bh,bh
  41b014:	inc    DWORD PTR [eax]
  41b016:	cmp    edi,0xffffffd8
  41b019:	dec    esp
  41b01a:	push   0x4
  41b01c:	add    BYTE PTR [ebx-0x1],al
  41b01f:	das    
  41b020:	mov    ecx,DWORD PTR [eax+0x0]
  41b023:	(bad)  
  41b024:	(bad)  
  41b025:	(bad)  
  41b026:	inc    DWORD PTR [eax]
  41b028:	mov    esp,0xcc237af9
  41b02d:	inc    eax
  41b02e:	mov    DWORD PTR [edx+0x58],ecx
  41b031:	add    edi,edi
  41b033:	(bad)  
  41b034:	inc    DWORD PTR [eax]
  41b036:	dec    DWORD PTR [ecx-0x72a0ad48]
  41b03c:	int3   
  41b03d:	(bad)  
  41b03e:	jmp    FWORD PTR [edi-0x6d]
  41b041:	inc    edx
  41b042:	add    DWORD PTR [eax],0xffffffcc
  41b045:	add    bh,bh
  41b047:	cmp    DWORD PTR [esi],0x4
  41b04a:	std    
  41b04b:	mov    ds:0xf7cc8e89,al
  41b050:	pushf  
  41b051:	stos   BYTE PTR es:[edi],al
  41b052:	add    bh,bh
  41b054:	add    BYTE PTR [ecx+0x1b33ff00],cl
  41b05a:	inc    ebp
  41b05b:	popa   
  41b05c:	dec    DWORD PTR [ecx-0x1]
  41b05f:	mov    ds:0xffff5056,eax
  41b064:	add    DWORD PTR [ebx+0x5c3600cc],0xffffffdf
  41b06b:	sub    bh,bh
  41b06d:	enter  0xaeff,0xf1
  41b071:	sahf   
  41b072:	(bad)  
  41b073:	(bad)  
  41b074:	(bad)  
  41b075:	inc    DWORD PTR [eax]
  41b077:	add    dl,dl
  41b079:	mov    eax,ds:0x498935bc
  41b07e:	add    BYTE PTR [edi-0xc782],bl
  41b084:	(bad)  
  41b085:	(bad)  
  41b086:	(bad)  
  41b087:	jmp    DWORD PTR [esp+edx*2+0x5c00a10e]
  41b08e:	add    BYTE PTR [ebx-0x9],dl
  41b091:	pop    ebx
  41b092:	(bad)  
  41b093:	(bad)  
  41b094:	inc    DWORD PTR [eax]
  41b096:	(bad)  
  41b097:	call   FWORD PTR [ebp-0xd96778]
  41b09d:	notrack call DWORD PTR [esi]
  41b0a0:	ds (bad) 
  41b0a2:	dec    DWORD PTR [ecx+0xff83ff]
  41b0a8:	adc    eax,0xff9730ad
  41b0ad:	dec    esp
  41b0ae:	add    BYTE PTR [ecx-0x52],al
  41b0b1:	cmp    al,BYTE PTR [eax]
  41b0b3:	(bad)  
  41b0b4:	(bad)  
  41b0b5:	(bad)  
  41b0b6:	(bad)  
  41b0b7:	push   DWORD PTR [esp+esi*2+0x7bff3af8]
  41b0be:	call   FWORD PTR [ebx+ebx*1+0x83ff1b]
  41b0c5:	inc    DWORD PTR [ebx+0x59958883]
  41b0cb:	xchg   BYTE PTR [eax],al
  41b0cd:	inc    edi
  41b0ce:	push   edi
  41b0d0:	sti    
  41b0d1:	and    ah,cl
  41b0d3:	inc    DWORD PTR [eax]
  41b0d5:	add    BYTE PTR [eax],al
  41b0d7:	(bad)  
  41b0d8:	(bad)  [ebx]
  41b0da:	mov    ds:0xff490049,eax
  41b0df:	mov    ecx,0xcccc891d
  41b0e4:	add    DWORD PTR [eax],0xffffffff
  41b0e7:	add    BYTE PTR [ecx-0x505d2b],ch
  41b0ed:	pop    edi
  41b0ee:	add    eax,0x57
  41b0f1:	sub    edi,edi
  41b0f3:	add    DWORD PTR [ebx+0x53ff00ff],0xffffffdb
  41b0fa:	cld    
  41b0fb:	adc    bh,bh
  41b0fd:	mov    ds:0x8444da00,eax
  41b102:	(bad)  
  41b103:	inc    DWORD PTR [eax]
  41b105:	int3   
  41b106:	(bad)  
  41b107:	jmp    FWORD PTR [ebp+0x16]
  41b10a:	mov    WORD PTR [edi+0x0],gs
  41b10d:	mov    ebp,0x876718ff
  41b112:	(bad)  
  41b113:	(bad)  
  41b114:	inc    DWORD PTR [ebx-0x13beff7d]
  41b11a:	mov    ebx,DWORD PTR [ebx-0x7d]
  41b11d:	mov    ch,0xff
  41b11f:	and    al,0xb6
  41b121:	mov    al,ds:0xff838383
  41b126:	inc    DWORD PTR [eax]
  41b128:	sahf   
  41b129:	test   DWORD PTR ds:[ecx],edx
  41b12c:	add    BYTE PTR [esi-0x77],dl
  41b12f:	fcomp  st(3)
  41b131:	inc    ebp
  41b132:	int3   
  41b133:	add    bh,bh
  41b135:	(bad)  
  41b136:	inc    DWORD PTR [ebx-0x64dc4630]
  41b13c:	add    bh,al
  41b13e:	mov    edx,esi
  41b140:	cwde   
  41b141:	xchg   ebx,eax
  41b142:	(bad)  
  41b143:	(bad)  
  41b144:	inc    DWORD PTR [eax]
  41b146:	(bad)  
  41b147:	jmp    DWORD PTR [esi+0xba128a]
  41b14d:	cdq    
  41b14e:	add    BYTE PTR [esp+ecx*4+0x38],dl
  41b152:	dec    DWORD PTR [ecx+0xff00]
  41b158:	pop    ebp
  41b159:	dec    ebx
  41b15a:	cmp    al,0xb
  41b15c:	add    BYTE PTR [ebx-0x1c419801],bh
  41b162:	(bad)  
  41b163:	(bad)  
  41b164:	inc    DWORD PTR [eax]
  41b166:	(bad)  
  41b167:	dec    DWORD PTR [ebx-0x1e]
  41b16a:	call   0x62a8:0xdaff2b
  41b171:	gs dec esp
  41b174:	dec    DWORD PTR [ecx+0xcccff]
  41b17a:	push   ebp
  41b17b:	jne    0x41b17c
  41b17d:	mov    cl,0x0
  41b17f:	ss das 
  41b181:	sahf   
  41b182:	cmp    edi,0xffffff83
  41b185:	dec    esp
  41b187:	call   FWORD PTR [ebx-0x4c7a9f]
  41b18d:	iret   
  41b18e:	add    bl,ah
  41b190:	mov    ds:0xffcc18,eax
  41b195:	inc    DWORD PTR [ebx-0x22ec0700]
  41b19b:	pushf  
  41b19c:	inc    DWORD PTR [ebp-0x7d]
  41b19f:	mov    bl,0x89
  41b1a1:	sbb    BYTE PTR [ebx+0xffff00],al
  41b1a7:	push   DWORD PTR [ebx]
  41b1a9:	cmp    BYTE PTR cs:[ecx+0x16ff91ff],bl
  41b1b0:	mov    edx,edi
  41b1b2:	(bad)  
  41b1b3:	dec    DWORD PTR [ecx-0x3a000001]
  41b1b9:	scas   eax,DWORD PTR es:[edi]
  41b1ba:	mov    ebx,0x26cce7
  41b1bf:	xchg   edi,eax
  41b1c0:	nop
  41b1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c2:	int3   
  41b1c3:	inc    DWORD PTR [eax]
  41b1c5:	(bad)  
  41b1c6:	inc    DWORD PTR [ebx-0x5065b203]
  41b1cc:	add    BYTE PTR [ebp-0x1],dh
  41b1cf:	or     ebp,eax
  41b1d1:	sar    bh,cl
  41b1d3:	(bad)  
  41b1d4:	(bad)  
  41b1d5:	inc    DWORD PTR [eax]
  41b1d7:	(bad)  
  41b1d8:	out    dx,eax
  41b1d9:	out    0x49,al
  41b1db:	or     edi,edi
  41b1dd:	lods   al,BYTE PTR ds:[esi]
  41b1de:	call   DWORD PTR [ebp+eax*4-0x53]
  41b1e2:	(bad)  
  41b1e3:	inc    DWORD PTR [ebx+0x33ff8983]
  41b1e9:	add    DWORD PTR [esi+0xce0010],ebx
  41b1ef:	cwde   
  41b1f0:	fcomp  QWORD PTR [ebx+0x0]
  41b1f3:	add    bh,bh
  41b1f5:	add    ah,cl
  41b1f7:	sbb    DWORD PTR [eax-0x5a],0x77
  41b1fb:	dec    ebp
  41b1fc:	add    cl,al
  41b1fe:	xor    eax,0x26
  41b201:	test   bh,bh
  41b203:	mov    DWORD PTR [ebx-0x2a007c7d],eax
  41b209:	(bad)  
  41b20a:	test   DWORD PTR [eax-0x5fff6601],0xff895c51
  41b214:	(bad)  
  41b215:	(bad)  
  41b216:	inc    DWORD PTR [ebx+0x2ea9ba0b]
  41b21c:	add    BYTE PTR [ebp-0x1],dl
  41b21f:	xchg   esp,eax
  41b220:	xor    esp,DWORD PTR ds:0xff89ff00
  41b226:	int3   
  41b227:	mov    ecx,esp
  41b229:	add    al,0x9f
  41b22b:	test   BYTE PTR [eax],0x9c
  41b22e:	inc    edi
  41b230:	outs   dx,BYTE PTR ds:[esi]
  41b231:	adc    al,0xff
  41b233:	inc    DWORD PTR [eax]
  41b235:	add    bh,bh
  41b237:	int3   
  41b238:	xchg   edx,eax
  41b239:	je     0x41b23f
  41b23b:	arpl   WORD PTR [eax],ax
  41b23d:	adc    bh,bh
  41b23f:	icebp  
  41b240:	cli    
  41b241:	std    
  41b242:	int3   
  41b243:	or     esp,0xffffffff
  41b246:	cmp    edi,0xa
  41b249:	inc    edx
  41b24a:	adc    al,0x13
  41b24c:	jmp    FWORD PTR ds:0x960c2a89
  41b252:	int3   
  41b253:	inc    DWORD PTR [eax]
  41b255:	or     DWORD PTR [ecx+0x4639b389],0x1a
  41b25c:	or     DWORD PTR [edi+0x0],0xffffff98
  41b260:	cld    
  41b261:	jb     0x41b263
  41b263:	inc    DWORD PTR [eax]
  41b265:	add    BYTE PTR [eax],al
  41b267:	call   FWORD PTR [edi+edx*8-0x1c]
  41b26b:	vminsd xmm0,xmm0,QWORD PTR [ebx-0xdfcb67]
  41b273:	add    DWORD PTR [ebx+0x46cc0083],0x1c
  41b27a:	sti    
  41b27b:	ret    0xbbcc
  41b27e:	(bad)  
  41b27f:	cmp    al,0x66
  41b281:	std    
  41b282:	int3   
  41b283:	int3   
  41b284:	(bad)  
  41b285:	inc    DWORD PTR [eax]
  41b287:	call   FWORD PTR [ecx]
  41b289:	enter  0xb398,0xff
  41b28d:	or     DWORD PTR [ecx-0x7c564a19],ecx
  41b293:	(bad)  
  41b294:	(bad)  
  41b295:	dec    DWORD PTR [ecx-0x1da7a101]
  41b29b:	or     eax,DWORD PTR [eax]
  41b29d:	dec    ebx
  41b29e:	add    bh,bh
  41b2a0:	in     eax,0xaf
  41b2a2:	int3   
  41b2a3:	add    BYTE PTR [eax],al
  41b2a5:	(bad)  
  41b2a6:	(bad)  
  41b2a7:	(bad)  
  41b2a8:	fldenv [eax-0x7e0067c5]
  41b2ae:	sbb    DWORD PTR [esi-0x29],0x4a
  41b2b2:	(bad)  
  41b2b3:	(bad)  
  41b2b4:	(bad)  
  41b2b5:	(bad)  
  41b2b6:	dec    esp
  41b2b8:	cmp    cl,cl
  41b2ba:	fist   WORD PTR [ecx]
  41b2bc:	dec    DWORD PTR [ebx-0x7d]
  41b2bf:	adc    eax,eax
  41b2c1:	mov    al,BYTE PTR [ebx-0x76000077]
  41b2c7:	(bad)  
  41b2c8:	mov    edx,0x83fe57fd
  41b2cd:	test   al,0xff
  41b2cf:	iret   
  41b2d0:	cdq    
  41b2d1:	mov    eax,0xff83ccff
  41b2d6:	add    DWORD PTR [eax],0xffffffd4
  41b2d9:	fnstsw WORD PTR ds:0x83040063
  41b2df:	sbb    eax,0xff00dc1d
  41b2e4:	mov    edi,edi
  41b2e6:	inc    DWORD PTR [eax]
  41b2e8:	div    DWORD PTR [edx-0x72000454]
  41b2ee:	push   ecx
  41b2f0:	pop    ebp
  41b2f1:	fadd   DWORD PTR [eax]
  41b2f3:	dec    DWORD PTR [ecx-0x7c7c0100]
  41b2f9:	inc    esi
  41b2fa:	mov    dl,0xb9
  41b2fc:	call   FWORD PTR [edi]
  41b2fe:	jmp    DWORD PTR [edi-0x3e]
  41b301:	mov    edx,0xff0000ff
  41b306:	(bad)  
  41b307:	call   DWORD PTR [eax]
  41b309:	aad    0x3d
  41b30b:	mov    al,BYTE PTR [eax]
  41b30d:	pop    ss
  41b30e:	inc    DWORD PTR [esi+ebx*2-0x76ffc8]
  41b315:	mov    DWORD PTR [ecx+0x396cb2ff],ecx
  41b31b:	test   al,0x0
  41b31d:	out    0xff,eax
  41b31f:	mov    dh,0x90
  41b321:	sti    
  41b322:	inc    DWORD PTR [eax]
  41b324:	(bad)  
  41b325:	(bad)  
  41b326:	dec    DWORD PTR [ecx-0x6aff58c]
  41b32c:	add    BYTE PTR [edx+0x0],ah
  41b32f:	pop    ebp
  41b330:	sub    DWORD PTR [ecx],edx
  41b332:	add    BYTE PTR [eax],al
  41b334:	add    BYTE PTR [eax],al
  41b336:	(bad)  
  41b337:	call   FWORD PTR [edi+0x61]
  41b33a:	xor    al,0x9e
  41b33c:	sbb    esi,0xffffffff
  41b33f:	pop    esi
  41b340:	jne    0x41b398
  41b342:	cmp    edi,0xffffffcc
  41b345:	(bad)  
  41b346:	inc    DWORD PTR [eax]
  41b348:	push   ss
  41b349:	scas   eax,DWORD PTR es:[edi]
  41b34a:	int    0xc4
  41b34c:	add    BYTE PTR [esi],bl
  41b34e:	jmp    DWORD PTR [edi-0x7d3a]
  41b354:	inc    DWORD PTR [ebx+0x2dc9ff00]
  41b35a:	sbb    al,0x77
  41b35c:	jmp    FWORD PTR [ebx-0x1]
  41b35f:	in     al,dx
  41b360:	mov    cl,0xcc
  41b362:	inc    DWORD PTR [ebx+0xffcc]
  41b368:	repz leave 
  41b36a:	daa    
  41b36b:	cmp    bh,0x3
  41b36e:	add    BYTE PTR [ebp+eax*4-0x3344],ah
  41b375:	add    BYTE PTR [eax],al
  41b377:	cmp    ebx,0x64
  41b37a:	inc    edi
  41b37b:	xchg   ebp,eax
  41b37c:	int3   
  41b37d:	mov    bl,0xff
  41b37f:	jb     0x41b3c8
  41b381:	jbe    0x41b382
  41b383:	dec    esp
  41b385:	or     esp,0xffffff83
  41b388:	daa    
  41b389:	push   esp
  41b38a:	mov    DWORD PTR [edi+edi*8-0x2f],ebp
  41b38e:	push   DWORD PTR [esi*2-0xff5d]
  41b395:	int3   
  41b396:	(bad)  
  41b397:	push   DWORD PTR [ebp-0x8]
  41b39a:	xor    BYTE PTR [esi+0x0],dh
  41b39d:	in     eax,0xff
  41b39f:	xchg   esp,eax
  41b3a0:	retf   
  41b3a1:	add    al,0xff
  41b3a3:	inc    DWORD PTR [ebx-0x4eff0100]
  41b3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3aa:	pop    ecx
  41b3ab:	mov    eax,ds:0x7f83d600
  41b3b0:	mov    esp,DWORD PTR [ebx+0xff00]
  41b3b6:	add    BYTE PTR [ebx-0x6505b1f4],al
  41b3bc:	add    BYTE PTR [edx-0x1],bh
  41b3bf:	adc    BYTE PTR ds:0xccffffb2,ch
  41b3c5:	dec    DWORD PTR [ecx-0xb4f9900]
  41b3cb:	add    BYTE PTR [eax],al
  41b3cd:	dec    esi
  41b3ce:	add    BYTE PTR [ebx],dh
  41b3d0:	xor    al,0x9b
  41b3d2:	(bad)  
  41b3d3:	(bad)  
  41b3d4:	inc    DWORD PTR [eax]
  41b3d6:	(bad)  
  41b3d7:	inc    DWORD PTR [eax+0x4e]
  41b3da:	fisub  DWORD PTR [edi+0x0]
  41b3dd:	push   ebx
  41b3de:	push   DWORD PTR [ebx-0x92f6]
  41b3e4:	inc    DWORD PTR [ebx-0x524cff01]
  41b3ea:	and    al,0x64
  41b3ec:	jmp    FWORD PTR ds:0xca13e1ff
  41b3f2:	inc    DWORD PTR [eax]
  41b3f4:	add    DWORD PTR [eax],0xffffffff
  41b3f7:	cmp    ebx,0xffffff83
  41b3fa:	out    0xde,eax
  41b3fc:	add    cl,bl
  41b3fe:	(bad)  
  41b3ff:	fcomi  st,st(4)
  41b401:	and    cl,ah
  41b403:	add    bh,bh
  41b405:	inc    DWORD PTR [eax]
  41b407:	add    ebp,0xffffffd7
  41b40a:	test   eax,0xff49ffcf
  41b40f:	xchg   DWORD PTR [esi+0x9],edi
  41b412:	add    bh,bh
  41b414:	(bad)  
  41b415:	inc    DWORD PTR [eax]
  41b417:	add    BYTE PTR ds:0x83883d9d,dl
  41b41d:	cmp    eax,0xf788883
  41b422:	inc    DWORD PTR [eax]
  41b424:	inc    DWORD PTR [ebx+0x57070000]
  41b42a:	test   eax,0xffbfffae
  41b42f:	add    ebp,esi
  41b431:	cmp    al,0xff
  41b433:	(bad)  
  41b434:	inc    DWORD PTR [eax]
  41b436:	dec    esp
  41b438:	mov    esi,0xa50765
  41b43d:	test   edi,edi
  41b43f:	icebp  
  41b440:	dec    esp
  41b441:	and    eax,0xffff83ff
  41b446:	or     DWORD PTR [ecx+0x783a182f],0x0
  41b44d:	or     bh,bh
  41b44f:	bound  ebx,QWORD PTR [edi-0x7c00ff31]
  41b455:	inc    DWORD PTR [eax]
  41b457:	add    bh,ch
  41b459:	mov    DWORD PTR [esi+0x7300ce],ebp
  41b45f:	and    eax,0x83ffe0d9
  41b464:	inc    DWORD PTR [eax]
  41b466:	inc    DWORD PTR [eax]
  41b468:	jmp    0xffb9:0xff6d86ae
  41b46f:	shl    BYTE PTR [eax+0x40],1
  41b472:	add    BYTE PTR [eax],al
  41b474:	(bad)  
  41b475:	(bad)  
  41b476:	inc    DWORD PTR [eax]
  41b478:	retf   
  41b479:	sub    ebp,DWORD PTR [esi+eax*4]
  41b47c:	(bad)  
  41b47d:	cli    
  41b47e:	add    BYTE PTR [esi+0x4f],bh
  41b481:	jecxz  0x41b482
  41b483:	add    bh,bh
  41b485:	(bad)  
  41b486:	inc    DWORD PTR [ebx+0x1a57bc66]
  41b48c:	int3   
  41b48d:	les    eax,FWORD PTR [ebx-0x43e080]
  41b493:	inc    DWORD PTR [ebx-0x447d0000]
  41b499:	pop    esp
  41b49a:	sbb    edi,DWORD PTR [edx]
  41b49c:	jmp    FWORD PTR [ebx+0x483a1400]
  41b4a2:	inc    DWORD PTR [eax]
  41b4a4:	(bad)  
  41b4a5:	inc    DWORD PTR [ebx+0x566fbeff]
  41b4ab:	sub    al,0xcc
  41b4ad:	loopne 0x41b4ae
  41b4af:	mov    BYTE PTR [eax],dl
  41b4b1:	popa   
  41b4b2:	add    BYTE PTR [ebx-0x7634],al
  41b4b8:	in     eax,0xd4
  41b4ba:	xchg   esi,eax
  41b4bb:	push   esi
  41b4bc:	or     DWORD PTR [ebx-0x7d],0xffffffd0
  41b4c0:	(bad)  
  41b4c1:	(bad)  
  41b4c2:	(bad)  
  41b4c3:	inc    DWORD PTR [eax]
  41b4c5:	add    DWORD PTR [eax],0xffffffff
  41b4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4c9:	inc    ebp
  41b4ca:	pop    es
  41b4cb:	fdiv   st(7),st
  41b4cd:	adc    BYTE PTR [eax],al
  41b4cf:	stos   BYTE PTR es:[edi],al
  41b4d0:	mov    eax,0xff000098
  41b4d5:	inc    DWORD PTR [ebx+0x20655eff]
  41b4db:	jg     0x41b4a9
  41b4dd:	push   esi
  41b4de:	inc    DWORD PTR [ecx+ecx*2-0x57]
  41b4e2:	add    BYTE PTR [ebx-0x7601],al
  41b4e8:	inc    ebx
  41b4e9:	std    
  41b4ea:	adc    BYTE PTR [esi-0x4dff2501],dh
  41b4f0:	js     0x41b518
  41b4f2:	int3   
  41b4f3:	inc    DWORD PTR [ebx-0x12ff0100]
  41b4f9:	or     BYTE PTR ss:[ebp+0x2b007d00],cl
  41b500:	fadd   DWORD PTR [ebp-0x767c0001]
  41b506:	add    bh,bh
  41b508:	mov    ch,0x2c
  41b50a:	adc    BYTE PTR [eax-0x21004877],bh
  41b510:	adc    cl,BYTE PTR [esi]
  41b512:	cmp    edi,0xffffffff
  41b515:	(bad)  
  41b516:	(bad)  
  41b517:	jmp    FWORD PTR [edi+0x6a]
  41b51a:	or     eax,0xe30026
  41b51f:	loope  0x41b56e
  41b521:	rol    BYTE PTR [eax],0x83
  41b524:	add    bh,bh
  41b526:	dec    esp
  41b528:	std    
  41b529:	into   
  41b52a:	iret   
  41b52b:	or     bh,bh
  41b52d:	mov    ebx,0xa223eeff
  41b532:	add    BYTE PTR [eax],al
  41b534:	dec    esp
  41b536:	int3   
  41b537:	add    BYTE PTR [edx+0x65],dh
  41b53a:	or     al,0x62
  41b53c:	add    BYTE PTR [edi-0x1],bl
  41b53f:	loop   0x41b578
  41b541:	retf   
  41b542:	add    bh,bh
  41b544:	add    BYTE PTR [eax],al
  41b546:	dec    esp
  41b548:	aam    0x76
  41b54a:	mov    cs,WORD PTR [ebx+0x0]
  41b54d:	ret    0x69ff
  41b550:	push   0xff008346
  41b555:	mov    DWORD PTR [eax],eax
  41b557:	call   FWORD PTR [ebx]
  41b559:	repz shl BYTE PTR [edx],0x0
  41b55d:	cmp    edi,edi
  41b55f:	int3   
  41b560:	mov    ch,0xe1
  41b562:	int3   
  41b563:	inc    DWORD PTR [eax]
  41b565:	inc    DWORD PTR [ebx+0xaf9fb00]
  41b56b:	push   DWORD PTR gs:[edx-0x77]
  41b56f:	pop    ebx
  41b570:	in     al,dx
  41b571:	pop    esp
  41b572:	int3   
  41b573:	inc    DWORD PTR [eax]
  41b575:	dec    esp
  41b577:	dec    esi
  41b579:	add    eax,0x4c007bd6
  41b57e:	int3   
  41b57f:	adc    BYTE PTR [ebp-0x2d],cl
  41b582:	(bad)  
  41b583:	dec    DWORD PTR [ecx+0x5a000089]
  41b589:	push   edi
  41b58a:	clc    
  41b58b:	imul   edi,edi,0x19
  41b58e:	and    DWORD PTR [edx-0x6675],0xffffffff
  41b595:	add    BYTE PTR [eax],al
  41b597:	add    BYTE PTR [edi+ebx*2+0x6],ch
  41b59b:	fwait
  41b59c:	mov    DWORD PTR [esi+0x11731700],ebx
  41b5a2:	(bad)  
  41b5a3:	(bad)  
  41b5a4:	(bad)  
  41b5a5:	dec    esp
  41b5a7:	sub    DWORD PTR [edx+0x61],0xffffffe7
  41b5ab:	in     eax,dx
  41b5ac:	int3   
  41b5ad:	pop    eax
  41b5ae:	add    BYTE PTR [edx-0x42],cl
  41b5b1:	jnp    0x41b536
  41b5b3:	inc    DWORD PTR [eax]
  41b5b5:	add    bh,bh
  41b5b7:	int3   
  41b5b8:	dec    esi
  41b5b9:	add    edx,DWORD PTR [esi+edx*2-0x1e00d300]
  41b5c0:	and    BYTE PTR [esi-0x77],dl
  41b5c3:	dec    DWORD PTR [ecx-0x19767c7d]
  41b5c9:	outs   dx,DWORD PTR ds:[esi]
  41b5ca:	mov    ah,0x13
  41b5cc:	add    BYTE PTR [esi-0x1],dh
  41b5cf:	inc    ecx
  41b5d0:	pushf  
  41b5d1:	and    al,BYTE PTR [eax]
  41b5d3:	(bad)  
  41b5d4:	(bad)  
  41b5d5:	inc    DWORD PTR [ebx-0x3d0b501]
  41b5db:	push   edx
  41b5dc:	dec    DWORD PTR [esi+0x608a4dff]
  41b5e2:	add    bh,bh
  41b5e4:	add    bh,bh
  41b5e6:	add    bh,bh
  41b5e8:	pop    edi
  41b5e9:	mov    edx,gs
  41b5eb:	push   ss
  41b5ec:	jmp    FWORD PTR [ebx-0x1]
  41b5ef:	cmp    DWORD PTR [ebp-0x4a],ecx
  41b5f2:	cmp    edi,0x0
  41b5f5:	(bad)  
  41b5f6:	(bad)  
  41b5f7:	jmp    FWORD PTR [esi+0x22]
  41b5fa:	in     eax,dx
  41b5fb:	fiadd  DWORD PTR [eax]
  41b5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5fe:	dec    ecx
  41b600:	mov    eax,ds:0x838900d5
  41b605:	inc    DWORD PTR [ebx-0x3b8d3901]
  41b60b:	popa   
  41b60c:	add    DWORD PTR [eax-0x679ef601],0xffffffff
  41b613:	add    DWORD PTR [eax],0x0
  41b616:	add    DWORD PTR [ebx+0x3fb114ac],0x0
  41b61d:	ins    DWORD PTR es:[edi],dx
  41b61e:	int3   
  41b61f:	div    DWORD PTR [edx+edi*8]
  41b622:	(bad)  
  41b623:	dec    DWORD PTR [ecx+0xeff00ff]
  41b629:	(bad)  
  41b62a:	sub    cl,dl
  41b62c:	call   DWORD PTR [edi+edi*8-0xf3d200]
  41b633:	add    BYTE PTR [eax],al
  41b635:	mov    edi,edi
  41b637:	call   ebp
  41b639:	push   0x2f004d15
  41b63e:	sub    DWORD PTR [edi+0xff6675],0xffffffff
  41b645:	(bad)  
  41b646:	inc    DWORD PTR [eax]
  41b648:	mov    dl,0xc6
  41b64a:	mov    WORD PTR [eax],cs
  41b64c:	add    BYTE PTR [eax-0x1],bh
  41b64f:	pop    es
  41b650:	mov    edx,0x83838326
  41b655:	add    BYTE PTR [eax],al
  41b657:	add    BYTE PTR [ecx+0x7c],dl
  41b65a:	loopne 0x41b685
  41b65c:	add    BYTE PTR [edx+0x7abdf8ff],bh
  41b662:	int3   
  41b663:	inc    DWORD PTR [eax]
  41b665:	inc    DWORD PTR [eax]
  41b667:	(bad)  
  41b668:	cmp    DWORD PTR [edx+0x7ccc6881],edi
  41b66e:	add    BYTE PTR [edi],bh
  41b670:	cmp    BYTE PTR [ecx+ecx*4],ch
  41b673:	(bad)  
  41b674:	dec    DWORD PTR [ecx-0x25d13301]
  41b67a:	mov    cl,0xaa
  41b67c:	add    bh,dh
  41b67e:	push   DWORD PTR [eax-0x76ffb9bd]
  41b684:	mov    DWORD PTR [eax],eax
  41b686:	add    bh,bh
  41b688:	sti    
  41b689:	push   ecx
  41b68a:	test   DWORD PTR [edx-0x72762001],esp
  41b690:	repnz or DWORD PTR [ebx-0x7c3377],eax
  41b697:	cmp    DWORD PTR [edi-0x6d],0xffffff88
  41b69b:	or     DWORD PTR [eax],eax
  41b69d:	sti    
  41b69e:	and    DWORD PTR [edi+eiz*2+0x6e],0xffffffff
  41b6a3:	(bad)  
  41b6a4:	inc    DWORD PTR [ebx+0x36d100ff]
  41b6aa:	clc    
  41b6ab:	cwde   
  41b6ac:	int3   
  41b6ad:	inc    edi
  41b6ae:	add    cl,bl
  41b6b0:	cmp    BYTE PTR ds:0xccffcc,0xff
  41b6b7:	call   esp
  41b6b9:	xchg   ecx,eax
  41b6ba:	jae    0x41b6c3
  41b6bc:	add    ah,ch
  41b6be:	call   DWORD PTR [eax+0x15]
  41b6c1:	push   cs
  41b6c2:	mov    DWORD PTR [ebx+0xff00cc],eax
  41b6c8:	jbe    0x41b726
  41b6ca:	clc    
  41b6cb:	cwde   
  41b6cc:	mov    DWORD PTR [ecx-0x1],edi
  41b6cf:	aaa    
  41b6d0:	imul   eax,esi,0xff000083
  41b6d6:	add    BYTE PTR [eax],al
  41b6d8:	imul   ecx,esi,0x80ccdff7
  41b6de:	sbb    DWORD PTR [ebp-0x7cff2895],0xffffffff
  41b6e5:	add    bh,bh
  41b6e7:	jmp    DWORD PTR [edx-0x336817a4]
  41b6ed:	dec    ebx
  41b6ee:	add    BYTE PTR [eax-0x7c7c0a75],cl
  41b6f4:	(bad)  
  41b6f5:	inc    DWORD PTR [eax]
  41b6f7:	mov    DWORD PTR [eax+0x72],esp
  41b6fa:	sbb    edx,0xa0831400
  41b700:	push   edx
  41b701:	sub    al,0xff
  41b703:	add    BYTE PTR [eax],al
  41b705:	(bad)  
  41b706:	dec    esp
  41b708:	stc    
  41b709:	and    BYTE PTR [edi+0x14],al
  41b70c:	add    dh,cl
  41b70e:	int3   
  41b70f:	je     0x41b6c8
  41b711:	inc    DWORD PTR [ebx-0xff34]
  41b717:	dec    DWORD PTR [ecx]
  41b719:	daa    
  41b71a:	xchg   ebx,eax
  41b71b:	sub    al,0x0
  41b71d:	in     eax,dx
  41b71e:	inc    DWORD PTR [ebx+0x3a]
  41b721:	mov    al,0x0
  41b723:	mov    esp,ecx
  41b725:	add    BYTE PTR [eax],al
  41b727:	add    BYTE PTR [esp+ebx*4-0x34009884],bh
  41b72e:	add    BYTE PTR [ebx],al
  41b730:	jmp    0x41b70e
  41b732:	dec    esp
  41b734:	inc    DWORD PTR [eax]
  41b736:	add    BYTE PTR [ebx-0x7198ec70],al
  41b73c:	int3   
  41b73d:	mov    bh,bh
  41b73f:	or     ebp,DWORD PTR [ecx-0x3300335b]
  41b745:	dec    DWORD PTR [ecx-0x759d7901]
  41b74b:	lahf   
  41b74c:	add    bh,cl
  41b74e:	add    BYTE PTR [ebx+eax*4-0xff31],al
  41b755:	inc    DWORD PTR [eax]
  41b757:	(bad)  
  41b758:	fbstp  TBYTE PTR [esi]
  41b75a:	loope  0x41b707
  41b75c:	int3   
  41b75d:	nop
  41b75e:	int3   
  41b75f:	add    eax,0xff836212
  41b764:	inc    DWORD PTR [eax]
  41b766:	int3   
  41b767:	push   DWORD PTR ds:0xffc27dff
  41b76d:	cmp    eax,DWORD PTR [eax]
  41b76f:	les    ecx,FWORD PTR [ebx-0x80]
  41b772:	cmp    edi,0xffffffff
  41b775:	(bad)  
  41b776:	dec    esp
  41b778:	or     DWORD PTR [ecx-0x697c14c7],ebp
  41b77e:	int3   
  41b77f:	pop    ebp
  41b780:	test   BYTE PTR [edx],cl
  41b782:	(bad)  
  41b783:	(bad)  
  41b784:	(bad)  
  41b785:	(bad)  
  41b786:	inc    DWORD PTR [eax]
  41b788:	test   BYTE PTR [eax+0x75],bh
  41b78b:	push   esp
  41b78c:	inc    DWORD PTR [ebx]
  41b78e:	call   FWORD PTR ds:0xffffb2d8
  41b794:	(bad)  
  41b795:	(bad)  
  41b796:	inc    DWORD PTR [ebx+0x6288d894]
  41b79c:	(bad)  
  41b79d:	fimul  WORD PTR [ecx-0x9ceb4a]
  41b7a3:	add    ah,cl
  41b7a5:	add    BYTE PTR [eax],al
  41b7a7:	call   FWORD PTR [edi+ebp*4]
  41b7aa:	out    dx,eax
  41b7ab:	sub    al,0x0
  41b7ad:	test   al,0x0
  41b7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7b0:	int3   
  41b7b1:	inc    DWORD PTR gs:[ebx-0x1]
  41b7b8:	xor    ecx,esp
  41b7ba:	lods   al,BYTE PTR ds:[esi]
  41b7bb:	mov    cl,0xff
  41b7bd:	pop    ecx
  41b7be:	inc    DWORD PTR [esi+edx*1-0x7c7c7d]
  41b7c5:	cmp    edi,0xffffff83
  41b7c8:	dec    edx
  41b7c9:	push   ss
  41b7ca:	xor    al,0x2
  41b7cc:	add    BYTE PTR [edi+edi*8+0xc22411],ah
  41b7d3:	add    BYTE PTR [ecx-0x36ffff7d],cl
  41b7d9:	pusha  
  41b7da:	dec    ebp
  41b7db:	push   edx
  41b7dc:	or     DWORD PTR [ebx-0x1],0x3d
  41b7e0:	daa    
  41b7e1:	hlt    
  41b7e2:	int3   
  41b7e3:	add    DWORD PTR [eax],0x0
  41b7e6:	inc    DWORD PTR [ebx+0x7e8169d3]
  41b7ec:	or     DWORD PTR [ebx],0x0
  41b7ef:	cmp    esi,DWORD PTR [ecx]
  41b7f1:	add    DWORD PTR [eax],0x0
  41b7f4:	add    bh,bh
  41b7f6:	add    BYTE PTR [eax],al
  41b7f8:	out    dx,eax
  41b7f9:	repnz retf 0xff41
  41b7fd:	(bad)  
  41b7ff:	mov    cl,bl
  41b801:	sar    edi,1
  41b803:	inc    DWORD PTR [eax]
  41b805:	add    bh,bh
  41b807:	adc    edi,0xffffff8c
  41b80a:	xchg   ebp,eax
  41b80b:	pop    ds
  41b80c:	(bad)  
  41b80d:	mov    edi,0x1564d900
  41b812:	add    bh,bh
  41b814:	add    BYTE PTR [eax],al
  41b816:	add    ah,cl
  41b818:	xor    BYTE PTR [ecx+0x1b],0xbe
  41b81c:	call   edi
  41b81e:	xor    DWORD PTR [edi],0xffffffab
  41b821:	and    al,BYTE PTR [eax]
  41b823:	inc    DWORD PTR [eax]
  41b825:	add    BYTE PTR [ecx+0x6f120d00],cl
  41b82b:	dec    esi
  41b82c:	push   DWORD PTR [ecx+0x0]
  41b82f:	enter  0x1ba8,0xff
  41b833:	(bad)  
  41b834:	(bad)  
  41b835:	inc    DWORD PTR [eax]
  41b837:	int3   
  41b838:	cmp    cl,BYTE PTR [ecx+eax*4+0xf4ff8e]
  41b83f:	fbstp  TBYTE PTR [ebx*8-0x76007d]
  41b846:	add    BYTE PTR [eax],al
  41b848:	push   ecx
  41b849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b84a:	push   es
  41b84b:	rol    BYTE PTR [eax],1
  41b84d:	adc    eax,0x250dca83
  41b852:	add    BYTE PTR [ecx-0x7676ff01],cl
  41b858:	mov    ch,0xf4
  41b85a:	popf   
  41b85b:	mov    edi,0x81000400
  41b860:	lahf   
  41b861:	out    0xff,al
  41b863:	inc    DWORD PTR [eax]
  41b865:	add    bh,bh
  41b867:	(bad)  
  41b868:	fcom   QWORD PTR [ecx-0x6d]
  41b86b:	xchg   esp,ecx
  41b86d:	aaa    
  41b86e:	int3   
  41b86f:	adc    DWORD PTR [eax+0x8300ba],ebp
  41b875:	int3   
  41b876:	inc    DWORD PTR [ebx-0xaf2b6d6]
  41b87c:	int3   
  41b87d:	outs   dx,BYTE PTR ds:[esi]
  41b87e:	int3   
  41b87f:	iret   
  41b880:	clc    
  41b881:	and    edi,edi
  41b883:	dec    DWORD PTR [ecx-0x8ff0001]
  41b889:	pop    eax
  41b88a:	pop    ds
  41b88b:	sbb    bh,bh
  41b88d:	or     eax,0xa76732ff
  41b892:	add    DWORD PTR [eax],0xffffffcc
  41b895:	(bad)  
  41b896:	(bad)  
  41b897:	(bad)  
  41b898:	mov    edi,0xffda2184
  41b89d:	hlt    
  41b89e:	jmp    FWORD PTR ds:0xccff63f3
  41b8a4:	add    BYTE PTR [ecx+0x6c27ff00],cl
  41b8aa:	cmp    bh,al
  41b8ac:	mov    DWORD PTR [edx-0xfb0df00],edi
  41b8b2:	int3   
  41b8b3:	inc    DWORD PTR [eax]
  41b8b5:	dec    esp
  41b8b7:	add    BYTE PTR [eax+eiz*2+0x34],cl
  41b8bb:	fiadd  DWORD PTR [eax]
  41b8bd:	push   0xbffb000
  41b8c2:	mov    DWORD PTR [eax],eax
  41b8c4:	(bad)  
  41b8c5:	inc    DWORD PTR [eax]
  41b8c7:	call   FWORD PTR [edx]
  41b8c9:	sbb    eax,0xe2fff0a0
  41b8ce:	(bad)  
  41b8cf:	jle    0x41b94d
  41b8d1:	xchg   esp,eax
  41b8d2:	int3   
  41b8d3:	add    bh,bh
  41b8d5:	add    bh,bh
  41b8d7:	or     DWORD PTR [edx-0x2f],0x71
  41b8db:	dec    ecx
  41b8dc:	(bad)  
  41b8dd:	cli    
  41b8de:	add    BYTE PTR [ecx],bh
  41b8e0:	jmp    0x41b8be
  41b8e2:	add    DWORD PTR [eax],0x0
  41b8e5:	int3   
  41b8e6:	add    ah,cl
  41b8e8:	dec    eax
  41b8e9:	pop    ebp
  41b8ea:	cmp    eax,DWORD PTR [esi+0x0]
  41b8ed:	push   ebp
  41b8ee:	int3   
  41b8ef:	cli    
  41b8f0:	xchg   esp,eax
  41b8f1:	jmp    0x41b8f3
  41b8f3:	add    BYTE PTR [eax],al
  41b8f5:	inc    DWORD PTR [eax]
  41b8f7:	(bad)  
  41b8f8:	jmp    0x41b8bc
  41b8fa:	scas   al,BYTE PTR es:[edi]
  41b8fb:	test   BYTE PTR [ecx+0x5a5d008d],0x8f
  41b902:	cmp    edi,0xffffffff
  41b905:	(bad)  
  41b906:	inc    DWORD PTR [ebx-0x4165fb35]
  41b90c:	jmp    FWORD PTR [ecx-0x19d78f00]
  41b912:	dec    esp
  41b914:	inc    DWORD PTR [ebx-0x666e0000]
  41b91a:	dec    ecx
  41b91b:	mov    ebx,0xa9ff4900
  41b920:	and    esi,edi
  41b922:	(bad)  
  41b923:	inc    DWORD PTR [eax]
  41b925:	or     esp,0xffffffff
  41b928:	dec    esi
  41b929:	or     al,0xf7
  41b92b:	retf   
  41b92c:	jmp    DWORD PTR [esi+0x63ae8183]
  41b932:	dec    DWORD PTR [ecx-0x7c76ff01]
  41b938:	xchg   edx,eax
  41b939:	pop    edi
  41b93a:	daa    
  41b93b:	test   DWORD PTR [eax],eax
  41b93d:	mov    ecx,0x59ebdb89
  41b942:	mov    DWORD PTR [ecx+0xffff89],ecx
  41b948:	mov    cl,0x30
  41b94a:	adc    ch,dl
  41b94c:	or     DWORD PTR [edi],0xffffffff
  41b94f:	lock fadd QWORD PTR es:[eax]
  41b953:	(bad)  
  41b954:	(bad)  
  41b955:	inc    DWORD PTR [eax]
  41b957:	add    DWORD PTR [edx-0x7c000065],0xffffffff
  41b95e:	dec    DWORD PTR [ecx-0x3b6a0001]
  41b964:	popa   
  41b965:	dec    DWORD PTR [ecx-0x1a010000]
  41b96b:	push   edi
  41b96c:	pusha  
  41b96d:	inc    DWORD PTR cs:[ebx+0x2ecacc00]
  41b974:	jae    0x41b963
  41b976:	cmp    edi,0x0
  41b979:	dec    ebp
  41b97b:	inc    esi
  41b97c:	mov    eax,ds:0x81ffffac
  41b981:	in     al,dx
  41b982:	and    al,0x1
  41b984:	add    BYTE PTR [eax],al
  41b986:	push   esi
  41b987:	mov    esi,DWORD PTR ds:0x44400c
  41b98d:	push   0x92
  41b992:	push   0x42
  41b994:	call   esi
  41b996:	push   0xc0
  41b99b:	push   0x42
  41b99d:	mov    DWORD PTR [esp+0x10],eax
  41b9a1:	call   esi
  41b9a3:	push   0x40edf0
  41b9a8:	push   0x40ff20
  41b9ad:	mov    DWORD PTR [esp+0xc],eax
  41b9b1:	call   0x4191c0
  41b9b6:	mov    ecx,DWORD PTR ds:0x447d00
  41b9bc:	mov    edx,DWORD PTR ds:0x44708c
  41b9c2:	add    esp,0x8
  41b9c5:	add    ecx,0x135ec
  41b9cb:	mov    esi,0x40
  41b9d0:	push   edi
  41b9d1:	movzx  eax,BYTE PTR [edx+0x7]
  41b9d5:	movzx  edi,WORD PTR [edx+0x5]
  41b9d9:	movzx  edx,BYTE PTR [edx+0x2]
  41b9dd:	shl    eax,0x10
  41b9e0:	add    eax,edi
  41b9e2:	shl    eax,0x8
  41b9e5:	add    eax,edx
  41b9e7:	mov    edx,DWORD PTR ds:0x447cfc
  41b9ed:	mov    ds:0x447cf0,eax
  41b9f2:	add    edx,0x66d2a423
  41b9f8:	xor    edx,eax
  41b9fa:	mov    DWORD PTR [ecx],edx
  41b9fc:	mov    edx,DWORD PTR ds:0x44708c
  41ba02:	add    edx,0x8
  41ba05:	mov    DWORD PTR ds:0x44708c,edx
  41ba0b:	movzx  eax,BYTE PTR [edx+0x7]
  41ba0f:	movzx  edi,WORD PTR [edx+0x5]
  41ba13:	movzx  edx,BYTE PTR [edx+0x2]
  41ba17:	shl    eax,0x10
  41ba1a:	add    eax,edi
  41ba1c:	shl    eax,0x8
  41ba1f:	add    eax,edx
  41ba21:	mov    edx,DWORD PTR ds:0x447cfc
  41ba27:	mov    ds:0x447cf0,eax
  41ba2c:	add    edx,0x66d2a423
  41ba32:	xor    edx,eax
  41ba34:	mov    DWORD PTR [ecx+0x4],edx
  41ba37:	mov    edx,DWORD PTR ds:0x44708c
  41ba3d:	add    edx,0x8
  41ba40:	mov    DWORD PTR ds:0x44708c,edx
  41ba46:	movzx  eax,BYTE PTR [edx+0x7]
  41ba4a:	movzx  edi,WORD PTR [edx+0x5]
  41ba4e:	movzx  edx,BYTE PTR [edx+0x2]
  41ba52:	shl    eax,0x10
  41ba55:	add    eax,edi
  41ba57:	shl    eax,0x8
  41ba5a:	add    eax,edx
  41ba5c:	mov    edx,DWORD PTR ds:0x447cfc
  41ba62:	add    edx,0x66d2a423
  41ba68:	xor    edx,eax
  41ba6a:	mov    ds:0x447cf0,eax
  41ba6f:	mov    DWORD PTR [ecx+0x8],edx
  41ba72:	mov    edx,DWORD PTR ds:0x44708c
  41ba78:	add    edx,0x8
  41ba7b:	mov    DWORD PTR ds:0x44708c,edx
  41ba81:	movzx  eax,BYTE PTR [edx+0x7]
  41ba85:	movzx  edi,WORD PTR [edx+0x5]
  41ba89:	movzx  edx,BYTE PTR [edx+0x2]
  41ba8d:	shl    eax,0x10
  41ba90:	add    eax,edi
  41ba92:	shl    eax,0x8
  41ba95:	add    eax,edx
  41ba97:	mov    edx,DWORD PTR ds:0x447cfc
  41ba9d:	add    edx,0x66d2a423
  41baa3:	xor    edx,eax
  41baa5:	mov    ds:0x447cf0,eax
  41baaa:	mov    DWORD PTR [ecx+0xc],edx
  41baad:	mov    edx,DWORD PTR ds:0x44708c
  41bab3:	add    edx,0x8
  41bab6:	mov    DWORD PTR ds:0x44708c,edx
  41babc:	movzx  eax,BYTE PTR [edx+0x7]
  41bac0:	movzx  edi,WORD PTR [edx+0x5]
  41bac4:	movzx  edx,BYTE PTR [edx+0x2]
  41bac8:	shl    eax,0x10
  41bacb:	add    eax,edi
  41bacd:	shl    eax,0x8
  41bad0:	add    eax,edx
  41bad2:	mov    edx,DWORD PTR ds:0x447cfc
  41bad8:	add    edx,0x66d2a423
  41bade:	xor    edx,eax
  41bae0:	mov    ds:0x447cf0,eax
  41bae5:	mov    DWORD PTR [ecx+0x10],edx
  41bae8:	mov    edx,DWORD PTR ds:0x44708c
  41baee:	add    edx,0x8
  41baf1:	add    ecx,0x14
  41baf4:	dec    esi
  41baf5:	mov    DWORD PTR ds:0x44708c,edx
  41bafb:	jne    0x41b9d1
  41bb01:	push   0x40ab30
  41bb06:	call   0x43ed10
  41bb0b:	mov    edx,DWORD PTR ds:0x447d00
  41bb11:	mov    ecx,DWORD PTR ds:0x447090
  41bb17:	add    esp,0x4
  41bb1a:	add    edx,0x13fe0
  41bb20:	mov    esi,0xdf
  41bb25:	jmp    0x41bb30
  41bb27:	lea    esp,[esp+0x0]
  41bb2e:	mov    edi,edi
  41bb30:	movzx  eax,WORD PTR [ecx+0x6]
  41bb34:	movzx  edi,BYTE PTR [ecx+0x4]
  41bb38:	movzx  ecx,BYTE PTR [ecx+0x1]
  41bb3c:	shl    eax,0x8
  41bb3f:	add    eax,edi
  41bb41:	shl    eax,0x8
  41bb44:	add    eax,ecx
  41bb46:	mov    ds:0x447cf0,eax
  41bb4b:	mov    ecx,0x4ae8307b
  41bb50:	sub    ecx,DWORD PTR ds:0x447cfc
  41bb56:	add    edx,0x8
  41bb59:	xor    ecx,eax
  41bb5b:	mov    DWORD PTR [edx-0x8],ecx
  41bb5e:	mov    ecx,DWORD PTR ds:0x447090
  41bb64:	add    ecx,0x8
  41bb67:	mov    DWORD PTR ds:0x447090,ecx
  41bb6d:	movzx  eax,WORD PTR [ecx+0x6]
  41bb71:	movzx  edi,BYTE PTR [ecx+0x4]
  41bb75:	movzx  ecx,BYTE PTR [ecx+0x1]
  41bb79:	shl    eax,0x8
  41bb7c:	add    eax,edi
  41bb7e:	shl    eax,0x8
  41bb81:	add    eax,ecx
  41bb83:	mov    ecx,0x4ae8307b
  41bb88:	sub    ecx,DWORD PTR ds:0x447cfc
  41bb8e:	mov    ds:0x447cf0,eax
  41bb93:	xor    ecx,eax
  41bb95:	mov    DWORD PTR [edx-0x4],ecx
  41bb98:	mov    ecx,DWORD PTR ds:0x447090
  41bb9e:	add    ecx,0x8
  41bba1:	dec    esi
  41bba2:	mov    DWORD PTR ds:0x447090,ecx
  41bba8:	jne    0x41bb30
  41bbaa:	push   ebx
  41bbab:	push   ebp
  41bbac:	call   0x42e510
  41bbb1:	push   0x436d40
  41bbb6:	call   0x40de30
  41bbbb:	mov    esi,DWORD PTR ds:0x447d00
  41bbc1:	mov    ebx,DWORD PTR ds:0x444004
  41bbc7:	add    esp,0x4
  41bbca:	add    esi,0x12ed8
  41bbd0:	mov    edi,0xe2
  41bbd5:	mov    ebp,0x10
  41bbda:	lea    ebx,[ebx+0x0]
  41bbe0:	lea    edx,[esp+0x18]
  41bbe4:	push   edx
  41bbe5:	push   0x0
  41bbe7:	push   0x3
  41bbe9:	call   ebx
  41bbeb:	mov    eax,ds:0x447094
  41bbf0:	mov    eax,DWORD PTR [eax+0x4]
  41bbf3:	mov    ds:0x447cf0,eax
  41bbf8:	mov    ecx,0x260183da
  41bbfd:	sub    ecx,DWORD PTR ds:0x447cfc
  41bc03:	xor    ecx,eax
  41bc05:	mov    DWORD PTR [esi],ecx
  41bc07:	mov    ecx,DWORD PTR ds:0x447094
  41bc0d:	movzx  eax,BYTE PTR [ecx+0xd]
  41bc11:	movzx  edx,BYTE PTR [ecx+0xa]
  41bc15:	movzx  ecx,WORD PTR [ecx+0x8]
  41bc19:	shl    eax,0x8
  41bc1c:	add    eax,edx
  41bc1e:	mov    edx,DWORD PTR ds:0x447cfc
  41bc24:	sub    edx,0x80040004
  41bc2a:	shl    eax,0x10
  41bc2d:	add    eax,ecx
  41bc2f:	neg    edx
  41bc31:	sbb    edx,edx
  41bc33:	and    edx,0x5a035cd8
  41bc39:	add    edx,0xa5fd83d6
  41bc3f:	xor    edx,eax
  41bc41:	mov    ds:0x447cf0,eax
  41bc46:	mov    DWORD PTR [esi+0x4],edx
  41bc49:	add    DWORD PTR ds:0x447094,ebp
  41bc4f:	add    esi,0x8
  41bc52:	dec    edi
  41bc53:	jne    0x41bbe0
  41bc55:	mov    eax,ds:0x447094
  41bc5a:	mov    eax,DWORD PTR [eax+0x4]
  41bc5d:	mov    ecx,0x260183da
  41bc62:	sub    ecx,DWORD PTR ds:0x447cfc
  41bc68:	mov    ds:0x447cf0,eax
  41bc6d:	xor    ecx,eax
  41bc6f:	mov    DWORD PTR [esi],ecx
  41bc71:	mov    esi,DWORD PTR ds:0x447d00
  41bc77:	mov    ecx,DWORD PTR ds:0x447098
  41bc7d:	add    esi,0x146d8
  41bc83:	lea    edx,[edi+0x4a]
  41bc86:	jmp    0x41bc90
  41bc88:	lea    esp,[esp+0x0]
  41bc8f:	nop
  41bc90:	movzx  eax,BYTE PTR [ecx+0x8]
  41bc94:	movzx  edi,BYTE PTR [ecx+0x6]
  41bc98:	shl    eax,0x8
  41bc9b:	add    eax,edi
  41bc9d:	movzx  edi,BYTE PTR [ecx+0x4]
  41bca1:	movzx  ecx,BYTE PTR [ecx+0x2]
  41bca5:	shl    eax,0x8
  41bca8:	add    eax,edi
  41bcaa:	shl    eax,0x8
  41bcad:	add    eax,ecx
  41bcaf:	mov    ecx,DWORD PTR ds:0x447cfc
  41bcb5:	sub    ecx,0x80040004
  41bcbb:	mov    ds:0x447cf0,eax
  41bcc0:	neg    ecx
  41bcc2:	sbb    ecx,ecx
  41bcc4:	and    ecx,0x2ae59f63
  41bcca:	add    ecx,0xd51b2fe1
  41bcd0:	xor    ecx,eax
  41bcd2:	mov    DWORD PTR [esi],ecx
  41bcd4:	mov    ecx,DWORD PTR ds:0x447098
  41bcda:	movzx  eax,WORD PTR [ecx+0xe]
  41bcde:	movzx  edi,BYTE PTR [ecx+0xc]
  41bce2:	movzx  ecx,BYTE PTR [ecx+0xa]
  41bce6:	shl    eax,0x8
  41bce9:	add    eax,edi
  41bceb:	shl    eax,0x8
  41bcee:	add    eax,ecx
  41bcf0:	mov    ds:0x447cf0,eax
  41bcf5:	mov    ecx,0x551f2fe5
  41bcfa:	sub    ecx,DWORD PTR ds:0x447cfc
  41bd00:	xor    ecx,eax
  41bd02:	mov    DWORD PTR [esi+0x4],ecx
  41bd05:	mov    ecx,DWORD PTR ds:0x447098
  41bd0b:	add    ecx,ebp
  41bd0d:	mov    DWORD PTR ds:0x447098,ecx
  41bd13:	movzx  eax,BYTE PTR [ecx+0x8]
  41bd17:	movzx  edi,BYTE PTR [ecx+0x6]
  41bd1b:	shl    eax,0x8
  41bd1e:	add    eax,edi
  41bd20:	movzx  edi,BYTE PTR [ecx+0x4]
  41bd24:	movzx  ecx,BYTE PTR [ecx+0x2]
  41bd28:	shl    eax,0x8
  41bd2b:	add    eax,edi
  41bd2d:	shl    eax,0x8
  41bd30:	add    eax,ecx
  41bd32:	mov    ecx,DWORD PTR ds:0x447cfc
  41bd38:	sub    ecx,0x80040004
  41bd3e:	neg    ecx
  41bd40:	sbb    ecx,ecx
  41bd42:	mov    ds:0x447cf0,eax
  41bd47:	and    ecx,0x2ae59f63
  41bd4d:	add    ecx,0xd51b2fe1
  41bd53:	xor    ecx,eax
  41bd55:	mov    DWORD PTR [esi+0x8],ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x447098
  41bd5e:	movzx  eax,WORD PTR [ecx+0xe]
  41bd62:	movzx  edi,BYTE PTR [ecx+0xc]
  41bd66:	movzx  ecx,BYTE PTR [ecx+0xa]
  41bd6a:	shl    eax,0x8
  41bd6d:	add    eax,edi
  41bd6f:	shl    eax,0x8
  41bd72:	add    eax,ecx
  41bd74:	mov    ds:0x447cf0,eax
  41bd79:	mov    ecx,0x551f2fe5
  41bd7e:	sub    ecx,DWORD PTR ds:0x447cfc
  41bd84:	xor    ecx,eax
  41bd86:	mov    DWORD PTR [esi+0xc],ecx
  41bd89:	mov    ecx,DWORD PTR ds:0x447098
  41bd8f:	add    ecx,ebp
  41bd91:	mov    DWORD PTR ds:0x447098,ecx
  41bd97:	movzx  eax,BYTE PTR [ecx+0x8]
  41bd9b:	movzx  edi,BYTE PTR [ecx+0x6]
  41bd9f:	shl    eax,0x8
  41bda2:	add    eax,edi
  41bda4:	movzx  edi,BYTE PTR [ecx+0x4]
  41bda8:	movzx  ecx,BYTE PTR [ecx+0x2]
  41bdac:	shl    eax,0x8
  41bdaf:	add    eax,edi
  41bdb1:	shl    eax,0x8
  41bdb4:	add    eax,ecx
  41bdb6:	mov    ds:0x447cf0,eax
  41bdbb:	mov    ecx,DWORD PTR ds:0x447cfc
  41bdc1:	sub    ecx,0x80040004
  41bdc7:	neg    ecx
  41bdc9:	sbb    ecx,ecx
  41bdcb:	and    ecx,0x2ae59f63
  41bdd1:	add    ecx,0xd51b2fe1
  41bdd7:	xor    ecx,eax
  41bdd9:	mov    DWORD PTR [esi+0x10],ecx
  41bddc:	mov    ecx,DWORD PTR ds:0x447098
  41bde2:	movzx  eax,WORD PTR [ecx+0xe]
  41bde6:	movzx  edi,BYTE PTR [ecx+0xc]
  41bdea:	movzx  ecx,BYTE PTR [ecx+0xa]
  41bdee:	shl    eax,0x8
  41bdf1:	add    eax,edi
  41bdf3:	shl    eax,0x8
  41bdf6:	add    eax,ecx
  41bdf8:	mov    ecx,0x551f2fe5
  41bdfd:	sub    ecx,DWORD PTR ds:0x447cfc
  41be03:	mov    ds:0x447cf0,eax
  41be08:	xor    ecx,eax
  41be0a:	mov    DWORD PTR [esi+0x14],ecx
  41be0d:	mov    ecx,DWORD PTR ds:0x447098
  41be13:	add    ecx,ebp
  41be15:	add    esi,0x18
  41be18:	dec    edx
  41be19:	mov    DWORD PTR ds:0x447098,ecx
  41be1f:	jne    0x41bc90
  41be25:	lea    edx,[esp+0x18]
  41be29:	push   edx
  41be2a:	push   0x0
  41be2c:	push   0x3
  41be2e:	call   ebx
  41be30:	mov    ecx,DWORD PTR ds:0x447098
  41be36:	movzx  eax,BYTE PTR [ecx+0x8]
  41be3a:	movzx  edx,BYTE PTR [ecx+0x6]
  41be3e:	shl    eax,0x8
  41be41:	add    eax,edx
  41be43:	movzx  edx,BYTE PTR [ecx+0x4]
  41be47:	movzx  ecx,BYTE PTR [ecx+0x2]
  41be4b:	shl    eax,0x8
  41be4e:	add    eax,edx
  41be50:	shl    eax,0x8
  41be53:	mov    edx,0x551f2fe5
  41be58:	sub    edx,DWORD PTR ds:0x447cfc
  41be5e:	add    eax,ecx
  41be60:	xor    edx,eax
  41be62:	mov    ds:0x447cf0,eax
  41be67:	push   0x440c00
  41be6c:	mov    DWORD PTR [esi],edx
  41be6e:	call   0x412840
  41be73:	mov    edi,DWORD PTR ds:0x447d00
  41be79:	mov    esi,DWORD PTR [esp+0x13c]
  41be80:	add    esp,0x4
  41be83:	add    edi,0x12730
  41be89:	add    esi,0x5
  41be8c:	mov    ebp,0x1ea
  41be91:	lea    eax,[esp+0x18]
  41be95:	push   eax
  41be96:	push   0x0
  41be98:	push   0x3
  41be9a:	call   ebx
  41be9c:	movzx  eax,BYTE PTR [esi+0x2]
  41bea0:	movzx  ecx,WORD PTR [esi]
  41bea3:	movzx  edx,BYTE PTR [esi-0x3]
  41bea7:	shl    eax,0x10
  41beaa:	add    eax,ecx
  41beac:	mov    ecx,DWORD PTR ds:0x447cfc
  41beb2:	shl    eax,0x8
  41beb5:	add    eax,edx
  41beb7:	xor    ecx,eax
  41beb9:	xor    ecx,0x759eeeb4
  41bebf:	mov    ds:0x447cf0,eax
  41bec4:	mov    DWORD PTR [edi],ecx
  41bec6:	add    edi,0x4
  41bec9:	add    esi,0x8
  41becc:	dec    ebp
  41becd:	jne    0x41be91
  41becf:	mov    edx,DWORD PTR ds:0x447d00
  41bed5:	mov    ecx,DWORD PTR ds:0x44709c
  41bedb:	pop    ebp
  41bedc:	add    edx,0x13aec
  41bee2:	mov    esi,0x13d
  41bee7:	pop    ebx
  41bee8:	jmp    0x41bef0
  41beea:	lea    ebx,[ebx+0x0]
  41bef0:	movzx  eax,BYTE PTR [ecx+0x7]
  41bef4:	movzx  edi,WORD PTR [ecx+0x4]
  41bef8:	movzx  ecx,BYTE PTR [ecx+0x2]
  41befc:	shl    eax,0x10
  41beff:	add    eax,edi
  41bf01:	shl    eax,0x8
  41bf04:	add    eax,ecx
  41bf06:	mov    ecx,0x4b145ea
  41bf0b:	sub    ecx,DWORD PTR ds:0x447cfc
  41bf11:	mov    ds:0x447cf0,eax
  41bf16:	xor    ecx,eax
  41bf18:	mov    DWORD PTR [edx],ecx
  41bf1a:	mov    ecx,DWORD PTR ds:0x44709c
  41bf20:	add    ecx,0x8
  41bf23:	add    edx,0x4
  41bf26:	dec    esi
  41bf27:	mov    DWORD PTR ds:0x44709c,ecx
  41bf2d:	jne    0x41bef0
  41bf2f:	mov    eax,DWORD PTR [esp+0xc]
  41bf33:	mov    esi,DWORD PTR ds:0x444018
  41bf39:	pop    edi
  41bf3a:	test   eax,eax
  41bf3c:	je     0x41bf41
  41bf3e:	push   eax
  41bf3f:	call   esi
  41bf41:	mov    eax,DWORD PTR [esp+0x4]
  41bf45:	test   eax,eax
  41bf47:	je     0x41bf4c
  41bf49:	push   eax
  41bf4a:	call   esi
  41bf4c:	pop    esi
  41bf4d:	add    esp,0x124
  41bf53:	ret    
  41bf54:	int3   
  41bf55:	int3   
  41bf56:	int3   
  41bf57:	int3   
  41bf58:	int3   
  41bf59:	int3   
  41bf5a:	int3   
  41bf5b:	int3   
  41bf5c:	int3   
  41bf5d:	int3   
  41bf5e:	int3   
  41bf5f:	int3   
  41bf60:	cmp    edi,0x46
  41bf63:	lock jmp DWORD PTR [ebx+0x0]
  41bf67:	nop
  41bf68:	call   DWORD PTR [ecx+0x4]
  41bf6b:	push   eax
  41bf6c:	(bad)  
  41bf6d:	inc    DWORD PTR [eax]
  41bf6f:	and    eax,0x6a1c0000
  41bf74:	jmp    FWORD PTR [ebp+0x7b0072cc]
  41bf7a:	mov    es,WORD PTR [ebx]
  41bf7c:	inc    DWORD PTR [eax]
  41bf7e:	add    BYTE PTR [ebx-0x7d],al
  41bf81:	adc    DWORD PTR [ebx+edx*8+0x0],0x35
  41bf86:	call   DWORD PTR [ebp+0x0]
  41bf89:	dec    ebp
  41bf8a:	jnp    0x41bfb2
  41bf8c:	add    bh,bh
  41bf8e:	push   ecx
  41bf90:	mov    esp,ecx
  41bf92:	mov    WORD PTR [esi],?
  41bf94:	int3   
  41bf95:	stos   BYTE PTR es:[edi],al
  41bf96:	add    BYTE PTR [edi-0x18fac101],al
  41bf9c:	add    BYTE PTR [ebx+0xff8b00],al
  41bfa2:	sbb    eax,0x8345ff93
  41bfa7:	adc    edi,edi
  41bfa9:	sub    al,0x7
  41bfab:	mov    BYTE PTR [eax],0x83
  41bfae:	add    BYTE PTR [eax+eax*1-0xc69e01],dh
  41bfb5:	push   ds
  41bfb6:	call   DWORD PTR [ecx-0x6528a800]
  41bfbc:	add    bh,bh
  41bfbe:	push   DWORD PTR [ecx+0x5a37ccff]
  41bfc4:	call   FWORD PTR [ebx]
  41bfc6:	add    BYTE PTR [ebx],ah
  41bfc8:	(bad)  
  41bfc9:	(bad)  
  41bfca:	mov    ebp,0x83ff00
  41bfcf:	rol    DWORD PTR [eax],1
  41bfd1:	mov    DWORD PTR [edi+eiz*1-0x6cff7101],eax
  41bfd8:	(bad)  
  41bfd9:	cli    
  41bfda:	dec    edx
  41bfdb:	push   esp
  41bfdc:	(bad)  
  41bfdd:	dec    DWORD PTR [ecx+0x683ff29]
  41bfe3:	inc    edi
  41bfe4:	mov    DWORD PTR [edi+edi*8-0xc],edx
  41bfe8:	add    BYTE PTR [edx],ah
  41bfea:	sahf   
  41bfeb:	xchg   esi,eax
  41bfec:	add    BYTE PTR [ecx-0x765000],cl
  41bff2:	sub    DWORD PTR [eax],ebp
  41bff4:	push   DWORD PTR ds:0x45fffd00
  41bffa:	ret    0x32
  41bffd:	dec    DWORD PTR [ecx+0x1fffffdb]
  41c003:	jl     0x41bf8e
  41c005:	sbb    DWORD PTR [eax],eax
  41c007:	int3   
  41c008:	mov    DWORD PTR [edx],edx
  41c00a:	test   esp,ebp
  41c00c:	add    bh,bh
  41c00e:	add    BYTE PTR [ecx],ah
  41c010:	cmp    edi,0xffffffef
  41c013:	and    DWORD PTR [ecx+0x87ff9a],ecx
  41c019:	mov    edx,0xffff8caf
  41c01e:	int3   
  41c01f:	popa   
  41c020:	dec    esp
  41c022:	aas    
  41c023:	xor    eax,0x8b0064ff
  41c028:	inc    DWORD PTR [edx+0x65]
  41c02b:	sub    al,0x0
  41c02d:	mov    edi,edi
  41c02f:	repnz (bad) 
  41c031:	dec    DWORD PTR [ecx+0xaccc5d]
  41c037:	sbb    ecx,esp
  41c039:	mov    esp,0xff83ead5
  41c03e:	add    dl,cl
  41c040:	(bad)  
  41c041:	call   FWORD PTR [edi+0x51]
  41c044:	mov    DWORD PTR [edi-0x7ff0534],esi
  41c04a:	mov    ah,0xd3
  41c04c:	cmp    edi,0xffffff89
  41c04f:	cmp    al,BYTE PTR [eax]
  41c051:	add    BYTE PTR [eax-0xc07cb6],ah
  41c057:	test   DWORD PTR [ecx-0x336c1cf7],ecx
  41c05d:	inc    DWORD PTR [eax]
  41c05f:	mov    al,0xff
  41c061:	(bad)  
  41c062:	mov    edx,0x7500a8
  41c067:	(bad)  
  41c068:	mov    DWORD PTR [edi-0xcac4],ebx
  41c06e:	(bad)  
  41c06f:	jge    0x41c070
  41c071:	inc    edx
  41c073:	sbb    BYTE PTR [eax],al
  41c075:	add    bh,bh
  41c077:	sbb    bh,bh
  41c079:	(bad)  
  41c07a:	retf   0xff5f
  41c07d:	inc    DWORD PTR [eax]
  41c07f:	rol    BYTE PTR [ebx-0x76ee5b00],0x1d
  41c086:	add    BYTE PTR [ecx-0x25ca3634],dl
  41c08c:	(bad)  
  41c08d:	dec    esp
  41c08f:	sar    edi,cl
  41c091:	add    BYTE PTR [eax-0x7b],dl
  41c094:	call   ebp
  41c096:	call   eax
  41c098:	add    BYTE PTR [edx],ch
  41c09a:	js     0x41c09d
  41c09c:	add    BYTE PTR [ebx+0xa200],al
  41c0a2:	dec    esi
  41c0a3:	or     al,0x89
  41c0a5:	add    BYTE PTR [ebx-0x18de009b],0x1b
  41c0ac:	add    bh,bh
  41c0ae:	add    BYTE PTR [edx],dh
  41c0b0:	add    BYTE PTR [eax],al
  41c0b2:	and    al,0x93
  41c0b4:	push   DWORD PTR [edx-0x1]
  41c0b7:	out    0xcc,eax
  41c0b9:	adc    ebx,DWORD PTR [ebx+ebx*8]
  41c0bc:	add    BYTE PTR [eax],al
  41c0be:	cmp    DWORD PTR [ebx],0xffffffff
  41c0c1:	add    dl,dl
  41c0c3:	jle    0x41c0c4
  41c0c5:	(bad)  
  41c0c6:	(bad)  
  41c0c7:	jge    0x41c0c8
  41c0c9:	stc    
  41c0ca:	dec    esi
  41c0cb:	sar    bh,0x0
  41c0ce:	push   DWORD PTR [edx-0x1]
  41c0d1:	(bad)  
  41c0d2:	cmp    bl,ch
  41c0d4:	mov    DWORD PTR [ecx-0xdff9100],edx
  41c0da:	xor    DWORD PTR [ecx],ecx
  41c0dc:	cmp    edi,0x0
  41c0df:	dec    edi
  41c0e0:	inc    DWORD PTR [ebx+0x5f83fe29]
  41c0e6:	int3   
  41c0e7:	xchg   ebx,eax
  41c0e8:	push   DWORD PTR [esi]
  41c0ea:	xor    eax,0xff0083fc
  41c0ef:	loopne 0x41c0f1
  41c0f1:	sbb    esp,0x11
  41c0f4:	inc    DWORD PTR [ecx+0x4200f6ff]
  41c0fa:	cdq    
  41c0fb:	cmp    bh,bh
  41c0fd:	add    bh,bh
  41c0ff:	icebp  
  41c100:	add    bh,bh
  41c102:	test   eax,0xedffd7
  41c107:	and    ecx,esp
  41c109:	xchg   esp,eax
  41c10a:	jp     0x41c151
  41c10c:	(bad)  
  41c10d:	(bad)  
  41c10e:	push   DWORD PTR [edx]
  41c110:	inc    DWORD PTR [ebx+0x5bffc85a]
  41c116:	add    BYTE PTR [edx+0x701c2800],al
  41c11c:	(bad)  
  41c11d:	inc    DWORD PTR [eax]
  41c11f:	jns    0x41c120
  41c121:	xor    edi,0x11
  41c124:	dec    DWORD PTR [ecx+ecx*4]
  41c127:	outs   dx,BYTE PTR ds:[esi]
  41c128:	add    BYTE PTR [ebp+0xff269a],al
  41c12e:	(bad)  
  41c12f:	(bad)  
  41c131:	call   ebp
  41c133:	dec    ebx
  41c134:	dec    DWORD PTR [ebp-0x1]
  41c137:	jl     0x41c139
  41c139:	rcl    DWORD PTR [ebp-0x36],0x0
  41c13d:	inc    DWORD PTR [eax]
  41c13f:	out    dx,al
  41c140:	mov    edi,edi
  41c142:	test   BYTE PTR [ecx],dh
  41c144:	push   ebx
  41c146:	(bad)  
  41c147:	aas    
  41c148:	add    BYTE PTR [esi-0x65],dh
  41c14b:	(bad)  
  41c14c:	dec    DWORD PTR [ecx+0xff8eff]
  41c152:	repnz lods eax,DWORD PTR ds:[esi]
  41c154:	cmp    DWORD PTR [ecx-0x77],0x42
  41c158:	mov    ecx,eax
  41c15a:	mov    esi,0xffffffba
  41c15f:	in     eax,0x0
  41c161:	jmp    eax
  41c163:	idiv   bh
  41c165:	xor    DWORD PTR ss:[edi-0x1],0x6b
  41c16a:	push   esp
  41c16b:	(bad)  
  41c16d:	cmp    edi,0xffffffa5
  41c170:	add    bh,bh
  41c172:	mov    WORD PTR [ecx],gs
  41c174:	jmp    FWORD PTR [eax+0x6b00a4ff]
  41c17a:	sbb    bl,BYTE PTR [ebp+0x0]
  41c17d:	add    bh,bh
  41c17f:	test   DWORD PTR [eax],0xffce1ccc
  41c185:	out    0x83,al
  41c187:	loopne 0x41c188
  41c189:	mov    al,0xea
  41c18b:	inc    edi
  41c18c:	int3   
  41c18d:	cmp    edi,0xffffff85
  41c190:	inc    DWORD PTR [eax]
  41c192:	pop    eax
  41c193:	mov    BYTE PTR [ebx-0xd7c81],al
  41c199:	mov    ds:0x3edd,al
  41c19e:	call   DWORD PTR [edi]
  41c1a0:	inc    DWORD PTR [eax]
  41c1a2:	add    bl,BYTE PTR [ebp-0x1]
  41c1a5:	xchg   esi,eax
  41c1a6:	mov    DWORD PTR [ebx-0x18cf01],edx
  41c1ac:	add    bh,bh
  41c1ae:	int3   
  41c1af:	xor    eax,DWORD PTR [eax]
  41c1b1:	(bad)  
  41c1b2:	faddp  st(6),st
  41c1b4:	add    BYTE PTR [ebx-0x1],cl
  41c1b7:	and    bh,bh
  41c1b9:	inc    ebp
  41c1ba:	adc    bh,cl
  41c1bc:	int3   
  41c1bd:	dec    esp
  41c1bf:	mov    bh,0x83
  41c1c1:	sbb    DWORD PTR [edx+0x11],0xffffffff
  41c1c5:	dec    eax
  41c1c6:	add    BYTE PTR [ebp+0x6669f900],bh
  41c1cc:	(bad)  
  41c1cd:	inc    DWORD PTR [eax]
  41c1cf:	idiv   edi
  41c1d1:	(bad)  
  41c1d2:	mov    ebx,0x5a8362
  41c1d7:	test   DWORD PTR [eax],eax
  41c1d9:	bound  edx,QWORD PTR [ebp-0xff00a2]
  41c1df:	jbe    0x41c1e0
  41c1e1:	add    BYTE PTR [eax+0x23],cl
  41c1e4:	inc    DWORD PTR ds:0x85cc0683
  41c1ea:	dec    edx
  41c1eb:	and    edi,edi
  41c1ed:	or     esp,0xffffffcc
  41c1f0:	int3   
  41c1f1:	add    cl,bl
  41c1f3:	dec    esp
  41c1f4:	add    BYTE PTR ds:0x36ffe389,dh
  41c1fa:	lahf   
  41c1fb:	adc    ecx,DWORD PTR [ecx+0xb6ffff]
  41c201:	add    BYTE PTR [ebx+0x51],ch
  41c204:	dec    DWORD PTR ds:0x35896800
  41c20a:	dec    edi
  41c20b:	xlat   BYTE PTR ds:[ebx]
  41c20c:	(bad)  
  41c20d:	inc    DWORD PTR [eax]
  41c20f:	inc    DWORD PTR [ebx-0x6e5c01]
  41c215:	fdivp  st(7),st
  41c217:	pop    edi
  41c218:	jmp    DWORD PTR [ebp-0x7c00608e]
  41c21e:	sbb    DWORD PTR [edi+edi*8-0x34],0xfffffff4
  41c223:	push   es
  41c224:	sub    DWORD PTR [ebp-0x3a33f000],0x50
  41c22b:	mov    ecx,0x31000000
  41c230:	dec    esp
  41c232:	xor    eax,0x79ff40
  41c237:	pop    edx
  41c238:	int3   
  41c239:	(bad)  
  41c23b:	push   ebp
  41c23c:	(bad)  
  41c23d:	inc    DWORD PTR [ebx-0x7700ff46]
  41c243:	cld    
  41c244:	add    BYTE PTR [ebp+0xfff9cc],bl
  41c24a:	pop    esp
  41c24b:	inc    eax
  41c24c:	int3   
  41c24d:	mov    edi,edi
  41c24f:	or     DWORD PTR [eax],eax
  41c251:	and    DWORD PTR [edx],0xffffff8f
  41c254:	(bad)  
  41c255:	jle    0x41c1e0
  41c257:	in     al,dx
  41c258:	add    ch,cl
  41c25a:	cmp    al,0x50
  41c25c:	inc    DWORD PTR [eax]
  41c25e:	jmp    edi
  41c260:	dec    esp
  41c262:	xor    DWORD PTR [ebx],edi
  41c264:	add    BYTE PTR ds:0x7900ccff,cl
  41c26a:	in     al,dx
  41c26b:	sbb    al,0xff
  41c26d:	inc    DWORD PTR [eax]
  41c26f:	jecxz  0x41c270
  41c271:	int3   
  41c272:	mov    dh,0xa8
  41c274:	add    BYTE PTR [eax+eax*1+0x21c78910],al
  41c27b:	jne    0x41c27c
  41c27d:	cmp    edi,0xfffffff4
  41c280:	(bad)  
  41c281:	jmp    ebx
  41c283:	mov    ds:0xefffe389,eax
  41c288:	add    BYTE PTR [edi],bl
  41c28a:	test   DWORD PTR [ebx],ebx
  41c28c:	add    ah,cl
  41c28e:	mov    DWORD PTR ds:0xe43fff00,ecx
  41c294:	push   DWORD PTR [edx]
  41c296:	add    dh,ah
  41c298:	mov    DWORD PTR [eax*8-0xff7cc3],edi
  41c29f:	out    dx,eax
  41c2a0:	add    BYTE PTR [eax],al
  41c2a2:	jns    0x41c2d6
  41c2a4:	xor    ebx,0xffffffff
  41c2a7:	push   eax
  41c2a8:	dec    DWORD PTR [edi]
  41c2aa:	jnp    0x41c243
  41c2ac:	mov    edi,edi
  41c2ae:	(bad)  
  41c2af:	in     eax,dx
  41c2b0:	dec    DWORD PTR [ecx-0x6bff2c5d]
  41c2b6:	jmp    DWORD PTR [ebp-0x77]
  41c2b9:	mov    ebp,0x8383a7b9
  41c2be:	mov    DWORD PTR [edi+edi*8],esi
  41c2c1:	int3   
  41c2c2:	imul   BYTE PTR [edx-0x7d]
  41c2c5:	fdivr  st,st(7)
  41c2c7:	xor    bh,bh
  41c2c9:	call   0x78ff:0xffcced55
  41c2d0:	add    DWORD PTR [eax],0xffffffeb
  41c2d3:	adc    eax,0xabffe2ff
  41c2d8:	mov    DWORD PTR [edx-0x5],ebx
  41c2db:	add    al,0x83
  41c2dd:	dec    DWORD PTR [ecx+0x62ffcc70]
  41c2e3:	les    eax,FWORD PTR [eax]
  41c2e5:	outs   dx,BYTE PTR ds:[esi]
  41c2e6:	call   ecx
  41c2e8:	(bad)  
  41c2e9:	cmp    DWORD PTR [esp+ecx*4-0x1],ebp
  41c2ed:	dec    esp
  41c2ef:	sub    eax,DWORD PTR [ebx+0xedd5ff]
  41c2f5:	mov    DWORD PTR [ebx+0x331300ea],eax
  41c2fb:	int3   
  41c2fc:	inc    DWORD PTR [eax]
  41c2fe:	add    al,ch
  41c300:	(bad)  
  41c301:	(bad)  
  41c302:	js     0x41c354
  41c304:	or     DWORD PTR [eax-0x61ff5f01],0xffffff9d
  41c30b:	add    eax,DWORD PTR [ebx-0x650100]
  41c311:	(bad)  
  41c312:	in     al,dx
  41c313:	mov    edi,0x42ff7f00
  41c318:	int3   
  41c319:	icebp  
  41c31a:	jnp    0x41c2af
  41c31c:	cmp    edi,0xffffff89
  41c31f:	arpl   di,di
  41c321:	add    BYTE PTR [edx],bl
  41c323:	add    bh,bh
  41c325:	adc    BYTE PTR [eax],al
  41c327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c328:	dec    DWORD PTR [esi-0x76004035]
  41c32e:	xor    DWORD PTR [esi],0x0
  41c331:	add    bl,al
  41c333:	cwde   
  41c334:	cmp    DWORD PTR [eax+0x1083c383],0x5c
  41c33b:	add    edi,edi
  41c33d:	dec    esp
  41c33f:	repnz add BYTE PTR [eax],al
  41c342:	ret    
  41c343:	push   0xbbff3aff
  41c348:	add    BYTE PTR ds:0x83001c1c,cl
  41c34e:	call   FWORD PTR [eax]
  41c350:	dec    DWORD PTR [ecx+0x70ffc332]
  41c356:	add    BYTE PTR ds:0xd87ab00,dl
  41c35c:	add    BYTE PTR [eax],al
  41c35e:	add    DWORD PTR [esi],0xffffffff
  41c361:	add    BYTE PTR [edx+ebp*1-0x1],dl
  41c365:	pop    ebp
  41c366:	sbb    esp,0x0
  41c369:	leave  
  41c36a:	mov    eax,ds:0xffcce0
  41c36f:	stos   DWORD PTR es:[edi],eax
  41c370:	add    BYTE PTR [eax],al
  41c372:	add    eax,0xffe8ff83
  41c377:	pop    esp
  41c378:	cmp    DWORD PTR [ebx-0xff764d],0x0
  41c37f:	mov    al,ds:0x4349ffcc
  41c384:	add    BYTE PTR [edx],bl
  41c386:	call   FWORD PTR [esi-0x34]
  41c389:	or     ecx,0xf6
  41c38f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c390:	inc    DWORD PTR [eax]
  41c392:	mov    BYTE PTR [ebx-0x34],al
  41c395:	xchg   esp,ecx
  41c397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c398:	int3   
  41c399:	inc    esi
  41c39a:	jg     0x41c33e
  41c39c:	cmp    edi,0x0
  41c39f:	aad    0xff
  41c3a1:	call   FWORD PTR [ebx-0x17]
  41c3a4:	sbb    DWORD PTR [ebp-0x1],0xffffff81
  41c3a8:	add    al,ch
  41c3aa:	pop    esp
  41c3ab:	mov    edi,0x6700ff00
  41c3b0:	int3   
  41c3b1:	mov    DWORD PTR [ebp+0x22],eax
  41c3b4:	inc    DWORD PTR [ecx+ecx*4-0x47]
  41c3b8:	jmp    DWORD PTR [esp+ecx*1]
  41c3bb:	cs add bh,bh
  41c3be:	add    BYTE PTR [ecx],ch
  41c3c0:	add    BYTE PTR [eax],al
  41c3c2:	jge    0x41c359
  41c3c4:	add    BYTE PTR [ebp+0xbff9aff],dl
  41c3ca:	push   esi
  41c3cb:	jb     0x41c3cd
  41c3cd:	add    DWORD PTR [eax],0x0
  41c3d0:	inc    DWORD PTR [ebx+0x1aff1822]
  41c3d6:	jmp    DWORD PTR [ebp+0x7a88d100]
  41c3dc:	(bad)  
  41c3dd:	inc    DWORD PTR [eax]
  41c3df:	xchg   BYTE PTR [ebx+0x384f00],al
  41c3e5:	sub    bh,bh
  41c3e7:	test   bh,bh
  41c3e9:	mov    dh,0xd7
  41c3eb:	cmp    eax,0x97ff0000
  41c3f0:	(bad)  
  41c3f1:	(bad)  
  41c3f2:	in     eax,dx
  41c3f3:	mov    eax,ds:0x34ff7cff
  41c3f8:	jmp    FWORD PTR [ebx]
  41c3fa:	pop    di
  41c3fc:	add    DWORD PTR [ebx-0x7cffe501],0x6a
  41c403:	iret   
  41c404:	(bad)  
  41c405:	sti    
  41c406:	and    DWORD PTR [esi-0x1],0xffffff97
  41c40a:	daa    
  41c40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c40c:	inc    DWORD PTR [eax]
  41c40e:	add    BYTE PTR [edi],cl
  41c410:	inc    DWORD PTR [ebx+0x1dccdd28]
  41c416:	xor    DWORD PTR [edi-0x4fa78001],0xffffffff
  41c41d:	dec    esp
  41c41f:	pop    ebp
  41c420:	mov    edi,edi
  41c422:	inc    edi
  41c423:	jmp    0x7b42a227
  41c428:	cmp    DWORD PTR [edi+0x4],0xffffff9e
  41c42c:	inc    DWORD PTR [eax]
  41c42e:	jmp    DWORD PTR [edi+edi*8]
  41c431:	or     DWORD PTR [esi+0x9],0xffffffff
  41c435:	push   cs
  41c436:	add    BYTE PTR [ebx-0x34],dh
  41c439:	into   
  41c43a:	les    edi,FWORD PTR [esi-0x48760001]
  41c440:	int3   
  41c441:	int3   
  41c442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c443:	pop    ebp
  41c444:	add    ah,ch
  41c446:	push   DWORD PTR [esi+0x557e07ff]
  41c44c:	dec    esp
  41c44e:	dec    DWORD PTR [ebx+eax*4+0x0]
  41c452:	cmovle eax,DWORD PTR [eax]
  41c455:	jb     0x41c457
  41c457:	dec    edx
  41c458:	add    BYTE PTR [edx-0x33ff3ab2],ch
  41c45e:	jmp    edx
  41c460:	(bad)  
  41c461:	inc    DWORD PTR [edx+0x48]
  41c464:	inc    DWORD PTR [edx]
  41c466:	add    BYTE PTR [edx],cl
  41c468:	int3   
  41c469:	repnz mov ah,0xd0
  41c46c:	inc    DWORD PTR [ebx-0xff8d01]
  41c472:	ret    
  41c473:	inc    ebx
  41c474:	jmp    FWORD PTR [edx+0x6c001883]
  41c47a:	div    DWORD PTR [eax+eax*1-0x380001]
  41c481:	jmp    FWORD PTR [esi-0x33a3ff0b]
  41c487:	add    bh,bh
  41c489:	or     DWORD PTR [edi+eax*2-0x1],esi
  41c48d:	inc    DWORD PTR [ebx-0x72000052]
  41c493:	popf   
  41c494:	mov    DWORD PTR [edi+edi*8-0x10],edx
  41c498:	add    BYTE PTR [eax],ah
  41c49a:	iret   
  41c49b:	sbb    eax,0x9ffff89
  41c4a0:	(bad)  
  41c4a1:	call   FWORD PTR [edx]
  41c4a3:	and    eax,0xe98944ff
  41c4a8:	push   DWORD PTR [eax]
  41c4aa:	and    al,0x38
  41c4ac:	(bad)  
  41c4ad:	inc    DWORD PTR [eax]
  41c4af:	xlat   BYTE PTR ds:[ebx]
  41c4b0:	(bad)  
  41c4b1:	push   DWORD PTR [esi-0x64ff43]
  41c4b7:	mov    edx,0xafc14883
  41c4bc:	add    bh,bh
  41c4be:	jmp    DWORD PTR [ebp-0x34]
  41c4c1:	(bad)  
  41c4c2:	mov    ecx,0x1a838f
  41c4c7:	idiv   bh
  41c4c9:	sbb    al,0x91
  41c4cb:	mov    esp,0xbeffff83
  41c4d0:	int3   
  41c4d1:	adc    DWORD PTR [ebp+0xa83b5],0xffffff88
  41c4d8:	add    dl,bh
  41c4da:	or     ebp,0x0
  41c4dd:	inc    DWORD PTR [ebx+0x59cc833c]
  41c4e3:	push   es
  41c4e4:	add    BYTE PTR [ebp+0x5a005bff],dh
  41c4ea:	push   0xffff00ae
  41c4ef:	cmp    eax,0x93ff83ff
  41c4f4:	add    BYTE PTR [ecx-0x77],bh
  41c4f7:	lods   eax,DWORD PTR ds:[esi]
  41c4f8:	sbb    ebx,0x0
  41c4fb:	cmp    eax,0x89ffccff
  41c500:	mov    edi,edi
  41c502:	das    
  41c503:	stos   DWORD PTR es:[edi],eax
  41c504:	add    BYTE PTR [eax+eax*1],dh
  41c507:	loop   0x41c508
  41c509:	inc    esi
  41c50a:	ret    
  41c50b:	inc    ecx
  41c50c:	mov    DWORD PTR [eax],eax
  41c50e:	push   esi
  41c510:	inc    DWORD PTR [eax]
  41c512:	call   FWORD PTR [edi+0x834a00]
  41c518:	(bad)  
  41c519:	jge    0x41c567
  41c51b:	(bad)  
  41c51c:	(bad)  
  41c51d:	inc    DWORD PTR [eax]
  41c51f:	pop    ds
  41c520:	inc    DWORD PTR [ebx+0x20899a22]
  41c526:	dec    DWORD PTR [edx+0x0]
  41c529:	inc    esp
  41c52a:	mov    ds:0xff00fff8,al
  41c52f:	adc    al,0xff
  41c531:	int3   
  41c532:	mov    al,ds:0xffacff4d
  41c537:	inc    ebx
  41c538:	jmp    DWORD PTR [ecx]
  41c53a:	inc    eax
  41c53b:	jno    0x41c53c
  41c53d:	(bad)  
  41c53e:	call   DWORD PTR [edi+edi*8]
  41c541:	call   DWORD PTR [ecx-0xd1ffd1]
  41c547:	add    eax,0x886b92ff
  41c54c:	inc    DWORD PTR [eax]
  41c54e:	jmp    FWORD PTR [edx+0x44b2ff83]
  41c554:	call   FWORD PTR [eax+eax*1-0x718fff9a]
  41c55b:	sti    
  41c55c:	mov    edi,edi
  41c55e:	jmp    DWORD PTR [esi]
  41c560:	add    BYTE PTR [eax],al
  41c562:	iret   
  41c563:	lods   eax,DWORD PTR ds:[esi]
  41c564:	push   DWORD PTR ds:0xcff8dff
  41c56a:	push   edx
  41c56b:	add    al,BYTE PTR [eax]
  41c56d:	cmp    edi,0xffffff87
  41c570:	inc    DWORD PTR [ebx+0x17ffac98]
  41c576:	add    BYTE PTR [edx+0x0],dh
  41c579:	cmp    al,0x79
  41c57b:	jne    0x41c549
  41c57d:	(bad)  
  41c57e:	call   DWORD PTR [edx]
  41c580:	(bad)  
  41c581:	jmp    DWORD PTR [eax-0x18]
  41c584:	jmp    DWORD PTR [ebx]
  41c586:	mov    DWORD PTR [ecx+0x4bd4bc83],ecx
  41c58c:	(bad)  
  41c58d:	inc    DWORD PTR [eax]
  41c58f:	addr16 mov edi,edi
  41c592:	xor    DWORD PTR [esi],ebx
  41c594:	add    BYTE PTR [eax-0x1],al
  41c597:	or     bh,bh
  41c599:	pop    ebp
  41c59a:	dec    esi
  41c59b:	outs   dx,BYTE PTR ds:[esi]
  41c59c:	add    bh,bh
  41c59e:	push   DWORD PTR [ebp-0xed7007d]
  41c5a4:	dec    DWORD PTR [edi+edi*8-0x23dfff09]
  41c5ab:	mov    dh,0xff
  41c5ad:	cmp    edi,0x47
  41c5b0:	(bad)  
  41c5b1:	jmp    DWORD PTR [esi+0x1aff8a]
  41c5b7:	aaa    
  41c5b8:	jmp    FWORD PTR [ebx]
  41c5ba:	out    dx,al
  41c5bb:	(bad)  
  41c5bd:	(bad)  
  41c5be:	call   ecx
  41c5c0:	dec    esp
  41c5c2:	mov    ah,0x11
  41c5c4:	xor    DWORD PTR [ebx-0x1],0x60
  41c5c8:	mov    DWORD PTR [eax-0xff519d],esp
  41c5ce:	mov    esi,esp
  41c5d0:	add    ah,cl
  41c5d2:	ret    
  41c5d3:	lea    eax,[eax]
  41c5d5:	or     esp,0xfd9bff9f
  41c5db:	sar    bh,0x0
  41c5de:	mov    DWORD PTR [ecx+0x0],edx
  41c5e1:	add    ah,bh
  41c5e3:	pop    ebp
  41c5e4:	dec    DWORD PTR [edx]
  41c5e6:	call   DWORD PTR [esi]
  41c5e8:	inc    DWORD PTR [edx-0x49]
  41c5eb:	jp     0x41c5ed
  41c5ed:	add    BYTE PTR [eax],al
  41c5ef:	sti    
  41c5f0:	add    ah,cl
  41c5f2:	pop    ebx
  41c5f3:	inc    DWORD PTR [bx+si]
  41c5f6:	(bad)  
  41c5f7:	fadd   QWORD PTR [eax]
  41c5f9:	mul    BYTE PTR [edx+0x72]
  41c5fc:	inc    DWORD PTR [ebx-0x7c5101]
  41c602:	mov    ecx,0xccf2838a
  41c607:	scas   al,BYTE PTR es:[edi]
  41c608:	inc    DWORD PTR [ecx]
  41c60a:	(bad)  
  41c60b:	or     BYTE PTR [eax],al
  41c60d:	add    BYTE PTR [ebx-0x2d7c0082],al
  41c613:	aaa    
  41c614:	jmp    DWORD PTR [edx+0xcff6600]
  41c61a:	mov    al,ds:0xffffff83
  41c61f:	xchg   edi,eax
  41c620:	(bad)  
  41c621:	jmp    FWORD PTR [ebx]
  41c623:	add    BYTE PTR [bx+di-0x2e7d],dh
  41c628:	add    BYTE PTR [ebp-0x51],ch
  41c62b:	sub    eax,0x3f0000ff
  41c630:	inc    DWORD PTR [eax]
  41c632:	push   ecx
  41c633:	mov    al,ds:0x4483dfcc
  41c638:	and    DWORD PTR ds:0xffffec12,0x0
  41c63f:	pop    ds
  41c640:	add    bh,bh
  41c642:	lods   al,BYTE PTR ds:[esi]
  41c643:	ins    BYTE PTR es:[edi],dx
  41c644:	sbb    eax,0xffffffff
  41c647:	dec    esp
  41c648:	add    BYTE PTR [edi],ah
  41c64a:	push   esp
  41c64b:	and    al,BYTE PTR [eax]
  41c64d:	(bad)  
  41c64e:	jmp    FWORD PTR [edx+0x0]
  41c651:	or     DWORD PTR [esi+0x398361],0xfffffffa
  41c658:	add    BYTE PTR [ecx+0x75],dl
  41c65b:	cmp    al,BYTE PTR [eax]
  41c65d:	add    DWORD PTR [eax],0xffffffb6
  41c660:	add    DWORD PTR [eax],0xffffff9b
  41c663:	inc    ebx
  41c664:	dec    edi
  41c666:	dec    ebx
  41c668:	jmp    ecx
  41c66a:	adc    ah,cl
  41c66c:	inc    DWORD PTR [eax]
  41c66e:	mov    DWORD PTR [esi-0x56070001],edi
  41c674:	dec    DWORD PTR [edx+0x0]
  41c677:	test   eax,0x75c40dff
  41c67c:	(bad)  
  41c67d:	dec    esp
  41c67f:	inc    DWORD PTR [bx+si]
  41c682:	adc    esp,DWORD PTR [ecx-0x1]
  41c685:	mov    bh,0x0
  41c687:	mov    ebx,0xc77965ff
  41c68c:	dec    esp
  41c68e:	or     eax,0xffffffff
  41c691:	call   DWORD PTR [ecx+eiz*4]
  41c694:	inc    DWORD PTR [ebp-0x7d]
  41c697:	mov    cl,0xff
  41c699:	mov    fs,WORD PTR [esi+0x4]
  41c69c:	mov    DWORD PTR [eax],eax
  41c69e:	add    BYTE PTR [ebx-0x25980000],ch
  41c6a4:	add    BYTE PTR [esi],bl
  41c6a6:	dec    DWORD PTR [edx-0x1]
  41c6a9:	jb     0x41c6b9
  41c6ab:	add    BYTE PTR [eax],0xff
  41c6ae:	(bad)  
  41c6af:	cmp    eax,0xc5c200ff
  41c6b4:	call   FWORD PTR [ecx+0x64ccadff]
  41c6ba:	push   eax
  41c6bb:	fild   DWORD PTR [eax]
  41c6bd:	cmp    edi,0xb
  41c6c0:	add    bh,bh
  41c6c2:	mov    ah,0x7d
  41c6c4:	call   FWORD PTR [ecx+0x783c9ff]
  41c6ca:	jbe    0x41c6df
  41c6cc:	(bad)  
  41c6cd:	inc    DWORD PTR [eax]
  41c6cf:	int    0x0
  41c6d1:	sbb    DWORD PTR [ebx],0x48
  41c6d4:	call   FWORD PTR [ecx]
  41c6d6:	add    BYTE PTR [edi+0x3882ac83],cl
  41c6dc:	(bad)  
  41c6dd:	(bad)  
  41c6de:	call   edi
  41c6e0:	inc    DWORD PTR [eax]
  41c6e2:	retf   0xff8f
  41c6e5:	jne    0x41c6b3
  41c6e7:	fild   DWORD PTR [eax]
  41c6e9:	loop   0x41c6a0
  41c6eb:	cmp    eax,0x5cffffff
  41c6f0:	dec    DWORD PTR [ecx+0x3200faf9]
  41c6f6:	sub    DWORD PTR [edx+0x6595ef00],0xffffffff
  41c6fd:	add    ah,cl
  41c6ff:	(bad)  
  41c700:	inc    DWORD PTR [ebx+0xbffef02]
  41c706:	mov    DWORD PTR [edx],edi
  41c708:	jmp    FWORD PTR [eax-0x3b]
  41c70b:	sar    bh,1
  41c70d:	(bad)  
  41c70e:	push   ebp
  41c710:	inc    DWORD PTR [eax]
  41c712:	retf   
  41c713:	cmp    BYTE PTR [ebx-0xca766b],al
  41c719:	or     ch,BYTE PTR [ebx+0x61]
  41c71c:	inc    DWORD PTR [eax]
  41c71e:	(bad)  
  41c71f:	inc    DWORD PTR ds:[eax]
  41c722:	mov    al,0x4
  41c724:	int3   
  41c725:	xchg   esi,eax
  41c726:	add    BYTE PTR [esi-0x1],bl
  41c729:	lods   eax,DWORD PTR ds:[esi]
  41c72a:	cld    
  41c72b:	popf   
  41c72c:	inc    DWORD PTR [eax]
  41c72e:	jmp    DWORD PTR [ebx]
  41c730:	(bad)  
  41c731:	dec    DWORD PTR [esi]
  41c733:	test   BYTE PTR [ecx+0x28fff2],0x9
  41c73a:	cmp    eax,0xccba
  41c73f:	mov    esp,0xfbdbffff
  41c744:	call   DWORD PTR [edi+edi*8]
  41c747:	add    BYTE PTR [ecx-0x3466dc],cl
  41c74d:	inc    DWORD PTR [eax]
  41c74f:	ret    
  41c750:	inc    DWORD PTR [eax]
  41c752:	and    al,0x71
  41c754:	inc    DWORD PTR [ecx+0x1e005500]
  41c75a:	les    ebp,FWORD PTR [edx+0x0]
  41c75d:	(bad)  
  41c75e:	(bad)  
  41c75f:	jmp    0xe83:0xcc9800cc
  41c766:	call   FWORD PTR [eax+0x0]
  41c769:	into   
  41c76a:	or     eax,0xff89cc8f
  41c76f:	xchg   esi,eax
  41c770:	add    ah,cl
  41c772:	xor    DWORD PTR [edx-0x2cff6101],eax
  41c778:	add    BYTE PTR [ebp-0x30],al
  41c77b:	or     eax,0xf4ffff00
  41c780:	add    DWORD PTR [eax],0xffffffe4
  41c783:	jno    0x41c784
  41c785:	xchg   ebp,eax
  41c786:	add    BYTE PTR [esi-0x7d],dh
  41c789:	pop    ebx
  41c78a:	repnz mov ecx,0xd100ffff
  41c790:	inc    DWORD PTR [ebx-0x10ff16ad]
  41c796:	add    BYTE PTR [edx],dl
  41c798:	jmp    FWORD PTR [ecx+ebp*2+0x25]
  41c79c:	int3   
  41c79d:	(bad)  
  41c79e:	call   DWORD PTR [edx-0x1]
  41c7a1:	mov    DWORD PTR [esp+ebx*2-0x7d],ebx
  41c7a5:	sub    eax,DWORD PTR [ebx+0x2b7dff70]
  41c7ab:	aas    
  41c7ac:	inc    DWORD PTR [ebx+0x831bff]
  41c7b2:	mov    al,0x8e
  41c7b4:	add    BYTE PTR [ecx+0x69ff7300],bl
  41c7ba:	lock xchg ecx,eax
  41c7bc:	int3   
  41c7bd:	add    ah,cl
  41c7bf:	cmp    eax,0xcc2a89ff
  41c7c4:	int3   
  41c7c5:	bound  eax,QWORD PTR [eax]
  41c7c7:	mov    bh,bh
  41c7c9:	push   eax
  41c7ca:	(bad)  
  41c7cb:	xchg   esi,eax
  41c7cc:	add    bh,bh
  41c7ce:	cmp    DWORD PTR [edx+0x71c3ccff],0xffffff83
  41c7d5:	cmc    
  41c7d6:	jmp    FWORD PTR [edi+0x7c53f183]
  41c7dc:	add    bh,bh
  41c7de:	dec    DWORD PTR [ecx]
  41c7e0:	add    BYTE PTR [ebx+0x2fffe4ba],al
  41c7e6:	call   FWORD PTR [ebx+0x0]
  41c7e9:	nop
  41c7ea:	sti    
  41c7eb:	pop    es
  41c7ec:	int3   
  41c7ed:	inc    DWORD PTR [eax]
  41c7ef:	cmp    al,0x83
  41c7f1:	or     DWORD PTR [ebx],0x68
  41c7f4:	add    BYTE PTR [esi+0x4b83f000],ah
  41c7fa:	xchg   esp,eax
  41c7fb:	cmp    al,0x0
  41c7fd:	(bad)  
  41c7fe:	(bad)  
  41c7ff:	out    dx,eax
  41c800:	(bad)  
  41c801:	call   ebx
  41c803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c804:	add    BYTE PTR [edx],bh
  41c806:	xor    DWORD PTR [ecx-0x1],0xffffffd3
  41c80a:	mov    ebx,0x83000015
  41c80f:	sub    cl,BYTE PTR [ecx-0x94d434]
  41c815:	pop    ss
  41c816:	dec    DWORD PTR [edi+edi*8-0xa09d60]
  41c81d:	(bad)  
  41c81e:	jmp    DWORD PTR [esi]
  41c820:	add    bh,bh
  41c822:	cmp    DWORD PTR [edi+0x3f83fc00],0xffffff89
  41c829:	ds adc eax,0x83b5
  41c82f:	inc    edi
  41c830:	add    bh,bh
  41c832:	mov    cl,0x68
  41c834:	or     ecx,0x0
  41c837:	hlt    
  41c838:	push   DWORD PTR [esi+edi*8-0x7cff77]
  41c83f:	xlat   BYTE PTR ds:[ebx]
  41c840:	(bad)  
  41c841:	dec    esp
  41c843:	adc    bh,bh
  41c845:	cdq    
  41c846:	push   esp
  41c848:	add    BYTE PTR [esi+0xfff0ea],dh
  41c84e:	add    BYTE PTR [ebp+0x117bcc00],dl
  41c854:	add    BYTE PTR [eax-0x1],bl
  41c857:	or     edi,edi
  41c859:	or     eax,0x838973d2
  41c85e:	add    BYTE PTR [ebx+eax*4-0x1],dh
  41c862:	sub    ecx,DWORD PTR [ecx+0x29ccedff]
  41c868:	add    BYTE PTR [eax+0x6c],dl
  41c86b:	or     DWORD PTR [ecx-0x77007d],0x0
  41c872:	retf   
  41c873:	dec    esp
  41c874:	add    BYTE PTR [edi-0x20ff1e00],al
  41c87a:	sub    DWORD PTR [esi],ebx
  41c87c:	(bad)  
  41c87d:	(bad)  
  41c87e:	jmp    DWORD PTR [edi+edi*8-0x7c461977]
  41c885:	iret   
  41c886:	add    DWORD PTR [eax],0xffffffff
  41c889:	jns    0x41c879
  41c88b:	add    edi,edi
  41c88d:	add    BYTE PTR [ebx+0x31ff830c],al
  41c893:	(bad)  
  41c894:	(bad)  
  41c895:	jle    0x41c896
  41c897:	jecxz  0x41c898
  41c899:	dec    eax
  41c89a:	mov    ds:0xffffff0a,al
  41c89f:	sahf   
  41c8a0:	inc    DWORD PTR [eax]
  41c8a2:	test   ebx,0x6fff3883
  41c8a8:	push   DWORD PTR [ebp+0x1b]
  41c8ab:	cmp    eax,DWORD PTR [eax]
  41c8ad:	(bad)  
  41c8ae:	push   esi
  41c8b0:	add    bh,bh
  41c8b2:	stc    
  41c8b3:	and    al,0xff
  41c8b5:	inc    WORD PTR [esi-0x71031300]
  41c8bc:	add    BYTE PTR [eax],al
  41c8be:	add    BYTE PTR [eax],dl
  41c8c0:	inc    DWORD PTR [eax]
  41c8c2:	sub    eax,0xe4ff57
  41c8c7:	pop    edx
  41c8c8:	(bad)  
  41c8c9:	jle    0x41c8cd
  41c8cb:	bound  eax,QWORD PTR [eax]
  41c8cd:	add    bh,bh
  41c8cf:	scas   al,BYTE PTR es:[edi]
  41c8d0:	(bad)  
  41c8d1:	(bad)  
  41c8d2:	cld    
  41c8d3:	popa   
  41c8d4:	and    DWORD PTR [eax-0x6d000d01],0x34
  41c8db:	(bad)  
  41c8dc:	inc    DWORD PTR [eax]
  41c8de:	add    BYTE PTR [edi],dl
  41c8e0:	mov    esp,ecx
  41c8e2:	leave  
  41c8e3:	idiv   bh
  41c8e5:	scas   al,BYTE PTR es:[edi]
  41c8e6:	add    BYTE PTR [ecx-0x1],bl
  41c8e9:	jo     0x41c8e5
  41c8eb:	mov    ecx,0xdc0083ff
  41c8f0:	add    BYTE PTR [eax],al
  41c8f2:	sbb    eax,0xae83f2
  41c8f7:	sub    al,0xff
  41c8f9:	icebp  
  41c8fa:	aas    
  41c8fb:	pushf  
  41c8fc:	inc    DWORD PTR [eax]
  41c8fe:	add    BYTE PTR [ebx+eax*4],dl
  41c901:	jmp    ebp
  41c903:	adc    edi,edi
  41c905:	ins    DWORD PTR es:[edi],dx
  41c906:	dec    DWORD PTR [edx-0x1]
  41c909:	daa    
  41c90a:	iret   
  41c90b:	ins    BYTE PTR es:[edi],dx
  41c90c:	add    BYTE PTR [ecx-0x33fff501],cl
  41c912:	fcom   DWORD PTR [edx+0x2acc99ff]
  41c918:	jmp    DWORD PTR [esi+0x60]
  41c91b:	pushf  
  41c91c:	add    BYTE PTR [ebx-0x7c009d01],al
  41c922:	or     DWORD PTR [ecx],0x95ff2683
  41c928:	add    BYTE PTR [eax-0xbd95],dl
  41c92e:	jmp    FWORD PTR [eax-0x15adff77]
  41c934:	call   ebx
  41c936:	jmp    ebx
  41c938:	push   DWORD PTR [ecx-0xff4648]
  41c93e:	push   eax
  41c940:	dec    esp
  41c942:	jge    0x41c967
  41c944:	call   DWORD PTR [esi-0x7d]
  41c947:	stos   DWORD PTR es:[edi],eax
  41c948:	push   ebp
  41c94a:	mov    ebx,DWORD PTR ds:0x5affff00
  41c950:	(bad)  
  41c951:	push   DWORD PTR [esi-0x6f0018]
  41c957:	fdivp  st(7),st
  41c959:	push   ss
  41c95a:	dec    esi
  41c95b:	repnz inc DWORD PTR [eax]
  41c95e:	mov    edi,ebx
  41c960:	int3   
  41c961:	(bad)  
  41c962:	mov    ebp,0xaaff65
  41c967:	loope  0x41c968
  41c969:	adc    al,0xc5
  41c96b:	in     al,0x0
  41c96d:	dec    DWORD PTR [ecx+0x4f00ff28]
  41c973:	ins    DWORD PTR es:[edi],dx
  41c974:	add    dh,ah
  41c976:	push   DWORD PTR [ebp+0x4fefbfff]
  41c97c:	mov    DWORD PTR [eax],eax
  41c97e:	add    BYTE PTR ds:0x54688300,bl
  41c984:	and    DWORD PTR [edx],0x0
  41c987:	pop    es
  41c988:	jmp    FWORD PTR [edx+0x6b]
  41c98b:	sbb    bh,bh
  41c98d:	add    BYTE PTR [eax],al
  41c98f:	xchg   esi,eax
  41c990:	inc    DWORD PTR [eax]
  41c992:	imul   esp,DWORD PTR [edx-0x7d],0x8338cc20
  41c999:	test   eax,0xff0018e3
  41c99e:	push   edx
  41c9a0:	(bad)  
  41c9a1:	(bad)  
  41c9a2:	call   0xcd14c93b
  41c9a7:	mov    esp,0x5733100
  41c9ac:	(bad)  
  41c9ad:	(bad)  
  41c9ae:	dec    DWORD PTR [edi]
  41c9b0:	or     esp,0xffffffdc
  41c9b3:	mov    ecx,0xd9007d00
  41c9b8:	jmp    FWORD PTR [ebp-0xd1f5]
  41c9be:	add    BYTE PTR [ebx+eax*4],ah
  41c9c1:	cmp    DWORD PTR [eax-0x3e],0x0
  41c9c5:	dec    ebp
  41c9c6:	dec    DWORD PTR [edx]
  41c9c8:	jmp    DWORD PTR [ebx+ecx*1]
  41c9cb:	out    dx,al
  41c9cc:	add    BYTE PTR [ebx+0xccde00],al
  41c9d2:	jecxz  0x41c997
  41c9d4:	add    BYTE PTR [edx],al
  41c9d6:	add    BYTE PTR [ecx-0x34],ch
  41c9d9:	jbe    0x41ca00
  41c9db:	push   0xffffffff
  41c9dd:	(bad)  
  41c9de:	inc    DWORD PTR [edx-0x1]
  41c9e1:	jmp    FWORD PTR [eax-0xc]
  41c9e4:	mov    DWORD PTR [ecx+ecx*4-0x28],ecx
  41c9e8:	jmp    FWORD PTR [ebx]
  41c9ea:	lea    esi,[edx-0x6c337d00]
  41c9f0:	cmp    edi,0x13
  41c9f3:	add    BYTE PTR [ebx-0xa9ffc4],0x6c
  41c9fa:	loope  0x41c998
  41c9fc:	inc    DWORD PTR [eax]
  41c9fe:	call   FWORD PTR [edi+edi*8-0xca9b77]
  41ca05:	outs   dx,DWORD PTR ds:[esi]
  41ca06:	dec    ecx
  41ca08:	add    BYTE PTR [esi-0x3],dl
  41ca0b:	in     al,dx
  41ca0c:	add    bh,bh
  41ca0e:	(bad)  
  41ca0f:	(bad)  
  41ca11:	push   ebx
  41ca13:	mov    edi,edi
  41ca15:	dec    eax
  41ca16:	int3   
  41ca17:	mov    edi,0x9de77bff
  41ca1c:	inc    DWORD PTR [eax]
  41ca1e:	push   DWORD PTR [esi-0x77]
  41ca21:	mov    DWORD PTR [edx-0x30002d],ebx
  41ca27:	(bad)  
  41ca29:	sub    eax,0xffffe0b5
  41ca2e:	dec    DWORD PTR [ebx]
  41ca30:	inc    DWORD PTR [eax]
  41ca32:	imul   BYTE PTR [edx+0x0]
  41ca35:	clc    
  41ca36:	jmp    DWORD PTR [ebp+0x0]
  41ca39:	fdivr  DWORD PTR [ecx-0x7c008e]
  41ca3f:	push   ebx
  41ca40:	mov    DWORD PTR [eax],eax
  41ca42:	xchg   edi,eax
  41ca43:	test   al,0xff
  41ca45:	les    eax,FWORD PTR [eax]
  41ca47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca48:	add    BYTE PTR [edx],dh
  41ca4a:	sbb    eax,0x83ff0e
  41ca4f:	adc    edi,edi
  41ca51:	(bad)  
  41ca52:	std    
  41ca53:	outs   dx,BYTE PTR ds:[esi]
  41ca54:	add    cl,bh
  41ca56:	add    BYTE PTR [esi-0x4fcae734],ah
  41ca5c:	add    BYTE PTR [eax],al
  41ca5e:	add    BYTE PTR [ebp-0x1],ch
  41ca61:	add    BYTE PTR [eax+0x8],dh
  41ca64:	inc    DWORD PTR [eax]
  41ca66:	add    BYTE PTR [edx-0x1],dl
  41ca69:	mov    dh,0xfa
  41ca6b:	pop    es
  41ca6c:	inc    DWORD PTR [ebx+0xffeb83]
  41ca72:	mov    cl,0x16
  41ca74:	mov    edx,esp
  41ca76:	int3   
  41ca77:	sub    BYTE PTR [eax],al
  41ca79:	or     ah,BYTE PTR ds:0xff0025
  41ca7f:	dec    edi
  41ca80:	mov    DWORD PTR [eax],eax
  41ca82:	repz xor edi,edi
  41ca85:	push   esi
  41ca86:	add    BYTE PTR [ebx],bh
  41ca88:	add    BYTE PTR [eax-0x77],ah
  41ca8b:	popa   
  41ca8c:	inc    DWORD PTR [eax]
  41ca8e:	dec    DWORD PTR [ebp-0x7d]
  41ca91:	add    BYTE PTR [ecx],bl
  41ca93:	push   0x0
  41ca95:	or     eax,0xc78359ff
  41ca9a:	icebp  
  41ca9b:	arpl   di,di
  41ca9d:	(bad)  
  41ca9e:	jmp    FWORD PTR [ecx]
  41caa0:	int3   
  41caa1:	mov    DWORD PTR [ebp-0x8],eax
  41caa4:	add    BYTE PTR [eax+0x2f00a4ff],cl
  41caaa:	xor    bl,BYTE PTR [esi-0x34]
  41caad:	or     DWORD PTR [ecx-0x7e007c70],0x48
  41cab4:	mov    DWORD PTR ds:0x61005889,esi
  41caba:	mov    ch,0x78
  41cabc:	inc    DWORD PTR [eax]
  41cabe:	dec    DWORD PTR [ecx-0x721f3400]
  41cac4:	push   DWORD PTR [esi-0x34]
  41cac7:	lods   al,BYTE PTR ds:[esi]
  41cac8:	int3   
  41cac9:	ret    
  41caca:	cmp    DWORD PTR [ebx-0x34],ebp
  41cacd:	add    bh,bh
  41cacf:	push   eax
  41cad0:	(bad)  
  41cad1:	jmp    DWORD PTR [esi-0x33f2ffed]
  41cad7:	pop    es
  41cad8:	int3   
  41cad9:	mov    esp,DWORD PTR [eax-0xe]
  41cadc:	inc    DWORD PTR [eax]
  41cade:	add    BYTE PTR [edx-0x1],dh
  41cae1:	add    BYTE PTR [eax+ecx*8-0x1],dh
  41cae5:	cwde   
  41cae6:	add    BYTE PTR [ebx],dh
  41cae8:	sbb    DWORD PTR [eax-0x76c4f8],0xffffffff
  41caef:	add    bh,bh
  41caf1:	jmp    DWORD PTR [edi-0x7631005f]
  41caf7:	jmp    0xff:0xeeb624ff
  41cafe:	mov    DWORD PTR [ebx],ebp
  41cb00:	int3   
  41cb01:	or     DWORD PTR [edx+0x1c],0x0
  41cb05:	test   eax,0x34830ccc
  41cb0a:	retf   
  41cb0b:	or     edi,edi
  41cb0d:	(bad)  
  41cb0e:	push   ebp
  41cb10:	int3   
  41cb11:	jmp    FWORD PTR [ecx-0x25]
  41cb14:	call   FWORD PTR [edi+0x289c5ff]
  41cb1a:	cmp    eax,0x8347
  41cb1f:	and    bh,bh
  41cb21:	mov    DWORD PTR [eax+0x9583d9],edi
  41cb27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb28:	jmp    DWORD PTR [ebp-0x22e5]
  41cb2e:	jmp    esp
  41cb30:	add    BYTE PTR [ecx-0x2dff2cba],cl
  41cb36:	jmp    DWORD PTR [ebx-0x3b424c01]
  41cb3c:	(bad)  
  41cb3d:	(bad)  
  41cb3e:	jmp    FWORD PTR [eax]
  41cb40:	inc    DWORD PTR [ebx-0x79005f8a]
  41cb46:	mov    DWORD PTR [ebx-0x5d9a0a01],esi
  41cb4c:	int3   
  41cb4d:	add    bh,bh
  41cb4f:	sar    bh,0xff
  41cb52:	in     eax,dx
  41cb53:	xor    bh,bh
  41cb55:	arpl   di,di
  41cb57:	jb     0x41cb58
  41cb59:	xor    DWORD PTR [ecx],0x7e
  41cb5c:	add    BYTE PTR [eax],al
  41cb5e:	(bad)  
  41cb5f:	call   0x7f854f63
  41cb64:	int3   
  41cb65:	cmp    edi,0x2e1bfff0
  41cb6b:	dec    eax
  41cb6c:	int3   
  41cb6d:	add    BYTE PTR [eax],al
  41cb6f:	scas   al,BYTE PTR es:[edi]
  41cb70:	inc    DWORD PTR [ebx-0x700ae9f]
  41cb76:	inc    DWORD PTR [ebx-0x77]
  41cb79:	mov    ?,WORD PTR [esi-0x42]
  41cb7c:	add    BYTE PTR [ebx+0xe8ff],al
  41cb82:	imul   edx,DWORD PTR [esi+0x488321ff],0x617ea900
  41cb8c:	(bad)  
  41cb8d:	inc    DWORD PTR [eax]
  41cb8f:	jne    0x41cb91
  41cb91:	add    BYTE PTR [eax+0x57],cl
  41cb94:	mov    DWORD PTR [ebx-0x1],ebx
  41cb97:	mov    ah,0xff
  41cb99:	dec    esp
  41cb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb9b:	sub    cl,ah
  41cb9d:	add    bh,bh
  41cb9f:	cmp    bh,0xff
  41cba2:	leave  
  41cba3:	ins    BYTE PTR es:[edi],dx
  41cba4:	add    BYTE PTR [ebx+eax*4-0x3c6bff21],al
  41cbab:	ds (bad) 
  41cbad:	inc    DWORD PTR [eax]
  41cbaf:	sar    edi,cl
  41cbb1:	int3   
  41cbb2:	and    ebx,DWORD PTR [ebp+0x35002600]
  41cbb8:	jmp    ebx
  41cbba:	or     DWORD PTR [edi-0x3b00ff01],esp
  41cbc0:	add    BYTE PTR [eax],al
  41cbc2:	fsubp  st(0),st
  41cbc4:	(bad)  
  41cbc5:	cmp    BYTE PTR [eax],al
  41cbc7:	inc    DWORD PTR [eax]
  41cbc9:	frstor [edx-0x7c0000d6]
  41cbcf:	push   ds
  41cbd0:	(bad)  
  41cbd1:	inc    DWORD PTR [edx]
  41cbd3:	into   
  41cbd4:	add    BYTE PTR [ebx],bh
  41cbd6:	push   DWORD PTR [ebx-0x7d]
  41cbd9:	fbstp  TBYTE PTR [ecx+0x41]
  41cbdc:	add    DWORD PTR [ebx-0xffe301],0x50
  41cbe3:	xchg   esi,eax
  41cbe4:	push   DWORD PTR [edx-0x1]
  41cbe7:	dec    ebp
  41cbe8:	(bad)  
  41cbe9:	fidivr WORD PTR [esi-0x33000025]
  41cbef:	(bad)  
  41cbf2:	test   BYTE PTR [edi-0x4d76087d],bl
  41cbf8:	mov    ebp,edx
  41cbfa:	dec    esi
  41cbfb:	push   esp
  41cbfc:	inc    DWORD PTR [eax]
  41cbfe:	add    ch,ah
  41cc00:	cmp    edi,0x48
  41cc03:	fisttp DWORD PTR [ecx-0xfcff7b]
  41cc09:	(bad)  
  41cc0a:	dec    eax
  41cc0b:	mov    edi,0xb2838900
  41cc10:	(bad)  
  41cc11:	call   DWORD PTR [esi]
  41cc13:	es add al,dh
  41cc16:	add    BYTE PTR [ecx+ecx*4],bh
  41cc19:	and    BYTE PTR [ecx+0x4b],ch
  41cc1c:	or     DWORD PTR [ecx-0x76d701],0x2f
  41cc23:	xor    al,0x0
  41cc25:	push   edi
  41cc26:	add    BYTE PTR [eax],ah
  41cc28:	push   DWORD PTR [ebp-0x339d6b]
  41cc2e:	add    BYTE PTR [eax+0x363f0000],bl
  41cc34:	jmp    DWORD PTR ds:0xdaff25cc
  41cc3a:	nop
  41cc3b:	inc    DWORD PTR es:[eax]
  41cc3e:	add    BYTE PTR [ebx-0x77],dl
  41cc41:	int3   
  41cc42:	outs   dx,BYTE PTR ds:[esi]
  41cc43:	repz (bad) 
  41cc45:	stc    
  41cc46:	or     DWORD PTR [ebp-0x36ef601],0x0
  41cc4d:	inc    DWORD PTR [eax]
  41cc4f:	or     al,0xff
  41cc51:	call   DWORD PTR [ebx-0x4a]
  41cc54:	call   FWORD PTR [ebx-0x1]
  41cc57:	dec    edi
  41cc58:	add    BYTE PTR [edx+esi*1+0x49],bl
  41cc5c:	add    BYTE PTR [ebx+0xff37ff],al
  41cc62:	cmp    BYTE PTR [eax+0x0],al
  41cc65:	das    
  41cc66:	int3   
  41cc67:	and    eax,DWORD PTR [eax]
  41cc69:	xor    eax,0xffa593
  41cc6e:	push   DWORD PTR [edi+0x77a600ff]
  41cc74:	xor    edi,0x0
  41cc77:	leave  
  41cc78:	int3   
  41cc79:	push   edi
  41cc7a:	jecxz  0x41ccac
  41cc7c:	(bad)  
  41cc7d:	(bad)  
  41cc7e:	call   FWORD PTR [ecx+0x0]
  41cc81:	mov    DWORD PTR [edi-0x48],esi
  41cc84:	add    BYTE PTR [ecx-0x637c4400],al
  41cc8a:	inc    ecx
  41cc8b:	fwait
  41cc8c:	(bad)  
  41cc8d:	inc    DWORD PTR [ebx-0x75007c72]
  41cc93:	dec    edi
  41cc94:	jmp    FWORD PTR [eax-0x34]
  41cc97:	mov    eax,0xb8e98fcc
  41cc9c:	dec    esp
  41cc9e:	jmp    FWORD PTR [ebx+0x0]
  41cca1:	push   DWORD PTR [edi]
  41cca3:	stc    
  41cca4:	int3   
  41cca5:	rol    BYTE PTR [eax],1
  41cca7:	jge    0x41cca8
  41cca9:	in     eax,0xf8
  41ccab:	retf   
  41ccac:	(bad)  
  41ccad:	(bad)  
  41ccae:	push   DWORD PTR [ecx-0x1]
  41ccb1:	add    BYTE PTR [edi],bl
  41ccb3:	cmp    bh,0xe
  41ccb6:	add    BYTE PTR [ecx+0x343a4dff],bh
  41ccbc:	add    DWORD PTR [eax],0xffffffff
  41ccbf:	in     eax,0xcc
  41ccc1:	jmp    ebp
  41ccc3:	dec    esi
  41ccc4:	jmp    DWORD PTR [eax-0x34]
  41ccc7:	imul   eax,DWORD PTR [eax],0xff45f5d0
  41cccd:	dec    DWORD PTR [ecx-0x16ffffcf]
  41ccd3:	in     eax,0x0
  41ccd5:	add    BYTE PTR [eax],0xdc
  41ccd8:	jmp    FWORD PTR [edi-0x4f]
  41ccdb:	inc    ebp
  41ccdc:	add    DWORD PTR [ebx+0xff24ff],0xffffffc9
  41cce3:	test   DWORD PTR [ebx-0xa27c6e],eax
  41cce9:	stos   BYTE PTR es:[edi],al
  41ccea:	push   esp
  41cceb:	sub    ecx,DWORD PTR [ecx-0x2007d]
  41ccf1:	sub    DWORD PTR [eax-0xe00de],0xffffff96
  41ccf8:	add    BYTE PTR [edx-0x25],al
  41ccfb:	mov    esi,0x7083ff00
  41cd00:	inc    DWORD PTR [eax]
  41cd02:	adc    al,0x9e
  41cd04:	add    dh,bl
  41cd06:	xor    DWORD PTR [eax],0xffffffff
  41cd09:	sbb    DWORD PTR [ecx+0xffff64],edx
  41cd0f:	leave  
  41cd10:	dec    DWORD PTR [ecx+0x4fff6c5d]
  41cd16:	call   DWORD PTR [eax-0x59705377]
  41cd1c:	inc    DWORD PTR [eax]
  41cd1e:	push   DWORD PTR [ebp+0x40990000]
  41cd24:	call   DWORD PTR [esi-0x1]
  41cd27:	xor    BYTE PTR [ebx-0xa1bf4],al
  41cd2d:	cmp    edi,0xfffffff3
  41cd30:	cmp    edi,0x5e
  41cd33:	xor    al,BYTE PTR [eax]
  41cd35:	mov    ds:0xb70067cc,al
  41cd3a:	lds    edi,FWORD PTR [edi-0x34]
  41cd3d:	inc    DWORD PTR [ebx-0x5c767c98]
  41cd43:	sahf   
  41cd44:	dec    DWORD PTR [edi+edi*8]
  41cd47:	push   edi
  41cd48:	sub    DWORD PTR [ebx],0xfffffffe
  41cd4b:	or     al,BYTE PTR [eax]
  41cd4d:	int3   
  41cd4e:	mov    esi,ecx
  41cd50:	add    DWORD PTR [eax],0x17
  41cd53:	or     DWORD PTR [ebx-0x9e7c08],eax
  41cd59:	out    dx,eax
  41cd5a:	gs ud0 edi,edi
  41cd5e:	jmp    ebx
  41cd60:	add    bh,bh
  41cd62:	lock cmp al,BYTE PTR [ebx-0xd8ff05]
  41cd69:	aad    0xa9
  41cd6b:	icebp  
  41cd6c:	int3   
  41cd6d:	(bad)  
  41cd6e:	(bad)  
  41cd6f:	mov    ebx,0xcd20ff00
  41cd74:	add    BYTE PTR [esi-0x7d],dl
  41cd77:	nop
  41cd78:	add    BYTE PTR [esi+0x11],al
  41cd7b:	xchg   ecx,eax
  41cd7c:	add    BYTE PTR [eax],al
  41cd7e:	add    BYTE PTR [ebp-0x69cdff7d],al
  41cd84:	int3   
  41cd85:	enter  0x10ff,0x0
  41cd89:	repz cmp cl,BYTE PTR [esi-0x34]
  41cd8d:	(bad)  
  41cd8e:	(bad)  
  41cd8f:	jnp    0x41cd90
  41cd91:	call   FWORD PTR [edi]
  41cd93:	ret    
  41cd94:	(bad)  
  41cd95:	std    
  41cd96:	call   ebx
  41cd98:	cmp    DWORD PTR ds:0xffa070,0xffffffff
  41cd9f:	loopne 0x41cda0
  41cda1:	call   FWORD PTR [ebx-0x7f00a5]
  41cda7:	outs   dx,BYTE PTR ds:[esi]
  41cda8:	or     DWORD PTR ds:0xccff8145,0xffffffff
  41cdaf:	pop    esi
  41cdb0:	cmp    edi,0x4f
  41cdb3:	or     DWORD PTR [eax],eax
  41cdb5:	dec    eax
  41cdb6:	add    al,dh
  41cdb8:	add    bh,dl
  41cdba:	gs imul edi,edi,0xf9ffff
  41cdc1:	int3   
  41cdc2:	loop   0x41cd93
  41cdc4:	push   DWORD PTR [ebx]
  41cdc6:	inc    DWORD PTR [edi-0x255efc34]
  41cdcc:	add    BYTE PTR [eax],al
  41cdce:	add    BYTE PTR [ebx+eax*4],al
  41cdd1:	inc    edi
  41cdd3:	inc    ebx
  41cdd4:	(bad)  
  41cdd5:	jl     0x41cda3
  41cdd7:	cmp    edi,0xff66221b
  41cddd:	int3   
  41cdde:	call   DWORD PTR [ebx+0x4c298383]
  41cde4:	add    BYTE PTR [ecx+0x0],bh
  41cde7:	addr16 int3 
  41cde9:	stc    
  41cdea:	popf   
  41cdeb:	xor    ah,cl
  41cded:	add    bh,bh
  41cdef:	cdq    
  41cdf0:	int3   
  41cdf1:	inc    DWORD PTR [edi-0x1500e8]
  41cdf7:	cld    
  41cdf8:	push   DWORD PTR [eax]
  41cdfa:	test   DWORD PTR [eax-0x69000100],ebp
  41ce00:	(bad)  
  41ce01:	push   DWORD PTR [ecx]
  41ce03:	inc    ecx
  41ce04:	add    BYTE PTR [esi-0x1],ah
  41ce07:	cld    
  41ce08:	int3   
  41ce09:	xchg   esi,eax
  41ce0a:	in     eax,0x64
  41ce0c:	add    BYTE PTR [ebx+0xffb883],al
  41ce12:	xor    al,0x94
  41ce14:	add    bh,cl
  41ce16:	add    ch,dh
  41ce18:	call   FWORD PTR [ebp-0x7cff66dd]
  41ce1e:	push   DWORD PTR ds:0x6b4800cc
  41ce24:	inc    DWORD PTR [ecx-0x1]
  41ce27:	imul   edi,edi,0xcc7d1032
  41ce2d:	add    BYTE PTR [eax],al
  41ce2f:	inc    esi
  41ce30:	add    BYTE PTR [eax],al
  41ce32:	shl    DWORD PTR [edi+0x74ff50ff],0xff
  41ce39:	mov    dl,0x9
  41ce3b:	stos   DWORD PTR es:[edi],eax
  41ce3c:	(bad)  
  41ce3d:	inc    DWORD PTR [eax]
  41ce3f:	pop    esp
  41ce40:	add    BYTE PTR [eax],al
  41ce42:	or     ch,BYTE PTR [edx+0x22ff75ff]
  41ce48:	add    BYTE PTR [ebx-0x7c00d2f8],dl
  41ce4e:	call   DWORD PTR [esi+0x5644ffff]
  41ce54:	add    BYTE PTR [esi-0x627c9901],ch
  41ce5a:	call   0xffc7:0x89ffff58
  41ce61:	call   DWORD PTR [edi-0x7c]
  41ce64:	mov    DWORD PTR [ebx],ebx
  41ce66:	add    BYTE PTR [edi-0x1],ah
  41ce69:	outs   dx,DWORD PTR ds:[esi]
  41ce6a:	pop    ebx
  41ce6b:	mov    cl,0xff
  41ce6d:	mov    edi,edi
  41ce6f:	scas   eax,DWORD PTR es:[edi]
  41ce70:	or     DWORD PTR [ecx+0x79896af4],0x0
  41ce77:	and    cl,ah
  41ce79:	adc    BYTE PTR [eax],cl
  41ce7b:	jmp    0x41ce7c
  41ce7d:	add    DWORD PTR [ebx-0x57c005a],0x2
  41ce84:	sbb    DWORD PTR [ebp+0x0],0xfffffffc
  41ce88:	cmp    ebp,0x12
  41ce8b:	ret    0x83ff
  41ce8e:	add    BYTE PTR [ebx+0x0],ch
  41ce91:	add    BYTE PTR [ecx],bh
  41ce93:	int3   
  41ce94:	jmp    FWORD PTR [edi+edi*8]
  41ce97:	aam    0x0
  41ce99:	pop    ebx
  41ce9a:	in     eax,0x1f
  41ce9c:	add    BYTE PTR [ecx+0xffa3ff],cl
  41cea2:	lock push ss
  41cea4:	add    BYTE PTR [edi-0x1],al
  41cea7:	push   ss
  41cea8:	mov    DWORD PTR [ebp-0x337c562a],esi
  41ceae:	int3   
  41ceaf:	xor    al,BYTE PTR [eax]
  41ceb1:	add    BYTE PTR [ebx],ch
  41ceb3:	jp     0x41ceb4
  41ceb5:	dec    edx
  41ceb6:	jmp    FWORD PTR [edx+0x3a1e35cc]
  41cebc:	dec    esp
  41cebe:	adc    DWORD PTR [ecx+ecx*4+0x0],0x50
  41cec3:	ss call ebx
  41cec6:	push   DWORD PTR [ebx+0x0]
  41cec9:	mov    ah,0xcb
  41cecb:	popf   
  41cecc:	int3   
  41cecd:	dec    DWORD PTR [ecx+0x6900ff82]
  41ced3:	data16 add BYTE PTR ds:0xd3cca300,bh
  41ceda:	add    bh,dh
  41cedc:	add    DWORD PTR [eax],0xffffffff
  41cedf:	cmp    al,0x0
  41cee1:	(bad)  
  41cee2:	fcom   QWORD PTR [ecx]
  41cee4:	add    BYTE PTR [ebp-0x1],cl
  41cee7:	push   es
  41cee8:	call   DWORD PTR [edx]
  41ceea:	jo     0x41cf02
  41ceec:	add    BYTE PTR [ebx+0xffdaff],al
  41cef2:	inc    esp
  41cef3:	cmp    al,BYTE PTR [ebx-0x2c3323]
  41cef9:	gs inc esi
  41cefb:	inc    edx
  41cefc:	inc    DWORD PTR [ebx+0xfff]
  41cf02:	(bad)  
  41cf03:	add    BYTE PTR ss:[eax],ah
  41cf06:	add    bh,dh
  41cf08:	add    BYTE PTR [ecx+0x37],al
  41cf0b:	jl     0x41ced9
  41cf0d:	int3   
  41cf0e:	or     DWORD PTR [ebx+0x5ff80000],0xffffff89
  41cf15:	rol    DWORD PTR [eax],cl
  41cf17:	sbb    bh,bh
  41cf19:	imul   edi,DWORD PTR [ebp-0x53],0xfaffffff
  41cf20:	inc    DWORD PTR [eax]
  41cf22:	adc    al,0x8
  41cf24:	mov    DWORD PTR [eax],edx
  41cf26:	add    BYTE PTR [edi-0x1],ch
  41cf29:	ja     0x41cf54
  41cf2b:	add    eax,0xba0000ff
  41cf30:	inc    DWORD PTR [eax]
  41cf32:	inc    ebx
  41cf33:	or     edi,edi
  41cf35:	mov    esi,0xdaff6400
  41cf3a:	add    eax,0xff89ff15
  41cf3f:	jns    0x41cf41
  41cf41:	(bad)  
  41cf42:	mov    ecx,0xff11ffb1
  41cf47:	cmc    
  41cf48:	jmp    DWORD PTR [esi-0xfc88]
  41cf4e:	call   edi
  41cf50:	add    bh,bh
  41cf52:	pop    ebp
  41cf53:	inc    esp
  41cf54:	add    BYTE PTR [edi-0x7d],dl
  41cf57:	(bad)  
  41cf59:	add    eax,0xffffb74c
  41cf5e:	push   DWORD PTR [ebx+0x0]
  41cf61:	inc    DWORD PTR [esi+0x14]
  41cf64:	add    BYTE PTR [edi+edi*8-0x7f],bl
  41cf68:	add    DWORD PTR [esi+eiz*1+0x44],0xffffffff
  41cf6d:	(bad)  
  41cf6e:	inc    DWORD PTR [ecx-0x5cf07c01]
  41cf74:	(bad)  
  41cf75:	jmp    0x7596:0x98896d00
  41cf7c:	add    BYTE PTR [eax],al
  41cf7e:	push   DWORD PTR [edi-0x7d]
  41cf81:	call   DWORD PTR [ecx-0x76950012]
  41cf87:	push   0xb3e067ff
  41cf8c:	mov    DWORD PTR [ebx-0xa901],eax
  41cf92:	xchg   ebp,eax
  41cf93:	inc    ebp
  41cf94:	dec    eax
  41cf96:	add    BYTE PTR [edx-0x7d],bl
  41cf99:	repnz test al,0xc6
  41cf9c:	add    DWORD PTR [eax],0xffffffff
  41cf9f:	in     eax,0x0
  41cfa1:	inc    ebx
  41cfa3:	sbb    cl,BYTE PTR [ecx-0x3ffb3]
  41cfa9:	push   edx
  41cfaa:	js     0x41cf79
  41cfac:	(bad)  
  41cfad:	(bad)  
  41cfae:	jmp    DWORD PTR [edx]
  41cfb0:	int3   
  41cfb1:	(bad)  
  41cfb2:	cmp    BYTE PTR [eax],bl
  41cfb4:	jmp    FWORD PTR [ebp-0x7d]
  41cfb7:	jecxz  0x41cf3c
  41cfb9:	loope  0x41cfc7
  41cfbb:	in     al,0x0
  41cfbd:	mov    DWORD PTR [eax],eax
  41cfbf:	push   cs
  41cfc0:	mov    esp,ecx
  41cfc2:	ins    DWORD PTR es:[edi],dx
  41cfc3:	js     0x41cfc5
  41cfc5:	mov    WORD PTR [eax],es
  41cfc7:	mov    bh,bh
  41cfc9:	lahf   
  41cfca:	mov    WORD PTR [ebx],es
  41cfcc:	cmp    edi,0x0
  41cfcf:	test   al,0xcc
  41cfd1:	push   DWORD PTR [edx]
  41cfd3:	test   al,0xff
  41cfd5:	cmp    al,0x89
  41cfd7:	jp     0x41cfd8
  41cfd9:	fdivp  st(5),st
  41cfdb:	js     0x41cf66
  41cfdd:	mov    edi,edi
  41cfdf:	das    
  41cfe0:	add    BYTE PTR [ebx-0x1dff9109],al
  41cfe6:	inc    edi
  41cfe8:	push   DWORD PTR [edi]
  41cfea:	sbb    DWORD PTR [eax+0x2eff8389],ebx
  41cff0:	(bad)  
  41cff1:	(bad)  
  41cff2:	mov    edx,0xf7ff15
  41cff7:	inc    esp
  41cff8:	call   DWORD PTR [eax+0x6b]
  41cffb:	sbb    bh,bh
  41cffd:	add    BYTE PTR [ebx-0x42ffffdd],al
  41d003:	mov    ?,edi
  41d005:	sar    bh,cl
  41d007:	sar    bh,1
  41d009:	es and eax,0xffccd5
  41d00f:	xor    eax,DWORD PTR [eax]
  41d011:	add    BYTE PTR [eax],al
  41d013:	sti    
  41d014:	(bad)  
  41d015:	stc    
  41d016:	mov    DWORD PTR [edi+edi*8-0x3361df],ecx
  41d01d:	int3   
  41d01e:	inc    DWORD PTR [esi]
  41d020:	add    ah,cl
  41d022:	mov    dh,0x6c
  41d024:	inc    DWORD PTR [edi-0x1]
  41d027:	pop    esp
  41d028:	dec    DWORD PTR [edx-0x5c]
  41d02b:	pop    eax
  41d02c:	inc    DWORD PTR [eax]
  41d02e:	xor    DWORD PTR [ebp-0x1],0xffffffff
  41d032:	fcomp  DWORD PTR [eax+eax*1-0x766f761b]
  41d039:	call   0xd9ff:0xff00105b
  41d040:	(bad)  
  41d041:	(bad)  
  41d042:	jge    0x41d03d
  41d044:	mov    ecx,eax
  41d046:	push   ebp
  41d048:	add    BYTE PTR [eax-0x1e9f],cl
  41d04e:	add    BYTE PTR [edx-0x7d],cl
  41d051:	(bad)  
  41d052:	mov    eax,0x7000fd
  41d057:	fadd   DWORD PTR [ebx-0x65b0b1]
  41d05d:	int3   
  41d05e:	add    BYTE PTR [ebp+0x0],al
  41d061:	mov    DWORD PTR [edi+0x57],esp
  41d064:	call   FWORD PTR [ebp+0x788350ff]
  41d06a:	fnstenv [edi+0x24ff83ff]
  41d070:	add    bh,bh
  41d072:	cmp    eax,0xc4ffc7
  41d077:	mov    ah,0x83
  41d079:	into   
  41d07a:	retf   
  41d07b:	stos   BYTE PTR es:[edi],al
  41d07c:	add    bh,bh
  41d07e:	add    BYTE PTR [ebx],dh
  41d080:	(bad)  
  41d081:	call   esp
  41d083:	xor    al,0x83
  41d085:	or     BYTE PTR [eax],al
  41d087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d088:	mov    edi,esi
  41d08a:	js     0x41d0df
  41d08c:	add    BYTE PTR [ebx-0x7c4300],al
  41d092:	out    0x37,al
  41d094:	push   DWORD PTR [esi-0x147ca401]
  41d09a:	emms   
  41d09c:	(bad)  
  41d09d:	(bad)  
  41d09e:	call   FWORD PTR [eax-0x1]
  41d0a1:	call   edx
  41d0a3:	popf   
  41d0a4:	(bad)  
  41d0a5:	mov    ebx,0x62ff31cc
  41d0aa:	mov    ah,0xc7
  41d0ac:	dec    esp
  41d0ae:	dec    DWORD PTR [eax+0x0]
  41d0b1:	add    BYTE PTR [esi],ah
  41d0b3:	out    0x83,al
  41d0b5:	pop    edi
  41d0b6:	add    ch,ch
  41d0b8:	add    BYTE PTR [edx+edi*2],al
  41d0bb:	pop    DWORD PTR [eax]
  41d0bd:	add    bh,bh
  41d0bf:	cdq    
  41d0c0:	add    bh,bh
  41d0c2:	rcl    DWORD PTR [edi-0x34],cl
  41d0c5:	cld    
  41d0c6:	and    DWORD PTR [ebp-0x4c94df00],0x0
  41d0cd:	add    bh,bh
  41d0cf:	repnz or DWORD PTR [ecx+0x38ffcefc],0xffffffff
  41d0d7:	test   edi,edi
  41d0d9:	or     BYTE PTR [edi-0x1b],al
  41d0dc:	dec    esp
  41d0de:	add    BYTE PTR [ebp+0x544089ff],bl
  41d0e4:	add    BYTE PTR [edx+0x20ff90ff],ch
  41d0ea:	pop    ebx
  41d0eb:	adc    al,0xff
  41d0ed:	or     esp,0x8
  41d0f0:	(bad)  
  41d0f1:	dec    DWORD PTR [esi]
  41d0f3:	sbb    al,0x89
  41d0f5:	mov    ecx,0xe0003dff
  41d0fa:	cwde   
  41d0fb:	or     al,0xff
  41d0fd:	add    BYTE PTR [ebx-0x753300a3],al
  41d103:	inc    edi
  41d104:	mov    DWORD PTR [eax-0xe00f57d],ecx
  41d10a:	(bad)  
  41d10b:	(bad)  
  41d10c:	inc    DWORD PTR [eax]
  41d10e:	call   FWORD PTR [ebx-0x1]
  41d111:	inc    ecx
  41d113:	sar    edi,1
  41d115:	pop    esp
  41d116:	add    cl,bl
  41d118:	add    DWORD PTR [esi-0x7c0013e2],0xffffffff
  41d11f:	addr16 int3 
  41d121:	(bad)  
  41d122:	jle    0x41d0e4
  41d124:	call   FWORD PTR [edi-0x7400e177]
  41d12a:	mov    eax,ds:0xffffffbf
  41d12f:	inc    esi
  41d130:	inc    DWORD PTR [eax]
  41d132:	fld    QWORD PTR [edi+edi*8-0x117c64]
  41d139:	pop    eax
  41d13a:	or     al,0x5c
  41d13c:	inc    DWORD PTR [ebx-0xfff400]
  41d142:	dec    edi
  41d143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d144:	inc    DWORD PTR [edx]
  41d146:	(bad)  
  41d147:	(bad)  
  41d149:	std    
  41d14a:	popa   
  41d14b:	dec    ebp
  41d14c:	(bad)  
  41d14d:	dec    DWORD PTR [ecx+0x1dcc00c5]
  41d153:	sub    cl,BYTE PTR [ecx+0x1800bb]
  41d159:	jmp    0x41d19c
  41d15b:	and    eax,0x66ffff00
  41d160:	add    DWORD PTR [eax],0x19
  41d163:	imul   eax,DWORD PTR [eax],0x46
  41d166:	add    ch,ah
  41d168:	call   DWORD PTR [ebx+0x79]
  41d16b:	sub    BYTE PTR [ecx+0xaacc00],cl
  41d171:	(bad)  
  41d172:	fld    DWORD PTR ds:0x70080ff
  41d178:	jmp    ebx
  41d17a:	in     eax,dx
  41d17b:	sbb    eax,0xeaffffff
  41d180:	(bad)  
  41d181:	push   DWORD PTR [edx+0x6c]
  41d184:	call   DWORD PTR ds:0xc50006ff
  41d18a:	inc    esp
  41d18b:	jmp    0xff83:0x72ff0083
  41d192:	pop    es
  41d193:	mov    ebp,0x98003983
  41d198:	(bad)  
  41d199:	clc    
  41d19a:	leave  
  41d19b:	push   cs
  41d19c:	inc    DWORD PTR [ebx+0x835589]
  41d1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1a3:	jecxz  0x41d1a4
  41d1a5:	aaa    
  41d1a6:	add    BYTE PTR [ecx+0x288c7cff],al
  41d1ac:	add    BYTE PTR [ebx-0xff4b01],al
  41d1b2:	cld    
  41d1b3:	sbb    BYTE PTR [ecx-0x76f7ff24],cl
  41d1b9:	jno    0x41d1d9
  41d1bb:	test   eax,0xffcc0000
  41d1c0:	(bad)  
  41d1c1:	call   esi
  41d1c3:	xor    ah,cl
  41d1c5:	fld    QWORD PTR [eax]
  41d1c7:	add    al,0x83
  41d1c9:	fadd   DWORD PTR [edi+0xb]
  41d1cc:	add    BYTE PTR [ebx-0x76e901],al
  41d1d2:	js     0x41d20d
  41d1d4:	push   DWORD PTR [ebx+eax*4+0x1a]
  41d1d8:	cmp    DWORD PTR [esp+ebp*1-0x18],0xffffff89
  41d1dd:	inc    DWORD PTR [eax]
  41d1df:	add    BYTE PTR [ebx-0x907800],0xca
  41d1e6:	add    dl,al
  41d1e8:	add    BYTE PTR [edx],dh
  41d1ea:	outs   dx,BYTE PTR ds:[esi]
  41d1eb:	jnp    0x41d1ed
  41d1ed:	inc    DWORD PTR [eax]
  41d1ef:	mov    ebx,0x5f64ff00
  41d1f4:	mov    DWORD PTR [eax-0x34],esp
  41d1f7:	pushf  
  41d1f8:	int3   
  41d1f9:	pusha  
  41d1fa:	and    bl,ch
  41d1fc:	inc    DWORD PTR [ebx-0x7cff6400]
  41d202:	out    0x3d,eax
  41d204:	push   DWORD PTR ds:0x9c83ba00
  41d20a:	mov    ds:0xffff838c,al
  41d20f:	scas   al,BYTE PTR es:[edi]
  41d210:	inc    DWORD PTR [eax]
  41d212:	not    DWORD PTR [edi+edi*8]
  41d215:	adc    bh,bh
  41d217:	sti    
  41d218:	or     DWORD PTR [eax+0xccbf3b],0xffffffff
  41d21f:	mov    ?,edi
  41d221:	call   FWORD PTR [ecx+0x93ff79]
  41d227:	and    al,0xff
  41d229:	jo     0x41d265
  41d22b:	cli    
  41d22c:	add    bh,bh
  41d22e:	add    BYTE PTR [ecx-0x1],ch
  41d231:	add    DWORD PTR [edi-0xf9ff39],0x3f
  41d238:	add    cl,dl
  41d23a:	mov    gs,WORD PTR [edi+0x0]
  41d23d:	dec    DWORD PTR [ecx+0x7100ffb6]
  41d243:	xor    eax,0xf83bbcc
  41d248:	add    BYTE PTR ds:0xff00cf0d,ah
  41d24e:	add    BYTE PTR [edx],ah
  41d250:	(bad)  
  41d251:	push   DWORD PTR ds:0x6ff09
  41d257:	or     edi,edi
  41d259:	ins    BYTE PTR es:[edi],dx
  41d25a:	xor    BYTE PTR [ecx-0x647d0000],ch
  41d260:	add    BYTE PTR [eax],al
  41d262:	dec    ebp
  41d263:	and    al,0xff
  41d265:	cmp    eax,0xf6896a89
  41d26a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d26b:	ja     0x41d26d
  41d26d:	inc    DWORD PTR [eax]
  41d26f:	fimul  WORD PTR [ecx-0x76d01b01]
  41d275:	loop   0x41d276
  41d277:	dec    edx
  41d278:	add    BYTE PTR [edi+0x5b],ah
  41d27b:	mov    edi,?
  41d27d:	int3   
  41d27e:	inc    DWORD PTR [ecx-0x1]
  41d281:	add    BYTE PTR [ebx+0x1d],bl
  41d284:	xor    DWORD PTR [edi],0xffffffff
  41d287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d288:	dec    DWORD PTR [ebx+0xffa5be]
  41d28e:	add    BYTE PTR [ecx+0x0],ah
  41d291:	(bad)  
  41d292:	out    dx,eax
  41d293:	add    BYTE PTR [eax],0x9
  41d296:	int3   
  41d297:	adc    bh,bh
  41d299:	push   0x8389a635
  41d29e:	mov    DWORD PTR [edi],esi
  41d2a0:	dec    DWORD PTR [ecx+0x2ffaff5]
  41d2a6:	(bad)  
  41d2a7:	mov    edx,0x9caf1a00
  41d2ac:	add    BYTE PTR [eax],al
  41d2ae:	mov    ebx,esi
  41d2b0:	inc    DWORD PTR [ebx-0x790013e3]
  41d2b6:	call   FWORD PTR [eax-0x1]
  41d2b9:	jnp    0x41d30f
  41d2bb:	pop    esi
  41d2bc:	(bad)  
  41d2bd:	(bad)  
  41d2be:	push   DWORD PTR [ecx+0x7b1689ff]
  41d2c4:	sbb    DWORD PTR [ebx+eax*4],0x38
  41d2c8:	(bad)  
  41d2c9:	jp     0x41d280
  41d2cb:	jmp    0x41d299
  41d2cd:	inc    DWORD PTR [eax]
  41d2cf:	mov    cl,BYTE PTR [ecx-0x69b601]
  41d2d5:	jae    0x41d2d7
  41d2d7:	(bad)  
  41d2d8:	(bad)  
  41d2d9:	cmp    bl,ah
  41d2db:	xchg   ebx,eax
  41d2dc:	add    BYTE PTR [ecx-0x7c5101],cl
  41d2e2:	test   BYTE PTR [esi-0x44ff777d],cl
  41d2e8:	add    BYTE PTR [edi-0x5a],ch
  41d2eb:	sti    
  41d2ec:	add    DWORD PTR [eax],0x0
  41d2ef:	add    BYTE PTR [eax],0xff
  41d2f2:	cmp    DWORD PTR [bx+si],eax
  41d2f5:	int3   
  41d2f6:	call   FWORD PTR [ebx+eax*4-0xdb6568]
  41d2fd:	inc    DWORD PTR [ebx+0x61008363]
  41d303:	aad    0x0
  41d305:	cwde   
  41d306:	call   DWORD PTR [eax]
  41d308:	jmp    DWORD PTR [ebx-0xb953]
  41d30e:	call   DWORD PTR [edi]
  41d310:	(bad)  
  41d311:	inc    DWORD PTR [edi]
  41d313:	call   0xf041d417
  41d318:	add    BYTE PTR [ebx+0x6e],cl
  41d31b:	iret   
  41d31c:	add    bh,bh
  41d31e:	call   DWORD PTR [edi+edi*8-0x7d]
  41d322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d323:	pop    ebp
  41d324:	call   FWORD PTR [edi]
  41d326:	add    BYTE PTR [eax+0x64ff7300],bl
  41d32c:	(bad)  
  41d32d:	(bad)  
  41d32e:	call   FWORD PTR [eax+0x47d9ffff]
  41d334:	add    BYTE PTR [ebx],dh
  41d336:	add    bh,cl
  41d338:	dec    DWORD PTR [ecx]
  41d33a:	mov    eax,ds:0xff8300a3
  41d33f:	pop    ds
  41d340:	add    DWORD PTR [eax],0x72
  41d343:	mov    eax,0x68cc2500
  41d348:	call   DWORD PTR [eax-0xffa375]
  41d34e:	add    BYTE PTR [eax-0x1],dh
  41d351:	mov    DWORD PTR [edx+edi*1-0x29ff0e34],esp
  41d358:	and    DWORD PTR [edx+0x72],0x15
  41d35c:	inc    DWORD PTR [eax]
  41d35e:	(bad)  
  41d35f:	inc    DWORD PTR ds:[ebx+0xb0028b5]
  41d366:	push   esi
  41d368:	call   FWORD PTR [edi]
  41d36a:	ds ins BYTE PTR es:[edi],dx
  41d36c:	inc    DWORD PTR [eax]
  41d36e:	mov    esi,esp
  41d370:	(bad)  
  41d371:	dec    DWORD PTR [ebx+eax*8]
  41d374:	or     DWORD PTR [ecx-0x40ffff7d],0xffffff85
  41d37b:	popa   
  41d37c:	inc    DWORD PTR [ebx-0x4377]
  41d382:	ret    
  41d383:	ret    
  41d384:	cmp    edx,0xffffff89
  41d387:	mov    ch,0xff
  41d389:	loopne 0x41d355
  41d38b:	ja     0x41d359
  41d38d:	inc    DWORD PTR [eax]
  41d38f:	xchg   ebp,eax
  41d390:	add    bh,bh
  41d392:	jns    0x41d3b3
  41d394:	jmp    esp
  41d396:	dec    DWORD PTR [edx-0x6e5eae7d]
  41d39c:	add    ah,cl
  41d39e:	push   DWORD PTR [eax+eax*1]
  41d3a1:	sbb    DWORD PTR [ebp+0x12],0xffffffcc
  41d3a5:	jle    0x41d3a7
  41d3a7:	add    BYTE PTR [ecx-0x33f06f75],cl
  41d3ad:	add    BYTE PTR [ecx-0x500000b9],cl
  41d3b3:	sbb    edi,edi
  41d3b5:	add    BYTE PTR ss:[ebx+0x7bf7a889],ah
  41d3bc:	add    bh,bh
  41d3be:	jmp    FWORD PTR [esi-0x1]
  41d3c1:	cmp    DWORD PTR [edi+0x3fff7d],0xffffffba
  41d3c8:	push   DWORD PTR [ebx+0x832367]
  41d3ce:	(bad)  
  41d3cf:	call   0x2b8cd2d4
  41d3d4:	jmp    FWORD PTR [eax]
  41d3d6:	push   DWORD PTR [edi+0x0]
  41d3d9:	das    
  41d3da:	lods   al,BYTE PTR ds:[esi]
  41d3db:	push   ss
  41d3dc:	add    bh,bh
  41d3de:	add    BYTE PTR [ebx],ch
  41d3e0:	add    DWORD PTR [ebx+0x33ff5744],0xffffffff
  41d3e7:	mov    dl,0xff
  41d3e9:	(bad)  
  41d3eb:	push   esp
  41d3ec:	add    DWORD PTR [ebx-0x3333de01],0x11
  41d3f3:	popf   
  41d3f4:	inc    DWORD PTR [esi]
  41d3f6:	jmp    ebp
  41d3f8:	add    BYTE PTR [ebx+esi*8-0x36],ah
  41d3fc:	int3   
  41d3fd:	(bad)  
  41d3fe:	(bad)  
  41d3ff:	aas    
  41d400:	add    bh,bh
  41d402:	push   edx
  41d403:	add    BYTE PTR gs:[ecx-0x2e004701],cl
  41d40a:	fstp   st(3)
  41d40c:	add    BYTE PTR [ebx+0xff70ff],al
  41d412:	pop    es
  41d413:	in     eax,dx
  41d414:	add    BYTE PTR [eax+0x0],cl
  41d417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d418:	sbb    esp,0xffffffae
  41d41b:	mov    DWORD PTR [eax],eax
  41d41d:	dec    esp
  41d41f:	les    eax,FWORD PTR [eax]
  41d421:	(bad)  
  41d422:	fcomp  DWORD PTR [edi]
  41d424:	push   DWORD PTR [esi]
  41d426:	cmp    DWORD PTR [esi+0x389569ff],0xffffffcc
  41d42d:	add    ah,cl
  41d42f:	icebp  
  41d430:	add    BYTE PTR [eax],al
  41d432:	jmp    0xff525742
  41d437:	imul   eax,DWORD PTR [ebx+0x92d550],0xffcbffff
  41d441:	add    ch,ah
  41d443:	mov    ds:0x78ff1bff,al
  41d448:	cmp    DWORD PTR [eax+0x28],0x1d
  41d44c:	(bad)  
  41d44d:	inc    DWORD PTR [eax]
  41d44f:	mov    es,WORD PTR [ebx-0x760e8901]
  41d455:	jbe    0x41d456
  41d457:	mov    esp,0x79cd84ff
  41d45c:	inc    DWORD PTR [ebx+0x836eff]
  41d462:	(bad)  
  41d464:	push   edi
  41d466:	mov    DWORD PTR [ebx],esi
  41d468:	inc    DWORD PTR [ecx+edx*8]
  41d46b:	push   edx
  41d46c:	mov    DWORD PTR [eax],eax
  41d46e:	mov    DWORD PTR [eax-0x34],ebx
  41d471:	add    cl,al
  41d473:	or     bh,bh
  41d475:	mov    DWORD PTR [ecx-0x7f3e7c9e],ecx
  41d47b:	sti    
  41d47c:	inc    DWORD PTR [eax]
  41d47e:	mov    DWORD PTR [eax+eax*1-0x766a9101],ecx
  41d485:	lds    eax,FWORD PTR [eax]
  41d487:	test   eax,0xd9f4a9ff
  41d48c:	or     DWORD PTR [ecx-0x33ff8101],0xffffff87
  41d493:	pop    ds
  41d494:	call   ebp
  41d496:	jmp    DWORD PTR [ebx-0x77]
  41d499:	mov    bl,0x56
  41d49b:	fdiv   st(7),st
  41d49d:	cmp    edi,0xffffffdb
  41d4a0:	(bad)  
  41d4a1:	call   FWORD PTR [edx+0x55]
  41d4a4:	add    BYTE PTR [eax+0x0],dl
  41d4a7:	popf   
  41d4a8:	add    BYTE PTR [ebx-0x44],ch
  41d4ab:	jp     0x41d4ac
  41d4ad:	add    ah,cl
  41d4af:	jmp    0xf600:0x51dd0000
  41d4b6:	add    BYTE PTR [edx+0x22ad1dff],bh
  41d4bc:	dec    DWORD PTR [ecx-0x6500]
  41d4c2:	add    edi,eax
  41d4c4:	mov    edx,edx
  41d4c6:	call   FWORD PTR [eax+eax*1]
  41d4c9:	fisub  DWORD PTR [edx-0x7c00f1]
  41d4cf:	add    BYTE PTR [eax],0x0
  41d4d2:	shl    DWORD PTR [eax-0x1],cl
  41d4d5:	fdiv   st(7),st
  41d4d7:	mov    esi,0xd86f1fff
  41d4dc:	add    BYTE PTR [eax],al
  41d4de:	(bad)  
  41d4df:	cli    
  41d4e0:	(bad)  
  41d4e1:	jmp    DWORD PTR ds:0xff7acc00
  41d4e7:	out    dx,eax
  41d4e8:	add    BYTE PTR [edx],dh
  41d4ea:	mov    eax,DWORD PTR fs:[ebx+0x2e00ff]
  41d4f1:	sub    DWORD PTR [edx],0x33
  41d4f4:	jmp    ebp
  41d4f6:	jmp    DWORD PTR [ebx]
  41d4f8:	add    BYTE PTR [ecx+0x9b98],ch
  41d4fe:	jmp    esi
  41d500:	add    bh,bh
  41d502:	or     eax,ebx
  41d504:	add    BYTE PTR [ebp-0x34],ah
  41d507:	jnp    0x41d4d5
  41d509:	xchg   ebp,eax
  41d50a:	sbb    esi,eax
  41d50c:	int3   
  41d50d:	(bad)  
  41d50e:	call   DWORD PTR [ecx+0x29c30089]
  41d514:	add    BYTE PTR [eax],dl
  41d516:	int3   
  41d517:	xlat   BYTE PTR ds:[ebx]
  41d518:	jmp    DWORD PTR [eax+edi*1-0x6e]
  41d51c:	add    ah,cl
  41d51e:	call   DWORD PTR [edx+0x7605ff89]
  41d524:	add    BYTE PTR [edx-0x5700e534],bh
  41d52a:	out    dx,al
  41d52b:	retf   0xff
  41d52e:	add    BYTE PTR [esi],bh
  41d530:	(bad)  
  41d531:	call   FWORD PTR [ebx-0xe80040]
  41d537:	mov    ah,0x89
  41d539:	(bad)  
  41d53a:	(bad)  
  41d53b:	(bad)  
  41d53c:	dec    esp
  41d53e:	add    BYTE PTR [eax],al
  41d540:	xor    DWORD PTR [ebx],0x20
  41d543:	(bad)  
  41d544:	jmp    DWORD PTR [edx]
  41d546:	inc    DWORD PTR [eax]
  41d548:	add    BYTE PTR [esi],dh
  41d54a:	inc    DWORD PTR [eax]
  41d54c:	out    dx,al
  41d54d:	rcr    DWORD PTR [esi],1
  41d54f:	mov    edx,0xff4a6400
  41d554:	jmp    DWORD PTR [esi-0x1]
  41d557:	int3   
  41d558:	jmp    DWORD PTR [edx]
  41d55a:	add    BYTE PTR [eax],al
  41d55c:	fucomi st,st(6)
  41d55e:	mov    eax,0xf1da8378
  41d563:	cmp    edi,0x56
  41d566:	mov    DWORD PTR [eax],eax
  41d568:	jmp    DWORD PTR [esi]
  41d56a:	(bad)  
  41d56b:	push   DWORD PTR [eax]
  41d56d:	xchg   dh,ch
  41d56f:	fwait
  41d570:	add    BYTE PTR [ecx+ebp*2+0xc3ff00],ch
  41d577:	inc    DWORD PTR [eax]
  41d579:	adc    bh,bh
  41d57b:	(bad)  
  41d57c:	cmp    dl,BYTE PTR [eax]
  41d57e:	in     eax,0x3b
  41d580:	add    bh,dh
  41d582:	sbb    edi,edi
  41d584:	add    BYTE PTR [esi-0x1],dl
  41d587:	inc    DWORD PTR [ebx+0x3500896d]
  41d58d:	dec    ecx
  41d58e:	mov    ds:0x99d4008e,al
  41d593:	add    BYTE PTR [eax],al
  41d595:	jmp    0xffff:0x9ff89ff
  41d59c:	repnz mov ah,BYTE PTR [edi]
  41d59f:	sti    
  41d5a0:	add    DWORD PTR [eax-0x5e7c7c12],0xffffffff
  41d5a7:	add    BYTE PTR [eax],al
  41d5a9:	imul   edi,edi,0xd515e600
  41d5af:	xlat   BYTE PTR ds:[ebx]
  41d5b0:	call   DWORD PTR [edi+eax*8-0x1]
  41d5b4:	and    DWORD PTR [edi+edi*8],0xffffff83
  41d5b8:	int3   
  41d5b9:	lods   al,BYTE PTR ds:[esi]
  41d5ba:	inc    DWORD PTR [eax]
  41d5bc:	(bad)  [eax+0x1e89ea32]
  41d5c2:	pop    ds
  41d5c3:	inc    DWORD PTR [eax]
  41d5c5:	cmc    
  41d5c6:	inc    DWORD PTR [ebx-0x7c000601]
  41d5cc:	out    dx,eax
  41d5cd:	bound  eax,QWORD PTR [ecx+ebx*8-0xcdb800]
  41d5d4:	int3   
  41d5d5:	out    dx,eax
  41d5d6:	(bad)  
  41d5d7:	inc    DWORD PTR [eax]
  41d5d9:	popf   
  41d5da:	dec    esp
  41d5dc:	ret    
  41d5dd:	and    BYTE PTR [ebx+0x4],cl
  41d5e0:	add    BYTE PTR [ecx-0x5b],ah
  41d5e3:	add    DWORD PTR [ebx-0xff7cbe],0xffffff9c
  41d5ea:	inc    DWORD PTR [eax]
  41d5ec:	pop    edi
  41d5ed:	in     al,0xe6
  41d5ef:	enter  0x9983,0xa1
  41d5f3:	inc    DWORD PTR [eax]
  41d5f5:	sar    bh,1
  41d5f7:	add    bh,bh
  41d5f9:	nop
  41d5fa:	(bad)  
  41d5fb:	(bad)  
  41d5fc:	jp     0x41d65b
  41d5fe:	xor    eax,0x7478ff55
  41d603:	add    BYTE PTR [eax],al
  41d605:	mov    bh,0x83
  41d607:	(bad)  
  41d608:	push   DWORD PTR [ebp-0x7d]
  41d60b:	add    dl,bh
  41d60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d60e:	stos   BYTE PTR es:[edi],al
  41d60f:	xor    al,0x0
  41d611:	popf   
  41d612:	xor    al,0xcc
  41d614:	dec    eax
  41d616:	add    bh,bh
  41d618:	add    BYTE PTR [eax-0x7d],ah
  41d61b:	push   DWORD PTR ds:0x83bd58e1
  41d621:	dec    ecx
  41d622:	mov    esi,0xffb1cc83
  41d627:	add    DWORD PTR [eax],0xffffff87
  41d62a:	add    BYTE PTR [ebx-0x5f81bca9],al
  41d630:	sbb    DWORD PTR [edi],0x3c
  41d633:	add    BYTE PTR [ebx+0xffffe4],al
  41d639:	push   es
  41d63a:	inc    DWORD PTR [eax]
  41d63c:	sub    ecx,esi
  41d63e:	les    edi,FWORD PTR [esi+0x6655cc]
  41d644:	add    BYTE PTR [ecx-0x34],ah
  41d647:	inc    DWORD PTR [eax]
  41d649:	jo     0x41d64b
  41d64b:	adc    DWORD PTR [ebx],0x55
  41d64e:	mov    cl,0xc0
  41d650:	add    BYTE PTR [edi+ecx*2],bl
  41d653:	inc    DWORD PTR [eax]
  41d655:	or     edi,edi
  41d657:	int3   
  41d658:	add    BYTE PTR [ebx-0x1],cl
  41d65b:	push   DWORD PTR [esi+0x6d]
  41d65e:	sbb    edi,DWORD PTR [edx-0x1]
  41d661:	xor    al,0xc3
  41d663:	add    DWORD PTR [ebx+0xff52],0xffffffcf
  41d66a:	add    DWORD PTR [eax],0xffffff82
  41d66d:	stc    
  41d66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d670:	jmp    eax
  41d672:	data16 add BYTE PTR [eax],al
  41d675:	inc    edx
  41d676:	(bad)  
  41d677:	(bad)  
  41d678:	call   FWORD PTR [edi-0x70f30001]
  41d67e:	loope  0x41d647
  41d680:	(bad)  
  41d681:	inc    DWORD PTR [eax+eax*1+0xff0eff]
  41d688:	inc    ebx
  41d68a:	add    ah,cl
  41d68c:	scas   eax,DWORD PTR es:[edi]
  41d68d:	inc    ebp
  41d68e:	sub    DWORD PTR [edx],edx
  41d690:	jmp    FWORD PTR [esi]
  41d692:	and    cl,ah
  41d694:	adc    DWORD PTR [edi+edi*8-0x33e37c77],0xffffff89
  41d69c:	jno    0x41d69c
  41d69e:	jbe    0x41d6ed
  41d6a0:	(bad)  
  41d6a1:	fcomp  QWORD PTR [edx+0xd1ffff]
  41d6a7:	inc    DWORD PTR [eax]
  41d6a9:	inc    DWORD PTR fs:[eax]
  41d6ac:	nop
  41d6ad:	mov    edx,0xe3ff29d7
  41d6b2:	jno    0x41d6b3
  41d6b4:	add    BYTE PTR [edi+edi*8-0x7cbeff01],dl
  41d6bb:	(bad)  
  41d6bc:	jg     0x41d6af
  41d6be:	and    bl,0x83
  41d6c1:	inc    esp
  41d6c2:	fxch   st(4)
  41d6c4:	push   DWORD PTR [ecx+0x0]
  41d6c7:	dec    DWORD PTR [ecx-0x20ff003c]
  41d6cd:	out    0x11,eax
  41d6cf:	mov    al,0x0
  41d6d1:	aad    0x65
  41d6d3:	add    BYTE PTR [eax],al
  41d6d5:	fcos   
  41d6d7:	(bad)  
  41d6d8:	(bad)  
  41d6d9:	inc    BYTE PTR [ebx-0x4ef9fa01]
  41d6df:	ret    
  41d6e0:	add    bh,bh
  41d6e2:	inc    edi
  41d6e3:	or     esp,0x5
  41d6e6:	(bad)  
  41d6e7:	(bad)  
  41d6e8:	jmp    DWORD PTR [ebp-0x2f147601]
  41d6ee:	inc    bl
  41d6f0:	jmp    FWORD PTR [esi+ebx*2-0x25ff01]
  41d6f7:	(bad)  
  41d6f8:	inc    DWORD PTR [edi-0x1]
  41d6fb:	call   DWORD PTR [ecx+edx*1+0x52cc3d92]
  41d702:	mov    al,0x0
  41d704:	inc    ebx
  41d706:	(bad)  
  41d707:	inc    DWORD PTR [ebx-0x4700ffc1]
  41d70d:	cmc    
  41d70e:	fld    st(2)
  41d710:	int3   
  41d711:	sub    eax,0x68383ee
  41d716:	int3   
  41d717:	mov    DWORD PTR [eax],eax
  41d719:	dec    ebx
  41d71a:	(bad)  
  41d71b:	jmp    DWORD PTR [ebp+0x5]
  41d71e:	mov    cl,0xb4
  41d720:	inc    esp
  41d722:	push   0xddff00
  41d727:	mov    edi,edi
  41d729:	es int3 
  41d72b:	and    DWORD PTR [esi+0x3],0x22
  41d72f:	js     0x41d731
  41d731:	aam    0x1e
  41d733:	add    bh,bh
  41d735:	fcos   
  41d737:	inc    DWORD PTR [eax]
  41d739:	xchg   esp,eax
  41d73a:	dec    esp
  41d73c:	or     bh,BYTE PTR [ebx]
  41d73e:	push   eax
  41d73f:	jb     0x41d741
  41d741:	xchg   esi,eax
  41d742:	aad    0x89
  41d744:	add    bh,ah
  41d746:	inc    DWORD PTR [eax]
  41d748:	or     DWORD PTR [edx-0x7d],0xffffffff
  41d74c:	test   eax,0xffef79c5
  41d751:	push   es
  41d752:	mov    edi,edi
  41d754:	or     DWORD PTR [ebx-0x37ff0001],0xffffffff
  41d75b:	(bad)  
  41d75c:	out    dx,eax
  41d75d:	mov    WORD PTR [edx+0x25b0028],ss
  41d763:	add    BYTE PTR [eax],al
  41d765:	pop    ss
  41d766:	add    bh,bh
  41d768:	add    BYTE PTR [edx],al
  41d76a:	inc    DWORD PTR [eax]
  41d76c:	ror    DWORD PTR [edi],0xa0
  41d76f:	push   es
  41d770:	add    BYTE PTR [eax+0x7d],al
  41d773:	add    bh,bh
  41d775:	lods   al,BYTE PTR ds:[esi]
  41d776:	dec    esp
  41d778:	sbb    DWORD PTR [esi],0xffffffff
  41d77b:	(bad)  
  41d77c:	stc    
  41d77d:	xor    BYTE PTR [ebp+0x2f5eff8c],cl
  41d783:	or     DWORD PTR [ecx+0xffffff],0x68
  41d78a:	add    BYTE PTR [eax],al
  41d78c:	fsubr  DWORD PTR [ebx+0x2ff223e]
  41d792:	(bad)  
  41d794:	push   DWORD PTR [eax-0x477d0000]
  41d79a:	inc    DWORD PTR [eax]
  41d79c:	jp     0x41d723
  41d79e:	add    ch,cl
  41d7a0:	add    bh,ch
  41d7a2:	xchg   ecx,eax
  41d7a3:	add    bh,bh
  41d7a5:	in     eax,0x83
  41d7a7:	inc    DWORD PTR [eax]
  41d7a9:	in     al,0x0
  41d7ab:	jmp    DWORD PTR [edx-0xcfa578]
  41d7b1:	sub    ah,0xff
  41d7b4:	add    BYTE PTR [ebx-0x1],bh
  41d7b7:	(bad)  
  41d7b8:	(bad)  
  41d7b9:	cli    
  41d7ba:	mov    DWORD PTR [ecx+0xf150818],ecx
  41d7c0:	add    bh,ch
  41d7c2:	in     al,0x89
  41d7c4:	push   DWORD PTR [edx]
  41d7c6:	inc    DWORD PTR [eax]
  41d7c8:	push   DWORD PTR [eax]
  41d7ca:	inc    DWORD PTR [eax]
  41d7cc:	add    ebx,ebp
  41d7ce:	imul   eax,ebx,0xfff94100
  41d7d4:	cmp    DWORD PTR [eax],0xffffffcc
  41d7d7:	(bad)  
  41d7d8:	inc    DWORD PTR [edi-0x7d]
  41d7db:	or     DWORD PTR [esi-0x69],0xffffffa4
  41d7df:	pop    edx
  41d7e0:	jmp    DWORD PTR [esi+0x35]
  41d7e3:	dec    DWORD PTR [ecx+0xfffff6]
  41d7e9:	pop    es
  41d7ea:	add    bh,bh
  41d7ec:	lds    esp,FWORD PTR [esi+0x7ff1dbf]
  41d7f2:	or     bh,bh
  41d7f4:	jmp    FWORD PTR [ebp-0x1]
  41d7f7:	add    BYTE PTR [eax],al
  41d7f9:	(bad)  
  41d7fb:	add    BYTE PTR [esi-0x3396eeaf],ah
  41d801:	gs dec ecx
  41d803:	add    BYTE PTR [eax],al
  41d805:	sbb    al,BYTE PTR [eax]
  41d807:	add    BYTE PTR [ecx-0x1733ff71],cl
  41d80d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41d80f:	sti    
  41d810:	jmp    edi
  41d812:	pop    edi
  41d813:	cmp    edi,0x75
  41d816:	cmp    edi,0x0
  41d819:	je     0x41d81a
  41d81b:	(bad)  
  41d81c:	mov    ecx,0xff42d208
  41d821:	mov    esi,0x7effff60
  41d826:	add    DWORD PTR [ebx+0xff5c83],0xffffffdf
  41d82d:	test   eax,0xb2ffd587
  41d832:	push   ss
  41d833:	add    BYTE PTR [ebx-0x337c333f],al
  41d839:	sti    
  41d83a:	inc    DWORD PTR [eax]
  41d83c:	es stos BYTE PTR es:[edi],al
  41d83e:	cdq    
  41d83f:	or     esp,0x7a
  41d842:	xchg   bh,bh
  41d844:	jmp    DWORD PTR [ebx]
  41d846:	add    BYTE PTR [eax],al
  41d848:	add    BYTE PTR [edx-0x1],bl
  41d84b:	jmp    FWORD PTR [esi-0x62]
  41d84e:	pop    ebx
  41d84f:	inc    eax
  41d850:	inc    DWORD PTR [esp+eax*2]
  41d853:	add    bh,bh
  41d855:	mov    ds:0x3bff8300,eax
  41d85a:	(bad)  
  41d85b:	jmp    FWORD PTR [eax-0x34]
  41d85e:	xchg   ebp,eax
  41d85f:	sti    
  41d860:	call   DWORD PTR [ecx]
  41d862:	xchg   esp,ecx
  41d864:	inc    DWORD PTR [edi]
  41d866:	(bad)  
  41d867:	inc    DWORD PTR [ebx+0x19ff00b6]
  41d86d:	mov    al,ss:0x7395ff66
  41d873:	add    DWORD PTR [ebx+0xccff1f],0xffffffd2
  41d87a:	(bad)  
  41d87b:	(bad)  
  41d87c:	clc    
  41d87d:	jbe    0x41d82b
  41d87f:	pop    es
  41d880:	(bad)  
  41d881:	fcomi  st,st(1)
  41d883:	add    bh,bh
  41d885:	mov    ecx,DWORD PTR [ecx-0x76430001]
  41d88b:	jmp    DWORD PTR [edx-0x5f]
  41d88e:	mov    eax,ds:0x53fb83c1
  41d893:	add    ah,cl
  41d895:	sbb    bh,bh
  41d897:	add    BYTE PTR [ebx-0x73007cde],al
  41d89d:	cmp    ecx,DWORD PTR [eax-0x2a]
  41d8a0:	add    BYTE PTR [eax-0x5cff0057],dl
  41d8a6:	add    bh,bh
  41d8a8:	add    BYTE PTR [edi],ah
  41d8aa:	inc    DWORD PTR [ebx-0x22aaca64]
  41d8b0:	int3   
  41d8b1:	push   esp
  41d8b2:	cld    
  41d8b3:	add    BYTE PTR [ebx-0xff00fb],al
  41d8b9:	and    bh,bh
  41d8bb:	push   DWORD PTR [edi-0x678cbb]
  41d8c1:	mov    ds:0xb00089d8,al
  41d8c6:	add    BYTE PTR [eax],al
  41d8c8:	add    BYTE PTR [eax-0x1],cl
  41d8cb:	add    BYTE PTR [esi-0x3362bca4],cl
  41d8d1:	(bad)  
  41d8d3:	cmp    edi,0xffffffa0
  41d8d6:	cmp    edi,0x0
  41d8d9:	fmul   st(4),st
  41d8db:	push   eax
  41d8dd:	fwait
  41d8de:	sbb    edi,DWORD PTR [edx-0x7d]
  41d8e1:	in     eax,dx
  41d8e2:	sahf   
  41d8e3:	add    bh,bh
  41d8e5:	cmp    eax,DWORD PTR [eax]
  41d8e7:	(bad)  
  41d8e8:	(bad)  
  41d8e9:	stc    
  41d8ea:	inc    DWORD PTR [eax]
  41d8ec:	mov    cl,0x2f
  41d8ee:	jo     0x41d8d0
  41d8f0:	mov    ebx,edi
  41d8f2:	fdivp  st(7),st
  41d8f4:	add    BYTE PTR [eax+0x0],cl
  41d8f7:	dec    esp
  41d8f9:	jge    0x41d8fa
  41d8fb:	jmp    DWORD PTR [esi+ebp*4+0x1183ec6b]
  41d902:	cmp    bh,bh
  41d904:	inc    DWORD PTR [ebx-0x34]
  41d907:	inc    DWORD PTR [eax]
  41d909:	mov    eax,ds:0xc156ccff
  41d90e:	out    0x17,eax
  41d910:	(bad)  
  41d911:	fisttp DWORD PTR [esi]
  41d913:	add    BYTE PTR [eax],al
  41d915:	or     eax,0xbaffcc83
  41d91a:	cmp    edi,0xffffff83
  41d91d:	sub    al,bl
  41d91f:	inc    ebx
  41d920:	call   DWORD PTR [ebx]
  41d922:	scas   eax,DWORD PTR es:[edi]
  41d923:	mov    edi,edi
  41d925:	in     al,dx
  41d926:	int3   
  41d927:	inc    DWORD PTR [eax]
  41d929:	mov    cl,0xff
  41d92b:	mov    DWORD PTR [edx],esp
  41d92d:	call   0x82:0xe400357d
  41d934:	call   eax
  41d936:	int3   
  41d937:	(bad)  
  41d938:	dec    esi
  41d93a:	add    BYTE PTR [eax],al
  41d93c:	xor    BYTE PTR [eax+0x46ff8fed],al
  41d942:	push   ds
  41d943:	add    bh,bh
  41d945:	push   edx
  41d946:	(bad)  
  41d947:	dec    DWORD PTR [ecx-0x3d00ff85]
  41d94d:	lds    edi,FWORD PTR [edx-0x59]
  41d950:	inc    eax
  41d952:	or     DWORD PTR [bx+di-0xae],0xffffffcc
  41d958:	add    BYTE PTR [edi+0x191bffff],bh
  41d95e:	dec    ecx
  41d95f:	jo     0x41d961
  41d961:	xchg   esi,eax
  41d962:	pop    ebp
  41d963:	int3   
  41d964:	call   DWORD PTR [ebp+0x6700ff83]
  41d96a:	inc    DWORD PTR [eax]
  41d96c:	pop    ebp
  41d96d:	mov    dh,0x6a
  41d96f:	daa    
  41d970:	add    BYTE PTR [esi+ebx*8],ah
  41d973:	(bad)  
  41d974:	jmp    FWORD PTR [ebp+0x0]
  41d977:	add    BYTE PTR [eax],al
  41d979:	les    eax,FWORD PTR [ebx-0x47a67001]
  41d97f:	inc    edx
  41d980:	call   DWORD PTR [esi]
  41d982:	cwde   
  41d983:	(bad)  
  41d984:	(bad)  
  41d985:	out    dx,eax
  41d986:	(bad)  
  41d987:	dec    DWORD PTR [ecx-0x37ff008b]
  41d98d:	mov    dh,0x60
  41d98f:	imul   eax,DWORD PTR [eax],0x38
  41d992:	cmp    al,0xff
  41d994:	add    BYTE PTR [edx+0x3600ff83],cl
  41d99a:	mov    edi,edi
  41d99c:	retf   
  41d99d:	adc    esi,DWORD PTR [esi]
  41d99f:	lods   al,BYTE PTR ds:[esi]
  41d9a0:	call   FWORD PTR [edx-0x5b00333c]
  41d9a6:	add    DWORD PTR [eax],0x0
  41d9a9:	outs   dx,DWORD PTR ds:[esi]
  41d9aa:	(bad)  
  41d9ab:	push   DWORD PTR [eax-0x25ee23]
  41d9b1:	add    BYTE PTR [esi-0x2b007d],bl
  41d9b7:	add    BYTE PTR [eax],al
  41d9b9:	jmp    0x41d9ba
  41d9bb:	call   FWORD PTR [eax-0x7c21bca7]
  41d9c1:	push   ebp
  41d9c2:	and    eax,0xabffff
  41d9c7:	add    BYTE PTR [ecx-0x12ff7cf0],cl
  41d9cd:	inc    ecx
  41d9ce:	cmp    dl,BYTE PTR [esi]
  41d9d0:	(bad)  
  41d9d1:	fstp   DWORD PTR [ecx+0xfcff83]
  41d9d7:	add    BYTE PTR [ecx+0x4400cc91],cl
  41d9dd:	popa   
  41d9de:	mov    ecx,0x9b9affb6
  41d9e3:	(bad)  
  41d9e4:	call   FWORD PTR [eax+0x36ffff83]
  41d9ea:	dec    esp
  41d9ec:	outs   dx,BYTE PTR ds:[esi]
  41d9ed:	bound  ebp,QWORD PTR [ebx-0xa]
  41d9f0:	mov    edi,ebx
  41d9f2:	cdq    
  41d9f3:	add    bh,bh
  41d9f5:	aam    0x0
  41d9f7:	add    ah,cl
  41d9f9:	adc    edi,edi
  41d9fb:	add    bl,bh
  41d9fd:	les    edx,FWORD PTR ds:0x6f64ff72
  41da03:	(bad)  
  41da04:	push   DWORD PTR [ecx-0x1]
  41da07:	int3   
  41da08:	or     esi,0xffffffff
  41da0b:	add    BYTE PTR [edx],al
  41da0d:	pop    esi
  41da0e:	test   eax,0x8544ffab
  41da13:	int3   
  41da14:	sub    DWORD PTR [edi+edi*8+0x0],0xffffffff
  41da19:	out    dx,eax
  41da1a:	(bad)  
  41da1b:	call   FWORD PTR [edi]
  41da1d:	pop    edi
  41da1e:	sbb    eax,DWORD PTR [ebp+0x0]
  41da21:	push   ebp
  41da22:	loop   0x41da23
  41da24:	call   DWORD PTR ds:0x91838900
  41da2a:	(bad)  
  41da2b:	(bad)  
  41da2c:	sti    
  41da2d:	imul   ebp,ecx,0x2b6dffdf
  41da33:	dec    DWORD PTR [ecx-0xffff17]
  41da39:	xchg   ecx,eax
  41da3a:	(bad)  
  41da3b:	call   DWORD PTR [eax-0x7e]
  41da3e:	mov    eax,0xf1c8ffcd
  41da43:	add    bh,bh
  41da45:	inc    esi
  41da46:	inc    DWORD PTR [eax]
  41da48:	add    BYTE PTR [esi-0x34],bl
  41da4b:	inc    DWORD PTR [ecx]
  41da4d:	aas    
  41da4e:	aaa    
  41da4f:	xchg   esp,eax
  41da50:	int3   
  41da51:	cmp    al,0x8b
  41da53:	add    BYTE PTR [eax],al
  41da55:	fld    DWORD PTR [eax]
  41da57:	inc    DWORD PTR [eax]
  41da59:	call   0xe309dae1
  41da5e:	into   
  41da5f:	add    BYTE PTR [bx],dl
  41da62:	repz inc DWORD PTR [eax]
  41da65:	and    eax,DWORD PTR [eax]
  41da67:	add    bh,bh
  41da69:	repz add bh,bh
  41da6c:	add    al,cl
  41da6e:	stos   BYTE PTR es:[edi],al
  41da6f:	sub    esp,ecx
  41da71:	jnp    0x41d9fd
  41da73:	(bad)  
  41da74:	dec    DWORD PTR [ecx]
  41da76:	dec    DWORD PTR [ecx-0x33ff1e7d]
  41da7c:	call   0xf1f3:0x8336a37f
  41da83:	(bad)  
  41da84:	push   DWORD PTR [ebp-0x1]
  41da87:	add    bh,bh
  41da89:	icebp  
  41da8a:	int3   
  41da8b:	mov    DWORD PTR ds:0x83f9c732,edx
  41da91:	add    al,0x98
  41da93:	(bad)  
  41da94:	call   DWORD PTR [eax+eax*1-0x1]
  41da98:	jmp    DWORD PTR [edi]
  41da9a:	inc    DWORD PTR [eax]
  41da9c:	inc    esp
  41da9d:	(bad)  
  41da9e:	dec    ebp
  41da9f:	test   DWORD PTR [eax],0xff008b9d
  41daa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa6:	int3   
  41daa7:	add    bh,bh
  41daa9:	call   0xecb3daae
  41daae:	mov    al,ds:0x8be183fb
  41dab3:	add    DWORD PTR [eax],0xffffffc0
  41dab6:	inc    DWORD PTR [eax]
  41dab8:	add    al,dh
  41daba:	(bad)  
  41dabb:	inc    esp
  41dabd:	cmp    eax,0x77897bc1
  41dac2:	fwait
  41dac3:	int3   
  41dac4:	int3   
  41dac5:	cmp    al,BYTE PTR [eax]
  41dac7:	inc    DWORD PTR [eax]
  41dac9:	mov    ebx,0xf22b0083
  41dace:	sar    BYTE PTR [ecx-0x1],0x88
  41dad2:	rol    DWORD PTR [eax],cl
  41dad4:	dec    DWORD PTR [edx+0x2000ff83]
  41dada:	add    DWORD PTR [eax],0xffffffb3
  41dadd:	add    al,0x0
  41dadf:	pop    ebx
  41dae0:	add    BYTE PTR [ecx-0x680000dd],dh
  41dae6:	inc    DWORD PTR [eax]
  41dae8:	add    BYTE PTR ds:0x4937ffff,ch
  41daee:	inc    ecx
  41daef:	ja     0x41daf0
  41daf1:	hlt    
  41daf2:	popa   
  41daf3:	int3   
  41daf4:	(bad)  
  41daf5:	cld    
  41daf6:	add    bh,bh
  41daf8:	jmp    DWORD PTR [ebx+eax*4+0x478000]
  41daff:	jmp    0x41db01
  41db01:	call   0x9c4164d0
  41db06:	add    bh,bh
  41db08:	(bad)  
  41db09:	in     eax,dx
  41db0a:	dec    DWORD PTR [ecx-0x36128b71]
  41db10:	dec    edx
  41db12:	push   cs
  41db13:	or     DWORD PTR [ecx+0xff7a],0xffffffba
  41db1a:	mov    DWORD PTR [eax],eax
  41db1c:	repz or eax,0x3a89fb34
  41db22:	aad    0xff
  41db24:	push   ecx
  41db26:	add    bh,bh
  41db28:	add    cl,bh
  41db2a:	dec    DWORD PTR [ecx-0x37cdf821]
  41db30:	call   FWORD PTR [edx-0x60]
  41db33:	dec    DWORD PTR [ecx+0x8900a6]
  41db39:	pop    ebx
  41db3a:	inc    DWORD PTR [eax]
  41db3c:	add    al,0xf7
  41db3e:	push   0xffffff89
  41db40:	cmp    ebp,0xfffffff2
  41db43:	dec    DWORD PTR [ecx-0xff003e]
  41db49:	imul   edi,edi,0xffffffcc
  41db4c:	jle    0x41db0b
  41db4e:	push   0x2d59ff1c
  41db53:	int3   
  41db54:	dec    DWORD PTR [esi]
  41db56:	add    bh,bh
  41db58:	add    BYTE PTR [esi],bl
  41db5a:	mov    edi,edi
  41db5c:	stc    
  41db5d:	add    DWORD PTR [edi],ecx
  41db5f:	int3   
  41db60:	dec    DWORD PTR [ebx+0x3fccff28]
  41db66:	add    ah,cl
  41db68:	adc    edx,0xffffffff
  41db6b:	add    BYTE PTR [esi+0x45],bl
  41db6e:	dec    ebx
  41db6f:	scas   eax,DWORD PTR es:[edi]
  41db70:	inc    esp
  41db72:	push   edx
  41db73:	dec    DWORD PTR [ecx-0x7cff3400]
  41db79:	mov    edi,?
  41db7b:	mov    DWORD PTR [ebx+0x8c76d9],ebx
  41db81:	stos   BYTE PTR es:[edi],al
  41db82:	pop    esp
  41db83:	add    BYTE PTR [ebx-0x33760012],al
  41db89:	je     0x41db8a
  41db8b:	add    BYTE PTR [ebx-0x12],bl
  41db8e:	jnp    0x41db81
  41db90:	(bad)  
  41db91:	mov    esi,0xb600ffe5
  41db96:	add    BYTE PTR [ecx-0xb701],cl
  41db9c:	adc    al,BYTE PTR [edi]
  41db9e:	(bad)  
  41db9f:	(bad)  
  41dba0:	call   FWORD PTR [edi+ebx*8-0x1]
  41dba4:	add    dl,cl
  41dba6:	(bad)  
  41dba7:	(bad)  
  41dba8:	jmp    eax
  41dbaa:	inc    DWORD PTR [eax]
  41dbac:	pop    eax
  41dbad:	sbb    ebp,edi
  41dbaf:	pop    eax
  41dbb0:	adc    DWORD PTR [ebx+0x7c],0x0
  41dbb4:	mov    DWORD PTR [edx+0x0],esi
  41dbb7:	int3   
  41dbb8:	(bad)  
  41dbb9:	mov    edi,0xdf4ccff
  41dbbe:	dec    eax
  41dbbf:	lods   al,BYTE PTR ds:[esi]
  41dbc0:	call   DWORD PTR [ecx+0x54ff004e]
  41dbc6:	inc    DWORD PTR [eax]
  41dbc8:	add    ah,dl
  41dbca:	add    DWORD PTR [eax],0x76
  41dbcd:	jb     0x41db96
  41dbcf:	add    BYTE PTR es:0x658900dd,cl
  41dbd6:	cmp    edi,0x0
  41dbd9:	sbb    edi,edi
  41dbdb:	add    BYTE PTR [ebp+ebp*1-0x52ff79e9],bh
  41dbe2:	ins    BYTE PTR es:[edi],dx
  41dbe3:	add    bh,bh
  41dbe5:	jg     0x41dbe6
  41dbe7:	int3   
  41dbe8:	add    bl,dl
  41dbea:	add    BYTE PTR [ebx+0x4326ed13],al
  41dbf0:	jmp    FWORD PTR [esi]
  41dbf2:	add    BYTE PTR [eax],0xff
  41dbf5:	cwde   
  41dbf6:	(bad)  
  41dbf7:	(bad)  
  41dbf8:	inc    DWORD PTR [eax]
  41dbfa:	add    bh,bh
  41dbfc:	popf   
  41dbfd:	imul   ecx,DWORD PTR [ebx+0x32],0xff8637ff
  41dc04:	mov    DWORD PTR [eax+eax*1+0x0],ebp
  41dc08:	adc    esp,0xffffffff
  41dc0b:	add    BYTE PTR [esi-0x1],dl
  41dc0e:	not    BYTE PTR [edx-0x1]
  41dc11:	push   edi
  41dc12:	xor    eax,0xcccf8383
  41dc17:	inc    DWORD PTR [ebx+0x3bff0094]
  41dc1d:	je     0x41dc02
  41dc1f:	mov    bl,0x0
  41dc21:	into   
  41dc22:	mov    edi,0xff15ff83
  41dc27:	add    bh,bh
  41dc29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc2a:	add    bh,bh
  41dc2c:	push   ebx
  41dc2d:	adc    DWORD PTR [esi-0x51],ebx
  41dc30:	add    BYTE PTR [edx-0x31],bh
  41dc33:	(bad)  
  41dc34:	(bad)  
  41dc35:	fadd   QWORD PTR [eax]
  41dc37:	int3   
  41dc38:	jmp    DWORD PTR [edi+0x28ccffff]
  41dc3e:	inc    edi
  41dc3f:	ud0    esi,ebx
  41dc42:	mov    BYTE PTR [ebx+0x39ff],0xff
  41dc49:	stc    
  41dc4a:	inc    DWORD PTR [eax]
  41dc4c:	retf   0xf558
  41dc4f:	mov    al,ds:0x8330fdff
  41dc54:	inc    esp
  41dc56:	mov    DWORD PTR [eax],eax
  41dc58:	jmp    FWORD PTR [eax]
  41dc5a:	add    bh,bh
  41dc5c:	(bad)  
  41dc5d:	mov    ds:0xdff91cd,al
  41dc62:	js     0x41dc63
  41dc64:	call   FWORD PTR [eax-0x1]
  41dc67:	add    BYTE PTR [eax],al
  41dc69:	xor    edi,edi
  41dc6b:	add    BYTE PTR [eax-0x76dcebc5],dh
  41dc71:	cmp    bh,dh
  41dc73:	(bad)  
  41dc74:	call   DWORD PTR [esi]
  41dc76:	inc    DWORD PTR [eax]
  41dc78:	push   DWORD PTR [eax-0x77]
  41dc7b:	dec    DWORD PTR [ebp-0x9b5e94]
  41dc81:	jmp    0x70c4dd62
  41dc86:	mov    DWORD PTR [ecx-0x8101],ecx
  41dc8c:	aam    0xc8
  41dc8e:	xlat   BYTE PTR ds:[ebx]
  41dc8f:	pushf  
  41dc90:	add    BYTE PTR [edx+esi*2-0x1],dl
  41dc94:	push   DWORD PTR [edx-0xa00007d]
  41dc9a:	cmp    edi,0xffffffe9
  41dc9d:	mov    dh,0xd1
  41dc9f:	data16 add ah,ch
  41dca2:	mov    cl,0xff
  41dca4:	(bad)  
  41dca5:	jmp    0xff00:0x320000ff
  41dcac:	mov    bl,0xe6
  41dcae:	(bad)  
  41dcaf:	xchg   ebx,eax
  41dcb0:	add    BYTE PTR [ebx],dh
  41dcb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb3:	int3   
  41dcb4:	push   ebx
  41dcb6:	cmp    edi,0xffffffcc
  41dcb9:	je     0x41dc3e
  41dcbb:	(bad)  
  41dcbc:	cld    
  41dcbd:	(bad)  
  41dcbe:	scas   eax,DWORD PTR es:[edi]
  41dcbf:	sub    bh,bh
  41dcc1:	push   es
  41dcc2:	lock add BYTE PTR [ebx+0xff83f1],al
  41dcc9:	sbb    BYTE PTR [eax],al
  41dccb:	inc    DWORD PTR [ebx-0x66]
  41dcce:	in     eax,dx
  41dccf:	fwait
  41dcd0:	(bad)  
  41dcd1:	ficom  WORD PTR [edx]
  41dcd3:	add    bh,bh
  41dcd5:	(bad)  [ecx-0x3aff01]
  41dcdb:	int3   
  41dcdc:	sbb    al,0x9
  41dcde:	in     al,dx
  41dcdf:	mov    WORD PTR [eax],es
  41dce1:	mov    al,0x89
  41dce3:	inc    DWORD PTR [eax]
  41dce5:	popa   
  41dce6:	(bad)  
  41dce7:	dec    esp
  41dce9:	into   
  41dcea:	dec    esp
  41dcec:	or     cl,BYTE PTR [edi]
  41dcee:	pop    ds
  41dcef:	pop    ecx
  41dcf0:	adc    DWORD PTR [ebp+eax*4-0x7d],0xffffffff
  41dcf5:	inc    DWORD PTR [eax]
  41dcf7:	add    bh,bh
  41dcf9:	imul   edi,edi,0x0
  41dcfc:	and    DWORD PTR [esi+0x31],edi
  41dcff:	jb     0x41dd00
  41dd01:	add    BYTE PTR [edx-0x1],bh
  41dd04:	cmp    ebx,0x0
  41dd07:	add    bh,bh
  41dd09:	xchg   esp,eax
  41dd0a:	add    bh,bh
  41dd0c:	sub    al,0x18
  41dd0e:	loope  0x41dd16
  41dd10:	jmp    FWORD PTR [edx+0xc]
  41dd13:	add    bh,bh
  41dd15:	fwait
  41dd16:	or     esp,0xffffffff
  41dd19:	mov    ah,0x83
  41dd1b:	int3   
  41dd1c:	jb     0x41dd88
  41dd1e:	pop    edi
  41dd1f:	ret    
  41dd20:	int3   
  41dd21:	std    
  41dd22:	repnz add BYTE PTR [eax],al
  41dd25:	and    cl,BYTE PTR [ecx-0x997601]
  41dd2b:	push   DWORD PTR [edx]
  41dd2d:	push   eax
  41dd2e:	sbb    eax,edx
  41dd30:	add    ch,dl
  41dd32:	lds    eax,FWORD PTR [eax]
  41dd34:	(bad)  
  41dd35:	fadd   DWORD PTR [eax]
  41dd37:	mov    edi,edi
  41dd39:	pushf  
  41dd3a:	inc    DWORD PTR [eax]
  41dd3c:	adc    DWORD PTR [eax-0xc7c4ed5],eax
  41dd42:	ret    
  41dd43:	(bad)  
  41dd44:	dec    DWORD PTR [edi+edi*8-0x1]
  41dd48:	call   FWORD PTR [esi-0x7d]
  41dd4b:	cmp    DWORD PTR [ebp-0x145f51],0xffffffc2
  41dd52:	adc    eax,0xb583cc
  41dd57:	int3   
  41dd58:	add    BYTE PTR [ebx+0x1370000],al
  41dd5e:	mov    al,BYTE PTR [edi]
  41dd60:	push   DWORD PTR [edi]
  41dd62:	jecxz  0x41dd30
  41dd64:	inc    edi
  41dd66:	add    ah,cl
  41dd68:	jmp    DWORD PTR [ebp-0x1]
  41dd6b:	sbb    DWORD PTR [esi+0x82fa86],0x18
  41dd72:	or     eax,0xccc400ff
  41dd77:	dec    esp
  41dd79:	cmc    
  41dd7a:	mov    edi,edi
  41dd7c:	loopne 0x41dd08
  41dd7e:	push   edx
  41dd7f:	add    al,0x0
  41dd81:	lds    ebp,FWORD PTR [ebx-0x765f007d]
  41dd87:	add    bh,bh
  41dd89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd8a:	add    bh,bh
  41dd8c:	sub    al,0xd8
  41dd8e:	and    al,BYTE PTR [edx-0x33938b01]
  41dd94:	add    al,al
  41dd96:	inc    DWORD PTR [eax]
  41dd98:	dec    DWORD PTR [esi-0x1]
  41dd9b:	add    dl,al
  41dd9d:	sahf   
  41dd9e:	or     al,bh
  41dda0:	call   DWORD PTR [ebx+ecx*4-0x34]
  41dda4:	add    ah,bl
  41dda6:	add    BYTE PTR [ecx-0x7c9801],cl
  41ddac:	or     DWORD PTR [ebx+0x63],esi
  41ddaf:	out    dx,al
  41ddb0:	jmp    DWORD PTR [ecx+0x75]
  41ddb3:	dec    DWORD PTR [ecx+0xff28]
  41ddb9:	mov    bl,0xcc
  41ddbb:	mov    DWORD PTR [eax],ecx
  41ddbd:	inc    eax
  41ddbe:	sbb    eax,0x4bbf0005
  41ddc3:	(bad)  
  41ddc4:	push   DWORD PTR [eax+eax*1]
  41ddc7:	mov    DWORD PTR [ebx-0x3100ffae],eax
  41ddcd:	jbe    0x41ddd2
  41ddcf:	loop   0x41ddd1
  41ddd1:	loop   0x41ddec
  41ddd3:	add    BYTE PTR [ebx-0x76000019],al
  41ddd9:	xor    al,0xff
  41dddb:	call   DWORD PTR [edi+0x23]
  41ddde:	(bad)  
  41dddf:	xchg   ebp,eax
  41dde0:	call   esi
  41dde2:	cmp    ecx,DWORD PTR [ecx-0x76008200]
  41dde8:	sbb    DWORD PTR [ebx],0xffffff83
  41ddeb:	mov    DWORD PTR [ebx-0x12ce1f],esp
  41ddf1:	mov    ch,0x1a
  41ddf3:	int3   
  41ddf4:	adc    ebp,0xffffffff
  41ddf7:	dec    esp
  41ddf9:	xor    bh,bh
  41ddfb:	jmp    DWORD PTR [eax+0x15]
  41ddfe:	sti    
  41ddff:	mov    BYTE PTR [ebx-0xff3bd3],al
  41de05:	sub    edi,edi
  41de07:	mov    DWORD PTR [ebx-0x2a760065],eax
  41de0d:	pop    eax
  41de0e:	jmp    0x41de0c
  41de10:	int3   
  41de11:	and    bh,dl
  41de13:	inc    DWORD PTR [eax]
  41de15:	ss (bad) 
  41de17:	(bad)  
  41de18:	dec    esi
  41de1a:	dec    esp
  41de1c:	fst    QWORD PTR [edx]
  41de1e:	adc    eax,ebx
  41de20:	and    DWORD PTR [edx-0x4cff003f],0xffffff83
  41de27:	add    bh,bh
  41de29:	test   BYTE PTR [eax],0x0
  41de2c:	jne    0x41ddd0
  41de2e:	retf   
  41de2f:	pop    ebp
  41de30:	dec    edi
  41de32:	stos   BYTE PTR es:[edi],al
  41de33:	inc    DWORD PTR [ebx-0x7cff0036]
  41de39:	inc    ecx
  41de3a:	add    bh,bh
  41de3c:	pop    edx
  41de3d:	stc    
  41de3e:	pop    ecx
  41de3f:	sar    bh,0x37
  41de42:	sbb    bh,bh
  41de44:	add    BYTE PTR [eax+0xe83ccff],ch
  41de4a:	dec    DWORD PTR [ecx-0x68bb2702]
  41de50:	call   FWORD PTR [ecx+eiz*8+0x33ff00]
  41de57:	(bad)  
  41de58:	dec    DWORD PTR [edi-0x77]
  41de5b:	add    DWORD PTR [ebx+0x8b2d7],0x6c
  41de62:	pusha  
  41de63:	add    BYTE PTR [ebx-0x7c7c8a],al
  41de69:	jmp    0xe01bab6d
  41de6e:	rcl    DWORD PTR [esi],0x0
  41de71:	push   ds
  41de72:	xor    BYTE PTR [eax],al
  41de74:	dec    DWORD PTR [edi-0x1]
  41de77:	add    BYTE PTR [eax],al
  41de79:	adc    eax,0x8e14ff83
  41de7e:	ins    BYTE PTR es:[edi],dx
  41de7f:	mov    edi,?
  41de81:	add    ah,BYTE PTR [ecx+ecx*4-0x1]
  41de85:	add    BYTE PTR [bx+si],al
  41de88:	add    al,dh
  41de8a:	add    BYTE PTR [ebx-0x675970af],al
  41de90:	jmp    edx
  41de92:	cmp    al,BYTE PTR [eax]
  41de94:	push   DWORD PTR [ebx+eax*4-0x803400]
  41de9b:	add    BYTE PTR [eax+ebp*1],cl
  41de9e:	fstp   TBYTE PTR [eax]
  41dea0:	add    ah,al
  41dea2:	je     0x41dea4
  41dea4:	push   DWORD PTR [esi+0x560083ff]
  41deaa:	inc    DWORD PTR [eax]
  41deac:	(bad)  [ebx+0x72cccba5]
  41deb2:	cmp    bh,bh
  41deb4:	add    BYTE PTR [edi+edi*8],ah
  41deb7:	int3   
  41deb8:	add    BYTE PTR [eax],al
  41deba:	add    BYTE PTR [eax],al
  41debc:	in     al,dx
  41debd:	mov    eax,ds:0xe9ffb945
  41dec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec3:	add    ah,cl
  41dec5:	out    0xcc,eax
  41dec7:	int3   
  41dec8:	cmp    DWORD PTR [edx],0xffffffff
  41decb:	add    BYTE PTR [ebp+esi*4-0x540057b4],bh
  41ded2:	xchg   ebp,eax
  41ded3:	inc    DWORD PTR [ebx+0xffe1]
  41ded9:	jg     0x41deda
  41dedb:	add    bh,ch
  41dedd:	clc    
  41dede:	xor    DWORD PTR [esp+ecx*8-0x761002],esp
  41dee5:	test   BYTE PTR [ecx-0x3aff01],cl
  41deeb:	add    ah,cl
  41deed:	in     eax,0xc7
  41deef:	xor    eax,0x635400
  41def4:	add    BYTE PTR [eax-0x1],ch
  41def7:	inc    DWORD PTR [eax]
  41def9:	aas    
  41defa:	add    DWORD PTR [eax],0x15
  41defd:	sub    al,0xb6
  41deff:	cmp    bh,0x35
  41df02:	cs cmp edi,0x6f
  41df06:	inc    DWORD PTR [eax]
  41df08:	call   ebp
  41df0a:	inc    DWORD PTR [eax]
  41df0c:	mov    edx,0x83816ea2
  41df11:	pop    ebx
  41df12:	loope  0x41df14
  41df14:	add    BYTE PTR [ebx-0x1],al
  41df17:	inc    DWORD PTR [eax]
  41df19:	add    DWORD PTR [eax],0xb2f3b1ff
  41df1f:	and    al,0xff
  41df21:	mov    ch,BYTE PTR [edi]
  41df23:	(bad)  
  41df24:	(bad)  
  41df25:	out    dx,eax
  41df26:	(bad)  
  41df27:	inc    DWORD PTR [ebx-0x33007cc4]
  41df2d:	stc    
  41df2e:	aas    
  41df2f:	mov    esp,0x83c82900
  41df34:	push   DWORD PTR [ecx]
  41df36:	cmp    edi,0xffffffff
  41df39:	sub    eax,DWORD PTR [eax]
  41df3b:	add    ch,bh
  41df3d:	inc    edi
  41df3e:	dec    esp
  41df3f:	sar    edi,0xc
  41df42:	sub    DWORD PTR [ebx-0x7ced34],eax
  41df48:	jmp    FWORD PTR [ecx]
  41df4a:	dec    esp
  41df4c:	mov    eax,ds:0x89e282ea
  41df51:	adc    DWORD PTR [edi+edi*8],0x8300f8ff
  41df58:	call   eax
  41df5a:	add    bh,bh
  41df5c:	fmul   DWORD PTR [esi]
  41df5e:	and    eax,0x6cbbffa2
  41df63:	cmp    edi,0xffffffa1
  41df66:	add    ah,cl
  41df68:	call   esi
  41df6a:	dec    DWORD PTR [ecx-0x16903ce5]
  41df70:	int3   
  41df71:	inc    edx
  41df72:	jo     0x41df40
  41df74:	add    bh,al
  41df76:	(bad)  
  41df77:	(bad)  
  41df78:	jmp    FWORD PTR [esp+ecx*8]
  41df7b:	dec    DWORD PTR [esi-0x7c0be1f0]
  41df81:	adc    BYTE PTR [edi+0x0],dh
  41df84:	add    BYTE PTR [esi],ah
  41df86:	add    BYTE PTR [eax],al
  41df88:	add    BYTE PTR [edi],bl
  41df8a:	int3   
  41df8b:	call   FWORD PTR [edx+esi*2-0x16]
  41df8f:	es push edi
  41df92:	pushf  
  41df93:	(bad)  
  41df94:	inc    DWORD PTR [edx+0x0]
  41df97:	int3   
  41df98:	(bad)  
  41df99:	inc    BYTE PTR [ebx+0xd9e29ff]
  41df9f:	inc    esi
  41dfa0:	add    BYTE PTR [eax],ch
  41dfa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfa3:	(bad)  
  41dfa4:	dec    DWORD PTR [ebp+0x7a000083]
  41dfaa:	(bad)  
  41dfab:	dec    edx
  41dfad:	adc    al,BYTE PTR [ebp+0x2bf8ff34]
  41dfb3:	inc    DWORD PTR [eax]
  41dfb5:	add    cl,ah
  41dfb7:	(bad)  
  41dfb8:	inc    DWORD PTR [esi]
  41dfba:	inc    DWORD PTR [ebx+0x3b320e32]
  41dfc0:	dec    eax
  41dfc2:	outs   dx,DWORD PTR ds:[esi]
  41dfc3:	dec    DWORD PTR [ecx-0x76ff00ff]
  41dfc9:	ds (bad) 
  41dfcb:	push   DWORD PTR [ebx-0x27ecd0]
  41dfd1:	sbb    di,di
  41dfd4:	inc    DWORD PTR [ecx+ecx*4-0x580001]
  41dfdb:	add    BYTE PTR [ebx-0x70],dl
  41dfde:	mov    eax,0xeae1ff2b
  41dfe3:	inc    DWORD PTR [eax]
  41dfe5:	jl     0x41dfe6
  41dfe7:	add    DWORD PTR [eax],0x0
  41dfea:	(bad)  
  41dfeb:	jmp    FWORD PTR [eax+0x79]
  41dfee:	pop    es
  41dfef:	jmp    0x2e57c0
  41dff4:	sbb    DWORD PTR [edx-0x417c0100],0xffffffff
  41dffb:	jmp    ebx
  41dffd:	popa   
  41dffe:	dec    eax
  41dfff:	sbb    al,0xcc
  41e001:	pop    esi
  41e002:	pop    DWORD PTR [ebx+0x5b83]
  41e008:	add    BYTE PTR [ebx+0x7d5983ff],bh
  41e00e:	outs   dx,DWORD PTR ds:[esi]
  41e00f:	dec    ebp
  41e010:	cmp    DWORD PTR [edx+edi*2-0x8bff34],0x0
  41e018:	add    bh,ch
  41e01a:	(bad)  
  41e01b:	dec    DWORD PTR [edi-0xe9f372]
  41e021:	fwait
  41e022:	xchg   ebx,eax
  41e023:	add    DWORD PTR [eax],0xffffffcb
  41e026:	mov    DWORD PTR [ebx-0x33f101],eax
  41e02c:	cmc    
  41e02d:	scas   al,BYTE PTR es:[edi]
  41e02e:	and    al,BYTE PTR [ecx]
  41e030:	mov    esi,esp
  41e032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e033:	inc    DWORD PTR [eax]
  41e035:	enter  0xff00,0x89
  41e039:	jmp    0x4fbd:0x40f6ff00
  41e040:	jmp    ebp
  41e042:	add    BYTE PTR [eax],0x0
  41e045:	xor    al,BYTE PTR [ebx-0xa0001]
  41e04b:	add    cl,ah
  41e04d:	ret    0x329
  41e050:	jmp    DWORD PTR [eax-0x52]
  41e053:	or     DWORD PTR [ecx-0xff0014],0x18
  41e05a:	add    bh,bh
  41e05c:	mov    edi,0xff6b8909
  41e061:	popa   
  41e062:	mov    eax,ds:0xff39ffcc
  41e067:	(bad)  
  41e068:	inc    eax
  41e06a:	(bad)  
  41e06b:	push   DWORD PTR [ebx]
  41e06d:	mov    al,0x5d
  41e06f:	lods   eax,DWORD PTR ds:[esi]
  41e070:	call   DWORD PTR [edi]
  41e072:	sub    edi,edi
  41e074:	add    BYTE PTR [ecx-0x5e000001],bh
  41e07a:	add    bh,bh
  41e07c:	jle    0x41e073
  41e07e:	mov    esi,0x850e83a0
  41e083:	(bad)  
  41e084:	(bad)  
  41e085:	fadd   QWORD PTR [eax]
  41e087:	add    BYTE PTR [ecx-0x41000013],cl
  41e08d:	test   esp,ebx
  41e08f:	fild   DWORD PTR [eax]
  41e091:	iret   
  41e092:	nop
  41e093:	add    bh,bh
  41e095:	add    bh,bh
  41e097:	inc    DWORD PTR [eax]
  41e099:	mov    eax,ds:0x5aa1ff83
  41e09e:	cs and eax,0x83cf0bff
  41e0a4:	call   ebx
  41e0a6:	add    BYTE PTR [eax],al
  41e0a8:	int3   
  41e0a9:	out    0xff,al
  41e0ab:	call   eax
  41e0ad:	and    eax,0x61ffcf68
  41e0b2:	repz (bad) 
  41e0b4:	dec    DWORD PTR [ebp-0x77]
  41e0b7:	cmp    edi,0xffffffb9
  41e0ba:	inc    DWORD PTR [eax]
  41e0bc:	out    0xe,al
  41e0be:	imul   DWORD PTR [edi-0x368677]
  41e0c4:	add    ah,ch
  41e0c6:	(bad)  
  41e0c7:	inc    DWORD PTR [eax]
  41e0c9:	jno    0x41e0ca
  41e0cb:	jmp    DWORD PTR [ebx]
  41e0cd:	ins    BYTE PTR es:[edi],dx
  41e0ce:	push   ebp
  41e0cf:	pop    esp
  41e0d0:	and    DWORD PTR [ebx-0x7e],0xffffffff
  41e0d4:	jmp    DWORD PTR [eax+0x3dff00ff]
  41e0da:	cmp    edi,0xc
  41e0dd:	mov    eax,DWORD PTR [esi+ebx*8]
  41e0e0:	dec    DWORD PTR [ecx-0x660000cf]
  41e0e6:	add    bh,bh
  41e0e8:	inc    DWORD PTR [ebx-0x2d650001]
  41e0ee:	ja     0x41e08c
  41e0f0:	(bad)  
  41e0f1:	mov    eax,0x283cccc
  41e0f6:	dec    DWORD PTR [ecx-0x76008800]
  41e0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0fd:	rcl    BYTE PTR [edi+0x29],cl
  41e100:	add    ah,ch
  41e102:	into   
  41e103:	int3   
  41e104:	add    BYTE PTR [esi-0x34],bl
  41e107:	(bad)  
  41e108:	inc    edi
  41e10a:	add    BYTE PTR [ecx-0x41c1564e],cl
  41e110:	add    BYTE PTR [ecx+esi*2-0x970100],cl
  41e117:	inc    DWORD PTR [eax]
  41e119:	adc    DWORD PTR [eax],eax
  41e11b:	add    BYTE PTR [edx+0x9396a5],dh
  41e121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e122:	jl     0x41e0f0
  41e124:	jmp    DWORD PTR [edx-0x1900ff01]
  41e12a:	cmp    edi,0xffffff98
  41e12d:	bound  esi,QWORD PTR [ebp+0x572f83cb]
  41e133:	inc    DWORD PTR [ebx+0xffcca6]
  41e139:	inc    edx
  41e13a:	add    BYTE PTR [ebx-0x5b0d99cb],al
  41e140:	(bad)  
  41e141:	(bad)  
  41e142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e143:	cmp    edi,0x52
  41e146:	add    bh,bh
  41e148:	(bad)  
  41e149:	js     0x41e14a
  41e14b:	push   DWORD PTR [ebx]
  41e14d:	or     dl,BYTE PTR [esi+0x33]
  41e150:	(bad)  
  41e151:	jmp    0x41e157
  41e153:	inc    DWORD PTR [eax]
  41e155:	fiadd  DWORD PTR [ebx+0x15ff00]
  41e15b:	add    BYTE PTR [ebp-0xb2b956],bl
  41e161:	inc    ebp
  41e162:	std    
  41e163:	add    ah,cl
  41e165:	dec    ebp
  41e166:	add    DWORD PTR [ebx+0xff30ff],0xffffffb9
  41e16d:	je     0x41e11b
  41e16f:	push   ebp
  41e170:	add    BYTE PTR [esi-0x87c00c8],ch
  41e176:	inc    DWORD PTR [eax]
  41e178:	add    BYTE PTR [ebx],bl
  41e17a:	(bad)  
  41e17b:	jmp    FWORD PTR [edi]
  41e17d:	test   BYTE PTR [edx+0x6d1300f8],dh
  41e183:	add    DWORD PTR [ebx+0x3d],0xd
  41e18a:	add    DWORD PTR [eax],0xffffff83
  41e18d:	cmp    bh,ch
  41e18f:	std    
  41e190:	adc    ebx,0x48
  41e193:	add    bh,bh
  41e195:	add    edi,edi
  41e197:	(bad)  
  41e198:	inc    DWORD PTR [eax+0x0]
  41e19b:	mov    eax,ecx
  41e19d:	retf   0xcad6
  41e1a0:	push   DWORD PTR [esi]
  41e1a2:	and    edi,edi
  41e1a4:	call   DWORD PTR [edi+0x62ffff00]
  41e1aa:	dec    esp
  41e1ac:	mov    ds:0xff0d26b1,eax
  41e1b1:	imul   ebp,DWORD PTR [eax],0x0
  41e1b4:	(bad)  
  41e1b5:	jle    0x41e1b7
  41e1b7:	(bad)  
  41e1b8:	dec    DWORD PTR [ebx-0x34]
  41e1bb:	sub    DWORD PTR [edi-0x65],0x2
  41e1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1c0:	jmp    DWORD PTR [ebx+eax*1-0x7c460001]
  41e1c7:	dec    DWORD PTR [ecx+0x77000087]
  41e1cd:	xor    DWORD PTR [eax+eax*1+0x0],eax
  41e1d1:	mov    ch,0xc5
  41e1d3:	add    BYTE PTR [eax],al
  41e1d5:	push   eax
  41e1d6:	(bad)  
  41e1d7:	inc    DWORD PTR [eax]
  41e1d9:	ds (bad) 
  41e1db:	(bad)  
  41e1dc:	cmp    ah,bl
  41e1de:	push   ds
  41e1df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e0:	dec    ebp
  41e1e2:	pop    DWORD PTR [eax]
  41e1e4:	(bad)  
  41e1e5:	js     0x41e1e6
  41e1e7:	int3   
  41e1e8:	add    BYTE PTR [ebx-0x39bc007d],bh
  41e1ee:	sub    al,0x72
  41e1f0:	add    BYTE PTR [eax+0xc],ch
  41e1f3:	(bad)  
  41e1f4:	call   FWORD PTR [ecx]
  41e1f6:	inc    DWORD PTR [ebx+0xff13ff]
  41e1fc:	cmp    edx,edx
  41e1fe:	sbb    eax,edx
  41e200:	add    BYTE PTR [eax+0x17],ah
  41e203:	cmp    edi,0xfffffffb
  41e206:	add    BYTE PTR [ebx-0xc01],al
  41e20c:	adc    al,BYTE PTR [esi+0x11ff05bf]
  41e212:	std    
  41e213:	add    bh,bh
  41e215:	mov    esp,0x62ff00cc
  41e21a:	(bad)  
  41e21b:	dec    DWORD PTR [ecx+0x1e]
  41e21e:	or     eax,0xfc47ff7e
  41e223:	mov    DWORD PTR [eax],eax
  41e225:	push   0xffffff83
  41e227:	add    bh,bh
  41e229:	sbb    al,BYTE PTR [eax]
  41e22b:	int3   
  41e22c:	add    bh,dl
  41e22e:	jb     0x41e1bc
  41e230:	dec    edi
  41e232:	add    DWORD PTR [ebx-0x765c01],eax
  41e238:	inc    DWORD PTR [ebp-0x186f0001]
  41e23e:	mov    esi,DWORD PTR [esi+0x4e1aff]
  41e244:	add    DWORD PTR [esi+0x79ffff89],0x0
  41e24b:	inc    DWORD PTR [ecx-0x36]
  41e24e:	add    BYTE PTR [edi],bh
  41e250:	jmp    FWORD PTR [eax-0x7e]
  41e253:	add    ah,cl
  41e255:	inc    BYTE PTR [eax]
  41e257:	(bad)  
  41e258:	call   FWORD PTR [edi-0x46d40100]
  41e25e:	dec    edi
  41e25f:	popa   
  41e260:	inc    DWORD PTR [ebx-0xd]
  41e263:	dec    DWORD PTR [ecx-0x33ff0046]
  41e269:	or     DWORD PTR [eax],eax
  41e26b:	add    BYTE PTR [edi-0xa57b7d],dl
  41e271:	mov    BYTE PTR [edi+edi*8-0x76000101],cl
  41e278:	inc    edx
  41e27a:	inc    DWORD PTR [eax]
  41e27c:	adc    cl,BYTE PTR [eax-0x5d006104]
  41e282:	popf   
  41e283:	add    bh,bh
  41e285:	jmp    0xf541e28a
  41e28a:	(bad)  
  41e28b:	call   FWORD PTR [esi]
  41e28d:	xchg   esi,eax
  41e28e:	push   edi
  41e28f:	scas   eax,DWORD PTR es:[edi]
  41e290:	int3   
  41e291:	scas   eax,DWORD PTR es:[edi]
  41e292:	arpl   WORD PTR [eax],ax
  41e294:	add    ebp,0xffffffff
  41e297:	add    ah,cl
  41e299:	ror    DWORD PTR [ecx+0x7c97ecff],cl
  41e29f:	mov    esi,0xcc416500
  41e2a4:	call   DWORD PTR [edi+0x69000000]
  41e2aa:	(bad)  
  41e2ab:	call   FWORD PTR [edx]
  41e2ad:	bound  edi,QWORD PTR [edx+0x78]
  41e2b0:	cmp    DWORD PTR [ebx-0x6500ff27],0x0
  41e2b7:	cmp    edi,0xffffffdf
  41e2ba:	inc    DWORD PTR [eax]
  41e2bc:	push   esi
  41e2bd:	adc    ecx,DWORD PTR [ecx]
  41e2bf:	enter  0x25ff,0xca
  41e2c3:	add    DWORD PTR [eax],0xffffffea
  41e2c6:	add    bh,bh
  41e2c8:	int3   
  41e2c9:	cmp    bh,bh
  41e2cb:	inc    DWORD PTR [esi+0x43]
  41e2ce:	mov    dh,0x6d
  41e2d0:	(bad)  
  41e2d1:	cmp    eax,0xf98389f6
  41e2d6:	cmp    edi,0xffffffff
  41e2d9:	call   0xc121:0x8f08ff83
  41e2e0:	cmp    DWORD PTR [esi+eiz*8+0x0],0x0
  41e2e5:	and    DWORD PTR [eax],eax
  41e2e7:	dec    esp
  41e2e9:	dec    ebx
  41e2ea:	add    ah,cl
  41e2ec:	xlat   BYTE PTR ds:[ebx]
  41e2ed:	arpl   WORD PTR ds:0xabd1ff65,sp
  41e2f3:	mov    esp,ecx
  41e2f5:	mov    BYTE PTR [eax],0xff
  41e2f8:	add    ch,bh
  41e2fa:	inc    DWORD PTR [ebx-0x1beb5557]
  41e300:	call   DWORD PTR [edx-0x5c]
  41e303:	int3   
  41e304:	cmp    DWORD PTR [edi+0x100083ff],0xffffffff
  41e30b:	push   DWORD PTR [edx+edi*8+0x2c00a89e]
  41e312:	(bad)  
  41e313:	cmp    edi,0x6
  41e316:	inc    DWORD PTR [eax]
  41e318:	int3   
  41e319:	arpl   di,di
  41e31b:	add    BYTE PTR ds:0x83a9e48d,bh
  41e321:	test   BYTE PTR [esi+0x780083],al
  41e327:	add    DWORD PTR [eax],0xffffff83
  41e32a:	(bad)  
  41e32b:	(bad)  
  41e32c:	cmp    esp,edx
  41e32e:	cmp    eax,DWORD PTR [ebx-0x1]
  41e331:	or     eax,0x1d00ff90
  41e336:	cmp    edi,0x0
  41e339:	xchg   esi,eax
  41e33a:	add    BYTE PTR [ebx-0xeb300f7],al
  41e340:	mov    DWORD PTR [esi],edi
  41e342:	loope  0x41e310
  41e344:	inc    DWORD PTR [edx]
  41e346:	(bad)  
  41e347:	(bad)  
  41e348:	inc    ebx
  41e34a:	(bad)  
  41e34b:	dec    ebp
  41e34d:	stos   DWORD PTR es:[edi],eax
  41e34e:	mov    dh,0x9a
  41e350:	add    bl,dl
  41e352:	jp     0x41e353
  41e354:	add    BYTE PTR [ebx+eax*4-0x77],dh
  41e358:	cmp    DWORD PTR [ebp+0x0],0x0
  41e35c:	jnp    0x41e3a0
  41e35e:	cmp    al,0x94
  41e360:	add    ch,al
  41e362:	pop    eax
  41e363:	inc    DWORD PTR [ebx+0xff0034]
  41e369:	aas    
  41e36a:	cmp    edi,0xffffffec
  41e36d:	cdq    
  41e36e:	sbb    al,0x9d
  41e370:	dec    DWORD PTR [esi+ecx*4-0xbd0001]
  41e377:	add    bh,bh
  41e379:	scas   eax,DWORD PTR es:[edi]
  41e37a:	add    BYTE PTR [eax],al
  41e37c:	and    al,0xc9
  41e37e:	push   cs
  41e37f:	xlat   BYTE PTR ds:[ebx]
  41e380:	add    BYTE PTR [ebp+0x2c00cc40],cl
  41e386:	(bad)  
  41e387:	dec    DWORD PTR [ecx-0x4ff7c55]
  41e38d:	fisubr DWORD PTR [esi+0x19cf833b]
  41e393:	(bad)  
  41e394:	call   FWORD PTR [esp+ecx*8+0x0]
  41e398:	mov    edi,esi
  41e39a:	cmp    edi,0x72
  41e39d:	jno    0x41e3d9
  41e39f:	hlt    
  41e3a0:	call   DWORD PTR [ecx]
  41e3a2:	push   edi
  41e3a3:	add    BYTE PTR [eax],al
  41e3a5:	push   0xcfff0000
  41e3aa:	(bad)  
  41e3ab:	inc    DWORD PTR [esi+0x32]
  41e3ae:	mov    esi,0xadcff4b
  41e3b3:	mov    DWORD PTR [ebx-0x7cab],eax
  41e3b9:	jo     0x41e3bb
  41e3bb:	and    DWORD PTR [ecx],0xffffff99
  41e3be:	jg     0x41e3ed
  41e3c0:	xor    DWORD PTR [esi+0x2effffc7],0xffffffff
  41e3c7:	(bad)  
  41e3c8:	call   FWORD PTR [esi-0x1]
  41e3cb:	call   DWORD PTR [edx]
  41e3cd:	ret    
  41e3ce:	ins    DWORD PTR es:[edi],dx
  41e3cf:	retf   0x3cff
  41e3d2:	jb     0x41e3d4
  41e3d4:	cmp    DWORD PTR [edi],0xffffffff
  41e3d7:	inc    DWORD PTR [eax]
  41e3d9:	sahf   
  41e3da:	(bad)  
  41e3db:	call   FWORD PTR [esi-0x34]
  41e3de:	data16 cli 
  41e3e0:	add    BYTE PTR [edi],dl
  41e3e2:	xor    edi,edi
  41e3e4:	(bad)  
  41e3e5:	mov    ebp,0x110000ff
  41e3ea:	add    BYTE PTR [eax],al
  41e3ec:	sti    
  41e3ed:	imul   ecx,DWORD PTR [eax-0x740500b3],0x9fff00
  41e3f7:	inc    DWORD PTR [eax]
  41e3f9:	cmp    eax,DWORD PTR [eax]
  41e3fb:	(bad)  
  41e3fc:	fsubr  QWORD PTR [esi]
  41e3fe:	pop    esp
  41e3ff:	adc    bh,bh
  41e401:	es xor edi,edi
  41e404:	adc    DWORD PTR [eax+0x2bffffff],0x0
  41e40b:	add    BYTE PTR [ebx],bh
  41e40d:	adc    dh,BYTE PTR [eax-0x41]
  41e410:	mov    DWORD PTR [ecx],esi
  41e412:	je     0x41e3e0
  41e414:	call   FWORD PTR [esi+0x0]
  41e417:	(bad)  
  41e418:	(bad)  
  41e419:	mov    esi,0x4ae10083
  41e41e:	mov    esi,DWORD PTR [edi]
  41e420:	add    BYTE PTR ds:0xf98300f3,dh
  41e426:	add    bh,bh
  41e428:	dec    DWORD PTR [ebx+0x0]
  41e42b:	add    BYTE PTR [eax-0x7a],al
  41e42e:	sbb    esi,DWORD PTR [edx-0x91b67d]
  41e434:	call   edi
  41e436:	(bad)  
  41e437:	inc    DWORD PTR [eax]
  41e439:	pop    esp
  41e43a:	mov    edi,edi
  41e43c:	pop    eax
  41e43d:	and    bl,BYTE PTR [ebx]
  41e43f:	arpl   WORD PTR [eax],ax
  41e441:	push   edi
  41e442:	jnp    0x41e410
  41e444:	jmp    DWORD PTR [ebx-0x4cff0034]
  41e44a:	cmp    edi,0x53
  41e44d:	rol    BYTE PTR ds:0x14bcffee,0x83
  41e454:	and    DWORD PTR [eax-0x1],0x0
  41e458:	push   DWORD PTR [edi-0x1]
  41e45b:	call   DWORD PTR [ebx-0x76892f43]
  41e461:	jno    0x41e47f
  41e463:	add    bh,bh
  41e465:	mov    bh,bh
  41e467:	inc    DWORD PTR [eax]
  41e469:	clc    
  41e46a:	(bad)  
  41e46b:	jmp    DWORD PTR [ebx-0x6126ab]
  41e471:	jne    0x41e499
  41e473:	int3   
  41e474:	call   DWORD PTR [edi-0x9ff007d]
  41e47a:	(bad)  
  41e47b:	push   DWORD PTR [edx-0x5e9129]
  41e481:	inc    ebx
  41e482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e483:	(bad)  
  41e484:	call   ebp
  41e486:	(bad)  
  41e487:	(bad)  
  41e488:	call   DWORD PTR [eax]
  41e48a:	add    BYTE PTR [ecx-0x5ef0e4a4],cl
  41e490:	int3   
  41e491:	dec    edx
  41e492:	loopne 0x41e493
  41e494:	push   ecx
  41e496:	add    bh,bh
  41e498:	add    BYTE PTR [eax-0x1],ch
  41e49b:	mov    DWORD PTR [esi+0x2f],edi
  41e49e:	ss in  eax,0xff
  41e4a1:	out    0x31,al
  41e4a3:	add    BYTE PTR [eax],al
  41e4a5:	sbb    bh,bh
  41e4a7:	dec    DWORD PTR [ecx+0x34000072]
  41e4ad:	mov    bh,0x5c
  41e4af:	xchg   ebx,eax
  41e4b0:	add    BYTE PTR [edi+0x65],ah
  41e4b3:	add    DWORD PTR [ebx-0xffc6],0x56
  41e4ba:	add    BYTE PTR [eax],al
  41e4bc:	nop
  41e4bd:	mov    DWORD PTR [ecx+ecx*4-0x1],ecx
  41e4c1:	cli    
  41e4c2:	jae    0x41e4c4
  41e4c4:	sub    DWORD PTR [ebp-0x34],0xffffff83
  41e4c8:	add    BYTE PTR [esi],bl
  41e4ca:	(bad)  
  41e4cb:	call   FWORD PTR [esi+edi*8+0x19ff30cb]
  41e4d2:	out    dx,al
  41e4d3:	(bad)  
  41e4d4:	call   esp
  41e4d6:	int3   
  41e4d7:	add    bh,bh
  41e4d9:	mov    bh,bh
  41e4db:	inc    DWORD PTR [ebx]
  41e4dd:	dec    ebx
  41e4de:	int3   
  41e4df:	inc    edx
  41e4e0:	add    DWORD PTR [edx],0x5b
  41e4e3:	int3   
  41e4e4:	add    dh,al
  41e4e6:	add    bh,bh
  41e4e8:	jmp    FWORD PTR [ebp-0x34feff01]
  41e4ee:	aas    
  41e4ef:	and    DWORD PTR ds:0x9a0083f3,0xffffffff
  41e4f7:	inc    DWORD PTR [eax]
  41e4f9:	jns    0x41e47e
  41e4fb:	add    BYTE PTR [edx-0x33612a28],ch
  41e501:	pop    edx
  41e502:	(bad)  
  41e503:	add    BYTE PTR [eax],al
  41e505:	test   al,0x0
  41e507:	int3   
  41e508:	(bad)  
  41e509:	mov    edx,0x7a92ffff
  41e50e:	pop    edi
  41e50f:	int3   
  41e510:	call   FWORD PTR [esi-0x4b760098]
  41e516:	mov    edi,edi
  41e518:	add    BYTE PTR ds:0x9166cc83,ch
  41e51e:	mov    ds:0x96318311,al
  41e523:	inc    DWORD PTR [ebx-0xff15]
  41e529:	or     al,0x0
  41e52b:	(bad)  
  41e52c:	jl     0x41e527
  41e52e:	jbe    0x41e560
  41e530:	jmp    FWORD PTR [eax]
  41e532:	add    BYTE PTR [ecx+0xffb6ff],cl
  41e538:	add    BYTE PTR [edi+edi*8-0x54b08c01],cl
  41e53f:	inc    esi
  41e540:	jmp    FWORD PTR [ecx-0x230000ea]
  41e546:	int3   
  41e547:	(bad)  
  41e548:	push   DWORD PTR [ebx+0x1a68ff00]
  41e54e:	sub    BYTE PTR [ebx-0x76d80a77],dh
  41e554:	call   esi
  41e556:	(bad)  
  41e557:	(bad)  
  41e558:	inc    DWORD PTR [ecx]
  41e55a:	(bad)  
  41e55b:	(bad)  
  41e55c:	jmp    0x16c7:0xff5dccba
  41e563:	add    BYTE PTR [eax],al
  41e565:	sub    bh,bh
  41e567:	add    bh,bh
  41e569:	and    DWORD PTR [ebx+0x18a3c4ff],eax
  41e56f:	push   eax
  41e570:	mov    DWORD PTR [esi-0x1100ffba],esp
  41e576:	add    BYTE PTR [eax],al
  41e578:	inc    DWORD PTR [edi-0x7d]
  41e57b:	add    BYTE PTR [ecx-0x97abde],al
  41e581:	(bad)
  41e584:	add    BYTE PTR [ebx],ah
  41e586:	add    ah,cl
  41e588:	add    BYTE PTR [esi],ah
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	jg     0x41e5a6
  41e58e:	loopne 0x41e55e
  41e590:	(bad)  
  41e591:	cli    
  41e592:	mov    eax,ds:0xa9ff00
  41e597:	(bad)  
  41e598:	inc    DWORD PTR [eax]
  41e59a:	add    DWORD PTR [ebx-0x16cff2a6],0xffffffff
  41e5a1:	test   eax,0x1b8900e7
  41e5a6:	int3   
  41e5a7:	add    BYTE PTR [eax],al
  41e5a9:	mov    dl,0xff
  41e5ab:	add    BYTE PTR [eax],cl
  41e5ad:	mov    BYTE PTR [esi],bh
  41e5af:	leave  
  41e5b0:	mov    DWORD PTR [edi],esp
  41e5b2:	mov    ebp,0x9dff00
  41e5b7:	add    bh,bh
  41e5b9:	rol    BYTE PTR [eax],0xff
  41e5bc:	xchg   esp,eax
  41e5bd:	in     eax,0x9d
  41e5bf:	mov    al,0x83
  41e5c1:	enter  0xfd,0x0
  41e5c5:	push   ebx
  41e5c6:	inc    DWORD PTR [ebx-0x2601]
  41e5cc:	fcomp  DWORD PTR [esi+0x6a]
  41e5cf:	mov    ecx,esp
  41e5d1:	sbb    al,0xf2
  41e5d3:	mov    DWORD PTR [eax],eax
  41e5d5:	sbb    bh,bh
  41e5d7:	add    ah,cl
  41e5d9:	push   esp
  41e5da:	or     DWORD PTR [ecx+0x63806d8],0xffffff83
  41e5e1:	call   0xadcbe55a
  41e5e6:	mov    DWORD PTR [eax],eax
  41e5e8:	jmp    FWORD PTR [eax]
  41e5ea:	add    bh,bh
  41e5ec:	sub    edx,DWORD PTR [ecx+eax*2]
  41e5ef:	add    BYTE PTR [eax],al
  41e5f1:	jb     0x41e5dd
  41e5f3:	int3   
  41e5f4:	(bad)  
  41e5f5:	in     eax,dx
  41e5f6:	int3   
  41e5f7:	int3   
  41e5f8:	int3   
  41e5f9:	mov    dl,0x0
  41e5fb:	push   edx
  41e5fd:	call   0xff95:0xc4ff1c15
  41e604:	add    BYTE PTR [eax-0x34],bh
  41e607:	int3   
  41e608:	jmp    DWORD PTR ds:0x8f380000
  41e60e:	or     eax,0xb5aff14
  41e613:	add    bh,bh
  41e615:	or     eax,DWORD PTR [eax]
  41e617:	or     DWORD PTR [ecx-0x2100002c],0x4b
  41e61e:	mov    esi,0x1aabff68
  41e623:	(bad)  
  41e624:	call   FWORD PTR [ecx-0x77]
  41e627:	(bad)  
  41e628:	(bad)  
  41e629:	jp     0x41e62b
  41e62b:	mov    DWORD PTR [ecx-0x336e1efe],ecx
  41e631:	das    
  41e632:	sbb    al,BYTE PTR [ebx-0x7c332600]
  41e638:	call   FWORD PTR [ecx-0x2c910001]
  41e63e:	xchg   esi,eax
  41e63f:	push   ds
  41e640:	int3   
  41e641:	add    eax,0xe9ffffa2
  41e646:	dec    DWORD PTR [ecx+0x7b83]
  41e64c:	jne    0x41e645
  41e64e:	repnz inc ecx
  41e650:	jmp    FWORD PTR [ecx+eax*2-0x77]
  41e654:	sub    DWORD PTR [esi+0x4effff00],0xffffffff
  41e65b:	call   esi
  41e65d:	or     al,0xe2
  41e65f:	jle    0x41e661
  41e661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e662:	mov    DWORD PTR fs:[eax],eax
  41e665:	fdivr  st,st(7)
  41e667:	(bad)  
  41e668:	inc    DWORD PTR [edi+edi*8]
  41e66b:	push   DWORD PTR [esi]
  41e66d:	ins    DWORD PTR es:[edi],dx
  41e66e:	(bad)  
  41e66f:	ins    DWORD PTR es:[edi],dx
  41e670:	call   FWORD PTR [esi+ebx*2-0x76cd007d]
  41e677:	dec    esp
  41e679:	sbb    BYTE PTR [eax],al
  41e67b:	(bad)  
  41e67c:	jmp    0x41e6bf
  41e67e:	pop    ecx
  41e67f:	mov    esi,0xff795aff
  41e684:	push   DWORD PTR ds:0xc100ffff
  41e68a:	add    bh,bh
  41e68c:	mov    al,0xcf
  41e68e:	cli    
  41e68f:	mov    ebp,0x83843cff
  41e694:	int3   
  41e695:	arpl   di,di
  41e697:	dec    esp
  41e699:	aam    0x0
  41e69b:	add    BYTE PTR [eax],ah
  41e69d:	add    eax,0x5effbe28
  41e6a2:	inc    BYTE PTR [ebx-0x76009d01]
  41e6a8:	add    BYTE PTR [ecx-0x701d007d],al
  41e6ae:	push   ebx
  41e6af:	ins    DWORD PTR es:[edi],dx
  41e6b0:	add    dl,bh
  41e6b2:	mov    edi,0x8354ff00
  41e6b7:	add    bh,bh
  41e6b9:	adc    al,0xff
  41e6bb:	add    BYTE PTR [edx+0x514d03],bl
  41e6c1:	lea    eax,fs:[eax]
  41e6c4:	mov    DWORD PTR [edi-0x1],ecx
  41e6c7:	dec    esp
  41e6c9:	(bad)  
  41e6ca:	add    bh,bh
  41e6cc:	push   0x45
  41e6ce:	js     0x41e6ab
  41e6d0:	jmp    DWORD PTR [ebx]
  41e6d2:	dec    eax
  41e6d3:	inc    DWORD PTR [eax]
  41e6d5:	mov    edx,0x2ff0083
  41e6da:	inc    DWORD PTR [eax]
  41e6dc:	push   es
  41e6dd:	xchg   BYTE PTR [edx-0x72100ba],dl
  41e6e3:	int3   
  41e6e4:	add    ah,dl
  41e6e6:	add    bh,bh
  41e6e8:	dec    DWORD PTR [esi]
  41e6ea:	add    bh,bh
  41e6ec:	xchg   edx,eax
  41e6ed:	add    edx,DWORD PTR [edx-0x5866ffcb]
  41e6f3:	add    bh,bh
  41e6f5:	sub    al,0x0
  41e6f7:	add    bh,bh
  41e6f9:	mov    ?,edi
  41e6fb:	sub    DWORD PTR [ecx-0x749728],0x39
  41e702:	jae    0x41e703
  41e704:	add    BYTE PTR [ebx+0x548383ff],dl
  41e70a:	cmp    edi,0xffffffa7
  41e70d:	xor    DWORD PTR [ecx+0x5b],ecx
  41e710:	add    BYTE PTR [ecx],dl
  41e712:	mov    edi,edi
  41e714:	jmp    FWORD PTR ds:0xf7ffffff
  41e71a:	dec    esp
  41e71c:	in     eax,0xee
  41e71e:	pop    ebp
  41e71f:	mov    al,ds:0xfb98ff
  41e724:	sbb    ebp,0xffffff89
  41e727:	mov    edi,edi
  41e729:	xchg   edi,eax
  41e72a:	add    BYTE PTR [eax],al
  41e72c:	and    al,0x67
  41e72e:	xchg   DWORD PTR [ebx+eax*4],ebx
  41e731:	cdq    
  41e732:	adc    eax,0x3b89ff
  41e737:	inc    DWORD PTR [eax]
  41e739:	fisttp QWORD PTR [ecx+0x28566883]
  41e73f:	dec    ecx
  41e740:	call   edi
  41e742:	repnz inc DWORD PTR [eax]
  41e745:	test   al,0x0
  41e747:	mov    DWORD PTR [ebx+0x52ff8926],eax
  41e74d:	xchg   ebx,eax
  41e74e:	xor    BYTE PTR [esi-0x77],ch
  41e751:	(bad)  
  41e752:	xlat   BYTE PTR ds:[ebx]
  41e753:	inc    DWORD PTR [eax]
  41e755:	fld    DWORD PTR [eax]
  41e757:	dec    esp
  41e759:	mov    edi,edi
  41e75b:	add    BYTE PTR ds:0x3cd910,al
  41e761:	dec    edx
  41e762:	push   esp
  41e763:	add    bh,bh
  41e765:	aad    0xcc
  41e767:	(bad)  
  41e768:	push   DWORD PTR [ebx]
  41e76a:	add    BYTE PTR [eax],al
  41e76c:	mov    ah,0x46
  41e76e:	cdq    
  41e76f:	add    ecx,DWORD PTR [ecx-0x332fc6]
  41e775:	fiadd  WORD PTR [ebx-0x28ff01]
  41e77b:	add    BYTE PTR [edi-0x13],al
  41e77e:	aam    0x12
  41e780:	dec    DWORD PTR [edx-0x72]
  41e783:	(bad)  
  41e784:	inc    DWORD PTR [edi]
  41e786:	inc    DWORD PTR [eax]
  41e788:	add    BYTE PTR [edx-0x7d],dl
  41e78b:	call   FWORD PTR [edx+edi*8-0x2]
  41e78f:	add    edi,edi
  41e791:	lds    esi,FWORD PTR [ebx]
  41e793:	add    BYTE PTR [eax],al
  41e795:	popa   
  41e796:	int3   
  41e797:	add    bh,bh
  41e799:	sti    
  41e79a:	add    bh,bh
  41e79c:	inc    ecx
  41e79d:	pop    edx
  41e79e:	sub    esi,esp
  41e7a0:	dec    DWORD PTR [edi]
  41e7a2:	cmp    DWORD PTR [eax],eax
  41e7a4:	cmp    DWORD PTR [eax+eax*1],0xffffffcc
  41e7a8:	call   ecx
  41e7aa:	(bad)  
  41e7ab:	(bad)  
  41e7ac:	fcomp  DWORD PTR [edx-0x7fff937a]
  41e7b2:	xor    eax,0x420089
  41e7b7:	cmp    edi,0x19
  41e7ba:	inc    DWORD PTR [ebx+0x5519203d]
  41e7c0:	cmp    DWORD PTR [edx-0x9],0xffffffff
  41e7c4:	inc    DWORD PTR [ecx+0x59ffcccc]
  41e7ca:	int3   
  41e7cb:	call   FWORD PTR [ecx+0x116483]
  41e7d1:	pop    esp
  41e7d2:	inc    edx
  41e7d3:	dec    esp
  41e7d5:	int    0x0
  41e7d7:	(bad)  
  41e7d8:	(bad)  
  41e7d9:	(bad)  
  41e7da:	(bad)  
  41e7db:	dec    DWORD PTR [esi+0x29]
  41e7de:	adc    BYTE PTR [ecx+0x2405ff],dh
  41e7e4:	call   DWORD PTR [eax+eax*1+0x6e83ff]
  41e7eb:	push   DWORD PTR [ebp+0x34]
  41e7ee:	neg    BYTE PTR [eax]
  41e7f0:	int3   
  41e7f1:	push   cs
  41e7f2:	xchg   esp,eax
  41e7f3:	(bad)  
  41e7f4:	jmp    DWORD PTR [eax-0x6300ff34]
  41e7fa:	dec    DWORD PTR [ecx+0x18b813d5]
  41e800:	add    bh,al
  41e802:	test   DWORD PTR [eax],0xff006200
  41e808:	cmp    DWORD PTR [eax],0xffffff83
  41e80b:	(bad)  
  41e80c:	clc    
  41e80d:	jne    0x41e7ba
  41e80f:	int    0xff
  41e811:	push   ds
  41e812:	and    eax,0x838a8300
  41e817:	dec    DWORD PTR [ecx+0x45ff83e4]
  41e81d:	sbb    ah,bh
  41e81f:	jmp    0x1ff:0x839daeff
  41e826:	inc    DWORD PTR [eax]
  41e828:	add    bh,dl
  41e82a:	inc    DWORD PTR [ebx-0x5ba78cae]
  41e830:	call   DWORD PTR [esp+ebp*4+0x0]
  41e834:	add    dh,dl
  41e836:	cmp    edi,0xffffffff
  41e839:	repnz inc DWORD PTR [eax]
  41e83c:	adc    BYTE PTR [edx-0x6f0050d8],bl
  41e842:	ror    BYTE PTR [ecx-0x76005b01],1
  41e848:	jmp    ebx
  41e84a:	add    bh,bh
  41e84c:	jnp    0x41e844
  41e84e:	jmp    0x77dce8dd
  41e853:	add    bh,bh
  41e855:	adc    bh,bh
  41e857:	cmp    edi,0xffffffee
  41e85a:	cmp    edi,0x38
  41e85d:	add    BYTE PTR [ecx+eiz*8],dl
  41e860:	or     ebp,0xffffff84
  41e863:	inc    DWORD PTR [eax]
  41e865:	xchg   ah,cl
  41e867:	add    ah,cl
  41e869:	and    edi,edi
  41e86b:	add    esp,0xffffffe5
  41e86e:	leave  
  41e86f:	or     DWORD PTR [ebx-0x768916],eax
  41e875:	aad    0xff
  41e877:	add    DWORD PTR [eax],0x8
  41e87a:	int3   
  41e87b:	mov    DWORD PTR [eax],ebx
  41e87d:	rol    DWORD PTR [eax+0x62],cl
  41e880:	add    DWORD PTR [esi+0x12],0x0
  41e884:	adc    DWORD PTR [edx-0x7d],0xffffffff
  41e888:	inc    DWORD PTR [edi-0x1]
  41e88b:	dec    DWORD PTR [edi+0xc85bef]
  41e891:	sub    bl,cl
  41e893:	inc    DWORD PTR [ebx-0x3300ff62]
  41e899:	cwde   
  41e89a:	(bad)  
  41e89b:	inc    DWORD PTR [edi+0x5e]
  41e89e:	ret    
  41e89f:	in     al,dx
  41e8a0:	add    BYTE PTR [esi-0x19ff00d7],dh
  41e8a6:	add    DWORD PTR [eax],0x0
  41e8a9:	in     al,dx
  41e8aa:	add    BYTE PTR [eax],al
  41e8ac:	retf   
  41e8ad:	lmsw   dx
  41e8b0:	or     DWORD PTR [esi],0xfffffff4
  41e8b3:	add    ah,cl
  41e8b5:	pop    eax
  41e8b6:	inc    DWORD PTR [eax]
  41e8b8:	int3   
  41e8b9:	dec    esp
  41e8ba:	(bad)  
  41e8bb:	dec    DWORD PTR [edi-0xc1b1e7]
  41e8c1:	inc    esi
  41e8c2:	fdivr  st,st(7)
  41e8c4:	dec    ebp
  41e8c6:	inc    DWORD PTR [ebx-0xff5001]
  41e8cc:	imul   edi,DWORD PTR [edi+ecx*2-0x3aa30098],0xffffffff
  41e8d4:	inc    DWORD PTR [ecx-0x1]
  41e8d7:	cmp    edi,0x6
  41e8da:	int3   
  41e8db:	inc    DWORD PTR [esi+0x1b]
  41e8de:	pop    ecx
  41e8df:	int3   
  41e8e0:	or     DWORD PTR [esi+0x52],0xffffffff
  41e8e4:	add    BYTE PTR [eax-0x46010000],cl
  41e8ea:	(bad)  
  41e8eb:	inc    DWORD PTR [ecx+0x32]
  41e8ee:	pop    esi
  41e8ef:	cmp    al,0x0
  41e8f1:	fs xchg esi,eax
  41e8f3:	inc    DWORD PTR [eax]
  41e8f5:	std    
  41e8f6:	jno    0x41e8f8
  41e8f8:	add    ah,dl
  41e8fa:	rol    DWORD PTR [ebx-0xe39001],1
  41e900:	mov    DWORD PTR [eax],ebp
  41e902:	adc    BYTE PTR [eax],al
  41e904:	inc    DWORD PTR [esi+edx*2-0x24d40001]
  41e90b:	inc    DWORD PTR [ebx-0x7cb404]
  41e911:	add    eax,0xd2ff8933
  41e916:	xchg   esi,eax
  41e917:	(bad)  
  41e918:	dec    DWORD PTR [edi]
  41e91a:	scas   al,BYTE PTR es:[edi]
  41e91b:	mov    edi,edi
  41e91d:	or     BYTE PTR [ebx],0xcc
  41e920:	mov    ebp,edi
  41e922:	jno    0x41e924
  41e924:	int3   
  41e925:	push   es
  41e926:	cmp    al,BYTE PTR [ebx-0x507101]
  41e92c:	inc    DWORD PTR [ebx+0x4]
  41e92f:	add    bh,bh
  41e931:	aad    0x3d
  41e933:	dec    esp
  41e935:	nop
  41e936:	pusha  
  41e937:	add    BYTE PTR [eax],al
  41e939:	mov    esp,0xc5ffffc3
  41e93e:	pop    es
  41e93f:	inc    DWORD PTR [ebx-0xff9771]
  41e945:	in     al,0x75
  41e947:	add    bh,bh
  41e949:	hlt    
  41e94a:	jp     0x41e94b
  41e94c:	int3   
  41e94d:	fdiv   QWORD PTR [eax+0x5b6dff89]
  41e953:	inc    DWORD PTR [eax]
  41e955:	mov    bh,0xeb
  41e957:	add    BYTE PTR [eax],al
  41e959:	jae    0x41e977
  41e95b:	(bad)  
  41e95c:	dec    DWORD PTR [edx]
  41e95e:	jno    0x41e95f
  41e960:	sub    DWORD PTR [ebp-0x41],0xffffffcc
  41e964:	int3   
  41e965:	mov    ebp,0x6bff834c
  41e96a:	idiv   edi
  41e96c:	add    BYTE PTR [ebx-0x6],cl
  41e96f:	(bad)  
  41e970:	dec    DWORD PTR [eax+0x42]
  41e973:	add    bh,bh
  41e975:	pop    ss
  41e976:	xchg   edx,eax
  41e977:	(bad)  
  41e978:	push   DWORD PTR [ebp-0x710000a6]
  41e97e:	fiadd  DWORD PTR [ebx+0xcffaff]
  41e984:	int3   
  41e985:	jp     0x41e92f
  41e987:	(bad)  
  41e988:	dec    DWORD PTR [ecx-0x72]
  41e98b:	int3   
  41e98c:	mov    DWORD PTR [eax+0x6],esp
  41e98f:	inc    DWORD PTR [ebx+0xff040f]
  41e995:	sar    BYTE PTR [eax+0x876cccc],0xff
  41e99c:	dec    DWORD PTR [ebx-0x876766c]
  41e9a2:	bound  eax,QWORD PTR [ebx+0x95f83]
  41e9a8:	int3   
  41e9a9:	sub    BYTE PTR ds:0xaf1400ff,0xff
  41e9b0:	add    BYTE PTR [eax+ecx*8],al
  41e9b3:	inc    DWORD PTR [eax]
  41e9b5:	aam    0xf7
  41e9b7:	int3   
  41e9b8:	add    BYTE PTR [eax-0x527cffac],cl
  41e9be:	ret    
  41e9bf:	inc    DWORD PTR [eax]
  41e9c1:	xchg   BYTE PTR cs:[eax],al
  41e9c4:	push   DWORD PTR [edx-0x3dff003c]
  41e9ca:	sar    edi,1
  41e9cc:	adc    DWORD PTR [eax],0x53
  41e9cf:	mov    DWORD PTR [eax],eax
  41e9d1:	call   0xffd7:0xa5ff0027
  41e9d8:	push   DWORD PTR [ecx]
  41e9da:	lock (bad) 
  41e9dc:	push   DWORD PTR [edi+edi*2-0x42910001]
  41e9e3:	(bad)  
  41e9e4:	(bad)  
  41e9e5:	fiadd  WORD PTR [edi]
  41e9e7:	dec    esp
  41e9e9:	ret    0x9c
  41e9ec:	add    BYTE PTR [esp+ecx*8],dl
  41e9ef:	int3   
  41e9f0:	add    BYTE PTR [esi+ebx*8],bh
  41e9f3:	int3   
  41e9f4:	call   DWORD PTR [edi+0xdffff96]
  41e9fa:	push   ecx
  41e9fb:	(bad)  
  41e9fc:	(bad)  
  41e9fd:	fadd   QWORD PTR [ebx]
  41e9ff:	inc    DWORD PTR [eax]
  41ea01:	(bad)  
  41ea02:	rol    BYTE PTR [eax],0x83
  41ea05:	mov    dh,0x14
  41ea07:	cmp    edi,0xffffffe7
  41ea0a:	pop    edx
  41ea0b:	add    BYTE PTR [eax],al
  41ea0d:	jg     0x41ea1e
  41ea0f:	add    BYTE PTR [ecx+0xffb419],cl
  41ea15:	pop    esp
  41ea16:	jo     0x41e9a1
  41ea18:	and    DWORD PTR [eax+0xbffff57],0x1d
  41ea1f:	dec    DWORD PTR [ecx-0xf382]
  41ea25:	sub    DWORD PTR [ebx+0x285ffff],ebp
  41ea2b:	add    BYTE PTR [eax],al
  41ea2d:	and    eax,0xd8ffcc5a
  41ea32:	dec    ecx
  41ea33:	dec    esp
  41ea35:	call   0x1ec4ead1
  41ea3a:	imul   edi,edi,0xf4d4ff
  41ea40:	(bad)  
  41ea41:	aas    
  41ea42:	jle    0x41e9c7
  41ea44:	add    BYTE PTR [edx+ecx*4-0x7d],cl
  41ea48:	add    cl,cl
  41ea4a:	retf   
  41ea4b:	inc    DWORD PTR [eax]
  41ea4d:	pop    eax
  41ea4e:	scas   eax,DWORD PTR es:[edi]
  41ea4f:	mov    edi,edi
  41ea51:	mov    ebp,0x47fffff9
  41ea56:	pop    edi
  41ea57:	int3   
  41ea58:	jmp    FWORD PTR [esi+0x4ffffec]
  41ea5e:	xchg   ebp,eax
  41ea5f:	dec    esp
  41ea61:	hlt    
  41ea62:	inc    ecx
  41ea63:	(bad)  
  41ea64:	jmp    FWORD PTR ds:0x3bffff0a
  41ea6a:	dec    esp
  41ea6b:	add    BYTE PTR [eax],al
  41ea6d:	jecxz  0x41ead9
  41ea6f:	add    DWORD PTR [eax],0x20
  41ea72:	mov    ebp,0x8ccffff
  41ea77:	inc    DWORD PTR [ebx-0x76ff9e33]
  41ea7d:	test   BYTE PTR [esi-0x3cd70001],ch
  41ea83:	(bad)  
  41ea84:	jmp    DWORD PTR [esi+0x15]
  41ea87:	dec    esp
  41ea89:	inc    ebp
  41ea8a:	mov    al,0xff
  41ea8c:	mov    DWORD PTR [esi+0x65],ebp
  41ea8f:	inc    DWORD PTR [eax]
  41ea91:	xchg   DWORD PTR [ebp+0x2e9a0000],esp
  41ea97:	(bad)  
  41ea98:	push   DWORD PTR [eax-0x15007cb9]
  41ea9e:	or     al,0xff
  41eaa0:	(bad)  
  41eaa1:	cli    
  41eaa2:	leave  
  41eaa3:	(bad)  
  41eaa4:	inc    DWORD PTR [ebx-0x57]
  41eaa7:	int3   
  41eaa8:	call   DWORD PTR [edi-0x430000d2]
  41eaae:	mov    al,ds:0x8b6c00ff
  41eab3:	add    BYTE PTR [eax],al
  41eab5:	mov    ebx,0xd083005b
  41eaba:	loop   0x41ea3f
  41eabc:	xor    edi,0xffffffe1
  41eabf:	(bad)  
  41eac0:	(bad)  
  41eac1:	cmp    al,0x9e
  41eac3:	cmp    edi,0xffffff86
  41eac6:	cdq    
  41eac7:	(bad)  
  41eac8:	push   DWORD PTR [edx-0x1e]
  41eacb:	inc    DWORD PTR [ebx+0xb56]
  41ead1:	lods   eax,DWORD PTR ds:[esi]
  41ead2:	ins    BYTE PTR es:[edi],dx
  41ead3:	inc    DWORD PTR [eax]
  41ead5:	div    DWORD PTR [esi-0x3cd30001]
  41eadb:	add    BYTE PTR [eax],al
  41eadd:	(bad)
  41eae0:	sub    edx,0x2d
  41eae3:	add    DWORD PTR [ebx-0x3aa8],0x53
  41eaea:	add    DWORD PTR ds:[ebx-0x33e67c],0xffffff91
  41eaf2:	arpl   di,di
  41eaf4:	sub    DWORD PTR [ebp+0x7d83ff25],0xffffffd5
  41eafb:	int3   
  41eafc:	dec    DWORD PTR [esi-0x7200ff0f]
  41eb02:	xor    eax,0xbba1cc83
  41eb07:	(bad)  
  41eb08:	call   FWORD PTR [esi-0x41]
  41eb0b:	inc    DWORD PTR [eax]
  41eb0d:	adc    DWORD PTR [ebx+0x2080ff00],eax
  41eb13:	add    BYTE PTR [ebx-0x33e007],al
  41eb19:	ret    
  41eb1a:	js     0x41eb1b
  41eb1c:	int3   
  41eb1d:	push   es
  41eb1e:	(bad)  
  41eb20:	int3   
  41eb21:	cwde   
  41eb22:	rol    BYTE PTR [ebx+0x1483],1
  41eb28:	call   FWORD PTR [edx-0x1f00ffea]
  41eb2e:	leave  
  41eb2f:	add    BYTE PTR [eax],al
  41eb31:	call   0x416f2a
  41eb36:	icebp  
  41eb37:	inc    DWORD PTR [eax]
  41eb39:	shr    BYTE PTR [ebx],0xff
  41eb3c:	add    BYTE PTR ds:0xe5ff83d8,bh
  41eb42:	mov    ecx,esp
  41eb44:	add    BYTE PTR [ecx+0x1a],ch
  41eb47:	mov    DWORD PTR [eax],eax
  41eb49:	popf   
  41eb4a:	cmp    ecx,DWORD PTR [ecx+0x1299ff]
  41eb50:	call   DWORD PTR [esi+eax*4-0x1]
  41eb54:	add    cl,bl
  41eb56:	mov    es,WORD PTR [eax]
  41eb58:	or     DWORD PTR [ebx],0xffffffe7
  41eb5b:	mov    edi,edi
  41eb5d:	cli    
  41eb5e:	hlt    
  41eb5f:	(bad)  
  41eb60:	dec    DWORD PTR [ebx]
  41eb62:	sub    edi,edi
  41eb64:	add    BYTE PTR [ebx+edi*1+0x0],dl
  41eb68:	add    bl,dl
  41eb6a:	mov    bh,0xff
  41eb6c:	add    BYTE PTR [ebx+ebx*4-0x1b10001],al
  41eb73:	add    bh,bh
  41eb75:	outs   dx,DWORD PTR ds:[esi]
  41eb76:	nop
  41eb77:	cmp    edi,0xffffffb6
  41eb7a:	jbe    0x41eb7b
  41eb7c:	(bad)  
  41eb7d:	cmp    ecx,DWORD PTR [edx+0x4e2083ff]
  41eb83:	(bad)  
  41eb84:	call   FWORD PTR ds:0x97ff0024
  41eb8a:	adc    eax,0x3e0f8389
  41eb8f:	(bad)  
  41eb90:	jmp    DWORD PTR [ecx+0x23]
  41eb93:	add    DWORD PTR [eax],0x60
  41eb96:	fadd   QWORD PTR [eax]
  41eb98:	dec    DWORD PTR [edx+0x7dffffa1]
  41eb9e:	xchg   ebx,eax
  41eb9f:	cmp    edi,0x11
  41eba2:	retf   0x89ff
  41eba5:	and    BYTE PTR [ecx-0x1],bh
  41eba8:	jmp    DWORD PTR [ebp-0x6d76004e]
  41ebae:	(bad)  
  41ebaf:	inc    DWORD PTR [eax]
  41ebb1:	xchg   esp,eax
  41ebb2:	retf   0x0
  41ebb5:	lock out 0xff,al
  41ebb8:	mov    DWORD PTR [edi-0x7b7c00ce],eax
  41ebbe:	and    eax,0xb0c10089
  41ebc3:	(bad)  
  41ebc4:	push   DWORD PTR [ecx*8+0x49e5cc00]
  41ebcb:	add    bh,bh
  41ebcd:	and    ecx,DWORD PTR [esi]
  41ebcf:	add    BYTE PTR [ecx-0xff755f],cl
  41ebd5:	cmp    edx,ecx
  41ebd7:	or     esp,0xffffff92
  41ebda:	mov    ds:0x6e7883cc,al
  41ebdf:	mov    edi,edi
  41ebe1:	sbb    ebx,edx
  41ebe3:	(bad)  
  41ebe4:	inc    DWORD PTR [edi+0x79]
  41ebe7:	inc    DWORD PTR [ebx-0xaebe]
  41ebed:	repz xlat BYTE PTR ds:[ebx]
  41ebef:	int3   
  41ebf0:	mov    ebp,ebx
  41ebf2:	lahf   
  41ebf3:	int3   
  41ebf4:	add    BYTE PTR ds:0xb4ff00fe,cl
  41ebfa:	int3   
  41ebfb:	(bad)  
  41ebfc:	jmp    FWORD PTR [ebx]
  41ebfe:	mov    edi,?
  41ec00:	(bad)  
  41ec01:	mov    edx,0x2aff00d4
  41ec06:	add    DWORD PTR [bp+di+0x3bf],0xffffffff
  41ec0c:	mov    DWORD PTR [edi+0x6c008318],edi
  41ec12:	mov    edi,0xd31e00ff
  41ec17:	inc    DWORD PTR [eax]
  41ec19:	loop   0x41ec30
  41ec1b:	(bad)  
  41ec1c:	(bad)  
  41ec1d:	jl     0x41ec58
  41ec1f:	add    bh,bh
  41ec21:	push   esp
  41ec22:	pop    ebx
  41ec23:	add    BYTE PTR [eax],al
  41ec25:	iret   
  41ec26:	cmp    edi,0x0
  41ec29:	not    DWORD PTR [ecx]
  41ec2b:	int3   
  41ec2c:	int3   
  41ec2d:	xchg   ebp,eax
  41ec2e:	sub    eax,0x9c3d8983
  41ec33:	add    bh,bh
  41ec35:	pusha  
  41ec36:	add    bh,bh
  41ec38:	add    BYTE PTR [eax],dh
  41ec3a:	push   ss
  41ec3b:	int3   
  41ec3c:	dec    DWORD PTR [ecx-0x6e000005]
  41ec42:	pop    ebx
  41ec43:	add    DWORD PTR [eax],0xffffff8e
  41ec46:	retf   
  41ec47:	inc    DWORD PTR [ebx+0xff2967]
  41ec4d:	(bad)  
  41ec4e:	or     bh,bh
  41ec50:	add    BYTE PTR [ebp+0x560000af],bl
  41ec56:	aam    0xff
  41ec58:	call   edx
  41ec5a:	mov    ds:0xc4c00089,al
  41ec5f:	inc    DWORD PTR [ebx-0x7c090c]
  41ec65:	in     eax,dx
  41ec66:	sahf   
  41ec67:	add    bh,bh
  41ec69:	jno    0x41ebf4
  41ec6b:	mov    DWORD PTR [ebx-0xeed6],eax
  41ec71:	gs or  edi,edi
  41ec74:	mov    DWORD PTR [esp+ecx*1-0x7d],edi
  41ec78:	cmp    DWORD PTR [esi-0x47],0xffffffff
  41ec7c:	and    DWORD PTR [eax-0x72],0xffffffff
  41ec80:	call   FWORD PTR [edx+0xcff00e8]
  41ec86:	test   DWORD PTR [ecx+0xaa7f00],ecx
  41ec8c:	add    BYTE PTR [eax],cl
  41ec8e:	das    
  41ec8f:	(bad)  
  41ec90:	dec    DWORD PTR [esi+0x6c]
  41ec93:	add    BYTE PTR [eax],al
  41ec95:	(bad)  
  41ec96:	and    edi,edi
  41ec98:	push   ecx
  41ec9a:	rol    DWORD PTR [eax],0x83
  41ec9d:	lds    ebp,FWORD PTR [ebp+0x488000ff]
  41eca3:	add    ah,cl
  41eca5:	and    edi,eax
  41eca7:	(bad)  
  41eca8:	call   FWORD PTR [esp+ebp*4-0x1]
  41ecac:	add    dh,bh
  41ecae:	adc    edi,edi
  41ecb0:	add    BYTE PTR [edi-0x1d330036],ah
  41ecb6:	sar    bh,1
  41ecb8:	and    DWORD PTR [edx+0x30],0x0
  41ecbc:	add    BYTE PTR [eax],cl
  41ecbe:	ja     0x41ecc0
  41ecc0:	and    esp,0x4d
  41ecc3:	int3   
  41ecc4:	call   FWORD PTR [esp+ebp*4]
  41ecc7:	dec    esp
  41ecc9:	add    BYTE PTR [eax],dh
  41eccb:	add    bh,bh
  41eccd:	fld    QWORD PTR [edi+0x0]
  41ecd0:	(bad)  
  41ecd1:	mov    esi,0xb4000095
  41ecd6:	cli    
  41ecd7:	(bad)  
  41ecd8:	jmp    DWORD PTR [edx+0x46ffffbb]
  41ecde:	sbb    eax,0x2d18383
  41ece3:	(bad)  
  41ece4:	(bad)  
  41ece5:	std    
  41ece6:	gs add bh,bh
  41ece9:	stc    
  41ecea:	push   0x0
  41ecec:	or     DWORD PTR [edi-0xa],0xffffff83
  41ecf0:	jmp    eax
  41ecf2:	inc    eax
  41ecf3:	(bad)  
  41ecf4:	push   DWORD PTR [ecx-0x7400005a]
  41ecfa:	and    al,BYTE PTR [eax]
  41ecfc:	call   DWORD PTR [ecx-0x37]
  41ecff:	(bad)  
  41ed00:	push   eax
  41ed02:	push   ebx
  41ed03:	(bad)  
  41ed04:	call   DWORD PTR [ebp-0x7b]
  41ed07:	inc    DWORD PTR [eax]
  41ed09:	ja     0x41ed65
  41ed0b:	add    DWORD PTR [eax],0xa
  41ed0e:	push   es
  41ed0f:	mov    DWORD PTR [ecx-0x3300e79e],ecx
  41ed15:	cwde   
  41ed16:	ud0    ecx,esp
  41ed19:	cmp    bh,BYTE PTR [eax-0x1]
  41ed1c:	push   DWORD PTR [eax]
  41ed1e:	mov    BYTE PTR [eax],0xff
  41ed21:	shl    BYTE PTR [edi+edi*8-0x1],cl
  41ed25:	clc    
  41ed26:	call   0x83:0xf98a00ff
  41ed2d:	and    BYTE PTR [edi+edi*8+0xf8f4ff],ah
  41ed34:	push   DWORD PTR [ebx+0x2289832e]
  41ed3a:	sbb    bh,bh
  41ed3c:	xor    DWORD PTR [ebp-0x5ff005a],0x7c
  41ed43:	add    ah,cl
  41ed45:	bound  eax,QWORD PTR [ecx+0x0]
  41ed48:	add    BYTE PTR [eax-0x6dffff87],ch
  41ed4e:	int3   
  41ed4f:	(bad)  
  41ed50:	(bad)  
  41ed51:	cmp    esp,DWORD PTR [ebp-0x1]
  41ed54:	add    bl,ah
  41ed56:	repnz add BYTE PTR [eax],al
  41ed59:	mov    bh,BYTE PTR [ebp+0x0]
  41ed5c:	add    DWORD PTR [edi],0x50
  41ed5f:	add    bh,bh
  41ed61:	jns    0x41edde
  41ed63:	int3   
  41ed64:	and    DWORD PTR [ecx-0x63],0x0
  41ed68:	(bad)  
  41ed69:	jle    0x41ed59
  41ed6b:	add    bh,bh
  41ed6d:	arpl   bp,bx
  41ed6f:	mov    DWORD PTR [eax],eax
  41ed71:	pop    esi
  41ed72:	push   esp
  41ed73:	add    bh,bh
  41ed75:	stc    
  41ed76:	add    DWORD PTR [eax],0x895c55ff
  41ed7c:	add    BYTE PTR [esi+edx*4],dl
  41ed7f:	inc    DWORD PTR [ebx-0x330079ee]
  41ed85:	add    dh,BYTE PTR [ecx+0x4225ffff]
  41ed8b:	add    DWORD PTR [eax],0x34
  41ed8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed8f:	cmp    edi,0x75
  41ed92:	icebp  
  41ed93:	cmp    edi,0x79
  41ed96:	popa   
  41ed97:	mov    DWORD PTR [ebx+0xa756],eax
  41ed9d:	aas    
  41ed9e:	mov    al,ds:0x3c6ff00
  41eda3:	(bad)  
  41eda4:	inc    DWORD PTR [esi]
  41eda6:	mov    al,BYTE PTR [eax]
  41eda8:	add    esp,0xffffffce
  41edab:	add    DWORD PTR [eax],0x2f
  41edae:	sbb    eax,0x7752ffff
  41edb3:	(bad)  
  41edb4:	jmp    esi
  41edb6:	lods   eax,DWORD PTR ds:[esi]
  41edb7:	(bad)  
  41edb8:	(bad)  
  41edb9:	aas    
  41edba:	jmp    0x41edbb
  41edbc:	(bad)  
  41edbd:	jmp    0xd441ecf9
  41edc2:	sldt   WORD PTR [ebx+0xbd7d]
  41edc9:	mov    bh,0xaa
  41edcb:	mov    DWORD PTR [ecx-0x7cff16c3],ecx
  41edd1:	gs jno 0x41edd3
  41edd4:	int3   
  41edd5:	sbb    DWORD PTR [ebx+0x0],edx
  41edd8:	int3   
  41edd9:	outs   dx,DWORD PTR ds:[esi]
  41edda:	inc    DWORD PTR [eax]
  41eddc:	add    bh,bh
  41edde:	add    edi,edi
  41ede0:	add    BYTE PTR [edx+0xeff0039],cl
  41ede6:	cmp    edi,0x4bb7ff
  41edec:	mov    DWORD PTR [edi-0x16ff005a],eax
  41edf2:	ins    DWORD PTR es:[edi],dx
  41edf3:	(bad)  
  41edf4:	inc    ebx
  41edf6:	ret    
  41edf7:	add    bh,bh
  41edf9:	shl    ebp,1
  41edfb:	add    bh,bh
  41edfd:	lods   eax,DWORD PTR ds:[esi]
  41edfe:	nop
  41edff:	inc    DWORD PTR [ebx+0x17f8]
  41ee05:	sbb    al,0xf8
  41ee07:	inc    DWORD PTR [eax]
  41ee09:	jo     0x41ee39
  41ee0b:	inc    DWORD PTR [ebx-0x33004864]
  41ee11:	test   eax,0x7c00ff63
  41ee16:	pop    es
  41ee17:	add    bh,bh
  41ee19:	call   0x6ec5eddf
  41ee1e:	sub    edi,edi
  41ee20:	add    BYTE PTR [esp+esi*8],bl
  41ee23:	mov    DWORD PTR [ecx-0xbf9f],ecx
  41ee29:	sub    bh,BYTE PTR [ebx-0x7b683301]
  41ee2f:	add    ah,cl
  41ee31:	(bad)  
  41ee32:	sbb    al,0xff
  41ee34:	add    ch,ah
  41ee36:	inc    esp
  41ee37:	dec    esp
  41ee39:	in     al,dx
  41ee3a:	addr16 add bh,bh
  41ee3d:	mov    esp,0x8e00fff2
  41ee42:	cld    
  41ee43:	add    bh,bh
  41ee45:	data16 mov dh,0xff
  41ee48:	(bad)  
  41ee49:	mov    eax,0x3583ffc3
  41ee4e:	sub    al,0x83
  41ee50:	add    BYTE PTR ds:0x3fff8397,cl
  41ee56:	out    0x0,eax
  41ee58:	add    ch,cl
  41ee5a:	and    bh,bh
  41ee5c:	jmp    ecx
  41ee5e:	call   0xff:0xcbd1ff00
  41ee65:	out    dx,eax
  41ee66:	push   ebp
  41ee67:	add    DWORD PTR [ebx-0xffb0a1],0xffffffe1
  41ee6e:	retf   
  41ee6f:	(bad)  
  41ee70:	inc    edi
  41ee72:	cmp    bh,0xff
  41ee75:	mov    al,0x8e
  41ee77:	add    DWORD PTR [eax],0x3c
  41ee7a:	mov    cl,0x0
  41ee7c:	jmp    FWORD PTR [edi+0x6d]
  41ee7f:	int3   
  41ee80:	add    BYTE PTR [eax-0x67],ch
  41ee83:	(bad)  
  41ee84:	jmp    FWORD PTR [ecx]
  41ee86:	ret    
  41ee87:	add    bh,bh
  41ee89:	or     dh,cl
  41ee8b:	int3   
  41ee8c:	or     DWORD PTR [edi+0x3f000014],0xffffffaa
  41ee93:	(bad)  
  41ee94:	jmp    DWORD PTR [ecx-0x5]
  41ee97:	int3   
  41ee98:	add    BYTE PTR [edx],ch
  41ee9a:	arpl   WORD PTR [eax],ax
  41ee9c:	add    bh,dh
  41ee9e:	mov    edi,0xe760ff00
  41eea3:	add    bh,bh
  41eea5:	mov    bh,0x73
  41eea7:	add    DWORD PTR [ebx-0x7c003589],0xfffffff0
  41eeae:	add    BYTE PTR [bx+si],al
  41eeb1:	xor    ebx,ebp
  41eeb3:	inc    DWORD PTR [eax]
  41eeb5:	cli    
  41eeb6:	lods   eax,DWORD PTR ds:[esi]
  41eeb7:	inc    DWORD PTR [eax]
  41eeb9:	(bad)  
  41eeba:	cmp    bh,bh
  41eebc:	jmp    DWORD PTR [edx]
  41eebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eebf:	or     DWORD PTR [ecx-0xe71e],0xffffff88
  41eec6:	nop
  41eec7:	(bad)  
  41eec8:	call   FWORD PTR [ecx+ebx*1+0x4a468900]
  41eecf:	inc    DWORD PTR [ebx-0xff0417]
  41eed5:	add    BYTE PTR [ebp-0x1],al
  41eed8:	dec    DWORD PTR [edx+0x6bff00b9]
  41eede:	push   ecx
  41eedf:	add    bh,bh
  41eee1:	push   ds
  41eee2:	push   es
  41eee3:	add    BYTE PTR [eax],al
  41eee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee6:	cmp    BYTE PTR [ecx-0xe20e00],cl
  41eeec:	inc    DWORD PTR [eax+0x3f]
  41eeef:	int3   
  41eef0:	add    ch,ah
  41eef2:	mov    bh,0xff
  41eef4:	add    BYTE PTR [edi],bl
  41eef6:	push   esi
  41eef7:	cmp    edi,0xffffffb3
  41eefa:	lahf   
  41eefb:	add    bh,bh
  41eefd:	cli    
  41eefe:	jl     0x41ef00
  41ef00:	add    cl,al
  41ef02:	enter  0x83ff,0x8f
  41ef06:	fadd   QWORD PTR [eax]
  41ef08:	add    BYTE PTR [eax+0x68ff00ae],dl
  41ef0e:	gs (bad) 
  41ef10:	(bad)  
  41ef11:	jge    0x41ef8a
  41ef13:	add    BYTE PTR [eax],al
  41ef15:	and    BYTE PTR [edi+edi*8-0x7d],cl
  41ef19:	sti    
  41ef1a:	(bad)  
  41ef1b:	mov    DWORD PTR [eax],eax
  41ef1d:	dec    eax
  41ef1e:	pop    ss
  41ef1f:	(bad)  
  41ef20:	(bad)  
  41ef21:	jmp    0x88:0x4bff00ec
  41ef28:	or     DWORD PTR [edi-0x3300768f],0xffffffc3
  41ef2f:	int3   
  41ef30:	int3   
  41ef31:	ss das 
  41ef33:	add    BYTE PTR [eax],al
  41ef35:	xchg   ecx,eax
  41ef36:	cmp    edi,0x0
  41ef39:	pop    edx
  41ef3a:	dec    ecx
  41ef3b:	mov    edi,edi
  41ef3d:	pop    ss
  41ef3e:	xor    edi,edi
  41ef40:	add    BYTE PTR [ebp+0x45],cl
  41ef43:	cmp    edi,0x3b
  41ef46:	ja     0x41ef48
  41ef48:	(bad)  
  41ef49:	jle    0x41eedf
  41ef4b:	add    BYTE PTR [ebx-0x3333957b],al
  41ef51:	xchg   ebx,eax
  41ef52:	(bad)  
  41ef53:	inc    DWORD PTR [eax]
  41ef55:	push   cs
  41ef56:	inc    DWORD PTR fs:[eax]
  41ef59:	outs   dx,DWORD PTR ds:[esi]
  41ef5a:	imul   eax,DWORD PTR [eax],0xce5f00
  41ef60:	add    ch,ah
  41ef62:	test   BYTE PTR [eax],0x0
  41ef65:	int    0x3d
  41ef67:	add    BYTE PTR [eax],al
  41ef69:	inc    edi
  41ef6a:	cwde   
  41ef6b:	(bad)  
  41ef6c:	push   DWORD PTR [edx-0x7e003386]
  41ef72:	out    dx,al
  41ef73:	add    BYTE PTR [ebx-0x8d3a],al
  41ef79:	cmp    eax,0x9983ffb5
  41ef7e:	pop    esp
  41ef7f:	inc    DWORD PTR [ebx-0x760039f9]
  41ef85:	dec    edi
  41ef86:	and    eax,DWORD PTR [eax]
  41ef88:	push   ebp
  41ef8a:	aas    
  41ef8b:	add    BYTE PTR [ebx-0x7c76fd2e],al
  41ef91:	pop    ebp
  41ef92:	nop
  41ef93:	inc    DWORD PTR [ebx+0xffd78b]
  41ef99:	cmp    ebx,DWORD PTR [edi-0x3b620034]
  41ef9f:	cmp    edi,0xffffffda
  41efa2:	or     al,0x83
  41efa4:	push   DWORD PTR [ecx-0x3b]
  41efa7:	cmp    edi,0xffffffba
  41efaa:	cmp    al,0xff
  41efac:	sub    DWORD PTR [ebp+edi*1+0x5b0eff83],0x0
  41efb4:	add    dl,bl
  41efb6:	jns    0x41efb7
  41efb8:	jmp    DWORD PTR [eax+0x2e]
  41efbb:	dec    DWORD PTR [ecx-0xa487]
  41efc1:	fldenv [ebx+eax*4-0xf04601]
  41efc8:	call   FWORD PTR [ebp+0x5a]
  41efcb:	add    BYTE PTR [eax],al
  41efcd:	(bad)  
  41efce:	scas   eax,DWORD PTR es:[edi]
  41efcf:	add    BYTE PTR [eax],al
  41efd1:	ret    
  41efd2:	xchg   ebx,eax
  41efd3:	(bad)  
  41efd4:	inc    DWORD PTR [edi+esi*4+0x220800ff]
  41efdb:	inc    DWORD PTR [eax]
  41efdd:	mov    ds,WORD PTR [ebx-0x34]
  41efe0:	adc    DWORD PTR [edx-0x4e],0x0
  41efe4:	add    BYTE PTR [esi+0x5b00cc4a],bl
  41efea:	in     al,dx
  41efeb:	(bad)  
  41efec:	jmp    FWORD PTR [eax]
  41efee:	in     eax,0x0
  41eff0:	xor    DWORD PTR [edi+0x4c],0xffffffff
  41eff4:	add    BYTE PTR [ecx+0x6cff00b7],dl
  41effa:	(bad)  
  41effc:	dec    DWORD PTR [ecx]
  41effe:	add    eax,DWORD PTR [eax]
  41f000:	int3   
  41f001:	bound  eax,QWORD PTR [edi]
  41f003:	inc    DWORD PTR [ebx+0xff1a63]
  41f009:	dec    ebp
  41f00a:	mov    ds:0x6bd1ffff,al
  41f00f:	inc    DWORD PTR [ebx+0x654e]
  41f015:	cmc    
  41f016:	out    dx,al
  41f017:	dec    esp
  41f019:	push   0xffffffb8
  41f01b:	add    BYTE PTR [eax],al
  41f01d:	mov    eax,ds:0x8e00ffe3
  41f022:	test   BYTE PTR [ebx-0x635001],al
  41f028:	jmp    DWORD PTR [edx-0x7aff7cd0]
  41f02e:	nop
  41f02f:	(bad)  
  41f030:	jmp    DWORD PTR [edx+0x16ffffe4]
  41f036:	xchg   ebp,eax
  41f037:	add    bh,bh
  41f039:	mov    ah,0x56
  41f03b:	add    bh,bh
  41f03d:	pop    ds
  41f03e:	inc    eax
  41f03f:	inc    DWORD PTR [eax]
  41f041:	and    al,0xa1
  41f043:	int3   
  41f044:	add    BYTE PTR [edi+0x10ffff6c],ch
  41f04a:	js     0x41f04b
  41f04c:	call   DWORD PTR [ebp-0x3]
  41f04f:	(bad)  
  41f050:	jmp    FWORD PTR [edi]
  41f052:	cs (bad) 
  41f054:	(bad)  
  41f055:	sti    
  41f056:	scas   al,BYTE PTR es:[edi]
  41f057:	inc    DWORD PTR [ebx-0xcac2]
  41f05d:	or     dl,BYTE PTR [eax]
  41f05f:	int3   
  41f060:	cmp    DWORD PTR [ebx-0x2c],0xffffffff
  41f064:	push   DWORD PTR [edi+0xff00d7]
  41f06a:	jbe    0x41efef
  41f06c:	(bad)  
  41f06d:	jg     0x41f09a
  41f06f:	dec    DWORD PTR [ecx+0x83cf7e]
  41f075:	adc    ah,BYTE PTR [edi-0x1]
  41f078:	add    BYTE PTR [edx-0xe00ff52],dh
  41f07e:	push   ebx
  41f07f:	(bad)  
  41f080:	jmp    DWORD PTR [edx+edi*4]
  41f083:	inc    DWORD PTR [eax]
  41f085:	jno    0x41f0ba
  41f087:	add    BYTE PTR [eax],al
  41f089:	test   al,0x7a
  41f08b:	inc    DWORD PTR [eax]
  41f08d:	out    dx,eax
  41f08e:	jb     0x41f05c
  41f090:	mov    DWORD PTR [eax],esi
  41f092:	(bad)  
  41f093:	(bad)  
  41f094:	(bad)  
  41f095:	jmp    0x41f066
  41f097:	(bad)  
  41f098:	jmp    FWORD PTR [edi]
  41f09a:	jbe    0x41f09c
  41f09c:	cmp    DWORD PTR [edi],0x5
  41f09f:	cmp    edi,0x6e
  41f0a2:	sbb    edi,edi
  41f0a4:	add    DWORD PTR [edx],0x61
  41f0a7:	add    BYTE PTR [eax],al
  41f0a9:	sbb    BYTE PTR ds:0x734e00ff,bh
  41f0af:	mov    DWORD PTR [ecx+0x15b7],ecx
  41f0b5:	sahf   
  41f0b6:	call   0x83:0xe7adcc89
  41f0bd:	cld    
  41f0be:	cmp    bh,bh
  41f0c0:	(bad)  
  41f0c1:	jnp    0x41f0d0
  41f0c3:	add    BYTE PTR [eax],al
  41f0c5:	add    al,0x3f
  41f0c7:	add    bh,bh
  41f0c9:	ins    BYTE PTR es:[edi],dx
  41f0ca:	pop    ebp
  41f0cb:	add    bh,bh
  41f0cd:	lods   eax,DWORD PTR ds:[esi]
  41f0ce:	mov    dh,0xff
  41f0d0:	sbb    DWORD PTR [edi+0x13],0xffffffcc
  41f0d4:	dec    DWORD PTR [edi-0x3a]
  41f0d7:	inc    DWORD PTR [eax]
  41f0d9:	push   edi
  41f0da:	inc    edi
  41f0db:	add    bh,bh
  41f0dd:	sti    
  41f0de:	retf   
  41f0df:	(bad)  
  41f0e0:	(bad)  
  41f0e1:	out    dx,eax
  41f0e2:	out    0xff,eax
  41f0e4:	call   ebp
  41f0e6:	or     bh,bh
  41f0e8:	(bad)  
  41f0e9:	cld    
  41f0ea:	dec    esi
  41f0eb:	inc    DWORD PTR [eax]
  41f0ed:	jo     0x41f0c0
  41f0ef:	or     esp,0xffffff81
  41f0f2:	rol    BYTE PTR [ebx-0x33badb01],cl
  41f0f8:	add    BYTE PTR ds:0xa2890028,dh
  41f0fe:	push   ebx
  41f0ff:	(bad)  
  41f100:	push   edx
  41f102:	add    al,0x83
  41f104:	add    dh,ch
  41f106:	push   edi
  41f107:	add    bh,bh
  41f109:	dec    ebx
  41f10a:	popa   
  41f10b:	add    bh,bh
  41f10d:	adc    edx,esi
  41f10f:	add    bh,bh
  41f111:	and    DWORD PTR [edx+0xae9ffcc],ebx
  41f117:	dec    esp
  41f119:	adc    cl,BYTE PTR [ebx]
  41f11b:	inc    DWORD PTR [eax]
  41f11d:	push   ecx
  41f11e:	leave  
  41f11f:	add    BYTE PTR [eax],al
  41f121:	or     DWORD PTR [ebp+0x0],edi
  41f124:	add    bl,dh
  41f126:	sub    eax,DWORD PTR [eax]
  41f128:	cmp    DWORD PTR [ecx+0x67],0x0
  41f12c:	jmp    DWORD PTR [ebp+0x1200cc28]
  41f132:	fmul   DWORD PTR [ecx-0xf2287d]
  41f138:	mov    esp,esp
  41f13a:	repnz dec esp
  41f13d:	xchg   esi,eax
  41f13e:	call   0xe137f142
  41f143:	add    bh,bh
  41f145:	push   ss
  41f146:	dec    edx
  41f147:	add    bh,bh
  41f149:	lds    eax,FWORD PTR [ebp-0x1]
  41f14c:	push   DWORD PTR [ebx-0xd007604]
  41f152:	lock add BYTE PTR [eax],al
  41f155:	sbb    edx,ebp
  41f157:	cmp    edi,0xffffffec
  41f15a:	jmp    0xb608bde2
  41f15f:	or     DWORD PTR [ecx-0xff330f],0xffffffd5
  41f166:	mov    ebx,0xbf1f00ff
  41f16b:	add    ah,cl
  41f16d:	adc    BYTE PTR [ecx+0x2dfcff89],bl
  41f173:	add    bh,bh
  41f175:	inc    ebx
  41f176:	fild   DWORD PTR [eax]
  41f178:	add    BYTE PTR [edi],ah
  41f17a:	xchg   ecx,eax
  41f17b:	add    BYTE PTR [ebx-0x7c00f816],al
  41f181:	sbb    DWORD PTR [ecx+0x1434ff00],edx
  41f187:	add    ah,cl
  41f189:	scas   eax,DWORD PTR es:[edi]
  41f18a:	js     0x41f18c
  41f18c:	int3   
  41f18d:	mov    BYTE PTR [ebx],bh
  41f18f:	inc    DWORD PTR [eax]
  41f191:	xchg   esi,eax
  41f192:	jae    0x41f194
  41f194:	add    BYTE PTR [ecx-0x31],ah
  41f197:	mov    edi,edi
  41f199:	and    BYTE PTR [esp+ecx*8-0xa98901],bl
  41f1a0:	xor    DWORD PTR [edx-0x6c],0xffffffff
  41f1a4:	add    BYTE PTR [eax+edx*4+0x0],ah
  41f1a8:	call   FWORD PTR [ebp-0x65]
  41f1ab:	(bad)  
  41f1ac:	(bad)  
  41f1ad:	mov    esp,0x370000af
  41f1b2:	jbe    0x41f137
  41f1b4:	call   DWORD PTR [ecx]
  41f1b6:	fiadd  DWORD PTR [eax]
  41f1b8:	sbb    DWORD PTR [esi+edi*4+0x0],0xffffffff
  41f1bd:	inc    esi
  41f1be:	dec    edx
  41f1bf:	int3   
  41f1c0:	inc    DWORD PTR [ebp+0x2b]
  41f1c3:	inc    DWORD PTR [eax]
  41f1c5:	neg    BYTE PTR ds:0x39f90000
  41f1cb:	dec    esp
  41f1cd:	jne    0x41f19b
  41f1cf:	inc    DWORD PTR [eax]
  41f1d1:	xor    BYTE PTR [edx-0x77],bl
  41f1d4:	add    BYTE PTR [edi-0x4e],bh
  41f1d7:	inc    DWORD PTR [eax]
  41f1d9:	shl    dl,cl
  41f1db:	inc    DWORD PTR [eax]
  41f1dd:	cmp    DWORD PTR [ecx+0x744c00ff],edx
  41f1e3:	(bad)  
  41f1e4:	push   DWORD PTR [eax]
  41f1e6:	mov    al,ds:0x91283ff
  41f1eb:	add    BYTE PTR [ebx-0x7c003f54],al
  41f1f1:	(bad)  
  41f1f2:	clc    
  41f1f3:	add    bh,bh
  41f1f5:	fwait
  41f1f6:	clc    
  41f1f7:	add    ah,cl
  41f1f9:	(bad)  
  41f1fa:	(bad)  
  41f1fb:	(bad)  
  41f1fc:	jmp    FWORD PTR [edx]
  41f1fe:	idiv   bh
  41f200:	call   FWORD PTR [ebx+0x2783ffdd]
  41f206:	or     esp,0xffffff83
  41f209:	or     esp,DWORD PTR [edx-0x1]
  41f20c:	(bad)  
  41f20d:	cli    
  41f20e:	mov    dh,0xff
  41f210:	add    BYTE PTR [edx],bh
  41f212:	gs (bad) 
  41f214:	push   DWORD PTR [edx+edi*8+0x1f9acc00]
  41f21b:	(bad)  
  41f21c:	(bad)  
  41f21d:	ds (bad) 
  41f21f:	cmp    edi,0x1d
  41f222:	adc    al,0x83
  41f224:	mov    DWORD PTR [esi+0x18cccc1b],ecx
  41f22a:	xchg   esi,eax
  41f22b:	inc    DWORD PTR [eax]
  41f22d:	and    al,0x52
  41f22f:	inc    DWORD PTR [eax]
  41f231:	pop    ebx
  41f232:	dec    edi
  41f233:	dec    DWORD PTR [ecx-0xda0d]
  41f239:	cmp    edx,eax
  41f23b:	cmp    edi,0x68
  41f23e:	xchg   edx,eax
  41f23f:	mov    DWORD PTR [eax],eax
  41f241:	cs dec eax
  41f243:	mov    edi,edi
  41f245:	push   0xffffffc9
  41f247:	(bad)  
  41f248:	(bad)  
  41f249:	jl     0x41f25c
  41f24b:	(bad)  
  41f24c:	jmp    FWORD PTR [ecx]
  41f24e:	pop    ecx
  41f24f:	int3   
  41f250:	(bad)  
  41f251:	jmp    0xff76:0x3500ff85
  41f258:	xor    DWORD PTR [ecx],0x5c
  41f25b:	inc    DWORD PTR [ebx-0x62e7]
  41f261:	icebp  
  41f262:	sbb    al,0xff
  41f264:	sub    edi,0x18
  41f267:	add    BYTE PTR [ecx-0x65a3],cl
  41f26d:	dec    esp
  41f26e:	inc    DWORD PTR [ebx-0x68aa00]
  41f274:	push   DWORD PTR [ebp+0x73]
  41f277:	(bad)  
  41f278:	(bad)  
  41f279:	js     0x41f2ba
  41f27b:	add    ah,cl
  41f27d:	add    ch,dh
  41f27f:	or     esp,0x41
  41f282:	sub    ecx,DWORD PTR [ecx+0x1c18cc]
  41f288:	push   DWORD PTR [esi+0x11]
  41f28b:	(bad)  
  41f28c:	push   DWORD PTR [ecx]
  41f28e:	push   edx
  41f28f:	dec    esp
  41f291:	sub    bh,BYTE PTR [ecx+ecx*4]
  41f294:	add    BYTE PTR [ecx],bh
  41f296:	lods   al,BYTE PTR ds:[esi]
  41f297:	add    BYTE PTR [eax],al
  41f299:	or     BYTE PTR [ebp+0x0],0x89
  41f29d:	xchg   edx,eax
  41f29e:	cmp    ecx,esp
  41f2a0:	push   ebp
  41f2a2:	xchg   DWORD PTR [ecx-0xca567d],ecx
  41f2a8:	add    DWORD PTR [ecx+0x418900ad],0xffffffb8
  41f2af:	mov    edi,edi
  41f2b1:	jno    0x41f2cf
  41f2b3:	inc    DWORD PTR [eax]
  41f2b5:	jecxz  0x41f2e2
  41f2b7:	add    bh,bh
  41f2b9:	ror    BYTE PTR [ecx-0x7d],cl
  41f2bc:	add    BYTE PTR [edi-0x5800335f],bh
  41f2c2:	aas    
  41f2c3:	inc    DWORD PTR [ebx-0x629d]
  41f2c9:	sti    
  41f2ca:	mov    cl,0x0
  41f2cc:	add    BYTE PTR [esi+ebx*1+0x3d8d00ff],ch
  41f2d3:	add    DWORD PTR [eax],0x75
  41f2d6:	sbb    DWORD PTR [eax],eax
  41f2d8:	sbb    DWORD PTR [ebx+esi*1-0x2cd40100],0xffffffff
  41f2e0:	mov    eax,ebx
  41f2e2:	fiadd  DWORD PTR [eax]
  41f2e4:	add    BYTE PTR [esi-0x2f007c35],dl
  41f2ea:	xor    eax,0x7bac00ff
  41f2ef:	mov    DWORD PTR [eax],eax
  41f2f1:	stc    
  41f2f2:	es (bad) 
  41f2f4:	inc    DWORD PTR [esi]
  41f2f6:	jnp    0x41f2c4
  41f2f8:	call   FWORD PTR [esi+0x5]
  41f2fb:	inc    DWORD PTR [eax]
  41f2fd:	arpl   WORD PTR [eax+0x3578ff83],di
  41f303:	int3   
  41f304:	int3   
  41f305:	and    esp,DWORD PTR [ebp-0x1]
  41f308:	push   DWORD PTR [ebx+0x1000047]
  41f30e:	lock inc DWORD PTR [eax]
  41f311:	sahf   
  41f312:	dec    esp
  41f313:	inc    DWORD PTR [eax]
  41f315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f316:	jmp    0xf53c771a
  41f31b:	inc    DWORD PTR [eax]
  41f31d:	add    BYTE PTR [eax],cl
  41f31f:	(bad)  
  41f320:	(bad)  
  41f321:	out    dx,eax
  41f322:	add    eax,0xfb888983
  41f327:	inc    DWORD PTR [eax]
  41f329:	je     0x41f35a
  41f32b:	or     esp,0xffffffb3
  41f32e:	push   edx
  41f32f:	add    DWORD PTR [ebx-0x33003751],0x63
  41f336:	stos   DWORD PTR es:[edi],eax
  41f337:	inc    DWORD PTR [eax]
  41f339:	and    al,0x46
  41f33b:	add    bh,bh
  41f33d:	jae    0x41f330
  41f33f:	add    BYTE PTR [eax],al
  41f341:	inc    eax
  41f342:	adc    edi,edi
  41f344:	jmp    FWORD PTR [ecx+0x2c830098]
  41f34a:	pop    esp
  41f34b:	add    BYTE PTR [ebx+0xffc56a],al
  41f351:	sbb    dh,BYTE PTR [edx-0x1]
  41f354:	or     DWORD PTR [edi+0x5dffccf1],0xffffff9d
  41f35b:	inc    DWORD PTR [eax]
  41f35d:	popf   
  41f35e:	xchg   edi,eax
  41f35f:	int3   
  41f360:	add    BYTE PTR [ebx-0x29],ch
  41f363:	add    DWORD PTR [eax],0xffffff84
  41f366:	sub    eax,0xc625ff00
  41f36b:	(bad)  
  41f36c:	call   DWORD PTR [esi-0x627c007f]
  41f372:	test   DWORD PTR [ebx-0x7cc93301],eax
  41f378:	(bad)  
  41f379:	jns    0x41f334
  41f37b:	mov    DWORD PTR [eax],eax
  41f37d:	loope  0x41f363
  41f37f:	(bad)  
  41f380:	(bad)  
  41f381:	js     0x41f3e5
  41f383:	add    bh,bh
  41f385:	xor    esi,esp
  41f387:	dec    esp
  41f389:	add    eax,0x4683ff2c
  41f38e:	or     eax,DWORD PTR [eax]
  41f390:	call   DWORD PTR [esi-0x22]
  41f393:	inc    DWORD PTR [eax]
  41f395:	pop    esi
  41f396:	cmp    edi,edi
  41f398:	int3   
  41f399:	adc    dl,BYTE PTR [edi+edi*8]
  41f39c:	int3   
  41f39d:	test   al,0x2d
  41f39f:	add    DWORD PTR [eax],0xffffffcd
  41f3a2:	retf   
  41f3a3:	add    DWORD PTR [eax],0xffffff88
  41f3a6:	std    
  41f3a7:	add    BYTE PTR [eax],al
  41f3a9:	jecxz  0x41f372
  41f3ab:	(bad)  
  41f3ac:	call   DWORD PTR [ebx-0x5c0000c8]
  41f3b2:	and    edi,edi
  41f3b4:	(bad)  
  41f3b5:	fisttp DWORD PTR [edx]
  41f3b7:	dec    DWORD PTR [ecx-0x7c00a3fa]
  41f3bd:	out    dx,al
  41f3be:	xor    eax,DWORD PTR [eax]
  41f3c0:	call   FWORD PTR [edi+ebx*2]
  41f3c3:	int3   
  41f3c4:	push   DWORD PTR [ebp+0x4f0083e9]
  41f3ca:	jbe    0x41f34f
  41f3cc:	inc    DWORD PTR [esi+ecx*4-0x7d]
  41f3d0:	dec    DWORD PTR [esi]
  41f3d2:	retf   0x83ff
  41f3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d6:	dec    esp
  41f3d7:	(bad)  
  41f3d8:	call   FWORD PTR [ebp+0x38]
  41f3db:	inc    DWORD PTR [eax]
  41f3dd:	popf   
  41f3de:	xchg   ecx,eax
  41f3df:	cmp    edi,0x16
  41f3e2:	out    dx,al
  41f3e3:	int3   
  41f3e4:	cmp    DWORD PTR [eax+0x16],0xffffffff
  41f3e8:	add    BYTE PTR [edi+0x5affcc73],al
  41f3ee:	out    dx,eax
  41f3ef:	mov    edi,edi
  41f3f1:	mov    ds:0xabff006f,al
  41f3f6:	out    dx,al
  41f3f7:	add    BYTE PTR [ecx-0xb60b],cl
  41f3fd:	cmp    BYTE PTR [esi-0x1],0x0
  41f401:	(bad)  
  41f402:	dec    ebx
  41f403:	(bad)  
  41f404:	(bad)  
  41f405:	cmp    esi,DWORD PTR [eax]
  41f407:	cmp    edi,0xffffffc1
  41f40a:	sub    eax,0x509400ff
  41f40f:	cmp    edi,0x79
  41f412:	in     al,dx
  41f413:	add    BYTE PTR [ebx+0xda4d],al
  41f419:	or     ch,ch
  41f41b:	or     DWORD PTR [ecx-0x7cff8b40],0xffffffdb
  41f422:	inc    edx
  41f423:	(bad)  
  41f424:	jmp    DWORD PTR [ebx+0x35]
  41f427:	add    BYTE PTR [eax],al
  41f429:	xchg   ecx,ebp
  41f42b:	add    BYTE PTR [ebx+0x839903],al
  41f431:	dec    edx
  41f432:	test   eax,0x4c0d8383
  41f437:	inc    DWORD PTR [eax]
  41f439:	push   esi
  41f43a:	ror    ah,0xff
  41f43d:	out    dx,eax
  41f43e:	clc    
  41f43f:	int3   
  41f440:	int3   
  41f441:	mov    edi,0x68ccffa2
  41f446:	pop    es
  41f447:	add    bh,bh
  41f449:	adc    eax,0xeaffffa8
  41f44e:	mov    ah,0xff
  41f450:	dec    DWORD PTR [esi+ebp*1-0x34]
  41f454:	(bad)  
  41f455:	out    dx,al
  41f456:	ja     0x41f457
  41f458:	(bad)  
  41f459:	out    dx,al
  41f45a:	popa   
  41f45b:	inc    DWORD PTR [eax]
  41f45d:	ins    DWORD PTR es:[di],dx
  41f45f:	cmp    edi,0xffffffb0
  41f462:	mov    ch,0x83
  41f464:	(bad)  
  41f465:	in     al,dx
  41f466:	fadd   QWORD PTR [eax]
  41f468:	int3   
  41f469:	inc    edx
  41f46a:	xchg   ecx,eax
  41f46b:	(bad)  
  41f46c:	jmp    FWORD PTR [ebx+ebx*1]
  41f46f:	add    DWORD PTR [eax],0x51
  41f472:	loope  0x41f473
  41f474:	mov    DWORD PTR [ecx+0x49],eax
  41f477:	mov    edi,edi
  41f479:	sub    eax,0x49890048
  41f47e:	stc    
  41f47f:	add    ah,cl
  41f481:	sub    ebp,DWORD PTR [ecx]
  41f483:	(bad)  
  41f484:	(bad)  
  41f485:	jmp    0x41f448
  41f487:	inc    DWORD PTR [ebx-0x33ff6511]
  41f48d:	out    dx,eax
  41f48e:	dec    eax
  41f48f:	inc    DWORD PTR [eax]
  41f491:	pop    ebx
  41f492:	jecxz  0x41f417
  41f494:	call   DWORD PTR [edx-0x45]
  41f497:	inc    DWORD PTR [eax]
  41f499:	retf   0x89bf
  41f49c:	cmp    DWORD PTR [edx+0x62],0xffffffff
  41f4a0:	(bad)  
  41f4a1:	fstp   QWORD PTR [ebp-0x1]
  41f4a4:	inc    DWORD PTR [edx]
  41f4a6:	out    dx,al
  41f4a7:	int3   
  41f4a8:	add    bl,al
  41f4aa:	cmp    al,0xff
  41f4ac:	call   DWORD PTR [esi]
  41f4ae:	dec    DWORD PTR ss:[ecx-0xd11d]
  41f4b5:	xor    BYTE PTR [esi-0x1],ch
  41f4b8:	int3   
  41f4b9:	outs   dx,BYTE PTR ds:[esi]
  41f4ba:	sub    eax,DWORD PTR [eax]
  41f4bc:	push   DWORD PTR [edi]
  41f4be:	sbb    bh,bh
  41f4c0:	adc    DWORD PTR [edx-0x177cffa5],0xffffffca
  41f4c7:	(bad)  
  41f4c8:	dec    esp
  41f4ca:	push   ds
  41f4cb:	int3   
  41f4cc:	jmp    FWORD PTR [ebx]
  41f4ce:	ins    BYTE PTR es:[edi],dx
  41f4cf:	mov    DWORD PTR [ecx+0xffe3eb],ecx
  41f4d5:	in     eax,dx
  41f4d6:	cmp    BYTE PTR [eax],al
  41f4d8:	add    BYTE PTR [ebp-0x4800339d],cl
  41f4de:	xor    bh,bh
  41f4e0:	jmp    DWORD PTR [esi-0x1]
  41f4e3:	add    DWORD PTR [eax],0xffffffd0
  41f4e6:	and    eax,0x457083ff
  41f4eb:	dec    esp
  41f4ed:	aas    
  41f4ee:	xchg   edi,eax
  41f4ef:	(bad)  
  41f4f0:	inc    DWORD PTR [edx+esi*1-0x1]
  41f4f4:	and    edx,0x62
  41f4f7:	dec    DWORD PTR [ecx+0xc53b]
  41f4fd:	aad    0xa0
  41f4ff:	cmp    edi,0xfffffffe
  41f502:	mov    eax,0x7095ffff
  41f507:	add    BYTE PTR [eax],al
  41f509:	pop    esi
  41f50a:	and    al,0x83
  41f50c:	add    ah,dl
  41f50e:	jle    0x41f50f
  41f510:	add    BYTE PTR [ecx-0x1e00ff83],al
  41f516:	call   0x5f54f61a
  41f51b:	inc    DWORD PTR [eax]
  41f51d:	jae    0x41f4e8
  41f51f:	(bad)  
  41f520:	jmp    DWORD PTR [edx-0x57000075]
  41f526:	push   ebx
  41f527:	inc    DWORD PTR [ebx-0x76769be9]
  41f52d:	ins    DWORD PTR es:[edi],dx
  41f52e:	inc    edx
  41f52f:	(bad)  
  41f530:	inc    DWORD PTR [edx]
  41f532:	(bad)  
  41f533:	(bad)  
  41f534:	jmp    DWORD PTR [edx]
  41f536:	in     al,dx
  41f537:	inc    DWORD PTR [eax]
  41f539:	or     esi,DWORD PTR [ecx]
  41f53b:	mov    edi,edi
  41f53d:	call   DWORD PTR [edi]
  41f53f:	add    bh,bh
  41f541:	sub    al,0x31
  41f543:	(bad)  
  41f544:	call   FWORD PTR [edi-0x38]
  41f547:	add    BYTE PTR [ecx-0x7c337c23],cl
  41f54d:	out    0x9b,al
  41f54f:	add    BYTE PTR [ebx+0x72b],al
  41f555:	adc    DWORD PTR [ecx],edi
  41f557:	(bad)  
  41f558:	push   eax
  41f55a:	inc    WORD PTR [eax]
  41f55d:	pop    esi
  41f55e:	xchg   ecx,eax
  41f55f:	add    BYTE PTR [eax],al
  41f561:	aaa    
  41f562:	add    BYTE PTR fs:[eax],al
  41f565:	rcl    BYTE PTR [ebp-0x34],0xff
  41f569:	xor    BYTE PTR [esi-0x77],bl
  41f56c:	(bad)  
  41f56d:	sti    
  41f56e:	pushf  
  41f56f:	(bad)  
  41f570:	dec    edi
  41f572:	ret    
  41f573:	add    BYTE PTR [eax],al
  41f575:	es js  0x41f577
  41f578:	int3   
  41f579:	pop    ss
  41f57a:	ret    
  41f57b:	(bad)  
  41f57c:	dec    DWORD PTR [edi+0x52000015]
  41f582:	xchg   ecx,eax
  41f583:	int3   
  41f584:	call   FWORD PTR [edi-0x25ffffa1]
  41f58a:	jne    0x41f58b
  41f58c:	cmp    DWORD PTR [edi+0x59],0xffffffff
  41f590:	add    BYTE PTR [ebp+0x1eff83c6],bl
  41f596:	jae    0x41f521
  41f598:	add    BYTE PTR [ebx],dl
  41f59a:	ja     0x41f568
  41f59c:	call   DWORD PTR [edx]
  41f59e:	and    cl,ah
  41f5a0:	add    BYTE PTR [ebp+0x74ffff48],ah
  41f5a6:	out    dx,eax
  41f5a7:	inc    DWORD PTR [eax]
  41f5a9:	shl    ah,1
  41f5ab:	int3   
  41f5ac:	(bad)  
  41f5ad:	(bad)  
  41f5af:	inc    DWORD PTR [eax]
  41f5b1:	dec    esp
  41f5b2:	dec    ah
  41f5b4:	push   DWORD PTR ds:0xfb89cc34
  41f5ba:	ret    0xff89
  41f5bd:	and    DWORD PTR [ebp+0x0],esp
  41f5c0:	mov    DWORD PTR [esi+0x76],edi
  41f5c3:	add    bh,bh
  41f5c5:	scas   eax,DWORD PTR es:[edi]
  41f5c6:	jge    0x41f551
  41f5c8:	dec    edi
  41f5ca:	mov    al,BYTE PTR [eax]
  41f5cc:	int3   
  41f5cd:	jae    0x41f569
  41f5cf:	inc    DWORD PTR [eax]
  41f5d1:	ja     0x41f566
  41f5d3:	add    BYTE PTR [eax],al
  41f5d5:	add    al,0x59
  41f5d7:	inc    DWORD PTR [eax]
  41f5d9:	aam    0x66
  41f5db:	inc    DWORD PTR [ebx-0xdea1]
  41f5e1:	je     0x41f5d1
  41f5e3:	(bad)  
  41f5e4:	dec    DWORD PTR [edi+0x748389d9]
  41f5ea:	das    
  41f5eb:	inc    DWORD PTR [eax]
  41f5ed:	jl     0x41f585
  41f5ef:	inc    DWORD PTR [ebx+0xffa179]
  41f5f5:	js     0x41f5ea
  41f5f7:	add    BYTE PTR [eax],al
  41f5f9:	add    eax,0xa600ffe7
  41f5fe:	out    0x0,al
  41f600:	mov    esi,ebp
  41f602:	dec    esp
  41f603:	inc    DWORD PTR [eax]
  41f605:	add    BYTE PTR [ebx+eax*4-0x1],ah
  41f609:	pop    ss
  41f60a:	sbb    BYTE PTR [eax],al
  41f60c:	add    ch,dh
  41f60e:	mov    eax,DWORD PTR [eax]
  41f610:	jmp    DWORD PTR [ebx+0x10]
  41f613:	add    bh,bh
  41f615:	xchg   ebp,eax
  41f616:	scas   eax,DWORD PTR es:[edi]
  41f617:	(bad)  
  41f618:	push   DWORD PTR ds:0xb1ff002d
  41f61e:	xor    eax,0xe40eff83
  41f623:	inc    DWORD PTR [eax]
  41f625:	mov    eax,0xeaff8355
  41f62a:	lds    ecx,FWORD PTR [ecx+0xae67ff]
  41f630:	sbb    DWORD PTR [eax-0x337c0015],0x50
  41f637:	add    ah,cl
  41f639:	mov    eax,0xccfffff8
  41f63e:	push   ebx
  41f63f:	inc    DWORD PTR [eax]
  41f641:	or     edi,DWORD PTR [ecx+0x0]
  41f644:	int3   
  41f645:	mov    ch,0x7d
  41f647:	add    DWORD PTR [eax],0xffffff8d
  41f64a:	fild   DWORD PTR [ebx+0xc223ff]
  41f650:	add    BYTE PTR [ebp+0x6f00ff2e],dh
  41f656:	jo     0x41f5db
  41f658:	dec    eax
  41f65a:	(bad)  
  41f65b:	int3   
  41f65c:	add    ebx,0xffffff8a
  41f65f:	(bad)  
  41f660:	call   FWORD PTR [eax]
  41f662:	cmp    BYTE PTR [ecx-0x7602de01],cl
  41f668:	add    BYTE PTR [esp+edx*1],ah
  41f66b:	inc    DWORD PTR [eax]
  41f66d:	mov    bl,0xde
  41f66f:	add    BYTE PTR [ecx-0xff3be6],cl
  41f675:	cli    
  41f676:	fdivp  st(7),st
  41f678:	(bad)  
  41f679:	fist   DWORD PTR [edi-0x1]
  41f67c:	xor    ebp,0x66
  41f67f:	inc    DWORD PTR [ebx-0x3300db55]
  41f685:	sub    DWORD PTR [eax-0x7ede7c01],ecx
  41f68b:	add    DWORD PTR [eax],0x5d
  41f68e:	xchg   ebx,eax
  41f68f:	add    DWORD PTR [ebx-0x338b9b],0xffffffd3
  41f696:	push   edx
  41f697:	int3   
  41f698:	inc    DWORD PTR [edi-0xf000030]
  41f69e:	xlat   BYTE PTR ds:[ebx]
  41f69f:	inc    DWORD PTR [eax]
  41f6a1:	mov    dh,0xb4
  41f6a3:	add    bh,bh
  41f6a5:	xchg   edx,eax
  41f6a6:	jge    0x41f62b
  41f6a8:	(bad)  
  41f6a9:	cld    
  41f6aa:	js     0x41f6ac
  41f6ac:	push   DWORD PTR [edi+edi*1]
  41f6af:	(bad)  
  41f6b0:	(bad)  
  41f6b1:	mov    esi,0x8cffff7d
  41f6b6:	test   esp,ecx
  41f6b8:	adc    DWORD PTR [esi+0x3c],0xffffffcc
  41f6bc:	add    BYTE PTR [eax+0x5eccff9d],al
  41f6c2:	sbb    DWORD PTR [ebx+0xc36fff],eax
  41f6c8:	(bad)  
  41f6c9:	mov    eax,0x68ccff94
  41f6ce:	std    
  41f6cf:	(bad)  
  41f6d0:	call   edi
  41f6d2:	out    dx,eax
  41f6d3:	inc    DWORD PTR [ebx-0x7cb47b]
  41f6d9:	in     eax,dx
  41f6da:	das    
  41f6db:	add    DWORD PTR [ebx-0x58e5],0xffffffc5
  41f6e2:	sar    bh,1
  41f6e4:	sub    DWORD PTR [esp+esi*1],0xffffffcc
  41f6e8:	add    BYTE PTR [ebp+eax*1-0x1],cl
  41f6ec:	add    BYTE PTR [edi+edi*2-0x1],bl
  41f6f0:	call   FWORD PTR [ebx+0x5b0000c3]
  41f6f6:	add    BYTE PTR [eax],0xff
  41f6f9:	mov    ds:0x3f83007a,al
  41f6fe:	nop
  41f6ff:	add    bh,bh
  41f701:	push   ebx
  41f702:	mov    bh,bh
  41f704:	add    BYTE PTR [esi],bh
  41f706:	sub    bh,bh
  41f708:	(bad)  
  41f709:	cmp    DWORD PTR ds:0x1c300083,ecx
  41f70f:	inc    DWORD PTR [eax]
  41f711:	mov    dl,0xa7
  41f713:	inc    DWORD PTR [ebx+0xccf612]
  41f719:	add    BYTE PTR [ebx],0x83
  41f71c:	add    BYTE PTR [ebx],bh
  41f71e:	aad    0x83
  41f720:	mov    DWORD PTR [eax-0x22],esp
  41f723:	add    DWORD PTR [eax],0xffffff9e
  41f726:	in     eax,0x0
  41f728:	inc    DWORD PTR [edx]
  41f72a:	and    al,0xff
  41f72c:	cmp    DWORD PTR [edx-0x2b7c33f0],0xffffffa8
  41f733:	(bad)  
  41f734:	inc    DWORD PTR [edx]
  41f736:	lahf   
  41f737:	add    ah,cl
  41f739:	sub    ebp,0xc9f70083
  41f73f:	int3   
  41f740:	mov    DWORD PTR [edi],ebp
  41f742:	mov    esi,0x862a0000
  41f747:	int3   
  41f748:	(bad)  
  41f749:	in     al,dx
  41f74a:	mov    al,ds:0xd6ee0000
  41f74f:	dec    esp
  41f751:	cs (bad) 
  41f754:	add    BYTE PTR [eax-0x79],al
  41f757:	inc    DWORD PTR [eax]
  41f759:	fwait
  41f75a:	popa   
  41f75b:	(bad)  
  41f75c:	call   DWORD PTR [edi+eax*1+0x3489ffcc]
  41f763:	inc    DWORD PTR [eax]
  41f765:	push   ecx
  41f766:	pop    edi
  41f767:	add    BYTE PTR [eax],al
  41f769:	push   eax
  41f76a:	mov    ch,0xff
  41f76c:	add    BYTE PTR [ecx+0x4f838356],al
  41f772:	cs or  esp,0xffffffbe
  41f776:	js     0x41f778
  41f778:	call   DWORD PTR [eax]
  41f77a:	sub    eax,0x256d00cc
  41f77f:	int3   
  41f780:	push   DWORD PTR [edx]
  41f782:	add    BYTE PTR [eax],0xff
  41f785:	push   0xffffff9c
  41f787:	inc    DWORD PTR [ebx-0xe37b]
  41f78d:	sahf   
  41f78e:	(bad)  
  41f790:	(bad)  
  41f791:	jp     0x41f797
  41f793:	mov    DWORD PTR [eax],eax
  41f795:	inc    ebp
  41f796:	add    BYTE PTR ds:[ecx-0xffbbbb],cl
  41f79d:	jge    0x41f7c9
  41f79f:	(bad)  
  41f7a0:	call   esp
  41f7a2:	loop   0x41f7a4
  41f7a4:	add    BYTE PTR [edi-0x6d],cl
  41f7a7:	(bad)  
  41f7a8:	(bad)  
  41f7a9:	in     al,dx
  41f7aa:	push   ebp
  41f7ab:	add    BYTE PTR [eax],al
  41f7ad:	jl     0x41f7b2
  41f7af:	(bad)  
  41f7b0:	call   DWORD PTR [edi-0x3cff7c0f]
  41f7b6:	mov    edx,0xf99ffff
  41f7bb:	add    bh,bh
  41f7bd:	dec    esi
  41f7be:	inc    ebx
  41f7bf:	(bad)  
  41f7c0:	jmp    DWORD PTR [edi+0x48]
  41f7c3:	dec    esp
  41f7c5:	jns    0x41f7a2
  41f7c7:	add    DWORD PTR [eax],0xffffffc5
  41f7ca:	inc    edi
  41f7cb:	add    bh,bh
  41f7cd:	test   BYTE PTR [esi-0x22ea767d],bl
  41f7d3:	dec    esp
  41f7d5:	loop   0x41f826
  41f7d7:	(bad)  
  41f7d8:	dec    DWORD PTR [ecx+0x1effcc1c]
  41f7de:	xlat   BYTE PTR ds:[ebx]
  41f7df:	int3   
  41f7e0:	(bad)  
  41f7e1:	fucomip st,st(0)
  41f7e3:	or     DWORD PTR [ecx-0xfffd85],0xffffffd5
  41f7ea:	jae    0x41f775
  41f7ec:	jmp    FWORD PTR [edx-0x26]
  41f7ef:	inc    DWORD PTR [ebx-0xb605]
  41f7f5:	pusha  
  41f7f6:	in     eax,0xff
  41f7f8:	call   FWORD PTR [ebp+0x2aff8926]
  41f7fe:	jl     0x41f800
  41f800:	jmp    FWORD PTR [ecx-0x1a7c77]
  41f806:	outs   dx,DWORD PTR ds:[si]
  41f808:	add    BYTE PTR [ecx+0x2b0000],cl
  41f80e:	xchg   esp,eax
  41f80f:	fcos   
  41f811:	xchg   ebp,eax
  41f812:	(bad)  
  41f813:	push   DWORD PTR [ebp-0x1]
  41f816:	imul   eax,ecx,0xffffffff
  41f819:	add    BYTE PTR [ecx+0x21ff0889],cl
  41f81f:	add    BYTE PTR fs:[esi-0x34],cl
  41f823:	cmp    DWORD PTR [eax-0x34],0x51
  41f827:	push   ecx
  41f828:	call   edx
  41f82a:	inc    DWORD PTR [eax]
  41f82c:	dec    esp
  41f82d:	add    BYTE PTR [edx+0x76],dl
  41f830:	call   DWORD PTR [ebp-0x7c270077]
  41f836:	add    DWORD PTR [eax-0x1],0x7bffff23
  41f83d:	inc    DWORD PTR [eax+0x3006a]
  41f843:	jmp    DWORD PTR [ecx-0x6bc97d]
  41f849:	xchg   BYTE PTR [ebx-0x4336701],al
  41f84f:	sub    bh,bh
  41f851:	cmp    eax,0xff0b00ff
  41f856:	popf   
  41f857:	inc    ebp
  41f858:	add    BYTE PTR [ecx],bl
  41f85a:	(bad)  
  41f85b:	push   ebx
  41f85d:	add    al,ah
  41f85f:	ror    BYTE PTR [ecx+0x3affcc9b],cl
  41f865:	add    BYTE PTR [ebx],ch
  41f867:	fadd   QWORD PTR [eax]
  41f869:	loop   0x41f86b
  41f86b:	mov    DWORD PTR [esi],eax
  41f86d:	mov    DWORD PTR [eax+0x42],edx
  41f870:	mov    DWORD PTR [edx-0x7cef7601],esi
  41f876:	inc    esp
  41f877:	int    0x83
  41f879:	sub    al,0xff
  41f87b:	int3   
  41f87c:	jle    0x41f87e
  41f87e:	lods   al,BYTE PTR ds:[esi]
  41f87f:	les    eax,FWORD PTR [eax]
  41f881:	cs dec esp
  41f884:	scas   eax,DWORD PTR es:[edi]
  41f885:	mov    DWORD PTR [edx],ecx
  41f887:	aaa    
  41f888:	add    BYTE PTR ds:0xcc500083,cl
  41f88e:	or     ch,al
  41f890:	push   DWORD PTR [eax]
  41f892:	add    DWORD PTR [eax],0x1c
  41f895:	add    BYTE PTR [eax-0x65],cl
  41f898:	call   DWORD PTR [ebp-0x1]
  41f89b:	call   FWORD PTR [edi]
  41f89d:	int3   
  41f89e:	xchg   esp,eax
  41f89f:	add    BYTE PTR es:0x897b00ff,ch
  41f8a6:	pop    edx
  41f8a7:	push   ecx
  41f8a8:	add    bh,ah
  41f8aa:	(bad)  
  41f8ab:	call   FWORD PTR [esi+0x870683]
  41f8b1:	leave  
  41f8b2:	add    DWORD PTR [ebx+0x5180ffeb],0x0
  41f8b9:	ds int3 
  41f8bb:	(bad)  
  41f8bc:	inc    DWORD PTR ds:[edi+0x4]
  41f8c0:	add    BYTE PTR [eax-0x34],bh
  41f8c3:	add    BYTE PTR [ebp-0x77],bh
  41f8c6:	lea    ebx,[eax-0xba01]
  41f8cc:	push   cs
  41f8cd:	push   DWORD PTR [ebx+0x40ff47]
  41f8d3:	add    BYTE PTR [edi-0xcd7400],bh
  41f8d9:	icebp  
  41f8da:	add    bh,bh
  41f8dc:	loope  0x41f8dd
  41f8de:	and    BYTE PTR [ecx-0x33cf00],0x4a
  41f8e5:	jmp    FWORD PTR [esi+eiz*1-0x1]
  41f8e9:	sbb    ecx,DWORD PTR [ecx-0x527c2401]
  41f8ef:	aaa    
  41f8f0:	add    BYTE PTR [ecx],dl
  41f8f2:	int3   
  41f8f3:	call   DWORD PTR [edi+edi*8+0xc]
  41f8f7:	or     al,0xff
  41f8f9:	sub    al,0x83
  41f8fb:	xor    DWORD PTR [eax-0x8f0f01],0xffffffd5
  41f902:	add    bh,bh
  41f904:	sub    al,0x89
  41f906:	adc    DWORD PTR [edx-0x1],esi
  41f909:	ja     0x41f90b
  41f90b:	add    BYTE PTR [edi+edi*8-0x2c763693],ah
  41f912:	(bad)  
  41f913:	call   ebx
  41f915:	mov    DWORD PTR [edx+ecx*2-0x1],ebp
  41f919:	mov    ah,0xcc
  41f91b:	add    BYTE PTR [ecx+0xa62cff],ah
  41f921:	mov    ah,0xff
  41f923:	add    BYTE PTR [esi],al
  41f925:	add    BYTE PTR [eax-0x7c170001],ch
  41f92b:	add    bh,bh
  41f92d:	push   DWORD PTR [ebp-0xc176fd]
  41f933:	(bad)  
  41f934:	jl     0x41f935
  41f936:	ins    BYTE PTR es:[edi],dx
  41f937:	dec    ebp
  41f938:	sub    DWORD PTR [ecx+0x39ffff],0xffffffc9
  41f93f:	fwait
  41f940:	int3   
  41f941:	pop    es
  41f942:	dec    DWORD PTR [ecx-0x748100b7]
  41f948:	call   DWORD PTR [eax-0x1]
  41f94b:	add    BYTE PTR [eax],bl
  41f94d:	inc    DWORD PTR [edi]
  41f94f:	sub    DWORD PTR [eax],eax
  41f951:	retf   
  41f952:	mov    edi,edi
  41f954:	jns    0x41f956
  41f956:	adc    eax,0xff960075
  41f95b:	call   FWORD PTR [edi-0x7d]
  41f95e:	adc    BYTE PTR [esp+ecx*8],ah
  41f961:	jl     0x41f92f
  41f963:	push   DWORD PTR [edi+edi*8+0xdff5178]
  41f96a:	int3   
  41f96b:	push   DWORD PTR [edx-0x1]
  41f96e:	xchg   esp,edi
  41f970:	add    BYTE PTR ds:0xff3100ff,cl
  41f976:	sub    BYTE PTR [ecx-0x7d],bl
  41f979:	adc    al,BYTE PTR [ebx+0x3fff59cc]
  41f97f:	stc    
  41f980:	int3   
  41f981:	js     0x41f982
  41f983:	jmp    FWORD PTR [edi-0x7d]
  41f986:	dec    ebp
  41f987:	cmp    al,0xff
  41f989:	call   0xff52c617
  41f98e:	cmp    cl,BYTE PTR [ebx-0x77]
  41f991:	cli    
  41f992:	mov    DWORD PTR [ecx+0x113ff0a],ecx
  41f998:	call   FWORD PTR [edi+0x14ffff]
  41f99e:	mov    dl,0x86
  41f9a0:	add    DWORD PTR [edx-0x473301],0x14
  41f9a7:	jae    0x41f9a9
  41f9a9:	ja     0x41f9ab
  41f9ab:	adc    DWORD PTR [edx-0x1],0x18
  41f9af:	xchg   edi,eax
  41f9b0:	(bad)  
  41f9b1:	aas    
  41f9b2:	add    BYTE PTR [eax],al
  41f9b4:	mov    ?,edi
  41f9b6:	dec    ebx
  41f9b7:	mov    esi,0xff000483
  41f9bc:	in     eax,dx
  41f9bd:	call   FWORD PTR [esi]
  41f9bf:	push   esp
  41f9c0:	inc    DWORD PTR [ebp+0xe6ff00]
  41f9c6:	and    DWORD PTR [eax+eax*1-0x15],esi
  41f9ca:	add    BYTE PTR [eax],al
  41f9cc:	pop    ebx
  41f9cd:	add    bl,cl
  41f9cf:	push   ebx
  41f9d0:	add    BYTE PTR [edx-0x537c7d],cl
  41f9d6:	xor    DWORD PTR [ebp+0x7200],edx
  41f9dc:	int3   
  41f9dd:	(bad)  
  41f9de:	mov    esi,0xcc918922
  41f9e3:	jmp    DWORD PTR [eax]
  41f9e5:	sub    DWORD PTR [edi-0xea00eb],0xffffffff
  41f9ec:	xor    BYTE PTR [ebx-0x48009203],al
  41f9f2:	mov    DWORD PTR [eax],eax
  41f9f4:	add    DWORD PTR [eax],0xffffffca
  41f9f7:	sub    edi,edi
  41f9f9:	adc    edi,edi
  41f9fb:	call   DWORD PTR [eax]
  41f9fd:	add    BYTE PTR [ecx],ah
  41f9ff:	push   ebp
  41fa00:	sub    DWORD PTR [eax],0xffffffff
  41fa03:	call   DWORD PTR [edi-0x50de34]
  41fa09:	mov    al,ds:0xccefff83
  41fa0e:	push   cs
  41fa0f:	mov    eax,ds:0xffff9bff
  41fa14:	test   BYTE PTR [ecx-0x15ff3bb6],cl
  41fa1a:	add    BYTE PTR [eax],al
  41fa1c:	mov    edi,0x98bdcc
  41fa21:	jae    0x41fa22
  41fa23:	call   DWORD PTR [ebx+0x0]
  41fa26:	je     0x41f9e7
  41fa28:	add    ch,ch
  41fa2a:	cmp    edi,0x46
  41fa2d:	push   DWORD PTR [ecx-0x7a7c71]
  41fa33:	(bad)  
  41fa34:	jle    0x41fa35
  41fa36:	and    esi,edi
  41fa38:	cmp    DWORD PTR [ebx-0x76090100],0x10
  41fa3f:	cmp    BYTE PTR [ebx+0x67ff00f8],al
  41fa45:	xor    DWORD PTR [edx+0x72],0x0
  41fa49:	nop
  41fa4a:	add    bh,bh
  41fa4c:	lds    eax,FWORD PTR [ebx-0x2800e181]
  41fa52:	inc    DWORD PTR [eax]
  41fa54:	dec    edi
  41fa55:	inc    edi
  41fa57:	ins    BYTE PTR es:[edi],dx
  41fa58:	add    BYTE PTR [edx-0xb37c01],dh
  41fa5e:	scas   eax,DWORD PTR es:[edi]
  41fa5f:	jge    0x41fa60
  41fa61:	or     al,BYTE PTR [eax]
  41fa63:	int3   
  41fa64:	push   ecx
  41fa65:	inc    DWORD PTR [esi+0x9aff47]
  41fa6b:	add    BYTE PTR [esi-0x1],dl
  41fa6e:	lods   al,BYTE PTR ds:[esi]
  41fa6f:	imul   edi,edi,0x62ff000d
  41fa75:	jmp    ebp
  41fa77:	sub    al,0xff
  41fa79:	test   al,0xff
  41fa7b:	add    BYTE PTR [esi-0x1],al
  41fa7e:	xchg   ebx,eax
  41fa7f:	outs   dx,DWORD PTR ds:[esi]
  41fa80:	call   DWORD PTR [ebp-0x1]
  41fa83:	dec    DWORD PTR [esi]
  41fa85:	dec    DWORD PTR [eax+esi*8]
  41fa88:	push   DWORD PTR [esi]
  41fa8a:	mov    esp,ecx
  41fa8c:	mov    ebp,0xccc54eff
  41fa91:	sti    
  41fa92:	(bad)  
  41fa93:	jmp    DWORD PTR [eax-0x3381767d]
  41fa99:	jecxz  0x41fa9a
  41fa9b:	sbb    DWORD PTR [ebx+eax*4],0xffffff80
  41fa9f:	or     ah,0xe4
  41faa2:	dec    DWORD PTR [ecx-0x3bb37652]
  41faa8:	call   DWORD PTR [ecx-0x7d]
  41faab:	add    BYTE PTR [ebx-0x1],dh
  41faae:	je     0x41fa89
  41fab0:	cmp    DWORD PTR [ebx],0xffffffff
  41fab3:	add    al,dh
  41fab5:	int3   
  41fab6:	fisubr DWORD PTR [ebp-0x34]
  41fab9:	into   
  41faba:	(bad)  
  41fabb:	call   FWORD PTR [edi+edi*8-0x44]
  41fabf:	sub    BYTE PTR [eax],al
  41fac1:	retf   
  41fac2:	inc    DWORD PTR [eax]
  41fac4:	loop   0x41fac6
  41fac6:	dec    edx
  41fac7:	cmp    al,0xcc
  41fac9:	pop    edx
  41faca:	inc    DWORD PTR [eax]
  41facc:	fadd   DWORD PTR [eax]
  41face:	jae    0x41fa83
  41fad0:	int3   
  41fad1:	mov    dl,0xff
  41fad3:	add    esi,0xffffffff
  41fad6:	sub    BYTE PTR [edi+0x0],cl
  41fad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fada:	inc    DWORD PTR [eax]
  41fadc:	hlt    
  41fadd:	add    BYTE PTR [edi-0x3e0032],cl
  41fae3:	push   ecx
  41fae5:	push   DWORD PTR [edx-0x38]
  41fae8:	call   FWORD PTR [esp+ecx*8-0x68ff2401]
  41faef:	mov    dl,0xff
  41faf1:	mov    ch,0xff
  41faf3:	add    BYTE PTR [ebp-0xd51f01],ah
  41faf9:	fwait
  41fafa:	dec    DWORD PTR [ecx+0x14c68956]
  41fb00:	add    al,al
  41fb02:	add    bh,bh
  41fb04:	dec    ebx
  41fb05:	add    ah,dh
  41fb07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb08:	inc    DWORD PTR [esi-0x1]
  41fb0b:	add    BYTE PTR [eax+eax*1+0x13004f48],al
  41fb12:	cmp    edi,0xfffffffc
  41fb15:	jmp    DWORD PTR [eax+0xedff0d]
  41fb1b:	add    cl,ch
  41fb1d:	mov    DWORD PTR [eax-0x7c957665],ecx
  41fb23:	mov    DWORD PTR [edi+0x0],ebx
  41fb26:	jmp    0x41fb02
  41fb28:	cmp    esi,0xffffffff
  41fb2b:	add    ch,bh
  41fb2d:	mov    edi,edi
  41fb2f:	inc    esi
  41fb30:	call   DWORD PTR [edx]
  41fb32:	dec    DWORD PTR [ecx-0x61e3308]
  41fb38:	add    BYTE PTR [esi],bh
  41fb3a:	add    bh,bh
  41fb3c:	dec    esp
  41fb3d:	add    BYTE PTR [ecx+0xabff2d],bl
  41fb43:	add    BYTE PTR [esi-0x4a007d],bh
  41fb49:	in     al,dx
  41fb4a:	add    DWORD PTR [eax],0xffffffc0
  41fb4d:	add    BYTE PTR [ecx+0x6d],ch
  41fb50:	add    BYTE PTR [edi-0xd13301],dl
  41fb56:	fcmovne st,st(7)
  41fb58:	(bad)  
  41fb59:	cmp    eax,0x6e89ff
  41fb5e:	cmp    al,BYTE PTR ds:0xffff8800
  41fb64:	aam    0x83
  41fb66:	push   ds
  41fb67:	mov    DWORD PTR [eax],eax
  41fb69:	inc    ebx
  41fb6a:	int3   
  41fb6b:	or     DWORD PTR [edi+edi*8],0xffffffcc
  41fb6f:	mov    DWORD PTR [eax],0xfffff13
  41fb75:	inc    esi
  41fb77:	cmp    al,0x0
  41fb79:	addr16 (bad) 
  41fb7b:	jmp    ecx
  41fb7d:	call   ebp
  41fb7f:	scas   eax,DWORD PTR es:[edi]
  41fb80:	push   DWORD PTR [ecx+0x17cc89]
  41fb86:	cmp    cl,bh
  41fb88:	jmp    DWORD PTR [edx]
  41fb8a:	add    BYTE PTR [ecx+0x3e4300a1],cl
  41fb90:	or     ebp,0x0
  41fb93:	add    cl,bh
  41fb95:	adc    DWORD PTR [eax+0x28],0xffffffff
  41fb99:	mov    edi,edi
  41fb9b:	(bad)  
  41fb9c:	cmp    esp,ecx
  41fb9e:	imul   edx,DWORD PTR [ebx-0x7c33817d],0x4f7fff6b
  41fba8:	sub    DWORD PTR [edi],0xffffffff
  41fbab:	call   DWORD PTR [eax+eax*1+0x1c83e92c]
  41fbb2:	int3   
  41fbb3:	jmp    FWORD PTR [eax]
  41fbb5:	jmp    FWORD PTR [esi]
  41fbb7:	adc    eax,0xffff5b00
  41fbbc:	cwde   
  41fbbd:	mov    DWORD PTR [ecx+0xfa],ebp
  41fbc3:	int3   
  41fbc4:	rol    DWORD PTR [ebx-0x13335b1b],cl
  41fbca:	inc    DWORD PTR [eax]
  41fbcc:	add    DWORD PTR [eax],0x42
  41fbcf:	sbb    eax,DWORD PTR [ebx-0x18ffffc5]
  41fbd5:	call   DWORD PTR [edx+0x5b]
  41fbd8:	jmp    FWORD PTR [eax]
  41fbda:	add    bh,bh
  41fbdc:	(bad)  
  41fbdd:	inc    DWORD PTR [ebx]
  41fbdf:	cmp    edi,0xf983ffd2
  41fbe5:	add    BYTE PTR [eax-0x6300aa],dl
  41fbeb:	jmp    FWORD PTR [edi-0x7d]
  41fbee:	out    dx,eax
  41fbef:	dec    edx
  41fbf0:	add    bh,dl
  41fbf2:	inc    DWORD PTR [eax]
  41fbf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf5:	call   DWORD PTR [eax+ebp*4-0x7c007277]
  41fbfc:	arpl   di,di
  41fbfe:	inc    esi
  41fbff:	sar    edi,0x19
  41fc02:	add    bh,bh
  41fc04:	ret    
  41fc05:	jmp    DWORD PTR [ebx+ebp*4-0x1]
  41fc09:	xchg   edi,eax
  41fc0a:	(bad)  
  41fc0b:	dec    DWORD PTR [edx+0xa1d7ff]
  41fc11:	xchg   esi,eax
  41fc12:	add    BYTE PTR [ebx+0x48e1ff84],al
  41fc18:	int3   
  41fc19:	push   esi
  41fc1a:	int3   
  41fc1b:	(bad)  
  41fc1c:	(bad)  
  41fc1d:	(bad)  
  41fc1e:	mov    ebx,0xffa18309
  41fc23:	(bad)  
  41fc24:	cli    
  41fc25:	add    BYTE PTR [ebp-0x7cd4ffa7],dl
  41fc2b:	add    BYTE PTR [edi+edi*8-0x1f],bl
  41fc2f:	push   ebx
  41fc30:	call   FWORD PTR [esi-0x7c570001]
  41fc36:	xchg   DWORD PTR [ebx+eax*4],ebp
  41fc39:	out    0xff,al
  41fc3b:	(bad)  
  41fc3c:	call   0xbb8440
  41fc41:	test   BYTE PTR [ebx+0x31890100],al
  41fc47:	cmp    al,0xff
  41fc49:	jmp    0x41fc4b
  41fc4b:	call   FWORD PTR [ecx-0x7d]
  41fc4e:	sub    eax,0x89e183c8
  41fc53:	add    BYTE PTR [edi+edi*8-0x440036fb],bh
  41fc5a:	dec    esp
  41fc5c:	(bad)  
  41fc5d:	dec    DWORD PTR [eax+0x6fff7]
  41fc63:	add    BYTE PTR [edi],dh
  41fc65:	add    BYTE PTR [edi-0x75],al
  41fc68:	dec    ebp
  41fc6a:	inc    DWORD PTR [eax]
  41fc6c:	lods   al,BYTE PTR ds:[esi]
  41fc6d:	add    DWORD PTR ds:0x836bffa8,0xffffffcc
  41fc74:	pop    ds
  41fc75:	(bad)  
  41fc76:	mov    eax,0xff3bff2a
  41fc7b:	add    BYTE PTR [ebp-0x7d],dh
  41fc7e:	jae    0x41fc40
  41fc80:	add    BYTE PTR [edx],ch
  41fc82:	int3   
  41fc83:	add    BYTE PTR [edi-0x7d],dh
  41fc86:	out    0xa4,al
  41fc88:	call   DWORD PTR [ecx]
  41fc8a:	add    BYTE PTR [ebx+0x70be89cd],al
  41fc90:	dec    DWORD PTR [ebx]
  41fc92:	int3   
  41fc93:	call   DWORD PTR [edx]
  41fc95:	add    BYTE PTR [edx],dl
  41fc97:	jne    0x41fc99
  41fc99:	call   0x5b59:0xffe2ffcc
  41fca0:	adc    DWORD PTR [esi+0x3700ff],0xffffffb6
  41fca7:	pop    edi
  41fca8:	mov    DWORD PTR [ebx-0x3368ff01],esi
  41fcae:	repnz lea eax,[eax]
  41fcb1:	rol    BYTE PTR [eax],0xff
  41fcb4:	xchg   edi,eax
  41fcb5:	sub    DWORD PTR [esi+0x4b],0xffffffff
  41fcb9:	inc    edi
  41fcba:	dec    DWORD PTR [ecx+0x3bddff99]
  41fcc0:	jmp    FWORD PTR [edx-0x77]
  41fcc3:	add    bh,bh
  41fcc5:	dec    DWORD PTR [ecx-0x2f002e]
  41fccb:	add    BYTE PTR [esi-0x762fe87d],ch
  41fcd1:	mov    ebp,0xff9c00ff
  41fcd6:	pop    esp
  41fcd7:	push   eax
  41fcd8:	add    al,dh
  41fcda:	add    BYTE PTR [eax],al
  41fcdc:	scas   eax,DWORD PTR es:[edi]
  41fcdd:	or     ebp,0xe
  41fce0:	add    ah,dh
  41fce2:	inc    DWORD PTR [eax]
  41fce4:	aas    
  41fce5:	jmp    FWORD PTR [edi]
  41fce7:	add    BYTE PTR [eax],0xf6
  41fcea:	(bad)  
  41fceb:	call   FWORD PTR [esi-0x7d]
  41fcee:	add    ebp,DWORD PTR [eax]
  41fcf0:	mov    DWORD PTR [esi],edx
  41fcf2:	add    BYTE PTR [ebx+0x8b5ff98],al
  41fcf8:	int3   
  41fcf9:	push   0x8925ff00
  41fcfe:	sar    dl,0x0
  41fd01:	xor    bh,bh
  41fd03:	push   edi
  41fd05:	call   DWORD PTR [edi]
  41fd07:	lahf   
  41fd08:	(bad)  
  41fd09:	cmp    eax,0xbc00ff
  41fd0e:	retf   0x8369
  41fd11:	xor    eax,0x7c83ff
  41fd16:	pop    esp
  41fd17:	jmp    0x41fd18
  41fd19:	or     eax,DWORD PTR [eax]
  41fd1b:	push   DWORD PTR [eax]
  41fd1d:	jmp    FWORD PTR [ebp-0x4]
  41fd20:	dec    DWORD PTR [eax-0x33633400]
  41fd26:	clc    
  41fd27:	imul   edi,edi,0x4900ff03
  41fd2d:	sbb    DWORD PTR [esi+0x5e],0xffffff83
  41fd31:	pop    eax
  41fd32:	add    DWORD PTR [ebx-0x570100c4],0xffffffff
  41fd39:	rol    BYTE PTR [ebx+0x7183df00],1
  41fd3f:	add    BYTE PTR ss:[esi],ah
  41fd42:	inc    DWORD PTR [ebx+0x4e02ffd3]
  41fd48:	add    BYTE PTR [esi],dh
  41fd4a:	inc    DWORD PTR [eax]
  41fd4c:	xchg   bh,bh
  41fd4e:	push   ebx
  41fd4f:	add    BYTE PTR [eax],0xc9
  41fd52:	inc    DWORD PTR [eax]
  41fd54:	add    cl,BYTE PTR [ecx+0x20ff82c8]
  41fd5a:	cmp    edi,0x3a
  41fd5d:	jmp    ecx
  41fd5f:	nop
  41fd60:	(bad)  
  41fd61:	cmp    al,0x0
  41fd63:	push   esp
  41fd65:	mov    DWORD PTR [edi-0x76b8ff52],ecx
  41fd6b:	add    BYTE PTR [ebx+0x0],dh
  41fd6e:	jl     0x41fd1c
  41fd70:	call   DWORD PTR ds:0x8bff00
  41fd76:	js     0x41fd41
  41fd78:	jmp    FWORD PTR [edx+0x9100ff]
  41fd7e:	in     al,0x11
  41fd80:	add    BYTE PTR [ebp-0x7cb90034],cl
  41fd86:	rcl    BYTE PTR [ecx],0xff
  41fd89:	sbb    eax,DWORD PTR [eax]
  41fd8b:	inc    DWORD PTR [ecx-0x1]
  41fd8e:	pop    es
  41fd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd90:	(bad)  
  41fd91:	out    dx,eax
  41fd92:	add    bh,bh
  41fd94:	push   0x0
  41fd96:	cmc    
  41fd97:	mov    esi,0xffffc8ff
  41fd9c:	cmp    bh,0x57
  41fd9f:	imul   edi,edi,0xc
  41fda2:	add    BYTE PTR [eax],al
  41fda4:	repz int3 
  41fda6:	cmp    ah,BYTE PTR [edx]
  41fda8:	sbb    DWORD PTR [edi-0x1],0xffffffcc
  41fdac:	jmp    DWORD PTR es:[ecx]
  41fdaf:	push   es
  41fdb0:	jmp    esi
  41fdb2:	add    bh,bh
  41fdb4:	mov    esp,0xff2a0200
  41fdb9:	sbb    BYTE PTR [eax],al
  41fdbb:	call   FWORD PTR [ebp-0x34]
  41fdbe:	dec    ebp
  41fdbf:	(bad)  
  41fdc0:	jmp    DWORD PTR [esi+0x0]
  41fdc3:	add    DWORD PTR ds:0x71e400,0x1e
  41fdca:	(bad)  
  41fdcb:	(bad)  
  41fdcc:	jge    0x41fdcd
  41fdce:	aad    0x2f
  41fdd0:	jmp    DWORD PTR [edi-0x7d]
  41fdd3:	call   FWORD PTR [eax]
  41fdd5:	int3   
  41fdd6:	imul   ecx,DWORD PTR [ecx-0xfff500],0xec89ff50
  41fde0:	inc    esi
  41fde2:	add    BYTE PTR [ebx+0x33c5ffe2],al
  41fde8:	call   DWORD PTR [eax-0x765b0001]
  41fdee:	mov    BYTE PTR [edx+0x0],dh
  41fdf1:	aas    
  41fdf2:	mov    edi,edi
  41fdf4:	out    dx,eax
  41fdf5:	jmp    DWORD PTR [edi+0x4b]
  41fdf8:	int3   
  41fdf9:	(bad)  
  41fdfa:	(bad)  
  41fdfb:	call   DWORD PTR [ebx+0xee8183]
  41fe01:	loope  0x41fe03
  41fe03:	dec    DWORD PTR [ebp+0x95a5ff]
  41fe09:	loopne 0x41fe0a
  41fe0b:	sub    esi,0xffffffff
  41fe0e:	cmp    esp,DWORD PTR [ebp-0x1]
  41fe11:	add    eax,0xff5b00ff
  41fe16:	or     eax,0xccc80002
  41fe1b:	jmp    FWORD PTR [ebx+eax*4]
  41fe1e:	lock sub eax,0xccfff0ff
  41fe24:	mov    WORD PTR [eax],es
  41fe26:	fsub   DWORD PTR [eax+eax*1]
  41fe29:	rol    BYTE PTR [eax],cl
  41fe2b:	sub    DWORD PTR [edx],0x0
  41fe2e:	push   edx
  41fe2f:	mov    DWORD PTR [eax],eax
  41fe31:	js     0x41fe33
  41fe33:	add    BYTE PTR [esi-0x1],bh
  41fe36:	loop   0x41fe14
  41fe38:	(bad)  
  41fe39:	jl     0x41fe3a
  41fe3b:	jmp    DWORD PTR [esi-0x1]
  41fe3e:	jle    0x41fdf3
  41fe40:	add    cl,dl
  41fe42:	int3   
  41fe43:	inc    DWORD PTR [edi+edi*8-0x80]
  41fe47:	add    al,0xff
  41fe49:	pop    esp
  41fe4a:	cmp    edi,0x62
  41fe4d:	int3   
  41fe4e:	jge    0x41fe6e
  41fe50:	mov    DWORD PTR [eax-0x33a87d00],eax
  41fe56:	inc    ebp
  41fe57:	xchg   edi,edi
  41fe59:	mov    ecx,0xff18ff83
  41fe5e:	sub    al,BYTE PTR [ecx-0xff1e77]
  41fe64:	inc    ecx
  41fe65:	add    BYTE PTR [edi+0x2e],ah
  41fe68:	add    BYTE PTR [ecx-0x34],ah
  41fe6b:	sbb    DWORD PTR ds:0xff54dd00,0xffffffdb
  41fe72:	(bad)  
  41fe73:	inc    DWORD PTR [ecx+0xf2e700]
  41fe79:	rol    DWORD PTR [ebx+0x3f0010cc],1
  41fe7f:	retf   0xda89
  41fe82:	add    bh,bh
  41fe84:	push   ss
  41fe85:	add    BYTE PTR [esi-0x64],al
  41fe88:	add    BYTE PTR [ecx+0xa0ffff],ch
  41fe8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8f:	xor    eax,DWORD PTR [eax]
  41fe91:	std    
  41fe92:	inc    DWORD PTR [eax]
  41fe94:	jecxz  0x41fe96
  41fe96:	jl     0x41fe30
  41fe98:	mov    esi,ebx
  41fe9a:	add    DWORD PTR [eax],0x9
  41fe9d:	jmp    FWORD PTR [ebp-0xfeff6b]
  41fea3:	inc    DWORD PTR [ecx+0xc95700]
  41fea9:	leave  
  41feaa:	add    bh,bh
  41feac:	mov    esi,0x89678f83
  41feb1:	test   eax,0xff75ffff
  41feb6:	push   ecx
  41feb7:	pop    eax
  41feb8:	adc    DWORD PTR ds:0xff7bff83,0xffffffd4
  41febf:	mov    edx,0xffffd300
  41fec4:	push   ecx
  41fec5:	(bad)  
  41fec6:	(bad)  
  41fec8:	add    BYTE PTR [eax-0x7c410001],bl
  41fece:	and    DWORD PTR [eax],ebx
  41fed0:	add    ebp,0xffffff83
  41fed3:	add    BYTE PTR [edi+edi*8],cl
  41fed6:	add    eax,0xffb80008
  41fedb:	add    BYTE PTR [ebx-0x80e301],ch
  41fee1:	pop    esi
  41fee2:	(bad)  
  41fee3:	(bad)  
  41fee4:	jp     0x41fe6f
  41fee6:	jns    0x41fe80
  41fee8:	add    BYTE PTR [edx+0x0],cl
  41feeb:	add    BYTE PTR [edx-0x1],dl
  41feee:	and    bl,BYTE PTR [edi+0xff2600]
  41fef4:	sbb    al,0xff
  41fef6:	icebp  
  41fef7:	xchg   BYTE PTR [eax],al
  41fef9:	mov    ds:0xff9a00ff,eax
  41fefe:	mov    al,ds:0xf289af
  41ff03:	mov    DWORD PTR [ebx-0x759234],ebx
  41ff09:	mov    edi,?
  41ff0b:	jmp    edi
  41ff0d:	(bad)  
  41ff0e:	cmp    eax,0xff0b00e8
  41ff13:	jmp    DWORD PTR [edx]
  41ff15:	dec    DWORD PTR ds:0xff42002e
  41ff1b:	inc    DWORD PTR [ebx+0x9cf9ff]
  41ff21:	xchg   edx,eax
  41ff22:	add    BYTE PTR [eax],al
  41ff24:	imul   eax,DWORD PTR [ebx+0x1fff9df3],0xfff3ff00
  41ff2e:	(bad)  
  41ff2f:	mov    dh,0xff
  41ff31:	(bad)  
  41ff33:	dec    DWORD PTR [esi+0x7d7389]
  41ff39:	sar    edi,cl
  41ff3b:	inc    DWORD PTR [edx-0x1]
  41ff3e:	invd   
  41ff40:	(bad)  
  41ff41:	js     0x41ff42
  41ff43:	jmp    DWORD PTR [esi-0x1]
  41ff46:	outs   dx,DWORD PTR ds:[esi]
  41ff47:	sbb    edi,edi
  41ff49:	pushf  
  41ff4a:	dec    esp
  41ff4c:	loop   0x41ff4d
  41ff4e:	stos   BYTE PTR es:[edi],al
  41ff4f:	popa   
  41ff50:	add    BYTE PTR [ebx],ch
  41ff52:	add    BYTE PTR [ecx+0x324fff31],cl
  41ff58:	int3   
  41ff59:	mov    edi,0xff4effff
  41ff5e:	inc    edi
  41ff5f:	int    0x83
  41ff61:	xor    bh,bh
  41ff63:	add    BYTE PTR [esi-0xba8900],al
  41ff69:	fld    DWORD PTR [eax]
  41ff6b:	add    BYTE PTR [ecx-0x10cb00],cl
  41ff71:	inc    WORD PTR [ebx+0x4a2bffda]
  41ff78:	adc    DWORD PTR [edx+0x0],0xffffffcc
  41ff7c:	cmp    edi,0xbeffc7b2
  41ff82:	(bad)  
  41ff83:	push   DWORD PTR [edi+edi*8-0x797ccc38]
  41ff8a:	(bad)  
  41ff8b:	dec    DWORD PTR [esi-0x1]
  41ff8e:	sar    BYTE PTR [edi+0xff8bff],1
  41ff94:	adc    eax,DWORD PTR [eax]
  41ff96:	mov    es,WORD PTR [ecx-0x7600f100]
  41ff9c:	call   0xff99:0x7260ff
  41ffa3:	add    bh,cl
  41ffa5:	dec    DWORD PTR [esi+edx*2]
  41ffa8:	add    BYTE PTR [ecx+0x0],cl
  41ffab:	int3   
  41ffac:	mov    ds:0x1ede00,al
  41ffb1:	inc    esi
  41ffb2:	cmp    edi,0x6b
  41ffb5:	dec    DWORD PTR [ebx]
  41ffb7:	bound  eax,QWORD PTR [eax]
  41ffb9:	sub    bh,bh
  41ffbb:	add    BYTE PTR [edi+0xf11bff],al
  41ffc1:	adc    edi,edi
  41ffc3:	mov    DWORD PTR [esi+0xfe4b00],ecx
  41ffc9:	lock inc DWORD PTR [ebx-0x42f5004d]
  41ffd0:	dec    DWORD PTR [ebx-0x338fff01]
  41ffd6:	cmp    eax,0x88ff57
  41ffdb:	(bad)  
  41ffdc:	in     eax,dx
  41ffdd:	(bad)  
  41ffde:	cmp    ebp,DWORD PTR [esi]
  41ffe0:	add    BYTE PTR [esi-0x1],dh
  41ffe3:	call   DWORD PTR ds:0xff6d5889
  41ffe9:	or     bh,bh
  41ffeb:	mov    DWORD PTR [edx],esi
  41ffed:	jmp    FWORD PTR [esi]
  41ffef:	pop    es
  41fff0:	add    BYTE PTR [edi+edi*8-0x3008800],al
  41fff7:	loope  0x41fff9
  41fff9:	sub    al,0x0
  41fffb:	mov    DWORD PTR [edx],esi
  41fffd:	add    BYTE PTR [ecx],dh
  41ffff:	add    ecx,DWORD PTR [ecx-0x200033f8]
  420005:	jmp    FWORD PTR [edx-0x33ebff09]
  42000b:	push   DWORD PTR [edi-0x7d]
  42000e:	mov    WORD PTR [ebp-0x7cff9701],ds
  420014:	pop    es
  420015:	add    BYTE PTR [ebx+0x10],ch
  420018:	add    BYTE PTR [esi-0x7d],bh
  42001b:	or     DWORD PTR [ebp-0x34],0xfffffff5
  42001f:	retf   
  420020:	and    DWORD PTR [ebx+0x9affff],0x9
  420027:	dec    edx
  420028:	add    cl,cl
  42002a:	add    DWORD PTR [eax],0xffffffdb
  42002d:	add    BYTE PTR [eax],cl
  42002f:	push   cs
  420030:	jmp    DWORD PTR [esi]
  420032:	add    BYTE PTR [eax],al
  420034:	in     eax,0xff
  420036:	or     DWORD PTR [ebp-0x34],edx
  420039:	ret    0xff00
  42003c:	iret   
  42003d:	add    BYTE PTR [ebx+0xa0003a],al
  420043:	call   FWORD PTR [edx+0x0]
  420046:	xor    edx,DWORD PTR [ecx-0x2a77]
  42004c:	stos   DWORD PTR es:[edi],eax
  42004d:	call   FWORD PTR [esi-0x59]
  420050:	jmp    FWORD PTR [ecx]
  420052:	cmp    edi,0xffffffd1
  420055:	mov    DWORD PTR [eax-0x2],ebp
  420058:	int3   
  420059:	adc    ecx,esp
  42005b:	sub    DWORD PTR [esi-0xa01601],0xfffffff3
  420062:	int3   
  420063:	call   DWORD PTR [ebx]
  420065:	mov    DWORD PTR [edx-0x7c77ff09],ecx
  42006b:	dec    DWORD PTR [eax-0x8d3801]
  420071:	mov    dl,0x0
  420073:	int3   
  420074:	rol    BYTE PTR [eax],0xdd
  420077:	daa    
  420078:	call   DWORD PTR [edi+0x968900]
  42007e:	xor    ecx,DWORD PTR ss:[ecx+0xbff0022]
  420085:	push   DWORD PTR [esp+ecx*1]
  420088:	int3   
  420089:	push   ss
  42008a:	inc    DWORD PTR [eax]
  42008c:	mov    eax,DWORD PTR [eax]
  42008e:	xchg   DWORD PTR [ebp-0x7600bd01],ecx
  420094:	out    dx,eax
  420095:	jmp    DWORD PTR [esi]
  420097:	in     al,dx
  420098:	add    BYTE PTR [esp+ecx*8+0x6e001700],bh
  42009f:	scas   al,BYTE PTR es:[edi]
  4200a0:	(bad)  
  4200a1:	cmp    al,BYTE PTR [eax]
  4200a3:	(bad)  
  4200a4:	clc    
  4200a5:	add    al,bl
  4200a7:	add    eax,0x85ff
  4200ac:	dec    eax
  4200ad:	jmp    FWORD PTR [ecx]
  4200af:	mov    ecx,0x83008200
  4200b4:	pop    es
  4200b5:	(bad)  
  4200b6:	fist   WORD PTR [ecx]
  4200b8:	add    BYTE PTR [edi],ah
  4200ba:	mov    edi,edi
  4200bc:	out    dx,eax
  4200bd:	int3   
  4200be:	xchg   esp,eax
  4200bf:	sbb    BYTE PTR [eax],al
  4200c1:	ins    DWORD PTR es:[edi],dx
  4200c2:	inc    DWORD PTR [eax]
  4200c4:	xor    eax,0x2d3983
  4200c9:	or     al,0xff
  4200cb:	mov    DWORD PTR [eax-0x1],edi
  4200ce:	push   ecx
  4200cf:	dec    ebx
  4200d0:	call   FWORD PTR [edi]
  4200d2:	inc    DWORD PTR [eax]
  4200d4:	xchg   BYTE PTR [eax],al
  4200d6:	push   es
  4200d7:	xchg   ebp,eax
  4200d8:	jmp    FWORD PTR [ecx]
  4200da:	inc    DWORD PTR [eax]
  4200dc:	sub    edi,edi
  4200de:	mov    ah,0x7a
  4200e0:	and    DWORD PTR [ebx-0x77],0xffffffff
  4200e4:	(bad)  
  4200e6:	mov    dl,0xfd
  4200e8:	xor    eax,0xffffffff
  4200eb:	sbb    edi,0xffffff89
  4200ee:	out    0x28,al
  4200f0:	add    BYTE PTR [edi+0x1383ff],bh
  4200f6:	in     al,0xb3
  4200f8:	mov    DWORD PTR [esi],edx
  4200fa:	mov    DWORD PTR [eax],eax
  4200fc:	xchg   edi,eax
  4200fd:	int3   
  4200fe:	leave  
  4200ff:	ror    ah,1
  420101:	or     al,BYTE PTR [eax]
  420103:	jmp    DWORD PTR ds:0xcca68acc
  420109:	push   ebp
  42010a:	dec    esp
  42010c:	mov    eax,DWORD PTR [ebx+0x65ff4f24]
  420112:	cmp    edi,0x65
  420115:	int3   
  420116:	sub    al,0x5b
  420118:	add    BYTE PTR [ebp-0x590001],bl
  42011e:	cmp    DWORD PTR [edi+0x0],edx
  420121:	inc    esi
  420122:	(bad)  
  420123:	(bad)  
  420124:	jl     0x4200f2
  420126:	or     cl,cl
  420128:	add    bl,bl
  42012a:	int3   
  42012b:	(bad)  
  42012c:	jmp    0x4200b1
  42012e:	mov    ebp,0xffa68351
  420133:	add    BYTE PTR [edi+0x0],ch
  420136:	out    dx,al
  420137:	(bad)  
  420139:	(bad)  
  42013a:	cmp    edi,0x4e
  42013d:	add    BYTE PTR [ecx+0x63],cl
  420140:	dec    ecx
  420142:	add    BYTE PTR [ecx+0x101ff84],cl
  420148:	push   DWORD PTR [ebx+0x0]
  42014b:	add    al,dl
  42014d:	add    al,cl
  42014f:	mov    esp,ecx
  420151:	jno    0x420152
  420153:	inc    DWORD PTR [ebp-0x623d00]
  420159:	push   ss
  42015a:	inc    DWORD PTR [eax]
  42015c:	(bad)  
  42015d:	inc    ecx
  42015f:	inc    ebx
  420160:	add    ebx,0x0
  420163:	(bad)  
  420164:	cli    
  420165:	add    BYTE PTR ds:0xff2600eb,ch
  42016b:	add    BYTE PTR [ecx],ah
  42016d:	add    BYTE PTR [ebp+0x988378],bh
  420173:	(bad)  
  420174:	cli    
  420175:	sbb    DWORD PTR [ebp+0x41],0xffffffff
  420179:	xchg   ecx,eax
  42017a:	(bad)  
  42017b:	jmp    esi
  42017d:	sub    DWORD PTR [esi],0xffffffe9
  420180:	add    BYTE PTR [esi-0x19ff01],ah
  420186:	mov    ecx,0xc4ff5e
  42018b:	jmp    FWORD PTR [edx+0xcf67ff]
  420191:	xchg   DWORD PTR [eax],eax
  420193:	jmp    DWORD PTR [ecx-0x7c812d7d]
  420199:	fadd   DWORD PTR [ebx+0x26ff07ff]
  42019f:	sbb    bh,bh
  4201a1:	pushf  
  4201a2:	dec    DWORD PTR [ecx-0x6c2800c3]
  4201a8:	add    BYTE PTR [ebp-0x1],bh
  4201ab:	mov    DWORD PTR [ecx-0x34],esi
  4201ae:	jge    0x420221
  4201b0:	adc    DWORD PTR [ebp+0xfb00ff],0xffffff9b
  4201b7:	loopne 0x4201b9
  4201b9:	xchg   ebp,eax
  4201ba:	dec    esp
  4201bc:	push   0xffa57583
  4201c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c2:	(bad)  
  4201c3:	call   FWORD PTR [edi+0x68a089]
  4201c9:	jne    0x4201ca
  4201cb:	(bad)  
  4201cc:	cmp    BYTE PTR [eax],al
  4201ce:	cli    
  4201cf:	xchg   ah,cl
  4201d1:	mov    eax,DWORD PTR [eax]
  4201d3:	add    BYTE PTR [ebx-0x1],bl
  4201d6:	push   edi
  4201d7:	xchg   ebp,eax
  4201d8:	sub    DWORD PTR [eax],0xffffffff
  4201db:	dec    DWORD PTR [eax+0xfcf200]
  4201e1:	ds mov edi,edi
  4201e4:	sub    BYTE PTR [eax],al
  4201e6:	stos   DWORD PTR es:[edi],eax
  4201e7:	lods   eax,DWORD PTR ds:[esi]
  4201e8:	inc    DWORD PTR [esi-0x7c68ff01]
  4201ee:	arpl   WORD PTR [eax-0x967d],sp
  4201f4:	pop    ecx
  4201f5:	inc    DWORD PTR [ecx]
  4201f7:	retf   0x6000
  4201fa:	add    BYTE PTR [eax],al
  4201fc:	push   edi
  4201fd:	jmp    FWORD PTR [edx+0x66]
  420200:	(bad)  
  420201:	cmp    al,BYTE PTR [eax]
  420203:	inc    DWORD PTR [ebp-0x7c570f00]
  420209:	mov    dl,0x0
  42020b:	and    DWORD PTR [esi],0xffffffff
  42020e:	(bad)  
  42020f:	stos   DWORD PTR es:[edi],eax
  420210:	add    dl,dl
  420212:	add    BYTE PTR [eax],al
  420214:	pop    ebx
  420215:	add    ch,ah
  420217:	aaa    
  420218:	call   FWORD PTR ds:0xff1d83ff
  42021e:	jl     0x420262
  420220:	mov    DWORD PTR [ecx],esi
  420222:	(bad)  
  420223:	(bad)  
  420224:	jmp    0xffa7:0xb7e700
  42022b:	mov    DWORD PTR [edx-0xbc8377],ebp
  420231:	inc    eax
  420232:	dec    DWORD PTR [ecx+0x5d7883b6]
  420238:	add    BYTE PTR [edx+0x0],bh
  42023b:	push   eax
  42023d:	(bad)  
  42023e:	cld    
  42023f:	dec    ecx
  420240:	inc    DWORD PTR [edi]
  420242:	cmp    edi,0xffffffd7
  420245:	add    bl,ch
  420247:	mov    esi,0xff005600
  42024c:	mov    esp,cs
  42024e:	inc    ebp
  42024f:	fdiv   st(7),st
  420251:	or     al,0x0
  420253:	call   FWORD PTR [edi]
  420255:	add    BYTE PTR [esi+eax*8-0x1],cl
  420259:	ret    0xff00
  42025c:	push   es
  42025d:	mov    DWORD PTR [edx-0x5a],esp
  420260:	add    BYTE PTR [ebp-0x76250100],bl
  420266:	push   edi
  420267:	push   ss
  420268:	add    BYTE PTR [edx-0x1],dh
  42026b:	dec    DWORD PTR [ecx+0x32e4ff]
  420271:	inc    edx
  420272:	(bad)  
  420273:	inc    DWORD PTR [eax]
  420275:	inc    DWORD PTR [ebp-0x48001d]
  42027b:	adc    DWORD PTR [eax+eax*1+0x590091e5],0x0
  420283:	add    BYTE PTR [edi],bl
  420285:	(bad)  
  420286:	mov    ebp,0xff3eff31
  42028b:	push   eax
  42028d:	mov    DWORD PTR [esi+0x69],ecx
  420290:	add    bl,dl
  420292:	int3   
  420293:	int3   
  420294:	ror    esp,cl
  420296:	jb     0x4202d3
  420298:	add    bh,bl
  42029a:	add    BYTE PTR [ebx-0x1557ff8f],al
  4202a0:	add    BYTE PTR [ecx],ah
  4202a2:	cmp    edi,0xe
  4202a5:	add    BYTE PTR [ebp+0xc4ff7c],bh
  4202ab:	cmp    DWORD PTR [eax],0xffffff83
  4202ae:	sbb    edx,DWORD PTR [ebx]
  4202b0:	add    BYTE PTR [edi+0x6000ff],ch
  4202b6:	pusha  
  4202b7:	fild   DWORD PTR [ebx+0x45ccff26]
  4202bd:	add    BYTE PTR [edx-0x331233aa],ah
  4202c3:	add    BYTE PTR [ecx+0x517900],dl
  4202c9:	fiadd  WORD PTR [eax]
  4202cb:	xor    DWORD PTR [edi+edi*8+0x6],0xffffff9e
  4202d0:	dec    DWORD PTR [ecx-0x1d0100]
  4202d6:	mov    ah,0xe2
  4202d8:	add    BYTE PTR [ebx-0x7cdf007d],bl
  4202de:	mov    ds:0xff46ffd1,eax
  4202e3:	xor    edx,0xffffffff
  4202e6:	add    DWORD PTR [eax+0xcc8489],ecx
  4202ec:	push   edi
  4202ed:	mov    DWORD PTR [edx+ebp*4-0x7d],ebp
  4202f1:	jecxz  0x4202f3
  4202f3:	int3   
  4202f4:	dec    edi
  4202f5:	mov    DWORD PTR [esi+0x50ff29],esp
  4202fb:	jmp    DWORD PTR [eax-0x1]
  4202fe:	jmp    FWORD PTR [edi+edi*8-0x33]
  420302:	add    bh,bh
  420304:	dec    eax
  420305:	mov    DWORD PTR [edx],edx
  420307:	lock sub DWORD PTR [eax+eax*1+0x59003800],0x6a
  420310:	jmp    FWORD PTR [edx]
  420312:	int3   
  420313:	jmp    FWORD PTR [edx-0xf61d7d]
  420319:	add    bh,bh
  42031b:	int3   
  42031c:	jmp    0x7e0e21
  420321:	cmp    al,0x0
  420323:	call   DWORD PTR [eax]
  420325:	call   FWORD PTR [eax-0x49]
  420328:	call   DWORD PTR [eax-0x1]
  42032b:	(bad)  
  42032c:	mov    esp,0xfb8900
  420331:	(bad)  
  420333:	add    DWORD PTR [esi-0x7c76c900],0xffffffb8
  42033a:	(bad)  
  42033b:	dec    DWORD PTR ds:0xff56e7ff
  420341:	jb     0x420343
  420343:	jmp    FWORD PTR [eax+eax*1-0x12000b90]
  42034a:	dec    esp
  42034c:	add    edi,edi
  42034e:	jmp    0x84360277
  420353:	jmp    DWORD PTR [edx]
  420355:	int3   
  420356:	nop
  420357:	add    BYTE PTR ss:[edi+edi*8+0x698980ff],dl
  42035f:	jne    0x4202e4
  420361:	scas   al,BYTE PTR es:[edi]
  420362:	(bad)  
  420363:	jmp    FWORD PTR [esi-0x7d]
  420366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420367:	mov    al,0xff
  420369:	(bad)  
  42036a:	inc    DWORD PTR [ebx+0x50fc89b1]
  420370:	cmp    esi,0xffffffcc
  420373:	(bad)  
  420374:	jle    0x4202f9
  420376:	shl    DWORD PTR ds:0xff1e89,1
  42037c:	lock call FWORD PTR [esi]
  42037f:	aad    0xff
  420381:	and    eax,0xf5ff00
  420386:	mov    edi,0xff8d8931
  42038b:	mov    DWORD PTR [edi-0x1],ecx
  42038e:	dec    ecx
  42038f:	in     al,0xff
  420391:	jae    0x420392
  420393:	int3   
  420394:	outs   dx,DWORD PTR ds:[esi]
  420395:	int3   
  420396:	mov    al,0x6c
  420398:	call   DWORD PTR [edx]
  42039a:	dec    esp
  42039c:	mov    bh,0xff
  42039e:	jg     0x4203dc
  4203a0:	call   DWORD PTR [ebp-0x1]
  4203a3:	add    BYTE PTR [eax+eax*1+0x69cc4f0f],ch
  4203aa:	mov    edi,edi
  4203ac:	loope  0x4203ad
  4203ae:	dec    ebx
  4203af:	pop    ecx
  4203b0:	add    BYTE PTR [ebp+0x0],al
  4203b3:	push   DWORD PTR [edi+0x0]
  4203b6:	mov    eax,0x15ff50
  4203bb:	jmp    edx
  4203bd:	inc    DWORD PTR [eax-0x7e]
  4203c0:	jmp    FWORD PTR [edx-0x34]
  4203c3:	push   DWORD PTR [eax-0x1]
  4203c6:	aam    0x9c
  4203c8:	push   eax
  4203ca:	inc    DWORD PTR [eax]
  4203cc:	adc    eax,0x6485ff
  4203d1:	adc    DWORD PTR [ebx+0x6d0094ff],eax
  4203d7:	sub    al,0xff
  4203d9:	stos   BYTE PTR es:[edi],al
  4203da:	add    DWORD PTR [eax],0xfffffff0
  4203dd:	mov    DWORD PTR [ebx+0x6b],esp
  4203e0:	(bad)  
  4203e1:	mov    esp,0x9f0000
  4203e6:	test   BYTE PTR [esi+0xff1aff],bl
  4203ec:	mov    WORD PTR [eax],es
  4203ee:	loop   0x4203bf
  4203f0:	sub    esp,0x124
  4203f6:	push   ebx
  4203f7:	push   ebp
  4203f8:	push   esi
  4203f9:	mov    esi,DWORD PTR ds:0x44400c
  4203ff:	push   edi
  420400:	push   0xab
  420405:	push   0x42
  420407:	call   esi
  420409:	push   0x6
  42040b:	push   0x42
  42040d:	mov    DWORD PTR [esp+0x1c],eax
  420411:	call   esi
  420413:	mov    esi,DWORD PTR ds:0x447d00
  420419:	mov    ebx,DWORD PTR ds:0x444004
  42041f:	mov    ebp,DWORD PTR ds:0x444008
  420425:	mov    DWORD PTR [esp+0x10],eax
  420429:	mov    eax,ds:0x447000
  42042e:	add    esi,0x1b5c0
  420434:	mov    edi,0x2a7
  420439:	lea    esp,[esp+0x0]
  420440:	movzx  ecx,BYTE PTR [eax+0x5]
  420444:	movzx  edx,BYTE PTR [eax+0x3]
  420448:	movzx  eax,WORD PTR [eax+0x1]
  42044c:	shl    ecx,0x8
  42044f:	add    ecx,edx
  420451:	shl    ecx,0x10
  420454:	add    ecx,eax
  420456:	mov    DWORD PTR ds:0x447cf0,ecx
  42045c:	lea    ecx,[esp+0x18]
  420460:	push   ecx
  420461:	push   0x0
  420463:	push   0x3
  420465:	call   ebx
  420467:	mov    edx,0x9fcd90d1
  42046c:	sub    edx,DWORD PTR ds:0x447cfc
  420472:	push   0x0
  420474:	xor    edx,DWORD PTR ds:0x447cf0
  42047a:	add    esi,0x4
  42047d:	mov    DWORD PTR [esi-0x4],edx
  420480:	call   ebp
  420482:	mov    eax,ds:0x447000
  420487:	add    eax,0x8
  42048a:	dec    edi
  42048b:	mov    ds:0x447000,eax
  420490:	jne    0x420440
  420492:	mov    ecx,DWORD PTR ds:0x447d00
  420498:	mov    edx,DWORD PTR ds:0x447004
  42049e:	add    ecx,0x1c05c
  4204a4:	mov    esi,0xc1
  4204a9:	lea    esp,[esp+0x0]
  4204b0:	movzx  eax,WORD PTR [edx+0x5]
  4204b4:	movzx  edi,BYTE PTR [edx+0x2]
  4204b8:	movzx  edx,BYTE PTR [edx]
  4204bb:	shl    eax,0x8
  4204be:	add    eax,edi
  4204c0:	shl    eax,0x8
  4204c3:	add    eax,edx
  4204c5:	mov    ds:0x447cf0,eax
  4204ca:	mov    edx,0xb47d8ef8
  4204cf:	sub    edx,DWORD PTR ds:0x447cfc
  4204d5:	add    ecx,0x8
  4204d8:	xor    edx,eax
  4204da:	mov    DWORD PTR [ecx-0x8],edx
  4204dd:	mov    edx,DWORD PTR ds:0x447004
  4204e3:	movzx  eax,BYTE PTR [edx+0xc]
  4204e7:	movzx  edi,WORD PTR [edx+0x9]
  4204eb:	movzx  edx,BYTE PTR [edx+0x7]
  4204ef:	shl    eax,0x10
  4204f2:	add    eax,edi
  4204f4:	shl    eax,0x8
  4204f7:	add    eax,edx
  4204f9:	mov    edx,0xb47d8ef8
  4204fe:	sub    edx,DWORD PTR ds:0x447cfc
  420504:	mov    ds:0x447cf0,eax
  420509:	xor    edx,eax
  42050b:	mov    DWORD PTR [ecx-0x4],edx
  42050e:	mov    edx,DWORD PTR ds:0x447004
  420514:	add    edx,0x10
  420517:	dec    esi
  420518:	mov    DWORD PTR ds:0x447004,edx
  42051e:	jne    0x4204b0
  420520:	mov    edx,DWORD PTR ds:0x447d00
  420526:	mov    eax,DWORD PTR [esp+0x138]
  42052d:	add    edx,0x1c664
  420533:	add    eax,0x4
  420536:	mov    esi,0xfd
  42053b:	jmp    0x420540
  42053d:	lea    ecx,[ecx+0x0]
  420540:	movzx  ecx,BYTE PTR [eax+0x3]
  420544:	movzx  edi,WORD PTR [eax]
  420547:	shl    ecx,0x10
  42054a:	add    ecx,edi
  42054c:	movzx  edi,BYTE PTR [eax-0x3]
  420550:	shl    ecx,0x8
  420553:	add    ecx,edi
  420555:	mov    edi,DWORD PTR ds:0x447cfc
  42055b:	mov    DWORD PTR ds:0x447cf0,ecx
  420561:	add    edi,0x806acb8f
  420567:	xor    edi,ecx
  420569:	mov    DWORD PTR [edx],edi
  42056b:	movzx  ecx,BYTE PTR [eax+0xb]
  42056f:	movzx  edi,WORD PTR [eax+0x8]
  420573:	shl    ecx,0x10
  420576:	add    ecx,edi
  420578:	movzx  edi,BYTE PTR [eax+0x5]
  42057c:	shl    ecx,0x8
  42057f:	add    ecx,edi
  420581:	mov    edi,DWORD PTR ds:0x447cfc
  420587:	mov    DWORD PTR ds:0x447cf0,ecx
  42058d:	add    edi,0x806acb8f
  420593:	xor    edi,ecx
  420595:	mov    DWORD PTR [edx+0x4],edi
  420598:	movzx  ecx,BYTE PTR [eax+0x13]
  42059c:	movzx  edi,WORD PTR [eax+0x10]
  4205a0:	shl    ecx,0x10
  4205a3:	add    ecx,edi
  4205a5:	movzx  edi,BYTE PTR [eax+0xd]
  4205a9:	shl    ecx,0x8
  4205ac:	add    ecx,edi
  4205ae:	mov    edi,DWORD PTR ds:0x447cfc
  4205b4:	add    edi,0x806acb8f
  4205ba:	xor    edi,ecx
  4205bc:	mov    DWORD PTR ds:0x447cf0,ecx
  4205c2:	mov    DWORD PTR [edx+0x8],edi
  4205c5:	add    eax,0x18
  4205c8:	add    edx,0xc
  4205cb:	dec    esi
  4205cc:	jne    0x420540
  4205d2:	mov    eax,ds:0x447d00
  4205d7:	mov    edx,DWORD PTR ds:0x447008
  4205dd:	add    eax,0x1d240
  4205e2:	mov    esi,0x3a
  4205e7:	jmp    0x4205f0
  4205e9:	lea    esp,[esp+0x0]
  4205f0:	movzx  ecx,WORD PTR [edx+0x8]
  4205f4:	movzx  edx,WORD PTR [edx]
  4205f7:	shl    ecx,0x10
  4205fa:	add    ecx,edx
  4205fc:	mov    DWORD PTR ds:0x447cf0,ecx
  420602:	mov    edx,0x45c76548
  420607:	sub    edx,DWORD PTR ds:0x447cfc
  42060d:	xor    edx,ecx
  42060f:	mov    DWORD PTR [eax],edx
  420611:	mov    edx,DWORD PTR ds:0x447008
  420617:	movzx  ecx,BYTE PTR [edx+0xf]
  42061b:	movzx  edi,BYTE PTR [edx+0xd]
  42061f:	movzx  edx,WORD PTR [edx+0xa]
  420623:	shl    ecx,0x8
  420626:	add    ecx,edi
  420628:	shl    ecx,0x10
  42062b:	add    ecx,edx
  42062d:	mov    DWORD PTR ds:0x447cf0,ecx
  420633:	mov    edx,0x45c76548
  420638:	sub    edx,DWORD PTR ds:0x447cfc
  42063e:	xor    edx,ecx
  420640:	mov    DWORD PTR [eax+0x4],edx
  420643:	mov    edx,DWORD PTR ds:0x447008
  420649:	add    edx,0x10
  42064c:	mov    DWORD PTR ds:0x447008,edx
  420652:	movzx  ecx,WORD PTR [edx+0x8]
  420656:	movzx  edx,WORD PTR [edx]
  420659:	shl    ecx,0x10
  42065c:	add    ecx,edx
  42065e:	mov    DWORD PTR ds:0x447cf0,ecx
  420664:	mov    edx,0x45c76548
  420669:	sub    edx,DWORD PTR ds:0x447cfc
  42066f:	xor    edx,ecx
  420671:	mov    DWORD PTR [eax+0x8],edx
  420674:	mov    edx,DWORD PTR ds:0x447008
  42067a:	movzx  ecx,BYTE PTR [edx+0xf]
  42067e:	movzx  edi,BYTE PTR [edx+0xd]
  420682:	movzx  edx,WORD PTR [edx+0xa]
  420686:	shl    ecx,0x8
  420689:	add    ecx,edi
  42068b:	shl    ecx,0x10
  42068e:	add    ecx,edx
  420690:	mov    DWORD PTR ds:0x447cf0,ecx
  420696:	mov    edx,0x45c76548
  42069b:	sub    edx,DWORD PTR ds:0x447cfc
  4206a1:	xor    edx,ecx
  4206a3:	mov    DWORD PTR [eax+0xc],edx
  4206a6:	mov    edx,DWORD PTR ds:0x447008
  4206ac:	add    edx,0x10
  4206af:	mov    DWORD PTR ds:0x447008,edx
  4206b5:	movzx  ecx,WORD PTR [edx+0x8]
  4206b9:	movzx  edx,WORD PTR [edx]
  4206bc:	shl    ecx,0x10
  4206bf:	add    ecx,edx
  4206c1:	mov    DWORD PTR ds:0x447cf0,ecx
  4206c7:	mov    edx,0x45c76548
  4206cc:	sub    edx,DWORD PTR ds:0x447cfc
  4206d2:	xor    edx,ecx
  4206d4:	mov    DWORD PTR [eax+0x10],edx
  4206d7:	mov    edx,DWORD PTR ds:0x447008
  4206dd:	movzx  ecx,BYTE PTR [edx+0xf]
  4206e1:	movzx  edi,BYTE PTR [edx+0xd]
  4206e5:	movzx  edx,WORD PTR [edx+0xa]
  4206e9:	shl    ecx,0x8
  4206ec:	add    ecx,edi
  4206ee:	shl    ecx,0x10
  4206f1:	add    ecx,edx
  4206f3:	mov    edx,0x45c76548
  4206f8:	sub    edx,DWORD PTR ds:0x447cfc
  4206fe:	mov    DWORD PTR ds:0x447cf0,ecx
  420704:	xor    edx,ecx
  420706:	mov    DWORD PTR [eax+0x14],edx
  420709:	mov    edx,DWORD PTR ds:0x447008
  42070f:	add    edx,0x10
  420712:	mov    DWORD PTR ds:0x447008,edx
  420718:	movzx  ecx,WORD PTR [edx+0x8]
  42071c:	movzx  edx,WORD PTR [edx]
  42071f:	shl    ecx,0x10
  420722:	add    ecx,edx
  420724:	mov    DWORD PTR ds:0x447cf0,ecx
  42072a:	mov    edx,0x45c76548
  42072f:	sub    edx,DWORD PTR ds:0x447cfc
  420735:	add    eax,0x30
  420738:	xor    edx,ecx
  42073a:	mov    DWORD PTR [eax-0x18],edx
  42073d:	mov    edx,DWORD PTR ds:0x447008
  420743:	movzx  ecx,BYTE PTR [edx+0xf]
  420747:	movzx  edi,BYTE PTR [edx+0xd]
  42074b:	movzx  edx,WORD PTR [edx+0xa]
  42074f:	shl    ecx,0x8
  420752:	add    ecx,edi
  420754:	shl    ecx,0x10
  420757:	add    ecx,edx
  420759:	mov    DWORD PTR ds:0x447cf0,ecx
  42075f:	mov    edx,0x45c76548
  420764:	sub    edx,DWORD PTR ds:0x447cfc
  42076a:	xor    edx,ecx
  42076c:	mov    DWORD PTR [eax-0x14],edx
  42076f:	mov    edx,DWORD PTR ds:0x447008
  420775:	add    edx,0x10
  420778:	mov    DWORD PTR ds:0x447008,edx
  42077e:	movzx  ecx,WORD PTR [edx+0x8]
  420782:	movzx  edx,WORD PTR [edx]
  420785:	shl    ecx,0x10
  420788:	add    ecx,edx
  42078a:	mov    DWORD PTR ds:0x447cf0,ecx
  420790:	mov    edx,0x45c76548
  420795:	sub    edx,DWORD PTR ds:0x447cfc
  42079b:	xor    edx,ecx
  42079d:	mov    DWORD PTR [eax-0x10],edx
  4207a0:	mov    edx,DWORD PTR ds:0x447008
  4207a6:	movzx  ecx,BYTE PTR [edx+0xf]
  4207aa:	movzx  edi,BYTE PTR [edx+0xd]
  4207ae:	movzx  edx,WORD PTR [edx+0xa]
  4207b2:	shl    ecx,0x8
  4207b5:	add    ecx,edi
  4207b7:	shl    ecx,0x10
  4207ba:	add    ecx,edx
  4207bc:	mov    DWORD PTR ds:0x447cf0,ecx
  4207c2:	mov    edx,0x45c76548
  4207c7:	sub    edx,DWORD PTR ds:0x447cfc
  4207cd:	xor    edx,ecx
  4207cf:	mov    DWORD PTR [eax-0xc],edx
  4207d2:	mov    edx,DWORD PTR ds:0x447008
  4207d8:	add    edx,0x10
  4207db:	mov    DWORD PTR ds:0x447008,edx
  4207e1:	movzx  ecx,WORD PTR [edx+0x8]
  4207e5:	movzx  edx,WORD PTR [edx]
  4207e8:	shl    ecx,0x10
  4207eb:	add    ecx,edx
  4207ed:	mov    DWORD PTR ds:0x447cf0,ecx
  4207f3:	mov    edx,0x45c76548
  4207f8:	sub    edx,DWORD PTR ds:0x447cfc
  4207fe:	xor    edx,ecx
  420800:	mov    DWORD PTR [eax-0x8],edx
  420803:	mov    edx,DWORD PTR ds:0x447008
  420809:	movzx  ecx,BYTE PTR [edx+0xf]
  42080d:	movzx  edi,BYTE PTR [edx+0xd]
  420811:	movzx  edx,WORD PTR [edx+0xa]
  420815:	shl    ecx,0x8
  420818:	add    ecx,edi
  42081a:	shl    ecx,0x10
  42081d:	add    ecx,edx
  42081f:	mov    edx,0x45c76548
  420824:	sub    edx,DWORD PTR ds:0x447cfc
  42082a:	mov    DWORD PTR ds:0x447cf0,ecx
  420830:	xor    edx,ecx
  420832:	mov    DWORD PTR [eax-0x4],edx
  420835:	mov    edx,DWORD PTR ds:0x447008
  42083b:	add    edx,0x10
  42083e:	dec    esi
  42083f:	mov    DWORD PTR ds:0x447008,edx
  420845:	jne    0x4205f0
  42084b:	movzx  ecx,WORD PTR [edx+0x8]
  42084f:	movzx  edx,WORD PTR [edx]
  420852:	shl    ecx,0x10
  420855:	add    ecx,edx
  420857:	mov    edx,DWORD PTR ds:0x447cfc
  42085d:	add    edx,0x45bf6540
  420863:	xor    edx,ecx
  420865:	mov    DWORD PTR ds:0x447cf0,ecx
  42086b:	mov    DWORD PTR [eax],edx
  42086d:	mov    ecx,DWORD PTR ds:0x447d00
  420873:	mov    edx,DWORD PTR ds:0x44700c
  420879:	add    ecx,0x1dd24
  42087f:	mov    esi,0x98
  420884:	movzx  eax,BYTE PTR [edx+0x7]
  420888:	movzx  edi,BYTE PTR [edx+0x5]
  42088c:	movzx  edx,WORD PTR [edx+0x1]
  420890:	shl    eax,0x8
  420893:	add    eax,edi
  420895:	shl    eax,0x10
  420898:	add    eax,edx
  42089a:	mov    ds:0x447cf0,eax
  42089f:	mov    edx,0xf387ee7e
  4208a4:	sub    edx,DWORD PTR ds:0x447cfc
  4208aa:	add    ecx,0x14
  4208ad:	xor    edx,eax
  4208af:	mov    DWORD PTR [ecx-0x14],edx
  4208b2:	mov    edx,DWORD PTR ds:0x44700c
  4208b8:	add    edx,0x8
  4208bb:	mov    DWORD PTR ds:0x44700c,edx
  4208c1:	movzx  eax,BYTE PTR [edx+0x7]
  4208c5:	movzx  edi,BYTE PTR [edx+0x5]
  4208c9:	movzx  edx,WORD PTR [edx+0x1]
  4208cd:	shl    eax,0x8
  4208d0:	add    eax,edi
  4208d2:	shl    eax,0x10
  4208d5:	add    eax,edx
  4208d7:	mov    ds:0x447cf0,eax
  4208dc:	mov    edx,0xf387ee7e
  4208e1:	sub    edx,DWORD PTR ds:0x447cfc
  4208e7:	xor    edx,eax
  4208e9:	mov    DWORD PTR [ecx-0x10],edx
  4208ec:	mov    edx,DWORD PTR ds:0x44700c
  4208f2:	add    edx,0x8
  4208f5:	mov    DWORD PTR ds:0x44700c,edx
  4208fb:	movzx  eax,BYTE PTR [edx+0x7]
  4208ff:	movzx  edi,BYTE PTR [edx+0x5]
  420903:	movzx  edx,WORD PTR [edx+0x1]
  420907:	shl    eax,0x8
  42090a:	add    eax,edi
  42090c:	shl    eax,0x10
  42090f:	add    eax,edx
  420911:	mov    ds:0x447cf0,eax
  420916:	mov    edx,0xf387ee7e
  42091b:	sub    edx,DWORD PTR ds:0x447cfc
  420921:	xor    edx,eax
  420923:	mov    DWORD PTR [ecx-0xc],edx
  420926:	mov    edx,DWORD PTR ds:0x44700c
  42092c:	add    edx,0x8
  42092f:	mov    DWORD PTR ds:0x44700c,edx
  420935:	movzx  eax,BYTE PTR [edx+0x7]
  420939:	movzx  edi,BYTE PTR [edx+0x5]
  42093d:	movzx  edx,WORD PTR [edx+0x1]
  420941:	shl    eax,0x8
  420944:	add    eax,edi
  420946:	shl    eax,0x10
  420949:	add    eax,edx
  42094b:	mov    ds:0x447cf0,eax
  420950:	mov    edx,0xf387ee7e
  420955:	sub    edx,DWORD PTR ds:0x447cfc
  42095b:	xor    edx,eax
  42095d:	mov    DWORD PTR [ecx-0x8],edx
  420960:	mov    edx,DWORD PTR ds:0x44700c
  420966:	add    edx,0x8
  420969:	mov    DWORD PTR ds:0x44700c,edx
  42096f:	movzx  eax,BYTE PTR [edx+0x7]
  420973:	movzx  edi,BYTE PTR [edx+0x5]
  420977:	movzx  edx,WORD PTR [edx+0x1]
  42097b:	shl    eax,0x8
  42097e:	add    eax,edi
  420980:	shl    eax,0x10
  420983:	add    eax,edx
  420985:	mov    edx,0xf387ee7e
  42098a:	sub    edx,DWORD PTR ds:0x447cfc
  420990:	mov    ds:0x447cf0,eax
  420995:	xor    edx,eax
  420997:	mov    DWORD PTR [ecx-0x4],edx
  42099a:	mov    edx,DWORD PTR ds:0x44700c
  4209a0:	add    edx,0x8
  4209a3:	dec    esi
  4209a4:	mov    DWORD PTR ds:0x44700c,edx
  4209aa:	jne    0x420884
  4209b0:	mov    eax,DWORD PTR [esp+0x14]
  4209b4:	mov    esi,DWORD PTR ds:0x444018
  4209ba:	test   eax,eax
  4209bc:	je     0x4209c1
  4209be:	push   eax
  4209bf:	call   esi
  4209c1:	mov    eax,DWORD PTR [esp+0x10]
  4209c5:	test   eax,eax
  4209c7:	je     0x4209cc
  4209c9:	push   eax
  4209ca:	call   esi
  4209cc:	pop    edi
  4209cd:	pop    esi
  4209ce:	pop    ebp
  4209cf:	pop    ebx
  4209d0:	add    esp,0x124
  4209d6:	ret    
  4209d7:	int3   
  4209d8:	int3   
  4209d9:	int3   
  4209da:	int3   
  4209db:	int3   
  4209dc:	int3   
  4209dd:	int3   
  4209de:	int3   
  4209df:	int3   
  4209e0:	(bad)  
  4209e1:	inc    DWORD PTR [edx+0x1a5ffff]
  4209e7:	or     eax,DWORD PTR [eax]
  4209e9:	call   DWORD PTR [edx]
  4209eb:	int3   
  4209ec:	or     DWORD PTR [esi-0x33ff75f4],0xffffffaa
  4209f3:	int3   
  4209f4:	jmp    esp
  4209f6:	xor    DWORD PTR [eax+eax*1-0x7c2500],ebp
  4209fd:	xor    edi,0xffffffeb
  420a00:	mov    edi,edi
  420a02:	ss (bad) 
  420a04:	(bad)  
  420a05:	ficomp WORD PTR [ecx+0x7b]
  420a08:	add    DWORD PTR [ebx+0x3affccb9],0xffffffc0
  420a0f:	sub    ecx,esp
  420a11:	push   DWORD PTR [ebx-0x7d]
  420a14:	xor    DWORD PTR [edx+0xffd693],0x66
  420a1b:	add    ah,cl
  420a1d:	sbb    DWORD PTR [esp+ecx*4-0x1],ebx
  420a21:	add    cl,bh
  420a23:	inc    DWORD PTR [eax]
  420a25:	pop    ds
  420a26:	(bad)  
  420a27:	sti    
  420a28:	(bad)  
  420a29:	dec    DWORD PTR [ebx-0xaff3400]
  420a2f:	xchg   esp,ecx
  420a31:	push   DWORD PTR [eax+0x4ee9ffcc]
  420a37:	xchg   edi,eax
  420a38:	add    bh,bh
  420a3a:	jle    0x420a3c
  420a3c:	inc    DWORD PTR [eax+0xcc3973]
  420a42:	xchg   BYTE PTR [ebx+0x749bfc00],al
  420a48:	inc    DWORD PTR [ebx+0x1eccff41]
  420a4e:	icebp  
  420a4f:	inc    DWORD PTR [eax]
  420a51:	add    BYTE PTR [edx-0x41877d00],bh
  420a57:	fld    QWORD PTR [eax]
  420a59:	push   DWORD PTR ds:0x7ddffff
  420a5f:	out    0xff,eax
  420a61:	add    BYTE PTR [ebx],bh
  420a63:	int3   
  420a64:	call   FWORD PTR [edi-0x57]
  420a67:	mov    edx,0x89288300
  420a6c:	dec    DWORD PTR [edx]
  420a6e:	and    DWORD PTR [ebx],ecx
  420a70:	(bad)  
  420a71:	(bad)  
  420a72:	js     0x420a74
  420a74:	dec    DWORD PTR [esi+ebp*1]
  420a77:	sub    al,BYTE PTR [eax]
  420a79:	int3   
  420a7a:	cmp    bh,bh
  420a7c:	push   DWORD PTR [eax+0x34]
  420a7f:	popa   
  420a80:	add    bh,bh
  420a82:	jae    0x420a83
  420a84:	add    BYTE PTR [ebx-0x1752],ah
  420a8a:	dec    ecx
  420a8b:	(bad)  
  420a8c:	jmp    DWORD PTR [ecx+0x6d]
  420a8f:	or     DWORD PTR [eax],eax
  420a91:	int3   
  420a92:	or     bh,bh
  420a94:	add    ch,al
  420a96:	nop
  420a97:	mov    ?,edi
  420a99:	dec    DWORD PTR [ecx-0x1]
  420a9c:	add    BYTE PTR [edi-0xd54c],cl
  420aa2:	add    bh,bh
  420aa4:	add    DWORD PTR [ebx+edi*8+0xf00ff20],0xffffffff
  420aac:	call   edi
  420aae:	fcom   DWORD PTR [eax]
  420ab0:	(bad)  
  420ab1:	call   DWORD PTR [edi]
  420ab3:	cmp    edi,0xffffffa2
  420ab6:	shl    BYTE PTR ds:0xffc300ff,0xff
  420abd:	out    0xa5,eax
  420abf:	popf   
  420ac0:	cmp    edi,0xd
  420ac3:	(bad)  
  420ac4:	push   DWORD PTR [ebp+0x9]
  420ac7:	pushf  
  420ac8:	add    DWORD PTR [eax],0xffffffa0
  420acb:	add    BYTE PTR [eax],al
  420acd:	inc    esi
  420ace:	call   0x55c59426
  420ad3:	mov    edi,edi
  420ad5:	dec    esi
  420ad6:	pop    edi
  420ad7:	mov    ebx,0xfff4cc00
  420adc:	jmp    ecx
  420ade:	repnz arpl di,di
  420ae1:	int3   
  420ae2:	test   al,0xff
  420ae4:	or     DWORD PTR [esi+0x1a],0xffffffdb
  420ae8:	dec    DWORD PTR [ecx+0x37ff00b3]
  420aee:	lds    ebp,FWORD PTR [ecx]
  420af0:	inc    DWORD PTR [eax]
  420af2:	icebp  
  420af3:	add    bh,bh
  420af5:	gs mov dl,0x8d
  420af8:	inc    DWORD PTR [ebx-0x4eff001b]
  420afe:	sti    
  420aff:	jl     0x420acd
  420b01:	int3   
  420b02:	jp     0x420b04
  420b04:	mov    DWORD PTR [ecx-0x5e],esi
  420b07:	jno    0x420b08
  420b09:	call   FWORD PTR [eax+eax*1-0x77]
  420b0d:	mov    ch,0x53
  420b0f:	imul   eax,DWORD PTR [ebx-0x7c331300],0x194db5
  420b19:	add    BYTE PTR [edx+0x109000ff],dl
  420b1f:	add    al,0xff
  420b21:	sub    DWORD PTR [edi+edi*8-0x70575c01],0x0
  420b29:	(bad)  
  420b2a:	(bad)  
  420b2b:	inc    DWORD PTR [eax]
  420b2d:	mov    ds:0xffafc0,eax
  420b32:	fs add bh,bh
  420b35:	addr16 sub eax,0x54ffff0a
  420b3b:	or     esp,0xffffff84
  420b3e:	ins    DWORD PTR es:[edi],dx
  420b3f:	xor    eax,0x3300ff
  420b44:	add    BYTE PTR [ebx-0xc2e8],al
  420b4a:	pusha  
  420b4b:	cmp    edi,0x12
  420b4e:	jle    0x420b2b
  420b50:	add    bh,bh
  420b52:	(bad)  
  420b53:	add    DWORD PTR [ebx+0xf43515],0xffffffff
  420b5a:	cmp    eax,0x290e8300
  420b5f:	xchg   ebx,eax
  420b60:	int3   
  420b61:	jmp    DWORD PTR [edi+edi*8]
  420b64:	inc    DWORD PTR [ebx]
  420b66:	int3   
  420b67:	jmp    0x7b89:0xccf58300
  420b6e:	(bad)  
  420b70:	add    bh,bh
  420b72:	add    bh,bh
  420b74:	add    BYTE PTR [edi-0xc],cl
  420b77:	xchg   edi,edi
  420b79:	dec    DWORD PTR [edi+0x7cfcffff]
  420b7f:	sbb    BYTE PTR [eax],al
  420b81:	jmp    FWORD PTR [ebx+eax*4+0x2b9f9dff]
  420b88:	mov    edi,edi
  420b8a:	loop   0x420b8c
  420b8c:	int3   
  420b8d:	cmp    DWORD PTR [ebx-0x2f],edi
  420b90:	add    bh,bh
  420b92:	or     al,0x0
  420b94:	add    BYTE PTR [eax],ch
  420b96:	ret    0xffb4
  420b99:	dec    DWORD PTR [edx-0x1]
  420b9c:	dec    DWORD PTR [ecx]
  420b9e:	into   
  420b9f:	fwait
  420ba0:	(bad)  
  420ba1:	(bad)  
  420ba2:	jp     0x420ba3
  420ba4:	(bad)  
  420ba5:	aas    
  420ba6:	mov    ecx,0xa483cc13
  420bab:	cmp    edi,0x67
  420bae:	mov    ds:0xdaff83e4,al
  420bb3:	int3   
  420bb4:	inc    DWORD PTR [ebx-0x33ffb9a4]
  420bba:	jae    0x420bbc
  420bbc:	add    BYTE PTR [ebp+0x89e7ea],ah
  420bc2:	out    dx,eax
  420bc3:	inc    DWORD PTR [eax]
  420bc5:	dec    eax
  420bc6:	repz xor BYTE PTR [ecx+0xff7bff],cl
  420bcd:	ja     0x420bde
  420bcf:	xchg   esi,eax
  420bd0:	dec    DWORD PTR [ecx+0x40000017]
  420bd6:	mov    cl,0xa5
  420bd8:	int3   
  420bd9:	add    BYTE PTR [eax-0x7d],bh
  420bdc:	(bad)  
  420bdd:	clc    
  420bde:	and    BYTE PTR [ebx],bl
  420be0:	(bad)  
  420be1:	jmp    FWORD PTR [ebx-0x4be67700]
  420be7:	cmp    al,0xff
  420be9:	call   DWORD PTR [ecx]
  420beb:	(bad)  
  420bec:	dec    DWORD PTR [esi+ecx*4]
  420bef:	mov    al,ds:0x96ff89
  420bf4:	sbb    DWORD PTR [esi+eax*8],0x27
  420bf8:	add    DWORD PTR [eax],0xffffff87
  420bfb:	add    BYTE PTR [eax],al
  420bfd:	and    al,0xe5
  420bff:	push   eax
  420c00:	inc    DWORD PTR [eax]
  420c02:	inc    ecx
  420c03:	(bad)  
  420c04:	jmp    DWORD PTR [edx+ebp*8-0x197c3395]
  420c0b:	dec    DWORD PTR [ecx-0x40f88d]
  420c11:	or     DWORD PTR [ecx],0xffffffff
  420c14:	xor    DWORD PTR [edi],0x8
  420c17:	mov    edi,0x83e0ff00
  420c1c:	dec    esp
  420c1e:	mov    ds:0x3183ccb7,al
  420c23:	(bad)  
  420c24:	inc    DWORD PTR [edi+0x74]
  420c27:	dec    esi
  420c28:	add    BYTE PTR [eax],al
  420c2a:	inc    edi
  420c2b:	add    BYTE PTR [ecx+0x72cc0],cl
  420c31:	dec    DWORD PTR [eax+0x7757ff83]
  420c37:	mov    eax,0xfff383ff
  420c3c:	int3   
  420c3d:	leave  
  420c3e:	cld    
  420c3f:	outs   dx,DWORD PTR ds:[esi]
  420c40:	add    BYTE PTR [ebx-0x3f0000d1],al
  420c46:	mov    edi,0xb68383fc
  420c4b:	dec    DWORD PTR [ecx+0x6cba12]
  420c51:	push   DWORD PTR [edx+0x2b05cc00]
  420c57:	xchg   BYTE PTR [eax],al
  420c59:	call   FWORD PTR [ebx]
  420c5b:	mov    edi,edi
  420c5d:	loop   0x420ca0
  420c5f:	sbb    eax,0x838100ff
  420c64:	int3   
  420c65:	jb     0x420bed
  420c67:	aam    0x0
  420c69:	dec    DWORD PTR [edi+edi*8]
  420c6c:	mov    DWORD PTR ds:0xffff890b,esp
  420c72:	xchg   esp,eax
  420c73:	inc    DWORD PTR [ebx-0xd43011]
  420c79:	add    ecx,0xffffffff
  420c7c:	int3   
  420c7d:	xor    ah,bh
  420c7f:	outs   dx,DWORD PTR ds:[esi]
  420c80:	dec    esp
  420c82:	mov    cl,0xcc
  420c84:	add    BYTE PTR [edi-0x38],cl
  420c87:	or     bh,bh
  420c89:	add    BYTE PTR [esi-0x1],bl
  420c8c:	call   DWORD PTR [esi-0xff276d]
  420c92:	stos   BYTE PTR es:[edi],al
  420c93:	int3   
  420c94:	call   DWORD PTR ds:0xcc83d9ec
  420c9a:	fs add bh,bh
  420c9d:	fsubr  QWORD PTR [eax]
  420c9f:	pop    edx
  420ca0:	(bad)  
  420ca1:	jmp    DWORD PTR [esi]
  420ca3:	(bad)  
  420ca4:	jmp    eax
  420ca6:	mov    ebp,0x86ff892a
  420cab:	add    BYTE PTR [eax],al
  420cad:	pusha  
  420cae:	jp     0x420c4b
  420cb0:	inc    DWORD PTR [eax]
  420cb2:	xlat   BYTE PTR ds:[ebx]
  420cb3:	int3   
  420cb4:	push   ebx
  420cb6:	xchg   BYTE PTR [ebp+0xbd00ff],ah
  420cbc:	add    BYTE PTR [esi],bh
  420cbe:	test   al,0x61
  420cc0:	(bad)  
  420cc1:	jmp    DWORD PTR ds:0x9903ffff
  420cc7:	aas    
  420cc8:	add    bh,bh
  420cca:	cdq    
  420ccb:	inc    DWORD PTR [ebx-0xadd4be]
  420cd1:	mov    DWORD PTR ds:0x483bff00,edx
  420cd7:	enter  0xff89,0x11
  420cdb:	add    BYTE PTR [eax],al
  420cdd:	adc    eax,0xffff0b09
  420ce2:	xor    eax,0xf54300ff
  420ce7:	xor    eax,0xcc61ffff
  420cec:	add    BYTE PTR [edi+0x26],dl
  420cef:	jmp    0xe9ff:0xffb10089
  420cf6:	inc    esi
  420cf7:	imul   edi,edi,0xffffffff
  420cfa:	mov    ?,edi
  420cfc:	push   edx
  420cfe:	test   DWORD PTR [edi+edi*8-0x764a01],eax
  420d05:	dec    edx
  420d06:	inc    edi
  420d07:	sbb    bh,bh
  420d09:	jmp    DWORD PTR [ebx+0x0]
  420d0c:	add    cl,ch
  420d0e:	sbb    dh,bh
  420d10:	dec    esp
  420d12:	dec    eax
  420d13:	(bad)  
  420d14:	(bad)  
  420d15:	jmp    0xd0:0x83ff8908
  420d1c:	add    BYTE PTR [edx-0x7c00ea04],bh
  420d22:	sub    bh,bh
  420d24:	add    BYTE PTR [ecx+ecx*2],dh
  420d27:	push   ecx
  420d28:	inc    DWORD PTR [eax]
  420d2a:	xor    bh,bh
  420d2c:	mov    ebp,ecx
  420d2e:	sbb    al,0xe9
  420d30:	add    ah,cl
  420d32:	add    BYTE PTR [eax],al
  420d34:	add    BYTE PTR [ecx-0xffc1c8],al
  420d3a:	dec    ah
  420d3c:	add    bl,al
  420d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d3f:	xor    bh,bh
  420d41:	call   DWORD PTR [eax-0x7d]
  420d44:	inc    DWORD PTR [edi+0x54]
  420d47:	lods   eax,DWORD PTR ds:[esi]
  420d48:	cmp    edi,0xffffffa5
  420d4b:	(bad)  
  420d4c:	jmp    FWORD PTR [ecx-0x29]
  420d4f:	inc    ebp
  420d50:	cmp    edi,0x7f
  420d53:	mov    edi,edi
  420d55:	outs   dx,DWORD PTR ds:[esi]
  420d56:	cs jae 0x420d59
  420d59:	(bad)  
  420d5a:	call   0xe2ac0ce8
  420d5f:	(bad)  
  420d60:	(bad)  
  420d61:	call   DWORD PTR [esi]
  420d63:	(bad)  
  420d64:	dec    DWORD PTR [ecx]
  420d66:	mov    ds:0x2d83ffef,eax
  420d6b:	add    bh,bh
  420d6d:	aad    0xc9
  420d6f:	jl     0x420d3d
  420d71:	mov    DWORD PTR [ecx],esp
  420d73:	add    BYTE PTR [eax],al
  420d75:	aam    0xce
  420d77:	imul   eax,DWORD PTR [eax],0xffffffff
  420d7a:	xchg   edi,eax
  420d7b:	(bad)  
  420d7c:	call   ebp
  420d7e:	xchg   ebp,eax
  420d7f:	inc    ebx
  420d80:	inc    DWORD PTR [ebx-0x58ff7c73]
  420d86:	scas   al,BYTE PTR es:[edi]
  420d87:	stos   BYTE PTR es:[edi],al
  420d88:	(bad)  
  420d89:	push   DWORD PTR [edi+edi*8]
  420d8c:	add    dl,cl
  420d8e:	adc    BYTE PTR [edx],0x0
  420d91:	inc    DWORD PTR [ebp+0x0]
  420d94:	add    BYTE PTR [edi+esi*8],bh
  420d97:	or     ah,cl
  420d99:	or     DWORD PTR [esi+0x327f00cc],0x1f
  420da0:	add    DWORD PTR [eax],0xfffffffd
  420da3:	add    bh,bh
  420da5:	adc    bl,bh
  420da7:	cmp    BYTE PTR [eax],al
  420da9:	(bad)  
  420daa:	js     0x420dac
  420dac:	call   DWORD PTR [edx+0x25]
  420daf:	sub    eax,DWORD PTR [eax]
  420db1:	cmp    DWORD PTR [ecx+0x0],0xffffffcc
  420db5:	js     0x420e14
  420db7:	mov    eax,ds:0xffb983ff
  420dbc:	add    BYTE PTR [edi+ebp*1-0x537c7c33],bh
  420dc3:	add    BYTE PTR [ecx-0x7caf95bd],cl
  420dc9:	int3   
  420dca:	sar    edi,0x0
  420dcd:	pop    esp
  420dce:	dec    esp
  420dcf:	in     al,dx
  420dd0:	add    BYTE PTR [ecx-0x5733003b],cl
  420dd6:	add    DWORD PTR [edi],esi
  420dd8:	inc    DWORD PTR [eax]
  420dda:	dec    eax
  420ddb:	mov    DWORD PTR [ebx-0x7c13255c],eax
  420de1:	inc    DWORD PTR [eax+0x58880083]
  420de7:	mov    dl,0x89
  420de9:	(bad)  
  420dea:	cld    
  420deb:	(bad)  
  420dec:	push   DWORD PTR [esi]
  420dee:	fadd   QWORD PTR [edx-0x7d]
  420df1:	add    BYTE PTR [esi-0x1],bh
  420df4:	int3   
  420df5:	ret    0xdeab
  420df8:	add    DWORD PTR [eax],0xffffffcb
  420dfb:	add    DWORD PTR [ebx+0xff80d4],0x0
  420e02:	jns    0x420e03
  420e04:	push   DWORD PTR [edi+esi*8-0x200006c]
  420e0b:	inc    DWORD PTR [ebx+0x1cc220]
  420e11:	add    BYTE PTR [edi+edi*8-0x34],cl
  420e15:	aam    0x7
  420e17:	mov    ebp,0xffdfccff
  420e1c:	jmp    FWORD PTR [eax-0x8ff6]
  420e22:	and    edi,edi
  420e24:	add    BYTE PTR [edi],dh
  420e26:	mov    dl,0xfd
  420e28:	inc    DWORD PTR [ebx-0x67ff3312]
  420e2e:	and    eax,0x3200ff7e
  420e33:	inc    DWORD PTR [ebx-0xc642e0]
  420e39:	add    BYTE PTR [ecx],dh
  420e3b:	(bad)  
  420e3c:	(bad)  
  420e3d:	fcom   QWORD PTR [ecx]
  420e3f:	mov    eax,0xfcffff
  420e44:	int3   
  420e45:	mov    ebx,0xffff8caa
  420e4a:	bound  eax,QWORD PTR [eax]
  420e4c:	add    BYTE PTR [ecx],dl
  420e4e:	push   esi
  420e4f:	aad    0x83
  420e51:	or     eax,0x0
  420e54:	and    esp,0x19
  420e57:	push   esi
  420e58:	(bad)  
  420e59:	push   edi
  420e5b:	or     esp,0x4b
  420e5e:	and    edi,ebp
  420e60:	or     esp,0xffffff98
  420e63:	(bad)  
  420e64:	(bad)  
  420e65:	std    
  420e66:	inc    edx
  420e67:	mov    ah,0xff
  420e69:	jmp    FWORD PTR [eax-0x3e120001]
  420e6f:	inc    eax
  420e70:	int3   
  420e71:	call   FWORD PTR [esi]
  420e73:	inc    DWORD PTR [eax]
  420e75:	out    dx,al
  420e76:	int    0xb0
  420e78:	inc    DWORD PTR [eax]
  420e7a:	sbb    edi,edi
  420e7c:	jmp    DWORD PTR [ebx+0x67]
  420e7f:	xor    BYTE PTR [ebx-0x3300fb34],al
  420e85:	xor    DWORD PTR [ebp-0x3],ebp
  420e88:	cmp    edi,0x79
  420e8b:	inc    DWORD PTR [eax]
  420e8d:	inc    esp
  420e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e8f:	int    0xff
  420e91:	add    BYTE PTR [ecx],dh
  420e93:	dec    DWORD PTR [ecx-0x7fcfc2]
  420e99:	dec    DWORD PTR [eax+0x64e10083]
  420e9f:	dec    esi
  420ea0:	inc    DWORD PTR [eax]
  420ea2:	sar    edi,0x0
  420ea5:	shl    DWORD PTR [ebp+0x67ffff4e],1
  420eab:	mov    DWORD PTR [eax],eax
  420ead:	imul   ebp,DWORD PTR [ecx+ebx*2-0x7ce17601],0xffffff83
  420eb5:	xor    BYTE PTR [edi+0x67ff00d3],dh
  420ebb:	(bad)  
  420ebc:	jmp    DWORD PTR [ecx]
  420ebe:	call   0x6f42db4e
  420ec3:	(bad)  
  420ec4:	jmp    FWORD PTR [eax+0x59]
  420ec7:	add    eax,0xccdf8300
  420ecc:	add    ah,dl
  420ece:	add    ebx,DWORD PTR [ebx+eax*4-0x6401]
  420ed5:	push   0xcc006049
  420eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420edb:	add    bh,bh
  420edd:	sbb    ebp,eax
  420edf:	ss add bh,bh
  420ee2:	inc    eax
  420ee3:	(bad)  
  420ee4:	push   DWORD PTR [edi-0x6f]
  420ee7:	inc    DWORD PTR [ebx+0xffcd00]
  420eed:	push   0x833ac2
  420ef2:	das    
  420ef3:	inc    DWORD PTR [eax]
  420ef5:	imul   edx,ebp,0x4d
  420ef8:	inc    DWORD PTR [ebx+0x7bff0011]
  420efe:	rcl    BYTE PTR [ecx],cl
  420f00:	dec    DWORD PTR [ecx-0x640000c3]
  420f06:	push   0xffffffca
  420f08:	add    bh,bh
  420f0a:	in     eax,dx
  420f0b:	inc    DWORD PTR [eax]
  420f0d:	mov    edi,0xffffa604
  420f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f13:	(bad)  
  420f14:	inc    DWORD PTR [ecx]
  420f16:	scas   al,BYTE PTR es:[edi]
  420f17:	std    
  420f18:	(bad)  
  420f19:	dec    DWORD PTR [ebp-0x1]
  420f1c:	add    BYTE PTR [esi-0x63],dl
  420f1f:	es add bh,bh
  420f22:	mov    eax,0x93c200ff
  420f27:	or     eax,0xff480000
  420f2c:	call   FWORD PTR ds:0xff0086ab
  420f32:	xchg   esi,eax
  420f33:	add    bh,bh
  420f35:	jg     0x420f21
  420f37:	mov    eax,0xff5f0000
  420f3c:	push   DWORD PTR [eax+0x5d]
  420f3f:	sbb    esp,ecx
  420f41:	dec    DWORD PTR [esi-0x1]
  420f44:	call   DWORD PTR [edx-0x71]
  420f47:	adc    eax,0xff3fff83
  420f4c:	inc    DWORD PTR [esi+0xff7dff]
  420f52:	pop    ebp
  420f53:	int3   
  420f54:	add    dl,ah
  420f56:	mov    ah,0x1b
  420f58:	(bad)  
  420f59:	push   DWORD PTR [ecx+0x649fff00]
  420f5f:	or     eax,0xdeff00
  420f64:	add    BYTE PTR [esi-0x767c51ff],dl
  420f6a:	or     al,0x0
  420f6c:	mov    DWORD PTR [ecx+0xabe4],edx
  420f72:	sti    
  420f73:	inc    DWORD PTR [eax]
  420f75:	cs iret 
  420f77:	and    edi,edi
  420f79:	dec    DWORD PTR [edi+edi*8]
  420f7c:	push   DWORD PTR [eax]
  420f7e:	push   es
  420f7f:	repz (bad) 
  420f81:	call   DWORD PTR [edx-0x7b6f0000]
  420f87:	or     esp,0x0
  420f8a:	das    
  420f8b:	add    bh,bh
  420f8d:	xor    dl,BYTE PTR [eax+0x2ff00fc]
  420f93:	add    BYTE PTR [eax],al
  420f95:	sbb    edx,edi
  420f97:	mov    edi,0xb6ffff
  420f9c:	(bad)  
  420f9d:	cmp    eax,0xff83cd20
  420fa2:	popf   
  420fa3:	cmp    edi,0x5d
  420fa6:	mov    eax,0xc500ff7c
  420fab:	inc    DWORD PTR [ebx+0x28ff9a]
  420fb1:	and    DWORD PTR [eax+0x3f2bffff],0xffffffa7
  420fb8:	(bad)  
  420fb9:	(bad)  
  420fba:	dec    esp
  420fbc:	add    BYTE PTR [esp+esi*4],bh
  420fbf:	jg     0x420fc0
  420fc1:	add    ch,dh
  420fc3:	add    BYTE PTR [eax],al
  420fc5:	add    eax,0x1388
  420fca:	dec    edx
  420fcb:	(bad)  
  420fcc:	(bad)  
  420fcd:	out    dx,al
  420fce:	dec    ecx
  420fcf:	lea    eax,[eax]
  420fd1:	xor    DWORD PTR [esi-0x4a5c7c01],0xffffffd4
  420fd8:	add    bh,bh
  420fda:	jns    0x420fdb
  420fdc:	(bad)  
  420fdd:	fbstp  TBYTE PTR [edx+0x25]
  420fe0:	cmp    edi,0xffffffdc
  420fe3:	int3   
  420fe4:	inc    DWORD PTR [edx+0xff872a]
  420fea:	mov    bh,0xff
  420fec:	and    DWORD PTR [ebx-0x7c00af84],0x32
  420ff3:	mov    DWORD PTR [ecx+0xee5c39],ecx
  420ff9:	add    BYTE PTR [esp+ecx*8],cl
  420ffc:	add    BYTE PTR [esi-0x59b1],dl
  421002:	scas   al,BYTE PTR es:[edi]
  421003:	or     esp,0xffffffff
  421006:	je     0x421063
  421008:	add    bh,bh
  42100a:	add    al,0x83
  42100c:	int3   
  42100d:	push   es
  42100e:	retf   0x6e
  421011:	int3   
  421012:	pop    ds
  421013:	int3   
  421014:	sub    DWORD PTR [edi+esi*8],0x3e
  421018:	add    bh,bh
  42101a:	mov    ds:0x8f06ffff,eax
  42101f:	cmc    
  421020:	add    BYTE PTR [eax],al
  421022:	pushf  
  421023:	add    BYTE PTR [eax],al
  421025:	push   esi
  421026:	xor    ecx,edx
  421028:	add    bh,bh
  42102a:	sub    bh,bh
  42102c:	add    BYTE PTR [esi+0x49],ch
  42102f:	push   ds
  421030:	add    BYTE PTR [ebx-0x4200ff2c],al
  421036:	jmp    0xffff:0x28ccff3a
  42103d:	stc    
  42103e:	dec    esp
  42103f:	daa    
  421040:	add    bh,bh
  421042:	sbb    eax,DWORD PTR [eax]
  421044:	add    BYTE PTR [ebp+eax*4-0x5b],dl
  421048:	inc    DWORD PTR [eax]
  42104a:	scas   al,BYTE PTR es:[edi]
  42104b:	(bad)  
  42104c:	jmp    FWORD PTR [esi+0xff1be4]
  421052:	jp     0x421054
  421054:	and    DWORD PTR [ebp-0x24],0x45
  421058:	(bad)  
  421059:	dec    DWORD PTR [esi+0x0]
  42105c:	(bad)  
  42105d:	jnp    0x421053
  42105f:	or     ecx,DWORD PTR [ecx+0x98ff]
  421065:	add    eax,0x89ff98b4
  42106a:	jno    0x42106c
  42106c:	add    BYTE PTR [ecx+eiz*4+0x43ff0045],dh
  421073:	mov    edi,edi
  421075:	sbb    dl,BYTE PTR [edi]
  421077:	mov    bh,bh
  421079:	dec    esi
  42107b:	(bad)  
  42107c:	push   DWORD PTR [esp+edi*1-0x28]
  421080:	(bad)  
  421081:	push   DWORD PTR [ecx-0x7d]
  421084:	mov    DWORD PTR ds:0xff63e2,edi
  42108a:	dec    ebx
  42108b:	add    bh,bh
  42108d:	mov    ah,0x26
  42108f:	sbb    al,0xff
  421091:	cmp    DWORD PTR [edx+0xedfff00],0xffffffc9
  421098:	add    BYTE PTR [eax],al
  42109a:	into   
  42109b:	add    DWORD PTR [ebx-0x83a5a9],0x0
  4210a2:	push   ebx
  4210a3:	add    DWORD PTR [ebx-0xf4fb04],0xffffff83
  4210aa:	inc    WORD PTR [eax]
  4210ad:	dec    ecx
  4210ae:	sar    BYTE PTR [eax-0x7d],0x0
  4210b2:	adc    edi,edi
  4210b4:	(bad)  
  4210b5:	cmp    edx,DWORD PTR [edi+0x4]
  4210b8:	add    BYTE PTR [eax],al
  4210ba:	cmp    al,0x0
  4210bc:	cmp    esi,0x73
  4210bf:	sub    DWORD PTR [ebx-0xa500],eax
  4210c5:	sub    DWORD PTR [edi+0x38],eax
  4210c8:	mov    esp,ecx
  4210ca:	pop    ss
  4210cb:	int3   
  4210cc:	dec    esp
  4210ce:	jmp    0x95421076
  4210d3:	(bad)  
  4210d4:	push   DWORD PTR [ecx-0x7c27e6]
  4210da:	test   esp,0x701d8700
  4210e0:	(bad)  
  4210e1:	jmp    FWORD PTR [ecx-0x6c160001]
  4210e7:	push   ss
  4210e8:	(bad)  
  4210e9:	call   ecx
  4210eb:	add    BYTE PTR [eax],al
  4210ed:	rcr    DWORD PTR [eax],0x2f
  4210f0:	(bad)  
  4210f1:	dec    DWORD PTR [esi]
  4210f3:	add    DWORD PTR [eax],0xffffffa3
  4210f6:	ins    DWORD PTR es:[edi],dx
  4210f7:	push   edi
  4210f8:	inc    DWORD PTR [ebx-0x28007ccb]
  4210fe:	ret    0xccba
  421101:	push   DWORD PTR [ebp-0x77]
  421104:	add    BYTE PTR [ecx-0x2c2e],bh
  42110a:	cdq    
  42110b:	inc    DWORD PTR [eax]
  42110d:	xor    edi,ebx
  42110f:	or     edi,edi
  421111:	add    BYTE PTR [edx-0x1],ah
  421114:	(bad)  
  421115:	fstp   DWORD PTR [ebx+ebp*8+0x0]
  421119:	(bad)  
  42111a:	clc    
  42111b:	add    DWORD PTR [eax],0x75
  42111e:	es sbb eax,0xff920089
  421124:	(bad)  
  421125:	jp     0x4210e8
  421127:	cli    
  421128:	add    ah,cl
  42112a:	mov    edi,0xac4c0000
  42112f:	pusha  
  421130:	add    DWORD PTR [eax],0x20
  421133:	add    bh,bh
  421135:	mov    edi,0xff4205
  42113a:	push   ebx
  42113b:	cmp    edi,0xffffffb0
  42113e:	mov    edx,0xc1ff89d3
  421143:	add    DWORD PTR [eax],0xffffffee
  421146:	dec    ecx
  421147:	sub    edi,edi
  421149:	call   FWORD PTR [esi]
  42114b:	cmp    edi,0x6c
  42114e:	jb     0x421193
  421150:	inc    DWORD PTR [eax]
  421152:	push   eax
  421153:	(bad)  
  421154:	(bad)  
  421155:	aas    
  421156:	or     ah,dl
  421158:	(bad)  
  421159:	(bad)  
  42115a:	jmp    0x42115b
  42115c:	jmp    DWORD PTR [esi+0x3c]
  42115f:	dec    edx
  421160:	add    BYTE PTR [ebx-0x6fffffd1],al
  421166:	jnp    0x4210f0
  421168:	mov    DWORD PTR [ebx-0x67ff330c],eax
  42116e:	test   ecx,0xffebffff
  421174:	add    BYTE PTR [ebx+eax*2+0x60],ch
  421178:	int3   
  421179:	add    BYTE PTR [esi-0x7e230001],dh
  42117f:	xchg   esp,eax
  421180:	int3   
  421181:	add    BYTE PTR ds:0x90effff,cl
  421187:	test   DWORD PTR [eax],eax
  421189:	sbb    esp,0xffffffff
  42118c:	jmp    DWORD PTR [ebx-0xffaad3]
  421192:	dec    ebx
  421193:	add    BYTE PTR [ecx+0x415469],cl
  421199:	add    BYTE PTR [edx-0x38930000],dh
  42119f:	popf   
  4211a0:	mov    edi,edi
  4211a2:	cli    
  4211a3:	inc    DWORD PTR [eax]
  4211a5:	add    al,0x56
  4211a7:	sar    bh,cl
  4211a9:	add    BYTE PTR [ebx-0x7d],al
  4211ac:	adc    ecx,0x7e
  4211af:	add    BYTE PTR cs:[eax],al
  4211b2:	test   ah,0xff
  4211b5:	test   al,0x53
  4211b7:	jns    0x421142
  4211b9:	jmp    ecx
  4211bb:	add    DWORD PTR [eax],0x78
  4211be:	sahf   
  4211bf:	aad    0xff
  4211c1:	call   DWORD PTR [ebp+0x37afffff]
  4211c7:	je     0x4211c9
  4211c9:	add    BYTE PTR [esi],al
  4211cb:	dec    esp
  4211cd:	stc    
  4211ce:	mov    ebx,DWORD PTR [edi-0xc0001]
  4211d4:	jmp    FWORD PTR [eax+0x4]
  4211d7:	lods   eax,DWORD PTR ds:[esi]
  4211d8:	(bad)  
  4211d9:	jmp    DWORD PTR [edi+edi*8-0x6f7cd700]
  4211e0:	(bad)  
  4211e1:	(bad)  
  4211e2:	jmp    0xa9ae95e6
  4211e7:	call   0x839611eb
  4211ec:	(bad)  
  4211ed:	std    
  4211ee:	ror    BYTE PTR [ebp+0x810000],cl
  4211f4:	add    dh,dl
  4211f6:	in     al,0xd0
  4211f8:	(bad)  
  4211f9:	jmp    FWORD PTR [edx-0x1]
  4211fc:	add    BYTE PTR [edi+0x7ef3],cl
  421202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421203:	inc    DWORD PTR [eax]
  421205:	lods   eax,DWORD PTR ds:[esi]
  421206:	mov    BYTE PTR [ebx-0x1],ch
  421209:	adc    DWORD PTR [ebp+0x0],0xffffffcc
  42120d:	sbb    ebx,edx
  42120f:	xor    al,0x83
  421211:	sbb    DWORD PTR [edx+0x5b1700ff],0x7d
  421218:	int3   
  421219:	dec    eax
  42121b:	inc    DWORD PTR [eax]
  42121d:	jl     0x4211fc
  42121f:	or     eax,0xffcc8300
  421224:	call   DWORD PTR [esi-0x73]
  421227:	loopne 0x421228
  421229:	push   ebx
  42122b:	(bad)  
  42122c:	push   DWORD PTR [eax-0x6d]
  42122f:	pop    ss
  421230:	(bad)  
  421231:	push   edi
  421233:	or     DWORD PTR [ecx+0xe7e948],0xffffffcc
  42123a:	in     al,0xff
  42123c:	int3   
  42123d:	ret    0xc4c3
  421240:	add    BYTE PTR [eax],al
  421242:	jecxz  0x421243
  421244:	push   ebp
  421246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421248:	(bad)  
  421249:	call   edx
  42124b:	add    BYTE PTR [ebx-0xb95e0],al
  421251:	add    BYTE PTR [ecx-0x34],bh
  421254:	mov    DWORD PTR [edx+0x52],edi
  421257:	xor    al,0x0
  421259:	add    BYTE PTR [ebp-0x1],ah
  42125c:	call   DWORD PTR [esi]
  42125e:	stos   DWORD PTR es:[edi],eax
  42125f:	imul   edi,edi,0xff007aff
  421265:	lds    ebx,FWORD PTR [ebp+ecx*4+0xe9ffff]
  42126c:	dec    DWORD PTR [edi]
  42126e:	jnp    0x421224
  421270:	inc    DWORD PTR [eax]
  421272:	add    BYTE PTR [ebx+0x60930b00],0x89
  421279:	int3   
  42127a:	add    BYTE PTR [eax],0x83
  42127d:	fisttp QWORD PTR [eax]
  42127f:	in     al,dx
  421280:	add    bh,bh
  421282:	dec    ebx
  421283:	add    bh,bh
  421285:	inc    ecx
  421286:	(bad)  
  421287:	lods   eax,DWORD PTR ds:[esi]
  421288:	mov    edi,edi
  42128a:	jmp    0xc2:0xee5a89ff
  421291:	add    DWORD PTR [esi],0xffffffcc
  421294:	add    dl,bh
  421296:	sbb    dh,bl
  421298:	add    BYTE PTR [eax],al
  42129a:	clc    
  42129b:	inc    DWORD PTR [eax]
  42129d:	nop
  42129e:	int3   
  42129f:	inc    esi
  4212a0:	dec    DWORD PTR [ecx+0x4a00ff1b]
  4212a6:	mov    ds:0x85ffff8a,eax
  4212ab:	add    DWORD PTR [ebx-0x33e02256],0xffffffff
  4212b2:	nop
  4212b3:	(bad)  
  4212b4:	call   FWORD PTR [ecx+0xdbc2]
  4212ba:	leave  
  4212bb:	add    ah,cl
  4212bd:	mov    al,ds:0x3573
  4212c2:	jl     0x421290
  4212c4:	(bad)  
  4212c5:	mov    ebp,0xf30c
  4212ca:	pop    ecx
  4212cb:	int3   
  4212cc:	call   FWORD PTR [eax-0xff8f49]
  4212d2:	dec    edx
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	nop
  4212d6:	in     eax,0xda
  4212d8:	add    DWORD PTR [eax],0xffffff8e
  4212db:	dec    esp
  4212dd:	xchg   esi,eax
  4212de:	adc    bh,dl
  4212e0:	or     esp,0x5a
  4212e3:	add    BYTE PTR [eax],al
  4212e5:	rcr    DWORD PTR [ebx+0x1ff00d7],1
  4212eb:	(bad)  
  4212ec:	dec    DWORD PTR [ecx+edi*4-0x47]
  4212f0:	int3   
  4212f1:	add    ah,cl
  4212f3:	cmp    edi,0x53
  4212f6:	(bad)  
  4212f7:	mov    ebx,0xcc1cff00
  4212fc:	or     DWORD PTR [ecx],0x78
  4212ff:	xchg   DWORD PTR [eax],eax
  421301:	add    BYTE PTR ds:0x377aff00,bh
  421307:	fiadd  WORD PTR [eax]
  421309:	int3   
  42130a:	jmp    0xffbe:0x16d78900
  421311:	push   ebx
  421313:	add    BYTE PTR [ebx+0x64219e],al
  421319:	inc    DWORD PTR [ebx]
  42131b:	(bad)  
  42131c:	(bad)  
  42131d:	(bad)  
  42131e:	fidivr WORD PTR [ecx]
  421320:	add    bh,bh
  421322:	xchg   ebx,eax
  421323:	add    BYTE PTR [ebx-0xf7eb91],al
  421329:	mov    DWORD PTR [ecx-0x1],ecx
  42132c:	add    BYTE PTR [edi],bl
  42132e:	mov    DWORD PTR [esi],ebx
  421330:	add    DWORD PTR [eax],0xffffffdb
  421333:	add    bh,bh
  421335:	jg     0x4212df
  421337:	stos   BYTE PTR es:[edi],al
  421338:	int3   
  421339:	dec    edi
  42133b:	inc    DWORD PTR [eax]
  42133d:	adc    ch,0xe5
  421340:	inc    DWORD PTR [eax]
  421342:	retf   
  421343:	dec    esp
  421345:	lea    edx,[ebx+eiz*2-0x9b007d]
  42134c:	add    BYTE PTR [edi+ebx*4],dh
  42134f:	inc    ecx
  421350:	cmp    edi,0x66
  421353:	add    bh,bh
  421355:	dec    eax
  421356:	adc    al,0x92
  421358:	add    bh,bh
  42135a:	pop    ecx
  42135b:	(bad)  
  42135c:	dec    DWORD PTR [eax-0xe]
  42135f:	push   ebp
  421360:	add    ah,cl
  421362:	pop    ecx
  421363:	add    bh,bh
  421365:	ss xor eax,0x5f89ff35
  42136b:	inc    DWORD PTR [ebx-0x7e4eb9]
  421371:	and    DWORD PTR [esp+ecx*8-0x2d4a5c01],0xffffffcc
  421379:	sub    DWORD PTR [ecx+ecx*4+0x0],0x65
  42137e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42137f:	std    
  421380:	dec    DWORD PTR [ecx+0x5a0083b5]
  421386:	add    BYTE PTR [ecx-0x33bc0100],bl
  42138c:	int3   
  42138d:	adc    eax,0xccff26d1
  421392:	xor    bh,bh
  421394:	add    BYTE PTR [ecx],ch
  421396:	xor    al,dl
  421398:	int3   
  421399:	and    edx,0xffffffff
  42139c:	and    DWORD PTR [ecx-0x7c033b],0xffffff8b
  4213a3:	add    BYTE PTR [ebx+0x69dd59],al
  4213a9:	add    BYTE PTR [edi+edi*8+0x7051500],cl
  4213b0:	cmp    edi,0xffffffad
  4213b3:	inc    DWORD PTR [eax]
  4213b5:	or     ch,bh
  4213b7:	adc    edi,edi
  4213b9:	push   DWORD PTR [ecx-0x34]
  4213bc:	(bad)  
  4213bd:	sti    
  4213be:	sbb    al,0xb1
  4213c0:	inc    DWORD PTR [ebx-0x3c33fff1]
  4213c6:	xchg   ebx,eax
  4213c7:	jae    0x4213c9
  4213c9:	add    esi,0x0
  4213cc:	add    BYTE PTR [esi+0x14],dh
  4213cf:	es or  esp,0x52
  4213d3:	add    BYTE PTR [eax],al
  4213d5:	push   0xff8317
  4213da:	xchg   edi,eax
  4213db:	add    bh,bh
  4213dd:	(bad)  
  4213de:	cmp    al,0xf
  4213e0:	mov    edi,edi
  4213e2:	inc    ebx
  4213e3:	mov    edi,edi
  4213e5:	jno    0x421438
  4213e7:	iret   
  4213e8:	add    bh,bh
  4213ea:	dec    ecx
  4213eb:	mov    edi,edi
  4213ed:	mov    bh,BYTE PTR [eax+0x13]
  4213f0:	cmp    edi,0x78
  4213f3:	add    DWORD PTR [eax],0x7c
  4213f6:	out    dx,al
  4213f7:	int    0xff
  4213f9:	adc    DWORD PTR [edi+edi*8+0x1f672800],0xffffff83
  421401:	add    BYTE PTR [esi+0x66ce8383],al
  421407:	imul   eax,DWORD PTR [eax],0x89ff5d89
  42140d:	enter  0x6f04,0xff
  421411:	jmp    FWORD PTR [edi+edi*8+0x202dedcc]
  421418:	inc    DWORD PTR [eax]
  42141a:	push   ss
  42141b:	add    BYTE PTR [eax],al
  42141d:	jb     0x4213ce
  42141f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421420:	dec    esp
  421422:	retf   
  421423:	add    bh,bh
  421425:	fidivr DWORD PTR ds:0x3bffff5e
  42142b:	inc    DWORD PTR [eax]
  42142d:	or     al,0xd0
  42142f:	inc    DWORD PTR [ebx+0xd8ff]
  421435:	xchg   ebx,eax
  421436:	jne    0x421407
  421438:	(bad)  
  421439:	push   DWORD PTR [edx-0x1]
  42143c:	mov    DWORD PTR [edx+edx*2],esi
  42143f:	adc    al,0xff
  421441:	add    BYTE PTR [esi-0x1],ah
  421444:	add    BYTE PTR [esi+0x8f54],bh
  42144a:	jmp    0x9034984e
  42144f:	aam    0xff
  421451:	jmp    DWORD PTR [ecx+0x7f610083]
  421457:	pop    esp
  421458:	inc    DWORD PTR [eax]
  42145a:	adc    al,0x83
  42145c:	(bad)  
  42145d:	js     0x4214d7
  42145f:	scas   al,BYTE PTR es:[edi]
  421460:	add    bh,bh
  421462:	add    eax,0x2a9100ff
  421467:	lahf   
  421468:	(bad)  
  421469:	call   DWORD PTR [esi+0x0]
  42146c:	and    esi,0xffffff93
  42146f:	jge    0x421470
  421471:	cmp    esp,0xffffffff
  421474:	jmp    DWORD PTR [edx+eiz*1]
  421477:	repz dec esp
  42147a:	int    0xff
  42147c:	add    bl,ch
  42147e:	lds    ecx,FWORD PTR [edx]
  421480:	(bad)  
  421481:	jmp    FWORD PTR [ebx+eax*4+0x0]
  421485:	sahf   
  421486:	mov    dl,0x70
  421488:	add    bh,bh
  42148a:	pop    esp
  42148b:	add    ah,cl
  42148d:	inc    ebx
  42148e:	cwde   
  42148f:	outs   dx,DWORD PTR ds:[esi]
  421490:	inc    DWORD PTR [eax]
  421492:	mov    ds:0xc98bcc83,eax
  421497:	push   ebp
  421498:	inc    DWORD PTR [eax]
  42149a:	out    0x0,al
  42149c:	call   esi
  42149e:	mov    ah,0xd1
  4214a0:	add    bh,bh
  4214a2:	cmp    DWORD PTR [eax],eax
  4214a4:	mov    DWORD PTR [ebx+edx*8-0x4cff005d],ebp
  4214ab:	inc    DWORD PTR [ebx-0x3325221d]
  4214b1:	sbb    esi,0xffffff89
  4214b4:	call   FWORD PTR [edi-0x33db54]
  4214ba:	test   al,0x89
  4214bc:	xor    DWORD PTR [eax+esi*8-0x1b00003c],0x0
  4214c4:	sbb    DWORD PTR [esp+esi*2+0xc],0xffffffff
  4214c9:	call   DWORD PTR [edi+edi*8+0x2b8ebd00]
  4214d0:	or     DWORD PTR [ecx+0xd89ffde],0xffffff80
  4214d7:	xor    cl,BYTE PTR [ecx+0xff6500]
  4214dd:	push   ebx
  4214de:	add    al,0x90
  4214e0:	(bad)  
  4214e1:	jmp    eax
  4214e3:	inc    DWORD PTR [eax]
  4214e5:	scas   al,BYTE PTR es:[edi]
  4214e6:	mov    al,0x2e
  4214e8:	inc    DWORD PTR [eax]
  4214ea:	out    dx,eax
  4214eb:	add    ah,cl
  4214ed:	sub    bh,ah
  4214ef:	ins    BYTE PTR es:[edi],dx
  4214f0:	(bad)  
  4214f1:	(bad)  
  4214f2:	in     al,dx
  4214f3:	(bad)  
  4214f4:	inc    DWORD PTR [ebx+0x4d]
  4214f7:	sub    eax,0xff29ffff
  4214fc:	add    BYTE PTR [eax],dl
  4214fe:	(bad)  
  4214ff:	lods   al,BYTE PTR ds:[esi]
  421500:	add    bh,bh
  421502:	mov    eax,ds:0x5ea300ff
  421507:	mov    ds:0x897800ff,eax
  42150c:	add    cl,al
  42150e:	pop    ebx
  42150f:	icebp  
  421510:	(bad)  
  421511:	inc    DWORD PTR ds:0x9f76cc83
  421517:	inc    edi
  421518:	int3   
  421519:	add    BYTE PTR ds:0xa43bff00,dl
  42151f:	repz (bad) 
  421521:	dec    edx
  421523:	int3   
  421524:	jmp    FWORD PTR [esi+ebx*4+0x32]
  421528:	mov    DWORD PTR [ebx+0x6400ccb2],eax
  42152e:	out    0xf2,eax
  421530:	int3   
  421531:	call   DWORD PTR [eax+eax*1]
  421534:	jmp    DWORD PTR [ebx-0x11f5]
  42153a:	sub    cl,BYTE PTR [ecx-0x14cd001]
  421540:	inc    DWORD PTR [eax]
  421542:	imul   edi,edi,0x92ee5283
  421548:	add    DWORD PTR [eax],0xffffff9f
  42154b:	int3   
  42154c:	call   FWORD PTR [ebx+0x33]
  42154f:	mov    ?,edi
  421551:	jmp    DWORD PTR [edi]
  421553:	(bad)  
  421554:	jmp    FWORD PTR ds:0xfffffabc
  42155a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42155b:	add    BYTE PTR [eax],al
  42155d:	dec    ebx
  42155e:	adc    BYTE PTR [edi+0x0],dl
  421561:	add    BYTE PTR [ecx-0x1],ch
  421564:	add    BYTE PTR [edi+ecx*8-0x3f00ff10],al
  42156b:	(bad)  
  42156c:	dec    DWORD PTR [ebx]
  42156e:	sti    
  42156f:	or     DWORD PTR [ecx-0x76003b7d],0x22
  421576:	and    BYTE PTR [edi-0x7d],cl
  421579:	int3   
  42157a:	outs   dx,BYTE PTR ds:[esi]
  42157b:	add    DWORD PTR [ebx-0x76af0eb7],0x0
  421582:	ins    DWORD PTR es:[edi],dx
  421583:	inc    DWORD PTR [eax]
  421585:	jnp    0x42150c
  421587:	in     al,0x0
  421589:	mov    DWORD PTR [esi-0x73c23301],ecx
  42158f:	ror    esp,1
  421591:	jmp    eax
  421593:	add    DWORD PTR [eax],0x67
  421596:	ins    BYTE PTR es:[edi],dx
  421597:	or     edi,edi
  421599:	dec    DWORD PTR [ebx]
  42159b:	add    bh,bh
  42159d:	adc    eax,0xccff4fe7
  4215a2:	dec    ecx
  4215a3:	inc    DWORD PTR [eax]
  4215a5:	loope  0x4215e5
  4215a7:	sti    
  4215a8:	add    BYTE PTR [eax],al
  4215aa:	int    0xff
  4215ac:	call   DWORD PTR [ebx-0x33c7c3]
  4215b2:	jmp    0x259a99b6
  4215b7:	mov    ds:0xfff2ffff,eax
  4215bc:	dec    DWORD PTR [edi]
  4215be:	pop    ss
  4215bf:	jecxz  0x4215c0
  4215c1:	jmp    DWORD PTR [esi+0x645ffcc]
  4215c7:	clc    
  4215c8:	inc    DWORD PTR [ebx+0xcff0030]
  4215ce:	sbb    BYTE PTR [eax],cl
  4215d0:	(bad)  
  4215d1:	call   FWORD PTR [edx-0x7d]
  4215d4:	add    BYTE PTR [esp+0x6483ff61],al
  4215db:	inc    DWORD PTR [eax]
  4215dd:	pop    edx
  4215de:	jp     0x4215c3
  4215e0:	add    bh,bh
  4215e2:	aaa    
  4215e3:	(bad)  
  4215e4:	(bad)  
  4215e5:	in     al,dx
  4215e6:	cmc    
  4215e7:	xchg   esp,eax
  4215e8:	add    DWORD PTR [eax],0xffffffb7
  4215eb:	mov    DWORD PTR [ecx-0x7cec5e28],ecx
  4215f1:	add    dl,bl
  4215f3:	mov    edi,edi
  4215f5:	or     edx,DWORD PTR [ebp-0x7d]
  4215f8:	mov    edi,edi
  4215fa:	or     DWORD PTR [ecx+0x182e45ff],ecx
  421600:	add    DWORD PTR [eax],0xfffffffc
  421603:	int3   
  421604:	add    BYTE PTR [eax-0x14],al
  421607:	push   cs
  421608:	(bad)  
  421609:	push   DWORD PTR [ebx-0x1]
  42160c:	jmp    DWORD PTR [edx-0x767d16]
  421612:	xchg   ebp,eax
  421613:	inc    DWORD PTR [eax]
  421615:	nop
  421616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421617:	push   edi
  421618:	dec    DWORD PTR [ecx+0x21ffcca8]
  42161e:	mov    dl,0xd7
  421620:	add    bh,bh
  421622:	rol    BYTE PTR [eax],1
  421624:	mov    ebx,ebp
  421626:	mov    edi,0xb90000d5
  42162b:	inc    DWORD PTR [ebx-0x5d53e]
  421631:	add    BYTE PTR [eax+0x209e8383],bl
  421637:	add    DWORD PTR [eax],0xffffff89
  42163a:	push   es
  42163b:	int3   
  42163c:	add    BYTE PTR [esi+0x89a9f6],al
  421642:	sub    DWORD PTR [ecx+0x1dbc8900],ecx
  421648:	add    bh,bh
  42164a:	push   ss
  42164b:	add    ah,cl
  42164d:	and    eax,0x83d854
  421652:	fadd   DWORD PTR [eax]
  421654:	sbb    DWORD PTR [eax-0x5d],0x45
  421658:	add    BYTE PTR [ebx+0xfffff65],al
  42165e:	xchg   edi,eax
  42165f:	fiadd  DWORD PTR [eax]
  421661:	add    al,ah
  421663:	(bad)  
  421664:	call   FWORD PTR [edx]
  421666:	(bad)  
  421667:	or     al,0xff
  421669:	add    DWORD PTR [edi],0xffffff89
  42166c:	add    BYTE PTR [edi+esi*1+0x19],dh
  421670:	add    DWORD PTR [eax],0xffffffdc
  421673:	add    bh,bh
  421675:	ins    BYTE PTR es:[edi],dx
  421676:	out    0x1b,eax
  421678:	int3   
  421679:	add    BYTE PTR [edx-0x7909ff01],cl
  42167f:	sti    
  421680:	add    bh,bh
  421682:	or     bh,bh
  421684:	sbb    DWORD PTR [edx-0x7c7c625b],0x42
  42168b:	add    bh,bh
  42168d:	sbb    al,0xba
  42168f:	sar    edi,1
  421691:	(bad)  
  421692:	jle    0x421693
  421694:	add    BYTE PTR [edx+eax*1],bh
  421697:	jg     0x42161c
  421699:	and    DWORD PTR [edi+edi*8-0x2af58200],0x0
  4216a1:	add    dl,ch
  4216a3:	inc    DWORD PTR [eax]
  4216a5:	add    BYTE PTR [ecx+0x7200005e],0xff
  4216ac:	add    ch,al
  4216ae:	fbstp  TBYTE PTR [esi+0x0]
  4216b1:	sbb    DWORD PTR [eax-0x1],0xffffff83
  4216b5:	cmp    BYTE PTR [edx+0x5c],dh
  4216b8:	add    BYTE PTR [eax],al
  4216ba:	(bad)  
  4216bb:	(bad)  
  4216bc:	call   esi
  4216be:	and    al,0xc2
  4216c0:	(bad)  
  4216c1:	(bad)  
  4216c2:	jmp    0x421647
  4216c4:	add    cl,cl
  4216c6:	call   0xff83:0xaffffffe
  4216cd:	fist   DWORD PTR [edi+0xc00ff19]
  4216d3:	dec    esp
  4216d5:	(bad)  [ecx+0x56ff8334]
  4216db:	dec    esp
  4216dd:	dec    eax
  4216de:	fld    TBYTE PTR [ebx-0x470001]
  4216e4:	int3   
  4216e5:	xor    al,0xb
  4216e7:	cmp    edi,edi
  4216e9:	cmp    DWORD PTR [edx-0x77],0xffffffff
  4216ed:	jp     0x42167b
  4216ef:	repnz inc DWORD PTR [eax]
  4216f2:	ins    DWORD PTR es:[edi],dx
  4216f3:	cmp    edi,0x6d
  4216f6:	xchg   edx,eax
  4216f7:	push   esi
  4216f8:	(bad)  
  4216f9:	dec    eax
  4216fb:	or     DWORD PTR [ecx+0x64893c],0xffffffff
  421702:	jge    0x421704
  421704:	add    dl,dh
  421706:	arpl   WORD PTR [ecx-0x983301],cx
  42170c:	add    cl,dh
  42170e:	jle    0x421760
  421710:	inc    DWORD PTR [ebx+0x6effffbf]
  421716:	lahf   
  421717:	cmp    al,0x0
  421719:	add    BYTE PTR [edi],dh
  42171b:	(bad)  
  42171c:	inc    edx
  42171e:	(bad)  
  42171f:	adc    eax,DWORD PTR [eax]
  421721:	(bad)  
  421722:	jnp    0x421724
  421724:	call   FWORD PTR [edi-0x26]
  421727:	dec    esi
  421728:	inc    DWORD PTR [eax]
  42172a:	ja     0x42172c
  42172c:	add    BYTE PTR [eax+0x14],ah
  42172f:	inc    esp
  421730:	inc    DWORD PTR [ebx-0x5500ff2b]
  421736:	loop   0x42170d
  421738:	inc    DWORD PTR [ebx-0x37760026]
  42173e:	mov    ds:0xbaff0037,al
  421743:	add    bh,bh
  421745:	cmp    eax,0xccadc4
  42174a:	loope  0x42174b
  42174c:	mov    esi,ecx
  42174e:	push   eax
  42174f:	in     al,0x0
  421751:	(bad)  
  421752:	mov    esp,0xb4230000
  421757:	gs cmp edi,0x34
  42175b:	add    BYTE PTR [eax],al
  42175d:	in     al,0xb6
  42175f:	mov    al,ds:0xff630000
  421764:	and    DWORD PTR [ecx],0x5e
  421767:	cli    
  421768:	dec    esp
  42176a:	add    BYTE PTR [ebx-0x7739d434],al
  421770:	add    bh,bh
  421772:	add    BYTE PTR [eax],0xff
  421775:	inc    ebx
  421776:	idiv   BYTE PTR [ebx-0x1]
  421779:	(bad)  
  42177a:	mov    esi,0xd38c83ff
  42177f:	popf   
  421780:	inc    DWORD PTR [eax]
  421782:	dec    esp
  421783:	int3   
  421784:	int3   
  421785:	xchg   BYTE PTR [eax],al
  421787:	xchg   esi,eax
  421788:	(bad)  
  421789:	call   DWORD PTR ds:0x2a82ffff
  42178f:	or     bh,bh
  421791:	int3   
  421792:	xchg   ecx,eax
  421793:	int3   
  421794:	or     DWORD PTR [eax+eax*8+0x18],0xffffff83
  421799:	add    BYTE PTR [ebx+eax*4+0x60d24200],bl
  4217a0:	(bad)  
  4217a1:	(bad)  
  4217a2:	stc    
  4217a3:	inc    DWORD PTR [ebx+0x16c8a9]
  4217a9:	add    DWORD PTR [eax-0x7d],0xffffff83
  4217ad:	jns    0x4217c4
  4217af:	mov    ebp,0xff890083
  4217b4:	mov    edx,ecx
  4217b6:	sub    ebx,esp
  4217b8:	mov    DWORD PTR [ebx+0xc00ff25],eax
  4217be:	ret    
  4217bf:	test   BYTE PTR [eax],0x83
  4217c2:	and    eax,0xac66ffcc
  4217c7:	int3   
  4217c8:	dec    esp
  4217ca:	das    
  4217cb:	add    bh,bh
  4217cd:	pop    ecx
  4217ce:	pop    ebx
  4217cf:	lods   eax,DWORD PTR ds:[esi]
  4217d0:	inc    DWORD PTR [eax]
  4217d2:	add    BYTE PTR [ebx-0x765ea01],0x0
  4217d9:	add    bh,dh
  4217db:	add    BYTE PTR [eax],al
  4217dd:	push   0xfffffff4
  4217df:	(bad)  
  4217e0:	(bad)  
  4217e1:	inc    DWORD PTR [esi]
  4217e3:	(bad)  
  4217e4:	(bad)  
  4217e5:	aas    
  4217e6:	xchg   ebp,eax
  4217e7:	das    
  4217e8:	(bad)  
  4217e9:	call   DWORD PTR [esi]
  4217eb:	inc    DWORD PTR [eax]
  4217ed:	sbb    ebx,edx
  4217ef:	ins    BYTE PTR es:[edi],dx
  4217f0:	add    BYTE PTR [eax],al
  4217f2:	dec    edi
  4217f3:	mov    DWORD PTR [eax],eax
  4217f5:	into   
  4217f6:	xor    al,BYTE PTR [ebx-0x1]
  4217f9:	int3   
  4217fa:	aas    
  4217fb:	add    BYTE PTR [ebx-0x88cb82],al
  421801:	adc    DWORD PTR [esi],0xffffff89
  421804:	int3   
  421805:	ds push esp
  421807:	dec    edx
  421808:	dec    DWORD PTR [ecx+0x5bff000a]
  42180e:	mov    al,ds:0xc500008f
  421813:	int3   
  421814:	inc    DWORD PTR [ebp+0x5e]
  421817:	out    0xff,eax
  421819:	or     DWORD PTR [ecx],0xffffffff
  42181c:	add    BYTE PTR [edi+0x832fd6],bl
  421822:	or     eax,0xeda0ccff
  421827:	sti    
  421828:	mov    DWORD PTR [eax],eax
  42182a:	sub    BYTE PTR [eax],al
  42182c:	jmp    FWORD PTR [ecx+0x2b]
  42182f:	ret    0xffff
  421832:	call   0xffa9:0x8c4a8300
  421839:	push   edx
  42183b:	add    BYTE PTR [eax],al
  42183d:	push   ebp
  42183e:	fwait
  42183f:	pop    ecx
  421840:	mov    edi,edi
  421842:	popf   
  421843:	mov    DWORD PTR [eax],eax
  421845:	fcom   QWORD PTR ds:[ebx-0x1]
  421849:	add    BYTE PTR [ebx-0x1],bh
  42184c:	call   DWORD PTR [eax+ecx*4-0x6f000079]
  421853:	dec    DWORD PTR [ecx-0x3321153e]
  421859:	add    BYTE PTR ds:0x726283ff,ah
  42185f:	dec    ebp
  421860:	add    BYTE PTR [eax],al
  421862:	push   edx
  421863:	add    BYTE PTR [eax],al
  421865:	rcl    esp,cl
  421867:	xchg   esp,eax
  421868:	(bad)  
  421869:	push   DWORD PTR [eax+0x393989ff]
  42186f:	jge    0x421870
  421871:	add    BYTE PTR [ebx-0x7d],al
  421874:	mov    DWORD PTR [ecx],esp
  421876:	popa   
  421877:	mov    ebx,0xff1fffff
  42187c:	(bad)  
  42187d:	aas    
  42187e:	mov    ebp,0x29ffccb0
  421883:	inc    DWORD PTR [ebx+0xb212f]
  421889:	int3   
  42188a:	jns    0x42188c
  42188c:	jmp    edx
  42188e:	xor    bh,ch
  421890:	int3   
  421891:	mov    ebx,ecx
  421893:	add    BYTE PTR [ecx-0x7c96a264],cl
  421899:	int3   
  42189a:	mov    BYTE PTR [eax],0x0
  42189d:	add    esp,ebx
  42189f:	add    eax,0xfa8300
  4218a4:	and    DWORD PTR [eax],0xffffffdc
  4218a7:	ror    DWORD PTR [ecx+0xcc95ff],cl
  4218ad:	push   ecx
  4218ae:	jg     0x42190a
  4218b0:	inc    DWORD PTR [eax]
  4218b2:	mov    ch,0xff
  4218b4:	add    cl,ah
  4218b6:	in     eax,dx
  4218b7:	mov    esp,0xcc810000
  4218bc:	add    BYTE PTR [ebp+0x8333d2],ch
  4218c2:	cwde   
  4218c3:	or     DWORD PTR [ecx-0x7ca4c956],0xffffffff
  4218ca:	pushf  
  4218cb:	inc    DWORD PTR [ebx-0x331380b9]
  4218d1:	dec    DWORD PTR [edi-0x77]
  4218d4:	(bad)  
  4218d5:	jl     0x42188d
  4218d7:	ja     0x4218d9
  4218d9:	int3   
  4218da:	cld    
  4218db:	inc    DWORD PTR [ebx-0x7ce6599a]
  4218e1:	and    DWORD PTR [esi+0x6cfffff],0x67
  4218e8:	(bad)  
  4218e9:	call   DWORD PTR [edx-0x74d0100]
  4218ef:	jne    0x4218f1
  4218f1:	inc    DWORD PTR [eax]
  4218f3:	or     esp,0x6c
  4218f6:	aam    0xeb
  4218f8:	or     DWORD PTR [ecx-0x2000007f],0xffffffdb
  4218ff:	add    eax,0x72ff00
  421904:	add    BYTE PTR [esi+0x89484e],bh
  42190a:	ret    
  42190b:	add    bh,bh
  42190d:	pop    ss
  42190e:	(bad)  
  421910:	add    BYTE PTR [ebx+0x3600ff9d],al
  421916:	fwait
  421917:	ja     0x421918
  421919:	push   DWORD PTR [eax]
  42191b:	(bad)  
  42191c:	jmp    DWORD PTR [edx+0xff1447]
  421922:	retf   0xccff
  421925:	in     al,dx
  421926:	push   ss
  421927:	mov    eax,0x1dccff
  42192c:	call   FWORD PTR [ecx+0x51ffaefa]
  421932:	hlt    
  421933:	call   FWORD PTR [edi]
  421935:	pop    eax
  421936:	add    BYTE PTR [eax],al
  421938:	(bad)  
  421939:	(bad)  
  42193a:	mov    esi,0xa27b5fcc
  42193f:	int3   
  421940:	add    BYTE PTR [esi+0x5e0183f1],al
  421946:	add    ah,cl
  421948:	inc    DWORD PTR [ebx+0x3477ccfb]
  42194e:	jecxz  0x42191c
  421950:	push   DWORD PTR [esi]
  421952:	lock dec DWORD PTR [edi-0x76a6]
  421959:	add    BYTE PTR [edx+0x71cdbeff],bl
  42195f:	inc    DWORD PTR [ebx-0x74fff5ec]
  421965:	and    esp,ecx
  421967:	(bad)  
  421968:	(bad)  
  421969:	inc    DWORD PTR [ecx]
  42196b:	jmp    DWORD PTR [edi+0x61]
  42196e:	pop    es
  42196f:	(bad)  
  421970:	jmp    DWORD PTR [eax]
  421972:	mov    esp,cs
  421974:	mov    edi,0x89009d
  421979:	dec    DWORD PTR [edi]
  42197b:	mov    DWORD PTR [esi+0x7e],ebp
  42197e:	gs add ah,cl
  421981:	pop    ss
  421982:	jae    0x421983
  421984:	mov    cl,0x7
  421986:	add    bh,bh
  421988:	int3   
  421989:	add    BYTE PTR [esi],cl
  42198b:	add    BYTE PTR ds:0x8900df14,dl
  421991:	sti    
  421992:	cmp    eax,0xff5c8b00
  421997:	inc    DWORD PTR [eax]
  421999:	call   DWORD PTR [ecx-0x1]
  42199c:	add    bh,BYTE PTR [esi-0x32330076]
  4219a2:	cli    
  4219a3:	add    dl,dl
  4219a5:	xor    eax,0x83ff00ff
  4219aa:	outs   dx,DWORD PTR ds:[esi]
  4219ab:	dec    edi
  4219ad:	fstp   QWORD PTR [ebp-0x41d7d00]
  4219b3:	add    BYTE PTR [esi+0xcc0037],dl
  4219b9:	int3   
  4219ba:	mov    DWORD PTR [eax],0xcc39e7c7
  4219c0:	add    BYTE PTR [edx-0x44],ah
  4219c3:	add    BYTE PTR [ebp+0xff0091],dh
  4219c9:	inc    DWORD PTR [eax]
  4219cb:	mov    DWORD PTR [edx-0x7cff60e5],esi
  4219d1:	dec    ecx
  4219d2:	xchg   edi,eax
  4219d3:	jmp    FWORD PTR [ebx-0xc1]
  4219d9:	sub    DWORD PTR [ebp-0x1],0x28
  4219dd:	pop    edi
  4219de:	sbb    al,0x0
  4219e0:	(bad)  
  4219e1:	fstp   DWORD PTR [eax-0x209e34]
  4219e7:	add    DWORD PTR [eax],0x0
  4219ea:	and    BYTE PTR [eax],al
  4219ec:	mov    al,0x7
  4219ee:	push   0xffffffff
  4219f0:	push   DWORD PTR [esi+0x4c]
  4219f3:	(bad)  
  4219f4:	jmp    0xc0ff:0xcc83003c
  4219fb:	push   DWORD PTR [esp+ebx*1+0x4ff837f]
  421a02:	ja     0x42198d
  421a04:	inc    ecx
  421a05:	lods   al,BYTE PTR ds:[esi]
  421a06:	inc    DWORD PTR [eax]
  421a08:	mov    DWORD PTR [ebx+0x199a00a4],eax
  421a0e:	xchg   edx,eax
  421a0f:	mov    DWORD PTR [ecx+0x2989afe3],ecx
  421a15:	mov    ds:0xffff89,eax
  421a1a:	inc    BYTE PTR [ebx-0x63ab16]
  421a20:	add    ah,dh
  421a22:	arpl   di,di
  421a24:	fwait
  421a25:	cmc    
  421a26:	(bad)  
  421a27:	inc    DWORD PTR [eax]
  421a29:	sbb    DWORD PTR [edx-0x1],0xfffffff8
  421a2d:	push   es
  421a2e:	(bad)  
  421a2f:	inc    DWORD PTR [ebx+0x60ffb75b]
  421a35:	cmc    
  421a36:	dec    DWORD PTR [ecx-0x6a0034]
  421a3c:	adc    ecx,ebp
  421a3e:	add    edi,edi
  421a40:	inc    DWORD PTR [ebx+0x275ff57]
  421a46:	add    BYTE PTR [eax],al
  421a48:	(bad)  
  421a49:	(bad)  
  421a4a:	jnp    0x421a4b
  421a4c:	add    DWORD PTR [ebx-0x2b],esi
  421a4f:	(bad)  
  421a50:	inc    DWORD PTR [ecx+eiz*2-0x33d1da00]
  421a57:	int3   
  421a58:	dec    esp
  421a5a:	imul   edi,edi,0xffeac8be
  421a60:	mov    DWORD PTR [edx-0x2c],esi
  421a63:	add    cl,dl
  421a65:	aas    
  421a66:	add    BYTE PTR [eax],al
  421a68:	add    DWORD PTR [eax],0x16
  421a6b:	push   DWORD PTR [edx]
  421a6d:	mov    ss,WORD PTR [edi-0x7d]
  421a70:	add    bh,cl
  421a72:	dec    eax
  421a73:	jmp    FWORD PTR [edi-0xff0025]
  421a79:	adc    edi,0x0
  421a7c:	push   0xffffffe2
  421a7e:	inc    edi
  421a7f:	add    bh,bh
  421a81:	jl     0x421a31
  421a83:	jmp    DWORD PTR [edx-0xe7]
  421a89:	call   edi
  421a8b:	call   DWORD PTR [edx]
  421a8d:	rcl    ebx,1
  421a8f:	mov    DWORD PTR [ebx-0x64ffbc36],eax
  421a95:	in     eax,dx
  421a96:	(bad)  
  421a97:	inc    DWORD PTR [ebx-0x3100c101]
  421a9d:	cmc    
  421a9e:	xchg   ebx,eax
  421a9f:	(bad)  
  421aa0:	inc    DWORD PTR [edi-0x4c]
  421aa3:	push   DWORD PTR [ebx+edx*2]
  421aa6:	mov    edi,edi
  421aa8:	dec    DWORD PTR [ecx+0x5dd9ff1c]
  421aae:	jg     0x421aaf
  421ab0:	add    BYTE PTR ds:0xf8f6ff19,ah
  421ab6:	(bad)  
  421ab7:	dec    esp
  421ab9:	jmp    eax
  421abb:	add    ecx,0xb
  421abe:	test   edi,edi
  421ac0:	int3   
  421ac1:	ja     0x421b2e
  421ac3:	add    BYTE PTR [eax],al
  421ac5:	jge    0x421ac7
  421ac7:	add    ah,cl
  421ac9:	int3   
  421aca:	push   es
  421acb:	add    BYTE PTR [ebx-0x33764396],al
  421ad1:	dec    ecx
  421ad2:	test   eax,0xff975fff
  421ad7:	inc    DWORD PTR [eax]
  421ad9:	(bad)  
  421ada:	std    
  421adb:	add    BYTE PTR [ebp-0x3300e41d],ch
  421ae1:	aam    0x6c
  421ae3:	dec    DWORD PTR [esi+0xff0089]
  421ae9:	inc    DWORD PTR [esi+0x0]
  421aec:	pop    edi
  421aed:	push   ecx
  421aee:	cld    
  421aef:	(bad)  
  421af0:	push   edx
  421af2:	js     0x421af4
  421af4:	xchg   bl,al
  421af6:	mov    edi,edi
  421af8:	inc    DWORD PTR [eax]
  421afa:	pusha  
  421afb:	inc    DWORD PTR [esi-0x2b]
  421afe:	aad    0x0
  421b00:	int3   
  421b01:	push   ebp
  421b02:	mov    ?,edi
  421b04:	dec    ebp
  421b05:	std    
  421b06:	(bad)  
  421b07:	inc    DWORD PTR [eax]
  421b09:	int3   
  421b0a:	lds    eax,FWORD PTR [ebx+0xd8967b]
  421b10:	xor    DWORD PTR [ecx+0x41],0xffffffff
  421b14:	or     DWORD PTR [ecx+ecx*4-0x6fff0100],esp
  421b1b:	inc    DWORD PTR [ecx+0x5a]
  421b1e:	mov    al,ds:0xa1eb0000
  421b23:	(bad)  
  421b24:	ds loop 0x421b27
  421b27:	add    DWORD PTR [eax],0xffffff83
  421b2a:	add    eax,DWORD PTR [eax]
  421b2c:	jle    0x421b66
  421b2e:	aaa    
  421b2f:	add    BYTE PTR [ebx+0x2e8347be],al
  421b35:	fild   DWORD PTR [eax]
  421b37:	add    DWORD PTR [ebx-0x1e007f00],0x2f
  421b3e:	pop    ss
  421b3f:	cmp    edi,0xfffffffe
  421b42:	test   al,0xff
  421b44:	xor    BYTE PTR [edi+edi*8],0xff
  421b48:	inc    DWORD PTR [eax]
  421b4a:	sub    bh,bh
  421b4c:	mov    ds:0x83517c,al
  421b51:	pop    eax
  421b52:	repnz sbb DWORD PTR [ebp+0xffff59],0xffffff89
  421b5a:	cdq    
  421b5b:	jmp    DWORD PTR [edi+edi*2-0x1e]
  421b5f:	add    bh,bh
  421b61:	sub    ebp,DWORD PTR [edx]
  421b63:	add    ch,dh
  421b65:	ins    DWORD PTR es:[edi],dx
  421b66:	inc    DWORD PTR [ebx-0x9b0034]
  421b6c:	or     eax,0xff0029e5
  421b71:	out    dx,al
  421b72:	je     0x421b74
  421b74:	adc    edi,DWORD PTR [eax]
  421b76:	add    BYTE PTR [eax],al
  421b78:	inc    DWORD PTR [eax]
  421b7a:	sbb    al,0x0
  421b7c:	and    BYTE PTR [eax+0x9],ah
  421b7f:	inc    DWORD PTR [ebx-0x6900bc6f]
  421b85:	sub    edi,edi
  421b87:	add    BYTE PTR [eax],al
  421b89:	call   edi
  421b8b:	int3   
  421b8c:	pop    ecx
  421b8d:	push   ds
  421b8e:	add    eax,0x58df0000
  421b93:	add    BYTE PTR [edx*4-0x1],bl
  421b9a:	sar    edi,1
  421b9c:	and    DWORD PTR [ecx+esi*4+0x34c0ffff],edi
  421ba3:	(bad)  
  421ba4:	mov    ebx,0xff830067
  421ba9:	call   DWORD PTR [eax]
  421bab:	inc    DWORD PTR [ecx-0x8]
  421bae:	push   0xffffff83
  421bb0:	xor    DWORD PTR [edi+edx*4-0x7c6b2a01],0xffffffff
  421bb8:	add    BYTE PTR [eax],al
  421bba:	mov    ds:0x269a2000,al
  421bbf:	cmp    edi,0x35
  421bc2:	xchg   DWORD PTR [eax],eax
  421bc4:	or     ebx,DWORD PTR ds:0xff0083cc
  421bca:	mov    edi,edi
  421bcc:	repz push 0x5cffffd8
  421bd2:	pushf  
  421bd3:	add    BYTE PTR [edi-0x3f],cl
  421bd6:	add    DWORD PTR [eax],0xffffffcc
  421bd9:	add    ch,ch
  421bdb:	add    BYTE PTR [ebx-0x73],bh
  421bde:	fadd   QWORD PTR [ebx-0x767a3f34]
  421be4:	hlt    
  421be5:	ss (bad) 
  421be7:	dec    DWORD PTR [ecx+0x45836100]
  421bed:	mov    bh,0xd5
  421bef:	add    DWORD PTR [eax],0x4c
  421bf2:	mov    esp,0x836cd5ff
  421bf7:	add    BYTE PTR [ecx-0x55ffa57d],cl
  421bfd:	test   DWORD PTR [ecx-0x1],esi
  421c00:	jmp    FWORD PTR [ebp+0x54]
  421c03:	add    BYTE PTR [eax+esi*2],dh
  421c06:	int3   
  421c07:	add    BYTE PTR [eax],al
  421c09:	call   FWORD PTR [edx]
  421c0b:	jmp    FWORD PTR [eax+ebx*8]
  421c0e:	mov    bh,0xff
  421c10:	or     edi,0xffffffcc
  421c13:	adc    DWORD PTR ds:0xffffffb7,0xffffffff
  421c1a:	call   0xef6c151e
  421c1f:	int3   
  421c20:	add    BYTE PTR [ecx],dh
  421c22:	fs (bad) 
  421c24:	(bad)  
  421c26:	(bad)  
  421c27:	(bad)  
  421c28:	(bad)  
  421c29:	(bad)  
  421c2a:	fld    QWORD PTR [eax]
  421c2c:	repnz inc esp
  421c2e:	aas    
  421c2f:	inc    DWORD PTR [ebx-0x7300565e]
  421c35:	and    bh,bh
  421c37:	inc    DWORD PTR [ebx-0x6bff927d]
  421c3d:	popf   
  421c3e:	push   cs
  421c3f:	inc    DWORD PTR [eax]
  421c41:	mov    bl,0x65
  421c43:	inc    DWORD PTR [eax]
  421c45:	je     0x421c46
  421c47:	add    DWORD PTR [eax],0xffffffcc
  421c4a:	in     eax,dx
  421c4b:	add    dl,dl
  421c4d:	and    ah,BYTE PTR [edi]
  421c4f:	int3   
  421c50:	add    BYTE PTR [esi],dl
  421c52:	adc    edi,edi
  421c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c55:	gs int3 
  421c57:	int3   
  421c58:	(bad)  
  421c59:	inc    DWORD PTR [edi]
  421c5b:	add    BYTE PTR [eax-0x7c6e17],bl
  421c61:	push   ecx
  421c62:	dec    eax
  421c63:	dec    ebp
  421c65:	ss (bad) 
  421c67:	inc    DWORD PTR [ebx-0x3b7c2501]
  421c6d:	ja     0x421cdc
  421c6f:	cmp    edi,0xc
  421c72:	jno    0x421bf7
  421c74:	dec    edx
  421c75:	xchg   edi,eax
  421c76:	add    BYTE PTR [eax],al
  421c78:	mov    DWORD PTR [ecx+0x7304ff0a],ecx
  421c7e:	(bad)  
  421c81:	pushf  
  421c82:	mov    dh,0xff
  421c84:	test   BYTE PTR ds:0x83ffffcc,bl
  421c8a:	mov    ah,0xff
  421c8c:	push   ebp
  421c8d:	mov    ds:0x63ffcc25,al
  421c92:	sbb    bh,bh
  421c94:	fs cmp edi,0x5200ccff
  421c9b:	call   DWORD PTR [edi-0xa]
  421c9e:	mov    ecx,0x233affff
  421ca3:	sbb    DWORD PTR [eax+edx*4+0x0],0x0
  421ca8:	(bad)  
  421ca9:	jmp    DWORD PTR [eax+0x731ac700]
  421caf:	(bad)  
  421cb0:	push   ebp
  421cb2:	xchg   edi,edi
  421cb4:	iret   
  421cb5:	xor    al,0x0
  421cb7:	dec    DWORD PTR [ecx-0x2200b701]
  421cbd:	xchg   edx,eax
  421cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cbf:	add    BYTE PTR [ebx-0x79007e5c],al
  421cc5:	mov    bl,0xff
  421cc7:	(bad)  
  421cc8:	(bad)  
  421cc9:	call   DWORD PTR [ebp-0x77]
  421ccc:	add    BYTE PTR [ecx],ah
  421cce:	ja     0x421ccf
  421cd0:	add    BYTE PTR [edx+0x4576ffdb],bh
  421cd6:	mov    DWORD PTR [ecx+0x6a0083],ecx
  421cdc:	stos   DWORD PTR es:[edi],eax
  421cdd:	lds    ebp,FWORD PTR [eax-0x314dff01]
  421ce3:	add    BYTE PTR [ebp-0x7c5c],al
  421ce9:	add    BYTE PTR [ecx+0x1818ae83],al
  421cef:	add    bh,bh
  421cf1:	or     DWORD PTR [ebp-0x77],ecx
  421cf4:	adc    eax,DWORD PTR [ebp+0x0]
  421cf7:	(bad)  
  421cf8:	(bad)  
  421cf9:	(bad)  
  421cfa:	cmp    DWORD PTR [eax],eax
  421cfc:	(bad)  
  421cfd:	and    ecx,DWORD PTR [esi-0x77]
  421d00:	call   FWORD PTR [eax-0x9]
  421d03:	push   DWORD PTR [edx-0x13]
  421d06:	inc    DWORD PTR [eax]
  421d08:	add    BYTE PTR [eax],al
  421d0a:	push   edx
  421d0b:	jmp    FWORD PTR [ebx+0xd07c]
  421d11:	and    BYTE PTR [ebp-0x1],al
  421d14:	dec    ecx
  421d15:	mov    BYTE PTR [eax],al
  421d17:	cmp    edi,0xffffff83
  421d1a:	sub    al,BYTE PTR [ebx-0x7c8528b7]
  421d20:	(bad)  
  421d21:	mov    ebp,0xf49accbc
  421d26:	inc    DWORD PTR [ebx+0xb50000]
  421d2c:	or     BYTE PTR [esi-0xff34],0xad
  421d33:	add    BYTE PTR [eax-0x7cff0077],bh
  421d39:	add    BYTE PTR [edi+0x4f423083],dh
  421d3f:	(bad)  
  421d40:	inc    edx
  421d42:	mov    ch,0xff
  421d44:	and    BYTE PTR [ecx-0xff0034],ah
  421d4a:	dec    ecx
  421d4b:	add    BYTE PTR [ebp+0x6d],ch
  421d4e:	dec    edx
  421d4f:	add    BYTE PTR [eax],al
  421d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d52:	retf   0xed00
  421d55:	push   ebx
  421d56:	add    DWORD PTR [eax],0xffffff89
  421d59:	jmp    DWORD PTR [edi+edi*8+0x2]
  421d5d:	cmp    bh,BYTE PTR [ebx]
  421d5f:	int3   
  421d60:	jmp    ebp
  421d62:	adc    BYTE PTR [eax],al
  421d64:	jo     0x421d13
  421d66:	cmp    edi,0xffffffff
  421d69:	mov    DWORD PTR [edx],esp
  421d6b:	add    BYTE PTR [edx+eiz*1+0x7f89ffd1],ah
  421d72:	data16 add BYTE PTR [ebx-0x25],bh
  421d76:	cmp    edi,0x0
  421d79:	mov    DWORD PTR [ebx],esp
  421d7b:	dec    DWORD PTR [ebp+ebp*4+0x31]
  421d7f:	dec    esp
  421d81:	dec    ebp
  421d82:	mov    edi,edi
  421d84:	dec    esp
  421d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d86:	or     DWORD PTR [ecx-0xfa7c01],0x65
  421d8d:	(bad)  
  421d8e:	fwait
  421d8f:	mov    DWORD PTR [eax],eax
  421d91:	popa   
  421d92:	add    BYTE PTR cs:[edi],ch
  421d95:	lea    eax,[eax]
  421d97:	add    BYTE PTR [ecx-0x24ff6d00],cl
  421d9d:	cmp    eax,0xfaff0020
  421da2:	ud0    esp,esi
  421da5:	lods   eax,DWORD PTR ds:[esi]
  421da6:	(bad)  
  421da7:	dec    DWORD PTR [ecx-0x38762201]
  421dad:	imul   BYTE PTR [ebp-0x1]
  421db0:	cmp    eax,0xffffffb6
  421db3:	push   DWORD PTR [ecx-0x760096]
  421db9:	dec    DWORD PTR [esi-0x7d]
  421dbc:	lods   eax,DWORD PTR ds:[esi]
  421dbd:	imul   ecx,esi,0xffffffff
  421dc0:	cmp    DWORD PTR ds:0x3e128381,0xffffffff
  421dc7:	inc    DWORD PTR [ebx-0x13009901]
  421dcd:	mov    ah,0xac
  421dcf:	int3   
  421dd0:	add    BYTE PTR [eax+eiz*1-0x1],ch
  421dd4:	repz ret 
  421dd6:	add    BYTE PTR [ebx+0xacffff],al
  421ddc:	inc    ebp
  421ddd:	sub    eax,0x2dffffd0
  421de2:	add    eax,DWORD PTR [eax]
  421de4:	push   ecx
  421de5:	(bad)  
  421de6:	(bad)  
  421de7:	(bad)  
  421de8:	(bad)  
  421de9:	push   edx
  421deb:	or     esi,0xffffffe5
  421dee:	inc    ecx
  421def:	dec    DWORD PTR [ecx-0xaff79c9]
  421df5:	add    edi,edi
  421df7:	int3   
  421df8:	inc    DWORD PTR [eax]
  421dfa:	stos   BYTE PTR es:[edi],al
  421dfb:	inc    edx
  421dfd:	mov    ebp,0x51ffff7c
  421e02:	cmp    BYTE PTR [eax],al
  421e04:	mov    esp,0xffffff84
  421e09:	add    BYTE PTR [edx],cl
  421e0b:	jmp    DWORD PTR [edi]
  421e0d:	xor    al,bl
  421e0f:	inc    DWORD PTR [eax]
  421e11:	js     0x421dc6
  421e13:	add    BYTE PTR [edi],bl
  421e15:	test   eax,0xffcc83ff
  421e1a:	(bad)  
  421e1c:	add    edx,DWORD PTR [edi]
  421e1e:	das    
  421e1f:	int3   
  421e20:	jmp    FWORD PTR [ecx+0x54]
  421e23:	call   FWORD PTR [eax+0x43]
  421e26:	dec    DWORD PTR [ecx-0xfe0100]
  421e2c:	mov    ds:0xff26eb,al
  421e31:	add    DWORD PTR [esi+0x0],ebp
  421e34:	test   al,0x23
  421e36:	or     DWORD PTR [ecx+0xb38983],0xfffffff6
  421e3d:	rcl    DWORD PTR [eax],1
  421e3f:	add    ah,cl
  421e41:	sub    bl,BYTE PTR [ecx-0x89b300]
  421e47:	add    bh,bh
  421e49:	and    DWORD PTR [edi],0xffffff83
  421e4c:	jmp    0xfaf1:0xcd9
  421e53:	(bad)  
  421e54:	fstp   QWORD PTR [ecx+0xffff]
  421e5a:	popa   
  421e5b:	add    BYTE PTR [ebx],ah
  421e5d:	sbb    al,0x16
  421e5f:	int3   
  421e60:	jmp    FWORD PTR [ecx+0x1d]
  421e63:	int3   
  421e64:	retf   0xffd6
  421e67:	inc    DWORD PTR [ebx-0x49ff1c00]
  421e6d:	pop    es
  421e6e:	fcos   
  421e70:	add    BYTE PTR [eax-0x48],bl
  421e73:	add    BYTE PTR [esi+0xff839e],ah
  421e79:	sbb    eax,0xffffffff
  421e7c:	mov    esi,0xcc833a3f
  421e81:	push   eax
  421e82:	lock add DWORD PTR [edx],0x1e
  421e86:	inc    DWORD PTR [eax]
  421e88:	mov    DWORD PTR [eax],eax
  421e8a:	sub    eax,0xfb64ecff
  421e8f:	add    ah,cl
  421e91:	push   ss
  421e92:	imul   ecx,DWORD PTR [ecx-0x288b],0x5fffff
  421e9c:	jne    0x421eb3
  421e9e:	push   ecx
  421e9f:	add    BYTE PTR [ebx-0x7c0026e9],al
  421ea5:	aas    
  421ea6:	(bad)  
  421ea7:	(bad)  
  421ea8:	(bad)  
  421ea9:	jmp    FWORD PTR [ecx-0x1]
  421eac:	mov    eax,0x830002d0
  421eb1:	stos   DWORD PTR es:[edi],eax
  421eb2:	jmp    0xffe56283
  421eb7:	add    BYTE PTR [eax],al
  421eb9:	(bad)  
  421eba:	jmp    0xf0869648
  421ebf:	(bad)  
  421ec0:	dec    DWORD PTR [edi-0x548d00f9]
  421ec6:	inc    DWORD PTR [eax]
  421ec8:	inc    DWORD PTR [eax]
  421eca:	rol    BYTE PTR [ebx+0xbc6f60],cl
  421ed0:	add    BYTE PTR [esp+ecx*2],ah
  421ed3:	dec    DWORD PTR [esi-0x7c007f]
  421ed9:	dec    DWORD PTR [esp+ecx*8]
  421edc:	xchg   esi,eax
  421edd:	sbb    eax,0x320083a5
  421ee2:	lods   al,BYTE PTR ds:[esi]
  421ee3:	push   DWORD PTR [edx]
  421ee5:	sbb    cl,ah
  421ee7:	add    DWORD PTR [eax],0xffffffff
  421eea:	jmp    0x421eeb
  421eec:	dec    ecx
  421eed:	pop    ds
  421eee:	ins    DWORD PTR es:[edi],dx
  421eef:	inc    DWORD PTR [eax]
  421ef1:	mov    esi,0xacf0ff50
  421ef6:	add    bh,bh
  421ef8:	(bad)  
  421ef9:	jmp    DWORD PTR [ebx+0x11995eff]
  421eff:	dec    esp
  421f01:	test   ecx,edx
  421f03:	call   DWORD PTR [ebp+0xff5d]
  421f09:	jmp    DWORD PTR [edx-0x67d4f27d]
  421f0f:	inc    DWORD PTR [eax]
  421f11:	nop
  421f12:	mov    esi,0x4ca4ff
  421f17:	(bad)  
  421f18:	inc    DWORD PTR [eax]
  421f1a:	stc    
  421f1b:	push   edi
  421f1d:	aam    0xaa
  421f1f:	add    BYTE PTR [eax],al
  421f21:	xchg   esi,eax
  421f22:	fadd   QWORD PTR [eax]
  421f24:	jae    0x421f10
  421f26:	inc    DWORD PTR [ebx-0xc70001]
  421f2c:	rcl    BYTE PTR [edi-0x35ff0009],0xe2
  421f33:	xor    DWORD PTR [esi],0x3e
  421f36:	int3   
  421f37:	(bad)  
  421f38:	inc    DWORD PTR [eax]
  421f3a:	retf   0xd900
  421f3d:	push   cs
  421f3e:	pop    ebx
  421f3f:	inc    DWORD PTR [eax]
  421f41:	or     ecx,ecx
  421f43:	dec    ebp
  421f45:	test   al,0xff
  421f47:	inc    DWORD PTR [eax]
  421f49:	jmp    DWORD PTR [edi+edi*8+0x57]
  421f4d:	sub    BYTE PTR [ebp-0x2b950000],bh
  421f53:	call   DWORD PTR [ebx-0x760052]
  421f59:	int3   
  421f5a:	adc    edi,edi
  421f5c:	aaa    
  421f5d:	dec    BYTE PTR [esi]
  421f5f:	(bad)  
  421f60:	call   edx
  421f62:	cmp    edi,0x48b2
  421f68:	add    BYTE PTR [eax],al
  421f6a:	int    0x83
  421f6c:	push   0xffffffd3
  421f6e:	xchg   esp,eax
  421f6f:	(bad)  
  421f70:	inc    DWORD PTR [ecx+0x10]
  421f73:	dec    DWORD PTR [edi+0xff832e]
  421f79:	sub    DWORD PTR [ebx-0x1],0xfffffff8
  421f7d:	pop    esi
  421f7e:	adc    bh,bh
  421f80:	push   DWORD PTR [ebx+edx*1-0xd91b00]
  421f87:	add    BYTE PTR [eax],al
  421f89:	dec    DWORD PTR [eax]
  421f8b:	(bad)  
  421f8c:	cli    
  421f8d:	aaa    
  421f8e:	(bad)  
  421f91:	push   esp
  421f92:	mov    ebx,0x38e8ff
  421f97:	(bad)  
  421f98:	(bad)  
  421f99:	jmp    FWORD PTR [esi-0x7d]
  421f9c:	ja     0x421fdf
  421f9e:	push   ss
  421f9f:	cmp    edi,0xffffffff
  421fa2:	mov    bl,0x89
  421fa4:	loop   0x421fc8
  421fa6:	add    bh,bh
  421fa8:	int3   
  421fa9:	int3   
  421faa:	inc    ecx
  421fab:	int3   
  421fac:	stos   BYTE PTR es:[edi],al
  421fad:	(bad)  
  421fae:	jae    0x421faf
  421fb0:	add    BYTE PTR [edx],al
  421fb2:	mov    ebx,0x601100
  421fb7:	add    bh,bh
  421fb9:	int3   
  421fba:	jne    0x421fbb
  421fbc:	push   ebx
  421fbd:	add    DWORD PTR [eax-0x582d0000],0xffffffff
  421fc4:	stos   DWORD PTR es:[edi],eax
  421fc5:	xor    bh,bh
  421fc7:	dec    DWORD PTR [ecx-0x5f00ab01]
  421fcd:	mov    dh,0x3c
  421fcf:	(bad)  
  421fd0:	jmp    FWORD PTR [eax-0x41]
  421fd3:	mov    ecx,esp
  421fd5:	clc    
  421fd6:	inc    DWORD PTR [eax]
  421fd8:	dec    esp
  421fda:	lock add BYTE PTR [eax-0x9e1d],dl
  421fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fe2:	sub    al,0x83
  421fe4:	ja     0x421fe5
  421fe6:	inc    DWORD PTR [eax]
  421fe8:	add    bh,bh
  421fea:	adc    al,BYTE PTR [eax]
  421fec:	dec    eax
  421fed:	mov    WORD PTR [eax+eax*1-0x741b00],ss
  421ff4:	jae    0x42202f
  421ff6:	(bad)  
  421ff7:	(bad)  
  421ff8:	dec    esp
  421ffa:	in     al,0xff
  421ffc:	pop    esp
  421ffd:	add    ecx,edi
  421fff:	add    BYTE PTR [eax],al
  422001:	out    dx,al
  422002:	pop    ebx
  422003:	jmp    DWORD PTR [eax+0xffff4c]
  422009:	add    BYTE PTR [ecx+0x0],bh
  42200c:	dec    eax
  42200d:	and    DWORD PTR [edi-0x1],ebp
  422010:	int3   
  422011:	imul   ebx,DWORD PTR [ebp-0x7d],0x57
  422015:	sub    ah,cl
  422017:	add    BYTE PTR [eax],al
  422019:	add    BYTE PTR [edi+0x3a382900],cl
  42201f:	add    bh,bh
  422021:	xchg   ebx,eax
  422022:	or     ecx,esp
  422024:	sub    bl,BYTE PTR [ebx-0x1]
  422027:	cmp    edi,0x0
  42202a:	jmp    0xf3112e2e
  42202f:	(bad)  
  422030:	(bad)  
  422031:	stc    
  422032:	pop    ss
  422033:	int3   
  422034:	icebp  
  422035:	and    edi,edi
  422037:	add    BYTE PTR [ebx-0x7cff5a00],al
  42203d:	jmp    0x58:0x33ffffcb
  422044:	call   0xffc61f5f
  422049:	dec    DWORD PTR [eax]
  42204b:	add    DWORD PTR [ecx],0x53
  42204e:	push   0xffffff89
  422050:	push   DWORD PTR [edx]
  422052:	cmp    edi,edi
  422054:	mov    edi,0xcc0000df
  422059:	dec    DWORD PTR [ebp+0x0]
  42205c:	cs mov esp,0xefff894f
  422062:	and    al,0xff
  422064:	push   ebp
  422065:	add    BYTE PTR [ebx+0x5d00ff83],0x83
  42206c:	gs ins DWORD PTR es:[edi],dx
  42206e:	imul   edi,edi,0x83213aff
  422074:	jle    0x422004
  422076:	inc    DWORD PTR [eax]
  422078:	mov    DWORD PTR [ebx+0x2570ff96],eax
  42207e:	pop    ebx
  42207f:	dec    DWORD PTR [ecx+0x14004339]
  422085:	push   ss
  422086:	add    ah,cl
  422088:	inc    DWORD PTR [ebx-0x2f0100f7]
  42208e:	pop    es
  42208f:	add    BYTE PTR [eax],al
  422091:	in     al,dx
  422092:	stos   BYTE PTR es:[edi],al
  422093:	add    BYTE PTR [edx-0x7c0032],bl
  422099:	mov    DWORD PTR [edx],edi
  42209b:	(bad)  
  42209c:	ds pop eax
  42209e:	int    0xff
  4220a0:	call   DWORD PTR [ebp-0x71]
  4220a3:	mov    DWORD PTR [eax-0xff3326],ecx
  4220a9:	add    BYTE PTR [esi+0x5028e889],ch
  4220af:	inc    DWORD PTR [ebx+0x1f83d9c8]
  4220b5:	pop    esi
  4220b6:	add    BYTE PTR [eax],al
  4220b8:	dec    DWORD PTR [ecx-0x43787c35]
  4220be:	(bad)  
  4220bf:	mov    DWORD PTR [ecx+0x12ff47b0],ecx
  4220c5:	sar    bh,cl
  4220c7:	(bad)  
  4220c8:	(bad)  
  4220c9:	(bad)  
  4220ca:	mov    edx,0x1b5e4300
  4220cf:	add    BYTE PTR [ebx+0x3eff920c],al
  4220d5:	jb     0x42205a
  4220d7:	int3   
  4220d8:	add    BYTE PTR [eax],al
  4220da:	jnp    0x4220dc
  4220dc:	shr    DWORD PTR [ecx],1
  4220de:	xchg   ebx,eax
  4220df:	add    bh,bh
  4220e1:	cmp    eax,0x24dff8e
  4220e6:	inc    DWORD PTR [eax]
  4220e8:	dec    esp
  4220ea:	xor    al,0xff
  4220ec:	dec    edx
  4220ed:	mov    BYTE PTR [eax],bl
  4220ef:	cmp    edi,0xffffffec
  4220f2:	push   ecx
  4220f3:	add    dh,bl
  4220f5:	jb     0x42207a
  4220f7:	cmp    edi,0xffffffff
  4220fa:	(bad)  
  4220fc:	fnstcw WORD PTR [edi-0x397cffa8]
  422102:	sbb    DWORD PTR [eax],eax
  422104:	shl    bl,1
  422106:	inc    DWORD PTR [eax]
  422108:	(bad)  
  422109:	inc    DWORD PTR ds:0xdd26daff
  42210f:	add    BYTE PTR [eax],al
  422111:	aad    0x7d
  422113:	add    BYTE PTR [ecx-0x7600ffda],bh
  422119:	(bad)  
  42211a:	mov    edi,0xf03d5b00
  42211f:	cmp    edi,0xffffff86
  422122:	xor    eax,0x765a00
  422127:	(bad)  
  422128:	(bad)  
  422129:	call   ebp
  42212b:	add    BYTE PTR [ebp+0x6],ah
  42212e:	fld    QWORD PTR [ebx-0xdb9500]
  422134:	sbb    DWORD PTR [ecx-0xffff34],edx
  42213a:	push   esp
  42213b:	mov    esp,eax
  42213d:	adc    BYTE PTR [ecx-0x14d5ff01],bh
  422143:	sbb    esp,0x30
  422146:	(bad)  
  422147:	inc    DWORD PTR [eax]
  422149:	dec    DWORD PTR [edi-0x77]
  42214c:	aas    
  42214d:	hlt    
  42214e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42214f:	or     DWORD PTR [ecx+0x3ffcfdb],0x42
  422156:	add    bh,bh
  422158:	add    BYTE PTR [eax],al
  42215a:	dec    edx
  42215b:	int3   
  42215c:	sbb    BYTE PTR [edi],0xfc
  42215f:	mov    DWORD PTR [ebx+0x2bff44c6],eax
  422165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422166:	cmp    edi,0xffffffff
  422169:	add    BYTE PTR [eax+eax*1-0x29],al
  42216d:	sbb    eax,0x87890061
  422172:	sar    bh,1
  422174:	adc    eax,0xff00ffaf
  422179:	int3   
  42217a:	jne    0x42217c
  42217c:	add    BYTE PTR [edx+0x5accff70],ch
  422182:	(bad)  
  422184:	jle    0x4221bb
  422186:	add    bh,bh
  422188:	add    bh,bh
  42218a:	js     0x42210f
  42218c:	dec    BYTE PTR [esi-0x2e]
  42218f:	(bad)  
  422190:	(bad)  
  422191:	fsub   QWORD PTR [ecx-0x1]
  422194:	ror    DWORD PTR [esi-0x7700],cl
  42219a:	jae    0x42219b
  42219c:	or     eax,0x832702
  4221a1:	or     bl,dl
  4221a3:	add    BYTE PTR [esi+esi*2-0x1],dl
  4221a7:	add    ah,cl
  4221a9:	add    ah,bl
  4221ab:	add    BYTE PTR [edx],ch
  4221ad:	mov    cl,0x54
  4221af:	inc    DWORD PTR [ebx-0x5d002908]
  4221b5:	inc    ecx
  4221b6:	(bad)  
  4221b7:	inc    DWORD PTR [eax]
  4221b9:	push   DWORD PTR [edi+0x0]
  4221bc:	(bad)  
  4221bd:	leave  
  4221be:	mov    al,0xff
  4221c0:	add    BYTE PTR [edx+0x38],bh
  4221c3:	jmp    DWORD PTR [ecx]
  4221c5:	(bad)  
  4221c6:	mov    edi,edi
  4221c8:	add    BYTE PTR [ebx+0x4207cccf],al
  4221ce:	cmp    bh,bh
  4221d0:	push   edi
  4221d2:	(bad)  
  4221d3:	dec    DWORD PTR [ebx+eax*4-0x33003400]
  4221da:	mov    eax,ds:0xb025c9ff
  4221df:	add    bh,bh
  4221e1:	push   0x9482ff4e
  4221e6:	(bad)  
  4221e7:	dec    DWORD PTR [ecx-0x26ff4f01]
  4221ed:	je     0x422221
  4221ef:	add    bh,bh
  4221f1:	xchg   ecx,eax
  4221f2:	jno    0x4221f3
  4221f4:	cs xchg edi,eax
  4221f6:	add    BYTE PTR [eax],al
  4221f8:	add    BYTE PTR [eax],al
  4221fa:	adc    eax,DWORD PTR [eax]
  4221fc:	ja     0x422203
  4221fe:	out    dx,eax
  4221ff:	mov    DWORD PTR [ebx+0x683a69d],eax
  422205:	push   ebp
  422206:	int3   
  422207:	(bad)  
  422208:	dec    esp
  42220a:	jge    0x422195
  42220c:	xchg   ebp,eax
  42220d:	shr    DWORD PTR [ecx],1
  42220f:	cmp    edi,0xffffffe8
  422212:	push   ecx
  422213:	add    BYTE PTR ds:0xffff00e2,cl
  422219:	(bad)  
  42221a:	mov    ebx,0x5de4b0ff
  42221f:	inc    DWORD PTR [eax]
  422221:	shl    BYTE PTR [edx],cl
  422223:	(bad)  
  422224:	mov    esp,0xff000056
  422229:	call   FWORD PTR [ebx+eax*4-0x33975d30]
  422230:	add    BYTE PTR [ebx+0x63],ch
  422233:	sbb    DWORD PTR [esi+0x42],0xffffffff
  422237:	inc    DWORD PTR [eax]
  422239:	call   edx
  42223b:	jmp    FWORD PTR [edx]
  42223d:	jnp    0x422237
  42223f:	(bad)  
  422240:	jmp    FWORD PTR [edx]
  422242:	add    bh,bh
  422244:	cmp    DWORD PTR [ebx],0xff00ff00
  42224a:	jmp    0x666c2a1b
  42224f:	add    DWORD PTR [ebx+0x71005414],0xffffffc2
  422256:	add    BYTE PTR [eax],al
  422258:	inc    DWORD PTR [eax]
  42225a:	sub    DWORD PTR [eax],eax
  42225c:	inc    ebx
  42225d:	xor    al,0xb7
  42225f:	cmp    edi,0x24
  422262:	mov    ebx,0xfd3689
  422267:	add    ah,cl
  422269:	jmp    DWORD PTR [ebp-0x7eb9df01]
  42226f:	dec    DWORD PTR [ecx-0x49ff006c]
  422275:	inc    ecx
  422276:	add    BYTE PTR [eax],al
  422278:	add    BYTE PTR [ebx-0x18f300d1],al
  42227e:	fdivp  st(7),st
  422280:	sbb    DWORD PTR [ebp+ebp*1-0x34],0xfffffff8
  422285:	cmp    esp,ecx
  422287:	add    BYTE PTR [eax],al
  422289:	add    BYTE PTR [edi-0x17340701],ah
  42228f:	add    BYTE PTR [eax],al
  422291:	icebp  
  422292:	test   bh,bh
  422294:	mov    bh,0xb3
  422296:	(bad)  
  422297:	(bad)  
  422298:	(bad)  
  422299:	(bad)  
  42229a:	in     eax,dx
  42229b:	add    dl,ch
  42229d:	inc    esi
  42229e:	das    
  42229f:	(bad)  
  4222a0:	jmp    DWORD PTR [ebp+0x50]
  4222a3:	add    BYTE PTR [ecx-0x3333ff2b],cl
  4222a9:	add    BYTE PTR [edi+edi*8-0xd001ff],bh
  4222b0:	add    bl,bl
  4222b2:	ins    DWORD PTR es:[edi],dx
  4222b3:	dec    DWORD PTR ds:0xccff0063
  4222b9:	call   DWORD PTR ds:0xa4e2d1ff
  4222bf:	add    DWORD PTR [eax],0x0
  4222c2:	sub    al,0x83
  4222c4:	mov    cl,0xa3
  4222c6:	add    BYTE PTR [ebx-0x99ff77],al
  4222cc:	inc    edi
  4222cd:	frstor [edi]
  4222cf:	inc    DWORD PTR [eax]
  4222d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222d2:	sub    esp,ecx
  4222d4:	xor    DWORD PTR [bx+si],eax
  4222d7:	or     esp,0xffffffff
  4222da:	pop    DWORD PTR [eax]
  4222dc:	int    0x82
  4222de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222df:	inc    DWORD PTR [eax]
  4222e1:	sub    cl,BYTE PTR [eax]
  4222e3:	jmp    DWORD PTR [edx-0xff005a]
  4222e9:	jmp    esi
  4222eb:	jmp    eax
  4222ed:	add    edi,DWORD PTR [edi+0x5ecdff00]
  4222f3:	int3   
  4222f4:	cmp    eax,0xffff83c6
  4222f9:	inc    DWORD PTR [ecx]
  4222fb:	int3   
  4222fc:	inc    esp
  4222fd:	mov    DWORD PTR [ebx-0x18370100],esp
  422303:	int3   
  422304:	idiv   DWORD PTR [edx]
  422306:	add    bh,bh
  422308:	add    BYTE PTR [eax],al
  42230a:	push   ecx
  42230b:	int3   
  42230c:	xor    edx,DWORD PTR [ecx-0x22]
  42230f:	dec    DWORD PTR [ecx+0x2aff044e]
  422315:	dec    esi
  422316:	(bad)  
  422317:	inc    DWORD PTR [ebx+0x11ccc9ff]
  42231d:	xor    BYTE PTR [eax],al
  42231f:	cmp    edi,0xffffffe5
  422322:	cmp    bh,bh
  422324:	not    DWORD PTR [edi+0x0]
  422327:	inc    DWORD PTR [eax]
  422329:	dec    edx
  42232b:	add    BYTE PTR [edi],bh
  42232d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42232e:	adc    eax,0x6236ff83
  422333:	add    BYTE PTR [eax-0x7c00ff27],dl
  422339:	call   FWORD PTR [ebp+0x0]
  42233c:	pop    ebx
  42233d:	stos   DWORD PTR es:[edi],eax
  42233e:	or     eax,0x7f4c00ff
  422343:	add    cl,bh
  422345:	cmp    bh,bh
  422347:	inc    DWORD PTR [eax]
  422349:	int3   
  42234a:	push   ebx
  42234b:	call   FWORD PTR [eax-0x337763]
  422351:	sbb    bl,BYTE PTR [edi-0x1]
  422354:	arpl   WORD PTR [edx],di
  422356:	add    bh,bh
  422358:	(bad)  
  422359:	(bad)  
  42235a:	cmp    BYTE PTR [eax],al
  42235c:	or     ch,bl
  42235e:	mov    ebx,0x889b83ff
  422363:	add    BYTE PTR [edi+0x6e],bh
  422366:	dec    esp
  422368:	(bad)  
  422369:	(bad)  
  42236a:	fdivp  st(7),st
  42236c:	mov    bh,0xa4
  42236e:	sbb    al,0xff
  422370:	adc    DWORD PTR [esi+eax*8-0x77],0x34
  422375:	pop    ebx
  422376:	add    DWORD PTR [eax],0xffffffff
  422379:	add    DWORD PTR [edi-0x34],0x3f
  42237d:	sub    BYTE PTR [edi],cl
  42237f:	add    bh,bh
  422381:	test   al,0x30
  422383:	(bad)  
  422384:	cmp    DWORD PTR [ebp-0xff007d],esp
  42238a:	aaa    
  42238b:	add    BYTE PTR [ebp+0xdcce],cl
  422391:	mov    BYTE PTR [ebx],ch
  422393:	inc    DWORD PTR [edi+0xccffaf]
  422399:	jmp    DWORD PTR [esi+0x212215ff]
  42239f:	mov    edi,edi
  4223a1:	and    bl,BYTE PTR [ebx]
  4223a3:	add    cl,dh
  4223a5:	daa    
  4223a6:	add    bh,bh
  4223a8:	add    bh,bh
  4223aa:	ds and eax,0xffffffe3
  4223ae:	or     eax,0x70b20000
  4223b3:	push   DWORD PTR [eax+edi*2-0xffff34]
  4223ba:	popf   
  4223bb:	add    BYTE PTR [ebp-0x7],bh
  4223be:	pop    edi
  4223bf:	add    BYTE PTR [eax],al
  4223c1:	adc    al,BYTE PTR [bx+si]
  4223c4:	push   ecx
  4223c5:	sar    edi,cl
  4223c7:	add    bh,bh
  4223c9:	dec    DWORD PTR [edi-0x1]
  4223cc:	aaa    
  4223cd:	aas    
  4223ce:	int3   
  4223cf:	add    DWORD PTR [eax],0x6
  4223d2:	sbb    edi,edi
  4223d4:	ret    
  4223d5:	popf   
  4223d6:	add    BYTE PTR [ecx+0x5f0000],cl
  4223dc:	sub    al,0xd0
  4223de:	xor    BYTE PTR [eax],al
  4223e0:	xor    DWORD PTR [ecx],0xe
  4223e3:	jmp    DWORD PTR [edx-0x33000057]
  4223e9:	xor    DWORD PTR [ebp+0x1cfb5300],0x0
  4223f0:	jmp    FWORD PTR [esi-0x1d]
  4223f3:	(bad)  
  4223f4:	(bad)  
  4223f5:	jmp    0x6e:0x83ffffcc
  4223fc:	das    
  4223fd:	inc    ebp
  4223fe:	repz add BYTE PTR [eax],al
  422401:	test   BYTE PTR [eax+0x4284cc],cl
  422407:	inc    DWORD PTR [ebx+0x10ffbf00]
  42240d:	icebp  
  42240e:	inc    edi
  42240f:	mov    DWORD PTR [ebx-0x257c3d4e],eax
  422415:	xor    eax,0x83ffffff
  42241a:	inc    ebp
  42241b:	inc    DWORD PTR ds:0xff00f3bf
  422421:	push   edx
  422422:	(bad)  
  422423:	jmp    DWORD PTR [ebp+edx*4+0x0]
  422427:	mov    DWORD PTR [eax],eax
  422429:	(bad)  
  42242a:	mov    eax,0x25191a00
  42242f:	dec    esp
  422431:	mov    ah,0x86
  422433:	add    BYTE PTR [edx-0x5d],bl
  422436:	add    BYTE PTR [eax],al
  422438:	add    BYTE PTR [ecx-0x7bb00e7],cl
  42243e:	outs   dx,DWORD PTR ds:[esi]
  42243f:	inc    DWORD PTR [eax]
  422441:	and    dl,BYTE PTR [ecx]
  422443:	call   FWORD PTR [edi-0x28]
  422446:	cmp    edi,0xffffffff
  422449:	inc    DWORD PTR [ebx-0x1]
  42244c:	cmp    bl,BYTE PTR [edx-0x1300006c]
  422452:	xchg   ebx,eax
  422453:	int3   
  422454:	inc    ecx
  422456:	add    DWORD PTR [eax],0xffffffcc
  422459:	int3   
  42245a:	(bad)  
  42245b:	mov    DWORD PTR [esi-0x4cee],eax
  422461:	mov    al,0x46
  422463:	int3   
  422464:	aaa    
  422465:	mov    bh,0xff
  422467:	dec    DWORD PTR [ecx-0x9ff5800]
  42246d:	nop
  42246e:	dec    esp
  42246f:	(bad)  
  422470:	inc    DWORD PTR [ecx]
  422472:	add    BYTE PTR es:[ecx+0x66],ah
  422476:	dec    esp
  422478:	(bad)  
  422479:	call   DWORD PTR [ebx-0x2097c00]
  42247f:	inc    DWORD PTR [eax]
  422481:	inc    esi
  422482:	pushf  
  422483:	add    BYTE PTR [esi-0xff7cc7],dh
  422489:	jmp    FWORD PTR [edx-0x1]
  42248c:	jbe    0x4224d8
  42248e:	inc    DWORD PTR [ebx-0xeb607d]
  422494:	fild   DWORD PTR [esi+0x0]
  422497:	add    bh,bh
  422499:	jmp    DWORD PTR [esi]
  42249b:	(bad)  
  42249c:	jns    0x4224aa
  42249e:	push   0xffffffff
  4224a0:	int3   
  4224a1:	nop
  4224a2:	call   0x89ff:0xcfd300
  4224a9:	add    BYTE PTR [ebp+0x3cf79cff],cl
  4224af:	inc    DWORD PTR [eax]
  4224b1:	or     dh,BYTE PTR [edi]
  4224b3:	add    BYTE PTR [edx-0x3300ff5d],bh
  4224b9:	jmp    DWORD PTR [edi-0x37533734]
  4224bf:	(bad)  
  4224c0:	call   DWORD PTR [eax]
  4224c2:	lds    eax,FWORD PTR [eax]
  4224c4:	retf   0x9c
  4224c7:	add    bh,bh
  4224c9:	add    BYTE PTR [edi-0x4e5eb37d],cl
  4224cf:	add    ah,cl
  4224d1:	mov    esp,0x8399ffc0
  4224d6:	add    bh,bh
  4224d8:	(bad)  
  4224d9:	call   FWORD PTR [edi]
  4224db:	add    BYTE PTR [esp+ebx*2+0x0],ah
  4224df:	int3   
  4224e0:	call   DWORD PTR [esi]
  4224e2:	clc    
  4224e3:	add    BYTE PTR [ecx+0x50],bl
  4224e6:	(bad)  
  4224e7:	inc    DWORD PTR [eax]
  4224e9:	jmp    FWORD PTR [edx]
  4224eb:	dec    ecx
  4224ed:	adc    BYTE PTR [esi],ah
  4224ef:	mov    DWORD PTR [ebx-0x230074b6],eax
  4224f5:	sahf   
  4224f6:	add    BYTE PTR [eax],al
  4224f8:	inc    DWORD PTR [eax]
  4224fa:	(bad)  
  4224fb:	call   ebx
  4224fd:	mov    edx,0xde000098
  422502:	retf   
  422503:	jmp    FWORD PTR [ebx+0x45]
  422506:	(bad)  
  422507:	dec    DWORD PTR [ecx-0x23002700]
  42250d:	jo     0x422541
  42250f:	add    BYTE PTR [eax],al
  422511:	push   0xffffffbe
  422513:	add    BYTE PTR [esi-0x45],ch
  422516:	(bad)  
  422517:	(bad)  
  422518:	(bad)  
  422519:	push   DWORD PTR [edi-0x2d095901]
  42251f:	add    BYTE PTR [eax],al
  422521:	aad    0x5b
  422523:	call   DWORD PTR [eax]
  422525:	mov    ah,0xff
  422527:	add    bh,bh
  422529:	xor    esi,0xffffff83
  42252c:	ja     0x42250a
  42252e:	dec    ecx
  42252f:	inc    DWORD PTR [ebx-0x2c7cb441]
  422535:	call   0xff35:0xcc
  42253c:	test   DWORD PTR [ebp-0x4a],edi
  42253f:	inc    DWORD PTR [eax]
  422541:	pop    esi
  422542:	ins    BYTE PTR es:[edi],dx
  422543:	int3   
  422544:	inc    esp
  422545:	in     eax,0x0
  422547:	inc    DWORD PTR [eax]
  422549:	int3   
  42254a:	and    DWORD PTR [ebx-0x7cb81caf],eax
  422550:	inc    DWORD PTR ds:0x9e0dff0e
  422556:	cmp    edi,0xffffff83
  422559:	push   DWORD PTR [edi]
  42255b:	add    DWORD PTR [edx-0x13],0x4b
  42255f:	dec    DWORD PTR [ecx+0x77006762]
  422565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422566:	add    BYTE PTR [eax],al
  422568:	inc    DWORD PTR [ebx-0x4f47ff02]
  42256e:	inc    DWORD PTR ds:[ebx+0x43ccc9f4]
  422575:	mov    al,ds:0xffff89ff
  42257a:	inc    edx
  42257b:	add    bl,al
  42257d:	sub    eax,0x7289ff1b
  422582:	jecxz  0x422583
  422584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422585:	iret   
  422586:	(bad)  
  422587:	(bad)  
  422588:	(bad)  
  422589:	jmp    DWORD PTR ds:0x4b6bd8ff
  42258f:	add    bh,bh
  422591:	stc    
  422592:	xor    bh,bh
  422594:	jb     0x42257e
  422596:	add    BYTE PTR [eax],al
  422598:	cmp    edi,0xffffffe9
  42259b:	mov    esi,ecx
  42259d:	sahf   
  42259e:	out    0xff,al
  4225a0:	inc    DWORD PTR [ebp-0x6757c8d]
  4225a6:	dec    esp
  4225a8:	mov    DWORD PTR [eax],eax
  4225aa:	pop    ebp
  4225ab:	inc    DWORD PTR [eax-0x8]
  4225ae:	inc    edi
  4225af:	add    BYTE PTR [ebx-0x7002397],al
  4225b5:	mov    edi,?
  4225b7:	mov    DWORD PTR [ecx-0x5a33b57d],ecx
  4225bd:	arpl   WORD PTR [eax],cx
  4225bf:	mov    edi,edi
  4225c1:	xor    ch,cl
  4225c3:	add    BYTE PTR [edi-0x2c],ah
  4225c6:	add    BYTE PTR [ebx-0x76a10001],al
  4225cc:	pusha  
  4225cd:	inc    edx
  4225ce:	pop    ebx
  4225cf:	(bad)  
  4225d0:	(bad)  
  4225d1:	cmp    DWORD PTR [eax],edi
  4225d3:	add    cl,ah
  4225d5:	push   es
  4225d6:	add    BYTE PTR [ebx-0x7cff01],al
  4225dc:	mov    DWORD PTR [ebx+0x4effff82],ebx
  4225e2:	push   0xd4cdff
  4225e7:	add    BYTE PTR [ebx-0x157c427d],al
  4225ed:	iret   
  4225ee:	push   eax
  4225ef:	(bad)  
  4225f0:	call   DWORD PTR [ebx+0x4ffcffd1]
  4225f6:	inc    DWORD PTR [eax]
  4225f8:	(bad)  
  4225f9:	inc    DWORD PTR [edx-0x5d5ca100]
  4225ff:	cmp    edi,0xffffffb3
  422602:	lea    eax,[eax]
  422604:	inc    BYTE PTR [edx]
  422606:	add    BYTE PTR [ecx-0x7c7fff01],cl
  42260c:	xchg   ebp,eax
  42260d:	iret   
  42260e:	jle    0x42260f
  422610:	add    BYTE PTR [ecx-0x2a],dh
  422613:	adc    ebp,0xffffffff
  422616:	add    bh,bh
  422618:	(bad)  
  422619:	call   DWORD PTR [ebp-0x34]
  42261c:	cmp    DWORD PTR [esi+0x0],edi
  42261f:	(bad)  
  422620:	call   FWORD PTR [ebp+0x1eb30054]
  422626:	inc    DWORD PTR [eax]
  422628:	int3   
  422629:	call   FWORD PTR [eax]
  42262b:	jmp    DWORD PTR [esi]
  42262d:	adc    BYTE PTR [edx],cl
  42262f:	add    DWORD PTR [ebx+0x3000efc9],0x6c
  422636:	(bad)  
  422637:	inc    DWORD PTR [eax]
  422639:	add    BYTE PTR [edx-0x7d],bl
  42263c:	int    0x8a
  42263e:	jns    0x422640
  422640:	and    DWORD PTR [ebp+0x1a72ff1e],0x0
  422647:	add    BYTE PTR [eax],al
  422649:	add    BYTE PTR [eax+eax*1-0xe29126],ch
  422650:	or     DWORD PTR [ecx],0xffffff94
  422653:	(bad)  
  422654:	fucomip st,st(1)
  422656:	(bad)  
  422657:	(bad)  
  422658:	(bad)  
  422659:	call   FWORD PTR [ebx]
  42265b:	add    BYTE PTR [ecx-0x48],ch
  42265e:	aas    
  42265f:	add    DWORD PTR [ebx+0x44ff94e1],0xffffffc0
  422666:	dec    esp
  422668:	add    BYTE PTR [eax],al
  42266a:	mov    al,0xff
  42266c:	pop    edi
  42266d:	in     al,0x24
  42266f:	inc    DWORD PTR [eax]
  422671:	aas    
  422672:	xor    eax,DWORD PTR [eax]
  422674:	hlt    
  422675:	xchg   ebp,eax
  422676:	add    bh,bh
  422678:	dec    esp
  42267a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42267b:	sub    esi,0x23
  42267e:	pushf  
  42267f:	(bad)  
  422680:	call   FWORD PTR [ebp+0x6336cc82]
  422686:	add    DWORD PTR [eax],0xffffffff
  422689:	add    BYTE PTR [ebx-0x1],ah
  42268c:	fwait
  42268d:	dec    ecx
  42268e:	jg     0x42268f
  422690:	add    BYTE PTR [ebx-0x3b],dl
  422693:	mov    DWORD PTR [ebx-0xe1],edi
  422699:	jmp    FWORD PTR [esi]
  42269b:	int3   
  42269c:	and    dh,BYTE PTR [edi+0x100cc1a]
  4226a2:	mov    bh,0xff
  4226a4:	fiadd  WORD PTR [ebp+0xff0083]
  4226aa:	sbb    bh,bh
  4226ac:	cwde   
  4226ad:	inc    edx
  4226ae:	test   al,0xff
  4226b0:	push   DWORD PTR [edi-0x21]
  4226b3:	add    BYTE PTR [ecx],bh
  4226b5:	dec    ebp
  4226b6:	mov    edi,edi
  4226b8:	add    DWORD PTR [ebx+0x4f0eff06],0xffffff9e
  4226bf:	dec    DWORD PTR [ecx+0x3cffed1f]
  4226c5:	inc    ebp
  4226c6:	add    bh,bh
  4226c8:	int3   
  4226c9:	mov    DWORD PTR [ebx-0x1],edi
  4226cc:	shl    BYTE PTR [ebx],1
  4226ce:	hlt    
  4226cf:	cmp    edi,0x10
  4226d2:	pop    es
  4226d3:	dec    DWORD PTR [ebx-0x6d]
  4226d6:	add    BYTE PTR [ecx-0x1bff01],cl
  4226dc:	stos   BYTE PTR es:[edi],al
  4226dd:	test   bl,bh
  4226df:	cmp    edi,0xffffffb7
  4226e2:	mov    esp,0x6651ff
  4226e7:	inc    DWORD PTR [eax]
  4226e9:	(bad)  
  4226ea:	clc    
  4226eb:	add    ah,al
  4226ed:	mov    bl,BYTE PTR [edx+0x0]
  4226f0:	dec    DWORD PTR [ecx+0x28140053]
  4226f6:	add    bh,bh
  4226f8:	int3   
  4226f9:	inc    DWORD PTR [ebx+0x0]
  4226fc:	add    DWORD PTR ds:0x8400893f,0xffffffab
  422703:	add    BYTE PTR ds:0xffcca1,dh
  422709:	inc    DWORD PTR [edi+edi*8-0x69]
  42270d:	mov    ecx,DWORD PTR [edi-0x1]
  422710:	add    BYTE PTR [ecx],dh
  422712:	pop    ebp
  422713:	(bad)  
  422714:	fst    QWORD PTR [ebx-0x1]
  422717:	(bad)  
  422718:	inc    DWORD PTR [ebx+0x2294ffc9]
  42271e:	cmp    edi,edi
  422720:	add    BYTE PTR [edx-0x1d33ff31],ah
  422726:	int3   
  422727:	add    bh,bh
  422729:	dec    DWORD PTR [ecx-0x77]
  42272c:	mov    BYTE PTR [esi-0x71],dl
  42272f:	mov    DWORD PTR [ecx-0x3400d371],ecx
  422735:	push   ecx
  422736:	add    DWORD PTR [ebx-0x2aff77],0x25
  42273d:	leave  
  42273e:	sub    al,0xcc
  422740:	jmp    DWORD PTR [esi+esi*2-0x1]
  422744:	jmp    0x4227b8
  422746:	inc    DWORD PTR [eax]
  422748:	inc    DWORD PTR [eax]
  42274a:	inc    edx
  42274b:	add    BYTE PTR [edi+ebp*1+0x75ffff26],cl
  422752:	scas   al,BYTE PTR es:[edi]
  422753:	jmp    FWORD PTR [edx-0x42]
  422756:	int3   
  422757:	(bad)  
  422758:	(bad)  
  422759:	inc    DWORD PTR [ecx-0x64ca607d]
  42275f:	inc    DWORD PTR [eax]
  422761:	pop    eax
  422762:	xchg   ecx,eax
  422763:	push   edi
  422765:	add    esp,ecx
  422767:	inc    DWORD PTR [eax]
  422769:	jmp    FWORD PTR [edx-0x34]
  42276c:	inc    esp
  42276d:	mov    ch,0xba
  42276f:	add    DWORD PTR [ebx-0x40066ad],0xffffff88
  422776:	add    bh,bh
  422778:	or     esp,0xffffffc9
  42277b:	add    DWORD PTR [ebp-0xb8f4],0x39
  422782:	xor    bh,bh
  422784:	pop    es
  422785:	int    0x83
  422787:	int3   
  422788:	mov    DWORD PTR [eax],eax
  42278a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278b:	dec    DWORD PTR [edx+ecx*2]
  42278e:	inc    esi
  42278f:	add    BYTE PTR [ecx-0x350006da],cl
  422795:	xchg   ah,cl
  422797:	inc    DWORD PTR [eax]
  422799:	int3   
  42279a:	pop    ebp
  42279b:	add    BYTE PTR [edi+ebp*1],dl
  42279e:	sub    al,BYTE PTR [eax]
  4227a0:	add    BYTE PTR [esi-0x31],cl
  4227a3:	(bad)  
  4227a4:	fisttp DWORD PTR [ebx+0x0]
  4227a7:	mov    DWORD PTR [ebx-0x7b76457d],eax
  4227ad:	xor    al,0x2a
  4227af:	(bad)  
  4227b0:	call   DWORD PTR [ebp-0x3d73ff0b]
  4227b6:	inc    DWORD PTR [eax]
  4227b8:	(bad)  
  4227b9:	dec    esp
  4227bb:	int3   
  4227bc:	mov    DWORD PTR [esi-0x2b],ebx
  4227bf:	cmp    edi,0x28
  4227c2:	push   0xffffffff
  4227c4:	data16 into 
  4227c6:	add    BYTE PTR [eax],al
  4227c8:	(bad)  
  4227c9:	push   DWORD PTR [ecx-0x1]
  4227cc:	mov    cl,0xf2
  4227ce:	sub    al,0x83
  4227d0:	jmp    FWORD PTR [ebx+0x18]
  4227d3:	mov    DWORD PTR [ecx+0x830035],esi
  4227d9:	add    ch,ah
  4227db:	push   DWORD PTR [ebx-0x20]
  4227de:	loope  0x422763
  4227e0:	inc    DWORD PTR [esi+0x28]
  4227e3:	add    BYTE PTR ds:0xff89cce9,cl
  4227e9:	add    BYTE PTR [eax+eax*1-0x4c],dh
  4227ed:	dec    edi
  4227ee:	jmp    0x78e127bf
  4227f3:	add    BYTE PTR [esi-0x7c339d],dl
  4227f9:	(bad)  
  4227fa:	in     al,dx
  4227fb:	adc    DWORD PTR [esi-0xe8fa],0xffffffac
  422802:	idiv   edi
  422804:	xor    edi,ecx
  422806:	inc    DWORD PTR [ebx+0xb38300]
  42280c:	cmp    eax,DWORD PTR [edx+0x75]
  42280f:	inc    DWORD PTR [eax]
  422811:	xor    dh,ch
  422813:	mov    esi,edi
  422815:	jmp    0x422817
  422817:	add    BYTE PTR [ebx+0x7c0062cc],al
  42281d:	call   0xdc4128ea
  422822:	pop    ebp
  422823:	inc    DWORD PTR [ebx+ebp*8+0x0]
  422827:	inc    DWORD PTR [eax]
  422829:	add    BYTE PTR [edi+edi*8-0x3bcf04],cl
  422830:	or     DWORD PTR [edi+ebp*1-0x7d],0x65
  422835:	cmc    
  422836:	add    bh,bh
  422838:	cmp    edi,0x36
  42283b:	jmp    FWORD PTR [eax+eiz*2]
  42283e:	out    dx,eax
  42283f:	add    ah,cl
  422841:	dec    ebx
  422842:	mov    di,si
  422845:	das    
  422846:	(bad)  
  422847:	inc    DWORD PTR [ebx+0x4affa9ff]
  42284d:	int3   
  42284e:	(bad)  
  422851:	loopne 0x4228a4
  422853:	jmp    FWORD PTR [ebp-0x33ff002b]
  422859:	add    al,bl
  42285b:	add    BYTE PTR [ebp-0x40],ch
  42285e:	jbe    0x42285f
  422860:	call   DWORD PTR [edi]
  422862:	sub    al,0x83
  422864:	outs   dx,DWORD PTR ds:[esi]
  422865:	cmp    al,BYTE PTR [eax]
  422867:	inc    DWORD PTR [eax]
  422869:	add    BYTE PTR [edi],dh
  42286b:	int3   
  42286c:	cmp    ch,BYTE PTR [edx]
  42286e:	call   0x3ff:0x6a900ff
  422875:	mov    edi,?
  422877:	add    BYTE PTR [ebx-0x7576e001],al
  42287d:	add    ch,ah
  42287f:	inc    DWORD PTR [eax]
  422881:	xlat   BYTE PTR ds:[ebx]
  422882:	jge    0x422884
  422884:	test   edi,ecx
  422886:	dec    DWORD PTR [ecx+0x40ff00]
  42288c:	ret    
  42288d:	push   es
  42288e:	cmp    al,BYTE PTR [eax]
  422890:	add    BYTE PTR [edx+edi*2-0x76fcf501],ah
  422897:	dec    esp
  422899:	and    DWORD PTR [ebp-0x1],0xfffffffe
  42289d:	inc    eax
  42289e:	lds    eax,FWORD PTR [eax]
  4228a0:	(bad)  
  4228a1:	sti    
  4228a2:	ja     0x4228a3
  4228a4:	ret    0xcc6b
  4228a7:	add    bh,bh
  4228a9:	add    BYTE PTR [ebp+0x64c3e2ff],al
  4228af:	add    DWORD PTR [eax],0xffffffc1
  4228b2:	inc    edx
  4228b3:	mov    DWORD PTR [ebp-0x5b],edx
  4228b9:	add    BYTE PTR [eax],bh
  4228bb:	jmp    FWORD PTR [edx]
  4228bd:	jne    0x422900
  4228bf:	cmp    edi,0x7
  4228c2:	push   edx
  4228c3:	jmp    DWORD PTR [edx+ebp*8-0x7d]
  4228c7:	add    bh,bh
  4228c9:	jmp    DWORD PTR [eax]
  4228cb:	add    BYTE PTR [edi+0x61],dh
  4228ce:	and    eax,0xdb54ff00
  4228d3:	jmp    DWORD PTR [ecx]
  4228d5:	inc    eax
  4228d6:	add    BYTE PTR [ecx-0x480100],cl
  4228dc:	push   es
  4228dd:	pop    es
  4228de:	das    
  4228df:	int3   
  4228e0:	add    dh,al
  4228e2:	lods   eax,DWORD PTR ds:[esi]
  4228e3:	mov    DWORD PTR [edx-0x18],ebp
  4228e9:	jmp    FWORD PTR [ecx-0x1]
  4228ec:	xchg   ecx,eax
  4228ed:	mov    dh,0x33
  4228ef:	inc    DWORD PTR [eax]
  4228f1:	cmp    ebx,DWORD PTR [edi-0x975c34]
  4228f7:	mov    edi,edi
  4228f9:	mov    DWORD PTR [ecx+ecx*4+0x58f0c9],eax
  422900:	mov    edx,ebp
  422902:	cwde   
  422903:	add    BYTE PTR [esi+eiz*2-0xff01],bl
  42290a:	(bad)  
  42290b:	push   DWORD PTR [edx-0x9]
  42290e:	test   BYTE PTR [eax],al
  422910:	add    BYTE PTR [ebx+0x7d12ff0b],bl
  422916:	add    BYTE PTR [ebx-0x33e5007d],al
  42291c:	add    al,0x1e
  42291e:	test   DWORD PTR [ebx-0x7c337201],eax
  422924:	popf   
  422925:	sub    eax,DWORD PTR [eax]
  422927:	(bad)  
  422928:	inc    DWORD PTR [eax]
  42292a:	cmc    
  42292b:	(bad)  
  42292c:	mov    ebp,0xcc83297f
  422931:	clc    
  422932:	push   ss
  422933:	int3   
  422934:	mov    fs,eax
  422936:	add    ah,cl
  422938:	int3   
  422939:	mov    DWORD PTR [edx+0x3b7072ff],edi
  42293f:	or     esp,0xffffffc2
  422942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422943:	push   ecx
  422945:	or     DWORD PTR [eax],eax
  422947:	inc    DWORD PTR [eax]
  422949:	jmp    FWORD PTR [edi]
  42294b:	add    BYTE PTR [eax+0x66],al
  42294e:	inc    edi
  42294f:	add    bh,bh
  422951:	cmp    eax,0xb36dff71
  422956:	add    BYTE PTR [eax],al
  422958:	(bad)  
  422959:	push   DWORD PTR [ebx+0x62aad789]
  42295f:	add    BYTE PTR [eax],al
  422961:	js     0x422959
  422963:	add    BYTE PTR [edi],bl
  422965:	scas   al,BYTE PTR es:[edi]
  422966:	(bad)  
  422967:	(bad)  
  422968:	(bad)  
  422969:	inc    eax
  42296b:	add    BYTE PTR [ecx-0x7c76eb61],al
  422971:	sbb    cl,BYTE PTR [ecx]
  422973:	mov    DWORD PTR [ecx-0x76767689],edi
  422979:	int3   
  42297a:	cmp    edi,0x833a6fb0
  422980:	and    DWORD PTR [eax],0xffffffac
  422983:	int3   
  422984:	xchg   bh,cl
  422986:	add    bh,bh
  422988:	add    BYTE PTR [eax],al
  42298a:	sub    edi,edi
  42298c:	mov    ch,0xc
  42298e:	and    ecx,esp
  422990:	add    BYTE PTR [edi+0x75],al
  422993:	xor    ebp,0xfffffff7
  422996:	mov    edi,edi
  422998:	(bad)  
  422999:	jmp    DWORD PTR [ecx]
  42299b:	call   DWORD PTR [edx-0xff03e0]
  4229a1:	dec    esi
  4229a2:	push   0xa4b289
  4229a7:	(bad)  
  4229a8:	inc    DWORD PTR [ebx+0x7338cc2c]
  4229ae:	inc    ecx
  4229af:	cmp    edi,0xffffffa4
  4229b2:	mov    bh,0xff
  4229b4:	mov    al,ds:0xffff85
  4229b9:	call   FWORD PTR [ebx-0x7d]
  4229bc:	js     0x4229d3
  4229be:	add    DWORD PTR [eax],eax
  4229c0:	int3   
  4229c1:	add    al,BYTE PTR [eax-0x1]
  4229c4:	dec    ecx
  4229c5:	cmc    
  4229c6:	int3   
  4229c7:	int3   
  4229c8:	inc    DWORD PTR [ebx+0x6917cc30]
  4229ce:	dec    ebp
  4229cf:	int3   
  4229d0:	jmp    edx
  4229d2:	ins    DWORD PTR es:[edi],dx
  4229d3:	inc    DWORD PTR [edx-0x53]
  4229d6:	(bad)  
  4229d7:	inc    DWORD PTR [ebx+0x43ffbb83]
  4229dd:	mov    dl,0xd4
  4229df:	dec    esp
  4229e1:	outs   dx,DWORD PTR ds:[esi]
  4229e2:	fld    DWORD PTR [eax]
  4229e4:	les    edi,FWORD PTR [eax]
  4229e6:	dec    DWORD PTR [ecx+0xc5ff00]
  4229ec:	or     cl,BYTE PTR [ecx-0x73ff7cd1]
  4229f2:	push   cs
  4229f3:	int3   
  4229f4:	mov    esp,0xff894e
  4229f9:	jmp    FWORD PTR [edx-0x1c25b534]
  4229ff:	dec    esp
  422a01:	out    0x96,al
  422a03:	(bad)  
  422a04:	cld    
  422a05:	mov    edx,0xffffff00
  422a0a:	jno    0x422a0b
  422a0c:	cmp    edi,ebx
  422a0e:	and    cl,ah
  422a10:	add    BYTE PTR [edi+0x13],dh
  422a13:	add    BYTE PTR [edx],cl
  422a15:	cmp    DWORD PTR [ebx-0x1c00ff7d],eax
  422a1b:	mov    DWORD PTR [ebx+0x6b],ebx
  422a1e:	mov    WORD PTR [ebx-0x45fc00],es
  422a24:	cs sar edi,0xff
  422a28:	cmp    edi,0x65
  422a2b:	int3   
  422a2c:	and    al,0xb6
  422a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a2f:	inc    DWORD PTR [ebx-0x7d00010f]
  422a35:	mov    ah,0x83
  422a37:	add    bh,bh
  422a39:	inc    DWORD PTR [edi-0x1]
  422a3c:	out    0xc1,al
  422a3e:	jns    0x422a0c
  422a40:	(bad)  
  422a41:	aas    
  422a42:	sar    edi,0xf3
  422a45:	test   eax,0x83ffcc
  422a4a:	(bad)  
  422a4b:	call   DWORD PTR [ebp+0x19]
  422a4e:	int    0xff
  422a50:	dec    DWORD PTR [edx+0x10a00074]
  422a56:	(bad)  
  422a57:	dec    DWORD PTR [ecx+0x7600a2ff]
  422a5d:	dec    ecx
  422a5e:	dec    DWORD PTR cs:[ecx-0x657c421b]
  422a65:	loopne 0x422a66
  422a67:	(bad)  
  422a68:	inc    DWORD PTR [eax]
  422a6a:	jmp    0x939f373b
  422a6f:	inc    DWORD PTR [eax]
  422a71:	cmp    esp,DWORD PTR [edi]
  422a73:	add    BYTE PTR [esi+edi*8],ah
  422a76:	cmp    edi,0xffffffff
  422a79:	dec    DWORD PTR [eax+0x6962f100]
  422a7f:	cmp    edi,0xffffffc5
  422a82:	call   0x5aef53
  422a87:	int3   
  422a88:	add    DWORD PTR [eax],0xffffff9b
  422a8b:	(bad)  
  422a8c:	fcom   QWORD PTR [ecx+0x7dffff31]
  422a92:	xor    al,BYTE PTR [ebx-0xdd0c]
  422a98:	or     esp,0x21
  422a9b:	push   ebp
  422a9d:	adc    DWORD PTR [edx],ebx
  422a9f:	inc    DWORD PTR [eax]
  422aa1:	loopne 0x422aaa
  422aa3:	call   FWORD PTR [ebx-0xff0006]
  422aa9:	int3   
  422aaa:	and    bh,bh
  422aac:	les    ecx,FWORD PTR [ebp+0x3e83898f]
  422ab2:	pop    eax
  422ab3:	(bad)  
  422ab4:	clc    
  422ab5:	retf   
  422ab6:	(bad)  
  422ab7:	(bad)  
  422ab8:	inc    DWORD PTR [eax]
  422aba:	inc    esp
  422abb:	push   DWORD PTR [ecx+0x5b]
  422abe:	push   es
  422abf:	add    bh,bh
  422ac1:	jmp    0xd6ba2ae0
  422ac6:	cmp    edi,0xffffff83
  422ac9:	jmp    FWORD PTR [ebp-0x1]
  422acc:	xchg   ebp,eax
  422acd:	js     0x422aaf
  422acf:	add    bh,bh
  422ad1:	jae    0x422b4c
  422ad3:	add    BYTE PTR [ebp-0x31],bl
  422ad6:	int3   
  422ad7:	inc    DWORD PTR [eax]
  422ad9:	int3   
  422ada:	stos   DWORD PTR es:[edi],eax
  422adb:	add    ch,bh
  422add:	mov    ecx,0xe1ff8335
  422ae2:	jge    0x422ae3
  422ae4:	mov    es,WORD PTR [edi-0x1]
  422ae7:	add    BYTE PTR [ebx-0x717c3201],al
  422aed:	mov    dh,0xb
  422aef:	(bad)  
  422af0:	push   DWORD PTR [edi+0x534100ef]
  422af6:	add    bh,bh
  422af8:	or     esp,0xffffff91
  422afb:	call   DWORD PTR [esi+0x89483d]
  422b01:	push   ebp
  422b02:	and    DWORD PTR [ebx-0x76f958],eax
  422b08:	mov    DWORD PTR [eax],eax
  422b0a:	mov    BYTE PTR [eax],al
  422b0c:	xchg   bl,dh
  422b0e:	in     eax,0xff
  422b10:	(bad)  
  422b11:	jmp    0x777e2a35
  422b16:	add    BYTE PTR [eax],al
  422b18:	inc    DWORD PTR [eax]
  422b1a:	iret   
  422b1b:	dec    DWORD PTR [edi]
  422b1d:	out    0xd5,eax
  422b1f:	(bad)  
  422b20:	push   esp
  422b22:	(bad)  
  422b24:	pop    edi
  422b25:	jo     0x422b26
  422b27:	add    DWORD PTR [ebx-0x25ff9a34],0xffffffe7
  422b2e:	sub    BYTE PTR [eax],al
  422b30:	push   DWORD PTR [ebx+0x77]
  422b33:	mov    DWORD PTR [edi+0x2d],edi
  422b36:	(bad)  
  422b37:	inc    DWORD PTR [eax]
  422b39:	dec    DWORD PTR [ebp-0x6dc3bf01]
  422b3f:	add    bh,bh
  422b41:	(bad)  
  422b42:	jo     0x422b44
  422b44:	push   esi
  422b45:	enter  0xff,0xff
  422b49:	int3   
  422b4a:	push   ebx
  422b4b:	add    BYTE PTR [edi],bl
  422b4d:	sahf   
  422b4e:	(bad)  
  422b4f:	(bad)  
  422b50:	(bad)  
  422b51:	out    dx,eax
  422b52:	xchg   ecx,eax
  422b53:	(bad)  
  422b54:	and    DWORD PTR ds:[ebx+0x29ff0000],eax
  422b5b:	add    BYTE PTR [ebx+0x832e2a],al
  422b61:	jle    0x422b87
  422b63:	push   DWORD PTR [ebp+0xcc98]
  422b69:	call   FWORD PTR [ecx]
  422b6b:	add    BYTE PTR [ecx+0x831f50],al
  422b71:	jmp    0xffff:0xf4130097
  422b78:	(bad)  
  422b79:	(bad)  
  422b7a:	jg     0x422b7b
  422b7c:	iret   
  422b7d:	fs pop eax
  422b7f:	(bad)  
  422b80:	push   DWORD PTR [eax-0x12ab00d0]
  422b86:	(bad)  
  422b87:	inc    DWORD PTR [ebx+0x11ffbe00]
  422b8d:	test   ebx,ecx
  422b8f:	inc    DWORD PTR [ebx+0x1cff13b2]
  422b95:	loopne 0x422b96
  422b97:	inc    DWORD PTR [ebx+0x6c00a6ff]
  422b9d:	sar    DWORD PTR [ecx+0x0],1
  422ba0:	and    DWORD PTR [ebp+ecx*8-0x1],0xffffff96
  422ba5:	gs dec esp
  422ba8:	(bad)  
  422ba9:	jmp    FWORD PTR [ebp+0x0]
  422bac:	pop    ecx
  422bad:	(bad)  ds:0xc9f50000
  422bb3:	inc    DWORD PTR [ebx]
  422bb5:	dec    eax
  422bb6:	(bad)  
  422bb7:	inc    DWORD PTR [ebx+0x6a832f83]
  422bbd:	adc    eax,0x3400833c
  422bc2:	ret    0x9b83
  422bc5:	pop    ebp
  422bc6:	inc    DWORD PTR [ebx-0x900100]
  422bcc:	pop    edx
  422bcd:	loopne 0x422ba0
  422bcf:	int3   
  422bd0:	(bad)  
  422bd1:	out    dx,eax
  422bd2:	retf   0x9589
  422bd5:	enter  0x83,0x83
  422bd9:	sbb    DWORD PTR [edi-0x1],0xfffffff7
  422bdd:	(bad)  
  422bde:	xor    BYTE PTR [ebx-0xa00d7d],al
  422be4:	fisttp QWORD PTR ds:0xff00ff00
  422bea:	mov    ecx,0x738aa9ff
  422bef:	add    bh,bh
  422bf1:	outs   dx,BYTE PTR ds:[esi]
  422bf2:	adc    bh,bh
  422bf4:	push   eax
  422bf5:	or     eax,DWORD PTR [ebx-0x71ffff01]
  422bfb:	push   DWORD PTR [esi+0x23]
  422bfe:	xchg   DWORD PTR [eax],eax
  422c00:	(bad)  
  422c01:	jg     0x422c82
  422c03:	push   ebp
  422c05:	test   al,0xcc
  422c07:	dec    esp
  422c09:	int3   
  422c0a:	inc    ebx
  422c0b:	xor    DWORD PTR [edx],0xfffffff7
  422c0e:	and    al,BYTE PTR [eax]
  422c10:	dec    ebx
  422c12:	mov    bh,0xff
  422c14:	jmp    0x422bf1
  422c16:	inc    DWORD PTR [eax]
  422c18:	add    bh,bh
  422c1a:	jl     0x422c1b
  422c1c:	pop    ebp
  422c1d:	cs sti 
  422c1f:	(bad)  
  422c20:	jmp    ebx
  422c22:	retf   0xf6ff
  422c25:	mov    edx,0xffff0000
  422c2a:	and    edi,edi
  422c2c:	(bad)  
  422c2d:	aam    0x5f
  422c2f:	inc    DWORD PTR [eax]
  422c31:	mov    ds:0xdf14006b,eax
  422c36:	add    ah,cl
  422c38:	add    BYTE PTR [eax],al
  422c3a:	sbb    edi,edi
  422c3c:	aaa    
  422c3d:	into   
  422c3e:	fdivp  st(7),st
  422c40:	(bad)  
  422c41:	in     al,dx
  422c42:	(bad)  
  422c43:	jmp    DWORD PTR [edi-0xe]
  422c49:	sub    DWORD PTR [ecx-0x34],0x35
  422c4d:	mov    ds:0x53ffff69,al
  422c52:	loopne 0x422bd7
  422c54:	in     eax,0x15
  422c56:	inc    DWORD PTR [eax]
  422c58:	inc    DWORD PTR [eax]
  422c5a:	add    esp,ecx
  422c5c:	pop    edx
  422c5d:	lods   al,BYTE PTR ds:[esi]
  422c5e:	outs   dx,DWORD PTR ds:[esi]
  422c5f:	(bad)  
  422c60:	(bad)  
  422c61:	mov    ebx,0xad3bff37
  422c66:	add    BYTE PTR [eax],al
  422c68:	dec    DWORD PTR [ecx-0x38e76cd]
  422c6e:	or     bh,bh
  422c70:	sbb    edi,0xffffffbc
  422c73:	jmp    edi
  422c75:	xchg   esi,eax
  422c76:	inc    DWORD PTR [eax]
  422c78:	dec    esp
  422c7a:	mov    al,ds:0x99eecbcc
  422c7f:	dec    DWORD PTR [ecx-0xb00dfc6]
  422c85:	in     eax,dx
  422c86:	inc    DWORD PTR [eax]
  422c88:	add    bh,bh
  422c8a:	fld    QWORD PTR [eax]
  422c8c:	push   DWORD PTR [ebx]
  422c8e:	out    0x0,eax
  422c90:	add    BYTE PTR [ebx+edi*1],dh
  422c93:	add    BYTE PTR [esi-0x3300e4],bl
  422c99:	add    BYTE PTR [edx-0x526b1101],al
  422c9f:	add    bh,bh
  422ca1:	xor    esi,DWORD PTR [ebx]
  422ca3:	mov    edi,ebp
  422ca5:	inc    edi
  422ca6:	cmp    edi,0x0
  422ca9:	int3   
  422caa:	mov    eax,ds:0x1b5f20ff
  422caf:	add    DWORD PTR [ebx+0x63ff9e47],0x78
  422cb6:	dec    esp
  422cb8:	(bad)  
  422cb9:	dec    DWORD PTR [esi+0x46f74700]
  422cbf:	(bad)  
  422cc0:	dec    DWORD PTR [edi]
  422cc2:	rol    BYTE PTR [eax],1
  422cc4:	test   DWORD PTR [edi],eax
  422cc6:	inc    DWORD PTR [eax]
  422cc8:	add    DWORD PTR [eax],0x2c
  422ccb:	(bad)  
  422ccc:	mov    ecx,0xff9f12
  422cd1:	inc    esp
  422cd2:	in     eax,dx
  422cd3:	mov    DWORD PTR [edi-0x7c7611],esi
  422cd9:	int3   
  422cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cdb:	jmp    FWORD PTR [eax-0x76ff4cc1]
  422ce1:	inc    eax
  422ce2:	add    al,BYTE PTR [eax]
  422ce4:	push   eax
  422ce5:	lahf   
  422ce6:	inc    DWORD PTR [eax]
  422ce8:	add    bh,bh
  422cea:	inc    ecx
  422ceb:	call   DWORD PTR [edx+0xff76a0]
  422cf1:	(bad)  
  422cf3:	jmp    DWORD PTR [edi]
  422cf5:	sub    ecx,DWORD PTR [ecx-0x33000100]
  422cfb:	or     DWORD PTR [ebx+0x70],0xffffffeb
  422cff:	inc    DWORD PTR [eax]
  422d01:	pop    ds
  422d02:	sbb    cl,BYTE PTR [ecx-0xff2414]
  422d08:	add    bh,bh
  422d0a:	fdivr  st,st(7)
  422d0c:	xor    DWORD PTR [edx-0x5200001d],esp
  422d12:	hlt    
  422d13:	(bad)  
  422d14:	(bad)  
  422d16:	int3   
  422d17:	add    BYTE PTR [eax],al
  422d19:	jmp    esi
  422d1b:	add    BYTE PTR [esi],dh
  422d1d:	push   eax
  422d1e:	cdq    
  422d1f:	cmp    edi,0x56
  422d22:	jle    0x422d23
  422d24:	and    DWORD PTR [edx],ecx
  422d26:	add    DWORD PTR [eax],0xffffffff
  422d29:	and    DWORD PTR [eax+0x1f8de900],0xffffffff
  422d30:	add    BYTE PTR [ecx],ah
  422d32:	xchg   ebp,eax
  422d33:	(bad)  
  422d34:	mov    edi,0xffffff64
  422d39:	add    BYTE PTR [eax+eax*1],dh
  422d3c:	push   0x83ffe819
  422d41:	(bad)  
  422d42:	fiadd  WORD PTR [ebx-0x768928]
  422d48:	add    BYTE PTR [eax],al
  422d4a:	inc    DWORD PTR [eax]
  422d4c:	es into 
  422d4e:	inc    ebp
  422d4f:	(bad)  
  422d50:	call   DWORD PTR [ecx+0x140d83d1]
  422d56:	dec    esp
  422d58:	int3   
  422d59:	jmp    DWORD PTR [ebx]
  422d5b:	mov    ecx,edx
  422d5d:	repnz mov WORD PTR [ebx-0x7c0a937d],es
  422d64:	gs push es
  422d66:	add    DWORD PTR [eax],0x0
  422d69:	add    BYTE PTR [edi+0xc5c9fff],ch
  422d6f:	mov    edi,edi
  422d71:	xchg   DWORD PTR [ebp-0x7d],esp
  422d74:	nop
  422d75:	std    
  422d76:	mov    esp,ecx
  422d78:	mov    DWORD PTR [ecx-0x659200bb],ecx
  422d7e:	xchg   esp,eax
  422d7f:	inc    DWORD PTR [ebx-0x717621f0]
  422d85:	xchg   DWORD PTR [eax],eax
  422d87:	dec    esp
  422d89:	and    DWORD PTR [ecx+0x0],0x55
  422d8d:	pop    edi
  422d8e:	imul   edi,edi,0xffffffff
  422d91:	xor    DWORD PTR [edi+edi*8],edi
  422d94:	jnp    0x422d3b
  422d96:	inc    DWORD PTR [eax]
  422d98:	add    BYTE PTR [eax],al
  422d9a:	popf   
  422d9b:	add    BYTE PTR [ecx-0x16],ah
  422d9e:	dec    ebp
  422d9f:	inc    DWORD PTR [ebx-0x1900a5c0]
  422da5:	mov    BYTE PTR [eax],al
  422da7:	dec    DWORD PTR [ecx-0x30006b00]
  422dad:	cmp    BYTE PTR [ecx],al
  422daf:	mov    edi,edi
  422db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422db2:	call   0xffca20b6
  422db7:	mov    DWORD PTR [ebx-0x2833c834],eax
  422dbd:	addr16 adc bh,bh
  422dc0:	add    BYTE PTR [eax+0x1d],dl
  422dc3:	cmp    DWORD PTR [eax],0x71
  422dc6:	add    bh,bh
  422dc8:	int3   
  422dc9:	(bad)  
  422dca:	jmp    0xff:0x434898ff
  422dd1:	inc    esi
  422dd2:	icebp  
  422dd3:	add    BYTE PTR [ebx],ah
  422dd5:	or     al,0xcc
  422dd7:	dec    DWORD PTR [ecx-0x20006601]
  422ddd:	adc    BYTE PTR [ebx+eax*4-0xeab377],bl
  422de4:	jbe    0x422e01
  422de6:	add    bh,bh
  422de8:	add    BYTE PTR [eax],al
  422dea:	dec    ebx
  422deb:	int3   
  422dec:	xchg   edx,eax
  422ded:	sbb    bh,BYTE PTR [esi-0x1]
  422df0:	inc    DWORD PTR [esi]
  422df2:	fisttp DWORD PTR [ecx-0xda7f]
  422df8:	add    bh,bh
  422dfa:	xor    DWORD PTR [ebx-0x1f9916],eax
  422e00:	push   DWORD PTR [ebx]
  422e02:	pop    eax
  422e03:	jmp    FWORD PTR [edi]
  422e05:	sahf   
  422e06:	dec    DWORD PTR [ecx-0xdff01]
  422e0c:	(bad)  
  422e0d:	mov    edx,0x71ff0046
  422e12:	aaa    
  422e13:	call   eax
  422e15:	cmp    DWORD PTR [eax],eax
  422e17:	inc    DWORD PTR [eax]
  422e19:	jmp    DWORD PTR [edi-0x1]
  422e1c:	xor    eax,0x8900556b
  422e21:	xor    dh,BYTE PTR [ebx]
  422e23:	call   esi
  422e25:	mov    dl,0xff
  422e27:	add    BYTE PTR [eax],al
  422e29:	mov    DWORD PTR [edi],esi
  422e2b:	dec    DWORD PTR [edx-0xfd5e]
  422e31:	(bad)  
  422e32:	fiadd  WORD PTR [eax]
  422e34:	in     eax,dx
  422e35:	sti    
  422e36:	mov    edi,edi
  422e38:	add    BYTE PTR [eax],al
  422e3a:	xor    BYTE PTR [ebx-0x7696969f],al
  422e40:	dec    DWORD PTR [ecx+0x380f8390]
  422e46:	dec    esp
  422e48:	cmp    edi,0x3a
  422e4b:	mov    DWORD PTR [ebx+0x55],esp
  422e4e:	sub    edi,edi
  422e50:	call   FWORD PTR [ebx+0x69]
  422e53:	inc    DWORD PTR [edx]
  422e55:	inc    DWORD PTR [eax]
  422e57:	(bad)  
  422e58:	(bad)  
  422e59:	dec    ebp
  422e5b:	(bad)  
  422e5c:	fidiv  DWORD PTR [ebx]
  422e5e:	mov    eax,DWORD PTR [eax]
  422e60:	adc    DWORD PTR [eax-0x1978000d],0xffffffff
  422e67:	add    bh,bh
  422e69:	mov    DWORD PTR [ecx+0x628d95ff],esi
  422e6f:	add    bh,bh
  422e71:	inc    esp
  422e72:	adc    BYTE PTR [eax],al
  422e74:	pop    edi
  422e75:	aaa    
  422e76:	add    BYTE PTR [ecx+0x7fffff],cl
  422e7c:	les    ebx,FWORD PTR [ebx-0x4c760065]
  422e82:	sahf   
  422e83:	push   DWORD PTR [eax+edi*1+0xffffff]
  422e8a:	ja     0x422e8c
  422e8c:	outs   dx,BYTE PTR ds:[esi]
  422e8d:	ins    DWORD PTR es:[edi],dx
  422e8e:	push   cs
  422e8f:	add    bh,bh
  422e91:	pop    esi
  422e92:	cdq    
  422e93:	jmp    DWORD PTR [esi]
  422e95:	inc    DWORD PTR fs:[eax]
  422e98:	add    bh,bh
  422e9a:	repnz jmp FWORD PTR [esi-0x7c2d98]
  422ea1:	test   DWORD PTR [edx-0x7c25dc01],ebp
  422ea7:	(bad)  
  422ea8:	dec    esp
  422eaa:	push   0xd2219889
  422eaf:	inc    DWORD PTR [ebx+0x3300023e]
  422eb5:	lds    ecx,FWORD PTR [ecx-0x3c7c0100]
  422ebb:	(bad)  
  422ebc:	cmp    bl,dl
  422ebe:	in     al,dx
  422ebf:	add    BYTE PTR [eax],al
  422ec1:	hlt    
  422ec2:	jb     0x422ec4
  422ec4:	imul   ebx,DWORD PTR [edi+edi*8+0x12ffff83],0x6d2544cc
  422ecf:	dec    DWORD PTR [ecx-0x497cc8bc]
  422ed5:	mov    cl,0x83
  422ed7:	inc    DWORD PTR [eax]
  422ed9:	int3   
  422eda:	jg     0x422edb
  422edc:	and    DWORD PTR [ecx],0x2183ff4d
  422ee2:	adc    al,0x83
  422ee4:	pop    ecx
  422ee5:	jbe    0x422eb3
  422ee7:	inc    DWORD PTR [eax]
  422ee9:	add    dl,bl
  422eeb:	dec    DWORD PTR [ecx+0xd5b5]
  422ef1:	scas   al,BYTE PTR es:[edi]
  422ef2:	fild   WORD PTR [eax]
  422ef4:	push   0xff00cccb
  422ef9:	add    BYTE PTR [ecx-0x34],dh
  422efc:	sub    al,0x25
  422efe:	sbb    al,0x0
  422f00:	sub    DWORD PTR [ebx],0xffffff95
  422f03:	mov    DWORD PTR [edx+0xffff0a],ecx
  422f09:	call   ebp
  422f0b:	cmp    DWORD PTR [eax+0x3b],0xffffffff
  422f0f:	add    ah,cl
  422f11:	outs   dx,DWORD PTR ds:[esi]
  422f12:	das    
  422f13:	int3   
  422f14:	in     al,0x4e
  422f16:	(bad)  
  422f17:	(bad)  
  422f18:	dec    esp
  422f1a:	dec    esp
  422f1c:	add    BYTE PTR [ebx-0x765a7c01],al
  422f22:	inc    DWORD PTR [ebx-0x8347]
  422f28:	add    bh,bh
  422f2a:	fdivp  st(7),st
  422f2c:	mov    dl,0xab
  422f2e:	int    0x21
  422f30:	and    edi,edi
  422f32:	(bad)  
  422f33:	(bad)  
  422f34:	jns    0x422f66
  422f36:	inc    DWORD PTR [eax]
  422f38:	add    BYTE PTR [ebx-0x6a1a00a1],al
  422f3e:	mov    ebx,0xcccce64f
  422f43:	call   DWORD PTR [edi-0x32]
  422f46:	inc    DWORD PTR [ebx+0xe8ffff]
  422f4c:	jne    0x422ef2
  422f4e:	xchg   ch,ah
  422f50:	rol    BYTE PTR [eax],1
  422f52:	add    DWORD PTR [eax],0x0
  422f55:	leave  
  422f56:	(bad)  
  422f57:	(bad)  
  422f58:	(bad)  
  422f59:	(bad)  
  422f5a:	inc    BYTE PTR [ebx+0x68ec1955]
  422f60:	xlat   BYTE PTR ds:[ebx]
  422f61:	cmp    edi,0xffffffff
  422f64:	push   edi
  422f65:	cmp    al,0xff
  422f67:	add    BYTE PTR [ebx+0x2890d00],al
  422f6d:	call   0xff00:0xff31bfaf
  422f74:	shl    DWORD PTR [edi-0x7d],0x83
  422f78:	mov    DWORD PTR [eax],eax
  422f7a:	mov    ebx,0x7015b6ff
  422f7f:	stos   DWORD PTR es:[edi],eax
  422f80:	data16 (bad) 
  422f82:	dec    esp
  422f84:	lods   eax,DWORD PTR ds:[esi]
  422f85:	mov    eax,0xffff
  422f8a:	jns    0x422f8c
  422f8c:	ret    0xbbbf
  422f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f90:	scas   al,BYTE PTR es:[edi]
  422f91:	(bad)  
  422f92:	inc    DWORD PTR [eax]
  422f94:	or     ebp,DWORD PTR [esi]
  422f96:	cmp    edi,0xffffff83
  422f99:	int3   
  422f9a:	imul   edi,edi,0x3e
  422f9d:	cli    
  422f9e:	xor    DWORD PTR [esi-0x62],ebp
  422fa1:	(bad)  
  422fa2:	inc    DWORD PTR [eax]
  422fa4:	or     ah,BYTE PTR [edx]
  422fa6:	add    DWORD PTR [eax],0xffffffcc
  422fa9:	add    BYTE PTR [ebx+eax*4+0x45bc6949],dl
  422fb0:	pop    es
  422fb1:	inc    DWORD PTR [eax]
  422fb3:	adc    DWORD PTR [edi+ebx*2],0xffffff89
  422fb7:	dec    esp
  422fb9:	jmp    DWORD PTR [edi]
  422fbb:	add    BYTE PTR [esi+0x39cacf84],ah
  422fc1:	add    ah,cl
  422fc3:	push   DWORD PTR [ebp-0x7c008f]
  422fc9:	add    BYTE PTR [edi-0x221bde00],ch
  422fcf:	outs   dx,BYTE PTR ds:[esi]
  422fd0:	or     al,0x89
  422fd2:	inc    DWORD PTR [eax]
  422fd4:	sbb    ch,BYTE PTR [edi-0xffff34]
  422fda:	nop
  422fdb:	or     DWORD PTR [ebx-0x23ce2878],0xffffffff
  422fe2:	dec    DWORD PTR [ecx-0xad7]
  422fe8:	mov    DWORD PTR [eax],eax
  422fea:	std    
  422feb:	jmp    FWORD PTR [esi-0x24]
  422fee:	jbe    0x422fe3
  422ff0:	cs (bad) 
  422ff2:	inc    DWORD PTR [eax]
  422ff4:	jecxz  0x422fb7
  422ff6:	or     DWORD PTR [ecx-0x8eff01],0xffffffc9
  422ffd:	xlat   BYTE PTR ds:[ebx]
  422ffe:	xor    ecx,0x24
  423004:	adc    eax,0xff008380
  423009:	add    BYTE PTR [esi],al
  42300b:	push   esi
  42300d:	add    eax,0x3c31b0
  423012:	(bad)  
  423013:	inc    DWORD PTR [edx+ebp*2-0x7d]
  423017:	mov    DWORD PTR [eax],eax
  423019:	or     DWORD PTR [ebx-0x1],0x70
  42301d:	and    esi,DWORD PTR fs:[ebp-0x71]
  423021:	int3   
  423022:	add    bh,bh
  423024:	add    ah,BYTE PTR [ecx-0x77]
  423027:	add    bh,bh
  423029:	push   DWORD PTR [eax-0x1]
  42302c:	aas    
  42302d:	mov    ecx,0xffd009bd
  423032:	inc    DWORD PTR [eax]
  423034:	adc    esp,ebx
  423036:	add    BYTE PTR [ebx+0x8183ff],al
  42303c:	lods   al,BYTE PTR ds:[esi]
  42303d:	lock enter 0x14f2,0xff
  423042:	add    bh,bh
  423044:	pusha  
  423045:	cmp    eax,0xcc00ffff
  42304a:	xlat   BYTE PTR ds:[ebx]
  42304b:	int3   
  42304c:	add    DWORD PTR [ebp+eiz*8-0xf4b3],esp
  423053:	add    bh,dl
  423055:	mov    BYTE PTR [ebx-0x107c7c7d],0xff
  42305c:	sub    esp,DWORD PTR [eax+0x4]
  42305f:	cs mov ecx,0x6e0083ff
  423065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423066:	add    DWORD PTR [eax],0xffffffff
  423069:	sbb    DWORD PTR ds:0xa789fcff,0xffffffc9
  423070:	stc    
  423071:	add    bh,bh
  423073:	add    dl,al
  423075:	push   ss
  423076:	inc    DWORD PTR [eax]
  423078:	inc    DWORD PTR [eax]
  42307a:	leave  
  42307b:	mov    esp,edi
  42307d:	jo     0x423057
  42307f:	jecxz  0x42304f
  423081:	inc    DWORD PTR [ebx-0xbfa201]
  423087:	inc    DWORD PTR [eax]
  423089:	inc    edx
  42308b:	mov    DWORD PTR [ebp+esi*8-0x55],eax
  42308f:	cmp    edx,edx
  423091:	add    BYTE PTR [ecx+0x34c100],cl
  423097:	inc    DWORD PTR [eax]
  423099:	(bad)  
  42309a:	cli    
  42309b:	add    BYTE PTR [edi+0x33],dl
  42309e:	mov    al,0x5
  4230a0:	jns    0x4230a1
  4230a2:	inc    DWORD PTR [eax]
  4230a4:	xchg   edx,eax
  4230a5:	inc    esi
  4230a6:	add    BYTE PTR [eax],al
  4230a8:	int3   
  4230a9:	dec    DWORD PTR [ebx+eax*4-0xe]
  4230ad:	cwde   
  4230ae:	pop    ebx
  4230af:	ror    DWORD PTR [edi],1
  4230b1:	inc    DWORD PTR [eax]
  4230b3:	jmp    DWORD PTR [esi+0xffff12]
  4230b9:	dec    DWORD PTR [edi]
  4230bb:	add    BYTE PTR [eax+0x2c792f72],al
  4230c1:	(bad)  
  4230c2:	(bad)  
  4230c3:	call   FWORD PTR [eax+0x58]
  4230c6:	(bad)  
  4230c7:	inc    DWORD PTR [eax]
  4230c9:	add    BYTE PTR [eax],dl
  4230cb:	int3   
  4230cc:	ret    0x502f
  4230cf:	push   cs
  4230d0:	and    DWORD PTR [ebx-0xae83301],eax
  4230d6:	(bad)  
  4230d7:	inc    DWORD PTR [eax]
  4230d9:	jmp    eax
  4230db:	add    bl,dl
  4230dd:	mov    edx,0xffcca9ac
  4230e2:	add    bh,bh
  4230e4:	cmp    DWORD PTR [edx],edi
  4230e6:	int3   
  4230e7:	inc    DWORD PTR [eax]
  4230e9:	sub    DWORD PTR [eax],0x0
  4230ec:	(bad)  
  4230ed:	inc    ecx
  4230ee:	xor    ebx,ebx
  4230f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f1:	add    bh,bh
  4230f3:	(bad)  
  4230f4:	jp     0x42309c
  4230f6:	(bad)  
  4230f7:	inc    DWORD PTR [ebx+0xbccf9ff]
  4230fd:	rcl    BYTE PTR es:[ecx-0xffff2d],cl
  423104:	xchg   esi,eax
  423105:	(bad)  
  423106:	(bad)  
  423107:	inc    DWORD PTR [eax]
  423109:	cmp    DWORD PTR [edx-0x1],0xfffffff3
  42310d:	jmp    0xffff:0xff1644f3
  423114:	ins    BYTE PTR es:[edi],dx
  423115:	add    eax,0xff890089
  42311a:	cmp    al,0xff
  42311c:	cmp    BYTE PTR [ebp-0x33b779b7],0xff
  423123:	call   FWORD PTR [esi+0x830d]
  423129:	(bad)  
  42312a:	cmp    eax,0x4cdfafff
  42312f:	pop    es
  423130:	mov    bl,0x0
  423132:	inc    DWORD PTR [ebx-0x37f0]
  423138:	inc    DWORD PTR [eax]
  42313a:	in     eax,0xff
  42313c:	pop    esp
  42313d:	fcmovne st,st(4)
  42313f:	sub    DWORD PTR [ebp+0x0],edx
  423142:	int3   
  423143:	push   DWORD PTR [edx]
  423145:	push   eax
  423146:	cmp    edi,0xffffffff
  423149:	int3   
  42314a:	iret   
  42314b:	add    BYTE PTR [ecx*8+0x81f3b8],bh
  423152:	add    BYTE PTR [ebx+0xede0],al
  423158:	add    BYTE PTR [eax],al
  42315a:	sar    edi,1
  42315c:	dec    esi
  42315d:	popa   
  42315e:	sbb    BYTE PTR [esi],0x2b
  423161:	(bad)  
  423162:	(bad)  
  423163:	jmp    DWORD PTR [edx-0x33ff0011]
  423169:	call   DWORD PTR ds:0xdc1f3dff
  42316f:	retf   0xffa1
  423172:	cmp    edi,0x5c
  423175:	dec    ebx
  423176:	int3   
  423177:	mov    DWORD PTR [eax],eax
  423179:	and    DWORD PTR [esi],0xffffffcc
  42317c:	xor    BYTE PTR [edi],cl
  42317e:	outs   dx,BYTE PTR ds:[esi]
  42317f:	les    ebx,FWORD PTR [ebx-0x1]
  423182:	cmp    edi,0x2f
  423185:	push   edi
  423186:	dec    DWORD PTR [ecx+0x41ff00]
  42318c:	aad    0x71
  42318e:	mov    ds:0xcc0043f0,eax
  423193:	and    DWORD PTR [edx+0x24],0x0
  423197:	(bad)  
  423198:	(bad)  
  423199:	(bad)  
  42319a:	clc    
  42319b:	add    BYTE PTR [eax],ah
  42319d:	add    esp,edx
  42319f:	je     0x4231a0
  4231a1:	add    BYTE PTR [ebx+0x1246cc],al
  4231a7:	mov    DWORD PTR [eax],eax
  4231a9:	(bad)  
  4231aa:	clc    
  4231ab:	add    BYTE PTR [ecx-0x6bdb3bca],dh
  4231b1:	add    bh,bh
  4231b3:	inc    DWORD PTR [ebx+0x5]
  4231b6:	add    BYTE PTR [eax],al
  4231b8:	inc    DWORD PTR [eax]
  4231ba:	pop    ds
  4231bb:	add    BYTE PTR [edx+esi*1+0x15],ah
  4231bf:	call   0xeef9:0x8389c3
  4231c6:	inc    DWORD PTR [eax]
  4231c8:	(bad)  
  4231c9:	(bad)  
  4231ca:	jmp    0x4231cc
  4231cc:	push   eax
  4231cd:	mov    eax,0x5135ea
  4231d2:	add    bh,bh
  4231d4:	push   edi
  4231d5:	dec    esi
  4231d6:	or     DWORD PTR [ecx-0x720001],0x37
  4231dd:	jg     0x4231c9
  4231df:	in     al,0x42
  4231e1:	add    DWORD PTR [ebx-0xa0d901],0x0
  4231e8:	(bad)  
  4231e9:	call   FWORD PTR [edx]
  4231eb:	inc    DWORD PTR [eax+0x1a]
  4231ee:	pop    es
  4231ef:	(bad)  
  4231f0:	loopne 0x4231f2
  4231f2:	(bad)  
  4231f3:	call   DWORD PTR [ebx]
  4231f5:	test   eax,0x838383
  4231fa:	dec    eax
  4231fb:	(bad)  
  4231fc:	clc    
  4231fd:	imul   esi,DWORD PTR [esi-0x1],0xffffffa3
  423201:	add    bh,bh
  423203:	add    BYTE PTR [esi+ebx*8-0x1],ah
  423207:	(bad)  
  423208:	(bad)  
  423209:	dec    DWORD PTR [edi-0x77]
  42320c:	pavgw  mm2,QWORD PTR [esi+0xa8cf]
  423213:	add    BYTE PTR [edx-0xff0096],bh
  423219:	add    BYTE PTR [eax-0x32b05c01],ah
  42321f:	rcr    DWORD PTR [ebx],0x0
  423222:	inc    DWORD PTR [eax]
  423224:	pop    edx
  423225:	(bad)  
  423226:	dec    DWORD PTR [ecx-0x337b7700]
  42322c:	inc    esp
  42322d:	outs   dx,BYTE PTR ds:[esi]
  42322e:	and    dl,BYTE PTR [edx]
  423230:	(bad)  
  423232:	(bad)  
  423233:	push   DWORD PTR [ecx+esi*2-0xff01]
  42323a:	jae    0x42323b
  42323c:	ror    DWORD PTR [ecx+0x7e],cl
  42323f:	dec    esp
  423240:	stc    
  423241:	add    bh,bh
  423243:	push   DWORD PTR [edi+edx*4+0xff]
  42324a:	and    eax,DWORD PTR [ebx-0x1874c0ff]
  423250:	push   ebx
  423251:	inc    DWORD PTR [eax]
  423253:	push   DWORD PTR [edx-0x3d]
  423256:	(bad)  
  423257:	(bad)  
  423258:	(bad)  
  423259:	inc    DWORD PTR [eax-0x7b6a4877]
  42325f:	mov    edi,0xffff0029
  423264:	add    BYTE PTR [esi-0x1],al
  423267:	(bad)  
  423268:	(bad)  
  423269:	call   DWORD PTR [edx-0x1]
  42326c:	push   ebp
  42326d:	mov    al,ds:0xff89adfe
  423272:	dec    esp
  423274:	xchg   ebp,eax
  423275:	clc    
  423276:	inc    DWORD PTR [eax]
  423278:	add    BYTE PTR [ecx-0x11cc0037],cl
  42327e:	pop    ebx
  42327f:	cdq    
  423280:	inc    esp
  423281:	int3   
  423282:	(bad)  
  423283:	jmp    DWORD PTR [esi-0x7c008a]
  423289:	add    bh,bh
  42328b:	add    BYTE PTR [edx-0x157c2bdd],dl
  423291:	inc    DWORD PTR [eax]
  423293:	add    ch,ch
  423295:	or     al,0x0
  423297:	(bad)  
  423298:	inc    DWORD PTR [ebx+0x62acff7d]
  42329e:	jb     0x423283
  4232a0:	push   edx
  4232a1:	add    DWORD PTR [eax],0xffffffcc
  4232a4:	outs   dx,DWORD PTR ds:[esi]
  4232a5:	cli    
  4232a6:	(bad)  
  4232a7:	(bad)  
  4232a8:	(bad)  
  4232a9:	jmp    DWORD PTR [ebp-0x1]
  4232ac:	pop    eax
  4232ad:	mov    esi,0x83ce3f1e
  4232b2:	(bad)  
  4232b3:	dec    DWORD PTR [edx]
  4232b5:	cmp    bh,0xff
  4232b8:	inc    DWORD PTR [eax]
  4232ba:	(bad)  
  4232bb:	add    BYTE PTR [edi+0x75],dl
  4232be:	sub    al,0x62
  4232c0:	scas   al,BYTE PTR es:[edi]
  4232c1:	add    bh,bh
  4232c3:	mov    DWORD PTR ds:0xff00ff67,eax
  4232c9:	add    BYTE PTR [edx-0x1],cl
  4232cc:	pop    eax
  4232cd:	jp     0x423342
  4232cf:	push   ecx
  4232d0:	data16 add BYTE PTR [eax],al
  4232d3:	int3   
  4232d4:	xor    eax,0x830000b7
  4232d9:	call   DWORD PTR [edx-0x1]
  4232dc:	test   eax,0x2ae7507
  4232e1:	add    bh,bh
  4232e3:	add    ch,ah
  4232e5:	xor    bh,bh
  4232e7:	add    bh,bh
  4232e9:	mov    DWORD PTR [eax],esp
  4232eb:	add    BYTE PTR [ecx],cl
  4232ed:	ins    DWORD PTR es:[edi],dx
  4232ee:	shl    DWORD PTR [edx-0x2e],1
  4232f1:	add    bh,bh
  4232f3:	xor    edx,0x4a
  4232f6:	(bad)  
  4232f7:	(bad)  
  4232f8:	inc    DWORD PTR [eax]
  4232fa:	jbe    0x4232c8
  4232fc:	test   BYTE PTR [ecx-0x9],0xc0
  423300:	sbb    al,0xff
  423302:	add    bh,bh
  423304:	mov    edx,0xff00ff9e
  423309:	inc    DWORD PTR [ebp-0x77]
  42330c:	mov    bl,0xc3
  42330e:	sub    BYTE PTR ds:0x89ffffc7,0x72
  423315:	je     0x423316
  423317:	add    bh,bh
  423319:	add    ah,bh
  42331b:	(bad)  
  42331c:	mov    eax,0xcbc9da47
  423321:	add    BYTE PTR [eax],al
  423323:	mov    DWORD PTR [edi],ebx
  423325:	pop    ss
  423326:	add    BYTE PTR [ecx-0x370034],cl
  42332c:	lds    esi,FWORD PTR [edx+0x554f4f]
  423332:	int3   
  423333:	dec    ebp
  423335:	mov    ebp,0x8300ff83
  42333a:	add    DWORD PTR [eax],0x55012816
  423340:	aas    
  423341:	add    BYTE PTR [ebx-0x3370d67d],al
  423347:	cmp    edi,0xffffffff
  42334a:	clc    
  42334b:	add    BYTE PTR [edx-0x319bc5d7],bl
  423351:	add    BYTE PTR [ebx+0xf9f500],al
  423357:	inc    DWORD PTR [eax]
  423359:	add    BYTE PTR [ecx+0x3a135fff],dl
  42335f:	or     eax,esi
  423361:	int3   
  423362:	add    bh,bh
  423364:	xor    DWORD PTR [ecx+0x0],ecx
  423367:	add    BYTE PTR [eax],al
  423369:	(bad)  
  42336a:	fiadd  WORD PTR [eax]
  42336c:	mov    esp,0x89c76771
  423371:	mov    edi,edi
  423373:	jmp    DWORD PTR ds:0x83ffff2d
  423379:	(bad)  
  42337a:	cmp    eax,0x2add789
  42337f:	adc    BYTE PTR [edi],dh
  423381:	int3   
  423382:	int3   
  423383:	sbb    DWORD PTR [esp+esi*8-0x1],0xffffffff
  423388:	int3   
  423389:	inc    esi
  42338b:	mov    DWORD PTR [edi-0x533a43aa],esi
  423391:	add    BYTE PTR [ebx-0xe8e901],al
  423397:	inc    DWORD PTR [eax]
  423399:	int3   
  42339a:	cld    
  42339b:	add    bl,dl
  42339d:	pop    esp
  42339e:	and    ch,BYTE PTR [ebx-0x6b]
  4233a1:	inc    DWORD PTR [eax]
  4233a3:	mov    ebp,edx
  4233a5:	or     al,BYTE PTR [eax]
  4233a7:	mov    DWORD PTR [eax],eax
  4233a9:	dec    DWORD PTR [ebp-0x1]
  4233ac:	mov    BYTE PTR [ebp-0x336d39f1],0xff
  4233b3:	add    BYTE PTR [ecx-0x76],dl
  4233b6:	add    bh,bh
  4233b8:	dec    DWORD PTR [ecx+0x6eebff56]
  4233be:	push   ds
  4233bf:	iret   
  4233c0:	nop
  4233c1:	add    ah,cl
  4233c3:	add    BYTE PTR [edx+0x65],bh
  4233c6:	add    bh,bh
  4233c8:	add    bh,bh
  4233ca:	rol    DWORD PTR [eax],1
  4233cc:	mov    esi,DWORD PTR [eax+ebp*1+0xff76fc]
  4233d3:	add    bl,bl
  4233d5:	scas   al,BYTE PTR es:[edi]
  4233d6:	inc    DWORD PTR [eax]
  4233d8:	add    BYTE PTR [ebx-0x51ff0076],al
  4233de:	cmp    edi,DWORD PTR [edi-0x76ff08]
  4233e4:	jb     0x423424
  4233e6:	int3   
  4233e7:	add    bh,bh
  4233e9:	add    BYTE PTR [ebx-0x7d],ah
  4233ec:	inc    ebx
  4233ed:	stos   DWORD PTR es:[edi],eax
  4233ee:	into   
  4233ef:	and    BYTE PTR [eax+eax*1-0x1],bh
  4233f3:	mov    edi,edx
  4233f5:	inc    edi
  4233f6:	(bad)  
  4233f7:	(bad)  
  4233f8:	inc    DWORD PTR [eax]
  4233fa:	push   eax
  4233fb:	add    BYTE PTR [eax+esi*4],al
  4233fe:	ret    
  4233ff:	pop    edi
  423400:	ss (bad) 
  423402:	inc    DWORD PTR [eax]
  423404:	push   cs
  423405:	add    bh,bh
  423407:	or     DWORD PTR [ecx+0x7e0050ff],0x38
  42340e:	arpl   WORD PTR [ecx-0x7c007c80],dx
  423414:	retf   
  423415:	popa   
  423416:	mov    DWORD PTR [eax],eax
  423418:	inc    DWORD PTR [ebx-0x34effb6]
  42341e:	inc    ecx
  42341f:	sbb    eax,0x898930
  423424:	stos   BYTE PTR es:[edi],al
  423425:	dec    eax
  423426:	int3   
  423427:	int3   
  423428:	add    bh,bh
  42342a:	adc    cl,ah
  42342c:	sbb    bh,BYTE PTR [ebp+0xe]
  42342f:	mov    ch,0xfd
  423431:	int3   
  423432:	dec    esp
  423434:	pop    esp
  423435:	js     0x4233ba
  423437:	inc    DWORD PTR [ebx-0x55330401]
  42343d:	lea    edx,[edi+ebp*1]
  423440:	cwde   
  423441:	add    bh,bh
  423443:	jmp    DWORD PTR [esi-0x15]
  423446:	inc    DWORD PTR [eax]
  423448:	(bad)  
  423449:	call   DWORD PTR [ebx-0x16fc6034]
  42344f:	bound  eax,QWORD PTR [ecx+0x0]
  423452:	int3   
  423453:	jmp    ecx
  423455:	inc    BYTE PTR [ebx+0x3800ff83]
  42345b:	add    al,dl
  42345d:	ds jae 0x423458
  423460:	push   eax
  423461:	inc    DWORD PTR [ebx+0xd809ff]
  423467:	inc    DWORD PTR [eax]
  423469:	mov    ebx,ecx
  42346b:	inc    DWORD PTR [esi+0x69242223]
  423471:	inc    DWORD PTR [eax]
  423473:	add    BYTE PTR [ebx-0x33ffab],dh
  423479:	inc    edx
  42347b:	add    BYTE PTR [ecx-0x7908a9ce],bl
  423481:	(bad)  
  423482:	inc    DWORD PTR [eax]
  423484:	sub    eax,0x83ff40
  423489:	jmp    FWORD PTR [edi+0x0]
  42348c:	push   edx
  42348d:	fild   QWORD PTR [ecx]
  42348f:	bound  ebx,QWORD PTR [ebx-0x4dff0100]
  423495:	je     0x423497
  423497:	add    DWORD PTR [eax],0xffffffff
  42349a:	push   es
  42349b:	adc    DWORD PTR [eiz*2-0xfa226f],0xffffffff
  4234a3:	(bad)  
  4234a4:	fisub  DWORD PTR [eax-0x7d]
  4234a7:	add    bh,bh
  4234a9:	add    ah,cl
  4234ab:	jmp    FWORD PTR [ebp+0x3abc5e1a]
  4234b1:	inc    DWORD PTR [eax]
  4234b3:	jmp    FWORD PTR [ebx+0xffe2]
  4234b9:	jmp    DWORD PTR [ebx+eax*4-0x5c8e1b5c]
  4234c0:	cmp    al,BYTE PTR [ebx-0x3786007d]
  4234c6:	(bad)  
  4234c7:	(bad)  
  4234c8:	dec    DWORD PTR [ecx-0x7db0073]
  4234ce:	loopne 0x4234da
  4234d0:	mov    ecx,0x1489ff00
  4234d5:	cli    
  4234d6:	int3   
  4234d7:	cmp    edi,0x0
  4234da:	mov    eax,ds:0xa50a8200
  4234df:	rcr    ecx,cl
  4234e1:	add    bh,bh
  4234e3:	int3   
  4234e4:	xchg   ebp,eax
  4234e5:	es cmp edi,0xffffffff
  4234e9:	call   DWORD PTR [edi-0x77]
  4234ec:	mov    DWORD PTR [eax+0xec7b14],edx
  4234f2:	(bad)  
  4234f3:	jmp    DWORD PTR [edi+edi*1+0x0]
  4234f7:	int3   
  4234f8:	add    BYTE PTR [eax],al
  4234fa:	out    0xff,al
  4234fc:	and    dh,al
  4234fe:	dec    ebx
  4234ff:	sub    bl,BYTE PTR [ebp+0x26ffff83]
  423505:	test   DWORD PTR [eax],eax
  423507:	add    BYTE PTR [ecx+0x340013ff],cl
  42350d:	add    eax,DWORD PTR [esi+0x4]
  423510:	mov    esp,0x3300ffff
  423515:	mov    cl,0x83
  423517:	cmp    edi,0xffffffff
  42351a:	pop    edi
  42351b:	call   FWORD PTR [eax]
  42351d:	hlt    
  42351e:	lahf   
  42351f:	ret    
  423520:	popf   
  423521:	add    BYTE PTR [eax],al
  423523:	add    BYTE PTR [edi+0x76],bl
  423526:	(bad)  
  423527:	inc    DWORD PTR [eax]
  423529:	call   DWORD PTR [ebp-0xee4ce00]
  42352f:	push   ecx
  423530:	sbb    eax,0x74830083
  423535:	loopne 0x423536
  423537:	add    BYTE PTR [eax],al
  423539:	add    BYTE PTR [esi-0x2834f500],cl
  42353f:	stos   DWORD PTR es:[edi],eax
  423540:	adc    eax,0x3e83ffff
  423545:	clc    
  423546:	dec    DWORD PTR [ecx+0x6cffff]
  42354c:	lds    edx,FWORD PTR [ebx+0x61e0b2]
  423552:	dec    DWORD PTR [ecx-0x76bca6]
  423558:	dec    DWORD PTR [ecx-0x3cf37c51]
  42355e:	inc    ebx
  42355f:	jo     0x4235d6
  423561:	add    BYTE PTR [eax],al
  423563:	(bad)  
  423564:	jmp    0xf0ff:0x83ffff31
  42356b:	add    BYTE PTR [ecx+0x38f66eb3],dh
  423571:	add    BYTE PTR [eax],al
  423573:	dec    DWORD PTR [ecx]
  423575:	pop    esi
  423576:	int3   
  423577:	inc    DWORD PTR [eax]
  423579:	inc    DWORD PTR [esi+0x0]
  42357c:	(bad)  
  42357d:	cmc    
  42357e:	push   ds
  42357f:	adc    al,0x80
  423581:	inc    DWORD PTR [eax]
  423583:	jmp    DWORD PTR [edx]
  423585:	pop    ebp
  423586:	mov    DWORD PTR [eax],eax
  423588:	add    bh,bh
  42358a:	sub    eax,0x3d099189
  42358f:	add    BYTE PTR gs:[eax],0xff
  423593:	(bad)  
  423594:	ficom  DWORD PTR [ecx]
  423596:	inc    DWORD PTR [eax]
  423598:	(bad)  
  423599:	call   ecx
  42359b:	(bad)  
  42359c:	sti    
  42359d:	pop    ebx
  42359e:	cmp    dl,BYTE PTR [ebp-0x37]
  4235a1:	(bad)  
  4235a2:	inc    DWORD PTR [ebx+0x9416]
  4235a8:	add    BYTE PTR [eax],al
  4235aa:	xchg   ecx,eax
  4235ab:	push   DWORD PTR [esi-0x79]
  4235ae:	rcl    bh,1
  4235b0:	cmc    
  4235b1:	(bad)  
  4235b2:	(bad)  
  4235b3:	push   DWORD PTR [ebx-0x33ff76a4]
  4235b9:	int3   
  4235ba:	adc    ah,cl
  4235bc:	add    eax,0x5d4f7b9b
  4235c1:	add    BYTE PTR [eax],al
  4235c3:	add    DWORD PTR [ebx-0x53],0x0
  4235c7:	add    BYTE PTR [ebx-0x48fff201],al
  4235cd:	aas    
  4235ce:	stos   DWORD PTR es:[edi],eax
  4235cf:	out    0xfc,eax
  4235d1:	inc    DWORD PTR [eax]
  4235d3:	sub    DWORD PTR [edx+0x74],0xffffff83
  4235d7:	add    bh,bh
  4235d9:	add    BYTE PTR [edi],dl
  4235db:	add    BYTE PTR [esi+eax*8+0x5d],dl
  4235df:	cdq    
  4235e0:	dec    edi
  4235e1:	cmp    edi,0xffffffcc
  4235e4:	lahf   
  4235e5:	daa    
  4235e6:	add    ah,cl
  4235e8:	int3   
  4235e9:	add    bh,cl
  4235eb:	add    al,dh
  4235ed:	or     ebp,ebx
  4235ef:	dec    edx
  4235f0:	mov    edi,0xc2830000
  4235f5:	sbb    bh,bh
  4235f7:	inc    DWORD PTR [eax]
  4235f9:	(bad)  
  4235fa:	(bad)  
  4235fb:	(bad)  
  4235fc:	jnp    0x423664
  4235fe:	pop    ecx
  4235ff:	fist   DWORD PTR [edi]
  423601:	add    BYTE PTR [ebx-0x7c9f0701],al
  423607:	(bad)  
  423608:	inc    DWORD PTR [ebx-0x387a0004]
  42360e:	xlat   BYTE PTR ds:[ebx]
  42360f:	adc    ecx,DWORD PTR ds:0x1100cc89
  423615:	hlt    
  423616:	mov    DWORD PTR [ebx-0x762e3400],eax
  42361c:	mov    eax,0x44032d9f
  423621:	inc    DWORD PTR [eax]
  423623:	push   ebx
  423625:	stc    
  423626:	(bad)  
  423627:	inc    DWORD PTR [eax]
  423629:	(bad)  
  42362a:	jmp    0xac6c:0x22705f89
  423631:	add    DWORD PTR [eax],0x0
  423634:	loop   0x42366c
  423636:	add    bh,bh
  423638:	int3   
  423639:	push   DWORD PTR [edx]
  42363b:	cmp    ebp,0xffffffb9
  42363e:	sub    eax,0xffff660a
  423643:	int3   
  423644:	data16 sub al,0x0
  423647:	add    BYTE PTR [eax],al
  423649:	dec    DWORD PTR [ebx]
  42364b:	inc    DWORD PTR [edi+0x1c60c201]
  423651:	(bad)  
  423652:	(bad)  
  423653:	jmp    FWORD PTR [ecx-0x33ffffa5]
  423659:	cmp    DWORD PTR [eax],0x0
  42365c:	inc    ebx
  42365d:	mov    BYTE PTR [di+0x30],cl
  423661:	cmp    edi,0xffffffff
  423664:	pop    ebp
  423665:	sub    bh,bh
  423667:	inc    DWORD PTR [eax]
  423669:	jmp    DWORD PTR [esi-0x515fac00]
  42366f:	dec    ebx
  423670:	scas   eax,DWORD PTR es:[edi]
  423671:	(bad)  
  423672:	dec    esp
  423674:	jg     0x4236db
  423676:	(bad)  
  423677:	inc    DWORD PTR [ebx+0x1dcc66ff]
  42367d:	jae    0x42366a
  42367f:	sbb    eax,0xffff002e
  423684:	aam    0x9e
  423686:	mov    DWORD PTR [ebx-0x7ca50001],eax
  42368c:	and    ecx,DWORD PTR [edx]
  42368e:	xchg   ebp,eax
  42368f:	les    ecx,FWORD PTR [edx-0x1]
  423692:	inc    DWORD PTR [ebx-0x7c76d97d]
  423698:	int3   
  423699:	dec    DWORD PTR [ecx-0x1ae45f7d]
  42369f:	(bad)  
  4236a0:	jmp    0x42362b
  4236a2:	inc    DWORD PTR [eax]
  4236a4:	fdivr  DWORD PTR [ebp-0x1]
  4236a7:	inc    DWORD PTR [eax]
  4236a9:	call   edx
  4236ab:	add    BYTE PTR [eax],bh
  4236ad:	mov    esi,0x89f55618
  4236b2:	dec    DWORD PTR [ecx-0x8c88]
  4236b8:	dec    esp
  4236ba:	xchg   ebp,eax
  4236bb:	int3   
  4236bc:	or     eax,0x30ef51a4
  4236c1:	(bad)  
  4236c2:	dec    esp
  4236c4:	or     edi,edi
  4236c6:	(bad)  
  4236c7:	(bad)  
  4236c8:	inc    DWORD PTR [eax]
  4236ca:	arpl   WORD PTR [eax],ax
  4236cc:	dec    ecx
  4236cd:	call   0xff89:0xcc699f85
  4236d4:	loop   0x423686
  4236d6:	inc    DWORD PTR [eax]
  4236d8:	add    bh,bh
  4236da:	or     eax,DWORD PTR [eax]
  4236dc:	sub    al,0xd
  4236de:	ds aas 
  4236e0:	scas   al,BYTE PTR es:[edi]
  4236e1:	inc    DWORD PTR [eax]
  4236e3:	jmp    DWORD PTR [ebp+0x5]
  4236e6:	(bad)  
  4236e7:	dec    esp
  4236e9:	jmp    DWORD PTR [ebp+0x1b5a9bff]
  4236ef:	stos   BYTE PTR es:[edi],al
  4236f0:	sbb    eax,0xb200ffff
  4236f5:	(bad)  
  4236f7:	add    BYTE PTR [ebx-0x3cff2301],al
  4236fd:	cwde   
  4236fe:	loopne 0x42368d
  423700:	sar    bh,1
  423702:	add    DWORD PTR [eax],0xffffffeb
  423705:	adc    al,0x89
  423707:	inc    DWORD PTR [eax]
  423709:	add    BYTE PTR [ecx],bh
  42370b:	add    BYTE PTR [ebx],dh
  42370d:	inc    ebx
  42370e:	cs mov dl,0xba
  423711:	(bad)  
  423712:	inc    DWORD PTR [eax]
  423714:	and    BYTE PTR [ecx],ch
  423716:	add    BYTE PTR [eax],al
  423718:	(bad)  
  423719:	(bad)  
  42371a:	cmp    al,0x89
  42371c:	push   esp
  42371d:	in     eax,dx
  42371e:	in     eax,0x3c
  423720:	sbb    BYTE PTR [eax],al
  423722:	(bad)  
  423723:	dec    ebp
  423725:	pushf  
  423726:	cmp    edi,0x0
  423729:	add    BYTE PTR [ecx+ecx*4-0x28],cl
  42372d:	fcomp  QWORD PTR [eax+0x64]
  423730:	dec    esp
  423731:	add    bh,bh
  423733:	add    BYTE PTR [edi],dh
  423735:	xor    eax,0xffffff83
  42373a:	aam    0x0
  42373c:	fucomi st,st(7)
  42373e:	pop    es
  42373f:	jo     0x4237a3
  423741:	add    BYTE PTR [eax],al
  423743:	int3   
  423744:	ss enter 0x0,0x0
  423749:	int3   
  42374a:	push   ebx
  42374b:	mov    esp,esp
  42374d:	ret    0x3b75
  423750:	(bad)  
  423751:	inc    DWORD PTR [eax]
  423753:	call   FWORD PTR [ebp+eiz*4-0x76ff01]
  42375a:	popf   
  42375b:	add    BYTE PTR [edi-0x1f86715b],bl
  423761:	add    BYTE PTR [eax],al
  423763:	add    BYTE PTR [edx-0x7cff86],cl
  423769:	int3   
  42376a:	fwait
  42376b:	add    BYTE PTR [ebp+0x64],dl
  42376e:	fst    DWORD PTR [esi-0x62]
  423771:	(bad)  
  423772:	(bad)  
  423773:	(bad)  
  423774:	out    dx,al
  423775:	int    0x83
  423777:	cmp    edi,0x0
  42377a:	ins    BYTE PTR es:[edi],dx
  42377b:	add    BYTE PTR [ebx+0x60],ch
  42377e:	pop    ss
  42377f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423780:	(bad)  
  423781:	mov    DWORD PTR [ebx-0xfdfd00],eax
  423787:	dec    esp
  423789:	add    BYTE PTR ds:0xf04da600,bh
  42378f:	ret    
  423790:	pop    ss
  423791:	(bad)  
  423792:	(bad)  
  423793:	jmp    DWORD PTR [ebx]
  423795:	dec    esp
  423796:	add    BYTE PTR [eax],al
  423798:	int3   
  423799:	and    DWORD PTR [edx-0x1],0xffffffb8
  42379d:	xor    al,BYTE PTR [edi]
  42379f:	das    
  4237a0:	mov    esp,ecx
  4237a2:	inc    DWORD PTR [ebx+0xbf2e]
  4237a8:	int3   
  4237a9:	add    BYTE PTR [edx-0x4eb75c01],ch
  4237af:	xor    al,0x91
  4237b1:	add    BYTE PTR [eax],al
  4237b3:	push   DWORD PTR [esi-0x61]
  4237b6:	or     DWORD PTR [ecx-0xd0007d],0xffffff91
  4237bd:	imul   ebx,edx,0x68
  4237c0:	xor    bh,bh
  4237c2:	add    BYTE PTR [eax],al
  4237c4:	add    ecx,DWORD PTR [edi+edi*8]
  4237c7:	mov    DWORD PTR [eax],eax
  4237c9:	jmp    FWORD PTR [esi]
  4237cb:	push   DWORD PTR [eax-0xe0e5f84]
  4237d1:	cmp    edi,0xffffff89
  4237d4:	stos   DWORD PTR es:[edi],eax
  4237d5:	pop    ecx
  4237d6:	add    BYTE PTR [ebx-0x76000001],al
  4237dc:	mov    WORD PTR [ecx],ss
  4237de:	arpl   WORD PTR [edx-0x14],bp
  4237e1:	inc    DWORD PTR [ebx-0x4d4601]
  4237e7:	inc    DWORD PTR [eax]
  4237e9:	int3   
  4237ea:	jno    0x4237eb
  4237ec:	add    esi,DWORD PTR [edx+ebp*2-0x54]
  4237f0:	test   BYTE PTR [eax],0x0
  4237f3:	add    ch,ah
  4237f5:	int    0xcc
  4237f7:	(bad)  
  4237f8:	(bad)  
  4237f9:	dec    DWORD PTR [esi-0x1]
  4237fc:	fdivp  st(1),st
  4237fe:	call   0x8489:0x83ff8406
  423805:	pop    esp
  423806:	(bad)  
  423807:	inc    DWORD PTR [eax]
  423809:	add    BYTE PTR [ebp-0x7d],dh
  42380c:	adc    cl,BYTE PTR [esi+0x5ce260]
  423812:	(bad)  
  423813:	call   FWORD PTR [ecx-0x38]
  423816:	inc    DWORD PTR [eax]
  423818:	dec    esp
  42381a:	mov    edi,0xa721bd89
  42381f:	sub    eax,0xff74
  423824:	lods   eax,DWORD PTR ds:[esi]
  423825:	out    dx,al
  423826:	add    DWORD PTR [eax],0x0
  423829:	push   DWORD PTR [edi+edi*8]
  42382c:	int    0x24
  42382e:	pop    esi
  42382f:	mov    WORD PTR [ecx+0x0],cs
  423832:	(bad)  
  423833:	jmp    DWORD PTR [edx+ebp*2]
  423836:	inc    DWORD PTR [eax]
  423838:	(bad)  
  423839:	inc    DWORD PTR [eax+0x0]
  42383c:	or     dh,ch
  42383e:	sar    DWORD PTR [edi],1
  423840:	mov    eax,DWORD PTR [eax]
  423842:	(bad)  
  423843:	jmp    DWORD PTR [eax-0x22]
  423849:	mov    DWORD PTR [eax+eax*1+0x6e],eax
  42384d:	mov    edx,esp
  42384f:	sbb    BYTE PTR [ecx-0x3cff7634],dh
  423855:	sbb    edi,edi
  423857:	cmp    edi,0xffffff83
  42385a:	cmp    bh,bh
  42385c:	push   cs
  42385d:	fmul   st(0),st
  42385f:	mov    ds:0xffccff19,eax
  423864:	dec    ecx
  423865:	cli    
  423866:	add    bh,bh
  423868:	(bad)  
  423869:	push   eax
  42386b:	add    BYTE PTR [ebp+0x48],dh
  42386e:	or     esi,DWORD PTR [ebp+0x83ff66]
  423874:	xor    edx,DWORD PTR [edx]
  423876:	add    BYTE PTR [ecx-0x76973377],cl
  42387c:	hlt    
  42387d:	aad    0xdc
  42387f:	pop    ebp
  423880:	sub    BYTE PTR [eax],al
  423882:	(bad)  
  423883:	call   FWORD PTR [eax-0x62]
  423886:	int3   
  423887:	dec    esp
  423889:	add    BYTE PTR [edx-0xfe3f101],cl
  42388f:	mov    dl,BYTE PTR [eax-0x36ff0001]
  423895:	dec    ebx
  423896:	add    BYTE PTR [eax],al
  423898:	dec    esp
  42389a:	enter  0xc900,0x69
  42389e:	sbb    al,0x71
  4238a0:	lods   eax,DWORD PTR ds:[esi]
  4238a1:	int3   
  4238a2:	add    bh,bh
  4238a4:	cs mov ch,0xff
  4238a7:	add    BYTE PTR [eax],al
  4238a9:	(bad)  
  4238aa:	jnp    0x4238ac
  4238ac:	add    al,0xa1
  4238ae:	int3   
  4238af:	int    0xde
  4238b1:	add    BYTE PTR [eax],al
  4238b3:	dec    DWORD PTR [ecx+0x12]
  4238b6:	or     esp,0x0
  4238b9:	call   ebx
  4238bb:	jmp    FWORD PTR ds:0x488feca7
  4238c1:	(bad)  
  4238c2:	inc    DWORD PTR [ebx-0xffafd7]
  4238c8:	inc    DWORD PTR [ebx+0x42f4ff07]
  4238ce:	fld    DWORD PTR [ecx]
  4238d0:	cli    
  4238d1:	(bad)  
  4238d2:	inc    DWORD PTR [eax]
  4238d4:	retf   0xcc6e
  4238d7:	mov    edi,edi
  4238d9:	add    BYTE PTR [edi+edi*8],ah
  4238dc:	div    DWORD PTR [ecx-0x56]
  4238df:	aam    0x93
  4238e1:	(bad)  
  4238e2:	inc    DWORD PTR [eax]
  4238e4:	xchg   edi,eax
  4238e5:	data16 add BYTE PTR [ecx-0xe83301],cl
  4238ec:	sbb    al,0x69
  4238ee:	sbb    eax,0xccff2378
  4238f3:	add    BYTE PTR [eax+0xffff64],cl
  4238f9:	inc    DWORD PTR [esi]
  4238fb:	(bad)  
  4238fc:	call   0xf6e6f59b
  423901:	inc    DWORD PTR [eax]
  423903:	add    DWORD PTR [ecx],0xffffffa7
  423906:	(bad)  
  423907:	(bad)  
  423908:	(bad)  
  423909:	(bad)  
  42390a:	in     al,dx
  42390b:	call   edi
  42390d:	pop    esi
  42390e:	jl     0x423947
  423910:	cmp    eax,DWORD PTR [ebx-0x29ff7c01]
  423916:	add    bh,bh
  423918:	(bad)  
  423919:	call   DWORD PTR [edx+0x0]
  42391c:	jbe    0x42389e
  42391e:	ins    DWORD PTR es:[edi],dx
  42391f:	int    0x87
  423921:	inc    DWORD PTR [eax]
  423923:	jmp    DWORD PTR [ecx-0x71]
  423926:	int3   
  423927:	(bad)  
  423928:	inc    DWORD PTR [ebx+0x7dd4cc28]
  42392e:	add    BYTE PTR [edi+esi*4],dl
  423931:	add    DWORD PTR [eax],0xffffffcc
  423934:	or     bh,BYTE PTR [esi-0x7cff7d]
  42393a:	cld    
  42393b:	sbb    esp,0x56
  42393e:	pop    ds
  42393f:	sub    BYTE PTR [esi+0x5300ff00],dl
  423945:	add    eax,0xffff
  42394a:	jl     0x42394b
  42394c:	adc    ebp,DWORD PTR [ecx-0x46]
  42394f:	add    dh,BYTE PTR [ecx+ecx*4+0x0]
  423953:	jmp    DWORD PTR [ebp+0x60]
  423956:	int3   
  423957:	dec    esp
  423959:	(bad)  
  42395a:	jp     0x42395b
  42395c:	in     eax,0x98
  42395e:	jb     0x423900
  423960:	cmp    bh,bh
  423962:	add    BYTE PTR [ebx-0x7619ba],al
  423968:	or     DWORD PTR [ecx+0x7a2b0055],0x7a
  42396f:	(bad)  
  423970:	xchg   ebp,eax
  423971:	inc    DWORD PTR [ebx-0xe36d01]
  423977:	add    bh,bh
  423979:	add    BYTE PTR [ebx-0x46cfbc01],bl
  42397f:	push   es
  423980:	sar    bh,cl
  423982:	dec    DWORD PTR [ecx+0x8371f6]
  423988:	mov    edi,edi
  42398a:	loope  0x42398b
  42398c:	addr16 sbb bl,al
  42398f:	js     0x423974
  423991:	add    bh,bh
  423993:	add    DWORD PTR [esi-0x33ff0016],0xffffffff
  42399a:	inc    eax
  42399b:	add    BYTE PTR [ecx-0x5a],dl
  42399e:	mov    ch,0xc0
  4239a0:	lock add BYTE PTR [ecx-0xfcb601],cl
  4239a7:	add    BYTE PTR [eax],al
  4239a9:	dec    ecx
  4239ab:	jmp    FWORD PTR [esi-0x36]
  4239ae:	fdivr  QWORD PTR [ebx+esi*1+0x0]
  4239b2:	inc    DWORD PTR [eax]
  4239b4:	out    dx,eax
  4239b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239b6:	add    bh,bh
  4239b8:	int3   
  4239b9:	mov    eax,edx
  4239bb:	add    BYTE PTR [esi],cl
  4239bd:	cwde   
  4239be:	dec    ebx
  4239bf:	dec    esp
  4239c0:	out    dx,eax
  4239c1:	add    bh,bh
  4239c3:	sub    DWORD PTR [ecx+ecx*8],0x0
  4239c7:	inc    DWORD PTR [ebx+0x60005cff]
  4239cd:	push   ds
  4239ce:	fdivr  st(2),st
  4239d0:	sbb    edi,edi
  4239d2:	add    DWORD PTR [eax],0x7d
  4239d5:	pop    eax
  4239d6:	add    BYTE PTR [ebx+0x71ffff],al
  4239dc:	(bad)  
  4239dd:	repz inc edx
  4239df:	jo     0x4239c6
  4239e1:	add    bh,bh
  4239e3:	int3   
  4239e4:	push   0xffffffd1
  4239e6:	add    bh,bh
  4239e8:	cmp    edi,0xfffffff1
  4239eb:	add    BYTE PTR [edx+0x76d98bbc],al
  4239f1:	(bad)  
  4239f2:	(bad)  
  4239f3:	dec    DWORD PTR [esi+eiz*2]
  4239f6:	inc    DWORD PTR [ebx+0x7d00ff]
  4239fc:	mov    eax,0xa783eb47
  423a01:	(bad)  
  423a02:	(bad)  
  423a03:	jmp    DWORD PTR [esi]
  423a05:	jp     0x4239d3
  423a07:	int3   
  423a08:	dec    esp
  423a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a0b:	or     DWORD PTR [esi],0xffffffb7
  423a0e:	cmp    ecx,ebx
  423a10:	inc    eax
  423a11:	add    DWORD PTR [ebx-0x105a00],0xffffffff
  423a18:	inc    DWORD PTR [eax]
  423a1a:	jne    0x423a1c
  423a1c:	pop    ebx
  423a1d:	test   eax,0xff801d09
  423a22:	add    BYTE PTR [eax],al
  423a24:	mov    ch,0x9b
  423a26:	inc    DWORD PTR [eax]
  423a28:	add    BYTE PTR [eax],al
  423a2a:	xor    bh,bh
  423a2c:	call   0x6124a902
  423a31:	add    BYTE PTR [eax],al
  423a33:	int3   
  423a34:	push   0xffccff79
  423a39:	adc    DWORD PTR [ecx+ecx*4+0x15],0x20
  423a3e:	sahf   
  423a3f:	xchg   edx,eax
  423a40:	jns    0x423a0e
  423a42:	add    bh,bh
  423a44:	ret    0xff4d
  423a47:	add    bh,bh
  423a49:	mov    DWORD PTR [edi],ebx
  423a4b:	call   DWORD PTR [ebx+0x27]
  423a4e:	(bad)  
  423a4f:	popf   
  423a50:	ins    BYTE PTR es:[edi],dx
  423a51:	inc    DWORD PTR [eax]
  423a53:	add    ch,al
  423a55:	push   ds
  423a56:	inc    DWORD PTR [ebx-0x7cf13301]
  423a5c:	ficom  WORD PTR [ebp+0x4d]
  423a5f:	(bad)  
  423a60:	lds    eax,FWORD PTR [eax]
  423a62:	inc    DWORD PTR [ebx-0x33ff3608]
  423a68:	(bad)  
  423a69:	push   DWORD PTR [esi+0x5a1b8b83]
  423a6f:	fnstenv [eax+0x60000ff]
  423a75:	mov    cl,0xcc
  423a77:	(bad)  
  423a78:	(bad)  
  423a79:	jmp    DWORD PTR [ebp+0x0]
  423a7c:	pop    edx
  423a7d:	popa   
  423a7e:	fdivr  DWORD PTR [ebp+eiz*8+0x0]
  423a82:	add    BYTE PTR [eax],al
  423a84:	lods   al,BYTE PTR ds:[esi]
  423a85:	mov    DWORD PTR [eax],0x88ccff83
  423a8b:	add    DWORD PTR [edx+0x6f419806],0xffffffcc
  423a92:	add    bh,bh
  423a94:	push   0x8
  423a96:	(bad)  
  423a97:	(bad)  
  423a98:	inc    DWORD PTR [ebx-0x76dfffe]
  423a9e:	inc    esi
  423a9f:	idiv   DWORD PTR [edi-0x62000001]
  423aa5:	(bad)  
  423aa6:	inc    DWORD PTR [eax]
  423aa8:	inc    DWORD PTR [eax]
  423aaa:	sub    edi,edi
  423aac:	push   ds
  423aad:	repnz mov al,ds:0x8389a799
  423ab3:	cmp    esp,0xffffff80
  423ab6:	add    DWORD PTR [eax],0xffffffff
  423ab9:	inc    DWORD PTR [eax+eax*1-0x14]
  423abd:	lods   al,BYTE PTR ds:[esi]
  423abe:	jp     0x423a50
  423ac0:	test   esp,ecx
  423ac2:	inc    DWORD PTR [eax]
  423ac4:	mov    ch,dh
  423ac6:	add    bh,bh
  423ac8:	add    DWORD PTR [eax],0xffffff9f
  423acb:	(bad)  
  423acc:	(bad)  
  423ace:	in     eax,dx
  423acf:	pop    edx
  423ad0:	mov    esp,0x6aff89ff
  423ad5:	lock add DWORD PTR [eax],0xffffffff
  423ad9:	push   DWORD PTR [eax+0x4fa7e7ff]
  423adf:	adc    eax,0xffffc7
  423ae4:	lods   al,BYTE PTR ds:[esi]
  423ae5:	jne    0x423ae6
  423ae7:	(bad)  
  423ae8:	inc    DWORD PTR [eax]
  423aea:	in     eax,dx
  423aeb:	add    BYTE PTR [ebp+ecx*8-0x7f],bh
  423aef:	fldcw  WORD PTR [esi-0x34]
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    al,0xd5
  423af6:	cmp    edi,0xffffff83
  423af9:	add    BYTE PTR [ecx],ah
  423afb:	push   DWORD PTR [edi+edi*1-0x2c]
  423aff:	add    al,0x64
  423b01:	dec    esp
  423b03:	repnz mov esp,0xd17189ff
  423b09:	dec    esp
  423b0b:	in     al,dx
  423b0c:	fcos   
  423b0e:	add    BYTE PTR [edx-0x2b],al
  423b11:	cmp    edi,0xa
  423b14:	sbb    BYTE PTR [ebx-0x33bfa101],al
  423b1a:	push   DWORD PTR [esi-0x4]
  423b1d:	inc    DWORD PTR [eax]
  423b1f:	pop    ecx
  423b20:	out    dx,al
  423b21:	int3   
  423b22:	(bad)  
  423b23:	cli    
  423b24:	ds add bh,bh
  423b27:	mov    al,ds:0x290083f0
  423b2c:	sbb    edi,edi
  423b2e:	and    DWORD PTR [ecx-0x7ff7cd0],0xd
  423b35:	(bad)  
  423b36:	(bad)  
  423b37:	out    dx,al
  423b38:	jns    0x423b3a
  423b3a:	dec    esi
  423b3c:	ja     0x423b3d
  423b3e:	inc    DWORD PTR [eax]
  423b40:	inc    eax
  423b41:	(bad)  
  423b42:	(bad)  
  423b43:	fistp  DWORD PTR [ecx+ecx*4]
  423b46:	push   ebx
  423b48:	ins    BYTE PTR es:[edi],dx
  423b49:	(bad)  
  423b4a:	(bad)  
  423b4b:	fld    DWORD PTR [edx-0x6e1fff34]
  423b51:	int3   
  423b52:	inc    DWORD PTR [edx-0x6f]
  423b55:	add    bh,bh
  423b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b58:	jno    0x423b59
  423b5a:	xor    DWORD PTR [edx-0x48],0x0
  423b5e:	jmp    DWORD PTR [ebx+0x56ffff45]
  423b64:	push   ss
  423b65:	(bad)  
  423b66:	dec    DWORD PTR [ecx+0x11]
  423b69:	add    bh,bh
  423b6b:	mov    ebp,0x28ffff5e
  423b70:	mov    edx,0x21e7ffff
  423b75:	add    DWORD PTR [ebx-0x76d3b8],0x7f
  423b7c:	jmp    0x0:0xd6b90000
  423b83:	bound  ebp,QWORD PTR [eax+0x39f800ff]
  423b89:	int3   
  423b8a:	or     esp,0xffffffdc
  423b8d:	add    BYTE PTR [ebx-0x7600c037],al
  423b93:	fist   WORD PTR [ebx+eax*4-0x7d]
  423b97:	push   esp
  423b98:	dec    ebx
  423b99:	cmp    edi,0x53
  423b9c:	sbb    bh,bh
  423b9e:	add    bl,al
  423ba0:	arpl   WORD PTR [ecx-0x98a801],cx
  423ba6:	push   DWORD PTR [esi+0x3a]
  423ba9:	inc    DWORD PTR [ebx-0xff4ead]
  423baf:	rol    ebp,cl
  423bb1:	add    bh,bh
  423bb3:	pop    ebx
  423bb4:	adc    DWORD PTR [ecx-0x3334a501],ecx
  423bba:	mov    DWORD PTR [eax-0x4b00ff0d],ebp
  423bc0:	xor    al,0xff
  423bc2:	(bad)  
  423bc3:	jge    0x423bf3
  423bc5:	add    BYTE PTR [eax],al
  423bc7:	loopne 0x423b76
  423bc9:	dec    esp
  423bcb:	fstp   DWORD PTR [edi+0x0]
  423bce:	call   DWORD PTR [ebp-0x537c334f]
  423bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bd5:	int3   
  423bd6:	push   DWORD PTR [eax+ebp*2]
  423bd9:	cmp    edi,0xffffff82
  423bdc:	idiv   edi
  423bde:	mov    DWORD PTR [ecx+ebp*8+0x23e6ffcc],ebx
  423be5:	add    BYTE PTR [ebx-0x7676faba],al
  423beb:	lea    esp,[edx-0x2682ff7d]
  423bf1:	add    bh,bh
  423bf3:	sar    BYTE PTR [ecx-0x54780000],1
  423bf9:	add    bh,bh
  423bfb:	adc    dh,dh
  423bfd:	inc    DWORD PTR [ebx-0x7c00e184]
  423c03:	mov    edx,ebp
  423c05:	add    DWORD PTR [ebx-0x33ff2bec],0xffffffd1
  423c0c:	add    eax,0x2658ffcc
  423c11:	int3   
  423c12:	int3   
  423c13:	xor    al,0x67
  423c15:	(bad)  
  423c16:	(bad)  
  423c17:	clc    
  423c18:	cmp    al,0x0
  423c1a:	inc    DWORD PTR [edi]
  423c1c:	or     edi,edi
  423c1e:	mov    DWORD PTR [edi+0xcff8388],esi
  423c24:	sub    bh,bh
  423c26:	(bad)  
  423c27:	jp     0x423c56
  423c29:	mov    edi,edi
  423c2b:	push   eax
  423c2c:	sub    al,0x0
  423c2e:	add    BYTE PTR [ebp+0x46],al
  423c31:	int3   
  423c32:	add    ch,ah
  423c34:	xchg   BYTE PTR [eax],al
  423c36:	dec    DWORD PTR [ebx]
  423c38:	push   edx
  423c39:	(bad)  
  423c3a:	call   DWORD PTR [ecx+0x40]
  423c3d:	inc    DWORD PTR [ebx-0xf842]
  423c43:	dec    ebx
  423c44:	ss (bad) 
  423c46:	(bad)  
  423c47:	call   0x910f3ba2
  423c4c:	and    edi,edi
  423c4e:	sbb    DWORD PTR [edi],0x2f
  423c51:	or     DWORD PTR [ecx-0xb513],0xffffffd3
  423c58:	xchg   ebp,eax
  423c59:	mov    edi,edi
  423c5b:	sub    eax,0x4cff836c
  423c60:	ss dec esp
  423c63:	push   0xbeff83d9
  423c68:	dec    eax
  423c69:	add    DWORD PTR [eax],0x2d
  423c6c:	push   ebp
  423c6d:	add    BYTE PTR [ebx-0xff73ef],al
  423c73:	pop    esp
  423c74:	inc    esp
  423c75:	mov    edi,edi
  423c77:	(bad)  
  423c78:	out    0xff,al
  423c7a:	add    BYTE PTR [eax],cl
  423c7c:	sbb    bh,bh
  423c7e:	call   FWORD PTR [ebp-0x3300ffac]
  423c84:	dec    esp
  423c85:	mov    DWORD PTR [eax],eax
  423c87:	fiadd  DWORD PTR [esi+0x200083ff]
  423c8d:	(bad)  
  423c8e:	(bad)  
  423c8f:	fdiv   QWORD PTR [ecx+0x512100ff]
  423c95:	add    bh,bh
  423c97:	mov    bl,0x9d
  423c99:	(bad)  
  423c9a:	jmp    DWORD PTR [edx+edx*1]
  423c9d:	add    bh,bh
  423c9f:	xchg   DWORD PTR [ebx-0x198c7700],edi
  423ca5:	dec    DWORD PTR [ecx-0x76ee5b]
  423cab:	fcmovu st,st(0)
  423cad:	add    bh,bh
  423caf:	jmp    0xd8433c1a
  423cb4:	addr16 (bad) 
  423cb6:	call   DWORD PTR [edi+0x45]
  423cb9:	dec    DWORD PTR [ecx+0xd752]
  423cbf:	xor    eax,0x9700003b
  423cc4:	outs   dx,BYTE PTR ds:[esi]
  423cc5:	add    BYTE PTR [eax],al
  423cc7:	jmp    0x423d30
  423cc9:	(bad)  
  423cca:	jmp    DWORD PTR [esi-0x20007c6f]
  423cd0:	out    dx,eax
  423cd1:	cmp    edi,0xffffff8e
  423cd4:	dec    ebx
  423cd5:	int3   
  423cd6:	dec    edi
  423cd8:	dec    ecx
  423cd9:	inc    DWORD PTR [eax]
  423cdb:	adc    BYTE PTR [ebx-0x61950100],bh
  423ce1:	(bad)  
  423ce2:	(bad)  
  423ce3:	fist   DWORD PTR [edi+edi*8+0xef2383]
  423cea:	push   DWORD PTR ds:0x8cffffe0
  423cf0:	outs   dx,DWORD PTR ds:[esi]
  423cf1:	inc    DWORD PTR [ebx-0x334c5f]
  423cf7:	ficom  WORD PTR [ecx+0x0]
  423cfa:	add    BYTE PTR [ecx+0x1600ffd2],bl
  423d00:	(bad)
  423d03:	mov    al,ds:0x2700ff7c
  423d08:	aaa    
  423d09:	add    BYTE PTR [ebx-0x33cea7],al
  423d0f:	dec    esp
  423d10:	sub    bh,bh
  423d12:	(bad)  
  423d13:	out    dx,eax
  423d14:	mov    eax,0x5eb983cc
  423d19:	int3   
  423d1a:	add    ecx,0xffffffe4
  423d1d:	(bad)  
  423d1e:	(bad)  
  423d1f:	clc    
  423d20:	and    al,BYTE PTR [eax]
  423d22:	inc    DWORD PTR [esi-0xb3300a0]
  423d28:	aas    
  423d29:	(bad)  
  423d2a:	jmp    DWORD PTR [esi+0x3b]
  423d2d:	add    bh,bh
  423d2f:	test   edi,edi
  423d31:	(bad)  
  423d32:	dec    edx
  423d34:	loop   0x423cb9
  423d36:	add    BYTE PTR [esi-0x7fff0070],ah
  423d3c:	xchg   ecx,eax
  423d3d:	add    BYTE PTR [ebx-0xffd493],al
  423d43:	jae    0x423d37
  423d45:	add    BYTE PTR [eax],al
  423d47:	add    eax,DWORD PTR [eax+eax*1]
  423d4a:	adc    esi,0xffffffc5
  423d4d:	add    bh,bh
  423d4f:	lods   eax,DWORD PTR ds:[esi]
  423d50:	(bad)  
  423d51:	(bad)  
  423d52:	push   esi
  423d54:	sub    cl,ah
  423d56:	call   DWORD PTR [ebp+0x77008930]
  423d5c:	aas    
  423d5d:	add    BYTE PTR [eax],al
  423d5f:	fst    DWORD PTR [ebx-0x1]
  423d62:	inc    DWORD PTR [esi]
  423d64:	inc    eax
  423d65:	inc    DWORD PTR [eax]
  423d67:	cmp    ebx,0xffffffff
  423d6a:	inc    DWORD PTR ds:0x11ff00a7
  423d70:	hlt    
  423d71:	(bad)  
  423d72:	(bad)  
  423d73:	cmp    dl,dl
  423d75:	inc    DWORD PTR [ebx+0xff3f0e]
  423d7b:	test   di,di
  423d7e:	(bad)  
  423d7f:	cmp    DWORD PTR [edx-0x2c0cff01],ebx
  423d85:	add    DWORD PTR [eax],0x77
  423d88:	daa    
  423d89:	inc    DWORD PTR [ebx-0xff8b0e]
  423d8f:	in     eax,dx
  423d90:	or     ah,0x0
  423d93:	sub    dl,BYTE PTR [edi+edi*8+0x1379ff]
  423d9a:	sbb    DWORD PTR [ecx],0xffffffb1
  423d9d:	(bad)  
  423d9e:	dec    DWORD PTR [ebp-0x4500ff5b]
  423da4:	addr16 (bad) 
  423da6:	(bad)  
  423da7:	out    dx,eax
  423da8:	or     BYTE PTR [eax],al
  423daa:	add    BYTE PTR [esi+0x68],ch
  423dad:	add    DWORD PTR [ebx+0xff504c],0x7a
  423db4:	cwde   
  423db5:	inc    DWORD PTR [ebx+0x14a3]
  423dbb:	adc    DWORD PTR [esi-0x1],0xffffffff
  423dbf:	ret    
  423dc0:	adc    eax,0x2297ffff
  423dc5:	inc    DWORD PTR [eax]
  423dc7:	pop    ecx
  423dc8:	jb     0x423dc9
  423dca:	int3   
  423dcb:	push   eax
  423dcc:	aad    0x0
  423dce:	dec    DWORD PTR [ebx+0x6c83ff80]
  423dd4:	and    bh,bh
  423dd6:	push   DWORD PTR [edi-0x4e767c20]
  423ddc:	addr16 add bh,bh
  423ddf:	(bad)  
  423de0:	jl     0x423de2
  423de2:	jmp    DWORD PTR [ebx+0x32]
  423de5:	cmp    edi,0xb
  423de8:	jbe    0x423dea
  423dea:	add    ch,ch
  423dec:	pop    ebp
  423ded:	add    BYTE PTR [eax],al
  423def:	neg    BYTE PTR [eax-0x1]
  423df2:	sbb    ebx,0x6
  423df5:	inc    DWORD PTR [eax]
  423df7:	pop    ds
  423df8:	mov    edi,edi
  423dfa:	add    BYTE PTR [edi-0x4700007b],bl
  423e00:	stos   BYTE PTR es:[edi],al
  423e01:	add    BYTE PTR [eax],al
  423e03:	sub    BYTE PTR [esi],ch
  423e05:	(bad)  
  423e06:	push   DWORD PTR [ebx-0x25ff000d]
  423e0c:	inc    DWORD PTR ss:[eax]
  423e0f:	mov    esi,0x7500ff21
  423e14:	jmp    0x83ff:0x886ffff
  423e1b:	ins    BYTE PTR es:[edi],dx
  423e1c:	push   es
  423e1d:	int3   
  423e1e:	cmp    DWORD PTR [ecx+0x49],0xffffffff
  423e22:	inc    DWORD PTR [esi+edi*2-0x7d]
  423e26:	add    BYTE PTR [ebp-0x13],dl
  423e29:	add    BYTE PTR [ebx+0xff41cf],al
  423e2f:	sbb    eax,0x8600ff05
  423e34:	out    0xff,eax
  423e36:	push   DWORD PTR [ebx-0x6c]
  423e39:	cmp    edi,0x10
  423e3c:	mov    ecx,esp
  423e3e:	call   FWORD PTR [esi+0x6283005f]
  423e44:	mov    eax,ds:0x3e4889cc
  423e49:	(bad)  
  423e4a:	push   DWORD PTR [ebp-0xb]
  423e4d:	add    DWORD PTR [ebx-0x9144],0xffffffef
  423e54:	popa   
  423e55:	add    BYTE PTR [ebx-0xffeeb2],al
  423e5b:	iret   
  423e5c:	mov    esi,0x937200ff
  423e61:	add    BYTE PTR [eax],al
  423e63:	fimul  WORD PTR [edi+edi*8-0x7cf05901]
  423e6a:	inc    ebp
  423e6c:	jne    0x423e3a
  423e6e:	push   ebx
  423e70:	mov    ch,0x0
  423e72:	or     esp,0xfffffffd
  423e75:	dec    DWORD PTR [ecx-0xb7cc]
  423e7b:	repnz outs dx,BYTE PTR ds:[esi]
  423e7d:	inc    DWORD PTR [eax]
  423e7f:	out    0xa,eax
  423e81:	int3   
  423e82:	inc    DWORD PTR [edi-0x55]
  423e85:	add    DWORD PTR [eax],0x53
  423e88:	and    bh,bh
  423e8a:	add    dl,bh
  423e8c:	jp     0x423e8e
  423e8e:	add    BYTE PTR [edi-0x3b000017],bl
  423e94:	dec    ebp
  423e95:	or     DWORD PTR [ecx-0xffc442],0xffffffc2
  423e9c:	cmc    
  423e9d:	mov    edi,edi
  423e9f:	add    BYTE PTR [eax-0x7d],ch
  423ea2:	jmp    FWORD PTR [esi-0x48000004]
  423ea8:	ins    BYTE PTR es:[edi],dx
  423ea9:	(bad)  
  423eaa:	jmp    DWORD PTR [ecx]
  423eac:	push   ss
  423ead:	add    BYTE PTR [eax],al
  423eaf:	cmp    al,0xac
  423eb1:	add    BYTE PTR [ebx-0xff1618],al
  423eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eb8:	xchg   esp,eax
  423eb9:	dec    esp
  423ebb:	inc    ecx
  423ebc:	out    0xff,al
  423ebe:	dec    DWORD PTR [eax+0x1e]
  423ec1:	add    BYTE PTR [eax],al
  423ec3:	jns    0x423eb4
  423ec5:	dec    esp
  423ec7:	adc    eax,DWORD PTR [esi-0x34]
  423eca:	add    al,ah
  423ecc:	jbe    0x423ece
  423ece:	inc    DWORD PTR [eax-0x2d00ffb9]
  423ed4:	popa   
  423ed5:	add    BYTE PTR [eax],al
  423ed7:	out    0xc2,eax
  423ed9:	dec    esp
  423edb:	(bad)  
  423edc:	push   ebp
  423edd:	add    bh,bh
  423edf:	jne    0x423ef8
  423ee1:	add    DWORD PTR [eax],0x59
  423ee4:	xlat   BYTE PTR ds:[ebx]
  423ee5:	dec    DWORD PTR [ecx-0xff4fef]
  423eeb:	cdq    
  423eec:	adc    BYTE PTR [eax],al
  423eee:	jmp    DWORD PTR [esi-0x4b]
  423ef1:	int3   
  423ef2:	(bad)  
  423ef3:	mov    ebx,0xfff006d
  423ef8:	das    
  423ef9:	add    DWORD PTR [eax],0xffffff83
  423efc:	pop    eax
  423efd:	dec    DWORD PTR [ecx-0x335e49]
  423f03:	in     al,dx
  423f04:	fld    QWORD PTR [eax]
  423f06:	(bad)  
  423f07:	mov    ebp,0xc0ffcc4b
  423f0c:	adc    eax,DWORD PTR [eax]
  423f0e:	int3   
  423f0f:	sbb    edx,edx
  423f11:	(bad)  
  423f12:	(bad)  
  423f13:	clc    
  423f14:	push   edx
  423f15:	mov    DWORD PTR [ecx+0xf177],ecx
  423f1b:	(bad)  
  423f1c:	cli    
  423f1d:	inc    DWORD PTR [ebx-0x72a3]
  423f23:	dec    esi
  423f24:	test   bh,bh
  423f26:	add    BYTE PTR ds:0xfb000023,ah
  423f2c:	daa    
  423f2d:	mov    DWORD PTR [eax],eax
  423f2f:	mov    es,ebx
  423f31:	(bad)  
  423f32:	(bad)  
  423f33:	cmp    DWORD PTR [eax],ebx
  423f35:	(bad)  
  423f36:	jmp    FWORD PTR [eax+0x2c83ccf9]
  423f3c:	inc    edx
  423f3d:	int3   
  423f3e:	add    BYTE PTR [ebx],cl
  423f40:	ja     0x423ec5
  423f42:	inc    DWORD PTR [edi+edi*1+0x0]
  423f46:	add    BYTE PTR [ecx+0x56ccff73],cl
  423f4c:	or     al,0x0
  423f4e:	call   ebx
  423f50:	test   BYTE PTR [ecx-0x762f1c01],cl
  423f56:	or     DWORD PTR [ebx+0x73898301],0x26
  423f5d:	add    bh,bh
  423f5f:	xor    WORD PTR [eax],ax
  423f62:	push   esi
  423f64:	fdiv   st(7),st
  423f66:	jmp    FWORD PTR [edx]
  423f68:	mov    WORD PTR [ebx-0x5c4c01],es
  423f6e:	call   DWORD PTR [edx-0x22]
  423f71:	add    bh,bh
  423f73:	jae    0x423f5e
  423f75:	add    bh,bh
  423f77:	jne    0x423ff8
  423f79:	add    bh,bh
  423f7b:	cwde   
  423f7c:	out    dx,al
  423f7d:	(bad)  
  423f7e:	call   DWORD PTR [eax]
  423f80:	cs cmp edi,0x32
  423f84:	cmp    BYTE PTR [eax],al
  423f86:	push   DWORD PTR [ebx]
  423f88:	mov    bh,bh
  423f8a:	(bad)  
  423f8b:	call   FWORD PTR [ecx]
  423f8d:	add    bh,bh
  423f8f:	sti    
  423f90:	nop
  423f91:	add    BYTE PTR [ecx-0x7c4656],cl
  423f97:	scas   al,BYTE PTR es:[edi]
  423f98:	pusha  
  423f99:	cmp    edi,0xffffff8b
  423f9c:	mov    ebx,0x9c9eff83
  423fa1:	inc    DWORD PTR [ebx+0xc452]
  423fa7:	fild   DWORD PTR [ebx]
  423fa9:	add    DWORD PTR [ebx-0x33ffb250],0xffffffca
  423fb0:	jecxz  0x423fb1
  423fb2:	push   ebp
  423fb4:	sti    
  423fb5:	mov    edi,edi
  423fb7:	not    DWORD PTR [edi]
  423fb9:	add    bh,bh
  423fbb:	fcom   QWORD PTR [edi+edi*8]
  423fbe:	(bad)  
  423fbf:	mov    ebp,0xfb00ff38
  423fc4:	test   DWORD PTR [eax],eax
  423fc6:	mov    DWORD PTR [ecx+0x61],eax
  423fc9:	(bad)  
  423fca:	(bad)  
  423fcb:	cmp    eax,0xb5830044
  423fd0:	push   ss
  423fd1:	inc    DWORD PTR [eax]
  423fd3:	rol    BYTE PTR [esi-0x2a60001],1
  423fd9:	inc    DWORD PTR [eax]
  423fdb:	xor    eax,0xf8ff00f1
  423fe0:	cmp    al,BYTE PTR [ebx-0x7caf8a7d]
  423fe6:	add    BYTE PTR [esi],cl
  423fe8:	or     eax,DWORD PTR [eax]
  423fea:	add    BYTE PTR [ebx+ebx*8-0x20940100],ah
  423ff1:	int3   
  423ff2:	(bad)  
  423ff3:	in     al,dx
  423ff4:	sub    al,0x0
  423ff6:	(bad)  
  423ff7:	(bad)  
  423ff8:	cli    
  423ff9:	add    bh,bh
  423ffb:	mov    WORD PTR [eax-0x34],es
  423ffe:	add    BYTE PTR [ecx+eax*4],dl
  424001:	mov    edi,edi
  424003:	adc    eax,0x9489ff06
  424008:	cli    
  424009:	dec    esp
  42400b:	mov    dh,0x6
  42400d:	add    bh,bh
  42400f:	loopne 0x424084
  424011:	add    BYTE PTR [ecx+0x89be13],cl
  424017:	out    0x1c,al
  424019:	add    bh,bh
  42401b:	pop    eax
  42401c:	cli    
  42401d:	dec    DWORD PTR [ecx-0x767c5aaf]
  424023:	jmp    0xa7c60c83
  424028:	mov    dh,0xff
  42402a:	sbb    DWORD PTR [eax-0x3],0x0
  42402e:	xor    DWORD PTR [ebx+0x6b],0xffffffff
  424032:	call   FWORD PTR [ebp+0x6b]
  424035:	inc    DWORD PTR [ebx+0xff2e95]
  42403b:	test   eax,0xa400cc9e
  424040:	and    ecx,esp
  424042:	push   DWORD PTR [ecx+eax*1]
  424045:	int3   
  424046:	add    ah,dl
  424048:	jp     0x424049
  42404a:	dec    DWORD PTR [eax+eax*4]
  42404d:	add    bh,bh
  42404f:	or     edx,eax
  424051:	mov    DWORD PTR [ebx+0xcc650b],eax
  424057:	push   cs
  424058:	mov    esp,0xfed700ff
  42405d:	mov    edi,edi
  42405f:	or     DWORD PTR ds:0x64d40083,eax
  424065:	add    bh,bh
  424067:	sub    esi,esi
  424069:	add    BYTE PTR [eax],al
  42406b:	xchg   esi,eax
  42406c:	test   esp,ecx
  42406e:	add    DWORD PTR [esp+edx*1],0x0
  424072:	add    DWORD PTR [ebp-0x10ff004b],0x3b
  424079:	(bad)  
  42407a:	inc    DWORD PTR [esi]
  42407c:	push   cs
  42407d:	int3   
  42407e:	add    BYTE PTR [ebp-0x2e7c7cfd],dl
  424084:	idiv   edi
  424086:	push   DWORD PTR [eax-0x24]
  424089:	add    BYTE PTR [ecx-0x7cff3505],cl
  42408f:	dec    edi
  424090:	jl     0x424091
  424092:	add    BYTE PTR [esp+esi*8],al
  424095:	add    bh,bh
  424097:	fs push 0xd4d1ccff
  42409d:	add    ah,cl
  42409f:	test   eax,0x57cc83fe
  4240a4:	inc    edx
  4240a5:	add    bh,bh
  4240a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240a8:	jo     0x4240a9
  4240aa:	dec    DWORD PTR [edx]
  4240ac:	mov    es,WORD PTR [eax]
  4240ae:	jmp    FWORD PTR [ebx]
  4240b0:	mov    ebp,0x22ea8900
  4240b5:	int3   
  4240b6:	add    BYTE PTR [ebx+0x22],cl
  4240b9:	add    BYTE PTR [eax],al
  4240bb:	aam    0x39
  4240bd:	inc    DWORD PTR [eax]
  4240bf:	(bad)  
  4240c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240c1:	dec    esp
  4240c3:	push   DWORD PTR [edi+edi*8+0xb9c600]
  4240ca:	sub    DWORD PTR [ebp-0x52],0xffffffcc
  4240ce:	(bad)  
  4240cf:	jp     0x424105
  4240d1:	int3   
  4240d2:	(bad)  
  4240d3:	aas    
  4240d4:	xlat   BYTE PTR ds:[ebx]
  4240d5:	int3   
  4240d6:	(bad)  
  4240d7:	jns    0x4240d6
  4240d9:	mov    edi,edi
  4240db:	mov    ebp,0xbe0000d4
  4240e0:	test   eax,0x171eff00
  4240e5:	(bad)  
  4240e6:	jmp    edi
  4240e8:	mov    esp,0xcb40ff00
  4240ed:	int3   
  4240ee:	int3   
  4240ef:	xor    DWORD PTR fs:[ebx-0xa4ac01],eax
  4240f6:	add    BYTE PTR [ecx],al
  4240f8:	mov    ecx,esp
  4240fa:	(bad)  
  4240fb:	cld    
  4240fc:	or     bh,bh
  4240fe:	add    al,ch
  424100:	addr16 cmp edi,0xffffffde
  424104:	pusha  
  424105:	(bad)  
  424106:	call   DWORD PTR [ebx]
  424108:	jmp    0xe49f0e0c
  42410d:	or     esp,0xfffffffc
  424110:	ins    BYTE PTR es:[edi],dx
  424111:	(bad)  
  424112:	dec    DWORD PTR [ecx+0x4effffac]
  424118:	(bad)  
  42411a:	add    BYTE PTR [ecx],ch
  42411c:	mov    ah,0xff
  42411e:	jmp    FWORD PTR [esi-0x20000f1]
  424124:	idiv   bh
  424126:	call   esp
  424128:	idiv   edi
  42412a:	or     DWORD PTR [ecx],0x5e
  42412d:	dec    DWORD PTR [ecx+0xff0b65]
  424133:	sub    eax,0x8500cc13
  424138:	cmp    DWORD PTR [eax],eax
  42413a:	call   DWORD PTR [edx+0x66]
  42413d:	add    BYTE PTR [eax],al
  42413f:	cmp    dh,BYTE PTR [ebp-0x1]
  424142:	adc    esi,0x73
  424145:	(bad)  
  424146:	(bad)  
  424147:	in     eax,dx
  424148:	lods   eax,DWORD PTR ds:[esi]
  424149:	(bad)  
  42414a:	dec    DWORD PTR [esi-0x5e00009e]
  424150:	adc    DWORD PTR [ebx-0x30957d],eax
  424156:	add    DWORD PTR [ecx],0xffffffc0
  424159:	inc    DWORD PTR [ebx-0xffe329]
  42415f:	push   eax
  424160:	retf   
  424161:	add    BYTE PTR [eax],al
  424163:	add    eax,0x96838902
  424168:	cmp    al,BYTE PTR [eax]
  42416a:	add    bl,dl
  42416c:	mov    ds:0x615aff83,al
  424171:	int3   
  424172:	add    esp,0x62
  424175:	add    BYTE PTR [eax],al
  424177:	rcr    BYTE PTR [ecx+0x3fa483ff],0x83
  42417e:	add    BYTE PTR [ebp+0x1],dl
  424181:	add    BYTE PTR [eax],al
  424183:	out    dx,al
  424184:	push   esi
  424185:	add    bh,bh
  424187:	loop   0x4241ab
  424189:	add    BYTE PTR [eax],al
  42418b:	scas   al,BYTE PTR es:[edi]
  42418c:	cs (bad) 
  42418e:	call   FWORD PTR [edi]
  424190:	cwde   
  424191:	(bad)  
  424192:	jmp    DWORD PTR [esi-0x73ffffad]
  424198:	sub    al,0xff
  42419a:	or     DWORD PTR [edi],0xffffffb5
  42419d:	inc    DWORD PTR [eax]
  42419f:	or     DWORD PTR [edx+0x0],0xffffffff
  4241a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241a4:	stc    
  4241a5:	add    BYTE PTR [eax],al
  4241a7:	add    edx,DWORD PTR [esi+0x1847cc00]
  4241ad:	inc    DWORD PTR [ebx-0xffc030]
  4241b3:	mov    ebx,0x460000c0
  4241b8:	ret    0x89
  4241bb:	cmp    esi,DWORD PTR [ecx]
  4241bd:	inc    DWORD PTR [eax]
  4241bf:	xchg   ebp,eax
  4241c0:	call   0xffff:0x1f64ffff
  4241c7:	(bad)  
  4241c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241c9:	add    ah,cl
  4241cb:	adc    esp,DWORD PTR [ecx-0x1]
  4241ce:	add    cl,ah
  4241d0:	and    BYTE PTR [ebx-0x76413201],al
  4241d6:	inc    DWORD PTR [ebx+0x2d]
  4241d9:	add    BYTE PTR [eax],al
  4241db:	mov    ecx,0x5d830094
  4241e0:	rol    DWORD PTR [eax],1
  4241e2:	mov    ebp,ebx
  4241e4:	fdivp  st(7),st
  4241e6:	add    BYTE PTR [ecx],dh
  4241e8:	mov    bl,0x89
  4241ea:	mov    esp,ecx
  4241ec:	jno    0x4241ee
  4241ee:	add    BYTE PTR [ebx],cl
  4241f0:	ins    DWORD PTR es:[edi],dx
  4241f1:	(bad)  
  4241f2:	call   DWORD PTR [esp+ebp*4]
  4241f5:	add    BYTE PTR [eax],al
  4241f7:	push   ds
  4241f8:	lock (bad) 
  4241fa:	call   DWORD PTR [esi-0x73]
  4241fd:	int3   
  4241fe:	int3   
  4241ff:	inc    ecx
  424200:	loope  0x424202
  424202:	cmp    DWORD PTR [ebx+0x42],0x0
  424206:	int3   
  424207:	repz inc DWORD PTR es:[ebx-0x333323f8]
  42420f:	in     al,dx
  424210:	fs (bad) 
  424212:	(bad)  
  424213:	cld    
  424214:	ror    BYTE PTR [ecx-0x294b01],1
  42421a:	add    BYTE PTR [edx+0x1bffff94],cl
  424220:	add    DWORD PTR [ebx-0x33f9aa00],0xff719eff
  42422a:	inc    ebx
  42422c:	mov    edx,0xe172ffff
  424231:	dec    esp
  424233:	dec    eax
  424234:	nop
  424235:	add    BYTE PTR [ecx-0xfffec4],cl
  42423b:	bound  ebx,QWORD PTR [esi-0x77]
  42423e:	add    BYTE PTR [ebx-0x7003333],bh
  424244:	xor    al,BYTE PTR [eax]
  424246:	call   DWORD PTR [ebp+0x4400cc5e]
  42424c:	push   esi
  42424d:	add    BYTE PTR [eax],al
  42424f:	(bad)  
  424250:	sub    al,0x89
  424252:	add    BYTE PTR [edx-0x7],dh
  424255:	(bad)  
  424256:	(bad)  
  424257:	sti    
  424258:	mov    WORD PTR [eax],es
  42425a:	jmp    DWORD PTR [ebx+ebx*2-0x486c0001]
  424261:	int3   
  424262:	add    BYTE PTR [edi],dl
  424264:	call   0x83ff:0xac4400ff
  42426b:	adc    al,BYTE PTR [edi+0x9a300ff]
  424271:	add    DWORD PTR [eax],0xffffffa3
  424274:	rol    BYTE PTR [eax],cl
  424276:	int3   
  424277:	or     eax,0x4cc002d
  42427c:	lahf   
  42427d:	add    ah,cl
  42427f:	pusha  
  424280:	jle    0x424282
  424282:	add    BYTE PTR [eax],dl
  424284:	nop
  424285:	add    bh,bh
  424287:	inc    esp
  424288:	xchg   edi,eax
  424289:	add    bh,bh
  42428b:	dec    edx
  42428c:	ins    DWORD PTR es:[edi],dx
  42428d:	mov    DWORD PTR [eax],eax
  42428f:	inc    ecx
  424290:	pop    edx
  424291:	cmp    edi,0x19
  424294:	das    
  424295:	(bad)  
  424296:	dec    esp
  424298:	popf   
  424299:	inc    DWORD PTR [ebx+0xff52a9]
  42429f:	pushf  
  4242a0:	or     edi,edi
  4242a2:	int3   
  4242a3:	data16 (bad) 
  4242a5:	inc    DWORD PTR [ebx+0xd066]
  4242ab:	imul   eax,edi,0x0
  4242ae:	call   DWORD PTR [edx+0xbffff2e]
  4242b4:	dec    esp
  4242b5:	add    BYTE PTR [ebx-0x33fa77],al
  4242bb:	dec    edx
  4242bc:	enter  0x83ff,0x6
  4242c0:	and    edi,edi
  4242c2:	mov    DWORD PTR ds:0x7500ffe3,edi
  4242c8:	jbe    0x424253
  4242ca:	sbb    DWORD PTR ds:0x5189002a,0xffffffd9
  4242d1:	mov    DWORD PTR [ecx-0x76a9e0],ecx
  4242d7:	xchg   edi,eax
  4242d8:	jmp    0x4242d9
  4242da:	add    BYTE PTR [ebp+0x62ff83bb],cl
  4242e0:	ds add bh,bh
  4242e3:	ret    0xff23
  4242e6:	dec    DWORD PTR [esp+esi*1-0x26dc7d00]
  4242ed:	(bad)  
  4242ee:	(bad)  
  4242ef:	jp     0x424348
  4242f1:	cmp    edi,0x5b
  4242f4:	inc    edx
  4242f5:	dec    DWORD PTR [ecx-0x33fee9]
  4242fb:	sbb    edx,0xffffffff
  4242fe:	dec    DWORD PTR [esi+0x56]
  424301:	(bad)  
  424302:	jmp    FWORD PTR [eax]
  424304:	scas   eax,DWORD PTR es:[edi]
  424305:	add    BYTE PTR [eax],al
  424307:	call   0xffc7:0x33ffff52
  42430e:	jmp    DWORD PTR [ebx-0x47ff00c1]
  424314:	push   esi
  424315:	int3   
  424316:	int3   
  424317:	outs   dx,BYTE PTR ds:[esi]
  424318:	jmp    0xffff:0xeb22ccff
  42431f:	mov    BYTE PTR gs:[ecx+0x212a00],cl
  424326:	add    BYTE PTR [ecx-0x34ff7c4d],al
  42432c:	xchg   ebp,eax
  42432d:	inc    DWORD PTR [ebx-0xffa5e9]
  424333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424334:	mov    bh,bh
  424336:	add    BYTE PTR [eax+0x6b83ffbf],dh
  42433c:	add    al,0x0
  42433e:	add    BYTE PTR [edx-0x2f],ah
  424341:	(bad)  
  424342:	push   DWORD PTR [ecx]
  424344:	popf   
  424345:	(bad)  
  424346:	call   FWORD PTR [ebx]
  424348:	pop    esi
  424349:	(bad)  
  42434a:	(bad)  
  42434b:	jg     0x4243ad
  42434d:	dec    DWORD PTR [ecx+0x835738]
  424353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424354:	scas   al,BYTE PTR es:[edi]
  424355:	(bad)  
  424356:	push   DWORD PTR [edi]
  424358:	push   edx
  424359:	cmp    edi,0x42
  42435c:	loope  0x42435d
  42435e:	push   DWORD PTR [ecx+0x33]
  424361:	(bad)  
  424362:	dec    DWORD PTR [ecx-0x700076c7]
  424368:	lods   al,BYTE PTR ds:[esi]
  424369:	dec    DWORD PTR [ecx-0x2d2c]
  42436f:	call   0xe14143e8
  424374:	and    edi,edi
  424376:	call   DWORD PTR [ebx]
  424378:	inc    ebp
  424379:	int3   
  42437a:	(bad)  
  42437b:	fisttp QWORD PTR [eax]
  42437d:	cmp    edi,0xffffffaa
  424380:	jo     0x42434e
  424382:	add    BYTE PTR [ebx+0x750000fd],ah
  424388:	sbb    al,0xcc
  42438a:	int3   
  42438b:	add    BYTE PTR [eax+0x0],cl
  42438e:	mov    ebp,esp
  424390:	mov    al,ds:0xc93bffcc
  424395:	(bad)  
  424396:	inc    DWORD PTR [esi+0x43ff000a]
  42439c:	in     al,dx
  42439d:	add    bh,bh
  42439f:	sbb    eax,0x3cffcc84
  4243a4:	pop    eax
  4243a5:	add    bh,bh
  4243a7:	xor    BYTE PTR [edx+0x0],cl
  4243aa:	jmp    FWORD PTR [esi]
  4243ac:	inc    esi
  4243ad:	add    bh,bh
  4243af:	sub    ah,dl
  4243b1:	inc    DWORD PTR [eax]
  4243b3:	cmp    bh,BYTE PTR [eax-0x548c0077]
  4243b9:	inc    DWORD PTR [eax]
  4243bb:	adc    eax,0xbd00ff84
  4243c0:	mov    ds:0x3b13ffcc,al
  4243c5:	(bad)  
  4243c6:	(bad)  
  4243c7:	in     eax,dx
  4243c8:	xchg   ebx,eax
  4243c9:	add    ah,cl
  4243cb:	fcom   DWORD PTR [ecx-0x7d]
  4243ce:	add    BYTE PTR [ebp+edi*4-0x7d],bl
  4243d2:	push   DWORD PTR [eax-0x7fff7656]
  4243d8:	repz inc DWORD PTR [eax]
  4243db:	out    dx,al
  4243dc:	push   edi
  4243dd:	inc    DWORD PTR [eax]
  4243df:	cwde   
  4243e0:	into   
  4243e1:	add    bh,bh
  4243e3:	outs   dx,BYTE PTR ds:[esi]
  4243e4:	push   0xd3888300
  4243e9:	add    BYTE PTR [ebx+0xe446],al
  4243ef:	test   DWORD PTR [edx-0x7d],esi
  4243f2:	xor    DWORD PTR [esi+0x7f],0x0
  4243f6:	adc    DWORD PTR [ecx-0x32],0xffffff83
  4243fa:	add    BYTE PTR [ecx-0xe7c0017],dh
  424400:	push   es
  424401:	(bad)  
  424402:	inc    DWORD PTR [ecx]
  424404:	outs   dx,BYTE PTR ds:[esi]
  424405:	(bad)  
  424406:	dec    DWORD PTR [edx-0x56ff0004]
  42440c:	icebp  
  42440d:	inc    DWORD PTR [ebx-0x7cff15af]
  424413:	or     al,0x47
  424415:	(bad)  
  424416:	call   FWORD PTR [esi]
  424418:	xor    DWORD PTR [eax],eax
  42441a:	mov    ebp,eax
  42441c:	xor    bh,bh
  42441e:	add    BYTE PTR [esi-0x63ff00dc],dh
  424424:	jecxz  0x424425
  424426:	cmp    ebx,0x34
  424429:	int3   
  42442a:	call   FWORD PTR [eax]
  42442c:	and    bh,bh
  42442e:	add    BYTE PTR [ecx],bh
  424430:	mov    edx,0x230500ff
  424435:	add    BYTE PTR [eax],al
  424437:	mov    ecx,DWORD PTR [edi+edi*8+0x436500]
  42443e:	call   DWORD PTR [eax]
  424440:	push   0xffffff83
  424442:	jmp    DWORD PTR [edi]
  424444:	xor    bh,bh
  424446:	add    BYTE PTR [ebx],cl
  424448:	jg     0x42444a
  42444a:	inc    DWORD PTR [ecx]
  42444c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42444d:	int3   
  42444e:	add    BYTE PTR [eax-0x34ffff9c],al
  424454:	call   0x94524458
  424459:	(bad)  
  42445a:	jmp    esp
  42445c:	(bad)  
  42445d:	(bad)  
  42445e:	dec    edi
  424460:	sbb    edi,edi
  424462:	inc    DWORD PTR [edi+ebp*1]
  424465:	add    BYTE PTR [ebx-0x1ae6],al
  42446b:	and    ecx,edi
  42446d:	inc    DWORD PTR [ebx-0x7c6a76]
  424473:	test   DWORD PTR [eax-0x322c007d],0xbd90000
  42447d:	add    BYTE PTR [ebx+0xffff1f],al
  424483:	push   esi
  424484:	xchg   ecx,eax
  424485:	int3   
  424486:	cmp    ebx,0x5d
  424489:	add    bh,bh
  42448b:	jno    0x42450b
  42448d:	(bad)  
  42448e:	jmp    DWORD PTR [esi-0x49ff0068]
  424494:	add    eax,0xa7230083
  424499:	int3   
  42449a:	add    BYTE PTR [ecx+0x7],al
  42449d:	add    BYTE PTR [ebx-0x7633e7c0],al
  4244a3:	xchg   ecx,eax
  4244a4:	aas    
  4244a5:	(bad)  
  4244a6:	call   FWORD PTR [ecx-0xd]
  4244a9:	mov    DWORD PTR [eax],eax
  4244ab:	mov    ebp,0x2a83830e
  4244b0:	xor    eax,DWORD PTR [eax]
  4244b2:	inc    DWORD PTR [ebx]
  4244b4:	add    DWORD PTR [ebx-0x76d0e000],0x87de83
  4244be:	inc    DWORD PTR [edi+0x1c00ff05]
  4244c4:	ror    esp,1
  4244c6:	add    bh,dh
  4244c8:	mov    al,BYTE PTR [eax]
  4244ca:	jmp    DWORD PTR [ebx]
  4244cc:	fdivp  st(7),st
  4244ce:	push   DWORD PTR [edi]
  4244d0:	and    BYTE PTR [ebx-0xc417d],al
  4244d6:	jmp    FWORD PTR [ebx+0x13fffffa]
  4244dc:	sub    edi,edi
  4244de:	int3   
  4244df:	dec    ebp
  4244e0:	add    DWORD PTR [eax],0xff1ffeff
  4244e6:	inc    edi
  4244e8:	dec    esi
  4244e9:	(bad)  
  4244ea:	push   ecx
  4244ec:	mov    eax,ds:0x744eff00
  4244f1:	cmp    edi,0xffffffc3
  4244f4:	retf   
  4244f5:	(bad)  
  4244f6:	push   ecx
  4244f8:	fadd   DWORD PTR [ebx+0x628983]
  4244fe:	dec    DWORD PTR [ebx-0x74]
  424501:	add    bh,bh
  424503:	jmp    edx
  424505:	inc    DWORD PTR [ebx-0x33333400]
  42450b:	int3   
  42450c:	int3   
  42450d:	int3   
  42450e:	int3   
  42450f:	int3   
  424510:	mov    esp,ecx
  424512:	dec    esp
  424514:	or     esp,ecx
  424516:	or     esi,edi
  424518:	push   edi
  424519:	dec    ecx
  42451b:	dec    ebp
  42451c:	int3   
  42451d:	(bad)  
  42451e:	inc    DWORD PTR [eax]
  424520:	call   FWORD PTR [ebx-0x1]
  424523:	jmp    FWORD PTR [ebp-0x7b]
  424526:	jecxz  0x4244b7
  424528:	outs   dx,BYTE PTR ds:[esi]
  424529:	(bad)  
  42452a:	mov    esp,0x83009f
  42452f:	(bad)  
  424530:	(bad)  
  424531:	sti    
  424532:	add    bh,bh
  424534:	fs and eax,0x83f66c60
  42453a:	push   0x83ff8908
  42453f:	inc    DWORD PTR [eax]
  424541:	imul   eax,DWORD PTR [eax],0xffffffcc
  424544:	out    dx,eax
  424545:	popf   
  424546:	sbb    dh,BYTE PTR [edx]
  424548:	bound  eax,QWORD PTR [eax]
  42454a:	or     edi,DWORD PTR [esi]
  42454c:	add    BYTE PTR [eax],al
  42454e:	add    bh,bh
  424550:	inc    DWORD PTR [edx-0x1]
  424553:	add    BYTE PTR [ecx-0x38],bl
  424556:	(bad)  
  424557:	sub    eax,0x3baa00ec
  42455c:	add    BYTE PTR [eax],al
  42455e:	add    DWORD PTR [eax],0xffffffff
  424561:	xor    ah,cl
  424563:	sub    eax,0xffffffbb
  424566:	cli    
  424567:	stos   DWORD PTR es:[edi],eax
  424568:	rol    DWORD PTR [eax],1
  42456a:	adc    eax,0xff00ff57
  42456f:	mov    DWORD PTR [eax],eax
  424571:	xor    eax,0x525eff00
  424576:	ror    DWORD PTR [edi],1
  424578:	inc    BYTE PTR [eax]
  42457a:	rcl    DWORD PTR [edi+edi*8-0x7c00ff77],1
  424581:	icebp  
  424582:	dec    esp
  424584:	ss or  eax,0xff78d40f
  42458a:	enter  0xff9b,0x83
  42458e:	add    BYTE PTR [ebx-0x7c3101],al
  424594:	mov    bl,0xe2
  424596:	mov    dh,0xb2
  424598:	inc    ecx
  424599:	mov    DWORD PTR [edx-0x79],eax
  42459c:	add    DWORD PTR [eax],0x0
  42459f:	add    bh,bh
  4245a1:	dec    ecx
  4245a2:	(bad)  
  4245a3:	(bad)  
  4245a4:	cmp    ebx,esi
  4245a6:	je     0x4245cc
  4245a8:	xchg   edx,eax
  4245a9:	add    BYTE PTR [edx],al
  4245ab:	enter  0x8383,0x0
  4245af:	(bad)  
  4245b0:	(bad)  
  4245b1:	mov    ebx,0x5fe3ffff
  4245b6:	stos   DWORD PTR es:[edi],eax
  4245b7:	mov    bh,dl
  4245b9:	dec    DWORD PTR [edi]
  4245bb:	fdivp  st(7),st
  4245bd:	(bad)  
  4245be:	(bad)  
  4245bf:	(bad)  
  4245c0:	push   edi
  4245c2:	add    BYTE PTR [ebx-0x532721f5],al
  4245c8:	out    dx,al
  4245c9:	add    BYTE PTR [ebx-0x36],dh
  4245cc:	add    BYTE PTR [ecx-0x1c7cff77],cl
  4245d2:	dec    esp
  4245d4:	out    dx,al
  4245d5:	mov    ah,0xe7
  4245d7:	push   esp
  4245d8:	test   DWORD PTR [eax],eax
  4245da:	and    eax,0xcc6b
  4245df:	inc    DWORD PTR [eax]
  4245e1:	dec    esp
  4245e2:	add    bh,bh
  4245e4:	ins    DWORD PTR es:[edi],dx
  4245e5:	pop    ss
  4245e6:	jo     0x4245dc
  4245e8:	push   ss
  4245e9:	call   FWORD PTR [ecx]
  4245eb:	jecxz  0x4245ec
  4245ed:	add    BYTE PTR [ecx-0xf8ff01],cl
  4245f3:	push   DWORD PTR [eax+0x26]
  4245f6:	clc    
  4245f7:	cmp    ah,BYTE PTR [ecx-0x725a00]
  4245fd:	add    bh,bh
  4245ff:	inc    DWORD PTR [ebx-0x57ffffde]
  424605:	daa    
  424606:	aas    
  424607:	jbe    0x42466e
  424609:	jmp    FWORD PTR [esi-0x58]
  42460c:	add    bh,bh
  42460e:	cmp    edi,0xffffffcc
  424611:	(bad)  
  424612:	inc    DWORD PTR [eax]
  424614:	mov    ch,0x83
  424616:	pop    ds
  424617:	jno    0x424661
  424619:	add    BYTE PTR [edi],bh
  42461b:	(bad)  
  42461d:	inc    DWORD PTR [ebx-0x76d2ff01]
  424623:	mov    esp,eax
  424625:	pop    ds
  424626:	adc    BYTE PTR [edi-0x5d],dl
  424629:	(bad)  
  42462a:	ficomp WORD PTR [edx]
  42462c:	(bad)  
  42462d:	dec    esp
  42462f:	add    ah,cl
  424631:	inc    ecx
  424632:	inc    DWORD PTR [eax]
  424634:	xchg   esi,eax
  424635:	add    eax,0xffa20b47
  42463a:	mov    al,0xd6
  42463c:	int3   
  42463d:	add    bh,bh
  42463f:	inc    DWORD PTR [eax]
  424641:	jecxz  0x424643
  424643:	call   ebx
  424645:	sbb    dh,bl
  424647:	mov    edx,0x40c3ff81
  42464c:	(bad)  
  42464d:	inc    DWORD PTR [ebx-0x7c4eff7d]
  424653:	(bad)  
  424654:	in     al,dx
  424655:	dec    esi
  424656:	dec    ebp
  424657:	jmp    0x4246b2
  424659:	add    BYTE PTR [ecx+esi*4+0x0],dl
  42465d:	(bad)  
  42465e:	inc    DWORD PTR [eax]
  424660:	jmp    FWORD PTR [esi]
  424662:	inc    DWORD PTR [eax]
  424664:	outs   dx,BYTE PTR ds:[esi]
  424665:	xchg   edi,eax
  424666:	push   es
  424667:	mov    bh,0xbe
  424669:	add    DWORD PTR [eiz*1-0xff7d],0xffffffff
  424671:	(bad)  
  424672:	(bad)  
  424673:	call   FWORD PTR [edx]
  424675:	fs push 0xffffffab
  424678:	xor    eax,0x5a0183
  42467d:	add    bh,bh
  42467f:	int3   
  424680:	add    BYTE PTR [edi-0x1],dl
  424683:	call   FWORD PTR [edi]
  424685:	pushf  
  424686:	jp     0x424644
  424688:	or     al,BYTE PTR [eax]
  42468a:	shr    DWORD PTR [edi-0x1],cl
  42468d:	int3   
  42468e:	add    DWORD PTR [eax],0x0
  424691:	pop    esi
  424692:	(bad)  
  424693:	(bad)  
  424694:	mov    esp,0x92b4f2cf
  424699:	int3   
  42469a:	sbb    BYTE PTR ds:0x0,bl
  4246a0:	(bad)  
  4246a1:	mov    ebp,0xd354ff00
  4246a6:	sub    ax,0x83d7
  4246aa:	fwait
  4246ab:	cli    
  4246ac:	cmp    edi,0xffffff83
  4246af:	add    BYTE PTR [eax],al
  4246b1:	fdiv   st(7),st
  4246b3:	add    cl,al
  4246b5:	dec    esp
  4246b6:	xchg   esp,eax
  4246b7:	popa   
  4246b8:	(bad)  
  4246b9:	inc    DWORD PTR [eax]
  4246bb:	lods   al,BYTE PTR ds:[esi]
  4246bc:	add    bh,bh
  4246be:	inc    DWORD PTR [ebx-0x1c77]
  4246c4:	es inc ecx
  4246c6:	mov    ecx,0x7aff7c07
  4246cb:	mov    bh,bh
  4246cd:	add    BYTE PTR [ecx+0xa183ff],cl
  4246d3:	push   eax
  4246d5:	pushf  
  4246d6:	neg    BYTE PTR [esi+0x7088ff53]
  4246dc:	inc    DWORD PTR [eax]
  4246de:	inc    DWORD PTR [eax]
  4246e0:	push   DWORD PTR [ebx+0x0]
  4246e3:	add    BYTE PTR [edx+0x2a],bl
  4246e6:	jbe    0x4246c6
  4246e8:	mov    ebx,0xad4b89
  4246ed:	(bad)  
  4246ee:	dec    esp
  4246f0:	add    BYTE PTR [edx-0x1],dl
  4246f3:	add    BYTE PTR [esi],bh
  4246f5:	addr16 cwde 
  4246f7:	test   edx,eax
  4246f9:	or     DWORD PTR [esi],0xffffffe8
  4246fc:	inc    DWORD PTR [eax]
  4246fe:	inc    DWORD PTR [eax]
  424700:	add    BYTE PTR [ebx-0x1],al
  424703:	adc    DWORD PTR [ebx+0x6b],0xffffff80
  424707:	(bad)  [eax+eax*1]
  42470a:	stos   DWORD PTR es:[edi],eax
  42470b:	bound  eax,QWORD PTR [eax]
  42470d:	add    bh,bh
  42470f:	(bad)  
  424710:	call   DWORD PTR [edi+0x0]
  424713:	add    ah,dl
  424715:	mov    cl,0xaf
  424717:	sti    
  424718:	jmp    0x8411d01c
  42471d:	mov    DWORD PTR [eax],eax
  42471f:	(bad)  
  424720:	push   DWORD PTR [esi+0x0]
  424723:	push   esp
  424725:	inc    esi
  424726:	cdq    
  424727:	sbb    al,0xf6
  424729:	add    BYTE PTR [edi-0xf],al
  42472c:	or     DWORD PTR [ecx-0x21333301],0x0
  424733:	add    BYTE PTR [eax-0x69],bh
  424736:	push   es
  424737:	loopne 0x424713
  424739:	jmp    DWORD PTR [ebx]
  42473b:	dec    eax
  42473c:	add    BYTE PTR [ecx+0x1800ffff],cl
  424742:	cmp    edi,0xffffffa9
  424745:	and    eax,0xd266a3
  42474a:	cmp    BYTE PTR [eax-0x1],0x0
  42474e:	or     esp,0xffffffcc
  424751:	mov    bh,0xff
  424753:	add    BYTE PTR [ebp-0x6],cl
  424756:	cmovge ebp,DWORD PTR [ebx+0xea20ff]
  42475d:	add    BYTE PTR [eax],al
  42475f:	add    BYTE PTR [eax],al
  424761:	push   edx
  424762:	add    BYTE PTR [eax],al
  424764:	ins    DWORD PTR es:[edi],dx
  424765:	push   edi
  424766:	push   ss
  424767:	loope  0x424753
  424769:	add    BYTE PTR [ebx-0x3f],dh
  42476c:	add    bh,bh
  42476e:	dec    esp
  424770:	inc    DWORD PTR [eax-0x62487d00]
  424776:	jle    0x424729
  424778:	icebp  
  424779:	dec    DWORD PTR [eax]
  42477b:	pop    esi
  42477c:	(bad)  
  42477d:	inc    DWORD PTR [ebx-0x807c01]
  424783:	mov    DWORD PTR [edx+0x5bc52679],esp
  424789:	add    ah,dh
  42478b:	xchg   edx,eax
  42478c:	inc    DWORD PTR [eax]
  42478e:	or     DWORD PTR [ecx-0x7c00687d],0xfffffff5
  424795:	jmp    0x424815
  424797:	pop    ecx
  424798:	retf   0x2dff
  42479b:	sub    BYTE PTR [eax],al
  42479d:	int3   
  42479e:	inc    DWORD PTR [ebx-0x7cf801]
  4247a4:	cs pop es
  4247a6:	add    ah,BYTE PTR [ebx+0x255883d2]
  4247ac:	(bad)  
  4247ad:	inc    DWORD PTR [ebx+0x56ff83]
  4247b3:	add    BYTE PTR [edi+0x11],ah
  4247b6:	daa    
  4247b7:	pop    ebp
  4247b8:	xchg   edx,eax
  4247b9:	call   FWORD PTR [eax-0x760000bd]
  4247bf:	(bad)  
  4247c0:	push   DWORD PTR [edx+0x64ecff83]
  4247c6:	sub    eax,0xb3ffe6b9
  4247cb:	dec    edi
  4247cc:	inc    DWORD PTR [eax]
  4247ce:	add    BYTE PTR [eax],al
  4247d0:	add    BYTE PTR [esi-0x1],bl
  4247d3:	call   eax
  4247d5:	sbb    al,0x97
  4247d7:	push   ebx
  4247d8:	adc    edi,edi
  4247da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247db:	add    BYTE PTR [eax],0xff
  4247de:	add    ah,cl
  4247e0:	sub    DWORD PTR [esi],0x0
  4247e3:	add    BYTE PTR [esp+eax*1],cl
  4247e6:	add    DWORD PTR [ebx],eax
  4247e8:	test   esp,0xff000aba
  4247ee:	inc    DWORD PTR [eax]
  4247f0:	adc    DWORD PTR [ebp-0x1],0x0
  4247f4:	cmp    al,0x99
  4247f6:	mov    eax,0xee00a6f0
  4247fb:	stos   BYTE PTR es:[edi],al
  4247fc:	(bad)  
  4247fd:	(bad)  
  4247fe:	inc    DWORD PTR [eax]
  424800:	int3   
  424801:	xchg   ecx,eax
  424802:	inc    DWORD PTR [ebx-0x1da4b568]
  424808:	pop    ebx
  424809:	jmp    DWORD PTR [edx-0xffb8]
  42480f:	inc    DWORD PTR [ebx-0x6ffff88]
  424815:	mov    WORD PTR [edx-0x61],cs
  424818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424819:	jmp    FWORD PTR [ebp+0xcc52]
  42481f:	inc    DWORD PTR [eax]
  424821:	xor    eax,0xdd6aff83
  424826:	int3   
  424827:	mov    WORD PTR [ecx],?
  424829:	(bad)  
  42482a:	js     0x4247b5
  42482c:	inc    DWORD PTR [ebx+0x78ffff00]
  424832:	(bad)  
  424833:	jmp    DWORD PTR [ecx]
  424835:	push   ss
  424836:	call   0xffad:0xc0009db8
  42483d:	add    bh,bh
  42483f:	inc    DWORD PTR [eax]
  424841:	icebp  
  424842:	int3   
  424843:	add    BYTE PTR [edx+0x7558f3c0],cl
  424849:	inc    DWORD PTR [eax]
  42484b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42484c:	(bad)  
  42484d:	(bad)  
  42484e:	(bad)  
  42484f:	(bad)  
  424850:	jmp    DWORD PTR [edi+edi*8-0x1]
  424854:	xor    DWORD PTR ds:0xffd8709c,ecx
  42485a:	add    esp,DWORD PTR [eax-0x7d]
  42485d:	(bad)  
  42485e:	dec    esp
  424860:	xor    DWORD PTR [ecx],0xffffffff
  424863:	dec    DWORD PTR [ecx]
  424865:	cmp    ah,BYTE PTR [edx-0x36ff5a40]
  42486b:	in     eax,dx
  42486c:	inc    DWORD PTR [ebx+0x5b89ffff]
  424872:	add    DWORD PTR [eax],0xffffffad
  424875:	sub    ah,dl
  424877:	in     eax,0x81
  424879:	dec    DWORD PTR [esi+0x12]
  42487c:	add    BYTE PTR [eax],al
  42487e:	(bad)  
  42487f:	(bad)  
  424880:	call   FWORD PTR [ecx-0x1]
  424883:	add    BYTE PTR [esi],cl
  424885:	push   ds
  424886:	dec    ebx
  424887:	push   0xffffffcc
  424889:	add    BYTE PTR [eiz*4-0x33ff0100],dl
  424890:	mov    DWORD PTR [ebp-0x1],ebx
  424893:	inc    DWORD PTR [esi]
  424895:	hlt    
  424896:	dec    edi
  424897:	cli    
  424898:	push   esp
  424899:	push   DWORD PTR [edx-0x7cff0068]
  42489f:	cmp    edi,0xffffffe6
  4248a2:	inc    DWORD PTR [ebx-0x6453eb19]
  4248a8:	fild   DWORD PTR [eax]
  4248aa:	xor    BYTE PTR [eax+eax*1-0x7676ff01],bh
  4248b1:	imul   eax,DWORD PTR [eax],0x7fbf2a00
  4248b7:	add    eax,0x4beb899c
  4248bc:	int3   
  4248bd:	add    DWORD PTR [eax],0xffffffff
  4248c0:	jmp    DWORD PTR [ecx+0x0]
  4248c3:	add    bh,ah
  4248c5:	(bad)  
  4248c6:	mov    ebx,0xc20053c8
  4248cb:	inc    ebp
  4248cc:	inc    DWORD PTR [eax]
  4248ce:	(bad)  
  4248cf:	inc    DWORD PTR [ebx+0x15ffcc84]
  4248d5:	mov    al,bl
  4248d7:	or     dh,ch
  4248d9:	call   edx
  4248db:	inc    edi
  4248dc:	add    BYTE PTR [eax],al
  4248de:	(bad)  
  4248df:	(bad)  
  4248e0:	call   FWORD PTR [eax]
  4248e2:	(bad)  
  4248e3:	jmp    DWORD PTR [eax+0x7e]
  4248e6:	iret   
  4248e7:	push   ebp
  4248e8:	loop   0x4248e9
  4248ea:	push   eax
  4248eb:	adc    edi,edi
  4248ed:	inc    DWORD PTR [eax]
  4248ef:	or     esp,0xffffffa2
  4248f2:	cmp    edi,0xffffffc6
  4248f5:	ret    0x6ec2
  4248f8:	mov    esp,ecx
  4248fa:	cs mov edi,0xff890000
  424900:	(bad)  
  424901:	inc    BYTE PTR [ebx-0x49812e00]
  424907:	loop   0x424906
  424909:	add    BYTE PTR [ebx],bl
  42490b:	leave  
  42490c:	inc    DWORD PTR [eax]
  42490e:	inc    DWORD PTR [eax]
  424910:	jmp    DWORD PTR [ecx-0x34]
  424913:	call   FWORD PTR [edi+0x48f5a391]
  424919:	call   DWORD PTR [edx-0x62]
  42491c:	int3   
  42491d:	inc    DWORD PTR [eax]
  42491f:	add    BYTE PTR [eax],al
  424921:	and    al,0x0
  424923:	add    BYTE PTR [eax],al
  424925:	call   0xb65c:0x25f7b3
  42492c:	add    DWORD PTR [eax],0xffffffff
  42492f:	int3   
  424930:	add    BYTE PTR [ebx],cl
  424932:	mov    DWORD PTR [ebx+0x24699bfc],eax
  424938:	push   0xffffffff
  42493a:	or     bh,BYTE PTR [edi]
  42493c:	mov    edi,edi
  42493e:	int3   
  42493f:	(bad)  
  424940:	(bad)  
  424941:	inc    BYTE PTR [eax]
  424943:	push   DWORD PTR [esi+0xe]
  424946:	scas   al,BYTE PTR es:[edi]
  424947:	xchg   BYTE PTR [ecx+0x0],bl
  42494a:	fnstenv [esi-0x76000001]
  424950:	jmp    ecx
  424952:	add    BYTE PTR [eax],al
  424954:	out    0x77,al
  424956:	mov    BYTE PTR [edx-0x75137ca5],cl
  42495c:	inc    DWORD PTR [ebx+0x2b8983cc]
  424962:	add    bh,bh
  424964:	idiv   DWORD PTR [ecx+0x1c]
  424967:	adc    bh,bl
  424969:	call   DWORD PTR ds:0xcc000019
  42496f:	mov    edi,edi
  424971:	or     DWORD PTR [eax],eax
  424973:	push   DWORD PTR [eax-0x1a]
  424976:	mov    ds:0xe1000253,al
  42497b:	pop    ebx
  42497c:	add    BYTE PTR [eax],al
  42497e:	cmp    edi,0xffffff83
  424981:	mov    WORD PTR [eax],es
  424983:	inc    edi
  424985:	xchg   esi,eax
  424986:	fdivp  st(3),st
  424988:	mov    dl,0x0
  42498a:	aaa    
  42498b:	bswap  esp
  42498d:	add    ah,cl
  42498f:	inc    DWORD PTR [eax]
  424991:	pop    DWORD PTR [eax]
  424993:	add    BYTE PTR [edx],dh
  424995:	xchg   esi,eax
  424996:	enter  0x2569,0x89
  42499a:	jmp    0xf4909
  42499f:	inc    DWORD PTR [ebx+0x4400ffd5]
  4249a5:	mov    edx,0x40d793
  4249aa:	add    al,0x50
  4249ac:	(bad)  
  4249ad:	(bad)  
  4249ae:	inc    DWORD PTR [eax]
  4249b0:	add    BYTE PTR [ebx+eax*4-0x1],bh
  4249b4:	pop    edi
  4249b5:	aad    0x70
  4249b7:	adc    edx,DWORD PTR ds:0x83d5e600
  4249bd:	add    bh,bh
  4249bf:	int3   
  4249c0:	call   DWORD PTR [edx]
  4249c2:	inc    DWORD PTR [eax]
  4249c4:	stos   DWORD PTR es:[edi],eax
  4249c5:	pop    ebp
  4249c6:	sahf   
  4249c7:	jns    0x424973
  4249c9:	add    BYTE PTR [edi],ch
  4249cb:	mov    ebp,0xffccff00
  4249d0:	add    BYTE PTR [edx-0x10a8ff77],dl
  4249d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249d7:	mov    bh,0x59
  4249d9:	jmp    eax
  4249db:	lds    eax,FWORD PTR [eax]
  4249dd:	inc    DWORD PTR [eax]
  4249df:	inc    DWORD PTR [eax]
  4249e1:	test   edi,edi
  4249e3:	jmp    DWORD PTR [edi]
  4249e5:	int3   
  4249e6:	jo     0x424a2f
  4249e8:	push   eax
  4249e9:	call   FWORD PTR [ebx-0x7cff7ce2]
  4249ef:	inc    DWORD PTR [ebx+0x63ff00a3]
  4249f5:	fdiv   QWORD PTR [edi+esi*1]
  4249f8:	out    0x0,al
  4249fa:	mov    ah,0xc4
  4249fc:	int3   
  4249fd:	(bad)  
  4249fe:	(bad)  
  4249ff:	(bad)  
  424a00:	call   DWORD PTR [ebp-0x15717c01]
  424a06:	jbe    0x42498b
  424a08:	add    ah,cl
  424a0a:	fsub   DWORD PTR [ebx+eax*4]
  424a0d:	(bad)  
  424a0e:	(bad)  
  424a0f:	inc    DWORD PTR [eax]
  424a11:	iret   
  424a12:	(bad)  
  424a13:	jmp    DWORD PTR [edi+0x2f6d212e]
  424a19:	add    BYTE PTR [ebx-0x33d5],al
  424a1f:	cmp    edi,0xffffff9b
  424a22:	or     DWORD PTR [ecx-0x726a644d],0x47
  424a29:	int3   
  424a2a:	and    BYTE PTR [edi],dh
  424a2c:	int3   
  424a2d:	inc    DWORD PTR [eax]
  424a2f:	inc    DWORD PTR [eax]
  424a31:	jne    0x424a32
  424a33:	mov    DWORD PTR [edi],esi
  424a35:	int    0x4e
  424a37:	arpl   WORD PTR [edx-0x1],di
  424a3a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  424a3c:	inc    DWORD PTR [ebx-0x27ff7601]
  424a42:	mov    edi,edi
  424a44:	popa   
  424a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a46:	imul   BYTE PTR [edi*1-0x5d1b01]
  424a4d:	(bad)  
  424a4e:	dec    esp
  424a50:	call   FWORD PTR ds:0xb51100ff
  424a56:	mov    al,ah
  424a58:	addr16 dec ebp
  424a5b:	enter  0xff83,0x83
  424a5f:	(bad)  
  424a60:	call   DWORD PTR [ecx]
  424a62:	inc    DWORD PTR [ebx-0x77a22986]
  424a68:	and    eax,DWORD PTR [eax]
  424a6a:	popa   
  424a6b:	jno    0x4249f6
  424a6d:	(bad)  
  424a6e:	inc    DWORD PTR [ebx-0xa200]
  424a74:	inc    esp
  424a75:	stc    
  424a76:	xchg   ebx,eax
  424a77:	jns    0x424a14
  424a79:	call   DWORD PTR [esp+eiz*2-0x1]
  424a7d:	add    ah,cl
  424a7f:	or     esp,0x71
  424a82:	mov    esp,ecx
  424a84:	mov    edi,0xaf676e8b
  424a89:	add    BYTE PTR [edx+0x24],dl
  424a8c:	(bad)  
  424a8d:	(bad)  
  424a8e:	(bad)  
  424a8f:	dec    esp
  424a91:	mov    edx,0x5740089
  424a96:	add    eax,edx
  424a98:	in     eax,0x0
  424a9a:	cmp    edx,DWORD PTR [esi+0x0]
  424a9d:	add    BYTE PTR [ecx-0x767a0034],cl
  424aa3:	cmp    DWORD PTR [ebx-0x522937b5],0xffffffff
  424aaa:	aad    0x89
  424aac:	add    DWORD PTR [eax],0xffffff89
  424aaf:	mov    edi,edi
  424ab1:	inc    esi
  424ab2:	inc    DWORD PTR [eax]
  424ab4:	push   eax
  424ab5:	test   eax,0xd08938
  424aba:	pop    ebx
  424abb:	repz inc DWORD PTR [ebx+0x1effcc00]
  424ac2:	inc    DWORD PTR [ebx+0x6430bd21]
  424ac8:	cld    
  424ac9:	call   DWORD PTR [edx]
  424acb:	dec    ecx
  424acc:	inc    DWORD PTR [eax]
  424ace:	add    bh,bh
  424ad0:	add    BYTE PTR ds:0x19880083,ch
  424ad6:	stos   BYTE PTR es:[edi],al
  424ad7:	mov    dl,0x46
  424ad9:	add    dl,dh
  424adb:	pop    ebp
  424adc:	add    DWORD PTR [eax],0xffffffff
  424adf:	dec    DWORD PTR [ecx-0x4effffb4]
  424ae5:	sub    al,0xa0
  424ae7:	xchg   ebx,eax
  424ae8:	fwait
  424ae9:	adc    DWORD PTR [ebp+0xffffc1],0xffffff89
  424af0:	add    BYTE PTR [edx-0x1],ah
  424af3:	(bad)  
  424af4:	mov    eax,0xfaefafde
  424af9:	int3   
  424afa:	pop    eax
  424afb:	push   esi
  424afc:	(bad)  
  424afd:	inc    DWORD PTR [eax]
  424aff:	cmp    edi,0x78
  424b02:	int3   
  424b03:	int3   
  424b04:	push   ds
  424b05:	mov    ch,BYTE PTR [eax]
  424b07:	loope  0x424ace
  424b09:	(bad)  
  424b0a:	jmp    0x434aca
  424b0f:	inc    DWORD PTR [eax]
  424b11:	mov    ebx,0xfb9b00ff
  424b16:	push   edx
  424b17:	inc    esi
  424b18:	loop   0x424b19
  424b1a:	bound  eax,QWORD PTR ds:0xff00ff83
  424b20:	(bad)  
  424b21:	cli    
  424b22:	or     DWORD PTR [ecx-0x3d646c13],0xffffffd1
  424b29:	push   DWORD PTR [edx]
  424b2b:	je     0x424b2d
  424b2d:	or     esp,0xffffff83
  424b30:	and    DWORD PTR [ebx+0x4899ccff],0x77
  424b37:	sbb    al,0xf0
  424b39:	jmp    esp
  424b3b:	add    BYTE PTR [eax],al
  424b3d:	add    bh,bh
  424b3f:	add    BYTE PTR [eax],al
  424b41:	mov    bh,bh
  424b43:	dec    DWORD PTR [ecx-0x2fbf6b9a]
  424b49:	add    BYTE PTR [ecx+ebp*4],bh
  424b4c:	add    DWORD PTR [eax],0xffffff83
  424b4f:	inc    DWORD PTR [eax]
  424b51:	jg     0x424b52
  424b53:	or     DWORD PTR [edi+eiz*4+0x67],0x1b
  424b58:	add    ah,cl
  424b5a:	mov    ch,0x24
  424b5c:	(bad)  
  424b5d:	inc    DWORD PTR [eax]
  424b5f:	int3   
  424b60:	add    bl,ah
  424b62:	add    DWORD PTR [eax],0x46
  424b65:	js     0x424b04
  424b67:	or     bl,BYTE PTR [ecx]
  424b69:	add    BYTE PTR [ebx],bh
  424b6b:	jmp    0x424b6c
  424b6d:	(bad)  
  424b6e:	(bad)  
  424b6f:	inc    DWORD PTR [ebx-0x3c007cd8]
  424b75:	jecxz  0x424b76
  424b77:	sub    cl,BYTE PTR [ebx-0x7d]
  424b7a:	sub    ah,al
  424b7c:	dec    DWORD PTR [ecx+0x18ffff00]
  424b82:	add    bh,bh
  424b84:	push   edx
  424b85:	add    dh,bh
  424b87:	ja     0x424bed
  424b89:	call   DWORD PTR [eax+0x38]
  424b8c:	int3   
  424b8d:	inc    DWORD PTR [ebx-0x910100]
  424b93:	add    BYTE PTR [eax+0x52ed5aa8],dh
  424b99:	(bad)  
  424b9a:	sti    
  424b9b:	fcmove st,st(4)
  424b9d:	dec    esp
  424b9f:	add    DWORD PTR [eax],0xffffffae
  424ba2:	add    DWORD PTR [eax],0x10
  424ba5:	push   edx
  424ba6:	mov    ch,0x0
  424ba8:	jl     0x424baa
  424baa:	std    
  424bab:	sbb    eax,0xffffff00
  424bb0:	dec    edi
  424bb2:	(bad)  
  424bb3:	push   esi
  424bb5:	js     0x424b83
  424bb7:	and    DWORD PTR [esi],edx
  424bb9:	call   ecx
  424bbb:	jo     0x424b46
  424bbd:	inc    DWORD PTR [ebx-0x33440100]
  424bc3:	push   DWORD PTR [ebx-0x56]
  424bc6:	ins    DWORD PTR es:[edi],dx
  424bc7:	cmp    eax,0x74828321
  424bcc:	add    BYTE PTR [ebx-0x7c007c01],al
  424bd2:	inc    DWORD PTR [ebx+0x4e4b5924]
  424bd8:	test   al,0xff
  424bda:	cmp    DWORD PTR [eax],0xffffffff
  424bdd:	inc    DWORD PTR [eax]
  424bdf:	cmp    edi,0xffffffb2
  424be2:	int3   
  424be3:	and    ebp,0xffffffd4
  424be6:	fsub   st(0),st
  424be8:	jnp    0x424be9
  424bea:	sti    
  424beb:	push   ebp
  424bec:	add    ah,cl
  424bee:	dec    DWORD PTR [ecx-0xff5901]
  424bf4:	sbb    DWORD PTR [ebx+0xa3ecb8],ecx
  424bfa:	test   cl,0x89
  424bfd:	(bad)  
  424bfe:	(bad)  
  424bff:	inc    DWORD PTR [eax]
  424c01:	int    0xff
  424c03:	call   DWORD PTR [ebx+0x7188fee4]
  424c09:	cmp    DWORD PTR [edx+0xffff97],0xffffff83
  424c10:	(bad)  
  424c11:	cli    
  424c12:	add    BYTE PTR [ebx-0x54a3b59e],al
  424c18:	xchg   ebp,eax
  424c19:	add    BYTE PTR [ebx+ebx*4+0x0],dl
  424c1d:	or     DWORD PTR [ecx-0x2c7d00],0xffffffff
  424c24:	cmova  edx,DWORD PTR [esi+0x45001562]
  424c2b:	cmp    eax,DWORD PTR [eax]
  424c2d:	add    BYTE PTR [ebx-0x7c1eff7d],al
  424c33:	and    DWORD PTR [ebp-0x335fd533],0xffffffff
  424c3a:	imul   eax,DWORD PTR [edx+0x0],0xffffffcc
  424c3e:	dec    esp
  424c40:	int3   
  424c41:	cmp    bh,0xcc
  424c44:	out    0xa8,eax
  424c46:	outs   dx,BYTE PTR ds:[esi]
  424c47:	inc    eax
  424c48:	fild   DWORD PTR [eax]
  424c4a:	xchg   esp,eax
  424c4b:	or     bh,bh
  424c4d:	(bad)  
  424c4e:	(bad)  
  424c4f:	(bad)  
  424c50:	jmp    edi
  424c52:	int3   
  424c53:	inc    DWORD PTR [ebx]
  424c55:	mov    DWORD PTR [edi],esp
  424c57:	ja     0x424c76
  424c59:	(bad)  
  424c5a:	cmp    al,0xd7
  424c5c:	(bad)  
  424c5d:	inc    DWORD PTR [eax]
  424c5f:	cmp    edi,0xffffffcb
  424c62:	cmp    edi,0x3f
  424c65:	lea    esi,[edx+eiz*8-0x21c4ff40]
  424c6c:	int3   
  424c6d:	(bad)  
  424c6e:	inc    DWORD PTR [ebx-0x7600df00]
  424c74:	mov    bh,0x2b
  424c76:	pusha  
  424c77:	hlt    
  424c78:	xchg   esp,eax
  424c79:	mov    DWORD PTR [edx-0x76ff00f2],ecx
  424c7f:	add    ah,cl
  424c81:	(bad)  
  424c83:	(bad)  
  424c84:	jle    0x424c82
  424c86:	mov    ds:0xe8ffbe20,eax
  424c8b:	popa   
  424c8c:	add    DWORD PTR [eax],0xffffffcc
  424c8f:	inc    DWORD PTR [eax]
  424c91:	or     eax,DWORD PTR [ebx-0x121ac501]
  424c97:	fistp  QWORD PTR [ebx+0xa46eff]
  424c9d:	mov    DWORD PTR [ebx-0x630001],eax
  424ca3:	call   FWORD PTR [ebx+ebx*1+0x8]
  424ca7:	and    BYTE PTR [ecx-0x34],cl
  424caa:	inc    edx
  424cab:	push   esi
  424cac:	add    bh,bh
  424cae:	(bad)  
  424caf:	dec    DWORD PTR [ecx-0x100009d]
  424cb5:	mov    ds:0xffa4167e,al
  424cba:	xchg   ecx,eax
  424cbb:	(bad)  
  424cbc:	int3   
  424cbd:	add    bh,bh
  424cbf:	inc    DWORD PTR [ebx+0x498300d3]
  424cc5:	popf   
  424cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cc7:	push   esi
  424cc9:	dec    DWORD PTR [ebp+edx*8-0x76003301]
  424cd0:	mov    DWORD PTR [eax],eax
  424cd2:	inc    DWORD PTR [eax]
  424cd4:	mov    dh,0x7d
  424cd6:	push   0x62006539
  424cdb:	jb     0x424cdd
  424cdd:	int3   
  424cde:	(bad)  
  424cdf:	(bad)  
  424ce0:	jmp    FWORD PTR [esi+0xb170083]
  424ce6:	mov    al,0xa5
  424ce8:	mov    ?,edi
  424cea:	dec    ebp
  424ceb:	mov    BYTE PTR [ebx-0x3301],al
  424cf1:	xchg   ebx,eax
  424cf2:	inc    DWORD PTR [ebx+0x91b503b]
  424cf8:	pop    ecx
  424cf9:	call   DWORD PTR [eax-0x23]
  424cfc:	mov    DWORD PTR [eax],eax
  424cfe:	add    BYTE PTR [ebx-0xf301],al
  424d04:	mov    al,ds:0x6a1f72d5
  424d09:	add    BYTE PTR [eax+edx*8],ch
  424d0c:	add    BYTE PTR [ebx-0x3ff0100],al
  424d12:	add    bh,bh
  424d14:	mov    ds:0xb3da6021,al
  424d19:	push   DWORD PTR [ecx]
  424d1b:	ja     0x424d1d
  424d1d:	inc    DWORD PTR [eax]
  424d1f:	(bad)  
  424d20:	jmp    DWORD PTR [eax+0x5eafffff]
  424d26:	daa    
  424d27:	mov    edi,0x745bffbc
  424d2c:	or     DWORD PTR [ecx-0x34000077],0xffffffff
  424d33:	push   DWORD PTR [eax+0x53]
  424d36:	icebp  
  424d37:	push   esp
  424d38:	or     al,0xff
  424d3a:	jp     0x424d98
  424d3c:	add    BYTE PTR [ecx-0x600ff01],cl
  424d42:	(bad)  
  424d43:	dec    DWORD PTR [ebp+ebp*4-0x46]
  424d47:	scas   al,BYTE PTR es:[edi]
  424d48:	and    al,BYTE PTR [eax]
  424d4a:	mov    edi,0x83cc8900
  424d4f:	add    BYTE PTR [ebx-0x4dfffff6],al
  424d55:	jne    0x424d2c
  424d57:	mov    al,0xf2
  424d59:	push   DWORD PTR [ebp+0x74]
  424d5c:	(bad)  
  424d5d:	inc    DWORD PTR [eax]
  424d5f:	add    BYTE PTR [eax],al
  424d61:	fadd   DWORD PTR [eax]
  424d63:	add    dh,bh
  424d65:	js     0x424d7b
  424d67:	push   es
  424d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d69:	int3   
  424d6a:	arpl   WORD PTR [ebx-0x7601],bp
  424d70:	jmp    FWORD PTR [ebp+0x0]
  424d73:	add    BYTE PTR [edi-0x6a87c127],dl
  424d79:	call   DWORD PTR [ecx]
  424d7b:	lods   al,BYTE PTR ds:[esi]
  424d7c:	int3   
  424d7d:	(bad)  
  424d7e:	inc    DWORD PTR [eax]
  424d80:	add    ch,cl
  424d82:	int3   
  424d83:	call   DWORD PTR [edi-0x2c4e0655]
  424d89:	add    BYTE PTR [ecx-0x7c00ffcc],ch
  424d8f:	inc    DWORD PTR [eax]
  424d91:	inc    BYTE PTR [ebx+0x7e6ebff]
  424d97:	xchg   ebp,eax
  424d98:	je     0x424d23
  424d9a:	aaa    
  424d9b:	dec    edi
  424d9c:	add    ah,cl
  424d9e:	dec    esp
  424da0:	add    dh,dh
  424da2:	(bad)  
  424da3:	push   DWORD PTR [ecx+0x56]
  424da6:	mov    dl,0xab
  424da8:	dec    ebp
  424da9:	call   DWORD PTR [ecx]
  424dab:	sub    BYTE PTR [eax],al
  424dad:	int3   
  424dae:	(bad)  
  424daf:	inc    DWORD PTR [eax]
  424db1:	out    dx,al
  424db2:	int3   
  424db3:	jmp    DWORD PTR [esi-0x4f9e74dc]
  424db9:	int3   
  424dba:	int    0xa3
  424dbc:	mov    DWORD PTR [ecx+0x358900ff],ecx
  424dc2:	add    bh,bh
  424dc4:	jae    0x424da2
  424dc6:	imul   ebx,DWORD PTR ds:0x7765893c,0xffffffff
  424dcd:	add    ah,cl
  424dcf:	inc    DWORD PTR [eax]
  424dd1:	jmp    0x61ab4dd6
  424dd6:	in     eax,0xbc
  424dd8:	leave  
  424dd9:	push   DWORD PTR [edi]
  424ddb:	jno    0x424ddd
  424ddd:	inc    DWORD PTR [ebx-0xc70001]
  424de3:	(bad)  
  424de4:	jl     0x424e11
  424de6:	sub    esp,esi
  424de8:	mov    ds:0x834b2589,eax
  424ded:	inc    DWORD PTR [eax]
  424def:	inc    DWORD PTR [ebx-0xaff0081]
  424df5:	mov    ebp,0xfc04c1
  424dfa:	push   edi
  424dfb:	cmp    al,BYTE PTR [eax]
  424dfd:	inc    DWORD PTR [eax]
  424dff:	add    BYTE PTR [ecx+0x6200ffd3],cl
  424e05:	out    dx,eax
  424e06:	test   BYTE PTR [edx+0x78128327],ch
  424e0c:	inc    DWORD PTR [eax]
  424e0e:	add    BYTE PTR [eax],al
  424e10:	call   ecx
  424e12:	add    bh,bh
  424e14:	adc    BYTE PTR [edi-0x47634e],0x1
  424e1b:	adc    al,0xff
  424e1d:	add    bh,bh
  424e1f:	cmp    edi,0xffffffc5
  424e22:	inc    DWORD PTR [eax]
  424e24:	mul    DWORD PTR ds:0x83acb51a
  424e2a:	dec    ebp
  424e2b:	cdq    
  424e2c:	dec    DWORD PTR [ecx-0x1c7cff01]
  424e32:	inc    DWORD PTR [ebx-0x5e20c581]
  424e38:	mov    bh,0x0
  424e3a:	inc    edx
  424e3b:	(bad)
  424e3e:	(bad)  
  424e3f:	inc    DWORD PTR [eax]
  424e41:	popf   
  424e42:	add    ah,cl
  424e44:	iret   
  424e45:	mov    esi,0x83100e85
  424e4a:	mov    DWORD PTR [eax],esi
  424e4c:	add    BYTE PTR [ebx+0x4e0000ff],al
  424e52:	inc    DWORD PTR [eax]
  424e54:	mov    dl,0xe8
  424e56:	leave  
  424e57:	xchg   edx,eax
  424e58:	dec    ebp
  424e59:	xor    DWORD PTR [ebx-0x7c330041],0xffffffff
  424e60:	call   FWORD PTR [edi-0x77]
  424e63:	(bad)  
  424e64:	stc    
  424e65:	(bad)  
  424e66:	cmp    eax,0x2e8972eb
  424e6b:	inc    ebx
  424e6c:	add    bh,bh
  424e6e:	add    BYTE PTR [eax],al
  424e70:	mov    DWORD PTR [edx-0x28aa0100],ebp
  424e76:	cmc    
  424e77:	imul   edx,edx,0xffffffff
  424e7a:	mov    DWORD PTR [edi-0x1],ebx
  424e7d:	inc    DWORD PTR [ebx-0xbb7c01]
  424e83:	int3   
  424e84:	or     edx,DWORD PTR [eax-0xa93186]
  424e8a:	xor    edx,eax
  424e8c:	add    DWORD PTR [ebx+0x39838300],0xffffffcc
  424e93:	dec    DWORD PTR [esi+0x50]
  424e96:	out    0x3e,al
  424e98:	xchg   ecx,eax
  424e99:	int3   
  424e9a:	cs xor eax,0xffffffff
  424ea0:	add    BYTE PTR [ecx],cl
  424ea2:	add    bh,bh
  424ea4:	adc    BYTE PTR [ebp-0x7c42ae30],bh
  424eaa:	pop    eax
  424eab:	xchg   ebx,eax
  424eac:	inc    DWORD PTR [eax]
  424eae:	(bad)  
  424eaf:	(bad)  
  424eb0:	push   DWORD PTR [esi-0x5050001]
  424eb6:	jle    0x424f0c
  424eb8:	inc    ecx
  424eb9:	int3   
  424eba:	xor    bh,BYTE PTR [edx]
  424ebc:	or     esp,0x0
  424ebf:	dec    esp
  424ec1:	mov    ebp,0x6e4eff83
  424ec6:	sbb    BYTE PTR [edx+0x3f4b00bd],bl
  424ecc:	(bad)  
  424ecd:	dec    esp
  424ecf:	(bad)  
  424ed0:	push   DWORD PTR [edi+edi*8+0x6925a983]
  424ed7:	xchg   ebx,eax
  424ed8:	add    al,0x83
  424eda:	mov    edi,0x8383ff64
  424edf:	(bad)  
  424ee0:	(bad)  
  424ee1:	fdiv   st(7),st
  424ee3:	sbb    ebx,0xffffff99
  424ee6:	xchg   esp,eax
  424ee7:	into   
  424ee8:	fmulp  st(4),st
  424eea:	test   bl,cl
  424eec:	add    bh,bh
  424eee:	add    bh,bh
  424ef0:	call   FWORD PTR [ebp-0x1b670000]
  424ef6:	(bad)  
  424ef7:	fwait
  424ef8:	out    dx,eax
  424ef9:	add    BYTE PTR [edx],dh
  424efb:	dec    ebp
  424efc:	inc    DWORD PTR [eax]
  424efe:	add    DWORD PTR [eax],0xffffffff
  424f01:	idiv   bh
  424f03:	add    BYTE PTR [edx+edx*4-0xae3f9e],dl
  424f0a:	add    DWORD PTR [ecx-0xff7c01],0x83ff7700
  424f14:	sub    eax,0x20f745b5
  424f19:	int3   
  424f1a:	dec    ebp
  424f1b:	dec    ebp
  424f1c:	add    BYTE PTR [ebx+0x1f898300],al
  424f22:	add    DWORD PTR [eax],0x1a
  424f25:	jmp    FWORD PTR [ebp-0x71ffcf2d]
  424f2b:	push   cs
  424f2c:	(bad)  
  424f2d:	inc    DWORD PTR [ebx-0x87c34]
  424f33:	dec    DWORD PTR [eax-0x48a0bddd]
  424f39:	add    BYTE PTR [ebp-0x4c],ch
  424f3c:	int3   
  424f3d:	add    DWORD PTR [eax],0xffffffcc
  424f40:	mov    edi,esi
  424f42:	add    BYTE PTR [eax],al
  424f44:	das    
  424f45:	xchg   esi,eax
  424f46:	(bad)  
  424f47:	(bad)  
  424f48:	xor    al,0xcc
  424f4a:	push   ds
  424f4b:	pop    ecx
  424f4c:	inc    DWORD PTR [eax]
  424f4e:	add    bh,bh
  424f50:	int3   
  424f51:	sbb    eax,0x424800ff
  424f56:	mov    eax,0x32ff3c36
  424f5b:	in     eax,0x0
  424f5d:	(bad)  
  424f5e:	dec    esp
  424f60:	inc    DWORD PTR [ecx-0x3e44ff01]
  424f66:	pusha  
  424f67:	xor    ebx,DWORD PTR [ebx+0x488500]
  424f6d:	inc    DWORD PTR [eax]
  424f6f:	add    DWORD PTR [ebx+0x13cc8324],0xffffffde
  424f76:	sub    eax,0xa5ce
  424f7b:	mov    ds:0xcc00ccff,al
  424f80:	call   DWORD PTR [edi-0x201d0100]
  424f86:	inc    ebx
  424f87:	sbb    BYTE PTR [ebx],cl
  424f89:	call   FWORD PTR [ecx+edi*4-0x7d]
  424f8d:	(bad)  
  424f8e:	(bad)  
  424f8f:	(bad)  
  424f90:	push   DWORD PTR [eax+0x11d70089]
  424f96:	retf   
  424f97:	in     eax,0x6d
  424f99:	add    bl,al
  424f9b:	test   BYTE PTR [ecx-0x100],cl
  424fa1:	in     eax,dx
  424fa2:	add    BYTE PTR [eax],al
  424fa4:	push   es
  424fa5:	xchg   BYTE PTR [eax+0x38],bl
  424fa8:	(bad)  
  424fa9:	push   DWORD PTR [esi]
  424fab:	cmc    
  424fac:	inc    DWORD PTR [eax]
  424fae:	add    bh,bh
  424fb0:	(bad)  
  424fb1:	std    
  424fb2:	add    DWORD PTR [eax],0xffffffb8
  424fb5:	xor    al,0x27
  424fb7:	test   BYTE PTR [ecx-0xfb2e01],bl
  424fbd:	add    bh,bh
  424fbf:	(bad)  
  424fc0:	jmp    FWORD PTR [eax-0x1]
  424fc3:	int3   
  424fc4:	mov    ebp,0xc0d21565
  424fc9:	sub    DWORD PTR [ebx-0xffff7c],0xffffff83
  424fd0:	mov    DWORD PTR [edx+0x2d98ccff],edx
  424fd6:	dec    ebp
  424fd7:	pop    eax
  424fd8:	mov    edi,edi
  424fda:	cli    
  424fdb:	sti    
  424fdc:	dec    esp
  424fde:	dec    esp
  424fe0:	(bad)  
  424fe1:	jg     0x424f66
  424fe3:	mov    DWORD PTR [eax+0xd16a041],edx
  424fe9:	add    ch,dh
  424feb:	lods   eax,DWORD PTR ds:[esi]
  424fec:	dec    DWORD PTR [ecx-0x247c0001]
  424ff2:	(bad)  
  424ff3:	call   DWORD PTR [eax]
  424ff5:	jne    0x424f9f
  424ff7:	std    
  424ff8:	and    bh,bh
  424ffa:	lock int3 
  424ffc:	dec    DWORD PTR [ecx-0x7400ff01]
  425002:	dec    esp
  425004:	cmc    
  425005:	dec    ebp
  425006:	dec    ebp
  425007:	mov    dl,0xa5
  425009:	(bad)  
  42500a:	call   0x8342d383
  42500f:	mov    DWORD PTR [eax],eax
  425011:	inc    DWORD PTR gs:[eax]
  425014:	es jb  0x42507c
  425017:	and    eax,0xb0e9899e
  42501c:	dec    DWORD PTR [ecx-0x57007c34]
  425022:	add    bh,bh
  425024:	jb     0x42502f
  425026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425027:	scas   eax,DWORD PTR es:[edi]
  425028:	(bad)  
  425029:	and    DWORD PTR [edx-0x7600c9],0xffffffcc
  425030:	adc    DWORD PTR [ebp+0x4e56ff00],0xffffffb9
  425037:	add    eax,0xe927cce6
  42503c:	inc    DWORD PTR [ebx+0x2083ff00]
  425042:	dec    DWORD PTR [ecx+0x1a612719]
  425048:	pop    ebp
  425049:	add    BYTE PTR [esp+ecx*1],cl
  42504c:	inc    DWORD PTR [eax]
  42504e:	dec    esp
  425050:	call   FWORD PTR [eax-0x5748ff77]
  425056:	mov    ch,0x2b
  425058:	scas   al,BYTE PTR es:[edi]
  425059:	sbb    ecx,0xffffffcd
  42505c:	add    bh,bh
  42505e:	add    ah,cl
  425060:	add    bh,bl
  425062:	add    bh,bh
  425064:	pop    es
  425065:	call   0x89521dac
  42506a:	or     ch,al
  42506c:	inc    DWORD PTR [eax]
  42506e:	add    bh,bh
  425070:	(bad)  
  425071:	inc    DWORD PTR ds:[eax]
  425074:	les    edx,FWORD PTR [eax+0x72]
  425077:	(bad)  
  425078:	xchg   edi,eax
  425079:	int3   
  42507a:	sbb    DWORD PTR [edi+0x0],ebx
  42507d:	(bad)  
  42507e:	(bad)  
  42507f:	(bad)  
  425080:	(bad)  
  425081:	out    dx,al
  425082:	inc    DWORD PTR [eax]
  425084:	inc    eax
  425085:	iret   
  425086:	sub    DWORD PTR [ebx+0x4cd5ff43],ebx
  42508c:	int3   
  42508d:	add    BYTE PTR [ebx-0x7c9d0001],al
  425093:	jmp    FWORD PTR [esi*2+0x584079]
  42509a:	idiv   DWORD PTR [eax]
  42509c:	cmp    edi,0xffffffff
  42509f:	inc    DWORD PTR [eax]
  4250a1:	inc    DWORD PTR es:[eax]
  4250a4:	fcomi  st,st(5)
  4250a6:	les    esi,FWORD PTR [eax]
  4250a8:	xchg   ebx,eax
  4250a9:	add    cl,ah
  4250ab:	add    eax,0xcc83
  4250b0:	push   DWORD PTR [edx-0x1]
  4250b3:	inc    DWORD PTR [esi+0x21]
  4250b6:	inc    esi
  4250b7:	outs   dx,BYTE PTR ds:[esi]
  4250b8:	lds    eax,FWORD PTR [eax]
  4250ba:	cmp    BYTE PTR [ebp-0x1],bh
  4250bd:	int3   
  4250be:	int3   
  4250bf:	inc    DWORD PTR [eax]
  4250c1:	lods   al,BYTE PTR ds:[esi]
  4250c2:	inc    DWORD PTR [eax]
  4250c4:	fmulp  st(2),st
  4250c6:	jmp    0xff70:0x87ff72d4
  4250cd:	mov    DWORD PTR [ecx-0x33a77c01],ecx
  4250d3:	sub    DWORD PTR [ecx],0x18
  4250d6:	pop    edi
  4250d7:	adc    esp,DWORD PTR [esi-0xb20601]
  4250dd:	int3   
  4250de:	mov    edi,edi
  4250e0:	push   DWORD PTR [ecx]
  4250e2:	inc    DWORD PTR [eax]
  4250e4:	pop    esp
  4250e5:	sahf   
  4250e6:	inc    edi
  4250e7:	or     ecx,ebx
  4250e9:	add    ch,dh
  4250eb:	push   es
  4250ec:	mov    DWORD PTR [eax],eax
  4250ee:	add    DWORD PTR [eax],0xffffffff
  4250f1:	cmp    DWORD PTR [ecx-0x44ca4401],ecx
  4250f7:	pop    ebx
  4250f8:	jle    0x4250f9
  4250fa:	sahf   
  4250fb:	xchg   bh,bh
  4250fd:	add    bh,bh
  4250ff:	mov    DWORD PTR [eax],eax
  425101:	(bad)  
  425103:	add    BYTE PTR [edi-0x41],bl
  425106:	(bad)
  42510a:	and    dh,dl
  42510c:	inc    DWORD PTR [eax]
  42510e:	inc    DWORD PTR [eax]
  425110:	add    BYTE PTR [eax-0x1],ch
  425113:	dec    DWORD PTR [ebp-0xaf62edf]
  425119:	jmp    DWORD PTR [esi-0x46]
  42511c:	dec    esp
  42511e:	add    BYTE PTR [eax],al
  425120:	add    BYTE PTR [eax+eax*1],bl
  425123:	jmp    DWORD PTR [esi+0x3443374a]
  425129:	add    BYTE PTR [esi],bh
  42512b:	add    al,0x83
  42512d:	add    bh,bh
  42512f:	add    ah,cl
  425131:	xchg   ebp,eax
  425132:	mov    edi,edi
  425134:	xor    esp,DWORD PTR [edx+edx*2]
  425137:	mov    cl,BYTE PTR [edx]
  425139:	int3   
  42513a:	gs mov bl,0x0
  42513d:	add    BYTE PTR [eax],al
  42513f:	add    BYTE PTR [ecx+0x7400ff51],cl
  425145:	add    ecx,DWORD PTR ds:0xa1ff02f5
  42514b:	xchg   edi,edi
  42514d:	inc    DWORD PTR [eax]
  42514f:	or     esp,0x6f
  425152:	dec    DWORD PTR [ecx-0x4425255e]
  425158:	push   ecx
  425159:	mov    DWORD PTR [esi-0x767c00aa],eax
  42515f:	(bad)  
  425160:	inc    DWORD PTR [edi-0x1]
  425163:	inc    eax
  425165:	pusha  
  425166:	aam    0x2a
  425168:	sti    
  425169:	int3   
  42516a:	cmc    
  42516b:	cmp    al,BYTE PTR [eax]
  42516d:	add    bh,bh
  42516f:	add    BYTE PTR [ebx-0x3e760060],al
  425175:	inc    edi
  425176:	mov    esp,0x2ffd012
  42517b:	das    
  42517c:	inc    DWORD PTR [ebx-0x40007c77]
  425182:	inc    DWORD PTR [eax]
  425184:	pushf  
  425185:	jb     0x425133
  425187:	daa    
  425188:	retf   0x1500
  42518b:	add    BYTE PTR [ebx-0x1],al
  425191:	fadd   QWORD PTR [ebx-0x48552601]
  425197:	sbb    eax,0x31678307
  42519c:	inc    DWORD PTR [eax]
  42519e:	(bad)  
  42519f:	inc    DWORD PTR [ebx-0x6b0000e5]
  4251a5:	bound  ebx,QWORD PTR [edx-0x7c008acc]
  4251ab:	jmp    0xffcb52af
  4251b0:	dec    DWORD PTR [eax+eax*1-0x25eaa01]
  4251b7:	ret    0x97
  4251ba:	dec    edi
  4251bb:	push   0xffcc83ff
  4251c0:	(bad)  
  4251c1:	in     al,dx
  4251c2:	inc    DWORD PTR [ebx-0x1b5aeb48]
  4251c8:	mov    ah,0xff
  4251ca:	xchg   esp,eax
  4251cb:	outs   dx,DWORD PTR ds:[esi]
  4251cc:	add    BYTE PTR [eax],al
  4251ce:	inc    DWORD PTR [ebx-0x7c33687d]
  4251d4:	jle    0x4251ee
  4251d6:	std    
  4251d7:	xchg   esi,eax
  4251d8:	bound  eax,QWORD PTR [ebx+0x83f293]
  4251de:	int3   
  4251df:	int3   
  4251e0:	add    BYTE PTR [eax],ah
  4251e2:	inc    DWORD PTR [eax]
  4251e4:	inc    eax
  4251e5:	pop    ds
  4251e6:	leave  
  4251e7:	cmp    eax,0xd3fffac
  4251ec:	dec    esp
  4251ee:	cmp    edi,0x0
  4251f1:	inc    ebx
  4251f2:	add    bh,bh
  4251f4:	ds dec ecx
  4251f6:	lods   eax,DWORD PTR ds:[esi]
  4251f7:	push   edi
  4251f8:	(bad)  
  4251f9:	push   ecx
  4251fb:	inc    esi
  4251fc:	dec    DWORD PTR [ecx+0x6e89ffff]
  425202:	cmp    edi,0x36
  425205:	jno    0x425252
  425207:	stos   DWORD PTR es:[edi],eax
  425208:	in     al,dx
  425209:	cmp    DWORD PTR [ebx+0x18],0x0
  42520d:	add    BYTE PTR [eax],al
  42520f:	(bad)  
  425210:	(bad)  
  425211:	call   0x8e6f5215
  425216:	dec    ebp
  425217:	or     ch,bh
  425219:	jmp    FWORD PTR [ebp+0x2a]
  42521c:	int3   
  42521d:	inc    DWORD PTR [ebx-0x7c5d7c01]
  425223:	cmp    DWORD PTR [esi],0x3a
  425226:	aas    
  425227:	ret    
  425228:	ror    DWORD PTR [ecx-0x7c005329],cl
  42522e:	mov    DWORD PTR [eax],eax
  425230:	jmp    DWORD PTR [edx]
  425232:	inc    DWORD PTR [ebx+0x12f8f1c]
  425238:	(bad)  
  425239:	mov    DWORD PTR ds:0xff00b0,ecx
  42523f:	or     DWORD PTR [ecx+0x2200ffbe],0xffffffd1
  425246:	add    al,0xfb
  425248:	add    cl,BYTE PTR [ecx+0x83f011]
  42524e:	add    BYTE PTR [ebx-0x2100],al
  425254:	pop    esi
  425255:	out    0x9c,al
  425257:	out    0xaa,al
  425259:	call   DWORD PTR [edx-0x68]
  42525c:	(bad)  
  42525d:	inc    DWORD PTR [ebx-0x7c440001]
  425263:	add    al,dl
  425265:	ss jns 0x425273
  425268:	dec    ebp
  425269:	(bad)  
  42526a:	std    
  42526b:	jl     0x4251f0
  42526d:	add    bh,bh
  42526f:	inc    DWORD PTR [eax]
  425271:	mov    WORD PTR [eax],es
  425273:	or     DWORD PTR [eax+0x6418d41a],0xffffffff
  42527a:	hlt    
  42527b:	test   BYTE PTR [ebx-0x7d],0x20
  425282:	inc    DWORD PTR [eax]
  425284:	mov    dl,0x2
  425286:	pop    ds
  425287:	ds in  al,dx
  425289:	int3   
  42528a:	in     al,dx
  42528b:	lock dec DWORD PTR [ecx+0x42ff8900]
  425292:	add    bh,bh
  425294:	cmp    edi,DWORD PTR [esi]
  425296:	xchg   ecx,esp
  425298:	push   eax
  425299:	add    BYTE PTR [ebp-0x24],bh
  42529c:	dec    esp
  42529e:	add    ah,cl
  4252a0:	mov    esp,edx
  4252a2:	dec    esp
  4252a4:	inc    edi
  4252a5:	pop    ss
  4252a6:	mov    edi,0x2bcc919b
  4252ab:	pop    edx
  4252ac:	inc    DWORD PTR [eax]
  4252ae:	int3   
  4252af:	dec    DWORD PTR [ecx-0xb7]
  4252b5:	(bad)  
  4252b6:	fadd   QWORD PTR [esi-0x2154ff9f]
  4252bc:	add    bh,bh
  4252be:	mov    edi,edi
  4252c0:	add    bl,bl
  4252c2:	add    BYTE PTR [eax],al
  4252c4:	out    dx,al
  4252c5:	dec    esi
  4252c6:	push   0x4e
  4252c8:	sub    eax,DWORD PTR [eax]
  4252ca:	jb     0x425319
  4252cc:	add    DWORD PTR [eax],0x0
  4252cf:	mov    edi,edi
  4252d1:	pop    ds
  4252d2:	(bad)  
  4252d3:	inc    DWORD PTR [ecx]
  4252d5:	adc    eax,0xff3e0670
  4252da:	and    eax,0xffffcc80
  4252df:	add    DWORD PTR [eax],0xffffffea
  4252e2:	add    bh,bh
  4252e4:	jg     0x425273
  4252e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252e7:	xor    edi,DWORD PTR [eax-0x7d]
  4252ea:	jl     0x4252f9
  4252ec:	mov    DWORD PTR [ebx+0x11008900],eax
  4252f2:	int3   
  4252f3:	xor    DWORD PTR [ecx-0x4696c676],0xffffffcc
  4252fa:	push   0x1f
  4252fc:	or     DWORD PTR [ecx+0x2089ffff],0xffffffcc
  425303:	and    DWORD PTR [ebp+0x2ff119ff],0xffffffff
  42530a:	out    dx,al
  42530b:	inc    ebx
  42530c:	add    BYTE PTR [eax],al
  42530e:	add    bh,bh
  425310:	add    BYTE PTR [esi-0x1],dl
  425313:	add    BYTE PTR [edx-0x5e839ad0],bh
  425319:	add    BYTE PTR [eax+0x3f],dh
  42531c:	(bad)  
  42531d:	(bad)  
  42531e:	inc    DWORD PTR [eax]
  425320:	(bad)  
  425321:	sti    
  425322:	mov    edi,edi
  425324:	loop   0x425354
  425326:	jo     0x425337
  425328:	sub    edi,edi
  42532a:	test   BYTE PTR [ebx+eax*4-0x1],ah
  42532e:	add    BYTE PTR [eax],al
  425330:	push   DWORD PTR [ebx+0x5ef90000]
  425336:	shl    bl,cl
  425338:	jl     0x425339
  42533a:	or     esp,eax
  42533c:	add    bh,bh
  42533e:	add    bh,bh
  425340:	add    BYTE PTR [ebx-0x57760000],bh
  425346:	call   0x8bc62a5d
  42534b:	add    BYTE PTR es:[eax],al
  42534e:	(bad)  
  42534f:	inc    DWORD PTR [eax]
  425351:	mov    dh,0xff
  425353:	and    DWORD PTR [eax+0x73],0xffffffad
  425357:	aaa    
  425358:	out    dx,al
  425359:	sbb    DWORD PTR [ebp+0xccff66],0xffffffcc
  425360:	dec    DWORD PTR [ebx+0x4369ffff]
  425366:	jp     0x4253bb
  425368:	push   ss
  425369:	int3   
  42536a:	xor    DWORD PTR [esi-0x7d],esi
  42536d:	add    bh,bh
  42536f:	(bad)  
  425370:	dec    DWORD PTR [ecx+ecx*4-0x1]
  425374:	inc    ebx
  425375:	ret    0x356f
  425378:	and    bh,bh
  42537a:	test   BYTE PTR [ebx-0x1],bh
  42537d:	(bad)  
  42537e:	(bad)  
  42537f:	inc    DWORD PTR [ebx+0x3efffffb]
  425385:	enter  0xa71d,0x25
  425389:	add    BYTE PTR [ecx-0x7cbc],al
  42538f:	(bad)  
  425390:	(bad)  
  425391:	fadd   QWORD PTR [eax]
  425393:	or     eax,0xfffffff4
  425396:	xor    dl,dh
  425398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425399:	add    BYTE PTR [ebx+0x89ff02],bh
  42539f:	add    ah,cl
  4253a1:	test   eax,0x2290ff83
  4253a6:	outs   dx,BYTE PTR ds:[esi]
  4253a7:	in     al,dx
  4253a8:	lea    eax,[eax]
  4253aa:	loopne 0x42540e
  4253ac:	add    BYTE PTR [eax],al
  4253ae:	dec    esp
  4253b0:	add    BYTE PTR [esi+0x11a9ffff],bl
  4253b6:	jns    0x42534f
  4253b8:	add    bh,bh
  4253ba:	push   ecx
  4253bb:	popa   
  4253bc:	dec    esp
  4253be:	(bad)  
  4253bf:	inc    DWORD PTR [ebx-0x13ff00cb]
  4253c5:	enter  0x102f,0x2
  4253c9:	jmp    DWORD PTR [eax+0x27]
  4253cc:	mov    edi,edi
  4253ce:	inc    DWORD PTR [eax]
  4253d0:	add    bh,dh
  4253d2:	cmp    edi,0xffffffeb
  4253d5:	std    
  4253d6:	push   ss
  4253d7:	leave  
  4253d8:	sar    edi,cl
  4253da:	stc    
  4253db:	ss (bad) 
  4253dd:	(bad)  
  4253de:	(bad)  
  4253df:	(bad)  
  4253e0:	dec    DWORD PTR [ebx+0x66083ff]
  4253e6:	cmp    al,0x4b
  4253e8:	inc    ebx
  4253e9:	int3   
  4253ea:	outs   dx,DWORD PTR ds:[esi]
  4253eb:	add    edi,edi
  4253ed:	int3   
  4253ee:	(bad)  
  4253ef:	inc    DWORD PTR [eax]
  4253f1:	retf   
  4253f2:	add    BYTE PTR [eax],al
  4253f4:	call   0x85cc:0x652fe5d8
  4253fb:	data16 add BYTE PTR [ebx+0xa00ccff],al
  425402:	or     DWORD PTR [ecx+0x1b4c7c5],0xffffffce
  425409:	add    BYTE PTR [esi+eax*1-0x1],cl
  42540d:	add    BYTE PTR [eax],al
  42540f:	inc    DWORD PTR [eax]
  425411:	xchg   esi,eax
  425412:	int3   
  425413:	add    BYTE PTR [eax+0x324124c1],al
  425419:	int3   
  42541a:	cmp    BYTE PTR [ecx+ecx*4],ah
  42541d:	inc    DWORD PTR [eax]
  42541f:	int3   
  425420:	add    al,ah
  425422:	(bad)  
  425423:	(bad)  
  425424:	jmp    0xf489:0xc61bc1fb
  42542b:	push   eax
  42542c:	inc    DWORD PTR [eax]
  42542e:	add    bh,bh
  425430:	(bad)  
  425431:	mov    ebx,0x294cff00
  425436:	out    0xd7,al
  425438:	test   DWORD PTR [ebx+0xff8d2e],0x4aff00ff
  425442:	cmp    edi,0xffffffef
  425445:	mov    dl,0x7c
  425447:	push   edi
  425448:	xchg   esp,eax
  425449:	add    DWORD PTR [edi-0x4d],0xffffffff
  42544d:	cmp    edi,0xffffffff
  425450:	inc    edx
  425452:	add    bh,bh
  425454:	and    ecx,DWORD PTR [edx+edi*2+0x33ffab45]
  42545b:	test   DWORD PTR [eax],0xccffccff
  425461:	add    BYTE PTR fs:[eax],al
  425464:	xchg   esi,eax
  425465:	xchg   esp,eax
  425466:	pop    ebx
  425467:	sti    
  425468:	leave  
  425469:	cmp    DWORD PTR [ebp-0x7cff7ccf],0xffffffff
  425470:	int3   
  425471:	jnp    0x42543f
  425473:	adc    DWORD PTR [ebp+0x23],0x41
  425477:	add    edx,edi
  425479:	jmp    FWORD PTR [edi+esi*8-0x1]
  42547d:	mov    DWORD PTR [eax],eax
  42547f:	dec    esp
  425481:	jae    0x425482
  425483:	add    bh,cl
  425485:	cli    
  425486:	adc    eax,0xd983f373
  42548b:	dec    edi
  42548c:	dec    DWORD PTR [ecx-0x1e7c0001]
  425492:	(bad)  
  425493:	call   DWORD PTR [ecx-0x29]
  425496:	fs dec esp
  425498:	sub    DWORD PTR [ecx+0xffc244],ecx
  42549e:	inc    DWORD PTR [eax]
  4254a0:	add    BYTE PTR [eax+0x61078383],dl
  4254a6:	daa    
  4254a7:	push   esi
  4254a8:	(bad)  
  4254a9:	call   DWORD PTR [edi+eiz*2]
  4254ac:	(bad)  
  4254ad:	inc    DWORD PTR [ebx-0xba0000]
  4254b3:	add    eax,0xffffffdc
  4254b6:	and    ch,BYTE PTR [ecx]
  4254b8:	jge    0x42543d
  4254ba:	push   ecx
  4254bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254bc:	(bad)  
  4254bd:	inc    DWORD PTR [ebx-0xc8007d]
  4254c3:	adc    DWORD PTR [eax],0xa
  4254c6:	jg     0x425450
  4254c8:	inc    ebp
  4254c9:	call   FWORD PTR [esi+0x21]
  4254cc:	mov    edi,edi
  4254ce:	(bad)  
  4254cf:	dec    esp
  4254d1:	es int3 
  4254d3:	or     DWORD PTR [edi+0xb375abe],0xffffff83
  4254da:	ins    BYTE PTR es:[edi],dx
  4254db:	rol    DWORD PTR [eax],1
  4254dd:	add    BYTE PTR [eax],al
  4254df:	add    BYTE PTR [ecx-0x4b7cffe7],cl
  4254e5:	mov    eax,0xcc5872e9
  4254ea:	repnz push 0x83ffff
  4254f0:	add    BYTE PTR [ebp-0x34],cl
  4254f3:	add    BYTE PTR [ebx-0x2c],bh
  4254f6:	mov    bl,0xb7
  4254f8:	jbe    0x4254f9
  4254fa:	push   ecx
  4254fb:	sub    eax,DWORD PTR [eax]
  4254fd:	mov    DWORD PTR [eax],eax
  4254ff:	add    bh,bh
  425501:	push   esp
  425502:	add    bh,bh
  425504:	push   edx
  425505:	or     bh,ah
  425507:	lock cmp edi,0xffffd728
  42550e:	cmp    edi,0x0
  425511:	out    0x0,al
  425513:	add    dh,ah
  425515:	jns    0x4254e0
  425517:	retf   0x8975
  42551a:	push   edi
  42551b:	sub    eax,DWORD PTR [ebx-0xff007d]
  425521:	and    DWORD PTR [eax],eax
  425523:	add    bl,bh
  425525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425526:	add    eax,0x34007873
  42552b:	jl     0x4254b0
  42552d:	int3   
  42552e:	inc    DWORD PTR [eax]
  425530:	mov    DWORD PTR [edx-0x1],edx
  425533:	call   FWORD PTR [edx-0x38]
  425536:	and    eax,edi
  425538:	loope  0x425539
  42553a:	or     edi,DWORD PTR [ecx+ecx*4+0x0]
  42553e:	(bad)  
  42553f:	inc    DWORD PTR [ebx-0x7876ff17]
  425545:	xor    ah,bh
  425547:	retf   
  425548:	scas   al,BYTE PTR es:[edi]
  425549:	call   DWORD PTR [ebp-0x11]
  42554c:	(bad)  
  42554d:	inc    DWORD PTR [ebx-0xc20100]
  425553:	jmp    DWORD PTR [edi+0x5ba1a5a9]
  425559:	add    BYTE PTR [edi-0x75],cl
  42555c:	int3   
  42555d:	inc    DWORD PTR [eax]
  42555f:	add    ah,cl
  425561:	fdivr  st,st(7)
  425563:	jmp    DWORD PTR [eax]
  425565:	outs   dx,DWORD PTR ds:[esi]
  425566:	mov    ecx,DWORD PTR [ebp+0x7d938313]
  42556c:	int3   
  42556d:	add    DWORD PTR [eax],0x0
  425570:	inc    DWORD PTR [ebp+0x339e0000]
  425576:	jne    0x4255e4
  425578:	idiv   bh
  42557a:	cmp    cl,0x0
  42557d:	(bad)  
  42557e:	(bad)  
  42557f:	(bad)  
  425580:	dec    edx
  425582:	add    bh,bh
  425584:	inc    edi
  425585:	(bad)  
  425586:	and    al,0xfe
  425588:	mov    dl,0x0
  42558a:	stos   DWORD PTR es:[edi],eax
  42558b:	xor    eax,DWORD PTR [eax]
  42558d:	inc    DWORD PTR [ebx-0x33743301]
  425593:	add    BYTE PTR [edx],ch
  425595:	(bad)  
  425597:	fsubr  QWORD PTR [eax+eax*1-0x33ff5a51]
  42559e:	dec    DWORD PTR [ecx+0xff77ff]
  4255a4:	arpl   ax,di
  4255a6:	sub    al,0xdd
  4255a8:	rol    BYTE PTR [eax],0x78
  4255ab:	cmp    bh,bh
  4255ad:	add    bh,bh
  4255af:	int3   
  4255b0:	add    BYTE PTR [ebx+eax*4+0x667f583],dl
  4255b7:	push   ebx
  4255b8:	adc    esp,ecx
  4255ba:	xlat   BYTE PTR ds:[ebx]
  4255bb:	push   ecx
  4255bc:	inc    DWORD PTR [ebx-0x37000100]
  4255c2:	add    bh,bh
  4255c4:	dec    ebp
  4255c5:	push   ebp
  4255c6:	jmp    0x83bd:0xf3ffb5e5
  4255cd:	add    bh,bh
  4255cf:	dec    esp
  4255d1:	fmul   st,st(4)
  4255d3:	cmp    DWORD PTR [ecx-0x49c42b06],0xffffff89
  4255da:	mov    bh,0x11
  4255dc:	mov    DWORD PTR [eax],eax
  4255de:	add    BYTE PTR [eax],al
  4255e0:	int3   
  4255e1:	or     cl,ah
  4255e3:	(bad)  
  4255e4:	jle    0x4255c9
  4255e6:	retf   
  4255e7:	ret    
  4255e8:	xchg   edx,eax
  4255e9:	int3   
  4255ea:	dec    ebp
  4255eb:	inc    ecx
  4255ec:	int3   
  4255ed:	add    bh,bh
  4255ef:	add    bh,bh
  4255f1:	mov    cl,0x0
  4255f3:	mov    ebp,ebp
  4255f5:	add    al,0xf2
  4255f7:	mov    edx,0x87dd89cb
  4255fc:	add    bh,bh
  4255fe:	add    BYTE PTR [eax],al
  425600:	add    BYTE PTR [eax],ah
  425602:	inc    DWORD PTR [ebx-0x4a88b85e]
  425608:	pop    esi
  425609:	sub    DWORD PTR [eax],0xffffffc8
  42560c:	add    BYTE PTR [eax],al
  42560e:	add    DWORD PTR [eax],0x0
  425611:	mov    ecx,0xc33f83ff
  425616:	sub    BYTE PTR [edx],dh
  425618:	pop    ebx
  425619:	add    BYTE PTR [edx-0x7600b3],ch
  42561f:	int3   
  425620:	add    BYTE PTR [ecx-0x34],ch
  425623:	call   DWORD PTR [ebx+0x59]
  425626:	lods   eax,DWORD PTR ds:[esi]
  425627:	inc    eax
  425628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425629:	and    DWORD PTR [edi+0xff61],0x0
  425630:	mov    ebp,edx
  425632:	dec    esp
  425634:	lds    edx,FWORD PTR [ebx]
  425636:	lock fadd DWORD PTR [ebp+0x0]
  42563a:	lods   eax,DWORD PTR ds:[esi]
  42563b:	test   al,0x83
  42563d:	(bad)  
  42563e:	inc    DWORD PTR [ebx-0x7c003a01]
  425644:	xchg   esi,eax
  425645:	jbe    0x42567b
  425647:	cmp    eax,0x8e88008c
  42564c:	(bad)  
  42564d:	(bad)  
  42564e:	inc    DWORD PTR [eax]
  425650:	jmp    esp
  425652:	inc    DWORD PTR [ebx-0x8207b8c]
  425658:	jns    0x425659
  42565a:	cs ret 
  42565c:	mov    DWORD PTR [eax],eax
  42565e:	cmp    edi,0x0
  425661:	cmp    bh,bh
  425663:	mov    DWORD PTR [eax-0x73edfa4],esi
  425669:	jmp    FWORD PTR [ebx+0x15]
  42566c:	add    bh,bh
  42566e:	dec    esp
  425670:	inc    DWORD PTR [edx-0x1]
  425673:	int3   
  425674:	inc    ecx
  425675:	pop    ebp
  425676:	mov    ebx,0xe88914fe
  42567b:	and    al,0xff
  42567d:	inc    DWORD PTR [ebx-0xb90000]
  425683:	cmp    edi,0xffffffd8
  425686:	xchg   BYTE PTR [ecx-0x61],ah
  425689:	mov    DWORD PTR [ebp+0x23],edi
  42568c:	add    bh,bh
  42568e:	(bad)  
  42568f:	inc    DWORD PTR [eax]
  425691:	and    edi,edi
  425693:	(bad)  
  425694:	jmp    0x6fff:0x6412ee5f
  42569b:	jp     0x425620
  42569d:	cmp    edi,0xffffffff
  4256a0:	xor    DWORD PTR [eax-0x7d],0xffffffff
  4256a4:	lods   al,BYTE PTR ds:[esi]
  4256a5:	cmp    DWORD PTR [ecx+0x3],ebx
  4256a8:	xor    al,BYTE PTR [eax]
  4256aa:	popf   
  4256ab:	repnz add BYTE PTR [eax],al
  4256ae:	mov    edi,edi
  4256b0:	(bad)  
  4256b1:	aas    
  4256b2:	inc    DWORD PTR [eax]
  4256b4:	ja     0x425645
  4256b6:	aad    0x75
  4256b8:	jp     0x425686
  4256ba:	inc    eax
  4256bb:	inc    ecx
  4256bc:	or     DWORD PTR [ecx+0x57000000],0x0
  4256c3:	mov    ebp,edx
  4256c5:	mov    eax,?
  4256c7:	sbb    ecx,edx
  4256c9:	jmp    FWORD PTR [eax+0xff0050]
  4256cf:	mov    edi,edi
  4256d1:	or     al,0x0
  4256d3:	jmp    FWORD PTR [edx+0x38ba4ed2]
  4256d9:	call   DWORD PTR [ecx]
  4256db:	loope  0x4256dd
  4256dd:	inc    DWORD PTR [eax]
  4256df:	add    bh,bh
  4256e1:	cmp    edi,edi
  4256e3:	add    ah,dl
  4256e5:	fwait
  4256e6:	or     ebx,0x19e10092
  4256ec:	inc    DWORD PTR [eax]
  4256ee:	(bad)  
  4256ef:	(bad)  
  4256f0:	inc    DWORD PTR [esi]
  4256f2:	add    BYTE PTR [eax],al
  4256f4:	mov    esp,0xb124edf8
  4256f9:	int3   
  4256fa:	inc    edi
  4256fb:	jb     0x4256fd
  4256fd:	int3   
  4256fe:	cmp    edi,0x0
  425701:	iret   
  425702:	add    BYTE PTR [eax],al
  425704:	jb     0x4256bd
  425706:	into   
  425707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425708:	retf   
  425709:	inc    esp
  42570b:	xchg   ebp,eax
  42570c:	dec    esp
  42570e:	inc    DWORD PTR [eax]
  425710:	adc    DWORD PTR [ecx-0x50930001],0xfffffffb
  425717:	mov    ebx,0xfa02ff53
  42571c:	inc    DWORD PTR [eax]
  42571e:	add    BYTE PTR [eax],al
  425720:	int3   
  425721:	mov    ebx,0x18890083
  425726:	and    eax,DWORD PTR [edi+0x4f03ff64]
  42572c:	mov    DWORD PTR [eax],eax
  42572e:	add    BYTE PTR [eax],al
  425730:	dec    DWORD PTR ds:0x81348389
  425736:	ret    
  425737:	cmp    ecx,0x89a54e00
  42573d:	add    BYTE PTR [eax],al
  42573f:	mov    edi,edi
  425741:	(bad)  
  425742:	(bad)  
  425743:	jmp    FWORD PTR [edi+0x69c6eeb1]
  425749:	add    bl,bh
  42574b:	mov    ebx,0xff00ff
  425750:	sub    DWORD PTR [esi-0x1],0xffffffff
  425754:	push   ebp
  425755:	pop    esi
  425756:	adc    esp,DWORD PTR [ecx-0x5a]
  425759:	jmp    DWORD PTR [edi-0xff0001]
  42575f:	int3   
  425760:	(bad)  
  425761:	out    dx,eax
  425762:	dec    esp
  425764:	mov    edx,0xe2404ba8
  425769:	dec    DWORD PTR [esi+eiz*2]
  42576c:	inc    DWORD PTR [eax]
  42576e:	add    DWORD PTR [ebx-0x7c00947d],0xffffffac
  425775:	push   ds
  425776:	(bad)  
  425777:	mov    edx,esp
  425779:	add    BYTE PTR [edx],ah
  42577b:	or     DWORD PTR ds:[ecx-0x4fffff01],0xffffffff
  425783:	sub    DWORD PTR [ecx+0x3c],0xffffffdc
  425787:	data16 (bad) 
  425789:	dec    DWORD PTR [ebx-0x17]
  42578c:	dec    esp
  42578e:	add    bh,bh
  425790:	add    BYTE PTR [edi],cl
  425792:	add    BYTE PTR [ebx-0x470ce4ce],al
  425798:	outs   dx,DWORD PTR ds:[esi]
  425799:	call   DWORD PTR [edi]
  42579b:	mov    WORD PTR [ebx-0x10000],es
  4257a1:	mov    edx,0x2bf60083
  4257a6:	sub    al,0x8e
  4257a8:	and    edi,edi
  4257aa:	dec    edi
  4257ab:	mov    eax,ds:0xcc8300ff
  4257b0:	int3   
  4257b1:	(bad)  
  4257b2:	(bad)  
  4257b3:	push   DWORD PTR [ebx-0x4e]
  4257b6:	and    ebx,DWORD PTR [ebp-0x3a]
  4257b9:	sub    ecx,0x62
  4257bc:	add    ah,cl
  4257be:	(bad)  
  4257bf:	(bad)  
  4257c0:	dec    esi
  4257c2:	(bad)  
  4257c3:	dec    DWORD PTR [ebx+eax*8-0x7fa54a]
  4257ca:	test   eax,0xff008950
  4257cf:	dec    esp
  4257d1:	call   0xe52056d6
  4257d6:	jp     0x425848
  4257d8:	and    al,0xff
  4257da:	and    BYTE PTR [edi-0x7d],bh
  4257dd:	add    bh,bh
  4257df:	(bad)  
  4257e0:	call   FWORD PTR ds:0xab430000
  4257e6:	daa    
  4257e7:	popa   
  4257e8:	jmp    FWORD PTR [bx]
  4257eb:	xchg   ebp,eax
  4257ec:	inc    DWORD PTR [ebx-0x4b7cff01]
  4257f2:	add    bh,bh
  4257f4:	and    DWORD PTR [edx+edx*1+0x2f00db21],edx
  4257fb:	push   ecx
  4257fc:	inc    DWORD PTR [eax]
  4257fe:	add    bh,bh
  425800:	or     DWORD PTR [edx-0xc320000],0x31
  425807:	into   
  425808:	mov    ch,0x0
  42580a:	xor    BYTE PTR [ebp-0x337c7700],al
  425810:	dec    DWORD PTR [edx-0x77]
  425813:	add    BYTE PTR [ebx-0x636ca7be],bl
  425819:	xor    DWORD PTR [ecx+edi*2-0x1],0xffffffff
  42581e:	add    DWORD PTR [ebx+0xefff],0xffffffe8
  425825:	cs cld 
  425827:	int3   
  425828:	sbb    edi,edi
  42582a:	mov    bh,BYTE PTR [edi-0xff01]
  425830:	call   DWORD PTR [esp+ecx*8-0x730a000]
  425837:	int3   
  425838:	(bad)  
  42583b:	push   ss
  42583c:	inc    DWORD PTR [eax]
  42583e:	(bad)  
  42583f:	inc    DWORD PTR [ebx+0x7f83ffe4]
  425845:	call   0x840787b2
  42584a:	sub    DWORD PTR [ecx],esi
  42584c:	inc    DWORD PTR [eax]
  42584e:	inc    DWORD PTR [ebx-0xff7800]
  425854:	test   cl,bh
  425856:	pop    ebx
  425857:	outs   dx,BYTE PTR ds:[esi]
  425858:	outs   dx,DWORD PTR ds:[esi]
  425859:	add    ah,ch
  42585b:	sahf   
  42585c:	add    BYTE PTR [ebx-0x76ff007d],al
  425862:	dec    esp
  425864:	test   al,0x6f
  425866:	mov    ch,0x39
  425868:	add    BYTE PTR [eax],0xdc
  42586b:	aaa    
  42586c:	add    BYTE PTR [ebx-0x5900337d],al
  425872:	or     esp,0xffffff8f
  425875:	xor    al,0x13
  425877:	scas   al,BYTE PTR es:[edi]
  425878:	push   0xffd86900
  42587d:	(bad)  
  42587e:	inc    DWORD PTR [eax]
  425880:	push   DWORD PTR [edx+0x3b2ff83]
  425886:	mov    ss,WORD PTR [edx-0x60]
  425889:	add    BYTE PTR [esi-0x10],bl
  42588c:	add    bh,bh
  42588e:	add    ah,cl
  425890:	(bad)  
  425891:	jge    0x425816
  425893:	mov    DWORD PTR [ebx+0x3cc3e815],edx
  425899:	jmp    esi
  42589b:	mov    al,BYTE PTR [ebx-0x7600ff01]
  4258a1:	mov    BYTE PTR [ebx+0x3d5cb0cc],0xed
  4258a8:	ins    DWORD PTR es:[edi],dx
  4258a9:	cmp    DWORD PTR [esp+ebp*8],0xffffffcc
  4258ad:	mov    DWORD PTR [eax],eax
  4258af:	add    bh,bh
  4258b1:	nop
  4258b2:	mov    DWORD PTR [eax],eax
  4258b4:	xor    eax,0xe88c85d7
  4258b9:	add    BYTE PTR [ecx+ecx*2+0x0],al
  4258bd:	add    BYTE PTR [eax],al
  4258bf:	int3   
  4258c0:	call   DWORD PTR [ebp+0xd8c0000]
  4258c6:	xchg   esi,eax
  4258c7:	aaa    
  4258c8:	ror    BYTE PTR [ecx+0xff821a],cl
  4258ce:	inc    DWORD PTR [eax]
  4258d0:	add    BYTE PTR [eax+eax*1-0x331b6f00],ah
  4258d7:	call   0xcc:0xe27083c8
  4258de:	add    BYTE PTR [ebx-0xff4101],al
  4258e4:	xor    edi,DWORD PTR [ecx-0x60]
  4258e7:	ins    DWORD PTR es:[edi],dx
  4258e8:	test   al,0x0
  4258ea:	xchg   ebp,eax
  4258eb:	cli    
  4258ec:	(bad)  
  4258ed:	(bad)  
  4258ee:	(bad)  
  4258ef:	(bad)  
  4258f0:	push   DWORD PTR [esi]
  4258f2:	(bad)  
  4258f3:	call   FWORD PTR [edi]
  4258f5:	and    al,0x4e
  4258f7:	sbb    ah,BYTE PTR [ebp+0x795f00]
  4258fd:	inc    DWORD PTR [eax]
  4258ff:	add    BYTE PTR [eax],al
  425901:	pop    ss
  425902:	inc    DWORD PTR [eax]
  425904:	sahf   
  425905:	lea    ecx,[edi]
  425907:	push   edx
  425908:	push   eax
  425909:	jmp    FWORD PTR [edx]
  42590b:	add    al,0x0
  42590d:	inc    DWORD PTR [eax]
  42590f:	add    bh,bh
  425911:	push   edi
  425912:	inc    DWORD PTR [ebx+0x296cf94f]
  425918:	jnp    0x425919
  42591a:	xor    edx,DWORD PTR [esi-0x1]
  42591d:	add    DWORD PTR [eax],0xffffffff
  425920:	add    BYTE PTR [eax-0x10b0ff34],dh
  425926:	push   ebx
  425927:	shl    DWORD PTR ds:0x61fd83,0xff
  42592e:	(bad)  
  42592f:	inc    DWORD PTR [eax]
  425931:	cmp    eax,0xca6aff00
  425936:	mov    WORD PTR [ebx+edx*2-0x1],gs
  42593a:	inc    esi
  42593b:	jl     0x42593d
  42593d:	cmp    edi,0xffffffff
  425940:	inc    DWORD PTR [edx-0x7d]
  425943:	mov    DWORD PTR [ecx-0x713d69c3],ebp
  425949:	add    dl,dl
  42594b:	ror    DWORD PTR [ecx+0xffff],cl
  425951:	and    al,0xff
  425953:	add    BYTE PTR [ebx-0x7a],ah
  425956:	and    cl,al
  425958:	sar    edi,cl
  42595a:	scas   eax,DWORD PTR es:[edi]
  42595b:	push   ds
  42595c:	(bad)  
  42595d:	(bad)  
  42595e:	inc    DWORD PTR [eax]
  425960:	sub    DWORD PTR [edx+0x158000cc],0x5e
  425967:	imul   esi,DWORD PTR [eax],0xd90989
  42596d:	inc    DWORD PTR [eax]
  42596f:	(bad)  
  425970:	dec    DWORD PTR [edx+0x0]
  425973:	xor    DWORD PTR [edx-0x56],0x76
  425977:	or     al,0x8d
  425979:	jmp    FWORD PTR [ecx-0x7600ffb7]
  42597f:	add    BYTE PTR [ebx-0x44ffff03],al
  425985:	lds    edi,FWORD PTR [ebp+0x48]
  425988:	scas   eax,DWORD PTR es:[edi]
  425989:	add    al,bl
  42598b:	pop    ecx
  42598c:	add    DWORD PTR [eax],0xffffffff
  42598f:	add    BYTE PTR [eax],al
  425991:	popf   
  425992:	add    bh,bh
  425994:	mov    esi,0xea381450
  425999:	add    bh,bl
  42599b:	cmp    bh,0x83
  42599e:	inc    DWORD PTR [eax]
  4259a0:	(bad)  
  4259a1:	cmp    DWORD PTR [ecx-0x4f674f77],ecx
  4259a7:	or     eax,0x8c38ff6d
  4259ac:	or     DWORD PTR [ecx+0x7a0000ff],0xffffffff
  4259b3:	cmp    DWORD PTR [edi+ebp*8-0x11],0xffffff80
  4259b8:	ins    DWORD PTR es:[edi],dx
  4259b9:	cmp    DWORD PTR [esi],0x7a
  4259bc:	(bad)  
  4259bd:	(bad)  
  4259be:	(bad)  
  4259bf:	inc    DWORD PTR [ebx+0x5700004d]
  4259c5:	popa   
  4259c6:	icebp  
  4259c7:	dec    ebp
  4259c8:	fadd   QWORD PTR [eax]
  4259ca:	js     0x42599e
  4259cc:	add    bh,bh
  4259ce:	cmp    edi,0x0
  4259d1:	xor    BYTE PTR [eax],al
  4259d3:	jmp    ebp
  4259d5:	sti    
  4259d6:	jmp    0xd1c5e088
  4259db:	or     al,0xff
  4259dd:	inc    DWORD PTR [eax]
  4259df:	dec    DWORD PTR [ecx+0x11000000]
  4259e5:	mov    fs,WORD PTR [edi+0x10ff70e0]
  4259eb:	xor    eax,0x83cc8383
  4259f0:	jmp    edx
  4259f2:	cmp    edi,0x2b
  4259f5:	sbb    DWORD PTR [eax-0x2f],esp
  4259f8:	(bad)  
  4259f9:	jmp    FWORD PTR [edi+edx*1+0x0]
  4259fd:	inc    DWORD PTR [eax]
  4259ff:	inc    DWORD PTR [eax]
  425a01:	inc    eax
  425a02:	(bad)  
  425a03:	push   edx
  425a05:	pop    ebp
  425a06:	imul   eax,DWORD PTR [ebx+0x34],0x83efff
  425a0d:	mov    DWORD PTR [eax],eax
  425a0f:	(bad)  
  425a10:	call   DWORD PTR [edi]
  425a12:	(bad)  
  425a13:	jmp    FWORD PTR [ebx+0x23]
  425a16:	loop   0x4259b0
  425a18:	cmp    DWORD PTR [ebx+0xc303],eax
  425a1e:	inc    DWORD PTR [ebx+0xfff100]
  425a24:	imul   edx,DWORD PTR [eax],0xffffff85
  425a27:	cmp    al,0xd4
  425a29:	and    DWORD PTR [esi-0xff07],0x0
  425a30:	add    BYTE PTR [edi-0x7d],dl
  425a33:	(bad)  
  425a34:	ficomp DWORD PTR [ecx]
  425a36:	mov    edx,0x44891ad4
  425a3b:	cmp    edi,0xffffff83
  425a3e:	mov    DWORD PTR [eax],eax
  425a40:	dec    DWORD PTR [eax]
  425a42:	mov    edi,edi
  425a44:	sbb    eax,0xb4cea393
  425a49:	add    BYTE PTR [esi-0x7c51],ah
  425a4f:	(bad)  
  425a50:	push   DWORD PTR [edx+0x1617cccc]
  425a56:	mov    eax,0xc0ff76b8
  425a5b:	outs   dx,DWORD PTR ds:[esi]
  425a5c:	(bad)  
  425a5d:	(bad)  
  425a5e:	inc    DWORD PTR [eax]
  425a60:	push   DWORD PTR [edx-0x6d0aff01]
  425a66:	(bad)  
  425a68:	(bad)  
  425a69:	(bad)  
  425a6a:	jg     0x425ae2
  425a6c:	(bad)  
  425a6d:	inc    DWORD PTR [eax]
  425a6f:	add    DWORD PTR [eax],0xffffffcd
  425a72:	(bad)  
  425a73:	dec    esp
  425a75:	ror    eax,0x39
  425a78:	lds    eax,FWORD PTR [eax]
  425a7a:	in     al,0x10
  425a7c:	int3   
  425a7d:	add    ah,cl
  425a7f:	(bad)  
  425a80:	(bad)  
  425a81:	jge    0x425a83
  425a83:	add    BYTE PTR [esi+eax*8],bh
  425a86:	add    esp,DWORD PTR [esi+edx*8-0x257900]
  425a8d:	add    BYTE PTR [ebx-0x3334ff7d],al
  425a93:	jmp    FWORD PTR [eax+0x0]
  425a96:	jmp    0x8327:0x24ff51c4
  425a9d:	add    ah,cl
  425a9f:	(bad)  
  425aa0:	(bad)  
  425aa1:	fcos   
  425aa3:	push   DWORD PTR [esi-0x78]
  425aa6:	shl    BYTE PTR [edx-0x78],0xff
  425aaa:	sti    
  425aab:	cmp    al,0xcc
  425aad:	int3   
  425aae:	(bad)  
  425aaf:	(bad)  
  425ab0:	call   FWORD PTR [edi-0x7328ff01]
  425ab6:	test   al,0xe4
  425ab8:	icebp  
  425ab9:	mov    DWORD PTR [ebx],edi
  425abb:	cmp    edi,edi
  425abd:	add    DWORD PTR [eax],0x0
  425ac0:	(bad)  
  425ac1:	cmp    BYTE PTR [eax],al
  425ac3:	sub    DWORD PTR [edx],0xffffffb4
  425ac6:	(bad)  
  425ac8:	inc    edx
  425ac9:	or     DWORD PTR [ebx],0x79
  425acc:	cmp    edi,0x0
  425acf:	add    bh,bh
  425ad1:	jmp    0x425ad2
  425ad3:	push   DWORD PTR [edi+0x1cdbccb5]
  425ad9:	jmp    DWORD PTR [eax+0x45]
  425adc:	inc    DWORD PTR [eax]
  425ade:	add    bh,bh
  425ae0:	(bad)  
  425ae1:	mov    edi,0xe742ff00
  425ae6:	das    
  425ae7:	imul   esi
  425ae9:	add    BYTE PTR [esi],al
  425aeb:	gs (bad) 
  425aed:	(bad)  
  425aee:	(bad)  
  425aef:	inc    DWORD PTR [eax]
  425af1:	and    al,BYTE PTR [eax]
  425af3:	adc    DWORD PTR [ebx-0x1635f28e],0xffffffff
  425afa:	cs and bh,bh
  425afd:	(bad)  
  425afe:	inc    DWORD PTR [eax]
  425b00:	(bad)  
  425b01:	jl     0x425a8c
  425b03:	jmp    FWORD PTR [eax-0x6e8fd598]
  425b09:	call   ebp
  425b0b:	xlat   BYTE PTR ds:[ebx]
  425b0c:	dec    DWORD PTR [ecx-0x5007c77]
  425b12:	inc    DWORD PTR [eax]
  425b14:	mov    edx,0x6e93350b
  425b19:	dec    esi
  425b1b:	daa    
  425b1c:	dec    esp
  425b1e:	inc    DWORD PTR [ebx-0xffe900]
  425b24:	inc    edx
  425b25:	loope  0x425ae8
  425b27:	xchg   ecx,eax
  425b28:	dec    esp
  425b29:	call   DWORD PTR [edx-0x76007cfe]
  425b2f:	mov    DWORD PTR [eax],eax
  425b31:	retf   
  425b32:	dec    DWORD PTR [ecx+0x40997dbc]
  425b38:	add    bh,bh
  425b3a:	scas   eax,DWORD PTR es:[edi]
  425b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b3c:	add    bh,bh
  425b3e:	(bad)  
  425b3f:	(bad)  
  425b40:	inc    DWORD PTR [ecx]
  425b42:	mov    edi,edi
  425b44:	in     al,dx
  425b45:	(bad)
  425b48:	mov    esp,0xff9f5fff
  425b4d:	inc    DWORD PTR [ebx-0x760100]
  425b53:	call   DWORD PTR [ebx-0x71]
  425b56:	out    0xf6,al
  425b58:	xchg   esp,eax
  425b59:	jmp    DWORD PTR [edx]
  425b5b:	arpl   di,di
  425b5d:	inc    DWORD PTR [eax]
  425b5f:	add    DWORD PTR [eax],0xffffff9a
  425b62:	inc    DWORD PTR [eax]
  425b64:	xchg   ecx,eax
  425b65:	sahf   
  425b66:	push   eax
  425b67:	and    eax,0xf3ddffd3
  425b6c:	inc    DWORD PTR [eax]
  425b6e:	(bad)  
  425b6f:	(bad)  
  425b70:	inc    ebx
  425b72:	inc    DWORD PTR [eax]
  425b74:	out    0xcd,eax
  425b76:	dec    ebp
  425b77:	cmp    BYTE PTR [ebp-0x33060001],0x0
  425b7e:	(bad)  
  425b7f:	inc    DWORD PTR [eax]
  425b81:	jmp    0x1306:0x50250000
  425b88:	pop    eax
  425b89:	mov    esi,eax
  425b8b:	mov    WORD PTR [eax],es
  425b8d:	add    ah,cl
  425b8f:	inc    DWORD PTR [ebx+0x12cc00b1]
  425b95:	(bad)  
  425b96:	hlt    
  425b97:	mov    al,ds:0xe3758307
  425b9c:	add    BYTE PTR [eax],al
  425b9e:	add    BYTE PTR [eax],al
  425ba0:	call   ebx
  425ba2:	mov    edi,edi
  425ba4:	jge    0x425bf8
  425ba6:	(bad)  
  425ba7:	inc    DWORD PTR [ebx+0xffff]
  425bad:	(bad)  
  425bae:	inc    DWORD PTR [eax]
  425bb0:	pop    ebx
  425bb1:	shl    ch,0x83
  425bb4:	add    BYTE PTR [ebx-0x1],dh
  425bb7:	mov    DWORD PTR [edi+0xd32],ebp
  425bbd:	mov    edi,?
  425bbf:	call   DWORD PTR [ebp-0x7c6943]
  425bc5:	iret   
  425bc6:	int3   
  425bc7:	call   DWORD PTR [edx-0x5b]
  425bca:	dec    DWORD PTR [ecx-0x7ca300]
  425bd0:	or     eax,0x830096aa
  425bd5:	push   ds
  425bd6:	(bad)  
  425bd7:	push   DWORD PTR [ecx+0xcc2ac7]
  425bdd:	add    BYTE PTR [eax],0xff
  425be0:	push   edx
  425be1:	outs   dx,BYTE PTR ds:[esi]
  425be2:	mov    eax,ds:0x88ffcc
  425be7:	dec    DWORD PTR [edx-0xffc41f]
  425bed:	dec    ebx
  425bee:	(bad)  
  425bef:	jmp    esi
  425bf1:	nop
  425bf2:	fld    DWORD PTR [ebx-0x3333cd01]
  425bf8:	pushf  
  425bf9:	jge    0x425c0a
  425bfb:	inc    DWORD PTR [eax]
  425bfd:	xchg   BYTE PTR [eax],al
  425bff:	mov    ecx,ecx
  425c01:	pop    ds
  425c02:	inc    esi
  425c03:	dec    esp
  425c05:	out    dx,eax
  425c06:	dec    DWORD PTR [ecx-0xbd8057]
  425c0c:	jmp    FWORD PTR [esi-0x1]
  425c0f:	add    BYTE PTR ds:0x8389a704,ch
  425c15:	mov    BYTE PTR [ebx-0x27144200],al
  425c1b:	add    bh,bh
  425c1d:	stc    
  425c1e:	add    bh,bh
  425c20:	popa   
  425c21:	arpl   WORD PTR [ebx],dx
  425c23:	add    bh,bh
  425c25:	ss add bh,bh
  425c28:	adc    bh,BYTE PTR [edx+0x3e]
  425c2b:	add    BYTE PTR [eax],al
  425c2d:	jecxz  0x425c2e
  425c2f:	add    al,al
  425c31:	cmp    dh,BYTE PTR [edi-0x34]
  425c34:	int3   
  425c35:	sub    BYTE PTR [eax],al
  425c37:	mov    DWORD PTR [ebx-0x7c7c1c49],eax
  425c3d:	inc    esi
  425c3e:	inc    DWORD PTR [eax]
  425c40:	lods   eax,DWORD PTR ds:[esi]
  425c41:	aaa    
  425c42:	mov    WORD PTR [eax],es
  425c44:	add    BYTE PTR ds:0x31dff00,al
  425c4a:	add    BYTE PTR cs:[ebx+0x19ccff40],al
  425c51:	cs aam 0x0
  425c54:	int3   
  425c55:	xchg   DWORD PTR [eax],eax
  425c57:	int3   
  425c58:	jae    0x425c17
  425c5a:	cmp    edi,edi
  425c5c:	and    DWORD PTR [edi-0x34],0xffffffff
  425c60:	lods   eax,DWORD PTR ds:[esi]
  425c61:	sub    BYTE PTR [eax+eax*1],bl
  425c64:	add    BYTE PTR [edi],dl
  425c66:	(bad)  
  425c67:	jmp    DWORD PTR [edx]
  425c69:	arpl   dx,bp
  425c6b:	inc    DWORD PTR [ebx-0x4dff3361]
  425c71:	jg     0x425ca2
  425c73:	(bad)  
  425c74:	dec    esp
  425c76:	int3   
  425c77:	jmp    DWORD PTR [edx+eax*4+0x2b00ff84]
  425c7e:	add    DWORD PTR [eax],0xffffffc4
  425c81:	jg     0x425c33
  425c83:	add    DWORD PTR [ebx-0x647c0072],0xffffffa6
  425c8a:	nop
  425c8b:	add    DWORD PTR [eax],0xffffffeb
  425c8e:	inc    DWORD PTR [eax]
  425c90:	xchg   BYTE PTR [edi+edx*4],dh
  425c93:	add    bh,bh
  425c95:	dec    esp
  425c96:	add    bh,bh
  425c98:	sbb    esp,DWORD PTR [ebx]
  425c9a:	retf   0xff83
  425c9d:	mov    ds:0xfa3600ff,eax
  425ca2:	xchg   edi,eax
  425ca3:	inc    DWORD PTR [ebx-0x29ff0074]
  425ca9:	xor    ah,BYTE PTR [ebp+0x0]
  425cac:	add    dl,cl
  425cae:	(bad)  
  425caf:	(bad)  
  425cb0:	jp     0x425c8b
  425cb2:	jns    0x425cb4
  425cb4:	inc    DWORD PTR [edi-0x77]
  425cb7:	(bad)  
  425cb8:	mov    eax,0xff00e2ad
  425cbd:	out    0x89,al
  425cbf:	inc    DWORD PTR [ecx]
  425cc1:	cld    
  425cc2:	sub    eax,DWORD PTR [eax]
  425cc4:	inc    edi
  425cc6:	inc    DWORD PTR [ebx+0xdb6343]
  425ccc:	push   DWORD PTR [edi-0x1]
  425ccf:	call   FWORD PTR ds:0x89835d7c
  425cd5:	fs int3 
  425cd7:	inc    DWORD PTR [esi+0x2b]
  425cda:	pop    es
  425cdb:	add    BYTE PTR [ebx+0x50fffffc],al
  425ce1:	ficom  DWORD PTR [ecx-0x5a3301]
  425ce7:	add    BYTE PTR [esi],bh
  425ce9:	test   BYTE PTR [eax+eax*1+0x8997cc],bh
  425cf0:	fadd   QWORD PTR ds:0xe7cc00e5
  425cf6:	add    bh,bh
  425cf8:	push   ds
  425cf9:	scas   al,BYTE PTR es:[edi]
  425cfa:	sar    bh,cl
  425cfc:	cmp    DWORD PTR [ecx],0xffffffff
  425cff:	push   DWORD PTR [edx+0x7a]
  425d02:	mov    ds:0x830b0000,al
  425d07:	call   DWORD PTR [esp+esi*2]
  425d0a:	mov    al,0xff
  425d0c:	int3   
  425d0d:	loop   0x425d0f
  425d0f:	(bad)  
  425d10:	clc    
  425d11:	dec    ecx
  425d12:	jge    0x425d13
  425d14:	xor    DWORD PTR [eax],0xffffffcc
  425d17:	jmp    DWORD PTR [ebp+eiz*2-0x42]
  425d1b:	inc    DWORD PTR [eax]
  425d1d:	push   esi
  425d1e:	mov    DWORD PTR [ecx-0x10a31f],ecx
  425d24:	add    BYTE PTR [ebp-0x1],dh
  425d27:	add    BYTE PTR [esi],ch
  425d29:	sahf   
  425d2a:	cld    
  425d2b:	add    bh,bh
  425d2d:	cwde   
  425d2e:	dec    DWORD PTR [ecx-0x37ff9]
  425d34:	xor    ebp,0xffffff89
  425d37:	push   ebx
  425d39:	and    ecx,esi
  425d3b:	add    bh,bh
  425d3d:	mov    ecx,0xd899ffcc
  425d42:	mov    esp,cs
  425d44:	(bad)  
  425d45:	mov    ebp,0xdcc600ff
  425d4a:	fwait
  425d4b:	cmp    edi,0xffffff9f
  425d4e:	inc    DWORD PTR [eax]
  425d50:	ss inc di
  425d53:	inc    DWORD PTR [eax]
  425d55:	mov    ah,0x0
  425d57:	add    ch,bl
  425d59:	jb     0x425dba
  425d5b:	inc    DWORD PTR [ebx+0x11ffff82]
  425d61:	xor    BYTE PTR [eax-0x8fff01],al
  425d67:	cmp    edx,0xffffffdd
  425d6a:	xor    al,BYTE PTR [eax]
  425d6c:	or     eax,0xffffff83
  425d6f:	add    BYTE PTR [eax+0x4e],cl
  425d72:	sbb    al,BYTE PTR [eax]
  425d74:	add    bl,ch
  425d76:	(bad)  
  425d77:	(bad)  
  425d78:	jns    0x425da3
  425d7a:	mov    ch,0xff
  425d7c:	mov    DWORD PTR [ecx-0x1],eax
  425d7f:	jmp    DWORD PTR [ebx+ebp*1+0x7d]
  425d83:	add    BYTE PTR [eax],al
  425d85:	ins    DWORD PTR es:[edi],dx
  425d86:	inc    DWORD PTR [ebx-0x7c40496d]
  425d8c:	int3   
  425d8d:	rol    DWORD PTR [eax],0x0
  425d90:	stc    
  425d91:	push   dx
  425d93:	add    bh,bh
  425d95:	adc    eax,0xd93489ff
  425d9a:	(bad)  
  425d9c:	xor    DWORD PTR [edi+edi*8+0x0],0x18
  425da1:	adc    eax,0x260000ab
  425da6:	mov    edi,edi
  425da8:	loop   0x425e15
  425daa:	ret    
  425dab:	add    BYTE PTR [eax],al
  425dad:	sub    DWORD PTR [eax],eax
  425daf:	add    BYTE PTR [edx],cl
  425db1:	xchg   esp,eax
  425db2:	cs int3 
  425db4:	add    al,al
  425db6:	add    bh,bh
  425db8:	test   DWORD PTR [edx-0x4c00fffd],0xfacfffff
  425dc2:	sar    bh,1
  425dc4:	add    BYTE PTR [eax-0x34],ah
  425dc7:	cmp    DWORD PTR [ebp+0x8f08],0xffffff87
  425dce:	dec    esp
  425dd0:	dec    edi
  425dd1:	out    dx,eax
  425dd2:	cmp    al,0xff
  425dd4:	push   edx
  425dd6:	add    BYTE PTR [eax],al
  425dd8:	mov    ah,BYTE PTR [ebp-0x3700ff80]
  425dde:	inc    DWORD PTR [ebx+0x88bd0a]
  425de4:	jmp    DWORD PTR [edx]
  425de6:	inc    DWORD PTR [ebx+0x4f3525]
  425dec:	call   DWORD PTR [eax+0x0]
  425def:	jmp    DWORD PTR [ecx+0x46]
  425df2:	pop    edx
  425df3:	add    bh,bh
  425df5:	sub    DWORD PTR [ebx-0x47904700],eax
  425dfb:	dec    esp
  425dfd:	inc    ecx
  425dfe:	cmp    edi,0xffffff80
  425e01:	nop
  425e02:	sahf   
  425e03:	inc    DWORD PTR [eax]
  425e05:	scas   al,BYTE PTR es:[edi]
  425e06:	add    DWORD PTR [eax],0xfffffffc
  425e09:	xchg   ebx,eax
  425e0a:	fld    DWORD PTR [eax]
  425e0c:	add    bh,ah
  425e0e:	inc    DWORD PTR [eax]
  425e10:	fadd   QWORD PTR [eax-0x4d]
  425e13:	add    DWORD PTR [ebx+0x5bff0070],0xd
  425e1a:	or     eax,DWORD PTR [eax]
  425e1c:	add    DWORD PTR [esp+ecx*8-0x1],0x2b
  425e21:	les    ebp,FWORD PTR [edi-0x7c700077]
  425e27:	add    BYTE PTR [edi-0x7c3371a5],bl
  425e2d:	mov    edx,0x408c8383
  425e32:	add    DWORD PTR [eax],eax
  425e34:	dec    ebx
  425e36:	add    ah,cl
  425e38:	sub    cl,BYTE PTR [ecx-0x5aff76f5]
  425e3e:	or     esp,0x39
  425e41:	cmp    bh,BYTE PTR [ebp+0x9fff00]
  425e47:	add    BYTE PTR ds:0x13fd,bh
  425e4d:	push   ebp
  425e4e:	(bad)  
  425e4f:	call   FWORD PTR [ebp-0xffa21e]
  425e55:	hlt    
  425e56:	add    bh,bh
  425e58:	ds xchg ebx,eax
  425e5a:	push   ds
  425e5b:	add    bh,bh
  425e5d:	inc    ecx
  425e5e:	dec    esp
  425e60:	mov    dl,0x85
  425e62:	pop    edx
  425e63:	inc    DWORD PTR [eax]
  425e65:	add    BYTE PTR [eax],al
  425e67:	cmp    DWORD PTR [ecx-0x33ff9b9f],0xffffffab
  425e6e:	inc    DWORD PTR [eax]
  425e70:	nop
  425e71:	adc    eax,0xe6ffff13
  425e76:	mov    edi,edi
  425e78:	bound  edx,QWORD PTR [edi]
  425e7a:	in     eax,0x0
  425e7c:	and    DWORD PTR [edx+0x689b00ff],0x26
  425e83:	int3   
  425e84:	inc    DWORD PTR [edi+0x37ac00ff]
  425e8a:	leave  
  425e8b:	add    DWORD PTR [eax],0xfffffff0
  425e8e:	int3   
  425e8f:	jmp    DWORD PTR [edi-0x69]
  425e92:	idiv   edi
  425e94:	inc    DWORD PTR [esi-0x1]
  425e97:	add    BYTE PTR [ebx+0x56],dh
  425e9a:	popf   
  425e9b:	add    BYTE PTR [ecx-0x310076d1],cl
  425ea1:	call   0x83ff:0x4d83834c
  425ea8:	mov    esi,0xff6ff3
  425ead:	mov    ebp,0xf0e40000
  425eb2:	inc    WORD PTR [ebx+0x4900ff64]
  425eb9:	dec    eax
  425eba:	sbb    edi,edi
  425ebc:	call   FWORD PTR [ebx-0x59eff01]
  425ec2:	cmp    ah,cl
  425ec4:	jmp    DWORD PTR [edx]
  425ec6:	add    ah,cl
  425ec8:	and    BYTE PTR [ecx],cl
  425eca:	mov    ebp,0x89408383
  425ecf:	cmp    DWORD PTR ds:0xff00e912,0xffffffb6
  425ed6:	(bad)  
  425ed7:	push   DWORD PTR [edx]
  425ed9:	mov    ds:0x66008344,eax
  425ede:	mov    edi,edi
  425ee0:	mov    ds:0x838c72,eax
  425ee5:	(bad)  
  425ee6:	inc    DWORD PTR [eax]
  425ee8:	out    0x58,eax
  425eea:	xchg   esp,eax
  425eeb:	inc    DWORD PTR [eax]
  425eed:	aam    0xff
  425eef:	add    BYTE PTR [ecx+edx*4-0x410000f8],ah
  425ef6:	(bad)  
  425ef7:	jmp    FWORD PTR [edi-0xff0c7a]
  425efd:	pop    eax
  425efe:	(bad)  
  425eff:	(bad)  
  425f00:	fisubr WORD PTR [ebp+0xb]
  425f03:	add    bh,bh
  425f05:	mov    ch,0xff
  425f07:	add    ah,ch
  425f09:	pop    esi
  425f0a:	mov    cl,0x0
  425f0c:	(bad)  
  425f0d:	stc    
  425f0e:	(bad)  
  425f0f:	jmp    DWORD PTR [ecx-0x51]
  425f12:	hlt    
  425f13:	add    BYTE PTR [ecx-0x38ffff23],cl
  425f19:	mov    ds:0x6b000057,al
  425f1e:	mov    edi,edi
  425f20:	mov    DWORD PTR [ebp+0x4a],edx
  425f23:	add    bh,bh
  425f25:	adc    BYTE PTR [eax],al
  425f27:	call   DWORD PTR [ebx-0x53]
  425f2a:	push   ebp
  425f2b:	(bad)  
  425f2c:	jmp    DWORD PTR [esi+0x700bffff]
  425f32:	xchg   ecx,eax
  425f33:	cmp    edi,0x22
  425f36:	(bad)  
  425f37:	push   DWORD PTR [ecx-0x33ff2a42]
  425f3d:	sub    al,0x0
  425f3f:	dec    DWORD PTR [esi]
  425f41:	sti    
  425f42:	fadd   DWORD PTR [eax]
  425f44:	add    BYTE PTR [esi+0x0],bh
  425f47:	int3   
  425f48:	sub    al,0x61
  425f4a:	push   ss
  425f4b:	or     esp,0xffffffd4
  425f4e:	inc    DWORD PTR [eax]
  425f50:	lock aas 
  425f52:	jb     0x425f53
  425f54:	call   eax
  425f56:	int3   
  425f57:	xor    DWORD PTR [edi],0x42
  425f5a:	inc    BYTE PTR [ebx-0x33769301]
  425f60:	or     eax,0xff0041e4
  425f65:	jo     0x425f33
  425f67:	sbb    DWORD PTR ds:0x89ff5184,0xffffffe0
  425f6e:	inc    DWORD PTR [ebx-0x70f4f2]
  425f74:	jmp    edi
  425f76:	mov    DWORD PTR [ebx+0xadca5b],eax
  425f7c:	int3   
  425f7d:	sbb    eax,0x1ce0ffff
  425f82:	fmul   st,st(4)
  425f84:	add    BYTE PTR [eax-0x1],cl
  425f87:	add    BYTE PTR ds:0xccaf0b,al
  425f8d:	pop    ebx
  425f8e:	inc    DWORD PTR [eax]
  425f90:	mov    WORD PTR [ecx],ds
  425f92:	idiv   bh
  425f94:	add    BYTE PTR [ebx],dh
  425f96:	inc    DWORD PTR [eax]
  425f98:	inc    esp
  425f99:	sub    bh,BYTE PTR [edi-0x7d]
  425f9c:	int3   
  425f9d:	adc    edi,edi
  425f9f:	add    BYTE PTR [ebx+0x2343],bl
  425fa5:	sbb    eax,0x3a4cff00
  425faa:	call   0x1e5fae
  425faf:	add    BYTE PTR [ecx-0x76007596],al
  425fb5:	and    bh,bh
  425fb7:	jmp    DWORD PTR [eax-0x7cff3071]
  425fbd:	out    0x0,al
  425fbf:	add    DWORD PTR [eax+0x7c],0x7f
  425fc3:	add    DWORD PTR [eax],0xffffff8b
  425fc6:	inc    DWORD PTR [ebx-0x4b2ef6]
  425fcc:	jmp    DWORD PTR [ecx]
  425fce:	inc    DWORD PTR [eax]
  425fd0:	out    0x69,eax
  425fd2:	dec    ecx
  425fd3:	(bad)  
  425fd4:	(bad)  
  425fd5:	(bad)  
  425fd7:	add    BYTE PTR [edx-0x16b9],dl
  425fdd:	test   al,0x0
  425fdf:	int3   
  425fe0:	and    DWORD PTR [ecx+0x75],edi
  425fe3:	(bad)  
  425fe4:	jmp    DWORD PTR ds:0x60c9ff89
  425fea:	pop    ebp
  425feb:	add    bh,bh
  425fed:	sub    DWORD PTR [eax],eax
  425fef:	dec    edx
  425ff1:	xchg   esp,ebx
  425ff3:	(bad)  
  425ff4:	dec    DWORD PTR [edi+edi*8]
  425ff7:	add    DWORD PTR [esi+edi*1+0x43],0xffffffcc
  425ffc:	jmp    edx
  425ffe:	dec    esp
  426000:	adc    esi,DWORD PTR [esi-0x25]
  426003:	cmp    edi,0x2a
  426006:	add    DWORD PTR [eax],0xffffff92
  426009:	in     eax,dx
  42600a:	aaa    
  42600b:	add    BYTE PTR [eax],al
  42600d:	push   es
  42600e:	inc    DWORD PTR [ebx-0x1fb80e]
  426014:	add    BYTE PTR [edi],bh
  426016:	cmp    edi,0x3f
  426019:	sbb    al,0x8e
  42601b:	inc    DWORD PTR [ebx-0x14007c15]
  426021:	call   0xffff:0xb9000053
  426028:	adc    al,0x3a
  42602a:	out    dx,eax
  42602b:	(bad)  
  42602c:	dec    ecx
  42602e:	add    bh,bh
  426030:	jne    0x426052
  426032:	aaa    
  426033:	cmp    edi,0xffffff8d
  426036:	cmp    edi,0xffffff85
  426039:	fwait
  42603a:	rol    DWORD PTR [ebx+0xcdff],cl
  426040:	rcl    DWORD PTR [ecx-0xb7676f5],1
  426046:	dec    DWORD PTR [ecx+0x4a324b]
  42604c:	add    BYTE PTR [esi],cl
  42604e:	add    DWORD PTR [ebx-0x94224],0xffffffff
  426055:	int    0xff
  426057:	add    BYTE PTR [edi-0x5a],bl
  42605a:	mov    es,WORD PTR [eax]
  42605c:	inc    DWORD PTR [esi]
  42605e:	inc    DWORD PTR [eax]
  426060:	ds iret 
  426062:	dec    eax
  426063:	add    bh,bh
  426065:	push   ecx
  426066:	add    BYTE PTR [ecx+0x561f75],cl
  42606c:	adc    DWORD PTR [ecx-0x23243301],0xffffff94
  426073:	int3   
  426074:	call   edx
  426076:	inc    DWORD PTR [eax]
  426078:	ror    DWORD PTR [ebp-0x3a],1
  42607b:	(bad)  
  42607c:	call   FWORD PTR [ebp-0x1]
  42607f:	call   ecx
  426081:	in     eax,0xad
  426083:	add    bh,bh
  426085:	mov    ch,0x0
  426087:	inc    ebx
  426089:	add    ecx,eax
  42608b:	inc    DWORD PTR [eax]
  42608d:	rol    DWORD PTR [eax],cl
  42608f:	adc    DWORD PTR [ebp+0x1afd],0x26
  426096:	int3   
  426097:	inc    DWORD PTR [ebx]
  426099:	sub    BYTE PTR [edi+edi*8-0x77],0x9c
  42609e:	int3   
  42609f:	call   DWORD PTR [eax+0x1f]
  4260a2:	push   esi
  4260a3:	add    BYTE PTR [eax],al
  4260a5:	adc    al,0x0
  4260a7:	mov    DWORD PTR [edx],edi
  4260a9:	mov    ebx,0xfdcc837f
  4260ae:	add    bh,bh
  4260b0:	jno    0x426054
  4260b2:	popa   
  4260b3:	inc    DWORD PTR [eax]
  4260b5:	cmp    al,0x0
  4260b7:	call   esp
  4260b9:	test   eax,0x5700ffa0
  4260be:	inc    DWORD PTR [eax]
  4260c0:	sbb    eax,0xffff888a
  4260c5:	mov    DWORD PTR gs:[eax],eax
  4260c8:	xor    BYTE PTR [ecx],bh
  4260ca:	jmp    0x42604f
  4260cc:	dec    DWORD PTR [eax-0x38710000]
  4260d2:	add    DWORD PTR es:[eax],0xffffffb8
  4260d6:	mov    DWORD PTR [ecx+0xfc0f34],ecx
  4260dc:	int3   
  4260dd:	inc    ebp
  4260de:	dec    esp
  4260e0:	adc    dl,0x20
  4260e3:	cmp    edi,0x3b
  4260e6:	(bad)  
  4260e7:	(bad)  
  4260e8:	in     al,dx
  4260e9:	fldenv [ecx-0x7657ff77]
  4260ef:	push   DWORD PTR [eax]
  4260f1:	dec    ecx
  4260f2:	clc    
  4260f3:	(bad)  
  4260f4:	(bad)  
  4260f5:	out    dx,al
  4260f6:	int3   
  4260f7:	add    cl,bl
  4260f9:	pop    ds
  4260fa:	sahf   
  4260fb:	add    BYTE PTR [eax],al
  4260fd:	jb     0x4260fe
  4260ff:	call   DWORD PTR [edx+0x898ae1]
  426105:	mov    ecx,0xbcaaff00
  42610a:	jb     0x42608f
  42610c:	(bad)  
  42610d:	cmp    al,BYTE PTR [ebx+0x40030800]
  426113:	(bad)  
  426114:	call   DWORD PTR [ecx]
  426116:	(bad)  
  426117:	call   DWORD PTR [eax]
  426119:	(bad)  
  42611a:	les    eax,FWORD PTR [eax]
  42611c:	add    BYTE PTR [edi+edi*8],al
  42611f:	call   DWORD PTR [ebx-0x25]
  426122:	dec    edx
  426123:	add    bh,bh
  426125:	inc    esp
  426126:	add    DWORD PTR [eax],0xffffffeb
  426129:	jne    0x4260af
  42612b:	(bad)  
  42612c:	jmp    DWORD PTR [edi]
  42612e:	int3   
  42612f:	add    al,cl
  426131:	(bad)  
  426132:	idiv   edi
  426134:	jmp    DWORD PTR [ebx]
  426136:	int3   
  426137:	add    BYTE PTR [esi-0x7cffd9d9],bh
  42613d:	repnz or esp,0xb
  426141:	dec    bl
  426143:	add    DWORD PTR [eax],0xffffffa4
  426146:	add    ah,cl
  426148:	scas   eax,DWORD PTR es:[edi]
  426149:	ret    0xa4
  42614c:	and    DWORD PTR [edx],0x0
  42614f:	dec    DWORD PTR [edi-0x330723]
  426155:	popa   
  426156:	add    BYTE PTR [eax],al
  426158:	aam    0x4a
  42615a:	sbb    DWORD PTR [ecx+0xccfdff],ecx
  426160:	mov    esi,0xcc006d69
  426165:	(bad)  
  426166:	cmp    edi,0xffffffc8
  426169:	push   ebp
  42616a:	and    ecx,esp
  42616c:	int3   
  42616d:	outs   dx,DWORD PTR ds:[esi]
  42616e:	dec    esp
  426170:	mov    eax,ds:0xff818c
  426175:	ins    DWORD PTR es:[edi],dx
  426176:	(bad)  
  426177:	(bad)  
  426178:	cmp    al,0xd5
  42617a:	cmp    bh,bh
  42617c:	inc    DWORD PTR [edi-0x7d]
  42617f:	sbb    DWORD PTR [esp+ebx*4-0x1b3300cb],0xffffffff
  426187:	dec    DWORD PTR [ebx-0x65]
  42618a:	xchg   edx,eax
  42618b:	inc    DWORD PTR [eax]
  42618d:	sub    al,0x0
  42618f:	add    BYTE PTR ds:0xff008ae5,al
  426195:	push   esp
  426196:	dec    DWORD PTR [ecx-0x38f157]
  42619c:	call   DWORD PTR [edi-0x731a0100]
  4261a2:	mov    esi,0xd48300
  4261a7:	adc    eax,0xffffff8e
  4261aa:	sar    bh,0x0
  4261ad:	xor    cl,BYTE PTR [ecx-0x5d90fd01]
  4261b3:	mov    DWORD PTR [ebx-0x40ff00c4],eax
  4261b9:	icebp  
  4261ba:	outs   dx,BYTE PTR ds:[esi]
  4261bb:	(bad)  
  4261bc:	(bad)  
  4261bd:	stc    
  4261be:	int3   
  4261bf:	add    BYTE PTR [ecx-0x4d],ch
  4261c2:	push   ds
  4261c3:	cmp    edi,0x71
  4261c6:	add    BYTE PTR [eax],al
  4261c8:	xchg   DWORD PTR [esi+0x69],edx
  4261cb:	cmp    edi,0xffffff82
  4261ce:	add    bh,bh
  4261d0:	and    BYTE PTR [esi-0x60],dl
  4261d3:	mov    edi,edi
  4261d5:	and    eax,0x4c870083
  4261da:	pop    esi
  4261db:	add    DWORD PTR [eax],0x4f
  4261de:	int3   
  4261df:	inc    ecx
  4261e1:	in     eax,dx
  4261e2:	jae    0x426167
  4261e4:	jmp    DWORD PTR [eax]
  4261e6:	add    BYTE PTR [ebx+0x760a58],al
  4261ec:	dec    DWORD PTR [ebx-0x6e720001]
  4261f2:	jae    0x4261f4
  4261f4:	dec    edx
  4261f6:	inc    DWORD PTR [ebx-0xf71c99]
  4261fc:	mov    DWORD PTR [ebx-0x316f0000],esp
  426202:	test   eax,0xffd500ff
  426207:	dec    DWORD PTR [esp+ecx*4-0x33]
  42620b:	add    DWORD PTR [eax],0xffffffe0
  42620e:	int3   
  42620f:	call   FWORD PTR [edx+0x24]
  426212:	retf   0x89cc
  426215:	inc    edi
  426216:	cmp    edi,0xffffffcd
  426219:	cmp    DWORD PTR [eax-0xa10100],ebx
  42621f:	(bad)  
  426220:	out    dx,al
  426221:	cli    
  426222:	xor    al,BYTE PTR [ebx+0x89a3ff]
  426228:	test   al,0x91
  42622a:	pop    edx
  42622b:	or     esp,0x5a
  42622e:	add    bh,bh
  426230:	pop    ebx
  426231:	mov    dh,0x10
  426233:	dec    esp
  426235:	xchg   esp,eax
  426236:	add    BYTE PTR [eax],al
  426238:	cmp    bh,bl
  42623a:	fmul   st,st(4)
  42623c:	push   DWORD PTR [ecx]
  42623e:	add    BYTE PTR [ebx-0x8dd06b],al
  426244:	add    edx,0xffffffff
  426247:	jmp    DWORD PTR [eax]
  426249:	push   ecx
  42624a:	add    BYTE PTR ss:[ebx-0x4333ffcd],al
  426251:	fidivr DWORD PTR [edx]
  426253:	(bad)  
  426254:	call   DWORD PTR [ecx+0x0]
  426257:	add    BYTE PTR [ebp-0x7cff88e6],dl
  42625d:	xor    bh,bh
  42625f:	or     DWORD PTR [ebx],0xfffffffe
  426262:	add    eax,0xff4000ff
  426267:	jmp    FWORD PTR [eax]
  426269:	cmp    al,0x47
  42626b:	(bad)  
  42626c:	push   DWORD PTR [ebp-0x7d]
  42626f:	(bad)  
  426270:	fdiv   DWORD PTR [edx-0x203300d5]
  426276:	inc    DWORD PTR [eax]
  426278:	iret   
  426279:	ret    
  42627a:	adc    al,BYTE PTR [ebx-0x330700]
  426280:	jg     0x426247
  426282:	test   eax,0xffed0000
  426287:	(bad)  
  426288:	fucomip st,st(5)
  42628a:	test   al,0xff
  42628c:	call   DWORD PTR [ebx-0x5b910001]
  426292:	pop    ecx
  426293:	inc    DWORD PTR [ebx+0x4c0089a8]
  426299:	inc    esi
  42629a:	cmc    
  42629b:	inc    DWORD PTR [eax]
  42629d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42629e:	inc    DWORD PTR [ebx-0x33b18db1]
  4262a4:	int3   
  4262a5:	les    eax,FWORD PTR [ebx+0x372fbdff]
  4262ab:	inc    DWORD PTR [ebx-0x75007c40]
  4262b1:	pusha  
  4262b2:	mov    ds:0x3dffff,al
  4262b7:	jmp    FWORD PTR [esp+ebx*8+0x63]
  4262bb:	(bad)  
  4262bc:	(bad)  
  4262bd:	stc    
  4262be:	add    bh,bh
  4262c0:	mov    ds:0xff002b05,eax
  4262c5:	jp     0x4262c7
  4262c7:	(bad)  
  4262c8:	call   0x834324d0
  4262cd:	lahf   
  4262ce:	add    bh,bh
  4262d0:	clc    
  4262d1:	imul   edi,DWORD PTR [ebp-0x1],0xffffabff
  4262d8:	adc    ch,BYTE PTR ds:0x8800ffd7
  4262de:	inc    DWORD PTR [eax]
  4262e0:	jnp    0x426341
  4262e2:	or     al,0xff
  4262e4:	cmp    DWORD PTR [ecx+ecx*4],0xffffff83
  4262e8:	cmp    dl,BYTE PTR [esi-0x4bff00e4]
  4262ee:	mov    DWORD PTR [eax],eax
  4262f0:	mov    ds:0x839d1d,al
  4262f5:	mov    es,WORD PTR [eax]
  4262f7:	add    bl,dl
  4262f9:	out    dx,eax
  4262fa:	push   0xffffffff
  4262fc:	(bad)  
  4262fd:	cmp    BYTE PTR [eax],al
  4262ff:	cmp    DWORD PTR [esi+0x40],0xffffffce
  426303:	(bad)  
  426304:	jmp    DWORD PTR [ebx+0x7b5c8389]
  42630a:	or     al,0x0
  42630c:	add    al,bl
  42630e:	add    DWORD PTR [eax],0xffffffcc
  426311:	mov    bl,0x41
  426313:	inc    DWORD PTR [ebx+0x40ff83e5]
  426319:	icebp  
  42631a:	cmc    
  42631b:	add    bh,bh
  42631d:	sbb    eax,DWORD PTR [eax]
  42631f:	(bad)  
  426320:	jl     0x4262af
  426322:	scas   al,BYTE PTR es:[edi]
  426323:	dec    DWORD PTR [ecx+0x398300c0]
  426329:	repnz loop 0x42632b
  42632c:	cmp    ecx,0xffffffcc
  42632f:	push   DWORD PTR [edi]
  426331:	fdivr  st,st(1)
  426333:	int3   
  426334:	and    DWORD PTR ds:0x1af80000,0x22
  42633b:	cmp    edi,0x59
  42633e:	inc    DWORD PTR [eax]
  426340:	cld    
  426341:	dec    edx
  426342:	out    0xff,eax
  426344:	add    BYTE PTR [edx-0x51940001],bh
  42634a:	adc    ecx,DWORD PTR [ecx+0x83cfff]
  426350:	mov    esi,0xffff5594
  426355:	dec    edi
  426356:	int3   
  426357:	mov    DWORD PTR [edi-0x4e],ebp
  42635a:	sbb    eax,0xff8c0000
  42635f:	or     DWORD PTR [eax],0x59
  426362:	into   
  426363:	inc    DWORD PTR [eax]
  426365:	adc    DWORD PTR [ebx-0x1a481601],eax
  42636b:	inc    DWORD PTR [ebx-0x6a000076]
  426371:	popa   
  426372:	cdq    
  426373:	inc    DWORD PTR [eax]
  426375:	ret    
  426376:	add    DWORD PTR [eax],0x0
  426379:	cmp    eax,0xa283fff4
  42637e:	add    bh,bh
  426380:	dec    esp
  426381:	mov    al,0x1d
  426383:	inc    DWORD PTR [ebx+0x49ffcc50]
  426389:	shl    DWORD PTR [esi+0xeacc00],cl
  42638f:	mov    DWORD PTR [eax-0x1c],eax
  426392:	mov    edx,0xff55ffcc
  426397:	int3   
  426398:	sub    BYTE PTR [eax+ebp*1-0x1],ah
  42639c:	adc    DWORD PTR [edx],0xffffff89
  42639f:	jmp    DWORD PTR [ebx-0x337639cb]
  4263a5:	sbb    eax,0xd4878383
  4263aa:	dec    esp
  4263ab:	mov    edi,edi
  4263ad:	jmp    0x87ec6335
  4263b2:	mov    ds:0xffffffff,al
  4263b7:	add    ch,bh
  4263b9:	mov    edi,0xed00ffeb
  4263be:	add    BYTE PTR [eax],al
  4263c0:	jb     0x426375
  4263c2:	pop    edx
  4263c3:	add    BYTE PTR [eax],al
  4263c5:	cwde   
  4263c6:	inc    DWORD PTR [eax]
  4263c8:	mov    edi,0x83cca1af
  4263cd:	xchg   ebp,eax
  4263ce:	dec    DWORD PTR [ecx+0xd85dcb]
  4263d4:	call   FWORD PTR [ebx]
  4263d6:	mov    edi,edi
  4263d8:	ret    0x3209
  4263db:	add    DWORD PTR [eax],0x6
  4263de:	add    ah,cl
  4263e0:	pop    ebp
  4263e1:	sti    
  4263e2:	pop    ebp
  4263e3:	cmp    edi,0x2c
  4263e6:	dec    DWORD PTR [ecx+0x7eac5f]
  4263ec:	dec    DWORD PTR [edi]
  4263ee:	inc    DWORD PTR [eax]
  4263f0:	test   BYTE PTR [esp+eiz*8-0x1],cl
  4263f4:	adc    DWORD PTR [edi+edi*8],0x0
  4263f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263f9:	push   0x79
  4263fb:	add    bh,bh
  4263fd:	mov    al,ds:0xfbe0ff00
  426402:	push   0x8307ff83
  426407:	inc    ebp
  426409:	cmp    DWORD PTR [ebp+0x0],0xffffffff
  42640d:	leave  
  42640e:	int3   
  42640f:	sub    DWORD PTR [edx-0x7c0015c0],0x4c
  426416:	add    bh,bh
  426418:	xchg   edx,eax
  426419:	or     DWORD PTR [eax-0x1],eax
  42641c:	add    BYTE PTR [ebx+eax*4-0x18637200],bh
  426423:	(bad)  
  426424:	(bad)  
  426425:	cmp    al,0xff
  426427:	push   DWORD PTR [edi+eax*4+0x61]
  42642b:	(bad)  
  42642c:	jmp    edx
  42642e:	add    BYTE PTR [ebx-0x33e289cc],al
  426434:	jmp    esp
  426436:	add    BYTE PTR [ebx-0x4e0cfc],al
  42643c:	int3   
  42643d:	jb     0x4263c2
  42643f:	call   FWORD PTR [esi-0xff9993]
  426445:	std    
  426446:	inc    DWORD PTR [eax]
  426448:	rcl    BYTE PTR [eax+0x2f00fffc],cl
  42644e:	or     esp,0x32
  426451:	out    0xb,eax
  426453:	dec    esp
  426455:	or     edi,edi
  426457:	mov    DWORD PTR [edi+0x27],ecx
  42645a:	xor    edi,edi
  42645c:	dec    DWORD PTR [ecx+0x62e700ff]
  426462:	fcos   
  426464:	add    bl,al
  426466:	int3   
  426467:	mov    DWORD PTR [ebx],edi
  426469:	cmp    al,0x58
  42646b:	inc    DWORD PTR [eax]
  42646d:	fadd   DWORD PTR [eax]
  42646f:	jmp    FWORD PTR [ecx+0x9]
  426472:	jnp    0x4263f7
  426474:	inc    DWORD PTR [edi-0x278a0001]
  42647a:	xor    BYTE PTR [eax],al
  42647c:	add    BYTE PTR [ecx+0x0],al
  42647f:	add    BYTE PTR [ecx-0xf3df],dl
  426485:	popa   
  426486:	add    BYTE PTR [ebx+0xc72997],al
  42648c:	call   FWORD PTR [ebx+eax*4]
  42648f:	jmp    DWORD PTR [edi+0x899cf7]
  426495:	out    dx,eax
  426496:	add    BYTE PTR [eax],al
  426498:	sahf   
  426499:	cmp    al,0x50
  42649b:	(bad)  
  42649c:	call   DWORD PTR [ebx]
  42649e:	(bad)  
  42649f:	(bad)  
  4264a0:	fdiv   QWORD PTR [ebx]
  4264a2:	add    eax,0xff4bffff
  4264a7:	add    BYTE PTR [ecx-0xfc15],cl
  4264ad:	repz (bad) 
  4264af:	(bad)  
  4264b0:	cmp    eax,0x83ff0582
  4264b5:	pop    edi
  4264b6:	(bad)  
  4264b7:	jmp    DWORD PTR [edx-0x7c330679]
  4264bd:	retf   
  4264be:	cmp    edi,0xffffffe1
  4264c1:	rol    DWORD PTR ss:[eax],cl
  4264c4:	int3   
  4264c5:	jg     0x42644a
  4264c7:	xor    DWORD PTR [esi-0x330044ce],0xffffffac
  4264ce:	(bad)  
  4264cf:	jmp    DWORD PTR [esi-0x77]
  4264d2:	in     eax,dx
  4264d3:	(bad)  
  4264d4:	(bad)  
  4264d5:	fild   DWORD PTR [eax]
  4264d7:	push   DWORD PTR [eax-0x33fead]
  4264dd:	arpl   sp,cx
  4264df:	call   FWORD PTR [edx]
  4264e1:	and    ch,BYTE PTR [edi+0x0]
  4264e4:	mov    DWORD PTR [ebx],esp
  4264e6:	(bad)  
  4264e7:	push   esi
  4264e9:	xchg   eax,edx
  4264eb:	mov    DWORD PTR [eax],eax
  4264ed:	ret    0xff
  4264f0:	leave  
  4264f1:	xchg   edi,eax
  4264f2:	and    eax,0xb1ffcc
  4264f7:	push   DWORD PTR [ebx+0x72]
  4264fa:	out    0xff,al
  4264fc:	(bad)  
  4264fd:	cmp    al,0xff
  4264ff:	(bad)  
  426500:	out    dx,eax
  426501:	lods   al,BYTE PTR ds:[esi]
  426502:	gs add bh,bh
  426505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426506:	add    bh,bh
  426508:	fstp   QWORD PTR [ecx-0x617c00d4]
  42650e:	(bad)  
  42650f:	inc    DWORD PTR [edx]
  426511:	xor    BYTE PTR [edi+edi*8-0x76df00],dl
  426518:	add    al,ah
  42651a:	pop    esi
  42651b:	add    BYTE PTR [ebx+0x51ffffa3],al
  426521:	xchg   ecx,eax
  426522:	xchg   edi,eax
  426523:	dec    DWORD PTR [ecx+0x4cffcca2]
  426529:	test   BYTE PTR [esi-0x1],0xff
  42652d:	push   edi
  42652e:	add    bh,bh
  426530:	cmp    eax,0xff0016b2
  426535:	popa   
  426536:	dec    esp
  426538:	cmp    BYTE PTR ds:0xa383ff2f,bh
  42653e:	cmp    edi,0x65
  426541:	inc    esp
  426542:	sbb    BYTE PTR [ebx-0x7c7c1500],al
  426548:	fmul   st,st(0)
  42654a:	mov    edi,edi
  42654c:	(bad)  
  42654d:	ds add ah,cl
  426550:	mov    al,ds:0xcc004032
  426555:	js     0x426523
  426557:	add    bl,ah
  426559:	retf   0xff7a
  42655c:	jmp    DWORD PTR [edi]
  42655e:	dec    DWORD PTR [ecx+0x1cc9a0]
  426564:	add    DWORD PTR [eax+0x0],0xffffff83
  426568:	cmp    al,0x7d
  42656a:	inc    edi
  42656b:	dec    DWORD PTR [ecx+0xcff0073]
  426571:	push   ebp
  426572:	stc    
  426573:	dec    DWORD PTR [ecx+0x22ff00f6]
  426579:	pop    esp
  42657a:	and    BYTE PTR [eax],al
  42657c:	jmp    DWORD PTR [eax+0x3188ffff]
  426582:	or     bh,bh
  426584:	jmp    FWORD PTR [eax+eax*1]
  426587:	add    BYTE PTR [edi+0x63],bl
  42658a:	mov    edx,0x894100ff
  42658f:	(bad)  
  426590:	cmp    al,0xbb
  426592:	ror    ah,0x0
  426595:	outs   dx,DWORD PTR ds:[esi]
  426596:	int3   
  426597:	xor    DWORD PTR [ecx],0xffffffc7
  42659a:	pop    es
  42659b:	(bad)  
  42659c:	push   DWORD PTR [eax+0x0]
  42659f:	push   DWORD PTR [ebx-0x1c]
  4265a2:	pop    ecx
  4265a3:	inc    DWORD PTR [eax]
  4265a5:	jb     0x4265a7
  4265a7:	add    DWORD PTR [esp+ebp*2+0x22],0x0
  4265ac:	add    dh,bl
  4265ae:	mov    DWORD PTR [ecx+0xffbda0],ecx
  4265b4:	cmp    DWORD PTR [eax+0x32990000],0x7f
  4265bb:	add    bh,bh
  4265bd:	adc    bh,bh
  4265bf:	(bad)  
  4265c0:	ds pop esi
  4265c2:	jl     0x4265c4
  4265c4:	call   DWORD PTR ds:0x1b6cffff
  4265ca:	inc    eax
  4265cb:	int3   
  4265cc:	add    BYTE PTR [ebx+0x0],bl
  4265cf:	dec    DWORD PTR [ebx+0x3d]
  4265d2:	sub    al,0xff
  4265d4:	add    BYTE PTR [ebp-0x1],bl
  4265d7:	add    BYTE PTR [edi-0x7c33cf39],cl
  4265dd:	add    BYTE PTR [eax],0x0
  4265e0:	xor    eax,0xff000588
  4265e5:	leave  
  4265e6:	(bad)  
  4265e7:	call   edx
  4265e9:	and    esi,ebx
  4265eb:	or     DWORD PTR [ecx-0x13330074],0x6e
  4265f2:	gs (bad) 
  4265f4:	call   FWORD PTR [esp+ecx*8]
  4265f7:	add    BYTE PTR [ebx-0x7600ee2d],dl
  4265fd:	add    DWORD PTR [eax],0xaa2349ff
  426603:	cmp    edi,0xffffff83
  426606:	dec    DWORD PTR [ecx+0x470d54]
  42660c:	call   edi
  42660e:	cmp    edi,0xffffffb2
  426611:	pushf  
  426612:	or     eax,0x89e500ff
  426617:	int3   
  426618:	fiadd  WORD PTR [edx+0x1a]
  42661b:	(bad)  
  42661c:	push   eax
  42661e:	add    BYTE PTR [eax],al
  426620:	out    0x11,eax
  426622:	push   esi
  426623:	inc    DWORD PTR [ebx-0xa003337]
  426629:	sub    DWORD PTR [ebx-0x7c28337d],edi
  42662f:	adc    ebx,0xffffff88
  426632:	mov    al,ds:0xcc0500ff
  426637:	mov    ecx,edi
  426639:	jmp    0x2c4166fb
  42663e:	inc    DWORD PTR [ebx-0x7cd9bc51]
  426644:	int3   
  426645:	cmp    edi,edi
  426647:	sbb    DWORD PTR [ecx+ebx*2-0x5dfffff6],0x0
  42664f:	push   DWORD PTR [ebp-0x7b]
  426652:	adc    bh,bh
  426654:	push   DWORD PTR [esi+0x450700ff]
  42665a:	xchg   ebx,eax
  42665b:	add    BYTE PTR [ebx+0x7bffccc5],al
  426661:	adc    eax,DWORD PTR [ebx-0x1]
  426664:	add    BYTE PTR [esi-0x77],bl
  426667:	add    BYTE PTR [edx+edx*2+0x50],cl
  42666b:	add    BYTE PTR [ebx+0x600ff24],al
  426671:	dec    esp
  426672:	adc    al,0x0
  426674:	sub    DWORD PTR [edx+0x0],0x0
  426678:	adc    BYTE PTR ds:0x7dff008e,ah
  42667e:	dec    DWORD PTR [ecx+0xbd7fe1]
  426684:	dec    DWORD PTR [edi]
  426686:	or     esp,0xffffff89
  426689:	dec    ecx
  42668a:	inc    DWORD PTR [bx+si]
  42668d:	push   cs
  42668e:	cmp    edi,0xffffffac
  426691:	ins    BYTE PTR es:[edi],dx
  426692:	(bad)  
  426693:	inc    DWORD PTR [eax]
  426695:	popa   
  426696:	(bad)  
  426697:	dec    DWORD PTR [edi-0xffa210]
  42669d:	stc    
  42669e:	mov    DWORD PTR [eax],eax
  4266a0:	fs mov eax,0x1fff0070
  4266a6:	(bad)  
  4266a7:	(bad)  
  4266a8:	clc    
  4266a9:	add    eax,0x6cc83a9
  4266ae:	int3   
  4266af:	add    BYTE PTR ds:0xff838ddc,bl
  4266b5:	push   ss
  4266b6:	mov    edi,edi
  4266b8:	cmp    eax,0xff01cf
  4266bd:	push   ss
  4266be:	mov    DWORD PTR [ebx-0xe67e64],eax
  4266c4:	add    BYTE PTR [edx],ah
  4266c6:	(bad)  
  4266c7:	call   esp
  4266c9:	jmp    0xe3426698
  4266ce:	inc    DWORD PTR [eax]
  4266d0:	jbe    0x426718
  4266d2:	bound  eax,QWORD PTR [eax]
  4266d4:	mov    DWORD PTR [ecx+0x0],ebp
  4266d7:	add    dh,ah
  4266d9:	in     eax,0xac
  4266db:	inc    DWORD PTR [eax]
  4266dd:	jae    0x4266ab
  4266df:	dec    DWORD PTR [ebx+0xd]
  4266e2:	pop    edi
  4266e3:	mov    edi,edi
  4266e5:	and    al,0x0
  4266e7:	add    BYTE PTR [edx],bh
  4266e9:	hlt    
  4266ea:	outs   dx,BYTE PTR ds:[esi]
  4266eb:	(bad)  
  4266ec:	jmp    DWORD PTR [eax]
  4266ee:	add    bh,bh
  4266f0:	retf   0x83
  4266f3:	inc    DWORD PTR [eax]
  4266f5:	pop    edi
  4266f6:	cmp    edi,0x13
  4266f9:	int    0x40
  4266fb:	inc    DWORD PTR [ebx-0x14007cec]
  426701:	test   al,0x56
  426703:	int3   
  426704:	add    BYTE PTR [ebx+0x1168ffff],cl
  42670a:	pushf  
  42670b:	mov    edi,edi
  42670d:	lods   eax,DWORD PTR ds:[esi]
  42670e:	(bad)  
  42670f:	dec    DWORD PTR [ebp-0x72]
  426712:	in     eax,0xff
  426714:	add    BYTE PTR [edi+edi*8-0x1],bh
  426718:	cmp    al,BYTE PTR [eax]
  42671a:	idiv   bh
  42671c:	int3   
  42671d:	xor    eax,DWORD PTR [eax]
  42671f:	call   DWORD PTR [ebx-0xa002]
  426725:	call   0x9e39f0ad
  42672a:	inc    edx
  42672b:	add    BYTE PTR [eax],al
  42672d:	adc    al,BYTE PTR [eax]
  42672f:	call   DWORD PTR [eax]
  426731:	adc    BYTE PTR [eax-0x34],dh
  426734:	inc    DWORD PTR [edi+edi*8-0x321b2200]
  42673b:	dec    esp
  42673d:	jb     0x42670b
  42673f:	add    BYTE PTR [eax+0x67],dl
  426742:	test   edi,edi
  426744:	mov    DWORD PTR [ecx+0x26ed83ff],edi
  42674a:	pop    ebp
  42674b:	add    DWORD PTR [eax],0x33
  42674e:	add    BYTE PTR [eax],al
  426750:	pop    ecx
  426751:	(bad)  
  426752:	cdq    
  426753:	add    DWORD PTR [eax],0xffffffba
  426756:	add    BYTE PTR [ebx+0xa778f1],al
  42675c:	jmp    FWORD PTR [edx-0x1]
  42675f:	add    BYTE PTR [ebp+0x71],bh
  426762:	pop    edx
  426763:	add    BYTE PTR [eax],al
  426765:	les    eax,FWORD PTR [eax]
  426767:	int3   
  426768:	ss aad 0x1f
  42676b:	add    DWORD PTR [eax],0xffffff88
  42676e:	mov    edi,edi
  426770:	jmp    0xffd2:0xff00a315
  426777:	add    BYTE PTR [ebx-0x38c9],al
  42677d:	inc    ecx
  42677e:	inc    DWORD PTR [eax]
  426780:	and    cl,al
  426782:	sbb    edi,edi
  426784:	dec    DWORD PTR [edi]
  426786:	(bad)  
  426787:	jmp    FWORD PTR [esi-0x7c6ea9]
  42678d:	pop    edx
  42678e:	mov    DWORD PTR [ebx-0x54f6c4],eax
  426794:	add    BYTE PTR [edi+0x1a51ff00],bl
  42679a:	sbb    edi,edi
  42679c:	add    BYTE PTR [edx-0x5553ff77],ah
  4267a2:	pop    ebp
  4267a3:	cmp    edi,0xffffffe4
  4267a6:	add    BYTE PTR [eax],al
  4267a8:	push   0x70
  4267aa:	sar    edi,0x83
  4267ad:	pop    ds
  4267ae:	(bad)  
  4267af:	dec    DWORD PTR [edi+0x6f]
  4267b2:	dec    esp
  4267b3:	add    bh,bh
  4267b5:	ins    BYTE PTR es:[edi],dx
  4267b6:	add    bh,bh
  4267b8:	adc    esp,DWORD PTR [eax+0x31]
  4267bb:	add    DWORD PTR [eax],0xffffff95
  4267be:	add    bh,bh
  4267c0:	imul   edi,DWORD PTR ds:0x3affff85,0xb47eff00
  4267ca:	jno    0x4267cc
  4267cc:	int3   
  4267cd:	mov    ch,0xff
  4267cf:	inc    edx
  4267d1:	rcr    DWORD PTR [esi],0x83
  4267d4:	(bad)  
  4267d5:	cmp    edi,edi
  4267d7:	jmp    FWORD PTR [ebp+0x2d]
  4267da:	mov    edx,0xff87ff83
  4267df:	add    BYTE PTR [ebx],bh
  4267e1:	sbb    ah,BYTE PTR [edi]
  4267e3:	dec    DWORD PTR [ecx+0x4f83ccc7]
  4267e9:	retf   0xff28
  4267ec:	add    dh,bl
  4267ee:	add    bh,bh
  4267f0:	xchg   edx,eax
  4267f1:	mov    cl,0xd7
  4267f3:	cmp    edi,0x5b
  4267f6:	dec    DWORD PTR [ecx+0x7a655c]
  4267fc:	call   DWORD PTR [eax-0x7d]
  4267ff:	add    dh,ch
  426801:	add    DWORD PTR [edi+0xbaffff],ebp
  426807:	add    BYTE PTR [ecx],cl
  426809:	or     bl,BYTE PTR [edi]
  42680b:	cmp    edi,0xffffffe4
  42680e:	add    DWORD PTR [eax],0xd
  426811:	(bad)  
  426812:	and    eax,0xff05ff00
  426817:	sub    DWORD PTR ds:0x83ff038c,0x61
  42681e:	mov    edi,edi
  426820:	clc    
  426821:	push   ds
  426822:	adc    edi,edi
  426824:	add    ah,bh
  426826:	add    bh,bh
  426828:	in     eax,dx
  426829:	aas    
  42682a:	addr16 cmp edi,0x68
  42682e:	add    bh,bh
  426830:	lods   al,BYTE PTR ds:[esi]
  426831:	cmp    DWORD PTR [ebx-0x34],eax
  426834:	call   FWORD PTR [ecx-0x3b2cff34]
  42683a:	mov    BYTE PTR [eax],0x0
  42683d:	inc    esp
  42683e:	(bad)  
  42683f:	(bad)  
  426840:	out    dx,eax
  426841:	push   esp
  426842:	mov    esp,0xff38ffff
  426847:	jmp    DWORD PTR [edx-0x77]
  42684a:	in     eax,0x0
  42684c:	sub    DWORD PTR [edi],0xffffffff
  42684f:	call   FWORD PTR [ebp-0x337cfc81]
  426855:	push   0xffffffff
  426857:	add    BYTE PTR [edx],bh
  426859:	test   DWORD PTR [edi+edi*8+0x0],0xc400ff17
  426861:	clc    
  426862:	popa   
  426863:	int3   
  426864:	and    edi,0xffffffff
  426867:	cmp    esp,0xfffffff2
  42686a:	rol    BYTE PTR [eax],1
  42686c:	add    BYTE PTR [ebx-0x73710001],bh
  426872:	mov    dl,0xff
  426874:	add    ah,bl
  426876:	dec    esp
  426878:	mov    ch,0xca
  42687a:	add    BYTE PTR [eax],0x83
  42687d:	pop    edx
  42687e:	cmp    edi,0xffffffe1
  426881:	fcomp  QWORD PTR [ecx+0x0]
  426884:	mov    edi,eax
  426886:	(bad)  
  426887:	jmp    DWORD PTR ds:0x83ffe453
  42688d:	add    edi,edi
  42688f:	adc    DWORD PTR [edx],0x22
  426892:	icebp  
  426893:	(bad)  
  426894:	jmp    DWORD PTR [edi-0x1]
  426897:	dec    DWORD PTR [esi-0x42]
  42689a:	(bad)  
  42689b:	inc    DWORD PTR [eax]
  42689d:	pop    ds
  42689e:	dec    DWORD PTR [ecx-0x7c54b24e]
  4268a4:	adc    DWORD PTR [eax],0x0
  4268a7:	jmp    DWORD PTR ds:0xff9523
  4268ad:	bound  eax,QWORD PTR [eax]
  4268af:	add    cl,ah
  4268b1:	pop    ds
  4268b2:	mov    al,0x0
  4268b4:	call   DWORD PTR [eax+0x3131ff00]
  4268ba:	and    bh,bh
  4268bc:	adc    DWORD PTR [eax+0x6d9ff00],0x32
  4268c3:	(bad)  
  4268c4:	inc    DWORD PTR [ebx+eax*4]
  4268c7:	add    BYTE PTR [ebx],ah
  4268c9:	jmp    0xff:0x8dffffcb
  4268d0:	outs   dx,BYTE PTR ds:[esi]
  4268d1:	mov    bl,0xd6
  4268d3:	cmp    edi,0xffffffdb
  4268d6:	inc    DWORD PTR [eax]
  4268d8:	retf   0xde1f
  4268db:	inc    DWORD PTR [ebx+0x61ff0007]
  4268e1:	sub    al,0x49
  4268e3:	cmp    edi,0xffffff8a
  4268e6:	mov    DWORD PTR [eax],eax
  4268e8:	mov    ecx,0xff00d687
  4268ed:	add    DWORD PTR [eax],eax
  4268ef:	int3   
  4268f0:	mov    edi,0x8983f6d2
  4268f5:	cmp    bh,bh
  4268f7:	push   DWORD PTR [ebx]
  4268f9:	mov    dl,0x48
  4268fb:	mov    DWORD PTR [eax],eax
  4268fd:	dec    esp
  4268fe:	int3   
  4268ff:	(bad)  
  426900:	mov    esp,0xff00948a
  426905:	daa    
  426906:	add    BYTE PTR [eax],al
  426908:	mov    es,WORD PTR ds:0x400ff93
  42690e:	add    bh,bh
  426910:	xchg   edi,eax
  426911:	int3   
  426912:	test   BYTE PTR [eax],0x0
  426915:	dec    DWORD PTR [ecx-0x30e20834]
  42691b:	inc    DWORD PTR [eax]
  42691d:	cmp    edi,edi
  42691f:	add    BYTE PTR [ebx],dh
  426921:	xchg   edx,eax
  426922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426923:	inc    DWORD PTR [ebx-0x2dff7cb7]
  426929:	and    DWORD PTR [ebx-0x1c0100],ecx
  42692f:	add    BYTE PTR [ecx],bh
  426931:	mov    al,0x9
  426933:	add    BYTE PTR [ebx+0x36008970],al
  426939:	mov    dh,0x70
  42693b:	mov    DWORD PTR [ebx+0x62ffffc9],eax
  426941:	mov    bl,0xe5
  426943:	add    BYTE PTR [eax],al
  426945:	mov    edi,edi
  426947:	call   DWORD PTR [edx+0x831b22]
  42694d:	adc    al,BYTE PTR [ebx-0x50fad27d]
  426953:	(bad)  
  426954:	inc    DWORD PTR [esi-0x24600001]
  42695a:	pop    edi
  42695b:	cmp    edi,0xffffffd0
  42695e:	(bad)  
  42695f:	push   DWORD PTR [ecx+esi*2+0x36]
  426963:	cmp    edi,0xffffffdb
  426966:	inc    DWORD PTR [eax]
  426968:	bound  esp,QWORD PTR [eax+0x1a]
  42696b:	add    BYTE PTR [eax],al
  42696d:	xor    ecx,esp
  42696f:	sub    esp,0x63
  426972:	sub    edi,edi
  426974:	int3   
  426975:	aas    
  426976:	inc    DWORD PTR [ebx-0x56c380]
  42697c:	jmp    FWORD PTR [edi-0x37990001]
  426982:	cli    
  426983:	int3   
  426984:	mov    DWORD PTR [edx+0x1210083],edx
  42698a:	aas    
  42698b:	add    BYTE PTR [ecx+0x6affff33],cl
  426991:	push   esi
  426992:	test   eax,0xbbff00
  426997:	add    BYTE PTR [esi],dl
  426999:	clc    
  42699a:	dec    eax
  42699b:	inc    DWORD PTR [ebx-0x2000ffda]
  4269a1:	out    dx,eax
  4269a2:	fld    QWORD PTR [eax]
  4269a4:	push   DWORD PTR [ecx+0x3e48ff83]
  4269aa:	sub    DWORD PTR [eax],eax
  4269ac:	add    bl,al
  4269ae:	add    ah,cl
  4269b0:	imul   edx,DWORD PTR [ebp-0x2aff7c25],0x1fa18300
  4269ba:	aas    
  4269bb:	(bad)  
  4269bc:	inc    DWORD PTR [eax-0x6b78ff77]
  4269c2:	dec    esp
  4269c3:	(bad)  
  4269c4:	inc    DWORD PTR ds:0xc6de0000
  4269ca:	ud0    ecx,esp
  4269cd:	cmp    bh,0xff
  4269d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269d1:	jb     0x426964
  4269d3:	mov    DWORD PTR [ecx-0x35007ce8],ecx
  4269d9:	cmp    eax,0x22ff8987
  4269de:	(bad)  
  4269df:	call   edx
  4269e1:	ret    
  4269e2:	enter  0xffff,0xc6
  4269e6:	(bad)  
  4269e7:	(bad)  
  4269e8:	mov    edi,0xffff3b05
  4269ed:	mov    eax,DWORD PTR [eax]
  4269ef:	add    BYTE PTR [ebx-0x2a],bh
  4269f2:	mov    bh,bh
  4269f4:	push   DWORD PTR [ecx-0x83dff01]
  4269fa:	push   edi
  4269fb:	(bad)  
  4269fc:	call   FWORD PTR [edi-0x1]
  4269ff:	call   DWORD PTR [ecx]
  426a01:	in     eax,dx
  426a02:	jae    0x426987
  426a04:	push   DWORD PTR [ecx]
  426a06:	add    bh,bh
  426a08:	jb     0x426a12
  426a0a:	cmp    DWORD PTR [ecx-0x33005a00],ecx
  426a10:	mov    cl,0xb
  426a12:	mov    bh,bh
  426a14:	add    BYTE PTR [edx+0x0],dl
  426a17:	(bad)  
  426a18:	in     eax,dx
  426a19:	push   edx
  426a1a:	sar    bh,cl
  426a1c:	push   DWORD PTR [eax+eax*1+0x0]
  426a20:	and    dl,BYTE PTR fs:[esi]
  426a23:	(bad)  
  426a24:	call   DWORD PTR [edi-0x57b43400]
  426a2a:	pop    es
  426a2b:	(bad)  
  426a2c:	call   esi
  426a2e:	inc    DWORD PTR [ebx+0xfb480e]
  426a34:	int3   
  426a35:	sbb    BYTE PTR [eax],al
  426a37:	jmp    DWORD PTR [ecx]
  426a39:	mov    bl,0xc3
  426a3b:	inc    DWORD PTR [eax]
  426a3d:	in     al,0x0
  426a3f:	add    BYTE PTR [esi+ebp*2-0x6d],ch
  426a43:	add    ah,cl
  426a45:	(bad)  
  426a46:	(bad)  
  426a47:	jmp    DWORD PTR [edx-0x23]
  426a4a:	str    WORD PTR [ecx+0x3ffff7d]
  426a51:	dec    edi
  426a52:	inc    edx
  426a53:	add    bh,bh
  426a55:	retf   
  426a56:	add    BYTE PTR [ebx+0xcd9455],al
  426a5c:	int3   
  426a5d:	dec    ecx
  426a5e:	inc    DWORD PTR [ebx+0x4334c9]
  426a64:	inc    DWORD PTR [ebx+0x0]
  426a67:	inc    DWORD PTR [ebx-0x330099bb]
  426a6d:	fwait
  426a6e:	inc    DWORD PTR [ebx-0xcc1e73]
  426a74:	int3   
  426a75:	call   0xff53:0x366aff00
  426a7c:	call   DWORD PTR [edx-0x4250001]
  426a82:	xchg   edi,eax
  426a83:	(bad)  
  426a84:	inc    edi
  426a86:	(bad)  
  426a87:	push   esp
  426a89:	fcmovnb st,st(2)
  426a8b:	(bad)  
  426a8c:	call   edi
  426a8e:	inc    DWORD PTR [eax]
  426a90:	mov    bl,0x6
  426a92:	pop    ebp
  426a93:	(bad)  
  426a94:	call   FWORD PTR [ebx]
  426a96:	add    bh,bh
  426a98:	pop    esp
  426a99:	in     eax,0x37
  426a9b:	(bad)  
  426a9c:	(bad)  
  426a9d:	fiadd  DWORD PTR [ebx+0x61b991ff]
  426aa3:	add    DWORD PTR [eax],0xf
  426aa6:	inc    DWORD PTR [eax]
  426aa8:	mov    edx,0xcc0021ca
  426aad:	test   al,0x0
  426aaf:	add    al,ah
  426ab1:	ja     0x426a66
  426ab3:	(bad)  
  426ab4:	(bad)  
  426ab5:	jg     0x426ab6
  426ab7:	xor    DWORD PTR [ecx+0xff81ff],0xffffffd5
  426abe:	inc    DWORD PTR [eax]
  426ac0:	pushf  
  426ac1:	not    BYTE PTR [ecx-0x7c97007d]
  426ac7:	add    ah,dl
  426ac9:	in     eax,0x99
  426acb:	dec    esp
  426acd:	sar    bh,cl
  426acf:	add    BYTE PTR [edx+0x3c],dh
  426ad2:	pop    ss
  426ad3:	inc    DWORD PTR [ebx+0x770089bb]
  426ad9:	std    
  426ada:	cmp    BYTE PTR [eax],al
  426adc:	jmp    DWORD PTR [ebx+0x0]
  426adf:	dec    esp
  426ae1:	sbb    DWORD PTR [ecx],ebx
  426ae3:	inc    DWORD PTR [ebx+0x4ffcc3c]
  426ae9:	sub    BYTE PTR cs:[eax],al
  426aec:	add    BYTE PTR [ecx+0x0],dh
  426aef:	mov    DWORD PTR ds:0xcc000c31,ebx
  426af5:	nop
  426af6:	add    bh,bh
  426af8:	gs inc ebx
  426afa:	push   cs
  426afb:	add    DWORD PTR [ebx-0x210000f6],0x16
  426b02:	jns    0x426ad0
  426b04:	add    BYTE PTR [ebp+0x235dff00],bh
  426b0a:	pop    ebx
  426b0b:	dec    DWORD PTR [ecx+0xb00005e]
  426b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b12:	ret    
  426b13:	(bad)  
  426b14:	call   ebp
  426b16:	add    BYTE PTR [ecx-0x883720],cl
  426b1c:	(bad)  
  426b1d:	cmp    BYTE PTR [eax],al
  426b1f:	add    BYTE PTR [ecx-0x39],dh
  426b22:	std    
  426b23:	cmp    edi,0xffffff88
  426b26:	add    BYTE PTR [eax],al
  426b28:	and    esi,eax
  426b2a:	mov    bh,0xff
  426b2c:	jmp    FWORD PTR [edx-0x55c20077]
  426b32:	sbb    DWORD PTR [ecx-0x76009401],ecx
  426b38:	mov    al,0x27
  426b3a:	clc    
  426b3b:	(bad)  
  426b3c:	call   DWORD PTR [esi-0x1]
  426b3f:	push   DWORD PTR [ebx-0x2c]
  426b42:	daa    
  426b43:	or     esp,0x34
  426b46:	(bad)  
  426b47:	inc    edi
  426b49:	xor    eax,0xbe000086
  426b4e:	(bad)  
  426b4f:	push   DWORD PTR [eax-0x59]
  426b52:	pop    es
  426b53:	add    BYTE PTR [ebx-0x387676cf],al
  426b59:	bound  esi,QWORD PTR [ecx]
  426b5b:	(bad)  
  426b5c:	(bad)  
  426b5d:	in     eax,dx
  426b5e:	inc    DWORD PTR [eax]
  426b60:	cmc    
  426b61:	rcr    DWORD PTR ds:0x87ffff,cl
  426b67:	call   FWORD PTR [eax]
  426b69:	jae    0x426b3c
  426b6b:	inc    DWORD PTR [eax]
  426b6d:	adc    eax,0xb581ffcc
  426b72:	lds    eax,FWORD PTR [ebx-0xc001]
  426b78:	das    
  426b79:	retf   0xe9
  426b7c:	(bad)  
  426b7d:	sti    
  426b7e:	dec    DWORD PTR [ecx-0xc4ebd5]
  426b84:	call   FWORD PTR [edx]
  426b86:	(bad)  
  426b87:	call   DWORD PTR [esi+0x2e]
  426b8a:	cmp    eax,0xffd8ff89
  426b8f:	add    dl,bh
  426b91:	pop    ebp
  426b92:	rol    BYTE PTR [ebx-0x3300cf00],cl
  426b98:	lahf   
  426b99:	mov    dl,0xac
  426b9b:	(bad)  
  426b9c:	jmp    DWORD PTR [esi+0x0]
  426b9f:	add    ch,cl
  426ba1:	and    edi,DWORD PTR [eax+0xc3ffff]
  426ba7:	int3   
  426ba8:	movlps xmm7,QWORD PTR [esi]
  426bab:	inc    DWORD PTR [ebx+0x3d0000bf]
  426bb1:	adc    BYTE PTR [edi-0x9dff34],dh
  426bb7:	mov    ebx,esp
  426bb9:	pushf  
  426bba:	fadd   DWORD PTR [eax]
  426bbc:	call   FWORD PTR [eax-0x1]
  426bbf:	jmp    DWORD PTR [edi+0x1c]
  426bc2:	and    bh,bh
  426bc4:	and    eax,0x0
  426bc7:	push   DWORD PTR [eax-0x7c7ceb6f]
  426bcd:	mov    ds:0x90cf0000,eax
  426bd2:	aaa    
  426bd3:	(bad)  
  426bd4:	call   FWORD PTR [ebp+0x51b689ff]
  426bda:	(bad)  
  426bdc:	add    bl,ah
  426bde:	inc    DWORD PTR [eax]
  426be0:	push   ds
  426be1:	pop    eax
  426be2:	loopne 0x426be3
  426be4:	xor    esp,0x0
  426be7:	push   DWORD PTR [edi+0x27]
  426bea:	adc    eax,0x83d50000
  426bef:	add    BYTE PTR [ecx+0x9],al
  426bf2:	loopne 0x426b77
  426bf4:	int3   
  426bf5:	pop    edi
  426bf6:	int3   
  426bf7:	or     DWORD PTR [edi-0x29],0xd
  426bfb:	inc    DWORD PTR [eax]
  426bfd:	stos   DWORD PTR es:[edi],eax
  426bfe:	add    bh,bh
  426c00:	in     eax,dx
  426c01:	sub    BYTE PTR [esi-0x3338ff01],dl
  426c07:	jmp    ebp
  426c09:	xchg   bl,ch
  426c0b:	(bad)  
  426c0c:	(bad)  
  426c0d:	in     eax,dx
  426c0e:	add    BYTE PTR [ebx+0x82e425],al
  426c14:	add    bh,ch
  426c16:	(bad)  
  426c17:	inc    eax
  426c19:	pop    ds
  426c1a:	les    eax,FWORD PTR [eax]
  426c1c:	call   DWORD PTR [esi-0x3dcbff01]
  426c22:	sti    
  426c23:	add    BYTE PTR [eax],al
  426c25:	add    al,BYTE PTR [ebx+0x333c9500]
  426c2b:	(bad)  
  426c2c:	call   FWORD PTR [esi-0x7f3b0000]
  426c32:	sar    edi,1
  426c34:	dec    edx
  426c36:	inc    DWORD PTR [ebx+0x2fe774]
  426c3c:	mov    DWORD PTR [ecx-0x7d],ebp
  426c3f:	push   ebp
  426c41:	sub    eax,DWORD PTR [esi-0x1]
  426c44:	and    DWORD PTR [esi+0x43b8ffff],0xfffffff4
  426c4b:	add    BYTE PTR [ebx+0xd00ffec],al
  426c51:	add    BYTE PTR [ecx-0x33510001],bh
  426c57:	dec    DWORD PTR [edx+0x2f]
  426c5a:	push   0xcc1a0083
  426c5f:	inc    DWORD PTR [esi+0x44]
  426c62:	add    DWORD PTR [ebx+0x2d00],0xffffff8d
  426c69:	and    DWORD PTR [edx-0x7d],edx
  426c6c:	mov    DWORD PTR [edx+0x0],esi
  426c6f:	call   DWORD PTR [ebp+0x1]
  426c72:	dec    ecx
  426c73:	add    BYTE PTR [eax],al
  426c75:	mov    al,ds:0x5b5b00cc
  426c7a:	or     bh,bh
  426c7c:	mov    DWORD PTR [ecx+0x36cd83ff],ebx
  426c82:	and    DWORD PTR [eax],eax
  426c84:	sbb    esp,0xffffffff
  426c87:	int3   
  426c88:	jns    0x426ca5
  426c8a:	iret   
  426c8b:	cmp    edi,0xffffffc9
  426c8e:	dec    esp
  426c90:	out    dx,al
  426c91:	mov    BYTE PTR [eax+0xe4ffff],dl
  426c97:	add    BYTE PTR [eax-0x61],ah
  426c9a:	cmp    al,0x83
  426c9c:	int3   
  426c9d:	push   0xffffffff
  426c9f:	push   DWORD PTR [esi]
  426ca1:	les    ebx,FWORD PTR [ecx-0x1]
  426ca4:	mov    eax,esp
  426ca6:	int3   
  426ca7:	push   ebx
  426ca9:	fdivp  st(1),st
  426cab:	add    DWORD PTR [ebx-0x46007ca2],0x78
  426cb2:	aas    
  426cb3:	inc    DWORD PTR [ebx-0x200000ac]
  426cb9:	pop    ebx
  426cba:	mov    edi,0xff91ff00
  426cbf:	add    ah,ch
  426cc1:	pop    es
  426cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cc3:	inc    DWORD PTR [eax]
  426cc5:	inc    DWORD PTR [eax]
  426cc7:	add    cl,dh
  426cc9:	cwde   
  426cca:	ror    DWORD PTR [ecx+0xff8000],1
  426cd0:	inc    edi
  426cd1:	mov    es,edi
  426cd3:	add    BYTE PTR [ebx-0x4100005d],al
  426cd9:	clc    
  426cda:	sbb    BYTE PTR [eax],al
  426cdc:	dec    DWORD PTR [edi+edi*8]
  426cdf:	mov    edi,esi
  426ce1:	cs push 0xffffffff
  426ce4:	add    BYTE PTR [esi-0x1],ah
  426ce7:	call   DWORD PTR [eax-0x33ff9d70]
  426ced:	hlt    
  426cee:	(bad)  
  426cef:	jmp    DWORD PTR [esi+0x1e]
  426cf2:	cmp    edi,edi
  426cf4:	call   DWORD PTR [esi+0x0]
  426cf7:	adc    DWORD PTR [ebx-0x4b9c],0x11
  426cfe:	(bad)  
  426cff:	jmp    DWORD PTR [ebx+0x1c]
  426d02:	dec    ebp
  426d03:	int3   
  426d04:	push   edi
  426d06:	add    BYTE PTR [ebx+0x5795d6],al
  426d0c:	add    BYTE PTR [edi+edi*8],ah
  426d0f:	mov    esp,ecx
  426d11:	pop    ds
  426d12:	inc    eax
  426d13:	mov    DWORD PTR [ecx+0x13ccff00],ecx
  426d19:	imul   BYTE PTR [edi+0x0]
  426d1c:	add    BYTE PTR [edi-0x7d],al
  426d1f:	adc    ebp,0x37
  426d22:	arpl   WORD PTR [ebx+0xb1ff],ax
  426d28:	xchg   esi,eax
  426d29:	pushf  
  426d2a:	and    al,0xff
  426d2c:	add    BYTE PTR [edx-0x1],bl
  426d2f:	jmp    DWORD PTR [esi]
  426d31:	sbb    eax,0xf30000a8
  426d36:	(bad)  
  426d37:	call   DWORD PTR [ebp-0x3b]
  426d3a:	popa   
  426d3b:	inc    DWORD PTR [ebx+0x1100ffb5]
  426d41:	fnstenv [esi+0x0]
  426d44:	add    BYTE PTR [edi-0x45730001],al
  426d4a:	push   ss
  426d4b:	mov    DWORD PTR [ecx+0x2aff8921],ecx
  426d51:	add    ecx,DWORD PTR [esi]
  426d53:	cmp    edi,0x7d
  426d56:	int3   
  426d57:	call   FWORD PTR [edi-0x1e]
  426d5a:	xlat   BYTE PTR ds:[ebx]
  426d5b:	add    BYTE PTR [ebx+0x2f0083cc],al
  426d61:	fadd   QWORD PTR [ebp-0x34]
  426d64:	add    BYTE PTR [eax+eax*1+0x0],al
  426d68:	jo     0x426da0
  426d6a:	and    edi,edi
  426d6c:	inc    DWORD PTR [edx]
  426d6e:	dec    esp
  426d70:	sub    al,0x6
  426d72:	pop    ds
  426d73:	mov    edi,edi
  426d75:	mov    eax,0x84d6ffff
  426d7a:	rol    BYTE PTR [ebx-0x76e001],cl
  426d80:	dec    edx
  426d81:	mov    DWORD PTR [ecx-0x34],edx
  426d84:	add    BYTE PTR [eax],dh
  426d86:	dec    esp
  426d88:	in     eax,0x96
  426d8a:	jecxz  0x426d8b
  426d8c:	call   DWORD PTR ds:0x5f1383ff
  426d92:	rol    DWORD PTR [ebx-0xff7101],cl
  426d98:	xor    DWORD PTR [ecx+0x62838990],eax
  426d9e:	inc    DWORD PTR [eax]
  426da0:	xor    esp,DWORD PTR [esi+0x33]
  426da3:	int3   
  426da4:	add    BYTE PTR [eax+0x3ff400ff],ch
  426daa:	enter  0xff00,0xb0
  426dae:	dec    DWORD PTR [ecx-0xc377e5]
  426db4:	add    dl,dl
  426db6:	add    BYTE PTR [ebx+0x4db46],al
  426dbc:	push   eax
  426dbe:	(bad)  
  426dbf:	dec    DWORD PTR [esi+edx*8+0x7bffff44]
  426dc6:	(bad)  
  426dc7:	(bad)  
  426dc8:	jp     0x426da9
  426dca:	inc    DWORD PTR cs:[eax]
  426dcd:	push   edx
  426dce:	inc    DWORD PTR [ebx-0x760b0b12]
  426dd4:	int3   
  426dd5:	dec    esp
  426dd6:	add    BYTE PTR [eax],al
  426dd8:	out    0xe5,eax
  426dda:	mov    dh,0xff
  426ddc:	add    BYTE PTR [ebx-0x5b113400],dl
  426de2:	push   esi
  426de3:	or     DWORD PTR [ecx-0x37ff00d4],0xffffffbc
  426dea:	sbb    bh,bh
  426dec:	(bad)  
  426ded:	jmp    0xcc4a:0x50ea00cc
  426df4:	add    BYTE PTR [ebx+0x0],al
  426df7:	add    BYTE PTR [ebp-0xff7710],bh
  426dfd:	fmul   st,st(4)
  426dff:	call   DWORD PTR [eax+0x44]
  426e02:	mov    ah,0x0
  426e04:	(bad)  
  426e05:	mov    ebp,0xd049ff00
  426e0a:	gs int3 
  426e0c:	add    BYTE PTR [ebp-0x34],ah
  426e0f:	inc    DWORD PTR [edi-0x56]
  426e12:	dec    edx
  426e13:	add    BYTE PTR [ebx+0x1b890038],al
  426e19:	ds inc esi
  426e1b:	(bad)  
  426e1c:	(bad)  
  426e1d:	jmp    0x9336e21
  426e22:	push   esi
  426e23:	(bad)  
  426e24:	call   FWORD PTR [esi-0x7d]
  426e27:	or     esp,0xffffffcc
  426e2a:	int3   
  426e2b:	int3   
  426e2c:	int3   
  426e2d:	int3   
  426e2e:	int3   
  426e2f:	int3   
  426e30:	dec    DWORD PTR [ebx]
  426e32:	lds    esi,FWORD PTR [ecx+0xff42ff]
  426e38:	add    BYTE PTR [edi+eiz*8],ch
  426e3b:	cwde   
  426e3c:	(bad)  
  426e3d:	jmp    0xec5e:0x48ff00ff
  426e44:	add    BYTE PTR ds:0xb3ff0089,dh
  426e4a:	sub    DWORD PTR [ecx],esp
  426e4c:	push   DWORD PTR [eax-0x7d]
  426e4f:	int3   
  426e50:	int3   
  426e51:	cmp    eax,0x4c00d8bb
  426e56:	add    bh,bh
  426e58:	jmp    FWORD PTR [esi-0x6400ff9a]
  426e5e:	int3   
  426e5f:	dec    DWORD PTR [ecx-0x7c6502da]
  426e65:	aam    0xcc
  426e67:	add    ah,cl
  426e69:	hlt    
  426e6a:	call   0x10b6e35
  426e6f:	(bad)  
  426e70:	call   FWORD PTR [ebp+0x43ffdc8d]
  426e76:	mov    edi,edi
  426e78:	push   DWORD PTR [esi+0x7f]
  426e7b:	rol    DWORD PTR [eax],1
  426e7d:	add    edi,edi
  426e7f:	add    DWORD PTR [ebx+0x4f8167],0xffffffe4
  426e86:	int3   
  426e87:	(bad)  
  426e88:	jmp    DWORD PTR [ebx+0xaff8d06]
  426e8e:	(bad)  
  426e8f:	(bad)  
  426e90:	(bad)  
  426e91:	fnop   
  426e93:	mov    ds:0x14ff,al
  426e98:	add    BYTE PTR [edi+eiz*1-0x81ff71],bl
  426e9f:	add    BYTE PTR [eax],al
  426ea1:	sbb    ecx,esi
  426ea3:	sbb    al,0xff
  426ea5:	loop   0x426ea6
  426ea7:	dec    DWORD PTR [ecx-0x7cae8bb7]
  426ead:	jnp    0x426eae
  426eaf:	mov    DWORD PTR [ebx-0x338f2d77],eax
  426eb5:	fld    QWORD PTR [ebx+0x2dac8983]
  426ebb:	adc    eax,0xffff00
  426ec0:	add    BYTE PTR ds:0xf489ac06,dl
  426ec6:	dec    esp
  426ec8:	int3   
  426ec9:	mov    ebx,0x6dff19c2
  426ece:	add    DWORD PTR [eax],0xffffffff
  426ed1:	add    ebp,esi
  426ed3:	pop    eax
  426ed4:	call   DWORD PTR [ebp-0x57000100]
  426eda:	jp     0x426eca
  426edc:	int3   
  426edd:	push   ss
  426ede:	inc    DWORD PTR [eax]
  426ee0:	add    BYTE PTR [edx],dh
  426ee2:	adc    cl,dh
  426ee4:	add    BYTE PTR [ebx+0x21ccffff],ch
  426eea:	cmp    ebp,ebx
  426eec:	inc    eax
  426eee:	inc    DWORD PTR [ebx+0x519816ff]
  426ef4:	jmp    FWORD PTR [ecx-0x1]
  426ef7:	(bad)  
  426ef8:	(bad)  
  426ef9:	jg     0x426e9f
  426efb:	push   ds
  426efc:	jmp    DWORD PTR [esp+ecx*8-0x1]
  426f00:	jmp    DWORD PTR [ebp-0x4b]
  426f03:	rol    DWORD PTR [ebx-0xffbd],1
  426f09:	addr16 xchg esi,eax
  426f0b:	push   edi
  426f0c:	dec    DWORD PTR [esi-0x7d]
  426f0f:	add    bh,bh
  426f11:	ret    0x5c0f
  426f14:	or     esp,0xffffffff
  426f17:	add    BYTE PTR [eax],al
  426f19:	or     eax,0xdff9801
  426f1e:	(bad)  
  426f1f:	inc    DWORD PTR [ebx+0xff6804]
  426f25:	cmp    cl,BYTE PTR [ecx+0x76c08389]
  426f2b:	scas   al,BYTE PTR es:[edi]
  426f2c:	add    BYTE PTR [eax-0x77],dl
  426f2f:	dec    DWORD PTR [ecx-0x1e1d8d]
  426f35:	loop   0x426ec0
  426f37:	inc    DWORD PTR [ebx+0x8160e4]
  426f3d:	adc    cl,ah
  426f3f:	add    bh,bh
  426f41:	xchg   ecx,eax
  426f42:	pop    es
  426f43:	call   0x417a47
  426f48:	mov    DWORD PTR [ecx-0x800e2ea],ebp
  426f4e:	inc    DWORD PTR [eax]
  426f50:	push   DWORD PTR [ebp+edi*2-0x33bb7664]
  426f57:	inc    DWORD PTR [eax]
  426f59:	leave  
  426f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f5b:	and    edi,edi
  426f5d:	dec    ebp
  426f5e:	add    BYTE PTR [ecx+0x7fe80f00],cl
  426f64:	add    BYTE PTR [edi],cl
  426f66:	inc    DWORD PTR [ebx-0x636ff601]
  426f6c:	add    BYTE PTR [ecx],dl
  426f6e:	add    DWORD PTR [ebx-0x64a91900],0xffffff89
  426f75:	mov    bh,0xcc
  426f77:	add    BYTE PTR [ecx+0x1e8c89],cl
  426f7d:	push   0x83000089
  426f82:	test   BYTE PTR [edi-0x1],dh
  426f85:	push   cs
  426f86:	add    ah,cl
  426f88:	sub    DWORD PTR [esi],0xffffff92
  426f8b:	popa   
  426f8c:	add    bl,dl
  426f8e:	add    BYTE PTR [ebx-0x9b67300],al
  426f94:	cmp    ebx,0xffffffff
  426f97:	inc    DWORD PTR [eax]
  426f99:	aas    
  426f9a:	or     al,0xad
  426f9c:	add    BYTE PTR [edi+edi*8-0x1],bh
  426fa0:	push   DWORD PTR [edi]
  426fa2:	out    0xeb,al
  426fa4:	xor    DWORD PTR [ebx],0xffffff89
  426fa7:	add    BYTE PTR [ebx+0xb12344],al
  426fad:	sub    eax,0xc6ccff00
  426fb2:	mov    eax,0xff50005f
  426fb7:	add    BYTE PTR [eax],al
  426fb9:	inc    ecx
  426fba:	(bad)  
  426fbb:	cld    
  426fbc:	call   DWORD PTR [ecx-0x1]
  426fbf:	add    DWORD PTR [ebx-0x7cd09770],0x4e
  426fc6:	add    bh,bh
  426fc8:	call   FWORD PTR [ecx]
  426fca:	cs pop eax
  426fcc:	call   FWORD PTR [edi+edi*8+0x5c2c8300]
  426fd3:	mov    es,WORD PTR [ebx+0xff8c]
  426fd9:	adc    dl,BYTE PTR ds:0xffd8004c
  426fdf:	add    BYTE PTR [eax],al
  426fe1:	dec    edi
  426fe2:	pop    ecx
  426fe3:	mov    ch,0x0
  426fe5:	sbb    bh,bh
  426fe7:	add    BYTE PTR [eax],al
  426fe9:	popa   
  426fea:	loop   0x426fc5
  426fec:	and    esi,0xffffffff
  426fef:	add    DWORD PTR [eax],0x4d
  426ff2:	add    DWORD PTR [ebx],edx
  426ff4:	add    BYTE PTR [eax+0x27ffffff],dh
  426ffa:	cs inc ebp
  426ffc:	dec    DWORD PTR [esi-0x7d]
  426fff:	add    bh,bh
  427001:	xchg   DWORD PTR [edi],esp
  427003:	and    al,0xff
  427005:	push   esi
  427006:	cmp    edi,0xffffffff
  427009:	ror    BYTE PTR [edi+0x66],1
  42700c:	add    BYTE PTR [ecx-0x1],bh
  42700f:	int3   
  427010:	xor    DWORD PTR [edx],0xfffffff1
  427013:	out    dx,al
  427014:	push   DWORD PTR [ebx-0x5d003301]
  42701a:	mov    ch,BYTE PTR [esi]
  42701c:	call   FWORD PTR ds:0xdbffccff
  427022:	out    0x7d,eax
  427024:	xor    DWORD PTR [esi],0xffffff89
  427027:	(bad)  
  427028:	jmp    DWORD PTR [esi]
  42702a:	lods   al,BYTE PTR ds:[esi]
  42702b:	mov    eax,ds:0xff830b00
  427030:	dec    DWORD PTR [esi-0x6000528f]
  427036:	or     DWORD PTR [ecx-0x300f300],0xffffffff
  42703d:	and    BYTE PTR [eax],al
  42703f:	add    bh,bh
  427041:	mov    cl,0x30
  427043:	pop    ebx
  427044:	int3   
  427045:	out    dx,eax
  427046:	inc    DWORD PTR [eax]
  427048:	call   DWORD PTR [ecx-0x50]
  42704b:	enter  0x1983,0xff
  42704f:	inc    DWORD PTR [eax]
  427051:	adc    ebp,DWORD PTR [edx]
  427053:	push   esi
  427054:	add    dl,dh
  427056:	(bad)  
  427057:	inc    DWORD PTR [eax]
  427059:	mov    ds:0x21ffefeb,al
  42705e:	add    bh,bh
  427060:	inc    DWORD PTR [eax]
  427062:	pop    ecx
  427063:	inc    edx
  427064:	add    BYTE PTR [eax+eax*1+0x1410ff00],bh
  42706b:	rol    BYTE PTR [ebx-0xfff8],0xda
  427072:	ins    BYTE PTR es:[edi],dx
  427073:	scas   eax,DWORD PTR es:[edi]
  427074:	or     edi,0xffffffff
  427077:	mov    DWORD PTR [eax],eax
  427079:	int3   
  42707a:	mov    esp,0x95ff97
  42707f:	dec    esp
  427081:	pop    ss
  427082:	cmp    al,0xb7
  427084:	add    BYTE PTR [edx+0x2f0089ff],ah
  42708a:	mov    eax,ds:0x6dffdd
  42708f:	add    BYTE PTR [ebx-0x4b9954],al
  427095:	arpl   WORD PTR [eax],ax
  427097:	add    BYTE PTR [eax],al
  427099:	test   al,0x8f
  42709b:	aam    0x0
  42709d:	fwait
  42709e:	inc    DWORD PTR [ebx+0x6dca8fff]
  4270a4:	int3   
  4270a5:	and    eax,0x7d00cc83
  4270aa:	loope  0x4270a5
  4270ac:	(bad)  
  4270ad:	jmp    0x67426fb2
  4270b2:	aaa    
  4270b3:	cwde   
  4270b4:	call   DWORD PTR [ebp-0x1]
  4270b7:	cmp    edi,0x2f
  4270ba:	jns    0x4270a7
  4270bc:	add    BYTE PTR [ecx-0x34],cl
  4270bf:	int3   
  4270c0:	jmp    DWORD PTR [esi]
  4270c2:	mov    bh,0xde
  4270c4:	push   DWORD PTR [edi+edi*8+0xaddffff]
  4270cb:	mov    esp,cs
  4270cd:	add    al,0xcc
  4270cf:	add    DWORD PTR [ebx+0xa8c079],0xffffffc2
  4270d6:	add    DWORD PTR [eax],0xffffffff
  4270d9:	cdq    
  4270da:	push   ss
  4270db:	in     al,dx
  4270dc:	call   FWORD PTR [ecx-0x1]
  4270df:	add    DWORD PTR [eax],0x1f
  4270e2:	mov    ch,0xb4
  4270e4:	or     DWORD PTR [edi],0xffffff83
  4270e7:	add    DWORD PTR [ebx+0xe9adfe],0x11
  4270ee:	dec    DWORD PTR [ecx-0x71890277]
  4270f4:	sub    DWORD PTR [ebp-0x1],0x0
  4270f8:	add    BYTE PTR [ecx+0x6483831f],ch
  4270fe:	int3   
  4270ff:	(bad)  
  427100:	push   ebx
  427102:	mov    dl,0xc7
  427104:	int3   
  427105:	out    dx,al
  427106:	add    bh,bh
  427108:	dec    DWORD PTR [ebp+0x2b]
  42710b:	mov    al,ds:0xff830a00
  427110:	add    bh,bh
  427112:	in     eax,0x23
  427114:	add    BYTE PTR [ebp+0x0],ch
  427117:	add    bh,bh
  427119:	pop    edi
  42711a:	inc    esi
  42711b:	push   esp
  42711c:	inc    DWORD PTR [eax+0x68ffffff]
  427122:	xchg   esp,eax
  427123:	cdq    
  427124:	jmp    DWORD PTR [esi]
  427126:	inc    DWORD PTR [eax]
  427128:	add    BYTE PTR [ebx],bh
  42712a:	jae    0x4270ad
  42712c:	add    BYTE PTR [ecx+ecx*4+0x0],ch
  427130:	call   esi
  427132:	int    0x20
  427134:	int3   
  427135:	or     DWORD PTR [eax],eax
  427137:	cmp    edi,0x4f
  42713a:	pop    ss
  42713b:	add    BYTE PTR [ebx-0x33762e],al
  427141:	mov    ah,0xfd
  427143:	scas   eax,DWORD PTR es:[edi]
  427144:	mov    DWORD PTR [eax-0x4eff0100],edi
  42714a:	daa    
  42714b:	and    al,BYTE PTR [eax]
  42714d:	ret    
  42714e:	int3   
  42714f:	(bad)  
  427150:	call   eax
  427152:	mov    al,0x52
  427154:	or     DWORD PTR ds:0x718300ff,0xffffff84
  42715b:	push   ds
  42715c:	add    al,dh
  42715e:	dec    esp
  427160:	mov    edx,eax
  427162:	test   DWORD PTR [edi+0x0],0xffff00fd
  427169:	sub    ecx,DWORD PTR [esi-0x6a]
  42716c:	push   DWORD PTR [esi+0x0]
  42716f:	cmp    edi,0xffffffdd
  427172:	inc    edi
  427174:	call   DWORD PTR [edx+0x0]
  427177:	add    BYTE PTR [ecx-0xca9057],cl
  42717d:	jmp    0x1641720b
  427182:	sbb    DWORD PTR [edx-0x6400],ebp
  427188:	call   FWORD PTR [edi+0x27]
  42718b:	add    al,0xff
  42718d:	add    bh,bh
  42718f:	mov    esp,ecx
  427191:	mov    DWORD PTR [ecx-0x45ffd0],ebp
  427197:	add    DWORD PTR [eax],0xffffffc6
  42719a:	mov    al,ds:0x3c000e
  42719f:	add    bh,bh
  4271a1:	and    BYTE PTR [edx-0xf006f],0x89
  4271a8:	inc    DWORD PTR [eax+0x6900534b]
  4271ae:	or     DWORD PTR [ecx+0xb03e2ff],0xffffffff
  4271b5:	stos   BYTE PTR es:[edi],al
  4271b6:	(bad)  
  4271b7:	dec    esp
  4271b9:	xlat   BYTE PTR ds:[ebx]
  4271ba:	call   0x83:0xff0dffe3
  4271c1:	mov    eax,ds:0x77cc48db
  4271c6:	add    bh,bh
  4271c8:	int3   
  4271c9:	dec    edi
  4271cb:	mov    DWORD PTR cs:[ebx+0x0],eax
  4271cf:	mov    DWORD PTR [ebx-0x333b7b7e],eax
  4271d5:	pusha  
  4271d6:	add    BYTE PTR [eax],al
  4271d8:	add    dh,bl
  4271da:	adc    DWORD PTR [ebx-0x7d],ecx
  4271dd:	sbb    eax,DWORD PTR [eax]
  4271df:	or     DWORD PTR [ecx-0x500a17],0xffffffb9
  4271e6:	int3   
  4271e7:	add    bh,bh
  4271e9:	pop    ebp
  4271ea:	adc    DWORD PTR [ebx],edi
  4271ec:	add    cl,bh
  4271ee:	inc    DWORD PTR [eax]
  4271f0:	add    BYTE PTR [ebx],al
  4271f2:	sbb    al,0xfc
  4271f4:	add    BYTE PTR [eax],al
  4271f6:	int3   
  4271f7:	add    BYTE PTR [ebx+0x2f56c4],al
  4271fd:	and    al,0x83
  4271ff:	mov    DWORD PTR [ebx-0x34cea0],eax
  427205:	xor    eax,0xabcc83ff
  42720a:	stc    
  42720b:	cwde   
  42720c:	(bad)  
  42720d:	mov    esi,0xe800ff89
  427212:	mov    cl,0xfe
  427214:	int3   
  427215:	loop   0x427216
  427217:	add    DWORD PTR [ebx-0x7c9d051a],0xffffffa2
  42721e:	(bad)  
  42721f:	(bad)  
  427220:	jmp    DWORD PTR [ecx]
  427222:	out    0x51,eax
  427224:	(bad)  
  427225:	ds add bh,bh
  427228:	add    BYTE PTR [esi+edx*1],bl
  42722b:	fcos   
  42722d:	mov    ds:0x4383cc83,al
  427232:	repnz inc esp
  427234:	mov    DWORD PTR [edx],ebx
  427236:	(bad)  
  427237:	inc    DWORD PTR [eax]
  427239:	pop    esp
  42723a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42723b:	loope  0x42723c
  42723d:	add    BYTE PTR ss:[eax],al
  427240:	mov    DWORD PTR [eax],edi
  427242:	mov    esi,0x5c0095
  427247:	inc    DWORD PTR [eax]
  427249:	mov    DWORD PTR [esi-0xf],ecx
  42724c:	add    DWORD PTR [ebp-0x1],0x0
  427250:	push   DWORD PTR [esi]
  427252:	jbe    0x427272
  427254:	dec    DWORD PTR [ebx-0x41000001]
  42725a:	adc    cl,BYTE PTR [ebp-0x3300f000]
  427260:	jmp    FWORD PTR [edi+eiz*4]
  427263:	push   ebp
  427264:	int3   
  427265:	sub    al,BYTE PTR [eax]
  427267:	(bad)  
  427268:	(bad)  
  427269:	cld    
  42726a:	hlt    
  42726b:	fmulp  st(4),st
  42726d:	add    eax,0x4aff83ff
  427272:	xor    ebx,DWORD PTR [ebx-0x7c3d00]
  427278:	int3   
  427279:	jbe    0x4272c5
  42727b:	cwde   
  42727c:	dec    ecx
  42727e:	add    BYTE PTR [eax],al
  427280:	mov    DWORD PTR ds:0x200f1e7,esi
  427286:	(bad)  
  427287:	inc    DWORD PTR [ebx+0xa44558]
  42728d:	cdq    
  42728e:	inc    DWORD PTR [ebx+0x1e2ad00]
  427294:	cmp    DWORD PTR [ecx],0x0
  427297:	inc    DWORD PTR [ebx-0x7c6466b9]
  42729d:	sub    al,BYTE PTR [eax]
  42729f:	(bad)  
  4272a0:	inc    DWORD PTR [edx+0x2000dfab]
  4272a6:	inc    DWORD PTR [eax]
  4272a8:	(bad)  
  4272a9:	sti    
  4272aa:	ja     0x427259
  4272ac:	push   DWORD PTR [ecx]
  4272ae:	dec    DWORD PTR [ecx+0x10b726ff]
  4272b4:	add    BYTE PTR [edx-0xaff3301],ah
  4272ba:	jl     0x42730b
  4272bc:	jmp    FWORD PTR [eax+0x1789ffff]
  4272c2:	in     eax,0x61
  4272c4:	int3   
  4272c5:	call   0x131f:0xddff0000
  4272cc:	(bad)  
  4272cd:	jle    0x427252
  4272cf:	add    BYTE PTR [ecx-0x330d0fbf],cl
  4272d5:	mov    eax,0x76ffcc83
  4272da:	ins    BYTE PTR es:[edi],dx
  4272db:	mov    ch,0x0
  4272dd:	int3   
  4272de:	add    DWORD PTR [eax],0xffffffff
  4272e1:	rcr    BYTE PTR [eax-0x76337c51],0x0
  4272e8:	xor    esi,0xffffffaf
  4272eb:	pop    ss
  4272ec:	int3   
  4272ed:	scas   eax,DWORD PTR es:[edi]
  4272ee:	dec    esp
  4272f0:	mov    DWORD PTR [edx],ecx
  4272f2:	lods   eax,DWORD PTR ds:[esi]
  4272f3:	out    dx,eax
  4272f4:	add    bl,ah
  4272f6:	cmp    edi,0xffffff89
  4272f9:	ss aad 0x25
  4272fc:	jmp    DWORD PTR [edx-0x7d]
  4272ff:	inc    DWORD PTR [eax]
  427301:	jns    0x42732d
  427303:	sbb    edi,edi
  427305:	int    0x0
  427307:	or     esp,0xffffff92
  42730a:	or     eax,0xcc7ccc45
  42730f:	dec    DWORD PTR [ecx-0xf97014]
  427315:	jmp    0xd40f721a
  42731a:	aaa    
  42731b:	sbb    ecx,esp
  42731d:	push   ss
  42731e:	or     esp,0xffffff89
  427321:	xchg   esi,eax
  427322:	inc    eax
  427323:	(bad)
  427327:	dec    DWORD PTR [ecx-0x7c069c70]
  42732d:	xchg   esp,ecx
  42732f:	dec    esp
  427331:	xor    eax,0x6b00cd3d
  427336:	int3   
  427337:	add    bh,bh
  427339:	xor    BYTE PTR [edi],dh
  42733b:	call   0x4700:0xff83cfff
  427342:	sbb    DWORD PTR [edi+edi*8],esp
  427345:	fild   WORD PTR [ebx+0xb790000]
  42734b:	jb     0x42734c
  42734d:	popa   
  42734e:	mov    DWORD PTR [ebx-0x4a10be01],eax
  427354:	int3   
  427355:	js     0x427356
  427357:	add    BYTE PTR [eax],al
  427359:	adc    al,0x9a
  42735b:	xchg   DWORD PTR [ebx-0x767ce2],eax
  427361:	or     al,0xea
  427363:	pop    es
  427364:	add    BYTE PTR [eax+eax*1],cl
  427367:	mov    edi,edi
  427369:	cmp    ch,bh
  42736b:	mov    bh,0xff
  42736d:	and    al,0x83
  42736f:	int3   
  427370:	add    BYTE PTR [ebp+0x1],dl
  427373:	repnz adc DWORD PTR [edi-0x1],0x0
  427378:	int3   
  427379:	sbb    BYTE PTR [ecx-0x764f0083],bh
  42737f:	add    bh,bh
  427381:	(bad)  
  427382:	into   
  427383:	dec    ebp
  427384:	add    BYTE PTR [ebx],dl
  427386:	inc    DWORD PTR [ebx+0x75339aff]
  42738c:	add    BYTE PTR [edx+0x7ccffcc],bh
  427392:	call   0x10773d4
  427397:	cmp    edi,0xffffffb1
  42739a:	and    al,0x64
  42739c:	cmp    DWORD PTR [edx-0x77],0xffffffff
  4273a0:	adc    ebx,0xffffff8e
  4273a3:	adc    al,0x0
  4273a5:	push   ss
  4273a6:	add    DWORD PTR [eax],0xffffff83
  4273a9:	mov    al,0xab
  4273ab:	xchg   BYTE PTR [ebx-0x7c007c53],al
  4273b1:	mov    al,ds:0x1fff9cf2
  4273b6:	add    BYTE PTR [eax],al
  4273b8:	(bad)  
  4273b9:	aas    
  4273ba:	aad    0xb8
  4273bc:	(bad)  
  4273bd:	sti    
  4273be:	dec    DWORD PTR [ecx+0x7f13a783]
  4273c4:	add    BYTE PTR [edx+0x33ffffff],dh
  4273ca:	mov    ds:0xff5b0034,al
  4273cf:	add    bh,bh
  4273d1:	xchg   edi,eax
  4273d2:	adc    al,0x66
  4273d4:	inc    DWORD PTR [eax-0x46330100]
  4273da:	pop    ds
  4273db:	fild   DWORD PTR [eax]
  4273dd:	add    eax,0xe6ffcc83
  4273e2:	jp     0x4273cf
  4273e4:	inc    DWORD PTR [esi+0x25ff0000]
  4273ea:	xchg   edx,eax
  4273eb:	adc    eax,0x830883
  4273f0:	mov    DWORD PTR [edx-0x22ff2c99],esi
  4273f6:	add    BYTE PTR [eax],al
  4273f8:	push   DWORD PTR [esi-0x7c00f99f]
  4273fe:	inc    DWORD PTR [eax]
  427400:	int3   
  427401:	sbb    cl,ch
  427403:	imul   eax,DWORD PTR [eax],0x34
  427406:	(bad)  
  427407:	inc    DWORD PTR [eax]
  427409:	outs   dx,DWORD PTR ds:[esi]
  42740a:	cs mov ah,0xff
  42740d:	push   ebx
  42740e:	or     DWORD PTR [ecx+0x48d713ff],0x0
  427415:	xchg   esp,eax
  427416:	mov    DWORD PTR [eax],eax
  427418:	add    BYTE PTR [edi+0x6a],cl
  42741b:	icebp  
  42741c:	push   edx
  42741e:	inc    DWORD PTR [ebx-0x350f6b77]
  427424:	add    BYTE PTR [esi-0x547c0001],bh
  42742a:	adc    al,0x73
  42742c:	jmp    DWORD PTR [esi+0x0]
  42742f:	dec    DWORD PTR [ecx-0x8c3efe]
  427435:	daa    
  427436:	add    BYTE PTR [ebx-0x2f52a400],al
  42743c:	(bad)  
  42743d:	jns    0x4273c2
  42743f:	add    BYTE PTR [eax],al
  427441:	shl    DWORD PTR [esi+0x17cca2],1
  427447:	mov    DWORD PTR [eax],eax
  427449:	sti    
  42744a:	repz aam 0x0
  42744d:	(bad)  
  42744f:	or     esp,0xffffffca
  427452:	ret    0x7f
  427455:	xchg   ebp,eax
  427456:	dec    DWORD PTR [ecx-0x7eb70600]
  42745c:	inc    DWORD PTR [ecx+0x0]
  42745f:	add    bh,bh
  427461:	rcr    BYTE PTR [edi+edi*4+0x0],cl
  427465:	fdivr  st,st(7)
  427467:	dec    esp
  427469:	xor    BYTE PTR [edi],ch
  42746b:	pop    edx
  42746c:	add    ah,ah
  42746e:	(bad)  
  42746f:	dec    esp
  427471:	and    ebx,edx
  427473:	push   0x6cff
  427478:	add    bl,bh
  42747a:	xor    ebx,DWORD PTR [edi-0xff0c01]
  427480:	call   FWORD PTR ds:0xa6834e33
  427486:	add    bh,bh
  427488:	xor    DWORD PTR [esi+0x7800757c],0x0
  42748f:	inc    DWORD PTR [ebx-0x54b685]
  427495:	out    dx,eax
  427496:	add    bh,bh
  427498:	dec    DWORD PTR [eax-0x13]
  42749b:	mov    edi,edi
  42749d:	and    al,BYTE PTR [ebx-0x25ba0100]
  4274a3:	data16 add BYTE PTR [edi-0x53000001],al
  4274aa:	dec    ecx
  4274ab:	push   ds
  4274ac:	(bad)  
  4274ad:	cmp    ecx,DWORD PTR [ecx-0x2315ff34]
  4274b3:	mov    dh,0x0
  4274b5:	mov    edi,0xa4ff0089
  4274ba:	sahf   
  4274bb:	inc    esp
  4274bc:	int3   
  4274bd:	cmp    al,0xff
  4274bf:	int3   
  4274c0:	call   FWORD PTR [esi+0x57]
  4274c3:	jo     0x4274c5
  4274c5:	mov    dl,0x0
  4274c7:	add    ah,cl
  4274c9:	idiv   edx
  4274cb:	xor    bh,bh
  4274cd:	popf   
  4274ce:	int3   
  4274cf:	mov    DWORD PTR [ebx-0x170eb2],eax
  4274d5:	inc    ecx
  4274d6:	int3   
  4274d7:	inc    DWORD PTR [eax]
  4274d9:	and    bh,BYTE PTR [ecx+0x10]
  4274dc:	push   ecx
  4274de:	or     esp,0x0
  4274e1:	dec    esi
  4274e2:	pop    edx
  4274e3:	fdivr  st,st(7)
  4274e5:	push   eax
  4274e6:	dec    esp
  4274e8:	and    eax,0xffffffa8
  4274eb:	jge    0x427470
  4274ed:	test   esp,ecx
  4274ef:	inc    DWORD PTR [eax]
  4274f1:	rcr    BYTE PTR [esi],0xc3
  4274f4:	add    BYTE PTR [edx+0x0],cl
  4274f7:	add    BYTE PTR [eax],al
  4274f9:	sahf   
  4274fa:	cli    
  4274fb:	cmp    eax,0x89ffd7ff
  427500:	(bad)  
  427501:	cmp    eax,0x84fff853
  427506:	add    bh,bh
  427508:	(bad)  
  427509:	fistp  DWORD PTR [ebx]
  42750b:	jg     0x427490
  42750d:	dec    ebx
  42750e:	add    bh,bh
  427510:	add    bh,ch
  427512:	add    bl,BYTE PTR [edx-0x33ffa701]
  427518:	add    ah,dl
  42751a:	dec    ecx
  42751b:	test   BYTE PTR [eax],0x46
  42751e:	int3   
  42751f:	inc    DWORD PTR [ebx-0x5931d4]
  427525:	dec    edi
  427526:	(bad)  
  427527:	dec    DWORD PTR [ecx-0x718806]
  42752d:	retf   0x0
  427530:	add    al,dl
  427532:	scas   al,BYTE PTR es:[edi]
  427533:	fild   WORD PTR [eax]
  427535:	daa    
  427536:	add    bh,bh
  427538:	call   FWORD PTR [ecx]
  42753a:	pop    ecx
  42753b:	sbb    eax,0xff8937ff
  427540:	add    cl,bl
  427542:	jmp    0xff:0x18ffc8
  427549:	mov    esp,0xf6ccf873
  42754e:	inc    DWORD PTR [eax]
  427550:	mov    DWORD PTR [esp+ebx*8+0xcbff0b],esi
  427557:	cmp    edi,0xffffffd4
  42755a:	js     0x427530
  42755c:	cmp    DWORD PTR [ebx-0x1],0xffffff83
  427560:	dec    DWORD PTR [eax+0x6effc88f]
  427566:	(bad)  
  427567:	inc    DWORD PTR [eax]
  427569:	pop    edi
  42756a:	pop    edx
  42756b:	sbb    edi,edi
  42756d:	or     DWORD PTR [eax],eax
  42756f:	add    bh,bh
  427571:	shl    DWORD PTR [esi-0x4],cl
  427574:	call   DWORD PTR [edi-0x34]
  427577:	(bad)  
  427578:	(bad)  
  427579:	cmp    DWORD PTR [ebx+0xafff7],ebp
  42757f:	(bad)  
  427580:	inc    DWORD PTR [ebx+0x67ffb32e]
  427586:	inc    DWORD PTR [ebx-0x6ab94701]
  42758c:	add    BYTE PTR [eax+0x3bff0000],dh
  427592:	lahf   
  427593:	test   al,0xff
  427595:	sahf   
  427596:	add    bh,bh
  427598:	inc    DWORD PTR [esi]
  42759a:	pusha  
  42759b:	daa    
  42759c:	cmp    DWORD PTR [eax-0x1],0xffffff83
  4275a0:	call   DWORD PTR [esi-0x6100a0e2]
  4275a6:	or     esp,0xffffff89
  4275a9:	mov    bh,0xa6
  4275ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275ac:	add    BYTE PTR [esp+ecx*8],bh
  4275af:	inc    DWORD PTR [ebx-0x7cb90a60]
  4275b5:	and    eax,0x2dffff00
  4275ba:	sbb    al,0xaa
  4275bc:	(bad)  
  4275bd:	cmp    bh,bh
  4275bf:	(bad)  
  4275c0:	call   DWORD PTR [eax+esi*8+0x818350]
  4275c7:	inc    DWORD PTR [eax]
  4275c9:	jno    0x4275d3
  4275cb:	jno    0x427550
  4275cd:	sbb    al,0x83
  4275cf:	or     esp,0xfffffff7
  4275d2:	rcr    DWORD PTR ds:0xccff0bcc,1
  4275d8:	add    BYTE PTR [ebx],ah
  4275da:	pop    DWORD PTR [ebp-0x77]
  4275dd:	mov    dl,0x0
  4275df:	inc    DWORD PTR [ebx-0xddf615]
  4275e5:	fdivr  st,st(7)
  4275e7:	add    BYTE PTR [eax],al
  4275e9:	mov    edx,0xcc00b5f1
  4275ee:	inc    DWORD PTR [eax]
  4275f0:	call   eax
  4275f2:	inc    eax
  4275f3:	push   ebx
  4275f4:	jmp    DWORD PTR [ecx-0x34]
  4275f7:	inc    DWORD PTR [eax]
  4275f9:	aas    
  4275fa:	enter  0xffa7,0x98
  4275fe:	int3   
  4275ff:	add    BYTE PTR [eax],al
  427601:	xchg   ebx,eax
  427602:	aad    0x14
  427604:	add    BYTE PTR [ebx-0x46000100],ch
  42760a:	lods   eax,DWORD PTR ds:[esi]
  42760b:	mov    bh,0x0
  42760d:	sub    al,0x0
  42760f:	(bad)  
  427610:	call   esp
  427612:	mov    ebp,0xe500f2
  427617:	(bad)  
  427618:	push   esp
  42761a:	add    edx,ebx
  42761c:	call   FWORD PTR [ebp-0x7d]
  42761f:	int3   
  427620:	call   FWORD PTR [edi+0x24]
  427623:	idiv   edi
  427625:	imul   eax,DWORD PTR [eax],0x1c838900
  42762b:	enter  0x27ff,0xff
  42762f:	int3   
  427630:	jmp    DWORD PTR [eax-0x4d00cd25]
  427636:	cmp    edi,0x0
  427639:	xor    al,0x9a
  42763b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42763c:	(bad)  
  42763d:	mov    ecx,0xcdffcc00
  427642:	cli    
  427643:	out    0x0,eax
  427645:	int3   
  427646:	add    DWORD PTR [eax],0x0
  427649:	addr16 jl 0x42764e
  42764c:	mov    DWORD PTR [esi-0x51ff0100],esi
  427652:	xchg   BYTE PTR [eax-0xffc401],dl
  427658:	dec    DWORD PTR [ecx]
  42765a:	mov    dl,0xb9
  42765c:	sbb    DWORD PTR [ecx-0x77],0xffffff89
  427660:	(bad)  
  427661:	cld    
  427662:	repnz xor edi,edi
  427665:	xor    bh,bh
  427667:	cmp    edi,0x61
  42766a:	dec    ebp
  42766b:	inc    edx
  42766c:	sbb    DWORD PTR [ecx+0x730000ff],0xffffffbb
  427673:	mov    ds:0x58ff,eax
  427678:	call   FWORD PTR [ebx+0x1f00ec07]
  42767e:	inc    DWORD PTR [eax]
  427680:	(bad)  
  427681:	mov    eax,0xf1ff77b3
  427686:	add    BYTE PTR [eax],al
  427688:	inc    DWORD PTR [eax]
  42768a:	scas   eax,DWORD PTR es:[edi]
  42768b:	fs push esi
  42768e:	(bad)  
  42768f:	(bad)  
  427690:	jmp    FWORD PTR [eax-0x3c]
  427693:	lds    eax,FWORD PTR [ebx-0xff6a]
  427699:	sub    BYTE PTR [ebx-0x8],ah
  42769c:	jmp    eax
  42769e:	or     DWORD PTR [ecx-0x62d14e01],0xffffffff
  4276a5:	push   0x56830000
  4276aa:	mov    edi,0xe0ff16
  4276af:	inc    DWORD PTR [eax]
  4276b1:	pushf  
  4276b2:	pop    esi
  4276b3:	ud0    ebp,DWORD PTR [edx]
  4276b6:	(bad)  
  4276b7:	inc    DWORD PTR [eax]
  4276b9:	inc    edx
  4276ba:	jbe    0x4276ef
  4276bc:	(bad)  
  4276bd:	mov    esi,0xd5ff89ff
  4276c2:	pop    esi
  4276c4:	call   FWORD PTR ds:0x7ff83ff
  4276ca:	sub    edx,eax
  4276cc:	dec    DWORD PTR [edi]
  4276ce:	mov    DWORD PTR [eax],eax
  4276d0:	call   FWORD PTR [esi]
  4276d2:	xchg   esi,eax
  4276d3:	adc    eax,0xffff6883
  4276d8:	add    BYTE PTR [esi-0x51],al
  4276db:	dec    esp
  4276dc:	add    dl,ch
  4276de:	(bad)  
  4276df:	inc    DWORD PTR [eax]
  4276e1:	shl    BYTE PTR [ecx-0x768f0056],1
  4276e7:	cmp    edi,0xffffff85
  4276ea:	test   BYTE PTR [ebx],al
  4276ec:	add    BYTE PTR [ebx+0x6bffff00],bl
  4276f2:	daa    
  4276f3:	adc    al,0xff
  4276f5:	call   0xafc9:0x5e83ffff
  4276fc:	call   FWORD PTR [ebp-0x60000000]
  427702:	add    BYTE PTR [ecx-0x1],bl
  427705:	mov    ds:0x5eff83ff,al
  42770a:	cmp    bl,BYTE PTR [edi]
  42770c:	push   DWORD PTR [esi+0x2ff8989]
  427712:	push   esi
  427713:	add    BYTE PTR ss:[ebx-0x29000001],bl
  42771a:	sbb    eax,0xffe50087
  42771f:	cmp    edi,0xffffff80
  427722:	icebp  
  427723:	cmp    al,0xff
  427725:	(bad)  
  427726:	(bad)  
  427727:	(bad)  
  427728:	push   DWORD PTR [ebx-0x14]
  42772b:	inc    eax
  42772c:	add    BYTE PTR [edi-0x7800ff34],bl
  427732:	out    dx,eax
  427733:	inc    eax
  427734:	jmp    FWORD PTR [ebx]
  427736:	add    DWORD PTR [eax],0xffffffff
  427739:	mov    BYTE PTR ds:0xc7003e,dh
  42773f:	dec    DWORD PTR [ecx-0x7618ae43]
  427745:	scas   al,BYTE PTR es:[edi]
  427746:	add    ah,cl
  427748:	(bad)  
  427749:	(bad)  [eax-0x7c817cb5]
  42774f:	add    BYTE PTR [eax],al
  427751:	icebp  
  427752:	push   ds
  427753:	in     eax,0x0
  427755:	cmp    al,0x83
  427757:	int3   
  427758:	and    DWORD PTR [edi+0x1500c9fa],0xffffffcc
  42775f:	mov    DWORD PTR [eax],eax
  427761:	shl    DWORD PTR [eax],cl
  427763:	inc    edi
  427764:	dec    DWORD PTR [edi+edi*8]
  427767:	add    BYTE PTR [ebx-0x4a1ac3],al
  42776d:	xchg   esp,ecx
  42776f:	dec    DWORD PTR [ecx-0x8edd48]
  427775:	lock inc DWORD PTR [eax]
  427778:	sub    ebp,0x20
  42777b:	hlt    
  42777c:	mov    esi,ebx
  42777e:	(bad)  
  42777f:	inc    DWORD PTR [ebx-0x59c39a]
  427785:	popa   
  427786:	add    ah,cl
  427788:	add    ch,dl
  42778a:	mov    ah,0xb9
  42778c:	call   DWORD PTR [eax+0x3700ffff]
  427792:	mov    ebp,0x89f089a2
  427797:	dec    esp
  427799:	sbb    dh,BYTE PTR [ecx-0x8008f]
  42779f:	add    ah,cl
  4277a1:	mov    eax,ds:0x8c00ecb1
  4277a6:	dec    DWORD PTR [ecx-0x42723500]
  4277ac:	int3   
  4277ad:	add    DWORD PTR [eax],eax
  4277af:	inc    DWORD PTR [eax]
  4277b1:	or     dl,BYTE PTR [ecx-0x64]
  4277b4:	add    BYTE PTR [eax+eax*1],dl
  4277b7:	add    DWORD PTR [ebx-0xe48d4],0x2
  4277be:	inc    DWORD PTR [eax]
  4277c0:	mov    DWORD PTR [edi],ebp
  4277c2:	lock imul edi,edi,0x6
  4277c6:	add    bh,bh
  4277c8:	add    BYTE PTR [edx+0x2ffb766],cl
  4277ce:	mov    DWORD PTR [ebx-0x18cc487d],eax
  4277d4:	call   FWORD PTR [esi]
  4277d6:	inc    DWORD PTR [eax]
  4277d8:	call   DWORD PTR [esi-0x41336968]
  4277de:	(bad)  
  4277df:	(bad)  
  4277e0:	call   FWORD PTR [ecx*8+0x30ff8f]
  4277e7:	add    BYTE PTR [ebx+0x6723ff],al
  4277ed:	idiv   edi
  4277ef:	inc    DWORD PTR [eax]
  4277f1:	push   0x26
  4277f3:	jl     0x427778
  4277f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277f6:	(bad)  
  4277f7:	inc    DWORD PTR [eax]
  4277f9:	pushf  
  4277fa:	dec    eax
  4277fb:	out    dx,eax
  4277fc:	jmp    esi
  4277fe:	(bad)  
  4277ff:	dec    DWORD PTR [ecx+0xb4348f]
  427805:	sbb    cl,ah
  427807:	(bad)  
  427808:	call   edi
  42780a:	ret    0x836b
  42780d:	scas   al,BYTE PTR es:[edi]
  42780e:	inc    DWORD PTR [eax]
  427810:	add    BYTE PTR [eax-0x31],al
  427813:	push   edi
  427814:	call   esp
  427816:	add    bh,bh
  427818:	int3   
  427819:	xchg   bh,ch
  42781b:	outs   dx,BYTE PTR ds:[esi]
  42781c:	int3   
  42781d:	jge    0x4277eb
  42781f:	(bad)  
  427820:	inc    DWORD PTR ds:0x53ffed28
  427826:	add    bh,bh
  427828:	add    BYTE PTR [ecx+0x6d],ch
  42782b:	dec    esi
  42782c:	inc    DWORD PTR [eax-0x1]
  42782f:	dec    esp
  427831:	add    DWORD PTR [esi-0x5f],edx
  427834:	(bad)  
  427835:	jp     0x427836
  427837:	inc    DWORD PTR [ebx-0x7cf633c9]
  42783d:	pop    es
  42783e:	(bad)  
  42783f:	(bad)  
  427840:	jmp    eax
  427842:	mov    bh,0x43
  427844:	add    BYTE PTR [ebp-0x1],cl
  427847:	int3   
  427848:	add    BYTE PTR [eax-0x5f00b7ec],ah
  42784e:	add    bh,bh
  427850:	jmp    FWORD PTR [edx+0x61]
  427853:	(bad)  
  427854:	(bad)  
  427855:	(bad)  
  427857:	inc    DWORD PTR [ebx-0xb0bc8a]
  42785d:	fild   WORD PTR [eax]
  42785f:	cmp    edi,0xffffffe0
  427862:	xchg   esp,ebx
  427864:	and    DWORD PTR [eax-0x1],0xffffff83
  427868:	inc    DWORD PTR [ebp+0x9]
  42786b:	add    al,0xff
  42786d:	into   
  42786e:	(bad)  
  42786f:	(bad)  
  427870:	jmp    DWORD PTR [edx]
  427872:	or     dh,cl
  427874:	add    bh,bh
  427876:	(bad)  
  427877:	(bad)  
  427878:	jmp    FWORD PTR [ecx-0x3c]
  42787b:	mov    ah,0xff
  42787d:	inc    esi
  42787e:	add    bh,bh
  427880:	dec    ecx
  427882:	dec    ebx
  427883:	mov    cl,0xff
  427885:	jbe    0x427886
  427887:	(bad)  
  427888:	dec    DWORD PTR [edi-0x6e]
  42788b:	(bad)  
  42788c:	int3   
  42788d:	fadd   QWORD PTR [eax]
  42788f:	add    bh,bh
  427891:	fs pop ds
  427893:	jae    0x427895
  427895:	mov    ebp,0x9f0000ff
  42789a:	jno    0x4278f3
  42789c:	add    BYTE PTR [ecx],ch
  42789e:	add    BYTE PTR [ebx-0x5729af01],al
  4278a4:	jmp    FWORD PTR [edx]
  4278a6:	(bad)  
  4278a7:	(bad)  
  4278a8:	jmp    FWORD PTR [ecx]
  4278aa:	ins    DWORD PTR es:[edi],dx
  4278ab:	inc    ecx
  4278ac:	add    BYTE PTR [esi+0xff8300],ch
  4278b2:	push   eax
  4278b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278b4:	add    BYTE PTR [ebp-0x50000001],ch
  4278ba:	int3   
  4278bb:	or     BYTE PTR [eax],al
  4278bd:	je     0x427842
  4278bf:	inc    DWORD PTR [eax]
  4278c1:	loope  0x4278b7
  4278c3:	scas   eax,DWORD PTR es:[edi]
  4278c4:	add    BYTE PTR [ecx-0x5c7cff34],bl
  4278ca:	test   eax,0xdfcc9d
  4278cf:	mov    DWORD PTR [ecx-0xd7ece2],ecx
  4278d5:	stc    
  4278d6:	int3   
  4278d7:	add    BYTE PTR [eax],al
  4278d9:	outs   dx,BYTE PTR ds:[esi]
  4278da:	enter  0x92,0xd4
  4278de:	inc    DWORD PTR [ebx+0x5b041ff]
  4278e4:	jmp    FWORD PTR [ebx+0x1bff00ff]
  4278ea:	jno    0x42787f
  4278ec:	jmp    FWORD PTR [ecx]
  4278ee:	cmp    edi,0xffffffff
  4278f1:	(bad)  
  4278f2:	mul    BYTE PTR [ebp-0x1]
  4278f5:	out    dx,al
  4278f6:	(bad)  
  4278f7:	inc    DWORD PTR [eax]
  4278f9:	add    DWORD PTR [edi],esp
  4278fb:	(bad)  
  4278fc:	(bad)  
  4278fd:	jmp    0x91aa:0x58383ff
  427904:	call   ebp
  427906:	inc    DWORD PTR [ebx-0x1c957377]
  42790c:	add    ch,dh
  42790e:	inc    DWORD PTR [eax]
  427910:	add    dh,al
  427912:	adc    al,0x26
  427914:	add    BYTE PTR [eax],ah
  427916:	inc    DWORD PTR [eax]
  427918:	dec    eax
  42791a:	rol    BYTE PTR ss:[eax],0xa2
  42791e:	add    bh,bh
  427920:	call   DWORD PTR [esi-0x61]
  427923:	call   FWORD PTR cs:[edi+edi*8+0x0]
  427928:	add    BYTE PTR [ebx-0x4e009c1d],al
  42792e:	int3   
  42792f:	add    DWORD PTR [eax],0x4d
  427932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427933:	std    
  427934:	call   FWORD PTR [edx-0x1]
  427937:	add    bh,bh
  427939:	fidivr DWORD PTR [eax]
  42793b:	xchg   ecx,eax
  42793c:	jmp    DWORD PTR [edx]
  42793e:	mov    DWORD PTR [ebx+0x7c3d7aff],eax
  427944:	add    bl,dh
  427946:	inc    DWORD PTR [eax]
  427948:	add    BYTE PTR [esi-0x47005ff2],cl
  42794e:	add    BYTE PTR [eax],al
  427950:	mov    eax,ebp
  427952:	or     DWORD PTR [eax],0x83ff3f00
  427958:	add    BYTE PTR [ebx-0x72000101],bl
  42795e:	(bad)  
  42795f:	dec    esp
  427961:	dec    esi
  427962:	or     dl,BYTE PTR ds:0x833fcc
  427968:	call   DWORD PTR [eax-0x15]
  42796b:	outs   dx,DWORD PTR ds:[esi]
  42796c:	call   DWORD PTR [ebx-0x77]
  42796f:	(bad)  
  427970:	push   DWORD PTR ds:0x1b8304d1
  427976:	cmp    edi,0xffffff83
  427979:	push   cs
  42797a:	retf   0x899e
  42797d:	jecxz  0x42797e
  42797f:	(bad)  
  427980:	inc    DWORD PTR [edi-0x1aff54c7]
  427986:	inc    DWORD PTR [eax]
  427988:	call   DWORD PTR [ecx-0x46760474]
  42798e:	inc    DWORD PTR [eax]
  427990:	sbb    DWORD PTR [esi+0x70ffffb7],0xffffffff
  427997:	add    BYTE PTR [eax],al
  427999:	or     bh,ch
  42799b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42799c:	(bad)  
  42799d:	out    dx,al
  42799e:	add    bh,bh
  4279a0:	mov    DWORD PTR [edx-0x2b76b0ec],ecx
  4279a6:	(bad)  
  4279a7:	(bad)  
  4279a8:	jmp    DWORD PTR [ecx]
  4279aa:	xchg   edx,eax
  4279ab:	adc    ecx,DWORD PTR [ecx-0x24]
  4279b1:	sbb    BYTE PTR [edi+0x55],bh
  4279b4:	dec    DWORD PTR [ecx+0x0]
  4279b7:	int3   
  4279b8:	jmp    FWORD PTR [eax+0x28]
  4279bb:	push   esp
  4279bc:	add    dl,al
  4279be:	inc    DWORD PTR [ebx+0x40eb8ecc]
  4279c4:	jmp    FWORD PTR [esi-0x1]
  4279c7:	int3   
  4279c8:	add    BYTE PTR [edi-0xe],dh
  4279cb:	lods   eax,DWORD PTR ds:[esi]
  4279cc:	mov    DWORD PTR [edi+edi*8+0x555a8300],ebp
  4279d3:	mov    ah,cl
  4279d5:	hlt    
  4279d6:	add    BYTE PTR [ebx-0x189b8a01],al
  4279dc:	add    BYTE PTR [eax-0x7d],dl
  4279df:	int3   
  4279e0:	add    eax,0x4e
  4279e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279e4:	jmp    DWORD PTR [edx-0x1]
  4279e7:	inc    DWORD PTR [eax]
  4279e9:	sbb    al,0x6a
  4279eb:	or     BYTE PTR [eax],al
  4279ed:	das    
  4279ee:	inc    DWORD PTR [eax]
  4279f0:	add    BYTE PTR [edi+0x7],cl
  4279f3:	int    0x0
  4279f5:	hlt    
  4279f6:	add    bh,bh
  4279f8:	add    BYTE PTR [ecx],ah
  4279fa:	les    eax,FWORD PTR [bx+si]
  4279fd:	stos   BYTE PTR es:[edi],al
  4279fe:	cmp    edi,0x0
  427a01:	les    esi,FWORD PTR [edi+0x58]
  427a04:	int3   
  427a05:	jbe    0x427a06
  427a07:	add    bh,bh
  427a09:	out    0x77,eax
  427a0b:	stos   BYTE PTR es:[edi],al
  427a0c:	(bad)  
  427a0d:	out    dx,al
  427a0e:	(bad)  
  427a0f:	(bad)  
  427a10:	call   DWORD PTR [edx+0x28ff269e]
  427a16:	cmp    edi,0x0
  427a19:	in     eax,dx
  427a1a:	jns    0x427a19
  427a1c:	jmp    DWORD PTR [ecx+0x52ffff00]
  427a22:	or     ebp,DWORD PTR [esi-0xe401]
  427a28:	(bad)  
  427a29:	mov    ecx,0xf6ff100e
  427a2e:	add    BYTE PTR [ecx+0xf3796ff],cl
  427a34:	call   FWORD PTR ds:0x63ff8389
  427a3a:	(bad)  
  427a3c:	add    bl,ch
  427a3e:	add    bh,bh
  427a40:	dec    DWORD PTR [edx+0x4a]
  427a43:	mov    dh,0x0
  427a45:	or     DWORD PTR [eax],eax
  427a47:	(bad)  
  427a48:	inc    DWORD PTR [edx+0x66]
  427a4b:	add    esp,ecx
  427a4d:	aad    0x0
  427a4f:	add    BYTE PTR [ecx-0x7c8f08c9],cl
  427a55:	test   al,0xff
  427a57:	add    bh,bh
  427a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a5a:	adc    eax,0xcca5002f
  427a5f:	add    bh,bh
  427a61:	xchg   esi,eax
  427a62:	mov    ds:0x258355,eax
  427a67:	(bad)  
  427a68:	push   DWORD PTR [esi]
  427a6a:	and    BYTE PTR [ebx+0x835989],al
  427a70:	push   DWORD PTR [esi]
  427a72:	dec    ecx
  427a73:	or     edi,edi
  427a75:	push   ds
  427a76:	(bad)  
  427a77:	(bad)  
  427a78:	push   DWORD PTR [esi]
  427a7a:	lahf   
  427a7b:	xor    al,BYTE PTR [eax]
  427a7d:	or     bh,bh
  427a7f:	(bad)  
  427a80:	inc    DWORD PTR [edi+0xbff995c]
  427a86:	inc    DWORD PTR [ebx+0x32305acc]
  427a8c:	(bad)  
  427a8d:	inc    BYTE PTR [eax]
  427a8f:	(bad)  
  427a90:	(bad)  
  427a91:	cmp    ah,dh
  427a93:	ret    0x9eff
  427a96:	int3   
  427a97:	dec    esp
  427a99:	mov    al,ds:0x7d8362c4
  427a9e:	inc    DWORD PTR [eax]
  427aa0:	int3   
  427aa1:	cdq    
  427aa2:	push   eax
  427aa3:	imul   eax,DWORD PTR [eax],0xff00ff5c
  427aa9:	(bad)  
  427aaa:	mul    BYTE PTR ds:0xcc00e100
  427ab0:	add    dh,bh
  427ab2:	push   ecx
  427ab3:	call   0xff436c84
  427ab8:	add    bh,cl
  427aba:	dec    edx
  427abb:	add    bh,bh
  427abd:	mov    ds:0xcffffff,eax
  427ac2:	mov    al,ds:0x37ff7a
  427ac7:	(bad)  
  427ac8:	dec    edx
  427aca:	push   0x74
  427acc:	(bad)  
  427acd:	(bad)  
  427acf:	inc    DWORD PTR [eax]
  427ad1:	inc    edx
  427ad2:	jnp    0x427b38
  427ad4:	inc    DWORD PTR [edi]
  427ad6:	(bad)  
  427ad7:	inc    DWORD PTR [ebx+0x6d9853]
  427add:	push   ss
  427ade:	dec    DWORD PTR [ecx-0x6a967001]
  427ae4:	push   DWORD PTR [eax-0x7dff0001]
  427aea:	cdq    
  427aeb:	add    BYTE PTR es:[edi],bl
  427aee:	(bad)  
  427aef:	(bad)  
  427af0:	call   eax
  427af2:	int    0x2f
  427af4:	cmp    DWORD PTR [ecx-0x77],0xffffffff
  427af8:	add    al,dh
  427afa:	sahf   
  427afb:	xor    al,0xff
  427afd:	pushf  
  427afe:	dec    esp
  427b00:	jmp    esp
  427b02:	xchg   esi,eax
  427b03:	pop    ds
  427b04:	call   edi
  427b06:	(bad)  
  427b07:	inc    DWORD PTR [eax]
  427b09:	ss je  0x427b83
  427b0c:	add    DWORD PTR [esi-0x7f00ff01],0xffffffd1
  427b13:	add    edi,edi
  427b15:	pop    edi
  427b16:	(bad)  
  427b17:	dec    esp
  427b19:	ret    0x13e1
  427b1c:	(bad)  
  427b1d:	(bad)  
  427b1f:	(bad)  
  427b20:	call   FWORD PTR [edx+0x49007a80]
  427b26:	add    BYTE PTR [eax],al
  427b28:	mov    esi,ebp
  427b2a:	frstor [ecx-0x7c004100]
  427b30:	jmp    DWORD PTR [ecx+0x19ccb415]
  427b36:	inc    DWORD PTR [eax]
  427b38:	dec    DWORD PTR [edi]
  427b3a:	mov    ds:0x2f009f,eax
  427b3f:	dec    DWORD PTR [ecx-0x76be7c77]
  427b45:	push   ecx
  427b46:	inc    DWORD PTR [ebx-0x5afe8700]
  427b4c:	dec    ebx
  427b4e:	inc    DWORD PTR [eax]
  427b50:	dec    DWORD PTR [ecx]
  427b52:	inc    esi
  427b53:	pop    edi
  427b54:	add    BYTE PTR ds:0x740000ff,bh
  427b5a:	add    ecx,DWORD PTR [ecx]
  427b5c:	add    BYTE PTR [ebx-0x2800ff7d],cl
  427b62:	dec    ebp
  427b63:	test   BYTE PTR [eax],al
  427b65:	push   0x0
  427b67:	int3   
  427b68:	add    BYTE PTR [esi+ebx*1],bh
  427b6b:	ja     0x427b6c
  427b6d:	mov    al,0xff
  427b6f:	(bad)  
  427b70:	(bad)  
  427b71:	mov    edi,0x3700ac9d
  427b76:	dec    esp
  427b78:	int3   
  427b79:	and    esp,DWORD PTR [edx-0xadff63]
  427b7f:	or     esp,0xffffffff
  427b82:	dec    ebp
  427b83:	jo     0x427b51
  427b85:	mov    dh,0x0
  427b87:	add    ah,cl
  427b89:	jo     0x427b1a
  427b8b:	out    dx,al
  427b8c:	add    BYTE PTR [esi-0x77],dh
  427b8f:	int3   
  427b90:	jmp    ecx
  427b92:	inc    esp
  427b93:	push   0x83f600
  427b98:	add    BYTE PTR [ecx-0x67],dl
  427b9b:	out    dx,eax
  427b9c:	jmp    FWORD PTR [edi+0x0]
  427b9f:	(bad)  
  427ba0:	inc    DWORD PTR [edi]
  427ba2:	inc    ebx
  427ba3:	jle    0x427ba4
  427ba5:	add    edi,edi
  427ba7:	add    ah,cl
  427ba9:	in     al,dx
  427baa:	in     al,0x86
  427bac:	push   DWORD PTR [ebx]
  427bae:	add    bh,bh
  427bb0:	jmp    DWORD PTR [ecx]
  427bb2:	sbb    BYTE PTR [edx],0x0
  427bb5:	add    eax,DWORD PTR [eax]
  427bb7:	inc    DWORD PTR [eax]
  427bb9:	(bad)  [ebx+eiz*8-0x1]
  427bbd:	outs   dx,BYTE PTR ds:[esi]
  427bbe:	dec    esp
  427bc0:	call   FWORD PTR [edi-0x29ff0eb8]
  427bc6:	(bad)  
  427bc7:	inc    DWORD PTR [eax]
  427bc9:	sbb    al,0x3f
  427bcb:	add    DWORD PTR [eax],0x4e
  427bce:	int3   
  427bcf:	inc    DWORD PTR [eax]
  427bd1:	aas    
  427bd2:	add    DWORD PTR [eax-0x77],edi
  427bd5:	cdq    
  427bd6:	add    ah,cl
  427bd8:	and    esi,0xffffffad
  427bdb:	call   0x9cc:0xff9fff
  427be2:	icebp  
  427be3:	jo     0x427bb1
  427be5:	outs   dx,BYTE PTR ds:[esi]
  427be6:	int3   
  427be7:	add    bh,bh
  427be9:	aam    0xc8
  427beb:	mov    es,WORD PTR [ebx-0x7c0089]
  427bf1:	push   ds
  427bf2:	xor    BYTE PTR [ebx-0x7c76a201],0x0
  427bf9:	add    edx,DWORD PTR [eax-0x7c8e00fb]
  427bff:	add    ah,cl
  427c01:	or     edi,DWORD PTR [ebx-0x297cb6]
  427c07:	(bad)  
  427c08:	jmp    DWORD PTR [edi+eiz*4-0x657641]
  427c0f:	add    BYTE PTR [eax],al
  427c11:	mov    ds:0xcdff5431,al
  427c16:	(bad)  
  427c17:	inc    DWORD PTR [eax]
  427c19:	mov    ecx,ebx
  427c1b:	xchg   esp,eax
  427c1c:	int3   
  427c1d:	sub    al,0xcc
  427c1f:	dec    DWORD PTR [ecx-0xbc7725]
  427c25:	push   es
  427c26:	int3   
  427c27:	(bad)  
  427c28:	(bad)  
  427c29:	mov    esi,0x4effc771
  427c2e:	dec    esp
  427c30:	push   esp
  427c32:	inc    edi
  427c33:	mov    edx,0xffffa5ff
  427c38:	int3   
  427c39:	lods   eax,DWORD PTR ds:[esi]
  427c3a:	dec    esp
  427c3b:	mov    ebp,0x42cc
  427c40:	jmp    DWORD PTR [esi+0x1100af63]
  427c46:	(bad)  
  427c47:	dec    DWORD PTR [ecx-0x1b8352]
  427c4d:	add    BYTE PTR ds:[eax],al
  427c50:	(bad)  
  427c51:	mov    ecx,0x63ffdad9
  427c56:	(bad)  
  427c57:	(bad)  
  427c58:	inc    DWORD PTR [edi-0x48]
  427c5b:	int3   
  427c5c:	jmp    DWORD PTR [ecx+0x6effff00]
  427c62:	inc    edi
  427c63:	out    0x0,eax
  427c65:	push   0xffffffcc
  427c67:	add    bh,bh
  427c69:	cmp    al,0x8c
  427c6b:	dec    ecx
  427c6c:	(bad)  
  427c6d:	jnp    0x427bf2
  427c6f:	add    bh,bh
  427c71:	xchg   edi,eax
  427c72:	enter  0xe6,0xd4
  427c76:	cmp    edi,0xffffff89
  427c79:	daa    
  427c7a:	enter  0xff12,0x3a
  427c7e:	add    DWORD PTR [ebx+0x30e6afff],0xffffffff
  427c85:	push   ecx
  427c86:	(bad)  
  427c87:	inc    DWORD PTR [eax]
  427c89:	mov    al,0xfd
  427c8b:	gs (bad) 
  427c8d:	cmp    bh,bh
  427c8f:	add    DWORD PTR [eax],0xffffff80
  427c92:	in     al,0x6a
  427c94:	jmp    FWORD PTR [ecx-0x1]
  427c97:	add    bh,bh
  427c99:	push   cs
  427c9a:	arpl   WORD PTR [esi+0x0],di
  427c9d:	sub    edi,edi
  427c9f:	add    bh,bh
  427ca1:	jno    0x427cdb
  427ca3:	mov    esi,0x83a8ff
  427ca8:	(bad)  
  427ca9:	mov    esi,0xbeffaf56
  427cae:	inc    DWORD PTR [eax]
  427cb0:	sub    ecx,0x60
  427cb3:	ret    
  427cb4:	mov    DWORD PTR [eax+eax*1-0x1],edx
  427cb8:	add    al,bl
  427cba:	pushf  
  427cbb:	jno    0x427cbc
  427cbd:	mov    ch,0xff
  427cbf:	dec    DWORD PTR [ecx-0x767534b6]
  427cc5:	xchg   ebp,eax
  427cc6:	add    BYTE PTR [ecx-0x4339e300],cl
  427ccc:	jmp    FWORD PTR [eax]
  427cce:	add    bh,bh
  427cd0:	add    BYTE PTR [edi+0x13895384],cl
  427cd6:	inc    DWORD PTR [ebx+0x66117b00]
  427cdc:	inc    DWORD PTR [esi-0x1]
  427cdf:	add    BYTE PTR [ecx+0xa2d54d],cl
  427ce5:	pop    eax
  427ce6:	cmp    edi,0xffffffff
  427ce9:	sti    
  427cea:	cmp    al,ah
  427cec:	jmp    FWORD PTR [ecx]
  427cee:	add    BYTE PTR [eax],al
  427cf0:	mov    DWORD PTR [esi],eax
  427cf2:	jns    0x427cad
  427cf4:	add    dh,bh
  427cf6:	(bad)  
  427cf7:	inc    DWORD PTR [eax]
  427cf9:	xchg   ebx,eax
  427cfa:	lods   eax,DWORD PTR ds:[esi]
  427cfb:	mov    al,0xff
  427cfd:	js     0x427ccb
  427cff:	mov    edi,edi
  427d01:	mov    ds:0x9ffe2d3,eax
  427d06:	(bad)  
  427d07:	(bad)  
  427d08:	jmp    FWORD PTR [eiz*2+0x45ff05]
  427d0f:	add    ah,cl
  427d11:	out    0x72,eax
  427d13:	mov    al,ds:0xf100
  427d18:	add    BYTE PTR [ecx],cl
  427d1a:	sub    BYTE PTR [eax-0x1],bl
  427d1d:	ss int3 
  427d1f:	(bad)  
  427d20:	(bad)  
  427d21:	mov    edx,0xa0ffb8b4
  427d26:	inc    DWORD PTR [eax]
  427d28:	add    BYTE PTR [ebp+0x79],al
  427d2b:	and    eax,0x83ffbc83
  427d30:	dec    eax
  427d32:	test   BYTE PTR [eax+0xff3eff],bl
  427d38:	mov    DWORD PTR ds:0x5a8996bc,esi
  427d3e:	(bad)  
  427d3f:	(bad)  
  427d40:	call   DWORD PTR ds:0x3400c298
  427d46:	(bad)  
  427d47:	(bad)  
  427d48:	call   DWORD PTR [edx]
  427d4a:	fisttp QWORD PTR [esi+0x3a83]
  427d50:	jmp    DWORD PTR [ebx-0x3200ef04]
  427d56:	inc    DWORD PTR [ebx-0x66884134]
  427d5c:	inc    DWORD PTR [edi]
  427d5e:	inc    DWORD PTR [eax]
  427d60:	jmp    FWORD PTR [ecx+eax*4-0x33d6000d]
  427d67:	inc    DWORD PTR [ebx-0x7c3354aa]
  427d6d:	rol    DWORD PTR [eax],cl
  427d6f:	add    BYTE PTR [eax],al
  427d71:	jnp    0x427d67
  427d73:	or     cl,BYTE PTR [ecx+0xff003b]
  427d79:	pop    eax
  427d7a:	dec    ebp
  427d7b:	cmp    edi,0x890083bd
  427d81:	adc    eax,0xecc0413
  427d86:	add    DWORD PTR [eax],0x0
  427d89:	add    DWORD PTR [ecx],0xf9ff64
  427d8f:	inc    DWORD PTR [ebx-0xcf1bc0]
  427d95:	ret    
  427d96:	cmp    edi,0x0
  427d99:	mov    cl,0xcd
  427d9b:	pop    ebp
  427d9c:	or     DWORD PTR [ebx-0x5a767d00],0xffffffec
  427da3:	mov    WORD PTR [ecx-0xff3d],cs
  427da9:	pop    edi
  427daa:	mov    dl,0xd
  427dac:	add    BYTE PTR [esi],ch
  427dae:	add    BYTE PTR [eax],al
  427db0:	mov    DWORD PTR [ebx+0x23],esi
  427db3:	les    ecx,FWORD PTR [ecx-0x7c00ff75]
  427db9:	out    0x3,al
  427dbb:	loopne 0x427dbc
  427dbd:	icebp  
  427dbe:	inc    DWORD PTR [eax]
  427dc0:	call   DWORD PTR [edi+eax*8]
  427dc3:	or     edi,edi
  427dc5:	xor    BYTE PTR [eax],al
  427dc7:	add    bh,bh
  427dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dca:	fsubr  DWORD PTR [eax+eax*1-0x7cffffab]
  427dd1:	dec    esp
  427dd2:	(bad)  
  427dd3:	push   DWORD PTR gs:[ecx-0x17ffff01]
  427dda:	test   DWORD PTR [eax-0x1],esi
  427ddd:	out    0x83,al
  427ddf:	(bad)  
  427de0:	call   FWORD PTR [esi]
  427de2:	ds push cs
  427de4:	mov    eax,eax
  427de6:	add    bh,bh
  427de8:	(bad)  
  427de9:	mov    edi,0xfff18cb
  427dee:	add    DWORD PTR [eax],0xffffffcc
  427df1:	sbb    BYTE PTR [ecx],dh
  427df3:	sub    bh,bh
  427df5:	(bad)  
  427df6:	(bad)  
  427df7:	inc    DWORD PTR [eax]
  427df9:	lods   eax,DWORD PTR ds:[esi]
  427dfa:	mov    ch,0x82
  427dfc:	add    BYTE PTR [eax-0x1],bh
  427dff:	add    bh,bh
  427e01:	mov    esp,0x6083640b
  427e06:	add    bh,bh
  427e08:	(bad)  
  427e09:	out    dx,al
  427e0a:	sti    
  427e0b:	(bad)  
  427e0c:	jmp    DWORD PTR [esi-0x21ff0100]
  427e12:	std    
  427e13:	sub    edi,edi
  427e15:	xchg   BYTE PTR [eax],al
  427e17:	cmp    edi,0xffffffcf
  427e1a:	xor    DWORD PTR [edx-0x1],0xffccb0
  427e21:	out    0x3e,al
  427e23:	cmc    
  427e24:	jmp    DWORD PTR [ebx-0x34ff0100]
  427e2a:	test   al,0x6d
  427e2c:	inc    DWORD PTR [edi+0x0]
  427e2f:	int3   
  427e30:	add    BYTE PTR [edx],dl
  427e32:	jb     0x427e96
  427e34:	add    BYTE PTR [ebp-0x1],bh
  427e37:	add    DWORD PTR [eax],0xffffffb8
  427e3a:	jmp    0xffe10187
  427e3f:	add    bh,bh
  427e41:	out    dx,eax
  427e42:	int    0xe5
  427e44:	call   edx
  427e46:	mov    DWORD PTR [eax],eax
  427e48:	xor    DWORD PTR [eax+0x62],0xfffffff5
  427e4c:	jmp    FWORD PTR [edx+0x3f000083]
  427e52:	and    eax,DWORD PTR [edi+0x1600]
  427e58:	and    DWORD PTR [ebx],0x11
  427e5b:	call   0x141f55f
  427e60:	add    BYTE PTR ds:0x1dff6d2e,bh
  427e66:	add    BYTE PTR [eax],al
  427e68:	(bad)  
  427e69:	cmp    eax,0xb600eb04
  427e6e:	(bad)  
  427e6f:	(bad)  
  427e70:	jmp    DWORD PTR [ecx]
  427e72:	mov    edx,0xb5cc1e
  427e77:	add    DWORD PTR [ebx-0x768d594c],0xffffffe7
  427e7e:	add    BYTE PTR [ecx-0x4f5a8601],cl
  427e84:	or     DWORD PTR [edi+edi*8],0xffffffff
  427e88:	sub    DWORD PTR [ecx-0x6c],0x7f
  427e8c:	dec    DWORD PTR ds:0x10cc8300
  427e92:	mov    ds:0xffd4ff1a,eax
  427e97:	inc    DWORD PTR [eax]
  427e99:	push   esp
  427e9a:	popf   
  427e9b:	jnp    0x427e9d
  427e9d:	pop    edx
  427e9e:	add    bh,bh
  427ea0:	add    BYTE PTR [ecx],ah
  427ea2:	pop    ecx
  427ea3:	inc    edi
  427ea4:	(bad)  
  427ea5:	jge    0x427ea6
  427ea7:	(bad)  
  427ea8:	push   DWORD PTR [edx]
  427eaa:	cmp    dl,cl
  427eac:	xor    eax,0xffffffff
  427eaf:	add    BYTE PTR [eax],al
  427eb1:	out    dx,al
  427eb2:	iret   
  427eb3:	push   ebp
  427eb4:	add    BYTE PTR [ecx+0x77ff0000],bl
  427eba:	(bad)  
  427ebb:	push   ss
  427ebc:	inc    DWORD PTR [edi]
  427ebe:	(bad)  
  427ebf:	(bad)  
  427ec0:	push   DWORD PTR [ebp+0x8]
  427ec3:	inc    eax
  427ec4:	sub    DWORD PTR [esi],0xffffffff
  427ec7:	int3   
  427ec8:	call   FWORD PTR [ebx+0x55]
  427ecb:	out    dx,al
  427ecc:	int3   
  427ecd:	push   cs
  427ece:	inc    DWORD PTR [ebx-0x54e00e7d]
  427ed4:	add    ch,bh
  427ed6:	cmp    edi,0xffffffff
  427ed9:	xchg   ch,al
  427edb:	(bad)  
  427edc:	inc    eax
  427ede:	add    bh,bh
  427ee0:	add    BYTE PTR [esi+0x5],ch
  427ee3:	into   
  427ee4:	push   eax
  427ee6:	inc    DWORD PTR [ebx-0x5c2feb77]
  427eec:	add    BYTE PTR [esi-0x7cffff77],dl
  427ef2:	les    ebp,FWORD PTR [ebx]
  427ef4:	push   DWORD PTR [edx-0x1]
  427ef7:	(bad)  
  427ef8:	(bad)  
  427ef9:	sti    
  427efa:	pop    ebx
  427efb:	popa   
  427efc:	call   eax
  427efe:	add    BYTE PTR [ebx+0x1a707dff],al
  427f04:	add    dl,dl
  427f06:	add    bh,bh
  427f08:	(bad)  
  427f09:	frstor [esi]
  427f0b:	sbb    edi,edi
  427f0d:	sbb    BYTE PTR [eax],al
  427f0f:	dec    esp
  427f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f12:	mov    ds:0xba0035,al
  427f17:	inc    DWORD PTR [eax]
  427f19:	mov    ebp,0x2b89e0b7
  427f1e:	(bad)  
  427f1f:	(bad)  
  427f20:	call   FWORD PTR [eax]
  427f22:	push   0xffffff8e
  427f24:	sub    esi,0xffffffff
  427f27:	inc    DWORD PTR [eax]
  427f29:	xlat   BYTE PTR ds:[ebx]
  427f2a:	bound  ebx,QWORD PTR [ebp-0x7d]
  427f2d:	push   ss
  427f2e:	add    ah,cl
  427f30:	push   DWORD PTR [ebx+0x24fff625]
  427f36:	add    bh,bh
  427f38:	cmp    DWORD PTR [esi-0x5500330d],0x0
  427f3f:	int3   
  427f40:	add    BYTE PTR [ebp+0x2083acd1],dl
  427f46:	add    bh,bh
  427f48:	inc    DWORD PTR [eax+eax*8+0x75]
  427f4c:	inc    esi
  427f4e:	(bad)  
  427f4f:	(bad)  
  427f50:	jmp    FWORD PTR [eax]
  427f52:	or     dl,BYTE PTR [eax+eax*1]
  427f55:	sub    DWORD PTR [eax],eax
  427f57:	cmp    edi,0xffffffc2
  427f5a:	lahf   
  427f5b:	xor    DWORD PTR ds:[ecx-0x51ff0001],0xffffff97
  427f63:	(bad)  
  427f64:	inc    DWORD PTR [edx-0x1]
  427f67:	add    bh,bh
  427f69:	pushf  
  427f6a:	and    edi,ebp
  427f6c:	mov    DWORD PTR [ebp+0x3700ffff],ebx
  427f72:	mov    dl,0x20
  427f74:	jmp    esp
  427f76:	inc    DWORD PTR [eax]
  427f78:	(bad)  
  427f79:	mov    ebx,0xe9ff6fba
  427f7e:	cmp    edi,0xffffffff
  427f81:	mov    ds:0x85ff819e,eax
  427f86:	dec    esp
  427f88:	call   FWORD PTR [edx]
  427f8a:	clc    
  427f8b:	inc    BYTE PTR [eax]
  427f8d:	(bad)  
  427f8e:	(bad)  
  427f8f:	(bad)  
  427f90:	jmp    DWORD PTR [edx-0x47ff0657]
  427f96:	mov    DWORD PTR [eax],eax
  427f98:	int3   
  427f99:	xchg   ebp,eax
  427f9a:	push   ecx
  427f9b:	sub    BYTE PTR [eax],al
  427f9d:	pop    esi
  427f9e:	add    DWORD PTR [eax],0xffffff83
  427fa1:	jb     0x427fbb
  427fa3:	adc    cl,ah
  427fa5:	mov    ecx,0x9389ffff
  427faa:	mov    al,0xe
  427fac:	add    dh,bl
  427fae:	add    BYTE PTR [eax],al
  427fb0:	xor    DWORD PTR [esi-0x7c],0xffffffe8
  427fb4:	cmp    DWORD PTR [eax+eax*1-0x1],0x0
  427fb9:	mov    ebx,0x38ff72f6
  427fbe:	add    BYTE PTR [eax],al
  427fc0:	mov    DWORD PTR ds:0x14ff45fa,ebx
  427fc6:	inc    DWORD PTR [ebx-0x2b802f34]
  427fcc:	call   FWORD PTR [edi]
  427fce:	add    bh,bh
  427fd0:	add    BYTE PTR [esi],bl
  427fd2:	test   al,0x28
  427fd4:	push   DWORD PTR [esi]
  427fd6:	int3   
  427fd7:	add    BYTE PTR [eax],al
  427fd9:	(bad)  [ebx+0xe7ff1f]
  427fdf:	mov    edi,edi
  427fe1:	xchg   BYTE PTR [edx+esi*2-0x34],ch
  427fe5:	jecxz  0x427fe6
  427fe7:	inc    DWORD PTR [eax]
  427fe9:	out    0x70,al
  427feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fec:	int3   
  427fed:	scas   al,BYTE PTR es:[edi]
  427fee:	mov    edi,edi
  427ff0:	xor    DWORD PTR ds:0x9c83aa60,0xffffffff
  427ff7:	inc    DWORD PTR [eax]
  427ff9:	mov    al,0xbe
  427ffb:	pop    esi
  427ffc:	add    BYTE PTR [ecx],ch
  427ffe:	add    bh,bh
  428000:	add    BYTE PTR [ebp+0x79ff8c00],dl
  428006:	inc    DWORD PTR [eax]
  428008:	jmp    FWORD PTR [ecx-0x3c0010d8]
  42800e:	mov    DWORD PTR [eax],eax
  428010:	add    BYTE PTR [ecx],bh
  428012:	mov    edx,0x4e002b
  428017:	int3   
  428018:	jmp    DWORD PTR [ecx-0x11]
  42801b:	xor    al,BYTE PTR [eax]
  42801d:	jl     0x42801e
  42801f:	(bad)  
  428020:	jmp    FWORD PTR [eax-0x1c00b961]
  428026:	(bad)  
  428027:	(bad)  
  428028:	call   FWORD PTR [esi+ebp*1+0x4b]
  42802c:	add    cl,cl
  42802e:	(bad)  
  42802f:	(bad)  
  428030:	push   DWORD PTR ds:0x7489c7a2
  428036:	add    BYTE PTR [ebx+0x65b2eecc],al
  42803c:	(bad)  
  42803d:	mov    eax,0xf4ffffcc
  428042:	dec    ecx
  428043:	addr16 mov esi,ebp
  428046:	add    BYTE PTR [eax],al
  428048:	inc    DWORD PTR [eax-0x3c006707]
  42804e:	inc    DWORD PTR [eax]
  428050:	adc    ecx,0xffffffad
  428053:	(bad)  
  428055:	retf   0xccff
  428058:	or     DWORD PTR [esi-0x3d7c7cef],0x0
  42805f:	add    DWORD PTR [eax],0x1b
  428062:	and    dl,BYTE PTR [eax-0x7caa77]
  428068:	call   FWORD PTR [ebx+0x1300eeb8]
  42806e:	add    bh,bh
  428070:	add    BYTE PTR [edi+0x71ffbc58],ch
  428076:	inc    DWORD PTR [eax]
  428078:	jmp    DWORD PTR [esi-0x49]
  42807b:	dec    ebx
  42807c:	int3   
  42807d:	pop    ss
  42807e:	add    bh,bh
  428080:	push   ebx
  428082:	test   al,0xc5
  428084:	jmp    FWORD PTR [edi+0x26ff89cc]
  42808a:	mov    DWORD PTR [ebp-0x34],ebp
  42808d:	push   esp
  42808e:	inc    DWORD PTR [ebx+0x3611cc00]
  428094:	call   FWORD PTR [edi+edi*8]
  428097:	int3   
  428098:	mov    DWORD PTR [ebp+0x7283e5e1],edx
  42809e:	int3   
  42809f:	add    DWORD PTR [eax],0x76
  4280a2:	jge    0x428082
  4280a4:	add    BYTE PTR [edx],al
  4280a6:	add    bh,bh
  4280a8:	push   DWORD PTR [esi]
  4280aa:	or     dh,BYTE PTR [ebx+0x1483]
  4280b0:	int3   
  4280b1:	jnp    0x428062
  4280b3:	adc    al,0xff
  4280b5:	arpl   WORD PTR [eax],ax
  4280b7:	add    DWORD PTR [eax],0xffffff83
  4280ba:	inc    eax
  4280bb:	pop    es
  4280bc:	(bad)  
  4280bd:	out    dx,al
  4280be:	inc    DWORD PTR [eax]
  4280c0:	call   FWORD PTR [edx-0x62]
  4280c3:	jge    0x428091
  4280c5:	test   al,0x0
  4280c7:	mov    DWORD PTR [eax],eax
  4280c9:	in     al,dx
  4280ca:	sub    cl,bl
  4280cc:	call   FWORD PTR [ebx+0xff83]
  4280d2:	test   al,0x3a
  4280d4:	add    BYTE PTR [edi-0x39007601],ch
  4280da:	inc    edi
  4280db:	mov    dl,0xff
  4280dd:	lea    eax,[eax]
  4280df:	add    bh,bh
  4280e1:	inc    ebp
  4280e2:	push   edi
  4280e3:	xor    al,0x0
  4280e5:	add    BYTE PTR es:[eax],al
  4280e8:	mov    DWORD PTR [ebp+0x3ff5d02],ebx
  4280ee:	(bad)  
  4280ef:	dec    DWORD PTR [ecx-0x17ca22]
  4280f5:	inc    esi
  4280f6:	add    ah,cl
  4280f8:	int3   
  4280f9:	and    DWORD PTR [ecx+0x65],esi
  4280fc:	add    BYTE PTR [eax],ch
  4280fe:	add    bh,bh
  428100:	jmp    DWORD PTR [ecx]
  428102:	icebp  
  428103:	dec    ecx
  428104:	inc    DWORD PTR [ebp+0x0]
  428107:	add    bh,bh
  428109:	ins    DWORD PTR es:[edi],dx
  42810a:	or     DWORD PTR [edx],edx
  42810c:	inc    DWORD PTR [eax]
  42810e:	dec    esp
  428110:	dec    edx
  428112:	jbe    0x4280c9
  428114:	call   FWORD PTR [esi]
  428116:	dec    DWORD PTR [ecx-0x60df9c01]
  42811c:	(bad)  
  42811d:	jle    0x42811e
  42811f:	inc    DWORD PTR [ebx-0x8aefd8]
  428125:	loope  0x4280aa
  428127:	(bad)  
  428128:	(bad)  
  428129:	sti    
  42812a:	in     eax,dx
  42812b:	fadd   QWORD PTR [eax]
  42812d:	popf   
  42812e:	int3   
  42812f:	inc    DWORD PTR [eax]
  428131:	cmp    bh,0x73
  428134:	call   FWORD PTR [esi-0x7d]
  428137:	(bad)  
  428138:	(bad)  
  428139:	fcomp  DWORD PTR [ecx+0x1a]
  42813c:	jmp    FWORD PTR [esi]
  42813e:	add    BYTE PTR [eax],al
  428140:	(bad)  
  428141:	mov    ecx,0x5a000e9b
  428146:	(bad)  
  428147:	inc    DWORD PTR [ebx-0x7c083118]
  42814d:	lds    eax,FWORD PTR [eax]
  42814f:	mov    DWORD PTR [eax],eax
  428151:	outs   dx,BYTE PTR ds:[esi]
  428152:	(bad)  
  428153:	jae    0x428154
  428155:	sub    BYTE PTR [eax],al
  428157:	add    BYTE PTR [eax],al
  428159:	fistp  DWORD PTR ds:0xa9000e
  42815f:	int3   
  428160:	call   DWORD PTR [ecx+0x68]
  428163:	sub    BYTE PTR [eax],al
  428165:	xor    eax,0x610000ff
  42816a:	jae    0x4280fb
  42816c:	cmp    DWORD PTR [ecx],0x0
  42816f:	inc    DWORD PTR [eax]
  428171:	int    0x7f
  428173:	sbb    al,0x83
  428175:	add    BYTE PTR ss:[eax],al
  428178:	dec    DWORD PTR [edx-0x54]
  42817b:	add    al,0x0
  42817d:	pop    ds
  42817e:	(bad)  
  42817f:	(bad)  
  428180:	(bad)  
  428181:	mov    edx,0x8effa6b7
  428186:	inc    DWORD PTR [eax]
  428188:	(bad)  
  428189:	jg     0x42811a
  42818b:	rol    DWORD PTR [eax],0x2a
  42818e:	(bad)  
  42818f:	inc    DWORD PTR [eax]
  428191:	out    0x23,eax
  428193:	or     al,0xcc
  428195:	jbe    0x428196
  428197:	int3   
  428198:	cmp    DWORD PTR [eax],0x1b
  42819b:	arpl   di,di
  42819d:	idiv   bh
  42819f:	inc    DWORD PTR [ebx-0x1a0db1]
  4281a5:	into   
  4281a6:	add    BYTE PTR [eax],al
  4281a8:	cmp    DWORD PTR [edi],0xffffffa1
  4281ab:	pop    esi
  4281ac:	(bad)  
  4281ad:	clc    
  4281ae:	int3   
  4281af:	(bad)  
  4281b0:	inc    DWORD PTR [ebp-0x60]
  4281b3:	test   al,0x83
  4281b5:	pop    es
  4281b6:	mov    edi,edi
  4281b8:	(bad)  
  4281b9:	in     al,dx
  4281ba:	mov    esp,0x896c00a5
  4281bf:	add    BYTE PTR [eax],al
  4281c1:	cmp    al,0xad
  4281c3:	inc    ecx
  4281c4:	inc    DWORD PTR [edi]
  4281c6:	(bad)  
  4281c7:	inc    DWORD PTR [eax]
  4281c9:	iret   
  4281ca:	jmp    0xffee80e0
  4281cf:	add    DWORD PTR [ebx-0x76ab1adf],0x5e
  4281d6:	add    BYTE PTR [ebx-0xf208401],al
  4281dc:	push   DWORD PTR [ebx]
  4281de:	inc    DWORD PTR [eax]
  4281e0:	push   DWORD PTR [ecx-0x56]
  4281e3:	sub    al,BYTE PTR [eax]
  4281e5:	or     cl,ah
  4281e7:	add    BYTE PTR [ecx-0x7c6f2770],cl
  4281ed:	loop   0x4281ee
  4281ef:	add    BYTE PTR [ebx-0x99dc86],al
  4281f5:	mov    DWORD PTR fs:[ebx-0x25fb0d00],eax
  4281fc:	inc    eax
  4281fe:	add    DWORD PTR [eax],0xffffffff
  428201:	mov    edx,0x95ff6eb7
  428206:	add    DWORD PTR [eax],0x0
  428209:	das    
  42820a:	imul   ecx,DWORD PTR [ecx+ecx*4],0x8
  42820e:	dec    DWORD PTR [ecx+0x34e1ff00]
  428214:	add    BYTE PTR [edi+0x0],ah
  428217:	inc    DWORD PTR [ebx-0x417165]
  42821d:	inc    DWORD PTR gs:[ebx+0x17db29ff]
  428224:	cmp    DWORD PTR [ecx+0x4889ff83],0xffffffe8
  42822b:	inc    ebx
  42822c:	add    bl,ch
  42822e:	cmp    edi,0xffffffff
  428231:	fmul   st(6),st
  428233:	dec    ebx
  428234:	add    BYTE PTR [ebx-0x7d],ch
  428237:	(bad)  
  428238:	jmp    DWORD PTR [ecx+0x6e89efcf]
  42823e:	add    BYTE PTR [ecx-0x623cef77],cl
  428244:	add    BYTE PTR [ebp-0x1],ch
  428247:	add    BYTE PTR [eax],al
  428249:	push   ebp
  42824a:	lods   eax,DWORD PTR ds:[esi]
  42824b:	pop    ss
  42824c:	push   DWORD PTR [edx-0x1]
  42824f:	cmp    edi,0xd
  428252:	fistp  DWORD PTR [ebp-0x3300fa01]
  428258:	adc    DWORD PTR [edx],0x5e
  42825b:	mov    edx,0xffffa4ff
  428260:	add    BYTE PTR [eax+ebp*4-0x307cac],ch
  428267:	(bad)  
  428268:	(bad)  
  428269:	fstp   DWORD PTR [edi-0x7cd900a2]
  42826f:	add    DWORD PTR [eax],0xffffff90
  428272:	sar    BYTE PTR [ebx+eax*4],0x32
  428276:	(bad)  
  428277:	(bad)  
  428278:	(bad)  
  428279:	fsubr  QWORD PTR [ebp-0x28]
  42827c:	(bad)  
  42827d:	mov    ecx,0xd8ffff00
  428282:	mov    al,0x30
  428284:	add    DWORD PTR [edi+0x6283ff83],0xffffff92
  42828b:	push   cs
  42828c:	jmp    esi
  42828e:	add    bh,bh
  428290:	add    BYTE PTR [edi-0x1a],dh
  428293:	es add ah,bl
  428296:	inc    DWORD PTR [eax]
  428298:	or     DWORD PTR [ebx+ecx*4],0xffffff8c
  42829c:	add    BYTE PTR ds:0x21ffff83,dh
  4282a2:	sub    al,0x1
  4282a4:	(bad)  
  4282a5:	jmp    0x774282a9
  4282aa:	or     eax,ecx
  4282ac:	dec    DWORD PTR [ebp+0x0]
  4282af:	inc    DWORD PTR [eax]
  4282b1:	into   
  4282b2:	mov    ah,0x2f
  4282b4:	(bad)  
  4282b5:	cmp    bh,bh
  4282b7:	inc    DWORD PTR [eax]
  4282b9:	push   0xffffff8f
  4282bb:	out    dx,eax
  4282bc:	inc    ecx
  4282be:	add    bh,bh
  4282c0:	push   DWORD PTR [esi+ebx*2]
  4282c3:	fild   WORD PTR [eax]
  4282c5:	mov    bh,0xff
  4282c7:	mov    edi,edi
  4282c9:	outs   dx,BYTE PTR ds:[esi]
  4282ca:	lahf   
  4282cb:	retf   
  4282cc:	mov    DWORD PTR [edx-0x34],edi
  4282cf:	cmp    edi,0xffffff89
  4282d2:	mov    eax,ds:0x834300f6
  4282d7:	add    BYTE PTR [eax],al
  4282d9:	adc    ebp,DWORD PTR [ebp-0x1fff8]
  4282df:	inc    DWORD PTR [eax]
  4282e1:	pop    ecx
  4282e2:	jns    0x42833c
  4282e4:	dec    DWORD PTR [ebx]
  4282e6:	add    BYTE PTR [eax],al
  4282e8:	call   ebx
  4282ea:	(bad)  
  4282eb:	jbe    0x4282ec
  4282ed:	cmp    eax,0x3affff00
  4282f2:	adc    BYTE PTR [esi+0x83d400],dl
  4282f8:	(bad)  
  4282f9:	in     al,dx
  4282fa:	add    al,0xe9
  4282fc:	mov    DWORD PTR [ebx+eax*4-0x7c2d0077],ecx
  428303:	adc    eax,DWORD PTR [eax]
  428305:	hlt    
  428306:	inc    DWORD PTR [eax]
  428308:	inc    edx
  42830a:	add    DWORD PTR [eax+eax*1],0xff000093
  428311:	jge    0x428390
  428313:	scas   eax,DWORD PTR es:[edi]
  428314:	or     esi,0x0
  428317:	add    bh,bh
  428319:	add    edx,eax
  42831b:	aas    
  42831c:	dec    DWORD PTR [ecx]
  42831e:	dec    DWORD PTR [ecx-0x6c4e4201]
  428324:	mov    esp,ebp
  428326:	inc    DWORD PTR [eax]
  428328:	call   edx
  42832a:	out    dx,eax
  42832b:	push   ss
  42832c:	add    al,cl
  42832e:	inc    DWORD PTR [ebx+0x10e3eff]
  428334:	jmp    FWORD PTR [ebp+0x0]
  428337:	add    bh,bh
  428339:	(bad)  
  42833a:	sbb    BYTE PTR [edx-0x600],bh
  428340:	int3   
  428341:	and    eax,DWORD PTR [ecx]
  428343:	test   BYTE PTR [eax],al
  428345:	imul   eax,DWORD PTR [ebx-0x73990100],0x899cff1b
  42834f:	mov    DWORD PTR [eax],eax
  428351:	enter  0x8aa8,0xff
  428355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428356:	add    BYTE PTR [eax],al
  428358:	add    al,al
  42835a:	sub    DWORD PTR [ecx],0xff838700
  428360:	jmp    FWORD PTR [eax]
  428362:	pop    es
  428363:	adc    bh,bh
  428365:	sub    edi,edi
  428367:	add    ah,cl
  428369:	int3   
  42836a:	int3   
  42836b:	int3   
  42836c:	int3   
  42836d:	int3   
  42836e:	int3   
  42836f:	int3   
  428370:	or     al,0x70
  428372:	pop    esi
  428373:	inc    DWORD PTR [edi+edi*8]
  428376:	mov    edi,edi
  428378:	js     0x428306
  42837a:	push   eax
  42837b:	jmp    FWORD PTR [eax-0x22ff0100]
  428381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428382:	adc    edi,edi
  428384:	in     al,dx
  428385:	add    DWORD PTR [eax],0xffffff89
  428388:	jns    0x428341
  42838a:	repz (bad) 
  42838c:	cli    
  42838d:	inc    DWORD PTR [eax]
  42838f:	dec    DWORD PTR [eax-0x1400cd18]
  428395:	inc    DWORD PTR [ebx-0x68f8d600]
  42839b:	push   DWORD PTR [eax+eax*1]
  42839e:	add    BYTE PTR [eax],al
  4283a0:	sti    
  4283a1:	pop    es
  4283a2:	xchg   BYTE PTR [eax],al
  4283a4:	mov    ebp,0xd500ff00
  4283a9:	pushf  
  4283aa:	push   ecx
  4283ab:	and    DWORD PTR [edi-0x2c000000],0x17
  4283b2:	sub    eax,DWORD PTR [ebx-0x3376b9]
  4283b8:	es xor ebx,eax
  4283bb:	jmp    DWORD PTR [eax]
  4283bd:	int3   
  4283be:	dec    esp
  4283c0:	jns    0x428407
  4283c2:	inc    esi
  4283c3:	call   DWORD PTR [eax]
  4283c5:	int3   
  4283c6:	inc    DWORD PTR [eax]
  4283c8:	ror    DWORD PTR [ecx+eax*2],1
  4283cb:	(bad)  
  4283cc:	inc    BYTE PTR [ebx+0x3e5dcc00]
  4283d2:	and    edi,edi
  4283d4:	ret    
  4283d5:	add    bh,bh
  4283d7:	push   eax
  4283d9:	xchg   edx,eax
  4283da:	idiv   bh
  4283dc:	(bad)  
  4283dd:	inc    DWORD PTR [eax]
  4283df:	int3   
  4283e0:	pop    esi
  4283e1:	ss sti 
  4283e3:	add    BYTE PTR [eax-0x1],ch
  4283e6:	dec    esp
  4283e8:	imul   cx,WORD PTR [edi],0xffff
  4283ec:	adc    al,0xcc
  4283ee:	cmp    edi,0x70
  4283f1:	in     eax,0xf4
  4283f3:	sbb    DWORD PTR [edi+edi*8+0x78d5ff83],0xffffff88
  4283fb:	add    BYTE PTR [eax-0x1],dl
  4283fe:	add    BYTE PTR [eax],al
  428400:	rcr    BYTE PTR [ebp-0x68],cl
  428403:	or     DWORD PTR [ebx],0xffffff83
  428406:	cmp    edi,0xffffff81
  428409:	inc    ebx
  42840a:	push   eax
  42840b:	push   DWORD PTR [edi-0x1]
  42840e:	(bad)  
  42840f:	jmp    DWORD PTR [edx+0x1a]
  428412:	aad    0x83
  428414:	rol    BYTE PTR [ebx-0x3769ff01],cl
  42841a:	lods   al,BYTE PTR ds:[esi]
  42841b:	sub    DWORD PTR [esi-0xf7c3334],0x59
  428422:	sub    al,0xff
  428424:	add    eax,0x8800ff00
  428429:	int3   
  42842a:	sub    bh,bh
  42842c:	pusha  
  42842d:	int3   
  42842e:	inc    DWORD PTR [ebx-0xfb5360]
  428434:	nop
  428435:	inc    DWORD PTR [eax]
  428437:	add    BYTE PTR [ebp-0x6c00b369],al
  42843d:	add    BYTE PTR [eax],al
  42843f:	call   DWORD PTR [edi]
  428441:	arpl   WORD PTR [esi-0x34],di
  428444:	jns    0x428412
  428446:	inc    DWORD PTR [eax]
  428448:	fisttp DWORD PTR [esi+0xb]
  42844b:	call   DWORD PTR [ecx-0x41770000]
  428451:	loopne 0x4284c9
  428453:	inc    ebx
  428455:	dec    DWORD PTR [ecx+0x78063389]
  42845b:	add    BYTE PTR [esi+0x2f00ff00],dl
  428461:	aaa    
  428462:	mov    al,0xff
  428464:	icebp  
  428465:	add    BYTE PTR [eax],al
  428467:	add    BYTE PTR [ecx],cl
  428469:	rcl    bh,cl
  42846b:	mov    DWORD PTR [edi-0x61ff7c01],ecx
  428471:	arpl   WORD PTR [esi],cx
  428473:	add    BYTE PTR [esi],ch
  428475:	mov    edi,edi
  428477:	add    bl,bl
  428479:	sti    
  42847a:	add    bh,bh
  42847c:	xor    bh,bh
  42847e:	add    bh,bh
  428480:	(bad)  
  428481:	call   esp
  428483:	xor    esi,0x0
  428486:	add    BYTE PTR [eax],al
  428488:	pop    edx
  428489:	retf   
  42848a:	fcos   
  42848c:	cmp    al,BYTE PTR [ebx-0x296f7677]
  428492:	jge    0x428493
  428494:	cmp    BYTE PTR [ecx-0x30a67d00],cl
  42849a:	sub    al,0x0
  42849c:	es (bad) 
  42849e:	(bad)  
  42849f:	jmp    DWORD PTR [esi+0x5a]
  4284a2:	jae    0x4284a3
  4284a4:	adc    bh,bh
  4284a6:	inc    DWORD PTR [ebx-0x33a406]
  4284ac:	ins    DWORD PTR es:[edi],dx
  4284ad:	add    BYTE PTR [eax],al
  4284af:	(bad)  
  4284b0:	in     eax,dx
  4284b1:	push   esp
  4284b2:	jle    0x42843d
  4284b4:	and    bh,bh
  4284b6:	(bad)  
  4284b7:	dec    DWORD PTR [eax-0x4e]
  4284ba:	jne    0x428488
  4284bc:	jge    0x428441
  4284be:	inc    DWORD PTR [ebx-0x33180276]
  4284c4:	sub    edi,edi
  4284c6:	add    DWORD PTR [ebx-0x5e770c],0xffffffad
  4284cd:	add    BYTE PTR [eax],al
  4284cf:	dec    DWORD PTR [edi-0x23]
  4284d2:	xor    al,BYTE PTR [eax]
  4284d4:	cdq    
  4284d5:	int3   
  4284d6:	add    bh,bh
  4284d8:	mov    WORD PTR [ecx-0xe9339a],?
  4284de:	dec    DWORD PTR [ecx-0xa46411]
  4284e4:	out    dx,al
  4284e5:	add    DWORD PTR [eax],0xffffffff
  4284e8:	lods   al,BYTE PTR ds:[esi]
  4284e9:	fistp  WORD PTR [eax]
  4284eb:	and    DWORD PTR [edi],0x0
  4284ee:	(bad)  
  4284ef:	push   DWORD PTR [edi-0x4f7c89f3]
  4284f5:	(bad)  
  4284f6:	inc    DWORD PTR [ebx-0xeff7e3]
  4284fc:	(bad)  
  4284fd:	inc    DWORD PTR [eax]
  4284ff:	push   DWORD PTR [ebx]
  428501:	pop    ss
  428502:	ret    0x8cff
  428505:	add    BYTE PTR [eax],al
  428507:	jmp    DWORD PTR [esi-0x6d]
  42850a:	imul   eax,DWORD PTR [ebx+0xffccb9],0xffffff99
  428511:	daa    
  428512:	ret    
  428513:	mov    ebx,edx
  428515:	add    BYTE PTR [eax],al
  428517:	sbb    ebp,0xfffffff5
  42851a:	mov    ecx,0xf7cc
  42851f:	(bad)  
  428520:	js     0x428521
  428522:	pop    ecx
  428523:	jmp    DWORD PTR [ebp+0x1a00ff00]
  428529:	cmp    al,0x18
  42852b:	jmp    DWORD PTR [eax]
  42852d:	add    BYTE PTR [eax],al
  42852f:	call   FWORD PTR [ecx+esi*2+0x9c0016]
  428536:	(bad)  
  428537:	inc    ebx
  428539:	inc    ebx
  42853a:	mov    ecx,0x892389
  42853f:	inc    DWORD PTR [eax]
  428541:	mov    al,0xdc
  428543:	int3   
  428544:	sar    edi,cl
  428546:	(bad)  
  428547:	call   DWORD PTR [ebx-0x47]
  42854a:	sbb    al,0x89
  42854c:	mov    es,WORD PTR [eax]
  42854e:	add    DWORD PTR [eax],0xffffff82
  428551:	dec    DWORD PTR [edi+edi*8-0x6f]
  428555:	int3   
  428556:	dec    esp
  428558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428559:	loop   0x42859c
  42855b:	add    dl,al
  42855d:	add    BYTE PTR [ebx+0x278e9b00],al
  428563:	inc    DWORD PTR [eax-0x43000100]
  428569:	les    ebp,FWORD PTR [ebx]
  42856b:	adc    ebp,0xffffffff
  42856e:	cmp    edi,0x54
  428571:	jbe    0x4285e2
  428573:	and    DWORD PTR [ebp-0x3bffff01],0xffffffeb
  42857a:	push   0xff007cff
  42857f:	jmp    DWORD PTR [esi+0x2c]
  428582:	mov    al,ds:0xffc600
  428587:	or     DWORD PTR [ecx+0x46],0xfffffff6
  42858b:	mov    DWORD PTR [ebx-0x34],ecx
  42858e:	int3   
  42858f:	call   DWORD PTR [edx+0x76008c1e]
  428595:	add    BYTE PTR [eax],al
  428597:	inc    DWORD PTR [ebp-0x44]
  42859a:	mov    bh,bh
  42859c:	fild   DWORD PTR [eax]
  42859e:	inc    DWORD PTR [ebx+0x9cae8]
  4285a4:	lods   al,BYTE PTR ds:[esi]
  4285a5:	add    BYTE PTR [eax],al
  4285a7:	dec    DWORD PTR [edx+0x2c]
  4285aa:	call   0xf500:0xffcc2183
  4285b1:	dec    ebp
  4285b2:	pop    esp
  4285b3:	(bad)  
  4285b4:	mov    ebx,0xc8ff83cc
  4285b9:	cdq    
  4285ba:	loop   0x4285bc
  4285bc:	fmul   st,st(4)
  4285be:	int3   
  4285bf:	(bad)  
  4285c0:	jns    0x42857e
  4285c2:	xor    BYTE PTR [eax],al
  4285c4:	mov    ds:0x1100ccff,eax
  4285c9:	push   es
  4285ca:	mov    ebp,0x3cff
  4285cf:	jmp    DWORD PTR [ebx+0x5dff1bae]
  4285d5:	(bad)  
  4285d6:	dec    esp
  4285d8:	adc    DWORD PTR [ecx],ebx
  4285da:	out    0x0,eax
  4285dc:	pop    ss
  4285dd:	(bad)  
  4285de:	inc    DWORD PTR [ebx-0x3324ef7c]
  4285e4:	cmp    BYTE PTR [ecx+0x7d3d8300],cl
  4285ea:	mov    WORD PTR [eax],es
  4285ec:	ja     0x428571
  4285ee:	cmp    edi,0x35
  4285f1:	mov    ecx,0xcce7ff7e
  4285f6:	inc    DWORD PTR [ebx-0x33f791a2]
  4285fc:	sti    
  4285fd:	(bad)  
  4285fe:	inc    DWORD PTR [eax]
  428600:	sbb    al,0x53
  428602:	ud0    esi,edi
  428605:	(bad)  
  428606:	(bad)  
  428607:	jmp    edx
  428609:	push   esi
  42860a:	(bad)  
  42860c:	or     eax,0x96838300
  428611:	fist   WORD PTR [edi-0x34]
  428614:	(bad)  
  428616:	inc    DWORD PTR [eax]
  428618:	pop    edi
  428619:	mov    ebp,0xff76ff3e
  42861e:	mov    edi,edi
  428620:	ret    0x5e53
  428623:	mov    DWORD PTR [edi-0x1],ecx
  428626:	add    bh,bh
  428628:	dec    ecx
  428629:	mov    esp,0xff13ff60
  42862e:	inc    DWORD PTR [ebx+0x5b204c]
  428634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428635:	inc    DWORD PTR [eax]
  428637:	add    BYTE PTR [edx],bh
  428639:	(bad)  
  42863a:	cdq    
  42863b:	jmp    DWORD PTR [edx-0x74ff0034]
  428641:	jnp    0x428691
  428643:	int3   
  428644:	pop    ebp
  428645:	int3   
  428646:	cmp    edi,0xffffffd0
  428649:	mov    ah,0x54
  42864b:	sub    ecx,0xffffffff
  42864e:	(bad)  
  42864f:	call   FWORD PTR [ebp-0x6d7c7d7e]
  428655:	dec    DWORD PTR [ecx-0x79391a00]
  42865b:	add    BYTE PTR [eax+eax*1],dl
  42865e:	int3   
  42865f:	adc    DWORD PTR [eax+0x2d],0x1c
  428663:	add    BYTE PTR [ecx+0x600000ff],bh
  428669:	xchg   edi,eax
  42866a:	popa   
  42866b:	inc    DWORD PTR [eax]
  42866d:	add    bh,bh
  42866f:	jmp    DWORD PTR [edi+0x30]
  428672:	add    cl,ah
  428674:	cmp    eax,0xe70083cc
  428679:	jns    0x428697
  42867b:	dec    esp
  42867d:	add    DWORD PTR [eax],0x0
  428680:	lods   al,BYTE PTR ds:[esi]
  428681:	xchg   esi,eax
  428682:	daa    
  428683:	add    edx,0x0
  428686:	add    DWORD PTR [eax],0xffffffe6
  428689:	xchg   edi,eax
  42868a:	int3   
  42868b:	jmp    DWORD PTR [eax+eax*1+0x159489ff]
  428692:	jg     0x428660
  428694:	in     eax,0xff
  428696:	(bad)  
  428697:	call   edi
  428699:	sar    BYTE PTR [ecx-0x7c001601],cl
  42869f:	jmp    DWORD PTR ds:0xbeffa8b3
  4286a5:	dec    DWORD PTR [ecx-0x55566501]
  4286ab:	add    BYTE PTR [ebp+0x1dff00ff],ah
  4286b1:	jl     0x4286e7
  4286b3:	add    BYTE PTR [ebx-0x1],ah
  4286b6:	int3   
  4286b7:	dec    DWORD PTR [ebx]
  4286b9:	sbb    al,0x37
  4286bb:	mov    DWORD PTR [ebx],esi
  4286bd:	(bad)  
  4286be:	(bad)  
  4286bf:	push   esp
  4286c1:	pop    es
  4286c2:	jmp    0x422ec6
  4286c7:	add    BYTE PTR [ebp-0x5e],ah
  4286ca:	ror    BYTE PTR [ecx-0x21],1
  4286d0:	sub    BYTE PTR [edx],bh
  4286d2:	or     bh,bh
  4286d4:	jge    0x4286d6
  4286d6:	dec    esp
  4286d8:	and    al,0x3
  4286da:	mov    dl,0x83
  4286dc:	mov    ds:0xd600ff83,eax
  4286e1:	vmread DWORD PTR [eax],eax
  4286e4:	test   BYTE PTR [eax],al
  4286e6:	add    BYTE PTR [eax],al
  4286e8:	xor    cl,BYTE PTR [edx-0x977c08]
  4286ee:	inc    DWORD PTR [eax]
  4286f0:	sub    DWORD PTR [ebp+0x18839d],eax
  4286f6:	add    bh,bh
  4286f8:	pop    ecx
  4286f9:	adc    eax,0xd8cc24
  4286fe:	inc    DWORD PTR [eax]
  428700:	popw   ds
  428702:	repz sbb DWORD PTR [edi-0x7d],0xffffffff
  428707:	inc    DWORD PTR [edx*8+0xf900b6]
  42870e:	mov    DWORD PTR [eax],eax
  428710:	in     eax,dx
  428711:	cmp    ecx,DWORD PTR [eax+eax*1+0x31]
  428715:	add    BYTE PTR [ebx-0x3b959e34],al
  42871b:	add    dh,cl
  42871d:	inc    DWORD PTR [eax]
  42871f:	(bad)  
  428720:	std    
  428721:	rcl    BYTE PTR [edx+0xff46ff],0x0
  428728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428729:	pop    eax
  42872a:	push   0xffff8aff
  42872f:	add    ch,dl
  428731:	popa   
  428732:	jo     0x4286bd
  428734:	adc    bh,bh
  428736:	add    BYTE PTR [eax],al
  428738:	jb     0x42873a
  42873a:	nop
  42873b:	add    BYTE PTR [edx+0x2d8300ff],bl
  428741:	iret   
  428742:	and    eax,DWORD PTR [eax]
  428744:	and    al,0xff
  428746:	mov    edi,edi
  428748:	pop    edx
  428749:	mov    ebx,0x897e00eb
  42874e:	(bad)  
  42874f:	dec    DWORD PTR [ebp+0x44]
  428752:	fmulp  st(4),st
  428754:	lds    eax,FWORD PTR [eax]
  428756:	add    DWORD PTR [ebx-0x3e97d9],0xffffff86
  42875d:	mov    esp,ecx
  42875f:	add    BYTE PTR [eax+0x100d5b1],dl
  428765:	int3   
  428766:	add    bh,bh
  428768:	retf   0x833e
  42876b:	jmp    FWORD PTR [ecx-0x3d337601]
  428771:	loop   0x4287ea
  428773:	sub    DWORD PTR ds:0x19ffffff,0x60
  42877a:	dec    DWORD PTR ds:[edi+0x0]
  42877e:	(bad)  
  42877f:	call   FWORD PTR [edi+0x2c]
  428782:	xor    bh,bh
  428784:	add    DWORD PTR fs:[ebx+0x33284c83],0xffffffff
  42878c:	cmp    DWORD PTR [eax],eax
  42878e:	add    BYTE PTR [eax],al
  428790:	ja     0x428799
  428792:	inc    ecx
  428793:	or     DWORD PTR [edi+edi*8],0x0
  428797:	mov    DWORD PTR [ebx+0x16],esp
  42879a:	leave  
  42879b:	add    BYTE PTR [edi-0x42ff0100],cl
  4287a1:	call   0x1c86b4
  4287a6:	add    DWORD PTR [eax],0x3e
  4287a9:	ficom  DWORD PTR [edi]
  4287ab:	add    BYTE PTR [edx-0x1800ff01],bl
  4287b1:	loope  0x4287f4
  4287b3:	call   DWORD PTR [edx]
  4287b5:	int3   
  4287b6:	cmp    edi,0x76
  4287b9:	xor    eax,0xf6000a
  4287be:	add    bh,bh
  4287c0:	imul   ebp,DWORD PTR [edi-0xe2000f],0xbe2ffff
  4287ca:	dec    esp
  4287cb:	jmp    DWORD PTR [ebx]
  4287cd:	int3   
  4287ce:	add    BYTE PTR [eax],al
  4287d0:	retf   
  4287d1:	mov    eax,0xff9eccbc
  4287d6:	add    BYTE PTR [ebx-0x7c43c30b],al
  4287dc:	adc    cl,ah
  4287de:	cmp    edi,0x53
  4287e1:	inc    eax
  4287e2:	dec    ebx
  4287e3:	mov    DWORD PTR [ecx+0x14ccffff],ebx
  4287e9:	sbb    al,0x72
  4287eb:	inc    DWORD PTR [ecx-0x42010000]
  4287f1:	les    esi,FWORD PTR [esi-0x33338d7d]
  4287f7:	add    BYTE PTR ds:0x1dfff221,bl
  4287fd:	inc    DWORD PTR [eax]
  4287ff:	add    bl,ah
  428801:	retf   
  428802:	gs add dh,ah
  428805:	cmp    edi,0xffffffff
  428808:	dec    ecx
  428809:	icebp  
  42880a:	xchg   bh,bh
  42880c:	aad    0xff
  42880e:	cmp    edi,0xfffffffc
  428811:	retf   
  428812:	dec    ecx
  428813:	add    BYTE PTR ds:0x6f000000,bl
  428819:	repz or bh,bh
  42881c:	sub    bh,bh
  42881e:	add    DWORD PTR [eax],0x15
  428821:	push   cs
  428822:	jbe    0x4287a7
  428824:	mov    ds:0x75ff0000,eax
  428829:	out    0xe,eax
  42882b:	mov    DWORD PTR [esi-0x1],ebx
  42882e:	add    bh,bh
  428830:	adc    eax,DWORD PTR [ebx]
  428832:	xchg   bh,bh
  428834:	xchg   esp,eax
  428835:	inc    DWORD PTR [eax]
  428837:	call   DWORD PTR [ebx]
  428839:	pop    ds
  42883a:	sbb    DWORD PTR [eax],eax
  42883c:	mov    al,0x83
  42883e:	(bad)  
  42883f:	(bad)  
  428840:	(bad)  
  428841:	dec    cl
  428843:	add    BYTE PTR [edx-0x77],bl
  428846:	add    BYTE PTR [ecx-0x7cd643d7],cl
  42884c:	sbb    BYTE PTR [eax],al
  42884e:	add    BYTE PTR [eax],al
  428850:	dec    edx
  428851:	xor    bl,BYTE PTR [edi+edi*8]
  428854:	ins    BYTE PTR es:[edi],dx
  428855:	inc    DWORD PTR [ebx+0x3c92a083]
  42885b:	jmp    DWORD PTR [edx-0x1]
  42885e:	int3   
  42885f:	call   DWORD PTR [ebx+0x2d]
  428862:	add    bh,bh
  428864:	iret   
  428865:	(bad)  
  428866:	(bad)  
  428867:	call   DWORD PTR [ebp-0x2300b994]
  42886d:	inc    DWORD PTR [eax]
  42886f:	inc    DWORD PTR [ecx-0x43]
  428872:	dec    DWORD PTR cs:[eax+0x70ffffff]
  428879:	js     0x428840
  42887b:	(bad)  
  42887c:	fdiv   st(7),st
  42887e:	cmp    edi,0xffffffa2
  428881:	ror    BYTE PTR [edi+edi*8-0x53],0x0
  428886:	add    BYTE PTR [ebx-0x333cbde1],al
  42888c:	dec    ebx
  42888d:	int3   
  42888e:	mov    DWORD PTR [ebx+0x77538],eax
  428894:	jno    0x428896
  428896:	add    bh,bh
  428898:	add    ebp,DWORD PTR [eax+0x35]
  42889b:	cmp    DWORD PTR [eax],0xffffffff
  42889e:	(bad)  
  42889f:	dec    DWORD PTR ds:0x2d00128c
  4288a5:	(bad)  
  4288a6:	dec    esp
  4288a8:	and    eax,0xef83be52
  4288ad:	add    DWORD PTR [ebx+0x3c94d989],0xffffffff
  4288b4:	scas   eax,DWORD PTR es:[edi]
  4288b5:	add    DWORD PTR [ebx+0x31fb82cc],0xffffffff
  4288bc:	or     ecx,DWORD PTR [ecx-0x63d0000]
  4288c2:	dec    edi
  4288c3:	mov    esp,eax
  4288c5:	add    DWORD PTR [eax],0x0
  4288c8:	mov    dl,0xfc
  4288ca:	lods   eax,DWORD PTR ds:[esi]
  4288cb:	push   DWORD PTR [edx]
  4288cd:	cmp    edi,0xffffffff
  4288d0:	unpcklps xmm5,XMMWORD PTR [edx+0x0]
  4288d4:	outs   dx,BYTE PTR ds:[esi]
  4288d5:	add    bh,bh
  4288d7:	add    BYTE PTR [edi+0x15ff1638],dl
  4288dd:	cmp    edi,0xffffff83
  4288e0:	sub    DWORD PTR [ebx-0x7c9a0049],0x0
  4288e7:	(bad)  
  4288e8:	aas    
  4288e9:	mov    BYTE PTR [eax],ch
  4288eb:	call   FWORD PTR [edi-0x77]
  4288ee:	add    BYTE PTR [ebx+0x961a46],al
  4288f4:	and    edi,edi
  4288f6:	inc    DWORD PTR [ebx-0x76bf7223]
  4288fc:	mov    DWORD PTR [eax],0x292fff00
  428902:	inc    DWORD PTR fs:[ebx-0x2bff0100]
  428909:	sub    ecx,0xff89abff
  42890f:	mov    DWORD PTR [ecx],eax
  428911:	mov    bl,0xa8
  428913:	push   DWORD PTR [ebx]
  428915:	add    DWORD PTR [eax],0x0
  428918:	out    dx,eax
  428919:	lds    ebx,FWORD PTR [edi-0xff1f01]
  42891f:	add    BYTE PTR [ebp-0x18],cl
  428922:	les    eax,FWORD PTR [eax]
  428924:	mov    ecx,0xd0ff00ff
  428929:	test   al,0x4d
  42892b:	add    BYTE PTR [ecx-0x1],ch
  42892e:	(bad)  
  42892f:	(bad)  
  428930:	cli    
  428931:	arpl   WORD PTR [ebx-0x1],di
  428934:	sti    
  428935:	inc    DWORD PTR [eax]
  428937:	cmp    DWORD PTR [esp+esi*8-0x18],0xffffffff
  42893c:	jecxz  0x4288c7
  42893e:	inc    DWORD PTR [eax]
  428940:	(bad)  
  428941:	and    edx,eax
  428943:	or     DWORD PTR [ebx-0x1],0x0
  428947:	sub    DWORD PTR [ecx+0x31],0x68
  42894b:	add    al,ah
  42894d:	inc    DWORD PTR [eax]
  42894f:	push   DWORD PTR [ecx-0x3d00b48f]
  428955:	int3   
  428956:	inc    DWORD PTR [eax]
  428958:	pop    edi
  428959:	pop    eax
  42895a:	mov    WORD PTR [eax],es
  42895c:	mov    al,0x83
  42895e:	add    bh,bh
  428960:	dec    ebp
  428961:	je     0x428972
  428963:	int3   
  428964:	out    0x0,al
  428966:	add    BYTE PTR [ebx-0x4c05c0],al
  42896c:	push   edx
  42896d:	dec    esp
  42896f:	add    BYTE PTR [ecx-0x277ce843],ah
  428975:	inc    DWORD PTR [eax]
  428977:	add    BYTE PTR [ecx-0x7b004dee],dh
  42897d:	(bad)  
  42897e:	inc    DWORD PTR [eax]
  428980:	dec    edx
  428981:	xchg   ebp,eax
  428982:	mov    ebp,0xffffd8ff
  428987:	add    dl,al
  428989:	xchg   ebx,eax
  42898a:	mov    ?,edi
  42898c:	inc    edx
  42898d:	add    bh,bh
  42898f:	xor    DWORD PTR [esp+eiz*8-0x7ca2004a],0x0
  428997:	add    BYTE PTR [eax+esi*1+0x53],cl
  42899b:	(bad)  
  42899c:	cmp    eax,DWORD PTR [eax]
  42899e:	add    bh,bh
  4289a0:	iret   
  4289a1:	daa    
  4289a2:	sbb    eax,0xff837000
  4289a7:	jmp    DWORD PTR [ecx]
  4289a9:	sbb    DWORD PTR [esi],edi
  4289ab:	jmp    DWORD PTR [eax+eax*1-0x7d]
  4289af:	(bad)  
  4289b0:	jle    0x428997
  4289b2:	imul   edi,edi,0xff89832a
  4289b8:	xchg   ebp,eax
  4289b9:	cs and bh,bh
  4289bc:	lods   eax,DWORD PTR ds:[esi]
  4289bd:	add    BYTE PTR [eax],al
  4289bf:	add    dl,al
  4289c1:	fs retf 0x8aff
  4289c5:	dec    DWORD PTR [ecx+0xd1ce3cc]
  4289cb:	add    BYTE PTR [eax],dl
  4289cd:	add    BYTE PTR [ecx-0x7afc8c01],cl
  4289d3:	add    DWORD PTR [esi],0x0
  4289d6:	add    BYTE PTR [eax],al
  4289d8:	jp     0x4289e6
  4289da:	cmp    al,0x83
  4289dc:	mov    ds:0x97000000,al
  4289e1:	sub    DWORD PTR [edx],edi
  4289e3:	add    BYTE PTR [ebx+0x0],ah
  4289e6:	dec    esp
  4289e8:	int3   
  4289e9:	mov    al,ds:0x9783f9
  4289ee:	int3   
  4289ef:	add    ch,bl
  4289f1:	or     DWORD PTR [eax-0xff9401],ebp
  4289f7:	add    BYTE PTR [esi-0x6b7681f4],bh
  4289fd:	(bad)  
  4289fe:	inc    DWORD PTR [eax]
  428a00:	fdivr  st,st(3)
  428a02:	adc    edi,edi
  428a04:	sbb    eax,0x9cffffff
  428a09:	or     BYTE PTR [ebx+eax*4+0x1a],bh
  428a0d:	mov    edi,edi
  428a0f:	push   DWORD PTR [eax+0x19006ada]
  428a15:	add    BYTE PTR [eax],al
  428a17:	(bad)  
  428a18:	cld    
  428a19:	mov    ds:0x76ff27,al
  428a1e:	add    bh,bh
  428a20:	ss adc BYTE PTR ds:[ebx-0x3300ff39],al
  428a28:	mov    cs:0xdff44,al
  428a2e:	dec    esp
  428a30:	in     al,dx
  428a31:	and    eax,0x84cc6c
  428a36:	mov    DWORD PTR [eax],eax
  428a38:	jmp    0x4d41c894
  428a3d:	int3   
  428a3e:	add    bh,bh
  428a40:	addr16 mov al,0xa2
  428a43:	or     DWORD PTR [ecx+0x7effffff],0xffffff91
  428a4a:	sub    bh,bh
  428a4c:	enter  0xffcc,0xff
  428a50:	add    BYTE PTR [ebx-0x700019],al
  428a56:	add    BYTE PTR [eax],al
  428a58:	shl    dh,1
  428a5a:	fwait
  428a5b:	mov    DWORD PTR [ecx-0x1],ecx
  428a5e:	inc    DWORD PTR [ebx-0xa7c4e3]
  428a64:	jo     0x428a65
  428a66:	(bad)  
  428a67:	(bad)  
  428a68:	clc    
  428a69:	div    BYTE PTR [eax+0xcc6eff]
  428a6f:	int3   
  428a70:	mov    al,0x3a
  428a72:	sub    ecx,DWORD PTR [ecx-0x3314]
  428a78:	out    dx,eax
  428a79:	xor    al,0x53
  428a7b:	int3   
  428a7c:	clc    
  428a7d:	inc    DWORD PTR [eax]
  428a7f:	call   DWORD PTR [ebp+edi*8+0xc20045]
  428a86:	add    DWORD PTR [ebx+0xfd9bd6],0xd
  428a8d:	inc    DWORD PTR [eax]
  428a8f:	call   ebx
  428a91:	mov    eax,ds:0x89be0048
  428a96:	add    bh,bh
  428a98:	mov    eax,ds:0x88cc74ca
  428a9d:	(bad)  
  428a9e:	(bad)  
  428a9f:	inc    DWORD PTR [ecx-0xd002848]
  428aa5:	(bad)  
  428aa6:	inc    DWORD PTR [eax]
  428aa8:	cmp    BYTE PTR [ecx],dl
  428aaa:	mov    bh,0xff
  428aac:	or     DWORD PTR [eax],eax
  428aae:	int3   
  428aaf:	cmp    edx,0xffffffea
  428ab2:	cmp    eax,DWORD PTR [eax]
  428ab4:	cdq    
  428ab5:	add    DWORD PTR [eax],0x0
  428ab8:	pop    ebp
  428ab9:	stos   BYTE PTR es:[edi],al
  428aba:	pop    ebp
  428abb:	push   ecx
  428abd:	add    bh,bh
  428abf:	mov    DWORD PTR [ebx+eiz*2],esi
  428ac2:	jbe    0x428ac3
  428ac4:	push   edi
  428ac5:	inc    DWORD PTR [ebx+0x671894ff]
  428acb:	and    DWORD PTR [ecx],0x0
  428ace:	inc    DWORD PTR [eax]
  428ad0:	pushf  
  428ad1:	pop    ss
  428ad2:	mov    bh,bh
  428ad4:	jge    0x428ad5
  428ad6:	add    bh,bh
  428ad8:	mov    edx,0x55ffc78c
  428add:	add    bh,bh
  428adf:	add    BYTE PTR [ebp-0x79ff0a9d],cl
  428ae5:	inc    DWORD PTR [ebx-0x380b1934]
  428aeb:	mov    DWORD PTR [eax-0x1],ebx
  428aee:	inc    DWORD PTR [eax]
  428af0:	dec    edi
  428af1:	and    al,0x36
  428af3:	add    cl,al
  428af5:	cmp    edi,0xffffffff
  428af8:	push   ecx
  428af9:	outs   dx,BYTE PTR ds:[esi]
  428afa:	xor    eax,DWORD PTR [eax]
  428afc:	cwde   
  428afd:	add    bh,bh
  428aff:	inc    DWORD PTR [esi+0x72]
  428b02:	push   esi
  428b03:	(bad)  
  428b04:	out    dx,al
  428b05:	(bad)  
  428b06:	dec    DWORD PTR [ecx-0x7cf7aaaf]
  428b0c:	ins    DWORD PTR es:[edi],dx
  428b0d:	add    BYTE PTR [eax],al
  428b0f:	add    BYTE PTR [ebp+0x40],ah
  428b12:	scas   al,BYTE PTR es:[edi]
  428b13:	add    BYTE PTR [eax-0x1],al
  428b16:	add    BYTE PTR [eax],al
  428b18:	mov    ah,0x7b
  428b1a:	in     al,dx
  428b1b:	int3   
  428b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b1d:	cmp    edi,0xffffff89
  428b20:	dec    edx
  428b21:	dec    esp
  428b22:	out    dx,eax
  428b23:	add    BYTE PTR [edx],ah
  428b25:	inc    DWORD PTR [eax]
  428b27:	int3   
  428b28:	pop    ebp
  428b29:	or     al,0x6e
  428b2b:	int3   
  428b2c:	in     al,0xff
  428b2e:	inc    DWORD PTR [ebx-0x76a1a062]
  428b34:	mov    WORD PTR [eax],es
  428b36:	dec    DWORD PTR [ecx-0x4c448e]
  428b3c:	enter  0xcc00,0x89
  428b40:	cld    
  428b41:	retf   
  428b42:	(bad)  [ecx-0x76ffc5]
  428b48:	push   ecx
  428b49:	loopne 0x428afe
  428b4b:	int3   
  428b4c:	ret    
  428b4d:	add    bh,bh
  428b4f:	sub    DWORD PTR ds:0xfbccb74a,0xffffff83
  428b56:	add    bh,bh
  428b58:	push   es
  428b59:	loopne 0x428b23
  428b5b:	add    BYTE PTR [eax],ah
  428b5d:	inc    DWORD PTR [eax]
  428b5f:	add    cl,cl
  428b61:	jmp    0x428afd
  428b63:	jmp    FWORD PTR [ecx+ecx*4-0x1]
  428b67:	call   DWORD PTR [edx]
  428b69:	xchg   DWORD PTR [ecx+0x0],ebp
  428b6c:	std    
  428b6d:	inc    DWORD PTR [eax]
  428b6f:	(bad)  
  428b70:	mov    esi,0x8bff387e
  428b75:	add    bh,bh
  428b77:	mov    DWORD PTR [edx],esp
  428b79:	cmc    
  428b7a:	mov    BYTE PTR [eax],al
  428b7c:	dec    eax
  428b7d:	int3   
  428b7e:	add    BYTE PTR [ebx-0x33ca9f24],al
  428b84:	jmp    0x83cc8b88
  428b89:	pop    ebp
  428b8a:	mov    esp,0xffff3eff
  428b8f:	add    BYTE PTR [ecx],dh
  428b91:	sti    
  428b92:	push   edi
  428b93:	add    bl,dh
  428b95:	(bad)  
  428b96:	(bad)  
  428b97:	inc    eax
  428b99:	fnsave [eax]
  428b9b:	or     DWORD PTR [edi+edi*8],0xffffff83
  428b9f:	add    BYTE PTR [esi+0x22],cl
  428ba2:	ret    0x6f00
  428ba5:	inc    DWORD PTR [eax]
  428ba7:	inc    DWORD PTR [ecx]
  428ba9:	pop    ecx
  428baa:	popa   
  428bab:	dec    ebx
  428bad:	(bad)  
  428bae:	(bad)  
  428baf:	push   ebp
  428bb1:	xchg   ecx,eax
  428bb2:	add    bh,bh
  428bb4:	test   eax,0x828983cc
  428bb9:	mov    ch,0xd
  428bbb:	int3   
  428bbc:	dec    edi
  428bbd:	inc    DWORD PTR [ebx-0x40598c01]
  428bc3:	add    BYTE PTR [edi],al
  428bc5:	add    BYTE PTR [ecx+0x29cafbff],cl
  428bcb:	mov    DWORD PTR [edx+0x0],edi
  428bce:	add    bh,bh
  428bd0:	out    0xaf,eax
  428bd2:	stc    
  428bd3:	add    BYTE PTR [edi+0x0],dl
  428bd6:	(bad)  
  428bd7:	(bad)  
  428bd8:	cmp    BYTE PTR [eax-0x3343ff45],ch
  428bde:	cmp    edi,0x5a
  428be1:	dec    esi
  428be2:	mov    edi,0xff1d00
  428be7:	int3   
  428be8:	dec    ebp
  428be9:	pop    ecx
  428bea:	icebp  
  428beb:	int3   
  428bec:	xchg   esi,eax
  428bed:	(bad)  
  428bee:	(bad)  
  428bef:	call   DWORD PTR [esi-0x1d]
  428bf2:	xor    edi,edi
  428bf4:	js     0x428bf5
  428bf6:	add    BYTE PTR [eax],al
  428bf8:	jmp    0x428bb0
  428bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428bfb:	add    dh,bl
  428bfd:	add    bh,bh
  428bff:	add    BYTE PTR [ecx],dh
  428c01:	adc    eax,0xff3e830d
  428c06:	add    BYTE PTR [eax],al
  428c08:	push   esp
  428c09:	call   0xffeb8c7a
  428c0e:	(bad)  
  428c0f:	call   DWORD PTR [ebx+ecx*8]
  428c12:	mov    dl,0x0
  428c14:	clc    
  428c15:	add    BYTE PTR [eax],al
  428c17:	int3   
  428c18:	jmp    0x428c93
  428c1a:	mov    bl,0xcc
  428c1c:	jb     0x428c1e
  428c1e:	add    DWORD PTR [ebx+0x436003],0x71
  428c25:	add    bh,bh
  428c27:	inc    esp
  428c29:	sbb    ebp,0x41ff
  428c2f:	push   edx
  428c31:	fmul   DWORD PTR [ebx-0x1]
  428c34:	idiv   bh
  428c36:	add    BYTE PTR [ebx-0xd43613],al
  428c3c:	inc    ebp
  428c3d:	inc    DWORD PTR [eax]
  428c3f:	add    BYTE PTR [ebx],bl
  428c41:	shl    BYTE PTR ds:0xff002500,0x0
  428c48:	mov    ebp,0x51ff4194
  428c4d:	inc    DWORD PTR [ebx-0x510e127d]
  428c53:	add    dh,bh
  428c55:	add    bh,bh
  428c57:	add    BYTE PTR ds:0xf6ffca33,bh
  428c5d:	add    BYTE PTR [eax],al
  428c5f:	mov    DWORD PTR [edx+0x6bfff72b],edx
  428c65:	(bad)  
  428c66:	inc    DWORD PTR [ebx-0x7cdd29f0]
  428c6c:	sti    
  428c6d:	dec    esp
  428c6f:	push   DWORD PTR [ebx+0x26ff1c24]
  428c75:	add    BYTE PTR [ecx-0x6152d801],cl
  428c7b:	add    dl,cl
  428c7d:	add    bh,bh
  428c7f:	add    BYTE PTR [edi],ah
  428c81:	fnstsw WORD PTR [ebx+0x836a83]
  428c87:	(bad)  
  428c88:	mov    edx,0x3aff520b
  428c8d:	inc    DWORD PTR [eax]
  428c8f:	call   DWORD PTR [edx]
  428c91:	mov    WORD PTR [esi],es
  428c93:	push   esp
  428c95:	int3   
  428c96:	(bad)  
  428c97:	jmp    FWORD PTR ds:0x2800def5
  428c9d:	add    bh,bh
  428c9f:	call   ebx
  428ca1:	shl    esp,cl
  428ca3:	int3   
  428ca4:	imul   eax,DWORD PTR [ebx+0x9faff83],0xffffff9b
  428cab:	mov    DWORD PTR [eax-0x1],eax
  428cae:	(bad)  
  428caf:	(bad)  
  428cb0:	jns    0x428c75
  428cb2:	ins    DWORD PTR es:[edi],dx
  428cb3:	add    BYTE PTR [edx-0x3400ff34],cl
  428cb9:	sbb    eax,0xff1ecc10
  428cbe:	mov    edi,edi
  428cc0:	repz test BYTE PTR [ebx-0x5a01],al
  428cc7:	jmp    FWORD PTR [edx]
  428cc9:	add    DWORD PTR [edi-0xe434],0xffffff83
  428cd0:	inc    ebp
  428cd1:	and    DWORD PTR [eax+eax*1+0xf],eax
  428cd5:	cmp    edi,0xffffffff
  428cd8:	mov    ebp,0x4d005211
  428cdd:	add    bh,bh
  428cdf:	add    BYTE PTR [esi+0x10],ch
  428ce2:	out    0x89,eax
  428ce4:	leave  
  428ce5:	add    BYTE PTR [ebx-0x609bb734],al
  428ceb:	call   FWORD PTR [edi+edi*8+0x76cb89ff]
  428cf2:	in     al,dx
  428cf3:	jmp    FWORD PTR [eax+eax*1+0x73fdff00]
  428cfa:	ja     0x428c7f
  428cfc:	cmp    BYTE PTR [ecx+0x7b730000],cl
  428d02:	pop    ds
  428d03:	dec    DWORD PTR [esi]
  428d05:	dec    esp
  428d07:	int3   
  428d08:	das    
  428d09:	sbb    DWORD PTR [edx],eax
  428d0b:	add    bl,dh
  428d0d:	add    bh,bh
  428d0f:	add    BYTE PTR [ebx+0x19cc760e],ah
  428d15:	inc    DWORD PTR [eax]
  428d17:	mov    DWORD PTR [edi-0x5400c7fa],ecx
  428d1d:	int3   
  428d1e:	add    ah,cl
  428d20:	shl    BYTE PTR [ebx],cl
  428d22:	cmp    edi,0xffffff91
  428d25:	add    BYTE PTR [eax],al
  428d27:	call   FWORD PTR [esi-0x6c002514]
  428d2d:	add    DWORD PTR [ebx-0x3db18400],0x0
  428d34:	mov    ebp,0xacffffff
  428d39:	stos   BYTE PTR es:[edi],al
  428d3a:	pop    ecx
  428d3b:	int3   
  428d3c:	push   es
  428d3d:	inc    DWORD PTR [eax]
  428d3f:	call   FWORD PTR [edx]
  428d41:	test   ch,al
  428d43:	inc    edi
  428d45:	inc    DWORD PTR [ebx+0x75ac7e00]
  428d4b:	add    BYTE PTR [edx-0x7d],bh
  428d4e:	add    DWORD PTR [eax],0xffffffd9
  428d51:	pop    eax
  428d52:	sub    edi,edi
  428d54:	popf   
  428d55:	cmp    edi,0x0
  428d58:	(bad)  
  428d59:	dec    eax
  428d5a:	add    al,BYTE PTR [eax]
  428d5c:	and    bh,bh
  428d5e:	(bad)  
  428d5f:	call   FWORD PTR [esi+edx*2-0xc]
  428d63:	add    BYTE PTR [edi+0x0],bh
  428d66:	inc    DWORD PTR [eax]
  428d68:	pop    eax
  428d69:	mov    edi,0x928936
  428d6e:	add    bh,bh
  428d70:	fsub   QWORD PTR [ecx+0x37]
  428d73:	add    BYTE PTR ds:0xe900ff00,ah
  428d79:	outs   dx,BYTE PTR ds:[esi]
  428d7a:	out    0x83,eax
  428d7c:	ds dec esp
  428d7f:	jmp    DWORD PTR [ebx-0x62]
  428d82:	jle    0x428d83
  428d84:	push   ecx
  428d85:	(bad)  
  428d86:	inc    DWORD PTR [eax]
  428d88:	ret    0xa949
  428d8b:	int3   
  428d8c:	add    edi,edi
  428d8e:	inc    DWORD PTR [eax]
  428d90:	jge    0x428dde
  428d92:	arpl   sp,cx
  428d94:	dec    edi
  428d95:	dec    esp
  428d97:	int3   
  428d98:	mov    edi,0xa383e6d5
  428d9d:	inc    DWORD PTR [ebx+0x48900ff]
  428da3:	int3   
  428da4:	lahf   
  428da5:	inc    DWORD PTR [eax]
  428da7:	add    bl,ch
  428da9:	outs   dx,BYTE PTR ds:[esi]
  428daa:	sbb    edi,edi
  428dac:	sahf   
  428dad:	mov    DWORD PTR [ebx+0x24ac81ff],eax
  428db3:	add    bl,dh
  428db5:	cmp    edi,0xffffffff
  428db8:	push   edx
  428db9:	js     0x428d44
  428dbb:	(bad)  
  428dbc:	(bad)  
  428dbd:	(bad)  
  428dbe:	(bad)  
  428dbf:	push   DWORD PTR [edx+esi*8-0x2b]
  428dc3:	mov    DWORD PTR [ecx],edx
  428dc5:	(bad)  
  428dc6:	(bad)  
  428dc7:	call   edi
  428dc9:	sub    bh,BYTE PTR [edi+edi*8]
  428dcc:	jp     0x428dcd
  428dce:	dec    esp
  428dd0:	stc    
  428dd1:	sar    DWORD PTR ds:0xffff38ff,1
  428dd7:	add    BYTE PTR [edi-0x7],ah
  428dda:	aad    0xff
  428ddc:	ins    BYTE PTR es:[edi],dx
  428ddd:	add    ah,cl
  428ddf:	add    BYTE PTR [ecx+0xd1c0],dh
  428de5:	(bad)  
  428de6:	inc    DWORD PTR [eax]
  428de8:	mov    WORD PTR [edx-0x88ff31],fs
  428dee:	(bad)  
  428def:	inc    DWORD PTR [ebp-0x23000573]
  428df5:	inc    DWORD PTR [eax]
  428df7:	call   FWORD PTR [edx+eax*8+0x6a]
  428dfb:	push   esp
  428dfd:	inc    DWORD PTR [ebx-0x4f4a1900]
  428e03:	add    BYTE PTR [esi-0x1],al
  428e06:	(bad)  
  428e07:	(bad)  
  428e08:	cli    
  428e09:	pop    ecx
  428e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e0b:	mov    DWORD PTR [edx+0x6cc0083],edx
  428e11:	out    0x10,eax
  428e13:	add    DWORD PTR [eax-0x1],0xffffffff
  428e17:	add    BYTE PTR [eax-0x660062af],bh
  428e1d:	int3   
  428e1e:	add    bh,bh
  428e20:	or     ah,BYTE PTR [ebx+esi*2+0x0]
  428e24:	mov    cl,0x0
  428e26:	(bad)  
  428e27:	inc    esp
  428e29:	call   0xffff:0xffe00015
  428e30:	cmp    al,0xe0
  428e32:	fld    QWORD PTR [ebx-0x7c33ffb4]
  428e38:	popf   
  428e39:	std    
  428e3a:	add    DWORD PTR [eax],0xffffffcd
  428e3d:	add    bh,bh
  428e3f:	add    BYTE PTR [ecx],ch
  428e41:	push   ss
  428e42:	push   esp
  428e43:	dec    DWORD PTR [ebx+0x54838300]
  428e49:	pop    esi
  428e4a:	rol    BYTE PTR [ebx-0x3300ff29],0xb8
  428e51:	push   edi
  428e52:	add    BYTE PTR [eax],0x38
  428e55:	add    ah,cl
  428e57:	mov    ebx,ecx
  428e59:	test   DWORD PTR [esi],0xffff7283
  428e5f:	mov    DWORD PTR [eax],edi
  428e61:	cmc    
  428e62:	pusha  
  428e63:	(bad)  
  428e64:	cli    
  428e65:	add    bh,bh
  428e67:	call   FWORD PTR [esi]
  428e69:	cmp    al,0x86
  428e6b:	add    ebx,0xffffffff
  428e6e:	(bad)  
  428e6f:	jmp    DWORD PTR [ebp+0x2f]
  428e72:	adc    edi,edi
  428e74:	ror    BYTE PTR [ecx+0x32d68300],1
  428e7a:	mov    ecx,esp
  428e7c:	popf   
  428e7d:	(bad)  
  428e7e:	dec    esp
  428e80:	add    esp,ebx
  428e82:	pushf  
  428e83:	(bad)  
  428e84:	jmp    0x428e86
  428e86:	mov    edi,edi
  428e88:	add    BYTE PTR [ebp+0xbcfff6],ch
  428e8e:	int3   
  428e8f:	call   FWORD PTR [edi-0x47c57c5]
  428e95:	inc    DWORD PTR [ebx-0x3210a400]
  428e9b:	int3   
  428e9c:	loopne 0x428e9e
  428e9e:	(bad)  
  428e9f:	(bad)  
  428ea0:	fld    st(7)
  428ea2:	scas   eax,DWORD PTR es:[edi]
  428ea3:	add    BYTE PTR [eax],ah
  428ea5:	add    bh,bh
  428ea7:	add    BYTE PTR [ebp+edx*1-0x4a],cl
  428eab:	cmp    DWORD PTR [eax],0xffffffff
  428eae:	inc    DWORD PTR [eax]
  428eb0:	xor    DWORD PTR [eax+0x81ffcf],0xe9530000
  428eba:	pop    es
  428ebb:	add    BYTE PTR [edi],dl
  428ebd:	add    ah,cl
  428ebf:	dec    DWORD PTR [ebx+0x1a]
  428ec2:	call   0x40ff:0xfff1ff
  428ec9:	jo     0x428e4f
  428ecb:	mov    DWORD PTR [ecx-0x34],ebx
  428ece:	(bad)  
  428ecf:	dec    esi
  428ed1:	sbb    dh,BYTE PTR [edi+edi*8-0xff0059]
  428ed8:	jbe    0x83bd8e5f
  428ede:	add    BYTE PTR [ebx+0xafc1a5],al
  428ee4:	add    al,0xcc
  428ee6:	inc    DWORD PTR [eax]
  428ee8:	ins    DWORD PTR es:[edi],dx
  428ee9:	lds    eax,FWORD PTR [edx-0x1]
  428eec:	pop    edi
  428eed:	(bad)  
  428eee:	inc    DWORD PTR [eax]
  428ef0:	mov    ecx,0x5fff8bb7
  428ef5:	mov    edi,edi
  428ef7:	sub    edx,0xffffffa3
  428efa:	sbb    eax,0xffe700
  428eff:	(bad)  
  428f00:	(bad)  
  428f01:	jnp    0x428ed2
  428f03:	inc    DWORD PTR [eax-0x30ff0077]
  428f09:	inc    edx
  428f0a:	push   ds
  428f0b:	push   DWORD PTR [ebx]
  428f0d:	int3   
  428f0e:	int3   
  428f0f:	add    BYTE PTR [ebp+ebx*8-0x762833b9],dh
  428f16:	(bad)  
  428f17:	(bad)  
  428f18:	jmp    0x8900:0x32832c7a
  428f1f:	dec    DWORD PTR ds:0x9f00daa3
  428f25:	(bad)  
  428f26:	dec    esp
  428f28:	int3   
  428f29:	mov    ds:0x89000009,eax
  428f2e:	dec    esp
  428f30:	pusha  
  428f31:	jp     0x428f34
  428f33:	dec    DWORD PTR [ebx-0x34]
  428f36:	add    BYTE PTR [eax],al
  428f38:	jecxz  0x428ede
  428f3a:	daa    
  428f3b:	add    BYTE PTR [esi],al
  428f3d:	int3   
  428f3e:	mov    edi,edi
  428f40:	and    al,dl
  428f42:	les    eax,FWORD PTR [eax]
  428f44:	out    dx,al
  428f45:	inc    DWORD PTR [eax]
  428f47:	jmp    DWORD PTR [esi]
  428f49:	dec    edx
  428f4a:	jne    0x428f4c
  428f4c:	sbb    eax,0x83ff8300
  428f51:	mov    al,ds:0xffc5ccf6
  428f56:	(bad)  
  428f57:	call   DWORD PTR [ebx]
  428f59:	push   edi
  428f5a:	pop    ss
  428f5b:	mov    DWORD PTR [ebp+0x0],esp
  428f5e:	inc    DWORD PTR [eax]
  428f60:	xor    bl,dh
  428f62:	ret    
  428f63:	jmp    FWORD PTR [ebp-0x7d]
  428f66:	add    BYTE PTR [eax],al
  428f68:	retf   
  428f69:	adc    al,BYTE PTR [ebx-0x1]
  428f6c:	jbe    0x428f6d
  428f6e:	mov    DWORD PTR [ebx+0xb16e1],eax
  428f74:	lods   al,BYTE PTR ds:[esi]
  428f75:	add    BYTE PTR [eax],al
  428f77:	add    bl,bl
  428f79:	pop    esp
  428f7a:	daa    
  428f7b:	add    dh,bh
  428f7d:	add    BYTE PTR [ebx-0x427a8301],al
  428f83:	jmp    FWORD PTR [ebx-0x1]
  428f86:	int3   
  428f87:	dec    DWORD PTR [ebp+0xc]
  428f8a:	enter  0x9600,0xff
  428f8e:	or     esp,0x35
  428f91:	inc    eax
  428f92:	call   0x5fff:0xffff3100
  428f99:	test   eax,0x89f5ffdf
  428f9e:	cmp    edi,0x65
  428fa1:	ins    BYTE PTR es:[edi],dx
  428fa2:	inc    esi
  428fa3:	and    edi,0xffffffcc
  428fa6:	dec    DWORD PTR [ecx-0x7635df89]
  428fac:	fdiv   st(7),st
  428fae:	add    DWORD PTR [eax],0x21
  428fb1:	sub    BYTE PTR [edi+0xff2cff],dh
  428fb7:	add    bl,ah
  428fb9:	xor    DWORD PTR [eax],eax
  428fbb:	add    BYTE PTR [eax],al
  428fbd:	(bad)  
  428fbe:	inc    DWORD PTR [eax]
  428fc0:	icebp  
  428fc1:	jnp    0x428fdb
  428fc3:	call   DWORD PTR [ecx+ecx*4+0x60cbff00]
  428fca:	mov    ch,0x89
  428fcc:	pop    ebx
  428fcd:	add    BYTE PTR [ebx+0x10cef0cc],al
  428fd3:	and    DWORD PTR [ecx],0xffffffcc
  428fd6:	(bad)  
  428fd7:	call   DWORD PTR [ebx-0x19ffab65]
  428fdd:	add    bh,bh
  428fdf:	call   DWORD PTR [esi-0xb33a45e]
  428fe5:	add    DWORD PTR [eax],0x0
  428fe8:	xchg   ebx,eax
  428fe9:	test   ecx,edx
  428feb:	add    BYTE PTR [edi+edi*8-0x37ffff34],bh
  428ff2:	fild   WORD PTR [eax]
  428ff4:	pushf  
  428ff5:	int3   
  428ff6:	(bad)  
  428ff7:	dec    DWORD PTR [edi-0x1f00ad6c]
  428ffd:	(bad)  
  428ffe:	inc    DWORD PTR [eax]
  429000:	mov    ds:0x1dff34f6,al
  429005:	add    BYTE PTR [eax],al
  429007:	add    DWORD PTR [eax-0x1c],0x77
  42900b:	call   FWORD PTR [esi-0x1]
  42900e:	dec    esp
  429010:	stos   DWORD PTR es:[edi],eax
  429011:	lea    eax,[ecx-0x7d]
  429014:	dec    ecx
  429015:	mov    DWORD PTR [ebx+0x5f420700],eax
  42901b:	(bad)  
  42901c:	fdivr  st,st(7)
  42901e:	add    DWORD PTR [eax],0xffffffb8
  429021:	xchg   ebp,eax
  429022:	loopne 0x429023
  429024:	inc    ebp
  429025:	inc    DWORD PTR [eax]
  429027:	jmp    FWORD PTR [ebp+0x44009aa0]
  42902d:	dec    esp
  42902f:	(bad)  
  429030:	jle    0x428fe4
  429032:	cmp    edi,edi
  429034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429035:	add    BYTE PTR [eax],al
  429037:	add    BYTE PTR [edi+0x7b],bh
  42903a:	popf   
  42903b:	int3   
  42903c:	mov    edi,0xbcffffff
  429041:	add    BYTE PTR [esi],dl
  429043:	mov    DWORD PTR [edi],edx
  429045:	add    bh,bh
  429047:	int3   
  429048:	adc    al,0x24
  42904a:	jmp    FWORD PTR cs:[ecx-0x7d]
  42904e:	(bad)  
  42904f:	call   DWORD PTR [ebp-0x4d7cccb2]
  429055:	add    BYTE PTR [eax],al
  429057:	dec    DWORD PTR [esi+0x78004141]
  42905d:	int3   
  42905e:	dec    DWORD PTR [ecx-0xc9a1f1]
  429064:	xor    bh,bh
  429066:	add    bh,bh
  429068:	and    esi,DWORD PTR [edx-0xf50098]
  42906e:	add    BYTE PTR [eax],al
  429070:	mov    bl,0xb4
  429072:	sbb    bh,bh
  429074:	push   eax
  429075:	(bad)  
  429076:	inc    DWORD PTR [ebx-0x33ca95c5]
  42907c:	sub    BYTE PTR [eax],al
  42907e:	cmp    edi,0xffffff8c
  429081:	cs out dx,al
  429083:	add    cl,ch
  429085:	add    bh,bh
  429087:	dec    esi
  429089:	dec    esp
  42908a:	scas   al,BYTE PTR es:[edi]
  42908b:	push   DWORD PTR [esi]
  42908d:	add    BYTE PTR [eax],al
  42908f:	add    BYTE PTR [ecx+0x490069ca],ch
  429095:	inc    DWORD PTR [ebx-0x548fa234]
  42909b:	int3   
  42909c:	iret   
  42909d:	(bad)  
  42909e:	(bad)  
  42909f:	dec    DWORD PTR [ebp+0x52ff7600]
  4290a5:	(bad)  
  4290a6:	(bad)  
  4290a7:	push   DWORD PTR [ebx+ebx*8+0x6483a9]
  4290ae:	int3   
  4290af:	add    ch,dl
  4290b1:	shr    BYTE PTR [esi+0x82ff],1
  4290b7:	or     DWORD PTR [esi+0x73],0xffffffe9
  4290bb:	add    BYTE PTR [ebp+0x0],cl
  4290be:	inc    DWORD PTR [ebx-0x8ab348]
  4290c4:	adc    edi,edi
  4290c6:	inc    DWORD PTR [ebx-0x2d939c]
  4290cc:	cmp    BYTE PTR [eax],al
  4290ce:	int3   
  4290cf:	sub    DWORD PTR [esi+0x7ffc532],0xffffff83
  4290d6:	add    DWORD PTR [eax],0xffffffe0
  4290d9:	ins    BYTE PTR es:[edi],dx
  4290da:	stos   DWORD PTR es:[edi],eax
  4290db:	dec    eax
  4290dd:	add    bh,bh
  4290df:	inc    DWORD PTR [edx-0x7b]
  4290e2:	xchg   edx,eax
  4290e3:	add    ch,dh
  4290e5:	add    ah,cl
  4290e7:	or     DWORD PTR [ecx+0x2b00614a],0xffffff83
  4290ee:	inc    DWORD PTR [eax]
  4290f0:	and    al,0x9a
  4290f2:	add    BYTE PTR [eax],al
  4290f4:	add    BYTE PTR [ebx-0x7fb50000],0x5a
  4290fb:	mov    esp,ebp
  4290fd:	mov    edi,edi
  4290ff:	xor    ebp,0xffffff9a
  429102:	ret    0xedff
  429105:	inc    DWORD PTR [eax]
  429107:	(bad)  
  429108:	cmp    esi,edx
  42910a:	inc    esi
  42910b:	sbb    esp,0x0
  42910e:	add    ah,cl
  429110:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429112:	cdq    
  429113:	add    BYTE PTR [edi+0x4e00ff00],ah
  429119:	mov    BYTE PTR [eax+0x899bff],al
  42911f:	sbb    DWORD PTR [edi-0x46760a53],0x0
  429126:	mov    DWORD PTR [ecx-0x6230c9],ecx
  42912c:	rol    BYTE PTR [eax],cl
  42912e:	inc    DWORD PTR [eax]
  429130:	xchg   edx,eax
  429131:	retf   0xff57
  429134:	inc    eax
  429135:	add    bh,bh
  429137:	add    BYTE PTR [edx+edx*4+0x858385],ch
  42913e:	add    bh,bh
  429140:	(bad)  
  429141:	cmp    eax,ebx
  429143:	add    cl,al
  429145:	add    bh,bh
  429147:	int3   
  429148:	push   edi
  429149:	dec    eax
  42914a:	inc    edi
  42914b:	inc    DWORD PTR [ecx-0x34]
  42914e:	inc    DWORD PTR [eax]
  429150:	sbb    esp,DWORD PTR [ecx-0x21]
  429153:	inc    esp
  429155:	int3   
  429156:	add    BYTE PTR [eax],al
  429158:	ror    DWORD PTR [eax-0x5f],0x0
  42915c:	out    0xff,eax
  42915e:	inc    DWORD PTR [eax]
  429160:	add    DWORD PTR gs:[edx-0x77],0x83ffff2f
  429168:	(bad)  
  429169:	jmp    0x4291df
  42916b:	(bad)  
  42916c:	fimul  DWORD PTR [ecx-0x20880100]
  429172:	ja     0x429174
  429174:	jb     0x429142
  429176:	inc    DWORD PTR [eax]
  429178:	int3   
  429179:	xchg   ebp,eax
  42917a:	out    dx,al
  42917b:	jmp    DWORD PTR [ecx-0x1]
  42917e:	add    ah,cl
  429180:	repz jmp 0x429114
  429183:	inc    DWORD PTR [ebx]
  429185:	(bad)  
  429186:	(bad)  
  429187:	dec    DWORD PTR [edi-0xf0085de]
  42918d:	inc    DWORD PTR [eax]
  42918f:	int3   
  429190:	add    BYTE PTR [esi],bl
  429192:	or     edi,edi
  429194:	inc    ebp
  429195:	(bad)  
  429196:	inc    DWORD PTR [eax]
  429198:	call   0xccc61152
  42919d:	mov    DWORD PTR [eax],eax
  42919f:	dec    DWORD PTR [edx]
  4291a1:	fs cmp ah,cl
  4291a4:	fld    DWORD PTR [eax]
  4291a6:	add    bh,bh
  4291a8:	push   ebp
  4291a9:	call   0x1d157d
  4291ae:	inc    DWORD PTR [ebx+0x72a0e]
  4291b4:	ins    BYTE PTR es:[edi],dx
  4291b5:	mov    DWORD PTR [eax],eax
  4291b7:	int3   
  4291b8:	adc    edi,DWORD PTR [ecx-0xf80067]
  4291be:	inc    DWORD PTR [eax]
  4291c0:	sbb    al,0xc7
  4291c2:	sbb    BYTE PTR [eax],al
  4291c4:	dec    esi
  4291c5:	int3   
  4291c6:	add    bh,bh
  4291c8:	cmp    BYTE PTR [esi-0x71],0x83
  4291cc:	jne    0x42919a
  4291ce:	inc    DWORD PTR [ebx-0xca9446]
  4291d4:	retf   0xff
  4291d7:	dec    edi
  4291d9:	retf   0xd1
  4291dc:	pop    esp
  4291dd:	(bad)  
  4291de:	(bad)  
  4291df:	(bad)  
  4291e0:	stc    
  4291e1:	and    edx,DWORD PTR [ebx-0xc901]
  4291e7:	add    ah,cl
  4291e9:	int3   
  4291ea:	int3   
  4291eb:	int3   
  4291ec:	int3   
  4291ed:	int3   
  4291ee:	int3   
  4291ef:	int3   
  4291f0:	add    esp,0xffffffff
  4291f3:	(bad)  
  4291f4:	call   FWORD PTR [edi-0x8ffff3b]
  4291fa:	sbb    DWORD PTR [ebp+0x9ed600],0xffffffff
  429201:	sti    
  429202:	add    BYTE PTR [ebx],ah
  429204:	add    BYTE PTR [ebp-0x5a330044],dh
  42920a:	add    BYTE PTR [edx+0x1f0ff],dl
  429210:	add    al,al
  429212:	add    BYTE PTR [ecx+0x212eff],bh
  429218:	mov    DWORD PTR [edi-0x1],ebp
  42921b:	loope  0x42921c
  42921d:	add    BYTE PTR [ecx-0x1],dh
  429220:	call   FWORD PTR [eax]
  429222:	xor    DWORD PTR [edi+edi*8],0x3
  429226:	mov    ebp,0xcc77cc89
  42922b:	pop    edi
  42922c:	sbb    DWORD PTR [edi+0x13ffffab],0xffffffcc
  429233:	(bad)  
  429234:	inc    DWORD PTR [edi-0x2cff762a]
  42923a:	add    DWORD PTR [edx],0xffffffff
  42923d:	js     0x429215
  42923f:	(bad)  
  429240:	dec    DWORD PTR [eax+0x0]
  429243:	jno    0x429211
  429245:	rcr    dh,1
  429247:	add    bh,bh
  429249:	cli    
  42924a:	add    cl,cl
  42924c:	mov    DWORD PTR [edi-0x6e],edi
  42924f:	add    BYTE PTR [ecx-0xd6ff54],cl
  429255:	jns    0x42923a
  429257:	dec    esp
  429259:	adc    bh,bh
  42925b:	test   DWORD PTR [eax],0xff001578
  429261:	mov    esp,0x638944ff
  429266:	pop    es
  429267:	inc    DWORD PTR [eax]
  429269:	js     0x429237
  42926b:	scas   eax,DWORD PTR es:[edi]
  42926c:	add    BYTE PTR [eax+0x50],dl
  42926f:	add    bh,bh
  429271:	pop    esp
  429272:	add    BYTE PTR [edi+0xa3dfff],bl
  429278:	(bad)  
  429279:	mov    ecx,0x7b00d500
  42927e:	pop    ecx
  42927f:	inc    DWORD PTR [eax]
  429281:	int3   
  429282:	add    BYTE PTR [ebx-0x21d27d],ah
  429288:	add    BYTE PTR [ebp-0x77],bl
  42928b:	test   edi,edi
  42928d:	dec    ecx
  42928e:	out    0xcc,eax
  429290:	add    BYTE PTR [ecx-0x1],dh
  429293:	xor    eax,0x838dc000
  429298:	add    BYTE PTR [edi+edi*8-0x6b797658],bh
  42929f:	(bad)  
  4292a0:	(bad)  
  4292a1:	mov    esi,0xa600a0ff
  4292a6:	into   
  4292a7:	add    bh,bh
  4292a9:	outs   dx,BYTE PTR ds:[esi]
  4292aa:	push   DWORD PTR [esi-0xc28000]
  4292b0:	adc    DWORD PTR [edi-0x2b00ca77],0xffffff9a
  4292b7:	add    BYTE PTR [ebx-0x7c120006],al
  4292bd:	repz bound ecx,QWORD PTR [ecx-0x30002100]
  4292c4:	adc    edx,0x51
  4292c7:	add    BYTE PTR [ecx+0x6b89e6],cl
  4292cd:	loopne 0x4292dc
  4292cf:	int3   
  4292d0:	int3   
  4292d1:	adc    al,0x0
  4292d3:	mov    ds:0xcc37c4ff,eax
  4292d8:	int3   
  4292d9:	(bad)  
  4292da:	dec    DWORD PTR [edi]
  4292dc:	int3   
  4292dd:	sub    al,0x97
  4292df:	cmp    edi,0xffffffa9
  4292e2:	and    DWORD PTR [ebp-0x1],0x29
  4292e6:	jp     0x4292b4
  4292e8:	add    BYTE PTR [ebx-0x1],dl
  4292eb:	fwait
  4292ec:	(bad)  
  4292ed:	inc    DWORD PTR [esi-0xb6ff01]
  4292f3:	retf   
  4292f4:	call   FWORD PTR [edx+edx*4]
  4292f7:	int3   
  4292f8:	add    BYTE PTR [ebp+0x11ffb2cc],ch
  4292fe:	add    DWORD PTR fs:[ebx+0x25ff27],0x42
  429306:	dec    edx
  429307:	add    bh,bh
  429309:	pusha  
  42930a:	xor    ebx,0xffffffff
  42930d:	sbb    al,0x75
  42930f:	add    bh,bh
  429311:	inc    eax
  429312:	add    BYTE PTR [edx],ch
  429314:	mov    DWORD PTR [edi+ebx*1+0xcbffff],ebx
  42931b:	add    BYTE PTR [bx+di],ch
  42931e:	inc    ecx
  42931f:	add    ah,cl
  429321:	pop    eax
  429322:	(bad)  
  429323:	(bad)  
  429325:	add    eax,0x71ff008b
  42932a:	inc    eax
  42932c:	add    dl,ah
  42932e:	pop    ebx
  42932f:	inc    DWORD PTR [ebx-0xc5ff56]
  429335:	mov    al,0x82
  429337:	add    BYTE PTR [eax],al
  429339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42933a:	push   eax
  42933c:	add    BYTE PTR [edi],bh
  42933e:	pop    edi
  42933f:	add    BYTE PTR [ebx-0x11ff40],al
  429345:	mov    cl,0x5e
  429347:	cmp    edi,0xffffff8e
  42934a:	dec    ebp
  42934c:	(bad)  
  42934d:	jmp    0x8ff:0x40008381
  429354:	add    BYTE PTR [ebp-0xf],bl
  429357:	(bad)  
  429358:	dec    DWORD PTR [ecx+0x0]
  42935b:	jae    0x42935c
  42935d:	test   al,0x87
  42935f:	inc    DWORD PTR [eax]
  429361:	iret   
  429362:	add    BYTE PTR [edi+edi*8+0x18],cl
  429366:	mov    DWORD PTR [ebx-0x6c7c1b7d],eax
  42936c:	jmp    DWORD PTR [ecx+0x78ffffd4]
  429372:	dec    DWORD PTR [ebx-0xc2fd77]
  429378:	add    ch,dh
  42937a:	inc    DWORD PTR [edi-0x77]
  42937d:	sti    
  42937e:	(bad)  
  42937f:	int3   
  429380:	adc    ebx,0xffffffff
  429383:	fld    QWORD PTR [eax]
  429385:	test   BYTE PTR [ebx+0x0],bh
  429388:	add    al,dl
  42938a:	inc    DWORD PTR [esp+ecx*8-0x4c]
  42938e:	jl     0x429313
  429390:	dec    DWORD PTR [edx-0x1a009c01]
  429396:	mov    edx,0xff770089
  42939b:	cld    
  42939c:	push   ebx
  42939e:	lods   eax,DWORD PTR ds:[esi]
  42939f:	add    ah,cl
  4293a1:	mov    esp,0xe900d000
  4293a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293a7:	inc    DWORD PTR [ebx-0x260028]
  4293ad:	cs ja  0x4293b0
  4293b0:	add    BYTE PTR [edi+0x6affd589],ah
  4293b6:	pop    ebp
  4293b7:	add    bh,bh
  4293b9:	stos   DWORD PTR es:[edi],eax
  4293ba:	jmp    esi
  4293bc:	add    BYTE PTR [esi-0x347c7c24],cl
  4293c2:	(bad)  
  4293c3:	(bad)  
  4293c4:	inc    DWORD PTR [ecx]
  4293c6:	(bad)  
  4293c7:	inc    DWORD PTR [eax]
  4293c9:	dec    esi
  4293ca:	add    BYTE PTR [esi-0x9e8700],bl
  4293d0:	call   DWORD PTR [edx+0x34ff4e00]
  4293d6:	lahf   
  4293d7:	add    BYTE PTR [ebx-0x7c34ffac],al
  4293dd:	push   ebp
  4293de:	ud0    eax,DWORD PTR [eax]
  4293e1:	sub    al,BYTE PTR [eax]
  4293e3:	xor    al,BYTE PTR [eax]
  4293e5:	mov    al,ds:0xb6ff00c6
  4293ea:	jmp    FWORD PTR [esi]
  4293ec:	or     DWORD PTR [eax+0x5f89ffe1],0xffffffff
  4293f3:	pop    edi
  4293f4:	(bad)  
  4293f5:	jmp    0x429387
  4293f7:	add    BYTE PTR [eax],al
  4293f9:	push   ebx
  4293fa:	dec    DWORD PTR [esi-0x76c9da77]
  429400:	call   DWORD PTR [ecx-0x1176c801]
  429406:	ja     0x42938b
  429408:	add    BYTE PTR [ebp+0x1eff9900],dl
  42940e:	daa    
  42940f:	(bad)  
  429410:	(bad)  
  429411:	jnp    0x429396
  429413:	pop    es
  429414:	(bad)  
  429415:	mov    ebp,0x4e000019
  42941a:	add    dh,dh
  42941c:	call   FWORD PTR [esi]
  42941e:	out    0xcc,al
  429420:	push   DWORD PTR [eax+0xcff4800]
  429426:	xchg   DWORD PTR [eax],eax
  429428:	(bad)  
  429429:	mov    edi,0x4eff5000
  42942e:	sbb    eax,0x190089
  429433:	ret    
  429434:	dec    DWORD PTR [edi+ebp*8-0x4bff77]
  42943b:	scas   eax,DWORD PTR es:[edi]
  42943c:	(bad)  
  42943d:	call   edx
  42943f:	inc    DWORD PTR [eax]
  429441:	out    0xff,eax
  429443:	popf   
  429444:	call   FWORD PTR [edx-0x280000cd]
  42944a:	inc    DWORD PTR [ebx+eax*4+0x8806]
  429451:	inc    esi
  429452:	add    ah,bl
  429454:	add    BYTE PTR [esi],ah
  429456:	push   ss
  429457:	(bad)  
  429458:	call   FWORD PTR [ecx-0x1]
  42945b:	jmp    0x89e21c5f
  429460:	add    BYTE PTR [eax],bh
  429462:	int3   
  429463:	and    al,0xcc
  429465:	popf   
  429466:	ror    ah,1
  429468:	add    BYTE PTR [ebx+0x53830e00],dh
  42946e:	rol    DWORD PTR [eax],cl
  429470:	add    BYTE PTR [ebp-0x3d00bf7d],bl
  429476:	dec    eax
  429477:	add    bh,bh
  429479:	in     eax,0x0
  42947b:	mov    dl,0x83
  42947d:	push   ecx
  42947e:	xchg   edi,eax
  42947f:	add    DWORD PTR [eax],0xffffffc3
  429482:	call   FWORD PTR [edi]
  429484:	add    BYTE PTR ds:0x13830065,ch
  42948a:	(bad)  
  42948b:	fcmovne st,st(4)
  42948d:	or     DWORD PTR [edx-0x33bd3400],ebp
  429493:	cld    
  429494:	add    ah,cl
  429496:	adc    eax,DWORD PTR [eax]
  429498:	add    BYTE PTR [ebx+0x0],bh
  42949b:	cwde   
  42949c:	or     DWORD PTR [esi+edx*8+0x63ffff],0xffffffd4
  4294a4:	push   DWORD PTR [edx+0x4c00ff24]
  4294aa:	sub    DWORD PTR [esi-0x7c8d9601],0xffffffff
  4294b1:	cmp    edi,edi
  4294b3:	or     DWORD PTR [ebx-0x76007334],eax
  4294b9:	jae    0x429487
  4294bb:	pop    eax
  4294bc:	add    BYTE PTR ds:0xae8389ed,bh
  4294c2:	add    BYTE PTR [ecx],dl
  4294c4:	int3   
  4294c5:	not    BYTE PTR [edx+0x20ff89]
  4294cb:	mov    dh,0xff
  4294cd:	xchg   edx,eax
  4294ce:	inc    eax
  4294cf:	(bad)  
  4294d0:	(bad)  
  4294d1:	in     eax,dx
  4294d2:	add    BYTE PTR [edi+edi*8-0x7c768af8],cl
  4294d9:	add    al,BYTE PTR [eax]
  4294db:	mov    esi,0x1e5600
  4294e0:	dec    DWORD PTR [esp+ecx*8-0x79]
  4294e4:	(bad)  
  4294e5:	call   0x4c4218e7
  4294ea:	call   DWORD PTR [ebx]
  4294ec:	int3   
  4294ed:	scas   eax,DWORD PTR es:[edi]
  4294ee:	into   
  4294ef:	add    BYTE PTR [eax],al
  4294f1:	jle    0x4294f3
  4294f3:	push   eax
  4294f4:	jmp    FWORD PTR [ebx+edi*1-0xdb0001]
  4294fb:	and    edi,edi
  4294fd:	pop    edi
  4294fe:	mov    ch,0x0
  429500:	add    BYTE PTR [ecx-0x34],dl
  429503:	jns    0x429488
  429505:	or     al,0x2
  429507:	add    BYTE PTR [ebx-0xee00fa],al
  42950d:	xchg   esp,eax
  42950e:	idiv   edi
  429510:	push   DWORD PTR [eax+0x47ffbb00]
  429516:	inc    edi
  429517:	add    bh,bh
  429519:	ret    0x8cff
  42951c:	int3   
  42951d:	lods   al,BYTE PTR ds:[esi]
  42951e:	imul   edi,edi,0x48328ff
  429524:	inc    DWORD PTR [edi-0x48ff33ec]
  42952a:	push   DWORD PTR [esi-0x7614cc01]
  429530:	sub    esi,0xffffffff
  429533:	(bad)  
  429535:	adc    ebx,DWORD PTR [esi-0x66007d]
  42953b:	jae    0x83cc8b76
  429541:	clc    
  429542:	int3   
  429543:	dec    DWORD PTR [bp-0x5b]
  429547:	or     DWORD PTR [ecx+0x7dffda],0x2e
  42954e:	pop    eax
  42954f:	(bad)  
  429550:	(bad)  
  429551:	in     eax,dx
  429552:	add    al,cl
  429554:	dec    DWORD PTR [edx+edi*4+0x0]
  429558:	mov    DWORD PTR [ecx],esi
  42955a:	(bad)  
  42955b:	cli    
  42955c:	mov    DWORD PTR [ebp+0x5affffa0],esi
  429562:	(bad)  
  429563:	(bad)  
  429565:	cmp    DWORD PTR [esi-0x980034],ecx
  42956b:	jp     0x429539
  42956d:	mov    ebp,0xc6ffffc9
  429572:	jmp    FWORD PTR [edi+0xf3c800]
  429578:	int3   
  429579:	cmc    
  42957a:	mov    DWORD PTR [eax-0x398e01],ebx
  429580:	add    BYTE PTR [edx+0x0],ch
  429583:	and    edi,edi
  429585:	jnp    0x429593
  429587:	add    bh,bh
  429589:	sti    
  42958a:	add    al,bh
  42958c:	dec    edi
  42958e:	sbb    bh,bh
  429590:	push   DWORD PTR [esi-0x34]
  429593:	jae    0x429594
  429595:	std    
  429596:	out    dx,al
  429597:	(bad)  
  429598:	jmp    FWORD PTR [ebx-0x24ffcc01]
  42959e:	push   esp
  42959f:	inc    DWORD PTR [eax]
  4295a1:	sub    eax,0xf2ff4983
  4295a6:	pop    ds
  4295a7:	add    bh,bh
  4295a9:	retf   0x8c83
  4295ac:	add    BYTE PTR [edi-0x4f007645],ch
  4295b2:	add    BYTE PTR [esi+0x0],al
  4295b5:	mov    al,ds:0x30ff00f2
  4295ba:	inc    DWORD PTR [ecx+0x2f5100]
  4295c0:	add    BYTE PTR [edi+0x7bff78ff],dl
  4295c6:	mov    dh,0x89
  4295c8:	add    BYTE PTR [edx+0x67ff26ff],bl
  4295ce:	ss cmp edi,0xffffffa1
  4295d2:	add    dl,bl
  4295d4:	add    BYTE PTR [edx],bl
  4295d6:	pop    esp
  4295d7:	mov    DWORD PTR [eax],eax
  4295d9:	sbb    edi,edi
  4295db:	add    BYTE PTR [eax],al
  4295dd:	pop    esi
  4295de:	sbb    eax,0xff35ff83
  4295e3:	mov    esi,0x61f0ff
  4295e8:	add    BYTE PTR [ebx],bh
  4295ea:	add    ah,dh
  4295ec:	int3   
  4295ed:	jo     0x42962c
  4295ef:	add    BYTE PTR [eax],al
  4295f1:	pusha  
  4295f2:	add    BYTE PTR [edi-0x34],bl
  4295f5:	mov    ecx,0x31ff8948
  4295fa:	add    BYTE PTR [ebx-0x1],bh
  4295fd:	mov    al,ds:0x1900ffba
  429602:	mov    DWORD PTR [ecx],ebx
  429604:	inc    DWORD PTR [esi]
  429606:	fld    QWORD PTR [eax]
  429608:	add    BYTE PTR [edx+0x0],cl
  42960b:	sbb    eax,DWORD PTR [eax]
  42960d:	cmp    DWORD PTR [eax-0xc87d00],0x2600cc75
  429617:	add    bh,bh
  429619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42961a:	jmp    DWORD PTR [eax]
  42961c:	call   DWORD PTR [ebx+ebp*4-0x927c7d]
  429623:	mov    ds:0x23fc00,al
  429628:	mov    DWORD PTR [ebx-0x7d],edi
  42962b:	rol    BYTE PTR [eax],1
  42962d:	loop   0x4295f3
  42962f:	(bad)  
  429630:	dec    edx
  429632:	int3   
  429633:	sahf   
  429634:	add    BYTE PTR [ebx-0x3000ffbd],ah
  42963a:	jmp    FWORD PTR [edi+edi*8+0x44f0]
  429641:	mov    eax,ds:0xc8831ecc
  429646:	push   ebx
  429647:	dec    esp
  429649:	cld    
  42964a:	call   DWORD PTR [edx+0xb3dc83]
  429650:	add    ah,cl
  429652:	int3   
  429653:	jno    0x429655
  429655:	jp     0x42960a
  429657:	inc    DWORD PTR [eax]
  429659:	push   ecx
  42965a:	add    BYTE PTR [esi-0x7c3f6901],dh
  429660:	mov    DWORD PTR [ebx+eax*4-0x71],ebp
  429664:	(bad)  
  429665:	cld    
  429666:	test   eax,0x23ffff
  42966b:	sub    al,BYTE PTR [eax]
  42966d:	pop    ss
  42966e:	das    
  42966f:	dec    DWORD PTR [ecx-0xf1ff68]
  429675:	cli    
  429676:	mov    bh,bh
  429678:	cmp    ebx,0xffffffff
  42967b:	mov    ah,0x89
  42967d:	push   edx
  42967e:	in     al,0x0
  429680:	sub    esp,0xffffffff
  429683:	pop    ds
  429684:	jmp    FWORD PTR [eax+0x3b]
  429687:	mov    edi,edi
  429689:	rol    DWORD PTR [ebx+0x2661ff25],cl
  42968f:	(bad)  
  429690:	push   DWORD PTR [ebx+0x75cc5e00]
  429696:	(bad)  
  429698:	add    BYTE PTR [ecx+0x5b003b00],ah
  42969e:	(bad)  
  4296a0:	(bad)  
  4296a1:	jnp    0x4296a2
  4296a3:	cmp    bh,bh
  4296a5:	daa    
  4296a6:	pop    ecx
  4296a7:	(bad)  
  4296a8:	jmp    DWORD PTR [eax]
  4296aa:	adc    DWORD PTR [esi],0xffffff89
  4296ad:	xchg   ebx,eax
  4296ae:	xor    al,0xff
  4296b0:	push   ecx
  4296b2:	add    BYTE PTR [edx-0x7ce33c00],dl
  4296b8:	add    BYTE PTR [ebx-0x1],dh
  4296bb:	aam    0xff
  4296bd:	dec    esp
  4296be:	(bad)  
  4296bf:	inc    DWORD PTR [eax]
  4296c1:	and    edi,edi
  4296c3:	test   al,0xcc
  4296c5:	outs   dx,BYTE PTR ds:[esi]
  4296c6:	xor    eax,0x55ff89
  4296cb:	jns    0x4296cd
  4296cd:	mov    eax,ds:0x17008311
  4296d2:	add    dl,dl
  4296d4:	jmp    DWORD PTR [ebx+0x1900ff5b]
  4296da:	call   eax
  4296dc:	push   DWORD PTR [edx-0x63]
  4296df:	inc    DWORD PTR [eax]
  4296e1:	cmp    eax,0x2ff24ff
  4296e6:	leave  
  4296e7:	add    BYTE PTR [eax],al
  4296e9:	outs   dx,BYTE PTR ds:[esi]
  4296ea:	(bad)  
  4296eb:	cmp    bh,bh
  4296ed:	xchg   ebp,eax
  4296ee:	jne    0x4296ef
  4296f0:	call   FWORD PTR ds:0xa78989ff
  4296f6:	rol    BYTE PTR [eax],0xcc
  4296f9:	xor    cl,BYTE PTR [ecx-0x5b29ff34]
  4296ff:	inc    DWORD PTR [ebx-0x7cfc00a8]
  429705:	cmp    BYTE PTR [eax],ch
  429707:	(bad)  
  429708:	call   DWORD PTR [ebx-0x34]
  42970b:	nop
  42970c:	jmp    edi
  42970e:	out    dx,al
  42970f:	add    bh,bh
  429711:	pop    esi
  429712:	jmp    FWORD PTR [edx-0x1]
  429715:	shl    DWORD PTR [edi],cl
  429717:	add    bh,bh
  429719:	outs   dx,BYTE PTR ds:[esi]
  42971a:	sbb    DWORD PTR [edx+0x8c9200],0xffffff89
  429721:	pop    ds
  429722:	mov    DWORD PTR [esi-0x34],edi
  429725:	test   DWORD PTR [eax-0xfcff77],ebp
  42972b:	jno    0x42972c
  42972d:	lahf   
  42972e:	(bad)  
  42972f:	int3   
  429730:	dec    DWORD PTR [edi-0x34]
  429733:	sub    al,0x0
  429735:	inc    ebp
  429736:	ds (bad) 
  429738:	call   FWORD PTR ds:0x4d006dff
  42973e:	lds    eax,FWORD PTR [eax]
  429740:	add    BYTE PTR [edi+edi*8-0x6a],cl
  429744:	int3   
  429745:	push   ds
  429746:	mov    eax,DWORD PTR [eax]
  429748:	int3   
  429749:	jmp    0x1841bc4e
  42974e:	loop   0x42974f
  429750:	add    al,al
  429752:	add    BYTE PTR [edi+edi*8+0xfcd4],ah
  429759:	nop
  42975a:	add    BYTE PTR [esi-0x1],cl
  42975d:	or     bh,ah
  42975f:	or     esp,0xffffffef
  429762:	add    BYTE PTR [esi],dl
  429764:	call   FWORD PTR [esi]
  429766:	cmp    edi,edi
  429768:	call   FWORD PTR [edi+edi*8]
  42976b:	push   ss
  42976c:	xor    ebp,0x70
  42976f:	add    bh,bh
  429771:	(bad)  
  429772:	push   esi
  429774:	and    DWORD PTR [eax],0x60
  429777:	(bad)  
  429778:	inc    DWORD PTR [eax]
  42977a:	jmp    FWORD PTR [eax-0x33811900]
  429780:	mov    eax,ebx
  429782:	(bad)  
  429783:	jp     0x429785
  429785:	jb     0x429776
  429787:	(bad)  
  429788:	call   FWORD PTR [eax-0x1]
  42978b:	stos   BYTE PTR es:[edi],al
  42978c:	add    BYTE PTR [eax],cl
  42978e:	leave  
  42978f:	add    BYTE PTR [ecx-0x33710023],cl
  429795:	dec    edi
  429796:	test   eax,0xcc59ffff
  42979b:	std    
  42979c:	add    ch,ah
  42979e:	mov    ah,0xff
  4297a0:	(bad)  
  4297a1:	cmp    DWORD PTR [eax],eax
  4297a3:	sbb    bh,bh
  4297a5:	cmp    bl,BYTE PTR [edi+edi*8-0x1]
  4297a9:	or     eax,DWORD PTR [eax]
  4297ab:	and    al,BYTE PTR [ebx-0xcaa4]
  4297b1:	outs   dx,BYTE PTR ds:[esi]
  4297b2:	call   DWORD PTR [eax-0x1]
  4297b5:	leave  
  4297b6:	sar    edi,0x83
  4297b9:	iret   
  4297ba:	dec    DWORD PTR [ebx+0xb29f83]
  4297c0:	call   FWORD PTR [ecx+0x3eff3aff]
  4297c6:	sbb    BYTE PTR [eax],al
  4297c8:	(bad)  
  4297c9:	fild   DWORD PTR [eax]
  4297cb:	jmp    0x92ff:0xcc69a8ff
  4297d2:	push   esp
  4297d4:	adc    DWORD PTR [eax-0x1a7c33cb],0x0
  4297db:	push   esp
  4297dc:	int3   
  4297dd:	pop    ds
  4297de:	add    DWORD PTR [ebx+0x183bd00],0xffffffff
  4297e5:	adc    ch,bl
  4297e7:	add    DWORD PTR [eax],0xffffff86
  4297ea:	inc    DWORD PTR [eax-0xaf00]
  4297f0:	call   DWORD PTR [ecx+0x72009e00]
  4297f6:	ud0    ecx,DWORD PTR [ecx-0xf1ff05]
  4297fd:	xchg   esp,eax
  4297fe:	push   edx
  4297ff:	int3   
  429800:	call   FWORD PTR [esp+ecx*8+0x4be0ff57]
  429807:	(bad)  
  429808:	jmp    FWORD PTR [eax+eax*1-0x65]
  42980c:	adc    esp,0xd
  42980f:	mov    edi,edi
  429811:	jmp    0x30cbab99
  429816:	pop    ebp
  429817:	add    bh,bh
  429819:	xor    BYTE PTR [ebx+0x789cff35],al
  42981f:	inc    DWORD PTR [eax]
  429821:	pop    es
  429822:	(bad)  
  429823:	fld    QWORD PTR [eax]
  429825:	jmp    0x429817
  429827:	(bad)  
  429828:	(bad)  
  429829:	jp     0x42982a
  42982b:	ror    BYTE PTR [ecx+0x833c32],0x10
  429832:	mov    DWORD PTR [ecx-0x1],ebx
  429835:	xchg   bh,ch
  429837:	inc    DWORD PTR [eax]
  429839:	out    0xff,al
  42983b:	cdq    
  42983c:	add    DWORD PTR [eax-0x45],0xffffffff
  429840:	add    BYTE PTR [ebp-0x34],cl
  429843:	mov    edi,edi
  429845:	test   eax,0x1f000066
  42984a:	mov    edx,esi
  42984c:	inc    DWORD PTR [ebx-0x11ff0004]
  429852:	add    bh,dh
  429854:	push   edi
  429856:	or     edi,edi
  429858:	add    al,dh
  42985a:	call   FWORD PTR [esi+0xc96600]
  429860:	(bad)  
  429861:	out    dx,al
  429862:	int3   
  429863:	lock mov esp,ebp
  429866:	sub    al,0x0
  429868:	add    BYTE PTR [edi+edi*8-0x496a7cb5],bl
  42986f:	add    bh,bh
  429871:	mov    ebx,0xfdff4e83
  429876:	cmp    BYTE PTR [eax],al
  429878:	(bad)  
  429879:	jg     0x4297fe
  42987b:	stos   DWORD PTR es:[edi],eax
  42987c:	add    BYTE PTR [ecx+0x3a8300d1],bh
  429882:	call   FWORD PTR [edi]
  429884:	inc    DWORD PTR [ebx+edi*8-0xc50000]
  42988b:	repnz int3 
  42988d:	mov    BYTE PTR [edx-0x7c0a0100],dl
  429893:	test   al,0xff
  429895:	into   
  429896:	int3   
  429897:	add    bh,bh
  429899:	(bad)  
  42989a:	jmp    DWORD PTR [eax-0x1]
  42989d:	mov    edx,0x6f83ffc3
  4298a2:	jmp    FWORD PTR [ecx+0x0]
  4298a5:	loop   0x429860
  4298a7:	add    bh,bh
  4298a9:	sar    edi,cl
  4298ab:	hlt    
  4298ac:	(bad)  
  4298ad:	out    dx,eax
  4298ae:	xor    ah,cl
  4298b0:	int3   
  4298b1:	add    al,0xff
  4298b3:	push   ds
  4298b4:	int3   
  4298b5:	sub    al,0xb0
  4298b7:	add    DWORD PTR [ebx+0x158302],0x35
  4298be:	into   
  4298bf:	(bad)  
  4298c0:	dec    DWORD PTR [edx+0x6005fff]
  4298c6:	and    eax,DWORD PTR [eax]
  4298c8:	dec    edi
  4298ca:	add    ch,bh
  4298cc:	add    BYTE PTR [esi+0x4d00ff20],bl
  4298d2:	add    BYTE PTR [eax-0x52d600],ch
  4298d8:	add    BYTE PTR [esi+0x0],ch
  4298db:	xor    al,0xcc
  4298dd:	loopne 0x4298a4
  4298df:	dec    esp
  4298e1:	call   0xcc5d3e5
  4298e6:	jae    0x429871
  4298e8:	int3   
  4298e9:	dec    edi
  4298ea:	add    BYTE PTR [edi+edi*8],bh
  4298ed:	pop    edx
  4298ee:	pop    ebp
  4298ef:	inc    DWORD PTR [eax]
  4298f1:	mov    edi,0x7389c3ff
  4298f6:	sahf   
  4298f7:	(bad)  
  4298f8:	inc    DWORD PTR [edx+0x54003a00]
  4298fe:	fcos   
  429900:	sbb    ebx,0xffffffff
  429903:	data16 int3 
  429905:	and    DWORD PTR [ecx],ebx
  429907:	add    DWORD PTR [eax],0xfffffff4
  42990a:	call   FWORD PTR [edi+0xac583]
  429910:	int3   
  429911:	mov    edi,edi
  429913:	pop    ecx
  429914:	dec    eax
  429916:	icebp  
  429917:	cmp    edi,0x55
  42991a:	add    BYTE PTR [esi],ah
  42991c:	add    dh,dl
  42991e:	call   0xff98:0xff7effcc
  429925:	inc    esi
  429926:	les    eax,FWORD PTR [eax]
  429928:	add    BYTE PTR [ebp+0x0],bh
  42992b:	xchg   edx,eax
  42992c:	add    ah,al
  42992e:	lea    eax,[eax]
  429930:	adc    DWORD PTR ds:0x3fcca0ff,0x2d
  429937:	or     esp,0xffffff88
  42993a:	add    BYTE PTR [edx],ch
  42993c:	jmp    FWORD PTR [edx]
  42993e:	sub    edi,edi
  429940:	call   ecx
  429942:	call   FWORD PTR [esi+0xe37983]
  429948:	(bad)  
  429949:	fdiv   st(7),st
  42994b:	scas   al,BYTE PTR es:[edi]
  42994c:	jmp    DWORD PTR [ecx-0x31]
  42994f:	inc    DWORD PTR [eax]
  429951:	push   ss
  429952:	inc    DWORD PTR [eax]
  429954:	add    BYTE PTR [esi-0x3f760068],bl
  42995a:	sbb    DWORD PTR [ecx],0xffffff83
  42995d:	push   esi
  42995e:	std    
  42995f:	add    DWORD PTR [eax],0xffffffb2
  429962:	(bad)  
  429963:	jmp    0xd26867
  429968:	int3   
  429969:	scas   eax,DWORD PTR es:[edi]
  42996a:	jmp    DWORD PTR [eax+0x0]
  42996d:	enter  0xe,0xff
  429971:	lods   eax,DWORD PTR ds:[esi]
  429972:	or     DWORD PTR [ebp+0x0],0x2f
  429976:	mov    al,ds:0x8904ffff
  42997b:	or     al,0xff
  42997d:	and    al,0x5e
  42997f:	add    DWORD PTR [eax],0xffffff96
  429982:	dec    edi
  429984:	(bad)  
  429985:	mov    ecx,0xd8ffff4b
  42998a:	jmp    DWORD PTR [ebp+0x0]
  42998d:	or     ah,BYTE PTR [ecx-0x1]
  429990:	inc    DWORD PTR [edx]
  429992:	push   ebp
  429994:	add    BYTE PTR [ebp+0x54],ah
  429997:	add    ah,cl
  429999:	(bad)  
  42999a:	add    al,dl
  42999c:	add    BYTE PTR [ecx-0x22],dl
  42999f:	cmp    edi,0xffffff9e
  4299a2:	or     DWORD PTR [eax+eax*1],0x62
  4299a6:	stc    
  4299a7:	inc    DWORD PTR [eax]
  4299a9:	ins    BYTE PTR es:[edi],dx
  4299aa:	(bad)  
  4299ab:	call   0xff5aebb0
  4299b0:	dec    DWORD PTR [edi-0x24ff3c01]
  4299b6:	cmp    DWORD PTR [eax],eax
  4299b8:	mov    DWORD PTR [edx],esp
  4299ba:	(bad)  
  4299bb:	mov    edx,0xffb464ff
  4299c0:	(bad)  
  4299c1:	fdivr  st,st(7)
  4299c3:	int3   
  4299c4:	push   ecx
  4299c6:	repnz (bad) 
  4299c8:	(bad)  
  4299c9:	fild   WORD PTR [eax]
  4299cb:	jbe    0x4299cc
  4299cd:	adc    ah,BYTE PTR [esi-0x660001]
  4299d3:	mov    DWORD PTR [eax],0xffccb21b
  4299d9:	jns    0x4299db
  4299db:	cmp    ecx,esp
  4299dd:	mov    esi,0x8f830043
  4299e2:	sbb    DWORD PTR [edi-0x2bf877],0xffffffff
  4299e9:	(bad)  
  4299ea:	int3   
  4299eb:	outs   dx,BYTE PTR ds:[esi]
  4299ec:	(bad)  
  4299ed:	jmp    DWORD PTR [eax+0x0]
  4299f0:	call   ebx
  4299f2:	call   edx
  4299f4:	push   edx
  4299f6:	mov    ebp,0x839f8300
  4299fb:	or     bh,bh
  4299fd:	mov    esp,0x7c0000a0
  429a02:	jmp    DWORD PTR ds:0x837e7eff
  429a08:	add    bl,ch
  429a0a:	mov    DWORD PTR [ebx],ebp
  429a0c:	and    DWORD PTR [eax],0x2d
  429a0f:	inc    DWORD PTR [eax]
  429a11:	push   eax
  429a12:	push   DWORD PTR [esi-0x35a501]
  429a18:	add    ch,dh
  429a1a:	add    DWORD PTR [ecx],0xffffffff
  429a1d:	pop    ss
  429a1e:	add    eax,0x51ffcc
  429a23:	cmp    al,0xff
  429a25:	pushf  
  429a26:	fiadd  DWORD PTR [ebx-0x26ffa800]
  429a2c:	call   DWORD PTR [ebp-0x2700ff19]
  429a32:	(bad)  
  429a33:	jg     0x429a34
  429a35:	in     al,dx
  429a36:	mov    dh,0xff
  429a38:	dec    DWORD PTR [ebp+0x6ffb6ff]
  429a3e:	call   0xa:0x9b00ff
  429a45:	mov    ah,0x80
  429a47:	inc    DWORD PTR [eax]
  429a49:	mov    al,ds:0x3783a3ff
  429a4e:	jne    0x429a4f
  429a50:	dec    ecx
  429a52:	add    bl,bl
  429a54:	add    BYTE PTR [esi-0x6],ah
  429a57:	add    BYTE PTR [ecx-0xcf7cad],cl
  429a5d:	(bad)  
  429a5e:	and    BYTE PTR [ecx-0x3331100],cl
  429a64:	(bad)  
  429a65:	mov    edx,0x5eff0059
  429a6a:	(bad)  
  429a6b:	inc    BYTE PTR [ebx-0x927d]
  429a71:	and    al,BYTE PTR [ebx+0x11dd0086]
  429a77:	(bad)  
  429a78:	call   DWORD PTR [ecx+0x48cc1800]
  429a7e:	dec    esp
  429a7f:	(bad)  
  429a80:	inc    DWORD PTR [eax+eax*1+0x396892d]
  429a87:	inc    DWORD PTR [eax]
  429a89:	adc    eax,0x4898a00
  429a8e:	outs   dx,BYTE PTR ds:[esi]
  429a8f:	inc    DWORD PTR [ebx-0x76f87cbc]
  429a95:	(bad)  
  429a96:	push   cs
  429a97:	add    ah,cl
  429a99:	mov    es,WORD PTR [ebx-0x207d0017]
  429a9f:	int3   
  429aa0:	add    DWORD PTR [eax-0xf7c0101],0xffffffe9
  429aa7:	cmp    edi,0xffffffcf
  429aaa:	inc    DWORD PTR [eax-0x8f3d7d]
  429ab0:	add    bl,cl
  429ab2:	add    BYTE PTR [esi],cl
  429ab4:	dec    DWORD PTR [eax+0x10]
  429ab7:	inc    DWORD PTR [eax]
  429ab9:	push   es
  429aba:	call   DWORD PTR [ebp-0x7d]
  429abd:	pop    esp
  429abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429abf:	add    bh,bh
  429ac1:	add    bh,bh
  429ac3:	gs mov esp,ecx
  429ac6:	push   es
  429ac7:	inc    DWORD PTR [eax]
  429ac9:	adc    bh,bh
  429acb:	dec    ebp
  429acc:	jmp    DWORD PTR [edi+0x7d00fffa]
  429ad2:	add    BYTE PTR [ebx+0xf2a9ff],dl
  429ad8:	xor    edi,0xffffff89
  429adb:	jmp    0x96ce0
  429ae0:	push   DWORD PTR [ebx]
  429ae2:	jmp    FWORD PTR [eax-0xd9a200]
  429ae8:	jmp    FWORD PTR [edi-0x1]
  429aeb:	fadd   QWORD PTR [eax]
  429aed:	xchg   esp,eax
  429aee:	mov    ebx,0x8312ff83
  429af3:	aad    0xff
  429af5:	cmc    
  429af6:	mov    eax,ds:0xb50000
  429afb:	or     BYTE PTR [ecx-0x33004be2],cl
  429b01:	in     al,0xff
  429b03:	sar    bh,0x2a
  429b06:	mov    ecx,0x69ffff
  429b0b:	push   ds
  429b0c:	add    BYTE PTR [eax],dl
  429b0e:	ss (bad) 
  429b10:	dec    DWORD PTR [edi+edi*8]
  429b13:	inc    ebp
  429b14:	push   DWORD PTR [ebx]
  429b16:	add    DWORD PTR [eax],eax
  429b18:	add    BYTE PTR [esi+0x0],bl
  429b1b:	sahf   
  429b1c:	jmp    FWORD PTR [edx]
  429b1e:	test   BYTE PTR [eax],al
  429b20:	add    cl,bh
  429b22:	inc    DWORD PTR ds:0xffddfcff
  429b28:	cmp    esi,0xffffffff
  429b2b:	cmc    
  429b2c:	(bad)  
  429b2d:	cmp    al,0x65
  429b2f:	(bad)  
  429b30:	jmp    DWORD PTR [ebx-0x5aff5d00]
  429b36:	lods   eax,DWORD PTR ds:[esi]
  429b37:	(bad)  
  429b38:	push   DWORD PTR [ebp-0x10007c77]
  429b3e:	jo     0x429b3f
  429b40:	add    BYTE PTR [ebx+0x0],al
  429b43:	fld    QWORD PTR [eax]
  429b45:	push   esi
  429b46:	inc    edx
  429b47:	mov    edi,edi
  429b49:	sub    DWORD PTR [ebx+0xd50ff76],eax
  429b4f:	add    BYTE PTR [ecx-0x334f7c2d],cl
  429b55:	(bad)  [eax-0x1b0000]
  429b5b:	fcos   
  429b5d:	cmc    
  429b5e:	or     bh,bh
  429b60:	sbb    ebp,0xffffffff
  429b63:	or     DWORD PTR [ebx-0xff7d0d],eax
  429b69:	jbe    0x429b6b
  429b6b:	es and ebp,0xffffff9a
  429b6f:	add    bh,bh
  429b71:	popa   
  429b72:	int3   
  429b73:	cmp    eax,0xff6bf400
  429b78:	push   DWORD PTR [ecx]
  429b7a:	adc    eax,0x0
  429b7d:	xchg   edi,eax
  429b7e:	push   es
  429b7f:	inc    DWORD PTR [eax]
  429b81:	inc    edx
  429b82:	jmp    DWORD PTR [eax+0x0]
  429b85:	jl     0x429bdd
  429b87:	add    BYTE PTR [eax],al
  429b89:	push   eax
  429b8a:	mov    esp,edx
  429b8c:	int3   
  429b8d:	ret    0xff5e
  429b90:	(bad)  
  429b91:	mov    edi,0x8e0037ff
  429b96:	xchg   edx,eax
  429b97:	cmp    edi,0x1
  429b9a:	add    BYTE PTR [ebp+0x719300],dh
  429ba0:	(bad)  
  429ba1:	jmp    0x429b2c
  429ba3:	std    
  429ba4:	call   edi
  429ba6:	fild   DWORD PTR [ebx-0x2affc401]
  429bac:	xor    DWORD PTR [edx+edx*1-0x1],0x0
  429bb1:	ror    BYTE PTR [ecx+0x43aff5f],0xff
  429bb8:	inc    edx
  429bba:	add    BYTE PTR [ebx-0x1],bl
  429bbd:	fs xchg ebp,eax
  429bbf:	inc    DWORD PTR [eax]
  429bc1:	rol    BYTE PTR [eax],cl
  429bc3:	and    bh,bh
  429bc5:	push   ds
  429bc6:	sub    bh,bh
  429bc8:	add    BYTE PTR [eax+eax*1+0x58d500c5],ah
  429bcf:	add    bh,bh
  429bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bd2:	mov    DWORD PTR [ecx+0x0],edi
  429bd5:	mov    ds:0x7a83ffcb,eax
  429bda:	(bad)  
  429bdb:	clc    
  429bdc:	dec    DWORD PTR [edx-0x3f]
  429bdf:	or     esp,0x11
  429be2:	cmp    DWORD PTR [edx],0xffffff83
  429be5:	jo     0x429bfe
  429be7:	dec    DWORD PTR [ecx-0x761b00da]
  429bed:	outs   dx,DWORD PTR ds:[esi]
  429bee:	push   ebp
  429bef:	add    BYTE PTR [eax],al
  429bf1:	(bad)  
  429bf4:	push   edi
  429bf6:	push   cs
  429bf7:	mov    DWORD PTR [eax],eax
  429bf9:	push   edi
  429bfa:	add    BYTE PTR [ebx],dh
  429bfc:	call   FWORD PTR [ecx]
  429bfe:	mov    ?,edi
  429c00:	sub    edx,0xffffff83
  429c03:	xlat   BYTE PTR ds:[ebx]
  429c04:	add    BYTE PTR [ecx-0x21],ch
  429c07:	inc    DWORD PTR [eax]
  429c09:	sub    eax,0x95ff24ff
  429c0e:	(bad)  
  429c0f:	inc    DWORD PTR [ebx-0x3600b1]
  429c15:	jg     0x429c3c
  429c17:	inc    DWORD PTR [eax]
  429c19:	xchg   ecx,eax
  429c1a:	add    BYTE PTR [ebp-0x1],ch
  429c1d:	sbb    BYTE PTR [eax],al
  429c1f:	add    BYTE PTR [eax],al
  429c21:	xchg   esp,eax
  429c22:	call   eax
  429c24:	(bad)  
  429c25:	cmp    esi,edi
  429c27:	dec    esp
  429c29:	pop    edi
  429c2a:	jmp    DWORD PTR [edx+0x0]
  429c2d:	stos   DWORD PTR es:[edi],eax
  429c2e:	popa   
  429c2f:	add    BYTE PTR [ebx-0xa7cd2],al
  429c35:	js     0x429cac
  429c37:	mov    DWORD PTR [eax],eax
  429c39:	inc    edi
  429c3a:	call   DWORD PTR [edi-0x408901]
  429c40:	add    BYTE PTR [esi+0x46ff0300],bl
  429c46:	mov    edi,0xb1ff00
  429c4b:	mov    eax,0xff3358ff
  429c50:	add    BYTE PTR [ecx-0x1],bl
  429c53:	inc    BYTE PTR [eax]
  429c55:	test   BYTE PTR [edi],ch
  429c57:	(bad)  
  429c58:	push   DWORD PTR [eax]
  429c5a:	sbb    DWORD PTR [eax+0x909889],0x0
  429c61:	xchg   edx,eax
  429c62:	add    BYTE PTR [edx-0xf40300],dl
  429c68:	mov    DWORD PTR [eax],ecx
  429c6a:	inc    DWORD PTR [ebx-0xac2201]
  429c70:	or     DWORD PTR [eax-0x7d],0xc
  429c74:	sub    edx,0x7d
  429c77:	inc    DWORD PTR [eax]
  429c79:	mov    ecx,0x19ff0300
  429c7e:	xchg   ebx,eax
  429c7f:	add    bh,bh
  429c81:	inc    edx
  429c82:	jmp    FWORD PTR [ebx+eax*4-0x6]
  429c86:	sahf   
  429c87:	inc    DWORD PTR [ebx-0x2f3360]
  429c8d:	loopne 0x429cb9
  429c8f:	add    BYTE PTR [ecx+0xb2ffbb],cl
  429c95:	and    BYTE PTR [ecx],0xff
  429c98:	sbb    DWORD PTR [edi+edi*8-0x2ddc003a],0xffffff83
  429ca0:	add    BYTE PTR [eax-0x6d33fb01],al
  429ca6:	retf   0xffff
  429ca9:	popa   
  429caa:	add    BYTE PTR [ebx-0x332d7e01],dh
  429cb0:	add    BYTE PTR [ebx-0x7d],ah
  429cb3:	adc    DWORD PTR [ebx+0x830306],eax
  429cb9:	scas   eax,DWORD PTR es:[edi]
  429cba:	dec    DWORD PTR [esi-0x1]
  429cbd:	in     al,0x5b
  429cbf:	add    BYTE PTR [ebx+0x2ffa1],al
  429cc5:	sahf   
  429cc6:	test   bh,bh
  429cc8:	add    bl,ch
  429cca:	call   DWORD PTR [ebx-0xdb4801]
  429cd0:	jmp    FWORD PTR [ebx+0x0]
  429cd3:	inc    edx
  429cd4:	add    BYTE PTR [ecx-0x73007cb3],bh
  429cda:	(bad)  
  429cdb:	js     0x429c60
  429cdd:	div    DWORD PTR [ecx]
  429cdf:	add    BYTE PTR [eax],al
  429ce1:	stc    
  429ce2:	int3   
  429ce3:	push   ss
  429ce4:	jmp    FWORD PTR [ebx-0x1a00ff52]
  429cea:	add    BYTE PTR [ebx-0xbefc7d],bh
  429cf0:	adc    DWORD PTR [edx-0x7d],0x25
  429cf4:	int3   
  429cf5:	es ins DWORD PTR es:[edi],dx
  429cf7:	inc    DWORD PTR [ebx+0xa00c2]
  429cfd:	and    dl,BYTE PTR [ebx]
  429cff:	add    DWORD PTR [ebx-0x7cc7ffc6],0x5b
  429d06:	jecxz  0x429d07
  429d08:	call   edi
  429d0a:	add    BYTE PTR [edx+0xb952ff],al
  429d10:	int3   
  429d11:	aaa    
  429d12:	add    BYTE PTR [eax+eax*1],bl
  429d15:	lea    edi,[ebx-0x34]
  429d18:	call   DWORD PTR [ebp+0x0]
  429d1b:	inc    DWORD PTR [eax]
  429d1d:	mov    dh,BYTE PTR [edx-0x7d]
  429d20:	add    dh,al
  429d22:	(bad)  
  429d23:	fld    QWORD PTR [eax]
  429d25:	test   al,0x23
  429d27:	dec    esp
  429d29:	push   ecx
  429d2a:	add    ch,bh
  429d2c:	jmp    FWORD PTR [eax+esi*1-0x1]
  429d30:	jmp    DWORD PTR [ebx+eax*4]
  429d33:	out    0x83,eax
  429d35:	out    0x97,eax
  429d37:	inc    DWORD PTR [eax]
  429d39:	test   DWORD PTR [eax],0xbe7e83e2
  429d3f:	add    bh,bh
  429d41:	lods   al,BYTE PTR ds:[esi]
  429d42:	add    BYTE PTR [ecx],dl
  429d44:	add    BYTE PTR [edi+0x1affff33],dh
  429d4a:	(bad)  
  429d4b:	(bad)  
  429d4d:	add    al,0x51
  429d4f:	(bad)  
  429d50:	push   DWORD PTR [ecx+0x3ffbb00]
  429d56:	adc    edi,edi
  429d58:	add    ah,bl
  429d5a:	jmp    DWORD PTR [ebx+0x0]
  429d5d:	aas    
  429d5e:	adc    esp,ecx
  429d60:	call   FWORD PTR [edx-0x5d7c8234]
  429d66:	sar    bh,1
  429d68:	mov    DWORD PTR [esi],edi
  429d6a:	sub    esp,0xffffffcc
  429d6d:	mov    ds:0xa6ff89d2,al
  429d72:	push   esi
  429d74:	(bad)  
  429d75:	cmp    edx,esi
  429d77:	add    bh,bh
  429d79:	xchg   edi,eax
  429d7a:	add    dl,bh
  429d7c:	call   FWORD PTR [edi-0x7e]
  429d7f:	add    bh,bh
  429d81:	enter  0xcfff,0x0
  429d85:	das    
  429d86:	fs (bad) 
  429d88:	jmp    FWORD PTR [edx+0x0]
  429d8b:	sub    DWORD PTR [ebx-0x7c007e0e],eax
  429d91:	push   es
  429d92:	int3   
  429d93:	pop    ebx
  429d94:	(bad)  
  429d95:	clc    
  429d96:	imul   eax,DWORD PTR [eax],0xffffffff
  429d99:	sub    ecx,DWORD PTR [ecx-0x7df80056]
  429d9f:	add    BYTE PTR [eax],al
  429da1:	and    al,0x0
  429da3:	jmp    0xffd568a8
  429da8:	dec    DWORD PTR [edi-0x1]
  429dab:	mov    bl,0x83
  429dad:	test   DWORD PTR [ecx-0x7c26ff01],edx
  429db3:	push   eax
  429db4:	int3   
  429db5:	mov    esp,0x32ffff89
  429dba:	(bad)  
  429dbb:	(bad)  
  429dbd:	or     eax,0x85ff89cf
  429dc2:	jmp    DWORD PTR [edi+0x0]
  429dc5:	mov    dh,0x8c
  429dc7:	(bad)  
  429dc8:	push   DWORD PTR [edi-0x1]
  429dcb:	out    dx,al
  429dcc:	jmp    DWORD PTR [ebx-0x29]
  429dcf:	dec    esp
  429dd1:	data16 add BYTE PTR [edi+edi*8-0xff43],ch
  429dd9:	sub    al,0x83
  429ddb:	std    
  429ddc:	add    BYTE PTR [ecx+0x5d],bh
  429ddf:	dec    esp
  429de1:	pop    ecx
  429de2:	cmp    DWORD PTR [ebx],0xffffff83
  429de5:	jbe    0x429dc6
  429de7:	int3   
  429de8:	mov    DWORD PTR [ebx],esi
  429dea:	add    BYTE PTR [ebx-0x1],dl
  429ded:	jbe    0x429d7d
  429def:	(bad)  
  429df0:	dec    DWORD PTR [ebx+0x0]
  429df3:	jg     0x429df4
  429df5:	arpl   WORD PTR [ebx+0x0],sp
  429df8:	mov    DWORD PTR [edi-0x2733f301],eax
  429dfe:	jnp    0x429d83
  429e00:	add    BYTE PTR [eax+eax*1],dh
  429e03:	(bad)  
  429e05:	leave  
  429e06:	push   esi
  429e07:	(bad)  
  429e08:	jmp    FWORD PTR [edx]
  429e0a:	add    BYTE PTR [edi-0x1],ch
  429e0d:	mov    eax,ds:0x3c00ccd2
  429e12:	mov    DWORD PTR [ebx+0x0],esp
  429e15:	outs   dx,BYTE PTR ds:[esi]
  429e16:	push   es
  429e17:	inc    DWORD PTR [eax]
  429e19:	sub    al,0x83
  429e1b:	pusha  
  429e1c:	cmp    DWORD PTR [ebp+0x66],0xffffffff
  429e20:	inc    DWORD PTR [ecx+0x1c83acff]
  429e26:	sar    edi,1
  429e28:	jmp    FWORD PTR [edx-0x26002500]
  429e2e:	hlt    
  429e2f:	inc    DWORD PTR [eax]
  429e31:	in     al,dx
  429e32:	add    BYTE PTR [eax],bl
  429e34:	add    BYTE PTR [ebx+0x58],ah
  429e37:	add    bh,bh
  429e39:	inc    ebp
  429e3a:	add    BYTE PTR [esi],ch
  429e3c:	jmp    DWORD PTR [esi+0x79]
  429e3f:	add    BYTE PTR [eax],al
  429e41:	repnz add BYTE PTR [esi],ch
  429e44:	jmp    FWORD PTR [ebx]
  429e46:	mov    ah,0xff
  429e48:	int3   
  429e49:	dec    ecx
  429e4a:	adc    DWORD PTR [edx-0x7d0001],0xffffffff
  429e51:	inc    ebp
  429e52:	sbb    DWORD PTR [esi],0xffffff89
  429e55:	xor    al,0xeb
  429e57:	(bad)  
  429e58:	push   DWORD PTR [ebx+0x0]
  429e5b:	jg     0x429e5d
  429e5d:	loope  0x429e31
  429e5f:	add    bh,bh
  429e61:	lea    eax,[eax]
  429e63:	lods   al,BYTE PTR ds:[esi]
  429e64:	(bad)  
  429e65:	cli    
  429e66:	mov    bh,0x0
  429e68:	add    BYTE PTR [esi],ah
  429e6a:	sbb    DWORD PTR [esi-0x1],0xffffffbc
  429e6e:	out    0x0,eax
  429e70:	add    BYTE PTR [eax-0x1c005700],dh
  429e76:	push   edi
  429e77:	cmp    edi,0x14
  429e7a:	add    BYTE PTR [edx+0x0],ch
  429e7d:	std    
  429e7e:	out    dx,eax
  429e7f:	(bad)  
  429e80:	dec    DWORD PTR [eax-0x7aff5701]
  429e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e87:	(bad)  
  429e88:	jmp    DWORD PTR [edi-0x1e761501]
  429e8e:	icebp  
  429e8f:	mov    DWORD PTR [eax],eax
  429e91:	mov    al,ds:0xaeffb389
  429e96:	dec    edi
  429e97:	inc    DWORD PTR [eax]
  429e99:	push   DWORD PTR ss:[edi+edi*8+0xdbe3]
  429ea1:	push   ebp
  429ea2:	(bad)  
  429ea3:	cli    
  429ea4:	add    DWORD PTR [eax-0x16],0xffffffcc
  429ea8:	(bad)  
  429ea9:	mov    ebx,0x9b831bff
  429eae:	dec    esp
  429eaf:	cmp    edi,0x34
  429eb2:	dec    DWORD PTR [edx-0x8f9677]
  429eb8:	jmp    edx
  429eba:	add    BYTE PTR [edi],al
  429ebc:	add    bh,cl
  429ebe:	cdq    
  429ebf:	(bad)  
  429ec0:	push   DWORD PTR [edx]
  429ec2:	inc    edi
  429ec4:	jmp    FWORD PTR [edx+0x68]
  429ec7:	inc    DWORD PTR [eax]
  429ec9:	xchg   edx,eax
  429eca:	add    BYTE PTR [ecx],dh
  429ecc:	call   FWORD PTR [edx+0x7e]
  429ecf:	add    ah,cl
  429ed1:	fiadd  WORD PTR [eax]
  429ed3:	hlt    
  429ed4:	add    BYTE PTR [ebp+0x58],dl
  429ed7:	add    BYTE PTR [eax],al
  429ed9:	xor    eax,0x5500fd89
  429ede:	xchg   edi,eax
  429edf:	int3   
  429ee0:	jmp    DWORD PTR [ebx+eax*4]
  429ee3:	aam    0xff
  429ee5:	sti    
  429ee6:	test   al,0x83
  429ee8:	call   FWORD PTR ds:0xc0ff0900
  429eee:	cdq    
  429eef:	(bad)  
  429ef0:	jmp    ebx
  429ef2:	(bad)  
  429ef3:	(bad)  
  429ef4:	(bad)  
  429ef5:	mov    ebp,0xc28383c6
  429efa:	sub    DWORD PTR [edi],0xffffffff
  429efd:	test   ah,ch
  429eff:	add    bh,bh
  429f01:	mov    es,WORD PTR [eax]
  429f03:	or     eax,DWORD PTR [ebx-0x7c33c976]
  429f09:	jbe    0x429ed7
  429f0b:	sbb    al,0xff
  429f0d:	out    0xa1,al
  429f0f:	add    ah,cl
  429f11:	test   eax,0xd2ffaaff
  429f16:	js     0x429f18
  429f18:	add    BYTE PTR [ebp+0x0],dh
  429f1b:	es (bad) 
  429f1d:	cmp    DWORD PTR [ebx+0xb4ffff],edx
  429f23:	add    bh,bh
  429f25:	cwde   
  429f26:	or     al,BYTE PTR [eax]
  429f28:	add    ebp,0xffffffff
  429f2b:	(bad)  
  429f2d:	dec    esp
  429f2e:	pop    ebx
  429f2f:	(bad)  
  429f30:	jmp    FWORD PTR [esi]
  429f32:	int3   
  429f33:	sar    bh,1
  429f35:	or     edx,0xffffffff
  429f38:	jmp    eax
  429f3a:	sbb    DWORD PTR [ecx+0x0],0xffffff8d
  429f3e:	dec    edi
  429f3f:	(bad)  
  429f40:	push   DWORD PTR [ecx+0x3d83ed83]
  429f46:	leave  
  429f47:	dec    esp
  429f49:	iret   
  429f4a:	add    BYTE PTR [ecx-0x1],cl
  429f4d:	mov    es,WORD PTR [edi+edi*8-0x1]
  429f51:	inc    eax
  429f52:	add    bl,dl
  429f54:	jmp    FWORD PTR [ebx+eax*2-0x9a0077]
  429f5b:	aaa    
  429f5c:	mov    DWORD PTR [esi],esp
  429f5e:	sbb    eax,0xa283ff
  429f63:	jl     0x429f31
  429f65:	or     bl,cl
  429f67:	inc    DWORD PTR [eax]
  429f69:	cwde   
  429f6a:	add    DWORD PTR [ebx-0x7d],0xffffffb7
  429f6e:	daa    
  429f6f:	inc    DWORD PTR [eax]
  429f71:	sbb    bh,bh
  429f73:	scas   al,BYTE PTR es:[edi]
  429f74:	add    BYTE PTR [eax-0x4900ffca],bl
  429f7a:	add    cl,dh
  429f7c:	call   DWORD PTR [edx]
  429f7e:	call   0xe06c06
  429f83:	pop    esi
  429f84:	and    ebx,0xffffff98
  429f87:	inc    DWORD PTR [eax]
  429f89:	dec    eax
  429f8a:	inc    DWORD PTR [ebx-0xcc6a01]
  429f90:	inc    DWORD PTR [esi]
  429f92:	mov    DWORD PTR [eax+eax*1+0x3b],ebx
  429f96:	test   BYTE PTR [eax],al
  429f98:	add    bl,ch
  429f9a:	add    BYTE PTR ds:0x1d8fff,al
  429fa0:	int3   
  429fa1:	adc    DWORD PTR fs:[edi],0xffffffff
  429fa5:	div    DWORD PTR [esi]
  429fa7:	cmp    edi,0xffffff90
  429faa:	add    BYTE PTR [ebx],dh
  429fac:	int3   
  429fad:	sub    DWORD PTR [edx+0x4983ff],ebx
  429fb3:	popf   
  429fb4:	call   FWORD PTR [ecx+eax*1-0xd90100]
  429fbb:	test   al,0xff
  429fbd:	fiadd  WORD PTR es:[eax]
  429fc0:	mov    DWORD PTR [eax-0x13ff1f01],ecx
  429fc6:	cli    
  429fc7:	add    bh,bh
  429fc9:	jge    0x429f97
  429fcb:	push   ebp
  429fcc:	inc    ebx
  429fce:	push   edx
  429fcf:	inc    DWORD PTR [ebx-0xd500c3]
  429fd5:	mov    bh,0x3d
  429fd7:	int3   
  429fd8:	jmp    FWORD PTR [ebx]
  429fda:	add    BYTE PTR [eax-0x336cae01],ch
  429fe0:	call   FWORD PTR [ebx]
  429fe2:	add    BYTE PTR ds:0x83365f00,bl
  429fe8:	int3   
  429fe9:	cli    
  429fea:	jmp    DWORD PTR [ecx]
  429fec:	add    DWORD PTR [ebp+0x54ffffca],0xffffff89
  429ff3:	xchg   ebx,eax
  429ff4:	jmp    FWORD PTR [eax]
  429ff6:	push   ds
  429ff7:	int3   
  429ff8:	jmp    DWORD PTR [edi+0x0]
  429ffb:	sub    edi,edi
  429ffd:	push   ebp
  429ffe:	out    0x89,al
  42a000:	add    BYTE PTR [esi],bh
  42a002:	add    BYTE PTR [esi-0x33710801],ah
  42a008:	dec    DWORD PTR [eax-0x1]
  42a00b:	rol    BYTE PTR [eax],cl
  42a00d:	pop    esp
  42a00e:	in     eax,0x0
  42a010:	call   DWORD PTR [eax+eax*1+0x2d]
  42a014:	dec    DWORD PTR [ebp-0x71]
  42a017:	(bad)  
  42a018:	jmp    DWORD PTR [eax+0x39009189]
  42a01e:	je     0x42a01f
  42a020:	inc    edx
  42a021:	cld    
  42a022:	jnp    0x42a08a
  42a024:	inc    DWORD PTR [ebx-0x6a90077]
  42a02a:	repnz or cl,ah
  42a02d:	add    bh,bh
  42a02f:	jmp    FWORD PTR [ecx+0x6d]
  42a032:	dec    esp
  42a033:	adc    al,0x0
  42a035:	int3   
  42a036:	inc    DWORD PTR [ebx-0x4991ee45]
  42a03c:	inc    DWORD PTR [eax]
  42a03e:	inc    DWORD PTR [eax]
  42a040:	call   FWORD PTR [edi-0xfffb69]
  42a046:	inc    DWORD PTR [eax]
  42a048:	dec    ecx
  42a049:	hlt    
  42a04a:	xchg   BYTE PTR [eax+eax*1],dh
  42a04d:	add    BYTE PTR [ebx-0x20a98901],al
  42a053:	dec    eax
  42a054:	(bad)  
  42a055:	(bad)  
  42a056:	(bad)  
  42a057:	inc    DWORD PTR [ecx+0x31]
  42a05a:	popf   
  42a05b:	sub    eax,0xff89ff
  42a060:	or     eax,0x530bd0
  42a065:	inc    DWORD PTR [eax]
  42a067:	and    DWORD PTR [eax-0xb543d0],0x0
  42a06e:	mov    edi,edi
  42a070:	mov    ebp,0xff22c14f
  42a075:	int3   
  42a076:	inc    DWORD PTR [ebx-0x1c12a913]
  42a07c:	add    BYTE PTR [eax],al
  42a07e:	(bad)  
  42a07f:	push   DWORD PTR [edx]
  42a081:	pop    ebx
  42a082:	sti    
  42a083:	ja     0x42a084
  42a085:	cmp    edi,0xffffffff
  42a088:	test   eax,0x941376
  42a08d:	add    bh,bh
  42a08f:	(bad)  
  42a090:	jl     0x42a056
  42a092:	sahf   
  42a093:	add    eax,0xffff83
  42a098:	jmp    0x8389:0x15c0e9
  42a09f:	add    bh,ah
  42a0a1:	push   ss
  42a0a2:	(bad)  
  42a0a3:	int    0xff
  42a0a5:	cmp    edi,0x0
  42a0a8:	xor    al,0xac
  42a0aa:	inc    ebp
  42a0ab:	outs   dx,BYTE PTR ds:[esi]
  42a0ac:	add    BYTE PTR [ecx-0x67e7ff34],cl
  42a0b2:	push   ecx
  42a0b3:	dec    ebx
  42a0b4:	(bad)  
  42a0b5:	(bad)  
  42a0b6:	inc    DWORD PTR [ebx+0x74a9c3b7]
  42a0bc:	(bad)  
  42a0bd:	(bad)  
  42a0be:	dec    esp
  42a0c0:	fild   DWORD PTR [ecx]
  42a0c2:	mov    ebp,0xff008959
  42a0c7:	add    BYTE PTR [edx],cl
  42a0c9:	cmp    dh,BYTE PTR [edi-0x33ff7f]
  42a0cf:	add    al,cl
  42a0d1:	outs   dx,DWORD PTR ds:[esi]
  42a0d2:	push   0xffffff6c
  42a0d7:	call   DWORD PTR [esi]
  42a0d9:	loop   0x42a115
  42a0db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a0dc:	int3   
  42a0dd:	cmp    edi,0x0
  42a0e0:	scas   eax,DWORD PTR es:[edi]
  42a0e1:	out    dx,eax
  42a0e2:	shr    BYTE PTR [edi+edi*8-0x34],0x83
  42a0e7:	call   FWORD PTR [edi+0x10]
  42a0ea:	pop    esp
  42a0eb:	adc    al,0x0
  42a0ed:	(bad)  
  42a0ee:	(bad)  
  42a0ef:	jmp    DWORD PTR ds:0xddd98b
  42a0f5:	(bad)  
  42a0f6:	inc    DWORD PTR [eax]
  42a0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0f9:	int    0x63
  42a0fb:	sbb    eax,0xffff8389
  42a100:	add    al,0x65
  42a102:	sbb    esi,DWORD PTR [ebp+0x89ffff]
  42a108:	cli    
  42a109:	jbe    0x42a0f5
  42a10b:	stos   BYTE PTR es:[edi],al
  42a10c:	add    bh,bh
  42a10e:	(bad)  
  42a10f:	jmp    FWORD PTR [eax-0x6da3aa]
  42a115:	add    bh,bh
  42a117:	(bad)  
  42a118:	(bad)  
  42a119:	xlat   BYTE PTR ds:[ebx]
  42a11a:	sbb    BYTE PTR [ebp-0x340000],0xb6
  42a121:	cwde   
  42a122:	in     eax,dx
  42a123:	mov    ah,cl
  42a125:	add    BYTE PTR [eax],al
  42a127:	add    bl,cl
  42a129:	mov    esi,0xffaab0
  42a12e:	add    DWORD PTR [eax],0xffffffae
  42a131:	sub    ch,cl
  42a133:	lds    eax,FWORD PTR [eax]
  42a135:	inc    DWORD PTR [eax]
  42a137:	add    BYTE PTR [ecx],ch
  42a139:	push   esp
  42a13a:	lock imul eax,DWORD PTR [eax],0xffffffff
  42a13e:	add    bh,bh
  42a140:	jecxz  0x42a114
  42a142:	xchg   edi,eax
  42a143:	xchg   esp,ecx
  42a145:	(bad)  
  42a146:	(bad)  
  42a147:	jmp    DWORD PTR [edi-0x6e]
  42a14a:	xor    al,0x97
  42a14c:	mov    DWORD PTR [ebx-0x5d533400],eax
  42a152:	xchg   BYTE PTR [eax-0x7d],dh
  42a158:	mov    edi,0xff0536
  42a15d:	dec    esp
  42a15f:	mov    esp,edi
  42a161:	xor    edi,0xffff83c6
  42a167:	add    BYTE PTR [esp+ebp*8+0x65],al
  42a16b:	mov    ?,edi
  42a16d:	(bad)  
  42a16e:	inc    DWORD PTR [eax]
  42a170:	xchg   ecx,eax
  42a171:	loopne 0x42a187
  42a173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a174:	add    BYTE PTR [eax],al
  42a176:	dec    esp
  42a178:	out    dx,al
  42a179:	sbb    BYTE PTR [ebp+0xa],cl
  42a17c:	add    bh,bh
  42a17e:	add    BYTE PTR [eax],al
  42a180:	inc    eax
  42a181:	ror    BYTE PTR [edx+eiz*2-0xff7c7d],cl
  42a188:	mov    WORD PTR [ecx+0x59],fs
  42a18b:	sbb    eax,DWORD PTR [eax]
  42a18d:	add    bh,bh
  42a18f:	inc    DWORD PTR [eax]
  42a191:	xor    DWORD PTR [ecx-0x56],0xffffff89
  42a195:	int3   
  42a196:	int3   
  42a197:	add    BYTE PTR [esi],ah
  42a199:	sub    eax,0xff1a08
  42a19e:	add    DWORD PTR [eax],0x4b
  42a1a1:	mov    eax,ds:0xff5f86
  42a1a6:	inc    DWORD PTR [ebx-0x21a2c212]
  42a1ac:	inc    DWORD PTR [eax]
  42a1ae:	add    DWORD PTR [eax],0xffffff8b
  42a1b1:	xor    ch,dh
  42a1b3:	lods   eax,DWORD PTR ds:[esi]
  42a1b4:	add    bh,bh
  42a1b6:	(bad)  
  42a1b7:	inc    DWORD PTR [esi+0x1f]
  42a1ba:	pop    ds
  42a1bb:	in     al,0x0
  42a1bd:	add    bh,bh
  42a1bf:	push   DWORD PTR [edi]
  42a1c1:	je     0x42a18c
  42a1c3:	or     eax,0xffccff
  42a1c8:	test   BYTE PTR [eax-0x5c],bl
  42a1cb:	pusha  
  42a1cc:	(bad)  
  42a1cd:	inc    DWORD PTR [ebx-0x751e8400]
  42a1d3:	inc    eax
  42a1d4:	add    BYTE PTR [ecx+0x45b200ff],cl
  42a1da:	loope  0x42a1b4
  42a1dc:	(bad)  
  42a1dd:	(bad)  
  42a1de:	dec    DWORD PTR [ecx+0x3513aa7d]
  42a1e4:	inc    DWORD PTR [ebx+0x27d6ff89]
  42a1ea:	mov    al,0x50
  42a1ec:	add    BYTE PTR [eax],al
  42a1ee:	mov    DWORD PTR [eax],eax
  42a1f0:	or     esi,DWORD PTR [ebp-0x76c0b0]
  42a1f6:	inc    DWORD PTR [eax]
  42a1f8:	ss inc ebp
  42a1fa:	pop    es
  42a1fb:	pop    es
  42a1fc:	inc    DWORD PTR [eax]
  42a1fe:	dec    DWORD PTR [ecx-0x6807ed02]
  42a204:	(bad)  
  42a205:	dec    DWORD PTR [ecx-0x5ef76400]
  42a20b:	mov    bl,0x89
  42a20d:	add    bh,bh
  42a20f:	add    dl,dh
  42a211:	jmp    0xff89:0xff83c858
  42a218:	les    ebp,FWORD PTR [edx]
  42a21a:	mov    al,ds:0xffff00aa
  42a21f:	int3   
  42a220:	cdq    
  42a221:	scas   al,BYTE PTR es:[edi]
  42a222:	jo     0x42a28f
  42a224:	dec    esp
  42a226:	inc    DWORD PTR [eax]
  42a228:	xor    eax,0xffb6bfb6
  42a22d:	add    BYTE PTR [ecx+0x299fd5ff],cl
  42a233:	call   0x10fa237
  42a238:	push   eax
  42a239:	pop    edx
  42a23a:	test   BYTE PTR [edi],dl
  42a23c:	int3   
  42a23d:	cmp    edi,0x0
  42a240:	dec    edi
  42a241:	outs   dx,DWORD PTR ds:[esi]
  42a242:	sub    al,0x12
  42a244:	(bad)  
  42a245:	dec    DWORD PTR [ecx-0x71fc0234]
  42a24b:	xchg   DWORD PTR [eax],eax
  42a24d:	cmp    edi,0xffffff89
  42a250:	out    dx,al
  42a251:	outs   dx,BYTE PTR ds:[esi]
  42a252:	lods   al,BYTE PTR ds:[esi]
  42a253:	cmp    al,0x0
  42a255:	add    BYTE PTR [ebx+0x64d7bfff],al
  42a25b:	je     0x42a1e6
  42a25d:	int3   
  42a25e:	inc    DWORD PTR [eax]
  42a260:	jno    0x42a25c
  42a262:	adc    cl,dh
  42a264:	(bad)  
  42a265:	inc    DWORD PTR [eax]
  42a267:	add    BYTE PTR [ebx],bl
  42a269:	adc    al,0x79
  42a26b:	mov    ecx,DWORD PTR [ecx+0x5dffffff]
  42a271:	test   al,0x71
  42a273:	adc    eax,0xff00ffff
  42a278:	adc    al,0x6c
  42a27a:	xchg   edi,eax
  42a27b:	fcos   
  42a27d:	(bad)  
  42a27e:	inc    DWORD PTR [eax]
  42a280:	jbe    0x42a218
  42a282:	and    eax,0x89008353
  42a287:	add    BYTE PTR [ebx],dl
  42a289:	into   
  42a28a:	jmp    0xb5cc:0xffffcca8
  42a291:	or     ebx,DWORD PTR [esi-0xff0090]
  42a297:	push   DWORD PTR [ecx+0x27a503]
  42a29d:	add    BYTE PTR [ebx+0x83d3d00],al
  42a2a3:	jne    0x42a2a5
  42a2a5:	add    BYTE PTR [ecx+0x2a145283],cl
  42a2ab:	add    al,0xff
  42a2ad:	add    bh,bh
  42a2af:	add    BYTE PTR [ebx+0xc95937],cl
  42a2b5:	add    bh,bh
  42a2b7:	call   FWORD PTR [edx]
  42a2b9:	dec    ebx
  42a2ba:	xor    eax,0xcc60
  42a2bf:	xor    DWORD PTR [esi+0x5],0x7e
  42a2c3:	ins    DWORD PTR es:[edi],dx
  42a2c4:	inc    DWORD PTR [eax]
  42a2c6:	(bad)  
  42a2c7:	push   DWORD PTR [ecx]
  42a2c9:	pop    ds
  42a2ca:	ret    
  42a2cb:	loopne 0x42a2cc
  42a2cd:	inc    DWORD PTR [eax]
  42a2cf:	(bad)  
  42a2d0:	cmp    al,0xdf
  42a2d2:	cwde   
  42a2d3:	or     eax,0x89ffff
  42a2d8:	xchg   ecx,eax
  42a2d9:	loope  0x42a2dd
  42a2db:	adc    al,0x0
  42a2dd:	cmp    edi,0x0
  42a2e0:	mov    edi,0xff7600e6
  42a2e5:	add    DWORD PTR [ebx+0x557813cc],0x15
  42a2ec:	inc    DWORD PTR [ebx-0x63610100]
  42a2f2:	sahf   
  42a2f3:	or     eax,DWORD PTR [eax]
  42a2f5:	cmp    edi,0xffffffff
  42a2f8:	repz push ecx
  42a2fa:	push   esi
  42a2fb:	mov    al,0x0
  42a2fd:	inc    DWORD PTR [eax]
  42a2ff:	dec    ebx
  42a301:	pop    eax
  42a302:	push   0x63
  42a304:	add    bh,bh
  42a306:	inc    DWORD PTR [eax]
  42a308:	call   0xffff:0xcc8d15b4
  42a30f:	push   edi
  42a311:	test   DWORD PTR [esi+0x38],ecx
  42a314:	inc    DWORD PTR [ebx+0x6cd300ff]
  42a31a:	lahf   
  42a31b:	inc    ebp
  42a31c:	add    bh,bh
  42a31e:	inc    DWORD PTR [eax]
  42a320:	jecxz  0x42a2f8
  42a322:	fistp  DWORD PTR [edx-0x76007c01]
  42a328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a329:	or     BYTE PTR [edi+0xff008e],al
  42a32f:	inc    ebx
  42a331:	and    ecx,0xffffff1f
  42a337:	jmp    FWORD PTR [edx]
  42a339:	js     0x42a365
  42a33b:	sbb    eax,0xff0000
  42a340:	bound  ecx,QWORD PTR [ecx]
  42a342:	mov    ah,0xe7
  42a344:	mov    edi,edi
  42a346:	(bad)  
  42a347:	push   DWORD PTR [edx+0x17fd67]
  42a34d:	dec    DWORD PTR [ecx-0x40204201]
  42a353:	and    edi,edi
  42a355:	add    BYTE PTR [ebx-0x743a77],al
  42a35b:	arpl   WORD PTR [ecx-0x6e000001],cx
  42a361:	ins    BYTE PTR es:[edi],dx
  42a362:	in     eax,0xca
  42a364:	add    bh,bh
  42a366:	inc    DWORD PTR [ebx-0x3d991a01]
  42a36c:	(bad)  
  42a36d:	inc    DWORD PTR [ebx+0x41a274ff]
  42a373:	ja     0x42a375
  42a375:	(bad)  
  42a376:	(bad)  
  42a377:	jmp    FWORD PTR [ecx+0x3e70c9]
  42a37d:	add    BYTE PTR [eax],al
  42a37f:	dec    DWORD PTR [edi-0x68]
  42a382:	or     BYTE PTR [eax+0x0],bh
  42a385:	int3   
  42a386:	inc    DWORD PTR [ebx+0xd93b1f3]
  42a38c:	dec    esp
  42a38e:	cmp    edi,0xffffffc8
  42a391:	mov    ebx,0xff8af5
  42a396:	add    DWORD PTR [ebx+0x19cfa86f],0xffffffff
  42a39d:	add    BYTE PTR [eax],al
  42a39f:	(bad)  
  42a3a0:	jle    0x42a3a4
  42a3a2:	xor    eax,0xff00ff09
  42a3a7:	mov    DWORD PTR [ecx-0x6],edi
  42a3aa:	mov    bh,0xe5
  42a3ac:	inc    DWORD PTR [eax]
  42a3ae:	dec    esp
  42a3b0:	rcl    BYTE PTR [ecx-0x5d],0x1f
  42a3b4:	add    bh,bh
  42a3b6:	add    bh,bh
  42a3b8:	in     al,0x7d
  42a3ba:	mov    esi,DWORD PTR [edx-0x33003301]
  42a3c0:	push   0x83394739
  42a3c5:	cmp    edi,0x0
  42a3c8:	daa    
  42a3c9:	mov    edi,0xff009e1c
  42a3ce:	inc    DWORD PTR [eax]
  42a3d0:	adc    BYTE PTR [esi-0x76],dh
  42a3d3:	iret   
  42a3d4:	(bad)  
  42a3d5:	inc    DWORD PTR [ebx-0x77a49b00]
  42a3db:	fild   DWORD PTR [eax]
  42a3dd:	inc    DWORD PTR [eax]
  42a3df:	(bad)  
  42a3e0:	mov    edx,0xff5b6d7f
  42a3e5:	add    bh,bh
  42a3e7:	add    edi,0xffffff99
  42a3ea:	cmp    ah,BYTE PTR ds:0xcc83ffcc
  42a3f0:	xchg   esp,eax
  42a3f1:	cmp    DWORD PTR [ebx+ecx*4-0x76ffff34],ecx
  42a3f8:	pusha  
  42a3f9:	pop    esi
  42a3fa:	push   ebp
  42a3fb:	pop    edx
  42a3fc:	dec    DWORD PTR [ecx-0x65e10001]
  42a402:	inc    ecx
  42a403:	rol    BYTE PTR [eax],1
  42a405:	add    bh,bh
  42a407:	add    BYTE PTR [eax+0x6],al
  42a40a:	cmp    esi,DWORD PTR [ecx-0x77]
  42a40d:	(bad)  
  42a40e:	inc    DWORD PTR [eax]
  42a410:	sbb    eax,0x83a97925
  42a415:	(bad)  
  42a416:	(bad)  
  42a417:	inc    DWORD PTR [ecx+eax*2]
  42a41a:	jle    0x42a3cc
  42a41c:	(bad)  
  42a41d:	inc    DWORD PTR [ebx+0x10444e83]
  42a423:	popf   
  42a424:	dec    esp
  42a426:	add    DWORD PTR [eax],0xffffffa0
  42a429:	adc    al,0xc9
  42a42b:	mov    ebp,0xcc
  42a430:	mov    al,0x22
  42a432:	mov    edx,0xffccff29
  42a437:	add    BYTE PTR ds:0xcc95945d,al
  42a43d:	(bad)  
  42a43e:	inc    DWORD PTR [ebx+0x6764f2c7]
  42a444:	add    bh,bh
  42a446:	add    ah,cl
  42a448:	sahf   
  42a449:	pop    esp
  42a44a:	cld    
  42a44b:	call   0xffcc714f
  42a450:	out    dx,eax
  42a451:	and    ebp,esi
  42a453:	and    BYTE PTR [eax],al
  42a455:	cmp    edi,0xffffff89
  42a458:	sub    eax,0xa532bb
  42a45d:	inc    DWORD PTR [eax]
  42a45f:	jmp    FWORD PTR [esi-0xafcca]
  42a465:	int3   
  42a466:	add    bh,bh
  42a468:	push   0xffffffe5
  42a46a:	and    al,0x97
  42a46c:	add    bh,bh
  42a46e:	inc    DWORD PTR [eax]
  42a470:	mov    es,WORD PTR [edx-0x11]
  42a473:	sar    edi,0xcc
  42a476:	add    BYTE PTR [eax],al
  42a478:	push   cs
  42a479:	xchg   edi,eax
  42a47a:	loope  0x42a486
  42a47c:	mov    edi,edi
  42a47e:	cmp    edi,0xffffffc0
  42a481:	sbb    al,0x38
  42a483:	inc    edx
  42a484:	(bad)  
  42a485:	dec    DWORD PTR [ecx+0x671660ff]
  42a48b:	rol    BYTE PTR [eax],cl
  42a48d:	add    ah,cl
  42a48f:	mov    DWORD PTR [ecx+0x47],ecx
  42a492:	sti    
  42a493:	mov    cl,0x0
  42a495:	(bad)  
  42a496:	inc    DWORD PTR [eax]
  42a498:	push   ebx
  42a499:	sbb    DWORD PTR [ecx+0x83892c],ebx
  42a49f:	(bad)  
  42a4a0:	sti    
  42a4a1:	loopne 0x42a508
  42a4a3:	scas   al,BYTE PTR es:[edi]
  42a4a4:	add    BYTE PTR [eax],al
  42a4a6:	cmp    edi,0xffffffa2
  42a4a9:	mov    WORD PTR [edx-0x10],?
  42a4ac:	dec    DWORD PTR [ecx-0x43990001]
  42a4b2:	adc    DWORD PTR ds:0xff0089ff,edi
  42a4b8:	repnz cwde 
  42a4ba:	and    eax,DWORD PTR [edx]
  42a4bc:	mov    DWORD PTR [ebx+0x2fe38983],eax
  42a4c2:	adc    eax,0x83ccff42
  42a4c7:	call   ebp
  42a4c9:	push   edx
  42a4ca:	dec    ecx
  42a4cb:	(bad)  
  42a4cd:	int3   
  42a4ce:	(bad)  
  42a4cf:	jmp    FWORD PTR [ecx+ebp*2+0x838c40]
  42a4d6:	(bad)  
  42a4d7:	(bad)  
  42a4d8:	mov    esi,0x89702a38
  42a4dd:	cmp    edi,0xffffff89
  42a4e0:	mov    ds,WORD PTR [esi-0x334a33]
  42a4e6:	add    bh,bh
  42a4e8:	sbb    eax,0xffe30118
  42a4ed:	(bad)  
  42a4ee:	dec    esp
  42a4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4f2:	loopne 0x42a50a
  42a4f4:	cmp    edi,0x0
  42a4f7:	and    DWORD PTR [esi+0xba9a63],0xffffffff
  42a4fe:	add    BYTE PTR [eax],al
  42a500:	and    DWORD PTR [eiz*1-0x7c00001c],ebp
  42a507:	inc    DWORD PTR [edi+0x7f]
  42a50a:	push   0x8300b6
  42a50f:	jmp    FWORD PTR [esi+0x62]
  42a512:	dec    esp
  42a513:	or     edi,edi
  42a515:	inc    DWORD PTR [eax]
  42a517:	inc    edi
  42a519:	int    0x2c
  42a51b:	push   ds
  42a51c:	int3   
  42a51d:	cmp    edi,0xffffff89
  42a520:	into   
  42a521:	inc    edx
  42a522:	and    al,0xd8
  42a524:	inc    DWORD PTR [eax]
  42a526:	inc    DWORD PTR [eax]
  42a528:	fs je  0x42a545
  42a52b:	sbb    eax,0x8389ffff
  42a530:	jmp    0x8300:0x3e998f
  42a537:	and    DWORD PTR [esi-0x59],0x5d
  42a53b:	fld    QWORD PTR [ebx-0x7a330001]
  42a541:	inc    ecx
  42a542:	mov    al,ds:0xff00003d
  42a547:	(bad)  
  42a548:	cmp    edx,esi
  42a54a:	jb     0x42a4f0
  42a54c:	add    BYTE PTR [eax],al
  42a54e:	cmp    edi,0xffffffe0
  42a551:	retf   0x7ade
  42a554:	dec    DWORD PTR [ecx+0x148f00ff]
  42a55a:	push   edx
  42a55b:	or     DWORD PTR [eax],eax
  42a55d:	add    BYTE PTR [eax],al
  42a55f:	add    DWORD PTR [eax-0x7e],0xffffffe8
  42a563:	cmp    edi,0x2683ff00
  42a569:	adc    al,0x20
  42a56b:	cmc    
  42a56c:	add    ah,cl
  42a56e:	inc    DWORD PTR [eax]
  42a570:	sub    esi,DWORD PTR [ecx]
  42a572:	pop    ss
  42a573:	and    DWORD PTR [eax],eax
  42a575:	add    bh,bh
  42a577:	inc    DWORD PTR [edx-0x7cd3d782]
  42a57d:	add    bh,bh
  42a57f:	add    BYTE PTR [esi],ah
  42a581:	jmp    0xff00:0xffcce9e2
  42a588:	mov    ah,0xf6
  42a58a:	arpl   WORD PTR [eax+0xcc],bx
  42a590:	xchg   esp,eax
  42a591:	out    0x5d,eax
  42a593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a594:	inc    DWORD PTR [eax]
  42a596:	int3   
  42a597:	int3   
  42a598:	xchg   ebx,eax
  42a599:	lahf   
  42a59a:	or     ebx,esp
  42a59c:	int3   
  42a59d:	cmp    edi,0x0
  42a5a0:	loopne 0x42a617
  42a5a2:	jl     0x42a548
  42a5a4:	(bad)  
  42a5a5:	inc    DWORD PTR [ebx+0x4a26b9ff]
  42a5ab:	int3   
  42a5ac:	add    BYTE PTR [eax],al
  42a5ae:	inc    DWORD PTR [eax]
  42a5b0:	or     bh,BYTE PTR [ebp-0x76331f06]
  42a5b6:	dec    DWORD PTR [ecx-0x1a89a035]
  42a5bc:	inc    DWORD PTR [eax]
  42a5be:	inc    DWORD PTR [eax]
  42a5c0:	scas   eax,DWORD PTR es:[edi]
  42a5c1:	push   es
  42a5c2:	rcl    BYTE PTR [esi+0x0],1
  42a5c5:	add    BYTE PTR [eax],al
  42a5c7:	jmp    DWORD PTR [esi-0x4a]
  42a5ca:	pop    ss
  42a5cb:	jecxz  0x42a5cc
  42a5cd:	add    BYTE PTR [ebx+0x46ad9c00],al
  42a5d3:	inc    DWORD PTR es:[ebx-0x8e20001]
  42a5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5db:	mov    DWORD PTR [eax],0xf200ffff
  42a5e1:	call   0xc627fa
  42a5e6:	add    bh,bh
  42a5e8:	test   BYTE PTR ds:0xff9caa,bh
  42a5ee:	add    bh,bh
  42a5f0:	xchg   edx,eax
  42a5f1:	fs dec ecx
  42a5f3:	test   edi,edi
  42a5f5:	(bad)  
  42a5f6:	(bad)  
  42a5f7:	jmp    ecx
  42a5f9:	in     eax,dx
  42a5fa:	scas   eax,DWORD PTR es:[edi]
  42a5fb:	push   edx
  42a5fc:	inc    DWORD PTR [ebx-0x38be007d]
  42a602:	aas    
  42a603:	pop    ds
  42a604:	add    BYTE PTR [ebx+0x21a683ff],al
  42a60a:	cmp    eax,0xffff70
  42a60f:	add    ch,bh
  42a611:	xlat   BYTE PTR ds:[ebx]
  42a612:	out    0xf2,eax
  42a614:	inc    DWORD PTR [ebx-0x42b17c34]
  42a61a:	inc    ecx
  42a61b:	scas   eax,DWORD PTR es:[edi]
  42a61c:	(bad)  
  42a61d:	(bad)  
  42a61e:	dec    esp
  42a620:	pop    edi
  42a621:	mov    ds:0xff89c9b4,al
  42a626:	inc    DWORD PTR [eax]
  42a628:	stc    
  42a629:	(bad)  
  42a62a:	pop    ds
  42a62b:	mov    ebx,0xff00ff83
  42a630:	pop    es
  42a631:	xor    dh,BYTE PTR [edi+0x38]
  42a634:	inc    DWORD PTR [ebx-0x7418ff01]
  42a63a:	push   edx
  42a63b:	loop   0x42a609
  42a63d:	(bad)  
  42a63e:	dec    DWORD PTR [ecx-0x639b539e]
  42a644:	int3   
  42a645:	int3   
  42a646:	add    bh,bh
  42a648:	pop    esp
  42a649:	dec    edi
  42a64a:	in     al,dx
  42a64b:	xchg   ecx,eax
  42a64c:	(bad)  
  42a64d:	dec    esp
  42a64f:	call   DWORD PTR [eax]
  42a651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a652:	inc    esp
  42a653:	enter  0x83,0x0
  42a657:	add    BYTE PTR [eax-0x78],al
  42a65a:	lahf   
  42a65b:	(bad)  
  42a65c:	add    BYTE PTR [eax],al
  42a65e:	int3   
  42a65f:	(bad)  
  42a660:	in     eax,dx
  42a661:	push   edx
  42a662:	ror    DWORD PTR [eax-0x1],cl
  42a665:	(bad)  
  42a666:	inc    DWORD PTR [eax]
  42a668:	ja     0x42a627
  42a66a:	mov    esp,0x83ffccda
  42a66f:	call   FWORD PTR [edi+0x81129f]
  42a675:	(bad)  
  42a676:	inc    DWORD PTR [ebx-0x3b2ac829]
  42a67c:	add    BYTE PTR [eax],al
  42a67e:	(bad)  
  42a67f:	jmp    DWORD PTR [esi]
  42a681:	sbb    al,BYTE PTR [ebx]
  42a683:	pop    ebp
  42a684:	(bad)  
  42a685:	inc    DWORD PTR [eax]
  42a687:	int3   
  42a688:	xor    DWORD PTR fs:[eax+edx*8-0x1],esp
  42a68d:	(bad)  
  42a68e:	inc    DWORD PTR [ebx-0x2298e4a1]
  42a694:	(bad)  
  42a695:	dec    DWORD PTR [ecx-0x361bc301]
  42a69b:	repz add BYTE PTR [ecx-0x53ac0001],cl
  42a6a2:	bound  ecx,QWORD PTR [esi-0x76000001]
  42a6a8:	mov    esp,0xff80b910
  42a6ad:	(bad)  
  42a6ae:	inc    DWORD PTR [eax]
  42a6b0:	and    eax,0xffc64e88
  42a6b5:	inc    DWORD PTR [eax]
  42a6b7:	inc    DWORD PTR [ecx-0x7c5137c1]
  42a6bd:	add    bh,bh
  42a6bf:	push   ecx
  42a6c1:	adc    ecx,0x76
  42a6c4:	int3   
  42a6c5:	inc    DWORD PTR [ebx-0x5610fb00]
  42a6cb:	push   ds
  42a6cc:	inc    DWORD PTR [ebx+0x6c8cffff]
  42a6d2:	push   ebx
  42a6d3:	ds int3 
  42a6d5:	add    DWORD PTR [ebx+0x7152fc00],0x7c
  42a6dc:	add    BYTE PTR [eax],al
  42a6de:	inc    DWORD PTR [ebx-0x1856ea6b]
  42a6e4:	or     esp,0x0
  42a6e7:	inc    edx
  42a6e9:	icebp  
  42a6ea:	push   edi
  42a6eb:	sbb    eax,0xffff0000
  42a6f0:	ror    BYTE PTR [eax-0x7c00ea1f],cl
  42a6f6:	add    BYTE PTR [ecx-0x2bc6a8b0],cl
  42a6fc:	cmp    edi,0xffffffcc
  42a6ff:	call   DWORD PTR [esi]
  42a701:	clc    
  42a702:	dec    eax
  42a703:	fimul  WORD PTR [ecx-0x17ffff01]
  42a709:	sub    DWORD PTR [esi+0x89ff47],eax
  42a70f:	(bad)  
  42a710:	fsub   DWORD PTR ds:0xff3502
  42a716:	add    BYTE PTR [ebx-0x71065d21],al
  42a71c:	(bad)  
  42a71d:	(bad)  
  42a71e:	inc    DWORD PTR [eax]
  42a720:	clc    
  42a721:	dec    ecx
  42a722:	inc    eax
  42a723:	cwde   
  42a724:	inc    DWORD PTR [ebx-0x6ca60077]
  42a72a:	ins    DWORD PTR es:[edi],dx
  42a72b:	mov    DWORD PTR [eax],0xc1ff00ff
  42a731:	imul   ebx,DWORD PTR ds:0xffccff07,0xa420e9ff
  42a73b:	mov    ebx,0xffffffff
  42a740:	inc    ebp
  42a741:	adc    DWORD PTR [ecx+0xffff19],eax
  42a747:	jmp    DWORD PTR [eax]
  42a749:	sbb    DWORD PTR [edi],ebx
  42a74b:	(bad)  
  42a74d:	inc    DWORD PTR [eax]
  42a74f:	jmp    FWORD PTR [eax]
  42a751:	imul   ecx,DWORD PTR [edx+edi*8-0x7d],0xffffffff
  42a756:	inc    DWORD PTR [eax]
  42a758:	mov    ds:0x44895f,al
  42a75d:	mov    edi,edi
  42a75f:	push   edx
  42a761:	add    BYTE PTR [eax-0xffff0c],bh
  42a767:	call   edi
  42a769:	xchg   esi,eax
  42a76a:	aad    0xee
  42a76c:	inc    DWORD PTR [eax]
  42a76e:	cmp    edi,0xffffffa9
  42a771:	mov    ah,0xbd
  42a773:	inc    ebx
  42a774:	inc    DWORD PTR [ebx+0x7eb100ff]
  42a77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a77b:	lea    eax,[eax]
  42a77d:	int3   
  42a77e:	(bad)  
  42a77f:	(bad)  
  42a780:	out    dx,al
  42a781:	dec    ecx
  42a782:	fistp  WORD PTR [edi+edi*8]
  42a785:	(bad)  
  42a786:	dec    DWORD PTR [ecx+0x24ecf82c]
  42a78c:	cmp    edi,0xffffffff
  42a78f:	add    ch,ch
  42a791:	and    eax,0xff891ac1
  42a796:	add    bh,bh
  42a798:	(bad)  
  42a799:	stc    
  42a79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a79b:	inc    edi
  42a79c:	inc    DWORD PTR [eax]
  42a79e:	(bad)  
  42a79f:	inc    DWORD PTR [eiz*8-0x7c9ba9]
  42a7a6:	(bad)  
  42a7a7:	call   DWORD PTR [edx+0x5]
  42a7aa:	jae    0x42a824
  42a7ac:	add    bh,bh
  42a7ae:	cmp    edi,0x7f
  42a7b1:	push   esp
  42a7b2:	add    eax,0xffffff52
  42a7b7:	add    BYTE PTR [edi-0x3228a3],ch
  42a7bd:	(bad)  
  42a7be:	(bad)  
  42a7bf:	call   FWORD PTR [ecx]
  42a7c1:	aaa    
  42a7c2:	and    esi,DWORD PTR [edi-0x7c3301]
  42a7c8:	ins    BYTE PTR es:[edi],dx
  42a7c9:	pop    esp
  42a7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7cb:	ret    
  42a7cc:	mov    DWORD PTR [eax],eax
  42a7ce:	dec    DWORD PTR [ecx-0x6cfc450f]
  42a7d4:	add    ah,cl
  42a7d6:	add    ah,cl
  42a7d8:	daa    
  42a7d9:	jmp    0x42a7c5
  42a7db:	loope  0x42a7dc
  42a7dd:	inc    DWORD PTR [eax]
  42a7df:	mov    DWORD PTR [ecx-0x6c],esi
  42a7e2:	and    ecx,DWORD PTR [eax+eax*1+0x0]
  42a7e6:	(bad)  
  42a7e7:	call   edi
  42a7e9:	rol    BYTE PTR [ebx+0xffda],0x0
  42a7f0:	call   0x90b061
  42a7f5:	int3   
  42a7f6:	(bad)  
  42a7f7:	inc    DWORD PTR [ecx+0x66f58a]
  42a7fd:	inc    DWORD PTR [ebx-0x54bb6701]
  42a803:	xor    eax,0xcc83ff83
  42a808:	adc    BYTE PTR [ecx+0x14],al
  42a80b:	idiv   edi
  42a80d:	add    BYTE PTR [eax],al
  42a80f:	or     DWORD PTR [ebp-0x37],0xfffffff4
  42a813:	aaa    
  42a814:	inc    DWORD PTR [ebx+0x1e3c00ff]
  42a81a:	pop    ds
  42a81b:	data16 (bad) 
  42a81d:	(bad)  
  42a81e:	(bad)  
  42a81f:	(bad)  
  42a820:	cmp    esi,esi
  42a822:	das    
  42a823:	cs (bad) 
  42a825:	inc    DWORD PTR [eax]
  42a827:	sub    DWORD PTR [ecx+ebp*8],0xffffff81
  42a82b:	pop    eax
  42a82c:	add    bh,bh
  42a82e:	add    BYTE PTR [eax],al
  42a830:	mov    edx,0xff9f42bf
  42a835:	add    ah,cl
  42a837:	or     ecx,0x4c
  42a83a:	int    0x32
  42a83c:	cmp    edi,0xffffffff
  42a83f:	add    BYTE PTR [esi+0x7ebde],dh
  42a845:	inc    DWORD PTR [ebx-0xd64fa01]
  42a84b:	add    eax,DWORD PTR [eax]
  42a84d:	add    bh,bh
  42a84f:	dec    DWORD PTR [esi-0x16]
  42a852:	pmuludq mm0,QWORD PTR [eax]
  42a855:	add    DWORD PTR [ebx+0x6f8af700],0x3e
  42a85c:	add    BYTE PTR [eax],al
  42a85e:	add    DWORD PTR [eax],0xffffffb1
  42a861:	adc    DWORD PTR [ebx+0x5f],ebx
  42a864:	add    DWORD PTR [eax],0xffffffff
  42a867:	dec    ebx
  42a869:	retf   
  42a86a:	fiadd  WORD PTR [ebx-0x1]
  42a86d:	inc    DWORD PTR [eax]
  42a86f:	mov    esi,edx
  42a871:	mov    ebp,0xffff34cf
  42a876:	inc    DWORD PTR [eax]
  42a878:	pop    edi
  42a879:	mov    ebp,0xffff0640
  42a87e:	dec    esp
  42a880:	xor    esp,DWORD PTR [edx+eiz*2]
  42a883:	xchg   ecx,eax
  42a884:	inc    DWORD PTR [eax]
  42a886:	inc    DWORD PTR [eax]
  42a888:	cmp    eax,0xffaf89e1
  42a88d:	dec    esp
  42a88f:	sbb    DWORD PTR [edx+0x7e],0xffffff88
  42a893:	inc    edi
  42a894:	(bad)  
  42a895:	(bad)  
  42a896:	inc    DWORD PTR [ebx+0x55e3392d]
  42a89c:	dec    DWORD PTR [ecx+0x59fd0000]
  42a8a2:	dec    ebp
  42a8a3:	jne    0x42a8a5
  42a8a5:	add    BYTE PTR [eax],al
  42a8a7:	jmp    DWORD PTR [edi]
  42a8a9:	sub    dh,BYTE PTR [eax-0xff00bb]
  42a8af:	jmp    FWORD PTR [ebx-0xbb742b]
  42a8b5:	add    bh,bh
  42a8b7:	dec    DWORD PTR [edi]
  42a8b9:	dec    esp
  42a8ba:	ror    BYTE PTR [esp+ecx*8+0x78ff8300],cl
  42a8c1:	mov    ch,0x1b
  42a8c3:	(bad)  
  42a8c4:	add    bh,bh
  42a8c6:	(bad)  
  42a8c7:	call   FWORD PTR [esi-0x7c2eddbb]
  42a8cd:	(bad)  
  42a8ce:	inc    DWORD PTR [eax]
  42a8d0:	jns    0x42a93e
  42a8d2:	dec    ebx
  42a8d3:	xchg   edx,eax
  42a8d4:	add    BYTE PTR [ebx-0x5625ff01],al
  42a8da:	adc    al,BYTE PTR [eax]
  42a8dc:	cmp    edi,0xffffffff
  42a8df:	(bad)  
  42a8e0:	fstp   QWORD PTR [ebx+eax*1-0xff002d]
  42a8e7:	int3   
  42a8e8:	xor    ch,BYTE PTR [eax]
  42a8ea:	unpcklps xmm0,XMMWORD PTR [eax]
  42a8ed:	(bad)  
  42a8ee:	(bad)  
  42a8ef:	inc    DWORD PTR [esi-0xfd6370]
  42a8f5:	mov    DWORD PTR [eax],eax
  42a8f7:	cmp    DWORD PTR [ebp+eax*1-0xffe268],0x0
  42a8ff:	int3   
  42a900:	sub    edi,0xffffffc0
  42a903:	aad    0xff
  42a905:	cmp    edi,0xffffff89
  42a908:	leave  
  42a909:	jge    0x42a94f
  42a90b:	sub    edi,edi
  42a90d:	(bad)  
  42a90e:	(bad)  
  42a90f:	jmp    FWORD PTR [ebp+0x5]
  42a912:	or     eax,0x8300ff47
  42a917:	mov    DWORD PTR [ecx-0x8a24a7],edi
  42a91d:	inc    DWORD PTR [eax]
  42a91f:	inc    DWORD PTR [edi-0xa32598]
  42a925:	add    ah,cl
  42a927:	add    BYTE PTR [ecx-0x33112f],al
  42a92d:	inc    DWORD PTR [eax]
  42a92f:	dec    DWORD PTR [edi-0xe645ff]
  42a935:	dec    DWORD PTR [ecx+0x3ed295ff]
  42a93b:	mov    eax,ds:0xcc00
  42a940:	inc    esp
  42a941:	add    DWORD PTR [esi],ebp
  42a943:	fwait
  42a944:	(bad)  
  42a945:	(bad)  
  42a946:	(bad)  
  42a947:	(bad)  
  42a948:	cmp    BYTE PTR [ebp-0x76eaf4],bl
  42a94e:	inc    DWORD PTR [eax]
  42a950:	adc    DWORD PTR [ecx+0xffedf4],ecx
  42a956:	inc    DWORD PTR [eax]
  42a958:	(bad)  
  42a959:	push   ds
  42a95a:	mov    esp,0xff000005
  42a95f:	call   FWORD PTR [ebx-0x33e427ae]
  42a965:	add    BYTE PTR [ebx+0x658c8aff],al
  42a96b:	mov    BYTE PTR [eax],0xcc
  42a96e:	mov    edi,edi
  42a970:	dec    edx
  42a971:	or     dh,BYTE PTR [ecx-0x79]
  42a974:	add    ah,cl
  42a976:	inc    DWORD PTR [eax]
  42a978:	adc    al,BYTE PTR [edi+0x3120]
  42a97e:	(bad)  
  42a97f:	(bad)  
  42a980:	cmp    al,BYTE PTR [ecx-0x78]
  42a983:	mov    ds:0xff0083,eax
  42a988:	mov    WORD PTR cs:[ebp-0x7cf6],cs
  42a98f:	add    BYTE PTR [ebx-0x18],al
  42a992:	cdq    
  42a993:	mov    ch,0xff
  42a995:	add    DWORD PTR [eax],0x0
  42a998:	xchg   esi,eax
  42a999:	rcr    BYTE PTR [bp+di-0x1],1
  42a99d:	int3   
  42a99e:	(bad)  
  42a99f:	(bad)  
  42a9a0:	clc    
  42a9a1:	dec    eax
  42a9a2:	xchg   DWORD PTR [edi-0x7c7c7601],ebx
  42a9a8:	fs mov bh,0x3f
  42a9ab:	xor    bh,bh
  42a9ad:	inc    DWORD PTR [ebx-0x581db701]
  42a9b3:	cmp    BYTE PTR [ebx-0x72000000],al
  42a9b9:	cmc    
  42a9ba:	out    dx,al
  42a9bb:	ret    0xccff
  42a9be:	add    ah,cl
  42a9c0:	mov    eax,ds:0xff2d9eff
  42a9c5:	mov    esp,ecx
  42a9c7:	add    cl,ch
  42a9c9:	popa   
  42a9ca:	pop    edi
  42a9cb:	lock inc DWORD PTR [eax]
  42a9ce:	inc    DWORD PTR [ebx-0x7cc36cde]
  42a9d4:	dec    esp
  42a9d6:	cmp    edi,0xffffff91
  42a9d9:	fst    DWORD PTR [eax+0x16]
  42a9dc:	add    DWORD PTR [eax],0xffffffff
  42a9df:	call   FWORD PTR [ebp-0x45]
  42a9e2:	cmp    eax,0xff83005b
  42a9e7:	push   DWORD PTR [edx+0xac2beb]
  42a9ed:	int3   
  42a9ee:	inc    DWORD PTR [eax]
  42a9f0:	push   cs
  42a9f1:	out    dx,eax
  42a9f2:	imul   edi,esi,0x8383
  42a9f8:	sti    
  42a9f9:	and    DWORD PTR ds:[edi-0x7d],esi
  42a9fd:	add    bh,bh
  42a9ff:	jmp    DWORD PTR [edx]
  42aa01:	clts   
  42aa03:	mov    bl,0xff
  42aa05:	inc    DWORD PTR [eax]
  42aa07:	add    DWORD PTR [ebp*1+0xff4a51],0x0
  42aa0f:	or     edi,0x71
  42aa12:	mov    cl,0xc0
  42aa14:	mov    esp,ecx
  42aa16:	(bad)  
  42aa17:	(bad)  
  42aa18:	cld    
  42aa19:	inc    esi
  42aa1a:	leave  
  42aa1b:	mov    ch,0xff
  42aa1d:	(bad)  
  42aa1e:	(bad)  
  42aa1f:	push   edi
  42aa21:	inc    edx
  42aa22:	arpl   WORD PTR [edi],bx
  42aa24:	add    bh,bh
  42aa26:	add    BYTE PTR [ebx-0x1adf21ce],al
  42aa2c:	mov    DWORD PTR [ebx+0x30e40000],eax
  42aa32:	retf   
  42aa33:	inc    ecx
  42aa34:	add    bh,bh
  42aa36:	add    DWORD PTR [eax],0xffffff99
  42aa39:	xor    BYTE PTR [esp+ebx*2-0x7cff01],dh
  42aa40:	xchg   DWORD PTR ds:0xffff91fb,esp
  42aa46:	(bad)  
  42aa47:	jmp    edx
  42aa49:	mov    al,0xca
  42aa4b:	test   DWORD PTR [eax],eax
  42aa4d:	inc    DWORD PTR [eax]
  42aa4f:	add    BYTE PTR [ebx-0x30],dh
  42aa52:	mov    cl,0xde
  42aa54:	add    ah,cl
  42aa56:	add    bh,bh
  42aa58:	cmp    BYTE PTR ds:0x89ff2720,cl
  42aa5e:	add    DWORD PTR [eax],0xfffffff2
  42aa61:	fwait
  42aa62:	sub    BYTE PTR [ebp-0x3300007d],0x28
  42aa69:	pop    ds
  42aa6a:	push   cs
  42aa6b:	push   0xff838900
  42aa70:	ja     0x42aa54
  42aa72:	sub    cl,BYTE PTR [ebp-0x1]
  42aa75:	add    BYTE PTR [eax],al
  42aa77:	add    BYTE PTR [edi],ch
  42aa79:	cmp    dl,al
  42aa7b:	sbb    eax,DWORD PTR [eax]
  42aa7d:	(bad)  
  42aa7e:	(bad)  
  42aa7f:	call   FWORD PTR ds:0xffb76cb2
  42aa85:	mov    DWORD PTR [ebx+0xf74ce83],eax
  42aa8b:	in     eax,dx
  42aa8c:	(bad)  
  42aa8d:	inc    DWORD PTR [eax]
  42aa8f:	xor    DWORD PTR [eax+0x5e],0xffffffcb
  42aa93:	pushf  
  42aa94:	cmp    edi,0xffffffff
  42aa97:	inc    ecx
  42aa99:	fmul   DWORD PTR [edx-0x3f]
  42aa9c:	(bad)  
  42aa9d:	(bad)  
  42aa9e:	(bad)  
  42aa9f:	push   edi
  42aaa1:	inc    ebx
  42aaa2:	ret    0xffa7
  42aaa5:	add    BYTE PTR [ebx-0x306ca201],al
  42aaab:	pop    es
  42aaac:	inc    DWORD PTR [eax]
  42aaae:	(bad)  
  42aaaf:	dec    edx
  42aab1:	retf   
  42aab2:	xchg   ebx,eax
  42aab3:	inc    BYTE PTR [eax]
  42aab5:	(bad)  
  42aab6:	(bad)  
  42aab7:	inc    DWORD PTR [ebp+0xe3be91]
  42aabd:	add    BYTE PTR [eax],al
  42aabf:	add    BYTE PTR [edi-0xe806e2],ah
  42aac5:	add    bh,bh
  42aac7:	add    BYTE PTR [ebp+esi*4+0xff6588],ch
  42aace:	add    bh,bh
  42aad0:	test   ch,bl
  42aad2:	int3   
  42aad3:	mov    edi,0xff83ffff
  42aad8:	ror    DWORD PTR [ecx-0x7d6d],0x0
  42aadf:	add    BYTE PTR [ecx-0x6c],dh
  42aae2:	jg     0x42ab2b
  42aae4:	mov    esp,ecx
  42aae6:	inc    DWORD PTR [eax]
  42aae8:	push   eax
  42aae9:	sub    cl,BYTE PTR [edi-0x10]
  42aaec:	(bad)  
  42aaed:	inc    DWORD PTR [ebx+0x71856000]
  42aaf3:	test   al,0x0
  42aaf5:	add    BYTE PTR [ebx-0x6011a100],al
  42aafb:	pusha  
  42aafc:	(bad)  
  42aafd:	inc    DWORD PTR [eax]
  42aaff:	add    BYTE PTR [ecx-0x18],ah
  42ab02:	dec    eax
  42ab03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab04:	cmp    edi,0xffffffff
  42ab07:	jmp    FWORD PTR [ebp-0xca62ae]
  42ab0d:	add    BYTE PTR [ecx-0x34adc01],cl
  42ab13:	xor    DWORD PTR [eax],eax
  42ab15:	int3   
  42ab16:	dec    esp
  42ab18:	fld    QWORD PTR [edx]
  42ab1a:	xchg   BYTE PTR [ecx-0x1],cl
  42ab1d:	add    BYTE PTR [ebx+0x38be62ff],al
  42ab23:	mov    al,0xff
  42ab25:	add    DWORD PTR [ebx-0x28601501],0x3
  42ab2c:	add    bh,bh
  42ab2e:	(bad)  
  42ab2f:	(bad)  
  42ab30:	jl     0x42aaec
  42ab32:	and    DWORD PTR [esi],eax
  42ab34:	mov    DWORD PTR [eax],eax
  42ab36:	(bad)  
  42ab37:	(bad)  
  42ab38:	fimul  DWORD PTR [edx]
  42ab3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab3b:	or     edi,edi
  42ab3d:	add    bh,bh
  42ab3f:	call   FWORD PTR [ecx-0x6185c7]
  42ab45:	int3   
  42ab46:	inc    DWORD PTR [ebx+0x7a9a5852]
  42ab4c:	inc    DWORD PTR [eax]
  42ab4e:	(bad)  
  42ab4f:	dec    DWORD PTR [ebp+0x2e]
  42ab52:	pop    ecx
  42ab53:	jns    0x42ab54
  42ab55:	(bad)  
  42ab56:	(bad)  
  42ab57:	dec    DWORD PTR [ecx-0xf9bf82]
  42ab5d:	inc    DWORD PTR [eax]
  42ab5f:	mov    DWORD PTR [edx+edi*2],ebp
  42ab62:	inc    esp
  42ab63:	fwait
  42ab64:	int3   
  42ab65:	(bad)  
  42ab66:	inc    DWORD PTR [eax]
  42ab68:	jne    0x42ab34
  42ab6a:	out    0x77,al
  42ab6c:	inc    DWORD PTR [eax]
  42ab6e:	dec    DWORD PTR [ecx+0x254c8e3e]
  42ab74:	inc    DWORD PTR [eax]
  42ab76:	add    bh,bh
  42ab78:	sbb    al,0xfc
  42ab7a:	pop    eax
  42ab7b:	inc    edi
  42ab7c:	dec    DWORD PTR [ecx+0x3df30000]
  42ab82:	test   DWORD PTR [ecx],esp
  42ab84:	add    BYTE PTR [ebx-0x3c16ff7d],al
  42ab8a:	inc    edx
  42ab8b:	nop
  42ab8c:	(bad)  
  42ab8d:	inc    DWORD PTR [eax]
  42ab8f:	add    BYTE PTR [eax-0x9e61ec],al
  42ab95:	add    BYTE PTR [ebx+0x47473dcc],al
  42ab9b:	loopne 0x42ab20
  42ab9d:	add    bh,bh
  42ab9f:	push   DWORD PTR [edi-0x34]
  42aba2:	inc    esi
  42aba3:	sti    
  42aba4:	(bad)  
  42aba5:	(bad)  
  42aba6:	dec    esp
  42aba8:	pop    edx
  42aba9:	das    
  42abaa:	lahf   
  42abab:	pop    esi
  42abac:	add    bh,bh
  42abae:	(bad)  
  42abaf:	dec    DWORD PTR [esi+0x6f]
  42abb2:	or     eax,0xcc835a
  42abb7:	add    BYTE PTR [eax-0x11],bl
  42abba:	fld    TBYTE PTR [edx+0xffffff]
  42abc0:	pop    eax
  42abc1:	pop    esi
  42abc2:	in     eax,0x38
  42abc4:	add    DWORD PTR [ebx+0x31feff00],0xffffffdb
  42abcb:	jne    0x42abcc
  42abcd:	add    BYTE PTR [ebx-0x571d7a00],al
  42abd3:	out    0xcc,eax
  42abd5:	add    BYTE PTR [eax],al
  42abd7:	add    bh,cl
  42abd9:	inc    edi
  42abda:	lahf   
  42abdb:	test   ah,cl
  42abdd:	(bad)  
  42abde:	(bad)  
  42abdf:	(bad)  
  42abe0:	jg     0x42abb3
  42abe2:	mov    ah,0xba
  42abe4:	(bad)  
  42abe5:	dec    DWORD PTR [ecx+0x49b47089]
  42abeb:	jbe    0x42abec
  42abed:	add    BYTE PTR [ebx-0x6260c534],al
  42abf3:	mov    bh,0x83
  42abf5:	inc    DWORD PTR [ebx+0x20a71000]
  42abfb:	inc    eax
  42abfc:	(bad)  
  42abfd:	inc    DWORD PTR [eax]
  42abff:	inc    DWORD PTR [ebx-0x97a29d]
  42ac05:	mov    edi,edi
  42ac07:	jmp    DWORD PTR [esp]
  42ac0a:	stc    
  42ac0b:	and    eax,0xffff0000
  42ac10:	sbb    BYTE PTR [edx-0xff8a],ah
  42ac16:	dec    esp
  42ac18:	dec    ecx
  42ac19:	sub    al,0x16
  42ac1b:	mov    bh,bh
  42ac1d:	inc    DWORD PTR [eax]
  42ac1f:	call   FWORD PTR [eax]
  42ac21:	call   0x89cc4f89
  42ac26:	(bad)  
  42ac27:	dec    DWORD PTR [ecx+edx*8]
  42ac2a:	xor    eax,ecx
  42ac2c:	(bad)  
  42ac2d:	(bad)  
  42ac2e:	(bad)  
  42ac2f:	inc    edx
  42ac31:	mov    ?,WORD PTR [ecx+0x63]
  42ac34:	inc    DWORD PTR [eax]
  42ac36:	add    bh,bh
  42ac38:	popa   
  42ac39:	and    BYTE PTR [eax],cl
  42ac3b:	fild   WORD PTR [eax]
  42ac3d:	inc    DWORD PTR [ebx+0x10f8dbff]
  42ac43:	inc    ebp
  42ac44:	mov    DWORD PTR [eax],eax
  42ac46:	inc    DWORD PTR [eax]
  42ac48:	ins    DWORD PTR es:[edi],dx
  42ac49:	leave  
  42ac4a:	sbb    BYTE PTR [edi+0x83ff00],bh
  42ac50:	mov    DWORD PTR [edi-0x9],0xffff9c
  42ac57:	add    BYTE PTR [ebx-0x336041ae],ah
  42ac5d:	add    BYTE PTR [eax],al
  42ac5f:	add    BYTE PTR [ebx-0x39],ah
  42ac62:	or     al,0xfa
  42ac64:	inc    DWORD PTR [eax]
  42ac66:	inc    DWORD PTR [eax]
  42ac68:	div    BYTE PTR [edx-0x1262]
  42ac6e:	add    DWORD PTR [ebx+0x7ebad8bc],0xffffffff
  42ac75:	add    BYTE PTR [ecx+0x78d15cc],cl
  42ac7b:	fiadd  DWORD PTR [eax]
  42ac7d:	add    bh,bh
  42ac7f:	add    BYTE PTR [ebx+0x2f],bh
  42ac82:	scas   eax,DWORD PTR es:[edi]
  42ac83:	dec    ebx
  42ac84:	mov    DWORD PTR [eax],eax
  42ac86:	inc    DWORD PTR [eax]
  42ac88:	ret    0xbb03
  42ac8b:	or     BYTE PTR [eax],al
  42ac8d:	inc    DWORD PTR [eax]
  42ac8f:	push   DWORD PTR [eax-0x3f]
  42ac92:	cmp    DWORD PTR [ebp-0xffff7d],ecx
  42ac98:	imul   eax,DWORD PTR [esi],0xff83dcb7
  42ac9e:	(bad)  
  42ac9f:	inc    DWORD PTR [esi+edx*1-0x3b]
  42aca3:	(bad)  
  42aca4:	int3   
  42aca5:	mov    DWORD PTR [eax],eax
  42aca7:	dec    edi
  42aca9:	mov    ecx,eax
  42acab:	stc    
  42acac:	add    ah,cl
  42acae:	or     DWORD PTR [ecx+0x6a2f93ae],0xffffff83
  42acb5:	dec    DWORD PTR [ecx+0x655bd789]
  42acbb:	fld    DWORD PTR [eax]
  42acbd:	inc    DWORD PTR [eax]
  42acbf:	call   DWORD PTR [esi+0xdb3e56]
  42acc5:	int3   
  42acc6:	dec    esp
  42acc8:	(bad)  
  42acca:	int    0x5e
  42accc:	int3   
  42accd:	int3   
  42acce:	add    bh,bh
  42acd0:	sbb    bh,al
  42acd2:	pop    ecx
  42acd3:	or     al,0xff
  42acd5:	inc    DWORD PTR [eax]
  42acd7:	int3   
  42acd8:	aaa    
  42acd9:	add    DWORD PTR [edi+0xffcc81],esp
  42acdf:	add    bh,dh
  42ace1:	imul   ebp,DWORD PTR [ecx-0xff0075],0x0
  42ace8:	stos   BYTE PTR es:[edi],al
  42ace9:	xor    DWORD PTR [esi-0x767cd5],ebp
  42acef:	call   FWORD PTR [edx+edx*8]
  42acf2:	push   edi
  42acf3:	je     0x42acf4
  42acf5:	(bad)  
  42acf6:	dec    DWORD PTR [ecx+0x4c04d393]
  42acfc:	(bad)  
  42acfd:	inc    DWORD PTR [eax]
  42acff:	mov    ebx,ecx
  42ad01:	fwait
  42ad02:	add    al,0xd
  42ad04:	int3   
  42ad05:	add    DWORD PTR [eax],0xffffffcc
  42ad08:	fdiv   QWORD PTR [ebx+0xd]
  42ad0b:	sbb    BYTE PTR [ebx+0x3ffffff],al
  42ad11:	and    BYTE PTR ds:0xffffcc77,0xff
  42ad18:	xlat   BYTE PTR ds:[ebx]
  42ad19:	mov    cl,0x77
  42ad1b:	pop    ebx
  42ad1c:	mov    DWORD PTR [ebx-0x61730000],eax
  42ad22:	ins    BYTE PTR es:[edi],dx
  42ad23:	js     0x42ad24
  42ad25:	mov    DWORD PTR [ebx+0x3e38e300],eax
  42ad2b:	nop
  42ad2c:	(bad)  
  42ad2d:	(bad)  
  42ad2e:	(bad)  
  42ad2f:	push   eax
  42ad31:	or     eax,0x8900e134
  42ad36:	add    bh,bh
  42ad38:	mov    BYTE PTR [edx-0x572],al
  42ad3e:	(bad)  
  42ad3f:	(bad)  
  42ad40:	mov    ebp,0xff07c13b
  42ad45:	cmp    edi,0xffffff89
  42ad48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad49:	data16 jmp 0x42acf7
  42ad4c:	dec    esp
  42ad4e:	add    bh,bh
  42ad50:	stos   DWORD PTR es:[edi],eax
  42ad51:	pop    edi
  42ad52:	popf   
  42ad53:	(bad)  
  42ad55:	(bad)  
  42ad56:	(bad)  
  42ad57:	call   esi
  42ad59:	hlt    
  42ad5a:	mov    ch,0x4
  42ad5c:	inc    DWORD PTR [eax]
  42ad5e:	add    bh,bh
  42ad60:	mov    al,0xd8
  42ad62:	push   edi
  42ad63:	sar    edi,cl
  42ad65:	or     esp,0xffffffff
  42ad68:	stos   BYTE PTR es:[edi],al
  42ad69:	jp     0x42ad06
  42ad6b:	cmp    bh,0xcc
  42ad6e:	add    BYTE PTR [eax],al
  42ad70:	imul   esi,DWORD PTR [eax-0x7c009dc3],0xc796ffff
  42ad7a:	xchg   ebp,eax
  42ad7b:	ja     0x42ad06
  42ad7d:	add    BYTE PTR [ebx-0x67175401],al
  42ad83:	lods   al,BYTE PTR ds:[esi]
  42ad84:	add    BYTE PTR [eax],al
  42ad86:	inc    DWORD PTR [ebx-0x48aad735]
  42ad8c:	add    bh,bh
  42ad8e:	inc    DWORD PTR [eax]
  42ad90:	icebp  
  42ad91:	and    esi,DWORD PTR [eax]
  42ad93:	jle    0x42ad95
  42ad95:	add    BYTE PTR [ecx-0x2e26e401],cl
  42ad9b:	es dec esp
  42ad9e:	add    bh,bh
  42ada0:	mov    al,ds:0xff28a171
  42ada5:	inc    DWORD PTR [eax]
  42ada7:	and    DWORD PTR [esi+0xf66534],0xffffffff
  42adae:	inc    DWORD PTR [eax]
  42adb0:	xchg   ah,bl
  42adb2:	stos   DWORD PTR es:[edi],eax
  42adb3:	or     eax,0xccff
  42adb8:	jecxz  0x42addb
  42adba:	pushf  
  42adbb:	cmp    edi,edi
  42adbd:	inc    DWORD PTR [eax]
  42adbf:	jmp    DWORD PTR [ecx+0x1c]
  42adc2:	xchg   ecx,eax
  42adc3:	lods   eax,DWORD PTR ds:[esi]
  42adc4:	add    BYTE PTR [eax],al
  42adc6:	inc    DWORD PTR [eax]
  42adc8:	add    ch,BYTE PTR [edi+0x55]
  42adcb:	or     al,0x0
  42adcd:	(bad)  
  42adce:	inc    DWORD PTR [ebx-0x4796b902]
  42add4:	(bad)  
  42add5:	inc    DWORD PTR [eax]
  42add7:	(bad)  
  42add8:	jns    0x42adbf
  42adda:	fadd   DWORD PTR [ebp-0x7d]
  42addd:	add    DWORD PTR [ebx+0x704b6ff],0x1b
  42ade4:	add    bh,bh
  42ade6:	(bad)  
  42ade7:	inc    esp
  42ade9:	and    ebx,esi
  42adeb:	mov    esi,0xccffffff
  42adf0:	nop
  42adf1:	mov    dl,0x79
  42adf3:	mov    ah,0xff
  42adf5:	add    BYTE PTR [ebx-0x5fcaf277],al
  42adfb:	dec    edx
  42adfc:	mov    edi,edi
  42adfe:	add    BYTE PTR [eax],al
  42ae00:	push   esi
  42ae01:	test   al,0xc3
  42ae03:	jecxz  0x42ad88
  42ae05:	dec    DWORD PTR [ecx-0x16dc8700]
  42ae0b:	mov    ecx,0x838900ff
  42ae10:	stc    
  42ae11:	enter  0x3406,0xff
  42ae15:	inc    DWORD PTR [eax]
  42ae17:	add    BYTE PTR [eax-0x76ab0153],dl
  42ae1d:	or     DWORD PTR [ecx-0x34594401],0x61
  42ae24:	mov    edi,edi
  42ae26:	add    BYTE PTR [eax],al
  42ae28:	popf   
  42ae29:	sahf   
  42ae2a:	cmp    al,0x1e
  42ae2c:	dec    esp
  42ae2e:	inc    DWORD PTR [eax]
  42ae30:	push   esp
  42ae31:	mov    al,ds:0x3f5d
  42ae36:	dec    esp
  42ae38:	push   edi
  42ae39:	dec    esi
  42ae3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae3b:	repz (bad) 
  42ae3d:	inc    DWORD PTR [eax]
  42ae3f:	add    BYTE PTR [edi-0x769f9d98],al
  42ae45:	int3   
  42ae46:	inc    DWORD PTR [ebx+0x759b78c9]
  42ae4c:	inc    DWORD PTR [eax]
  42ae4e:	inc    DWORD PTR [eax]
  42ae50:	outs   dx,DWORD PTR ds:[esi]
  42ae51:	lods   eax,DWORD PTR cs:[esi]
  42ae53:	(bad)  
  42ae55:	(bad)  
  42ae56:	(bad)  
  42ae57:	push   DWORD PTR [ebp+0xc3a653]
  42ae5d:	add    BYTE PTR [ebx+0x45167eff],al
  42ae63:	jnp    0x42ae64
  42ae65:	add    BYTE PTR [eax],al
  42ae67:	int3   
  42ae68:	stos   DWORD PTR es:[edi],eax
  42ae69:	pop    edx
  42ae6a:	sub    BYTE PTR [edx-0xff0100],bh
  42ae70:	jbe    0x42ae0a
  42ae72:	jg     0x42ae4d
  42ae74:	inc    DWORD PTR [eax]
  42ae76:	add    DWORD PTR [eax],0xffffffdd
  42ae79:	sub    al,0x48
  42ae7b:	cli    
  42ae7c:	int3   
  42ae7d:	(bad)  
  42ae7e:	(bad)  
  42ae7f:	jmp    DWORD PTR [ebx+0x30]
  42ae82:	jae    0x42ae65
  42ae84:	add    BYTE PTR [ecx+0x53720000],cl
  42ae8a:	out    0x5d,eax
  42ae8c:	cmp    edi,0xffffffff
  42ae8f:	and    DWORD PTR [ebp-0x7c0e762b],0xffffffff
  42ae96:	dec    esp
  42ae98:	lea    ebx,[ebp-0x33e7fb]
  42ae9e:	int3   
  42ae9f:	inc    DWORD PTR [ebp-0x2d]
  42aea2:	xor    ch,cl
  42aea4:	add    bh,bh
  42aea6:	int3   
  42aea7:	add    BYTE PTR [edi-0x38],bh
  42aeaa:	dec    esi
  42aeab:	addr16 (bad) 
  42aead:	(bad)  
  42aeae:	(bad)  
  42aeaf:	inc    ebx
  42aeb1:	addr16 je 0x42aed1
  42aeb4:	inc    DWORD PTR [eax]
  42aeb6:	inc    DWORD PTR [eax]
  42aeb8:	lahf   
  42aeb9:	mov    ch,0x9b
  42aebb:	(bad)  
  42aebc:	inc    DWORD PTR [ebx+0x1ffaff00]
  42aec2:	pop    ebx
  42aec3:	jmp    0xcd42ae94
  42aec8:	lods   eax,DWORD PTR ds:[esi]
  42aec9:	sbb    BYTE PTR [ecx-0xff3f],dl
  42aecf:	mov    DWORD PTR [edi],esp
  42aed1:	mov    ebx,0xc65e
  42aed6:	add    BYTE PTR [eax],al
  42aed8:	cmovo  edi,DWORD PTR [ecx]
  42aedb:	mov    ch,0xff
  42aedd:	add    DWORD PTR [ebx+0x7ed400ff],0xffffffec
  42aee4:	inc    DWORD PTR [eax]
  42aee6:	add    DWORD PTR [ebx+0x21efa99b],0xffffffff
  42aeed:	mov    DWORD PTR [ebx+0x3a52a9ff],eax
  42aef3:	idiv   bh
  42aef5:	cmp    edi,0xffffffff
  42aef8:	or     BYTE PTR ds:0x24fc,al
  42aefe:	inc    DWORD PTR [ebx-0x713c5a22]
  42af04:	inc    DWORD PTR [eax]
  42af06:	add    BYTE PTR [ebx+0x5020b6dc],al
  42af0c:	(bad)  
  42af0d:	(bad)  
  42af0e:	inc    DWORD PTR [eax]
  42af10:	sar    DWORD PTR [edi-0x7600a16d],0xff
  42af17:	dec    DWORD PTR [eax]
  42af19:	push   0xffffffaa
  42af1b:	loope  0x42aea6
  42af1d:	inc    DWORD PTR [eax]
  42af1f:	dec    DWORD PTR [ebp+0x6b]
  42af22:	dec    edx
  42af23:	dec    ecx
  42af24:	add    BYTE PTR [eax],al
  42af26:	(bad)  
  42af27:	(bad)  
  42af28:	fbstp  TBYTE PTR [esi]
  42af2a:	mov    edx,0x83ff83df
  42af2f:	push   edx
  42af31:	in     al,dx
  42af32:	and    esp,DWORD PTR [edx]
  42af34:	cmp    edi,0x0
  42af37:	int3   
  42af38:	arpl   WORD PTR ds:[ecx-0x72],bp
  42af3c:	add    ah,cl
  42af3e:	inc    DWORD PTR [ebx+0x30161d57]
  42af44:	or     DWORD PTR [ecx+0xcc9ffff],0xffffff93
  42af4b:	add    DWORD PTR [bx+si],0xffffffcc
  42af4f:	mov    DWORD PTR [esp+eax*2+0x1e],ebp
  42af53:	cmp    eax,DWORD PTR [ebx+0x6c838300]
  42af59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af5a:	mov    es,WORD PTR [edx]
  42af5c:	(bad)  
  42af5d:	(bad)  
  42af5e:	(bad)  
  42af5f:	call   FWORD PTR [ecx]
  42af61:	(bad)  
  42af62:	(bad)  
  42af63:	aam    0x0
  42af65:	inc    DWORD PTR [ebx-0x7a3f6100]
  42af6b:	push   ds
  42af6c:	dec    esp
  42af6e:	(bad)  
  42af6f:	dec    edx
  42af71:	loop   0x42aefb
  42af73:	xchg   esp,eax
  42af74:	add    bh,bh
  42af76:	add    BYTE PTR [ebx+0x10211f43],al
  42af7c:	add    BYTE PTR [eax],al
  42af7e:	add    BYTE PTR [eax],al
  42af80:	add    BYTE PTR ds:0x8349cc,dh
  42af86:	int3   
  42af87:	call   FWORD PTR [ecx]
  42af89:	in     al,dx
  42af8a:	cmc    
  42af8b:	popa   
  42af8c:	add    ah,cl
  42af8e:	(bad)  
  42af8f:	call   DWORD PTR [edi-0xde6d]
  42af95:	(bad)  
  42af96:	(bad)  
  42af97:	(bad)  
  42af98:	aas    
  42af99:	xor    al,0xd
  42af9b:	out    0x83,eax
  42af9d:	inc    DWORD PTR [eax]
  42af9f:	dec    DWORD PTR [edi-0x7dd57]
  42afa5:	(bad)  
  42afa6:	(bad)  
  42afa7:	jmp    DWORD PTR [edi]
  42afa9:	in     eax,0xaa
  42afab:	scas   al,BYTE PTR es:[edi]
  42afac:	cmp    edi,0xffffffcc
  42afaf:	(bad)  
  42afb0:	aas    
  42afb1:	add    al,0x3
  42afb3:	repnz cmp edi,0x0
  42afb7:	add    BYTE PTR [esi+0x24],bl
  42afba:	std    
  42afbb:	push   esp
  42afbc:	add    bh,bh
  42afbe:	(bad)  
  42afbf:	jmp    DWORD PTR [ebx]
  42afc1:	adc    DWORD PTR [esi-0x6b],0x0
  42afc5:	int3   
  42afc6:	(bad)  
  42afc7:	(bad)  
  42afc8:	mov    ebx,0xccc2eb55
  42afcd:	add    BYTE PTR [eax],al
  42afcf:	add    BYTE PTR [eax-0x7c8aacf5],al
  42afd5:	(bad)  
  42afd6:	dec    esp
  42afd8:	sub    eax,0xffe6a7f2
  42afdd:	dec    esp
  42afdf:	(bad)  
  42afe0:	fistp  WORD PTR [edi]
  42afe2:	add    DWORD PTR [ecx-0x7d],0x6f000083
  42afe9:	fwait
  42afea:	adc    dl,BYTE PTR [eax-0x34]
  42afed:	int3   
  42afee:	add    bh,bh
  42aff0:	outs   dx,BYTE PTR ds:[esi]
  42aff1:	and    edi,DWORD PTR [edx]
  42aff3:	and    eax,0xffffffcc
  42aff8:	loopne 0x42b00a
  42affa:	(bad)  
  42affb:	mov    edi,0xffff00ff
  42b000:	xor    eax,0xff7dafdd
  42b005:	inc    DWORD PTR [eax]
  42b007:	jmp    DWORD PTR [edi-0x80]
  42b00a:	or     DWORD PTR [ebx],esi
  42b00c:	int3   
  42b00d:	add    BYTE PTR [ebx+0x18f78d83],al
  42b013:	sar    edi,cl
  42b015:	add    BYTE PTR [eax],al
  42b017:	add    BYTE PTR [edx+0x12],dl
  42b01a:	dec    esp
  42b01b:	jnp    0x42b01c
  42b01d:	add    BYTE PTR [ebx+0xfd4a4ff],al
  42b023:	mov    esi,0xffff00cc
  42b028:	(bad)  
  42b029:	dec    esi
  42b02a:	aas    
  42b02b:	clc    
  42b02c:	dec    esp
  42b02e:	add    BYTE PTR [eax],al
  42b030:	lock push ebp
  42b032:	mul    BYTE PTR [ebx-0x10000]
  42b038:	daa    
  42b039:	fmulp  st(2),st
  42b03b:	adc    bh,bh
  42b03d:	(bad)  
  42b03e:	inc    DWORD PTR [eax]
  42b040:	fisttp WORD PTR [ebp-0x6]
  42b043:	cmp    BYTE PTR [eax],al
  42b045:	add    bh,bh
  42b047:	inc    DWORD PTR [esi+0xbe0f3]
  42b04d:	inc    DWORD PTR [ebx-0x448c1501]
  42b053:	(bad)  
  42b054:	(bad)  
  42b055:	inc    DWORD PTR [eax]
  42b057:	push   edi
  42b059:	mov    edx,0xff83e38a
  42b05e:	dec    DWORD PTR [ecx-0x15cd491]
  42b064:	(bad)  
  42b065:	dec    DWORD PTR [ecx-0x6deddd00]
  42b06b:	cmp    edi,0xffffffff
  42b06e:	mov    edi,edi
  42b070:	pop    esi
  42b071:	or     al,0x7d
  42b073:	or     al,BYTE PTR [ebx+0x3e008989]
  42b079:	add    al,0xb9
  42b07b:	stc    
  42b07c:	int3   
  42b07d:	inc    DWORD PTR [ebx-0x226bfd7d]
  42b083:	inc    DWORD PTR ds:[ebx+0x52bd0083]
  42b08a:	stos   DWORD PTR es:[edi],eax
  42b08b:	ins    DWORD PTR es:[edi],dx
  42b08c:	cmp    edi,0xffffff83
  42b08f:	add    BYTE PTR [eax-0x75],dh
  42b092:	adc    esp,DWORD PTR [edx]
  42b094:	add    BYTE PTR [eax],al
  42b096:	(bad)  
  42b097:	(bad)  
  42b098:	jmp    0xbaf07e
  42b09d:	add    BYTE PTR [ecx-0x43497801],cl
  42b0a3:	xor    eax,0xff0000ff
  42b0a8:	es test al,0xc9
  42b0ab:	cdq    
  42b0ac:	mov    DWORD PTR [ebx-0x637d3334],eax
  42b0b2:	mov    DWORD PTR [edx],ebx
  42b0b4:	add    BYTE PTR [eax],al
  42b0b6:	(bad)  
  42b0b7:	call   FWORD PTR [ebp-0x33c7c3e7]
  42b0bd:	dec    esp
  42b0bf:	cmp    DWORD PTR [ebx+esi*8],0x51
  42b0c3:	xchg   ecx,eax
  42b0c4:	mov    DWORD PTR [eax],eax
  42b0c6:	(bad)  
  42b0c7:	inc    ebx
  42b0c9:	mov    BYTE PTR [ebx-0x33ff52],cl
  42b0cf:	mov    DWORD PTR [esi],edx
  42b0d1:	and    BYTE PTR [ecx],bl
  42b0d3:	je     0x42b0d4
  42b0d5:	add    BYTE PTR [eax],al
  42b0d7:	add    BYTE PTR [edx-0x33432e48],bl
  42b0dd:	add    DWORD PTR [eax],0xffffffff
  42b0e0:	cmp    bl,ch
  42b0e2:	push   esi
  42b0e3:	outs   dx,BYTE PTR ds:[esi]
  42b0e4:	add    bh,bh
  42b0e6:	add    bh,bh
  42b0e8:	fsubr  QWORD PTR [edx-0x41]
  42b0eb:	dec    esi
  42b0ec:	inc    DWORD PTR [eax]
  42b0ee:	cmp    edi,0x7d
  42b0f1:	lods   eax,DWORD PTR ds:[esi]
  42b0f2:	iret   
  42b0f3:	icebp  
  42b0f4:	inc    DWORD PTR [eax]
  42b0f6:	or     esp,0x12
  42b0f9:	jg     0x42b0a7
  42b0fb:	jge    0x42b0fc
  42b0fd:	inc    DWORD PTR [ebx-0x57fb7901]
  42b103:	test   BYTE PTR [eax],0x0
  42b106:	add    BYTE PTR [eax],al
  42b108:	push   edi
  42b109:	or     ecx,DWORD PTR [eax-0x3333ff72]
  42b10f:	adc    DWORD PTR [edi+0x23],0x41
  42b113:	stos   DWORD PTR es:[edi],eax
  42b114:	add    BYTE PTR [eax],al
  42b116:	mov    DWORD PTR [eax],eax
  42b118:	xchg   ebx,eax
  42b119:	retf   0x5d4e
  42b11c:	(bad)  
  42b11d:	(bad)  
  42b11e:	(bad)  
  42b11f:	inc    eax
  42b121:	iret   
  42b122:	jecxz  0x42b16b
  42b124:	inc    DWORD PTR [eax]
  42b126:	mov    DWORD PTR [eax],eax
  42b128:	adc    eax,0xffa886f9
  42b12d:	inc    DWORD PTR [eax]
  42b12f:	add    BYTE PTR [edi-0x68baca],ah
  42b135:	add    bh,bh
  42b137:	add    BYTE PTR [esi-0xf967e],dh
  42b13d:	dec    DWORD PTR [ecx+0x5128b0ff]
  42b143:	cmp    al,BYTE PTR [eax]
  42b145:	(bad)  
  42b146:	(bad)  
  42b147:	push   DWORD PTR [eax-0x7e7bab]
  42b14d:	(bad)  
  42b14e:	(bad)  
  42b14f:	push   DWORD PTR ds:0x48372c
  42b155:	inc    DWORD PTR [eax]
  42b157:	cmp    DWORD PTR [esp+eax*2-0x9eee],0xffffffff
  42b15f:	jmp    DWORD PTR [esi+0x30]
  42b162:	das    
  42b163:	rol    BYTE PTR [eax],cl
  42b165:	inc    DWORD PTR [eax]
  42b167:	inc    DWORD PTR [esi-0x7ca791b0]
  42b16d:	(bad)  
  42b16e:	(bad)  
  42b16f:	call   DWORD PTR ds:0xfff6ebf7
  42b175:	cmp    edi,0x0
  42b178:	stos   BYTE PTR es:[edi],al
  42b179:	lods   eax,DWORD PTR ds:[esi]
  42b17a:	mov    DWORD PTR [ebx-0xffff77],ecx
  42b180:	shl    BYTE PTR [eax-0x7c9f92],0xff
  42b187:	mov    DWORD PTR [ebp-0x39b2ae],edx
  42b18d:	mov    DWORD PTR [ebx-0x4f5ebe01],eax
  42b193:	retf   
  42b194:	(bad)  
  42b195:	(bad)  
  42b196:	inc    DWORD PTR [eax]
  42b198:	xchg   ecx,eax
  42b199:	stos   DWORD PTR es:[edi],eax
  42b19a:	fsub   QWORD PTR [ebx-0xff7c7d]
  42b1a0:	loope  0x42b1a0
  42b1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1a3:	js     0x42b1a5
  42b1a5:	dec    DWORD PTR [ecx+0x1d150f00]
  42b1ab:	or     al,0xff
  42b1ad:	(bad)  
  42b1ae:	(bad)  
  42b1af:	dec    DWORD PTR [ebx]
  42b1b1:	fwait
  42b1b2:	out    dx,al
  42b1b3:	pop    edi
  42b1b4:	int3   
  42b1b5:	(bad)  
  42b1b6:	inc    DWORD PTR [ebx+0x20df0aa5]
  42b1bc:	add    DWORD PTR [eax],0xffffff89
  42b1bf:	add    BYTE PTR [esi+ebp*8+0x37],dh
  42b1c3:	test   DWORD PTR [ecx+0x3f0000cc],ecx
  42b1c9:	out    dx,eax
  42b1ca:	cs ret 
  42b1cc:	inc    DWORD PTR [ebx+0x333e00ff]
  42b1d2:	(bad)  
  42b1d3:	jb     0x42b1a1
  42b1d5:	(bad)  
  42b1d6:	dec    DWORD PTR [ecx-0x7c4dfbc9]
  42b1dc:	dec    DWORD PTR [ecx+0x163ff89]
  42b1e2:	int    0xc8
  42b1e4:	add    BYTE PTR [ebx+0x3741ff00],al
  42b1ea:	mov    eax,0x8389ff90
  42b1ef:	call   edi
  42b1f1:	mov    ah,0x0
  42b1f3:	in     al,dx
  42b1f4:	(bad)  
  42b1f5:	(bad)  
  42b1f6:	inc    DWORD PTR [eax]
  42b1f8:	pushf  
  42b1f9:	iret   
  42b1fa:	test   DWORD PTR [ebx-0x1],eax
  42b1fd:	inc    DWORD PTR [eax]
  42b1ff:	adc    DWORD PTR [eax+0x3d],0xfffffff1
  42b203:	pop    ecx
  42b204:	add    BYTE PTR [eax],al
  42b206:	(bad)  
  42b207:	inc    DWORD PTR [ecx]
  42b209:	clc    
  42b20a:	dec    ecx
  42b20b:	lock dec esp
  42b20e:	inc    DWORD PTR [eax]
  42b210:	clc    
  42b211:	imul   eax,DWORD PTR [edi-0xffff47],0xa4418d89
  42b21b:	fwait
  42b21c:	(bad)  
  42b21d:	dec    esp
  42b21f:	call   FWORD PTR [ebx+0xe]
  42b222:	imul   esp,DWORD PTR [eax-0x3400],0x20d568e4
  42b22c:	(bad)  
  42b22d:	inc    DWORD PTR [eax]
  42b22f:	cmp    DWORD PTR [edi-0x884c90],0xffffffff
  42b236:	add    BYTE PTR [ecx-0x51528b6c],cl
  42b23c:	mov    DWORD PTR [eax],eax
  42b23e:	(bad)  
  42b23f:	call   FWORD PTR [ecx*1-0xaef5]
  42b246:	mov    edi,edi
  42b248:	int    0xcf
  42b24a:	xchg   DWORD PTR [eax],ebp
  42b24c:	add    bh,bh
  42b24e:	inc    DWORD PTR [eax]
  42b250:	xchg   esi,eax
  42b251:	mov    ds:0xff838e4d,eax
  42b256:	add    BYTE PTR [eax],al
  42b258:	or     eax,0x832e501b
  42b25d:	dec    esp
  42b25f:	add    BYTE PTR [edx],al
  42b261:	in     eax,dx
  42b262:	stos   BYTE PTR es:[edi],al
  42b263:	or     DWORD PTR [eax],eax
  42b265:	mov    edi,edi
  42b267:	dec    DWORD PTR [edx]
  42b269:	pop    ebx
  42b26a:	adc    al,0x90
  42b26c:	cmp    edi,0xffffff83
  42b26f:	jmp    DWORD PTR [eax+edi*4]
  42b272:	leave  
  42b273:	outs   dx,DWORD PTR ds:[esi]
  42b274:	add    bh,bh
  42b276:	inc    DWORD PTR [eax]
  42b278:	mov    eax,ds:0x83e1b196
  42b27d:	add    bh,bh
  42b27f:	add    BYTE PTR [edx],cl
  42b281:	retf   0x2ea
  42b284:	(bad)  
  42b285:	inc    DWORD PTR [ebx+0x150b7400]
  42b28b:	add    eax,0x830089
  42b290:	bnd ret 
  42b292:	test   DWORD PTR [ebp-0x7d],edx
  42b295:	(bad)  
  42b296:	(bad)  
  42b297:	call   DWORD PTR [edi-0x17]
  42b29a:	push   0xffffff88
  42b29c:	cmp    edi,0xffffffff
  42b29f:	call   FWORD PTR [eax-0x6c]
  42b2a2:	cli    
  42b2a3:	in     eax,dx
  42b2a4:	(bad)  
  42b2a5:	(bad)  
  42b2a6:	dec    esp
  42b2a8:	fs mov eax,0xffff4e74
  42b2ae:	int3   
  42b2af:	jmp    DWORD PTR [edi-0x7e]
  42b2b2:	(bad)  
  42b2b3:	and    al,BYTE PTR [eax]
  42b2b5:	add    BYTE PTR [ebx+0xc86cd00],al
  42b2bb:	adc    eax,DWORD PTR [eax]
  42b2bd:	add    BYTE PTR [eax],al
  42b2bf:	(bad)  
  42b2c0:	ficom  DWORD PTR [ecx-0xffb21c]
  42b2c6:	int3   
  42b2c7:	sbb    DWORD PTR [ecx+0x19ec97],0x0
  42b2ce:	add    bh,bh
  42b2d0:	pop    es
  42b2d1:	addr16 add eax,0xff898373
  42b2d7:	dec    DWORD PTR [edx-0x22e926]
  42b2dd:	dec    esp
  42b2df:	add    BYTE PTR [ebx-0xc29a1a],ch
  42b2e5:	mov    DWORD PTR [eax],eax
  42b2e7:	(bad)  
  42b2e8:	jle    0x42b30a
  42b2ea:	mov    dh,0x7b
  42b2ec:	(bad)  
  42b2ed:	inc    DWORD PTR [ebx-0x28dc2334]
  42b2f3:	mov    bh,bh
  42b2f5:	dec    DWORD PTR [ecx-0xcf4dd01]
  42b2fb:	loopne 0x42b2fd
  42b2fd:	inc    DWORD PTR [eax]
  42b2ff:	sub    DWORD PTR [esi-0x71dfb6],0xffffffcc
  42b306:	mov    DWORD PTR [ebx-0x4e019fa1],eax
  42b30c:	(bad)  
  42b30d:	inc    DWORD PTR [eax]
  42b30f:	(bad)  
  42b310:	cmp    eax,0xff8e6907
  42b315:	(bad)  
  42b316:	inc    DWORD PTR [eax]
  42b318:	call   0x83ff:0x83354593
  42b31f:	(bad)  
  42b320:	out    dx,eax
  42b321:	pop    ebp
  42b322:	stos   DWORD PTR es:[edi],eax
  42b323:	jle    0x42b2f1
  42b325:	(bad)  
  42b326:	dec    DWORD PTR [ecx+0x498cc841]
  42b32c:	(bad)  
  42b32d:	(bad)  
  42b32e:	(bad)  
  42b32f:	(bad)  
  42b330:	ds mov ecx,0xffe6f7
  42b336:	inc    DWORD PTR [ebx-0x25801e57]
  42b33c:	(bad)  
  42b33d:	inc    DWORD PTR [ebx-0x1c9f1300]
  42b343:	add    eax,DWORD PTR [eax]
  42b345:	(bad)  
  42b346:	(bad)  
  42b347:	call   FWORD PTR [ecx]
  42b349:	ret    0xdb55
  42b34c:	(bad)  
  42b34d:	(bad)  
  42b34e:	dec    DWORD PTR [ecx-0x2c78c43c]
  42b354:	add    ah,cl
  42b356:	mov    DWORD PTR [eax],eax
  42b358:	and    ebp,DWORD PTR [ecx]
  42b35a:	and    ebp,DWORD PTR [edi-0x10000]
  42b360:	outs   dx,DWORD PTR ds:[esi]
  42b361:	mov    ds:0x83cf85,eax
  42b366:	add    BYTE PTR [eax],al
  42b368:	imul   eax,ebx,0xffffffd2
  42b36b:	xchg   edi,eax
  42b36c:	dec    DWORD PTR [ecx-0x4adf3400]
  42b372:	jg     0x42b337
  42b374:	add    bh,bh
  42b376:	inc    DWORD PTR [eax]
  42b378:	mov    DWORD PTR [edx-0xde5b],ebx
  42b37e:	(bad)  
  42b37f:	call   FWORD PTR [edx-0x47]
  42b382:	jae    0x42b3b1
  42b384:	(bad)  
  42b385:	(bad)  
  42b386:	(bad)  
  42b387:	call   FWORD PTR [eax]
  42b389:	or     DWORD PTR [ebx+0x830045],esp
  42b38f:	(bad)  
  42b390:	cli    
  42b391:	cld    
  42b392:	xlat   BYTE PTR ds:[ebx]
  42b393:	xlat   BYTE PTR ds:[ebx]
  42b394:	cmp    edi,0xffffff83
  42b397:	add    al,bh
  42b399:	sbb    esi,esp
  42b39b:	int    0xff
  42b39d:	inc    DWORD PTR [ebx+0x3e2e2589]
  42b3a3:	or     eax,DWORD PTR [ebx+0x6b00ff00]
  42b3a9:	in     al,0x1f
  42b3ab:	push   edx
  42b3ac:	inc    DWORD PTR [eax]
  42b3ae:	cmp    edi,0x44
  42b3b1:	pop    ecx
  42b3b2:	addr16 popf 
  42b3b4:	add    bh,bh
  42b3b6:	mov    DWORD PTR [eax],eax
  42b3b8:	push   esp
  42b3b9:	sub    cl,cl
  42b3bb:	jns    0xc30eb3c1
  42b3c1:	mov    esi,0xffff752e
  42b3c6:	int3   
  42b3c7:	add    bh,dl
  42b3c9:	(bad)  
  42b3ca:	jnp    0x42b3ff
  42b3cc:	add    DWORD PTR [eax],0xffffff83
  42b3cf:	call   FWORD PTR [eax*4-0x7691d9]
  42b3d6:	inc    DWORD PTR [ebx-0xfb23c19]
  42b3dc:	or     DWORD PTR [ecx-0x1784ff01],0xffffff82
  42b3e3:	loope  0x42b368
  42b3e5:	add    bh,bh
  42b3e7:	add    BYTE PTR [ebx+0x386edb],al
  42b3ed:	add    bh,bh
  42b3ef:	add    BYTE PTR [ecx+0x2b],dl
  42b3f2:	xchg   esp,eax
  42b3f3:	jne    0x42b3f5
  42b3f5:	dec    DWORD PTR [ecx+0x2d9f88cc]
  42b3fb:	mov    ecx,esp
  42b3fd:	inc    DWORD PTR [ebx+0x2a050b00]
  42b403:	enter  0x8300,0xff
  42b407:	add    BYTE PTR [eax+ecx*2-0x7c7ca765],al
  42b40e:	(bad)  
  42b40f:	jmp    FWORD PTR [esi+edi*1+0xff98f1]
  42b416:	(bad)  
  42b417:	dec    DWORD PTR [ecx]
  42b419:	and    ah,BYTE PTR [edi+0xf]
  42b41c:	or     esp,0x0
  42b41f:	call   DWORD PTR [ebp-0x63]
  42b422:	imul   esp,DWORD PTR [eax-0x1],0xf00ffff
  42b429:	sbb    BYTE PTR [ebp-0x6e],al
  42b42c:	inc    DWORD PTR [eax]
  42b42e:	inc    DWORD PTR [eax]
  42b430:	mov    bl,0x27
  42b432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b433:	ret    
  42b434:	inc    DWORD PTR [ebx+0x513aff00]
  42b43a:	int3   
  42b43b:	xchg   ebp,eax
  42b43c:	add    BYTE PTR [eax],al
  42b43e:	dec    DWORD PTR [ecx+0x35c7845c]
  42b444:	inc    DWORD PTR [eax]
  42b446:	int3   
  42b447:	and    DWORD PTR [eax],0xffffff9a
  42b44a:	and    ch,BYTE PTR [edi]
  42b44c:	add    BYTE PTR [eax],al
  42b44e:	inc    DWORD PTR [eax]
  42b450:	sub    ebp,ebx
  42b452:	push   edi
  42b453:	add    bh,bh
  42b455:	(bad)  
  42b456:	inc    DWORD PTR [eax]
  42b458:	scas   al,BYTE PTR es:[edi]
  42b459:	mov    dh,0xe6
  42b45b:	dec    esp
  42b45c:	inc    DWORD PTR [eax]
  42b45e:	add    BYTE PTR [ebx-0x5ef6b46e],al
  42b464:	add    BYTE PTR [eax],al
  42b466:	dec    DWORD PTR [ecx+0x43f71c91]
  42b46c:	mov    DWORD PTR [eax],eax
  42b46e:	inc    DWORD PTR [eax]
  42b470:	mov    DWORD PTR [edx+0x33],ebp
  42b473:	stc    
  42b474:	mov    edi,edi
  42b476:	mov    edi,edi
  42b478:	mov    al,BYTE PTR [esi-0xff2a20]
  42b47e:	int3   
  42b47f:	call   eax
  42b481:	or     BYTE PTR [ebx-0x7cff00c2],bl
  42b487:	call   FWORD PTR [edx+ebp*4-0x73]
  42b48b:	push   cs
  42b48c:	(bad)  
  42b48d:	inc    DWORD PTR [eax]
  42b48f:	add    BYTE PTR [ebx+0x31],cl
  42b492:	imul   ebx,DWORD PTR [eax+eax*1-0x1],0x61b2cc00
  42b49a:	gs inc edx
  42b49c:	dec    DWORD PTR [ecx+0x45248983]
  42b4a2:	dec    ebx
  42b4a3:	and    edi,edi
  42b4a5:	mov    edi,edi
  42b4a7:	call   FWORD PTR [ebp+0xde7819]
  42b4ad:	add    BYTE PTR [eax],al
  42b4af:	mov    DWORD PTR [ebx],ecx
  42b4b1:	call   0x84423394
  42b4b6:	(bad)  
  42b4b7:	(bad)  
  42b4b8:	jg     0x42b514
  42b4ba:	aas    
  42b4bb:	push   esi
  42b4bc:	(bad)  
  42b4bd:	(bad)  
  42b4be:	(bad)  
  42b4bf:	call   DWORD PTR [ecx-0xa2d3ee]
  42b4c5:	mov    DWORD PTR [ebx-0xa80947d],eax
  42b4cb:	pop    ebp
  42b4cc:	dec    esp
  42b4ce:	inc    DWORD PTR [eax]
  42b4d0:	out    dx,eax
  42b4d1:	ds inc edi
  42b4d3:	aaa    
  42b4d4:	mov    edi,edi
  42b4d6:	inc    DWORD PTR [eax]
  42b4d8:	or     esp,DWORD PTR [ebp+0x5f]
  42b4db:	or     edi,edi
  42b4dd:	add    BYTE PTR [ecx-0x4dd0e501],cl
  42b4e3:	pop    eax
  42b4e4:	cmp    edi,0xffffff83
  42b4e7:	add    BYTE PTR [edx],bl
  42b4e9:	out    dx,al
  42b4ea:	or     DWORD PTR [eax+0x8300],ebx
  42b4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4f1:	lods   al,BYTE PTR ds:[esi]
  42b4f2:	push   0xff0031
  42b4f7:	jmp    esi
  42b4f9:	fmul   DWORD PTR [edi+edi*4-0x7d]
  42b4fd:	(bad)  
  42b4fe:	inc    DWORD PTR [ebx+0x368869e3]
  42b504:	add    DWORD PTR [eax],0x0
  42b507:	push   DWORD PTR [eax]
  42b509:	dec    edx
  42b50a:	jg     0x42b497
  42b50c:	(bad)  
  42b50d:	(bad)  
  42b50e:	(bad)  
  42b50f:	dec    ecx
  42b511:	jo     0x42b519
  42b513:	cmp    edi,0xf100ffff
  42b519:	repnz sahf 
  42b51b:	cmp    eax,0xffff0000
  42b520:	jge    0x42b4f9
  42b522:	(bad)  
  42b523:	sub    bh,bh
  42b525:	cmp    edi,0x0
  42b528:	xor    eax,edi
  42b52a:	or     ah,BYTE PTR [edx-0x100]
  42b530:	mov    bl,0x1d
  42b532:	ss xor edi,edi
  42b535:	inc    DWORD PTR [eax]
  42b537:	add    BYTE PTR [eax+0xd],dh
  42b53a:	xor    ebp,DWORD PTR [edi]
  42b53c:	inc    DWORD PTR [eax]
  42b53e:	cmp    edi,0xffffffbd
  42b541:	dec    ebx
  42b542:	sbb    eax,0x830d
  42b547:	int3   
  42b548:	stos   DWORD PTR es:[edi],eax
  42b549:	push   ebx
  42b54a:	addr16 push ds
  42b54c:	inc    DWORD PTR [eax]
  42b54e:	inc    DWORD PTR [eax]
  42b550:	pop    esi
  42b551:	inc    edi
  42b552:	sbb    al,0x37
  42b554:	dec    DWORD PTR [ecx-0x2ff2ff34]
  42b55a:	bnd jbe 0x42b4e0
  42b55d:	inc    DWORD PTR [eax]
  42b55f:	inc    DWORD PTR [ecx-0x741bb1]
  42b565:	add    DWORD PTR [eax],0xffffffff
  42b568:	in     eax,dx
  42b569:	out    dx,al
  42b56a:	mov    ds:0xffffd5,eax
  42b56f:	mov    DWORD PTR [eax-0x29],esp
  42b572:	loope  0x42b514
  42b574:	(bad)  
  42b575:	inc    DWORD PTR [ebx+0xcee1f83]
  42b57b:	in     al,0x0
  42b57d:	inc    DWORD PTR [ebx+0x129a1589]
  42b583:	imul   edi,edi,0x738983ff
  42b589:	or     DWORD PTR ds:0xffccfff9,ebp
  42b58f:	add    BYTE PTR [ecx],al
  42b591:	into   
  42b592:	pop    esp
  42b593:	sub    BYTE PTR [eax],al
  42b595:	(bad)  
  42b596:	(bad)  
  42b597:	(bad)  
  42b598:	out    dx,eax
  42b599:	daa    
  42b59a:	shr    DWORD PTR [esi-0x7d],0x0
  42b59e:	int3   
  42b59f:	call   DWORD PTR [ebp-0x17]
  42b5a2:	cmp    edx,DWORD PTR [ebx]
  42b5a4:	add    BYTE PTR [ebx+0x2e8700cc],al
  42b5aa:	(bad)  
  42b5ab:	mov    eax,0x8900cc89
  42b5b0:	mov    edx,0xff7ca423
  42b5b5:	(bad)  
  42b5b6:	inc    DWORD PTR [eax]
  42b5b8:	mov    al,ds:0x89a03e8d
  42b5bd:	add    bh,bh
  42b5bf:	(bad)  
  42b5c0:	ds ja  0x42b5e8
  42b5c3:	dec    esi
  42b5c4:	inc    DWORD PTR [ebx+0x42d900ff]
  42b5ca:	mov    ch,0x22
  42b5cc:	inc    DWORD PTR [ebx-0x360f0100]
  42b5d2:	adc    DWORD PTR ds:0xffffff00,0xd738271e
  42b5dc:	add    BYTE PTR [eax],al
  42b5de:	inc    DWORD PTR [eax]
  42b5e0:	jnp    0x42b575
  42b5e2:	mov    esp,0xff8383d9
  42b5e7:	call   DWORD PTR [ecx-0x59197f]
  42b5ed:	add    DWORD PTR [ebx-0x67dc7801],0xffffffb1
  42b5f4:	int3   
  42b5f5:	int3   
  42b5f6:	(bad)  
  42b5f7:	dec    DWORD PTR [ecx-0x28]
  42b5fa:	mov    ecx,0xffcc0072
  42b5ff:	dec    eax
  42b601:	and    ebp,eax
  42b603:	popf   
  42b604:	add    bh,bh
  42b606:	add    bh,bh
  42b608:	add    ebx,ecx
  42b60a:	or     eax,0x8300ff99
  42b60f:	dec    ebx
  42b611:	aam    0x14
  42b613:	sub    edi,edi
  42b615:	add    BYTE PTR [eax],al
  42b617:	add    bh,dl
  42b619:	mov    ebp,edi
  42b61b:	jb     0x42b5a0
  42b61d:	add    bh,bh
  42b61f:	int3   
  42b620:	sbb    BYTE PTR [edi+0x56],ah
  42b623:	(bad)  
  42b624:	add    bh,bh
  42b626:	inc    DWORD PTR [ebx-0x17265b81]
  42b62c:	dec    esp
  42b62e:	add    ah,cl
  42b630:	outs   dx,DWORD PTR ds:[esi]
  42b631:	js     0x42b5e9
  42b633:	fild   DWORD PTR [eax]
  42b635:	add    BYTE PTR [ebx-0x4ee47001],al
  42b63b:	out    dx,eax
  42b63c:	add    DWORD PTR [eax],0xffffffff
  42b63f:	inc    ecx
  42b641:	es in  eax,0xb6
  42b644:	inc    DWORD PTR [eax]
  42b646:	(bad)  
  42b647:	push   DWORD PTR [ebx+0x2a]
  42b64a:	test   DWORD PTR [edx],eax
  42b64c:	cmp    edi,0xffffffff
  42b64f:	add    BYTE PTR [esi],bh
  42b651:	xchg   edi,eax
  42b652:	lods   al,BYTE PTR ds:[esi]
  42b653:	pushf  
  42b654:	cmp    edi,0xffffff89
  42b657:	push   esi
  42b659:	stc    
  42b65a:	add    DWORD PTR [edi-0x7c0001],0xffffff83
  42b661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b662:	mov    edx,0xff0083a0
  42b667:	mov    DWORD PTR [edx-0x6c],edx
  42b66a:	outs   dx,DWORD PTR ds:[esi]
  42b66b:	jp     0x42b66c
  42b66d:	mov    DWORD PTR [eax],eax
  42b66f:	mov    edx,ecx
  42b671:	clc    
  42b672:	sub    ebx,esp
  42b674:	int3   
  42b675:	add    bh,bh
  42b677:	mov    DWORD PTR [ecx],edi
  42b679:	int    0xde
  42b67b:	inc    eax
  42b67c:	cmp    edi,0x0
  42b67f:	mov    DWORD PTR [eax],ebp
  42b681:	fist   WORD PTR [ecx]
  42b683:	ins    DWORD PTR es:[edi],dx
  42b684:	add    bh,bh
  42b686:	mov    DWORD PTR [eax],eax
  42b688:	dec    ecx
  42b689:	inc    BYTE PTR [eax-0x767c0018]
  42b68f:	dec    DWORD PTR [edx-0x2]
  42b692:	aam    0x71
  42b694:	add    ah,cl
  42b696:	(bad)  
  42b697:	inc    ebp
  42b699:	mov    es,WORD PTR [edx-0x7c0076a9]
  42b69f:	dec    DWORD PTR [edx]
  42b6a1:	jmp    0x0:0xffff538b
  42b6a8:	aam    0xfa
  42b6aa:	add    eax,0xff0088
  42b6af:	int3   
  42b6b0:	clc    
  42b6b1:	sahf   
  42b6b2:	and    ecx,DWORD PTR [edx+0x0]
  42b6b5:	add    BYTE PTR [eax],al
  42b6b7:	add    bl,bl
  42b6b9:	xchg   ebp,eax
  42b6ba:	jmp    0x1500:0x89ffff5f
  42b6c1:	lock and esp,DWORD PTR [ebx]
  42b6c4:	(bad)  
  42b6c5:	dec    DWORD PTR [ecx-0x49e05401]
  42b6cb:	xchg   edx,eax
  42b6cc:	add    bh,bh
  42b6ce:	cmp    edi,0x36
  42b6d1:	sar    BYTE PTR [ebp-0x9],0x0
  42b6d5:	add    bh,bh
  42b6d7:	inc    DWORD PTR [edx-0x83d583]
  42b6dd:	add    BYTE PTR [eax],al
  42b6df:	(bad)  
  42b6e0:	stc    
  42b6e1:	std    
  42b6e2:	push   eax
  42b6e3:	jg     0x42b6e4
  42b6e5:	dec    esp
  42b6e7:	call   FWORD PTR [eax]
  42b6e9:	jl     0x42b6e6
  42b6eb:	or     al,0x0
  42b6ed:	cmp    edi,0x0
  42b6f0:	mov    ecx,0xa369c5
  42b6f5:	cmp    edi,0xffffffff
  42b6f8:	fidiv  WORD PTR [ecx+0x1d]
  42b6fb:	leave  
  42b6fc:	add    BYTE PTR [eax],al
  42b6fe:	add    bh,bh
  42b700:	or     BYTE PTR [edx-0xff37d7],bl
  42b706:	add    ah,cl
  42b708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b709:	mov    bh,0xc2
  42b70b:	test   eax,0xffffcccc
  42b710:	outs   dx,BYTE PTR ds:[esi]
  42b711:	fwait
  42b712:	push   esp
  42b713:	cmp    eax,0xcc000089
  42b718:	sahf   
  42b719:	or     cl,BYTE PTR [eax]
  42b71b:	lods   eax,DWORD PTR ds:[esi]
  42b71c:	inc    DWORD PTR [eax]
  42b71e:	int3   
  42b71f:	(bad)  
  42b720:	(bad)  
  42b721:	hlt    
  42b722:	sti    
  42b723:	push   eax
  42b724:	mov    edi,edi
  42b726:	add    ah,cl
  42b728:	das    
  42b729:	ds loop 0x42b73e
  42b72c:	(bad)  
  42b72d:	inc    DWORD PTR [eax]
  42b72f:	add    BYTE PTR [ecx],cl
  42b731:	and    eax,0xffffc023
  42b736:	(bad)  
  42b737:	jmp    FWORD PTR [edx-0x78]
  42b73a:	push   es
  42b73b:	ins    DWORD PTR es:[edi],dx
  42b73c:	mov    edi,edi
  42b73e:	(bad)  
  42b73f:	inc    DWORD PTR [ebx-0x424927]
  42b745:	int3   
  42b746:	add    BYTE PTR [eax],al
  42b748:	jmp    0xff87964e
  42b74d:	(bad)  
  42b74e:	(bad)  
  42b74f:	(bad)  
  42b750:	cmp    ah,BYTE PTR [ecx-0xff5fa6]
  42b756:	int3   
  42b757:	and    DWORD PTR [edi-0x72],0x58
  42b75b:	cmp    al,0x0
  42b75d:	int3   
  42b75e:	int3   
  42b75f:	(bad)  
  42b760:	call   0x64b1a2
  42b765:	add    BYTE PTR [ebx+0x6faa81ff],al
  42b76b:	pop    eax
  42b76c:	mov    edi,edi
  42b76e:	(bad)  
  42b76f:	call   FWORD PTR [esi]
  42b771:	mov    ecx,0x8383f51f
  42b776:	int3   
  42b777:	dec    DWORD PTR [eax+0x1e]
  42b77a:	ds jnp 0x42b749
  42b77d:	inc    DWORD PTR [ebx-0x7eae7d]
  42b783:	or     al,0xff
  42b785:	add    BYTE PTR [eax],al
  42b787:	int3   
  42b788:	pop    ecx
  42b789:	or     al,0x5e
  42b78b:	or     edi,edi
  42b78d:	add    bh,bh
  42b78f:	add    cl,ch
  42b791:	fisttp WORD PTR [esp+edi*8-0x33ff0001]
  42b798:	pusha  
  42b799:	nop
  42b79a:	cwde   
  42b79b:	fmul   st(4),st
  42b79d:	dec    esp
  42b79f:	jmp    FWORD PTR [edi]
  42b7a1:	test   al,0xcd
  42b7a3:	cmp    eax,0xff00ff00
  42b7a8:	sbb    ebp,DWORD PTR [ebp+0xccc75a]
  42b7ae:	add    DWORD PTR [eax],0xffffffa7
  42b7b1:	ret    0x4344
  42b7b4:	inc    DWORD PTR [ebx+0x5b12ccff]
  42b7ba:	out    0xfc,al
  42b7bc:	add    BYTE PTR [eax],al
  42b7be:	add    BYTE PTR [ebx+0x5d2f604f],al
  42b7c4:	add    bh,bh
  42b7c6:	(bad)  
  42b7c7:	(bad)  
  42b7c8:	jge    0x42b7fe
  42b7ca:	lahf   
  42b7cb:	test   bh,bh
  42b7cd:	add    ah,cl
  42b7cf:	push   DWORD PTR [ebx]
  42b7d1:	cdq    
  42b7d2:	inc    esp
  42b7d3:	leave  
  42b7d4:	add    BYTE PTR [ebx+0x3e4fff89],al
  42b7da:	dec    eax
  42b7db:	idiv   bh
  42b7dd:	inc    DWORD PTR [eax]
  42b7df:	(bad)  
  42b7e0:	stc    
  42b7e1:	sub    DWORD PTR [edi-0x33ff61],0xffffffff
  42b7e8:	push   eax
  42b7e9:	push   es
  42b7ea:	fs inc edx
  42b7ec:	add    bh,bh
  42b7ee:	inc    DWORD PTR [eax]
  42b7f0:	sub    esp,0x10
  42b7f3:	call   DWORD PTR ds:0x444034
  42b7f9:	call   0x401000
  42b7fe:	lea    eax,[esp]
  42b801:	push   eax
  42b802:	push   0x0
  42b804:	mov    DWORD PTR [esp+0x8],0x2
  42b80c:	mov    DWORD PTR [esp+0xc],0xeb
  42b814:	mov    DWORD PTR [esp+0x10],0x7c
  42b81c:	mov    DWORD PTR [esp+0x14],0x6a
  42b824:	call   DWORD PTR ds:0x44403c
  42b82a:	xor    eax,eax
  42b82c:	add    esp,0x10
  42b82f:	ret    
  42b830:	push   DWORD PTR [ebp-0x1]
  42b833:	push   ebp
  42b834:	call   0xff5e:0xff892a00
  42b83b:	push   esi
  42b83c:	push   cs
  42b83d:	call   DWORD PTR [edi+0x0]
  42b840:	add    cl,bh
  42b842:	add    BYTE PTR [esi+0x6c],dl
  42b845:	(bad)  
  42b846:	jg     0x42b848
  42b848:	add    bh,al
  42b84a:	call   DWORD PTR [ebx]
  42b84c:	xchg   esp,eax
  42b84d:	add    BYTE PTR [ecx-0x7d],bh
  42b850:	jmp    FWORD PTR [edx-0x7cad717d]
  42b856:	das    
  42b857:	cmp    edi,0x3
  42b85a:	int3   
  42b85b:	shl    DWORD PTR [edi+edi*8+0x140083e6],0x0
  42b863:	ja     0x42b8ab
  42b865:	add    bh,bl
  42b867:	add    bh,bh
  42b869:	add    al,0x0
  42b86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b86c:	popf   
  42b86d:	call   DWORD PTR ds:0x2f8300
  42b873:	push   edx
  42b874:	push   esi
  42b875:	or     DWORD PTR [ebx-0x1],0xffffffff
  42b879:	xchg   esp,eax
  42b87a:	call   ebx
  42b87c:	mov    al,ds:0xff69cc
  42b881:	or     edi,edi
  42b883:	inc    esi
  42b884:	sub    al,0x0
  42b886:	add    DWORD PTR [eax],0x0
  42b889:	fild   WORD PTR [eax]
  42b88b:	jns    0x42b833
  42b88d:	add    DWORD PTR [eax+eax*1-0x77],0xffffffd7
  42b892:	inc    esi
  42b894:	stos   DWORD PTR es:[edi],eax
  42b895:	jmp    FWORD PTR ds:0x96ffcc
  42b89b:	jb     0x42b8e0
  42b89d:	cmp    DWORD PTR [ebx-0x76c50001],0xffffffe2
  42b8a4:	adc    BYTE PTR [eax],al
  42b8a6:	dec    DWORD PTR es:[ecx+0x29e40058]
  42b8ad:	cmp    DWORD PTR [edi+edi*8+0x0],0x65
  42b8b2:	mov    DWORD PTR [edi-0xeb000f],esp
  42b8b8:	int3   
  42b8b9:	jle    0x42b8ba
  42b8bb:	cmp    edi,esi
  42b8bd:	adc    DWORD PTR [eax],0xffffff89
  42b8c0:	dec    DWORD PTR [ebp-0x11267d]
  42b8c6:	xchg   ecx,eax
  42b8c7:	mov    DWORD PTR [eax],eax
  42b8c9:	mov    ch,0x0
  42b8cb:	and    al,0xd7
  42b8cd:	add    bh,dh
  42b8cf:	add    BYTE PTR [ecx+0x2143002c],cl
  42b8d5:	add    dl,ch
  42b8d7:	add    bh,bh
  42b8d9:	push   esi
  42b8da:	inc    DWORD PTR [edi-0x4a]
  42b8dd:	push   eax
  42b8df:	dec    DWORD PTR [ecx+0x2c71ff16]
  42b8e5:	mov    DWORD PTR [edx-0x1f7c01],esi
  42b8eb:	xor    edi,eax
  42b8ed:	call   ebx
  42b8ef:	mov    edi,edi
  42b8f1:	mov    dh,0xff
  42b8f3:	cmp    al,0xe3
  42b8f5:	cmp    DWORD PTR [edx-0x7c8f7c01],0xffffffcb
  42b8fc:	mov    ebx,0x83ff69ff
  42b901:	fdivr  st,st(7)
  42b903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b904:	js     0x42b905
  42b906:	mov    cl,ah
  42b908:	add    BYTE PTR [ecx-0x1],bl
  42b90b:	scas   al,BYTE PTR es:[edi]
  42b90c:	aad    0x0
  42b90e:	or     eax,DWORD PTR [ebx+0x1dff97ff]
  42b914:	pop    ss
  42b915:	add    cl,cl
  42b917:	(bad)  
  42b918:	dec    DWORD PTR [edi-0xfc000]
  42b91e:	fcos   
  42b920:	call   FWORD PTR [esi-0x7c4a1d01]
  42b926:	std    
  42b927:	dec    DWORD PTR [ecx-0x6c8bffd4]
  42b92d:	(bad)  
  42b92e:	cmp    al,0xcc
  42b930:	dec    DWORD PTR [edx]
  42b932:	add    BYTE PTR [ecx-0x5c],dl
  42b935:	jmp    edi
  42b937:	(bad)  
  42b938:	call   FWORD PTR [edx]
  42b93a:	add    BYTE PTR [eax],al
  42b93c:	jl     0x42b93d
  42b93e:	(bad)  
  42b93f:	(bad)  
  42b940:	(bad)  
  42b941:	call   0xff619f46
  42b946:	inc    DWORD PTR ss:[eax]
  42b949:	jp     0x42b94b
  42b94b:	not    BYTE PTR [ebx-0x337cfa01]
  42b951:	jp     0x42b952
  42b953:	lahf   
  42b954:	repz (bad) 
  42b956:	mov    eax,0xffd6ffcc
  42b95b:	cmp    BYTE PTR [eax+0x8996ff],al
  42b961:	sub    al,0xff
  42b963:	shl    DWORD PTR [eax-0x1],0x27
  42b967:	inc    DWORD PTR [eax]
  42b969:	dec    ebx
  42b96a:	add    BYTE PTR [ecx-0x76577c88],ah
  42b970:	cmp    DWORD PTR [ecx+ecx*4+0x3e00216c],0x0
  42b978:	int3   
  42b979:	js     0x42b97b
  42b97b:	pop    edx
  42b97c:	daa    
  42b97d:	inc    DWORD PTR [edx]
  42b97f:	add    bh,bh
  42b981:	rol    DWORD PTR [ebx-0x5b7cc72d],cl
  42b987:	add    BYTE PTR [eax],al
  42b989:	pop    esp
  42b98a:	call   FWORD PTR [edx-0x8e0057]
  42b990:	add    BYTE PTR [ecx+0xdb6400],dl
  42b996:	jno    0x42b964
  42b998:	(bad)  
  42b999:	js     0x42b967
  42b99b:	inc    eax
  42b99c:	pop    ecx
  42b99d:	dec    DWORD PTR [ebx]
  42b99f:	inc    DWORD PTR [ebx-0x51eaffea]
  42b9a5:	add    al,bh
  42b9a7:	inc    DWORD PTR [eax]
  42b9a9:	test   BYTE PTR [eax],0x2d
  42b9ac:	or     al,0x83
  42b9ae:	(bad)  
  42b9af:	inc    DWORD PTR [eax]
  42b9b1:	or     al,BYTE PTR [ebx+0x54ff4e5f]
  42b9b7:	or     esp,0xffffffd6
  42b9ba:	adc    DWORD PTR [ecx+0x61],0xffffffff
  42b9be:	ret    
  42b9bf:	add    BYTE PTR [ecx+0x3b140000],cl
  42b9c5:	(bad)  
  42b9c6:	mov    ecx,0x89c1cc00
  42b9cb:	pop    edx
  42b9cc:	loope  0x42b9cd
  42b9ce:	lods   eax,DWORD PTR ds:[esi]
  42b9cf:	(bad)  
  42b9d0:	push   DWORD PTR [edi+edi*8]
  42b9d3:	sbb    DWORD PTR [eax+0x0],0xb9830088
  42b9da:	push   DWORD PTR [edi]
  42b9dc:	dec    edx
  42b9dd:	call   FWORD PTR [esi]
  42b9df:	(bad)  
  42b9e0:	jmp    DWORD PTR [edi-0xc00e01]
  42b9e6:	sbb    BYTE PTR [eax],al
  42b9e8:	cmp    DWORD PTR [esp+ecx*8+0x50ffaefc],0x0
  42b9f0:	add    BYTE PTR [eax],cl
  42b9f2:	dec    DWORD PTR [ebp+edi*4-0x77]
  42b9f6:	mov    ebx,0xffbeffff
  42b9fb:	repnz in al,dx
  42b9fd:	call   FWORD PTR [eax+0x0]
  42ba00:	inc    DWORD PTR [ebp+0x0]
  42ba03:	(bad)  
  42ba04:	pop    ss
  42ba05:	sub    DWORD PTR [esi-0xdb0000],0x14
  42ba0c:	addr16 inc edi
  42ba0f:	cmp    edi,0x53
  42ba12:	(bad)  
  42ba13:	cmp    dh,bh
  42ba15:	int3   
  42ba16:	rol    DWORD PTR [ebx-0x36005a00],0x79
  42ba1d:	int3   
  42ba1e:	enter  0x83,0xa9
  42ba22:	inc    DWORD PTR [ebx]
  42ba24:	out    dx,eax
  42ba25:	call   DWORD PTR [eax-0x1]
  42ba28:	add    BYTE PTR [esi],ah
  42ba2a:	push   DWORD PTR [ebp-0x19ffbf]
  42ba30:	push   DWORD PTR [ebx-0x1]
  42ba33:	and    DWORD PTR [ebx-0x33006501],esi
  42ba39:	xor    al,0xff
  42ba3b:	lea    ebp,[ebp+0xa9ff]
  42ba41:	leave  
  42ba42:	jmp    DWORD PTR [eax+0x54]
  42ba45:	add    esp,0xffffffff
  42ba48:	add    BYTE PTR [edx],bl
  42ba4a:	jmp    FWORD PTR [edx-0x7aff02]
  42ba50:	call   FWORD PTR [eax-0xf98000]
  42ba56:	add    BYTE PTR ds:[eax],al
  42ba59:	scas   eax,DWORD PTR es:[edi]
  42ba5a:	add    dh,ch
  42ba5c:	adc    edi,edi
  42ba5e:	cmp    BYTE PTR [ebx-0x1a00df01],al
  42ba64:	ja     0x42ba65
  42ba66:	inc    DWORD PTR [bx+si]
  42ba69:	jle    0x42b9ee
  42ba6b:	cmp    al,BYTE PTR [esp+ecx*8]
  42ba6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba6f:	(bad)  
  42ba70:	dec    edx
  42ba72:	add    BYTE PTR [eax-0xb4ff85],ah
  42ba78:	add    BYTE PTR [ebx-0xafcb01],ch
  42ba7e:	int3   
  42ba7f:	inc    DWORD PTR [eax]
  42ba81:	jb     0x42ba82
  42ba83:	int3   
  42ba84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba85:	dec    esi
  42ba87:	add    BYTE PTR [eax],al
  42ba89:	(bad)  
  42ba8b:	test   al,0x48
  42ba8d:	dec    DWORD PTR [edx-0x77]
  42ba90:	jmp    DWORD PTR [esi]
  42ba92:	int3   
  42ba93:	inc    ecx
  42ba94:	or     eax,0xffff6eff
  42ba99:	cmp    edi,edi
  42ba9b:	jne    0x42baad
  42ba9d:	add    dh,dl
  42ba9f:	add    BYTE PTR [eax],al
  42baa1:	and    eax,0x830e4c00
  42baa6:	mov    bl,0xff
  42baa8:	push   esp
  42baaa:	call   FWORD PTR [edi-0x107cf5]
  42bab0:	add    BYTE PTR [ebx+eax*4+0x79],dh
  42bab4:	dec    ecx
  42bab5:	call   DWORD PTR [esi+0x38ffff]
  42babb:	jbe    0x42bab9
  42babd:	jmp    FWORD PTR [edi+0x0]
  42bac0:	add    cl,bh
  42bac2:	(bad)  
  42bac3:	fbstp  TBYTE PTR [edi-0x7c00e401]
  42bac9:	xchg   edi,edi
  42bacb:	inc    ebx
  42bacc:	nop
  42bacd:	add    BYTE PTR [edi],dh
  42bacf:	(bad)  
  42bad0:	inc    DWORD PTR [edi+edi*8-0x26]
  42bad4:	hlt    
  42bad5:	sub    DWORD PTR [ebp-0x7d],0xffffffff
  42bad9:	mov    ecx,0xf18289
  42bade:	pop    esi
  42badf:	dec    esp
  42bae1:	test   esp,0x35cc4fa4
  42bae7:	inc    DWORD PTR [eax]
  42bae9:	adc    al,BYTE PTR [eax]
  42baeb:	adc    bl,bh
  42baed:	add    BYTE PTR [esi+0x0],bl
  42baf0:	call   FWORD PTR [ebx-0x34]
  42baf3:	sub    edx,DWORD PTR [ecx+0xedff]
  42baf9:	dec    edi
  42bafa:	push   DWORD PTR [ebx+esi*1-0x76005901]
  42bb01:	repnz inc ebx
  42bb04:	dec    DWORD PTR es:[edi-0x76930001]
  42bb0b:	mov    eax,0xfcffd6
  42bb10:	(bad)  
  42bb11:	jle    0x42badf
  42bb13:	jnp    0x42bb92
  42bb15:	add    BYTE PTR [edx],dh
  42bb17:	(bad)  
  42bb18:	inc    DWORD PTR [ebx]
  42bb1a:	cmp    DWORD PTR [eax],0xffffffef
  42bb1d:	inc    DWORD PTR [edx+0x0]
  42bb20:	add    BYTE PTR [eax+0xed13ff],al
  42bb26:	mov    al,BYTE PTR [eax]
  42bb28:	add    BYTE PTR [edi+edi*8+0x52ffd85c],cl
  42bb2f:	(bad)  
  42bb30:	dec    edx
  42bb32:	int3   
  42bb33:	jbe    0x42bb46
  42bb35:	inc    DWORD PTR [edx]
  42bb37:	add    BYTE PTR [eax],al
  42bb39:	aaa    
  42bb3a:	(bad)  
  42bb3b:	cmp    BYTE PTR [ebp+0xff2eff],al
  42bb41:	ja     0x42bb43
  42bb43:	int    0x44
  42bb45:	add    BYTE PTR [edx-0x1],al
  42bb48:	int3   
  42bb49:	inc    ebp
  42bb4a:	sub    DWORD PTR [ecx+0x87cc59],0x0
  42bb51:	sub    al,BYTE PTR [eax]
  42bb53:	pop    edx
  42bb54:	jbe    0x42bb56
  42bb56:	push   esi
  42bb57:	add    bh,bh
  42bb59:	mov    ecx,0xff0b57cc
  42bb5e:	push   eax
  42bb5f:	cmp    edi,0x22
  42bb62:	add    BYTE PTR [ecx-0x44],dl
  42bb65:	call   FWORD PTR [esi-0x33a30001]
  42bb6b:	pusha  
  42bb6c:	ret    
  42bb6d:	jmp    FWORD PTR [edx+0x0]
  42bb70:	or     DWORD PTR ds:0xa79100,0x6
  42bb77:	(bad)  
  42bb78:	(bad)  
  42bb79:	cmp    eax,0xff0ef600
  42bb7e:	enter  0xff83,0x9a
  42bb82:	call   DWORD PTR [esi+0x68]
  42bb85:	xor    DWORD PTR [ebx],0xffffff89
  42bb88:	(bad)  
  42bb89:	fdiv   st(7),st
  42bb8b:	sub    DWORD PTR [esi+0x0],esi
  42bb8e:	rol    DWORD PTR [eax],cl
  42bb90:	int3   
  42bb91:	fdivp  st(7),st
  42bb93:	(bad)  
  42bb94:	xchg   edi,eax
  42bb95:	add    BYTE PTR [edi-0x77],dl
  42bb98:	jmp    FWORD PTR ds:0x833f0cff
  42bb9e:	mov    DWORD PTR [ebx-0x51ff6001],0xff6d83dc
  42bba8:	jmp    FWORD PTR [ebx-0x7d]
  42bbab:	xor    BYTE PTR [ebx],cl
  42bbad:	jmp    FWORD PTR [eax]
  42bbaf:	add    BYTE PTR [ecx-0xd0c7ca8],cl
  42bbb5:	(bad)  
  42bbb6:	(bad)  
  42bbb7:	dec    DWORD PTR [ecx-0x516dffae]
  42bbbd:	add    BYTE PTR [esp+ecx*8-0x1],ah
  42bbc1:	in     eax,dx
  42bbc2:	adc    DWORD PTR [ebx+0xd1ff5d],0x0
  42bbc9:	mov    WORD PTR [eax],es
  42bbcb:	retf   0xffbc
  42bbce:	dec    eax
  42bbcf:	cmp    edi,0x1f
  42bbd2:	mov    DWORD PTR [ebx-0x47004c],esp
  42bbd8:	(bad)  
  42bbd9:	mov    esi,0xcc8a8e89
  42bbde:	mov    cl,0x0
  42bbe0:	dec    DWORD PTR [ebx]
  42bbe2:	add    BYTE PTR [edx-0xa076b6],dh
  42bbe8:	sbb    DWORD PTR [ebx],0xffffff83
  42bbeb:	sbb    DWORD PTR [edx+0x0],0xfffffff5
  42bbef:	add    bh,bh
  42bbf1:	pop    esp
  42bbf2:	mov    DWORD PTR [edi+0x5d],ebx
  42bbf5:	adc    DWORD PTR [esi-0x8b7677],0x4
  42bbfc:	and    bh,bh
  42bbfe:	or     edi,edi
  42bc00:	call   FWORD PTR [esi-0x1]
  42bc03:	mov    bl,0x6b
  42bc05:	add    BYTE PTR [ebp+0x0],cl
  42bc08:	and    DWORD PTR [edx],0xffffffff
  42bc0b:	xchg   edx,eax
  42bc0c:	jae    0x42bb91
  42bc0e:	fwait
  42bc0f:	int3   
  42bc10:	add    BYTE PTR [ebx],dl
  42bc12:	add    BYTE PTR [edi+0x700de],ch
  42bc18:	push   DWORD PTR [edx]
  42bc1a:	jmp    DWORD PTR [ebp+0x3e]
  42bc1d:	inc    DWORD PTR [edi-0x33520100]
  42bc23:	int    0x4d
  42bc25:	(bad)  
  42bc26:	mov    eax,0x46ff83
  42bc2b:	sub    ax,WORD PTR [ebx-0x2f007c7c]
  42bc32:	jmp    FWORD PTR [edx+esi*8]
  42bc35:	int3   
  42bc36:	scas   al,BYTE PTR es:[edi]
  42bc37:	add    BYTE PTR [ebx-0x1295ffdf],al
  42bc3d:	(bad)  
  42bc3e:	fiadd  DWORD PTR [eax]
  42bc40:	push   DWORD PTR [ecx-0x1]
  42bc43:	ins    DWORD PTR es:[edi],dx
  42bc44:	mov    edi,edi
  42bc46:	dec    ebx
  42bc47:	add    BYTE PTR [eax],al
  42bc49:	and    al,BYTE PTR [eax]
  42bc4b:	pop    ds
  42bc4c:	test   DWORD PTR [eax],eax
  42bc4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc4f:	dec    DWORD PTR [ecx+0x1cb0ffc1]
  42bc55:	add    BYTE PTR [edx+0x76ff83],dl
  42bc5b:	leave  
  42bc5c:	fiadd  WORD PTR [eax]
  42bc5e:	mov    al,0xff
  42bc60:	jmp    FWORD PTR [edi+edi*8-0x6d]
  42bc64:	xchg   DWORD PTR [eax],eax
  42bc66:	cmp    al,0x83
  42bc68:	add    bl,bh
  42bc6a:	dec    DWORD PTR [esi+0x9fcc83]
  42bc70:	add    BYTE PTR [edx],al
  42bc72:	jmp    DWORD PTR [esi-0xcb76b0]
  42bc78:	add    BYTE PTR [ebp-0x7d],dh
  42bc7b:	call   0xb900:0xffe6ff3a
  42bc82:	(bad)  
  42bc83:	jg     0x42bcf4
  42bc85:	mov    DWORD PTR [ebx],ebp
  42bc87:	or     DWORD PTR [ecx-0x36bf002f],0x0
  42bc8e:	iret   
  42bc8f:	inc    DWORD PTR [eax]
  42bc91:	lock add BYTE PTR [ebp+ebp*1-0x7c762734],cl
  42bc99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc9a:	dec    DWORD PTR ds:0xffa483fe
  42bca0:	jmp    DWORD PTR [edx+0x0]
  42bca3:	ud2    
  42bca5:	add    BYTE PTR [edx+0x0],ah
  42bca8:	mov    DWORD PTR [edi+edi*8+0x76],ebx
  42bcac:	mov    bh,0xff
  42bcae:	cs add bh,bh
  42bcb1:	jbe    0x42bc7f
  42bcb3:	or     eax,0xffbc0089
  42bcb8:	int3   
  42bcb9:	mov    bl,0xff
  42bcbb:	adc    BYTE PTR [edi],bh
  42bcbd:	add    BYTE PTR [edi+edi*8],dl
  42bcc0:	add    BYTE PTR [edi+edi*8+0x22],ch
  42bcc4:	mov    al,0x83
  42bcc6:	adc    al,0xff
  42bcc8:	call   FWORD PTR [edi]
  42bcca:	(bad)  
  42bccb:	out    dx,al
  42bccc:	cdq    
  42bccd:	add    BYTE PTR [edx],al
  42bccf:	mov    edi,edi
  42bcd1:	push   ss
  42bcd2:	(bad)  
  42bcd3:	in     eax,dx
  42bcd4:	jp     0x42bcd5
  42bcd6:	add    DWORD PTR [ebx-0x1affe800],eax
  42bcdc:	sbb    bh,bh
  42bcde:	pop    es
  42bcdf:	add    ah,cl
  42bce1:	ja     0x42bce3
  42bce3:	push   eax
  42bce4:	xchg   ecx,eax
  42bce5:	add    BYTE PTR [ecx-0x1],dh
  42bce8:	and    DWORD PTR [ecx-0x20bc01],0x60
  42bcef:	inc    DWORD PTR [eax]
  42bcf1:	mov    dl,0xff
  42bcf3:	dec    esp
  42bcf4:	js     0x42bcf6
  42bcf6:	mov    edi,0xff9d00ff
  42bcfb:	out    dx,al
  42bcfc:	outs   dx,BYTE PTR ds:[esi]
  42bcfd:	mov    DWORD PTR [edi-0x1],esp
  42bd00:	add    BYTE PTR [ebx-0x7d],al
  42bd03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd04:	xchg   esi,eax
  42bd05:	int3   
  42bd06:	cli    
  42bd07:	(bad)  
  42bd08:	inc    DWORD PTR [ecx+0x4266ff]
  42bd0e:	sbb    eax,0xcccaffcc
  42bd13:	outs   dx,DWORD PTR ds:[esi]
  42bd14:	call   WORD PTR [eax+eax*1]
  42bd18:	jmp    DWORD PTR [esi-0x1]
  42bd1b:	mov    dl,0x53
  42bd1d:	inc    DWORD PTR [edi+edi*8-0x77]
  42bd21:	pop    eax
  42bd22:	(bad)  
  42bd23:	cmp    BYTE PTR [eax-0xffc600],ah
  42bd29:	push   ss
  42bd2a:	(bad)  
  42bd2b:	(bad)  
  42bd2d:	add    BYTE PTR [eax+eax*1],bh
  42bd30:	add    BYTE PTR [esi+0x1dca00],bl
  42bd36:	sub    al,0x89
  42bd38:	xor    DWORD PTR [ebx+eax*4-0x7e],0x58
  42bd3d:	int3   
  42bd3e:	(bad)  
  42bd3f:	(bad)  
  42bd40:	(bad)  
  42bd41:	cmp    ah,cl
  42bd43:	xor    eax,0x835d890a
  42bd48:	push   edx
  42bd4a:	add    ch,dh
  42bd4c:	and    eax,0xffff0500
  42bd51:	xchg   bh,bh
  42bd53:	sahf   
  42bd54:	or     bh,bh
  42bd56:	imul   edi,edi,0x0
  42bd59:	fdivr  st,st(7)
  42bd5b:	xchg   ebp,eax
  42bd5c:	fild   DWORD PTR [eax]
  42bd5e:	iret   
  42bd5f:	add    bh,bh
  42bd61:	inc    esp
  42bd62:	(bad)  
  42bd63:	dec    BYTE PTR [esi]
  42bd65:	or     DWORD PTR [ebx-0x34],0x0
  42bd69:	mov    bl,0x83
  42bd6b:	xchg   ebx,eax
  42bd6c:	inc    edi
  42bd6d:	jmp    FWORD PTR [ebp-0x5dff01]
  42bd73:	(bad)  
  42bd74:	mov    bl,0xff
  42bd76:	dec    edx
  42bd77:	(bad)  
  42bd78:	call   FWORD PTR [eax]
  42bd7a:	(bad)  
  42bd7b:	jl     0x42bd3b
  42bd7d:	add    dh,bh
  42bd7f:	inc    DWORD PTR [eax]
  42bd81:	loop   0x42bd82
  42bd83:	adc    ebp,esp
  42bd85:	int3   
  42bd86:	out    dx,al
  42bd87:	add    DWORD PTR [ebx+0x1a3b0005],0x0
  42bd8e:	arpl   WORD PTR [eax],ax
  42bd90:	(bad)  
  42bd91:	jnp    0x42bd93
  42bd93:	in     eax,0xb7
  42bd95:	add    BYTE PTR ds:0x89aaff83,al
  42bd9b:	inc    esp
  42bd9c:	dec    ebx
  42bd9d:	add    BYTE PTR [esi],dl
  42bd9f:	add    ah,cl
  42bda1:	int    0xff
  42bda3:	sbb    dl,BYTE PTR [ebx]
  42bda5:	dec    DWORD PTR [ecx-0x1]
  42bda8:	mov    edx,edi
  42bdaa:	add    BYTE PTR [edx+0x8400a8],ch
  42bdb0:	add    BYTE PTR [ebx],cl
  42bdb2:	adc    ebp,0x12
  42bdb5:	jmp    DWORD PTR [esi-0x1]
  42bdb8:	adc    DWORD PTR [esp+ecx*8+0x6f],0x17
  42bdbd:	int3   
  42bdbe:	add    BYTE PTR gs:[eax],al
  42bdc1:	out    0x0,al
  42bdc3:	inc    WORD PTR [bx+si+0x0]
  42bdc9:	add    al,0xff
  42bdcb:	mov    BYTE PTR [ebp-0x1],ah
  42bdce:	dec    edx
  42bdcf:	(bad)  
  42bdd0:	dec    DWORD PTR [ecx]
  42bdd2:	inc    DWORD PTR [ebx]
  42bdd4:	pop    esp
  42bdd5:	add    BYTE PTR [edi+0x72ffff],cl
  42bddb:	and    esp,0xcccc1200
  42bde1:	mov    WORD PTR [eax],es
  42bde3:	shr    DWORD PTR [esi+0xff64ff],1
  42bde9:	sbb    edi,edi
  42bdeb:	bound  ebx,QWORD PTR [esi+0x0]
  42bdee:	(bad)  
  42bdef:	dec    esp
  42bdf1:	sub    edi,edi
  42bdf3:	out    dx,eax
  42bdf4:	jecxz  0x42bdf5
  42bdf6:	imul   eax,DWORD PTR [ebx+0x63831c00],0xffffffc8
  42bdfd:	add    BYTE PTR [eax],bh
  42bdff:	or     DWORD PTR [ecx-0x1f71ffad],0xffffffff
  42be06:	int3   
  42be07:	inc    DWORD PTR [eax]
  42be09:	inc    esp
  42be0a:	int3   
  42be0b:	or     al,0x5b
  42be0d:	add    BYTE PTR [ebx+eax*4],bl
  42be10:	int3   
  42be11:	lock jmp DWORD PTR [ebx-0x6]
  42be15:	add    bl,cl
  42be17:	inc    DWORD PTR [eax]
  42be19:	sar    bh,cl
  42be1b:	xchg   esi,eax
  42be1c:	repz inc esi
  42be1f:	add    bh,bh
  42be21:	(bad)  
  42be22:	call   FWORD PTR [esi]
  42be24:	mov    ?,edi
  42be26:	nop
  42be27:	add    bh,bh
  42be29:	mov    ecx,esp
  42be2b:	jnp    0x42bdd2
  42be2d:	sub    edx,0xffffffff
  42be30:	push   DWORD PTR [ebx-0x1]
  42be33:	je     0x42be3f
  42be35:	int3   
  42be36:	ret    0xff00
  42be39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be3a:	int3   
  42be3b:	test   al,0x59
  42be3d:	add    cl,ah
  42be3f:	inc    DWORD PTR [eax]
  42be41:	jmp    0x42be43
  42be43:	sbb    DWORD PTR [edx-0x76005234],esi
  42be49:	je     0x42be4a
  42be4b:	mov    eax,0xff8cffde
  42be50:	add    edi,0xffffffff
  42be53:	pop    DWORD PTR [ebx]
  42be55:	int3   
  42be56:	aad    0x83
  42be58:	push   edx
  42be5a:	call   FWORD PTR [ebp+0x53]
  42be5d:	add    bl,ch
  42be5f:	inc    DWORD PTR [eax]
  42be61:	mov    edi,edi
  42be63:	scas   eax,DWORD PTR es:[edi]
  42be64:	ss add dl,ch
  42be67:	cmp    edi,0xffffffbf
  42be6a:	add    BYTE PTR [eax],ah
  42be6c:	loope  0x42be6e
  42be6e:	xchg   ebx,eax
  42be6f:	inc    DWORD PTR [ebx-0x317500f0]
  42be75:	add    BYTE PTR [edi+edi*8],bh
  42be78:	add    BYTE PTR [edx-0x5e0900],cl
  42be7e:	cmp    edi,0x0
  42be81:	jo     0x42be4f
  42be83:	push   eax
  42be84:	jmp    0xf5f88
  42be89:	aaa    
  42be8a:	inc    esp
  42be8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be8d:	add    BYTE PTR [edi+edi*8-0x2b003401],cl
  42be94:	dec    edi
  42be95:	add    cl,al
  42be97:	inc    DWORD PTR [ebx+0x6a000d8]
  42be9d:	jmp    eax
  42be9f:	int3   
  42bea0:	push   DWORD PTR [ebp-0x816c01]
  42bea6:	mov    bh,bh
  42bea8:	xor    eax,0xffffff89
  42beab:	mov    esp,0x2f8368
  42beb0:	push   DWORD PTR [edx]
  42beb2:	adc    DWORD PTR [esi+0xf0cccc],0xffffffff
  42beb9:	cmp    al,0xff
  42bebb:	pop    ss
  42bebc:	xchg   edi,eax
  42bebd:	cmp    DWORD PTR [edi-0xcff01],0xffffff8a
  42bec4:	mov    ds:0x9800,al
  42bec9:	out    dx,eax
  42beca:	jmp    FWORD PTR [ecx-0x337b0052]
  42bed0:	add    BYTE PTR [edx-0xd1a801],dl
  42bed6:	jb     0x42be61
  42bed8:	jmp    edi
  42beda:	add    BYTE PTR [ebp-0x39],cl
  42bedd:	add    bh,bl
  42bedf:	inc    DWORD PTR [eax]
  42bee1:	xchg   edi,eax
  42bee2:	inc    DWORD PTR [ebp+0x2b]
  42bee5:	xor    esp,0x0
  42bee8:	add    BYTE PTR [edx-0x1],ch
  42beeb:	add    cl,dh
  42beed:	int3   
  42beee:	sub    DWORD PTR [eax],eax
  42bef0:	add    BYTE PTR [eax+0xf489ff],ch
  42bef6:	aaa    
  42bef7:	add    BYTE PTR [eax],al
  42bef9:	jbe    0x42befb
  42befb:	sti    
  42befc:	pop    ds
  42befd:	inc    DWORD PTR [edi+0x0]
  42bf00:	inc    DWORD PTR [ecx]
  42bf02:	jmp    eax
  42bf04:	push   ebx
  42bf05:	call   FWORD PTR [esi-0x7d]
  42bf08:	add    BYTE PTR [edx+0x4c55ff],cl
  42bf0e:	dec    ecx
  42bf0f:	mov    DWORD PTR [eax],eax
  42bf11:	mov    DWORD PTR [eax],eax
  42bf13:	fistp  WORD PTR [ebx-0x7cff9000]
  42bf19:	sub    bh,bh
  42bf1b:	fs inc ebx
  42bf1d:	dec    edx
  42bf1f:	dec    esp
  42bf21:	jg     0x42bea6
  42bf23:	sbb    DWORD PTR [eax+0x0],edi
  42bf26:	xchg   esi,eax
  42bf27:	add    bh,bh
  42bf29:	dec    esi
  42bf2a:	push   DWORD PTR [edi]
  42bf2c:	(bad)  
  42bf2d:	int3   
  42bf2e:	mov    al,ds:0x836effff
  42bf33:	add    dl,ch
  42bf35:	add    BYTE PTR ds:0xccb90000,dl
  42bf3b:	inc    ebx
  42bf3c:	pusha  
  42bf3d:	add    BYTE PTR [eax],al
  42bf3f:	inc    DWORD PTR [ebx+0x199300bf]
  42bf45:	(bad)  
  42bf46:	clc    
  42bf47:	mov    DWORD PTR [ebx+0x2ca683f4],eax
  42bf4d:	dec    ecx
  42bf4f:	(bad)  
  42bf50:	push   DWORD PTR [eax-0x5e0b7d]
  42bf56:	cmp    eax,DWORD PTR [eax]
  42bf58:	call   esi
  42bf5a:	dec    DWORD PTR [esi-0x76d7ff46]
  42bf60:	add    bl,bl
  42bf62:	jmp    FWORD PTR [edx+0x61]
  42bf65:	add    BYTE PTR [ebp-0x1],al
  42bf68:	int3   
  42bf69:	jp     0x42bf6b
  42bf6b:	pop    ebx
  42bf6c:	lds    eax,FWORD PTR [eax]
  42bf6e:	xor    eax,0x895c0000
  42bf73:	call   0xff6cbf53
  42bf78:	add    BYTE PTR [edx-0x1],al
  42bf7b:	daa    
  42bf7c:	push   0xffff9d83
  42bf81:	clc    
  42bf82:	call   FWORD PTR [esi]
  42bf84:	outs   dx,DWORD PTR ds:[esi]
  42bf85:	jmp    DWORD PTR [eax-0x1]
  42bf88:	(bad)  
  42bf89:	in     al,dx
  42bf8a:	int3   
  42bf8b:	fstp   TBYTE PTR [eax-0x7d]
  42bf8e:	mov    BYTE PTR [eax],0xcc
  42bf91:	cmp    ecx,esp
  42bf93:	adc    cl,dh
  42bf95:	mov    DWORD PTR [ecx],edx
  42bf97:	(bad)  
  42bf98:	dec    DWORD PTR [eax-0x34]
  42bf9b:	sbb    al,BYTE PTR [ecx-0x76006301]
  42bfa1:	inc    edi
  42bfa2:	add    BYTE PTR [edi],bh
  42bfa4:	mov    BYTE PTR [eax],0x8b
  42bfa7:	(bad)  
  42bfa8:	jmp    FWORD PTR [ebx-0x21f00]
  42bfae:	jns    0x42bf7c
  42bfb0:	inc    DWORD PTR [ebx]
  42bfb2:	call   FWORD PTR [esi]
  42bfb4:	xor    eax,0xffc900
  42bfb9:	push   es
  42bfba:	add    bl,bh
  42bfbc:	fadd   DWORD PTR [ebx-0x4100fff5]
  42bfc2:	(bad)  
  42bfc3:	call   FWORD PTR [ecx-0x7c7c0901]
  42bfc9:	(bad)  
  42bfcc:	mov    es,WORD PTR [eax]
  42bfce:	sti    
  42bfcf:	add    bh,bh
  42bfd1:	cld    
  42bfd2:	jmp    FWORD PTR [ebx]
  42bfd4:	xchg   edi,edi
  42bfd6:	retf   
  42bfd7:	dec    esp
  42bfd9:	ret    0xa800
  42bfdc:	mov    ds:0x89ffef00,al
  42bfe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfe2:	add    BYTE PTR [ecx],bl
  42bfe4:	stc    
  42bfe5:	inc    DWORD PTR [ebp-0x1]
  42bfe8:	add    BYTE PTR [edx+0x0],cl
  42bfeb:	jnp    0x42bf90
  42bfed:	add    BYTE PTR [edi+edi*8-0x34],bl
  42bff1:	lock (bad) 
  42bff3:	fdivr  QWORD PTR [ebx-0x34]
  42bff6:	(bad)  
  42bff8:	(bad)  
  42bff9:	jg     0x42bffb
  42bffb:	and    ch,BYTE PTR [eax+eax*1+0x7eff00af]
  42c002:	add    bl,ch
  42c004:	mov    cl,0x83
  42c006:	data16 add ah,cl
  42c009:	mov    bh,bh
  42c00b:	pop    esp
  42c00c:	test   DWORD PTR [eax],0xaeffffbe
  42c012:	inc    DWORD PTR [ecx-0x331bff6c]
  42c018:	dec    DWORD PTR [edi]
  42c01a:	add    BYTE PTR [ecx-0x80],bh
  42c01d:	dec    ecx
  42c01f:	inc    DWORD PTR [eax]
  42c021:	mov    ebx,0xffbe56ff
  42c026:	push   esp
  42c027:	mov    DWORD PTR [ebx-0x42cb00cc],eax
  42c02d:	add    BYTE PTR [ebp+0x0],cl
  42c030:	jmp    FWORD PTR [eax+eax*1-0x6100132a]
  42c037:	add    BYTE PTR [eax],al
  42c039:	fcos   
  42c03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c03c:	adc    bh,bh
  42c03e:	xor    al,0xff
  42c040:	mov    DWORD PTR [ecx-0x755600],ecx
  42c046:	mov    bl,0x0
  42c048:	add    BYTE PTR ds:0xff709600,dl
  42c04e:	and    edi,edi
  42c050:	call   edi
  42c052:	(bad)  
  42c053:	mov    esi,0x74ffe3
  42c058:	add    BYTE PTR [edi-0x718801],bl
  42c05e:	lods   al,BYTE PTR ds:[esi]
  42c05f:	add    bh,bh
  42c061:	icebp  
  42c062:	xor    DWORD PTR [edi+edi*1-0x7c00de7d],0xfffffff0
  42c06a:	cmp    edi,0x12
  42c06d:	int3   
  42c06e:	loope  0x42c070
  42c070:	add    BYTE PTR [ecx],cl
  42c072:	add    BYTE PTR [edx+ebp*2-0x1],al
  42c076:	in     al,dx
  42c077:	inc    DWORD PTR [eax]
  42c079:	inc    ebp
  42c07a:	int3   
  42c07b:	call   0xff9ec14d
  42c080:	add    BYTE PTR [esi],bl
  42c082:	int3   
  42c083:	sub    al,0x5d
  42c085:	sub    esi,0xffffff83
  42c088:	jmp    DWORD PTR [ebx]
  42c08a:	inc    edi
  42c08c:	js     0x42c011
  42c08e:	scas   eax,DWORD PTR es:[edi]
  42c08f:	inc    DWORD PTR [ebx-0x27940054]
  42c095:	add    edx,0xffffffff
  42c098:	mov    DWORD PTR [ecx],eax
  42c09a:	add    BYTE PTR [eax],ch
  42c09c:	loop   0x42c09e
  42c09e:	test   DWORD PTR [eax],eax
  42c0a0:	jmp    DWORD PTR [ecx-0x7d]
  42c0a3:	add    BYTE PTR [ebp-0x7c008300],ah
  42c0a9:	mov    edx,0xff7611cc
  42c0ae:	(bad)  
  42c0af:	mov    edi,edi
  42c0b1:	jmp    DWORD PTR [ebx-0x7e]
  42c0b5:	add    al,ah
  42c0b7:	dec    DWORD PTR [ecx+0x1b37ff34]
  42c0bd:	(bad)  
  42c0be:	(bad)  
  42c0c0:	(bad)  
  42c0c1:	cli    
  42c0c2:	dec    DWORD PTR [esi-0x75]
  42c0c5:	(bad)  
  42c0c6:	inc    BYTE PTR [eax]
  42c0c8:	call   FWORD PTR [ecx+0xd7cdff]
  42c0ce:	adc    DWORD PTR [eax],eax
  42c0d0:	or     DWORD PTR [esi-0x76c92601],0x57
  42c0d7:	(bad)  
  42c0d8:	call   FWORD PTR [ebx+eax*4]
  42c0db:	shl    DWORD PTR [edx-0x1],0x9f
  42c0df:	int3   
  42c0e0:	mov    DWORD PTR [ecx-0x62d800],eax
  42c0e6:	data16 add BYTE PTR [ebx-0x1904007a],al
  42c0ed:	(bad)  
  42c0ee:	jns    0x42c079
  42c0f0:	mov    DWORD PTR [esi-0x7d],eax
  42c0f3:	ret    0xcc03
  42c0f6:	add    al,0x89
  42c0f8:	inc    DWORD PTR [ebp+0x0]
  42c0fb:	popf   
  42c0fc:	scas   al,BYTE PTR es:[edi]
  42c0fd:	add    BYTE PTR [edi-0x7d],ch
  42c100:	inc    ecx
  42c102:	jmp    DWORD PTR [ecx]
  42c104:	mov    DWORD PTR es:[esi-0x1],ecx
  42c108:	inc    DWORD PTR [eax+eax*1]
  42c10b:	out    dx,al
  42c10c:	call   0xffc68011
  42c111:	retf   0x2a00
  42c114:	imul   edi,edi,0xb5ffff4c
  42c11a:	call   FWORD PTR [ecx+0x9008c]
  42c120:	add    bh,bh
  42c122:	add    BYTE PTR [edi+edi*8-0x63],ah
  42c126:	or     edi,eax
  42c128:	(bad)  
  42c129:	inc    DWORD PTR [eax]
  42c12b:	add    DWORD PTR [eax],0xffffff85
  42c12e:	outs   dx,BYTE PTR ds:[esi]
  42c12f:	stos   DWORD PTR es:[edi],eax
  42c130:	mov    edi,edi
  42c132:	jmp    DWORD PTR [edi+edi*8-0x80]
  42c136:	fwait
  42c137:	cmp    edi,edi
  42c139:	(bad)  
  42c13a:	jmp    DWORD PTR [eax-0x1]
  42c13d:	cwde   
  42c13e:	push   0xffffffcc
  42c140:	inc    DWORD PTR [eax]
  42c142:	call   FWORD PTR [edi+edi*8+0x74]
  42c146:	and    ah,BYTE PTR [eax]
  42c148:	(bad)  
  42c149:	inc    DWORD PTR [eax]
  42c14b:	sub    ah,cl
  42c14d:	or     ch,al
  42c14f:	pop    esp
  42c150:	inc    DWORD PTR [eax]
  42c152:	int3   
  42c153:	add    al,BYTE PTR [eax]
  42c155:	xchg   ebx,eax
  42c156:	scas   eax,DWORD PTR es:[edi]
  42c157:	enter  0x8383,0x89
  42c15b:	sbb    bh,bh
  42c15d:	mov    ah,0xa1
  42c15f:	jp     0x42c160
  42c161:	int3   
  42c162:	inc    DWORD PTR [ebx+0x0]
  42c165:	mov    dh,0xd
  42c167:	cmp    edi,0xffffffff
  42c16a:	dec    DWORD PTR [edi+0x0]
  42c16d:	mov    eax,0x83830bb2
  42c172:	jmp    esi
  42c174:	add    BYTE PTR [edx],dh
  42c176:	data16 sahf 
  42c178:	add    bh,bh
  42c17a:	dec    DWORD PTR [ebp+0x68d6a683]
  42c180:	add    BYTE PTR [ecx-0x4b004d7d],cl
  42c186:	pop    eax
  42c187:	call   0xbcff:0x6effff00
  42c18e:	pop    ecx
  42c18f:	add    BYTE PTR cs:[ebx-0x333cc01],al
  42c196:	aad    0x69
  42c198:	inc    DWORD PTR [eax]
  42c19a:	push   DWORD PTR [ebx+eax*4]
  42c19d:	xor    BYTE PTR [edi-0x7c],dl
  42c1a0:	add    BYTE PTR [eax],al
  42c1a2:	call   FWORD PTR [edi-0x24776e00]
  42c1a8:	(bad)  
  42c1a9:	(bad)  
  42c1aa:	jmp    esi
  42c1ac:	(bad)  
  42c1ad:	cmp    BYTE PTR [ebx-0xd],cl
  42c1b0:	(bad)  
  42c1b1:	(bad)  
  42c1b2:	(bad)  
  42c1b3:	mov    ebp,0x798cd3ff
  42c1b8:	add    BYTE PTR [eax],al
  42c1ba:	add    BYTE PTR [ebx-0x1],bh
  42c1bd:	sbb    ebp,DWORD PTR [esi+0x22]
  42c1c0:	add    bh,bh
  42c1c2:	cmp    DWORD PTR [edi],0xffffffff
  42c1c5:	in     al,0xd2
  42c1c7:	push   edx
  42c1c8:	inc    DWORD PTR [eax]
  42c1ca:	add    BYTE PTR [ecx],cl
  42c1cc:	add    BYTE PTR [edx-0x7c763806],cl
  42c1d2:	dec    ecx
  42c1d4:	mov    DWORD PTR [esi-0x64],edi
  42c1d7:	rol    BYTE PTR [eax],0xcc
  42c1da:	call   FWORD PTR [eax+0x0]
  42c1dd:	and    eax,0xffff981f
  42c1e2:	add    DWORD PTR [edi-0x1],0x26
  42c1e6:	xor    bh,BYTE PTR [edi+edi*8]
  42c1e9:	add    DWORD PTR [eax],0x5c
  42c1ec:	push   DWORD PTR [esi]
  42c1ee:	(bad)  
  42c1ef:	(bad)  
  42c1f0:	inc    DWORD PTR [eax]
  42c1f2:	int3   
  42c1f3:	cmp    bh,bh
  42c1f5:	lea    ebx,[ecx+0x41]
  42c1f8:	inc    DWORD PTR [eax]
  42c1fa:	mov    DWORD PTR [edx+0x12c11bff],ecx
  42c200:	add    BYTE PTR [eax],al
  42c202:	mov    DWORD PTR [ebx-0x580b2601],ebx
  42c208:	add    DWORD PTR [ebx+0x27006389],0xfffffff3
  42c20f:	xchg   esi,eax
  42c210:	int3   
  42c211:	cmp    edi,0x20
  42c214:	int3   
  42c215:	pop    esi
  42c216:	xchg   esi,eax
  42c217:	icebp  
  42c218:	cmp    edi,0xffffff83
  42c21b:	ins    BYTE PTR es:[edi],dx
  42c21c:	xor    DWORD PTR [ebx-0xa],0x5e
  42c220:	(bad)  
  42c221:	inc    DWORD PTR [ebx-0x441e00fd]
  42c227:	and    al,0x0
  42c229:	add    bh,bh
  42c22b:	fcos   
  42c22d:	loop   0x42c21c
  42c22f:	aaa    
  42c230:	add    bh,bh
  42c232:	adc    DWORD PTR [esi],0x0
  42c235:	in     al,0x80
  42c237:	sub    eax,0x4589ffff
  42c23c:	(bad)  
  42c23d:	out    dx,al
  42c23e:	out    0x92,al
  42c240:	add    bh,bh
  42c242:	call   DWORD PTR [edi+edi*8+0x26]
  42c246:	or     ecx,ebx
  42c248:	add    BYTE PTR [eax],al
  42c24a:	push   DWORD PTR [eax+eax*1-0x7c772244]
  42c251:	mov    DWORD PTR [eax],eax
  42c253:	and    bh,bh
  42c255:	mov    ebp,0xffff2540
  42c25a:	add    BYTE PTR [edx+0x5b79fcff],dh
  42c260:	(bad)  
  42c261:	inc    DWORD PTR [eax]
  42c263:	jbe    0x42c1e8
  42c265:	sub    BYTE PTR [edi-0x6c],dl
  42c268:	inc    DWORD PTR [ebx-0x61fffa01]
  42c26e:	push   edx
  42c26f:	inc    esi
  42c270:	add    BYTE PTR [eax],al
  42c272:	mov    DWORD PTR ds:0x61560fff,edx
  42c278:	int3   
  42c279:	(bad)  
  42c27a:	inc    DWORD PTR [edi+edi*8-0xc7d25b]
  42c281:	add    BYTE PTR [eax],al
  42c283:	push   edi
  42c284:	jmp    FWORD PTR [edx+esi*4-0x12]
  42c28b:	push   ss
  42c28c:	add    BYTE PTR ds:0x29d6,bh
  42c292:	inc    DWORD PTR [eax+eax*1+0xa]
  42c296:	jne    0x42c24b
  42c298:	add    bh,bh
  42c29a:	(bad)  
  42c29b:	mov    ebp,0x757898ff
  42c2a0:	cmp    edi,0xffffffff
  42c2a3:	jns    0x42c2a4
  42c2a5:	ins    DWORD PTR es:[edi],dx
  42c2a6:	into   
  42c2a7:	mov    eax,ds:0xcd0000ff
  42c2ac:	jmp    esi
  42c2ae:	jp     0x42c24c
  42c2b0:	dec    DWORD PTR [ecx+0x39ff16ff]
  42c2b6:	inc    edi
  42c2b7:	pop    DWORD PTR [eax]
  42c2b9:	add    BYTE PTR [eax],al
  42c2bb:	cli    
  42c2bc:	mov    DWORD PTR [ecx],esi
  42c2be:	add    ah,bl
  42c2c0:	inc    DWORD PTR [ebx-0x60ff1601]
  42c2c6:	out    0xd3,eax
  42c2c8:	mov    DWORD PTR [ebx+0x700c2cc],eax
  42c2ce:	clc    
  42c2cf:	mov    ds:0xbfffff00,eax
  42c2d4:	call   DWORD PTR [esi]
  42c2d6:	rol    BYTE PTR [edi-0x4d7c007d],cl
  42c2dc:	add    BYTE PTR [esi+eax*2+0x5e],bh
  42c2e0:	inc    DWORD PTR [eax]
  42c2e2:	cmp    DWORD PTR [eax+eax*1-0x96df9c],0xffffffcc
  42c2ea:	add    BYTE PTR [edi-0x6b85d601],dl
  42c2f0:	inc    DWORD PTR [ebx-0x4b008000]
  42c2f6:	(bad)  
  42c2f7:	mov    edx,0x800ff00
  42c2fc:	add    BYTE PTR [esi],dh
  42c2fe:	pusha  
  42c2ff:	xchg   edx,eax
  42c300:	add    BYTE PTR [ecx-0x25007034],cl
  42c306:	add    ch,dl
  42c308:	(bad)  
  42c309:	inc    DWORD PTR [eax]
  42c30b:	outs   dx,BYTE PTR ds:[esi]
  42c30c:	sbb    DWORD PTR [edi+0xffc544],0x0
  42c313:	mov    eax,0xec117300
  42c318:	dec    DWORD PTR [ecx-0x257c0b01]
  42c31e:	scas   al,BYTE PTR es:[edi]
  42c31f:	inc    DWORD PTR cs:[eax]
  42c322:	adc    esi,0xffffffff
  42c325:	fcom   st(6)
  42c327:	jae    0x42c329
  42c329:	mov    edi,edi
  42c32b:	or     al,0xff
  42c32d:	leave  
  42c32e:	xor    BYTE PTR ds:0x8eff00ff,ch
  42c334:	jmp    ebp
  42c336:	mov    al,ds:0xff000022
  42c33b:	cwde   
  42c33c:	dec    DWORD PTR [edi+0xca5e]
  42c342:	add    BYTE PTR ds:0x9ef96f00,dh
  42c348:	dec    DWORD PTR [ecx+0xdff3200]
  42c34e:	mov    ds:0xffff83ef,al
  42c353:	aad    0x83
  42c355:	adc    ch,BYTE PTR [eax-0x7c7c3303]
  42c35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c35c:	jmp    DWORD PTR [edi]
  42c35e:	push   es
  42c35f:	in     eax,dx
  42c360:	mov    edi,edi
  42c362:	mov    edx,esi
  42c364:	add    ch,cl
  42c366:	push   cs
  42c367:	in     al,0x0
  42c369:	(bad)  
  42c36a:	call   DWORD PTR [eax-0x77]
  42c36d:	or     ah,ah
  42c36f:	ins    DWORD PTR es:[edi],dx
  42c370:	add    BYTE PTR [eax],al
  42c372:	call   DWORD PTR [esi+0x3166a8ff]
  42c378:	add    DWORD PTR [ebx-0x4d00b900],0xffffffc7
  42c37f:	dec    ecx
  42c380:	add    bh,bh
  42c382:	call   FWORD PTR [ecx-0x1]
  42c385:	cmc    
  42c386:	xchg   esi,eax
  42c387:	jno    0x42c30c
  42c389:	(bad)  
  42c38a:	jmp    DWORD PTR [edi+edi*8]
  42c38d:	out    dx,eax
  42c38e:	(bad)  
  42c38f:	sbb    al,BYTE PTR [eax]
  42c391:	add    bh,bh
  42c393:	dec    ebp
  42c394:	add    BYTE PTR [edi-0xff2605],al
  42c39a:	dec    DWORD PTR [ebx]
  42c39c:	dec    DWORD PTR [ecx-0x335786]
  42c3a2:	add    ch,bl
  42c3a4:	add    BYTE PTR [ebx+eiz*4+0x49],dl
  42c3a8:	add    DWORD PTR [ebx-0x7e76a501],0xffffffc5
  42c3af:	xor    al,BYTE PTR [eax]
  42c3b1:	(bad)  
  42c3b2:	dec    edx
  42c3b4:	jmp    DWORD PTR [edi]
  42c3b6:	mov    ds:0xff0000b5,al
  42c3bb:	xor    al,BYTE PTR [eax]
  42c3bd:	push   ebx
  42c3be:	push   cs
  42c3bf:	or     edi,edi
  42c3c1:	add    bh,bh
  42c3c3:	sbb    edi,edi
  42c3c5:	imul   DWORD PTR [edx-0x5e]
  42c3c8:	add    bh,bh
  42c3ca:	add    BYTE PTR ds:0x7b6f6fff,ah
  42c3d0:	inc    DWORD PTR [ebx-0x4affab77]
  42c3d6:	mov    dh,0xfa
  42c3d8:	add    BYTE PTR [eax],al
  42c3da:	add    BYTE PTR [eax-0x76c59c01],ah
  42c3e0:	mov    edi,edi
  42c3e2:	inc    ecx
  42c3e4:	push   DWORD PTR [ebp-0x51]
  42c3e7:	xor    DWORD PTR [ebx-0x77c7d],eax
  42c3ed:	sub    al,0x8e
  42c3ef:	xchg   BYTE PTR [eax],al
  42c3f1:	add    bh,bh
  42c3f3:	mov    al,0x0
  42c3f5:	inc    esp
  42c3f6:	sub    al,0x8b
  42c3f8:	(bad)  
  42c3f9:	inc    DWORD PTR [ebx-0x101f004c]
  42c3ff:	cwde   
  42c400:	or     esp,0xffffffff
  42c403:	xor    eax,DWORD PTR [eax]
  42c405:	jno    0x42c3cb
  42c407:	test   DWORD PTR [ecx-0xe8ff01],0x83369333
  42c411:	(bad)  
  42c412:	jmp    DWORD PTR [edx-0x7d]
  42c415:	ja     0x42c46a
  42c417:	mov    al,0x0
  42c419:	dec    esp
  42c41b:	xchg   ebp,eax
  42c41c:	(bad)  
  42c41d:	fsubr  st(0),st
  42c41f:	mov    bl,0xff
  42c421:	add    bh,bh
  42c423:	jl     0x42c3f1
  42c425:	jb     0x42c4a1
  42c427:	std    
  42c428:	add    BYTE PTR [ebx+0x3d838a83],al
  42c42e:	add    DWORD PTR fs:[eax],eax
  42c431:	(bad)  
  42c432:	jmp    ebx
  42c434:	add    BYTE PTR [ecx-0x7c8290],bh
  42c43a:	add    BYTE PTR [esi],dl
  42c43c:	jmp    DWORD PTR [eax+eiz*2]
  42c43f:	xor    al,BYTE PTR [eax]
  42c441:	(bad)  
  42c442:	push   DWORD PTR [eax+0x6c8858ff]
  42c448:	inc    DWORD PTR [eax]
  42c44a:	add    BYTE PTR [ecx+0x465ed883],bh
  42c450:	(bad)  
  42c451:	inc    DWORD PTR [ebx-0x37e7ffd2]
  42c457:	dec    ecx
  42c458:	add    ah,cl
  42c45a:	jmp    ebp
  42c45c:	add    BYTE PTR [edx-0x6],bl
  42c45f:	fcos   
  42c461:	add    BYTE PTR [ebx+0x6c79ff1c],al
  42c467:	add    BYTE PTR [ebx-0x21337d],0x75
  42c46e:	fiadd  WORD PTR [bp+di+0x0]
  42c473:	out    dx,eax
  42c474:	xor    DWORD PTR [edx+0x58],0x4a
  42c478:	add    DWORD PTR [eax],0xffffff83
  42c47b:	gs jmp ebx
  42c47e:	xchg   edx,eax
  42c47f:	aas    
  42c480:	inc    DWORD PTR [eax]
  42c482:	jmp    FWORD PTR [edx+0x0]
  42c485:	jl     0x42c4be
  42c487:	inc    ebp
  42c488:	int3   
  42c489:	add    BYTE PTR [eax],al
  42c48b:	mov    ebp,0x63ef3dcc
  42c490:	inc    DWORD PTR [eax]
  42c492:	add    ah,ah
  42c494:	adc    DWORD PTR [edi+0x17],0xffffff97
  42c498:	add    bh,bh
  42c49a:	add    BYTE PTR [ebp-0x1],dh
  42c49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c49e:	push   edx
  42c49f:	int3   
  42c4a0:	int3   
  42c4a1:	add    bh,bh
  42c4a3:	pop    eax
  42c4a4:	call   FWORD PTR [esi]
  42c4a6:	out    0xed,eax
  42c4a8:	inc    DWORD PTR [ebx+0x3cffc483]
  42c4ae:	or     ebp,DWORD PTR [ebx]
  42c4b0:	add    BYTE PTR [eax],al
  42c4b2:	cmp    DWORD PTR [ebx],0x0
  42c4b5:	xor    ecx,ebp
  42c4b7:	inc    DWORD PTR [bx+si]
  42c4ba:	add    BYTE PTR [eax],dl
  42c4bc:	jmp    DWORD PTR [edx+0x20]
  42c4bf:	mov    ds:0x30ffffff,eax
  42c4c4:	jmp    FWORD PTR [ebp+0xff026b]
  42c4ca:	call   FWORD PTR [eax]
  42c4cc:	dec    ecx
  42c4ce:	clc    
  42c4cf:	inc    edx
  42c4d0:	add    bh,bh
  42c4d2:	add    BYTE PTR [esp+ecx*8],ah
  42c4d5:	xor    ebp,DWORD PTR [edx-0x7c330082]
  42c4db:	dec    ebp
  42c4dc:	jmp    FWORD PTR [eax-0x2e]
  42c4df:	push   edx
  42c4e0:	mov    DWORD PTR [ebx-0x3976c734],eax
  42c4e6:	fimul  WORD PTR [ebx+0x49ffffff]
  42c4ec:	add    al,bl
  42c4ee:	sbb    edi,esi
  42c4f0:	inc    DWORD PTR [eax]
  42c4f2:	call   DWORD PTR [ecx+0x0]
  42c4f5:	popa   
  42c4f6:	outs   dx,BYTE PTR ds:[esi]
  42c4f7:	adc    bh,bh
  42c4f9:	inc    DWORD PTR [eax]
  42c4fb:	inc    ecx
  42c4fc:	jmp    esi
  42c4fe:	or     al,0x80
  42c500:	inc    DWORD PTR [eax]
  42c502:	and    DWORD PTR [ebx-0x1],0x6d
  42c506:	xor    al,0x8
  42c508:	or     esp,0xffffffff
  42c50b:	mov    es,WORD PTR [eax]
  42c50d:	ds test eax,0xff89ffc2
  42c513:	jg     0x42c515
  42c515:	sbb    edx,DWORD PTR [eax]
  42c517:	sbb    eax,0x50000000
  42c51c:	push   DWORD PTR [ebp+ebx*4-0x47]
  42c520:	(bad)  
  42c521:	inc    DWORD PTR [ebx-0x44d90016]
  42c527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c528:	add    BYTE PTR [ebx-0x3002934],al
  42c52e:	das    
  42c52f:	sbb    eax,0x76ffffff
  42c534:	mov    DWORD PTR [eax-0xa994],edi
  42c53a:	add    BYTE PTR [esi],cl
  42c53c:	push   DWORD PTR [esi+edi*1+0x6e]
  42c540:	(bad)  
  42c541:	(bad)  
  42c542:	push   esp
  42c544:	inc    DWORD PTR [esi-0x46]
  42c547:	outs   dx,BYTE PTR ds:[esi]
  42c548:	int3   
  42c549:	add    bh,bh
  42c54b:	dec    esi
  42c54c:	jmp    DWORD PTR [edi]
  42c54e:	jne    0x42c522
  42c550:	inc    DWORD PTR [ebx-0x5300c000]
  42c556:	dec    ebp
  42c557:	cwde   
  42c558:	int3   
  42c559:	add    DWORD PTR [ebx+0x2251ccd2],0x7c
  42c560:	mov    DWORD PTR [eax],eax
  42c562:	jmp    DWORD PTR [ecx-0x155a201]
  42c568:	inc    DWORD PTR [eax]
  42c56a:	dec    DWORD PTR [eax+0x0]
  42c56d:	fmul   st,st(3)
  42c56f:	jne    0x42c4fa
  42c571:	dec    esp
  42c573:	int3   
  42c574:	sub    DWORD PTR [edi+0x9d76],0xffffffff
  42c57b:	xor    eax,0x2c3d1dff
  42c580:	inc    DWORD PTR [eax]
  42c582:	push   DWORD PTR [ecx]
  42c584:	int3   
  42c585:	ds or  eax,0x8900b6
  42c58b:	or     bh,bh
  42c58d:	fcomp  DWORD PTR [ebp-0x7f]
  42c590:	add    BYTE PTR [ebx-0x7a004f7d],al
  42c596:	inc    eax
  42c597:	imul   edi,edi,0xff6e83ff
  42c59d:	adc    bl,BYTE PTR [ebx+0x37]
  42c5a0:	inc    DWORD PTR [eax]
  42c5a2:	push   DWORD PTR [esi]
  42c5a4:	call   esp
  42c5a6:	dec    edi
  42c5a7:	jle    0x42c5a9
  42c5a9:	add    BYTE PTR [eax],al
  42c5ab:	dec    edx
  42c5ac:	add    BYTE PTR [ebx+0xd],ch
  42c5af:	(bad)  
  42c5b2:	jmp    FWORD PTR [eax-0x55b28900]
  42c5b8:	add    BYTE PTR [eax],al
  42c5ba:	call   DWORD PTR [ecx]
  42c5bc:	inc    DWORD PTR [eax]
  42c5be:	pop    eax
  42c5bf:	pop    ss
  42c5c0:	int3   
  42c5c1:	cmp    edi,0x0
  42c5c4:	push   esi
  42c5c6:	out    dx,eax
  42c5c7:	(bad)  
  42c5c8:	inc    DWORD PTR [ebx-0x3600f977]
  42c5ce:	push   eax
  42c5cf:	dec    eax
  42c5d0:	inc    DWORD PTR [eax]
  42c5d2:	add    BYTE PTR [edx+0x0],bl
  42c5d5:	mov    ds:0xff5755,eax
  42c5da:	dec    DWORD PTR [edx]
  42c5dc:	add    BYTE PTR [ebx],bh
  42c5de:	out    dx,al
  42c5df:	in     eax,dx
  42c5e0:	add    BYTE PTR [ebx-0x15ff1201],al
  42c5e6:	or     ah,BYTE PTR [eax+0x4eff0000]
  42c5ec:	xor    DWORD PTR [ecx-0x4a],0x2c
  42c5f0:	inc    DWORD PTR [eax]
  42c5f2:	add    BYTE PTR [edx],bh
  42c5f4:	call   eax
  42c5f6:	xchg   ebp,ebx
  42c5f8:	(bad)  
  42c5f9:	inc    DWORD PTR [eax]
  42c5fb:	xor    edi,edi
  42c5fd:	jl     0x42c657
  42c5ff:	push   es
  42c600:	(bad)  
  42c601:	dec    DWORD PTR [ecx+0x225a891b]
  42c607:	inc    ebx
  42c608:	add    BYTE PTR [ecx-0x55005401],cl
  42c60e:	push   ebp
  42c60f:	sub    eax,0x41ffff00
  42c614:	add    BYTE PTR [edi-0xff9f3b],dh
  42c61a:	and    DWORD PTR [eax-0x34],0xffffffe6
  42c61e:	adc    BYTE PTR [ecx],bl
  42c620:	(bad)  
  42c621:	inc    DWORD PTR [ebx-0x75d97c73]
  42c627:	cmp    eax,0x4d89ffff
  42c62c:	jmp    DWORD PTR [edi]
  42c62e:	inc    esi
  42c62f:	fdivr  st,st(7)
  42c631:	add    BYTE PTR [eax],al
  42c633:	or     eax,0xd9242cff
  42c638:	(bad)  
  42c639:	(bad)  
  42c63a:	inc    DWORD PTR [edi+edi*8+0x64]
  42c63e:	sub    BYTE PTR [edx],0x0
  42c641:	add    bh,bh
  42c643:	pop    esp
  42c644:	add    BYTE PTR [edx-0x6],cl
  42c647:	int3   
  42c648:	int3   
  42c649:	add    BYTE PTR [eax],al
  42c64b:	lods   eax,DWORD PTR ds:[esi]
  42c64c:	add    cl,bl
  42c64e:	fcomp  DWORD PTR [eax+0x0]
  42c651:	mov    DWORD PTR [eax],eax
  42c653:	sahf   
  42c654:	int3   
  42c655:	mov    ah,0xc
  42c657:	push   ds
  42c658:	inc    DWORD PTR [ebx+0x2c833eff]
  42c65e:	shl    BYTE PTR [esi-0x3000ff01],cl
  42c664:	call   FWORD PTR [ebx-0x9048]
  42c66a:	call   FWORD PTR [eax]
  42c66c:	or     DWORD PTR [ebx-0x66],0x40
  42c670:	add    DWORD PTR [ebx+0x230071ff],0x6
  42c677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c678:	inc    DWORD PTR [eax]
  42c67a:	xor    DWORD PTR [edi],0xffffffcc
  42c67d:	das    
  42c67e:	jmp    0xf4a0c
  42c683:	pop    ecx
  42c684:	add    BYTE PTR [ecx-0x3360e8],bl
  42c68a:	call   DWORD PTR [edi+0x16de7600]
  42c690:	add    BYTE PTR [eax],al
  42c692:	call   DWORD PTR [edi-0x1]
  42c695:	mov    edi,0xffe7a4
  42c69a:	push   esi
  42c69c:	add    BYTE PTR [edi-0x62],cl
  42c69f:	das    
  42c6a0:	cmp    edi,0xffffffff
  42c6a3:	pop    ds
  42c6a4:	jmp    FWORD PTR [ebx-0x3300d4be]
  42c6aa:	jmp    DWORD PTR [esi]
  42c6ac:	call   DWORD PTR [ebx]
  42c6ae:	mov    edx,0x83ff4d
  42c6b3:	popf   
  42c6b4:	(bad)  
  42c6b5:	fisubr DWORD PTR [edi]
  42c6b7:	sub    eax,0xce8383ff
  42c6bc:	push   DWORD PTR [edx+eiz*2-0xff33c8]
  42c6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6c4:	call   DWORD PTR [edx]
  42c6c6:	bound  esp,QWORD PTR [esi-0x1]
  42c6c9:	add    bh,bh
  42c6cb:	jne    0x42c656
  42c6cd:	popf   
  42c6ce:	enter  0xff1c,0xff
  42c6d2:	mov    ecx,eax
  42c6d4:	call   DWORD PTR [ecx]
  42c6d6:	or     eax,0xcc00837e
  42c6db:	retf   0xd9ff
  42c6de:	jns    0x42c754
  42c6e0:	add    BYTE PTR [ebx-0x5500977d],al
  42c6e6:	addr16 jo 0x42c6e9
  42c6e9:	inc    DWORD PTR [eax]
  42c6eb:	ret    
  42c6ec:	add    BYTE PTR [ecx+0xff2a8e],ch
  42c6f2:	jmp    FWORD PTR [esi-0x7d]
  42c6f5:	mov    eax,0xcc1789
  42c6fa:	add    DWORD PTR [ecx-0x1],0xffffff85
  42c6fe:	add    BYTE PTR [edi+0x0],cl
  42c701:	(bad)  
  42c702:	(bad)  
  42c703:	fcos   
  42c705:	ror    ebp,0xe8
  42c708:	dec    DWORD PTR [ecx-0x1ff5e00]
  42c70e:	push   eax
  42c70f:	nop
  42c710:	add    BYTE PTR [eax],al
  42c712:	call   FWORD PTR [esi-0x7458c200]
  42c718:	int3   
  42c719:	cmp    edi,0x4e
  42c71c:	adc    edx,0xffffff87
  42c71f:	mov    eax,ds:0x6dcc00ff
  42c724:	jmp    FWORD PTR [edx+esi*1-0x72]
  42c728:	add    DWORD PTR [eax],0xffffffff
  42c72b:	add    BYTE PTR cs:[eax-0x3f29],bl
  42c732:	inc    edi
  42c734:	add    BYTE PTR [ebp-0x76e9b9],bl
  42c73a:	add    BYTE PTR [ebp-0x5fd49200],dl
  42c740:	dec    esp
  42c742:	inc    esi
  42c744:	jmp    FWORD PTR ds:0xff83900e
  42c74a:	call   DWORD PTR [esi]
  42c74c:	int3   
  42c74d:	mov    DWORD PTR [edx],esp
  42c74f:	inc    ebp
  42c750:	inc    DWORD PTR [eax]
  42c752:	push   DWORD PTR [esi-0x34]
  42c755:	cwde   
  42c756:	cmp    al,0x48
  42c758:	inc    DWORD PTR [eax]
  42c75a:	add    BYTE PTR [ecx+0x69e20783],cl
  42c760:	int3   
  42c761:	inc    DWORD PTR [ebx+0x5a30ff10]
  42c767:	sbb    bh,bh
  42c769:	mov    edi,edi
  42c76b:	sub    eax,0x92f82acc
  42c770:	inc    DWORD PTR [eax]
  42c772:	inc    DWORD PTR [ecx-0x2c00d277]
  42c778:	add    BYTE PTR [eax],al
  42c77a:	inc    DWORD PTR [eax]
  42c77c:	int3   
  42c77d:	xor    BYTE PTR [edi+0xffffab],dl
  42c783:	popf   
  42c784:	add    BYTE PTR ds:0xffd68a,bl
  42c78a:	jmp    DWORD PTR [edx+0x7c6a78ff]
  42c790:	dec    DWORD PTR [ecx+0x17ff9800]
  42c796:	and    ah,bh
  42c798:	inc    DWORD PTR [ebx-0x41000577]
  42c79e:	sahf   
  42c79f:	sub    ecx,esp
  42c7a1:	add    bh,bh
  42c7a3:	pop    ecx
  42c7a4:	dec    esp
  42c7a6:	mov    dl,0x1d
  42c7a8:	add    ah,cl
  42c7aa:	call   FWORD PTR [ecx]
  42c7ac:	add    DWORD PTR [edi+0xff71c9],0xffffffff
  42c7b3:	inc    edx
  42c7b4:	add    BYTE PTR [edi+ecx*2],cl
  42c7b7:	mov    WORD PTR [eax],es
  42c7b9:	(bad)  
  42c7ba:	push   DWORD PTR [edi+0x0]
  42c7bd:	mov    ebx,0x7f6a
  42c7c2:	xor    DWORD PTR [ebp-0x7052c301],0xffffffff
  42c7c9:	(bad)  
  42c7ca:	dec    DWORD PTR [ecx-0x1]
  42c7cd:	retf   0xc5c6
  42c7d0:	dec    DWORD PTR [ecx-0x5eff7801]
  42c7d6:	adc    eax,0xff0072
  42c7db:	ins    BYTE PTR es:[edi],dx
  42c7dc:	and    edi,0x5d
  42c7df:	mov    edi,0xa98900ff
  42c7e4:	jmp    ebx
  42c7e6:	sahf   
  42c7e7:	and    eax,0x79ffccff
  42c7ec:	adc    DWORD PTR [edi+edi*8+0x5b],0x0
  42c7f1:	add    bh,bh
  42c7f3:	push   DWORD PTR cs:[edx-0x7c00f15c]
  42c7fa:	jmp    FWORD PTR [esi]
  42c7fc:	jmp    FWORD PTR [ebp-0x3a]
  42c7ff:	adc    DWORD PTR [eax],eax
  42c801:	add    bh,bh
  42c803:	int    0xff
  42c805:	(bad)  
  42c806:	xor    al,0x7a
  42c808:	cmp    edi,0xffffffff
  42c80b:	icebp  
  42c80c:	add    BYTE PTR [esp+ebx*2+0x67],ah
  42c810:	add    BYTE PTR [ecx+0x16000783],cl
  42c816:	sete   bh
  42c819:	cmp    edi,0xffffffea
  42c81c:	add    BYTE PTR [ecx],al
  42c81e:	cdq    
  42c81f:	add    BYTE PTR ss:[ecx-0x13ff7c34],cl
  42c826:	add    DWORD PTR [ecx],edx
  42c828:	(bad)  
  42c829:	(bad)  
  42c82a:	jmp    DWORD PTR [ebx+eax*4-0x5a]
  42c82e:	std    
  42c82f:	outs   dx,DWORD PTR ds:[esi]
  42c830:	(bad)  
  42c831:	(bad)  
  42c832:	inc    ebp
  42c834:	int3   
  42c835:	dec    ebx
  42c836:	mov    cl,0xba
  42c838:	mov    DWORD PTR [eax],eax
  42c83a:	jmp    FWORD PTR [ebp+0x7b1dd500]
  42c840:	add    ah,cl
  42c842:	jmp    DWORD PTR [edi]
  42c844:	add    BYTE PTR [ebp+0x4f],ch
  42c847:	jl     0x42c848
  42c849:	(bad)  
  42c84a:	dec    DWORD PTR [esi]
  42c84c:	dec    DWORD PTR [ebp-0x7c338fe5]
  42c852:	inc    DWORD PTR [edi+0x0]
  42c855:	inc    edx
  42c856:	arpl   ax,di
  42c858:	dec    esp
  42c85a:	add    edi,0xffffffff
  42c85d:	adc    al,0xb
  42c85f:	test   BYTE PTR [eax],0xff
  42c862:	jmp    DWORD PTR [edi+0x215b2aff]
  42c868:	add    bh,bh
  42c86a:	call   DWORD PTR [eax-0x5f06fc00]
  42c870:	mov    DWORD PTR [ebx-0x56007401],eax
  42c876:	sbb    DWORD PTR [eax],esp
  42c878:	(bad)  
  42c879:	dec    DWORD PTR [ecx-0x6b2ff16]
  42c87f:	push   ebx
  42c880:	add    bh,bh
  42c882:	dec    edx
  42c884:	dec    DWORD PTR [edi+0x79]
  42c887:	loopne 0x42c888
  42c889:	add    bh,bh
  42c88b:	push   eax
  42c88c:	call   FWORD PTR [edi+0x6a16]
  42c892:	int3   
  42c893:	out    dx,eax
  42c894:	jmp    ecx
  42c896:	js     0x42c8cf
  42c898:	int3   
  42c899:	add    BYTE PTR [eax],al
  42c89b:	jp     0x42c89d
  42c89d:	pop    es
  42c89e:	ss inc edi
  42c8a0:	inc    DWORD PTR [eax]
  42c8a2:	and    DWORD PTR [eax-0x7073a00],0x0
  42c8a9:	inc    DWORD PTR [eax]
  42c8ab:	stos   BYTE PTR es:[edi],al
  42c8ac:	add    BYTE PTR [edx+0x3f],cl
  42c8af:	mov    eax,DWORD PTR [eax]
  42c8b1:	inc    DWORD PTR [eax]
  42c8b3:	jnp    0x42c8b4
  42c8b5:	out    dx,al
  42c8b6:	and    DWORD PTR [ecx-0x34],ebx
  42c8b9:	(bad)  
  42c8ba:	dec    esp
  42c8bc:	(bad)  
  42c8bd:	in     al,dx
  42c8be:	pop    esi
  42c8bf:	loopne 0x42c84a
  42c8c1:	add    DWORD PTR [eax],0xfffffffb
  42c8c4:	int3   
  42c8c5:	mov    eax,ds:0xff8389d9
  42c8ca:	jmp    DWORD PTR [ebx-0x1]
  42c8cd:	xchg   edx,eax
  42c8ce:	les    ecx,FWORD PTR [ecx]
  42c8d0:	add    bh,bh
  42c8d2:	int3   
  42c8d3:	lods   al,BYTE PTR ds:[esi]
  42c8d4:	mov    DWORD PTR [ebp-0x7cfca7],esi
  42c8da:	jmp    eax
  42c8dc:	add    BYTE PTR [eax],bh
  42c8de:	daa    
  42c8df:	jmp    0x9d42c8e3
  42c8e4:	add    BYTE PTR [ebp-0x4e],ch
  42c8e7:	xchg   esp,eax
  42c8e8:	add    BYTE PTR [eax],al
  42c8ea:	dec    DWORD PTR [ebx-0x34]
  42c8ed:	popf   
  42c8ee:	jg     0x42c87b
  42c8f0:	add    bh,bh
  42c8f2:	add    BYTE PTR [edi+0x0],al
  42c8f5:	mov    fs,esp
  42c8f7:	inc    esi
  42c8f8:	add    DWORD PTR [ebx-0x46003a00],0xffffff91
  42c8ff:	mov    bh,0x0
  42c901:	add    bh,bh
  42c903:	and    edi,edi
  42c905:	fadd   st,st(0)
  42c907:	mov    ebp,0x29cccc89
  42c90c:	add    BYTE PTR [ebx+0xff446a],cl
  42c912:	xor    ebx,0x0
  42c915:	adc    esi,DWORD PTR [edx]
  42c917:	jo     0x42c918
  42c919:	add    bh,bh
  42c91b:	fild   WORD PTR [ebx-0x38b3a3]
  42c921:	add    BYTE PTR [ebx-0x639cffc4],al
  42c927:	cmp    al,0x0
  42c929:	(bad)  
  42c92a:	call   FWORD PTR [edi+edi*8+0x39]
  42c92e:	scas   eax,DWORD PTR es:[edi]
  42c92f:	cmp    al,0x0
  42c931:	add    bh,bh
  42c933:	sbb    bh,bh
  42c935:	xor    bh,ch
  42c937:	das    
  42c938:	dec    esp
  42c93a:	(bad)  
  42c93b:	cmp    eax,DWORD PTR [eax]
  42c93d:	and    BYTE PTR [edx-0x5d],0xff
  42c941:	inc    DWORD PTR [ebx-0x11cff8a]
  42c947:	daa    
  42c948:	add    BYTE PTR [ecx+0x410008ff],cl
  42c94e:	cmp    edi,DWORD PTR [ecx-0x7d000001]
  42c954:	mov    esp,ebp
  42c956:	mov    al,0x2e
  42c958:	inc    DWORD PTR [ebx-0x39001277]
  42c95e:	cwde   
  42c95f:	test   BYTE PTR [eax],al
  42c961:	add    BYTE PTR [ecx+0x19150099],cl
  42c967:	pop    ebx
  42c968:	mov    edi,edi
  42c96a:	inc    ebx
  42c96c:	add    BYTE PTR [edx+0xffd090],al
  42c972:	inc    DWORD PTR [edx]
  42c974:	mov    ebx,esi
  42c976:	das    
  42c977:	(bad)  
  42c978:	(bad)  
  42c979:	dec    DWORD PTR [ecx+0x1b400f2]
  42c97f:	test   DWORD PTR [ecx+0x3bff00],0x83e96556
  42c989:	dec    DWORD PTR [ecx-0x5ea00fd]
  42c98f:	je     0x42c991
  42c991:	(bad)  
  42c992:	inc    DWORD PTR [esi+0x717a71cc]
  42c998:	dec    esp
  42c99a:	jmp    FWORD PTR ds:0xa4c90300
  42c9a0:	inc    DWORD PTR [eax]
  42c9a2:	mov    eax,ebx
  42c9a4:	call   FWORD PTR [eax-0xdf15]
  42c9aa:	int3   
  42c9ab:	loope  0x42c9ad
  42c9ad:	push   ss
  42c9ae:	add    dl,dh
  42c9b0:	int3   
  42c9b1:	cmp    edi,0xffffffb3
  42c9b4:	add    BYTE PTR [edx],bh
  42c9b6:	outs   dx,BYTE PTR ds:[esi]
  42c9b7:	jmp    0xffccc9bb
  42c9bc:	int3   
  42c9bd:	push   esp
  42c9be:	(bad)  
  42c9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9c0:	add    BYTE PTR [ebx-0x44764a01],al
  42c9c6:	dec    BYTE PTR [edx]
  42c9c8:	add    BYTE PTR [eax],al
  42c9ca:	add    DWORD PTR [ebx],0xffffffff
  42c9cd:	ss cmp al,0x3f
  42c9d0:	mov    esp,ecx
  42c9d2:	jmp    DWORD PTR [eax+eax*1+0x16]
  42c9d6:	dec    edi
  42c9d7:	mov    edi,0x1300ffff
  42c9dc:	add    dl,bl
  42c9de:	loopne 0x42c966
  42c9e0:	mov    edi,edi
  42c9e2:	push   DWORD PTR [ecx-0x6ad67201]
  42c9e8:	(bad)  
  42c9e9:	inc    DWORD PTR [eax]
  42c9eb:	test   eax,0x27fb14ff
  42c9f0:	(bad)  
  42c9f1:	(bad)  
  42c9f2:	inc    DWORD PTR [eax+0x0]
  42c9f5:	xor    eax,ecx
  42c9f7:	add    BYTE PTR [ebx+0xd08900],0x58
  42c9fe:	popa   
  42c9ff:	or     ah,0xff
  42ca02:	inc    DWORD PTR [edi-0x4fa4a934]
  42ca08:	inc    DWORD PTR [eax]
  42ca0a:	jmp    FWORD PTR [edi+edi*8]
  42ca0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca0e:	int3   
  42ca0f:	cdq    
  42ca10:	add    BYTE PTR [eax],al
  42ca12:	sbb    DWORD PTR [edi-0x32c7000],0x0
  42ca19:	add    BYTE PTR [ecx-0x64fe7caf],cl
  42ca1f:	xchg   ebp,eax
  42ca20:	inc    DWORD PTR [eax]
  42ca22:	(bad)  
  42ca23:	jmp    0xb24e1328
  42ca28:	add    BYTE PTR [eax],al
  42ca2a:	call   FWORD PTR [esi-0x1]
  42ca2d:	inc    ebp
  42ca2e:	std    
  42ca2f:	inc    edi
  42ca30:	int3   
  42ca31:	add    BYTE PTR [eax],al
  42ca33:	jae    0xffa61a2f
  42ca39:	add    bh,bh
  42ca3b:	icebp  
  42ca3c:	dec    ebx
  42ca3e:	cmp    eax,0xffffe1
  42ca43:	retf   
  42ca44:	inc    DWORD PTR [edi+ecx*1-0x3]
  42ca48:	(bad)  
  42ca49:	dec    DWORD PTR [ecx+0x6d0200a6]
  42ca4f:	add    BYTE PTR ss:[ebx+0x100d3ff],al
  42ca56:	mov    BYTE PTR [edx-0x3b7c7c01],bh
  42ca5c:	int3   
  42ca5d:	add    al,0x63
  42ca5f:	add    eax,0x1f0083ff
  42ca64:	jmp    DWORD PTR [edi-0x7cff848c]
  42ca6a:	call   DWORD PTR [ebx-0x76d54c01]
  42ca70:	add    bh,bh
  42ca72:	add    BYTE PTR [esi-0x32970101],al
  42ca78:	add    bh,bh
  42ca7a:	(bad)  
  42ca7b:	out    dx,al
  42ca7c:	add    BYTE PTR [ecx],ch
  42ca7e:	int3   
  42ca7f:	sub    esp,ecx
  42ca81:	(bad)  
  42ca82:	inc    DWORD PTR [ebx]
  42ca84:	push   DWORD PTR [edx-0x7c009a76]
  42ca8a:	call   FWORD PTR [ebx+0x0]
  42ca8d:	fcomi  st,st(2)
  42ca8f:	dec    eax
  42ca90:	add    bh,bh
  42ca92:	inc    DWORD PTR [ebx+0x0]
  42ca95:	mov    eax,0x83ff9451
  42ca9a:	(bad)  
  42ca9b:	mov    edx,0x4222a589
  42caa0:	add    bh,bh
  42caa2:	add    dh,dh
  42caa4:	push   DWORD PTR [ebx-0x4d]
  42caa7:	cmp    bh,0xff
  42caaa:	push   DWORD PTR [eax-0x1]
  42caad:	dec    esi
  42caae:	je     0x42cad7
  42cab0:	add    BYTE PTR [eax],al
  42cab2:	(bad)  
  42cab3:	sti    
  42cab4:	add    ch,bh
  42cab6:	adc    al,0xf7
  42cab8:	mov    edi,edi
  42caba:	(bad)  
  42cabb:	fdivr  st,st(7)
  42cabd:	(bad)  
  42cabe:	cdq    
  42cabf:	ds add bh,bh
  42cac2:	mov    ebx,edi
  42cac4:	dec    DWORD PTR [edx-0x6d]
  42cac7:	mov    esp,0xc88300ff
  42cacc:	mov    ebx,eax
  42cace:	and    cl,al
  42cad0:	mov    edi,edi
  42cad2:	dec    DWORD PTR [edi+edi*8+0xd18fc8]
  42cad9:	(bad)  
  42cada:	(bad)  
  42cadb:	fild   WORD PTR [ebx-0xe0e20e]
  42cae1:	inc    DWORD PTR [ebx+0x1bafffbd]
  42cae7:	jae    0x42cae9
  42cae9:	(bad)  
  42caea:	call   FWORD PTR [edx]
  42caec:	jmp    DWORD PTR [ebx]
  42caee:	mov    cl,0xc2
  42caf0:	add    BYTE PTR [eax],al
  42caf2:	add    BYTE PTR [edi+0x3fd6abff],bh
  42caf8:	add    ah,cl
  42cafa:	jmp    DWORD PTR [edx-0x3b44a07d]
  42cb00:	dec    esp
  42cb02:	and    DWORD PTR ds:0x28347bff,0xffffffff
  42cb09:	add    BYTE PTR [ebx-0x243f7c18],al
  42cb0f:	add    edi,edi
  42cb11:	add    BYTE PTR [eax],al
  42cb13:	push   es
  42cb14:	call   DWORD PTR [ebp+0xff28c0]
  42cb1a:	push   DWORD PTR [edx-0xc4eec77]
  42cb20:	inc    DWORD PTR [eax]
  42cb22:	jmp    DWORD PTR [esp+ecx*8+0x9f51c4]
  42cb29:	inc    DWORD PTR [eax]
  42cb2b:	add    bh,bh
  42cb2d:	mov    ds:0xccff1fab,al
  42cb32:	push   DWORD PTR [edx+0x252007cc]
  42cb38:	add    DWORD PTR [ebx+0x3f0057ff],0xffffff9d
  42cb3f:	mov    ah,0x0
  42cb41:	(bad)  
  42cb42:	(bad)  
  42cb43:	in     eax,dx
  42cb44:	add    cl,ah
  42cb46:	mov    bp,0xffff
  42cb4a:	xor    DWORD PTR ds:0x2c0dbc00,0x0
  42cb51:	inc    DWORD PTR [eax]
  42cb53:	push   edx
  42cb54:	call   DWORD PTR [eax]
  42cb56:	jae    0x42cb64
  42cb58:	inc    DWORD PTR [eax]
  42cb5a:	(bad)  
  42cb5b:	jle    0x42cae0
  42cb5d:	xchg   ebx,eax
  42cb5e:	arpl   WORD PTR [esi-0x34],dx
  42cb61:	inc    DWORD PTR [ebx+0x7dd0cc05]
  42cb67:	xor    ecx,esp
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	stos   BYTE PTR es:[edi],al
  42cb6c:	mov    esp,ebx
  42cb6e:	jb     0x42cb7d
  42cb70:	dec    DWORD PTR [ecx+0x3cff44ff]
  42cb76:	pop    WORD PTR [eax]
  42cb79:	add    bh,bh
  42cb7b:	jp     0x42cb7d
  42cb7d:	arpl   sp,dx
  42cb7f:	mov    WORD PTR [ecx+0xccffff],cs
  42cb85:	and    edx,edi
  42cb87:	push   ds
  42cb88:	cmp    edi,0xffffffff
  42cb8b:	sti    
  42cb8c:	(bad)  
  42cb8d:	mov    ebp,0xffff81b3
  42cb92:	or     DWORD PTR [ebx-0x7d],0x0
  42cb96:	xchg   edx,eax
  42cb97:	pop    eax
  42cb98:	dec    esp
  42cb9a:	sub    DWORD PTR [eax+eax*1-0x48],0xffffff99
  42cb9f:	xor    cl,ah
  42cba1:	add    BYTE PTR [eax],al
  42cba3:	jbe    0x42cba5
  42cba5:	cli    
  42cba6:	lea    edi,[edi+edi*8-0x34]
  42cbaa:	push   DWORD PTR [eax+eax*1-0x2d]
  42cbae:	(bad)  
  42cbaf:	pop    ds
  42cbb0:	int3   
  42cbb1:	(bad)  
  42cbb2:	inc    ecx
  42cbb4:	cmp    ebx,0x2c
  42cbb7:	enter  0xff00,0x0
  42cbbb:	cmp    ecx,esp
  42cbbd:	mov    eax,0xccff54f2
  42cbc2:	mov    DWORD PTR [edi+0x1dddb9ff],esp
  42cbc8:	add    BYTE PTR [ebx-0x29767001],al
  42cbce:	stc    
  42cbcf:	dec    edi
  42cbd0:	add    bh,bh
  42cbd2:	add    BYTE PTR ds:0x86a839ff,al
  42cbd8:	dec    esp
  42cbda:	add    BYTE PTR [edi+edi*8],dh
  42cbdd:	sbb    eax,0xff00bf9e
  42cbe2:	(bad)  
  42cbe3:	in     al,dx
  42cbe4:	add    BYTE PTR [ebp-0x3f],al
  42cbe7:	cmp    bh,bh
  42cbe9:	int3   
  42cbea:	add    BYTE PTR [esi+0x0],cl
  42cbed:	xchg   edi,eax
  42cbee:	mov    bh,0xb9
  42cbf0:	mov    edi,edi
  42cbf2:	and    DWORD PTR [eax],0xffffffff
  42cbf5:	mov    ebp,0xffff4c14
  42cbfa:	mov    DWORD PTR [edi+0x6763feff],esp
  42cc00:	add    BYTE PTR [eax],al
  42cc02:	int3   
  42cc03:	xchg   edx,eax
  42cc04:	mov    DWORD PTR [ecx-0xffe147],edi
  42cc0a:	dec    DWORD PTR [edx+0x51e06400]
  42cc10:	mov    DWORD PTR [ebx+0xeff7700],eax
  42cc16:	sbb    BYTE PTR [edi],ch
  42cc18:	add    BYTE PTR [eax],al
  42cc1a:	sub    DWORD PTR [edi-0x57e0901],0xffffffff
  42cc21:	mov    edi,edi
  42cc23:	popf   
  42cc24:	call   DWORD PTR [edx-0x39]
  42cc27:	cmp    edi,edi
  42cc29:	mov    DWORD PTR [eax],eax
  42cc2b:	mov    dh,0xff
  42cc2d:	dec    ebp
  42cc2e:	imul   ecx,DWORD PTR fs:[ecx-0x76647c7d],0xff0375b4
  42cc39:	int3   
  42cc3a:	or     DWORD PTR [edi+edi*8-0x5d],0x65
  42cc3f:	pop    eax
  42cc40:	dec    esp
  42cc42:	jmp    DWORD PTR [ebx]
  42cc44:	jmp    esp
  42cc46:	clc    
  42cc47:	add    DWORD PTR ss:[eax],0xffffffff
  42cc4b:	out    dx,eax
  42cc4c:	inc    eax
  42cc4e:	jnp    0x42cc98
  42cc50:	mov    DWORD PTR [ebx-0x6e765401],eax
  42cc56:	add    esi,ecx
  42cc58:	int3   
  42cc59:	inc    DWORD PTR [eax]
  42cc5b:	mov    ebx,0x3f515ff
  42cc60:	(bad)  
  42cc61:	(bad)  
  42cc62:	dec    DWORD PTR [ebp-0x34]
  42cc65:	mov    gs,WORD PTR [eax]
  42cc67:	in     eax,0x83
  42cc69:	inc    DWORD PTR [eax]
  42cc6b:	jge    0x42cbf0
  42cc6d:	pop    edi
  42cc6e:	sbb    BYTE PTR [ecx+0x0],0xff
  42cc72:	add    BYTE PTR [edx+0x0],bh
  42cc75:	sub    DWORD PTR [edi+0x12],esi
  42cc78:	(bad)  
  42cc79:	inc    DWORD PTR [ebx+0x3030ff0b]
  42cc7f:	mov    es,WORD PTR [eax]
  42cc81:	add    DWORD PTR [eax],0x5
  42cc84:	jmp    DWORD PTR [edx-0x3c1d]
  42cc8a:	add    BYTE PTR [edi],dl
  42cc8c:	push   DWORD PTR [ebx+0x44]
  42cc8f:	fmul   st,st(4)
  42cc91:	cmp    edi,0xffffffef
  42cc94:	mov    DWORD PTR [edx],esp
  42cc96:	test   BYTE PTR [ecx-0x1],0x0
  42cc9a:	call   FWORD PTR [eax+eax*1+0x70]
  42cc9e:	push   ds
  42cc9f:	sahf   
  42cca0:	(bad)  
  42cca1:	dec    DWORD PTR [ecx+0x5661838b]
  42cca7:	sbb    BYTE PTR [eax],al
  42cca9:	add    BYTE PTR [ebx-0x2ad07c38],al
  42ccaf:	pop    ebx
  42ccb0:	cmp    edi,0xffffffff
  42ccb3:	add    eax,0x8f0ee7cc
  42ccb8:	add    BYTE PTR [eax],al
  42ccba:	call   DWORD PTR [esi-0x1b28e01]
  42ccc0:	add    BYTE PTR [eax],al
  42ccc2:	adc    DWORD PTR [ecx+0x5e48e3ff],0xffffffff
  42ccc9:	mov    edi,edi
  42cccb:	mov    esi,0x4dbfdf00
  42ccd0:	add    BYTE PTR [eax],al
  42ccd2:	add    BYTE PTR [eax+0x71ef983],bl
  42ccd8:	inc    DWORD PTR [eax]
  42ccda:	jmp    DWORD PTR [ecx]
  42ccdc:	xor    ecx,0xffffffb4
  42ccdf:	and    BYTE PTR [eax],al
  42cce1:	int3   
  42cce2:	inc    esi
  42cce4:	add    BYTE PTR [edx+0x1fd4],bl
  42ccea:	dec    DWORD PTR [edx+0x741bf8ff]
  42ccf0:	add    DWORD PTR [eax],0xffffffff
  42ccf3:	inc    ebx
  42ccf4:	add    BYTE PTR [eax-0x330a59],dl
  42ccfa:	add    dh,dl
  42ccfc:	dec    ebx
  42ccfe:	jbe    0x42cd52
  42cd00:	int3   
  42cd01:	add    BYTE PTR [eax],al
  42cd03:	and    eax,DWORD PTR [eax]
  42cd05:	sub    BYTE PTR [ebp+esi*1-0x1],dh
  42cd09:	add    ah,cl
  42cd0b:	dec    esi
  42cd0c:	int3   
  42cd0d:	xor    al,0xa9
  42cd0f:	addr16 int3 
  42cd11:	cmp    edi,0xffffffea
  42cd14:	add    BYTE PTR [esi+0x44],dl
  42cd17:	out    dx,eax
  42cd18:	(bad)  
  42cd19:	inc    DWORD PTR [ebx-0x74140095]
  42cd1f:	xchg   edi,eax
  42cd20:	add    BYTE PTR [eax],al
  42cd22:	jmp    FWORD PTR [ecx]
  42cd24:	add    bl,ah
  42cd26:	xchg   ebx,eax
  42cd27:	inc    esi
  42cd28:	int3   
  42cd29:	mov    edi,edi
  42cd2b:	sbb    eax,0xa6bea489
  42cd30:	inc    DWORD PTR [eax]
  42cd32:	jmp    DWORD PTR [eax+eax*1]
  42cd35:	jge    0x42cd7e
  42cd37:	inc    esp
  42cd38:	add    BYTE PTR [eax],al
  42cd3a:	add    BYTE PTR [edi-0x2a985301],ch
  42cd40:	inc    DWORD PTR [eax]
  42cd42:	cmp    DWORD PTR [edx+0x327da800],0xffffffff
  42cd49:	cmp    edi,0xffffffa3
  42cd4c:	push   DWORD PTR [ecx]
  42cd4e:	sbb    BYTE PTR [ecx-0xa000100],al
  42cd54:	add    BYTE PTR [eax-0x50],dh
  42cd57:	or     DWORD PTR [ebx-0xbe0000],eax
  42cd5d:	xchg   edi,eax
  42cd5e:	daa    
  42cd5f:	(bad)  
  42cd60:	inc    DWORD PTR [eax]
  42cd62:	add    BYTE PTR [ecx],dh
  42cd64:	(bad)  
  42cd65:	cmp    DWORD PTR [ebx+eax*4-0x5b000001],edi
  42cd6c:	push   DWORD PTR [ebx+esi*2-0x7c7c0089]
  42cd73:	out    dx,al
  42cd74:	dec    DWORD PTR [ebx+ebp*4-0x7cff11]
  42cd7b:	jbe    0x42cd00
  42cd7d:	enter  0x3b3b,0xff
  42cd81:	inc    DWORD PTR [eax]
  42cd83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd84:	add    BYTE PTR [ecx],dh
  42cd86:	cmp    BYTE PTR [edi+edi*8-0x7d],dl
  42cd8a:	int3   
  42cd8b:	sbb    eax,DWORD PTR [ebx-0x3d34f5]
  42cd91:	(bad)  
  42cd92:	dec    ebp
  42cd94:	int3   
  42cd95:	jne    0x42cd8d
  42cd97:	jnp    0x42cd22
  42cd99:	(bad)  
  42cd9a:	jmp    FWORD PTR [eax+eax*1]
  42cd9d:	loop   0x42cd96
  42cd9f:	jae    0xff9ccea4
  42cda5:	and    BYTE PTR [ebp-0x7c00d5],al
  42cdab:	ret    
  42cdac:	add    BYTE PTR [ebp+0x47],bl
  42cdaf:	adc    al,0xcc
  42cdb1:	(bad)  
  42cdb2:	call   FWORD PTR [ecx-0x1e712777]
  42cdb8:	int3   
  42cdb9:	int3   
  42cdba:	add    ch,dh
  42cdbc:	inc    ebx
  42cdbe:	pop    ebx
  42cdbf:	pop    edi
  42cdc0:	(bad)  
  42cdc1:	dec    esp
  42cdc3:	push   ds
  42cdc4:	push   DWORD PTR [eax+esi*4]
  42cdc7:	ins    DWORD PTR es:[edi],dx
  42cdc8:	add    DWORD PTR [eax],0x0
  42cdcb:	push   ecx
  42cdcc:	add    dh,ch
  42cdce:	inc    edx
  42cdcf:	rol    DWORD PTR [eax],0x0
  42cdd2:	int3   
  42cdd3:	inc    eax
  42cdd4:	jmp    DWORD PTR [edi]
  42cdd6:	mov    ebx,0xffffff46
  42cddb:	adc    BYTE PTR [eax],al
  42cddd:	lds    ecx,FWORD PTR [esi]
  42cddf:	fxch   st(4)
  42cde1:	inc    DWORD PTR [ebx-0x5a230025]
  42cde7:	pop    ss
  42cde8:	add    bh,bh
  42cdea:	call   FWORD PTR [esi-0x7d]
  42cded:	int    0x95
  42cdef:	pop    ebx
  42cdf0:	add    BYTE PTR [eax],al
  42cdf2:	dec    DWORD PTR [edx+0x3e6732ff]
  42cdf8:	(bad)  
  42cdf9:	inc    DWORD PTR [eax]
  42cdfb:	jnp    0x42cdc9
  42cdfd:	fs ja  0x42cdcf
  42ce00:	(bad)  
  42ce01:	(bad)  
  42ce02:	dec    DWORD PTR [ebp+0x501ae683]
  42ce08:	(bad)  
  42ce09:	dec    DWORD PTR [ecx-0x30ab00c0]
  42ce0f:	out    dx,al
  42ce10:	add    BYTE PTR [ecx-0x3007601],cl
  42ce16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce17:	pop    ecx
  42ce18:	(bad)  
  42ce19:	(bad)  
  42ce1a:	push   DWORD PTR [eax]
  42ce1c:	mov    eax,eax
  42ce1e:	xchg   DWORD PTR [edi+edi*8+0x31ffff],edi
  42ce25:	lds    ecx,FWORD PTR [esi-0x17]
  42ce28:	(bad)  
  42ce29:	inc    DWORD PTR [eax]
  42ce2b:	xor    edi,edi
  42ce2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce2e:	xchg   edx,eax
  42ce2f:	ret    
  42ce30:	add    DWORD PTR [eax],0xffffffff
  42ce33:	jae    0x42ce34
  42ce35:	or     DWORD PTR [eax],esi
  42ce37:	fmul   st(4),st
  42ce39:	inc    DWORD PTR [ebx+0x8bf0074]
  42ce3f:	or     eax,0xa8ff83ff
  42ce44:	inc    DWORD PTR [ecx]
  42ce46:	mov    eax,0x8383cca1
  42ce4b:	int    0x0
  42ce4d:	push   0x53
  42ce4f:	in     al,dx
  42ce50:	add    BYTE PTR [eax],al
  42ce52:	inc    DWORD PTR [ebx]
  42ce54:	xor    DWORD PTR [eax-0x337cd35c],0x0
  42ce5b:	add    bh,bh
  42ce5d:	inc    edi
  42ce5e:	jp     0x42ce02
  42ce60:	add    BYTE PTR [eax],al
  42ce62:	call   edi
  42ce64:	jmp    DWORD PTR [esi]
  42ce66:	xchg   ebx,eax
  42ce67:	stc    
  42ce68:	inc    DWORD PTR [ebx+0x34890e00]
  42ce6e:	pop    ebp
  42ce6f:	jge    0x42cdf4
  42ce71:	dec    esp
  42ce73:	ud0    edx,DWORD PTR [ebp+0x76]
  42ce77:	ror    DWORD PTR [ecx+0xb00ff],1
  42ce7d:	stos   DWORD PTR es:[edi],eax
  42ce7e:	and    al,0x2a
  42ce80:	dec    DWORD PTR [ecx+0x78ff2d00]
  42ce86:	lea    esp,[edx+0x180000ff]
  42ce8c:	adc    DWORD PTR [ecx*4-0x17],0xffffffe0
  42ce94:	add    BYTE PTR [edx],cl
  42ce96:	jbe    0x42ce88
  42ce98:	inc    DWORD PTR [ebx-0x20006377]
  42ce9e:	mov    ebx,0xff0009
  42cea3:	cmp    eax,0x8eb623ff
  42cea8:	dec    esp
  42ceaa:	dec    DWORD PTR [edi-0x1]
  42cead:	xchg   al,cl
  42ceaf:	fcos   
  42ceb1:	(bad)  
  42ceb2:	(bad)  
  42ceb3:	jg     0x42ceb4
  42ceb5:	sbb    eax,edi
  42ceb7:	pusha  
  42ceb8:	(bad)  
  42ceb9:	inc    DWORD PTR [eax]
  42cebb:	fwait
  42cebc:	inc    DWORD PTR [esi-0x6fa3]
  42cec2:	add    BYTE PTR [edi-0x1],ch
  42cec5:	mov    ah,0x8f
  42cec7:	mov    eax,0x3cffff83
  42cecc:	add    BYTE PTR [edi-0x76fffbf0],dl
  42ced2:	jmp    FWORD PTR [ebx-0x1]
  42ced5:	or     ebx,DWORD PTR [ebp-0x14]
  42ced8:	add    BYTE PTR [eax],al
  42ceda:	jmp    FWORD PTR [esi-0x1]
  42cedd:	pusha  
  42cede:	adc    ch,bl
  42cee0:	inc    DWORD PTR [eax]
  42cee2:	sbb    DWORD PTR [eax-0x2291fb01],0xffffffff
  42cee9:	cmp    edi,0xffffffdb
  42ceec:	add    BYTE PTR [ecx-0x33ff557d],cl
  42cef2:	push   DWORD PTR [esi]
  42cef4:	jmp    FWORD PTR [esi-0x24]
  42cef7:	sub    bh,bh
  42cef9:	(bad)  
  42cefa:	push   eax
  42cefc:	mov    DWORD PTR [esi-0x7c3356],ebp
  42cf02:	(bad)  
  42cf03:	fld    QWORD PTR [eax]
  42cf05:	(bad)  
  42cf06:	leave  
  42cf07:	out    0x89,eax
  42cf09:	inc    DWORD PTR [eax]
  42cf0b:	jmp    0xff:0x337d0fff
  42cf12:	push   DWORD PTR [ecx]
  42cf14:	inc    DWORD PTR [esi-0x78]
  42cf17:	fs cmp edi,0xffffffff
  42cf1b:	stc    
  42cf1c:	(bad)  
  42cf1d:	sti    
  42cf1e:	sbb    al,0x56
  42cf20:	add    bh,bh
  42cf22:	add    DWORD PTR [esi+0x66388ff],0xffffffff
  42cf29:	(bad)  
  42cf2a:	jmp    FWORD PTR [ebp-0x4b3d4c00]
  42cf30:	(bad)  
  42cf31:	(bad)  
  42cf32:	dec    DWORD PTR [ecx]
  42cf34:	jmp    FWORD PTR [eax-0x330000fb]
  42cf3a:	adc    DWORD PTR [ecx],0xffffffff
  42cf3d:	jmp    0x3cff:0x89278e
  42cf44:	mov    DWORD PTR [esi-0x33ffeebb],ebp
  42cf4a:	add    BYTE PTR [esi-0x525f5534],dh
  42cf50:	(bad)  
  42cf51:	inc    DWORD PTR [eax]
  42cf53:	cmc    
  42cf54:	mov    DWORD PTR [ecx+ecx*1-0xffff94],esi
  42cf5b:	inc    ecx
  42cf5c:	jmp    FWORD PTR ds:0xffcfe8
  42cf62:	add    BYTE PTR [esi+0x4f1da00],bl
  42cf68:	add    ah,cl
  42cf6a:	jmp    FWORD PTR [edi]
  42cf6c:	(bad)  
  42cf6d:	std    
  42cf6e:	int    0x22
  42cf70:	add    bh,bh
  42cf72:	and    DWORD PTR [ecx-0x1],0x20
  42cf76:	in     al,0xef
  42cf78:	cmp    edi,0xffffff83
  42cf7b:	xor    esp,ecx
  42cf7d:	push   ebx
  42cf7e:	iret   
  42cf7f:	jb     0x42cf80
  42cf81:	add    BYTE PTR [eax],al
  42cf83:	xchg   esp,eax
  42cf84:	sub    esp,0x6e
  42cf87:	cmp    edi,0x2dff83
  42cf8d:	daa    
  42cf8e:	lahf   
  42cf8f:	gs (bad) 
  42cf91:	(bad)  
  42cf92:	push   DWORD PTR [edi+edi*8]
  42cf95:	and    eax,0xffff3043
  42cf9a:	add    bh,bl
  42cf9c:	or     edx,0xffffff8e
  42cf9f:	jecxz  0x42cfa1
  42cfa1:	inc    DWORD PTR [eax]
  42cfa3:	aam    0x0
  42cfa5:	int    0xdd
  42cfa7:	adc    eax,0xeecc00ff
  42cfac:	and    DWORD PTR [eax-0x7cd339],0xffffffff
  42cfb3:	sub    al,BYTE PTR [eax]
  42cfb5:	sbb    bl,BYTE PTR [ebp+0x64]
  42cfb8:	add    bh,bh
  42cfba:	add    DWORD PTR [esi],0xffffffff
  42cfbd:	cmc    
  42cfbe:	stos   DWORD PTR es:[edi],eax
  42cfbf:	push   ecx
  42cfc0:	add    BYTE PTR [eax],al
  42cfc2:	jmp    FWORD PTR [edi-0x1]
  42cfc5:	ins    DWORD PTR es:[edi],dx
  42cfc6:	fld    QWORD PTR [esi+0x0]
  42cfc9:	add    DWORD PTR [ebx-0x6e5effaf],0x57
  42cfd0:	add    BYTE PTR [eax],al
  42cfd2:	adc    DWORD PTR [eax+eax*1+0x67],0xffffffe6
  42cfd7:	adc    BYTE PTR [ebx-0x430100],al
  42cfdd:	out    dx,eax
  42cfde:	ror    edi,0xff
  42cfe1:	inc    DWORD PTR [eax]
  42cfe3:	js     0x42cf6e
  42cfe5:	sbb    eax,DWORD PTR [ebx-0x7f]
  42cfeb:	int3   
  42cfec:	add    dh,bh
  42cfee:	pop    ecx
  42cfef:	or     al,0xff
  42cff1:	(bad)  
  42cff2:	push   DWORD PTR [edx-0x34]
  42cff5:	pop    ss
  42cff6:	out    dx,al
  42cff7:	inc    esi
  42cff8:	inc    DWORD PTR [eax]
  42cffa:	jmp    eax
  42cffc:	add    al,cl
  42cffe:	push   0xccffff6c
  42d003:	mov    cl,0x83
  42d005:	lods   al,BYTE PTR ds:[esi]
  42d006:	push   esp
  42d007:	pop    edx
  42d008:	(bad)  
  42d009:	(bad)  
  42d00a:	(bad)  
  42d00b:	sub    DWORD PTR ds:[eax-0x76008366],0x0
  42d013:	add    BYTE PTR cs:[edi+0x124d],dl
  42d01a:	add    BYTE PTR [ebx],ah
  42d01c:	jmp    DWORD PTR [ebp-0x21]
  42d01f:	inc    ebx
  42d020:	inc    DWORD PTR [eax]
  42d022:	push   esi
  42d024:	dec    DWORD PTR [ebx]
  42d026:	xchg   ebp,eax
  42d027:	fwait
  42d028:	inc    DWORD PTR [eax]
  42d02a:	jmp    DWORD PTR [esi]
  42d02c:	call   FWORD PTR [esi+0xcc4173]
  42d032:	sbb    DWORD PTR [eax-0x1],0xfffffff4
  42d036:	sbb    eax,0xffff00c8
  42d03b:	aaa    
  42d03c:	inc    DWORD PTR [eax-0x61]
  42d03f:	fild   WORD PTR [ebx+0xecffff]
  42d045:	mov    ?,WORD PTR [ebp-0x7cff35]
  42d04b:	jae    0x42d04d
  42d04d:	ins    BYTE PTR es:[edi],dx
  42d04e:	mov    ds:0xffff8313,eax
  42d053:	cli    
  42d054:	push   DWORD PTR [ecx+0xff8d69]
  42d05a:	call   ecx
  42d05c:	int3   
  42d05d:	outs   dx,DWORD PTR ds:[esi]
  42d05e:	jo     0x42d05b
  42d060:	add    bh,bh
  42d062:	push   DWORD PTR [edi-0x1]
  42d065:	iret   
  42d066:	ins    BYTE PTR es:[edi],dx
  42d067:	cld    
  42d068:	dec    DWORD PTR [ecx-0x6a7c2f00]
  42d06e:	and    eax,0xff0007
  42d073:	lock int3 
  42d075:	push   edi
  42d076:	xchg   esi,ebx
  42d078:	inc    DWORD PTR [ebx-0x2f763301]
  42d07e:	pop    esp
  42d07f:	sbb    edi,edi
  42d081:	(bad)  
  42d082:	jmp    FWORD PTR [edx]
  42d084:	(bad)  
  42d085:	call   0x142c278
  42d08a:	and    DWORD PTR [ecx],0xffffff89
  42d08d:	fwait
  42d08e:	lahf   
  42d08f:	jl     0x42d090
  42d091:	inc    DWORD PTR [eax]
  42d093:	(bad)  
  42d096:	jns    0x42d0ca
  42d098:	inc    DWORD PTR [eax]
  42d09a:	int3   
  42d09b:	lea    eax,[eax]
  42d09d:	in     al,0x6a
  42d09f:	pop    ecx
  42d0a0:	(bad)  
  42d0a1:	inc    DWORD PTR [eax]
  42d0a3:	pop    ebx
  42d0a4:	jmp    FWORD PTR [ecx-0x24eb]
  42d0aa:	mov    ebx,ebp
  42d0ac:	call   FWORD PTR ds:0xcc00413a
  42d0b2:	add    bh,bl
  42d0b4:	add    BYTE PTR [esi+0x60],bh
  42d0b7:	loop   0x42d0b8
  42d0b9:	(bad)  
  42d0ba:	push   DWORD PTR [esi-0x1]
  42d0bd:	mov    al,0x77
  42d0bf:	cli    
  42d0c0:	mov    edi,edi
  42d0c2:	inc    DWORD PTR [esi+0x19a78700]
  42d0c8:	inc    DWORD PTR [eax]
  42d0ca:	jmp    DWORD PTR [ebp+0x0]
  42d0cd:	sub    DWORD PTR [ebx-0xffff3a],eax
  42d0d3:	and    bh,bh
  42d0d5:	(bad)  
  42d0d6:	out    0x16,eax
  42d0d8:	int3   
  42d0d9:	add    BYTE PTR [ebx-0x269600bc],al
  42d0df:	adc    DWORD PTR [eax],eax
  42d0e1:	int3   
  42d0e2:	mov    DWORD PTR ds:0x82c820ff,ecx
  42d0e8:	add    ah,cl
  42d0ea:	jmp    FWORD PTR [edx+0x1d01ce00]
  42d0f0:	add    BYTE PTR [eax],al
  42d0f2:	dec    DWORD PTR [ebx]
  42d0f4:	push   DWORD PTR [edi+eax*2-0xff7c93]
  42d0fb:	jle    0x42d0fd
  42d0fd:	mov    ds:0xff83a5d2,al
  42d102:	dec    DWORD PTR [eax+eax*1-0x2e32c2]
  42d109:	add    DWORD PTR [eax],0xffffffbf
  42d10c:	add    BYTE PTR [ecx],dh
  42d10e:	adc    ah,bh
  42d110:	dec    esp
  42d112:	jmp    DWORD PTR [ecx-0x1]
  42d115:	pop    edx
  42d116:	icebp  
  42d117:	loopne 0x42d118
  42d119:	mov    DWORD PTR [ebx-0xf137c38],eax
  42d11f:	sar    edi,0xff
  42d122:	and    DWORD PTR [esi-0x1],0x54
  42d126:	mov    esp,DWORD PTR [edx-0x16ffff7d]
  42d12c:	add    BYTE PTR [ecx+0x5],dl
  42d12f:	mov    ecx,0x9700ccff
  42d134:	int3   
  42d135:	inc    eax
  42d136:	or     eax,0xcc89ff89
  42d13b:	and    al,BYTE PTR [eax]
  42d13d:	cdq    
  42d13e:	(bad)  
  42d140:	inc    DWORD PTR [eax]
  42d142:	(bad)  
  42d143:	fld    QWORD PTR [ebx-0x45142d]
  42d149:	int3   
  42d14a:	sub    DWORD PTR [ebp-0x1],0xffffffd9
  42d14e:	test   ecx,0x2eff0083
  42d154:	call   FWORD PTR [ecx-0x7cff6126]
  42d15a:	push   eax
  42d15c:	inc    edx
  42d15e:	sbb    BYTE PTR [ebx-0x78003400],bl
  42d164:	add    dh,bl
  42d166:	lahf   
  42d167:	inc    edi
  42d168:	add    DWORD PTR [ebx-0xcff0a00],0x47
  42d16f:	mov    ecx,0x37ff0083
  42d174:	dec    DWORD PTR [esp+eiz*2-0x3d]
  42d178:	(bad)  
  42d179:	inc    DWORD PTR [eax]
  42d17b:	sub    al,BYTE PTR [ebx-0x50bac9]
  42d181:	add    BYTE PTR [eax],al
  42d183:	and    DWORD PTR gs:[ebx-0x30],0xffffff91
  42d188:	mov    esp,ecx
  42d18a:	jmp    DWORD PTR [edi+edi*8-0xe7b22a]
  42d191:	(bad)  
  42d192:	call   esp
  42d194:	(bad)  
  42d195:	(bad)  
  42d196:	fs mov edx,0x7b00ff00
  42d19c:	or     DWORD PTR [ebx-0x7c76020d],0x0
  42d1a3:	in     eax,dx
  42d1a4:	add    ah,dl
  42d1a6:	push   esp
  42d1a7:	pop    ecx
  42d1a8:	add    bh,bh
  42d1aa:	or     DWORD PTR [ecx],0x0
  42d1ad:	jmp    0x142af93
  42d1b2:	and    DWORD PTR [edi],0xffffffff
  42d1b5:	lea    edi,[ecx-0x5e]
  42d1b8:	(bad)  
  42d1b9:	(bad)  
  42d1ba:	call   DWORD PTR [edx+0x30fa1fff]
  42d1c0:	add    bh,bh
  42d1c2:	add    BYTE PTR [ebx+0xf98c500],bh
  42d1c8:	add    ah,cl
  42d1ca:	add    ah,dl
  42d1cc:	call   FWORD PTR [edx]
  42d1ce:	adc    ch,bh
  42d1d0:	dec    DWORD PTR [ecx-0x37ff377d]
  42d1d6:	pop    ds
  42d1d7:	pop    edx
  42d1d8:	cmp    edi,0xffffffff
  42d1db:	dec    edi
  42d1dc:	int3   
  42d1dd:	adc    bh,BYTE PTR [eax-0x32]
  42d1e0:	add    BYTE PTR [ecx+0x70ff7a83],cl
  42d1e6:	es xchg ebx,eax
  42d1e8:	inc    DWORD PTR [eax]
  42d1ea:	add    bl,dl
  42d1ec:	add    dl,bl
  42d1ee:	fs jb  0x42d1f1
  42d1f1:	(bad)  
  42d1f2:	jmp    FWORD PTR [edi+0x77b88fff]
  42d1f8:	dec    DWORD PTR [ecx-0x327c087d]
  42d1fe:	push   ds
  42d1ff:	cdq    
  42d200:	(bad)  
  42d201:	inc    DWORD PTR [eax]
  42d203:	adc    eax,0x8f51c283
  42d208:	cmp    edi,0xffffffff
  42d20b:	jmp    0xffff:0x4dcd5fff
  42d212:	inc    DWORD PTR [edi-0x71f52e01]
  42d218:	inc    DWORD PTR [eax]
  42d21a:	sub    DWORD PTR [ecx-0x1b99b101],0xffffffff
  42d221:	add    bh,bh
  42d223:	test   bh,bh
  42d225:	mul    BYTE PTR [edx]
  42d227:	xchg   edi,eax
  42d228:	add    bh,bh
  42d22a:	push   DWORD PTR [ecx]
  42d22c:	call   DWORD PTR [edx-0x7b]
  42d22f:	fild   WORD PTR [eax]
  42d231:	add    BYTE PTR [eax],al
  42d233:	or     BYTE PTR [eax],al
  42d235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d236:	in     eax,0xb0
  42d238:	inc    DWORD PTR [eax]
  42d23a:	(bad)  
  42d23b:	fild   DWORD PTR [eax]
  42d23d:	sub    dl,BYTE PTR [ebp+0xff31]
  42d243:	pushf  
  42d244:	dec    DWORD PTR [edx]
  42d246:	jmp    0x42d281
  42d248:	int3   
  42d249:	int3   
  42d24a:	int3   
  42d24b:	int3   
  42d24c:	int3   
  42d24d:	int3   
  42d24e:	int3   
  42d24f:	int3   
  42d250:	mov    ecx,DWORD PTR ds:0x447d00
  42d256:	mov    edx,DWORD PTR ds:0x447028
  42d25c:	push   ebx
  42d25d:	push   ebp
  42d25e:	push   esi
  42d25f:	push   edi
  42d260:	add    ecx,0x14dcc
  42d266:	mov    esi,0x4a
  42d26b:	jmp    0x42d270
  42d26d:	lea    ecx,[ecx+0x0]
  42d270:	movzx  eax,BYTE PTR [edx+0x5]
  42d274:	movzx  edi,BYTE PTR [edx+0x2]
  42d278:	movzx  edx,WORD PTR [edx]
  42d27b:	shl    eax,0x8
  42d27e:	add    eax,edi
  42d280:	shl    eax,0x10
  42d283:	add    eax,edx
  42d285:	mov    edx,DWORD PTR ds:0x447cfc
  42d28b:	mov    ds:0x447cf0,eax
  42d290:	add    edx,0x2507bcdd
  42d296:	xor    edx,eax
  42d298:	mov    DWORD PTR [ecx],edx
  42d29a:	mov    edx,DWORD PTR ds:0x447028
  42d2a0:	add    edx,0x8
  42d2a3:	mov    DWORD PTR ds:0x447028,edx
  42d2a9:	movzx  eax,BYTE PTR [edx+0x5]
  42d2ad:	movzx  edi,BYTE PTR [edx+0x2]
  42d2b1:	movzx  edx,WORD PTR [edx]
  42d2b4:	shl    eax,0x8
  42d2b7:	add    eax,edi
  42d2b9:	shl    eax,0x10
  42d2bc:	add    eax,edx
  42d2be:	mov    edx,DWORD PTR ds:0x447cfc
  42d2c4:	mov    ds:0x447cf0,eax
  42d2c9:	add    edx,0x2507bcdd
  42d2cf:	xor    edx,eax
  42d2d1:	mov    DWORD PTR [ecx+0x4],edx
  42d2d4:	mov    edx,DWORD PTR ds:0x447028
  42d2da:	add    edx,0x8
  42d2dd:	mov    DWORD PTR ds:0x447028,edx
  42d2e3:	movzx  eax,BYTE PTR [edx+0x5]
  42d2e7:	movzx  edi,BYTE PTR [edx+0x2]
  42d2eb:	movzx  edx,WORD PTR [edx]
  42d2ee:	shl    eax,0x8
  42d2f1:	add    eax,edi
  42d2f3:	shl    eax,0x10
  42d2f6:	add    eax,edx
  42d2f8:	mov    edx,DWORD PTR ds:0x447cfc
  42d2fe:	add    edx,0x2507bcdd
  42d304:	xor    edx,eax
  42d306:	mov    ds:0x447cf0,eax
  42d30b:	mov    DWORD PTR [ecx+0x8],edx
  42d30e:	mov    edx,DWORD PTR ds:0x447028
  42d314:	add    edx,0x8
  42d317:	mov    DWORD PTR ds:0x447028,edx
  42d31d:	movzx  eax,BYTE PTR [edx+0x5]
  42d321:	movzx  edi,BYTE PTR [edx+0x2]
  42d325:	movzx  edx,WORD PTR [edx]
  42d328:	shl    eax,0x8
  42d32b:	add    eax,edi
  42d32d:	shl    eax,0x10
  42d330:	add    eax,edx
  42d332:	mov    edx,DWORD PTR ds:0x447cfc
  42d338:	add    edx,0x2507bcdd
  42d33e:	xor    edx,eax
  42d340:	mov    ds:0x447cf0,eax
  42d345:	mov    DWORD PTR [ecx+0xc],edx
  42d348:	mov    edx,DWORD PTR ds:0x447028
  42d34e:	add    edx,0x8
  42d351:	mov    DWORD PTR ds:0x447028,edx
  42d357:	movzx  eax,BYTE PTR [edx+0x5]
  42d35b:	movzx  edi,BYTE PTR [edx+0x2]
  42d35f:	movzx  edx,WORD PTR [edx]
  42d362:	shl    eax,0x8
  42d365:	add    eax,edi
  42d367:	shl    eax,0x10
  42d36a:	add    eax,edx
  42d36c:	mov    edx,DWORD PTR ds:0x447cfc
  42d372:	add    edx,0x2507bcdd
  42d378:	xor    edx,eax
  42d37a:	mov    ds:0x447cf0,eax
  42d37f:	mov    DWORD PTR [ecx+0x10],edx
  42d382:	mov    edx,DWORD PTR ds:0x447028
  42d388:	add    edx,0x8
  42d38b:	add    ecx,0x14
  42d38e:	dec    esi
  42d38f:	mov    DWORD PTR ds:0x447028,edx
  42d395:	jne    0x42d270
  42d39b:	mov    esi,DWORD PTR ds:0x447d00
  42d3a1:	add    esi,0x15394
  42d3a7:	call   DWORD PTR ds:0x444050
  42d3ad:	mov    ebx,DWORD PTR ds:0x444008
  42d3b3:	mov    edi,0x15e
  42d3b8:	mov    ebp,0x10
  42d3bd:	lea    ecx,[ecx+0x0]
  42d3c0:	push   0x0
  42d3c2:	call   ebx
  42d3c4:	mov    ecx,DWORD PTR ds:0x44702c
  42d3ca:	movzx  eax,WORD PTR [ecx+0x4]
  42d3ce:	movzx  ecx,WORD PTR [ecx+0x1]
  42d3d2:	shl    eax,0x10
  42d3d5:	add    eax,ecx
  42d3d7:	mov    ds:0x447cf0,eax
  42d3dc:	mov    edx,0xac6d5fa9
  42d3e1:	sub    edx,DWORD PTR ds:0x447cfc
  42d3e7:	add    esi,0x8
  42d3ea:	xor    edx,eax
  42d3ec:	mov    DWORD PTR [esi-0x8],edx
  42d3ef:	mov    ecx,DWORD PTR ds:0x44702c
  42d3f5:	movzx  eax,BYTE PTR [ecx+0xe]
  42d3f9:	movzx  edx,WORD PTR [ecx+0xc]
  42d3fd:	movzx  ecx,BYTE PTR [ecx+0xa]
  42d401:	shl    eax,0x10
  42d404:	add    eax,edx
  42d406:	mov    edx,DWORD PTR ds:0x447cfc
  42d40c:	shl    eax,0x8
  42d40f:	add    eax,ecx
  42d411:	add    edx,0xac655fa1
  42d417:	xor    edx,eax
  42d419:	mov    ds:0x447cf0,eax
  42d41e:	mov    DWORD PTR [esi-0x4],edx
  42d421:	add    DWORD PTR ds:0x44702c,ebp
  42d427:	dec    edi
  42d428:	jne    0x42d3c0
  42d42a:	mov    ecx,DWORD PTR ds:0x44702c
  42d430:	movzx  eax,WORD PTR [ecx+0x4]
  42d434:	movzx  ecx,WORD PTR [ecx+0x1]
  42d438:	shl    eax,0x10
  42d43b:	add    eax,ecx
  42d43d:	mov    edx,0xac6d5fa9
  42d442:	sub    edx,DWORD PTR ds:0x447cfc
  42d448:	mov    ds:0x447cf0,eax
  42d44d:	xor    edx,eax
  42d44f:	mov    DWORD PTR [esi],edx
  42d451:	mov    eax,ds:0x447d00
  42d456:	mov    edx,DWORD PTR ds:0x447030
  42d45c:	add    eax,0x15e88
  42d461:	lea    esi,[edi+0x40]
  42d464:	movzx  ecx,WORD PTR [edx+0x6]
  42d468:	movzx  edi,BYTE PTR [edx+0x4]
  42d46c:	movzx  edx,BYTE PTR [edx+0x1]
  42d470:	shl    ecx,0x8
  42d473:	add    ecx,edi
  42d475:	shl    ecx,0x8
  42d478:	add    ecx,edx
  42d47a:	mov    edx,DWORD PTR ds:0x447cfc
  42d480:	mov    DWORD PTR ds:0x447cf0,ecx
  42d486:	add    edx,0x2054728c
  42d48c:	xor    edx,ecx
  42d48e:	mov    DWORD PTR [eax],edx
  42d490:	mov    edx,DWORD PTR ds:0x447030
  42d496:	add    edx,0x8
  42d499:	mov    DWORD PTR ds:0x447030,edx
  42d49f:	movzx  ecx,WORD PTR [edx+0x6]
  42d4a3:	movzx  edi,BYTE PTR [edx+0x4]
  42d4a7:	movzx  edx,BYTE PTR [edx+0x1]
  42d4ab:	shl    ecx,0x8
  42d4ae:	add    ecx,edi
  42d4b0:	shl    ecx,0x8
  42d4b3:	add    ecx,edx
  42d4b5:	mov    edx,DWORD PTR ds:0x447cfc
  42d4bb:	mov    DWORD PTR ds:0x447cf0,ecx
  42d4c1:	add    edx,0x2054728c
  42d4c7:	xor    edx,ecx
  42d4c9:	mov    DWORD PTR [eax+0x4],edx
  42d4cc:	mov    edx,DWORD PTR ds:0x447030
  42d4d2:	add    edx,0x8
  42d4d5:	mov    DWORD PTR ds:0x447030,edx
  42d4db:	movzx  ecx,WORD PTR [edx+0x6]
  42d4df:	movzx  edi,BYTE PTR [edx+0x4]
  42d4e3:	movzx  edx,BYTE PTR [edx+0x1]
  42d4e7:	shl    ecx,0x8
  42d4ea:	add    ecx,edi
  42d4ec:	shl    ecx,0x8
  42d4ef:	add    ecx,edx
  42d4f1:	mov    edx,DWORD PTR ds:0x447cfc
  42d4f7:	mov    DWORD PTR ds:0x447cf0,ecx
  42d4fd:	add    edx,0x2054728c
  42d503:	xor    edx,ecx
  42d505:	mov    DWORD PTR [eax+0x8],edx
  42d508:	mov    edx,DWORD PTR ds:0x447030
  42d50e:	add    edx,0x8
  42d511:	mov    DWORD PTR ds:0x447030,edx
  42d517:	movzx  ecx,WORD PTR [edx+0x6]
  42d51b:	movzx  edi,BYTE PTR [edx+0x4]
  42d51f:	movzx  edx,BYTE PTR [edx+0x1]
  42d523:	shl    ecx,0x8
  42d526:	add    ecx,edi
  42d528:	shl    ecx,0x8
  42d52b:	add    ecx,edx
  42d52d:	mov    edx,DWORD PTR ds:0x447cfc
  42d533:	mov    DWORD PTR ds:0x447cf0,ecx
  42d539:	add    edx,0x2054728c
  42d53f:	xor    edx,ecx
  42d541:	mov    DWORD PTR [eax+0xc],edx
  42d544:	mov    edx,DWORD PTR ds:0x447030
  42d54a:	add    edx,0x8
  42d54d:	mov    DWORD PTR ds:0x447030,edx
  42d553:	movzx  ecx,WORD PTR [edx+0x6]
  42d557:	movzx  edi,BYTE PTR [edx+0x4]
  42d55b:	movzx  edx,BYTE PTR [edx+0x1]
  42d55f:	shl    ecx,0x8
  42d562:	add    ecx,edi
  42d564:	shl    ecx,0x8
  42d567:	add    ecx,edx
  42d569:	mov    edx,DWORD PTR ds:0x447cfc
  42d56f:	add    edx,0x2054728c
  42d575:	xor    edx,ecx
  42d577:	mov    DWORD PTR ds:0x447cf0,ecx
  42d57d:	mov    DWORD PTR [eax+0x10],edx
  42d580:	mov    edx,DWORD PTR ds:0x447030
  42d586:	add    edx,0x8
  42d589:	mov    DWORD PTR ds:0x447030,edx
  42d58f:	movzx  ecx,WORD PTR [edx+0x6]
  42d593:	movzx  edi,BYTE PTR [edx+0x4]
  42d597:	movzx  edx,BYTE PTR [edx+0x1]
  42d59b:	shl    ecx,0x8
  42d59e:	add    ecx,edi
  42d5a0:	shl    ecx,0x8
  42d5a3:	add    ecx,edx
  42d5a5:	mov    edx,DWORD PTR ds:0x447cfc
  42d5ab:	add    edx,0x2054728c
  42d5b1:	xor    edx,ecx
  42d5b3:	mov    DWORD PTR ds:0x447cf0,ecx
  42d5b9:	mov    DWORD PTR [eax+0x14],edx
  42d5bc:	mov    edx,DWORD PTR ds:0x447030
  42d5c2:	add    edx,0x8
  42d5c5:	add    eax,0x18
  42d5c8:	dec    esi
  42d5c9:	mov    DWORD PTR ds:0x447030,edx
  42d5cf:	jne    0x42d464
  42d5d5:	mov    edx,DWORD PTR ds:0x447d00
  42d5db:	mov    ecx,DWORD PTR ds:0x447034
  42d5e1:	add    edx,0x16488
  42d5e7:	mov    esi,0x1cf
  42d5ec:	lea    esp,[esp+0x0]
  42d5f0:	movzx  eax,BYTE PTR [ecx+0x4]
  42d5f4:	movzx  edi,BYTE PTR [ecx+0x2]
  42d5f8:	movzx  ecx,WORD PTR [ecx]
  42d5fb:	shl    eax,0x8
  42d5fe:	add    eax,edi
  42d600:	shl    eax,0x10
  42d603:	add    eax,ecx
  42d605:	mov    ecx,0x6e445640
  42d60a:	sub    ecx,DWORD PTR ds:0x447cfc
  42d610:	mov    ds:0x447cf0,eax
  42d615:	xor    ecx,eax
  42d617:	mov    DWORD PTR [edx],ecx
  42d619:	mov    ecx,DWORD PTR ds:0x447034
  42d61f:	add    ecx,0x8
  42d622:	add    edx,0x4
  42d625:	dec    esi
  42d626:	mov    DWORD PTR ds:0x447034,ecx
  42d62c:	jne    0x42d5f0
  42d62e:	mov    eax,ds:0x447d00
  42d633:	add    eax,0x16bc4
  42d638:	mov    esi,0x7f
  42d63d:	lea    ecx,[ecx+0x0]
  42d640:	mov    edx,DWORD PTR ds:0x447038
  42d646:	mov    ecx,DWORD PTR [edx]
  42d648:	mov    DWORD PTR ds:0x447cf0,ecx
  42d64e:	mov    edx,0x34986d00
  42d653:	sub    edx,DWORD PTR ds:0x447cfc
  42d659:	add    eax,0x10
  42d65c:	xor    edx,ecx
  42d65e:	mov    DWORD PTR [eax-0x10],edx
  42d661:	mov    edx,DWORD PTR ds:0x447038
  42d667:	movzx  ecx,BYTE PTR [edx+0xe]
  42d66b:	movzx  edi,BYTE PTR [edx+0xa]
  42d66f:	movzx  edx,WORD PTR [edx+0x7]
  42d673:	shl    ecx,0x8
  42d676:	add    ecx,edi
  42d678:	shl    ecx,0x10
  42d67b:	add    ecx,edx
  42d67d:	mov    DWORD PTR ds:0x447cf0,ecx
  42d683:	mov    edx,0x34986d00
  42d688:	sub    edx,DWORD PTR ds:0x447cfc
  42d68e:	xor    edx,ecx
  42d690:	mov    DWORD PTR [eax-0xc],edx
  42d693:	mov    ecx,DWORD PTR ds:0x447038
  42d699:	add    ecx,ebp
  42d69b:	mov    DWORD PTR ds:0x447038,ecx
  42d6a1:	mov    ecx,DWORD PTR [ecx]
  42d6a3:	mov    DWORD PTR ds:0x447cf0,ecx
  42d6a9:	mov    edx,0x34986d00
  42d6ae:	sub    edx,DWORD PTR ds:0x447cfc
  42d6b4:	xor    edx,ecx
  42d6b6:	mov    DWORD PTR [eax-0x8],edx
  42d6b9:	mov    edx,DWORD PTR ds:0x447038
  42d6bf:	movzx  ecx,BYTE PTR [edx+0xe]
  42d6c3:	movzx  edi,BYTE PTR [edx+0xa]
  42d6c7:	movzx  edx,WORD PTR [edx+0x7]
  42d6cb:	shl    ecx,0x8
  42d6ce:	add    ecx,edi
  42d6d0:	shl    ecx,0x10
  42d6d3:	add    ecx,edx
  42d6d5:	mov    edx,0x34986d00
  42d6da:	sub    edx,DWORD PTR ds:0x447cfc
  42d6e0:	mov    DWORD PTR ds:0x447cf0,ecx
  42d6e6:	xor    edx,ecx
  42d6e8:	mov    DWORD PTR [eax-0x4],edx
  42d6eb:	add    DWORD PTR ds:0x447038,ebp
  42d6f1:	dec    esi
  42d6f2:	jne    0x42d640
  42d6f8:	pop    edi
  42d6f9:	pop    esi
  42d6fa:	pop    ebp
  42d6fb:	pop    ebx
  42d6fc:	ret    
  42d6fd:	int3   
  42d6fe:	int3   
  42d6ff:	int3   
  42d700:	add    BYTE PTR [esi-0x7cac8001],ah
  42d706:	(bad)  
  42d707:	jge    0x42d692
  42d709:	ret    0x2d00
  42d70c:	or     BYTE PTR [eax],al
  42d70e:	int3   
  42d70f:	or     esp,0xffffffe3
  42d712:	(bad)  
  42d713:	mov    esp,0x5100f12d
  42d718:	add    BYTE PTR [edx],dh
  42d71a:	and    eax,0xa
  42d71d:	add    BYTE PTR [eax],al
  42d71f:	dec    DWORD PTR [ecx-0x650000c0]
  42d725:	mov    edx,ecx
  42d727:	cmp    DWORD PTR [eax],eax
  42d729:	push   cs
  42d72a:	(bad)  
  42d72b:	dec    DWORD PTR [ebx]
  42d72d:	add    BYTE PTR [edi-0x35],ah
  42d730:	int3   
  42d731:	retf   0xffff
  42d734:	mov    al,BYTE PTR [eax]
  42d736:	sub    eax,0xb00a6
  42d73b:	inc    esp
  42d73d:	inc    DWORD PTR [edi-0x57]
  42d740:	add    BYTE PTR [edi+0x9bff00],dl
  42d746:	pop    ss
  42d747:	inc    edx
  42d748:	xor    DWORD PTR [ecx-0x34],0xffffffff
  42d74c:	in     eax,dx
  42d74d:	call   DWORD PTR [ecx+0x31]
  42d750:	add    BYTE PTR [edi-0xd5ff7d],al
  42d756:	push   ss
  42d757:	repz add DWORD PTR [eax+0x0],0x0
  42d75c:	sbb    ah,cl
  42d75e:	(bad)  
  42d75f:	(bad)  
  42d760:	(bad)  
  42d761:	jns    0x42d763
  42d763:	int3   
  42d764:	call   0x833a:0xff7b36cc
  42d76b:	add    BYTE PTR [edi-0x77],cl
  42d76e:	pop    edi
  42d76f:	sub    bh,bh
  42d771:	ret    0x83ff
  42d774:	cmc    
  42d775:	mov    DWORD PTR [eax-0xceff04],eax
  42d77b:	add    ch,al
  42d77d:	(bad)  
  42d77e:	cmp    ebx,DWORD PTR [edi]
  42d780:	push   DWORD PTR [ecx]
  42d782:	(bad)  
  42d783:	dec    ebx
  42d785:	and    DWORD PTR [edx-0x7c55333d],0x0
  42d78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d78d:	push   DWORD PTR [ebx+0xafff13]
  42d793:	jmp    DWORD PTR [edi+edi*8-0x65]
  42d797:	pop    ebx
  42d798:	add    BYTE PTR [ebx-0x76fa3400],bl
  42d79e:	inc    ebx
  42d79f:	dec    ecx
  42d7a0:	jmp    FWORD PTR [esi-0x1]
  42d7a3:	push   DWORD PTR [ebp-0x77]
  42d7a6:	dec    esp
  42d7a7:	push   cs
  42d7a8:	call   DWORD PTR [edi-0x764c0077]
  42d7ae:	inc    ecx
  42d7af:	stos   BYTE PTR es:[edi],al
  42d7b0:	jmp    DWORD PTR [eax]
  42d7b2:	add    bh,bh
  42d7b4:	or     al,BYTE PTR [eax]
  42d7b6:	ja     0x42d826
  42d7b8:	add    BYTE PTR [eax+0xd90000],ah
  42d7be:	leave  
  42d7bf:	lea    eax,[eax]
  42d7c1:	ds dec esp
  42d7c4:	aaa    
  42d7c5:	or     DWORD PTR [esi-0x7],0xffffffff
  42d7c9:	cmp    BYTE PTR [ebx-0x12ffab01],al
  42d7cf:	jae    0x42d7d1
  42d7d1:	pop    edi
  42d7d2:	inc    DWORD PTR [ebx-0x4ca7ffbf]
  42d7d8:	add    BYTE PTR [ebx-0x1],dh
  42d7db:	add    BYTE PTR [eax+0x0],ch
  42d7de:	and    DWORD PTR [edx],eax
  42d7e0:	jmp    DWORD PTR [esi]
  42d7e2:	add    bh,bh
  42d7e4:	pop    edi
  42d7e5:	and    DWORD PTR [esi-0x40330e],0xffffffff
  42d7ec:	repnz int3 
  42d7ee:	and    al,0x58
  42d7f0:	add    BYTE PTR [esi-0x29ff01],dh
  42d7f6:	sbb    cl,BYTE PTR [edx-0x337ca101]
  42d7fc:	test   al,0xff
  42d7fe:	cmc    
  42d7ff:	mov    ebx,0x83837089
  42d804:	mov    esp,0xcc7e0dff
  42d809:	sub    ah,cl
  42d80b:	add    BYTE PTR [edi+edi*8],al
  42d80e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d80f:	mov    ds:0xcc70cc,al
  42d814:	push   eax
  42d815:	add    ch,ah
  42d817:	cli    
  42d818:	call   FWORD PTR [edi]
  42d81a:	add    bh,bh
  42d81c:	jb     0x42d81d
  42d81e:	xchg   edx,eax
  42d81f:	cmp    eax,0xcc00c800
  42d824:	lds    eax,FWORD PTR [ebx+0x5e00aba2]
  42d82a:	mov    esp,ecx
  42d82c:	jecxz  0x42d7b1
  42d82e:	cmc    
  42d82f:	jbe    0x42d7fd
  42d831:	cmp    al,BYTE PTR [eax]
  42d833:	jmp    FWORD PTR [ebp+0x0]
  42d836:	outs   dx,DWORD PTR ds:[esi]
  42d837:	rol    BYTE PTR [eax],cl
  42d839:	adc    eax,DWORD PTR [eax]
  42d83b:	and    DWORD PTR [ecx-0x76f26f7d],0xffffffd2
  42d842:	add    ah,cl
  42d844:	test   al,0xff
  42d846:	dec    edx
  42d847:	fiadd  WORD PTR [eax]
  42d849:	dec    edx
  42d84a:	add    BYTE PTR [eax],al
  42d84c:	jp     0x42d84e
  42d84e:	add    DWORD PTR [eax],ebp
  42d850:	(bad)  
  42d851:	cmp    eax,0xff5e0083
  42d856:	xchg   ecx,eax
  42d857:	adc    al,BYTE PTR [ebx+0xf008970]
  42d85d:	dec    edi
  42d85f:	cmp    al,0x0
  42d861:	popf   
  42d862:	inc    DWORD PTR [eax]
  42d864:	(bad)  
  42d867:	hlt    
  42d868:	and    DWORD PTR [esi-0x1],0x0
  42d86c:	pop    ecx
  42d86d:	jmp    DWORD PTR [ecx-0xf]
  42d870:	add    BYTE PTR [ecx],bh
  42d872:	(bad)  
  42d873:	inc    DWORD PTR [esp+ecx*8-0x1a]
  42d877:	cdq    
  42d878:	add    BYTE PTR ds:0xcc6200ff,al
  42d87e:	xlat   BYTE PTR ds:[ebx]
  42d87f:	push   ss
  42d880:	add    BYTE PTR [esi+0x0],dh
  42d883:	inc    DWORD PTR [edx+0x2a1900]
  42d889:	stos   DWORD PTR es:[edi],eax
  42d88a:	int3   
  42d88b:	int3   
  42d88c:	sti    
  42d88d:	add    BYTE PTR [esi+esi*2-0x1],dl
  42d891:	es int3 
  42d893:	add    eax,0xffffffcc
  42d896:	mov    ecx,DWORD PTR [ecx+0x0]
  42d899:	mov    dh,0xff
  42d89b:	add    ch,bl
  42d89d:	add    BYTE PTR [esi-0x9376f7],al
  42d8a3:	add    BYTE PTR [edi+0x27b8ff],dl
  42d8a9:	cmp    al,0xff
  42d8ab:	add    BYTE PTR [edx-0x1],ah
  42d8ae:	jl     0x42d898
  42d8b0:	inc    DWORD PTR [edi+edi*8]
  42d8b3:	add    ch,bh
  42d8b5:	call   DWORD PTR [ecx-0x73]
  42d8b8:	add    cl,bh
  42d8ba:	inc    DWORD PTR [ebx-0x50247ccd]
  42d8c0:	dec    DWORD PTR [ebx]
  42d8c2:	inc    DWORD PTR [eax]
  42d8c4:	outs   dx,DWORD PTR ds:[esi]
  42d8c5:	jmp    DWORD PTR [ecx]
  42d8c7:	push   esi
  42d8c8:	add    BYTE PTR [esi-0x77],ah
  42d8cb:	dec    ecx
  42d8cd:	jmp    ebp
  42d8cf:	inc    ebp
  42d8d0:	push   DWORD PTR [ecx-0x77]
  42d8d3:	call   DWORD PTR [ecx]
  42d8d5:	add    DWORD PTR [edx+0x51],0xffffffff
  42d8d9:	hlt    
  42d8da:	inc    DWORD PTR [ebx-0x4bca7c9e]
  42d8e0:	inc    DWORD PTR [ecx]
  42d8e2:	dec    esp
  42d8e4:	iret   
  42d8e5:	dec    DWORD PTR [ecx-0x807c2e]
  42d8eb:	add    BYTE PTR [esi],ah
  42d8ed:	call   DWORD PTR [ebx]
  42d8ef:	imul   eax,DWORD PTR [eax],0xffffffd7
  42d8f2:	int3   
  42d8f3:	add    BYTE PTR [edx-0x68c901],al
  42d8f9:	xchg   edx,eax
  42d8fa:	add    BYTE PTR [eax],al
  42d8fc:	jecxz  0x42d8fe
  42d8fe:	dec    esi
  42d8ff:	test   bh,bh
  42d901:	or     al,0xff
  42d903:	call   FWORD PTR [ecx-0x1]
  42d906:	push   ecx
  42d907:	ja     0x42d892
  42d909:	jo     0x42d90a
  42d90b:	xor    DWORD PTR [eax-0x9fca00],0x55
  42d912:	dec    DWORD PTR [ecx+0x6cf4ff5a]
  42d918:	jmp    DWORD PTR [ebx-0x3b7c01]
  42d91e:	test   eax,0xff32893e
  42d923:	call   FWORD PTR [edx-0x1]
  42d926:	popf   
  42d927:	fwait
  42d928:	jmp    DWORD PTR ds:0x83e2ccff
  42d92e:	scas   eax,DWORD PTR es:[edi]
  42d92f:	mov    ch,0xff
  42d931:	xchg   ecx,eax
  42d932:	add    BYTE PTR [eax],al
  42d934:	jae    0x42d935
  42d936:	jp     0x42d906
  42d938:	add    BYTE PTR [ecx-0x5d0000],ch
  42d93e:	aaa    
  42d93f:	outs   dx,DWORD PTR ds:[esi]
  42d940:	(bad)  
  42d941:	cmp    edi,edi
  42d943:	push   DWORD PTR [eax-0x7d]
  42d946:	js     0x42d933
  42d948:	xor    esi,0x0
  42d94b:	add    BYTE PTR [edi],al
  42d94d:	and    esi,0xffffff92
  42d950:	push   esi
  42d952:	(bad)  
  42d953:	jmp    FWORD PTR [edx]
  42d955:	add    BYTE PTR [esi-0xd97cf1],dh
  42d95b:	(bad)  
  42d95c:	(bad)  
  42d95d:	jmp    FWORD PTR [edi-0xb338b]
  42d963:	add    BYTE PTR [ebp+0xb570ff],ch
  42d969:	out    dx,eax
  42d96a:	mov    edi,edi
  42d96c:	test   DWORD PTR [eax],0x39006e1f
  42d972:	inc    DWORD PTR [ebx-0x1d4dffad]
  42d978:	add    dl,dh
  42d97a:	int3   
  42d97b:	xor    DWORD PTR [esi+0x9a0289],0xffffffb5
  42d982:	or     esp,0xfffffff3
  42d985:	add    BYTE PTR [edi+0x10],bl
  42d988:	adc    DWORD PTR [esp+ecx*8-0x7d33d834],0xffffff86
  42d990:	and    DWORD PTR [ebp-0xe57c01],0x53
  42d997:	pop    ds
  42d998:	add    bl,bl
  42d99a:	inc    DWORD PTR [eax]
  42d99c:	xor    al,BYTE PTR [ebx-0x25004499]
  42d9a2:	add    ah,cl
  42d9a4:	cwde   
  42d9a5:	jmp    FWORD PTR [edx+eax*2+0x0]
  42d9a9:	int    0xff
  42d9ab:	sub    DWORD PTR [edx-0x7c179701],0xffffff97
  42d9b2:	int3   
  42d9b3:	jmp    DWORD PTR [edi]
  42d9b5:	(bad)  
  42d9b6:	cmp    bh,bh
  42d9b8:	inc    edi
  42d9ba:	(bad)  
  42d9bb:	call   FWORD PTR [edi+edi*8]
  42d9be:	xchg   ebp,eax
  42d9bf:	cmp    al,0x83
  42d9c1:	sub    DWORD PTR [eax],eax
  42d9c3:	push   DWORD PTR [esi-0x331cd101]
  42d9c9:	mov    esi,0xffb889ff
  42d9ce:	xchg   edx,eax
  42d9cf:	fdivp  st(7),st
  42d9d1:	push   0xff08ffcc
  42d9d6:	mov    edx,DWORD PTR [edi-0x76007d00]
  42d9dc:	ja     0x42d9dd
  42d9de:	dec    eax
  42d9df:	(bad)  
  42d9e1:	inc    BYTE PTR [ebx-0x3e00797d]
  42d9e7:	hlt    
  42d9e8:	int3   
  42d9e9:	mov    bl,0x89
  42d9eb:	add    BYTE PTR [eax-0x1],ch
  42d9ee:	fcomp  QWORD PTR [ecx-0x77]
  42d9f1:	stc    
  42d9f2:	int3   
  42d9f3:	inc    DWORD PTR [edi-0x1]
  42d9f6:	cmp    DWORD PTR [eax+0x0],0x19
  42d9fa:	dec    DWORD PTR [ecx-0x2dd033c5]
  42da00:	jmp    FWORD PTR [edx]
  42da02:	int3   
  42da03:	int3   
  42da04:	push   ecx
  42da05:	and    DWORD PTR [ecx-0xffff9d],0xffffffff
  42da0c:	adc    ecx,esp
  42da0e:	(bad)  
  42da0f:	xchg   esp,eax
  42da10:	(bad)  
  42da11:	mov    ebx,0xfff8ffcc
  42da16:	scas   eax,DWORD PTR es:[edi]
  42da17:	and    al,BYTE PTR [ebx-0x5a0033ee]
  42da1d:	add    BYTE PTR [ecx-0x233375],dh
  42da23:	add    bh,ch
  42da25:	add    BYTE PTR [esi+edx*1+0x0],cl
  42da29:	dec    ecx
  42da2a:	int3   
  42da2b:	add    BYTE PTR [ecx+0x0],bl
  42da2e:	push   ebp
  42da2f:	push   cs
  42da30:	cmp    edx,0xffffff83
  42da33:	jmp    DWORD PTR [edi+edi*8+0x63ff7bc9]
  42da3a:	add    bh,bh
  42da3c:	cli    
  42da3d:	int3   
  42da3e:	lea    esi,[eax]
  42da40:	add    bh,al
  42da42:	add    bh,bh
  42da44:	push   ss
  42da45:	add    BYTE PTR [ebx],al
  42da47:	hlt    
  42da48:	jmp    DWORD PTR [esi+0x6a83ff]
  42da4e:	mov    bl,0x5a
  42da50:	mov    DWORD PTR [edi+0xd8ff83],edx
  42da56:	call   0xffd2da6b
  42da5b:	or     DWORD PTR [ebx],0xffffffff
  42da5e:	jb     0x42da5f
  42da60:	call   edi
  42da62:	inc    DWORD PTR [ebx-0x43ff1a]
  42da68:	add    BYTE PTR [ebp-0x77],bl
  42da6b:	add    BYTE PTR [eax+eax*1-0x33],cl
  42da6f:	pushf  
  42da70:	mov    DWORD PTR [ebx-0xb97c7d],edx
  42da76:	xchg   edi,eax
  42da77:	jbe    0x42da02
  42da79:	pop    eax
  42da7a:	add    ah,cl
  42da7c:	(bad)  
  42da7e:	push   DWORD PTR [edi+edi*8]
  42da81:	pushf  
  42da82:	mov    edi,edi
  42da84:	push   ebp
  42da85:	push   DWORD PTR [edx]
  42da87:	std    
  42da88:	jmp    DWORD PTR [ebp-0x34]
  42da8b:	add    BYTE PTR [eax-0x1],ch
  42da8e:	mov    eax,ds:0xc38367
  42da93:	xor    DWORD PTR [ecx+0x754cff],0x72
  42da9a:	dec    esp
  42da9c:	push   eax
  42da9d:	jmp    FWORD PTR [ebp-0x6f00b3]
  42daa3:	call   FWORD PTR [esi-0xf3a801]
  42daa9:	mov    cl,0xff
  42daab:	add    bh,ah
  42daad:	call   FWORD PTR [eax*2+0x8384ff]
  42dab4:	xor    DWORD PTR [ecx+0x6989aeb8],ecx
  42daba:	mov    edi,edi
  42dabc:	nop
  42dabd:	add    BYTE PTR [edi+0xfccce3],ah
  42dac3:	int3   
  42dac4:	push   ss
  42dac5:	add    BYTE PTR [esi],ah
  42dac7:	add    al,0x0
  42dac9:	sar    bh,0x83
  42dacc:	dec    ecx
  42dacd:	dec    DWORD PTR [edi+0x7b]
  42dad0:	(bad)  
  42dad1:	jp     0x42dad2
  42dad3:	call   DWORD PTR [edx-0x7cd89701]
  42dad9:	stos   BYTE PTR es:[edi],al
  42dada:	(bad)  
  42dadb:	jmp    DWORD PTR [edi]
  42dadd:	or     edx,0x6a
  42dae0:	add    BYTE PTR [eax],dl
  42dae2:	add    BYTE PTR [eax],al
  42dae4:	mov    esp,0xffc67683
  42dae9:	push   cs
  42daea:	inc    DWORD PTR [eax]
  42daec:	std    
  42daed:	(bad)  
  42daee:	aas    
  42daef:	mov    cl,0x0
  42daf1:	je     0x42daf2
  42daf3:	add    BYTE PTR [ebx-0x77],bl
  42daf6:	sub    esp,DWORD PTR [eax]
  42daf8:	cmp    DWORD PTR [eax+0x0],0x0
  42dafc:	fwait
  42dafd:	mov    DWORD PTR [eax-0xdeff7c],esi
  42db03:	xor    edi,0xffffffff
  42db06:	lods   eax,DWORD PTR ds:[esi]
  42db07:	pop    ebp
  42db08:	push   DWORD PTR [edi-0xc30100]
  42db0e:	retf   
  42db0f:	push   ds
  42db10:	add    BYTE PTR ds:0x89a08900,ch
  42db16:	mov    bh,cl
  42db18:	push   DWORD PTR [edi+edi*8]
  42db1b:	int3   
  42db1c:	ins    BYTE PTR es:[edi],dx
  42db1d:	call   FWORD PTR [ebx-0x7a]
  42db20:	adc    edi,0xffffff89
  42db23:	jmp    ebx
  42db25:	mov    DWORD PTR [ebx+0x3b],esp
  42db28:	int3   
  42db29:	inc    edx
  42db2a:	add    bh,bh
  42db2c:	mov    bh,0x83
  42db2e:	mov    esi,0x3ff70
  42db33:	add    bl,ch
  42db35:	dec    DWORD PTR [edi]
  42db37:	int    0x83
  42db39:	jnp    0x42db3a
  42db3b:	add    al,cl
  42db3d:	add    BYTE PTR [ecx],dl
  42db3f:	dec    esp
  42db40:	add    BYTE PTR [edi-0x76070077],bh
  42db46:	das    
  42db47:	daa    
  42db48:	mov    DWORD PTR [edx+0x0],ecx
  42db4b:	add    BYTE PTR [edi-0x76905401],bl
  42db51:	inc    ebx
  42db52:	inc    DWORD PTR [eax]
  42db54:	mov    esi,0xff3f2dcc
  42db59:	pop    ds
  42db5a:	add    BYTE PTR [eax],al
  42db5c:	cmp    bh,bh
  42db5e:	out    dx,al
  42db5f:	adc    edi,edi
  42db61:	pop    esi
  42db62:	dec    DWORD PTR [ecx+0x298cff9e]
  42db68:	dec    edx
  42db6a:	cmp    edi,0xffffff9b
  42db6d:	int3   
  42db6e:	scas   eax,DWORD PTR es:[edi]
  42db6f:	ret    
  42db70:	jmp    DWORD PTR [eax+eax*1-0xb000601]
  42db77:	push   ecx
  42db78:	dec    DWORD PTR [eax-0x110001]
  42db7e:	fst    QWORD PTR [edi-0x337cb67d]
  42db84:	xor    BYTE PTR [eax],al
  42db86:	fsub   st,st(5)
  42db88:	(bad)  
  42db89:	jg     0x42db8a
  42db8b:	and    DWORD PTR [edx+0x7134ff],0x60
  42db92:	int3   
  42db93:	inc    DWORD PTR [ebx-0x1]
  42db96:	pop    edx
  42db97:	xor    al,BYTE PTR [eax]
  42db99:	scas   eax,DWORD PTR es:[edi]
  42db9a:	dec    DWORD PTR [ecx-0x65320087]
  42dba0:	(bad)  
  42dba1:	jmp    0x42dba3
  42dba3:	int3   
  42dba4:	outs   dx,BYTE PTR ds:[esi]
  42dba5:	or     DWORD PTR [esi+eax*4-0xff9a77],0x3b
  42dbad:	add    BYTE PTR [ebx-0xdd0028],dh
  42dbb3:	jmp    FWORD PTR [ebp-0xc4af01]
  42dbb9:	imul   ecx,DWORD PTR [ecx-0x700c57d],0xff228349
  42dbc3:	cmp    esi,0xffffffff
  42dbc6:	mov    edi,0x75cc1f
  42dbcb:	add    esp,0x0
  42dbce:	xor    eax,0xb70026
  42dbd3:	and    DWORD PTR [ecx-0xfd5301],0x3a
  42dbda:	mov    DWORD PTR [ebx-0x13bf7cdd],eax
  42dbe0:	jmp    DWORD PTR [edi]
  42dbe2:	(bad)  
  42dbe3:	call   ebx
  42dbe5:	(bad)  
  42dbe6:	in     eax,dx
  42dbe7:	popf   
  42dbe8:	dec    DWORD PTR [edx-0x7d]
  42dbeb:	and    DWORD PTR [ebx+eax*4-0x4cff196a],0xffffffff
  42dbf3:	xor    DWORD PTR [esi+0x4fdb00],0xffffffed
  42dbfa:	(bad)  
  42dbfb:	jmp    DWORD PTR [eax-0x76bd0d00]
  42dc01:	pop    ds
  42dc02:	add    BYTE PTR [eax],al
  42dc04:	sar    edi,cl
  42dc06:	inc    ebp
  42dc07:	inc    ecx
  42dc08:	mov    DWORD PTR [edx-0x90001],ecx
  42dc0e:	retf   
  42dc0f:	inc    ebp
  42dc10:	jmp    FWORD PTR [eax+eax*1]
  42dc13:	dec    esp
  42dc15:	call   eax
  42dc17:	push   eax
  42dc18:	(bad)  
  42dc19:	jge    0x42dc1b
  42dc1b:	(bad)  
  42dc1c:	jge    0x42dc1d
  42dc1e:	add    eax,0xff5400e5
  42dc23:	mov    DWORD PTR [esi],edx
  42dc25:	(bad)  
  42dc26:	mov    eax,0xffdeff5c
  42dc2b:	call   DWORD PTR [ebx]
  42dc2d:	mov    DWORD PTR [eax],esp
  42dc2f:	arpl   WORD PTR [ebx+0x1800ff82],ax
  42dc35:	mov    edx,esi
  42dc37:	cmp    bh,0x41
  42dc3a:	dec    DWORD PTR [ecx-0x59f9ffcd]
  42dc40:	dec    edi
  42dc42:	(bad)  
  42dc43:	jmp    DWORD PTR [esi-0x1]
  42dc46:	adc    edi,DWORD PTR [eax+0xcc68ff]
  42dc4c:	test   DWORD PTR [ebx+0x6300ee11],0xff6d83ff
  42dc56:	ss test eax,0xff004eff
  42dc5c:	loopne 0x42dc5d
  42dc5e:	mov    edi,0x8332ff68
  42dc63:	push   DWORD PTR [edi]
  42dc65:	add    DWORD PTR [edx+0x2],0xffffffff
  42dc69:	outs   dx,BYTE PTR ds:[esi]
  42dc6a:	add    BYTE PTR [ebx-0x4b2bff95],al
  42dc70:	add    bh,al
  42dc72:	add    DWORD PTR [ebx-0x4158768e],0xffffff89
  42dc79:	adc    edi,edi
  42dc7b:	int3   
  42dc7c:	dec    eax
  42dc7d:	add    BYTE PTR ds:0xffa3ff06,bl
  42dc83:	add    BYTE PTR [edi+edi*8-0x7d],cl
  42dc87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc88:	jmp    DWORD PTR [ecx-0x7d]
  42dc8b:	xor    DWORD PTR [ebp-0x7cf6627d],0x3a
  42dc92:	add    bh,bh
  42dc94:	mov    esi,0xff1ff400
  42dc99:	add    DWORD PTR [eax],0x0
  42dc9c:	xchg   edi,edi
  42dc9e:	mov    ebx,0xfff483bb
  42dca3:	or     DWORD PTR [esi],0xffffffff
  42dca6:	int3   
  42dca7:	inc    BYTE PTR [ebx+0x63008371]
  42dcad:	push   DWORD PTR [ebx]
  42dcaf:	xchg   esp,eax
  42dcb0:	int3   
  42dcb1:	sub    al,0x0
  42dcb3:	call   FWORD PTR [ecx-0x1]
  42dcb6:	cmp    eax,0xff3589cd
  42dcbb:	sub    DWORD PTR [eax],0xffffffff
  42dcbe:	cmp    dl,0xff
  42dcc1:	add    BYTE PTR ss:[ecx+0x1c79cccf],cl
  42dcc8:	call   DWORD PTR [ebx]
  42dcca:	cmp    edi,0x4
  42dccd:	dec    DWORD PTR [eax-0x7c6400cf]
  42dcd3:	call   DWORD PTR [ecx+0x1068ff]
  42dcd9:	in     eax,dx
  42dcda:	(bad)  
  42dcdb:	jmp    DWORD PTR [edx-0x1]
  42dcde:	shl    ah,cl
  42dce0:	add    BYTE PTR [ebx-0xa0ff01],ch
  42dce6:	jae    0x42dc69
  42dce8:	push   DWORD PTR [edi+edi*8-0x1]
  42dcec:	cdq    
  42dced:	sub    DWORD PTR [esi-0x1c763c],0xffffff83
  42dcf4:	dec    edi
  42dcf5:	mov    esp,eax
  42dcf7:	mov    ecx,0x83ff5cff
  42dcfc:	test   BYTE PTR [ebx+0x13fff8ac],0x0
  42dd03:	int3   
  42dd04:	inc    edx
  42dd05:	sbb    esi,0x60
  42dd08:	add    ch,dh
  42dd0a:	int3   
  42dd0b:	sub    DWORD PTR [edx-0x7d],0x4f
  42dd0f:	in     al,dx
  42dd10:	sbb    DWORD PTR [ebx],0x0
  42dd13:	(bad)  
  42dd14:	cld    
  42dd15:	(bad)  
  42dd16:	fdivr  QWORD PTR [eax+eax*1-0x407cffa0]
  42dd1d:	call   eax
  42dd1f:	rol    DWORD PTR [ebx+0x35ffff5d],0xff
  42dd26:	nop
  42dd27:	cld    
  42dd28:	add    al,dl
  42dd2a:	(bad)  
  42dd2b:	call   edx
  42dd2d:	inc    DWORD PTR [edx+0x59]
  42dd30:	(bad)  
  42dd31:	cmp    al,0x0
  42dd33:	xor    edi,0x0
  42dd36:	fld    DWORD PTR ss:[ebx+0x2100ccb0]
  42dd3d:	call   FWORD PTR [esi-0x4f]
  42dd40:	sbb    DWORD PTR [ebp-0x7c5fff7d],0x46
  42dd47:	mov    cl,0xff
  42dd49:	cmp    bh,bh
  42dd4b:	push   esi
  42dd4d:	jmp    DWORD PTR [esi]
  42dd4f:	push   ecx
  42dd50:	add    DWORD PTR [eax+eax*1+0x3d0081ff],0x23
  42dd58:	dec    ebx
  42dd5a:	(bad)  
  42dd5b:	jmp    FWORD PTR [eax]
  42dd5d:	int3   
  42dd5e:	stos   BYTE PTR es:[edi],al
  42dd5f:	mov    cl,0xff
  42dd61:	pop    edi
  42dd62:	(bad)  
  42dd63:	push   DWORD PTR [edi-0xe24d01]
  42dd69:	push   eax
  42dd6a:	int3   
  42dd6b:	jmp    FWORD PTR [ebp-0x95600]
  42dd71:	mov    dh,0xff
  42dd73:	add    dl,al
  42dd75:	dec    DWORD PTR [ebx-0x76]
  42dd78:	add    DWORD PTR [edi],0x0
  42dd7b:	add    dh,al
  42dd7d:	(bad)  
  42dd7e:	mov    edx,0xffb0ff1e
  42dd83:	jmp    DWORD PTR [eax]
  42dd85:	inc    DWORD PTR [ecx+edi*8]
  42dd88:	mov    DWORD PTR [ebp+0x6800ff],ebp
  42dd8e:	pop    ecx
  42dd8f:	in     al,0x0
  42dd91:	cli    
  42dd92:	int3   
  42dd93:	add    BYTE PTR [edx-0x1],bh
  42dd96:	imul   ecx,DWORD PTR [ecx-0x7c5300],0xe14783c4
  42dda0:	(bad)  
  42dda1:	mov    ecx,0xff8f0083
  42dda6:	or     al,0x7e
  42dda8:	mov    DWORD PTR [ebx],ebx
  42ddaa:	add    bh,bh
  42ddac:	push   0x8380d500
  42ddb1:	mov    edi,edi
  42ddb3:	sbb    DWORD PTR [edi+0x2c9bff],0x68
  42ddba:	add    BYTE PTR [eax],al
  42ddbc:	sahf   
  42ddbd:	add    BYTE PTR [ebx-0x37],dl
  42ddc0:	dec    DWORD PTR [eax-0x7c370077]
  42ddc6:	retf   0xff5f
  42ddc9:	add    BYTE PTR [eax],0xff
  42ddcc:	aas    
  42ddcd:	sub    ebx,0xffffffee
  42ddd0:	int3   
  42ddd1:	add    eax,0xccc200ff
  42ddd6:	call   0xff7ade90
  42dddb:	sbb    DWORD PTR [edi-0x1],0xffffffd6
  42dddf:	mov    bh,0xcc
  42dde1:	mov    dl,0xff
  42dde3:	add    DWORD PTR [ebx+0x0],0xffffffa3
  42dde7:	(bad)  
  42dde9:	push   ss
  42ddea:	add    BYTE PTR [eax],al
  42ddec:	jmp    FWORD PTR es:[ebx]
  42ddef:	ret    0xa4cc
  42ddf2:	add    BYTE PTR [eax],al
  42ddf4:	ret    0x5d83
  42ddf7:	xchg   edx,eax
  42ddf8:	call   DWORD PTR [esi-0x7d]
  42ddfb:	inc    DWORD PTR [eax]
  42ddfd:	or     DWORD PTR [edi+ebp*2],0xffffff83
  42de01:	outs   dx,DWORD PTR ds:[esi]
  42de02:	mov    edi,edi
  42de04:	mov    ds:0xcc8516ff,eax
  42de09:	xchg   edx,eax
  42de0a:	add    BYTE PTR [ebx+0x6a8bcc35],al
  42de10:	mov    DWORD PTR [edx],eax
  42de12:	dec    DWORD PTR [ecx-0x6672ff38]
  42de18:	jmp    eax
  42de1a:	add    DWORD PTR [ebx-0x16747676],0xffffffff
  42de21:	mov    eax,0xffc2ffff
  42de26:	push   0xffafff47
  42de2b:	add    BYTE PTR [edx],dl
  42de2d:	mov    DWORD PTR [edi+0x3b],ebp
  42de30:	add    BYTE PTR [ecx-0xc60000],bh
  42de36:	jns    0x42ddd6
  42de38:	(bad)  
  42de39:	out    dx,eax
  42de3a:	cmp    edi,0xffffffe4
  42de3d:	add    ah,dl
  42de3f:	mov    cl,ah
  42de41:	test   bh,bh
  42de43:	int3   
  42de44:	aad    0xff
  42de46:	pop    ebx
  42de47:	jl     0x42de48
  42de49:	in     eax,0xff
  42de4b:	add    BYTE PTR ds:0xff823000,ch
  42de51:	push   esi
  42de52:	add    bh,bh
  42de54:	mov    ah,0xff
  42de56:	sbb    BYTE PTR [esi-0x7cffa501],al
  42de5c:	je     0x42de5e
  42de5e:	out    dx,al
  42de5f:	inc    eax
  42de60:	dec    DWORD PTR [ecx-0xe0001]
  42de66:	adc    eax,DWORD PTR ds:0xffff0b00
  42de6c:	xlat   BYTE PTR ds:[ebx]
  42de6d:	jmp    FWORD PTR [ecx]
  42de6f:	adc    DWORD PTR [eax],eax
  42de71:	lds    eax,FWORD PTR [ebx+0x3589abff]
  42de77:	enter  0xd6cc,0xff
  42de7b:	add    BYTE PTR [ebp-0x3399f77d],dh
  42de81:	dec    esi
  42de82:	(bad)  
  42de83:	call   DWORD PTR [esi-0x33262634]
  42de89:	mov    bh,0xcc
  42de8b:	mov    DWORD PTR [eax-0x34],esi
  42de8e:	mov    ch,0x6
  42de90:	jmp    FWORD PTR [ebp-0x1]
  42de93:	add    BYTE PTR [esi+0x0],cl
  42de96:	rcr    BYTE PTR [edi+edi*8],0x68
  42de9a:	(bad)  
  42de9b:	inc    ebx
  42de9d:	add    bl,bl
  42de9f:	lods   eax,DWORD PTR ds:[esi]
  42dea0:	add    BYTE PTR [edi-0x1],ah
  42dea3:	sbb    DWORD PTR [esp+ecx*8-0x97ceb94],0xffffff83
  42deab:	dec    DWORD PTR [ecx]
  42dead:	(bad)  
  42deae:	mov    eax,0xffe3ffa0
  42deb3:	add    BYTE PTR [esp+ecx*8],dl
  42deb6:	jmp    0x42def6
  42deb8:	jmp    FWORD PTR [esi+0xc983ff]
  42debe:	xchg   esi,eax
  42debf:	push   eax
  42dec0:	add    BYTE PTR [ecx],dl
  42dec2:	add    DWORD PTR [eax],0xffffff82
  42dec5:	and    DWORD PTR [esp+esi*4+0x0],0x5e
  42deca:	add    BYTE PTR [ecx+0x69ddccb6],cl
  42ded0:	int3   
  42ded1:	repnz add BYTE PTR [eax],al
  42ded4:	push   edx
  42ded5:	add    BYTE PTR [ebp+0xb1ff1b],al
  42dedb:	dec    esp
  42dedd:	add    BYTE PTR [edx],ah
  42dedf:	jg     0x42dee1
  42dee1:	mov    ecx,0x63ccff
  42dee6:	(bad)  
  42dee8:	sub    DWORD PTR [ecx+0xebcc00],0x4f
  42deef:	mov    BYTE PTR [ebx+0x7a898356],0xff
  42def6:	jg     0x42def3
  42def8:	int3   
  42def9:	and    edi,edi
  42defb:	jmp    DWORD PTR [edi]
  42defd:	int3   
  42defe:	adc    al,0x37
  42df00:	jmp    DWORD PTR [edi-0x417c01]
  42df06:	cdq    
  42df07:	(bad)  
  42df08:	(bad)  
  42df09:	cmp    edi,edi
  42df0b:	add    BYTE PTR [eax-0x9c0400],ah
  42df11:	fadd   DWORD PTR [ebx-0x63331900]
  42df17:	jns    0x42de9c
  42df19:	jecxz  0x42df1a
  42df1b:	inc    eax
  42df1d:	add    BYTE PTR [ecx-0xc67c18],dh
  42df23:	add    BYTE PTR [eax-0x1],ch
  42df26:	cld    
  42df27:	mov    bl,0xff
  42df29:	cli    
  42df2a:	cmp    edi,0x40
  42df2d:	inc    DWORD PTR [ebp-0x2c]
  42df30:	int3   
  42df31:	outs   dx,BYTE PTR ds:[esi]
  42df32:	add    bh,bh
  42df34:	int    0xff
  42df36:	into   
  42df37:	out    0x83,al
  42df39:	inc    eax
  42df3a:	add    bh,bh
  42df3c:	repz jmp ecx
  42df3f:	fld    DWORD PTR [eax]
  42df41:	dec    edx
  42df42:	(bad)  
  42df43:	jmp    DWORD PTR [edi-0x7d]
  42df46:	xor    dl,BYTE PTR [eax-0x33ffc201]
  42df4c:	add    eax,0x7164ff
  42df51:	inc    esp
  42df52:	inc    DWORD PTR [ebx-0x76f20095]
  42df58:	add    ah,al
  42df5a:	(bad)  
  42df5b:	call   DWORD PTR [edi+0x863100]
  42df61:	xchg   ebx,eax
  42df62:	(bad)  
  42df63:	jmp    FWORD PTR [eax+0x7ff1ff]
  42df69:	fadd   DWORD PTR [eax]
  42df6b:	call   esp
  42df6d:	add    BYTE PTR [edi-0x20ff3b],dl
  42df73:	int3   
  42df74:	(bad)  
  42df75:	(bad)  
  42df76:	jmp    0xcc85df30
  42df7b:	mov    DWORD PTR [ecx],ebp
  42df7d:	call   DWORD PTR [ebx+0x57]
  42df80:	mov    DWORD PTR [edi],edx
  42df82:	(bad)  
  42df83:	push   DWORD PTR [edi+edi*8+0x33]
  42df87:	mov    edi,edi
  42df89:	xchg   edi,eax
  42df8a:	add    BYTE PTR [ecx+0x4e8fffdb],cl
  42df90:	jmp    DWORD PTR [edi+edi*8-0x57ff7234]
  42df97:	je     0x42df99
  42df99:	arpl   di,di
  42df9b:	dec    DWORD PTR [ebx]
  42df9d:	inc    ebp
  42df9f:	int    0x89
  42dfa1:	dec    edi
  42dfa2:	inc    DWORD PTR [ebx-0x1862ff73]
  42dfa8:	add    BYTE PTR [eax+eax*1],ch
  42dfab:	sub    DWORD PTR [edx+0xc24aff],0xffffffbd
  42dfb2:	(bad)  
  42dfb3:	(bad)  
  42dfb4:	jmp    0x42dfb5
  42dfb6:	pusha  
  42dfb7:	ud0    ebp,DWORD PTR [esi-0x7d]
  42dfbb:	dec    DWORD PTR [edx+0xf2a500]
  42dfc1:	fdiv   st(7),st
  42dfc3:	dec    edi
  42dfc5:	inc    DWORD PTR [ecx]
  42dfc7:	xchg   esi,eax
  42dfc8:	call   DWORD PTR [ebx]
  42dfca:	(bad)  
  42dfcb:	inc    DWORD PTR [ebx-0xbe4f00]
  42dfd1:	in     eax,dx
  42dfd2:	add    BYTE PTR [ebx-0x3f4f00b0],al
  42dfd8:	add    cl,ch
  42dfda:	add    BYTE PTR [eax],al
  42dfdc:	cld    
  42dfdd:	add    BYTE PTR [ecx-0x76420009],dh
  42dfe3:	add    dl,dh
  42dfe5:	xor    DWORD PTR [ebp+0x24],0xffffffff
  42dfe9:	std    
  42dfea:	mov    edi,edi
  42dfec:	(bad)  
  42dfed:	push   DWORD PTR [edx]
  42dfef:	mov    eax,DWORD PTR [eax]
  42dff1:	cwde   
  42dff2:	inc    DWORD PTR [eax]
  42dff4:	jg     0x42dff6
  42dff6:	jecxz  0x42df89
  42dff8:	add    BYTE PTR [edx],al
  42dffa:	inc    DWORD PTR [eax]
  42dffc:	rol    BYTE PTR [eax],1
  42dffe:	retf   0xff91
  42e001:	adc    DWORD PTR [eax],eax
  42e003:	adc    DWORD PTR [edx-0x1a3c01],0xfffffff6
  42e00a:	int3   
  42e00b:	jmp    DWORD PTR [eax+0x0]
  42e00e:	loop   0x42e045
  42e010:	int3   
  42e011:	pusha  
  42e012:	add    BYTE PTR [ebx+0x76c2837b],al
  42e018:	add    BYTE PTR [eax-0x500001],bl
  42e01e:	inc    ecx
  42e01f:	loopne 0x42e020
  42e021:	jno    0x42e022
  42e023:	dec    eax
  42e025:	int3   
  42e026:	adc    ebp,DWORD PTR [eax+eax*1-0x78]
  42e02a:	(bad)  
  42e02b:	call   DWORD PTR [ebx+0x0]
  42e02e:	xor    eax,0x8375ff6d
  42e033:	jmp    DWORD PTR [ecx-0x1]
  42e036:	fiadd  WORD PTR [eax+0x0]
  42e039:	jno    0x42e03b
  42e03b:	sbb    ebx,0xffffffff
  42e03e:	iret   
  42e03f:	(bad)  
  42e040:	(bad)  
  42e041:	fiadd  WORD PTR [ebx-0x39ffb201]
  42e047:	arpl   WORD PTR [eax],ax
  42e049:	or     ah,0x83
  42e04c:	data16 int3 
  42e04e:	jp     0x42e0b0
  42e050:	add    BYTE PTR [edi+edi*8-0x77],bh
  42e054:	ja     0x42e055
  42e056:	mov    ah,0xe4
  42e058:	add    DWORD PTR [edi-0xc20000],0xffffff8b
  42e05f:	cmp    edi,edi
  42e061:	xor    eax,0xf3ff89
  42e066:	xchg   ebx,eax
  42e067:	mov    ah,0xcc
  42e069:	dec    eax
  42e06a:	(bad)  
  42e06b:	inc    DWORD PTR [edx]
  42e06d:	add    BYTE PTR ds:0xb3cc42,ah
  42e073:	mov    DWORD PTR ds:0x53c900,ebx
  42e079:	dec    ebx
  42e07a:	(bad)  
  42e07b:	jmp    FWORD PTR [eax-0x3397c101]
  42e081:	(bad)  
  42e082:	inc    DWORD PTR [ebx+0x49428354]
  42e088:	push   DWORD PTR [edi-0x1]
  42e08b:	dec    ebp
  42e08d:	mov    esi,edx
  42e08f:	loopne 0x42e05d
  42e091:	cmp    edi,0xffffffff
  42e094:	xchg   esp,ecx
  42e096:	clc    
  42e097:	mov    cs,esp
  42e099:	or     bh,bh
  42e09b:	jmp    DWORD PTR [edx+0x9282ff]
  42e0a1:	sar    edi,1
  42e0a3:	add    dh,bh
  42e0a5:	mov    DWORD PTR [ebx+ecx*2-0x76ffbb01],esi
  42e0ac:	pop    es
  42e0ad:	jmp    FWORD PTR [ecx+0x5f]
  42e0b0:	cmp    ebp,0xffffffff
  42e0b3:	(bad)  
  42e0b4:	cld    
  42e0b5:	mov    edx,ecx
  42e0b7:	mov    DWORD PTR [eax],eax
  42e0b9:	dec    edi
  42e0ba:	add    BYTE PTR [ebx-0xcfa0049],al
  42e0c0:	call   DWORD PTR [ebx-0x197677]
  42e0c6:	inc    ecx
  42e0c7:	add    DWORD PTR [eax],eax
  42e0c9:	pop    esp
  42e0ca:	(bad)  
  42e0cb:	jmp    DWORD PTR [ebx-0x1]
  42e0ce:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0d0:	add    al,al
  42e0d2:	inc    DWORD PTR [ebx+0x3969898e]
  42e0d8:	add    BYTE PTR [esi],al
  42e0da:	dec    DWORD PTR [ecx-0x85100cb]
  42e0e0:	call   DWORD PTR [ebx]
  42e0e2:	add    ah,cl
  42e0e4:	or     al,0x83
  42e0e6:	xchg   esp,eax
  42e0e7:	jecxz  0x42e0e9
  42e0e9:	jp     0x42e0ea
  42e0eb:	add    BYTE PTR [ebp-0xc16c7d],ah
  42e0f1:	mov    ebx,0xffc583ff
  42e0f6:	adc    eax,0xffccff96
  42e0fb:	int3   
  42e0fc:	pusha  
  42e0fd:	add    BYTE PTR [ebx+0x7a],ah
  42e100:	add    BYTE PTR [ecx+0x1d0000],al
  42e106:	ret    
  42e107:	xor    eax,DWORD PTR [eax]
  42e109:	in     al,0xcc
  42e10b:	mov    esi,ebp
  42e10d:	adc    DWORD PTR [ebx+0x27],0xffffff83
  42e111:	test   al,0xff
  42e113:	add    BYTE PTR ds:0xff35c2ff,dl
  42e119:	xchg   edi,edi
  42e11b:	add    BYTE PTR [eax+eax*1-0x53],dh
  42e11f:	dec    edi
  42e120:	(bad)  
  42e121:	cmp    BYTE PTR [ebx-0x76ffff01],al
  42e127:	loopne 0x42e128
  42e129:	jge    0x42e12a
  42e12b:	dec    DWORD PTR [edx]
  42e12d:	push   DWORD PTR [eax-0x3301ff6c]
  42e133:	add    BYTE PTR [edx],dh
  42e135:	add    BYTE PTR [esi+0x5f],bh
  42e138:	push   esi
  42e13a:	mov    DWORD PTR [ecx-0x5b7e7c67],ecx
  42e140:	dec    DWORD PTR [edi]
  42e142:	(bad)  
  42e143:	jmp    DWORD PTR ds:0x83f52b00
  42e149:	mov    bl,0xff
  42e14b:	push   DWORD PTR [esi]
  42e14d:	dec    DWORD PTR [ebx+0xb483a3]
  42e153:	int3   
  42e154:	mov    al,ds:0xff9bc4ff
  42e159:	sbb    bh,bh
  42e15b:	add    BYTE PTR [ebx+eax*4],ch
  42e15e:	and    eax,0xffa3
  42e163:	(bad)  
  42e164:	mov    edi,0xff60e600
  42e169:	mov    al,0xcc
  42e16b:	inc    DWORD PTR [edi-0x7d]
  42e16e:	and    DWORD PTR [ecx],ecx
  42e170:	int3   
  42e171:	xchg   DWORD PTR [ecx+0x398967ff],ecx
  42e177:	lds    eax,FWORD PTR [eax]
  42e179:	mov    bh,bh
  42e17b:	add    ch,cl
  42e17d:	mov    DWORD PTR [ebx+0xbb002e],ebp
  42e183:	inc    DWORD PTR [ebx]
  42e185:	sub    eax,0x6f
  42e188:	call   DWORD PTR ds:0xff15ff83
  42e18e:	or     ch,bl
  42e190:	int3   
  42e191:	pop    esi
  42e192:	mov    edi,edi
  42e194:	pop    ebp
  42e195:	add    BYTE PTR [ebx+0x2a],al
  42e198:	cmp    DWORD PTR [esi],0xffffffff
  42e19b:	mov    DWORD PTR [ebx],esi
  42e19d:	sbb    DWORD PTR [ecx-0x62],0xffffffff
  42e1a1:	pop    esp
  42e1a2:	(bad)  
  42e1a3:	dec    DWORD PTR [edx]
  42e1a5:	add    BYTE PTR [eax],ch
  42e1a7:	mov    ebp,0xfffff489
  42e1ac:	jmp    0x42e1ad
  42e1ae:	add    ch,BYTE PTR [ebx]
  42e1b0:	add    BYTE PTR [esi-0x1],al
  42e1b3:	int3   
  42e1b4:	cmp    al,0x0
  42e1b6:	pop    edi
  42e1b7:	js     0x42e1b9
  42e1b9:	in     eax,0xff
  42e1bb:	call   DWORD PTR [esi-0x7d]
  42e1be:	inc    eax
  42e1bf:	xchg   ecx,eax
  42e1c0:	add    BYTE PTR [ebx-0x1],cl
  42e1c3:	jmp    FWORD PTR [esi]
  42e1c5:	adc    edi,0xffffff88
  42e1c8:	jmp    FWORD PTR ds:0xffbc83cc
  42e1ce:	add    eax,0x8943ffeb
  42e1d3:	push   DWORD PTR [edi+edi*8-0x58]
  42e1d7:	lock mov DWORD PTR [edi-0x77],ecx
  42e1db:	add    ah,cl
  42e1dd:	add    bl,al
  42e1df:	jmp    0xff0f:0xff5bff
  42e1e6:	bound  edi,QWORD PTR [edi+edi*8]
  42e1e9:	idiv   edi
  42e1eb:	add    bl,ah
  42e1ed:	add    esi,0x51
  42e1f0:	int3   
  42e1f1:	xor    bh,bh
  42e1f3:	add    BYTE PTR [ecx+ecx*4],dh
  42e1f6:	xchg   ecx,eax
  42e1f7:	les    eax,FWORD PTR [eax]
  42e1f9:	and    edi,edi
  42e1fb:	add    BYTE PTR [ecx-0x1],al
  42e1fe:	ins    DWORD PTR es:[edi],dx
  42e1ff:	test   al,0x0
  42e201:	lods   eax,DWORD PTR ds:[esi]
  42e202:	add    bh,bh
  42e204:	call   0x7b:0xff235eff
  42e20b:	add    BYTE PTR [esi-0x34],ah
  42e20e:	ror    BYTE PTR [esi-0x7d],cl
  42e211:	or     edi,edi
  42e213:	dec    DWORD PTR [ecx-0x7c6bc901]
  42e219:	loop   0x42e21a
  42e21b:	inc    DWORD PTR [ebp-0x7d]
  42e21e:	pop    esp
  42e21f:	xor    al,0xff
  42e221:	pop    esi
  42e222:	inc    DWORD PTR [eax]
  42e224:	je     0x42e1af
  42e226:	pushf  
  42e227:	pop    ebx
  42e228:	push   ebx
  42e22a:	add    BYTE PTR [ebx+0x2de4ffc5],al
  42e230:	add    al,cl
  42e232:	(bad)  
  42e233:	(bad)  
  42e234:	(bad)  
  42e236:	sbb    al,dl
  42e238:	(bad)  
  42e239:	jl     0x42e23a
  42e23b:	int3   
  42e23c:	scas   al,BYTE PTR es:[edi]
  42e23d:	add    BYTE PTR [ecx],dl
  42e23f:	jo     0x42e240
  42e241:	out    0x89,al
  42e243:	dec    DWORD PTR ds:0xff5400ff
  42e249:	add    DWORD PTR [ebx+0x2bffddff],0xff868367
  42e253:	and    DWORD PTR [ebx+0x0],0x6e
  42e257:	call   0x142dd5c
  42e25c:	cmp    al,0x0
  42e25e:	ss pop esp
  42e260:	call   DWORD PTR [eax-0x7cd30001]
  42e266:	xchg   edx,eax
  42e267:	fild   DWORD PTR [ebx-0x6a007c4c]
  42e26d:	jmp    DWORD PTR [edi-0x3385ff43]
  42e273:	add    al,bh
  42e275:	inc    edx
  42e277:	pop    esi
  42e278:	dec    DWORD PTR [eax-0xc0001]
  42e27e:	xchg   edi,eax
  42e27f:	inc    eax
  42e280:	push   DWORD PTR [edi]
  42e282:	cmp    edi,0x8
  42e285:	add    BYTE PTR [esi-0x33cc00f7],dh
  42e28b:	mov    DWORD PTR [eax-0xa84600],edx
  42e291:	cmp    al,BYTE PTR [ebx-0x707c2800]
  42e297:	mov    ah,0x89
  42e299:	mov    ebx,0xcc7bcc83
  42e29e:	jb     0x42e2c5
  42e2a0:	adc    DWORD PTR [edi+edi*8-0x10ff9b01],0x12
  42e2a8:	add    BYTE PTR [ecx-0x77],bl
  42e2ab:	add    BYTE PTR [eax+0xf9889],dl
  42e2b1:	cdq    
  42e2b2:	dec    DWORD PTR [ecx-0x3951ff94]
  42e2b8:	adc    DWORD PTR [edi-0x500077],0xffffffc8
  42e2bf:	xchg   edi,edi
  42e2c1:	in     al,0x0
  42e2c3:	(bad)  
  42e2c4:	mov    ebp,0xff45ffff
  42e2c9:	push   ss
  42e2ca:	add    bh,bh
  42e2cc:	jmp    0xffc0f85a
  42e2d1:	test   edi,edi
  42e2d3:	int3   
  42e2d4:	add    al,BYTE PTR [eax]
  42e2d6:	ret    0xffce
  42e2d9:	fadd   QWORD PTR [eax]
  42e2db:	(bad)  
  42e2dc:	jmp    0x895d6dad
  42e2e1:	js     0x42e2e2
  42e2e3:	(bad)  
  42e2e4:	fiadd  WORD PTR [eax]
  42e2e6:	jle    0x42e26e
  42e2e8:	int3   
  42e2e9:	dec    ebx
  42e2ea:	(bad)  
  42e2eb:	call   ebp
  42e2ed:	int3   
  42e2ee:	mov    al,BYTE PTR [ebx-0x7d]
  42e2f1:	into   
  42e2f2:	inc    DWORD PTR [eax]
  42e2f4:	and    edi,edi
  42e2f6:	retf   
  42e2f7:	mov    eax,0xccff5d89
  42e2fc:	sbb    bh,bh
  42e2fe:	push   0x838357
  42e303:	add    BYTE PTR [edx-0x34],bl
  42e306:	fimul  WORD PTR [edx-0x6234]
  42e30c:	dec    ebp
  42e30d:	(bad)  
  42e30e:	mov    ebx,0xff3d8943
  42e313:	add    BYTE PTR [edi+edi*8],al
  42e316:	out    0xa3,al
  42e318:	call   FWORD PTR [esi+0x570083]
  42e31e:	mov    bh,0xd6
  42e320:	jmp    ecx
  42e322:	(bad)  
  42e323:	jmp    ebx
  42e325:	int3   
  42e326:	sub    edx,esp
  42e328:	(bad)  
  42e329:	fdiv   st(7),st
  42e32b:	mov    DWORD PTR [edi-0x77],eax
  42e32e:	jecxz  0x42e3a2
  42e330:	sbb    DWORD PTR [edi+edi*8-0x1],0xffffffa6
  42e335:	push   DWORD PTR [eax]
  42e337:	scas   eax,DWORD PTR es:[edi]
  42e338:	call   DWORD PTR [eax+eax*1-0x1]
  42e33c:	xor    DWORD PTR [eax],eax
  42e33e:	adc    al,BYTE PTR [edi+0x0]
  42e341:	js     0x42e343
  42e343:	add    BYTE PTR [edi+0x0],dl
  42e346:	ss into 
  42e348:	mov    DWORD PTR [edx],ecx
  42e34a:	(bad)  
  42e34b:	inc    DWORD PTR [edi+0x38b9ff]
  42e351:	aam    0x83
  42e353:	push   DWORD PTR [eax-0x1]
  42e356:	jl     0x42e333
  42e358:	dec    DWORD PTR ds:0x8316ff00
  42e35e:	iret   
  42e35f:	fld    DWORD PTR [eax]
  42e361:	dec    ebp
  42e362:	dec    esp
  42e364:	loope  0x42e366
  42e366:	cdq    
  42e367:	inc    eax
  42e368:	call   DWORD PTR ds:0x835283ff
  42e36e:	sbb    BYTE PTR [edx-0xffab01],0xdb
  42e375:	add    BYTE PTR [esi+eiz*4-0xff2f77],ah
  42e37c:	aad    0x0
  42e37e:	mov    esi,0xafff9c
  42e383:	call   DWORD PTR [eax]
  42e385:	call   FWORD PTR [ecx]
  42e387:	cld    
  42e388:	jmp    FWORD PTR [ecx+0x0]
  42e38b:	jmp    FWORD PTR [ebx-0x7ce3347d]
  42e391:	in     eax,0x83
  42e393:	inc    edi
  42e395:	dec    DWORD PTR ds:0xff7000ca
  42e39b:	add    BYTE PTR [edx],dl
  42e39d:	int3   
  42e39e:	jb     0x42e35e
  42e3a0:	sub    DWORD PTR [ebp-0x1],0xffffffff
  42e3a4:	daa    
  42e3a5:	jmp    DWORD PTR [ebx+eiz*4]
  42e3a8:	add    dl,dh
  42e3aa:	(bad)  
  42e3ab:	call   FWORD PTR [ecx+0x18c5ff]
  42e3b1:	js     0x42e336
  42e3b3:	mov    DWORD PTR [ebx],eax
  42e3b5:	call   DWORD PTR [ecx]
  42e3b7:	iret   
  42e3b8:	jmp    DWORD PTR [edx]
  42e3ba:	(bad)  
  42e3bb:	call   DWORD PTR [ebx+eax*4-0x54]
  42e3bf:	jp     0x42e3c0
  42e3c1:	inc    edi
  42e3c2:	(bad)  
  42e3c3:	inc    DWORD PTR [edx]
  42e3c5:	add    dl,dl
  42e3c7:	push   ebx
  42e3c8:	add    BYTE PTR [ebx+0x9c0089],dh
  42e3ce:	and    DWORD PTR ds:0x83ffddff,ebx
  42e3d4:	adc    bh,bh
  42e3d6:	and    DWORD PTR [ebp-0x77],esp
  42e3d9:	fcmovne st,st(4)
  42e3db:	add    bl,ch
  42e3dd:	add    BYTE PTR [ecx],ah
  42e3df:	cmp    al,0xcc
  42e3e1:	outs   dx,BYTE PTR ds:[esi]
  42e3e2:	inc    DWORD PTR [eax]
  42e3e4:	mov    esi,0xffdb60ff
  42e3e9:	enter  0xcc83,0xc2
  42e3ed:	(bad)  
  42e3ee:	out    dx,eax
  42e3ef:	fld    QWORD PTR [eax]
  42e3f1:	addr16 (bad) 
  42e3f3:	inc    DWORD PTR [esi-0x7c85727d]
  42e3f9:	fild   DWORD PTR [eax]
  42e3fb:	call   FWORD PTR [ecx-0x3c7001]
  42e401:	add    BYTE PTR [eax],al
  42e403:	and    DWORD PTR [ebp+0xfef900],0xffffffdf
  42e40a:	add    bh,bh
  42e40c:	jae    0x42e40d
  42e40e:	sbb    eax,0xa3839b
  42e413:	dec    DWORD PTR [edx-0x3cdb01]
  42e419:	je     0x42e41a
  42e41b:	add    BYTE PTR [ebp-0x34],bh
  42e41e:	mov    edx,0x3f00db
  42e423:	(bad)  
  42e424:	fld    QWORD PTR [ebx-0x16ff8829]
  42e42a:	(bad)  
  42e42b:	push   esi
  42e42d:	int3   
  42e42e:	call   0xbf00:0xccf3835c
  42e435:	add    BYTE PTR [ecx+ecx*1],dl
  42e438:	call   FWORD PTR [ebx-0x1]
  42e43b:	sbb    DWORD PTR [ebx],0xffffffff
  42e43e:	mov    ds:0xff58cca5,eax
  42e443:	mov    DWORD PTR [ebx-0x189c01],esi
  42e449:	jb     0x42e417
  42e44b:	add    BYTE PTR [ecx-0x1],ah
  42e44e:	in     eax,0x2b
  42e450:	add    dh,dh
  42e452:	(bad)  
  42e453:	(bad)  
  42e454:	in     al,dx
  42e455:	add    BYTE PTR [ecx+edx*2-0x34],bl
  42e459:	xchg   esp,eax
  42e45a:	(bad)  
  42e45b:	dec    DWORD PTR [esi-0x77]
  42e45e:	pop    es
  42e45f:	ret    0xaeff
  42e462:	add    BYTE PTR [eax],al
  42e464:	stos   DWORD PTR es:[edi],eax
  42e465:	sub    DWORD PTR [ebx+0x5],0x0
  42e469:	adc    DWORD PTR [ecx-0x2d336801],ecx
  42e46f:	sbb    ah,cl
  42e471:	arpl   WORD PTR [ebx+0x589f283],ax
  42e477:	mov    bh,0x89
  42e479:	push   ebx
  42e47a:	add    ah,cl
  42e47c:	mov    al,ds:0xfb60ff
  42e481:	mov    ecx,esp
  42e483:	jmp    FWORD PTR [edi]
  42e485:	add    BYTE PTR [eax],ah
  42e487:	adc    edi,edi
  42e489:	xchg   ebp,eax
  42e48a:	cmp    edi,0x19
  42e48d:	int3   
  42e48e:	dec    edi
  42e48f:	sahf   
  42e490:	int3   
  42e491:	fs add bh,bh
  42e494:	jg     0x42e495
  42e496:	in     eax,dx
  42e497:	add    bh,bh
  42e499:	xor    DWORD PTR [eax],eax
  42e49b:	add    BYTE PTR [edi+edi*8],dh
  42e49e:	cmp    BYTE PTR [ebx-0x497d],dl
  42e4a4:	dec    ecx
  42e4a5:	mov    DWORD PTR [ebx],edi
  42e4a7:	mov    cl,0x83
  42e4a9:	jecxz  0x42e4ab
  42e4ab:	add    BYTE PTR [ebx],bh
  42e4ad:	add    BYTE PTR [edx+ebx*1],ch
  42e4b0:	jmp    DWORD PTR [ebp-0x76bc3301]
  42e4b6:	xchg   edi,eax
  42e4b7:	add    DWORD PTR [eax],0xb989ff74
  42e4bd:	add    BYTE PTR [edi-0x5300fd],ah
  42e4c3:	(bad)  
  42e4c4:	jge    0x42e4c5
  42e4c6:	call   0x64ff:0xff050046
  42e4cd:	xor    DWORD PTR [ebp-0x33],0xffffffff
  42e4d1:	ja     0x42e4d2
  42e4d3:	call   ecx
  42e4d5:	(bad)  
  42e4d6:	out    dx,al
  42e4d7:	cmc    
  42e4d8:	int3   
  42e4d9:	add    BYTE PTR [eax],0x89
  42e4dc:	sbb    al,0xff
  42e4de:	pop    ebx
  42e4df:	out    0x0,eax
  42e4e1:	or     eax,0xfff783ff
  42e4e6:	or     al,0xc3
  42e4e8:	mov    DWORD PTR [edi-0xdb3301],ebp
  42e4ee:	cmp    ch,bh
  42e4f0:	(bad)  
  42e4f1:	jmp    0x3e3f6
  42e4f6:	xor    eax,0x20007a
  42e4fb:	mov    DWORD PTR [ebx+0x7d82ff],edx
  42e501:	sbb    edi,edi
  42e503:	call   FWORD PTR [edx-0x33672e7d]
  42e509:	jb     0x42e50a
  42e50b:	inc    DWORD PTR ds:0x8332e783
  42e511:	in     al,dx
  42e512:	and    al,0x55
  42e514:	push   esi
  42e515:	push   0xa0
  42e51a:	push   0x42
  42e51c:	call   DWORD PTR ds:0x44400c
  42e522:	mov    edx,DWORD PTR ds:0x447068
  42e528:	mov    ebp,eax
  42e52a:	mov    eax,ds:0x447d00
  42e52f:	add    eax,0x1e904
  42e534:	mov    esi,0x59
  42e539:	lea    esp,[esp+0x0]
  42e540:	movzx  ecx,WORD PTR [edx+0x4]
  42e544:	movzx  edx,WORD PTR [edx+0x1]
  42e548:	shl    ecx,0x10
  42e54b:	add    ecx,edx
  42e54d:	mov    DWORD PTR ds:0x447cf0,ecx
  42e553:	mov    edx,0xba0bf63b
  42e558:	sub    edx,DWORD PTR ds:0x447cfc
  42e55e:	add    eax,0x14
  42e561:	xor    edx,ecx
  42e563:	mov    DWORD PTR [eax-0x14],edx
  42e566:	mov    edx,DWORD PTR ds:0x447068
  42e56c:	add    edx,0x8
  42e56f:	mov    DWORD PTR ds:0x447068,edx
  42e575:	movzx  ecx,WORD PTR [edx+0x4]
  42e579:	movzx  edx,WORD PTR [edx+0x1]
  42e57d:	shl    ecx,0x10
  42e580:	add    ecx,edx
  42e582:	mov    DWORD PTR ds:0x447cf0,ecx
  42e588:	mov    edx,0xba0bf63b
  42e58d:	sub    edx,DWORD PTR ds:0x447cfc
  42e593:	xor    edx,ecx
  42e595:	mov    DWORD PTR [eax-0x10],edx
  42e598:	mov    edx,DWORD PTR ds:0x447068
  42e59e:	add    edx,0x8
  42e5a1:	mov    DWORD PTR ds:0x447068,edx
  42e5a7:	movzx  ecx,WORD PTR [edx+0x4]
  42e5ab:	movzx  edx,WORD PTR [edx+0x1]
  42e5af:	shl    ecx,0x10
  42e5b2:	add    ecx,edx
  42e5b4:	mov    DWORD PTR ds:0x447cf0,ecx
  42e5ba:	mov    edx,0xba0bf63b
  42e5bf:	sub    edx,DWORD PTR ds:0x447cfc
  42e5c5:	xor    edx,ecx
  42e5c7:	mov    DWORD PTR [eax-0xc],edx
  42e5ca:	mov    edx,DWORD PTR ds:0x447068
  42e5d0:	add    edx,0x8
  42e5d3:	mov    DWORD PTR ds:0x447068,edx
  42e5d9:	movzx  ecx,WORD PTR [edx+0x4]
  42e5dd:	movzx  edx,WORD PTR [edx+0x1]
  42e5e1:	shl    ecx,0x10
  42e5e4:	add    ecx,edx
  42e5e6:	mov    DWORD PTR ds:0x447cf0,ecx
  42e5ec:	mov    edx,0xba0bf63b
  42e5f1:	sub    edx,DWORD PTR ds:0x447cfc
  42e5f7:	xor    edx,ecx
  42e5f9:	mov    DWORD PTR [eax-0x8],edx
  42e5fc:	mov    edx,DWORD PTR ds:0x447068
  42e602:	add    edx,0x8
  42e605:	mov    DWORD PTR ds:0x447068,edx
  42e60b:	movzx  ecx,WORD PTR [edx+0x4]
  42e60f:	movzx  edx,WORD PTR [edx+0x1]
  42e613:	shl    ecx,0x10
  42e616:	add    ecx,edx
  42e618:	mov    edx,0xba0bf63b
  42e61d:	sub    edx,DWORD PTR ds:0x447cfc
  42e623:	mov    DWORD PTR ds:0x447cf0,ecx
  42e629:	xor    edx,ecx
  42e62b:	mov    DWORD PTR [eax-0x4],edx
  42e62e:	mov    edx,DWORD PTR ds:0x447068
  42e634:	add    edx,0x8
  42e637:	dec    esi
  42e638:	mov    DWORD PTR ds:0x447068,edx
  42e63e:	jne    0x42e540
  42e644:	mov    esi,DWORD PTR ds:0x447d00
  42e64a:	mov    ecx,DWORD PTR ds:0x44706c
  42e650:	push   ebx
  42e651:	mov    ebx,DWORD PTR ds:0x444024
  42e657:	push   edi
  42e658:	add    esi,0x1eff8
  42e65e:	mov    edi,0x56
  42e663:	movzx  eax,WORD PTR [ecx+0x5]
  42e667:	movzx  edx,BYTE PTR [ecx+0x3]
  42e66b:	movzx  ecx,BYTE PTR [ecx]
  42e66e:	shl    eax,0x8
  42e671:	add    eax,edx
  42e673:	mov    edx,DWORD PTR ds:0x447cfc
  42e679:	shl    eax,0x8
  42e67c:	add    eax,ecx
  42e67e:	mov    ds:0x447cf0,eax
  42e683:	add    edx,0xef191fda
  42e689:	xor    edx,eax
  42e68b:	mov    DWORD PTR [esi],edx
  42e68d:	mov    eax,ds:0x44706c
  42e692:	movzx  ecx,WORD PTR [eax+0xc]
  42e696:	movzx  edx,BYTE PTR [eax+0xa]
  42e69a:	movzx  eax,BYTE PTR [eax+0x8]
  42e69e:	shl    ecx,0x8
  42e6a1:	add    ecx,edx
  42e6a3:	shl    ecx,0x8
  42e6a6:	add    ecx,eax
  42e6a8:	mov    DWORD PTR ds:0x447cf0,ecx
  42e6ae:	lea    ecx,[esp+0x10]
  42e6b2:	push   ecx
  42e6b3:	call   ebx
  42e6b5:	mov    edx,0xef211fe2
  42e6ba:	sub    edx,DWORD PTR ds:0x447cfc
  42e6c0:	add    esi,0x8
  42e6c3:	xor    edx,DWORD PTR ds:0x447cf0
  42e6c9:	mov    DWORD PTR [esi-0x4],edx
  42e6cc:	mov    ecx,DWORD PTR ds:0x44706c
  42e6d2:	add    ecx,0x10
  42e6d5:	dec    edi
  42e6d6:	mov    DWORD PTR ds:0x44706c,ecx
  42e6dc:	jne    0x42e663
  42e6de:	pop    edi
  42e6df:	pop    ebx
  42e6e0:	test   ebp,ebp
  42e6e2:	je     0x42e6eb
  42e6e4:	push   ebp
  42e6e5:	call   DWORD PTR ds:0x444018
  42e6eb:	pop    esi
  42e6ec:	pop    ebp
  42e6ed:	add    esp,0x24
  42e6f0:	ret    
  42e6f1:	int3   
  42e6f2:	int3   
  42e6f3:	int3   
  42e6f4:	int3   
  42e6f5:	int3   
  42e6f6:	int3   
  42e6f7:	int3   
  42e6f8:	int3   
  42e6f9:	int3   
  42e6fa:	int3   
  42e6fb:	int3   
  42e6fc:	int3   
  42e6fd:	int3   
  42e6fe:	int3   
  42e6ff:	int3   
  42e700:	pusha  
  42e701:	in     eax,dx
  42e702:	xor    ecx,DWORD PTR [edx-0x1]
  42e705:	(bad)  
  42e706:	inc    ecx
  42e708:	je     0x42e6d6
  42e70a:	adc    eax,DWORD PTR [eax]
  42e70c:	(bad)  
  42e70d:	jmp    ebp
  42e70f:	(bad)  
  42e710:	jnp    0x42e6d5
  42e712:	sub    DWORD PTR [esi],esi
  42e714:	add    BYTE PTR [eax],al
  42e716:	dec    DWORD PTR [eax-0x7cc27c97]
  42e71c:	inc    DWORD PTR [eax]
  42e71e:	or     BYTE PTR [eax],al
  42e720:	jne    0x42e6e9
  42e722:	out    0x61,eax
  42e724:	mov    DWORD PTR [eax],eax
  42e726:	call   DWORD PTR [ebx+eiz*1-0x7cffa177]
  42e72d:	jmp    DWORD PTR [edx-0x1]
  42e730:	test   BYTE PTR gs:[eax],0x58
  42e734:	inc    DWORD PTR [eax]
  42e736:	jmp    FWORD PTR [edx+0xebff73]
  42e73c:	add    BYTE PTR [eax],al
  42e73e:	xor    eax,0x36b521ff
  42e743:	mov    edi,0x3c0000ff
  42e748:	addr16 inc ebp
  42e74b:	add    bh,bh
  42e74d:	add    BYTE PTR [eax+0x2a0f16cc],al
  42e753:	pop    es
  42e754:	cmp    edi,0xffffffff
  42e757:	cli    
  42e758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e759:	call   DWORD PTR [ebx]
  42e75b:	inc    DWORD PTR [ebx-0x7bff5b7d]
  42e761:	jmp    0x1424093
  42e766:	dec    DWORD PTR [edx+0xbd8914]
  42e76c:	add    ah,cl
  42e76e:	mov    ah,0xff
  42e770:	aad    0xad
  42e772:	(bad)  
  42e773:	jns    0x42e6f8
  42e775:	dec    DWORD PTR [ecx-0x500af31]
  42e77b:	int3   
  42e77c:	add    bh,bh
  42e77e:	jne    0x42e77f
  42e780:	adc    edx,DWORD PTR [eax+esi*4+0x1b]
  42e784:	inc    DWORD PTR [eax]
  42e786:	add    ah,cl
  42e788:	iret   
  42e789:	dec    DWORD PTR [eax+eax*1]
  42e78c:	int3   
  42e78d:	add    dl,ch
  42e78f:	int3   
  42e790:	mov    edx,0xffdbd83f
  42e795:	inc    DWORD PTR [eax]
  42e797:	jb     0x42e79c
  42e799:	dec    DWORD PTR [ecx]
  42e79b:	(bad)  
  42e79c:	dec    esp
  42e79e:	call   0xff6f:0xaf9c4bff
  42e7a5:	add    BYTE PTR [ebx+0x45cca620],al
  42e7ab:	mov    edi,edi
  42e7ad:	add    BYTE PTR [edx-0x1],al
  42e7b0:	mov    dh,0x2e
  42e7b2:	mov    ds:0xffff83c9,al
  42e7b7:	xor    DWORD PTR [eax-0x3000],ebp
  42e7bd:	add    BYTE PTR [edx+0xf452300],bl
  42e7c3:	mov    dh,0xff
  42e7c5:	add    DWORD PTR [ebx-0x22330160],0xffffff83
  42e7cc:	(bad)  
  42e7cd:	jmp    ebp
  42e7cf:	add    BYTE PTR [edi],bl
  42e7d1:	push   cs
  42e7d2:	jae    0x42e79f
  42e7d4:	or     esp,0x0
  42e7d7:	lahf   
  42e7d8:	icebp  
  42e7d9:	inc    DWORD PTR [edi+edi*8]
  42e7dc:	(bad)  
  42e7dd:	call   DWORD PTR [ebp+0x653b3ff]
  42e7e3:	pop    esp
  42e7e4:	(bad)  
  42e7e5:	(bad)  
  42e7e6:	inc    edi
  42e7e8:	jb     0x42e7e9
  42e7ea:	fxch   st(4)
  42e7ec:	inc    DWORD PTR [ebx+0x7172ff6f]
  42e7f2:	jp     0x42e777
  42e7f4:	add    DWORD PTR [eax],0xffffffff
  42e7f7:	(bad)  
  42e7f8:	int    0x0
  42e7fa:	xchg   ebx,eax
  42e7fb:	(bad)  
  42e7fc:	dec    DWORD PTR [ecx-0x3e1b003d]
  42e802:	imul   eax,DWORD PTR [eax+0x3789cc89],0xffffff96
  42e809:	and    esi,0x0
  42e80c:	inc    DWORD PTR [eax]
  42e80e:	mov    al,BYTE PTR [eax]
  42e810:	icebp  
  42e811:	sbb    dh,BYTE PTR [edi+0x4c]
  42e814:	inc    DWORD PTR [eax]
  42e816:	call   FWORD PTR [ecx+ecx*1-0x3001]
  42e81d:	int3   
  42e81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e81f:	add    bl,bh
  42e821:	les    edx,FWORD PTR [eax-0x7c33c1]
  42e827:	aas    
  42e828:	retf   
  42e829:	push   DWORD PTR [ebp-0x1]
  42e82c:	(bad)  
  42e82d:	call   FWORD PTR [ecx+ecx*4+0x69]
  42e831:	lahf   
  42e832:	out    0x0,ax
  42e835:	add    BYTE PTR [eax],al
  42e837:	int3   
  42e838:	jno    0x42e83a
  42e83a:	mov    bl,0xff
  42e83c:	inc    DWORD PTR [ebx+0x57b0ff2d]
  42e842:	jecxz  0x42e84f
  42e844:	(bad)  
  42e845:	(bad)  
  42e846:	(bad)  
  42e847:	js     0x42e881
  42e849:	add    dl,dl
  42e84b:	(bad)  
  42e84c:	(bad)  
  42e84d:	(bad)  
  42e84e:	dec    esp
  42e850:	and    edi,ebx
  42e852:	aam    0xb7
  42e854:	int3   
  42e855:	add    BYTE PTR [ecx+0x1dff6653],cl
  42e85b:	inc    DWORD PTR [eax]
  42e85d:	add    BYTE PTR [esi-0x7d],al
  42e860:	add    ebx,0xff890fef
  42e866:	int3   
  42e867:	xor    BYTE PTR [edi+0x0],dh
  42e86a:	int3   
  42e86b:	int3   
  42e86c:	(bad)  
  42e86d:	dec    DWORD PTR [edi+edi*8+0x5a]
  42e871:	imul   ecx,ebx,0xff0000c1
  42e877:	xor    DWORD PTR [eax+eax*1],ebp
  42e87a:	add    DWORD PTR [ebx-0xc00100],eax
  42e880:	test   DWORD PTR [edx],ebx
  42e882:	out    0x9d,eax
  42e884:	add    BYTE PTR [ebx+0x315cc],al
  42e88a:	mov    ecx,0xfb89ffcc
  42e88f:	(bad)  
  42e890:	mov    ebp,0x41bf0d
  42e895:	add    bh,bh
  42e897:	ss jno 0x42e899
  42e89a:	inc    BYTE PTR [eax]
  42e89c:	inc    DWORD PTR [eax]
  42e89e:	pop    eax
  42e89f:	inc    DWORD PTR [eax]
  42e8a1:	icebp  
  42e8a2:	push   esi
  42e8a3:	jmp    0x77:0xea00ccff
  42e8aa:	sti    
  42e8ab:	add    ah,cl
  42e8ad:	(bad)  
  42e8ae:	call   0x36342fb2
  42e8b3:	push   ss
  42e8b4:	(bad)  
  42e8b5:	(bad)  
  42e8b6:	call   DWORD PTR [eax]
  42e8b8:	add    BYTE PTR [ecx-0x7cc6],cl
  42e8be:	call   DWORD PTR fs:[edi+esi*4-0x330065be]
  42e8c6:	add    BYTE PTR [edi-0x3a],dl
  42e8c9:	int3   
  42e8ca:	inc    esi
  42e8cb:	(bad)  
  42e8cc:	(bad)  
  42e8cd:	(bad)  
  42e8ce:	std    
  42e8cf:	adc    DWORD PTR [edi],0xffffffe0
  42e8d2:	and    ebx,DWORD PTR [esi+0x57008383]
  42e8d8:	jle    0x42e85d
  42e8da:	test   al,0xff
  42e8dc:	(bad)  
  42e8dd:	dec    edx
  42e8df:	dec    ecx
  42e8e1:	inc    ecx
  42e8e2:	xor    BYTE PTR [esi-0x77],ch
  42e8e5:	(bad)  
  42e8e6:	jmp    FWORD PTR [edi+eax*1-0x7600bd01]
  42e8ed:	add    BYTE PTR [eax],dh
  42e8ef:	add    dl,dl
  42e8f1:	icebp  
  42e8f2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42e8f4:	mov    edi,edi
  42e8f6:	dec    DWORD PTR [ebp-0xa4003d]
  42e8fc:	(bad)  
  42e8fd:	dec    DWORD PTR [ecx+0x6e379f83]
  42e903:	mov    ds:0x23890083,al
  42e908:	jbe    0x42e909
  42e90a:	lods   eax,DWORD PTR ds:[esi]
  42e90b:	dec    DWORD PTR [ecx-0xdff9901]
  42e911:	jmp    0x42e961
  42e913:	data16 add ah,cl
  42e916:	(bad)  
  42e917:	cmp    DWORD PTR [ebx-0x7d],esi
  42e91a:	aas    
  42e91b:	dec    esp
  42e91d:	int3   
  42e91e:	aad    0xff
  42e920:	mov    ecx,0x897998b1
  42e925:	(bad)  
  42e926:	dec    DWORD PTR [ecx]
  42e928:	loope  0x42e929
  42e92a:	ret    
  42e92b:	cmp    edi,0x0
  42e92e:	pushf  
  42e92f:	inc    ebx
  42e931:	lods   al,BYTE PTR ds:[esi]
  42e932:	cmp    DWORD PTR [eax-0x1],edx
  42e935:	dec    esp
  42e937:	ret    
  42e938:	sahf   
  42e939:	cmp    DWORD PTR [edx],0xffffffcc
  42e93c:	add    bh,bh
  42e93e:	adc    eax,0x768848ff
  42e943:	pop    es
  42e944:	int3   
  42e945:	add    BYTE PTR [eax],al
  42e947:	xor    BYTE PTR [edi],ah
  42e949:	cmp    DWORD PTR [eax+eax*1],0xffffff89
  42e94d:	push   DWORD PTR [ebp-0x1]
  42e950:	mov    dh,0x3c
  42e952:	or     BYTE PTR [ebx-0x67007601],dl
  42e958:	push   edi
  42e959:	dec    DWORD PTR [edi-0x1010000]
  42e95f:	add    BYTE PTR [ebp+0x1e],cl
  42e962:	dec    edi
  42e963:	inc    ebx
  42e964:	inc    DWORD PTR [ebx-0x16517d]
  42e96a:	pop    edi
  42e96b:	(bad)  
  42e96c:	(bad)  
  42e96d:	inc    DWORD PTR [esi+0xbe1e8ff]
  42e973:	and    eax,0x5bff0000
  42e978:	out    dx,eax
  42e979:	add    BYTE PTR [edx-0x68ff0100],cl
  42e97f:	and    DWORD PTR [ecx+0x23],0x6b
  42e983:	ins    BYTE PTR es:[edi],dx
  42e984:	inc    DWORD PTR [eax]
  42e986:	mov    DWORD PTR [eax+0x21],esp
  42e989:	int3   
  42e98a:	cwde   
  42e98b:	(bad)  
  42e98c:	(bad)  
  42e98d:	jmp    ecx
  42e98f:	push   DWORD PTR [edi+0xd]
  42e992:	xor    dh,cl
  42e994:	add    BYTE PTR [eax],al
  42e996:	call   FWORD PTR [ebp-0x7c66ff32]
  42e99c:	add    DWORD PTR [eax],0x4d
  42e99f:	call   FWORD PTR [ebx+0xe]
  42e9a2:	das    
  42e9a3:	push   eax
  42e9a4:	add    bh,bh
  42e9a6:	add    BYTE PTR [ebx],ch
  42e9a8:	pushf  
  42e9a9:	add    BYTE PTR [ebx+eax*4],dh
  42e9ac:	inc    DWORD PTR [eax]
  42e9ae:	aas    
  42e9af:	call   ebx
  42e9b1:	mov    gs,WORD PTR [ecx+0xcc00e3]
  42e9b7:	ror    ebx,cl
  42e9b9:	call   FWORD PTR [ebp-0x1]
  42e9bc:	add    bh,bh
  42e9be:	mov    ds:0x226f0d83,al
  42e9c3:	outs   dx,BYTE PTR ds:[esi]
  42e9c4:	int3   
  42e9c5:	add    bh,bh
  42e9c7:	and    ebp,DWORD PTR [ecx-0x76ff5100]
  42e9cd:	dec    DWORD PTR [edx-0x1]
  42e9d0:	push   cs
  42e9d1:	fs mov eax,0x830000f7
  42e9d7:	cmp    BYTE PTR [edi+edi*8],cl
  42e9da:	push   0xffffff83
  42e9dc:	mov    edi,edi
  42e9de:	cmp    eax,0xe4afc583
  42e9e3:	test   BYTE PTR [ebx+0xb400ff],al
  42e9e9:	or     DWORD PTR [edi+0x7cccff83],0xffffff83
  42e9f0:	call   0xff:0x6521d4
  42e9f7:	inc    ebp
  42e9f8:	pop    esp
  42e9f9:	call   DWORD PTR [ecx]
  42e9fb:	add    BYTE PTR [ecx+0x5effc6ff],cl
  42ea01:	mov    ch,0xbf
  42ea03:	in     al,dx
  42ea04:	add    bh,bh
  42ea06:	jmp    DWORD PTR [edx+0x6f0052]
  42ea0c:	add    bh,bh
  42ea0e:	dec    eax
  42ea0f:	add    ch,bh
  42ea11:	dec    ebx
  42ea12:	jae    0x42ea65
  42ea14:	inc    DWORD PTR [ebx-0x3a5e34]
  42ea1a:	push   es
  42ea1b:	(bad)  
  42ea1c:	(bad)  
  42ea1d:	call   esp
  42ea1f:	or     DWORD PTR [edx+0xc0ce],0xffffffff
  42ea26:	(bad)  
  42ea27:	mov    eax,0xff8eff60
  42ea2c:	add    bh,bh
  42ea2e:	cwde   
  42ea2f:	add    BYTE PTR [edx-0x56],dl
  42ea32:	in     eax,0x58
  42ea34:	int3   
  42ea35:	inc    DWORD PTR [eax]
  42ea37:	leave  
  42ea38:	jo     0x42ea39
  42ea3a:	enter  0xff,0x0
  42ea3e:	sti    
  42ea3f:	sbb    DWORD PTR [eax+0x176c4],0x0
  42ea46:	int3   
  42ea47:	dec    eax
  42ea48:	dec    edi
  42ea49:	(bad)  
  42ea4a:	jl     0x42e9cf
  42ea4c:	(bad)  
  42ea4d:	jmp    FWORD PTR [edx]
  42ea4f:	push   esp
  42ea51:	cs jno 0x42eaca
  42ea54:	add    BYTE PTR [eax],al
  42ea56:	add    bh,ch
  42ea58:	add    BYTE PTR [eax],al
  42ea5a:	inc    DWORD PTR fs:[eax]
  42ea5d:	push   DWORD PTR [edi]
  42ea5f:	add    BYTE PTR [esi+0x17],bh
  42ea62:	fist   DWORD PTR [edi+0x0]
  42ea65:	(bad)  
  42ea66:	(bad)  
  42ea67:	mov    edi,0xff9bffb5
  42ea6c:	add    DWORD PTR [eax],0x1f
  42ea6f:	jmp    DWORD PTR [eax]
  42ea71:	mov    ecx,0x83ffa96e
  42ea76:	cmp    DWORD PTR [edx+0x9100b3],0x0
  42ea7d:	jmp    edx
  42ea7f:	add    BYTE PTR [esi],ah
  42ea81:	leave  
  42ea82:	les    ebp,FWORD PTR [ebp-0x5b7d0000]
  42ea88:	lods   eax,DWORD PTR ds:[esi]
  42ea89:	add    ah,ah
  42ea8b:	add    BYTE PTR [ecx-0x49009401],cl
  42ea91:	adc    al,0x94
  42ea93:	sahf   
  42ea94:	dec    esp
  42ea96:	sbb    DWORD PTR [ebx-0x7c],0xffffff83
  42ea9a:	(bad)  
  42ea9b:	dec    DWORD PTR [ecx+0x40cc78ff]
  42eaa1:	ret    0x3088
  42eaa4:	mov    DWORD PTR [eax],eax
  42eaa6:	(bad)  
  42eaa7:	fst    QWORD PTR ds:0xff00fe00
  42eaad:	call   FWORD PTR [edx-0xa225501]
  42eab3:	call   0x9343eab7
  42eab8:	inc    ebx
  42eab9:	(bad)  
  42eaba:	in     eax,dx
  42eabb:	(bad)  
  42eabc:	(bad)  
  42eabd:	(bad)  
  42eabe:	jnp    0x42eac0
  42eac0:	ret    
  42eac1:	scas   al,BYTE PTR es:[edi]
  42eac2:	imul   esp,eax,0xffffffff
  42eac5:	add    BYTE PTR [eax],al
  42eac7:	push   ecx
  42eac8:	daa    
  42eac9:	add    BYTE PTR [esi-0x2d007601],cl
  42eacf:	add    BYTE PTR [esi+0x1e],dh
  42ead2:	fbstp  TBYTE PTR [esi-0x3c007c34]
  42ead8:	sahf   
  42ead9:	jmp    DWORD PTR ds:0x6b00ffff
  42eadf:	push   DWORD PTR [ebp-0x2a]
  42eae2:	ss int 0xff
  42eae5:	add    BYTE PTR [ebx-0x633376b1],al
  42eaeb:	int3   
  42eaec:	inc    DWORD PTR [eax]
  42eaee:	jnp    0x42eaef
  42eaf0:	int3   
  42eaf1:	jo     0x42ea91
  42eaf3:	out    dx,eax
  42eaf4:	add    bh,bh
  42eaf6:	(bad)  
  42eaf7:	jle    0x42ea93
  42eaf9:	dec    DWORD PTR [ebp+0x0]
  42eafc:	add    BYTE PTR [eax],al
  42eafe:	add    BYTE PTR [eax],al
  42eb00:	fdivr  DWORD PTR [edi+0xa]
  42eb03:	gs cmp edi,0xffffffff
  42eb07:	xchg   ebx,eax
  42eb08:	pusha  
  42eb09:	add    BYTE PTR [edx+0x76ff8389],ch
  42eb0f:	int3   
  42eb10:	(bad)  [edx]
  42eb12:	push   esi
  42eb13:	cld    
  42eb14:	inc    DWORD PTR [eax]
  42eb16:	dec    DWORD PTR [ebx+0x3a00f1]
  42eb1c:	(bad)  
  42eb1d:	dec    DWORD PTR [edx]
  42eb1f:	add    BYTE PTR [ebp-0x5f2022],dh
  42eb25:	add    bh,bh
  42eb27:	repnz cmc 
  42eb29:	jmp    DWORD PTR [ebx-0x1]
  42eb2c:	(bad)  
  42eb2d:	push   DWORD PTR [ecx]
  42eb2f:	dec    DWORD PTR [ecx]
  42eb31:	cmove  esi,DWORD PTR ds:0xecff83ff
  42eb38:	into   
  42eb39:	dec    DWORD PTR [edi]
  42eb3b:	inc    DWORD PTR [ebx-0xaff0f00]
  42eb41:	pop    edi
  42eb42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb43:	retf   0xcc
  42eb46:	(bad)  
  42eb47:	fld    DWORD PTR [edi+0x0]
  42eb4a:	das    
  42eb4b:	add    BYTE PTR [eax],al
  42eb4d:	(bad)  
  42eb4e:	aas    
  42eb4f:	mov    DWORD PTR [ebx-0x8],esi
  42eb52:	sbb    esi,eax
  42eb54:	add    bh,bh
  42eb56:	(bad)  
  42eb57:	in     al,dx
  42eb58:	repnz dec ebx
  42eb5b:	add    BYTE PTR [eax],al
  42eb5d:	dec    esi
  42eb5f:	mov    DWORD PTR [edi],edx
  42eb61:	idiv   esp
  42eb63:	pop    ebx
  42eb64:	dec    DWORD PTR [ecx-0x982701]
  42eb6a:	mov    edx,0x55ff8383
  42eb6f:	add    BYTE PTR [edi-0x61],bh
  42eb72:	sub    al,0xac
  42eb74:	add    BYTE PTR [ebx-0xeada01],al
  42eb7a:	in     al,dx
  42eb7b:	(bad)  
  42eb7c:	inc    DWORD PTR [eax]
  42eb7e:	sbb    bh,bh
  42eb80:	adc    eax,0xffa35526
  42eb85:	(bad)  
  42eb86:	inc    DWORD PTR [ecx]
  42eb88:	and    eax,DWORD PTR [eax]
  42eb8a:	xor    al,0x0
  42eb8c:	inc    DWORD PTR [ebx+0x53998311]
  42eb92:	ss xor eax,0xfb008300
  42eb98:	in     eax,0xff
  42eb9a:	and    bh,bh
  42eb9c:	(bad)  
  42eb9d:	jmp    DWORD PTR [edi+edi*8-0x1220ff01]
  42eba4:	add    BYTE PTR [ecx-0x3340f400],cl
  42ebaa:	or     BYTE PTR [eax],al
  42ebac:	int3   
  42ebad:	add    BYTE PTR [esi],ch
  42ebaf:	add    ah,bh
  42ebb1:	out    dx,al
  42ebb2:	jae    0x42ebab
  42ebb4:	cmp    edi,0xffffffcc
  42ebb7:	or     al,0xaa
  42ebb9:	add    bh,ah
  42ebbb:	int3   
  42ebbc:	or     esp,0xffffffbc
  42ebbf:	call   FWORD PTR [edi]
  42ebc1:	inc    esp
  42ebc2:	mov    edx,0xffdf
  42ebc7:	ret    0xff16
  42ebca:	repnz add bh,bh
  42ebcd:	push   DWORD PTR [edi]
  42ebcf:	jmp    ebx
  42ebd1:	das    
  42ebd2:	lea    eax,[eax+eax*1]
  42ebd5:	add    bh,bh
  42ebd7:	out    dx,eax
  42ebd8:	xchg   edx,eax
  42ebd9:	jmp    ebx
  42ebdb:	(bad)  
  42ebdc:	inc    DWORD PTR [ebx+0x5294831e]
  42ebe2:	pop    esp
  42ebe3:	push   ds
  42ebe4:	mov    DWORD PTR [ebx-0x7c5eac01],eax
  42ebea:	outs   dx,BYTE PTR ds:[esi]
  42ebeb:	inc    DWORD PTR [eax]
  42ebed:	inc    DWORD PTR [edx+0x88ba7ff]
  42ebf3:	pop    es
  42ebf4:	add    DWORD PTR [eax],0xffffff83
  42ebf7:	outs   dx,BYTE PTR ds:[esi]
  42ebf8:	xlat   BYTE PTR ds:[ebx]
  42ebf9:	add    BYTE PTR [ecx+0x6100cc00],ch
  42ebff:	(bad)  
  42ec00:	fisttp WORD PTR [esi+esi*2-0x33ff79]
  42ec07:	adc    cl,BYTE PTR [edx-0x1]
  42ec0a:	jo     0x42ec0c
  42ec0c:	dec    esp
  42ec0e:	(bad)  
  42ec10:	call   0x73c590
  42ec15:	inc    DWORD PTR [eax]
  42ec17:	mov    al,0x1c
  42ec19:	int3   
  42ec1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec1b:	inc    DWORD PTR [eax]
  42ec1d:	(bad)  
  42ec1e:	jmp    0x42ec1f
  42ec20:	push   eax
  42ec21:	leave  
  42ec22:	xchg   ebp,eax
  42ec23:	js     0x42ebf1
  42ec25:	add    bh,bh
  42ec27:	popa   
  42ec28:	test   al,0xcc
  42ec2a:	pop    esi
  42ec2b:	(bad)  
  42ec2c:	(bad)  
  42ec2d:	call   DWORD PTR [eax-0x34]
  42ec30:	adc    al,BYTE PTR [edx]
  42ec32:	mov    bh,0xc6
  42ec34:	inc    DWORD PTR [eax]
  42ec36:	int3   
  42ec37:	sahf   
  42ec38:	inc    ebp
  42ec39:	int3   
  42ec3a:	es add bh,bh
  42ec3d:	add    BYTE PTR [ecx],bl
  42ec3f:	add    BYTE PTR [esi],ch
  42ec41:	dec    esp
  42ec42:	loope  0x42ec6e
  42ec44:	add    BYTE PTR [eax],al
  42ec46:	jmp    FWORD PTR [ebx-0x8a003d]
  42ec4c:	inc    DWORD PTR [eax]
  42ec4e:	xchg   ebx,eax
  42ec4f:	int3   
  42ec50:	dec    esp
  42ec51:	dec    BYTE PTR ds:[eax]
  42ec54:	int3   
  42ec55:	add    BYTE PTR [ebx-0xe002c8d],al
  42ec5b:	dec    DWORD PTR [ecx-0x47003c7d]
  42ec61:	adc    eax,0xffff9d79
  42ec66:	add    BYTE PTR [edx-0x22],dh
  42ec69:	push   DWORD PTR ds:0x78ff00ff
  42ec6f:	call   FWORD PTR [esi+0x68]
  42ec72:	xlat   BYTE PTR ds:[ebx]
  42ec73:	repz cmp edi,0xffffff83
  42ec77:	je     0x42ec37
  42ec79:	add    BYTE PTR [eax-0x56000001],dl
  42ec7f:	cmp    DWORD PTR [ecx],0xffffffbd
  42ec82:	shr    DWORD PTR [ebx+0x4cffffcc],cl
  42ec88:	call   0x49ff:0xffccc3ff
  42ec8f:	(bad)  
  42ec90:	mov    eax,0x89670a84
  42ec95:	add    BYTE PTR [ecx-0x14004ab4],cl
  42ec9b:	add    bh,bh
  42ec9d:	dec    DWORD PTR [ebp-0x7d]
  42eca0:	test   al,0x5e
  42eca2:	in     eax,0x5f
  42eca4:	inc    DWORD PTR [eax]
  42eca6:	add    cl,cl
  42eca8:	cdq    
  42eca9:	xor    DWORD PTR [edx-0x7f33ff7d],0xffffffff
  42ecb0:	ds into 
  42ecb2:	push   es
  42ecb3:	idiv   bh
  42ecb5:	(bad)  
  42ecb6:	(bad)  
  42ecb7:	fldenv [ecx]
  42ecb9:	add    BYTE PTR [esi],ah
  42ecbb:	add    BYTE PTR [eax],al
  42ecbd:	add    dh,dh
  42ecbf:	jmp    edx
  42ecc1:	mov    ch,0x40
  42ecc3:	aaa    
  42ecc4:	add    DWORD PTR [eax],0xffffffff
  42ecc7:	pusha  
  42ecc8:	(bad)  
  42ecc9:	inc    DWORD PTR [edi+0x42ff00ff]
  42eccf:	int3   
  42ecd0:	nop
  42ecd1:	xlat   BYTE PTR ds:[ebx]
  42ecd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ecd3:	test   DWORD PTR [eax],eax
  42ecd5:	dec    DWORD PTR [ecx-0x31ff01ef]
  42ecdb:	(bad)  
  42ecdc:	dec    esp
  42ecde:	retf   
  42ecdf:	jmp    DWORD PTR [ecx+edx*2]
  42ece2:	out    0xf9,al
  42ece4:	inc    DWORD PTR [ebx-0xcbac00]
  42ecea:	loop   0x42ecec
  42ecec:	add    DWORD PTR [eax],0x23
  42ecef:	add    BYTE PTR [edx+0x265d9e],al
  42ecf5:	add    DWORD PTR [eax],0x47
  42ecf8:	(bad)  
  42ecf9:	call   DWORD PTR [ebp+0x3a838300]
  42ecff:	(bad)  
  42ed00:	out    dx,eax
  42ed01:	lahf   
  42ed02:	cwde   
  42ed03:	jo     0x42ed04
  42ed05:	(bad)  
  42ed06:	jmp    FWORD PTR [eax]
  42ed08:	adc    bh,bh
  42ed0a:	leave  
  42ed0b:	add    DWORD PTR [eax],0xffffffff
  42ed0e:	adc    edi,edi
  42ed10:	aaa    
  42ed11:	pop    ecx
  42ed12:	mov    BYTE PTR [edx-0x1],dh
  42ed15:	add    BYTE PTR [ebx+0x1189be5a],al
  42ed1b:	or     esp,0x0
  42ed1e:	or     al,0x89
  42ed20:	sbb    BYTE PTR [edx-0x17],al
  42ed23:	jecxz  0x42ed25
  42ed25:	(bad)  
  42ed26:	(bad)  
  42ed27:	jns    0x42eda3
  42ed29:	(bad)  
  42ed2a:	in     al,dx
  42ed2b:	mov    edi,edi
  42ed2d:	add    dl,dl
  42ed2f:	jmp    DWORD PTR ds:0x89250889
  42ed35:	inc    DWORD PTR [ebx-0x1bff7d41]
  42ed3b:	add    BYTE PTR [eax],al
  42ed3d:	and    DWORD PTR [eax-0x43c1a300],0xffffffe6
  42ed44:	or     esp,0xffffffff
  42ed47:	mov    al,ds:0x83fbff1a
  42ed4c:	add    bh,bh
  42ed4e:	and    cl,BYTE PTR [ecx+0x636dad72]
  42ed54:	inc    DWORD PTR [ebx-0xcdbf01]
  42ed5a:	add    DWORD PTR [eax],eax
  42ed5c:	(bad)  
  42ed5d:	call   DWORD PTR [eax+eax*1-0x12a0f245]
  42ed64:	inc    DWORD PTR [eax]
  42ed66:	int3   
  42ed67:	test   eax,0x56836a
  42ed6c:	add    bh,bh
  42ed6e:	(bad)  
  42ed70:	rcl    DWORD PTR [ecx+0xf3df],0x83
  42ed77:	xlat   BYTE PTR ds:[ebx]
  42ed78:	and    eax,DWORD PTR [eax]
  42ed7a:	push   ds
  42ed7b:	cmp    edi,0xffffff83
  42ed7e:	iret   
  42ed7f:	mov    DWORD PTR [edx],esi
  42ed81:	lahf   
  42ed82:	inc    ebx
  42ed83:	xchg   esp,eax
  42ed84:	inc    DWORD PTR [eax]
  42ed86:	dec    ebx
  42ed88:	sar    edi,1
  42ed8a:	sar    edi,cl
  42ed8c:	inc    DWORD PTR [eax]
  42ed8e:	mov    DWORD PTR [ebx-0x7bb529],eax
  42ed94:	dec    esp
  42ed96:	mov    edx,esi
  42ed98:	lods   eax,DWORD PTR ds:[esi]
  42ed99:	jmp    FWORD PTR [eax+0x5b830000]
  42ed9f:	(bad)  
  42eda0:	mov    edi,0x83d2ed2e
  42eda5:	add    BYTE PTR [ebx-0x41006261],al
  42edab:	add    DWORD PTR [eax],0x0
  42edae:	xchg   ebp,eax
  42edaf:	jmp    DWORD PTR [eax-0x7c4dc543]
  42edb5:	mov    DWORD PTR [ebx+0x63003542],eax
  42edbb:	or     esp,0x0
  42edbe:	inc    edx
  42edbf:	add    BYTE PTR [eax],bh
  42edc1:	out    0x25,al
  42edc3:	push   ebp
  42edc4:	dec    DWORD PTR [ecx+0x434700]
  42edca:	outs   dx,DWORD PTR ds:[esi]
  42edcb:	add    bh,bh
  42edcd:	add    bh,dl
  42edcf:	jmp    DWORD PTR [edx]
  42edd1:	and    ebx,ebp
  42edd3:	lahf   
  42edd4:	add    bh,bh
  42edd6:	jmp    FWORD PTR [ecx]
  42edd8:	mov    ?,edi
  42edda:	pusha  
  42eddb:	(bad)  
  42eddc:	(bad)  
  42eddd:	(bad)  
  42edde:	(bad)  
  42ede0:	push   ebp
  42ede1:	mov    ebx,0xffda52
  42ede6:	jmp    FWORD PTR [ecx-0x8]
  42ede9:	jmp    esp
  42edeb:	add    BYTE PTR [ecx-0x40009d01],cl
  42edf1:	or     DWORD PTR [ecx-0x2f],ecx
  42edf4:	mov    edi,edi
  42edf6:	add    cl,dl
  42edf8:	pop    eax
  42edf9:	int3   
  42edfa:	lods   eax,DWORD PTR ds:[esi]
  42edfb:	inc    DWORD PTR [eax]
  42edfd:	inc    DWORD PTR [esi]
  42edff:	add    BYTE PTR [ebp+0x7158f9],dl
  42ee05:	add    bh,bh
  42ee07:	in     al,dx
  42ee08:	jmp    DWORD PTR ss:[edx-0x77]
  42ee0c:	add    BYTE PTR [ebx+0x5ddbff7b],al
  42ee12:	xchg   BYTE PTR [eax+eax*1-0x22700100],dh
  42ee19:	add    ah,ch
  42ee1b:	dec    esp
  42ee1d:	add    BYTE PTR [eax-0x1],dl
  42ee20:	aas    
  42ee21:	aad    0xeb
  42ee23:	push   ebx
  42ee24:	add    BYTE PTR [ecx-0x42cc00],cl
  42ee2a:	pop    esi
  42ee2b:	(bad)  
  42ee2c:	dec    DWORD PTR [ecx-0x1289ff10]
  42ee32:	jns    0x42edc1
  42ee34:	inc    DWORD PTR [eax]
  42ee36:	mov    ecx,ecx
  42ee38:	push   ebx
  42ee39:	(bad)  
  42ee3a:	mov    eax,0xd283ffff
  42ee3f:	add    BYTE PTR [esi-0xee8128],ch
  42ee45:	cmp    edi,0x16
  42ee48:	retf   
  42ee49:	add    dh,al
  42ee4b:	dec    esp
  42ee4d:	adc    ecx,0xffffffff
  42ee50:	add    DWORD PTR [eax-0x7c00a379],eax
  42ee56:	add    BYTE PTR [esi-0x2c],cl
  42ee59:	push   DWORD PTR [edx]
  42ee5b:	(bad)  
  42ee5c:	inc    DWORD PTR [ebx-0x8ad00ff]
  42ee62:	mov    edx,DWORD PTR [esi+0x6583cc83]
  42ee68:	jb     0x42ee69
  42ee6a:	xor    eax,0x1aff00ff
  42ee6f:	push   DWORD PTR [ebx-0x33019915]
  42ee75:	mov    edi,edi
  42ee77:	sub    esp,eax
  42ee79:	add    BYTE PTR [edi],bl
  42ee7b:	add    bh,bh
  42ee7d:	and    DWORD PTR [ebx-0x1],0xffffffbb
  42ee81:	(bad)  
  42ee82:	jno    0x42ee57
  42ee84:	add    ah,cl
  42ee86:	jmp    DWORD PTR [ebx]
  42ee88:	(bad)  
  42ee8a:	(bad)  
  42ee8c:	(bad)  
  42ee8d:	dec    DWORD PTR [ebp-0x773f5301]
  42ee93:	inc    eax
  42ee94:	inc    DWORD PTR [eax]
  42ee96:	jmp    DWORD PTR [eax+0x26]
  42ee99:	jmp    FWORD PTR [eax-0x35ff0001]
  42ee9f:	call   eax
  42eea1:	cmp    DWORD PTR [edx-0x76ffffdb],ebp
  42eea7:	pop    ebp
  42eea8:	xor    al,BYTE PTR [eax]
  42eeaa:	or     edi,edi
  42eeac:	inc    DWORD PTR [eax]
  42eeae:	popa   
  42eeaf:	(bad)  
  42eeb0:	(bad)  
  42eeb1:	push   ds
  42eeb2:	or     DWORD PTR [eax-0x77],edi
  42eeb5:	add    BYTE PTR [eax],al
  42eeb7:	mov    al,0x6b
  42eeb9:	add    dl,dl
  42eebb:	(bad)  
  42eebc:	inc    DWORD PTR [eax]
  42eebe:	loope  0x42ee8c
  42eec0:	ret    
  42eec1:	pop    ecx
  42eec2:	addr16 int 0x83
  42eec5:	cmp    edi,0x7b
  42eec8:	mov    ds:0xffed83,al
  42eecd:	add    BYTE PTR [ebx],bh
  42eecf:	or     DWORD PTR [ebx+0x10],0xc
  42eed3:	ja     0x42eed5
  42eed5:	add    ah,cl
  42eed7:	sahf   
  42eed8:	add    al,BYTE PTR [eax]
  42eeda:	stos   DWORD PTR es:[edi],eax
  42eedb:	inc    DWORD PTR [eax]
  42eedd:	and    DWORD PTR [edi-0x1],0xfffffff7
  42eee1:	leave  
  42eee2:	stos   DWORD PTR es:[edi],eax
  42eee3:	das    
  42eee4:	mov    edi,edi
  42eee6:	inc    DWORD PTR [ecx]
  42eee8:	out    0x0,al
  42eeea:	push   ebp
  42eeeb:	dec    DWORD PTR [ecx+0x6affa483]
  42eef1:	aas    
  42eef2:	outs   dx,DWORD PTR ds:[esi]
  42eef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eef4:	mov    edi,edi
  42eef6:	call   DWORD PTR ds:0x7fffb
  42eefc:	inc    DWORD PTR [eax]
  42eefe:	pop    es
  42eeff:	add    BYTE PTR [esp+ebp*2-0x4],dl
  42ef03:	(bad)  
  42ef06:	add    dh,cl
  42ef08:	dec    eax
  42ef09:	add    al,cl
  42ef0b:	int3   
  42ef0c:	add    BYTE PTR [ebx-0x380ff5e],al
  42ef12:	enter  0x43,0x0
  42ef16:	adc    DWORD PTR [ebx+0x57],0xffffffff
  42ef1a:	mov    cl,0xcc
  42ef1c:	add    bh,bh
  42ef1e:	enter  0x6089,0x59
  42ef22:	xchg   esi,eax
  42ef23:	(bad)  
  42ef24:	add    BYTE PTR [eax],al
  42ef26:	adc    DWORD PTR [eax+0x6c],0xffffffff
  42ef2a:	in     al,0xff
  42ef2c:	dec    DWORD PTR [ecx+0x158cff0a]
  42ef32:	sbb    al,0x53
  42ef34:	add    ah,cl
  42ef36:	add    BYTE PTR [edi],dh
  42ef38:	cmc    
  42ef39:	int3   
  42ef3a:	test   BYTE PTR [ecx-0xd20100],0xf5
  42ef41:	cmc    
  42ef42:	xor    DWORD PTR [ebx+eax*4-0x1],ebp
  42ef46:	add    ah,al
  42ef48:	(bad)  
  42ef49:	dec    edx
  42ef4b:	(bad)  
  42ef4c:	(bad)  
  42ef4d:	push   DWORD PTR [eax-0x43122301]
  42ef53:	dec    ebx
  42ef54:	add    bh,bh
  42ef56:	adc    DWORD PTR [ecx+ebx*8-0xff4b01],0x0
  42ef5e:	and    BYTE PTR [eax],al
  42ef60:	ret    0xc12b
  42ef63:	cmp    al,0x0
  42ef65:	inc    DWORD PTR [ebx-0x26ffefd0]
  42ef6b:	add    bh,bh
  42ef6d:	int3   
  42ef6e:	xchg   ebx,eax
  42ef6f:	cmp    ecx,0x2a
  42ef72:	call   0x141efe7
  42ef77:	xor    eax,0x1dfffe
  42ef7c:	add    BYTE PTR [eax],al
  42ef7e:	imul   edi,edi,0xfffffffb
  42ef81:	xchg   ecx,esi
  42ef83:	sbb    al,0x0
  42ef85:	add    BYTE PTR [ebx-0x14008093],al
  42ef8b:	int3   
  42ef8c:	(bad)  
  42ef8d:	call   FWORD PTR [ebp+0x0]
  42ef90:	sub    eax,0xffb3df35
  42ef95:	inc    DWORD PTR [ebx-0x1dffcbbd]
  42ef9b:	(bad)  
  42ef9c:	(bad)  
  42ef9d:	jmp    FWORD PTR [edx]
  42ef9f:	and    DWORD PTR [edi+0x45],0xffffffbb
  42efa3:	add    bh,bh
  42efa5:	mov    DWORD PTR [eax],eax
  42efa7:	mov    edx,0xff94ffb7
  42efac:	(bad)  
  42efad:	dec    edi
  42efaf:	call   FWORD PTR [eax]
  42efb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efb2:	push   ebx
  42efb3:	and    esp,ecx
  42efb5:	add    BYTE PTR [ebx-0x17002bdc],al
  42efbb:	add    bh,bh
  42efbd:	(bad)  
  42efbe:	jmp    0xe91cccc3
  42efc3:	pop    eax
  42efc4:	(bad)  
  42efc5:	inc    DWORD PTR [ebx-0x5900dc50]
  42efcb:	add    ah,cl
  42efcd:	add    BYTE PTR [esi+0x0],dh
  42efd0:	mov    eax,0xff935b7d
  42efd5:	inc    DWORD PTR [eax]
  42efd7:	jno    0x42f027
  42efd9:	xor    esi,0x0
  42efdc:	(bad)  
  42efdd:	dec    DWORD PTR [ebp-0x39c2b800]
  42efe3:	and    eax,0xb383cc00
  42efe8:	xor    al,0x0
  42efea:	out    0x0,al
  42efec:	int3   
  42efed:	jmp    FWORD PTR [esi]
  42efef:	jmp    DWORD PTR [ecx-0x80]
  42eff2:	sub    edx,DWORD PTR [edi-0x73ff0100]
  42eff8:	cwde   
  42eff9:	(bad)  
  42effa:	mov    esi,0xffffff00
  42efff:	int3   
  42f000:	repnz add ecx,DWORD PTR [edx-0xb]
  42f004:	add    BYTE PTR [eax],al
  42f006:	inc    esi
  42f008:	fcmovne st,st(4)
  42f00a:	sub    edi,edi
  42f00c:	add    bh,bh
  42f00e:	sbb    eax,0xd65f3500
  42f013:	xor    eax,DWORD PTR [eax]
  42f015:	inc    DWORD PTR [ebx+0x65835825]
  42f01b:	(bad)  
  42f01c:	inc    DWORD PTR [eax]
  42f01e:	push   edx
  42f01f:	add    BYTE PTR [esp+ebx*8+0xffa154],ah
  42f026:	(bad)  
  42f027:	mov    ecx,0xff6bffa4
  42f02c:	add    bh,bh
  42f02e:	outs   dx,BYTE PTR ds:[esi]
  42f02f:	int3   
  42f030:	sub    ch,BYTE PTR [eax-0x76ff3f98]
  42f036:	and    DWORD PTR [esi+0x3c],0xffffff83
  42f03a:	push   ecx
  42f03b:	add    BYTE PTR [ebx-0x5433ae01],al
  42f041:	sbb    al,0xd4
  42f043:	xchg   ebx,eax
  42f044:	add    bh,bh
  42f046:	jmp    FWORD PTR [ebx]
  42f048:	rol    BYTE PTR [ebx+0xccec],cl
  42f04e:	mov    eax,ds:0x8fe2c683
  42f053:	push   ecx
  42f054:	mov    edi,edi
  42f056:	and    ebx,0x6
  42f059:	add    ch,ah
  42f05b:	inc    DWORD PTR [eax]
  42f05d:	mov    DWORD PTR [eax-0x1],edi
  42f060:	cli    
  42f061:	retf   0x9550
  42f064:	add    DWORD PTR [eax],0xffffffff
  42f067:	add    bl,BYTE PTR [ecx]
  42f069:	jmp    DWORD PTR [edx]
  42f06b:	add    BYTE PTR [ebx+0xf001bff],al
  42f071:	imul   eax,esi,0xffffffc1
  42f077:	pop    ebx
  42f078:	mov    cl,0xff
  42f07a:	js     0x42efff
  42f07c:	add    BYTE PTR [ecx+0x5c80ff98],cl
  42f082:	cwde   
  42f083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f084:	(bad)  
  42f085:	inc    DWORD PTR [eax]
  42f087:	test   al,0x8a
  42f089:	add    BYTE PTR [ebp+0x8ffffcc],dl
  42f08f:	mov    DWORD PTR [eax-0xaee6e5],esi
  42f095:	inc    DWORD PTR [eax]
  42f097:	ror    DWORD PTR [esi-0x1],cl
  42f09a:	and    bh,bh
  42f09c:	(bad)  
  42f09d:	call   DWORD PTR [esi+0x208dec00]
  42f0a3:	inc    ebp
  42f0a4:	add    BYTE PTR [ebx+0x7f13ff],al
  42f0aa:	mov    al,0x0
  42f0ac:	(bad)  
  42f0ad:	(bad)  
  42f0ae:	fadd   DWORD PTR [ebx-0x3e4247]
  42f0b4:	inc    DWORD PTR [eax]
  42f0b6:	cmp    DWORD PTR [edx-0x32],0xffffffff
  42f0ba:	icebp  
  42f0bb:	(bad)  
  42f0bc:	inc    DWORD PTR [eax]
  42f0be:	sbb    al,0xff
  42f0c0:	cs cld 
  42f0c2:	or     dh,BYTE PTR [ebx-0x1]
  42f0c5:	add    BYTE PTR [eax],al
  42f0c7:	fucomip st,st(3)
  42f0c9:	int3   
  42f0ca:	cli    
  42f0cb:	add    BYTE PTR [eax],al
  42f0cd:	add    edi,0xffffffff
  42f0d0:	aad    0x24
  42f0d2:	mov    ebx,0xff83fc
  42f0d7:	mov    al,0xd3
  42f0d9:	add    BYTE PTR [eax+eax*1-0x76e87c01],dh
  42f0e0:	cli    
  42f0e1:	or     eax,0xffcc5bbf
  42f0e6:	add    DWORD PTR [edi],0xffffff99
  42f0e9:	push   DWORD PTR [ebp+0x8389ff]
  42f0ef:	add    BYTE PTR [edi],cl
  42f0f1:	inc    ebx
  42f0f2:	jo     0x42f0bb
  42f0f4:	(bad)  
  42f0f5:	inc    DWORD PTR [eax]
  42f0f7:	mov    esi,0x83a40053
  42f0fc:	add    BYTE PTR [ebx+0x52c500cf],al
  42f102:	imul   edi,esi,0xe1ff00ff
  42f108:	nop
  42f109:	add    BYTE PTR [edi+0x0],dh
  42f10c:	add    bh,bh
  42f10e:	pop    esp
  42f10f:	add    BYTE PTR [edi-0x7ca260d2],ch
  42f115:	inc    DWORD PTR [ebx+0x6dcc5725]
  42f11b:	inc    DWORD PTR [eax]
  42f11d:	add    BYTE PTR [ecx+0x0],bl
  42f120:	xor    edi,esi
  42f122:	popa   
  42f123:	icebp  
  42f124:	add    BYTE PTR [eax],al
  42f126:	inc    DWORD PTR [edx+0x8800f8]
  42f12c:	cmp    edi,0xffffff8b
  42f12f:	push   DWORD PTR [ebp+0x7fc3a9]
  42f135:	(bad)  
  42f136:	jmp    DWORD PTR [eax-0xaff60]
  42f13c:	(bad)  
  42f13d:	push   DWORD PTR [ebx+0x0]
  42f140:	nop
  42f141:	(bad)  
  42f142:	jl     0x42f15f
  42f144:	add    DWORD PTR [eax],0xffffffff
  42f147:	aad    0x1f
  42f149:	mov    DWORD PTR [edi+edi*8],ebp
  42f14c:	add    BYTE PTR [ebx+0x5bbf003a],al
  42f152:	scas   al,BYTE PTR es:[edi]
  42f153:	mov    esp,0xdaffff00
  42f158:	adc    al,0x83
  42f15a:	or     bh,bh
  42f15c:	int3   
  42f15d:	or     DWORD PTR [edi+edi*8+0x55e87656],0xffffffcc
  42f165:	add    bh,bh
  42f167:	jmp    0xffff:0xff66fffd
  42f16e:	inc    ebp
  42f16f:	add    BYTE PTR [eax],dh
  42f171:	fcomp  QWORD PTR [ebp+0xff00bb]
  42f177:	popa   
  42f178:	fdivr  st,st(7)
  42f17a:	ins    DWORD PTR es:[edi],dx
  42f17b:	(bad)  
  42f17c:	inc    DWORD PTR [eax]
  42f17e:	iret   
  42f17f:	jmp    DWORD PTR [edx+ebp*1]
  42f182:	rcl    DWORD PTR [edi-0x1],0x83
  42f186:	add    BYTE PTR [ecx-0xd63394],dl
  42f18c:	inc    DWORD PTR [eax]
  42f18e:	test   al,0xff
  42f190:	mov    ds:0xda7f0f,al
  42f195:	inc    DWORD PTR [eax]
  42f197:	outs   dx,DWORD PTR ds:[esi]
  42f198:	mov    edi,0xffff3883
  42f19d:	xor    DWORD PTR [edx+0x0],0xfffffff1
  42f1a1:	mov    dh,0xe5
  42f1a3:	sbb    al,0xff
  42f1a5:	cmp    edi,0xffffff9c
  42f1a8:	xchg   ebp,eax
  42f1a9:	sbb    DWORD PTR [edi+edi*8],0xffffffff
  42f1ad:	add    BYTE PTR [esi+0x0],al
  42f1b0:	mov    edi,0xff8b1771
  42f1b5:	(bad)  
  42f1b6:	call   FWORD PTR [ebx-0xd]
  42f1b9:	int3   
  42f1ba:	mov    bh,bh
  42f1bc:	mov    DWORD PTR [ecx+0x55428352],ecx
  42f1c2:	mov    edi,0xff00b6
  42f1c7:	jp     0x42f178
  42f1c9:	add    BYTE PTR [ebx-0x30760001],bh
  42f1cf:	int3   
  42f1d0:	jns    0x42f1e2
  42f1d2:	sar    ch,cl
  42f1d4:	add    BYTE PTR [eax],al
  42f1d6:	sub    DWORD PTR [ecx+0x53ff72],0xffffffff
  42f1dd:	cmp    DWORD PTR [edi+edi*8+0x7d],0xc
  42f1e2:	mov    ebx,0x838995
  42f1e7:	idiv   ah
  42f1e9:	add    cl,bh
  42f1eb:	add    bh,bh
  42f1ed:	add    BYTE PTR [esi],cl
  42f1ef:	call   DWORD PTR [ecx+0x3d]
  42f1f2:	les    esi,FWORD PTR [eax]
  42f1f4:	mov    edi,edi
  42f1f6:	int3   
  42f1f7:	sub    eax,0x3c00b0
  42f1fc:	(bad)  
  42f1fd:	jmp    ecx
  42f1ff:	and    DWORD PTR [ebx-0xe87f62],0x0
  42f206:	add    dl,bl
  42f208:	xchg   edi,eax
  42f209:	(bad)  
  42f20a:	cmp    al,0x0
  42f20c:	int3   
  42f20d:	add    BYTE PTR [eax],dl
  42f20f:	add    BYTE PTR [ebx-0x33a2e2d1],dh
  42f215:	(bad)  
  42f216:	jmp    FWORD PTR [eax+0x11]
  42f219:	(bad)  
  42f21a:	in     eax,dx
  42f21b:	add    bh,bh
  42f21d:	int3   
  42f21e:	addr16 add cl,bh
  42f221:	mov    dl,0xfa
  42f223:	int    0xff
  42f225:	(bad)  
  42f226:	call   FWORD PTR [ecx-0x42]
  42f229:	(bad)  
  42f22a:	mov    eax,0xa2890000
  42f22f:	(bad)  
  42f230:	mov    esi,0xbf957f
  42f235:	(bad)  
  42f236:	push   esi
  42f238:	pop    es
  42f239:	add    al,dl
  42f23b:	inc    DWORD PTR [eax]
  42f23d:	(bad)  
  42f23e:	jp     0x42f23f
  42f240:	arpl   WORD PTR [ebp+0x70],si
  42f243:	ds int3 
  42f245:	add    bh,bh
  42f247:	add    DWORD PTR [ebp-0x7cffaf01],0x0
  42f24e:	xor    al,BYTE PTR [eax]
  42f250:	jb     0x42f1e4
  42f252:	je     0x42f2bf
  42f254:	add    ah,cl
  42f256:	call   FWORD PTR [edx]
  42f258:	js     0x42f259
  42f25a:	test   BYTE PTR [eax],0xcc
  42f25d:	sbb    DWORD PTR [esi+0x458731ff],0xfffffff6
  42f264:	inc    DWORD PTR [ebx+0x78ef83]
  42f26a:	fcmovne st,st(4)
  42f26c:	add    DWORD PTR [eax],0xffffff8c
  42f26f:	inc    DWORD PTR [ebp-0xf0205d]
  42f275:	add    bh,bh
  42f277:	fsub   DWORD PTR [ebx]
  42f279:	int3   
  42f27a:	repz cmp edi,0x0
  42f27e:	inc    ecx
  42f27f:	dec    DWORD PTR [esi-0x4686a2]
  42f285:	add    bh,bh
  42f287:	pop    eax
  42f288:	cmp    bh,0xf2
  42f28b:	add    DWORD PTR [eax],0x0
  42f28e:	pop    edx
  42f28f:	add    eax,0xd
  42f292:	add    eax,0xffffffe2
  42f297:	jg     0x42f28e
  42f299:	call   FWORD PTR [ebp-0x7d]
  42f29c:	add    BYTE PTR [eax],al
  42f29e:	cmp    al,0xff
  42f2a0:	push   ebx
  42f2a1:	out    0xdf,al
  42f2a3:	pop    esi
  42f2a4:	add    DWORD PTR [eax],0xffffff83
  42f2a7:	gs out 0xff,al
  42f2aa:	aad    0xff
  42f2ac:	cmp    edi,0x4c
  42f2af:	add    BYTE PTR [eax+0x96c1d2],cl
  42f2b5:	inc    DWORD PTR [eax]
  42f2b7:	jne    0x42f317
  42f2b9:	add    BYTE PTR [esi],al
  42f2bb:	inc    DWORD PTR [ebx-0x7a00e800]
  42f2c1:	test   bh,al
  42f2c3:	cdq    
  42f2c4:	inc    DWORD PTR [ebx-0x43fe34]
  42f2ca:	xchg   ecx,eax
  42f2cb:	add    bh,bh
  42f2cd:	jmp    FWORD PTR [esp+ecx*8]
  42f2d0:	jnp    0x42f305
  42f2d2:	(bad)  
  42f2d3:	je     0x42f2d5
  42f2d5:	inc    DWORD PTR [eax]
  42f2d7:	outs   dx,DWORD PTR ds:[esi]
  42f2d8:	push   esp
  42f2d9:	xor    DWORD PTR [edi+edi*8-0xeff34],0x2d
  42f2e1:	mov    edi,0x83ffeae6
  42f2e6:	add    BYTE PTR [eax-0x765f0056],cl
  42f2ec:	int3   
  42f2ed:	add    BYTE PTR [edi+edi*8+0x6d],cl
  42f2f1:	cmp    ebp,DWORD PTR [eax+edx*8+0x0]
  42f2f5:	add    bh,bh
  42f2f7:	mov    ah,0x12
  42f2f9:	jmp    FWORD PTR [edi+edi*8]
  42f2fc:	add    BYTE PTR [eax],al
  42f2fe:	bound  eax,QWORD PTR [eax]
  42f300:	xor    edi,eax
  42f302:	jae    0x42f2a6
  42f304:	(bad)  
  42f305:	(bad)  
  42f306:	inc    DWORD PTR [esi-0xc4ff54]
  42f30c:	add    BYTE PTR [ecx+0x62c89a6],cl
  42f312:	aas    
  42f313:	jl     0x42f314
  42f315:	inc    DWORD PTR [eax]
  42f317:	fld    QWORD PTR [ebx+0x0]
  42f31a:	pop    ecx
  42f31b:	inc    DWORD PTR [eax]
  42f31d:	int3   
  42f31e:	xchg   edx,eax
  42f31f:	add    BYTE PTR [esi],dh
  42f321:	sbb    bl,BYTE PTR [edx-0x7c7c98]
  42f327:	add    ch,BYTE PTR [eax]
  42f329:	add    BYTE PTR [ebp+0x6fffccff],bh
  42f32f:	call   FWORD PTR [edx]
  42f331:	loope  0x42f2cc
  42f333:	hlt    
  42f334:	inc    DWORD PTR [eax]
  42f336:	int3   
  42f337:	enter  0x894a,0xdb
  42f33b:	add    BYTE PTR [ebx-0xfff9e77],al
  42f341:	test   al,0x33
  42f343:	sahf   
  42f344:	inc    DWORD PTR [eax]
  42f346:	call   FWORD PTR ds:0xff990016
  42f34c:	add    DWORD PTR [eax],0x3e
  42f34f:	jmp    FWORD PTR [eax-0x21]
  42f352:	mov    WORD PTR [edi-0x31ff007d],es
  42f358:	popa   
  42f359:	and    DWORD PTR [eax+eax*1-0xa60100],0x3f
  42f361:	inc    edx
  42f362:	pop    ss
  42f363:	mov    esi,0xb1ff00ff
  42f368:	fdivp  st(7),st
  42f36a:	scas   eax,DWORD PTR es:[edi]
  42f36b:	add    BYTE PTR [eax],al
  42f36d:	push   DWORD PTR [edi-0xd2b3901]
  42f373:	outs   dx,BYTE PTR ds:[esi]
  42f374:	int3   
  42f375:	inc    DWORD PTR [eax]
  42f377:	(bad)  
  42f378:	xchg   esp,eax
  42f379:	call   FWORD PTR [esi+0x56ff00ff]
  42f37f:	add    BYTE PTR [ebp+0xd],bl
  42f382:	scas   eax,DWORD PTR es:[edi]
  42f383:	pop    esp
  42f384:	int3   
  42f385:	(bad)  
  42f386:	(bad)  
  42f387:	(bad)  
  42f389:	xor    DWORD PTR [ecx+0x0],0xffffffff
  42f38d:	add    BYTE PTR [ecx-0x4ac53600],ah
  42f393:	mov    dh,0xff
  42f395:	add    ah,cl
  42f397:	js     0x42f37c
  42f399:	add    DWORD PTR [eax+0x62ffff83],0xffffffcc
  42f3a0:	ins    BYTE PTR es:[edi],dx
  42f3a1:	xchg   ecx,eax
  42f3a2:	test   DWORD PTR [edi+edi*8],ebx
  42f3a5:	mov    DWORD PTR [eax],eax
  42f3a7:	sub    DWORD PTR [eax],ecx
  42f3a9:	sbb    DWORD PTR [esi-0x25ffff01],0xffffff83
  42f3b0:	outs   dx,BYTE PTR ds:[esi]
  42f3b1:	test   dl,dl
  42f3b3:	and    al,0x89
  42f3b5:	(bad)  
  42f3b6:	jmp    DWORD PTR [ecx+ebp*1+0x9983]
  42f3bd:	add    BYTE PTR [ebx-0x1],dl
  42f3c0:	std    
  42f3c1:	ds aam 0x2b
  42f3c4:	add    DWORD PTR [eax],0xffffffff
  42f3c7:	repz imul edi,edi,0xcc0001
  42f3ce:	pop    edi
  42f3cf:	cmp    DWORD PTR [ecx-0x5b7c7b],0xffffffff
  42f3d6:	inc    DWORD PTR [eax+0xc30021]
  42f3dc:	cmp    edi,0x7e
  42f3df:	sbb    DWORD PTR [ecx+0x23],0xffffffb2
  42f3e3:	sbb    bh,bh
  42f3e5:	inc    DWORD PTR [eax]
  42f3e7:	int3   
  42f3e8:	add    cl,ah
  42f3ea:	jb     0x42f3eb
  42f3ec:	inc    DWORD PTR [eax]
  42f3ee:	dec    ebx
  42f3ef:	add    BYTE PTR [ecx+0x1a],ch
  42f3f2:	jmp    0x42f3d4
  42f3f4:	(bad)  
  42f3f5:	(bad)  
  42f3f6:	push   DWORD PTR ds:0xffb20071
  42f3fc:	add    BYTE PTR [eax],al
  42f3fe:	dec    esp
  42f3ff:	call   DWORD PTR [esp+edx*8]
  42f402:	jae    0x42f464
  42f404:	inc    DWORD PTR [eax]
  42f406:	xor    DWORD PTR [ecx-0xa60023],0xffffffff
  42f40d:	inc    DWORD PTR [ebp-0x120fc800]
  42f413:	hlt    
  42f414:	inc    DWORD PTR [eax]
  42f416:	push   DWORD PTR [edx]
  42f418:	jle    0x42f39d
  42f41a:	je     0x42f41c
  42f41c:	inc    DWORD PTR [ebx-0x1631003c]
  42f422:	pop    esp
  42f423:	mov    al,ds:0x5cffff00
  42f428:	xor    eax,0xffff2600
  42f42d:	add    BYTE PTR [ebx+0x0],bl
  42f430:	cmp    DWORD PTR [eax+edx*1],ebp
  42f433:	sbb    esp,ecx
  42f435:	add    BYTE PTR [ebx-0x62005c80],al
  42f43b:	inc    DWORD PTR [ebx+0x34ff6283]
  42f441:	and    eax,0x83894198
  42f446:	add    BYTE PTR [ebx-0xa400d5],dh
  42f44c:	inc    DWORD PTR [eax]
  42f44e:	sub    ecx,esp
  42f450:	sbb    bl,ah
  42f452:	aas    
  42f453:	cmp    DWORD PTR [eax],eax
  42f455:	add    bh,bh
  42f457:	push   ecx
  42f458:	cmp    al,0x83
  42f45a:	push   ss
  42f45b:	or     esp,0xffffffff
  42f45e:	lock (bad) 
  42f460:	out    dx,al
  42f461:	mov    ch,0x73
  42f463:	lods   eax,DWORD PTR ds:[esi]
  42f464:	mov    esp,ecx
  42f466:	int3   
  42f467:	loopne 0x42f46f
  42f469:	add    BYTE PTR [eax+0x0],bh
  42f46c:	add    DWORD PTR [ebx-0x145c766f],0x1d
  42f473:	data16 int3 
  42f475:	add    bh,bh
  42f477:	xchg   DWORD PTR [edi],ebp
  42f479:	add    BYTE PTR [edx+0x0],cl
  42f47c:	add    bh,bh
  42f47e:	inc    esi
  42f47f:	(bad)  
  42f480:	mov    esi,0xff15d4f3
  42f485:	dec    DWORD PTR [ecx+0x72ffd146]
  42f48b:	add    bh,bh
  42f48d:	jmp    FWORD PTR [ecx-0x558b9b00]
  42f493:	cmc    
  42f494:	inc    DWORD PTR [eax]
  42f496:	dec    DWORD PTR [eax]
  42f498:	pop    esi
  42f499:	add    BYTE PTR [ebx],cl
  42f49b:	add    ah,cl
  42f49d:	push   esi
  42f49f:	add    eax,0xffffff92
  42f4a2:	popf   
  42f4a3:	mov    ebx,0x5bff00ff
  42f4a8:	cli    
  42f4a9:	push   DWORD PTR [ecx-0x1]
  42f4ac:	add    DWORD PTR [ebx-0x1f81fff2],0x6
  42f4b3:	adc    bh,bh
  42f4b5:	(bad)  
  42f4b6:	dec    DWORD PTR [edx+0xb9ff7e]
  42f4bc:	(bad)  
  42f4bd:	call   DWORD PTR [eax]
  42f4bf:	jmp    edx
  42f4c1:	(bad)  
  42f4c2:	jne    0x42f491
  42f4c4:	add    BYTE PTR [eax],al
  42f4c6:	(bad)  
  42f4c7:	(bad)  [ebx-0x1]
  42f4ca:	push   ebx
  42f4cb:	add    bh,bh
  42f4cd:	jmp    FWORD PTR [edi-0x1]
  42f4d0:	and    DWORD PTR ds:0xffffc252,ecx
  42f4d6:	(bad)  
  42f4d7:	cmp    esp,DWORD PTR [ebp-0x7d]
  42f4da:	xchg   edi,edi
  42f4dc:	inc    DWORD PTR [eax]
  42f4de:	mov    cl,0xff
  42f4e0:	sub    al,0xb1
  42f4e2:	xchg   ebp,eax
  42f4e3:	ret    0xffcc
  42f4e6:	add    BYTE PTR [ebx],al
  42f4e8:	mov    eax,0x83ff0889
  42f4ed:	add    BYTE PTR [ebx],ah
  42f4ef:	inc    ebp
  42f4f1:	(bad)  
  42f4f2:	(bad)  
  42f4f3:	sbb    eax,0x4fff83cc
  42f4f8:	xor    bh,bh
  42f4fa:	jbe    0x42f4fb
  42f4fc:	(bad)  
  42f4fd:	call   DWORD PTR [eax+eax*1]
  42f500:	dec    eax
  42f501:	call   0xc600:0xff892d1d
  42f508:	mov    ebx,0x8387ff
  42f50d:	add    ah,ch
  42f50f:	(bad)  
  42f510:	cmp    al,0x40
  42f512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f513:	lahf   
  42f514:	(bad)  
  42f515:	(bad)  
  42f516:	call   FWORD PTR [eax]
  42f518:	dec    edi
  42f519:	jmp    eax
  42f51b:	or     esp,0xffffffff
  42f51e:	jmp    0x42f4ec
  42f520:	push   DWORD PTR [ebx]
  42f522:	retf   
  42f523:	ja     0x42f524
  42f525:	mov    DWORD PTR [ecx+0x4bff3e6d],ecx
  42f52b:	(bad)  
  42f52c:	(bad)  
  42f52d:	jmp    DWORD PTR [ecx]
  42f52f:	inc    DWORD PTR [ebx]
  42f531:	mov    eax,0x89a6a8
  42f536:	call   DWORD PTR [esi-0x33b50047]
  42f53c:	(bad)  
  42f53d:	call   FWORD PTR [edx-0x1]
  42f540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f541:	jl     0x42f546
  42f543:	imul   ecx,esp,0xffffffff
  42f546:	add    BYTE PTR [ebx+0x338338],ch
  42f54c:	(bad)  
  42f54d:	inc    DWORD PTR [edx-0x7ea70134]
  42f553:	push   ebp
  42f554:	(bad)  
  42f555:	inc    DWORD PTR [eax]
  42f557:	sbb    al,0x8e
  42f559:	int3   
  42f55a:	and    eax,0x5c00ffff
  42f55f:	add    BYTE PTR [edx+edx*1],al
  42f562:	adc    eax,0xff00ffaf
  42f567:	sub    ecx,DWORD PTR [ecx-0x1]
  42f56a:	push   esp
  42f56b:	int3   
  42f56c:	inc    DWORD PTR [eax]
  42f56e:	adc    bh,bh
  42f570:	hlt    
  42f571:	push   esi
  42f572:	mov    esp,0xff0058
  42f577:	add    ecx,DWORD PTR [ebp+0x0]
  42f57a:	push   ebx
  42f57b:	add    DWORD PTR [eax],0xffffffff
  42f57e:	(bad)  
  42f57f:	dec    DWORD PTR ds:0xffc9fb74
  42f585:	add    bh,bh
  42f587:	mov    cl,0x8
  42f589:	jmp    ebx
  42f58b:	add    BYTE PTR [eax],al
  42f58d:	push   DWORD PTR [esi]
  42f58f:	inc    DWORD PTR [edx+0x70]
  42f592:	push   ebp
  42f593:	enter  0xccff,0xff
  42f597:	push   0xffffffa3
  42f599:	(bad)  
  42f59a:	cmp    BYTE PTR [eax],al
  42f59c:	add    BYTE PTR [eax],al
  42f59e:	inc    esi
  42f59f:	jmp    FWORD PTR [ebx-0x33c5af33]
  42f5a5:	(bad)  
  42f5a6:	jmp    DWORD PTR [esi-0x49]
  42f5a9:	add    BYTE PTR [esi],dh
  42f5ab:	int3   
  42f5ac:	(bad)  
  42f5ad:	dec    DWORD PTR [edx+0x11141cff]
  42f5b3:	xchg   ebx,eax
  42f5b4:	add    BYTE PTR [eax],al
  42f5b6:	int3   
  42f5b7:	cmp    BYTE PTR [edx-0x677],bl
  42f5bd:	jmp    DWORD PTR ds:0x8afb9c83
  42f5c3:	js     0x42f5c4
  42f5c5:	(bad)  
  42f5c6:	call   FWORD PTR [esi+0x5983c6]
  42f5cc:	add    DWORD PTR [ebx-0x2a4500a1],0x29
  42f5d3:	push   eax
  42f5d4:	mov    DWORD PTR [eax],eax
  42f5d6:	add    ebp,0xffffffd6
  42f5d9:	jmp    DWORD PTR [ebx]
  42f5db:	add    BYTE PTR [eax],al
  42f5dd:	add    BYTE PTR [ecx-0x49863201],dh
  42f5e3:	mov    edi,?
  42f5e5:	inc    DWORD PTR [ebx-0x667ca22c]
  42f5eb:	add    ah,cl
  42f5ed:	(bad)  
  42f5ee:	jge    0x42f5ef
  42f5f0:	iret   
  42f5f1:	arpl   di,bp
  42f5f3:	push   cs
  42f5f4:	add    BYTE PTR [ecx-0x33e54f01],cl
  42f5fa:	(bad)  
  42f5fb:	(bad)  
  42f5fc:	(bad)  
  42f5fd:	dec    DWORD PTR [ebx]
  42f5ff:	int3   
  42f600:	or     dl,BYTE PTR [ebx-0xffca85]
  42f606:	xor    edi,0x45
  42f609:	add    BYTE PTR [eax+eax*1-0x7d0077],ch
  42f610:	fsubr  QWORD PTR [ebx]
  42f612:	pop    edx
  42f613:	dec    edx
  42f614:	inc    DWORD PTR [eax]
  42f616:	add    BYTE PTR [esi],dh
  42f618:	cdq    
  42f619:	mov    DWORD PTR [ebx-0x77],ebx
  42f61c:	int3   
  42f61d:	add    BYTE PTR [ebp+0x0],cl
  42f620:	cmp    dh,BYTE PTR [eax+0x8]
  42f623:	inc    ecx
  42f624:	mov    edi,edi
  42f626:	xor    DWORD PTR [ebx+0x68],0xffffffcc
  42f62a:	out    dx,eax
  42f62b:	add    bh,bh
  42f62d:	int3   
  42f62e:	push   ebx
  42f62f:	inc    edi
  42f631:	pusha  
  42f632:	shl    esi,1
  42f634:	add    ah,cl
  42f636:	sub    DWORD PTR [ebx-0x769900d5],0xffffffff
  42f63d:	dec    eax
  42f63f:	add    BYTE PTR [ebx-0x48],ch
  42f642:	fsqrt  
  42f644:	add    BYTE PTR [eax],al
  42f646:	add    BYTE PTR [edi+0x1c],ch
  42f649:	(bad)  
  42f64a:	cmp    BYTE PTR [eax],al
  42f64c:	inc    DWORD PTR [eax]
  42f64e:	and    al,0xff
  42f650:	sub    dl,BYTE PTR fs:[esi-0xff00fc]
  42f657:	lock lahf 
  42f659:	call   DWORD PTR [edi+edi*8-0x1]
  42f65d:	int3   
  42f65e:	rol    DWORD PTR [eax],0x37
  42f661:	jo     0x42f5e7
  42f663:	pushf  
  42f664:	add    bh,bh
  42f666:	jmp    esp
  42f668:	cli    
  42f669:	and    DWORD PTR [eax],0xffffffff
  42f66c:	inc    DWORD PTR [ebx+0x64dd009f]
  42f672:	lods   eax,DWORD PTR es:[esi]
  42f674:	add    bh,bh
  42f676:	dec    eax
  42f678:	inc    esi
  42f679:	(bad)  
  42f67a:	jnp    0x42f67b
  42f67c:	(bad)  
  42f67d:	call   DWORD PTR [edi-0x7d]
  42f680:	dec    ebx
  42f681:	ret    
  42f682:	jl     0x42f6bc
  42f684:	add    BYTE PTR [eax],al
  42f686:	int3   
  42f687:	fwait
  42f688:	das    
  42f689:	call   DWORD PTR [ecx+0x18ffffcc]
  42f68f:	add    BYTE PTR [ebx],ah
  42f691:	pop    es
  42f692:	(bad)  
  42f693:	jg     0x42f695
  42f695:	mov    edi,edi
  42f697:	(bad)  
  42f698:	fxch   st(4)
  42f69a:	les    ecx,FWORD PTR [ecx-0x76b40000]
  42f6a0:	clc    
  42f6a1:	or     DWORD PTR [ebx+ebx*4],ecx
  42f6a4:	add    BYTE PTR [eax],al
  42f6a6:	int3   
  42f6a7:	mov    bl,0x11
  42f6a9:	call   DWORD PTR [ebp-0x1]
  42f6ac:	add    BYTE PTR [ebx-0x4c50098],al
  42f6b2:	and    esi,esp
  42f6b4:	inc    DWORD PTR [ebx-0x9e6e01]
  42f6ba:	mov    esp,0x17ffffff
  42f6bf:	add    dl,bl
  42f6c1:	nop
  42f6c2:	int    0xee
  42f6c4:	inc    DWORD PTR [eax]
  42f6c6:	add    BYTE PTR [edi-0xa6ff9b],bl
  42f6cc:	(bad)  
  42f6cd:	dec    edx
  42f6cf:	push   DWORD PTR [edi-0xb9b19a]
  42f6d5:	add    ah,cl
  42f6d7:	xchg   ecx,eax
  42f6d8:	je     0x42f6a6
  42f6da:	dec    edi
  42f6db:	add    BYTE PTR [ecx-0x7cd301],cl
  42f6e1:	outs   dx,DWORD PTR ds:[esi]
  42f6e2:	mov    DWORD PTR [ebx-0x3f8b7c99],eax
  42f6e8:	(bad)  
  42f6e9:	cmp    eax,0xf483cc
  42f6ee:	(bad)  
  42f6ef:	push   ebp
  42f6f0:	jmp    DWORD PTR [esi+0x0]
  42f6f3:	sbb    DWORD PTR [edi+0xf06783],0x5c
  42f6fa:	add    BYTE PTR [ebx-0x425fff1a],al
  42f700:	add    BYTE PTR [ecx],ch
  42f702:	dec    esp
  42f704:	mov    ds:0x4f10cc,eax
  42f709:	repz add BYTE PTR [ecx-0x68f008f],cl
  42f710:	add    BYTE PTR [eax+0x0],dh
  42f713:	(bad)  
  42f714:	aas    
  42f715:	mov    DWORD PTR [ebp-0x63766e],ebx
  42f71b:	add    ch,dh
  42f71d:	add    BYTE PTR [ebx],bl
  42f71f:	dec    ebp
  42f720:	add    BYTE PTR [edi+edi*8-0x1],dh
  42f724:	in     al,dx
  42f725:	add    ah,ch
  42f727:	jns    0x42f728
  42f729:	fdiv   st(7),st
  42f72b:	call   edx
  42f72d:	or     DWORD PTR [eax],0xffffff98
  42f730:	and    DWORD PTR [ebp-0xc0007d],0xffffff96
  42f737:	sub    ecx,esp
  42f739:	retf   
  42f73a:	int3   
  42f73b:	push   DWORD PTR [esi-0x1]
  42f73e:	(bad)  
  42f73f:	(bad)  
  42f740:	push   DWORD PTR [ebp+0x750089]
  42f746:	xchg   DWORD PTR [eax],esi
  42f748:	(bad)  
  42f749:	(bad)  
  42f74b:	(bad)  
  42f74c:	mov    edx,0xff7bdfff
  42f751:	mov    eax,ds:0xff490000
  42f756:	(bad)  
  42f757:	mov    ebp,0xff83dc00
  42f75c:	enter  0x9400,0x1b
  42f760:	add    BYTE PTR [eax-0x7d],al
  42f763:	add    BYTE PTR [edi-0x230601],bl
  42f769:	cs mov edi,edi
  42f76c:	jae    0x2542476e
  42f772:	inc    DWORD PTR [eax]
  42f774:	add    BYTE PTR [di-0x56],bl
  42f778:	mov    DWORD PTR [edi+edi*8],ecx
  42f77b:	and    eax,0xffffffcc
  42f77e:	into   
  42f77f:	out    dx,al
  42f780:	int3   
  42f781:	loope  0x42f783
  42f783:	add    dh,bh
  42f785:	add    BYTE PTR [edi-0x6733bc],bh
  42f78b:	dec    edi
  42f78d:	inc    DWORD PTR ds:0xff9affc7
  42f793:	call   DWORD PTR [edi]
  42f795:	add    BYTE PTR [ebx+0x9ff2a],dl
  42f79b:	(bad)  
  42f79c:	mov    ebx,0xff182eff
  42f7a1:	(bad)  
  42f7a2:	inc    DWORD PTR [eax]
  42f7a4:	test   edi,edi
  42f7a6:	daa    
  42f7a7:	(bad)  
  42f7a8:	push   DWORD PTR [edi-0x877c01]
  42f7ae:	mov    BYTE PTR [ecx+0xf0cc],bl
  42f7b4:	and    edi,edi
  42f7b6:	js     0x42f7f5
  42f7b8:	dec    DWORD PTR [esp+ecx*8]
  42f7bb:	int3   
  42f7bc:	out    0x0,eax
  42f7be:	mov    ebp,eax
  42f7c0:	call   FWORD PTR [edi+edi*8-0x1]
  42f7c4:	mov    ds:0x83704bff,al
  42f7c9:	adc    DWORD PTR [ecx-0x26ff0c01],ecx
  42f7cf:	push   eax
  42f7d0:	add    DWORD PTR [eax+0x0],0xffffff83
  42f7d4:	jbe    0x42f7d5
  42f7d6:	bound  esp,QWORD PTR [ecx]
  42f7d8:	add    DWORD PTR [edi-0x7c2f0100],0xffffff80
  42f7df:	fild   DWORD PTR [eax]
  42f7e1:	pop    ecx
  42f7e2:	add    ah,cl
  42f7e4:	xchg   ecx,eax
  42f7e5:	call   FWORD PTR [edx-0x7]
  42f7e8:	dec    esp
  42f7ea:	cmp    edi,0x74
  42f7ed:	jmp    FWORD PTR [esi]
  42f7ef:	rol    DWORD PTR [ebx-0x1f007691],0x83
  42f7f6:	ins    BYTE PTR es:[edi],dx
  42f7f7:	(bad)  
  42f7f8:	call   DWORD PTR [edi-0x1]
  42f7fb:	xor    DWORD PTR [ebx-0x1],0xffffff85
  42f7ff:	xor    eax,0xcc00e9ff
  42f804:	pop    DWORD PTR [eax]
  42f806:	xchg   esi,eax
  42f807:	arpl   WORD PTR [ecx+0x49830098],cx
  42f80d:	add    BYTE PTR [ebx],dh
  42f80f:	fild   DWORD PTR [ebx+0x37ff0052]
  42f815:	add    BYTE PTR [esi-0xf2332f],bh
  42f81b:	call   eax
  42f81d:	add    ch,bh
  42f81f:	jle    0x42f820
  42f821:	fcos   
  42f823:	(bad)  
  42f824:	jmp    0xffae5bac
  42f829:	xchg   ebp,eax
  42f82a:	add    BYTE PTR [ebx-0x5feb00a9],al
  42f830:	add    BYTE PTR [edx-0x7d],dl
  42f833:	sbb    DWORD PTR [ebx],0xffffffff
  42f836:	test   al,0xbe
  42f838:	add    BYTE PTR [edx],ah
  42f83a:	add    BYTE PTR [eax],al
  42f83c:	das    
  42f83d:	push   eax
  42f83f:	sub    bh,bh
  42f841:	cmp    edi,0xc8cc94ff
  42f847:	cmp    eax,0xccff58ff
  42f84c:	arpl   WORD PTR [ebx+0x4f83e0e6],ax
  42f852:	(bad)  
  42f853:	call   ecx
  42f855:	add    BYTE PTR [edx],dl
  42f857:	add    DWORD PTR [eax],0x9ffff77
  42f85d:	int3   
  42f85e:	mov    eax,0xff7dcc8f
  42f863:	(bad)  
  42f864:	in     eax,dx
  42f865:	int3   
  42f866:	push   edi
  42f867:	pop    edx
  42f868:	add    BYTE PTR [esi-0x34],cl
  42f86b:	mov    DWORD PTR [ebx],esi
  42f86d:	dec    DWORD PTR [esi-0xcf33af]
  42f873:	dec    DWORD PTR [esi+0x0]
  42f876:	ror    edi,1
  42f878:	mov    DWORD PTR ds:0xff63ffff,edi
  42f87e:	xlat   BYTE PTR fs:[ebx]
  42f880:	add    bl,dl
  42f882:	or     DWORD PTR [ecx-0x6db9005c],0xffffffff
  42f889:	dec    esi
  42f88a:	add    DWORD PTR [ebx-0x20b8fffe],0xffffffff
  42f891:	inc    edi
  42f892:	dec    DWORD PTR [ecx+0x7803ff08]
  42f898:	push   DWORD PTR [eax-0x1]
  42f89b:	add    BYTE PTR [eax-0x767d9c01],cl
  42f8a1:	mov    ?,edi
  42f8a3:	xor    DWORD PTR [ebp-0x34],0xffffffc4
  42f8a7:	and    edi,edi
  42f8a9:	push   ss
  42f8aa:	int3   
  42f8ab:	jmp    FWORD PTR [eax+0x8320ff]
  42f8b1:	pop    ds
  42f8b2:	add    BYTE PTR [ebx-0x73c17c5c],al
  42f8b8:	add    BYTE PTR [eax-0x1],al
  42f8bb:	adc    edi,0x0
  42f8be:	mov    al,0xbd
  42f8c0:	call   DWORD PTR [ecx-0x450001]
  42f8c6:	aad    0x52
  42f8c8:	jmp    DWORD PTR [edi+edi*8]
  42f8cb:	call   FWORD PTR [esi]
  42f8cd:	and    DWORD PTR [ebx],0x5a
  42f8d0:	jmp    FWORD PTR [ebx]
  42f8d2:	cmp    edi,0xffffffb1
  42f8d5:	xor    DWORD PTR [ecx-0x9],0x0
  42f8d9:	loope  0x42f8db
  42f8db:	or     esp,0xffffffff
  42f8de:	mov    esp,DWORD PTR [ecx+0xff4d83]
  42f8e4:	or     edi,edi
  42f8e6:	pusha  
  42f8e7:	loopne 0x42f8e9
  42f8e9:	ror    esp,0x83
  42f8ec:	jo     0x42f8ba
  42f8ee:	pop    esi
  42f8ef:	sub    bh,bh
  42f8f1:	scas   eax,DWORD PTR es:[edi]
  42f8f2:	dec    DWORD PTR [ecx+0x434f004c]
  42f8f8:	dec    DWORD PTR [edx-0x1]
  42f8fb:	jmp    ecx
  42f8fd:	int3   
  42f8fe:	es cmp edi,edi
  42f901:	out    0x0,eax
  42f903:	add    BYTE PTR [esi],bl
  42f905:	mov    eax,edx
  42f907:	jmp    0x42f88c
  42f909:	jnp    0x42f90a
  42f90b:	push   DWORD PTR [edi+edi*8]
  42f90e:	dec    esp
  42f90f:	stc    
  42f910:	int3   
  42f911:	sbb    al,0xff
  42f913:	jmp    DWORD PTR [ecx+ecx*4+0x23]
  42f917:	ret    
  42f918:	xor    DWORD PTR [eax+eax*1+0x71ffaa83],0xffffffe8
  42f920:	push   DWORD PTR [eax-0x77]
  42f923:	inc    DWORD PTR [ebx+0xf28eff]
  42f929:	lods   al,BYTE PTR ds:[esi]
  42f92a:	add    BYTE PTR [ebx-0x21e1763b],al
  42f930:	(bad)  
  42f931:	js     0x42f8b6
  42f933:	jmp    ebp
  42f935:	mov    ebp,edi
  42f937:	push   cs
  42f938:	add    BYTE PTR [eax-0x33d1ff01],al
  42f93e:	push   esp
  42f93f:	int    0x83
  42f941:	hlt    
  42f942:	cmp    edi,0xffffffbd
  42f945:	int3   
  42f946:	add    DWORD PTR [esi+0x0],ebp
  42f949:	mov    bh,0x89
  42f94b:	mov    DWORD PTR [esi-0xd8d977],eax
  42f951:	(bad)  
  42f952:	inc    DWORD PTR [eax]
  42f954:	pop    ss
  42f955:	int3   
  42f956:	pop    ecx
  42f957:	cmp    al,0xff
  42f959:	mov    cl,0x0
  42f95b:	call   DWORD PTR [edi+edi*8-0xc72]
  42f962:	add    BYTE PTR [ebx+0x48effb3],al
  42f968:	push   DWORD PTR [ecx-0x10007d]
  42f96e:	ds das 
  42f970:	add    BYTE PTR [eax-0xce767d],bh
  42f976:	stc    
  42f977:	xchg   ebp,eax
  42f978:	add    BYTE PTR [edi+0x270089],al
  42f97e:	push   0xffffff8e
  42f980:	add    bl,dh
  42f982:	inc    DWORD PTR [ebx-0x413700c4]
  42f988:	add    BYTE PTR [ebx+0x0],al
  42f98b:	jmp    DWORD PTR [eax-0x1]
  42f98e:	push   ebp
  42f98f:	adc    BYTE PTR [eax],al
  42f991:	mov    ebp,0xff32ff89
  42f996:	cmp    BYTE PTR [ecx-0x4700],bh
  42f99c:	inc    edx
  42f99d:	mov    DWORD PTR [ebx],esp
  42f99f:	mov    ecx,0x83ffd9ff
  42f9a4:	jmp    0xcc59:0xddc8ff
  42f9ab:	add    BYTE PTR [ebp-0x1],al
  42f9ae:	cs mov dl,0xff
  42f9b1:	mov    bh,bh
  42f9b3:	add    dh,dh
  42f9b5:	int3   
  42f9b6:	mov    DWORD PTR [edi+edi*8],ebp
  42f9b9:	xchg   edx,eax
  42f9ba:	inc    DWORD PTR [eax]
  42f9bc:	dec    edx
  42f9bd:	add    BYTE PTR [ebx],cl
  42f9bf:	adc    al,0xff
  42f9c1:	sub    DWORD PTR [ebx+0x55fff1ff],eax
  42f9c7:	into   
  42f9c8:	int3   
  42f9c9:	push   eax
  42f9ca:	add    bh,bh
  42f9cc:	sbb    DWORD PTR [eax],eax
  42f9ce:	div    bl
  42f9d0:	call   FWORD PTR [ebp-0x1]
  42f9d3:	(bad)  
  42f9d4:	cmp    BYTE PTR [eax],al
  42f9d6:	aaa    
  42f9d7:	call   DWORD PTR [ebp+0xf0ffff]
  42f9de:	je     0x42f9b4
  42f9e0:	cmp    ebx,0xffffffff
  42f9e3:	int3   
  42f9e4:	push   ebx
  42f9e5:	dec    DWORD PTR [esp+esi*8+0x832600]
  42f9ec:	pop    ecx
  42f9ed:	jmp    DWORD PTR [eax]
  42f9ef:	daa    
  42f9f0:	call   DWORD PTR [edi+edi*8-0x47ffb077]
  42f9f7:	sbb    eax,DWORD PTR [eax]
  42f9f9:	call   0xab58:0xffb50000
  42fa00:	add    BYTE PTR [edx-0x76f3007d],al
  42fa06:	ret    0x8312
  42fa09:	sub    esp,ecx
  42fa0b:	add    BYTE PTR [esi-0x852801],al
  42fa11:	int3   
  42fa12:	inc    DWORD PTR [ebx+0x6902ff4c]
  42fa18:	(bad)  
  42fa19:	cmp    eax,0xcaffcc
  42fa1e:	xlat   BYTE PTR ds:[ebx]
  42fa1f:	(bad)  
  42fa20:	int3   
  42fa21:	push   es
  42fa22:	add    bh,bh
  42fa24:	mov    bh,bh
  42fa26:	out    dx,al
  42fa27:	jle    0x42fa28
  42fa29:	pop    edx
  42fa2a:	int3   
  42fa2b:	add    BYTE PTR [esi+0x0],bl
  42fa2e:	fild   WORD PTR [ecx]
  42fa30:	call   DWORD PTR [ebp-0x720100]
  42fa36:	and    al,0x25
  42fa38:	jmp    DWORD PTR [ebx+0xc2ff89]
  42fa3e:	sub    ah,BYTE PTR [esi]
  42fa40:	dec    DWORD PTR [eax+eax*1-0x77]
  42fa44:	mov    bh,0xff
  42fa46:	aaa    
  42fa47:	lahf   
  42fa48:	add    esi,0xffffffff
  42fa4b:	jmp    FWORD PTR [ecx-0x1]
  42fa4e:	mov    ebx,DWORD PTR [edi-0x337c8200]
  42fa54:	pop    DWORD PTR [eax]
  42fa56:	xlat   BYTE PTR ds:[ebx]
  42fa57:	retf   0x76ff
  42fa5a:	dec    esp
  42fa5c:	into   
  42fa5d:	push   DWORD PTR [eax-0x768a0043]
  42fa63:	dec    DWORD PTR [edi]
  42fa65:	jmp    FWORD PTR [ebp+0x22]
  42fa68:	sub    DWORD PTR [eax+0x428383],0xffffff87
  42fa6f:	leave  
  42fa70:	add    ah,ch
  42fa72:	add    ah,cl
  42fa74:	fadd   QWORD PTR [eax]
  42fa76:	or     ah,BYTE PTR [eax-0xff3801]
  42fa7c:	icebp  
  42fa7d:	(bad)  
  42fa7e:	ds sbb edi,edi
  42fa81:	pop    DWORD PTR [ebx-0x68003e00]
  42fa87:	xchg   ebx,eax
  42fa88:	(bad)  
  42fa89:	mov    edi,0x8378ffcc
  42fa8e:	imul   BYTE PTR [eax+eax*1]
  42fa91:	xchg   esi,eax
  42fa92:	inc    DWORD PTR [ebx-0x2c0022]
  42fa98:	dec    DWORD PTR [ecx+0x0]
  42fa9b:	inc    DWORD PTR ds:0x83095983
  42faa1:	cwde   
  42faa2:	inc    DWORD PTR [eax]
  42faa4:	loopne 0x42faa5
  42faa6:	shl    bl,cl
  42faa8:	(bad)  
  42faa9:	clc    
  42faaa:	add    bh,bh
  42faac:	push   eax
  42faad:	inc    DWORD PTR [edx+0xd700ad]
  42fab3:	(bad)  
  42fab4:	stc    
  42fab5:	call   DWORD PTR [edx]
  42fab7:	mov    esi,0x83ff5789
  42fabc:	xor    edi,edi
  42fabe:	mov    ch,BYTE PTR [edi]
  42fac0:	add    BYTE PTR [eax],ch
  42fac2:	(bad)  
  42fac3:	(bad)  
  42fac4:	call   0xffc658c8
  42fac9:	and    edi,edi
  42facb:	jmp    DWORD PTR [ebx]
  42facd:	jmp    DWORD PTR [ebx]
  42facf:	jbe    0x42fad0
  42fad1:	mov    edi,?
  42fad3:	dec    DWORD PTR [edi-0x7cb5a500]
  42fad9:	push   eax
  42fada:	(bad)  
  42fadb:	call   FWORD PTR [edi+edi*8-0x5b008033]
  42fae2:	(bad)  
  42fae3:	(bad)  
  42fae4:	cmp    bh,bh
  42fae6:	sar    ebx,1
  42fae8:	add    BYTE PTR [edi+edi*8-0x1],bl
  42faec:	mov    dl,0xff
  42faee:	neg    dl
  42faf0:	(bad)  
  42faf1:	in     eax,dx
  42faf2:	(bad)  
  42faf3:	inc    ebx
  42faf5:	jmp    DWORD PTR [edi+0x3d]
  42faf8:	jmp    DWORD PTR [ecx+0x0]
  42fafb:	add    al,al
  42fafd:	call   DWORD PTR [eax]
  42faff:	mov    ecx,DWORD PTR [ecx-0x7800002e]
  42fb05:	add    cl,bh
  42fb07:	or     BYTE PTR [eax],al
  42fb09:	test   bh,bh
  42fb0b:	(bad)  
  42fb0c:	cld    
  42fb0d:	call   FWORD PTR [ebx+0x6dff0e]
  42fb13:	add    BYTE PTR [esi-0x1],dl
  42fb16:	xor    al,0x85
  42fb18:	push   DWORD PTR [edi-0x530001]
  42fb1e:	rcl    BYTE PTR [ebp-0x3333f401],0x1
  42fb25:	add    BYTE PTR [esi-0x16],dl
  42fb28:	add    BYTE PTR [edx-0x1],ah
  42fb2b:	sbb    DWORD PTR [edi+0x0],0x36
  42fb2f:	xor    DWORD PTR [eax],eax
  42fb31:	fwait
  42fb32:	(bad)  
  42fb33:	push   DWORD PTR [ebp-0x1]
  42fb36:	jge    0x42fb4a
  42fb38:	int3   
  42fb39:	mov    edi,edi
  42fb3b:	jmp    DWORD PTR [ecx+0x47b3cc]
  42fb41:	dec    WORD PTR [ecx-0x48b80034]
  42fb48:	add    BYTE PTR [esi],dl
  42fb4a:	(bad)  
  42fb4b:	call   FWORD PTR [eax+eax*1]
  42fb4e:	sbb    al,0x23
  42fb50:	call   DWORD PTR [ebp-0x34]
  42fb53:	cmp    DWORD PTR [edi],0xffffffff
  42fb56:	ficom  DWORD PTR [eax-0x1]
  42fb59:	xchg   ecx,eax
  42fb5a:	inc    DWORD PTR [ebx-0x186aff7b]
  42fb60:	jmp    DWORD PTR [edx-0x76700000]
  42fb66:	mov    bl,0x5f
  42fb68:	add    cl,dl
  42fb6a:	(bad)  
  42fb6b:	call   FWORD PTR [ebp+0x0]
  42fb6e:	mov    bh,0xfd
  42fb70:	mov    esp,edi
  42fb72:	inc    DWORD PTR [eax]
  42fb74:	(bad)  
  42fb75:	inc    DWORD PTR [ebx]
  42fb77:	jae    0x42fb79
  42fb79:	cmc    
  42fb7a:	cmp    edi,0xfffffff2
  42fb7d:	(bad)  
  42fb7e:	cli    
  42fb7f:	inc    ecx
  42fb80:	cmp    DWORD PTR ds:0xc8ff00,0xffffffe8
  42fb87:	(bad)  
  42fb88:	dec    DWORD PTR [ebp+0x0]
  42fb8b:	dec    DWORD PTR [edi-0x1]
  42fb8e:	mov    ds:0xffe000e1,al
  42fb93:	add    BYTE PTR [edx],bh
  42fb95:	mov    DWORD PTR [edi],edi
  42fb97:	mov    eax,ds:0xff83d9ff
  42fb9c:	sar    edi,1
  42fb9e:	lods   al,BYTE PTR ds:[esi]
  42fb9f:	push   es
  42fba0:	add    dh,dl
  42fba2:	(bad)  
  42fba3:	(bad)  
  42fba4:	mov    ebx,0x74feff
  42fba9:	xchg   edi,eax
  42fbaa:	(bad)  
  42fbab:	jmp    FWORD PTR [esi]
  42fbad:	and    DWORD PTR [ebx+0x7e],0xffffffff
  42fbb1:	dec    edx
  42fbb2:	cmp    edi,0xffffffb6
  42fbb5:	call   FWORD PTR [ecx-0x3476bc]
  42fbbb:	call   DWORD PTR [ecx+0x869cc]
  42fbc1:	mov    edi,edi
  42fbc3:	(bad)  
  42fbc4:	out    dx,al
  42fbc5:	add    BYTE PTR [edx],ch
  42fbc7:	inc    ebx
  42fbc8:	xor    DWORD PTR [edi],0xffffff83
  42fbcb:	call   edx
  42fbcd:	add    BYTE PTR [ecx],al
  42fbcf:	push   ss
  42fbd0:	inc    DWORD PTR [esi+0x0]
  42fbd3:	sub    DWORD PTR ds:0xff547200,0x6
  42fbda:	inc    DWORD PTR [eax]
  42fbdc:	add    BYTE PTR [eax],al
  42fbde:	les    eax,FWORD PTR ds:0xff0045ff
  42fbe4:	pusha  
  42fbe5:	add    BYTE PTR [eax+0x55],bl
  42fbe8:	xor    DWORD PTR [edx+0x0],0xffffffff
  42fbec:	repnz inc ebx
  42fbef:	test   bh,bh
  42fbf1:	das    
  42fbf2:	(bad)  
  42fbf3:	call   FWORD PTR [eax+eax*1+0x5d]
  42fbf7:	pop    ebp
  42fbf8:	push   DWORD PTR [edi+edi*8-0x1]
  42fbfc:	add    esp,ecx
  42fbfe:	dec    esi
  42fbff:	fiadd  WORD PTR [eax]
  42fc01:	iret   
  42fc02:	add    BYTE PTR [ebx-0x4a22ff9d],al
  42fc08:	add    BYTE PTR [edi-0x3398007d],cl
  42fc0e:	push   ss
  42fc0f:	pop    ds
  42fc10:	(bad)  
  42fc11:	mov    esi,0xccf3ffff
  42fc16:	add    bl,BYTE PTR [edx+0x0]
  42fc19:	push   0xffffffff
  42fc1b:	add    BYTE PTR [eax-0x1],bh
  42fc1e:	mov    edx,0xcf833c
  42fc23:	int3   
  42fc24:	cmp    eax,0x83d79289
  42fc29:	jbe    0x42fc2b
  42fc2b:	(bad)  
  42fc2c:	jnp    0x42fbb1
  42fc2e:	jbe    0x42fc38
  42fc30:	mov    DWORD PTR [edx],edx
  42fc32:	add    bh,bh
  42fc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc35:	add    BYTE PTR [eax],ah
  42fc37:	data16 add ch,ah
  42fc3a:	cmp    edi,0xffffff82
  42fc3d:	and    DWORD PTR [edx-0x8000aa],0xffffff83
  42fc44:	test   DWORD PTR [ecx+0x61001b32],ecx
  42fc4a:	inc    DWORD PTR [eax]
  42fc4c:	nop
  42fc4d:	add    BYTE PTR [edi+0x63],cl
  42fc50:	add    BYTE PTR [ecx+0x0],al
  42fc53:	int3   
  42fc54:	dec    esi
  42fc55:	(bad)  
  42fc56:	jg     0x42fc15
  42fc58:	add    BYTE PTR [edx],dh
  42fc5a:	cmp    edi,0xffffff91
  42fc5d:	inc    DWORD PTR [edx+edi*8-0xda01]
  42fc64:	pop    ss
  42fc65:	call   FWORD PTR [esp+eax*8]
  42fc68:	inc    eax
  42fc6a:	(bad)  
  42fc6b:	jmp    FWORD PTR [ebx]
  42fc6d:	jmp    DWORD PTR [ecx-0x7a]
  42fc70:	add    al,ah
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	sub    BYTE PTR [ebx-0x26ffcd9a],al
  42fc7a:	(bad)  
  42fc7b:	push   ebp
  42fc7d:	dec    ebx
  42fc7f:	xchg   esp,eax
  42fc80:	(bad)  
  42fc81:	jmp    0x42fc06
  42fc83:	jmp    FWORD PTR [eax+eax*1]
  42fc86:	pop    ebx
  42fc87:	jo     0x42fc55
  42fc89:	or     al,0x0
  42fc8b:	mov    edx,eax
  42fc8d:	add    bl,dl
  42fc8f:	mov    dl,0x83
  42fc91:	jmp    0x123fc62
  42fc96:	ds pop edi
  42fc98:	add    BYTE PTR [ecx-0x1],bh
  42fc9b:	jmp    DWORD PTR [eax-0x1]
  42fc9e:	jg     0x42fc78
  42fca0:	call   DWORD PTR [edi]
  42fca2:	(bad)  
  42fca3:	call   FWORD PTR [ecx]
  42fca5:	(bad)  
  42fca6:	cmp    ebp,DWORD PTR ds:0x8b89
  42fcac:	in     eax,0xcc
  42fcae:	lock clc 
  42fcb0:	add    BYTE PTR [edi+0x0],bl
  42fcb3:	call   FWORD PTR [esi-0x656d34]
  42fcb9:	dec    ebx
  42fcba:	mov    DWORD PTR [eax],eax
  42fcbc:	int    0xff
  42fcbe:	and    BYTE PTR [eax+eax*1],ah
  42fcc1:	arpl   sp,cx
  42fcc3:	add    BYTE PTR [eax-0x1],bh
  42fcc6:	cs sub eax,0xffff4100
  42fccc:	ins    BYTE PTR es:[edi],dx
  42fccd:	call   FWORD PTR [ecx-0x400ef]
  42fcd3:	dec    DWORD PTR [esi+0x0]
  42fcd6:	jmp    0x92ff:0x89b3ffe9
  42fcdd:	add    BYTE PTR [edx-0x7b],bl
  42fce0:	call   FWORD PTR [esi-0x4f007d]
  42fce6:	(bad)  
  42fce7:	and    eax,DWORD PTR [eax]
  42fce9:	or     DWORD PTR [ebx-0x1c765500],eax
  42fcef:	and    bh,bh
  42fcf1:	sub    al,0x0
  42fcf3:	dec    DWORD PTR [eax+0x863d89]
  42fcf9:	gs (bad) 
  42fcfb:	(bad)  
  42fcfc:	sti    
  42fcfd:	(bad)  
  42fcfe:	cli    
  42fcff:	repz sbb DWORD PTR [ecx+0x75ff00],0xffffffa5
  42fd07:	add    DWORD PTR [eax],0xfffffffc
  42fd0a:	mov    edi,edi
  42fd0c:	add    eax,0xffb759ff
  42fd11:	push   ecx
  42fd12:	add    BYTE PTR [eax],al
  42fd14:	xchg   esp,eax
  42fd15:	push   DWORD PTR [ecx+0xb1ff88]
  42fd1b:	int3   
  42fd1c:	pop    esp
  42fd1d:	adc    DWORD PTR [eax+ecx*2-0x1],0xffffffd0
  42fd22:	add    bh,bh
  42fd24:	pop    ebx
  42fd25:	call   DWORD PTR [ebx-0x6e]
  42fd28:	push   DWORD PTR [esi-0xe1ff7d]
  42fd2e:	mov    ds:0xff99ccc6,al
  42fd33:	jmp    DWORD PTR [ebx]
  42fd35:	call   FWORD PTR [ebp-0x21]
  42fd38:	jmp    FWORD PTR [edi+0x0]
  42fd3b:	add    BYTE PTR [ebp-0x1],dh
  42fd3e:	mov    esi,0xcc3e89ad
  42fd43:	add    BYTE PTR [eax+eax*1+0x60ff4743],bh
  42fd4a:	or     DWORD PTR [ecx-0x90933fb],0xffffffff
  42fd51:	leave  
  42fd52:	dec    esp
  42fd54:	mov    ds:0x83e0dc00,al
  42fd59:	adc    al,0x83
  42fd5b:	add    ch,al
  42fd5d:	jmp    DWORD PTR [ebx]
  42fd5f:	mov    cl,0xff
  42fd61:	iret   
  42fd62:	(bad)  
  42fd63:	push   DWORD PTR [eax-0x4e4d01]
  42fd69:	dec    esi
  42fd6a:	(bad)  
  42fd6b:	(bad)  
  42fd6c:	fld    DWORD PTR [ebx-0x377cac30]
  42fd72:	int3   
  42fd73:	inc    edx
  42fd75:	(bad)  
  42fd76:	jnp    0x42fd28
  42fd78:	sbb    ebp,0xffffffcc
  42fd7b:	call   eax
  42fd7d:	call   DWORD PTR [esi]
  42fd7f:	sub    bh,bh
  42fd81:	sar    edi,1
  42fd83:	mov    DWORD PTR [esi-0x762a4701],ebp
  42fd89:	sbb    al,0x0
  42fd8b:	add    dh,bl
  42fd8d:	push   DWORD PTR [ecx+ecx*4-0x76bf00]
  42fd94:	xor    BYTE PTR [ecx-0x29003aef],cl
  42fd9a:	inc    DWORD PTR [ebx-0x6065769c]
  42fda0:	call   FWORD PTR [edx-0x1]
  42fda3:	or     DWORD PTR [edi+0xedb300],0xffffffc6
  42fdaa:	dec    DWORD PTR [ecx-0x4ed2001e]
  42fdb0:	push   ebp
  42fdb2:	inc    DWORD PTR [eax]
  42fdb4:	mov    BYTE PTR [eax],0xd5
  42fdb7:	loopne 0x42fdb9
  42fdb9:	out    dx,eax
  42fdba:	add    BYTE PTR [eax],al
  42fdbc:	and    al,0xff
  42fdbe:	pop    es
  42fdbf:	fiadd  DWORD PTR [ebx-0x48000068]
  42fdc5:	call   FWORD PTR [ebp+0xedff00]
  42fdcb:	add    BYTE PTR [eax-0x1],ch
  42fdce:	outs   dx,BYTE PTR ds:[esi]
  42fdcf:	jb     0x42fdd0
  42fdd1:	(bad)  
  42fdd2:	inc    DWORD PTR [eax]
  42fdd4:	jae    0x42fdd5
  42fdd6:	fst    st(3)
  42fdd8:	inc    DWORD PTR [eax-0x7cc87700]
  42fdde:	xchg   edx,eax
  42fddf:	add    eax,DWORD PTR [eax]
  42fde1:	outs   dx,BYTE PTR ds:[esi]
  42fde2:	(bad)  
  42fde3:	call   FWORD PTR [eax-0x76e7a700]
  42fde9:	les    eax,FWORD PTR [ebx+0x54ff5fcc]
  42fdef:	aaa    
  42fdf0:	mov    DWORD PTR [edi+edi*8+0x0],edi
  42fdf4:	retf   
  42fdf5:	add    BYTE PTR [ebp-0x53],ch
  42fdf8:	add    eax,0x0
  42fdfb:	call   FWORD PTR [ebp+0x0]
  42fdfe:	or     ecx,eax
  42fe00:	call   esp
  42fe02:	add    BYTE PTR [eax],al
  42fe04:	inc    eax
  42fe05:	int3   
  42fe06:	adc    eax,0xffc8ff94
  42fe0b:	add    BYTE PTR [ebp-0x34],dl
  42fe0e:	dec    BYTE PTR [edi]
  42fe10:	dec    esp
  42fe12:	dec    esp
  42fe14:	test   DWORD PTR [eax],0xefff7095
  42fe1a:	add    bh,bh
  42fe1c:	jle    0x42fe1e
  42fe1e:	sar    BYTE PTR [ecx-0x1],0xb8
  42fe22:	cmp    edi,0xffffffe6
  42fe25:	dec    DWORD PTR [esi+0x3e]
  42fe28:	add    dl,cl
  42fe2a:	inc    DWORD PTR [eax]
  42fe2c:	pushf  
  42fe2d:	push   ecx
  42fe2f:	jo     0x42fdba
  42fe31:	xchg   ecx,eax
  42fe32:	inc    DWORD PTR [ebx+0x6717006b]
  42fe38:	call   DWORD PTR [edx]
  42fe3a:	add    BYTE PTR [eax],al
  42fe3c:	inc    edi
  42fe3d:	or     DWORD PTR [ebp+0xce00cc],0xffffff89
  42fe44:	dec    eax
  42fe45:	push   DWORD PTR [ecx]
  42fe47:	test   al,0xff
  42fe49:	add    eax,DWORD PTR [eax]
  42fe4b:	jmp    edx
  42fe4d:	sbb    DWORD PTR [eax],0x60
  42fe50:	dec    DWORD PTR [eax-0x77]
  42fe53:	add    BYTE PTR [edi+edi*8+0x39],ah
  42fe57:	cmc    
  42fe58:	int3   
  42fe59:	dec    ecx
  42fe5a:	(bad)  
  42fe5b:	jmp    DWORD PTR [eax]
  42fe5d:	push   ebx
  42fe5f:	inc    eax
  42fe60:	dec    ebp
  42fe62:	cmp    edi,0xffffff9d
  42fe65:	call   FWORD PTR [ebp-0x7cdc7655]
  42fe6b:	add    BYTE PTR [eax-0x1],dh
  42fe6e:	icebp  
  42fe6f:	or     edi,edi
  42fe71:	in     eax,0xff
  42fe73:	add    BYTE PTR [esi],al
  42fe75:	call   ecx
  42fe77:	inc    eax
  42fe78:	int3   
  42fe79:	dec    sp
  42fe7c:	mov    eax,DWORD PTR [ebx+0x5cff96f4]
  42fe82:	add    ah,cl
  42fe84:	pop    ds
  42fe85:	jmp    FWORD PTR [esi-0x32]
  42fe88:	add    BYTE PTR [ebx],bh
  42fe8a:	cmp    edi,0xfffffffa
  42fe8d:	push   DWORD PTR [edx+0x2f]
  42fe90:	(bad)  
  42fe91:	(bad)  
  42fe92:	inc    DWORD PTR [eax]
  42fe94:	pop    ss
  42fe95:	add    ah,cl
  42fe97:	repnz dec DWORD PTR [edi]
  42fe9a:	or     DWORD PTR [ecx-0x69a0ff92],0x0
  42fea1:	loop   0x42fea2
  42fea3:	add    BYTE PTR [eax+0x0],al
  42fea6:	add    DWORD PTR [ecx+0xff04cc],eax
  42feac:	inc    ebx
  42fead:	sub    DWORD PTR [esi-0xbd007b],0xffffff89
  42feb4:	in     al,dx
  42feb5:	add    DWORD PTR [ecx],0x6a
  42feb8:	add    BYTE PTR [eax],ah
  42feba:	inc    DWORD PTR [eax]
  42febc:	mov    edi,0x830f6700
  42fec1:	add    eax,0xff17ffcc
  42fec6:	sbb    ecx,ebx
  42fec8:	add    BYTE PTR [ebx],bl
  42feca:	mov    edi,edi
  42fecc:	lds    eax,FWORD PTR [eax]
  42fece:	jnp    0x42feee
  42fed0:	(bad)  
  42fed1:	jle    0x42fed2
  42fed3:	inc    DWORD PTR [edi+edi*8-0x7b]
  42fed7:	dec    edx
  42fed8:	jmp    FWORD PTR [ebp-0x7cbb0077]
  42fede:	xor    al,BYTE PTR [esi]
  42fee0:	(bad)  
  42fee1:	(bad)  
  42fee2:	inc    DWORD PTR [ebx+0x1500cc17]
  42fee8:	jmp    DWORD PTR [edi]
  42feea:	or     esp,0xffffff8a
  42feed:	add    BYTE PTR [ebx],al
  42feef:	jge    0x42fef0
  42fef1:	nop
  42fef2:	cmp    edi,0xffffffb2
  42fef5:	inc    DWORD PTR ds:0xb7ffdc
  42fefb:	sbb    DWORD PTR [ebx-0xe33c01],0xffffffcd
  42ff02:	inc    DWORD PTR [eax]
  42ff04:	or     edi,edi
  42ff06:	mov    dh,0xfe
  42ff08:	int3   
  42ff09:	out    0x0,al
  42ff0b:	add    BYTE PTR [ebp-0xf9e700],bl
  42ff11:	push   0xffffffff
  42ff13:	add    BYTE PTR [esi-0x78e577],bl
  42ff19:	in     al,0xff
  42ff1b:	add    BYTE PTR [ecx-0x253001],ch
  42ff21:	lock dec esp
  42ff24:	retf   
  42ff25:	jmp    FWORD PTR [ebx]
  42ff27:	push   edx
  42ff28:	(bad)  
  42ff29:	jmp    0xebfe2e
  42ff2e:	mov    ebp,0xff6dff7e
  42ff33:	add    BYTE PTR [ebp-0x7d],bh
  42ff36:	cwde   
  42ff37:	sub    bh,bh
  42ff39:	or     esp,0xccff3200
  42ff3f:	std    
  42ff40:	add    BYTE PTR [eax],bh
  42ff42:	add    BYTE PTR [eax],al
  42ff44:	inc    DWORD PTR ds:[ecx+0x17]
  42ff48:	call   FWORD PTR [ecx-0x1]
  42ff4b:	add    BYTE PTR [edi],ch
  42ff4d:	int3   
  42ff4e:	jbe    0x42ff0d
  42ff50:	add    BYTE PTR [esi+0x7100ff],al
  42ff56:	sub    edx,DWORD PTR [ecx+ecx*4+0x1b]
  42ff5a:	or     esp,0x6b
  42ff5d:	add    cl,ah
  42ff5f:	push   0x83832bff
  42ff64:	adc    al,0xcc
  42ff66:	fadd   DWORD PTR ds:[ebx+0x4883ffbb]
  42ff6d:	(bad)  
  42ff6e:	cld    
  42ff6f:	in     eax,0x0
  42ff71:	mov    esp,0x468300
  42ff76:	loop   0x42ffb3
  42ff78:	mov    DWORD PTR [edx+0xd9ffff],eax
  42ff7e:	mov    ds:0xfff3ffd9,al
  42ff83:	jmp    FWORD PTR [ebx-0xdc4401]
  42ff89:	inc    BYTE PTR [eax]
  42ff8b:	add    cl,dh
  42ff8d:	add    BYTE PTR [ecx-0x57fff0],bh
  42ff93:	int3   
  42ff94:	sub    edi,edi
  42ff96:	xor    BYTE PTR [esi+0xccc1ff],0xa8
  42ff9d:	add    BYTE PTR [ebx-0x5b],dh
  42ffa0:	(bad)  
  42ffa1:	fadd   DWORD PTR [eax]
  42ffa3:	dec    edi
  42ffa5:	int3   
  42ffa6:	dec    ebp
  42ffa7:	push   ss
  42ffa8:	adc    DWORD PTR [esi],0xffffffff
  42ffab:	int3   
  42ffac:	mov    ebx,0xff29c500
  42ffb1:	pusha  
  42ffb2:	int3   
  42ffb3:	add    BYTE PTR [edx],cl
  42ffb5:	add    BYTE PTR [ebx],cl
  42ffb7:	push   ss
  42ffb8:	add    BYTE PTR ds:0xcc7eff00,bh
  42ffbe:	fmul   DWORD PTR [ebx-0x765701]
  42ffc4:	hlt    
  42ffc5:	jmp    FWORD PTR ds:0xffffff6b
  42ffcb:	adc    DWORD PTR [edx],0xffffffcc
  42ffce:	add    BYTE PTR [ecx-0x7c002d01],dh
  42ffd4:	imul   edi,edi,0xffffff9e
  42ffd7:	xchg   esp,eax
  42ffd8:	push   DWORD PTR [esi]
  42ffda:	mov    edi,edi
  42ffdc:	cmp    eax,0xff079b83
  42ffe1:	sub    eax,0xff8800ff
  42ffe6:	clc    
  42ffe7:	mov    ch,0x0
  42ffe9:	adc    eax,0xff8f83ff
  42ffee:	xchg   esp,eax
  42ffef:	les    eax,FWORD PTR [ebx+0x62ffccf1]
  42fff5:	call   FWORD PTR [ebp-0x7600ff]
  42fffb:	call   FWORD PTR [ebx]
  42fffd:	push   DWORD PTR [esi]
  42ffff:	or     edi,edi
  430001:	rol    DWORD PTR [ebx+0x1ccc3cff],cl
  430007:	mov    esi,0xffc800
  43000c:	push   esp
  43000d:	int3   
  43000e:	jl     0x430016
  430010:	adc    DWORD PTR [ebx-0x1],0xffffffcc
  430014:	mov    bl,0xff
  430016:	mov    cs,WORD PTR [esi]
  430018:	add    BYTE PTR [ebp-0x33e90001],al
  43001e:	add    ebx,DWORD PTR [edi]
  430020:	add    BYTE PTR [eax+0x0],ah
  430023:	cmp    ebx,0x0
  430026:	lea    edx,[esi+0x0]
  430029:	pusha  
  43002a:	inc    DWORD PTR [eax]
  43002c:	mov    esp,0xeb8200
  430031:	(bad)  
  430032:	inc    DWORD PTR [eax]
  430034:	outs   dx,BYTE PTR ds:[esi]
  430035:	sub    DWORD PTR [esi-0x3a],0xffffff83
  430039:	and    DWORD PTR [eax],eax
  43003b:	(bad)  
  43003c:	fdivr  st,st(7)
  43003e:	cmp    DWORD PTR [ebx+0xcccd00],esi
  430044:	mov    ds:0xcc863400,al
  430049:	fadd   QWORD PTR [ebx-0x57ffea34]
  43004f:	fs (bad) 
  430051:	fcmove st,st(4)
  430053:	add    cl,ch
  430055:	adc    DWORD PTR [eax],0xffffffcd
  430058:	and    DWORD PTR [eax-0x4007d],0x37
  43005f:	jmp    0xffcd:0x898925ff
  430066:	sbb    BYTE PTR [esi],al
  430068:	push   DWORD PTR [esi+0xb5ff89]
  43006e:	xor    al,0xfb
  430070:	mov    DWORD PTR [edx-0x7d],ebp
  430073:	(bad)  
  430074:	jge    0x430076
  430076:	pop    ds
  430077:	ror    ah,0x78
  43007a:	add    BYTE PTR [eax],al
  43007c:	cmp    al,0xff
  43007e:	jo     0x4300c8
  430080:	(bad)  
  430081:	inc    DWORD PTR ds:[eax]
  430084:	push   DWORD PTR gs:[ebp-0x69]
  430088:	add    DWORD PTR [edi+0x0],0xffffffff
  43008c:	test   BYTE PTR [ecx+0x8008b94],0xff
  430093:	call   FWORD PTR [ecx+0xfd54ff]
  430099:	or     bh,bh
  43009b:	call   DWORD PTR [ecx-0x1]
  43009e:	enter  0xff76,0xa9
  4300a2:	add    bh,bh
  4300a4:	dec    eax
  4300a5:	add    BYTE PTR [ecx+0x65],ah
  4300a8:	int3   
  4300a9:	push   0x0
  4300ab:	add    BYTE PTR [ebp-0x7d],bl
  4300ae:	inc    ecx
  4300af:	lods   eax,DWORD PTR ds:[esi]
  4300b0:	dec    DWORD PTR [ebp-0x1]
  4300b3:	(bad)  
  4300b4:	cli    
  4300b5:	dec    DWORD PTR [esi-0x57]
  4300b8:	add    bh,dh
  4300ba:	mov    DWORD PTR [ecx-0x3c67ffff],ecx
  4300c0:	call   edi
  4300c2:	inc    DWORD PTR [eax]
  4300c4:	nop
  4300c5:	int3   
  4300c6:	es sti 
  4300c8:	and    ecx,0xffffffff
  4300cb:	mov    DWORD PTR ds:0x7281ff,esi
  4300d1:	push   ss
  4300d2:	(bad)  
  4300d3:	call   edi
  4300d5:	dec    DWORD PTR [ebp+0x1d8345]
  4300db:	push   DWORD PTR [ebx]
  4300dd:	add    BYTE PTR [eax+0x1],dl
  4300e0:	call   DWORD PTR [esi+0x0]
  4300e3:	push   edi
  4300e5:	int3   
  4300e6:	scas   eax,DWORD PTR es:[edi]
  4300e7:	mov    esp,cs
  4300e9:	and    eax,DWORD PTR [eax]
  4300eb:	jmp    FWORD PTR [ebx+0xc14c83]
  4300f1:	lahf   
  4300f2:	add    BYTE PTR [eax],al
  4300f4:	xchg   ecx,eax
  4300f5:	jmp    FWORD PTR [eax-0x76a000be]
  4300fb:	add    BYTE PTR [esi+0x2533ff],dl
  430101:	sbb    edi,edi
  430103:	add    BYTE PTR [ebp+0x0],dh
  430106:	out    dx,al
  430107:	(bad)  
  430109:	lods   al,BYTE PTR ds:[esi]
  43010a:	mov    DWORD PTR [eax],eax
  43010c:	pop    ds
  43010d:	push   DWORD PTR [ecx+0x1dcc19]
  430113:	xor    DWORD PTR ds:0xff21edff,0xffffffbf
  43011a:	dec    DWORD PTR [ecx+0x6f790014]
  430120:	add    DWORD PTR [esi+0x0],0x0
  430124:	cmp    bh,0xea
  430127:	xchg   bh,bh
  430129:	jno    0x4300ae
  43012b:	jmp    DWORD PTR [ebx]
  43012d:	dec    DWORD PTR [eax+0xc08948]
  430133:	call   DWORD PTR [edi-0x1]
  430136:	cmp    eax,0x9ff80
  43013b:	int3   
  43013c:	nop
  43013d:	add    BYTE PTR [ecx-0xf400eb],ah
  430143:	add    BYTE PTR [edi-0xebf800],cl
  430149:	and    eax,DWORD PTR [eax]
  43014b:	add    BYTE PTR [ebp+0xfc6683],bh
  430151:	sub    BYTE PTR [eax],al
  430153:	jmp    FWORD PTR [eax-0x1]
  430156:	test   eax,0xd6ffad
  43015b:	call   FWORD PTR [edi-0x7c5fd377]
  430161:	add    edi,edi
  430163:	int3   
  430164:	add    bh,bh
  430166:	mov    ds:0x89d9ff4c,eax
  43016b:	jmp    DWORD PTR [ebx]
  43016d:	mov    ebx,edi
  43016f:	pop    ebx
  430170:	push   DWORD PTR [edx-0x450100]
  430176:	iret   
  430177:	mov    ecx,0xffff8983
  43017c:	pop    esp
  43017d:	push   DWORD PTR [ecx-0x58]
  430180:	sub    DWORD PTR [esi-0xbf3301],0xffffffe0
  430187:	(bad)  
  430188:	call   FWORD PTR ds:0x6800ff
  43018e:	fcom   QWORD PTR ds:0xff003aff
  430194:	(bad)  
  430195:	(bad)  
  430196:	sti    
  430197:	xchg   ah,cl
  430199:	fdivr  st,st(7)
  43019b:	add    DWORD PTR [eax-0x763e9b01],0xffffff85
  4301a2:	inc    DWORD PTR [eax]
  4301a4:	stc    
  4301a5:	or     ebx,0xffffffa4
  4301a8:	add    al,bh
  4301aa:	add    DWORD PTR [eax],0x7a
  4301ad:	inc    ebp
  4301af:	adc    al,0x89
  4301b1:	mov    WORD PTR [eax],es
  4301b3:	inc    eax
  4301b5:	add    BYTE PTR [edi*4-0x2701],dh
  4301bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301bd:	add    BYTE PTR [edx+0x5e],cl
  4301c0:	add    BYTE PTR [eax-0xa97c01],ah
  4301c6:	rol    BYTE PTR es:[ebx+0x883006e],cl
  4301cd:	int3   
  4301ce:	cmc    
  4301cf:	imul   edi,edi,0x2289004e
  4301d5:	add    bl,dl
  4301d7:	dec    eax
  4301d8:	inc    DWORD PTR [ebx-0x1]
  4301db:	jmp    FWORD PTR [eax-0x1]
  4301de:	sar    BYTE PTR [edx+0x0],0x81
  4301e2:	(bad)  
  4301e3:	inc    edi
  4301e5:	int3   
  4301e6:	mov    dl,0xfa
  4301e8:	mov    esp,edi
  4301ea:	add    BYTE PTR [eax],al
  4301ec:	aas    
  4301ed:	add    cl,al
  4301ef:	xchg   bh,bh
  4301f1:	ss mov edi,edi
  4301f4:	inc    DWORD PTR ds:[ebp+0x43]
  4301f8:	int3   
  4301f9:	call   0xccb500fe
  4301fe:	mov    ch,0x66
  430200:	add    BYTE PTR [esi],dl
  430202:	inc    DWORD PTR [ebx-0x62500e1]
  430208:	jmp    DWORD PTR [eax]
  43020a:	mov    DWORD PTR [eax],eax
  43020c:	mov    dl,0x83
  43020e:	out    dx,al
  43020f:	sub    al,BYTE PTR [eax]
  430211:	stos   BYTE PTR es:[edi],al
  430212:	mov    DWORD PTR [ecx+0x26d3ffe9],ecx
  430218:	xor    DWORD PTR [ebx-0x33bb0001],0xffffff9e
  43021f:	popa   
  430220:	xor    DWORD PTR [edi+edi*8+0x7500e6ff],0x7f
  430228:	dec    DWORD PTR [edx+0xa60000]
  43022e:	sub    ebx,esp
  430230:	xor    DWORD PTR [eax+eax*1],0xffffffff
  430234:	or     DWORD PTR [eax],eax
  430236:	mov    ds:0x8934ff0f,eax
  43023b:	call   DWORD PTR [eax]
  43023d:	add    BYTE PTR [eax+0xee006c],dl
  430243:	(bad)  
  430244:	jmp    0xffe10849
  430249:	or     al,0x0
  43024b:	int3   
  43024c:	jmp    FWORD PTR gs:[edi+0x6]
  430250:	add    BYTE PTR [edi-0xdf0001],dh
  430256:	xchg   ebp,eax
  430257:	clc    
  430258:	add    ah,dh
  43025a:	inc    DWORD PTR [ebx+0x4589ff15]
  430260:	add    BYTE PTR [esi-0xde0001],bh
  430266:	push   0xffffffec
  430268:	mov    DWORD PTR [eax-0x7d],ecx
  43026b:	push   DWORD PTR [eax+eax*1+0x72]
  43026f:	in     al,dx
  430270:	add    BYTE PTR [ebx],cl
  430272:	dec    DWORD PTR [ecx-0x7f50006e]
  430278:	add    BYTE PTR [eax],ah
  43027a:	mov    DWORD PTR [eax],eax
  43027c:	sub    ecx,esp
  43027e:	push   esp
  43027f:	retf   0xb400
  430282:	(bad)  
  430283:	jmp    DWORD PTR ds:0x815500
  430289:	mov    dh,0x0
  43028b:	jmp    DWORD PTR [edi-0x7d]
  43028e:	ret    
  43028f:	pop    es
  430290:	call   FWORD PTR [edi-0x1eff01]
  430296:	fisttp DWORD PTR [ebp-0x1]
  430299:	mov    esi,0xcc0bcccc
  43029e:	cmp    al,BYTE PTR [ecx-0x7c00847d]
  4302a4:	cmp    BYTE PTR [eax],al
  4302a6:	(bad)  
  4302a7:	pop    ss
  4302a8:	add    BYTE PTR [edx-0x2ff01],al
  4302ae:	aad    0x20
  4302b0:	(bad)  
  4302b1:	mov    edi,0xff3bffff
  4302b6:	(bad)  
  4302b7:	retf   
  4302b8:	add    dl,ch
  4302ba:	inc    DWORD PTR [ebx-0x4fd77c46]
  4302c0:	int3   
  4302c1:	push   esp
  4302c2:	add    bh,bh
  4302c4:	int    0xff
  4302c6:	pop    ebx
  4302c7:	inc    esi
  4302c8:	call   DWORD PTR [esp+ecx*8+0x34ff60ff]
  4302cf:	mov    al,BYTE PTR [eax]
  4302d1:	sbb    bh,bh
  4302d3:	dec    DWORD PTR [ebp-0x7d]
  4302d6:	ja     0x430332
  4302d8:	add    BYTE PTR [edx],ch
  4302da:	cmp    edi,0x75
  4302dd:	dec    DWORD PTR [ebp+0x47]
  4302e0:	jg     0x43032b
  4302e2:	call   FWORD PTR [esi+ebx*8]
  4302e5:	dec    esp
  4302e7:	(bad)  
  4302e8:	fimul  WORD PTR ds:0x1a3083
  4302ee:	or     DWORD PTR [ecx-0x75ff4baa],0xfffffff5
  4302f5:	inc    DWORD PTR [eax]
  4302f7:	mov    DWORD PTR [edx+0x4610ff98],esp
  4302fd:	mov    esp,ecx
  4302ff:	or     DWORD PTR [edx+0x56],0xffffffff
  430303:	popf   
  430304:	hlt    
  430305:	add    bh,bh
  430307:	sub    DWORD PTR [ebp-0x4048005e],0xffffff89
  43030e:	dec    esp
  430310:	sub    ebp,eax
  430312:	or     DWORD PTR [eax-0x1f],0x0
  430316:	dec    esp
  430318:	push   edi
  430319:	or     bh,bh
  43031b:	ja     0x4302a4
  43031d:	add    DWORD PTR [eax],0xffffffff
  430320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430321:	fiadd  WORD PTR [ebx-0x7600c436]
  430327:	add    BYTE PTR [ebp-0x65390060],al
  43032d:	add    bh,bh
  43032f:	int3   
  430330:	loop   0x4302d0
  430332:	(bad)  
  430333:	jmp    0x83438ce9
  430338:	jmp    0x2ba90407
  43033d:	inc    DWORD PTR [eax]
  43033f:	int3   
  430340:	fwait
  430341:	mov    ds:0x68f800,eax
  430346:	dec    DWORD PTR [ecx-0x7f0014ba]
  43034c:	jb     0x43034e
  43034e:	add    bh,bh
  430350:	lods   al,BYTE PTR ds:[esi]
  430351:	mov    edi,edi
  430353:	fistp  QWORD PTR [edi-0x1]
  430356:	add    ah,cl
  430358:	sbb    edi,DWORD PTR [eax+0x0]
  43035b:	fsub   QWORD PTR [esi+0x4ffffff]
  430361:	push   ds
  430362:	call   FWORD PTR [eax+edi*1-0x1]
  430366:	add    bh,bh
  430368:	scas   eax,DWORD PTR es:[edi]
  430369:	mov    ah,0xcc
  43036b:	rol    BYTE PTR [esi],cl
  43036d:	add    BYTE PTR [ebx-0x33c901],al
  430373:	cmp    ax,0xff83
  430377:	add    BYTE PTR [eax+0x2e],ah
  43037a:	xor    DWORD PTR [esi-0x43],0x25
  430381:	or     eax,0xffdd8c00
  430386:	add    BYTE PTR [eax],al
  430388:	pop    ecx
  430389:	xchg   DWORD PTR [ebx+0xcce502],eax
  43038f:	add    BYTE PTR [ebp-0x77c700dd],dl
  430395:	(bad)  
  430396:	inc    DWORD PTR [eax]
  430398:	jbe    0x43039b
  43039a:	dec    eax
  43039c:	fmulp  st(4),st
  43039e:	int3   
  43039f:	(bad)  
  4303a0:	jp     0x4303d0
  4303a2:	add    BYTE PTR [esi+edi*2-0x1],cl
  4303a6:	add    bh,bh
  4303a8:	push   ebx
  4303a9:	xchg   esp,eax
  4303aa:	dec    DWORD PTR [esp+eax*8]
  4303ad:	mov    DWORD PTR [ecx-0x7c971e01],ecx
  4303b3:	rcl    BYTE PTR [ebx-0x34],cl
  4303b6:	cmp    edi,0xffffffa0
  4303b9:	or     eax,0xcce592ff
  4303be:	mov    edi,edi
  4303c0:	fsubp  st(6),st
  4303c2:	call   DWORD PTR [esi-0x56]
  4303c5:	inc    DWORD PTR [eax]
  4303c7:	add    BYTE PTR [esi-0x15],bl
  4303ca:	mov    DWORD PTR [edx+0x8300ba],esi
  4303d0:	test   DWORD PTR [edi+edi*8-0x79],0xffff890f
  4303d8:	mov    al,ds:0xa9aff9b
  4303dd:	add    bh,bh
  4303df:	mov    DWORD PTR [edi+0x7ecf0021],esi
  4303e5:	inc    DWORD PTR [eax]
  4303e7:	add    BYTE PTR [ecx],ch
  4303e9:	call   DWORD PTR es:[ebx-0x78]
  4303ed:	add    bh,bh
  4303ef:	add    BYTE PTR [ecx+0x2d],ch
  4303f2:	add    BYTE PTR [edx],dl
  4303f4:	cmp    bh,0xff
  4303f7:	push   DWORD PTR [ebx-0x3f]
  4303fa:	(bad)  
  4303fb:	mov    ebp,0xcc0d
  430400:	sbb    edi,DWORD PTR [eax+0xfaa800]
  430406:	inc    DWORD PTR [eax]
  430408:	pop    edi
  430409:	pushf  
  43040a:	xor    DWORD PTR [edi],0x34
  43040d:	add    bh,bh
  43040f:	add    BYTE PTR [edx+0x4c20ccf5],al
  430415:	mov    edi,edi
  430417:	int3   
  430418:	in     al,dx
  430419:	push   ss
  43041a:	add    BYTE PTR [eax+0x3e],bh
  430420:	inc    edi
  430421:	xchg   esp,eax
  430422:	mov    DWORD PTR [esi],eax
  430424:	mov    eax,0xecff00ff
  430429:	mov    esi,0xff7573ff
  43042e:	add    BYTE PTR [ebx+0x5dcc5980],al
  430434:	out    0xff,eax
  430436:	mov    DWORD PTR [ecx-0x4100c54d],ecx
  43043c:	stc    
  43043d:	or     DWORD PTR [ecx-0xd62101],0x16
  430444:	jmp    0x430445
  430446:	dec    esp
  430448:	or     eax,0xdb8f009d
  43044d:	add    bh,bh
  43044f:	add    BYTE PTR [esi+0x6b],dl
  430452:	or     DWORD PTR [esi],0x49
  430455:	dec    DWORD PTR [ecx-0x707501]
  43045b:	data16 jl 0x4303e1
  43045e:	mov    DWORD PTR [ebx+0x7cffb3f6],eax
  430464:	idiv   edi
  430466:	add    BYTE PTR [eax],al
  430468:	push   cs
  430469:	sub    DWORD PTR [ebx-0x388b],eax
  43046f:	(bad)  
  430470:	mov    ebx,0x1442fff1
  430475:	cmp    edi,0xffffff83
  430478:	jo     0x430487
  43047a:	jmp    FWORD PTR [ebx+0x6c]
  43047d:	add    bh,bh
  43047f:	push   DWORD PTR [edx]
  430481:	xchg   ebx,eax
  430482:	add    edx,0xffffffc6
  430485:	(bad)  
  430486:	(bad)  
  430487:	jmp    esi
  430489:	mov    cl,0xff
  43048b:	jmp    ecx
  43048d:	add    BYTE PTR [ecx-0x999d01],cl
  430493:	xlat   BYTE PTR ds:[ebx]
  430494:	cs add bh,bh
  430497:	add    ch,cl
  430499:	stos   DWORD PTR es:[edi],eax
  43049a:	call   DWORD PTR [edi-0x2f]
  43049d:	or     esp,0xffffffff
  4304a0:	xchg   esi,eax
  4304a1:	stos   BYTE PTR es:[edi],al
  4304a2:	jmp    FWORD PTR [ebp+0x6f]
  4304a5:	inc    DWORD PTR [ebx+0x5d75ff]
  4304ab:	mov    DWORD PTR [ebx+0x0],edi
  4304ae:	inc    DWORD PTR [ebx-0x37cb81a]
  4304b4:	lahf   
  4304b5:	int3   
  4304b6:	add    DWORD PTR [ebx-0x4d7c5629],0x4e
  4304bd:	add    ah,cl
  4304bf:	int3   
  4304c0:	xchg   ebp,eax
  4304c1:	rol    BYTE PTR [eax],1
  4304c3:	ffreep st(4)
  4304c5:	inc    DWORD PTR [eax]
  4304c7:	push   DWORD PTR [ebp-0x6e]
  4304ca:	call   FWORD PTR [eax-0x7c33e6]
  4304d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4304d1:	bound  eax,QWORD PTR [eax]
  4304d3:	in     al,0x87
  4304d5:	add    bh,bh
  4304d7:	(bad)  
  4304d8:	jmp    DWORD PTR [esi]
  4304da:	(bad)  
  4304db:	cmp    ebp,DWORD PTR [edx-0x77]
  4304de:	(bad)  
  4304df:	(bad)  
  4304e0:	cmp    al,0x43
  4304e2:	mov    DWORD PTR ds:0x83ff83a7,ebp
  4304e8:	push   edx
  4304e9:	sbb    eax,0x273a00
  4304ee:	add    bh,bh
  4304f0:	mov    ecx,0x769fffb6
  4304f5:	(bad)  
  4304f6:	(bad)  
  4304f7:	call   DWORD PTR [eax+0x1094cc9c]
  4304fd:	inc    DWORD PTR [ebx-0x7c0d1a01]
  430503:	ret    
  430504:	inc    eax
  430505:	add    DWORD PTR [ebx-0xf90c77],0xffffff91
  43050c:	arpl   WORD PTR [ebx-0x6e8bff77],ax
  430512:	call   DWORD PTR [eax-0x767c000f]
  430518:	sbb    ah,dh
  43051a:	add    BYTE PTR [edi+eax*1],ch
  43051d:	inc    DWORD PTR [eax]
  43051f:	xor    DWORD PTR [edx-0x4587636],0xffffffff
  430526:	add    BYTE PTR [ecx+0x2b837c04],cl
  43052c:	add    BYTE PTR cs:[eax],al
  43052f:	sub    DWORD PTR [edi],0xffffffef
  430532:	add    BYTE PTR [edi-0x30],ah
  430535:	(bad)  
  430536:	(bad)  
  430537:	call   FWORD PTR [ebx-0x8fa006e]
  43053d:	inc    DWORD PTR [ebx-0xce1901]
  430543:	hlt    
  430544:	pop    edx
  430545:	add    DWORD PTR [eax],0xffffffff
  430548:	in     al,dx
  430549:	adc    eax,0xf2be83
  43054e:	(bad)  
  43054f:	call   FWORD PTR [edi+0x29b005d]
  430555:	add    BYTE PTR [ebx-0x7c9eab01],al
  43055b:	sbb    edi,DWORD PTR [ebx+eax*4]
  43055e:	(bad)  
  43055f:	call   FWORD PTR [ebp+0x5043ff2f]
  430565:	inc    DWORD PTR [eax]
  430567:	int3   
  430568:	xchg   edx,eax
  430569:	mov    bl,0xff
  43056b:	cmp    DWORD PTR ds:0x9f890089,0xfffffffb
  430572:	jmp    DWORD PTR [ecx+0x2f]
  430575:	add    bh,bh
  430577:	add    ch,dh
  430579:	in     al,dx
  43057a:	jmp    FWORD PTR [edi-0x33ff33d3]
  430580:	and    al,0xf7
  430582:	mov    DWORD PTR [ebp-0x55],edi
  430585:	dec    esp
  430587:	int3   
  430588:	lahf   
  430589:	fwait
  43058a:	jmp    DWORD PTR [ebx-0x14]
  43058d:	add    ah,cl
  43058f:	jmp    FWORD PTR [edi]
  430591:	cmp    DWORD PTR [ecx-0x29d6],ecx
  430597:	add    BYTE PTR [edx+0x723100d0],ch
  43059d:	dec    DWORD PTR [ecx+0x9fb0ff]
  4305a3:	xchg   DWORD PTR [esi-0x27000000],esp
  4305a9:	stc    
  4305aa:	and    DWORD PTR [edi+0x18],0x0
  4305ae:	add    BYTE PTR [ecx-0x1f0015ec],cl
  4305b4:	cmp    bh,0xff
  4305b7:	jmp    FWORD PTR [edx+0x7c3bcc5a]
  4305bd:	(bad)  
  4305be:	inc    DWORD PTR [ebx+0x45005ca9]
  4305c4:	es add bh,bh
  4305c7:	adc    eax,0x2e
  4305ca:	mov    DWORD PTR [edi-0x76ff7c89],esi
  4305d0:	jbe    0x43063e
  4305d2:	add    ch,bh
  4305d4:	repz int3 
  4305d6:	or     esp,0xffffffaf
  4305d9:	xchg   ecx,eax
  4305da:	sbb    DWORD PTR [eax+0x56],0xffffff89
  4305de:	(bad)  
  4305df:	call   DWORD PTR [esi]
  4305e1:	sub    DWORD PTR [ecx-0x7c33d9d4],ecx
  4305e7:	dec    eax
  4305e9:	mov    BYTE PTR [eax],0xe
  4305ec:	out    0x0,al
  4305ee:	add    bh,bh
  4305f0:	pop    esi
  4305f1:	inc    edx
  4305f2:	add    BYTE PTR [edx+0xffcd],ch
  4305f8:	test   al,0x33
  4305fa:	dec    DWORD PTR [eax]
  4305fc:	fdivr  st,st(7)
  4305fe:	inc    DWORD PTR [eax]
  430600:	adc    BYTE PTR [ebp-0x76c42d01],0xff
  430607:	jmp    FWORD PTR [ebp+0x3c]
  43060a:	xor    DWORD PTR [ecx],0x16
  43060d:	inc    DWORD PTR [eax]
  43060f:	add    cl,al
  430611:	add    edi,edi
  430613:	dec    ebp
  430614:	push   ebx
  430615:	add    BYTE PTR [eax],al
  430617:	jmp    DWORD PTR [eax]
  430619:	test   eax,0xff93cb00
  43061e:	add    bh,bh
  430620:	sahf   
  430621:	add    BYTE PTR gs:[eax+0x20],al
  430625:	add    BYTE PTR [eax],al
  430627:	adc    esp,0xffffffba
  43062a:	add    BYTE PTR [esi+0x3],dh
  43062d:	add    bh,bh
  43062f:	jmp    DWORD PTR [ebp+0x15440024]
  430635:	inc    DWORD PTR [ebx-0xcc907d]
  43063b:	mov    ebp,0xcc00cca8
  430640:	fsub   DWORD PTR [edi]
  430642:	jmp    DWORD PTR [eax-0x3300009b]
  430648:	int    0xbd
  43064a:	sbb    ebx,0xffffffdb
  43064d:	add    bh,bh
  43064f:	(bad)  
  430650:	call   0xb9bf057c
  430655:	mov    edi,edi
  430657:	call   FWORD PTR ds:0x8da2ff78
  43065d:	(bad)  
  43065e:	(bad)  
  43065f:	jmp    FWORD PTR [ebp+ebx*2-0xc2847d]
  430666:	inc    DWORD PTR [eax]
  430668:	call   0xffff:0x525a83bf
  43066f:	(bad)  
  430670:	jp     0x430633
  430672:	(bad)  
  430673:	cmp    esi,DWORD PTR [edx+0x57008300]
  430679:	mov    ebx,0x89bb03ff
  43067e:	add    BYTE PTR [eax],al
  430680:	rcl    BYTE PTR ds:0x83bf57cc,0xff
  430687:	add    dl,dl
  430689:	push   es
  43068a:	add    BYTE PTR [esi],dl
  43068c:	pop    es
  43068d:	add    bh,bh
  43068f:	int3   
  430690:	add    cl,BYTE PTR [eax+eax*1-0x1a]
  430694:	es (bad) 
  430696:	(bad)  
  430697:	call   DWORD PTR [ecx]
  430699:	mov    ch,0xff
  43069b:	xor    ebp,DWORD PTR [eax-0xe000034]
  4306a1:	cld    
  4306a2:	adc    DWORD PTR [edi-0xff00dd],0xffffffc6
  4306a9:	(bad)  
  4306aa:	mov    DWORD PTR [ebx],esi
  4306ac:	push   eax
  4306ad:	(bad)  
  4306ae:	inc    DWORD PTR [eax]
  4306b0:	in     al,dx
  4306b1:	fild   WORD PTR [eax]
  4306b3:	ja     0x4306d4
  4306b5:	cmp    edi,0xffffffff
  4306b8:	jmp    0x430686
  4306ba:	(bad)  
  4306bb:	cmp    ch,BYTE PTR [edi]
  4306bd:	(bad)  
  4306be:	(bad)  
  4306bf:	dec    DWORD PTR [ecx]
  4306c1:	es call edi
  4306c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306c5:	inc    DWORD PTR [ebx-0x8db534]
  4306cb:	(bad)  
  4306cc:	retf   
  4306cd:	int3   
  4306ce:	(bad)  
  4306cf:	call   FWORD PTR [ebx]
  4306d1:	xor    eax,DWORD PTR [eax]
  4306d3:	xor    eax,0xcc00002c
  4306d8:	sbb    ebp,ebp
  4306da:	add    dh,cl
  4306dc:	aad    0x83
  4306de:	dec    esp
  4306e0:	ins    BYTE PTR es:[edi],dx
  4306e1:	add    DWORD PTR [eax],eax
  4306e3:	ja     0x43072c
  4306e5:	or     DWORD PTR [ecx-0x8f9700],0xffffffa3
  4306ec:	inc    ecx
  4306ed:	add    BYTE PTR [eax],al
  4306ef:	inc    DWORD PTR [ecx+0x20]
  4306f2:	add    BYTE PTR [esi-0x33ff33a1],dl
  4306f8:	mov    esi,0xcc5b89e6
  4306fd:	inc    DWORD PTR [eax]
  4306ff:	int3   
  430700:	jl     0x430775
  430702:	add    bh,ch
  430704:	(bad)  
  430705:	(bad)  
  430706:	dec    DWORD PTR [ecx+0x47ff57ce]
  43070c:	popf   
  43070d:	add    BYTE PTR [eax],al
  43070f:	push   DWORD PTR [ecx-0x53]
  430712:	(bad)  
  430713:	jg     0x430765
  430715:	add    bh,bh
  430717:	or     DWORD PTR [ebx],0x1a
  43071a:	dec    esp
  43071c:	daa    
  43071d:	add    bh,bh
  43071f:	add    dh,dl
  430721:	or     bh,bh
  430723:	jmp    0x430778
  430725:	cmp    edi,0xffffff83
  430728:	mov    ebx,0x3095ff46
  43072d:	cmp    edi,0xffffffff
  430730:	cdq    
  430731:	xchg   edi,eax
  430732:	inc    DWORD PTR [edx-0xff91]
  430738:	mov    edx,0xd2d100e5
  43073d:	dec    esp
  43073f:	dec    esp
  430741:	fcmovne st,st(4)
  430743:	mov    esi,0x830000d7
  430748:	jmp    0x43073c
  43074a:	and    DWORD PTR [esi-0x75],0x0
  43074e:	cmp    edi,0x57
  430751:	or     ah,0x47
  430754:	or     esp,0xffffff83
  430757:	(bad)  
  430758:	mov    edx,0x1a6dffb4
  43075d:	mov    DWORD PTR [eax],eax
  43075f:	dec    esi
  430761:	ja     0x43072f
  430763:	fild   QWORD PTR [edi+edi*8+0x0]
  430767:	adc    ebp,0xffffff8e
  43076a:	call   FWORD PTR [ecx-0x768d]
  430770:	test   dh,ah
  430772:	or     ebx,0x3e
  430775:	(bad)  
  430776:	dec    DWORD PTR [ecx-0x7800f8c8]
  43077c:	dec    edi
  43077d:	add    bh,bh
  43077f:	add    dl,al
  430781:	xchg   edx,eax
  430782:	add    BYTE PTR [edi],dl
  430784:	pop    edi
  430785:	add    DWORD PTR [ebx-0x3cb001],0x61
  43078c:	dec    ecx
  43078d:	inc    DWORD PTR [ebx+0x408000]
  430793:	(bad)  [edx+0x318383ff]
  430799:	data16 (bad) 
  43079b:	call   DWORD PTR [ebx]
  43079d:	inc    DWORD PTR [ebx-0xdcd47d]
  4307a3:	jge    0x430754
  4307a5:	inc    DWORD PTR [ebx-0x76211f01]
  4307ab:	add    BYTE PTR [edi],bh
  4307ad:	(bad)  
  4307ae:	(bad)  
  4307af:	jmp    DWORD PTR [edx+0x33dcc24]
  4307b5:	int3   
  4307b6:	add    DWORD PTR [ebx-0x66ff412e],0x50
  4307bd:	add    BYTE PTR [eax],al
  4307bf:	add    BYTE PTR [ecx+esi*8+0x331a89],ah
  4307c6:	or     esp,0x4f
  4307c9:	or     bh,bh
  4307cb:	out    dx,al
  4307cc:	mov    ?,edi
  4307ce:	add    DWORD PTR [eax],0xfffffff3
  4307d1:	sahf   
  4307d2:	add    al,ah
  4307d4:	repnz int3 
  4307d6:	add    bh,bh
  4307d8:	sub    eax,0xf8c90085
  4307dd:	mov    DWORD PTR [eax],eax
  4307df:	add    BYTE PTR [edx],dh
  4307e1:	stos   BYTE PTR es:[edi],al
  4307e2:	call   DWORD PTR [edx-0xff38]
  4307e8:	push   0x24
  4307ea:	jmp    esp
  4307ec:	fdivr  st,st(7)
  4307ee:	cmp    edi,0x31
  4307f1:	cmp    BYTE PTR [eax],al
  4307f3:	push   ds
  4307f4:	fiadd  DWORD PTR [eax]
  4307f6:	add    BYTE PTR [ecx-0x6b7cbed2],cl
  4307fc:	push   esp
  4307fd:	cmp    edi,0x0
  430800:	mov    edx,ebp
  430802:	dec    DWORD PTR [ecx]
  430804:	mov    eax,0x31000000
  430809:	cmc    
  43080a:	and    DWORD PTR [ebx+0xffcce5],0xffffffe2
  430811:	les    ecx,FWORD PTR [ecx-0xc35c]
  430817:	call   FWORD PTR [eax-0x720768d]
  43081d:	add    bh,bh
  43081f:	push   DWORD PTR [edi-0x57c47ca6]
  430825:	add    BYTE PTR [ecx-0x73f501],cl
  43082b:	jne    0x4307c5
  43082d:	inc    DWORD PTR [ebx-0x672600]
  430833:	push   esp
  430834:	idiv   bh
  430836:	inc    DWORD PTR [eax]
  430838:	or     DWORD PTR [edx-0x34],eax
  43083b:	xchg   edi,eax
  43083c:	(bad)  
  43083d:	inc    DWORD PTR [eax]
  43083f:	add    BYTE PTR [ebp+0x77],ch
  430842:	int3   
  430843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430844:	outs   dx,DWORD PTR ds:[esi]
  430845:	(bad)  
  430846:	inc    DWORD PTR [ebx+0x39cc0af3]
  43084c:	adc    al,0x83
  43084e:	add    BYTE PTR [eax],al
  430850:	iret   
  430851:	fdivp  st(7),st
  430853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430854:	push   0x0
  430856:	add    bh,bh
  430858:	cs jp  0x43085b
  43085b:	mov    bh,0x78
  43085d:	(bad)  
  43085e:	(bad)  
  43085f:	call   DWORD PTR [edi-0x5e]
  430862:	jmp    DWORD PTR [ebx+0xff004d]
  430868:	push   eax
  430869:	dec    edi
  43086a:	add    cl,dh
  43086c:	lahf   
  43086d:	inc    DWORD PTR [ebx-0x33e34001]
  430873:	idiv   DWORD PTR [eax]
  430875:	int3   
  430876:	add    BYTE PTR [eax],al
  430878:	jmp    0xdc0e090d
  43087d:	int3   
  43087e:	dec    DWORD PTR [ecx+0x34ff76fc]
  430884:	js     0x430885
  430886:	add    BYTE PTR [eax],al
  430888:	mov    ds:0xdf7effa0,al
  43088d:	add    bh,bh
  43088f:	int3   
  430890:	int    0x50
  430892:	add    BYTE PTR [ebp+0x2e],cl
  430895:	add    DWORD PTR [ebx-0xe5de34],0xfffffffe
  43089c:	xchg   ebp,eax
  43089d:	add    DWORD PTR [eax],0xffffffff
  4308a0:	cmp    edi,DWORD PTR [edx-0x1]
  4308a3:	push   esi
  4308a4:	call   0x8332:0x27ffff00
  4308ab:	out    0x65,al
  4308ad:	add    bh,bh
  4308af:	jmp    DWORD PTR [ebx]
  4308b1:	(bad)  
  4308b2:	int3   
  4308b3:	xchg   esp,eax
  4308b4:	cmc    
  4308b5:	int3   
  4308b6:	or     DWORD PTR [ecx-0x2c7684b8],0x46
  4308bd:	add    BYTE PTR [eax],al
  4308bf:	add    BYTE PTR [ecx-0x17e133c1],bl
  4308c5:	int3   
  4308c6:	dec    esp
  4308c8:	xchg   esi,eax
  4308c9:	pop    esp
  4308ca:	int3   
  4308cb:	cmc    
  4308cc:	mov    ah,0x0
  4308ce:	inc    DWORD PTR [eax]
  4308d0:	pop    ebp
  4308d1:	(bad)  
  4308d2:	jmp    esi
  4308d4:	cmp    al,BYTE PTR [eax]
  4308d6:	mov    DWORD PTR [ecx-0x3fff6d3],ecx
  4308dc:	scas   eax,DWORD PTR es:[edi]
  4308dd:	inc    DWORD PTR [eax]
  4308df:	add    BYTE PTR [eax+0x6c0c00d7],ch
  4308e5:	inc    DWORD PTR [ebx+0x37ce83]
  4308eb:	inc    DWORD PTR [edi+0x2f008300]
  4308f1:	stc    
  4308f2:	add    BYTE PTR [ecx-0xe],ah
  4308f5:	inc    DWORD PTR [ebx-0x34db00]
  4308fb:	and    ebp,ebx
  4308fd:	mov    edi,edi
  4308ff:	int3   
  430900:	sti    
  430901:	lahf   
  430902:	add    BYTE PTR [ecx],cl
  430904:	sti    
  430905:	int3   
  430906:	inc    DWORD PTR [ebx+0x2dff560a]
  43090c:	or     DWORD PTR [eax],eax
  43090e:	add    BYTE PTR [eax],al
  430910:	test   al,0x35
  430912:	mov    DWORD PTR [ebx+0x2f],ecx
  430915:	dec    esp
  430917:	add    BYTE PTR [esi],bh
  430919:	adc    al,BYTE PTR [ebx-0x335f]
  43091f:	adc    DWORD PTR [ebx],0x3b
  430922:	push   DWORD PTR [ecx]
  430924:	xor    al,0xff
  430926:	add    DWORD PTR [eax],0x3d
  430929:	adc    bh,bh
  43092b:	inc    ebp
  43092c:	push   cs
  43092d:	(bad)  
  43092e:	inc    DWORD PTR [eax]
  430930:	sub    bl,BYTE PTR [ecx]
  430932:	call   FWORD PTR [esi]
  430934:	lahf   
  430935:	inc    DWORD PTR [ebx-0x76531301]
  43093b:	adc    al,0x53
  43093d:	add    BYTE PTR [ebx+0xa886ff],al
  430943:	lahf   
  430944:	sahf   
  430945:	dec    DWORD PTR [ecx+0x83dcff]
  43094b:	mov    al,0xdd
  43094d:	(bad)  
  43094e:	dec    esp
  430950:	arpl   cx,cx
  430952:	inc    DWORD PTR [ecx-0x7633003c]
  430958:	fsub   DWORD PTR [eax]
  43095a:	(bad)  
  43095b:	stc    
  43095c:	loopne 0x43095d
  43095e:	add    DWORD PTR [eax],0x38
  430961:	jae    0x430963
  430963:	imul   esp,DWORD PTR [eax+0x98983ff],0xffffffd1
  43096a:	add    BYTE PTR [edi],bh
  43096c:	fcos   
  43096e:	(bad)  
  43096f:	jmp    DWORD PTR [esi+ebx*8+0x0]
  430973:	jp     0x430970
  430975:	(bad)  
  430976:	(bad)  
  430977:	jmp    DWORD PTR [ebx]
  430979:	ret    
  43097a:	sbb    DWORD PTR [ebx+esi*2],0xffffff83
  43097e:	(bad)  
  43097f:	push   DWORD PTR [edi+0x4a81839f]
  430985:	cmp    edi,0x0
  430988:	fisubr WORD PTR [edx+0x0]
  43098b:	scas   eax,DWORD PTR es:[edi]
  43098c:	rol    BYTE PTR [eax],1
  43098e:	mov    edi,edi
  430990:	push   ecx
  430991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430992:	(bad)  
  430993:	cmp    al,0x83
  430995:	inc    DWORD PTR [eax]
  430997:	int3   
  430998:	jns    0x43093e
  43099a:	add    DWORD PTR [ebx+0x8922],0x2
  4309a1:	rol    DWORD PTR [eax],0xb5
  4309a4:	jp     0x4309a6
  4309a6:	mov    edi,edi
  4309a8:	and    eax,ebp
  4309aa:	add    BYTE PTR [edx-0x76ff00e6],ah
  4309b0:	es daa 
  4309b2:	jmp    FWORD PTR [ebp-0x6]
  4309b5:	add    bh,bh
  4309b7:	dec    eax
  4309b9:	lods   eax,DWORD PTR ds:[esi]
  4309ba:	add    BYTE PTR [edx+ecx*1-0x1],dh
  4309be:	add    BYTE PTR [eax],al
  4309c0:	imul   edx,DWORD PTR ds:0xff18caff,0x0
  4309c7:	add    al,ch
  4309c9:	loopne 0x4309ca
  4309cb:	in     eax,0x52
  4309cd:	add    bh,bh
  4309cf:	dec    DWORD PTR [ebp+0x21]
  4309d2:	inc    DWORD PTR [ebx-0x33ffffd7]
  4309d8:	(bad)
  4309db:	sbb    BYTE PTR [edi-0x15007c34],ah
  4309e1:	call   0xa192e6
  4309e6:	add    bh,bh
  4309e8:	enter  0xff5c,0x1f
  4309ec:	push   eax
  4309ed:	int3   
  4309ee:	inc    DWORD PTR [eax]
  4309f0:	nop
  4309f1:	lock or esi,0x9
  4309f5:	(bad)  
  4309f6:	(bad)  
  4309f7:	jmp    FWORD PTR [esi]
  4309f9:	push   ebp
  4309fa:	dec    DWORD PTR [esi+eax*8-0x37000000]
  430a01:	inc    ebp
  430a02:	int3   
  430a03:	imul   edi,DWORD PTR [ebx+eax*4],0x0
  430a07:	dec    DWORD PTR [eax-0x549c7610]
  430a0d:	add    BYTE PTR [eax],al
  430a0f:	add    BYTE PTR [ecx*2-0x7660b301],dh
  430a16:	add    DWORD PTR [eax],0xa
  430a19:	inc    esp
  430a1a:	mov    DWORD PTR [ecx+esi*8+0x2f890000],esi
  430a21:	(bad)  
  430a23:	cmp    BYTE PTR [ecx],ah
  430a25:	(bad)  
  430a26:	inc    DWORD PTR [eax]
  430a28:	adc    esp,DWORD PTR [ebx]
  430a2a:	dec    edi
  430a2c:	dec    esi
  430a2d:	add    bh,bh
  430a2f:	add    ah,dl
  430a31:	clc    
  430a32:	adc    DWORD PTR [eax+0x6a],0xffffffff
  430a36:	(bad)  
  430a37:	jmp    DWORD PTR [edx]
  430a39:	add    edi,edi
  430a3b:	retf   
  430a3c:	adc    al,0x0
  430a3e:	dec    esp
  430a40:	aas    
  430a41:	mov    ah,0xff
  430a43:	loopne 0x430abb
  430a45:	dec    esp
  430a47:	(bad)  
  430a48:	call   0xa2e609eb
  430a4d:	add    BYTE PTR [ebx-0x7ce6d47d],al
  430a53:	iret   
  430a54:	and    al,0xff
  430a56:	add    DWORD PTR [eax],0xffffffb7
  430a59:	outs   dx,BYTE PTR ds:[esi]
  430a5a:	add    esi,0xffffff87
  430a5d:	mov    edi,edi
  430a5f:	add    BYTE PTR [edi-0x1089ff27],dh
  430a65:	inc    DWORD PTR [ebx-0xf1b401]
  430a6b:	mov    WORD PTR [edx+0x63ff00cc],es
  430a71:	in     eax,0x0
  430a73:	mov    WORD PTR [esi],?
  430a75:	add    BYTE PTR [ebx-0x7c6a1d01],al
  430a7b:	add    DWORD PTR [ebp+0x5ff0000],ebx
  430a81:	ja     0x430a82
  430a83:	stos   BYTE PTR es:[edi],al
  430a84:	sub    eax,0x87ff0083
  430a89:	xchg   edx,eax
  430a8a:	dec    DWORD PTR [edi-0x337cff79]
  430a90:	ret    
  430a91:	pop    ebx
  430a92:	int3   
  430a93:	ins    DWORD PTR es:[edi],dx
  430a94:	mov    dh,0xff
  430a96:	inc    DWORD PTR [ebx-0x2eff5cc5]
  430a9c:	jl     0x430a6a
  430a9e:	(bad)  
  430a9f:	push   DWORD PTR [ecx-0x7f7c0002]
  430aa5:	(bad)  
  430aa6:	(bad)  
  430aa7:	call   FWORD PTR [eax+0x46708923]
  430aad:	add    bh,bh
  430aaf:	inc    DWORD PTR [ecx]
  430ab1:	ror    ah,0x1c
  430ab4:	push   0x0
  430ab6:	(bad)  
  430ab7:	push   esp
  430ab9:	xchg   esp,eax
  430aba:	sbb    DWORD PTR [ecx-0xff94],0x39
  430ac1:	sub    eax,0x5c6bff
  430ac6:	add    bh,bh
  430ac8:	std    
  430ac9:	dec    ebp
  430aca:	jmp    ebp
  430acc:	imul   eax,DWORD PTR [ebx-0xaf6ff01],0x385983
  430ad6:	inc    DWORD PTR [eax]
  430ad8:	loop   0x430a84
  430ada:	jmp    edx
  430adc:	jle    0x430ade
  430ade:	add    bh,bh
  430ae0:	popf   
  430ae1:	sbb    DWORD PTR [ebx+0x6e39],eax
  430ae7:	add    dh,ah
  430ae9:	push   ss
  430aea:	add    BYTE PTR [ebx+0x42],dl
  430aed:	mov    DWORD PTR [ebx-0x613f34],eax
  430af3:	lods   al,BYTE PTR ds:[esi]
  430af4:	dec    DWORD PTR [ecx+0x317f8300]
  430afa:	call   FWORD PTR [edi]
  430afc:	mov    ecx,0xda8383ff
  430b01:	out    0xff,al
  430b03:	mov    ebp,0xff000056
  430b08:	mov    esp,0xdd76ff55
  430b0d:	add    bh,bh
  430b0f:	push   DWORD PTR [esi+0x2150ffff]
  430b15:	int3   
  430b16:	add    bh,bh
  430b18:	into   
  430b19:	mov    al,ds:0xf00dff
  430b1e:	(bad)  
  430b1f:	call   FWORD PTR [eax-0x4b357c3c]
  430b25:	inc    DWORD PTR [ebx-0x6b8f7d]
  430b2b:	xchg   ecx,eax
  430b2c:	ret    0xff00
  430b2f:	sbb    DWORD PTR [eax+0xa],0x0
  430b33:	scas   eax,DWORD PTR es:[edi]
  430b34:	out    dx,al
  430b35:	add    bh,bh
  430b37:	add    cl,dl
  430b39:	fwait
  430b3a:	add    BYTE PTR [esi],bh
  430b3c:	and    al,BYTE PTR [ebx-0x414b007d]
  430b42:	add    ah,al
  430b44:	sbb    edi,edi
  430b46:	int3   
  430b47:	add    ah,cl
  430b49:	push   0x833efd00
  430b4e:	or     esp,0xffffffd0
  430b51:	mov    ch,0xff
  430b53:	mov    ?,WORD PTR [esi]
  430b55:	or     esp,0x0
  430b58:	retf   0xffb4
  430b5b:	arpl   WORD PTR [edi-0x6aff0001],bx
  430b61:	pop    eax
  430b62:	(bad)  
  430b63:	cld    
  430b64:	aad    0x83
  430b66:	inc    DWORD PTR [eax]
  430b68:	fadd   QWORD PTR [edx+0x0]
  430b6b:	lea    esi,[ecx]
  430b6d:	inc    DWORD PTR [eax]
  430b6f:	int3   
  430b70:	arpl   WORD PTR [edx-0x7ca01001],bx
  430b76:	mov    edi,edi
  430b78:	and    eax,0x1080832f
  430b7d:	inc    DWORD PTR [eax]
  430b7f:	(bad)  
  430b80:	call   0xb409957e
  430b85:	or     esp,0xffffff83
  430b88:	(bad)  
  430b89:	pop    ebx
  430b8a:	int3   
  430b8b:	mov    edi,0x898f
  430b90:	outs   dx,BYTE PTR ds:[esi]
  430b91:	add    al,0xff
  430b93:	leave  
  430b94:	aas    
  430b95:	mov    DWORD PTR [eax],eax
  430b97:	add    BYTE PTR [edi+esi*8+0x3b6700],bl
  430b9e:	add    ah,cl
  430ba0:	stos   DWORD PTR es:[edi],eax
  430ba1:	inc    ebp
  430ba2:	call   FWORD PTR [ecx+0x2b]
  430ba5:	add    BYTE PTR [eax],al
  430ba7:	mov    DWORD PTR ds:0x380fff84,edx
  430bad:	add    bh,bh
  430baf:	add    BYTE PTR [edx-0x1b01ff32],bl
  430bb5:	add    BYTE PTR [eax],al
  430bb7:	add    DWORD PTR [ecx+edi*8+0x3299cc],0x0
  430bbf:	adc    DWORD PTR [ebx+0x17efff8c],0x0
  430bc6:	inc    DWORD PTR [eax]
  430bc8:	test   DWORD PTR [esi],edx
  430bca:	jmp    FWORD PTR [eax-0x21]
  430bcd:	(bad)  
  430bce:	(bad)  
  430bcf:	inc    DWORD PTR [eax+ebx*2-0x1]
  430bd3:	stos   BYTE PTR es:[edi],al
  430bd4:	and    bh,bh
  430bd6:	inc    DWORD PTR [eax]
  430bd8:	inc    ebp
  430bd9:	xor    al,BYTE PTR [eax]
  430bdb:	int3   
  430bdc:	sub    bh,bh
  430bde:	add    BYTE PTR [eax],al
  430be0:	ins    BYTE PTR es:[edi],dx
  430be1:	fild   DWORD PTR [eax]
  430be3:	in     al,dx
  430be4:	dec    eax
  430be5:	inc    DWORD PTR [eax]
  430be7:	call   DWORD PTR [ebx-0x4c]
  430bea:	add    al,dl
  430bec:	(bad)  
  430bed:	inc    DWORD PTR [eax]
  430bef:	add    BYTE PTR ds:0xd13fff54,al
  430bf5:	inc    DWORD PTR [ebx-0x45f001]
  430bfb:	pop    edx
  430bfc:	mov    DWORD PTR [ebx-0x65180100],0xcc783000
  430c06:	add    BYTE PTR [ebx+0x6700dd50],al
  430c0c:	mov    dh,0xff
  430c0e:	(bad)  
  430c0f:	jmp    DWORD PTR [edx+0x72170020]
  430c15:	add    bh,bh
  430c17:	jmp    DWORD PTR [esi]
  430c19:	dec    ecx
  430c1a:	add    BYTE PTR [ebp+0x43],ah
  430c1d:	cmp    edi,0xffffffff
  430c20:	or     ebp,esi
  430c22:	push   DWORD PTR [ebx]
  430c24:	mov    esi,0xdb008983
  430c29:	push   eax
  430c2a:	mov    DWORD PTR [ebx+0x54],ebp
  430c2d:	(bad)  
  430c2e:	inc    DWORD PTR [eax]
  430c30:	clc    
  430c31:	push   esp
  430c32:	add    BYTE PTR [esp+edi*8],ah
  430c35:	inc    DWORD PTR [eax]
  430c37:	dec    DWORD PTR [edi-0x233a00c8]
  430c3d:	(bad)  
  430c3e:	inc    DWORD PTR [eax]
  430c40:	dec    esi
  430c41:	adc    DWORD PTR [ebx+0xcc6194],eax
  430c47:	mov    DWORD PTR [ebp-0x7738ff28],ebp
  430c4d:	inc    DWORD PTR [eax]
  430c4f:	dec    DWORD PTR [edx]
  430c51:	inc    ebx
  430c52:	(bad)  
  430c53:	stc    
  430c54:	jnp    0x430c56
  430c56:	cmp    edi,0xffffffbd
  430c59:	mov    WORD PTR [eax],es
  430c5b:	stc    
  430c5c:	imul   edi,edi,0xffffff89
  430c5f:	add    BYTE PTR [eax+ebx*4],ch
  430c62:	sub    DWORD PTR [ebx+0x17],0x0
  430c66:	add    BYTE PTR [eax],al
  430c68:	jbe    0x430c56
  430c6a:	or     DWORD PTR [ebx-0xf],0x0
  430c6e:	inc    DWORD PTR [eax]
  430c70:	push   ds
  430c71:	dec    ebp
  430c72:	add    BYTE PTR [esi+0xff00df],bl
  430c78:	add    esi,DWORD PTR [eax-0x7cc70501]
  430c7e:	inc    DWORD PTR [eax]
  430c80:	sti    
  430c81:	and    edi,edi
  430c83:	dec    edi
  430c84:	sahf   
  430c85:	mov    DWORD PTR [ecx-0x7c1b8301],ecx
  430c8b:	cmp    ecx,DWORD PTR [esi]
  430c8d:	mov    edi,edi
  430c8f:	add    BYTE PTR [edi-0x22],ah
  430c92:	add    BYTE PTR [esi+0x6f],al
  430c95:	inc    DWORD PTR [ebx-0xf07d7d]
  430c9b:	mov    DWORD PTR [edi+edi*8-0x1],edx
  430c9f:	jmp    DWORD PTR [ecx]
  430ca1:	fild   WORD PTR [ebx+0xc930]
  430ca7:	add    BYTE PTR [eax],cl
  430ca9:	popf   
  430caa:	add    al,ah
  430cac:	adc    edi,edi
  430cae:	cmp    edi,0xffffff8c
  430cb1:	push   ebp
  430cb2:	add    bl,cl
  430cb4:	lock add bh,bh
  430cb7:	and    DWORD PTR [eax],0x7b
  430cba:	(bad)  
  430cbb:	jle    0x430cee
  430cbd:	inc    DWORD PTR [eax]
  430cbf:	jmp    FWORD PTR ds:0x1641897f
  430cc5:	add    BYTE PTR [eax],al
  430cc7:	push   esi
  430cc9:	mov    es,WORD PTR [ebx-0x337c5773]
  430ccf:	xor    DWORD PTR [ebx+0x4ca5ffd0],0xffffff83
  430cd6:	(bad)  
  430cd7:	push   DWORD PTR [esi+0x1e]
  430cda:	add    BYTE PTR [edx+0x6],dh
  430cdd:	inc    DWORD PTR [eax]
  430cdf:	push   DWORD PTR [ecx+0x7654003c]
  430ce5:	(bad)  
  430ce6:	(bad)  
  430ce7:	inc    ecx
  430ce9:	scas   al,BYTE PTR es:[edi]
  430cea:	add    BYTE PTR [ebp+0x1a],al
  430ced:	mov    DWORD PTR [eax],eax
  430cef:	push   DWORD PTR [ebx+0x4f53ff4a]
  430cf5:	(bad)  
  430cf6:	inc    DWORD PTR [ebx-0x5cff63cf]
  430cfc:	fs add bh,bh
  430cff:	add    DWORD PTR [esi+ebp*2-0xb58700],0x0
  430d07:	or     DWORD PTR [esi+0x25],0x0
  430d0b:	clc    
  430d0c:	imul   edi,edi,0xffffffff
  430d0f:	add    BYTE PTR [ebx-0x5de1ff55],cl
  430d15:	cmp    edi,0xffffff89
  430d18:	mov    esp,0xbf0fff68
  430d1d:	or     DWORD PTR [ecx-0xa2b900],0xffffffa6
  430d24:	push   eax
  430d25:	mov    edi,edi
  430d27:	add    al,cl
  430d29:	inc    DWORD PTR [ebx-0x917e]
  430d2f:	(bad)  
  430d30:	mov    edx,0xc1fff26
  430d35:	int3   
  430d36:	int3   
  430d37:	(bad)  
  430d38:	fsub   DWORD PTR [edi-0xf2e801]
  430d3e:	inc    DWORD PTR [eax]
  430d40:	call   0x14ee0cf6
  430d45:	inc    DWORD PTR [eax]
  430d47:	jmp    FWORD PTR [edx+0x3e48ff56]
  430d4d:	inc    DWORD PTR [eax]
  430d4f:	sbb    DWORD PTR [ecx+0x1b],0x0
  430d53:	add    eax,edx
  430d55:	(bad)  
  430d56:	inc    DWORD PTR [eax]
  430d58:	jecxz  0x430d56
  430d5a:	int3   
  430d5b:	sti    
  430d5c:	dec    ebp
  430d5d:	add    ah,cl
  430d5f:	dec    DWORD PTR [ecx-0x4e]
  430d62:	inc    DWORD PTR [esi+0x2e]
  430d68:	or     al,BYTE PTR [esi]
  430d6a:	dec    DWORD PTR [esi]
  430d6c:	mov    ch,0x0
  430d6e:	add    DWORD PTR [ebx+0x10005ee],0x61
  430d75:	int3   
  430d76:	(bad)  
  430d77:	jmp    DWORD PTR [edi]
  430d79:	mov    bh,0x83
  430d7b:	cwde   
  430d7c:	es add ah,cl
  430d7f:	call   FWORD PTR [eax+eax*8]
  430d82:	(bad)  
  430d83:	mov    edx,0xffffffdf
  430d88:	test   ecx,eax
  430d8a:	int3   
  430d8b:	retf   
  430d8c:	adc    ah,cl
  430d8e:	(bad)  
  430d8f:	jmp    FWORD PTR [edi]
  430d91:	add    bh,bh
  430d93:	jnp    0x430dce
  430d95:	inc    DWORD PTR [eax]
  430d97:	mov    DWORD PTR [edi],ecx
  430d99:	xchg   ebx,eax
  430d9a:	(bad)  
  430d9b:	out    dx,eax
  430d9c:	js     0x430d21
  430d9e:	add    BYTE PTR [eax],al
  430da0:	out    dx,al
  430da1:	lock (bad) 
  430da3:	cld    
  430da4:	hlt    
  430da5:	add    BYTE PTR [ebx-0x7cbe2d7d],al
  430dab:	push   esp
  430dac:	push   0x710000ff
  430db1:	xchg   esi,eax
  430db2:	jmp    FWORD PTR [esi+0x1a]
  430db5:	(bad)  
  430db6:	(bad)  
  430db7:	dec    DWORD PTR [esi+edi*4]
  430dba:	dec    DWORD PTR [edi-0xffff27]
  430dc0:	adc    bl,ah
  430dc2:	call   FWORD PTR [ebx-0x60]
  430dc5:	add    bh,bh
  430dc7:	add    BYTE PTR [edx],bl
  430dc9:	jo     0x430dca
  430dcb:	cmp    BYTE PTR [edx],cl
  430dcd:	(bad)  
  430dce:	(bad)  
  430dcf:	(bad)  
  430dd0:	mov    eax,0x3d20006e
  430dd5:	add    BYTE PTR [ebx-0x612001],al
  430ddb:	pop    es
  430ddc:	dec    esi
  430ddd:	(bad)  
  430dde:	inc    DWORD PTR [eax]
  430de0:	and    ebp,ebx
  430de2:	(bad)  
  430de3:	out    dx,al
  430de4:	jmp    0x430d6f
  430de6:	(bad)  
  430de7:	call   DWORD PTR [ecx-0x4a6f00c4]
  430ded:	mov    DWORD PTR [ecx-0x54b07d],ecx
  430df3:	xor    DWORD PTR [esi+0x59ff00ff],eax
  430df9:	push   0xffffffff
  430dfb:	add    eax,0x83ffccb3
  430e00:	add    DWORD PTR [eax+eax*1],0xff0086ec
  430e07:	inc    DWORD PTR [ebx]
  430e09:	inc    BYTE PTR [ebx-0x76002c40]
  430e0f:	mov    DWORD PTR [esi],ebp
  430e11:	inc    DWORD PTR [eax]
  430e13:	push   ebx
  430e14:	(bad)  
  430e15:	dec    DWORD PTR [ecx+0xf94ff]
  430e1b:	sbb    DWORD PTR [edi+edi*8-0x317a0001],0x891516ff
  430e26:	(bad)  
  430e27:	dec    ebp
  430e29:	cdq    
  430e2a:	jmp    DWORD PTR [eax+eax*1-0x25ff7c01]
  430e31:	cmp    edi,0xffff6116
  430e37:	inc    DWORD PTR [ebx]
  430e39:	and    edi,edi
  430e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430e3c:	pop    ds
  430e3d:	inc    DWORD PTR [eax]
  430e3f:	or     DWORD PTR [edi+0x16],0x0
  430e43:	sub    edi,ebx
  430e45:	inc    DWORD PTR [eax]
  430e47:	(bad)  
  430e48:	jmp    0xff00:0x44dbff34
  430e4f:	dec    ecx
  430e51:	and    al,0xff
  430e53:	or     DWORD PTR [ecx],edx
  430e55:	inc    DWORD PTR [eax]
  430e57:	dec    DWORD PTR [ebx]
  430e59:	push   esp
  430e5a:	int3   
  430e5b:	aad    0xa7
  430e5d:	add    bh,bh
  430e5f:	call   DWORD PTR [edi]
  430e61:	xchg   esi,eax
  430e62:	add    BYTE PTR [eax],al
  430e64:	push   edx
  430e65:	add    BYTE PTR [eax],al
  430e67:	mov    esi,eax
  430e69:	fld    DWORD PTR [eax]
  430e6b:	dec    eax
  430e6c:	ins    DWORD PTR es:[edi],dx
  430e6d:	add    ah,cl
  430e6f:	call   FWORD PTR [edi]
  430e71:	xchg   esp,eax
  430e72:	or     ecx,0x62
  430e75:	add    ah,cl
  430e77:	or     DWORD PTR [ebx],0xfffffff2
  430e7a:	add    BYTE PTR [ecx+0xe4],al
  430e80:	mov    DWORD PTR [edi-0x1],edx
  430e83:	mov    ds:0xffff8904,al
  430e88:	mov    al,ds:0xf7f8348
  430e8d:	(bad)  
  430e8e:	inc    DWORD PTR [eax]
  430e90:	pop    ss
  430e91:	mov    esp,0xff955200
  430e96:	inc    DWORD PTR [eax]
  430e98:	gs inc ecx
  430e9a:	sub    DWORD PTR [edi],0x20
  430e9d:	add    bh,bh
  430e9f:	mov    ebx,esp
  430ea1:	xchg   ebx,eax
  430ea2:	add    BYTE PTR [edi-0x25],bh
  430ea5:	add    bh,bh
  430ea7:	inc    DWORD PTR [edi]
  430ea9:	mov    DWORD PTR [ebx-0x3300fcaa],0x899972ff
  430eb3:	retf   
  430eb4:	jle    0x430eb6
  430eb6:	cmp    edi,0xffffff81
  430eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430eba:	add    BYTE PTR [ebx],cl
  430ebc:	push   0xffffff83
  430ebe:	(bad)  
  430ebf:	dec    DWORD PTR [eax]
  430ec1:	mov    cl,ah
  430ec3:	mov    ebp,0xff000021
  430ec8:	bound  edx,QWORD PTR [ecx-0x34]
  430ecb:	enter  0xffcb,0x0
  430ecf:	(bad)  
  430ed0:	jns    0x430e8a
  430ed2:	add    ah,cl
  430ed4:	adc    al,0xff
  430ed6:	(bad)  
  430ed7:	call   FWORD PTR [ebp+0x41a183ca]
  430edd:	dec    esp
  430edf:	int3   
  430ee0:	ins    DWORD PTR es:[edi],dx
  430ee1:	jge    0x430ee2
  430ee3:	cmp    dh,BYTE PTR [eax]
  430ee5:	add    BYTE PTR [eax],al
  430ee7:	mov    DWORD PTR [ebx],edi
  430ee9:	or     eax,0xcc5484ff
  430eee:	dec    DWORD PTR [ecx-0x6800842b]
  430ef4:	jmp    0xc7440ef8
  430ef9:	aad    0x89
  430efb:	pushf  
  430efc:	add    DWORD PTR ss:[ebx+0x4c8500],0xb
  430f04:	pushf  
  430f05:	inc    DWORD PTR [eax]
  430f07:	dec    ebx
  430f09:	dec    esp
  430f0a:	add    BYTE PTR [ebx],ch
  430f0c:	inc    edx
  430f0d:	inc    DWORD PTR [eax]
  430f0f:	inc    DWORD PTR [ebp+0x21]
  430f12:	add    BYTE PTR [ecx],bh
  430f14:	test   BYTE PTR [eax],0xff
  430f17:	add    BYTE PTR [edx+0x47],ah
  430f1a:	int3   
  430f1b:	dec    edi
  430f1c:	ret    0xcc
  430f1f:	mov    DWORD PTR [eax-0x57567cd7],edi
  430f25:	cmp    edi,0x0
  430f28:	out    dx,al
  430f29:	lds    eax,FWORD PTR [eax]
  430f2b:	inc    eax
  430f2c:	dec    esp
  430f2d:	add    BYTE PTR [eax],al
  430f2f:	push   DWORD PTR [edi-0x33]
  430f32:	add    BYTE PTR [esi],dl
  430f34:	and    eax,DWORD PTR [ebx+0x48d9ccff]
  430f3a:	add    BYTE PTR [esi],dh
  430f3c:	push   ecx
  430f3d:	int3   
  430f3e:	add    ah,cl
  430f40:	lods   al,BYTE PTR ds:[esi]
  430f41:	repnz push DWORD PTR [ebx-0x28]
  430f45:	or     esp,0xffffffff
  430f48:	push   edx
  430f49:	outs   dx,DWORD PTR ds:[esi]
  430f4a:	add    bh,dh
  430f4c:	pop    eax
  430f4d:	add    bh,bh
  430f4f:	jmp    ebp
  430f51:	add    al,0xff
  430f53:	jle    0x430f4d
  430f55:	or     esp,0x0
  430f58:	cmp    al,0xa8
  430f5a:	jmp    DWORD PTR [edx]
  430f5c:	loop   0x430f5d
  430f5e:	int3   
  430f5f:	call   DWORD PTR [ecx-0x333d00a9]
  430f65:	add    BYTE PTR [ebx-0x7cef3100],al
  430f6b:	lea    ebx,[ebp-0x7d]
  430f6e:	inc    DWORD PTR [ebx-0xa7c87e4]
  430f74:	scas   al,BYTE PTR es:[edi]
  430f75:	add    bh,bh
  430f77:	add    dl,ah
  430f79:	jb     0x430f7b
  430f7b:	cdq    
  430f7c:	mov    eax,ds:0x4fff00ff
  430f81:	fild   WORD PTR [ebx-0xf389]
  430f87:	add    BYTE PTR [edx-0x58],al
  430f8a:	jmp    DWORD PTR [edx+edi*1+0x300ff83]
  430f91:	xor    eax,0xed0800
  430f96:	(bad)  
  430f97:	(bad)  
  430f98:	jle    0x430f24
  430f9a:	add    BYTE PTR [ecx+ebp*8],ch
  430f9d:	dec    DWORD PTR [ecx+0x9939ff]
  430fa3:	mov    ah,al
  430fa5:	dec    DWORD PTR [ecx+0x6058ff]
  430fab:	and    al,0x46
  430fad:	(bad)  
  430fae:	inc    DWORD PTR [ebx+0x7d00d5a3]
  430fb4:	sar    edi,cl
  430fb6:	(bad)  
  430fb7:	call   DWORD PTR [eax-0x2]
  430fba:	xor    esi,0xffffffd3
  430fbd:	mov    esp,ecx
  430fbf:	(bad)  
  430fc0:	jmp    0xb0ab108f
  430fc5:	cmp    edi,0xffffffff
  430fc8:	test   eax,0x19f7ff8c
  430fcd:	int3   
  430fce:	inc    DWORD PTR [eax]
  430fd0:	cmp    dl,BYTE PTR [edx-0x3300e500]
  430fd6:	mov    DWORD PTR [eax],eax
  430fd8:	add    al,BYTE PTR [edi-0x3309a200]
  430fde:	add    bh,bh
  430fe0:	cmp    edi,esp
  430fe2:	dec    DWORD PTR [ebx-0x7cd6]
  430fe8:	mov    bh,0x5f
  430fea:	add    BYTE PTR [ebp-0x7cff52],al
  430ff0:	cmp    eax,0xc993ff59
  430ff5:	int3   
  430ff6:	add    bh,bh
  430ff8:	fild   WORD PTR [ecx-0x7c78e101]
  430ffe:	int3   
  430fff:	(bad)  
  431000:	jnp    0x431062
  431002:	inc    DWORD PTR [ecx+0x1b]
  431005:	add    BYTE PTR [ecx-0xf2177],cl
  43100b:	sub    eax,0xff0037
  431010:	cld    
  431011:	loopne 0x431013
  431013:	push   edi
  431014:	cmp    edi,edi
  431016:	dec    DWORD PTR [ecx-0x2b00fd02]
  43101c:	mov    edi,0x57ff8983
  431021:	mov    ds:0xfff55a00,al
  431026:	int3   
  431027:	inc    ebx
  431029:	or     cl,ah
  43102b:	iret   
  43102c:	out    dx,al
  43102d:	(bad)  
  43102e:	inc    DWORD PTR [eax]
  431030:	fld    DWORD PTR [ebp-0x65957d]
  431036:	inc    DWORD PTR [eax]
  431038:	out    dx,al
  431039:	jno    0x43103a
  43103b:	ret    
  43103c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43103d:	add    BYTE PTR [eax],al
  43103f:	add    BYTE PTR [ebx+esi*1-0x7c634a01],ah
  431046:	(bad)  
  431047:	push   DWORD PTR [ebx+0xa]
  43104a:	inc    ecx
  43104c:	mov    cl,0x0
  43104e:	inc    DWORD PTR [ebx-0x60ff1046]
  431054:	mov    ebp,0x3a008383
  431059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43105a:	add    dh,dl
  43105c:	xchg   esi,eax
  43105d:	add    bh,bh
  43105f:	jmp    FWORD PTR [edx-0x3285004c]
  431065:	mov    edi,edi
  431067:	push   DWORD PTR [eax+0x3a]
  43106a:	add    BYTE PTR [edx],bh
  43106c:	push   eax
  43106d:	add    bh,bh
  43106f:	sbb    esp,0x6
  431072:	or     ecx,0xffffff96
  431075:	int3   
  431076:	add    BYTE PTR [eax],al
  431078:	mov    ch,0xf5
  43107a:	add    BYTE PTR [esi-0x76000059],dl
  431080:	cmp    BYTE PTR [ecx-0x1],bh
  431083:	fst    DWORD PTR [edi]
  431085:	cmp    edi,0x0
  431088:	jmp    0xbda81128
  43108d:	add    BYTE PTR [ecx+0x1cb2ff],cl
  431093:	lods   eax,DWORD PTR ds:[esi]
  431094:	pop    ebp
  431095:	add    BYTE PTR [eax],al
  431097:	add    bh,cl
  431099:	call   0x4f086a
  43109e:	add    bh,bh
  4310a0:	lahf   
  4310a1:	enter  0xd700,0x19
  4310a5:	(bad)  
  4310a6:	(bad)  
  4310a7:	(bad)  
  4310a8:	mov    ebx,0x81bcff75
  4310ad:	add    ah,cl
  4310af:	or     esp,0xffffffee
  4310b2:	add    BYTE PTR [ecx+ebx*1+0x14ccff00],ah
  4310b9:	xor    edi,edi
  4310bb:	xor    al,0xd3
  4310bd:	inc    DWORD PTR [eax]
  4310bf:	add    BYTE PTR [esp+eax*2-0xdee00],dh
  4310c6:	inc    DWORD PTR [ebx-0x7bffb799]
  4310cc:	and    bh,bh
  4310ce:	inc    DWORD PTR [ebx-0x4bffb9f7]
  4310d4:	push   ebx
  4310d5:	inc    DWORD PTR [eax]
  4310d7:	call   DWORD PTR [ecx-0x55]
  4310da:	add    BYTE PTR [eax],al
  4310dc:	sahf   
  4310dd:	inc    DWORD PTR [ebx-0xf7d500]
  4310e3:	add    DWORD PTR [edx],0xa1ff83cc
  4310e9:	and    bh,bh
  4310eb:	mov    BYTE PTR fs:[eax],al
  4310ee:	add    DWORD PTR [eax],0xffffffe8
  4310f1:	fild   WORD PTR [eax]
  4310f3:	ret    0x10
  4310f6:	inc    DWORD PTR [eax]
  4310f8:	add    DWORD PTR [ebp-0x7d],esp
  4310fb:	fisub  WORD PTR [ebx+eax*4-0x1f090100]
  431102:	add    BYTE PTR [ebx-0x337c71],bh
  431108:	sbb    eax,0x36be89e9
  43110d:	inc    DWORD PTR [ebx-0x33686800]
  431113:	cld    
  431114:	test   al,0x83
  431116:	add    DWORD PTR [ebx-0x7bfff6de],0xffffffc1
  43111d:	inc    DWORD PTR [eax]
  43111f:	int3   
  431120:	je     0x43112c
  431122:	mov    ebx,esi
  431124:	push   ss
  431125:	add    BYTE PTR [ebx+0x6a4acc],al
  43112b:	cmp    al,BYTE PTR [edx]
  43112d:	inc    DWORD PTR [eax]
  43112f:	add    dh,bh
  431131:	enter  0xb000,0x54
  431135:	add    bh,bh
  431137:	call   FWORD PTR [ebx]
  431139:	js     0x43113b
  43113b:	cmp    al,BYTE PTR [ebp+0xcff00ff]
  431141:	loope  0x431143
  431143:	arpl   WORD PTR [ecx-0x1],dx
  431146:	dec    esp
  431148:	mov    dl,BYTE PTR [ebx+0xd46aff]
  43114e:	add    BYTE PTR [ebx-0x6cffdbeb],al
  431154:	xchg   ebp,eax
  431155:	int3   
  431156:	inc    DWORD PTR [eax]
  431158:	push   esi
  431159:	ja     0x43115a
  43115b:	mov    bh,0x17
  43115d:	dec    DWORD PTR [ecx+0xc45cff]
  431163:	or     al,0xc9
  431165:	cmp    edi,0x0
  431168:	cmp    dh,BYTE PTR [ebp-0x48834]
  43116e:	inc    DWORD PTR [eax]
  431170:	pop    edi
  431171:	mov    ds:0x944783,eax
  431176:	int3   
  431177:	jmp    DWORD PTR [ecx]
  431179:	mov    ebx,0xffc643ff
  43117e:	inc    DWORD PTR [eax]
  431180:	mov    ch,0x7f
  431182:	add    BYTE PTR [esi+0x7b],cl
  431185:	mov    DWORD PTR [ecx-0x7c374001],ecx
  43118b:	hlt    
  43118c:	fld    DWORD PTR [ebx-0x72a87c01]
  431192:	(bad)  
  431193:	in     eax,dx
  431194:	inc    BYTE PTR [eax]
  431196:	add    BYTE PTR [eax],al
  431198:	inc    ebp
  431199:	add    al,0xff
  43119b:	call   0x142957e
  4311a0:	mov    ebp,0xb186ff39
  4311a5:	(bad)  
  4311a6:	inc    DWORD PTR [eax]
  4311a8:	mov    bh,0x9b
  4311aa:	int3   
  4311ab:	pop    dx
  4311ad:	inc    DWORD PTR [eax]
  4311af:	int3   
  4311b0:	push   cs
  4311b1:	jmp    0x8389:0x83f5f183
  4311b8:	rcl    BYTE PTR [ebx+0x0],1
  4311bb:	bound  eax,QWORD PTR [ebx-0x23000001]
  4311c1:	jbe    0x431146
  4311c3:	push   edi
  4311c4:	inc    eax
  4311c5:	add    BYTE PTR [ecx-0x7cf54701],cl
  4311cb:	repnz imul eax,DWORD PTR [eax],0x684500ff
  4311d2:	call   DWORD PTR [edi+ebp*2]
  4311d5:	add    bh,bh
  4311d7:	add    BYTE PTR [edi-0x54],dl
  4311da:	call   DWORD PTR [edi]
  4311dc:	out    0xff,al
  4311de:	(bad)  
  4311df:	dec    DWORD PTR [edi-0x9]
  4311e2:	add    BYTE PTR [eax-0x48],bl
  4311e5:	(bad)  
  4311e6:	(bad)  
  4311e7:	call   FWORD PTR [eax]
  4311e9:	cmc    
  4311ea:	add    BYTE PTR [eax+0xffffbd],ah
  4311f0:	sar    ah,0x0
  4311f3:	pop    ebp
  4311f4:	daa    
  4311f5:	(bad)  
  4311f6:	(bad)  
  4311f7:	(bad)  
  4311f8:	jns    0x43125b
  4311fa:	add    BYTE PTR [ebx+0x34],bh
  4311fd:	mov    DWORD PTR [eax],eax
  4311ff:	add    BYTE PTR [esi-0x4300ffff],bh
  431205:	add    BYTE PTR [ecx+0x6424ff],cl
  43120b:	xlat   BYTE PTR ds:[ebx]
  43120c:	pop    eax
  43120d:	inc    DWORD PTR [eax]
  43120f:	dec    DWORD PTR [ebx-0xb]
  431212:	jmp    eax
  431214:	aaa    
  431215:	(bad)  
  431216:	(bad)  
  431217:	(bad)  
  431218:	cmp    bl,BYTE PTR [edi-0x7d]
  43121b:	add    bh,BYTE PTR [ebx-0x7e000001]
  431221:	add    BYTE PTR fs:[eax-0x17],cl
  431225:	int3   
  431226:	add    bh,bh
  431228:	pop    edx
  431229:	push   cs
  43122a:	add    al,al
  43122c:	jle    0x43122e
  43122e:	add    ah,cl
  431230:	xchg   edx,eax
  431231:	xchg   BYTE PTR [ebx-0x33a3ec],al
  431237:	add    BYTE PTR [edx+0x3accffa4],dh
  43123d:	dec    esp
  43123f:	adc    DWORD PTR [eax-0x1e],0xffffff83
  431243:	outs   dx,DWORD PTR ds:[esi]
  431244:	pop    esp
  431245:	dec    DWORD PTR [ecx+0x1dd5cc]
  43124b:	xchg   ebx,eax
  43124c:	ins    DWORD PTR es:[edi],dx
  43124d:	dec    esp
  43124f:	xor    DWORD PTR ds:0x5f4afff9,0xffffff89
  431256:	inc    DWORD PTR [ebx-0x7500a5a5]
  43125c:	pop    esi
  43125d:	dec    DWORD PTR [ecx+0x774783]
  431263:	mov    ebp,0xffffcc15
  431268:	ss loope 0x431237
  43126b:	sub    DWORD PTR [ecx+0x0],esp
  43126e:	inc    DWORD PTR [eax]
  431270:	pop    eax
  431271:	and    eax,0x5fa7cc
  431276:	inc    DWORD PTR [eax]
  431278:	dec    esi
  431279:	sar    edi,1
  43127b:	add    al,0x1e
  43127d:	add    bh,bh
  43127f:	add    BYTE PTR [ecx+0x519283f0],ch
  431285:	int3   
  431286:	inc    DWORD PTR [eax]
  431288:	pop    ebx
  431289:	fld    DWORD PTR [eax]
  43128b:	mov    cl,0xb1
  43128d:	add    BYTE PTR [eax],al
  43128f:	(bad)  
  431290:	jmp    0xffff:0x46a8ff9c
  431297:	add    BYTE PTR [eax],cl
  431299:	mov    edi,edi
  43129b:	pop    ds
  43129c:	sbb    eax,0x33ffff89
  4312a1:	adc    BYTE PTR [eax],al
  4312a3:	(bad)  
  4312a4:	pop    ebx
  4312a5:	add    DWORD PTR [eax],0xffffff83
  4312a8:	sub    ebp,esi
  4312aa:	sbb    esp,0x23
  4312ad:	add    bh,bh
  4312af:	adc    DWORD PTR [edx+0x5c],0xffffffff
  4312b3:	bound  ebx,QWORD PTR [esi]
  4312b5:	(bad)  
  4312b6:	inc    DWORD PTR [eax]
  4312b8:	jo     0x4312e9
  4312ba:	jmp    FWORD PTR [ebx+0xffff3b]
  4312c0:	stc    
  4312c1:	sub    bh,bh
  4312c3:	adc    esi,esi
  4312c5:	inc    DWORD PTR [eax]
  4312c7:	int3   
  4312c8:	push   ds
  4312c9:	mov    edi,edi
  4312cb:	(bad)  
  4312cc:	pop    ds
  4312cd:	dec    DWORD PTR [ecx+0xea59ff]
  4312d3:	xchg   ecx,eax
  4312d4:	(bad)  
  4312d6:	add    bh,bh
  4312d8:	clc    
  4312d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4312da:	inc    DWORD PTR [edx+0x7e]
  4312dd:	(bad)  
  4312de:	inc    DWORD PTR [ebx+0x42cc374c]
  4312e4:	and    eax,0x1cccffff
  4312e9:	jle    0x43126e
  4312eb:	ret    
  4312ec:	or     edi,edi
  4312ee:	add    DWORD PTR [eax],0x37
  4312f1:	add    DWORD PTR [eax],0xffffffaf
  4312f4:	inc    eax
  4312f5:	add    bh,bh
  4312f7:	sbb    DWORD PTR [edi],0x59
  4312fa:	(bad)  
  4312fb:	cmp    DWORD PTR [eax+0x0],edi
  4312fe:	cmp    edi,0x14
  431301:	cli    
  431302:	dec    DWORD PTR [edi+0x6a]
  431305:	add    DWORD PTR [ebx+0x8a2cff],0xffffffa4
  43130c:	inc    BYTE PTR [eax]
  43130e:	(bad)  
  43130f:	dec    DWORD PTR [edx]
  431311:	sbb    bh,bh
  431313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431314:	cmp    edi,0x0
  431317:	(bad)  
  431318:	cmp    eax,0x2975837e
  43131d:	inc    DWORD PTR [ebx-0x7c61bb01]
  431323:	rep ins DWORD PTR es:[edi],dx
  431325:	inc    DWORD PTR [eax]
  431327:	add    BYTE PTR [ebp-0x517076b9],dh
  43132d:	mov    edi,edi
  43132f:	mov    DWORD PTR [ebx+esi*2],esp
  431332:	add    dl,ah
  431334:	xor    al,0x0
  431336:	add    DWORD PTR [ebx-0x3f00114b],0xffffffa6
  43133d:	(bad)  
  43133e:	inc    DWORD PTR [eax]
  431340:	cmovg  eax,DWORD PTR [eax]
  431343:	mov    ss,WORD PTR [eax]
  431345:	(bad)  
  431346:	inc    DWORD PTR [eax]
  431348:	ins    BYTE PTR es:[edi],dx
  431349:	mov    al,BYTE PTR [eax]
  43134b:	mov    ch,0x2d
  43134d:	inc    DWORD PTR [eax]
  43134f:	mov    DWORD PTR [edx-0x55],edi
  431352:	add    BYTE PTR [ebx-0x33007c7b],bh
  431358:	test   ebx,ebp
  43135a:	int3   
  43135b:	daa    
  43135c:	mov    bh,bh
  43135e:	inc    DWORD PTR [eax]
  431360:	mov    ebx,0xc025ff11
  431365:	(bad)  
  431366:	(bad)  
  431367:	inc    DWORD PTR [ecx]
  431369:	rol    BYTE PTR [eax],cl
  43136b:	inc    WORD PTR fs:[eax]
  43136f:	(bad)  
  431370:	(bad)  [esi]
  431372:	jmp    DWORD PTR [ebx-0x18]
  431375:	add    BYTE PTR [eax],al
  431377:	or     DWORD PTR [eax+0x67],0x0
  43137b:	rol    esp,cl
  43137d:	add    ah,cl
  43137f:	inc    edx
  431381:	sbb    edi,edi
  431383:	arpl   WORD PTR [ebp-0x1003377],di
  431389:	pop    DWORD PTR [eax]
  43138b:	fs mov edi,0x9a890000
  431391:	and    eax,DWORD PTR [ebx+0xcc208e]
  431397:	inc    DWORD PTR [edx+0x2c]
  43139a:	(bad)  
  43139b:	call   FWORD PTR [eax+eax*1-0x28740100]
  4313a2:	call   DWORD PTR [eax+0xff0008]
  4313a8:	fstp   QWORD PTR [eax-0x1]
  4313ab:	addr16 sar edi,cl
  4313ae:	mov    DWORD PTR [eax],eax
  4313b0:	cmp    al,0x57
  4313b2:	xor    DWORD PTR [ecx-0x6a],0xffffffff
  4313b6:	add    BYTE PTR [eax],al
  4313b8:	push   ss
  4313b9:	fild   DWORD PTR [ebx-0x76ffb860]
  4313bf:	mov    DWORD PTR [ecx+0x8b8003d],edi
  4313c5:	int3   
  4313c6:	dec    esp
  4313c8:	add    ah,dh
  4313ca:	sub    DWORD PTR [ebx],0x68
  4313cd:	(bad)  
  4313ce:	(bad)  
  4313cf:	(bad)  
  4313d0:	cmp    BYTE PTR [eax-0x77],al
  4313d3:	bound  edx,QWORD PTR [ebp+0xaff8900]
  4313d9:	pop    eax
  4313da:	(bad)  
  4313db:	out    dx,eax
  4313dc:	inc    ecx
  4313dd:	dec    esp
  4313df:	add    BYTE PTR [esp+eax*8+0xcd2700],ch
  4313e6:	(bad)  
  4313e7:	push   DWORD PTR [eax]
  4313e9:	int3   
  4313ea:	mov    DWORD PTR [ecx-0xffff42],eax
  4313f0:	mov    edx,0x9fd98306
  4313f5:	inc    DWORD PTR [ebx-0x77ea00]
  4313fb:	push   0x43
  4313fd:	(bad)  
  4313fe:	(bad)  
  4313ff:	(bad)  
  431400:	cmp    al,0x72
  431402:	add    dh,ch
  431404:	sbb    al,BYTE PTR [eax]
  431406:	(bad)  
  431407:	(bad)  
  431408:	std    
  431409:	fadd   DWORD PTR [eax]
  43140b:	and    BYTE PTR [ebp-0x20ff7c01],ah
  431411:	mov    ecx,0xffb7a3ff
  431416:	int3   
  431417:	add    BYTE PTR [ecx+eiz*1-0x3c701],dl
  43141e:	int3   
  43141f:	add    BYTE PTR [eax+0x513400c5],bl
  431425:	add    DWORD PTR [ebx-0x7c53cc34],0x37
  43142c:	test   DWORD PTR [eax],eax
  43142e:	add    ah,cl
  431430:	add    eax,0x9616000e
  431435:	add    DWORD PTR [eax],0xffffffff
  431438:	in     eax,dx
  431439:	mov    al,ds:0xff1909cc
  43143e:	add    BYTE PTR [eax],al
  431440:	sbb    bl,BYTE PTR [ebx-0x77]
  431443:	jne    0x431437
  431445:	dec    esp
  431447:	add    bl,al
  431449:	mov    ebp,0xcc1a5c00
  43144e:	cmp    edi,0xffffffab
  431451:	xor    esp,ecx
  431453:	mov    esp,0xccffcce5
  431458:	jmp    0x4314b6
  43145a:	(bad)  
  43145b:	fbstp  TBYTE PTR [ebx]
  43145d:	add    bh,bh
  43145f:	dec    DWORD PTR [esi]
  431461:	nop
  431462:	(bad)  
  431463:	mov    edx,0x8383ffc5
  431468:	mov    dl,dl
  43146a:	call   FWORD PTR [esi]
  43146c:	inc    ebp
  43146d:	int3   
  43146e:	(bad)  
  43146f:	inc    DWORD PTR [ebp-0x661900b1]
  431475:	add    BYTE PTR [eax],al
  431477:	add    ah,al
  431479:	xchg   ebp,eax
  43147a:	add    BYTE PTR [ebx-0x7600009b],bh
  431480:	mov    edx,0xeff3ff0d
  431485:	inc    DWORD PTR [eax]
  431487:	inc    edx
  431489:	dec    edi
  43148a:	add    BYTE PTR [ebx-0x17],ch
  43148d:	add    DWORD PTR [eax],0xffffff83
  431490:	lods   eax,DWORD PTR ds:[esi]
  431491:	push   0x3713ff
  431496:	mov    edi,edi
  431498:	sub    DWORD PTR ss:[ecx-0x7c8876],ecx
  43149f:	add    ch,al
  4314a1:	out    dx,eax
  4314a2:	jmp    DWORD PTR [ebp+0xccff33]
  4314a8:	add    eax,0x358b83d7
  4314ad:	inc    DWORD PTR [eax]
  4314af:	add    BYTE PTR [esi-0xf],bl
  4314b2:	cmp    DWORD PTR [esi-0xff004a],0x69
  4314b9:	ret    
  4314ba:	mov    DWORD PTR [edi],ebp
  4314bc:	or     edi,edi
  4314be:	add    DWORD PTR [eax],0xffffffe4
  4314c1:	fiadd  WORD PTR [ebx-0x33ffb826]
  4314c7:	inc    edx
  4314c9:	test   al,0x83
  4314cb:	daa    
  4314cc:	pop    ds
  4314cd:	inc    DWORD PTR [eax]
  4314cf:	or     DWORD PTR [ebx-0x637bff1a],0xffffffff
  4314d6:	(bad)  
  4314d7:	jmp    DWORD PTR [eax]
  4314d9:	add    al,BYTE PTR [eax]
  4314db:	loope  0x431508
  4314dd:	(bad)  
  4314de:	inc    DWORD PTR [ebx+0x43ff9bc5]
  4314e4:	sub    ecx,DWORD PTR [ecx+0x5e6b0000]
  4314ea:	call   DWORD PTR [ecx]
  4314ec:	iret   
  4314ed:	add    bh,bh
  4314ef:	push   ebp
  4314f1:	add    eax,0x1fe83
  4314f6:	int3   
  4314f7:	push   DWORD PTR [ebx]
  4314f9:	nop
  4314fa:	int3   
  4314fb:	inc    edx
  4314fc:	clc    
  4314fd:	mov    DWORD PTR [ebx+0xe8b6ff],eax
  431503:	imul   edx,esi,0xffffffff
  431506:	(bad)  
  431507:	(bad)  
  431508:	jge    0x431562
  43150a:	and    DWORD PTR [edi+0x3c],0xffffffff
  43150e:	mov    DWORD PTR [eax],eax
  431510:	loopne 0x4314ba
  431512:	cmp    ebp,0x9
  431515:	int3   
  431516:	add    bh,bh
  431518:	ds sar bh,0x6d
  43151c:	retf   
  43151d:	int3   
  43151e:	add    BYTE PTR [eax],al
  431520:	in     al,dx
  431521:	data16 int3 
  431523:	mov    ebx,0x8300ff67
  431528:	mov    eax,0x9c11ff22
  43152d:	cmp    edi,0xffffffff
  431530:	xchg   ebx,eax
  431531:	push   eax
  431532:	add    BYTE PTR [ebx],bl
  431534:	stos   DWORD PTR es:[edi],eax
  431535:	add    DWORD PTR [eax],0xffffffcc
  431538:	les    ebp,FWORD PTR [ebx-0x1]
  43153b:	repz in al,dx
  43153d:	inc    DWORD PTR [eax]
  43153f:	add    ch,ch
  431541:	into   
  431542:	add    BYTE PTR [edx-0x7c007cb0],ah
  431548:	dec    eax
  431549:	sub    bh,bh
  43154b:	jbe    0x4315a0
  43154d:	add    bh,bh
  43154f:	jmp    DWORD PTR [esi+eax*2-0xde1501]
  431556:	cmp    edi,0x50
  431559:	dec    edi
  43155a:	inc    DWORD PTR [esi]
  43155c:	test   ah,0xff
  43155f:	add    BYTE PTR [ebx+0x46088376],bh
  431565:	add    ah,cl
  431567:	(bad)  
  431568:	fsubr  QWORD PTR [ebx+0x982a00]
  43156e:	(bad)  
  43156f:	call   edi
  431571:	push   cs
  431572:	jmp    DWORD PTR [ebx-0xfe]
  431578:	xchg   BYTE PTR [ebx],al
  43157a:	jmp    FWORD PTR [esi+0x1f]
  43157d:	or     DWORD PTR [ecx-0xf5ca00],0xc
  431584:	sbb    BYTE PTR [eax],al
  431586:	inc    DWORD PTR [ebx+0x4dccdd27]
  43158c:	pusha  
  43158d:	int3   
  43158e:	cmp    edi,0xffffffe6
  431591:	sbb    edi,edi
  431593:	pop    esp
  431594:	add    WORD PTR [ebx-0x2a7a01],0x4d
  43159c:	sub    eax,0x9fff00ff
  4315a1:	in     al,0xff
  4315a3:	pop    ss
  4315a4:	mov    edi,?
  4315a6:	add    bh,bh
  4315a8:	push   es
  4315a9:	ja     0x4315ab
  4315ab:	sbb    al,0x6e
  4315ad:	inc    DWORD PTR [eax]
  4315af:	call   DWORD PTR [ecx+0x5b]
  4315b2:	add    BYTE PTR [edx-0x2c],ch
  4315b5:	add    DWORD PTR [eax],0xffffffff
  4315b8:	jmp    eax
  4315ba:	jmp    FWORD PTR [eax]
  4315bc:	idiv   edi
  4315be:	(bad)  
  4315bf:	call   DWORD PTR [edi-0x23e200ab]
  4315c5:	add    bh,bh
  4315c7:	add    BYTE PTR [esi],bh
  4315c9:	xor    bh,bh
  4315cb:	pop    esi
  4315cc:	rol    BYTE PTR [ebx-0x322e7c77],cl
  4315d2:	call   DWORD PTR [edi-0x13]
  4315d5:	add    BYTE PTR [ecx-0x7c926200],cl
  4315db:	pop    ss
  4315dc:	pop    edi
  4315dd:	add    BYTE PTR [eax],al
  4315df:	add    BYTE PTR [edx+0x67],cl
  4315e2:	call   DWORD PTR [ebp-0x7cff00b5]
  4315e8:	dec    esp
  4315e9:	ins    DWORD PTR es:[edi],dx
  4315ea:	dec    esi
  4315ec:	sub    bh,bh
  4315ee:	mov    DWORD PTR [ebx+0x2f00c26e],eax
  4315f4:	rol    BYTE PTR [eax],0x83
  4315f7:	add    BYTE PTR [ecx-0x61],bh
  4315fa:	push   edi
  4315fc:	add    eax,0x5dff8383
  431601:	jle    0x431603
  431603:	mov    edx,DWORD PTR [esi-0x1]
  431606:	add    bh,bh
  431608:	out    dx,al
  431609:	push   esp
  43160a:	call   DWORD PTR [edx-0x51]
  43160d:	mov    DWORD PTR [eax],eax
  43160f:	and    DWORD PTR [ebp+0x36],0xffffffff
  431613:	mov    bl,0xe3
  431615:	or     esp,0xffffffff
  431618:	shl    DWORD PTR [ecx-0x34],1
  43161b:	pusha  
  43161c:	mov    ebx,0x26000083
  431621:	jmp    0xffa06ea9
  431626:	inc    DWORD PTR [eax]
  431628:	stos   DWORD PTR es:[edi],eax
  431629:	cmp    bh,0xba
  43162c:	add    DWORD PTR [eax],0xf1bffff
  431632:	mov    DWORD PTR [ebx+0x83ff9a],ecx
  431638:	push   es
  431639:	ret    0xadff
  43163c:	sbb    al,0xff
  43163e:	int3   
  43163f:	mov    DWORD PTR [ebp+0x28],eax
  431642:	add    BYTE PTR [ebp+0x26],dl
  431645:	add    bh,bh
  431647:	xor    DWORD PTR [edx+0x6ea0ff79],0x0
  43164e:	cmp    edi,0xffffffdc
  431651:	sbb    edi,edi
  431653:	ja     0x431689
  431655:	cmp    edi,0xffffffff
  431658:	inc    edx
  431659:	xchg   edi,edi
  43165b:	push   esp
  43165c:	fld    DWORD PTR [eax]
  43165e:	add    DWORD PTR [eax],0x20
  431661:	ret    0x29ff
  431664:	iret   
  431665:	add    DWORD PTR [eax],0xffffffff
  431668:	ins    DWORD PTR es:[edi],dx
  431669:	mov    ch,0xff
  43166b:	jmp    0xf9a56
  431670:	jmp    0x431671
  431672:	add    BYTE PTR [edx-0x6b],dl
  431675:	int3   
  431676:	add    BYTE PTR [ecx-0x2f33ac7e],cl
  43167c:	jp     0x43167d
  43167e:	dec    esp
  431680:	sub    eax,0xabb3ff0d
  431685:	or     DWORD PTR [ecx-0x76f44001],0x69
  43168c:	cwde   
  43168d:	int3   
  43168e:	add    DWORD PTR [ebx-0x4276b2be],0x3
  431695:	inc    DWORD PTR [ebx-0x793c01]
  43169b:	and    edi,DWORD PTR [edi-0x6cff0001]
  4316a1:	cmp    bh,bh
  4316a3:	and    DWORD PTR [edi+0x0],esi
  4316a6:	add    BYTE PTR [eax],al
  4316a8:	cmp    eax,0x3c6b009f
  4316ad:	add    bh,bh
  4316af:	add    BYTE PTR [ecx-0x50],dh
  4316b2:	int3   
  4316b3:	and    eax,0x89ff83e7
  4316b8:	mov    esp,0x63bd00bc
  4316bd:	dec    DWORD PTR [ecx-0x7ceea101]
  4316c3:	(bad)  
  4316c4:	cmp    BYTE PTR [eax],al
  4316c6:	add    ah,cl
  4316c8:	xchg   edi,eax
  4316c9:	bound  eax,QWORD PTR [ebx-0xa40e]
  4316cf:	mov    eax,edx
  4316d1:	mov    eax,0xff5ee900
  4316d6:	inc    DWORD PTR [eax]
  4316d8:	popf   
  4316d9:	jle    0x4316da
  4316db:	adc    DWORD PTR [ecx-0x7d],esp
  4316de:	inc    DWORD PTR [eax]
  4316e0:	mov    dl,0x14
  4316e2:	add    BYTE PTR [edx],cl
  4316e4:	xor    edi,edi
  4316e6:	add    bh,bh
  4316e8:	jae    0x4316b2
  4316ea:	sub    DWORD PTR [edx-0x7c005f],0xffffffde
  4316f1:	cmp    eax,DWORD PTR [eax]
  4316f3:	scas   eax,DWORD PTR es:[edi]
  4316f4:	mov    bh,bh
  4316f6:	int3   
  4316f7:	adc    ebx,0xffffff8a
  4316fa:	inc    eax
  4316fc:	call   0xf7421784
  431701:	cmp    edi,0x1f
  431704:	fiadd  WORD PTR [eax]
  431706:	add    DWORD PTR [eax],0xffffff95
  431709:	(bad)  
  43170a:	jmp    DWORD PTR [edi+eiz*4+0xffffff]
  431711:	jb     0x431712
  431713:	mov    bh,0x92
  431715:	inc    DWORD PTR [eax]
  431717:	sbb    DWORD PTR [esi+esi*8],0xffffffcc
  43171b:	jl     0x43179c
  43171d:	inc    DWORD PTR [eax]
  43171f:	and    DWORD PTR [eax+0x5c71ffd6],0xffffffcc
  431726:	cmp    edi,0xffffffff
  431729:	js     0x43172b
  43172b:	jne    0x431717
  43172d:	(bad)  
  43172e:	inc    DWORD PTR [eax]
  431730:	adc    dl,BYTE PTR [ebx]
  431732:	dec    DWORD PTR [esi+0x67]
  431735:	add    BYTE PTR [ebx-0xe0c434],al
  43173b:	cmp    eax,0x89ffcc30
  431740:	push   0x9cf3ffaa
  431745:	(bad)  
  431746:	inc    DWORD PTR [eax]
  431748:	ret    
  431749:	popf   
  43174a:	jmp    ebp
  43174c:	mov    edx,0xa489cc00
  431751:	sbb    edi,edi
  431753:	stos   DWORD PTR es:[edi],eax
  431754:	and    al,BYTE PTR [eax]
  431756:	add    bh,bh
  431758:	or     ebp,DWORD PTR [edi-0x34df7d]
  43175e:	(bad)  
  43175f:	(bad)  
  431760:	jle    0x4317ae
  431762:	add    BYTE PTR [ebx-0x32],ch
  431765:	add    BYTE PTR [eax],al
  431767:	add    BYTE PTR [eax+ecx*1-0x461f01],dl
  43176e:	add    BYTE PTR [ebx-0xbff53bf],al
  431774:	sar    bh,cl
  431776:	cmp    edi,0x5d
  431779:	ja     0x431704
  43177b:	mov    edx,ss
  43177d:	add    BYTE PTR [eax],al
  43177f:	add    dl,al
  431781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431782:	call   DWORD PTR [ecx+ebx*1-0x1]
  431786:	(bad)  
  431787:	(bad)  
  431788:	cmp    bl,BYTE PTR [ecx-0x1]
  43178b:	inc    esi
  43178c:	pop    eax
  43178d:	(bad)  
  43178e:	inc    DWORD PTR [eax]
  431790:	add    DWORD PTR [ecx],edi
  431792:	inc    eax
  431794:	cmp    eax,0x4ffffff
  431799:	daa    
  43179a:	inc    ebp
  43179c:	and    al,BYTE PTR [ebx-0x66930001]
  4317a2:	int3   
  4317a3:	js     0x4317a0
  4317a5:	add    DWORD PTR [ebx+0xad00ff],0xffffff85
  4317ac:	inc    ebx
  4317ad:	int3   
  4317ae:	add    DWORD PTR [ebx-0x52003db2],0xffffff88
  4317b5:	int3   
  4317b6:	(bad)  
  4317b7:	(bad)  
  4317b8:	js     0x431757
  4317ba:	inc    DWORD PTR [ebx-0x14]
  4317bd:	inc    DWORD PTR [eax]
  4317bf:	push   DWORD PTR [edi+0x3423cca9]
  4317c5:	dec    esp
  4317c7:	call   FWORD PTR [edx+0x527a0061]
  4317cd:	mov    edi,edi
  4317cf:	dec    DWORD PTR [esp+ebx*1]
  4317d2:	mov    DWORD PTR [ebx+0xff005a],ebx
  4317d8:	sar    DWORD PTR [esp+ecx*8+0xffbc7e],0xff
  4317e0:	sbb    eax,0xf331ff73
  4317e5:	(bad)  
  4317e6:	(bad)  
  4317e7:	dec    eax
  4317e9:	cwde   
  4317ea:	add    dl,dl
  4317ec:	jne    0x4317ed
  4317ee:	add    bh,bh
  4317f0:	imul   eax,ebp,0xffffffff
  4317f3:	shl    ebp,cl
  4317f5:	cmp    edi,0xffffffff
  4317f8:	sub    al,0x4f
  4317fa:	jmp    esi
  4317fc:	hlt    
  4317fd:	add    BYTE PTR [ecx+0x62ffff],cl
  431803:	fdiv   DWORD PTR [esi-0x6800007d]
  431809:	xlat   BYTE PTR ds:[ebx]
  43180a:	push   DWORD PTR [ecx-0x72]
  43180d:	mov    esp,ecx
  43180f:	call   FWORD PTR [eax]
  431811:	push   ecx
  431812:	call   FWORD PTR [edx+0x47]
  431815:	inc    DWORD PTR [eax]
  431817:	jmp    FWORD PTR [edi+0x6e66003d]
  43181d:	(bad)  
  43181e:	dec    esp
  431820:	inc    eax
  431821:	pop    ebx
  431822:	call   DWORD PTR [eax-0x7c7ce5]
  431828:	xchg   esp,eax
  431829:	pop    esi
  43182a:	and    DWORD PTR [esi+edx*1],0x0
  43182e:	add    DWORD PTR [ebx-0x190006a4],0x2a
  431835:	inc    DWORD PTR [eax]
  431837:	int3   
  431838:	sti    
  431839:	add    DWORD PTR [eax],eax
  43183b:	jae    0x4317d9
  43183d:	int3   
  43183e:	int3   
  43183f:	add    BYTE PTR [esi-0x2b0d0048],bh
  431845:	(bad)  
  431846:	dec    DWORD PTR [ecx-0x1cff407b]
  43184c:	inc    edx
  43184d:	add    DWORD PTR [eax],0xffffff83
  431850:	stos   DWORD PTR es:[edi],eax
  431851:	jns    0x431852
  431853:	sub    al,0x98
  431855:	mov    DWORD PTR [eax],eax
  431857:	call   DWORD PTR [eax+eax*8]
  43185a:	inc    DWORD PTR [ebx-0xff765d]
  431860:	nop
  431861:	dec    esi
  431862:	add    BYTE PTR [ecx-0xeb],bh
  431868:	mov    esi,0x8ce0ff1f
  43186d:	inc    DWORD PTR [eax]
  43186f:	add    BYTE PTR [eax-0x44],bl
  431872:	dec    DWORD PTR [esp+edx*2]
  431875:	add    BYTE PTR [ecx-0x33e52101],cl
  43187b:	mov    edi,0x83cc00d6
  431880:	sub    edx,eax
  431882:	call   DWORD PTR [ebx-0xff0040]
  431888:	or     ah,BYTE PTR [ebp-0x1]
  43188b:	sbb    ebp,DWORD PTR [eax+eax*1-0x55387d00]
  431892:	add    BYTE PTR [eax-0x7676ff78],cl
  431898:	aam    0xda
  43189a:	add    BYTE PTR [ecx+0x60],al
  43189d:	add    DWORD PTR [eax],0x0
  4318a0:	je     0x431853
  4318a2:	add    BYTE PTR [eax+ebx*1],bl
  4318a5:	(bad)  
  4318a6:	(bad)  
  4318a7:	call   DWORD PTR [ecx+0x44bd00be]
  4318ad:	(bad)  
  4318ae:	(bad)  
  4318af:	dec    eax
  4318b1:	cmp    cl,ah
  4318b3:	(bad)  
  4318b4:	into   
  4318b5:	add    BYTE PTR [eax],al
  4318b7:	(bad)  
  4318b8:	mov    edi,0x6e34ff70
  4318bd:	add    bh,bh
  4318bf:	add    al,bh
  4318c1:	sub    ah,cl
  4318c3:	jns    0x431879
  4318c5:	add    DWORD PTR [eax],0x0
  4318c8:	cmp    DWORD PTR ds:0xfff4c700,eax
  4318ce:	(bad)  
  4318cf:	push   DWORD PTR [esi-0x1b5c7c61]
  4318d5:	mov    edi,edi
  4318d7:	int3   
  4318d8:	sbb    al,BYTE PTR [edi+edi*8-0x78]
  4318dc:	xchg   edi,edi
  4318de:	int3   
  4318df:	add    bh,dh
  4318e1:	(bad)  
  4318e2:	dec    esp
  4318e4:	lods   al,BYTE PTR ds:[esi]
  4318e5:	mov    DWORD PTR [eax],eax
  4318e7:	jmp    FWORD PTR [ebp-0x46]
  4318ea:	and    esp,0x1b
  4318ed:	(bad)  
  4318ee:	dec    DWORD PTR [ecx+0x5300ff80]
  4318f4:	retf   0x83ff
  4318f7:	push   DWORD PTR [eax]
  4318f9:	inc    edi
  4318fa:	jmp    DWORD PTR [ebx]
  4318fc:	mov    eax,ds:0x74cc8900
  431901:	add    edi,edi
  431903:	int3   
  431904:	arpl   di,di
  431906:	add    BYTE PTR [eax],al
  431908:	xor    ebp,edi
  43190a:	call   DWORD PTR ds:0xffcc8313
  431910:	cmp    ebx,DWORD PTR [edx-0x336ae17d]
  431916:	add    DWORD PTR [ebx+0x4eff9a15],0x66
  43191d:	add    ah,cl
  43191f:	mov    DWORD PTR [ecx+0x20bd0082],edx
  431925:	(bad)  
  431926:	inc    DWORD PTR [ebx+0x6083f1ef]
  43192c:	push   cs
  43192d:	int3   
  43192e:	inc    DWORD PTR [ebx-0x3ffc6b1]
  431934:	push   eax
  431935:	add    BYTE PTR [eax],al
  431937:	call   FWORD PTR [ecx-0x13830075]
  43193d:	(bad)  
  43193e:	inc    DWORD PTR [eax]
  431940:	mov    DWORD PTR [esi],esp
  431942:	add    BYTE PTR [edi-0x337cac],cl
  431948:	shr    BYTE PTR [ebx],cl
  43194a:	jmp    DWORD PTR [eax+0x890025]
  431950:	scas   al,BYTE PTR es:[edi]
  431951:	clc    
  431952:	add    BYTE PTR [esi+0xff83be],ch
  431958:	xlat   BYTE PTR ds:[ebx]
  431959:	sub    BYTE PTR [eax],al
  43195b:	lea    ebp,[edi+0x53000083]
  431961:	scas   al,BYTE PTR es:[edi]
  431962:	add    BYTE PTR [edi+eiz*2+0x2389ffff],dl
  431969:	push   ds
  43196a:	add    BYTE PTR [ebx],al
  43196c:	jmp    0xff07:0x92cc83ff
  431973:	sar    DWORD PTR [ebx+0x0],1
  431976:	cmp    edi,0x59
  431979:	mov    cl,0xff
  43197b:	sti    
  43197c:	jo     0x43197e
  43197e:	(bad)  
  43197f:	dec    eax
  431981:	adc    DWORD PTR [eax],eax
  431983:	mov    esp,0x89ff48
  431988:	adc    eax,0x39750086
  43198d:	(bad)  
  43198e:	(bad)  
  43198f:	dec    DWORD PTR [edi]
  431991:	mov    ebx,0xccc02783
  431996:	int3   
  431997:	add    BYTE PTR [esi],bl
  431999:	iret   
  43199a:	add    DWORD PTR [edi-0x760100],0x3a
  4319a1:	pop    ds
  4319a2:	dec    DWORD PTR [ebp+eax*4-0x2e7c7700]
  4319a9:	mov    dh,0xff
  4319ab:	dec    esi
  4319ac:	fadd   QWORD PTR [eax]
  4319ae:	(bad)  
  4319af:	(bad)  
  4319b0:	(bad)  
  4319b1:	xor    edi,edi
  4319b3:	addr16 into 
  4319b5:	(bad)  
  4319b6:	inc    DWORD PTR [eax]
  4319b8:	leave  
  4319b9:	(bad)  
  4319bb:	icebp  
  4319bc:	(bad)  [ecx-0x36480000]
  4319c2:	inc    DWORD PTR [ecx-0x56]
  4319c5:	add    ah,cl
  4319c7:	push   esp
  4319c9:	pop    esp
  4319ca:	mov    DWORD PTR [ecx-0x18],eax
  4319cd:	inc    DWORD PTR [eax]
  4319cf:	add    BYTE PTR [esi-0xff8e01],bl
  4319d5:	inc    ecx
  4319d6:	or     eax,0x24d7ffb5
  4319db:	add    BYTE PTR [edi+0x0],dl
  4319de:	(bad)  
  4319df:	call   FWORD PTR [edx+0xff1dff]
  4319e5:	push   ecx
  4319e6:	shr    DWORD PTR [edi+0x0],0x93
  4319ea:	dec    esi
  4319eb:	add    dl,cl
  4319ed:	(bad)  
  4319ee:	(bad)  
  4319ef:	jmp    FWORD PTR [esi-0xf900]
  4319f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319f6:	pop    edi
  4319f7:	dec    esi
  4319f8:	add    BYTE PTR [edi-0x68],bh
  4319fb:	and    ebp,0x0
  4319fe:	(bad)  
  4319ff:	dec    DWORD PTR [eax-0xffac7d]
  431a05:	add    esp,DWORD PTR [ebp+0x23]
  431a08:	and    DWORD PTR [eax-0x28009e],0xffffffcc
  431a0f:	int3   
  431a10:	sub    bh,bh
  431a12:	mov    ch,0xcc
  431a14:	inc    DWORD PTR [edi+eax*1+0x3c]
  431a18:	call   FWORD PTR [esi-0x9b0095]
  431a1e:	dec    DWORD PTR [ecx+0x43ff0a]
  431a24:	jmp    FWORD PTR [ebx+edx*1-0x153976a5]
  431a2b:	call   DWORD PTR [ebp-0x1]
  431a2e:	add    ah,cl
  431a30:	add    edi,edi
  431a32:	in     al,0x0
  431a34:	mov    ebx,ebx
  431a36:	pop    ebp
  431a37:	jp     0x431a38
  431a39:	pop    es
  431a3a:	idiv   edi
  431a3c:	retf   
  431a3d:	(bad)  
  431a3e:	(bad)  
  431a3f:	dec    DWORD PTR [esi]
  431a41:	add    BYTE PTR [edi],al
  431a43:	or     DWORD PTR [ecx-0x7611bb1e],0x24
  431a4a:	pop    ebp
  431a4b:	mov    ecx,ebx
  431a4d:	add    bh,bh
  431a4f:	(bad)  
  431a50:	in     al,dx
  431a51:	jmp    DWORD PTR [eax+eax*1]
  431a54:	add    bl,ah
  431a56:	or     BYTE PTR [ebx-0x7c215101],dl
  431a5c:	sub    bh,bh
  431a5e:	add    bh,bh
  431a60:	(bad)  
  431a61:	dec    DWORD PTR [ecx]
  431a63:	add    BYTE PTR [ebx+0x43e39e],al
  431a69:	(bad)  
  431a6a:	push   ebp
  431a6b:	add    BYTE PTR [ebx+0x77838300],al
  431a71:	jmp    ebx
  431a73:	inc    DWORD PTR [eax]
  431a75:	mov    ecx,0x24ff39b5
  431a7a:	xor    edi,edi
  431a7c:	push   es
  431a7d:	inc    DWORD PTR [ebx+0x74ff3eff]
  431a83:	int3   
  431a84:	inc    DWORD PTR [ebp+0x56ffb052]
  431a8a:	inc    esp
  431a8b:	add    BYTE PTR [eax+eax*1-0xad0000],cl
  431a92:	out    dx,eax
  431a93:	inc    DWORD PTR [ebx-0x334d73cf]
  431a99:	mov    esi,0xfffa0
  431a9e:	cmp    edi,0xffffffbd
  431aa1:	add    BYTE PTR [esi-0x1de00100],cl
  431aa7:	dec    DWORD PTR cs:[ebx+0x3efffb]
  431aae:	dec    esp
  431ab0:	inc    ecx
  431ab1:	mov    ebx,edi
  431ab3:	add    ah,cl
  431ab5:	repnz add DWORD PTR [ebp-0x34],ebp
  431ab9:	enter  0xff15,0x13
  431abd:	(bad)  
  431abe:	inc    DWORD PTR [ebx+0x75ff37]
  431ac4:	jmp    FWORD PTR [ecx+0x51]
  431ac7:	data16 (bad) 
  431ac9:	jg     0x431ad3
  431acb:	jmp    esi
  431acd:	(bad)  
  431ace:	(bad)  
  431acf:	jmp    FWORD PTR [ebp-0x77]
  431ad2:	push   ss
  431ad3:	cmp    edi,0xffffffaa
  431ad6:	lods   al,BYTE PTR ds:[esi]
  431ad7:	aad    0x89
  431ad9:	cmp    DWORD PTR [edx+0x2c89],esi
  431adf:	int3   
  431ae0:	popa   
  431ae1:	add    BYTE PTR [edi-0x3c2eff01],dh
  431ae7:	push   ds
  431ae8:	call   DWORD PTR [edi]
  431aea:	jnp    0x431aeb
  431aec:	and    bh,bh
  431aee:	add    BYTE PTR [eax],al
  431af0:	test   DWORD PTR [eax],0xf9ff00a7
  431af6:	jae    0x431b1a
  431af8:	mov    DWORD PTR [ecx+0xc9ff90],edx
  431afe:	add    BYTE PTR [eax],al
  431b00:	call   FWORD PTR fs:[esi+0x0]
  431b04:	add    BYTE PTR [ecx+edi*8+0x488a83e3],dh
  431b0b:	int3   
  431b0c:	out    dx,eax
  431b0d:	add    DWORD PTR [eax],0xffffff83
  431b10:	jp     0x431b11
  431b12:	scas   eax,DWORD PTR es:[edi]
  431b13:	(bad)  
  431b14:	jmp    DWORD PTR [esi+0x6007a5e]
  431b1a:	in     al,0xcc
  431b1c:	mov    bh,bh
  431b1e:	add    BYTE PTR [eax],al
  431b20:	out    dx,al
  431b21:	jmp    FWORD PTR [eax]
  431b23:	add    bh,bh
  431b25:	or     BYTE PTR [ecx+0x5ec3ff61],bl
  431b2b:	int3   
  431b2c:	jae    0x431b2e
  431b2e:	add    BYTE PTR [ebx-0x9800a5],al
  431b34:	jmp    DWORD PTR [ecx+0x5f]
  431b37:	mov    bl,0xff
  431b39:	jno    0x431b1b
  431b3b:	add    BYTE PTR [ecx+0x3a83ffff],bh
  431b41:	add    BYTE PTR [edx-0x7d],ch
  431b44:	cmp    DWORD PTR [edi*1+0x3f88ff14],0xffffffff
  431b4c:	xlat   BYTE PTR ds:[ebx]
  431b4d:	inc    DWORD PTR [eax]
  431b4f:	push   DWORD PTR [ecx-0xb334]
  431b55:	inc    ebp
  431b56:	bound  edi,QWORD PTR [ebp-0x5dc001]
  431b5c:	inc    edi
  431b5d:	add    BYTE PTR [ebx+0x3000aff],al
  431b63:	(bad)  
  431b64:	inc    esp
  431b66:	jle    0x431b8e
  431b68:	mov    DWORD PTR [ebx-0x7650ff89],ecx
  431b6e:	add    ah,cl
  431b70:	cwde   
  431b71:	(bad)  
  431b72:	mov    ecx,0x3b9acc83
  431b77:	mov    esi,0xffa58483
  431b7c:	lea    eax,[eax]
  431b7e:	(bad)  
  431b7f:	(bad)  
  431b80:	mov    ebx,0x83b3cc
  431b85:	or     DWORD PTR [esi],0x58
  431b88:	jmp    FWORD PTR [edi]
  431b8a:	inc    eax
  431b8b:	(bad)  
  431b8c:	in     eax,dx
  431b8d:	add    BYTE PTR [ebx-0x14ffb900],al
  431b93:	dec    esp
  431b95:	dec    esi
  431b96:	mov    fs,WORD PTR [ebp+0x7f4800]
  431b9c:	mov    BYTE PTR [ebx+0xdc0083],0x90
  431ba3:	add    bh,bh
  431ba5:	push   ebx
  431ba6:	int3   
  431ba7:	sub    bh,bh
  431ba9:	enter  0x89cd,0x24
  431bad:	inc    DWORD PTR [eax]
  431baf:	call   FWORD PTR [ecx-0xee01]
  431bb5:	stc    
  431bb6:	mov    bh,BYTE PTR [ebp-0x1]
  431bb9:	xchg   edx,eax
  431bba:	ror    DWORD PTR [ecx-0xb0],cl
  431bc0:	inc    esp
  431bc1:	int3   
  431bc2:	test   DWORD PTR [eax],0xa4581fff
  431bc8:	add    ch,ah
  431bca:	mov    WORD PTR [eax],es
  431bcc:	cmp    bh,0xff
  431bcf:	push   DWORD PTR [edi+0xffaeff]
  431bd5:	or     esp,esp
  431bd7:	jne    0x431bd9
  431bd9:	add    BYTE PTR [esi-0x1200],dl
  431bdf:	call   DWORD PTR [ebp-0x7c007901]
  431be5:	xor    DWORD PTR [eax-0x7b],ecx
  431be8:	int3   
  431be9:	mov    ah,0xf1
  431beb:	add    BYTE PTR [edi+edi*8],ah
  431bee:	add    bh,bh
  431bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431bf1:	dec    DWORD PTR [ecx-0x45f90001]
  431bf7:	add    DWORD PTR [eax],0x50ff753c
  431bfd:	add    bh,bh
  431bff:	inc    DWORD PTR [ecx-0x1]
  431c02:	cmp    edi,edi
  431c04:	add    BYTE PTR [edi+0x7d],ch
  431c07:	bound  ecx,QWORD PTR [ecx-0xa7650e5]
  431c0d:	mov    edi,edi
  431c0f:	jmp    edi
  431c11:	adc    esp,0xffffffff
  431c14:	jmp    DWORD PTR [ebp+edx*4-0x13bc005e]
  431c1b:	add    BYTE PTR [ebx-0x7eff0100],bl
  431c21:	call   DWORD PTR ds:0x63ecffff
  431c27:	cmp    bh,bh
  431c29:	retf   0xffcd
  431c2c:	fdiv   st(7),st
  431c2e:	or     esp,0xffffffee
  431c31:	add    bl,ah
  431c33:	(bad)  
  431c34:	jmp    DWORD PTR [ebp+0x75]
  431c37:	aas    
  431c38:	dec    DWORD PTR [esp+ebx*2-0xffcb01]
  431c3f:	call   DWORD PTR [edi]
  431c41:	mov    edx,esi
  431c43:	(bad)  
  431c44:	call   DWORD PTR [esi]
  431c46:	inc    DWORD PTR [edi+edi*8]
  431c49:	xor    al,0xfc
  431c4b:	adc    DWORD PTR [eax+eax*1-0x3342ff01],0xffffff85
  431c53:	add    BYTE PTR [ebx-0x336b9eb0],al
  431c59:	pushf  
  431c5a:	or     bh,bh
  431c5c:	test   al,0xcc
  431c5e:	(bad)  
  431c5f:	call   FWORD PTR [eax]
  431c61:	(bad)  
  431c62:	out    dx,eax
  431c63:	(bad)  
  431c64:	push   DWORD PTR [ecx+0x37]
  431c67:	dec    ebx
  431c68:	jmp    DWORD PTR [eax-0xa]
  431c6b:	or     DWORD PTR [ebx],0xffffffff
  431c6e:	(bad)  
  431c6f:	jmp    ecx
  431c71:	int3   
  431c72:	sub    eax,0xecd1ccff
  431c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c78:	(bad)  
  431c79:	jp     0x431cf3
  431c7b:	dec    DWORD PTR [ebx+0x100000ff]
  431c81:	and    edi,0xffffffff
  431c84:	dec    eax
  431c86:	push   cs
  431c87:	mov    edi,?
  431c89:	test   DWORD PTR [esi],esp
  431c8b:	add    bl,ch
  431c8d:	inc    DWORD PTR [eax]
  431c8f:	int3   
  431c90:	in     eax,dx
  431c91:	add    BYTE PTR [edi+edi*8],bl
  431c94:	(bad)  
  431c95:	std    
  431c96:	cmp    dl,bh
  431c98:	jmp    FWORD PTR [ebp-0x72]
  431c9b:	jmp    FWORD PTR [esi+0x0]
  431c9e:	(bad)  
  431c9f:	inc    esi
  431ca1:	and    esi,0xffffffff
  431ca4:	add    esp,0x34
  431ca7:	daa    
  431ca8:	push   DWORD PTR [edi-0x640085]
  431cae:	dec    esp
  431cb0:	xchg   ecx,eax
  431cb1:	add    BYTE PTR [eax-0x2590001],bl
  431cb7:	xlat   BYTE PTR ds:[ebx]
  431cb8:	add    BYTE PTR [ebp-0x430043],al
  431cbe:	(bad)  
  431cbf:	inc    DWORD PTR [edi+edi*8]
  431cc2:	push   cs
  431cc3:	add    BYTE PTR [eax],al
  431cc5:	pop    esp
  431cc6:	nop
  431cc7:	(bad)  
  431cc8:	(bad)  
  431cc9:	aas    
  431cca:	xor    al,0x0
  431ccc:	jp     0x431c57
  431cce:	(bad)  
  431ccf:	call   edi
  431cd1:	add    BYTE PTR [eax-0x70d77d00],bh
  431cd7:	inc    edx
  431cd8:	dec    DWORD PTR [eax]
  431cda:	xchg   BYTE PTR [ebx-0x333304],al
  431ce0:	out    0x0,eax
  431ce2:	cdq    
  431ce3:	dec    esp
  431ce5:	fidiv  DWORD PTR [ebp+ecx*4-0x1]
  431ce9:	lods   al,BYTE PTR ds:[esi]
  431cea:	mov    WORD PTR [eax],es
  431cec:	pop    ss
  431ced:	(bad)  
  431cee:	inc    DWORD PTR [eax]
  431cf0:	test   bh,bh
  431cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431cf3:	add    bh,bh
  431cf5:	mov    eax,0xc83e3d7
  431cfa:	sti    
  431cfb:	inc    ecx
  431cfd:	(bad)  
  431cfe:	(bad)  
  431cff:	call   DWORD PTR [edx-0x76ff8f01]
  431d05:	into   
  431d06:	cmp    BYTE PTR [esi-0xd00f01],bl
  431d0c:	jl     0x431d0d
  431d0e:	(bad)  
  431d0f:	call   FWORD PTR [ecx+0x0]
  431d12:	jmp    0xffa1:0xcc2ff83
  431d19:	jae    0x431d3c
  431d1b:	add    dl,dl
  431d1d:	mov    DWORD PTR [ecx+0x37836600],ecx
  431d23:	add    bh,bh
  431d25:	pop    ecx
  431d26:	(bad)  
  431d27:	cmp    bh,0x7f
  431d2a:	push   ss
  431d2b:	sub    DWORD PTR [edi+edi*8-0x8f0100],0x43
  431d33:	add    DWORD PTR [eax],0xffffffc2
  431d36:	sbb    eax,0x141f0003
  431d3b:	call   DWORD PTR [edx-0x1]
  431d3e:	add    BYTE PTR [eax],al
  431d40:	(bad)
  431d43:	(bad)  
  431d44:	call   FWORD PTR [eax+esi*1-0x1]
  431d48:	dec    DWORD PTR [ebx-0x53]
  431d4b:	xor    edx,0xffffff89
  431d4e:	cmp    edi,0x56
  431d51:	cmp    DWORD PTR [edi+edi*8-0x4b824d00],0x0
  431d59:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431d5b:	int3   
  431d5c:	mov    ?,edi
  431d5e:	(bad)  
  431d5f:	jmp    DWORD PTR [esi]
  431d61:	add    BYTE PTR [edx+0x308c89ff],ah
  431d67:	or     al,BYTE PTR [eax]
  431d69:	push   ebp
  431d6a:	jecxz  0x431d6b
  431d6c:	(bad)  
  431d6d:	inc    DWORD PTR [eax]
  431d6f:	mov    DWORD PTR [ebx-0x1],edx
  431d72:	sahf   
  431d73:	or     DWORD PTR [ecx-0xf59444],0x65
  431d7a:	ret    
  431d7b:	push   DWORD PTR [edx-0x5b000001]
  431d81:	call   DWORD PTR [ecx-0xee50001]
  431d87:	push   es
  431d88:	add    DWORD PTR ds:0x43ccda,0xffffffff
  431d8f:	add    BYTE PTR [ecx],ch
  431d91:	call   DWORD PTR ds:0x2c1eff00
  431d97:	sub    eax,DWORD PTR [ebx-0x13006e6a]
  431d9d:	add    DWORD PTR [eax],0x0
  431da0:	aam    0xff
  431da2:	and    eax,0x4170ffff
  431da7:	aam    0xff
  431da9:	fisubr WORD PTR [edx+0x0]
  431dac:	sbb    al,BYTE PTR [eax]
  431dae:	add    BYTE PTR [ecx+0x69ffb5],cl
  431db4:	call   DWORD PTR [ebx+0x1cff115f]
  431dba:	icebp  
  431dbb:	(bad)  
  431dbc:	jmp    0x9b42ea8d
  431dc1:	jmp    edx
  431dc3:	(bad)  
  431dc4:	jmp    DWORD PTR [ebx-0x4a7c0d6b]
  431dca:	or     DWORD PTR [ebx-0x3376ff0e],eax
  431dd0:	xchg   ecx,eax
  431dd1:	sbb    DWORD PTR [ebp-0xf3fff7d],0x5d
  431dd8:	add    BYTE PTR [ebx],ah
  431dda:	inc    eax
  431ddb:	int3   
  431ddc:	xor    eax,DWORD PTR [eax]
  431dde:	add    BYTE PTR [eax],al
  431de0:	stos   DWORD PTR es:[edi],eax
  431de1:	push   DWORD PTR [ecx-0x1]
  431de4:	jmp    FWORD PTR [ebx-0xe006d60]
  431dea:	inc    ebp
  431deb:	and    DWORD PTR [edi],0xffffff83
  431dee:	add    BYTE PTR [ebx-0x7ca1ffc7],al
  431df4:	add    dh,bl
  431df6:	in     al,dx
  431df7:	and    edi,edi
  431df9:	sbb    bl,ah
  431dfb:	add    dl,dl
  431dfd:	cmp    edi,0x0
  431e00:	(bad)  
  431e01:	jmp    FWORD PTR [edi+edi*8-0x1]
  431e05:	outs   dx,DWORD PTR ds:[esi]
  431e06:	test   al,ah
  431e08:	(bad)  
  431e09:	fst    QWORD PTR [edx-0x1]
  431e0c:	sbb    al,0x83
  431e0e:	dec    esp
  431e10:	and    bh,bh
  431e12:	(bad)  
  431e13:	inc    DWORD PTR [eax]
  431e15:	lds    esp,FWORD PTR [ebp+edx*4-0x1]
  431e19:	js     0x431e4e
  431e1b:	jmp    DWORD PTR [ecx-0x1b007d00]
  431e21:	call   eax
  431e23:	add    BYTE PTR [ebx+0xefe22c],al
  431e29:	mov    DWORD PTR [eax],ebx
  431e2b:	jmp    DWORD PTR [eax-0x58ff0001]
  431e31:	add    BYTE PTR [edi-0x34],cl
  431e34:	add    BYTE PTR ds:0xe9cc2857,bl
  431e3a:	adc    BYTE PTR [ecx-0x7600ff2f],cl
  431e40:	and    eax,0xfffeff
  431e45:	and    ecx,ecx
  431e47:	pop    DWORD PTR [ebx+0x22ff2316]
  431e4d:	(bad)  
  431e4e:	inc    DWORD PTR [ebx-0xc2ffc5]
  431e54:	mov    esp,ecx
  431e56:	and    eax,0x1cc7ff63
  431e5b:	inc    eax
  431e5d:	mov    DWORD PTR [ecx-0x4d00bd7d],ecx
  431e63:	cmp    edi,0x40
  431e66:	pop    edi
  431e67:	mov    ebp,0xffec7783
  431e6c:	das    
  431e6d:	cmp    edi,0x0
  431e70:	xor    eax,0x83ffc183
  431e75:	outs   dx,BYTE PTR ds:[esi]
  431e76:	ror    bl,0xff
  431e79:	enter  0xff33,0xe7
  431e7d:	inc    DWORD PTR [eax]
  431e7f:	call   FWORD PTR [esi]
  431e81:	dec    DWORD PTR [ecx+0x0]
  431e84:	int3   
  431e85:	jo     0x431e95
  431e87:	xor    eax,0x899e1d83
  431e8c:	pop    ss
  431e8d:	add    BYTE PTR [ebx-0x76ff9901],al
  431e93:	(bad)  
  431e94:	(bad)  
  431e95:	mov    ebp,0x9100981b
  431e9a:	popa   
  431e9b:	jmp    FWORD PTR [ecx-0x1]
  431e9e:	int3   
  431e9f:	(bad)  
  431ea0:	fild   WORD PTR [eax]
  431ea2:	imul   eax,DWORD PTR [ebx-0x33d44734],0xffffffff
  431ea9:	jp     0x431eec
  431eab:	mov    DWORD PTR [edx-0x1],edi
  431eae:	(bad)  
  431eaf:	call   DWORD PTR [ebp-0xffbf01]
  431eb5:	ins    BYTE PTR es:[edi],dx
  431eb6:	imul   esp,DWORD PTR [esi-0x7c8dde34],0xcc83894e
  431ec0:	leave  
  431ec1:	push   DWORD PTR [ecx+0x0]
  431ec4:	add    BYTE PTR [edx+eiz*8],bh
  431ec7:	xor    eax,DWORD PTR [ebx+0x73ffc71a]
  431ecd:	(bad)  
  431ece:	(bad)  
  431ecf:	jmp    edx
  431ed1:	dec    DWORD PTR [eax+eax*1+0x3946300]
  431ed8:	or     DWORD PTR [ebx+eax*1-0x1],0xffffffe4
  431edd:	(bad)  
  431ede:	dec    DWORD PTR [ecx-0x580020]
  431ee4:	add    BYTE PTR [edi],cl
  431ee6:	sti    
  431ee7:	loop   0x431ee8
  431ee9:	push   0xff8bff33
  431eee:	add    bh,bh
  431ef0:	jl     0x431ef1
  431ef2:	pop    eax
  431ef3:	cmp    edi,0xffffff90
  431ef6:	ins    DWORD PTR es:[edi],dx
  431ef7:	test   DWORD PTR [ebx-0x580099c9],eax
  431efd:	(bad)  
  431efe:	inc    DWORD PTR [eax]
  431f00:	xor    edi,edi
  431f02:	inc    ebx
  431f03:	add    BYTE PTR [eax],al
  431f05:	mov    BYTE PTR [esi-0x15],ah
  431f08:	int3   
  431f09:	ror    eax,0xff
  431f0c:	jmp    0x431f0d
  431f0e:	add    DWORD PTR [ebx+0xb9ff4f],0x0
  431f15:	mov    ch,0xf7
  431f17:	push   ds
  431f18:	add    BYTE PTR [ebp+0xe2ff95],dh
  431f1e:	(bad)  
  431f1f:	push   DWORD PTR [edi]
  431f21:	jmp    FWORD PTR [esi+0x0]
  431f24:	add    BYTE PTR [edi-0x7a763b4e],cl
  431f2a:	mov    esp,0xccffdccc
  431f2f:	(bad)  
  431f30:	(bad)  
  431f32:	adc    bh,bh
  431f34:	dec    DWORD PTR [edi+0x3f8311b8]
  431f3a:	jle    0x431f08
  431f3c:	jne    0x431f3d
  431f3e:	or     DWORD PTR [ecx-0xc1ffea],0x0
  431f45:	ret    0xe08a
  431f48:	adc    DWORD PTR [esp+eax*1-0x7d],0x4c
  431f4d:	mov    DWORD PTR [ecx-0x4d00d27d],ecx
  431f53:	cmp    edi,0x62
  431f56:	jge    0x431fc7
  431f58:	int3   
  431f59:	or     esp,DWORD PTR [edi-0x9e01]
  431f5f:	call   ecx
  431f61:	mov    DWORD PTR [ebx+0x0],eax
  431f64:	jmp    DWORD PTR [ecx+edi*4+0x53e200b1]
  431f6b:	xor    DWORD PTR [ebp-0x14330100],0xffffffcc
  431f72:	and    al,0x0
  431f74:	call   DWORD PTR [edx+0x56ff12cf]
  431f7a:	xchg   edx,eax
  431f7b:	add    BYTE PTR [ecx+0x0],dl
  431f7e:	add    bh,bh
  431f80:	dec    ebp
  431f81:	add    BYTE PTR [ebx-0x1],bh
  431f84:	int3   
  431f85:	or     DWORD PTR [ecx-0x2f87008a],edi
  431f8b:	add    BYTE PTR [ecx],ah
  431f8d:	add    bh,bh
  431f8f:	int3   
  431f90:	adc    al,0x0
  431f92:	mov    ebp,0x8f2900ff
  431f97:	push   ecx
  431f98:	add    BYTE PTR [ebp-0x2f00a8],ch
  431f9e:	inc    DWORD PTR [ebx-0x76ad3301]
  431fa4:	int3   
  431fa5:	mov    bh,0xcb
  431fa7:	cmp    ah,cl
  431fa9:	mov    eax,ds:0x4500fd
  431fae:	add    BYTE PTR [eax],al
  431fb0:	push   esi
  431fb1:	mov    esp,eax
  431fb3:	int3   
  431fb4:	jmp    FWORD PTR [ecx+0x6aff4b91]
  431fba:	sar    bh,0xcd
  431fbd:	add    bh,bh
  431fbf:	add    bl,bh
  431fc1:	call   DWORD PTR [esi+0x588ff00]
  431fc7:	mov    es,WORD PTR [eax]
  431fc9:	int3   
  431fca:	fdivr  st,st(7)
  431fcc:	or     BYTE PTR [ebx-0x100],al
  431fd2:	add    edi,edi
  431fd4:	jmp    DWORD PTR ds:0x75ffcde1
  431fda:	(bad)  
  431fdb:	jmp    esi
  431fdd:	inc    DWORD PTR [eax]
  431fdf:	add    BYTE PTR [edi+edi*8],ch
  431fe2:	leave  
  431fe3:	inc    DWORD PTR [eax]
  431fe5:	in     eax,0xfb
  431fe7:	rol    BYTE PTR [ebx+0x25ffe46c],1
  431fed:	inc    DWORD PTR [eax]
  431fef:	call   DWORD PTR [ecx]
  431ff1:	add    BYTE PTR [edi+0x7c5989ff],al
  431ff7:	stc    
  431ff8:	inc    DWORD PTR [edx-0x33ffffe3]
  431ffe:	add    BYTE PTR [eax],al
  432000:	adc    al,0xff
  432002:	mov    ch,0x83
  432004:	push   DWORD PTR [ecx+0x76]
  432007:	imul   edi,edi,0x63008765
  43200d:	(bad)  
  43200e:	(bad)  
  43200f:	jmp    DWORD PTR [edx]
  432011:	sbb    DWORD PTR [ecx+0x0],0xffffffff
  432015:	mov    edx,0x96ff7f6e
  43201a:	cmp    eax,0xff837fcc
  43201f:	push   DWORD PTR [ebx]
  432021:	int3   
  432022:	mov    dh,0xcc
  432024:	push   DWORD PTR [ecx+0x1]
  432027:	(bad)  
  432028:	(bad)  
  432029:	sti    
  43202a:	mov    bl,0x83
  43202c:	test   DWORD PTR [eax],eax
  43202e:	inc    DWORD PTR [eax]
  432030:	sbb    bh,bh
  432032:	sbb    al,0xff
  432034:	mov    DWORD PTR [esi+0x64ffc5c5],edi
  43203a:	push   0xffffffff
  43203c:	sbb    bh,bh
  43203e:	inc    DWORD PTR [eax]
  432040:	leave  
  432041:	jmp    FWORD PTR [esi]
  432043:	int3   
  432044:	inc    DWORD PTR [edi+0x2a00e94d]
  43204a:	xchg   esp,eax
  43204b:	jmp    FWORD PTR [ebp+0x6489ffff]
  432051:	add    ch,ah
  432053:	add    DWORD PTR [eax],0xffffffce
  432056:	inc    ebp
  432057:	sub    bh,bh
  432059:	dec    edi
  43205a:	leave  
  43205b:	or     edx,0x0
  43205e:	add    BYTE PTR [ebx+0xbeff20],al
  432064:	mov    DWORD PTR [eax+0xb89da3c],esi
  43206a:	(bad)  
  43206b:	mov    DWORD PTR [ecx+0x783ffff],ebx
  432071:	add    DWORD PTR [eax+0x0],0xffffffff
  432075:	xchg   esi,eax
  432076:	hlt    
  432077:	add    DWORD PTR [ebx+0x7fffd89c],eax
  43207d:	(bad)  
  43207e:	(bad)  
  43207f:	jmp    FWORD PTR ds:0x89ffdcff
  432085:	cmc    
  432086:	mov    ecx,0xe26f89a7
  43208b:	int3   
  43208c:	data16 (bad) 
  43208e:	(bad)  
  43208f:	inc    DWORD PTR [ebp-0x76006e00]
  432095:	arpl   WORD PTR [edi+0x3a],bx
  432098:	add    BYTE PTR ds:0xffd4ffb4,ah
  43209e:	(bad)  
  43209f:	call   FWORD PTR [ecx]
  4320a1:	call   DWORD PTR [edx]
  4320a3:	inc    DWORD PTR [ebx+0xc669ed]
  4320a9:	pop    edi
  4320aa:	test   al,0xff
  4320ac:	add    BYTE PTR [eax],0xff
  4320af:	call   FWORD PTR [esi+0x0]
  4320b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4320b3:	inc    DWORD PTR [eax]
  4320b5:	pop    ss
  4320b6:	xchg   ebx,eax
  4320b7:	les    ecx,FWORD PTR [ecx-0x5cff1a7a]
  4320bd:	add    bh,bh
  4320bf:	add    BYTE PTR [edx],dl
  4320c1:	mov    DWORD PTR [eax],esp
  4320c3:	inc    DWORD PTR [eax]
  4320c5:	test   edx,edx
  4320c7:	cmp    bh,0xd6
  4320ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4320cb:	(bad)  
  4320cc:	mov    ecx,0xdeccff83
  4320d1:	add    BYTE PTR ds:0x3ce08300,cl
  4320d7:	test   BYTE PTR [eax],al
  4320d9:	xchg   esp,eax
  4320da:	push   edx
  4320db:	add    BYTE PTR [esi-0x1],bl
  4320de:	inc    DWORD PTR [eax]
  4320e0:	inc    esp
  4320e1:	add    BYTE PTR [edi+edi*8],ah
  4320e4:	call   FWORD PTR [esi]
  4320e6:	pusha  
  4320e7:	mov    DWORD PTR [eax],eax
  4320e9:	int    0x76
  4320eb:	or     ebp,0x0
  4320ee:	inc    DWORD PTR [eax]
  4320f0:	pusha  
  4320f1:	mov    esp,edx
  4320f3:	(bad)  
  4320f4:	jmp    FWORD PTR [ebp-0x5a004386]
  4320fa:	inc    edi
  4320fb:	inc    DWORD PTR [edi-0x1]
  4320fe:	(bad)  
  4320ff:	jmp    DWORD PTR [esi-0x7caf7d]
  432105:	push   edi
  432106:	stos   DWORD PTR es:[edi],eax
  432107:	sbb    DWORD PTR [eax],eax
  432109:	jnp    0x4320ff
  43210b:	sub    ebx,0xffffffff
  43210e:	inc    DWORD PTR [eax]
  432110:	mov    DWORD PTR cs:[edi+edi*8-0x7d],ebx
  432115:	jmp    0x9f4257df
  43211a:	inc    eax
  43211b:	cmp    DWORD PTR [edi+0x37ff8983],0xffffff83
  432122:	cwde   
  432123:	add    DWORD PTR [eax],0x32
  432126:	jo     0x432108
  432128:	(bad)  
  432129:	js     0x432149
  43212b:	xor    DWORD PTR [eax],0x0
  43212e:	(bad)  
  43212f:	call   DWORD PTR [eax-0x76005001]
  432135:	jbe    0x432171
  432137:	in     al,dx
  432138:	call   FWORD PTR [ebx+eax*8-0x1]
  43213c:	stos   BYTE PTR es:[edi],al
  43213d:	add    bh,bh
  43213f:	mov    DWORD PTR [ebp-0x7c4201],ebp
  432145:	cmp    esi,edi
  432147:	pop    ecx
  432148:	int3   
  432149:	outs   dx,DWORD PTR ds:[esi]
  43214a:	into   
  43214b:	add    BYTE PTR [eax-0x74ff0100],al
  432151:	int3   
  432152:	push   edx
  432153:	add    BYTE PTR [eax],al
  432155:	mul    BYTE PTR [eax]
  432157:	lahf   
  432158:	adc    DWORD PTR [ebx+0x0],0xffffff83
  43215c:	sub    eax,0xed00ff00
  432161:	add    BYTE PTR [edi+edi*8-0x1],al
  432165:	call   0xffb7:0xe583c5b5
  43216c:	pushf  
  43216d:	cmp    edi,0xffffffff
  432170:	fcmovne st,st(4)
  432172:	add    al,0xff
  432174:	int3   
  432175:	push   edx
  432176:	push   0xffffffbd
  432178:	xor    ebp,0xffffffee
  43217b:	push   DWORD PTR [edi]
  43217d:	add    bh,bh
  43217f:	int3   
  432180:	dec    ebx
  432181:	add    BYTE PTR [esi],ah
  432183:	add    BYTE PTR [eax],al
  432185:	xor    eax,DWORD PTR [esi]
  432187:	fwait
  432188:	call   FWORD PTR [edx]
  43218a:	cmp    al,0xff
  43218c:	fdivr  st,st(7)
  43218e:	inc    DWORD PTR [eax]
  432190:	mov    bh,bh
  432192:	cdq    
  432193:	(bad)  
  432194:	jmp    FWORD PTR [ebx]
  432196:	mov    ecx,0x8807ccf5
  43219b:	call   edx
  43219d:	(bad)  
  43219e:	inc    DWORD PTR [eax]
  4321a0:	xchg   esp,eax
  4321a1:	inc    esp
  4321a3:	dec    esp
  4321a5:	push   edx
  4321a6:	es mov ebx,0x316fff
  4321ac:	mov    esp,0xd4ffff00
  4321b1:	int3   
  4321b2:	cmp    eax,DWORD PTR [ebx+0x13a8a4ff]
  4321b8:	call   DWORD PTR [edi]
  4321ba:	or     BYTE PTR [ecx+0xffff76],0x45
  4321c1:	int3   
  4321c2:	mov    esp,0xcc5800ff
  4321c7:	mov    bh,bh
  4321c9:	ds js  0x43214f
  4321cc:	xchg   esi,eax
  4321cd:	add    BYTE PTR [eax],al
  4321cf:	add    BYTE PTR [edx+0xff3d83],bh
  4321d5:	imul   edi,ecx,0x7d
  4321d8:	add    ah,dl
  4321da:	sbb    eax,0xff009ccc
  4321df:	jmp    eax
  4321e1:	add    BYTE PTR [edx],al
  4321e3:	int3   
  4321e4:	adc    ebx,0x5f
  4321e7:	adc    eax,0xccb1e400
  4321ec:	xchg   ebp,eax
  4321ed:	add    bh,bh
  4321ef:	int3   
  4321f0:	iret   
  4321f1:	xor    DWORD PTR [eax],0xffffffff
  4321f4:	cmp    esp,0xffffffe3
  4321f7:	or     al,BYTE PTR [eax]
  4321f9:	rcr    DWORD PTR ds:0x89b1ff,0x83
  432200:	xchg   ebp,eax
  432201:	int3   
  432202:	xor    eax,0xd30effcc
  432207:	adc    al,BYTE PTR [eax]
  432209:	(bad)  
  43220a:	dec    esp
  43220b:	jmp    FWORD PTR [ebx]
  43220d:	int3   
  43220e:	inc    DWORD PTR [eax]
  432210:	cmp    edi,0x52ffff4e
  432216:	push   ebp
  432217:	jae    0x432219
  432219:	fwait
  43221a:	push   es
  43221b:	add    BYTE PTR [edx+0x7bff8900],al
  432221:	dec    DWORD PTR [ebx]
  432223:	(bad)  
  432224:	call   DWORD PTR [ebx-0x7a00c2dc]
  43222a:	pop    esi
  43222b:	(bad)  
  43222c:	jg     0x43222d
  43222e:	add    bh,bh
  432230:	sub    eax,DWORD PTR [eax]
  432232:	mov    WORD PTR [eax],es
  432234:	inc    DWORD PTR [ecx+0x20]
  432237:	jl     0x432239
  432239:	pop    ecx
  43223a:	dec    esi
  43223b:	(bad)  
  43223c:	inc    DWORD PTR [eax]
  43223e:	int3   
  43223f:	add    cl,cl
  432241:	call   esi
  432243:	add    BYTE PTR [eax],al
  432245:	pop    ebx
  432246:	dec    eax
  432247:	popa   
  432248:	call   ebx
  43224a:	loopne 0x4321cf
  43224c:	xchg   DWORD PTR [ebx-0x33867c7d],eax
  432252:	dec    eax
  432253:	add    bh,bh
  432255:	mov    WORD PTR [ecx-0x1],bx
  432259:	aad    0x4c
  43225b:	add    DWORD PTR [edi-0x34],0xffffffff
  43225f:	dec    DWORD PTR [eax-0x1]
  432262:	adc    ecx,DWORD PTR [ecx+0x292f0bff]
  432268:	call   FWORD PTR [ecx]
  43226a:	pop    edi
  43226b:	add    bh,bh
  43226d:	(bad)  
  43226e:	inc    DWORD PTR [eax]
  432270:	dec    edx
  432271:	add    BYTE PTR [ebx+eax*4-0x4254a701],ch
  432278:	(bad)  
  432279:	out    dx,eax
  43227a:	add    BYTE PTR [ebx-0xff92],0xdc
  432281:	add    BYTE PTR [edx+0x7900ffff],dh
  432287:	out    0x0,eax
  432289:	into   
  43228a:	pusha  
  43228b:	add    BYTE PTR [edx-0x1],ah
  43228e:	inc    DWORD PTR [ebx+0x75ff32]
  432294:	dec    ebx
  432296:	jb     0x43222b
  432298:	push   DWORD PTR [edi-0xb87cf0]
  43229e:	inc    DWORD PTR [ebx-0x4b0035]
  4322a4:	adc    ecx,0x59
  4322a7:	sub    al,BYTE PTR [ebx-0x1a7c8003]
  4322ad:	inc    DWORD PTR [ebx-0x1c76ec01]
  4322b3:	add    BYTE PTR [ecx-0x7c58b029],cl
  4322b9:	sbb    BYTE PTR [edi+edi*8],ah
  4322bc:	add    eax,DWORD PTR [eax]
  4322be:	add    bh,bh
  4322c0:	add    al,0x83
  4322c2:	xchg   bh,bh
  4322c4:	(bad)  
  4322c5:	in     eax,dx
  4322c6:	(bad)  
  4322c7:	adc    eax,0xcc076ccc
  4322cc:	sub    eax,0xda830000
  4322d1:	add    BYTE PTR [eax+eax*1+0x78d3ff00],ch
  4322d8:	(bad)  
  4322d9:	fcmovnbe st,st(3)
  4322db:	add    ch,ch
  4322dd:	add    BYTE PTR [eax],al
  4322df:	add    BYTE PTR [edx-0xffb401],al
  4322e5:	dec    eax
  4322e6:	fiadd  DWORD PTR [ebp+0x4543ff]
  4322ec:	sub    esp,ecx
  4322ee:	inc    DWORD PTR [eax]
  4322f0:	dec    ecx
  4322f1:	add    BYTE PTR [ebx-0x7d],ch
  4322f4:	add    DWORD PTR [ebx-0x4f00748e],0x49
  4322fb:	jmp    edx
  4322fd:	mov    edi,edi
  4322ff:	push   DWORD PTR [eax-0x7d]
  432302:	dec    ebp
  432303:	mov    DWORD PTR [ebx-0x3396ed97],eax
  432309:	jb     0x4322fc
  43230b:	and    DWORD PTR [ecx+0x63ff00ff],0x0
  432312:	cmp    eax,0x5776ff00
  432317:	mov    cl,0xcc
  432319:	push   eax
  43231a:	adc    eax,0xffffb7cc
  43231f:	push   DWORD PTR [edx]
  432321:	add    BYTE PTR [edx-0x1],ah
  432324:	add    cl,dh
  432326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432327:	jae    0x4322ac
  432329:	cdq    
  43232a:	or     bh,bh
  43232c:	stos   BYTE PTR es:[edi],al
  43232d:	add    ah,cl
  43232f:	add    BYTE PTR [edx-0x1],bl
  432332:	add    BYTE PTR [eax],0xff
  432335:	jae    0x43233c
  432337:	jmp    0xcc74d83b
  43233c:	fiadd  DWORD PTR [eax]
  43233e:	inc    DWORD PTR [eax]
  432340:	add    BYTE PTR es:[edi],dh
  432343:	add    BYTE PTR [ebx-0x745eac],al
  432349:	inc    ecx
  43234a:	bound  eax,QWORD PTR [eax]
  43234c:	stos   BYTE PTR es:[edi],al
  43234d:	inc    DWORD PTR [ebx-0x7c8477]
  432353:	add    bh,bh
  432355:	int3   
  432356:	dec    ebx
  432357:	inc    ebx
  432358:	call   FWORD PTR [esi-0x4a]
  43235b:	add    BYTE PTR [edi+edi*8],bh
  43235e:	int3   
  43235f:	inc    DWORD PTR [ecx-0x7c207d]
  432365:	jnp    0x432321
  432367:	popa   
  432368:	add    BYTE PTR [eax-0xccff6c],cl
  43236e:	inc    DWORD PTR [eax]
  432370:	loope  0x432371
  432372:	inc    ebx
  432373:	inc    DWORD PTR [eax]
  432375:	pusha  
  432376:	mov    esi,0x77c8ccf8
  43237b:	add    DWORD PTR [edx+0x4e00ffff],0xffffff83
  432382:	mov    ah,0x0
  432384:	(bad)  
  432385:	(bad)  
  432386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432387:	adc    cl,ah
  432389:	mov    edx,0xffc300b6
  43238e:	inc    DWORD PTR [eax]
  432390:	ret    0x7b83
  432393:	mov    edi,edi
  432395:	rcr    DWORD PTR [edi-0x6dddff74],1
  43239b:	call   FWORD PTR [ebx+0x0]
  43239e:	dec    DWORD PTR [ecx+0x25836f]
  4323a4:	call   FWORD PTR [ecx+0x33007a81]
  4323aa:	push   cs
  4323ab:	mov    ebx,ecx
  4323ad:	inc    DWORD PTR [eax]
  4323af:	add    dl,dl
  4323b1:	jmp    DWORD PTR [ebp+0x371a00ff]
  4323b7:	sahf   
  4323b8:	add    BYTE PTR [edx],bh
  4323ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4323bb:	call   esp
  4323bd:	(bad)  
  4323be:	inc    DWORD PTR [eax]
  4323c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4323c1:	int3   
  4323c2:	mov    edi,?
  4323c4:	int3   
  4323c5:	jmp    0x6d4334c4
  4323ca:	(bad)  
  4323cc:	leave  
  4323cd:	inc    DWORD PTR [eax]
  4323cf:	add    BYTE PTR [ebx-0xffe100],dh
  4323d5:	(bad)  
  4323d7:	cmp    bh,0xa8
  4323da:	leave  
  4323db:	add    ah,dl
  4323dd:	dec    DWORD PTR [ecx+0x16cc20ff]
  4323e3:	inc    DWORD PTR [eax]
  4323e5:	jmp    0xcc8f:0xcc00e8e2
  4323ec:	lods   al,BYTE PTR ds:[esi]
  4323ed:	inc    DWORD PTR [eax]
  4323ef:	int3   
  4323f0:	imul   eax,DWORD PTR [eax],0x13
  4323f3:	add    BYTE PTR [eax],al
  4323f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4323f6:	fisub  DWORD PTR [ebx]
  4323f8:	add    BYTE PTR [eax+0x5fff0e],dh
  4323fe:	dec    DWORD PTR [ecx+0x34003a]
  432404:	xor    edi,0xffffffaa
  432407:	mov    ebp,0xffe2a800
  43240c:	lock add bh,bh
  43240f:	(bad)  
  432410:	mov    ecx,0x83ffaaff
  432415:	jg     0x4323f7
  432417:	add    al,BYTE PTR [eax]
  432419:	(bad)  
  43241b:	inc    esp
  43241d:	add    BYTE PTR [ebx+0x64ff98ff],al
  432423:	cmp    edi,0xffffffe7
  432426:	push   ss
  432427:	sub    eax,DWORD PTR [eax]
  432429:	pop    edx
  43242a:	add    DWORD PTR [eax],0xcc83ff5f
  432430:	inc    esi
  432431:	call   FWORD PTR [eax-0x1]
  432434:	add    DWORD PTR [eax],0xffffffa8
  432437:	jno    0x432439
  432439:	sbb    eax,DWORD PTR [ebx+0xff9aff]
  43243f:	jmp    DWORD PTR [ecx+ecx*4+0x63]
  432443:	(bad)  
  432444:	push   DWORD PTR ds:0x81008af7
  43244a:	or     edi,edi
  43244c:	sub    al,0x0
  43244e:	inc    DWORD PTR [eax]
  432450:	sar    bh,0x1f
  432453:	cmp    edi,0x54
  432456:	xchg   edx,eax
  432457:	lea    eax,[eax]
  432459:	scas   eax,DWORD PTR es:[edi]
  43245a:	add    BYTE PTR gs:[eax+eax*1],al
  43245e:	add    bh,bh
  432460:	jmp    0xa273:0xff002900
  432467:	cmp    al,0xff
  432469:	dec    ecx
  43246a:	xor    eax,DWORD PTR [eax]
  43246c:	jb     0x43246d
  43246e:	add    BYTE PTR [ebx-0xd6ff3e],al
  432474:	call   DWORD PTR [edx]
  432476:	mov    edx,0x4ad500ce
  43247b:	mov    ebx,esp
  43247d:	add    DWORD PTR [eax],0xffffffff
  432480:	mov    eax,DWORD PTR [eax]
  432482:	rol    BYTE PTR [eax],1
  432484:	mov    esi,ecx
  432486:	popf   
  432487:	xchg   ebp,eax
  432488:	add    cl,bl
  43248a:	in     al,dx
  43248b:	add    bl,ch
  43248d:	(bad)  
  43248e:	inc    DWORD PTR [eax]
  432490:	ins    DWORD PTR es:[edi],dx
  432491:	call   DWORD PTR [esi]
  432493:	(bad)  
  432494:	jmp    DWORD PTR [eax+eax*8+0x5abaff41]
  43249b:	call   FWORD PTR [eax+eax*1-0x1f0001]
  4324a2:	dec    ebp
  4324a3:	(bad)  
  4324a4:	(bad)  
  4324a5:	mov    eax,0x6aff6de4
  4324aa:	push   ebp
  4324ab:	add    BYTE PTR [eax-0x1],bh
  4324ae:	inc    DWORD PTR [eax]
  4324b0:	std    
  4324b1:	jmp    ecx
  4324b3:	add    BYTE PTR [eax],al
  4324b5:	test   DWORD PTR [eax+0x24],0xb809ff
  4324bc:	mov    WORD PTR [eax],es
  4324be:	add    bh,bh
  4324c0:	cli    
  4324c1:	mov    edi,ecx
  4324c3:	inc    DWORD PTR [ebx-0x7c492db6]
  4324c9:	arpl   WORD PTR [ecx],ax
  4324cb:	jmp    FWORD PTR [edi+0x23ffffff]
  4324d1:	add    BYTE PTR [edi+edi*8-0x1],ah
  4324d5:	adc    esp,DWORD PTR [edi+0x7acafffc]
  4324db:	int3   
  4324dc:	ds int3 
  4324de:	add    BYTE PTR [eax],al
  4324e0:	(bad)  
  4324e1:	mov    esi,esi
  4324e3:	(bad)  
  4324e4:	jmp    DWORD PTR [ecx-0x6f332811]
  4324ea:	outs   dx,BYTE PTR ds:[esi]
  4324eb:	add    BYTE PTR [eax-0x1],cl
  4324ee:	int3   
  4324ef:	mov    DWORD PTR [eax-0x1],esp
  4324f2:	mov    ch,0xff
  4324f4:	jmp    DWORD PTR [esp+eiz*4+0x30]
  4324f8:	or     esi,0xffffffcc
  4324fb:	and    DWORD PTR [edx],0xffffffcc
  4324fe:	(bad)  
  4324ff:	dec    DWORD PTR [ebx]
  432501:	add    DWORD PTR [ebx],0xffffffff
  432504:	dec    DWORD PTR [ecx]
  432506:	xor    ah,cl
  432508:	add    BYTE PTR [ebx],dl
  43250a:	stc    
  43250b:	jmp    DWORD PTR [eax+0x6200ff83]
  432511:	add    dh,cl
  432513:	(bad)  
  432514:	dec    DWORD PTR [ecx+0x30005d50]
  43251a:	outs   dx,BYTE PTR ds:[esi]
  43251b:	cmp    DWORD PTR [ebp+0x1e00ffff],0xffffffff
  432522:	loop   0x4324a7
  432524:	(bad)  
  432525:	call   0x2eccc4b0
  43252a:	push   ebx
  43252b:	(bad)  
  43252c:	cli    
  43252d:	add    BYTE PTR [eax],al
  43252f:	add    ebp,0xffffffff
  432532:	loopne 0x4324b7
  432534:	add    BYTE PTR [esi],bh
  432536:	xlat   BYTE PTR ds:[ebx]
  432537:	fld    DWORD PTR [eax]
  432539:	pop    edi
  43253a:	sbb    al,0xff
  43253c:	or     eax,0xb0ffcc00
  432541:	dec    DWORD PTR [edi]
  432543:	inc    DWORD PTR [ebx+0xc97eb8]
  432549:	je     0x4324d8
  43254b:	push   edi
  43254d:	add    BYTE PTR [ebx-0x2fff4401],al
  432553:	(bad)  
  432554:	(bad)  
  432555:	jmp    DWORD PTR [edi]
  432557:	dec    ebp
  432558:	push   DWORD PTR [ebx-0xc]
  43255b:	mov    DWORD PTR [edi-0x1],esi
  43255e:	(bad)  
  43255f:	dec    edx
  432561:	add    ah,bh
  432563:	cmp    edi,0xffffffaa
  432566:	push   ds
  432567:	ret    0x2b83
  43256a:	mov    al,BYTE PTR [ebx-0x33ffff14]
  432570:	push   eax
  432571:	mov    DWORD PTR [ecx-0x1c580100],eax
  432577:	je     0x432578
  432579:	push   ss
  43257a:	mov    ah,0xff
  43257c:	pop    es
  43257d:	cmp    edi,0xffffffff
  432580:	mov    ?,edi
  432582:	das    
  432583:	add    BYTE PTR [ecx-0x79787a],cl
  432589:	jp     0x4325f4
  43258b:	jmp    FWORD PTR [edx-0x1]
  43258e:	int3   
  43258f:	add    BYTE PTR [ecx],ch
  432591:	add    BYTE PTR [esi-0x1],cl
  432594:	add    BYTE PTR [ebx+0x2bff7254],ch
  43259a:	je     0x432568
  43259c:	mov    ebx,0xcaff89cc
  4325a1:	call   FWORD PTR [ebp+0x7f2483ff]
  4325a7:	call   0xffdf28ac
  4325ac:	leave  
  4325ad:	mov    edi,edi
  4325af:	add    BYTE PTR [ebx],ch
  4325b1:	dec    DWORD PTR [ebp-0x1]
  4325b4:	inc    DWORD PTR [ecx+0x6f]
  4325b7:	jge    0x4325b8
  4325b9:	stos   DWORD PTR es:[edi],eax
  4325ba:	mov    ds:0xff005f00,eax
  4325bf:	call   FWORD PTR [esi+0x0]
  4325c2:	in     al,dx
  4325c3:	int3   
  4325c4:	dec    DWORD PTR [eax]
  4325c6:	addps  xmm0,XMMWORD PTR [eax]
  4325c9:	jl     0x4325bf
  4325cb:	call   esp
  4325cd:	add    ah,cl
  4325cf:	mov    edi,ebp
  4325d1:	push   ebp
  4325d3:	(bad)  
  4325d4:	push   ebp
  4325d6:	push   0xfdd8005c
  4325db:	add    cl,bh
  4325dd:	add    bh,bh
  4325df:	add    bh,bh
  4325e1:	mov    eax,ds:0x41900aff
  4325e6:	cmp    edi,0xffffffff
  4325e9:	call   DWORD PTR [eax+0xd36e]
  4325f0:	mov    DWORD PTR [edx-0x34],ebx
  4325f3:	test   al,0xd6
  4325f5:	cmp    bh,bh
  4325f7:	add    bh,bh
  4325f9:	inc    ecx
  4325fa:	(bad)  
  4325fb:	call   0xc6794a
  432600:	add    BYTE PTR [edx],bl
  432602:	add    BYTE PTR [edi+eiz*4-0xff7cbc],bl
  432609:	vpshuflw ymm2,YMMWORD PTR [edi],0x4e
  43260e:	add    BYTE PTR [eax],al
  432610:	cmp    DWORD PTR [esi+0x2c90e7ff],0xffffffff
  432617:	(bad)  
  432618:	(bad)  
  432619:	fiadd  DWORD PTR [eax]
  43261b:	mov    bh,0xf1
  43261d:	popf   
  43261e:	mov    edi,edi
  432620:	add    BYTE PTR [edi-0x34],al
  432623:	stc    
  432624:	jnp    0x432657
  432626:	dec    esp
  432628:	call   eax
  43262a:	add    BYTE PTR [edx-0x7c68b6],cl
  432630:	call   DWORD PTR [edx-0x4cae437d]
  432636:	cmp    edi,0x0
  432639:	adc    bh,bh
  43263b:	xchg   ecx,eax
  43263c:	mov    edi,0x89ffffde
  432641:	lods   eax,DWORD PTR ds:[esi]
  432642:	add    ch,ah
  432644:	fisubr DWORD PTR [ebx]
  432646:	(bad)  
  432647:	(bad)  
  432648:	jmp    DWORD PTR [ebx-0x68a6ae00]
  43264e:	(bad)  
  43264f:	(bad)  
  432650:	jmp    FWORD PTR [edx-0x34]
  432653:	or     eax,0x83ffb586
  432658:	call   ebp
  43265a:	add    BYTE PTR [eax-0xfae4],ch
  432660:	jmp    DWORD PTR [edi+edi*8-0xc267e7]
  432667:	(bad)  
  432668:	call   FWORD PTR [ecx-0x1]
  43266b:	jae    0x4326c4
  43266d:	loope  0x43266f
  43266f:	mov    esp,ecx
  432671:	fwait
  432672:	jmp    DWORD PTR [ecx]
  432674:	push   0xffffffed
  432676:	inc    DWORD PTR [eax]
  432678:	dec    eax
  43267a:	add    BYTE PTR [ecx-0x1e],ah
  43267d:	adc    edi,edi
  43267f:	mov    edi,edi
  432681:	jl     0x432683
  432683:	adc    BYTE PTR [esi-0xff77],bl
  432689:	pushf  
  43268a:	mov    DWORD PTR [esp+ebp*2],esp
  43268d:	add    BYTE PTR ss:[eax],al
  432690:	add    cl,dl
  432692:	cmp    DWORD PTR [edx+0x5],0xfffffff2
  432696:	add    DWORD PTR [eax],0xffffffff
  432699:	or     bh,bh
  43269b:	rcl    BYTE PTR [eax],1
  43269d:	dec    esp
  43269e:	add    BYTE PTR [eax],al
  4326a0:	dec    DWORD PTR [edx]
  4326a2:	add    BYTE PTR [ecx],dl
  4326a4:	xchg   edx,eax
  4326a5:	sub    BYTE PTR [ebx+0xf183cc],al
  4326ab:	jne    0x432677
  4326ad:	xor    eax,0xd5ffffff
  4326b2:	call   DWORD PTR [ecx+0x65]
  4326b5:	clc    
  4326b6:	dec    esp
  4326b8:	add    BYTE PTR [ebx-0x1],bh
  4326bb:	test   ah,ah
  4326bd:	sar    bh,1
  4326bf:	inc    DWORD PTR [ebx+0x7e62cc95]
  4326c5:	sti    
  4326c6:	add    BYTE PTR [eax],al
  4326c8:	call   FWORD PTR [edx]
  4326ca:	call   FWORD PTR [esi+0xff1d7d]
  4326d0:	sbb    DWORD PTR [ebp-0x7d],0x6b
  4326d4:	push   ebp
  4326d5:	test   BYTE PTR [eax],0xff
  4326d8:	(bad)  
  4326d9:	js     0x4326db
  4326db:	mov    al,0x72
  4326dd:	in     eax,0x83
  4326df:	add    ah,cl
  4326e1:	and    al,0x0
  4326e3:	dec    edx
  4326e4:	fistp  DWORD PTR [ecx]
  4326e6:	add    BYTE PTR [eax],al
  4326e8:	int3   
  4326e9:	xchg   edi,edi
  4326eb:	scas   eax,DWORD PTR es:[edi]
  4326ec:	(bad)  
  4326ed:	popf   
  4326ee:	(bad)  
  4326ef:	(bad)  
  4326f0:	call   FWORD PTR [edi+edi*8]
  4326f3:	inc    esi
  4326f4:	sbb    esp,DWORD PTR [ecx]
  4326f6:	mov    DWORD PTR [ecx-0x66ffb301],ecx
  4326fc:	and    al,0xf3
  4326fe:	or     esp,0xffffff83
  432701:	mov    esp,0xa58991ff
  432706:	add    DWORD PTR [eax],0xffffffff
  432709:	push   0xce4c06ff
  43270e:	add    bh,bh
  432710:	call   FWORD PTR [eax]
  432712:	mov    esp,ebx
  432714:	and    ebx,esi
  432716:	(bad)  
  432717:	inc    DWORD PTR [eax]
  432719:	icebp  
  43271a:	add    BYTE PTR [ebp+0x60],dl
  43271d:	sar    edi,cl
  43271f:	(bad)  
  432720:	push   esp
  432722:	dec    DWORD PTR [ebp+0x1c]
  432725:	(bad)  
  432726:	dec    esp
  432728:	(bad)  
  432729:	cmp    eax,0x9fd686ff
  43272e:	add    bh,bh
  432730:	mov    DWORD PTR [eax],edi
  432732:	mov    DWORD PTR [ebx+eiz*4+0x4c],ebx
  432736:	(bad)  
  432737:	(bad)  
  432738:	push   edi
  43273a:	call   DWORD PTR [eax-0x57ed]
  432740:	dec    ecx
  432742:	add    bh,cl
  432744:	jg     0x432781
  432746:	add    bh,bh
  432748:	add    BYTE PTR [ecx],bl
  43274a:	inc    DWORD PTR [edx]
  43274c:	ret    
  43274d:	jp     0x4326d2
  43274f:	dec    DWORD PTR [ecx-0x62d6ff4e]
  432755:	or     al,0xff
  432757:	add    BYTE PTR [eax],al
  432759:	mov    esi,0xf2adafff
  43275e:	add    DWORD PTR [eax],0xffffffff
  432761:	lods   al,BYTE PTR ds:[esi]
  432762:	dec    DWORD PTR [edi+0x87e4]
  432768:	int3   
  432769:	push   cs
  43276a:	add    BYTE PTR [esi+0xf34d],bl
  432770:	(bad)  
  432771:	mov    esp,0xdea8af00
  432776:	inc    DWORD PTR [eax]
  432778:	jmp    DWORD PTR [eax-0x1]
  43277b:	hlt    
  43277c:	(bad)  
  43277d:	and    DWORD PTR [ebx+0x22ff83],eax
  432783:	inc    edi
  432784:	(bad)  
  432785:	leave  
  432786:	mov    esp,ecx
  432788:	add    ch,bl
  43278a:	add    BYTE PTR [eax+eiz*1+0x60],bh
  43278e:	inc    DWORD PTR [eax]
  432790:	mov    edx,esp
  432792:	add    BYTE PTR [edi-0x7c],dl
  432795:	jno    0x432796
  432797:	add    BYTE PTR [eax],al
  432799:	adc    edi,edi
  43279b:	mov    ds:0xff005bf9,eax
  4327a0:	xor    DWORD PTR [edi+0x0],0x4a
  4327a4:	push   ds
  4327a5:	sub    DWORD PTR [eax],eax
  4327a7:	inc    DWORD PTR [ebx+0x51c7ff1b]
  4327ad:	xchg   edi,eax
  4327ae:	(bad)  
  4327af:	dec    esp
  4327b1:	cmp    eax,0x5cba2b89
  4327b6:	add    bh,bh
  4327b8:	add    BYTE PTR ds:0xb34dbcc,dl
  4327be:	or     DWORD PTR [ecx-0x4b004e7d],0xffffff87
  4327c5:	pusha  
  4327c6:	mov    DWORD PTR [ecx+0x44ff4000],ecx
  4327cc:	xchg   edi,eax
  4327cd:	ins    BYTE PTR es:[edi],dx
  4327ce:	add    bh,bh
  4327d0:	add    BYTE PTR [ebx],ch
  4327d2:	int3   
  4327d3:	cs retf 0xff27
  4327d7:	int3   
  4327d8:	int3   
  4327d9:	test   eax,0xe3340dcc
  4327de:	add    bh,bh
  4327e0:	dec    DWORD PTR [eax-0x683f7f01]
  4327e6:	add    ah,cl
  4327e8:	int3   
  4327e9:	add    bh,bh
  4327eb:	mov    BYTE PTR [edx],al
  4327ed:	arpl   WORD PTR [eax],ax
  4327ef:	add    bh,bh
  4327f1:	pushf  
  4327f2:	add    BYTE PTR [ebp-0x54],ah
  4327f5:	adc    bh,bh
  4327f7:	add    BYTE PTR [ebx-0x6cde76f6],al
  4327fd:	gs (bad) 
  4327ff:	(bad)  
  432800:	call   ebx
  432802:	push   DWORD PTR [edx]
  432804:	adc    BYTE PTR [edi+edi*8-0x77],al
  432808:	jmp    FWORD PTR [esi-0x1]
  43280b:	add    al,0x97
  43280d:	xchg   esi,eax
  43280e:	add    BYTE PTR [ecx+0x278334cc],cl
  432814:	or     al,0x14
  432816:	add    ah,cl
  432818:	cmp    DWORD PTR [ebp-0x1],0xffffffdf
  43281c:	outs   dx,BYTE PTR ds:[esi]
  43281d:	pop    edi
  43281e:	(bad)  
  43281f:	dec    esp
  432821:	push   DWORD PTR [di-0x42]
  432825:	push   cs
  432826:	(bad)  
  432827:	dec    DWORD PTR [ecx-0x4cdd7cbc]
  43282d:	pop    eax
  43282e:	add    BYTE PTR [eax],al
  432830:	jmp    DWORD PTR [ecx+0x3e2e0089]
  432836:	add    DWORD PTR [eax],0xffffffff
  432839:	idiv   edi
  43283b:	popf   
  43283c:	in     eax,0xd2
  43283e:	(bad)  
  43283f:	inc    DWORD PTR [eax]
  432841:	les    ecx,FWORD PTR [ecx+0x7314ad]
  432847:	(bad)  
  432848:	push   DWORD PTR [esi-0x86c5e01]
  43284e:	(bad)  
  43284f:	(bad)  
  432850:	jmp    FWORD PTR [ecx+0x1eb94f83]
  432856:	dec    DWORD PTR [ecx-0x6133de01]
  43285c:	(bad)  
  43285d:	xlat   BYTE PTR ds:[ebx]
  43285e:	add    bh,bh
  432860:	jmp    FWORD PTR [esi+0x19e8e4ff]
  432866:	(bad)  
  432867:	(bad)  
  432868:	dec    DWORD PTR [ebx]
  43286a:	add    BYTE PTR [ebx],dh
  43286c:	ds retf 0xff00
  432870:	push   DWORD PTR [edi-0x7d]
  432873:	push   0xffcce9a4
  432878:	call   DWORD PTR [esp+ecx*8+0x5363f9]
  43287f:	add    bh,bh
  432881:	lock cmp DWORD PTR [edi],0x7e
  432885:	pop    ss
  432886:	(bad)  
  432887:	dec    DWORD PTR [ecx+0x23a200eb]
  43288d:	mov    ds:0x1200ff83,al
  432892:	add    cl,bl
  432894:	(bad)  
  432896:	inc    DWORD PTR [ebx-0x50003700]
  43289c:	jbe    0x4328be
  43289e:	inc    DWORD PTR [eax]
  4328a0:	add    BYTE PTR [eax+eax*1],bl
  4328a3:	push   es
  4328a4:	cli    
  4328a5:	lock mov edi,edi
  4328a8:	push   DWORD PTR [esp+ecx*8+0x312e06]
  4328af:	(bad)  
  4328b0:	(bad)  
  4328b1:	in     al,dx
  4328b2:	push   edx
  4328b4:	fld    DWORD PTR [eax-0x21ff7d00]
  4328ba:	dec    edi
  4328bc:	es jae 0x4328be
  4328bf:	add    bh,bh
  4328c1:	inc    ebx
  4328c2:	int3   
  4328c3:	or     al,0x78
  4328c5:	lea    eax,[eax]
  4328c7:	add    bh,bh
  4328c9:	(bad)  
  4328cc:	xchg   BYTE PTR [esi-0x29ff0100],dl
  4328d2:	add    BYTE PTR [esi-0x3a],al
  4328d5:	cmp    edi,0x0
  4328d8:	add    BYTE PTR [esi-0x20addd01],cl
  4328de:	inc    DWORD PTR [ebx+0x37ff9eff]
  4328e4:	xor    BYTE PTR [edx+0x0],dl
  4328e7:	inc    DWORD PTR [ebx+0x25c9831a]
  4328ed:	jg     0x432872
  4328ef:	inc    DWORD PTR [eax]
  4328f1:	mov    dh,0xff
  4328f3:	cs das 
  4328f5:	sbb    edi,edi
  4328f7:	(bad)  
  4328f8:	jmp    DWORD PTR [ebx]
  4328fa:	inc    DWORD PTR [ebx-0x33009db4]
  432900:	inc    DWORD PTR [eax+eax*1-0x7c051f26]
  432907:	mov    DWORD PTR [ecx-0x68cd00ab],ecx
  43290d:	int3   
  43290e:	add    BYTE PTR [eax],al
  432910:	and    DWORD PTR [edi-0x1],0xffffffba
  432914:	mov    esp,0xff0089bd
  432919:	add    BYTE PTR [eax],0x99
  43291c:	lock dec eax
  43291e:	mov    DWORD PTR [ebx+0x65ff43ff],eax
  432924:	sar    BYTE PTR [edi+0x0],cl
  432927:	add    BYTE PTR [ecx-0xec7cc5],cl
  43292d:	mov    di,di
  432930:	mov    DWORD PTR [ebx-0x1],ebx
  432933:	sub    al,0x7b
  432935:	add    eax,0x28ff0000
  43293a:	int3   
  43293b:	and    BYTE PTR [ebx],bl
  43293d:	(bad)  
  43293f:	add    BYTE PTR [eax],al
  432941:	cld    
  432942:	add    BYTE PTR [ebp-0x10],bl
  432945:	xor    bh,bh
  432947:	int3   
  432948:	jmp    FWORD PTR [edi-0x1]
  43294b:	cld    
  43294c:	and    al,0x4d
  43294e:	add    BYTE PTR [eax],al
  432950:	mov    DWORD PTR [edi],edx
  432952:	int3   
  432953:	jbe    0x43299a
  432955:	test   edi,edi
  432957:	cmp    edi,0x5d
  43295a:	add    BYTE PTR [ecx+0xff5332],dl
  432960:	call   ecx
  432962:	push   esp
  432964:	pushf  
  432965:	push   edx
  432966:	(bad)  
  432967:	inc    DWORD PTR [eax]
  432969:	sub    eax,0xa65b4600
  43296e:	cmp    edi,0xffffffff
  432971:	sub    al,BYTE PTR [eax]
  432973:	mov    bl,0x14
  432975:	or     al,BYTE PTR [eax]
  432977:	int3   
  432978:	add    BYTE PTR [eax+0x282372ff],ah
  43297e:	add    bh,bh
  432980:	call   FWORD PTR [edx-0x5a320500]
  432986:	add    DWORD PTR [eax],0xffffffcc
  432989:	bnd jmp edx
  43298c:	pop    ss
  43298d:	jp     0x43298e
  43298f:	inc    DWORD PTR [eax]
  432991:	adc    DWORD PTR [ecx+0xdba977],ecx
  432997:	add    BYTE PTR [ebx-0x9ef00a9],al
  43299d:	enter  0x83ff,0x83
  4329a1:	sbb    edi,edi
  4329a3:	daa    
  4329a4:	jbe    0x4329a1
  4329a6:	dec    esp
  4329a8:	int3   
  4329a9:	jl     0x4329aa
  4329ab:	stc    
  4329ac:	mov    al,BYTE PTR [ebx+0x3a00ffcc]
  4329b2:	call   FWORD PTR [esi]
  4329b4:	and    ch,BYTE PTR [ecx+0x6ff00cc]
  4329ba:	dec    DWORD PTR [ecx+0x17]
  4329bd:	mov    edi,?
  4329bf:	(bad)  
  4329c0:	(bad)  
  4329c1:	jnp    0x4329c3
  4329c3:	push   ss
  4329c4:	mov    gs,WORD PTR [eax-0x2100ff01]
  4329ca:	sub    DWORD PTR [ebx+0x71],0xffffffe2
  4329ce:	add    bh,bh
  4329d0:	int3   
  4329d1:	into   
  4329d2:	jmp    ecx
  4329d4:	imul   esp,esp,0x3b00ccff
  4329da:	dec    DWORD PTR [edi-0x76001944]
  4329e0:	add    BYTE PTR [ebx-0xca84200],dh
  4329e6:	add    BYTE PTR [eax],al
  4329e8:	inc    DWORD PTR [ebp-0x7d]
  4329eb:	popa   
  4329ec:	xor    al,0x99
  4329ee:	cmp    edi,0xffffffff
  4329f1:	and    DWORD PTR [eax],eax
  4329f3:	call   0x5bff:0x8383a0a7
  4329fa:	mov    DWORD PTR [ebp-0x7c9eba],esi
  432a00:	dec    DWORD PTR [edx]
  432a02:	and    DWORD PTR [ebx+0x63],0x7f
  432a06:	(bad)  
  432a07:	inc    DWORD PTR [eax]
  432a09:	fld    DWORD PTR [eax]
  432a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432a0c:	repnz sahf 
  432a0e:	inc    DWORD PTR [ebx-0xfff3001]
  432a14:	adc    eax,0xff830061
  432a19:	call   FWORD PTR cs:[eax+ecx*2]
  432a1d:	xchg   edx,eax
  432a1e:	inc    DWORD PTR [eax]
  432a20:	jmp    ebp
  432a22:	mov    DWORD PTR [esi+ecx*4],eax
  432a25:	sar    edi,1
  432a27:	dec    DWORD PTR [ecx+0x30b6ff88]
  432a2d:	push   es
  432a2e:	add    bh,bh
  432a30:	add    BYTE PTR ds:0x68a3fd00,ah
  432a36:	(bad)  
  432a37:	inc    DWORD PTR [ebx+0x287bff11]
  432a3d:	mov    DWORD PTR [ebx-0x647c01],eax
  432a43:	aas    
  432a44:	call   0x10f2ad5
  432a49:	daa    
  432a4a:	int3   
  432a4b:	xchg   ebp,eax
  432a4c:	lods   eax,DWORD PTR ds:[esi]
  432a4d:	aad    0xff
  432a4f:	add    DWORD PTR [ebx+0x58e28937],0x7a
  432a56:	(bad)  
  432a57:	inc    DWORD PTR [ebx-0x1916ffb7]
  432a5d:	daa    
  432a5e:	int3   
  432a5f:	mov    DWORD PTR [ebx-0x163eff8a],eax
  432a65:	iret   
  432a66:	add    DWORD PTR [ebx-0x76002e01],0xffffffd0
  432a6d:	add    bh,bh
  432a6f:	inc    DWORD PTR [eax]
  432a71:	aaa    
  432a72:	(bad)  
  432a73:	cli    
  432a74:	xor    DWORD PTR [ebx+eax*4-0x33c80100],ecx
  432a7b:	out    dx,eax
  432a7c:	xor    ebx,DWORD PTR [edx]
  432a7e:	(bad)  
  432a7f:	inc    DWORD PTR [eax]
  432a81:	retf   0xdeff
  432a84:	in     eax,0x10
  432a86:	add    BYTE PTR [ebx+0x6000e200],al
  432a8c:	fidivr WORD PTR [ebp+0x0]
  432a8f:	add    BYTE PTR [ebx-0x1dc5ff1c],al
  432a95:	add    eax,0x8c00ffcc
  432a9a:	int3   
  432a9b:	or     eax,esp
  432a9d:	lods   eax,DWORD PTR ds:[esi]
  432a9e:	(bad)  
  432a9f:	(bad)  
  432aa0:	dec    DWORD PTR [ecx-0x1]
  432aa3:	xchg   esi,eax
  432aa4:	iret   
  432aa5:	xor    al,0xff
  432aa7:	inc    DWORD PTR [ebx+0x117effc8]
  432aad:	hlt    
  432aae:	add    bh,bh
  432ab0:	inc    DWORD PTR [ebp+0xc02fcff]
  432ab6:	(bad)  
  432ab7:	inc    DWORD PTR [ebx+0x439afff8]
  432abd:	mov    bl,0xcc
  432abf:	inc    DWORD PTR [ebx-0x197c006c]
  432ac5:	dec    ebp
  432ac6:	add    BYTE PTR [eax],al
  432ac8:	add    BYTE PTR [edx-0x1],dl
  432acb:	stc    
  432acc:	or     DWORD PTR [ecx-0xbff0001],0x36633fcc
  432ad6:	(bad)  
  432ad7:	dec    esp
  432ad9:	call   0x4162adde
  432ade:	add    BYTE PTR [eax],al
  432ae0:	adc    DWORD PTR [edi+0x6e2c66ff],0xffffffff
  432ae7:	int3   
  432ae8:	call   esi
  432aea:	(bad)  
  432aeb:	jns    0x432a93
  432aed:	(bad)  
  432aee:	int3   
  432aef:	inc    DWORD PTR [ebx+0x6e298395]
  432af5:	push   es
  432af6:	add    BYTE PTR [eax],al
  432af8:	int3   
  432af9:	loope  0x432ac7
  432afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432afc:	(bad)  
  432afd:	fild   WORD PTR [eax]
  432aff:	dec    esp
  432b01:	sub    bh,bh
  432b03:	or     cl,bh
  432b05:	ret    
  432b06:	(bad)  
  432b07:	(bad)  
  432b08:	push   DWORD PTR [esi]
  432b0a:	add    BYTE PTR [edi-0x45],al
  432b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432b0e:	(bad)  
  432b0f:	(bad)  
  432b10:	jmp    DWORD PTR [esi-0x1]
  432b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b14:	mov    eax,0xccff009e
  432b19:	cld    
  432b1a:	add    bh,al
  432b1c:	xchg   esi,eax
  432b1d:	ins    BYTE PTR es:[edi],dx
  432b1e:	add    DWORD PTR [ebx-0x47ff4401],0xffffffe8
  432b25:	aaa    
  432b26:	add    BYTE PTR [eax],al
  432b28:	inc    DWORD PTR [esi+0x6a581800]
  432b2e:	cmp    edi,0xffffffcc
  432b31:	sub    al,0x0
  432b33:	sbb    eax,DWORD PTR [esi-0x13]
  432b39:	fmulp  st(4),st
  432b3b:	ins    DWORD PTR es:[edi],dx
  432b3c:	and    DWORD PTR [ebp+0x70000000],edi
  432b42:	add    BYTE PTR [edx-0x1938],ah
  432b48:	call   DWORD PTR [eax-0x1]
  432b4b:	or     BYTE PTR [edi+0xffef],0x8c
  432b52:	add    BYTE PTR [eax-0x11],al
  432b55:	ud0    edi,edi
  432b58:	add    BYTE PTR [ecx-0x1],al
  432b5b:	sub    cl,BYTE PTR [eax-0x7c03]
  432b61:	call   FWORD PTR ds:[edi-0xff4f0e]
  432b68:	cmp    DWORD PTR [edi+edi*8+0x1b],0x13
  432b6d:	sub    bh,bh
  432b6f:	mov    edi,edi
  432b71:	std    
  432b72:	push   edi
  432b74:	rol    DWORD PTR [ebx+0x5eff0089],0xff
  432b7b:	push   ss
  432b7c:	aam    0xae
  432b7e:	mov    edi,edi
  432b80:	add    esp,0xffffff89
  432b83:	mov    ecx,0x899ccd
  432b88:	int3   
  432b89:	push   cs
  432b8a:	push   esp
  432b8c:	je     0x432bd7
  432b8e:	add    DWORD PTR [ebx-0x1a7c9701],0x15
  432b95:	xor    eax,0x54830083
  432b9a:	dec    DWORD PTR [ecx-0x17]
  432b9d:	popf   
  432b9e:	add    DWORD PTR [eax],0x0
  432ba1:	add    al,BYTE PTR [eax]
  432ba3:	(bad)  
  432ba4:	mov    ebx,0xffff73
  432ba9:	out    0x0,eax
  432bab:	mov    eax,cs:0xffff89bb
  432bb1:	lock add cl,dl
  432bb4:	pop    ss
  432bb5:	and    BYTE PTR [eax],al
  432bb7:	dec    DWORD PTR [ecx+0xc4683af]
  432bbd:	adc    ah,cl
  432bbf:	int3   
  432bc0:	add    BYTE PTR [edx+0xa0aaf00],cl
  432bc6:	(bad)  
  432bc7:	dec    esp
  432bc9:	push   edi
  432bca:	(bad)  
  432bcb:	cmp    BYTE PTR [ecx-0x7e],dl
  432bce:	int3   
  432bcf:	or     DWORD PTR [ecx+0x709800e8],0x0
  432bd6:	(bad)  
  432bd7:	inc    DWORD PTR [eax]
  432bd9:	add    ah,cl
  432bdb:	gs inc ebx
  432bdd:	out    dx,al
  432bde:	dec    DWORD PTR [ecx-0x21ff3a01]
  432be4:	daa    
  432be5:	lods   eax,DWORD PTR ds:[esi]
  432be6:	add    BYTE PTR [eax],al
  432be8:	int3   
  432be9:	mov    al,ds:0xd2ebca83
  432bee:	add    bh,bh
  432bf0:	add    ch,dh
  432bf2:	inc    DWORD PTR [eax]
  432bf4:	repnz mov bh,0x0
  432bf7:	(bad)  
  432bf8:	jmp    DWORD PTR [ebp+0x0]
  432bfb:	cvtpi2ps xmm7,mm1
  432bfe:	cmp    edi,0xffffffff
  432c01:	push   edi
  432c02:	add    BYTE PTR [esi+ebx*4],ch
  432c05:	inc    edi
  432c06:	or     esp,0xffffffff
  432c09:	pusha  
  432c0a:	call   DWORD PTR [esi+eax*2]
  432c0d:	mov    al,0x83
  432c0f:	inc    DWORD PTR [eax]
  432c11:	push   ebp
  432c12:	add    BYTE PTR [eax+0x62dc],al
  432c18:	add    BYTE PTR [ebx],ah
  432c1a:	int3   
  432c1b:	pop    eax
  432c1c:	xor    ebx,DWORD PTR [edi]
  432c1e:	int3   
  432c1f:	add    DWORD PTR [eax],0x50
  432c22:	add    BYTE PTR [ecx],dh
  432c24:	adc    DWORD PTR [ebp-0x77],edi
  432c27:	add    bh,bh
  432c29:	jmp    0x7413642d
  432c2e:	(bad)  
  432c2f:	(bad)  
  432c30:	jmp    edi
  432c32:	add    dl,ch
  432c34:	add    al,bh
  432c36:	mov    DWORD PTR [eax],eax
  432c38:	(bad)  
  432c39:	jns    0x432c3a
  432c3b:	inc    esi
  432c3c:	or     eax,0xff000087
  432c41:	nop
  432c42:	add    BYTE PTR [ecx+0xff6167],cl
  432c48:	jmp    FWORD PTR [ebp+0x571cbff]
  432c4e:	mov    edi,edi
  432c50:	add    BYTE PTR [edx],bh
  432c52:	(bad)  
  432c53:	(bad)  [esi]
  432c55:	popa   
  432c56:	(bad)  
  432c57:	(bad)  
  432c58:	inc    ecx
  432c5a:	dec    DWORD PTR [eax]
  432c5c:	jge    0x432c59
  432c5e:	(bad)  
  432c5f:	inc    DWORD PTR [eax]
  432c61:	jae    0x432c62
  432c63:	or     edx,DWORD PTR gs:[ebp-0x55007d00]
  432c6a:	(bad)  
  432c6b:	in     al,dx
  432c6c:	jo     0x432c15
  432c6e:	(bad)  
  432c6f:	inc    DWORD PTR [eax]
  432c71:	mov    ebx,0x12a86aff
  432c76:	add    bh,bh
  432c78:	adc    DWORD PTR [ecx-0x1],0x75
  432c7c:	or     edi,DWORD PTR [ebx-0x1]
  432c7f:	(bad)  
  432c80:	jmp    DWORD PTR [ebx+0x5c004d83]
  432c86:	inc    DWORD PTR [eax]
  432c88:	mov    DWORD PTR [esi-0x6510ca00],ecx
  432c8e:	add    bh,bh
  432c90:	add    DWORD PTR [edx],0xffffffff
  432c93:	sbb    al,0xa6
  432c95:	(bad)  
  432c97:	mov    edi,edi
  432c99:	aad    0x89
  432c9b:	inc    esi
  432c9c:	dec    edx
  432c9d:	les    eax,FWORD PTR [ebx-0xad0001]
  432ca3:	mov    bh,0xee
  432ca5:	fwait
  432ca6:	inc    DWORD PTR [eax]
  432ca8:	xor    edx,0xffffff83
  432cab:	cmp    DWORD PTR [esi+eax*2+0x0],esi
  432caf:	inc    DWORD PTR [eax]
  432cb1:	cdq    
  432cb2:	push   DWORD PTR [esi-0x3]
  432cb5:	pop    ds
  432cb6:	mov    DWORD PTR [eax],eax
  432cb8:	jmp    FWORD PTR [edi-0x1]
  432cbb:	sbb    edx,esp
  432cbd:	scas   eax,DWORD PTR es:[edi]
  432cbe:	(bad)  
  432cbf:	dec    esp
  432cc1:	xor    edi,edi
  432cc3:	pop    esp
  432cc4:	lods   eax,DWORD PTR ds:[esi]
  432cc5:	mov    ebp,0xf58383ff
  432cca:	add    dl,cl
  432ccc:	test   al,0xbf
  432cce:	mov    DWORD PTR [eax],eax
  432cd0:	mov    edi,ecx
  432cd2:	int3   
  432cd3:	add    DWORD PTR [ebp-0x3d],edx
  432cd6:	add    BYTE PTR [eax],al
  432cd8:	push   esi
  432cda:	or     ebp,0xffffffb4
  432cdd:	cmp    bh,bh
  432cdf:	add    ah,cl
  432ce1:	loope  0x432ce2
  432ce3:	stos   DWORD PTR es:[edi],eax
  432ce4:	stc    
  432ce5:	repnz dec DWORD PTR [ecx-0x7b76eb01]
  432cec:	scas   eax,DWORD PTR es:[edi]
  432ced:	aaa    
  432cee:	mov    edi,edi
  432cf0:	add    ah,dl
  432cf2:	adc    edx,0x44
  432cf5:	lea    eax,[eax]
  432cf7:	(bad)  
  432cf8:	inc    DWORD PTR [ecx+ecx*4+0x4c]
  432cfc:	pop    ebp
  432cfd:	sbb    al,0x83
  432cff:	(bad)  
  432d00:	jmp    FWORD PTR [eax]
  432d02:	jmp    DWORD PTR [edx]
  432d04:	repz sbb al,0xff
  432d07:	add    bh,bh
  432d09:	sar    bh,0x7
  432d0c:	jg     0x432cf5
  432d0e:	add    BYTE PTR [ebx-0x47ff0100],al
  432d14:	dec    esi
  432d15:	cmp    bh,0xff
  432d18:	call   edx
  432d1a:	int3   
  432d1b:	mov    ebp,0xff647e
  432d20:	add    BYTE PTR [edx+0x4fdbee00],bl
  432d26:	dec    DWORD PTR [ecx-0x12001a01]
  432d2c:	inc    ecx
  432d2d:	jnp    0x432cfb
  432d2f:	inc    DWORD PTR [eax]
  432d31:	xchg   edx,eax
  432d32:	int3   
  432d33:	dec    esi
  432d34:	dec    edi
  432d35:	mov    bh,bh
  432d37:	(bad)  
  432d38:	jmp    FWORD PTR [ebp-0x1]
  432d3b:	pop    ebp
  432d3c:	(bad)  
  432d3d:	rol    BYTE PTR [eax],cl
  432d3f:	cmp    edi,0x26
  432d42:	call   FWORD PTR [ecx-0x76ffd540]
  432d48:	mov    DWORD PTR [esi],ebx
  432d4a:	add    BYTE PTR [eax-0xba3],al
  432d50:	dec    DWORD PTR [esi+0x7d1028ff]
  432d56:	mov    edi,edi
  432d58:	add    dh,ah
  432d5a:	jmp    DWORD PTR [edx-0x20]
  432d5d:	lods   al,BYTE PTR ds:[esi]
  432d5e:	inc    DWORD PTR [eax]
  432d60:	sub    DWORD PTR [edx],0xffffffff
  432d63:	push   edx
  432d64:	pop    ecx
  432d65:	ja     0x432d67
  432d67:	add    BYTE PTR [ebx+0x6b8cff20],al
  432d6d:	mov    esp,cs
  432d6f:	add    BYTE PTR [eax],al
  432d71:	test   DWORD PTR [ecx-0x4e1385],ecx
  432d77:	inc    DWORD PTR [ebx+0x3744ff4b]
  432d7d:	inc    BYTE PTR [ebx-0x1aff01]
  432d83:	cmp    bl,al
  432d85:	scas   al,BYTE PTR es:[edi]
  432d86:	inc    DWORD PTR [eax]
  432d88:	sub    DWORD PTR [ecx+0x0],0xfffffff2
  432d8c:	and    edi,ebp
  432d8e:	inc    DWORD PTR [eax]
  432d90:	jmp    FWORD PTR ds:0x990f4aff
  432d96:	add    DWORD PTR [eax],0xffffff89
  432d99:	aad    0x0
  432d9b:	xor    BYTE PTR [ebx-0x36],dh
  432d9e:	add    DWORD PTR [eax],0xffffff83
  432da1:	mov    ds:0x5f0c27ff,al
  432da6:	(bad)  
  432da7:	inc    DWORD PTR [ebx-0xab30099]
  432dad:	pop    ebp
  432dae:	(bad)  
  432daf:	(bad)  
  432db0:	(bad)  
  432db1:	(bad)  
  432db3:	and    edx,0xffccffac
  432db9:	fdivr  st,st(7)
  432dbb:	jae    0x432d6b
  432dbd:	push   ss
  432dbe:	int3   
  432dbf:	inc    DWORD PTR [eax]
  432dc1:	cmp    eax,0x1216e200
  432dc6:	add    DWORD PTR [eax],0x0
  432dc9:	adc    BYTE PTR [eax],al
  432dcb:	push   ebx
  432dcc:	inc    esp
  432dcd:	ins    BYTE PTR es:[edi],dx
  432dce:	add    bh,bh
  432dd0:	add    BYTE PTR [ecx],bh
  432dd2:	dec    ebx
  432dd4:	or     ebp,0xcb0083cc
  432dda:	add    BYTE PTR [edx+0x7c],bh
  432ddd:	dec    esi
  432dde:	add    bh,bh
  432de0:	xor    DWORD PTR [ecx],0xffffff89
  432de3:	pop    ss
  432de4:	mov    ebx,DWORD PTR [esi]
  432de6:	(bad)  
  432de7:	(bad)  
  432de8:	(bad)  
  432de9:	mov    edi,0x696787ff
  432dee:	int3   
  432def:	add    bh,bh
  432df1:	mov    edi,0x3d192d89
  432df6:	add    bh,bh
  432df8:	call   FWORD PTR [esi-0x1feb8b01]
  432dfe:	or     esp,0xffffffff
  432e01:	fdiv   st(7),st
  432e03:	xchg   ebx,eax
  432e04:	push   edx
  432e05:	inc    edi
  432e06:	mov    edi,edi
  432e08:	add    BYTE PTR [edi+0x31994ff],cl
  432e0e:	add    BYTE PTR [ebx-0x1c334e01],al
  432e14:	mov    ebx,0xff8389ad
  432e19:	pop    eax
  432e1a:	push   DWORD PTR [ebp-0xffc1a6]
  432e20:	dec    esi
  432e22:	call   FWORD PTR [esi]
  432e24:	inc    eax
  432e25:	out    dx,eax
  432e26:	inc    DWORD PTR [eax]
  432e28:	sbb    edx,0xffffffff
  432e2b:	call   DWORD PTR [edx-0x39]
  432e2e:	cmp    edi,0xffffffcc
  432e31:	xor    edi,edi
  432e33:	dec    ebp
  432e34:	dec    ebp
  432e35:	cmp    bh,0x89
  432e38:	jmp    DWORD PTR [ebp-0x1]
  432e3b:	add    esp,DWORD PTR [ebx]
  432e3d:	pop    ebx
  432e3e:	(bad)  
  432e3f:	(bad)  
  432e40:	push   edi
  432e42:	add    BYTE PTR [ebx-0x27],bl
  432e45:	hlt    
  432e46:	inc    DWORD PTR [ebx+0x65ff74ff]
  432e4c:	inc    esp
  432e4d:	mov    edx,0xfb000083
  432e52:	(bad)  
  432e53:	mov    edx,0xffffbd11
  432e58:	(bad)  
  432e59:	aas    
  432e5a:	(bad)  
  432e5b:	fidiv  DWORD PTR [eax+0x89ffb1]
  432e61:	pop    edi
  432e62:	int3   
  432e63:	jecxz  0x432e79
  432e65:	mov    al,0x89
  432e67:	add    BYTE PTR [eax],al
  432e69:	test   eax,0xe87c5500
  432e6e:	(bad)  
  432e6f:	inc    DWORD PTR [ebx+0x5cb90003]
  432e75:	test   eax,0x2bff0000
  432e7a:	mov    DWORD PTR [esi+0x70],edi
  432e7d:	inc    DWORD PTR [eax]
  432e7f:	int3   
  432e80:	add    BYTE PTR [ecx-0x1],ch
  432e83:	mul    ah
  432e85:	call   0x1ff:0x5cff00ff
  432e8c:	arpl   WORD PTR [ecx-0x63000001],dx
  432e92:	dec    eax
  432e94:	mov    WORD PTR [ecx+0x500ffff],?
  432e9a:	and    DWORD PTR [eax-0x4a],0xfffffffb
  432e9e:	add    bh,bh
  432ea0:	and    DWORD PTR [ebx],0xffffffff
  432ea3:	shr    bl,1
  432ea5:	test   eax,0xafff0083
  432eaa:	call   DWORD PTR [ecx+0x26]
  432ead:	loop   0x432e32
  432eaf:	mov    DWORD PTR [ebx+0x6b350083],eax
  432eb5:	jge    0x432eb6
  432eb7:	add    bh,bh
  432eb9:	sbb    al,0x0
  432ebb:	jbe    0x432f35
  432ebd:	rol    BYTE PTR [ebx-0x5cff01],1
  432ec3:	mov    cl,0x2f
  432ec5:	enter  0x89,0x89
  432ec9:	mov    dl,0x0
  432ecb:	add    DWORD PTR [eax],edi
  432ecd:	int3   
  432ece:	add    ah,cl
  432ed0:	inc    DWORD PTR [ecx]
  432ed2:	call   DWORD PTR [edx+eax*8]
  432ed5:	stos   DWORD PTR es:[edi],eax
  432ed6:	int3   
  432ed7:	add    BYTE PTR [ebx+0x752600f4],al
  432edd:	mov    DWORD PTR [ebx-0x497601],eax
  432ee3:	cmp    BYTE PTR [edx],bl
  432ee5:	stos   DWORD PTR es:[edi],eax
  432ee6:	inc    DWORD PTR [ebx+0x5189cb83]
  432eec:	loop   0x432e98
  432eee:	inc    DWORD PTR [eax]
  432ef0:	sub    DWORD PTR [ebp-0x53204b00],0xffffffff
  432ef7:	add    BYTE PTR [eax],al
  432ef9:	mov    eax,DWORD PTR [eax]
  432efb:	dec    eax
  432efc:	cli    
  432efd:	dec    esi
  432efe:	inc    DWORD PTR [eax]
  432f00:	add    BYTE PTR [edx],dl
  432f02:	call   DWORD PTR [ebx+0x75]
  432f05:	ss mov esp,ecx
  432f08:	int3   
  432f09:	xor    bh,bh
  432f0b:	inc    ebp
  432f0c:	mov    esi,0x8395
  432f11:	mov    dh,0x83
  432f13:	ret    0xacbd
  432f16:	inc    DWORD PTR [eax]
  432f18:	add    edi,0xffffff83
  432f1b:	mov    bh,0x80
  432f1d:	sar    edi,cl
  432f1f:	(bad)  
  432f20:	(bad)  
  432f21:	stc    
  432f22:	add    BYTE PTR [esi-0xcdf],bh
  432f28:	add    ebp,0xffffffcc
  432f2b:	cmp    al,0xd3
  432f2d:	cdq    
  432f2e:	add    bh,bh
  432f30:	jmp    ecx
  432f32:	call   esp
  432f34:	jne    0x432f91
  432f36:	inc    DWORD PTR [eax]
  432f38:	push   DWORD PTR [ecx+0x0]
  432f3b:	int    0xa4
  432f3d:	mov    eax,ds:0x48ff00ff
  432f42:	add    DWORD PTR [ecx+edi*2],0x2
  432f46:	add    bh,bh
  432f48:	add    BYTE PTR [edx-0xdc4e400],dl
  432f4e:	dec    DWORD PTR [ecx-0x25ff7501]
  432f54:	enter  0xcc4c,0x83
  432f58:	add    BYTE PTR [edi],bh
  432f5a:	add    BYTE PTR [edi],ah
  432f5c:	out    0x44,eax
  432f5e:	inc    DWORD PTR [eax]
  432f60:	inc    eax
  432f62:	jmp    DWORD PTR [ecx-0x73]
  432f65:	mov    edi,?
  432f67:	add    bh,bh
  432f69:	pop    esp
  432f6a:	add    BYTE PTR [ebx-0x7cffa21e],ah
  432f70:	add    BYTE PTR [esi+0x47622800],al
  432f76:	dec    DWORD PTR [ecx+0x6d00b489]
  432f7c:	cmp    eax,0x8900ffaf
  432f81:	dec    DWORD PTR fs:[edi-0x1e]
  432f85:	jnp    0x432f10
  432f87:	inc    DWORD PTR [eax]
  432f89:	dec    edi
  432f8a:	inc    DWORD PTR [ebx-0x3346b5]
  432f90:	inc    DWORD PTR [ebp+0x25ccd00]
  432f96:	cmp    edi,0xffffffff
  432f99:	fs (bad) 
  432f9b:	mov    eax,0x1911
  432fa0:	add    BYTE PTR [edi+edi*8],bh
  432fa3:	xchg   BYTE PTR [ebp*4+0x31ffcc00],dl
  432faa:	mov    DWORD PTR [eax+ebp*1],esp
  432fad:	cmp    al,BYTE PTR [ebx-0x76c10077]
  432fb3:	and    al,BYTE PTR [ebp+0xffff8e]
  432fb9:	add    BYTE PTR fs:[eax],dl
  432fbc:	push   ecx
  432fbd:	rol    DWORD PTR [eax],0x89
  432fc0:	call   DWORD PTR [ecx]
  432fc2:	and    edx,0x21
  432fc5:	inc    esp
  432fc6:	(bad)  
  432fc7:	(bad)  
  432fc8:	dec    DWORD PTR [eax+0x5c4d12ff]
  432fce:	(bad)  
  432fcf:	(bad)  
  432fd0:	(bad)  
  432fd1:	mov    edx,0x76214d89
  432fd6:	add    DWORD PTR [ebx-0x38335201],0x2
  432fdd:	(bad)  
  432fde:	inc    DWORD PTR [eax]
  432fe0:	mov    eax,ebx
  432fe2:	jmp    edi
  432fe4:	test   DWORD PTR [edi+edi*8+0x0],ecx
  432fe8:	(bad)  
  432fe9:	jle    0x432feb
  432feb:	push   0x18
  432fed:	std    
  432fee:	mov    edi,edi
  432ff0:	add    DWORD PTR [edi+edi*8+0x40],0xffffffc8
  432ff5:	push   es
  432ff6:	add    DWORD PTR [eax],0x0
  432ff9:	loop   0x432f7e
  432ffb:	js     0x432fd0
  432ffd:	fadd   QWORD PTR [eax]
  432fff:	add    BYTE PTR [eax],al
  433001:	cmp    bh,bh
  433003:	data16 icebp 
  433005:	fld    DWORD PTR [eax]
  433007:	inc    DWORD PTR [ebx-0x203f007e]
  43300d:	xor    bh,bh
  43300f:	add    DWORD PTR [ebx-0x7fffe],0xffffff9d
  433016:	add    bh,bh
  433018:	push   edx
  43301a:	call   FWORD PTR [ebx]
  43301c:	mov    cl,dl
  43301e:	(bad)  
  43301f:	(bad)  
  433020:	(bad)  
  433021:	js     0x433022
  433023:	enter  0xdca9,0xff
  433027:	add    BYTE PTR [eax],al
  433029:	or     al,0x0
  43302b:	jp     0x432fb9
  43302d:	inc    ecx
  43302e:	(bad)  
  43302f:	(bad)  
  433030:	call   FWORD PTR [esi+0x3fe89e83]
  433036:	inc    DWORD PTR [eax]
  433038:	add    BYTE PTR [ebx-0x1],cl
  43303b:	and    ch,BYTE PTR [ebx-0x3b]
  43303e:	(bad)  
  43303f:	(bad)  
  433040:	call   DWORD PTR [ebp-0x1]
  433043:	jns    0x433053
  433045:	fiadd  WORD PTR [eax]
  433047:	add    bh,bh
  433049:	add    BYTE PTR gs:[eax-0x1a],ch
  43304d:	fld    QWORD PTR [ebx+0x6583ff]
  433053:	cmc    
  433054:	mov    dh,0x66
  433056:	add    ah,cl
  433058:	call   FWORD PTR [esi-0xea6c300]
  43305e:	inc    DWORD PTR [eax]
  433060:	inc    DWORD PTR [edx-0x77]
  433063:	shl    BYTE PTR [ecx+0x55],0xcc
  433067:	add    BYTE PTR [ebx-0x71f500f9],al
  43306d:	push   eax
  43306e:	add    bh,bh
  433070:	jmp    DWORD PTR ds:0x93d79c83
  433076:	add    bh,bh
  433078:	push   DWORD PTR [esi+0x606c04ff]
  43307e:	add    BYTE PTR [ecx-0x3900a301],cl
  433084:	cmp    al,0x83
  433086:	add    DWORD PTR [ebx+0x5aff3700],0xffffffb5
  43308d:	out    dx,al
  43308e:	or     DWORD PTR [ecx-0x2a002001],0xffffff99
  433095:	cwde   
  433096:	or     DWORD PTR [ecx+0x77cc12ff],0x8
  43309d:	jmp    0x74331a1
  4330a2:	dec    esp
  4330a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4330a5:	in     eax,0xff
  4330a7:	inc    DWORD PTR [ebx-0x1c20ffcd]
  4330ad:	js     0x43307b
  4330af:	inc    DWORD PTR [eax]
  4330b1:	rol    DWORD PTR [ebx-0x335cd898],1
  4330b7:	add    BYTE PTR [ecx+0x14e8ccae],cl
  4330bd:	fld    QWORD PTR [eax]
  4330bf:	mov    edi,edi
  4330c1:	mov    eax,ds:0xb10d4ff
  4330c6:	inc    DWORD PTR [eax]
  4330c8:	mov    DWORD PTR [eax+0x0],edi
  4330cb:	test   dl,0xd3
  4330ce:	(bad)  
  4330cf:	(bad)  
  4330d0:	push   DWORD PTR [eax-0x7d]
  4330d3:	sub    al,0xac
  4330d5:	or     bh,bh
  4330d7:	add    bh,bh
  4330d9:	js     0x43305e
  4330db:	idiv   DWORD PTR [ecx]
  4330dd:	mov    ds:0xd400ff00,al
  4330e2:	call   ebx
  4330e4:	sub    edx,DWORD PTR [edi+edi*8-0x1]
  4330e8:	add    al,ah
  4330ea:	add    BYTE PTR [eax+0xff7884],cl
  4330f0:	or     esp,0xffffff83
  4330f3:	adc    al,0xea
  4330f5:	mov    ch,0xff
  4330f7:	(bad)  
  4330f8:	inc    DWORD PTR [esi]
  4330fa:	adc    eax,0x5e
  4330fd:	ss cmp edi,0xffffffcc
  433101:	inc    ebp
  433102:	int3   
  433103:	popa   
  433104:	rcl    BYTE PTR [eax-0x6dff0001],0xcc
  43310b:	cmp    eax,0xffffc25f
  433110:	add    BYTE PTR ds:0xb058cbff,dl
  433116:	add    bh,bh
  433118:	jmp    DWORD PTR [ebx+0x5506a400]
  43311e:	cmp    edi,0xffffffff
  433121:	add    al,0x0
  433123:	jl     0x4330de
  433125:	repz add BYTE PTR [eax],al
  433128:	sub    edi,0x0
  43312b:	cmp    eax,0xccffafd3
  433130:	add    BYTE PTR [edx-0x7b286401],cl
  433136:	inc    DWORD PTR [ebx-0x1133aa01]
  43313c:	xor    eax,0xcc008d
  433141:	rol    BYTE PTR [eax],cl
  433143:	xchg   ebp,eax
  433144:	mov    al,0xdd
  433146:	cmp    edi,0xffffff83
  433149:	mov    al,BYTE PTR [eax]
  43314b:	mul    DWORD PTR [edi]
  43314d:	pushf  
  43314e:	(bad)  
  43314f:	(bad)  
  433150:	jmp    DWORD PTR [ebp-0x5e625100]
  433156:	(bad)  
  433157:	inc    DWORD PTR [ebx+0x302bffdd]
  43315d:	xchg   edi,eax
  43315e:	inc    DWORD PTR [eax]
  433160:	sub    DWORD PTR [ebx],0xffffffff
  433163:	jge    0x43312e
  433165:	jp     0x4330f0
  433167:	(bad)  
  433168:	push   ecx
  43316a:	jmp    DWORD PTR [ecx]
  43316c:	fdiv   QWORD PTR [esi+0x7983ff83]
  433172:	add    dl,dh
  433174:	inc    edx
  433175:	xchg   esi,eax
  433176:	dec    DWORD PTR [ecx-0x6d763301]
  43317c:	inc    esp
  43317d:	out    dx,al
  43317e:	add    BYTE PTR [ecx-0x30ff8d34],cl
  433184:	adc    BYTE PTR [ebp-0x3e7c7601],dh
  43318a:	call   FWORD PTR [ecx+edx*8+0x890088]
  433191:	xchg   ebp,eax
  433192:	jmp    FWORD PTR [edi+0x89c899]
  433198:	(bad)  
  433199:	call   0x18c5a21
  43319e:	mov    edi,edi
  4331a0:	add    BYTE PTR [edi-0x34],dh
  4331a3:	sbb    dl,bl
  4331a5:	sar    bh,cl
  4331a7:	dec    DWORD PTR [ecx-0x24d400cb]
  4331ad:	sbb    al,BYTE PTR [ebx-0x3f0001]
  4331b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4331b4:	inc    edx
  4331b5:	pop    esp
  4331b6:	add    BYTE PTR [eax],al
  4331b8:	add    dh,ch
  4331ba:	push   DWORD PTR [esi+edi*2-0x28]
  4331be:	add    ah,cl
  4331c0:	add    BYTE PTR [ebp+0x0],ah
  4331c3:	jo     0x433225
  4331c5:	add    BYTE PTR [bx+si],al
  4331c8:	jmp    edi
  4331ca:	call   FWORD PTR [esi]
  4331cc:	xbegin 0xc142325b
  4331d2:	jmp    FWORD PTR [esi]
  4331d4:	jg     0x433210
  4331d6:	mov    edi,edi
  4331d8:	add    BYTE PTR [ebp-0x75978401],ah
  4331de:	cmp    edi,0x0
  4331e1:	adc    eax,0x6c0f2b00
  4331e6:	(bad)  
  4331e7:	(bad)  
  4331e8:	call   DWORD PTR [esi+0x0]
  4331eb:	scas   eax,DWORD PTR es:[edi]
  4331ec:	mov    eax,ds:0xffff0084
  4331f1:	jle    0x4331f2
  4331f3:	imul   edi,DWORD PTR [eax+0xffcc16],0x120f839f
  4331fd:	lahf   
  4331fe:	inc    DWORD PTR [eax]
  433200:	add    BYTE PTR [ecx+0xf929a83],dl
  433206:	(bad)  
  433207:	inc    DWORD PTR [eax]
  433209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43320a:	add    BYTE PTR [edx+0x4],dh
  43320d:	xor    al,0x0
  43320f:	inc    DWORD PTR [eax]
  433211:	notrack call DWORD PTR [ebx+0x2a]
  433215:	add    DWORD PTR [eax],0xccbfcccc
  43321b:	into   
  43321c:	lea    esi,[ecx]
  43321e:	(bad)  
  43321f:	dec    DWORD PTR [ecx-0xd08ff67]
  433225:	mov    es,WORD PTR [eax]
  433227:	int3   
  433228:	jmp    edi
  43322a:	add    cl,ah
  43322c:	mov    BYTE PTR [eax],ah
  43322e:	int3   
  43322f:	dec    DWORD PTR [ecx-0x5ffa00ef]
  433235:	icebp  
  433236:	add    ah,cl
  433238:	dec    ebx
  43323a:	push   ebp
  43323c:	mov    ds:0xff000046,eax
  433241:	jbe    0x433242
  433243:	push   ebp
  433244:	add    BYTE PTR [edx],ah
  433246:	(bad)  
  433247:	dec    DWORD PTR [ecx+0x9a1ff78]
  43324d:	sub    eax,0xdfffffff
  433252:	int3   
  433253:	arpl   sp,di
  433255:	jb     0x433257
  433257:	add    bh,bh
  433259:	mov    al,0xff
  43325b:	aaa    
  43325c:	std    
  43325d:	sbb    edi,edi
  43325f:	inc    DWORD PTR [eax]
  433261:	sbb    al,0xff
  433263:	inc    esp
  433264:	inc    eax
  433265:	mov    bh,0xcc
  433267:	add    DWORD PTR [eax],0x59
  43326a:	int3   
  43326b:	jae    0x433230
  43326d:	dec    esp
  43326f:	inc    DWORD PTR [eax]
  433271:	inc    DWORD PTR [eax]
  433273:	pop    ss
  433274:	or     bh,ah
  433276:	cmp    edi,0xffffff89
  433279:	inc    edi
  43327a:	(bad)  
  43327b:	aas    
  43327c:	pop    edx
  43327d:	jbe    0x43327e
  43327f:	inc    DWORD PTR [ebx-0x51447cde]
  433285:	dec    ah
  433287:	dec    esp
  433289:	test   al,0xff
  43328b:	push   ss
  43328c:	lods   al,BYTE PTR ds:[esi]
  43328d:	inc    esp
  43328e:	add    DWORD PTR [ebx-0x18ffc601],0xffffffa9
  433295:	mov    ch,0x0
  433297:	int3   
  433298:	jmp    eax
  43329a:	add    BYTE PTR [eax-0x3b],dh
  43329d:	inc    esi
  43329e:	inc    DWORD PTR [eax]
  4332a0:	call   esp
  4332a2:	call   FWORD PTR [edi-0x33ff15af]
  4332a8:	int3   
  4332a9:	jmp    DWORD PTR cs:[ebx-0x3388d8]
  4332b0:	add    BYTE PTR [edi+edi*8+0x9],ah
  4332b4:	pop    ecx
  4332b5:	es add bh,bh
  4332b8:	int3   
  4332b9:	mov    BYTE PTR [eax],0xd
  4332bc:	outs   dx,BYTE PTR ds:[esi]
  4332bd:	pushf  
  4332be:	add    DWORD PTR [eax],0xffffffff
  4332c1:	jge    0x433246
  4332c3:	cwde   
  4332c4:	mov    dh,0x9d
  4332c6:	dec    esp
  4332c8:	add    BYTE PTR [eax+eax*1-0x25],ah
  4332cc:	pop    ebx
  4332cd:	retf   
  4332ce:	add    BYTE PTR [ebx-0xf002900],al
  4332d4:	sti    
  4332d5:	in     eax,0xff
  4332d7:	(bad)  
  4332d8:	(bad)  
  4332d9:	aas    
  4332da:	add    bh,bh
  4332dc:	sub    DWORD PTR [ebx-0x34],edi
  4332df:	inc    DWORD PTR [eax]
  4332e1:	js     0x433266
  4332e3:	shl    dl,cl
  4332e5:	push   ds
  4332e6:	mov    edi,edi
  4332e8:	(bad)  
  4332e9:	mov    ecx,0xa1d34fff
  4332ee:	add    bh,bh
  4332f0:	add    BYTE PTR [esp+ecx*8+0x3a],ch
  4332f4:	loop   0x43327f
  4332f6:	(bad)  
  4332f7:	inc    DWORD PTR [eax]
  4332f9:	xchg   ebx,eax
  4332fa:	jmp    FWORD PTR ds:0xff00a5
  433300:	dec    esi
  433302:	(bad)  
  433303:	std    
  433304:	outs   dx,BYTE PTR ds:[esi]
  433305:	pop    edi
  433306:	(bad)  
  433307:	inc    DWORD PTR [eax]
  433309:	jnp    0x4332d7
  43330b:	fs dec ebx
  43330d:	push   cs
  43330e:	inc    DWORD PTR [eax]
  433310:	(bad)  
  433311:	mov    esp,0x79d9ebff
  433316:	inc    DWORD PTR [eax]
  433318:	inc    DWORD PTR [edx-0x63d1f101]
  43331e:	inc    DWORD PTR [ebx+0x2c00a9ff]
  433324:	call   DWORD PTR [edi+edi*8-0x4f0001]
  43332b:	inc    ecx
  43332c:	cmp    al,0xd8
  43332e:	cmp    edi,0xffffffff
  433331:	fld    QWORD PTR [eax]
  433333:	jmp    0x42c052
  433338:	adc    DWORD PTR [eax-0x1],0xffffff81
  43333c:	stos   BYTE PTR es:[edi],al
  43333d:	stc    
  43333e:	(bad)  
  43333f:	inc    DWORD PTR [ebx+0x1529004f]
  433345:	sbb    BYTE PTR [eax],al
  433347:	add    BYTE PTR [ecx-0x7dfb7c55],cl
  43334d:	or     BYTE PTR [ecx-0x33b1ff01],cl
  433353:	fnsave [esi]
  433355:	enter  0xffff,0xff
  433359:	add    al,0xcc
  43335b:	cmp    ecx,DWORD PTR [ecx-0x7c0066]
  433361:	add    cl,BYTE PTR [ecx+0x95d153]
  433367:	(bad)  
  433368:	call   FWORD PTR [edi]
  43336a:	add    al,bl
  43336c:	push   ebx
  43336d:	pop    ds
  43336e:	add    bh,bh
  433370:	call   DWORD PTR [ecx-0x7d]
  433373:	push   0xffffffac
  433375:	sub    edi,edi
  433377:	add    ah,cl
  433379:	mov    edx,0x2c8d5dcc
  43337e:	add    BYTE PTR [ecx+0xcff13ff],cl
  433384:	fistp  WORD PTR ds:0x65838900
  43338a:	add    dl,ch
  43338c:	xor    BYTE PTR [ecx-0xdff7c34],dl
  433392:	add    cl,dh
  433394:	mov    eax,0xff00ff98
  433399:	test   al,0x83
  43339b:	lds    eax,FWORD PTR [ebx+0xffff0d]
  4333a1:	scas   eax,DWORD PTR es:[edi]
  4333a2:	push   eax
  4333a4:	data16 in al,0xff
  4333a7:	add    bh,bh
  4333a9:	jmp    0x4155c5ae
  4333ae:	add    bh,bh
  4333b0:	(bad)  
  4333b1:	mov    ebp,0xcc7f7fff
  4333b6:	or     esp,0xffffffff
  4333b9:	push   es
  4333ba:	add    ch,dl
  4333bc:	in     al,0xdc
  4333be:	add    BYTE PTR [eax],al
  4333c0:	(bad)  
  4333c1:	fdiv   st(7),st
  4333c3:	jg     0x4333e2
  4333c5:	jo     0x43334a
  4333c7:	inc    DWORD PTR [eax]
  4333c9:	js     0x4333ca
  4333cb:	push   ds
  4333cc:	dec    esp
  4333cd:	test   eax,0x5b008383
  4333d2:	jmp    FWORD PTR [ebx-0x48]
  4333d5:	sbb    al,BYTE PTR [eax]
  4333d7:	or     esp,0x32
  4333da:	(bad)  
  4333db:	fisub  WORD PTR [eax+0xffffdc]
  4333e1:	mov    bl,0x83
  4333e3:	nop
  4333e4:	(bad)  
  4333e5:	aam    0xcc
  4333e7:	mov    DWORD PTR [eax],eax
  4333e9:	call   0xc57a85ed
  4333ee:	inc    DWORD PTR [eax]
  4333f0:	call   ebx
  4333f2:	dec    DWORD PTR [esp+edi*8]
  4333f5:	cmp    edi,0xffffffff
  4333f8:	add    BYTE PTR [ebp-0x1],bl
  4333fb:	mov    dh,0xac
  4333fd:	pop    es
  4333fe:	cmp    edi,0xffffff89
  433401:	jns    0x433402
  433403:	das    
  433404:	sbb    bh,ch
  433406:	add    ah,cl
  433408:	add    al,bl
  43340a:	(bad)  
  43340b:	add    edi,DWORD PTR ds:[ebp+0x3eff0000]
  433412:	(bad)  
  433413:	jge    0x4333ca
  433415:	xchg   bh,bh
  433417:	(bad)  
  433418:	call   DWORD PTR [ebx-0x32bddc01]
  43341e:	(bad)  
  43341f:	dec    esp
  433421:	fld    QWORD PTR [ebx-0x7c77e116]
  433427:	inc    DWORD PTR [ebx+0x1ef8ffa9]
  43342d:	jecxz  0x4333fb
  43342f:	inc    DWORD PTR [eax]
  433431:	je     0x4333ff
  433433:	lea    ebx,[ebx-0x76ffff70]
  433439:	ret    
  43343a:	add    BYTE PTR [ebx+ebx*2+0x1b],cl
  43343e:	inc    DWORD PTR [eax]
  433440:	mov    DWORD PTR [edx-0x1],ebx
  433443:	mov    esp,0xff02a1
  433448:	dec    eax
  43344a:	mov    DWORD PTR [edi],eax
  43344c:	dec    ebx
  43344d:	jne    0x43344f
  43344f:	add    ah,cl
  433451:	dec    ecx
  433452:	add    BYTE PTR [edi+0x1a],dh
  433455:	imul   eax,DWORD PTR [ebx-0xe90001],0x4351a7
  43345f:	mov    edi,edi
  433461:	fdivr  st,st(7)
  433463:	lock or BYTE PTR [ebx-0x59760001],dh
  43346a:	dec    DWORD PTR [ebp-0x7cff2989]
  433470:	cmp    DWORD PTR [eax],0x0
  433473:	sub    DWORD PTR [ebp+0xb],0x0
  433477:	add    bh,bh
  433479:	push   ebp
  43347a:	add    ah,dl
  43347c:	ja     0x4334c1
  43347e:	(bad)  
  43347f:	dec    esp
  433481:	outs   dx,DWORD PTR ds:[esi]
  433482:	xor    ebp,0xffffff96
  433485:	sbb    bh,bh
  433487:	mov    edi,edi
  433489:	sti    
  43348a:	adc    DWORD PTR [edx-0x7c00b710],0x0
  433491:	sub    bh,bh
  433493:	push   0xff839541
  433498:	int3   
  433499:	mov    dl,0x83
  43349b:	enter  0x29fe,0xff
  43349f:	inc    DWORD PTR [eax]
  4334a1:	loopne 0x4334a3
  4334a3:	clc    
  4334a4:	jns    0x4334d6
  4334a6:	add    BYTE PTR [ecx-0x7e00b000],cl
  4334ac:	les    edi,FWORD PTR [edx-0x7d]
  4334af:	(bad)  
  4334b0:	push   DWORD PTR [edx-0x7d]
  4334b3:	ja     0x4334ce
  4334b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4334b6:	dec    esp
  4334b8:	add    BYTE PTR [edx-0x7d],ch
  4334bb:	cmp    edi,DWORD PTR [eax-0x7c0000dd]
  4334c1:	mov    ds:0x3025d383,eax
  4334c6:	dec    DWORD PTR [ecx+0xeffad00]
  4334cc:	dec    edx
  4334cd:	int3   
  4334ce:	add    ah,cl
  4334d0:	add    BYTE PTR [ecx-0x1],ch
  4334d3:	aam    0xf7
  4334d5:	inc    esp
  4334d6:	mov    edi,edi
  4334d8:	call   FWORD PTR [eax]
  4334da:	add    dl,cl
  4334dc:	stc    
  4334dd:	pop    es
  4334de:	or     esp,0x0
  4334e1:	sbb    bh,bh
  4334e3:	pusha  
  4334e4:	or     cl,dh
  4334e6:	dec    DWORD PTR [ecx-0x5f00ad01]
  4334ec:	pop    eax
  4334ed:	xor    eax,0x39ff83ff
  4334f2:	adc    DWORD PTR [ecx+0x8],0x19
  4334f6:	dec    esp
  4334f8:	dec    DWORD PTR [edi-0x34]
  4334fb:	clc    
  4334fc:	in     al,dx
  4334fd:	scas   eax,DWORD PTR es:[edi]
  4334fe:	int3   
  4334ff:	add    bh,bh
  433501:	mov    dl,0x0
  433503:	sub    ch,al
  433505:	add    edi,edi
  433507:	inc    DWORD PTR [eax]
  433509:	ud0    ecx,DWORD PTR [esi]
  43350c:	mov    al,0x95
  43350e:	int3   
  43350f:	inc    DWORD PTR [ebx-0x299433a9]
  433515:	xlat   BYTE PTR ds:[ebx]
  433516:	add    bh,bh
  433518:	dec    DWORD PTR [edx-0x1]
  43351b:	mov    bh,0xd0
  43351d:	sub    bh,bh
  43351f:	dec    DWORD PTR [ecx-0x739400ed]
  433525:	mov    ebx,0x4cff0000
  43352a:	add    BYTE PTR [edx-0x33f0e9],dl
  433530:	dec    DWORD PTR [esi+0x718de100]
  433536:	add    BYTE PTR [eax],al
  433538:	call   esp
  43353a:	call   DWORD PTR [ebp+0x26]
  43353d:	dec    esp
  43353e:	(bad)  
  43353f:	inc    DWORD PTR [eax]
  433541:	adc    eax,0x93d075ff
  433546:	inc    DWORD PTR [ebx-0x46766001]
  43354c:	shl    DWORD PTR [eax],1
  43354e:	add    bh,bh
  433550:	mov    DWORD PTR [eax+0x6b0a27ff],ebx
  433556:	add    BYTE PTR [eax],al
  433558:	inc    DWORD PTR [edx-0x1]
  43355b:	add    al,0xc6
  43355d:	inc    eax
  43355e:	inc    DWORD PTR [eax]
  433560:	inc    ebx
  433562:	dec    DWORD PTR [ebp+ecx*8-0x76ff3362]
  433569:	aad    0x0
  43356b:	push   ds
  43356c:	jge    0x433529
  43356e:	(bad)  
  43356f:	(bad)  
  433570:	jmp    DWORD PTR [edi+0x6db741ff]
  433576:	(bad)  
  433577:	(bad)  
  433578:	(bad)  
  433579:	js     0x43357a
  43357b:	adc    ebp,esi
  43357d:	or     cl,BYTE PTR [ecx-0x450001]
  433583:	iret   
  433584:	lods   eax,DWORD PTR ds:[esi]
  433585:	add    BYTE PTR fs:[eax],al
  433588:	jmp    FWORD PTR [ebx+0x17f0d3cc]
  43358e:	(bad)  
  43358f:	(bad)  
  433590:	push   ebx
  433592:	add    DWORD PTR [esi+ecx*2],0xffffffa9
  433596:	add    BYTE PTR [eax],al
  433598:	(bad)  
  433599:	cmp    al,0x83
  43359b:	dec    esp
  43359c:	sahf   
  43359d:	loopne 0x43359e
  43359f:	add    bh,bh
  4335a1:	lahf   
  4335a2:	add    BYTE PTR [edi+eax*1-0x67],ah
  4335a6:	dec    DWORD PTR [ecx+0x4acc5700]
  4335ac:	sti    
  4335ad:	add    BYTE PTR [eax],0x0
  4335b0:	add    BYTE PTR [edx+0x4574edff],ah
  4335b6:	int3   
  4335b7:	add    bh,bh
  4335b9:	sbb    edi,edi
  4335bb:	in     eax,0x47
  4335bd:	(bad)  
  4335be:	cmp    edi,0xffffff83
  4335c1:	jne    0x4335c2
  4335c3:	cld    
  4335c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4335c5:	fwait
  4335c6:	(bad)  
  4335c7:	inc    DWORD PTR [ebx+0x1080ffbb]
  4335cd:	retf   
  4335ce:	mov    edi,edi
  4335d0:	add    ch,ah
  4335d2:	push   edx
  4335d4:	mov    eax,esp
  4335d6:	mov    edi,edi
  4335d8:	push   DWORD PTR [ebp-0x1]
  4335db:	or     al,0x94
  4335dd:	lahf   
  4335de:	(bad)  
  4335df:	(bad)  
  4335e0:	jmp    DWORD PTR [edx]
  4335e2:	xor    ebp,0x61
  4335e5:	mov    DWORD PTR [eax],0x89e9ccff
  4335eb:	mov    esi,0x31b
  4335f0:	add    BYTE PTR [edi-0x632b0201],bh
  4335f6:	(bad)  
  4335f7:	(bad)  
  4335f8:	dec    DWORD PTR [esi]
  4335fa:	sub    ebx,0xffffffc3
  4335fd:	cmp    al,0x83
  4335ff:	add    bh,bh
  433601:	daa    
  433602:	call   FWORD PTR [ebx]
  433604:	jge    0x4335d1
  433606:	inc    DWORD PTR [eax]
  433608:	add    BYTE PTR [ebx],dh
  43360a:	jmp    FWORD PTR [esp+ebx*4+0x71]
  43360e:	add    BYTE PTR [eax],al
  433610:	int3   
  433611:	add    DWORD PTR [ebx-0x337fdbe7],0x0
  433618:	sbb    ecx,0x0
  43361b:	data16 jae 0x433625
  43361e:	add    bh,bh
  433620:	add    BYTE PTR [edi+edi*8-0x6f],dh
  433624:	ins    DWORD PTR es:[edi],dx
  433625:	inc    esp
  433626:	add    bh,bh
  433628:	add    BYTE PTR [ebx],ch
  43362a:	or     edx,0x2e
  43362d:	pop    edx
  43362e:	add    ah,cl
  433630:	dec    edi
  433632:	sub    DWORD PTR [edi+0xff76be],0xffffff83
  433639:	add    BYTE PTR [ebx+0xc556a3],0x89
  433640:	and    ebx,0xffffffcc
  433643:	dec    eax
  433644:	(bad)  
  433645:	in     eax,0xff
  433647:	add    BYTE PTR [eax],al
  433649:	pop    edx
  43364a:	mov    eax,ebx
  43364c:	mov    ecx,0xffccffba
  433651:	pop    ecx
  433652:	add    BYTE PTR [esi-0x20],ch
  433655:	(bad)
  433659:	sbb    al,0xff
  43365b:	ret    0xbe45
  43365e:	add    DWORD PTR [eax],0xffffff89
  433661:	sub    bh,bh
  433663:	and    BYTE PTR [eax+0x7f],0xff
  433667:	inc    DWORD PTR [ebx-0x57ff01]
  43366d:	pop    ss
  43366e:	dec    esp
  433670:	adc    DWORD PTR [edx],0x0
  433673:	adc    al,0xb2
  433675:	mov    DWORD PTR [ebx+0x880083],eax
  43367b:	mov    dl,0xdf
  43367d:	inc    edi
  43367e:	(bad)  
  43367f:	(bad)  
  433680:	push   DWORD PTR [esi+0x2ad856ff]
  433686:	inc    DWORD PTR [ebx-0x19ffaa00]
  43368c:	ds sbb edi,edi
  43368f:	int3   
  433690:	(bad)  
  433691:	jns    0x43365f
  433693:	(bad)
  433696:	(bad)  
  433697:	(bad)  
  433698:	push   esp
  43369a:	call   DWORD PTR [edx+0xfff01f]
  4336a0:	jmp    FWORD PTR [ebp+0x14e37383]
  4336a6:	int3   
  4336a7:	add    bh,bh
  4336a9:	fld    QWORD PTR [eax]
  4336ab:	and    DWORD PTR [edx-0x7c00db],esi
  4336b1:	stos   BYTE PTR es:[edi],al
  4336b2:	add    BYTE PTR [edx*4-0x9c],bh
  4336b9:	repnz (bad) 
  4336bb:	jnp    0x433731
  4336bd:	add    al,BYTE PTR [eax]
  4336bf:	int3   
  4336c0:	call   FWORD PTR [edi+edi*8+0x8da04]
  4336c7:	add    BYTE PTR [ebx+0x73bf836f],al
  4336cd:	jbe    0x4336cf
  4336cf:	cmp    edi,0x71
  4336d2:	jmp    eax
  4336d4:	(bad)  
  4336d5:	retf   
  4336d6:	or     esp,0xffffff83
  4336d9:	and    al,0xcc
  4336db:	mov    ds:0xffffffe6,eax
  4336e1:	stc    
  4336e2:	push   ecx
  4336e4:	jbe    0x433749
  4336e6:	(bad)  
  4336e7:	dec    esp
  4336e9:	xchg   edi,edi
  4336eb:	mov    ds:0xff0455,al
  4336f0:	(bad)  
  4336f1:	add    BYTE PTR ds:[esi-0x9ad7],dl
  4336f8:	cmp    DWORD PTR [esi],0xffffffcc
  4336fb:	ins    DWORD PTR es:[edi],dx
  4336fc:	aas    
  4336fd:	(bad)  
  4336fe:	dec    esp
  433700:	xor    DWORD PTR [edi+edi*8-0x4b489e],0x0
  433708:	call   FWORD PTR [ebp+0x54cbd600]
  43370e:	dec    DWORD PTR [ecx-0x1c00ae01]
  433714:	push   cs
  433715:	xor    al,BYTE PTR [ebx+0x71ff00]
  43371b:	or     ax,0xff05
  43371f:	add    bh,bh
  433721:	sar    bh,cl
  433723:	jge    0x4337a3
  433725:	xchg   BYTE PTR [ecx-0x764d0100],cl
  43372b:	fist   WORD PTR [esi+0x83830a]
  433731:	adc    al,0xff
  433733:	jae    0x4336f0
  433735:	aas    
  433736:	(bad)  
  433737:	dec    esp
  433739:	out    0x0,eax
  43373b:	inc    edi
  43373c:	mov    ah,0xd7
  43373e:	(bad)  
  43373f:	inc    DWORD PTR [eax]
  433741:	mov    ch,0x83
  433743:	add    edx,ebp
  433745:	fcmove st,st(4)
  433747:	add    BYTE PTR [ebx+0x30fdff33],al
  43374d:	sbb    al,0xff
  43374f:	inc    DWORD PTR [eax]
  433751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433752:	int3   
  433753:	jb     0x43377e
  433755:	fiadd  WORD PTR [eax]
  433757:	inc    DWORD PTR [eax]
  433759:	enter  0x9bff,0xa5
  43375d:	inc    ebx
  43375e:	(bad)  
  43375f:	inc    DWORD PTR [ebx-0x3880ff18]
  433765:	cmp    bh,0x0
  433768:	add    DWORD PTR [ebp+0x0],0xe
  43376c:	mov    ds:0xff00ffbf,eax
  433771:	cmp    eax,DWORD PTR [ebx+0x1da104]
  433777:	(bad)  
  433778:	call   DWORD PTR [edi+0x2d398689]
  43377e:	(bad)  
  43377f:	inc    DWORD PTR [eax]
  433781:	push   esp
  433782:	jmp    DWORD PTR [ebx]
  433784:	lahf   
  433785:	and    eax,0x94ff00ff
  43378a:	call   DWORD PTR [esi-0x673a]
  433790:	jmp    FWORD PTR [ebx]
  433792:	jmp    FWORD PTR [esi-0x1c]
  433795:	pop    ss
  433796:	inc    DWORD PTR [eax]
  433798:	add    BYTE PTR [edi-0x1],dh
  43379b:	dec    esp
  43379c:	push   ss
  43379d:	(bad)  
  43379f:	add    BYTE PTR [eax],al
  4337a1:	aas    
  4337a2:	add    bl,cl
  4337a4:	fmul   QWORD PTR [ebx-0x65ff0001]
  4337aa:	(bad)  
  4337ab:	cld    
  4337ac:	and    eax,0xff0041
  4337b1:	rol    DWORD PTR [eax],cl
  4337b3:	cli    
  4337b4:	xor    DWORD PTR ds:0xc5ccffff,esp
  4337ba:	call   DWORD PTR [esi-0x27]
  4337bd:	out    dx,eax
  4337be:	(bad)  
  4337bf:	inc    DWORD PTR [ebx+0x5dc5ff03]
  4337c5:	(bad)  
  4337c6:	(bad)  
  4337c7:	(bad)  
  4337c8:	push   DWORD PTR [esi+0x531cfc00]
  4337ce:	int3   
  4337cf:	add    bh,bh
  4337d1:	in     al,0xff
  4337d3:	gs xchg ebx,eax
  4337d5:	mov    BYTE PTR [eax],0xff
  4337d8:	add    BYTE PTR [esi],al
  4337da:	dec    ebx
  4337dc:	popf   
  4337dd:	push   ss
  4337de:	add    BYTE PTR [eax],al
  4337e0:	sbb    eax,0xffffff89
  4337e3:	shl    DWORD PTR [eax+0x53],1
  4337e6:	add    BYTE PTR [ecx-0x25ff4d00],cl
  4337ec:	push   eax
  4337ed:	inc    ecx
  4337ee:	inc    DWORD PTR [eax]
  4337f0:	inc    ebx
  4337f2:	call   FWORD PTR ds:0xffffcd72
  4337f8:	dec    ebx
  4337fa:	jmp    FWORD PTR [eax]
  4337fc:	adc    bl,BYTE PTR [esi+0x0]
  4337ff:	add    ah,cl
  433801:	sub    DWORD PTR [eax],eax
  433803:	scas   eax,DWORD PTR es:[edi]
  433804:	jle    0x4337ac
  433806:	add    bh,bh
  433808:	add    BYTE PTR [esi+0x795a1fff],dl
  43380e:	add    BYTE PTR [eax],al
  433810:	call   DWORD PTR [edi+edi*8-0x4d]
  433814:	push   esi
  433815:	add    DWORD PTR [eax],0xffffffff
  433818:	cmp    DWORD PTR [ebp-0x34146c01],0xffffff83
  43381f:	(bad)  
  433820:	inc    DWORD PTR [esi-0x320ad00]
  433826:	inc    DWORD PTR [ebx-0x637c9700]
  43382c:	xchg   esi,eax
  43382d:	sbb    bh,bh
  43382f:	(bad)  
  433830:	push   DWORD PTR [ecx]
  433832:	(bad)  
  433833:	mov    ebp,0xccf35e
  433838:	push   DWORD PTR [eax]
  43383a:	add    bh,bl
  43383c:	inc    ebp
  43383d:	add    eax,0xb4000000
  433842:	add    BYTE PTR [edi+0x65],ch
  433845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433846:	(bad)  
  433847:	inc    DWORD PTR [eax]
  433849:	int    0x83
  43384b:	push   0x23
  43384d:	sub    eax,0x290083ff
  433852:	call   FWORD PTR [edx-0x28]
  433855:	aam    0xff
  433857:	inc    DWORD PTR [ebx+0x5959fff5]
  43385d:	mov    esi,0x3affffcc
  433862:	add    dl,bl
  433864:	aam    0x4b
  433866:	inc    DWORD PTR [ebx-0x1e7cb201]
  43386c:	lahf   
  43386d:	push   es
  43386e:	mov    DWORD PTR [ecx+0x60002b00],ecx
  433874:	lods   eax,DWORD PTR ds:[esi]
  433875:	add    esp,ecx
  433877:	add    bh,bh
  433879:	lods   al,BYTE PTR ds:[esi]
  43387a:	jmp    FWORD PTR [esi]
  43387c:	cwde   
  43387d:	arpl   WORD PTR [ebx-0xccff34],ax
  433883:	rcr    BYTE PTR [ecx+edi*4],0x83
  433887:	int3   
  433888:	add    ah,ah
  43388a:	int3   
  43388b:	push   ebp
  43388c:	clc    
  43388d:	retf   0x83cc
  433890:	add    al,dl
  433892:	push   DWORD PTR [ecx-0x5542]
  433898:	add    al,cl
  43389a:	add    BYTE PTR [eax],al
  43389c:	call   0x4338ec
  4338a1:	mov    dh,0xff
  4338a3:	adc    cl,BYTE PTR [ebx+0xffb4]
  4338a9:	jmp    0x43382e
  4338ab:	jge    0x433893
  4338ad:	fadd   QWORD PTR [eax]
  4338af:	(bad)  
  4338b0:	call   edi
  4338b2:	int3   
  4338b3:	inc    edi
  4338b4:	dec    ecx
  4338b5:	out    0xff,eax
  4338b7:	inc    DWORD PTR [eax]
  4338b9:	cli    
  4338ba:	call   FWORD PTR [eax+0x6ab2]
  4338c0:	call   DWORD PTR [ebp+0x0]
  4338c3:	pop    ecx
  4338c4:	jg     0x4338fb
  4338c6:	(bad)  
  4338c7:	(bad)  
  4338c8:	(bad)  
  4338c9:	mov    eax,0xa0599600
  4338ce:	add    BYTE PTR [ebx+0x60ff6eff],al
  4338d4:	cmp    al,0xc
  4338d6:	add    bh,bh
  4338d8:	mov    DWORD PTR [esi],ebp
  4338da:	call   DWORD PTR [esi]
  4338dc:	cmp    DWORD PTR [ebx-0x66010000],ebx
  4338e2:	mov    DWORD PTR [ebx+edi*1+0x22],ebx
  4338e6:	add    BYTE PTR [eax],al
  4338e8:	add    BYTE PTR [ecx-0x1],ch
  4338eb:	pop    ds
  4338ec:	jne    0x433906
  4338ee:	mov    edi,edi
  4338f0:	call   FWORD PTR [esi]
  4338f2:	dec    DWORD PTR [esi+eiz*4-0x8e]
  4338f9:	test   eax,0xf622f8ff
  4338fe:	or     DWORD PTR [ecx+0x4f0021ff],0x1f
  433905:	cmp    eax,0xc8ffff00
  43390a:	cmp    esp,0xffffff9c
  43390d:	push   edx
  43390e:	add    bh,bh
  433910:	add    BYTE PTR ds:0x54509f00,dh
  433916:	add    DWORD PTR [ebx+0x1f00b8ff],0xffffffda
  43391d:	rol    BYTE PTR [ebx-0x7c92007d],1
  433923:	call   0x14240f0
  433928:	and    DWORD PTR [edx-0x231a1800],0xffffffff
  43392f:	inc    DWORD PTR [eax]
  433931:	mov    dh,0x0
  433933:	mov    al,ds:0x830076d1
  433938:	sub    ebx,0x0
  43393b:	cmp    eax,eax
  43393d:	test   edi,edi
  43393f:	dec    DWORD PTR [ecx+0x18c4cc4a]
  433945:	and    cl,ah
  433947:	(bad)  
  433948:	dec    DWORD PTR [edi+edi*8]
  43394b:	in     eax,dx
  43394c:	shl    DWORD PTR [ebp-0x1],0xff
  433950:	add    DWORD PTR [esi+0x2cefc0ff],0xffffffcc
  433957:	add    bh,bh
  433959:	idiv   bh
  43395b:	call   0x42da74
  433960:	call   DWORD PTR [eax-0x14b48b01]
  433966:	add    BYTE PTR [eax],al
  433968:	push   DWORD PTR [ebp-0x5ffe9201]
  43396e:	add    DWORD PTR [eax],0xffffffff
  433971:	lds    eax,FWORD PTR [ebx-0x7c471b66]
  433977:	dec    esp
  433979:	xor    al,0xff
  43397b:	in     al,dx
  43397c:	bound  ecx,QWORD PTR [ebx-0x77]
  43397f:	add    bh,bh
  433981:	jbe    0x433982
  433983:	adc    edx,DWORD PTR [edx-0xff00e4]
  433989:	in     al,dx
  43398a:	add    BYTE PTR [ecx],ah
  43398c:	push   esi
  43398d:	add    edi,edi
  43398f:	inc    DWORD PTR [eax]
  433991:	gs (bad) 
  433993:	cmp    eax,0x83e08c
  433998:	mov    DWORD PTR [esi],edx
  43399a:	add    BYTE PTR [eax],bh
  43399c:	or     eax,0xffffe2
  4339a1:	gs int3 
  4339a3:	mov    edx,0x1b68
  4339a8:	and    DWORD PTR ds:0xf969a100,0x0
  4339af:	(bad)  
  4339b0:	dec    DWORD PTR [edi]
  4339b2:	add    BYTE PTR [edx-0x8],bl
  4339b5:	lods   al,BYTE PTR ds:[esi]
  4339b6:	cmp    edi,0xffffff89
  4339b9:	xchg   edi,eax
  4339ba:	push   DWORD PTR [ebp+0x6f]
  4339bd:	add    DWORD PTR ss:[eax],0xffffffff
  4339c1:	sbb    bh,bh
  4339c3:	add    eax,0xff8326b1
  4339c8:	jmp    FWORD PTR [edx-0x5d4ac700]
  4339ce:	(bad)  
  4339cf:	(bad)  
  4339d0:	dec    edx
  4339d2:	dec    DWORD PTR [ecx-0x73]
  4339d5:	retf   
  4339d6:	(bad)  
  4339d7:	inc    DWORD PTR [eax]
  4339d9:	pop    esi
  4339da:	xor    DWORD PTR [eax+0x38],0x16
  4339de:	add    BYTE PTR [eax],al
  4339e0:	mov    DWORD PTR [edi-0x37e7db7d],esp
  4339e6:	int3   
  4339e7:	add    bh,bh
  4339e9:	jmp    0x4339ea
  4339eb:	adc    DWORD PTR [esi+edi*8-0x1],esp
  4339ef:	add    ah,cl
  4339f1:	daa    
  4339f2:	add    BYTE PTR [esi+0x53],al
  4339f5:	into   
  4339f6:	(bad)  
  4339f7:	dec    esp
  4339f9:	and    al,0x0
  4339fb:	cmp    BYTE PTR [ebx+0xfffff4],bh
  433a01:	sub    DWORD PTR [si+0x16],0x18
  433a06:	(bad)  
  433a07:	inc    DWORD PTR [eax]
  433a09:	ret    0xbbff
  433a0c:	ja     0x4339e3
  433a0e:	add    BYTE PTR [ecx+0x30005b00],cl
  433a14:	int    0x6
  433a16:	add    BYTE PTR [eax],al
  433a18:	mov    DWORD PTR [edi],esp
  433a1a:	push   DWORD PTR [ebp-0x1b]
  433a1d:	xchg   ecx,eax
  433a1e:	inc    DWORD PTR [eax]
  433a20:	call   ebx
  433a22:	add    BYTE PTR [esp+edi*8],cl
  433a25:	add    DWORD PTR cs:[ebx-0x72ffcc00],0x18
  433a2d:	jmp    0xe1cd39fe
  433a32:	(bad)  
  433a33:	(bad)  [edx+0x37]
  433a36:	add    DWORD PTR [eax],0xffffffff
  433a39:	cmp    bh,0xdb
  433a3c:	mov    al,0x13
  433a3e:	(bad)  
  433a3f:	inc    DWORD PTR [eax]
  433a41:	inc    esp
  433a42:	add    ch,dh
  433a44:	ins    DWORD PTR es:[edi],dx
  433a45:	enter  0xccff,0xff
  433a49:	push   eax
  433a4a:	call   DWORD PTR [edi+ebx*2]
  433a4d:	(bad)  
  433a4f:	(bad)  
  433a50:	push   DWORD PTR [eax-0x191ce301]
  433a56:	inc    DWORD PTR [eax]
  433a58:	call   esp
  433a5a:	(bad)  
  433a5b:	fnsave ds:0xff83ff26
  433a61:	test   bh,bh
  433a63:	pop    esp
  433a64:	das    
  433a65:	mov    eax,ds:0x8000ff83
  433a6a:	add    bl,dl
  433a6c:	bound  esp,QWORD PTR [ebp+0x0]
  433a6f:	add    bh,bh
  433a71:	mov    bh,bh
  433a73:	cmp    ch,dh
  433a75:	sub    edi,edi
  433a77:	add    BYTE PTR [eax],al
  433a79:	str    WORD PTR [edi-0x48]
  433a7d:	inc    esi
  433a7e:	inc    DWORD PTR [eax]
  433a80:	inc    DWORD PTR [ebx+eax*4+0xde79dc]
  433a87:	int3   
  433a88:	or     ebp,0xffffff83
  433a8b:	xor    eax,0xff21f5
  433a90:	int3   
  433a91:	fdiv   st(7),st
  433a93:	add    cl,BYTE PTR [edx-0x5d]
  433a96:	inc    DWORD PTR [eax]
  433a98:	add    BYTE PTR [eax-0x5241037d],dh
  433a9e:	(bad)  
  433a9f:	(bad)  
  433aa0:	(bad)  
  433aa1:	fdivr  st,st(7)
  433aa3:	fs push esp
  433aa5:	idiv   edi
  433aa7:	(bad)  
  433aa8:	call   FWORD PTR [eax]
  433aaa:	dec    DWORD PTR [ebx+0x5d]
  433aad:	rol    BYTE PTR [ebx-0x337aff77],1
  433ab3:	mov    al,ds:0xccff0ad2
  433ab8:	add    ch,cl
  433aba:	add    cl,bh
  433abc:	jo     0x433b0e
  433abe:	(bad)  
  433abf:	(bad)  
  433ac0:	(bad)  
  433ac1:	(bad)  
  433ac3:	mov    al,ds:0x830081ec
  433ac8:	call   DWORD PTR [edx+0x0]
  433acb:	imul   esp,DWORD PTR [esi],0x89cc45
  433ad1:	in     al,0x0
  433ad3:	mov    eax,ds:0xffff1c33
  433ad8:	inc    DWORD PTR [ebp+0x667065ff]
  433ade:	add    bh,bh
  433ae0:	jmp    DWORD PTR [edi+0x1cf502ff]
  433ae6:	add    bh,bh
  433ae8:	call   DWORD PTR [edx+0x0]
  433aeb:	adc    eax,0x83b7de
  433af0:	mov    ebx,esi
  433af2:	int3   
  433af3:	gs mov dl,0xf3
  433af6:	add    BYTE PTR [ebx-0x1b00f300],al
  433afc:	adc    al,0x5c
  433afe:	add    bh,bh
  433b00:	mov    DWORD PTR [eax-0x15243d01],ebx
  433b06:	dec    DWORD PTR [ecx+0x7983ee00]
  433b0c:	js     0x433a95
  433b0e:	int3   
  433b0f:	add    BYTE PTR [eax],al
  433b11:	cs add dh,bh
  433b14:	nop
  433b15:	jg     0x433b16
  433b17:	add    bh,bh
  433b19:	or     cl,BYTE PTR [ecx-0x7ef4fc]
  433b1f:	add    bh,bh
  433b21:	xor    bh,bh
  433b23:	pop    ds
  433b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b25:	ins    BYTE PTR es:[edi],dx
  433b26:	add    DWORD PTR [ebx+0x53ff69cc],0xffffffa0
  433b2d:	fs (bad) 
  433b2f:	inc    DWORD PTR [eax]
  433b31:	or     eax,DWORD PTR [eax]
  433b33:	out    dx,al
  433b34:	add    BYTE PTR [edx+0x0],ch
  433b37:	int3   
  433b38:	add    BYTE PTR [ebp+0x0],ah
  433b3b:	mov    al,ds:0xffcc8d6a
  433b40:	add    dh,bh
  433b42:	add    BYTE PTR [ebx-0x33dbdb],ch
  433b48:	add    BYTE PTR [edx-0x1],dh
  433b4b:	pop    esi
  433b4c:	and    BYTE PTR [eax+eax*1+0x1b8300],ah
  433b53:	cld    
  433b54:	cmp    al,0xf4
  433b56:	dec    esp
  433b58:	sbb    DWORD PTR [edx],0xffffffcc
  433b5b:	inc    edi
  433b5c:	(bad)  
  433b5d:	in     eax,dx
  433b5e:	add    BYTE PTR [eax],al
  433b60:	add    BYTE PTR [edi+0x1845cfff],ch
  433b66:	(bad)  
  433b67:	dec    esp
  433b69:	jne    0x433b6b
  433b6b:	inc    DWORD PTR [edx+0x73]
  433b6e:	cmp    edi,0x0
  433b71:	lahf   
  433b72:	(bad)  
  433b73:	fistp  QWORD PTR [eax]
  433b75:	cdq    
  433b76:	int3   
  433b77:	add    DWORD PTR [eax],0xffffff99
  433b7a:	add    BYTE PTR [ebp-0xffe2e9],al
  433b80:	add    BYTE PTR [edx],dl
  433b82:	int3   
  433b83:	inc    ebp
  433b84:	push   ds
  433b85:	push   ds
  433b86:	add    BYTE PTR [ecx+0x21ffbdff],cl
  433b8c:	mov    ebp,0x8300be
  433b91:	data16 (bad) 
  433b93:	cli    
  433b94:	adc    bh,BYTE PTR [esi-0x1]
  433b97:	inc    DWORD PTR [eax]
  433b99:	cmc    
  433b9a:	call   FWORD PTR [eax-0x7cff3e8f]
  433ba0:	dec    DWORD PTR [ecx-0x77]
  433ba3:	aam    0x60
  433ba5:	fdivr  st,st(7)
  433ba7:	add    BYTE PTR [ebx-0x3defff99],al
  433bad:	aas    
  433bae:	add    bh,bh
  433bb0:	int3   
  433bb1:	jbe    0x433bb2
  433bb3:	add    al,0xd3
  433bb5:	cmp    eax,0x53ff00ff
  433bba:	add    dl,dh
  433bbc:	daa    
  433bbd:	xchg   edi,eax
  433bbe:	dec    esp
  433bc0:	adc    DWORD PTR [edi+edi*8+0xa],0x2c
  433bc5:	or     al,0xff
  433bc7:	add    BYTE PTR [ebx-0x6070067],al
  433bcd:	or     DWORD PTR [eax],eax
  433bcf:	inc    DWORD PTR [eax]
  433bd1:	mov    bl,0xff
  433bd3:	dec    ebp
  433bd4:	and    eax,0xccffff0e
  433bd9:	int3   
  433bda:	int3   
  433bdb:	int3   
  433bdc:	int3   
  433bdd:	int3   
  433bde:	int3   
  433bdf:	int3   
  433be0:	add    BYTE PTR [esi-0x2e73340],al
  433be6:	fwait
  433be7:	(bad)  
  433be8:	dec    DWORD PTR [esp+ecx*8-0x1d]
  433bec:	add    BYTE PTR [eax],al
  433bee:	xor    DWORD PTR [eax],eax
  433bf0:	and    esi,0x60
  433bf3:	call   DWORD PTR [esi-0x330033c2]
  433bf9:	inc    ecx
  433bfa:	(bad)  
  433bfb:	sti    
  433bfc:	dec    esp
  433bfe:	mov    ah,0xff
  433c00:	xor    DWORD PTR [ebp-0x26],0xffffff83
  433c04:	push   eax
  433c05:	mov    edx,0xd000002a
  433c0a:	int3   
  433c0b:	mov    esp,ecx
  433c0d:	add    BYTE PTR [edi+edi*8-0xdf6e34],ch
  433c14:	lods   al,BYTE PTR ds:[esi]
  433c15:	popf   
  433c16:	in     eax,dx
  433c17:	(bad)  
  433c18:	jmp    DWORD PTR [edi+edi*8+0x2d]
  433c1c:	add    bh,bh
  433c1e:	enter  0xffff,0xb2
  433c22:	sub    eax,0x468b86ff
  433c27:	add    bh,bh
  433c29:	or     al,0xcc
  433c2b:	daa    
  433c2c:	add    BYTE PTR [ebx+0x5dff83e6],al
  433c32:	dec    eax
  433c33:	add    BYTE PTR [ebx+0x19],cl
  433c36:	lahf   
  433c37:	add    BYTE PTR [eax],al
  433c39:	jle    0x433c3a
  433c3b:	add    BYTE PTR es:[ebx-0x73330015],al
  433c42:	outs   dx,DWORD PTR ds:[esi]
  433c43:	add    BYTE PTR [ebx-0x3a84],dh
  433c49:	sbb    bh,bh
  433c4b:	int    0xcc
  433c4d:	add    cl,al
  433c4f:	add    BYTE PTR [eax],al
  433c51:	inc    ebp
  433c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c53:	add    BYTE PTR [ebx-0x8941],ah
  433c59:	sub    edi,edi
  433c5b:	fdivr  st,st(7)
  433c5d:	inc    esp
  433c5f:	add    BYTE PTR [eax],al
  433c61:	dec    eax
  433c62:	jb     0x433c64
  433c64:	and    al,0xe
  433c66:	(bad)  
  433c67:	(bad)  
  433c68:	call   DWORD PTR [eax]
  433c6a:	add    BYTE PTR ds:0xffab83ff,bl
  433c70:	(bad)  
  433c71:	fnstenv [ebx-0x1]
  433c74:	jmp    0xff44184c
  433c79:	add    BYTE PTR [ebx+0x28ffff1b],al
  433c7f:	mov    edi,edi
  433c81:	mov    ?,WORD PTR [esi-0x1]
  433c84:	lock ins DWORD PTR es:[edi],dx
  433c86:	mov    DWORD PTR ss:[eax],eax
  433c89:	jp     0x433c8a
  433c8b:	inc    ecx
  433c8c:	dec    DWORD PTR [ecx-0x297c004c]
  433c92:	dec    DWORD PTR [ecx-0x766eb000]
  433c98:	add    ah,ch
  433c9a:	int3   
  433c9b:	mov    eax,0x83ae83ff
  433ca0:	jmp    DWORD PTR [esp+edx*1-0x2147857d]
  433ca7:	add    DWORD PTR [eax],0x7c
  433caa:	adc    DWORD PTR [ebx+0x3183ff],0x0
  433cb1:	sbb    BYTE PTR [eax+0x58a58b00],bh
  433cb7:	(bad)  
  433cb8:	jmp    DWORD PTR [ebx]
  433cba:	add    BYTE PTR [ebx+0x0],cl
  433cbd:	mov    DWORD PTR [edi+edi*8+0x6f75ff],esp
  433cc4:	cmp    esp,DWORD PTR [ebx+ebp*1]
  433cc7:	add    bh,bh
  433cc9:	(bad)  [ecx-0x19337cbe]
  433ccf:	int3   
  433cd0:	add    BYTE PTR [edi-0x1ed6ffe9],dh
  433cd6:	call   0xffb8:0xcc22ffff
  433cdd:	int3   
  433cde:	in     al,0x83
  433ce0:	mov    DWORD PTR [ebp-0x40dbff86],ecx
  433ce6:	lods   eax,DWORD PTR ds:[esi]
  433ce7:	(bad)  
  433ce8:	(bad)  
  433ce9:	cld    
  433cea:	add    BYTE PTR [edi],ch
  433cec:	int3   
  433ced:	dec    DWORD PTR [ebx]
  433cef:	mov    edi,edi
  433cf1:	fisttp QWORD PTR [ebx-0x2a21b800]
  433cf7:	add    BYTE PTR [eax],al
  433cf9:	jmp    0xc6a5ca
  433cfe:	nop
  433cff:	inc    DWORD PTR [eax]
  433d01:	sub    al,0xac
  433d03:	call   FWORD PTR [ebx-0xff6280]
  433d09:	push   0xffffffff
  433d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d0c:	add    BYTE PTR [ebx-0x2700005a],al
  433d12:	push   es
  433d13:	add    ah,ch
  433d15:	dec    ebp
  433d16:	aaa    
  433d17:	or     esp,0xffffffb3
  433d1a:	call   ebx
  433d1c:	inc    DWORD PTR [ebx+0x4b00ffa3]
  433d22:	rol    BYTE PTR [eax],cl
  433d24:	(bad)  
  433d25:	pusha  
  433d26:	mov    al,0x0
  433d28:	add    BYTE PTR [esi-0x3333e500],ah
  433d2e:	rol    BYTE PTR [ebx+0x875d00],1
  433d34:	and    BYTE PTR ds:0x1000894f,ah
  433d3a:	jmp    esi
  433d3c:	(bad)  
  433d3d:	call   FWORD PTR [ebx-0x1]
  433d40:	call   FWORD PTR [edi+ecx*1-0x6b4ae400]
  433d47:	mov    DWORD PTR [eax],eax
  433d49:	inc    edi
  433d4a:	jmp    FWORD PTR [ecx+0x6c00ff]
  433d50:	jmp    DWORD PTR [esi-0x5f]
  433d53:	add    ah,al
  433d55:	stc    
  433d56:	add    bh,bh
  433d58:	add    BYTE PTR [edi-0x1],cl
  433d5b:	mov    edi,0xff4489ff
  433d60:	add    BYTE PTR [eax],dl
  433d62:	ins    BYTE PTR es:[edi],dx
  433d63:	jmp    DWORD PTR [edx-0x4a6b]
  433d69:	push   ss
  433d6a:	dec    DWORD PTR [edx]
  433d6c:	(bad)  
  433d6d:	dec    DWORD PTR [edx]
  433d6f:	inc    DWORD PTR [eax]
  433d71:	mov    esp,DWORD PTR [edi]
  433d73:	inc    DWORD PTR [edi+edi*1]
  433d76:	inc    edx
  433d77:	add    BYTE PTR [ebx-0x2700ec],al
  433d7d:	inc    DWORD PTR [edi]
  433d7f:	inc    DWORD PTR [eax]
  433d81:	adc    BYTE PTR [ebx-0x1],bl
  433d84:	mov    ecx,0xff00c10a
  433d89:	(bad)  
  433d8a:	adc    DWORD PTR [eax-0x1],0xffffffff
  433d8e:	scas   eax,DWORD PTR es:[edi]
  433d8f:	(bad)  
  433d90:	call   FWORD PTR [edx]
  433d92:	jle    0x433d17
  433d94:	xchg   BYTE PTR [ebx],cl
  433d96:	inc    esp
  433d97:	inc    DWORD PTR [eax]
  433d99:	stos   BYTE PTR es:[edi],al
  433d9a:	mov    DWORD PTR [esi+0x0],ebx
  433d9d:	add    BYTE PTR [edi+0x2a9983ff],ah
  433da3:	push   ebp
  433da5:	xchg   ecx,eax
  433da6:	scas   eax,DWORD PTR es:[edi]
  433da7:	dec    DWORD PTR [ecx-0x76fe0051]
  433dad:	sbb    DWORD PTR [ecx-0x1],0xffffffff
  433db1:	(bad)  
  433db2:	mov    esp,0x6b80c5ff
  433db7:	inc    DWORD PTR [eax]
  433db9:	and    DWORD PTR [ebx-0x2dff7cf2],eax
  433dbf:	inc    DWORD PTR [eax]
  433dc1:	mov    dh,0x86
  433dc3:	(bad)  
  433dc4:	mov    ebx,0x89df28
  433dc9:	test   bh,bh
  433dcb:	test   edi,edi
  433dcd:	(bad)  
  433dce:	jp     0x433dcf
  433dd0:	int3   
  433dd1:	aas    
  433dd2:	ja     0x433dd3
  433dd4:	inc    ebp
  433dd5:	adc    dh,bh
  433dd7:	inc    DWORD PTR [ebx+0xb683d2]
  433ddd:	mov    DWORD PTR [esi],edx
  433ddf:	add    BYTE PTR [ecx-0x2533172f],cl
  433de5:	dec    dl
  433de7:	add    BYTE PTR [eax],al
  433de9:	adc    bh,bh
  433deb:	lds    eax,FWORD PTR [ebx-0x33ff4d01]
  433df1:	cmc    
  433df2:	outs   dx,DWORD PTR ds:[esi]
  433df3:	call   DWORD PTR [edi-0x76009c98]
  433df9:	mov    esp,0x898999ff
  433dfe:	push   edi
  433dff:	inc    DWORD PTR [eax]
  433e01:	sti    
  433e02:	or     al,0x83
  433e04:	mov    ch,0x33
  433e06:	scas   eax,DWORD PTR es:[edi]
  433e07:	add    bh,bh
  433e09:	sar    edi,1
  433e0b:	in     eax,0x89
  433e0d:	add    DWORD PTR [edx-0x381c0001],0xffffffff
  433e14:	sahf   
  433e15:	adc    BYTE PTR [edi],al
  433e17:	inc    DWORD PTR [eax]
  433e19:	stos   DWORD PTR es:[edi],eax
  433e1a:	jmp    DWORD PTR [edi-0x7cc4ff01]
  433e20:	add    BYTE PTR [ebx-0x56],dh
  433e23:	add    ch,cl
  433e25:	div    DWORD PTR [edi-0x1]
  433e28:	call   ebx
  433e2a:	inc    edx
  433e2c:	int3   
  433e2d:	jmp    FWORD PTR [edx]
  433e2f:	add    BYTE PTR [eax],al
  433e31:	in     al,0xbe
  433e33:	add    BYTE PTR [edx-0x760052a0],dh
  433e39:	cwde   
  433e3a:	call   FWORD PTR [eax-0x1]
  433e3d:	int3   
  433e3e:	mov    edx,0x971e00ff
  433e43:	int3   
  433e44:	lds    ebx,FWORD PTR [edi]
  433e46:	cmp    bh,0xff
  433e49:	ud0    ebp,DWORD PTR [edx-0x1]
  433e4d:	add    BYTE PTR [esi-0x7d],cl
  433e50:	dec    DWORD PTR [ecx-0x38e60044]
  433e56:	adc    al,BYTE PTR [eax]
  433e58:	mov    DWORD PTR [ebx-0xff4877],edx
  433e5e:	int    0xff
  433e60:	push   DWORD PTR [esi-0x1a140099]
  433e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433e67:	mov    edi,edi
  433e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433e6a:	add    BYTE PTR [eax],ch
  433e6c:	(bad)  
  433e6d:	(bad)  
  433e6e:	jmp    0xc8f0c173
  433e73:	(bad)  
  433e74:	jmp    0x43dcb3
  433e79:	aam    0x83
  433e7b:	cmp    edi,edi
  433e7d:	int3   
  433e7e:	popa   
  433e7f:	add    BYTE PTR [eax],al
  433e81:	mov    edx,esi
  433e83:	mov    DWORD PTR ds:0xffff51bd,esi
  433e89:	outs   dx,DWORD PTR ds:[esi]
  433e8a:	adc    edx,0xffffffff
  433e8d:	cmp    DWORD PTR [esi],0xffffffff
  433e90:	add    BYTE PTR [esi+0x29],ah
  433e93:	inc    DWORD PTR [edx]
  433e95:	mov    ecx,0x5100ff16
  433e9a:	and    DWORD PTR [edx+0x0],0xffffffff
  433e9e:	mov    ds:0x92cfff00,eax
  433ea3:	(bad)  
  433ea4:	call   0xc65d9e
  433ea9:	fwait
  433eaa:	mov    DWORD PTR [ecx+0x0],ebp
  433ead:	adc    edx,0x0
  433eb0:	adc    DWORD PTR [edi],0xffffffb5
  433eb3:	dec    DWORD PTR [eax+0x7d]
  433eb6:	pop    ebp
  433eb7:	(bad)  
  433eb8:	push   DWORD PTR [ecx-0x7d]
  433ebb:	(bad)  
  433ebc:	(bad)  
  433ebd:	inc    DWORD PTR [edi+edi*8]
  433ec0:	jmp    ecx
  433ec2:	sub    al,0xff
  433ec4:	xchg   ebp,eax
  433ec5:	or     eax,0x2ccff50
  433eca:	call   FWORD PTR [eax]
  433ecc:	dec    esp
  433ece:	in     al,dx
  433ecf:	inc    DWORD PTR [eax]
  433ed1:	test   al,0xe6
  433ed3:	add    BYTE PTR [ebx-0x69],bh
  433ed6:	adc    al,BYTE PTR [ebx-0x37ff9500]
  433edc:	add    BYTE PTR [eax],al
  433ede:	push   0xffffffff
  433ee0:	add    BYTE PTR [edx],cl
  433ee2:	repz call FWORD PTR [esi-0x6c]
  433ee6:	(bad)  
  433ee7:	int3   
  433ee8:	sbb    DWORD PTR [esi+0xff00],0x6b
  433eef:	inc    DWORD PTR [ebx+0x4f89c477]
  433ef5:	xor    eax,0xdeffff80
  433efa:	dec    DWORD PTR [edx-0x1]
  433efd:	int3   
  433efe:	enter  0xff00,0xa4
  433f02:	jp     0x433e8d
  433f04:	ja     0x433f04
  433f06:	rol    DWORD PTR [eax],cl
  433f08:	(bad)  
  433f09:	mov    eax,0x83ff67ff
  433f0e:	mov    esp,0x50f4ffcc
  433f13:	call   FWORD PTR [ecx]
  433f15:	cmp    DWORD PTR [edx+0x71ff89],esp
  433f1b:	inc    ecx
  433f1c:	inc    DWORD PTR [eax]
  433f1e:	xor    eax,0xfbb5ff83
  433f23:	int3   
  433f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433f25:	dec    eax
  433f26:	in     eax,0x89
  433f28:	adc    DWORD PTR [edi+0xff92ff],0x4e
  433f2f:	(bad)  
  433f30:	jmp    DWORD PTR ds:0x5bf4ff8e
  433f36:	pop    ds
  433f37:	inc    DWORD PTR [eax]
  433f39:	sbb    al,BYTE PTR [ebx+0x6983ff3d]
  433f3f:	dec    esp
  433f41:	mov    cl,0xd
  433f43:	dec    DWORD PTR [eax]
  433f45:	sub    DWORD PTR [edi+edi*8-0x77],eax
  433f49:	ins    BYTE PTR es:[edi],dx
  433f4a:	(bad)  
  433f4b:	jns    0x433f4c
  433f4d:	(bad)  
  433f4e:	cmp    bh,bh
  433f50:	push   DWORD PTR [ebp-0x66]
  433f53:	add    BYTE PTR ds:0x83ffdc6b,cl
  433f59:	pop    edx
  433f5a:	call   FWORD PTR [esi-0x1]
  433f5d:	add    DWORD PTR [edx+0x0],0x0
  433f61:	aas    
  433f62:	or     edi,edi
  433f64:	lds    edx,FWORD PTR [ecx*4-0x1]
  433f6b:	jmp    0x895f3f6f
  433f70:	add    BYTE PTR [ebx+0x76],ch
  433f73:	int3   
  433f74:	or     al,0x46
  433f76:	push   ebx
  433f77:	mov    DWORD PTR [eax],eax
  433f79:	xor    eax,0xff00f800
  433f7e:	xlat   BYTE PTR ds:[ebx]
  433f7f:	inc    DWORD PTR [ebx+0x5e00e2b1]
  433f85:	hlt    
  433f86:	mov    BYTE PTR [eax],al
  433f88:	add    dh,bh
  433f8a:	inc    DWORD PTR [ecx+ecx*4+0xcccd00]
  433f91:	data16 aas 
  433f93:	inc    DWORD PTR [eax+ebx*8]
  433f96:	dec    ebx
  433f97:	inc    DWORD PTR [eax]
  433f99:	push   0xffff19ff
  433f9e:	mov    dl,0xff
  433fa0:	call   DWORD PTR [esi]
  433fa2:	fdivr  st,st(7)
  433fa4:	mov    ebp,0xffff0201
  433fa9:	gs add dl,dl
  433fac:	add    DWORD PTR [eax],0xffffff9f
  433faf:	inc    DWORD PTR [ebx-0x5700bf5f]
  433fb5:	jmp    0x433f3c
  433fb7:	add    DWORD PTR [eax],0xffffffd4
  433fba:	call   DWORD PTR [ebx]
  433fbc:	inc    DWORD PTR [ebx+0x4d838943]
  433fc2:	fadd   QWORD PTR [eax]
  433fc4:	mov    al,ds:0xffef2c
  433fc9:	xor    eax,0x8300f1ff
  433fce:	int3   
  433fcf:	inc    DWORD PTR [eax]
  433fd1:	or     dh,al
  433fd3:	jmp    esp
  433fd5:	xor    eax,0xea0089a8
  433fda:	mov    DWORD PTR [edx],esi
  433fdc:	add    BYTE PTR [eax],al
  433fde:	cld    
  433fdf:	int3   
  433fe0:	jmp    FWORD PTR [ebx]
  433fe2:	sub    bh,bh
  433fe4:	test   al,0xd0
  433fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433fe7:	int3   
  433fe8:	add    BYTE PTR [ebp-0x7cffa87d],al
  433fee:	and    eax,0x223189ff
  433ff3:	jmp    DWORD PTR [ebx+0x58]
  433ff6:	loopne 0x433ff7
  433ff8:	xor    DWORD PTR [eax],0xffffff83
  433ffb:	or     cl,BYTE PTR [ecx-0x7cff2f01]
  434001:	mov    eax,DWORD PTR [edx-0x57eb8100]
  434007:	inc    DWORD PTR [eax]
  434009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43400a:	add    BYTE PTR [ebp+0xbcff00],dl
  434010:	add    BYTE PTR [edx-0x210a0097],bh
  434016:	ror    DWORD PTR [ecx-0x5433ec34],cl
  43401c:	inc    DWORD PTR [ebx-0x73ffffff]
  434022:	push   edx
  434023:	add    DWORD PTR [eax+0xfff887],0x24
  43402a:	and    DWORD PTR [edx],0xffffff83
  43402d:	jmp    eax
  43402f:	(bad)  
  434030:	push   DWORD PTR [edx-0x7038fff3]
  434036:	or     bh,bh
  434038:	call   DWORD PTR [ebx+eax*4-0xfff3357]
  43403f:	(bad)  
  434040:	call   DWORD PTR [esi]
  434042:	(bad)  
  434044:	or     ch,BYTE PTR [edi]
  434046:	xor    eax,0xffad00ff
  43404b:	cli    
  43404c:	add    bh,bh
  43404e:	push   edi
  43404f:	add    bh,bh
  434051:	fld    DWORD PTR ss:[ebx+0x1de42a]
  434058:	jmp    FWORD PTR [ebx]
  43405a:	add    ch,dl
  43405c:	add    bh,bh
  43405e:	and    BYTE PTR [ecx+0x687fff],cl
  434064:	arpl   WORD PTR [eax+ebp*8],dx
  434067:	int3   
  434068:	cmp    DWORD PTR [esi+0x0],0x6a
  43406c:	add    bh,bh
  43406e:	in     eax,0x0
  434070:	call   FWORD PTR [ecx+0x5f]
  434073:	(bad)  
  434074:	jmp    0x1428ba8
  434079:	aaa    
  43407a:	jmp    FWORD PTR [esi]
  43407c:	add    BYTE PTR [eax],al
  43407e:	and    eax,DWORD PTR [ebx+0xb46100]
  434084:	gs mov ah,0x25
  434087:	dec    DWORD PTR [ecx+0x96899c]
  43408d:	inc    DWORD PTR [eax+eax*1-0x77]
  434091:	or     eax,0x269dff67
  434096:	sub    DWORD PTR [ecx-0x2bff7701],ecx
  43409c:	dec    esp
  43409e:	mov    eax,ds:0x7b4bffff
  4340a3:	add    cl,al
  4340a5:	imul   edi,DWORD PTR [ebx],0xff2dff83
  4340ab:	adc    edi,edi
  4340ad:	add    BYTE PTR [ebx],al
  4340af:	add    BYTE PTR [eax],al
  4340b1:	sar    DWORD PTR [eax-0x1],cl
  4340b4:	jne    0x4340bd
  4340b6:	test   DWORD PTR [eax],eax
  4340b8:	int3   
  4340b9:	leave  
  4340ba:	dec    DWORD PTR [ecx-0x76017c77]
  4340c0:	dec    edi
  4340c2:	scas   eax,DWORD PTR es:[edi]
  4340c3:	mov    DWORD PTR [edx+ebp*2+0x12ffff7b],edx
  4340ca:	add    BYTE PTR [ebx+0x0],dl
  4340cd:	add    BYTE PTR [eax+0x75e6ff89],cl
  4340d3:	cmp    DWORD PTR [edi+ebx*1+0x23],0xffffffff
  4340d8:	push   DWORD PTR [edi-0x1]
  4340db:	inc    esp
  4340dc:	(bad)  
  4340dd:	jmp    DWORD PTR [edi+edi*8-0x7665dd01]
  4340e4:	dec    esp
  4340e5:	scas   al,BYTE PTR es:[edi]
  4340e6:	sub    eax,0xffe68383
  4340eb:	popa   
  4340ec:	int3   
  4340ed:	inc    DWORD PTR [esi+0x0]
  4340f0:	mov    DWORD PTR [ebp-0x78],eax
  4340f3:	call   FWORD PTR [esi+0xffbf8a]
  4340f9:	popa   
  4340fa:	push   DWORD PTR [edx]
  4340fc:	add    BYTE PTR [ecx-0x3c7c008f],cl
  434102:	xchg   ebx,eax
  434103:	dec    DWORD PTR [eax+0x837aca]
  434109:	mov    DWORD PTR [eax],eax
  43410b:	add    eax,DWORD PTR [ebx+0x3400]
  434111:	and    ebx,DWORD PTR [ebp-0x276ddf01]
  434117:	add    bh,bh
  434119:	stc    
  43411a:	add    ecx,0xffffffff
  43411d:	call   DWORD PTR [edi+0x1b6e8383]
  434123:	add    bh,al
  434125:	gs cwde 
  434127:	add    bh,bh
  434129:	jecxz  0x43412a
  43412b:	cs (bad) 
  43412d:	jmp    DWORD PTR [ecx-0x1]
  434130:	(bad)  
  434131:	cmp    eax,0x16b4ffb4
  434136:	sar    bh,0x0
  434139:	cmp    eax,DWORD PTR [eax]
  43413b:	jmp    0x43413d
  43413d:	jmp    FWORD PTR [eax+0x117ffff]
  434143:	and    edx,0x4
  434146:	pop    eax
  434147:	inc    DWORD PTR [eax]
  434149:	xlat   BYTE PTR ds:[ebx]
  43414a:	add    bh,ch
  43414c:	(bad)  
  43414d:	inc    DWORD PTR [edi+edi*8-0xaadf01]
  434154:	mov    esi,0x3222
  434159:	jg     0x43415a
  43415b:	add    BYTE PTR [eax],0x83
  43415e:	(bad)  
  43415f:	inc    DWORD PTR [ebx+0x40008e3e]
  434165:	or     eax,0x68cc0066
  43416a:	(bad)  
  43416b:	sti    
  43416c:	add    bh,bh
  43416e:	jne    0x434170
  434170:	call   DWORD PTR [edi+0x4da98944]
  434176:	mov    bh,0xcc
  434178:	add    BYTE PTR [ebx+0xffc383],ah
  43417e:	inc    edi
  43417f:	(bad)  
  434180:	inc    DWORD PTR [eax+0x58]
  434183:	xor    DWORD PTR ds:0xff002842,0x1
  43418a:	jmp    DWORD PTR [esi-0x1]
  43418d:	add    BYTE PTR [ebx],cl
  43418f:	mov    edi,edi
  434191:	das    
  434192:	fdivp  st(7),st
  434194:	pop    edi
  434195:	adc    esp,ebp
  434197:	add    DWORD PTR [ebx-0xdff9c],0xffffff83
  43419e:	inc    ebp
  43419f:	mov    edi,edi
  4341a1:	(bad)  
  4341a2:	mov    dl,0xff
  4341a4:	outs   dx,DWORD PTR ds:[esi]
  4341a5:	enter  0x83e1,0x89
  4341a9:	out    dx,al
  4341aa:	call   DWORD PTR ds:0x7dffcc
  4341b0:	add    BYTE PTR [ebx+0x3d4affae],al
  4341b6:	jge    0x4341b7
  4341b8:	call   FWORD PTR ds:0xcc00d383
  4341be:	in     eax,0xff
  4341c0:	add    cl,dh
  4341c2:	int    0x83
  4341c4:	or     DWORD PTR [ebx+edx*4-0x761bff34],0xffffffc4
  4341cc:	int3   
  4341cd:	add    BYTE PTR [ecx+ecx*4-0x53901],dl
  4341d4:	icebp  
  4341d5:	in     eax,dx
  4341d6:	xor    eax,0x895200ff
  4341db:	ds add bh,bh
  4341de:	mov    cl,0xff
  4341e0:	call   FWORD PTR [ecx+0x7c]
  4341e3:	add    ebp,0xffffffda
  4341e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341e7:	inc    DWORD PTR [eax]
  4341e9:	xchg   esi,eax
  4341ea:	inc    DWORD PTR [ecx-0x58ff7d]
  4341f0:	add    BYTE PTR [ecx-0x2005007e],bh
  4341f6:	sbb    edi,edi
  4341f8:	jmp    FWORD PTR [ecx]
  4341fa:	add    BYTE PTR [eax+eax*1],ch
  4341fd:	call   DWORD PTR [ecx]
  4341ff:	add    BYTE PTR [ebx-0x7d7c7ea0],al
  434205:	cmp    dl,BYTE PTR [edi+edi*8-0x1]
  434209:	jns    0x43420a
  43420b:	mov    edx,0xffc38383
  434210:	int3   
  434211:	or     BYTE PTR [esi-0x34],0xa6
  434215:	inc    esp
  434216:	sub    bh,bh
  434218:	dec    DWORD PTR [eax+0x0]
  43421b:	dec    esp
  43421c:	int3   
  43421d:	jmp    eax
  43421f:	inc    DWORD PTR [eax]
  434221:	(bad)  
  434222:	push   ebx
  434223:	dec    DWORD PTR [ecx]
  434225:	xchg   ebp,eax
  434226:	mov    bl,0x0
  434228:	jmp    DWORD PTR [ecx-0x1]
  43422b:	out    0x0,eax
  43422d:	or     DWORD PTR [ecx-0x1],0xffffffff
  434231:	in     al,0x4c
  434233:	add    BYTE PTR [eax],ah
  434235:	inc    eax
  434236:	xor    eax,0x83a70000
  43423b:	cdq    
  43423c:	add    bh,bh
  43423e:	push   esp
  43423f:	int3   
  434240:	add    BYTE PTR [edi+0x69],ch
  434243:	(bad)  
  434244:	aas    
  434245:	mov    esi,0x8b83ff2b
  43424a:	call   DWORD PTR [eax-0x33f8ff34]
  434250:	add    BYTE PTR [edx-0x1de4ffef],dh
  434256:	ss cmp edi,0xffffffb0
  43425a:	sbb    DWORD PTR [ebp+0x0],0xffffffff
  43425e:	mov    ebx,0xe068ffff
  434263:	add    BYTE PTR [edi],ch
  434265:	cmp    dl,ch
  434267:	(bad)  
  434268:	call   DWORD PTR [eax]
  43426a:	adc    DWORD PTR [eax-0x1],0xffffffff
  43426e:	add    BYTE PTR [eax],al
  434270:	or     DWORD PTR [ecx+0x5d],0xffffffff
  434274:	das    
  434275:	dec    esi
  434276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434277:	mov    edi,edi
  434279:	jl     0x43427a
  43427b:	(bad)  
  43427c:	inc    DWORD PTR [ebx+0x2083ffd7]
  434282:	dec    eax
  434283:	add    BYTE PTR [edx-0x76006cd3],al
  434289:	je     0x43428a
  43428b:	jecxz  0x434216
  43428d:	add    BYTE PTR [ecx+0x62f3cc89],ch
  434293:	add    BYTE PTR [ebp+0x38],cl
  434296:	ja     0x434297
  434298:	mov    DWORD PTR [ebx+eax*4-0x6f],esi
  43429c:	inc    DWORD PTR [eax]
  43429e:	loop   0x434229
  4342a0:	add    BYTE PTR [ebp-0x5d0400e8],ch
  4342a6:	cwde   
  4342a7:	mov    DWORD PTR [eax],eax
  4342a9:	xchg   ecx,eax
  4342aa:	call   FWORD PTR [ebx+eax*4+0xff6e89]
  4342b1:	and    ebx,DWORD PTR [ebp-0x34]
  4342b4:	mov    dh,0x43
  4342b6:	(bad)  
  4342b7:	(bad)  
  4342b8:	dec    edi
  4342ba:	mov    ebx,eax
  4342bc:	inc    DWORD PTR [ebx-0x2d0000ee]
  4342c2:	xchg   esp,eax
  4342c3:	jmp    DWORD PTR [ebx+esi*4]
  4342c6:	sub    al,0x0
  4342c8:	add    BYTE PTR [edi+0x0],cl
  4342cb:	jmp    0xcd2b43cf
  4342d0:	add    BYTE PTR [ecx-0x5e90ff19],ch
  4342d6:	or     BYTE PTR [eax],al
  4342d8:	add    BYTE PTR [edi+edi*8-0x21760043],dl
  4342df:	add    bh,bh
  4342e1:	xchg   edi,eax
  4342e2:	push   ebp
  4342e3:	inc    DWORD PTR [ecx-0x77]
  4342e6:	pop    eax
  4342e7:	mov    edi,edi
  4342e9:	jmp    0x84431bee
  4342ee:	fwait
  4342ef:	inc    DWORD PTR [eax]
  4342f1:	jmp    0xffce:0x76330015
  4342f8:	call   FWORD PTR [ebx+0x2dff]
  4342fe:	pop    ecx
  4342ff:	(bad)  
  434300:	inc    DWORD PTR [edx+0x3063ffba]
  434306:	and    esp,ecx
  434308:	call   DWORD PTR [ecx+0x0]
  43430b:	retf   
  43430c:	cmp    edi,0xffffffb1
  43430f:	add    BYTE PTR [eax],al
  434311:	mov    ah,BYTE PTR [edx]
  434313:	cmp    DWORD PTR [ecx-0x2656],0xffffffb8
  43431a:	add    cl,bl
  43431c:	add    BYTE PTR [eax],al
  43431e:	mov    ch,0xff
  434320:	add    BYTE PTR [ebx+0x6e4bff6d],cl
  434326:	loopne 0x434328
  434328:	int3   
  434329:	jo     0x4342f7
  43432b:	(bad)  
  43432c:	int3   
  43432d:	inc    DWORD PTR ds:0x5f1589ff
  434333:	add    BYTE PTR [edx-0x33ffa751],dh
  434339:	mov    ebp,0xcc005dff
  43433e:	dec    DWORD PTR cs:[ecx-0xa0022c4]
  434345:	sbb    al,0x5e
  434347:	add    ah,cl
  434349:	and    al,0xff
  43434b:	(bad)  
  43434c:	inc    DWORD PTR [eax]
  43434e:	inc    eax
  43434f:	add    bh,bh
  434351:	and    dh,BYTE PTR [edi+edi*8-0x76fa75]
  434358:	dec    DWORD PTR [eax-0x77]
  43435b:	cmp    bh,0xff
  43435e:	and    edi,edi
  434360:	(bad)  
  434361:	stc    
  434362:	xlat   BYTE PTR ds:[ebx]
  434363:	int3   
  434364:	inc    eax
  434365:	inc    esp
  434366:	push   ebx
  434367:	add    BYTE PTR [eax],al
  434369:	(bad)  
  43436a:	inc    edi
  43436c:	(bad)  
  43436d:	(bad)  
  43436e:	(bad)  
  434370:	add    BYTE PTR [esi-0x4f],bl
  434373:	dec    DWORD PTR [ebp-0x1c]
  434376:	mov    edi,0x1383cc
  43437b:	int3   
  43437c:	int3   
  43437d:	int3   
  43437e:	push   es
  43437f:	inc    DWORD PTR [eax]
  434381:	add    edx,DWORD PTR [edx]
  434383:	add    BYTE PTR [edx+eax*1+0x60ff8364],bl
  43438a:	mov    DWORD PTR [edi+edi*8],eax
  43438d:	dec    DWORD PTR [edi+edi*8-0x7ce6ec7d]
  434394:	retf   
  434395:	push   cs
  434396:	fcmove st,st(4)
  434398:	call   FWORD PTR ds:0x83ff8fcc
  43439e:	push   ds
  43439f:	cmp    edi,0xffffffc8
  4343a2:	imul   eax,DWORD PTR [eax],0x42
  4343a5:	into   
  4343a6:	mov    BYTE PTR [eax],0xcc
  4343a9:	xor    bh,bh
  4343ab:	std    
  4343ac:	add    bh,bh
  4343ae:	push   ds
  4343af:	add    bh,bh
  4343b1:	and    ecx,ecx
  4343b3:	dec    ecx
  4343b5:	lock and BYTE PTR [eax],al
  4343b8:	int3   
  4343b9:	mov    bh,0xcc
  4343bb:	lahf   
  4343bc:	dec    esp
  4343be:	mov    ebp,0x5ff500ff
  4343c3:	jmp    FWORD PTR [eiz*8-0x2a00ffeb]
  4343ca:	int3   
  4343cb:	xchg   ecx,eax
  4343cc:	add    BYTE PTR [ebx-0x800ffbd],al
  4343d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4343d3:	xor    DWORD PTR [edi],0xffffffc7
  4343d6:	sbb    bh,bh
  4343d8:	int3   
  4343d9:	outs   dx,BYTE PTR ds:[esi]
  4343da:	add    BYTE PTR [edi+0x0],dh
  4343dd:	add    BYTE PTR [edx-0x1d4cff7d],al
  4343e3:	(bad)  
  4343e4:	mov    esp,0xffff26f0
  4343e9:	inc    esp
  4343ea:	call   FWORD PTR [ecx]
  4343ec:	add    ah,cl
  4343ee:	(bad)  
  4343ef:	inc    DWORD PTR [eax]
  4343f1:	mov    eax,ds:0x3a848314
  4343f6:	cmp    BYTE PTR [ecx-0x7000c801],cl
  4343fc:	inc    DWORD PTR [eax]
  4343fe:	cmp    bh,0x0
  434401:	mov    ch,BYTE PTR [edi-0x34]
  434404:	ror    eax,0x4e
  434407:	(bad)  
  434408:	(bad)  
  434409:	mov    ecx,0xffffef00
  43440e:	scas   eax,DWORD PTR es:[edi]
  43440f:	add    bh,bh
  434411:	push   ebx
  434412:	(bad)  
  434414:	pop    ebp
  434415:	div    ebx
  434417:	(bad)  
  434418:	call   FWORD PTR [ebp-0x33b800]
  43441e:	mov    edx,0x71bdff00
  434423:	push   DWORD PTR [eax+0xff887e]
  434429:	xchg   edi,edi
  43442b:	(bad)  
  43442d:	(bad)  
  43442e:	jge    0x4343b3
  434430:	push   ebp
  434432:	jmp    0xffff:0x56532500
  434439:	fdiv   st(7),st
  43443b:	cld    
  43443c:	inc    DWORD PTR [ebx+0x37ffff19]
  434442:	adc    eax,DWORD PTR [eax]
  434444:	push   ebp
  434445:	mov    ds:0xc0ffffd0,eax
  43444a:	xor    DWORD PTR [edi],0xffffffff
  43444d:	(bad)  
  43444e:	js     0x43444f
  434450:	and    DWORD PTR [esi+0x5f],0x0
  434454:	xchg   ebx,eax
  434455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434456:	cmp    eax,0x89ae0000
  43445b:	jbe    0x4343e0
  43445d:	mov    DWORD PTR [ecx-0xaceff01],edi
  434463:	int3   
  434464:	pop    edx
  434465:	cmp    BYTE PTR [ebp-0x1],al
  434468:	call   FWORD PTR [ebx-0x333401]
  43446e:	test   DWORD PTR [ebx-0x760f5b01],0x2f5549
  434478:	(bad)  
  434479:	sti    
  43447a:	call   FWORD PTR [esi+0x0]
  43447d:	add    BYTE PTR [ebx+0x4a4affff],dl
  434483:	sub    DWORD PTR ds:0xffb6b9,0x72
  43448a:	int3   
  43448b:	push   0x89b500cc
  434490:	jmp    ebp
  434492:	xor    eax,0x210c5dff
  434497:	add    BYTE PTR [ecx+0xa08390],cl
  43449d:	int3   
  43449e:	xchg   ebp,eax
  43449f:	add    DWORD PTR [eax],0x42
  4344a2:	push   es
  4344a3:	add    BYTE PTR [eax],ah
  4344a5:	sub    eax,0x3f00ff4a
  4344aa:	jmp    DWORD PTR [edi-0x7d]
  4344ad:	dec    DWORD PTR [eax-0x1]
  4344b0:	add    BYTE PTR [edi-0x688400a7],dh
  4344b6:	(bad)  
  4344b9:	or     bh,bh
  4344bb:	or     eax,DWORD PTR [eax]
  4344bd:	add    BYTE PTR [esi+0x1447ffff],cl
  4344c3:	push   eax
  4344c5:	les    esi,FWORD PTR [edx-0x97337d]
  4344cb:	or     DWORD PTR [eax],eax
  4344cd:	add    BYTE PTR [edx],cl
  4344cf:	add    bh,bh
  4344d1:	sub    DWORD PTR [edx-0x1],eax
  4344d4:	jne    0x43453c
  4344d6:	icebp  
  4344d7:	cmp    edi,0x70
  4344da:	add    cl,ah
  4344dc:	inc    DWORD PTR [ebx+0x20083ff]
  4344e2:	mov    bh,0xff
  4344e4:	pop    ss
  4344e5:	mov    bl,0xfe
  4344e7:	add    BYTE PTR [ebx-0x48336a],al
  4344ed:	call   esp
  4344ef:	inc    DWORD PTR [eax]
  4344f1:	dec    eax
  4344f2:	pop    edx
  4344f3:	or     DWORD PTR [eax+edi*4],0xffffffd8
  4344f7:	int3   
  4344f8:	mov    DWORD PTR [edx],ebp
  4344fa:	add    BYTE PTR [eax],dh
  4344fc:	(bad)  
  4344fd:	(bad)  
  4344fe:	cmp    BYTE PTR [eax],al
  434500:	inc    esi
  434502:	push   ebx
  434503:	inc    DWORD PTR [ebp-0x1b82]
  434509:	ret    
  43450a:	add    BYTE PTR [esi-0x1],bh
  43450d:	sub    DWORD PTR [edi+0x4f89ff],0xffffffff
  434514:	into   
  434515:	cmc    
  434516:	outs   dx,BYTE PTR ds:[esi]
  434517:	add    ah,cl
  434519:	mov    WORD PTR [eax],es
  43451b:	jae    0x43451c
  43451d:	add    BYTE PTR [ebx+0x0],ch
  434520:	jmp    edx
  434522:	xchg   edi,edi
  434524:	and    DWORD PTR [esp+ecx*8-0x1],esp
  434528:	jmp    FWORD PTR [esi-0x1]
  43452b:	int3   
  43452c:	(bad)  
  43452d:	(bad)  
  43452e:	call   0x54441232
  434533:	add    DWORD PTR [edx+0x33],0xffffffda
  434537:	cmp    edi,0x13
  43453a:	cmp    edi,0xffffffff
  43453d:	int3   
  43453e:	daa    
  43453f:	inc    DWORD PTR [eax]
  434541:	cld    
  434542:	ror    esp,cl
  434544:	push   ds
  434545:	inc    ebx
  434546:	lds    eax,FWORD PTR [eax]
  434548:	add    BYTE PTR [edi-0xffa977],ch
  43454e:	jmp    0x9fd9ce53
  434553:	jmp    DWORD PTR [edx]
  434555:	std    
  434556:	in     al,0xff
  434558:	add    BYTE PTR [ebp+0x8937ff],bl
  43455e:	sub    eax,0x8025cc00
  434563:	add    BYTE PTR [esi],bl
  434565:	ja     0x43453d
  434567:	cmp    edi,0xffffffa5
  43456a:	push   DWORD PTR [edi-0x76e3ff01]
  434570:	push   DWORD PTR [ebx+0x37]
  434573:	dec    DWORD PTR [eax]
  434575:	jae    0x43450c
  434577:	(bad)  
  434578:	inc    DWORD PTR [ebx-0x77]
  43457b:	inc    WORD PTR [eax]
  43457e:	mov    esi,0x7d528383
  434583:	add    al,ah
  434585:	mov    edi,DWORD PTR [esi-0x5f0000]
  43458b:	pop    esi
  43458c:	add    bh,bh
  43458e:	clc    
  43458f:	dec    esp
  434591:	mov    ecx,0xd2178386
  434596:	pushf  
  434597:	dec    DWORD PTR [ecx-0x7c8500d6]
  43459d:	call   FWORD PTR [ebp-0x7d]
  4345a0:	add    BYTE PTR [eax-0x5a],bl
  4345a3:	push   esp
  4345a5:	retf   
  4345a6:	retf   
  4345a7:	cmp    edi,0xfffffff8
  4345aa:	int3   
  4345ab:	add    eax,DWORD PTR [ebx+0xffbcff]
  4345b1:	or     eax,0xd2e10064
  4345b6:	les    eax,FWORD PTR [eax]
  4345b8:	mov    esp,ebx
  4345ba:	add    ah,bl
  4345bc:	inc    DWORD PTR [ebx+0x1cffff46]
  4345c2:	mov    edi,0x9ba3e83
  4345c7:	dec    esp
  4345c9:	mov    WORD PTR [eax],es
  4345cb:	sub    al,0x83
  4345cd:	call   DWORD PTR [edx-0x3fe47c01]
  4345d3:	adc    edi,0xffffffb3
  4345d6:	xlat   BYTE PTR ds:[ebx]
  4345d7:	dec    DWORD PTR [ecx-0x34ff9b]
  4345dd:	add    dl,ah
  4345df:	int3   
  4345e0:	add    BYTE PTR [eax-0x45],cl
  4345e3:	push   DWORD PTR [ecx]
  4345e5:	jge    0x434580
  4345e7:	mov    edi,edi
  4345e9:	mov    edi,0x83003fff
  4345ee:	pop    ebp
  4345ef:	int3   
  4345f0:	add    BYTE PTR [esi-0x29],ch
  4345f3:	dec    esi
  4345f5:	loope  0x434661
  4345f7:	dec    DWORD PTR [ecx-0xd20034]
  4345fd:	call   ecx
  4345ff:	cmp    edi,0xffffffef
  434602:	enter  0x6a83,0x3
  434606:	out    dx,eax
  434607:	dec    esp
  434609:	ja     0x43460a
  43460b:	ret    0xcccc
  43460e:	dec    edi
  43460f:	add    bh,bh
  434611:	hlt    
  434612:	loope  0x434614
  434614:	jge    0x434660
  434616:	mov    ds:0x38ffff,al
  43461b:	pop    ebp
  43461c:	dec    esp
  43461e:	and    bh,bh
  434620:	add    DWORD PTR [ebp+0x75],0xffffffcc
  434624:	lahf   
  434625:	push   ss
  434626:	dec    ebx
  434627:	add    bh,bh
  434629:	or     edi,edi
  43462b:	push   ebp
  43462c:	(bad)  
  43462d:	call   DWORD PTR [ebx+0x4ce89ff]
  434633:	inc    DWORD PTR [ecx+ecx*8+0x1a]
  434637:	add    BYTE PTR [eax],al
  434639:	push   edx
  43463a:	jmp    FWORD PTR [eax+eax*1]
  43463d:	int3   
  43463e:	popf   
  43463f:	(bad)  
  434640:	(bad)  
  434641:	jl     0x434610
  434643:	add    BYTE PTR [esp+edx*8+0x62000043],dh
  43464a:	push   DWORD PTR [eax-0x1]
  43464d:	push   DWORD PTR [edx-0x1]
  434650:	add    BYTE PTR [ebx-0x12a4007f],ah
  434656:	stos   DWORD PTR es:[edi],eax
  434657:	inc    DWORD PTR [ebx-0x760300d8]
  43465d:	add    BYTE PTR [ebp-0x1],bh
  434660:	mov    DWORD PTR [edx],ecx
  434662:	jl     0x434663
  434664:	adc    BYTE PTR [ecx],ch
  434666:	aaa    
  434667:	add    BYTE PTR [eax],al
  434669:	xchg   ebp,eax
  43466a:	push   edx
  43466c:	(bad)  
  43466d:	jmp    DWORD PTR [ebx+0x95dff00]
  434673:	jmp    DWORD PTR [ebp+0xcc771b]
  434679:	and    eax,0xff00bf89
  43467e:	popa   
  43467f:	(bad)  
  434680:	(bad)  
  434681:	js     0x434656
  434683:	jmp    FWORD PTR [eax-0x2fb0]
  434689:	cmp    edi,0xb489ffb8
  43468f:	(bad)  
  434690:	jmp    ebp
  434692:	mov    edi,0xb61a04ff
  434697:	add    BYTE PTR [eax],al
  434699:	(bad)  
  43469a:	dec    DWORD PTR [eax-0xf80034]
  4346a0:	inc    DWORD PTR [eax-0x5a537ceb]
  4346a6:	push   eax
  4346a7:	add    BYTE PTR [eax],al
  4346a9:	add    al,0xff
  4346ab:	cmp    DWORD PTR [ebx-0xff8a01],eax
  4346b1:	stos   BYTE PTR es:[edi],al
  4346b2:	mov    eax,ds:0x3ec6d00
  4346b7:	dec    DWORD PTR [ecx-0x33aaff62]
  4346bd:	add    cl,dh
  4346bf:	add    BYTE PTR [eax],al
  4346c1:	gs mov edi,edi
  4346c4:	cdq    
  4346c5:	in     eax,dx
  4346c6:	jae    0x434694
  4346c8:	add    ch,bh
  4346ca:	jmp    FWORD PTR [eax-0x367c01]
  4346d0:	or     esi,0xffffff9e
  4346d3:	jmp    ecx
  4346d5:	dec    esi
  4346d6:	lahf   
  4346d7:	(bad)  
  4346d8:	jmp    FWORD PTR [ecx-0x7d]
  4346db:	imul   edi,edi,0xffa689
  4346e1:	aad    0xb4
  4346e3:	jmp    DWORD PTR [ebp-0x2f]
  4346e6:	sahf   
  4346e7:	mov    edi,edi
  4346e9:	mov    edi,0xffff9dff
  4346ee:	mov    eax,0xc60effff
  4346f3:	or     DWORD PTR [edx],0x5d
  4346f6:	std    
  4346f7:	add    bh,bh
  4346f9:	loopne 0x4346c7
  4346fb:	int    0x89
  4346fd:	add    BYTE PTR [ebx],ah
  4346ff:	add    BYTE PTR [eax],al
  434701:	adc    cl,BYTE PTR [esi+0x616a90ff]
  434707:	(bad)  
  434708:	inc    esp
  43470a:	jmp    FWORD PTR [ebp-0x7d]
  43470d:	cmp    DWORD PTR [eax+0x4d4cff00],0xffffffff
  434714:	push   ebx
  434715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434716:	ja     0x434717
  434718:	add    BYTE PTR [esi+0x0],cl
  43471b:	sti    
  43471c:	inc    DWORD PTR [eax]
  43471e:	daa    
  43471f:	add    ah,cl
  434721:	cmp    BYTE PTR [ebx+eax*4],dh
  434724:	fstp   DWORD PTR [edi+ecx*4]
  434727:	int3   
  434728:	add    BYTE PTR [edx],dl
  43472a:	or     DWORD PTR [edx+0x0],0x0
  43472e:	scas   eax,DWORD PTR es:[edi]
  43472f:	inc    DWORD PTR [eax]
  434731:	push   es
  434732:	daa    
  434733:	inc    DWORD PTR [ebp-0xff63c4]
  434739:	dec    ebx
  43473a:	add    ah,dl
  43473c:	add    DWORD PTR [eax],0xffffffa5
  43473f:	int3   
  434740:	(bad)  
  434741:	sti    
  434742:	addr16 xor edi,0x3
  434746:	lahf   
  434747:	inc    DWORD PTR [eax]
  434749:	push   es
  43474a:	xor    DWORD PTR [edx-0x7d],0x0
  43474e:	ja     0x4346d9
  434750:	and    DWORD PTR [esp+esi*2],0xffffffcc
  434754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434755:	add    al,0x91
  434757:	inc    DWORD PTR [eax]
  434759:	pushf  
  43475a:	add    bh,bl
  43475c:	mov    edi,edi
  43475e:	push   ds
  43475f:	int3   
  434760:	jmp    FWORD PTR [esi]
  434762:	sub    al,0x0
  434764:	dec    esp
  434765:	shl    DWORD PTR [edi],1
  434767:	mov    DWORD PTR [ebx-0xdf7c60],eax
  43476d:	xor    DWORD PTR [ebx+0x0],0xffffff89
  434771:	dec    ecx
  434772:	test   eax,0x9165d8ff
  434777:	(bad)  
  434778:	(bad)  
  434779:	cmp    al,BYTE PTR [ebx-0x4100ff3f]
  43477f:	int3   
  434780:	adc    DWORD PTR ds:0x14730076,0xffffffa3
  434787:	add    DWORD PTR [ebx+0x8b005c],0xffffffff
  43478e:	jb     0x43478f
  434790:	push   esi
  434792:	add    al,0xff
  434794:	shr    DWORD PTR [ebx+0x43],0xff
  434798:	xor    DWORD PTR [edx-0xfffc00],0xfffffffd
  43479f:	int3   
  4347a0:	push   DWORD PTR [edx-0x66a33b0]
  4347a6:	xor    edi,edi
  4347a8:	inc    DWORD PTR [esi-0x4101]
  4347ae:	enter  0xff00,0xeb
  4347b2:	mov    BYTE PTR [ebx-0x33e7f475],0x0
  4347b9:	pusha  
  4347ba:	call   FWORD PTR [eax+eax*1-0x1]
  4347be:	cmp    eax,0x844eff83
  4347c3:	add    BYTE PTR [edx],bl
  4347c5:	pop    ecx
  4347c6:	ss (bad) 
  4347c8:	jmp    FWORD PTR [edi+edi*8]
  4347cb:	push   esp
  4347cc:	inc    DWORD PTR [eax]
  4347ce:	nop
  4347cf:	int3   
  4347d0:	(bad)  
  4347d1:	cmp    al,0x54
  4347d3:	push   DWORD PTR [esi+0x81c7]
  4347d9:	cmp    eax,DWORD PTR [ebx+0xe0083fc]
  4347df:	cmp    edi,0xfffffff0
  4347e2:	pop    ecx
  4347e3:	inc    eax
  4347e5:	xchg   edx,eax
  4347e6:	sub    eax,DWORD PTR [ebx+0x5c8355cc]
  4347ec:	int3   
  4347ed:	call   FWORD PTR [ebp+0x1337ffff]
  4347f3:	jmp    DWORD PTR [ebp+eax*1-0x24000034]
  4347fa:	int3   
  4347fb:	ret    0xffff
  4347fe:	add    al,BYTE PTR [eax]
  434800:	jmp    FWORD PTR [edi+0x9]
  434803:	add    BYTE PTR [edx+ebx*4+0x7bffff69],cl
  43480a:	xor    DWORD PTR [esi-0x34],0xffffffff
  43480e:	sub    al,0xcc
  434810:	sub    DWORD PTR [edx+0x750affbd],0xffffffac
  434817:	inc    DWORD PTR [eax]
  434819:	ja     0x43481a
  43481b:	cdq    
  43481c:	add    bh,bh
  43481e:	jns    0x4347a9
  434820:	inc    ebx
  434822:	mov    ds:0xfea64bff,al
  434827:	add    DWORD PTR [eax],0x13
  43482a:	(bad)  
  43482b:	in     eax,dx
  43482c:	add    bh,bh
  43482e:	gs add bh,bh
  434831:	dec    eax
  434832:	retf   0x1ff
  434835:	call   0x5a43d1b7
  43483a:	push   DWORD PTR [esi]
  43483c:	mov    DWORD PTR [ebx+0x32008355],eax
  434842:	pop    ebx
  434843:	(bad)  
  434844:	jg     0x4348b5
  434846:	stos   BYTE PTR es:[edi],al
  434847:	(bad)  
  434848:	call   DWORD PTR [edi-0x34]
  43484b:	sahf   
  43484c:	add    bh,bh
  43484e:	scas   al,BYTE PTR es:[edi]
  43484f:	inc    DWORD PTR [eax]
  434851:	je     0x43483f
  434853:	cmp    DWORD PTR [esp+edx*8+0x7],0xffffffcc
  434858:	add    bh,ah
  43485a:	cmp    ecx,0xffffffff
  43485d:	dec    DWORD PTR [ebp-0x1]
  434860:	add    BYTE PTR [ecx+esi*1],dh
  434863:	int3   
  434864:	pop    eax
  434865:	push   0xaff0035
  43486a:	add    ch,bl
  43486c:	(bad)  
  43486d:	jmp    DWORD PTR [ecx]
  43486f:	inc    DWORD PTR [ebx+0x540078b8]
  434875:	out    dx,eax
  434876:	mov    edi,?
  434878:	add    BYTE PTR [ebp-0x7d],dl
  43487b:	in     al,dx
  43487c:	add    bh,bh
  43487e:	xor    al,BYTE PTR [eax]
  434880:	jmp    FWORD PTR [edx+0x51db83bf]
  434886:	pop    ss
  434887:	add    bh,bh
  434889:	in     eax,0xff
  43488b:	sbb    ecx,DWORD PTR [ecx+0xff23ff]
  434891:	push   es
  434892:	mov    esi,0x125e4fff
  434897:	inc    DWORD PTR [eax]
  434899:	and    al,0xff
  43489b:	cli    
  43489c:	(bad)  
  43489d:	(bad)  
  43489e:	mov    esi,0xa051ffff
  4348a3:	call   FWORD PTR [edx+0xffc231]
  4348a9:	add    BYTE PTR cs:[edi],bl
  4348ac:	(bad)  
  4348ad:	push   DWORD PTR [ecx]
  4348af:	add    BYTE PTR [eax],al
  4348b1:	movzx  eax,BYTE PTR [eax]
  4348b4:	nop
  4348b5:	push   ecx
  4348b6:	add    eax,0xa2ffff
  4348bb:	mov    dh,0xff
  4348bd:	add    BYTE PTR [ecx],dh
  4348bf:	inc    DWORD PTR [eax]
  4348c1:	fsubr  st(1),st
  4348c3:	add    ah,bh
  4348c5:	xlat   BYTE PTR ds:[ebx]
  4348c6:	lods   eax,DWORD PTR ds:[esi]
  4348c7:	(bad)  
  4348c8:	jmp    FWORD PTR [ebp-0xc934]
  4348ce:	idiv   edi
  4348d0:	sbb    ebx,0xffffffa5
  4348d3:	jmp    FWORD PTR [ecx+0x4c]
  4348d6:	fdiv   st(7),st
  4348d8:	(bad)  
  4348d9:	std    
  4348da:	call   DWORD PTR [eax+eax*1-0xffbd34]
  4348e1:	icebp  
  4348e2:	loopne 0x4348e3
  4348e4:	adc    eax,0xff00f30f
  4348e9:	dec    ebx
  4348ea:	add    BYTE PTR [edi+edi*8+0x0],ch
  4348ee:	add    BYTE PTR [eax],0x83
  4348f1:	cwde   
  4348f2:	xchg   edi,eax
  4348f3:	mov    DWORD PTR [edx],esi
  4348f5:	hlt    
  4348f6:	call   0xd3:0x868900
  4348fd:	call   FWORD PTR [eax+eax*1]
  434900:	dec    DWORD PTR [edi]
  434902:	pop    eax
  434903:	call   DWORD PTR [edx-0xae25]
  434909:	sar    edi,1
  43490b:	push   esp
  43490c:	inc    DWORD PTR [eax]
  43490e:	cmc    
  43490f:	add    ah,cl
  434911:	call   0x1e254950
  434916:	mov    cl,0x0
  434918:	push   DWORD PTR [ebx+0xff1700]
  43491e:	in     al,dx
  43491f:	add    bh,bh
  434921:	add    eax,0xd475ff15
  434926:	or     eax,0x83d8ff00
  43492b:	mov    bh,0xff
  43492d:	xor    DWORD PTR [edi+edi*8+0xe6f9ff],0xffffffbe
  434935:	cmp    al,0x27
  434937:	inc    DWORD PTR [ebx-0x7c26ffca]
  43493d:	push   DWORD PTR ds:0x71fbffff
  434943:	push   DWORD PTR [ecx]
  434945:	test   al,0xa3
  434947:	int3   
  434948:	add    BYTE PTR [ebp+0xd6ff],bh
  43494e:	jl     0x434950
  434950:	add    dl,cl
  434952:	stos   BYTE PTR es:[edi],al
  434953:	add    BYTE PTR [ecx-0xbe53],bh
  434959:	push   ds
  43495a:	add    BYTE PTR [ebx],ch
  43495c:	cmp    edi,0xffffffdf
  43495f:	add    DWORD PTR [eax],0x6e
  434962:	xor    eax,0x1d6dc6ff
  434967:	(bad)  
  434968:	push   DWORD PTR [edx-0x7d]
  43496b:	sar    edi,0xcc
  43496e:	dec    edi
  43496f:	(bad)  
  434970:	call   FWORD PTR [ebx-0x18]
  434973:	add    al,dl
  434975:	mov    ebp,0x583ff9a
  43497a:	inc    DWORD PTR [ebx+eax*4]
  43497d:	mov    DWORD PTR [ecx-0x77],eax
  434980:	add    BYTE PTR [eax-0x72],al
  434983:	add    dl,ah
  434985:	adc    al,0xb3
  434987:	int3   
  434988:	add    BYTE PTR [edi-0x1],ah
  43498b:	cmp    edi,edi
  43498d:	cmp    DWORD PTR [esi-0x34],0x0
  434991:	not    BYTE PTR [ecx]
  434993:	jmp    DWORD PTR [edi+edi*2+0x25]
  434997:	or     esp,0xfffffff0
  43499a:	add    bh,dh
  43499c:	int3   
  43499d:	int3   
  43499e:	mov    ebp,0x4af10083
  4349a3:	push   DWORD PTR [eax]
  4349a5:	inc    ebx
  4349a6:	add    edi,edi
  4349a8:	dec    DWORD PTR [ecx+0x1900]
  4349ae:	add    DWORD PTR [eax],eax
  4349b0:	add    BYTE PTR [edi+eiz*2],bh
  4349b3:	inc    DWORD PTR [ebp+edi*2-0x78]
  4349b7:	inc    DWORD PTR [eax]
  4349b9:	scas   eax,DWORD PTR es:[edi]
  4349ba:	add    al,ah
  4349bc:	add    DWORD PTR [eax],0xffffffed
  4349bf:	(bad)  
  4349c0:	inc    DWORD PTR [ecx]
  4349c2:	retf   0x66cc
  4349c5:	loop   0x434a33
  4349c7:	(bad)  
  4349c8:	(bad)  
  4349c9:	out    dx,al
  4349ca:	add    BYTE PTR [edx+0xff00ff],al
  4349d0:	(bad)  
  4349d1:	out    dx,al
  4349d2:	push   esi
  4349d3:	add    BYTE PTR [edx],bh
  4349d5:	push   eax
  4349d6:	mov    edi,?
  4349d8:	jmp    DWORD PTR [ebx+0x63ff]
  4349de:	call   0x86ff:0x8825ff83
  4349e5:	icebp  
  4349e6:	inc    eax
  4349e7:	add    bh,bh
  4349e9:	push   es
  4349ea:	mov    esp,esp
  4349ec:	inc    DWORD PTR [eax]
  4349ee:	and    al,BYTE PTR [eax]
  4349f0:	jmp    ebp
  4349f2:	or     BYTE PTR [ecx+0x28d39],0x0
  4349f9:	iret   
  4349fa:	add    BYTE PTR [esi-0x7e7601],bh
  434a00:	push   DWORD PTR [ebx]
  434a02:	xor    bh,bh
  434a04:	(bad)  
  434a05:	stc    
  434a06:	iret   
  434a07:	(bad)  
  434a08:	dec    DWORD PTR [ecx-0x7c006301]
  434a0e:	xor    DWORD PTR [ecx+0xb2ffff],ecx
  434a14:	in     eax,dx
  434a15:	and    edi,edx
  434a17:	add    bh,bh
  434a19:	stos   DWORD PTR es:[edi],eax
  434a1a:	push   esp
  434a1c:	add    DWORD PTR [eax],0x29
  434a1f:	inc    DWORD PTR [eax]
  434a21:	bound  edx,QWORD PTR [eax+eax*1-0x7c034a04]
  434a28:	add    DWORD PTR [edi+edi*8],0x66
  434a2c:	add    BYTE PTR [ebx-0xa007c04],al
  434a32:	xchg   esp,eax
  434a33:	adc    ebx,0xffffff95
  434a36:	cmp    eax,0x83f400ff
  434a3b:	mov    bh,0x0
  434a3d:	call   edx
  434a3f:	inc    DWORD PTR [eax]
  434a41:	and    DWORD PTR ss:[eax],eax
  434a44:	aam    0xf
  434a46:	add    al,0x0
  434a48:	add    DWORD PTR [ebx-0x7d],0xffffffa8
  434a4c:	add    bh,bh
  434a4e:	push   eax
  434a4f:	dec    DWORD PTR [ecx+0x21ccce95]
  434a55:	rol    BYTE PTR [ecx],cl
  434a57:	int3   
  434a58:	push   DWORD PTR [eax]
  434a5a:	inc    DWORD PTR [edx]
  434a5c:	(bad)  
  434a5d:	inc    DWORD PTR [edi+edi*8]
  434a60:	cmp    DWORD PTR [ebp+0x632ff64],0x63
  434a67:	int3   
  434a68:	add    BYTE PTR [ebx],ch
  434a6a:	(bad)  
  434a6b:	jnp    0x434a6c
  434a6d:	dec    DWORD PTR [edi+edi*8]
  434a70:	jmp    ecx
  434a72:	lods   al,BYTE PTR ds:[esi]
  434a73:	call   FWORD PTR [ebp-0x4b]
  434a76:	inc    edx
  434a77:	add    BYTE PTR [eax],al
  434a79:	xor    bh,bh
  434a7b:	inc    DWORD PTR ds:[ebx+0x1eff00f1]
  434a82:	fiadd  DWORD PTR [ebx-0x7c8df758]
  434a88:	push   ebx
  434a8a:	int3   
  434a8b:	jge    0x434a8c
  434a8d:	mov    DWORD PTR [edx+0x0],edi
  434a90:	jmp    DWORD PTR [edx-0x4]
  434a93:	call   DWORD PTR [ecx+0x1c]
  434a96:	das    
  434a97:	inc    DWORD PTR [eax]
  434a99:	(bad)  
  434a9b:	daa    
  434a9c:	add    bh,bh
  434a9e:	mov    bh,bh
  434aa0:	add    BYTE PTR [esp+ebp*1-0x1],dl
  434aa4:	xor    edx,DWORD PTR [ebx+0x13]
  434aa7:	add    DWORD PTR [eax],0xfffffff3
  434aaa:	mov    ebx,edi
  434aac:	add    bh,bh
  434aae:	cmp    bh,0x0
  434ab1:	jbe    0x434b2e
  434ab3:	int3   
  434ab4:	xchg   BYTE PTR [ebx],cl
  434ab6:	test   BYTE PTR [eax],0x0
  434ab9:	push   0xffffff83
  434abb:	xchg   ebp,eax
  434abc:	add    BYTE PTR [eax],al
  434abe:	scas   eax,DWORD PTR es:[edi]
  434abf:	(bad)  
  434ac0:	inc    DWORD PTR [edx-0x1b]
  434ac3:	add    BYTE PTR [edx-0xb],ch
  434ac6:	ja     0x434a4b
  434ac8:	dec    esp
  434aca:	mov    DWORD PTR [edi+0x9f83ff],edi
  434ad0:	inc    DWORD PTR [eax]
  434ad2:	sbb    edi,edi
  434ad4:	(bad)  
  434ad5:	or     bh,BYTE PTR [ecx-0xcf007d]
  434adb:	adc    eax,DWORD PTR [eax]
  434add:	(bad)  
  434ade:	jmp    0xb0974ae2
  434ae3:	(bad)  
  434ae4:	mov    esp,0xffffc967
  434ae9:	mov    ebp,0x83ab00
  434aee:	inc    esi
  434aef:	add    BYTE PTR [ecx+0x2483549b],cl
  434af5:	mov    eax,0xbe00ccb9
  434afa:	inc    DWORD PTR [edi+edi*8]
  434afd:	inc    esi
  434aff:	add    ah,cl
  434b01:	rol    BYTE PTR [edx+0xe345f00],1
  434b07:	(bad)  
  434b08:	dec    DWORD PTR [edx]
  434b0a:	int3   
  434b0b:	out    dx,al
  434b0c:	add    bh,bh
  434b0e:	fdivr  st,st(7)
  434b10:	add    BYTE PTR [edi-0x77],bh
  434b13:	and    DWORD PTR [ebx],0x5c
  434b16:	stc    
  434b17:	(bad)  
  434b18:	inc    esi
  434b1a:	add    BYTE PTR [esi-0x1],ch
  434b1d:	add    dh,ch
  434b1f:	mov    DWORD PTR [eax],eax
  434b21:	cli    
  434b22:	inc    BYTE PTR [eax]
  434b24:	xor    BYTE PTR [ebx],cl
  434b26:	adc    al,0x0
  434b28:	add    al,bl
  434b2a:	mov    DWORD PTR [ebx-0x1],esi
  434b2d:	jmp    DWORD PTR [esi+0x0]
  434b30:	call   FWORD PTR [edx+0x1505002b]
  434b36:	in     eax,dx
  434b37:	add    DWORD PTR [ebx+0x5b0008],0xffffffcc
  434b3e:	(bad)  
  434b41:	add    BYTE PTR [esi],dl
  434b43:	push   esp
  434b45:	dec    esp
  434b46:	mov    ebx,0xffb00083
  434b4b:	hlt    
  434b4c:	(bad)  
  434b4d:	jmp    DWORD PTR [ebx-0x2eaeff01]
  434b53:	add    cl,ch
  434b55:	xor    eax,0xb8ccff11
  434b5a:	(bad)  
  434b5b:	jl     0x434b5c
  434b5d:	(bad)  
  434b5e:	cld    
  434b5f:	(bad)  
  434b60:	call   DWORD PTR [ebx]
  434b62:	lods   eax,DWORD PTR ds:[esi]
  434b63:	(bad)  
  434b64:	mov    edx,0xff6320
  434b69:	(bad)  
  434b6a:	inc    DWORD PTR [ecx-0x7c420001]
  434b70:	jmp    DWORD PTR [ecx]
  434b72:	dec    ecx
  434b73:	jmp    ebx
  434b75:	xor    eax,0xa0ff835a
  434b7a:	add    al,bl
  434b7c:	add    BYTE PTR [eax],al
  434b7e:	rol    BYTE PTR [eax],cl
  434b80:	call   DWORD PTR [ecx]
  434b82:	inc    ebp
  434b83:	inc    DWORD PTR [esi]
  434b85:	enter  0xff46,0x0
  434b89:	pop    edi
  434b8a:	add    BYTE PTR [eax+0x86ff00],dh
  434b90:	jmp    DWORD PTR ds:0x6e08836d
  434b96:	xchg   ebp,eax
  434b97:	add    ah,cl
  434b99:	je     0x434b1e
  434b9b:	jb     0x434b20
  434b9d:	dec    eax
  434b9f:	add    ah,cl
  434ba1:	push   eax
  434ba2:	pusha  
  434ba3:	(bad)  
  434ba4:	fmul   DWORD PTR [eax]
  434ba6:	jns    0x434ba7
  434ba8:	add    BYTE PTR [eax],cl
  434baa:	add    BYTE PTR [esi-0x71007d],ch
  434bb0:	dec    DWORD PTR [ebx+0x12]
  434bb3:	call   FWORD PTR [eax+0x3f]
  434bb6:	dec    esp
  434bb7:	(bad)  
  434bb8:	call   DWORD PTR [ecx]
  434bba:	jmp    DWORD PTR [eax-0x760b7c01]
  434bc0:	add    BYTE PTR [eax-0x6c],ch
  434bc3:	int3   
  434bc4:	jns    0x434bc0
  434bc6:	or     edi,edi
  434bc8:	int3   
  434bc9:	push   eax
  434bca:	add    BYTE PTR ds:0xff2eff00,cl
  434bd0:	call   FWORD PTR [ebx+eax*4]
  434bd3:	inc    DWORD PTR [edx-0x7cff37ed]
  434bd9:	repnz dec DWORD PTR [esi-0x769c3400]
  434be0:	add    BYTE PTR [esi],dl
  434be2:	xchg   ecx,eax
  434be3:	add    BYTE PTR [ebx-0xd514],al
  434be9:	xchg   ebx,eax
  434bea:	inc    DWORD PTR [edi+edi*8+0x0]
  434bee:	xor    bh,bh
  434bf0:	call   FWORD PTR [edi+0x4c]
  434bf3:	(bad)  
  434bf4:	jp     0x434bd8
  434bf6:	fiadd  DWORD PTR [eax]
  434bf8:	jmp    FWORD PTR ds:0x83006aff
  434bfe:	mov    al,ds:0x7eba8900
  434c03:	int3   
  434c04:	xor    eax,ebp
  434c06:	out    0x0,eax
  434c08:	add    DWORD PTR [esi+0xffce00],0x32
  434c0f:	dec    DWORD PTR [ecx+0x17ffff70]
  434c15:	fiadd  DWORD PTR [edi+0x7b89ff]
  434c1b:	mov    ecx,0x8dcc83
  434c20:	add    BYTE PTR [ecx],ch
  434c22:	les    eax,FWORD PTR [eax]
  434c24:	aas    
  434c25:	sub    bl,bl
  434c27:	inc    DWORD PTR [eax]
  434c29:	dec    eax
  434c2a:	call   edi
  434c2c:	mov    edi,edi
  434c2e:	mov    BYTE PTR [eax],0xff
  434c31:	add    eax,0x886ff7f
  434c36:	clc    
  434c37:	add    DWORD PTR [ebx-0xdb330f],0xffffffff
  434c3e:	jmp    0x2c00:0x7a5d00ff
  434c45:	dec    edi
  434c46:	inc    DWORD PTR [eax]
  434c48:	int3   
  434c49:	sub    BYTE PTR [eax],al
  434c4b:	xchg   esi,eax
  434c4c:	add    ah,cl
  434c4e:	and    bh,bh
  434c50:	add    BYTE PTR [ebp-0x5b83ff7d],cl
  434c56:	fmul   st,st(4)
  434c58:	jmp    ebx
  434c5a:	add    ch,ch
  434c5c:	inc    DWORD PTR [eax]
  434c5e:	push   edx
  434c5f:	add    BYTE PTR [ebx+0x2f0035c9],al
  434c65:	addr16 fcos 
  434c68:	int3   
  434c69:	pop    edx
  434c6a:	xor    DWORD PTR [edi-0x34],0x0
  434c6e:	xlat   BYTE PTR ds:[ebx]
  434c6f:	add    BYTE PTR [eax],al
  434c71:	into   
  434c72:	jne    0x434c73
  434c74:	pusha  
  434c75:	(bad)  
  434c76:	push   cs
  434c77:	(bad)  
  434c78:	inc    DWORD PTR [edx-0x7cffca34]
  434c7e:	cmp    bh,0x0
  434c81:	out    dx,al
  434c82:	sahf   
  434c83:	inc    DWORD PTR [edi-0x7c33d964]
  434c89:	mov    DWORD PTR [eax],eax
  434c8b:	cmp    eax,DWORD PTR [eax]
  434c8d:	add    BYTE PTR [edx-0x1351ff01],bh
  434c93:	int3   
  434c94:	outs   dx,DWORD PTR ds:[esi]
  434c95:	sbb    BYTE PTR ds:[eax],al
  434c98:	mov    ebp,ebx
  434c9a:	jmp    FWORD PTR [edi-0x1]
  434c9d:	add    BYTE PTR [ebx+eax*4],dl
  434ca0:	add    BYTE PTR [esi],ah
  434ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ca3:	call   FWORD PTR [eax-0xb3f7]
  434ca9:	mov    ebx,0xff5300
  434cae:	aad    0x83
  434cb0:	(bad)  
  434cb1:	in     eax,dx
  434cb2:	sbb    cl,BYTE PTR [ecx-0x2044f2]
  434cb8:	add    ah,bh
  434cba:	adc    DWORD PTR [edi+0x0],0x0
  434cbe:	hlt    
  434cbf:	dec    esp
  434cc1:	test   BYTE PTR [esi-0x1],ch
  434cc4:	add    DWORD PTR [eax+0x3e00ff22],esp
  434cca:	jmp    FWORD PTR [eax+eax*1-0x7c331b01]
  434cd1:	dec    BYTE PTR [esi+0x796c35ff]
  434cd7:	inc    DWORD PTR [eax]
  434cd9:	xchg   ebx,eax
  434cda:	xor    DWORD PTR [edi-0x1],0x0
  434cde:	dec    edi
  434cdf:	inc    DWORD PTR [eax]
  434ce1:	hlt    
  434ce2:	sbb    eax,0x9a1b14ff
  434ce7:	(bad)  
  434ce8:	call   FWORD PTR [edx+0xccea00]
  434cee:	(bad)  
  434cf0:	push   DWORD PTR [edi-0x41]
  434cf3:	mov    DWORD PTR [eax-0x7c00140f],ecx
  434cf9:	push   eax
  434cfa:	inc    DWORD PTR [edx-0xb8337d]
  434d00:	int3   
  434d01:	mov    bl,0xba
  434d03:	sbb    esi,0xffffff9e
  434d06:	and    al,0x89
  434d08:	add    BYTE PTR [ebp-0x1],ah
  434d0b:	cdq    
  434d0c:	mov    DWORD PTR [ebx-0x56ffff33],eax
  434d12:	fdivr  st,st(7)
  434d14:	ds leave 
  434d16:	add    al,0xcc
  434d18:	int3   
  434d19:	add    bh,bh
  434d1b:	jns    0x434ce9
  434d1d:	dec    DWORD PTR [esi]
  434d1f:	add    ah,cl
  434d21:	cld    
  434d22:	dec    ecx
  434d23:	sub    ecx,0xfffffff0
  434d26:	jmp    0xffe7:0x832d83ff
  434d2d:	add    ah,bh
  434d2f:	add    DWORD PTR [eax],0xffffff93
  434d32:	jae    0x434d34
  434d34:	fist   WORD PTR [eax+eiz*4-0x1]
  434d38:	add    BYTE PTR [edx-0x7d],dh
  434d3b:	inc    esi
  434d3c:	(bad)  
  434d3d:	push   DWORD PTR ds:0xd64bff00
  434d43:	dec    DWORD PTR [edx-0x5c]
  434d46:	in     al,0xcc
  434d48:	dec    DWORD PTR [ebx-0x1]
  434d4b:	push   ebp
  434d4c:	add    DWORD PTR [eax],0x1d
  434d4f:	int3   
  434d50:	add    BYTE PTR [ecx+0xd098318],ah
  434d56:	js     0x434d58
  434d58:	add    BYTE PTR [ecx],cl
  434d5a:	add    esi,0xffffffcc
  434d5d:	add    BYTE PTR [edx],dl
  434d5f:	add    bh,bh
  434d61:	jb     0x434ce6
  434d63:	add    BYTE PTR [esi],dl
  434d65:	adc    eax,0xa4ff002e
  434d6a:	mov    DWORD PTR [edx-0x1],ecx
  434d6d:	mov    ecx,eax
  434d6f:	inc    DWORD PTR [eax]
  434d71:	dec    ecx
  434d72:	ins    BYTE PTR es:[edi],dx
  434d73:	call   DWORD PTR [ecx-0x762ab3]
  434d79:	xor    DWORD PTR cs:[edi+0xc983ff],0xffffffff
  434d81:	aam    0xb
  434d83:	sbb    DWORD PTR [esi],0xffffff97
  434d86:	pop    edx
  434d87:	inc    DWORD PTR [eax]
  434d89:	and    eax,DWORD PTR [ebx+0x398300ad]
  434d8f:	add    DWORD PTR [eax],0x3a
  434d92:	xchg   esi,eax
  434d93:	mov    ebx,ecx
  434d95:	push   ss
  434d96:	dec    DWORD PTR ds:[ecx-0x150057]
  434d9d:	dec    DWORD PTR [ecx-0x34]
  434da0:	jmp    ebx
  434da2:	retf   
  434da3:	add    BYTE PTR [ecx+0x8f76],cl
  434da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434daa:	(bad)  
  434dab:	mov    ebp,0xffd500cc
  434db0:	(bad)  
  434db1:	jnp    0x434dcd
  434db3:	push   DWORD PTR [ebx+0xffe41a]
  434db9:	adc    DWORD PTR [ebx-0x49ff00fa],eax
  434dbf:	add    bh,bh
  434dc1:	in     al,dx
  434dc2:	jb     0x434dc3
  434dc4:	mov    dh,0x36
  434dc6:	ret    
  434dc7:	dec    DWORD PTR [ecx+0x9dff36]
  434dcd:	inc    DWORD PTR [eax-0x68ba0000]
  434dd3:	add    BYTE PTR [ebx-0x7c00dfe0],al
  434dd9:	(bad)  
  434dda:	dec    DWORD PTR [ebx]
  434ddc:	inc    DWORD PTR [ebx-0x6900ff0c]
  434de2:	cmp    al,BYTE PTR [eax]
  434de4:	xchg   edx,eax
  434de5:	inc    edx
  434de6:	sahf   
  434de7:	cmp    edi,0x72
  434dea:	add    BYTE PTR [ecx+0xf8ffff],bl
  434df0:	inc    ecx
  434df2:	icebp  
  434df3:	call   DWORD PTR [ecx-0x7cff9441]
  434df9:	fdivr  st,st(7)
  434dfb:	fadd   QWORD PTR [ebx-0xf101]
  434e01:	xchg   ecx,eax
  434e02:	imul   ecx,esp,0x79
  434e05:	jae    0x434df1
  434e07:	inc    DWORD PTR [eax]
  434e09:	leave  
  434e0a:	inc    ecx
  434e0c:	inc    DWORD PTR [ebx+0x4d000023]
  434e12:	mov    edi,0x6576faff
  434e17:	add    ah,cl
  434e19:	bnd call DWORD PTR [edi-0x33be7d00]
  434e20:	(bad)  
  434e21:	jle    0x434e85
  434e23:	add    BYTE PTR [eax-0x16],al
  434e26:	mov    ds:0xcdff00,eax
  434e2b:	mov    edi,edi
  434e2d:	add    bl,dh
  434e2f:	mov    edi,edi
  434e31:	push   ss
  434e32:	mov    DWORD PTR [eax],0xffd9a896
  434e38:	cmp    DWORD PTR [edx-0x34],0xffffffbb
  434e3c:	or     DWORD PTR [ecx-0x62330049],0xfffffff8
  434e43:	jmp    FWORD PTR [ebx-0x7c763c6e]
  434e49:	inc    ecx
  434e4a:	push   DWORD PTR [edi+edi*8]
  434e4d:	add    BYTE PTR [esi],dl
  434e4f:	cmp    edi,0xe
  434e52:	outs   dx,DWORD PTR ds:[esi]
  434e53:	call   DWORD PTR [eax-0x35]
  434e56:	arpl   di,di
  434e58:	add    BYTE PTR [ebp-0x7d],bl
  434e5b:	daa    
  434e5c:	mov    edi,edi
  434e5e:	(bad)  
  434e5f:	mov    DWORD PTR [ecx-0x5bffa877],ecx
  434e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e66:	lahf   
  434e67:	inc    DWORD PTR [eax]
  434e69:	or     al,0xff
  434e6b:	xlat   BYTE PTR ds:[ebx]
  434e6c:	(bad)  
  434e6d:	jmp    FWORD PTR [ebx+0x0]
  434e70:	jmp    FWORD PTR [ebp-0x56a4ffd9]
  434e76:	inc    eax
  434e77:	add    ah,cl
  434e79:	add    bh,bh
  434e7b:	inc    edx
  434e7c:	(bad)  
  434e7d:	dec    ebx
  434e7f:	call   DWORD PTR [ecx+0x55]
  434e82:	push   esi
  434e83:	mov    esi,DWORD PTR ds:0x44400c
  434e89:	push   0x8
  434e8b:	push   0x42
  434e8d:	call   esi
  434e8f:	push   0x49
  434e91:	push   0x42
  434e93:	mov    ebp,eax
  434e95:	call   esi
  434e97:	mov    ecx,DWORD PTR ds:0x447d00
  434e9d:	mov    edx,DWORD PTR ds:0x447010
  434ea3:	mov    DWORD PTR [esp+0x8],eax
  434ea7:	add    ecx,0x3070
  434ead:	mov    esi,0x5b
  434eb2:	push   edi
  434eb3:	movzx  eax,BYTE PTR [edx+0x7]
  434eb7:	movzx  edi,BYTE PTR [edx+0x3]
  434ebb:	movzx  edx,WORD PTR [edx+0x1]
  434ebf:	shl    eax,0x8
  434ec2:	add    eax,edi
  434ec4:	shl    eax,0x10
  434ec7:	add    eax,edx
  434ec9:	mov    ds:0x447cf0,eax
  434ece:	mov    edx,0x34a41e84
  434ed3:	sub    edx,DWORD PTR ds:0x447cfc
  434ed9:	add    ecx,0x10
  434edc:	xor    edx,eax
  434ede:	mov    DWORD PTR [ecx-0x10],edx
  434ee1:	mov    edx,DWORD PTR ds:0x447010
  434ee7:	add    edx,0x8
  434eea:	mov    DWORD PTR ds:0x447010,edx
  434ef0:	movzx  eax,BYTE PTR [edx+0x7]
  434ef4:	movzx  edi,BYTE PTR [edx+0x3]
  434ef8:	movzx  edx,WORD PTR [edx+0x1]
  434efc:	shl    eax,0x8
  434eff:	add    eax,edi
  434f01:	shl    eax,0x10
  434f04:	add    eax,edx
  434f06:	mov    ds:0x447cf0,eax
  434f0b:	mov    edx,0x34a41e84
  434f10:	sub    edx,DWORD PTR ds:0x447cfc
  434f16:	xor    edx,eax
  434f18:	mov    DWORD PTR [ecx-0xc],edx
  434f1b:	mov    edx,DWORD PTR ds:0x447010
  434f21:	add    edx,0x8
  434f24:	mov    DWORD PTR ds:0x447010,edx
  434f2a:	movzx  eax,BYTE PTR [edx+0x7]
  434f2e:	movzx  edi,BYTE PTR [edx+0x3]
  434f32:	movzx  edx,WORD PTR [edx+0x1]
  434f36:	shl    eax,0x8
  434f39:	add    eax,edi
  434f3b:	shl    eax,0x10
  434f3e:	add    eax,edx
  434f40:	mov    ds:0x447cf0,eax
  434f45:	mov    edx,0x34a41e84
  434f4a:	sub    edx,DWORD PTR ds:0x447cfc
  434f50:	xor    edx,eax
  434f52:	mov    DWORD PTR [ecx-0x8],edx
  434f55:	mov    edx,DWORD PTR ds:0x447010
  434f5b:	add    edx,0x8
  434f5e:	mov    DWORD PTR ds:0x447010,edx
  434f64:	movzx  eax,BYTE PTR [edx+0x7]
  434f68:	movzx  edi,BYTE PTR [edx+0x3]
  434f6c:	movzx  edx,WORD PTR [edx+0x1]
  434f70:	shl    eax,0x8
  434f73:	add    eax,edi
  434f75:	shl    eax,0x10
  434f78:	add    eax,edx
  434f7a:	mov    edx,0x34a41e84
  434f7f:	sub    edx,DWORD PTR ds:0x447cfc
  434f85:	mov    ds:0x447cf0,eax
  434f8a:	xor    edx,eax
  434f8c:	mov    DWORD PTR [ecx-0x4],edx
  434f8f:	mov    edx,DWORD PTR ds:0x447010
  434f95:	add    edx,0x8
  434f98:	dec    esi
  434f99:	mov    DWORD PTR ds:0x447010,edx
  434f9f:	jne    0x434eb3
  434fa5:	mov    edx,DWORD PTR ds:0x447d00
  434fab:	mov    ecx,DWORD PTR ds:0x447014
  434fb1:	add    edx,0x3620
  434fb7:	mov    esi,0x21b
  434fbc:	lea    esp,[esp+0x0]
  434fc0:	movzx  eax,BYTE PTR [ecx+0x7]
  434fc4:	movzx  edi,BYTE PTR [ecx+0x4]
  434fc8:	movzx  ecx,WORD PTR [ecx+0x1]
  434fcc:	shl    eax,0x8
  434fcf:	add    eax,edi
  434fd1:	shl    eax,0x10
  434fd4:	add    eax,ecx
  434fd6:	mov    ecx,0xe6324471
  434fdb:	sub    ecx,DWORD PTR ds:0x447cfc
  434fe1:	mov    ds:0x447cf0,eax
  434fe6:	xor    ecx,eax
  434fe8:	mov    DWORD PTR [edx],ecx
  434fea:	mov    ecx,DWORD PTR ds:0x447014
  434ff0:	add    ecx,0x8
  434ff3:	add    edx,0x4
  434ff6:	dec    esi
  434ff7:	mov    DWORD PTR ds:0x447014,ecx
  434ffd:	jne    0x434fc0
  434fff:	mov    edx,DWORD PTR ds:0x447d00
  435005:	mov    ecx,DWORD PTR ds:0x447018
  43500b:	add    edx,0x3e8c
  435011:	mov    esi,0x139
  435016:	jmp    0x435020
  435018:	lea    esp,[esp+0x0]
  43501f:	nop
  435020:	movzx  eax,BYTE PTR [ecx+0x6]
  435024:	movzx  edi,BYTE PTR [ecx+0x4]
  435028:	movzx  ecx,WORD PTR [ecx+0x1]
  43502c:	shl    eax,0x8
  43502f:	add    eax,edi
  435031:	shl    eax,0x10
  435034:	add    eax,ecx
  435036:	mov    ecx,DWORD PTR ds:0x447cfc
  43503c:	xor    ecx,eax
  43503e:	xor    ecx,0x878043df
  435044:	mov    ds:0x447cf0,eax
  435049:	mov    DWORD PTR [edx],ecx
  43504b:	mov    ecx,DWORD PTR ds:0x447018
  435051:	add    ecx,0x8
  435054:	add    edx,0x4
  435057:	dec    esi
  435058:	mov    DWORD PTR ds:0x447018,ecx
  43505e:	jne    0x435020
  435060:	mov    esi,DWORD PTR ds:0x447d00
  435066:	mov    ecx,DWORD PTR ds:0x44701c
  43506c:	push   ebx
  43506d:	mov    ebx,DWORD PTR ds:0x444054
  435073:	add    esi,0x4370
  435079:	mov    edi,0x11e
  43507e:	mov    edi,edi
  435080:	movzx  eax,BYTE PTR [ecx+0x6]
  435084:	movzx  edx,WORD PTR [ecx+0x3]
  435088:	movzx  ecx,BYTE PTR [ecx+0x1]
  43508c:	shl    eax,0x10
  43508f:	add    eax,edx
  435091:	shl    eax,0x8
  435094:	mov    edx,0xc8e91e3
  435099:	sub    edx,DWORD PTR ds:0x447cfc
  43509f:	add    eax,ecx
  4350a1:	push   0x446a58
  4350a6:	xor    edx,eax
  4350a8:	mov    ds:0x447cf0,eax
  4350ad:	push   0x0
  4350af:	mov    DWORD PTR [esi],edx
  4350b1:	call   ebx
  4350b3:	mov    ecx,DWORD PTR ds:0x44701c
  4350b9:	add    ecx,0x8
  4350bc:	add    esi,0x4
  4350bf:	dec    edi
  4350c0:	mov    DWORD PTR ds:0x44701c,ecx
  4350c6:	jne    0x435080
  4350c8:	mov    esi,DWORD PTR ds:0x447d00
  4350ce:	push   edi
  4350cf:	add    esi,0x47e8
  4350d5:	call   DWORD PTR ds:0x444008
  4350db:	mov    edi,DWORD PTR ds:0x444000
  4350e1:	mov    ebx,0x178
  4350e6:	call   edi
  4350e8:	mov    ecx,DWORD PTR ds:0x447020
  4350ee:	movzx  eax,BYTE PTR [ecx+0x7]
  4350f2:	movzx  edx,BYTE PTR [ecx+0x5]
  4350f6:	shl    eax,0x8
  4350f9:	add    eax,edx
  4350fb:	movzx  edx,BYTE PTR [ecx+0x3]
  4350ff:	movzx  ecx,BYTE PTR [ecx]
  435102:	shl    eax,0x8
  435105:	add    eax,edx
  435107:	mov    edx,DWORD PTR ds:0x447cfc
  43510d:	shl    eax,0x8
  435110:	add    eax,ecx
  435112:	sub    edx,0x80040004
  435118:	neg    edx
  43511a:	sbb    edx,edx
  43511c:	and    edx,0xc5c53d2d
  435122:	mov    ds:0x447cf0,eax
  435127:	add    edx,0x3a3b4880
  43512d:	xor    edx,eax
  43512f:	mov    DWORD PTR [esi],edx
  435131:	mov    eax,ds:0x447020
  435136:	mov    eax,DWORD PTR [eax+0x9]
  435139:	mov    ecx,DWORD PTR ds:0x447cfc
  43513f:	add    ecx,0xba37487c
  435145:	xor    ecx,eax
  435147:	mov    ds:0x447cf0,eax
  43514c:	mov    DWORD PTR [esi+0x4],ecx
  43514f:	add    DWORD PTR ds:0x447020,0x10
  435156:	add    esi,0x8
  435159:	dec    ebx
  43515a:	jne    0x4350e6
  43515c:	call   edi
  43515e:	mov    ecx,DWORD PTR ds:0x447020
  435164:	movzx  eax,BYTE PTR [ecx+0x7]
  435168:	movzx  edx,BYTE PTR [ecx+0x5]
  43516c:	shl    eax,0x8
  43516f:	add    eax,edx
  435171:	movzx  edx,BYTE PTR [ecx+0x3]
  435175:	movzx  ecx,BYTE PTR [ecx]
  435178:	shl    eax,0x8
  43517b:	add    eax,edx
  43517d:	mov    edx,DWORD PTR ds:0x447cfc
  435183:	shl    eax,0x8
  435186:	add    eax,ecx
  435188:	add    edx,0xba37487c
  43518e:	xor    edx,eax
  435190:	mov    ds:0x447cf0,eax
  435195:	mov    DWORD PTR [esi],edx
  435197:	mov    ecx,DWORD PTR ds:0x447d00
  43519d:	mov    edx,DWORD PTR ds:0x447024
  4351a3:	add    ecx,0x53ac
  4351a9:	mov    esi,0x175
  4351ae:	pop    ebx
  4351af:	nop
  4351b0:	movzx  eax,WORD PTR [edx+0x6]
  4351b4:	movzx  edx,WORD PTR [edx]
  4351b7:	shl    eax,0x10
  4351ba:	add    eax,edx
  4351bc:	mov    ds:0x447cf0,eax
  4351c1:	mov    edx,0x677169cc
  4351c6:	sub    edx,DWORD PTR ds:0x447cfc
  4351cc:	add    ecx,0x8
  4351cf:	xor    edx,eax
  4351d1:	mov    DWORD PTR [ecx-0x8],edx
  4351d4:	mov    edx,DWORD PTR ds:0x447024
  4351da:	movzx  eax,BYTE PTR [edx+0xf]
  4351de:	movzx  edi,WORD PTR [edx+0xb]
  4351e2:	movzx  edx,BYTE PTR [edx+0x9]
  4351e6:	shl    eax,0x10
  4351e9:	add    eax,edi
  4351eb:	shl    eax,0x8
  4351ee:	add    eax,edx
  4351f0:	mov    edx,0x677169cc
  4351f5:	sub    edx,DWORD PTR ds:0x447cfc
  4351fb:	mov    ds:0x447cf0,eax
  435200:	xor    edx,eax
  435202:	mov    DWORD PTR [ecx-0x4],edx
  435205:	mov    edx,DWORD PTR ds:0x447024
  43520b:	add    edx,0x10
  43520e:	dec    esi
  43520f:	mov    DWORD PTR ds:0x447024,edx
  435215:	jne    0x4351b0
  435217:	movzx  eax,WORD PTR [edx+0x6]
  43521b:	movzx  edx,WORD PTR [edx]
  43521e:	mov    esi,DWORD PTR ds:0x444018
  435224:	shl    eax,0x10
  435227:	add    eax,edx
  435229:	mov    edx,0x677169cc
  43522e:	sub    edx,DWORD PTR ds:0x447cfc
  435234:	mov    ds:0x447cf0,eax
  435239:	xor    edx,eax
  43523b:	mov    DWORD PTR [ecx],edx
  43523d:	pop    edi
  43523e:	test   ebp,ebp
  435240:	je     0x435245
  435242:	push   ebp
  435243:	call   esi
  435245:	mov    eax,DWORD PTR [esp+0x8]
  435249:	test   eax,eax
  43524b:	je     0x435250
  43524d:	push   eax
  43524e:	call   esi
  435250:	pop    esi
  435251:	pop    ebp
  435252:	pop    ecx
  435253:	ret    
  435254:	int3   
  435255:	int3   
  435256:	int3   
  435257:	int3   
  435258:	int3   
  435259:	int3   
  43525a:	int3   
  43525b:	int3   
  43525c:	int3   
  43525d:	int3   
  43525e:	int3   
  43525f:	int3   
  435260:	loope  0x4352a2
  435262:	(bad)  
  435263:	jge    0x4352cd
  435265:	add    BYTE PTR [ebx+0x7a9fff],al
  43526b:	fs out dx,al
  43526d:	add    DWORD PTR [ebx+0x881bff],0xffffffb3
  435274:	jo     0x435276
  435276:	add    bh,bh
  435278:	mov    edi,0x3adffffc
  43527d:	(bad)  
  43527e:	dec    esp
  435280:	fdivr  QWORD PTR [eax]
  435282:	dec    ebx
  435284:	jne    0x435285
  435286:	int3   
  435287:	adc    DWORD PTR [esi],0xd
  43528a:	add    esi,0xffffff9d
  43528d:	(bad)  
  43528e:	inc    DWORD PTR [eax]
  435290:	mov    edi,0x2d7000fb
  435295:	(bad)  
  435296:	dec    esp
  435298:	sub    eax,DWORD PTR [edi]
  43529a:	int3   
  43529b:	sub    esp,DWORD PTR [edx-0x1]
  43529e:	dec    esp
  4352a0:	pop    ecx
  4352a1:	mov    ds:0xccf10000,eax
  4352a6:	mov    edi,edi
  4352a8:	jge    0x43523e
  4352aa:	int3   
  4352ab:	push   ebp
  4352ac:	int    0xff
  4352ae:	inc    DWORD PTR [eax]
  4352b0:	(bad)  
  4352b2:	mov    DWORD PTR [ebp-0x67],edi
  4352b5:	(bad)  
  4352b6:	(bad)  
  4352b7:	call   DWORD PTR [edx+0x58e900a7]
  4352bd:	or     DWORD PTR [ecx-0xd22101],0xffffff86
  4352c4:	mov    BYTE PTR [ebx+0x39000083],al
  4352ca:	jmp    DWORD PTR [edx+0x14]
  4352cd:	dec    DWORD PTR [ecx-0x989a01]
  4352d3:	add    BYTE PTR [edx],ah
  4352d5:	inc    DWORD PTR [eax]
  4352d7:	call   FWORD PTR [edx]
  4352d9:	dec    edi
  4352da:	mov    DWORD PTR [edi+ecx*1-0x1],esp
  4352de:	or     esp,0x60
  4352e1:	mov    esp,0xccc183ff
  4352e6:	(bad)  
  4352e7:	push   DWORD PTR [eax-0x1a]
  4352ea:	add    ch,ch
  4352ec:	dec    ecx
  4352ed:	add    BYTE PTR [ebx+0xef3783],al
  4352f3:	mov    ecx,0x83ff12
  4352f8:	push   esp
  4352f9:	and    edi,edi
  4352fb:	shl    BYTE PTR [ebx],1
  4352fd:	(bad)  
  4352fe:	(bad)  
  4352ff:	inc    DWORD PTR [edi-0x7cf4004a]
  435305:	(bad)  
  435306:	inc    DWORD PTR [ebx+0x5cff3be5]
  43530c:	cmc    
  43530d:	cmp    edi,0xffffff83
  435310:	aam    0x1
  435312:	add    BYTE PTR [edx],al
  435314:	fild   DWORD PTR [eax]
  435316:	cmp    edi,0x31
  435319:	push   ebx
  43531a:	and    DWORD PTR [edi+ebp*2-0x1a00ff01],0xffffffba
  435322:	add    dl,cl
  435324:	outs   dx,DWORD PTR ds:[esi]
  435325:	int3   
  435326:	or     esp,0xffffffff
  435329:	dec    esi
  43532a:	jmp    DWORD PTR [ebp+0x5c]
  43532d:	dec    DWORD PTR [ecx-0x978f00]
  435333:	or     al,0xff
  435336:	dec    esp
  435338:	lahf   
  435339:	push   ebp
  43533a:	jmp    FWORD PTR [ebx+edx*1+0x0]
  43533e:	add    BYTE PTR [ecx-0x5f7cc6b9],cl
  435344:	mov    bh,0xff
  435346:	(bad)  
  435347:	call   ebx
  435349:	or     esp,0xffffffd7
  43534c:	scas   eax,DWORD PTR es:[edi]
  43534d:	(bad)  
  43534e:	dec    DWORD PTR [ecx-0x277ca86c]
  435354:	add    eax,0x4fff8300
  435359:	dec    ebp
  43535a:	call   DWORD PTR [esi-0x762a]
  435360:	push   ebp
  435361:	mov    dl,0x0
  435363:	in     al,0xb8
  435365:	add    BYTE PTR [ebx-0x608177],al
  43536b:	sbb    eax,0x89ff8377
  435370:	cmp    al,0x1f
  435372:	add    ch,ch
  435374:	and    edi,edi
  435376:	add    ah,cl
  435378:	leave  
  435379:	mov    BYTE PTR [ebx-0x7c3137],al
  43537f:	int3   
  435380:	sub    cl,BYTE PTR [esi]
  435382:	add    BYTE PTR [esi],cl
  435384:	xchg   ebx,eax
  435385:	mov    DWORD PTR [ecx-0x445877],ecx
  43538b:	daa    
  43538c:	inc    ebx
  43538d:	inc    DWORD PTR [eax]
  43538f:	int3   
  435390:	loope  0x4353a0
  435392:	jmp    DWORD PTR [ecx-0xff7e]
  435398:	add    ebx,eax
  43539a:	(bad)  
  43539b:	ficomp DWORD PTR [ebx+0x0]
  43539e:	cmp    edi,0x53
  4353a1:	ud0    edx,esi
  4353a4:	push   ds
  4353a5:	cmp    edi,0xffffffff
  4353a8:	add    esi,DWORD PTR [edi-0x7c503700]
  4353ae:	mov    edi,edi
  4353b0:	jge    0x43536c
  4353b2:	add    BYTE PTR [ecx],ah
  4353b4:	fmul   QWORD PTR [ecx-0x62ae0000]
  4353ba:	add    BYTE PTR [ecx-0x8],cl
  4353bd:	inc    DWORD PTR [ebx+0x4787ff]
  4353c3:	aas    
  4353c4:	test   al,0x0
  4353c6:	(bad)  
  4353c7:	push   esi
  4353c9:	xchg   edi,eax
  4353ca:	add    BYTE PTR [ebx+0x47],ah
  4353cd:	mov    edi,edi
  4353cf:	call   FWORD PTR [ecx-0x572eff21]
  4353d5:	(bad)  
  4353d6:	dec    DWORD PTR [ecx+0x38ff5e90]
  4353dc:	mov    ?,edi
  4353de:	cmp    edi,0x3d
  4353e1:	outs   dx,DWORD PTR ds:[esi]
  4353e2:	add    dl,ch
  4353e4:	mov    ecx,0x32ff00cc
  4353e9:	add    eax,0xff94e6ff
  4353ee:	add    ah,cl
  4353f0:	dec    eax
  4353f1:	lahf   
  4353f2:	jmp    FWORD PTR [ebx]
  4353f4:	cdq    
  4353f5:	inc    DWORD PTR [eax]
  4353f7:	add    dl,al
  4353f9:	sub    bh,bh
  4353fb:	aaa    
  4353fc:	test   BYTE PTR [ebx-0x1e9d0001],0xcc
  435403:	test   DWORD PTR [esi+0x0],ecx
  435406:	inc    DWORD PTR [eax]
  435408:	out    dx,eax
  435409:	lock (bad) 
  43540b:	jle    0x435433
  43540d:	(bad)  
  43540e:	inc    DWORD PTR [eax]
  435410:	mov    eax,ds:0x2f48ff47
  435415:	(bad)  
  435416:	inc    DWORD PTR [eax]
  435418:	cmp    DWORD PTR [ecx-0x7d],0xffffffcc
  43541c:	das    
  43541d:	dec    esp
  43541f:	dec    DWORD PTR [ebx]
  435421:	lods   eax,DWORD PTR ds:[esi]
  435422:	add    bl,dh
  435424:	and    BYTE PTR [ebx-0x631f0100],al
  43542a:	push   DWORD PTR [ecx+edi*1]
  43542d:	dec    DWORD PTR [ecx+0x9e7600]
  435433:	xchg   edi,eax
  435434:	icebp  
  435435:	add    BYTE PTR [eax],al
  435437:	push   DWORD PTR [eax]
  435439:	stos   BYTE PTR es:[edi],al
  43543a:	add    BYTE PTR [edx],ch
  43543c:	pop    edi
  43543d:	cmp    edi,0xffffff89
  435440:	lahf   
  435441:	pop    ecx
  435442:	add    esp,0xffffffd2
  435445:	int3   
  435446:	add    bh,bh
  435448:	stc    
  435449:	xchg   edi,eax
  43544a:	push   DWORD PTR [ebp+ebp*4-0xa007c01]
  435451:	(bad)  
  435452:	(bad)  
  435453:	in     al,dx
  435454:	dec    edi
  435455:	int3   
  435456:	inc    DWORD PTR [eax]
  435458:	fisttp WORD PTR [esi-0x34]
  43545b:	sbb    DWORD PTR [esi-0x78000100],edx
  435461:	mov    cl,0xff
  435463:	xor    ebp,DWORD PTR [esi-0x34]
  435466:	add    BYTE PTR [eax],al
  435468:	xchg   edi,eax
  435469:	xor    al,0xff
  43546b:	sub    ch,BYTE PTR [esi+0x0]
  43546e:	(bad)  
  43546f:	push   DWORD PTR [ebp-0x21]
  435472:	(bad)  
  435473:	cli    
  435474:	add    BYTE PTR [ecx+0x19e600ff],cl
  43547a:	(bad)  
  43547b:	js     0x4354f9
  43547d:	add    BYTE PTR [ecx-0x7ccd6a01],cl
  435483:	lock sar bh,1
  435486:	(bad)  
  435487:	call   FWORD PTR [ecx-0x5906ff25]
  43548d:	or     esp,0x0
  435490:	xchg   edi,eax
  435491:	mov    al,0xff
  435493:	jno    0x435502
  435495:	dec    esp
  435497:	call   DWORD PTR [ebx+0x2de2ff8f]
  43549d:	mov    edi,edi
  43549f:	jmp    FWORD PTR [esi+0x7c]
  4354a2:	adc    DWORD PTR [edi+eiz*8-0x7d],0xffffff83
  4354a7:	add    BYTE PTR [esi+0x48f0032],dh
  4354ad:	add    ah,cl
  4354af:	add    dh,bh
  4354b1:	mov    bl,0xff
  4354b3:	or     BYTE PTR [esi+0x0],ah
  4354b6:	(bad)  
  4354b7:	call   FWORD PTR [edi+0x6]
  4354ba:	call   FWORD PTR [ecx+0x38]
  4354bd:	add    DWORD PTR [eax],0xffffffff
  4354c0:	stos   BYTE PTR es:[edi],al
  4354c1:	aad    0xff
  4354c3:	arpl   WORD PTR [edi],bx
  4354c5:	int3   
  4354c6:	inc    DWORD PTR [ebx-0x1dff0fca]
  4354cc:	sar    bh,cl
  4354ce:	cmp    edi,0x73
  4354d1:	xor    eax,0xb64bff
  4354d6:	inc    DWORD PTR [ebx-0x627c49dd]
  4354dc:	mov    bh,0xff
  4354de:	add    bh,bh
  4354e0:	adc    DWORD PTR ds:0x8302ff,esi
  4354e6:	(bad)  
  4354e7:	jmp    FWORD PTR [ecx]
  4354e9:	int3   
  4354ea:	add    ah,cl
  4354ec:	rol    DWORD PTR [eax],cl
  4354ee:	(bad)  
  4354ef:	call   FWORD PTR [ebp+0x1f8f89db]
  4354f5:	inc    DWORD PTR [ebx+0x6452ff]
  4354fb:	je     0x4354a8
  4354fd:	(bad)  
  4354fe:	(bad)  
  4354ff:	call   DWORD PTR [edi]
  435501:	cmp    edi,edi
  435503:	push   0xffffffe9
  435508:	out    dx,al
  435509:	int    0xff
  43550b:	push   esi
  43550c:	push   edx
  43550d:	(bad)  
  43550e:	inc    DWORD PTR [eax]
  435510:	in     eax,dx
  435511:	aam    0x83
  435513:	sub    ecx,DWORD PTR [eax-0x1]
  435516:	(bad)  
  435517:	(bad)  
  435518:	jns    0x435530
  43551a:	(bad)  
  43551b:	mov    ecx,0xffffff3e
  435520:	es jbe 0x435523
  435523:	xor    BYTE PTR [eax],dh
  435525:	(bad)  
  435526:	(bad)  
  435527:	(bad)  
  435528:	mov    ebx,0x8f1cff43
  43552d:	(bad)  
  43552e:	(bad)  
  43552f:	call   edx
  435531:	or     eax,0xb5beff
  435536:	add    bh,bh
  435538:	inc    eax
  435539:	xor    cl,BYTE PTR [ecx-0x9107]
  43553f:	add    BYTE PTR [ecx+0x4e3f004e],al
  435545:	(bad)  
  435546:	(bad)  
  435547:	push   DWORD PTR [esi+edx*8+0x2906ff]
  43554e:	add    bh,bh
  435550:	sub    BYTE PTR [edi+edi*8+0x7f],bl
  435554:	xor    edi,edi
  435556:	(bad)  
  435557:	jmp    FWORD PTR [ebx+0x9]
  43555a:	push   DWORD PTR [esi+0xcccc40]
  435560:	cmp    al,0xd
  435562:	add    BYTE PTR [ecx+0x19],ch
  435565:	inc    DWORD PTR [ebx+0x79200]
  43556b:	in     al,0x3a
  43556d:	(bad)  
  43556e:	(bad)  
  43556f:	(bad)  
  435570:	fist   WORD PTR [ebp-0xfa8e34]
  435576:	dec    esp
  435578:	pop    ds
  435579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43557a:	add    cl,cl
  43557c:	je     0x43557d
  43557e:	mov    edi,edi
  435580:	into   
  435581:	xchg   ebp,eax
  435582:	add    BYTE PTR [ebx+0x55],ch
  435585:	(bad)  
  435586:	inc    DWORD PTR [eax]
  435588:	sub    esi,ebx
  43558a:	dec    DWORD PTR [edx-0x7c3344]
  435590:	pop    ss
  435591:	(bad)  
  435592:	jmp    ecx
  435594:	dec    eax
  435595:	inc    DWORD PTR [ebx-0x303b00]
  43559b:	call   0xe069:0x8900002f
  4355a2:	add    BYTE PTR [eax+edx*1],bl
  4355a5:	(bad)  
  4355a6:	inc    DWORD PTR [eax]
  4355a8:	push   ecx
  4355a9:	js     0x435534
  4355ab:	das    
  4355ac:	pop    edi
  4355ad:	inc    DWORD PTR [eax]
  4355af:	(bad)  
  4355b0:	jmp    0x435611
  4355b2:	add    BYTE PTR [ecx-0x7c50],cl
  4355b8:	xchg   BYTE PTR [esi],dh
  4355ba:	sbb    DWORD PTR [edi+0xff00ec],0xffffffe6
  4355c1:	ds dec ebp
  4355c4:	fadd   DWORD PTR [eax]
  4355c6:	(bad)  
  4355c7:	call   FWORD PTR [ebx+0x1cb90022]
  4355cd:	inc    DWORD PTR [eax]
  4355cf:	mov    ebx,ecx
  4355d1:	jmp    DWORD PTR cs:[ebx+edx*4]
  4355d5:	cmp    edi,0xffffffff
  4355d8:	imul   BYTE PTR [ebx+0x0]
  4355db:	es or  al,0xff
  4355de:	(bad)  
  4355df:	jmp    DWORD PTR [ebp+ebp*8+0x0]
  4355e3:	inc    ebx
  4355e4:	add    eax,0x8683ffff
  4355e9:	stos   BYTE PTR es:[edi],al
  4355ea:	(bad)  
  4355eb:	mov    edx,0xffff8351
  4355f0:	cwde   
  4355f1:	or     BYTE PTR [ecx-0x1697],0xcc
  4355f8:	ds or  eax,0xff981000
  4355fe:	inc    DWORD PTR [eax]
  435600:	cmp    eax,0x6543830b
  435605:	cmp    edi,0x0
  435608:	inc    edi
  435609:	mov    eax,ds:0x885dff
  43560e:	add    DWORD PTR [eax],0x13
  435611:	cmp    edi,0x39
  435614:	add    edi,edi
  435616:	add    BYTE PTR [eax],al
  435618:	retw   
  43561a:	push   DWORD PTR [ecx]
  43561c:	sbb    al,0x0
  43561e:	inc    DWORD PTR [eax]
  435620:	xlat   BYTE PTR ds:[ebx]
  435621:	mov    al,BYTE PTR [ebx-0xff8aee]
  435627:	(bad)  
  435628:	cmp    dh,BYTE PTR [edx-0x1]
  43562b:	inc    ebp
  43562c:	sbb    edi,edi
  43562e:	inc    DWORD PTR [eax]
  435630:	jge    0x4356a6
  435632:	dec    DWORD PTR [edx+0x55]
  435635:	(bad)  
  435636:	dec    esp
  435638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435639:	fild   WORD PTR [eax]
  43563b:	rol    DWORD PTR [ecx+0x77008300],1
  435641:	inc    esi
  435642:	add    BYTE PTR [edx+0x57],ch
  435645:	cmp    edi,0xffffffcc
  435648:	jns    0x43560a
  43564a:	(bad)  
  43564b:	sti    
  43564c:	sbb    edi,edi
  43564e:	dec    esp
  435650:	stc    
  435651:	pop    ebx
  435652:	add    al,bl
  435654:	adc    bh,bh
  435656:	add    bh,bh
  435658:	les    edi,FWORD PTR [eax+0x3f9683]
  43565e:	int3   
  43565f:	mov    DWORD PTR [edx+0xa],esi
  435662:	adc    DWORD PTR [ebp-0x47],0x0
  435666:	inc    DWORD PTR [ebx+0x389d714]
  43566c:	lock add bh,bh
  43566f:	add    BYTE PTR [edx-0x41],bh
  435672:	add    BYTE PTR [ebx+0x2a],al
  435675:	cmp    edi,0xffffff83
  435678:	adc    al,0xe6
  43567a:	call   FWORD PTR [edi]
  43567c:	out    dx,al
  43567d:	inc    DWORD PTR [ebx+0x611589]
  435683:	sbb    dh,ch
  435685:	inc    DWORD PTR [eax]
  435687:	add    cl,ah
  435689:	jne    0x43568b
  43568b:	ret    
  43568c:	pop    ebx
  43568d:	add    ah,cl
  43568f:	dec    DWORD PTR [edx+0x7104005b]
  435695:	cmp    edi,0xffffffff
  435698:	mov    edi,0xaafdff71
  43569d:	(bad)  
  43569e:	(bad)  
  43569f:	(bad)  
  4356a0:	mov    esp,0xa8dbff05
  4356a5:	(bad)  
  4356a6:	(bad)  
  4356a7:	push   esi
  4356a9:	push   esi
  4356aa:	add    BYTE PTR [esp+ebp*2],dl
  4356ad:	add    BYTE PTR [eax],al
  4356af:	sub    ecx,0xffffffea
  4356b2:	add    BYTE PTR [eax],ch
  4356b4:	retf   0xffff
  4356b7:	dec    DWORD PTR [ebp+0x78]
  4356ba:	dec    ebx
  4356bc:	loop   0x435641
  4356be:	inc    DWORD PTR [eax]
  4356c0:	mov    dh,0xde
  4356c2:	int3   
  4356c3:	pop    ss
  4356c4:	pushf  
  4356c5:	add    BYTE PTR [ecx-0x7cd4cb00],cl
  4356cb:	jno    0x43572a
  4356cd:	int3   
  4356ce:	inc    DWORD PTR [eax]
  4356d0:	mov    ss,ecx
  4356d2:	add    BYTE PTR [ebx],cl
  4356d4:	jns    0x4356d5
  4356d6:	(bad)  
  4356d7:	push   ecx
  4356d9:	adc    edi,edi
  4356db:	adc    eax,0xffffff64
  4356e0:	dec    ebp
  4356e1:	sub    DWORD PTR [ecx+0x7d2d],ecx
  4356e7:	int3   
  4356e8:	data16 in al,0x0
  4356eb:	cmp    DWORD PTR [ecx-0x6e330100],ebx
  4356f1:	push   es
  4356f2:	call   FWORD PTR ds:0xff0089df
  4356f8:	sub    al,0xb5
  4356fa:	add    BYTE PTR [edi-0xff33e7],dh
  435700:	and    DWORD PTR [ebp+0x0],edx
  435703:	rcl    DWORD PTR [esi-0x62000001],1
  435709:	call   FWORD PTR es:[ecx]
  43570c:	repnz (bad) 
  43570e:	inc    DWORD PTR [eax]
  435710:	or     al,0x3b
  435712:	call   DWORD PTR [eax]
  435714:	sub    al,0x89
  435716:	inc    DWORD PTR [eax]
  435718:	repnz lock (bad) 
  43571b:	mov    edi,0xffff83ed
  435720:	add    al,BYTE PTR [ecx]
  435722:	add    bl,dh
  435724:	sub    DWORD PTR [ebx-0x59fd7700],eax
  43572a:	dec    DWORD PTR [eax]
  43572c:	sahf   
  43572d:	add    bh,bh
  43572f:	mov    DWORD PTR [esp+eiz*8+0x0],edx
  435733:	adc    BYTE PTR [ebx],ah
  435735:	(bad)  
  435736:	(bad)  
  435737:	jmp    esi
  435739:	loope  0x4356be
  43573b:	lahf   
  43573c:	mov    ebp,0x6400ff00
  435741:	test   eax,0x89b9b400
  435746:	(bad)  
  435747:	push   ebx
  435749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43574a:	dec    DWORD PTR [eax-0xfffffc]
  435750:	jg     0x4357ba
  435752:	(bad)  
  435753:	js     0x4357a6
  435755:	add    ah,cl
  435757:	xor    DWORD PTR [edi-0x6a],0xffffffff
  43575b:	cmp    BYTE PTR ss:[eax],al
  43575e:	(bad)  
  43575f:	inc    DWORD PTR [esi+0x1fa1ff95]
  435765:	add    DWORD PTR [eax],0xffffffff
  435768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435769:	outs   dx,BYTE PTR ds:[esi]
  43576a:	int3   
  43576b:	mov    BYTE PTR [ecx-0x1],dl
  43576e:	(bad)  
  43576f:	call   eax
  435771:	popf   
  435772:	call   FWORD PTR [ecx-0x6d]
  435775:	add    BYTE PTR [eax],al
  435777:	push   DWORD PTR [ebx+0x4a]
  43577a:	mov    DWORD PTR [ebx-0x58],edi
  43577d:	int3   
  43577e:	add    BYTE PTR [eax],al
  435780:	rcr    ecx,0xff
  435783:	jb     0x435727
  435785:	or     DWORD PTR [ecx-0xc94234],0xffffffe9
  43578c:	mov    edi,?
  43578e:	int3   
  43578f:	add    BYTE PTR [ebp+0x367d833a],dl
  435795:	add    DWORD PTR [eax],0xffffffff
  435798:	pop    ecx
  435799:	repz jmp ebx
  43579c:	jle    0x43579d
  43579e:	(bad)  
  43579f:	dec    DWORD PTR [ecx]
  4357a1:	cmp    bh,bh
  4357a3:	mov    bl,0xb4
  4357a5:	(bad)  
  4357a6:	inc    DWORD PTR [ebx-0x127ca7f2]
  4357ac:	repnz int3 
  4357ae:	(bad)  
  4357af:	dec    DWORD PTR [ebp+0x7d4883cf]
  4357b5:	int3   
  4357b6:	(bad)  
  4357b7:	(bad)  
  4357b8:	mov    esp,0xc0b9ffa4
  4357bd:	dec    DWORD PTR [ecx-0x76255901]
  4357c3:	inc    esi
  4357c4:	aam    0x0
  4357c6:	add    bh,bh
  4357c8:	daa    
  4357c9:	jae    0x4357cb
  4357cb:	ss std 
  4357cd:	mov    edi,edi
  4357cf:	mov    eax,esi
  4357d1:	sub    bh,bh
  4357d3:	loop   0x4357d3
  4357d5:	inc    DWORD PTR [ebx-0x5f1877]
  4357db:	sub    eax,0x83ff7e
  4357e0:	test   DWORD PTR [edi+0x0],ebx
  4357e3:	gs aas 
  4357e5:	dec    DWORD PTR [ecx-0x211001]
  4357eb:	fsub   st,st(4)
  4357ed:	inc    DWORD PTR [eax]
  4357ef:	add    bl,ah
  4357f1:	cmp    BYTE PTR [eax],al
  4357f3:	sub    al,0x2f
  4357f5:	add    BYTE PTR [eax],al
  4357f7:	dec    DWORD PTR [edi+0x42]
  4357fa:	xor    ebp,0xfffffff5
  4357fd:	(bad)  
  4357fe:	(bad)  
  4357ff:	inc    DWORD PTR [eax-0x59]
  435802:	(bad)  
  435803:	mov    eax,0xff0000da
  435808:	xor    bh,BYTE PTR [edi]
  43580a:	call   DWORD PTR [esp+ebx*8-0x1]
  43580e:	add    bh,bh
  435810:	xlat   BYTE PTR ds:[ebx]
  435811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435812:	push   DWORD PTR [edi+eiz*8+0x1c838900]
  435819:	into   
  43581a:	add    BYTE PTR [edi-0x2],dl
  43581d:	(bad)  
  43581e:	inc    DWORD PTR [eax]
  435820:	idiv   dh
  435822:	mov    ecx,ebx
  435824:	mov    edi,0x33ffcc83
  435829:	cld    
  43582a:	mov    DWORD PTR [edi+0xfffd],esp
  435830:	gs jl  0x4357b6
  435833:	iret   
  435834:	add    eax,0x9300ff00
  435839:	in     al,dx
  43583a:	inc    DWORD PTR [edi]
  43583c:	mov    BYTE PTR [eax],0x0
  43583f:	int3   
  435840:	pop    esp
  435841:	lock call FWORD PTR [ecx-0x33ff005a]
  435848:	mov    es,WORD PTR [esi-0x491a01]
  43584e:	int3   
  43584f:	add    bh,al
  435851:	xchg   esp,eax
  435852:	(bad)  
  435853:	jge    0x43582a
  435855:	add    bh,bh
  435857:	add    BYTE PTR [edi],al
  435859:	mov    esi,0x8380deff
  43585e:	(bad)  
  43585f:	inc    DWORD PTR [edx]
  435861:	mov    WORD PTR [eax],es
  435863:	bound  ebp,QWORD PTR [eax-0x1]
  435866:	add    bh,bh
  435868:	mov    dx,0x8289
  43586c:	jmp    0xff31:0x340083ff
  435873:	repnz xchg edi,eax
  435875:	add    BYTE PTR [eax],al
  435877:	adc    DWORD PTR [edi-0x7528ffab],0x0
  43587e:	mov    edi,edi
  435880:	dec    edx
  435881:	pop    eax
  435882:	push   DWORD PTR [edi-0x51]
  435885:	add    bh,bh
  435887:	sbb    DWORD PTR [edx+0x3c],0xffffffff
  43588b:	bound  esp,QWORD PTR [ebx]
  43588d:	mov    DWORD PTR [eax],eax
  43588f:	dec    DWORD PTR [ecx-0x455a33d3]
  435895:	(bad)  
  435896:	(bad)  
  435897:	call   DWORD PTR [ecx]
  435899:	add    edi,edi
  43589b:	adc    bh,BYTE PTR [ebx+eax*4-0x1]
  43589f:	dec    DWORD PTR [ebx-0x64]
  4358a2:	mov    DWORD PTR ds:0xff008335,esi
  4358a8:	nop
  4358a9:	pusha  
  4358aa:	call   FWORD PTR [ebx-0xff007d]
  4358b0:	imul   ebp,DWORD PTR [ebx-0xb20034],0xffffffcc
  4358b7:	or     ebp,0xffffffd8
  4358ba:	jmp    FWORD PTR [edx+0x2b]
  4358bd:	add    ah,cl
  4358bf:	(bad)  
  4358c0:	out    dx,al
  4358c1:	or     eax,DWORD PTR [eax]
  4358c3:	mov    esi,0xffff83c0
  4358c8:	xor    DWORD PTR [edx-0x1],0xff3dd6
  4358cf:	add    BYTE PTR [edx-0x12ec002c],bh
  4358d5:	or     DWORD PTR [ecx+0x696f00],0xffffffad
  4358dc:	aam    0xff
  4358de:	add    BYTE PTR [eax],al
  4358e0:	xor    bl,BYTE PTR [ebp-0x414d34]
  4358e6:	add    BYTE PTR [ebx-0x6b007120],al
  4358ec:	sahf   
  4358ed:	dec    DWORD PTR [ecx+0x8e4683]
  4358f3:	jle    0x4358be
  4358f5:	inc    DWORD PTR [eax]
  4358f7:	add    dl,al
  4358f9:	jg     0x43587e
  4358fb:	out    dx,eax
  4358fc:	test   al,0xcc
  4358fe:	(bad)  
  4358ff:	inc    DWORD PTR [edx-0x4f]
  435902:	add    BYTE PTR [edi+ebp*1+0x2c00ff89],bl
  435909:	xlat   BYTE PTR ds:[ebx]
  43590a:	jmp    DWORD PTR ds:0xffffff81
  435910:	jno    0x435964
  435912:	call   ebx
  435914:	sbb    eax,0xc883ff89
  435919:	stc    
  43591a:	push   eax
  43591c:	mov    dh,0xff
  43591e:	or     esp,0x5b
  435921:	jnp    0x435922
  435923:	daa    
  435924:	scas   al,BYTE PTR es:[edi]
  435925:	or     esp,0x0
  435928:	aam    0x2
  43592a:	call   FWORD PTR ds:0xffff833b
  435930:	mov    al,ds:0x30dcffc1
  435935:	add    BYTE PTR [ebx-0x704101],al
  43593b:	dec    edx
  43593c:	out    dx,al
  43593d:	inc    DWORD PTR [eax]
  43593f:	call   DWORD PTR [edi-0x4]
  435942:	int3   
  435943:	xchg   ecx,eax
  435944:	add    BYTE PTR ds:[eax],al
  435947:	add    cl,ah
  435949:	and    edi,edi
  43594b:	jno    0x4358e2
  43594d:	inc    DWORD PTR [eax]
  43594f:	mov    esp,ebx
  435951:	xor    bh,bh
  435953:	rol    DWORD PTR [ebx+0x35ff00ff],1
  435959:	mov    ecx,0xffaf80ff
  43595e:	int3   
  43595f:	call   FWORD PTR [edi+0x575eff5f]
  435965:	add    bh,bh
  435967:	add    BYTE PTR [eax+0x6d],al
  43596a:	inc    DWORD PTR [ebx+edx*4-0x1]
  43596e:	add    BYTE PTR [ebx+0x73ffbf1a],al
  435974:	mov    ch,0xcc
  435976:	add    bh,bh
  435978:	push   ebx
  435979:	daa    
  43597a:	add    BYTE PTR [ebp+ecx*1+0x0],bl
  43597e:	add    bh,bh
  435980:	sbb    al,0xfe
  435982:	(bad)  
  435983:	js     0x435984
  435985:	inc    DWORD PTR [eax]
  435987:	int3   
  435988:	ss inc ebx
  43598a:	add    BYTE PTR [ebx+0xff7e],al
  435990:	pop    ds
  435991:	or     BYTE PTR [ecx-0x337c3f1c],0x0
  435998:	loopne 0x435993
  43599a:	call   FWORD PTR [ecx+0x58]
  43599d:	add    DWORD PTR [ebx-0x7c3c9134],0xffffffd4
  4359a4:	add    bh,bh
  4359a6:	cmp    edi,0xffffffa8
  4359a9:	ins    BYTE PTR es:[edi],dx
  4359aa:	add    BYTE PTR [edx+0x8300b4],bh
  4359b0:	jns    0x435a03
  4359b2:	mov    DWORD PTR [ecx+0xffff8f],esi
  4359b8:	mov    eax,ecx
  4359ba:	call   ecx
  4359bc:	loopne 0x4359bd
  4359be:	(bad)  
  4359bf:	jmp    DWORD PTR ds:0x7ec3ffd5
  4359c5:	add    BYTE PTR [eax],al
  4359c7:	add    BYTE PTR [ecx-0x4c],ah
  4359ca:	add    al,bh
  4359cc:	sbb    edi,edi
  4359ce:	int3   
  4359cf:	push   eax
  4359d1:	mov    edi,0xcc5f48ff
  4359d6:	add    BYTE PTR [eax],al
  4359d8:	pop    eax
  4359d9:	pop    ebp
  4359da:	jmp    FWORD PTR [ecx+ebx*2]
  4359dd:	add    bh,bh
  4359df:	int3   
  4359e0:	out    dx,al
  4359e1:	xchg   esi,eax
  4359e2:	and    DWORD PTR [esp+ebx*2],0xffffffff
  4359e6:	int3   
  4359e7:	add    BYTE PTR [ebp+0x2d5bff16],dh
  4359ed:	int3   
  4359ee:	add    BYTE PTR [eax],al
  4359f0:	lods   al,BYTE PTR ds:[esi]
  4359f1:	jae    0x4359f3
  4359f3:	out    0xc9,eax
  4359f5:	add    bh,bh
  4359f7:	int3   
  4359f8:	ja     0x435a19
  4359fa:	(bad)  
  4359fb:	jns    0x435a0f
  4359fd:	mov    edi,edi
  4359ff:	inc    DWORD PTR [edx+ebp*8-0x55f401]
  435a06:	or     esp,0x23
  435a09:	out    dx,al
  435a0a:	jmp    DWORD PTR [ecx+0x18]
  435a0d:	inc    DWORD PTR [ebx-0x45e301]
  435a13:	or     al,0x16
  435a15:	mov    edi,edi
  435a17:	and    DWORD PTR [eax+0x6f],0xffffffff
  435a1b:	in     al,0x34
  435a1d:	inc    DWORD PTR [eax]
  435a1f:	(bad)  
  435a20:	jl     0x4359fa
  435a22:	add    BYTE PTR [esi+0x7a],ch
  435a25:	inc    DWORD PTR [ebx-0x7cd66d01]
  435a2b:	call   0x432712
  435a30:	gs mov bh,0xff
  435a33:	(bad)  
  435a34:	(bad)  
  435a35:	(bad)  
  435a36:	(bad)  
  435a37:	call   FWORD PTR [ebx]
  435a39:	call   0x8357983d
  435a3e:	dec    esp
  435a40:	cmp    dl,BYTE PTR [eax+eax*1]
  435a43:	xchg   DWORD PTR [ecx+0x42cc00ff],ebp
  435a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a4a:	and    edx,0x30
  435a4d:	dec    esp
  435a4f:	inc    esp
  435a51:	mov    edi,0xff9cd700
  435a56:	dec    esp
  435a58:	adc    DWORD PTR [ebp+0x7d3e00],esi
  435a5e:	add    DWORD PTR [eax],0xffffff91
  435a61:	xor    al,BYTE PTR [eax]
  435a63:	stos   DWORD PTR es:[edi],eax
  435a64:	xchg   bh,bh
  435a66:	add    BYTE PTR [eax],al
  435a68:	jp     0x435ada
  435a6a:	add    bh,bh
  435a6c:	sbb    al,0xff
  435a6e:	add    BYTE PTR [ebx-0x287c18bb],al
  435a74:	xor    al,BYTE PTR [eax]
  435a76:	(bad)  
  435a77:	(bad)  
  435a78:	out    dx,al
  435a79:	arpl   WORD PTR [eax],ax
  435a7b:	pushf  
  435a7c:	sti    
  435a7d:	int3   
  435a7e:	add    BYTE PTR [eax],al
  435a80:	cld    
  435a81:	scas   eax,DWORD PTR es:[edi]
  435a82:	int3   
  435a83:	ss mov esp,0x5500cc83
  435a89:	or     bh,bh
  435a8b:	fld    DWORD PTR [esi-0x34]
  435a8e:	add    BYTE PTR [ebx+0x1e83de4a],al
  435a94:	sbb    eax,DWORD PTR [ebx-0x69250001]
  435a9a:	jmp    DWORD PTR [ecx-0x7676f5]
  435aa0:	fs cmp edi,0xff890c96
  435aa7:	add    BYTE PTR [edi-0x32],ch
  435aaa:	mov    DWORD PTR [ebx+0x12],esp
  435aad:	cmp    edi,0x0
  435ab0:	add    al,0x44
  435ab2:	int3   
  435ab3:	mov    esp,0xff00005e
  435ab8:	sub    BYTE PTR [ebp-0x1],0x2d
  435abc:	out    0xff,eax
  435abe:	add    bh,bh
  435ac0:	mov    esp,0xfa8a83f0
  435ac5:	add    bh,bh
  435ac7:	mov    DWORD PTR [ebx+0x49b00c9],ecx
  435acd:	(bad)  
  435ace:	(bad)  
  435acf:	jmp    DWORD PTR [esi+0xf]
  435ad2:	add    ah,ch
  435ad4:	adc    edi,edi
  435ad6:	(bad)  
  435ad7:	jmp    DWORD PTR [edx]
  435ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ada:	push   eax
  435adc:	jne    0x435ade
  435ade:	inc    DWORD PTR [eax]
  435ae0:	fnstsw ax
  435ae2:	int3   
  435ae3:	imul   ecx,DWORD PTR [esi+0x0],0x61668300
  435aea:	(bad)  
  435aeb:	mov    esi,0xffffffd1
  435af0:	xchg   BYTE PTR [ebx],bl
  435af2:	add    BYTE PTR [esi+0x89897f],dl
  435af8:	in     al,0x9c
  435afa:	inc    DWORD PTR ds:0xcc00ff2f
  435b00:	in     al,dx
  435b01:	call   0xff89:0xff8c9983
  435b08:	xchg   esi,eax
  435b09:	inc    ebx
  435b0a:	add    BYTE PTR [edx+esi*8-0x2b000001],ch
  435b11:	add    BYTE PTR [ebx-0xff74da],0x0
  435b18:	cdq    
  435b19:	push   cs
  435b1a:	inc    DWORD PTR [esi-0x3300ff25]
  435b20:	gs ret 0x5cc
  435b24:	into   
  435b25:	add    bh,bh
  435b27:	or     DWORD PTR [eax],0xfffffffa
  435b2a:	add    BYTE PTR [ecx-0x7a],bh
  435b2d:	add    BYTE PTR [eax],al
  435b2f:	dec    DWORD PTR [ebx+eiz*8-0x7635a601]
  435b36:	add    bh,bh
  435b38:	fild   WORD PTR [esi]
  435b3a:	add    BYTE PTR [edi],bl
  435b3c:	stos   DWORD PTR es:[edi],eax
  435b3d:	inc    DWORD PTR [eax]
  435b3f:	add    BYTE PTR ds:0x1c5eff11,bh
  435b45:	mov    DWORD PTR [eax],eax
  435b47:	dec    DWORD PTR [ebx+ebp*4]
  435b4a:	int3   
  435b4b:	pop    eax
  435b4c:	mov    esp,0xcaff8300
  435b51:	inc    ebx
  435b52:	push   DWORD PTR [eax+0x89ff22]
  435b58:	mov    edx,0xa18283ed
  435b5d:	add    BYTE PTR [eax],al
  435b5f:	(bad)  
  435b60:	in     eax,dx
  435b61:	and    edi,edi
  435b63:	xor    esi,DWORD PTR [ecx-0x7d]
  435b66:	(bad)  
  435b67:	push   DWORD PTR [eax]
  435b69:	fisttp QWORD PTR [ecx-0xff43d4]
  435b6f:	dec    DWORD PTR [ebx+0x5940ff41]
  435b75:	add    ah,cl
  435b77:	add    BYTE PTR [ecx-0x42],ch
  435b7a:	push   DWORD PTR [edi+0xffe9]
  435b80:	push   esi
  435b81:	xchg   ebp,eax
  435b82:	dec    DWORD PTR [edi+0x15]
  435b85:	add    BYTE PTR [eax],al
  435b87:	adc    DWORD PTR [edx-0x3f30ffba],0x0
  435b8e:	(bad)  
  435b8f:	jmp    DWORD PTR [eax+edx*8-0x1]
  435b93:	les    ebx,FWORD PTR [edi+0x0]
  435b96:	dec    DWORD PTR [ecx-0x457c225d]
  435b9c:	or     edi,edi
  435b9e:	int3   
  435b9f:	call   DWORD PTR [ebp+ebx*2-0x76c38d01]
  435ba6:	dec    DWORD PTR [ecx-0x7471]
  435bac:	rol    DWORD PTR [eax],1
  435bae:	(bad)  
  435baf:	inc    DWORD PTR [ecx+0x77]
  435bb2:	xor    DWORD PTR [ebp+edx*4-0x1],0xffffffff
  435bb7:	jmp    DWORD PTR [ecx-0x18]
  435bba:	sbb    esp,0xffffffce
  435bbd:	dec    esp
  435bbf:	jmp    DWORD PTR [edx-0x7c]
  435bc2:	jmp    FWORD PTR [ecx+0xff22]
  435bc8:	pop    ss
  435bc9:	mov    dl,0xff
  435bcb:	xchg   DWORD PTR cs:[eax],eax
  435bce:	(bad)  
  435bcf:	(bad)  
  435bd0:	out    dx,al
  435bd1:	push   eax
  435bd2:	int3   
  435bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435bd4:	inc    edx
  435bd5:	inc    DWORD PTR [ebx-0x76df1601]
  435bdb:	shl    DWORD PTR [ebx],1
  435bdd:	inc    DWORD PTR [eax]
  435bdf:	and    DWORD PTR [esi+eax*8-0x7c2ab600],0x0
  435be7:	push   ebx
  435be9:	push   esp
  435bea:	mov    DWORD PTR [esp+esi*2],ecx
  435bed:	add    bh,bh
  435bef:	add    BYTE PTR [edx-0x32],dh
  435bf2:	dec    edx
  435bf4:	or     edi,edi
  435bf6:	inc    DWORD PTR [eax]
  435bf8:	push   eax
  435bf9:	scas   eax,DWORD PTR es:[edi]
  435bfa:	add    cl,al
  435bfc:	sbb    eax,0x3fff83ff
  435c01:	fild   WORD PTR [ebx-0x7cffe142]
  435c07:	int3   
  435c08:	test   BYTE PTR [ecx+0x67e4ff],dl
  435c0e:	mov    DWORD PTR [eax],eax
  435c10:	jnp    0x435c7d
  435c12:	push   DWORD PTR [edx+0x53]
  435c15:	(bad)  
  435c16:	(bad)  
  435c17:	jmp    FWORD PTR [edi]
  435c19:	fld    DWORD PTR [eax]
  435c1b:	cmp    edx,DWORD PTR [edi+edi*8-0x1]
  435c1f:	int3   
  435c20:	std    
  435c21:	inc    edx
  435c22:	mov    edx,ebp
  435c24:	sub    al,BYTE PTR [eax]
  435c26:	add    BYTE PTR [eax],al
  435c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c29:	ud0    ebx,DWORD PTR [ecx-0x76e8]
  435c30:	and    DWORD PTR [ebx],ebp
  435c32:	int3   
  435c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435c34:	ins    BYTE PTR es:[edi],dx
  435c35:	add    bh,bh
  435c37:	int3   
  435c38:	push   edi
  435c39:	inc    esi
  435c3a:	add    dh,ah
  435c3c:	call   0xff19:0xc2ff83ff
  435c43:	aaa    
  435c44:	(bad)  [ecx+0x169a8300]
  435c4a:	add    bh,dh
  435c4c:	mov    ds:0x53ff8989,eax
  435c51:	sbb    DWORD PTR es:0xccffff86,0xffffffa4
  435c59:	mov    WORD PTR [ebx-0x91a1],es
  435c5f:	add    al,cl
  435c61:	fdivr  st,st(7)
  435c63:	mov    esp,0x11
  435c68:	xlat   BYTE PTR ds:[ebx]
  435c69:	push   esp
  435c6a:	add    DWORD PTR ds:0xff00dc,0xffffff99
  435c71:	push   esp
  435c72:	push   DWORD PTR [ebp+0xff892d]
  435c78:	pop    esp
  435c79:	out    dx,eax
  435c7a:	add    BYTE PTR [edi],dh
  435c7c:	in     al,0x0
  435c7e:	inc    DWORD PTR [eax]
  435c80:	cmp    BYTE PTR [ebx-0x1],bl
  435c83:	mov    cl,0x20
  435c85:	add    ah,cl
  435c87:	jmp    DWORD PTR [ebx+0x13]
  435c8a:	add    BYTE PTR [eax],dh
  435c8c:	pusha  
  435c8d:	(bad)  
  435c8e:	(bad)  
  435c8f:	call   FWORD PTR [ebx+0x257b007b]
  435c95:	inc    DWORD PTR [ebx+0xe225ff]
  435c9b:	aad    0x23
  435c9d:	(bad)  
  435c9e:	(bad)  
  435c9f:	(bad)  
  435ca0:	frstor [edi-0x77]
  435ca3:	dec    ecx
  435ca4:	outs   dx,BYTE PTR ds:[esi]
  435ca5:	cmp    edi,0x0
  435ca8:	cmp    cl,0x0
  435cab:	dec    ebp
  435cac:	xlat   BYTE PTR ds:[ebx]
  435cad:	dec    DWORD PTR [ecx+0x5268ff]
  435cb3:	scas   al,BYTE PTR es:[edi]
  435cb4:	lea    ecx,[ecx-0x2d313400]
  435cba:	add    BYTE PTR [esi+0x45],ch
  435cbd:	(bad)  
  435cbe:	inc    DWORD PTR [eax]
  435cc0:	call   DWORD PTR [ecx+0x0]
  435cc3:	inc    ecx
  435cc4:	or     eax,DWORD PTR [eax]
  435cc6:	inc    DWORD PTR [ebx+0x30ff5757]
  435ccc:	lahf   
  435ccd:	inc    DWORD PTR [eax]
  435ccf:	(bad)  
  435cd0:	std    
  435cd1:	(bad)  
  435cd2:	(bad)  
  435cd3:	(bad)  
  435cd5:	int3   
  435cd6:	int3   
  435cd7:	int3   
  435cd8:	mov    dh,BYTE PTR [edi]
  435cda:	cmp    DWORD PTR [edx+edx*8],0xffffffff
  435cde:	add    DWORD PTR [eax],0xffffffc5
  435ce1:	jmp    0xff7bebe6
  435ce6:	add    bh,bh
  435ce8:	cmp    esi,DWORD PTR [eax-0x1]
  435ceb:	xchg   esp,eax
  435cec:	(bad)  
  435ced:	(bad)  
  435cee:	(bad)  
  435cef:	jmp    DWORD PTR [edi-0x3c]
  435cf2:	add    BYTE PTR [ebp-0x28],dl
  435cf5:	inc    DWORD PTR [ebx-0x33d6287d]
  435cfb:	xor    bh,BYTE PTR [ebx]
  435cfd:	add    bh,bh
  435cff:	call   eax
  435d01:	mov    bh,bh
  435d03:	and    DWORD PTR [esi-0x34],0xaf89ffff
  435d0a:	add    al,bl
  435d0c:	(bad)  
  435d0d:	(bad)  
  435d0e:	inc    DWORD PTR [ebx+0x79007a79]
  435d14:	in     eax,dx
  435d15:	cmp    edi,0xffffffff
  435d18:	test   BYTE PTR [edi+edi*8+0x2a],ah
  435d1c:	inc    edi
  435d1d:	dec    DWORD PTR [ecx-0x2b5501]
  435d23:	push   esp
  435d24:	jg     0x435d26
  435d26:	inc    DWORD PTR [eax]
  435d28:	(bad)  
  435d29:	adc    eax,0x8322bbff
  435d2e:	add    BYTE PTR [ecx+0x27ff288a],cl
  435d34:	push   0xffffffff
  435d36:	add    bh,bh
  435d38:	repz jb 0x435d3a
  435d3b:	sub    DWORD PTR [eax+0x150083ff],ebp
  435d41:	int3   
  435d42:	jmp    DWORD PTR [ecx]
  435d44:	inc    ecx
  435d45:	add    BYTE PTR [eax],al
  435d47:	add    bh,ch
  435d49:	xor    DWORD PTR [eax],eax
  435d4b:	pop    eax
  435d4c:	les    eax,FWORD PTR [eax]
  435d4e:	inc    DWORD PTR [eax]
  435d50:	and    BYTE PTR [ebx-0x7d],0xb3
  435d54:	sub    al,BYTE PTR [eax]
  435d56:	add    BYTE PTR [eax],al
  435d58:	or     al,0x86
  435d5a:	xor    eax,0x0
  435d5d:	mov    esp,ecx
  435d5f:	call   DWORD PTR [ecx+0xc]
  435d62:	push   DWORD PTR [edx+ebx*8]
  435d65:	int3   
  435d66:	dec    esp
  435d68:	xor    BYTE PTR [eax-0x1],dl
  435d6b:	xchg   esi,eax
  435d6c:	test   eax,0xb900ffcc
  435d71:	stos   DWORD PTR es:[edi],eax
  435d72:	inc    DWORD PTR [eax]
  435d74:	mov    ah,0x83
  435d76:	add    ah,cl
  435d78:	ja     0x435da4
  435d7a:	inc    DWORD PTR [edx]
  435d7c:	mov    ds:0xb9ffff00,eax
  435d81:	mov    ds:0xff09c0ff,al
  435d86:	add    ah,cl
  435d88:	dec    edx
  435d89:	repnz add BYTE PTR [ecx],al
  435d8c:	(bad)  
  435d8e:	dec    esp
  435d90:	xchg   edi,eax
  435d91:	cdq    
  435d92:	push   DWORD PTR [edx]
  435d94:	std    
  435d95:	int3   
  435d96:	cmp    edi,0xfffffff2
  435d99:	xchg   ebx,eax
  435d9a:	or     ecx,0xfffffff7
  435d9d:	inc    DWORD PTR [ebx+0x863cff]
  435da3:	xor    al,BYTE PTR [edi-0x1affff01]
  435da9:	popa   
  435daa:	adc    esi,0x23
  435dad:	add    DWORD PTR [ebx-0xfddf01],0x65
  435db4:	je     0x435db5
  435db6:	(bad)  
  435db7:	jmp    FWORD PTR [esi-0x51b67c06]
  435dbd:	cmp    edi,0x0
  435dc0:	cld    
  435dc1:	aad    0x83
  435dc3:	dec    edi
  435dc4:	lock int3 
  435dc6:	int3   
  435dc7:	adc    DWORD PTR [edx+0x1fb5ff33],0x0
  435dce:	inc    DWORD PTR [eax]
  435dd0:	int3   
  435dd1:	push   esp
  435dd2:	(bad)  
  435dd3:	call   0x84432a6e
  435dd8:	loop   0x435e4e
  435dda:	(bad)  
  435ddb:	out    dx,eax
  435ddc:	(bad)  
  435ddf:	add    BYTE PTR [esp+edi*1],al
  435de2:	dec    esp
  435de4:	dec    esi
  435de5:	add    BYTE PTR [eax],al
  435de7:	jmp    FWORD PTR [ecx-0x263133e1]
  435ded:	int3   
  435dee:	inc    DWORD PTR [eax]
  435df0:	out    dx,al
  435df1:	and    eax,0xed1ff
  435df6:	add    BYTE PTR [ecx+0x6cff6a99],cl
  435dfc:	pop    esi
  435dfd:	dec    DWORD PTR [ecx+0xf38889]
  435e03:	pop    ds
  435e04:	jmp    0xba445d09
  435e09:	sbb    eax,0x97d2ff
  435e0e:	add    BYTE PTR [eax],al
  435e10:	cmp    eax,ecx
  435e12:	mov    DWORD PTR [edx],eax
  435e14:	ja     0x435e15
  435e16:	add    DWORD PTR [eax],0xfffffff9
  435e19:	stos   BYTE PTR es:[edi],al
  435e1a:	add    cl,cl
  435e1c:	test   BYTE PTR [ecx-0x4b9ff01],0xff
  435e23:	es inc ecx
  435e25:	inc    DWORD PTR [eax]
  435e27:	jmp    DWORD PTR [esi]
  435e29:	push   es
  435e2a:	sbb    DWORD PTR [eax],0x8
  435e2d:	add    BYTE PTR [eax],al
  435e2f:	add    dh,cl
  435e31:	and    edi,edi
  435e33:	(bad)  
  435e34:	arpl   WORD PTR [ebx+0x76268989],ax
  435e3a:	jmp    DWORD PTR [ecx+0x24]
  435e3d:	mov    DWORD PTR [eax],eax
  435e3f:	cmp    DWORD PTR [eax],0xffffffb1
  435e42:	add    BYTE PTR [ebx-0x5f],dh
  435e45:	(bad)  
  435e46:	(bad)  
  435e47:	jmp    DWORD PTR [esi]
  435e49:	(bad)  
  435e4a:	push   DWORD PTR [eax+0x59]
  435e4d:	(bad)  
  435e4e:	inc    DWORD PTR [ebx-0x6900fb37]
  435e54:	sbb    eax,0xd4ff0000
  435e59:	enter  0x989,0x55
  435e5d:	(bad)  
  435e5e:	(bad)  
  435e5f:	call   FWORD PTR [esp+eiz*4-0x7c104e34]
  435e66:	inc    DWORD PTR [ebx+0x13cc7c04]
  435e6c:	imul   edi,edi,0xffffff83
  435e6f:	add    ebx,0xfffffff6
  435e72:	(bad)  
  435e73:	cmp    edx,DWORD PTR [ebx+0x0]
  435e76:	add    bh,bh
  435e78:	fadd   DWORD PTR ss:[eax]
  435e7b:	push   esp
  435e7c:	icebp  
  435e7d:	int3   
  435e7e:	add    bh,bh
  435e80:	ss jb  0x435e4f
  435e83:	lods   eax,DWORD PTR ds:[esi]
  435e84:	jle    0x435e85
  435e86:	dec    DWORD PTR [ecx+0x7aff3cdc]
  435e8c:	jae    0x435e11
  435e8e:	add    bh,bh
  435e90:	push   edi
  435e91:	aad    0x83
  435e93:	mov    eax,0xffff0021
  435e98:	call   0x920de233
  435e9d:	(bad)  
  435e9e:	inc    DWORD PTR [ebx-0x320013fc]
  435ea4:	push   ebp
  435ea5:	inc    DWORD PTR [eax]
  435ea7:	jmp    DWORD PTR [edi+0x2d]
  435eaa:	call   FWORD PTR [edx-0xffff52]
  435eb0:	into   
  435eb1:	fs adc ebx,0x70
  435eb5:	int3   
  435eb6:	inc    DWORD PTR [eax]
  435eb8:	hlt    
  435eb9:	sbb    DWORD PTR [ecx+0x6127],ecx
  435ebf:	sbb    DWORD PTR [esi+ebx*1-0x34],0x54
  435ec4:	xor    eax,0xefff0000
  435ec9:	sub    al,0xff
  435ecb:	sub    eax,0xff00cf
  435ed0:	mov    edi,0x377fff63
  435ed5:	add    BYTE PTR [eax],al
  435ed7:	call   FWORD PTR [ecx-0x7428ff02]
  435edd:	add    bh,bh
  435edf:	push   DWORD PTR [edi-0x5a]
  435ee2:	mov    DWORD PTR [eax+0x4a],esi
  435ee5:	mov    DWORD PTR [eax],eax
  435ee7:	(bad)  
  435ee8:	cmp    bl,dl
  435eea:	int3   
  435eeb:	mov    esi,DWORD PTR [edx]
  435eed:	(bad)  
  435eee:	(bad)  
  435eef:	(bad)  
  435ef0:	jl     0x435f23
  435ef2:	mov    esi,edx
  435ef4:	ins    BYTE PTR es:[edi],dx
  435ef5:	add    BYTE PTR [ebx-0xf8e700],al
  435efb:	mov    fs,ebp
  435efd:	int3   
  435efe:	dec    esp
  435f00:	add    BYTE PTR [ebx],0x0
  435f03:	mov    edi,0x8300e2
  435f08:	daa    
  435f09:	cs call eax
  435f0c:	push   cs
  435f0d:	add    bh,bh
  435f0f:	call   FWORD PTR [ecx-0x29f37c5e]
  435f15:	inc    DWORD PTR [ebx-0x7ce0da01]
  435f1b:	fdivr  QWORD PTR [esi]
  435f1d:	inc    DWORD PTR [eax]
  435f1f:	add    BYTE PTR [ebx],dh
  435f21:	jecxz  0x435f22
  435f23:	or     DWORD PTR [edx],ebx
  435f25:	add    bh,bh
  435f27:	jmp    DWORD PTR [ecx]
  435f29:	jge    0x435f2b
  435f2b:	xor    al,0xa7
  435f2d:	inc    DWORD PTR [eax]
  435f2f:	add    DWORD PTR [ebp-0x1a],0xffffff89
  435f33:	jne    0x435f31
  435f35:	int3   
  435f36:	int3   
  435f37:	jmp    FWORD PTR [edx+eax*1+0xde0900]
  435f3e:	add    bh,bh
  435f40:	(bad)  [eax+0x398ff]
  435f46:	inc    DWORD PTR [ebx-0x5fff6b25]
  435f4c:	leave  
  435f4d:	add    BYTE PTR [eax],al
  435f4f:	jmp    DWORD PTR [edx+ebp*4-0x7d]
  435f53:	ss sub cl,ah
  435f56:	inc    DWORD PTR [eax]
  435f58:	cmp    cl,dh
  435f5a:	jmp    DWORD PTR ds:0xff83cc7b
  435f60:	inc    ebp
  435f61:	mov    WORD PTR [eax],es
  435f63:	ins    DWORD PTR es:[edi],dx
  435f64:	popf   
  435f65:	int3   
  435f66:	int3   
  435f67:	push   DWORD PTR [ebp+0x4f]
  435f6a:	add    dl,cl
  435f6c:	arpl   di,di
  435f6e:	int3   
  435f6f:	add    cl,dl
  435f71:	or     bh,bh
  435f73:	jmp    0x93e2:0xff0000ac
  435f7a:	dec    ebp
  435f7c:	std    
  435f7d:	(bad)  
  435f7e:	dec    esp
  435f80:	dec    ebp
  435f81:	rol    BYTE PTR [eax],0xc7
  435f84:	pop    ds
  435f85:	(bad)  
  435f86:	inc    DWORD PTR [ebx+0x64cc24a4]
  435f8c:	test   DWORD PTR [ecx-0x313a7d00],ecx
  435f92:	add    bh,bh
  435f94:	adc    eax,0x4aff8383
  435f99:	sbb    bh,bh
  435f9b:	jmp    0x84432c1a
  435fa0:	xchg   BYTE PTR [ebx-0x34],dl
  435fa3:	aam    0x10
  435fa5:	(bad)  
  435fa6:	inc    DWORD PTR [eax]
  435fa8:	dec    ecx
  435fa9:	dec    esp
  435faa:	dec    DWORD PTR [edi+eiz*2-0x1]
  435fae:	(bad)  
  435faf:	(bad)  
  435fb0:	cmp    al,0x88
  435fb2:	int3   
  435fb3:	mov    al,0xff
  435fb5:	add    BYTE PTR [ebx-0x3351ac7d],al
  435fbb:	push   ss
  435fbc:	xlat   BYTE PTR ds:[ebx]
  435fbd:	add    bh,bh
  435fbf:	add    BYTE PTR [ebx],al
  435fc1:	aaa    
  435fc2:	jmp    FWORD PTR [ebp-0x760029]
  435fc8:	sub    DWORD PTR [edi],edx
  435fca:	mov    ecx,eax
  435fcc:	xchg   esp,eax
  435fcd:	inc    DWORD PTR [eax]
  435fcf:	inc    DWORD PTR [ecx-0x5b450080]
  435fd5:	(bad)  
  435fd6:	inc    DWORD PTR [ebx+0xd00d692]
  435fdc:	and    bh,bh
  435fde:	add    BYTE PTR [eax],al
  435fe0:	or     esi,esi
  435fe2:	push   esi
  435fe4:	fcmove st,st(4)
  435fe6:	inc    DWORD PTR [eax]
  435fe8:	data16 sub cl,ah
  435feb:	cli    
  435fec:	jb     0x435fba
  435fee:	cmp    edi,0x61
  435ff1:	push   edx
  435ff2:	cmp    edi,0xf
  435ff5:	(bad)  
  435ff6:	(bad)  
  435ff7:	(bad)  
  435ff8:	jmp    0x3a6be34d
  435ffd:	dec    DWORD PTR [ecx+0xc7d700]
  436003:	push   esp
  436004:	sbb    al,0x0
  436006:	int3   
  436007:	xor    DWORD PTR [eax+0x72810076],0xffffffff
  43600e:	add    BYTE PTR [eax],al
  436010:	sub    DWORD PTR [ebp+0xfde4ff],ecx
  436016:	(bad)  
  436017:	inc    DWORD PTR [ecx+0x31]
  43601a:	int3   
  43601b:	sbb    BYTE PTR [edi-0xdff7c34],cl
  436021:	dec    DWORD PTR ds:[edx-0x5e]
  436025:	add    DWORD PTR [eax],0x0
  436028:	lahf   
  436029:	and    al,0x83
  43602b:	pushf  
  43602c:	js     0x43602e
  43602e:	add    DWORD PTR [eax],0xffffffba
  436031:	pushf  
  436032:	jmp    FWORD PTR [ebp+0x46]
  436035:	add    bh,bh
  436037:	mov    DWORD PTR [eax],esp
  436039:	adc    esp,ecx
  43603b:	bts    edi,edi
  43603e:	(bad)  
  43603f:	jmp    FWORD PTR [ebx]
  436041:	cmp    edi,0x42
  436044:	or     eax,0xaff83ff
  436049:	and    eax,0xffb4b7ff
  43604e:	mov    edi,edi
  436050:	xlat   BYTE PTR ds:[ebx]
  436051:	std    
  436052:	add    BYTE PTR [ebx+ebx*2],ch
  436055:	inc    DWORD PTR [eax]
  436057:	dec    DWORD PTR [edx+0x66]
  43605a:	add    BYTE PTR [ebx-0x330041],ch
  436060:	test   al,0x4a
  436062:	mov    DWORD PTR [ebx],ecx
  436064:	jp     0x436065
  436066:	(bad)  
  436067:	inc    edi
  436069:	xchg   ebx,eax
  43606a:	call   FWORD PTR [ebx]
  43606c:	out    dx,eax
  43606d:	(bad)  
  43606e:	inc    DWORD PTR [eax]
  436070:	and    al,0x82
  436072:	mov    DWORD PTR [ebx-0x6e],edi
  436075:	(bad)  
  436076:	(bad)  
  436077:	jmp    DWORD PTR [edx-0x21c00055]
  43607d:	add    bh,bh
  43607f:	int3   
  436080:	rcl    BYTE PTR [edi],1
  436082:	xor    DWORD PTR [edi+ecx*1],0xffffff83
  436086:	inc    DWORD PTR [eax]
  436088:	pop    ds
  436089:	stc    
  43608a:	add    BYTE PTR [ecx],bh
  43608c:	xchg   esi,eax
  43608d:	add    BYTE PTR [eax],al
  43608f:	add    BYTE PTR [esp+eiz*4],cl
  436092:	or     DWORD PTR [ebx],0xfffffff1
  436095:	(bad)  
  436096:	inc    DWORD PTR [eax]
  436098:	in     al,0xc4
  43609a:	cmp    DWORD PTR [edi-0x71],0x0
  43609e:	add    bh,bh
  4360a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4360a1:	and    cl,ah
  4360a3:	in     eax,0x50
  4360a5:	add    bh,bh
  4360a7:	add    BYTE PTR [ebx-0x59],ch
  4360aa:	add    DWORD PTR [esi],0x68
  4360ad:	cmp    edi,0xffffffff
  4360b0:	lock pop edx
  4360b2:	add    bh,ah
  4360b4:	push   cs
  4360b5:	add    BYTE PTR [ecx+0x5a9600],cl
  4360bb:	pop    edi
  4360bc:	or     eax,DWORD PTR [eax]
  4360be:	or     esp,0x2a
  4360c1:	addr16 add bl,cl
  4360c4:	(bad)  
  4360c6:	add    bh,bh
  4360c8:	in     al,0x74
  4360ca:	(bad)  
  4360cb:	jmp    FWORD PTR [esi]
  4360cd:	inc    DWORD PTR [eax]
  4360cf:	add    al,bl
  4360d1:	outs   dx,BYTE PTR ds:[esi]
  4360d2:	call   FWORD PTR [ecx+0x22]
  4360d5:	(bad)  
  4360d6:	inc    DWORD PTR [eax]
  4360d8:	aam    0x86
  4360da:	mov    DWORD PTR [edi],ebp
  4360dc:	xchg   bh,bh
  4360de:	add    BYTE PTR [eax],al
  4360e0:	jmp    0x5aff6197
  4360e5:	inc    DWORD PTR [eax]
  4360e7:	xor    DWORD PTR [ebx+0x4ecb00e1],0xffffffff
  4360ee:	mov    edi,edi
  4360f0:	repnz xchg ecx,eax
  4360f2:	add    dl,bl
  4360f4:	sub    BYTE PTR [ecx-0x2660001],cl
  4360fa:	int3   
  4360fb:	lds    eax,FWORD PTR [ecx]
  4360fd:	add    BYTE PTR [ebx-0x83f57d],al
  436103:	nop
  436104:	mov    sp,cx
  436107:	add    BYTE PTR [ebx+0x35],al
  43610a:	add    BYTE PTR [esi-0xff33e5],bl
  436110:	std    
  436111:	cmp    al,0xff
  436113:	sahf   
  436114:	scas   eax,DWORD PTR es:[edi]
  436115:	dec    DWORD PTR [ecx-0x7cefca34]
  43611b:	jbe    0x4360ae
  43611d:	(bad)  
  43611e:	(bad)  
  43611f:	(bad)  
  436120:	cmp    BYTE PTR [eax+0x9d82ff],al
  436126:	(bad)  
  436127:	jmp    FWORD PTR [esi+0x3d43ff8b]
  43612d:	add    DWORD PTR [ebx-0xebf7d],0x6b
  436134:	add    eax,0x39000000
  436139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43613a:	adc    esp,0xfffffff6
  43613d:	inc    DWORD PTR [eax]
  43613f:	mov    DWORD PTR [eax+eax*4],ebp
  436142:	add    BYTE PTR [ebp-0x76],dh
  436145:	add    bh,bh
  436147:	add    BYTE PTR [eax],ch
  436149:	jns    0x43614a
  43614b:	nop
  43614c:	cmc    
  43614d:	inc    DWORD PTR [ebx+0x21ea00]
  436153:	fisubr WORD PTR [edi-0x1]
  436156:	add    bh,bh
  436158:	dec    edx
  436159:	jns    0x43615a
  43615b:	js     0x4360ea
  43615d:	int3   
  43615e:	cmp    edi,0x7a
  436161:	test   DWORD PTR [eax],0x3f0a
  436167:	(bad)  
  436168:	std    
  436169:	(bad)  
  43616a:	inc    DWORD PTR [esp+ebx*8-0x1]
  43616e:	(bad)  
  43616f:	push   DWORD PTR [edi]
  436171:	dec    edi
  436172:	(bad)  
  436173:	cli    
  436174:	(bad)  
  436176:	add    BYTE PTR [eax],al
  436178:	mov    bl,0x5c
  43617a:	int3   
  43617b:	jne    0x43610e
  43617d:	inc    DWORD PTR [eax]
  43617f:	sbb    DWORD PTR [ebx-0x67bf7c2b],0xffffffcc
  436186:	cmp    edi,0xffffffe1
  436189:	cmp    ecx,DWORD PTR [ecx-0x58a0]
  43618f:	int3   
  436190:	inc    edi
  436191:	jmp    0x436192
  436193:	mov    dl,0x1
  436195:	add    BYTE PTR [eax],al
  436197:	jmp    FWORD PTR [eax]
  436199:	push   0xcc915a83
  43619e:	int3   
  43619f:	add    ah,ah
  4361a1:	cmp    eax,0xff5990ff
  4361a6:	add    BYTE PTR [eax],al
  4361a8:	dec    eax
  4361a9:	add    DWORD PTR [eax],eax
  4361ab:	(bad)  
  4361ac:	retf   
  4361ad:	cmp    edi,0xffffffff
  4361b0:	push   edi
  4361b1:	idiv   bh
  4361b3:	push   ecx
  4361b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4361b5:	inc    DWORD PTR [ebx+0x43e2ff]
  4361bb:	inc    edi
  4361bc:	pop    esi
  4361bd:	add    BYTE PTR [eax],al
  4361bf:	add    ch,dh
  4361c1:	(bad)  
  4361c3:	sub    eax,DWORD PTR [ecx-0x1]
  4361c6:	add    DWORD PTR [eax],0x67
  4361c9:	pop    ebx
  4361ca:	xor    DWORD PTR [ecx],0x61
  4361cd:	add    BYTE PTR [eax],al
  4361cf:	call   ebp
  4361d1:	(bad)  
  4361d2:	mov    esp,edx
  4361d4:	sar    edi,0x0
  4361d7:	inc    DWORD PTR [ecx]
  4361d9:	popa   
  4361da:	dec    DWORD PTR [edx-0xff0028]
  4361e0:	stos   DWORD PTR es:[edi],eax
  4361e1:	add    BYTE PTR ds:[edx-0x7cab],al
  4361e8:	inc    edi
  4361e9:	xchg   esi,eax
  4361ea:	add    ah,ah
  4361ec:	js     0x436177
  4361ee:	add    BYTE PTR [ecx-0x2d7ccc82],cl
  4361f4:	mov    eax,DWORD PTR [eax]
  4361f6:	add    BYTE PTR [eax],al
  4361f8:	aas    
  4361f9:	ins    BYTE PTR es:[edi],dx
  4361fa:	(bad)  
  4361fb:	fnsave [edi+edi*8-0x23887c7d]
  436202:	dec    DWORD PTR [ecx]
  436204:	stos   DWORD PTR es:[edi],eax
  436205:	dec    esp
  436207:	jmp    FWORD PTR [ebx+ebx*2-0x1]
  43620b:	adc    eax,0xfffffff3
  436210:	push   ebp
  436211:	jbe    0x436212
  436213:	inc    edx
  436214:	xor    al,0xff
  436216:	add    bh,bh
  436218:	(bad)  
  436219:	cmp    al,0xff
  43621b:	push   es
  43621c:	fdiv   st(7),st
  43621e:	(bad)  
  43621f:	push   ebx
  436221:	sti    
  436222:	push   DWORD PTR [edi*1-0x64007c01]
  436229:	add    edi,edi
  43622b:	cmp    eax,DWORD PTR cs:[eax]
  43622e:	add    BYTE PTR [ebx+0x6acc88fe],al
  436234:	retf   
  436235:	int3   
  436236:	mov    DWORD PTR [ebx-0x9ffa0a2],eax
  43623c:	bound  eax,QWORD PTR [eax]
  43623e:	add    bh,bh
  436240:	imul   edx,DWORD PTR ds:0xff345e83,0x5cbffff
  43624a:	add    BYTE PTR [ecx+0x5],ch
  43624d:	(bad)  
  43624e:	dec    esp
  436250:	cmp    al,0x44
  436252:	or     DWORD PTR [ecx-0x767c7d00],0x68
  436259:	pushf  
  43625a:	(bad)  
  43625b:	cmp    al,0x6e
  43625d:	add    DWORD PTR [ebx-0xfb4634],0x23
  436264:	or     DWORD PTR [ecx-0x7e7b0000],ecx
  43626a:	mov    DWORD PTR [ebp+eiz*1-0x6fffff7d],ebx
  436271:	dec    eax
  436272:	push   DWORD PTR [eiz*4-0x3900007d]
  436279:	std    
  43627a:	add    BYTE PTR [edi+0xff0034],bl
  436280:	dec    ebx
  436281:	jmp    FWORD PTR gs:[esi+0x6d]
  436285:	cmp    edi,0xffffff83
  436288:	in     eax,dx
  436289:	sar    edi,1
  43628b:	cmp    esi,DWORD PTR ds:0x15ff0083
  436291:	test   al,0xff
  436293:	jmp    0x8343ec30
  436298:	dec    ebx
  436299:	fild   WORD PTR [eax]
  43629b:	mov    ds:0x83ffff78,eax
  4362a0:	mov    eax,ds:0x764891a
  4362a5:	add    BYTE PTR [eax],al
  4362a7:	push   DWORD PTR ds:0x48b6ffa7
  4362ad:	add    bh,bh
  4362af:	add    BYTE PTR [esi+0x16],ah
  4362b2:	inc    DWORD PTR [ecx+0x2a]
  4362b5:	mov    edi,edi
  4362b7:	mov    edi,edi
  4362b9:	bnd call DWORD PTR [eax]
  4362bc:	nop
  4362bd:	add    DWORD PTR [eax],0x0
  4362c0:	sbb    DWORD PTR [edi],0xffffffff
  4362c3:	out    0x13,eax
  4362c5:	add    bh,bh
  4362c7:	add    BYTE PTR [eax+eiz*4],ah
  4362ca:	add    BYTE PTR [eax],dh
  4362cc:	push   ebp
  4362cd:	inc    DWORD PTR [eax]
  4362cf:	dec    DWORD PTR [edi+ebp*1]
  4362d2:	add    BYTE PTR [edi-0xa6],bl
  4362d8:	cmp    DWORD PTR [ecx-0x1],edx
  4362db:	mov    ebx,0x8300fff9
  4362e0:	xchg   ecx,eax
  4362e1:	notrack jmp ebx
  4362e4:	es mov edi,edi
  4362e7:	add    BYTE PTR [esi+0x78c183f4],ah
  4362ed:	inc    DWORD PTR [eax]
  4362ef:	add    DWORD PTR [esi+0xd9a005a],0xffffffff
  4362f6:	add    bh,bh
  4362f8:	or     cl,BYTE PTR [edi-0x3389a001]
  4362fe:	inc    DWORD PTR [eax]
  436300:	jb     0x436331
  436302:	add    BYTE PTR [edi+0x7c],cl
  436305:	add    DWORD PTR [eax],0xffffffff
  436308:	pusha  
  436309:	xor    ecx,esp
  43630b:	push   es
  43630c:	pusha  
  43630d:	add    BYTE PTR [eax],al
  43630f:	add    eax,0x52
  436312:	jmp    FWORD PTR [ebp-0x58]
  436315:	dec    esp
  436317:	add    bl,bl
  436319:	fiadd  WORD PTR [ebx+0xff9d56]
  43631f:	add    dl,al
  436321:	popa   
  436322:	(bad)  
  436323:	std    
  436324:	pop    esi
  436325:	(bad)  
  436326:	inc    DWORD PTR [eax]
  436328:	test   al,0x58
  43632a:	dec    DWORD PTR [ecx+esi*4+0x5f00ffff]
  436331:	mov    bh,0xff
  436333:	sbb    al,0x5a
  436335:	add    bh,bh
  436337:	adc    DWORD PTR [ebp+0x7],0xffffffff
  43633b:	jp     0x436321
  43633d:	add    DWORD PTR [eax],0x0
  436340:	add    ecx,esi
  436342:	push   eax
  436344:	pop    esp
  436345:	add    BYTE PTR [eax],al
  436347:	jmp    FWORD PTR [ecx+ebx*2]
  43634a:	add    BYTE PTR [esi-0x3],bh
  43634d:	cmp    edi,0xffffffff
  436350:	sub    ch,ah
  436352:	call   DWORD PTR [edi]
  436354:	ja     0x436356
  436356:	cmp    edi,0x61
  436359:	mov    eax,0x83c61dff
  43635e:	mov    edi,edi
  436360:	lods   al,BYTE PTR ds:[esi]
  436361:	mov    bh,bh
  436363:	adc    eax,0x9e
  436368:	adc    ah,BYTE PTR [eax-0x747501]
  43636e:	mov    esp,ecx
  436370:	fcom   DWORD PTR [edi+0x0]
  436373:	xor    al,0xde
  436375:	add    BYTE PTR [ecx-0x7c254901],cl
  43637b:	xchg   BYTE PTR [ebp+0x0],bl
  43637e:	add    BYTE PTR [eax],al
  436380:	sti    
  436381:	xor    DWORD PTR [ebx+0xc72f],eax
  436387:	add    BYTE PTR [eax],ch
  436389:	out    dx,al
  43638a:	add    dh,cl
  43638c:	add    DWORD PTR [eax],0x5a58ccff
  436392:	sbb    DWORD PTR [ebp+0xcc00d6],0xffffff8b
  436399:	sub    edi,edi
  43639b:	dec    edi
  43639c:	repz add bh,bh
  43639f:	add    BYTE PTR [eax+0x670a8902],bh
  4363a5:	(bad)  
  4363a6:	inc    DWORD PTR [eax]
  4363a8:	xchg   edi,eax
  4363a9:	inc    ecx
  4363aa:	call   FWORD PTR [edi+0x61]
  4363ad:	(bad)  
  4363ae:	(bad)  
  4363af:	jmp    FWORD PTR [ebx-0xbe97cce]
  4363b5:	mov    edi,edi
  4363b7:	dec    DWORD PTR [ebp+0x2f12005a]
  4363bd:	add    BYTE PTR [eax],al
  4363bf:	(bad)  
  4363c0:	jl     0x436434
  4363c2:	inc    ebx
  4363c4:	adc    eax,DWORD PTR [eax]
  4363c6:	add    bh,bh
  4363c8:	(bad)  
  4363c9:	jo     0x43634e
  4363cb:	mov    eax,0xccff0032
  4363d0:	mov    cl,0xaf
  4363d2:	jmp    FWORD PTR [edx-0x3300ff16]
  4363d8:	int3   
  4363d9:	int3   
  4363da:	int3   
  4363db:	int3   
  4363dc:	int3   
  4363dd:	int3   
  4363de:	int3   
  4363df:	int3   
  4363e0:	mov    bh,bh
  4363e2:	je     0x43637b
  4363e4:	data16 (bad) 
  4363e6:	inc    DWORD PTR [eax]
  4363e8:	(bad)  
  4363e9:	dec    DWORD PTR [ebp-0x7cff5425]
  4363ef:	dec    edi
  4363f1:	jmp    DWORD PTR [esi-0x71]
  4363f4:	out    0x86,al
  4363f6:	add    DWORD PTR [ebx-0x12133301],0xffffff98
  4363fd:	add    bh,bh
  4363ff:	call   FWORD PTR [esi-0x77]
  436402:	xor    eax,0xff48aafd
  436407:	(bad)  
  436408:	(bad)  
  436409:	inc    DWORD PTR [ebx]
  43640b:	adc    BYTE PTR cs:[eax],al
  43640e:	(bad)  
  43640f:	dec    DWORD PTR [edi-0x1]
  436412:	and    eax,0xccd0604c
  436417:	add    bh,bh
  436419:	call   FWORD PTR [esi+ecx*8-0x767c007a]
  436420:	inc    eax
  436421:	add    BYTE PTR [ebp-0x7],bh
  436424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436425:	mov    DWORD PTR [eax],eax
  436427:	add    bh,bh
  436429:	int3   
  43642a:	mov    fs,WORD PTR [ecx+0xffff3b]
  436430:	pop    ss
  436431:	(bad)  
  436432:	fmul   DWORD PTR [eax+eiz*4+0xcccc5b]
  436439:	(bad)  
  43643a:	cli    
  43643b:	rcr    BYTE PTR [ecx],1
  43643d:	mov    edi,edi
  43643f:	adc    DWORD PTR [ecx+0x2e57ba83],0xffffffd6
  436446:	add    BYTE PTR [eax],al
  436448:	add    BYTE PTR [ebx+0x14bd67],al
  43644e:	add    BYTE PTR [ebx-0x6002ff45],al
  436454:	inc    ecx
  436455:	mov    ch,0xff
  436457:	inc    DWORD PTR [eax]
  436459:	add    BYTE PTR [eax+0xad66],ch
  43645f:	int3   
  436460:	xor    eax,DWORD PTR [ebx+0x5a339eba]
  436466:	add    BYTE PTR [ecx-0x6a83ff01],cl
  43646c:	jmp    0xd2ff:0xd000ffff
  436473:	and    BYTE PTR ds:0xfffff3,dl
  436479:	call   esp
  43647b:	or     eax,0xffffffb6
  436480:	add    DWORD PTR [ebx-0x69766baa],0xff8389ff
  43648a:	xor    eax,0x75c7
  43648f:	jmp    DWORD PTR [edx-0x1]
  436492:	push   ecx
  436493:	mov    al,0xe2
  436495:	xchg   ecx,eax
  436496:	add    BYTE PTR [ecx+0x22268300],cl
  43649c:	call   0xb14365a0
  4364a1:	dec    DWORD PTR [ebx-0x7ca20c3c]
  4364a7:	(bad)  
  4364a8:	inc    DWORD PTR [eax]
  4364aa:	adc    cl,BYTE PTR [eax-0xff00cb]
  4364b0:	ins    DWORD PTR es:[edi],dx
  4364b1:	and    DWORD PTR [ebx+0x8924c6],0x0
  4364b8:	(bad)  
  4364b9:	inc    ecx
  4364bb:	in     al,0xc3
  4364bd:	inc    DWORD PTR [eax]
  4364bf:	push   ecx
  4364c1:	add    BYTE PTR [edi-0x2c],ch
  4364c4:	lock int 0xcc
  4364c7:	(bad)  
  4364c8:	inc    DWORD PTR [ebx-0x8aa622]
  4364ce:	(bad)  
  4364cf:	inc    DWORD PTR [ebx+eax*4-0x58688707]
  4364d6:	(bad)  
  4364d7:	inc    DWORD PTR [eax]
  4364d9:	jmp    DWORD PTR [edi+0xa]
  4364dc:	aam    0x89
  4364de:	int3   
  4364df:	sbb    DWORD PTR [edi-0x1],0x4c
  4364e3:	and    BYTE PTR [ebx-0xffff36],0x83
  4364ea:	ret    0x491b
  4364ed:	(bad)  
  4364ee:	dec    DWORD PTR [ecx+0x6694009c]
  4364f4:	and    eax,0x83ff24
  4364f9:	call   ebp
  4364fb:	mov    ds,WORD PTR [edi]
  4364fd:	inc    DWORD PTR [eax]
  4364ff:	add    BYTE PTR [ebx],bl
  436501:	sub    esp,0x58
  436504:	mov    esi,ecx
  436506:	inc    DWORD PTR [ebx+0x67590000]
  43650c:	sub    bh,bh
  43650e:	inc    DWORD PTR [ebx+0x824fff7]
  436514:	push   0xff8983a8
  436519:	inc    ebx
  43651b:	cmp    eax,eax
  43651d:	add    BYTE PTR [eax],al
  43651f:	push   DWORD PTR [esi-0xc15a47d]
  436525:	mov    ?,edi
  436527:	add    bh,bh
  436529:	int3   
  43652a:	ret    0x1d04
  43652d:	dec    esp
  43652f:	add    al,bl
  436531:	add    BYTE PTR [ecx+0x54fea5],dl
  436537:	(bad)  
  436538:	(bad)  
  436539:	push   ebx
  43653b:	sbb    BYTE PTR [edi+edi*8],al
  43653e:	(bad)  
  43653f:	inc    DWORD PTR [esi]
  436541:	add    BYTE PTR [edi],cl
  436543:	pop    eax
  436544:	xchg   edi,eax
  436545:	ja     0x4364ca
  436547:	(bad)  
  436548:	inc    DWORD PTR [ebx-0x33be159c]
  43654e:	inc    DWORD PTR [eax]
  436550:	lahf   
  436551:	jmp    DWORD PTR [ebp+edx*4-0xffd9f8]
  436558:	add    ah,cl
  43655a:	add    dh,0xa0
  43655d:	cmp    edi,0xffffff83
  436560:	rol    BYTE PTR [eax],1
  436562:	shl    DWORD PTR [ecx-0xff777d],cl
  436568:	(bad)  
  436569:	push   DWORD PTR [eax]
  43656b:	pushf  
  43656c:	push   es
  43656d:	add    bh,bh
  43656f:	int3   
  436570:	jge    0x436572
  436572:	cdq    
  436573:	daa    
  436574:	daa    
  436575:	mov    cl,0x83
  436577:	cmp    edi,0x0
  43657a:	xchg   bl,ch
  43657c:	jae    0x436507
  43657e:	(bad)  
  43657f:	(bad)  
  436580:	js     0x436581
  436582:	push   ebp
  436583:	pop    edi
  436584:	sub    ch,BYTE PTR [edi-0x7d]
  436587:	inc    DWORD PTR [ebx-0x6391e401]
  43658d:	(bad)  
  43658e:	(bad)  
  43658f:	jmp    DWORD PTR [edi]
  436591:	(bad)  
  436592:	jmp    0x89ff:0x73174e
  436599:	cmp    DWORD PTR [ebp+0x83d4e3],0xffffffff
  4365a0:	(bad)  
  4365a1:	jmp    esp
  4365a3:	mov    al,0x1c
  4365a5:	xchg   esp,eax
  4365a6:	add    BYTE PTR [eax],al
  4365a8:	add    BYTE PTR [eax],al
  4365aa:	(bad)
  4365ad:	inc    DWORD PTR [eax]
  4365af:	inc    DWORD PTR [edi+edi*8]
  4365b2:	jecxz  0x43657d
  4365b4:	test   DWORD PTR [ebx+eax*4+0x0],esi
  4365b8:	(bad)  
  4365b9:	call   FWORD PTR [ebp-0x7c001b85]
  4365bf:	add    BYTE PTR [ebx],ch
  4365c1:	jmp    FWORD PTR [edi-0xc8f692]
  4365c7:	inc    DWORD PTR [eax]
  4365c9:	adc    eax,0xffffffce
  4365cc:	add    al,0xff
  4365ce:	inc    DWORD PTR [eax]
  4365d0:	mov    edx,0x4f300aff
  4365d5:	add    DWORD PTR ds:[eax],0xffffffff
  4365d9:	sbb    DWORD PTR [edx-0x76004566],0x0
  4365e0:	mov    cl,0x0
  4365e2:	mov    dl,0x4
  4365e4:	stos   DWORD PTR es:[edi],eax
  4365e5:	imul   edi,edi,0xca83cc00
  4365eb:	xor    BYTE PTR [ecx],bl
  4365ed:	mov    edi,edi
  4365ef:	call   edx
  4365f1:	mov    DWORD PTR [edx],ebp
  4365f3:	or     DWORD PTR [ebp-0x33ff7b],0x9dfe5400
  4365fd:	inc    DWORD PTR [eax]
  4365ff:	add    BYTE PTR [edi+edi*8-0x3d],dh
  436603:	and    eax,0xdcae
  436608:	inc    DWORD PTR [eax]
  43660a:	(bad)  
  43660b:	mov    ah,0x57
  43660d:	add    BYTE PTR [ecx-0x5100a934],cl
  436613:	xor    al,0x5
  436615:	mov    ebp,0xff00ff00
  43661a:	and    dh,BYTE PTR [ebp+0x838305]
  436620:	bound  eax,QWORD PTR [eax]
  436622:	pop    ebp
  436623:	mov    esi,0xffff88f2
  436628:	add    BYTE PTR [eax],al
  43662a:	push   ebx
  43662b:	cmp    BYTE PTR [ecx-0x3fff767d],0x89
  436632:	cs mov bl,0x35
  436635:	push   ebx
  436636:	cmp    edi,0xffffffff
  436639:	add    BYTE PTR [eax],ah
  43663b:	jg     0x436660
  43663d:	add    bh,bh
  43663f:	jmp    FWORD PTR [ebp-0x7d]
  436642:	dec    edi
  436643:	retf   
  436644:	test   eax,esp
  436646:	add    BYTE PTR [ebx-0x3ab6007d],al
  43664c:	cld    
  43664d:	(bad)  
  43664e:	(bad)  
  43664f:	call   FWORD PTR [edi]
  436651:	or     DWORD PTR [edi-0xa86ef0],0xffffffff
  436658:	inc    DWORD PTR [ebx-0xa5989d]
  43665e:	inc    DWORD PTR [eax]
  436660:	mov    al,0x0
  436662:	push   ebp
  436663:	mov    ah,0xd1
  436665:	mov    dh,0x0
  436667:	int3   
  436668:	cmp    edi,0x54
  43666b:	adc    ebp,edx
  43666d:	int3   
  43666e:	inc    DWORD PTR [ebx-0x6f9b00cf]
  436674:	mov    ebp,edx
  436676:	(bad)  
  436677:	(bad)  
  436678:	dec    esp
  43667a:	imul   eax,DWORD PTR [ebp+0x59],0x1a008389
  436681:	add    BYTE PTR [ecx],bl
  436683:	ret    
  436684:	cmp    cl,dl
  436686:	mov    edi,edi
  436688:	inc    DWORD PTR [eax]
  43668a:	adc    edx,DWORD PTR [ebx]
  43668c:	(bad)  
  43668e:	add    BYTE PTR [eax],al
  436690:	outs   dx,BYTE PTR ds:[esi]
  436691:	call   FWORD PTR [eax+0x3]
  436694:	cmp    DWORD PTR [edi],eax
  436696:	add    DWORD PTR [eax],0xffffffff
  436699:	add    BYTE PTR [edx-0x4c],cl
  43669c:	in     al,0xff
  43669e:	cmp    edi,0xfffffffc
  4366a1:	add    BYTE PTR [ebp+0xfc4ea0],bh
  4366a7:	add    ah,cl
  4366a9:	sbb    DWORD PTR [esi],0xffffffd5
  4366ac:	xchg   esp,eax
  4366ad:	add    BYTE PTR [eax],al
  4366af:	sbb    DWORD PTR [edx-0x1],0xc
  4366b3:	lods   al,BYTE PTR ds:[esi]
  4366b4:	add    ch,BYTE PTR [ebx]
  4366b6:	dec    DWORD PTR [ecx-0x64280100]
  4366bc:	sub    bh,bh
  4366be:	add    BYTE PTR [eax],al
  4366c0:	jmp    0xcc67:0x40d438ff
  4366c7:	(bad)  
  4366c8:	dec    DWORD PTR [ecx-0x764f2bf3]
  4366ce:	cmp    edi,0x36
  4366d1:	mov    ebp,ecx
  4366d3:	cmp    eax,0xffffcd16
  4366d8:	(bad)  
  4366d9:	call   DWORD PTR ds:0xffff646f
  4366df:	push   DWORD PTR [edi-0x15fd2d01]
  4366e5:	sub    bh,bh
  4366e7:	add    BYTE PTR [eax],al
  4366e9:	dec    DWORD PTR [ebx]
  4366eb:	(bad)  
  4366ec:	adc    edi,edi
  4366ee:	inc    DWORD PTR [eax]
  4366f0:	dec    ebx
  4366f1:	jmp    DWORD PTR [edi+0x79]
  4366f4:	cmc    
  4366f5:	adc    al,0xff
  4366f7:	(bad)  
  4366f8:	inc    DWORD PTR [ebx-0x73bc15]
  4366fe:	add    bh,bh
  436700:	jmp    0x43668b
  436702:	mov    ebp,0xcae7
  436707:	dec    esp
  436709:	(bad)  
  43670a:	fld    TBYTE PTR [ebp+0x21]
  43670d:	add    BYTE PTR [eax],al
  43670f:	call   FWORD PTR [edi+edi*8]
  436712:	sub    DWORD PTR [ebx+0xff6a3e],ecx
  436718:	add    bh,bh
  43671a:	call   0x1429da4
  43671f:	int3   
  436720:	fdivp  st(7),st
  436722:	or     al,0xf4
  436724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436725:	mov    edx,0x83ffff
  43672a:	jle    0x436716
  43672c:	pop    ecx
  43672d:	int3   
  43672e:	add    bh,bh
  436730:	loopne 0x436731
  436732:	adc    edx,DWORD PTR [ecx]
  436734:	in     al,0xd0
  436736:	add    BYTE PTR [eax],al
  436738:	add    BYTE PTR [eax],al
  43673a:	jne    0x4367b9
  43673c:	jl     0x43670a
  43673e:	(bad)  
  43673f:	push   DWORD PTR [edi]
  436741:	add    ah,ah
  436743:	dec    edx
  436744:	jbe    0x4367a8
  436746:	mov    edi,edi
  436748:	inc    DWORD PTR [eax]
  43674a:	jno    0x436762
  43674c:	adc    bh,bh
  43674e:	add    BYTE PTR [ebx-0xaeaff95],al
  436754:	sub    ecx,edi
  436756:	int3   
  436757:	inc    DWORD PTR [ebx-0x35c61200]
  43675d:	inc    DWORD PTR [eax]
  43675f:	call   DWORD PTR [eax+0x3f24eeff]
  436765:	test   ah,cl
  436767:	inc    DWORD PTR [ebx+0x8eec5ff]
  43676d:	int3   
  43676e:	add    bh,bh
  436770:	stos   BYTE PTR es:[edi],al
  436771:	push   DWORD PTR [eax]
  436773:	sub    ch,bh
  436775:	and    bh,bh
  436777:	(bad)  
  436778:	(bad)  
  436779:	jmp    DWORD PTR [ebp-0x1e8e]
  43677f:	inc    edi
  436781:	(bad)  
  436782:	out    dx,eax
  436783:	int    0xa
  436785:	(bad)  
  436787:	inc    DWORD PTR [eax]
  436789:	dec    DWORD PTR [esi+0xffb612]
  43678f:	dec    DWORD PTR [edi+0x502987ff]
  436795:	call   0x8553:0x83ff83ff
  43679c:	adc    al,BYTE PTR [eax]
  43679e:	inc    DWORD PTR [eax]
  4367a0:	out    0x0,al
  4367a2:	not    BYTE PTR [ebx-0x3f]
  4367a5:	mov    eax,ds:0xff0000cc
  4367aa:	in     eax,dx
  4367ab:	mov    edx,0x83fffff4
  4367b0:	cmp    edi,0xffffffc9
  4367b3:	bound  esp,QWORD PTR ds:0xff001a
  4367b9:	sub    DWORD PTR [ecx-0x7c002ee9],0x0
  4367c0:	adc    edi,edi
  4367c2:	adc    edx,DWORD PTR [ebx+0x2b]
  4367c5:	pop    esi
  4367c6:	int3   
  4367c7:	inc    DWORD PTR [eax]
  4367c9:	push   ecx
  4367cb:	mov    ds:0x8983ea,eax
  4367d0:	push   ss
  4367d1:	add    BYTE PTR [ecx],bh
  4367d3:	fidiv  DWORD PTR [edi-0x5b]
  4367d6:	inc    DWORD PTR [eax]
  4367d8:	(bad)  
  4367d9:	jmp    FWORD PTR [esi-0x5a]
  4367dc:	nop
  4367dd:	or     esp,0xffffffff
  4367e0:	sub    al,0x0
  4367e2:	(bad)  
  4367e4:	enter  0x1b,0x0
  4367e8:	mov    DWORD PTR [eax],eax
  4367ea:	shl    DWORD PTR [edi],1
  4367ec:	aad    0xcc
  4367ee:	add    bh,bh
  4367f0:	dec    eax
  4367f1:	or     ebp,0x2
  4367f4:	xchg   ebx,eax
  4367f5:	fs cmp edi,0xffffffff
  4367f9:	int3   
  4367fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4367fb:	sbb    eax,0xff00006a
  436800:	sar    bh,1
  436802:	dec    DWORD PTR [ebx]
  436804:	add    DWORD PTR [edi-0x77],ecx
  436807:	add    BYTE PTR [eax],al
  436809:	(bad)  
  43680a:	jns    0x436817
  43680c:	inc    DWORD PTR fs:[eax]
  43680f:	mov    DWORD PTR [ebp-0x1],ecx
  436812:	push   0xff47aa0d
  436817:	add    BYTE PTR [eax],al
  436819:	cmp    DWORD PTR [ecx+0xff17a7],0x0
  436820:	out    0xff,eax
  436822:	mov    ch,0xac
  436824:	stos   DWORD PTR es:[edi],eax
  436825:	jnp    0x436826
  436827:	mov    edi,edi
  436829:	mov    DWORD PTR [eax-0xa52],esi
  43682f:	mov    DWORD PTR [ebx-0x1],ecx
  436832:	mov    ebp,0xffe21323
  436837:	(bad)  
  436838:	inc    DWORD PTR [ebx-0x33e07389]
  43683e:	(bad)  
  43683f:	jmp    FWORD PTR [ebp+0x0]
  436842:	add    eax,0xc3e53e
  436847:	(bad)  
  436848:	inc    DWORD PTR [eax]
  43684a:	adc    bl,cl
  43684c:	rol    BYTE PTR [ebx-0x7c7677],1
  436852:	ja     0x436866
  436854:	cli    
  436855:	(bad)  
  436856:	(bad)  
  436857:	inc    DWORD PTR [eax]
  436859:	push   DWORD PTR [eax]
  43685b:	dec    edi
  43685c:	out    dx,eax
  43685d:	inc    DWORD PTR [eax]
  43685f:	call   ebp
  436861:	call   FWORD PTR [esi+0x39]
  436864:	mov    esi,0xffcc0027
  436869:	and    DWORD PTR [edi-0x26],0x78
  43686d:	(bad)  
  43686e:	(bad)  
  43686f:	jmp    FWORD PTR [eax]
  436871:	add    BYTE PTR [ebx-0x19],cl
  436874:	cwde   
  436875:	mov    ebx,0xff89ffff
  43687a:	pop    esp
  43687b:	cmp    DWORD PTR [ebx+0x3affffff],edx
  436881:	mov    DWORD PTR [ebx-0x71],edx
  436884:	leave  
  436885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436886:	(bad)  
  436887:	inc    DWORD PTR [eax]
  436889:	or     edi,0x7c
  43688c:	push   0x0
  43688e:	dec    esp
  436890:	(bad)  
  436891:	push   DWORD PTR [ebx+0x2c]
  436894:	adc    al,0xad
  436896:	inc    DWORD PTR [eax]
  436898:	add    bh,bh
  43689a:	nop
  43689b:	xchg   esp,eax
  43689c:	lods   eax,DWORD PTR ds:[esi]
  43689d:	inc    DWORD PTR [eax]
  43689f:	int3   
  4368a0:	(bad)  
  4368a2:	sub    dl,BYTE PTR [esi-0x52]
  4368a5:	xchg   ebx,eax
  4368a6:	add    DWORD PTR [eax],0x0
  4368a9:	int3   
  4368aa:	jle    0x436883
  4368ac:	bound  eax,QWORD PTR [eax]
  4368ae:	dec    DWORD PTR [ecx-0x4238ff9d]
  4368b4:	sbb    DWORD PTR [ebp-0x1],edi
  4368b7:	(bad)  
  4368b8:	(bad)  
  4368b9:	(bad)  
  4368ba:	in     eax,dx
  4368bb:	cmp    eax,0xff00836e
  4368c0:	imul   eax,DWORD PTR [ebx+0x1918d54a],0xff000083
  4368ca:	jmp    0xb589:0xffff86e0
  4368d1:	jmp    DWORD PTR [edi+0x3fce1e]
  4368d7:	inc    DWORD PTR [eax]
  4368d9:	inc    DWORD PTR ds:0x834e5d
  4368df:	call   ebx
  4368e1:	add    bh,dl
  4368e3:	push   esp
  4368e4:	or     eax,0x8300b0
  4368e9:	sbb    ebp,0xffffffd4
  4368ec:	and    al,0xcc
  4368ee:	int3   
  4368ef:	add    edi,0xffffffff
  4368f2:	aas    
  4368f3:	sub    BYTE PTR [edx-0xffff18],0xff
  4368fa:	add    eax,0xcc00a431
  4368ff:	call   DWORD PTR [edi+edi*8-0x4f]
  436903:	mov    edi,0xffbb3a
  436908:	add    DWORD PTR [eax],0x6e
  43690b:	mov    ds:0xffff00c2,eax
  436910:	out    dx,al
  436911:	add    BYTE PTR ds:0xff0a9624,bl
  436917:	inc    DWORD PTR [eax]
  436919:	add    BYTE PTR [edx-0x7cff3ee1],bl
  43691f:	add    BYTE PTR [eax-0x1],ah
  436922:	push   ecx
  436923:	fstp   DWORD PTR [ecx+0x2a]
  436926:	inc    DWORD PTR [eax]
  436928:	add    bh,bh
  43692a:	retf   
  43692b:	mov    ebx,0x83ffff3b
  436930:	or     eax,0xec28ca00
  436935:	pushf  
  436936:	mov    DWORD PTR [ebx+0x3900ffff],eax
  43693c:	enter  0xff83,0xff
  436940:	test   DWORD PTR [eax],0xe8617efb
  436946:	cmp    edi,0x0
  436949:	call   DWORD PTR [edi]
  43694b:	xor    eax,0xffccff31
  436950:	inc    DWORD PTR [ebx-0x1f6dbcee]
  436956:	add    ah,cl
  436958:	inc    DWORD PTR [ebx+0xc11f63]
  43695e:	add    BYTE PTR [eax],al
  436960:	call   0x8910:0xf03ff483
  436967:	add    bh,bh
  436969:	add    BYTE PTR [edi],bl
  43696b:	or     BYTE PTR [ecx],bl
  43696d:	add    ah,cl
  43696f:	add    BYTE PTR [eax],dl
  436971:	jmp    FWORD PTR [ebx-0x76839524]
  436977:	inc    DWORD PTR [ebx-0x22172800]
  43697d:	cmp    edi,0xffffffcc
  436980:	mov    WORD PTR [ebx+0x336b0c72],es
  436986:	(bad)  
  436987:	dec    esp
  436989:	call   FWORD PTR [ebp+0xff2e3d]
  43698f:	add    dh,cl
  436991:	and    edx,0xfffffff3
  436994:	lods   al,BYTE PTR ds:[esi]
  436995:	fwait
  436996:	int3   
  436997:	(bad)  
  436998:	(bad)  
  436999:	(bad)  
  43699a:	aas    
  43699b:	jbe    0x43695d
  43699d:	mov    esp,ecx
  43699f:	inc    esp
  4369a1:	xor    DWORD PTR [esi-0x7cc77bee],0xffffff83
  4369a8:	(bad)  
  4369a9:	(bad)  
  4369aa:	jnp    0x4369c9
  4369ac:	inc    esi
  4369ad:	cmp    edi,0xffffffff
  4369b0:	mov    esp,0x9ade5900
  4369b5:	mov    dh,0xff
  4369b7:	inc    DWORD PTR [eax]
  4369b9:	(bad)  
  4369ba:	jg     0x436a1a
  4369bc:	test   BYTE PTR [eax],al
  4369be:	add    BYTE PTR [eax],al
  4369c0:	cwde   
  4369c1:	mov    DWORD PTR [eax+0x1f],eax
  4369c4:	push   edi
  4369c5:	lds    eax,FWORD PTR [eax]
  4369c7:	inc    DWORD PTR [eax]
  4369c9:	add    BYTE PTR [esp+ecx*4],bh
  4369cc:	inc    ebx
  4369cd:	cmp    edi,0xffffffff
  4369d0:	dec    ebx
  4369d1:	add    BYTE PTR [eax+esi*4+0x32],dl
  4369d5:	push   esi
  4369d6:	(bad)  
  4369d7:	dec    DWORD PTR [ecx-0x26e2a401]
  4369dd:	add    bh,bh
  4369df:	inc    DWORD PTR [ebx]
  4369e1:	add    BYTE PTR [eax],dl
  4369e3:	hlt    
  4369e4:	addr16 xor cl,ah
  4369e7:	(bad)  
  4369e8:	(bad)  
  4369e9:	call   FWORD PTR [eax-0x4c]
  4369ec:	loope  0x4369ed
  4369ee:	add    BYTE PTR [ebx+0x1c69ff1f],al
  4369f4:	stc    
  4369f5:	inc    esp
  4369f6:	(bad)  
  4369f7:	(bad)  
  4369f8:	dec    esp
  4369fa:	icebp  
  4369fb:	add    ah,dh
  4369fd:	inc    DWORD PTR [eax]
  4369ff:	sbb    DWORD PTR [ecx],0x0
  436a02:	mov    ch,bh
  436a04:	retf   
  436a05:	sbb    eax,0x8989ff00
  436a0a:	aam    0x7
  436a0c:	icebp  
  436a0d:	mov    edi,edi
  436a0f:	int3   
  436a10:	test   al,0x0
  436a12:	test   ch,cl
  436a14:	cmovge eax,DWORD PTR [eax]
  436a17:	add    DWORD PTR [ebx+0x228f4183],0xffffffff
  436a1e:	add    BYTE PTR [eax],al
  436a20:	cmp    bh,0x52
  436a23:	(bad)  
  436a24:	xchg   DWORD PTR [ebp+0xffff00],ebp
  436a2a:	inc    esi
  436a2b:	(bad)  
  436a2c:	ret    
  436a2d:	add    bh,bh
  436a2f:	inc    ebp
  436a31:	(bad)  
  436a32:	cmp    al,0x91
  436a34:	aam    0xf1
  436a36:	cmp    edi,0x0
  436a39:	add    BYTE PTR [edi-0xff7444],bl
  436a3f:	call   DWORD PTR [edi]
  436a41:	mov    DWORD PTR [eax+0x2f],esp
  436a44:	leave  
  436a45:	ror    BYTE PTR [ecx-0x4b7c0077],1
  436a4b:	sahf   
  436a4c:	into   
  436a4d:	dec    esp
  436a4f:	jmp    ebp
  436a51:	add    bl,ch
  436a53:	lods   al,BYTE PTR ds:[esi]
  436a54:	dec    esp
  436a55:	icebp  
  436a56:	add    DWORD PTR [ebx-0x42373400],0x7c
  436a5d:	add    BYTE PTR [eax],al
  436a5f:	add    BYTE PTR [ebx-0x1],bl
  436a62:	sub    esi,DWORD PTR [ebx-0x957e]
  436a68:	int3   
  436a69:	mov    DWORD PTR [edx+0x3a],ebp
  436a6c:	jne    0x436a6d
  436a6e:	(bad)  
  436a6f:	(bad)  
  436a70:	jle    0x4369f5
  436a72:	or     ch,ah
  436a74:	test   DWORD PTR [edi-0x33007601],ebp
  436a7a:	js     0x436a9b
  436a7c:	pop    esp
  436a7d:	add    bh,bh
  436a7f:	int3   
  436a80:	inc    ebx
  436a81:	jmp    FWORD PTR [eax]
  436a83:	cmp    ebx,DWORD PTR [eax-0x7c0000b3]
  436a89:	and    DWORD PTR [ebx-0x4a],0x74
  436a8d:	inc    DWORD PTR [eax]
  436a8f:	call   FWORD PTR [ebx-0x77]
  436a92:	stos   DWORD PTR es:[edi],eax
  436a93:	mov    esp,0xff83ce87
  436a98:	add    ah,cl
  436a9a:	pop    DWORD PTR [eax+edx*8+0x300ff00]
  436aa1:	add    BYTE PTR [edx-0x39],al
  436aa4:	adc    DWORD PTR [eax-0x760001],esp
  436aaa:	pop    ds
  436aab:	out    dx,eax
  436aac:	dec    ecx
  436aad:	add    BYTE PTR [eax],al
  436aaf:	sub    DWORD PTR [esi+0x0],0x2f
  436ab3:	(bad)  
  436ab4:	jbe    0x436af9
  436ab6:	(bad)  
  436ab7:	(bad)  
  436ab8:	(bad)  
  436ab9:	push   DWORD PTR [ebp-0xc674]
  436abf:	dec    DWORD PTR [esi-0x1]
  436ac2:	test   al,0x6d
  436ac4:	jns    0x436b3b
  436ac6:	add    bh,bh
  436ac8:	or     DWORD PTR [ecx-0x337800b5],0x0
  436acf:	add    bh,bh
  436ad1:	(bad)  
  436ad2:	jge    0x436b44
  436ad4:	ins    DWORD PTR es:[edi],dx
  436ad5:	pusha  
  436ad6:	add    BYTE PTR [eax],al
  436ad8:	int3   
  436ad9:	and    DWORD PTR [ebx],0xffffffd8
  436adc:	add    al,0x89
  436ade:	inc    DWORD PTR [eax]
  436ae0:	xlat   BYTE PTR ds:[ebx]
  436ae1:	call   DWORD PTR [ecx-0xf]
  436ae4:	pop    ebp
  436ae5:	imul   edi,edi,0x56cc00cc
  436aeb:	das    
  436aec:	or     DWORD PTR [eax],eax
  436aee:	add    BYTE PTR [eax],al
  436af0:	rol    DWORD PTR [eax],cl
  436af2:	aam    0x8b
  436af4:	popa   
  436af5:	jmp    0x14337f9
  436afa:	xchg   edi,eax
  436afb:	in     al,dx
  436afc:	sar    bh,cl
  436afe:	add    bh,bh
  436b00:	push   ss
  436b01:	int3   
  436b02:	sbb    eax,DWORD PTR [edi*8-0x33ff1a]
  436b09:	add    bh,dh
  436b0b:	mov    bl,0x2a
  436b0d:	add    DWORD PTR [eax],0xffffff89
  436b10:	and    eax,0x3e48c7ff
  436b15:	inc    ebp
  436b16:	(bad)  
  436b17:	(bad)  
  436b18:	(bad)  
  436b19:	dec    DWORD PTR [esi-0x7c00af4e]
  436b1f:	xor    DWORD PTR [ebp-0x1],0x5d
  436b23:	push   ds
  436b24:	cmp    eax,0xff830068
  436b29:	sbb    DWORD PTR [edi],0xffffffc8
  436b2c:	pop    ds
  436b2d:	cmp    edi,0x0
  436b30:	inc    eax
  436b31:	mov    DWORD PTR [eax],edx
  436b33:	mov    ch,0xc7
  436b35:	std    
  436b36:	add    bh,bh
  436b38:	dec    DWORD PTR [ecx+0xe8dfd3]
  436b3e:	(bad)  
  436b3f:	jmp    FWORD PTR [eax-0x29f4dc01]
  436b45:	sbb    edi,edi
  436b47:	dec    DWORD PTR [ecx+0x79fda189]
  436b4d:	(bad)  
  436b4e:	inc    DWORD PTR [ebx+0x52c3ff2e]
  436b54:	sbb    ebx,DWORD PTR [esi-0x1]
  436b57:	(bad)  
  436b58:	inc    DWORD PTR [eax]
  436b5a:	cmp    BYTE PTR [eax-0x7a],al
  436b5d:	dec    DWORD PTR [ecx+0x72838e00]
  436b63:	jb     0x436bdc
  436b65:	xchg   edi,edi
  436b67:	(bad)  
  436b68:	inc    DWORD PTR [eax]
  436b6a:	xchg   edx,eax
  436b6b:	push   edx
  436b6c:	(bad)  
  436b6e:	(bad)  
  436b6f:	call   DWORD PTR [eax+0x0]
  436b72:	and    ecx,DWORD PTR [esi+0xffc81c]
  436b78:	mov    DWORD PTR [ebx+0x71e4f3],eax
  436b7e:	add    DWORD PTR [eax],0xb
  436b81:	push   DWORD PTR [ecx-0xa]
  436b84:	ret    
  436b85:	mov    eax,ds:0xffff00
  436b8a:	stos   DWORD PTR es:[edi],eax
  436b8b:	retf   0x3e
  436b8e:	mov    DWORD PTR [eax],eax
  436b90:	fdivr  st,st(7)
  436b92:	dec    edi
  436b93:	adc    eax,0xff0035be
  436b98:	dec    esp
  436b9a:	clc    
  436b9b:	xor    al,0xe6
  436b9d:	mov    DWORD PTR [eax],eax
  436b9f:	call   DWORD PTR [ebx+0x4ed52f00]
  436ba5:	(bad)  
  436ba6:	mov    edi,edi
  436ba8:	add    DWORD PTR [eax],0xffffffab
  436bab:	xor    ch,0x0
  436bae:	(bad)  
  436baf:	dec    edx
  436bb1:	add    ch,dl
  436bb3:	fadd   QWORD PTR [edi-0x1]
  436bb6:	(bad)  
  436bb7:	(bad)  
  436bb8:	(bad)  
  436bb9:	dec    esi
  436bbb:	inc    edx
  436bbc:	xor    al,0x89
  436bbe:	add    bh,bh
  436bc0:	sar    edi,0xc9
  436bc3:	xor    al,BYTE PTR [eax-0x337c00ff]
  436bc9:	inc    ecx
  436bcb:	(bad)  [edi+edi*8]
  436bce:	add    ah,cl
  436bd0:	or     eax,0x998426cc
  436bd5:	sar    edi,1
  436bd7:	add    DWORD PTR [ebx+0x8ec0100],0xffffffff
  436bde:	cmp    edi,0xffffffdd
  436be1:	inc    DWORD PTR [ebx+edx*8-0xe9c7]
  436be8:	int3   
  436be9:	add    BYTE PTR [edx-0xbc82],al
  436bef:	jmp    FWORD PTR [ebp+0x0]
  436bf2:	jl     0x436bde
  436bf4:	pop    esi
  436bf5:	stc    
  436bf6:	int3   
  436bf7:	(bad)  
  436bf8:	inc    DWORD PTR [eax]
  436bfa:	and    al,0xf8
  436bfc:	and    BYTE PTR [eax],al
  436bfe:	cmp    edi,0x51
  436c01:	jmp    FWORD PTR [esp+ebp*4-0x7c7c1d2b]
  436c08:	int3   
  436c09:	inc    DWORD PTR [ebp+0xffd0c7]
  436c0f:	(bad)  
  436c10:	jl     0x436c12
  436c12:	push   esp
  436c13:	add    BYTE PTR [eax+edi*4-0x7d00],dl
  436c1a:	xlat   BYTE PTR ds:[ebx]
  436c1b:	out    0x45,al
  436c1d:	mov    DWORD PTR [eax],eax
  436c1f:	add    BYTE PTR [eax+0xb5b8000],bh
  436c25:	sar    edi,cl
  436c27:	inc    DWORD PTR [ebx-0x235e4c7d]
  436c2d:	inc    DWORD PTR [eax]
  436c2f:	dec    esp
  436c31:	sub    DWORD PTR [eax],0x2c
  436c34:	xor    DWORD PTR [esi],0x83cc0089
  436c3a:	repz mov edx,DWORD PTR [ebp+0x47ff00ff]
  436c41:	call   FWORD PTR [ecx]
  436c43:	pushf  
  436c44:	jb     0x436c66
  436c46:	add    BYTE PTR [ecx-0x336f0001],cl
  436c4c:	add    edi,edi
  436c4e:	cmp    edi,0x9
  436c51:	jmp    FWORD PTR [ecx-0x6ad5fd]
  436c57:	inc    DWORD PTR [ebx+0x787c3400]
  436c5d:	(bad)  
  436c5e:	(bad)  
  436c5f:	jmp    FWORD PTR [esi-0x70521834]
  436c65:	xchg   esp,eax
  436c66:	dec    DWORD PTR [ecx+0x1318cc83]
  436c6c:	add    al,0xff
  436c6e:	(bad)  
  436c6f:	jmp    edx
  436c71:	sub    esp,0xffffffaf
  436c74:	sub    eax,0xff83b4
  436c79:	add    BYTE PTR [edi-0xf96e],dh
  436c7f:	add    BYTE PTR [edx],bh
  436c81:	mov    DWORD PTR [edi-0x3f],edi
  436c84:	mov    esp,0xffff0079
  436c89:	xor    DWORD PTR [ebx],0x6
  436c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436c8d:	int3   
  436c8e:	add    DWORD PTR [eax],0xfffffff1
  436c91:	dec    edi
  436c93:	adc    eax,0xfffc27
  436c98:	inc    DWORD PTR [eax]
  436c9a:	mov    bh,0x85
  436c9c:	fs (bad) 
  436c9e:	(bad)  
  436c9f:	jmp    DWORD PTR [ecx-0x34]
  436ca2:	pop    ebp
  436ca3:	imul   esi,DWORD PTR [edi+esi*4-0xff0001],0x3
  436cab:	or     dh,BYTE PTR [ebp-0x1]
  436cae:	mov    DWORD PTR [ebx-0x6e217c3d],eax
  436cb4:	cmp    eax,0xff00ffcf
  436cb9:	add    dl,ch
  436cbb:	cwde   
  436cbc:	addr16 add bh,bh
  436cbf:	add    ah,dh
  436cc1:	add    ch,ah
  436cc3:	xchg   bx,ax
  436cc5:	lods   eax,DWORD PTR ds:[esi]
  436cc6:	inc    DWORD PTR [ebx+0x66a8900]
  436ccc:	mov    eax,ds:0xbd00ff83
  436cd1:	add    BYTE PTR [esi],bh
  436cd3:	ror    bh,cl
  436cd5:	or     eax,0xff00ff83
  436cda:	cmc    
  436cdb:	cmc    
  436cdc:	adc    edi,edi
  436cde:	int3   
  436cdf:	(bad)  
  436ce0:	cmp    eax,DWORD PTR [eax]
  436ce2:	dec    esp
  436ce3:	sti    
  436ce4:	xchg   edi,eax
  436ce5:	sub    eax,0xff00ff00
  436cea:	outs   dx,BYTE PTR ds:[esi]
  436ceb:	add    al,0x43
  436ced:	cmp    edi,0xffffffff
  436cf0:	hlt    
  436cf1:	add    BYTE PTR [edi+eax*8-0x76ff7789],al
  436cf8:	add    bh,bh
  436cfa:	rcl    DWORD PTR [ebp-0xff76e7],cl
  436d00:	out    dx,eax
  436d01:	call   DWORD PTR [edi]
  436d03:	xchg   ecx,eax
  436d04:	cmp    BYTE PTR [esi-0x1],bl
  436d07:	or     DWORD PTR [ecx+0x751fe400],0xffffff89
  436d0e:	cmp    edi,0xffffff92
  436d11:	add    BYTE PTR [ecx-0x75],bl
  436d14:	int    0x19
  436d16:	dec    DWORD PTR [ecx-0xc92007d]
  436d1c:	jbe    0x436d1e
  436d1e:	add    ah,cl
  436d20:	inc    edi
  436d21:	call   FWORD PTR [esi]
  436d23:	fldcw  WORD PTR [esi+edi*1]
  436d26:	(bad)  
  436d27:	inc    DWORD PTR [eax]
  436d29:	add    dh,bl
  436d2b:	cmp    al,0x88
  436d2d:	(bad)  
  436d2e:	inc    DWORD PTR [eax]
  436d30:	sub    DWORD PTR [bx+di],0x1e
  436d34:	push   esi
  436d35:	or     edi,edi
  436d37:	inc    DWORD PTR [ebx+0x103c38ff]
  436d3d:	(bad)  
  436d3e:	dec    DWORD PTR [ecx+0x5c0b007f]
  436d44:	aad    0x57
  436d46:	int3   
  436d47:	add    BYTE PTR [esp+ecx*8-0x5],cl
  436d4b:	add    bh,bh
  436d4d:	int3   
  436d4e:	int3   
  436d4f:	cmp    bh,BYTE PTR [ebp-0x1]
  436d52:	out    0x3e,al
  436d54:	push   esi
  436d55:	js     0x436d56
  436d57:	add    dl,bl
  436d59:	adc    DWORD PTR [edi+edi*8],0xffffffff
  436d5d:	(bad)  
  436d5e:	jmp    FWORD PTR [ecx+0x1]
  436d61:	sub    DWORD PTR [edx*1-0x7c00f01d],0xffffffb9
  436d69:	and    ebx,0xffffffff
  436d6c:	add    DWORD PTR [eax],0x0
  436d6f:	pusha  
  436d70:	jne    0x436cfb
  436d72:	jae    0x436d28
  436d74:	retf   
  436d75:	ror    BYTE PTR [ecx+0x5eff49ff],1
  436d7b:	add    bh,bh
  436d7d:	int3   
  436d7e:	inc    DWORD PTR [esi-0x28]
  436d81:	jmp    DWORD PTR [eax]
  436d83:	mov    ecx,0xff83ca62
  436d88:	inc    edi
  436d89:	int3   
  436d8a:	add    bh,bh
  436d8c:	(bad)  
  436d8d:	(bad)  
  436d8e:	(bad)  
  436d8f:	fidiv  DWORD PTR [ebp-0x27d2a534]
  436d95:	jnp    0x436d97
  436d97:	dec    ebx
  436d99:	dec    DWORD PTR [ecx-0x1]
  436d9c:	add    DWORD PTR [eax],0x0
  436d9f:	pop    ecx
  436da0:	and    edi,edi
  436da2:	cmp    eax,0xffe2b6fc
  436da7:	add    BYTE PTR [ecx],cl
  436da9:	call   FWORD PTR [edi]
  436dab:	(bad)  
  436dac:	inc    DWORD PTR [eax]
  436dae:	(bad)  
  436daf:	fadd   DWORD PTR [esi-0x77]
  436db2:	out    dx,al
  436db3:	cld    
  436db4:	(bad)  
  436db5:	dec    edi
  436db6:	(bad)  
  436db7:	(bad)  
  436db8:	mov    ebp,0xff83a600
  436dbd:	(bad)  
  436dbe:	dec    edi
  436dc0:	std    
  436dc1:	call   DWORD PTR [edi-0x929a70]
  436dc7:	mov    DWORD PTR [edi+edi*8-0x7600ffb7],edx
  436dce:	mov    DWORD PTR [ecx],ecx
  436dd0:	add    DWORD PTR [ebx-0x67b22da0],0x0
  436dd7:	add    BYTE PTR [eax],al
  436dd9:	jmp    FWORD PTR [ecx+0x0]
  436ddc:	add    BYTE PTR [ebx-0x2a8b01],al
  436de2:	mov    bh,0x57
  436de4:	mov    ch,0x27
  436de6:	add    BYTE PTR [ebx-0x50ffa4],al
  436dec:	mov    DWORD PTR [eax],eax
  436dee:	dec    esp
  436df0:	jg     0x436df1
  436df2:	mov    ebx,0xffe8983e
  436df7:	add    BYTE PTR [esi],ah
  436df9:	mov    DWORD PTR ds:0xffffff,eax
  436dff:	js     0x436e5b
  436e01:	add    BYTE PTR [ecx+0x311037],ah
  436e07:	jmp    FWORD PTR ds:0xff004500
  436e0d:	add    BYTE PTR [ebx-0x2900d7b9],al
  436e13:	inc    edi
  436e14:	int    0xe1
  436e16:	add    DWORD PTR [ebx-0x967c85],0xffffffcc
  436e1d:	inc    DWORD PTR [ebx-0x37ff7377]
  436e23:	outs   dx,BYTE PTR ds:[esi]
  436e24:	xchg   ecx,eax
  436e25:	xor    eax,DWORD PTR [eax]
  436e27:	add    cl,dl
  436e29:	add    BYTE PTR [ecx-0x1],ah
  436e2c:	add    bh,bh
  436e2e:	add    BYTE PTR [esi+0x335b83fb],bh
  436e34:	sbb    al,0x2f
  436e36:	add    BYTE PTR [ebx-0x3700cc],al
  436e3c:	dec    esp
  436e3e:	push   DWORD PTR [ecx-0x6e85ffa3]
  436e44:	repz ud0 eax,DWORD PTR [eax]
  436e48:	mov    es,WORD PTR [eax]
  436e4a:	mov    DWORD PTR [eax],0x3b008300
  436e50:	sti    
  436e51:	mov    DWORD PTR [edi+0x14],ecx
  436e54:	push   ebx
  436e55:	out    0xff,al
  436e57:	jmp    DWORD PTR [ebp+0xff8fcc]
  436e5d:	cmp    edi,0x22
  436e60:	adc    bh,bh
  436e62:	faddp  st(5),st
  436e64:	mov    ebx,DWORD PTR [ebx-0x77]
  436e67:	add    BYTE PTR [edx],ch
  436e69:	dec    DWORD PTR [edi-0x77]
  436e6c:	add    BYTE PTR [ebx+0xf6bdff],al
  436e72:	push   ecx
  436e73:	div    BYTE PTR [ebx+0x1]
  436e76:	mov    edi,edi
  436e78:	(bad)  
  436e79:	push   DWORD PTR [ebx-0x767c0034]
  436e7f:	xor    DWORD PTR ds:0x8f1a56ff,ebx
  436e85:	inc    ecx
  436e86:	cmp    edi,0xffffffdb
  436e89:	mov    DWORD PTR [eax+0x0],edx
  436e8f:	aaa    
  436e90:	fmul   DWORD PTR [ecx+0x37983973]
  436e96:	add    BYTE PTR [eax],al
  436e98:	mov    dh,0x0
  436e9a:	cli    
  436e9b:	(bad)  
  436e9c:	(bad)  
  436e9d:	(bad)  
  436e9e:	inc    DWORD PTR [ecx+0x7ee6898e]
  436ea4:	cmp    BYTE PTR [edx],dh
  436ea6:	dec    DWORD PTR [ecx-0x7cd500fe]
  436eac:	(bad)  
  436ead:	dec    DWORD PTR [ecx-0x3300c7cc]
  436eb3:	mov    ds:0x83ffb258,eax
  436eb8:	sbb    bh,bh
  436eba:	jb     0x436e3f
  436ebc:	cmp    edi,0xffffffff
  436ebf:	and    eax,0xd7748339
  436ec4:	sbb    edi,DWORD PTR [ebx-0x33de0001]
  436eca:	dec    esp
  436ecb:	add    bh,bh
  436ecd:	add    BYTE PTR [ebx+0x54ff5189],al
  436ed3:	jmp    0x142850b
  436ed8:	cmc    
  436ed9:	dec    edx
  436edb:	inc    DWORD PTR [eax]
  436edd:	(bad)  
  436ede:	jmp    FWORD PTR [edi+ecx*1]
  436ee1:	jmp    FWORD PTR [esi-0xfa375e]
  436ee7:	sbb    DWORD PTR [ecx-0x1],0x56
  436eeb:	mov    DWORD PTR [eax],eax
  436eed:	dec    esp
  436eef:	sbb    cl,BYTE PTR [ecx-0x1]
  436ef2:	adc    eax,DWORD PTR [esp+esi*8]
  436ef5:	imul   eax,DWORD PTR [eax],0xffffffff
  436ef8:	ret    0xeaff
  436efb:	inc    DWORD PTR [eax]
  436efd:	(bad)  
  436efe:	(bad)  
  436eff:	fabs   
  436f01:	push   DWORD PTR [ecx+0x53b90]
  436f07:	inc    DWORD PTR [ebx]
  436f09:	jmp    DWORD PTR [edi]
  436f0b:	add    BYTE PTR [eax],al
  436f0d:	inc    DWORD PTR [ebx+0x2cc9605]
  436f13:	scas   al,BYTE PTR es:[edi]
  436f14:	lock inc edx
  436f16:	(bad)  
  436f17:	jmp    ecx
  436f19:	int3   
  436f1a:	xor    bh,bh
  436f1c:	(bad)  
  436f1d:	dec    DWORD PTR [ecx+0x23001a85]
  436f23:	inc    esp
  436f24:	pop    edi
  436f25:	jno    0x436f26
  436f27:	call   FWORD PTR [esi-0x1]
  436f2a:	inc    ebx
  436f2b:	add    BYTE PTR [eax],al
  436f2d:	or     DWORD PTR [ecx-0x4f7c7701],0xffffffed
  436f34:	dec    ebp
  436f35:	je     0x436ec0
  436f37:	add    BYTE PTR [eax+0xcc4c00],bl
  436f3d:	inc    DWORD PTR [eax]
  436f3f:	lds    esp,FWORD PTR [edi+edi*8+0x10]
  436f43:	ins    BYTE PTR es:[edi],dx
  436f44:	ror    ch,1
  436f46:	add    DWORD PTR [ebx+0xec0077],0xffffffff
  436f4d:	(bad)  
  436f4e:	(bad)  
  436f4f:	mov    ecx,0x13f80075
  436f54:	aad    0x6c
  436f56:	add    BYTE PTR [eax],al
  436f58:	(bad)  
  436f59:	int3   
  436f5a:	loope  0x436f5b
  436f5c:	int3   
  436f5d:	(bad)  
  436f5e:	(bad)  
  436f5f:	fistp  WORD PTR [edx-0x37036d7d]
  436f65:	add    eax,0xfff70000
  436f6a:	mov    eax,ds:0xff830000
  436f6f:	aad    0xd1
  436f71:	add    al,ah
  436f73:	adc    BYTE PTR [ebp+0x27ff83ef],0x83
  436f7a:	(bad)
  436f7d:	inc    DWORD PTR [eax]
  436f7f:	mov    esi,DWORD PTR [edx+0x6bbd2389]
  436f85:	sub    BYTE PTR [eax],al
  436f87:	push   DWORD PTR [eax+eax*1]
  436f8a:	in     al,0xcc
  436f8c:	mov    edi,edi
  436f8e:	dec    DWORD PTR [edx+eax*2-0x375aee01]
  436f95:	mov    cl,0xff
  436f97:	add    BYTE PTR [eax],ah
  436f99:	add    BYTE PTR [ebx+eax*4+0x52ffffff],dl
  436fa0:	mov    al,0xff
  436fa2:	sbb    BYTE PTR [edi],ah
  436fa4:	cmp    eax,esi
  436fa6:	(bad)  
  436fa7:	call   FWORD PTR [eax+0x0]
  436faa:	scas   al,BYTE PTR es:[edi]
  436fab:	or     esp,0xffffffff
  436fae:	add    BYTE PTR [edi+0x1f3a0062],ah
  436fb4:	(bad)  [esi-0x1]
  436fb7:	mov    esi,ecx
  436fb9:	push   edx
  436fbb:	(bad)  
  436fbc:	(bad)  
  436fbd:	inc    DWORD PTR [eax]
  436fbf:	test   al,0x4e
  436fc1:	dec    ebp
  436fc3:	push   ebp
  436fc4:	or     DWORD PTR [eax+eax*1+0x5f005a83],ebp
  436fcb:	add    bh,bh
  436fcd:	inc    DWORD PTR [ebx+0xff5ac7]
  436fd3:	and    DWORD PTR ds:0x3cccff60,ebx
  436fd9:	cmp    DWORD PTR [eax+eax*1],0xffffffff
  436fdd:	int3   
  436fde:	add    DWORD PTR [ecx+0x1a],0x0
  436fe2:	mov    ah,0x18
  436fe4:	push   ebx
  436fe5:	loop   0x436fe6
  436fe7:	call   DWORD PTR [edi-0xff2a01]
  436fed:	add    bh,bh
  436fef:	lock or edi,edi
  436ff2:	xchg   BYTE PTR [edx-0x2291],bh
  436ff8:	or     bh,bh
  436ffa:	xchg   edi,eax
  436ffb:	int3   
  436ffc:	(bad)  
  436ffd:	inc    DWORD PTR [eax]
  436fff:	es adc al,0x0
  437002:	lods   al,BYTE PTR ds:[esi]
  437003:	mov    ah,dh
  437005:	pop    esp
  437006:	inc    DWORD PTR [ebx+0xd6ffa8]
  43700c:	inc    DWORD PTR [eax]
  43700e:	call   DWORD PTR [ebx]
  437010:	dec    esp
  437011:	push   DWORD PTR [esi+edx*2+0x28]
  437015:	pop    DWORD PTR [eax]
  437017:	inc    DWORD PTR [ecx+0x0]
  43701a:	xchg   ebp,eax
  43701b:	add    BYTE PTR [eax],al
  43701d:	inc    DWORD PTR [ebx-0x3d0037d9]
  437023:	add    BYTE PTR [eax+0x67ffff11],0xff
  43702a:	das    
  43702b:	add    BYTE PTR [ebx+0x6b43ffcc],al
  437031:	jmp    FWORD PTR [ebx+0x4a]
  437034:	out    dx,al
  437035:	push   ebx
  437036:	add    BYTE PTR [eax],al
  437038:	and    bh,bh
  43703a:	adc    eax,0xffffff00
  43703f:	push   ebx
  437040:	jl     0x437042
  437042:	rol    DWORD PTR [ebx],cl
  437044:	mov    dh,0xa5
  437046:	(bad)  
  437047:	call   DWORD PTR [ecx-0xff4f00]
  43704d:	dec    DWORD PTR [ecx+0x6affb13b]
  437053:	push   cs
  437054:	dec    ebp
  437055:	lods   al,BYTE PTR ds:[esi]
  437056:	int3   
  437057:	jmp    FWORD PTR ds:0xffff8eff
  43705d:	add    BYTE PTR [eax],al
  43705f:	adc    esi,eax
  437061:	add    BYTE PTR [ebx-0x8],al
  437064:	leave  
  437065:	aam    0x0
  437067:	sbb    DWORD PTR [ecx-0x1],0x30
  43706b:	(bad)  
  43706c:	inc    DWORD PTR [ebx+0x8ac9ff]
  437072:	mov    ebx,0x834e38fd
  437077:	(bad)  
  437078:	mov    edi,0xff93ff
  43707d:	inc    DWORD PTR [eax]
  43707f:	loope  0x437092
  437081:	add    BYTE PTR [ecx],dh
  437083:	push   ecx
  437084:	jle    0x4370ef
  437086:	(bad)  
  437087:	call   DWORD PTR [ebx-0x1]
  43708a:	jbe    0x43700f
  43708c:	inc    DWORD PTR [eax]
  43708e:	dec    DWORD PTR [eax-0x7f]
  437091:	(bad)  
  437092:	cmp    BYTE PTR [ecx-0x3f],ah
  437095:	inc    WORD PTR [ebx-0x307cda]
  43709c:	mov    DWORD PTR [eax],eax
  43709e:	inc    DWORD PTR [edx-0x17ba3323]
  4370a4:	fs (bad) 
  4370a6:	int3   
  4370a7:	int3   
  4370a8:	sar    edi,cl
  4370aa:	fiadd  DWORD PTR [eax]
  4370ac:	add    BYTE PTR [eax],al
  4370ae:	add    BYTE PTR [esi+0x0],ah
  4370b1:	call   DWORD PTR [eax]
  4370b3:	fist   DWORD PTR [edi+ecx*1]
  4370b6:	int3   
  4370b7:	(bad)  
  4370b8:	fld    QWORD PTR [eax]
  4370ba:	lods   eax,DWORD PTR ds:[esi]
  4370bb:	add    bh,bh
  4370bd:	(bad)  
  4370be:	dec    DWORD PTR [ebx-0x20]
  4370c1:	mov    ebx,esp
  4370c3:	adc    ecx,esi
  4370c5:	(bad)  
  4370c7:	dec    DWORD PTR [edi+edi*8-0x760024]
  4370ce:	add    BYTE PTR [edx-0x78],bh
  4370d1:	call   DWORD PTR [esi-0x335eeccd]
  4370d7:	add    BYTE PTR [edx-0x1],ch
  4370da:	pushf  
  4370db:	inc    DWORD PTR [ebx-0x7ab1ff01]
  4370e1:	add    BYTE PTR [ebx],dh
  4370e3:	sbb    al,bl
  4370e5:	dec    ecx
  4370e6:	inc    DWORD PTR [eax]
  4370e8:	push   ecx
  4370e9:	add    BYTE PTR [ebp+0x0],ch
  4370ec:	(bad)  
  4370ed:	(bad)  
  4370ee:	call   FWORD PTR [ecx-0x3c]
  4370f1:	(bad)  
  4370f2:	cli    
  4370f3:	adc    ebx,DWORD PTR [ebx]
  4370f5:	sti    
  4370f6:	int3   
  4370f7:	(bad)  
  4370f8:	jmp    0xffff:0xff00f900
  4370ff:	mov    edi,0x9f9a00b6
  437104:	push   edi
  437105:	sub    al,0x0
  437107:	add    BYTE PTR ds:0x83cc7dff,dl
  43710d:	int3   
  43710e:	add    bh,bl
  437110:	pop    DWORD PTR [eax]
  437112:	add    DWORD PTR [ecx+0x35],esp
  437115:	or     al,0x0
  437117:	add    BYTE PTR [esi],bl
  437119:	add    dh,ah
  43711b:	dec    esp
  43711d:	inc    DWORD PTR [ebx+0x2ffe79e]
  437123:	dec    ebp
  437124:	cmp    cl,BYTE PTR [ebx-0x8e0100]
  43712a:	loopne 0x43712b
  43712c:	int3   
  43712d:	inc    DWORD PTR [eax]
  43712f:	push   0xc846830e
  437134:	jl     0x437173
  437136:	add    BYTE PTR [eax],al
  437138:	sar    bh,0xff
  43713b:	inc    DWORD PTR [eax]
  43713d:	inc    DWORD PTR [ebx-0x4007d4f]
  437143:	ds mov esp,0xf783ff30
  437149:	mov    DWORD PTR [ecx+0xffff],esi
  43714f:	push   eax
  437150:	push   0xffffffcc
  437152:	dec    dl
  437154:	scas   eax,DWORD PTR es:[edi]
  437155:	scas   al,BYTE PTR es:[edi]
  437156:	inc    DWORD PTR [eax]
  437158:	xchg   esp,eax
  437159:	mov    DWORD PTR ds:0x8383ffff,edx
  43715f:	lods   al,BYTE PTR ds:[esi]
  437160:	push   ds
  437161:	dec    DWORD PTR [esi-0x6d]
  437164:	inc    ebp
  437165:	sahf   
  437166:	add    BYTE PTR [ebx-0xa00bf],al
  43716c:	cmp    edi,0x0
  43716f:	add    esi,edi
  437171:	mov    esi,ebp
  437173:	ss dec ebx
  437175:	push   edx
  437176:	cmp    edi,0x7b
  437179:	(bad)  
  43717a:	in     eax,dx
  43717b:	mov    DWORD PTR [eax],eax
  43717d:	add    ah,cl
  43717f:	int3   
  437180:	cmp    edi,0x24d97551
  437186:	cmp    edi,0xffffff83
  437189:	add    BYTE PTR [edx+0x0],cl
  43718c:	add    bh,bh
  43718e:	xor    DWORD PTR [ecx-0x6a],0xffffffff
  437192:	je     0x4371b0
  437194:	xchg   edx,eax
  437195:	cld    
  437196:	mov    edi,edi
  437198:	cmp    edi,edi
  43719a:	(bad)  
  43719c:	mov    esp,ecx
  43719e:	add    dl,bl
  4371a0:	aam    0xff
  4371a2:	push   esp
  4371a3:	sar    DWORD PTR [ecx+edx*2],0x0
  4371a7:	mov    DWORD PTR [ecx],ecx
  4371a9:	call   FWORD PTR [eax+0x8383]
  4371af:	popf   
  4371b0:	int    0xff
  4371b2:	imul   edi,DWORD PTR [ecx],0x8389a859
  4371b8:	aaa    
  4371b9:	mov    DWORD PTR [edi-0x77],eax
  4371bc:	(bad)  
  4371bd:	(bad)  
  4371be:	jmp    DWORD PTR [eax+0x439dffc9]
  4371c4:	aad    0x97
  4371c6:	inc    DWORD PTR [eax]
  4371c8:	mov    eax,ds:0xff837a00
  4371cd:	or     esp,0x74
  4371d0:	rol    DWORD PTR [eax],0x8f
  4371d3:	xchg   ecx,eax
  4371d4:	je     0x4371a0
  4371d6:	add    BYTE PTR [eax],al
  4371d8:	cmp    BYTE PTR [eax],al
  4371da:	stos   BYTE PTR es:[edi],al
  4371db:	(bad)  
  4371dc:	(bad)  
  4371dd:	inc    DWORD PTR [eax]
  4371df:	fwait
  4371e0:	outs   dx,DWORD PTR ds:[esi]
  4371e1:	call   DWORD PTR [edx-0x7f]
  4371e4:	rcl    BYTE PTR [esp+ecx*8-0x4f7c9001],0xff
  4371ec:	add    BYTE PTR [ebx-0xe0bc7d],al
  4371f2:	fwait
  4371f3:	daa    
  4371f4:	pop    edx
  4371f5:	dec    sp
  4371f8:	into   
  4371f9:	add    BYTE PTR [ebp-0x7d],bl
  4371fc:	add    bh,bh
  4371fe:	add    BYTE PTR [edx],ch
  437200:	mov    ds:0xf59d92ff,eax
  437205:	ret    0xffff
  437208:	or     al,BYTE PTR [eax]
  43720a:	mov    cl,0x0
  43720c:	add    BYTE PTR [eax],al
  43720e:	(bad)  
  43720f:	fcom   QWORD PTR [edx+0x61762789]
  437215:	jns    0x437216
  437217:	add    BYTE PTR [ecx-0x7d],bh
  43721a:	mov    ?,edi
  43721c:	add    BYTE PTR [eax],al
  43721e:	jmp    ebx
  437220:	dec    ecx
  437221:	(bad)  
  437222:	fstp   DWORD PTR [edx*2+0x700ff89]
  437229:	or     ebx,0x0
  43722c:	dec    esp
  43722e:	add    BYTE PTR [edx+0x1e],al
  437231:	add    dh,al
  437233:	sub    eax,DWORD PTR [esi]
  437235:	out    0xff,al
  437237:	mov    DWORD PTR [esi],ecx
  437239:	push   DWORD PTR [ebx]
  43723b:	add    BYTE PTR [ebx+0xda7ffff],al
  437241:	add    BYTE PTR [eax-0x525762],ch
  437247:	mov    DWORD PTR [ebp-0x7d],ebx
  43724a:	mov    al,0x89
  43724c:	inc    DWORD PTR [eax]
  43724e:	(bad)  
  43724f:	out    dx,eax
  437250:	xor    DWORD PTR [eax],eax
  437252:	fwait
  437253:	inc    edi
  437254:	lahf   
  437255:	inc    edx
  437256:	add    ah,cl
  437258:	push   es
  437259:	mov    DWORD PTR [ecx-0x7c007d],esi
  43725f:	out    dx,eax
  437260:	mov    eax,ds:0xa1aeb1ff
  437265:	pop    ds
  437266:	add    BYTE PTR [eax],al
  437268:	mov    DWORD PTR [eax],0xffff8979
  43726e:	add    BYTE PTR [ecx-0x1e4f00fd],bh
  437274:	mov    edx,0xb200ccad
  437279:	dec    ebp
  43727b:	int3   
  43727c:	inc    DWORD PTR [eax]
  43727e:	dec    DWORD PTR [ecx-0x7]
  437281:	add    BYTE PTR ds:0xff18f8c9,bh
  437287:	add    DWORD PTR [edi],0xffffffff
  43728a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43728b:	(bad)  
  43728c:	inc    DWORD PTR [eax]
  43728e:	mov    DWORD PTR [edx+0xf5dff64],ebx
  437294:	or     eax,0xb5ffff21
  437299:	cmp    DWORD PTR [eax+eax*1-0x44ff0100],0x9
  4372a1:	int3   
  4372a2:	ret    
  4372a3:	cmp    BYTE PTR [edi],al
  4372a5:	sti    
  4372a6:	add    BYTE PTR [eax],al
  4372a8:	ins    BYTE PTR es:[edi],dx
  4372a9:	jmp    ebx
  4372ab:	cmp    edi,0xffffffff
  4372ae:	call   DWORD PTR [ebx-0x94dff21]
  4372b4:	fst    DWORD PTR [esi]
  4372b6:	inc    DWORD PTR [eax]
  4372b8:	push   eax
  4372b9:	jmp    FWORD PTR [eax+eax*1-0x21007601]
  4372c0:	xor    eax,0xda220000
  4372c5:	pop    esi
  4372c6:	or     esp,0xffffff9c
  4372c9:	jmp    FWORD PTR [ecx-0x1]
  4372cc:	inc    DWORD PTR [eax]
  4372ce:	int3   
  4372cf:	jbe    0x4372d4
  4372d1:	jmp    FWORD PTR [ebp-0x33e5b179]
  4372d7:	inc    DWORD PTR [edx]
  4372d9:	add    BYTE PTR [edx],ch
  4372db:	(bad)  
  4372dc:	(bad)  
  4372dd:	(bad)  
  4372de:	(bad)  
  4372df:	out    dx,al
  4372e0:	retf   0x3789
  4372e3:	mov    cl,0xee
  4372e5:	xchg   ecx,eax
  4372e6:	inc    DWORD PTR [eax]
  4372e8:	pop    ss
  4372e9:	add    bh,cl
  4372eb:	(bad)  
  4372ec:	inc    DWORD PTR [eax]
  4372ee:	add    BYTE PTR [ecx+ecx*4+0x0],ch
  4372f2:	in     al,0x93
  4372f4:	pop    edi
  4372f5:	and    BYTE PTR [eax],al
  4372f7:	add    BYTE PTR [edx],dl
  4372f9:	mov    DWORD PTR [ebx-0x7d],esi
  4372fc:	or     esp,0xffffffff
  4372ff:	(bad)  
  437300:	test   al,0xff
  437302:	mov    ds:0xccf354a3,eax
  437307:	mov    ecx,edi
  437309:	cmp    edx,0xffffffff
  43730c:	add    BYTE PTR [eax],al
  43730e:	(bad)  
  43730f:	mov    ecx,0xca11ffe6
  437314:	ss mov ecx,0xff25ffff
  43731a:	lea    eax,[eax]
  43731c:	inc    DWORD PTR [eax]
  43731e:	add    BYTE PTR [edx-0x4fce0041],bl
  437324:	jg     0x4372a6
  437326:	inc    DWORD PTR [ebx+0x31cc59]
  43732c:	cmp    edi,0xffffffff
  43732f:	dec    esp
  437330:	push   ecx
  437331:	add    BYTE PTR [esi-0x64579c],bh
  437337:	dec    DWORD PTR [eax-0xf601]
  43733d:	add    bh,bh
  43733f:	jg     0x4373aa
  437341:	add    BYTE PTR [ebx-0x24d6c7],dh
  437347:	int3   
  437348:	lahf   
  437349:	add    DWORD PTR [edi-0x7d],0x0
  43734d:	add    BYTE PTR [eax],al
  43734f:	mov    al,0x84
  437351:	(bad)  
  437352:	jge    0x4373ca
  437354:	(bad)
  437357:	add    bl,cl
  437359:	sbb    DWORD PTR [ecx],0xffffffff
  43735c:	mov    DWORD PTR [eax],eax
  43735e:	add    BYTE PTR [ebx-0x1f143355],ah
  437364:	pop    ecx
  437365:	int3   
  437366:	(bad)  
  437367:	call   FWORD PTR [edi]
  437369:	inc    DWORD PTR [ecx-0x77]
  43736c:	add    BYTE PTR [eax],al
  43736e:	add    BYTE PTR [ebx],bl
  437370:	jge    0x437372
  437372:	ss (bad) 
  437374:	(bad)  
  437375:	mov    ah,0x83
  437377:	(bad)  
  437378:	cmp    edi,edi
  43737a:	xchg   DWORD PTR [ebx-0x13ff3334],eax
  437380:	push   ebx
  437381:	add    BYTE PTR [ebp-0x12],dl
  437384:	cwde   
  437385:	add    al,0x0
  437387:	dec    DWORD PTR [eax+eax*1-0xffc2]
  43738e:	(bad)  
  43738f:	mov    ecx,0x533ff34
  437394:	mov    edx,0x400ff91
  437399:	call   DWORD PTR [esi-0x1]
  43739c:	add    BYTE PTR [eax],al
  43739e:	int3   
  43739f:	push   ebx
  4373a0:	test   esp,0x65131476
  4373a6:	add    bh,bh
  4373a8:	ret    0x64ff
  4373ab:	add    bh,bh
  4373ad:	add    bh,bh
  4373af:	(bad)  
  4373b0:	lahf   
  4373b1:	int3   
  4373b2:	cmp    al,0x7d
  4373b4:	mov    dl,0x8a
  4373b6:	(bad)  
  4373b7:	call   FWORD PTR [ebx-0x7d]
  4373ba:	rol    DWORD PTR [eax],cl
  4373bc:	add    DWORD PTR [eax],0xffffff83
  4373bf:	dec    edx
  4373c0:	mov    al,0x89
  4373c2:	mov    ?,WORD PTR [edi+esi*4-0x1d00ffcc]
  4373c9:	jmp    FWORD PTR [eax+0x0]
  4373cc:	int3   
  4373cd:	add    BYTE PTR [ebx-0x61336a7c],al
  4373d3:	sbb    bh,0x33
  4373d6:	inc    DWORD PTR [eax]
  4373d8:	xchg   esp,eax
  4373d9:	call   DWORD PTR [esi]
  4373db:	add    bh,bh
  4373dd:	inc    DWORD PTR [eax]
  4373df:	imul   ebp,edi,0xffffffff
  4373e2:	das    
  4373e3:	mov    dl,0xa0
  4373e5:	(bad)  
  4373e7:	jmp    ecx
  4373e9:	add    BYTE PTR [edi+edi*8],ch
  4373ec:	int3   
  4373ed:	cmp    edi,0xfffffffb
  4373f0:	dec    ecx
  4373f1:	call   ecx
  4373f3:	pop    ebx
  4373f4:	test   al,0x9c
  4373f6:	dec    esp
  4373f8:	fwait
  4373f9:	add    BYTE PTR [esi-0x1],al
  4373fc:	int3   
  4373fd:	add    bh,bh
  4373ff:	or     al,0x5e
  437401:	add    BYTE PTR [edx+eax*2],dl
  437404:	adc    edx,edx
  437406:	add    ah,cl
  437408:	mov    edi,0xff897eff
  43740d:	(bad)  
  43740e:	(bad)  
  43740f:	jnp    0x43743c
  437411:	cmp    DWORD PTR [ebx],0x44
  437414:	push   ss
  437415:	test   edi,edi
  437417:	int3   
  437418:	pop    ebx
  437419:	adc    DWORD PTR [edx-0xff0001],0x73
  437420:	xchg   ebp,eax
  437421:	add    BYTE PTR [edi],ah
  437423:	loope  0x437481
  437425:	sahf   
  437426:	inc    DWORD PTR [eax]
  437428:	enter  0x3a83,0xff
  43742c:	add    BYTE PTR [eax],al
  43742e:	(bad)  
  43742f:	js     0x43745f
  437431:	adc    DWORD PTR [edi-0xe8e8cd],0x0
  437438:	(bad)  
  43743b:	add    BYTE PTR [eax],al
  43743d:	(bad)  
  43743e:	(bad)  
  43743f:	inc    BYTE PTR [ebp+0x3237a000]
  437445:	xchg   edi,eax
  437446:	int3   
  437447:	jmp    FWORD PTR [edi-0x34]
  43744a:	icebp  
  43744b:	(bad)  
  43744c:	inc    DWORD PTR [eax]
  43744e:	inc    DWORD PTR [esi+0x678dffb0]
  437454:	mov    esi,0x400ff02
  437459:	jmp    DWORD PTR ds:0xccff0083
  43745f:	pop    ebx
  437460:	or     bh,bh
  437462:	mov    BYTE PTR [ebx-0x78],ch
  437465:	inc    ebp
  437466:	(bad)  
  437467:	push   DWORD PTR [ebx]
  437469:	jmp    FWORD PTR [edi-0x7d]
  43746c:	mov    DWORD PTR [ebx-0x4a5900],eax
  437472:	lods   eax,DWORD PTR ds:[esi]
  437473:	js     0x437446
  437475:	xchg   ebx,eax
  437476:	or     esp,0xffffffa3
  437479:	add    BYTE PTR [edi],ah
  43747b:	(bad)  
  43747c:	inc    DWORD PTR [ebx+0x34c4ff]
  437482:	lods   eax,DWORD PTR ds:[esi]
  437483:	inc    edx
  437484:	push   0x4400ff67
  437489:	add    BYTE PTR [ecx],dh
  43748b:	add    bh,bh
  43748d:	dec    esp
  43748f:	(bad)  
  437490:	jle    0x437492
  437492:	cmp    DWORD PTR [edi-0x58],0x26ffffe8
  437499:	mov    DWORD PTR [esi-0x1],edx
  43749c:	add    BYTE PTR [eax],al
  43749e:	push   DWORD PTR [eax-0x55]
  4374a1:	add    BYTE PTR [ebx-0x5b7860],dh
  4374a7:	or     DWORD PTR [ecx+0x0],0x8
  4374ab:	add    bh,bh
  4374ad:	int3   
  4374ae:	add    BYTE PTR [ebx-0x1096ff78],dl
  4374b4:	call   DWORD PTR [eax+0xd600ff]
  4374ba:	rol    DWORD PTR [eax],1
  4374bc:	add    bh,bh
  4374be:	add    cl,bl
  4374c0:	mov    ds:0x1e482dff,al
  4374c5:	aad    0xff
  4374c7:	jmp    edi
  4374c9:	adc    edx,0x0
  4374cc:	inc    DWORD PTR [eax]
  4374ce:	mov    ebp,edx
  4374d0:	dec    ebp
  4374d1:	add    BYTE PTR [esi+0x62],bh
  4374d4:	aaa    
  4374d5:	adc    eax,0x760000
  4374da:	mov    edx,0xffffff83
  4374df:	jl     0x43752d
  4374e1:	int3   
  4374e2:	xchg   esp,eax
  4374e3:	cmp    al,0xf1
  4374e5:	mov    al,ds:0x660083
  4374ea:	dec    edi
  4374eb:	(bad)  
  4374ec:	dec    esp
  4374ee:	jmp    DWORD PTR [ecx-0x21]
  4374f1:	jmp    DWORD PTR [ecx+ecx*8]
  4374f4:	call   0x2143f899
  4374f9:	add    bh,bl
  4374fb:	add    ah,cl
  4374fd:	add    bh,bh
  4374ff:	adc    dh,BYTE PTR ds:0xbbd7fa83
  437505:	fadd   DWORD PTR [eax]
  437507:	jmp    DWORD PTR [ecx-0x77]
  43750a:	add    DWORD PTR fs:[ebx+0x7677ffff],0xffffffff
  437512:	push   esp
  437513:	sub    BYTE PTR [edx-0xe],0x83
  437517:	jmp    DWORD PTR [edx]
  437519:	add    BYTE PTR [eax-0x1],al
  43751c:	inc    DWORD PTR [eax]
  43751e:	mov    DWORD PTR [esi-0x737dff3d],ecx
  437524:	mov    edx,0x3300ff25
  437529:	(bad)  
  43752a:	cmp    al,0xcc
  43752c:	add    BYTE PTR [eax],al
  43752e:	add    BYTE PTR [edi-0x47d8ff77],ah
  437534:	mov    BYTE PTR [edx-0x77],al
  437537:	jmp    DWORD PTR [edi+edi*8-0x7c00ff7f]
  43753e:	dec    ecx
  437540:	ins    DWORD PTR es:[edi],dx
  437541:	jmp    DWORD PTR [edi]
  437543:	test   BYTE PTR [esi+ebx*8],al
  437546:	(bad)  
  437547:	jmp    FWORD PTR [esi-0x1]
  43754a:	popa   
  43754b:	dec    esp
  43754d:	add    DWORD PTR [eax],0x73
  437550:	jle    0x43751e
  437552:	jno    0x437552
  437554:	adc    ch,BYTE PTR [ebx-0xe67634]
  43755a:	cmp    bh,0xcc
  43755d:	(bad)  
  43755e:	push   DWORD PTR [edx-0x245a7604]
  437564:	add    al,0x92
  437566:	add    BYTE PTR [eax],al
  437568:	mov    ebp,0xff78ff
  43756d:	dec    esp
  43756f:	pop    ecx
  437570:	inc    esp
  437571:	inc    ecx
  437573:	inc    edx
  437574:	or     eax,0x9a00ffb0
  437579:	push   DWORD PTR [eax+0x830000]
  43757f:	cwde   
  437580:	(bad)  
  437582:	stos   BYTE PTR es:[edi],al
  437583:	fsubp  st(5),st
  437585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437586:	(bad)  
  437587:	(bad)  
  437588:	cld    
  437589:	or     DWORD PTR [eax-0x7d],0xffffffff
  43758d:	add    BYTE PTR [eax],al
  43758f:	arpl   bp,cx
  437591:	(bad)  
  437592:	cmp    al,BYTE PTR [esp+ebx*1]
  437595:	imul   edi,edi,0xffffffff
  437598:	jb     0x437599
  43759a:	mov    ch,0xcc
  43759c:	add    BYTE PTR [eax],al
  43759e:	(bad)  
  43759f:	call   DWORD PTR [esi+0x51cb4c89]
  4375a5:	pop    ebp
  4375a6:	add    bh,bh
  4375a8:	cdq    
  4375a9:	(bad)  
  4375aa:	jmp    0x36ab:0xff000000
  4375b1:	int3   
  4375b2:	dec    esi
  4375b3:	(bad)  
  4375b4:	sub    DWORD PTR [edx-0x123301],eax
  4375ba:	mov    ch,0xff
  4375bc:	add    BYTE PTR [eax],al
  4375be:	add    al,bh
  4375c0:	mov    eax,ds:0x9ec0fbff
  4375c5:	cmp    DWORD PTR [eax],eax
  4375c7:	adc    DWORD PTR [edi+0x0],0x3f
  4375cb:	int3   
  4375cc:	inc    DWORD PTR [eax]
  4375ce:	push   DWORD PTR [esi+0x7fc4ff14]
  4375d4:	icebp  
  4375d5:	xchg   esi,eax
  4375d6:	inc    DWORD PTR [eax]
  4375d8:	test   al,0xcc
  4375da:	hlt    
  4375db:	inc    DWORD PTR [eax]
  4375dd:	(bad)  
  4375de:	call   DWORD PTR [ecx-0x9]
  4375e1:	add    BYTE PTR [ebp-0xf90590],dl
  4375e7:	inc    DWORD PTR [eax-0x7c0277]
  4375ed:	add    BYTE PTR [eax],al
  4375ef:	fmul   DWORD PTR [ebx]
  4375f1:	jmp    FWORD PTR [eax]
  4375f3:	call   0xf4:0xff008974
  4375fa:	add    al,BYTE PTR [eax]
  4375fc:	(bad)  
  4375fd:	(bad)  
  4375fe:	jmp    ebx
  437600:	push   esp
  437601:	mov    edx,esp
  437603:	retf   0x83da
  437606:	add    bh,bh
  437608:	fild   WORD PTR [eax]
  43760a:	jo     0x43760c
  43760c:	add    bh,bh
  43760e:	(bad)  
  43760f:	stc    
  437610:	sar    bh,1
  437612:	clc    
  437613:	sub    DWORD PTR [edi-0x7d],ecx
  437616:	(bad)  
  437617:	(bad)  
  437618:	mov    esi,0xff003700
  43761d:	inc    DWORD PTR [eax]
  43761f:	sti    
  437620:	mov    eax,ds:0x99a0f8ff
  437625:	test   BYTE PTR [ebx+0x6dff0783],0x83
  43762c:	or     esp,0x0
  43762f:	xor    DWORD PTR [eax+eax*1],edi
  437632:	sbb    al,0x22
  437634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437635:	mov    ds:0xffd8ff00,al
  43763a:	mov    edx,0xff00cc00
  43763f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437640:	mov    bh,0x0
  437642:	pop    eax
  437643:	mov    cl,0xe
  437645:	push   edx
  437646:	int3   
  437647:	sub    DWORD PTR [ebx-0x9d7d],0xffffff83
  43764e:	inc    DWORD PTR [ebp-0x53]
  437651:	sub    esi,0xffffffb1
  437654:	add    bh,dh
  437656:	inc    DWORD PTR [ebx-0x76ba00f0]
  43765c:	add    BYTE PTR [eax],al
  43765e:	add    bl,ah
  437660:	(bad)  
  437661:	push   DWORD PTR [edx+0x2d]
  437664:	fld    DWORD PTR [ebx+eax*4]
  437667:	add    cl,ch
  437669:	push   DWORD PTR [ecx-0x7600337d]
  43766f:	jbe    0x43767c
  437671:	jmp    FWORD PTR [eax+esi*2+0xff97ef]
  437678:	idiv   bh
  43767a:	jno    0x437605
  43767c:	(bad)  
  43767d:	(bad)  
  43767e:	jmp    FWORD PTR [ecx]
  437680:	cld    
  437681:	(bad)  
  437682:	jns    0x437656
  437684:	inc    eax
  437685:	or     edi,edi
  437687:	jmp    FWORD PTR [edx]
  437689:	add    BYTE PTR [ebx],al
  43768b:	(bad)  
  43768c:	inc    DWORD PTR [eax]
  43768e:	add    BYTE PTR [edi+0x40],al
  437691:	or     esi,0x4b
  437694:	mov    al,0xec
  437696:	dec    DWORD PTR [ecx-0xad00cc]
  43769c:	cmp    edi,0xffffffcc
  43769f:	or     cl,bl
  4376a1:	mov    edi,ecx
  4376a3:	jbe    0x4376bd
  4376a5:	rol    BYTE PTR [eax],0xff
  4376a8:	mov    BYTE PTR [eax],0x35
  4376ab:	cmp    edi,0xffffffff
  4376ae:	mov    DWORD PTR [ebx],edx
  4376b0:	clc    
  4376b1:	mov    ebp,ebx
  4376b3:	sub    eax,ecx
  4376b5:	add    DWORD PTR [ebx-0x3e762234],eax
  4376bb:	inc    DWORD PTR [eax]
  4376bd:	add    BYTE PTR [ebx-0x710024d9],al
  4376c3:	mov    edx,0x89ff69d4
  4376c8:	adc    edi,edi
  4376ca:	cmp    al,0xff
  4376cc:	add    BYTE PTR [eax],al
  4376ce:	or     DWORD PTR [ebp+edi*2-0x5e37c001],0x20
  4376d6:	add    bh,bh
  4376d8:	mov    al,ds:0xffff85ff
  4376dd:	add    BYTE PTR [eax],al
  4376df:	enter  0x83fc,0xba
  4376e3:	sbb    dl,BYTE PTR [ecx-0x537c7cb1]
  4376e9:	inc    DWORD PTR [esi-0x1]
  4376ec:	(bad)  
  4376ed:	inc    DWORD PTR [eax]
  4376ef:	retf   0xffe2
  4376f2:	fucomip st,st(3)
  4376f4:	popf   
  4376f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4376f6:	inc    DWORD PTR [eax]
  4376f8:	sub    al,0x83
  4376fa:	out    0xff,eax
  4376fc:	add    BYTE PTR [eax],al
  4376fe:	mov    DWORD PTR [ebp+0x4b],esp
  437701:	jmp    FWORD PTR [esi+0x4d43da]
  437707:	sbb    DWORD PTR [ebx],0xffffffff
  43770a:	stc    
  43770b:	add    BYTE PTR [ebx-0x38e20100],al
  437711:	call   DWORD PTR [ebx+ebx*4-0x33002cab]
  437718:	xchg   edi,edi
  43771a:	push   edx
  43771b:	inc    DWORD PTR [eax]
  43771d:	inc    DWORD PTR [eax]
  43771f:	pop    ss
  437720:	lock int3 
  437722:	mov    ah,0x29
  437724:	pop    eax
  437725:	sub    al,0xff
  437727:	jmp    DWORD PTR [ebx]
  437729:	cmp    DWORD PTR [ebx],0xffffff83
  43772c:	add    bh,bh
  43772e:	dec    DWORD PTR [edi+eiz*2-0xa86bd00]
  437735:	add    BYTE PTR [eax],0x83
  437738:	sub    eax,0xff831f00
  43773d:	add    BYTE PTR [eax],al
  43773f:	scas   eax,DWORD PTR es:[edi]
  437740:	jmp    0x771d2845
  437745:	inc    ebx
  437746:	add    BYTE PTR [eax],al
  437748:	mov    ecx,0xff8344ff
  43774d:	(bad)  
  43774e:	call   DWORD PTR [edx+0x31]
  437751:	jmp    FWORD PTR [ebp-0x5fdd73]
  437757:	add    BYTE PTR [ecx-0x7cad7d],dl
  43775d:	dec    esp
  43775f:	daa    
  437760:	loopne 0x437762
  437762:	nop
  437763:	add    DWORD PTR [edx-0x47],ebp
  437766:	add    bh,bh
  437768:	and    edi,edi
  43776a:	rol    BYTE PTR [eax],cl
  43776c:	add    BYTE PTR [eax],al
  43776e:	push   DWORD PTR [esi]
  437770:	dec    DWORD PTR fs:[eax-0x33d3ad26]
  437777:	xor    DWORD PTR [edx-0x3300a301],0xffffff83
  43777e:	add    BYTE PTR [ebp-0x6b],bl
  437781:	push   ebx
  437783:	imul   ecx,esp,0x91ff0057
  437789:	push   DWORD PTR [eax]
  43778b:	add    BYTE PTR [ecx+0x1170ffff],cl
  437791:	jmp    DWORD PTR [edi+0x21]
  437794:	sub    dh,al
  437796:	dec    esp
  437798:	sub    al,0xcc
  43779a:	jecxz  0x43779c
  43779c:	inc    DWORD PTR [ebx-0x3e1900]
  4377a2:	cs push ecx
  4377a4:	jp     0x4377a0
  4377a6:	add    bh,bh
  4377a8:	scas   eax,DWORD PTR es:[edi]
  4377a9:	push   DWORD PTR [esi-0x76ff01]
  4377af:	popa   
  4377b0:	bound  eax,QWORD PTR [ebx-0x2a60ccd6]
  4377b6:	cmp    edi,0x2d
  4377b9:	jmp    FWORD PTR [esi-0xff0077]
  4377bf:	cmp    al,0x82
  4377c1:	int3   
  4377c2:	or     BYTE PTR [eax-0x51],cl
  4377c5:	ror    BYTE PTR [ecx+0x2d83fbff],cl
  4377cb:	(bad)  
  4377cc:	inc    DWORD PTR [eax]
  4377ce:	mov    DWORD PTR ds:0x292cff9f,ebx
  4377d4:	clc    
  4377d5:	push   ds
  4377d6:	add    bh,bh
  4377d8:	loope  0x43775d
  4377da:	xchg   ebx,eax
  4377db:	(bad)  
  4377dc:	inc    DWORD PTR [eax]
  4377de:	push   DWORD PTR [ecx-0x56ebff58]
  4377e4:	aaa    
  4377e5:	inc    DWORD PTR [bx+si]
  4377e8:	test   al,0x0
  4377ea:	pop    eax
  4377eb:	inc    DWORD PTR [eax]
  4377ed:	add    bh,bh
  4377ef:	add    DWORD PTR [esi],esi
  4377f1:	int3   
  4377f2:	popf   
  4377f3:	mov    eax,0xff428d
  4377f8:	mov    esp,0x5089
  4377fd:	int3   
  4377fe:	jmp    DWORD PTR ds:0xf1bb00e9
  437804:	mov    eax,0x19ffff54
  437809:	push   DWORD PTR [esi-0x100]
  43780f:	outs   dx,BYTE PTR ds:[esi]
  437810:	xchg   ebx,eax
  437811:	dec    DWORD PTR [ecx+ebp*2-0x7cb2e2]
  437818:	out    0xff,eax
  43781a:	rol    DWORD PTR [eax],cl
  43781c:	add    ah,cl
  43781e:	add    BYTE PTR ds:0x8870fff4,ch
  437824:	sahf   
  437825:	stc    
  437826:	dec    DWORD PTR [ecx-0x762b7697]
  43782c:	inc    DWORD PTR [ebx-0x76dc8e7d]
  437832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437833:	in     eax,dx
  437834:	mov    bl,0x0
  437836:	add    bh,bh
  437838:	jp     0x437806
  43783a:	xchg   ebp,eax
  43783b:	(bad)  
  43783c:	(bad)  
  43783d:	inc    DWORD PTR [eax]
  43783f:	int    0xb5
  437841:	jmp    esp
  437843:	in     al,dx
  437844:	mov    edi,0x870000ea
  437849:	jmp    FWORD PTR [edi-0x1]
  43784c:	dec    esp
  43784e:	jmp    DWORD PTR [ecx+0x6f]
  437851:	call   DWORD PTR [edx]
  437853:	mov    al,ds:0x83ffe6a4
  437858:	mov    bh,bh
  43785a:	add    BYTE PTR [eax],0xff
  43785d:	int3   
  43785e:	dec    edi
  437860:	mov    dl,0x0
  437862:	mov    WORD PTR [esi],?
  437864:	iret   
  437865:	outs   dx,BYTE PTR ds:[esi]
  437866:	dec    esp
  437868:	pop    ds
  437869:	sbb    DWORD PTR [esi-0xff007d],0xffffffcf
  437870:	or     DWORD PTR [ebx-0x6196d5be],eax
  437876:	int3   
  437877:	sbb    DWORD PTR [ecx],0xffffffff
  43787a:	pop    esi
  43787b:	(bad)  
  43787c:	inc    DWORD PTR [ebx-0x761e0134]
  437882:	sub    BYTE PTR [ecx+0x71],bl
  437885:	adc    eax,DWORD PTR [eax]
  437887:	inc    esi
  437889:	add    BYTE PTR [esi],ch
  43788b:	mov    edi,edi
  43788d:	int3   
  43788e:	jmp    FWORD PTR [edi]
  437890:	cmp    al,0x0
  437892:	cmc    
  437893:	pop    ecx
  437894:	dec    ecx
  437895:	mov    edx,0xf300cc
  43789a:	inc    ebp
  43789b:	add    bh,bh
  43789d:	add    BYTE PTR [ecx+0x3d831521],cl
  4378a3:	daa    
  4378a4:	push   esi
  4378a5:	and    BYTE PTR [ebx-0x4300fd77],al
  4378ab:	inc    DWORD PTR [eax]
  4378ad:	inc    DWORD PTR [eax]
  4378af:	aad    0x93
  4378b1:	jmp    FWORD PTR [ecx+ebx*1+0x34]
  4378b5:	xchg   edi,edi
  4378b7:	int3   
  4378b8:	inc    ebp
  4378b9:	sub    edx,0xffffffff
  4378bc:	inc    DWORD PTR [eax]
  4378be:	add    BYTE PTR [eax-0x34],al
  4378c1:	(bad)  
  4378c2:	fild   QWORD PTR [edi]
  4378c4:	into   
  4378c5:	in     eax,0xff
  4378c7:	dec    DWORD PTR [eax]
  4378c9:	or     DWORD PTR [ecx-0x7cff7601],0x35
  4378d0:	jge    0x4378d2
  4378d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4378d3:	cmp    eax,0xff00dcb3
  4378d8:	ins    DWORD PTR es:[edi],dx
  4378d9:	add    DWORD PTR [edi],0xffffffff
  4378dc:	add    ah,cl
  4378de:	mov    DWORD PTR [ebp-0x234600cd],ebx
  4378e4:	sti    
  4378e5:	std    
  4378e6:	add    BYTE PTR [eax],al
  4378e8:	aad    0xcc
  4378ea:	sar    edi,0x0
  4378ed:	int3   
  4378ee:	or     DWORD PTR ds:0x7cbbff10,0xffffffb6
  4378f5:	retf   0x83ff
  4378f8:	push   es
  4378f9:	call   ecx
  4378fb:	(bad)  
  4378fc:	(bad)  
  4378fd:	inc    DWORD PTR [ebx-0x60ff3e91]
  437903:	lods   al,BYTE PTR ds:[esi]
  437904:	jp     0x437888
  437906:	add    DWORD PTR [eax],0xfffffff0
  437909:	push   DWORD PTR [ebp+0x0]
  43790c:	mov    DWORD PTR [eax],eax
  43790e:	add    BYTE PTR [esi-0x48],dl
  437911:	or     DWORD PTR [edi],0xffffffc9
  437914:	clc    
  437915:	mov    al,0xcc
  437917:	add    BYTE PTR [eax],ch
  437919:	add    BYTE PTR [edx-0x1],cl
  43791c:	inc    DWORD PTR [eax]
  43791e:	call   DWORD PTR [ecx]
  437920:	das    
  437921:	add    BYTE PTR [edi],dl
  437923:	push   ecx
  437924:	push   edi
  437925:	std    
  437926:	add    bh,bh
  437928:	cmp    bh,bh
  43792a:	mov    ds:0xff008383,eax
  43792f:	jnp    0x437928
  437931:	sub    DWORD PTR [ebp+0x11],0xffffffff
  437935:	inc    ecx
  437936:	(bad)  
  437937:	(bad)  
  437938:	cmp    al,BYTE PTR [eax]
  43793a:	and    ah,cl
  43793c:	mov    edi,edi
  43793e:	jmp    FWORD PTR [edx]
  437940:	ins    DWORD PTR es:[edi],dx
  437941:	adc    DWORD PTR [eax-0x23502f],0xffffffff
  437948:	scas   eax,DWORD PTR es:[edi]
  437949:	(bad)  
  43794a:	call   0x143784f
  43794f:	mov    cl,0xd5
  437951:	int3   
  437952:	sbb    edx,esp
  437954:	jge    0x43793e
  437956:	add    BYTE PTR [eax],al
  437958:	or     al,0xff
  43795a:	mov    bh,bh
  43795c:	add    DWORD PTR [eax],0xffffffff
  43795f:	cli    
  437960:	mov    edi,0x9e658200
  437965:	push   esi
  437966:	add    ah,cl
  437968:	repnz dec DWORD PTR [esi+0x0]
  43796c:	(bad)  
  43796d:	inc    DWORD PTR [eax]
  43796f:	add    esp,DWORD PTR [ebx+eax*4-0x43205585]
  437976:	dec    DWORD PTR [ecx+0xd4ffa9]
  43797c:	add    bh,bh
  43797e:	mov    DWORD PTR [ecx],eax
  437980:	fiadd  DWORD PTR [eax]
  437982:	sub    esi,DWORD PTR [eax]
  437984:	mov    al,0x48
  437986:	inc    DWORD PTR [eax]
  437988:	retf   0xe600
  43798b:	add    bh,bh
  43798d:	mov    edi,edi
  43798f:	xlat   BYTE PTR ds:[ebx]
  437990:	xchg   esp,eax
  437991:	int3   
  437992:	leave  
  437993:	sbb    eax,0xff834e0c
  437998:	xor    al,BYTE PTR [eax]
  43799a:	repz (bad) 
  43799c:	dec    esp
  43799e:	add    BYTE PTR [edx+0x9a1ff66],bh
  4379a4:	ja     0x4379ad
  4379a6:	add    bh,bh
  4379a8:	fiadd  WORD PTR [ebx-0x76ffb9]
  4379ae:	dec    DWORD PTR [edx+ebp*1-0x1]
  4379b2:	rol    DWORD PTR [esi+0x24],cl
  4379b5:	ret    0xff00
  4379b8:	adc    BYTE PTR [ebx-0x7c00004d],al
  4379be:	add    BYTE PTR [ebx-0x4a],dl
  4379c1:	call   ecx
  4379c3:	retf   0x8e42
  4379c6:	inc    DWORD PTR [eax]
  4379c8:	mov    BYTE PTR [eax],0x80
  4379cb:	(bad)  
  4379cc:	inc    DWORD PTR [eax]
  4379ce:	mov    DWORD PTR [edx+eax*4+0x0],edi
  4379d2:	and    BYTE PTR [edi+0x4e],bh
  4379d5:	popa   
  4379d6:	(bad)  
  4379d7:	jmp    DWORD PTR [eax-0x76ff8034]
  4379dd:	(bad)  
  4379de:	call   DWORD PTR ds:0x471fff51
  4379e4:	ds jmp 0x4379e6
  4379e7:	push   DWORD PTR [esi-0x33ffeb01]
  4379ed:	dec    DWORD PTR [ecx+0x56ffbadc]
  4379f3:	adc    DWORD PTR [edx+0x5],ebx
  4379f6:	mov    DWORD PTR [ecx-0x76a1ffab],ecx
  4379fc:	add    bh,bh
  4379fe:	add    BYTE PTR [ebp+0x63],dh
  437a01:	(bad)  
  437a02:	mov    eax,0xffa4e75c
  437a07:	call   FWORD PTR [eax+eax*1]
  437a0a:	mov    BYTE PTR [eax],0xff
  437a0d:	add    BYTE PTR [ebx+0x4783778e],al
  437a13:	dec    edx
  437a14:	pop    es
  437a15:	xchg   ebx,eax
  437a16:	dec    esp
  437a18:	pop    ebx
  437a19:	sub    DWORD PTR [ebx],0xffffffff
  437a1c:	add    DWORD PTR [eax],0xffffffff
  437a1f:	icebp  
  437a20:	mov    esp,0x6c08ddff
  437a25:	fld    DWORD PTR [eax]
  437a27:	call   DWORD PTR [esi-0x33334b7d]
  437a2d:	add    ah,cl
  437a2f:	inc    edx
  437a30:	(bad)  
  437a32:	pop    es
  437a33:	in     eax,dx
  437a34:	int    0x9a
  437a36:	mov    edi,edi
  437a38:	mov    es,WORD PTR [ebx+0xffcc90]
  437a3e:	(bad)  
  437a3f:	lods   al,BYTE PTR ds:[esi]
  437a41:	add    BYTE PTR [ebp-0x7a],al
  437a44:	sahf   
  437a45:	out    dx,al
  437a46:	inc    DWORD PTR [eax]
  437a48:	mov    esp,0xffffd900
  437a4d:	add    BYTE PTR [eax],al
  437a4f:	xchg   edx,eax
  437a50:	lods   eax,DWORD PTR ds:[esi]
  437a51:	inc    DWORD PTR [eax+0x32]
  437a54:	jae    0x437ad5
  437a56:	dec    DWORD PTR [ecx+0x5b0061]
  437a5c:	add    bh,bh
  437a5e:	call   DWORD PTR [ebx-0x21]
  437a61:	call   DWORD PTR [edx-0x27ab3d]
  437a67:	add    BYTE PTR [edi-0x77],bl
  437a6a:	sbb    BYTE PTR [ebx+0x7a898989],al
  437a70:	jp     0x4379fb
  437a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437a73:	mov    ss,WORD PTR [eax]
  437a75:	pop    edi
  437a76:	int3   
  437a77:	call   FWORD PTR [ebx]
  437a79:	and    DWORD PTR [edx-0xff337d],0xffffffe0
  437a80:	and    al,BYTE PTR [eax]
  437a82:	inc    eax
  437a83:	adc    al,0xa8
  437a85:	cli    
  437a86:	add    bh,bh
  437a88:	in     eax,0xcc
  437a8a:	adc    al,0x0
  437a8c:	or     DWORD PTR [ecx-0xf7cc01],0xffffffc0
  437a93:	fs mov dl,0x63
  437a96:	(bad)  
  437a97:	(bad)  
  437a98:	mov    ecx,0x89ff9900
  437a9d:	add    bh,bh
  437a9f:	das    
  437aa0:	inc    edi
  437aa1:	inc    edi
  437aa3:	cmp    eax,0xcc839b3a
  437aa8:	repnz cmp DWORD PTR [edi-0x1],0x16
  437ab0:	or     al,BYTE PTR [eax]
  437ab2:	scas   al,BYTE PTR es:[edi]
  437ab3:	xchg   ebp,eax
  437ab4:	and    al,0x37
  437ab6:	inc    DWORD PTR [ebx-0x334fffa7]
  437abc:	dec    esp
  437abe:	int3   
  437abf:	ds jns 0x437ac1
  437ac2:	lds    esi,FWORD PTR [eax+0x7e]
  437ac5:	icebp  
  437ac6:	or     esp,0xffffff94
  437ac9:	int3   
  437aca:	(bad)  
  437acc:	(bad)  
  437acd:	(bad)  
  437ace:	push   DWORD PTR [ebx+0x258834e]
  437ad4:	call   0xc3ff:0x97ff83f6
  437adb:	int3   
  437adc:	add    bh,bh
  437ade:	mov    ecx,esp
  437ae0:	xchg   ebp,eax
  437ae1:	add    BYTE PTR ds:0xff47159a,dh
  437ae7:	add    BYTE PTR [eax],dh
  437ae9:	adc    DWORD PTR [eax-0x763400],0x9
  437af0:	gs add cl,bl
  437af3:	test   eax,0xccff43ff
  437af8:	cmp    al,0xff
  437afa:	mov    esi,0xff00ffcc
  437aff:	cmp    DWORD PTR [ebx],eax
  437b01:	(bad)  
  437b02:	(bad)  
  437b04:	test   eax,0x97ffffb2
  437b09:	int3   
  437b0a:	jne    0x437b0c
  437b0c:	add    BYTE PTR [ebx+0x64e983],al
  437b12:	jge    0x437b81
  437b14:	sub    DWORD PTR [edi+edi*8-0x77],edx
  437b18:	test   BYTE PTR [ebx-0xffa0],al
  437b1e:	(bad)  
  437b1f:	jge    0x437b52
  437b21:	adc    DWORD PTR [ecx+ebp*2-0x33008d69],0x6a
  437b29:	call   DWORD PTR [ebx-0x7d]
  437b2c:	inc    DWORD PTR [ebx-0x185800]
  437b32:	inc    ecx
  437b33:	leave  
  437b34:	pop    edx
  437b35:	mov    bh,bh
  437b37:	jmp    DWORD PTR [esp+ecx*8]
  437b3a:	and    edi,edi
  437b3c:	dec    esp
  437b3e:	dec    DWORD PTR [edx-0x37]
  437b41:	adc    DWORD PTR [esp+eax*4-0xff5fbf],0x70
  437b49:	jmp    FWORD PTR [eax-0xff01]
  437b4f:	xor    al,0x24
  437b51:	mov    DWORD PTR [edx-0x33],ecx
  437b54:	(bad)  
  437b55:	lods   al,BYTE PTR ds:[esi]
  437b56:	inc    DWORD PTR [eax]
  437b58:	(bad)  
  437b5a:	push   ds
  437b5b:	mov    DWORD PTR [ebx-0x51ab0001],eax
  437b61:	(bad)  
  437b62:	(bad)  
  437b63:	out    0xee,eax
  437b65:	xor    al,0x0
  437b67:	int3   
  437b68:	dec    edx
  437b69:	inc    DWORD PTR [eax]
  437b6b:	add    BYTE PTR [eax],al
  437b6d:	cmp    edi,0x72
  437b70:	push   esp
  437b71:	jmp    DWORD PTR [edi-0x17]
  437b74:	das    
  437b75:	inc    WORD PTR [eax]
  437b78:	in     eax,dx
  437b79:	sbb    DWORD PTR [esi],0xffffffff
  437b7c:	int3   
  437b7d:	add    ah,cl
  437b7f:	cmp    DWORD PTR [ebx+eax*4-0x7f282c8c],esp
  437b86:	add    bh,bh
  437b88:	imul   edi,edi,0xff83ff27
  437b8e:	(bad)  
  437b8f:	fbld   TBYTE PTR [ecx-0x7d]
  437b92:	lods   al,BYTE PTR ds:[esi]
  437b93:	int    0x74
  437b95:	dec    esp
  437b96:	int3   
  437b97:	call   DWORD PTR [esi-0xff1701]
  437b9d:	inc    DWORD PTR [eax]
  437b9f:	stos   DWORD PTR es:[edi],eax
  437ba0:	sbb    al,0xff
  437ba2:	pop    esp
  437ba3:	out    dx,eax
  437ba4:	push   0x4d
  437ba6:	int3   
  437ba7:	call   FWORD PTR [edx-0x7cb477]
  437bad:	(bad)  
  437bae:	(bad)  
  437baf:	mov    ecx,0x6f2effa1
  437bb4:	and    BYTE PTR [eax+eax*1-0x1],al
  437bb8:	sub    al,BYTE PTR [eax]
  437bba:	(bad)  
  437bbc:	add    BYTE PTR [ebx-0x7cdfd801],al
  437bc2:	jne    0x437bce
  437bc4:	pop    eax
  437bc5:	mov    ebx,0xedffff
  437bca:	mov    bh,0xff
  437bcc:	add    ah,cl
  437bce:	jmp    FWORD PTR [ecx+0x37]
  437bd1:	add    BYTE PTR [edi-0x5d],al
  437bd4:	sbb    al,0x91
  437bd6:	int3   
  437bd7:	add    BYTE PTR ds:0xffff6b83,dl
  437bdd:	inc    DWORD PTR [eax]
  437bdf:	jg     0x437c00
  437be1:	or     edx,0x49
  437be4:	jg     0x437c07
  437be6:	inc    DWORD PTR [ebx-0x5100d9]
  437bec:	add    BYTE PTR [eax],al
  437bee:	inc    DWORD PTR [ebp+0x6a]
  437bf1:	xor    DWORD PTR [eax+ebp*8+0x9],0xffffffe4
  437bf6:	int3   
  437bf7:	jmp    DWORD PTR [esi]
  437bf9:	mov    esp,ebx
  437bfb:	add    BYTE PTR [ebx-0x5dc20077],al
  437c01:	mov    esp,ecx
  437c03:	stos   BYTE PTR es:[edi],al
  437c04:	dec    esi
  437c05:	inc    edx
  437c06:	add    BYTE PTR [eax],al
  437c08:	or     edi,edi
  437c0a:	xchg   bh,bh
  437c0c:	inc    DWORD PTR [eax]
  437c0e:	add    bl,ch
  437c10:	mov    edi,edi
  437c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437c13:	dec    ebp
  437c14:	mov    cl,0xd1
  437c16:	add    bh,bh
  437c18:	sbb    edi,edi
  437c1a:	xchg   edi,edi
  437c1c:	int3   
  437c1d:	inc    DWORD PTR [ebx-0x657c250b]
  437c23:	loop   0x437c3d
  437c25:	pop    edx
  437c26:	int3   
  437c27:	add    BYTE PTR [ebx],al
  437c29:	add    al,al
  437c2b:	dec    DWORD PTR [ecx+0x1f6cffff]
  437c31:	add    BYTE PTR [edi],ch
  437c33:	outs   dx,DWORD PTR ds:[esi]
  437c34:	pop    ss
  437c35:	xchg   esp,eax
  437c36:	(bad)  
  437c37:	dec    DWORD PTR [eax+eax*1-0xff0039]
  437c3e:	add    bh,dl
  437c40:	cmp    bh,bh
  437c42:	jae    0x437bd4
  437c44:	push   0xffffffbf
  437c46:	int3   
  437c47:	add    bh,dh
  437c49:	jmp    esp
  437c4b:	(bad)  
  437c4c:	inc    DWORD PTR [ebx+0xf33700]
  437c52:	dec    eax
  437c53:	jl     0x437c9f
  437c55:	sub    bh,bh
  437c57:	add    BYTE PTR [ebx+eax*4-0x3300ff97],bh
  437c5e:	add    cl,dl
  437c60:	dec    eax
  437c61:	add    BYTE PTR [eax],bl
  437c63:	jns    0x437cb1
  437c65:	cli    
  437c66:	inc    DWORD PTR [eax]
  437c68:	inc    ebp
  437c69:	xor    DWORD PTR [ebp-0x10000],0xffffffc2
  437c70:	mov    esp,0x892781ff
  437c75:	addr16 (bad) 
  437c77:	jmp    FWORD PTR [esi-0xa901]
  437c7d:	(bad)  
  437c7e:	(bad)  
  437c7f:	fcomp  QWORD PTR [edi-0x4c671d7d]
  437c85:	mov    eax,0xff77ff00
  437c8a:	sti    
  437c8b:	cmp    edi,0xffffffff
  437c8e:	(bad)  
  437c8f:	cmp    ebp,DWORD PTR [ebx-0x7d]
  437c92:	sbb    edi,DWORD PTR [ebp+0xff11ee]
  437c98:	sub    al,BYTE PTR [eax]
  437c9a:	dec    esi
  437c9b:	cmp    edi,0xffffffff
  437c9e:	int3   
  437c9f:	jns    0x437d1a
  437ca1:	call   FWORD PTR [edx+0x2e]
  437ca4:	jle    0x437c72
  437ca6:	inc    DWORD PTR [eax]
  437ca8:	add    al,BYTE PTR [eax]
  437caa:	fs add bh,bh
  437cad:	(bad)  
  437cae:	(bad)  
  437caf:	mov    edx,0x6c3d83b0
  437cb4:	or     al,0x4
  437cb6:	add    DWORD PTR [ebx+0x6d83ab],0xffffff83
  437cbd:	inc    DWORD PTR [ebx-0x76ff2503]
  437cc3:	retf   
  437cc4:	mov    ebp,0x79ffff56
  437cc9:	int3   
  437cca:	jge    0x437ccb
  437ccc:	mov    DWORD PTR [ebx-0x7c9bc300],eax
  437cd2:	sbb    esp,0xffffff89
  437cd5:	(bad)  
  437cd6:	cmp    edi,0xffffffce
  437cd9:	add    esp,0xffffff83
  437cdc:	inc    DWORD PTR [eax]
  437cde:	(bad)  
  437cdf:	stc    
  437ce0:	test   eax,0x1adb5600
  437ce5:	add    al,0xff
  437ce7:	inc    DWORD PTR [ebp-0xdc00]
  437ced:	cmp    edi,0x60
  437cf0:	les    eax,FWORD PTR [eax]
  437cf2:	lds    eax,FWORD PTR [esi-0x43]
  437cf5:	xor    DWORD PTR [eax],eax
  437cf7:	call   FWORD PTR [ecx+0x0]
  437cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437cfb:	(bad)  
  437cfc:	dec    esp
  437cfe:	call   DWORD PTR [edx-0x7e]
  437d01:	int3   
  437d02:	aad    0x42
  437d04:	inc    edi
  437d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437d06:	int3   
  437d07:	and    DWORD PTR [eax+eax*1-0x20],0xffffffff
  437d0c:	(bad)  
  437d0d:	inc    DWORD PTR [eax]
  437d0f:	mov    BYTE PTR [eax+eax*1],ch
  437d12:	icebp  
  437d13:	fsub   st(4),st
  437d15:	mov    ch,0xff
  437d17:	dec    DWORD PTR [edx]
  437d19:	dec    ebp
  437d1b:	(bad)  
  437d1c:	inc    DWORD PTR [eax]
  437d1e:	add    BYTE PTR [eax+eax*1],bl
  437d21:	push   DWORD PTR [eax+eiz*2]
  437d24:	push   ss
  437d25:	mov    dl,0xff
  437d27:	inc    DWORD PTR [esi-0x1]
  437d2a:	mov    edi,0xcc000000
  437d2f:	mov    DWORD PTR [edi+0x0],edi
  437d32:	pusha  
  437d33:	mov    WORD PTR [esi-0x7500ff81],ss
  437d39:	call   DWORD PTR [ebx]
  437d3b:	(bad)  
  437d3c:	(bad)  
  437d3d:	(bad)  
  437d3e:	(bad)  
  437d3f:	cld    
  437d40:	out    dx,al
  437d41:	dec    DWORD PTR [ebp-0x72]
  437d44:	test   DWORD PTR [ebx-0x7d],ecx
  437d47:	int3   
  437d48:	and    bh,bh
  437d4a:	jns    0x437d4b
  437d4c:	cmp    edi,0x0
  437d4f:	(bad)  [eax+0x27aba6ff]
  437d55:	sub    al,BYTE PTR [eax]
  437d57:	int3   
  437d58:	mov    ?,edi
  437d5a:	(bad)  
  437d5b:	(bad)  
  437d5c:	inc    DWORD PTR [eax]
  437d5e:	add    BYTE PTR [edx+0x4780ff5c],ch
  437d64:	inc    eax
  437d65:	mov    esp,0xffe08989
  437d6a:	rol    DWORD PTR [ebx-0x15ff0001],0x24
  437d71:	call   DWORD PTR [ebx-0x37]
  437d74:	cmp    BYTE PTR ds:0xffc2cccc,ah
  437d7a:	in     eax,dx
  437d7b:	mov    edi,edi
  437d7d:	inc    DWORD PTR [eax]
  437d7f:	push   ds
  437d80:	stc    
  437d81:	add    BYTE PTR ds:0xff3ddb48,bh
  437d87:	add    bh,dl
  437d89:	add    BYTE PTR [ebp+0x0],dh
  437d8c:	add    bh,bh
  437d8e:	int3   
  437d8f:	out    dx,al
  437d90:	mov    ds:0xaab9ddff,eax
  437d95:	jmp    0x1007c9a
  437d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437d9b:	dec    DWORD PTR [ecx+0x5d01ff83]
  437da1:	add    dh,al
  437da3:	outs   dx,BYTE PTR ds:[esi]
  437da4:	pop    ecx
  437da5:	test   eax,0x8377ffcc
  437daa:	lea    eax,[ebx+0xdccffff]
  437db0:	loop   0x437db1
  437db2:	je     0x437e10
  437db4:	lock iret 
  437db6:	inc    DWORD PTR [eax]
  437db8:	jbe    0x437db9
  437dba:	sar    bh,cl
  437dbc:	add    bh,bh
  437dbe:	add    BYTE PTR [ebp+0x64],al
  437dc1:	and    DWORD PTR [ecx+0x305b7e],0xffffffff
  437dc8:	nop
  437dc9:	jmp    DWORD PTR [edx+0x0]
  437dcc:	mov    DWORD PTR [ecx-0xdb7c7d],ecx
  437dd2:	or     al,0x57
  437dd4:	cdq    
  437dd5:	push   ss
  437dd6:	int3   
  437dd7:	call   FWORD PTR ds:0x89d000
  437ddd:	inc    DWORD PTR [eax]
  437ddf:	adc    edx,ebp
  437de1:	add    BYTE PTR [eax],dh
  437de3:	adc    al,BYTE PTR [ecx]
  437de5:	ds (bad) 
  437de7:	push   DWORD PTR [esi-0xff8001]
  437ded:	mov    DWORD PTR [eax],eax
  437def:	mov    cl,0xaa
  437df1:	call   DWORD PTR [ebp+0x5f]
  437df4:	add    eax,0xf583ff1a
  437df9:	jmp    DWORD PTR [ebp+0x0]
  437dfc:	mov    DWORD PTR [eax],eax
  437dfe:	(bad)  
  437dff:	jnp    0x437dd4
  437e01:	add    bl,ch
  437e03:	xchg   BYTE PTR [esi-0xb000081],dl
  437e09:	call   DWORD PTR [ebx]
  437e0b:	(bad)  
  437e0c:	dec    esp
  437e0e:	add    cl,bh
  437e10:	enter  0x5b00,0x8b
  437e14:	jo     0x437e2c
  437e16:	inc    DWORD PTR [eax]
  437e18:	xor    BYTE PTR [ebx-0x7c000079],al
  437e1e:	add    ah,al
  437e20:	sar    bh,cl
  437e22:	cmp    al,0xb0
  437e24:	cmp    eax,0xa000830c
  437e29:	jmp    FWORD PTR [eax+eax*1-0x2c000001]
  437e30:	push   esp
  437e31:	push   esi
  437e33:	repz adc edx,DWORD PTR [edx-0xea0000]
  437e3a:	xor    DWORD PTR [ebx-0xd00767d],eax
  437e40:	dec    esp
  437e41:	add    BYTE PTR [ecx+0x71ed14],bh
  437e47:	add    BYTE PTR [edx-0x7c00a801],dl
  437e4d:	dec    esp
  437e4f:	cli    
  437e50:	inc    ebp
  437e51:	int3   
  437e52:	cmp    eax,0xffb8bc0a
  437e57:	mov    DWORD PTR [ebx+eax*4],ebp
  437e5a:	mov    cl,0x83
  437e5c:	add    DWORD PTR [ebx+0x30b800],0xffffff9e
  437e63:	dec    ebx
  437e64:	or     bl,BYTE PTR [eax-0x76210100]
  437e6a:	test   bh,bh
  437e6c:	or     DWORD PTR [ecx-0x767b0b34],0x4b
  437e73:	jnp    0x437e20
  437e75:	lock mov edi,edi
  437e78:	(bad)  
  437e79:	jmp    FWORD PTR [ebx-0xff767d]
  437e7f:	or     DWORD PTR [ecx-0x34],eax
  437e82:	or     al,0x11
  437e84:	scas   al,BYTE PTR es:[edi]
  437e85:	mov    BYTE PTR [ebx+0x7bffd600],0xff
  437e8c:	(bad)  
  437e8d:	inc    DWORD PTR [eax]
  437e8f:	cmp    dh,BYTE PTR [ebp+0x0]
  437e92:	mov    dh,BYTE PTR [esi+0xb41d]
  437e98:	mov    bh,0xff
  437e9a:	fadd   DWORD PTR [ebx+0x7ff00ff]
  437ea0:	cmp    al,0x89
  437ea2:	cld    
  437ea3:	and    DWORD PTR [edi],edx
  437ea5:	ret    0xff00
  437ea8:	test   eax,0xffff7489
  437ead:	dec    DWORD PTR [ecx+0x5a83f643]
  437eb3:	out    dx,al
  437eb4:	inc    eax
  437eb5:	mov    edx,0xffa2cccc
  437eba:	stc    
  437ebb:	add    BYTE PTR [ebx+0x3516ff00],al
  437ec1:	int3   
  437ec2:	sub    bh,BYTE PTR [eax]
  437ec4:	pop    esi
  437ec5:	mov    bh,bh
  437ec7:	dec    DWORD PTR [esi-0x1]
  437eca:	xor    al,BYTE PTR [eax]
  437ecc:	add    ah,cl
  437ece:	dec    eax
  437ed0:	xor    ecx,DWORD PTR [ecx+0x7265c31b]
  437ed6:	(bad)  
  437ed7:	jmp    esi
  437ed9:	or     DWORD PTR [ecx-0x77],0xffffffff
  437edd:	add    bh,bh
  437edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ee0:	dec    ebx
  437ee1:	add    BYTE PTR [edx],dh
  437ee3:	xor    al,0xe3
  437ee5:	xor    BYTE PTR [eax],al
  437ee7:	int3   
  437ee8:	push   esi
  437ee9:	(bad)  
  437eea:	in     eax,dx
  437eeb:	dec    DWORD PTR [ecx-0x2f10001]
  437ef1:	add    BYTE PTR [esi+0x6],dh
  437ef4:	lahf   
  437ef5:	push   0xffa783ff
  437efa:	lods   al,BYTE PTR ds:[esi]
  437efb:	(bad)  
  437efc:	(bad)  
  437efd:	dec    DWORD PTR [ecx+0x1eff8244]
  437f03:	mov    dh,0x22
  437f05:	cmp    DWORD PTR [eax],eax
  437f07:	call   esi
  437f09:	add    BYTE PTR [esi-0xff0001],ch
  437f0f:	cld    
  437f10:	sahf   
  437f11:	add    BYTE PTR [ebx+eiz*2],cl
  437f14:	ret    0xffef
  437f17:	push   DWORD PTR ds:0xff89ce00
  437f1d:	inc    DWORD PTR [eax]
  437f1f:	rcr    BYTE PTR [eax+0x496e1d00],cl
  437f25:	loop   0x437eb0
  437f27:	jmp    DWORD PTR [ebx]
  437f29:	(bad)  
  437f2a:	jp     0x437f2b
  437f2c:	add    BYTE PTR [ecx+0x9cb5ff],cl
  437f32:	mov    bl,0x86
  437f34:	es popf 
  437f36:	add    BYTE PTR [ebx-0xbb76d1],al
  437f3c:	cmp    edi,0xffffffcc
  437f3f:	pop    es
  437f40:	cmp    al,0x83
  437f42:	mov    esi,0xff54badd
  437f47:	mov    DWORD PTR [esi-0x3501],edx
  437f4d:	add    bh,bh
  437f4f:	jne    0x437f28
  437f51:	(bad)  
  437f52:	cmp    al,0x2
  437f54:	sar    BYTE PTR [edi+edi*8-0x1],cl
  437f58:	push   0x0
  437f5a:	and    eax,DWORD PTR [ebx-0x2fff0001]
  437f60:	jle    0x437f61
  437f62:	xchg   BYTE PTR [eax],bh
  437f64:	ret    
  437f65:	cmp    eax,0x2eff89
  437f6a:	cmp    edi,0xaa890000
  437f70:	(bad)  
  437f71:	jmp    FWORD PTR [eax]
  437f73:	xlat   BYTE PTR ds:[ebx]
  437f74:	cmp    BYTE PTR [edi+edi*8+0x0],al
  437f78:	xor    al,0xff
  437f7a:	mov    ebx,0xffffff89
  437f7f:	jns    0x437f60
  437f81:	dec    DWORD PTR [edi+ebp*2+0x2826]
  437f88:	cmp    al,BYTE PTR [eax]
  437f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437f8b:	(bad)  
  437f8c:	(bad)  
  437f8d:	inc    DWORD PTR [eax]
  437f8f:	int    0x8e
  437f91:	add    BYTE PTR [ebx],ah
  437f93:	cs call 0xcb437f8c
  437f99:	sub    ecx,0xffffffff
  437f9c:	inc    DWORD PTR [ebx-0x4aa501]
  437fa2:	ja     0x437fa4
  437fa4:	and    DWORD PTR [edi],eax
  437fa6:	int3   
  437fa7:	mov    DWORD PTR [edi],esp
  437fa9:	(bad)  
  437faa:	fadd   DWORD PTR [ebx-0x6aff7700]
  437fb0:	push   esp
  437fb1:	call   FWORD PTR [edx+ecx*2]
  437fb4:	push   0xffffffb3
  437fb6:	cmp    edi,0xffffffc4
  437fb9:	add    BYTE PTR [ebp+0x0],cl
  437fbc:	add    bh,bh
  437fbe:	sbb    ebx,0x63
  437fc1:	(bad)  
  437fc2:	mov    edi,0xffcc879d
  437fc7:	int3   
  437fc8:	imul   edi,edi,0xffffff89
  437fcb:	mov    DWORD PTR [ebx-0x2031007d],eax
  437fd1:	add    BYTE PTR [edx-0x13],al
  437fd4:	out    0x2f,eax
  437fd6:	int3   
  437fd7:	call   FWORD PTR [esi-0x1]
  437fda:	and    eax,DWORD PTR [ebx+0x3cffcc83]
  437fe0:	mov    ds:0xca7fe400,al
  437fe5:	jno    0x437fe7
  437fe7:	inc    ebp
  437fe9:	add    bh,dl
  437feb:	add    BYTE PTR [eax],al
  437fed:	int3   
  437fee:	add    BYTE PTR [ebp+0x4178ffab],dl
  437ff4:	jmp    ebx
  437ff6:	add    ah,cl
  437ff8:	cmp    DWORD PTR [eax],eax
  437ffa:	cmp    DWORD PTR [ebx+0x43ffff89],eax
  438000:	add    eax,0x8a6ba000
  438005:	sbb    bh,bh
  438007:	add    DWORD PTR [eax+eax*1],0x3d
  43800b:	int3   
  43800c:	int3   
  43800d:	(bad)  
  43800e:	inc    edi
  438010:	xchg   edi,edi
  438012:	aas    
  438013:	push   ds
  438014:	pop    esp
  438015:	adc    ah,cl
  438017:	jmp    FWORD PTR [esp+ecx*8-0x6]
  43801b:	add    BYTE PTR [ebx+0x1d2583ff],al
  438021:	(bad)  
  438022:	fimul  DWORD PTR [ebx-0x5]
  438025:	jle    0x437fb0
  438027:	and    DWORD PTR [ebp-0x7d],0x22
  43802b:	dec    esp
  43802d:	add    DWORD PTR [eax],0x64
  438030:	and    edi,edi
  438032:	mov    bh,BYTE PTR [ecx+0x25]
  438035:	sub    DWORD PTR [eax],eax
  438037:	xor    DWORD PTR [eax+0xca83],0xffffff83
  43803e:	add    cl,ah
  438040:	sahf   
  438041:	add    BYTE PTR [edi],al
  438043:	lds    ebx,FWORD PTR [ebx]
  438045:	mov    esp,0xcc81ccff
  43804a:	stos   DWORD PTR es:[edi],eax
  43804b:	add    BYTE PTR [eax],al
  43804d:	mov    edi,edi
  43804f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438050:	mov    ds:0xba40d600,eax
  438055:	in     eax,dx
  438056:	add    bh,bh
  438058:	pop    esp
  438059:	mov    ebx,ebx
  43805b:	mov    edi,edi
  43805d:	add    BYTE PTR [eax],al
  43805f:	arpl   WORD PTR [ecx],ax
  438061:	add    BYTE PTR [edx-0x5bfa5f],cl
  438067:	call   FWORD PTR ds:0xffffde00
  43806d:	inc    DWORD PTR [ebx+0x3c8305a4]
  438073:	(bad)  
  438074:	ja     0x43807a
  438076:	cmp    edi,0xffffffe6
  438079:	dec    DWORD PTR [edx-0x3334]
  43807f:	aam    0x68
  438081:	jmp    DWORD PTR [ecx+ebx*8+0x89e37c]
  438088:	and    al,BYTE PTR [eax]
  43808a:	jnp    0x43808b
  43808c:	(bad)  
  43808d:	(bad)  
  43808e:	push   DWORD PTR [esi-0x55]
  438091:	call   DWORD PTR [esi+eiz*4-0x3f]
  438095:	pop    ss
  438096:	add    BYTE PTR [eax],al
  438098:	loope  0x438099
  43809a:	out    dx,al
  43809b:	add    BYTE PTR [ebx-0x59fdff01],al
  4380a1:	add    BYTE PTR [ecx-0x7c03716a],al
  4380a7:	add    ch,al
  4380a9:	jmp    FWORD PTR [edx-0x1]
  4380ac:	mov    edi,edi
  4380ae:	xor    DWORD PTR [ebp-0x3b],0xffffffff
  4380b2:	and    bh,BYTE PTR [ebx]
  4380b4:	mov    esi,0x8700ffd9
  4380b9:	add    BYTE PTR [edi],ch
  4380bb:	mov    edi,edi
  4380bd:	or     esp,0x73
  4380c0:	lods   al,BYTE PTR ds:[esi]
  4380c1:	int3   
  4380c2:	fld    TBYTE PTR [ebp+0x26]
  4380c5:	nop
  4380c6:	add    BYTE PTR [eax],al
  4380c8:	inc    BYTE PTR [eax]
  4380ca:	jge    0x438098
  4380cc:	(bad)  
  4380cd:	(bad)  
  4380ce:	inc    DWORD PTR [edi-0x781400e7]
  4380d4:	xchg   esi,eax
  4380d5:	xlat   BYTE PTR ds:[ebx]
  4380d6:	(bad)  
  4380d7:	jmp    DWORD PTR [ecx+0x0]
  4380da:	jnp    0x4380db
  4380dc:	add    bh,bh
  4380de:	call   esp
  4380e0:	dec    DWORD PTR es:[esp+ecx*4+0xff8c3e]
  4380e8:	mov    ds:0xffffa9ff,eax
  4380ed:	cmp    edi,0xffffff95
  4380f0:	lahf   
  4380f1:	int3   
  4380f2:	xchg   ebp,eax
  4380f3:	out    0x2b,al
  4380f5:	pop    DWORD PTR [eax]
  4380f7:	add    BYTE PTR ds:0xccff03ff,al
  4380fd:	int3   
  4380fe:	add    BYTE PTR [edx+ebp*8-0x1098db01],ch
  438105:	lock (bad) 
  438107:	inc    DWORD PTR [esi-0x767c2f01]
  43810d:	inc    DWORD PTR [eax]
  43810f:	(bad)  
  438110:	les    eax,FWORD PTR [ebx-0x3cb6b93f]
  438116:	add    BYTE PTR [ebx-0x7c2300f2],al
  43811c:	add    bh,bh
  43811e:	add    DWORD PTR [esi-0x38],0x0
  438122:	in     eax,0x7c
  438124:	sub    DWORD PTR [eax+0x0],edx
  438127:	int3   
  438128:	xor    al,0xff
  43812a:	xor    al,0xff
  43812c:	cmp    edi,0xffffffff
  43812f:	mov    dh,0xa9
  438131:	and    DWORD PTR [edx],0x71
  438134:	js     0x43811c
  438136:	mov    edi,edi
  438138:	adc    BYTE PTR [ebx-0x7c00004b],al
  43813e:	inc    DWORD PTR [ecx*8-0x103f1701]
  438145:	dec    edi
  438146:	add    ah,cl
  438148:	mov    bl,0x0
  43814a:	xor    BYTE PTR [ecx-0x37ff7d00],cl
  438150:	mov    ah,0x83
  438152:	xchg   ebx,eax
  438153:	pop    edx
  438154:	repnz add bh,bh
  438157:	add    ah,cl
  438159:	(bad)  
  43815a:	inc    DWORD PTR [eax]
  43815c:	(bad)  
  43815d:	(bad)  
  43815e:	inc    DWORD PTR [ebx-0xb94834]
  438164:	push   DWORD PTR [esi+0x1eff8bff]
  43816a:	fwait
  43816b:	inc    DWORD PTR [eax]
  43816d:	retf   
  43816e:	add    BYTE PTR [ebp-0x1],ch
  438171:	enter  0xff89,0xff
  438175:	outs   dx,BYTE PTR ds:[esi]
  438176:	push   DWORD PTR [eax-0x1]
  438179:	mov    ebp,0x39cc00ab
  43817e:	int3   
  43817f:	retf   0x62ff
  438182:	clc    
  438183:	int3   
  438184:	inc    DWORD PTR [ecx]
  438186:	call   DWORD PTR ds:0x9c7589
  43818c:	add    BYTE PTR [ebp+0x0],dl
  43818f:	jno    0x438114
  438191:	popf   
  438192:	pop    ss
  438193:	add    bh,bh
  438195:	mov    esp,0x65001a83
  43819a:	(bad)  
  43819b:	(bad)  
  43819c:	call   FWORD PTR [edx+0x48ff3200]
  4381a2:	adc    eax,DWORD PTR [ebx-0x44ff7a00]
  4381a8:	jmp    DWORD PTR [edi-0x22]
  4381ab:	(bad)  
  4381ac:	dec    eax
  4381ae:	push   DWORD PTR [edi]
  4381b0:	call   ecx
  4381b2:	aam    0xff
  4381b4:	push   DWORD PTR [ebx-0x77]
  4381b7:	mov    al,ds:0xc6c783
  4381bc:	(bad)  
  4381bd:	jnp    0x4381be
  4381bf:	outs   dx,BYTE PTR ds:[esi]
  4381c0:	and    DWORD PTR [edi-0x55],0xffffffff
  4381c4:	call   FWORD PTR [ebx-0x66008501]
  4381ca:	aaa    
  4381cb:	dec    DWORD PTR [ecx-0x19008c]
  4381d1:	dec    eax
  4381d2:	hlt    
  4381d3:	mov    edi,edi
  4381d5:	or     bh,bh
  4381d7:	rol    BYTE PTR [eax],0xe5
  4381da:	mov    eax,ds:0xff9dffff
  4381df:	xor    cl,ah
  4381e1:	ss jg  0x4381e3
  4381e4:	sub    esi,0xffffffff
  4381e7:	or     esp,0xffffffb5
  4381ea:	add    BYTE PTR ss:[eax],al
  4381ed:	mov    ds:0xaecc8600,al
  4381f2:	loope  0x4381c0
  4381f4:	add    BYTE PTR [edi],ah
  4381f6:	mov    DWORD PTR [ebp-0x34],edx
  4381f9:	jp     0x438216
  4381fb:	(bad)  
  4381fc:	(bad)  
  4381fd:	(bad)  
  4381fe:	jmp    DWORD PTR [edi]
  438200:	add    BYTE PTR [ecx+0x7100ff01],dl
  438206:	(bad)  
  438207:	cli    
  438208:	int3   
  438209:	repnz inc DWORD PTR fs:[eax]
  43820d:	repz jmp edx
  438210:	add    BYTE PTR [edi],cl
  438212:	sub    eax,0xff4700ff
  438217:	cld    
  438218:	dec    DWORD PTR [eax]
  43821a:	repz add BYTE PTR [ecx-0xb000f7],cl
  438221:	cmp    ebp,ebx
  438223:	add    bh,bh
  438225:	mov    ah,0x0
  438227:	sub    cl,ah
  438229:	sub    ah,ah
  43822b:	(bad)  
  43822c:	(bad)  
  43822d:	fcos   
  43822f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438230:	add    BYTE PTR [ebp+0x44],ah
  438233:	int3   
  438234:	adc    DWORD PTR [eax+0x0],0xffffffd2
  438238:	cmp    DWORD PTR [ebx-0x7a7600c5],0x0
  43823f:	mov    esi,0xb451ff
  438244:	(bad)  
  438245:	js     0x438247
  438247:	lea    eax,[eax]
  438249:	pop    eax
  43824a:	push   esi
  43824b:	inc    DWORD PTR [eax]
  43824d:	adc    al,BYTE PTR [ebx-0x689dff7e]
  438253:	add    DWORD PTR [eax],0x6d
  438256:	add    BYTE PTR [edx-0x7d],dl
  438259:	leave  
  43825a:	dec    ebp
  43825b:	add    DWORD PTR [eax],0xfffffff8
  43825e:	cmp    DWORD PTR [ebx+0x5e0783],0xffffffff
  438265:	cmp    al,0x83
  438267:	inc    eax
  438268:	jmp    FWORD PTR [edx-0x570000f7]
  43826e:	(bad)  
  43826f:	cmp    bh,bh
  438271:	pop    ss
  438272:	addr16 add bh,bh
  438275:	add    DWORD PTR [ebx-0x4dfeff42],0xff8eff83
  43827f:	aam    0x0
  438281:	div    BYTE PTR [esi-0x77]
  438284:	inc    esi
  438286:	add    BYTE PTR [ebx-0x1],ah
  438289:	or     al,0x4b
  43828b:	add    bh,bh
  43828d:	mov    DWORD PTR [ebx-0x27ea33d4],0x1ffff
  438297:	fdivp  st(7),st
  438299:	aad    0xa1
  43829b:	add    BYTE PTR [eax],al
  43829d:	dec    ebx
  43829e:	add    bh,ah
  4382a0:	(bad)  
  4382a1:	mov    esp,0x25000012
  4382a6:	(bad)  
  4382a7:	fadd   DWORD PTR [ebx-0xe4b4]
  4382ad:	mov    edi,0xd2004000
  4382b2:	clc    
  4382b3:	dec    esp
  4382b5:	pop    esp
  4382b6:	add    al,cl
  4382b8:	add    BYTE PTR [ecx],cl
  4382ba:	std    
  4382bb:	add    bh,bh
  4382bd:	xchg   edx,eax
  4382be:	call   DWORD PTR [ebx-0x932901]
  4382c4:	jmp    FWORD PTR [edi]
  4382c6:	jmp    DWORD PTR [ebx]
  4382c8:	(bad)  
  4382c9:	fdivr  QWORD PTR [ebp-0x7c58ff01]
  4382cf:	cmp    bh,bh
  4382d1:	mov    ecx,0xdfffffed
  4382d6:	sub    DWORD PTR [ebx+eax*4],0x1b
  4382da:	xchg   bh,bh
  4382dc:	sub    DWORD PTR [esi-0x6ffb301],0xffffff81
  4382e3:	add    BYTE PTR [eax],al
  4382e5:	clc    
  4382e6:	adc    DWORD PTR [edi+edi*8-0x5a],0x2c
  4382eb:	add    ah,cl
  4382ed:	outs   dx,DWORD PTR ds:[esi]
  4382ee:	or     DWORD PTR [ebx-0x318000],0xffffffff
  4382f5:	lock dec DWORD PTR [edi]
  4382f8:	jmp    esp
  4382fa:	mov    bh,0x0
  4382fc:	cmp    DWORD PTR [edx+0x0],0x31
  438300:	int3   
  438301:	lahf   
  438302:	xchg   esi,eax
  438303:	add    BYTE PTR [eax],al
  438305:	push   cs
  438306:	and    esi,0xffffffcc
  438309:	shr    BYTE PTR [ecx+ecx*4-0x3c007301],1
  438310:	mov    DWORD PTR [edi-0x367cff85],edx
  438316:	xor    DWORD PTR [ebx],0x0
  438319:	loop   0x438352
  43831b:	inc    DWORD PTR [ebx-0x76eeff31]
  438321:	imul   edx,DWORD PTR [esi],0xffffff83
  438324:	add    bl,bl
  438326:	(bad)  
  438327:	clc    
  438328:	call   FWORD PTR [ebx-0x5a]
  43832b:	add    ah,cl
  43832d:	add    al,BYTE PTR [eax]
  43832f:	jo     0x438331
  438331:	dec    eax
  438332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438333:	(bad)  
  438334:	jmp    DWORD PTR [ecx+0x783e8ff]
  43833a:	in     al,0x83
  43833c:	push   ebp
  43833e:	call   DWORD PTR [ebp-0x1]
  438341:	scas   eax,DWORD PTR es:[edi]
  438342:	ds (bad) 
  438344:	jmp    edx
  438346:	int3   
  438347:	data16 add BYTE PTR [edi+0x39ffff79],ah
  43834e:	(bad)  
  43834f:	out    dx,al
  438350:	jmp    FWORD PTR [ebp-0x3b]
  438353:	inc    DWORD PTR [eax]
  438355:	cld    
  438356:	call   FWORD PTR [ebx+eax*4-0x5d]
  43835a:	dec    esp
  43835b:	(bad)  
  43835c:	inc    DWORD PTR [edx-0x4d7c1401]
  438362:	fadd   DWORD PTR [ebx-0x2800f700]
  438368:	add    BYTE PTR [esi+0x1effffbb],cl
  43836e:	or     DWORD PTR [ecx+0x0],0xffffffb6
  438372:	pop    eax
  438373:	int3   
  438374:	add    BYTE PTR [ebx],cl
  438376:	int3   
  438377:	or     eax,0xff6f8e00
  43837c:	int3   
  43837d:	(bad)
  438380:	jmp    FWORD PTR [ebp+eiz*8-0x1]
  438384:	add    BYTE PTR [esi-0x7d],al
  438387:	adc    eax,0xffdd9cff
  43838c:	call   FWORD PTR [ecx]
  43838e:	call   DWORD PTR [esi-0x3da47d]
  438394:	adc    DWORD PTR [esi],0xffffff83
  438397:	pop    ds
  438398:	(bad)  
  438399:	mov    ebx,0x670083f3
  43839e:	add    ah,bl
  4383a0:	mov    DWORD PTR [eax-0x25],esp
  4383a3:	mov    edi,edi
  4383a5:	adc    bh,bh
  4383a7:	arpl   WORD PTR [eax],ax
  4383a9:	inc    BYTE PTR [edi+edi*8+0x50ff94cc]
  4383b0:	jmp    FWORD PTR [ebx]
  4383b2:	ret    
  4383b3:	cmp    edi,0x24
  4383b6:	int3   
  4383b7:	mov    edi,?
  4383b9:	jo     0x43836e
  4383bb:	(bad)  
  4383bc:	inc    eax
  4383be:	(bad)  
  4383bf:	call   0x51e090
  4383c4:	jmp    DWORD PTR [ecx]
  4383c6:	inc    DWORD PTR [ebx-0x1]
  4383c9:	sub    ebx,DWORD PTR [ebx+eax*4+0x17006a00]
  4383d0:	jmp    DWORD PTR [eax]
  4383d2:	sbb    bh,bh
  4383d4:	add    bl,al
  4383d6:	call   FWORD PTR [esi-0x665a01]
  4383dc:	add    BYTE PTR [eax],dl
  4383de:	call   FWORD PTR [ebx-0xd99777]
  4383e4:	push   DWORD PTR [ecx+0x3283cf00]
  4383ea:	dec    ecx
  4383eb:	(bad)  
  4383ec:	jmp    FWORD PTR [ecx-0x1]
  4383ef:	cld    
  4383f0:	dec    DWORD PTR [edi+0x5c]
  4383f3:	dec    DWORD PTR [ecx+0x2cff36]
  4383f9:	jno    0x4383d7
  4383fb:	dec    DWORD PTR [ecx-0x7c1f76c7]
  438401:	(bad)  
  438402:	test   al,0x0
  438404:	add    BYTE PTR [ebp-0x1],al
  438407:	or     al,BYTE PTR [eax]
  438409:	call   0x21c684d3
  43840e:	call   DWORD PTR [edi+0x115eff]
  438414:	adc    DWORD PTR [ecx+0x0],0xffffff8f
  438418:	call   FWORD PTR [edi-0x4c]
  43841b:	mov    DWORD PTR [eax],eax
  43841d:	ins    DWORD PTR es:[edi],dx
  43841e:	jmp    DWORD PTR [edx-0x1]
  438421:	lahf   
  438422:	mov    al,ds:0x89f900ff
  438427:	inc    ebp
  438428:	call   ebp
  43842a:	or     edi,edi
  43842c:	jmp    DWORD PTR [ebp+0x0]
  43842f:	xor    BYTE PTR [eax],al
  438431:	repz push ebp
  438433:	add    bh,bh
  438435:	ret    0xa000
  438438:	add    BYTE PTR [ecx+0x3400ff2a],dh
  43843e:	xor    DWORD PTR [ecx],0xffffffff
  438441:	scas   al,BYTE PTR es:[edi]
  438442:	dec    esi
  438443:	add    DWORD PTR [ebx-0x2b7c72],0xffffffb8
  43844a:	pop    eax
  43844b:	int3   
  43844c:	call   FWORD PTR [ebx]
  43844e:	sbb    ecx,0x0
  438451:	sub    eax,0xeb000048
  438456:	add    BYTE PTR [eax+0xdec7ff],al
  43845c:	jmp    FWORD PTR [eax]
  43845e:	add    bl,cl
  438460:	xor    DWORD PTR [esi],0xffffffd8
  438463:	add    BYTE PTR [ebx-0xd400b1],al
  438469:	in     al,dx
  43846a:	call   0xffd4516e
  43846f:	rol    DWORD PTR [eax],cl
  438471:	mov    ah,0x8e
  438473:	inc    DWORD PTR [eax]
  438475:	rol    BYTE PTR [eax],1
  438477:	add    BYTE PTR gs:[eax+0x2a83009b],ch
  43847e:	add    BYTE PTR [ebx-0x77],al
  438481:	pop    es
  438482:	push   ds
  438483:	(bad)  
  438484:	inc    edi
  438486:	int3   
  438487:	cmc    
  438488:	call   FWORD PTR [edi-0x42]
  43848b:	add    BYTE PTR [ebx-0x5d0040],al
  438491:	icebp  
  438492:	pop    es
  438493:	mov    DWORD PTR [eax],eax
  438495:	sar    edi,1
  438497:	or     DWORD PTR [ecx-0x7cff18ca],ecx
  43849d:	test   edi,edi
  43849f:	or     al,0x0
  4384a1:	scas   eax,DWORD PTR es:[edi]
  4384a2:	push   edx
  4384a3:	mov    edi,edi
  4384a5:	imul   edi,edi,0x9c8dcce9
  4384ab:	inc    DWORD PTR [ebx-0x5d76ca]
  4384b1:	pop    ds
  4384b2:	jo     0x438437
  4384b4:	jmp    FWORD PTR [edx-0x3ff0e77]
  4384ba:	ins    DWORD PTR es:[edi],dx
  4384bb:	add    BYTE PTR [eax],al
  4384bd:	xchg   edx,eax
  4384be:	add    BYTE PTR [ecx+ecx*4+0x9346],ah
  4384c5:	fld    DWORD PTR [eax]
  4384c7:	cdq    
  4384c8:	(bad)  
  4384c9:	mov    ebx,0xedffff55
  4384ce:	push   DWORD PTR [ebx-0x77]
  4384d1:	push   edx
  4384d2:	push   ebp
  4384d3:	dec    DWORD PTR [ecx-0x7cfe00d1]
  4384d9:	xchg   edi,eax
  4384da:	mov    ah,0xff
  4384dc:	inc    DWORD PTR [eax-0x77]
  4384df:	sbb    bh,bh
  4384e1:	push   esi
  4384e2:	into   
  4384e3:	inc    DWORD PTR [ebx-0x7cf50033]
  4384e9:	and    eax,0x7ff834b
  4384ee:	dec    DWORD PTR [edx]
  4384f0:	sub    edi,0x48
  4384f3:	(bad)  
  4384f4:	jmp    FWORD PTR [esi-0x34]
  4384f7:	sti    
  4384f8:	add    ah,al
  4384fa:	mov    bh,bh
  4384fc:	add    bl,dl
  4384fe:	adc    DWORD PTR [edx-0x1],0x44
  438502:	dec    eax
  438503:	inc    DWORD PTR [eax]
  438505:	mov    esp,0x65ff61ff
  43850a:	rol    DWORD PTR [eax],1
  43850c:	(bad)  
  43850d:	fdiv   st(7),st
  43850f:	xor    eax,0xffab16ff
  438514:	or     DWORD PTR [ebx],0xffffffff
  438517:	inc    eax
  438518:	mov    DWORD PTR [esi+0x56],eax
  43851b:	add    bh,bh
  43851d:	leave  
  43851e:	int3   
  43851f:	inc    ecx
  438520:	(bad)  
  438521:	jmp    0x94ff:0xc9ff0002
  438528:	inc    DWORD PTR [edx+0x60ff0076]
  43852e:	push   DWORD PTR [edx+0xd2caff]
  438534:	push   DWORD PTR [eax-0x1]
  438537:	out    dx,eax
  438538:	add    BYTE PTR [ebp-0x5b00ff8d],bl
  43853e:	adc    DWORD PTR [ecx],0xffffffcc
  438541:	mov    eax,0x10ffff99
  438546:	int3   
  438547:	lock push DWORD PTR [ebx+0x1fffff62]
  43854e:	mov    DWORD PTR [edx],esp
  438550:	add    BYTE PTR [ebp-0x2c0000c1],cl
  438556:	call   ecx
  438558:	add    BYTE PTR [eax],ah
  43855a:	inc    BYTE PTR [eax]
  43855c:	add    DWORD PTR [edx-0x77],0x74
  438560:	cmp    ecx,0x48
  438563:	mov    DWORD PTR [eax],eax
  438565:	cmc    
  438566:	add    BYTE PTR [ebp-0x34],bh
  438569:	lea    esp,ds:0x39ff00
  43856f:	pop    esp
  438570:	dec    DWORD PTR [eax-0x427c7c0e]
  438576:	add    BYTE PTR [ebx-0xb19600],al
  43857c:	(bad)  
  43857d:	clc    
  43857e:	jmp    FWORD PTR [eax+eax*1-0x6]
  438582:	xor    al,BYTE PTR [eax]
  438584:	add    BYTE PTR [ebp-0x34],bh
  438587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438588:	push   edx
  43858a:	or     esp,0x6fff0bff
  438590:	sbb    DWORD PTR [eax],0xffffffc9
  438593:	add    BYTE PTR [eax],al
  438595:	jno    0x438596
  438597:	adc    BYTE PTR [eax],al
  438599:	xor    al,BYTE PTR [ecx+0x0]
  43859c:	add    eax,0xffffffff
  43859f:	enter  0xa000,0xfc
  4385a3:	cmp    edi,0x35
  4385a6:	xor    DWORD PTR [ecx],0xffffffcc
  4385a9:	jns    0x438580
  4385ab:	cmp    edi,0xffffffda
  4385ae:	add    BYTE PTR [ecx+ecx*4-0xff792e],cl
  4385b5:	test   DWORD PTR [eax],0xb132cc99
  4385bb:	mov    edi,edi
  4385bd:	loopne 0x4385be
  4385bf:	mov    edi,edi
  4385c1:	add    eax,0x3d00ff22
  4385c6:	add    BYTE PTR ds:0xff031883,ah
  4385cc:	call   FWORD PTR [ebx]
  4385ce:	jmp    eax
  4385d0:	jmp    ebx
  4385d2:	enter  0xffff,0x14
  4385d6:	add    BYTE PTR [eax-0x7d],bh
  4385d9:	inc    ebp
  4385da:	pop    esp
  4385db:	int3   
  4385dc:	jmp    DWORD PTR ds:0xf800be00
  4385e2:	stos   DWORD PTR es:[edi],eax
  4385e3:	dec    DWORD PTR [ecx-0x3e007c]
  4385e9:	lods   eax,DWORD PTR ds:[esi]
  4385ea:	icebp  
  4385eb:	(bad)  
  4385ec:	(bad)  
  4385ed:	mov    edi,0xcfff9300
  4385f2:	ret    
  4385f3:	add    BYTE PTR [ebx+0x7800d5],al
  4385f9:	sbb    BYTE PTR [edi+edi*8-0x1],dh
  4385fd:	jb     0x438582
  4385ff:	repz inc DWORD PTR [eax+0x34ccff77]
  438606:	sub    edi,0x0
  438609:	mov    WORD PTR [edx-0x7cb13301],cs
  43860f:	jl     0x438611
  438611:	shl    BYTE PTR [edx-0x60001],0x37
  438618:	add    BYTE PTR [ebp+0x1e00ff32],ch
  43861e:	dec    DWORD PTR [ecx-0x397e01]
  438624:	inc    DWORD PTR [edx-0x1]
  438627:	jle    0x4385f5
  438629:	fwait
  43862a:	pop    esi
  43862b:	(bad)  
  43862c:	push   DWORD PTR [esi]
  43862e:	add    ch,bh
  438630:	add    al,bl
  438632:	sbb    edi,edi
  438634:	cmp    DWORD PTR [edx-0x1],0x0
  438638:	add    BYTE PTR ds:0x1500ffb3,bh
  43863e:	call   DWORD PTR [edi+edi*8+0x31]
  438642:	in     al,dx
  438643:	add    bh,bh
  438645:	push   0x0
  438647:	test   BYTE PTR [eax],al
  438649:	mov    edi,0x6aff00fd
  43864e:	xor    DWORD PTR [edi-0xb0fc01],0xffffffff
  438655:	cdq    
  438656:	call   FWORD PTR [ebp+0x0]
  438659:	xor    eax,0x43cc8370
  43865e:	call   FWORD PTR [edi+edi*8+0x48]
  438662:	loopne 0x438664
  438664:	add    BYTE PTR ds:0xca0026ff,cl
  43866a:	popf   
  43866b:	(bad)  
  43866c:	dec    DWORD PTR [edx+0x7300a8ff]
  438672:	xor    al,0xff
  438674:	call   FWORD PTR [edx+0x0]
  438677:	mov    WORD PTR [eax],es
  438679:	push   0x9effff39
  43867e:	mov    DWORD PTR [edx-0x1],esp
  438681:	pop    esi
  438682:	ja     0x438650
  438684:	dec    DWORD PTR [esi-0x100b801]
  43868a:	pop    ss
  43868b:	inc    DWORD PTR [eax]
  43868d:	scas   eax,DWORD PTR es:[edi]
  43868e:	add    BYTE PTR [ecx+0x906000],bh
  438694:	xor    DWORD PTR [ebp-0x1],0xfffffff9
  438698:	jmp    ebp
  43869a:	pop    esi
  43869b:	inc    DWORD PTR [ebx+0xcbff21]
  4386a1:	pop    ebp
  4386a2:	loope  0x438627
  4386a4:	(bad)  
  4386a5:	stc    
  4386a6:	(bad)  
  4386a7:	fdivr  st,st(7)
  4386a9:	stos   DWORD PTR es:[edi],eax
  4386aa:	arpl   WORD PTR [eax],ax
  4386ac:	(bad)  
  4386ad:	fiadd  WORD PTR [eax]
  4386af:	and    DWORD PTR [eax],eax
  4386b1:	mov    al,ds:0xd6ffffb4
  4386b6:	dec    edi
  4386b8:	add    DWORD PTR [edx-0x68ff0074],0xffffffff
  4386bf:	into   
  4386c0:	call   FWORD PTR [eax-0x2a7c00e6]
  4386c6:	sub    DWORD PTR [ebx-0x1],0xffffffea
  4386ca:	jns    0x9a42e1d0
  4386d0:	int3   
  4386d1:	fst    DWORD PTR [eax-0x1d3334]
  4386d7:	fild   WORD PTR [eax]
  4386d9:	xchg   edx,eax
  4386da:	retf   0x0
  4386dd:	hlt    
  4386de:	add    BYTE PTR [edx],cl
  4386e0:	jmp    FWORD PTR [esi+ebx*4-0x34]
  4386e4:	dec    DWORD PTR [eax+eax*1+0x40]
  4386e8:	add    BYTE PTR [edi+0x18ffff0a],bh
  4386ee:	dec    ecx
  4386f0:	mov    DWORD PTR [eax],ecx
  4386f2:	call   0xff5e86f6
  4386f7:	imul   edi,edi,0xff892b77
  4386fd:	inc    esi
  4386fe:	add    BYTE PTR [edi-0x1],cl
  438701:	data16 (bad) 
  438703:	int3   
  438704:	add    BYTE PTR [edi+edi*8-0x424600f3],dh
  43870b:	cmp    edi,0xa
  43870e:	add    cl,ch
  438710:	add    BYTE PTR [ecx+0x70],bl
  438713:	inc    DWORD PTR [eax]
  438715:	arpl   WORD PTR [eax],ax
  438717:	pop    ecx
  438718:	add    al,ah
  43871a:	inc    esp
  43871b:	(bad)  
  43871c:	(bad)  
  43871d:	fdivr  st,st(7)
  43871f:	or     eax,0xcc4ca6ff
  438724:	(bad)  
  438725:	inc    BYTE PTR [eax]
  438727:	add    BYTE PTR fs:[esi+0x5c],al
  43872b:	(bad)  
  43872c:	call   FWORD PTR [ebp-0x1bffdb01]
  438732:	out    dx,al
  438733:	add    BYTE PTR [eax],al
  438735:	inc    ebx
  438736:	jmp    FWORD PTR [eax-0x7cb29f34]
  43873c:	int3   
  43873d:	dec    eax
  43873e:	add    bl,cl
  438740:	add    BYTE PTR [esi],ah
  438742:	xchg   esp,eax
  438743:	add    BYTE PTR [eax],al
  438745:	xchg   ecx,eax
  438746:	add    cl,dh
  438748:	jmp    DWORD PTR [ebp+0x7affcc9b]
  43874e:	and    esi,0xffffffff
  438751:	je     0x4386ef
  438753:	add    bh,bh
  438755:	ins    DWORD PTR es:[edi],dx
  438756:	push   DWORD PTR [ebp-0x1]
  438759:	cmp    dl,BYTE PTR [esp+ecx*8-0x1]
  43875d:	leave  
  43875e:	add    BYTE PTR [ebp-0x7d],bh
  438761:	iret   
  438762:	icebp  
  438763:	add    BYTE PTR [eax],al
  438765:	mov    bh,0xff
  438767:	imul   edi,edi,0xffffff84
  43876a:	xchg   ecx,eax
  43876b:	add    bh,bh
  43876d:	xor    al,BYTE PTR [ebx+0xf78ff81]
  438773:	inc    DWORD PTR [ebx-0x3f76ca]
  438779:	mov    ch,0x5e
  43877b:	inc    DWORD PTR [eax]
  43877d:	mov    bl,0x0
  43877f:	out    0xcc,al
  438781:	xchg   DWORD PTR [ebp-0x7620ff01],esp
  438787:	stc    
  438788:	push   DWORD PTR [eax-0x6e]
  43878b:	inc    DWORD PTR [ebx-0x8c7c48]
  438791:	(bad)  
  438792:	xchg   edx,eax
  438793:	add    BYTE PTR [ebx-0x8c0077],al
  438799:	in     eax,dx
  43879a:	sbb    DWORD PTR [ebx+0x3900eeff],eax
  4387a0:	mov    DWORD PTR [eax-0x56007cab],eax
  4387a6:	jmp    DWORD PTR [ecx-0x77]
  4387a9:	dec    ebx
  4387aa:	test   BYTE PTR [eax],al
  4387ac:	add    BYTE PTR [ebx+0x7cffbacc],dh
  4387b2:	inc    esp
  4387b3:	cmp    edi,0x2
  4387b6:	add    BYTE PTR [ebp+0x0],dl
  4387b9:	rcr    DWORD PTR [edx-0x7cd60100],1
  4387bf:	xchg   esi,eax
  4387c0:	call   FWORD PTR [eax-0x1a00769c]
  4387c6:	inc    DWORD PTR [edi+edi*8]
  4387c9:	or     BYTE PTR [eax],bh
  4387cb:	mov    esp,ecx
  4387cd:	imul   eax,DWORD PTR [eax],0xfffffff9
  4387d0:	jmp    DWORD PTR [eax]
  4387d2:	aam    0x0
  4387d4:	mov    edx,edx
  4387d6:	(bad)  
  4387d7:	mov    esi,0x83faf883
  4387dc:	add    BYTE PTR [ebx+0x7fff4700],dl
  4387e2:	push   cs
  4387e3:	mov    DWORD PTR [ebx-0x768b76d9],eax
  4387e9:	shl    BYTE PTR [esi],0xff
  4387ec:	dec    esp
  4387ee:	(bad)  
  4387ef:	(bad)  
  4387f1:	cwde   
  4387f2:	mov    ah,0xff
  4387f4:	add    BYTE PTR [edi],cl
  4387f6:	add    BYTE PTR [esi-0x7d],cl
  4387f9:	or     edi,ebp
  4387fb:	inc    DWORD PTR [ebx+0xbcca1]
  438801:	xchg   esi,eax
  438802:	jne    0x438804
  438804:	add    BYTE PTR [ebx-0x7600cb00],dh
  43880a:	add    edi,edi
  43880c:	(bad)  
  43880d:	fiadd  DWORD PTR [eax]
  43880f:	loop   0x438810
  438811:	mov    esp,0xedffcc48
  438816:	or     eax,0xffffffff
  438819:	pop    edx
  43881a:	data16 add BYTE PTR [ebx-0x547cc4],al
  438821:	xor    eax,0xfaccffdb
  438826:	add    BYTE PTR [ebx-0x7d],bh
  438829:	mov    ds,ecx
  43882b:	add    bh,bh
  43882d:	mov    al,BYTE PTR [eax]
  43882f:	xor    eax,0xff0ed2ff
  438834:	push   ecx
  438836:	add    BYTE PTR [eax+0x4c9400],bl
  43883c:	add    BYTE PTR [edx-0x2476ab01],dl
  438842:	and    edi,edi
  438844:	add    dh,bl
  438846:	add    edi,0xffffffff
  438849:	lock push edx
  43884b:	add    BYTE PTR [eax],al
  43884d:	dec    edx
  43884e:	dec    DWORD PTR ds:0xffd684ff
  438854:	add    BYTE PTR [ecx+0x6600e683],dl
  43885a:	ret    0xccff
  43885d:	push   edi
  43885e:	add    BYTE PTR [ecx],bh
  438860:	add    BYTE PTR [ebx-0x23760098],dh
  438866:	jmp    DWORD PTR [ecx-0x7ccc0800]
  43886c:	(bad)  
  43886d:	jg     0x43886e
  43886f:	adc    eax,DWORD PTR [eax]
  438871:	adc    BYTE PTR [ebp-0x1],bl
  438874:	mov    DWORD PTR [ecx],eax
  438876:	sub    DWORD PTR [ecx+ecx*4],0xffffff9d
  43887a:	retf   0xff
  43887d:	cwde   
  43887e:	dec    edx
  438880:	add    BYTE PTR [ecx+eax*8],al
  438883:	add    ah,cl
  438885:	jno    0x438810
  438887:	sahf   
  438888:	add    DWORD PTR [edi-0x5c],0xffffffff
  43888c:	add    esp,0xffffffff
  43888f:	cmp    bh,bh
  438891:	cmp    DWORD PTR [ebx+0x0],esi
  438894:	add    al,ch
  438896:	add    BYTE PTR [edx],bl
  438898:	mov    ebp,edi
  43889a:	stos   DWORD PTR es:[edi],eax
  43889b:	(bad)  
  43889c:	call   DWORD PTR [ecx+0x0]
  43889f:	dec    esi
  4388a0:	inc    edi
  4388a2:	dec    ah
  4388a4:	add    BYTE PTR [edx],bh
  4388a6:	jmp    DWORD PTR [esp+ecx*8+0xffdf90]
  4388ad:	jge    0x4388ae
  4388af:	js     0x4388b1
  4388b1:	cmp    eax,DWORD PTR [ecx-0x1]
  4388b4:	sub    DWORD PTR [esi+0x59fffcff],0xffffffe4
  4388bb:	inc    DWORD PTR [eax]
  4388bd:	cdq    
  4388be:	mov    DWORD PTR [edi-0x8d1b01],edx
  4388c4:	push   DWORD PTR [ecx+0x7900f583]
  4388ca:	mov    eax,ds:0xb7ff00
  4388cf:	fxch   st(4)
  4388d1:	add    eax,0x3500009a
  4388d6:	call   DWORD PTR [eax-0x7d]
  4388d9:	arpl   WORD PTR [eax-0x6d0001],di
  4388df:	fld    QWORD PTR [eax]
  4388e1:	sub    eax,edx
  4388e3:	inc    DWORD PTR [eax]
  4388e5:	lahf   
  4388e6:	(bad)  
  4388e7:	jp     0x4388e9
  4388e9:	inc    ebp
  4388ea:	(bad)  
  4388eb:	dec    DWORD PTR [ecx+0x48ffd7]
  4388f1:	out    0x62,eax
  4388f3:	or     esp,0xffffff83
  4388f6:	call   FWORD PTR [ebx]
  4388f8:	(bad)  
  4388f9:	cmp    bl,BYTE PTR [edx-0x1]
  4388fc:	add    BYTE PTR [ecx-0x67009534],ch
  438902:	xor    cl,ah
  438904:	inc    DWORD PTR [ecx]
  438906:	add    BYTE PTR [ecx-0x1],cl
  438909:	mov    ah,0x10
  43890b:	(bad)  
  43890c:	call   DWORD PTR [eax-0x1]
  43890f:	pop    ss
  438910:	mov    esp,eax
  438912:	iret   
  438913:	inc    DWORD PTR [eax]
  438915:	loope  0x438917
  438917:	sar    edi,1
  438919:	add    esp,DWORD PTR [ebx-0x1]
  43891c:	add    bl,dl
  43891e:	add    BYTE PTR [eax+0x27d900],cl
  438924:	add    dh,cl
  438926:	mov    DWORD PTR [edx],esi
  438928:	adc    DWORD PTR [esi+esi*2],0xffffff83
  43892c:	int3   
  43892d:	xor    edi,edi
  43892f:	int    0xff
  438931:	(bad)  
  438932:	sub    ah,cl
  438934:	mov    DWORD PTR [ebp-0x7d],esp
  438937:	jmp    0x438938
  438939:	popf   
  43893a:	test   BYTE PTR [eax],al
  43893c:	add    BYTE PTR [esi],dl
  43893e:	push   DWORD PTR [ecx-0x1]
  438941:	and    esp,DWORD PTR [edx-0xf80001]
  438947:	adc    al,0x0
  438949:	inc    edx
  43894a:	ja     0x43894b
  43894c:	add    BYTE PTR [eax+eax*1+0x369bff6d],ch
  438953:	inc    DWORD PTR [ebx+0xabcc5d]
  438959:	dec    eax
  43895a:	dec    eax
  43895b:	cmp    edi,0x5f
  43895e:	call   FWORD PTR [ecx-0x4ead00]
  438964:	dec    DWORD PTR [eax+0x59ff00ff]
  43896a:	(bad)  
  43896c:	add    dl,dl
  43896e:	jmp    DWORD PTR [edx-0xcfb900]
  438974:	int3   
  438975:	fadd   QWORD PTR [ebx-0x11367c71]
  43897b:	add    BYTE PTR [eax],al
  43897d:	mov    al,ds:0xa8ff2c00
  438982:	mov    ch,0x0
  438984:	add    BYTE PTR [ebx-0x44007e7d],dh
  43898a:	cmp    ecx,DWORD PTR [ecx-0x50ffe200]
  438990:	int3   
  438991:	xchg   ebp,eax
  438992:	push   ss
  438993:	(bad)  
  438994:	push   DWORD PTR [ecx]
  438996:	inc    DWORD PTR [ebp-0x77]
  438999:	lods   eax,DWORD PTR ds:[esi]
  43899a:	jmp    0x51899f
  43899f:	pusha  
  4389a0:	add    BYTE PTR [esi+0x7bff8388],bh
  4389a6:	call   FWORD PTR ds:0xcc1b3383
  4389ac:	int3   
  4389ad:	pushf  
  4389ae:	add    BYTE PTR [eax+eax*1-0xff90b2],cl
  4389b5:	data16 add bh,bh
  4389b8:	add    ah,bh
  4389ba:	test   edi,edi
  4389bc:	jmp    DWORD PTR [ecx+0x6affeeff]
  4389c2:	cmp    bh,bh
  4389c4:	add    BYTE PTR [edx],ah
  4389c6:	call   eax
  4389c8:	inc    DWORD PTR ds:0xbb000043
  4389ce:	int3   
  4389cf:	jl     0x43899d
  4389d1:	cmp    al,0xae
  4389d3:	add    bh,bh
  4389d5:	pop    esi
  4389d6:	(bad)  
  4389d7:	fadd   QWORD PTR [eax]
  4389d9:	daa    
  4389da:	pop    ss
  4389db:	inc    DWORD PTR [eax]
  4389dd:	or     eax,0xfccc66ff
  4389e2:	out    0xff,al
  4389e4:	dec    ebp
  4389e6:	adc    DWORD PTR [eax-0x7c916a00],0x0
  4389ed:	mov    ecx,0xbf897f83
  4389f2:	fs add bh,bh
  4389f5:	inc    ebx
  4389f6:	(bad)  
  4389f7:	fiadd  WORD PTR [eax]
  4389f9:	dec    edx
  4389fa:	dec    edi
  4389fb:	int3   
  4389fc:	add    BYTE PTR [edi],al
  4389fe:	add    DWORD PTR [edx-0x34],0x38
  438a02:	xchg   edi,eax
  438a03:	inc    DWORD PTR [eax]
  438a05:	lock push esp
  438a08:	add    BYTE PTR [ecx+0x3d],al
  438a0b:	(bad)  
  438a0c:	call   ebp
  438a0e:	add    BYTE PTR [edx],bh
  438a10:	call   ebx
  438a12:	push   es
  438a13:	(bad)  
  438a14:	call   eax
  438a16:	add    dh,bh
  438a18:	jmp    DWORD PTR [eax+0x7083cc32]
  438a1e:	call   edi
  438a20:	push   DWORD PTR [esi+0x34ccff62]
  438a26:	add    BYTE PTR [edx],cl
  438a28:	call   DWORD PTR [edi+0x5a]
  438a2b:	int3   
  438a2c:	add    cl,bh
  438a2e:	dec    DWORD PTR [edi+0x0]
  438a31:	xchg   ecx,eax
  438a32:	in     al,dx
  438a33:	add    ah,cl
  438a35:	clc    
  438a36:	jmp    FWORD PTR [ebx]
  438a38:	mov    DWORD PTR [esi*1-0x1],esi
  438a3f:	adc    al,0x83
  438a41:	push   eax
  438a42:	int3   
  438a43:	dec    esp
  438a45:	loopne 0x4389ca
  438a47:	js     0x438a48
  438a49:	int3   
  438a4a:	mov    dl,0xff
  438a4c:	add    ch,dh
  438a4e:	dec    DWORD PTR ds:0xff53c700
  438a54:	add    BYTE PTR [eax-0x7d],dh
  438a57:	(bad)  
  438a58:	push   DWORD PTR [edi]
  438a5a:	inc    esp
  438a5b:	add    BYTE PTR [eax],al
  438a5d:	mov    esi,0xb3832fff
  438a62:	mov    edi,0xff6900ff
  438a67:	or     al,BYTE PTR [eax]
  438a69:	dec    ebx
  438a6a:	mov    dl,0x0
  438a6c:	dec    DWORD PTR [eax-0x1]
  438a6f:	dec    esi
  438a70:	add    BYTE PTR [esi+0x71ffccb2],bh
  438a76:	int3   
  438a77:	add    al,0xff
  438a79:	pop    edx
  438a7a:	popf   
  438a7b:	inc    DWORD PTR [eax]
  438a7d:	cmp    edi,0xffffffd9
  438a80:	(bad)  
  438a81:	fistp  DWORD PTR [ecx-0x66ff01]
  438a87:	jo     0x438a0c
  438a89:	pop    esi
  438a8a:	out    0x0,al
  438a8c:	jmp    FWORD PTR [ecx-0x34]
  438a8f:	push   ss
  438a90:	call   DWORD PTR [edi-0x41]
  438a93:	(bad)  
  438a94:	(bad)  
  438a95:	jmp    0x438a96
  438a97:	push   cs
  438a98:	and    eax,0xffffff98
  438a9b:	mov    DWORD PTR [ebx-0xb6ff33],eax
  438aa1:	mov    bl,0xb
  438aa3:	or     esp,0x71
  438aa6:	add    cl,ch
  438aa8:	push   DWORD PTR [ebp-0x68]
  438aab:	inc    DWORD PTR [ebx+0xc4ff36]
  438ab1:	in     al,dx
  438ab2:	lock inc DWORD PTR [eax]
  438ab5:	mov    DWORD PTR [eax],eax
  438ab7:	jmp    0x438ab9
  438ab9:	mov    eax,ds:0x6ffff55
  438abe:	int3   
  438abf:	outs   dx,BYTE PTR ds:[esi]
  438ac0:	add    BYTE PTR [esi+ecx*8-0x1],ch
  438ac4:	(bad)  
  438ac5:	out    dx,al
  438ac6:	mov    DWORD PTR [esi+0x281ff],esi
  438acc:	add    BYTE PTR [ecx],dl
  438ace:	call   DWORD PTR [ebx]
  438ad0:	add    cl,ch
  438ad2:	in     eax,dx
  438ad3:	inc    DWORD PTR [ebx+0xcb00ac]
  438ad9:	push   esi
  438ada:	call   0x7:0x7eccff
  438ae1:	into   
  438ae2:	push   es
  438ae3:	inc    DWORD PTR [eax]
  438ae5:	push   ecx
  438ae6:	add    BYTE PTR [eax+0x0],bl
  438ae9:	xlat   BYTE PTR ds:[ebx]
  438aea:	ret    
  438aeb:	add    bh,bh
  438aed:	cmp    al,0x0
  438aef:	push   ebx
  438af0:	call   FWORD PTR [esi-0x1b]
  438af3:	(bad)  
  438af4:	jmp    FWORD PTR [edi-0x1eff067d]
  438afa:	(bad)  
  438afc:	add    BYTE PTR [ecx+ecx*4],al
  438aff:	cdq    
  438b00:	add    BYTE PTR [esi-0x7ffff38],al
  438b06:	add    BYTE PTR [ebp-0xcd1d7d],bh
  438b0c:	push   DWORD PTR [edx-0xe33c301]
  438b12:	mov    WORD PTR [ebx-0x51ff8000],es
  438b18:	jmp    FWORD PTR [ecx-0x2e3300c6]
  438b1e:	dec    ebx
  438b20:	jmp    DWORD PTR [esi+0x60]
  438b23:	add    DWORD PTR [eax],0xfffffffe
  438b26:	add    bh,ch
  438b28:	add    ah,cl
  438b2a:	inc    edi
  438b2b:	int3   
  438b2c:	add    BYTE PTR [esi],ch
  438b2e:	jmp    FWORD PTR [ecx-0x7d]
  438b31:	and    al,0xf2
  438b33:	add    bh,bh
  438b35:	mov    dl,0x89
  438b37:	jp     0x438abc
  438b39:	fs push ecx
  438b3b:	cmp    edi,0x2b
  438b3e:	push   edx
  438b40:	(bad)  
  438b41:	call   0x8b430f45
  438b46:	add    BYTE PTR [ebp-0x1],cl
  438b49:	enter  0xff41,0x0
  438b4d:	adc    al,0x89
  438b4f:	fld    DWORD PTR [eax]
  438b51:	dec    ebx
  438b52:	mov    bl,0xff
  438b54:	add    BYTE PTR [edx-0x5b33f501],dh
  438b5a:	jns    0x438b5c
  438b5c:	add    BYTE PTR [esi+0x0],ah
  438b5f:	jae    0x438b61
  438b61:	bound  ecx,QWORD PTR [edi-0xc70077]
  438b67:	push   0x0
  438b69:	mov    edx,0x9183ff19
  438b6e:	jmp    FWORD PTR [ecx]
  438b70:	push   DWORD PTR [ebx+0x3]
  438b73:	(bad)  
  438b74:	call   eax
  438b76:	inc    DWORD PTR [ebx-0x33eb1d01]
  438b7c:	sub    DWORD PTR [eax],0x0
  438b7f:	or     esp,ecx
  438b81:	push   ebx
  438b82:	stos   BYTE PTR es:[edi],al
  438b83:	int3   
  438b84:	mov    DWORD PTR [ebx-0x6f00c001],ebp
  438b8a:	stos   DWORD PTR es:[edi],eax
  438b8b:	int3   
  438b8c:	push   DWORD PTR [edx+0x7c8924ff]
  438b92:	pop    esp
  438b93:	add    BYTE PTR [eax],al
  438b95:	push   ebp
  438b96:	call   DWORD PTR [edx]
  438b98:	jmp    FWORD PTR [esi]
  438b9a:	inc    esi
  438b9b:	add    bh,bh
  438b9d:	stos   DWORD PTR es:[edi],eax
  438b9e:	int3   
  438b9f:	sbb    al,0xff
  438ba1:	pushf  
  438ba2:	sbb    al,0xff
  438ba4:	add    BYTE PTR [ebp-0x3dffbb01],ch
  438baa:	mov    ch,0x0
  438bac:	cmp    eax,0x0
  438baf:	(bad)  
  438bb1:	div    DWORD PTR [ebx]
  438bb3:	(bad)  
  438bb4:	jmp    DWORD PTR [eax-0x7d]
  438bb7:	es add ebp,0xffffff90
  438bbb:	inc    DWORD PTR [eax]
  438bbd:	stos   BYTE PTR es:[edi],al
  438bbe:	add    BYTE PTR [edi+edi*8-0x62ab],dl
  438bc5:	ins    DWORD PTR es:[edi],dx
  438bc6:	dec    DWORD PTR [eax]
  438bc8:	int3   
  438bc9:	aas    
  438bca:	add    DWORD PTR [eax],0x23ffa100
  438bd0:	mov    ecx,eax
  438bd2:	push   edi
  438bd3:	add    bh,bh
  438bd5:	mov    edi,edi
  438bd7:	pop    esp
  438bd8:	add    BYTE PTR [ebx-0x5a],ah
  438bdb:	add    BYTE PTR [eax],al
  438bdd:	retf   
  438bde:	jmp    DWORD PTR [eax-0x34]
  438be1:	dec    edx
  438be2:	into   
  438be3:	dec    esp
  438be5:	xchg   ecx,eax
  438be6:	call   ecx
  438be8:	jmp    FWORD PTR [ebx]
  438bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438beb:	add    BYTE PTR [eax],al
  438bed:	pop    ds
  438bee:	add    al,ch
  438bf0:	inc    DWORD PTR [eax+0x6083007c]
  438bf6:	add    BYTE PTR [esp+ecx*8+0xff52df],dl
  438bfd:	(bad)  
  438bfe:	push   DWORD PTR [esi]
  438c00:	jmp    DWORD PTR [esi+0x16]
  438c03:	inc    DWORD PTR [eax]
  438c05:	sti    
  438c06:	int3   
  438c07:	mov    edi,0x1311ff
  438c0c:	(bad)  
  438c0d:	mov    esp,0xca0025ff
  438c12:	inc    esi
  438c13:	(bad)  
  438c14:	dec    DWORD PTR [ecx]
  438c16:	mov    DWORD PTR [edi-0xc5767d],esp
  438c1c:	add    BYTE PTR [eax+eax*1+0x7ae5ff6f],al
  438c23:	add    bh,bh
  438c25:	sti    
  438c26:	add    dl,ch
  438c28:	add    BYTE PTR [ebx+0x68fffff9],bl
  438c2e:	inc    DWORD PTR [ebp-0x77]
  438c31:	aad    0xb
  438c33:	add    bh,bh
  438c35:	mov    cl,0x0
  438c37:	inc    eax
  438c38:	add    cl,ch
  438c3a:	mov    ecx,0xffe7ff00
  438c3f:	xchg   esp,eax
  438c40:	dec    ebp
  438c42:	adc    bh,bh
  438c44:	jmp    DWORD PTR [eax+0x32008b00]
  438c4a:	inc    ebp
  438c4b:	(bad)  
  438c4c:	push   DWORD PTR [eax+eax*1-0x10f9005f]
  438c53:	add    DWORD PTR [ebx-0x7c7f0031],0xffffff85
  438c5a:	jmp    0xfd:0x44cc83
  438c61:	mov    eax,0xe0ff0091
  438c66:	jmp    DWORD PTR [edx+0x0]
  438c69:	mov    ecx,0xfa00cc22
  438c6e:	call   esp
  438c70:	add    BYTE PTR [edx+0x1f],dh
  438c73:	int3   
  438c74:	and    DWORD PTR [edi-0x67005e7d],0xffffff8b
  438c7b:	inc    DWORD PTR [ebx-0x7c48005a]
  438c81:	push   ecx
  438c82:	sti    
  438c83:	inc    DWORD PTR [ebx-0x76fb003a]
  438c89:	sar    DWORD PTR [ebx+0x610000],0x86
  438c90:	dec    DWORD PTR [esi-0x46ff7c98]
  438c96:	(bad)  
  438c97:	inc    BYTE PTR [ebx-0x333a24]
  438c9d:	inc    ebx
  438c9e:	mov    eax,esp
  438ca0:	inc    DWORD PTR [ebp-0x31]
  438ca3:	inc    DWORD PTR [eax]
  438ca5:	loop   0x438ca6
  438ca7:	dec    BYTE PTR [ecx-0x860f]
  438cad:	outs   dx,DWORD PTR ds:[esi]
  438cae:	inc    DWORD PTR [eax]
  438cb0:	inc    DWORD PTR [ebx+ebp*1-0x1]
  438cb4:	(bad)  
  438cb5:	std    
  438cb6:	add    BYTE PTR [eax-0x406701],al
  438cbc:	add    BYTE PTR [esi+0x0],al
  438cbf:	fiadd  WORD PTR [ebx-0x7600adcf]
  438cc5:	sar    bh,0x43
  438cc8:	push   DWORD PTR [edi+ecx*2-0x7d]
  438ccc:	push   DWORD PTR [esi-0x67767c34]
  438cd2:	mov    dl,0x0
  438cd4:	(bad)  
  438cd5:	aas    
  438cd6:	add    BYTE PTR [ecx-0x7d],bh
  438cd9:	in     eax,0x79
  438cdb:	(bad)  
  438cdc:	dec    DWORD PTR [eax+0x6789d989]
  438ce2:	ins    BYTE PTR es:[edi],dx
  438ce3:	or     esp,0xffffffbd
  438ce6:	mov    DWORD PTR [ecx+0x2d95ff],eax
  438cec:	add    BYTE PTR [edi-0x7d],bl
  438cef:	sbb    eax,0xffd56cff
  438cf4:	mov    DWORD PTR [edx-0x1],edx
  438cf7:	dec    edx
  438cf8:	(bad)  
  438cf9:	out    dx,al
  438cfa:	adc    DWORD PTR [eax],eax
  438cfc:	add    bl,cl
  438cfe:	sbb    DWORD PTR [edi-0x1],0xffffff8c
  438d02:	xchg   ebx,eax
  438d03:	add    bh,bh
  438d05:	inc    edi
  438d06:	push   esi
  438d08:	call   DWORD PTR [ecx+0x78]
  438d0b:	inc    DWORD PTR [eax]
  438d0d:	sub    al,0x0
  438d0f:	cmp    WORD PTR [ebp+0x14838381],0xffff
  438d17:	call   0xffe3991b
  438d1c:	(bad)  
  438d1d:	mov    edi,0xeaffdc00
  438d22:	sub    eax,0x831900ff
  438d27:	jecxz  0x438d28
  438d29:	sbb    BYTE PTR [ebx+0x0],0x0
  438d2d:	cmp    cl,BYTE PTR [ecx-0x798400ec]
  438d33:	add    BYTE PTR [ebx+0xceff54],al
  438d39:	(bad)  
  438d3a:	aad    0x83
  438d3c:	add    BYTE PTR [eax-0x1],al
  438d3f:	sar    bh,cl
  438d41:	daa    
  438d42:	mov    eax,ds:0xffb7ccff
  438d47:	adc    eax,0x365fff
  438d4c:	(bad)  
  438d4d:	js     0x438d4f
  438d4f:	xchg   edi,eax
  438d50:	int3   
  438d51:	mov    bl,0xb3
  438d53:	(bad)  
  438d54:	jmp    FWORD PTR [edx]
  438d56:	sbb    DWORD PTR [ecx-0x7d],0xffffffd8
  438d5a:	ins    BYTE PTR es:[edi],dx
  438d5b:	add    bh,bh
  438d5d:	push   ss
  438d5e:	(bad)  
  438d5f:	std    
  438d60:	add    BYTE PTR ds:0xf883000c,ch
  438d66:	add    BYTE PTR [esi-0x7d],ch
  438d69:	or     eax,0x5500ff05
  438d6e:	add    BYTE PTR [ecx+0x6f5e00],dl
  438d74:	add    BYTE PTR [esi-0x5f7cf001],bl
  438d7a:	mov    eax,ds:0xff1effff
  438d7f:	(bad)  
  438d81:	mov    bl,BYTE PTR [edi]
  438d83:	inc    DWORD PTR [eax]
  438d85:	or     eax,0x2183f583
  438d8a:	(bad)  
  438d8c:	push   DWORD PTR [ecx]
  438d8e:	int3   
  438d8f:	inc    DWORD PTR [eax]
  438d91:	xchg   ebx,eax
  438d92:	and    eax,DWORD PTR [eax]
  438d94:	jmp    FWORD PTR [ebx-0x1]
  438d97:	mov    DWORD PTR [eax],eax
  438d99:	mov    WORD PTR [esi+0x0],gs
  438d9c:	add    bh,al
  438d9e:	call   ebp
  438da0:	(bad)  
  438da1:	jmp    0x438d38
  438da3:	int3   
  438da4:	cmp    DWORD PTR [ebp-0x1],0x15
  438da8:	(bad)  
  438da9:	jmp    0x86c75a22
  438dae:	add    bh,bl
  438db0:	inc    DWORD PTR [ecx-0x7400ffa8]
  438db6:	push   DWORD PTR [edi-0x76df9c00]
  438dbc:	dec    eax
  438dbe:	jmp    DWORD PTR [ebx-0x3c6601]
  438dc4:	int3   
  438dc5:	mov    dl,0xcc
  438dc7:	loop   0x438dc9
  438dc9:	jnp    0x438dee
  438dcb:	inc    DWORD PTR [ebx-0x6fff7a]
  438dd1:	lods   al,BYTE PTR ds:[esi]
  438dd2:	fild   DWORD PTR [eax]
  438dd4:	call   DWORD PTR [edx]
  438dd6:	inc    DWORD PTR [eax]
  438dd8:	push   DWORD PTR [edx-0x6f76ffaa]
  438dde:	(bad)  
  438ddf:	mov    edi,0x8354ba83
  438de4:	push   DWORD PTR [edx-0x1]
  438de7:	retf   
  438de8:	mov    DWORD PTR [ecx+0x2d00ff30],esi
  438dee:	jmp    ecx
  438df0:	int3   
  438df1:	and    al,0xa7
  438df3:	mov    edi,edi
  438df5:	sub    DWORD PTR [ebx-0x1008001a],eax
  438dfb:	inc    DWORD PTR [eax]
  438dfd:	mov    bl,0x89
  438dff:	sbb    edi,edi
  438e01:	xlat   BYTE PTR ds:[ebx]
  438e02:	push   ss
  438e03:	add    bh,bh
  438e05:	mov    esp,0xc2ff9283
  438e0a:	mov    edi,?
  438e0c:	add    al,dl
  438e0e:	push   DWORD PTR [ebx]
  438e10:	add    BYTE PTR [edi-0xcff00a0],bh
  438e16:	add    BYTE PTR [eax+0x9e75ff],dh
  438e1c:	add    ch,bh
  438e1e:	inc    DWORD PTR [edx]
  438e20:	int3   
  438e21:	sub    dl,ch
  438e23:	inc    DWORD PTR [eax]
  438e25:	std    
  438e26:	mov    DWORD PTR [ebx+0x0],esp
  438e29:	(bad)  
  438e2a:	jnp    0x438e2c
  438e2c:	int3   
  438e2d:	lahf   
  438e2e:	call   FWORD PTR [ebp-0x61a100]
  438e34:	(bad)  
  438e35:	(bad)  
  438e37:	jno    0x438e39
  438e39:	outs   dx,DWORD PTR ds:[esi]
  438e3a:	hlt    
  438e3b:	(bad)  
  438e3c:	dec    ebx
  438e3e:	jmp    DWORD PTR [eax-0x7cdcd701]
  438e44:	push   DWORD PTR [edi]
  438e46:	jmp    FWORD PTR ds:0xd13d00
  438e4c:	int3   
  438e4d:	ins    DWORD PTR es:[edi],dx
  438e4e:	add    cl,ch
  438e50:	jmp    FWORD PTR [ebx-0x6f760057]
  438e56:	mov    esi,eax
  438e58:	mov    DWORD PTR [edx],eax
  438e5a:	push   esp
  438e5b:	inc    DWORD PTR [ebx-0x76f87cbc]
  438e61:	jmp    0x4d428f14
  438e66:	int3   
  438e67:	lods   eax,DWORD PTR ds:[esi]
  438e68:	jmp    FWORD PTR [ebx]
  438e6a:	xor    bh,bh
  438e6c:	call   FWORD PTR [ecx]
  438e6e:	add    BYTE PTR [ecx+0x3637ff],dh
  438e74:	add    bl,ch
  438e76:	call   esp
  438e78:	jmp    ebx
  438e7a:	ins    BYTE PTR es:[edi],dx
  438e7b:	dec    esp
  438e7d:	xlat   BYTE PTR ds:[ebx]
  438e7e:	jmp    FWORD PTR [eax-0x498901]
  438e84:	or     DWORD PTR ds:0x4600f5ff,0x68
  438e8b:	dec    esp
  438e8d:	call   0xff5e:0x70060ff
  438e94:	int3   
  438e95:	push   ds
  438e96:	cmp    DWORD PTR [ebp-0x7d],0x53
  438e9a:	inc    ebx
  438e9b:	inc    DWORD PTR [eax]
  438e9d:	pop    ecx
  438e9e:	jmp    FWORD PTR [ecx]
  438ea0:	adc    DWORD PTR [ecx+0x1c83ccca],0xffffffff
  438ea7:	idiv   edi
  438ea9:	(bad)  
  438eaa:	in     eax,dx
  438eab:	inc    DWORD PTR [ebx-0x766133bb]
  438eb1:	push   ss
  438eb2:	add    BYTE PTR [eax],al
  438eb4:	(bad)  
  438eb5:	mov    eax,0xd389d500
  438eba:	mov    esp,0xfffdccff
  438ebf:	add    BYTE PTR [eax],al
  438ec1:	in     eax,0xd6
  438ec3:	int3   
  438ec4:	add    BYTE PTR [esi],ah
  438ec6:	add    BYTE PTR [edx+0x0],ah
  438ec9:	stc    
  438eca:	or     edi,edi
  438ecc:	add    BYTE PTR [edi],ch
  438ece:	mov    DWORD PTR [eax-0x7c188e7d],eax
  438ed4:	mov    DWORD PTR [eax+0x77ff83ff],ebx
  438eda:	in     eax,dx
  438edb:	add    bh,bh
  438edd:	out    0x0,eax
  438edf:	mov    edx,0xff29fcff
  438ee4:	int3   
  438ee5:	xchg   edx,eax
  438ee6:	and    DWORD PTR [edi+edi*8+0x6b],0xffffffab
  438eeb:	inc    DWORD PTR [eax]
  438eed:	xchg   edi,eax
  438eee:	add    ah,dl
  438ef0:	dec    DWORD PTR [eax+0x10]
  438ef3:	(bad)  
  438ef4:	inc    DWORD PTR [ebx+0x24ffed83]
  438efa:	fwait
  438efb:	mov    DWORD PTR [eax],eax
  438efd:	mov    bh,0x83
  438eff:	mov    edx,0x244a00
  438f04:	jmp    FWORD PTR [eax]
  438f06:	or     edi,0xffffffff
  438f09:	cdq    
  438f0a:	fs add ah,cl
  438f0d:	test   eax,0x2aff4a89
  438f12:	call   0xcc958f17
  438f17:	adc    eax,0xdc2cff
  438f1c:	int3   
  438f1d:	push   ebx
  438f1e:	xor    DWORD PTR [edi+edi*8-0x7c00545e],0xffffffa1
  438f26:	jmp    DWORD PTR [edi+edi*8-0xa910]
  438f2d:	jae    0x438eb2
  438f2f:	mov    ds:0x83fe5200,al
  438f34:	add    BYTE PTR [edx-0x1],ah
  438f37:	jmp    0x438f39
  438f39:	adc    DWORD PTR [edx-0x77],ecx
  438f3c:	add    ah,bh
  438f3e:	add    BYTE PTR [esi],cl
  438f40:	adc    eax,0x4b
  438f43:	int3   
  438f44:	add    BYTE PTR [ebp+0x2eff5c00],ah
  438f4a:	jbe    0x438f4b
  438f4c:	add    BYTE PTR [eax-0x1],ah
  438f4f:	rol    DWORD PTR [eax],0xe4
  438f52:	and    al,BYTE PTR [eax]
  438f54:	call   FWORD PTR [edx]
  438f56:	push   DWORD PTR [esi]
  438f58:	sub    DWORD PTR [edx+0x24],0xffffff83
  438f5c:	add    BYTE PTR [edi],cl
  438f5e:	call   DWORD PTR [ebp-0xdc4f7d]
  438f64:	jmp    edi
  438f66:	add    BYTE PTR [esp+ecx*8-0x7672b6],dl
  438f6d:	cmp    edi,edi
  438f6f:	fadd   QWORD PTR [ebx-0xd130]
  438f75:	sar    bh,cl
  438f77:	add    BYTE PTR cs:[eax+0x45],bh
  438f7b:	(bad)  
  438f7c:	(bad)  
  438f7d:	sti    
  438f7e:	add    al,ah
  438f80:	int3   
  438f81:	pop    ebp
  438f82:	outs   dx,DWORD PTR ds:[esi]
  438f83:	add    BYTE PTR [eax],al
  438f85:	test   bh,bh
  438f87:	pusha  
  438f88:	call   DWORD PTR [ebx+0x5e0083a8]
  438f8e:	jmp    DWORD PTR [ebx+0x0]
  438f91:	mov    ds:0x87cc000f,eax
  438f96:	jmp    FWORD PTR [ebx-0xd0ae00]
  438f9c:	push   esi
  438f9e:	add    BYTE PTR [ebx-0x7d],dl
  438fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438fa2:	idiv   edi
  438fa4:	mov    edi,edi
  438fa6:	jmp    FWORD PTR [eax+eax*1+0x65]
  438faa:	call   0xd7:0x894fff00
  438fb1:	sbb    al,0x3a
  438fb3:	inc    DWORD PTR [eax]
  438fb5:	jne    0x438fb7
  438fb7:	push   edi
  438fb8:	add    BYTE PTR [ebp+eax*2-0x1],dh
  438fbc:	mov    DWORD PTR [esi-0x1],ecx
  438fbf:	mov    ds:0x8360e4cc,al
  438fc4:	call   DWORD PTR [ebp-0x20000800]
  438fca:	repz dec esp
  438fcd:	sahf   
  438fce:	add    BYTE PTR [eax],ah
  438fd0:	(bad)  
  438fd1:	fcomp  QWORD PTR [edi+0x0]
  438fd4:	inc    DWORD PTR [eax+0x800df83]
  438fda:	lds    ecx,FWORD PTR [ecx-0x5d009d01]
  438fe0:	dec    DWORD PTR [ebp+0x3ff0011]
  438fe6:	and    DWORD PTR [esi],0xffffffff
  438fe9:	xchg   BYTE PTR [edx+0xb983ff],dh
  438fef:	sar    edi,cl
  438ff1:	pop    ebp
  438ff2:	cmp    edi,0x57003b00
  438ff8:	inc    DWORD PTR [eax-0x2cff0045]
  438ffe:	mov    DWORD PTR [edx],edx
  439000:	add    BYTE PTR ds:0x11ffffec,ch
  439006:	int3   
  439007:	push   eax
  439008:	add    al,cl
  43900a:	push   ecx
  43900b:	mov    edi,edi
  43900d:	icebp  
  43900e:	(bad)  
  43900f:	cmp    eax,0xff9051ff
  439014:	call   DWORD PTR [eax]
  439016:	jmp    FWORD PTR [ecx-0x33b2f600]
  43901c:	jmp    DWORD PTR [ecx+ecx*4+0x67]
  439020:	(bad)  
  439021:	clc    
  439022:	and    cl,BYTE PTR [ecx+0x3009489]
  439028:	mov    edx,ecx
  43902a:	outs   dx,BYTE PTR ds:[esi]
  43902b:	add    bh,bh
  43902d:	cmp    eax,DWORD PTR [eax]
  43902f:	or     al,0xff
  439031:	mov    BYTE PTR [esi-0x1],cl
  439034:	jmp    FWORD PTR [eax+eax*1-0x4473ff22]
  43903b:	inc    DWORD PTR [eax]
  43903d:	add    BYTE PTR [ebx-0x26a17c43],0xff
  439044:	int3   
  439045:	inc    esi
  439046:	sbb    DWORD PTR [eax-0x7c83b101],0x0
  43904d:	(bad)  
  43904e:	(bad)  
  43904f:	cld    
  439050:	inc    DWORD PTR [ebx-0x3d]
  439053:	add    bh,bh
  439055:	push   esp
  439056:	and    DWORD PTR [ebx],0xffffffcc
  439059:	pop    ss
  43905a:	mov    esp,ecx
  43905c:	add    BYTE PTR [edx],ch
  43905e:	int3   
  43905f:	inc    esp
  439060:	int3   
  439061:	cmp    BYTE PTR [ecx-0x77],dh
  439064:	(bad)  
  439065:	jl     0x438fea
  439067:	and    esp,ecx
  439069:	or     eax,0x9e00fff0
  43906e:	inc    DWORD PTR [edx+0x0]
  439071:	adc    esi,DWORD PTR [edi+edi*8+0x0]
  439075:	sbb    al,BYTE PTR [eax]
  439077:	dec    edi
  439078:	call   DWORD PTR [ebx-0x6dff001a]
  43907e:	add    BYTE PTR [ebx-0x1],ch
  439081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439082:	push   0x5c89ff
  439087:	stc    
  439088:	add    BYTE PTR [edi-0x6f],bh
  43908b:	add    bh,bh
  43908d:	xchg   ebx,eax
  43908e:	call   DWORD PTR [ebp-0x2bbd01]
  439094:	add    BYTE PTR [ecx+0x36839589],bl
  43909a:	iret   
  43909b:	mov    DWORD PTR [ecx-0x7634762d],ecx
  4390a1:	bsr    ecx,esp
  4390a4:	jmp    DWORD PTR [ebx+eax*4]
  4390a7:	out    dx,al
  4390a8:	sub    eax,0xffffff9c
  4390ab:	int3   
  4390ac:	add    BYTE PTR ds:0xa700dbff,al
  4390b2:	add    al,0x0
  4390b4:	jmp    DWORD PTR [esp+ecx*8+0x97800cb]
  4390bb:	or     DWORD PTR [ecx-0xa60089],0x5c
  4390c2:	sbb    edi,edi
  4390c4:	(bad)  
  4390c5:	mov    edi,0xadff9400
  4390ca:	dec    BYTE PTR [ecx-0x3200fd00]
  4390d0:	call   FWORD PTR [edx-0x68]
  4390d3:	or     esp,0x42
  4390d6:	adc    DWORD PTR [edi+edi*8+0x5f],0x31
  4390db:	(bad)  
  4390dc:	(bad)  
  4390dd:	(bad)  
  4390df:	stos   DWORD PTR es:[edi],eax
  4390e0:	add    bh,dl
  4390e2:	pop    es
  4390e3:	inc    DWORD PTR [ebx-0x3370ff3a]
  4390e9:	pop    eax
  4390ea:	sbb    edi,edi
  4390ec:	int3   
  4390ed:	mov    dl,0xcc
  4390ef:	inc    edx
  4390f0:	call   DWORD PTR [ebx]
  4390f2:	loopne 0x439077
  4390f4:	int3   
  4390f5:	(bad)  
  4390f7:	int3   
  4390f8:	push   DWORD PTR [edi+0x13]
  4390fb:	(bad)  
  4390fc:	call   eax
  4390fe:	call   DWORD PTR [ebx-0x7d]
  439101:	inc    eax
  439102:	xor    eax,DWORD PTR [ebx+0x5dff63ff]
  439108:	int3   
  439109:	mov    ds:0x4fff002a,eax
  43910e:	mov    DWORD PTR [eax+0x0],esp
  439111:	push   0x5500ff59
  439116:	sub    DWORD PTR [ebx],0x0
  439119:	sub    ebp,DWORD PTR [esi-0x34]
  43911c:	mov    eax,edi
  43911e:	jmp    FWORD PTR [edx-0xf38900]
  439124:	int3   
  439125:	(bad)  
  439127:	fwait
  439128:	int3   
  439129:	sahf   
  43912a:	cmp    bh,bh
  43912c:	add    cl,ah
  43912e:	jmp    FWORD PTR [ecx-0x6d1001]
  439134:	jmp    FWORD PTR [edx-0xff4134]
  43913a:	outs   dx,DWORD PTR ds:[esi]
  43913b:	add    BYTE PTR [ebx+0xd28347],al
  439141:	fs push ds
  439143:	dec    DWORD PTR [ecx+0x948359]
  439149:	xchg   edx,eax
  43914a:	arpl   di,di
  43914c:	inc    DWORD PTR [edi-0x1]
  43914f:	pop    esi
  439150:	sub    esp,0xffffffa9
  439153:	dec    esp
  439155:	or     bh,bh
  439157:	dec    esp
  439158:	adc    DWORD PTR [edx+0x2683ff9d],0x0
  43915f:	xchg   ebp,eax
  439160:	dec    DWORD PTR [esi+ecx*1-0x33b80001]
  439167:	repz call edx
  43916a:	mov    esi,0xfffcccff
  43916f:	add    eax,0x250d83
  439174:	(bad)  
  439175:	in     eax,dx
  439176:	(bad)  
  439177:	sti    
  439178:	dec    ebp
  43917a:	repz add bh,bh
  43917d:	(bad)  
  43917f:	cmp    cl,BYTE PTR [ecx+0xff2bc1]
  439185:	pusha  
  439186:	call   eax
  439188:	mov    DWORD PTR [ebx-0x31007c35],ecx
  43918e:	jmp    FWORD PTR [edi+edi*8]
  439191:	sbb    al,BYTE PTR [ecx+0x0]
  439194:	int3   
  439195:	mov    dl,0xff
  439197:	lahf   
  439198:	add    dl,al
  43919a:	add    al,0x0
  43919c:	and    DWORD PTR [esi],0xffffffff
  43919f:	idiv   edi
  4391a1:	and    edi,DWORD PTR [eax]
  4391a3:	inc    DWORD PTR [eax]
  4391a5:	sbb    eax,0x67ff0883
  4391aa:	or     esp,ecx
  4391ac:	add    BYTE PTR [ecx-0x34],ch
  4391af:	ins    DWORD PTR es:[edi],dx
  4391b0:	add    DWORD PTR [ebx+0x19],0x0
  4391b4:	inc    DWORD PTR [ebp+0x63ff04ff]
  4391ba:	bound  eax,QWORD PTR [ebx-0x2700ef01]
  4391c0:	or     DWORD PTR [eax+0x23ffccc5],0xffffffff
  4391c7:	add    BYTE PTR [eax],0x69
  4391ca:	stc    
  4391cb:	(bad)  
  4391cc:	dec    DWORD PTR [ebx+0x0]
  4391cf:	jnp    0x4391d0
  4391d1:	push   esp
  4391d2:	fmul   st(4),st
  4391d4:	push   ecx
  4391d6:	mov    DWORD PTR [ebx-0x7d],edi
  4391d9:	div    bl
  4391db:	(bad)  
  4391dc:	dec    DWORD PTR [eax+0x40ff39ff]
  4391e2:	rol    BYTE PTR [eax],cl
  4391e4:	(bad)  
  4391e5:	clc    
  4391e6:	add    BYTE PTR [ebp+0x9803ff],ch
  4391ec:	xor    DWORD PTR [ebp-0x1],0x2f
  4391f0:	cmp    esp,0x13
  4391f3:	(bad)  
  4391f4:	jmp    DWORD PTR [eax+eax*1]
  4391f7:	sar    edi,1
  4391f9:	je     0x4391a3
  4391fb:	add    ah,cl
  4391fd:	out    dx,al
  4391fe:	push   DWORD PTR [ecx-0x33adc800]
  439204:	add    al,dh
  439206:	xor    DWORD PTR [esi-0x263301],0xffffffff
  43920d:	push   esi
  43920e:	add    cl,ch
  439210:	cmp    DWORD PTR [edx-0x73],0xffffffff
  439214:	adc    esp,0xffffffff
  439217:	inc    esp
  439218:	inc    DWORD PTR [ebp+0x200001e]
  43921e:	call   FWORD PTR [edx]
  439220:	sbb    ecx,0xf
  439223:	int3   
  439224:	(bad)  
  439225:	dec    BYTE PTR [ecx+0x1ebd00b3]
  43922b:	or     DWORD PTR [ecx-0x766e004a],0x4d
  439232:	and    eax,0xffdd0000
  439237:	(bad)  
  439238:	call   DWORD PTR [esi+0x7b00ff94]
  43923e:	add    BYTE PTR [eax-0x1],bh
  439241:	jae    0x439218
  439243:	add    bh,bh
  439245:	xchg   ecx,eax
  439246:	call   DWORD PTR [eax]
  439248:	(bad)  
  439249:	cld    
  43924a:	cmp    eax,0x83b4ffcc
  43924f:	mov    ds:0xcc570683,al
  439254:	add    BYTE PTR [ebp+0x1aff5000],ch
  43925a:	leave  
  43925b:	mov    edi,edi
  43925d:	ins    BYTE PTR es:[edi],dx
  43925e:	call   DWORD PTR [ebp+0x0]
  439261:	or     DWORD PTR [edi+edi*8],esi
  439264:	dec    DWORD PTR [edi+0x4aff7b00]
  43926a:	sti    
  43926b:	add    bh,bh
  43926d:	sbb    eax,DWORD PTR [eax]
  43926f:	in     eax,0xff
  439271:	sbb    esp,DWORD PTR [edi-0x4ff34]
  439277:	mov    edx,0xff92caff
  43927c:	and    DWORD PTR [ebx+0x0],0xfffffff8
  439280:	add    BYTE PTR [edx-0x73],dl
  439283:	inc    DWORD PTR [eax]
  439285:	pusha  
  439286:	or     DWORD PTR [eax+0x0],0x61
  43928a:	adc    edi,edi
  43928c:	int3   
  43928d:	mov    al,ds:0x13008a00
  439292:	xchg   ebx,eax
  439293:	inc    DWORD PTR [eax]
  439295:	and    WORD PTR [edx+0x0],0xff8e
  43929a:	test   DWORD PTR [eax],eax
  43929c:	call   FWORD PTR [ebp-0x1]
  43929f:	pop    es
  4392a0:	jmp    DWORD PTR [ebx+ebx*2]
  4392a3:	(bad)  
  4392a4:	inc    DWORD PTR [ebx]
  4392a6:	dec    edi
  4392a8:	jmp    DWORD PTR [ebp-0x6c000068]
  4392ae:	jmp    FWORD PTR [edi]
  4392b0:	or     eax,0xffffff89
  4392b3:	add    bh,bh
  4392b5:	push   ecx
  4392b6:	inc    edx
  4392b8:	cmp    DWORD PTR [ebx+0x52ffff03],0xffffffff
  4392bf:	test   al,0x83
  4392c1:	sbb    eax,0xcb00ff47
  4392c6:	add    al,bl
  4392c8:	sbb    DWORD PTR [edi+ebp*1],0xffffffff
  4392cc:	jmp    FWORD PTR [edx-0x7900e034]
  4392d2:	sahf   
  4392d3:	inc    DWORD PTR [eax]
  4392d5:	xchg   esp,eax
  4392d6:	add    BYTE PTR [edx+0x0],cl
  4392d9:	pop    ebp
  4392da:	lahf   
  4392db:	(bad)  
  4392dc:	call   DWORD PTR [esi-0x1]
  4392df:	add    al,0x83
  4392e1:	or     eax,0xc48383cb
  4392e6:	and    DWORD PTR [eax+0x0],0x57
  4392ea:	or     DWORD PTR [ebx+0x383b1ff],eax
  4392f0:	add    BYTE PTR [eax+0x53ffff62],al
  4392f6:	int3   
  4392f7:	inc    DWORD PTR ds:[eax]
  4392fa:	or     ecx,DWORD PTR [ecx-0x39ff6b7d]
  439300:	add    eax,0xffffff89
  439303:	cmp    edi,0xffffffd5
  439306:	sbb    DWORD PTR [ebp-0x7d],0x20
  43930a:	xor    bh,bh
  43930c:	add    BYTE PTR [ecx],dl
  43930e:	(bad)  
  43930f:	add    BYTE PTR ds:[ebx],bh
  439312:	dec    edi
  439313:	(bad)  
  439314:	jmp    FWORD PTR [esi-0x3700ff00]
  43931a:	mov    ah,0xff
  43931c:	cmp    ecx,0xffffffff
  43931f:	icebp  
  439320:	add    BYTE PTR [esp+eax*8+0x0],bl
  439324:	dec    DWORD PTR [edx+0x5ff9700]
  43932a:	dec    edi
  43932b:	dec    esp
  43932d:	xor    eax,0x10ccdeff
  439332:	and    al,0xcc
  439334:	cmp    DWORD PTR [edx+0x0],0xffffffee
  439338:	(bad)  
  439339:	jl     0x439375
  43933b:	(bad)  
  43933c:	push   DWORD PTR [eax+eax*1]
  43933f:	mov    esi,0xff555400
  439344:	jmp    DWORD PTR [ebx-0x1]
  439347:	mov    edi,0xff4bfdff
  43934c:	add    BYTE PTR [eax+eax*1+0x63b4ff48],dh
  439353:	(bad)  
  439354:	dec    DWORD PTR [edi+edi*8+0x23]
  439358:	add    BYTE PTR [eax-0x55ffff97],ch
  43935e:	int3   
  43935f:	test   BYTE PTR [eax],0xc3
  439362:	jae    0x439364
  439364:	jmp    esi
  439366:	call   DWORD PTR [ecx]
  439368:	(bad)  
  439369:	fucomi st,st(5)
  43936b:	(bad)  
  43936c:	(bad)  
  43936d:	mov    eax,0xd2ffabff
  439372:	popf   
  439373:	or     esp,0xffffff9e
  439376:	call   FWORD PTR [edi+edi*8-0x5c]
  43937a:	and    DWORD PTR [ebx-0x50ff6101],eax
  439380:	call   DWORD PTR [ecx]
  439382:	inc    eax
  439383:	add    ah,cl
  439385:	adc    al,0xff
  439387:	add    edi,edi
  439389:	leave  
  43938a:	dec    edi
  43938b:	inc    DWORD PTR [eax]
  43938d:	mov    BYTE PTR [eax],0x6c
  439390:	push   DWORD PTR [edi]
  439392:	xchg   ebp,eax
  439393:	mov    DWORD PTR [ecx-0x7c7700cc],ecx
  439399:	fist   DWORD PTR [eax+0x44ffff]
  43939f:	cmp    edi,edi
  4393a1:	xchg   esp,eax
  4393a2:	xlat   BYTE PTR ds:[ebx]
  4393a3:	int3   
  4393a4:	int3   
  4393a5:	lods   eax,DWORD PTR ds:[esi]
  4393a6:	dec    DWORD PTR [eax]
  4393a8:	mov    DWORD PTR [eax],esp
  4393aa:	imul   edi,edi,0xc700a0ff
  4393b0:	add    BYTE PTR [edi-0x60ff006f],dl
  4393b6:	add    BYTE PTR [ebp+0x903e00],ch
  4393bc:	(bad)  
  4393bd:	mov    ebx,0xf8ff34cc
  4393c2:	int    0x0
  4393c4:	push   DWORD PTR [esi+0x0]
  4393c7:	mov    ebx,0x898bb4ff
  4393cc:	and    DWORD PTR [eax-0x1],0xffffffde
  4393d0:	add    BYTE PTR [ebp+ebp*1-0x34],ch
  4393d4:	jmp    DWORD PTR [ebx+eax*4]
  4393d7:	into   
  4393d8:	cmp    ebx,0xfffffff7
  4393db:	(bad)  
  4393dc:	inc    DWORD PTR [edi]
  4393de:	int3   
  4393df:	mov    dh,0xff
  4393e1:	pop    esi
  4393e2:	mov    esp,0xffd600ff
  4393e7:	cmp    edi,edi
  4393e9:	mov    edx,0x6dff009c
  4393ee:	add    dh,al
  4393f0:	or     DWORD PTR [ebx+0x6ff009f],0xffffffff
  4393f7:	push   ebp
  4393f8:	add    BYTE PTR [eax+0x2],al
  4393fb:	mov    DWORD PTR [ecx-0x7c91],ecx
  439401:	stos   DWORD PTR es:[edi],eax
  439402:	popa   
  439403:	int3   
  439404:	dec    DWORD PTR [edx+0xc897700]
  43940a:	inc    edi
  43940b:	add    bh,bh
  43940d:	jle    0x43940f
  43940f:	jl     0x439411
  439411:	lods   eax,DWORD PTR ds:[esi]
  439412:	fdiv   st(7),st
  439414:	push   edx
  439416:	call   ebp
  439418:	add    BYTE PTR [ecx-0x6e],dl
  43941b:	dec    DWORD PTR [ecx-0xa2ff2f]
  439421:	or     ebp,DWORD PTR [eax]
  439423:	inc    DWORD PTR [ebx+0xbff56]
  439429:	mov    ebp,edx
  43942b:	mov    DWORD PTR [eax],eax
  43942d:	fdiv   st(7),st
  43942f:	pop    DWORD PTR [eax]
  439431:	dec    edi
  439432:	sub    edi,edi
  439434:	jmp    DWORD PTR [ebx-0x7b008301]
  43943a:	(bad)  
  43943b:	dec    esp
  43943d:	cmp    al,0x0
  43943f:	call   0x3300:0xff8c0e00
  439446:	sub    DWORD PTR [edx-0x2eae01],0xffffff83
  43944d:	jns    0x43944f
  43944f:	out    dx,al
  439450:	inc    DWORD PTR [ebx-0xcff7c11]
  439456:	(bad)  
  439457:	mov    edx,0xffb7ce00
  43945c:	(bad)  
  43945d:	js     0x43945e
  43945f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439460:	dec    DWORD PTR [esi+0x4e]
  439463:	add    BYTE PTR [eax],al
  439465:	adc    bh,bh
  439467:	mov    al,0x83
  439469:	pop    es
  43946a:	xchg   ecx,eax
  43946b:	or     DWORD PTR [ecx+0x9bff4f],0xfffffff8
  439472:	mov    ebp,0xff740000
  439477:	call   0x8cff:0x8374f8ff
  43947e:	int3   
  43947f:	jne    0x43944d
  439481:	lahf   
  439482:	push   edx
  439483:	dec    DWORD PTR [ecx-0x7c127c88]
  439489:	cmp    dl,BYTE PTR [ebx-0x7d]
  43948c:	adc    DWORD PTR [eax+0x2d006600],0xe
  439493:	add    bh,bh
  439495:	mov    dh,0x89
  439497:	ud0    edx,eax
  43949a:	mov    eax,ds:0xcc398983
  43949f:	or     DWORD PTR [ecx-0x76a53d],ecx
  4394a5:	xor    edi,edi
  4394a7:	retf   0xb083
  4394aa:	sub    cl,BYTE PTR [ecx+0x4ff1800]
  4394b0:	int3   
  4394b1:	mov    esi,DWORD PTR [edi]
  4394b3:	add    DWORD PTR [eax],0x6f
  4394b6:	jmp    FWORD PTR [ebp-0xfe01]
  4394bc:	dec    DWORD PTR [ebp-0x62ff6600]
  4394c2:	out    0x0,eax
  4394c4:	add    BYTE PTR [edx+0x558326ff],bl
  4394ca:	cmp    bh,0x0
  4394cd:	mov    esp,0x858978ff
  4394d2:	jecxz  0x4394d4
  4394d4:	call   FWORD PTR [edi]
  4394d6:	mov    DWORD PTR [edi+edi*8-0x9419],ecx
  4394dd:	jne    0x439468
  4394df:	mov    DWORD PTR [ebx-0x33339a6f],0xe5ff90
  4394e9:	inc    edx
  4394ea:	mov    eax,ds:0xffab0083
  4394ef:	jg     0x4394bd
  4394f1:	jmp    0xedff:0xf9ffff76
  4394f8:	add    bl,ah
  4394fa:	xchg   ebp,eax
  4394fb:	add    ah,cl
  4394fd:	push   ax
  439500:	mov    ecx,edi
  439502:	mov    edi,0x8354ffff
  439507:	sub    BYTE PTR [ecx+0xfff713],cl
  43950d:	dec    eax
  43950e:	(bad)  
  43950f:	jp     0x439511
  439511:	mov    es,WORD PTR [esi]
  439513:	add    ah,cl
  439515:	push   es
  439516:	dec    edx
  439518:	inc    DWORD PTR [edx-0x2b00767c]
  43951e:	push   ebp
  439520:	add    BYTE PTR [edi+eax*2],dl
  439523:	inc    DWORD PTR [ebx-0xf80094]
  439529:	popa   
  43952a:	push   0x89c4ffff
  43952f:	xor    edi,edi
  439531:	stc    
  439532:	pop    esi
  439533:	add    bh,bh
  439535:	add    BYTE PTR cs:[ebp-0x391301],dl
  43953c:	add    BYTE PTR [eax+0x1c0013ff],bh
  439542:	mov    ?,edi
  439544:	(bad)  
  439545:	jl     0x439547
  439547:	ror    DWORD PTR [ecx-0xb44e],1
  43954d:	and    al,BYTE PTR [eax]
  43954f:	jmp    0x439551
  439551:	jp     0x4394f5
  439553:	mov    edi,edi
  439555:	or     eax,0x5eff0fff
  43955a:	imul   eax,DWORD PTR [eax],0xffffff89
  43955d:	mov    bh,0xff
  43955f:	mov    eax,0x6e5200
  439564:	add    DWORD PTR [edi-0x77],0xffffffb9
  439568:	(bad)  
  439569:	jmp    0x11431958
  43956e:	int3   
  43956f:	inc    BYTE PTR [ebx-0x76006377]
  439575:	fdivr  st,st(7)
  439577:	cmp    bh,bh
  439579:	dec    edx
  43957a:	sbb    bh,bh
  43957c:	add    dh,dh
  43957e:	(bad)  
  43957f:	in     al,dx
  439580:	call   FWORD PTR [esi]
  439582:	hlt    
  439583:	(bad)  
  439584:	call   FWORD PTR [ebx+0x7983ef00]
  43958a:	dec    esp
  43958b:	(bad)  
  43958c:	dec    ebp
  43958e:	add    BYTE PTR [eax-0x1],ah
  439591:	mov    WORD PTR [esi+0x38ff89],ss
  439597:	leave  
  439598:	(bad)  
  439599:	(bad)  
  43959a:	pop    edi
  43959b:	add    BYTE PTR [eax],al
  43959d:	loope  0x439528
  43959f:	xchg   edi,eax
  4395a0:	inc    DWORD PTR ds:0x6e00ff43
  4395a6:	call   FWORD PTR [ecx-0xcaf77]
  4395ac:	push   DWORD PTR [ecx]
  4395ae:	jmp    DWORD PTR [edx+0x92a2ff]
  4395b4:	add    BYTE PTR [edi+0x36ffea00],bh
  4395ba:	pop    ds
  4395bb:	(bad)  
  4395bc:	inc    DWORD PTR [edi]
  4395be:	add    BYTE PTR [edx+0x0],dl
  4395c1:	jns    0x4395ee
  4395c3:	(bad)  
  4395c4:	inc    DWORD PTR [ebx-0x7d]
  4395c7:	and    bh,bh
  4395c9:	dec    ecx
  4395ca:	(bad)  
  4395cc:	sbb    DWORD PTR [ecx+0x16ff7cff],0x52
  4395d3:	int3   
  4395d4:	mov    DWORD PTR [edi],esp
  4395d6:	inc    ecx
  4395d8:	xor    edi,0x21
  4395db:	add    BYTE PTR [ecx-0x28ff6e],cl
  4395e1:	jae    0x43961b
  4395e3:	cmp    edi,0xffffff85
  4395e6:	add    BYTE PTR [ecx+0x0],ch
  4395e9:	inc    edx
  4395ea:	aam    0x0
  4395ec:	call   DWORD PTR [eax-0x7d]
  4395ef:	push   cx
  4395f2:	push   edi
  4395f3:	dec    esp
  4395f5:	mov    ch,0xff
  4395f7:	mov    cl,0x89
  4395f9:	repnz push ss
  4395fb:	add    DWORD PTR [ebx+0xbbff80],0x7f
  439602:	sbb    cl,ah
  439604:	dec    DWORD PTR ds:0x72838eff
  43960a:	mov    al,ds:0xffaecc83
  43960f:	daa    
  439610:	add    BYTE PTR [esi],ah
  439612:	retf   0xff00
  439615:	jecxz  0x439617
  439617:	mov    edi,0xb4ed00
  43961c:	int3   
  43961d:	mov    edi,0x68ffca00
  439622:	fild   DWORD PTR [eax]
  439624:	int3   
  439625:	in     eax,0x0
  439627:	enter  0x9d83,0xee
  43962b:	mov    edi,edi
  43962d:	std    
  43962e:	call   DWORD PTR [ebp+0x0]
  439631:	cdq    
  439632:	lock inc DWORD PTR [ebx-0x331fffd9]
  439639:	jbe    0x4395ee
  43963b:	int3   
  43963c:	inc    DWORD PTR [ebx]
  43963e:	inc    DWORD PTR [esi-0x33f4a601]
  439644:	call   DWORD PTR [ebp-0xcff8434]
  43964a:	pusha  
  43964b:	cmp    edi,0xffffffd7
  43964e:	or     edi,0xffffffff
  439651:	das    
  439652:	or     DWORD PTR [ecx+0x14838183],0xcc90bdff
  43965c:	sub    DWORD PTR [eax+eax*1],0xfffffff1
  439660:	inc    DWORD PTR [ecx+edx*2]
  439663:	add    BYTE PTR [ebx+0x3c83a8],al
  439669:	fdiv   st(7),st
  43966b:	add    BYTE PTR [ebx+0xa200a6],al
  439671:	fbstp  TBYTE PTR ds:0xccdbccff
  439677:	dec    edi
  439678:	add    BYTE PTR [edx+0x398900ce],dl
  43967e:	push   esp
  439680:	add    BYTE PTR [edx],ah
  439682:	xchg   BYTE PTR [eax],al
  439684:	dec    ebp
  439686:	mov    DWORD PTR [ebp-0xbba977],ebx
  43968c:	add    dh,ch
  43968e:	add    BYTE PTR [esi],bl
  439690:	add    BYTE PTR [ecx],bl
  439692:	popf   
  439693:	(bad)  
  439694:	push   DWORD PTR [eax+0x0]
  439697:	sar    bh,cl
  439699:	pop    ss
  43969a:	mov    cl,0xff
  43969c:	push   edi
  43969e:	sub    DWORD PTR [ecx-0x7cbefa7d],0xffffffff
  4396a5:	stos   DWORD PTR es:[edi],eax
  4396a6:	jmp    DWORD PTR [esp+ecx*8]
  4396a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4396aa:	dec    eax
  4396ab:	int3   
  4396ac:	jmp    ecx
  4396ae:	jmp    DWORD PTR [edx-0x76ec6b01]
  4396b4:	add    BYTE PTR [ebp+0x0],bh
  4396b7:	pop    edx
  4396b8:	jmp    DWORD PTR [ebx-0x50]
  4396bb:	(bad)  
  4396bc:	jmp    DWORD PTR ds:0xdeff6aff
  4396c2:	mov    BYTE PTR [eax],0x0
  4396c5:	(bad)  
  4396c6:	inc    edi
  4396c8:	add    BYTE PTR [edx+ebx*8+0x7bff83],dh
  4396cf:	mov    esp,0x8324ee00
  4396d4:	add    BYTE PTR [eax],bh
  4396d6:	inc    eax
  4396d8:	(bad)  
  4396d9:	cmp    BYTE PTR ds:0x83d1ff89,ah
  4396df:	stc    
  4396e0:	call   FWORD PTR [ecx+0x54]
  4396e3:	inc    DWORD PTR [eax]
  4396e5:	inc    eax
  4396e6:	add    ah,cl
  4396e8:	mov    DWORD PTR [ebp+0x67],ebp
  4396eb:	inc    DWORD PTR [ebx-0x33da33c5]
  4396f1:	lock mov cl,0x0
  4396f4:	add    BYTE PTR [ebx-0x67331a00],al
  4396fa:	pop    ss
  4396fb:	(bad)  
  4396fc:	call   DWORD PTR [edx-0x1]
  4396ff:	cmp    edi,edi
  439701:	scas   al,BYTE PTR es:[edi]
  439702:	lahf   
  439703:	(bad)  
  439704:	jmp    DWORD PTR [eax+0x0]
  439707:	mov    ch,0xff
  439709:	icebp  
  43970a:	fild   DWORD PTR [eax]
  43970c:	push   edi
  43970e:	call   DWORD PTR [edi]
  439710:	inc    DWORD PTR [ebp-0x17]
  439713:	inc    DWORD PTR [eax]
  439715:	fcos   
  439717:	xchg   edi,edi
  439719:	xor    edx,edx
  43971b:	inc    DWORD PTR [ebx-0x33e50041]
  439721:	sbb    eax,DWORD PTR [ebx]
  439723:	add    BYTE PTR [eax],al
  439725:	mov    edi,0x97fffaff
  43972a:	dec    esp
  43972c:	int3   
  43972d:	xchg   edx,eax
  43972e:	add    BYTE PTR [ecx-0x1],dh
  439731:	(bad)  
  439732:	cwde   
  439733:	(bad)  
  439734:	push   eax
  439736:	(bad)  
  439737:	jp     0x4396bc
  439739:	push   edx
  43973a:	je     0x4396c5
  43973c:	jmp    edi
  43973e:	add    BYTE PTR [ecx],al
  439740:	or     DWORD PTR [ebx],0x0
  439743:	add    BYTE PTR [ebx-0x7cdf00da],al
  439749:	cmp    eax,0xcdff0047
  43974e:	cmp    ebp,0x0
  439751:	das    
  439752:	icebp  
  439753:	add    ah,cl
  439755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439756:	push   DWORD PTR [esi-0x1]
  439759:	je     0x43976a
  43975b:	cmp    edi,0xfffffffc
  43975e:	push   esp
  439760:	adc    DWORD PTR [edi+0x19],0xffffff89
  439764:	(bad)  
  439765:	jle    0x4396ea
  439767:	mov    al,0xff
  439769:	push   esp
  43976a:	iret   
  43976b:	inc    DWORD PTR [ebx-0xf10005]
  439771:	cld    
  439772:	rol    DWORD PTR [eax],1
  439774:	int3   
  439775:	nop
  439776:	add    BYTE PTR [ecx+ecx*4-0x36],dh
  43977a:	out    0x0,eax
  43977c:	sbb    DWORD PTR [esi+0x0],0xffffff88
  439780:	add    DWORD PTR [ecx+0x51],0x0
  439784:	call   FWORD PTR [edx-0x24338500]
  43978a:	ss (bad) 
  43978c:	inc    DWORD PTR [edi-0x800e700]
  439792:	cmp    eax,0x83ceffff
  439797:	mov    ecx,0xf4dfff
  43979c:	cmp    DWORD PTR [ecx-0x1],0xffffffdb
  4397a0:	add    BYTE PTR [esi],ah
  4397a2:	dec    edx
  4397a3:	add    DWORD PTR [ebx+0x61ffd5],0x28
  4397aa:	jne    0x4397ac
  4397ac:	add    BYTE PTR [edi+edi*8],bh
  4397af:	push   esi
  4397b0:	dec    DWORD PTR [eax-0x4b]
  4397b3:	(bad)  
  4397b4:	jmp    DWORD PTR [edi-0x34]
  4397b7:	xor    al,0xff
  4397b9:	jns    0x43976a
  4397bb:	dec    esp
  4397bd:	retf   0xc083
  4397c0:	xor    DWORD PTR [edx+0x9],0xffffffff
  4397c4:	jmp    ebp
  4397c6:	add    BYTE PTR [eax+eax*1+0x6c],bh
  4397ca:	mov    bh,0xff
  4397cc:	call   DWORD PTR [ecx-0x34]
  4397cf:	or     ah,cl
  4397d1:	imul   ecx,esp,0xffffffff
  4397d4:	inc    esp
  4397d6:	int3   
  4397d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4397d8:	add    BYTE PTR ds:0xb089cc83,dl
  4397de:	jmp    DWORD PTR [ebx-0x1dd334]
  4397e4:	dec    DWORD PTR [esi]
  4397e6:	add    bl,bh
  4397e8:	mov    esi,edi
  4397ea:	addr16 (bad) 
  4397ec:	(bad)  
  4397ed:	(bad)  
  4397ef:	xor    DWORD PTR [eax],eax
  4397f1:	jo     0x4397fc
  4397f3:	or     DWORD PTR [ecx-0x19002b],0x34
  4397fa:	add    BYTE PTR [ebx-0x3effd27d],al
  439800:	jmp    FWORD PTR [edx-0x18]
  439803:	dec    DWORD PTR [ecx-0x9f00d6]
  439809:	mov    ch,0xdc
  43980b:	inc    DWORD PTR [eax]
  43980d:	sub    al,0xff
  43980f:	cmp    BYTE PTR [ecx-0x7c007a8d],cl
  439815:	ror    ah,0x12
  439818:	push   DWORD PTR [edi+0x58ffccb7]
  43981e:	jmp    DWORD PTR [eax+eax*1+0x49]
  439822:	fwait
  439823:	add    BYTE PTR [ebx+0x31838e],al
  439829:	pop    ebp
  43982a:	jmp    0x43982b
  43982c:	add    DWORD PTR [ebx-0x21006100],0x23
  439833:	(bad)  
  439834:	dec    DWORD PTR [ecx]
  439836:	call   esp
  439838:	(bad)  
  439839:	jge    0x4397bf
  43983b:	(bad)  
  43983c:	push   DWORD PTR [edx]
  43983e:	and    DWORD PTR [eax-0x1],0xffffffa4
  439842:	dec    ebx
  439843:	cmp    edi,0xffffff90
  439846:	and    DWORD PTR [edi],0x0
  439849:	lds    esi,FWORD PTR [esi]
  43984b:	add    BYTE PTR [ebx-0x7c1600fa],al
  439851:	jecxz  0x439839
  439853:	inc    DWORD PTR [eax]
  439855:	sbb    edi,edi
  439857:	lock add BYTE PTR [eax+ebx*4-0x34],bh
  43985c:	xor    ecx,0xffffffcc
  43985f:	adc    edi,edi
  439861:	in     eax,dx
  439862:	stos   DWORD PTR es:[edi],eax
  439863:	dec    DWORD PTR [ecx-0xeff77]
  439869:	mov    ds:0xd2ffff9b,al
  43986e:	int3   
  43986f:	(bad)  
  439870:	(bad)  
  439871:	sti    
  439872:	or     al,BYTE PTR [eax]
  439874:	add    bl,cl
  439876:	mov    DWORD PTR [ebp-0x12477d],ebp
  43987c:	(bad)  
  43987d:	out    dx,al
  43987e:	jmp    DWORD PTR [ecx-0x704734]
  439884:	jmp    FWORD PTR [ecx+ecx*4+0x7f9d8303]
  43988b:	add    BYTE PTR [ebx-0xf00a9],al
  439891:	dec    edi
  439892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439893:	mov    edi,edi
  439895:	mov    bl,0xff
  439897:	test   BYTE PTR [eax],0xb1
  43989a:	popa   
  43989b:	add    BYTE PTR [ebx-0x2076af],al
  4398a1:	mov    ch,0x63
  4398a3:	cmp    edi,0xffffff82
  4398a6:	mov    ebx,eax
  4398a8:	add    BYTE PTR [ebp-0x5dff00be],bl
  4398ae:	int3   
  4398af:	dec    edi
  4398b0:	cmp    edi,0xffffff81
  4398b3:	cmp    edi,0x3d
  4398b6:	int3   
  4398b7:	and    eax,DWORD PTR [eax]
  4398b9:	inc    ebp
  4398ba:	push   0xffffff89
  4398bc:	mov    DWORD PTR [eax-0x77],esi
  4398bf:	test   eax,0xff56e8ff
  4398c4:	add    ch,cl
  4398c6:	int3   
  4398c7:	mov    ds:0x3665ff,eax
  4398cc:	call   DWORD PTR [esi]
  4398ce:	call   FWORD PTR [edx-0x1]
  4398d1:	std    
  4398d2:	cwde   
  4398d3:	add    BYTE PTR [ebx-0x80004b],al
  4398d9:	nop
  4398da:	pop    esp
  4398db:	cmp    edi,0xffffff83
  4398de:	jmp    DWORD PTR [ecx+0x0]
  4398e1:	xlat   BYTE PTR ds:[ebx]
  4398e2:	repnz or DWORD PTR [ecx+0xf5ff30],0xffffffc4
  4398ea:	ror    DWORD PTR [ecx-0x54ffe700],0x0
  4398f1:	sub    eax,0x3b83fff7
  4398f6:	jmp    FWORD PTR [ebx+0x0]
  4398f9:	scas   al,BYTE PTR es:[edi]
  4398fa:	test   BYTE PTR [eax],al
  4398fc:	inc    ebp
  4398fe:	(bad)  
  4398ff:	jge    0x439901
  439901:	fldz   
  439903:	mov    edi,edi
  439905:	xchg   esi,eax
  439906:	jmp    ebp
  439908:	add    BYTE PTR [edi+0x72ffffeb],ch
  43990e:	mov    DWORD PTR [ebx-0x1],ecx
  439911:	jnp    0x4398cf
  439913:	inc    DWORD PTR [ebx+0x5affae]
  439919:	fistp  WORD PTR [esp+ecx*8+0x0]
  43991d:	push   esp
  43991e:	inc    DWORD PTR [edi-0x13ff76dc]
  439924:	add    BYTE PTR [edi+0x2a0026],bl
  43992a:	dec    DWORD PTR [eax+0x0]
  43992d:	int3   
  43992e:	push   0x83bf00
  439933:	xchg   edi,edi
  439935:	rol    BYTE PTR [edx-0x1],1
  439938:	(bad)  
  439939:	cmp    edi,0x47
  43993c:	dec    DWORD PTR [esi-0x63]
  43993f:	jmp    FWORD PTR [esi-0x76c2ff7d]
  439945:	(bad)  
  439947:	add    BYTE PTR [esi+0x0],bl
  43994a:	call   DWORD PTR [edx+0xa8d383]
  439950:	jmp    0xff619954
  439955:	cs imul edi,edi,0xffffffca
  439959:	mov    edi,edi
  43995b:	cmp    al,0xff
  43995d:	sbb    ecx,DWORD PTR [eax+eax*1-0x35ff00af]
  439964:	(bad)  
  439965:	aas    
  439966:	and    cl,BYTE PTR [ecx-0x130000ac]
  43996c:	add    BYTE PTR [ecx+edi*2-0x5c01],cl
  439973:	mov    ebp,0xcc74cdcc
  439978:	push   ebp
  439979:	add    BYTE PTR [eax],al
  43997b:	jmp    bp
  43997e:	retf   
  43997f:	mov    DWORD PTR [edi-0x7d],edi
  439982:	(bad)  
  439983:	fild   DWORD PTR [eax]
  439985:	in     al,0x2
  439987:	push   DWORD PTR [edi-0xc2ff34]
  43998d:	jo     0x43997b
  43998f:	sub    DWORD PTR [esp+ecx*8+0x0],0x77
  439994:	dec    DWORD PTR [edi]
  439996:	outs   dx,BYTE PTR ds:[esi]
  439997:	add    BYTE PTR [ebx-0x2b3301],bh
  43999d:	lods   al,BYTE PTR ds:[esi]
  43999e:	xchg   edx,eax
  43999f:	add    BYTE PTR [esi],dl
  4399a1:	add    DWORD PTR [eax],0xffffffd8
  4399a4:	(bad)  
  4399a5:	jg     0x4399b2
  4399a7:	push   DWORD PTR [edi-0x1]
  4399aa:	add    BYTE PTR [edi+edi*8-0x167c80da],bh
  4399b1:	inc    DWORD PTR [ebx-0x41300cc]
  4399b7:	call   DWORD PTR [ecx-0x1]
  4399ba:	inc    DWORD PTR [ebx+eax*4+0x54ffa761]
  4399c1:	add    ah,cl
  4399c3:	popa   
  4399c4:	mov    DWORD PTR [esi],esi
  4399c6:	popa   
  4399c7:	add    DWORD PTR [eax+eax*1-0x1],0xffffff9e
  4399cc:	dec    esi
  4399ce:	(bad)  
  4399cf:	call   DWORD PTR [edi]
  4399d1:	add    bh,bh
  4399d3:	mov    esi,0xff3a1fcc
  4399d8:	mov    DWORD PTR [eax],eax
  4399da:	dec    ecx
  4399dc:	push   DWORD PTR [eax]
  4399de:	mov    ah,0x0
  4399e0:	adc    al,0xff
  4399e2:	push   DWORD PTR [esi]
  4399e4:	sbb    DWORD PTR [esi+ecx*4+0x0],0x4b
  4399e9:	dec    DWORD PTR [ecx+0x7779000b]
  4399ef:	(bad)  
  4399f0:	fcos   
  4399f2:	add    ch,al
  4399f4:	push   DWORD PTR [edi-0xe3ffb2]
  4399fa:	add    BYTE PTR [esi],dh
  4399fc:	add    BYTE PTR [edx-0x76740010],bh
  439a02:	add    BYTE PTR [ebx-0x1],cl
  439a05:	bound  esi,QWORD PTR [ebx-0x34]
  439a08:	and    al,0x89
  439a0a:	jmp    FWORD PTR [eax-0x1]
  439a0d:	pop    ecx
  439a0e:	mov    dl,0xff
  439a10:	das    
  439a11:	add    BYTE PTR [eax],al
  439a13:	int3   
  439a14:	add    BYTE PTR [esi],bl
  439a16:	inc    esi
  439a17:	mov    DWORD PTR [ecx],ecx
  439a19:	add    BYTE PTR [eax],al
  439a1b:	rol    BYTE PTR [ebx+0x16009fc8],1
  439a21:	(bad)  
  439a22:	call   esi
  439a24:	jmp    DWORD PTR [esi-0x32]
  439a27:	inc    DWORD PTR [ebx-0x730077]
  439a2d:	push   ebx
  439a2e:	add    edi,edi
  439a30:	adc    cl,ah
  439a32:	call   DWORD PTR [edx+0xc95fff]
  439a38:	mov    bl,0xff
  439a3a:	int3   
  439a3b:	pop    es
  439a3c:	dec    DWORD PTR [ebx+0x67]
  439a3f:	push   DWORD PTR [eax]
  439a41:	(bad)  
  439a42:	jmp    FWORD PTR [edi]
  439a44:	add    BYTE PTR [ebx-0x33040049],bl
  439a4a:	add    BYTE PTR [eax],bh
  439a4c:	or     DWORD PTR [eax],0xffffffa4
  439a4f:	add    ch,dh
  439a51:	add    BYTE PTR [eax],al
  439a53:	pop    ebx
  439a54:	int3   
  439a55:	jl     0x439aa9
  439a57:	add    BYTE PTR [eax-0x1],al
  439a5a:	add    BYTE PTR [esi-0x357577],dh
  439a60:	and    edi,edi
  439a62:	dec    ebp
  439a64:	jmp    FWORD PTR [ebx+0x17]
  439a67:	mov    DWORD PTR [edi-0xe0ff77],edi
  439a6d:	(bad)  
  439a6e:	in     eax,0x0
  439a70:	(bad)  
  439a71:	(bad)  
  439a72:	jmp    DWORD PTR [esi-0x3391e677]
  439a78:	add    BYTE PTR ss:[eax],al
  439a7b:	jecxz  0x439a7d
  439a7d:	pusha  
  439a7e:	pop    ss
  439a7f:	int3   
  439a80:	adc    bh,bh
  439a82:	add    BYTE PTR [ecx+0x0],bh
  439a85:	mov    ebx,0xffc58391
  439a8a:	add    BYTE PTR [esi],dl
  439a8c:	cmp    ecx,0xffffffae
  439a8f:	add    dh,dl
  439a91:	inc    DWORD PTR [ebx-0x5bbf7644]
  439a97:	call   FWORD PTR [ebx-0x3372ff01]
  439a9d:	or     al,0xaf
  439a9f:	call   DWORD PTR [ebx-0xaf7d00]
  439aa5:	addr16 int 0x0
  439aa8:	out    0xff,eax
  439aaa:	dec    DWORD PTR [edi+0x51bb00]
  439ab0:	out    dx,eax
  439ab1:	dec    DWORD PTR [ecx-0x4de1ff9d]
  439ab7:	add    BYTE PTR [esi+0xb183ff],dl
  439abd:	stos   DWORD PTR es:[edi],eax
  439abe:	xor    ecx,esp
  439ac0:	out    0x83,eax
  439ac2:	cmp    DWORD PTR [esi+0x0],0xffffffca
  439ac6:	mov    DWORD PTR [eax],eax
  439ac8:	sbb    DWORD PTR [eax],eax
  439aca:	add    BYTE PTR [edi+edi*8],dl
  439acd:	add    al,0x67
  439acf:	add    BYTE PTR [esi-0xef007d],ch
  439ad5:	or     eax,0xe000d4
  439ada:	jmp    ebp
  439adc:	add    BYTE PTR [ebp-0x2dff04],bl
  439ae2:	inc    DWORD PTR [ebx-0x8eac01]
  439ae8:	or     BYTE PTR [ecx-0x6b331001],0xf2
  439aef:	add    BYTE PTR [ebx+eax*4],cl
  439af2:	add    BYTE PTR [ecx],ah
  439af4:	mov    esp,edi
  439af6:	cmp    bh,0x5c
  439af9:	cmp    edi,0x23
  439afc:	xor    ecx,0x38
  439aff:	add    bh,bh
  439b01:	(bad)  
  439b02:	(bad)  
  439b03:	jge    0x439b04
  439b05:	call   0x429bf7
  439b0a:	adc    DWORD PTR [ebx],0xffffffff
  439b0d:	xor    cl,BYTE PTR [ebx+eax*4]
  439b10:	mov    ds:0xb900cc,eax
  439b15:	arpl   WORD PTR [esi],dx
  439b17:	add    BYTE PTR [edx-0x7d],ah
  439b1a:	int3   
  439b1b:	sub    BYTE PTR [ecx-0x11ff42c8],cl
  439b21:	inc    DWORD PTR [eax]
  439b23:	test   DWORD PTR [eax],eax
  439b25:	dec    esp
  439b26:	int    0x0
  439b28:	idiv   bh
  439b2a:	add    BYTE PTR [eax-0x1],bh
  439b2d:	lock dec esi
  439b2f:	add    bl,al
  439b31:	cmp    edi,0xffffffa5
  439b34:	mov    esi,ebp
  439b36:	inc    ebp
  439b37:	dec    DWORD PTR [esi-0x34]
  439b3a:	add    BYTE PTR [edx],al
  439b3c:	call   FWORD PTR [edx+0x58]
  439b3f:	call   DWORD PTR [esi]
  439b41:	(bad)  
  439b42:	(bad)  
  439b43:	mov    ebx,0x89243000
  439b48:	nop
  439b49:	add    bh,bh
  439b4b:	data16 add BYTE PTR [esi-0x5],ch
  439b4f:	call   FWORD PTR [edx-0x1]
  439b52:	add    BYTE PTR [esi],bh
  439b54:	add    BYTE PTR [edx+eax*4+0x5083],ah
  439b5b:	jle    0x439b5c
  439b5d:	dec    ebx
  439b5e:	imul   edi,edi,0x5300ffbd
  439b64:	mov    DWORD PTR [ecx-0xab0022],esi
  439b6a:	add    DWORD PTR ds:0x83ab6e00,0xffffffb2
  439b71:	cmp    edi,0xffffffc5
  439b74:	add    BYTE PTR [ecx],bh
  439b76:	jo     0x439b78
  439b78:	mov    al,ds:0xab0083
  439b7d:	les    ebp,FWORD PTR [ecx]
  439b7f:	int3   
  439b80:	clc    
  439b81:	(bad)  
  439b82:	call   esi
  439b84:	inc    DWORD PTR [esi]
  439b86:	daa    
  439b87:	add    BYTE PTR [edx],bl
  439b89:	add    BYTE PTR [ebx+0x38f5ff3d],al
  439b8f:	add    BYTE PTR [ebx-0x34],bl
  439b92:	xor    edx,0xffffffff
  439b95:	or     ch,al
  439b97:	dec    DWORD PTR [ebx+eax*4]
  439b9a:	dec    DWORD PTR [edi+0xa043ff]
  439ba0:	in     al,dx
  439ba1:	add    BYTE PTR [ebx-0x413c009e],al
  439ba7:	jmp    FWORD PTR [ecx-0x1]
  439baa:	add    dl,ah
  439bac:	int3   
  439bad:	mov    ds:0x893aff90,al
  439bb2:	sub    DWORD PTR [ecx-0x19c01],0x63
  439bb9:	(bad)  
  439bba:	jmp    DWORD PTR [esi-0x34]
  439bbd:	push   esp
  439bbe:	scas   al,BYTE PTR es:[edi]
  439bbf:	add    BYTE PTR [esi],ch
  439bc1:	add    bh,bh
  439bc3:	mov    ebx,0xb96100
  439bc8:	cdq    
  439bc9:	inc    DWORD PTR [ebx-0x1d000a1]
  439bcf:	jmp    DWORD PTR [edx-0x7c0bff01]
  439bd5:	add    DWORD PTR [ebx],edi
  439bd7:	jmp    DWORD PTR [ebp-0x1]
  439bda:	int3   
  439bdb:	in     al,0xff
  439bdd:	dec    esp
  439bde:	mov    al,0x83
  439be0:	pusha  
  439be1:	(bad)  
  439be2:	call   DWORD PTR [esi]
  439be4:	call   DWORD PTR [edx+0x220034]
  439bea:	jmp    DWORD PTR [edi]
  439bec:	add    BYTE PTR [edi-0x8effb9],cl
  439bf2:	jmp    ebx
  439bf4:	add    BYTE PTR [edx-0x33193343],cl
  439bfa:	dec    DWORD PTR [esi-0x7c2afc00]
  439c00:	mov    ah,0x83
  439c02:	mov    DWORD PTR [eax-0xf32a00],ebp
  439c08:	(bad)  
  439c09:	or     DWORD PTR [ecx-0x63530046],0xffffffcc
  439c10:	push   esi
  439c11:	cmp    edi,0x1b
  439c14:	(bad)  
  439c15:	cmp    dh,BYTE PTR [edx+0xff78ff]
  439c1b:	inc    ebx
  439c1c:	call   DWORD PTR [edi-0x7c004b]
  439c22:	push   ebp
  439c24:	mov    edx,esi
  439c26:	add    BYTE PTR fs:[eax+eax*1+0x2300c500],al
  439c2e:	stos   BYTE PTR es:[edi],al
  439c2f:	mov    ebx,ecx
  439c31:	inc    DWORD PTR [eax]
  439c33:	jmp    FWORD PTR cs:[ecx-0x1]
  439c37:	add    BYTE PTR [edi],al
  439c39:	add    ah,cl
  439c3b:	repnz add ch,dh
  439c3e:	out    dx,al
  439c3f:	(bad)  
  439c40:	fadd   QWORD PTR [ebx+0x4d00a500]
  439c46:	repz call FWORD PTR [ebx+eax*4-0x7c7cb201]
  439c4e:	xor    BYTE PTR [eax],al
  439c50:	ret    
  439c51:	inc    DWORD PTR [eax]
  439c53:	mov    al,BYTE PTR [eax]
  439c55:	imul   ebp,DWORD PTR [edx],0xcccc5783
  439c5b:	mov    ah,0xff
  439c5d:	(bad)  
  439c5e:	aas    
  439c5f:	mov    DWORD PTR [edx-0x1],ebp
  439c62:	sub    DWORD PTR [ebx-0x1],0x7b
  439c66:	mov    al,0x0
  439c68:	cwde   
  439c69:	(bad)  
  439c6a:	(bad)  
  439c6b:	in     al,dx
  439c6c:	add    BYTE PTR [ebp+0x91ff1b],ah
  439c72:	int3   
  439c73:	and    BYTE PTR [ebx+0x1cfff7b9],al
  439c79:	cmp    edi,0xffffffc3
  439c7c:	add    BYTE PTR [esi+0x87ff6d],dl
  439c82:	add    BYTE PTR [edi+edi*8+0x47],bh
  439c86:	test   eax,0x98ff
  439c8b:	mov    eax,ds:0xff4f33cc
  439c90:	push   ecx
  439c91:	int3   
  439c92:	int3   
  439c93:	or     al,BYTE PTR [ebx-0x22009581]
  439c99:	inc    DWORD PTR [eax]
  439c9b:	add    eax,0x62389
  439ca0:	add    bh,bh
  439ca2:	add    bh,ah
  439ca4:	int3   
  439ca5:	mov    BYTE PTR [ecx-0x33331801],ah
  439cab:	mov    dl,0x0
  439cad:	push   eax
  439cae:	inc    ecx
  439caf:	add    BYTE PTR [eax],dl
  439cb1:	add    ah,cl
  439cb3:	push   ebp
  439cb4:	dec    DWORD PTR [ebx+0x3]
  439cb7:	jmp    DWORD PTR [eax+0x7ff00]
  439cbd:	add    al,0xb2
  439cbf:	sbb    esi,0xffffffff
  439cc2:	call   DWORD PTR [edi+edi*8]
  439cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439cc6:	cdq    
  439cc7:	(bad)  
  439cc8:	(bad)  
  439cca:	dec    DWORD PTR [ecx+0x6d2200]
  439cd0:	or     ecx,DWORD PTR [ecx+0x2bff2f00]
  439cd6:	mov    ebx,0xccff7100
  439cdb:	popf   
  439cdc:	add    BYTE PTR [edx],bh
  439cde:	aas    
  439cdf:	jmp    FWORD PTR [eax+0x82ff00]
  439ce5:	fs jo  0x439cb4
  439ce8:	and    al,0xff
  439cea:	inc    ecx
  439cec:	sub    ebp,0x6f
  439cef:	mov    esi,edx
  439cf1:	inc    DWORD PTR [eax]
  439cf3:	sub    eax,0xff04aeff
  439cf8:	mov    ah,0x89
  439cfa:	mov    ebx,edi
  439cfc:	int3   
  439cfd:	pop    edi
  439cfe:	dec    eax
  439cff:	(bad)  
  439d00:	jge    0x439d01
  439d02:	jmp    DWORD PTR [eax-0x7d]
  439d05:	xor    al,0x8
  439d07:	add    BYTE PTR [ebx],bl
  439d09:	add    bh,bh
  439d0b:	add    BYTE PTR cs:[esi],bl
  439d0e:	dec    ebp
  439d0f:	int3   
  439d10:	mov    cl,0xff
  439d12:	call   DWORD PTR [eax+0x82a9ff]
  439d18:	xor    eax,0xff9f00ff
  439d1d:	jmp    0xbbff:0x3d0011
  439d24:	add    bl,bh
  439d26:	jecxz  0x439cab
  439d28:	inc    DWORD PTR ss:[eax]
  439d2b:	jmp    0x56fdfc
  439d30:	mov    edi,?
  439d32:	add    bh,ch
  439d34:	call   DWORD PTR [eax+0x29]
  439d37:	push   DWORD PTR [ebx-0x1]
  439d3a:	push   DWORD PTR [eax-0xaa9c77]
  439d40:	repnz int3 
  439d42:	jmp    DWORD PTR [edi-0x77]
  439d45:	mov    cl,0x2
  439d47:	(bad)  
  439d48:	jnp    0x439d49
  439d4a:	int3   
  439d4b:	scas   eax,DWORD PTR es:[edi]
  439d4c:	call   FWORD PTR [edi+0x6f]
  439d4f:	add    BYTE PTR [edi+edi*8+0x75ff7500],bh
  439d56:	jmp    0x439d57
  439d58:	push   es
  439d59:	add    BYTE PTR [eax],al
  439d5b:	mov    esp,0xff4a8200
  439d60:	(bad)  
  439d62:	mov    esp,esp
  439d64:	and    DWORD PTR [esi-0x66],0xffffff83
  439d68:	pop    edx
  439d69:	(bad)  
  439d6a:	(bad)  
  439d6b:	js     0x439d6c
  439d6d:	cmp    BYTE PTR [edi],bh
  439d6f:	(bad)  
  439d70:	cmp    al,0x0
  439d72:	(bad)  
  439d73:	mov    esp,0xff008683
  439d78:	mov    al,ds:0xff9bffff
  439d7d:	push   ecx
  439d7e:	aaa    
  439d7f:	mov    esp,ebp
  439d81:	add    DWORD PTR [eax],0xffffffb6
  439d84:	(bad)  
  439d85:	mov    ebp,0xffd0fffb
  439d8a:	push   DWORD PTR [eax+eax*1]
  439d8d:	mov    esp,0xcc2e8974
  439d92:	add    BYTE PTR [esi-0x7c37c401],ch
  439d98:	pop    ebx
  439d99:	add    bh,bh
  439d9b:	mov    al,0x0
  439d9d:	icebp  
  439d9e:	ret    0x98ff
  439da1:	add    bh,bh
  439da3:	mov    ah,0xcc
  439da5:	mov    ecx,0xff3cff27
  439daa:	inc    DWORD PTR [edi-0x7d]
  439dad:	adc    al,0x71
  439daf:	(bad)  
  439db0:	call   0xcc4f9eb4
  439db5:	adc    DWORD PTR ds:0xffffd900,ebp
  439dbb:	out    0xff,al
  439dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439dbe:	pop    edx
  439dbf:	push   esp
  439dc1:	(bad)  
  439dc2:	dec    DWORD PTR [edi+edi*8]
  439dc5:	push   ss
  439dc6:	daa    
  439dc7:	xor    DWORD PTR [ecx],0xffffffff
  439dca:	mov    DWORD PTR [ecx-0x34],edx
  439dcd:	mov    bl,0x67
  439dcf:	add    BYTE PTR [edx],bl
  439dd1:	mov    DWORD PTR [eax],eax
  439dd3:	push   DWORD PTR ds:[ebp-0x337700de]
  439dda:	inc    ecx
  439ddc:	add    BYTE PTR [ecx-0x339d00bb],ah
  439de2:	jmp    esi
  439de4:	add    BYTE PTR [ecx+0x858392],ah
  439dea:	adc    ebp,0x0
  439ded:	sub    esp,DWORD PTR [edi-0x7d]
  439df0:	adc    DWORD PTR [eax],eax
  439df2:	add    BYTE PTR [edi+0x343acc],al
  439df8:	es cmp edi,0x2b
  439dfc:	add    BYTE PTR [edi-0xe6000a],dh
  439e02:	add    BYTE PTR [eax-0x7c071e01],ah
  439e08:	int3   
  439e09:	add    ah,cl
  439e0b:	cmp    BYTE PTR [ecx-0x6eff0ace],cl
  439e11:	add    BYTE PTR [eax],al
  439e13:	ss (bad) 
  439e15:	cmp    al,0xd9
  439e17:	add    BYTE PTR [edi+0x0],al
  439e1a:	add    BYTE PTR [ebp-0x1],ah
  439e1d:	les    ecx,FWORD PTR [eax+eax*1]
  439e20:	(bad)  
  439e21:	inc    DWORD PTR [eax]
  439e23:	jbe    0x439e24
  439e25:	std    
  439e26:	or     al,0xff
  439e28:	mov    ds:0x83e60083,al
  439e2d:	cmc    
  439e2e:	js     0x439e30
  439e30:	sub    DWORD PTR [eax],eax
  439e32:	cmp    DWORD PTR [edx],0xffffffff
  439e35:	jnp    0x439e0b
  439e37:	jmp    edi
  439e39:	inc    DWORD PTR [eax]
  439e3b:	adc    eax,0xff209aff
  439e40:	add    WORD PTR [ebx+0x2307ffe8],0xffff
  439e48:	inc    edi
  439e49:	add    DWORD PTR [ebx-0x7d5cffda],0xffffffff
  439e50:	cli    
  439e51:	(bad)  
  439e52:	jmp    DWORD PTR [ecx+0x0]
  439e55:	sub    cl,BYTE PTR [edx-0x7cd401]
  439e5b:	(bad)  
  439e5d:	dec    ebp
  439e5e:	nop
  439e5f:	add    BYTE PTR [esi-0xa00100],dl
  439e65:	pop    edi
  439e66:	out    dx,eax
  439e67:	add    bh,bh
  439e69:	inc    DWORD PTR [eax]
  439e6b:	push   0x830dbc89
  439e70:	inc    DWORD PTR [ebx+0x90050ff]
  439e76:	aaa    
  439e77:	add    BYTE PTR [ebp+0x0],ah
  439e7a:	xor    ecx,0x0
  439e7d:	gs mov al,0xff
  439e80:	in     eax,dx
  439e81:	cmp    edi,0xffffffc9
  439e84:	inc    DWORD PTR [ebx+ecx*4+0x0]
  439e88:	inc    DWORD PTR es:[eax]
  439e8b:	push   edx
  439e8c:	call   FWORD PTR [ebx]
  439e8e:	leave  
  439e8f:	(bad)  
  439e90:	std    
  439e91:	dec    esp
  439e93:	fisttp QWORD PTR [ecx-0x20ff8cc3]
  439e99:	(bad)  
  439e9a:	(bad)  
  439e9b:	cld    
  439e9c:	call   DWORD PTR [ebx+0x27]
  439e9f:	mov    DWORD PTR [edi+edi*8+0x7bffce83],esi
  439ea6:	inc    ebp
  439ea7:	int3   
  439ea8:	cmp    bh,bh
  439eaa:	int3   
  439eab:	bound  eax,QWORD PTR [ebx+0x68009a99]
  439eb1:	add    DWORD PTR [eax],0x7e
  439eb4:	add    BYTE PTR [esi],dh
  439eb6:	jb     0x439eb8
  439eb8:	ins    DWORD PTR es:[edi],dx
  439eb9:	inc    DWORD PTR [eax]
  439ebb:	ins    BYTE PTR es:[edi],dx
  439ebc:	mov    DWORD PTR [eax-0x1],ebp
  439ebf:	add    BYTE PTR [eax-0x700100],dh
  439ec5:	sub    eax,0x8306ccce
  439eca:	jmp    edx
  439ecc:	add    BYTE PTR [esi+0x84cc23],bl
  439ed2:	call   ebp
  439ed4:	(bad)  
  439ed5:	call   0xff749e7d
  439eda:	int3   
  439edb:	aaa    
  439edc:	dec    edx
  439ede:	push   DWORD PTR gs:[edx+0x0]
  439ee2:	(bad)  
  439ee3:	jl     0x439ee5
  439ee5:	sub    BYTE PTR [ebp-0x7cb201],bh
  439eeb:	test   eax,0xff0ccf83
  439ef0:	out    dx,al
  439ef1:	dec    esp
  439ef3:	mov    eax,ds:0xfff0d183
  439ef8:	xor    eax,DWORD PTR [ebx-0x6cffdc01]
  439efe:	jmp    FWORD PTR cs:[eax]
  439f01:	inc    DWORD PTR [ebx-0x221eff42]
  439f07:	call   FWORD PTR [ebx-0x1]
  439f0a:	add    cl,al
  439f0c:	push   DWORD PTR [edx-0x2900cd]
  439f12:	call   DWORD PTR [ebx-0x788a01]
  439f18:	sbb    eax,0x83fcffff
  439f1d:	jns    0x439f43
  439f1f:	cmp    esi,0xffffffcc
  439f22:	add    BYTE PTR [ecx],cl
  439f24:	add    BYTE PTR [ebx],cl
  439f26:	xor    eax,0xff003ccc
  439f2b:	cmp    al,BYTE PTR [ebx-0x3c33ccbb]
  439f31:	(bad)  
  439f32:	call   esi
  439f34:	call   FWORD PTR [esi-0x66]
  439f37:	add    BYTE PTR [esi-0x34],bl
  439f3a:	adc    DWORD PTR [esi],0x0
  439f3d:	sbb    al,0x4c
  439f3f:	mov    DWORD PTR [edi-0x45ff01],eax
  439f45:	pushf  
  439f46:	out    dx,al
  439f47:	add    BYTE PTR ds:0xff04ff00,ch
  439f4d:	aaa    
  439f4e:	sbb    al,0x83
  439f50:	dec    esi
  439f51:	add    bh,bh
  439f53:	lahf   
  439f54:	push   DWORD PTR [edi-0x7cc800dd]
  439f5a:	dec    eax
  439f5c:	int3   
  439f5d:	inc    ecx
  439f5e:	mov    esi,0xffffbe00
  439f63:	rol    DWORD PTR [eax],1
  439f65:	cwde   
  439f66:	mov    dl,0x83
  439f68:	pop    esp
  439f69:	add    DWORD PTR [eax],0xffffffe3
  439f6c:	inc    DWORD PTR [ebx+0xd1000a]
  439f72:	int3   
  439f73:	jb     0x439f74
  439f75:	iret   
  439f76:	imul   eax,DWORD PTR [ebx+0x4683ff70],0xffffff83
  439f7d:	jne    0x439fc1
  439f7f:	jmp    FWORD PTR [ebp-0x7cf60000]
  439f85:	aam    0x2b
  439f87:	(bad)  
  439f88:	jge    0x439f8a
  439f8a:	jmp    DWORD PTR [edi-0xb98e00]
  439f90:	pusha  
  439f91:	int3   
  439f92:	mov    DWORD PTR [eax-0x1],edi
  439f95:	jmp    0x1d9ee6
  439f9a:	adc    DWORD PTR [edi-0x7d],0xffffffb7
  439f9e:	fwait
  439f9f:	add    BYTE PTR [ebp-0x7d],cl
  439fa2:	jmp    DWORD PTR [esi]
  439fa4:	inc    DWORD PTR [esi]
  439fa6:	call   DWORD PTR cs:[esi]
  439fa9:	int3   
  439faa:	jmp    DWORD PTR [esi]
  439fac:	jmp    FWORD PTR [ebx+0x5c]
  439faf:	int3   
  439fb0:	mov    cl,0xff
  439fb2:	int3   
  439fb3:	jmp    0x439fb4
  439fb5:	sti    
  439fb6:	cli    
  439fb7:	add    bh,al
  439fb9:	(bad)  
  439fba:	(bad)  
  439fbb:	mov    ecx,0x896298ff
  439fc0:	mov    dl,0xff
  439fc2:	int3   
  439fc3:	fiadd  DWORD PTR [eax]
  439fc5:	in     eax,0x40
  439fc7:	(bad)  
  439fc8:	mov    eax,0x836dffff
  439fcd:	dec    ecx
  439fce:	(bad)  
  439fd0:	mov    cl,0xff
  439fd2:	int3   
  439fd3:	repz inc DWORD PTR [ebp+0xf600ea]
  439fda:	call   FWORD PTR [edx]
  439fdc:	call   FWORD PTR [ecx]
  439fde:	cmp    al,0x0
  439fe0:	fdivr  st,st(7)
  439fe2:	sub    DWORD PTR [edi],0x0
  439fe5:	adc    eax,0xccadff07
  439fea:	sbb    DWORD PTR [ebp+0x0],0x69
  439fee:	aad    0xff
  439ff0:	inc    eax
  439ff1:	cmp    edi,0x3
  439ff4:	dec    ebx
  439ff6:	cmp    al,0xff
  439ff8:	nop
  439ff9:	dec    esp
  439ffb:	sbb    eax,0xff63a4cc
  43a000:	mov    ebp,0xff4700ff
  43a005:	(bad)  {k6}{z}
  43a00a:	call   FWORD PTR [edi]
  43a00c:	call   FWORD PTR [esi]
  43a00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a00f:	add    bl,cl
  43a011:	dec    esp
  43a013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a014:	add    DWORD PTR [eax+0x13],0xffffff89
  43a018:	fdivr  st,st(7)
  43a01a:	sub    ebx,0xffffffcc
  43a01d:	arpl   WORD PTR [edx],bp
  43a01f:	jmp    DWORD PTR [eax+eax*1-0x49000c01]
  43a026:	adc    bh,bh
  43a028:	scas   eax,DWORD PTR es:[edi]
  43a029:	add    DWORD PTR [eax],0x1e
  43a02c:	add    BYTE PTR [edi-0x39],cl
  43a02f:	jmp    FWORD PTR [edi+edi*8-0x333e501]
  43a036:	popf   
  43a037:	(bad)  
  43a038:	jp     0x43a039
  43a03a:	add    eax,0xffffffff
  43a03d:	icebp  
  43a03e:	xor    eax,0xff00b200
  43a043:	jae    0x7f43e5bd
  43a049:	add    BYTE PTR [eax],al
  43a04b:	sbb    DWORD PTR [ebx+0x7583fa8d],eax
  43a051:	(bad)  
  43a052:	dec    DWORD PTR [ecx]
  43a054:	mov    DWORD PTR [eax],ebp
  43a056:	push   ds
  43a057:	call   FWORD PTR [ecx-0x7c647d00]
  43a05d:	adc    eax,0xffcaff37
  43a062:	call   FWORD PTR [esi-0x1]
  43a065:	dec    ebx
  43a066:	mov    edi,0x83007d00
  43a06b:	mov    bh,bh
  43a06d:	add    bh,BYTE PTR [ebx]
  43a06f:	mov    esi,esp
  43a071:	mov    DWORD PTR [ebx-0x3e800e6],eax
  43a077:	add    dl,bl
  43a079:	dec    DWORD PTR [ecx-0x139b33aa]
  43a07f:	inc    edi
  43a081:	add    BYTE PTR [ebx+0x2ec400cc],al
  43a087:	call   FWORD PTR [esi+0x0]
  43a08a:	dec    DWORD PTR [edi]
  43a08c:	sbb    DWORD PTR [esi+0x47ff17],0x0
  43a093:	lods   eax,DWORD PTR ds:[esi]
  43a094:	cmp    esp,0x4
  43a097:	call   DWORD PTR [eax+eax*1]
  43a09a:	mov    DWORD PTR [eax-0x769ef100],ebx
  43a0a0:	pop    esi
  43a0a1:	(bad)  
  43a0a2:	jmp    DWORD PTR [eax-0x1]
  43a0a5:	in     al,0x2d
  43a0a7:	add    BYTE PTR [edx-0x7c020000],al
  43a0ad:	push   ds
  43a0ae:	adc    al,0xff
  43a0b0:	mov    al,0x89
  43a0b2:	(bad)  
  43a0b3:	fmul   DWORD PTR [ecx-0x7600f8a7]
  43a0b9:	add    BYTE PTR [eax],al
  43a0bb:	ret    0x3d83
  43a0be:	mov    esp,0x8383fe00
  43a0c3:	add    BYTE PTR [ecx+0x45ffd8f3],cl
  43a0c9:	add    BYTE PTR [eax],al
  43a0cb:	add    bh,bh
  43a0cd:	call   0x80cc:0xff70cce1
  43a0d4:	(bad)  
  43a0d5:	mov    edi,0xff1ecc6c
  43a0da:	or     esp,0xffffff83
  43a0dd:	or     eax,DWORD PTR [edx-0x1]
  43a0e0:	mov    ch,0xcc
  43a0e2:	add    BYTE PTR [edi-0x1],ah
  43a0e5:	or     DWORD PTR [edi-0x7c003401],esi
  43a0eb:	mov    ?,edi
  43a0ed:	inc    esi
  43a0ee:	xlat   BYTE PTR ds:[ebx]
  43a0ef:	and    DWORD PTR [esi],0xffffffff
  43a0f2:	add    dh,dh
  43a0f4:	int3   
  43a0f5:	(bad)  
  43a0f6:	out    dx,eax
  43a0f7:	add    BYTE PTR [ebx-0x1],dl
  43a0fa:	add    BYTE PTR ds:0xcec5ff,ah
  43a100:	and    al,0x0
  43a102:	add    ah,ch
  43a104:	add    bl,cl
  43a106:	sbb    bh,bh
  43a108:	add    DWORD PTR [eax],0xffffffff
  43a10b:	sbb    al,BYTE PTR [ebx+0x15ff156d]
  43a111:	inc    DWORD PTR [eax]
  43a113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a114:	add    bh,ah
  43a116:	xchg   ebp,eax
  43a117:	add    BYTE PTR [eax],ch
  43a119:	inc    DWORD PTR [eax]
  43a11b:	mov    bh,0x83
  43a11d:	add    DWORD PTR [ebp-0x7d],eax
  43a120:	pop    ebx
  43a121:	inc    DWORD PTR [ebx-0x77a23311]
  43a127:	sbb    DWORD PTR [ecx-0x7d],0x0
  43a12b:	cli    
  43a12c:	add    BYTE PTR [esi-0x30],dl
  43a12f:	add    BYTE PTR [ecx-0x334fff7d],bl
  43a135:	out    dx,eax
  43a136:	aaa    
  43a137:	call   DWORD PTR [eax]
  43a139:	add    bh,bh
  43a13b:	xor    eax,0xd03c83
  43a140:	sub    bh,bh
  43a142:	and    DWORD PTR [edx-0x1],0xffffffbe
  43a146:	pop    edx
  43a147:	add    BYTE PTR [esi+0xda00cc],bl
  43a14d:	pop    edx
  43a14e:	loop   0x43a14f
  43a150:	and    eax,0xff738900
  43a155:	retf   0xff9b
  43a158:	cmp    eax,0x39ffff
  43a15d:	push   ebx
  43a15e:	xor    bh,bh
  43a160:	data16 (bad) 
  43a162:	call   FWORD PTR [esi-0x1]
  43a165:	out    dx,eax
  43a166:	mov    edx,0xff00ae89
  43a16b:	xor    eax,0xcc32e6ff
  43a170:	cmp    al,BYTE PTR [ebx+0x3cffeaff]
  43a176:	or     edi,edi
  43a178:	aad    0xcc
  43a17a:	add    BYTE PTR [edx-0x1],cl
  43a17d:	scas   al,BYTE PTR es:[edi]
  43a17e:	js     0x43a17f
  43a180:	ja     0x43a181
  43a182:	(bad)  
  43a183:	mov    esi,0xbb96ff
  43a188:	mov    BYTE PTR [eax],al
  43a18a:	sbb    DWORD PTR [edi-0x7d],0xffffffa1
  43a18e:	push   cs
  43a18f:	mov    eax,ebp
  43a191:	inc    DWORD PTR [eax]
  43a193:	and    al,0xff
  43a195:	ins    DWORD PTR es:[edi],dx
  43a196:	push   eax
  43a197:	jmp    DWORD PTR [ebx-0x7d]
  43a19a:	jmp    FWORD PTR [edi-0x7c85b677]
  43a1a0:	lods   eax,DWORD PTR ds:[esi]
  43a1a1:	int3   
  43a1a2:	inc    DWORD PTR [edi-0x1]
  43a1a5:	xchg   ebp,eax
  43a1a6:	pop    edi
  43a1a7:	(bad)  
  43a1a8:	out    dx,eax
  43a1a9:	inc    DWORD PTR [eax]
  43a1ab:	mov    cl,0x83
  43a1ad:	retf   0x8346
  43a1b0:	loope  0x43a13b
  43a1b2:	add    al,dl
  43a1b4:	add    BYTE PTR [ecx-0x340014],cl
  43a1ba:	add    dh,dh
  43a1bc:	add    BYTE PTR [edi+0x7b],bh
  43a1bf:	add    BYTE PTR [ebp+0x7dff83],bl
  43a1c5:	call   0x42ff:0xffdb0025
  43a1cc:	add    BYTE PTR [ecx],ch
  43a1ce:	push   esi
  43a1cf:	add    BYTE PTR [ecx],bh
  43a1d1:	(bad)  
  43a1d2:	call   eax
  43a1d4:	(bad)  
  43a1d5:	jle    0x43a1d5
  43a1d7:	add    BYTE PTR [ebp-0x1],al
  43a1da:	add    bl,ch
  43a1dc:	call   FWORD PTR [edx-0xff001c]
  43a1e2:	add    BYTE PTR [esi-0x1],dh
  43a1e5:	sub    eax,edx
  43a1e7:	jmp    eax
  43a1e9:	int3   
  43a1ea:	jmp    DWORD PTR [edi]
  43a1ec:	(bad)  
  43a1ed:	mov    ebp,0xff59895a
  43a1f2:	inc    DWORD PTR [ecx-0x7d]
  43a1f5:	sbb    DWORD PTR [eax],0x894eff
  43a1fb:	mov    ebx,0x894154ff
  43a200:	add    BYTE PTR [ebx+0xf89fc00],al
  43a206:	aas    
  43a207:	add    BYTE PTR [ebx+0x6dffff],dl
  43a20d:	jns    0x43a28c
  43a20f:	add    BYTE PTR [ecx],al
  43a211:	add    ah,cl
  43a213:	or     edi,edi
  43a215:	adc    bl,BYTE PTR [ebp-0x9301]
  43a21b:	out    0x0,al
  43a21d:	in     eax,0x2
  43a21f:	jmp    FWORD PTR ds:0xffd1ff00
  43a225:	clc    
  43a226:	arpl   di,di
  43a228:	cmp    edi,edi
  43a22a:	add    BYTE PTR [esi+0x11d383],ch
  43a230:	sub    ah,cl
  43a232:	add    BYTE PTR [edi+0x0],bl
  43a235:	sbb    ebx,DWORD PTR [ecx-0x7d]
  43a238:	test   ah,0x0
  43a23b:	pop    es
  43a23c:	xor    DWORD PTR ds:0x83848309,0x0
  43a243:	jmp    0x74348
  43a248:	push   ebp
  43a249:	add    DWORD PTR [eax],0xffffffbf
  43a24c:	int3   
  43a24d:	loope  0x43a200
  43a24f:	sub    DWORD PTR [edx],0xffffffff
  43a252:	inc    DWORD PTR [esp+ecx*8-0x74]
  43a256:	jae    0x43a1e1
  43a258:	dec    esp
  43a25a:	add    BYTE PTR [edx+0x0],cl
  43a25d:	xchg   esi,eax
  43a25e:	and    al,0x83
  43a260:	pop    esp
  43a261:	dec    esp
  43a263:	pop    es
  43a264:	and    DWORD PTR [ecx-0x21],0x0
  43a268:	xor    DWORD PTR [eax],eax
  43a26a:	dec    DWORD PTR [ebx+eax*4]
  43a26d:	cmc    
  43a26e:	rol    DWORD PTR [eax],0xd5
  43a271:	add    DWORD PTR [eax],0x45
  43a274:	add    BYTE PTR [edi-0x7c75ff94],bh
  43a27a:	call   FWORD PTR [edi+0xbff283]
  43a280:	scas   eax,DWORD PTR es:[edi]
  43a281:	dec    esp
  43a283:	jne    0x43a251
  43a285:	mov    eax,0x83f08901
  43a28a:	add    DWORD PTR [edi],0xffffffff
  43a28d:	jg     0x43a234
  43a28f:	(bad)  
  43a290:	jge    0x43a215
  43a292:	add    BYTE PTR [ebx],al
  43a294:	(bad)  
  43a295:	jnp    0x43a262
  43a297:	dec    DWORD PTR [esi-0x6f3400]
  43a29d:	cmc    
  43a29e:	push   ebx
  43a29f:	(bad)  
  43a2a0:	aas    
  43a2a1:	add    ah,cl
  43a2a3:	xlat   BYTE PTR ds:[ebx]
  43a2a4:	add    al,bh
  43a2a6:	push   0x0
  43a2a8:	and    cl,BYTE PTR [ecx+0x35004cff]
  43a2ae:	pop    edi
  43a2af:	sbb    DWORD PTR [ecx-0x7d],0xffffff83
  43a2b3:	cdq    
  43a2b4:	int3   
  43a2b5:	fs jae 0x43a2b8
  43a2b8:	add    bh,bh
  43a2ba:	add    BYTE PTR [esi+0x206e83],ah
  43a2c0:	jmp    0x5a85:0x7000ff
  43a2c7:	add    BYTE PTR [ebx-0x7d],cl
  43a2ca:	jmp    FWORD PTR [esi]
  43a2cc:	add    bl,ah
  43a2ce:	pop    DWORD PTR [ebx+0x1effff13]
  43a2d4:	sub    DWORD PTR [ebp-0xfbffdc],0xffffffff
  43a2db:	verr   WORD PTR [ecx]
  43a2de:	sti    
  43a2df:	call   DWORD PTR [edi-0x1]
  43a2e2:	inc    DWORD PTR [ecx-0x7d]
  43a2e5:	dec    esi
  43a2e6:	add    BYTE PTR [ebx-0xcff33a8],0x89
  43a2ed:	mov    ds:0x8945ff00,al
  43a2f2:	add    BYTE PTR [esi],al
  43a2f4:	mov    edx,esi
  43a2f6:	jnp    0x43a2f8
  43a2f8:	outs   dx,BYTE PTR ds:[esi]
  43a2f9:	add    bh,bh
  43a2fb:	rol    BYTE PTR [eax],1
  43a2fd:	(bad)  
  43a2fe:	fiadd  DWORD PTR [eax]
  43a300:	les    eax,FWORD PTR [eax]
  43a302:	xor    DWORD PTR [ebx],0xffffffff
  43a305:	sbb    al,bl
  43a307:	add    BYTE PTR [eax],al
  43a309:	add    BYTE PTR [eax],al
  43a30b:	and    al,0x0
  43a30d:	cwde   
  43a30e:	imul   edi,edi,0xffffffd1
  43a311:	or     DWORD PTR [ecx-0x36280034],0xffffff83
  43a318:	xor    al,0x83
  43a31a:	sbb    ebp,0xffffffff
  43a31d:	jns    0x43a2c3
  43a31f:	mov    edi,ecx
  43a321:	add    DWORD PTR [eax],0x27
  43a324:	xor    DWORD PTR [ecx+esi*4+0x0],0xffffffac
  43a329:	inc    DWORD PTR [eax]
  43a32b:	and    DWORD PTR es:[eax+0x69],0x0
  43a330:	pop    DWORD PTR [eax]
  43a332:	int3   
  43a333:	inc    edi
  43a334:	add    BYTE PTR [esi+0x970091],ch
  43a33a:	add    BYTE PTR [eax+0xc6cb00],ah
  43a340:	push   ecx
  43a341:	int3   
  43a342:	int3   
  43a343:	xor    al,0xff
  43a345:	push   0x1eff5f
  43a34a:	xor    DWORD PTR [ecx-0x33d16b01],0x48
  43a351:	(bad)  
  43a352:	push   DWORD PTR [edi+edi*8-0x7bff8664]
  43a359:	inc    DWORD PTR [eax]
  43a35b:	js     0x43a35d
  43a35d:	test   al,0x83
  43a35f:	jmp    FWORD PTR [ebp-0x1]
  43a362:	cmp    DWORD PTR [edi+edi*8+0x7b],0xfffffffc
  43a367:	add    BYTE PTR [ebx+eax*4+0x0],bl
  43a36b:	lahf   
  43a36c:	(bad)  
  43a36d:	jp     0x43a30d
  43a36f:	int3   
  43a370:	out    dx,eax
  43a371:	mov    DWORD PTR [ecx-0x5053fff7],ecx
  43a377:	xor    ebx,0xffffff83
  43a37a:	add    BYTE PTR [edi+edi*8-0x53],ch
  43a37e:	cs int3 
  43a380:	mov    esi,0x570089
  43a385:	sbb    al,0xde
  43a387:	add    BYTE PTR [edi+edi*8+0xdff6489],ch
  43a38e:	push   ds
  43a38f:	(bad)  
  43a390:	jle    0x43a391
  43a392:	add    BYTE PTR [edi+0x312d00],ah
  43a398:	arpl   WORD PTR [eax],ax
  43a39a:	inc    ecx
  43a39c:	push   DWORD PTR [edx-0x33427ccb]
  43a3a2:	push   DWORD PTR [ebx+eax*4]
  43a3a5:	xchg   ecx,eax
  43a3a6:	das    
  43a3a7:	jmp    DWORD PTR [edi+0x0]
  43a3aa:	int3   
  43a3ab:	fadd   DWORD PTR [eax]
  43a3ad:	out    0x34,eax
  43a3af:	jmp    FWORD PTR [edx-0x3314ff01]
  43a3b5:	pusha  
  43a3b6:	add    BYTE PTR cs:[ebx],ah
  43a3b9:	add    DWORD PTR [eax],0x48
  43a3bc:	jmp    FWORD PTR [ebp+edi*8+0x8341ff]
  43a3c3:	push   ss
  43a3c4:	add    eax,0xffffffc8
  43a3c7:	call   FWORD PTR [edi-0xd5ff7d]
  43a3cd:	add    DWORD PTR [edi+edi*8-0x40ff006e],ecx
  43a3d4:	add    BYTE PTR [esi],dh
  43a3d6:	stos   BYTE PTR es:[edi],al
  43a3d7:	inc    ebx
  43a3d9:	add    BYTE PTR [eax],al
  43a3db:	push   ebx
  43a3dc:	add    dh,dl
  43a3de:	mov    bh,bh
  43a3e0:	mov    bh,bh
  43a3e2:	dec    DWORD PTR [edi+edi*8-0x1d]
  43a3e6:	or     bh,bh
  43a3e8:	bound  eax,QWORD PTR [eax]
  43a3ea:	push   esi
  43a3ec:	inc    DWORD PTR [ecx-0x347c2b]
  43a3f2:	add    BYTE PTR [edi-0x33ff6101],bl
  43a3f8:	dec    ebx
  43a3f9:	add    bh,bh
  43a3fb:	leave  
  43a3fc:	add    BYTE PTR [edi+eiz*8],cl
  43a3ff:	call   DWORD PTR [edi-0x34]
  43a402:	mov    DWORD PTR [edi-0xa3800],esi
  43a408:	mov    cs,esp
  43a40a:	add    BYTE PTR [edx+0x0],bl
  43a40d:	fwait
  43a40e:	test   edi,edi
  43a410:	inc    DWORD PTR [ebx+0x1f83a5ff]
  43a416:	sbb    DWORD PTR [eax],eax
  43a418:	or     al,0xff
  43a41a:	dec    DWORD PTR [esi-0x1]
  43a41d:	lods   eax,DWORD PTR ds:[esi]
  43a41e:	xor    bh,bh
  43a420:	hlt    
  43a421:	add    DWORD PTR [ebx-0x59457c40],0xffffffff
  43a428:	mov    edi,?
  43a42a:	add    BYTE PTR [eax+eax*1],ah
  43a42d:	out    dx,al
  43a42e:	mov    ecx,0xfffff9ff
  43a433:	xlat   BYTE PTR ds:[ebx]
  43a434:	add    BYTE PTR ds:0xe1ffb8,dh
  43a43a:	push   edi
  43a43c:	add    BYTE PTR [esp+eax*4],bh
  43a43f:	add    bl,bl
  43a441:	(bad)  
  43a442:	inc    ebp
  43a444:	push   ecx
  43a446:	out    dx,al
  43a447:	add    BYTE PTR [eax+eax*1],cl
  43a44a:	push   ebx
  43a44c:	(bad)  
  43a44d:	cmp    eax,0x2005a
  43a452:	dec    DWORD PTR [edi+edi*8]
  43a455:	scas   al,BYTE PTR es:[edi]
  43a456:	inc    esp
  43a457:	cmp    DWORD PTR ds:0xff3a0083,0xffffffd6
  43a45e:	out    0xff,al
  43a460:	pusha  
  43a461:	cmp    edi,0x6b
  43a464:	add    al,cl
  43a466:	sar    edi,0x68
  43a469:	(bad)  
  43a46a:	jmp    ecx
  43a46c:	or     DWORD PTR [ebx],0x6b
  43a46f:	inc    DWORD PTR [ecx-0xd7ff34]
  43a475:	fnsave [ebp+0x4aff]
  43a47b:	std    
  43a47c:	(bad)  
  43a47d:	ffreep st(4)
  43a47f:	add    BYTE PTR [edx-0x337a767d],cl
  43a485:	stos   BYTE PTR es:[edi],al
  43a486:	cmp    bh,0x33
  43a489:	mov    DWORD PTR [eax],eax
  43a48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a48c:	push   esp
  43a48e:	xlat   BYTE PTR ds:[ebx]
  43a48f:	inc    DWORD PTR [ecx-0xe57c01]
  43a495:	dec    ecx
  43a496:	and    edi,edi
  43a498:	popf   
  43a499:	inc    DWORD PTR [eax]
  43a49b:	inc    esp
  43a49c:	add    bl,ch
  43a49e:	add    edi,edi
  43a4a0:	gs (bad) 
  43a4a2:	inc    esp
  43a4a4:	mov    DWORD PTR [eax-0xf1ffb2],esi
  43a4aa:	add    BYTE PTR [edi-0x1],bl
  43a4ad:	stos   BYTE PTR es:[edi],al
  43a4ae:	and    edi,edi
  43a4b0:	push   ebp
  43a4b1:	inc    DWORD PTR [ebx-0xe10005f]
  43a4b7:	add    BYTE PTR [ebx],al
  43a4b9:	(bad)  
  43a4ba:	jmp    FWORD PTR ds:0xff4f30ff
  43a4c0:	(bad)  
  43a4c1:	(bad)  
  43a4c2:	dec    DWORD PTR [eax+eax*1+0x27]
  43a4c6:	push   ecx
  43a4c7:	dec    esi
  43a4c9:	int3   
  43a4ca:	add    BYTE PTR [esi],dl
  43a4cc:	int3   
  43a4cd:	test   eax,0xff34ff21
  43a4d2:	call   FWORD PTR [eax+eax*1-0x6600c657]
  43a4d9:	add    BYTE PTR [eax],al
  43a4db:	jo     0x43a4dd
  43a4dd:	jge    0x43a48a
  43a4df:	dec    ecx
  43a4e1:	mov    edi,edi
  43a4e3:	mov    ecx,0xff9e03ff
  43a4e8:	jbe    0x43a4e9
  43a4ea:	add    DWORD PTR [eax+0x812283],0xffffffce
  43a4f1:	(bad)  
  43a4f2:	dec    DWORD PTR [ebp+0x993ff]
  43a4f8:	mov    esp,0x836000ff
  43a4fd:	fs xor al,0x83
  43a500:	adc    eax,0xff99cc83
  43a505:	lods   al,BYTE PTR ds:[esi]
  43a506:	mov    ebp,0xffff34cc
  43a50b:	jbe    0x43a50d
  43a50d:	sahf   
  43a50e:	add    DWORD PTR [eax],eax
  43a510:	jns    0x43a511
  43a512:	or     DWORD PTR [edi-0x7600c301],0x77
  43a519:	mov    DWORD PTR [eax],eax
  43a51b:	inc    ecx
  43a51c:	add    BYTE PTR [eax-0x27],dl
  43a51f:	jmp    FWORD PTR [eax+eax*1+0x54cc53ff]
  43a526:	sahf   
  43a527:	add    BYTE PTR [ecx],ah
  43a529:	add    BYTE PTR [ebx-0x18290100],al
  43a52f:	sub    DWORD PTR [ebp-0x1],0xffffffff
  43a533:	mov    edi,0xbe1389
  43a538:	out    dx,eax
  43a539:	inc    DWORD PTR [ebx+0x2600cc01]
  43a53f:	adc    DWORD PTR [ecx-0x8f7d00],0xfffffffe
  43a546:	int3   
  43a547:	dec    DWORD PTR [ecx-0x270100]
  43a54d:	das    
  43a54e:	add    bh,bh
  43a550:	mov    WORD PTR [ebx-0x95e0053],ax
  43a557:	(bad)  
  43a558:	jmp    0x83e2a45d
  43a55d:	and    BYTE PTR [eax-0x34],0x5c
  43a561:	dec    esp
  43a563:	adc    eax,0xff9caccc
  43a568:	hlt    
  43a569:	(bad)  
  43a56a:	(bad)  
  43a56b:	mov    esi,0xff6344ff
  43a570:	std    
  43a571:	(bad)  
  43a572:	inc    DWORD PTR [ebx-0xa50d00]
  43a578:	adc    ecx,DWORD PTR [ecx+0x1a00d889]
  43a57e:	mov    esp,0xffff75cc
  43a583:	xchg   ebx,eax
  43a584:	jmp    FWORD PTR ds:0xff9effd6
  43a58a:	mov    DWORD PTR [ebx],edx
  43a58c:	jmp    esi
  43a58e:	cld    
  43a58f:	call   FWORD PTR [edi]
  43a591:	inc    DWORD PTR [eax]
  43a593:	cmp    al,0x0
  43a595:	dec    ebx
  43a596:	add    BYTE PTR ds:[ebp-0x1],bl
  43a59a:	xor    DWORD PTR [eax-0xe9e601],0xffffffea
  43a5a1:	mov    edi,edi
  43a5a3:	ror    esp,0x3d
  43a5a6:	sbb    al,0xff
  43a5a8:	ss cmp edi,0x2b
  43a5ac:	inc    DWORD PTR [ebx-0x76777c37]
  43a5b2:	add    BYTE PTR [ebp-0x1],bl
  43a5b5:	cli    
  43a5b6:	loopne 0x43a5b7
  43a5b8:	aaa    
  43a5b9:	int3   
  43a5ba:	add    BYTE PTR [eax],dl
  43a5bc:	int3   
  43a5bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a5be:	mov    edi,0x83ffdb00
  43a5c3:	xchg   ebx,eax
  43a5c4:	push   DWORD PTR [ebp-0x4b]
  43a5c7:	add    BYTE PTR [ebx],dl
  43a5c9:	(bad)  
  43a5ca:	push   DWORD PTR [ebp-0x765f0701]
  43a5d0:	xlat   BYTE PTR ds:[ebx]
  43a5d1:	inc    DWORD PTR [ebx-0x90133cf]
  43a5d7:	add    bh,bl
  43a5d9:	int3   
  43a5da:	add    BYTE PTR [edx-0x5df600],dl
  43a5e0:	adc    cl,ah
  43a5e2:	(bad)  
  43a5e3:	mov    ebx,0xcc246ecc
  43a5e8:	adc    edi,edi
  43a5ea:	inc    DWORD PTR [eax-0x225c01]
  43a5f0:	in     al,dx
  43a5f1:	add    DWORD PTR [eax],0xffffffbd
  43a5f4:	call   FWORD PTR [edi-0x27]
  43a5f7:	inc    DWORD PTR [eax-0x7d]
  43a5fa:	add    ch,cl
  43a5fc:	(bad)  
  43a5fd:	mov    ebp,0xe5ffe7
  43a602:	adc    eax,0x0
  43a605:	inc    esi
  43a606:	jl     0x43a5d4
  43a608:	xor    eax,0x838b83cc
  43a60d:	repz daa 
  43a60f:	add    dh,bh
  43a611:	(bad)  
  43a612:	(bad)  
  43a613:	jmp    0x43a615
  43a615:	xor    bh,BYTE PTR [ebx-0x7d]
  43a618:	push   ebx
  43a619:	add    bh,bh
  43a61b:	outs   dx,BYTE PTR ds:[esi]
  43a61c:	jmp    FWORD PTR [eax]
  43a61e:	adc    bh,bh
  43a620:	pop    ebx
  43a621:	or     esp,0x5
  43a624:	push   DWORD PTR [esi]
  43a626:	jp     0x43a628
  43a628:	cli    
  43a629:	cmp    edi,0xffffffa7
  43a62c:	and    DWORD PTR [esi],0x14
  43a62f:	jmp    FWORD PTR [ebp-0x890000]
  43a635:	xor    DWORD PTR [edi+edi*8+0x77],ecx
  43a639:	add    bh,bh
  43a63b:	mov    dh,0xff
  43a63d:	adc    DWORD PTR [edi],edi
  43a63f:	add    BYTE PTR [ebx],ch
  43a641:	add    DWORD PTR [ebx+0x2fb1ff3f],0xffffffff
  43a648:	sbb    al,0xff
  43a64a:	add    ch,dh
  43a64c:	add    BYTE PTR [ebp+ebx*4-0x1],ah
  43a650:	mov    DWORD PTR [eax],0xb8839400
  43a656:	das    
  43a657:	inc    DWORD PTR [eax+eax*1+0x6aff92ff]
  43a65e:	mov    al,ds:0xff83f600
  43a663:	fiadd  DWORD PTR [eax]
  43a665:	sti    
  43a666:	(bad)  
  43a667:	inc    DWORD PTR [edi]
  43a669:	add    bh,bh
  43a66b:	jbe    0x43a66c
  43a66d:	rcl    DWORD PTR [eax-0x1],0x58
  43a671:	inc    DWORD PTR [eax]
  43a673:	pop    edi
  43a674:	int3   
  43a675:	and    DWORD PTR [esi-0x7577],ebp
  43a67b:	mov    ebx,0xf288ff
  43a680:	call   0xccd33084
  43a685:	inc    edi
  43a686:	sar    bh,1
  43a688:	leave  
  43a689:	add    DWORD PTR [eax],0xffffff9c
  43a68c:	int3   
  43a68d:	mov    bl,0x18
  43a68f:	add    dh,al
  43a691:	inc    DWORD PTR [ebx-0x6f1c76fa]
  43a697:	int3   
  43a698:	call   0x7ca59d
  43a69d:	pop    ebp
  43a69e:	hlt    
  43a69f:	mov    DWORD PTR [eax],esi
  43a6a1:	add    bh,bh
  43a6a3:	sti    
  43a6a4:	dec    DWORD PTR [esi]
  43a6a6:	mov    bh,bh
  43a6a8:	std    
  43a6a9:	(bad)  
  43a6aa:	dec    DWORD PTR [eax-0x7c8b027d]
  43a6b0:	retf   0xcc
  43a6b3:	test   al,0xff
  43a6b5:	mov    DWORD PTR [eax],ecx
  43a6b7:	dec    DWORD PTR [ecx-0xf10001]
  43a6bd:	and    BYTE PTR [ecx+0x7ff],ch
  43a6c3:	xchg   DWORD PTR [ecx+0x760004cd],ecx
  43a6c9:	(bad)  
  43a6ca:	call   DWORD PTR [edx-0x1]
  43a6cd:	mov    ecx,DWORD PTR [ebp-0x3a01]
  43a6d3:	xchg   esp,eax
  43a6d4:	add    BYTE PTR [ecx+0x29],dl
  43a6d7:	add    BYTE PTR [ebx-0x40001],ah
  43a6dd:	mov    al,0x41
  43a6df:	add    BYTE PTR [edi-0xf20001],cl
  43a6e5:	sti    
  43a6e6:	dec    edx
  43a6e7:	call   FWORD PTR [ecx-0x1]
  43a6ea:	mov    DWORD PTR [ebp-0x1],esp
  43a6ed:	mov    eax,ds:0xff6583c4
  43a6f2:	add    BYTE PTR [edi+edi*8+0x68],dh
  43a6f6:	sbb    DWORD PTR [eax],eax
  43a6f8:	cmc    
  43a6f9:	add    bh,bh
  43a6fb:	outs   dx,BYTE PTR ds:[esi]
  43a6fc:	dec    esp
  43a6fe:	retf   
  43a6ff:	push   DWORD PTR [ebx-0x1]
  43a702:	dec    edx
  43a704:	(bad)  
  43a705:	jle    0x43a6a7
  43a707:	call   DWORD PTR [ebp-0x1]
  43a70a:	and    DWORD PTR [eax+0x0],0xffffffff
  43a70e:	cmp    bh,bh
  43a710:	adc    DWORD PTR [ebx-0x34ff697d],eax
  43a716:	jge    0x43a717
  43a718:	xchg   esi,eax
  43a719:	int3   
  43a71a:	jmp    DWORD PTR [edi]
  43a71c:	add    dl,bl
  43a71e:	test   DWORD PTR [eax],0x70ff00d1
  43a724:	add    BYTE PTR [ebp+esi*8-0x33333c01],bh
  43a72b:	add    BYTE PTR [ebx-0x76ff8604],al
  43a731:	inc    DWORD PTR [eax]
  43a733:	scas   eax,DWORD PTR es:[edi]
  43a734:	(bad)  
  43a735:	push   edi
  43a737:	add    DWORD PTR [esi-0x7c667c01],0xffffffc7
  43a73e:	push   0xffffffff
  43a740:	das    
  43a741:	add    bh,bh
  43a743:	and    edi,edi
  43a745:	rol    BYTE PTR [eax+eax*1-0x55],1
  43a749:	(bad)  
  43a74a:	(bad)  
  43a74b:	jmp    0xff2a:0xccab4d00
  43a752:	jmp    FWORD PTR [esi-0x1d0d00]
  43a758:	cmp    al,0xff
  43a75a:	push   esp
  43a75c:	jmp    FWORD PTR [ebx]
  43a75e:	ja     0x43a6e3
  43a760:	mov    al,0x83
  43a762:	add    BYTE PTR [ebx-0x7d],al
  43a765:	push   ss
  43a766:	retf   0x5cff
  43a769:	add    DWORD PTR [ebx+0x785b8328],0xffffffff
  43a770:	push   ds
  43a771:	inc    DWORD PTR [eax]
  43a773:	push   ebx
  43a774:	add    BYTE PTR [esi+0x33],bl
  43a777:	mov    DWORD PTR [edx-0x34],eax
  43a77a:	add    BYTE PTR [esi-0x7b4001],dh
  43a780:	jmp    0x43a781
  43a782:	xor    ebp,0x0
  43a785:	test   al,0x59
  43a787:	mov    ebx,ebx
  43a789:	(bad)  
  43a78a:	(bad)  
  43a78b:	in     eax,dx
  43a78c:	dec    DWORD PTR [edi-0x4d]
  43a78f:	add    bl,cl
  43a791:	(bad)  
  43a792:	inc    DWORD PTR [ebx+0x0]
  43a795:	test   DWORD PTR [ecx+0x0],0x6489ff07
  43a79c:	add    BYTE PTR [ebx+0x31],bh
  43a79f:	push   ebx
  43a7a1:	add    BYTE PTR [eax],al
  43a7a3:	icebp  
  43a7a4:	add    BYTE PTR [esi+0x75],dl
  43a7a7:	dec    DWORD PTR [edi+edi*8-0x4000c101]
  43a7ae:	fadd   DWORD PTR [eax]
  43a7b0:	inc    ebx
  43a7b1:	(bad)  
  43a7b2:	jmp    esi
  43a7b4:	(bad)  
  43a7b5:	mov    ebx,0xcccc00ba
  43a7ba:	int3   
  43a7bb:	int3   
  43a7bc:	int3   
  43a7bd:	int3   
  43a7be:	int3   
  43a7bf:	int3   
  43a7c0:	jmp    0xff7b:0x83b88383
  43a7c7:	test   edi,edi
  43a7c9:	inc    esp
  43a7ca:	pop    ecx
  43a7cb:	ins    DWORD PTR es:[edi],dx
  43a7cc:	out    dx,al
  43a7cd:	(bad)  
  43a7ce:	inc    DWORD PTR [eax]
  43a7d0:	inc    esi
  43a7d1:	(bad)  
  43a7d2:	jmp    FWORD PTR [edi+0x6783de00]
  43a7d8:	jmp    edi
  43a7da:	repnz mov edx,0x890000cd
  43a7e0:	pop    es
  43a7e1:	inc    DWORD PTR [eax]
  43a7e3:	pop    DWORD PTR [ebx+0xd6ffc5]
  43a7e9:	fadd   QWORD PTR [edi+0x25]
  43a7ec:	cdq    
  43a7ed:	add    DWORD PTR [eax],0xffffffff
  43a7f0:	mov    al,0xff
  43a7f2:	jmp    ebx
  43a7f4:	int3   
  43a7f5:	and    bh,bh
  43a7f7:	or     al,0xff
  43a7f9:	jbe    0x43a7c7
  43a7fb:	lods   al,BYTE PTR ds:[esi]
  43a7fc:	mov    esp,0x3e00ff00
  43a801:	int3   
  43a802:	push   DWORD PTR [ebx-0x17c7701]
  43a808:	adc    DWORD PTR [edi],0x19
  43a80b:	dec    ecx
  43a80c:	or     al,0x0
  43a80e:	(bad)  
  43a80f:	jmp    DWORD PTR [esi+0x0]
  43a812:	add    BYTE PTR [ebx],bh
  43a814:	add    edi,0x0
  43a817:	adc    BYTE PTR [ebx+0x7ac1b02d],al
  43a81d:	inc    DWORD PTR [eax]
  43a81f:	add    BYTE PTR [edx],bh
  43a821:	add    BYTE PTR [eax],al
  43a823:	cmp    DWORD PTR [eax],eax
  43a825:	or     edi,edi
  43a827:	xor    eax,DWORD PTR [ebx+0x31381559]
  43a82d:	(bad)  
  43a82e:	(bad)  
  43a82f:	push   DWORD PTR [edx-0x1]
  43a832:	dec    DWORD PTR [edx]
  43a834:	add    BYTE PTR [edx],dh
  43a836:	add    edi,0xffffff83
  43a839:	xor    al,cl
  43a83b:	std    
  43a83c:	jl     0x43a83d
  43a83e:	dec    esp
  43a840:	add    BYTE PTR fs:[eax],al
  43a843:	cmp    bh,0x3
  43a846:	call   DWORD PTR [eax+0x0]
  43a849:	add    DWORD PTR [edi],edi
  43a84b:	inc    eax
  43a84c:	xlat   BYTE PTR ds:[ebx]
  43a84d:	add    BYTE PTR [eax],al
  43a84f:	jmp    FWORD PTR [edi+edi*8-0x407cf934]
  43a856:	call   FWORD PTR [esi]
  43a858:	inc    DWORD PTR [esi+ebx*4]
  43a85b:	mov    eax,0x83cc13
  43a860:	hlt    
  43a861:	inc    DWORD PTR [eax]
  43a863:	(bad)  
  43a865:	add    edi,edi
  43a867:	scas   al,BYTE PTR es:[edi]
  43a868:	add    dl,cl
  43a86a:	dec    ebp
  43a86b:	adc    DWORD PTR [ebx+0x4fffff89],edi
  43a871:	(bad)  
  43a872:	(bad)  
  43a873:	jl     0x43a841
  43a875:	adc    ecx,esp
  43a877:	mov    cl,0x0
  43a879:	pop    ecx
  43a87a:	xchg   edx,eax
  43a87b:	adc    eax,0x83ff16
  43a880:	int3   
  43a881:	inc    DWORD PTR [eax]
  43a883:	xchg   edx,eax
  43a884:	dec    DWORD PTR [eax]
  43a886:	dec    DWORD PTR [ebx-0x1]
  43a889:	fcmovne st,st(7)
  43a88b:	cmp    BYTE PTR [ebp+0x3dff8900],bh
  43a891:	add    DWORD PTR [ebx-0x2300a3],0x70
  43a898:	mov    ecx,esp
  43a89a:	mov    esi,DWORD PTR es:[eax]
  43a89d:	inc    DWORD PTR [eax]
  43a89f:	dec    DWORD PTR [esp+ecx*8]
  43a8a2:	mov    DWORD PTR [ebp-0x757c0d01],ecx
  43a8a8:	call   DWORD PTR [edi]
  43a8aa:	cs scas eax,DWORD PTR es:[edi]
  43a8ac:	sbb    edi,edi
  43a8ae:	add    BYTE PTR [ecx+0x4000ff5d],cl
  43a8b4:	(bad)  
  43a8b5:	cmp    eax,DWORD PTR [ebx+0x442ffec]
  43a8bb:	mov    ebx,DWORD PTR [eax+0x5bff00ff]
  43a8c1:	add    bh,bh
  43a8c3:	mov    DWORD PTR [eax],eax
  43a8c5:	outs   dx,BYTE PTR ds:[esi]
  43a8c6:	add    BYTE PTR [eax-0x1],dh
  43a8c9:	loopne 0x43a864
  43a8cb:	ins    BYTE PTR es:[edi],dx
  43a8cc:	adc    al,0x0
  43a8ce:	add    bh,bh
  43a8d0:	sub    ah,cl
  43a8d2:	(bad)  
  43a8d3:	jmp    0x43a8d5
  43a8d5:	stc    
  43a8d6:	mov    DWORD PTR [esi],ebx
  43a8d8:	add    ch,cl
  43a8da:	and    cl,BYTE PTR [edi+eiz*2-0x3f003400]
  43a8e1:	add    bh,bh
  43a8e3:	scas   al,BYTE PTR es:[edi]
  43a8e4:	inc    DWORD PTR [esi-0x1]
  43a8e7:	nop
  43a8e8:	add    dh,dl
  43a8ea:	ds xchg ecx,eax
  43a8ec:	pop    ebx
  43a8ed:	(bad)  
  43a8ee:	(bad)  
  43a8ef:	inc    DWORD PTR [edi+edi*8-0x7d]
  43a8f3:	stos   DWORD PTR es:[edi],eax
  43a8f4:	inc    DWORD PTR [edi]
  43a8f6:	dec    DWORD PTR [ebp+0x47837400]
  43a8fc:	ins    DWORD PTR es:[edi],dx
  43a8fd:	add    ah,cl
  43a8ff:	add    ah,ah
  43a901:	(bad)  
  43a902:	(bad)  
  43a903:	jns    0x43a88e
  43a905:	cwde   
  43a906:	mov    DWORD PTR [edx],ebx
  43a908:	mov    DWORD PTR [ebx],ecx
  43a90a:	jmp    0x84430894
  43a90f:	add    DWORD PTR [esi-0x77],0x0
  43a913:	pop    esi
  43a914:	push   DWORD PTR [eax]
  43a916:	int3   
  43a917:	sbb    edi,edi
  43a919:	pop    edi
  43a91a:	and    esi,DWORD PTR [edx]
  43a91c:	jp     0x43a91d
  43a91e:	inc    DWORD PTR [eax]
  43a920:	sub    bh,bh
  43a922:	add    BYTE PTR [ecx+0x0],cl
  43a925:	pop    edx
  43a926:	call   FWORD PTR [edx-0x1]
  43a929:	xchg   ebp,eax
  43a92a:	cmp    bl,BYTE PTR [ebp-0x48]
  43a92d:	dec    esp
  43a92f:	dec    DWORD PTR [edi]
  43a931:	(bad)  
  43a932:	call   DWORD PTR [esi+0x4aff0583]
  43a938:	add    BYTE PTR [edi+0x2e],bh
  43a93b:	clc    
  43a93c:	(bad)  
  43a93d:	dec    esp
  43a93f:	jmp    DWORD PTR [esi+0x0]
  43a942:	(bad)  
  43a943:	cmp    esp,ecx
  43a945:	dec    ebx
  43a946:	add    DWORD PTR [ecx],0xffffff83
  43a949:	add    al,0x57
  43a94b:	loope  0x43a940
  43a94d:	inc    DWORD PTR [eax]
  43a94f:	inc    DWORD PTR [ebp-0x7cdf337d]
  43a955:	test   al,0xff
  43a957:	cmp    edi,edi
  43a959:	add    eax,0xff65ba4d
  43a95e:	or     esp,0xfffffff5
  43a961:	mov    DWORD PTR [eax],eax
  43a963:	push   edi
  43a964:	dec    edx
  43a966:	add    al,ah
  43a968:	mov    DWORD PTR [edi-0x8c228b],edx
  43a96e:	int3   
  43a96f:	call   esp
  43a971:	add    ah,cl
  43a973:	and    al,BYTE PTR [eax]
  43a975:	aas    
  43a976:	add    BYTE PTR [eax],dh
  43a978:	add    BYTE PTR [ebx-0x74],dl
  43a97b:	mov    fs,WORD PTR [esi]
  43a97d:	inc    DWORD PTR [eax]
  43a97f:	mov    ebp,eax
  43a981:	add    DWORD PTR [ebx-0xb0767e],0xffffffe4
  43a988:	(bad)  
  43a989:	fdiv   QWORD PTR [ecx]
  43a98b:	dec    eax
  43a98c:	xchg   edi,eax
  43a98d:	add    bh,bh
  43a98f:	add    BYTE PTR [ebp-0x33d80001],bh
  43a995:	ja     0x43a91a
  43a997:	arpl   di,di
  43a999:	jmp    0x43a957
  43a99b:	pop    edi
  43a99c:	pop    ds
  43a99d:	inc    DWORD PTR [eax]
  43a99f:	add    BYTE PTR [ecx],cl
  43a9a1:	(bad)  
  43a9a2:	jmp    FWORD PTR [edi+edi*8]
  43a9a5:	aaa    
  43a9a6:	or     DWORD PTR ds:0x90bb31ff,0xffffffd3
  43a9ad:	mov    DWORD PTR [eax],eax
  43a9af:	xor    edi,0x0
  43a9b2:	add    bl,bh
  43a9b4:	call   DWORD PTR [ecx-0x7d]
  43a9b7:	sti    
  43a9b8:	call   FWORD PTR [ecx]
  43a9ba:	add    al,0x58
  43a9bc:	call   0x43cd75c1
  43a9c1:	inc    DWORD PTR [eax]
  43a9c3:	push   es
  43a9c4:	add    bl,bh
  43a9c6:	int3   
  43a9c7:	xchg   ecx,eax
  43a9c8:	call   ebx
  43a9ca:	out    dx,eax
  43a9cb:	add    esp,DWORD PTR [eax+0x283cc00]
  43a9d1:	(bad)  
  43a9d2:	dec    DWORD PTR [edi-0x4100857d]
  43a9d8:	push   eax
  43a9da:	mov    bh,0x8b
  43a9dc:	outs   dx,BYTE PTR ds:[esi]
  43a9dd:	(bad)  
  43a9de:	inc    DWORD PTR [ebx-0xd7cff97]
  43a9e4:	add    BYTE PTR [edi],ch
  43a9e6:	(bad)  
  43a9e7:	std    
  43a9e8:	add    bl,al
  43a9ea:	pusha  
  43a9eb:	cmp    eax,0x89fc
  43a9f0:	loop   0x43a975
  43a9f2:	int3   
  43a9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a9f4:	add    BYTE PTR [ebx+0x51ff4400],dh
  43a9fa:	add    DWORD PTR [esi],0xffffff8b
  43a9fd:	inc    DWORD PTR [eax]
  43a9ff:	inc    DWORD PTR [ebp-0xff0000]
  43aa05:	(bad)  
  43aa06:	push   DWORD PTR [edx-0x7d]
  43aa09:	mov    ecx,0x83ed19eb
  43aa0e:	add    bh,bh
  43aa10:	repnz cmp edi,0xb
  43aa14:	jmp    esi
  43aa16:	add    BYTE PTR [ecx-0x2459a734],dl
  43aa1c:	jg     0x43a9a7
  43aa1e:	(bad)  
  43aa1f:	inc    DWORD PTR [edx]
  43aa21:	cmp    edi,0xffffffe8
  43aa24:	jmp    ebx
  43aa26:	push   DWORD PTR [ebp+0x0]
  43aa29:	push   ebp
  43aa2a:	in     al,0xc2
  43aa2c:	dec    esi
  43aa2d:	(bad)  
  43aa2e:	inc    DWORD PTR [eax]
  43aa30:	or     eax,0x8b00cc
  43aa35:	test   eax,0xa9ff2fff
  43aa3a:	fs mov ch,0xd3
  43aa3d:	add    DWORD PTR [eax],0xffffffff
  43aa40:	hlt    
  43aa41:	add    BYTE PTR [eax],al
  43aa43:	sahf   
  43aa44:	int3   
  43aa45:	(bad)  
  43aa46:	dec    esp
  43aa48:	add    BYTE PTR [eax],ch
  43aa4a:	pop    DWORD PTR [eax+0xffffda]
  43aa50:	sub    al,0x83
  43aa52:	call   DWORD PTR [eax]
  43aa54:	mov    DWORD PTR [esi-0x1],ebx
  43aa57:	cs add bh,al
  43aa5a:	add    bl,bh
  43aa5c:	popa   
  43aa5d:	add    bh,bh
  43aa5f:	mov    edx,edi
  43aa61:	add    bh,bh
  43aa63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa64:	add    BYTE PTR [ebp+0x0],dl
  43aa67:	add    BYTE PTR [eax],al
  43aa69:	arpl   WORD PTR [edx+0x1b],ax
  43aa6c:	pop    es
  43aa6d:	dec    DWORD PTR [ecx-0x7c338401]
  43aa73:	cld    
  43aa74:	jmp    DWORD PTR [eax+0x0]
  43aa77:	popf   
  43aa78:	(bad)  
  43aa79:	mov    ecx,0xfff1307e
  43aa7e:	int3   
  43aa7f:	add    BYTE PTR [ebx-0x1],bh
  43aa82:	add    BYTE PTR [edi+edi*8],ch
  43aa85:	xor    BYTE PTR [ebx+0x3b07005d],al
  43aa8b:	jmp    0xfffb:0xffff8981
  43aa92:	add    BYTE PTR [edi],dh
  43aa94:	jmp    FWORD PTR [edi+0x6cff7e83]
  43aa9a:	add    dl,BYTE PTR [eax+ecx*8]
  43aa9d:	inc    DWORD PTR [ebx-0x5f00]
  43aaa3:	test   al,0x0
  43aaa5:	jge    0x43aaa7
  43aaa7:	cmp    edi,edi
  43aaa9:	cmp    eax,0xff6d6946
  43aaae:	add    BYTE PTR [ecx+0x29ff002a],cl
  43aab4:	call   DWORD PTR [eax]
  43aab6:	int3   
  43aab7:	mov    al,ds:0xf6ace00
  43aabc:	es mov edi,edi
  43aabf:	inc    esi
  43aac1:	(bad)  
  43aac2:	call   DWORD PTR [eax-0x1]
  43aac5:	mov    ecx,0xd400bdff
  43aaca:	mov    ?,edx
  43aacc:	push   es
  43aacd:	int3   
  43aace:	dec    DWORD PTR [ecx+0x7089ff73]
  43aad4:	mov    edx,ecx
  43aad6:	add    BYTE PTR [eax],ch
  43aad8:	mov    DWORD PTR [esi+edi*2-0x8],ebx
  43aadc:	pop    ecx
  43aadd:	add    bh,bh
  43aadf:	add    ah,bh
  43aae1:	(bad)  
  43aae2:	dec    DWORD PTR [ebp+0x400e2ff]
  43aae8:	add    BYTE PTR [eax-0x4428b6],dl
  43aaee:	add    BYTE PTR [ebx+0x3ff83ee],al
  43aaf4:	int3   
  43aaf5:	and    al,0x83
  43aaf7:	dec    edi
  43aaf8:	jmp    FWORD PTR [ebp-0x7c9aaade]
  43aafe:	add    bh,bh
  43ab00:	dec    edx
  43ab01:	inc    DWORD PTR [eax]
  43ab03:	dec    eax
  43ab04:	jmp    FWORD PTR [edi]
  43ab06:	xor    DWORD PTR [eax-0x34],0xffffffeb
  43ab0a:	shr    BYTE PTR [ebx-0x33ff33f8],1
  43ab10:	dec    esp
  43ab12:	mov    DWORD PTR [eax-0x67cf101],eax
  43ab18:	int3   
  43ab19:	fild   WORD PTR [edi-0x16]
  43ab1c:	daa    
  43ab1d:	inc    DWORD PTR [eax]
  43ab1f:	(bad)  
  43ab20:	inc    BYTE PTR [eax]
  43ab22:	inc    DWORD PTR [esi]
  43ab24:	add    BYTE PTR [eax+0x0],dl
  43ab27:	imul   edi,edi,0x6
  43ab2a:	js     0x43ab8a
  43ab2c:	inc    eax
  43ab2d:	inc    DWORD PTR [eax]
  43ab2f:	add    BYTE PTR [ebx-0x76b10001],ah
  43ab35:	ins    DWORD PTR es:[edi],dx
  43ab36:	add    BYTE PTR [edi],ch
  43ab38:	add    bl,ah
  43ab3a:	data16 out dx,al
  43ab3c:	pop    ss
  43ab3d:	add    bh,bh
  43ab3f:	inc    esi
  43ab41:	(bad)  
  43ab42:	jmp    DWORD PTR [eax+eax*1]
  43ab45:	jmp    0x6ec75fd3
  43ab4a:	mov    WORD PTR [ebx],?
  43ab4c:	ins    DWORD PTR es:[edi],dx
  43ab4d:	mov    DWORD PTR [ecx-0x3376d277],ecx
  43ab53:	jmp    FWORD PTR gs:[ebx-0x7d]
  43ab57:	fwait
  43ab58:	add    DWORD PTR [edi+ebx*8+0xcc1663],0xffffffff
  43ab60:	push   eax
  43ab61:	add    BYTE PTR [eax],al
  43ab63:	inc    edx
  43ab64:	jmp    DWORD PTR [esp+ecx*8-0x1d]
  43ab68:	add    BYTE PTR [eax],dl
  43ab6a:	call   0x89c6d87b
  43ab6f:	call   DWORD PTR [edi-0x1]
  43ab72:	call   eax
  43ab74:	(bad)  
  43ab75:	cmp    DWORD PTR [eax],eax
  43ab77:	sub    bh,bh
  43ab79:	pop    eax
  43ab7a:	aad    0x9f
  43ab7c:	iret   
  43ab7d:	mov    DWORD PTR [eax],eax
  43ab7f:	jmp    DWORD PTR [ebx-0x1]
  43ab82:	and    DWORD PTR [edi-0x34],0xffffffb1
  43ab86:	add    DWORD PTR [ebx+0x635690ff],0xffffffb6
  43ab8d:	(bad)  
  43ab8e:	(bad)  
  43ab8f:	(bad)  
  43ab90:	in     eax,dx
  43ab91:	add    bh,bh
  43ab93:	sbb    al,BYTE PTR [ebx-0x33e8ff59]
  43ab99:	imul   eax,DWORD PTR [eax],0xffffff96
  43ab9c:	cmp    eax,0x86ccccff
  43aba1:	inc    DWORD PTR [ebx-0x33f433b6]
  43aba7:	sub    edi,edi
  43aba9:	lea    ebx,[esi-0xcff8]
  43abaf:	call   FWORD PTR [edi-0x7d]
  43abb2:	and    esp,0xffffffff
  43abb5:	outs   dx,BYTE PTR ds:[esi]
  43abb6:	call   FWORD PTR [esi+0x804b4cc]
  43abbc:	push   edx
  43abbd:	add    bh,bh
  43abbf:	mov    esi,ebp
  43abc1:	add    bh,bh
  43abc3:	add    eax,DWORD PTR [eax]
  43abc5:	xchg   DWORD PTR [ebx+0x1deb00c0],eax
  43abcb:	inc    ebp
  43abcc:	mov    cs,esp
  43abce:	mov    edi,edi
  43abd0:	mov    dh,0x0
  43abd2:	dec    DWORD PTR [ecx+0x72ff83cc]
  43abd8:	int3   
  43abd9:	cdq    
  43abda:	jl     0x43abf0
  43abdc:	inc    DWORD PTR gs:[eax]
  43abdf:	(bad)  
  43abe0:	mov    edi,0xff39ffff
  43abe5:	ins    BYTE PTR es:[edi],dx
  43abe6:	int3   
  43abe7:	cli    
  43abe8:	add    BYTE PTR [ebp-0x14],ch
  43abeb:	(bad)
  43abef:	add    eax,0x0
  43abf2:	(bad)  
  43abf3:	std    
  43abf4:	mov    DWORD PTR [ebx+eax*4-0x5a91ff75],esi
  43abfb:	out    0x4b,eax
  43abfd:	(bad)  
  43abfe:	(bad)  
  43abff:	call   FWORD PTR [ebp-0x33bf007d]
  43ac05:	mov    bl,0xff
  43ac07:	out    dx,al
  43ac08:	cmp    DWORD PTR [eax],0xffffffc3
  43ac0b:	lds    ebp,FWORD PTR [esi]
  43ac0d:	inc    DWORD PTR [ebx-0x7100]
  43ac13:	jmp    0x43ac14
  43ac15:	lock int3 
  43ac17:	xor    al,0xff
  43ac19:	xor    al,0x11
  43ac1b:	loopne 0x43ac1b
  43ac1d:	dec    esp
  43ac1f:	(bad)  
  43ac20:	cmp    al,0x83
  43ac22:	add    ch,ch
  43ac24:	dec    ebx
  43ac26:	jmp    FWORD PTR [ecx-0x34853301]
  43ac2c:	sbb    eax,0x37ffff00
  43ac31:	mov    edi,edi
  43ac33:	xor    eax,0xaeff0b00
  43ac38:	mov    DWORD PTR [ebx],eax
  43ac3a:	mov    fs,WORD PTR ds:0xffff8367
  43ac40:	xchg   esp,eax
  43ac41:	inc    DWORD PTR [eax]
  43ac43:	xor    ecx,esp
  43ac45:	jge    0x43ac46
  43ac47:	pop    ss
  43ac48:	add    ah,al
  43ac4a:	adc    DWORD PTR [edx-0x13],eax
  43ac4d:	add    BYTE PTR [ebx-0x2401],al
  43ac53:	lahf   
  43ac54:	add    BYTE PTR [edi],dl
  43ac56:	sub    DWORD PTR [edx],0xffffffff
  43ac59:	scas   al,BYTE PTR es:[edi]
  43ac5a:	ins    DWORD PTR es:[edi],dx
  43ac5b:	or     DWORD PTR [ebp-0xb33ff34],ebp
  43ac61:	add    DWORD PTR [eax],0xffffffb8
  43ac64:	jmp    DWORD PTR [ebx-0x1]
  43ac67:	mov    eax,0xf9f301ff
  43ac6c:	jae    0x83b4ac71
  43ac72:	int3   
  43ac73:	push   ecx
  43ac74:	dec    DWORD PTR [ecx-0x1]
  43ac77:	cld    
  43ac78:	add    BYTE PTR [esi+edx*8-0x4a39],cl
  43ac7f:	add    BYTE PTR [ebx-0x1],cl
  43ac82:	int3   
  43ac83:	add    edi,edi
  43ac85:	fisttp WORD PTR [ecx-0x4e257c89]
  43ac8b:	jns    0x43ac56
  43ac8d:	(bad)  
  43ac8e:	(bad)  
  43ac8f:	call   DWORD PTR [edi-0x1]
  43ac92:	add    ah,al
  43ac94:	(bad)  
  43ac95:	mov    edi,0x2cff0800
  43ac9a:	mov    bl,0x4b
  43ac9c:	jmp    0x43ac9e
  43ac9e:	cmp    edi,0x38
  43aca1:	cmp    edi,0x6a
  43aca4:	push   DWORD PTR [ebp-0x22007c00]
  43acaa:	dec    ecx
  43acab:	outs   dx,BYTE PTR ds:[esi]
  43acac:	jmp    0xcc00:0x3cffcc00
  43acb3:	leave  
  43acb4:	add    BYTE PTR [ecx-0x4b00677d],bl
  43acba:	mov    cl,0xd8
  43acbc:	nop
  43acbd:	(bad)  
  43acbe:	inc    DWORD PTR [eax]
  43acc0:	or     DWORD PTR [ebx-0x137c1f01],eax
  43acc6:	jmp    ebp
  43acc8:	jmp    DWORD PTR [ecx+0xc0b2e3]
  43acce:	add    bh,bh
  43acd0:	mov    eax,DWORD PTR [ebx-0x15003034]
  43acd6:	mov    DWORD PTR [edx],esp
  43acd8:	add    BYTE PTR [edi-0x7cffaccf],ch
  43acde:	mov    edi,edi
  43ace0:	jge    0x43ac6b
  43ace2:	add    BYTE PTR [ebp+0x5ff4a00],ch
  43ace8:	call   FWORD PTR [eax]
  43acea:	lods   eax,DWORD PTR ds:[esi]
  43aceb:	mov    ds:0xff1c,eax
  43acf0:	fwait
  43acf1:	inc    DWORD PTR [eax]
  43acf3:	jnp    0x43acf4
  43acf5:	pop    esi
  43acf6:	jmp    DWORD PTR [eax-0x1]
  43acf9:	jmp    0x43ad65
  43acfb:	mov    ecx,0x83ffcca9
  43ad00:	mov    eax,0x1fcc83
  43ad05:	in     eax,dx
  43ad06:	add    BYTE PTR [ecx+0x91f9aff],cl
  43ad0c:	in     eax,dx
  43ad0d:	mov    edi,edi
  43ad0f:	(bad)  
  43ad10:	mov    ebx,0xff8eff00
  43ad15:	dec    edx
  43ad16:	add    BYTE PTR [eax],dh
  43ad18:	dec    edi
  43ad1a:	das    
  43ad1b:	ror    DWORD PTR ds:0xf00ff00,1
  43ad21:	dec    esp
  43ad23:	mov    ecx,0xdbff3f00
  43ad28:	call   ebp
  43ad2a:	inc    esp
  43ad2b:	add    bh,al
  43ad2d:	inc    DWORD PTR [ebx-0xff9a00]
  43ad33:	lock add BYTE PTR [ebx-0x7d],dh
  43ad37:	and    BYTE PTR [eax],al
  43ad39:	jecxz  0x43ad46
  43ad3b:	mov    esi,0xccff27
  43ad40:	sub    al,BYTE PTR [eax]
  43ad42:	(bad)  
  43ad43:	jle    0x43ad45
  43ad45:	pop    eax
  43ad46:	add    DWORD PTR [esi],0x0
  43ad49:	jnp    0x43ad99
  43ad4b:	(bad)  
  43ad4c:	cmp    eax,0x53ffff00
  43ad51:	(bad)  
  43ad52:	push   DWORD PTR [edi]
  43ad54:	(bad)  
  43ad55:	jl     0x43ad56
  43ad57:	into   
  43ad58:	call   DWORD PTR [eax*8-0x1a3a]
  43ad5f:	(bad)  
  43ad60:	cmp    eax,DWORD PTR [ebx+0x25ff5c00]
  43ad66:	(bad)  
  43ad67:	aas    
  43ad68:	cmp    eax,0x6f
  43ad6b:	lds    ebp,FWORD PTR [esi-0x1]
  43ad6e:	(bad)  
  43ad6f:	jmp    edx
  43ad71:	cmp    edi,0xffffff83
  43ad74:	add    BYTE PTR [ebp+0x46838700],ah
  43ad7a:	stc    
  43ad7b:	push   ds
  43ad7c:	mov    al,ds:0x30ccffff
  43ad81:	(bad)  
  43ad82:	dec    DWORD PTR ds:0x8f007e00
  43ad88:	add    BYTE PTR [esi+0x76],al
  43ad8b:	je     0x43ad6a
  43ad8d:	(bad)  
  43ad8e:	(bad)  
  43ad8f:	call   DWORD PTR [esi]
  43ad91:	add    DWORD PTR [ebx-0x7cb77c2e],0xffffffe3
  43ad98:	add    BYTE PTR [esi],dh
  43ad9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ad9b:	dec    bh
  43ad9d:	cmp    edi,0xffffff83
  43ada0:	add    BYTE PTR [eax],0xff
  43ada3:	sbb    bh,bh
  43ada5:	dec    edx
  43ada6:	int3   
  43ada7:	mov    dh,0xff
  43ada9:	mov    al,0x1b
  43adab:	mov    WORD PTR ds:[ebx-0x7c7cf800],ax
  43adb3:	sahf   
  43adb4:	call   DWORD PTR [esi]
  43adb6:	adc    DWORD PTR ds:0xffe49b83,0x79
  43adbd:	inc    DWORD PTR [eax]
  43adbf:	push   DWORD PTR [eax+0x0]
  43adc2:	push   DWORD PTR [esi-0x1]
  43adc5:	mov    dl,0x0
  43adc7:	mov    eax,0xcb6bbcff
  43adcc:	popf   
  43adcd:	inc    DWORD PTR [ebx+0x98ff]
  43add3:	aam    0xff
  43add5:	inc    esi
  43add6:	add    BYTE PTR [esi],cl
  43add8:	inc    ebx
  43adda:	push   ecx
  43addb:	lds    ebp,FWORD PTR [edi+edi*8]
  43adde:	int3   
  43addf:	(bad)  
  43ade0:	fmul   st,st(4)
  43ade2:	int3   
  43ade3:	imul   eax,DWORD PTR [ebx-0x73ff5f],0xffffffe9
  43adea:	push   cs
  43adeb:	cmp    al,0x34
  43aded:	(bad)  
  43adee:	inc    DWORD PTR [eax]
  43adf0:	inc    BYTE PTR [eax]
  43adf2:	(bad)  
  43adf3:	mov    esp,0xceff8fff
  43adf8:	call   FWORD PTR [ebx-0x6c]
  43adfb:	sub    eax,0xff18
  43ae00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae01:	(bad)  
  43ae02:	call   FWORD PTR ds:0x70ff74ff
  43ae08:	add    BYTE PTR [esi+0xbc9931],cl
  43ae0e:	add    ah,cl
  43ae10:	pop    edi
  43ae11:	add    BYTE PTR [eax],al
  43ae13:	dec    esi
  43ae14:	inc    DWORD PTR [edx]
  43ae16:	jmp    FWORD PTR [esi-0x1]
  43ae19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae1a:	(bad)  
  43ae1b:	jns    0x43ae11
  43ae1d:	(bad)  
  43ae1e:	(bad)  
  43ae1f:	inc    ecx
  43ae21:	inc    DWORD PTR [ebx-0x903342]
  43ae27:	mov    cl,0xff
  43ae29:	jmp    0x83a86318
  43ae2e:	inc    DWORD PTR [eax]
  43ae30:	mov    ebx,0xcc9500ff
  43ae35:	out    dx,al
  43ae36:	(bad)  
  43ae37:	jmp    0xa8c55b3b
  43ae3c:	mov    eax,ds:0xd10000ff
  43ae41:	dec    DWORD PTR [ecx-0x8976ec]
  43ae47:	xchg   DWORD PTR [ebx+0x60e560b2],eax
  43ae4d:	(bad)  
  43ae4e:	inc    DWORD PTR [eax]
  43ae50:	(bad)  
  43ae51:	dec    esp
  43ae53:	dec    ah
  43ae55:	aas    
  43ae56:	inc    DWORD PTR [esi-0x444db577]
  43ae5c:	mov    eax,ds:0xf800ffff
  43ae61:	add    bh,bh
  43ae63:	mov    eax,ds:0xd100fd00
  43ae68:	add    BYTE PTR [ecx+0x1e],dl
  43ae6b:	adc    BYTE PTR [edx-0x4c330100],bh
  43ae71:	inc    DWORD PTR [eax]
  43ae73:	inc    ecx
  43ae74:	push   ebx
  43ae76:	add    BYTE PTR [edx-0x503d4f01],ah
  43ae7c:	adc    DWORD PTR [ecx+0x88ff83],ecx
  43ae82:	int3   
  43ae83:	scas   eax,DWORD PTR es:[edi]
  43ae84:	inc    DWORD PTR [ebx-0x7d]
  43ae87:	xor    BYTE PTR [ebx+0xa5e6c67],al
  43ae8d:	(bad)  
  43ae8e:	dec    esp
  43ae90:	jp     0x43ae91
  43ae92:	inc    DWORD PTR [ebx+0x0]
  43ae95:	aas    
  43ae96:	dec    DWORD PTR [eax-0xfaccc01]
  43ae9c:	xchg   ecx,eax
  43ae9d:	add    bh,bh
  43ae9f:	add    BYTE PTR [edi-0x7d],ch
  43aea2:	add    BYTE PTR [ecx],bh
  43aea4:	push   edx
  43aea6:	call   DWORD PTR [eax+eax*1-0x5a]
  43aeaa:	adc    al,0x9c
  43aeac:	bound  ecx,QWORD PTR [ecx-0x6d7c77]
  43aeb2:	int3   
  43aeb3:	iret   
  43aeb4:	inc    DWORD PTR [ebx]
  43aeb6:	add    BYTE PTR [ecx+ecx*4+0x3e29e8f7],bl
  43aebd:	add    bh,bh
  43aebf:	add    BYTE PTR [esi-0xcc0100],bh
  43aec5:	aam    0xff
  43aec7:	outs   dx,DWORD PTR ds:[esi]
  43aec8:	add    ch,cl
  43aeca:	fwait
  43aecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aecc:	mov    ch,0xff
  43aece:	mov    DWORD PTR [eax],eax
  43aed0:	sar    bh,1
  43aed2:	(bad)  
  43aed3:	fild   WORD PTR [ebx+0x3bff3b]
  43aed9:	add    DWORD PTR [ecx],ebx
  43aedb:	mov    bl,0xec
  43aedd:	mov    DWORD PTR [eax],eax
  43aedf:	call   DWORD PTR [ebp+0x0]
  43aee2:	push   DWORD PTR [ecx+0x5aff10ff]
  43aee8:	inc    DWORD PTR [edi-0x73cf99]
  43aeee:	int3   
  43aeef:	add    BYTE PTR [ebx],cl
  43aef1:	add    bh,bh
  43aef3:	repz add ch,dh
  43aef6:	sbb    DWORD PTR [eax],0xffffffff
  43aef9:	ins    DWORD PTR es:[edi],dx
  43aefa:	aad    0x5a
  43aefc:	xor    edi,edi
  43aefe:	add    DWORD PTR [eax],0xffffff90
  43af01:	inc    DWORD PTR [ebx-0xa8ff3a]
  43af07:	rol    DWORD PTR [eax],0x6f
  43af0a:	mov    eax,es:0xffffff4a
  43af10:	stc    
  43af11:	inc    DWORD PTR [eax]
  43af13:	xchg   ebx,eax
  43af14:	add    BYTE PTR [edx-0x1],al
  43af17:	sbb    DWORD PTR [ebx+0x661d8c43],eax
  43af1d:	or     DWORD PTR [ecx+0xc4ff],0x7e
  43af24:	add    BYTE PTR [esi+0x72ff36ff],ch
  43af2a:	mov    edi,0xff83fc2e
  43af2f:	int3   
  43af30:	xlat   BYTE PTR ds:[ebx]
  43af31:	int3   
  43af32:	inc    DWORD PTR [ebp-0x77]
  43af35:	mov    dh,0x83
  43af37:	les    eax,FWORD PTR [ebx-0x4c762e29]
  43af3d:	add    DWORD PTR [ebx+0x2b00],0xffffffe5
  43af44:	(bad)  
  43af45:	dec    DWORD PTR [ecx-0x6b16001a]
  43af4b:	out    0x49,eax
  43af4d:	or     DWORD PTR [ecx-0x76766434],0x72
  43af54:	jmp    DWORD PTR [ebx]
  43af56:	(bad)  
  43af57:	fild   DWORD PTR [ebx-0x3c19d2bd]
  43af5d:	mov    DWORD PTR [eax],eax
  43af5f:	push   DWORD PTR [eax]
  43af61:	int3   
  43af62:	adc    DWORD PTR [eax+0x0],0x78
  43af66:	jmp    FWORD PTR [ebx]
  43af68:	jmp    FWORD PTR [esi+eiz*4-0xae6e]
  43af6f:	add    BYTE PTR [ecx],cl
  43af71:	add    BYTE PTR [eax],al
  43af73:	pushf  
  43af74:	add    BYTE PTR [edx+0xe83c5ff],cl
  43af7a:	sub    BYTE PTR [ebx-0xff00a9],ah
  43af80:	test   BYTE PTR [ecx-0xd002f00],0x89
  43af87:	xor    edi,edi
  43af89:	ds enter 0xbc99,0xff
  43af8e:	dec    DWORD PTR [ecx-0x21337cdf]
  43af94:	int3   
  43af95:	idiv   edi
  43af97:	bound  eax,QWORD PTR [eax]
  43af99:	push   0x6e
  43af9b:	push   eax
  43af9c:	aas    
  43af9d:	add    DWORD PTR [eax],0xffffffff
  43afa0:	mov    esi,0xffb3ffcc
  43afa5:	xchg   esp,eax
  43afa6:	(bad)  
  43afa7:	jmp    0x15:0x9866c700
  43afae:	int3   
  43afaf:	call   FWORD PTR [ecx+ecx*4-0x1]
  43afb3:	or     al,0xff
  43afb5:	stos   BYTE PTR es:[edi],al
  43afb6:	and    DWORD PTR ds:0x23f5e389,0xffffff84
  43afbd:	inc    DWORD PTR [eax]
  43afbf:	jmp    FWORD PTR [edx]
  43afc1:	add    BYTE PTR [eax],al
  43afc3:	lock int3 
  43afc5:	(bad)  
  43afc6:	(bad)  
  43afc7:	jmp    0x550dd4cb
  43afcc:	popa   
  43afcd:	mov    edi,edi
  43afcf:	jmp    DWORD PTR [ebp+0x0]
  43afd2:	call   DWORD PTR [ebp+0x59ff0783]
  43afd8:	jmp    DWORD PTR [ebp-0xab6763]
  43afde:	dec    DWORD PTR [ecx+0x4f00ffc2]
  43afe4:	dec    DWORD PTR [eax+eax*1-0x35]
  43afe8:	inc    DWORD PTR [esi]
  43afea:	pop    edx
  43afeb:	mov    al,ds:0xff00ffec
  43aff0:	lock add bh,bh
  43aff3:	cmp    edi,edi
  43aff5:	fild   DWORD PTR [eax]
  43aff7:	(bad)  
  43aff8:	mov    DWORD PTR [edx],eax
  43affa:	or     DWORD PTR [ebp+0xffffce],ecx
  43b000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b001:	add    BYTE PTR [ecx-0x2500bf],cl
  43b007:	push   cs
  43b008:	(bad)  
  43b009:	mov    edx,0x82ab9d
  43b00e:	mov    edi,edi
  43b010:	sti    
  43b011:	add    BYTE PTR [eax],al
  43b013:	or     DWORD PTR [ebx-0x827650],eax
  43b019:	mov    edx,0x83c8e955
  43b01e:	dec    esp
  43b020:	ins    DWORD PTR es:[edi],dx
  43b021:	cmp    edi,0x3b
  43b024:	mov    ebx,esp
  43b026:	call   FWORD PTR [edi+edi*8]
  43b029:	iret   
  43b02a:	sub    eax,0xffc9ee
  43b02f:	(bad)  
  43b030:	cld    
  43b031:	(bad)  
  43b032:	push   DWORD PTR [ebp+0x3b0087ff]
  43b038:	and    DWORD PTR [esi],0x4b
  43b03b:	mov    esi,0xffff16
  43b040:	(bad)  
  43b041:	dec    DWORD PTR [ecx+0x3eff51]
  43b047:	cmp    bh,bh
  43b049:	pop    eax
  43b04a:	imul   ebx,DWORD PTR [esi-0x76ffffa0],0x28ffff15
  43b054:	add    ch,ch
  43b056:	(bad)  
  43b057:	cmp    ecx,DWORD PTR [ecx+0x16f270db]
  43b05d:	(bad)  
  43b05e:	(bad)  
  43b05f:	jmp    DWORD PTR [edi+0x2200ff]
  43b065:	icebp  
  43b066:	add    ch,cl
  43b068:	dec    DWORD PTR [edi-0x7df351]
  43b06e:	inc    DWORD PTR [eax]
  43b070:	xchg   edx,eax
  43b071:	add    bh,bh
  43b073:	adc    edi,edi
  43b075:	inc    esi
  43b076:	or     esp,0xffffffff
  43b079:	jecxz  0x43b0a7
  43b07b:	lea    edx,[eax-0x1]
  43b07e:	cmp    edi,0xffffffb1
  43b081:	dec    esp
  43b083:	ror    BYTE PTR [ecx-0x7cff0024],1
  43b089:	stos   DWORD PTR es:[edi],eax
  43b08a:	ins    DWORD PTR es:[edi],dx
  43b08b:	pop    ebx
  43b08c:	outs   dx,BYTE PTR ds:[esi]
  43b08d:	add    BYTE PTR [ecx-0x7c00e700],cl
  43b093:	je     0x43b094
  43b095:	dec    esp
  43b096:	add    al,ah
  43b098:	add    BYTE PTR [ebp+0x66],bl
  43b09b:	dec    edx
  43b09c:	leave  
  43b09d:	add    bh,bh
  43b09f:	sub    DWORD PTR [edx],0xffffffff
  43b0a2:	jmp    DWORD PTR [ecx]
  43b0a4:	int3   
  43b0a5:	xlat   BYTE PTR ds:[ebx]
  43b0a6:	dec    DWORD PTR [eax]
  43b0a8:	mov    DWORD PTR [eax-0x7caafe5c],edx
  43b0ae:	cmp    edi,0x7d
  43b0b1:	add    ah,cl
  43b0b3:	mov    edi,0x2bff1fff
  43b0b8:	sub    DWORD PTR [esi+0x48],0xffffffe3
  43b0bc:	push   esi
  43b0bd:	or     esp,0xffffffff
  43b0c0:	xchg   esp,eax
  43b0c1:	add    BYTE PTR [eax],al
  43b0c3:	call   0x2500:0x500087ff
  43b0ca:	nop
  43b0cb:	retf   
  43b0cc:	in     eax,0x0
  43b0ce:	int3   
  43b0cf:	add    BYTE PTR [edi+edi*8-0x40331500],bl
  43b0d6:	add    BYTE PTR [edi-0x5a01757d],cl
  43b0dc:	jb     0x43b067
  43b0de:	(bad)  
  43b0df:	jmp    DWORD PTR [ebx]
  43b0e1:	add    bh,bh
  43b0e3:	lock xor DWORD PTR [ebp-0xb33ea00],0xffffffb8
  43b0eb:	dec    esi
  43b0ec:	xchg   edx,eax
  43b0ed:	int3   
  43b0ee:	(bad)  
  43b0ef:	(bad)  
  43b0f0:	mov    ebx,0xffb5ccff
  43b0f5:	sahf   
  43b0f6:	int3   
  43b0f7:	mov    ch,0x0
  43b0f9:	pop    ecx
  43b0fa:	fnstsw WORD PTR [edi+0xc]
  43b0fd:	cmp    edi,0xffffff83
  43b100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b101:	dec    DWORD PTR [ecx-0x7cfe7c1c]
  43b107:	into   
  43b108:	inc    DWORD PTR [ebp+eiz*2-0x7c33b63a]
  43b10f:	add    BYTE PTR [ebp-0x1],ah
  43b112:	add    BYTE PTR [ebx-0x7d],cl
  43b115:	and    eax,0xc9002683
  43b11a:	fmul   st,st(5)
  43b11c:	js     0x43b11e
  43b11e:	add    DWORD PTR [eax],0x17
  43b121:	add    bh,bh
  43b123:	int    0xcc
  43b125:	pop    eax
  43b126:	int3   
  43b127:	mov    es,WORD PTR [eax]
  43b129:	mov    ch,0xc
  43b12b:	scas   al,BYTE PTR es:[edi]
  43b12c:	out    0x0,al
  43b12e:	mov    edi,edi
  43b130:	mov    ebx,0xff830000
  43b135:	and    ecx,DWORD PTR [ecx-0x5a7765b]
  43b13b:	lea    edi,[ebx-0x1]
  43b13e:	add    BYTE PTR [eax],al
  43b140:	in     al,0x0
  43b142:	inc    DWORD PTR [edx]
  43b144:	jmp    DWORD PTR [eax+0x0]
  43b147:	aad    0xff
  43b149:	popf   
  43b14a:	add    BYTE PTR [esi+eax*2-0x1],dh
  43b14e:	inc    DWORD PTR [ebx-0x367c7cd4]
  43b154:	call   DWORD PTR [esi-0xa339101]
  43b15a:	mov    edx,0xffcc7bfc
  43b15f:	inc    edi
  43b161:	dec    DWORD PTR [ecx+0x11005b]
  43b167:	repnz (bad) 
  43b169:	fisubr DWORD PTR [ecx-0x78b1]
  43b16f:	(bad)  
  43b170:	jmp    0x43b171
  43b172:	add    al,dl
  43b174:	add    BYTE PTR [edi-0x25fff201],ch
  43b17a:	in     eax,dx
  43b17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b17c:	mov    ds:0x3c00ff83,eax
  43b181:	add    BYTE PTR [ebx-0x31ffed],al
  43b187:	ud0    ecx,edi
  43b18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b18b:	data16 mov ds:0x9583ff89,al
  43b191:	(bad)  
  43b192:	inc    esp
  43b194:	add    ah,cl
  43b196:	add    bh,cl
  43b198:	mov    DWORD PTR [esi-0x1057fb],ebx
  43b19e:	or     esp,0x9
  43b1a1:	int3   
  43b1a2:	add    bl,cl
  43b1a4:	add    cl,ch
  43b1a6:	add    BYTE PTR ds:0xadd3b1cc,ch
  43b1ac:	and    edi,edi
  43b1ae:	(bad)  
  43b1af:	(bad)  
  43b1b0:	cmp    edi,edi
  43b1b2:	(bad)  
  43b1b3:	(bad)  
  43b1b5:	add    BYTE PTR cs:[edi-0x31802b01],dh
  43b1bc:	outs   dx,DWORD PTR ds:[esi]
  43b1bd:	add    bh,bh
  43b1bf:	inc    DWORD PTR [eax-0x1]
  43b1c2:	dec    DWORD PTR [edx-0x6c000800]
  43b1c8:	dec    DWORD PTR [ebx]
  43b1ca:	pop    esi
  43b1cb:	jge    0x43b22e
  43b1cd:	inc    DWORD PTR [ebx+0xcc8bff]
  43b1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b1d4:	add    BYTE PTR [ebx],bl
  43b1d6:	push   DWORD PTR [edi+edi*8-0x7d]
  43b1da:	scas   eax,DWORD PTR es:[edi]
  43b1db:	sbb    eax,0xcccc2c
  43b1e0:	fcos   
  43b1e2:	jmp    DWORD PTR [ecx+0x51ff30ff]
  43b1e8:	cmp    DWORD PTR [edi],0x37
  43b1eb:	stos   DWORD PTR es:[edi],eax
  43b1ec:	sbb    ecx,DWORD PTR [ecx-0x7c49ff01]
  43b1f2:	add    BYTE PTR [esi],ch
  43b1f4:	sub    DWORD PTR [esi-0x1],0x6d
  43b1f8:	sub    DWORD PTR [ecx+0x91215c],0xffffffff
  43b1ff:	and    DWORD PTR [esi-0x33c70000],0xffffff94
  43b206:	dec    DWORD PTR [edi]
  43b208:	(bad)  
  43b209:	ficomp DWORD PTR [ebx]
  43b20b:	mov    dh,0xe0
  43b20d:	cmp    edi,0xffffffff
  43b210:	clc    
  43b211:	or     DWORD PTR [ecx-0x7c2600f0],0x55
  43b218:	dec    DWORD PTR [esp+ebx*4-0x7c00757b]
  43b21f:	call   FWORD PTR [edi+edi*8-0x2f33b000]
  43b226:	add    ch,bh
  43b228:	mov    esp,edi
  43b22a:	ins    BYTE PTR es:[edi],dx
  43b22b:	bound  ecx,QWORD PTR [edx]
  43b22d:	add    BYTE PTR [ebx+0x834d00],al
  43b233:	jg     0x43b234
  43b235:	int3   
  43b236:	add    dl,bl
  43b238:	int3   
  43b239:	out    0x48,al
  43b23b:	push   eax
  43b23c:	xchg   esp,eax
  43b23d:	(bad)  
  43b23e:	inc    DWORD PTR [eax]
  43b240:	ja     0x43b241
  43b242:	jmp    ebx
  43b244:	(bad)  
  43b245:	inc    BYTE PTR [ebx+0x7b9aff69]
  43b24b:	inc    esp
  43b24c:	push   0x0
  43b24e:	cmp    edi,0x76
  43b251:	add    BYTE PTR [ebx-0x2c7c98],al
  43b257:	inc    edx
  43b258:	add    BYTE PTR [edx],bl
  43b25a:	mov    ds:0xb298,eax
  43b25f:	jmp    FWORD PTR [ebp-0x1]
  43b262:	inc    edx
  43b264:	(bad)  
  43b265:	fcmovne st,st(4)
  43b267:	add    bh,bh
  43b269:	pop    ds
  43b26a:	cmp    DWORD PTR [esi-0x7c33005b],eax
  43b270:	push   edx
  43b271:	cmp    edi,0xffffff8a
  43b274:	jmp    esp
  43b276:	add    BYTE PTR [esi+0x495d5700],cl
  43b27c:	outs   dx,DWORD PTR ds:[esi]
  43b27d:	(bad)  
  43b27e:	dec    esp
  43b280:	daa    
  43b281:	int3   
  43b282:	inc    DWORD PTR [edx-0x1]
  43b285:	test   ah,cl
  43b287:	aam    0x0
  43b289:	sti    
  43b28a:	adc    eax,0x89cc3d88
  43b28f:	call   FWORD PTR [ecx]
  43b291:	int3   
  43b292:	call   FWORD PTR [esi-0x1]
  43b295:	call   0xc2af:0x9289aa00
  43b29c:	push   es
  43b29d:	(bad)  
  43b29e:	(bad)  
  43b29f:	(bad)  
  43b2a0:	out    dx,eax
  43b2a1:	add    BYTE PTR [ebx-0x187658],al
  43b2a7:	adc    al,0xff
  43b2a9:	repz scas al,BYTE PTR es:[edi]
  43b2ab:	data16 inc BYTE PTR [ebx-0xc0ff7d]
  43b2b2:	dec    DWORD PTR [edx+0x69ff7b89]
  43b2b8:	call   DWORD PTR [ecx]
  43b2ba:	add    dh,BYTE PTR [edx-0xff00f3]
  43b2c0:	or     DWORD PTR [ecx+0x5c838bff],ecx
  43b2c6:	int3   
  43b2c7:	(bad)  
  43b2c9:	mov    ch,0xe
  43b2cb:	je     0x43b32c
  43b2cd:	int3   
  43b2ce:	(bad)  
  43b2cf:	push   DWORD PTR [edi-0x7c470000]
  43b2d5:	xchg   ecx,eax
  43b2d6:	xor    DWORD PTR [eax+eax*1+0x1d9f4434],0xffffffff
  43b2de:	add    DWORD PTR [eax],0xffffffea
  43b2e1:	(bad)  
  43b2e2:	push   DWORD PTR [ebp-0x1]
  43b2e5:	mov    edi,0xbfffa0ff
  43b2ea:	mov    edx,0xffff4630
  43b2ef:	or     DWORD PTR [esi],0xffffffff
  43b2f2:	adc    DWORD PTR [ecx-0x1],0x57
  43b2f6:	and    DWORD PTR [ebx+0x2f8e5c00],0xffffffd3
  43b2fd:	add    BYTE PTR [ebx-0x7cfd01],al
  43b303:	inc    edi
  43b304:	add    BYTE PTR [ebx-0x1],bh
  43b307:	out    0x0,al
  43b309:	lahf   
  43b30a:	inc    ecx
  43b30b:	shr    esp,1
  43b30d:	int3   
  43b30e:	or     esp,0x12
  43b311:	(bad)  
  43b312:	push   DWORD PTR [esi]
  43b314:	mov    DWORD PTR [ebx+0x0],edx
  43b317:	out    dx,eax
  43b318:	dec    DWORD PTR [eax]
  43b31a:	cmp    DWORD PTR [edi+ebx*8-0x1],esi
  43b31e:	dec    esp
  43b320:	inc    DWORD PTR gs:[eax]
  43b323:	dec    eax
  43b324:	add    BYTE PTR [ebx-0x77],bh
  43b327:	mov    eax,DWORD PTR [ebx+0x660efc0f]
  43b32d:	(bad)  
  43b32e:	(bad)  
  43b32f:	dec    ebx
  43b331:	int3   
  43b332:	dec    edi
  43b334:	(bad)  
  43b335:	cmp    cl,BYTE PTR [ecx-0x43cd7c93]
  43b33b:	mov    ah,0x2c
  43b33d:	add    BYTE PTR [ebx-0x76008d01],al
  43b343:	push   ebx
  43b344:	call   edi
  43b346:	inc    DWORD PTR [ebp+0x0]
  43b349:	push   esi
  43b34a:	jo     0x43b38b
  43b34c:	cmp    DWORD PTR [eax],eax
  43b34e:	or     DWORD PTR [ecx-0x307c006f],0xffffffff
  43b355:	ror    BYTE PTR [ecx-0x650bffbe],1
  43b35b:	push   ecx
  43b35c:	push   ss
  43b35d:	inc    DWORD PTR [eax]
  43b35f:	int3   
  43b360:	add    eax,0xff748383
  43b365:	mov    dl,0xcc
  43b367:	(bad)  
  43b368:	add    BYTE PTR [ebp-0x76bd95a7],bl
  43b36e:	mov    DWORD PTR [ecx+0x78ffff3c],ecx
  43b374:	add    BYTE PTR [ebx+0x7ff3acc],bh
  43b37a:	push   ds
  43b37b:	(bad)  
  43b37c:	mov    al,BYTE PTR [eax]
  43b37e:	(bad)  
  43b37f:	dec    DWORD PTR [eax]
  43b381:	inc    DWORD PTR [eax]
  43b383:	sahf   
  43b384:	cmp    DWORD PTR [edi],0xffffffff
  43b387:	jbe    0x43b388
  43b389:	ja     0x43b374
  43b38b:	ins    BYTE PTR es:[edi],dx
  43b38c:	loope  0x43b311
  43b38e:	(bad)  
  43b38f:	jmp    DWORD PTR [edi-0x768f7d00]
  43b395:	stos   BYTE PTR es:[edi],al
  43b396:	call   DWORD PTR [ecx+0x2bba3300]
  43b39c:	and    DWORD PTR [ecx+0xa20000],ecx
  43b3a2:	dec    esi
  43b3a4:	xor    esp,0xffffffff
  43b3a7:	std    
  43b3a8:	add    BYTE PTR [esi+eax*2-0x37],ch
  43b3ac:	pop    ebx
  43b3ad:	add    bh,bh
  43b3af:	dec    DWORD PTR ds:0xff7f8900
  43b3b5:	cmp    edi,0x5003d
  43b3bb:	test   DWORD PTR ds:0x6d89ffff,ecx
  43b3c1:	(bad)  
  43b3c2:	call   FWORD PTR [eax]
  43b3c4:	or     DWORD PTR [edi+edi*8-0xe],0x0
  43b3c9:	push   ds
  43b3ca:	or     DWORD PTR [esi+0x77],edx
  43b3cd:	int3   
  43b3ce:	add    bh,bh
  43b3d0:	adc    edi,edi
  43b3d2:	push   DWORD PTR [edx+0x0]
  43b3d5:	test   esp,0xb693ffcf
  43b3db:	call   0x44b3a9
  43b3e0:	cmp    bh,0x83
  43b3e3:	ret    
  43b3e4:	(bad)  
  43b3e5:	jmp    0xe631:0xbfcc48ff
  43b3ec:	push   ebp
  43b3ed:	add    bh,bh
  43b3ef:	add    BYTE PTR [ecx],ch
  43b3f1:	(bad)  
  43b3f2:	call   FWORD PTR [esi-0x1]
  43b3f5:	cmp    eax,0xb0ff0b00
  43b3fa:	test   eax,0xffffe7f9
  43b3ff:	add    BYTE PTR [edi-0x3382007d],dl
  43b405:	dec    esp
  43b406:	dec    DWORD PTR [esi]
  43b408:	add    BYTE PTR [ecx-0x7c8fbe40],bh
  43b40e:	add    bh,bh
  43b410:	cmp    eax,0x8918ffff
  43b415:	lds    eax,FWORD PTR [eax]
  43b417:	cmp    BYTE PTR [eax],al
  43b419:	or     al,0x1
  43b41b:	mov    eax,ds:0xff00001c
  43b420:	fiadd  WORD PTR [eax]
  43b422:	adc    DWORD PTR [ebx+0x218956ff],0xffffff83
  43b429:	jecxz  0x43b491
  43b42b:	push   ds
  43b42c:	outs   dx,DWORD PTR ds:[esi]
  43b42d:	int3   
  43b42e:	add    bh,bh
  43b430:	and    al,0xff
  43b432:	jmp    FWORD PTR ds:0x4fff6b83
  43b438:	call   FWORD PTR [edi-0x33b86123]
  43b43e:	inc    DWORD PTR [eax]
  43b440:	pop    es
  43b441:	int3   
  43b442:	add    BYTE PTR [edi-0x1],cl
  43b445:	push   ecx
  43b446:	call   FWORD PTR [eax-0x1]
  43b449:	shl    cl,0x90
  43b44c:	jne    0x43b41a
  43b44e:	add    BYTE PTR [eax],al
  43b450:	mov    esp,0xff2f00ff
  43b455:	jns    0x43b456
  43b457:	cwde   
  43b458:	call   FWORD PTR [ebx-0x769affd9]
  43b45e:	inc    DWORD PTR [eax]
  43b460:	and    bh,bh
  43b462:	add    BYTE PTR [eax-0x77],dh
  43b465:	or     al,0xff
  43b467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b468:	add    esp,0x55
  43b46b:	popa   
  43b46c:	fcos   
  43b46e:	(bad)  
  43b46f:	jmp    FWORD PTR [eax]
  43b471:	add    BYTE PTR [ebx+0xb2ccd7],al
  43b477:	sbb    edi,edi
  43b479:	xchg   DWORD PTR [ecx],esi
  43b47b:	int    0x86
  43b47d:	dec    esp
  43b47f:	dec    esp
  43b481:	dec    DWORD PTR [ecx-0xd20008]
  43b487:	sbb    DWORD PTR fs:[edx],0x5f
  43b48b:	jbe    0x43b41a
  43b48d:	add    DWORD PTR [ebx+0xa700],0xffffffc7
  43b494:	int3   
  43b495:	mov    eax,DWORD PTR [eax]
  43b497:	mov    edi,?
  43b499:	fmul   st,st(0)
  43b49b:	mov    BYTE PTR [edi-0x2a000100],cl
  43b4a1:	inc    DWORD PTR [ebx-0x35ff21]
  43b4a7:	inc    esi
  43b4a8:	call   FWORD PTR [edi-0xd]
  43b4ab:	and    DWORD PTR [esi+0x6883ffcc],0x0
  43b4b2:	call   FWORD PTR [eax-0x7d]
  43b4b5:	ss dec ecx
  43b4b8:	jmp    FWORD PTR [edx+0x40]
  43b4bb:	xchg   ebp,eax
  43b4bc:	adc    BYTE PTR [eax],al
  43b4be:	inc    DWORD PTR [ebx-0x18007cff]
  43b4c4:	add    BYTE PTR [ebx-0x1],bl
  43b4c7:	cmp    bh,bh
  43b4c9:	pop    esi
  43b4ca:	ret    
  43b4cb:	imul   ebx,DWORD PTR [edi],0x0
  43b4ce:	(bad)  
  43b4cf:	push   DWORD PTR [edx+0x0]
  43b4d2:	add    BYTE PTR [edx+0x6dff20ff],al
  43b4d8:	mov    ebx,edx
  43b4da:	hlt    
  43b4db:	(bad)  
  43b4dc:	sub    bh,bh
  43b4de:	cmp    edi,0x41
  43b4e1:	add    bh,bh
  43b4e3:	push   esi
  43b4e4:	inc    DWORD PTR [edi+0x77ff80ff]
  43b4ea:	cwde   
  43b4eb:	repnz icebp 
  43b4ed:	(bad)  
  43b4ee:	(bad)  
  43b4ef:	call   FWORD PTR [ecx-0x1]
  43b4f2:	inc    DWORD PTR [ecx+0x420075ff]
  43b4f8:	sub    DWORD PTR [ebx+0x4e],0xffffff85
  43b4fc:	push   ecx
  43b4fd:	(bad)  
  43b4fe:	(bad)  
  43b4ff:	inc    DWORD PTR [edi+edi*8-0x1]
  43b503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b504:	dec    DWORD PTR [ebx-0x1]
  43b507:	mov    al,ds:0x438d3f00
  43b50c:	mov    ch,0xff
  43b50e:	(bad)  
  43b50f:	call   DWORD PTR [eax-0x1]
  43b512:	push   esp
  43b514:	(bad)  
  43b515:	mov    esi,0x40ff26ff
  43b51a:	xchg   ebp,eax
  43b51b:	pop    es
  43b51c:	mov    DWORD PTR [eax],0x8967ff00
  43b522:	inc    DWORD PTR ds:0x6100b8ff
  43b528:	add    BYTE PTR [eax-0xf5048],dl
  43b52e:	(bad)  
  43b52f:	dec    DWORD PTR ds:0x1a00ff
  43b535:	pop    edx
  43b536:	(bad)  
  43b537:	(bad)  
  43b539:	aad    0xa7
  43b53b:	(bad)  
  43b53c:	pop    edx
  43b53d:	(bad)  
  43b53e:	(bad)  
  43b53f:	dec    DWORD PTR [edi+edi*8]
  43b542:	int3   
  43b543:	cmp    eax,0x4b0031cc
  43b548:	add    BYTE PTR ds:0xfff2da07,ah
  43b54e:	add    DWORD PTR [eax],0x7b
  43b551:	add    bh,bh
  43b553:	outs   dx,BYTE PTR ds:[esi]
  43b554:	inc    DWORD PTR ds:0x38cc04ff
  43b55a:	out    0x92,al
  43b55c:	jae    0x43b55d
  43b55e:	dec    esp
  43b560:	loopne 0x43b562
  43b562:	jmp    FWORD PTR [ecx+ecx*4+0x3a]
  43b566:	push   DWORD PTR [edx-0x2ae65100]
  43b56c:	adc    eax,0x4700ffff
  43b571:	dec    esp
  43b573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b574:	adc    DWORD PTR [edx],0xffffffff
  43b577:	mov    ah,0xff
  43b579:	sbb    ch,cl
  43b57b:	aam    0x65
  43b57d:	inc    DWORD PTR [ebx+0xffff00]
  43b583:	xor    eax,0xcc89ef00
  43b588:	add    BYTE PTR [edx+esi*1+0x4e],ch
  43b58c:	imul   edi,edi,0x89fe00ff
  43b592:	(bad)  
  43b593:	cmp    eax,0x9aff9100
  43b598:	add    BYTE PTR [edi-0x5b],bl
  43b59b:	loopne 0x43b5a3
  43b59d:	cmp    edi,0xffffffff
  43b5a0:	mov    ah,0x83
  43b5a2:	add    cl,bl
  43b5a4:	jmp    DWORD PTR [esi+0x0]
  43b5a7:	into   
  43b5a8:	(bad)  
  43b5a9:	cmp    eax,0xf57f55
  43b5ae:	(bad)  
  43b5af:	(bad)  
  43b5b0:	fiadd  DWORD PTR [eax]
  43b5b2:	push   DWORD PTR [eax+eax*1-0x2c]
  43b5b6:	mov    DWORD PTR [ebp-0x1],eax
  43b5b9:	int    0x40
  43b5bb:	jnp    0x43b572
  43b5bd:	cmp    edi,0xffffffff
  43b5c0:	mov    eax,DWORD PTR [eax]
  43b5c2:	call   FWORD PTR ds:0xbcff41ff
  43b5c8:	add    BYTE PTR [edi-0x7c],cl
  43b5cb:	jge    0x43b56e
  43b5cd:	(bad)  
  43b5ce:	inc    DWORD PTR [ebx-0x37c00c3]
  43b5d4:	push   DWORD PTR ds:0x63894bff
  43b5da:	mov    ebx,0xffff0f90
  43b5df:	int3   
  43b5e0:	loop   0x43b5e2
  43b5e2:	(bad)  
  43b5e3:	fdivp  st(7),st
  43b5e5:	adc    DWORD PTR [eax],eax
  43b5e7:	sub    DWORD PTR [ebx-0x472fb2a9],eax
  43b5ed:	cmp    edi,0x0
  43b5f0:	cmp    al,0xff
  43b5f2:	add    ah,bh
  43b5f4:	or     ebx,0x0
  43b5f7:	(bad)  
  43b5f8:	dec    edi
  43b5fa:	or     esp,DWORD PTR [edx+0x25]
  43b5fd:	inc    DWORD PTR [eax]
  43b5ff:	add    dl,dh
  43b601:	inc    DWORD PTR [eax]
  43b603:	idiv   bh
  43b605:	cmp    eax,0xcc836e00
  43b60a:	jmp    FWORD PTR [esi-0xff40]
  43b610:	test   bh,bh
  43b612:	jmp    DWORD PTR [eax-0x1]
  43b615:	pop    DWORD PTR [eax]
  43b617:	stos   DWORD PTR es:[edi],eax
  43b618:	jmp    FWORD PTR [ebx]
  43b61a:	(bad)  
  43b61c:	jg     0x43b61d
  43b61e:	dec    esp
  43b620:	dec    esp
  43b621:	add    BYTE PTR [eax],al
  43b623:	pop    DWORD PTR [ebx+0xda00e1]
  43b629:	inc    ebp
  43b62a:	sbb    eax,esp
  43b62c:	mov    ah,0x83
  43b62e:	dec    esp
  43b630:	popa   
  43b631:	(bad)  
  43b632:	call   FWORD PTR [edi-0x1]
  43b635:	das    
  43b636:	int3   
  43b637:	push   ds
  43b638:	add    ch,ah
  43b63a:	sbb    eax,0xffe568
  43b63f:	call   FWORD PTR [esi-0x3315ff7d]
  43b645:	xchg   ecx,eax
  43b646:	mov    DWORD PTR [ebx+eax*4-0x73],esi
  43b64a:	cdq    
  43b64b:	call   0x8955:0x83ff004c
  43b652:	add    BYTE PTR [edx-0x1],dh
  43b655:	add    BYTE PTR ss:[eax+eax*1+0x5b50d069],ch
  43b65d:	cmp    edi,0xffffff83
  43b660:	repz (bad) 
  43b662:	call   DWORD PTR [eax]
  43b664:	adc    DWORD PTR [ecx-0x77],0x6c
  43b668:	add    ch,dh
  43b66a:	adc    BYTE PTR gs:[ebp-0x2effff01],ah
  43b671:	add    BYTE PTR [eax],al
  43b673:	bswap  esp
  43b675:	pop    ss
  43b676:	call   ebp
  43b678:	add    BYTE PTR [ebp+0x5],cl
  43b67b:	pop    ds
  43b67c:	inc    eax
  43b67d:	cmp    edi,0xffffffff
  43b680:	loope  0x43b681
  43b682:	(bad)  
  43b683:	cmp    al,0xff
  43b685:	idiv   edi
  43b687:	scas   al,BYTE PTR es:[edi]
  43b688:	call   DWORD PTR [ecx-0xebca09]
  43b68e:	(bad)  
  43b68f:	dec    edx
  43b691:	add    BYTE PTR [eax],al
  43b693:	mov    al,BYTE PTR [eax]
  43b695:	fild   DWORD PTR [ebx+0x3a300e6]
  43b69b:	sub    eax,0xffffff6c
  43b6a0:	fdivr  st,st(7)
  43b6a2:	adc    DWORD PTR [edx-0x1],0xffffff9f
  43b6a6:	add    dl,bl
  43b6a8:	int3   
  43b6a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b6aa:	xor    al,BYTE PTR [esi]
  43b6ac:	call   0xcc83:0x68008900
  43b6b3:	mov    bl,0xff
  43b6b5:	les    eax,FWORD PTR [eax]
  43b6b7:	mov    edx,0x19251500
  43b6bc:	fcos   
  43b6be:	(bad)  
  43b6bf:	jmp    FWORD PTR [esi]
  43b6c1:	(bad)  
  43b6c2:	call   ecx
  43b6c4:	(bad)  
  43b6c5:	jns    0x43b6c6
  43b6c7:	aad    0x89
  43b6c9:	pop    eax
  43b6ca:	bound  esp,QWORD PTR [edi-0x66]
  43b6cd:	add    BYTE PTR [eax],al
  43b6cf:	int3   
  43b6d0:	data16 add BYTE PTR [eax],al
  43b6d3:	and    edi,edi
  43b6d5:	in     al,0xcc
  43b6d7:	jge    0x43b6d8
  43b6d9:	dec    ecx
  43b6da:	test   BYTE PTR [eax],ah
  43b6dc:	clc    
  43b6dd:	mov    DWORD PTR [eax],eax
  43b6df:	(bad)  
  43b6e0:	fld    DWORD PTR [eax]
  43b6e2:	int3   
  43b6e3:	in     eax,0x0
  43b6e5:	test   edi,edi
  43b6e7:	jo     0x43b6e9
  43b6e9:	stos   BYTE PTR es:[edi],al
  43b6ea:	(bad)  
  43b6eb:	pop    ebp
  43b6ec:	cwde   
  43b6ed:	(bad)  
  43b6ee:	(bad)  
  43b6ef:	jmp    DWORD PTR [edx-0x1]
  43b6f2:	jmp    DWORD PTR [ebp-0x22ff0c01]
  43b6f8:	inc    DWORD PTR [edi]
  43b6fa:	popf   
  43b6fb:	je     0x43b6e4
  43b6fd:	mov    edi,edi
  43b6ff:	add    BYTE PTR [edx],dl
  43b701:	inc    DWORD PTR [ebx-0x3500dc]
  43b707:	fadd   QWORD PTR [eax]
  43b709:	cmp    BYTE PTR [ebx+edi*8],dh
  43b70c:	mov    esp,0x45890083
  43b711:	inc    DWORD PTR [eax]
  43b713:	stos   BYTE PTR es:[edi],al
  43b714:	inc    ecx
  43b716:	mov    edx,ebx
  43b718:	add    BYTE PTR [ebp+0x2f],bl
  43b71b:	mov    edx,0xffffff32
  43b720:	mov    ah,0x83
  43b722:	add    BYTE PTR [edi-0x1],bl
  43b725:	fld    DWORD PTR [eax]
  43b727:	loope  0x43b729
  43b729:	dec    ecx
  43b72a:	aam    0x3a
  43b72c:	mov    al,0x89
  43b72e:	(bad)  
  43b72f:	call   FWORD PTR [edi+edi*8]
  43b732:	add    BYTE PTR [edx+0x0],bh
  43b735:	or     bh,bh
  43b737:	xor    edi,edi
  43b739:	js     0x43b74c
  43b73b:	(bad)  
  43b73c:	str    esp
  43b73f:	sub    DWORD PTR [ebx-0xacff01],0x66
  43b746:	push   DWORD PTR [edi-0x533f4301]
  43b74c:	xlat   BYTE PTR ds:[ebx]
  43b74d:	add    DWORD PTR [eax],0xffffffff
  43b750:	lods   al,BYTE PTR ds:[esi]
  43b751:	int3   
  43b752:	jmp    DWORD PTR [edx-0x2c007401]
  43b758:	jmp    FWORD PTR [edi-0x7d]
  43b75b:	sbb    ebp,DWORD PTR [ecx+0x7eff0000]
  43b761:	mov    esp,ecx
  43b763:	dec    esi
  43b764:	add    BYTE PTR [esi],dl
  43b766:	add    BYTE PTR [edi+edi*8],ch
  43b769:	cmc    
  43b76a:	lods   al,BYTE PTR ds:[esi]
  43b76b:	fadd   QWORD PTR es:[ebx-0xc43377]
  43b772:	push   DWORD PTR [eax+0x11005acc]
  43b778:	and    eax,0x23
  43b77b:	imul   eax,DWORD PTR [eax+0x39ff0083],0xff9fffff
  43b785:	mov    edi,?
  43b787:	jecxz  0x43b788
  43b789:	cwde   
  43b78a:	sub    BYTE PTR ds:0x83ffffff,0x86
  43b791:	or     esp,0xffffff91
  43b794:	call   DWORD PTR [ebp-0x1]
  43b797:	jl     0x43b71c
  43b799:	add    DWORD PTR [ebp-0x33189f],edi
  43b79f:	jmp    DWORD PTR [edx]
  43b7a1:	(bad)  
  43b7a2:	jmp    edx
  43b7a4:	mov    DWORD PTR [edi+edi*8+0x37],ebp
  43b7a8:	mov    edx,edi
  43b7aa:	xor    ebx,DWORD PTR [ecx]
  43b7ac:	xor    BYTE PTR [eax],al
  43b7ae:	add    bh,bh
  43b7b0:	mov    eax,ds:0xffff8900
  43b7b5:	push   eax
  43b7b6:	mov    DWORD PTR [eax-0x1],esi
  43b7b9:	fwait
  43b7ba:	and    esp,DWORD PTR ss:[edi-0x1]
  43b7be:	or     DWORD PTR [ecx-0x440000e8],0xffffff83
  43b7c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b7c6:	add    BYTE PTR [edi],ah
  43b7c8:	add    bh,ch
  43b7ca:	imul   esi,edx,0xff89ffda
  43b7d0:	repnz (bad) 
  43b7d2:	push   DWORD PTR [eax+eax*1+0x7e0073]
  43b7d9:	sti    
  43b7da:	pusha  
  43b7db:	(bad)  
  43b7dc:	int3   
  43b7dd:	add    BYTE PTR [eax],al
  43b7df:	(bad)  
  43b7e0:	js     0x43b765
  43b7e2:	call   DWORD PTR [ecx-0x1]
  43b7e5:	(bad)  
  43b7e6:	call   DWORD PTR [edi-0x1]
  43b7e9:	(bad)  
  43b7ea:	call   0x44143d
  43b7ef:	push   DWORD PTR [eax]
  43b7f1:	(bad)  
  43b7f2:	push   eax
  43b7f4:	add    BYTE PTR [esi-0x1],bh
  43b7f7:	sar    edi,cl
  43b7f9:	push   ds
  43b7fa:	in     al,dx
  43b7fb:	mov    eax,ds:0x838900f4
  43b800:	mov    bh,0x0
  43b802:	jmp    DWORD PTR [ecx-0x1]
  43b805:	mov    cl,0x0
  43b807:	xor    BYTE PTR [ecx+0x21a35d6a],cl
  43b80d:	or     esp,0xffffffff
  43b810:	inc    ebx
  43b811:	mov    edi,edi
  43b813:	mov    al,ds:0x56008f00
  43b818:	and    DWORD PTR [ecx-0x44],0xffffffe9
  43b81c:	retf   
  43b81d:	add    bh,bh
  43b81f:	add    BYTE PTR [ebx],ch
  43b821:	inc    DWORD PTR [eax]
  43b823:	add    al,BYTE PTR [eax]
  43b825:	es int3 
  43b827:	mov    al,ds:0xdede12ff
  43b82c:	repnz inc DWORD PTR [eax]
  43b82f:	int3   
  43b830:	sub    bh,bh
  43b832:	call   DWORD PTR [edi]
  43b834:	int3   
  43b835:	sahf   
  43b836:	add    BYTE PTR [edi],ah
  43b838:	dec    edi
  43b83a:	into   
  43b83b:	dec    ebp
  43b83c:	lea    eax,[eax]
  43b83e:	inc    DWORD PTR [eax]
  43b840:	or     edi,edi
  43b842:	sbb    ecx,0xffffffff
  43b845:	out    0xff,eax
  43b847:	mov    edx,0x27f8dd00
  43b84c:	xchg   ecx,eax
  43b84d:	inc    DWORD PTR [eax]
  43b84f:	push   DWORD PTR [ebx-0x77]
  43b852:	call   FWORD PTR [ebx-0x7d]
  43b855:	aad    0x0
  43b857:	cmp    bh,0xe4
  43b85a:	sar    cl,cl
  43b85c:	cmc    
  43b85d:	add    BYTE PTR [eax],al
  43b85f:	cmp    ebp,0x0
  43b862:	add    BYTE PTR [eax-0x1e00bf77],ch
  43b868:	(bad)  
  43b869:	mov    edx,0x25d742
  43b86e:	inc    DWORD PTR [ebx-0x4b7600b2]
  43b874:	add    dh,dl
  43b876:	call   FWORD PTR [ebx-0x34]
  43b879:	out    0xb0,eax
  43b87b:	into   
  43b87c:	xor    edi,edi
  43b87e:	(bad)  
  43b87f:	inc    DWORD PTR [edi]
  43b881:	inc    DWORD PTR [ebx-0x1f0094]
  43b887:	out    0x89,eax
  43b889:	jecxz  0x43b888
  43b88b:	mov    bl,BYTE PTR [eax-0x7d]
  43b88e:	add    bh,bh
  43b890:	out    0xff,eax
  43b892:	inc    ebx
  43b894:	add    BYTE PTR [edi],bh
  43b896:	call   DWORD PTR ds:0xf94ee1cc
  43b89c:	jp     0x43b89d
  43b89e:	int3   
  43b89f:	sbb    esi,0xffffffff
  43b8a2:	add    BYTE PTR [edi-0x34],dl
  43b8a5:	cmp    edi,edi
  43b8a7:	icebp  
  43b8a8:	add    BYTE PTR [esi+0x4e],ah
  43b8ab:	data16 add al,0x83
  43b8ae:	(bad)  
  43b8af:	inc    ecx
  43b8b1:	(bad)  
  43b8b2:	inc    DWORD PTR ds:0xef007a00
  43b8b8:	jmp    ecx
  43b8ba:	pop    ds
  43b8bb:	cli    
  43b8bc:	jmp    0x4d444244
  43b8c1:	add    bh,bh
  43b8c3:	xchg   edi,eax
  43b8c4:	add    BYTE PTR [edi-0x9337e00],bl
  43b8ca:	push   ebx
  43b8cb:	cli    
  43b8cc:	sar    bh,1
  43b8ce:	add    BYTE PTR [ebx+0x48ffffed],al
  43b8d4:	mov    DWORD PTR [ebx-0x7d],esp
  43b8d7:	rol    BYTE PTR [eax],1
  43b8d9:	mov    ebx,0xff514d7c
  43b8de:	add    BYTE PTR [eax],al
  43b8e0:	push   ss
  43b8e1:	or     esp,0xffffffe3
  43b8e4:	dec    ebp
  43b8e6:	(bad)  
  43b8e7:	call   0x94b26ec
  43b8ec:	pop    edx
  43b8ed:	mov    edi,edi
  43b8ef:	add    BYTE PTR [eax],dh
  43b8f1:	(bad)  
  43b8f2:	call   DWORD PTR [ebp-0x1]
  43b8f5:	inc    ebp
  43b8f6:	jmp    DWORD PTR [edi+0x9df0dff]
  43b8fc:	lock mov edi,edi
  43b8ff:	xor    DWORD PTR [ebx],0xffffffff
  43b902:	call   FWORD PTR [edi-0x7d]
  43b905:	jp     0x43b8d3
  43b907:	addr16 inc ebx
  43b90a:	inc    edi
  43b90b:	mov    DWORD PTR [ebp+0x3800cc83],ebx
  43b911:	inc    DWORD PTR [ebx-0x45002a]
  43b917:	add    edi,edi
  43b919:	ja     0x43b8f2
  43b91b:	sub    dl,BYTE PTR [eax+eax*1-0x31007d]
  43b922:	(bad)  
  43b923:	jge    0x43b925
  43b925:	jb     0x43b926
  43b927:	xchg   ebx,eax
  43b928:	int3   
  43b929:	bound  ecx,QWORD PTR [edi]
  43b92b:	aaa    
  43b92c:	adc    al,0x0
  43b92e:	add    BYTE PTR [eax],al
  43b930:	daa    
  43b931:	(bad)  
  43b932:	jmp    esi
  43b934:	add    BYTE PTR [ebx-0x77],ch
  43b937:	fdiv   st(7),st
  43b939:	dec    esi
  43b93a:	mov    ebx,0xfff230
  43b93f:	call   edx
  43b941:	(bad)  
  43b942:	jmp    DWORD PTR [edx-0xc00d334]
  43b948:	(bad)  
  43b949:	cld    
  43b94a:	into   
  43b94b:	mov    ecx,0xff0010
  43b950:	call   0xe2b954
  43b955:	mov    ah,0x83
  43b957:	or     edi,edi
  43b959:	test   DWORD PTR [eax-0x1],eax
  43b95c:	cmp    cl,ah
  43b95e:	add    bh,bh
  43b960:	or     eax,DWORD PTR [eax]
  43b962:	add    BYTE PTR [eax],ah
  43b964:	add    bl,ah
  43b966:	(bad)  
  43b967:	stc    
  43b968:	call   FWORD PTR [ecx-0x26]
  43b96b:	dec    edi
  43b96c:	(bad)  
  43b96d:	inc    DWORD PTR [eax]
  43b96f:	int3   
  43b970:	mov    BYTE PTR [eax],0xff
  43b973:	push   0x0
  43b975:	add    BYTE PTR [eax],0x5b
  43b978:	mov    eax,esp
  43b97a:	mov    al,ds:0xcc8394d9
  43b97f:	add    BYTE PTR [eax-0x1],dl
  43b982:	cmp    DWORD PTR [ebx+eax*4+0x8],0xffffffcc
  43b987:	test   BYTE PTR [ebx+0x32a68dc4],0xff
  43b98e:	cmp    edi,0xffffffb5
  43b991:	add    BYTE PTR [eax],al
  43b993:	mov    bh,0x83
  43b995:	mov    eax,0x5d890600
  43b99a:	retf   
  43b99b:	sub    DWORD PTR [edx],edi
  43b99d:	(bad)  
  43b99e:	inc    DWORD PTR [eax]
  43b9a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b9a1:	(bad)  
  43b9a2:	push   DWORD PTR [ecx]
  43b9a4:	jmp    edi
  43b9a6:	jmp    FWORD PTR [ebp-0x1]
  43b9a9:	pop    ss
  43b9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b9ab:	mov    al,ds:0xe
  43b9b0:	leave  
  43b9b1:	add    bh,bh
  43b9b3:	and    al,0xcc
  43b9b5:	icebp  
  43b9b6:	inc    DWORD PTR [esi-0x1]
  43b9b9:	add    DWORD PTR [edi+edi*1],edx
  43b9bc:	xchg   ah,cl
  43b9be:	add    BYTE PTR [eax],al
  43b9c0:	adc    edi,edi
  43b9c2:	add    BYTE PTR [edx],cl
  43b9c4:	(bad)  
  43b9c5:	mov    esp,0x4f831ecc
  43b9ca:	retf   0x3016
  43b9cd:	dec    esp
  43b9cf:	add    BYTE PTR [edi+edi*8-0x1ff4c34],bh
  43b9d6:	add    BYTE PTR [eax+eax*1+0x6b62bac7],cl
  43b9dd:	add    bh,bh
  43b9df:	int3   
  43b9e0:	call   0xff1f:0xffff89ff
  43b9e7:	(bad)  
  43b9e8:	jmp    DWORD PTR [edi-0x6f4cbb]
  43b9ee:	or     esp,0x36
  43b9f1:	(bad)  
  43b9f2:	jmp    DWORD PTR [ebx-0x5000517d]
  43b9f8:	push   DWORD PTR [eax+0x52]
  43b9fb:	je     0x43ba23
  43b9fd:	mov    edi,edi
  43b9ff:	or     DWORD PTR [edi+edi*8-0x1],0x7c
  43ba04:	add    BYTE PTR [ebp-0x1],bh
  43ba07:	push   0x0
  43ba09:	sbb    ebx,esi
  43ba0b:	in     eax,dx
  43ba0c:	cmp    edi,0x83baff83
  43ba12:	int3   
  43ba13:	cmp    edi,0xff16ff19
  43ba19:	fld    QWORD PTR [edi-0x755e]
  43ba1f:	(bad)  
  43ba20:	mov    eax,0xffc983ff
  43ba25:	cs int3 
  43ba27:	cld    
  43ba28:	add    BYTE PTR [edx+0x66],ch
  43ba2b:	fucomip st,st(5)
  43ba2d:	inc    DWORD PTR [eax]
  43ba2f:	int3   
  43ba30:	adc    al,0x83
  43ba32:	jmp    DWORD PTR ds:0x80ff97cc
  43ba38:	add    dl,al
  43ba3a:	int    0x83
  43ba3c:	inc    edi
  43ba3d:	(bad)  
  43ba3e:	dec    esp
  43ba40:	je     0x43ba42
  43ba42:	add    BYTE PTR [edx+0x7b006983],bh
  43ba48:	add    al,dl
  43ba4a:	mov    dh,0x13
  43ba4c:	dec    ebx
  43ba4d:	inc    DWORD PTR [eax]
  43ba4f:	add    BYTE PTR [ecx+0x0],bh
  43ba52:	dec    DWORD PTR [eax+eax*1-0x24]
  43ba56:	and    DWORD PTR [ebx],0xffffff83
  43ba59:	jnp    0x43ba84
  43ba5b:	pop    ebp
  43ba5c:	loopne 0x43ba5e
  43ba5e:	(bad)  
  43ba5f:	jmp    DWORD PTR [edx]
  43ba61:	add    ah,cl
  43ba63:	jne    0x43ba65
  43ba65:	adc    BYTE PTR [eax],al
  43ba67:	pop    esi
  43ba68:	int3   
  43ba69:	ins    BYTE PTR es:[edi],dx
  43ba6a:	push   0xfffffff3
  43ba6c:	jecxz  0x43b9f1
  43ba6e:	int3   
  43ba6f:	add    BYTE PTR [eax-0x1],dh
  43ba72:	int3   
  43ba73:	add    BYTE PTR es:[ebx],ah
  43ba76:	cmp    DWORD PTR [ebx-0x38f0bb7d],0xffffff88
  43ba7d:	cmp    edi,0xffffffff
  43ba80:	sbb    bh,bh
  43ba82:	mov    DWORD PTR [ecx+ecx*4-0x930013],ebx
  43ba89:	aam    0x48
  43ba8b:	jp     0x43ba8b
  43ba8d:	mov    edi,edi
  43ba8f:	add    BYTE PTR [edi-0x77],dl
  43ba92:	sbb    edx,0xffffffff
  43ba95:	jbe    0x43ba97
  43ba97:	sbb    ecx,esp
  43ba99:	aam    0xc2
  43ba9b:	idiv   BYTE PTR [eax+0x0]
  43ba9e:	add    bh,bh
  43baa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43baa1:	(bad)  
  43baa2:	(bad)  
  43baa3:	jns    0x43baa5
  43baa5:	dec    ebx
  43baa6:	dec    DWORD PTR [edi+0x74842e83]
  43baac:	mov    esp,0x6c89ff00
  43bab1:	add    bh,bh
  43bab3:	cmp    bh,0x2a
  43bab6:	(bad)  
  43bab7:	mov    ecx,0x535da800
  43babc:	sar    bh,1
  43babe:	(bad)  
  43babf:	call   FWORD PTR [edx-0xd7ff01]
  43bac5:	pop    ss
  43bac6:	add    BYTE PTR [ebp-0x34],dl
  43bac9:	or     BYTE PTR [edx+0xfc0],dh
  43bacf:	sub    ecx,0xffffffff
  43bad2:	push   DWORD PTR [edi-0x7a004c01]
  43bad8:	add    BYTE PTR [ebx*4-0x7676603d],al
  43badf:	add    BYTE PTR [edi+edi*8],al
  43bae2:	call   FWORD PTR [esi+0x0]
  43bae5:	xchg   edx,eax
  43bae6:	int3   
  43bae7:	lods   eax,DWORD PTR ds:[esi]
  43bae8:	sub    eax,0xd
  43baeb:	mov    al,0x64
  43baed:	dec    DWORD PTR [ecx-0xff0f01]
  43baf3:	push   edi
  43baf4:	dec    DWORD PTR [eax-0x1]
  43baf7:	je     0x43ba7c
  43baf9:	add    al,0x1e
  43bafb:	jg     0x43bb6c
  43bafd:	add    bh,bh
  43baff:	add    BYTE PTR [ecx-0x1],cl
  43bb02:	add    BYTE PTR [ecx-0x1],dh
  43bb05:	(bad)  
  43bb07:	and    ah,cl
  43bb09:	mov    cl,0x17
  43bb0b:	jo     0x43bb0c
  43bb0d:	add    bh,bh
  43bb0f:	cmp    DWORD PTR [eax+eax*1],0x0
  43bb13:	test   BYTE PTR [eax],0xf2
  43bb16:	inc    DWORD PTR [ebx-0x7ef1c001]
  43bb1c:	inc    ecx
  43bb1d:	mov    DWORD PTR [eax],eax
  43bb1f:	(bad)  
  43bb20:	sti    
  43bb21:	add    bh,bh
  43bb23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bb24:	add    BYTE PTR [ecx+0x0],al
  43bb27:	push   eax
  43bb28:	jmp    FWORD PTR [edi+0x46]
  43bb2b:	xor    ecx,edx
  43bb2d:	mov    DWORD PTR [eax],eax
  43bb2f:	dec    DWORD PTR [edi]
  43bb31:	int3   
  43bb32:	add    BYTE PTR [edx+0x62ffdc83],bl
  43bb38:	(bad)  
  43bb39:	mov    esi,0xff201694
  43bb3e:	mov    DWORD PTR [eax],eax
  43bb40:	bound  eax,QWORD PTR [ebx-0xffffd00]
  43bb46:	call   DWORD PTR [ebx-0x1]
  43bb49:	(bad)  
  43bb4a:	cld    
  43bb4b:	inc    ecx
  43bb4c:	pop    edx
  43bb4d:	cmp    edi,0xffffffff
  43bb50:	xor    DWORD PTR [ecx+0x20ffb900],ecx
  43bb56:	(bad)  
  43bb57:	mov    ebx,0x537e08ff
  43bb5c:	pop    esp
  43bb5d:	add    ah,cl
  43bb5f:	add    cl,bh
  43bb61:	(bad)  
  43bb62:	dec    DWORD PTR [eax+eax*1]
  43bb65:	popf   
  43bb66:	add    ch,bl
  43bb68:	push   DWORD PTR [ebx-0x74]
  43bb6b:	shl    BYTE PTR ds:0xb2830000,0x0
  43bb72:	add    BYTE PTR [esi-0x41009601],ch
  43bb78:	inc    DWORD PTR [edx]
  43bb7a:	mov    ?,WORD PTR [ebx-0x7600ff60]
  43bb80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bb81:	cmp    edi,0x2a
  43bb84:	int3   
  43bb85:	xchg   ecx,eax
  43bb86:	push   DWORD PTR [eax-0x7c677801]
  43bb8c:	cmp    cl,BYTE PTR [ecx-0xef7601]
  43bb92:	add    BYTE PTR [ebx-0x6700b901],dh
  43bb98:	sub    DWORD PTR [eax],0xa
  43bb9b:	inc    esi
  43bb9c:	pop    es
  43bb9d:	(bad)  
  43bb9e:	(bad)  
  43bb9f:	(bad)  
  43bba0:	fiadd  DWORD PTR [ebx-0x333d801]
  43bba6:	jmp    DWORD PTR [edi+edi*8+0xf]
  43bbaa:	ret    
  43bbab:	in     al,0x2a
  43bbad:	inc    DWORD PTR [eax]
  43bbaf:	add    BYTE PTR [eax-0x20ff01],cl
  43bbb5:	mov    al,0xff
  43bbb7:	int    0xcc
  43bbb9:	out    dx,eax
  43bbba:	div    DWORD PTR [ebx+0x19]
  43bbbd:	inc    DWORD PTR [ebx-0x761401]
  43bbc3:	cld    
  43bbc4:	add    BYTE PTR [ebx-0x7d],ah
  43bbc7:	and    eax,0x9c296400
  43bbcc:	mov    eax,0x86ff0083
  43bbd1:	mov    DWORD PTR [eax],eax
  43bbd3:	scas   al,BYTE PTR es:[edi]
  43bbd4:	jmp    DWORD PTR [edx]
  43bbd6:	add    BYTE PTR [ebx],al
  43bbd8:	call   DWORD PTR [ebp-0x6]
  43bbdb:	or     esp,DWORD PTR [edi-0x6bff0001]
  43bbe1:	add    bh,bh
  43bbe3:	into   
  43bbe4:	cmp    DWORD PTR [ebx+0x4e83b4ff],0x25
  43bbeb:	jl     0x43bc45
  43bbed:	add    BYTE PTR [ebx+0xff30cc],al
  43bbf3:	test   DWORD PTR [ecx-0x51ff99],ecx
  43bbf9:	jg     0x43bb92
  43bbfb:	dec    esi
  43bbfc:	push   edi
  43bbfd:	(bad)  
  43bbfe:	(bad)  
  43bbff:	inc    DWORD PTR [esi]
  43bc01:	add    bh,bh
  43bc03:	and    edi,edi
  43bc05:	in     al,dx
  43bc06:	int3   
  43bc07:	ja     0x43bb92
  43bc09:	gs xchg ecx,eax
  43bc0b:	inc    ecx
  43bc0c:	jg     0x43bc0e
  43bc0e:	add    BYTE PTR [eax],al
  43bc10:	xchg   edi,edi
  43bc12:	mov    edx,esi
  43bc14:	jmp    FWORD PTR [edx-0x1]
  43bc17:	jne    0x43bbe5
  43bc19:	clc    
  43bc1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bc1b:	rcr    DWORD PTR [edx-0x37330100],cl
  43bc21:	add    bh,bh
  43bc23:	lea    eax,[ebx-0x500054]
  43bc29:	and    ch,BYTE PTR [edx+0x897ee1]
  43bc2f:	sbb    DWORD PTR [ecx],0x0
  43bc32:	mov    DWORD PTR [ecx+ecx*4-0x3c],esi
  43bc36:	push   DWORD PTR [ecx-0x7d]
  43bc39:	push   es
  43bc3a:	inc    esi
  43bc3b:	mov    bh,0xe0
  43bc3d:	(bad)  
  43bc3e:	dec    esp
  43bc40:	mov    ebx,0xff6cff83
  43bc45:	fadd   QWORD PTR [eax]
  43bc47:	push   eax
  43bc48:	push   DWORD PTR ds:0x7acf77
  43bc4e:	add    BYTE PTR [eax],al
  43bc50:	xchg   edi,eax
  43bc51:	add    DWORD PTR [eax],0xffffff8b
  43bc54:	push   DWORD PTR [eax+eax*1+0xe08ff76]
  43bc5b:	push   edx
  43bc5c:	mov    ds:0xab00ff89,al
  43bc61:	add    BYTE PTR [eax],al
  43bc63:	scas   al,BYTE PTR es:[edi]
  43bc64:	call   FWORD PTR [eax+0x34ff2900]
  43bc6a:	push   cs
  43bc6b:	and    al,0xbb
  43bc6d:	add    ah,cl
  43bc6f:	dec    DWORD PTR [ebx]
  43bc71:	add    bh,bh
  43bc73:	das    
  43bc74:	jmp    DWORD PTR [ebp-0x1]
  43bc77:	add    BYTE PTR [eax],al
  43bc79:	push   ebx
  43bc7a:	cmp    BYTE PTR [ebp+0x10],ah
  43bc7d:	inc    DWORD PTR [ebx-0xff9c01]
  43bc83:	push   0xffffffff
  43bc85:	int3   
  43bc86:	(bad)  
  43bc87:	sti    
  43bc88:	mov    DWORD PTR [edx-0x7c786654],ecx
  43bc8e:	inc    DWORD PTR [eax]
  43bc90:	push   eax
  43bc91:	add    bh,bh
  43bc93:	pop    ss
  43bc94:	mov    ebx,edi
  43bc96:	inc    DWORD PTR ds:0x24eaaa00
  43bc9c:	sbb    DWORD PTR [ecx+0x4ccc00],ecx
  43bca2:	inc    DWORD PTR [esi-0x1]
  43bca5:	scas   eax,DWORD PTR es:[edi]
  43bca6:	add    BYTE PTR [edx+0x41e23a00],dh
  43bcac:	cmp    eax,DWORD PTR [eax]
  43bcae:	inc    DWORD PTR [ebx-0x4000012]
  43bcb4:	add    dh,ch
  43bcb6:	push   DWORD PTR [edi-0x1]
  43bcb9:	loope  0x43bd20
  43bcbb:	sbb    ecx,DWORD PTR [edx-0x34]
  43bcbe:	int3   
  43bcbf:	int3   
  43bcc0:	fiadd  DWORD PTR [ebx-0x147cce01]
  43bcc6:	add    BYTE PTR [edx-0x1e3de800],ch
  43bccc:	popf   
  43bccd:	inc    DWORD PTR [eax]
  43bccf:	inc    DWORD PTR [eax-0xd30001]
  43bcd5:	dec    ebx
  43bcd6:	(bad)  
  43bcd7:	mov    ecx,0x1f3e4800
  43bcdc:	pop    esp
  43bcdd:	inc    DWORD PTR [ebx+0xcc6683]
  43bce3:	sub    edi,edi
  43bce5:	(bad)  
  43bce8:	inc    DWORD PTR [ecx-0x7a]
  43bceb:	mov    esi,0xffffcc5a
  43bcf0:	jo     0x43bcf2
  43bcf2:	jmp    DWORD PTR [ecx-0x1]
  43bcf5:	sbb    al,0x83
  43bcf7:	arpl   WORD PTR [eax],ax
  43bcf9:	ins    DWORD PTR es:[edi],dx
  43bcfa:	xchg   esp,eax
  43bcfb:	or     al,0xfd
  43bcfd:	cmp    edi,0xffffffff
  43bd00:	pop    edi
  43bd01:	(bad)  
  43bd02:	(bad)  
  43bd03:	jp     0x43bc8e
  43bd05:	mov    ecx,0x39ff0dff
  43bd0a:	scas   eax,DWORD PTR es:[edi]
  43bd0b:	les    esp,FWORD PTR [ebx]
  43bd0d:	add    bh,bh
  43bd0f:	add    BYTE PTR [ebp-0x1],ah
  43bd12:	sub    DWORD PTR [esi],0x0
  43bd15:	cmp    DWORD PTR [ecx-0x185700ee],ecx
  43bd1b:	iret   
  43bd1c:	(bad)  
  43bd1e:	add    bh,bh
  43bd20:	mov    ebp,0x8316ffff
  43bd25:	in     al,dx
  43bd26:	add    BYTE PTR [ebp-0x1],dl
  43bd29:	adc    eax,0xbcf018
  43bd2e:	add    BYTE PTR [eax],al
  43bd30:	mov    ch,0x0
  43bd32:	add    bl,bh
  43bd34:	jmp    FWORD PTR [eax+eax*1-0x6dd17c5a]
  43bd3b:	cmp    cl,BYTE PTR [esi+0x0]
  43bd3e:	add    BYTE PTR [eax],al
  43bd40:	mov    ds:0xccfd8983,eax
  43bd45:	outs   dx,DWORD PTR ds:[esi]
  43bd46:	dec    DWORD PTR [ebx-0x1]
  43bd49:	dec    ecx
  43bd4a:	sub    DWORD PTR [edi-0x48],ebx
  43bd4d:	int3   
  43bd4e:	dec    esp
  43bd50:	cmp    al,0xff
  43bd52:	int3   
  43bd53:	addr16 inc ebx
  43bd56:	add    BYTE PTR [edi+edi*8],cl
  43bd59:	lods   al,BYTE PTR ds:[esi]
  43bd5a:	jl     0x43bcde
  43bd5c:	or     BYTE PTR [ebx-0x133400],al
  43bd62:	add    BYTE PTR [edi+edi*8],bl
  43bd65:	and    bh,bh
  43bd67:	leave  
  43bd68:	call   DWORD PTR ds:0xff55be5f
  43bd6e:	add    ah,cl
  43bd70:	pop    edx
  43bd71:	add    bh,bh
  43bd73:	xor    edi,edi
  43bd75:	call   0x1743b946
  43bd7a:	in     al,dx
  43bd7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bd7d:	int3   
  43bd7e:	cmp    edi,0xffffffb3
  43bd81:	cmp    edi,0x59
  43bd84:	add    esi,0xffffffff
  43bd87:	scas   al,BYTE PTR es:[edi]
  43bd88:	add    BYTE PTR ds:0xff47be81,bh
  43bd8e:	add    BYTE PTR [eax],al
  43bd90:	pusha  
  43bd91:	add    DWORD PTR [ebx-0x757c40],0x6d
  43bd98:	inc    DWORD PTR [esi-0xef859a]
  43bd9e:	(bad)  
  43bd9f:	call   FWORD PTR [ecx-0x7d]
  43bda2:	sub    ebp,0xffffffff
  43bda5:	add    eax,DWORD PTR [eax]
  43bda7:	xor    eax,DWORD PTR [ebx+0x3692a6b6]
  43bdad:	int3   
  43bdae:	int3   
  43bdaf:	add    DWORD PTR [edi-0xb8ff01],0xe
  43bdb6:	add    al,dh
  43bdb8:	(bad)  
  43bdb9:	cmp    eax,0xcca9e688
  43bdbe:	inc    DWORD PTR [ebx+0x53ffff61]
  43bdc4:	add    bl,bl
  43bdc6:	add    BYTE PTR [ebx],al
  43bdc8:	(bad)  
  43bdc9:	mov    esi,0xdacff5
  43bdce:	add    bh,bh
  43bdd0:	popf   
  43bdd1:	int3   
  43bdd2:	int3   
  43bdd3:	call   0x49ff:0x4e0011ff
  43bdda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bddb:	lds    ebp,FWORD PTR [edi]
  43bddd:	add    BYTE PTR [eax],al
  43bddf:	mov    DWORD PTR [edi-0x1],esp
  43bde2:	push   DWORD PTR [eax]
  43bde4:	mov    DWORD PTR [ebp-0x6cff3f77],esi
  43bdea:	xcrypt-cbc (bad)
  43bdeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bdec:	aam    0x0
  43bdee:	inc    DWORD PTR [eax]
  43bdf0:	jge    0x43bdf1
  43bdf2:	add    BYTE PTR [edx+0x6e00c400],ch
  43bdf8:	mov    DWORD PTR [eax-0x466b94],eax
  43bdfe:	add    DWORD PTR [eax],0x68
  43be01:	add    BYTE PTR [ecx+0xaeffba],cl
  43be07:	jno    0x43be08
  43be09:	aaa    
  43be0a:	(bad)  
  43be0b:	shl    DWORD PTR [ebx-0x1],1
  43be0e:	add    bh,bh
  43be10:	mov    al,ds:0x8b0083
  43be15:	outs   dx,DWORD PTR ds:[esi]
  43be16:	add    BYTE PTR [edi],cl
  43be18:	inc    DWORD PTR [ebx+ecx*1]
  43be1b:	pushf  
  43be1c:	push   ecx
  43be1d:	or     DWORD PTR [ecx-0x76006677],0xffffffde
  43be24:	add    BYTE PTR [ebx+eax*4+0x298a00b4],ah
  43be2b:	outs   dx,DWORD PTR ds:[esi]
  43be2c:	lock (bad) 
  43be2e:	(bad)  
  43be2f:	(bad)  
  43be30:	clc    
  43be31:	(bad)  
  43be32:	inc    esp
  43be34:	push   eax
  43be36:	and    DWORD PTR [edi-0xc207301],0xffffffb5
  43be3d:	add    BYTE PTR [eax],al
  43be3f:	call   DWORD PTR [ecx+ecx*4-0x3300ef01]
  43be46:	(bad)  
  43be47:	cld    
  43be48:	int3   
  43be49:	out    dx,al
  43be4a:	ins    BYTE PTR es:[edi],dx
  43be4b:	adc    DWORD PTR [ebp-0x7d],0xcc5783ff
  43be52:	jmp    edi
  43be54:	or     eax,0xffffff83
  43be57:	dec    esp
  43be58:	(bad)  
  43be59:	out    dx,eax
  43be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43be5b:	in     al,dx
  43be5c:	cmc    
  43be5d:	add    BYTE PTR [eax],al
  43be5f:	call   FWORD PTR [eax+eax*1]
  43be62:	int3   
  43be63:	(bad)  
  43be64:	add    BYTE PTR ds:0xcfcc18ff,ch
  43be6a:	push   ss
  43be6b:	test   BYTE PTR [edi+edi*8-0x1],0x89
  43be70:	add    edi,edi
  43be72:	add    DWORD PTR ds:0x58ff9200,0xffffff83
  43be79:	repz inc eax
  43be7b:	mov    edx,0xffff006c
  43be80:	je     0x43be05
  43be82:	(bad)  
  43be83:	jge    0x43be84
  43be85:	jmp    0x43be0a
  43be87:	hlt    
  43be88:	(bad)  
  43be89:	fcom   DWORD PTR [ebx+esi*4]
  43be8c:	mov    ecx,0x6aff00ff
  43be91:	inc    DWORD PTR [eax]
  43be93:	mov    ebp,0xdaffc700
  43be98:	cmp    DWORD PTR [eax-0x33586a9b],0xffffffff
  43be9f:	add    al,dl
  43bea1:	mov    DWORD PTR [eax],eax
  43bea3:	rol    BYTE PTR [eax],cl
  43bea5:	xchg   edx,eax
  43bea6:	cmp    DWORD PTR ds:0x6cc913cc,0x32
  43bead:	add    BYTE PTR [eax],al
  43beaf:	(bad)  
  43beb0:	aas    
  43beb1:	inc    DWORD PTR [eax]
  43beb3:	jg     0x43beb4
  43beb5:	in     eax,dx
  43beb6:	add    BYTE PTR [ecx-0x1],ah
  43beb9:	icebp  
  43beba:	lea    esp,[ebp-0x6b]
  43bebd:	add    BYTE PTR [eax],al
  43bebf:	push   DWORD PTR [edi-0x250000]
  43bec5:	sar    edi,cl
  43bec7:	test   DWORD PTR [ecx+0x5d8e1bfe],0xeaff0089
  43bed1:	int3   
  43bed2:	call   FWORD PTR [eax]
  43bed4:	dec    ebx
  43bed6:	push   DWORD PTR [ebx-0x77]
  43bed9:	mov    ch,0xa0
  43bedb:	xchg   edi,eax
  43bedc:	out    0x0,al
  43bede:	add    DWORD PTR [eax],0x7b
  43bee1:	dec    esp
  43bee3:	dec    ebx
  43bee4:	jmp    DWORD PTR [eax]
  43bee6:	int3   
  43bee7:	pop    esi
  43bee8:	add    BYTE PTR [ebp+ebp*1-0x7cffdc1c],al
  43beef:	add    BYTE PTR ds:0xff5700ff,ch
  43bef5:	and    bh,bh
  43bef7:	inc    edx
  43bef8:	and    edi,0xffffff81
  43befb:	jmp    0x83fb:0xff83ffb3
  43bf02:	(bad)  
  43bf03:	fld    QWORD PTR [eax]
  43bf05:	cld    
  43bf06:	add    BYTE PTR [ebx-0x1],bh
  43bf09:	and    dl,dl
  43bf0b:	rcr    BYTE PTR [esi],cl
  43bf0d:	add    bh,bh
  43bf0f:	dec    DWORD PTR [eax]
  43bf11:	add    bh,bh
  43bf13:	data16 add BYTE PTR [esi],ah
  43bf16:	and    DWORD PTR [ebx-0x77],0x59
  43bf1a:	pop    ss
  43bf1b:	in     al,dx
  43bf1c:	ss int3 
  43bf1e:	int3   
  43bf1f:	call   FWORD PTR [ebx+0x2a0000]
  43bf25:	out    dx,eax
  43bf26:	inc    DWORD PTR [ecx]
  43bf28:	push   esi
  43bf2a:	mov    ebp,0xff0022dd
  43bf2f:	sub    DWORD PTR [ebx],0x0
  43bf32:	add    BYTE PTR [edx],ch
  43bf34:	add    BYTE PTR [ecx],ah
  43bf36:	jmp    FWORD PTR [ebx+eax*4+0x61b1b9d6]
  43bf3d:	int3   
  43bf3e:	inc    DWORD PTR [eax]
  43bf40:	sar    bh,0xcc
  43bf43:	adc    DWORD PTR gs:[edi-0x1],0xffffff94
  43bf48:	add    ah,cl
  43bf4a:	int3   
  43bf4b:	inc    DWORD PTR [eax]
  43bf4d:	dec    esp
  43bf4f:	add    BYTE PTR [eax],al
  43bf51:	int3   
  43bf52:	(bad)  
  43bf53:	jmp    DWORD PTR [esi]
  43bf55:	inc    esi
  43bf56:	add    BYTE PTR [ebx-0x7d],dh
  43bf59:	pop    ds
  43bf5a:	(bad)  
  43bf5b:	push   DWORD PTR [edi+0x55]
  43bf5e:	dec    ecx
  43bf60:	add    BYTE PTR [ebp+0x0],dh
  43bf63:	add    BYTE PTR [esi-0x53],ch
  43bf66:	add    al,bl
  43bf68:	add    DWORD PTR [edi-0x1],0xffffff83
  43bf6c:	loope  0x43bf9c
  43bf6e:	add    BYTE PTR [edi-0x7d],ah
  43bf71:	push   eax
  43bf72:	(bad)  
  43bf73:	jmp    DWORD PTR [ebx+eiz*8+0x0]
  43bf77:	dec    edx
  43bf78:	int3   
  43bf79:	mov    dl,0x83
  43bf7b:	add    BYTE PTR [ebx-0x3361ff0e],al
  43bf81:	pop    edx
  43bf82:	dec    DWORD PTR [ecx+0x1400d755]
  43bf88:	push   DWORD PTR [edi+0x35b7ffff]
  43bf8e:	add    BYTE PTR [ecx-0x1],al
  43bf91:	sbb    bh,bh
  43bf93:	(bad)  
  43bf94:	cmp    al,0xca
  43bf96:	add    BYTE PTR [ebp-0x33ff9d00],ah
  43bf9c:	or     esi,DWORD PTR [edi+edi*8]
  43bf9f:	adc    al,0xff
  43bfa1:	loope  0x43bfa3
  43bfa3:	int3   
  43bfa4:	fpatan 
  43bfa6:	call   DWORD PTR [esi]
  43bfa8:	call   DWORD PTR [ecx]
  43bfaa:	inc    DWORD PTR [eax]
  43bfac:	test   BYTE PTR [ecx+ecx*4-0xf10083],0x0
  43bfb4:	pop    ebp
  43bfb5:	ins    BYTE PTR es:[edi],dx
  43bfb6:	push   DWORD PTR [eax-0x1]
  43bfb9:	loope  0x43bf3e
  43bfbb:	mov    DWORD PTR [esi-0xaaffc5],edi
  43bfc1:	mov    es,WORD PTR [eax]
  43bfc3:	adc    DWORD PTR [ecx+eax*1+0x0],0xffffffa7
  43bfc8:	add    BYTE PTR [ebx-0x4d857700],bh
  43bfce:	call   DWORD PTR [ecx]
  43bfd0:	push   DWORD PTR [ebx-0x1]
  43bfd3:	add    BYTE PTR ds:0x83650084,bl
  43bfd9:	loope  0x43bfdb
  43bfdb:	call   FWORD PTR [edx]
  43bfdd:	test   bh,bh
  43bfdf:	das    
  43bfe0:	jmp    FWORD PTR [eax-0x589ff01]
  43bfe6:	inc    DWORD PTR [ecx]
  43bfe8:	mov    DWORD PTR ds:0x233f0000,ecx
  43bfee:	inc    DWORD PTR [edx+0xa0cc]
  43bff4:	sti    
  43bff5:	sar    edi,1
  43bff7:	dec    eax
  43bff8:	call   FWORD PTR [edi-0x1]
  43bffb:	(bad)  
  43bffc:	mov    esi,0xff0acc4d
  43c001:	add    BYTE PTR [eax],0x0
  43c004:	sub    ch,BYTE PTR [esi]
  43c006:	call   FWORD PTR [eax+eax*1-0x5]
  43c00a:	dec    esp
  43c00c:	imul   ebx,DWORD PTR [edi-0x7eff4a00],0x0
  43c013:	call   FWORD PTR [ebp+0xb]
  43c016:	mov    edx,eax
  43c018:	add    BYTE PTR [eax],al
  43c01a:	add    BYTE PTR [eax],al
  43c01c:	out    0xf8,eax
  43c01e:	dec    DWORD PTR [ecx-0x1]
  43c021:	pop    es
  43c022:	add    BYTE PTR [eax],al
  43c024:	addr16 pop edx
  43c026:	add    BYTE PTR ds:0x83ffa000,bh
  43c02c:	inc    ebx
  43c02d:	sub    ecx,esp
  43c02f:	or     bh,bh
  43c031:	or     ah,0x83
  43c034:	inc    ch
  43c036:	mov    DWORD PTR [ebp+0xffc700],edx
  43c03c:	aaa    
  43c03d:	pop    esp
  43c03e:	mov    DWORD PTR [esi],ebx
  43c040:	int3   
  43c041:	sbb    bh,bh
  43c043:	add    BYTE PTR [esi+0x7e],bl
  43c046:	jmp    DWORD PTR [esi-0x7d]
  43c049:	icebp  
  43c04a:	add    BYTE PTR [eax],al
  43c04c:	bnd jp 0x43c04f
  43c04f:	icebp  
  43c050:	add    BYTE PTR [edi+edi*8-0x43634],ah
  43c057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c058:	call   FWORD PTR [edi]
  43c05a:	(bad)  
  43c05b:	call   ebp
  43c05d:	and    al,0x0
  43c05f:	hlt    
  43c060:	add    cl,cl
  43c062:	(bad)  
  43c063:	jmp    FWORD PTR [edi+esi*1]
  43c066:	add    BYTE PTR [eax+eax*1],al
  43c069:	or     bh,bh
  43c06b:	add    DWORD PTR [ecx-0x1e],0xffffffff
  43c06f:	ret    0xbdff
  43c072:	or     esp,0xffffffd2
  43c075:	jmp    0xb142f9fd
  43c07a:	inc    DWORD PTR [eax]
  43c07c:	mov    cl,0x8a
  43c07e:	jmp    FWORD PTR [eax-0x77]
  43c081:	inc    edx
  43c082:	add    bh,bh
  43c084:	xor    BYTE PTR [ecx-0x1],al
  43c087:	sbb    al,0xff
  43c089:	cdq    
  43c08a:	(bad)  
  43c08b:	dec    DWORD PTR [ebx-0x338f333e]
  43c091:	mov    dl,0x89
  43c093:	(bad)  
  43c094:	ficom  WORD PTR [edx]
  43c096:	call   FWORD PTR [esi+0x0]
  43c099:	mov    edi,edi
  43c09b:	push   DWORD PTR [ebp-0x339bffaa]
  43c0a1:	mov    ebp,0x7a55ffff
  43c0a6:	and    ebx,0xffffff89
  43c0a9:	pop    edi
  43c0aa:	int3   
  43c0ab:	sub    DWORD PTR [esi],0xffffffc1
  43c0ae:	call   esi
  43c0b0:	mov    DWORD PTR ds:0xdfd989ff,esi
  43c0b6:	mov    DWORD PTR [eax+0xffe000],ebx
  43c0bc:	inc    eax
  43c0bd:	pop    es
  43c0be:	jmp    FWORD PTR [edx+0x0]
  43c0c1:	loop   0x43c08f
  43c0c3:	mov    DWORD PTR [edx+0x9300e0],ecx
  43c0c9:	cli    
  43c0ca:	int3   
  43c0cb:	add    BYTE PTR [esi],cl
  43c0cd:	imul   edi,edi,0xffb400ab
  43c0d3:	mov    DWORD PTR [esi-0x1300d4],ebp
  43c0d9:	mov    bl,0x83
  43c0db:	add    BYTE PTR [ebx+0x18],cl
  43c0de:	add    BYTE PTR [edi-0x331f00],bh
  43c0e4:	xchg   ebp,eax
  43c0e5:	xor    bh,bh
  43c0e7:	mov    bl,0xff
  43c0e9:	xor    DWORD PTR [ebx-0x7c53967d],eax
  43c0ef:	into   
  43c0f0:	add    BYTE PTR [ebp+0x0],dh
  43c0f3:	add    al,dh
  43c0f5:	dec    ecx
  43c0f6:	(bad)  
  43c0f7:	mov    eax,0x89cc3cff
  43c0fc:	loopne 0x43c125
  43c0fe:	add    bl,dl
  43c100:	add    cl,ch
  43c102:	inc    DWORD PTR [eax]
  43c104:	xchg   ebp,eax
  43c105:	test   eax,0xe1832dff
  43c10a:	mov    edi,edi
  43c10c:	sar    al,0xff
  43c10f:	mov    edx,0xffffda00
  43c114:	push   es
  43c115:	sbb    edi,edi
  43c117:	cld    
  43c118:	(bad)  
  43c119:	jge    0x43c09e
  43c11b:	dec    ebx
  43c11d:	or     eax,DWORD PTR [eax]
  43c11f:	mov    edi,edi
  43c121:	pop    edx
  43c122:	cmp    edi,0xffffffba
  43c125:	adc    eax,0x3dffebff
  43c12a:	add    bh,bh
  43c12c:	dec    esi
  43c12d:	sub    bh,bh
  43c12f:	push   edx
  43c130:	(bad)  
  43c131:	mov    eax,0xaada0000
  43c136:	add    BYTE PTR ds:0xffcc2f00,bh
  43c13c:	mov    bh,0x9a
  43c13e:	call   FWORD PTR [eax-0x1]
  43c141:	jb     0x43c142
  43c143:	call   DWORD PTR [edi-0x3f]
  43c146:	inc    DWORD PTR [esi]
  43c148:	(bad)  
  43c149:	js     0x43c14a
  43c14b:	push   DWORD PTR [eax+0x43]
  43c14e:	add    DWORD PTR [eax],0xffffffff
  43c151:	xor    al,0xff
  43c153:	jmp    FWORD PTR [ebx]
  43c155:	stos   DWORD PTR es:[edi],eax
  43c156:	(bad)  
  43c157:	(bad)  
  43c159:	call   0xc9738de1
  43c15e:	call   FWORD PTR ds:0xff00a4ff
  43c164:	hlt    
  43c165:	int    0xff
  43c167:	cli    
  43c168:	add    ah,ah
  43c16a:	mov    esp,ecx
  43c16c:	les    ebp,FWORD PTR [ecx]
  43c16e:	sub    DWORD PTR [edi+0xcc97ff],0xffffff89
  43c175:	add    bh,bh
  43c177:	sub    al,BYTE PTR [eax]
  43c179:	mov    edi,?
  43c17b:	add    BYTE PTR [edx+0x5e],cl
  43c17e:	add    BYTE PTR [ecx],ah
  43c180:	inc    DWORD PTR [eax-0x28c9ff7d]
  43c186:	sub    DWORD PTR [eax],0x0
  43c189:	xor    eax,0xc98400ff
  43c18e:	add    BYTE PTR [ebx+eax*4-0x1900ff13],bl
  43c195:	nop
  43c196:	add    BYTE PTR [ebp-0x76e200],al
  43c19c:	lahf   
  43c19d:	gs int3 
  43c19f:	jbe    0x43c1a0
  43c1a1:	fcmove st,st(4)
  43c1a3:	push   DWORD PTR [esi]
  43c1a5:	mov    edi,?
  43c1a7:	mov    al,0x0
  43c1a9:	stos   BYTE PTR es:[edi],al
  43c1aa:	(bad)  
  43c1ab:	push   DWORD PTR [eax]
  43c1ad:	sub    al,BYTE PTR [ebx-0xdc0076]
  43c1b3:	(bad)  
  43c1b4:	stc    
  43c1b5:	jns    0x43c1b6
  43c1b7:	pop    edx
  43c1b8:	add    BYTE PTR [eax-0x2c6e7c7d],dh
  43c1be:	add    BYTE PTR [esi-0x7c000600],dh
  43c1c4:	mov    eax,ds:0xfffd83c9
  43c1c9:	sbb    DWORD PTR [eax],eax
  43c1cb:	and    DWORD PTR [esi],0xffffff98
  43c1ce:	add    BYTE PTR [edi],cl
  43c1d0:	and    DWORD PTR [ebx],0x0
  43c1d3:	and    eax,0xffffffed
  43c1d6:	push   esi
  43c1d8:	jmp    DWORD PTR [edi]
  43c1da:	inc    DWORD PTR [ebx+0x35009850]
  43c1e0:	jmp    FWORD PTR [eax-0x2cc5ff01]
  43c1e6:	add    BYTE PTR [ebx],al
  43c1e8:	add    BYTE PTR [ebx-0x7d],bh
  43c1eb:	add    BYTE PTR [ecx+esi*1-0xd7ca47d],ch
  43c1f2:	(bad)  
  43c1f3:	call   FWORD PTR [edx]
  43c1f5:	sub    bh,bh
  43c1f7:	int3   
  43c1f8:	inc    DWORD PTR [edi-0x7d]
  43c1fb:	int3   
  43c1fc:	dec    DWORD PTR [ecx+0x4b896b00]
  43c202:	add    bh,bh
  43c204:	jne    0x43c1ae
  43c206:	jmp    FWORD PTR [edi]
  43c208:	sbb    DWORD PTR [eax+0x7907ffff],0xffffffff
  43c20f:	push   ss
  43c210:	dec    esi
  43c212:	add    BYTE PTR [ebx+0x70ffbe8b],al
  43c218:	add    cl,ah
  43c21a:	inc    DWORD PTR [eax]
  43c21c:	mov    esp,0xffdb005e
  43c221:	fdivr  st,st(7)
  43c223:	jmp    FWORD PTR [eax]
  43c225:	cmp    ecx,esp
  43c227:	dec    DWORD PTR cs:[ebx+0x78b2ccff]
  43c22e:	add    BYTE PTR [edi],bl
  43c230:	add    BYTE PTR [esi-0x1],bl
  43c233:	call   FWORD PTR [ecx]
  43c235:	xlat   BYTE PTR ds:[ebx]
  43c236:	dec    DWORD PTR [ecx-0x76003300]
  43c23c:	mov    esp,0xffe30099
  43c241:	or     eax,0x119e0000
  43c246:	int3   
  43c247:	(bad)  
  43c248:	(bad)  
  43c249:	clc    
  43c24a:	add    BYTE PTR [eax],al
  43c24c:	mov    al,0x14
  43c24e:	add    BYTE PTR [edi],dh
  43c250:	add    BYTE PTR [esp+ecx*8-0xa9d600],ch
  43c257:	sub    eax,DWORD PTR [eax]
  43c259:	lock dec esp
  43c25c:	mov    eax,0xffc200fe
  43c261:	aad    0x0
  43c263:	add    BYTE PTR [eax],ch
  43c265:	icebp  
  43c266:	(bad)  
  43c267:	jg     0x43c268
  43c269:	loop   0x43c26b
  43c26b:	dec    edi
  43c26d:	jb     0x43c26e
  43c26f:	das    
  43c270:	call   FWORD PTR [eax+0x7c77ffcc]
  43c276:	jmp    FWORD PTR [ebx]
  43c278:	push   ebp
  43c27a:	int3   
  43c27b:	mov    DWORD PTR [ebx],eax
  43c27d:	leave  
  43c27e:	(bad)  
  43c27f:	cmp    BYTE PTR [eax],al
  43c281:	inc    DWORD PTR [ebx-0x83501]
  43c287:	sub    al,0x0
  43c289:	xchg   esp,eax
  43c28a:	add    BYTE PTR [ebx-0x657ce154],al
  43c290:	push   DWORD PTR [ecx]
  43c292:	inc    DWORD PTR [ebx-0x6200b077]
  43c298:	add    DWORD PTR [ebx+0x0],0xffffffff
  43c29c:	adc    DWORD PTR [ecx],edi
  43c29e:	add    ebp,0x0
  43c2a1:	retf   
  43c2a2:	add    bh,bh
  43c2a4:	out    0x32,al
  43c2a6:	add    BYTE PTR [esp+ecx*8+0x7983ff6f],al
  43c2ad:	nop
  43c2ae:	int3   
  43c2af:	int3   
  43c2b0:	adc    DWORD PTR [edi],0x0
  43c2b3:	call   FWORD PTR [eax-0x20]
  43c2b6:	add    BYTE PTR [edx],ch
  43c2b8:	(bad)  
  43c2b9:	mov    ebp,0x89a000ff
  43c2be:	call   DWORD PTR [eax+eax*1-0xa33003a]
  43c2c5:	outs   dx,BYTE PTR ds:[esi]
  43c2c6:	sub    DWORD PTR [ebx-0x33ff357d],0xffffffe2
  43c2cd:	or     edi,edi
  43c2cf:	int    0x0
  43c2d1:	arpl   di,di
  43c2d3:	xor    DWORD PTR [esi-0x7ca67c64],0x7f
  43c2da:	inc    DWORD PTR [eax]
  43c2dc:	sbb    edi,DWORD PTR [eax]
  43c2de:	cmp    DWORD PTR [eax-0xed01],0x6c
  43c2e5:	and    bh,bh
  43c2e7:	call   0xff4447ec
  43c2ec:	sbb    BYTE PTR [ebp-0x34],ch
  43c2ef:	jl     0x43c2f1
  43c2f1:	sti    
  43c2f2:	int3   
  43c2f3:	add    BYTE PTR [ebp+edi*4-0x34],dl
  43c2f7:	ss add dh,dh
  43c2fa:	int3   
  43c2fb:	call   FWORD PTR [esi]
  43c2fd:	xor    eax,DWORD PTR [ebx-0x760054]
  43c303:	add    dh,ch
  43c305:	xor    DWORD PTR fs:[eax+eax*1-0x707c00d3],0xffffffc2
  43c30e:	add    BYTE PTR [ecx-0x5400],dh
  43c314:	sbb    al,0x62
  43c316:	(bad)  
  43c317:	mov    esp,0xffffd2ff
  43c31c:	outs   dx,BYTE PTR ds:[esi]
  43c31d:	stc    
  43c31e:	add    al,bh
  43c320:	jmp    DWORD PTR [esi+0x44630000]
  43c326:	dec    DWORD PTR [esi]
  43c328:	jmp    FWORD PTR [edi+edi*8]
  43c32b:	add    BYTE PTR [edx],al
  43c32d:	xor    DWORD PTR [eax],eax
  43c32f:	add    DWORD PTR [eax],eax
  43c331:	adc    al,0xcc
  43c333:	jmp    DWORD PTR [ebx]
  43c335:	(bad)  
  43c336:	call   DWORD PTR [esi]
  43c338:	mov    DWORD PTR [esi-0x77],esi
  43c33b:	push   esi
  43c33d:	xor    edi,edi
  43c33f:	icebp  
  43c340:	(bad)  
  43c341:	fld    DWORD PTR [eax]
  43c343:	push   DWORD PTR [ebp+esi*1-0x1]
  43c347:	dec    ecx
  43c348:	call   DWORD PTR [ecx-0x34]
  43c34b:	inc    DWORD PTR [ebx]
  43c34d:	sbb    al,BYTE PTR [eax]
  43c34f:	mov    BYTE PTR [ebx-0x43ff00ae],al
  43c355:	lods   al,BYTE PTR ds:[esi]
  43c356:	add    DWORD PTR [edx],0x0
  43c359:	mov    al,ds:0x8077ff00
  43c35e:	add    BYTE PTR [edx],ah
  43c360:	add    bh,ch
  43c362:	add    BYTE PTR [ecx-0x5f00ea2d],cl
  43c368:	call   DWORD PTR [ecx-0x3e67007d]
  43c36e:	jmp    FWORD PTR [ebx+0xffb083]
  43c374:	shl    DWORD PTR [ebp-0x1],1
  43c377:	outs   dx,DWORD PTR ds:[esi]
  43c378:	add    BYTE PTR [ebx+0x1b7f00ff],al
  43c37e:	inc    DWORD PTR [ebx+0xff78ff]
  43c384:	popf   
  43c385:	xor    eax,DWORD PTR [ebx-0x8500bb]
  43c38b:	add    BYTE PTR [ecx+0x648942],ch
  43c391:	(bad)  
  43c392:	inc    DWORD PTR [eax]
  43c394:	aas    
  43c395:	add    edi,edi
  43c397:	mov    ds:0xffcc02ff,eax
  43c39c:	inc    edx
  43c39d:	popf   
  43c39e:	inc    DWORD PTR [edi]
  43c3a0:	int3   
  43c3a1:	push   0x0
  43c3a3:	push   ecx
  43c3a5:	mov    ?,edi
  43c3a7:	pusha  
  43c3a8:	(bad)  
  43c3a9:	cmp    al,0x83
  43c3ab:	xor    DWORD PTR [edi],0x71
  43c3ae:	adc    DWORD PTR ds:0xffff4583,0xfffffff5
  43c3b5:	das    
  43c3b6:	jmp    FWORD PTR [ebp-0x1]
  43c3b9:	push   edx
  43c3ba:	cmp    edi,0x35
  43c3bd:	bswap  esp
  43c3bf:	pop    ebx
  43c3c0:	add    BYTE PTR [eax+eax*1+0x69c600],ch
  43c3c7:	cmc    
  43c3c8:	add    BYTE PTR [eax-0x1],dh
  43c3cb:	int3   
  43c3cc:	mov    al,0xdc
  43c3ce:	jmp    DWORD PTR [edi]
  43c3d0:	call   ecx
  43c3d2:	(bad)  
  43c3d3:	call   FWORD PTR [ebx-0x7c923308]
  43c3d9:	adc    al,0xff
  43c3db:	int3   
  43c3dc:	retf   0xff36
  43c3df:	rol    DWORD PTR [ebx+0x3aff0079],0x16
  43c3e6:	add    ch,dl
  43c3e8:	push   DWORD PTR [ecx-0x1]
  43c3eb:	add    BYTE PTR [edx-0xb3000f],ah
  43c3f1:	fwait
  43c3f2:	inc    DWORD PTR [eax]
  43c3f4:	lds    ebx,FWORD PTR [eax+0x0]
  43c3f7:	xchg   BYTE PTR [eax],al
  43c3f9:	and    eax,0xd790ff00
  43c3fe:	add    cl,bh
  43c400:	mov    DWORD PTR [edx-0x1],esp
  43c403:	add    BYTE PTR [ebp-0x15ff22],cl
  43c409:	push   ecx
  43c40a:	add    bh,bh
  43c40c:	std    
  43c40d:	mov    ebp,0xebcc4700
  43c412:	(bad)  
  43c413:	dec    DWORD PTR [esp+eiz*4]
  43c416:	call   ebx
  43c418:	jmp    FWORD PTR [eax-0x2efb3400]
  43c41e:	(bad)  
  43c41f:	fld    QWORD PTR [eax]
  43c421:	mov    ecx,0xdf22ffff
  43c426:	add    BYTE PTR [edi],dl
  43c428:	add    BYTE PTR [eax+eax*1],bh
  43c42b:	sbb    DWORD PTR [edi-0x24],0xffffff83
  43c42f:	inc    DWORD PTR [bx+di]
  43c432:	inc    DWORD PTR [eax]
  43c434:	mov    al,0xaa
  43c436:	dec    DWORD PTR ds:0xffff9883
  43c43c:	mov    ah,0x48
  43c43e:	push   DWORD PTR [edi-0x1]
  43c441:	test   BYTE PTR [eax],al
  43c443:	cmp    DWORD PTR [ebx+0x79ff2a],0xffffffed
  43c44a:	(bad)  
  43c44b:	(bad)  
  43c44c:	out    dx,al
  43c44d:	mov    dl,0xff
  43c44f:	ret    
  43c450:	sbb    DWORD PTR [edi],0xffffff89
  43c453:	xor    esp,0x9
  43c456:	jmp    FWORD PTR ds:0x85ff
  43c45c:	fs mov edi,0x6a890d00
  43c462:	(bad)  
  43c463:	(bad)  
  43c464:	fstp   TBYTE PTR [edx-0x77]
  43c467:	rol    BYTE PTR [eax],0x3a
  43c46a:	(bad)  
  43c46b:	call   DWORD PTR [edx-0x33ffff09]
  43c471:	pop    ebp
  43c472:	(bad)  
  43c473:	(bad)  
  43c474:	jmp    0x64c4c7
  43c479:	sbb    al,BYTE PTR [eax]
  43c47b:	dec    DWORD PTR [edi]
  43c47d:	jb     0x43c47e
  43c47f:	add    DWORD PTR [eax],0x81ff0091
  43c485:	mov    eax,ds:0x67830100
  43c48a:	int3   
  43c48b:	call   DWORD PTR [edx-0x24]
  43c48e:	jmp    DWORD PTR [edx+0x0]
  43c491:	pop    ebx
  43c492:	add    DWORD PTR [eax],0xffffffab
  43c495:	and    edi,edi
  43c497:	cmp    al,BYTE PTR [ebx-0x11ffff53]
  43c49d:	loop   0x43c46b
  43c49f:	lods   al,BYTE PTR ds:[esi]
  43c4a0:	push   DWORD PTR [ebx+0x0]
  43c4a3:	int3   
  43c4a4:	cli    
  43c4a5:	(bad)  
  43c4a6:	int3   
  43c4a7:	mov    dl,0xff
  43c4a9:	(bad)  
  43c4aa:	add    DWORD PTR [eax],0x66
  43c4ad:	test   DWORD PTR [ecx-0x1600f9],0x89a8c883
  43c4b7:	mov    esi,0xffc900
  43c4bc:	call   0x3c454
  43c4c1:	add    edi,edi
  43c4c3:	call   ebx
  43c4c5:	sbb    al,BYTE PTR [ebx-0x7c8533dd]
  43c4cb:	add    BYTE PTR [esp+ecx*1-0x1],ch
  43c4cf:	sar    edi,cl
  43c4d1:	and    eax,DWORD PTR [eax]
  43c4d3:	dec    DWORD PTR [ebx-0x18]
  43c4d6:	inc    DWORD PTR [edi+0x0]
  43c4d9:	je     0x43c4db
  43c4db:	int3   
  43c4dc:	lock or DWORD PTR [ecx-0x590100],0x89e1aeff
  43c4e7:	mov    ds:0xff896aff,al
  43c4ec:	dec    ebp
  43c4ed:	inc    ecx
  43c4ee:	mov    ecx,edx
  43c4f0:	jmp    FWORD PTR [esi]
  43c4f2:	add    bh,bh
  43c4f4:	sti    
  43c4f5:	jnp    0x43c4f7
  43c4f7:	icebp  
  43c4f8:	add    BYTE PTR [ebx],ch
  43c4fa:	add    BYTE PTR [eax],al
  43c4fc:	jmp    0x4dc564
  43c501:	mov    ?,edi
  43c503:	int3   
  43c504:	jns    0x43c507
  43c506:	or     DWORD PTR [eax-0x7c6f01],0x0
  43c50d:	sbb    BYTE PTR [eax],al
  43c50f:	fadd   DWORD PTR [eax]
  43c511:	inc    ebp
  43c512:	inc    DWORD PTR [ebx+0x66008e43]
  43c518:	add    BYTE PTR [eax],ah
  43c51a:	inc    DWORD PTR [eax]
  43c51c:	out    dx,eax
  43c51d:	in     al,0x0
  43c51f:	int3   
  43c520:	push   esi
  43c522:	add    bh,bh
  43c524:	sbb    ecx,esi
  43c526:	sbb    DWORD PTR [esi-0x34],0x6a
  43c52a:	(bad)  
  43c52b:	jmp    DWORD PTR [eax-0x65]
  43c52e:	int3   
  43c52f:	inc    esp
  43c530:	add    BYTE PTR [eax-0x246bff01],ch
  43c536:	inc    esp
  43c538:	dec    DWORD PTR [ebx+0x296cc83]
  43c53e:	jmp    ebx
  43c540:	mov    esi,ebx
  43c542:	add    DWORD PTR [ebx+0x6fffe66f],0xffffffcc
  43c549:	ror    esp,cl
  43c54b:	add    BYTE PTR [esp+ebp*2+0x73ccd5ff],dh
  43c552:	int3   
  43c553:	add    BYTE PTR [esi],ah
  43c555:	icebp  
  43c556:	add    BYTE PTR [ecx-0x1],ah
  43c559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c55a:	add    bh,bh
  43c55c:	jns    0x43c553
  43c55e:	inc    DWORD PTR [edx+0x0]
  43c561:	or     al,BYTE PTR [eax]
  43c563:	int3   
  43c564:	std    
  43c565:	or     al,0x83
  43c567:	mov    al,ds:0xcc89ad00
  43c56c:	in     al,0x72
  43c56e:	or     DWORD PTR [ecx-0x34],0x74
  43c572:	add    bh,bh
  43c574:	ret    
  43c575:	dec    eax
  43c576:	add    BYTE PTR [edi+0x0],bh
  43c579:	cld    
  43c57a:	add    BYTE PTR [ebx+0x1b8371b0],al
  43c580:	mov    DWORD PTR [eax],edi
  43c582:	add    ah,cl
  43c584:	(bad)  
  43c585:	mov    ch,0xff
  43c587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c588:	add    BYTE PTR [esi-0x4f810000],al
  43c58e:	add    BYTE PTR [eax-0x1],bl
  43c591:	mov    eax,DWORD PTR [ebx-0xfdfb00]
  43c597:	rol    BYTE PTR [ebx+0xd008915],0x7f
  43c59e:	(bad)  
  43c59f:	mov    eax,0xffd900
  43c5a4:	add    eax,DWORD PTR [ebp+0x268387ff]
  43c5aa:	inc    DWORD PTR [eax]
  43c5ac:	pop    esi
  43c5ad:	pop    ebp
  43c5ae:	push   edi
  43c5b0:	add    BYTE PTR ds:0xa88cffff,ch
  43c5b6:	int3   
  43c5b7:	das    
  43c5b8:	add    bh,cl
  43c5ba:	inc    DWORD PTR [eax]
  43c5bc:	mov    ecx,0x58ccd3
  43c5c1:	rol    BYTE PTR [eax],cl
  43c5c3:	push   DWORD PTR [edx+0x78]
  43c5c6:	add    BYTE PTR [esi+0x0],bh
  43c5c9:	dec    esp
  43c5cb:	int3   
  43c5cc:	xor    eax,0xff5c0099
  43c5d1:	fcmove st,st(4)
  43c5d3:	or     DWORD PTR [edi],0xffffff9c
  43c5d6:	int3   
  43c5d7:	mov    bh,0x0
  43c5d9:	leave  
  43c5da:	inc    DWORD PTR [eax]
  43c5dc:	(bad)  
  43c5dd:	push   0x0
  43c5df:	pop    es
  43c5e0:	mov    DWORD PTR [edi-0x1],ebx
  43c5e3:	add    BYTE PTR [ebp+0x36],al
  43c5e6:	(bad)  
  43c5e7:	jle    0x43c5e9
  43c5e9:	dec    ecx
  43c5ea:	inc    DWORD PTR [eax]
  43c5ec:	(bad)  
  43c5ed:	sbb    al,0xff
  43c5ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c5f0:	dec    ebx
  43c5f2:	inc    DWORD PTR [eax]
  43c5f4:	and    eax,0xe3ffc0
  43c5f9:	pop    edi
  43c5fa:	inc    DWORD PTR [ebx+0x483ca00]
  43c600:	dec    ecx
  43c602:	inc    DWORD PTR [eax]
  43c604:	loop   0x43c5ad
  43c606:	call   FWORD PTR [ecx+0x0]
  43c609:	dec    edx
  43c60a:	mov    edi,edi
  43c60c:	cmp    al,0x82
  43c60e:	inc    DWORD PTR [edi-0x763f01]
  43c614:	xor    esi,DWORD PTR [ecx+0x51fff383]
  43c61a:	inc    DWORD PTR [ebx-0x757c6a14]
  43c620:	call   DWORD PTR [eax]
  43c622:	dec    esp
  43c624:	or     DWORD PTR [edi+edi*8-0x527cb8],edi
  43c62b:	add    BYTE PTR [ecx],dl
  43c62d:	dec    ecx
  43c62e:	push   DWORD PTR [ebx+0x0]
  43c631:	call   0x2f57c702
  43c636:	jmp    DWORD PTR [edi+edi*8-0x2effff26]
  43c63d:	aas    
  43c63e:	add    BYTE PTR [edx-0x1],ah
  43c641:	inc    edx
  43c642:	(bad)  
  43c643:	(bad)  
  43c644:	jmp    0x43c60c
  43c646:	(bad)  
  43c647:	mov    esp,0x83ff0b89
  43c64c:	les    ecx,FWORD PTR [edi+0x0]
  43c64f:	push   edi
  43c650:	(bad)  
  43c651:	fcos   
  43c653:	mov    DWORD PTR [eax-0xd30033],ebp
  43c659:	cmp    edi,edi
  43c65b:	cmp    DWORD PTR [ebx],0xffffffcc
  43c65e:	push   DWORD PTR [ebp-0x77]
  43c661:	xor    edi,edi
  43c663:	inc    DWORD PTR [ecx-0xc2007d]
  43c669:	mov    dh,0xff
  43c66b:	int3   
  43c66c:	div    BYTE PTR [edi]
  43c66e:	cmp    DWORD PTR [edx+0xebff],0x50
  43c675:	retf   
  43c676:	jmp    ebx
  43c678:	add    ah,cl
  43c67a:	add    BYTE PTR [eax],al
  43c67c:	cld    
  43c67d:	(bad)  
  43c67e:	jmp    FWORD PTR ds:0xffff75ff
  43c684:	inc    esp
  43c685:	out    dx,al
  43c686:	xor    DWORD PTR [edx-0x7d],0x68
  43c68a:	add    BYTE PTR [eax],al
  43c68c:	pop    edi
  43c68d:	and    eax,DWORD PTR [ebx-0x560016]
  43c693:	call   DWORD PTR [ebp+0x15]
  43c696:	add    ch,cl
  43c698:	cmp    DWORD PTR [ecx],0xffffffff
  43c69b:	call   DWORD PTR [edi]
  43c69d:	idiv   edi
  43c69f:	mov    eax,0xff88cc
  43c6a4:	retf   
  43c6a5:	arpl   di,di
  43c6a7:	push   es
  43c6a8:	add    bl,dh
  43c6aa:	mov    edi,edi
  43c6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c6ad:	mov    esi,0x17002000
  43c6b2:	inc    DWORD PTR [ebx-0x53ff8c42]
  43c6b8:	add    BYTE PTR [ebx+0x7ae783cc],ah
  43c6be:	mov    DWORD PTR [edi-0x337cfb00],eax
  43c6c4:	retf   0xd8
  43c6c7:	rol    BYTE PTR [ebx+0x72ccccb2],cl
  43c6cd:	pusha  
  43c6ce:	int3   
  43c6cf:	test   eax,0x83ffb283
  43c6d4:	daa    
  43c6d5:	(bad)  
  43c6d7:	je     0x43c6d9
  43c6d9:	sbb    eax,0xcc9400ff
  43c6de:	add    DWORD PTR ds:0xcc000fff,0x60
  43c6e5:	xor    bh,bh
  43c6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c6e8:	add    BYTE PTR [ecx+0x3b9e83ff],bl
  43c6ee:	jmp    ebp
  43c6f0:	sbb    DWORD PTR [esp+ecx*8-0x1],0x17
  43c6f5:	stc    
  43c6f6:	jmp    eax
  43c6f8:	inc    DWORD PTR [edi-0x1]
  43c6fb:	call   ebp
  43c6fd:	repz call DWORD PTR [edi]
  43c700:	sbb    DWORD PTR [edi-0x6ac00100],0xffffffff
  43c707:	inc    ebp
  43c708:	int3   
  43c709:	(bad)  
  43c70a:	dec    DWORD PTR [ecx+0x1fff7f1a]
  43c710:	(bad)  
  43c711:	mov    ebp,0x561dffcc
  43c716:	inc    DWORD PTR [ebp+0x0]
  43c719:	mov    bh,bh
  43c71b:	mov    DWORD PTR [ebx-0x66],edi
  43c71e:	dec    DWORD PTR [edi-0x7c7c4801]
  43c724:	outs   dx,BYTE PTR ds:[esi]
  43c725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c726:	dec    esp
  43c728:	int3   
  43c729:	jmp    0xb681c7b7
  43c72e:	(bad)  
  43c72f:	in     al,dx
  43c730:	mov    DWORD PTR [eax],edi
  43c732:	int3   
  43c733:	dec    esp
  43c735:	sbb    bh,bh
  43c737:	push   ss
  43c738:	add    BYTE PTR [eax],bh
  43c73a:	dec    DWORD PTR [ecx+0x30ccaad2]
  43c740:	call   DWORD PTR [esi]
  43c742:	int3   
  43c743:	int3   
  43c744:	mov    DWORD PTR [eax-0x7d],ebp
  43c747:	or     BYTE PTR [eax],al
  43c749:	pop    edx
  43c74a:	(bad)  
  43c74b:	call   DWORD PTR [ebx+0x52]
  43c74e:	int3   
  43c74f:	retf   
  43c750:	call   DWORD PTR [esi]
  43c752:	int3   
  43c753:	dec    DWORD PTR [esi+0xd]
  43c756:	jmp    FWORD PTR [ebx]
  43c758:	xor    DWORD PTR [esp+ecx*8+0x8419ff],0x74
  43c760:	int3   
  43c761:	(bad)  
  43c762:	inc    DWORD PTR [eax]
  43c764:	pop    es
  43c765:	retf   
  43c766:	add    BYTE PTR [edi+0x0],ch
  43c769:	fcmovne st,st(4)
  43c76b:	add    BYTE PTR [eax-0x34],al
  43c76e:	add    bh,al
  43c770:	add    DWORD PTR [ebx+eax*4],0xffffffff
  43c774:	jae    0x43c70c
  43c776:	dec    ebx
  43c778:	(bad)  
  43c779:	jnp    0x43c77b
  43c77b:	call   ebx
  43c77d:	arpl   sp,cx
  43c77f:	(bad)  
  43c780:	add    BYTE PTR [ecx],al
  43c782:	add    bh,bh
  43c784:	(bad)  
  43c785:	mov    cl,0x0
  43c787:	adc    eax,0x83ff14ff
  43c78c:	dec    ebp
  43c78d:	into   
  43c78e:	add    BYTE PTR [esi-0x77],cl
  43c791:	mov    ah,0x83
  43c793:	inc    DWORD PTR [edi+0x51]
  43c796:	add    BYTE PTR [edi+0x0],al
  43c799:	inc    eax
  43c79a:	inc    DWORD PTR [ebx-0xb00f0f9]
  43c7a0:	(bad)  
  43c7a1:	jnp    0x43c7a2
  43c7a3:	sbb    DWORD PTR [esi-0x77],0x0
  43c7a7:	mov    eax,DWORD PTR [eax]
  43c7a9:	add    eax,0x5910089
  43c7ae:	add    dh,ah
  43c7b0:	mov    DWORD PTR [ebx-0x7d],ecx
  43c7b3:	sbb    DWORD PTR [esi+0x55],0xffffffff
  43c7b7:	inc    ebx
  43c7b8:	mov    eax,ecx
  43c7ba:	add    ah,cl
  43c7bc:	inc    ecx
  43c7bd:	ret    
  43c7be:	add    BYTE PTR [edi-0x1],ah
  43c7c1:	std    
  43c7c2:	mov    edi,edi
  43c7c4:	les    edx,FWORD PTR [edi+edi*8-0x15]
  43c7c8:	inc    edx
  43c7ca:	int3   
  43c7cb:	add    BYTE PTR [edi+ecx*2],bh
  43c7ce:	jmp    edi
  43c7d0:	xor    DWORD PTR [esi],0x0
  43c7d3:	adc    DWORD PTR [ecx],0x60
  43c7d6:	jmp    DWORD PTR [ebx-0x33001200]
  43c7dc:	mov    eax,0xffadffee
  43c7e1:	fdivp  st(7),st
  43c7e3:	call   DWORD PTR [edi]
  43c7e5:	cli    
  43c7e6:	inc    DWORD PTR [ecx-0x1]
  43c7e9:	dec    esi
  43c7ea:	inc    DWORD PTR [eax]
  43c7ec:	xchg   ebx,eax
  43c7ed:	out    dx,eax
  43c7ee:	inc    DWORD PTR [esi]
  43c7f0:	call   DWORD PTR [eax-0x7d]
  43c7f3:	add    BYTE PTR [esi-0x767176bf],ch
  43c7f9:	ss mov edi,edi
  43c7fc:	jle    0x43c85c
  43c7fe:	add    BYTE PTR [esp+ecx*8],bh
  43c801:	jns    0x43c803
  43c803:	int3   
  43c804:	pop    eax
  43c805:	verr   WORD PTR [ebp-0x7c005000]
  43c80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c80d:	imul   edi,edi,0xffffff80
  43c810:	call   FWORD PTR [eax-0x1]
  43c813:	inc    esp
  43c815:	aad    0xff
  43c817:	or     DWORD PTR es:[edi+edi*8-0x7cc20e01],0x5f
  43c820:	add    BYTE PTR [eax+eax*1+0x0],bl
  43c824:	jmp    0xffd94bf8
  43c829:	push   edx
  43c82a:	inc    DWORD PTR [eax]
  43c82c:	rcl    BYTE PTR [ecx-0x1],0x41
  43c830:	add    BYTE PTR [edi+0x71300ff],dh
  43c836:	mov    DWORD PTR [edx],esi
  43c838:	or     DWORD PTR [ebx],0x0
  43c83b:	add    BYTE PTR [edi-0x32],al
  43c83e:	mov    DWORD PTR [esi+0x0],esp
  43c841:	xchg   edi,eax
  43c842:	inc    DWORD PTR [ebx+0x1bffc892]
  43c848:	dec    DWORD PTR [ebx]
  43c84a:	add    bh,bh
  43c84c:	xor    esi,edx
  43c84e:	inc    DWORD PTR [ebx]
  43c850:	add    BYTE PTR [ebx+0x54fd8900],bh
  43c856:	mov    DWORD PTR [ecx],edx
  43c858:	jmp    FWORD PTR [edx]
  43c85a:	dec    esp
  43c85c:	dec    edi
  43c85d:	mov    ds:0x6583f4ff,al
  43c862:	mov    edi,edi
  43c864:	mov    edx,0xcce78903
  43c869:	sbb    eax,0xe8ecff00
  43c86e:	and    DWORD PTR [edx-0x1],0xffffffe0
  43c872:	add    BYTE PTR [eax],al
  43c874:	ret    0xffd9
  43c877:	mov    dl,0x83
  43c879:	cmp    edi,edi
  43c87b:	add    ah,bh
  43c87d:	push   cs
  43c87e:	add    bl,bh
  43c880:	add    BYTE PTR [edx+0xcb3ff89],ch
  43c886:	mov    DWORD PTR [ecx+ecx*4],esp
  43c889:	push   0x6ba30000
  43c88e:	inc    esp
  43c890:	mov    ecx,esp
  43c892:	inc    DWORD PTR [eax]
  43c894:	or     DWORD PTR [esp+ecx*8-0x74],0xb8ff
  43c89c:	adc    esp,DWORD PTR [eax]
  43c89e:	jmp    FWORD PTR [edi+edi*8+0x6989ffb0]
  43c8a5:	adc    edi,edi
  43c8a7:	leave  
  43c8a8:	jmp    FWORD PTR [edi-0x7d]
  43c8ab:	jmp    FWORD PTR [ebp-0x6c33d4]
  43c8b1:	dec    ebx
  43c8b2:	add    bh,bh
  43c8b4:	mov    ebx,0xff4dff14
  43c8b9:	stos   BYTE PTR es:[edi],al
  43c8ba:	(bad)  
  43c8bb:	push   DWORD PTR [eax+0x43]
  43c8be:	jmp    FWORD PTR [edx-0x337cec7d]
  43c8c4:	lods   al,BYTE PTR ds:[esi]
  43c8c5:	mov    eax,ds:0x1fff5100
  43c8ca:	inc    DWORD PTR [ebx+0x22ff701e]
  43c8d0:	add    BYTE PTR [ebx-0x51b00034],bl
  43c8d6:	push   DWORD PTR [ebx-0x76003300]
  43c8dc:	push   ds
  43c8dd:	pop    ebp
  43c8de:	call   ebp
  43c8e0:	call   DWORD PTR [eax+eax*1-0x7ca05a34]
  43c8e7:	inc    eax
  43c8e8:	mov    DWORD PTR [edi-0x1dbe0100],esp
  43c8ee:	add    BYTE PTR [eax-0x1],al
  43c8f1:	mov    dh,0xff
  43c8f3:	call   DWORD PTR [edi-0x2]
  43c8f6:	jmp    DWORD PTR [edx]
  43c8f8:	dec    eax
  43c8fa:	mov    DWORD PTR [ebx+0x79ffa3ec],eax
  43c900:	xor    DWORD PTR [eax-0x1],0xffffff83
  43c904:	mov    bl,bh
  43c906:	(bad)  
  43c907:	mov    ebp,0x83009bcc
  43c90c:	jo     0x43c8f8
  43c90e:	add    BYTE PTR [esi-0x7cfff200],dh
  43c914:	aam    0x2f
  43c916:	dec    DWORD PTR [ebx]
  43c918:	dec    eax
  43c91a:	mov    DWORD PTR [ebx+0x678336c2],eax
  43c920:	push   DWORD PTR [ebx]
  43c922:	(bad)  
  43c923:	call   DWORD PTR [eax-0x3d]
  43c926:	dec    DWORD PTR [edi-0x1]
  43c929:	or     eax,0xefac8383
  43c92e:	xor    DWORD PTR [eax-0x7c00a000],0xffffffca
  43c935:	jno    0x43c937
  43c937:	pop    eax
  43c938:	add    bh,bl
  43c93a:	(bad)  
  43c93b:	inc    DWORD PTR [edi]
  43c93d:	mov    bl,0x0
  43c93f:	mov    dl,0x89
  43c941:	inc    ebp
  43c942:	add    BYTE PTR [eax],al
  43c944:	and    eax,0x8932ff22
  43c949:	add    edi,edi
  43c94b:	jmp    DWORD PTR [eax-0x8c00d5]
  43c951:	cmc    
  43c952:	add    bh,bh
  43c954:	ja     0x43c921
  43c956:	call   ebx
  43c958:	jmp    esi
  43c95a:	add    bh,bh
  43c95c:	cdq    
  43c95d:	aam    0xff
  43c95f:	push   ebp
  43c960:	add    BYTE PTR [ecx-0x1],dl
  43c963:	mov    ebx,esi
  43c965:	aad    0xff
  43c967:	jno    0x43c968
  43c969:	inc    esi
  43c96a:	(bad)  
  43c96b:	inc    ebp
  43c96d:	push   ss
  43c96e:	mov    DWORD PTR [ecx-0x7d],edi
  43c971:	mov    ah,0xff
  43c973:	add    bh,al
  43c975:	std    
  43c976:	mov    DWORD PTR [edx],eax
  43c978:	dec    DWORD PTR [ecx]
  43c97a:	dec    DWORD PTR [ecx-0x29ff420b]
  43c980:	push   DWORD PTR [edi-0x1]
  43c983:	jmp    FWORD PTR [eax]
  43c985:	xor    edi,edi
  43c987:	out    0xff,al
  43c989:	(bad)  
  43c98b:	add    BYTE PTR [eax],bl
  43c98d:	(bad)  
  43c98e:	or     DWORD PTR [ecx+0x0],0x26
  43c992:	inc    DWORD PTR [ebx-0x3900d3e4]
  43c998:	push   DWORD PTR [ebx-0x55370100]
  43c99e:	push   DWORD PTR [eax-0x1]
  43c9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c9a2:	cmp    edi,0x43
  43c9a5:	inc    ebp
  43c9a6:	sbb    DWORD PTR [eax-0x7cffe701],0x58
  43c9ad:	xor    DWORD PTR [eax],eax
  43c9af:	push   edx
  43c9b0:	add    BYTE PTR [esi-0x7d],bl
  43c9b3:	add    DWORD PTR [ebp+0x68],0xffffff89
  43c9b7:	mov    al,ds:0xccff1c89
  43c9bc:	mov    ecx,0xfff00041
  43c9c1:	or     eax,0x981500ff
  43c9c6:	dec    DWORD PTR [edi+edi*8+0x2f]
  43c9ca:	add    DWORD PTR [ebx-0x67cc05e],0xffffff83
  43c9d1:	mov    bh,0x0
  43c9d3:	jmp    DWORD PTR [edx-0x74ff93]
  43c9d9:	inc    ebp
  43c9da:	add    BYTE PTR [eax],al
  43c9dc:	nop
  43c9dd:	and    edi,edi
  43c9df:	jo     0x43c964
  43c9e1:	inc    ebx
  43c9e2:	inc    DWORD PTR [ebx-0x28009baf]
  43c9e8:	adc    DWORD PTR [eax-0x653dff7d],0xffffffff
  43c9ef:	sbb    al,0xcc
  43c9f1:	add    DWORD PTR [eax],eax
  43c9f3:	jmp    FWORD PTR [eax]
  43c9f5:	cmp    eax,0xfa8947ff
  43c9fa:	inc    DWORD PTR [ebx-0x3b00498a]
  43ca00:	(bad)  
  43ca01:	out    dx,eax
  43ca02:	add    BYTE PTR [ecx-0x6933d1a5],cl
  43ca08:	(bad)  
  43ca09:	fild   DWORD PTR [ebx-0x591d01]
  43ca0f:	loopne 0x43ca10
  43ca11:	add    DWORD PTR [ebx-0x790301],eax
  43ca17:	xor    eax,0xffff2700
  43ca1c:	add    BYTE PTR [ecx-0x1],ch
  43ca1f:	cld    
  43ca20:	add    al,dh
  43ca22:	inc    DWORD PTR [eax]
  43ca24:	mov    ch,0xd4
  43ca26:	call   edx
  43ca28:	jmp    esi
  43ca2a:	(bad)  
  43ca2b:	dec    eax
  43ca2d:	lds    eax,FWORD PTR [ebx-0xac763d]
  43ca33:	cmp    DWORD PTR [ecx+0x28],0xffffff89
  43ca37:	cli    
  43ca38:	inc    DWORD PTR [esi]
  43ca3a:	inc    DWORD PTR [ebx-0x477c175d]
  43ca40:	call   FWORD PTR [ebx]
  43ca42:	add    ah,cl
  43ca44:	push   cs
  43ca45:	pop    es
  43ca46:	adc    DWORD PTR [ebx+0x0],0xffffffb7
  43ca4a:	int3   
  43ca4b:	sub    DWORD PTR [ecx],0xffffff88
  43ca4e:	cmp    DWORD PTR [esi],0xffffff83
  43ca51:	xchg   edx,eax
  43ca52:	add    bh,bh
  43ca54:	lds    esp,FWORD PTR [esi-0x1]
  43ca57:	push   ebp
  43ca58:	add    BYTE PTR [esi+0x6ad08300],ah
  43ca5e:	jmp    DWORD PTR [ebx+eax*4-0x7b000008]
  43ca65:	sbb    eax,0x7200b4ff
  43ca6a:	(bad)  
  43ca6b:	jmp    DWORD PTR [ebx-0xc50022]
  43ca71:	dec    ecx
  43ca72:	add    BYTE PTR [ebx-0x35ff1414],al
  43ca78:	sub    DWORD PTR [edx+0x7eaf00cc],0xffffffff
  43ca7f:	jle    0x43ca04
  43ca81:	add    DWORD PTR gs:[eax],0x2b
  43ca85:	sbb    eax,DWORD PTR [ebx-0xc400de]
  43ca8b:	inc    DWORD PTR [edx-0x7c88001d]
  43ca91:	aas    
  43ca92:	add    bh,bh
  43ca94:	jl     0x43ca8a
  43ca96:	add    BYTE PTR [ebx-0x1],dl
  43ca99:	clc    
  43ca9a:	(bad)  
  43ca9b:	jmp    DWORD PTR [edi-0xf333a3]
  43caa1:	xchg   esp,eax
  43caa2:	(bad)  
  43caa3:	jmp    DWORD PTR [eax-0xd10053]
  43caa9:	sti    
  43caaa:	int3   
  43caab:	inc    DWORD PTR [ecx]
  43caad:	scas   al,BYTE PTR es:[edi]
  43caae:	add    BYTE PTR [ebp+0xff33ff],ah
  43cab4:	push   ebp
  43cab5:	dec    eax
  43cab6:	inc    DWORD PTR [ecx]
  43cab8:	add    ebx,0x0
  43cabb:	add    BYTE PTR ds:0xff2cffc9,bh
  43cac1:	imul   edi,edi,0xffffffff
  43cac4:	xchg   ah,ch
  43cac6:	call   FWORD PTR [ecx+ecx*4-0x1f]
  43caca:	inc    DWORD PTR [eax]
  43cacc:	fsub   DWORD PTR [edi]
  43cace:	add    bl,bl
  43cad0:	add    BYTE PTR [eax-0x34],dl
  43cad3:	add    ch,bh
  43cad5:	ins    BYTE PTR es:[edi],dx
  43cad6:	(bad)  
  43cad7:	mov    esp,0xff83bd00
  43cadc:	xchg   esp,edx
  43cade:	or     DWORD PTR [eax],0xffffffff
  43cae1:	test   eax,0x163c0083
  43cae6:	dec    DWORD PTR [ecx-0xfffc77]
  43caec:	cmp    BYTE PTR [eax+0x50837200],dl
  43caf2:	inc    DWORD PTR [ebx-0x5800f6d5]
  43caf8:	add    BYTE PTR [ebp+0x5b880000],ch
  43cafe:	add    BYTE PTR [esi-0x1],al
  43cb01:	daa    
  43cb02:	mov    edi,edi
  43cb04:	add    al,0x3
  43cb06:	and    DWORD PTR [eax-0xff1a01],0x4f
  43cb0d:	ret    
  43cb0e:	adc    DWORD PTR [ecx+0xff71cc],0x12
  43cb15:	repz int3 
  43cb17:	jbe    0x43cb19
  43cb19:	xchg   ecx,eax
  43cb1a:	inc    DWORD PTR [ebx-0x180053dc]
  43cb20:	int3   
  43cb21:	sbb    bh,bh
  43cb23:	or     ebx,0xffffffa3
  43cb26:	add    BYTE PTR ds:0xd7ff,dl
  43cb2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cb2d:	xchg   edx,eax
  43cb2e:	inc    DWORD PTR [edx-0x34]
  43cb31:	leave  
  43cb32:	add    BYTE PTR [eax],al
  43cb34:	int    0xac
  43cb36:	add    ecx,0xffffffff
  43cb39:	mov    esp,0xac5bff83
  43cb3e:	add    DWORD PTR [eax-0x76827d],0xe
  43cb45:	(bad)  
  43cb46:	jmp    esi
  43cb48:	int3   
  43cb49:	xlat   BYTE PTR ds:[ebx]
  43cb4a:	add    BYTE PTR [ebx-0x4833b712],al
  43cb50:	mov    DWORD PTR [esi-0x1],eax
  43cb53:	mov    edx,ebx
  43cb55:	jns    0x43cb57
  43cb57:	mov    eax,ds:0x83833dff
  43cb5c:	lock pop ebp
  43cb5e:	mov    DWORD PTR [ebx-0xe01],esi
  43cb64:	pop    ss
  43cb65:	repnz call FWORD PTR [ebp-0x1]
  43cb69:	push   0xffffffff
  43cb6b:	add    BYTE PTR [edi+eax*1],dl
  43cb6e:	mov    DWORD PTR [ebp+0x1c00],edx
  43cb74:	inc    esi
  43cb75:	or     edi,edi
  43cb77:	imul   edi,edi,0xffffffbc
  43cb7a:	cmp    edi,0x1d
  43cb7d:	cli    
  43cb7e:	add    bh,dh
  43cb80:	int3   
  43cb81:	pop    esi
  43cb82:	dec    esp
  43cb84:	mov    bl,0xbb
  43cb86:	push   DWORD PTR [ebp-0x1]
  43cb89:	dec    eax
  43cb8a:	inc    DWORD PTR [eax]
  43cb8c:	xor    al,0xad
  43cb8e:	add    BYTE PTR [edx-0x1],bh
  43cb91:	out    dx,al
  43cb92:	add    bh,bh
  43cb94:	cld    
  43cb95:	call   DWORD PTR es:[edi+edi*8+0x16]
  43cb9a:	add    BYTE PTR [ebx-0x41ffb83e],al
  43cba0:	inc    DWORD PTR [edx-0x1]
  43cba3:	call   DWORD PTR [ebx+0x96ff03]
  43cba9:	idiv   bh
  43cbab:	push   DWORD PTR [esi]
  43cbad:	daa    
  43cbae:	inc    DWORD PTR [edx+0x0]
  43cbb1:	add    BYTE PTR [ebx-0x76b89a01],0xf1
  43cbb8:	int3   
  43cbb9:	in     eax,dx
  43cbba:	inc    DWORD PTR [eax]
  43cbbc:	aas    
  43cbbd:	push   edi
  43cbbe:	sub    DWORD PTR [esi-0x7f34],0x6c
  43cbc5:	xor    esp,ecx
  43cbc7:	adc    esp,ecx
  43cbc9:	mov    edi,0xfcfd89cc
  43cbce:	int3   
  43cbcf:	out    0xff,al
  43cbd1:	sar    bh,1
  43cbd3:	add    BYTE PTR [esi],cl
  43cbd5:	pop    eax
  43cbd6:	add    BYTE PTR [ecx-0x6701],al
  43cbdc:	ja     0x43cbc0
  43cbde:	add    BYTE PTR [eax],bl
  43cbe0:	add    bl,cl
  43cbe2:	inc    DWORD PTR [ebx-0x7933b065]
  43cbe8:	add    DWORD PTR [ebx],0xffffff83
  43cbeb:	jmp    esp
  43cbed:	(bad)  
  43cbef:	sub    bh,bh
  43cbf1:	sar    bh,cl
  43cbf3:	add    BYTE PTR [ebx],ah
  43cbf5:	ins    BYTE PTR es:[edi],dx
  43cbf6:	int3   
  43cbf7:	mov    ds:0x83ffdaff,eax
  43cbfc:	or     cl,BYTE PTR [esi+0x1300f300]
  43cc02:	add    DWORD PTR [eax],0x0
  43cc05:	adc    eax,0xcc005183
  43cc0a:	add    BYTE PTR [ecx+0x6cc7eb1],cl
  43cc10:	int3   
  43cc11:	lods   al,BYTE PTR ds:[esi]
  43cc12:	add    BYTE PTR [eax],al
  43cc14:	push   ss
  43cc15:	aaa    
  43cc16:	add    BYTE PTR [edi-0x1],bh
  43cc19:	adc    DWORD PTR [eax],eax
  43cc1b:	call   esp
  43cc1d:	js     0x43cc1f
  43cc1f:	mov    esp,0xccff1300
  43cc24:	out    0x14,eax
  43cc26:	add    dh,dl
  43cc28:	xor    DWORD PTR [eax],0x0
  43cc2b:	int3   
  43cc2c:	repnz cmc 
  43cc2e:	add    bh,ah
  43cc30:	add    DWORD PTR [edi-0x7d],0xffffff89
  43cc34:	pusha  
  43cc35:	push   DWORD PTR [bp+di]
  43cc38:	int3   
  43cc39:	xchg   esi,eax
  43cc3a:	(bad)  
  43cc3b:	call   DWORD PTR [eax-0xb43367]
  43cc41:	call   0xaff:0xcfb283ff
  43cc48:	push   ebp
  43cc4a:	inc    DWORD PTR [eax]
  43cc4c:	sub    ah,dh
  43cc4e:	add    BYTE PTR [edi-0x1],bl
  43cc51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cc52:	add    DWORD PTR [eax],0xfffffff0
  43cc55:	ret    
  43cc56:	int3   
  43cc57:	fild   DWORD PTR [ebx+0x30ffffaf]
  43cc5d:	mov    al,BYTE PTR [eax]
  43cc5f:	cmc    
  43cc60:	sub    DWORD PTR [ebp-0x1],0x0
  43cc64:	dec    edx
  43cc65:	jle    0x43cc66
  43cc67:	jbe    0x43cc68
  43cc69:	push   ds
  43cc6a:	cmp    edi,0x6b
  43cc6d:	push   ecx
  43cc6e:	call   FWORD PTR [eax-0xffbd34]
  43cc74:	mov    bh,0x8
  43cc76:	inc    esp
  43cc78:	or     DWORD PTR [esi],0x0
  43cc7b:	call   DWORD PTR ds:0xfbff47
  43cc81:	xchg   ecx,eax
  43cc82:	(bad)  
  43cc83:	push   DWORD PTR [esi+ebx*8+0x6bff8283]
  43cc8a:	add    ah,cl
  43cc8c:	rep lods al,BYTE PTR ds:[esi]
  43cc8e:	dec    DWORD PTR [ebp-0x7c009e00]
  43cc94:	fwait
  43cc95:	mov    edi,?
  43cc97:	clc    
  43cc98:	add    BYTE PTR [edi+edi*8],ch
  43cc9b:	push   ebx
  43cc9d:	jp     0x43cc9f
  43cc9f:	fild   DWORD PTR [eax]
  43cca1:	cmp    edi,0xffffffff
  43cca4:	out    0xa9,eax
  43cca6:	jmp    DWORD PTR [ecx]
  43cca8:	add    BYTE PTR [ebx+0x42c5ff00],dl
  43ccae:	add    BYTE PTR [ebp-0x33004100],al
  43ccb4:	adc    DWORD PTR [esi+0x12ff65ff],esp
  43ccba:	int3   
  43ccbb:	mov    DWORD PTR [eax],esi
  43ccbd:	push   ebp
  43ccbe:	dec    esp
  43ccc0:	mov    edi,esi
  43ccc2:	(bad)  
  43ccc3:	(bad)  
  43ccc4:	mov    esp,0xff14ff8b
  43ccc9:	and    BYTE PTR [eax],al
  43cccb:	mov    DWORD PTR [eax],edx
  43cccd:	out    0xff,eax
  43cccf:	scas   eax,DWORD PTR es:[edi]
  43ccd0:	(bad)  
  43ccd1:	cmp    edi,edi
  43ccd3:	int3   
  43ccd4:	jae    0x43ccf9
  43ccd6:	add    dh,al
  43ccd8:	add    bl,bl
  43ccda:	(bad)  
  43ccdb:	(bad)  
  43ccdc:	mov    ebx,0x894bff86
  43cce1:	lock inc DWORD PTR [ebx+0x6b00b4f7]
  43cce8:	add    BYTE PTR [eax+eax*1],bh
  43cceb:	cmp    DWORD PTR [edi],0xffffffb0
  43ccee:	call   FWORD PTR [ebx+0x0]
  43ccf1:	gs (bad) 
  43ccf3:	inc    DWORD PTR [eax]
  43ccf5:	mov    eax,0xd2ff38ff
  43ccfa:	cmp    edi,0xffffffed
  43ccfd:	xor    DWORD PTR [eax],eax
  43ccff:	das    
  43cd00:	add    BYTE PTR [eax],al
  43cd02:	(bad)  
  43cd03:	dec    DWORD PTR [ebp+0x13]
  43cd06:	call   FWORD PTR [esi]
  43cd08:	(bad)  
  43cd09:	mov    esi,0x8af7ffff
  43cd0e:	add    BYTE PTR [edi+edi*8+0x27],bh
  43cd12:	add    BYTE PTR [ebx-0x2600c2d0],al
  43cd18:	add    BYTE PTR [esi],ah
  43cd1a:	add    BYTE PTR [eax],al
  43cd1c:	cmp    BYTE PTR [edx+0x0],0xfc
  43cd20:	(bad)  
  43cd21:	std    
  43cd22:	mov    DWORD PTR [eax],eax
  43cd24:	out    0x10,al
  43cd26:	xor    DWORD PTR [eax],0xffffffff
  43cd29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cd2a:	mov    edi,edi
  43cd2c:	mov    bl,0x50
  43cd2e:	inc    DWORD PTR ds:0xff2b00
  43cd34:	or     al,0x2e
  43cd36:	add    cl,cl
  43cd38:	add    BYTE PTR [edi-0x1],dh
  43cd3b:	add    BYTE PTR [ebp+ecx*4+0x0],ch
  43cd3f:	mov    bl,0xff
  43cd41:	jnp    0x43cd43
  43cd43:	xor    DWORD PTR [eax],0xffffff85
  43cd46:	(bad)  
  43cd47:	mov    eax,0xffcc8aff
  43cd4c:	and    eax,0xcc5b00ae
  43cd51:	into   
  43cd52:	add    BYTE PTR [ebx-0x427c6112],al
  43cd58:	add    ch,dl
  43cd5a:	(bad)  
  43cd5b:	(bad)  
  43cd5c:	fisubr DWORD PTR [ebp-0x1]
  43cd5f:	ret    
  43cd60:	(bad)  
  43cd61:	fdivp  st(7),st
  43cd63:	dec    DWORD PTR [eax+0xf1cc00]
  43cd69:	dec    edi
  43cd6a:	(bad)  
  43cd6b:	call   DWORD PTR [edi]
  43cd6d:	add    eax,0xe4ff8700
  43cd72:	cmp    edi,0xffffffbb
  43cd75:	cli    
  43cd76:	(bad)  
  43cd77:	fld    DWORD PTR [eax]
  43cd79:	cwde   
  43cd7a:	add    BYTE PTR [ebx+0x4bffac6a],al
  43cd80:	jmp    FWORD PTR [esi-0x23b4007d]
  43cd86:	add    BYTE PTR [ebp-0x7c339c00],bl
  43cd8c:	sahf   
  43cd8d:	or     ah,cl
  43cd8f:	stos   BYTE PTR es:[edi],al
  43cd90:	add    cl,dh
  43cd92:	dec    DWORD PTR [ecx-0x2d00f4f4]
  43cd98:	or     DWORD PTR [eax],0x0
  43cd9b:	add    BYTE PTR [esi-0xb60037],ah
  43cda1:	mov    ds:0x3118ff89,al
  43cda6:	add    BYTE PTR [edx],bl
  43cda8:	int3   
  43cda9:	(bad)  
  43cdab:	dec    DWORD PTR [edx]
  43cdad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cdae:	add    BYTE PTR [edx-0x76ffba34],dh
  43cdb4:	pop    ecx
  43cdb5:	das    
  43cdb6:	add    ch,bl
  43cdb8:	add    BYTE PTR [edx-0x1],ch
  43cdbb:	inc    DWORD PTR [esi-0x33b60076]
  43cdc1:	sbb    edi,edi
  43cdc3:	xor    DWORD PTR [ecx-0x7c],0xffffff83
  43cdc7:	cmp    edi,0x8
  43cdca:	(bad)  
  43cdcb:	push   DWORD PTR [ecx-0x338f762a]
  43cdd1:	scas   eax,DWORD PTR es:[edi]
  43cdd2:	(bad)  
  43cdd3:	inc    DWORD PTR [ebp-0xa]
  43cdd6:	int3   
  43cdd7:	cmp    ah,cl
  43cdd9:	hlt    
  43cdda:	(bad)  
  43cddb:	jmp    FWORD PTR [ecx+edi*1-0x31ff0901]
  43cde2:	inc    DWORD PTR [eax]
  43cde4:	ins    BYTE PTR es:[edi],dx
  43cde5:	dec    eax
  43cde6:	mov    DWORD PTR [ebx],eax
  43cde8:	jmp    FWORD PTR [edx+0x0]
  43cdeb:	mov    DWORD PTR ds:0x832aff77,esi
  43cdf1:	(bad)  
  43cdf4:	mov    ds:0xd389cd,eax
  43cdf9:	fadd   DWORD PTR [eax]
  43cdfb:	xor    DWORD PTR [edi],0x2b
  43cdfe:	dec    DWORD PTR [ecx-0x7676c001]
  43ce04:	out    0xe0,al
  43ce06:	call   FWORD PTR [eax+eax*1-0x11]
  43ce0a:	(bad)  
  43ce0b:	jmp    edx
  43ce0d:	arpl   di,di
  43ce0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ce10:	add    BYTE PTR [edi+edi*8-0x760be17d],al
  43ce17:	add    BYTE PTR fs:[ecx],dh
  43ce1a:	dec    DWORD PTR [ecx-0x4100d1fd]
  43ce20:	dec    DWORD PTR [edi]
  43ce22:	add    ah,cl
  43ce24:	or     al,0xb
  43ce26:	add    DWORD PTR [eax],0x0
  43ce29:	inc    WORD PTR [eax]
  43ce2c:	xchg   ebx,eax
  43ce2d:	std    
  43ce2e:	xor    DWORD PTR [ecx],0xffffffff
  43ce31:	sar    bh,1
  43ce33:	sbb    edx,0xffffff9c
  43ce36:	jmp    FWORD PTR [edi-0x1]
  43ce39:	mov    ds:0x26faccff,al
  43ce3e:	add    bl,bl
  43ce40:	add    BYTE PTR [ecx],ch
  43ce42:	add    BYTE PTR [eax],al
  43ce44:	ret    0xfd
  43ce47:	ja     0x43ce49
  43ce49:	fcmovne st,st(4)
  43ce4b:	mov    ebp,eax
  43ce4d:	enter  0xb783,0x83
  43ce51:	mov    dh,0xff
  43ce53:	add    cl,bh
  43ce55:	mov    al,ds:0x6ffe0ff
  43ce5a:	inc    DWORD PTR [eax]
  43ce5c:	test   eax,ecx
  43ce5e:	add    BYTE PTR [eax],bl
  43ce60:	push   DWORD PTR [ecx]
  43ce62:	cmp    edi,0xfffffffe
  43ce65:	xchg   BYTE PTR [eax],al
  43ce67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ce68:	call   FWORD PTR [edx-0x1]
  43ce6b:	(bad)  
  43ce6c:	out    dx,al
  43ce6d:	jae    0x43ce6e
  43ce6f:	add    eax,0xcce400
  43ce74:	cs inc edx
  43ce76:	add    BYTE PTR [ebx-0x76765701],dl
  43ce7c:	ret    0x83e6
  43ce7f:	sar    bh,1
  43ce81:	js     0x43ce82
  43ce83:	call   ecx
  43ce85:	loop   0x43ce87
  43ce87:	call   0x43530f
  43ce8c:	sbb    bh,BYTE PTR [edi]
  43ce8e:	jmp    DWORD PTR [ecx]
  43ce90:	add    DWORD PTR [ecx+0x7e81cc00],0xffffffff
  43ce97:	and    al,0xff
  43ce99:	push   0xffffffff
  43ce9b:	add    BYTE PTR [edx+0x3f],dl
  43ce9e:	sub    DWORD PTR [esi-0xff5101],0x7c
  43cea5:	fld    DWORD PTR [eax]
  43cea7:	js     0x43cea8
  43cea9:	pusha  
  43ceaa:	int3   
  43ceab:	call   esp
  43cead:	clc    
  43ceae:	sbb    DWORD PTR ds:0xff89dfcc,0xfffffffa
  43ceb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ceb6:	mov    DWORD PTR ds:0xff7100,ecx
  43cebc:	test   BYTE PTR [edi-0x62ff3877],0x0
  43cec3:	jmp    FWORD PTR [eax+eiz*1]
  43cec6:	add    DWORD PTR [ebp-0x1],0x4a
  43ceca:	cmp    edi,0x50
  43cecd:	outs   dx,BYTE PTR ds:[esi]
  43cece:	push   esi
  43ced0:	int3   
  43ced1:	es mov edi,edi
  43ced4:	dec    ebx
  43ced5:	aad    0x0
  43ced7:	add    BYTE PTR [ebx-0x467600f7],0x25
  43cede:	and    DWORD PTR [ecx-0x1],0x18
  43cee2:	(bad)  
  43cee3:	(bad)  
  43cee4:	jge    0x43cf04
  43cee6:	add    BYTE PTR [edx],dl
  43cee8:	mov    esp,ecx
  43ceea:	(bad)  
  43ceeb:	inc    DWORD PTR [ebp+0xb0ff38]
  43cef1:	mov    dl,0xff
  43cef3:	int3   
  43cef4:	adc    eax,DWORD PTR [ecx+0x0]
  43cef7:	adc    BYTE PTR [eax],al
  43cef9:	daa    
  43cefa:	(bad)  
  43cefb:	dec    DWORD PTR [edx+0x7483e2]
  43cf01:	jns    0x43cf02
  43cf03:	push   DWORD PTR [ebp-0x517cee]
  43cf09:	popa   
  43cf0a:	int3   
  43cf0b:	xor    DWORD PTR [edi-0x240097],0xffffff96
  43cf12:	mov    edi,edi
  43cf14:	inc    eax
  43cf15:	loop   0x43cf16
  43cf17:	jp     0x43cea2
  43cf19:	push   cs
  43cf1a:	mov    DWORD PTR [eax],eax
  43cf1c:	push   eax
  43cf1d:	sub    DWORD PTR [eax],eax
  43cf1f:	je     0x43cf20
  43cf21:	sbb    bh,bh
  43cf23:	add    BYTE PTR [esi-0x70],cl
  43cf26:	call   DWORD PTR [edx+0xffe3ff]
  43cf2c:	mov    bl,ch
  43cf2e:	xor    DWORD PTR [ecx+0xff33cc],0xffffffce
  43cf35:	popf   
  43cf36:	mov    DWORD PTR [eax+eax*1+0x2],edx
  43cf3a:	inc    DWORD PTR [eax]
  43cf3c:	test   DWORD PTR [edx],ecx
  43cf3e:	(bad)  
  43cf3f:	mov    edx,0xff004200
  43cf44:	out    dx,al
  43cf45:	(bad)  
  43cf46:	inc    edx
  43cf48:	inc    DWORD PTR [ecx-0x1ffa0000]
  43cf4e:	int3   
  43cf4f:	push   esp
  43cf50:	sub    DWORD PTR [edx],0xffffffff
  43cf53:	call   DWORD PTR [eax]
  43cf55:	mov    dl,0xff
  43cf57:	mov    ebx,0xffff6e83
  43cf5c:	int3   
  43cf5d:	inc    edx
  43cf5e:	cmp    DWORD PTR [ebp-0x1],0x1b
  43cf62:	inc    DWORD PTR [eax]
  43cf64:	jmp    0x57:0xffb889b5
  43cf6b:	adc    DWORD PTR [esi-0x5d],0xffffffff
  43cf6f:	dec    esp
  43cf70:	add    bl,dl
  43cf72:	(bad)  
  43cf73:	(bad)  
  43cf74:	mov    esp,0xff73ff88
  43cf79:	(bad)  
  43cf7c:	mov    ebx,0xff7b0074
  43cf81:	sub    ecx,DWORD PTR [ecx-0x7a3601]
  43cf87:	pop    esi
  43cf88:	(bad)  
  43cf89:	ds cmp edi,0xffffff8e
  43cf8d:	xlat   BYTE PTR ds:[ebx]
  43cf8e:	call   DWORD PTR [esi-0x7c00987d]
  43cf94:	dec    esi
  43cf95:	mov    ebx,0xc800bb00
  43cf9a:	inc    DWORD PTR [eax]
  43cf9c:	jno    0x43cfe2
  43cf9e:	add    BYTE PTR [ebp-0x1],bh
  43cfa1:	stos   DWORD PTR es:[edi],eax
  43cfa2:	(bad)  
  43cfa3:	dec    DWORD PTR [eax-0x2a]
  43cfa6:	adc    DWORD PTR [ecx-0x7c797d],0xffffffff
  43cfad:	lods   al,BYTE PTR ds:[esi]
  43cfae:	(bad)  
  43cfaf:	cmp    DWORD PTR [eax],eax
  43cfb1:	add    eax,0xb0a500cc
  43cfb6:	call   FWORD PTR [ebx]
  43cfb8:	dec    DWORD PTR [edi+0x1589ffff]
  43cfbe:	dec    DWORD PTR [ebx]
  43cfc0:	(bad)  
  43cfc1:	std    
  43cfc2:	cmp    edi,0xffffffc4
  43cfc5:	inc    ebx
  43cfc6:	add    BYTE PTR [edi-0x76334101],dl
  43cfcc:	mov    ah,0x0
  43cfce:	add    al,ch
  43cfd0:	push   DWORD PTR ds:0xabad0083
  43cfd6:	or     esp,0xffffff89
  43cfd9:	pushf  
  43cfda:	or     esp,0xffffffd6
  43cfdd:	data16 int3 
  43cfdf:	rol    BYTE PTR [ebx+0x45fffff1],cl
  43cfe5:	mov    dl,0x0
  43cfe7:	ss add bl,ah
  43cfea:	mov    DWORD PTR [eax],eax
  43cfec:	push   edi
  43cfed:	sub    cl,BYTE PTR [ecx-0x8fff11]
  43cff3:	mov    DWORD PTR [ecx+0x14],ebx
  43cff6:	add    ah,cl
  43cff8:	or     DWORD PTR [ebx-0x77],0xffffffff
  43cffc:	sbb    DWORD PTR [ebx],edi
  43cffe:	inc    DWORD PTR [ebx-0x1]
  43d001:	fild   DWORD PTR [eax]
  43d003:	call   DWORD PTR [eax]
  43d005:	or     bh,bh
  43d007:	test   edi,edi
  43d009:	add    DWORD PTR [eax],0xffffffff
  43d00c:	imul   esi,DWORD PTR [ecx-0x77],0xff9bffc7
  43d013:	int3   
  43d014:	adc    eax,esi
  43d016:	add    BYTE PTR [edi-0xffc201],dl
  43d01c:	xor    ch,dh
  43d01e:	int3   
  43d01f:	add    ecx,DWORD PTR [ecx-0x5e00006f]
  43d025:	cmp    eax,DWORD PTR [eax]
  43d027:	mov    ds:0xffff2acc,eax
  43d02c:	loop   0x43cfc1
  43d02e:	int3   
  43d02f:	test   DWORD PTR [ebx+0x5800ff59],0x89a6ff8e
  43d039:	in     al,0xff
  43d03b:	int3   
  43d03c:	or     BYTE PTR ds:0xf2835aff,cl
  43d042:	add    BYTE PTR [eax],al
  43d044:	lock xchg ebp,eax
  43d046:	int3   
  43d047:	sahf   
  43d048:	int3   
  43d049:	xchg   esi,eax
  43d04a:	(bad)  
  43d04b:	jmp    ecx
  43d04d:	adc    bh,bh
  43d04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d050:	mov    DWORD PTR [ebx],eax
  43d052:	inc    DWORD PTR [eax]
  43d054:	stc    
  43d055:	popa   
  43d056:	dec    DWORD PTR [ebx+0x83eaff]
  43d05c:	stos   BYTE PTR es:[edi],al
  43d05d:	mov    bl,0x0
  43d05f:	jo     0x43d060
  43d061:	mov    ds:0xf348ffff,al
  43d066:	int3   
  43d067:	and    bh,bh
  43d069:	ins    DWORD PTR es:[edi],dx
  43d06a:	dec    DWORD PTR [ecx-0x1576c6f6]
  43d070:	sub    DWORD PTR [edx+0x6584ffff],0xffffffff
  43d077:	jo     0x43d078
  43d079:	daa    
  43d07a:	add    bh,bh
  43d07c:	ds enter 0xc000,0x0
  43d081:	push   ecx
  43d082:	add    BYTE PTR [eax],al
  43d084:	enter  0xd4,0xca
  43d088:	mov    DWORD PTR [ebp-0x1],ebp
  43d08b:	jmp    DWORD PTR [esi+eax*1-0x1]
  43d08f:	adc    al,0x0
  43d091:	add    eax,DWORD PTR [ebx-0x417001]
  43d097:	xchg   esp,eax
  43d098:	jmp    DWORD PTR [ebx]
  43d09a:	add    bh,bh
  43d09c:	pop    ecx
  43d09d:	in     eax,0x83
  43d09f:	jns    0x43d0a1
  43d0a1:	cwde   
  43d0a2:	dec    esp
  43d0a4:	arpl   WORD PTR [eax+eax*1-0x2e],ax
  43d0a8:	call   esp
  43d0aa:	inc    DWORD PTR [ebx-0x137c41ae]
  43d0b0:	call   FWORD PTR [eax-0x58fa0100]
  43d0b6:	add    BYTE PTR [eax-0xff8377],ah
  43d0bc:	pop    es
  43d0bd:	ja     0x43d0bf
  43d0bf:	pop    edi
  43d0c0:	dec    DWORD PTR [eax]
  43d0c2:	add    bh,bh
  43d0c4:	iret   
  43d0c5:	adc    edi,edi
  43d0c7:	loope  0x43d0c8
  43d0c9:	nop
  43d0ca:	add    bh,bh
  43d0cc:	jp     0x43d0c3
  43d0ce:	sub    esi,0xffffff83
  43d0d1:	jbe    0x43d056
  43d0d3:	inc    DWORD PTR [ebp+0x6dffe6]
  43d0d9:	sbb    bh,bh
  43d0db:	add    ah,dh
  43d0dd:	in     eax,dx
  43d0de:	int3   
  43d0df:	sti    
  43d0e0:	xor    DWORD PTR [esi+0x6f91ffff],0xffffffff
  43d0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d0e8:	add    BYTE PTR [edx-0x1],cl
  43d0eb:	call   DWORD PTR [ecx+0x3c]
  43d0ee:	call   DWORD PTR [ebp-0x767cce00]
  43d0f4:	or     al,0x89
  43d0f6:	dec    DWORD PTR [ecx-0xce01]
  43d0fc:	lods   al,BYTE PTR ds:[esi]
  43d0fd:	push   ecx
  43d0fe:	add    DWORD PTR [ebp-0x1],0x2b
  43d102:	(bad)  
  43d103:	(bad)  
  43d104:	call   0x6dd203
  43d109:	mov    cl,BYTE PTR [ecx+0xec3a00]
  43d10f:	(bad)  
  43d111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d112:	inc    DWORD PTR [ebx-0x560052d0]
  43d118:	mov    DWORD PTR [ebx-0x3edff34],edi
  43d11e:	add    BYTE PTR [ebp-0x34],dl
  43d121:	fdiv   st(7),st
  43d123:	add    BYTE PTR [esp+edx*4-0x60002a01],bh
  43d12a:	or     esp,0x9
  43d12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d12e:	jmp    DWORD PTR [eax]
  43d130:	add    BYTE PTR [esi],al
  43d132:	(bad)  
  43d133:	dec    DWORD PTR [esp+esi*2]
  43d136:	sub    esp,0xffffff83
  43d139:	pop    ds
  43d13a:	add    bh,bh
  43d13c:	mov    dl,0xb
  43d13e:	inc    DWORD PTR [eax]
  43d140:	inc    DWORD PTR [esi]
  43d142:	add    BYTE PTR [ebx+0x3d00a0ed],al
  43d148:	add    BYTE PTR [edi+0x0],ah
  43d14b:	push   DWORD PTR [edi-0x7c2b0001]
  43d151:	rol    DWORD PTR [eax],0xff
  43d154:	lds    edi,FWORD PTR [ebp+0x12ff2fff]
  43d15a:	inc    DWORD PTR [eax]
  43d15c:	mov    al,0x28
  43d15e:	int3   
  43d15f:	mov    al,ds:0xff006000
  43d164:	mov    cl,0x44
  43d166:	add    esp,0x0
  43d169:	xor    eax,0x221dffff
  43d16e:	int3   
  43d16f:	or     DWORD PTR ss:[edi],0xffffffcc
  43d173:	add    BYTE PTR [edi+0x4f],ch
  43d176:	add    BYTE PTR ds:0x83ff21ff,ch
  43d17c:	nop
  43d17d:	outs   dx,BYTE PTR ds:[esi]
  43d17e:	dec    DWORD PTR [edi]
  43d180:	int3   
  43d181:	cmp    bh,0x89
  43d184:	add    al,BYTE PTR [ecx-0x3002701]
  43d18a:	int3   
  43d18b:	add    BYTE PTR [ebx+0x74ff41],ch
  43d191:	pop    esp
  43d192:	(bad)  
  43d193:	call   DWORD PTR [edi]
  43d195:	repz add BYTE PTR [eax-0x34],dl
  43d199:	inc    eax
  43d19a:	(bad)  
  43d19b:	jmp    DWORD PTR [edx-0x3576a5]
  43d1a1:	dec    ebp
  43d1a2:	add    BYTE PTR [eax],al
  43d1a4:	cmp    DWORD PTR [edx-0xff707d],esp
  43d1aa:	mov    edi,edi
  43d1ac:	mov    dh,0xfa
  43d1ae:	int3   
  43d1af:	xor    ah,cl
  43d1b1:	rol    BYTE PTR [ebx-0x76b4007d],1
  43d1b7:	inc    edi
  43d1b8:	mov    DWORD PTR [ecx],edi
  43d1ba:	add    ah,cl
  43d1bc:	sbb    ecx,DWORD PTR [esi-0x1]
  43d1bf:	stos   BYTE PTR es:[edi],al
  43d1c0:	add    BYTE PTR [eax],bl
  43d1c2:	int3   
  43d1c3:	(bad)  
  43d1c4:	jle    0x43d183
  43d1c6:	add    BYTE PTR [ecx-0x1],ah
  43d1c9:	pop    edx
  43d1ca:	cmp    edi,0xffffff97
  43d1cd:	or     ecx,esp
  43d1cf:	push   ds
  43d1d0:	int3   
  43d1d1:	mov    eax,0xa7ccff00
  43d1d6:	dec    DWORD PTR [eax]
  43d1d8:	call   DWORD PTR [eax+0x0]
  43d1db:	add    BYTE PTR ds:0x8320ffb2,cl
  43d1e1:	mov    edx,0x53a1ffff
  43d1e6:	mov    eax,ebx
  43d1e8:	sub    DWORD PTR [eax+0x0],0x0
  43d1ec:	jb     0x43d24f
  43d1ee:	add    BYTE PTR [edi],bl
  43d1f0:	(bad)  
  43d1f1:	jns    0x43d1f2
  43d1f3:	int3   
  43d1f4:	stc    
  43d1f5:	stos   BYTE PTR es:[edi],al
  43d1f6:	mov    DWORD PTR [esi],ebx
  43d1f8:	add    BYTE PTR [ecx],bl
  43d1fa:	dec    DWORD PTR [ecx+0xf00e782]
  43d200:	call   DWORD PTR [esi]
  43d202:	(bad)  
  43d203:	inc    esi
  43d205:	(bad)  
  43d206:	jmp    esp
  43d208:	add    BYTE PTR [ebx],dl
  43d20a:	(bad)  
  43d20b:	dec    edi
  43d20d:	jg     0x43d192
  43d20f:	repz jmp DWORD PTR [edi-0x1]
  43d213:	inc    DWORD PTR [edx-0x33b700d7]
  43d219:	sbb    DWORD PTR [eax],eax
  43d21b:	mov    DWORD PTR [ecx],edi
  43d21d:	(bad)  
  43d21e:	(bad)  
  43d21f:	cld    
  43d220:	add    BYTE PTR [edi+0x2fa083ff],bl
  43d226:	jmp    ecx
  43d228:	mov    DWORD PTR [edx-0x1],ebp
  43d22b:	int3   
  43d22c:	mov    ebp,0xffbeffdc
  43d231:	add    al,BYTE PTR [eax]
  43d233:	jmp    FWORD PTR [edi]
  43d235:	or     bh,bh
  43d237:	sbb    al,0x0
  43d239:	push   ebx
  43d23a:	add    BYTE PTR [ecx+0x8ffd001],cl
  43d240:	add    BYTE PTR [ecx-0x1],ch
  43d243:	call   esp
  43d245:	aas    
  43d246:	cmp    DWORD PTR [esi-0x34],0xffffffe2
  43d24a:	(bad)  
  43d24b:	push   DWORD PTR [esi+0xc5830a]
  43d251:	jg     0x43d252
  43d253:	adc    eax,0x2c
  43d256:	add    BYTE PTR [ecx-0x7ca801],al
  43d25c:	test   DWORD PTR [eax+0x3000b5ff],0x128fffff
  43d266:	jmp    DWORD PTR [edx-0xd334]
  43d26c:	das    
  43d26d:	pop    ss
  43d26e:	mov    DWORD PTR [ecx-0x76d001],ebp
  43d274:	add    BYTE PTR [edx+0x700e8ff],bl
  43d27a:	cmp    edi,0x21
  43d27d:	add    al,0xff
  43d27f:	add    BYTE PTR [eax],0x2f
  43d282:	(bad)  
  43d283:	inc    ebp
  43d285:	pop    ebx
  43d286:	call   DWORD PTR [edi+edi*8]
  43d289:	int    0xff
  43d28b:	add    BYTE PTR [eax+0xb90014],dh
  43d291:	mov    ah,0xff
  43d293:	add    BYTE PTR [edi-0x40],cl
  43d296:	add    ch,al
  43d298:	sub    ecx,0x0
  43d29b:	add    BYTE PTR [esi+0x8ff52],ah
  43d2a1:	(bad)  
  43d2a3:	jmp    DWORD PTR [edi]
  43d2a5:	test   edi,edi
  43d2a7:	clc    
  43d2a8:	(bad)  
  43d2a9:	std    
  43d2aa:	add    bh,bh
  43d2ac:	inc    edi
  43d2ad:	or     ah,0x2b
  43d2b0:	(bad)  
  43d2b1:	mov    ebp,0x3568ff00
  43d2b6:	mov    DWORD PTR [esi-0x7c5d00],ebx
  43d2bc:	ins    BYTE PTR es:[edi],dx
  43d2bd:	ud0    edi,DWORD PTR ds:0xffffd0ff
  43d2c4:	add    al,0x10
  43d2c6:	push   eax
  43d2c8:	add    ch,dl
  43d2ca:	add    DWORD PTR [eax],0x4a
  43d2cd:	out    dx,al
  43d2ce:	push   DWORD PTR [edi-0x34]
  43d2d1:	cmp    al,0xff
  43d2d3:	call   esi
  43d2d5:	je     0x43d2d6
  43d2d7:	idiv   bh
  43d2d9:	mov    al,BYTE PTR [ebx-0xfa8800]
  43d2df:	ins    BYTE PTR es:[edi],dx
  43d2e0:	jmp    DWORD PTR [ebx+eax*4]
  43d2e3:	jmp    FWORD PTR [edx]
  43d2e5:	outs   dx,BYTE PTR ds:[esi]
  43d2e6:	(bad)  
  43d2e7:	mov    ebx,0xffff8c00
  43d2ec:	das    
  43d2ed:	pop    ebx
  43d2ee:	jmp    FWORD PTR [ebx-0xff7300]
  43d2f4:	imul   DWORD PTR [edx]
  43d2f6:	add    BYTE PTR [edi],bh
  43d2f8:	(bad)  
  43d2f9:	out    dx,eax
  43d2fa:	(bad)  
  43d2fb:	call   eax
  43d2fd:	enter  0xa00,0xff
  43d301:	push   ss
  43d302:	cmp    edi,0xf
  43d305:	inc    edi
  43d306:	dec    DWORD PTR [esi]
  43d308:	inc    DWORD PTR [eax]
  43d30a:	inc    DWORD PTR [eax]
  43d30c:	and    dl,cl
  43d30e:	add    BYTE PTR [edx],cl
  43d310:	add    BYTE PTR [ebx-0x1],cl
  43d313:	int3   
  43d314:	mov    ds:0xffa68925,al
  43d319:	cs (bad) 
  43d31b:	call   DWORD PTR [edx+0x63]
  43d31e:	int3   
  43d31f:	or     eax,0x89005b83
  43d324:	ja     0x43d2da
  43d326:	add    dl,cl
  43d328:	dec    DWORD PTR [esi]
  43d32a:	cmp    edi,0x21
  43d32d:	jmp    0x0:0xb2ccf6ff
  43d334:	ret    
  43d335:	sbb    al,0x83
  43d337:	adc    bh,bh
  43d339:	inc    edi
  43d33a:	(bad)  
  43d33b:	dec    DWORD PTR ds:0xff298392
  43d341:	pop    ecx
  43d342:	dec    esp
  43d344:	xchg   esi,eax
  43d345:	or     cl,ah
  43d347:	out    0xff,eax
  43d349:	cmp    bh,bh
  43d34b:	cmp    DWORD PTR [esp+eax*2-0x34],0xe
  43d350:	call   FWORD PTR [edi-0x77]
  43d353:	dec    DWORD PTR [ebx-0x33e6ff2e]
  43d359:	mov    ch,0xff
  43d35b:	jmp    DWORD PTR [ebx+0x1a]
  43d35e:	dec    esp
  43d360:	(bad)  
  43d361:	cli    
  43d362:	dec    DWORD PTR [ecx-0x32ff78c0]
  43d368:	add    BYTE PTR [esi-0x1],dl
  43d36b:	int3   
  43d36c:	mov    bl,0x29
  43d36e:	add    BYTE PTR [ebx-0x1],ah
  43d371:	pop    ecx
  43d372:	(bad)  
  43d373:	jmp    esp
  43d375:	sub    eax,0x21832800
  43d37a:	dec    esp
  43d37c:	icebp  
  43d37d:	lahf   
  43d37e:	add    BYTE PTR [edi-0xd001],ch
  43d384:	out    0x52,eax
  43d386:	add    BYTE PTR [edi-0xffe601],cl
  43d38c:	jecxz  0x43d3e3
  43d38e:	push   DWORD PTR [eax-0x7cff0401]
  43d394:	leave  
  43d395:	cmp    cl,ah
  43d397:	loopne 0x43d398
  43d399:	mov    ecx,0x8f66ffff
  43d39e:	push   DWORD PTR [ebp-0x34]
  43d3a1:	inc    edx
  43d3a2:	dec    DWORD PTR [ecx-0x21ff08e4]
  43d3a8:	add    BYTE PTR [eax],ch
  43d3aa:	add    BYTE PTR [ecx-0x5e007e56],cl
  43d3b0:	sbb    DWORD PTR [ebp-0x1],0x0
  43d3b4:	or     BYTE PTR [edi+edi*8],al
  43d3b7:	call   0x6ae5:0xff009d00
  43d3be:	call   DWORD PTR [ebx]
  43d3c0:	mov    DWORD PTR [edx],eax
  43d3c2:	dec    DWORD PTR [ecx-0x77cebe9]
  43d3c8:	dec    DWORD PTR [eax+eax*1+0x0]
  43d3cc:	out    0x28,eax
  43d3ce:	jmp    FWORD PTR [edi]
  43d3d0:	cmp    edi,0xffffffff
  43d3d3:	call   FWORD PTR [esp+edx*4-0x7d]
  43d3d7:	bound  eax,QWORD PTR [eax]
  43d3d9:	or     DWORD PTR [ebx-0x615077],eax
  43d3df:	cmp    bh,bh
  43d3e1:	outs   dx,DWORD PTR ds:[esi]
  43d3e2:	(bad)  
  43d3e3:	call   FWORD PTR [ebx]
  43d3e5:	rol    DWORD PTR [eax],1
  43d3e7:	mov    dh,0x83
  43d3e9:	xor    eax,0xced0ff00
  43d3ee:	dec    DWORD PTR [edi+edi*8-0x49]
  43d3f2:	or     DWORD PTR [ecx+0x3f0081cb],0xffffff89
  43d3f9:	or     al,0x83
  43d3fb:	push   DWORD PTR [ecx-0x51ff1c]
  43d401:	cmp    BYTE PTR [eax],al
  43d403:	call   DWORD PTR [edi-0x350065]
  43d409:	test   al,0xff
  43d40b:	int3   
  43d40c:	mov    ah,0xa2
  43d40e:	inc    DWORD PTR [ebx+0x0]
  43d411:	repnz add BYTE PTR [eax],al
  43d414:	das    
  43d415:	fild   WORD PTR [ebx-0x76007f]
  43d41b:	sub    DWORD PTR [eax-0x761100fe],0xffffffea
  43d422:	add    BYTE PTR [eax],al
  43d424:	pop    ebp
  43d425:	cmp    edi,edi
  43d427:	inc    esi
  43d428:	call   ebx
  43d42a:	add    BYTE PTR [eax],al
  43d42c:	adc    DWORD PTR ds:0x80ffdd00,esi
  43d432:	add    bh,bh
  43d434:	test   DWORD PTR [esi-0x1],ebp
  43d437:	pop    ecx
  43d438:	dec    DWORD PTR [ebp-0x34]
  43d43b:	call   DWORD PTR [edi+edx*1]
  43d43e:	add    al,al
  43d440:	int3   
  43d441:	test   BYTE PTR [eax],al
  43d443:	add    BYTE PTR [ebx],dl
  43d445:	xchg   edi,eax
  43d446:	(bad)  
  43d447:	mov    ecx,0xff0025ff
  43d44c:	fs sub eax,0x90ff16ff
  43d452:	add    bh,bh
  43d454:	pop    ebx
  43d455:	xor    al,BYTE PTR [eax]
  43d457:	int3   
  43d458:	dec    eax
  43d45a:	add    BYTE PTR [eax],al
  43d45c:	leave  
  43d45d:	inc    ebp
  43d45e:	add    bh,cl
  43d460:	add    al,bh
  43d462:	(bad)  
  43d463:	call   DWORD PTR [esi]
  43d465:	sbb    edi,edi
  43d467:	sub    ah,cl
  43d469:	inc    ecx
  43d46a:	(bad)  
  43d46b:	jmp    DWORD PTR [ebx]
  43d46d:	cmp    al,BYTE PTR [eax]
  43d46f:	idiv   bh
  43d471:	inc    ecx
  43d472:	inc    DWORD PTR [eax]
  43d474:	sub    BYTE PTR [ebp-0x1],0x66
  43d478:	dec    DWORD PTR [ebp+0x43beff00]
  43d47e:	add    bh,al
  43d480:	or     DWORD PTR [eax-0x1],0xffffffcc
  43d484:	pushf  
  43d485:	sbb    ah,cl
  43d487:	rol    DWORD PTR [eax],1
  43d489:	and    al,0xff
  43d48b:	jmp    DWORD PTR [esi+0x3]
  43d48e:	(bad)  
  43d48f:	(bad)  
  43d491:	or     DWORD PTR [eax],eax
  43d493:	sub    DWORD PTR [ecx+0x76],0xffffff83
  43d497:	sbb    BYTE PTR [eax],al
  43d499:	out    0x0,al
  43d49b:	int3   
  43d49c:	outs   dx,DWORD PTR ds:[esi]
  43d49d:	test   DWORD PTR [ebx-0x7500de],0xff8a22ff
  43d4a7:	jg     0x43d42c
  43d4a9:	mov    ah,0xff
  43d4ab:	int3   
  43d4ac:	bound  ebx,QWORD PTR [ebx+eax*4+0xc]
  43d4b0:	add    BYTE PTR [edi-0x34],cl
  43d4b3:	and    edx,0xffffff85
  43d4b6:	add    ch,cl
  43d4b8:	push   DWORD PTR [eax+eax*1-0x1e8200]
  43d4bf:	pop    ss
  43d4c0:	inc    DWORD PTR [ecx+0x0]
  43d4c3:	sub    DWORD PTR [ebp-0xed001f],0x38
  43d4ca:	add    DWORD PTR [eax],0x59
  43d4cd:	popa   
  43d4ce:	dec    DWORD PTR [ebx]
  43d4d0:	int3   
  43d4d1:	add    eax,0xf69ffff
  43d4d6:	push   DWORD PTR [eax+eax*1+0x7eff83b7]
  43d4dd:	mov    DWORD PTR [ebx-0xceffd8],0x837e07ff
  43d4e7:	jae    0x43d4e9
  43d4e9:	js     0x43d4ea
  43d4eb:	cmp    DWORD PTR [edi-0x41],0xffffff83
  43d4ef:	jl     0x43d4f0
  43d4f1:	mov    esp,0x90dcffff
  43d4f6:	inc    DWORD PTR [edx]
  43d4f8:	mov    DWORD PTR [esi+0x0],edx
  43d4fb:	add    BYTE PTR [ebx],bh
  43d4fd:	and    al,0x0
  43d4ff:	add    eax,DWORD PTR [eax]
  43d501:	mov    al,ds:0xf4070083
  43d506:	sub    DWORD PTR [edi-0x1],0x4a
  43d50a:	add    BYTE PTR [eax],al
  43d50c:	ss ja  0x43d50f
  43d50f:	mov    ds:0xffff57ff,al
  43d514:	mov    ds:0x9cc77,eax
  43d519:	data16 int3 
  43d51b:	push   ecx
  43d51d:	add    al,BYTE PTR [eax]
  43d51f:	push   edi
  43d520:	jmp    DWORD PTR [esi]
  43d522:	mov    edi,edi
  43d524:	inc    esp
  43d525:	add    BYTE PTR ds:[esi+0xff8eff],bh
  43d52c:	fsub   DWORD PTR [eax+0x0]
  43d52f:	jecxz  0x43d4b4
  43d531:	ss (bad) 
  43d533:	call   DWORD PTR [edi]
  43d535:	xchg   edi,edi
  43d537:	pop    edx
  43d538:	jmp    eax
  43d53a:	inc    DWORD PTR [ebx-0x6e7cb92c]
  43d540:	inc    DWORD PTR [ecx-0x1]
  43d543:	call   DWORD PTR [edi+0x59]
  43d546:	push   edx
  43d548:	add    BYTE PTR [eax+eax*1-0x1],bl
  43d54c:	icebp  
  43d54d:	push   0xffffffcc
  43d54f:	ins    DWORD PTR es:[edi],dx
  43d550:	add    BYTE PTR [edi-0x2bb40100],bh
  43d556:	add    BYTE PTR [ecx],cl
  43d558:	add    BYTE PTR [edx-0x1],bl
  43d55b:	call   edi
  43d55d:	mov    esp,0x2ff83cc
  43d562:	add    BYTE PTR [eax],al
  43d564:	jne    0x43d5d5
  43d566:	int3   
  43d567:	adc    bh,bh
  43d569:	xchg   BYTE PTR [eax],al
  43d56b:	cmp    DWORD PTR [ecx+eiz*4-0x34],0xffffff9e
  43d570:	add    BYTE PTR [ebx+eax*4-0x1],dh
  43d574:	mov    esp,0xfff40019
  43d579:	ds (bad) 
  43d57b:	(bad)  
  43d57c:	mov    ecx,0xff58ffb6
  43d581:	ret    
  43d582:	add    DWORD PTR [ebx+0x6700ba8e],0xffffffff
  43d589:	xchg   bh,bh
  43d58b:	int3   
  43d58c:	jmp    0x43d5f4
  43d58e:	call   ecx
  43d590:	adc    DWORD PTR [edi+edi*8+0x4201ff],0xffffff8b
  43d598:	push   DWORD PTR [ebx-0x7dea0100]
  43d59e:	int3   
  43d59f:	jl     0x43d5a0
  43d5a1:	dec    esi
  43d5a2:	cmp    edi,0xffffffce
  43d5a5:	push   ds
  43d5a6:	int3   
  43d5a7:	fmul   st(4),st
  43d5a9:	aas    
  43d5aa:	inc    DWORD PTR [eax]
  43d5ac:	xchg   DWORD PTR [esi-0x1],edx
  43d5af:	add    DWORD PTR [ebx-0x16337c9c],0x66
  43d5b6:	(bad)  
  43d5b7:	add    BYTE PTR ds:[ebx],ah
  43d5ba:	add    DWORD PTR [eax],0x77
  43d5bd:	ja     0x43d58b
  43d5bf:	imul   edi,edi,0x6a
  43d5c2:	add    ah,cl
  43d5c4:	push   0xb89aa
  43d5c9:	mov    DWORD PTR [eax],0xff846e00
  43d5cf:	pop    ebp
  43d5d0:	add    BYTE PTR [ecx+0x3b5a8900],bl
  43d5d6:	mov    esp,ebp
  43d5d8:	call   FWORD PTR [ebx+eax*4-0x33232877]
  43d5df:	icebp  
  43d5e0:	jmp    FWORD PTR [ebx-0x7d]
  43d5e3:	call   FWORD PTR [edx+0x1c]
  43d5e6:	(bad)  
  43d5e7:	cmp    al,0xff
  43d5e9:	lahf   
  43d5ea:	cmp    edi,0x0
  43d5ed:	lods   al,BYTE PTR ds:[esi]
  43d5ee:	add    dh,dh
  43d5f0:	adc    DWORD PTR [esi+0x0],0xffffffff
  43d5f4:	and    WORD PTR ds:0x1fff,0x0
  43d5fb:	add    BYTE PTR [edi+0x1],dl
  43d5fe:	sbb    esp,0xffffff83
  43d601:	jp     0x43d602
  43d603:	jmp    DWORD PTR [edx+edi*1+0x0]
  43d607:	mov    ecx,0xff004283
  43d60c:	test   al,0xa0
  43d60e:	call   DWORD PTR ds:0xffff2400
  43d614:	retf   0xff00
  43d617:	fcmove st,st(4)
  43d619:	push   ebp
  43d61a:	(bad)  
  43d61b:	jmp    FWORD PTR [edi+0x9b000c]
  43d621:	and    bh,bh
  43d623:	add    ch,bl
  43d625:	fisttp WORD PTR [ecx+0x9eff9e]
  43d62b:	int3   
  43d62c:	lods   eax,DWORD PTR fs:[esi]
  43d62e:	add    BYTE PTR ds:0xb4cc,bh
  43d634:	cmp    eax,0xff1b00fd
  43d639:	inc    ebp
  43d63a:	inc    DWORD PTR [ebx+0x3f89b3e5]
  43d640:	(bad)  
  43d641:	mov    eax,0xf28c00ff
  43d646:	jmp    FWORD PTR [edx]
  43d648:	xor    esi,0x0
  43d64b:	add    BYTE PTR [edi+ebx*2+0x388943ff],dl
  43d652:	add    BYTE PTR [eax],al
  43d654:	jmp    0x43d65c
  43d656:	add    BYTE PTR [ecx+0xffd500],dl
  43d65c:	in     eax,0xf5
  43d65e:	add    BYTE PTR [edx-0x7d],cl
  43d661:	imul   eax,DWORD PTR [eax],0xffffffff
  43d664:	sbb    DWORD PTR [ecx+0x4b83eeff],ebp
  43d66a:	(bad)  
  43d66b:	push   esp
  43d66d:	sar    bh,0x6a
  43d670:	sub    esp,0x0
  43d673:	mov    ebx,ecx
  43d675:	pop    ecx
  43d676:	add    BYTE PTR [eax+eax*1-0x1e],bl
  43d67a:	inc    DWORD PTR [ebx-0x28ff086c]
  43d680:	jmp    FWORD PTR ds:0xed68ffff
  43d686:	(bad)  
  43d687:	dec    BYTE PTR [ecx+0x1fffff95]
  43d68d:	(bad)  
  43d68f:	repnz (bad) 
  43d691:	js     0x43d693
  43d693:	(bad)  
  43d694:	(bad)  
  43d695:	jp     0x43d620
  43d697:	fdivr  st,st(7)
  43d699:	sahf   
  43d69a:	inc    DWORD PTR [eax]
  43d69c:	js     0x43d676
  43d69e:	inc    DWORD PTR [ebp-0x1]
  43d6a1:	outs   dx,BYTE PTR ds:[esi]
  43d6a2:	dec    esp
  43d6a4:	mov    eax,ds:0x34cc79
  43d6a9:	push   0x0
  43d6ab:	jmp    FWORD PTR [edi+0x55]
  43d6ae:	mov    DWORD PTR ds:0xffd883,ebp
  43d6b4:	xchg   BYTE PTR [ebx+0x71cc1aff],ch
  43d6ba:	add    bh,bh
  43d6bc:	xor    cl,BYTE PTR [edi]
  43d6be:	sub    DWORD PTR [eax],0xffffffcc
  43d6c1:	sub    BYTE PTR [eax],al
  43d6c3:	dec    DWORD PTR [ebx+0x47]
  43d6c6:	add    BYTE PTR [edi+edi*8],ch
  43d6c9:	pop    esp
  43d6ca:	int3   
  43d6cb:	call   DWORD PTR [esp+ebx*1+0x39830e00]
  43d6d2:	add    bh,bh
  43d6d4:	call   0xff60d61e
  43d6d9:	cdq    
  43d6da:	add    bh,bh
  43d6dc:	popf   
  43d6dd:	cmc    
  43d6de:	xor    edi,0xffffffff
  43d6e1:	add    BYTE PTR [ebx-0xc0ee01],0xd3
  43d6e8:	call   DWORD PTR [ebx-0x3bf17c01]
  43d6ee:	inc    DWORD PTR [edx+0x0]
  43d6f1:	mov    ds:0x477489cc,eax
  43d6f6:	adc    DWORD PTR [ebp-0x1700],0x62
  43d6fd:	jmp    WORD PTR [edi]
  43d700:	add    dh,bh
  43d702:	dec    esp
  43d704:	inc    esp
  43d705:	hlt    
  43d706:	push   DWORD PTR [esp+ecx*8-0x34]
  43d70a:	int3   
  43d70b:	int3   
  43d70c:	int3   
  43d70d:	int3   
  43d70e:	int3   
  43d70f:	int3   
  43d710:	ret    0x97ff
  43d713:	add    bh,bh
  43d715:	jmp    eax
  43d717:	cmp    edi,0x13
  43d71a:	mov    esp,DWORD PTR [edi-0x7d]
  43d71d:	add    BYTE PTR [esp+edx*8],ch
  43d720:	out    dx,al
  43d721:	inc    esp
  43d723:	(bad)  
  43d724:	inc    DWORD PTR [ebx+0x37ffcc1f]
  43d72a:	xlat   BYTE PTR ds:[ebx]
  43d72b:	pop    edx
  43d72c:	(bad)  
  43d72d:	dec    DWORD PTR [esi+0x50]
  43d730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d731:	int3   
  43d732:	sbb    bh,bh
  43d734:	(bad)  
  43d735:	call   FWORD PTR [edi]
  43d737:	mov    DWORD PTR [eax],eax
  43d739:	pop    eax
  43d73a:	stos   BYTE PTR es:[edi],al
  43d73b:	mov    ds:0x1cc5ff89,eax
  43d740:	or     al,BYTE PTR [eax]
  43d742:	pop    ss
  43d743:	(bad)  
  43d744:	inc    DWORD PTR [ebx-0x14ff00f7]
  43d74a:	div    BYTE PTR [ecx]
  43d74c:	add    BYTE PTR [ebx-0x7c50f018],al
  43d752:	sbb    BYTE PTR [eax],al
  43d754:	int3   
  43d755:	push   ebx
  43d757:	(bad)  
  43d758:	(bad)  
  43d759:	rcl    DWORD PTR ds:[esi-0x47a2ff01],cl
  43d760:	fadd   QWORD PTR [eax]
  43d762:	mov    es,WORD PTR [eax]
  43d764:	add    bh,bh
  43d766:	mov    BYTE PTR [ebx+0x74427b00],al
  43d76c:	(bad)  
  43d76d:	call   FWORD PTR ds:0x8ffd0fd
  43d773:	add    bh,bh
  43d775:	int3   
  43d776:	outs   dx,BYTE PTR ds:[esi]
  43d777:	add    bh,bh
  43d779:	stos   BYTE PTR es:[edi],al
  43d77a:	pop    es
  43d77b:	xor    DWORD PTR [ecx+0x18c06200],ecx
  43d781:	inc    DWORD PTR [ebx+0x6bffccff]
  43d787:	inc    DWORD PTR [ebx+0x2d480]
  43d78d:	jmp    DWORD PTR [ecx]
  43d78f:	ror    bl,1
  43d791:	add    BYTE PTR ds:0x6f000083,bl
  43d797:	add    BYTE PTR [ebx+0x9474ec],al
  43d79d:	(bad)  
  43d79e:	sti    
  43d79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d7a0:	mov    es,WORD PTR [eax]
  43d7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d7a3:	add    DWORD PTR [ebx-0x2f01],0xffffffe1
  43d7aa:	retf   0xffd9
  43d7ad:	jmp    DWORD PTR [edx]
  43d7af:	sahf   
  43d7b0:	pop    eax
  43d7b1:	and    DWORD PTR [esi+0x4cffff00],0xffffffff
  43d7b8:	add    bh,ah
  43d7ba:	test   BYTE PTR [ebx+eax*4-0x7ef1ea77],ah
  43d7c1:	cmp    DWORD PTR [eax],0xffffffcc
  43d7c4:	add    BYTE PTR [ecx+0x1ff0031],cl
  43d7ca:	add    BYTE PTR [eax],cl
  43d7cc:	(bad)  
  43d7cd:	jmp    ecx
  43d7cf:	cld    
  43d7d0:	sub    ecx,DWORD PTR [ecx-0xff0087]
  43d7d6:	lock mov edi,edi
  43d7d9:	or     BYTE PTR [edi],ch
  43d7db:	pop    ebx
  43d7dc:	add    DWORD PTR [eax],0xfffffff2
  43d7df:	sub    al,bh
  43d7e1:	add    dl,bh
  43d7e3:	add    BYTE PTR [ebx-0x337c3700],al
  43d7e9:	cdq    
  43d7ea:	mov    bh,0x83
  43d7ec:	(bad)  
  43d7ed:	inc    DWORD PTR [edi-0x12]
  43d7f0:	mov    dl,0x83
  43d7f2:	and    al,0x0
  43d7f4:	dec    DWORD PTR [ecx-0xa7c0099]
  43d7fa:	xor    bl,BYTE PTR [ebx-0x74860001]
  43d800:	mov    ebp,0xffff6400
  43d805:	add    BYTE PTR ds:0x92ef00ff,ch
  43d80b:	sub    cl,ah
  43d80d:	add    DWORD PTR [esp+edx*2-0x55],0x0
  43d812:	repz add bh,bh
  43d815:	inc    DWORD PTR [ebx]
  43d817:	add    BYTE PTR [eax],al
  43d819:	fild   QWORD PTR [edi]
  43d81b:	jae    0x280d9921
  43d821:	xor    DWORD PTR [edx-0x1],0xffffff83
  43d825:	mov    DWORD PTR [ecx],ebx
  43d827:	inc    DWORD PTR [eax]
  43d829:	repnz mov ch,0xb3
  43d82c:	(bad)  
  43d82d:	jmp    DWORD PTR [ebx+0x2bffbbc6]
  43d833:	inc    DWORD PTR [eax]
  43d835:	xor    DWORD PTR [esi-0x1],0xffffffcc
  43d839:	inc    esi
  43d83a:	mov    ecx,0xf2ff898c
  43d83f:	sbb    al,0x5a
  43d841:	add    BYTE PTR [esi+0x0],ch
  43d844:	cmp    edi,0xffffffa4
  43d847:	add    DWORD PTR [eax],0x8
  43d84a:	adc    al,0xca
  43d84c:	cmp    edi,0xf
  43d84f:	push   cs
  43d850:	pop    eax
  43d851:	adc    edx,0x0
  43d854:	add    bh,bh
  43d856:	adc    al,BYTE PTR [ebx-0x46cb5e77]
  43d85c:	add    DWORD PTR [eax],0x7b
  43d85f:	loope  0x43d837
  43d861:	or     DWORD PTR [ebp-0x34],0x0
  43d865:	add    BYTE PTR [edx],dl
  43d867:	dec    DWORD PTR [ecx+0x4d5f0]
  43d86d:	add    cl,ch
  43d86f:	pop    edi
  43d870:	mov    ds:0xff5e00,eax
  43d875:	push   DWORD PTR [ebx+0x0]
  43d878:	push   DWORD PTR [ecx]
  43d87a:	pop    eax
  43d87b:	or     bh,bh
  43d87d:	call   DWORD PTR [esp+ecx*2-0xf0009d]
  43d884:	(bad)  
  43d885:	push   eax
  43d887:	inc    DWORD PTR [eax]
  43d889:	int3   
  43d88a:	ins    DWORD PTR es:[edi],dx
  43d88b:	ud0    edi,edi
  43d88e:	jns    0x43d8e5
  43d890:	imul   eax,DWORD PTR [eax],0xffffff9d
  43d893:	mov    edi,edi
  43d895:	call   FWORD PTR [edx+0x3f5aff89]
  43d89b:	lahf   
  43d89c:	add    ah,cl
  43d89e:	sub    bh,BYTE PTR [esi]
  43d8a0:	inc    ebp
  43d8a1:	push   DWORD PTR [ebp+0x0]
  43d8a4:	inc    DWORD PTR [eax]
  43d8a6:	call   0x17b8d8ab
  43d8ab:	mov    bh,bh
  43d8ad:	jmp    esp
  43d8af:	mov    ds:0x9789da,al
  43d8b4:	cmp    edi,0x37
  43d8b7:	add    BYTE PTR [eax],al
  43d8b9:	sbb    eax,0xff8fc8
  43d8be:	fistp  DWORD PTR [ecx-0x33090044]
  43d8c4:	add    bh,bh
  43d8c6:	xlat   BYTE PTR ds:[ebx]
  43d8c7:	add    BYTE PTR [ecx+0x2fdf41],cl
  43d8cd:	(bad)  
  43d8ce:	in     al,dx
  43d8cf:	ret    
  43d8d0:	jns    0x43d8d1
  43d8d2:	cmp    bh,bh
  43d8d4:	mov    DWORD PTR [eax],eax
  43d8d6:	scas   eax,DWORD PTR es:[edi]
  43d8d7:	inc    DWORD PTR [eax]
  43d8d9:	pop    es
  43d8da:	fistp  DWORD PTR [ecx+ecx*4-0x1]
  43d8de:	in     al,dx
  43d8df:	jae    0x43d8e1
  43d8e1:	inc    DWORD PTR [ecx+0x690083ff]
  43d8e7:	inc    DWORD PTR [ebx-0x28896e]
  43d8ed:	add    BYTE PTR [ecx],dl
  43d8ef:	adc    eax,0xccd9ff93
  43d8f4:	cmp    edi,0x46
  43d8f7:	inc    DWORD PTR [ebx+0xc35918]
  43d8fd:	dec    esp
  43d8ff:	adc    al,0xe9
  43d901:	jmp    FWORD PTR [edi+edi*8]
  43d904:	cmp    edi,0x6e
  43d907:	or     esp,0x1
  43d90a:	pop    ebp
  43d90b:	fadd   QWORD PTR [ebx+0x1d9b5fff]
  43d911:	inc    ebx
  43d913:	add    bh,bh
  43d915:	call   FWORD PTR [eax-0x34]
  43d918:	mov    DWORD PTR [edi+0xff405b],esi
  43d91e:	stos   BYTE PTR es:[edi],al
  43d91f:	xchg   ch,dl
  43d921:	add    BYTE PTR [esi-0x1],bh
  43d924:	cmp    edi,0xffffffcc
  43d927:	add    ah,cl
  43d929:	lea    ebx,[ebx+0x4e]
  43d92c:	(bad)  
  43d92d:	inc    DWORD PTR [eax+ebx*1]
  43d930:	out    0xff,eax
  43d932:	push   cs
  43d933:	(bad)  
  43d934:	(bad)  
  43d935:	jmp    DWORD PTR [edi+0x11ca00ff]
  43d93b:	jne    0x43d93c
  43d93d:	dec    DWORD PTR [eax]
  43d93f:	push   edx
  43d940:	cmp    edi,edi
  43d942:	xchg   esp,eax
  43d943:	inc    DWORD PTR [eax]
  43d945:	inc    DWORD PTR [edx+0x6efb0000]
  43d94b:	and    ecx,DWORD PTR [ecx+0x7ac72400]
  43d951:	inc    eax
  43d953:	inc    DWORD PTR [eax]
  43d955:	inc    DWORD PTR [ebp-0x77]
  43d958:	add    BYTE PTR [eax+0x18],dl
  43d95b:	out    dx,al
  43d95c:	add    BYTE PTR [eax],al
  43d95e:	jg     0x43d9c7
  43d960:	sub    edi,edi
  43d962:	mov    ah,0xff
  43d964:	add    ah,cl
  43d966:	jp     0x43d8eb
  43d968:	and    DWORD PTR [ebx],0x19
  43d96b:	(bad)  
  43d96d:	adc    DWORD PTR [eax+0x7effa2d5],0x0
  43d974:	add    BYTE PTR [ebx-0x42ffff43],al
  43d97a:	jg     0x43d903
  43d97c:	int3   
  43d97d:	add    cl,bh
  43d97f:	js     0x43d956
  43d981:	jmp    DWORD PTR [edx]
  43d983:	add    BYTE PTR [ebx-0x763001],al
  43d989:	loopne 0x43d982
  43d98b:	dec    edx
  43d98c:	inc    DWORD PTR [eax]
  43d98e:	xchg   ecx,eax
  43d98f:	jbe    0x43d919
  43d991:	push   DWORD PTR [ecx+0x4bff8389]
  43d997:	mov    edi,edi
  43d999:	aam    0xdd
  43d99b:	outs   dx,DWORD PTR ds:[esi]
  43d99c:	(bad)  
  43d99d:	jmp    FWORD PTR [edx-0x7d]
  43d9a0:	int    0x0
  43d9a2:	sar    bh,cl
  43d9a4:	add    BYTE PTR [eax],al
  43d9a6:	ss (bad) 
  43d9a8:	call   DWORD PTR [ebx]
  43d9aa:	jl     0x43d948
  43d9ac:	add    BYTE PTR [eax],al
  43d9ae:	fistp  DWORD PTR [edx]
  43d9b0:	pop    edi
  43d9b1:	int3   
  43d9b2:	scas   eax,DWORD PTR es:[edi]
  43d9b3:	add    BYTE PTR [ebx+0x8300],al
  43d9b9:	fucom  st(0)
  43d9bb:	fiadd  WORD PTR [ebx-0x23568f01]
  43d9c1:	int3   
  43d9c2:	inc    edi
  43d9c3:	add    bh,bh
  43d9c5:	mov    esp,eax
  43d9c7:	add    BYTE PTR [eax],al
  43d9c9:	inc    ebx
  43d9ca:	loope  0x43d9e0
  43d9cc:	cmp    edi,0xffffffe1
  43d9cf:	cwd    
  43d9d1:	jmp    FWORD PTR [eax-0x1]
  43d9d4:	mov    edi,edi
  43d9d6:	pop    eax
  43d9d7:	add    ah,cl
  43d9d9:	fwait
  43d9da:	jne    0x43d9e0
  43d9dc:	add    ah,cl
  43d9de:	loopne 0x43d9a1
  43d9e0:	fimul  DWORD PTR [ecx-0xffb0]
  43d9e6:	repz cmp edi,0x1e
  43d9ea:	adc    DWORD PTR [ebp+0x0],esi
  43d9ed:	jmp    FWORD PTR [edi+0x23ff4018]
  43d9f3:	(bad)  
  43d9f4:	(bad)  
  43d9f5:	inc    DWORD PTR ds:0xc8f5ff00
  43d9fb:	cdq    
  43d9fc:	cmp    edi,0xffffff9a
  43d9ff:	scas   al,BYTE PTR es:[edi]
  43da00:	jg     0x43da02
  43da02:	and    edi,edi
  43da04:	add    BYTE PTR [eax],al
  43da06:	rol    BYTE PTR [eax],1
  43da08:	(bad)  
  43da09:	mov    ebx,0x83864b
  43da0e:	mov    bl,ch
  43da10:	in     al,0x0
  43da12:	xchg   ebp,eax
  43da13:	dec    esp
  43da15:	sub    DWORD PTR [eax],0x0
  43da18:	(bad)  
  43da19:	jl     0x43da37
  43da1b:	mov    al,BYTE PTR [eax]
  43da1d:	call   DWORD PTR [ebx+0x6d005a5b]
  43da23:	add    BYTE PTR [eax],al
  43da25:	dec    DWORD PTR [ebx-0x10b00000]
  43da2b:	mov    cl,0x83
  43da2d:	push   edi
  43da2f:	fist   WORD PTR [esp+ecx*8]
  43da32:	out    0xff,al
  43da34:	inc    DWORD PTR [eax]
  43da36:	mov    edi,0x421fffff
  43da3b:	xchg   ebp,eax
  43da3c:	add    DWORD PTR [eax],0x70
  43da3f:	and    bh,bh
  43da41:	inc    DWORD PTR [ebx]
  43da43:	(bad)  
  43da44:	inc    DWORD PTR [ebx+0x4a89ff4d]
  43da4a:	shl    BYTE PTR [ecx+0x0],1
  43da4d:	jmp    FWORD PTR [ebx]
  43da4f:	loopne 0x43dabf
  43da51:	(bad)  
  43da52:	out    dx,al
  43da53:	(bad)  
  43da54:	(bad)  
  43da55:	dec    ebp
  43da57:	int3   
  43da58:	add    cl,al
  43da5a:	xor    al,0x63
  43da5c:	cmp    edi,0xffffffe9
  43da5f:	add    eax,DWORD PTR [eax+eax*1]
  43da62:	pushf  
  43da63:	(bad)  
  43da64:	inc    DWORD PTR [eax]
  43da66:	mov    eax,ds:0x816affff
  43da6b:	mov    edi,0x2400ff83
  43da70:	add    BYTE PTR [eax],al
  43da72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43da73:	int3   
  43da74:	add    BYTE PTR [eax],al
  43da76:	cli    
  43da77:	(bad)  
  43da78:	inc    DWORD PTR [ebx-0x7cff13ab]
  43da7e:	adc    BYTE PTR [ebp+0x61],0x0
  43da82:	xor    bh,bh
  43da84:	inc    DWORD PTR [eax]
  43da86:	rol    DWORD PTR [eax],cl
  43da88:	int3   
  43da89:	cmp    DWORD PTR [eax+0x5008324],ecx
  43da8f:	popa   
  43da90:	iret   
  43da91:	add    BYTE PTR [esi-0x34],dh
  43da94:	(bad)  
  43da95:	(bad)  
  43da96:	mov    esi,0x9afaff00
  43da9b:	fld    QWORD PTR [eax]
  43da9d:	inc    DWORD PTR [eax+0x30]
  43daa0:	sahf   
  43daa1:	add    BYTE PTR [esi-0x1],ah
  43daa4:	dec    esp
  43daa6:	call   0xff63:0x989e0000
  43daad:	int3   
  43daae:	into   
  43daaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dab0:	sub    bh,bh
  43dab2:	add    BYTE PTR [eax],0xff
  43dab5:	add    BYTE PTR [ecx],dh
  43dab7:	add    bh,bh
  43dab9:	(bad)  
  43daba:	mov    ebx,0x768383cb
  43dabf:	ins    DWORD PTR es:[edi],dx
  43dac0:	arpl   di,di
  43dac2:	cmp    bh,bh
  43dac4:	add    BYTE PTR [eax],al
  43dac6:	jl     0x43dac7
  43dac8:	add    BYTE PTR [eax-0x6f4f],ch
  43dace:	pop    edx
  43dacf:	pop    ss
  43dad0:	and    bh,bh
  43dad2:	mov    BYTE PTR [eax],0xff
  43dad5:	int3   
  43dad6:	add    BYTE PTR cs:[ecx-0x7c80260f],cl
  43dadd:	sub    DWORD PTR [ebx+0x3a00c22e],0xffffff83
  43dae4:	dec    esp
  43dae6:	xchg   BYTE PTR [eax],al
  43dae8:	dec    DWORD PTR ds:0x83ff1af7
  43daee:	pop    esp
  43daef:	stos   BYTE PTR es:[edi],al
  43daf0:	int3   
  43daf1:	int3   
  43daf2:	xchg   BYTE PTR [eax],al
  43daf4:	add    BYTE PTR [ebx+0x58ff89d7],al
  43dafa:	nop
  43dafb:	mov    eax,0x9cb10083
  43db00:	inc    esp
  43db01:	jmp    DWORD PTR [ecx]
  43db03:	add    BYTE PTR [ecx+0x8329ff],cl
  43db09:	push   0xffff167f
  43db0e:	jl     0x43dae5
  43db10:	push   eax
  43db11:	add    dh,ch
  43db13:	cmp    edi,0x0
  43db16:	ds (bad) 
  43db18:	dec    DWORD PTR ds:0xffff9981
  43db1e:	(bad)  
  43db1f:	addr16 aas 
  43db21:	xor    ecx,0x0
  43db24:	mov    edi,edi
  43db26:	sti    
  43db27:	(bad)  
  43db28:	dec    DWORD PTR [eax+0x12d0]
  43db2e:	popa   
  43db2f:	pop    ds
  43db30:	jmp    0x437d01
  43db35:	mov    DWORD PTR [eax-0x1],eax
  43db38:	jmp    FWORD PTR [esi-0x59]
  43db3b:	dec    ebx
  43db3c:	add    bh,bh
  43db3e:	in     eax,dx
  43db3f:	mov    edx,0xff6fffa2
  43db44:	inc    DWORD PTR [eax]
  43db46:	rol    BYTE PTR [eax],1
  43db48:	xor    ecx,0xffffff88
  43db4b:	inc    esi
  43db4c:	inc    DWORD PTR [eax]
  43db4e:	jmp    0xe344b786
  43db53:	(bad)  
  43db54:	inc    DWORD PTR [ebx-0x6dff00de]
  43db5a:	push   ecx
  43db5b:	sub    eax,DWORD PTR [ebx-0x613ce301]
  43db61:	call   ebx
  43db63:	inc    DWORD PTR [eax]
  43db65:	jmp    edi
  43db67:	inc    DWORD PTR [eax]
  43db69:	sti    
  43db6a:	fwait
  43db6b:	pop    es
  43db6c:	add    ah,cl
  43db6e:	loope  0x43dba8
  43db70:	xchg   edx,eax
  43db71:	add    BYTE PTR ds:0x4bff8300,ch
  43db77:	cmp    edi,0xffffff84
  43db7a:	mov    eax,esp
  43db7c:	add    BYTE PTR [eax],al
  43db7e:	dec    ebp
  43db7f:	jg     0x43dbe2
  43db81:	add    BYTE PTR [esi],cl
  43db83:	inc    DWORD PTR [ebx-0x33c677]
  43db89:	lock mov esp,0xeff8336
  43db8f:	jns    0x43db1a
  43db91:	call   FWORD PTR [ecx-0x77]
  43db94:	add    DWORD PTR [eax],0xffffffe7
  43db97:	(bad)  
  43db98:	jmp    DWORD PTR [edx-0x39]
  43db9b:	sbb    DWORD PTR [eax],eax
  43db9d:	add    dh,cl
  43db9f:	fldcw  WORD PTR [eax-0x7d]
  43dba2:	add    BYTE PTR [eax],0x83
  43dba5:	add    cl,dh
  43dba7:	inc    DWORD PTR [eax]
  43dba9:	pop    edi
  43dbaa:	aas    
  43dbab:	cmp    edi,0x0
  43dbae:	test   DWORD PTR [edi-0x3a],0xff001000
  43dbb5:	add    BYTE PTR [esi-0x7d],bl
  43dbb8:	(bad)  
  43dbb9:	cld    
  43dbba:	push   ds
  43dbbb:	int3   
  43dbbc:	or     esp,0xffffffdb
  43dbbf:	in     al,0xc9
  43dbc1:	inc    ebp
  43dbc3:	add    BYTE PTR [eax],al
  43dbc5:	add    BYTE PTR [edi-0x1e8a0000],dh
  43dbcb:	sbb    edi,edi
  43dbcd:	add    BYTE PTR [ecx+0x2500b92a],dl
  43dbd3:	cmp    edi,0xffffffff
  43dbd6:	add    DWORD PTR [eax],eax
  43dbd8:	jmp    FWORD PTR [ecx]
  43dbda:	jmp    0x5c4:0xa300ff9f
  43dbe1:	call   FWORD PTR [edi+edi*8-0x1]
  43dbe5:	add    BYTE PTR [esi-0x7d],dh
  43dbe8:	add    BYTE PTR [edx+0x10],ch
  43dbeb:	retf   
  43dbec:	dec    DWORD PTR [ecx-0x303896]
  43dbf2:	dec    ebx
  43dbf3:	add    BYTE PTR [ebx-0xff4000],al
  43dbf9:	xchg   esp,eax
  43dbfa:	sub    BYTE PTR [edx-0x1],dh
  43dbfd:	xor    DWORD PTR [ecx],0xffffffd3
  43dc00:	sar    edi,1
  43dc02:	jle    0x43dbd0
  43dc04:	cmp    edi,0x68
  43dc07:	int3   
  43dc08:	add    al,bh
  43dc0a:	aam    0x5
  43dc0c:	(bad)  
  43dc0d:	inc    DWORD PTR [esi-0x5c0023c4]
  43dc13:	(bad)  
  43dc14:	inc    DWORD PTR [eax]
  43dc16:	fld    DWORD PTR [eax]
  43dc18:	jmp    esp
  43dc1a:	cli    
  43dc1b:	sub    eax,DWORD PTR [eax]
  43dc1d:	call   FWORD PTR [edx+0x35ff47c0]
  43dc23:	inc    DWORD PTR [eax]
  43dc25:	call   FWORD PTR [edi]
  43dc27:	inc    DWORD PTR [ebx+0x1c21]
  43dc2d:	int3   
  43dc2e:	out    dx,eax
  43dc2f:	ins    DWORD PTR es:[edi],dx
  43dc30:	xor    edi,edi
  43dc32:	call   0x4442dd36
  43dc37:	add    bh,bh
  43dc39:	xchg   ebp,eax
  43dc3a:	xor    BYTE PTR [esi+0x0],bh
  43dc3d:	cmp    DWORD PTR [ebx-0x24],0x17
  43dc41:	push   DWORD PTR [eax+0x2d0083ff]
  43dc47:	inc    DWORD PTR [ebx-0xb94ad7]
  43dc4d:	sub    DWORD PTR [edx*2-0x5000b3],0x0
  43dc55:	add    BYTE PTR [ebx+0x39cffff],ah
  43dc5b:	popa   
  43dc5c:	dec    esp
  43dc5e:	imul   esi,DWORD PTR [edx-0x762d0080],0xffffff89
  43dc65:	sub    DWORD PTR [eax+eax*1-0x1],0xfffffff4
  43dc6a:	loope  0x43dc7c
  43dc6c:	add    BYTE PTR [eax],al
  43dc6e:	mov    ebx,0x11ff0ad4
  43dc73:	dec    DWORD PTR [ecx+0x56cc]
  43dc79:	hlt    
  43dc7a:	call   0x69be:0x60ff83d1
  43dc81:	add    BYTE PTR [ecx-0x45007c01],al
  43dc87:	mov    DWORD PTR [ebx+0xd0c09b],eax
  43dc8d:	add    bl,dl
  43dc8f:	adc    BYTE PTR [ebp+0x0],bh
  43dc92:	adc    edi,edi
  43dc94:	add    bh,bh
  43dc96:	sub    cl,BYTE PTR [ecx+0x5d17ff]
  43dc9c:	int3   
  43dc9d:	add    cl,bl
  43dc9f:	xchg   DWORD PTR [esi-0x3700],edx
  43dca5:	add    DWORD PTR [edi-0x1],0x0
  43dca9:	xor    dh,dh
  43dcab:	mov    ch,0x0
  43dcad:	dec    DWORD PTR [eax+0x2003c63]
  43dcb3:	int3   
  43dcb4:	add    BYTE PTR [eax],al
  43dcb6:	sub    ecx,esp
  43dcb8:	call   FWORD PTR [edi]
  43dcba:	cmp    DWORD PTR [ebp-0x2d050001],edi
  43dcc0:	mov    cl,0x0
  43dcc2:	popf   
  43dcc3:	dec    esp
  43dcc5:	add    BYTE PTR [edi-0x1],dh
  43dcc8:	dec    DWORD PTR [ebx-0x4265]
  43dcce:	cmp    al,0xa5
  43dcd0:	rol    DWORD PTR [eax],cl
  43dcd2:	fiadd  WORD PTR [eax]
  43dcd4:	mov    edi,edi
  43dcd6:	mov    al,BYTE PTR [eax]
  43dcd8:	call   FWORD PTR [edi+0xc]
  43dcdb:	js     0x43dcdc
  43dcdd:	add    BYTE PTR [ebx+ecx*1+0xa0ff08],ch
  43dce4:	(bad)  
  43dce5:	push   eax
  43dce7:	int3   
  43dce8:	add    BYTE PTR [esp+ecx*1],bl
  43dceb:	inc    ecx
  43dcec:	(bad)  
  43dced:	call   FWORD PTR [esi+0x7e]
  43dcf0:	xchg   edx,eax
  43dcf1:	add    ah,ch
  43dcf3:	add    DWORD PTR [eax],0x0
  43dcf6:	add    al,BYTE PTR [eax]
  43dcf8:	int3   
  43dcf9:	jns    0x43dd64
  43dcfb:	dec    ebx
  43dcfc:	(bad)  
  43dcfd:	(bad)  
  43dcfe:	mov    ebx,0xad00946c
  43dd03:	int3   
  43dd04:	cmp    edi,0xffffff93
  43dd07:	inc    DWORD PTR [ebx-0x7cc10cec]
  43dd0d:	add    ah,dl
  43dd0f:	jge    0x43dca7
  43dd11:	int3   
  43dd12:	leave  
  43dd13:	add    DWORD PTR [eax],0xffffffff
  43dd16:	out    dx,al
  43dd17:	inc    DWORD PTR [eax]
  43dd19:	mov    esp,0xccffe020
  43dd1e:	mov    al,ds:0xdb836819
  43dd23:	inc    DWORD PTR [eax]
  43dd25:	call   DWORD PTR [edi+edi*8+0x0]
  43dd29:	jle    0x43dcfb
  43dd2b:	ret    0xffff
  43dd2e:	fwait
  43dd2f:	push   esp
  43dd30:	add    BYTE PTR [ebx-0x7cffff51],0xa1
  43dd37:	(bad)  
  43dd38:	dec    edi
  43dd3a:	mov    ebx,0x66ffff96
  43dd3f:	xor    BYTE PTR [ebx+eax*4+0x20],0x0
  43dd44:	add    bh,bh
  43dd46:	scas   eax,DWORD PTR es:[edi]
  43dd47:	add    DWORD PTR [eax],0xffffffcf
  43dd4a:	leave  
  43dd4b:	cmp    eax,0xaceff83
  43dd50:	adc    eax,0xff8377ff
  43dd55:	add    BYTE PTR [ebp+0x0],ah
  43dd58:	jmp    FWORD PTR [edi+esi*4-0x44]
  43dd5c:	add    BYTE PTR [eax],al
  43dd5e:	lods   al,BYTE PTR ds:[esi]
  43dd5f:	sbb    eax,0x830cff2f
  43dd64:	add    bh,bh
  43dd66:	daa    
  43dd67:	inc    DWORD PTR [ebx-0x332e1633]
  43dd6d:	call   FWORD PTR [ebx-0x66ffedac]
  43dd73:	(bad)  
  43dd74:	dec    esp
  43dd76:	add    al,BYTE PTR [eax]
  43dd78:	push   ebp
  43dd7a:	retf   
  43dd7b:	sbb    BYTE PTR [eax],al
  43dd7d:	sbb    esi,0xfffffffc
  43dd80:	cwde   
  43dd81:	call   esp
  43dd83:	int3   
  43dd84:	add    bh,bh
  43dd86:	je     0x43dd87
  43dd88:	or     DWORD PTR [edi-0xfff147],0x71
  43dd8f:	jmp    0xccd36740
  43dd94:	add    bh,bh
  43dd96:	dec    ebx
  43dd97:	add    BYTE PTR [eax],al
  43dd99:	adc    bh,BYTE PTR [ecx]
  43dd9b:	addr16 (bad) 
  43dd9d:	(bad)  
  43dd9e:	(bad)  
  43dd9f:	aas    
  43dda0:	mov    bh,0xff
  43dda2:	scas   eax,DWORD PTR es:[edi]
  43dda3:	add    BYTE PTR [eax],al
  43dda5:	add    BYTE PTR [edx],bl
  43dda7:	(bad)  
  43dda8:	dec    DWORD PTR [ecx]
  43ddaa:	inc    edx
  43ddab:	inc    edx
  43ddac:	inc    DWORD PTR [eax]
  43ddae:	(bad)  
  43ddb0:	jmp    0x894448b4
  43ddb5:	mov    eax,ecx
  43ddb7:	(bad)  
  43ddb8:	(bad)  
  43ddb9:	fimul  WORD PTR [ebx]
  43ddbb:	add    BYTE PTR [eax],al
  43ddbd:	add    BYTE PTR [edi-0x1c],ah
  43ddc0:	enter  0x41ff,0x0
  43ddc4:	int3   
  43ddc5:	add    BYTE PTR [eax-0x7d],ah
  43ddc8:	xor    DWORD PTR [ebp*4-0x11ff0002],0xffffffc0
  43ddd0:	add    bh,bh
  43ddd2:	sbb    ecx,esp
  43ddd4:	(bad)  
  43ddd5:	inc    DWORD PTR [ebp-0x1]
  43ddd8:	add    BYTE PTR [ebp+0x2e],cl
  43dddb:	inc    edx
  43dddc:	int3   
  43dddd:	mov    DWORD PTR [ecx-0x78],edi
  43dde0:	xor    DWORD PTR [eax],eax
  43dde2:	dec    esp
  43dde3:	or     DWORD PTR [ecx+0xfffe00],0x4d
  43ddea:	jo     0x43dd7d
  43ddec:	inc    DWORD PTR [eax]
  43ddee:	setbe  BYTE PTR [ebx-0x1]
  43ddf2:	outs   dx,BYTE PTR ds:[esi]
  43ddf3:	add    DWORD PTR [eax],0xffffffff
  43ddf6:	jo     0x43dd7b
  43ddf8:	call   ecx
  43ddfa:	mov    eax,0x81830037
  43ddff:	outs   dx,DWORD PTR ds:[esi]
  43de00:	into   
  43de01:	add    ch,ch
  43de03:	add    bh,bh
  43de05:	(bad)  
  43de06:	cmp    eax,0x958d00ff
  43de0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de0c:	(bad)  
  43de0d:	jmp    FWORD PTR [edx]
  43de0f:	sbb    esi,ebx
  43de11:	add    al,ah
  43de13:	add    bh,bh
  43de15:	call   FWORD PTR [esi]
  43de17:	int3   
  43de18:	call   DWORD PTR [ebp+0x41]
  43de1b:	add    BYTE PTR [eax],0xff
  43de1e:	not    DWORD PTR [eax-0x37]
  43de21:	call   FWORD PTR [ebx+0x0]
  43de24:	inc    DWORD PTR [eax]
  43de26:	push   esp
  43de27:	int3   
  43de28:	push   DWORD PTR [edx-0x7c00a78a]
  43de2e:	scas   al,BYTE PTR es:[edi]
  43de2f:	mov    dl,BYTE PTR [ecx]
  43de31:	add    al,cl
  43de33:	inc    DWORD PTR [eax]
  43de35:	add    bl,al
  43de37:	inc    DWORD PTR [eax]
  43de39:	inc    esi
  43de3a:	mov    cl,0xc8
  43de3c:	int3   
  43de3d:	or     DWORD PTR ds:0x758318bc,0xffffffff
  43de44:	dec    esp
  43de46:	scas   al,BYTE PTR es:[edi]
  43de47:	dec    DWORD PTR [ecx+0xa6fe81]
  43de4d:	sbb    DWORD PTR [ecx+ebx*8-0x43],0xffffffff
  43de52:	mov    BYTE PTR [eax],0x0
  43de55:	add    DWORD PTR [esi],0xffffff89
  43de58:	(bad)  
  43de59:	cmp    BYTE PTR [eax],ah
  43de5b:	idiv   bh
  43de5d:	add    DWORD PTR [edi+0x61008c15],0x0
  43de64:	add    bh,bh
  43de66:	cmp    eax,DWORD PTR [ebx-0x6b75aa00]
  43de6c:	(bad)  
  43de6d:	jmp    FWORD PTR [edi+0x6b00589e]
  43de73:	int3   
  43de74:	add    BYTE PTR [ebx+0x49ffff9e],al
  43de7a:	jp     0x43de4d
  43de7c:	inc    DWORD PTR [eax]
  43de7e:	jo     0x43de85
  43de80:	sbb    al,BYTE PTR [eax]
  43de82:	sbb    al,BYTE PTR [ebx-0x8d7c01]
  43de88:	(bad)  
  43de89:	mov    ebx,0xcc00d21a
  43de8e:	xor    cl,BYTE PTR [eax-0xb700bc]
  43de94:	add    BYTE PTR [eax],al
  43de96:	push   es
  43de97:	(bad)  
  43de98:	push   DWORD PTR [edi]
  43de9a:	cld    
  43de9b:	lock inc DWORD PTR [eax]
  43de9e:	fs aas 
  43dea0:	bnd jmp DWORD PTR [eax+eax*1-0x10100]
  43dea8:	add    BYTE PTR [edx-0x7c19c2],ah
  43deae:	retf   
  43deaf:	mov    edi,0xff8dff8a
  43deb4:	inc    DWORD PTR [eax]
  43deb6:	in     eax,0xff
  43deb8:	add    BYTE PTR [esi-0x7c001fc9],al
  43debe:	retf   
  43debf:	inc    edx
  43dec0:	ins    BYTE PTR es:[edi],dx
  43dec1:	add    BYTE PTR [ebx-0x7c007c01],ah
  43dec7:	add    bh,bh
  43dec9:	les    ebp,FWORD PTR [ecx]
  43decb:	inc    DWORD PTR es:[eax]
  43dece:	(bad)  
  43decf:	fmul   QWORD PTR [edx-0x1]
  43ded2:	pop    ebp
  43ded3:	inc    DWORD PTR [eax]
  43ded5:	add    bl,al
  43ded7:	int3   
  43ded8:	add    BYTE PTR [ecx+0x2a],cl
  43dedb:	inc    esi
  43dedc:	cmp    edi,0x43
  43dedf:	push   esp
  43dee0:	dec    eax
  43dee1:	inc    ebp
  43dee3:	add    DWORD PTR [ebx-0x7c76e301],0xffffffce
  43deea:	push   esi
  43deeb:	inc    ebx
  43deec:	add    bh,bh
  43deee:	cmp    al,0xc9
  43def0:	pop    ss
  43def1:	(bad)  
  43def2:	cmp    bh,bh
  43def4:	add    ah,cl
  43def6:	or     al,0x0
  43def8:	add    BYTE PTR [esi+0x54],cl
  43defb:	daa    
  43defc:	inc    DWORD PTR [ebx-0x7cd0bb61]
  43df02:	add    ah,cl
  43df04:	(bad)  
  43df05:	dec    DWORD PTR [edx-0x77]
  43df08:	int3   
  43df09:	aam    0x14
  43df0b:	ja     0x43ded9
  43df0d:	add    BYTE PTR [edi+0x7d],bh
  43df10:	call   0x1589:0x83835a00
  43df17:	int3   
  43df18:	add    BYTE PTR [edx+0xff467f],bh
  43df1e:	adc    esi,DWORD PTR [eax]
  43df20:	rol    BYTE PTR [eax],0xac
  43df23:	add    bh,bh
  43df25:	jmp    ebx
  43df27:	(bad)  
  43df28:	push   DWORD PTR [ecx-0x39]
  43df2b:	mov    al,ds:0xf653ff89
  43df30:	or     eax,DWORD PTR [eax]
  43df32:	jmp    0x43df33
  43df34:	inc    DWORD PTR [eax]
  43df36:	inc    DWORD PTR gs:[eax]
  43df39:	(bad)  
  43df3a:	jne    0x43ded9
  43df3c:	inc    DWORD PTR [eax]
  43df3e:	xchg   esi,eax
  43df3f:	nop
  43df40:	add    DWORD PTR [eax],0x83ffcc04
  43df46:	sub    edi,edi
  43df48:	add    cl,bl
  43df4a:	and    DWORD PTR [ebp+0x6ac0ffff],esi
  43df50:	sar    edi,0x8a
  43df53:	add    DWORD PTR [ebx-0x6000],0x2a
  43df5a:	cdq    
  43df5b:	and    bh,bh
  43df5d:	(bad)  
  43df5e:	in     al,dx
  43df5f:	or     ebx,DWORD PTR [edi+0x0]
  43df62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43df63:	(bad)  
  43df64:	(bad)  
  43df65:	(bad)  
  43df66:	fild   WORD PTR [eax]
  43df68:	add    BYTE PTR [ebp-0xda1b],cl
  43df6e:	lock inc ebp
  43df70:	push   esp
  43df71:	add    BYTE PTR [edi+0x23ffffff],ch
  43df77:	(bad)  
  43df78:	inc    DWORD PTR [eax]
  43df7a:	inc    edi
  43df7b:	dec    ecx
  43df7c:	inc    DWORD PTR [ebx-0x909755]
  43df82:	adc    al,0xff
  43df84:	add    bh,bh
  43df86:	pop    ebp
  43df87:	int3   
  43df88:	(bad)  
  43df89:	out    dx,al
  43df8a:	in     eax,0x27
  43df8c:	add    BYTE PTR [ecx-0x58fcc],cl
  43df92:	test   BYTE PTR [ebx-0x332c0100],0x83
  43df99:	lods   eax,DWORD PTR ds:[esi]
  43df9a:	jp     0x43df28
  43df9c:	(bad)  
  43df9d:	(bad)  
  43df9e:	mov    ebx,0x78ff3112
  43dfa3:	(bad)  
  43dfa4:	inc    DWORD PTR [eax]
  43dfa6:	gs mov edi,edi
  43dfa9:	pusha  
  43dfaa:	mov    eax,0xf2ff0095
  43dfaf:	cmp    ebx,DWORD PTR [edx-0x7d]
  43dfb2:	add    al,0x0
  43dfb4:	add    bh,bh
  43dfb6:	retf   0xffff
  43dfb9:	daa    
  43dfba:	push   esi
  43dfbb:	xchg   ebx,eax
  43dfbc:	(bad)  
  43dfbd:	dec    ebx
  43dfbf:	push   eax
  43dfc0:	push   ss
  43dfc1:	and    DWORD PTR [ebx],0xffffffcc
  43dfc4:	dec    esp
  43dfc6:	scas   eax,DWORD PTR es:[edi]
  43dfc7:	dec    DWORD PTR [ecx-0x76166cef]
  43dfcd:	inc    DWORD PTR [eax+0x6dff228b]
  43dfd3:	(bad)  
  43dfd4:	(bad)  
  43dfd5:	call   DWORD PTR [ecx+ecx*4]
  43dfd8:	add    ah,ch
  43dfda:	or     eax,0x2cffff7b
  43dfdf:	mov    ds:0xff56cc59,al
  43dfe4:	(bad)  
  43dfe5:	(bad)  
  43dfe6:	mov    ebp,0xed12ffcc
  43dfeb:	adc    eax,0x3f0d8300
  43dff0:	dec    esi
  43dff1:	add    BYTE PTR [esi-0x1],al
  43dff4:	dec    esp
  43dff6:	sahf   
  43dff7:	(bad)  
  43dff8:	(bad)  
  43dff9:	fisub  DWORD PTR [ebp-0x4f33ff7d]
  43dfff:	pxor   mm7,mm7
  43e002:	pop    es
  43e003:	inc    DWORD PTR [eax]
  43e005:	add    BYTE PTR [edi+edi*8-0x6bfffb00],bh
  43e00c:	(bad)  
  43e00d:	inc    esp
  43e00f:	sub    BYTE PTR [esi+0xff24cc],0xff
  43e016:	sub    BYTE PTR [eax],al
  43e018:	inc    DWORD PTR [ebp+esi*2+0x43]
  43e01c:	add    BYTE PTR [eax],al
  43e01e:	fs aaa 
  43e020:	adc    al,0x83
  43e022:	adc    al,BYTE PTR [eax]
  43e024:	(bad)  
  43e025:	push   DWORD PTR [ebx]
  43e027:	inc    DWORD PTR [eax]
  43e029:	sbb    eax,0xffffcb4a
  43e02e:	imul   ebp,DWORD PTR ds:0x90009a,0xffffffff
  43e035:	(bad)  
  43e036:	out    dx,al
  43e037:	dec    esp
  43e039:	cmp    bh,BYTE PTR [esi]
  43e03b:	outs   dx,DWORD PTR ds:[esi]
  43e03c:	(bad)  
  43e03d:	dec    DWORD PTR [esi+0x7200139a]
  43e043:	add    BYTE PTR [eax],al
  43e045:	(bad)  
  43e046:	call   0xd1f0e017
  43e04b:	xchg   edi,edi
  43e04d:	add    dh,ah
  43e04f:	dec    eax
  43e050:	adc    cl,ah
  43e052:	xchg   bh,bh
  43e054:	(bad)  
  43e055:	(bad)  
  43e056:	fld    QWORD PTR [eax]
  43e058:	add    BYTE PTR [ebx],dl
  43e05a:	sahf   
  43e05b:	loopne 0x43e029
  43e05d:	mov    DWORD PTR [ebx+0x69ffc256],esi
  43e063:	(bad)  
  43e064:	inc    DWORD PTR [ebx+0x79ffff1b]
  43e06a:	ds jp  0x43e06c
  43e06d:	or     ebx,0xfffffff4
  43e070:	data16 add ah,al
  43e073:	add    DWORD PTR [ebx+0x8986ff],0xffffffc2
  43e07a:	mov    ebx,0x4fff830f
  43e07f:	mov    al,ds:0x400e5
  43e084:	add    bh,bh
  43e086:	sar    edi,0xff
  43e089:	mov    eax,0x8383c49f
  43e08e:	mov    dh,0x1d
  43e090:	mov    DWORD PTR [eax],eax
  43e092:	or     esp,0xffffffff
  43e095:	push   DWORD PTR [eax+eax*1-0x77]
  43e099:	push   DWORD PTR [ebp+0x3c]
  43e09c:	dec    esp
  43e09e:	add    ebx,ecx
  43e0a0:	fdiv   st(7),st
  43e0a2:	jge    0x43e0a3
  43e0a4:	dec    esp
  43e0a6:	mov    ch,0x0
  43e0a8:	jmp    FWORD PTR [ecx]
  43e0aa:	or     al,0x8c
  43e0ac:	add    DWORD PTR [eax],0xffffffad
  43e0af:	jle    0x43e09f
  43e0b1:	add    al,bl
  43e0b3:	mov    edi,edi
  43e0b5:	push   DWORD PTR [edx-0x110dff01]
  43e0bb:	jmp    0x8988:0x5bfe8900
  43e0c2:	in     al,dx
  43e0c3:	int3   
  43e0c4:	add    BYTE PTR [eax],al
  43e0c6:	push   ds
  43e0c7:	mov    edi,edi
  43e0c9:	adc    eax,0xcc83236f
  43e0ce:	scas   eax,DWORD PTR es:[edi]
  43e0cf:	inc    ebp
  43e0d0:	jns    0x43e0d2
  43e0d2:	(bad)  
  43e0d4:	int3   
  43e0d5:	dec    DWORD PTR [eax+eax*1-0x39bdee34]
  43e0dc:	cmp    edi,0x25
  43e0df:	inc    edx
  43e0e0:	dec    edx
  43e0e1:	mov    ebx,esi
  43e0e3:	(bad)  
  43e0e4:	inc    DWORD PTR [eax]
  43e0e6:	xchg   DWORD PTR [eax],eax
  43e0e8:	add    dh,dl
  43e0ea:	jmp    0xf542e153
  43e0ef:	into   
  43e0f0:	xor    BYTE PTR [eax],al
  43e0f2:	int    0xff
  43e0f4:	add    bh,bh
  43e0f6:	adc    edi,edi
  43e0f8:	add    BYTE PTR [esi],bh
  43e0fa:	call   0xe843e0cf
  43e0ff:	cmp    ebp,esp
  43e101:	push   DWORD PTR [edi-0x1]
  43e104:	int3   
  43e105:	add    BYTE PTR [edi+0x35eeff00],dh
  43e10b:	add    al,0xff
  43e10d:	sbb    DWORD PTR [edx+0x30],0xffffff85
  43e111:	inc    DWORD PTR [ecx]
  43e113:	inc    DWORD PTR [ebx-0xff5300]
  43e119:	hlt    
  43e11a:	mov    bh,0x1
  43e11c:	(bad)  
  43e11d:	inc    DWORD PTR [edi+0x4bff9c39]
  43e123:	(bad)  
  43e124:	inc    DWORD PTR [ebx-0x62ffff8e]
  43e12a:	jg     0x43e120
  43e12c:	int3   
  43e12d:	dec    DWORD PTR [edx+0x1a]
  43e130:	mov    esp,ecx
  43e132:	(bad)  
  43e134:	inc    DWORD PTR [eax]
  43e136:	jmp    0xffd6:0x39da8900
  43e13d:	int3   
  43e13e:	push   0x54
  43e140:	jnp    0x43e0cb
  43e142:	leave  
  43e143:	add    BYTE PTR [eax],al
  43e145:	mov    DWORD PTR [edi+0x0],edx
  43e148:	add    bl,al
  43e14a:	pop    ecx
  43e14b:	iret   
  43e14c:	int3   
  43e14d:	call   esp
  43e14f:	adc    al,0x3
  43e151:	push   DWORD PTR [ecx]
  43e153:	add    BYTE PTR [ebx-0x7c001101],al
  43e159:	inc    esi
  43e15a:	mov    esp,0x8dffff2d
  43e15f:	icebp  
  43e160:	cmp    edi,0xffffffd1
  43e163:	(bad)  
  43e164:	inc    DWORD PTR [eax]
  43e166:	mov    eax,0xc51e00ff
  43e16b:	sub    DWORD PTR [eax],eax
  43e16d:	add    BYTE PTR [ecx],ch
  43e16f:	inc    eax
  43e170:	xchg   edi,eax
  43e171:	jmp    DWORD PTR [edi+edi*8-0x1]
  43e175:	(bad)  
  43e176:	out    dx,al
  43e177:	inc    DWORD PTR [eax]
  43e179:	xlat   BYTE PTR ds:[ebx]
  43e17a:	mov    al,0x30
  43e17c:	int3   
  43e17d:	int3   
  43e17e:	sti    
  43e17f:	imul   ecx,DWORD PTR [ebp+0x0],0x83ff8997
  43e186:	sldt   WORD PTR [ebx-0x2c4de0]
  43e18d:	jmp    DWORD PTR [ebp*1+0x98ff0f]
  43e194:	(bad)  
  43e195:	call   edi
  43e197:	inc    DWORD PTR [ebx-0x7cc7582b]
  43e19d:	jmp    FWORD PTR [ebx-0x50001462]
  43e1a3:	int3   
  43e1a4:	(bad)  
  43e1a5:	dec    DWORD PTR [edi+0x0]
  43e1a8:	int3   
  43e1a9:	nop
  43e1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e1ab:	lods   eax,DWORD PTR ds:[esi]
  43e1ac:	add    BYTE PTR [eax],al
  43e1ae:	jns    0x43e169
  43e1b0:	mov    ds:0x8928ff,eax
  43e1b5:	dec    DWORD PTR [ecx+0x0]
  43e1b8:	(bad)  
  43e1b9:	cli    
  43e1ba:	scas   eax,DWORD PTR es:[edi]
  43e1bb:	sar    bh,cl
  43e1bd:	xor    DWORD PTR ds:0xbb00bce0,0xffffffff
  43e1c4:	(bad)  
  43e1c5:	inc    DWORD PTR [ebx-0x69d0ff01]
  43e1cb:	adc    DWORD PTR [eax],eax
  43e1cd:	(bad)  
  43e1ce:	cmp    al,0x34
  43e1d0:	iret   
  43e1d1:	add    BYTE PTR [edx-0x7d],bl
  43e1d4:	int3   
  43e1d5:	jmp    DWORD PTR [ebx-0x5572767d]
  43e1db:	add    al,0xff
  43e1dd:	add    BYTE PTR [edi-0x7f],bl
  43e1e0:	js     0x43e1e1
  43e1e2:	test   DWORD PTR [eax],eax
  43e1e4:	(bad)  
  43e1e5:	jmp    DWORD PTR [esi-0x1]
  43e1e8:	inc    DWORD PTR [eax+eiz*4-0x1e]
  43e1ec:	add    BYTE PTR [eax],al
  43e1ee:	(bad)  [esi-0x76dbff90]
  43e1f4:	int3   
  43e1f5:	call   FWORD PTR [ebp+0x0]
  43e1f8:	mov    eax,ecx
  43e1fa:	sti    
  43e1fb:	fdivr  st,st(7)
  43e1fd:	jmp    DWORD PTR [ebp-0x77]
  43e200:	mov    es,WORD PTR [ebx-0x5b]
  43e206:	data16 (bad) 
  43e208:	call   DWORD PTR [edx]
  43e20a:	adc    dh,ch
  43e20c:	cmp    edi,0x6c
  43e20f:	dec    esp
  43e210:	cmp    edi,0xffffffb4
  43e213:	add    BYTE PTR [ecx+0x898500],cl
  43e219:	adc    dh,ah
  43e21b:	clc    
  43e21c:	inc    DWORD PTR [eax]
  43e21e:	xchg   esp,eax
  43e21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e220:	or     eax,DWORD PTR [eax]
  43e222:	stos   BYTE PTR es:[edi],al
  43e223:	(bad)  
  43e224:	(bad)  
  43e225:	(bad)  
  43e226:	out    dx,eax
  43e227:	(bad)  
  43e228:	inc    DWORD PTR [ecx]
  43e22a:	or     BYTE PTR [ebx-0x6b6a0001],al
  43e230:	sub    cl,ah
  43e232:	scas   al,BYTE PTR es:[edi]
  43e233:	add    bh,bh
  43e235:	add    BYTE PTR [edx],bl
  43e237:	inc    DWORD PTR [ebx-0xf4cdbd]
  43e23d:	(bad)  
  43e23e:	inc    dh
  43e240:	and    edi,edi
  43e242:	(bad)  
  43e244:	add    bh,bh
  43e246:	jmp    0x43e248
  43e248:	or     ebx,0x4
  43e24b:	loopne 0x43e1d6
  43e24d:	add    dh,ch
  43e24f:	lock add BYTE PTR gs:[ebp-0x1],al
  43e254:	add    BYTE PTR [eax],al
  43e256:	enter  0xff,0x98
  43e25a:	mov    ch,dh
  43e25c:	add    BYTE PTR [eax],al
  43e25e:	push   cs
  43e25f:	aas    
  43e260:	and    ecx,esp
  43e262:	sbb    bh,bh
  43e264:	cmp    edi,0xffffffef
  43e267:	add    BYTE PTR [eax],al
  43e269:	or     BYTE PTR [esi-0x1b],dh
  43e26c:	(bad)  
  43e26d:	(bad)  
  43e26e:	jmp    0x0:0x2fff00d8
  43e275:	(bad)  
  43e276:	call   0x7e38e247
  43e27b:	dec    edx
  43e27c:	dec    esp
  43e27e:	dec    edx
  43e27f:	div    BYTE PTR [esi-0x1]
  43e282:	inc    ebp
  43e283:	inc    DWORD PTR [eax]
  43e285:	add    BYTE PTR [esi+0x0],bl
  43e288:	int3   
  43e289:	aad    0xff
  43e28b:	push   ss
  43e28c:	inc    DWORD PTR [eax]
  43e28e:	aaa    
  43e28f:	mov    DWORD PTR [ebx-0x3376e101],edi
  43e295:	mov    DWORD PTR [ebp+0x0],esp
  43e298:	push   DWORD PTR [edx+ecx*1+0x7b]
  43e29c:	add    bh,bh
  43e29e:	popa   
  43e29f:	sub    esi,ebp
  43e2a1:	add    BYTE PTR [eax-0x7d],dl
  43e2a4:	(bad)  
  43e2a5:	jmp    FWORD PTR [edi+0x0]
  43e2a8:	add    BYTE PTR [ebx+0x60],ch
  43e2ab:	out    dx,eax
  43e2ac:	add    BYTE PTR [eax],al
  43e2ae:	int    0x57
  43e2b0:	dec    ebx
  43e2b1:	int3   
  43e2b2:	mov    al,0xff
  43e2b4:	inc    DWORD PTR [ebx-0x260033c7]
  43e2ba:	xor    al,bh
  43e2bc:	add    BYTE PTR [ecx-0x4ef3dc],cl
  43e2c2:	jecxz  0x43e2c3
  43e2c4:	add    bh,bh
  43e2c6:	dec    edi
  43e2c7:	add    bh,bh
  43e2c9:	jae    0x43e274
  43e2cb:	sar    bh,0xcc
  43e2ce:	mov    ebx,gs
  43e2d0:	test   eax,0xff835083
  43e2d5:	mov    eax,edi
  43e2d7:	(bad)  
  43e2d8:	push   ecx
  43e2da:	das    
  43e2db:	inc    edi
  43e2dc:	(bad)  
  43e2dd:	(bad)  
  43e2de:	cmp    al,0x16
  43e2e0:	or     DWORD PTR [eax],eax
  43e2e2:	lahf   
  43e2e3:	mov    edi,edi
  43e2e5:	adc    eax,0xffffffff
  43e2e8:	add    ch,bl
  43e2ea:	add    DWORD PTR [ebp-0x3eea0100],ebp
  43e2f0:	push   edx
  43e2f1:	add    BYTE PTR [esp+ecx*8-0x7644ff01],ch
  43e2f8:	add    dh,ch
  43e2fa:	adc    dh,cl
  43e2fc:	int3   
  43e2fd:	and    edx,0xffffffbf
  43e300:	pusha  
  43e301:	add    BYTE PTR [eax],bh
  43e303:	inc    DWORD PTR [eax]
  43e305:	inc    DWORD PTR [eax-0x1]
  43e308:	adc    DWORD PTR [eax-0x762ca4],0x1f
  43e30f:	out    dx,al
  43e310:	xchg   esp,eax
  43e311:	jmp    DWORD PTR [edi+edi*8]
  43e314:	add    bh,bh
  43e316:	in     al,dx
  43e317:	or     esp,0x23
  43e31a:	test   DWORD PTR [ebx],esp
  43e31c:	(bad)  
  43e31d:	jmp    esp
  43e31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e320:	retf   
  43e321:	dec    ebx
  43e323:	inc    DWORD PTR [ebx-0x7c2877]
  43e329:	dec    ebp
  43e32a:	sar    bh,cl
  43e32c:	inc    DWORD PTR [ebx-0x33fa993d]
  43e332:	fcmovne st,st(4)
  43e334:	add    BYTE PTR [eax],al
  43e336:	leave  
  43e337:	add    BYTE PTR [ebx-0x9fc3e4],al
  43e33d:	(bad)  
  43e33e:	cmp    dl,ah
  43e340:	add    DWORD PTR [ebx-0x7cff00b2],0xbbcc0058
  43e34a:	or     DWORD PTR [bx+di+0x4e83],0x67
  43e350:	mov    eax,ds:0xff0027ff
  43e355:	push   DWORD PTR [ecx+ecx*4]
  43e358:	(bad)  
  43e359:	cmp    eax,0xcc19e9
  43e35e:	dec    eax
  43e35f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e360:	std    
  43e361:	add    BYTE PTR [edi],ch
  43e363:	(bad)  
  43e364:	inc    DWORD PTR [ebx-0x5700fff6]
  43e36a:	jbe    0x43e34b
  43e36c:	or     esp,0x65
  43e36f:	lahf   
  43e370:	mov    bh,0xff
  43e372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e373:	(bad)  
  43e374:	inc    DWORD PTR [eax]
  43e376:	mov    ah,0xff
  43e378:	call   FWORD PTR [ebp+0x2e]
  43e37b:	aam    0xff
  43e37d:	mov    DWORD PTR [edi+eax*1-0x80],edi
  43e381:	adc    DWORD PTR [edx],0xffffffff
  43e384:	int3   
  43e385:	add    BYTE PTR [ebx-0x41e47c01],al
  43e38b:	pop    esi
  43e38c:	add    DWORD PTR [eax],0x64
  43e38f:	imul   edx,DWORD PTR [esi],0x0
  43e392:	push   cs
  43e393:	or     esp,0x0
  43e396:	push   edi
  43e397:	(bad)  
  43e398:	inc    ebp
  43e39a:	sbb    dl,BYTE PTR [ecx-0x77]
  43e39d:	add    eax,0xffffffb5
  43e3a0:	adc    eax,0xffffbf83
  43e3a5:	add    al,cl
  43e3a7:	add    bh,bh
  43e3a9:	leave  
  43e3aa:	or     edi,DWORD PTR [ebx+0x0]
  43e3ad:	inc    edx
  43e3af:	mov    ss,WORD PTR [edx+0x0]
  43e3b2:	stos   DWORD PTR es:[edi],eax
  43e3b3:	add    BYTE PTR [ebx-0x3333187d],al
  43e3b9:	push   esp
  43e3ba:	add    esi,DWORD PTR [edi+edi*8]
  43e3bd:	adc    ebp,0x0
  43e3c0:	mov    ds:0xffff00,eax
  43e3c5:	add    bh,al
  43e3c7:	(bad)  
  43e3c8:	call   DWORD PTR [ecx-0x7c7c284a]
  43e3ce:	xlat   BYTE PTR ds:[ebx]
  43e3cf:	jo     0x43e382
  43e3d1:	call   DWORD PTR [ebp-0x1]
  43e3d4:	(bad)  
  43e3d5:	inc    DWORD PTR [edx]
  43e3d7:	inc    DWORD PTR [ebx+0x8a9c86]
  43e3dd:	jmp    DWORD PTR [ebx+0x2affeef3]
  43e3e3:	(bad)  
  43e3e4:	inc    DWORD PTR [ebx+0x27000056]
  43e3ea:	xor    bl,BYTE PTR [eax]
  43e3ec:	inc    DWORD PTR [eax]
  43e3ee:	mov    ebx,0xe8fff12a
  43e3f3:	or     DWORD PTR [ecx-0xffe001],0x20
  43e3fa:	pop    esp
  43e3fb:	or     edi,edi
  43e3fd:	add    DWORD PTR [edx-0x38],0xfffffffb
  43e401:	jmp    DWORD PTR [ebx+0x4000ffff]
  43e407:	add    BYTE PTR [eax],al
  43e409:	lods   eax,DWORD PTR ds:[esi]
  43e40a:	xchg   edx,eax
  43e40b:	jmp    0x79:0x7a6fff00
  43e412:	pop    DWORD PTR [eax]
  43e414:	add    bh,bh
  43e416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e417:	int3   
  43e418:	add    BYTE PTR [esi+0xff197a],dl
  43e41e:	mov    dh,0xf2
  43e420:	jnp    0x43e3a5
  43e422:	ins    BYTE PTR es:[edi],dx
  43e423:	int3   
  43e424:	add    bh,bh
  43e426:	std    
  43e427:	int3   
  43e428:	add    BYTE PTR [ebx+0xffc684],al
  43e42e:	pop    es
  43e42f:	jmp    0x43e48f
  43e431:	add    BYTE PTR [ebp-0x1],bh
  43e434:	int3   
  43e435:	mov    DWORD PTR [ebp+0x37ee00ff],edx
  43e43b:	xchg   ebx,eax
  43e43c:	(bad)  
  43e43d:	dec    DWORD PTR [edx]
  43e43f:	inc    eax
  43e440:	ins    BYTE PTR es:[edi],dx
  43e441:	inc    DWORD PTR [eax+0x32ff8383]
  43e447:	inc    DWORD PTR [eax]
  43e449:	mov    ah,0x1c
  43e44b:	adc    al,0xff
  43e44d:	push   DWORD PTR [ebp-0x5900a2c6]
  43e453:	(bad)  
  43e454:	(bad)  
  43e455:	dec    DWORD PTR [esi]
  43e457:	add    bh,bh
  43e459:	or     al,0xdd
  43e45b:	adc    al,0x0
  43e45d:	add    cl,ch
  43e45f:	inc    esp
  43e460:	mov    edi,edi
  43e462:	and    edi,edi
  43e464:	add    DWORD PTR [eax],0xffffff98
  43e467:	or     DWORD PTR [ecx-0x4c21fe],0xffffff83
  43e46e:	sar    ch,cl
  43e470:	out    0xff,eax
  43e472:	out    0x0,eax
  43e474:	add    BYTE PTR [eax],al
  43e476:	pop    ebx
  43e477:	int3   
  43e478:	jmp    FWORD PTR [eax]
  43e47a:	cwde   
  43e47b:	dec    ecx
  43e47c:	add    BYTE PTR [ebx-0xff5c44],al
  43e482:	jno    0x43e484
  43e484:	dec    DWORD PTR [ecx+0x30ff0055]
  43e48a:	repz jg 0x43e410
  43e48d:	call   FWORD PTR [edi-0x3e000b67]
  43e493:	inc    DWORD PTR [eax]
  43e495:	add    al,bl
  43e497:	inc    DWORD PTR [eax]
  43e499:	aas    
  43e49a:	jge    0x43e45a
  43e49c:	inc    DWORD PTR [eax]
  43e49e:	mov    bl,0x5e
  43e4a0:	and    DWORD PTR fs:[eax-0x7d],0xffffffcc
  43e4a5:	cmp    DWORD PTR [esi-0x7d],0x0
  43e4a9:	xchg   BYTE PTR [ecx-0x16],bl
  43e4ac:	(bad)  
  43e4ad:	inc    DWORD PTR [ebp-0x27]
  43e4b0:	push   eax
  43e4b1:	sub    DWORD PTR [ebp-0x1433ff01],0xffffffff
  43e4b8:	jmp    DWORD PTR [ebx-0x25]
  43e4bb:	ret    0xff89
  43e4be:	cmp    ch,BYTE PTR [edx]
  43e4c0:	(bad)  
  43e4c1:	push   DWORD PTR [edx+0x9ff00ff]
  43e4c7:	int3   
  43e4c8:	dec    DWORD PTR [eax]
  43e4ca:	leave  
  43e4cb:	(bad)  
  43e4cc:	int3   
  43e4cd:	mov    DWORD PTR [edi-0x6b7cd30b],esp
  43e4d3:	(bad)  
  43e4d4:	(bad)  
  43e4d5:	(bad)  
  43e4d6:	mov    esi,0xdc4d0000
  43e4db:	fadd   QWORD PTR [eax]
  43e4dd:	(bad)  
  43e4de:	cmp    dh,BYTE PTR [edx-0x5d]
  43e4e1:	sbb    DWORD PTR [ecx],0xffffffcc
  43e4e4:	add    BYTE PTR [ecx-0x3600ffc4],cl
  43e4ea:	pop    eax
  43e4eb:	mov    cl,0xff
  43e4ed:	mov    ecx,ebx
  43e4ef:	push   edi
  43e4f0:	mov    al,0xff
  43e4f2:	xchg   esi,eax
  43e4f3:	inc    DWORD PTR [ebx-0x7600a701]
  43e4f9:	pop    ecx
  43e4fa:	cld    
  43e4fb:	mov    edx,0x6c920000
  43e500:	dec    eax
  43e501:	(bad)  
  43e502:	cmp    DWORD PTR [eax],eax
  43e504:	add    bh,bh
  43e506:	ins    DWORD PTR es:[edi],dx
  43e507:	cmp    edi,0x40
  43e50a:	mov    ebp,0x8bcccc81
  43e50f:	push   ecx
  43e510:	in     al,dx
  43e511:	push   DWORD PTR [eax]
  43e513:	add    BYTE PTR [ecx-0x7c2400],cl
  43e519:	lds    edi,FWORD PTR [ebx+0x1e]
  43e51c:	add    BYTE PTR [ebx-0x3b664d],al
  43e522:	sbb    al,BYTE PTR [ebx-0x473400]
  43e528:	jmp    FWORD PTR [ebp+0x83dc1e]
  43e52e:	lahf   
  43e52f:	jns    0x43e4d1
  43e531:	int3   
  43e532:	xor    bh,bh
  43e534:	add    BYTE PTR [eax],al
  43e536:	push   0xb276ffff
  43e53b:	(bad)  
  43e53c:	mov    DWORD PTR [eax],eax
  43e53e:	xor    DWORD PTR [edi-0x7ccaff8c],esi
  43e544:	dec    esp
  43e546:	fmul   DWORD PTR [ecx-0x12bfd277]
  43e54c:	add    BYTE PTR [eax],al
  43e54e:	fcom   QWORD PTR [ebx+edi*4-0x1]
  43e552:	inc    ecx
  43e553:	add    bh,bh
  43e555:	dec    DWORD PTR [ecx-0x34]
  43e558:	add    BYTE PTR [eax],al
  43e55a:	xchg   ebp,eax
  43e55b:	inc    BYTE PTR [ebx-0x386c4634]
  43e561:	jmp    ecx
  43e563:	dec    DWORD PTR [ecx-0x76ff4a00]
  43e569:	pop    ebp
  43e56a:	or     ecx,DWORD PTR [edx+0x5df300ff]
  43e570:	aas    
  43e571:	(bad)  
  43e572:	jle    0x43e573
  43e574:	(bad)  
  43e575:	jmp    DWORD PTR [ecx+0x6e15ffff]
  43e57b:	fs (bad) 
  43e57d:	call   DWORD PTR [edx-0x36]
  43e580:	cmp    edi,0x11
  43e583:	dec    DWORD PTR [ecx-0x7c5701]
  43e589:	or     ebp,0xa6ff898a
  43e58f:	(bad)  
  43e590:	stc    
  43e591:	mov    DWORD PTR [edx-0x1],ebx
  43e594:	add    BYTE PTR [eax],al
  43e596:	push   0xffffffcc
  43e598:	call   DWORD PTR [ebx]
  43e59a:	mov    di,0x83
  43e59e:	gs mov ch,0x46
  43e5a1:	int3   
  43e5a2:	xchg   ebp,eax
  43e5a3:	dec    esp
  43e5a5:	add    BYTE PTR [edi-0x2eca7c01],cl
  43e5ab:	fadd   QWORD PTR [eax]
  43e5ad:	jmp    ebx
  43e5af:	push   ecx
  43e5b0:	call   0x10c038
  43e5b5:	add    BYTE PTR [ecx+0x5da1ff00],ch
  43e5bb:	xchg   esi,eax
  43e5bc:	add    BYTE PTR [eax],al
  43e5be:	das    
  43e5bf:	fimul  WORD PTR [edx]
  43e5c1:	add    DWORD PTR [esi+0x2affff83],0xffffff89
  43e5c8:	add    ch,al
  43e5ca:	sub    cl,BYTE PTR [edi-0x24620077]
  43e5d0:	stos   DWORD PTR es:[edi],eax
  43e5d1:	dec    DWORD PTR [edi+edi*8-0x1]
  43e5d5:	int3   
  43e5d6:	jl     0x43e55b
  43e5d8:	adc    DWORD PTR [ebp-0x334e77],0xffffffa8
  43e5df:	jnp    0x43e58e
  43e5e1:	dec    DWORD PTR [ecx]
  43e5e3:	inc    DWORD PTR [ebx+0x32ff]
  43e5e9:	test   BYTE PTR [ecx+0x4883ff33],bl
  43e5ef:	mov    ecx,eax
  43e5f1:	add    BYTE PTR [eax],bl
  43e5f3:	(bad)  
  43e5f4:	(bad)  
  43e5f5:	(bad)  
  43e5f6:	(bad)  
  43e5f8:	jmp    eax
  43e5fa:	test   BYTE PTR [ebp+0x45c5ff00],bl
  43e600:	js     0x43e602
  43e602:	mov    es,WORD PTR [eax]
  43e604:	add    BYTE PTR [eax],al
  43e606:	aaa    
  43e607:	inc    DWORD PTR [eax]
  43e609:	inc    eax
  43e60a:	adc    edi,esi
  43e60c:	add    bh,bh
  43e60e:	fimul  WORD PTR [ecx-0x9e7c29]
  43e614:	add    BYTE PTR [eax],al
  43e616:	or     al,0xff
  43e618:	push   DWORD PTR [ebx+0xff4f15]
  43e61e:	data16 hlt 
  43e620:	mov    ch,0x0
  43e622:	pop    ebx
  43e623:	add    bh,bh
  43e625:	jmp    FWORD PTR [ebx]
  43e627:	add    bh,bh
  43e629:	xlat   BYTE PTR ds:[ebx]
  43e62a:	inc    edi
  43e62b:	je     0x43e62d
  43e62d:	dec    ecx
  43e62f:	mov    eax,0xff14fff2
  43e634:	add    BYTE PTR [ebx+0x78ffff39],al
  43e63a:	cmp    BYTE PTR [ecx],dl
  43e63c:	mov    edi,edi
  43e63e:	inc    ebx
  43e63f:	jmp    0x13ee684
  43e644:	or     esp,0x12
  43e647:	inc    DWORD PTR [eax]
  43e649:	test   BYTE PTR [eax-0x3dffff17],ah
  43e64f:	mov    ebx,esp
  43e651:	dec    DWORD PTR [edx+0x1cff0000]
  43e657:	add    DWORD PTR [eax],0x19
  43e65a:	call   0x3643e754
  43e65f:	mov    es,WORD PTR [ecx]
  43e661:	call   edi
  43e663:	add    BYTE PTR [eax],al
  43e665:	jmp    DWORD PTR [esi-0x66a37700]
  43e66b:	aaa    
  43e66c:	int3   
  43e66d:	(bad)  
  43e66e:	mov    ebx,0xd006f0c
  43e673:	inc    DWORD PTR [ebx-0x3333b934]
  43e679:	ds pusha 
  43e67b:	imul   edi,edi,0xc7a0b000
  43e681:	call   FWORD PTR [esi+0x1008900]
  43e687:	dec    esp
  43e689:	not    BYTE PTR [edi+0x40]
  43e68c:	mov    edi,edi
  43e68e:	les    edi,FWORD PTR [edx]
  43e690:	in     al,0xff
  43e692:	stos   DWORD PTR es:[edi],eax
  43e693:	add    BYTE PTR [eax],al
  43e695:	mov    edx,ebx
  43e697:	or     esp,0xffffffdb
  43e69a:	push   esi
  43e69b:	arpl   WORD PTR [ebx+0x61889100],ax
  43e6a1:	call   esi
  43e6a3:	dec    DWORD PTR [ecx-0x7c006377]
  43e6a9:	xchg   DWORD PTR [edi],ebp
  43e6ab:	imul   eax,DWORD PTR [eax],0xb95e59ff
  43e6b1:	(bad)  
  43e6b2:	jg     0x43e637
  43e6b4:	add    BYTE PTR [ecx-0x75ff006c],cl
  43e6ba:	add    eax,0xad0000d6
  43e6bf:	xchg   bl,ah
  43e6c1:	jmp    DWORD PTR [edi+edi*8+0x0]
  43e6c5:	jmp    ebp
  43e6c7:	mov    edi,edi
  43e6c9:	popf   
  43e6ca:	stos   BYTE PTR es:[edi],al
  43e6cb:	repz add BYTE PTR [ebx-0x7c67ac29],al
  43e6d2:	xchg   DWORD PTR [eax],eax
  43e6d4:	(bad)  
  43e6d5:	inc    DWORD PTR [ecx+0x0]
  43e6d8:	add    BYTE PTR [ecx-0x61],ch
  43e6db:	loopne 0x43e6a9
  43e6dd:	add    bh,ch
  43e6df:	add    dl,ch
  43e6e1:	and    ecx,0xffffffff
  43e6e4:	int3   
  43e6e5:	add    BYTE PTR [edi+edi*8+0x761dd8ff],bl
  43e6ec:	inc    DWORD PTR [ebx-0x95a4ef]
  43e6f2:	xchg   esi,eax
  43e6f3:	inc    DWORD PTR [ebx-0x7c00d900]
  43e6f9:	push   DWORD PTR [ebp-0x3c000099]
  43e6ff:	mov    al,0xc5
  43e701:	and    DWORD PTR [edi],0xffffffff
  43e704:	(bad)  
  43e705:	dec    eax
  43e707:	inc    DWORD PTR [ebx-0x33b6aba8]
  43e70d:	sbb    DWORD PTR [eax-0x7c76ccf0],0xffffffff
  43e714:	add    BYTE PTR [eax],al
  43e716:	int3   
  43e717:	add    bh,bh
  43e719:	xchg   esp,eax
  43e71a:	dec    edi
  43e71b:	jl     0x43e71d
  43e71d:	call   FWORD PTR [ecx+0x5c007d7e]
  43e723:	inc    DWORD PTR [ebx-0x6734]
  43e729:	cmp    ch,BYTE PTR [ecx]
  43e72b:	sub    eax,0xee6700ff
  43e730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e731:	dec    DWORD PTR [ecx]
  43e733:	cmp    edi,0xffffff83
  43e736:	inc    DWORD PTR gs:[eax]
  43e739:	imul   ebp,ebp,0x7889ff91
  43e73f:	outs   dx,DWORD PTR ds:[esi]
  43e740:	jg     0x43e6cb
  43e742:	cwde   
  43e743:	(bad)  
  43e744:	(bad)  
  43e745:	call   DWORD PTR [eax+0x41f200ff]
  43e74b:	lock (bad) 
  43e74d:	(bad)  
  43e74e:	cmp    eax,0x9e009697
  43e753:	add    BYTE PTR [ecx-0xff1f01],cl
  43e759:	and    esi,DWORD PTR [edi+esi*8-0x20860100]
  43e760:	leave  
  43e761:	int3   
  43e762:	mov    edx,0xfccccc00
  43e767:	add    bh,bh
  43e769:	mov    ecx,0x83ff2bff
  43e76e:	jmp    0xccff:0xc1ff21a4
  43e775:	add    BYTE PTR [ecx-0x1],cl
  43e778:	add    BYTE PTR [ecx],cl
  43e77a:	cmp    eax,DWORD PTR [edi-0x1]
  43e77d:	jmp    DWORD PTR [eax-0x15]
  43e780:	pusha  
  43e781:	push   DWORD PTR [edx+0x0]
  43e784:	add    BYTE PTR [ecx-0x4000765c],cl
  43e78a:	sub    eax,0xf6ff0039
  43e78f:	js     0x43e7f7
  43e791:	or     DWORD PTR [ecx+0x58cc00ff],0x0
  43e798:	add    BYTE PTR [ecx-0x5f],al
  43e79b:	jmp    0x78546b9f
  43e7a0:	mov    esp,0x89bdff
  43e7a5:	call   ecx
  43e7a7:	mov    DWORD PTR [eax],eax
  43e7a9:	dec    edx
  43e7aa:	push   es
  43e7ab:	out    0xff,al
  43e7ad:	sbb    DWORD PTR [edi],0x49
  43e7b0:	and    eax,0xb289
  43e7b5:	dec    eax
  43e7b7:	inc    DWORD PTR [eax]
  43e7b9:	mov    ebx,DWORD PTR [ebx-0xd337cee]
  43e7bf:	pop    ss
  43e7c0:	adc    eax,DWORD PTR [eax]
  43e7c2:	xor    al,BYTE PTR [eax]
  43e7c4:	dec    esp
  43e7c6:	ss (bad) 
  43e7c8:	push   DWORD PTR [ebp+0x2]
  43e7cb:	sbb    eax,DWORD PTR [eax]
  43e7cd:	mov    DWORD PTR [ecx+0x18839ed5],eax
  43e7d3:	mov    DWORD PTR [eax],eax
  43e7d5:	(bad)  
  43e7d6:	inc    BYTE PTR [eax]
  43e7d8:	add    BYTE PTR [ecx],dl
  43e7da:	push   0xffffff9b
  43e7dc:	int3   
  43e7dd:	add    BYTE PTR [ecx+0x2b],ch
  43e7e0:	push   edi
  43e7e1:	or     DWORD PTR [edi+0x0],0xffffffff
  43e7e5:	dec    ebp
  43e7e7:	inc    DWORD PTR [eax]
  43e7e9:	jbe    0x43e7fd
  43e7eb:	in     eax,dx
  43e7ec:	add    bh,bh
  43e7ee:	xor    DWORD PTR [ebx+0x2b],esi
  43e7f1:	xor    edi,0x0
  43e7f4:	add    bh,bh
  43e7f6:	mov    dl,0xff
  43e7f8:	add    BYTE PTR [edi+0x3e],bh
  43e7fb:	(bad)  
  43e7fc:	(bad)  
  43e7fd:	dec    DWORD PTR [ecx]
  43e7ff:	sbb    DWORD PTR [edi+edi*8],edi
  43e802:	xlat   BYTE PTR ds:[ebx]
  43e803:	mov    DWORD PTR [ebx-0xff7a01],eax
  43e809:	icebp  
  43e80a:	push   edx
  43e80b:	mov    DWORD PTR [eax],eax
  43e80d:	int3   
  43e80e:	int    0x4a
  43e810:	(bad)  
  43e811:	inc    DWORD PTR [esi]
  43e813:	(bad)  
  43e814:	inc    DWORD PTR [eax]
  43e816:	out    dx,eax
  43e817:	add    BYTE PTR [eax],al
  43e819:	lock pop esi
  43e81b:	cli    
  43e81c:	add    bh,bh
  43e81e:	pop    edx
  43e81f:	add    eax,0x8355ffb4
  43e824:	add    BYTE PTR [ecx-0x6f00761d],cl
  43e82a:	jbe    0x43e842
  43e82c:	add    BYTE PTR [eax],al
  43e82e:	(bad)  
  43e82f:	jmp    0x43e834
  43e831:	add    dl,dl
  43e833:	inc    DWORD PTR [ebx+0xff7083]
  43e839:	adc    dh,BYTE PTR [ecx]
  43e83b:	sbb    eax,0xcbc7ffff
  43e840:	cmp    edi,0xff0000e8
  43e846:	into   
  43e847:	add    ah,cl
  43e849:	aam    0xe5
  43e84b:	pop    es
  43e84c:	add    bh,bh
  43e84e:	jl     0x43e7ee
  43e850:	adc    edi,edi
  43e852:	stc    
  43e853:	add    BYTE PTR [eax],al
  43e855:	or     DWORD PTR [edi-0x1],0xffffffcc
  43e859:	adc    eax,DWORD PTR [ebx]
  43e85b:	out    dx,al
  43e85c:	add    bh,bh
  43e85e:	das    
  43e85f:	pop    es
  43e860:	mov    esi,0x838310ff
  43e865:	inc    DWORD PTR [edi-0x1]
  43e868:	call   FWORD PTR [ecx-0x330065ad]
  43e86e:	pop    es
  43e86f:	stc    
  43e870:	call   0x7500:0xff006dff
  43e877:	add    bh,bh
  43e879:	leave  
  43e87a:	sbb    edx,DWORD PTR [ecx-0x3b8c0001]
  43e880:	mov    eax,ds:0xffff5089
  43e885:	add    BYTE PTR [esi],al
  43e887:	(bad)  
  43e888:	jmp    FWORD PTR [ebx]
  43e88a:	cdq    
  43e88b:	dec    eax
  43e88c:	add    DWORD PTR [eax],0xffffffee
  43e88f:	lock or DWORD PTR [ebx+0xffdf],eax
  43e896:	inc    DWORD PTR fs:[eax]
  43e899:	mov    dl,0x8
  43e89b:	mov    bh,bh
  43e89d:	(bad)  
  43e89e:	cld    
  43e89f:	xchg   bh,cl
  43e8a1:	cmp    DWORD PTR [ecx-0x7876ff7d],0xffffffcc
  43e8a8:	int3   
  43e8a9:	sub    DWORD PTR [esi+0x56ff00ad],ebp
  43e8af:	push   ds
  43e8b0:	jb     0x43e835
  43e8b2:	mov    BYTE PTR [eax],al
  43e8b4:	add    DWORD PTR [eax],0x64
  43e8b7:	add    bh,bh
  43e8b9:	xchg   edx,eax
  43e8ba:	pop    ecx
  43e8bb:	lods   eax,DWORD PTR ds:[esi]
  43e8bc:	inc    DWORD PTR [eax]
  43e8be:	ret    
  43e8bf:	mov    dl,0x8d
  43e8c1:	int3   
  43e8c2:	ds add ah,cl
  43e8c5:	add    BYTE PTR [eax-0x6aaeff77],cl
  43e8cb:	out    dx,eax
  43e8cc:	int3   
  43e8cd:	add    BYTE PTR [ecx+edi*2-0x9],cl
  43e8d1:	(bad)  
  43e8d2:	fld    QWORD PTR [eax]
  43e8d4:	or     DWORD PTR [ecx-0x107c0083],0xffffffe1
  43e8db:	xchg   esp,eax
  43e8dc:	dec    DWORD PTR [ecx-0x82cb30]
  43e8e2:	mov    dh,0xcc
  43e8e4:	int3   
  43e8e5:	dec    DWORD PTR [eax+eax*1]
  43e8e8:	sub    DWORD PTR [ecx],0xffffffb0
  43e8eb:	mov    bh,bh
  43e8ed:	sbb    DWORD PTR [ebp-0x22ffb18f],0xffffffcc
  43e8f4:	inc    DWORD PTR [eax]
  43e8f6:	push   0xffffffff
  43e8f8:	mov    ebp,esp
  43e8fa:	inc    eax
  43e8fb:	xor    BYTE PTR [ebx+0x367720ff],al
  43e901:	int3   
  43e902:	push   es
  43e903:	or     DWORD PTR [ecx-0x337ce834],0xffffffad
  43e90a:	retf   0xfffa
  43e90d:	add    dh,ch
  43e90f:	pop    ds
  43e910:	js     0x43e911
  43e912:	add    eax,DWORD PTR [eax]
  43e914:	add    BYTE PTR [eax],al
  43e916:	jo     0x43e917
  43e918:	add    BYTE PTR [esi+0xff85c5],cl
  43e91e:	sbb    edx,DWORD PTR [edi-0x2e]
  43e921:	push   DWORD PTR [ebx]
  43e923:	cmp    edi,0x0
  43e926:	lods   al,BYTE PTR ds:[esi]
  43e927:	int3   
  43e928:	(bad)  
  43e929:	cmp    ebx,eax
  43e92b:	xchg   esp,eax
  43e92c:	(bad)  
  43e92d:	jmp    ebp
  43e92f:	punpckhwd mm0,QWORD PTR [eax]
  43e932:	cld    
  43e933:	inc    DWORD PTR [eax]
  43e935:	int3   
  43e936:	cmp    di,0xffcd
  43e93a:	jg     0x43e95b
  43e93c:	inc    DWORD PTR [eax]
  43e93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e93f:	(bad)  
  43e940:	push   cs
  43e941:	and    DWORD PTR [edx+0x0],0xffffffff
  43e945:	call   FWORD PTR [esi]
  43e947:	(bad)  
  43e948:	(bad)  
  43e949:	fsub   DWORD PTR [ebx]
  43e94b:	rol    BYTE PTR [eax],cl
  43e94d:	(bad)  
  43e94e:	cmp    eax,0xe00090e
  43e953:	add    BYTE PTR [eax],al
  43e955:	mov    ebx,esp
  43e957:	add    DWORD PTR [eax],0x17
  43e95a:	das    
  43e95b:	ins    BYTE PTR es:[edi],dx
  43e95c:	cmp    edi,0x1c
  43e95f:	js     0x43e8f3
  43e961:	push   DWORD PTR [edi-0x77]
  43e964:	mov    edi,edi
  43e966:	sbb    cl,ah
  43e968:	mov    DWORD PTR [eax+ecx*4-0x5f],ebp
  43e96c:	(bad)  
  43e96d:	call   esi
  43e96f:	add    BYTE PTR [edi],cl
  43e971:	(bad)  
  43e972:	fadd   QWORD PTR [eax]
  43e974:	add    BYTE PTR [ecx+0x10cc005d],cl
  43e97a:	or     ch,BYTE PTR [eax]
  43e97c:	(bad)  
  43e97d:	inc    ecx
  43e97f:	hlt    
  43e980:	or     DWORD PTR [eax],eax
  43e982:	scas   al,BYTE PTR es:[edi]
  43e983:	(bad)  
  43e984:	(bad)  
  43e985:	push   DWORD PTR [ebx+eax*4-0x34]
  43e989:	and    al,0x2a
  43e98b:	or     BYTE PTR [eax],al
  43e98d:	int3   
  43e98e:	rcl    bl,cl
  43e990:	mov    eax,0xffffc583
  43e995:	push   DWORD PTR [esi-0x57040000]
  43e99b:	jb     0x43e969
  43e99d:	dec    DWORD PTR [esi+0x9]
  43e9a0:	xchg   ecx,eax
  43e9a1:	add    BYTE PTR [ebx-0x87c0001],dh
  43e9a7:	int3   
  43e9a8:	sbb    DWORD PTR [ebp+0xee5c],0x4c
  43e9af:	ror    BYTE PTR [ecx],0x89
  43e9b2:	cli    
  43e9b3:	add    BYTE PTR [eax],al
  43e9b5:	add    BYTE PTR [edi-0x34],dh
  43e9b8:	(bad)  
  43e9b9:	mov    ebx,0xff8324c3
  43e9be:	sub    eax,0xff4fff8e
  43e9c4:	inc    DWORD PTR [eax]
  43e9c6:	jae    0x43e9c8
  43e9c8:	add    cl,dl
  43e9ca:	cmp    esp,DWORD PTR [eax]
  43e9cc:	(bad)  
  43e9cd:	call   FWORD PTR [edx]
  43e9cf:	(bad)  
  43e9d0:	mov    ebx,0x83ff27ff
  43e9d5:	add    BYTE PTR [ebx+0x7bbc0089],cl
  43e9db:	iret   
  43e9dc:	inc    DWORD PTR [eax]
  43e9de:	jns    0x43ea27
  43e9e0:	mov    dl,0x0
  43e9e2:	mov    ah,0xff
  43e9e4:	add    bh,bh
  43e9e6:	arpl   WORD PTR [eax],ax
  43e9e8:	jmp    FWORD PTR [ebx+eiz*2+0x7583ff31]
  43e9ef:	pop    ds
  43e9f0:	mov    bl,0xcc
  43e9f2:	sub    edi,edi
  43e9f4:	add    bh,bh
  43e9f6:	rol    DWORD PTR [eax],1
  43e9f8:	push   DWORD PTR [ecx-0xe908]
  43e9fe:	pop    eax
  43e9ff:	sbb    dl,bh
  43ea01:	call   DWORD PTR [esi-0x3ff0100]
  43ea07:	add    bh,bh
  43ea09:	stc    
  43ea0a:	and    eax,DWORD PTR [edi]
  43ea0c:	add    BYTE PTR [ebx-0x81af96],al
  43ea12:	test   eax,0x8dcc00cc
  43ea17:	add    BYTE PTR [ecx-0x33ad2b1b],cl
  43ea1d:	int3   
  43ea1e:	adc    al,0x24
  43ea20:	out    0x89,eax
  43ea22:	fiadd  WORD PTR [ebx-0x762aff01]
  43ea28:	(bad)  
  43ea29:	clc    
  43ea2a:	retf   0xff3f
  43ea2d:	call   DWORD PTR [edi]
  43ea2f:	inc    edx
  43ea30:	inc    DWORD PTR cs:[ecx]
  43ea33:	add    DWORD PTR [eax],0xffffffff
  43ea36:	adc    eax,0x22ff00
  43ea3b:	mov    edi,0x37c4ff00
  43ea40:	jecxz  0x43ea41
  43ea42:	repz add bh,bh
  43ea45:	jmp    FWORD PTR [esi+0x52a50000]
  43ea4b:	cwde   
  43ea4c:	(bad)  
  43ea4d:	push   DWORD PTR [edi+edx*1+0x9283c0]
  43ea54:	add    bh,bh
  43ea56:	enter  0x0,0xfc
  43ea5a:	jmp    0xff43e9b3
  43ea5f:	div    BYTE PTR [ecx+ecx*4]
  43ea62:	aad    0x89
  43ea64:	(bad)  
  43ea65:	jmp    FWORD PTR [esp+ecx*8-0x7d]
  43ea69:	cmp    DWORD PTR [edi-0x517c0009],edx
  43ea6f:	adc    DWORD PTR [ebx-0xd201],ecx
  43ea75:	call   FWORD PTR [esi-0x7370ff01]
  43ea7b:	adc    al,BYTE PTR [eax]
  43ea7d:	call   ebx
  43ea7f:	ins    BYTE PTR es:[edi],dx
  43ea80:	dec    ecx
  43ea81:	(bad)  
  43ea82:	out    dx,eax
  43ea83:	int3   
  43ea84:	add    BYTE PTR [eax],al
  43ea86:	push   ecx
  43ea87:	or     DWORD PTR [ecx-0xa38d3e],0xffffff83
  43ea8e:	pop    edi
  43ea8f:	mov    eax,ds:0xff748936
  43ea94:	dec    esp
  43ea96:	in     al,dx
  43ea97:	add    BYTE PTR [eax],al
  43ea99:	cmp    edi,ebp
  43ea9b:	retf   
  43ea9c:	int3   
  43ea9d:	add    BYTE PTR [ebx-0x3200041f],al
  43eaa3:	add    bh,bh
  43eaa5:	add    cl,al
  43eaa7:	add    BYTE PTR [ebx+0xeffe3d],al
  43eaad:	int3   
  43eaae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eaaf:	sti    
  43eab0:	out    dx,al
  43eab1:	add    BYTE PTR [ebx-0x3f000001],ch
  43eab7:	int3   
  43eab8:	add    ah,bl
  43eaba:	test   ecx,eax
  43eabc:	add    BYTE PTR [eax],al
  43eabe:	push   0xadff7ddd
  43eac3:	(bad)  
  43eac4:	(bad)  
  43eac5:	push   DWORD PTR [esi]
  43eac7:	mov    esp,ecx
  43eac9:	das    
  43eaca:	add    edi,esp
  43eacc:	(bad)  
  43eacd:	push   edi
  43eacf:	mov    ds:0x83f8895c,eax
  43ead4:	add    BYTE PTR [eax],al
  43ead6:	cli    
  43ead7:	(bad)  
  43ead8:	jmp    FWORD PTR [esi]
  43eada:	mov    ch,0x89
  43eadc:	inc    DWORD PTR [eax]
  43eade:	xchg   esi,eax
  43eadf:	stos   DWORD PTR es:[edi],eax
  43eae0:	in     al,dx
  43eae1:	call   FWORD PTR [edi-0x1]
  43eae4:	add    BYTE PTR [ebx-0x11ffff2f],al
  43eaea:	aas    
  43eaeb:	xchg   esi,eax
  43eaec:	add    BYTE PTR [ebx+0x66b5d9],al
  43eaf2:	loope  0x43eaf3
  43eaf4:	add    bh,bh
  43eaf6:	push   edi
  43eaf7:	mov    DWORD PTR [ebx+0xbda922],eax
  43eafd:	add    BYTE PTR [edx+0x54ffe80c],al
  43eb03:	mov    edi,edi
  43eb05:	(bad)  
  43eb06:	out    dx,eax
  43eb07:	add    bh,bh
  43eb09:	ins    DWORD PTR es:[edi],dx
  43eb0a:	add    DWORD PTR [edi-0x7e57ff34],edi
  43eb10:	xchg   bh,bh
  43eb12:	fwait
  43eb13:	mov    edi,edi
  43eb15:	sbb    DWORD PTR [ebx],0x0
  43eb18:	(bad)  
  43eb19:	(bad)  [ebp+0x2ccffc4]
  43eb1f:	mov    ah,0x4b
  43eb21:	add    BYTE PTR [esi-0x77],dl
  43eb24:	dec    esp
  43eb26:	arpl   di,di
  43eb28:	add    BYTE PTR [ebx-0x19],al
  43eb2b:	xchg   bh,bh
  43eb2d:	sbb    ecx,0xffffffa0
  43eb30:	in     al,0xff
  43eb32:	and    eax,0x42ccff89
  43eb37:	(bad)  
  43eb38:	dec    DWORD PTR [ecx-0x48]
  43eb3b:	stc    
  43eb3c:	add    bh,bh
  43eb3e:	cwde   
  43eb3f:	and    al,0x1e
  43eb41:	call   FWORD PTR [ecx-0x3f007c34]
  43eb47:	dec    esp
  43eb49:	call   0xa6f7:0xff0015ca
  43eb50:	cli    
  43eb51:	add    cl,ah
  43eb53:	add    BYTE PTR [eax],al
  43eb55:	add    cl,bl
  43eb57:	int3   
  43eb58:	call   FWORD PTR [esi-0x2c]
  43eb5b:	in     al,0xff
  43eb5d:	add    BYTE PTR [esi+0x11000391],dh
  43eb63:	inc    DWORD PTR [eax]
  43eb65:	push   DWORD PTR [ebx+0x1dc1ccff]
  43eb6b:	adc    edi,edi
  43eb6d:	call   DWORD PTR [ebp-0x7076244f]
  43eb73:	(bad)  
  43eb74:	inc    DWORD PTR [ebx+0x2500ffd7]
  43eb7a:	push   0xffffff8a
  43eb7c:	inc    DWORD PTR [eax]
  43eb7e:	leave  
  43eb7f:	mov    WORD PTR [edi-0xffee34],gs
  43eb85:	add    ch,bl
  43eb87:	add    bh,bh
  43eb89:	repnz stos DWORD PTR es:[edi],eax
  43eb8b:	cmp    bh,0x83
  43eb8e:	lds    ebx,FWORD PTR [ecx-0x7c8b0033]
  43eb94:	add    bh,bh
  43eb96:	out    0xff,eax
  43eb98:	(bad)  
  43eb99:	jns    0x43eb43
  43eb9b:	ss mov edi,edi
  43eb9e:	shl    DWORD PTR [eax-0x7c6aff3d],0xcc
  43eba5:	call   DWORD PTR [ebp-0x34]
  43eba8:	adc    DWORD PTR [ebp+0x52],0x7
  43ebac:	add    bh,bh
  43ebae:	and    al,0xe8
  43ebb0:	push   edi
  43ebb1:	jmp    DWORD PTR [esi-0x7d]
  43ebb4:	add    BYTE PTR [ecx-0xff0079],cl
  43ebba:	add    ebx,DWORD PTR [esi-0x1]
  43ebbd:	jmp    edx
  43ebbf:	push   0x8c83ed
  43ebc4:	int3   
  43ebc5:	add    dl,al
  43ebc7:	int3   
  43ebc8:	(bad)  
  43ebc9:	fdiv   DWORD PTR [edi]
  43ebcb:	fdivp  st(7),st
  43ebcd:	add    BYTE PTR [esp-0x600037],dl
  43ebd4:	(bad)  
  43ebd5:	push   DWORD PTR [edi+edi*8+0x16ff0c00]
  43ebdc:	inc    DWORD PTR [eax]
  43ebde:	and    ebx,DWORD PTR [edi-0x2a]
  43ebe1:	add    cl,ch
  43ebe3:	add    DWORD PTR [eax],0xffffffff
  43ebe6:	ror    DWORD PTR [ecx-0x19b8ae00],0x89
  43ebed:	inc    DWORD PTR [ebp+eax*1-0x7c520036]
  43ebf4:	cmp    edi,0xc
  43ebf7:	inc    DWORD PTR [eax]
  43ebf9:	fist   WORD PTR [ebx+edi*2-0x34]
  43ebfd:	dec    DWORD PTR [eax+esi*1]
  43ec00:	adc    eax,0xffeb83
  43ec05:	mov    ebx,ecx
  43ec07:	add    BYTE PTR [eax],al
  43ec09:	dec    edi
  43ec0a:	and    al,0xd2
  43ec0c:	add    BYTE PTR [eax],al
  43ec0e:	ins    DWORD PTR es:[edi],dx
  43ec0f:	aas    
  43ec10:	mov    bl,0xff
  43ec12:	push   es
  43ec13:	int3   
  43ec14:	inc    DWORD PTR [eax]
  43ec16:	mov    eax,DWORD PTR [ebx-0x5e58c201]
  43ec1c:	(bad)  
  43ec1d:	jmp    FWORD PTR [ecx+0x77]
  43ec20:	out    dx,al
  43ec21:	jmp    DWORD PTR [ecx-0x7d]
  43ec24:	dec    DWORD PTR [ecx-0x437c3396]
  43ec2a:	cmp    DWORD PTR [edi-0x1],eax
  43ec2d:	sbb    DWORD PTR [ebp+0x2f00e2af],0x0
  43ec34:	(bad)  
  43ec35:	call   DWORD PTR [eax]
  43ec37:	(bad)  
  43ec38:	dec    DWORD PTR [edi]
  43ec3a:	mov    dl,BYTE PTR [ecx-0x1]
  43ec3d:	add    BYTE PTR [edx-0x54],ch
  43ec40:	dec    edi
  43ec41:	mov    DWORD PTR [eax+0x25830089],esi
  43ec47:	add    bh,bh
  43ec49:	inc    esp
  43ec4a:	dec    edi
  43ec4b:	(bad)  
  43ec4c:	int3   
  43ec4d:	call   DWORD PTR [ebp-0x6300c9a9]
  43ec53:	(bad)  
  43ec54:	inc    DWORD PTR [ebx-0x51000080]
  43ec5a:	imul   DWORD PTR [edx+0x3c6b89ff]
  43ec60:	lahf   
  43ec61:	add    BYTE PTR [ebx],bl
  43ec63:	(bad)  
  43ec64:	(bad)  
  43ec65:	jmp    FWORD PTR [esi-0x4521007d]
  43ec6b:	repnz inc DWORD PTR [eax]
  43ec6e:	fst    st(0)
  43ec70:	retf   0xe000
  43ec73:	inc    DWORD PTR [ebx+0x896800]
  43ec79:	stc    
  43ec7a:	int3   
  43ec7b:	xchg   edi,eax
  43ec7c:	cmp    edi,0x9
  43ec7f:	cmp    al,ch
  43ec81:	push   DWORD PTR ds:0x2fff8983
  43ec87:	dec    esp
  43ec89:	add    edi,eax
  43ec8b:	adc    al,0x83
  43ec8d:	(bad)  
  43ec8e:	mov    esi,0x96cc50fd
  43ec93:	(bad)  
  43ec94:	inc    DWORD PTR [eax]
  43ec96:	dec    eax
  43ec97:	(bad)  
  43ec98:	inc    DWORD PTR [eax]
  43ec9a:	mov    ah,0xad
  43ec9c:	inc    DWORD PTR [ebx-0x818800]
  43eca2:	sbb    eax,0xdb89ffff
  43eca7:	add    DWORD PTR [eax],0xffffff9b
  43ecaa:	or     al,0xfc
  43ecac:	add    bh,bh
  43ecae:	xchg   DWORD PTR [ecx+0x43],ecx
  43ecb1:	int3   
  43ecb2:	ins    BYTE PTR es:[edi],dx
  43ecb3:	int3   
  43ecb4:	inc    DWORD PTR [ebx-0x5100ffdd]
  43ecba:	sti    
  43ecbb:	dec    ebx
  43ecbc:	add    DWORD PTR [ebx-0x7c5af3df],0xffffffe1
  43ecc3:	(bad)  
  43ecc4:	(bad)  
  43ecc5:	(bad)  
  43ecc6:	jmp    0x11e570ca
  43eccb:	sbb    eax,0x6dd00089
  43ecd0:	sub    eax,0x83ff43ff
  43ecd5:	int3   
  43ecd6:	mov    bl,0xcc
  43ecd8:	call   DWORD PTR [esi]
  43ecda:	mov    edi,0x7d89ffd3
  43ecdf:	xchg   ecx,eax
  43ece0:	or     ah,0x3b
  43ece3:	mov    esp,ecx
  43ece5:	add    BYTE PTR [ebp+0x1b8583ff],cl
  43eceb:	mov    ebp,0xe5760000
  43ecf0:	add    bh,bh
  43ecf2:	cli    
  43ecf3:	(bad)  
  43ecf4:	(bad)  
  43ecf5:	(bad)  
  43ecf6:	mov    edi,0x4dcc89
  43ecfb:	bnd jbe 0x43ed6c
  43ecfe:	mov    bl,0x90
  43ed00:	inc    DWORD PTR [eax]
  43ed02:	inc    esi
  43ed03:	mov    DWORD PTR [eax],eax
  43ed05:	and    DWORD PTR [edx+0x0],0x0
  43ed09:	out    0x83,al
  43ed0b:	lock push edi
  43ed0d:	imul   DWORD PTR [eax]
  43ed0f:	rcl    BYTE PTR [ebp+0x56],cl
  43ed12:	push   0x17
  43ed14:	push   0x42
  43ed16:	call   DWORD PTR ds:0x44400c
  43ed1c:	push   0x0
  43ed1e:	push   0x0
  43ed20:	push   0x0
  43ed22:	mov    ebp,eax
  43ed24:	call   DWORD PTR ds:0x44402c
  43ed2a:	mov    eax,ds:0x447d00
  43ed2f:	mov    edx,DWORD PTR ds:0x447054
  43ed35:	add    eax,0x60
  43ed38:	mov    esi,0x26
  43ed3d:	push   edi
  43ed3e:	mov    edi,edi
  43ed40:	movzx  ecx,BYTE PTR [edx+0xa]
  43ed44:	movzx  edi,WORD PTR [edx+0x4]
  43ed48:	movzx  edx,BYTE PTR [edx]
  43ed4b:	shl    ecx,0x10
  43ed4e:	add    ecx,edi
  43ed50:	shl    ecx,0x8
  43ed53:	add    ecx,edx
  43ed55:	mov    DWORD PTR ds:0x447cf0,ecx
  43ed5b:	mov    edx,0xceedfc79
  43ed60:	sub    edx,DWORD PTR ds:0x447cfc
  43ed66:	xor    edx,ecx
  43ed68:	mov    DWORD PTR [eax],edx
  43ed6a:	mov    ecx,DWORD PTR ds:0x447054
  43ed70:	mov    ecx,DWORD PTR [ecx+0xc]
  43ed73:	mov    DWORD PTR ds:0x447cf0,ecx
  43ed79:	mov    edx,0xceedfc79
  43ed7e:	sub    edx,DWORD PTR ds:0x447cfc
  43ed84:	xor    edx,ecx
  43ed86:	mov    DWORD PTR [eax+0x4],edx
  43ed89:	mov    edx,DWORD PTR ds:0x447054
  43ed8f:	add    edx,0x10
  43ed92:	mov    DWORD PTR ds:0x447054,edx
  43ed98:	movzx  ecx,BYTE PTR [edx+0xa]
  43ed9c:	movzx  edi,WORD PTR [edx+0x4]
  43eda0:	movzx  edx,BYTE PTR [edx]
  43eda3:	shl    ecx,0x10
  43eda6:	add    ecx,edi
  43eda8:	shl    ecx,0x8
  43edab:	add    ecx,edx
  43edad:	mov    DWORD PTR ds:0x447cf0,ecx
  43edb3:	mov    edx,0xceedfc79
  43edb8:	sub    edx,DWORD PTR ds:0x447cfc
  43edbe:	xor    edx,ecx
  43edc0:	mov    DWORD PTR [eax+0x8],edx
  43edc3:	mov    ecx,DWORD PTR ds:0x447054
  43edc9:	mov    ecx,DWORD PTR [ecx+0xc]
  43edcc:	mov    DWORD PTR ds:0x447cf0,ecx
  43edd2:	mov    edx,0xceedfc79
  43edd7:	sub    edx,DWORD PTR ds:0x447cfc
  43eddd:	xor    edx,ecx
  43eddf:	mov    DWORD PTR [eax+0xc],edx
  43ede2:	mov    edx,DWORD PTR ds:0x447054
  43ede8:	add    edx,0x10
  43edeb:	mov    DWORD PTR ds:0x447054,edx
  43edf1:	movzx  ecx,BYTE PTR [edx+0xa]
  43edf5:	movzx  edi,WORD PTR [edx+0x4]
  43edf9:	movzx  edx,BYTE PTR [edx]
  43edfc:	shl    ecx,0x10
  43edff:	add    ecx,edi
  43ee01:	shl    ecx,0x8
  43ee04:	add    ecx,edx
  43ee06:	mov    DWORD PTR ds:0x447cf0,ecx
  43ee0c:	mov    edx,0xceedfc79
  43ee11:	sub    edx,DWORD PTR ds:0x447cfc
  43ee17:	xor    edx,ecx
  43ee19:	mov    DWORD PTR [eax+0x10],edx
  43ee1c:	mov    ecx,DWORD PTR ds:0x447054
  43ee22:	mov    ecx,DWORD PTR [ecx+0xc]
  43ee25:	mov    DWORD PTR ds:0x447cf0,ecx
  43ee2b:	mov    edx,0xceedfc79
  43ee30:	sub    edx,DWORD PTR ds:0x447cfc
  43ee36:	xor    edx,ecx
  43ee38:	mov    DWORD PTR [eax+0x14],edx
  43ee3b:	mov    edx,DWORD PTR ds:0x447054
  43ee41:	add    edx,0x10
  43ee44:	mov    DWORD PTR ds:0x447054,edx
  43ee4a:	movzx  ecx,BYTE PTR [edx+0xa]
  43ee4e:	movzx  edi,WORD PTR [edx+0x4]
  43ee52:	movzx  edx,BYTE PTR [edx]
  43ee55:	shl    ecx,0x10
  43ee58:	add    ecx,edi
  43ee5a:	shl    ecx,0x8
  43ee5d:	add    ecx,edx
  43ee5f:	mov    edx,0xceedfc79
  43ee64:	sub    edx,DWORD PTR ds:0x447cfc
  43ee6a:	mov    DWORD PTR ds:0x447cf0,ecx
  43ee70:	xor    edx,ecx
  43ee72:	mov    DWORD PTR [eax+0x18],edx
  43ee75:	mov    ecx,DWORD PTR ds:0x447054
  43ee7b:	mov    ecx,DWORD PTR [ecx+0xc]
  43ee7e:	mov    DWORD PTR ds:0x447cf0,ecx
  43ee84:	mov    edx,0xceedfc79
  43ee89:	sub    edx,DWORD PTR ds:0x447cfc
  43ee8f:	add    eax,0x28
  43ee92:	xor    edx,ecx
  43ee94:	mov    DWORD PTR [eax-0xc],edx
  43ee97:	mov    edx,DWORD PTR ds:0x447054
  43ee9d:	add    edx,0x10
  43eea0:	mov    DWORD PTR ds:0x447054,edx
  43eea6:	movzx  ecx,BYTE PTR [edx+0xa]
  43eeaa:	movzx  edi,WORD PTR [edx+0x4]
  43eeae:	movzx  edx,BYTE PTR [edx]
  43eeb1:	shl    ecx,0x10
  43eeb4:	add    ecx,edi
  43eeb6:	shl    ecx,0x8
  43eeb9:	add    ecx,edx
  43eebb:	mov    edx,0xceedfc79
  43eec0:	sub    edx,DWORD PTR ds:0x447cfc
  43eec6:	mov    DWORD PTR ds:0x447cf0,ecx
  43eecc:	xor    edx,ecx
  43eece:	mov    DWORD PTR [eax-0x8],edx
  43eed1:	mov    ecx,DWORD PTR ds:0x447054
  43eed7:	mov    ecx,DWORD PTR [ecx+0xc]
  43eeda:	mov    edx,0xceedfc79
  43eedf:	sub    edx,DWORD PTR ds:0x447cfc
  43eee5:	mov    DWORD PTR ds:0x447cf0,ecx
  43eeeb:	xor    edx,ecx
  43eeed:	mov    DWORD PTR [eax-0x4],edx
  43eef0:	mov    edx,DWORD PTR ds:0x447054
  43eef6:	add    edx,0x10
  43eef9:	dec    esi
  43eefa:	mov    DWORD PTR ds:0x447054,edx
  43ef00:	jne    0x43ed40
  43ef06:	mov    esi,DWORD PTR ds:0x447d00
  43ef0c:	mov    ecx,DWORD PTR ds:0x447058
  43ef12:	push   ebx
  43ef13:	mov    ebx,DWORD PTR ds:0x444050
  43ef19:	add    esi,0x650
  43ef1f:	mov    edi,0x225
  43ef24:	movzx  eax,BYTE PTR [ecx+0x7]
  43ef28:	movzx  edx,WORD PTR [ecx+0x5]
  43ef2c:	movzx  ecx,BYTE PTR [ecx+0x3]
  43ef30:	shl    eax,0x10
  43ef33:	add    eax,edx
  43ef35:	mov    edx,DWORD PTR ds:0x447cfc
  43ef3b:	shl    eax,0x8
  43ef3e:	add    eax,ecx
  43ef40:	add    edx,0x60a04980
  43ef46:	xor    edx,eax
  43ef48:	mov    ds:0x447cf0,eax
  43ef4d:	mov    DWORD PTR [esi],edx
  43ef4f:	add    esi,0x4
  43ef52:	call   ebx
  43ef54:	mov    ecx,DWORD PTR ds:0x447058
  43ef5a:	add    ecx,0x8
  43ef5d:	dec    edi
  43ef5e:	mov    DWORD PTR ds:0x447058,ecx
  43ef64:	jne    0x43ef24
  43ef66:	mov    edx,DWORD PTR ds:0x447d00
  43ef6c:	mov    ecx,DWORD PTR ds:0x44705c
  43ef72:	add    edx,0xee4
  43ef78:	mov    esi,0x2bf
  43ef7d:	pop    ebx
  43ef7e:	mov    edi,edi
  43ef80:	movzx  eax,BYTE PTR [ecx+0x5]
  43ef84:	movzx  edi,WORD PTR [ecx+0x3]
  43ef88:	movzx  ecx,BYTE PTR [ecx+0x1]
  43ef8c:	shl    eax,0x10
  43ef8f:	add    eax,edi
  43ef91:	shl    eax,0x8
  43ef94:	add    eax,ecx
  43ef96:	mov    ecx,DWORD PTR ds:0x447cfc
  43ef9c:	xor    ecx,eax
  43ef9e:	xor    ecx,0x505682a6
  43efa4:	mov    ds:0x447cf0,eax
  43efa9:	mov    DWORD PTR [edx],ecx
  43efab:	mov    ecx,DWORD PTR ds:0x44705c
  43efb1:	add    ecx,0x8
  43efb4:	add    edx,0x4
  43efb7:	dec    esi
  43efb8:	mov    DWORD PTR ds:0x44705c,ecx
  43efbe:	jne    0x43ef80
  43efc0:	mov    ecx,DWORD PTR ds:0x447d00
  43efc6:	mov    eax,DWORD PTR [esp+0x10]
  43efca:	add    ecx,0x19e0
  43efd0:	add    eax,0x2
  43efd3:	mov    esi,0x1d
  43efd8:	jmp    0x43efe0
  43efda:	lea    ebx,[ebx+0x0]
  43efe0:	movzx  edx,BYTE PTR [eax+0x5]
  43efe4:	movzx  edi,WORD PTR [eax]
  43efe7:	shl    edx,0x10
  43efea:	add    edx,edi
  43efec:	movzx  edi,BYTE PTR [eax-0x2]
  43eff0:	shl    edx,0x8
  43eff3:	add    edx,edi
  43eff5:	mov    edi,DWORD PTR ds:0x447cfc
  43effb:	xor    edi,edx
  43effd:	mov    DWORD PTR ds:0x447cf0,edx
  43f003:	xor    edi,0xa34a8d27
  43f009:	mov    DWORD PTR [ecx],edi
  43f00b:	mov    edx,DWORD PTR [eax+0x9]
  43f00e:	mov    edi,DWORD PTR ds:0x447cfc
  43f014:	mov    DWORD PTR ds:0x447cf0,edx
  43f01a:	add    edi,0xa34a8d1f
  43f020:	xor    edi,edx
  43f022:	mov    DWORD PTR [ecx+0x4],edi
  43f025:	movzx  edx,BYTE PTR [eax+0x15]
  43f029:	movzx  edi,WORD PTR [eax+0x10]
  43f02d:	shl    edx,0x10
  43f030:	add    edx,edi
  43f032:	movzx  edi,BYTE PTR [eax+0xe]
  43f036:	shl    edx,0x8
  43f039:	add    edx,edi
  43f03b:	mov    edi,DWORD PTR ds:0x447cfc
  43f041:	xor    edi,edx
  43f043:	mov    DWORD PTR ds:0x447cf0,edx
  43f049:	xor    edi,0xa34a8d27
  43f04f:	mov    DWORD PTR [ecx+0x8],edi
  43f052:	mov    edx,DWORD PTR [eax+0x19]
  43f055:	mov    edi,DWORD PTR ds:0x447cfc
  43f05b:	mov    DWORD PTR ds:0x447cf0,edx
  43f061:	add    edi,0xa34a8d1f
  43f067:	xor    edi,edx
  43f069:	mov    DWORD PTR [ecx+0xc],edi
  43f06c:	movzx  edx,BYTE PTR [eax+0x25]
  43f070:	movzx  edi,WORD PTR [eax+0x20]
  43f074:	shl    edx,0x10
  43f077:	add    edx,edi
  43f079:	movzx  edi,BYTE PTR [eax+0x1e]
  43f07d:	shl    edx,0x8
  43f080:	add    edx,edi
  43f082:	mov    edi,DWORD PTR ds:0x447cfc
  43f088:	xor    edi,edx
  43f08a:	mov    DWORD PTR ds:0x447cf0,edx
  43f090:	xor    edi,0xa34a8d27
  43f096:	mov    DWORD PTR [ecx+0x10],edi
  43f099:	mov    edx,DWORD PTR [eax+0x29]
  43f09c:	mov    edi,DWORD PTR ds:0x447cfc
  43f0a2:	mov    DWORD PTR ds:0x447cf0,edx
  43f0a8:	add    edi,0xa34a8d1f
  43f0ae:	xor    edi,edx
  43f0b0:	mov    DWORD PTR [ecx+0x14],edi
  43f0b3:	movzx  edx,BYTE PTR [eax+0x35]
  43f0b7:	movzx  edi,WORD PTR [eax+0x30]
  43f0bb:	shl    edx,0x10
  43f0be:	add    edx,edi
  43f0c0:	movzx  edi,BYTE PTR [eax+0x2e]
  43f0c4:	shl    edx,0x8
  43f0c7:	add    edx,edi
  43f0c9:	mov    edi,DWORD PTR ds:0x447cfc
  43f0cf:	xor    edi,edx
  43f0d1:	mov    DWORD PTR ds:0x447cf0,edx
  43f0d7:	xor    edi,0xa34a8d27
  43f0dd:	mov    DWORD PTR [ecx+0x18],edi
  43f0e0:	mov    edx,DWORD PTR [eax+0x39]
  43f0e3:	mov    edi,DWORD PTR ds:0x447cfc
  43f0e9:	mov    DWORD PTR ds:0x447cf0,edx
  43f0ef:	add    edi,0xa34a8d1f
  43f0f5:	xor    edi,edx
  43f0f7:	mov    DWORD PTR [ecx+0x1c],edi
  43f0fa:	movzx  edx,BYTE PTR [eax+0x45]
  43f0fe:	movzx  edi,WORD PTR [eax+0x40]
  43f102:	shl    edx,0x10
  43f105:	add    edx,edi
  43f107:	movzx  edi,BYTE PTR [eax+0x3e]
  43f10b:	shl    edx,0x8
  43f10e:	add    edx,edi
  43f110:	mov    edi,DWORD PTR ds:0x447cfc
  43f116:	mov    DWORD PTR ds:0x447cf0,edx
  43f11c:	xor    edi,edx
  43f11e:	xor    edi,0xa34a8d27
  43f124:	mov    DWORD PTR [ecx+0x20],edi
  43f127:	mov    edx,DWORD PTR [eax+0x49]
  43f12a:	mov    edi,DWORD PTR ds:0x447cfc
  43f130:	add    edi,0xa34a8d1f
  43f136:	xor    edi,edx
  43f138:	mov    DWORD PTR ds:0x447cf0,edx
  43f13e:	mov    DWORD PTR [ecx+0x24],edi
  43f141:	add    ecx,0x28
  43f144:	add    eax,0x50
  43f147:	dec    esi
  43f148:	jne    0x43efe0
  43f14e:	mov    edx,DWORD PTR ds:0x447d00
  43f154:	mov    ecx,DWORD PTR ds:0x447060
  43f15a:	add    edx,0x1e68
  43f160:	mov    esi,0x137
  43f165:	movzx  eax,BYTE PTR [ecx+0x8]
  43f169:	movzx  edi,BYTE PTR [ecx+0x6]
  43f16d:	shl    eax,0x8
  43f170:	add    eax,edi
  43f172:	movzx  edi,BYTE PTR [ecx+0x4]
  43f176:	movzx  ecx,BYTE PTR [ecx]
  43f179:	shl    eax,0x8
  43f17c:	add    eax,edi
  43f17e:	shl    eax,0x8
  43f181:	add    eax,ecx
  43f183:	mov    ds:0x447cf0,eax
  43f188:	mov    ecx,0xf842b1d7
  43f18d:	sub    ecx,DWORD PTR ds:0x447cfc
  43f193:	xor    ecx,eax
  43f195:	mov    DWORD PTR [edx],ecx
  43f197:	mov    ecx,DWORD PTR ds:0x447060
  43f19d:	movzx  eax,BYTE PTR [ecx+0xf]
  43f1a1:	movzx  edi,WORD PTR [ecx+0xb]
  43f1a5:	movzx  ecx,BYTE PTR [ecx+0x9]
  43f1a9:	shl    eax,0x10
  43f1ac:	add    eax,edi
  43f1ae:	shl    eax,0x8
  43f1b1:	add    eax,ecx
  43f1b3:	mov    ecx,DWORD PTR ds:0x447cfc
  43f1b9:	sub    ecx,0x80040004
  43f1bf:	neg    ecx
  43f1c1:	sbb    ecx,ecx
  43f1c3:	and    ecx,0x87c1da1c
  43f1c9:	add    ecx,0x783eb1d3
  43f1cf:	xor    ecx,eax
  43f1d1:	mov    ds:0x447cf0,eax
  43f1d6:	mov    DWORD PTR [edx+0x4],ecx
  43f1d9:	mov    ecx,DWORD PTR ds:0x447060
  43f1df:	add    ecx,0x10
  43f1e2:	add    edx,0x8
  43f1e5:	dec    esi
  43f1e6:	mov    DWORD PTR ds:0x447060,ecx
  43f1ec:	jne    0x43f165
  43f1f2:	movzx  eax,BYTE PTR [ecx+0x8]
  43f1f6:	movzx  esi,BYTE PTR [ecx+0x6]
  43f1fa:	shl    eax,0x8
  43f1fd:	add    eax,esi
  43f1ff:	movzx  esi,BYTE PTR [ecx+0x4]
  43f203:	movzx  ecx,BYTE PTR [ecx]
  43f206:	shl    eax,0x8
  43f209:	add    eax,esi
  43f20b:	shl    eax,0x8
  43f20e:	add    eax,ecx
  43f210:	mov    ecx,0xf842b1d7
  43f215:	sub    ecx,DWORD PTR ds:0x447cfc
  43f21b:	mov    ds:0x447cf0,eax
  43f220:	xor    ecx,eax
  43f222:	mov    DWORD PTR [edx],ecx
  43f224:	mov    ecx,DWORD PTR ds:0x447d00
  43f22a:	mov    edx,DWORD PTR ds:0x447064
  43f230:	add    ecx,0x2824
  43f236:	mov    esi,0xb1
  43f23b:	pop    edi
  43f23c:	lea    esp,[esp+0x0]
  43f240:	movzx  eax,WORD PTR [edx+0x6]
  43f244:	movzx  edx,WORD PTR [edx+0x3]
  43f248:	shl    eax,0x10
  43f24b:	add    eax,edx
  43f24d:	mov    ds:0x447cf0,eax
  43f252:	mov    edx,0x6e70f8a7
  43f257:	sub    edx,DWORD PTR ds:0x447cfc
  43f25d:	add    ecx,0xc
  43f260:	xor    edx,eax
  43f262:	mov    DWORD PTR [ecx-0xc],edx
  43f265:	mov    edx,DWORD PTR ds:0x447064
  43f26b:	add    edx,0x8
  43f26e:	mov    DWORD PTR ds:0x447064,edx
  43f274:	movzx  eax,WORD PTR [edx+0x6]
  43f278:	movzx  edx,WORD PTR [edx+0x3]
  43f27c:	shl    eax,0x10
  43f27f:	add    eax,edx
  43f281:	mov    ds:0x447cf0,eax
  43f286:	mov    edx,0x6e70f8a7
  43f28b:	sub    edx,DWORD PTR ds:0x447cfc
  43f291:	xor    edx,eax
  43f293:	mov    DWORD PTR [ecx-0x8],edx
  43f296:	mov    edx,DWORD PTR ds:0x447064
  43f29c:	add    edx,0x8
  43f29f:	mov    DWORD PTR ds:0x447064,edx
  43f2a5:	movzx  eax,WORD PTR [edx+0x6]
  43f2a9:	movzx  edx,WORD PTR [edx+0x3]
  43f2ad:	shl    eax,0x10
  43f2b0:	add    eax,edx
  43f2b2:	mov    edx,0x6e70f8a7
  43f2b7:	sub    edx,DWORD PTR ds:0x447cfc
  43f2bd:	mov    ds:0x447cf0,eax
  43f2c2:	xor    edx,eax
  43f2c4:	mov    DWORD PTR [ecx-0x4],edx
  43f2c7:	mov    edx,DWORD PTR ds:0x447064
  43f2cd:	add    edx,0x8
  43f2d0:	dec    esi
  43f2d1:	mov    DWORD PTR ds:0x447064,edx
  43f2d7:	jne    0x43f240
  43f2dd:	test   ebp,ebp
  43f2df:	je     0x43f2e8
  43f2e1:	push   ebp
  43f2e2:	call   DWORD PTR ds:0x444018
  43f2e8:	pop    esi
  43f2e9:	pop    ebp
  43f2ea:	ret    
  43f2eb:	int3   
  43f2ec:	int3   
  43f2ed:	int3   
  43f2ee:	int3   
  43f2ef:	int3   
  43f2f0:	sti    
  43f2f1:	dec    DWORD PTR [edx+0x8783cc]
  43f2f7:	shl    BYTE PTR [ebx-0xffe101],1
  43f2fd:	mov    cx,bp
  43f300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f301:	add    dh,ah
  43f303:	add    bh,bh
  43f305:	dec    esi
  43f306:	add    BYTE PTR [esi-0x5c],dl
  43f309:	dec    DWORD PTR [ebp-0x77]
  43f30c:	add    BYTE PTR [ebx-0x1],bh
  43f30f:	or     cl,bh
  43f311:	sbb    eax,0xffffffff
  43f314:	int3   
  43f315:	loop   0x43f316
  43f317:	sbb    DWORD PTR [ecx+0x832aff],0x71
  43f31e:	sub    DWORD PTR [ebp+eax*1-0x7c7d01],0xfffffff0
  43f326:	mov    DWORD PTR [eax],esi
  43f328:	push   ecx
  43f329:	adc    DWORD PTR [ecx+0x0],0x0
  43f32d:	pop    ecx
  43f32e:	add    BYTE PTR [edx+0x10],ah
  43f331:	jmp    DWORD PTR [edi+edi*8]
  43f334:	(bad)  
  43f335:	js     0x43f337
  43f337:	sbb    esi,DWORD PTR [edi]
  43f339:	sbb    DWORD PTR [ecx-0xf5ff7d],0xffffffd4
  43f340:	in     eax,dx
  43f341:	push   DWORD PTR [edi+edi*8+0x57ff3bff]
  43f348:	dec    ebp
  43f349:	jmp    FWORD PTR [ebx]
  43f34b:	(bad)  
  43f34c:	jmp    DWORD PTR [eax-0xa38301]
  43f352:	sub    eax,DWORD PTR [eax]
  43f354:	xor    DWORD PTR [edx+0x0],0x5a
  43f358:	xor    al,BYTE PTR [eax]
  43f35a:	dec    esp
  43f35b:	mov    DWORD PTR [ecx+0x49af00cf],ecx
  43f361:	xor    edx,0xffffffff
  43f364:	int3   
  43f365:	and    BYTE PTR [eax],al
  43f367:	loopne 0x43f35d
  43f369:	int3   
  43f36a:	xchg   edi,eax
  43f36b:	add    BYTE PTR [eax],al
  43f36d:	dec    ebp
  43f36e:	inc    DWORD PTR ds:0x900012
  43f374:	call   FWORD PTR [eax]
  43f376:	call   ecx
  43f378:	pop    edx
  43f379:	(bad)  
  43f37a:	jnp    0x43f37c
  43f37c:	mov    DWORD PTR [edi+edi*8+0x320001a8],esp
  43f383:	(bad)  
  43f384:	dec    DWORD PTR [ebx]
  43f386:	add    bh,dl
  43f388:	inc    ecx
  43f389:	jmp    DWORD PTR [eax+0x0]
  43f38c:	inc    ebx
  43f38e:	inc    DWORD PTR [eax+0xcf8334]
  43f394:	add    BYTE PTR [esi],ch
  43f396:	dec    DWORD PTR [ebx]
  43f398:	mov    WORD PTR [eax],es
  43f39a:	call   0x5b6d:0xff7683ff
  43f3a1:	int3   
  43f3a2:	xchg   edi,edi
  43f3a4:	add    dh,bh
  43f3a6:	add    BYTE PTR [ecx+0x7b],dl
  43f3a9:	(bad)  
  43f3aa:	cli    
  43f3ab:	inc    DWORD PTR [ebx+0x19f6fff9]
  43f3b1:	add    BYTE PTR [ecx-0x77],dl
  43f3b4:	mov    DWORD PTR [edi-0x564e01],edx
  43f3ba:	out    0xff,eax
  43f3bc:	int3   
  43f3bd:	out    0x0,eax
  43f3bf:	es test al,0xcc
  43f3c2:	jmp    0x43f3c3
  43f3c4:	add    BYTE PTR [eax-0x1],ah
  43f3c7:	mov    ?,WORD PTR [ecx-0xffa734]
  43f3cd:	mov    cl,0xff
  43f3cf:	xchg   DWORD PTR [esi],ecx
  43f3d1:	add    dh,al
  43f3d3:	add    bh,bh
  43f3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3d6:	push   esi
  43f3d8:	mov    bh,bh
  43f3da:	dec    ebp
  43f3db:	inc    DWORD PTR [ebx-0x56b7c0a]
  43f3e1:	add    BYTE PTR [edx-0x7d],al
  43f3e4:	(bad)  
  43f3e5:	clc    
  43f3e6:	add    BYTE PTR [eax-0xf3ff6a],cl
  43f3ec:	jmp    FWORD PTR [ecx]
  43f3ee:	add    BYTE PTR ds:0xff2dffcf,cl
  43f3f4:	add    BYTE PTR [ecx-0x7c64947d],dl
  43f3fa:	push   0xff9aff00
  43f3ff:	mov    edx,0xffc6ffc5
  43f404:	inc    edi
  43f406:	sbb    DWORD PTR [edx+0x4f],0x0
  43f40a:	test   eax,0xcc14ff00
  43f40f:	xchg   BYTE PTR fs:[eax],al
  43f412:	fcos   
  43f414:	call   FWORD PTR [ebx]
  43f416:	add    bh,ah
  43f418:	aaa    
  43f419:	jmp    FWORD PTR [eax+0x3a83cc]
  43f41f:	fistp  DWORD PTR [edi-0xec00]
  43f425:	mov    eax,0xf06ccc
  43f42a:	inc    ecx
  43f42b:	add    BYTE PTR [eax],al
  43f42d:	sbb    eax,0xff186600
  43f432:	out    0x0,al
  43f434:	call   FWORD PTR [ebx+eax*4-0x55]
  43f438:	jmp    0x43f3bd
  43f43a:	dec    eax
  43f43b:	inc    DWORD PTR [ebx-0x2036ffaa]
  43f441:	add    dl,al
  43f443:	inc    DWORD PTR [eax]
  43f445:	jnp    0x43f446
  43f447:	pop    ebx
  43f448:	loope  0x43f44a
  43f44a:	inc    ebx
  43f44b:	(bad)  
  43f44c:	push   ecx
  43f44e:	or     DWORD PTR [edi+esi*2-0x77],0x5a
  43f453:	(bad)  
  43f454:	push   ecx
  43f456:	dec    DWORD PTR [ebx+0x9cfff6]
  43f45c:	mov    eax,edi
  43f45e:	inc    DWORD PTR [ecx-0x30]
  43f461:	cmp    DWORD PTR [edx],0x0
  43f464:	push   DWORD PTR [esi-0xa83101]
  43f46a:	mov    bl,0x0
  43f46c:	inc    DWORD PTR [edi-0x139100]
  43f472:	sub    BYTE PTR [eax],al
  43f474:	add    BYTE PTR [eax],dh
  43f476:	mov    DWORD PTR [esp+eax*8-0xdf00],ebp
  43f47d:	fcmovne st,st(4)
  43f47f:	js     0x43f430
  43f481:	add    BYTE PTR [edi+edi*8-0x767c9f00],al
  43f488:	(bad)  
  43f489:	inc    esi
  43f48b:	add    bh,bh
  43f48d:	sub    DWORD PTR [eax],eax
  43f48f:	mov    cl,0x51
  43f491:	add    BYTE PTR [ebx+0x5683ff],cl
  43f497:	inc    eax
  43f498:	sahf   
  43f499:	add    ah,al
  43f49b:	add    bh,bh
  43f49d:	and    eax,0xff42c3ff
  43f4a2:	adc    eax,DWORD PTR [eax]
  43f4a4:	add    BYTE PTR [eax-0x7c0c5301],dh
  43f4aa:	aam    0x89
  43f4ac:	add    bh,cl
  43f4ae:	jmp    DWORD PTR [ecx+0xfff9c]
  43f4b4:	call   DWORD PTR [edx]
  43f4b6:	add    dh,bl
  43f4b8:	push   es
  43f4b9:	sub    edx,0xffffff89
  43f4bc:	push   ebx
  43f4be:	int3   
  43f4bf:	pop    ds
  43f4c0:	in     eax,dx
  43f4c1:	int3   
  43f4c2:	push   eax
  43f4c3:	add    BYTE PTR [eax],al
  43f4c5:	and    edi,edi
  43f4c7:	jnp    0x43f52c
  43f4c9:	add    BYTE PTR [ebp-0x77],al
  43f4cc:	(bad)  
  43f4cd:	(bad)  
  43f4cf:	xor    bh,ch
  43f4d1:	add    BYTE PTR [esi+0xacff83],ch
  43f4d7:	cmp    edx,esi
  43f4d9:	jmp    DWORD PTR [edx]
  43f4db:	add    BYTE PTR [ebx-0xac633c4],al
  43f4e1:	int3   
  43f4e2:	inc    edi
  43f4e3:	inc    DWORD PTR [eax]
  43f4e5:	aaa    
  43f4e6:	inc    DWORD PTR [ecx+ecx*2+0x0]
  43f4ea:	mov    dl,0x0
  43f4ec:	add    BYTE PTR [edx+0x1a0b00],ah
  43f4f2:	or     DWORD PTR [eax],eax
  43f4f4:	add    BYTE PTR [eax+eax*1-0x7dffae33],bh
  43f4fb:	(bad)  
  43f4fc:	jmp    esi
  43f4fe:	int3   
  43f4ff:	jge    0x43f4fc
  43f501:	call   ebp
  43f503:	add    BYTE PTR [ebx+0x357bff9b],al
  43f509:	dec    DWORD PTR [eax-0x987c01]
  43f50f:	xchg   ebx,eax
  43f510:	mov    esi,0x89ff5883
  43f515:	mov    bh,0x0
  43f517:	cli    
  43f518:	retf   0x70ff
  43f51b:	add    BYTE PTR [ebx-0x321176de],al
  43f521:	add    DWORD PTR [ebx-0x1],0xffffff83
  43f525:	pop    ebp
  43f526:	jmp    ebp
  43f528:	add    DWORD PTR [eax],0xffffff90
  43f52b:	int3   
  43f52c:	call   FWORD PTR [ebx-0x7d]
  43f52f:	and    dh,BYTE PTR [edx]
  43f531:	push   esp
  43f533:	cmp    edi,0xffffffe0
  43f536:	or     DWORD PTR [edi+0x5],0xffffffff
  43f53a:	mov    ebx,0x83ab83ff
  43f53f:	gs in  al,0xff
  43f542:	xchg   ecx,eax
  43f543:	add    BYTE PTR [eax],al
  43f545:	ss dec esi
  43f548:	cmp    eax,0x89ff16ff
  43f54d:	sub    edi,edi
  43f54f:	jnp    0x43f543
  43f551:	call   DWORD PTR [ecx-0xc0007d]
  43f557:	pop    edi
  43f558:	sbb    edi,edi
  43f55a:	imul   eax,DWORD PTR [eax],0xc5009300
  43f560:	into   
  43f561:	add    BYTE PTR [edi+edi*8],bh
  43f564:	dec    DWORD PTR [edi-0x1]
  43f567:	rcr    DWORD PTR [ebx+0x0],cl
  43f56a:	arpl   di,di
  43f56c:	add    BYTE PTR [esp+ecx*8-0x73],dl
  43f570:	mov    cl,0x83
  43f572:	cmp    al,0x0
  43f574:	add    bh,dl
  43f576:	int3   
  43f577:	add    dh,BYTE PTR [ecx+0x0]
  43f57a:	mov    al,0xff
  43f57c:	(bad)  
  43f57d:	out    dx,eax
  43f57e:	add    BYTE PTR [ebx-0xd77cd6],dl
  43f584:	add    BYTE PTR [ecx-0xc58d00],cl
  43f58a:	imul   edi,edi,0x9e0068ff
  43f590:	ss int3 
  43f592:	scas   al,BYTE PTR es:[edi]
  43f593:	inc    DWORD PTR [ebx+0x72ecffb7]
  43f599:	add    BYTE PTR [ecx-0xde0001],ah
  43f59f:	outs   dx,DWORD PTR ds:[esi]
  43f5a0:	mov    esi,0xdc83
  43f5a5:	test   eax,0xccd587ff
  43f5aa:	mov    edi,0xff4f0000
  43f5af:	dec    edi
  43f5b0:	add    DWORD PTR [eax],0xffffff8c
  43f5b3:	cmp    edi,0xffffffd2
  43f5b6:	jmp    DWORD PTR [edi-0x7c89007f]
  43f5bc:	add    BYTE PTR [esi],cl
  43f5be:	inc    DWORD PTR [edi]
  43f5c0:	out    dx,eax
  43f5c1:	jmp    DWORD PTR [esi+0xd0ffff]
  43f5c7:	dec    ecx
  43f5c8:	mov    ebp,0xff00dcff
  43f5cd:	loopne 0x43f5ce
  43f5cf:	cmp    bl,BYTE PTR ds:0xcc8e00
  43f5d5:	cdq    
  43f5d6:	call   DWORD PTR [ecx-0x5d]
  43f5d9:	call   FWORD PTR [edx]
  43f5db:	(bad)  
  43f5dc:	push   DWORD PTR [ebp-0x754b01]
  43f5e2:	cmp    bh,bh
  43f5e4:	dec    DWORD PTR [esi-0x7c7d1a01]
  43f5ea:	ss (bad) 
  43f5ec:	call   FWORD PTR [ecx-0x7c52a934]
  43f5f2:	lock (bad) 
  43f5f4:	call   esp
  43f5f6:	add    BYTE PTR [ebp+eax*4-0x7c6301],cl
  43f5fd:	push   esi
  43f5fe:	(bad)  
  43f5ff:	clc    
  43f600:	mov    al,ds:0x833d89
  43f605:	repz jmp FWORD PTR [edi]
  43f608:	mov    ebp,0xff008e00
  43f60d:	ss (bad) 
  43f60f:	mov    edx,0xff0effc8
  43f614:	add    BYTE PTR [ecx],cl
  43f616:	add    BYTE PTR [ebx-0xf9ff47],ah
  43f61c:	add    BYTE PTR [ebx],ch
  43f61e:	int3   
  43f61f:	add    al,0xbf
  43f621:	mov    DWORD PTR [esi],ebx
  43f623:	(bad)  
  43f624:	(bad)  
  43f625:	out    dx,al
  43f626:	jmp    DWORD PTR [ecx-0x76]
  43f629:	dec    ebp
  43f62b:	add    BYTE PTR [ebx-0x35417c22],al
  43f631:	call   DWORD PTR [eax]
  43f633:	inc    DWORD PTR [ebx-0x401dff4a]
  43f639:	add    BYTE PTR [ecx],dh
  43f63b:	inc    DWORD PTR [eax]
  43f63d:	mov    ebx,0x8927eb89
  43f642:	xchg   ebp,eax
  43f643:	add    BYTE PTR [eax],al
  43f645:	call   0x8361:0xcc103589
  43f64c:	add    cl,bh
  43f64e:	call   FWORD PTR [ebp-0x67]
  43f651:	dec    DWORD PTR [ebx+0xd0000]
  43f657:	mov    eax,0x88ff68
  43f65c:	inc    edx
  43f65e:	jmp    eax
  43f660:	push   cs
  43f661:	and    DWORD PTR [edi-0x34],0xffffffff
  43f665:	outs   dx,BYTE PTR ds:[esi]
  43f666:	jmp    FWORD PTR [ebp+eax*8-0xff8100]
  43f66d:	jno    0x43f66e
  43f66f:	pop    ecx
  43f670:	mov    edi,?
  43f672:	lahf   
  43f673:	(bad)  
  43f674:	dec    DWORD PTR [edx]
  43f676:	push   DWORD PTR [edi+0x5e]
  43f679:	jmp    DWORD PTR [edi]
  43f67b:	inc    DWORD PTR [eax]
  43f67d:	cdq    
  43f67e:	add    DWORD PTR [edi+esi*1-0x7c2d34],0xffffffa5
  43f686:	int3   
  43f687:	ss pop es
  43f689:	add    cl,dl
  43f68b:	add    BYTE PTR [ecx-0x48a00091],cl
  43f691:	jmp    DWORD PTR [ebx+eax*4]
  43f694:	add    BYTE PTR [ebp-0x59b400],dh
  43f69a:	fiadd  WORD PTR [eax]
  43f69c:	(bad)  
  43f69d:	fild   DWORD PTR [eax]
  43f69f:	retf   0xff6a
  43f6a2:	and    ah,cl
  43f6a4:	push   ebp
  43f6a6:	(bad)  
  43f6a7:	fstp   DWORD PTR [eax]
  43f6a9:	int3   
  43f6aa:	cmp    bh,bh
  43f6ac:	add    BYTE PTR [ecx+0x0],dh
  43f6af:	mov    esi,DWORD PTR [eax+eax*1-0x33]
  43f6b3:	add    BYTE PTR [eax],al
  43f6b5:	fwait
  43f6b6:	add    BYTE PTR [edx],dl
  43f6b8:	cdq    
  43f6b9:	sub    DWORD PTR [ebx+0x0],0xffffffff
  43f6bd:	gs int3 
  43f6bf:	xor    al,BYTE PTR [eax-0x7c765f00]
  43f6c5:	jbe    0x43f6c6
  43f6c7:	sbb    dl,BYTE PTR [ebp-0x33006877]
  43f6cd:	xchg   bh,bh
  43f6cf:	dec    ecx
  43f6d0:	adc    edi,edi
  43f6d2:	scas   eax,DWORD PTR es:[edi]
  43f6d3:	add    bh,bh
  43f6d5:	mov    al,0x0
  43f6d7:	adc    al,0x50
  43f6d9:	call   FWORD PTR [eax-0x1]
  43f6dc:	push   esi
  43f6de:	mov    edi,esp
  43f6e0:	sub    al,0xff
  43f6e2:	push   ecx
  43f6e3:	add    BYTE PTR [eax],al
  43f6e5:	fild   DWORD PTR [ebx-0x5000835e]
  43f6eb:	or     esp,0x2f
  43f6ee:	sbb    DWORD PTR [esi],0x4f
  43f6f1:	mov    DWORD PTR [eax],ebx
  43f6f3:	add    bh,bh
  43f6f5:	jnp    0x43f6f6
  43f6f7:	adc    eax,0x5c00bf
  43f6fc:	int3   
  43f6fd:	mov    DWORD PTR ss:[ebp+ecx*2-0xff6d01],ecx
  43f705:	pop    DWORD PTR [eax]
  43f707:	hlt    
  43f708:	ja     0x43f70a
  43f70a:	ret    
  43f70b:	add    BYTE PTR [ebx-0x31d2002a],al
  43f711:	adc    DWORD PTR [edi+0x0],0xffffffff
  43f715:	cmp    eax,DWORD PTR [eax]
  43f717:	hlt    
  43f718:	ror    esp,cl
  43f71a:	or     eax,DWORD PTR [eax]
  43f71c:	int3   
  43f71d:	out    0xff,eax
  43f71f:	mov    DWORD PTR [esi],esi
  43f721:	add    BYTE PTR [ecx+0x0],al
  43f724:	add    BYTE PTR [eax-0x40d677],ch
  43f72a:	stc    
  43f72b:	int3   
  43f72c:	(bad)  
  43f72d:	aas    
  43f72e:	dec    DWORD PTR [edx]
  43f730:	out    0x83,al
  43f732:	(bad)  
  43f734:	add    al,dh
  43f736:	add    BYTE PTR [ebx-0x47],cl
  43f739:	dec    DWORD PTR [eax+0xb0ffff]
  43f73f:	ret    0xf5
  43f742:	xor    DWORD PTR [ebx-0xcff0701],eax
  43f748:	jo     0x43f6cd
  43f74a:	mov    BYTE PTR [eax],al
  43f74c:	inc    ecx
  43f74e:	int3   
  43f74f:	sbb    BYTE PTR [edi+edi*8-0x62],dl
  43f753:	inc    DWORD PTR [eax]
  43f755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f756:	add    BYTE PTR [ebx],bh
  43f758:	fadd   DWORD PTR [eax]
  43f75a:	stos   DWORD PTR es:[edi],eax
  43f75b:	dec    esp
  43f75d:	inc    esp
  43f75e:	dec    DWORD PTR [edi]
  43f760:	sahf   
  43f761:	add    bh,dh
  43f763:	mov    DWORD PTR [eax],eax
  43f765:	jl     0x43f766
  43f767:	or     BYTE PTR [ebp+0xff6100],bl
  43f76d:	xor    edi,edi
  43f76f:	xor    ecx,DWORD PTR [esi+0x0]
  43f772:	xchg   edi,edi
  43f774:	(bad)  
  43f775:	(bad)  
  43f777:	icebp  
  43f778:	jle    0x43f6fd
  43f77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f77b:	add    BYTE PTR [ebx+0x4dddff19],al
  43f781:	add    ebx,0x0
  43f784:	push   DWORD PTR ds:0xcc697700
  43f78a:	inc    ebp
  43f78b:	(bad)  
  43f78c:	push   DWORD PTR [edi-0x1]
  43f78f:	aam    0x8f
  43f791:	(bad)  
  43f792:	mov    esp,0xcc1983ff
  43f797:	and    al,0x3c
  43f799:	xor    DWORD PTR [esi],0xffffffff
  43f79c:	call   DWORD PTR [edx]
  43f79e:	push   DWORD PTR [edx]
  43f7a0:	pop    ecx
  43f7a1:	add    BYTE PTR [ecx+0xdaffff],cl
  43f7a7:	push   edx
  43f7a8:	inc    edi
  43f7a9:	int3   
  43f7aa:	aad    0xff
  43f7ac:	inc    DWORD PTR [edx-0x7d]
  43f7af:	mov    edi,ecx
  43f7b1:	push   eax
  43f7b3:	or     DWORD PTR [ecx+0x19d0cc2d],0xffffffcc
  43f7ba:	sti    
  43f7bb:	inc    DWORD PTR [eax]
  43f7bd:	aam    0xff
  43f7bf:	mov    esp,0xff0e00c0
  43f7c4:	mov    esi,ecx
  43f7c6:	jmp    ebp
  43f7c8:	pop    ebp
  43f7c9:	(bad)  
  43f7ca:	jle    0x43f74f
  43f7cc:	(bad)  
  43f7cd:	mov    esp,0xb3f389
  43f7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f7d3:	mov    edi,edi
  43f7d5:	adc    edi,edi
  43f7d7:	push   ebp
  43f7d8:	cmp    al,0xff
  43f7da:	pop    edx
  43f7db:	(bad)  
  43f7dc:	(bad)  
  43f7dd:	fmul   st(4),st
  43f7df:	pop    esp
  43f7e0:	jmp    0xffdd:0xff4fff
  43f7e7:	push   ebx
  43f7e8:	pop    esp
  43f7e9:	add    DWORD PTR [ebx-0xde7c01],0xffffff8e
  43f7f0:	std    
  43f7f1:	(bad)  
  43f7f2:	jnp    0x43f7f3
  43f7f4:	and    ebx,0x0
  43f7f7:	shl    BYTE PTR [esi],0x89
  43f7fa:	mov    ?,edi
  43f7fc:	(bad)  
  43f7fd:	call   0xbb9a85
  43f802:	dec    ebx
  43f803:	(bad)  
  43f804:	jmp    FWORD PTR [eax]
  43f806:	call   DWORD PTR [ecx-0x40]
  43f809:	inc    DWORD PTR [ebp-0x7c233400]
  43f80f:	xor    al,cl
  43f811:	int3   
  43f812:	fs mov esp,ecx
  43f815:	or     BYTE PTR [eax],al
  43f817:	out    dx,al
  43f818:	ja     0x43f819
  43f81a:	iret   
  43f81b:	(bad)  
  43f81c:	push   eax
  43f81e:	jmp    DWORD PTR [ecx]
  43f820:	push   ebp
  43f821:	int3   
  43f822:	pop    esi
  43f823:	mov    DWORD PTR [eax],eax
  43f825:	push   ds
  43f826:	add    BYTE PTR [ecx-0x40],dh
  43f829:	add    BYTE PTR [eax-0x33157700],ah
  43f82f:	dec    ebp
  43f830:	sar    edi,1
  43f832:	mov    ebp,0xff0c8389
  43f837:	mov    ecx,0x318338
  43f83c:	mov    DWORD PTR [edi-0x77],ebp
  43f83f:	aam    0x21
  43f841:	dec    DWORD PTR [edi+edi*8-0x3ff8600]
  43f848:	lods   al,BYTE PTR ds:[esi]
  43f849:	push   DWORD PTR [ebx+eax*4+0x0]
  43f84d:	in     al,dx
  43f84e:	int3   
  43f84f:	push   sp
  43f851:	call   DWORD PTR [edi-0xd97c01]
  43f857:	ins    BYTE PTR es:[edi],dx
  43f858:	mov    bh,bh
  43f85a:	or     al,0x0
  43f85c:	add    BYTE PTR [ebp-0x1],bh
  43f85f:	sbb    BYTE PTR [ecx+0x0],bl
  43f862:	imul   eax,DWORD PTR [ebx+0x3b000500],0x9d8351
  43f86c:	inc    DWORD PTR [ebp-0x76c99e01]
  43f872:	pop    ebx
  43f873:	add    BYTE PTR [eax],al
  43f875:	push   ds
  43f876:	or     DWORD PTR [edi-0x230095],0x0
  43f87d:	in     eax,dx
  43f87e:	mov    DWORD PTR [eax-0xadff7c],ebx
  43f884:	jmp    FWORD PTR [edx-0x50af34]
  43f88a:	imul   edi,edi,0xbe834500
  43f890:	sar    edi,cl
  43f892:	jp     0x43f860
  43f894:	int3   
  43f895:	cmp    bh,0xa5
  43f898:	outs   dx,BYTE PTR ds:[esi]
  43f899:	(bad)  
  43f89a:	inc    DWORD PTR [eax]
  43f89c:	add    BYTE PTR [eax-0x1],ah
  43f89f:	(bad)  
  43f8a0:	pop    ds
  43f8a1:	add    BYTE PTR [ecx-0x1],dl
  43f8a4:	add    BYTE PTR [ebx-0x7c10ba01],dl
  43f8aa:	stc    
  43f8ab:	inc    DWORD PTR [eax]
  43f8ad:	cmp    edi,0x83ff7363
  43f8b3:	or     DWORD PTR [ecx+0x124dff09],0x0
  43f8ba:	jecxz  0x43f83f
  43f8bc:	int3   
  43f8bd:	aam    0x83
  43f8bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f8c0:	and    eax,0xccffe783
  43f8c5:	pop    eax
  43f8c6:	jmp    DWORD PTR [edx+edx*4]
  43f8c9:	add    BYTE PTR [eax+eax*1-0x1],bh
  43f8cd:	sbb    DWORD PTR [eax],eax
  43f8cf:	(bad)  
  43f8d0:	out    dx,eax
  43f8d1:	add    BYTE PTR [edi+0x72ffff],ah
  43f8d7:	dec    eax
  43f8d8:	scas   al,BYTE PTR es:[edi]
  43f8d9:	and    esi,0x0
  43f8dc:	xor    DWORD PTR [edi],0xffffffff
  43f8df:	adc    al,0xaf
  43f8e1:	add    BYTE PTR [edi+edi*8+0x18cc4683],al
  43f8e8:	idiv   bh
  43f8ea:	adc    bh,bh
  43f8ec:	add    ch,al
  43f8ee:	int3   
  43f8ef:	pop    ds
  43f8f0:	cld    
  43f8f1:	add    BYTE PTR [ebp+0x9a0083],ch
  43f8f7:	pop    ds
  43f8f8:	mov    al,ds:0xffffe4ff
  43f8fd:	sbb    eax,0x830d0bff
  43f902:	and    DWORD PTR [ebx-0x417c4b01],eax
  43f908:	push   edx
  43f909:	push   edi
  43f90b:	mov    DWORD PTR [eax],eax
  43f90d:	mov    al,0xff
  43f90f:	scas   eax,DWORD PTR es:[edi]
  43f910:	xor    bh,bh
  43f912:	or     eax,0xff5fff00
  43f917:	xlat   BYTE PTR ds:[ebx]
  43f918:	repz int3 
  43f91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f91b:	inc    DWORD PTR [ebx+0x543600be]
  43f921:	call   FWORD PTR [eax]
  43f923:	inc    DWORD PTR [eax]
  43f925:	inc    eax
  43f926:	(bad)  
  43f927:	mov    ebp,0xff44cc54
  43f92c:	int3   
  43f92d:	adc    eax,DWORD PTR [ebx-0x2aff3a7e]
  43f933:	add    DWORD PTR [eax],0x5c
  43f936:	add    ah,bl
  43f938:	mov    bh,0x0
  43f93a:	in     eax,0xff
  43f93c:	push   DWORD PTR [ebx-0xafba01]
  43f942:	fcos   
  43f944:	call   ebp
  43f946:	inc    ecx
  43f948:	fisttp QWORD PTR [ecx-0x5a7c0040]
  43f94e:	add    BYTE PTR [ebx-0x33e700d2],ch
  43f954:	(bad)  
  43f955:	fld    DWORD PTR [ebx+0x7b00ce72]
  43f95b:	cmp    edi,0xffffffc0
  43f95e:	sbb    DWORD PTR [esp+esi*8],0xffffffff
  43f962:	je     0x43f963
  43f964:	or     ebp,0xffffffff
  43f967:	jge    0x43f9b9
  43f969:	dec    edx
  43f96b:	inc    DWORD PTR [eax]
  43f96d:	xchg   esi,eax
  43f96e:	add    ecx,0x2e
  43f971:	push   DWORD PTR [ecx]
  43f973:	int3   
  43f974:	add    DWORD PTR [ecx],0xffffffff
  43f977:	retf   
  43f978:	mov    WORD PTR [eax],es
  43f97a:	inc    ebp
  43f97b:	int3   
  43f97c:	jmp    ecx
  43f97e:	mov    DWORD PTR [eax+0xd5ff19],edi
  43f984:	push   eax
  43f986:	add    BYTE PTR [esi],al
  43f988:	adc    ecx,DWORD PTR [ecx-0x6f0000cf]
  43f98e:	call   esi
  43f990:	inc    edi
  43f991:	add    cl,cl
  43f993:	(bad)  
  43f994:	jmp    DWORD PTR [edi-0x7d]
  43f997:	lds    ebp,FWORD PTR [ecx]
  43f999:	inc    DWORD PTR [edx-0x7cabff01]
  43f99f:	sahf   
  43f9a0:	add    bh,bh
  43f9a2:	jno    0x43f9a4
  43f9a4:	or     esp,0x0
  43f9a7:	jnp    0x43f9ef
  43f9a9:	add    BYTE PTR [ebx+eax*4-0x77],al
  43f9ad:	ja     0x43f9af
  43f9af:	bound  edi,QWORD PTR [ecx-0xf97d]
  43f9b5:	pop    es
  43f9b6:	add    bl,bl
  43f9b8:	or     al,BYTE PTR [eax]
  43f9ba:	add    BYTE PTR es:[ebx-0x5f507c32],al
  43f9c1:	add    al,bh
  43f9c3:	add    DWORD PTR [ebx+0x264cff35],0x0
  43f9ca:	dec    eax
  43f9cb:	int3   
  43f9cc:	jmp    DWORD PTR [eax-0x34]
  43f9cf:	scas   al,BYTE PTR es:[edi]
  43f9d0:	dec    edi
  43f9d1:	int3   
  43f9d2:	in     eax,dx
  43f9d3:	dec    esp
  43f9d5:	mov    ecx,0xff3a9800
  43f9da:	jns    0x43f9db
  43f9dc:	dec    DWORD PTR [edx-0x48d001]
  43f9e2:	push   ecx
  43f9e3:	int3   
  43f9e4:	dec    DWORD PTR [eax-0x69fa01]
  43f9ea:	push   ebp
  43f9eb:	inc    DWORD PTR [eax]
  43f9ed:	dec    esi
  43f9ee:	or     DWORD PTR [ecx+0x69],0xffffffff
  43f9f2:	cld    
  43f9f3:	cmp    edi,0x7
  43f9f6:	add    BYTE PTR [ebp-0xc13396],dh
  43f9fc:	jmp    FWORD PTR [esi]
  43f9fe:	cmp    ecx,0xffffffca
  43fa01:	add    al,dh
  43fa03:	dec    DWORD PTR [ecx+0x6d908933]
  43fa09:	push   DWORD PTR [edi+0xa08900]
  43fa0f:	and    al,0xd
  43fa11:	int3   
  43fa12:	ret    
  43fa13:	(bad)  
  43fa14:	jmp    DWORD PTR [esi-0x1]
  43fa17:	clc    
  43fa18:	mov    ah,0x83
  43fa1a:	inc    eax
  43fa1b:	add    ah,cl
  43fa1d:	push   ds
  43fa1e:	call   DWORD PTR [esi]
  43fa20:	pop    ebx
  43fa21:	add    BYTE PTR [edx-0x7d],al
  43fa24:	call   esi
  43fa26:	call   FWORD PTR [eax-0x76d8ff72]
  43fa2c:	xor    DWORD PTR [edi-0xf4c701],0xffffffa0
  43fa33:	(bad)  
  43fa34:	call   eax
  43fa36:	int3   
  43fa37:	push   eax
  43fa38:	add    BYTE PTR [eax],0xff
  43fa3b:	(bad)  
  43fa3c:	inc    DWORD PTR [ebx]
  43fa3e:	push   DWORD PTR [edx-0xd676b6]
  43fa44:	push   DWORD PTR [edi+edi*8-0x7733ce19]
  43fa4b:	add    bh,bh
  43fa4d:	retf   0x8cff
  43fa50:	xchg   esp,eax
  43fa51:	xor    DWORD PTR [eax+0x0],0xffffff83
  43fa55:	mov    ?,edi
  43fa57:	jg     0x43fa29
  43fa59:	jmp    FWORD PTR [esp+ecx*8-0x1]
  43fa5d:	sbb    ecx,DWORD PTR [ecx+0x2f8908e3]
  43fa63:	inc    DWORD PTR [eax]
  43fa65:	loopne 0x43fa67
  43fa67:	cmp    al,0x9a
  43fa69:	add    BYTE PTR [ebp-0x34],cl
  43fa6c:	dec    DWORD PTR [eax-0x1]
  43fa6f:	lods   al,BYTE PTR ds:[esi]
  43fa70:	jle    0x43fa71
  43fa72:	jo     0x43f9f7
  43fa74:	add    ah,dh
  43fa76:	call   FWORD PTR [ebx]
  43fa78:	cmp    al,BYTE PTR [ebx+0x5eccff0b]
  43fa7e:	dec    DWORD PTR [esi+0x46]
  43fa81:	(bad)  
  43fa82:	mov    ecx,0xff5e83ff
  43fa87:	mov    dh,0xc1
  43fa89:	mov    DWORD PTR [edx],esi
  43fa8b:	add    BYTE PTR [eax],al
  43fa8d:	in     al,dx
  43fa8e:	cmp    ebx,0x1d
  43fa91:	jmp    FWORD PTR [edx-0x1]
  43fa94:	dec    ebp
  43fa96:	add    BYTE PTR [edi],ch
  43fa98:	mov    es,WORD PTR [eax]
  43fa9a:	aaa    
  43fa9b:	add    DWORD PTR [eax],0xffffffc7
  43fa9e:	dec    DWORD PTR [edi]
  43faa0:	mov    al,ds:0xff008f00
  43faa5:	pop    ebp
  43faa6:	push   eax
  43faa8:	inc    DWORD PTR [eax]
  43faaa:	add    bh,bh
  43faac:	add    BYTE PTR [ebp-0x31801],bl
  43fab2:	pushf  
  43fab3:	(bad)  
  43fab4:	call   DWORD PTR [esi-0x7c4d5f01]
  43faba:	sbb    eax,0xffe58989
  43fabf:	stos   BYTE PTR es:[edi],al
  43fac0:	add    al,0xff
  43fac2:	and    al,0xff
  43fac4:	push   edi
  43fac6:	(bad)  
  43fac7:	sti    
  43fac8:	or     eax,DWORD PTR [eax]
  43faca:	add    eax,0x4eff89
  43facf:	cmp    al,0xf5
  43fad1:	call   ebx
  43fad3:	(bad)  
  43fad4:	push   DWORD PTR [eax+eax*1]
  43fad7:	test   al,0xc7
  43fad9:	mov    DWORD PTR [ecx+0xe283cc],eax
  43fadf:	int3   
  43fae0:	push   0xffffff83
  43fae2:	repz add BYTE PTR [eax],al
  43fae5:	inc    edx
  43fae6:	jmp    DWORD PTR [eax]
  43fae8:	(bad)  
  43faea:	xchg   ecx,eax
  43faeb:	inc    DWORD PTR [eax]
  43faed:	xchg   ecx,eax
  43faee:	add    ch,dh
  43faf0:	fadd   QWORD PTR [eax]
  43faf2:	scas   eax,DWORD PTR es:[edi]
  43faf3:	add    BYTE PTR [eax],al
  43faf5:	xor    ah,cl
  43faf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43faf8:	dec    edi
  43faf9:	jmp    DWORD PTR [eax-0x77]
  43fafc:	(bad)  
  43fafd:	mov    esp,0xff34ecff
  43fb02:	les    eax,FWORD PTR [eax]
  43fb04:	add    BYTE PTR [edi-0x1],dl
  43fb07:	jge    0x43fae2
  43fb09:	int3   
  43fb0a:	jl     0x43fb0b
  43fb0c:	jmp    esp
  43fb0e:	add    bh,cl
  43fb10:	xor    BYTE PTR [eax],al
  43fb12:	repnz int3 
  43fb14:	dec    DWORD PTR [eax+0x0]
  43fb17:	and    al,0xd8
  43fb19:	add    BYTE PTR [edx],ch
  43fb1b:	inc    DWORD PTR [ebx+0x186bff04]
  43fb21:	add    bl,dh
  43fb23:	cmp    edi,0xffffffe5
  43fb26:	mov    DWORD PTR [eax-0x30],eax
  43fb29:	add    BYTE PTR ds:0xccedffcc,cl
  43fb2f:	jnp    0x43fb1f
  43fb31:	add    ch,ch
  43fb33:	(bad)  
  43fb34:	call   DWORD PTR [esi+0x64a8ff]
  43fb3a:	mov    esp,cs
  43fb3c:	dec    ecx
  43fb3e:	inc    DWORD PTR [ebp-0x3356ffac]
  43fb44:	dec    DWORD PTR [ebx]
  43fb46:	int3   
  43fb47:	jae    0x43fadd
  43fb49:	mov    DWORD PTR [edx-0x77],edi
  43fb4c:	(bad)  
  43fb4d:	fild   WORD PTR [eax]
  43fb4f:	aas    
  43fb50:	mov    ecx,0xff005089
  43fb55:	or     BYTE PTR [ecx+0x56ff065c],0x0
  43fb5c:	int3   
  43fb5d:	dec    esi
  43fb5e:	(bad)  
  43fb5f:	(bad)  
  43fb60:	mov    ch,0x0
  43fb62:	sbb    eax,0xffe30000
  43fb67:	push   ecx
  43fb68:	popf   
  43fb69:	add    BYTE PTR [edi+edi*8],dl
  43fb6c:	cmp    DWORD PTR [ebp-0x2b4801],0xffffffec
  43fb73:	(bad)  
  43fb74:	jmp    esp
  43fb76:	mov    edx,esp
  43fb78:	repnz xor DWORD PTR [edi+edi*8],0x0
  43fb7d:	outs   dx,BYTE PTR ds:[esi]
  43fb7e:	(bad)  
  43fb7f:	fstp   TBYTE PTR [eax+0xffd783]
  43fb85:	mov    edx,0xdb7b00
  43fb8a:	mov    dl,0xff
  43fb8c:	add    BYTE PTR [edi],al
  43fb8e:	add    BYTE PTR [esi-0x197634],ch
  43fb94:	add    ah,bh
  43fb96:	sub    DWORD PTR [ebx+0xfeff9e],0x0
  43fb9d:	inc    BYTE PTR [eax]
  43fb9f:	jg     0x43fb24
  43fba1:	(bad)  
  43fba2:	fadd   QWORD PTR [eax]
  43fba4:	call   DWORD PTR [edx]
  43fba6:	(bad)  
  43fba7:	out    dx,al
  43fba8:	xchg   edi,edi
  43fbaa:	push   ds
  43fbab:	add    bh,bh
  43fbad:	gs adc esi,0xffffff87
  43fbb1:	jmp    FWORD PTR [edi+edi*8]
  43fbb4:	add    BYTE PTR [eax-0x7d],dh
  43fbb7:	xchg   DWORD PTR [ebp-0x765601],edi
  43fbbd:	cmp    DWORD PTR [eax],eax
  43fbbf:	xchg   esi,eax
  43fbc0:	js     0x43fb45
  43fbc2:	daa    
  43fbc3:	inc    DWORD PTR [ebx+0x5fe3003f]
  43fbc9:	int3   
  43fbca:	jge    0x43fbcb
  43fbcc:	push   DWORD PTR [eax-0x1]
  43fbcf:	sahf   
  43fbd0:	push   edi
  43fbd1:	add    BYTE PTR [eax],ah
  43fbd3:	add    ah,cl
  43fbd5:	pushf  
  43fbd6:	sub    DWORD PTR [eax+0x53],0x0
  43fbda:	test   DWORD PTR [ebx-0x5ffce01],eax
  43fbe0:	mov    es,WORD PTR [eax]
  43fbe2:	mov    edi,edi
  43fbe4:	add    BYTE PTR [esi],al
  43fbe6:	or     DWORD PTR [edx-0x12],0xffffffff
  43fbea:	(bad)  
  43fbeb:	int3   
  43fbec:	add    DWORD PTR ds:0xff6f09ff,0xa
  43fbf3:	mov    edi,edi
  43fbf5:	bound  ecx,QWORD PTR [ecx-0x3ff8bfd]
  43fbfb:	inc    DWORD PTR [eax]
  43fbfd:	jmp    0x9a:0x895c6c00
  43fc04:	push   DWORD PTR [edi+edi*8-0x5400fe72]
  43fc0b:	inc    DWORD PTR [ebx+0x18d3ff3b]
  43fc11:	and    DWORD PTR [ebx-0x1],0xffffffcc
  43fc15:	scas   al,BYTE PTR es:[edi]
  43fc16:	dec    ebp
  43fc18:	and    DWORD PTR cs:[edx-0x7ce2ff7d],0x64
  43fc20:	inc    ebx
  43fc21:	cmp    DWORD PTR [ebx-0x33420034],0x56
  43fc28:	push   edx
  43fc29:	(bad)  
  43fc2a:	fdiv   st(7),st
  43fc2c:	(bad)  
  43fc2d:	mov    edx,0x5abaff
  43fc32:	mov    edi,0x831dff00
  43fc37:	and    DWORD PTR [ebp-0xff7501],ebp
  43fc3d:	push   eax
  43fc3e:	push   DWORD PTR ds:0xff82fff6
  43fc44:	call   DWORD PTR [ebp-0x34]
  43fc47:	fmul   DWORD PTR [edx]
  43fc49:	adc    DWORD PTR [edx-0x34],0x0
  43fc4d:	inc    ebx
  43fc4e:	call   FWORD PTR [edx]
  43fc50:	out    dx,al
  43fc51:	int3   
  43fc52:	and    eax,0x6ff83
  43fc57:	fsub   st,st(6)
  43fc59:	(bad)  
  43fc5a:	std    
  43fc5b:	dec    esp
  43fc5d:	(bad)  
  43fc60:	mov    esp,0x83ff66ff
  43fc65:	adc    al,BYTE PTR [ebx+0x54ff9b7d]
  43fc6b:	add    DWORD PTR [ebx-0x244300ef],0xffffffff
  43fc72:	dec    ebx
  43fc73:	inc    DWORD PTR [ebx-0x13d93384]
  43fc79:	add    BYTE PTR [eax-0xc3ff01],bh
  43fc7f:	retf   
  43fc80:	xor    al,0xff
  43fc82:	imul   eax,DWORD PTR [eax],0x41002200
  43fc88:	(bad)  
  43fc8a:	sub    al,BYTE PTR [eax]
  43fc8c:	sbb    DWORD PTR [esi-0x842700],0x3
  43fc93:	inc    DWORD PTR [eax]
  43fc95:	mov    al,ds:0xff5ed0ff
  43fc9a:	into   
  43fc9b:	add    DWORD PTR [eax],0x5f
  43fc9e:	inc    DWORD PTR [edx]
  43fca0:	cmc    
  43fca1:	add    BYTE PTR [edi+edi*8-0x7b33d47d],dh
  43fca8:	jno    0x43fcaa
  43fcaa:	loope  0x43fc2f
  43fcac:	add    BYTE PTR [eax],ah
  43fcae:	sub    DWORD PTR [ebx-0x7cea76cf],0x0
  43fcb5:	inc    ecx
  43fcb6:	add    dl,bh
  43fcb8:	arpl   di,di
  43fcba:	(bad)  
  43fcbd:	cmp    ecx,esp
  43fcbf:	mov    WORD PTR [edi-0xf37d],ds
  43fcc5:	cmp    eax,0xcc9ab400
  43fcca:	dec    edi
  43fccb:	add    DWORD PTR [eax],0xfffffffd
  43fcce:	int3   
  43fccf:	cmp    BYTE PTR [esi],bl
  43fcd1:	mov    DWORD PTR [edi],esp
  43fcd3:	add    BYTE PTR [eax],al
  43fcd5:	adc    eax,0xff7954cc
  43fcda:	add    BYTE PTR es:[eax],al
  43fcdd:	jge    0x43fcde
  43fcdf:	(bad)  
  43fce0:	sbb    esp,ecx
  43fce2:	add    eax,0xff0000ff
  43fce7:	pop    esp
  43fce8:	inc    eax
  43fce9:	add    BYTE PTR [ebx-0x1],bl
  43fcec:	call   ebx
  43fcee:	int3   
  43fcef:	dec    eax
  43fcf0:	xor    bh,bh
  43fcf2:	popa   
  43fcf3:	inc    DWORD PTR [eax]
  43fcf5:	adc    al,BYTE PTR [eax]
  43fcf7:	loope  0x43fcd6
  43fcf9:	add    BYTE PTR [edi-0x1],dh
  43fcfc:	add    BYTE PTR [ebx+eax*4],ch
  43fcff:	gs push ss
  43fd01:	sub    DWORD PTR ds:0xbecc83,0xffffff8f
  43fd08:	push   es
  43fd09:	call   DWORD PTR [esp+ecx*8+0x0]
  43fd0d:	inc    ebx
  43fd0e:	int3   
  43fd0f:	mov    ebx,0x68ff61
  43fd14:	dec    DWORD PTR [ebx-0x7c85f401]
  43fd1a:	dec    esp
  43fd1b:	(bad)  
  43fd1c:	dec    DWORD PTR [eax]
  43fd1e:	(bad)  
  43fd1f:	mov    esi,0x8930ff72
  43fd24:	add    BYTE PTR [ecx],cl
  43fd26:	add    bl,al
  43fd28:	ins    BYTE PTR es:[edi],dx
  43fd29:	mov    DWORD PTR [esi+0x0],ecx
  43fd2c:	dec    DWORD PTR [edi+edi*8+0x3c]
  43fd30:	imul   edi,edi,0xfffffff9
  43fd33:	add    BYTE PTR [eax],al
  43fd35:	inc    edx
  43fd36:	jmp    DWORD PTR [edi+0x74]
  43fd39:	(bad)  
  43fd3a:	in     al,dx
  43fd3b:	add    BYTE PTR [eax],al
  43fd3d:	stos   DWORD PTR es:[edi],eax
  43fd3e:	(bad)  
  43fd3f:	fld    QWORD PTR [edx+0x83f6ff]
  43fd45:	dec    eax
  43fd46:	(bad)  
  43fd47:	mov    esi,0xc4ff52
  43fd4c:	jmp    DWORD PTR [edi-0x1]
  43fd4f:	mov    ds:0xff86ffd9,al
  43fd54:	int3   
  43fd55:	mov    eax,ds:0x8e7a83
  43fd5a:	dec    eax
  43fd5b:	add    bh,bh
  43fd5d:	test   DWORD PTR [ebx-0x6e76dfaf],0xff00ccff
  43fd67:	inc    esi
  43fd68:	test   al,0xff
  43fd6a:	dec    edx
  43fd6b:	int3   
  43fd6c:	(bad)  
  43fd6d:	fcmovne st,st(4)
  43fd6f:	push   esp
  43fd70:	das    
  43fd71:	jmp    DWORD PTR [edx]
  43fd73:	or     DWORD PTR [ecx-0x5f15ff33],0xffffffff
  43fd7a:	test   al,0x89
  43fd7c:	(bad)  
  43fd7d:	cld    
  43fd7e:	jmp    DWORD PTR [edx-0x887c1b]
  43fd84:	call   FWORD PTR [edi-0x1]
  43fd87:	pop    ebx
  43fd88:	mov    edx,0xff89adff
  43fd8d:	add    BYTE PTR ds:[eax-0x4a00fe],bl
  43fd94:	int3   
  43fd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd96:	call   ebx
  43fd98:	test   BYTE PTR [ebx+0x258300b1],0x89
  43fd9f:	jp     0x43fda8
  43fda1:	add    BYTE PTR [ecx-0x76f0ff01],ch
  43fda7:	inc    esi
  43fda8:	pop    esp
  43fda9:	jmp    DWORD PTR [edi-0x77]
  43fdac:	int3   
  43fdad:	pop    edi
  43fdae:	add    DWORD PTR ds:0xbfffc5,0xffffffff
  43fdb5:	xchg   ecx,eax
  43fdb6:	xor    DWORD PTR [edx-0x7634000a],0xffffffff
  43fdbd:	mov    cl,ah
  43fdbf:	ja     0x43fdb7
  43fdc1:	sbb    DWORD PTR [esi+0x0],0xffffffff
  43fdc5:	aam    0xcc
  43fdc7:	cwde   
  43fdc8:	hlt    
  43fdc9:	dec    edx
  43fdcb:	add    DWORD PTR [eax],0x2
  43fdce:	inc    DWORD PTR [edx]
  43fdd0:	sbb    DWORD PTR gs:[edi+edi*8],0xffffff89
  43fdd5:	xor    DWORD PTR [eax],eax
  43fdd7:	push   ss
  43fdd8:	push   cs
  43fdd9:	jmp    edx
  43fddb:	add    bh,bh
  43fddd:	ror    ah,cl
  43fddf:	sub    al,0x12
  43fde1:	jmp    DWORD PTR [esi]
  43fde3:	mov    DWORD PTR [eax],eax
  43fde5:	pop    ss
  43fde6:	or     DWORD PTR [ecx],0x2f
  43fde9:	add    BYTE PTR ds:0xccd700ff,ah
  43fdef:	leave  
  43fdf0:	js     0x43fdf2
  43fdf2:	pop    ds
  43fdf3:	add    bh,bh
  43fdf5:	ror    DWORD PTR [ecx+0x40ff3962],0x0
  43fdfc:	add    BYTE PTR [esi-0x1],bh
  43fdff:	hlt    
  43fe00:	xchg   ecx,eax
  43fe01:	inc    edx
  43fe03:	inc    DWORD PTR [eax]
  43fe05:	arpl   sp,cx
  43fe07:	inc    ecx
  43fe08:	sub    eax,DWORD PTR [eax]
  43fe0a:	in     al,0xff
  43fe0c:	jmp    FWORD PTR [ebx]
  43fe0e:	jmp    FWORD PTR [edi+ebx*8+0xfffbff]
  43fe15:	push   ebp
  43fe16:	(bad)  
  43fe17:	clc    
  43fe18:	aad    0xcc
  43fe1a:	mov    DWORD PTR [eax],0x60ff3783
  43fe20:	push   edi
  43fe21:	call   DWORD PTR [edi-0x7d]
  43fe24:	jmp    DWORD PTR [eax+eax*1-0x7b]
  43fe28:	rol    DWORD PTR [ebx-0x3a00008b],cl
  43fe2e:	push   DWORD PTR [edi+0xb]
  43fe31:	add    BYTE PTR [edx],bl
  43fe33:	inc    DWORD PTR [eax]
  43fe35:	push   esi
  43fe36:	add    BYTE PTR ds:0xcc5883dd,cl
  43fe3c:	add    dl,ch
  43fe3e:	add    dl,dl
  43fe40:	dec    ebx
  43fe41:	inc    edi
  43fe43:	(bad)  
  43fe44:	jmp    FWORD PTR [ecx-0x99b00]
  43fe4a:	popf   
  43fe4b:	int3   
  43fe4c:	int3   
  43fe4d:	loope  0x43fe4e
  43fe4f:	test   eax,0xffba00d0
  43fe54:	add    BYTE PTR [ebx-0xe8f401],cl
  43fe5a:	mov    WORD PTR [ecx+0x30a5fffe],cx
  43fe61:	and    esp,0xffffffcc
  43fe64:	cmp    edx,0xffffffff
  43fe67:	sbb    eax,0xcc95ff5c
  43fe6c:	mov    ecx,ecx
  43fe6e:	dec    DWORD PTR [ebx-0x37]
  43fe71:	push   esp
  43fe73:	inc    DWORD PTR [eax]
  43fe75:	adc    eax,DWORD PTR [eax]
  43fe77:	cwde   
  43fe78:	ror    DWORD PTR [ecx+0x4a8300ce],cl
  43fe7e:	add    BYTE PTR [ebx-0x76170094],ah
  43fe84:	dec    DWORD PTR ds:0xff77e5ff
  43fe8a:	in     eax,0x0
  43fe8c:	push   DWORD PTR [edi+0x886389]
  43fe92:	(bad)  
  43fe95:	mov    ebx,0xff8bb900
  43fe9a:	call   0xc6fd9f
  43fe9f:	iret   
  43fea0:	popf   
  43fea1:	add    BYTE PTR [eax-0x1],al
  43fea4:	jmp    DWORD PTR [edi-0x1]
  43fea7:	icebp  
  43fea8:	and    edi,edi
  43feaa:	adc    ah,cl
  43feac:	add    BYTE PTR [edi+0x0],bh
  43feaf:	push   eax
  43feb0:	mov    ebp,0xff000800
  43feb5:	imul   eax,DWORD PTR [eax],0x8f836c2b
  43febb:	add    bh,bh
  43febd:	pop    edx
  43febe:	add    cl,ch
  43fec0:	xchg   ebp,eax
  43fec1:	int3   
  43fec2:	jnp    0x43fe4d
  43fec4:	jmp    DWORD PTR [ebx]
  43fec6:	int3   
  43fec7:	jg     0x43fede
  43fec9:	add    BYTE PTR [edi+0xcd0000],dh
  43fecf:	cmp    eax,0xff2a895e
  43fed4:	add    BYTE PTR [edi+edi*8-0x25004552],ah
  43fedb:	inc    DWORD PTR [eax]
  43fedd:	dec    esp
  43fede:	adc    DWORD PTR [ebx+0x73],0xffffffcc
  43fee2:	stos   DWORD PTR es:[edi],eax
  43fee3:	dec    DWORD PTR [ecx+0x57fc8990]
  43fee9:	jmp    DWORD PTR [ebx]
  43feeb:	or     DWORD PTR [ecx-0x62e3006c],0xffffffff
  43fef2:	xchg   esi,eax
  43fef3:	(bad)  
  43fef4:	inc    esi
  43fef6:	int3   
  43fef7:	pop    edi
  43fef8:	or     al,BYTE PTR [eax]
  43fefa:	mov    ebp,0xf5ff00
  43feff:	std    
  43ff00:	pop    ebp
  43ff01:	or     DWORD PTR ds:0xff2789ff,0x66
  43ff08:	hlt    
  43ff09:	call   DWORD PTR ds:0x83cd8983
  43ff0f:	cmp    BYTE PTR [edx+0xffa9ff],ch
  43ff15:	adc    al,0x0
  43ff17:	and    edx,DWORD PTR [ecx]
  43ff19:	cmp    DWORD PTR [esi-0x460001],0x23
  43ff20:	push   cs
  43ff21:	dec    edi
  43ff23:	cmp    edi,0xe
  43ff26:	sbb    DWORD PTR [esi-0x34],0xffffffff
  43ff2a:	jne    0x43ff2c
  43ff2c:	dec    esi
  43ff2e:	push   DWORD PTR [edi]
  43ff30:	sub    DWORD PTR ds:[edx-0x1],0xffffffff
  43ff35:	mov    edi,edi
  43ff37:	cs sar bh,1
  43ff3a:	xchg   esp,eax
  43ff3b:	add    BYTE PTR [ecx-0x428a0092],cl
  43ff41:	(bad)  
  43ff42:	mov    eax,0x3eff00
  43ff47:	cmp    edx,DWORD PTR [edi]
  43ff49:	call   DWORD PTR [edx]
  43ff4b:	or     esp,0xffffffde
  43ff4e:	inc    DWORD PTR [ebx-0x9000d3]
  43ff54:	add    esp,0xffffffff
  43ff57:	in     eax,dx
  43ff58:	push   ds
  43ff59:	add    BYTE PTR [esi],ah
  43ff5b:	add    bh,bh
  43ff5d:	pushf  
  43ff5e:	add    DWORD PTR [edx+esi*4-0x7d],0xffffffa1
  43ff63:	int3   
  43ff64:	add    DWORD PTR [ebx+eax*4+0x13],0xfffffff2
  43ff69:	adc    esp,0x0
  43ff6c:	int3   
  43ff6d:	xchg   ecx,eax
  43ff6e:	int3   
  43ff6f:	mov    bl,0xd4
  43ff71:	add    BYTE PTR [ecx],cl
  43ff73:	inc    DWORD PTR [eax]
  43ff75:	cs inc ecx
  43ff78:	test   bh,bh
  43ff7a:	mov    eax,ds:0xff5783cc
  43ff7f:	xor    ah,al
  43ff81:	add    BYTE PTR [eax+eax*1+0x69ff16ff],ah
  43ff88:	cmp    bh,bh
  43ff8a:	dec    edx
  43ff8b:	mov    edi,edi
  43ff8d:	repnz call FWORD PTR [ecx]
  43ff90:	xchg   esp,eax
  43ff91:	mov    DWORD PTR [ebp-0x7d],ebx
  43ff94:	inc    DWORD PTR [eax]
  43ff96:	xor    DWORD PTR [ecx+0xd5007b],0x0
  43ff9d:	loop   0x43ff9e
  43ff9f:	repz fwait
  43ffa1:	dec    DWORD PTR [ebx]
  43ffa3:	(bad)  
  43ffa4:	call   FWORD PTR [ecx-0x1]
  43ffa7:	jo     0x43ffc5
  43ffa9:	int3   
  43ffaa:	or     bh,bh
  43ffac:	add    eax,0xffffffff
  43ffaf:	faddp  st(0),st
  43ffb1:	cmp    DWORD PTR [esi-0x76b67c7d],0xffffff9c
  43ffb8:	cmp    edi,edi
  43ffba:	fwait
  43ffbb:	or     DWORD PTR [ecx+0x557000a6],0xffffffff
  43ffc2:	mov    esp,0x898883ff
  43ffc7:	mov    eax,0xff36002d
  43ffcc:	add    BYTE PTR [edi-0x7d],dl
  43ffcf:	cli    
  43ffd0:	or     cl,BYTE PTR [ecx+0x300ff4a]
  43ffd6:	mov    DWORD PTR [ebx+0x8883b1],ebp
  43ffdc:	add    cl,ch
  43ffde:	cmp    DWORD PTR [esi-0x59],0x0
  43ffe2:	adc    edi,edi
  43ffe4:	inc    DWORD PTR [edx-0xb39f01]
  43ffea:	idiv   edi
  43ffec:	cmp    esi,0xffffffff
  43ffef:	and    BYTE PTR [esi],0xff
  43fff2:	add    eax,0xff670083
  43fff7:	and    eax,0x1d8350
  43fffc:	jmp    FWORD PTR [edi+edi*8]
  43ffff:	imul   ebp,DWORD PTR [edx],0x83004a00
  440005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440006:	push   DWORD PTR [ebx-0x71]
  440009:	sbb    DWORD PTR [edi-0x7d],0xffffffff
  44000d:	xor    eax,0xff41a7ff
  440012:	lods   eax,DWORD PTR ds:[esi]
  440013:	inc    DWORD PTR [eax]
  440015:	adc    ecx,esp
  440017:	jno    0x440071
  440019:	inc    DWORD PTR ds:0x89ea0089
  44001f:	and    edi,edx
  440021:	call   FWORD PTR [eax+eax*1-0x6affc201]
  440028:	cmp    eax,0xcc75ff
  44002d:	dec    edx
  44002e:	int3   
  44002f:	cwde   
  440030:	sbb    DWORD PTR [ecx-0x43330070],ecx
  440036:	int3   
  440037:	cmp    esi,DWORD PTR [edx]
  440039:	call   DWORD PTR [eax]
  44003b:	add    ah,cl
  44003d:	and    bh,bh
  44003f:	sti    
  440040:	cmp    eax,0xffffcb89
  440045:	jg     0x440047
  440047:	sbb    eax,0xff590079
  44004c:	mov    DWORD PTR [edx],esi
  44004e:	call   DWORD PTR [edi]
  440050:	ins    BYTE PTR es:[edi],dx
  440051:	add    al,ah
  440053:	add    BYTE PTR [eax],al
  440055:	mov    eax,ds:0x83efce00
  44005a:	add    BYTE PTR gs:[eax],al
  44005d:	pop    ebp
  44005e:	mov    DWORD PTR [edi-0xe5004f],esi
  440064:	inc    DWORD PTR [esi-0x33442e01]
  44006a:	mov    ah,0xff
  44006c:	(bad)  
  44006d:	mov    ebp,0x6d6683
  440072:	sbb    al,0x0
  440074:	dec    DWORD PTR [esi]
  440076:	and    DWORD PTR [edi],0x6a
  440079:	mov    DWORD PTR ds:0x89150083,esp
  44007f:	int3   
  440080:	add    al,0x0
  440082:	or     cl,ah
  440084:	sub    DWORD PTR [edx-0x7c42d134],0x6d
  44008b:	mov    edi,edi
  44008d:	(bad)  
  44008e:	call   DWORD PTR [ecx]
  440090:	jecxz  0x44001b
  440092:	mov    esp,0xff5883cc
  440097:	ret    0x88
  44009a:	call   0x4cac:0xff1e0000
  4400a1:	add    BYTE PTR [edi+0x9400ff],dh
  4400a7:	add    al,BYTE PTR [ebx]
  4400a9:	jmp    FWORD PTR [esi]
  4400ab:	(bad)  
  4400ac:	(bad)  
  4400ad:	js     0x4400af
  4400af:	mov    fs,WORD PTR [edi+edi*8]
  4400b2:	adc    eax,0xfff3ff89
  4400b7:	jle    0x4400ff
  4400b9:	adc    esi,0xffffffff
  4400bc:	add    BYTE PTR [edi+0x0],dh
  4400bf:	mov    es,WORD PTR [edx+0xff]
  4400c5:	cmp    edi,edi
  4400c7:	pop    ecx
  4400c8:	test   BYTE PTR [eax],al
  4400ca:	outs   dx,BYTE PTR ds:[esi]
  4400cb:	inc    DWORD PTR [eax]
  4400cd:	push   ebx
  4400ce:	jmp    FWORD PTR [edx-0x32]
  4400d1:	add    dh,ah
  4400d3:	add    BYTE PTR [eax],al
  4400d5:	push   0xffffff83
  4400d7:	push   ebx
  4400d8:	fwait
  4400d9:	add    BYTE PTR [edx],bh
  4400db:	add    bh,bh
  4400dd:	call   DWORD PTR fs:[esi+ebp*4-0x7c000b00]
  4400e5:	add    al,BYTE PTR [ebx-0x4d003469]
  4400eb:	int3   
  4400ec:	add    BYTE PTR [ecx-0x34],cl
  4400ef:	cmp    al,0x76
  4400f1:	dec    DWORD PTR [edi+edi*8-0x1]
  4400f5:	mov    esp,cs
  4400f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4400f8:	iret   
  4400f9:	sub    DWORD PTR [edi-0x2e0100],0x19
  440100:	cli    
  440101:	dec    DWORD PTR [ecx+ecx*4]
  440104:	dec    esi
  440106:	dec    DWORD PTR [edi+ebx*4-0xc501]
  44010d:	jmp    0xff3c:0x83b8b8ff
  440114:	jmp    ecx
  440116:	add    BYTE PTR [esi-0x4c],bh
  440119:	xor    DWORD PTR [esi],0xffffffff
  44011c:	call   DWORD PTR ds:0xffd225ff
  440122:	add    BYTE PTR ss:[ebx+0x653b0074],al
  440129:	call   FWORD PTR [esi-0x77]
  44012c:	add    BYTE PTR ds:0xccec0e00,dl
  440132:	sbb    eax,DWORD PTR [ebx-0x62ff0201]
  440138:	mov    DWORD PTR [eax],0xf6ff0081
  44013e:	int3   
  44013f:	ss jae 0x440142
  440142:	fdivp  st(7),st
  440144:	(bad)  
  440145:	mov    edi,0xffebc3ff
  44014a:	push   ds
  44014b:	int3   
  44014c:	inc    DWORD PTR [ebp-0x7ca3b201]
  440152:	out    0xff,eax
  440154:	add    BYTE PTR [edi],ah
  440156:	jmp    DWORD PTR [eax]
  440158:	ret    0x889
  44015b:	(bad)  
  44015c:	inc    ebx
  44015e:	add    BYTE PTR [ebx+eiz*2+0x0],bl
  440162:	cmp    BYTE PTR [ebx-0x5008f01],al
  440168:	repz jmp FWORD PTR [edx-0x1]
  44016c:	(bad)  
  44016d:	jp     0x44016e
  44016f:	mov    edx,0xffd4ff6a
  440174:	sub    esi,0xffffffcc
  440177:	scas   al,BYTE PTR es:[edi]
  440178:	cmp    eax,0xffccaeff
  44017d:	add    edi,edi
  44017f:	mov    DWORD PTR [ebp+0x0],edi
  440182:	jg     0x440184
  440184:	add    BYTE PTR [ebx+0xb30acc],dl
  44018a:	stc    
  44018b:	cmp    edi,0xffffffe9
  44018e:	int3   
  44018f:	dec    ebp
  440190:	add    BYTE PTR [eax],0xa4
  440193:	or     DWORD PTR [ecx+0x5a9f00d8],0xffffffff
  44019a:	add    al,0x0
  44019c:	add    BYTE PTR [ecx-0x1],dl
  44019f:	(bad)  
  4401a1:	add    BYTE PTR [edi],al
  4401a3:	int3   
  4401a4:	add    ah,dl
  4401a6:	int3   
  4401a7:	jns    0x4401f4
  4401a9:	mov    DWORD PTR [eax],edi
  4401ab:	inc    DWORD PTR [eax]
  4401ad:	mov    esi,0x4e3acc
  4401b2:	push   esp
  4401b3:	(bad)  
  4401b4:	jmp    DWORD PTR [esi-0x948377]
  4401ba:	pop    esp
  4401bb:	add    BYTE PTR [eax],al
  4401bd:	retf   
  4401be:	call   DWORD PTR [edi+0x82ff3f]
  4401c4:	dec    DWORD PTR [ecx-0x5f857d]
  4401ca:	popf   
  4401cb:	add    bh,bh
  4401cd:	test   al,0x0
  4401cf:	repnz aaa 
  4401d1:	jmp    FWORD PTR [esi-0x7c4d007d]
  4401d7:	push   cs
  4401d8:	push   es
  4401d9:	jmp    DWORD PTR [ebx+eax*4-0x1]
  4401dd:	stos   BYTE PTR es:[edi],al
  4401de:	dec    ebx
  4401e0:	dec    ebx
  4401e1:	dec    DWORD PTR [eax+0x0]
  4401e4:	dec    ebp
  4401e6:	dec    DWORD PTR [ebx]
  4401e8:	int3   
  4401e9:	add    BYTE PTR [ebp-0x1],ah
  4401ec:	int3   
  4401ed:	fdivr  st,st(7)
  4401ef:	not    BYTE PTR [edi-0x34]
  4401f2:	mov    bl,0x0
  4401f4:	add    BYTE PTR [ebx-0x7d],cl
  4401f7:	jbe    0x440240
  4401f9:	or     DWORD PTR [ebx-0xc77d00],0x6c
  440200:	jno    0x4401ce
  440202:	adc    esp,ecx
  440204:	cmp    DWORD PTR [ebx-0x1],0x33
  440208:	stos   DWORD PTR es:[edi],eax
  440209:	call   FWORD PTR [ecx-0x2cff77]
  44020f:	sar    DWORD PTR [ebx-0x34],cl
  440212:	push   ebp
  440213:	inc    DWORD PTR [eax]
  440215:	call   0x89ce:0xff66f583
  44021c:	(bad)  
  44021d:	js     0x44021e
  44021f:	lds    ebp,FWORD PTR [ebx+eax*4]
  440222:	add    edi,edi
  440224:	(bad)  
  440225:	std    
  440226:	mov    DWORD PTR [edi-0x27],eax
  440229:	push   DWORD PTR [esi+0x0]
  44022c:	inc    DWORD PTR [ecx+0x0]
  44022f:	or     esi,DWORD PTR [esi+0x0]
  440232:	pop    ss
  440233:	add    DWORD PTR [ebx+0x4910ff98],0xffffffff
  44023a:	cwde   
  44023b:	inc    DWORD PTR [ebx-0x1647ffdc]
  440241:	add    BYTE PTR [ebx-0x7c787c01],bl
  440247:	sub    eax,0xff6affae
  44024c:	sub    DWORD PTR [eax-0x5f6d7d],0x28
  440253:	inc    DWORD PTR [ebx-0x43610067]
  440259:	mov    DWORD PTR [ebx],ebp
  44025b:	(bad)  
  44025c:	inc    DWORD PTR [ebx]
  44025e:	jmp    esi
  440260:	mov    cs,esp
  440262:	int    0xcc
  440264:	cmp    DWORD PTR [esi+0xc63183],0xfffffff5
  44026b:	add    BYTE PTR [eax],al
  44026d:	jecxz  0x44026f
  44026f:	stos   BYTE PTR es:[edi],al
  440270:	or     BYTE PTR [ecx-0x287cffbf],0xcc
  440277:	fdiv   QWORD PTR [edx-0x7c000d01]
  44027d:	dec    esi
  44027e:	add    BYTE PTR [eax],bh
  440280:	sub    BYTE PTR [eax],al
  440282:	push   edi
  440283:	int3   
  440284:	add    BYTE PTR [eax-0x1],dh
  440287:	mov    ds:0x89700050,al
  44028c:	add    BYTE PTR [edi+0x0],dh
  44028f:	mov    bl,BYTE PTR [ebx-0x1]
  440292:	mov    ebx,0xff5dff00
  440297:	neg    DWORD PTR [edx-0x7c001e01]
  44029d:	out    0xff,eax
  44029f:	push   esi
  4402a0:	fiadd  WORD PTR [eax]
  4402a2:	xchg   edx,eax
  4402a3:	add    BYTE PTR [eax],al
  4402a5:	cmc    
  4402a6:	mov    DWORD PTR [ebx*1-0x7c597d],ebp
  4402ad:	js     0x4402af
  4402af:	pop    esp
  4402b0:	loop   0x4402b1
  4402b2:	pop    ds
  4402b3:	add    BYTE PTR [eax],al
  4402b5:	stc    
  4402b6:	add    BYTE PTR [edx],al
  4402b8:	retf   0xfe83
  4402bb:	int3   
  4402bc:	dec    DWORD PTR [ebx-0x76441800]
  4402c2:	ins    BYTE PTR es:[edi],dx
  4402c3:	(bad)  
  4402c4:	push   ebp
  4402c6:	jmp    DWORD PTR [edx-0x59]
  4402c9:	mov    DWORD PTR [eax+eax*1],edi
  4402cc:	jmp    DWORD PTR [edx-0x7c323801]
  4402d2:	sbb    al,BYTE PTR [eax]
  4402d4:	mov    eax,esp
  4402d6:	(bad)  
  4402d7:	fisubr DWORD PTR [edx-0x7c00b301]
  4402dd:	fs add dl,al
  4402e0:	pop    ss
  4402e1:	(bad)  
  4402e2:	(bad)  
  4402e4:	call   ebx
  4402e6:	add    BYTE PTR [esp+esi*2],dh
  4402e9:	int3   
  4402ea:	sar    bh,cl
  4402ec:	add    BYTE PTR [eax-0x33f1d600],cl
  4402f2:	sahf   
  4402f3:	(bad)  
  4402f4:	inc    DWORD PTR [ebx+eax*4+0x55]
  4402f8:	(bad)  
  4402f9:	int3   
  4402fa:	jae    0x44027f
  4402fc:	add    BYTE PTR [eax+0x0],dh
  4402ff:	push   edx
  440300:	push   ebp
  440301:	jmp    DWORD PTR ds:0xffff0000
  440307:	push   ds
  440308:	xor    al,BYTE PTR [eax]
  44030a:	jecxz  0x44030b
  44030c:	(bad)  
  44030d:	cmp    al,0xff
  44030f:	xor    eax,0xecff00
  440314:	(bad)  
  440315:	in     eax,dx
  440316:	add    ch,ch
  440318:	lock add BYTE PTR ds:0xffe083ff,cl
  44031f:	loop   0x4402e1
  440321:	int3   
  440322:	cmp    cl,ah
  440324:	add    BYTE PTR [eax+eax*1],ch
  440327:	jmp    0x440358
  440329:	add    BYTE PTR [ebx-0x76050034],bh
  44032f:	int3   
  440330:	(bad)  
  440331:	push   DWORD PTR [ebp+0x5b00ff]
  440337:	jnp    0x44036a
  440339:	call   esi
  44033b:	add    bh,bh
  44033d:	mov    esp,0xb9b3cc
  440342:	push   es
  440343:	add    DWORD PTR [ebx-0x43f2337d],0xffffffff
  44034a:	loop   0x4402cf
  44034c:	add    BYTE PTR [esi],al
  44034e:	call   FWORD PTR [ebp+0x2c]
  440351:	dec    DWORD PTR [esi+0x0]
  440354:	call   FWORD PTR [edi+edi*8+0x76]
  440358:	push   cs
  440359:	sbb    DWORD PTR [ebx+0x0],0xffffffff
  44035d:	out    0xff,al
  44035f:	dec    esi
  440360:	loop   0x44032e
  440362:	arpl   sp,cx
  440364:	sub    DWORD PTR [eax-0x77],0xfffffff8
  440368:	jnp    0x4402f3
  44036a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44036b:	add    BYTE PTR [eax],al
  44036d:	mov    WORD PTR [eax],es
  44036f:	scas   eax,DWORD PTR es:[edi]
  440370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440371:	int3   
  440372:	loopne 0x440340
  440374:	jmp    DWORD PTR [eax-0x34]
  440377:	stos   BYTE PTR es:[edi],al
  440378:	popf   
  440379:	int3   
  44037a:	cld    
  44037b:	add    bh,bh
  44037d:	mov    eax,0xff21af00
  440382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440383:	add    BYTE PTR [ecx-0x509b7694],cl
  440389:	add    BYTE PTR [edx-0x1],al
  44038c:	add    BYTE PTR [ecx+0x0],dl
  44038f:	out    0x5c,al
  440391:	add    BYTE PTR [esi-0x7ca77c01],cl
  440397:	mov    bl,0x2
  440399:	add    al,bl
  44039b:	add    BYTE PTR [ebx-0x19c2ffdf],al
  4403a1:	add    cl,al
  4403a3:	inc    DWORD PTR [ebx+0x535b00e2]
  4403a9:	dec    DWORD PTR ds:0xccd9ff89
  4403af:	mov    bh,0xaa
  4403b1:	add    BYTE PTR ds:0x831cffcc,ah
  4403b7:	push   ds
  4403b8:	repz jmp FWORD PTR [edi+0x0]
  4403bc:	add    al,bh
  4403be:	add    BYTE PTR [ebx],dl
  4403c0:	mov    WORD PTR [ecx+0x41ccff8c],cs
  4403c6:	add    BYTE PTR [esi-0xa17ce2],ch
  4403cc:	jmp    DWORD PTR [eax-0x7d]
  4403cf:	mov    edx,0xff4bff58
  4403d4:	xor    DWORD PTR [ebp+0x0],0xffffffe4
  4403d8:	(bad)  
  4403d9:	(bad)  
  4403da:	fdivp  st(7),st
  4403dc:	push   edi
  4403de:	add    bl,bl
  4403e0:	mov    edi,?
  4403e2:	cmp    edi,edi
  4403e4:	sub    DWORD PTR [edi+edi*8-0x4],0x45
  4403e9:	mov    DWORD PTR [eax+0x0],esp
  4403ec:	sbb    DWORD PTR [eax-0x1],0xffffffd4
  4403f0:	jge    0x4403f2
  4403f2:	jecxz  0x4403f3
  4403f4:	mov    DWORD PTR [ecx+0xf820ff],esi
  4403fa:	cli    
  4403fb:	(bad)  
  4403fc:	inc    DWORD PTR [edx]
  4403fe:	int3   
  4403ff:	jnp    0x44041e
  440401:	dec    DWORD PTR [edi]
  440403:	dec    esp
  440405:	les    ecx,FWORD PTR [ecx+0x6eff814f]
  44040b:	inc    DWORD PTR [ebx+0x70c800e2]
  440411:	add    cl,dh
  440413:	inc    DWORD PTR [ebx-0x5417767b]
  440419:	add    dh,bh
  44041b:	(bad)  
  44041c:	jmp    DWORD PTR [edi]
  44041e:	dec    DWORD PTR [edx]
  440420:	cmp    eax,DWORD PTR [eax]
  440422:	icebp  
  440423:	(bad)  
  440424:	dec    DWORD PTR [ebx]
  440426:	call   FWORD PTR [ebp-0x7c3e7cdf]
  44042c:	push   DWORD PTR [esi]
  44042e:	(bad)  
  44042f:	fdiv   QWORD PTR [ebx+eax*4]
  440432:	sub    eax,0x18ff83
  440437:	inc    edx
  440438:	int3   
  440439:	add    BYTE PTR [edi-0xd77700],al
  44043f:	sbb    BYTE PTR [esi-0x1],ah
  440442:	sbb    edi,edi
  440444:	add    BYTE PTR [ebp-0x34],cl
  440447:	jg     0x44042f
  440449:	add    edi,0xffffff89
  44044c:	add    BYTE PTR [ebx],dh
  44044e:	add    BYTE PTR [esi-0x49],dl
  440451:	add    BYTE PTR [ebx],bl
  440453:	add    BYTE PTR [ecx+0x3f71fff0],cl
  440459:	add    cl,ah
  44045b:	inc    DWORD PTR [eax]
  44045d:	loopne 0x4403e8
  44045f:	cmp    edi,DWORD PTR [ecx-0x1]
  440462:	test   eax,0xffbfff00
  440467:	sbb    edx,DWORD PTR [esi+0xff5d00]
  44046d:	aad    0x0
  44046f:	sub    bh,BYTE PTR [eax-0x1]
  440472:	push   0xa500ff
  440477:	fcmovu st,st(7)
  440479:	push   esp
  44047b:	add    bh,bh
  44047d:	xchg   esi,eax
  44047e:	dec    esp
  440480:	test   al,0xff
  440482:	fiadd  DWORD PTR [eax]
  440484:	add    BYTE PTR [edi],al
  440486:	int3   
  440487:	sbb    DWORD PTR [edi],esp
  440489:	add    BYTE PTR [edx-0x34],bl
  44048c:	or     DWORD PTR ds:0xef91ff,0xffffffe9
  440493:	add    BYTE PTR [eax],al
  440495:	(bad)  
  440496:	dec    esi
  440498:	and    edi,edi
  44049a:	sbb    ah,cl
  44049c:	inc    esp
  44049e:	add    BYTE PTR [ecx-0xf],al
  4404a1:	sub    DWORD PTR [ecx-0x1],0xffffffff
  4404a5:	mov    edi,edi
  4404a7:	femms  
  4404a9:	(bad)  
  4404aa:	jmp    0xcbe6:0xdc0000
  4404b1:	int3   
  4404b2:	stc    
  4404b3:	add    DWORD PTR [eax],0x74
  4404b6:	dec    DWORD PTR [ebx+ebx*4+0x2589]
  4404bd:	jle    0x4404bf
  4404bf:	cmp    edx,DWORD PTR [edi+edi*8]
  4404c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4404c3:	mov    DWORD PTR [ebx+0x3edd00c7],eax
  4404c9:	mov    DWORD PTR [eax+eax*1],esp
  4404cc:	add    ah,dl
  4404ce:	mov    DWORD PTR [edx],ebx
  4404d0:	sahf   
  4404d1:	dec    DWORD PTR [edx]
  4404d3:	(bad)  
  4404d4:	inc    DWORD PTR [eax+0x0]
  4404d7:	or     eax,0x11ff96
  4404dc:	dec    DWORD PTR [ecx-0x7c4b5b00]
  4404e2:	sub    bh,bh
  4404e4:	call   FWORD PTR [ecx-0xe3fa01]
  4404ea:	fld    DWORD PTR [eax]
  4404ec:	jmp    FWORD PTR [ecx-0x34]
  4404ef:	and    dl,ah
  4404f1:	(bad)  
  4404f2:	clc    
  4404f3:	dec    esp
  4404f5:	mov    ds:0xfff0dbff,eax
  4404fa:	retf   
  4404fb:	add    BYTE PTR [ebx-0x5e9c7c38],al
  440501:	or     DWORD PTR [edx-0x1],0xffffff83
  440505:	arpl   WORD PTR [eax],ax
  440507:	(bad)  
  440508:	xor    DWORD PTR [ebx-0x7d007646],eax
  44050e:	add    BYTE PTR [ebx],ah
  440510:	jno    0x440512
  440512:	jns    0x440513
  440514:	sbb    DWORD PTR [ebx-0xb3601],0x7a
  44051b:	int3   
  44051c:	add    BYTE PTR [edi],al
  44051e:	jmp    FWORD PTR [ecx-0x2b]
  440521:	add    ah,al
  440523:	add    BYTE PTR [ebx+0x1770ff0d],al
  440529:	cmp    DWORD PTR [eax-0xf0000],0xffffffe8
  440530:	cmc    
  440531:	call   DWORD PTR [ebx+eax*4+0x79ff8400]
  440538:	dec    ebx
  440539:	call   DWORD PTR [eax-0x33317d00]
  44053f:	test   BYTE PTR [eax],bl
  440541:	int3   
  440542:	(bad)  
  440543:	(bad)  
  440544:	jmp    DWORD PTR [ebp-0x7d]
  440547:	jae    0x440545
  440549:	add    BYTE PTR [ecx-0x34],al
  44054c:	jmp    DWORD PTR [edi]
  44054e:	call   FWORD PTR [eax-0x4c]
  440551:	(bad)  
  440552:	mov    ebp,0xffbbffff
  440557:	int3   
  440558:	out    dx,al
  440559:	mov    DWORD PTR [edx+0x0],esp
  44055c:	push   ebp
  44055e:	jmp    DWORD PTR [ebx]
  440560:	xchg   ecx,eax
  440561:	int3   
  440562:	xor    DWORD PTR [eax],eax
  440564:	call   FWORD PTR [ebp-0x1]
  440567:	into   
  440568:	jp     0x4404ed
  44056a:	push   es
  44056b:	add    bh,bh
  44056d:	stos   BYTE PTR es:[edi],al
  44056e:	dec    DWORD PTR [ecx+edi*2]
  440571:	(bad)  
  440572:	out    dx,al
  440573:	add    BYTE PTR [eax],al
  440575:	(bad)  
  440577:	loope  0x4405e7
  440579:	(bad)  
  44057a:	cmp    BYTE PTR [ebx-0x2fff2201],al
  440580:	rol    BYTE PTR [ebx+0x16ff0024],1
  440586:	add    cl,bh
  440588:	mov    ds:0x6dff,al
  44058d:	fcos   
  44058f:	imul   ecx,esi,0xffffff83
  440592:	jbe    0x440594
  440594:	add    BYTE PTR [eax+eax*1+0x5c],ah
  440598:	xchg   ebp,eax
  440599:	add    BYTE PTR [esi-0x77],ch
  44059c:	sbb    DWORD PTR [ecx-0x34],0x7
  4405a0:	inc    esp
  4405a1:	call   ecx
  4405a3:	mov    DWORD PTR [eax],eax
  4405a5:	out    dx,al
  4405a6:	adc    DWORD PTR [ebx+edx*8-0x1],0x7f
  4405ab:	inc    DWORD PTR [ebx+0x643d83ae]
  4405b1:	(bad)  
  4405b2:	mov    esi,0xffe30000
  4405b7:	jae    0x440610
  4405b9:	(bad)  
  4405ba:	jge    0x4405bc
  4405bc:	call   edi
  4405be:	dec    DWORD PTR [edi]
  4405c0:	(bad)  
  4405c2:	scas   eax,DWORD PTR es:[edi]
  4405c3:	int3   
  4405c4:	add    BYTE PTR [eax-0x1],ah
  4405c7:	pop    esi
  4405c8:	dec    edx
  4405c9:	(bad)  
  4405ca:	mov    eax,0xff9cff00
  4405cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4405d0:	mov    cl,0x83
  4405d2:	jl     0x4405d3
  4405d4:	adc    DWORD PTR [edx],0xffffff83
  4405d7:	sub    edi,eax
  4405d9:	jmp    DWORD PTR [eax-0x7c810100]
  4405df:	lods   al,BYTE PTR ds:[esi]
  4405e0:	jmp    0xff44fce5
  4405e5:	aaa    
  4405e6:	add    BYTE PTR [edi-0x7c1eff26],al
  4405ec:	cmp    eax,0xffffffff
  4405ef:	jle    0x440655
  4405f1:	add    BYTE PTR [ecx],ah
  4405f3:	dec    esp
  4405f5:	stc    
  4405f6:	add    BYTE PTR [ebp-0x7cfeff08],al
  4405fc:	add    DWORD PTR [edx-0x34],0xffffffa1
  440600:	inc    esp
  440601:	inc    DWORD PTR [esi]
  440603:	or     esp,0xfffffff7
  440606:	add    BYTE PTR ds:0xff5eff60,dl
  44060c:	call   DWORD PTR [edx]
  44060e:	add    bh,cl
  440610:	xchg   ebp,eax
  440611:	inc    DWORD PTR [edi]
  440613:	cmp    edi,0x36
  440616:	add    BYTE PTR [ebx+0x7c],cl
  440619:	add    BYTE PTR [edi+edi*8-0x3d33b800],bl
  440620:	sub    al,0xff
  440622:	ret    0x8983
  440625:	xor    bh,bh
  440627:	and    eax,0xffc6835b
  44062c:	add    BYTE PTR [edi-0x1],bh
  44062f:	pop    ss
  440630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440631:	mov    DWORD PTR [ebx+eax*4-0x34],edi
  440635:	pop    DWORD PTR [ebx-0x283356bf]
  44063b:	mov    DWORD PTR [eax],eax
  44063d:	push   cs
  44063e:	add    ah,bl
  440640:	pop    esi
  440641:	jmp    DWORD PTR [esi+0x640089]
  440647:	enter  0x7b,0x13
  44064b:	add    BYTE PTR [eax],al
  44064d:	je     0x44061b
  44064f:	pop    ecx
  440650:	inc    DWORD PTR cs:[edi-0x763b0000]
  440657:	dec    eax
  440658:	ss (bad) 
  44065a:	cmp    al,0x0
  44065c:	dec    esi
  44065e:	add    BYTE PTR [esi],al
  440660:	adc    eax,0x3000
  440665:	sub    al,BYTE PTR [ebx-0x573322c1]
  44066b:	add    BYTE PTR [eax],al
  44066d:	and    al,BYTE PTR [ebx-0x380088d4]
  440673:	add    bh,bh
  440675:	jbe    0x440677
  440677:	push   ss
  440678:	(bad)  
  440679:	push   ecx
  44067b:	(bad)  
  44067c:	dec    DWORD PTR [edi+edi*8-0x28008b20]
  440683:	(bad)  
  440684:	inc    DWORD PTR [edi+0x2b00]
  44068a:	pop    eax
  44068b:	inc    DWORD PTR [eax]
  44068d:	mov    al,0x0
  44068f:	iret   
  440690:	clc    
  440691:	add    BYTE PTR [edi-0x34ff01],dh
  440697:	pop    ebp
  440698:	or     al,0x0
  44069a:	push   es
  44069b:	inc    DWORD PTR [eax]
  44069d:	xchg   ebx,eax
  44069e:	add    BYTE PTR [eax+0x67],bl
  4406a1:	dec    DWORD PTR [edx-0x387c01]
  4406a7:	push   ecx
  4406a8:	(bad)  
  4406aa:	ret    
  4406ab:	add    DWORD PTR [eax],0x11
  4406ae:	(bad)  
  4406af:	ficom  WORD PTR [eax+eax*1]
  4406b2:	push   ss
  4406b3:	int3   
  4406b4:	add    cl,bh
  4406b6:	adc    DWORD PTR [eax+esi*4],0x0
  4406ba:	cmc    
  4406bb:	(bad)  
  4406bc:	jmp    edi
  4406be:	inc    eax
  4406c0:	stos   BYTE PTR es:[edi],al
  4406c1:	add    BYTE PTR [edi],bh
  4406c3:	add    bh,bh
  4406c5:	jb     0x4406c6
  4406c7:	add    eax,0x83b5001b
  4406cc:	(bad)  
  4406cd:	clc    
  4406ce:	(bad)  
  4406cf:	mov    ebx,0x8392ff3e
  4406d4:	mov    DWORD PTR [esi-0x7691e200],edx
  4406da:	cmp    edi,0x7700eaff
  4406e0:	add    DWORD PTR [eax],0x8f00ff68
  4406e6:	push   eax
  4406e8:	sti    
  4406e9:	inc    DWORD PTR ds:0x47ffff
  4406ef:	dec    DWORD PTR [ecx]
  4406f1:	adc    DWORD PTR [eax-0x763dff34],0x19
  4406f8:	mov    dh,0x0
  4406fa:	leave  
  4406fb:	inc    DWORD PTR [eax]
  4406fd:	sub    bh,bh
  4406ff:	and    BYTE PTR ds:0x830003ff,bl
  440705:	das    
  440706:	call   FWORD PTR [ecx-0x26]
  440709:	add    BYTE PTR [edx+0x1d89ff],bl
  44070f:	scas   al,BYTE PTR es:[edi]
  440710:	adc    eax,0xb883
  440715:	inc    ebx
  440716:	add    BYTE PTR [edx],ch
  440718:	or     al,0x83
  44071a:	scas   eax,DWORD PTR es:[edi]
  44071b:	add    bh,bh
  44071d:	sbb    eax,DWORD PTR [eax]
  44071f:	das    
  440720:	imul   eax,DWORD PTR [eax],0x43ff00c5
  440726:	add    BYTE PTR [esi-0x41],bl
  440729:	call   esi
  44072b:	cmp    edi,0xffffffeb
  44072e:	add    BYTE PTR [ebp-0x760f00bc],bl
  440734:	mov    DWORD PTR [eax],esp
  440736:	call   DWORD PTR [eax+0x1e]
  440739:	xor    DWORD PTR [eax+0x3eff89],0x35
  440740:	mov    ds:0x83ff9300,al
  440745:	lds    eax,FWORD PTR [ebx+0x19ff5c32]
  44074b:	(bad)  
  44074c:	inc    DWORD PTR [edi]
  44074e:	call   FWORD PTR [ebp-0x7f]
  440751:	in     al,dx
  440752:	sbb    al,0x5
  440754:	add    BYTE PTR [eax],al
  440756:	push   ebx
  440757:	push   ebp
  440758:	push   esi
  440759:	push   edi
  44075a:	call   DWORD PTR ds:0x444044
  440760:	mov    edx,DWORD PTR ds:0x4470a0
  440766:	movzx  esi,BYTE PTR [edx+0x4]
  44076a:	mov    ebx,eax
  44076c:	movzx  eax,BYTE PTR [edx+0x7]
  440770:	movzx  edx,WORD PTR [edx]
  440773:	mov    ecx,DWORD PTR ds:0x447d00
  440779:	shl    eax,0x8
  44077c:	add    eax,esi
  44077e:	shl    eax,0x10
  440781:	add    eax,edx
  440783:	mov    edx,DWORD PTR ds:0x447cfc
  440789:	mov    ds:0x447cf0,eax
  44078e:	add    edx,0xf50eb233
  440794:	xor    edx,eax
  440796:	mov    DWORD PTR [ecx],edx
  440798:	mov    edx,DWORD PTR ds:0x4470a0
  44079e:	add    edx,0x8
  4407a1:	mov    DWORD PTR ds:0x4470a0,edx
  4407a7:	movzx  eax,BYTE PTR [edx+0x7]
  4407ab:	movzx  esi,BYTE PTR [edx+0x4]
  4407af:	movzx  edx,WORD PTR [edx]
  4407b2:	shl    eax,0x8
  4407b5:	add    eax,esi
  4407b7:	shl    eax,0x10
  4407ba:	add    eax,edx
  4407bc:	mov    edx,DWORD PTR ds:0x447cfc
  4407c2:	mov    ds:0x447cf0,eax
  4407c7:	add    edx,0xf50eb233
  4407cd:	xor    edx,eax
  4407cf:	mov    DWORD PTR [ecx+0x4],edx
  4407d2:	mov    edx,DWORD PTR ds:0x4470a0
  4407d8:	add    edx,0x8
  4407db:	mov    DWORD PTR ds:0x4470a0,edx
  4407e1:	movzx  eax,BYTE PTR [edx+0x7]
  4407e5:	movzx  esi,BYTE PTR [edx+0x4]
  4407e9:	movzx  edx,WORD PTR [edx]
  4407ec:	shl    eax,0x8
  4407ef:	add    eax,esi
  4407f1:	shl    eax,0x10
  4407f4:	add    eax,edx
  4407f6:	mov    edx,DWORD PTR ds:0x447cfc
  4407fc:	mov    ds:0x447cf0,eax
  440801:	add    edx,0xf50eb233
  440807:	xor    edx,eax
  440809:	mov    DWORD PTR [ecx+0x8],edx
  44080c:	mov    edx,DWORD PTR ds:0x4470a0
  440812:	add    edx,0x8
  440815:	mov    DWORD PTR ds:0x4470a0,edx
  44081b:	movzx  eax,BYTE PTR [edx+0x7]
  44081f:	movzx  esi,BYTE PTR [edx+0x4]
  440823:	movzx  edx,WORD PTR [edx]
  440826:	shl    eax,0x8
  440829:	add    eax,esi
  44082b:	shl    eax,0x10
  44082e:	add    eax,edx
  440830:	mov    edx,DWORD PTR ds:0x447cfc
  440836:	add    edx,0xf50eb233
  44083c:	mov    ds:0x447cf0,eax
  440841:	xor    edx,eax
  440843:	push   0x100
  440848:	lea    eax,[esp+0x130]
  44084f:	push   eax
  440850:	mov    DWORD PTR [ecx+0xc],edx
  440853:	add    DWORD PTR ds:0x4470a0,0x8
  44085a:	push   0x446a70
  44085f:	call   DWORD PTR ds:0x444040
  440865:	mov    esi,DWORD PTR ds:0x447d00
  44086b:	mov    ebp,DWORD PTR ds:0x44404c
  440871:	add    esi,0x10
  440874:	mov    edi,0x4
  440879:	lea    esp,[esp+0x0]
  440880:	mov    ecx,DWORD PTR ds:0x4470a4
  440886:	mov    eax,DWORD PTR [ecx+0x2]
  440889:	push   0x0
  44088b:	push   0x127
  440890:	push   0x6a
  440892:	push   0xc
  440894:	mov    edx,0x6ca547d1
  440899:	sub    edx,DWORD PTR ds:0x447cfc
  44089f:	push   0x68
  4408a1:	xor    edx,eax
  4408a3:	push   0x0
  4408a5:	mov    ds:0x447cf0,eax
  4408aa:	mov    DWORD PTR [esi],edx
  4408ac:	push   ebx
  4408ad:	add    esi,0x4
  4408b0:	call   ebp
  4408b2:	add    DWORD PTR ds:0x4470a4,0x8
  4408b9:	dec    edi
  4408ba:	jne    0x440880
  4408bc:	mov    edi,DWORD PTR ds:0x447d00
  4408c2:	mov    esi,DWORD PTR [esp+0x530]
  4408c9:	mov    ebx,0x2
  4408ce:	add    edi,0x20
  4408d1:	add    esi,0x9
  4408d4:	lea    ebp,[ebx+0xe]
  4408d7:	jmp    0x4408e0
  4408d9:	lea    esp,[esp+0x0]
  4408e0:	movzx  eax,BYTE PTR [esi+0x2]
  4408e4:	movzx  ecx,BYTE PTR [esi]
  4408e7:	movzx  edx,BYTE PTR [esi-0x3]
  4408eb:	shl    eax,0x8
  4408ee:	add    eax,ecx
  4408f0:	movzx  ecx,BYTE PTR [esi-0x7]
  4408f4:	shl    eax,0x8
  4408f7:	add    eax,edx
  4408f9:	shl    eax,0x8
  4408fc:	add    eax,ecx
  4408fe:	mov    edx,0xa0304d1c
  440903:	sub    edx,DWORD PTR ds:0x447cfc
  440909:	mov    ds:0x447cf0,eax
  44090e:	xor    edx,eax
  440910:	push   0x100
  440915:	lea    eax,[esp+0x330]
  44091c:	push   eax
  44091d:	push   0x446a5c
  440922:	mov    DWORD PTR [edi],edx
  440924:	call   DWORD PTR ds:0x444040
  44092a:	mov    eax,DWORD PTR [esi+0x3]
  44092d:	mov    ecx,DWORD PTR ds:0x447cfc
  440933:	add    ecx,0xa0284d14
  440939:	xor    ecx,eax
  44093b:	mov    ds:0x447cf0,eax
  440940:	mov    DWORD PTR [edi+0x4],ecx
  440943:	add    edi,0x8
  440946:	add    esi,ebp
  440948:	dec    ebx
  440949:	jne    0x4408e0
  44094b:	mov    esi,DWORD PTR ds:0x447d00
  440951:	lea    edx,[esp+0x10]
  440955:	push   edx
  440956:	push   ebx
  440957:	push   0x3
  440959:	call   DWORD PTR ds:0x444004
  44095f:	mov    ecx,DWORD PTR ds:0x4470a8
  440965:	movzx  eax,WORD PTR [ecx+0x6]
  440969:	movzx  ecx,WORD PTR [ecx]
  44096c:	shl    eax,0x10
  44096f:	add    eax,ecx
  440971:	mov    ds:0x447cf0,eax
  440976:	mov    edx,0x6d507cdf
  44097b:	sub    edx,DWORD PTR ds:0x447cfc
  440981:	xor    edx,eax
  440983:	mov    DWORD PTR [esi+0x30],edx
  440986:	mov    ecx,DWORD PTR ds:0x4470a8
  44098c:	add    ecx,0x8
  44098f:	mov    DWORD PTR ds:0x4470a8,ecx
  440995:	movzx  eax,WORD PTR [ecx+0x6]
  440999:	movzx  ecx,WORD PTR [ecx]
  44099c:	shl    eax,0x10
  44099f:	add    eax,ecx
  4409a1:	mov    ds:0x447cf0,eax
  4409a6:	mov    edx,0x6d507cdf
  4409ab:	sub    edx,DWORD PTR ds:0x447cfc
  4409b1:	xor    edx,eax
  4409b3:	mov    DWORD PTR [esi+0x34],edx
  4409b6:	mov    ecx,DWORD PTR ds:0x4470a8
  4409bc:	add    ecx,0x8
  4409bf:	mov    DWORD PTR ds:0x4470a8,ecx
  4409c5:	movzx  eax,WORD PTR [ecx+0x6]
  4409c9:	movzx  ecx,WORD PTR [ecx]
  4409cc:	shl    eax,0x10
  4409cf:	add    eax,ecx
  4409d1:	mov    ds:0x447cf0,eax
  4409d6:	mov    edx,0x6d507cdf
  4409db:	sub    edx,DWORD PTR ds:0x447cfc
  4409e1:	xor    edx,eax
  4409e3:	mov    DWORD PTR [esi+0x38],edx
  4409e6:	mov    ecx,DWORD PTR ds:0x4470a8
  4409ec:	add    ecx,0x8
  4409ef:	mov    DWORD PTR ds:0x4470a8,ecx
  4409f5:	movzx  eax,WORD PTR [ecx+0x6]
  4409f9:	movzx  ecx,WORD PTR [ecx]
  4409fc:	shl    eax,0x10
  4409ff:	add    eax,ecx
  440a01:	mov    ds:0x447cf0,eax
  440a06:	mov    edx,0x6d507cdf
  440a0b:	sub    edx,DWORD PTR ds:0x447cfc
  440a11:	xor    edx,eax
  440a13:	mov    DWORD PTR [esi+0x3c],edx
  440a16:	add    DWORD PTR ds:0x4470a8,0x8
  440a1d:	mov    edx,DWORD PTR ds:0x4470ac
  440a23:	movzx  ecx,BYTE PTR [edx+0x5]
  440a27:	movzx  esi,WORD PTR [edx+0x3]
  440a2b:	movzx  edx,BYTE PTR [edx+0x1]
  440a2f:	mov    eax,ds:0x447d00
  440a34:	shl    ecx,0x10
  440a37:	add    ecx,esi
  440a39:	shl    ecx,0x8
  440a3c:	add    ecx,edx
  440a3e:	mov    edx,DWORD PTR ds:0x447cfc
  440a44:	sub    edx,0x80040004
  440a4a:	neg    edx
  440a4c:	sbb    edx,edx
  440a4e:	and    edx,0xeea5f57a
  440a54:	mov    DWORD PTR ds:0x447cf0,ecx
  440a5a:	add    edx,0x115ab01c
  440a60:	xor    edx,ecx
  440a62:	mov    DWORD PTR [eax+0x40],edx
  440a65:	mov    edx,DWORD PTR ds:0x4470ac
  440a6b:	movzx  ecx,WORD PTR [edx+0xb]
  440a6f:	movzx  esi,BYTE PTR [edx+0x9]
  440a73:	movzx  edx,BYTE PTR [edx+0x7]
  440a77:	shl    ecx,0x8
  440a7a:	add    ecx,esi
  440a7c:	shl    ecx,0x8
  440a7f:	add    ecx,edx
  440a81:	mov    DWORD PTR ds:0x447cf0,ecx
  440a87:	mov    edx,0x915eb020
  440a8c:	sub    edx,DWORD PTR ds:0x447cfc
  440a92:	xor    edx,ecx
  440a94:	mov    DWORD PTR [eax+0x44],edx
  440a97:	mov    edx,DWORD PTR ds:0x4470ac
  440a9d:	add    edx,ebp
  440a9f:	mov    DWORD PTR ds:0x4470ac,edx
  440aa5:	movzx  ecx,BYTE PTR [edx+0x5]
  440aa9:	movzx  esi,WORD PTR [edx+0x3]
  440aad:	movzx  edx,BYTE PTR [edx+0x1]
  440ab1:	shl    ecx,0x10
  440ab4:	add    ecx,esi
  440ab6:	shl    ecx,0x8
  440ab9:	add    ecx,edx
  440abb:	mov    edx,DWORD PTR ds:0x447cfc
  440ac1:	sub    edx,0x80040004
  440ac7:	mov    DWORD PTR ds:0x447cf0,ecx
  440acd:	neg    edx
  440acf:	sbb    edx,edx
  440ad1:	and    edx,0xeea5f57a
  440ad7:	add    edx,0x115ab01c
  440add:	xor    edx,ecx
  440adf:	mov    DWORD PTR [eax+0x48],edx
  440ae2:	mov    edx,DWORD PTR ds:0x4470ac
  440ae8:	movzx  ecx,WORD PTR [edx+0xb]
  440aec:	movzx  esi,BYTE PTR [edx+0x9]
  440af0:	movzx  edx,BYTE PTR [edx+0x7]
  440af4:	shl    ecx,0x8
  440af7:	add    ecx,esi
  440af9:	shl    ecx,0x8
  440afc:	add    ecx,edx
  440afe:	mov    DWORD PTR ds:0x447cf0,ecx
  440b04:	mov    edx,0x915eb020
  440b09:	sub    edx,DWORD PTR ds:0x447cfc
  440b0f:	xor    edx,ecx
  440b11:	mov    DWORD PTR [eax+0x4c],edx
  440b14:	add    DWORD PTR ds:0x4470ac,ebp
  440b1a:	mov    edx,DWORD PTR ds:0x4470b0
  440b20:	movzx  ecx,BYTE PTR [edx+0x7]
  440b24:	movzx  esi,BYTE PTR [edx+0x3]
  440b28:	movzx  edx,WORD PTR [edx+0x1]
  440b2c:	mov    eax,ds:0x447d00
  440b31:	shl    ecx,0x8
  440b34:	add    ecx,esi
  440b36:	shl    ecx,0x10
  440b39:	add    ecx,edx
  440b3b:	mov    DWORD PTR ds:0x447cf0,ecx
  440b41:	mov    edx,0xba88c0ba
  440b46:	sub    edx,DWORD PTR ds:0x447cfc
  440b4c:	xor    edx,ecx
  440b4e:	mov    DWORD PTR [eax+0x50],edx
  440b51:	mov    edx,DWORD PTR ds:0x4470b0
  440b57:	movzx  ecx,BYTE PTR [edx+0xd]
  440b5b:	movzx  esi,BYTE PTR [edx+0xa]
  440b5f:	movzx  edx,WORD PTR [edx+0x8]
  440b63:	shl    ecx,0x8
  440b66:	add    ecx,esi
  440b68:	shl    ecx,0x10
  440b6b:	add    ecx,edx
  440b6d:	mov    DWORD PTR ds:0x447cf0,ecx
  440b73:	mov    edx,0xba88c0ba
  440b78:	sub    edx,DWORD PTR ds:0x447cfc
  440b7e:	xor    edx,ecx
  440b80:	mov    DWORD PTR [eax+0x54],edx
  440b83:	mov    edx,DWORD PTR ds:0x4470b0
  440b89:	add    edx,ebp
  440b8b:	mov    DWORD PTR ds:0x4470b0,edx
  440b91:	movzx  ecx,BYTE PTR [edx+0x7]
  440b95:	movzx  esi,BYTE PTR [edx+0x3]
  440b99:	movzx  edx,WORD PTR [edx+0x1]
  440b9d:	shl    ecx,0x8
  440ba0:	add    ecx,esi
  440ba2:	shl    ecx,0x10
  440ba5:	add    ecx,edx
  440ba7:	mov    edx,0xba88c0ba
  440bac:	sub    edx,DWORD PTR ds:0x447cfc
  440bb2:	mov    DWORD PTR ds:0x447cf0,ecx
  440bb8:	xor    edx,ecx
  440bba:	mov    DWORD PTR [eax+0x58],edx
  440bbd:	mov    edx,DWORD PTR ds:0x4470b0
  440bc3:	movzx  ecx,BYTE PTR [edx+0xd]
  440bc7:	shl    ecx,0x8
  440bca:	movzx  esi,BYTE PTR [edx+0xa]
  440bce:	movzx  edx,WORD PTR [edx+0x8]
  440bd2:	add    ecx,esi
  440bd4:	shl    ecx,0x10
  440bd7:	add    ecx,edx
  440bd9:	mov    edx,0xba88c0ba
  440bde:	sub    edx,DWORD PTR ds:0x447cfc
  440be4:	pop    edi
  440be5:	xor    edx,ecx
  440be7:	mov    DWORD PTR ds:0x447cf0,ecx
  440bed:	pop    esi
  440bee:	mov    DWORD PTR [eax+0x5c],edx
  440bf1:	add    DWORD PTR ds:0x4470b0,ebp
  440bf7:	pop    ebp
  440bf8:	pop    ebx
  440bf9:	add    esp,0x51c
  440bff:	ret    
  440c00:	into   
  440c01:	(bad)  
  440c03:	mov    edi,edi
  440c05:	add    BYTE PTR [ecx-0x7d],dh
  440c08:	add    al,0x21
  440c0a:	call   DWORD PTR [ebx+eax*4+0x699083ff]
  440c11:	add    cl,BYTE PTR [ecx-0x1]
  440c14:	(bad)  
  440c15:	inc    DWORD PTR [edx-0x1]
  440c18:	sub    ah,0x0
  440c1b:	(bad)  
  440c1c:	inc    DWORD PTR [eax]
  440c1e:	add    BYTE PTR [eax],dh
  440c20:	jne    0x440bcc
  440c22:	outs   dx,DWORD PTR ds:[esi]
  440c23:	(bad)  
  440c24:	dec    esp
  440c26:	sub    bh,bh
  440c28:	dec    ebx
  440c29:	(bad)  
  440c2b:	retf   0xff
  440c2e:	call   DWORD PTR [ecx-0x69]
  440c31:	xor    ecx,DWORD PTR [edi+0x5dffffff]
  440c37:	and    DWORD PTR [esi+0x23ff73],0x0
  440c3e:	add    bl,dh
  440c40:	mov    esp,0xffffad54
  440c45:	add    BYTE PTR ds:0xff97eeff,dl
  440c4b:	imul   eax,DWORD PTR [ebx-0x24ca7c01],0x2d
  440c52:	xor    bh,bh
  440c54:	inc    DWORD PTR [ebx-0x410d3351]
  440c5a:	mov    DWORD PTR [edi+0x0],edi
  440c5d:	int3   
  440c5e:	(bad)  
  440c5f:	cmp    DWORD PTR [ebx],esp
  440c61:	mov    ds:0x83836e,al
  440c66:	cld    
  440c67:	inc    DWORD PTR [edx]
  440c69:	into   
  440c6a:	push   DWORD PTR ds:0xfbffffff
  440c70:	arpl   WORD PTR [edx+edx*1-0x31ff7c01],dx
  440c77:	dec    esi
  440c79:	verw   WORD PTR [esi]
  440c7c:	add    DWORD PTR [ebx+0x30bba483],0x27
  440c83:	int3   
  440c84:	int3   
  440c85:	call   ecx
  440c87:	int3   
  440c88:	add    esi,DWORD PTR [eax+eax*1]
  440c8b:	adc    BYTE PTR [ecx-0x2bbc0100],cl
  440c91:	mov    ecx,0xffff836c
  440c96:	dec    edi
  440c97:	add    BYTE PTR [ebx-0x2b],cl
  440c9a:	add    dl,cl
  440c9c:	add    bh,bh
  440c9e:	add    BYTE PTR [ebp-0x74a1],cl
  440ca4:	dec    esp
  440ca6:	cwde   
  440ca7:	push   esi
  440ca9:	and    al,0x0
  440cab:	or     edi,edi
  440cad:	int3   
  440cae:	add    BYTE PTR [edi-0x44],dl
  440cb1:	cmp    DWORD PTR [ebp+0x0],esp
  440cb4:	add    BYTE PTR [eax],al
  440cb6:	fdivp  st(7),st
  440cb8:	inc    ebp
  440cb9:	push   ss
  440cba:	dec    DWORD PTR [esi-0x70010000]
  440cc0:	push   esp
  440cc1:	pop    es
  440cc2:	sbb    edi,edi
  440cc4:	add    BYTE PTR [eax],al
  440cc6:	dec    ecx
  440cc7:	jmp    FWORD PTR [edx+0x1d]
  440cca:	jmp    FWORD PTR ds:0x6ecc83ff
  440cd0:	test   BYTE PTR [edx+0xffffb1],cl
  440cd6:	and    DWORD PTR [eax],eax
  440cd8:	adc    eax,DWORD PTR [ebx-0xd77]
  440cde:	int3   
  440cdf:	fiadd  DWORD PTR [ecx-0x2d]
  440ce2:	sbb    al,0xff
  440ce4:	inc    DWORD PTR [ebx+0x4902ff1d]
  440cea:	add    ch,al
  440cec:	inc    DWORD PTR [eax]
  440cee:	int3   
  440cef:	add    ch,BYTE PTR [edi+0xff7f05]
  440cf5:	cmp    DWORD PTR [eax+0xd96300],0x74
  440cfc:	mov    DWORD PTR [eax],eax
  440cfe:	call   FWORD PTR [ebx+0xe27d96]
  440d04:	inc    DWORD PTR [eax]
  440d06:	je     0x440d07
  440d08:	(bad)  
  440d09:	(bad)  
  440d0b:	inc    BYTE PTR [ebx+0x328f8989]
  440d11:	jne    0x440cd4
  440d13:	(bad)  
  440d14:	(bad)  
  440d15:	(bad)  
  440d16:	cmp    eax,0xff7d1e83
  440d1b:	mov    esi,0x9900ff83
  440d20:	scas   eax,DWORD PTR es:[edi]
  440d21:	ret    0xfe
  440d24:	inc    DWORD PTR [eax]
  440d26:	or     eax,0xfff15100
  440d2b:	repz add bh,bh
  440d2e:	add    BYTE PTR [edx-0x726f33],ch
  440d34:	inc    DWORD PTR [eax]
  440d36:	xor    al,BYTE PTR [eax]
  440d38:	inc    ebx
  440d39:	xchg   edx,eax
  440d3a:	dec    ebx
  440d3c:	(bad)  
  440d3d:	(bad)  
  440d3e:	call   DWORD PTR [edi+ebp*8-0x70]
  440d42:	stc    
  440d43:	inc    DWORD PTR [ebx+0x29ffb800]
  440d49:	int    0xff
  440d4b:	(bad)  
  440d4e:	mov    DWORD PTR [ebx],eax
  440d50:	vpaddw xmm7,xmm3,xmm7
  440d54:	inc    DWORD PTR [eax]
  440d56:	jle    0x440d58
  440d58:	mov    bh,0x15
  440d5a:	and    DWORD PTR [edi+0x2fff00ff],0x74
  440d61:	pop    esi
  440d62:	jae    0x440d64
  440d64:	(bad)  
  440d65:	dec    DWORD PTR [ebx]
  440d67:	jmp    DWORD PTR [eax-0x7bff78]
  440d6d:	dec    DWORD PTR [ecx+0x1d4b9d47]
  440d73:	(bad)  
  440d74:	(bad)  
  440d75:	push   DWORD PTR [ecx]
  440d77:	and    eax,0x22
  440d7a:	dec    edx
  440d7c:	dec    DWORD PTR [ecx-0x6e8c7e00]
  440d82:	(bad)  
  440d83:	inc    DWORD PTR [ebx-0x57009501]
  440d89:	xchg   ebp,eax
  440d8a:	add    BYTE PTR [ebx+0x0],bh
  440d8d:	(bad)  
  440d8e:	inc    esi
  440d90:	jb     0x440e02
  440d92:	add    BYTE PTR [eax],al
  440d94:	dec    DWORD PTR [ecx+0x3ae28356]
  440d9a:	inc    ecx
  440d9c:	add    BYTE PTR [eax],al
  440d9e:	call   FWORD PTR [ecx]
  440da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440da1:	mov    dh,0x8
  440da3:	(bad)  
  440da4:	(bad)  
  440da5:	dec    DWORD PTR [ecx]
  440da7:	call   eax
  440da9:	push   esi
  440daa:	xor    DWORD PTR [ebp-0x1],0x0
  440dae:	add    BYTE PTR ds:0x43c223,ah
  440db4:	(bad)  
  440db5:	jmp    FWORD PTR [eax-0xfebd7d]
  440dbb:	iret   
  440dbc:	dec    DWORD PTR [ecx+0x47224289]
  440dc2:	push   ebp
  440dc3:	inc    DWORD PTR [eax]
  440dc5:	call   FWORD PTR [ecx]
  440dc7:	jmp    FWORD PTR [ebx-0x57]
  440dca:	push   DWORD PTR [eax]
  440dcc:	add    bh,bh
  440dce:	add    ebp,0xffffffe2
  440dd1:	jg     0x440da5
  440dd3:	(bad)  
  440dd4:	(bad)  
  440dd5:	inc    DWORD PTR [ecx]
  440dd7:	dec    DWORD PTR [ebp+0xd4ffa0]
  440ddd:	int3   
  440dde:	add    BYTE PTR [ebx],cl
  440de0:	cmp    eax,0xffff2cb2
  440de5:	cmp    DWORD PTR [ecx-0x808700],0xffffffed
  440dec:	add    BYTE PTR [eax],al
  440dee:	(bad)  
  440def:	call   0x89b00125
  440df4:	mov    DWORD PTR [eax],eax
  440df6:	(bad)  
  440df7:	int3   
  440df8:	push   ds
  440df9:	daa    
  440dfa:	inc    edx
  440dfc:	add    DWORD PTR [ebx-0x33e94000],0xffffffd3
  440e03:	add    BYTE PTR [eax],al
  440e05:	xor    DWORD PTR [ebx],0xffffffcc
  440e08:	dec    edx
  440e09:	mov    ecx,0xcc006e83
  440e0e:	mov    DWORD PTR [ebx+0xdf5465],ebx
  440e14:	(bad)  
  440e15:	dec    DWORD PTR [edi]
  440e17:	add    dl,al
  440e19:	mov    cl,0x83
  440e1b:	lods   al,BYTE PTR ds:[esi]
  440e1c:	dec    esp
  440e1e:	(bad)  
  440e1f:	jp     0x440da1
  440e21:	push   edi
  440e22:	pop    ecx
  440e23:	mov    edi,edi
  440e25:	(bad)  
  440e26:	fiadd  DWORD PTR [eax]
  440e28:	cmp    ah,BYTE PTR [eax]
  440e2a:	sbb    DWORD PTR [edi-0x77],0xffffffff
  440e2e:	dec    DWORD PTR [ecx-0x7c7830f7]
  440e34:	inc    DWORD PTR [eax]
  440e36:	xor    cl,ah
  440e38:	fdivp  st(4),st
  440e3a:	add    bh,dh
  440e3c:	(bad)  
  440e3d:	(bad)  
  440e3e:	(bad)  
  440e3f:	clc    
  440e40:	sub    edi,edi
  440e42:	mov    al,BYTE PTR [eax]
  440e44:	mov    DWORD PTR [ecx+0x4d6cffc4],ecx
  440e4a:	int3   
  440e4b:	int3   
  440e4c:	(bad)  
  440e4d:	inc    DWORD PTR [eax]
  440e4f:	sub    eax,ebp
  440e51:	jp     0x440eca
  440e53:	int3   
  440e54:	add    bh,bh
  440e56:	xor    BYTE PTR [ecx+0x34001259],cl
  440e5c:	int3   
  440e5d:	add    bh,bh
  440e5f:	aam    0x7f
  440e61:	sub    eax,0x4b
  440e66:	js     0x440deb
  440e68:	test   eax,0xffd083d6
  440e6d:	inc    DWORD PTR [eax]
  440e6f:	clc    
  440e70:	mov    eax,ds:0xff896fa0
  440e75:	add    BYTE PTR [edx+0xe3edff],ah
  440e7b:	loop   0x440e7c
  440e7d:	mov    DWORD PTR [ebx-0x5233a2d],eax
  440e83:	cmp    edi,0xffffffff
  440e86:	stc    
  440e87:	add    BYTE PTR [edi-0x33a80078],bl
  440e8d:	(bad)  
  440e8e:	call   FWORD PTR [ebp+0x7a]
  440e91:	test   al,0x71
  440e93:	(bad)  
  440e94:	inc    DWORD PTR [eax]
  440e96:	add    BYTE PTR es:[ebp+0x53837c],bl
  440e9d:	(bad)  
  440e9e:	call   DWORD PTR [edi+0xba1690]
  440ea4:	cmp    edi,0xffffff93
  440ea7:	inc    DWORD PTR [eax-0x9cff71]
  440ead:	(bad)  
  440eae:	dec    DWORD PTR [esi-0x767531ee]
  440eb4:	add    ah,cl
  440eb6:	cmp    bh,bh
  440eb8:	(bad)  
  440eb9:	add    bh,bh
  440ebb:	call   0x65d9:0xce00ff83
  440ec2:	xchg   edx,eax
  440ec3:	add    bh,bh
  440ec5:	add    BYTE PTR ds:0xcc284dff,ch
  440ecb:	mov    cl,0xcc
  440ecd:	int3   
  440ece:	inc    DWORD PTR [eax]
  440ed0:	mov    dh,0xa
  440ed2:	call   0xd5450ed6
  440ed7:	call   FWORD PTR [esi-0xf]
  440eda:	add    BYTE PTR [ecx-0xa000001],cl
  440ee0:	rcr    BYTE PTR [eax],cl
  440ee2:	lock int3 
  440ee4:	(bad)  
  440ee5:	(bad)  
  440ee6:	cmp    bh,bh
  440ee8:	call   0xffff:0x837d83b8
  440eef:	mov    edx,0xff386173
  440ef4:	add    bh,bh
  440ef6:	dec    edx
  440ef7:	int3   
  440ef8:	mov    dl,BYTE PTR [ebp+0x0]
  440efb:	sbb    eax,0x22ff00ff
  440f00:	loope  0x440ed9
  440f02:	adc    bh,bh
  440f04:	(bad)  
  440f05:	(bad)  
  440f06:	mov    edi,0x83055cff
  440f0b:	xor    eax,0x408300ff
  440f10:	ins    BYTE PTR es:[edi],dx
  440f11:	adc    edx,DWORD PTR [edx]
  440f13:	inc    DWORD PTR [ebx+0x4b83bdff]
  440f19:	idiv   bh
  440f1b:	in     eax,dx
  440f1c:	(bad)  
  440f1d:	(bad)  
  440f1e:	(bad)  
  440f1f:	fsubr  st(3),st
  440f21:	and    BYTE PTR [esi-0x1],al
  440f24:	add    bh,bh
  440f26:	sti    
  440f27:	push   esp
  440f29:	jb     0x440f2a
  440f2b:	test   al,0xff
  440f2d:	add    bh,bh
  440f2f:	out    0x47,al
  440f31:	pop    ds
  440f32:	mov    edi,edi
  440f34:	(bad)  
  440f35:	jmp    FWORD PTR [ecx]
  440f37:	inc    eax
  440f39:	sub    bh,bh
  440f3b:	mov    eax,ds:0x130000cc
  440f40:	mov    bh,0x46
  440f42:	push   eax
  440f43:	inc    DWORD PTR [eax]
  440f45:	jmp    esp
  440f47:	add    BYTE PTR [edx+0xf4002a],ah
  440f4d:	add    BYTE PTR [ebx+0x78d72ff7],al
  440f53:	(bad)  
  440f54:	(bad)  
  440f55:	jmp    FWORD PTR [ebx]
  440f57:	dec    ebx
  440f59:	adc    eax,0xa0ff
  440f5e:	sbb    DWORD PTR [esi-0x7a],0xffffffde
  440f62:	imul   edi,edi,0xff43ff00
  440f68:	jae    0x440f4a
  440f6a:	(bad)  
  440f6b:	cmp    eax,0x3fff8300
  440f70:	in     al,dx
  440f71:	xchg   edx,eax
  440f72:	pop    ebp
  440f73:	add    BYTE PTR [eax],al
  440f75:	int3   
  440f76:	jmp    0x440f78
  440f78:	retf   0x8376
  440f7b:	pushf  
  440f7c:	int3   
  440f7d:	add    BYTE PTR [ecx-0x2d898b53],cl
  440f83:	mov    edi,edi
  440f85:	int3   
  440f86:	push   ebx
  440f87:	add    BYTE PTR [eax],ah
  440f89:	dec    ebx
  440f8a:	add    BYTE PTR [esi+0x0],ch
  440f8d:	inc    DWORD PTR [ebx+0x485cc132]
  440f93:	(bad)  
  440f94:	(bad)  
  440f95:	(bad)  
  440f96:	mov    esp,0xffe25300
  440f9b:	push   ds
  440f9c:	inc    DWORD PTR [ebx-0x79a61d01]
  440fa2:	mov    eax,0x5effffff
  440fa7:	jmp    DWORD PTR [eax]
  440fa9:	jl     0x440fab
  440fab:	in     al,dx
  440fac:	(bad)  
  440fad:	inc    DWORD PTR [ebx+0x6cc9c6d3]
  440fb3:	cmp    edi,0xffffffff
  440fb6:	sub    al,BYTE PTR [ebx-0x3b7683d6]
  440fbc:	add    bh,bh
  440fbe:	add    BYTE PTR [edx+0xe81b94],ah
  440fc4:	add    bh,bh
  440fc6:	retf   
  440fc7:	add    BYTE PTR [eax+edi*4-0x1],cl
  440fcb:	pop    ecx
  440fcc:	add    BYTE PTR [eax],al
  440fce:	call   FWORD PTR [esi-0x50758a]
  440fd4:	(bad)  
  440fd5:	(bad)  
  440fd6:	mov    edi,0x65b00
  440fdb:	sbb    edi,edi
  440fdd:	int3   
  440fde:	xor    DWORD PTR [esi],0xffffffc1
  440fe1:	xlat   BYTE PTR ds:[ebx]
  440fe2:	xchg   edx,eax
  440fe3:	add    bh,bh
  440fe5:	call   FWORD PTR [ecx]
  440fe7:	add    cl,cl
  440fe9:	test   edi,edi
  440feb:	xchg   edi,edi
  440fed:	mov    DWORD PTR [ebx-0x10875fec],eax
  440ff3:	inc    DWORD PTR [eax]
  440ff5:	push   DWORD PTR [eax+0x0]
  440ff8:	dec    ebp
  440ff9:	adc    eax,0xff1d00
  440ffe:	add    bl,dl
  441000:	mov    edi,0x8954f4
  441005:	call   DWORD PTR [edi]
  441007:	adc    DWORD PTR [ecx-0xcfffba],0xffffffff
  44100e:	jmp    FWORD PTR [eax-0x33feddf8]
  441014:	int3   
  441015:	and    DWORD PTR [esi-0xc12900],0xfffffffb
  44101c:	dec    DWORD PTR [ecx-0x675d3101]
  441022:	push   cs
  441023:	inc    DWORD PTR [ebx-0x3300107d]
  441029:	lods   al,BYTE PTR ds:[esi]
  44102a:	cmp    DWORD PTR [edx+0x7dffff89],0x68
  441031:	cmp    eax,0xff00ffcc
  441036:	inc    ebx
  441037:	add    BYTE PTR [ecx-0x76ec0057],ch
  44103d:	inc    DWORD PTR [eax]
  44103f:	inc    ebx
  441040:	fidivr WORD PTR [edi]
  441042:	std    
  441043:	cmp    edi,0xffffffff
  441046:	into   
  441047:	add    dh,al
  441049:	rol    DWORD PTR [eax],1
  44104b:	jecxz  0x44104c
  44104d:	add    bh,bh
  44104f:	cdq    
  441050:	cli    
  441051:	xor    DWORD PTR [esi],edx
  441053:	mov    DWORD PTR [ecx-0x35003001],ecx
  441059:	dec    eax
  44105a:	push   DWORD PTR [esi+0x37ffff89]
  441060:	cmp    al,0x49
  441062:	je     0x441063
  441064:	inc    DWORD PTR [eax]
  441066:	imul   ecx,esp,0x5eff479e
  44106c:	add    bh,bh
  44106e:	or     DWORD PTR [edx],0x6a
  441071:	ins    BYTE PTR es:[edi],dx
  441072:	sbb    cl,ah
  441074:	(bad)  
  441075:	push   ebp
  441077:	int3   
  441078:	out    dx,eax
  441079:	lds    eax,FWORD PTR [eax]
  44107b:	push   edi
  44107c:	mov    edi,edi
  44107e:	add    BYTE PTR [eax+0x73],ah
  441081:	outs   dx,DWORD PTR ds:[esi]
  441082:	pusha  
  441083:	or     esp,0x0
  441086:	mov    eax,0xff30ca83
  44108b:	cmp    al,0x0
  44108d:	or     esp,0xffffffd9
  441090:	jno    0x44109e
  441092:	cs cmp edi,0xffffffff
  441096:	ret    
  441097:	jmp    ebp
  441099:	pop    es
  44109a:	add    BYTE PTR [ebp-0x37ff0100],dh
  4410a0:	and    al,0xa2
  4410a2:	les    eax,FWORD PTR [eax]
  4410a4:	add    BYTE PTR [eax],al
  4410a6:	pop    eax
  4410a7:	call   DWORD PTR [edx]
  4410a9:	mov    esi,0x83009e00
  4410ae:	call   FWORD PTR ds:0xc76b77
  4410b4:	int3   
  4410b5:	(bad)  
  4410b6:	jns    0x4410b8
  4410b8:	test   DWORD PTR [ebx-0x1],eax
  4410bb:	sahf   
  4410bc:	(bad)  
  4410bd:	(bad)  
  4410be:	dec    DWORD PTR [ecx-0x5598d4]
  4410c4:	inc    DWORD PTR [ebx+0x3242ff1d]
  4410ca:	add    BYTE PTR [eax],ch
  4410cc:	inc    DWORD PTR [eax]
  4410ce:	(bad)  
  4410cf:	ds add dh,al
  4410d2:	(bad)  
  4410d3:	(bad)  
  4410d4:	(bad)  
  4410d5:	push   DWORD PTR [eax-0x1]
  4410d8:	xchg   edx,eax
  4410d9:	add    bh,bh
  4410db:	sub    edi,edi
  4410dd:	add    BYTE PTR [ecx+0x4ccf9f9b],cl
  4410e3:	(bad)  
  4410e4:	dec    DWORD PTR [ecx-0x393a7c75]
  4410ea:	(bad)  
  4410eb:	cmp    eax,0x82ff0000
  4410f0:	hlt    
  4410f1:	cmp    BYTE PTR [esi-0x1],bl
  4410f4:	add    BYTE PTR [eax],al
  4410f6:	test   al,0xff
  4410f8:	clc    
  4410f9:	sub    al,0xff
  4410fb:	sbb    esp,ecx
  4410fd:	add    BYTE PTR [eax],al
  4410ff:	(bad)  
  441100:	into   
  441101:	cdq    
  441102:	and    BYTE PTR [ecx+0x8bff83],cl
  441108:	fwait
  441109:	pop    es
  44110a:	jmp    DWORD PTR [edx]
  44110c:	add    ah,cl
  44110e:	add    BYTE PTR [esi+ecx*2],dh
  441111:	scas   al,BYTE PTR es:[edi]
  441112:	cmp    edi,edi
  441114:	add    DWORD PTR [eax],0x2f
  441117:	dec    DWORD PTR [edi-0x76d8008f]
  44111d:	add    DWORD PTR [eax],0xffffffef
  441120:	xchg   ebp,eax
  441121:	ret    0xffdd
  441124:	(bad)  
  441125:	jmp    FWORD PTR [edx-0x1]
  441128:	ss mov ecx,0xff0065ff
  44112e:	push   edx
  441130:	stos   BYTE PTR es:[edi],al
  441131:	dec    ebx
  441132:	sti    
  441133:	(bad)  
  441134:	(bad)  
  441135:	dec    esp
  441137:	or     DWORD PTR [ebx-0x79],0xffffffcc
  44113b:	in     al,0xff
  44113d:	add    bh,bh
  44113f:	mov    ds:0xffe9b04d,eax
  441144:	dec    esp
  441146:	(bad)  
  441148:	ins    DWORD PTR es:[edi],dx
  441149:	xchg   ah,cl
  44114b:	iret   
  44114c:	cmp    edi,0x0
  44114f:	pop    eax
  441150:	mov    eax,ds:0xcc707e
  441155:	inc    ebp
  441157:	add    BYTE PTR [eax+0x1b],dh
  44115a:	call   DWORD PTR [eax+eax*1]
  44115d:	add    ah,cl
  44115f:	arpl   WORD PTR [ebx],ax
  441161:	rcl    DWORD PTR [edi],1
  441163:	add    ah,cl
  441165:	add    BYTE PTR [edx-0x1],dh
  441168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441169:	add    BYTE PTR [eax],0x4
  44116c:	(bad)  
  44116d:	(bad)  
  44116e:	push   DWORD PTR ds:0xff4db0fe
  441174:	inc    DWORD PTR [eax]
  441176:	adc    al,0xff
  441178:	cmp    al,0x79
  44117a:	dec    edx
  44117c:	(bad)  
  44117d:	(bad)  
  44117e:	dec    DWORD PTR [ecx]
  441180:	rcl    BYTE PTR [ecx],0x36
  441183:	add    bh,bh
  441185:	jmp    FWORD PTR [edi+edi*8]
  441188:	xor    eax,0x718364
  44118d:	dec    DWORD PTR [ecx-0x7269f252]
  441193:	(bad)  
  441194:	(bad)  
  441195:	jmp    DWORD PTR [edx]
  441197:	dec    DWORD PTR [ebx]
  441199:	sahf   
  44119a:	add    ch,dl
  44119c:	add    bh,bh
  44119e:	call   DWORD PTR [ebx-0x30]
  4411a1:	xor    al,0xa7
  4411a3:	inc    DWORD PTR [ebx-0xb006177]
  4411a9:	in     eax,0x0
  4411ab:	adc    bh,bh
  4411ad:	dec    esp
  4411af:	retf   
  4411b0:	sti    
  4411b1:	adc    DWORD PTR [ebp+0x28ffffff],esi
  4411b7:	(bad)  
  4411b8:	fucomip st,st(3)
  4411ba:	add    BYTE PTR [ecx+0x7200ff83],bh
  4411c0:	and    DWORD PTR [esi+ecx*2],edx
  4411c3:	(bad)  
  4411c4:	(bad)  
  4411c5:	(bad)  
  4411c6:	jl     0x4411c7
  4411c8:	dec    esi
  4411c9:	loopne 0x441197
  4411cb:	push   esi
  4411cc:	(bad)  
  4411cd:	(bad)  
  4411ce:	(bad)  
  4411cf:	(bad)
  4411d3:	inc    DWORD PTR [eax]
  4411d5:	add    BYTE PTR [ecx],dh
  4411d7:	add    BYTE PTR [eax],dl
  4411d9:	int    0x89
  4411db:	or     al,0x0
  4411dd:	inc    DWORD PTR [ebx+0x4f1949da]
  4411e3:	dec    esp
  4411e5:	push   DWORD PTR [eax+0x0]
  4411e8:	dec    ebx
  4411e9:	xor    bh,bh
  4411eb:	rol    BYTE PTR [eax],1
  4411ed:	add    bh,bh
  4411ef:	xlat   BYTE PTR ds:[ebx]
  4411f0:	mov    al,0xe5
  4411f2:	mov    ds:0x54ff8989,eax
  4411f7:	cmp    DWORD PTR [ebx-0x72ffd4],0xffffffff
  4411fe:	add    BYTE PTR [eax-0x831f6b],bh
  441204:	add    bh,bh
  441206:	ret    0x4a00
  441209:	jp     0x44120b
  44120b:	imul   eax,DWORD PTR [eax],0x94e10083
  441211:	sbb    BYTE PTR [eax-0x1],cl
  441214:	add    BYTE PTR [eax],al
  441216:	mov    ecx,0x9887cc
  44121b:	push   cs
  44121c:	(bad)  
  44121d:	(bad)  
  44121e:	jmp    DWORD PTR ds:0xffa66c2a
  441224:	add    bh,bh
  441226:	cmp    ah,cl
  441228:	mov    edx,0xd1ccf7
  44122d:	inc    DWORD PTR [ebx+0x176ce853]
  441233:	int3   
  441234:	int3   
  441235:	add    BYTE PTR [ebx-0x33757c00],ch
  44123b:	and    eax,DWORD PTR [eax]
  44123d:	mov    esp,ecx
  44123f:	dec    esi
  441240:	daa    
  441241:	fldenv [edi-0x1]
  441244:	add    BYTE PTR [ebx+0x6d19009a],al
  44124a:	add    BYTE PTR [edi],dl
  44124c:	inc    DWORD PTR [eax]
  44124e:	call   FWORD PTR [esp+esi*2]
  441251:	(bad)  
  441252:	(bad)  
  441253:	(bad)  
  441254:	(bad)  
  441255:	dec    DWORD PTR [eax+eax*1]
  441258:	xor    edi,DWORD PTR [edi-0x34]
  44125b:	mov    dl,0xff
  44125d:	add    bh,bh
  44125f:	in     eax,dx
  441260:	adc    al,0xbb
  441262:	xchg   ecx,eax
  441263:	inc    DWORD PTR [eax]
  441265:	add    BYTE PTR [edx-0x1],ah
  441268:	push   0xffffff99
  44126a:	add    BYTE PTR [ecx+0x4dccffff],ah
  441270:	hlt    
  441271:	sbb    eax,DWORD PTR [edx]
  441273:	inc    DWORD PTR [eax]
  441275:	call   DWORD PTR [eax-0x1]
  441278:	or     eax,0xb10001
  44127d:	int3   
  44127e:	call   FWORD PTR [ebx+ebp*4-0x76ff1b51]
  441285:	add    BYTE PTR ds:0x8300c6cc,ch
  44128b:	mov    bh,bh
  44128d:	inc    DWORD PTR [eax]
  44128f:	add    eax,0xcc3f04e0
  441294:	int3   
  441295:	int3   
  441296:	jbe    0x441298
  441298:	push   ebx
  441299:	jge    0x44129a
  44129b:	jecxz  0x441220
  44129d:	inc    DWORD PTR [ebx-0xf2f4571]
  4412a3:	(bad)  
  4412a4:	dec    DWORD PTR [ecx-0x60047ced]
  4412aa:	add    BYTE PTR [edi-0x4bff7c01],bl
  4412b0:	jp     0x4412e2
  4412b2:	dec    esp
  4412b3:	int3   
  4412b4:	cmp    edi,0x52
  4412b7:	jmp    FWORD PTR [ecx-0x4b]
  4412ba:	push   DWORD PTR [ecx]
  4412bc:	mov    edi,edi
  4412be:	add    BYTE PTR [edi],ch
  4412c0:	fnstenv [esi-0x7b]
  4412c3:	add    bh,bh
  4412c5:	push   DWORD PTR [edi+edi*8-0x3dff6859]
  4412cc:	int3   
  4412cd:	int3   
  4412ce:	(bad)  
  4412cf:	mov    edx,0x89479234
  4412d4:	dec    esp
  4412d6:	add    bh,bh
  4412d8:	popa   
  4412d9:	push   ds
  4412da:	inc    edi
  4412dc:	(bad)  
  4412dd:	dec    esp
  4412df:	mov    al,0x2d
  4412e1:	add    al,0x4f
  4412e3:	(bad)  
  4412e4:	(bad)  
  4412e5:	(bad)  
  4412e6:	call   0xccc90aea
  4412eb:	push   esp
  4412ec:	int3   
  4412ed:	add    BYTE PTR [eax],al
  4412ef:	jns    0x44130a
  4412f1:	dec    ecx
  4412f2:	push   ds
  4412f3:	inc    DWORD PTR [eax]
  4412f5:	jmp    FWORD PTR [ebp-0x763adf01]
  4412fb:	sar    edi,0x0
  4412fe:	add    BYTE PTR [ebp-0x5b],ch
  441301:	lds    esi,FWORD PTR [ecx-0x4000001]
  441307:	call   FWORD PTR [edx-0xdc0014]
  44130d:	add    bh,bh
  44130f:	pop    edx
  441310:	ins    DWORD PTR es:[di],dx
  441312:	in     eax,dx
  441313:	inc    DWORD PTR [eax]
  441315:	int3   
  441316:	and    eax,DWORD PTR [eax]
  441318:	sbb    eax,0xffe4ff3c
  44131d:	add    DWORD PTR [eax],0xffffff94
  441320:	pop    eax
  441321:	(bad)  
  441322:	mov    edx,0xca8300ff
  441327:	call   FWORD PTR [ecx-0xec76ca]
  44132d:	add    DWORD PTR [ebx+0x4ce6f1a],0xffffffff
  441334:	(bad)  
  441335:	jmp    FWORD PTR [edx+0x577aff]
  44133b:	jp     0x44133c
  44133d:	inc    DWORD PTR [ebx-0x2018168d]
  441343:	add    bh,bh
  441345:	push   DWORD PTR [ecx+0x0]
  441348:	(bad)  
  441349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44134a:	(bad)  
  44134b:	jge    0x44134d
  44134d:	inc    DWORD PTR [eax]
  44134f:	inc    ecx
  441350:	pushf  
  441351:	push   eax
  441352:	add    bh,bh
  441354:	inc    DWORD PTR [ebx+0x39a40016]
  44135a:	inc    edi
  44135c:	(bad)  
  44135d:	inc    DWORD PTR [eax]
  44135f:	jmp    0x89:0x83f8a0ae
  441366:	pop    ds
  441367:	call   FWORD PTR [edx+ebx*2-0xe200]
  44136e:	(bad)  
  44136f:	jmp    DWORD PTR [edx]
  441371:	mov    dh,BYTE PTR [esi-0x25ff7677]
  441377:	mov    DWORD PTR [esi+eiz*2],ebx
  44137a:	add    BYTE PTR [ecx-0x3d00ff01],cl
  441380:	aam    0x18
  441382:	int3   
  441383:	add    BYTE PTR [ecx+0x288348ff],cl
  441389:	fwait
  44138a:	add    dh,bl
  44138c:	(bad)  
  44138d:	inc    DWORD PTR [eax]
  44138f:	and    dl,BYTE PTR [esi]
  441391:	rcr    DWORD PTR [ebx+0x63830089],1
  441397:	(bad)  
  441398:	cmp    bl,BYTE PTR [ebx+0xff32ff]
  44139e:	add    BYTE PTR [edi-0x7672ce3c],bh
  4413a4:	add    bh,bh
  4413a6:	cmp    edi,0x1e
  4413a9:	xlat   BYTE PTR ds:[ebx]
  4413aa:	add    BYTE PTR ds:0x689ccff,ch
  4413b0:	hlt    
  4413b1:	je     0x4413fe
  4413b3:	(bad)  
  4413b4:	(bad)  
  4413b5:	(bad)  
  4413b6:	(bad)  
  4413b7:	dec    DWORD PTR [ebx-0x34]
  4413ba:	(bad)  
  4413bb:	jg     0x4413bc
  4413bd:	add    BYTE PTR [eax],al
  4413bf:	inc    ecx
  4413c0:	gs push ecx
  4413c2:	inc    esi
  4413c3:	int3   
  4413c4:	add    BYTE PTR [eax],al
  4413c6:	ret    0x2f00
  4413c9:	mov    eax,ds:0xccff8400
  4413ce:	push   edx
  4413d0:	inc    esp
  4413d1:	jecxz  0x4413be
  4413d3:	(bad)  
  4413d4:	(bad)  
  4413d5:	push   DWORD PTR [eax+eax*1-0xe]
  4413d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4413da:	add    BYTE PTR [eax],bl
  4413dc:	cmp    edi,0xffffff83
  4413df:	js     0x4413f4
  4413e1:	sbb    BYTE PTR [ebp-0x1],ah
  4413e4:	(bad)  
  4413e5:	dec    edi
  4413e7:	add    cl,dh
  4413e9:	jge    0x441374
  4413eb:	int3   
  4413ec:	mov    edi,edi
  4413ee:	(bad)  
  4413ef:	sti    
  4413f0:	je     0x441424
  4413f2:	or     bh,bh
  4413f4:	add    bh,bh
  4413f6:	cmp    bh,0x7
  4413f9:	cld    
  4413fa:	dec    DWORD PTR [edi-0x67ffff7d]
  441400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441401:	inc    edx
  441402:	int3   
  441403:	(bad)  
  441404:	(bad)  
  441405:	jmp    FWORD PTR [edi-0x7d]
  441408:	sub    BYTE PTR [esp+ecx*8+0x18],0xff
  44140d:	inc    DWORD PTR [eax]
  44140f:	add    BYTE PTR [edx-0x5b],bh
  441412:	gs (bad) 
  441414:	dec    esp
  441416:	dec    DWORD PTR ss:[ebx-0x13]
  44141a:	sbb    DWORD PTR [edx-0x7d],0x0
  44141e:	add    cl,al
  441420:	cmp    esp,ebx
  441422:	imul   eax,DWORD PTR [eax],0xffcb0089
  441428:	or     eax,0xff5f002d
  44142d:	add    DWORD PTR [eax],0xffffffb5
  441430:	dec    ebp
  441431:	lds    eax,FWORD PTR [edx-0x77]
  441434:	int3   
  441435:	sub    DWORD PTR [esi],0x0
  441438:	jge    0x4413d8
  44143a:	add    al,bh
  44143c:	inc    DWORD PTR [eax]
  44143e:	jmp    ebx
  441440:	dec    esi
  441441:	ret    
  441442:	add    al,BYTE PTR [ebx-0x6c7c01]
  441448:	adc    eax,0x831e002c
  44144d:	add    BYTE PTR [ebx-0x76b01e18],al
  441453:	mov    DWORD PTR [ecx-0x3e004800],ecx
  441459:	mov    edi,0xeff
  44145e:	add    bh,bh
  441460:	out    0xf0,eax
  441462:	adc    al,0x89
  441464:	mov    DWORD PTR [eax],eax
  441466:	xor    bh,bh
  441468:	mov    esi,0xff4483e7
  44146d:	inc    DWORD PTR [eax]
  44146f:	xchg   ecx,eax
  441470:	retf   
  441471:	xchg   esi,eax
  441472:	(bad)  
  441474:	inc    DWORD PTR [eax]
  441476:	rol    BYTE PTR [eax],0xef
  441479:	push   eax
  44147a:	push   DWORD PTR [ecx]
  44147c:	add    BYTE PTR [eax],al
  44147e:	add    bh,dh
  441480:	test   BYTE PTR [eax],0x8f
  441483:	cmp    edi,0xffffffff
  441486:	mov    edx,0x934500
  44148b:	dec    ebx
  44148c:	inc    DWORD PTR [ebx-0x420d7a01]
  441492:	or     edi,edi
  441494:	mov    DWORD PTR [eax],eax
  441496:	push   0xffbc8fff
  44149b:	inc    DWORD PTR [bp+di+0x4100]
  4414a0:	shr    ebp,1
  4414a2:	(bad)  
  4414a4:	(bad)  
  4414a5:	jmp    DWORD PTR [ebp-0x1]
  4414a8:	in     eax,dx
  4414a9:	mov    ecx,0xff00da00
  4414ae:	add    BYTE PTR ds:0xff2d9e73,dl
  4414b4:	add    DWORD PTR [eax],0x3b
  4414b7:	jmp    FWORD PTR ds:0xffceffa4
  4414bd:	add    bh,bh
  4414bf:	or     cl,BYTE PTR [edx]
  4414c1:	pop    esp
  4414c2:	fld    DWORD PTR [eax]
  4414c4:	inc    DWORD PTR [eax]
  4414c6:	add    BYTE PTR [ebx+0x34ffac1e],0xff
  4414cd:	int3   
  4414ce:	jmp    DWORD PTR [ebp+0x2b]
  4414d1:	pusha  
  4414d2:	rol    DWORD PTR [eax],1
  4414d4:	inc    DWORD PTR [eax]
  4414d6:	mov    esi,0x1ffaff
  4414db:	pop    ecx
  4414dc:	inc    DWORD PTR [eax]
  4414de:	int3   
  4414df:	xor    BYTE PTR [edi+0x61bf],bh
  4414e5:	dec    eax
  4414e7:	or     DWORD PTR [esi-0x7d],0x0
  4414eb:	pop    ds
  4414ec:	cmp    edi,0x0
  4414ef:	push   ss
  4414f0:	pop    esp
  4414f1:	in     eax,dx
  4414f2:	stc    
  4414f3:	(bad)  
  4414f4:	dec    DWORD PTR [ecx+0x111b001a]
  4414fa:	adc    DWORD PTR [eax],0xffffffff
  4414fd:	add    DWORD PTR [eax],0x7c
  441500:	scas   eax,DWORD PTR es:[edi]
  441501:	lods   eax,DWORD PTR ds:[esi]
  441502:	leave  
  441503:	add    BYTE PTR [eax],al
  441505:	add    BYTE PTR [eax-0x7c6de000],bl
  44150b:	xchg   ebp,eax
  44150c:	(bad)  
  44150d:	inc    DWORD PTR [eax]
  44150f:	hlt    
  441510:	(bad)  
  441511:	mov    al,ds:0xff004a
  441516:	xor    al,BYTE PTR [eax]
  441518:	arpl   WORD PTR [ecx],ax
  44151a:	(bad)  
  44151b:	cmp    BYTE PTR [eax],al
  44151d:	(bad)  
  44151e:	dec    eax
  441520:	mov    esi,0xccff1ec9
  441525:	add    ah,cl
  441527:	or     DWORD PTR [eax-0x76867c0b],0x0
  44152e:	mov    DWORD PTR [edi-0x5ab90f],ebx
  441534:	cmp    edi,0xffffffbc
  441537:	inc    DWORD PTR [esi+0x33]
  44153a:	sbb    DWORD PTR [edx-0x1],0x0
  44153e:	add    edi,0x14
  441541:	cs loop 0x441510
  441544:	(bad)  
  441545:	inc    DWORD PTR [edi+edi*8+0x5f00888a]
  44154c:	add    BYTE PTR [eax],al
  44154e:	jmp    FWORD PTR [ebx+0x207ac7]
  441554:	(bad)  
  441555:	(bad)  
  441556:	call   0x4b35a
  44155b:	fadd   DWORD PTR [ebx+0x319300ff]
  441561:	xor    al,0x3a
  441563:	add    BYTE PTR [eax],al
  441565:	add    BYTE PTR [ebx],bl
  441567:	add    BYTE PTR ds:0xff55ff4a,cl
  44156d:	(bad)  
  44156e:	(bad)  
  44156f:	fdivp  st(2),st
  441571:	gs cmp eax,0xd9ff83ff
  441577:	int3   
  441578:	inc    ebp
  441579:	pop    edx
  44157a:	inc    edx
  44157c:	int3   
  44157d:	inc    DWORD PTR [ebx+0x13f7145]
  441583:	add    DWORD PTR [eax],0xffffff83
  441586:	nop
  441587:	jmp    FWORD PTR [ebx]
  441589:	mov    al,ds:0xfffcff
  44158e:	call   DWORD PTR [esi+0x2f]
  441591:	outs   dx,DWORD PTR ds:[esi]
  441592:	add    al,BYTE PTR [eax]
  441594:	(bad)  
  441595:	dec    DWORD PTR [ebx+eax*4+0x2a]
  441599:	jno    0x441524
  44159b:	mov    edx,0xda008900
  4415a0:	test   al,0xf1
  4415a2:	inc    ebx
  4415a3:	add    bh,bh
  4415a5:	dec    DWORD PTR [edi+edi*8+0x59]
  4415a9:	loopne 0x4415aa
  4415ab:	sbb    bh,bh
  4415ad:	add    BYTE PTR [ebx-0x5b0c4957],al
  4415b3:	inc    DWORD PTR [eax]
  4415b5:	add    BYTE PTR [eax-0x1],dl
  4415b8:	and    al,0xf8
  4415ba:	jmp    FWORD PTR [edi-0x3200ff01]
  4415c0:	(bad)  
  4415c2:	data16 int3 
  4415c4:	add    BYTE PTR [eax],al
  4415c6:	sub    al,0xff
  4415c8:	das    
  4415c9:	jl     0x4415cb
  4415cb:	mov    cs,WORD PTR [ecx-0x50f0001]
  4415d1:	fnstenv [esi]
  4415d3:	inc    DWORD PTR [ebx-0x58000701]
  4415d9:	sub    eax,0x832b00
  4415de:	int3   
  4415df:	(bad)  
  4415e0:	shr    DWORD PTR [eax],cl
  4415e2:	push   edx
  4415e3:	(bad)  
  4415e4:	inc    DWORD PTR [eax]
  4415e6:	mov    bh,bh
  4415e8:	pop    edx
  4415e9:	aaa    
  4415ea:	sub    DWORD PTR [eax-0x1533ff01],0x64
  4415f1:	pusha  
  4415f2:	mov    ebp,0xb4008300
  4415f7:	jmp    DWORD PTR [edi-0x7b00b8]
  4415fd:	(bad)  
  4415fe:	call   FWORD PTR [ebp+0x9]
  441601:	pusha  
  441602:	push   ds
  441603:	inc    DWORD PTR [eax]
  441605:	add    BYTE PTR [edx],bh
  441607:	cmp    DWORD PTR [eax],0x6
  44160a:	push   DWORD PTR [edi+0x51ffff83]
  441610:	mov    eax,DWORD PTR [ebx]
  441612:	sbb    DWORD PTR [eax],eax
  441614:	(bad)  
  441615:	dec    DWORD PTR [ebp-0xff7a00]
  44161b:	bound  ecx,QWORD PTR [ecx+0x609dffff]
  441621:	ss sub al,0x0
  441624:	(bad)  
  441625:	(bad)  
  441626:	fld    DWORD PTR [eax]
  441628:	loopne 0x44163c
  44162a:	(bad)  
  44162b:	out    dx,al
  44162c:	inc    DWORD PTR [ebx-0xa54b401]
  441632:	fdiv   st(7),st
  441634:	(bad)  
  441635:	jmp    DWORD PTR [edx]
  441637:	int3   
  441638:	cmp    dh,cl
  44163a:	push   DWORD PTR [ecx+0x3effff00]
  441640:	mov    dh,0xa8
  441642:	dec    ebx
  441643:	inc    DWORD PTR [eax]
  441645:	mov    eax,eax
  441647:	add    BYTE PTR ds:0x46cca9,ah
  44164d:	add    DWORD PTR [eax],0x3d
  441650:	pop    ss
  441651:	out    0x18,eax
  441653:	or     esp,0xffffffff
  441656:	jmp    0x441657
  441658:	sti    
  441659:	adc    BYTE PTR [ecx+0x83],cl
  44165f:	adc    DWORD PTR [ecx-0x19],ebx
  441662:	pusha  
  441663:	add    DWORD PTR [ebx-0x54000b00],0x71
  44166a:	add    BYTE PTR [ebx],dh
  44166c:	inc    DWORD PTR [eax]
  44166e:	add    bl,dh
  441670:	mov    esp,0xff890f8e
  441675:	dec    DWORD PTR [eax-0x33eef07d]
  44167b:	popf   
  44167c:	inc    DWORD PTR [eax]
  44167e:	call   DWORD PTR [ebx]
  441680:	mov    edi,0xff00d35b
  441685:	int3   
  441686:	retf   
  441687:	add    BYTE PTR [edi-0x22ffbc],bh
  44168d:	add    BYTE PTR [ecx-0x6f9b4be9],cl
  441693:	dec    esp
  441695:	jmp    DWORD PTR [edi+0xbd1cff]
  44169b:	sti    
  44169c:	int3   
  44169d:	mov    edi,edi
  44169f:	shl    BYTE PTR [ebp+0x51],cl
  4416a2:	in     eax,0x83
  4416a4:	cmp    edi,0xffffffac
  4416a7:	call   DWORD PTR [edx]
  4416a9:	pop    edi
  4416aa:	add    BYTE PTR [ecx+0x0],bl
  4416ad:	add    bh,bh
  4416af:	icebp  
  4416b0:	int3   
  4416b1:	add    edi,eax
  4416b3:	add    bh,bh
  4416b5:	(bad)  
  4416b6:	jnp    0x4416b8
  4416b8:	mov    bl,0xc6
  4416ba:	inc    DWORD PTR [ecx]
  4416bc:	dec    DWORD PTR [ecx-0x14ae0d00]
  4416c2:	cld    
  4416c3:	add    BYTE PTR [eax],al
  4416c5:	add    BYTE PTR [esi-0xfdee34],cl
  4416cb:	mov    ds:0x65ffff00,eax
  4416d0:	add    eax,0xffff48eb
  4416d5:	(bad)  
  4416d6:	fdivp  st(7),st
  4416d8:	fstp   QWORD PTR [ebx]
  4416da:	(bad)  
  4416db:	call   0x934415e0
  4416e0:	ret    0x8284
  4416e3:	dec    DWORD PTR [ecx+0x24835900]
  4416e9:	test   eax,0xccff46cc
  4416ee:	push   DWORD PTR [edx]
  4416f0:	xchg   DWORD PTR [ecx],edi
  4416f2:	idiv   edi
  4416f4:	mov    DWORD PTR [eax],eax
  4416f6:	pushf  
  4416f7:	add    dh,bl
  4416f9:	clc    
  4416fa:	call   DWORD PTR [ebx-0x1]
  4416fd:	inc    DWORD PTR [eax]
  4416ff:	retf   
  441700:	hlt    
  441701:	outs   dx,BYTE PTR ds:[esi]
  441702:	or     BYTE PTR [ebx-0x33070001],al
  441708:	mov    DWORD PTR [edx],ecx
  44170a:	sub    DWORD PTR [ecx-0x7d],0x0
  44170e:	xor    DWORD PTR [esi-0x1b],0xffffffde
  441712:	inc    esi
  441713:	add    BYTE PTR [ecx+0x4aff9e83],cl
  441719:	jns    0x44171a
  44171b:	cmp    eax,DWORD PTR [eax]
  44171d:	add    bh,bh
  44171f:	shr    DWORD PTR [edi-0xff2249],1
  441725:	call   FWORD PTR [ecx-0x404200]
  44172b:	repnz int3 
  44172d:	add    bh,bh
  44172f:	or     eax,0xff21ea92
  441734:	dec    esp
  441736:	xchg   DWORD PTR [ecx-0x4b006ab7],ecx
  44173c:	int3   
  44173d:	inc    DWORD PTR [ebx+0x14246ae1]
  441743:	add    bh,bh
  441745:	call   FWORD PTR [ebx-0x34]
  441748:	aad    0x98
  44174a:	mov    DWORD PTR [eax-0x577c337d],esp
  441750:	jmp    0x44b7b8
  441755:	add    BYTE PTR [edx-0x2a3e01],bl
  44175b:	cmc    
  44175c:	add    DWORD PTR [eax],0x0
  44175f:	arpl   WORD PTR [esi-0x33dd8a],si
  441765:	add    BYTE PTR [ebx+eax*4],dl
  441768:	jg     0x4417af
  44176a:	add    BYTE PTR [ecx],dh
  44176c:	(bad)  
  44176d:	inc    DWORD PTR [eax]
  44176f:	int3   
  441770:	data16 mov bl,0x2a
  441773:	dec    esp
  441775:	add    BYTE PTR [ecx],ch
  441777:	mov    DWORD PTR [esi],esp
  441779:	aas    
  44177a:	add    BYTE PTR [edi],dh
  44177c:	inc    DWORD PTR [ebx+0x6836beff]
  441782:	in     al,0x0
  441784:	add    bh,bh
  441786:	or     DWORD PTR [ecx-0x1400a554],0xad0000ff
  441790:	mov    esp,0xffd907
  441795:	add    BYTE PTR [eax+eax*1-0x5876caee],al
  44179c:	(bad)  
  44179d:	(bad)  
  44179e:	dec    edx
  4417a0:	fisub  WORD PTR [edx+0xff89f5]
  4417a6:	int    0xcc
  4417a8:	lahf   
  4417a9:	pop    ss
  4417aa:	int3   
  4417ab:	and    al,0x0
  4417ad:	add    bh,bh
  4417af:	sar    DWORD PTR [eax+ecx*1+0x42],cl
  4417b3:	(bad)  
  4417b4:	inc    DWORD PTR [eax]
  4417b6:	outs   dx,BYTE PTR ds:[esi]
  4417b7:	add    BYTE PTR [edi+0x3c],cl
  4417ba:	push   DWORD PTR [ebp-0x1]
  4417bd:	dec    esp
  4417bf:	mov    al,0x2d
  4417c1:	adc    al,0x4b
  4417c3:	(bad)  
  4417c4:	(bad)  
  4417c5:	(bad)  
  4417c6:	aas    
  4417c7:	mov    DWORD PTR [ecx],ebp
  4417c9:	scas   al,BYTE PTR es:[edi]
  4417ca:	call   DWORD PTR [ecx+0x2bffffff]
  4417d0:	xchg   ebx,eax
  4417d1:	adc    ebx,DWORD PTR [edi-0x7d]
  4417d4:	inc    DWORD PTR [ebx-0xd9e0085]
  4417da:	(bad)  
  4417db:	call   0x7643e3e0
  4417e0:	mov    dh,0x8c
  4417e2:	mov    al,ds:0xfc83ff00
  4417e7:	jmp    FWORD PTR [edi-0x4006c]
  4417ed:	add    BYTE PTR [eax],al
  4417ef:	mov    bh,BYTE PTR [esi+0x5]
  4417f2:	sub    eax,0x18ff00ff
  4417f7:	dec    eax
  4417f9:	xchg   esp,eax
  4417fa:	sbb    DWORD PTR [ebx-0x7d],0x0
  4417fe:	mov    DWORD PTR [ebp+0xdcd3],esi
  441804:	inc    DWORD PTR [eax]
  441806:	ret    
  441807:	add    BYTE PTR [edx-0x26],bh
  44180a:	add    BYTE PTR [edx+0x9cc0000],ah
  441810:	push   ss
  441811:	pop    eax
  441812:	sar    bh,cl
  441814:	add    bh,bh
  441816:	xchg   DWORD PTR [eax],eax
  441818:	sbb    al,0x4f
  44181a:	add    bl,ch
  44181c:	add    DWORD PTR [eax],0xffffffff
  44181f:	mov    DWORD PTR [eax],esi
  441821:	jl     0x44189a
  441823:	add    BYTE PTR [ebx-0x1ffef00],al
  441829:	sub    al,0xff
  44182b:	test   BYTE PTR [eax],al
  44182d:	(bad)  
  44182e:	(bad)  
  44182f:	cmp    dl,BYTE PTR [edi+0x49]
  441832:	out    0xff,eax
  441834:	(bad)  
  441835:	push   DWORD PTR [eax+eax*1]
  441838:	jno    0x44188b
  44183a:	inc    ebp
  44183c:	add    bh,bh
  44183e:	jmp    DWORD PTR [ecx+0xbd994d]
  441844:	int3   
  441845:	call   DWORD PTR [edi]
  441847:	int3   
  441848:	jl     0x44188f
  44184a:	cmp    DWORD PTR [ebx-0x36000001],0xffffffbc
  441851:	xor    bh,BYTE PTR [ebx+0xa00ff83]
  441857:	add    BYTE PTR [esi+0x4d],ch
  44185a:	cmp    ebx,0xffffffff
  44185d:	int3   
  44185e:	jmp    FWORD PTR ds:0xff37bab6
  441864:	or     DWORD PTR [ecx-0x6fec002f],0xffffffff
  44186b:	push   esi
  44186c:	add    BYTE PTR [ecx+0x55437300],cl
  441872:	jae    0x441874
  441874:	(bad)  
  441875:	call   DWORD PTR [edx+0x9a5ff]
  44187b:	and    eax,0xb683ffff
  441880:	mov    edx,0x89835605
  441885:	add    BYTE PTR [eax-0xd4be7d],al
  44188b:	xor    edi,edi
  44188d:	inc    DWORD PTR [eax]
  44188f:	in     eax,dx
  441890:	(bad)  
  441891:	mov    ebx,0xcc00ff6c
  441896:	and    al,0x0
  441898:	shl    DWORD PTR [ecx+ecx*4],0x6d
  44189c:	cmp    edi,0x0
  44189f:	iret   
  4418a0:	mov    bh,0x6f
  4418a2:	imul   eax,DWORD PTR [ebx-0x7c957601],0xffffffff
  4418a9:	xor    DWORD PTR [eax],eax
  4418ab:	pop    ds
  4418ac:	inc    DWORD PTR [ebx+0x3190b200]
  4418b2:	es (bad) 
  4418b4:	inc    DWORD PTR [ebx-0x1c75ff0e]
  4418ba:	add    BYTE PTR [ecx-0x41760077],ch
  4418c0:	add    ecx,DWORD PTR [ebx+0x69]
  4418c6:	lods   al,BYTE PTR ds:[esi]
  4418c7:	jmp    FWORD PTR [ecx+0x61]
  4418ca:	cmp    DWORD PTR [ebx-0x1],0xffffffff
  4418ce:	add    DWORD PTR [edx-0x335c46],0xffffff83
  4418d5:	sub    DWORD PTR ds:0x89faddff,0x47
  4418dc:	add    BYTE PTR [ebx+0x6f3322ff],al
  4418e2:	jns    0x4418e3
  4418e4:	add    BYTE PTR [ebx-0x5ac900b6],al
  4418ea:	jmp    DWORD PTR [edi+0x6c890089]
  4418f0:	rcl    DWORD PTR [edi-0xff761d],0x22
  4418f7:	add    BYTE PTR [edx+ecx*4-0x6100],ah
  4418fe:	adc    DWORD PTR [ecx+0x5d],0x6b
  441902:	mov    esi,0x44ffffff
  441907:	int3   
  441908:	popa   
  441909:	jae    0x44188e
  44190b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44190c:	(bad)  
  44190d:	(bad)  
  44190e:	inc    ebp
  441910:	leave  
  441911:	stos   BYTE PTR es:[edi],al
  441912:	sahf   
  441913:	add    BYTE PTR [ebx+0x7dff48ff],al
  441919:	push   ebx
  44191a:	call   ebx
  44191c:	inc    DWORD PTR [ebx+0x4badb483]
  441922:	jecxz  0x441924
  441924:	cmp    edi,0x11
  441927:	call   DWORD PTR [ebp+0x66]
  44192a:	jmp    FWORD PTR [ecx]
  44192c:	inc    DWORD PTR [eax]
  44192e:	push   DWORD PTR [ecx-0x66]
  441931:	scas   eax,DWORD PTR es:[edi]
  441932:	cli    
  441933:	inc    DWORD PTR [ebx-0xe000c7d]
  441939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44193a:	and    DWORD PTR [ecx],0xffffffff
  44193d:	add    bh,bh
  44193f:	inc    ebp
  441940:	fwait
  441941:	push   0xffffffd8
  441943:	add    BYTE PTR [eax],al
  441945:	call   ecx
  441947:	add    BYTE PTR [ecx-0x51],ah
  44194a:	sbb    edi,0x0
  44194d:	cmp    edi,0xfffffff0
  441950:	aad    0x7b
  441952:	mov    cl,0xff
  441954:	(bad)  
  441955:	push   DWORD PTR [ebx-0x1]
  441958:	popf   
  441959:	imul   edi,edi,0xff00ffdd
  44195f:	out    dx,eax
  441960:	push   0xffffff8a
  441962:	fadd   QWORD PTR [eax]
  441964:	(bad)  
  441965:	jmp    FWORD PTR [ebx-0x1]
  441968:	jns    0x44199a
  44196a:	add    BYTE PTR [edx-0x1],cl
  44196d:	add    bh,bh
  44196f:	fist   WORD PTR [eax]
  441971:	aad    0x66
  441973:	inc    DWORD PTR [eax]
  441975:	(bad)  
  441976:	jle    0x441901
  441978:	arpl   di,bx
  44197a:	jmp    FWORD PTR [eax-0x77]
  44197d:	int3   
  44197e:	or     DWORD PTR [ebx-0xc91b7a],0x0
  441985:	sbb    DWORD PTR [esi+0x0],0xffffffd1
  441989:	jbe    0x44198b
  44198b:	or     al,BYTE PTR [eax]
  44198d:	(bad)  
  44198e:	jmp    DWORD PTR [ebx]
  441990:	shl    DWORD PTR [ebx-0x5f],1
  441993:	add    bh,bh
  441995:	add    BYTE PTR [eax+0x0],al
  441998:	repnz inc DWORD PTR fs:[ecx]
  44199c:	inc    DWORD PTR [eax]
  44199e:	push   DWORD PTR [edx]
  4419a0:	test   bh,bh
  4419a2:	xchg   esi,eax
  4419a3:	inc    DWORD PTR [eax]
  4419a5:	adc    DWORD PTR [ebx+0x0],0xffffffc3
  4419a9:	mov    ecx,0x8389a6ff
  4419ae:	mov    DWORD PTR [edi+ebx*2+0xff5fdd],esp
  4419b5:	inc    DWORD PTR [edx]
  4419b7:	add    BYTE PTR [esi-0x2c],dl
  4419ba:	jmp    FWORD PTR [eax+eax*1-0x5900000]
  4419c1:	and    DWORD PTR [ebx],eax
  4419c3:	inc    DWORD PTR [ebx-0x5fff6100]
  4419c9:	(bad)  
  4419ca:	inc    DWORD PTR [eax]
  4419cc:	(bad)  
  4419cd:	dec    DWORD PTR [ecx+0x28a6928]
  4419d3:	dec    DWORD PTR [ecx-0x1cff4301]
  4419d9:	pop    ss
  4419da:	(bad)  
  4419db:	fiadd  DWORD PTR [eax]
  4419dd:	inc    DWORD PTR [ebx+0x9e96a80]
  4419e3:	(bad)  
  4419e4:	inc    DWORD PTR [eax]
  4419e6:	mov    ch,0x0
  4419e8:	repnz aaa 
  4419ea:	push   DWORD PTR [edi]
  4419ec:	add    bh,bh
  4419ee:	dec    DWORD PTR [ecx+ebx*2+0xccb5c1]
  4419f5:	sub    ecx,0x0
  4419f8:	jmp    0xff671998
  4419fd:	mov    DWORD PTR [ecx-0x3f10f5a0],ecx
  441a03:	add    bh,bh
  441a05:	add    BYTE PTR [eax+0x4ded00],ch
  441a0b:	das    
  441a0c:	add    BYTE PTR [ebx+0x45154ff],al
  441a12:	scas   eax,DWORD PTR es:[edi]
  441a13:	(bad)  
  441a14:	(bad)  
  441a15:	inc    DWORD PTR [ecx+0x0]
  441a18:	nop
  441a19:	xchg   edi,eax
  441a1a:	(bad)  
  441a1b:	cli    
  441a1c:	add    bh,bh
  441a1e:	call   DWORD PTR [ebx+0x3801a2]
  441a24:	add    bh,bh
  441a26:	jmp    0x35d72a
  441a2b:	(bad)  
  441a2c:	inc    DWORD PTR [eax]
  441a2e:	add    BYTE PTR [edi-0x6e],bh
  441a31:	ins    BYTE PTR es:[edi],dx
  441a32:	pusha  
  441a33:	add    bh,bh
  441a35:	(bad)  
  441a36:	jnp    0x441a37
  441a38:	inc    ebp
  441a39:	push   0xffff4800
  441a3e:	add    BYTE PTR [esi+0xb],dl
  441a41:	fsubr  DWORD PTR [ebx]
  441a43:	add    DWORD PTR [eax],0xffffffff
  441a46:	(bad)  
  441a47:	inc    DWORD PTR [edx-0x7f]
  441a4a:	add    DWORD PTR [esi],0x0
  441a4d:	inc    DWORD PTR [ebx+0x66fcccd4]
  441a53:	(bad)  
  441a54:	dec    esp
  441a56:	(bad)  
  441a57:	int3   
  441a58:	mov    al,ds:0xcc59ffc8
  441a5d:	(bad)  
  441a5e:	inc    DWORD PTR [ecx-0x68]
  441a61:	mov    ds:0xffffffb1,eax
  441a66:	mov    ecx,0xff9f9889
  441a6b:	sub    eax,0xfe89ff00
  441a70:	sub    edx,ebx
  441a72:	pop    ebx
  441a73:	(bad)  
  441a74:	inc    DWORD PTR [eax]
  441a76:	ror    ah,1
  441a78:	mov    edi,DWORD PTR [ebx]
  441a7a:	inc    DWORD PTR [edi]
  441a7c:	add    BYTE PTR [ecx-0x7b09d001],cl
  441a82:	dec    edi
  441a83:	(bad)  
  441a84:	(bad)  
  441a85:	call   FWORD PTR [ecx+0x2e8eff]
  441a8b:	into   
  441a8c:	or     DWORD PTR [ecx-0x18de1a77],0x78
  441a93:	mov    DWORD PTR [eax],eax
  441a95:	jmp    FWORD PTR [edi-0x19001]
  441a9b:	retf   0x0
  441a9e:	push   esi
  441aa0:	jb     0x441a7e
  441aa2:	mov    BYTE PTR [ebx-0xa7ff01],al
  441aa8:	fisubr WORD PTR [eax-0x1]
  441aab:	xor    DWORD PTR [eax],eax
  441aad:	add    DWORD PTR [eax],0xfffffff8
  441ab0:	jecxz  0x441b2f
  441ab2:	cmp    BYTE PTR [eax],al
  441ab4:	add    BYTE PTR [ebx-0x31777ced],al
  441aba:	jmp    DWORD PTR [ebx-0x1]
  441abd:	add    bh,bh
  441abf:	idiv   BYTE PTR [ebp-0xe42a]
  441ac5:	sub    DWORD PTR [eax-0x1],0x6e
  441ac9:	sar    edi,1
  441acb:	dec    ah
  441acd:	(bad)  
  441ace:	jmp    FWORD PTR [esi+ebp*4+0xa]
  441ad2:	out    0x0,al
  441ad4:	add    BYTE PTR [eax],al
  441ad6:	mov    DWORD PTR [eax],0xe1ff15b8
  441adc:	inc    DWORD PTR [ebx+0x52a718cc]
  441ae2:	das    
  441ae3:	inc    DWORD PTR [eax]
  441ae5:	sbb    edx,0xffffffff
  441ae8:	stos   DWORD PTR es:[edi],eax
  441ae9:	lea    eax,[eax]
  441aeb:	dec    esi
  441aec:	add    bh,bh
  441aee:	call   FWORD PTR [esi*4+0xff4575]
  441af5:	inc    DWORD PTR [edx-0x76903634]
  441afb:	adc    eax,DWORD PTR [eax]
  441afd:	int3   
  441afe:	int3   
  441aff:	int    0xa9
  441b01:	stc    
  441b02:	or     edi,edi
  441b04:	(bad)  
  441b05:	dec    ecx
  441b07:	sbb    DWORD PTR [esi+0x3cff7c],0xffffffff
  441b0e:	call   FWORD PTR [ebx-0x79f332]
  441b14:	(bad)  
  441b15:	inc    DWORD PTR [eax]
  441b17:	call   DWORD PTR [ebx-0x7cd476ff]
  441b1d:	dec    DWORD PTR [ecx+0x4b5a4c77]
  441b23:	mov    DWORD PTR [eax],eax
  441b25:	add    BYTE PTR [ecx],dl
  441b27:	int3   
  441b28:	fcomp  QWORD PTR [eax+0x0]
  441b2b:	iret   
  441b2c:	inc    DWORD PTR [eax]
  441b2e:	dec    DWORD PTR [eax]
  441b30:	push   0xffffffe2
  441b32:	pushf  
  441b33:	(bad)  
  441b34:	inc    DWORD PTR [eax]
  441b36:	stc    
  441b37:	add    dh,cl
  441b39:	inc    eax
  441b3a:	add    dl,bh
  441b3c:	add    bh,bh
  441b3e:	mov    esp,ecx
  441b40:	xchg   edx,eax
  441b41:	dec    ebp
  441b42:	sahf   
  441b43:	inc    DWORD PTR [eax]
  441b45:	add    BYTE PTR [edx],bh
  441b47:	add    BYTE PTR [ebx+0x27ff58],bh
  441b4d:	add    BYTE PTR [ebx-0x51baf3e8],al
  441b53:	int3   
  441b54:	add    DWORD PTR [eax],0x17
  441b57:	cmp    DWORD PTR [eax],0x24
  441b5a:	call   DWORD PTR [ecx+0x7e00ffff]
  441b60:	cmp    DWORD PTR [edi+0xffcc76],ecx
  441b66:	and    eax,0xff29e100
  441b6b:	mov    WORD PTR [eax],es
  441b6d:	(bad)  
  441b6e:	(bad)  
  441b6f:	mov    edi,0xccccbdc6
  441b74:	add    BYTE PTR [eax],al
  441b76:	test   al,0x83
  441b78:	xor    al,0x7a
  441b7a:	(bad)  
  441b7b:	mov    esi,0x3ffffff
  441b80:	retf   0xde43
  441b83:	add    bh,bh
  441b85:	call   FWORD PTR [ebx+0x42f683]
  441b8b:	jae    0xc4a1b14
  441b91:	ss push cs
  441b93:	(bad)  
  441b94:	inc    DWORD PTR [eax]
  441b96:	inc    ebp
  441b97:	call   FWORD PTR [ebx+ebp*8-0xba34]
  441b9e:	jmp    FWORD PTR [ebx-0x5f]
  441ba1:	add    edi,ecx
  441ba3:	inc    DWORD PTR [eax]
  441ba5:	cmp    edi,0xffffffff
  441ba8:	dec    ebp
  441ba9:	arpl   WORD PTR [eax],ax
  441bab:	and    eax,0xa989ffff
  441bb0:	mov    al,ds:0x89005785
  441bb5:	add    ah,bh
  441bb7:	int3   
  441bb8:	aam    0x8b
  441bba:	jmp    DWORD PTR [edi+0x1083cc83]
  441bc0:	xchg   esi,eax
  441bc1:	test   DWORD PTR [edi],0x31ff00ff
  441bc7:	jmp    FWORD PTR [esp+ebx*8-0x34]
  441bcb:	xor    al,0x83
  441bcd:	add    bh,bh
  441bcf:	lea    edi,[edi]
  441bd1:	pusha  
  441bd2:	ins    DWORD PTR es:[edi],dx
  441bd3:	inc    DWORD PTR [eax]
  441bd5:	cmp    DWORD PTR [esi],0x0
  441bd8:	clc    
  441bd9:	push   esp
  441bda:	add    BYTE PTR [eax-0x30ff3301],ah
  441be0:	aad    0x38
  441be2:	fild   DWORD PTR [eax]
  441be4:	add    DWORD PTR [ebx-0x6748fff1],0x0
  441beb:	jle    0x441bed
  441bed:	(bad)  
  441bee:	inc    DWORD PTR [esi+esi*1-0x769476]
  441bf5:	add    BYTE PTR [edx],cl
  441bf7:	call   DWORD PTR [ebp+0x59]
  441bfa:	call   ecx
  441bfc:	(bad)  
  441bfd:	(bad)  
  441bfe:	call   FWORD PTR [esp+edi*1-0x765e6d]
  441c05:	(bad)  
  441c06:	(bad)  
  441c08:	mov    cl,0x77
  441c0a:	int3   
  441c0b:	sub    al,0x0
  441c0d:	inc    DWORD PTR [eax]
  441c0f:	scas   eax,DWORD PTR es:[edi]
  441c10:	leave  
  441c11:	retf   0xc6
  441c14:	(bad)  
  441c15:	(bad)  
  441c16:	jmp    0xff1a:0xff28b6ff
  441c1d:	add    BYTE PTR [eax],al
  441c1f:	cmp    bh,bh
  441c21:	imul   ebx,DWORD PTR [ebp+0x0],0xffffffff
  441c25:	(bad)  
  441c26:	jmp    0x3d402a
  441c2b:	out    dx,eax
  441c2c:	inc    DWORD PTR [ebx+0x623bb4cc]
  441c32:	inc    ebx
  441c33:	add    bh,bh
  441c35:	add    BYTE PTR [edi-0xc85f01],ah
  441c3b:	push   0xffffffff
  441c3d:	inc    DWORD PTR [eax]
  441c3f:	or     BYTE PTR [edi+0xff91d4],dl
  441c45:	push   ebp
  441c47:	(bad)  
  441c48:	jnp    0x441c94
  441c4a:	(bad)  
  441c4b:	(bad)  
  441c4d:	add    BYTE PTR [ecx-0x76763066],cl
  441c53:	push   edx
  441c55:	inc    DWORD PTR [ebx+0x567ffff]
  441c5b:	add    eax,0x45a584ff
  441c60:	sbb    DWORD PTR [eax],eax
  441c62:	add    bh,bh
  441c64:	aam    0x0
  441c66:	(bad)  
  441c67:	(bad)  
  441c68:	call   FWORD PTR [edi]
  441c6a:	mov    ecx,0xc85dff44
  441c6f:	daa    
  441c70:	adc    bh,bh
  441c72:	inc    DWORD PTR [ebx-0xff3398]
  441c78:	jmp    DWORD PTR [eax]
  441c7a:	repnz clc 
  441c7c:	inc    DWORD PTR [ebp-0x35]
  441c7f:	jo     0x441caa
  441c81:	inc    DWORD PTR [eax]
  441c83:	inc    DWORD PTR [edi]
  441c85:	dec    DWORD PTR [ecx+0x612cffff]
  441c8b:	dec    esi
  441c8c:	call   FWORD PTR [edx+eax*8+0x83125d]
  441c93:	inc    ecx
  441c95:	add    ah,cl
  441c97:	add    BYTE PTR [ebx-0x33ca086d],al
  441c9d:	adc    esi,DWORD PTR [esi]
  441c9f:	jne    0x441d0b
  441ca1:	dec    esp
  441ca3:	inc    DWORD PTR [edx]
  441ca5:	(bad)  
  441ca6:	(bad)  
  441ca7:	(bad)  
  441ca8:	inc    DWORD PTR [eax]
  441caa:	popf   
  441cab:	pop    esp
  441cac:	dec    DWORD PTR [esi+0x10]
  441caf:	in     al,dx
  441cb0:	add    BYTE PTR [ebx-0x2c0001],0xcc
  441cb7:	dec    esp
  441cb9:	popa   
  441cba:	jnp    0x441ccb
  441cbc:	call   FWORD PTR [ebp-0xe65e22]
  441cc2:	inc    DWORD PTR [eax]
  441cc4:	mov    ds:0xffff8300,eax
  441cc9:	icebp  
  441cca:	sbb    BYTE PTR [esi],0xff
  441ccd:	push   ebx
  441cce:	fst    DWORD PTR [ebx+0x32]
  441cd1:	add    bh,bh
  441cd3:	add    BYTE PTR [ebx-0xff34],ah
  441cd9:	fild   DWORD PTR [ecx+0x1485ff59]
  441cdf:	fsub   st(0),st
  441ce1:	inc    DWORD PTR [eax]
  441ce3:	jmp    DWORD PTR [esi]
  441ce5:	inc    DWORD PTR [ebx-0x293f7c01]
  441ceb:	mov    edi,edi
  441ced:	push   0xfffffffd
  441cef:	stc    
  441cf0:	jl     0x441cf1
  441cf2:	(bad)  
  441cf3:	jmp    FWORD PTR [ebx]
  441cf5:	int3   
  441cf6:	add    bh,bh
  441cf8:	(bad)  
  441cf9:	cmp    edx,eax
  441cfb:	xor    al,BYTE PTR [eax]
  441cfd:	sub    eax,0xff4c150e
  441d02:	(bad)  
  441d03:	jmp    DWORD PTR [ebx-0x1]
  441d06:	inc    DWORD PTR [eax]
  441d08:	add    BYTE PTR [ebx-0x7007053],ah
  441d0e:	inc    edi
  441d0f:	push   0x56
  441d11:	add    BYTE PTR [ecx+0xff71ff],cl
  441d17:	add    BYTE PTR [ebx-0xf1db20],al
  441d1d:	push   eax
  441d1e:	inc    esp
  441d1f:	loop   0x441d89
  441d21:	or     esp,0xffffffcc
  441d24:	mov    bh,0xff
  441d26:	add    bh,bh
  441d28:	int3   
  441d29:	faddp  st(4),st
  441d2b:	mov    ebx,0x2c641fff
  441d30:	ret    
  441d31:	add    bh,bh
  441d33:	(bad)  
  441d34:	in     al,dx
  441d35:	add    bh,bh
  441d37:	add    bh,bh
  441d39:	pop    edx
  441d3a:	mov    ebx,0xdc15839f
  441d3f:	test   BYTE PTR [eax],0xff
  441d42:	(bad)  
  441d43:	jmp    DWORD PTR [edi+edi*8]
  441d46:	inc    DWORD PTR [eax]
  441d48:	mov    DWORD PTR [ebx],edi
  441d4a:	adc    BYTE PTR [ebx-0x25b0a001],dh
  441d50:	in     eax,dx
  441d51:	(bad)  
  441d52:	(bad)  
  441d53:	call   FWORD PTR [ebx]
  441d55:	inc    DWORD PTR [eax]
  441d57:	cmp    edi,0x61
  441d5a:	adc    eax,0xb47ff13
  441d5f:	cli    
  441d60:	add    al,0x0
  441d62:	mov    DWORD PTR [ecx+0x830068],ecx
  441d68:	(bad)  
  441d69:	jp     0x441dc7
  441d6b:	xor    bh,bh
  441d6d:	or     eax,0x83b5d8a2
  441d72:	inc    DWORD PTR [eax]
  441d74:	xchg   esp,eax
  441d75:	(bad)  
  441d76:	inc    DWORD PTR [ebx-0x144d000]
  441d7c:	add    BYTE PTR [edi-0x460d81],bl
  441d82:	inc    DWORD PTR [eax]
  441d84:	inc    edx
  441d85:	add    ah,cl
  441d87:	(bad)  
  441d88:	jmp    FWORD PTR [edx+eiz*2+0x58]
  441d8c:	call   FWORD PTR [edi+0x6a]
  441d8f:	xchg   esi,eax
  441d90:	jmp    0x441d15
  441d92:	mov    DWORD PTR [ebx-0x7c00b2],eax
  441d98:	add    BYTE PTR [ecx-0x7d],bh
  441d9b:	adc    DWORD PTR [eax],eax
  441d9d:	or     edi,DWORD PTR [ecx]
  441d9f:	inc    edi
  441da0:	or     ah,cl
  441da2:	(bad)  
  441da3:	push   DWORD PTR [ecx-0x1]
  441da6:	add    bh,bh
  441da8:	mov    DWORD PTR [ebx+ecx*4-0x5c],edx
  441dac:	add    BYTE PTR [esp+ecx*8-0x452a],dh
  441db3:	add    BYTE PTR ds:0x8983ff89,al
  441db9:	shl    DWORD PTR [edi],1
  441dbb:	jmp    0xff81:0xf34ebeff
  441dc2:	(bad)  
  441dc3:	(bad)  
  441dc4:	js     0x441dc5
  441dc6:	(bad)  
  441dc7:	(bad)  
  441dc8:	(bad)  
  441dc9:	in     eax,dx
  441dca:	cmp    eax,0xe1a2837f
  441dcf:	cmp    al,0xb0
  441dd1:	int3   
  441dd2:	add    bh,bh
  441dd4:	jl     0x441dd6
  441dd6:	inc    DWORD PTR [eax]
  441dd8:	(bad)  
  441dd9:	in     al,dx
  441dda:	sbb    cl,ch
  441ddc:	sub    ebx,0xffffffa4
  441ddf:	pushf  
  441de0:	(bad)  
  441de1:	inc    DWORD PTR [ebx-0xff4800]
  441de7:	(bad)  
  441de8:	inc    DWORD PTR [edx+0x2ff8455]
  441dee:	stos   BYTE PTR es:[edi],al
  441def:	sahf   
  441df0:	bound  eax,QWORD PTR [eax]
  441df2:	add    BYTE PTR [eax],al
  441df4:	fmul   DWORD PTR [ecx-0x2d00ff01]
  441dfa:	jb     0x441da9
  441dfc:	push   DWORD PTR [ebx]
  441dfe:	(bad)  
  441dff:	hlt    
  441e00:	inc    edx
  441e01:	dec    esp
  441e03:	int3   
  441e04:	sub    bh,bh
  441e06:	(bad)  
  441e07:	(bad)  
  441e08:	call   FWORD PTR ds:0xb6834379
  441e0e:	and    ecx,edi
  441e10:	sub    eax,0x8b890083
  441e15:	int3   
  441e16:	add    DWORD PTR [ebx-0x63b39600],0x0
  441e1d:	xor    ah,BYTE PTR [ebx+0xccdb45]
  441e23:	add    BYTE PTR [ebx+0x0],ah
  441e26:	(bad)  
  441e27:	(bad)  
  441e28:	(bad)  
  441e29:	jmp    0x7c70:0x1bffb223
  441e30:	aas    
  441e31:	add    DWORD PTR [ebx+0x835100],0xffffff83
  441e38:	add    BYTE PTR [edi],ch
  441e3a:	outs   dx,BYTE PTR ds:[esi]
  441e3b:	mov    edi,?
  441e3d:	repnz xchg ecx,eax
  441e3f:	dec    eax
  441e40:	test   BYTE PTR [eax],al
  441e42:	cmp    edi,0xffffffd9
  441e45:	add    bh,bh
  441e47:	(bad)  
  441e48:	push   DWORD PTR [eax+edx*8]
  441e4b:	push   eax
  441e4c:	inc    DWORD PTR [ebp-0xe44fc4]
  441e52:	cmp    edi,0x42
  441e55:	int3   
  441e56:	(bad)  
  441e57:	inc    DWORD PTR [eax]
  441e59:	std    
  441e5a:	fdivr  DWORD PTR [esi-0x1]
  441e5d:	pop    ds
  441e5e:	stos   BYTE PTR es:[edi],al
  441e5f:	sub    ebp,ebx
  441e61:	inc    DWORD PTR [eax]
  441e63:	and    DWORD PTR ds:0x8300ffff,0xffffff8b
  441e6a:	mov    dl,0x7d
  441e6c:	add    BYTE PTR [ebx+0x4b],dh
  441e6f:	int    0x8
  441e71:	(bad)  
  441e72:	(bad)  
  441e73:	call   eax
  441e75:	add    BYTE PTR [eax],al
  441e77:	int3   
  441e78:	add    BYTE PTR [edi+ebx*8-0x73573336],cl
  441e7f:	mov    ds:0xff00892f,eax
  441e84:	cmp    eax,0xffff89
  441e89:	shl    BYTE PTR [edi+0x48],0x83
  441e8d:	dec    ebx
  441e8e:	adc    al,0xb8
  441e90:	pop    esi
  441e91:	(bad)  
  441e92:	(bad)  
  441e93:	call   DWORD PTR [edi-0x7600ff7d]
  441e99:	pop    ebx
  441e9a:	xchg   BYTE PTR [edi],bh
  441e9c:	(bad)  
  441e9d:	stc    
  441e9e:	les    eax,FWORD PTR [esi+0x34]
  441ea1:	dec    DWORD PTR [ecx-0x7c9377]
  441ea7:	cmp    edi,0xffffffaa
  441eaa:	inc    esp
  441eab:	mov    cl,0x83
  441ead:	mov    bh,dh
  441eaf:	xchg   edi,eax
  441eb0:	cld    
  441eb1:	inc    DWORD PTR [ebx-0x7cffb001]
  441eb7:	inc    DWORD PTR [ebx-0x21cb17]
  441ebd:	mov    al,0x81
  441ebf:	cmp    esi,DWORD PTR [ecx-0x7ff0001]
  441ec5:	(bad)  
  441ec6:	inc    DWORD PTR [eax]
  441ec8:	int3   
  441ec9:	or     dh,bl
  441ecb:	push   0xffffff83
  441ecd:	pop    ss
  441ece:	loope  0x441e90
  441ed0:	cmp    DWORD PTR [ecx-0x327d00],ecx
  441ed6:	add    bh,bh
  441ed8:	inc    DWORD PTR [esi]
  441eda:	outs   dx,BYTE PTR ds:[esi]
  441edb:	mov    DWORD PTR [eax],0x6a44b91
  441ee1:	(bad)  
  441ee2:	dec    esp
  441ee4:	and    eax,0xcc8300ff
  441ee9:	lods   al,BYTE PTR ss:[esi]
  441eeb:	push   ebp
  441eec:	jmp    FWORD PTR [eax-0x76f58178]
  441ef2:	(bad)  
  441ef3:	push   DWORD PTR [edi-0x1]
  441ef6:	inc    DWORD PTR [eax]
  441ef8:	jmp    FWORD PTR [edi+0x5ecc9ef8]
  441efe:	(bad)  
  441eff:	add    al,0x24
  441f01:	or     DWORD PTR [ecx-0x335f7d],0x0
  441f08:	add    BYTE PTR [edi],ah
  441f0a:	and    esp,ecx
  441f0c:	sbb    DWORD PTR [eax],0x1e
  441f0f:	mov    ch,0xd8
  441f11:	(bad)  
  441f12:	(bad)  
  441f13:	jmp    FWORD PTR [esi]
  441f15:	(bad)  
  441f16:	inc    DWORD PTR [eax]
  441f18:	add    BYTE PTR [esi-0x71],ah
  441f1b:	xchg   ebx,eax
  441f1c:	cmp    DWORD PTR [esp+ecx*2-0x5b69],0xffffffff
  441f24:	xchg   esi,eax
  441f25:	mov    edi,edi
  441f27:	inc    DWORD PTR [eax]
  441f29:	dec    ecx
  441f2a:	retf   0xff70
  441f2d:	mov    esi,0xff54a0b0
  441f32:	inc    DWORD PTR [eax]
  441f34:	adc    eax,0xff83ffff
  441f39:	das    
  441f3a:	iret   
  441f3b:	mov    esp,0x6a70ad83
  441f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441f41:	(bad)  
  441f42:	(bad)  
  441f43:	call   esp
  441f45:	add    bh,bh
  441f47:	add    BYTE PTR [eax],al
  441f49:	inc    edi
  441f4a:	xchg   al,ah
  441f4c:	int3   
  441f4d:	cmp    esp,DWORD PTR [edi+0x1e]
  441f50:	imul   edi,edi,0x834083ff
  441f56:	inc    DWORD PTR [eax]
  441f58:	add    BYTE PTR [ebp+0x0],cl
  441f5b:	dec    esi
  441f5c:	add    BYTE PTR [edx+0x31],ch
  441f5f:	mov    ch,0x58
  441f61:	inc    DWORD PTR [eax]
  441f63:	inc    DWORD PTR [ebx-0x1]
  441f66:	inc    DWORD PTR [eax]
  441f68:	add    BYTE PTR [ebx-0x87660ec],ch
  441f6e:	out    dx,al
  441f6f:	sub    ebp,DWORD PTR [ebp-0x53330034]
  441f75:	(bad)  
  441f76:	(bad)  
  441f77:	(bad)  
  441f78:	call   FWORD PTR [eax-0x497c4d5f]
  441f7e:	push   ebp
  441f7f:	aas    
  441f80:	inc    edi
  441f81:	int3   
  441f82:	inc    DWORD PTR [ebx-0xff7675]
  441f88:	add    BYTE PTR [ebx+eiz*2],dh
  441f8b:	mov    eax,ds:0x89d46283
  441f90:	std    
  441f91:	or     DWORD PTR [ecx-0x7c6577],0xffffff83
  441f98:	inc    edi
  441f9a:	ins    BYTE PTR es:[edi],dx
  441f9b:	imul   ecx,esp,0xffffffe5
  441f9e:	fld    DWORD PTR [ebx*1-0x53000001]
  441fa5:	dec    DWORD PTR [ecx+0x5b48ff00]
  441fab:	pop    DWORD PTR [eax]
  441fad:	or     dh,ch
  441faf:	test   al,0x9c
  441fb1:	add    DWORD PTR [eax],0xffffffff
  441fb4:	xchg   ebp,eax
  441fb5:	int3   
  441fb6:	int3   
  441fb7:	add    bh,bh
  441fb9:	imul   esp,ecx,0xfe13ffde
  441fbf:	mov    ds:0xbc,al
  441fc4:	test   al,0xff
  441fc6:	add    bh,bh
  441fc8:	int3   
  441fc9:	inc    ecx
  441fca:	(bad)  
  441fcb:	sbb    bh,bh
  441fcd:	sub    bh,BYTE PTR [eax]
  441fcf:	push   0xff000016
  441fd4:	mov    al,0xcc
  441fd6:	add    bh,bh
  441fd8:	add    BYTE PTR [ebx+0x19],dh
  441fdb:	or     al,0x0
  441fdd:	dec    esp
  441fde:	stos   DWORD PTR es:[edi],eax
  441fdf:	in     al,dx
  441fe0:	cmp    edi,edi
  441fe2:	(bad)  
  441fe3:	(bad)  
  441fe4:	inc    DWORD PTR [ebx+0x18cc89cc]
  441fea:	jmp    0x5a45:0x9a43ccef
  441ff1:	add    BYTE PTR [eax],al
  441ff3:	add    BYTE PTR [esi-0x337700],al
  441ff9:	and    dl,ch
  441ffb:	fcos   
  441ffd:	rcl    BYTE PTR [ebp+0xff3f62],0xff
  442004:	scas   eax,DWORD PTR es:[edi]
  442005:	add    bh,bh
  442007:	add    bh,bh
  442009:	data16 mov bh,BYTE PTR [eax+eax*1]
  44200d:	fistp  QWORD PTR [ebp-0x11]
  442010:	sbb    bh,bh
  442012:	add    DWORD PTR [eax],0x15
  442015:	(bad)  
  442016:	(bad)  
  442017:	(bad)  
  442018:	inc    DWORD PTR [edi-0x6e000b40]
  44201e:	push   0x5a
  442020:	xor    al,0xff
  442022:	inc    DWORD PTR [eax]
  442024:	rol    DWORD PTR [eax],1
  442026:	(bad)  
  442027:	inc    DWORD PTR [eax]
  442029:	xor    al,0x53
  44202b:	imul   eax,DWORD PTR [ebx+0x16d5fdf6],0xffffffff
  442032:	inc    DWORD PTR [eax]
  442034:	sub    edi,edi
  442036:	add    bh,bh
  442038:	mov    edx,ecx
  44203a:	iret   
  44203b:	fwait
  44203c:	push   DWORD PTR [ebp+0xeb15e4]
  442042:	int3   
  442043:	add    BYTE PTR [esi],cl
  442045:	add    bh,bh
  442047:	cmp    edi,0x2
  44204a:	jg     0x4420b9
  44204c:	jmp    FWORD PTR [esi-0x30]
  44204f:	pop    edx
  442050:	pop    edi
  442051:	add    bh,bh
  442053:	push   eax
  442055:	inc    DWORD PTR [ebx+0xf8dff00]
  44205b:	sbb    bh,bh
  44205d:	mov    dl,0x20
  44205f:	sbb    eax,0xff83ccea
  442064:	sar    bh,0xcc
  442067:	int3   
  442068:	inc    eax
  44206a:	jmp    0x8c4c1fc7
  44206f:	inc    eax
  442070:	stos   DWORD PTR es:[edi],eax
  442071:	add    DWORD PTR [eax],0xffffffff
  442074:	inc    ecx
  442075:	add    bh,bh
  442077:	dec    DWORD PTR [ecx-0xa608ee]
  44207d:	xchg   edi,eax
  44207f:	push   ss
  442080:	add    bh,bh
  442082:	(bad)  
  442083:	(bad)  
  442084:	cmp    BYTE PTR [eax],al
  442086:	dec    esp
  442088:	dec    DWORD PTR [edx]
  44208a:	popf   
  44208b:	test   al,0x0
  44208d:	in     al,0xf9
  44208f:	es (bad) 
  442091:	(bad)  
  442092:	(bad)  
  442093:	call   FWORD PTR [esi-0x77]
  442096:	add    BYTE PTR [ebx+0x94c6500],al
  44209c:	inc    DWORD PTR [edi+eax*1+0x6c]
  4420a0:	test   DWORD PTR [ebx-0x7c960000],0xa68900ff
  4420aa:	xchg   ch,ch
  4420ac:	mov    DWORD PTR [edi+0x61],ebx
  4420af:	xor    al,ah
  4420b1:	mov    edi,edi
  4420b3:	jmp    esp
  4420b5:	add    DWORD PTR [ebx+0x3cc7ff00],0xffffffb2
  4420bc:	or     ebx,0xfffffff8
  4420bf:	mov    al,0xfe
  4420c1:	(bad)  
  4420c2:	(bad)  
  4420c3:	call   FWORD PTR [eax-0x1]
  4420c6:	(bad)  
  4420c7:	dec    DWORD PTR [ecx-0x760702f7]
  4420cd:	push   ecx
  4420ce:	jge    0x4420f4
  4420d0:	xor    eax,0xf1ffffcc
  4420d5:	inc    DWORD PTR [eax]
  4420d7:	dec    DWORD PTR [ecx+0x31cf12]
  4420dd:	push   es
  4420de:	mov    bl,0xf1
  4420e0:	lahf   
  4420e1:	(bad)  
  4420e2:	(bad)  
  4420e3:	(bad)  
  4420e4:	fcos   
  4420e6:	(bad)  
  4420e7:	inc    DWORD PTR [ebx+0x882c71]
  4420ed:	sbb    eax,0xff676eb2
  4420f2:	add    bh,bh
  4420f4:	xor    bh,bh
  4420f6:	add    bh,bh
  4420f8:	add    BYTE PTR [ebp+eiz*8-0xe237645],ah
  4420ff:	mov    ah,0xfd
  442101:	add    BYTE PTR [eax],al
  442103:	push   DWORD PTR [ecx]
  442105:	add    BYTE PTR [ecx-0x7dcff01],cl
  44210b:	icebp  
  44210c:	inc    ebx
  44210e:	mov    edx,0xff83ff8d
  442114:	test   esp,0xbd830000
  44211a:	mov    esi,ss
  44211c:	add    BYTE PTR [esi+esi*1-0xff3675],ch
  442123:	call   ecx
  442125:	add    BYTE PTR [eax],al
  442127:	(bad)  
  442128:	inc    DWORD PTR ds:0x3500bc12
  44212e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44212f:	inc    esi
  442130:	ret    0x83
  442133:	(bad)  
  442134:	fiadd  WORD PTR [eax]
  442136:	mov    edi,edi
  442138:	push   DWORD PTR [ecx+0x5e]
  44213b:	test   edi,edi
  44213d:	nop
  44213e:	div    BYTE PTR [esi]
  442140:	cmp    bh,bh
  442142:	(bad)  
  442143:	call   DWORD PTR [ecx-0x1]
  442146:	add    DWORD PTR [ebx-0x3e111d01],0x0
  44214d:	jnp    0x442106
  44214f:	mov    DWORD PTR [esi+0x3dffff83],edx
  442155:	add    BYTE PTR [ecx+0x291483ff],cl
  44215b:	pop    ss
  44215c:	inc    DWORD PTR [esi+0x5c]
  44215f:	jp     0x4421b2
  442161:	add    DWORD PTR [ebx-0x7c006777],0xffffff83
  442168:	add    BYTE PTR ds:0xe5ffaa5a,bl
  44216e:	sub    ch,BYTE PTR [ebx]
  442170:	in     al,0x83
  442172:	add    bh,bh
  442174:	add    edi,edi
  442176:	(bad)  
  442177:	dec    DWORD PTR [ecx-0xdf7213]
  44217d:	push   ecx
  44217e:	popa   
  44217f:	mov    ecx,0xff00ff6c
  442184:	push   edi
  442185:	mov    edi,edi
  442187:	cmp    edi,0x45
  44218a:	cmp    dl,BYTE PTR [eax]
  44218c:	int3   
  44218d:	mov    ah,0x7d
  44218f:	fldenv [eax+eax*1+0x0]
  442193:	call   DWORD PTR [eax]
  442195:	add    ah,cl
  442197:	add    BYTE PTR [eax],al
  442199:	das    
  44219a:	fdiv   QWORD PTR [esi-0x7d]
  44219d:	pop    edi
  44219e:	add    al,0x24
  4421a0:	rol    BYTE PTR [ebx+0x3dff00],cl
  4421a6:	add    bh,bh
  4421a8:	call   FWORD PTR [esp+ecx*8]
  4421ab:	cli    
  4421ac:	sub    ebp,0x8
  4421af:	mov    bl,0xe7
  4421b1:	inc    DWORD PTR [ebx-0x3300bc01]
  4421b7:	dec    esp
  4421b9:	xor    edi,DWORD PTR [edx+0x0]
  4421bc:	cmp    ebp,0xffffffd1
  4421bf:	lahf   
  4421c0:	into   
  4421c1:	inc    DWORD PTR [eax]
  4421c3:	inc    DWORD PTR [ebx+0xcc]
  4421c9:	das    
  4421ca:	in     al,0x8f
  4421cc:	(bad)  
  4421cd:	js     0x4421d1
  4421cf:	pop    ebx
  4421d0:	add    edi,edi
  4421d2:	(bad)  
  4421d3:	call   DWORD PTR [edx]
  4421d5:	add    bh,bh
  4421d7:	(bad)  
  4421d8:	(bad)  
  4421d9:	mov    eax,0x84cc80a5
  4421de:	and    BYTE PTR [ebx],0x94
  4421e1:	(bad)  
  4421e2:	(bad)  
  4421e3:	call   DWORD PTR [ebp+0x0]
  4421e6:	(bad)  
  4421e7:	dec    esp
  4421e9:	(bad)  
  4421eb:	push   ss
  4421ec:	(bad)  
  4421ed:	std    
  4421ee:	les    esi,FWORD PTR [ecx+0x6]
  4421f1:	add    BYTE PTR [eax],al
  4421f3:	inc    DWORD PTR [edx-0x7c3301]
  4421f9:	mov    esp,0x7fffe476
  4421fe:	loop   0x44219f
  442200:	test   BYTE PTR [ecx+0xc0ffff],0xcc
  442207:	inc    DWORD PTR [eax]
  442209:	test   DWORD PTR [ecx+0x70],edx
  44220c:	jmp    FWORD PTR [esi-0x7c60c71d]
  442212:	add    BYTE PTR [eax],al
  442214:	jp     0x442216
  442216:	cmp    edi,0x0
  442219:	ins    BYTE PTR es:[edi],dx
  44221a:	push   ss
  44221b:	xchg   ebx,eax
  44221c:	add    BYTE PTR [ecx],ah
  44221e:	mov    ebx,0xcc13c0
  442223:	jmp    FWORD PTR [ecx]
  442225:	inc    DWORD PTR [eax]
  442227:	int3   
  442228:	and    DWORD PTR [eax],0x1b
  44222b:	scas   al,BYTE PTR es:[edi]
  44222c:	add    BYTE PTR [eax+0x24],bl
  44222f:	arpl   WORD PTR [esp+ecx*8-0x33a80100],si
  442236:	cmp    edi,0xffffff83
  442239:	push   ds
  44223a:	xchg   DWORD PTR [bx+si],eax
  44223d:	add    ch,dh
  44223f:	jg     0x4422a4
  442241:	dec    DWORD PTR [ecx-0x337ce700]
  442247:	int3   
  442248:	inc    DWORD PTR [ebp-0x3ff9060]
  44224e:	in     al,dx
  44224f:	data16 jle 0x442251
  442252:	int3   
  442253:	dec    DWORD PTR [eax-0x100]
  442259:	int    0x9b
  44225b:	iret   
  44225c:	add    bl,bh
  44225e:	lahf   
  44225f:	and    bh,0x0
  442262:	add    BYTE PTR [ecx-0xd],cl
  442268:	call   DWORD PTR [esi-0x24]
  44226b:	sub    al,0xff
  44226d:	or     al,0x10
  44226f:	(bad)  
  442271:	(bad)  
  442272:	inc    DWORD PTR [eax]
  442274:	inc    WORD PTR [eax]
  442277:	add    bh,bh
  442279:	aad    0xa1
  44227b:	cmp    DWORD PTR [eax],eax
  44227d:	add    dl,bh
  44227f:	dec    ebx
  442280:	mov    eax,0xb6cc00ff
  442285:	add    bh,bh
  442287:	add    BYTE PTR [eax],al
  442289:	aam    0xf3
  44228b:	enter  0xd6ff,0x78
  44228f:	push   esi
  442290:	jg     0x442215
  442292:	add    DWORD PTR [ebx+0xcc83e1],0xffffffff
  442299:	div    BYTE PTR [eax+0x0]
  44229c:	call   FWORD PTR [esi-0x7cc47da3]
  4422a2:	int3   
  4422a3:	dec    DWORD PTR ds:0xff89ffff
  4422a9:	inc    eax
  4422aa:	icebp  
  4422ab:	(bad)  
  4422ad:	mov    edi,0x60907c
  4422b2:	(bad)  
  4422b3:	call   DWORD PTR [ebp+0x0]
  4422b6:	add    BYTE PTR [ebx-0x7c434601],al
  4422bc:	dec    ebp
  4422be:	int    0x71
  4422c0:	pop    ecx
  4422c1:	add    DWORD PTR [eax],0xffffffff
  4422c4:	sub    edi,edi
  4422c6:	add    bh,bh
  4422c8:	call   FWORD PTR [edi+eax*8]
  4422cb:	mov    esp,0x7387af00
  4422d0:	ja     0x4422d2
  4422d2:	(bad)  
  4422d3:	jmp    DWORD PTR [ebx+eax*4-0x1]
  4422d7:	add    bh,bh
  4422d9:	scas   al,BYTE PTR es:[edi]
  4422da:	mov    ds:0x8b58ff4b,eax
  4422df:	aad    0xf3
  4422e1:	cmp    edi,0xffffffff
  4422e4:	test   eax,0x83ffff83
  4422e9:	call   0x9c7825d
  4422ee:	bound  eax,QWORD PTR fs:[esi-0x7d]
  4422f2:	inc    DWORD PTR [ebx+0x89ffcd]
  4422f8:	mov    DWORD PTR [eax],esi
  4422fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4422fb:	sahf   
  4422fc:	cmp    DWORD PTR [eax],0xffffffc6
  4422ff:	div    DWORD PTR [edx-0x17ffff01]
  442305:	inc    DWORD PTR [ebx-0x357c0001]
  44230b:	pop    ds
  44230c:	int3   
  44230d:	gs cdq 
  44230f:	or     BYTE PTR [ecx-0x34],ah
  442312:	add    BYTE PTR [eax],al
  442314:	rol    BYTE PTR [ebx-0x46000000],cl
  44231a:	inc    edi
  44231b:	xchg   esp,eax
  44231c:	inc    DWORD PTR [ebp+0xb1b325]
  442322:	add    BYTE PTR [eax],al
  442324:	mov    ah,0x0
  442326:	inc    DWORD PTR [eax]
  442328:	dec    DWORD PTR [edi+esi*8-0x1d]
  44232c:	inc    DWORD PTR [edx]
  44232e:	test   al,0xd
  442330:	mov    esp,0xd8ffcc00
  442335:	add    BYTE PTR [eax],al
  442337:	add    DWORD PTR [ebx-0xdd902],0xffffff89
  44233e:	call   0x76ff:0x89ffe095
  442345:	inc    DWORD PTR [ebx-0x4c2a7c77]
  44234b:	dec    esp
  44234c:	int3   
  44234d:	aas    
  44234e:	gs mov ecx,0xff83d6
  442354:	xor    bh,bh
  442356:	add    BYTE PTR [eax],al
  442358:	jmp    DWORD PTR [edx]
  44235a:	xchg   edi,eax
  44235b:	push   es
  44235c:	int3   
  44235d:	(bad)  
  44235e:	ja     0x4423b6
  442360:	add    cl,ah
  442362:	(bad)  
  442363:	jmp    FWORD PTR [ebx+0xff00ff]
  442369:	fstp   DWORD PTR [esi+0x54a7834b]
  44236f:	imul   esi,DWORD PTR [edx-0x2f33ff01],0xff00ff00
  442379:	nop
  44237a:	push   esp
  44237b:	pusha  
  44237c:	inc    DWORD PTR [ebx]
  44237e:	(bad)  
  44237f:	leave  
  442380:	sub    cl,ah
  442382:	add    bh,bh
  442384:	dec    esi
  442385:	add    BYTE PTR [eax],al
  442387:	add    BYTE PTR [ebx-0x4c51af],al
  44238d:	mul    BYTE PTR [ebp-0xff8739]
  442393:	sub    DWORD PTR [edx],0xffffff89
  442396:	add    DWORD PTR [eax],0xffffffff
  442399:	mov    dl,0x50
  44239b:	mov    ebx,0x2ef58ff
  4423a0:	dec    eax
  4423a1:	add    bh,bh
  4423a3:	int3   
  4423a4:	mov    ?,edi
  4423a6:	add    DWORD PTR [ebx-0x2cb6d701],0x0
  4423ad:	pop    ds
  4423ae:	call   0xf2ff:0xff00efe7
  4423b5:	add    bh,bh
  4423b7:	inc    DWORD PTR [eax]
  4423b9:	jle    0x442372
  4423bb:	ror    esp,0x85
  4423be:	pop    ss
  4423bf:	mov    WORD PTR [ebx+eax*4],es
  4423c2:	(bad)  
  4423c3:	inc    DWORD PTR [eax-0xff7d00]
  4423c9:	scas   eax,DWORD PTR es:[edi]
  4423ca:	add    BYTE PTR [ebp-0x42e38634],al
  4423d0:	and    eax,DWORD PTR [eax]
  4423d2:	(bad)  
  4423d3:	push   eax
  4423d5:	add    BYTE PTR [ebx+0x6a81ff89],al
  4423db:	das    
  4423dc:	add    BYTE PTR [edx-0x8486d9],cl
  4423e2:	add    bh,bh
  4423e4:	jmp    0x44236f
  4423e6:	add    DWORD PTR [eax],0xffffffff
  4423e9:	mov    esp,esi
  4423eb:	dec    ebx
  4423ec:	add    BYTE PTR [eax+0x1e],bh
  4423ef:	mov    esp,0xff899c
  4423f4:	xchg   esi,eax
  4423f5:	add    bh,bh
  4423f7:	inc    DWORD PTR [eax]
  4423f9:	and    cl,BYTE PTR [edx-0x37]
  4423fc:	add    BYTE PTR [eax-0x11c5b5],ah
  442402:	(bad)  
  442403:	call   FWORD PTR [eax+eax*1-0x7c330034]
  44240a:	push   cs
  44240b:	gs add dl,cl
  44240e:	out    dx,eax
  44240f:	into   
  442410:	fdivr  st,st(7)
  442412:	inc    DWORD PTR [eax]
  442414:	cmp    al,0x0
  442416:	add    BYTE PTR [eax],al
  442418:	push   ebp
  44241a:	test   ch,0xff
  44241d:	scas   al,BYTE PTR es:[edi]
  44241e:	stc    
  44241f:	and    DWORD PTR [eax+0x0],eax
  442422:	dec    DWORD PTR [ecx-0x3300ba]
  442428:	add    cl,ah
  44242a:	sbb    dh,cl
  44242c:	add    al,dl
  44242e:	repnz mov eax,ds:0xffccb3
  442434:	in     eax,0xcc
  442436:	add    BYTE PTR [eax],al
  442438:	add    BYTE PTR [ecx],ch
  44243a:	push   ss
  44243b:	in     al,dx
  44243c:	add    BYTE PTR [edx+eax*4+0xff7c7f],dh
  442443:	dec    DWORD PTR [esi-0x7cffff77]
  442449:	loope  0x442473
  44244b:	icebp  
  44244c:	add    BYTE PTR [ebx-0x8ff5bf],al
  442452:	add    bh,bh
  442454:	test   eax,0x83ffffff
  442459:	icebp  
  44245a:	out    dx,eax
  44245b:	push   edi
  44245c:	add    dl,dl
  44245e:	xchg   ecx,eax
  44245f:	dec    edx
  442460:	inc    eax
  442461:	inc    DWORD PTR [eax]
  442463:	or     edi,0xffffffff
  442466:	inc    DWORD PTR [ebx-0x1352f601]
  44246c:	add    BYTE PTR [ebx+0x1c],dh
  44246f:	dec    esp
  442470:	lahf   
  442471:	add    bh,bh
  442473:	or     DWORD PTR [edi-0x34],0xffffffff
  442477:	inc    DWORD PTR [ebx+0x50cc01]
  44247d:	imul   eax,DWORD PTR [ecx-0x4a]
  442481:	(bad)  
  442482:	inc    DWORD PTR [eax]
  442484:	std    
  442485:	dec    DWORD PTR [ecx+0x4bd4ffff]
  44248b:	push   ss
  44248c:	add    bh,dl
  44248e:	push   cs
  44248f:	jb     0x4424e7
  442491:	inc    DWORD PTR [eax]
  442493:	jmp    FWORD PTR [edi]
  442495:	add    bh,bh
  442497:	cmp    edi,0xffffffe8
  44249a:	leave  
  44249b:	lea    eax,[eax]
  44249d:	add    DWORD PTR [ebp+esi*4-0x22],edx
  4424a1:	add    BYTE PTR [eax],al
  4424a3:	add    ch,cl
  4424a5:	inc    DWORD PTR [eax]
  4424a7:	add    bh,bh
  4424a9:	mov    dl,0xc5
  4424ab:	jmp    0x57:0x5680b7ff
  4424b2:	inc    DWORD PTR [eax]
  4424b4:	retf   0x83
  4424b7:	(bad)  
  4424b8:	inc    DWORD PTR [edi+0x4b00d049]
  4424be:	mov    edi,0x8389f5a0
  4424c3:	add    BYTE PTR [edi-0x76ffff01],ah
  4424c9:	(bad)  
  4424ca:	(bad)  
  4424cb:	test   DWORD PTR [eax],0x1df46f38
  4424d1:	add    bh,bh
  4424d3:	push   DWORD PTR [ebx+0x0]
  4424d6:	(bad)  
  4424d7:	(bad)  
  4424d8:	dec    DWORD PTR [ebp+0x75ff4b5d]
  4424de:	xor    esp,edx
  4424e0:	pop    eax
  4424e1:	inc    DWORD PTR [eax]
  4424e3:	call   FWORD PTR [eax-0x1]
  4424e9:	cmp    dl,BYTE PTR [ecx]
  4424eb:	test   al,0xff
  4424ed:	push   ds
  4424ee:	sub    DWORD PTR [ebp+0x62],edx
  4424f1:	add    bh,bh
  4424f3:	dec    DWORD PTR [ebp+0xff00]
  4424f9:	and    bl,dl
  4424fb:	push   ebx
  4424fc:	dec    eax
  4424fe:	pop    es
  4424ff:	and    bl,dl
  442501:	add    BYTE PTR [eax],al
  442503:	add    BYTE PTR [ebp-0x1],cl
  442506:	mov    edi,edi
  442508:	cmp    DWORD PTR [esi+0x3e],0x25
  44250c:	cmp    DWORD PTR [ebx],0x1e
  44250f:	(bad)  [eax-0x1]
  442512:	(bad)  
  442513:	jmp    ebx
  442515:	inc    DWORD PTR [eax]
  442517:	(bad)  
  442518:	inc    DWORD PTR [eax-0x16]
  44251b:	push   ebx
  44251c:	(bad)  
  44251d:	ficom  WORD PTR [ecx-0x3333a33d]
  442523:	add    BYTE PTR ds:0xffff8900,dl
  442529:	aaa    
  44252a:	sti    
  44252b:	sub    al,0xcc
  44252d:	retf   
  44252e:	and    eax,0xff00be6f
  442533:	int3   
  442534:	pushf  
  442535:	mov    edi,edi
  442537:	(bad)  
  442538:	push   ebx
  44253a:	bound  edi,QWORD PTR [edi-0x7d]
  44253d:	xchg   esi,eax
  44253e:	push   edi
  44253f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442540:	xchg   esp,eax
  442541:	or     esp,0xffffffff
  442544:	stos   DWORD PTR es:[edi],eax
  442545:	inc    DWORD PTR [ebx+0x7c92ffff]
  44254b:	pop    ebx
  44254c:	add    BYTE PTR [ebp-0x50c03b],bh
  442552:	cmp    edi,0x65
  442555:	add    BYTE PTR [eax],al
  442557:	(bad)  
  442558:	push   DWORD PTR [ebx]
  44255a:	mov    eax,ds:0xa78600eb
  44255f:	mov    ch,0xac
  442561:	cmp    edi,0xffffffff
  442564:	mov    al,0x0
  442566:	inc    DWORD PTR [ebx-0x3fcba601]
  44256c:	mov    DWORD PTR [esi],ecx
  44256e:	bound  ecx,QWORD PTR [ebp+0x13]
  442571:	inc    DWORD PTR [eax]
  442573:	add    bh,al
  442575:	cmp    edi,0xffffff83
  442578:	add    BYTE PTR [edi],dh
  44257a:	lods   al,BYTE PTR ds:[esi]
  44257b:	xchg   ebx,eax
  44257c:	add    BYTE PTR [esi],ch
  44257e:	mov    al,0xf7
  442580:	jnp    0x442581
  442582:	add    ah,cl
  442584:	jl     0x442585
  442586:	(bad)  
  442587:	inc    DWORD PTR [ebx+0x4d4018]
  44258d:	sbb    cl,BYTE PTR [edi+0xff0b3f]
  442593:	sbb    ecx,0xffffffff
  442596:	add    bh,bh
  442598:	(bad)  
  442599:	mov    edx,0x50ff5b59
  44259e:	jb     0x442563
  4425a0:	cmp    cl,BYTE PTR [ecx-0xf0001]
  4425a6:	add    BYTE PTR [ebx+0x31e303ff],al
  4425ac:	sbb    DWORD PTR [ebx],0xffffffd3
  4425af:	jge    0x442618
  4425b1:	add    DWORD PTR [eax],0x0
  4425b4:	dec    ebp
  4425b5:	int3   
  4425b6:	mov    DWORD PTR [eax],eax
  4425b8:	jmp    DWORD PTR [ebp-0x7000ae60]
  4425be:	xchg   ecx,eax
  4425bf:	xlat   BYTE PTR ds:[ebx]
  4425c0:	fwait
  4425c1:	inc    DWORD PTR [ebx-0x701]
  4425c7:	add    BYTE PTR [ecx-0xf07424],cl
  4425cd:	jle    0x4425c4
  4425cf:	pop    esi
  4425d0:	imul   edi,edi,0xffffffff
  4425d3:	int3   
  4425d4:	mov    dh,0x0
  4425d6:	add    bh,bh
  4425d8:	add    BYTE PTR [ebp-0x7f00d709],bl
  4425de:	pop    ecx
  4425df:	mov    eax,ebp
  4425e1:	int3   
  4425e2:	int3   
  4425e3:	mov    DWORD PTR [edi-0x7c000001],edi
  4425e9:	and    al,0xc3
  4425eb:	mov    dl,0x0
  4425ed:	push   cs
  4425ee:	retf   0xaf9f
  4425f1:	dec    DWORD PTR [ecx-0xff3d01]
  4425f7:	(bad)  
  4425f8:	(bad)  
  4425f9:	stc    
  4425fa:	popf   
  4425fb:	in     eax,0xff
  4425fd:	mov    cl,0x5
  4425ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442600:	mov    ecx,0xfaff0000
  442605:	inc    DWORD PTR [eax]
  442607:	int3   
  442608:	call   FWORD PTR [edx+0x3c006b5c]
  44260e:	mov    dl,BYTE PTR [ebp-0x33ff00a1]
  442614:	and    BYTE PTR [ecx-0x67000001],cl
  44261a:	lods   al,BYTE PTR ds:[esi]
  44261b:	into   
  44261c:	add    BYTE PTR [ebp+0x70],bl
  44261f:	out    dx,eax
  442620:	test   BYTE PTR [eax],0x0
  442623:	jmp    edx
  442625:	add    BYTE PTR [eax],al
  442627:	(bad)  
  442628:	(bad)  
  442629:	jge    0x442625
  44262b:	imul   eax,DWORD PTR [eax],0xffffffb5
  44262e:	and    bh,BYTE PTR [ebx]
  442630:	xlat   BYTE PTR ds:[ebx]
  442631:	cmp    edi,0xffffffff
  442634:	je     0x442635
  442636:	add    BYTE PTR [eax],al
  442638:	add    dl,ah
  44263a:	shr    BYTE PTR [eax+eax*1],0x10
  44263e:	lods   al,BYTE PTR ds:[esi]
  44263f:	mov    esp,0x83ff83f7
  442644:	mov    BYTE PTR [eax],0x83
  442647:	(bad)  
  442648:	push   DWORD PTR [esi+0x21008df4]
  44264e:	xor    al,0x6a
  442650:	xchg   ecx,eax
  442651:	int3   
  442652:	add    DWORD PTR [eax],0x4
  442655:	add    ah,cl
  442657:	dec    DWORD PTR [ecx+0x4e7221]
  44265d:	dec    eax
  44265e:	inc    ebx
  44265f:	lods   al,BYTE PTR ds:[esi]
  442660:	push   0xffffffff
  442662:	(bad)  
  442663:	(bad)  
  442664:	cmp    al,0x0
  442666:	(bad)  
  442667:	(bad)  
  442668:	call   DWORD PTR [esi-0x26ff52c8]
  44266e:	ret    
  44266f:	sub    DWORD PTR [edi-0x20340000],0xcc00ffff
  442679:	sti    
  44267a:	sub    al,0xcc
  44267c:	(bad)  
  44267d:	stc    
  44267e:	sub    ebx,edi
  442680:	cmp    al,0xff
  442682:	inc    DWORD PTR [eax]
  442684:	aas    
  442685:	mov    edi,edi
  442687:	inc    DWORD PTR [eax]
  442689:	call   0x59f3:0x82ffe2bd
  442690:	mov    bh,bh
  442692:	or     DWORD PTR [ecx+0xff0001],0xffffff83
  442699:	add    eax,0x4100b13e
  44269e:	and    al,0xf0
  4426a0:	adc    eax,DWORD PTR [eax]
  4426a2:	add    BYTE PTR [ecx-0x10],cl
  4426a8:	add    bl,cl
  4426aa:	je     0x4426d6
  4426ac:	add    BYTE PTR [eax-0x7c1efbb5],bh
  4426b2:	add    bh,bh
  4426b4:	test   eax,0xffffff
  4426b9:	test   al,0x7b
  4426bb:	pop    ebx
  4426bc:	(bad)  
  4426bd:	jmp    0x0:0x89dcfd71
  4426c4:	call   0x44f3c8
  4426c9:	push   cs
  4426ca:	fistp  QWORD PTR [edi-0x1]
  4426cd:	xor    edx,DWORD PTR [ecx]
  4426cf:	push   0x0
  4426d1:	(bad)  
  4426d2:	(bad)  
  4426d3:	jmp    DWORD PTR [esi+0xffcc]
  4426d9:	in     eax,0xba
  4426db:	mov    edi,edi
  4426dd:	hlt    
  4426de:	cmp    al,0xe8
  4426e0:	in     al,0x0
  4426e2:	dec    esp
  4426e4:	cmp    BYTE PTR [eax],al
  4426e6:	add    BYTE PTR [eax],al
  4426e8:	jmp    DWORD PTR [ebx+0x71]
  4426eb:	leave  
  4426ec:	mov    DWORD PTR [eax-0x24],esp
  4426ef:	aad    0xf2
  4426f1:	add    BYTE PTR [eax],al
  4426f3:	add    BYTE PTR [edi],bl
  4426f5:	(bad)  
  4426f6:	inc    DWORD PTR [eax]
  4426f8:	add    BYTE PTR [eax-0x18],ch
  4426fb:	pop    ecx
  4426fc:	add    ch,ah
  4426fe:	daa    
  4426ff:	test   eax,0x83ff0032
  442704:	repnz int3 
  442706:	dec    esp
  442708:	adc    DWORD PTR [edx-0x55769f73],0xffffff95
  44270f:	jp     0x44277f
  442711:	add    bh,bh
  442713:	add    ch,al
  442715:	mov    esp,ecx
  442717:	inc    DWORD PTR [eax]
  442719:	sbb    BYTE PTR [ebp-0x5d190027],dl
  44271f:	int    0x30
  442721:	add    DWORD PTR [eax],0x0
  442724:	call   0xd912:0xccff0000
  44272b:	mov    eax,0x5c87dcff
  442730:	jl     0x442731
  442732:	(bad)  
  442733:	inc    DWORD PTR [edi-0x10000]
  442739:	mov    edx,0x9900ac51
  44273e:	jecxz  0x442714
  442740:	sub    al,BYTE PTR [eax]
  442742:	inc    DWORD PTR [ebx-0x7c000024]
  442748:	int3   
  442749:	pop    ebx
  44274a:	out    dx,eax
  44274b:	ja     0x4426d0
  44274d:	jl     0x4427ac
  44274f:	adc    ecx,esp
  442751:	(bad)  
  442752:	inc    DWORD PTR [eax]
  442754:	lods   al,BYTE PTR ds:[esi]
  442755:	dec    DWORD PTR [ecx+0x1263ff00]
  44275b:	push   edx
  44275c:	jmp    DWORD PTR [edx-0xf]
  44275f:	shl    DWORD PTR [ebx-0x1],0xff
  442763:	jmp    esp
  442765:	int3   
  442766:	int3   
  442767:	mov    edi,edi
  442769:	xchg   edi,eax
  44276a:	mov    ebp,0xeaa4fffa
  44276f:	(bad)  
  442770:	cwde   
  442771:	add    bh,bh
  442773:	call   DWORD PTR [esi-0x3400]
  442779:	or     al,0x37
  44277b:	cmp    al,BYTE PTR [ebx+0x25cd5b3e]
  442781:	mov    esp,ecx
  442783:	and    DWORD PTR [edx],0xffffffff
  442786:	mov    edi,edi
  442788:	mov    edx,ecx
  44278a:	adc    cl,BYTE PTR [ecx]
  44278c:	mov    DWORD PTR [edi],eax
  44278e:	dec    ebx
  44278f:	xchg   ecx,eax
  442790:	inc    eax
  442791:	add    bh,bh
  442793:	add    BYTE PTR [ebp-0x1],bh
  442796:	add    ah,cl
  442798:	mov    DWORD PTR [eax],esp
  44279a:	push   eax
  44279b:	cmp    DWORD PTR [eax],eax
  44279d:	inc    edx
  44279e:	lods   eax,DWORD PTR ds:[esi]
  44279f:	pop    ds
  4427a0:	and    DWORD PTR [eax],eax
  4427a2:	int3   
  4427a3:	add    dl,dl
  4427a5:	inc    DWORD PTR [eax]
  4427a7:	dec    DWORD PTR [ecx-0x992313]
  4427ad:	fild   DWORD PTR fs:[esi+0x83ffb5]
  4427b4:	pop    esp
  4427b5:	add    BYTE PTR [eax],al
  4427b7:	int3   
  4427b8:	call   DWORD PTR [esi]
  4427ba:	fwait
  4427bb:	stos   DWORD PTR es:[edi],eax
  4427bc:	dec    eax
  4427be:	inc    ecx
  4427bf:	in     eax,0x8
  4427c1:	inc    DWORD PTR [ebx+0x83d583]
  4427c7:	add    BYTE PTR [eax],al
  4427c9:	popf   
  4427ca:	xchg   esi,eax
  4427cb:	hlt    
  4427cc:	call   ecx
  4427ce:	out    0xbe,al
  4427d0:	jno    0x4427d1
  4427d2:	int3   
  4427d3:	mov    DWORD PTR [edx+0x0],esp
  4427d6:	add    bh,bh
  4427d8:	add    BYTE PTR [edi+eiz*4+0x56f4ff5e],cl
  4427df:	pushf  
  4427e0:	push   esi
  4427e1:	or     DWORD PTR [ecx+0xffbcff],0xffffffff
  4427e8:	call   DWORD PTR [ebp+0x72]
  4427eb:	dec    ecx
  4427ec:	jmp    DWORD PTR [ecx+0x37]
  4427ef:	pop    eax
  4427f0:	add    al,0xff
  4427f2:	cmp    edi,0xffffff85
  4427f5:	add    bh,bh
  4427f7:	cmp    edi,0x70
  4427fa:	push   ss
  4427fb:	pop    eax
  4427fc:	(bad)  
  4427fd:	cmp    DWORD PTR [eax],ebp
  4427ff:	clc    
  442800:	xchg   bh,bh
  442802:	add    bh,bh
  442804:	jmp    0x452808
  442809:	sub    DWORD PTR [eax-0x65],ebx
  44280c:	add    BYTE PTR [eax],cl
  44280e:	cli    
  44280f:	cld    
  442810:	lods   al,BYTE PTR ds:[esi]
  442811:	add    ah,cl
  442813:	jmp    DWORD PTR [eax-0x1]
  442816:	(bad)  
  442817:	(bad)  
  442818:	(bad)  
  442819:	cmp    BYTE PTR [ebx+ecx*4-0x7f046101],ah
  442820:	jo     0x442821
  442822:	(bad)  
  442823:	jmp    DWORD PTR [edi]
  442825:	cmp    edi,0xffffffff
  442828:	inc    DWORD PTR [ecx+0x52ffaad7]
  44282e:	xchg   ecx,eax
  44282f:	sub    eax,0xcc83ff0b
  442834:	arpl   di,di
  442836:	inc    DWORD PTR [eax]
  442838:	jmp    FWORD PTR [esi]
  44283a:	loop   0x4427fa
  44283c:	(bad)  
  44283d:	js     0x442879
  44283f:	fild   DWORD PTR ss:[eax]
  442842:	mov    esp,ecx
  442844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442845:	cmp    edi,0xffffffcc
  442848:	add    BYTE PTR [ebp-0x4b005d38],cl
  44284e:	pop    ss
  44284f:	ret    0xe
  442852:	inc    DWORD PTR [eax]
  442854:	in     al,dx
  442855:	add    bh,bh
  442857:	add    DWORD PTR [eax],0x4d
  44285a:	fimul  WORD PTR [edx-0x3f516a7d]
  442860:	scas   eax,DWORD PTR es:[edi]
  442861:	add    bh,bh
  442863:	add    dl,bh
  442865:	add    BYTE PTR [ebx-0x328b0100],al
  44286b:	ja     0x44286d
  44286d:	in     eax,0x9d
  44286f:	or     ecx,ecx
  442871:	add    BYTE PTR [ecx-0x33ab01],cl
  442877:	int3   
  442878:	call   FWORD PTR [ecx+0x7b]
  44287b:	sub    bh,bh
  44287d:	dec    edx
  44287e:	lea    ebx,[eax-0xfffc]
  442884:	add    BYTE PTR [ebx-0x49000001],al
  44288a:	xchg   edx,eax
  44288b:	aaa    
  44288c:	call   FWORD PTR [edx+0x11]
  44288f:	stc    
  442890:	push   esp
  442891:	add    BYTE PTR [ebx+0x483],al
  442897:	inc    DWORD PTR [ebx-0x7c6fc0c8]
  44289d:	dec    edi
  44289e:	and    dl,ah
  4428a0:	jb     0x4428a1
  4428a2:	add    BYTE PTR [ebx+0x830084],al
  4428a8:	add    ebp,0xffffffb3
  4428ab:	nop
  4428ac:	call   FWORD PTR [esp+edx*2]
  4428af:	aad    0xe2
  4428b1:	(bad)  
  4428b2:	inc    DWORD PTR [ebx-0xffe5]
  4428b8:	add    BYTE PTR [edx+0x24003cd8],bl
  4428be:	cli    
  4428bf:	add    al,0xf2
  4428c1:	add    BYTE PTR [ebx-0x7c7c0600],al
  4428c7:	(bad)  
  4428c8:	inc    DWORD PTR [edi+0x4b]
  4428cb:	sbb    edi,edi
  4428cd:	xor    DWORD PTR [edx-0x33],ecx
  4428d0:	daa    
  4428d1:	inc    DWORD PTR [ebx-0x76ffe934]
  4428d7:	add    bh,bh
  4428d9:	outs   dx,DWORD PTR ds:[esi]
  4428da:	push   edx
  4428db:	mov    bh,0xff
  4428dd:	ins    DWORD PTR es:[edi],dx
  4428de:	cmp    BYTE PTR [edi],al
  4428e0:	mov    edi,0x50ffff83
  4428e5:	(bad)  
  4428e6:	inc    DWORD PTR [eax]
  4428e8:	and    DWORD PTR [edi+eiz*2],0xffffff91
  4428ec:	jmp    ecx
  4428ee:	push   edi
  4428ef:	xor    al,0x22
  4428f1:	add    bh,bh
  4428f3:	add    BYTE PTR [eax+eax*1-0x18000001],bl
  4428fa:	ds retf 0x5dcc
  4428fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4428ff:	mov    DWORD PTR [ebx-0x1],eax
  442902:	dec    esp
  442904:	inc    ecx
  442905:	add    BYTE PTR [eax],al
  442907:	(bad)  
  442908:	(bad)  
  442909:	call   0xd4440f5b
  44290e:	and    ecx,DWORD PTR gs:[eax+0x0]
  442912:	dec    DWORD PTR [ecx+0xff0045]
  442918:	add    BYTE PTR [ebp+0x70ccca61],bl
  44291e:	push   es
  44291f:	and    dl,bh
  442921:	inc    DWORD PTR [eax]
  442923:	add    BYTE PTR [ecx+0xcc0000],ch
  442929:	loop   0x4428c3
  44292b:	mov    bh,bh
  44292d:	sbb    eax,0xf55c54
  442932:	dec    esp
  442934:	jo     0x442936
  442936:	inc    DWORD PTR [eax]
  442938:	add    dh,bh
  44293a:	std    
  44293b:	jmp    0xc5334d3f
  442940:	sub    bh,bh
  442942:	add    bh,bh
  442944:	jne    0x442945
  442946:	dec    esp
  442948:	(bad)  
  442949:	in     eax,dx
  44294a:	arpl   WORD PTR [edx-0x2df6f901],si
  442950:	push   ecx
  442951:	dec    esp
  442953:	mov    DWORD PTR [edi],eax
  442955:	inc    DWORD PTR [eax]
  442957:	cmp    edi,0xffffff85
  44295a:	add    ch,BYTE PTR [edi+edi*8+0x486cdf5e]
  442961:	add    BYTE PTR [eax],al
  442963:	and    esi,0xffffff83
  442966:	(bad)  
  442967:	inc    DWORD PTR [ebx-0x7d39eb]
  44296d:	push   esp
  44296e:	addr16 sub ch,dh
  442971:	add    DWORD PTR [eax],0xffffffff
  442974:	stc    
  442975:	add    DWORD PTR [eax],0x0
  442978:	call   DWORD PTR [ecx]
  44297a:	mov    ds:0xd78a00c1,al
  44297f:	mov    dl,al
  442981:	int3   
  442982:	inc    DWORD PTR [ebx+0x83ccbb]
  442988:	call   FWORD PTR [edx-0x4c]
  44298b:	cdq    
  44298c:	add    BYTE PTR [esi+0x28],bh
  44298f:	mov    ebp,0xffff42
  442994:	leave  
  442995:	inc    DWORD PTR [eax]
  442997:	dec    esp
  442999:	and    eax,0x6e83babf
  44299e:	jnp    0x4429fe
  4429a0:	jmp    0x68102a28
  4429a5:	inc    DWORD PTR [eax]
  4429a7:	inc    DWORD PTR [ebx-0x7ca1c036]
  4429ad:	mov    bl,0x54
  4429af:	sbb    al,BYTE PTR [edi-0x67ff007d]
  4429b5:	cmp    edi,0xffffffff
  4429b8:	call   DWORD PTR ds:0xcaff67c2
  4429be:	mov    ch,0x28
  4429c0:	mov    ebp,0x99ff0000
  4429c5:	int3   
  4429c6:	add    ah,cl
  4429c8:	add    BYTE PTR [esp+ebx*8-0x71],al
  4429cc:	int3   
  4429cd:	scas   eax,DWORD PTR es:[edi]
  4429ce:	pop    eax
  4429cf:	call   0x102a6b
  4429d4:	add    al,0x83
  4429d6:	(bad)  
  4429d7:	inc    DWORD PTR [eax]
  4429d9:	sahf   
  4429da:	xor    eax,0xc1378361
  4429df:	sub    esi,eax
  4429e1:	add    bh,bh
  4429e3:	and    DWORD PTR [edi+0x0],0x0
  4429e7:	(bad)  
  4429e8:	inc    DWORD PTR [edi+ecx*4]
  4429eb:	mov    dh,0xff
  4429ed:	fcom   DWORD PTR [esi+edi*4-0x25]
  4429f1:	(bad)  
  4429f2:	(bad)  
  4429f3:	call   DWORD PTR [edi+0x0]
  4429f6:	inc    DWORD PTR [eax]
  4429f8:	add    BYTE PTR ds:0xaffff406,ah
  4429fe:	mov    edx,0xffff747e
  442a03:	add    BYTE PTR [edx+0x0],dh
  442a06:	add    ah,cl
  442a08:	push   DWORD PTR [ebx+0x68]
  442a0b:	xor    bh,bh
  442a0d:	fiadd  WORD PTR [ecx]
  442a0f:	xor    ah,0x89
  442a12:	mov    edi,edi
  442a14:	ds (bad) 
  442a16:	inc    DWORD PTR [eax]
  442a18:	jmp    FWORD PTR [esi-0x52]
  442a1b:	int    0xff
  442a1d:	loope  0x442a21
  442a1f:	sbb    eax,DWORD PTR [ebp-0x39003301]
  442a25:	add    BYTE PTR [ebx-0x6a56ff01],al
  442a2b:	pop    eax
  442a2c:	or     esi,0x5a
  442a2f:	mov    esp,0xff00001d
  442a34:	out    dx,eax
  442a35:	add    BYTE PTR [eax],al
  442a37:	add    BYTE PTR [ecx-0xe9f4e],cl
  442a3d:	call   0xff83:0xff7c7ebc
  442a44:	mov    cl,0xff
  442a46:	cmp    edi,0x0
  442a49:	aad    0x2d
  442a4b:	(bad)  
  442a4d:	sbb    esi,ebp
  442a4f:	xchg   esp,eax
  442a50:	or     DWORD PTR [eax],eax
  442a52:	inc    DWORD PTR [eax]
  442a54:	(bad)  
  442a56:	(bad)  
  442a57:	inc    DWORD PTR [eax]
  442a59:	retf   
  442a5a:	ficom  DWORD PTR [edx-0x7d]
  442a5d:	lods   eax,DWORD PTR ds:[esi]
  442a5e:	mov    ebp,0xffff36e0
  442a63:	add    BYTE PTR [edi-0x77],al
  442a66:	add    bh,bh
  442a68:	add    BYTE PTR [ebx],bh
  442a6a:	xchg   ebx,eax
  442a6b:	mov    edi,edi
  442a6d:	sbb    eax,0xffbe6dd4
  442a72:	int3   
  442a73:	inc    edi
  442a75:	dec    esp
  442a77:	add    bh,bh
  442a79:	loop   0x442a13
  442a7b:	dec    WORD PTR ds:0xffdcb184
  442a82:	add    DWORD PTR [ebx-0x7c7c1a],0xffffffff
  442a89:	test   DWORD PTR [ecx+0x23],ecx
  442a8c:	push   DWORD PTR [ecx-0x1d]
  442a8f:	aas    
  442a90:	push   ds
  442a91:	inc    DWORD PTR [ebx+0xcca8ff]
  442a97:	add    BYTE PTR [eax],al
  442a99:	lea    esp,[ebx-0x1e]
  442a9c:	add    BYTE PTR [eax+0x51],dl
  442a9f:	pop    ecx
  442aa0:	sub    DWORD PTR [eax],eax
  442aa2:	dec    esp
  442aa4:	(bad)  
  442aa5:	(bad)  
  442aa6:	(bad)  
  442aa7:	(bad)  
  442aa8:	inc    ecx
  442aaa:	push   ebx
  442aab:	cmc    
  442aac:	int3   
  442aad:	enter  0xc692,0x27
  442ab1:	cmp    edi,0xffffffcc
  442ab4:	jns    0x442ab5
  442ab6:	add    DWORD PTR [eax],0xffffffff
  442ab9:	cs cmp al,0x53
  442abc:	add    BYTE PTR [eax-0x9dbc1d],ah
  442ac2:	inc    DWORD PTR [eax]
  442ac4:	js     0x442ac5
  442ac6:	(bad)  
  442ac7:	inc    DWORD PTR [eax]
  442ac9:	dec    ebp
  442aca:	cld    
  442acb:	ret    
  442acc:	add    BYTE PTR [edx+0xb],cl
  442acf:	gs das 
  442ad1:	add    BYTE PTR [eax],al
  442ad3:	call   DWORD PTR [edi+0xff8900]
  442ad9:	mov    cl,0xa2
  442adb:	int    0x0
  442add:	ds popf 
  442adf:	dec    ecx
  442ae0:	add    bh,bh
  442ae2:	add    bh,bh
  442ae4:	and    al,BYTE PTR [eax]
  442ae6:	int3   
  442ae7:	(bad)  
  442ae8:	jmp    DWORD PTR [ecx]
  442aea:	pop    esi
  442aeb:	mov    esi,0xed4ec3ff
  442af0:	mov    cl,0xff
  442af2:	add    ah,cl
  442af4:	adc    eax,0xffff00ff
  442af9:	sub    eax,0xcf00874e
  442afe:	mov    WORD PTR [edi+0x2a],fs
  442b01:	add    BYTE PTR [eax],al
  442b03:	sbb    DWORD PTR [ebx+eax*4+0x7100ffff],0xffffffd4
  442b0b:	(bad)  
  442b0d:	push   ss
  442b0e:	jno    0x442af6
  442b10:	inc    eax
  442b11:	cmp    edi,0xffffffff
  442b14:	addr16 (bad) 
  442b16:	inc    DWORD PTR [eax]
  442b18:	cmp    DWORD PTR [eax],0xffffffc8
  442b1b:	xor    bh,bh
  442b1d:	mov    bh,0x3a
  442b1f:	add    BYTE PTR [edx+0x0],dl
  442b22:	(bad)  
  442b23:	call   DWORD PTR [eax]
  442b25:	inc    DWORD PTR [ebx+0x49cd8389]
  442b2b:	mov    ecx,0x97b717ff
  442b30:	jecxz  0x442b31
  442b32:	add    BYTE PTR [eax],al
  442b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442b35:	add    BYTE PTR [ecx-0x3a3b0001],cl
  442b3b:	call   0x48:0xc24ede89
  442b42:	(bad)  
  442b43:	(bad)  
  442b44:	mov    edi,0xffffcc00
  442b49:	sub    eax,0xc80014c2
  442b4e:	mov    eax,0xd81b
  442b53:	jmp    DWORD PTR [ebp-0xffff01]
  442b59:	jo     0x442b26
  442b5b:	repnz add BYTE PTR [eax+0x69],ch
  442b5f:	or     BYTE PTR [ebx+eax*4],dl
  442b62:	int3   
  442b63:	(bad)  
  442b64:	mov    ecx,0x8300ff
  442b69:	(bad)  
  442b6a:	ss cmp edi,0xffffffc4
  442b6e:	jae    0x442b48
  442b70:	sahf   
  442b71:	add    DWORD PTR [eax],0x0
  442b74:	pop    edi
  442b75:	int3   
  442b76:	inc    DWORD PTR [eax]
  442b78:	int3   
  442b79:	cmp    DWORD PTR [ebp-0x6d1133d7],ebx
  442b7f:	xchg   ecx,eax
  442b80:	and    edi,edi
  442b82:	add    DWORD PTR [eax],0x8
  442b85:	mov    edi,edi
  442b87:	inc    DWORD PTR [ebx-0x7667c172]
  442b8d:	je     0x442b58
  442b8f:	cmc    
  442b90:	mov    eax,DWORD PTR [eax]
  442b92:	inc    DWORD PTR [eax]
  442b94:	sbb    eax,0xffffffff
  442b99:	(bad)
  442b9c:	sbb    ecx,0x7b
  442b9f:	jmp    0x442b96
  442ba1:	int3   
  442ba2:	add    DWORD PTR [eax],0xffffffed
  442ba5:	(bad)  
  442ba6:	inc    DWORD PTR [eax]
  442ba8:	(bad)  
  442ba9:	mov    eax,0x9fff45ce
  442bae:	repz (bad) 
  442bb0:	mov    dl,0x0
  442bb2:	add    ah,cl
  442bb4:	xor    cl,BYTE PTR [ecx-0x29000001]
  442bba:	inc    edx
  442bbb:	bound  ecx,QWORD PTR [ecx+0x515eeef5]
  442bc1:	dec    DWORD PTR [ecx-0x765c01]
  442bc7:	add    bh,bh
  442bc9:	pop    edi
  442bca:	jne    0x442b6a
  442bcc:	add    BYTE PTR [edi],bl
  442bce:	jecxz  0x442bab
  442bd0:	icebp  
  442bd1:	add    BYTE PTR [eax],al
  442bd3:	add    BYTE PTR [eax+eax*1-0x18330100],bl
  442bda:	dec    ebp
  442bdb:	int    0x83
  442bdd:	sub    DWORD PTR [esi+0x0],ebx
  442be0:	stos   DWORD PTR es:[edi],eax
  442be1:	inc    DWORD PTR [ebx+0x33ff]
  442be7:	inc    DWORD PTR [ebx+0x87481f]
  442bed:	xchg   BYTE PTR ds:0xff0071d0,ah
  442bf3:	add    BYTE PTR [eax+eax*1],al
  442bf6:	inc    DWORD PTR [eax]
  442bf8:	push   DWORD PTR [ecx]
  442bfa:	jne    0x442bd2
  442bfc:	cmp    DWORD PTR [edi+edi*2],0x79
  442c00:	sub    al,0xcc
  442c02:	(bad)  
  442c03:	(bad)  
  442c04:	(bad)  
  442c06:	add    bh,bh
  442c08:	add    bh,al
  442c0a:	mov    BYTE PTR [ebp+0x250f7ff],cl
  442c10:	(bad)  
  442c11:	inc    DWORD PTR [ebx-0x76005034]
  442c17:	add    DWORD PTR [ebx-0xab6537],0xfffffff3
  442c1e:	sar    BYTE PTR [edi+0xccccd0],1
  442c24:	nop
  442c25:	dec    esp
  442c27:	int3   
  442c28:	add    bh,al
  442c2a:	ror    DWORD PTR [edi+0x0],1
  442c2d:	xchg   edx,eax
  442c2e:	adc    al,0xe8
  442c30:	fdiv   st(7),st
  442c32:	add    bh,bh
  442c34:	(bad)  
  442c35:	inc    DWORD PTR [eax]
  442c37:	add    ah,cl
  442c39:	fild   QWORD PTR [esi+0x7c1c83e8]
  442c3f:	inc    ebx
  442c40:	push   ecx
  442c41:	add    BYTE PTR [ecx-0x337c5834],cl
  442c47:	add    bh,bh
  442c49:	repz jne 0x442c7c
  442c4c:	add    BYTE PTR [ebp+0x34acdf],dh
  442c52:	add    BYTE PTR [ebx+0x898325],al
  442c58:	int3   
  442c59:	and    bh,BYTE PTR [esi+0x6c]
  442c5c:	call   DWORD PTR [esi+0x3eb577]
  442c62:	add    BYTE PTR [eax],al
  442c64:	jbe    0x442c66
  442c66:	inc    DWORD PTR [ebx+0xcc9700]
  442c6c:	push   DWORD PTR [ebx+ebx*4-0x767cfa97]
  442c73:	add    BYTE PTR [edi+0xff00ff],bh
  442c79:	ret    0xb756
  442c7c:	(bad)  
  442c7d:	fadd   QWORD PTR [esi]
  442c7f:	xchg   esp,eax
  442c80:	int3   
  442c81:	cmp    edi,0x0
  442c84:	jns    0x442c85
  442c86:	add    bh,bh
  442c88:	call   FWORD PTR [edi-0x5f33ffba]
  442c8e:	push   edx
  442c8f:	pop    ecx
  442c90:	retf   0xff00
  442c93:	add    BYTE PTR [edi-0x34],bl
  442c96:	add    BYTE PTR [eax],al
  442c98:	call   DWORD PTR [esi-0x35ffd30d]
  442c9e:	ret    0x6625
  442ca1:	add    ah,cl
  442ca3:	int3   
  442ca4:	test   eax,0x83ccff00
  442ca9:	pop    ecx
  442caa:	inc    ebp
  442cab:	cld    
  442cac:	int3   
  442cad:	fcomp  QWORD PTR [ebx]
  442caf:	(bad)  
  442cb0:	sti    
  442cb1:	add    bh,bh
  442cb3:	add    BYTE PTR [eax],bh
  442cb5:	add    BYTE PTR [ecx+0xdb200ff],cl
  442cbb:	adc    bh,bh
  442cbd:	mov    ecx,0x4ff1c8
  442cc2:	inc    DWORD PTR [eax]
  442cc4:	mov    ah,0xff
  442cc6:	(bad)  
  442cc7:	inc    DWORD PTR [eax]
  442cc9:	pop    esp
  442cca:	sbb    al,0x21
  442ccc:	push   ebx
  442cce:	sub    BYTE PTR [ecx+edx*2-0x477c0100],ch
  442cd5:	cmp    edi,0xffffffff
  442cd8:	add    BYTE PTR [ecx+0x7bffa015],ah
  442cde:	mov    edi,0x8900775f
  442ce3:	call   esp
  442ce5:	(bad)  
  442ce6:	dec    DWORD PTR [ecx-0x263f1901]
  442cec:	adc    DWORD PTR [ebp+edi*2-0xf771],0xffffff83
  442cf4:	ss cmp edi,0xffffffff
  442cf8:	int3   
  442cf9:	pop    eax
  442cfa:	xor    ecx,0xffffffff
  442cfd:	dec    eax
  442cfe:	inc    eax
  442cff:	xor    bh,BYTE PTR [ebp-0x7d]
  442d02:	inc    DWORD PTR [eax]
  442d04:	xlat   BYTE PTR ds:[ebx]
  442d05:	inc    DWORD PTR [eax]
  442d07:	int3   
  442d08:	add    BYTE PTR [edx-0x2f],al
  442d0b:	mov    edi,edi
  442d0d:	stc    
  442d0e:	jo     0x442d7c
  442d10:	pop    esp
  442d11:	inc    DWORD PTR [eax]
  442d13:	add    BYTE PTR ds:0xffffff00,bh
  442d19:	pop    ds
  442d1a:	inc    edi
  442d1b:	mov    ch,0xff
  442d1d:	daa    
  442d1e:	int    0x69
  442d20:	dec    ebx
  442d21:	mov    edi,edi
  442d23:	sub    edi,0x0
  442d26:	(bad)  
  442d27:	dec    DWORD PTR [ecx-0xf441a6]
  442d2d:	mov    bh,0x17
  442d2f:	pop    es
  442d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442d31:	(bad)  
  442d32:	inc    DWORD PTR [ebx-0x76009f]
  442d38:	inc    ecx
  442d3a:	mov    DWORD PTR [edx-0xa111601],ebp
  442d40:	aas    
  442d41:	(bad)  
  442d42:	dec    esp
  442d44:	test   DWORD PTR [ebx+0x4b0000ff],eax
  442d4a:	ds mov bh,bh
  442d4d:	ret    0x8e50
  442d50:	mov    edi,0x49000000
  442d55:	(bad)  
  442d56:	(bad)  
  442d57:	(bad)  
  442d58:	call   FWORD PTR ds:0x28830d38
  442d5e:	jg     0x442dd1
  442d60:	xchg   ebp,eax
  442d61:	add    DWORD PTR [eax],0x0
  442d64:	lea    eax,[ebx-0x2e000001]
  442d6a:	inc    ebp
  442d6b:	nop
  442d6c:	add    cl,cl
  442d6e:	test   bh,dl
  442d70:	aas    
  442d71:	cmp    edi,0xffffffff
  442d74:	arpl   di,di
  442d76:	int3   
  442d77:	inc    DWORD PTR [eax]
  442d79:	shl    DWORD PTR [ebp+0x3f],0xff
  442d7d:	sub    DWORD PTR [eax+0x43],esi
  442d80:	mov    edx,0x7bff8900
  442d85:	add    BYTE PTR [eax],al
  442d87:	inc    DWORD PTR [ebx+0xe89e9c]
  442d8d:	(bad)  
  442d8f:	fidivr DWORD PTR [esi+0x1c83cc00]
  442d95:	mov    DWORD PTR [eax],eax
  442d97:	or     esp,0xffffffbf
  442d9a:	retf   
  442d9b:	add    BYTE PTR ds:[eax-0x62],cl
  442d9f:	and    esi,eax
  442da1:	or     esp,0xffffffcc
  442da4:	arpl   sp,cx
  442da6:	cmp    edi,0xffffff83
  442da9:	xchg   ebx,eax
  442daa:	jno    0x442e23
  442dac:	jmp    DWORD PTR [ebx-0x7]
  442daf:	inc    edi
  442db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442db1:	add    bh,bh
  442db3:	add    BYTE PTR [ecx],dl
  442db5:	cmp    edi,0x0
  442db8:	int3   
  442db9:	mov    esi,0xc3ffa004
  442dbe:	sub    ch,BYTE PTR [esi-0x7c00ff1b]
  442dc4:	push   es
  442dc5:	inc    DWORD PTR [ebx-0x51cd0034]
  442dcb:	inc    ecx
  442dcc:	jmp    DWORD PTR [ebx+edx*8-0x5f]
  442dd0:	mov    edi,?
  442dd2:	(bad)  
  442dd3:	inc    DWORD PTR [ebx-0xff7c01]
  442dd9:	jne    0x442d84
  442ddb:	xchg   ebp,eax
  442ddc:	inc    DWORD PTR [ecx+edi*4-0x77]
  442de0:	jmp    0x442dae
  442de2:	dec    DWORD PTR [ecx-0x33000091]
  442de8:	call   DWORD PTR [edi+0x77]
  442deb:	pushf  
  442dec:	call   FWORD PTR [eax]
  442dee:	mov    esi,0xff00d72d
  442df3:	mov    DWORD PTR [ecx-0x7c7c0001],edx
  442df9:	push   edi
  442dfa:	rcr    DWORD PTR [edi+0x717727ff],0x40
  442e01:	int3   
  442e02:	mov    DWORD PTR [eax],eax
  442e04:	imul   edi,edi,0xffffff89
  442e07:	int3   
  442e08:	jmp    FWORD PTR [ecx+0x19ff3013]
  442e0e:	mov    edx,ds
  442e10:	pop    ebx
  442e11:	add    bh,bh
  442e13:	mov    DWORD PTR [eax-0x33330034],esp
  442e19:	fnsave [edx]
  442e1b:	enter  0xf683,0x29
  442e1f:	jmp    0xcc22:0xffff0039
  442e26:	dec    esp
  442e28:	dec    esi
  442e2a:	mov    edi,0xc33efff3
  442e2f:	push   edi
  442e30:	adc    eax,0x7ffcc83
  442e35:	add    ah,cl
  442e37:	inc    DWORD PTR [eax]
  442e39:	imul   edx,DWORD PTR [eax-0xb50ffa6],0xffffff82
  442e40:	jecxz  0x442e42
  442e42:	int3   
  442e43:	add    BYTE PTR [edx-0x7c7d00],ah
  442e49:	and    al,0x99
  442e4b:	clc    
  442e4c:	dec    DWORD PTR [edi]
  442e4e:	in     al,dx
  442e4f:	and    ecx,ebp
  442e51:	inc    DWORD PTR [eax]
  442e53:	dec    DWORD PTR [edi-0x34]
  442e56:	add    BYTE PTR [eax],al
  442e58:	call   FWORD PTR [eax+0x3400258d]
  442e5e:	js     0x442ede
  442e60:	add    al,0xff
  442e62:	inc    DWORD PTR [ebx-0x7c76ff8a]
  442e68:	dec    DWORD PTR [ecx-0x3]
  442e6b:	fld    QWORD PTR [eax]
  442e6d:	rcr    BYTE PTR ds:0xff006d28,cl
  442e73:	xor    eax,0xffffffff
  442e76:	(bad)  
  442e77:	inc    DWORD PTR [ebx+0x79d834]
  442e7d:	push   es
  442e7e:	mov    dh,0xd1
  442e80:	adc    al,0x0
  442e82:	mov    DWORD PTR [eax],eax
  442e84:	dec    ecx
  442e85:	add    BYTE PTR [ecx-0x4d3e7c7d],cl
  442e8b:	or     edi,edi
  442e8d:	shl    BYTE PTR [edx+0x7f],0x6c
  442e91:	mov    DWORD PTR [eax],eax
  442e93:	int3   
  442e94:	imul   eax,DWORD PTR [eax],0x9dff89ff
  442e9a:	mov    ecx,0x8242ffbc
  442e9f:	and    BYTE PTR [esi-0x1],cl
  442ea2:	int3   
  442ea3:	add    BYTE PTR [edi+edi*8-0x4d7cff7d],al
  442eaa:	lahf   
  442eab:	loop   0x442eac
  442ead:	sub    dl,BYTE PTR [eax-0x11]
  442eb0:	mov    DWORD PTR [eax],0xff72ccff
  442eb6:	(bad)  
  442eb7:	(bad)  
  442eb8:	push   DWORD PTR [ebp+0x5f]
  442ebb:	jnp    0x442ebc
  442ebd:	mov    cl,0x4a
  442ebf:	data16 jge 0x442ec1
  442ec2:	inc    DWORD PTR [eax]
  442ec4:	and    eax,0x83ffff
  442ec9:	or     edx,DWORD PTR [edx+eiz*1-0x77]
  442ecd:	inc    esp
  442ece:	bnd cs ret 0x8989
  442ed3:	(bad)  
  442ed4:	call   0xcc44fad9
  442ed9:	rcl    esp,0x9
  442edc:	add    BYTE PTR [edi+eiz*2-0xffcc31],cl
  442ee3:	xor    edx,0xffffffff
  442ee6:	(bad)  
  442ee7:	(bad)  
  442ee8:	inc    DWORD PTR [ecx+0x2f]
  442eeb:	test   edi,edi
  442eed:	cmp    al,0x57
  442eef:	sbb    eax,0xffff83b9
  442ef4:	or     eax,DWORD PTR [ebx+0x51000000]
  442efa:	mov    cl,0x87
  442efc:	add    ecx,0x27
  442eff:	dec    edi
  442f00:	scas   eax,DWORD PTR es:[edi]
  442f01:	(bad)  
  442f02:	inc    DWORD PTR [eax]
  442f04:	mov    cl,0xff
  442f06:	add    bh,bh
  442f08:	add    BYTE PTR [ebp+0x16893b2f],dl
  442f0e:	in     al,dx
  442f0f:	jns    0x442efd
  442f11:	add    DWORD PTR [eax],0x0
  442f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442f15:	mov    DWORD PTR [eax],eax
  442f17:	inc    DWORD PTR [ebx-0xdc7b08]
  442f1d:	sahf   
  442f1e:	cdq    
  442f1f:	jecxz  0x442ece
  442f21:	inc    DWORD PTR [eax]
  442f23:	push   DWORD PTR [eax-0x76ffff01]
  442f29:	pop    eax
  442f2b:	fs mov ecx,esp
  442f2e:	call   0x4342d8
  442f33:	int3   
  442f34:	inc    ecx
  442f35:	inc    DWORD PTR [ebx+0x7fa2ff89]
  442f3b:	test   DWORD PTR [ecx+0x26be7fce],ecx
  442f41:	int3   
  442f42:	add    bh,bh
  442f44:	fadd   DWORD PTR [ebx-0x1fffff01]
  442f4a:	and    BYTE PTR [edi],ah
  442f4c:	dec    DWORD PTR [ebp-0x7a]
  442f4f:	jp     0x442fcd
  442f51:	cmp    edi,0x0
  442f54:	jno    0x442f56
  442f56:	add    BYTE PTR [ecx-0x5231bc01],cl
  442f5c:	mov    DWORD PTR [eax],ebx
  442f5e:	jb     0x442f10
  442f60:	mov    bl,0x89
  442f62:	add    BYTE PTR [eax],al
  442f64:	(bad)  
  442f65:	dec    DWORD PTR [ecx-0x589dff01]
  442f6b:	loopne 0x442f39
  442f6d:	in     eax,0xf9
  442f6f:	daa    
  442f70:	lahf   
  442f71:	inc    DWORD PTR [eax]
  442f73:	add    BYTE PTR [eax-0x1],bl
  442f76:	(bad)  
  442f77:	dec    DWORD PTR [ecx-0x5bd97b]
  442f7d:	stc    
  442f7e:	outs   dx,BYTE PTR ds:[esi]
  442f7f:	xor    al,0x28
  442f81:	inc    DWORD PTR [ebx-0x332c01]
  442f87:	add    bh,bh
  442f89:	retf   0x34bd
  442f8c:	(bad)  
  442f8d:	mov    eax,0xff579e08
  442f92:	(bad)  
  442f93:	dec    DWORD PTR ds:0xcc8383ff
  442f99:	mov    ds:0x2400d2b7,al
  442f9e:	xor    DWORD PTR [edi-0x28],0xf083ffff
  442fa5:	inc    DWORD PTR [eax]
  442fa7:	int3   
  442fa8:	jmp    FWORD PTR [edx*8-0x14120011]
  442faf:	xor    DWORD PTR [ebp+0x0],ebp
  442fb2:	dec    DWORD PTR [ecx+0xffffc1]
  442fb8:	int3   
  442fb9:	aas    
  442fba:	pop    ebx
  442fbb:	cld    
  442fbc:	sub    DWORD PTR [ecx+eiz*8+0x89f902],0xffffffff
  442fc4:	sub    BYTE PTR [eax],al
  442fc6:	(bad)  
  442fc7:	(bad)  
  442fc8:	call   DWORD PTR [ebp+ecx*8-0x2e90008d]
  442fcf:	or     dl,bl
  442fd1:	dec    DWORD PTR [ecx-0x7c004f7d]
  442fd7:	inc    DWORD PTR [ebx-0x45aa3]
  442fdd:	adc    eax,0xcc30bbce
  442fe2:	add    BYTE PTR [ebx+0xf6],al
  442fe8:	add    DWORD PTR [esi+ebp*1-0x6a3e003b],0xffffffe2
  442ff0:	sub    bh,bh
  442ff2:	mov    DWORD PTR [ebx-0x7ca3],eax
  442ff8:	push   DWORD PTR [eax-0xe00071e]
  442ffe:	pop    esi
  442fff:	bound  eax,QWORD PTR [ecx]
  443001:	inc    DWORD PTR [ebx+0x83a283]
  443007:	inc    DWORD PTR [ebx+0xbd2951]
  44300d:	call   0xffff:0xe5f489
  443014:	out    0x0,al
  443016:	mov    DWORD PTR [eax],eax
  443018:	add    BYTE PTR [edi],ah
  44301a:	std    
  44301b:	or     bh,bh
  44301d:	and    eax,edi
  44301f:	inc    ebx
  443020:	gs mov edi,edi
  443023:	inc    eax
  443025:	(bad)  
  443026:	inc    DWORD PTR [eax]
  443028:	push   DWORD PTR [esi]
  44302a:	mov    ah,0xe6
  44302c:	jmp    DWORD PTR [eax]
  44302e:	push   esi
  44302f:	mov    ecx,0xff00ffba
  443034:	jns    0x443035
  443036:	add    bh,bh
  443038:	mov    DWORD PTR [ebx+edi*1+0x54],ecx
  44303c:	dec    DWORD PTR [ebx+0x0]
  44303f:	mov    gs,WORD PTR [esi]
  443041:	(bad)  
  443042:	(bad)  
  443043:	(bad)  
  443044:	mov    eax,0xff8389
  443049:	ins    DWORD PTR es:[edi],dx
  44304a:	(bad)  
  44304b:	mov    DWORD PTR gs:[edi-0x1c],edx
  44304f:	jnp    0x44307f
  443051:	(bad)  
  443052:	dec    DWORD PTR [ecx-0xff31]
  443058:	jmp    DWORD PTR [edi+0x50ff2c79]
  44305e:	fwait
  44305f:	ret    
  443060:	aam    0xff
  443062:	int3   
  443063:	add    BYTE PTR [edx],ch
  443065:	add    DWORD PTR [eax],0xffffffff
  443068:	adc    DWORD PTR [eax+0x12ffe7cd],0x22
  44306f:	xchg   esp,eax
  443070:	inc    edi
  443071:	inc    DWORD PTR [eax]
  443073:	(bad)  
  443074:	call   0xffc83078
  443079:	popa   
  44307a:	loop   0x44304a
  44307c:	cmp    DWORD PTR [edx-0x5d],0xffffffdd
  443080:	(bad)  
  443081:	inc    DWORD PTR [eax]
  443083:	sbb    DWORD PTR [eax+eax*1+0x51838300],0x12
  44308b:	sbb    DWORD PTR [ecx-0x5d2a2ad8],ecx
  443091:	mov    edi,edi
  443093:	int3   
  443094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443095:	add    bh,bh
  443097:	inc    DWORD PTR [eax]
  443099:	test   dh,ch
  44309b:	mov    bl,0xff
  44309d:	adc    al,0x1d
  44309f:	in     al,0xc1
  4430a1:	inc    DWORD PTR [ebx-0x7c7c167d]
  4430a7:	add    bh,bh
  4430a9:	in     eax,dx
  4430aa:	cs push 0xfe5b2800
  4430b0:	or     eax,0xb80000ff
  4430b5:	inc    DWORD PTR [ebx-0x60247c01]
  4430bb:	ret    
  4430bc:	call   DWORD PTR [edi+ebp*2-0x7c7c27ee]
  4430c3:	add    bh,ch
  4430c5:	dec    esp
  4430c7:	add    bh,bh
  4430c9:	push   edx
  4430ca:	js     0x4430c8
  4430cc:	dec    DWORD PTR [edx-0x7608db11]
  4430d2:	inc    DWORD PTR [ebx+0xffff8e]
  4430d8:	mov    DWORD PTR [ecx+0x31],eax
  4430db:	mov    esp,ecx
  4430dd:	repnz nop
  4430df:	and    BYTE PTR [esi-0x1],dh
  4430e2:	cmp    edi,0xffffffa3
  4430e5:	(bad)  
  4430e6:	inc    DWORD PTR [ebx-0x71129301]
  4430ec:	jmp    esp
  4430ee:	fcomi  st,st(6)
  4430f0:	jo     0x4430f2
  4430f2:	(bad)  
  4430f3:	push   DWORD PTR [ebx-0x1]
  4430f6:	add    bh,bh
  4430f8:	add    BYTE PTR [edi+edi*8+0x111fff62],ch
  4430ff:	pop    edi
  443100:	outs   dx,DWORD PTR ds:[esi]
  443101:	(bad)  
  443102:	(bad)  
  443103:	call   DWORD PTR [eax]
  443105:	or     DWORD PTR [ecx-0x54a7c01],0x42
  44310c:	mov    eax,esi
  44310e:	sti    
  44310f:	sbb    bl,BYTE PTR [esi-0x387c0001]
  443115:	cmp    edi,0x0
  443118:	int3   
  443119:	jb     0x4430d6
  44311b:	rol    DWORD PTR [ebx+0x47d9df2c],1
  443121:	add    ah,cl
  443123:	sbb    DWORD PTR [ebx-0xff7c7d],0x1f
  44312a:	xchg   DWORD PTR [esi+0x3576e8ff],esi
  443130:	dec    edi
  443131:	add    BYTE PTR [eax],al
  443133:	and    DWORD PTR [ebx-0x1],0xffffff83
  443137:	(bad)  
  443138:	(bad)  
  443139:	out    dx,eax
  44313a:	fsub   DWORD PTR [eax]
  44313c:	(bad)  
  44313d:	in     al,dx
  44313e:	sub    DWORD PTR [edi],esi
  443140:	inc    ecx
  443141:	add    bh,bh
  443143:	(bad)  
  443144:	ds (bad) 
  443146:	inc    DWORD PTR [eax]
  443148:	adc    DWORD PTR [ebx+0x5c],0x59
  44314c:	add    BYTE PTR [edi-0x7c7cb439],ah
  443152:	int3   
  443153:	add    BYTE PTR [ebp-0x1],cl
  443156:	add    DWORD PTR [ebx-0x1bc0e100],0xffffff83
  44315d:	loopne 0x44311d
  44315f:	mov    bh,0x19
  443161:	(bad)  
  443162:	(bad)  
  443163:	(bad)  
  443164:	mov    ecx,0xff0083ff
  443169:	test   DWORD PTR [eax+0x4a7a00fa],edx
  44316f:	out    0x67,al
  443171:	(bad)  
  443172:	(bad)  
  443173:	jmp    FWORD PTR [eax]
  443175:	int3   
  443176:	(bad)  
  443177:	(bad)  
  443178:	(bad)  
  443179:	(bad)  [ebx+esi*4-0x4c0e0e01]
  443180:	cmp    al,0xff
  443182:	int3   
  443183:	inc    DWORD PTR [edx+0x0]
  443186:	(bad)  
  443187:	inc    DWORD PTR [eax]
  443189:	add    cl,BYTE PTR [ebp-0x2d]
  44318c:	call   eax
  44318e:	lods   al,BYTE PTR ds:[esi]
  44318f:	push   ecx
  443190:	adc    al,0x83
  443192:	add    BYTE PTR [eax],al
  443194:	mov    bh,0xff
  443196:	(bad)  
  443197:	(bad)  
  443198:	jmp    DWORD PTR [ebx-0x3b]
  44319b:	sbb    edi,edi
  44319d:	inc    ecx
  44319e:	sti    
  44319f:	mov    ds:0xff8948,eax
  4431a4:	out    dx,al
  4431a5:	add    BYTE PTR [eax],al
  4431a7:	int3   
  4431a8:	add    ah,al
  4431aa:	(bad)  
  4431ab:	jg     0x4431ac
  4431ad:	inc    ebp
  4431ae:	push   0x8300f8ad
  4431b3:	dec    DWORD PTR [ebx+eax*4+0x620083ff]
  4431ba:	push   ss
  4431bb:	sub    al,0xff
  4431bd:	dec    eax
  4431be:	inc    ebx
  4431bf:	pop    edi
  4431c0:	retf   0x89
  4431c3:	dec    DWORD PTR [eax+eax*1]
  4431c6:	cmp    edi,0xffffff83
  4431c9:	mov    WORD PTR [edi],?
  4431cb:	mov    ebp,0xe006a0ff
  4431d0:	or     BYTE PTR [eax],al
  4431d2:	add    BYTE PTR [eax],al
  4431d4:	dec    edx
  4431d5:	add    bh,bh
  4431d7:	mov    edi,edi
  4431d9:	or     BYTE PTR [edx-0x396f7cb6],ah
  4431df:	adc    al,0x14
  4431e1:	inc    DWORD PTR [eax]
  4431e3:	jmp    FWORD PTR [ecx]
  4431e5:	or     esp,0xffffffff
  4431e8:	add    BYTE PTR [edx],cl
  4431ea:	sub    BYTE PTR [esp+ecx*8-0x37],0x73
  4431ef:	fnsave [ecx+0x0]
  4431f2:	inc    DWORD PTR [ebx-0x33001f]
  4431f8:	or     DWORD PTR [edi-0x2f],0x34
  4431fc:	add    BYTE PTR [eax],cl
  4431fe:	(bad)  
  4431ff:	adc    dl,BYTE PTR [ebx-0x1]
  443202:	add    BYTE PTR [eax],al
  443204:	loop   0x443205
  443206:	int3   
  443207:	add    BYTE PTR [eax],al
  443209:	adc    BYTE PTR [eax],0x8f
  44320c:	add    DWORD PTR [eax+0x34],0x1b
  443210:	sub    edi,edi
  443212:	cmp    edi,0x8
  443215:	add    DWORD PTR [ebx-0x410e0077],0xffffff88
  44321c:	inc    DWORD PTR [edi-0x15]
  44321f:	lods   al,BYTE PTR ds:[esi]
  443220:	in     al,dx
  443221:	int3   
  443222:	add    BYTE PTR [ebx-0x7633f1],al
  443228:	mov    DWORD PTR ds:0xb900040d,esi
  44322e:	ret    
  44322f:	lea    esp,[esi+0x138383ff]
  443235:	mov    edi,edi
  443237:	(bad)  
  443238:	call   ecx
  44323a:	(bad)
  44323d:	ja     0x443272
  44323f:	jp     0x4432b0
  443241:	(bad)  
  443242:	inc    DWORD PTR [eax]
  443244:	retf   
  443245:	mov    DWORD PTR [eax],eax
  443247:	add    BYTE PTR [eax],al
  443249:	imul   edi,DWORD PTR [esi],0x9022ff05
  44324f:	push   edx
  443250:	mov    ds:0xc8ff83ff,al
  443255:	add    ah,cl
  443257:	dec    esp
  443259:	in     eax,dx
  44325a:	(bad)
  44325d:	sbb    al,0xb1
  44325f:	and    DWORD PTR [edi-0x1],ebx
  443262:	inc    DWORD PTR [eax]
  443264:	mov    edi,0xff00ff00
  443269:	sahf   
  44326a:	imul   edx,ebp,0x822034ff
  443270:	and    al,0xff
  443272:	add    BYTE PTR [ebx-0xffb5],al
  443278:	inc    DWORD PTR [esi-0x2d00c3db]
  44327e:	aam    0x27
  443280:	mov    ecx,0x59ffff00
  443285:	inc    DWORD PTR [eax]
  443287:	cmp    edi,0xffffff90
  44328a:	imul   esp,edi,0x32102089
  443290:	mov    cs,esp
  443292:	inc    DWORD PTR [eax]
  443294:	inc    ecx
  443295:	or     esp,0xffffffff
  443298:	(bad)  
  443299:	mov    ecx,0xadcc9cc5
  44329e:	cmp    BYTE PTR [ecx-0x763333aa],al
  4432a4:	xor    cl,ah
  4432a6:	(bad)  
  4432a7:	inc    DWORD PTR [eax]
  4432a9:	lds    esp,FWORD PTR cs:[ebp+0x0]
  4432ad:	push   ss
  4432ae:	(bad)  
  4432af:	jge    0x44332f
  4432b1:	(bad)  
  4432b2:	(bad)  
  4432b3:	jmp    FWORD PTR [ebp-0x7c010000]
  4432b9:	xor    al,0x4f
  4432bb:	sbb    esp,ecx
  4432bd:	xchg   BYTE PTR [ebx+0x6b],cl
  4432c0:	or     BYTE PTR [ebx-0x2f007d],al
  4432c6:	(bad)  
  4432c7:	inc    DWORD PTR [eax]
  4432c9:	jae    0x443317
  4432cb:	sahf   
  4432cc:	int3   
  4432cd:	cmp    DWORD PTR [eax-0x69],eax
  4432d0:	pop    eax
  4432d1:	(bad)  
  4432d2:	inc    DWORD PTR [ebx-0x7cffff83]
  4432d8:	add    bl,cl
  4432da:	add    edx,DWORD PTR [ebx-0x7d]
  4432dd:	adc    eax,0x9480e4
  4432e2:	add    BYTE PTR [ecx+0xcccca3],cl
  4432e8:	add    bh,bh
  4432ea:	push   eax
  4432eb:	out    0x0,al
  4432ed:	shl    BYTE PTR [esi+eiz*4-0x57],cl
  4432f1:	inc    DWORD PTR [eax]
  4432f3:	jmp    DWORD PTR [ebp-0x33010000]
  4432f9:	aad    0xd0
  4432fb:	mov    esp,0xe9c09000
  443300:	xor    DWORD PTR [ebx+0x6dcc00],eax
  443306:	add    DWORD PTR [ebx-0x6000077],0xffffffff
  44330d:	pop    ecx
  44330e:	and    esi,esi
  443310:	imul   ecx,esp,0xffffffff
  443313:	inc    DWORD PTR [eax-0x7c000034]
  443319:	pop    ds
  44331a:	je     0x443338
  44331c:	call   DWORD PTR [ebx+edi*8-0x26]
  443320:	inc    esp
  443321:	(bad)  
  443322:	inc    DWORD PTR [eax]
  443324:	stos   BYTE PTR es:[edi],al
  443325:	add    bh,bh
  443327:	add    DWORD PTR [eax],0xffffffcb
  44332a:	ja     0x4432ad
  44332c:	int3   
  44332d:	arpl   dx,sp
  44332f:	mov    al,0x64
  443331:	cmp    edi,0xffffffff
  443334:	lds    eax,FWORD PTR [eax]
  443336:	cmp    edi,0x0
  443339:	in     eax,dx
  44333a:	lods   eax,DWORD PTR ds:[esi]
  44333b:	cmp    bh,0x2b
  44333e:	shl    DWORD PTR [eax+0x28],cl
  443341:	inc    DWORD PTR [ebx-0x33005f01]
  443347:	add    bh,bh
  443349:	xchg   ebx,eax
  44334a:	int    0x33
  44334c:	(bad)  
  44334d:	cmp    bl,BYTE PTR [esi+0x833f39]
  443353:	jmp    DWORD PTR [esi]
  443355:	inc    DWORD PTR [eax]
  443357:	(bad)  
  443358:	jmp    DWORD PTR [eax]
  44335a:	popa   
  44335b:	ret    
  44335c:	and    DWORD PTR [ecx-0x3428bf],0x0
  443363:	int3   
  443364:	mov    bh,bh
  443366:	add    bh,bh
  443368:	sub    esi,0x73
  44336b:	outs   dx,DWORD PTR ds:[esi]
  44336c:	inc    DWORD PTR [edx]
  44336e:	stc    
  44336f:	and    ebp,DWORD PTR [ecx+0xcffff00]
  443375:	add    BYTE PTR [eax],al
  443377:	(bad)  
  443378:	call   DWORD PTR [ebp-0xc]
  44337b:	outs   dx,DWORD PTR ds:[esi]
  44337c:	inc    esi
  44337e:	sahf   
  44337f:	jne    0x443322
  443381:	cmp    BYTE PTR [eax+0x44],al
  443384:	add    BYTE PTR [ebx+0x447d20],ah
  44338a:	ret    
