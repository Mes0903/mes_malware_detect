
4b37b09ba70d87799c4776777b2a35c93f9ab48afd373394d9c582510ffaed2f.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	in     eax,0x91
  411002:	test   BYTE PTR [eax+ebp*2-0x80],al
  411006:	xchg   edx,eax
  411007:	cmp    DWORD PTR [edx],ebp
  411009:	mov    ah,0x7d
  41100b:	push   esi
  41100c:	test   DWORD PTR [ebp-0x17],esp
  41100f:	fidivr DWORD PTR [ebx-0x2b]
  411012:	(bad)  
  411013:	cmp    esp,DWORD PTR [ebx+0x18]
  411016:	out    0x2c,al
  411018:	out    dx,eax
  411019:	mov    dh,0x12
  41101b:	test   eax,0x7500b294
  411020:	(bad)  [edi]
  411022:	leave  
  411023:	dec    edx
  411024:	sahf   
  411025:	fistp  QWORD PTR ds:0x3fc46b5b
  41102b:	mov    cl,0x13
  41102d:	mov    edx,0x93130e1e
  411032:	test   al,0x71
  411034:	call   0x5922bcc9
  411039:	popa   
  41103a:	or     edx,DWORD PTR [edx-0x7ac31dad]
  411040:	dec    eax
  411041:	(bad)  
  411043:	mov    al,0x26
  411045:	test   eax,0xebc023fd
  41104a:	push   0xffffffe6
  41104c:	jno    0x41105e
  41104e:	cmp    al,0x60
  411050:	pop    ecx
  411051:	call   0xdb8128f6
  411056:	jle    0x410ff8
  411058:	mov    bh,0x6a
  41105a:	jg     0x411072
  41105c:	xchg   ebx,eax
  41105d:	push   ebx
  41105e:	jb     0x410ff0
  411060:	sub    ch,BYTE PTR [ecx]
  411062:	mov    dl,0x1c
  411064:	test   BYTE PTR [ecx],bh
  411066:	jmp    0x410ffa
  411068:	lahf   
  411069:	call   0xbd6:0x77c67bde
  411070:	mov    esp,DWORD PTR [esi]
  411072:	fsub   st(0),st
  411074:	jne    0x41107c
  411076:	iret   
  411077:	or     eax,0x46581b3f
  41107c:	jo     0x411041
  41107e:	push   0xffffffe6
  411080:	dec    edx
  411081:	or     ecx,0xa851613e
  411087:	pop    esi
  411088:	popa   
  411089:	ins    DWORD PTR es:[edi],dx
  41108a:	arpl   dx,cx
  41108c:	out    dx,al
  41108d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108e:	aam    0xd0
  411090:	out    0xa0,eax
  411092:	and    bh,al
  411094:	pop    es
  411095:	xor    BYTE PTR [ebx-0x15],0x36
  411099:	mov    ds:0x1bb32ba5,al
  41109e:	or     eax,0x8e800be3
  4110a3:	mov    ds:0xb4d72afd,al
  4110a8:	out    0x99,al
  4110aa:	push   esi
  4110ab:	mov    edx,0xe2c3b162
  4110b0:	inc    DWORD PTR [esi-0x4900a490]
  4110b6:	cmp    DWORD PTR [ecx+0x4fb23f20],esi
  4110bc:	jmp    0x411055
  4110be:	call   0x5877:0x4b00ced6
  4110c5:	push   0xffffff9c
  4110c7:	in     al,dx
  4110c8:	jmp    0xa240:0x10decc81
  4110cf:	and    ah,bl
  4110d1:	stos   DWORD PTR es:[edi],eax
  4110d2:	test   al,0x46
  4110d4:	das    
  4110d5:	xor    BYTE PTR [eax+edi*2],al
  4110d8:	mov    edx,0x155670d9
  4110dd:	mov    ch,BYTE PTR [ebx]
  4110df:	adc    al,0x48
  4110e1:	out    dx,eax
  4110e2:	jns    0x41108f
  4110e4:	out    dx,al
  4110e5:	xlat   BYTE PTR ds:[ebx]
  4110e6:	cmp    ah,dl
  4110e8:	fdiv   DWORD PTR [edx+0x35]
  4110eb:	or     dl,BYTE PTR [edx-0x116eb2d8]
  4110f1:	xor    BYTE PTR [esi],ah
  4110f3:	xadd   DWORD PTR [edx+0x2b461573],edx
  4110fa:	pop    esi
  4110fb:	sbb    ebp,DWORD PTR [ebx]
  4110fd:	cmc    
  4110fe:	dec    esi
  4110ff:	jecxz  0x41108e
  411101:	daa    
  411102:	ss imul ebx,ebx,0xffffffe4
  411106:	xor    ch,BYTE PTR [edi-0x86939ff]
  41110c:	mul    BYTE PTR [eax]
  41110e:	scas   eax,DWORD PTR es:[edi]
  41110f:	push   ebx
  411110:	fsubr  st(1),st
  411112:	or     edx,esp
  411114:	or     al,0xe2
  411116:	out    0x1d,al
  411118:	sub    al,0xb3
  41111a:	dec    edi
  41111b:	fisubr DWORD PTR [ebx+edx*1]
  41111e:	mov    ah,0x96
  411120:	adc    bh,dl
  411122:	add    BYTE PTR [ebp+0x17],ah
  411125:	out    dx,al
  411126:	jbe    0x41111c
  411128:	pop    esp
  411129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41112a:	or     eax,0xf10fe2d5
  41112f:	xchg   ebx,eax
  411130:	and    eax,0x93e9d672
  411135:	popf   
  411136:	mov    WORD PTR [ebx+0x2a601064],?
  41113c:	mov    ecx,0xf3efb4bc
  411141:	and    eax,0xdea83ebe
  411146:	lea    edi,[edx+esi*2+0x4ddb82a9]
  41114d:	(bad)  
  41114e:	dec    esp
  41114f:	or     DWORD PTR [eax],edx
  411151:	ja     0x41118e
  411153:	sub    ebp,DWORD PTR [ebx]
  411155:	shl    ecx,1
  411157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411158:	push   cs
  411159:	mov    eax,ds:0xa0b4b21f
  41115e:	dec    ecx
  41115f:	and    dh,0x5c
  411162:	pushf  
  411163:	xor    eax,0xdda5d9b0
  411168:	xor    eax,0x10b2fd8d
  41116d:	out    dx,eax
  41116e:	adc    edx,ebx
  411170:	mul    BYTE PTR [edi-0x64]
  411173:	sbb    cl,BYTE PTR [ecx-0x45]
  411176:	add    ebx,DWORD PTR [esi-0x71]
  411179:	mov    ecx,0x7f6d8246
  41117e:	lods   eax,DWORD PTR ds:[esi]
  41117f:	adc    ebp,DWORD PTR [ebx-0x63c80d22]
  411185:	add    bh,ah
  411187:	loop   0x411179
  411189:	bound  edi,QWORD PTR [edx-0x6a716b9a]
  41118f:	pop    edx
  411190:	nop
  411191:	adc    BYTE PTR [edi+eax*8],al
  411194:	neg    BYTE PTR [eax-0x25]
  411197:	mov    al,ds:0x6b569de0
  41119c:	push   es
  41119d:	push   ebx
  41119e:	loop   0x411214
  4111a0:	mov    edx,DWORD PTR [ecx-0x4f]
  4111a3:	pop    ss
  4111a4:	and    BYTE PTR [ebp-0x61],cl
  4111a7:	fcom   QWORD PTR [ebp+0x5359b174]
  4111ad:	ret    0xae01
  4111b0:	xlat   BYTE PTR ds:[ebx]
  4111b1:	adc    DWORD PTR [eax+edi*8-0x3622cb6c],esi
  4111b8:	mov    ch,0xe2
  4111ba:	pop    es
  4111bb:	jge    0x411143
  4111bd:	test   al,0x50
  4111bf:	pop    esi
  4111c0:	pushf  
  4111c1:	repz or DWORD PTR [eax+0x2a],ecx
  4111c5:	test   esi,0xcfc969b9
  4111cb:	sub    eax,0x1d631b63
  4111d0:	enter  0x66bd,0x89
  4111d4:	loop   0x411183
  4111d6:	xchg   esp,ebp
  4111d8:	jo     0x411244
  4111da:	jg     0x4111a0
  4111dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111dd:	or     DWORD PTR es:[edi+0x42],0xa00ca715
  4111e5:	pushf  
  4111e6:	sub    al,0x36
  4111e8:	mov    WORD PTR [edx+0x622d4fc7],es
  4111ee:	sub    eax,0xab434b7b
  4111f3:	in     al,0x4c
  4111f5:	cmc    
  4111f6:	fldcw  WORD PTR [esi-0x7a]
  4111f9:	ret    0x52fb
  4111fc:	popf   
  4111fd:	pop    ebx
  4111fe:	pop    ecx
  4111ff:	mov    al,ds:0xdfef700
  411204:	(bad)  
  411205:	xor    DWORD PTR [edi+0x43],ebp
  411208:	cmp    eax,0x481c8efe
  41120d:	xchg   esi,eax
  41120e:	scas   al,BYTE PTR es:[edi]
  41120f:	xchg   BYTE PTR fs:[ebp+0x5a],dl
  411213:	add    DWORD PTR [esi-0x42d6bd0f],esi
  411219:	in     eax,0x87
  41121b:	mov    esi,0xd18bee93
  411220:	dec    esi
  411221:	xchg   ebp,eax
  411222:	idiv   BYTE PTR [esi]
  411224:	jno    0x41126a
  411226:	cmp    cl,al
  411228:	push   cs
  411229:	lahf   
  41122a:	test   eax,0x9e8dc728
  41122f:	dec    ebp
  411230:	jg     0x41121f
  411232:	and    dh,BYTE PTR [ebx-0x2c]
  411235:	push   ss
  411236:	fcom   DWORD PTR [edi+0x53abd9c]
  41123c:	mov    fs,WORD PTR [ecx+ebp*8]
  41123f:	cmp    BYTE PTR [ecx],al
  411241:	out    dx,eax
  411242:	push   esp
  411243:	add    esi,ebp
  411245:	stc    
  411246:	enter  0x5958,0x3a
  41124a:	cmp    DWORD PTR [edx-0x73],ecx
  41124d:	jnp    0x411297
  41124f:	xchg   dx,ax
  411251:	gs scas al,BYTE PTR es:[edi]
  411253:	jns    0x41120f
  411255:	mov    ebp,0x2ca00932
  41125a:	sbb    edi,edi
  41125c:	icebp  
  41125d:	cmp    ebp,DWORD PTR [edi+0xa]
  411260:	retf   
  411261:	enter  0xaa27,0xb6
  411265:	mov    ?,WORD PTR [ebp-0x3287ead0]
  41126b:	sub    cl,bl
  41126d:	push   es
  41126e:	ret    
  41126f:	lds    ebx,FWORD PTR [eax+0x3511423b]
  411275:	loope  0x4112b0
  411277:	mov    ds:0x68f5cb4e,eax
  41127c:	and    al,0x5e
  41127e:	pushf  
  41127f:	mov    edi,0x98ac4d9b
  411284:	sub    al,0x85
  411286:	jecxz  0x411216
  411288:	cmc    
  411289:	mov    cs,WORD PTR [esi+0x710047b1]
  41128f:	(bad)  
  411292:	div    BYTE PTR [edi]
  411294:	rcl    BYTE PTR [edi+0x19],cl
  411297:	fild   QWORD PTR [ebx]
  411299:	ror    BYTE PTR [ecx+0x1e],cl
  41129c:	or     DWORD PTR [edi-0x4ebbae99],ecx
  4112a2:	xchg   DWORD PTR [edi+eiz*1-0x709dc539],eax
  4112a9:	jbe    0x4112e6
  4112ab:	js     0x4112a1
  4112ad:	jl     0x411274
  4112af:	sbb    ah,al
  4112b1:	(bad)  
  4112b2:	sti    
  4112b3:	loope  0x41124f
  4112b5:	enter  0xc6af,0xe
  4112b9:	sti    
  4112ba:	xchg   esp,eax
  4112bb:	dec    edx
  4112bc:	mov    eax,ds:0xae3ce42f
  4112c1:	pop    es
  4112c2:	jmp    0x3749573a
  4112c7:	fsub   st(4),st
  4112c9:	aas    
  4112ca:	ins    BYTE PTR es:[edi],dx
  4112cb:	shl    ebx,cl
  4112cd:	sbb    eax,0xb9fb1acb
  4112d2:	retf   
  4112d3:	(bad)  
  4112d4:	loope  0x411294
  4112d6:	ret    
  4112d7:	jl     0x41130f
  4112d9:	rcl    DWORD PTR [eax-0x4a00de69],cl
  4112df:	(bad)  
  4112e0:	push   ds
  4112e1:	adc    ebp,DWORD PTR ds:0x83e1ea89
  4112e7:	test   DWORD PTR [ecx+0x6b4f7958],ebp
  4112ed:	pop    esp
  4112ee:	sbb    esp,ecx
  4112f0:	pusha  
  4112f1:	push   ss
  4112f2:	repz cmp cl,al
  4112f5:	aam    0x6
  4112f7:	outs   dx,DWORD PTR ds:[esi]
  4112f8:	jecxz  0x411342
  4112fa:	loope  0x411315
  4112fc:	ja     0x411320
  4112fe:	sbb    al,0x8b
  411300:	pop    edx
  411301:	pop    esi
  411302:	mov    ecx,0xec96ca50
  411307:	outs   dx,DWORD PTR ds:[esi]
  411308:	test   DWORD PTR [ebx-0x77017a78],edi
  41130e:	mov    dh,BYTE PTR [esi]
  411310:	add    al,0x2a
  411312:	push   edx
  411313:	stc    
  411314:	pusha  
  411315:	repnz in al,dx
  411317:	ret    0xaab9
  41131a:	loop   0x411343
  41131c:	add    bh,BYTE PTR [ebp-0x58]
  41131f:	sti    
  411320:	pop    eax
  411321:	cmc    
  411322:	cwde   
  411323:	push   ecx
  411324:	dec    esi
  411325:	mov    dh,0xe7
  411327:	and    eax,ebp
  411329:	xchg   ecx,eax
  41132a:	jo     0x41133f
  41132c:	mov    WORD PTR [ebx+0x6a29ac02],fs
  411332:	dec    eax
  411333:	inc    esi
  411334:	push   ss
  411335:	dec    edi
  411336:	dec    BYTE PTR [ebx+0x3ad7b32f]
  41133c:	jb     0x4112d1
  41133e:	sub    BYTE PTR [esi+0x7d],0x8a
  411342:	inc    edx
  411343:	xor    ah,al
  411345:	mov    edx,0x8fb4ae36
  41134a:	dec    ebx
  41134b:	mov    esp,0x1b490b85
  411350:	in     al,0xf7
  411352:	or     dl,BYTE PTR [edx-0x54]
  411355:	inc    eax
  411356:	pop    es
  411357:	xor    eax,0xd333978e
  41135c:	add    DWORD PTR [ebp+0x39e66601],eax
  411362:	in     eax,0x22
  411364:	cdq    
  411365:	jno    0x411339
  411367:	push   cs
  411368:	fisttp DWORD PTR [edx+0x7f]
  41136b:	popf   
  41136c:	mov    ch,0x58
  41136e:	push   esp
  41136f:	test   eax,0xf7c9a519
  411374:	(bad)  
  411375:	xchg   edi,eax
  411376:	and    BYTE PTR [eax],0x77
  411379:	inc    esi
  41137a:	shl    BYTE PTR [ebx+eax*2-0x1e],cl
  41137e:	mov    ecx,DWORD PTR [edi+0x2f]
  411381:	(bad)  
  411382:	push   esi
  411383:	sbb    cl,ch
  411385:	jnp    0x411332
  411387:	(bad)
  41138a:	push   ebp
  41138b:	mov    dl,0xfb
  41138d:	adc    BYTE PTR [edi-0x3d],ch
  411390:	lods   al,BYTE PTR ds:[esi]
  411391:	push   ds
  411392:	mov    DWORD PTR [ebp-0x6cee13be],esp
  411398:	jns    0x411381
  41139a:	sub    esi,DWORD PTR [eax+0x5644a044]
  4113a0:	dec    esi
  4113a1:	stc    
  4113a2:	repz mov cl,0x5d
  4113a5:	int    0xfb
  4113a7:	frstor [ebx+0x4ec75b4e]
  4113ad:	jo     0x4113ca
  4113af:	cmp    ebp,DWORD PTR [esi-0x55]
  4113b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b3:	iret   
  4113b4:	or     eax,0x66135b6f
  4113b9:	ficomp WORD PTR [ebx]
  4113bb:	arpl   WORD PTR [eax-0x39],sp
  4113be:	dec    ebx
  4113bf:	mov    eax,ds:0xaf6e9376
  4113c4:	mov    cl,0xc0
  4113c6:	stc    
  4113c7:	sbb    dl,ch
  4113c9:	jmp    0x3ce408e8
  4113ce:	jae    0x411411
  4113d0:	mov    edi,0x7e6c428f
  4113d5:	sar    dl,cl
  4113d7:	mov    al,0x27
  4113d9:	inc    edx
  4113da:	mov    cl,0x8c
  4113dc:	test   edi,edx
  4113de:	mov    dh,0x14
  4113e0:	ins    DWORD PTR es:[edi],dx
  4113e1:	mov    al,ds:0x811c4814
  4113e6:	mov    ecx,0xbbad6c82
  4113eb:	inc    ebp
  4113ec:	or     cl,dl
  4113ee:	cdq    
  4113ef:	inc    ebx
  4113f0:	push   ebx
  4113f1:	push   es
  4113f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f3:	scas   eax,DWORD PTR es:[di]
  4113f5:	mov    cl,0x7c
  4113f7:	jle    0x411430
  4113f9:	or     eax,0x3c34ad83
  4113ff:	mov    ?,ebx
  411401:	jmp    0x28a28979
  411406:	inc    ecx
  411407:	retf   0x30cb
  41140a:	rol    ebp,cl
  41140c:	pop    edx
  41140d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41140e:	adc    dh,bh
  411410:	enter  0x6994,0x85
  411414:	push   edi
  411415:	dec    ebx
  411416:	(bad)  
  411417:	scas   eax,DWORD PTR es:[edi]
  411418:	sbb    DWORD PTR [ebx-0x6a],ebx
  41141b:	and    esp,eax
  41141d:	lea    edi,[ecx-0x14e2d1ed]
  411423:	jb     0x41148f
  411425:	aaa    
  411426:	idiv   DWORD PTR gs:[edx+ebp*1]
  41142a:	cmc    
  41142b:	jno    0x411468
  41142d:	mov    cl,0xdc
  41142f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411430:	push   0x8bf729cc
  411435:	call   0x3081e0b9
  41143a:	inc    esp
  41143b:	test   dh,ah
  41143d:	push   ebx
  41143e:	cli    
  41143f:	int3   
  411440:	ret    
  411441:	xor    ebp,DWORD PTR [ecx]
  411443:	aas    
  411444:	scas   eax,DWORD PTR es:[edi]
  411445:	mov    ebx,0xfe94886e
  41144a:	or     bh,dl
  41144c:	lds    esi,FWORD PTR [esp+eax*1+0x6568332c]
  411453:	inc    eax
  411454:	pop    ebp
  411455:	pop    di
  411457:	rol    BYTE PTR [edi],cl
  411459:	shl    BYTE PTR [esi+0x44fdc85c],1
  41145f:	mov    ecx,0xefd9f0a4
  411464:	ins    BYTE PTR es:[edi],dx
  411465:	pop    ds
  411466:	or     eax,0x1668145e
  41146b:	outs   dx,DWORD PTR ds:[esi]
  41146c:	pop    ss
  41146d:	xor    eax,0xad646d9a
  411472:	pop    ebx
  411473:	dec    edi
  411474:	or     al,0x92
  411476:	dec    esi
  411477:	inc    ecx
  411478:	and    cl,ch
  41147a:	sbb    cl,bl
  41147c:	cmp    eax,0xccd34fc6
  411481:	inc    esi
  411482:	rol    BYTE PTR [esi-0x7f],0x67
  411486:	dec    ebx
  411487:	jo     0xe3f1983c
  41148d:	in     al,0x8f
  41148f:	and    ah,BYTE PTR [eax]
  411491:	dec    ebx
  411492:	mov    ch,0x22
  411494:	lahf   
  411495:	fmulp  st(1),st
  411497:	mov    eax,0x9b14f1f6
  41149c:	add    eax,DWORD PTR [edi-0x36]
  41149f:	lahf   
  4114a0:	jne    0x4114f1
  4114a2:	std    
  4114a3:	test   BYTE PTR [edx],ah
  4114a5:	add    al,BYTE PTR [ebx]
  4114a7:	shr    DWORD PTR [edi],cl
  4114a9:	and    ah,BYTE PTR [esi-0x5f87c82d]
  4114af:	pop    eax
  4114b0:	out    dx,al
  4114b1:	int3   
  4114b2:	mov    bh,BYTE PTR [eax]
  4114b4:	into   
  4114b5:	mov    dh,0x60
  4114b7:	mov    ds:0x8e696ebd,al
  4114bc:	sub    eax,0x6020b5c4
  4114c1:	cmp    cl,al
  4114c3:	in     al,dx
  4114c4:	push   esp
  4114c5:	stc    
  4114c6:	call   0xc719c237
  4114cb:	data16 (bad) 
  4114cd:	rep stos DWORD PTR es:[edi],eax
  4114cf:	and    edx,DWORD PTR [ebx+0x6cb14743]
  4114d5:	and    DWORD PTR [ebx-0x1],0x617abd35
  4114dc:	outs   dx,BYTE PTR ds:[esi]
  4114dd:	mov    al,0x38
  4114df:	push   edx
  4114e0:	in     al,dx
  4114e1:	test   eax,0xa9d34760
  4114e6:	mov    ds:0x56ef749c,al
  4114eb:	sbb    BYTE PTR [ebp+edx*1+0x13f94ee1],0xae
  4114f3:	bound  edi,QWORD PTR [esi]
  4114f5:	test   al,0xaf
  4114f7:	or     BYTE PTR [ebx],al
  4114f9:	or     DWORD PTR [ebx-0x37fc088],eax
  4114ff:	call   0xfb69:0x68c811a3
  411506:	mov    ebx,0xcb043ee
  41150b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41150c:	(bad)  
  41150d:	mov    bh,0xa1
  41150f:	add    al,0xc
  411511:	dec    edi
  411512:	and    ecx,edi
  411514:	les    eax,FWORD PTR [ebx+eiz*1+0x4f741f5]
  41151b:	sub    edi,DWORD PTR [esi-0x1444c15b]
  411521:	inc    ecx
  411522:	inc    ecx
  411523:	cmc    
  411524:	jno    0x41155f
  411526:	stc    
  411527:	and    bl,BYTE PTR [ebp+edi*2+0x461ec16d]
  41152e:	pop    edi
  41152f:	push   esi
  411530:	pop    edi
  411531:	mov    eax,0x140b550f
  411536:	and    BYTE PTR [esi],al
  411538:	pop    esi
  411539:	or     eax,0x915f531b
  41153e:	xor    eax,0xcf840e1f
  411543:	push   eax
  411544:	enter  0x21c7,0x2d
  411548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411549:	cmp    edx,DWORD PTR [ebx-0x75]
  41154c:	dec    edx
  41154d:	call   0xc4f8:0x363fb19b
  411554:	push   ebp
  411555:	cmp    BYTE PTR [ebp+0x44],0x31
  411559:	xor    BYTE PTR [ebx+ebp*8],al
  41155c:	ret    
  41155d:	stos   DWORD PTR es:[edi],eax
  41155e:	imul   edx,DWORD PTR [ebx],0xce4fe50a
  411564:	aas    
  411565:	add    eax,0x54a3d798
  41156a:	pop    edx
  41156b:	push   esp
  41156c:	sahf   
  41156d:	push   esi
  41156e:	jecxz  0x4115c7
  411570:	ins    DWORD PTR es:[edi],dx
  411571:	xchg   edx,eax
  411572:	sbb    eax,0x496b1333
  411577:	mov    ebp,DWORD PTR [eax+0x6e]
  41157a:	inc    eax
  41157b:	arpl   WORD PTR [esi+ecx*8],dx
  41157e:	add    ebx,DWORD PTR [ebx-0x34ad9cb9]
  411584:	pop    ecx
  411585:	das    
  411586:	jle    0x4115a4
  411588:	inc    eax
  411589:	data16 xor dl,cl
  41158c:	add    al,0x2e
  41158e:	into   
  41158f:	lods   eax,DWORD PTR ds:[esi]
  411590:	inc    ebx
  411591:	jne    0x411540
  411593:	test   eax,0xd4f67c85
  411598:	push   DWORD PTR [eax-0x76c7a1d1]
  41159e:	pop    ebx
  41159f:	mov    cl,0x5
  4115a1:	ja     0x4115e0
  4115a3:	lahf   
  4115a4:	outs   dx,BYTE PTR ds:[esi]
  4115a5:	inc    ebp
  4115a6:	jecxz  0x4115d9
  4115a8:	popf   
  4115a9:	sbb    ebp,DWORD PTR [eax+0x2d]
  4115ac:	fsubr  DWORD PTR [edx+0x7e480d54]
  4115b2:	fwait
  4115b3:	pusha  
  4115b4:	pop    ebp
  4115b5:	adc    bh,cl
  4115b7:	sbb    DWORD PTR [eax-0x11],esp
  4115ba:	lock enter 0x419,0xd3
  4115bf:	mov    edi,0x2fbd1fc6
  4115c4:	outs   dx,BYTE PTR ds:[esi]
  4115c5:	fmul   DWORD PTR gs:[ebx+0x78]
  4115c9:	adc    al,dh
  4115cb:	jb     0x411560
  4115cd:	cs int 0x36
  4115d0:	aam    0x16
  4115d2:	popf   
  4115d3:	xlat   BYTE PTR ds:[ebx]
  4115d4:	je     0x411594
  4115d6:	std    
  4115d7:	jge    0x411628
  4115d9:	add    DWORD PTR [edx+esi*2+0x29],eax
  4115dd:	push   ebx
  4115de:	adc    ebp,ebx
  4115e0:	fild   WORD PTR [ebp+0x64653472]
  4115e6:	and    DWORD PTR [eax-0x278bc444],0xc71de11
  4115f0:	out    dx,al
  4115f1:	fidiv  DWORD PTR [esi+0x7a]
  4115f4:	das    
  4115f5:	cmp    esp,DWORD PTR [edi-0x6f]
  4115f8:	jb     0x411671
  4115fa:	sbb    ebx,edx
  4115fc:	add    DWORD PTR [eax],0x639633b6
  411602:	sub    eax,0x32d5f046
  411607:	xor    ebp,edx
  411609:	or     bh,cl
  41160b:	clc    
  41160c:	dec    ebx
  41160d:	xchg   esp,eax
  41160e:	xchg   BYTE PTR [esi-0x76ccc7d],al
  411614:	mov    fs,WORD PTR [esi]
  411616:	pusha  
  411617:	scas   eax,DWORD PTR es:[edi]
  411618:	jmp    0xa38:0xba8358e9
  41161f:	call   0xc61de34
  411624:	push   ebp
  411625:	cdq    
  411626:	cmp    cl,dh
  411628:	xchg   edi,eax
  411629:	shl    DWORD PTR [edx],1
  41162b:	test   DWORD PTR [edi+0x5c],0x3eb28c1a
  411632:	sar    DWORD PTR [ebp+0x33],1
  411635:	in     al,0x39
  411637:	imul   edx
  411639:	arpl   cx,bx
  41163b:	mov    DWORD PTR [edx+0x59a05ffd],eax
  411641:	test   DWORD PTR [ebx],ebp
  411643:	cmp    DWORD PTR [edi+0x28d9107e],esi
  411649:	sbb    al,0x3a
  41164b:	mov    ds:0x83fa47ec,eax
  411650:	push   ebx
  411651:	mov    bh,0xe2
  411653:	cmp    eax,0xef7ccbca
  411658:	push   ecx
  411659:	out    dx,eax
  41165a:	jns    0x4116ae
  41165c:	add    eax,0xef5ce79d
  411661:	pop    eax
  411662:	jae    0x41165d
  411664:	loop   0x41164a
  411666:	stc    
  411667:	xchg   ebp,eax
  411668:	jo     0x411617
  41166a:	inc    ecx
  41166b:	loop   0x411646
  41166d:	ficomp WORD PTR [eax-0x50]
  411670:	or     BYTE PTR ds:0xd54e334b,ah
  411676:	fdiv   DWORD PTR [ecx]
  411678:	stc    
  411679:	mov    es,WORD PTR [esi-0x5]
  41167c:	fwait
  41167d:	cmp    DWORD PTR [eax-0x62f3bd6e],ecx
  411683:	sbb    eax,0x3dd8809a
  411688:	pop    ebp
  411689:	jnp    0x411668
  41168b:	rcr    BYTE PTR [ebx+0x1c],cl
  41168e:	xchg   ebp,eax
  41168f:	cmovnp ebp,DWORD PTR [esi]
  411692:	push   edi
  411693:	ins    BYTE PTR es:[edi],dx
  411694:	push   esi
  411695:	jmp    0x312a149f
  41169a:	pop    edx
  41169b:	imul   esi,DWORD PTR [ebx+edi*8+0x47bc0678],0xfffffffe
  4116a3:	fistp  WORD PTR [edi]
  4116a5:	jmp    0x41163d
  4116a7:	inc    ecx
  4116a8:	adc    DWORD PTR [ebx],ebx
  4116aa:	mov    WORD PTR [ebx+ebp*8],gs
  4116ad:	pop    ecx
  4116ae:	cmp    BYTE PTR [ebp+eiz*8+0x7],0x99
  4116b3:	mov    edi,0xfddd24dc
  4116b8:	add    al,bh
  4116ba:	and    DWORD PTR [ecx+0x10],esi
  4116bd:	repz xchg ebx,eax
  4116bf:	cdq    
  4116c0:	aas    
  4116c1:	or     BYTE PTR [edi+0x3f],bh
  4116c4:	mov    eax,0x94ed37c3
  4116c9:	lods   eax,DWORD PTR ds:[esi]
  4116ca:	std    
  4116cb:	pop    edi
  4116cc:	shr    BYTE PTR ds:0x79a40cbe,cl
  4116d2:	or     al,0x78
  4116d4:	into   
  4116d5:	and    eax,DWORD PTR [esp+ebx*8+0x4c]
  4116d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116da:	mov    esp,cs
  4116dc:	cmp    eax,0x19028c1
  4116e1:	ds adc eax,0xb8f83d85
  4116e7:	pushf  
  4116e8:	sbb    al,0x7b
  4116ea:	ror    ebp,1
  4116ec:	jae    0x411747
  4116ee:	inc    edi
  4116f0:	inc    ecx
  4116f1:	sub    al,0xd8
  4116f3:	into   
  4116f4:	out    dx,al
  4116f5:	push   eax
  4116f6:	pop    ecx
  4116f7:	fnstcw WORD PTR [esi+ebp*8-0x2d62c4ec]
  4116fe:	xor    edi,DWORD PTR [edx-0x25]
  411701:	cwde   
  411702:	aam    0xcd
  411704:	gs cmp eax,0x100c4609
  41170a:	je     0x411760
  41170c:	(bad)  
  41170d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41170e:	stc    
  41170f:	outs   dx,DWORD PTR ds:[esi]
  411710:	not    BYTE PTR [ecx]
  411712:	mov    eax,0xd98fdf1f
  411717:	scas   eax,DWORD PTR es:[edi]
  411718:	sub    ah,bl
  41171a:	outs   dx,DWORD PTR ds:[esi]
  41171b:	ins    BYTE PTR es:[edi],dx
  41171c:	popf   
  41171d:	sbb    al,0x21
  41171f:	push   edi
  411720:	cmp    esp,DWORD PTR [edi+edx*2-0x557c211b]
  411727:	adc    al,0x1
  411729:	mov    al,ds:0x56a19e5f
  41172e:	inc    ecx
  41172f:	inc    ecx
  411730:	enter  0xd816,0x24
  411734:	cmp    DWORD PTR [eax],0xffffff97
  411737:	dec    eax
  411738:	retf   0xf1f3
  41173b:	sub    DWORD PTR [ebp-0x106874b0],esi
  411741:	sahf   
  411742:	and    al,0xc4
  411744:	cli    
  411745:	or     ecx,DWORD PTR [ebx+0x954c3a7]
  41174b:	out    0x74,eax
  41174d:	dec    ebp
  41174e:	aaa    
  41174f:	aam    0x13
  411751:	inc    ebp
  411752:	mov    bh,0xa9
  411754:	into   
  411755:	jg     0x4116e2
  411757:	mov    al,dl
  411759:	cli    
  41175a:	or     eax,0x3fd934b
  41175f:	adc    DWORD PTR [edx+0x6f0641c1],0x37
  411766:	sub    bl,dl
  411768:	mov    edx,0xaa977f06
  41176d:	push   ss
  41176e:	js     0x411786
  411770:	pop    ecx
  411771:	dec    edi
  411772:	xchg   ecx,eax
  411773:	sbb    ah,dh
  411775:	enter  0x562,0x35
  411779:	inc    ecx
  41177a:	ret    0xaefb
  41177d:	retf   0xdfb4
  411780:	jmp    0x411800
  411782:	sbb    eax,0x3d13ace2
  411787:	mov    eax,ds:0x1d675d9d
  41178c:	addr16 push ebp
  41178e:	sbb    eax,0x3ec4f50f
  411793:	lahf   
  411794:	ss test eax,0x5e6fa903
  41179a:	out    dx,eax
  41179b:	dec    eax
  41179c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41179d:	cmp    DWORD PTR [eax],ebp
  41179f:	int3   
  4117a0:	ret    
  4117a1:	out    dx,eax
  4117a2:	mov    cl,0x4f
  4117a4:	je     0x4117ee
  4117a6:	push   esi
  4117a7:	mov    dh,0x68
  4117a9:	retf   0x3b18
  4117ac:	dec    ebp
  4117ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ae:	add    ecx,DWORD PTR [edx+0x4e]
  4117b1:	mov    cl,0x75
  4117b3:	mov    bl,0xbb
  4117b5:	aaa    
  4117b6:	xchg   esp,eax
  4117b7:	pushf  
  4117b8:	pop    esp
  4117b9:	daa    
  4117ba:	les    edi,FWORD PTR [ebp-0xe81929a]
  4117c0:	xchg   DWORD PTR [edx+0x68f408af],edi
  4117c6:	rcr    BYTE PTR [eax-0x68126b79],1
  4117cc:	mov    ch,0x28
  4117ce:	mov    ch,0xf8
  4117d0:	sahf   
  4117d1:	icebp  
  4117d2:	pop    edx
  4117d3:	xchg   BYTE PTR [ebx-0x66123388],ah
  4117d9:	lds    ecx,FWORD PTR [edx+0x21a2b837]
  4117df:	sbb    esi,DWORD PTR [esi+eax*1]
  4117e2:	fxch   st(6)
  4117e4:	adc    al,0x8e
  4117e6:	stc    
  4117e7:	fbstp  TBYTE PTR [esi+esi*1+0x3e02f535]
  4117ee:	fs call 0x12fe5fd7
  4117f4:	cmp    al,0x39
  4117f6:	mov    eax,ds:0xa573209d
  4117fb:	mov    ecx,0x4af19e70
  411800:	cmp    BYTE PTR [esi+0x75],bl
  411803:	rcr    ebp,0xb3
  411806:	(bad)  
  411807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411808:	or     BYTE PTR [eax-0xd02bfc5],al
  41180e:	xor    eax,0x6d64c754
  411813:	or     esp,DWORD PTR [edi-0x2a]
  411816:	pusha  
  411817:	int    0x96
  411819:	aas    
  41181a:	jge    0x411830
  41181c:	shr    DWORD PTR [ecx-0x388b1a02],1
  411822:	ss in  al,dx
  411824:	mov    ebx,0x3dc79191
  411829:	scas   al,BYTE PTR es:[edi]
  41182a:	pop    edx
  41182b:	fistp  QWORD PTR [ecx+0x7d70cab6]
  411831:	scas   eax,DWORD PTR es:[edi]
  411832:	inc    esi
  411833:	inc    esi
  411834:	mov    ds:0xbadd654f,eax
  411839:	or     BYTE PTR [eax+0x24acc193],al
  41183f:	cmc    
  411840:	and    al,0xc6
  411842:	iret   
  411843:	out    dx,eax
  411844:	add    eax,0x5057cea
  411849:	jne    0x4118b6
  41184b:	mov    dh,0x5
  41184d:	push   esp
  41184e:	mov    esp,0x275911e3
  411853:	ret    0x1e81
  411856:	xchg   ebx,eax
  411857:	hlt    
  411858:	popa   
  411859:	inc    esi
  41185a:	sub    BYTE PTR [ecx],al
  41185c:	xor    al,0x27
  41185e:	sbb    al,0xca
  411860:	xchg   BYTE PTR [edi-0x1b69c32d],bh
  411866:	jl     0x4118a5
  411868:	sbb    al,0x63
  41186a:	loopne 0x4117fa
  41186c:	adc    eax,0x14ed89ac
  411871:	out    0xc2,eax
  411873:	ret    
  411874:	test   eax,0xfba2a4b5
  411879:	jg     0x4118e3
  41187b:	dec    esp
  41187c:	test   eax,0x6f78bcde
  411881:	stos   DWORD PTR es:[edi],eax
  411882:	xchg   ebp,eax
  411883:	call   0xacc0897b
  411888:	mov    cl,0x85
  41188a:	stos   BYTE PTR es:[edi],al
  41188b:	addr16 inc eax
  41188d:	xchg   BYTE PTR [ecx],dl
  41188f:	push   0xffffffff
  411891:	(bad)  
  411892:	sub    al,0x9b
  411894:	in     eax,dx
  411895:	iret   
  411896:	enter  0x1fa,0x4a
  41189a:	aas    
  41189b:	jmp    0x411840
  41189d:	test   DWORD PTR [edi+0x63ca89a7],edi
  4118a3:	mov    esp,0x5a88f2a6
  4118a8:	mov    ecx,0x360a4892
  4118ad:	(bad)  
  4118ae:	fsub   st(5),st
  4118b0:	ret    0xaa70
  4118b3:	inc    esp
  4118b4:	xor    DWORD PTR [ebx+edx*2-0x55],ecx
  4118b8:	pop    ecx
  4118b9:	leave  
  4118ba:	and    edx,DWORD PTR [eax-0x22]
  4118bd:	push   0x987deb21
  4118c2:	xor    ebx,DWORD PTR [ebx+esi*1+0x6c94f811]
  4118c9:	iret   
  4118ca:	mov    DWORD PTR [ecx+0x33],ebx
  4118cd:	inc    ecx
  4118ce:	mov    al,al
  4118d0:	pop    edx
  4118d1:	dec    esi
  4118d2:	cs call 0x716:0xfb911e8c
  4118da:	jle    0x41194d
  4118dc:	adc    eax,0xfffec10d
  4118e1:	fnstcw WORD PTR [ebx]
  4118e3:	mov    eax,ds:0x5922e3d6
  4118e8:	jb     0x4118ba
  4118ea:	sub    eax,ebp
  4118ec:	sar    DWORD PTR [esi+edi*4],cl
  4118ef:	jmp    0x46e6:0x582d5ac8
  4118f6:	add    ebx,esp
  4118f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f9:	xchg   esi,eax
  4118fa:	pop    ecx
  4118fb:	inc    eax
  4118fc:	fstp   DWORD PTR [edi-0x7e]
  4118ff:	add    eax,0x1ed19979
  411904:	push   eax
  411905:	ds rol edi,0xc8
  411909:	sbb    edi,DWORD PTR [edi-0x3995f551]
  41190f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411910:	jbe    0x41193f
  411912:	mov    ebx,ss
  411914:	rol    bl,cl
  411916:	aaa    
  411917:	jns    0x4118cc
  411919:	pushf  
  41191a:	cwde   
  41191b:	sti    
  41191c:	jmp    0x706f2ba
  411921:	bound  esp,QWORD PTR [ebx]
  411923:	lods   eax,DWORD PTR ds:[esi]
  411924:	pop    ecx
  411925:	and    BYTE PTR [edi+eax*2-0x3f],dl
  411929:	adc    ecx,DWORD PTR [edi-0x40]
  41192c:	xchg   eax,ebp
  41192e:	ja     0x411978
  411930:	jp     0x41199a
  411932:	dec    ebp
  411933:	sub    BYTE PTR [eax-0xcdc5234],ch
  411939:	cwde   
  41193a:	pop    ecx
  41193b:	sub    DWORD PTR [edi],ebp
  41193d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41193e:	aad    0xac
  411940:	les    eax,FWORD PTR [bp+di-0x7223]
  411945:	fistp  WORD PTR [edi-0x21]
  411948:	jl     0x41193d
  41194a:	cmp    eax,0xa4d99fe8
  41194f:	rol    edi,0x7a
  411952:	dec    ecx
  411953:	mov    dl,0x8a
  411955:	sub    eax,0x7121d0ea
  41195a:	aas    
  41195b:	cdq    
  41195c:	jnp    0x4119c8
  41195e:	sti    
  41195f:	cli    
  411960:	mov    eax,ds:0xba343ce8
  411965:	shl    BYTE PTR [edi+0x5714b95e],cl
  41196b:	sbb    cl,ah
  41196d:	ret    0xb766
  411970:	xor    edx,DWORD PTR [esi+0x7bd85c53]
  411976:	inc    esi
  411977:	inc    esp
  411978:	je     0x4119ac
  41197a:	test   al,0x4a
  41197c:	push   ds
  41197d:	mov    ds:0x7eeaca5b,eax
  411982:	or     BYTE PTR [ebx+0x29fc370e],bl
  411988:	leave  
  411989:	hlt    
  41198a:	mov    bh,0x4f
  41198c:	cld    
  41198d:	push   edx
  41198e:	and    bh,BYTE PTR [eax]
  411990:	out    dx,eax
  411991:	das    
  411992:	or     ecx,DWORD PTR [ecx+esi*1]
  411995:	sbb    eax,0x4ae389a9
  41199a:	(bad)  [edx+0x71]
  41199d:	out    dx,al
  41199e:	push   ds
  41199f:	pop    ss
  4119a0:	aad    0xf3
  4119a2:	data16 ffreep st(4)
  4119a5:	inc    edx
  4119a6:	fldlg2 
  4119a8:	xor    bh,BYTE PTR [ecx+0x76255b0b]
  4119ae:	clc    
  4119af:	loopne 0x411937
  4119b1:	sub    ecx,DWORD PTR [edi]
  4119b3:	into   
  4119b4:	jg     0x4119ec
  4119b6:	fcom   DWORD PTR [ebp+0x3063e279]
  4119bc:	mov    dl,0x34
  4119be:	pop    ds
  4119bf:	js     0x411951
  4119c1:	mov    esi,0xbbc2bc94
  4119c6:	ret    
  4119c7:	sbb    BYTE PTR ds:[esi],al
  4119ca:	dec    ebp
  4119cb:	pop    edx
  4119cc:	xor    eax,0xa7d2337b
  4119d1:	pop    ebx
  4119d2:	mov    edx,0x5678cb67
  4119d7:	bound  edi,QWORD PTR [edx+0x454d0645]
  4119dd:	into   
  4119de:	sub    al,0x99
  4119e0:	mov    edx,gs
  4119e2:	cmp    BYTE PTR [ecx-0x4c],0x6f
  4119e6:	ror    ah,cl
  4119e8:	add    ah,BYTE PTR [ecx+edi*1]
  4119eb:	stos   DWORD PTR es:[edi],eax
  4119ec:	adc    DWORD PTR [edi-0x9],edi
  4119ef:	xor    BYTE PTR [eax],dl
  4119f1:	ss out dx,eax
  4119f3:	dec    eax
  4119f4:	inc    esi
  4119f5:	retf   0x38e1
  4119f8:	pop    ebp
  4119f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119fa:	in     eax,dx
  4119fb:	ins    BYTE PTR es:[edi],dx
  4119fc:	or     ebp,DWORD PTR [ebx]
  4119fe:	sbb    ebx,edx
  411a00:	jo     0x4119a7
  411a02:	sbb    BYTE PTR [edi],ah
  411a04:	arpl   WORD PTR [ebx+0x11d13cc9],sp
  411a0a:	iret   
  411a0b:	cdq    
  411a0c:	in     eax,dx
  411a0d:	test   esi,ebx
  411a0f:	sbb    dl,bl
  411a11:	mov    al,0x54
  411a13:	jb     0x4119e9
  411a15:	xchg   esp,eax
  411a16:	(bad)
  411a1a:	rcr    cl,cl
  411a1c:	into   
  411a1d:	jno    0x4119dc
  411a1f:	pop    edi
  411a20:	pop    ebp
  411a21:	ficomp DWORD PTR [edx-0x68]
  411a24:	pop    ds
  411a25:	mov    ecx,0x4f11268f
  411a2a:	int3   
  411a2b:	inc    edx
  411a2c:	in     eax,dx
  411a2d:	fcomp  st(1)
  411a2f:	or     BYTE PTR [edi],dh
  411a31:	into   
  411a32:	loop   0x411a52
  411a34:	out    dx,al
  411a35:	int3   
  411a36:	je     0x4119bd
  411a38:	fcom   QWORD PTR [ebx]
  411a3a:	lea    edi,ds:0x6936cdf6
  411a40:	fild   WORD PTR [ebx+0x32]
  411a43:	and    dh,BYTE PTR [edx]
  411a45:	mov    bh,BYTE PTR [ebx+0x4f]
  411a48:	popf   
  411a49:	stos   DWORD PTR es:[edi],eax
  411a4a:	mov    al,ds:0x680edcd4
  411a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a50:	(bad)  
  411a52:	add    DWORD PTR [esi+0x11],esp
  411a55:	into   
  411a56:	or     bh,BYTE PTR [ebp+0x2b7a6489]
  411a5c:	imul   ebx,DWORD PTR [esi],0x33
  411a5f:	ins    BYTE PTR es:[edi],dx
  411a60:	pop    ss
  411a61:	xor    DWORD PTR [edx-0x4bfba920],0xae3677a3
  411a6b:	sub    eax,0xd3159849
  411a70:	cmp    al,0xc1
  411a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a73:	sub    ecx,eax
  411a75:	leave  
  411a76:	repz cmp al,0x97
  411a79:	fcmove st,st(2)
  411a7b:	jecxz  0x411ab7
  411a7d:	jae    0x411a6c
  411a7f:	jno    0x411a12
  411a81:	pop    esi
  411a82:	pushf  
  411a83:	test   DWORD PTR [esi+ebx*2],esp
  411a86:	xchg   edi,eax
  411a87:	and    dh,dh
  411a89:	sub    esi,DWORD PTR [ebx-0x3eeecfaa]
  411a8f:	in     al,0xba
  411a91:	xor    al,0x9c
  411a93:	lea    eax,[ebx*4+0x2943203d]
  411a9a:	jmp    0x411a8d
  411a9c:	pop    ds
  411a9d:	dec    eax
  411a9e:	es cmp eax,0xe89a1690
  411aa4:	test   BYTE PTR [edi-0x4373ae3a],dh
  411aaa:	inc    ebp
  411aab:	in     al,0xe4
  411aad:	push   ds
  411aae:	adc    eax,0xfa4cd032
  411ab3:	adc    dl,BYTE PTR [eax+0x44]
  411ab6:	pop    ebp
  411ab7:	mov    ecx,0x6afc0986
  411abc:	aas    
  411abd:	jl     0x411b15
  411abf:	fucom  st(1)
  411ac1:	mov    esp,0xaa496845
  411ac6:	call   0x49fc:0xc05c9d63
  411acd:	or     dl,bh
  411acf:	dec    ebx
  411ad0:	xchg   esp,eax
  411ad1:	dec    edi
  411ad2:	push   ecx
  411ad3:	setne  al
  411ad6:	add    al,0xe
  411ad8:	or     edx,DWORD PTR [edx-0x20b8b295]
  411ade:	(bad)  
  411adf:	out    dx,al
  411ae0:	(bad)  [esi]
  411ae2:	and    bl,BYTE PTR [edx+eax*8+0x4133b4e0]
  411ae9:	out    0xe3,eax
  411aeb:	pop    edi
  411aec:	out    0x56,eax
  411aee:	shr    BYTE PTR [ebp+edx*2+0x7bcb0b69],1
  411af5:	xor    al,0x74
  411af7:	pop    ecx
  411af8:	jge    0x411a8c
  411afa:	xor    BYTE PTR [esi+0x31],ch
  411afd:	adc    eax,0x5f7cb038
  411b02:	(bad)  
  411b03:	mov    al,ds:0x73369bdd
  411b08:	adc    ah,BYTE PTR [edi-0x15]
  411b0b:	sub    al,0x6e
  411b0d:	xor    BYTE PTR [edi-0x38],cl
  411b10:	(bad)  
  411b11:	icebp  
  411b12:	popf   
  411b13:	and    eax,0xbae6e7b4
  411b18:	sub    al,0x28
  411b1a:	xor    eax,0x9da9d2da
  411b1f:	sub    BYTE PTR [ebx+0x26],ah
  411b22:	mov    dl,0x23
  411b24:	dec    esp
  411b25:	sahf   
  411b26:	add    dl,cl
  411b28:	pop    ebx
  411b29:	mov    bl,ah
  411b2b:	mov    eax,ds:0x2a00ce6a
  411b30:	inc    edx
  411b31:	sbb    BYTE PTR [esi],bh
  411b33:	mov    ebp,0x4b5e7d17
  411b38:	xchg   dx,ax
  411b3a:	and    DWORD PTR [esi+ebp*2+0x47612895],edi
  411b41:	in     al,0x8f
  411b43:	cmp    al,0xe6
  411b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b46:	jno    0x411b5c
  411b48:	adc    ch,al
  411b4a:	mov    dh,0x89
  411b4c:	and    DWORD PTR [ebx],eax
  411b4e:	add    al,0xac
  411b50:	packsswb mm1,QWORD PTR [esi-0x67]
  411b54:	lods   eax,DWORD PTR ds:[esi]
  411b55:	and    bh,BYTE PTR [esi+0x3d]
  411b58:	xchg   DWORD PTR [ebx-0x15],ebp
  411b5b:	mov    ecx,0x4ed48fa0
  411b60:	dec    edx
  411b61:	push   esi
  411b62:	cdq    
  411b63:	nop
  411b64:	int3   
  411b65:	aam    0xa4
  411b67:	sub    dl,al
  411b69:	cs add al,0x51
  411b6c:	xchg   ecx,eax
  411b6d:	or     ah,BYTE PTR [ecx+ebp*8-0x23f9a4cb]
  411b74:	pop    ecx
  411b75:	out    dx,eax
  411b76:	xor    BYTE PTR [edi+0x1bfa5ccf],dl
  411b7c:	jp     0x411bf7
  411b7e:	out    0xf3,eax
  411b80:	int    0xb5
  411b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b83:	fnop   
  411b85:	mov    ebp,0xd6e26d4d
  411b8a:	cmc    
  411b8b:	and    ecx,DWORD PTR [eax]
  411b8d:	xor    DWORD PTR [eax-0xb],ecx
  411b90:	or     eax,0x798421d9
  411b95:	(bad)  [edi+0x73]
  411b98:	jecxz  0x411b2d
  411b9a:	mov    dh,0xcf
  411b9c:	mov    bl,0xa5
  411b9e:	mov    esp,DWORD PTR [edi+0x1dcdd53]
  411ba4:	mov    dh,0x73
  411ba6:	inc    esi
  411ba7:	xor    DWORD PTR ds:0x46984e6c,edi
  411bad:	iret   
  411bae:	pop    esp
  411baf:	add    al,0x4f
  411bb1:	data16 sti 
  411bb3:	mov    edx,0x90c9fee5
  411bb8:	sub    BYTE PTR [ebp-0x3c83b982],0x1a
  411bbf:	mov    ebx,0xad5126a4
  411bc4:	js     0x411bcf
  411bc6:	adc    eax,0x81bd6a00
  411bcb:	dec    esi
  411bcc:	push   ss
  411bcd:	out    0x99,al
  411bcf:	jae    0x411bc1
  411bd1:	aam    0x82
  411bd3:	mov    ch,0xe2
  411bd5:	sti    
  411bd6:	push   ds
  411bd7:	nop
  411bd8:	xor    edx,DWORD PTR [edx-0x3edb64ca]
  411bde:	mov    dl,0xd8
  411be0:	and    DWORD PTR [ebp-0x23],esi
  411be3:	iret   
  411be4:	mov    edi,0x5ad7ca5
  411be9:	arpl   WORD PTR [esi-0x7b],sp
  411bec:	cmp    al,0x9d
  411bee:	push   ss
  411bef:	adc    edi,edx
  411bf1:	jl     0x411bf4
  411bf3:	std    
  411bf4:	arpl   ax,di
  411bf6:	popa   
  411bf7:	cmp    al,0x31
  411bf9:	jecxz  0x411c61
  411bfb:	std    
  411bfc:	loopne 0x411bca
  411bfe:	cmp    al,0x6a
  411c00:	mov    ah,0xb4
  411c02:	jne    0x411c3a
  411c04:	push   0x67
  411c06:	mov    ?,WORD PTR [ebx-0x43]
  411c09:	add    bh,BYTE PTR [ebp-0x662b90f2]
  411c0f:	add    DWORD PTR [edx],ecx
  411c11:	sub    BYTE PTR [ebp-0x5],cl
  411c14:	or     ebx,ecx
  411c16:	fiadd  WORD PTR [ecx+edx*1]
  411c19:	in     eax,dx
  411c1a:	clc    
  411c1b:	mov    cl,0xcf
  411c1d:	cld    
  411c1e:	pop    ecx
  411c1f:	leave  
  411c20:	dec    eax
  411c21:	push   ecx
  411c22:	and    edi,DWORD PTR [esp+esi*1]
  411c25:	mov    ecx,0x14dcf280
  411c2a:	push   cs
  411c2b:	mov    bl,0x7c
  411c2d:	int3   
  411c2e:	adc    eax,0x568aa049
  411c33:	int    0x3a
  411c35:	xor    edi,ecx
  411c37:	test   al,0xf8
  411c39:	adc    bl,ch
  411c3b:	sbb    DWORD PTR [ecx-0x59],ebp
  411c3e:	sar    BYTE PTR [edx-0x4],1
  411c41:	test   al,0x2f
  411c43:	(bad)
  411c47:	cmp    eax,0x2a16ca2d
  411c4c:	outs   dx,DWORD PTR ds:[esi]
  411c4d:	inc    ebx
  411c4e:	jbe    0x411cc2
  411c50:	popa   
  411c51:	in     eax,dx
  411c52:	push   0x2e
  411c54:	hlt    
  411c55:	btr    edx,eax
  411c58:	mov    esi,DWORD PTR ds:0x996bdb93
  411c5e:	sbb    DWORD PTR [ebx],edx
  411c60:	inc    edi
  411c61:	inc    ecx
  411c62:	add    al,0x4b
  411c64:	sub    BYTE PTR [ecx-0x535fe902],0xe1
  411c6b:	ret    0xc7e1
  411c6e:	xchg   ecx,eax
  411c6f:	lahf   
  411c70:	aad    0xa8
  411c72:	aam    0xef
  411c74:	or     edx,DWORD PTR [eax+0x58]
  411c77:	or     al,dh
  411c79:	xchg   BYTE PTR [edx+esi*4],ah
  411c7c:	jl     0x411c2a
  411c7e:	jge    0x411c17
  411c80:	mov    al,ds:0x6fda7afa
  411c85:	lahf   
  411c86:	fs pop esi
  411c88:	push   ebp
  411c89:	test   DWORD PTR [edx],eax
  411c8b:	pop    edi
  411c8c:	in     eax,0xaf
  411c8e:	test   eax,0x4081d346
  411c93:	pop    ds
  411c94:	ficom  WORD PTR [edi-0x36c07a18]
  411c9a:	mov    ecx,0x72698f7e
  411c9f:	xor    BYTE PTR [eax+esi*8],dh
  411ca2:	mov    edx,0xcaa62f9d
  411ca7:	cmp    dl,BYTE PTR [edi-0x346d018b]
  411cad:	jne    0x411ce3
  411caf:	aaa    
  411cb0:	sub    al,0x13
  411cb2:	pop    edi
  411cb3:	mov    edx,0xcb4f113e
  411cb8:	lock mov edi,0xa41b4ee0
  411cbe:	dec    eax
  411cbf:	fimul  WORD PTR [edi+0xb09e7da]
  411cc5:	in     al,0xe4
  411cc7:	mov    bl,0x7f
  411cc9:	(bad)  
  411cca:	test   DWORD PTR [eax-0x34],0x4433ccb1
  411cd1:	ja     0x411cd0
  411cd3:	mov    ebp,0x463fccd4
  411cd8:	push   0x7a35517c
  411cdd:	push   0x30
  411cdf:	mov    ds:0xfb2d94d3,al
  411ce4:	iret   
  411ce5:	sbb    al,BYTE PTR [edx-0x31]
  411ce8:	sub    eax,0x4227272d
  411ced:	and    DWORD PTR [edi],esi
  411cef:	sub    ecx,DWORD PTR [ebx+0x5f22233f]
  411cf5:	sar    DWORD PTR [edi-0x6909e05a],0xfa
  411cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cfd:	push   ss
  411cfe:	push   ss
  411cff:	add    eax,0x2c0a4abd
  411d04:	in     eax,0x74
  411d06:	call   0x9b9b:0x94210b3d
  411d0d:	lds    esp,FWORD PTR [ecx-0x25]
  411d10:	js     0x411d82
  411d12:	inc    ebp
  411d13:	call   0x5a2d2ba2
  411d18:	rol    BYTE PTR [ecx+0x12],cl
  411d1b:	mov    ds:0xf1394a04,eax
  411d20:	test   BYTE PTR [edx],al
  411d22:	xchg   edx,eax
  411d23:	mov    cl,0xcc
  411d25:	outs   dx,DWORD PTR ds:[esi]
  411d26:	cmp    DWORD PTR ds:0xd50a1ab7,edi
  411d2c:	or     al,BYTE PTR [ebp-0x280b4d94]
  411d32:	fstp   TBYTE PTR [eax-0x6]
  411d35:	inc    ecx
  411d36:	adc    ebp,esi
  411d38:	adc    dl,ch
  411d3a:	xor    eax,0xfde56d57
  411d3f:	imul   BYTE PTR [eax+ebx*1+0xf]
  411d43:	push   ecx
  411d44:	xor    eax,0xb95feade
  411d49:	cs and al,0xe2
  411d4c:	or     DWORD PTR [eax],edx
  411d4e:	cmp    DWORD PTR [eax],esp
  411d50:	(bad)  
  411d51:	xor    al,0xfc
  411d53:	jle    0x411dbc
  411d55:	xchg   ebx,eax
  411d56:	xor    al,0xee
  411d59:	fsubrp st(3),st
  411d5b:	pop    ecx
  411d5c:	adc    al,0xc4
  411d5e:	outs   dx,BYTE PTR ds:[esi]
  411d5f:	lahf   
  411d60:	xor    al,0xbb
  411d62:	aaa    
  411d63:	repz call 0x27b3eb97
  411d69:	popf   
  411d6a:	lods   al,BYTE PTR ds:[esi]
  411d6b:	(bad)  
  411d6c:	xor    ah,BYTE PTR [eax]
  411d6e:	or     esi,ebx
  411d70:	mov    ch,0x31
  411d72:	stos   BYTE PTR es:[edi],al
  411d73:	or     ecx,DWORD PTR [edx+0x4659eaf4]
  411d79:	add    edi,DWORD PTR [ebp-0x7560915b]
  411d7f:	cmp    eax,0xdcc3c8e1
  411d84:	fs fdiv st,st(1)
  411d87:	mov    ds:0xbd7f81d5,al
  411d8c:	vandps ymm1,ymm0,YMMWORD PTR ds:0xe618474f
  411d94:	daa    
  411d95:	mov    ecx,DWORD PTR [ecx+eax*8+0x39]
  411d99:	aas    
  411d9a:	cld    
  411d9b:	xchg   edi,eax
  411d9c:	mov    eax,0x440d8105
  411da1:	es rol dh,0xac
  411da5:	inc    esp
  411da6:	pushf  
  411da7:	pop    edx
  411da8:	and    al,0x67
  411daa:	cmc    
  411dab:	inc    ebp
  411dac:	mov    al,ds:0x7559217d
  411db1:	das    
  411db2:	sbb    ebp,edi
  411db4:	popa   
  411db5:	dec    BYTE PTR [eax-0x6be3191d]
  411dbb:	push   ebp
  411dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dbd:	pop    edi
  411dbe:	shl    DWORD PTR [edx+0x16],1
  411dc1:	ret    0x1222
  411dc4:	aam    0x6c
  411dc6:	inc    ebp
  411dc7:	mov    ch,0x75
  411dc9:	(bad)  
  411dca:	(bad)  
  411dcb:	test   eax,0x863677f5
  411dd0:	mov    dh,bh
  411dd2:	pop    esi
  411dd3:	dec    eax
  411dd4:	outs   dx,BYTE PTR ds:[esi]
  411dd5:	sti    
  411dd6:	das    
  411dd7:	pop    eax
  411dd8:	(bad)  
  411dd9:	in     eax,dx
  411dda:	and    DWORD PTR [edi-0x180c38c8],edi
  411de0:	push   ds
  411de1:	mov    al,ds:0x6d568ed4
  411de6:	pop    ecx
  411de7:	jb     0x411d80
  411de9:	and    ebx,ebx
  411deb:	pop    esi
  411dec:	or     eax,0xbbc48995
  411df1:	jge    0x411df1
  411df3:	push   ebx
  411df4:	mov    bp,0xda34
  411df8:	out    0x5c,al
  411dfa:	cmp    ebx,ebp
  411dfc:	add    al,0x93
  411dfe:	push   cs
  411dff:	js     0x411d84
  411e01:	rcr    BYTE PTR [edx+0x29],1
  411e04:	adc    dh,BYTE PTR [ebx]
  411e06:	inc    ebx
  411e07:	mov    edx,0x2a443a55
  411e0c:	icebp  
  411e0d:	cmp    eax,0x3dbc2702
  411e12:	sbb    DWORD PTR [edx],edx
  411e14:	scas   al,BYTE PTR es:[edi]
  411e15:	cld    
  411e16:	es ss jecxz 0x411e5f
  411e1a:	out    0x2e,eax
  411e1c:	add    al,0xe1
  411e1e:	or     al,dh
  411e20:	sar    BYTE PTR [ebp+edi*2-0x9deb23e],1
  411e27:	add    edx,DWORD PTR [ebp+0x70]
  411e2a:	mov    ch,BYTE PTR [ecx+0x7d]
  411e2d:	(bad)  
  411e2e:	call   0x1b956543
  411e33:	outs   dx,BYTE PTR ds:[esi]
  411e34:	fldcw  WORD PTR [ecx-0x76ad22ac]
  411e3a:	push   edx
  411e3b:	jo     0x411eb6
  411e3d:	lock pop eax
  411e3f:	cs pop ds
  411e41:	stos   DWORD PTR es:[edi],eax
  411e42:	pusha  
  411e43:	in     eax,dx
  411e44:	test   BYTE PTR [eax-0x7f],ch
  411e47:	jnp    0x411e86
  411e49:	mov    bl,0x9d
  411e4b:	sbb    eax,0xbf223789
  411e50:	test   DWORD PTR [edi],esp
  411e52:	(bad)  
  411e53:	idiv   DWORD PTR [ebx-0x38]
  411e56:	clc    
  411e57:	mov    cl,0xaf
  411e59:	adc    eax,0x3bc03dde
  411e5e:	pop    eax
  411e5f:	pushf  
  411e60:	adc    esp,DWORD PTR ds:0x2a1f5d61
  411e66:	mov    eax,0xf3cea4c5
  411e6b:	and    ecx,0x68
  411e6e:	ins    DWORD PTR es:[edi],dx
  411e6f:	sbb    dh,0xfe
  411e72:	(bad)  
  411e74:	lods   al,BYTE PTR ds:[esi]
  411e75:	lahf   
  411e76:	imul   ebp,DWORD PTR [edi-0x70],0xffffffbf
  411e7a:	leave  
  411e7b:	or     DWORD PTR [edi-0x36ce44ac],esp
  411e81:	fwait
  411e82:	xchg   DWORD PTR [eax],esp
  411e84:	push   edi
  411e85:	jp     0x411e37
  411e87:	nop
  411e88:	and    DWORD PTR [edx],esp
  411e8a:	loop   0x411edc
  411e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e8d:	(bad)  
  411e8e:	pop    eax
  411e8f:	xchg   esi,eax
  411e90:	and    BYTE PTR [edi-0x56],ch
  411e93:	cmp    eax,0x89a46bbc
  411e98:	adc    cl,BYTE PTR [eax+eiz*2-0x52]
  411e9c:	imul   edx,ebx,0x1d7028b0
  411ea2:	lds    edx,FWORD PTR [edi+0x744a0717]
  411ea8:	adc    eax,0x4a894b56
  411ead:	jge    0x411ea2
  411eaf:	jbe    0x411e9b
  411eb1:	repz arpl WORD PTR [edx],dx
  411eb4:	in     al,dx
  411eb5:	mov    al,ds:0x4b65d136
  411eba:	push   ebp
  411ebb:	jno    0x411f3c
  411ebd:	push   ss
  411ebe:	push   esi
  411ebf:	out    0x97,eax
  411ec1:	pop    ecx
  411ec2:	aam    0x24
  411ec4:	test   DWORD PTR [esi-0x3990528e],edx
  411eca:	(bad)  
  411ecc:	xchg   edx,eax
  411ecd:	(bad)  
  411ecf:	or     eax,edx
  411ed1:	call   0xc32b7bb1
  411ed6:	sbb    al,0x55
  411ed8:	outs   dx,BYTE PTR fs:[esi]
  411eda:	cmp    eax,0x490cc181
  411edf:	inc    eax
  411ee0:	jne    0x411ebc
  411ee2:	sbb    BYTE PTR cs:[esi-0x3d],bl
  411ee6:	cwde   
  411ee7:	in     eax,dx
  411ee8:	imul   eax,DWORD PTR [ecx+0x27],0x7c042c54
  411eef:	mov    cl,0x79
  411ef1:	pop    ds
  411ef2:	(bad)  
  411ef3:	cmc    
  411ef4:	push   0xd3c02da
  411ef9:	pusha  
  411efa:	ja     0x411f29
  411efc:	fst    DWORD PTR [edx+edi*8]
  411eff:	idiv   BYTE PTR [edx-0x49]
  411f02:	push   cs
  411f03:	ds daa 
  411f05:	xchg   esp,eax
  411f06:	js     0x411f0c
  411f08:	sbb    BYTE PTR [ebx-0x3c12a525],ah
  411f0e:	jmp    0x4bf2ca8a
  411f13:	pop    ecx
  411f14:	pop    ebp
  411f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f16:	adc    DWORD PTR ds:0xc60b6ba9,ebp
  411f1c:	test   DWORD PTR [ecx+0x71],ebp
  411f1f:	or     al,0xea
  411f21:	push   edi
  411f22:	push   ebp
  411f23:	xor    ebp,DWORD PTR [edx+0x6e]
  411f26:	xor    DWORD PTR [edi+0x7b],eax
  411f29:	imul   ch
  411f2b:	loop   0x411f2f
  411f2d:	test   BYTE PTR [ebp+edi*4-0x3a77c4f5],0xc8
  411f35:	inc    eax
  411f36:	mov    cl,0xa3
  411f38:	(bad)  
  411f39:	mov    WORD PTR [esi],es
  411f3b:	in     eax,0xff
  411f3d:	push   0xccef8a34
  411f42:	leave  
  411f43:	xchg   DWORD PTR [ebx+0x2053be7b],esi
  411f49:	(bad)  
  411f4a:	retf   
  411f4b:	adc    BYTE PTR [ecx+0x27e06ecf],0x97
  411f52:	dec    edx
  411f53:	out    dx,eax
  411f54:	pop    ebp
  411f55:	add    al,0xf4
  411f57:	sahf   
  411f58:	and    DWORD PTR [ecx+0x10],0xffffffde
  411f5c:	push   ebp
  411f5d:	outs   dx,DWORD PTR ds:[esi]
  411f5e:	aas    
  411f5f:	scas   eax,DWORD PTR es:[edi]
  411f60:	test   ebp,esp
  411f62:	ds xchg ebp,eax
  411f64:	inc    ecx
  411f65:	inc    ecx
  411f66:	ror    edx,1
  411f68:	dec    ebx
  411f69:	cld    
  411f6a:	iret   
  411f6b:	mov    edx,0x539e52d9
  411f70:	pop    ebx
  411f71:	sbb    dh,ch
  411f73:	arpl   WORD PTR [ecx-0x77318dd8],dx
  411f79:	jb     0x411fe3
  411f7b:	ret    0x3ead
  411f7e:	xor    DWORD PTR [ebp+0xa],ebp
  411f81:	sbb    eax,DWORD PTR [edx+0x1d14807f]
  411f87:	je     0x411f4d
  411f89:	(bad)  
  411f8a:	and    edi,eax
  411f8c:	dec    ebx
  411f8d:	jmp    0x1afeb9d4
  411f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f93:	ret    
  411f94:	cwde   
  411f95:	mov    al,0xf0
  411f97:	shr    ebx,0x52
  411f9a:	out    0x40,eax
  411f9c:	pusha  
  411f9d:	add    al,0x51
  411f9f:	outs   dx,DWORD PTR ds:[esi]
  411fa0:	jmp    0x7283:0xcbdf2d8e
  411fa7:	sti    
  411fa8:	fcomp  QWORD PTR es:[ebx-0xc]
  411fac:	mov    ecx,0xcd75f801
  411fb1:	pop    ss
  411fb2:	mov    dh,0x36
  411fb4:	outs   dx,BYTE PTR ds:[esi]
  411fb5:	test   BYTE PTR [esi-0x75],ch
  411fb8:	(bad)  
  411fb9:	popa   
  411fba:	push   cs
  411fbb:	rcl    DWORD PTR [eax+ebp*8+0x475de34d],0xe7
  411fc3:	push   0xffffffbc
  411fc5:	pop    edx
  411fc6:	push   cs
  411fc7:	aaa    
  411fc8:	(bad)  
  411fc9:	mov    WORD PTR [ebx+0x4d],ss
  411fcc:	sub    al,al
  411fce:	mov    edi,0x90bc2c92
  411fd3:	repz push edx
  411fd5:	lods   al,BYTE PTR ds:[esi]
  411fd6:	mov    eax,ds:0xf9b115bc
  411fdb:	js     0x41204f
  411fdd:	aaa    
  411fde:	push   cs
  411fdf:	in     al,0x61
  411fe1:	push   0x8546eda4
  411fe6:	xchg   ebp,eax
  411fe7:	mov    edi,0x785e917
  411fec:	clc    
  411fed:	jno    0x412058
  411fef:	popw   ss
  411ff1:	ins    BYTE PTR es:[edi],dx
  411ff2:	or     dh,BYTE PTR [edx-0x29f85d7e]
  411ff8:	adc    esp,DWORD PTR [ebp+edx*4-0x31]
  411ffc:	or     bl,BYTE PTR [edi-0x6f67a14f]
  412002:	push   ecx
  412003:	pop    edx
  412004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412005:	xchg   ecx,eax
  412006:	int    0x18
  412008:	dec    ebx
  412009:	jbe    0x412067
  41200b:	jb     0x411f8f
  41200d:	outs   dx,BYTE PTR ds:[esi]
  41200e:	mov    esi,0xbb26c5fe
  412013:	inc    esi
  412014:	retf   
  412015:	xchg   ebx,eax
  412016:	shr    DWORD PTR [ecx],cl
  412018:	ins    DWORD PTR es:[edi],dx
  412019:	out    0xa6,al
  41201b:	inc    DWORD PTR [edi]
  41201d:	jle    0x412011
  41201f:	fisttp QWORD PTR [ecx+0x2d]
  412022:	xchg   edi,eax
  412023:	push   esi
  412024:	xchg   esp,eax
  412025:	xchg   edi,eax
  412026:	es out 0x66,eax
  412029:	or     ah,0x17
  41202c:	mov    ah,0x8
  41202e:	ret    0xebec
  412031:	inc    ebp
  412032:	cdq    
  412033:	xchg   esp,eax
  412034:	add    BYTE PTR [eax],bh
  412036:	mov    dh,0xd1
  412038:	mov    ch,0x72
  41203a:	inc    esp
  41203b:	jp     0x412024
  41203d:	inc    eax
  41203e:	mov    al,ds:0x879cf04f
  412043:	loop   0x41204b
  412045:	pop    ecx
  412046:	xchg   esi,eax
  412047:	pop    ecx
  412048:	out    0x2a,al
  41204a:	or     al,0x7a
  41204c:	and    DWORD PTR [ebx],edx
  41204e:	mov    ds:0xa85c802a,eax
  412053:	push   0xfde592ff
  412058:	sbb    ebx,edi
  41205a:	inc    edx
  41205b:	call   0xbe0d0b3f
  412060:	mov    dh,0x22
  412062:	popf   
  412063:	sbb    eax,0xf13afba8
  412068:	cld    
  412069:	pushf  
  41206a:	jge    0x41200d
  41206c:	cmp    eax,0x30713172
  412071:	dec    esi
  412072:	cmp    BYTE PTR [esi+ebx*4-0x6a],ch
  412076:	lahf   
  412077:	mov    esi,0x2e361ed4
  41207c:	mov    ebp,0xf6cc3dd8
  412081:	inc    esp
  412082:	add    ebp,DWORD PTR [ebx]
  412084:	mov    esi,0xb92dafb7
  412089:	sub    ch,ah
  41208b:	pop    ss
  41208c:	and    al,0x4f
  41208e:	icebp  
  41208f:	es push esi
  412091:	test   eax,0x7d1017f1
  412096:	mov    ch,0x4b
  412098:	add    eax,0x7259d833
  41209d:	push   ebp
  41209e:	mov    ebp,0x8dc869d3
  4120a3:	popf   
  4120a4:	mov    bh,0xd4
  4120a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a7:	in     al,0x59
  4120a9:	cld    
  4120aa:	mov    eax,ds:0xf59a3848
  4120af:	xor    BYTE PTR [ebx-0x62f61f00],dl
  4120b5:	or     edi,esi
  4120b7:	lods   al,BYTE PTR ds:[esi]
  4120b8:	test   al,0x72
  4120ba:	icebp  
  4120bb:	aam    0x38
  4120bd:	(bad)  
  4120bf:	dec    ebx
  4120c0:	sub    BYTE PTR [edx+0x7],dh
  4120c3:	fild   QWORD PTR [esi-0x49]
  4120c6:	stos   BYTE PTR es:[edi],al
  4120c7:	imul   edx,DWORD PTR [eax],0x454f3bf1
  4120cd:	pop    esi
  4120ce:	mov    esp,0x417ef8f
  4120d3:	dec    esi
  4120d4:	js     0x41207a
  4120d6:	icebp  
  4120d7:	adc    bh,BYTE PTR ds:0x84e12c40
  4120dd:	push   ds
  4120de:	cli    
  4120df:	push   cs
  4120e0:	out    dx,al
  4120e1:	push   ebx
  4120e2:	and    dh,bh
  4120e4:	sub    bh,BYTE PTR [edi+0x56]
  4120e7:	mov    esi,0x48dbddf8
  4120ec:	mov    ah,0x1
  4120ee:	shr    DWORD PTR [esi+0x5],cl
  4120f1:	mov    edi,0xfcbd15e1
  4120f6:	(bad)  
  4120f7:	sub    bl,BYTE PTR [ebx-0x3006f636]
  4120fd:	mov    eax,0x49c7d0ea
  412102:	leave  
  412103:	or     dl,BYTE PTR [ecx-0x37]
  412106:	xchg   ecx,eax
  412107:	outs   dx,DWORD PTR ds:[esi]
  412108:	hlt    
  412109:	jns    0x412178
  41210b:	pop    ss
  41210c:	shl    DWORD PTR [ebp+edi*8+0x11],1
  412110:	fdivr  DWORD PTR [esi]
  412112:	mov    eax,0xc5ba3ffc
  412117:	aas    
  412118:	adc    bl,dh
  41211a:	sbb    BYTE PTR [edi],ah
  41211c:	xor    bl,BYTE PTR [eax+0x3b]
  41211f:	pop    ecx
  412120:	push   edi
  412121:	jno    0x412133
  412123:	jnp    0x4120ff
  412125:	inc    edx
  412126:	shl    cl,cl
  412128:	mul    esp
  41212a:	(bad)  
  41212c:	jne    0x4120e1
  41212e:	pop    ebp
  41212f:	in     al,0x63
  412131:	arpl   bp,ax
  412133:	add    al,0x5e
  412135:	sub    DWORD PTR [eax*4+0x7e652a16],eax
  41213c:	mov    ecx,0xafb3559c
  412141:	cmc    
  412142:	pushf  
  412143:	cwde   
  412144:	jmp    0x4121a5
  412146:	and    DWORD PTR [eax],ecx
  412148:	daa    
  412149:	inc    eax
  41214a:	mov    dl,0xdf
  41214c:	add    ch,0xda
  41214f:	pop    ecx
  412150:	dec    esp
  412151:	push   ds
  412152:	xchg   ebp,eax
  412153:	jmp    0x45dbee5e
  412158:	lock in al,dx
  41215a:	outs   dx,DWORD PTR ds:[esi]
  41215b:	adc    ebx,0xc0e1de
  412161:	and    BYTE PTR gs:[eax],0xe3
  412165:	loope  0x41211a
  412167:	xchg   ebx,eax
  412168:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41216a:	sbb    BYTE PTR [esi+eiz*8],ah
  41216d:	clc    
  41216e:	xor    DWORD PTR gs:[edi],0x40
  412172:	dec    esp
  412173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412174:	aas    
  412175:	mov    esi,0xcd630809
  41217a:	inc    edx
  41217b:	jmp    0x412139
  41217d:	push   ss
  41217e:	rcl    BYTE PTR [ebx+0x610648cb],cl
  412184:	inc    eax
  412185:	push   esp
  412186:	jns    0x4121ef
  412188:	and    DWORD PTR [edi+ecx*2],edi
  41218b:	mov    esp,DWORD PTR [edx-0x45c339e3]
  412191:	ror    DWORD PTR [eax],1
  412193:	scas   eax,DWORD PTR es:[edi]
  412194:	popa   
  412195:	pop    ds
  412196:	push   ss
  412197:	cmp    DWORD PTR [edi-0x203c5001],esi
  41219d:	sti    
  41219e:	sub    esi,DWORD PTR [ebx+0x3ee5d68c]
  4121a4:	or     al,BYTE PTR [eax-0xb6a80c0]
  4121aa:	inc    esp
  4121ab:	in     eax,0x14
  4121ad:	push   es
  4121ae:	add    esp,DWORD PTR [esi]
  4121b0:	(bad)  
  4121b1:	int3   
  4121b2:	dec    eax
  4121b3:	dec    edx
  4121b4:	call   0x5f5d2c63
  4121b9:	int3   
  4121ba:	mov    eax,ds:0xae940cc6
  4121bf:	inc    ebp
  4121c0:	in     eax,0x3f
  4121c2:	mov    ecx,0x3e7395dd
  4121c7:	jle    0x4121d2
  4121c9:	jne    0x412221
  4121cb:	mov    ebp,0x55962e03
  4121d0:	retf   0xe1a6
  4121d3:	dec    ecx
  4121d4:	pop    esp
  4121d5:	jge    0x41215d
  4121d7:	ins    BYTE PTR es:[edi],dx
  4121d8:	(bad)  
  4121d9:	out    dx,eax
  4121da:	add    al,0x18
  4121dc:	and    al,0xcb
  4121de:	dec    esp
  4121df:	inc    esi
  4121e0:	leave  
  4121e1:	cdq    
  4121e2:	aas    
  4121e3:	sbb    al,BYTE PTR [ebp+0x49]
  4121e6:	pop    ds
  4121e7:	pushf  
  4121e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e9:	pop    esp
  4121ea:	sbb    cl,BYTE PTR ds:0x1509d09d
  4121f0:	fcmovne st,st(0)
  4121f2:	es rcr dl,cl
  4121f5:	pop    esi
  4121f6:	sub    eax,0x39a235ec
  4121fb:	ins    DWORD PTR es:[edi],dx
  4121fc:	retf   0x339a
  4121ff:	lock dec edx
  412201:	leave  
  412202:	add    dh,cl
  412204:	or     eax,0x56b49328
  412209:	out    dx,eax
  41220a:	mov    eax,0xe3378338
  41220f:	cs xchg ebp,eax
  412211:	xor    ah,BYTE PTR [esi+ebx*4-0x7a]
  412215:	jl     0x412203
  412217:	adc    al,ch
  412219:	jl     0x412238
  41221b:	repnz cli 
  41221d:	inc    esi
  41221e:	js     0x4121a9
  412220:	and    eax,0xa2aa024f
  412225:	push   0xffffffd4
  412227:	lds    edx,FWORD PTR [edx-0x39]
  41222a:	aaa    
  41222b:	bound  edi,QWORD PTR [ebp-0x51014a96]
  412231:	pop    es
  412232:	inc    ebx
  412233:	mov    al,0x89
  412235:	mov    ah,0x73
  412237:	gs ret 
  412239:	xor    al,0x49
  41223b:	xor    eax,DWORD PTR [esi]
  41223d:	sbb    eax,0x920df475
  412242:	mov    ecx,0x1fde8dd8
  412247:	jns    0x41225d
  412249:	lahf   
  41224a:	test   BYTE PTR [ebp+0x18b57ac2],bh
  412250:	outs   dx,BYTE PTR ds:[esi]
  412251:	cwde   
  412252:	fadd   QWORD PTR [esp-0x55]
  412256:	mov    DWORD PTR [esp+eiz*2-0x3c0eb225],esi
  41225d:	mov    ch,0x1d
  41225f:	pusha  
  412260:	pop    eax
  412261:	dec    eax
  412262:	inc    eax
  412263:	mov    ecx,0x3b39c3
  412268:	loopne 0x4122bf
  41226a:	jns    0x41222f
  41226c:	sahf   
  41226d:	int3   
  41226e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41226f:	xchg   esi,eax
  412270:	jmp    0x4121f5
  412272:	push   edi
  412273:	jns    0x4122da
  412275:	in     al,0xcd
  412277:	sub    BYTE PTR [eax],bh
  412279:	js     0x4121fd
  41227b:	mov    ah,BYTE PTR [esi]
  41227d:	imul   eax,DWORD PTR [ebx-0x4811c6a9],0x12064fe8
  412287:	mov    eax,0x9f75a95f
  41228c:	not    BYTE PTR [eax]
  41228e:	aad    0x7b
  412290:	xor    eax,DWORD PTR [esi]
  412292:	lds    ebp,FWORD PTR ds:0xaa7e961c
  412298:	pop    ecx
  412299:	sbb    ebx,DWORD PTR [edi-0x53]
  41229c:	cmp    dl,BYTE PTR [esi+eiz*1]
  41229f:	cmovge ecx,DWORD PTR [ebp+0x4f255009]
  4122a6:	jns    0x412300
  4122a8:	ror    DWORD PTR [ebp-0x2789883c],cl
  4122ae:	xor    cl,BYTE PTR [esi+0x3b]
  4122b1:	xchg   ebp,eax
  4122b2:	and    al,0xc0
  4122b4:	scas   al,BYTE PTR es:[edi]
  4122b5:	lods   al,BYTE PTR ds:[esi]
  4122b6:	mov    al,ds:0x59b54ffc
  4122bb:	in     eax,dx
  4122bc:	push   esp
  4122bd:	leave  
  4122be:	adc    ebp,DWORD PTR [ebx-0x6a3c6fce]
  4122c4:	cld    
  4122c5:	mov    ecx,0x71c55d79
  4122ca:	pop    esi
  4122cb:	fadd   QWORD PTR [ecx]
  4122cd:	push   esp
  4122ce:	cmp    BYTE PTR [eax-0x75a51296],0x45
  4122d5:	ret    0xa68e
  4122d8:	xor    BYTE PTR [edi],cl
  4122da:	mov    esp,fs
  4122dc:	ja     0x412348
  4122de:	pop    ecx
  4122df:	sbb    al,0xb9
  4122e1:	jmp    0xf3fda34
  4122e6:	mov    edx,0x1dd6c56e
  4122eb:	ds loop 0x4122c7
  4122ee:	mov    ds:0x5756f078,al
  4122f3:	rol    DWORD PTR [eax+ebp*4],cl
  4122f6:	inc    ebp
  4122f7:	mov    edi,0x216b2f65
  4122fc:	loop   0x412290
  4122fe:	push   ebx
  4122ff:	daa    
  412300:	cli    
  412301:	out    dx,al
  412302:	mov    edx,ecx
  412304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412305:	bound  esp,QWORD PTR [esi+0x1a]
  412308:	(bad)  
  412309:	es dec ebx
  41230b:	mov    esi,0x9ed0a57e
  412310:	iret   
  412311:	stos   BYTE PTR es:[edi],al
  412312:	adc    eax,0x7d004ce3
  412317:	mov    edx,0x1fa0272
  41231c:	mov    ds:0xc879f2d6,al
  412321:	xchg   ebx,eax
  412322:	push   0x891adb82
  412327:	out    0x34,al
  412329:	xchg   BYTE PTR [edx+edi*4],dh
  41232c:	ror    esi,1
  41232e:	mov    ah,0x74
  412330:	(bad)
  412333:	lock dec esi
  412335:	cs leave 
  412337:	cmp    DWORD PTR [edx-0x4ead26f8],esp
  41233d:	pop    ebp
  41233e:	jmp    0xad06283a
  412343:	clc    
  412344:	pop    edi
  412345:	dec    edi
  412346:	sub    DWORD PTR [esi],esp
  412348:	test   DWORD PTR [edx+0x70],0xf3c1b09d
  41234f:	jl     0x412363
  412351:	(bad)  
  412352:	fidivr WORD PTR [ebx-0x6da9dadf]
  412358:	cmp    BYTE PTR [edi-0x59],dl
  41235b:	push   cs
  41235c:	daa    
  41235d:	jmp    0x412348
  41235f:	shl    bl,0x2c
  412362:	aaa    
  412363:	or     edi,DWORD PTR [edx-0xe]
  412366:	lods   eax,DWORD PTR ds:[esi]
  412367:	and    BYTE PTR [ebx+0x2b44c7f1],0x73
  41236e:	rol    DWORD PTR [edi+esi*8],0x10
  412372:	push   ds
  412373:	pop    esp
  412374:	test   ch,0xfe
  412377:	and    ah,dh
  412379:	push   eax
  41237a:	jg     0x412391
  41237c:	push   ebx
  41237d:	cmp    al,0xb6
  41237f:	cs xor al,0xb0
  412382:	mov    dl,0x72
  412384:	fsubr  DWORD PTR ds:0x8549ac01
  41238a:	mov    ebp,DWORD PTR [ebp+0x5dfb0d79]
  412390:	sub    DWORD PTR [ebp-0x46dbd180],0xb8c45d55
  41239a:	aad    0x81
  41239c:	dec    edi
  41239d:	les    esi,FWORD PTR [esi+0x58]
  4123a0:	dec    eax
  4123a1:	jo     0x41236e
  4123a3:	inc    edi
  4123a4:	out    dx,al
  4123a5:	jb     0x412365
  4123a7:	imul   BYTE PTR [esi-0x64]
  4123aa:	mov    esp,0xa8e48224
  4123af:	loope  0x412364
  4123b1:	sbb    ch,BYTE PTR [eiz*8+0x3feff0f4]
  4123b8:	jge    0x41237d
  4123ba:	jns    0x41242c
  4123bc:	mov    dl,0x46
  4123be:	push   edx
  4123bf:	or     bl,BYTE PTR fs:[ecx]
  4123c2:	mov    ebx,0x279a0c8c
  4123c7:	arpl   WORD PTR [eax+0x1a922461],di
  4123cd:	xchg   esi,eax
  4123ce:	stos   DWORD PTR es:[edi],eax
  4123cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d0:	dec    ecx
  4123d1:	jb     0x4123c3
  4123d3:	pop    ds
  4123d4:	push   0xffffffc2
  4123d6:	pop    es
  4123d7:	(bad)  
  4123d9:	sub    BYTE PTR [esi],0x77
  4123dc:	push   0xffffffb9
  4123de:	mov    WORD PTR [ebx+0x38],cs
  4123e1:	mov    esp,0x9522a194
  4123e6:	jb     0x412383
  4123e8:	jecxz  0x4123a6
  4123ea:	gs mov al,0x22
  4123ed:	(bad)  [ebp+0x8]
  4123f0:	or     DWORD PTR [ecx-0x61eaa1c4],ebp
  4123f6:	sbb    al,0x97
  4123f8:	jns    0x4123d5
  4123fa:	call   FWORD PTR [ebp+0x771afec0]
  412400:	ja     0x412462
  412402:	and    eax,0x92b515b6
  412407:	jne    0x412452
  412409:	jb     0x412429
  41240b:	add    eax,0xd45d5eda
  412410:	sub    DWORD PTR [edx-0x41],edi
  412413:	push   eax
  412414:	je     0x412482
  412416:	(bad)  
  412417:	push   edi
  412418:	rcr    BYTE PTR [esi+0x61c0f7d8],cl
  41241e:	pop    esi
  41241f:	and    ebx,esp
  412421:	mov    ah,0xed
  412423:	mov    dl,0x88
  412425:	mov    dh,0x70
  412427:	mov    al,ds:0x26819831
  41242c:	arpl   WORD PTR [edx+0x42],dx
  41242f:	push   eax
  412430:	repnz dec edi
  412432:	in     al,0xbd
  412434:	mov    WORD PTR [ebx-0x1d],?
  412437:	pop    edi
  412438:	imul   edx,DWORD PTR [ecx-0x2f],0x19
  41243c:	mov    eax,ds:0x801187bf
  412441:	test   DWORD PTR [bp+di],ebp
  412444:	fcmovu st,st(5)
  412446:	rcl    BYTE PTR [ebx*2+0x582b5b7c],1
  41244d:	sbb    al,0xfc
  41244f:	xor    eax,ecx
  412451:	fmul   QWORD PTR [eax+0x22]
  412454:	icebp  
  412455:	js     0x41243e
  412457:	out    dx,al
  412458:	add    eax,0x47e0ca60
  41245d:	nop
  41245e:	repnz push esp
  412460:	mov    edx,DWORD PTR [ebx+edx*4+0x3f45a132]
  412467:	(bad)  
  412468:	jnp    0x412429
  41246a:	jbe    0x412487
  41246c:	push   ebx
  41246d:	push   ebp
  41246e:	not    dl
  412470:	imul   ecx,DWORD PTR [ecx],0xffffffd8
  412473:	fdivr  QWORD PTR [edi+0x11]
  412476:	adc    eax,0xca3daca7
  41247b:	sbb    eax,0xfd01813f
  412480:	lods   eax,DWORD PTR ds:[esi]
  412481:	scas   al,BYTE PTR es:[edi]
  412482:	in     al,dx
  412483:	or     esp,esp
  412485:	ret    0x13ad
  412488:	imul   eax,esp,0xffffffea
  41248b:	lahf   
  41248c:	ja     0x412500
  41248e:	add    eax,DWORD PTR [ebx]
  412490:	pop    esp
  412491:	fcom   st(0)
  412493:	mov    ah,0xd1
  412495:	sbb    esp,esp
  412497:	inc    esi
  412498:	jl     0x41246a
  41249a:	das    
  41249b:	outs   dx,DWORD PTR ds:[esi]
  41249c:	mov    edi,0x65ea467d
  4124a1:	push   cs
  4124a2:	sti    
  4124a3:	es sbb edx,0xe3ffbaa3
  4124aa:	les    ebx,FWORD PTR [edi]
  4124ac:	je     0x412467
  4124ae:	test   ecx,ecx
  4124b0:	cmp    al,0xc4
  4124b2:	jo     0x41248b
  4124b4:	ds mov dl,0x5c
  4124b7:	stc    
  4124b8:	loopne 0x41250d
  4124ba:	shl    BYTE PTR [edi+edi*1+0x28],cl
  4124be:	ins    DWORD PTR es:[edi],dx
  4124bf:	or     BYTE PTR [edi],dl
  4124c1:	test   BYTE PTR [ebp+0x5f],cl
  4124c4:	and    DWORD PTR [ebx-0x867737a],edx
  4124ca:	jo     0x4124f2
  4124cc:	mov    ds:0x6414701a,al
  4124d1:	fcom   st(0)
  4124d3:	xor    DWORD PTR ds:0x8aff85f6,ecx
  4124d9:	dec    ecx
  4124da:	js     0x4124ea
  4124dc:	xchg   ebp,eax
  4124dd:	xchg   ebp,eax
  4124de:	aaa    
  4124df:	mov    esi,DWORD PTR gs:[ebx]
  4124e2:	jo     0x412471
  4124e4:	mov    BYTE PTR [edx+0x3ecbd828],cl
  4124ea:	ret    0x431d
  4124ed:	call   0x167:0x596799e7
  4124f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f5:	popa   
  4124f6:	outs   dx,BYTE PTR fs:[esi]
  4124f8:	imul   eax,eax,0xffffffba
  4124fb:	ror    eax,1
  4124fd:	clc    
  4124fe:	jno    0x412496
  412500:	mov    ds:0x8fe77a3d,eax
  412505:	inc    ebx
  412506:	pop    esp
  412507:	mov    BYTE PTR [ecx],ch
  412509:	and    ebx,ebp
  41250b:	out    0xff,eax
  41250d:	jb     0x4124e8
  41250f:	rcl    BYTE PTR [ebp+0x7c7410ad],cl
  412515:	and    BYTE PTR [edx-0x11f150c9],al
  41251b:	jno    0x4124d1
  41251d:	adc    ebp,DWORD PTR [ecx+0x6c914348]
  412523:	mov    cl,0x7f
  412525:	pusha  
  412526:	jns    0x412554
  412528:	and    DWORD PTR [ebp+0x6d9a7f24],ecx
  41252e:	lea    edi,[eax*1+0x52e0935b]
  412535:	ins    DWORD PTR es:[edi],dx
  412536:	mov    eax,ds:0x739dc36c
  41253b:	sar    DWORD PTR [ebx+0x1742e96b],cl
  412541:	mov    ebx,0x4e0b6f3a
  412546:	jecxz  0x41251d
  412548:	int3   
  412549:	hlt    
  41254a:	hlt    
  41254b:	jmp    0x52fcd61b
  412550:	inc    ebp
  412551:	dec    ebx
  412552:	push   ds
  412553:	jbe    0x412559
  412555:	loop   0x4124e1
  412557:	out    dx,eax
  412558:	push   eax
  412559:	mov    esi,0xb726ea96
  41255e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41255f:	add    dh,BYTE PTR fs:[edx-0x3f]
  412563:	call   0x18ff:0xed0e6fe8
  41256a:	adc    edi,ecx
  41256c:	dec    esi
  41256d:	mov    edx,0x4873b175
  412572:	call   0x759a31b2
  412577:	sub    esi,DWORD PTR [edi]
  412579:	jne    0x41255d
  41257b:	xchg   eax,ebp
  41257d:	repz scas al,BYTE PTR es:[edi]
  41257f:	jne    0x412538
  412581:	or     al,0x8a
  412583:	aam    0x9b
  412585:	jb     0x41258a
  412587:	xor    al,0xf7
  412589:	outs   dx,BYTE PTR ss:[esi]
  41258b:	scas   eax,DWORD PTR es:[edi]
  41258c:	nop
  41258d:	pop    esi
  41258e:	pop    ds
  41258f:	(bad)  
  412590:	xchg   ebp,eax
  412591:	or     DWORD PTR [edi],0x59
  412594:	push   es
  412595:	cmp    al,0xe2
  412597:	jno    0x412560
  412599:	cmp    al,bh
  41259b:	in     eax,0x49
  41259d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41259e:	lock iret 
  4125a0:	mov    ds:0x8f71dc06,eax
  4125a5:	pop    esp
  4125a6:	fs inc esi
  4125a8:	jl     0x4125be
  4125aa:	stos   DWORD PTR es:[edi],eax
  4125ab:	lahf   
  4125ac:	ret    
  4125ad:	xor    eax,0x18b64d24
  4125b2:	sbb    ebp,DWORD PTR [ebp-0x5c7d608c]
  4125b8:	dec    eax
  4125b9:	stos   DWORD PTR es:[edi],eax
  4125ba:	cmp    al,0x8d
  4125bc:	call   0x7769:0xe42ac6ad
  4125c3:	adc    eax,edx
  4125c5:	(bad)
  4125c8:	out    0xe4,eax
  4125ca:	inc    ecx
  4125cb:	loopne 0x4125aa
  4125cd:	adc    edx,DWORD PTR [edi]
  4125cf:	pop    ebp
  4125d0:	lods   eax,DWORD PTR ds:[esi]
  4125d1:	lock shl ah,0xad
  4125d5:	sbb    bl,BYTE PTR gs:[ebx+0x58]
  4125d9:	mov    edi,0x6ee27e4
  4125de:	and    al,0xab
  4125e0:	jecxz  0x4125c3
  4125e2:	dec    edi
  4125e3:	ds dec edx
  4125e5:	mov    DWORD PTR [ecx],edx
  4125e7:	jne    0x41259c
  4125e9:	add    esi,DWORD PTR [eax-0x6e2c9b90]
  4125ef:	sar    BYTE PTR [ebp+0x2e4327ff],0xec
  4125f6:	push   ss
  4125f7:	mov    ds,eax
  4125f9:	adc    al,0xa7
  4125fb:	jb     0x412602
  4125fd:	sub    DWORD PTR [edx*8+0x74f6202b],eax
  412604:	enter  0xa5e6,0xfb
  412608:	mov    dl,0x63
  41260a:	mov    cl,BYTE PTR fs:[ebp-0x64]
  41260e:	or     BYTE PTR ss:[eax],ah
  412611:	push   es
  412612:	xor    DWORD PTR [esi],0x7d
  412615:	rcr    BYTE PTR [ebx+0x300c9792],1
  41261b:	lds    ebp,FWORD PTR [ebx]
  41261d:	loope  0x412675
  41261f:	ficomp DWORD PTR [esi]
  412621:	mov    esi,0x552f1946
  412626:	(bad)  
  412627:	in     eax,dx
  412628:	test   eax,0x4c157342
  41262d:	cmp    al,0xa5
  41262f:	mov    ebx,0x4682345b
  412634:	dec    ecx
  412635:	into   
  412636:	call   FWORD PTR [eax+ebp*2+0x77]
  41263a:	sar    BYTE PTR [esi-0x2b],cl
  41263d:	ret    
  41263e:	mov    al,0x73
  412640:	jnp    0x412655
  412642:	push   ss
  412643:	and    edi,DWORD PTR [edi]
  412645:	xlat   BYTE PTR ds:[ebx]
  412646:	(bad)  
  412647:	loopne 0x4126c5
  412649:	in     eax,0x84
  41264b:	repz pop ds
  41264d:	xor    dl,BYTE PTR [ebp+ebp*4-0x5a5127ee]
  412654:	and    eax,0xf6c5438f
  412659:	jbe    0x4125e5
  41265b:	sub    BYTE PTR [ebp+ebx*2+0x4edded53],0xaa
  412663:	cmp    al,ch
  412665:	retf   0xd070
  412668:	push   0xffffffef
  41266a:	push   esp
  41266b:	dec    eax
  41266c:	mov    al,ds:0x3bd63fcd
  412671:	mov    ecx,0xa87f88a2
  412676:	inc    esp
  412677:	cwde   
  412678:	cli    
  412679:	jnp    0x4126c8
  41267b:	xchg   esp,eax
  41267c:	popa   
  41267d:	mov    al,0xe8
  41267f:	iret   
  412680:	ror    edi,1
  412682:	test   BYTE PTR [ecx-0x37a49f93],al
  412688:	popf   
  412689:	stos   DWORD PTR es:[edi],eax
  41268a:	aam    0x4b
  41268c:	popf   
  41268d:	popf   
  41268e:	xchg   bl,bh
  412690:	cmp    al,0xd5
  412692:	test   BYTE PTR [edi],ah
  412694:	add    edx,DWORD PTR [ecx-0x81d54cf]
  41269a:	shl    DWORD PTR [edx+esi*8],1
  41269d:	sbb    BYTE PTR [ecx-0x75],cl
  4126a0:	rcl    DWORD PTR [ecx+0x69183354],1
  4126a6:	int3   
  4126a7:	iret   
  4126a8:	sub    eax,0x2c85c6e8
  4126ad:	and    eax,0x7e143af9
  4126b3:	dec    eax
  4126b4:	jmp    0xae15:0xb9cbd89c
  4126bb:	xor    eax,0x1a6bbe1f
  4126c0:	dec    esp
  4126c1:	neg    BYTE PTR [edx+0x452ec487]
  4126c7:	pop    esp
  4126c8:	inc    ecx
  4126c9:	mov    edi,ss
  4126cb:	xchg   edx,eax
  4126cc:	out    0xae,eax
  4126ce:	gs jnp 0x412687
  4126d1:	inc    esp
  4126d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d3:	jmp    0x4126c4
  4126d5:	or     DWORD PTR [esi+edx*1+0x1125dd52],esp
  4126dc:	pextrw eax,(bad),0xc5
  4126de:	add    ebx,ecx
  4126e0:	jbe    0x4126a5
  4126e2:	ror    DWORD PTR ds:0x9ff667ac,1
  4126e8:	sub    ebp,DWORD PTR [eax+0x5578b506]
  4126ee:	and    esp,DWORD PTR [edi+esi*8+0x3f]
  4126f2:	(bad)  
  4126f3:	mov    edx,0x1c3fe05e
  4126f8:	push   edx
  4126f9:	clc    
  4126fa:	stos   BYTE PTR es:[edi],al
  4126fb:	inc    esi
  4126fc:	cld    
  4126fd:	add    ah,BYTE PTR ds:0x50412ba1
  412703:	mov    ah,BYTE PTR [eax+0x3b]
  412706:	sub    eax,ebx
  412708:	jae    0x41273c
  41270a:	ins    BYTE PTR es:[edi],dx
  41270b:	loopne 0x412723
  41270d:	xchg   BYTE PTR [edi-0x2f],bl
  412710:	adc    edi,edx
  412712:	mov    ebp,0x84f8e855
  412717:	or     DWORD PTR [edi+0x22],eax
  41271a:	in     eax,dx
  41271b:	daa    
  41271c:	test   DWORD PTR [edi+edx*2+0x3482c754],0xa17a51b2
  412727:	sbb    al,0xc2
  412729:	cmp    al,0xf3
  41272b:	fwait
  41272c:	xchg   ebx,eax
  41272d:	mov    ah,0x63
  41272f:	or     edi,esp
  412731:	add    al,0xca
  412733:	cwde   
  412734:	mov    ebp,0x6368c1d4
  412739:	push   esp
  41273a:	pop    edi
  41273b:	jne    0x41275c
  41273d:	jle    0x4126e7
  41273f:	sar    DWORD PTR [edx+0x68b0e4b8],1
  412745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412746:	int    0xcc
  412748:	test   DWORD PTR [ebp-0x3f],eax
  41274b:	push   es
  41274c:	push   ecx
  41274d:	retf   0x64d2
  412750:	out    0x9d,al
  412752:	inc    edi
  412753:	shr    BYTE PTR [ebp+0x671c8069],0x74
  41275a:	in     eax,dx
  41275b:	out    dx,eax
  41275c:	sub    eax,0xb5e53a9b
  412761:	nop
  412762:	jae    0x412780
  412764:	pusha  
  412765:	fidiv  DWORD PTR [eax]
  412767:	mov    BYTE PTR [edi+edi*1+0x18],ch
  41276b:	and    al,0x98
  41276d:	push   eax
  41276e:	aas    
  41276f:	or     eax,0x61ad2fdc
  412774:	xchg   edx,eax
  412775:	and    eax,0x21b8efbc
  41277a:	push   ebp
  41277b:	xor    DWORD PTR [ecx],ebp
  41277d:	in     al,0xd4
  41277f:	clc    
  412780:	pop    es
  412781:	push   eax
  412782:	out    0xf1,eax
  412784:	cs sahf 
  412786:	arpl   WORD PTR [ecx-0x15b56d44],si
  41278c:	das    
  41278d:	pop    ds
  41278e:	scas   eax,DWORD PTR es:[edi]
  41278f:	retf   
  412790:	leave  
  412791:	lock mov DWORD PTR [edx],edi
  412794:	(bad)  
  412795:	imul   edi,DWORD PTR [ebp-0x7afe2212],0x3f
  41279c:	cwde   
  41279d:	dec    edi
  41279e:	loop   0x412786
  4127a0:	stos   BYTE PTR es:[edi],al
  4127a1:	pop    es
  4127a2:	ror    DWORD PTR [edx+0x21],1
  4127a5:	or     eax,0x7bf27857
  4127aa:	rol    BYTE PTR ds:0x6ba6c40,1
  4127b0:	out    dx,eax
  4127b1:	or     ah,BYTE PTR [edi+0x28715793]
  4127b7:	test   al,0xd6
  4127b9:	push   ebp
  4127ba:	into   
  4127bb:	add    BYTE PTR [eax-0x5c1aa79b],dh
  4127c1:	mov    eax,ds:0x470432d5
  4127c6:	pop    ebp
  4127c7:	adc    DWORD PTR [edx+0x7c638040],0x51
  4127ce:	(bad)  
  4127cf:	jg     0x41282d
  4127d1:	fsubr  DWORD PTR [edx+0x4dd796d8]
  4127d7:	into   
  4127d8:	pop    ss
  4127d9:	sahf   
  4127da:	mov    ds:0xeebde801,al
  4127df:	jns    0x41276f
  4127e1:	fwait
  4127e2:	or     al,0xee
  4127e4:	adc    bl,BYTE PTR [esi+0x4d476d42]
  4127ea:	imul   ebx,DWORD PTR [edx+0x59],0xffffffe2
  4127ee:	in     al,dx
  4127ef:	add    DWORD PTR [edx+0x4ed3c535],edx
  4127f5:	push   eax
  4127f7:	xchg   edx,eax
  4127f8:	cli    
  4127f9:	add    al,0xaf
  4127fb:	mov    cl,0x96
  4127fd:	adc    dl,dl
  4127ff:	scas   eax,DWORD PTR es:[edi]
  412800:	mov    esi,0x46cea820
  412805:	enter  0xc052,0xc6
  412809:	mov    eax,0x1244f47d
  41280e:	mov    DWORD PTR [ecx],esi
  412810:	mov    ah,0xdd
  412812:	and    eax,0x25999944
  412817:	dec    eax
  412818:	in     eax,dx
  412819:	je     0x41279c
  41281b:	fldenv [esi-0xf]
  41281e:	push   esi
  41281f:	mov    eax,gs:0x967dc55
  412825:	ins    DWORD PTR es:[edi],dx
  412826:	(bad)  
  412827:	iret   
  412828:	aas    
  412829:	mov    eax,fs
  41282b:	fstp   TBYTE PTR [edi-0x7e]
  41282e:	xchg   ecx,eax
  41282f:	jnp    0x412833
  412831:	jns    0x41282a
  412833:	inc    edx
  412834:	paddusw mm2,mm0
  412837:	or     eax,0xb67311e
  41283c:	imul   ebx,DWORD PTR [eax-0x76a0217b],0xa6dc82f9
  412846:	push   ds
  412847:	jb     0x41288b
  412849:	jl     0x41284a
  41284b:	shl    DWORD PTR [edi-0x5b],1
  41284e:	mov    cl,0xd1
  412850:	ret    0x35ef
  412853:	cmp    eax,0x60b70b1e
  412858:	scas   eax,DWORD PTR es:[edi]
  412859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41285a:	cmc    
  41285b:	loope  0x4127e7
  41285d:	imul   ebp,DWORD PTR [ebp-0x21],0xfc5b6a22
  412864:	xor    al,0x6f
  412866:	(bad)  
  412867:	fmulp  st(4),st
  412869:	dec    ebx
  41286a:	push   esp
  41286b:	mov    al,0x29
  41286d:	je     0x412833
  41286f:	jnp    0x41280b
  412871:	or     edx,edx
  412873:	push   edi
  412874:	adc    BYTE PTR [esi+0x6ebe6d78],dh
  41287a:	inc    edx
  41287b:	mov    ss,WORD PTR [ebp+0x2a2dcd95]
  412881:	fs cmp al,0x50
  412884:	jge    0x4128e1
  412886:	lds    esp,FWORD PTR [esi]
  412888:	jl     0x412891
  41288a:	sbb    eax,0xa23a8255
  41288f:	or     bh,ah
  412891:	inc    edx
  412892:	bound  ecx,QWORD PTR [esi+0x685ad840]
  412898:	push   0xffffffb2
  41289a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41289b:	lock xchg ecx,eax
  41289d:	inc    edi
  41289e:	dec    esp
  41289f:	add    BYTE PTR [edx+0x744163ad],dh
  4128a5:	enter  0x8a98,0xd5
  4128a9:	cmp    eax,0x224ca85f
  4128ae:	outs   dx,DWORD PTR ds:[si]
  4128b0:	add    BYTE PTR [ecx],ch
  4128b2:	mov    ebp,0x9b940c97
  4128b7:	mov    cl,0x37
  4128b9:	push   ss
  4128ba:	adc    BYTE PTR [ebx],bh
  4128bc:	ins    DWORD PTR es:[edi],dx
  4128bd:	and    ecx,DWORD PTR [ecx+edi*8-0x70052d68]
  4128c4:	cmp    bh,BYTE PTR [edi-0x4e5924cb]
  4128ca:	mov    ebp,0x8f03d8eb
  4128cf:	clc    
  4128d0:	leave  
  4128d1:	sahf   
  4128d2:	lods   eax,DWORD PTR ds:[esi]
  4128d3:	add    ecx,DWORD PTR [ecx+ecx*2-0x2]
  4128d7:	scas   eax,DWORD PTR es:[di]
  4128d9:	stos   DWORD PTR es:[edi],eax
  4128da:	jl     0x412958
  4128dc:	es ds call 0xb17ea577
  4128e3:	add    DWORD PTR [eax+0x6a408f03],ecx
  4128e9:	mov    WORD PTR [ebx],es
  4128eb:	sub    al,0xfb
  4128ed:	fld    QWORD PTR [edi]
  4128ef:	popa   
  4128f0:	stos   DWORD PTR es:[edi],eax
  4128f1:	mov    DWORD PTR [ebp-0x2a0042bd],ecx
  4128f7:	ret    
  4128f8:	in     eax,0xd3
  4128fa:	shl    BYTE PTR [ecx+0x4c],1
  4128fd:	stc    
  4128fe:	inc    ebp
  4128ff:	or     al,0xba
  412901:	mov    dl,al
  412903:	mov    al,ds:0x8b047a
  412908:	inc    ebp
  412909:	cdq    
  41290a:	mov    ch,0x5a
  41290c:	out    0x2e,al
  41290e:	pop    edi
  41290f:	imul   edx,esp,0xfffffffb
  412912:	mov    cl,0x95
  412914:	int3   
  412915:	fistp  QWORD PTR [ecx]
  412917:	jp     0x4128c3
  412919:	inc    edi
  41291a:	adc    al,0xb9
  41291c:	inc    edi
  41291d:	mov    ds:0x3c72336b,eax
  412922:	push   edi
  412923:	jmp    0x170:0x349a6f40
  41292a:	sahf   
  41292b:	pop    es
  41292c:	sahf   
  41292d:	daa    
  41292e:	dec    edi
  41292f:	sbb    al,0x63
  412931:	push   edx
  412932:	xchg   esp,eax
  412933:	test   DWORD PTR [edx],ebp
  412935:	aaa    
  412936:	jb     0x412950
  412938:	or     al,0x4b
  41293a:	mov    eax,ds
  41293c:	sub    BYTE PTR [edi-0x7d],cl
  41293f:	outs   dx,DWORD PTR ds:[esi]
  412940:	fcom   QWORD PTR [ebx+0x34]
  412943:	inc    ebx
  412944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412945:	mov    ch,0x27
  412947:	(bad)  
  412949:	lock mov edx,0x973e4dad
  41294f:	pop    esi
  412950:	xchg   DWORD PTR [edx],eax
  412952:	or     ebx,ecx
  412954:	xor    eax,0x41d36853
  412959:	loopne 0x412950
  41295b:	and    BYTE PTR [ebx],al
  41295d:	push   0x313279e9
  412962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412963:	je     0x412984
  412965:	out    0x5c,al
  412967:	pusha  
  412968:	sbb    DWORD PTR [edi],ebx
  41296a:	js     0x412980
  41296c:	shr    ecx,cl
  41296e:	push   esp
  41296f:	jp     0x4129df
  412971:	dec    esi
  412972:	call   0xe5be819e
  412977:	sub    edi,eax
  412979:	push   ss
  41297a:	add    DWORD PTR [esi],ebp
  41297c:	aam    0xe2
  41297e:	sub    BYTE PTR [edx],ah
  412980:	in     eax,dx
  412981:	nop
  412982:	or     ebp,DWORD PTR [ebx-0x6ab32a5e]
  412988:	aaa    
  412989:	test   BYTE PTR [ecx+ecx*2-0x5d],0x13
  41298e:	shl    ebp,0x6c
  412991:	add    BYTE PTR [ecx+0x7f],dh
  412994:	fwait
  412995:	or     BYTE PTR [ecx-0x438d4e6c],cl
  41299b:	push   eax
  41299c:	jmp    0x1905:0x2a081903
  4129a3:	xchg   edi,eax
  4129a4:	push   esp
  4129a5:	add    eax,0xfd4459f1
  4129aa:	das    
  4129ab:	push   eax
  4129ac:	aad    0x30
  4129ae:	int3   
  4129af:	xchg   ebp,eax
  4129b0:	inc    eax
  4129b1:	mov    edx,0xad22fe20
  4129b6:	sbb    cl,al
  4129b8:	out    dx,eax
  4129b9:	aas    
  4129ba:	cdq    
  4129bb:	inc    ebp
  4129bc:	call   0xd1f82561
  4129c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c2:	outs   dx,DWORD PTR ds:[esi]
  4129c3:	std    
  4129c4:	xchg   BYTE PTR [edi-0x33],al
  4129c7:	scas   al,BYTE PTR es:[edi]
  4129c8:	out    0xa9,al
  4129ca:	adc    bh,dl
  4129cc:	rcl    DWORD PTR [ebp+0x1eee3c82],cl
  4129d2:	push   esp
  4129d3:	pusha  
  4129d4:	mov    edx,0x55526677
  4129d9:	pop    esi
  4129da:	push   ebp
  4129db:	or     esp,0xffffffa2
  4129de:	inc    ebx
  4129df:	inc    edi
  4129e1:	jmp    0xbce834cf
  4129e6:	sbb    bh,dl
  4129e8:	lds    edi,FWORD PTR [esi]
  4129ea:	jne    0x4129fa
  4129ec:	rol    BYTE PTR [eax],cl
  4129ee:	jae    0x4129e0
  4129f0:	je     0x412a54
  4129f2:	xor    al,ah
  4129f4:	mov    ecx,DWORD PTR [edi+0x388b28d0]
  4129fa:	hlt    
  4129fb:	dec    esi
  4129fc:	dec    ebx
  4129fd:	sub    eax,0x7f15169a
  412a02:	jns    0x412a6b
  412a04:	mov    dh,0x69
  412a06:	shl    ch,cl
  412a08:	xor    DWORD PTR [ebp-0x2d0f8a7d],0x59298294
  412a12:	inc    ecx
  412a13:	mov    edx,ebx
  412a15:	ss push ebp
  412a17:	pop    esi
  412a18:	lods   eax,DWORD PTR ds:[esi]
  412a19:	sbb    eax,0x9f557456
  412a1e:	add    ebp,DWORD PTR [edx-0x69]
  412a21:	call   0x2589e576
  412a26:	lahf   
  412a27:	or     dl,BYTE PTR [edx+0x20]
  412a2a:	in     eax,dx
  412a2b:	sahf   
  412a2c:	call   0x79f8:0xf703c669
  412a33:	ret    
  412a34:	pop    edi
  412a35:	pop    esp
  412a36:	cmp    bh,BYTE PTR [ebp-0x53]
  412a39:	mov    edi,0x7d79125e
  412a3e:	sub    ah,BYTE PTR [edx]
  412a40:	jo     0x4129d4
  412a42:	and    al,0x58
  412a44:	fdiv   QWORD PTR [ebx]
  412a46:	js     0x412a17
  412a48:	adc    ebp,DWORD PTR [ebx+0x441775e8]
  412a4e:	jnp    0x716a5ca0
  412a54:	nop
  412a55:	xor    DWORD PTR [ecx+eiz*8-0x43b1b6c4],0x939cfdc4
  412a60:	fldcw  WORD PTR [ebx-0x47de6c2d]
  412a66:	pop    eax
  412a67:	clc    
  412a68:	adc    DWORD PTR [ebp-0x78786770],0x2c
  412a6f:	sar    DWORD PTR [esp+edi*2],cl
  412a72:	dec    ecx
  412a73:	not    bl
  412a75:	xor    eax,0xa8842353
  412a7a:	xor    ebx,DWORD PTR [ebx+ebx*8]
  412a7d:	in     al,dx
  412a7e:	dec    esp
  412a7f:	aaa    
  412a80:	aas    
  412a81:	cmp    esp,DWORD PTR [ebx+0x98437ac]
  412a87:	cs int 0xec
  412a8a:	dec    ebx
  412a8b:	mul    DWORD PTR [edi+ecx*8]
  412a8e:	into   
  412a8f:	sub    esp,edx
  412a91:	xor    ch,BYTE PTR [esi-0x38db544f]
  412a97:	ins    DWORD PTR es:[edi],dx
  412a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a99:	jge    0x412a6c
  412a9b:	mov    gs,WORD PTR [ebx]
  412a9d:	outs   dx,BYTE PTR ds:[esi]
  412a9e:	outs   dx,BYTE PTR ds:[esi]
  412a9f:	cmp    BYTE PTR [ebp-0x63353ad6],ch
  412aa5:	mov    ch,0x85
  412aa7:	sub    al,0x49
  412aa9:	outs   dx,BYTE PTR ds:[esi]
  412aaa:	ficomp WORD PTR [edi]
  412aac:	mov    ebp,0x6c547317
  412ab1:	sbb    BYTE PTR [ecx],al
  412ab3:	retf   
  412ab4:	ficom  DWORD PTR [ecx-0x2662db3b]
  412aba:	sub    DWORD PTR ds:0x63b4c788,esi
  412ac0:	mov    cl,0x24
  412ac2:	jge    0x412a4b
  412ac4:	cmp    DWORD PTR [eax-0x2e911c43],ecx
  412aca:	cmp    edi,edx
  412acc:	pop    edx
  412acd:	mov    edi,0xcd93d65c
  412ad2:	sbb    BYTE PTR [edx+ebx*4],al
  412ad5:	inc    eax
  412ad6:	js     0x412b53
  412ad8:	sahf   
  412ad9:	loope  0x412adf
  412adb:	jle    0x412b50
  412add:	outs   dx,DWORD PTR ds:[esi]
  412ade:	jns    0x412a7b
  412ae0:	ja     0x412a6d
  412ae2:	mov    dl,0xf3
  412ae4:	out    0xd9,eax
  412ae6:	mov    ecx,0x7b0e6233
  412aeb:	(bad)  
  412aec:	imul   ecx,DWORD PTR [eax-0x66],0x9
  412af0:	sbb    eax,0x9c50044
  412af5:	add    esi,DWORD PTR [eax-0x61]
  412af8:	popa   
  412af9:	or     ebx,DWORD PTR [ecx-0x31f804ff]
  412aff:	cmp    eax,0x6198cc67
  412b04:	pop    ebp
  412b05:	xchg   BYTE PTR [edx],al
  412b07:	adc    al,0x54
  412b09:	or     BYTE PTR [ecx-0x3e847b2f],0x1d
  412b10:	repnz cdq 
  412b12:	cld    
  412b13:	enter  0x4378,0x68
  412b17:	mov    BYTE PTR [ecx],dh
  412b19:	cmp    ecx,ebx
  412b1b:	dec    ecx
  412b1c:	inc    ebx
  412b1d:	int    0x77
  412b1f:	js     0x412b46
  412b21:	out    dx,eax
  412b22:	stos   BYTE PTR es:[edi],al
  412b23:	dec    bh
  412b25:	push   es
  412b26:	mov    ah,0x83
  412b28:	in     al,dx
  412b29:	scas   al,BYTE PTR es:[edi]
  412b2a:	xchg   esi,eax
  412b2b:	popa   
  412b2c:	icebp  
  412b2d:	pop    ebp
  412b2e:	xchg   edx,eax
  412b2f:	scas   eax,DWORD PTR es:[edi]
  412b30:	mov    es,WORD PTR [ebx+0x52e5570]
  412b36:	stos   BYTE PTR es:[edi],al
  412b37:	sbb    eax,0xe894a380
  412b3c:	sar    BYTE PTR [ecx-0x24],0xd4
  412b40:	add    eax,ecx
  412b42:	jnp    0x412b37
  412b44:	test   al,0xe3
  412b46:	sti    
  412b47:	in     eax,0x70
  412b49:	xchg   ecx,eax
  412b4a:	cmp    BYTE PTR [esi],dh
  412b4c:	mov    ds:0x56062fda,eax
  412b51:	mov    ebp,0x8ffdafe6
  412b56:	mov    esi,0x17dad802
  412b5b:	cs ret 
  412b5d:	sub    DWORD PTR [ebp+0x4],0xfffffff9
  412b61:	sub    BYTE PTR [edi+edi*8+0x61],al
  412b65:	pop    ecx
  412b66:	jb     0x412b86
  412b68:	jmp    0x412b98
  412b6a:	popa   
  412b6b:	sahf   
  412b6c:	push   edi
  412b6d:	sahf   
  412b6e:	dec    esp
  412b6f:	pop    eax
  412b70:	mov    cl,0x1e
  412b72:	js     0x412b39
  412b74:	xchg   ecx,eax
  412b75:	fwait
  412b76:	push   esi
  412b77:	jmp    0x412b07
  412b79:	sbb    esi,DWORD PTR [esp+edi*2+0x7b]
  412b7d:	mov    BYTE PTR [eax+0x22],dl
  412b80:	add    DWORD PTR ds:0xd144e42e,eax
  412b86:	or     ch,BYTE PTR [ecx+0x6e]
  412b89:	test   eax,0x2ad89716
  412b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b8f:	xchg   ebp,eax
  412b90:	xchg   esi,eax
  412b91:	leave  
  412b92:	lods   eax,DWORD PTR ds:[esi]
  412b93:	push   0xffffffb2
  412b95:	(bad)  
  412b96:	push   esp
  412b97:	jle    0x412b1f
  412b99:	mov    eax,DWORD PTR [ebx]
  412b9b:	je     0x412c0e
  412b9d:	jns    0x412c1e
  412b9f:	push   ss
  412ba0:	rcr    edi,cl
  412ba2:	lock scas eax,DWORD PTR es:[edi]
  412ba4:	jae    0x412b2a
  412ba6:	mov    edi,0x5a0a931
  412bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bac:	push   edi
  412bad:	sub    dh,BYTE PTR [ebx+edx*8+0xbb7ebb2]
  412bb4:	in     eax,0x3f
  412bb6:	xchg   ebp,eax
  412bb7:	cmp    DWORD PTR [ebp+0x47dda6bb],esp
  412bbd:	fisubr DWORD PTR [ecx+0x65]
  412bc0:	jp     0x412b63
  412bc2:	push   eax
  412bc3:	push   esp
  412bc4:	add    BYTE PTR [edi-0x5e778800],bh
  412bca:	ds jp  0x412b87
  412bcd:	inc    esp
  412bce:	add    DWORD PTR ds:[ebx-0xe],ecx
  412bd2:	pop    esp
  412bd3:	add    esp,ebp
  412bd5:	pop    es
  412bd6:	jnp    0x412ba0
  412bd8:	(bad)  [ecx+0x12]
  412bdb:	mov    edx,DWORD PTR [edi+0x72]
  412bde:	xchg   ecx,ebx
  412be0:	mov    eax,0xf243c0ee
  412be5:	mov    bh,0x73
  412be7:	cmp    DWORD PTR [edi+0x37ee75df],0x8ef22128
  412bf1:	das    
  412bf2:	mov    ss,ecx
  412bf4:	or     BYTE PTR [eax+0xb91907a],bh
  412bfa:	cmp    ecx,DWORD PTR [ebx]
  412bfc:	adc    DWORD PTR [eax+0x10a4bb0f],ebx
  412c02:	test   DWORD PTR [ebp-0x77],ebx
  412c05:	jne    0x412c59
  412c07:	and    al,0xb7
  412c09:	xor    al,al
  412c0b:	xor    cl,BYTE PTR gs:[ecx+0x76]
  412c0f:	out    dx,al
  412c10:	sbb    BYTE PTR [edx+0x6],ah
  412c13:	repz xlat BYTE PTR ds:[ebx]
  412c15:	xor    bh,BYTE PTR cs:[edx]
  412c18:	ret    
  412c19:	call   0xdbfabab4
  412c1e:	daa    
  412c1f:	dec    edx
  412c20:	push   ds
  412c21:	test   al,0x29
  412c23:	iret   
  412c24:	das    
  412c25:	mov    ch,0x6d
  412c27:	cdq    
  412c28:	mov    edx,0x9e15d7dc
  412c2d:	std    
  412c2e:	gs std 
  412c30:	or     DWORD PTR [edi],edi
  412c32:	loopne 0x412c85
  412c34:	pop    edi
  412c35:	dec    ebp
  412c36:	mov    DWORD PTR [bp+si+0x5c],esp
  412c3a:	sbb    DWORD PTR [ebx+0x4a714c99],ebp
  412c40:	cld    
  412c41:	ud1    esp,DWORD PTR [ebp-0x3d814551]
  412c48:	(bad)  [edx-0x203edc6e]
  412c4e:	int    0x4a
  412c50:	stc    
  412c51:	sub    ch,BYTE PTR [eax-0x4a263f38]
  412c57:	(bad)  
  412c58:	sub    ebp,esi
  412c5a:	(bad)  
  412c5b:	mov    WORD PTR [ebp+eax*4+0x72101f17],fs
  412c62:	adc    al,0x32
  412c64:	xor    DWORD PTR [edi-0x3b13269d],ebx
  412c6a:	add    edx,ebp
  412c6c:	fdiv   DWORD PTR [ebx]
  412c6e:	cmp    DWORD PTR ds:0xe35edcea,ebp
  412c74:	loopne 0x412c93
  412c76:	push   ebp
  412c77:	inc    edi
  412c78:	mov    ecx,0xf58c469c
  412c7d:	push   ebx
  412c7e:	cmp    eax,0x77453f47
  412c83:	iret   
  412c84:	jno    0x412c0b
  412c86:	jge    0x412cf9
  412c88:	inc    ecx
  412c89:	pop    ecx
  412c8a:	xchg   DWORD PTR [edi+0x3a],edi
  412c8d:	rcl    DWORD PTR [edx],0x35
  412c90:	sbb    esp,DWORD PTR [ecx+0x5ef066e9]
  412c96:	mov    ecx,0xd303aadd
  412c9b:	rcr    ch,1
  412c9d:	or     al,0x82
  412c9f:	cs sar bl,cl
  412ca2:	fidiv  DWORD PTR [ecx]
  412ca4:	or     BYTE PTR [ebp+0x33],dh
  412ca7:	fwait
  412ca8:	inc    eax
  412ca9:	mov    eax,0xf841b29c
  412cae:	inc    ebx
  412caf:	iret   
  412cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cb1:	rep lods al,BYTE PTR ds:[esi]
  412cb3:	les    ecx,FWORD PTR [ecx+0x4c]
  412cb6:	jge    0x412ca0
  412cb8:	dec    esi
  412cb9:	dec    eax
  412cba:	cmp    BYTE PTR [esi-0x73eaa8cf],dl
  412cc0:	test   DWORD PTR [ebp+0x52],esp
  412cc3:	xchg   ebp,eax
  412cc4:	not    dh
  412cc6:	arpl   ax,bp
  412cc8:	mov    DWORD PTR [edi-0x28f73c27],ebp
  412cce:	xlat   BYTE PTR ds:[ebx]
  412ccf:	add    dh,bl
  412cd1:	leave  
  412cd2:	dec    ecx
  412cd3:	arpl   WORD PTR [eax-0x7e],si
  412cd6:	xor    edx,DWORD PTR [esi-0x7ebef987]
  412cdc:	inc    edx
  412cdd:	outs   dx,DWORD PTR ds:[esi]
  412cde:	xor    eax,0x5b685a08
  412ce3:	test   DWORD PTR [eax-0x30],eax
  412ce6:	repz xor DWORD PTR [esi],esi
  412ce9:	hlt    
  412cea:	int3   
  412ceb:	into   
  412cec:	sbb    eax,0xf19ff87b
  412cf1:	inc    eax
  412cf2:	or     al,0xfc
  412cf4:	jns    0x412d4c
  412cf6:	push   ebp
  412cf7:	jg     0x412cbd
  412cf9:	fs mov ah,0xc1
  412cfc:	pop    ebx
  412cfd:	xchg   esi,eax
  412cfe:	add    ah,ch
  412d00:	xor    bh,dl
  412d02:	add    al,0x53
  412d04:	inc    edi
  412d05:	pandn  mm5,QWORD PTR [edx]
  412d08:	or     ebp,0x3b
  412d0b:	mov    al,ds:0xece308d
  412d10:	mov    ebx,DWORD PTR [edi+eiz*4-0x3dcaab58]
  412d17:	(bad)  
  412d18:	mov    ebx,0x697e34c
  412d1d:	call   0xfec8:0x187eb937
  412d24:	fist   DWORD PTR [ebp+0x449d9f5d]
  412d2a:	(bad)  
  412d2b:	not    BYTE PTR cs:[ecx]
  412d2e:	loope  0x412d66
  412d30:	(bad)  
  412d31:	into   
  412d32:	sbb    al,0x62
  412d34:	mov    al,ds:0xd84f7a98
  412d39:	into   
  412d3a:	les    edx,FWORD PTR [ebp-0x13]
  412d3d:	in     al,0x39
  412d3f:	dec    eax
  412d40:	test   bl,bh
  412d42:	inc    si
  412d44:	mov    ah,BYTE PTR [ebx]
  412d46:	call   0xae1:0x6e7a933b
  412d4d:	pop    ebp
  412d4e:	test   eax,0x856b445a
  412d53:	pop    edi
  412d54:	jmp    DWORD PTR [ebx]
  412d56:	cld    
  412d57:	jb     0x412dad
  412d59:	in     eax,dx
  412d5a:	retf   0xf451
  412d5d:	push   edx
  412d5e:	pop    es
  412d5f:	cdq    
  412d60:	not    DWORD PTR [esi-0x62]
  412d63:	lods   eax,DWORD PTR ds:[esi]
  412d64:	inc    ebp
  412d65:	add    BYTE PTR [eax+0x51],ah
  412d68:	push   ebx
  412d69:	inc    eax
  412d6a:	sbb    DWORD PTR [edi-0x3164d576],0xfffffff6
  412d71:	js     0x412db2
  412d73:	inc    eax
  412d74:	mov    bh,BYTE PTR [ebx+esi*1-0x5c]
  412d78:	cmp    cl,0xa7
  412d7b:	es icebp 
  412d7d:	mov    eax,ds:0xddfb8f9b
  412d82:	jge    0x412dbc
  412d84:	out    0x4f,al
  412d86:	mov    ebx,0xc39c24a9
  412d8b:	jmp    0x5eb2:0x7214c7f9
  412d92:	clc    
  412d93:	ins    BYTE PTR es:[edi],dx
  412d94:	loope  0x412ddd
  412d96:	mov    eax,ds:0xdb2750da
  412d9b:	dec    ecx
  412d9c:	call   0x12f81f88
  412da1:	gs mov esi,0xa59a8b87
  412da7:	cmp    esp,0x17024299
  412dad:	inc    edi
  412dae:	inc    esi
  412daf:	sti    
  412db0:	mov    ecx,0x89ff436c
  412db5:	cs push 0x5
  412db8:	test   eax,0xd65641af
  412dbd:	daa    
  412dbe:	mov    ds:0x1d45a12,al
  412dc3:	ret    0xe5a5
  412dc6:	popf   
  412dc7:	dec    ecx
  412dc8:	add    BYTE PTR [ebx+0x18b65adf],0x30
  412dcf:	adc    DWORD PTR [edx-0x6636872f],esi
  412dd5:	aad    0xfa
  412dd7:	push   eax
  412dd8:	ins    DWORD PTR es:[edi],dx
  412dd9:	stc    
  412dda:	pop    esp
  412ddb:	ficom  WORD PTR [edx-0x6e01749d]
  412de1:	stos   BYTE PTR es:[edi],al
  412de2:	fisubr DWORD PTR [ebx+0x57]
  412de5:	dec    esp
  412de6:	(bad)  
  412de7:	out    dx,al
  412de8:	xor    BYTE PTR [ecx-0x4b],dh
  412deb:	jns    0x412db2
  412ded:	leave  
  412dee:	cdq    
  412def:	jne    0x412e3c
  412df1:	xchg   edx,eax
  412df2:	test   al,0xa
  412df4:	xor    dh,BYTE PTR [ecx-0x23f63d50]
  412dfa:	inc    edx
  412dfb:	rcl    BYTE PTR [ebx-0x18],1
  412dfe:	ja     0x412e1c
  412e00:	addr16 lahf 
  412e02:	sbb    ecx,edi
  412e04:	xchg   ecx,eax
  412e05:	mov    ch,0xbf
  412e07:	jb     0x412d98
  412e09:	mov    al,0xab
  412e0b:	lea    eax,[ebx]
  412e0d:	mov    dh,0x87
  412e0f:	(bad)  
  412e10:	pop    ss
  412e11:	scas   eax,DWORD PTR es:[edi]
  412e12:	adc    DWORD PTR [esp+esi*1],edi
  412e15:	xchg   ebp,eax
  412e16:	inc    eax
  412e17:	jo     0x412dd7
  412e19:	inc    edx
  412e1a:	retf   0xd9b8
  412e1d:	pop    es
  412e1e:	leave  
  412e1f:	test   BYTE PTR ds:0x25630baa,cl
  412e25:	loope  0x412e4d
  412e27:	(bad)  
  412e28:	adc    dl,BYTE PTR [edx+edi*8-0x2a]
  412e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e2d:	and    eax,0x20acca8b
  412e32:	xchg   BYTE PTR [edx+0x3d],ah
  412e35:	hlt    
  412e36:	and    al,0xbd
  412e38:	mov    dl,0xad
  412e3a:	cmp    eax,DWORD PTR [edx]
  412e3c:	mov    dh,0x17
  412e3e:	int3   
  412e3f:	add    ebx,DWORD PTR [esi]
  412e41:	xor    edx,DWORD PTR [eax-0x76489a0d]
  412e47:	bound  ecx,QWORD PTR [edi]
  412e49:	shl    eax,0xe
  412e4c:	push   ebx
  412e4d:	cli    
  412e4e:	pop    edi
  412e4f:	lods   al,BYTE PTR ds:[esi]
  412e50:	jle    0x412e6a
  412e52:	imul   eax,DWORD PTR ds:[ebx+0x623ed135],0xffffffc4
  412e5a:	fistp  QWORD PTR [edx+0x20]
  412e5d:	inc    ecx
  412e5e:	test   al,0x46
  412e60:	jp     0x412e98
  412e62:	mov    bl,0xce
  412e64:	stos   DWORD PTR es:[edi],eax
  412e65:	jo     0x412ead
  412e67:	(bad)  
  412e69:	add    BYTE PTR [edi-0x10],ah
  412e6c:	mov    ds:0x8c9b741,al
  412e71:	lea    esp,[ebx+0x30]
  412e74:	mov    eax,ds:0xbb71d113
  412e79:	inc    esp
  412e7a:	les    eax,FWORD PTR ds:0x2ba68e7a
  412e80:	mov    ds:0xf2dd3fea,al
  412e85:	test   eax,0x47e3ce44
  412e8a:	cmp    DWORD PTR [eax-0x201e2fe5],edi
  412e90:	cs adc esi,esp
  412e93:	inc    esi
  412e94:	xor    DWORD PTR [eax+0x58],0xf81fc2e8
  412e9b:	outs   dx,BYTE PTR ds:[esi]
  412e9c:	test   al,0x6a
  412e9e:	int3   
  412e9f:	idiv   BYTE PTR [ebp+eax*8+0xc]
  412ea3:	aad    0xc4
  412ea5:	daa    
  412ea6:	mov    BYTE PTR [ebx],al
  412ea8:	call   0xea82:0xdf8db203
  412eaf:	mov    eax,0xc87cf948
  412eb4:	adc    eax,0x2becffd6
  412eb9:	lods   al,BYTE PTR ds:[esi]
  412eba:	pusha  
  412ebb:	adc    eax,0x2a47b5cf
  412ec0:	sbb    al,0xc3
  412ec2:	cmc    
  412ec3:	and    DWORD PTR [edi-0x18],ebx
  412ec6:	mov    WORD PTR [eax+esi*4],ss
  412ec9:	lods   al,BYTE PTR ds:[esi]
  412eca:	adc    eax,0x9f725914
  412ecf:	inc    ecx
  412ed0:	push   ss
  412ed1:	mov    bl,0x48
  412ed3:	jle    0x412e9a
  412ed5:	mov    edi,?
  412ed7:	cs dec esi
  412ed9:	push   edx
  412eda:	gs push ebp
  412edc:	xchg   ecx,eax
  412edd:	outs   dx,DWORD PTR ds:[esi]
  412ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edf:	push   ds
  412ee0:	out    dx,eax
  412ee1:	and    al,0x58
  412ee3:	pop    es
  412ee4:	pushf  
  412ee5:	mov    al,0x7a
  412ee7:	and    eax,0xb9ef0140
  412eec:	sub    al,BYTE PTR [edx-0x4b]
  412eef:	hlt    
  412ef0:	push   ss
  412ef1:	je     0x412e93
  412ef3:	and    eax,0xfda05b88
  412ef8:	dec    edx
  412ef9:	test   eax,0x61954a6c
  412efe:	pop    ss
  412eff:	mov    ah,BYTE PTR [ebx]
  412f01:	icebp  
  412f02:	test   al,0xfd
  412f04:	mov    dl,0x98
  412f06:	outs   dx,DWORD PTR ds:[esi]
  412f07:	inc    edi
  412f08:	es fwait
  412f0a:	sbb    al,0xea
  412f0c:	xor    eax,0xfd63f02a
  412f11:	cmp    eax,0xc9fe073b
  412f16:	dec    eax
  412f17:	test   al,0x43
  412f19:	xchg   edi,eax
  412f1a:	cmp    BYTE PTR [edi],cl
  412f1c:	pop    edx
  412f1d:	add    eax,0x2dc97363
  412f22:	pop    ecx
  412f23:	dec    esp
  412f24:	jne    0x412f41
  412f26:	pop    ecx
  412f27:	dec    esi
  412f28:	out    0x8,al
  412f2a:	dec    ecx
  412f2b:	call   DWORD PTR ds:0x8dac55bc
  412f31:	or     BYTE PTR [esi],bh
  412f33:	xlat   BYTE PTR ds:[ebx]
  412f34:	(bad)  
  412f35:	fimul  WORD PTR [ecx+edi*1]
  412f38:	outs   dx,DWORD PTR ds:[esi]
  412f39:	dec    esi
  412f3a:	push   ecx
  412f3b:	cli    
  412f3c:	in     al,dx
  412f3d:	adc    al,BYTE PTR ds:0xe1f02920
  412f43:	mov    ebx,esi
  412f45:	xchg   edx,eax
  412f46:	cs push 0x2d
  412f49:	dec    ebx
  412f4a:	bound  esp,QWORD PTR ds:0xc513a837
  412f50:	or     eax,0x5245ab10
  412f55:	pop    ecx
  412f56:	cmc    
  412f57:	cmc    
  412f58:	fisub  WORD PTR [edi+0x39]
  412f5b:	loope  0x412f0a
  412f5d:	push   esi
  412f5e:	xchg   esi,eax
  412f5f:	dec    edi
  412f60:	jl     0x412f2a
  412f62:	(bad)  
  412f63:	jl     0x412f8a
  412f65:	out    0x8e,al
  412f67:	out    0xd8,eax
  412f69:	aad    0x52
  412f6b:	clc    
  412f6c:	lds    ebx,FWORD PTR [edi]
  412f6e:	lahf   
  412f6f:	jns    0x412f4f
  412f71:	mov    esp,0xd0076063
  412f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f77:	sub    al,0x6f
  412f79:	int    0x54
  412f7b:	mov    bl,0x9c
  412f7d:	aaa    
  412f7e:	mov    edi,0x508f2e95
  412f83:	cmp    eax,0x39c519fc
  412f88:	mov    BYTE PTR [ebx-0xc572bdd],bl
  412f8e:	xchg   esi,eax
  412f8f:	dec    ebx
  412f90:	and    ecx,esp
  412f92:	outs   dx,BYTE PTR ds:[esi]
  412f93:	and    al,0xeb
  412f95:	push   0x660a9c36
  412f9a:	mov    esi,0xd0f62898
  412f9f:	add    al,BYTE PTR [ecx+eiz*8]
  412fa2:	and    bh,BYTE PTR [edx]
  412fa4:	push   0x1
  412fa6:	dec    eax
  412fa7:	call   0xa43b:0x5196f7ef
  412fae:	push   cs
  412faf:	push   cs
  412fb0:	xchg   esp,eax
  412fb1:	jl     0x412fe9
  412fb3:	in     eax,dx
  412fb4:	mov    cl,BYTE PTR [esi+eiz*8]
  412fb7:	rcr    bh,cl
  412fb9:	or     eax,0xbf6cd3eb
  412fbe:	inc    ebx
  412fbf:	mov    cl,0x35
  412fc1:	push   esi
  412fc2:	add    eax,0xbb5dcf9f
  412fc7:	fwait
  412fc8:	ins    DWORD PTR es:[edi],dx
  412fc9:	sti    
  412fca:	and    bl,ah
  412fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fcd:	jmp    0x412f81
  412fcf:	pop    ecx
  412fd0:	or     eax,0x88a7d632
  412fd5:	addr16 cmp cl,al
  412fd8:	gs pop ss
  412fda:	inc    esi
  412fdb:	push   0x6faaeb31
  412fe0:	sub    bl,dh
  412fe2:	inc    edx
  412fe3:	push   edx
  412fe4:	outs   dx,BYTE PTR ds:[esi]
  412fe5:	and    al,0xf3
  412fe7:	scas   al,BYTE PTR es:[edi]
  412fe8:	xchg   edi,eax
  412fe9:	test   al,0xae
  412feb:	aaa    
  412fec:	jecxz  0x41300a
  412fee:	dec    ecx
  412fef:	pop    ecx
  412ff0:	enter  0x9936,0xa2
  412ff4:	mov    DWORD PTR [edx+edx*8],0x6df5df77
  412ffb:	inc    ebx
  412ffc:	fcom   DWORD PTR [edi+0x13]
  412fff:	js     0x413058
  413001:	mov    ecx,DWORD PTR [ebx]
  413003:	dec    esp
  413004:	repz xchg edx,eax
  413006:	scas   al,BYTE PTR es:[edi]
  413007:	ficom  DWORD PTR [ebp-0x6102ea06]
  41300d:	sub    eax,0x26c0b0ca
  413012:	inc    ebp
  413013:	adc    BYTE PTR [esi],0x34
  413016:	push   0xec6ab788
  41301b:	lock xchg DWORD PTR [esi+ebp*2],esi
  41301f:	faddp  st(1),st
  413021:	sub    eax,0x9b651d0d
  413026:	sub    dh,BYTE PTR [edi+eiz*2-0x13f45cca]
  41302d:	pop    es
  41302e:	add    BYTE PTR [edx+0x3386d385],0x1b
  413035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413036:	addr16 mov esi,0x98e29ba1
  41303c:	push   cs
  41303d:	cdq    
  41303e:	xchg   ecx,eax
  41303f:	das    
  413040:	push   ebp
  413041:	push   ecx
  413042:	adc    cl,BYTE PTR [ebp+0x3f]
  413045:	jmp    0x41307b
  413047:	call   0xb143:0xd960077e
  41304e:	sub    bl,bl
  413050:	ror    ch,1
  413052:	ror    DWORD PTR [esi],0x90
  413055:	ins    DWORD PTR es:[edi],dx
  413056:	arpl   WORD PTR [ecx],dx
  413058:	mov    ds:0x7210845,al
  41305d:	mov    eax,0xa6a62ff6
  413062:	ins    BYTE PTR es:[edi],dx
  413063:	mov    al,0x4b
  413065:	lock pop ds
  413067:	jp     0x412fe9
  413069:	mov    esp,0x3e34ffa
  41306e:	mov    ecx,0xa1ebb667
  413073:	jnp    0x41304b
  413075:	pop    eax
  413076:	sbb    BYTE PTR [esi+0x3a6a1f6b],0xde
  41307d:	push   0x32
  41307f:	mov    bh,0xeb
  413081:	dec    eax
  413082:	neg    BYTE PTR [edx+0x5e]
  413085:	xor    al,0x84
  413087:	nop
  413088:	push   0x9
  41308a:	out    dx,eax
  41308b:	mov    edx,0xd860257a
  413090:	cmc    
  413091:	test   ah,ch
  413093:	jge    0x4130a9
  413095:	call   0xa41c:0x8e756384
  41309c:	jl     0x4130ad
  41309e:	stos   DWORD PTR es:[edi],eax
  41309f:	add    al,0xc7
  4130a1:	test   DWORD PTR [eax+0x2e],0x1562482e
  4130a8:	mov    ebx,0xb4cd8380
  4130ad:	sti    
  4130ae:	int    0x3e
  4130b0:	cmp    DWORD PTR [eax],ecx
  4130b2:	push   esi
  4130b3:	dec    ebx
  4130b4:	cmp    al,0xf8
  4130b6:	cs push ebx
  4130b8:	inc    eax
  4130b9:	fs pop ds
  4130bb:	inc    edx
  4130bc:	xchg   esp,eax
  4130bd:	ss cli 
  4130bf:	and    edi,DWORD PTR [edi]
  4130c1:	xchg   ebx,eax
  4130c2:	ins    DWORD PTR es:[edi],dx
  4130c3:	inc    esp
  4130c4:	(bad)  
  4130c5:	jae    0x413101
  4130c7:	adc    ecx,ecx
  4130c9:	(bad)  
  4130ca:	mov    ch,0x12
  4130cc:	push   eax
  4130cd:	inc    esi
  4130ce:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4130d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d1:	push   0xa6681f3e
  4130d6:	shr    DWORD PTR [ebp+0xd61f976],cl
  4130dc:	mov    edx,0xb045d9c2
  4130e1:	cmc    
  4130e2:	pop    ecx
  4130e3:	ins    BYTE PTR es:[edi],dx
  4130e4:	mov    cl,0x93
  4130e6:	jg     0x4130a0
  4130e8:	xor    BYTE PTR es:[ebp-0x1f],dl
  4130ec:	sbb    eax,0x3802fa93
  4130f1:	add    eax,edx
  4130f3:	pop    ecx
  4130f4:	test   ecx,ebp
  4130f6:	mov    ?,WORD PTR [edx]
  4130f8:	es xor al,0xbc
  4130fb:	dec    ecx
  4130fc:	pop    esp
  4130fd:	xchg   ecx,eax
  4130fe:	ja     0x41317a
  413100:	jnp    0x413130
  413102:	mov    DWORD PTR [ecx],edi
  413104:	sub    esp,edx
  413106:	jno    0x4130d7
  413108:	idiv   dh
  41310a:	shl    BYTE PTR [ecx+0x1d],1
  41310d:	sahf   
  41310e:	(bad)  
  41310f:	xchg   ebp,eax
  413110:	pop    edi
  413111:	sahf   
  413112:	daa    
  413113:	mov    al,0xf
  413115:	mov    bh,0x15
  413117:	jecxz  0x413188
  413119:	fsub   DWORD PTR [ebx+ecx*2]
  41311c:	push   es
  41311d:	lock xor esp,DWORD PTR [edx-0x59b0c679]
  413124:	mov    ebx,0xdcd8c22a
  413129:	mov    BYTE PTR [edi+0x1eb82f1c],cl
  41312f:	scas   eax,DWORD PTR es:[edi]
  413130:	push   cs
  413131:	jecxz  0x4130ea
  413133:	push   edx
  413134:	add    DWORD PTR [edi],eax
  413136:	xor    al,0x7a
  413138:	inc    esp
  413139:	arpl   bp,dx
  41313b:	push   edi
  41313c:	cmp    BYTE PTR [ebp+0x33afd9a9],dl
  413142:	test   DWORD PTR [edi+0x39db8405],0x31f3c57f
  41314c:	leave  
  41314d:	push   ds
  41314e:	pop    ebx
  41314f:	sbb    eax,0xb05ddfd8
  413154:	or     DWORD PTR [eax],edx
  413156:	pop    ss
  413157:	xlat   BYTE PTR ds:[ebx]
  413158:	jmp    0x44ee5018
  41315d:	es mov bl,0xc0
  413160:	ds jmp 0x413166
  413163:	sbb    al,0xf3
  413165:	lods   eax,DWORD PTR ds:[esi]
  413166:	mov    ds:0x57e8bb4b,al
  41316b:	aam    0xac
  41316d:	dec    ebx
  41316e:	mov    WORD PTR [edi],ds
  413170:	xchg   BYTE PTR [esi+0x57],ch
  413173:	sahf   
  413174:	fld    QWORD PTR [ebp+0x7d]
  413177:	outs   dx,BYTE PTR ds:[esi]
  413178:	lods   al,BYTE PTR ds:[esi]
  413179:	ret    
  41317a:	test   al,ah
  41317c:	fstp   QWORD PTR [edi]
  41317e:	fnstsw WORD PTR [ebx+0x35face58]
  413184:	aas    
  413185:	ret    
  413186:	push   esp
  413187:	adc    DWORD PTR [eax+ebp*2],0x6392a972
  41318e:	inc    ecx
  41318f:	popa   
  413190:	out    0xe5,eax
  413192:	add    bl,al
  413194:	scas   al,BYTE PTR es:[edi]
  413195:	add    eax,0xb7a8714a
  41319a:	sub    BYTE PTR [edi+eiz*8+0xb],dh
  41319e:	icebp  
  41319f:	lahf   
  4131a0:	xor    ecx,edi
  4131a2:	(bad)  
  4131a3:	repnz sti 
  4131a5:	std    
  4131a6:	addr16 inc ecx
  4131a8:	dec    ebp
  4131a9:	push   esp
  4131ab:	sahf   
  4131ac:	shr    BYTE PTR [edx-0x1a7d69d6],0x4f
  4131b3:	xchg   edx,eax
  4131b4:	stos   BYTE PTR es:[edi],al
  4131b5:	shl    BYTE PTR [edi],1
  4131b7:	(bad)  
  4131b9:	call   0x4e144a0e
  4131be:	dec    edx
  4131bf:	ret    0xe8d7
  4131c2:	shl    edx,cl
  4131c4:	shl    ch,0x4c
  4131c7:	or     ebx,DWORD PTR fs:[eax]
  4131ca:	xchg   edi,eax
  4131cb:	les    edi,FWORD PTR [ebx-0x5d]
  4131ce:	retf   0x1e75
  4131d1:	jo     0x413194
  4131d3:	and    al,0xaf
  4131d5:	pop    ebp
  4131d6:	mov    ds:0xa541f944,eax
  4131db:	xchg   esi,eax
  4131dc:	je     0x413252
  4131de:	xchg   edi,eax
  4131df:	pop    ss
  4131e0:	in     al,0x44
  4131e2:	pop    ds
  4131e3:	or     eax,0xca847ac8
  4131e8:	push   ds
  4131e9:	cmc    
  4131ea:	mov    ds:0x8cc8a543,al
  4131ef:	sbb    DWORD PTR [eax],eax
  4131f1:	cld    
  4131f2:	pop    esp
  4131f3:	adc    BYTE PTR [bp+di],cl
  4131f6:	jmp    0xd88:0x12ba9f63
  4131fd:	out    0x76,al
  4131ff:	dec    ecx
  413200:	mov    dh,0xa9
  413202:	inc    esp
  413203:	adc    BYTE PTR [edi-0x2d],0xb4
  413207:	(bad)  
  413208:	ins    DWORD PTR es:[edi],dx
  413209:	adc    ebx,DWORD PTR [eax]
  41320b:	mov    ?,WORD PTR [ecx+ebp*4-0x52]
  41320f:	and    al,0x6b
  413211:	fistp  QWORD PTR [ecx+0x7d]
  413214:	retf   
  413215:	xor    BYTE PTR [esi-0x64bce1fe],0x92
  41321c:	or     BYTE PTR [esi-0x39951c38],bh
  413222:	cmp    BYTE PTR [ebx+ebx*1-0x20a5faa2],0x4e
  41322a:	cwde   
  41322b:	shl    ebx,1
  41322d:	jb     0x413280
  41322f:	xor    eax,0x68357b8b
  413234:	sub    BYTE PTR [ecx+0x6694d5b3],ah
  41323a:	(bad)  
  41323b:	mov    al,ds:0xdaa5927
  413240:	fisub  WORD PTR [ebx-0x29f9e04d]
  413246:	xor    DWORD PTR [ebp-0x1c],ebx
  413249:	data16 (bad) 
  41324b:	iret   
  41324c:	add    al,BYTE PTR [edi]
  41324e:	xor    edx,ebp
  413250:	ficomp DWORD PTR [esi]
  413252:	push   ds
  413253:	jns    0x4131d5
  413255:	sbb    bh,BYTE PTR [ecx+0x60]
  413258:	fwait
  413259:	lahf   
  41325a:	ret    0x94cf
  41325d:	xor    DWORD PTR [ecx],0xe1068881
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	xor    al,0x96
  413266:	popf   
  413267:	xor    DWORD PTR [ecx],esi
  413269:	push   eax
  41326a:	push   edx
  41326b:	jae    0x4132ab
  41326d:	cdq    
  41326e:	stc    
  41326f:	pop    ecx
  413270:	(bad)  
  413271:	lock sub al,0x3f
  413274:	int    0x69
  413276:	cmc    
  413277:	inc    ebx
  413278:	pop    ecx
  413279:	push   eax
  41327a:	imul   edx,edi,0x24
  41327d:	ret    0x1684
  413280:	dec    edi
  413281:	fwait
  413282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413283:	mov    ebx,0x802ed85f
  413288:	xchg   ebp,eax
  413289:	mov    al,ds:0xa4aa50b5
  41328e:	adc    dh,dh
  413290:	ret    
  413291:	shl    DWORD PTR [esi-0x48ba137],0xb2
  413298:	ja     0x4132e9
  41329a:	cld    
  41329b:	sbb    al,0x5
  41329d:	shl    BYTE PTR [ecx],cl
  41329f:	cmc    
  4132a0:	imul   esp,DWORD PTR [esi],0x37
  4132a3:	hlt    
  4132a4:	dec    ebp
  4132a5:	sbb    al,cl
  4132a7:	and    BYTE PTR ds:0xa797265b,ah
  4132ad:	xchg   esp,eax
  4132ae:	stos   DWORD PTR es:[edi],eax
  4132af:	int    0x1b
  4132b1:	push   edx
  4132b2:	dec    esi
  4132b3:	bound  eax,QWORD PTR [ebp+0x315c66c5]
  4132b9:	push   ss
  4132ba:	js     0x4132c3
  4132bc:	mul    DWORD PTR [esi]
  4132be:	cwde   
  4132bf:	retf   0xd853
  4132c2:	mov    cl,0xbc
  4132c4:	dec    ebp
  4132c5:	shr    DWORD PTR [eax+0x1cf1855b],cl
  4132cb:	xor    al,0x3
  4132cd:	jge    0x4132ae
  4132cf:	enter  0xe211,0x9c
  4132d3:	push   ebx
  4132d4:	(bad)  
  4132d5:	push   gs
  4132d7:	push   eax
  4132d8:	xor    DWORD PTR [ebx],ebx
  4132da:	cmc    
  4132db:	repz cmp dl,BYTE PTR [ebx+eiz*4-0x43]
  4132e0:	xchg   ebx,eax
  4132e1:	pop    ds
  4132e2:	mov    edx,0xb71a2a0d
  4132e7:	push   esi
  4132e8:	mov    ebx,0xbd66cbf3
  4132ed:	inc    edi
  4132ee:	cmc    
  4132ef:	pop    ecx
  4132f0:	mov    dh,0x8d
  4132f2:	jno    0x413297
  4132f4:	pop    ds
  4132f5:	xchg   BYTE PTR [edi+0x42],cl
  4132f8:	jae    0x413370
  4132fa:	mov    ds:0x6ac425da,al
  4132ff:	hlt    
  413300:	add    al,0xba
  413302:	outs   dx,DWORD PTR ds:[esi]
  413303:	outs   dx,BYTE PTR ds:[esi]
  413304:	psubq  mm5,QWORD PTR [eax+0x4b]
  413308:	hlt    
  413309:	loopne 0x413368
  41330b:	xor    BYTE PTR [edi-0x73bdbc80],bh
  413311:	shl    DWORD PTR [ebx],0x1
  413314:	mov    edi,0x648ca641
  413319:	push   0x2
  41331b:	int    0x95
  41331d:	clc    
  41331e:	pop    ds
  41331f:	dec    edi
  413320:	test   al,0x1e
  413322:	jecxz  0x41333e
  413324:	sbb    DWORD PTR [ecx-0x8],0xf24abdd0
  41332b:	pop    ebx
  41332c:	xor    al,0xe
  41332e:	repz add eax,0xed631d79
  413334:	push   cs
  413335:	gs push edi
  413337:	fbld   TBYTE PTR [eax+0x7d]
  41333a:	mov    ah,0x6a
  41333c:	shr    BYTE PTR [ecx+ecx*8-0x1f],cl
  413340:	pop    ss
  413341:	hlt    
  413342:	ror    DWORD PTR ds:0x17dd2854,1
  413348:	xchg   ecx,eax
  413349:	push   ds
  41334a:	neg    BYTE PTR ds:0x534de877
  413350:	lea    edi,[ecx]
  413352:	sub    bl,0x4a
  413355:	aam    0xde
  413357:	push   ebp
  413358:	ds stos DWORD PTR es:[edi],eax
  41335a:	pop    es
  41335b:	ret    0xe573
  41335e:	xor    eax,DWORD PTR [ecx+0x34]
  413361:	push   0xffffff8f
  413363:	inc    edi
  413364:	mov    DWORD PTR [eax+0x412161b1],esi
  41336a:	push   0xdc956302
  41336f:	das    
  413370:	push   ebp
  413371:	repz fld TBYTE PTR [edx+0x1c]
  413375:	xor    al,0x16
  413377:	addr16 dec ebx
  413379:	adc    bh,BYTE PTR [eax+0xe]
  41337c:	adc    al,0x5e
  41337e:	pop    ecx
  41337f:	xor    edx,DWORD PTR [ebx]
  413381:	inc    ebp
  413382:	or     eax,0xb22cf7fe
  413388:	inc    ebp
  413389:	push   0xd3108639
  41338e:	sub    ecx,DWORD PTR [ecx-0x15]
  413391:	mov    DWORD PTR [edx+0x32112cc3],eax
  413397:	in     al,0x10
  413399:	xchg   ecx,eax
  41339a:	adc    bl,BYTE PTR [edx+eiz*2]
  41339d:	fild   QWORD PTR [ecx+0x6955de6d]
  4133a3:	fwait
  4133a4:	sub    al,0xef
  4133a6:	and    DWORD PTR [edx+0x609b1b55],ecx
  4133ac:	int    0xd9
  4133ae:	mov    al,ds:0x465d1b86
  4133b3:	adc    edi,DWORD PTR [eax+0x32]
  4133b6:	loop   0x4133d0
  4133b8:	aaa    
  4133b9:	div    DWORD PTR [ebx-0x948e1fd]
  4133bf:	sub    eax,0xf2396c2a
  4133c4:	add    eax,0x7af3ad37
  4133c9:	clc    
  4133ca:	iret   
  4133cb:	retf   
  4133cc:	cmc    
  4133cd:	push   0x47
  4133cf:	xchg   BYTE PTR [eax+0x394d5d73],bh
  4133d5:	adc    edx,eax
  4133d7:	push   ebp
  4133d8:	sbb    al,0xd9
  4133da:	ror    DWORD PTR [ebx],1
  4133dc:	daa    
  4133dd:	push   ecx
  4133de:	add    al,0x44
  4133e0:	push   ecx
  4133e1:	aaa    
  4133e2:	jle    0x413425
  4133e4:	vmovapd xmm7,xmm4
  4133e8:	rol    dl,cl
  4133ea:	xor    al,dh
  4133ec:	aad    0x4b
  4133ee:	mov    dl,0x50
  4133f0:	loope  0x4133f5
  4133f2:	cmp    BYTE PTR [esi-0x2fd66c6a],ch
  4133f8:	push   ds
  4133f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133fa:	cmp    esp,DWORD PTR [edi]
  4133fc:	push   eax
  4133fd:	xchg   ebp,eax
  4133fe:	push   ds
  4133ff:	sub    cl,dl
  413401:	xchg   DWORD PTR [ebx-0x6],ecx
  413404:	das    
  413405:	dec    esp
  413406:	call   0x4ebd49d
  41340b:	xor    DWORD PTR [ebx+0xdc1312],ecx
  413411:	add    BYTE PTR [eax-0x5f4625d6],al
  413417:	sahf   
  413418:	mov    dh,0x6
  41341a:	or     eax,DWORD PTR [eax-0x26]
  41341d:	fstp   DWORD PTR [ecx+ecx*8]
  413420:	mov    dh,0xd7
  413422:	dec    ebx
  413423:	cmpxchg DWORD PTR [edx+0x17cfa66],edx
  41342a:	ds adc al,0x38
  41342d:	sub    bl,BYTE PTR [edi-0x619cf6f3]
  413433:	pop    eax
  413434:	or     eax,0x585524e1
  413439:	pusha  
  41343a:	cmc    
  41343b:	ds push ds
  41343d:	push   ss
  41343e:	add    bh,dh
  413440:	jg     0x4134b5
  413442:	jmp    0x4133fc
  413444:	cmp    ecx,DWORD PTR [ebx]
  413446:	and    al,0xcc
  413448:	inc    esp
  413449:	cmc    
  41344a:	inc    ebp
  41344b:	xor    BYTE PTR [ebp+0x2c01d040],ch
  413451:	shr    ebx,0x39
  413454:	cwde   
  413455:	mov    ds:0x9a1784ef,eax
  41345a:	and    bl,BYTE PTR [eax+0x10]
  41345d:	mov    ebx,0x5cec142d
  413462:	call   0x4a22ac11
  413467:	sahf   
  413468:	xchg   DWORD PTR [eax],edx
  41346a:	jne    0x4134e3
  41346c:	mov    al,ds:0xafb7cf9
  413471:	cwde   
  413472:	scas   eax,DWORD PTR es:[edi]
  413473:	sbb    esi,DWORD PTR [ebx+ecx*8-0x38]
  413477:	frstor [ecx-0x1922fa7c]
  41347d:	aam    0x7
  41347f:	psubsb mm4,QWORD PTR [esi+ebx*8]
  413483:	jmp    0x73a7:0x62e37b4a
  41348a:	push   0xffffffdd
  41348c:	inc    esi
  41348d:	icebp  
  41348e:	jp     0xcdbed95c
  413494:	int    0x80
  413496:	(bad)  
  413497:	test   al,0x25
  413499:	sub    BYTE PTR [ebx-0x7],al
  41349c:	pusha  
  41349d:	dec    eax
  41349e:	addr16 mov ds:0x9e7,al
  4134a2:	stos   BYTE PTR es:[edi],al
  4134a3:	cmc    
  4134a4:	add    eax,0x99c3f2dc
  4134a9:	xlat   BYTE PTR ds:[ebx]
  4134aa:	cli    
  4134ab:	mov    ds:0x671f6aab,al
  4134b0:	retf   
  4134b1:	push   es
  4134b2:	lds    edi,FWORD PTR [edx+0x67]
  4134b5:	sub    al,0x86
  4134b7:	test   BYTE PTR [esi],dl
  4134b9:	ins    DWORD PTR es:[edi],dx
  4134ba:	sbb    DWORD PTR [esi-0x5f705ab],ebx
  4134c0:	or     BYTE PTR [edi-0x59],cl
  4134c3:	mov    dl,0x6
  4134c5:	mov    bh,0x24
  4134c7:	js     0x413534
  4134c9:	pop    eax
  4134ca:	cmp    ah,BYTE PTR [ebp-0x5b687d3c]
  4134d0:	push   ecx
  4134d1:	push   0x783310ee
  4134d6:	mov    edi,0xa4b22230
  4134db:	(bad)  
  4134dd:	or     edx,DWORD PTR [eax]
  4134df:	lea    ecx,[ecx+0x79]
  4134e2:	pop    ecx
  4134e3:	inc    ebx
  4134e4:	push   ds
  4134e5:	(bad)  
  4134e6:	in     eax,dx
  4134e7:	push   0x7
  4134e9:	mov    eax,0x5a0058fe
  4134ee:	(bad)  
  4134ef:	xor    bl,al
  4134f1:	mov    ds:0xd06672ba,al
  4134f6:	xor    BYTE PTR ds:0xb159b35,bl
  4134fc:	lds    esi,FWORD PTR [ecx+eiz*4+0x24]
  413500:	popa   
  413501:	pop    ecx
  413502:	inc    eax
  413503:	pop    es
  413504:	add    BYTE PTR [eax-0x1a1ac6af],ch
  41350a:	rol    ebp,cl
  41350c:	xchg   BYTE PTR [ebp+0x2c988de3],bh
  413512:	frstor [esi+0x1f]
  413515:	mov    ebx,0x266ee867
  41351a:	mov    ch,0xbe
  41351c:	into   
  41351d:	dec    DWORD PTR ds:0x427dcc86
  413523:	mov    eax,0x53e05113
  413528:	pop    ds
  413529:	sbb    ah,BYTE PTR [ecx-0x67b6c23a]
  41352f:	pop    ds
  413530:	adc    ah,bl
  413532:	inc    ecx
  413533:	jp     0x413576
  413535:	mov    bh,0xfd
  413537:	xchg   esi,eax
  413538:	mov    bh,0x13
  41353a:	or     esi,DWORD PTR [edi]
  41353c:	cdq    
  41353d:	setnp  BYTE PTR [ebp+0x4b]
  413541:	cmp    al,0x6c
  413543:	loope  0x41359f
  413545:	or     BYTE PTR [esi+0x49],0x73
  413549:	test   DWORD PTR [ebx-0x5d0f0ae],0xc0c2dbe
  413553:	mov    esi,0xfa91a4b5
  413558:	pop    es
  413559:	mov    ?,WORD PTR [eax]
  41355b:	ret    0x34f
  41355e:	js     0x413566
  413560:	mov    ah,0x21
  413562:	jb     0x413531
  413564:	push   0x2d
  413566:	ins    BYTE PTR es:[edi],dx
  413567:	pop    eax
  413568:	sbb    BYTE PTR [edi],dl
  41356a:	fbld   TBYTE PTR [esi-0x3c]
  41356d:	and    eax,0xc72eb236
  413572:	dec    esi
  413573:	and    ebx,DWORD PTR [edi+0x7]
  413576:	sbb    eax,0x6c69dc4d
  41357b:	mov    cs,WORD PTR [ebx+0xd5f3ed0]
  413581:	jle    0x413536
  413583:	xor    DWORD PTR [ebp-0x3a],ebx
  413586:	test   BYTE PTR [ecx-0x2dde74a2],0x87
  41358d:	lock call 0xb31c8ab2
  413593:	sbb    edi,edx
  413595:	lods   al,BYTE PTR ds:[esi]
  413596:	retf   0xbf27
  413599:	inc    ecx
  41359a:	cmp    al,0xa5
  41359c:	cmp    DWORD PTR [esi-0x7ebdb7c6],esp
  4135a2:	xchg   ebp,eax
  4135a3:	fstp   QWORD PTR ds:0x5782d637
  4135a9:	push   ds
  4135aa:	add    DWORD PTR [ebx-0x575667aa],edi
  4135b0:	enter  0x8265,0xd6
  4135b4:	call   0x8993:0xdb5200e4
  4135bb:	pop    esi
  4135bc:	add    DWORD PTR [ebp+ebx*1-0x29cb1922],edx
  4135c3:	pop    ebp
  4135c4:	arpl   WORD PTR [eax+edx*2],sp
  4135c7:	sbb    BYTE PTR [edx+0x1d3bcf67],ch
  4135cd:	ds ret 
  4135cf:	add    ch,BYTE PTR [edx]
  4135d1:	and    BYTE PTR [ebx-0x9],al
  4135d4:	inc    eax
  4135d5:	imul   esp,DWORD PTR [edi-0x11772974],0xffffffb5
  4135dc:	push   cs
  4135dd:	add    bl,BYTE PTR ds:0xd95fc0f9
  4135e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135e4:	or     ecx,DWORD PTR [ecx+0x59f3e8f5]
  4135ea:	das    
  4135eb:	add    bl,cl
  4135ed:	jb     0x413615
  4135ef:	cdq    
  4135f0:	xor    ah,BYTE PTR ds:0x92c75bbb
  4135f6:	fcom   st(6)
  4135f8:	inc    edx
  4135fa:	mov    ds:0x165ab349,eax
  4135ff:	and    DWORD PTR [eax+0x22],ecx
  413602:	inc    ebx
  413603:	test   BYTE PTR [eax],0x9c
  413606:	clc    
  413607:	or     BYTE PTR [esi-0x17],dh
  41360a:	(bad)  
  41360b:	mov    bh,0x4
  41360d:	out    0xee,eax
  41360f:	xchg   edi,eax
  413610:	mov    bl,0x89
  413612:	mov    ecx,fs
  413614:	dec    esp
  413615:	and    eax,0xb7dc563f
  41361a:	aam    0x45
  41361c:	cdq    
  41361d:	pop    es
  41361e:	or     DWORD PTR [eax*4-0x89084ce],edi
  413625:	jne    0x413628
  413627:	pop    esp
  413628:	sahf   
  413629:	nop
  41362a:	push   ecx
  41362b:	fild   DWORD PTR [ebp+0x46fa103d]
  413631:	dec    esi
  413632:	jmp    0x5320:0xba732b07
  413639:	xchg   ebp,eax
  41363a:	leave  
  41363b:	popf   
  41363c:	mov    eax,0xdf4045ae
  413641:	ffreep st(4)
  413643:	jns    0x41368b
  413645:	cmp    ch,BYTE PTR [eax]
  413647:	call   0xd4a0:0x30f7608c
  41364e:	(bad)  
  41364f:	jne    0x413606
  413651:	xchg   esi,eax
  413652:	mov    ds:0xb8da802d,al
  413657:	push   ds
  413658:	mov    eax,DWORD PTR [esi]
  41365a:	fcom   QWORD PTR [ecx]
  41365c:	add    al,0xee
  41365e:	add    eax,0x3884b02a
  413663:	fcom   QWORD PTR [edx-0x5b]
  413666:	sub    ah,BYTE PTR [eax]
  413668:	stos   BYTE PTR es:[edi],al
  413669:	lock retf 0xad70
  41366d:	mov    ch,0x76
  41366f:	mov    al,ds:0x86558fb1
  413674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413675:	int    0x20
  413677:	test   BYTE PTR [edi],dl
  413679:	sub    ah,bl
  41367b:	bound  ebp,QWORD PTR [edx+0x4886d903]
  413681:	mov    edx,ss
  413683:	outs   dx,DWORD PTR ds:[esi]
  413684:	lahf   
  413685:	gs loope 0x413634
  413688:	gs fcmovbe st,st(2)
  41368b:	sub    eax,0xa9cf01d8
  413690:	sub    al,0x9b
  413692:	scas   al,BYTE PTR es:[edi]
  413693:	cmp    DWORD PTR [edx],ebp
  413695:	repz sbb eax,0x70f52074
  41369b:	xor    edi,DWORD PTR [ecx]
  41369d:	mov    dh,0x29
  41369f:	jne    0x413684
  4136a1:	inc    BYTE PTR [eax+eiz*4-0x29]
  4136a5:	mov    bl,0xc9
  4136a7:	mov    BYTE PTR [ecx-0x56068e9e],ch
  4136ad:	mov    al,ds:0x378c54dd
  4136b2:	lods   eax,DWORD PTR ds:[esi]
  4136b3:	out    dx,eax
  4136b4:	xchg   edx,eax
  4136b5:	add    BYTE PTR [ecx-0x21],0xc2
  4136b9:	inc    edx
  4136ba:	retf   
  4136bb:	push   0x7
  4136bd:	xor    eax,0x6eb1a885
  4136c2:	inc    esi
  4136c3:	ficom  WORD PTR [edi]
  4136c5:	push   ss
  4136c6:	aad    0x5c
  4136c8:	xchg   BYTE PTR [edx+eax*8+0x2],ah
  4136cc:	adc    esp,0x3384f900
  4136d2:	lds    ebp,FWORD PTR ds:0xbc15c103
  4136d8:	and    al,0xc4
  4136da:	mov    dh,0xec
  4136dc:	push   ds
  4136dd:	push   ebp
  4136de:	sub    al,0x1f
  4136e0:	out    dx,al
  4136e1:	ficom  DWORD PTR [esi]
  4136e3:	push   es
  4136e4:	and    eax,0xd9d28148
  4136e9:	shl    DWORD PTR [edi],1
  4136eb:	adc    ebp,eax
  4136ed:	xchg   ecx,eax
  4136ee:	stc    
  4136ef:	and    al,0xfc
  4136f1:	stc    
  4136f2:	call   0x2ca1:0x2576af4
  4136f9:	mov    ebx,0x40443fa9
  4136fe:	cmp    eax,0x851c2050
  413703:	xor    ebp,eax
  413705:	jmp    0x18f545b6
  41370a:	(bad)  
  41370c:	push   edx
  41370d:	push   es
  41370e:	ds out 0x32,al
  413711:	pop    esi
  413712:	inc    ebp
  413713:	in     al,0x1
  413715:	icebp  
  413716:	add    BYTE PTR [eax+esi*1-0x42b3816],0xec
  41371e:	leave  
  41371f:	jns    0x4136f3
  413721:	sahf   
  413722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413723:	or     cl,BYTE PTR [ebx]
  413725:	daa    
  413726:	add    ah,BYTE PTR [ecx+0x19]
  413729:	mov    esi,0x638850f2
  41372e:	adc    BYTE PTR [edx],0xc7
  413731:	cmp    BYTE PTR [ecx+0x7529f7e9],ch
  413737:	out    0x70,al
  413739:	mov    cl,0xf2
  41373b:	mov    gs,WORD PTR [ecx-0x2518c92e]
  413741:	and    DWORD PTR [edi],esi
  413743:	add    BYTE PTR [edx+0xa],0xb
  413747:	popf   
  413748:	push   es
  413749:	ins    DWORD PTR es:[edi],dx
  41374a:	mov    ecx,0x7f186c0c
  41374f:	push   0xaa9f1b6c
  413754:	sub    BYTE PTR [eax-0x63],dh
  413757:	mov    al,0x29
  413759:	ja     0x413736
  41375b:	or     BYTE PTR [ecx+0x20a40458],ah
  413761:	pop    esi
  413762:	jle    0x41372d
  413764:	push   esi
  413765:	inc    ecx
  413766:	xor    eax,0x46a3b1c8
  41376b:	hlt    
  41376c:	ss push ss
  41376e:	imul   BYTE PTR [edi+ecx*2+0x5f188a40]
  413775:	jae    0x41378b
  413777:	ret    
  413778:	push   0x92c15ff9
  41377d:	mov    al,ds:0x5b5fd315
  413782:	mov    esi,DWORD PTR [ebx]
  413784:	rcr    BYTE PTR [esi-0x6fcc4188],0xf
  41378b:	or     al,0xbe
  41378d:	test   eax,0x84da4f47
  413792:	enter  0x5ecd,0x8e
  413796:	jns    0x413797
  413798:	popa   
  413799:	mov    esp,0xc7b4f0e1
  41379e:	xor    edi,DWORD PTR [edx+0x6a1fe668]
  4137a4:	clc    
  4137a5:	pushf  
  4137a6:	adc    dl,al
  4137a8:	dec    ecx
  4137a9:	(bad)  
  4137aa:	mov    ah,0x57
  4137ac:	push   0xffffffd5
  4137ae:	jb     0x413767
  4137b0:	adc    al,0xec
  4137b2:	and    eax,0x740c51a8
  4137b7:	jo     0x41375e
  4137b9:	xor    BYTE PTR [eax-0x62],dl
  4137bc:	fdivr  DWORD PTR [ecx+0x1cdd202c]
  4137c2:	mov    DWORD PTR [esi-0x20],0xf564d038
  4137c9:	js     0x413802
  4137cb:	imul   ecx,DWORD PTR [edx-0x60],0xfffffff1
  4137cf:	sub    al,0x15
  4137d1:	mov    ch,0xd7
  4137d3:	in     al,0x96
  4137d5:	jb     0x4137a2
  4137d7:	call   0x1047d9e5
  4137dc:	mov    ds:0x15b544c,eax
  4137e1:	jns    0x4137e2
  4137e3:	xchg   ebp,eax
  4137e4:	ins    DWORD PTR es:[edi],dx
  4137e5:	add    BYTE PTR [ebp+0xd],dl
  4137e8:	mov    ds:0x35db6e55,eax
  4137ed:	es sahf 
  4137ef:	inc    esp
  4137f0:	adc    BYTE PTR [eax+edx*1-0x29],ch
  4137f4:	mov    edi,0xe7a62caa
  4137f9:	and    DWORD PTR [edx-0x11],ecx
  4137fc:	hlt    
  4137fd:	in     al,0xd9
  4137ff:	leave  
  413800:	dec    edx
  413801:	xchg   ebp,eax
  413802:	es pop ebp
  413804:	add    cl,BYTE PTR [esi]
  413806:	inc    esi
  413807:	sar    edi,1
  413809:	add    al,0x6a
  41380b:	sar    DWORD PTR [edi+0x61af7dad],1
  413811:	ja     0x413878
  413813:	leave  
  413814:	pop    edx
  413815:	jecxz  0x413804
  413817:	adc    eax,0x59d941c8
  41381c:	cli    
  41381d:	lods   ax,WORD PTR ds:[esi]
  41381f:	mov    ds:0x4410531a,eax
  413824:	(bad)  
  413825:	aad    0xc5
  413827:	add    ebx,DWORD PTR ds:0x66ee4f26
  41382d:	and    BYTE PTR [esi],cl
  41382f:	jno    0x4138a0
  413831:	dec    eax
  413832:	jle    0x413863
  413834:	xor    eax,eax
  413836:	enter  0x45,0x75
  41383a:	shl    ebp,1
  41383c:	jmp    0x2809890f
  413841:	mov    ecx,DWORD PTR [esi+0x7c]
  413844:	pop    ss
  413845:	stos   BYTE PTR es:[edi],al
  413846:	mov    ah,0x17
  413848:	(bad)  
  413849:	js     0x41385b
  41384b:	das    
  41384c:	inc    ebp
  41384d:	bound  edi,QWORD PTR ds:0x737660dc
  413853:	lods   al,BYTE PTR ds:[esi]
  413854:	repnz sahf 
  413856:	push   ebx
  413857:	jb     0x4138a1
  413859:	(bad)  
  41385b:	fidivr DWORD PTR [eax+edi*2]
  41385e:	into   
  41385f:	(bad)  
  413860:	sbb    eax,0xf5596924
  413865:	imul   ebx,DWORD PTR [edi],0xfcc8749a
  41386b:	aaa    
  41386c:	xchg   edi,eax
  41386d:	cmp    eax,0x14b315b5
  413872:	push   0x39
  413874:	push   ecx
  413875:	mov    bh,0x11
  413877:	repz push edi
  413879:	sbb    eax,0x6cc27ec8
  41387e:	(bad)  
  41387f:	pop    ebp
  413880:	aam    0x6a
  413882:	sbb    ecx,DWORD PTR [edi-0x58cf952b]
  413888:	mov    dh,0x56
  41388a:	std    
  41388b:	ds out 0x6f,al
  41388e:	push   ds
  41388f:	jge    0x4138b6
  413891:	mov    DWORD PTR [edi],ebp
  413893:	jl     0x413901
  413895:	shl    BYTE PTR [ecx+edx*8-0x7932c361],1
  41389c:	cmp    dh,bh
  41389e:	xlat   BYTE PTR ds:[ebx]
  41389f:	push   ebx
  4138a1:	mov    ecx,0x3494422a
  4138a6:	add    ebp,DWORD PTR [esi+0x4c]
  4138a9:	enter  0xc6e5,0x4f
  4138ad:	push   0xffffffef
  4138af:	js     0x4138e5
  4138b1:	xchg   edi,eax
  4138b2:	mov    ch,0xfd
  4138b4:	in     al,0x6c
  4138b6:	xchg   ebx,eax
  4138b7:	or     al,0xbb
  4138b9:	outs   dx,BYTE PTR ds:[esi]
  4138ba:	popa   
  4138bb:	fcom   QWORD PTR [edx-0x10]
  4138be:	rcr    ebx,cl
  4138c0:	fdivrp st(4),st
  4138c2:	aaa    
  4138c3:	xlat   BYTE PTR ds:[ebx]
  4138c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138c6:	imul   esp,DWORD PTR ds:0x336636b2,0x7f
  4138cd:	add    ch,BYTE PTR [eax]
  4138cf:	mov    dl,0xed
  4138d1:	lods   al,BYTE PTR ds:[esi]
  4138d2:	push   ss
  4138d3:	stc    
  4138d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d5:	sub    eax,DWORD PTR [eax+eiz*8+0x1e]
  4138d9:	pop    ds
  4138da:	add    eax,0x4ab3eeb1
  4138df:	loopne 0x41387d
  4138e1:	icebp  
  4138e2:	dec    edx
  4138e3:	sub    BYTE PTR [ebp+0x2031fbb9],ch
  4138e9:	push   edi
  4138ea:	sbb    BYTE PTR [eax],ah
  4138ec:	mov    ah,0x87
  4138ee:	mov    bl,0xfa
  4138f0:	retf   0x9e51
  4138f3:	mov    al,0x21
  4138f5:	mov    ch,0xab
  4138f7:	or     BYTE PTR [esi],dl
  4138f9:	js     0x4138ca
  4138fb:	loopne 0x4138a9
  4138fd:	sbb    BYTE PTR [ebx-0x15],al
  413900:	jp     0x4138ca
  413902:	mov    ecx,0x33476a6
  413907:	(bad)  
  413908:	shr    DWORD PTR [edi-0x7908ffc6],0x19
  41390f:	xor    ebp,DWORD PTR [ebp+0x74eccd3e]
  413915:	out    dx,eax
  413916:	inc    edi
  413917:	stos   DWORD PTR es:[edi],eax
  413918:	test   al,0x7c
  41391a:	dec    DWORD PTR [ebx-0x7a07feee]
  413920:	jo     0x4138be
  413922:	xor    dh,bh
  413924:	(bad)  
  413925:	repz in al,0xdb
  413928:	clc    
  413929:	stos   BYTE PTR es:[edi],al
  41392a:	jmp    0x4138d0
  41392c:	sbb    DWORD PTR [ecx],eax
  41392e:	lods   al,BYTE PTR ds:[esi]
  41392f:	lahf   
  413930:	jae    0x41397a
  413932:	xchg   sp,ax
  413934:	sbb    eax,0xef555696
  413939:	daa    
  41393a:	iret   
  41393b:	jl     0x41396f
  41393d:	inc    ecx
  41393e:	cdq    
  41393f:	fstp   DWORD PTR [esi]
  413941:	dec    esi
  413942:	call   0x9414:0xd4e149b5
  413949:	add    bh,bl
  41394b:	fistp  WORD PTR [esp+0x532971c]
  413952:	add    al,dh
  413954:	jge    0x4138d8
  413956:	sub    ebp,DWORD PTR [edx+0x62]
  413959:	push   es
  41395a:	inc    esp
  41395b:	das    
  41395c:	jmp    0x4138e7
  41395e:	mov    edi,ebx
  413960:	and    eax,0x186c02bf
  413965:	data16 hlt 
  413967:	aad    0x63
  413969:	inc    edx
  41396a:	mov    dh,0x84
  41396c:	xchg   cl,dh
  41396e:	pop    ds
  41396f:	iret   
  413970:	mov    eax,0xb93d6489
  413975:	repnz mov edx,0x4bc5c590
  41397b:	enter  0x9f63,0xc8
  41397f:	mov    ebx,edi
  413981:	aaa    
  413982:	cwde   
  413983:	pop    ecx
  413984:	sub    ecx,edx
  413986:	(bad)
  413989:	ret    0x5f79
  41398c:	jns    0x4139b3
  41398e:	push   cs
  41398f:	jp     0x41391c
  413991:	cld    
  413992:	arpl   WORD PTR ds:0x88d6,dx
  413997:	(bad)  
  413998:	fisttp WORD PTR es:[ecx-0x67d0e25]
  41399f:	test   DWORD PTR [ebx-0x10ec6034],ecx
  4139a5:	push   0xf468aaf8
  4139aa:	mov    ds:0x1bcef075,al
  4139af:	pop    eax
  4139b0:	ins    BYTE PTR es:[edi],dx
  4139b1:	loope  0x413a32
  4139b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b4:	adc    BYTE PTR [eax+0x3b3f79e9],bh
  4139ba:	fucomi st,st(7)
  4139bc:	std    
  4139bd:	pop    ds
  4139be:	test   al,0x7
  4139c0:	adc    al,0xaa
  4139c2:	pop    edi
  4139c3:	jle    0x413a08
  4139c5:	in     al,0xdc
  4139c7:	mov    esi,0x4468c530
  4139cc:	jbe    0x4139c4
  4139ce:	shl    ecx,cl
  4139d0:	adc    dl,BYTE PTR [ecx+0x176e2468]
  4139d6:	dec    eax
  4139d7:	push   ebx
  4139d8:	inc    ebp
  4139d9:	call   0x86f6b2c0
  4139de:	inc    esi
  4139df:	xchg   ebx,eax
  4139e0:	mov    edx,0xd6d6f33e
  4139e5:	dec    ebx
  4139e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139e7:	or     DWORD PTR [esi+eiz*2-0x6ba2b6a],ebp
  4139ee:	pop    ds
  4139ef:	and    al,0xc9
  4139f1:	fidivr WORD PTR [ebp+0x70e913b]
  4139f7:	pop    ebp
  4139f8:	jg     0x41399f
  4139fa:	and    al,0xca
  4139fc:	cld    
  4139fd:	es dec esp
  4139ff:	mov    edi,0xeef15f6c
  413a04:	call   0x7b451bed
  413a09:	in     eax,0x73
  413a0b:	mov    ch,0x81
  413a0d:	fild   WORD PTR [ebx-0x33219f84]
  413a13:	loop   0x4139c4
  413a15:	and    BYTE PTR [edx+ebp*8+0x79],ah
  413a19:	sti    
  413a1a:	mov    bh,0x22
  413a1c:	daa    
  413a1d:	pop    ds
  413a1e:	jno    0x413a91
  413a20:	fstp   QWORD PTR [ebx]
  413a22:	out    0x87,al
  413a24:	or     al,0x19
  413a26:	xchg   esp,eax
  413a27:	xchg   esp,eax
  413a28:	pop    ds
  413a29:	push   ebp
  413a2a:	add    ecx,ebx
  413a2c:	push   ebp
  413a2d:	cmp    cl,dl
  413a2f:	xlat   BYTE PTR ds:[ebx]
  413a30:	repz dec ebp
  413a32:	daa    
  413a33:	or     edi,DWORD PTR [esi+0x4cf83a74]
  413a39:	es xchg ecx,eax
  413a3b:	sbb    cl,BYTE PTR [esi+edx*4-0x49]
  413a3f:	mov    al,0xd4
  413a41:	shl    DWORD PTR [edi],1
  413a43:	jmp    FWORD PTR [ecx-0x536ce7fa]
  413a49:	cmc    
  413a4a:	add    eax,0x8f994676
  413a4f:	push   edx
  413a50:	or     DWORD PTR [ebp+0x4cbcf527],esp
  413a56:	xlat   BYTE PTR ds:[ebx]
  413a57:	test   al,0x25
  413a59:	sub    DWORD PTR [ebp+0x1b],ebp
  413a5c:	jmp    FWORD PTR [ebx-0x7c]
  413a5f:	loopne 0x413a38
  413a61:	loope  0x413a17
  413a63:	popf   
  413a64:	ret    
  413a65:	aam    0xae
  413a67:	std    
  413a68:	or     ecx,DWORD PTR [esp+ecx*2+0x2114c532]
  413a6f:	mov    eax,0x2c5ef10a
  413a74:	inc    edx
  413a75:	into   
  413a76:	call   0xce7a:0xed9c4f98
  413a7d:	xchg   ecx,eax
  413a7e:	cmp    edi,esi
  413a80:	cwde   
  413a81:	mov    WORD PTR ds:0x2bed617e,fs
  413a87:	hlt    
  413a88:	sbb    eax,DWORD PTR [ecx]
  413a8a:	or     edx,DWORD PTR [esi]
  413a8c:	out    dx,eax
  413a8d:	mov    DWORD PTR [edx-0x3d],ecx
  413a90:	out    0x77,eax
  413a92:	lahf   
  413a93:	icebp  
  413a94:	in     eax,dx
  413a95:	fisttp DWORD PTR [esi-0x66]
  413a98:	cdq    
  413a99:	jb     0x413a63
  413a9b:	jae    0x413a65
  413a9d:	cwde   
  413a9e:	pop    edx
  413a9f:	xor    eax,0x33172bd5
  413aa4:	enter  0xf68a,0xec
  413aa8:	jmp    0xbcaca6ba
  413aad:	sub    eax,0x91a73ce7
  413ab2:	or     eax,0x66be91e1
  413ab7:	nop
  413ab8:	test   edx,0x62c5e0b4
  413abe:	(bad)  
  413abf:	cmp    al,0x4c
  413ac1:	and    ebp,edi
  413ac3:	jmp    0x95c1:0xc3158355
  413aca:	popa   
  413acb:	lds    ebx,FWORD PTR [esi]
  413acd:	shr    DWORD PTR [esi],0x83
  413ad0:	and    BYTE PTR ds:0xa5b18532,dl
  413ad6:	cli    
  413ad7:	xor    edi,DWORD PTR [ebp+0x6146f468]
  413add:	arpl   WORD PTR [eax],bx
  413adf:	nop
  413ae0:	fcom   QWORD PTR [ebx-0x54]
  413ae3:	xor    eax,0x84f8bebe
  413ae8:	add    BYTE PTR [ecx*2+0x6550dc72],bl
  413aef:	out    0xde,eax
  413af1:	or     BYTE PTR ds:0xb26a160e,dl
  413af7:	and    ah,BYTE PTR [edi+edx*1]
  413afa:	mov    dh,dl
  413afc:	sub    DWORD PTR [ebx+0x44],0x0
  413b00:	scas   eax,DWORD PTR es:[edi]
  413b01:	std    
  413b02:	mov    bh,0x75
  413b04:	addr16 (bad) 
  413b06:	into   
  413b07:	mov    ds:0xecf7dfdf,eax
  413b0c:	bound  esp,QWORD PTR es:[ecx]
  413b0f:	in     al,0x3f
  413b11:	repz jo 0x413ae9
  413b14:	fidivr DWORD PTR [ebp+ecx*8+0x7a]
  413b18:	mov    bx,0x43a9
  413b1c:	aam    0xca
  413b1e:	arpl   WORD PTR [ecx],ax
  413b20:	repnz xchg ecx,eax
  413b22:	gs retf 
  413b24:	mov    dl,0x79
  413b26:	and    al,0xda
  413b28:	xor    dl,al
  413b2a:	cmp    eax,0xc2311d4b
  413b2f:	ins    DWORD PTR es:[edi],dx
  413b30:	add    BYTE PTR [ebx+0x1],0x12
  413b34:	popf   
  413b35:	pop    ebx
  413b36:	loope  0x413b98
  413b38:	mov    dh,0xa8
  413b3a:	mov    ebx,0x49dea0ca
  413b3f:	clc    
  413b40:	fadd   st,st(4)
  413b42:	adc    dh,BYTE PTR [edi]
  413b44:	rol    DWORD PTR [esi+0x365feb4b],0x8b
  413b4b:	aaa    
  413b4c:	mov    DWORD PTR [edi],ebx
  413b4e:	jp     0x413b1e
  413b50:	and    BYTE PTR [bp+di-0x114e],cl
  413b55:	inc    esi
  413b56:	jecxz  0x413b74
  413b58:	pushf  
  413b59:	clc    
  413b5a:	cmp    al,0xd0
  413b5c:	fs push edi
  413b5e:	mov    eax,ebx
  413b60:	inc    edi
  413b61:	xor    edx,DWORD PTR cs:[esi-0x2e]
  413b65:	or     dl,ch
  413b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b68:	adc    BYTE PTR [eax+0x4c],dh
  413b6b:	mov    esp,eax
  413b6d:	add    eax,0x77b14bcd
  413b72:	cmp    esi,DWORD PTR [ecx]
  413b74:	sub    ecx,0x773889de
  413b7a:	repnz pop ebp
  413b7c:	lock jp 0x413b50
  413b7f:	mov    WORD PTR [ecx+0x7],ds
  413b82:	add    eax,0x4f42914
  413b87:	jp     0x413b3e
  413b89:	or     bh,BYTE PTR es:[esi+0x28]
  413b8d:	pop    ss
  413b8e:	out    dx,eax
  413b8f:	mov    ss,WORD PTR [esp+edi*1+0x7d]
  413b93:	ins    DWORD PTR es:[edi],dx
  413b94:	rol    DWORD PTR [eax-0x5f],0xe5
  413b98:	loope  0x413b8e
  413b9a:	cwde   
  413b9b:	les    eax,FWORD PTR [esi-0x68]
  413b9e:	xlat   BYTE PTR ds:[ebx]
  413b9f:	popa   
  413ba0:	or     esp,DWORD PTR [edx+0x625500c9]
  413ba6:	iret   
  413ba7:	fadd   QWORD PTR [edx+eax*1+0x40]
  413bab:	jae    0x413b8c
  413bad:	sbb    al,dh
  413baf:	arpl   WORD PTR [esi+0x52],sp
  413bb2:	push   esi
  413bb3:	push   esi
  413bb4:	or     ch,0x5b
  413bb7:	add    edx,DWORD PTR [edx-0x3efa7c8]
  413bbd:	and    eax,0x1eb88154
  413bc2:	mov    ds:0x11203dce,al
  413bc7:	ss (bad) 
  413bca:	fwait
  413bcb:	xchg   edi,eax
  413bcc:	into   
  413bcd:	cmp    eax,0x7750509e
  413bd2:	mov    ds:0x9d4d3f77,eax
  413bd7:	dec    esi
  413bd8:	neg    edi
  413bda:	push   es
  413bdb:	adc    al,0xd5
  413bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bde:	popa   
  413bdf:	lods   eax,DWORD PTR ds:[esi]
  413be0:	sahf   
  413be1:	mov    ecx,0xc732fe32
  413be6:	xchg   esp,eax
  413be7:	push   edx
  413be8:	or     dh,BYTE PTR [edi]
  413bea:	push   cs
  413beb:	jl     0x413c0c
  413bed:	or     DWORD PTR [ecx*8+0x3b26954e],ebp
  413bf4:	push   edx
  413bf5:	data16 sti 
  413bf7:	and    DWORD PTR [ebx],esi
  413bf9:	jmp    0x413bb0
  413bfb:	ins    BYTE PTR es:[edi],dx
  413bfc:	rcl    BYTE PTR [edx],1
  413bfe:	popa   
  413bff:	or     al,0x8d
  413c01:	push   eax
  413c02:	push   0xfffffffd
  413c04:	jmp    0x413c3a
  413c06:	and    al,BYTE PTR ds:0xd43a1307
  413c0c:	retf   
  413c0d:	sti    
  413c0e:	and    ch,bh
  413c10:	je     0x413c40
  413c12:	and    eax,0x5a5dd901
  413c17:	and    BYTE PTR [eax+0x7e],dh
  413c1a:	dec    ebx
  413c1b:	cmp    ah,bh
  413c1d:	ds push ecx
  413c1f:	std    
  413c20:	jl     0x413ba7
  413c22:	fisttp WORD PTR ss:[ecx]
  413c25:	out    0xa7,al
  413c27:	daa    
  413c28:	jmp    0x1c58:0xe7441946
  413c2f:	ss in  al,dx
  413c31:	sub    cl,bl
  413c33:	pop    ecx
  413c34:	adc    al,0xd
  413c36:	and    al,0xa8
  413c38:	fbstp  TBYTE PTR [ebp+ebp*4-0x5177bbbc]
  413c3f:	jge    0x413c74
  413c41:	lahf   
  413c42:	cmp    eax,0x16eaf439
  413c47:	(bad)  
  413c48:	lahf   
  413c49:	test   DWORD PTR [edx+0x3],0x4d71c0bb
  413c50:	cdq    
  413c51:	shl    DWORD PTR [eax+0x4c],cl
  413c54:	sbb    DWORD PTR [ebx-0x5b],0xffffffd7
  413c58:	dec    esi
  413c59:	push   esi
  413c5a:	loope  0x413c85
  413c5c:	add    ebp,edi
  413c5e:	add    eax,0xeace967a
  413c63:	cmp    ecx,0xffffffd6
  413c66:	retf   0xa74b
  413c69:	in     al,0xca
  413c6b:	and    DWORD PTR [ecx-0x5d],esi
  413c6e:	arpl   dx,ax
  413c70:	ja     0x413ce1
  413c72:	push   edi
  413c73:	mov    esp,0x6e3d5007
  413c78:	ret    
  413c79:	and    ebx,ebx
  413c7b:	xor    edx,DWORD PTR fs:[edi-0x7f]
  413c7f:	cmp    bh,bh
  413c81:	icebp  
  413c82:	mov    ecx,0xfc421977
  413c87:	or     ecx,DWORD PTR [edi+0x4d9656e4]
  413c8d:	outs   dx,DWORD PTR ds:[esi]
  413c8e:	xchg   esi,eax
  413c8f:	mov    dh,0x37
  413c91:	imul   eax,edi,0xfced1d3
  413c97:	jb     0x413c7a
  413c99:	lds    esi,FWORD PTR [esp+eax*4]
  413c9c:	jno    0x413c57
  413c9e:	test   BYTE PTR [esp+esi*4],bh
  413ca1:	mov    bh,0xe5
  413ca3:	popa   
  413ca4:	jae    0x413c46
  413ca6:	fcmovu st,st(7)
  413ca8:	and    eax,0x99df39a2
  413cad:	mov    ds:0x228840ca,eax
  413cb2:	jge    0x413d04
  413cb4:	in     al,dx
  413cb5:	in     al,0x0
  413cb7:	ror    ah,0x71
  413cba:	ins    DWORD PTR es:[edi],dx
  413cbb:	xor    bh,bh
  413cbd:	inc    edx
  413cbe:	fimul  WORD PTR [edx+0xd]
  413cc1:	sar    DWORD PTR [esi-0x4a52302b],0x72
  413cc8:	and    eax,0x8b87a7f7
  413ccd:	mov    ds:0x92716417,eax
  413cd2:	ret    
  413cd3:	in     al,0x3c
  413cd5:	fnstcw WORD PTR [edx-0x2dee65]
  413cdb:	sti    
  413cdc:	outs   dx,BYTE PTR ds:[esi]
  413cdd:	dec    ebp
  413cde:	sbb    bl,BYTE PTR [edx-0x33]
  413ce1:	jo     0x413cba
  413ce3:	add    al,0xfa
  413ce5:	xchg   esp,eax
  413ce6:	dec    esp
  413ce7:	scas   al,BYTE PTR es:[edi]
  413ce8:	xchg   DWORD PTR [edx+0x17125ea6],esp
  413cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cef:	ficomp DWORD PTR [ecx+0x68]
  413cf2:	(bad)  
  413cf3:	fisttp QWORD PTR [ecx-0x1e]
  413cf6:	adc    al,0xff
  413cf8:	mov    ds:0xc89904ae,eax
  413cfd:	cwde   
  413cfe:	mov    ds:0xe036725f,eax
  413d03:	pop    ds
  413d04:	jne    0x413cba
  413d06:	sbb    DWORD PTR [ebx+0x6547b827],0xf9ee9555
  413d10:	xor    ebp,DWORD PTR [esi]
  413d12:	xchg   edi,eax
  413d13:	das    
  413d14:	dec    esp
  413d15:	ror    dh,0xb5
  413d18:	mov    al,0x6a
  413d1a:	jb     0x413ccb
  413d1c:	repz cmp BYTE PTR [esi-0x6d8a6cd0],dh
  413d23:	ror    DWORD PTR ds:0xe601681c,0x9e
  413d2a:	leave  
  413d2b:	or     DWORD PTR ds:0x88a0e888,ecx
  413d31:	int    0x80
  413d33:	sub    bl,BYTE PTR [edx-0x1c]
  413d36:	(bad)  
  413d37:	mov    eax,0x1c19c162
  413d3c:	in     eax,0xc2
  413d3e:	mov    cr0,ecx
  413d41:	and    ebx,DWORD PTR [edx]
  413d43:	jnp    0x413d14
  413d45:	push   cs
  413d46:	sbb    BYTE PTR [esi],al
  413d48:	enter  0xa650,0xa
  413d4c:	out    0x5f,al
  413d4e:	stos   BYTE PTR es:[edi],al
  413d4f:	inc    ebp
  413d50:	imul   ebp,DWORD PTR [esi],0xffffff8d
  413d53:	pusha  
  413d54:	ins    DWORD PTR es:[edi],dx
  413d55:	mov    edi,0x17ce4e8d
  413d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d5b:	jecxz  0x413d11
  413d5d:	mov    eax,edi
  413d5f:	mov    ch,0xf3
  413d61:	fwait
  413d62:	sub    edx,edi
  413d64:	sub    BYTE PTR [ecx],ch
  413d66:	ja     0x413d81
  413d68:	and    ch,bh
  413d6a:	daa    
  413d6b:	aam    0x6e
  413d6d:	jp     0x413d51
  413d6f:	pop    ds
  413d70:	add    al,BYTE PTR [edi-0x25]
  413d73:	in     al,0xd
  413d75:	jb     0x413d88
  413d77:	dec    ebp
  413d78:	ror    BYTE PTR [ebx+0x75eefb79],1
  413d7e:	daa    
  413d7f:	or     edx,esp
  413d81:	and    eax,0xe6bb3dd8
  413d86:	mov    ebp,0xbd05aaca
  413d8b:	add    DWORD PTR [edi-0x5ead23bf],ebp
  413d91:	jmp    0x413d72
  413d93:	dec    ecx
  413d94:	or     eax,0x21019001
  413d99:	push   ecx
  413d9a:	push   edx
  413d9b:	daa    
  413d9c:	mov    bh,0x88
  413d9e:	imul   eax,DWORD PTR [edi+edi*4],0x6e754344
  413da5:	sub    ebx,edi
  413da7:	mov    ds:0x13729cc2,al
  413dac:	jns    0x413dd3
  413dae:	lods   eax,DWORD PTR ds:[esi]
  413daf:	fnstsw WORD PTR [ebx]
  413db1:	retf   0x4281
  413db4:	or     BYTE PTR [esi-0x442d472f],cl
  413dba:	into   
  413dbb:	test   BYTE PTR [ebx+0x59747bcb],0x52
  413dc2:	and    al,0xf
  413dc4:	(bad)  
  413dc5:	inc    eax
  413dc6:	add    dh,ah
  413dc8:	xor    al,bl
  413dca:	leave  
  413dcb:	jp     0x413e19
  413dcd:	test   eax,0x1758ca4e
  413dd2:	lods   al,BYTE PTR ds:[esi]
  413dd3:	jo     0x413e46
  413dd5:	stos   DWORD PTR es:[edi],eax
  413dd6:	jne    0x413ddf
  413dd8:	out    0x44,al
  413dda:	adc    edi,DWORD PTR [edx+0x78]
  413ddd:	mov    ecx,0x26c06934
  413de2:	pusha  
  413de3:	shr    BYTE PTR [eax],0x59
  413de6:	aas    
  413de7:	jmp    FWORD PTR [ebx]
  413de9:	and    eax,0x1691c70b
  413dee:	fcmovnb st,st(1)
  413df0:	mov    ebp,0x50d7106b
  413df5:	jno    0x413e53
  413df7:	xor    DWORD PTR [edi],eax
  413df9:	daa    
  413dfa:	mov    ds:0x8c1d7b09,al
  413dff:	inc    ebx
  413e00:	sti    
  413e01:	add    DWORD PTR [esi+0x66],esp
  413e04:	push   eax
  413e05:	sbb    DWORD PTR [ebx+0x25],0xfffffff5
  413e09:	cmp    eax,0xc8fb1e48
  413e0e:	xchg   ecx,eax
  413e0f:	ret    0xfb51
  413e12:	xchg   edi,eax
  413e13:	stc    
  413e14:	mov    ecx,0xb83ec3db
  413e19:	xor    ch,BYTE PTR [eax+ebx*1-0x79]
  413e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1e:	leave  
  413e1f:	test   cl,bh
  413e21:	hlt    
  413e22:	adc    eax,0x82b725f2
  413e27:	test   al,0x7e
  413e29:	push   eax
  413e2a:	mov    eax,0x125ec37
  413e2f:	mov    bh,0x28
  413e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e32:	jmp    0x413e86
  413e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e35:	push   0xd45853ad
  413e3a:	xor    eax,0x557b0ff4
  413e3f:	inc    edx
  413e40:	inc    edx
  413e41:	jle    0x413e4e
  413e43:	in     al,0x13
  413e45:	arpl   WORD PTR [edi],di
  413e47:	cs cs dec ebp
  413e4a:	mov    ebp,0x15ebeda5
  413e4f:	sbb    ebx,DWORD PTR [edx+0x24522141]
  413e55:	jns    0x413e09
  413e57:	shl    DWORD PTR [edi+0x57],cl
  413e5a:	fdivr  DWORD PTR [ebx]
  413e5c:	sub    ah,BYTE PTR [ebp+esi*2+0x595964af]
  413e63:	jp     0x413e71
  413e65:	in     eax,dx
  413e66:	bnd je 0x413ee2
  413e69:	add    bl,dh
  413e6b:	xchg   edi,eax
  413e6c:	fs or  ecx,edi
  413e6f:	repz push ebx
  413e71:	das    
  413e72:	test   al,0x6e
  413e74:	jmp    0x316f:0xd4c8c5d2
  413e7b:	jmp    0x5965:0x229b2292
  413e82:	out    dx,al
  413e83:	sbb    al,0x96
  413e85:	inc    ecx
  413e86:	out    dx,al
  413e87:	(bad)  [eax+0x29]
  413e8a:	inc    esi
  413e8b:	xlat   BYTE PTR ds:[ebx]
  413e8c:	outs   dx,DWORD PTR ds:[esi]
  413e8d:	in     eax,0xd5
  413e8f:	dec    ecx
  413e90:	pusha  
  413e91:	sti    
  413e92:	add    DWORD PTR [ebx+0x49],ebx
  413e95:	test   ecx,esp
  413e97:	xor    eax,0x95c7a927
  413e9c:	std    
  413e9d:	push   ss
  413e9e:	and    BYTE PTR [ebp+ebp*8-0x47],bl
  413ea2:	daa    
  413ea3:	mov    dl,BYTE PTR [ebx-0x66c51c41]
  413ea9:	cmp    eax,0xab330838
  413eae:	mov    ds:0xacb8f3c5,al
  413eb3:	inc    eax
  413eb4:	retf   
  413eb5:	inc    ebx
  413eb6:	test   DWORD PTR [esi-0x1a],esp
  413eb9:	xor    al,0x41
  413ebb:	inc    ebp
  413ebc:	pop    edi
  413ebd:	jp     0x413e70
  413ebf:	sub    dl,bl
  413ec1:	cwde   
  413ec2:	pop    ebx
  413ec3:	daa    
  413ec4:	adc    eax,ebp
  413ec6:	inc    ebp
  413ec7:	xchg   DWORD PTR [esi-0x31607eef],ecx
  413ecd:	retf   
  413ece:	dec    ebp
  413ecf:	nop
  413ed0:	out    0xec,al
  413ed2:	pop    ebx
  413ed3:	xor    bl,bl
  413ed5:	mov    ch,0x6a
  413ed7:	or     cl,BYTE PTR [edi]
  413ed9:	std    
  413eda:	ficomp DWORD PTR [eax]
  413edc:	or     eax,0xf70abfe5
  413ee1:	(bad)  
  413ee2:	jb     0x413f17
  413ee4:	adc    dl,BYTE PTR [eax]
  413ee6:	mov    WORD PTR [eax-0x77],cs
  413ee9:	dec    eax
  413eea:	pop    edi
  413eeb:	sub    ebx,ebx
  413eed:	jmp    FWORD PTR [ebx]
  413eef:	or     DWORD PTR [ebp-0x2c],eax
  413ef2:	or     edx,ebx
  413ef4:	dec    esi
  413ef5:	add    bh,dh
  413ef7:	leave  
  413ef8:	icebp  
  413ef9:	pop    esp
  413efa:	into   
  413efb:	and    eax,0xd0d7435a
  413f00:	test   al,0x90
  413f02:	jbe    0x413ef2
  413f04:	sahf   
  413f05:	xor    esi,esp
  413f07:	out    0x21,al
  413f09:	mov    ah,0x4c
  413f0b:	add    esi,DWORD PTR [edi+eax*1-0x5c94344d]
  413f12:	retf   0x9727
  413f15:	mov    WORD PTR [edx-0x2b],gs
  413f18:	call   0x676d:0xeadaee3e
  413f1f:	jb     0x413edc
  413f21:	xchg   esp,eax
  413f22:	pushf  
  413f23:	mov    ch,0x12
  413f25:	cli    
  413f26:	repz mov dh,al
  413f29:	sub    ah,BYTE PTR [edi+0x14c806db]
  413f2f:	add    DWORD PTR [edx-0xd8c2039],eax
  413f35:	or     dh,BYTE PTR [ebp+eiz*4-0x40]
  413f39:	lods   al,BYTE PTR ds:[esi]
  413f3a:	lods   al,BYTE PTR ds:[esi]
  413f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3c:	pop    edx
  413f3d:	jmp    0x413edb
  413f3f:	repz bound eax,QWORD PTR [ecx]
  413f42:	add    edx,DWORD PTR [ecx-0x1f]
  413f45:	pop    esp
  413f46:	push   0x26a9904
  413f4b:	and    edx,eax
  413f4d:	lods   eax,DWORD PTR ds:[esi]
  413f4e:	mov    eax,0x2b26da51
  413f53:	xor    BYTE PTR [eax+0x1321f1e0],0x43
  413f5a:	push   ds
  413f5b:	stos   DWORD PTR es:[edi],eax
  413f5c:	lods   al,BYTE PTR ds:[esi]
  413f5d:	push   0xffffffa1
  413f5f:	hlt    
  413f60:	div    eax
  413f62:	and    eax,0x1257343c
  413f67:	sti    
  413f68:	retf   0xe799
  413f6b:	dec    edi
  413f6c:	jbe    0x413f90
  413f6e:	push   cs
  413f6f:	adc    eax,0x7ef86409
  413f74:	out    dx,al
  413f75:	pop    esi
  413f76:	mov    esp,0xc284d616
  413f7b:	dec    ebp
  413f7c:	xchg   esp,eax
  413f7d:	inc    ebx
  413f7e:	or     al,0xa5
  413f80:	jnp    0x413f5e
  413f82:	push   ebp
  413f83:	mov    edx,0x1046402f
  413f88:	cmp    DWORD PTR [ebx],edx
  413f8a:	pop    edi
  413f8b:	popf   
  413f8c:	mov    al,0x83
  413f8e:	data16 jno 0x413f89
  413f91:	mov    edi,0xca0d106f
  413f96:	ins    DWORD PTR es:[edi],dx
  413f97:	mov    ah,0xe0
  413f99:	pop    esi
  413f9a:	ja     0x414017
  413f9c:	(bad)  
  413f9d:	in     eax,0xd9
  413f9f:	ins    DWORD PTR es:[edi],dx
  413fa0:	jle    0x413fa1
  413fa2:	retf   0xef9c
  413fa5:	mov    esi,0xd1eb5a00
  413faa:	push   esp
  413fab:	adc    al,BYTE PTR [edi-0x2556d033]
  413fb1:	sbb    dl,al
  413fb3:	aaa    
  413fb4:	inc    esp
  413fb5:	xor    BYTE PTR [eax-0x695ad289],bl
  413fbb:	jmp    0x63c1b46a
  413fc0:	aad    0xce
  413fc2:	test   DWORD PTR ds:[esi-0x5b],ecx
  413fc6:	fxch   st(7)
  413fc8:	std    
  413fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fca:	mov    ebx,0x57afd3c6
  413fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd0:	xchg   edi,eax
  413fd1:	mov    cs,WORD PTR ds:0x3256025f
  413fd7:	in     al,0xf6
  413fd9:	imul   edx,DWORD PTR [edi-0x61],0x42
  413fdd:	pop    edx
  413fde:	(bad)  
  413fdf:	jmp    0x8462:0xe43030a8
  413fe6:	and    al,0x43
  413fe8:	dec    ebp
  413fe9:	add    BYTE PTR [ebx+0x4ada98dc],al
  413fef:	imul   edi,ebx,0xb2124150
  413ff5:	cwde   
  413ff6:	sbb    DWORD PTR [ebp-0x106475df],0xdd5207f7
  414000:	sub    bl,BYTE PTR [ebx]
  414002:	sub    BYTE PTR fs:[ebx+0x6026e667],cl
  414009:	mov    ecx,0xf415e29b
  41400e:	push   edx
  41400f:	jae    0x413f9c
  414011:	adc    eax,0x35d6ec6a
  414016:	pop    DWORD PTR [edx]
  414018:	retf   
  414019:	sbb    eax,0x1a9df24c
  41401e:	sbb    BYTE PTR [esi+0x6e54f636],dl
  414024:	sbb    al,0xb1
  414026:	mov    dl,0xf5
  414028:	test   BYTE PTR fs:[ebx+0x70790889],dl
  41402f:	adc    eax,0x7aac8b63
  414034:	xchg   ecx,eax
  414035:	pushf  
  414036:	ficomp WORD PTR [ecx]
  414038:	sub    ah,bh
  41403a:	in     eax,dx
  41403b:	mov    edx,0x486e6496
  414040:	loope  0x414002
  414042:	add    eax,0xaf33ac6d
  414047:	fisttp WORD PTR [eax]
  414049:	mov    ah,0x99
  41404b:	ss xchg ebx,eax
  41404d:	loopne 0x413ffc
  41404f:	std    
  414050:	fld    QWORD PTR [ecx]
  414052:	mov    BYTE PTR [esp+ecx*4],al
  414055:	loope  0x4140c2
  414057:	push   ebx
  414058:	pop    ebx
  414059:	jns    0x414035
  41405b:	sbb    BYTE PTR [edi+0x36ade7a9],bh
  414061:	and    BYTE PTR ds:0x72febd29,0x29
  414068:	fucomip st,st(6)
  41406a:	bnd jae 0x4140e5
  41406d:	(bad)  
  41406e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41406f:	in     eax,dx
  414070:	repz dec ecx
  414072:	es dec ebx
  414074:	adc    eax,0xb2cb6d08
  414079:	stc    
  41407a:	les    edx,FWORD PTR [eax+0x1e]
  41407d:	or     DWORD PTR [edi+0x6f],edi
  414080:	sti    
  414081:	xchg   ecx,eax
  414082:	or     al,0xad
  414084:	and    dh,BYTE PTR [eax-0x1e]
  414087:	jmp    0x260d:0xed32ce33
  41408e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41408f:	mov    cl,0x3a
  414091:	sub    DWORD PTR [edx+0x58],ecx
  414094:	(bad)  
  414095:	nop
  414096:	or     al,0xcf
  414099:	sahf   
  41409a:	aaa    
  41409b:	dec    eax
  41409c:	push   0x63
  41409e:	xchg   BYTE PTR ds:0xa906987a,bl
  4140a4:	nop
  4140a5:	mov    ss,WORD PTR [esi-0x6e]
  4140a8:	test   eax,0x7a983fd0
  4140ad:	cmp    al,0x2c
  4140af:	jecxz  0x414126
  4140b1:	mov    eax,ds:0x29cc39db
  4140b6:	jne    0x4140a7
  4140b8:	push   edi
  4140b9:	or     BYTE PTR [ebx+0x7e],bh
  4140bc:	mov    ebp,0x9e229c45
  4140c1:	ret    
  4140c2:	(bad)  
  4140c3:	mov    WORD PTR [esi+0x476809d5],es
  4140c9:	dec    edx
  4140ca:	sbb    DWORD PTR [edx-0x39],edx
  4140cd:	inc    esp
  4140ce:	jb     0x414126
  4140d0:	aam    0xce
  4140d2:	push   esp
  4140d3:	jmp    0xeb7af024
  4140d8:	mov    bh,0x1d
  4140da:	arpl   WORD PTR [edx-0x39],sp
  4140dd:	mov    edx,0x73526f43
  4140e2:	xchg   esi,eax
  4140e3:	push   eax
  4140e4:	idiv   esi
  4140e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e7:	sti    
  4140e8:	sar    ecx,0x70
  4140eb:	in     eax,0x7f
  4140ed:	mov    WORD PTR [edi-0x3c],gs
  4140f0:	sub    edx,DWORD PTR [esi-0x14]
  4140f3:	mov    ds:0xf992a556,eax
  4140f8:	dec    esi
  4140f9:	sahf   
  4140fa:	cld    
  4140fb:	mov    ebp,0x927e1a86
  414100:	cmp    cl,dh
  414102:	inc    esi
  414103:	ins    BYTE PTR es:[edi],dx
  414104:	mov    eax,ds:0x1c0e849c
  414109:	push   edi
  41410a:	iret   
  41410b:	mov    ebx,0x4c57a3be
  414110:	or     dl,dh
  414112:	stos   BYTE PTR es:[edi],al
  414113:	daa    
  414114:	xchg   ecx,eax
  414115:	adc    ebp,edx
  414117:	test   eax,0xf6cb2330
  41411c:	lods   eax,DWORD PTR ds:[esi]
  41411d:	adc    bh,ah
  41411f:	inc    edx
  414120:	test   BYTE PTR [ebx],al
  414122:	xlat   BYTE PTR ds:[ebx]
  414123:	cdq    
  414124:	inc    edx
  414125:	rcr    BYTE PTR [edx-0xf820410],cl
  41412b:	dec    BYTE PTR [edi-0x31e7bd4e]
  414131:	jns    0x4140fe
  414133:	add    ah,BYTE PTR [ebx+0x7b]
  414136:	sub    DWORD PTR [edx-0x52521606],ebp
  41413c:	jno    0x4141ac
  41413e:	jne    0x414116
  414140:	push   ds
  414141:	sahf   
  414142:	push   eax
  414143:	loope  0x4141aa
  414145:	test   BYTE PTR [edi],0x27
  414148:	push   DWORD PTR [ebx-0x76]
  41414b:	inc    ecx
  41414c:	fsub   DWORD PTR [edx+0x42d7e964]
  414152:	pusha  
  414153:	leave  
  414154:	fild   WORD PTR [edi+ecx*8]
  414157:	pop    ss
  414158:	popa   
  414159:	call   0x71e5ac8e
  41415e:	cli    
  41415f:	inc    edi
  414160:	pusha  
  414161:	rol    BYTE PTR [ecx+0x3e61e03],cl
  414167:	mov    ecx,0xb3596726
  41416c:	fisttp QWORD PTR [ecx-0x2c45a603]
  414172:	dec    edi
  414173:	sar    BYTE PTR [ecx+ecx*1+0x55e483a6],cl
  41417a:	jmp    0x34431d1c
  41417f:	dec    ebx
  414180:	call   0xcc55:0x9a787208
  414187:	popf   
  414188:	adc    dh,al
  41418a:	cli    
  41418b:	fbstp  TBYTE PTR [eax]
  41418d:	aas    
  41418e:	xchg   BYTE PTR [edi],bh
  414190:	pop    ebx
  414191:	aas    
  414192:	dec    eax
  414193:	dec    ebx
  414194:	loop   0x414209
  414196:	jl     0x414204
  414198:	imul   edi,DWORD PTR [edi+0x79],0x8501c9a2
  41419f:	cmp    al,0x89
  4141a1:	test   DWORD PTR ds:0xcc2c2800,ebx
  4141a7:	xchg   esi,eax
  4141a8:	jbe    0x41414a
  4141aa:	stos   DWORD PTR es:[edi],eax
  4141ab:	jge    0x414187
  4141ad:	repnz and eax,DWORD PTR [ebx-0x63e862aa]
  4141b4:	mov    ebp,0xe2e4f155
  4141b9:	bound  esp,QWORD PTR [ecx+0x56]
  4141bc:	pop    ds
  4141bd:	mov    al,0xa5
  4141bf:	(bad)  
  4141c0:	xor    al,0xb
  4141c2:	mov    al,ds:0x9e929c4e
  4141c7:	cdq    
  4141c8:	lahf   
  4141c9:	push   es
  4141ca:	mov    edi,DWORD PTR [esi-0x40]
  4141cd:	loope  0x41424e
  4141cf:	and    DWORD PTR [ebx],esi
  4141d1:	push   ds
  4141d2:	push   0x470f62ae
  4141d7:	pop    ecx
  4141d8:	mov    dl,0xdd
  4141da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141db:	mov    esi,0x45964b1a
  4141e0:	(bad)  
  4141e1:	test   al,0x60
  4141e3:	add    BYTE PTR [edx],cl
  4141e5:	adc    DWORD PTR [eax-0x66],edx
  4141e8:	mov    bh,0xe9
  4141ea:	mov    al,ds:0x51f20ca4
  4141ef:	(bad)  
  4141f0:	and    al,0x8
  4141f2:	push   esp
  4141f3:	fsave  [esi+0x40]
  4141f7:	loopne 0x4141c7
  4141f9:	mov    eax,ds:0x2ba46397
  4141fe:	push   edi
  4141ff:	pop    ecx
  414200:	out    0x12,eax
  414202:	add    eax,0xb4c6c939
  414207:	mov    bh,0xd
  414209:	and    BYTE PTR [ebp+0x3f],bh
  41420c:	adc    edi,DWORD PTR [ecx+0xa06e9a2]
  414212:	ja     0x414210
  414214:	pop    es
  414215:	out    0xde,eax
  414217:	je     0x414273
  414219:	sub    esp,esi
  41421b:	xchg   esi,eax
  41421c:	xchg   BYTE PTR [edx-0x29],al
  41421f:	mov    dl,al
  414221:	int3   
  414222:	inc    edx
  414223:	sti    
  414224:	add    BYTE PTR [ebx],dl
  414226:	push   edx
  414227:	(bad)  
  414228:	scas   eax,DWORD PTR es:[edi]
  414229:	rol    DWORD PTR [esi],cl
  41422b:	and    al,0xd7
  41422d:	pop    eax
  41422e:	or     eax,0x693debef
  414233:	in     eax,dx
  414234:	jp     0x414274
  414236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414237:	(bad)  
  414238:	mov    esp,0xa4d2618a
  41423d:	add    eax,0x1edc306c
  414242:	shr    DWORD PTR [esi+0x3b5f2aec],1
  414248:	push   cs
  414249:	or     al,0xfa
  41424b:	ror    BYTE PTR [ecx-0x73],cl
  41424e:	imul   ebp,DWORD PTR [ecx+0x4],0x5521165e
  414255:	push   edx
  414256:	nop
  414257:	in     eax,0xfe
  414259:	mov    BYTE PTR [edi],bh
  41425b:	pop    esp
  41425c:	xchg   esi,eax
  41425d:	stc    
  41425e:	inc    esp
  41425f:	xchg   ebp,eax
  414260:	fadd   QWORD PTR [ebp+0x4b]
  414263:	repz jmp 0xd43f8bf
  414269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41426a:	shl    BYTE PTR [eax],1
  41426c:	inc    esp
  41426d:	paddd  mm7,QWORD PTR [ecx-0x48]
  414271:	or     ecx,ecx
  414273:	jp     0x4142e5
  414275:	fistp  WORD PTR [ebx-0x7f897ae9]
  41427b:	enter  0x869,0xd3
  41427f:	call   0xb405:0xf48651b2
  414286:	push   cs
  414287:	mov    esi,0xc433b894
  41428c:	idiv   ebx
  41428e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41428f:	dec    edx
  414290:	pop    eax
  414291:	test   eax,0x636be309
  414296:	xchg   BYTE PTR [eax],ah
  414298:	lods   al,BYTE PTR ds:[esi]
  414299:	add    al,0xb2
  41429b:	push   eax
  41429c:	in     al,dx
  41429d:	or     BYTE PTR [ecx-0x35657533],ch
  4142a3:	cmp    ebp,edi
  4142a5:	mov    ebx,0x45de281
  4142aa:	pop    ebx
  4142ab:	or     al,0x6a
  4142ad:	lahf   
  4142ae:	sbb    eax,0x249f2a79
  4142b3:	add    eax,0x18275a32
  4142b8:	mov    ecx,0x5742fc5f
  4142bd:	xchg   BYTE PTR [ebx-0x48],cl
  4142c0:	add    al,0xa4
  4142c2:	cmp    DWORD PTR [esi-0xc],esp
  4142c5:	mov    ch,0x73
  4142c7:	rol    BYTE PTR [ecx+0x5aabbf7e],cl
  4142cd:	arpl   WORD PTR [ebx],di
  4142cf:	xchg   BYTE PTR [edi+0x4c5141bf],cl
  4142d5:	leave  
  4142d6:	mov    al,ds:0x196226f6
  4142db:	sub    BYTE PTR [ebp-0x7e],0x7f
  4142df:	sub    al,0x88
  4142e1:	fld    DWORD PTR [edx-0x50]
  4142e4:	outs   dx,DWORD PTR ds:[esi]
  4142e5:	pop    esp
  4142e6:	jp     0x4142a8
  4142e8:	mov    dl,0x25
  4142ea:	addr16 mov esi,0xd6703431
  4142f0:	les    esi,FWORD PTR [ecx+edi*1]
  4142f3:	jmp    0x502e:0xdc1413a8
  4142fa:	mov    ds:0x31e89787,al
  4142ff:	stos   BYTE PTR es:[edi],al
  414300:	shr    edx,1
  414302:	mov    dh,0x95
  414304:	call   0xcd6b:0xeb444407
  41430b:	idiv   BYTE PTR [ebx+eax*4+0x1b19e0e9]
  414312:	inc    edx
  414313:	mov    edx,0xf91a72b3
  414318:	pop    eax
  414319:	jnp    0x4142ba
  41431b:	call   0xccaf957f
  414320:	outs   dx,DWORD PTR ds:[esi]
  414321:	pop    ss
  414322:	jg     0x4142d9
  414324:	and    edx,DWORD PTR [ecx+0x70dbef4d]
  41432a:	sub    edx,DWORD PTR [ecx-0x1f]
  41432d:	push   0x8fe72fb8
  414332:	mov    dh,0xf1
  414334:	mov    bh,0x64
  414336:	mov    ds,WORD PTR [ebx]
  414338:	bound  edi,QWORD PTR [ecx+0x13]
  41433b:	fisttp QWORD PTR [edi]
  41433d:	pop    eax
  41433e:	add    BYTE PTR ds:0x84ffcde1,dl
  414344:	sub    cl,BYTE PTR [ebx]
  414346:	aas    
  414347:	imul   edi,DWORD PTR [edx+0x51cd1013],0xffffffac
  41434e:	and    al,0xbe
  414350:	lods   eax,DWORD PTR ds:[esi]
  414351:	fimul  DWORD PTR [ecx-0x6b]
  414354:	mov    DWORD PTR [ebp+0x2a248c43],edi
  41435a:	push   ebx
  41435b:	ins    BYTE PTR es:[edi],dx
  41435c:	psrlq  mm3,QWORD PTR [ecx-0x2638eedd]
  414363:	pushf  
  414364:	inc    ebp
  414365:	jae    0x4143cb
  414367:	adc    BYTE PTR [eax],ah
  414369:	push   eax
  41436a:	pop    ss
  41436b:	push   0xaa898e37
  414370:	adc    bl,BYTE PTR [edx+0x6186a37d]
  414376:	retf   0xbf94
  414379:	lahf   
  41437a:	inc    ebp
  41437b:	add    al,0x77
  41437d:	xor    DWORD PTR [edx-0x620c09e5],edx
  414383:	and    bl,BYTE PTR ds:0xe06c78e
  414389:	or     ch,dl
  41438b:	cmp    bh,al
  41438d:	pop    esi
  41438e:	(bad)  
  41438f:	pop    ebx
  414390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414391:	cmp    DWORD PTR [eax-0x67fecde5],eax
  414397:	mov    esi,0xe8506912
  41439c:	loope  0x41439b
  41439e:	push   edi
  41439f:	stc    
  4143a0:	jp     0x4143da
  4143a2:	outs   dx,DWORD PTR ds:[esi]
  4143a3:	retf   0x7b0a
  4143a6:	xor    bl,BYTE PTR [eax+esi*8-0x5e190149]
  4143ad:	pop    esi
  4143ae:	add    ebp,DWORD PTR [ebx+0x3a]
  4143b1:	inc    ebx
  4143b2:	pop    edx
  4143b3:	mov    cl,0x5a
  4143b5:	ret    0x51e4
  4143b8:	in     eax,dx
  4143b9:	pop    ecx
  4143ba:	fs mov esi,0x3fb8253e
  4143c0:	inc    DWORD PTR [edi+0x419824ed]
  4143c6:	push   cs
  4143c7:	(bad)  
  4143c8:	mov    eax,0x48bf4400
  4143cd:	adc    BYTE PTR [ecx],bl
  4143cf:	call   0xf498:0x960fbee5
  4143d6:	xor    eax,0xf5b0d137
  4143db:	cdq    
  4143dc:	jae    0x41443b
  4143de:	or     DWORD PTR [ecx+0xd4b470e],ebp
  4143e4:	add    BYTE PTR [eax+0x2fd8b7d7],bh
  4143ea:	pop    ebp
  4143eb:	pusha  
  4143ec:	pusha  
  4143ed:	pop    ebx
  4143ee:	call   0x7385f35d
  4143f3:	aad    0x1e
  4143f5:	xchg   esp,eax
  4143f6:	std    
  4143f7:	jmp    FWORD PTR [ecx-0x3b3cd2c4]
  4143fd:	cmp    al,0x7f
  4143ff:	retf   0x70b1
  414402:	push   ebp
  414403:	xlat   BYTE PTR ds:[ebx]
  414404:	and    al,dl
  414406:	or     eax,0x4d28031f
  41440b:	ins    BYTE PTR es:[edi],dx
  41440c:	or     al,0x55
  41440e:	dec    eax
  41440f:	mov    bh,0x4c
  414411:	js     0x4143b1
  414413:	add    BYTE PTR [eax+0x4c],dh
  414416:	push   esp
  414417:	std    
  414418:	imul   esi,DWORD PTR [ecx-0xf],0xd9639798
  41441f:	fisub  WORD PTR [edi-0x43]
  414422:	push   ebp
  414423:	dec    eax
  414424:	fyl2xp1 
  414426:	xor    dh,ah
  414428:	(bad)  
  414429:	mov    esp,0x7b4e4788
  41442e:	lods   eax,DWORD PTR ds:[esi]
  41442f:	add    BYTE PTR [ebx+0x12],dl
  414432:	or     DWORD PTR ds:0x6518192e,0x0
  414439:	adc    edx,DWORD PTR ds:0x416b3d1f
  41443f:	xor    al,0xda
  414441:	iret   
  414442:	out    0x2a,eax
  414444:	out    0x4d,eax
  414446:	std    
  414447:	inc    ecx
  414448:	mov    dl,0x36
  41444a:	sub    edx,0xffffff93
  41444d:	mov    bl,0x41
  41444f:	cwde   
  414450:	cld    
  414451:	sub    DWORD PTR [eax],esp
  414453:	pushf  
  414454:	ror    BYTE PTR [edx+0x28e293ce],1
  41445a:	into   
  41445b:	cmp    edi,eax
  41445d:	mov    ecx,0x6af3ea69
  414462:	xor    ah,BYTE PTR [esi+0x19980f0a]
  414468:	cwde   
  414469:	add    al,0x71
  41446b:	inc    esp
  41446c:	xor    ecx,DWORD PTR [esi+0x49]
  41446f:	ins    DWORD PTR es:[edi],dx
  414470:	call   0x8bc96f89
  414475:	xchg   esi,eax
  414476:	cs mov eax,0xd11767b1
  41447c:	and    DWORD PTR [edi+0x7fcb4893],esi
  414482:	dec    ebx
  414483:	outs   dx,BYTE PTR ds:[esi]
  414484:	pop    ss
  414485:	dec    ebx
  414486:	adc    DWORD PTR [ecx-0x3c5f172],ebp
  41448c:	mov    al,cl
  41448e:	cmp    eax,edx
  414490:	sub    ecx,DWORD PTR [ebx+0x19]
  414493:	(bad)  
  414494:	ss sbb dl,0xaf
  414498:	shl    DWORD PTR [edi-0x1f1dff9],cl
  41449e:	(bad)  
  41449f:	fld    DWORD PTR [ebx-0x74ce4007]
  4144a5:	fdivr  QWORD PTR [edi+eiz*2+0x79]
  4144a9:	ins    DWORD PTR es:[edi],dx
  4144aa:	pop    ebp
  4144ab:	lock hlt 
  4144ad:	into   
  4144ae:	iret   
  4144af:	mov    ds:0xd5f0055a,eax
  4144b4:	push   esi
  4144b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b6:	in     al,dx
  4144b7:	cmp    eax,0x9250d67f
  4144bc:	jmp    0xabbd:0xf7f47bac
  4144c3:	push   ecx
  4144c4:	lds    esp,FWORD PTR [ebx-0x6]
  4144c7:	outs   dx,BYTE PTR ds:[esi]
  4144c8:	mov    ch,0x41
  4144ca:	adc    al,0xc0
  4144cc:	adc    dh,al
  4144ce:	loop   0x414533
  4144d0:	imul   edx,ebx,0x7c
  4144d3:	(bad)  
  4144d4:	daa    
  4144d5:	mov    esi,0x89c31a0f
  4144da:	inc    eax
  4144db:	mov    edx,0xf07ee6ba
  4144e0:	pop    ds
  4144e1:	cmp    BYTE PTR ds:0xd5b2c136,al
  4144e7:	xchg   ebx,eax
  4144e8:	ins    DWORD PTR es:[edi],dx
  4144e9:	add    DWORD PTR [esi],esi
  4144eb:	sbb    DWORD PTR [ecx-0x3410b4a],ecx
  4144f1:	jp     0x4144f8
  4144f3:	cwde   
  4144f4:	mov    ds:0x3c4bf87d,al
  4144f9:	mov    bh,0x5a
  4144fb:	retf   
  4144fc:	push   cs
  4144fd:	test   al,0x6f
  4144ff:	data16 fist WORD PTR [eax+0x650b46af]
  414506:	mov    DWORD PTR [eax+esi*4-0x296017bc],esi
  41450d:	aas    
  41450e:	mov    ebx,eax
  414510:	fiadd  DWORD PTR [esi*1-0x724a20ee]
  414517:	xchg   ebp,eax
  414518:	ret    
  414519:	in     al,dx
  41451a:	lock cmp BYTE PTR [ebp+0x59],cl
  41451e:	rol    cl,cl
  414520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414521:	es (bad) 
  414523:	pop    esp
  414524:	mov    eax,ds:0xf52672af
  414529:	in     al,dx
  41452a:	aam    0x27
  41452c:	add    DWORD PTR [ebx],edx
  41452e:	mov    al,BYTE PTR [ecx+0x186aad3b]
  414534:	aam    0xdf
  414536:	push   ebp
  414537:	mov    DWORD PTR [ecx-0x34],eax
  41453a:	inc    edx
  41453b:	pop    esi
  41453c:	or     eax,0x9099397b
  414541:	push   ecx
  414542:	(bad)  
  414544:	pop    edi
  414545:	leave  
  414546:	jp     0x4144dd
  414548:	sbb    bl,ah
  41454a:	mov    edi,0x60664109
  41454f:	push   0xffffffe6
  414551:	mov    edx,0xe39a9627
  414556:	sub    edi,ecx
  414558:	sub    ah,ch
  41455a:	inc    edx
  41455b:	jle    0x4144f6
  41455d:	imul   edi,DWORD PTR ds:[edx-0x558133a8],0xf5d21533
  414568:	mov    dh,0xc1
  41456a:	jecxz  0x414592
  41456c:	ins    BYTE PTR es:[edi],dx
  41456d:	ret    
  41456e:	sar    BYTE PTR [ebp-0x668891de],1
  414574:	dec    edx
  414575:	cmp    al,0xcb
  414577:	fsubrp st(0),st
  414579:	push   0xd4f005ef
  41457e:	xor    DWORD PTR [eax-0x39b667e5],ebx
  414584:	ins    BYTE PTR es:[edi],dx
  414585:	pusha  
  414586:	jae    0x414539
  414588:	jmp    0x41450e
  41458a:	sub    esp,DWORD PTR [ebx]
  41458c:	jnp    0x414599
  41458e:	mov    esp,0x4b074643
  414593:	jbe    0x414594
  414595:	sub    BYTE PTR [eax],bl
  414597:	cmp    eax,DWORD PTR [esi+0x5e]
  41459a:	test   BYTE PTR [esi-0x4f],al
  41459d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41459e:	jae    0x414539
  4145a0:	jo     0x4145b6
  4145a2:	lods   al,BYTE PTR ds:[esi]
  4145a3:	out    0xd3,eax
  4145a5:	rol    BYTE PTR [ebx-0x30e2dd44],1
  4145ab:	mov    bl,0x56
  4145ad:	sub    al,0xe4
  4145af:	or     ah,ah
  4145b1:	xchg   esp,eax
  4145b2:	aam    0x59
  4145b4:	repz fwait
  4145b6:	test   DWORD PTR [esi-0x1c2e239f],edx
  4145bc:	xchg   edx,eax
  4145bd:	ret    0xcb7f
  4145c0:	xor    esi,esp
  4145c2:	lods   al,BYTE PTR ds:[esi]
  4145c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c4:	aam    0x43
  4145c6:	push   0x2a47fadd
  4145cb:	or     ebp,DWORD PTR [ebp-0x22]
  4145ce:	ja     0x414579
  4145d0:	dec    BYTE PTR [edx-0x1]
  4145d3:	int    0x60
  4145d5:	pop    esi
  4145d6:	(bad)  
  4145d7:	xor    eax,0x1fd7d86e
  4145dc:	pop    es
  4145dd:	test   DWORD PTR [edi-0x1adc1abd],esi
  4145e3:	xor    ebp,edx
  4145e5:	mov    bl,0xf0
  4145e7:	fild   WORD PTR [ecx]
  4145e9:	mov    al,ds:0xb121401
  4145ee:	xchg   ecx,eax
  4145ef:	xor    BYTE PTR [edi+0x555aceb6],bh
  4145f5:	inc    ebx
  4145f6:	sbb    al,0x61
  4145f8:	xor    DWORD PTR [esi],eax
  4145fa:	cwde   
  4145fb:	sahf   
  4145fc:	sub    bl,BYTE PTR [esi+0x629dcf1b]
  414602:	pop    eax
  414603:	test   al,0x25
  414605:	mov    ecx,0x2940d5ae
  41460a:	and    DWORD PTR [edx],eax
  41460c:	xchg   ebx,eax
  41460d:	xor    DWORD PTR [edi-0x6f],esi
  414610:	or     BYTE PTR [edi],dl
  414612:	daa    
  414613:	mov    ds:0x3280551b,eax
  414618:	and    edi,DWORD PTR [ecx]
  41461a:	jno    0x41463d
  41461c:	out    dx,al
  41461d:	loopne 0x4145de
  41461f:	jns    0x4145c9
  414621:	cdq    
  414622:	pop    eax
  414623:	push   ebx
  414624:	sub    al,0x69
  414626:	enter  0x9eb3,0xd9
  41462a:	(bad)  
  41462b:	xor    BYTE PTR [esi-0xa],0x51
  41462f:	sbb    al,0x90
  414631:	mov    esi,0xa56ab0d8
  414636:	jbe    0x414650
  414638:	iret   
  414639:	xor    DWORD PTR [edi+0x17],eax
  41463c:	test   al,0xf9
  41463e:	pop    ebx
  41463f:	std    
  414640:	pop    ebx
  414641:	adc    BYTE PTR [edx+0xe01103a],dh
  414647:	pop    esp
  414648:	push   0xd6816cba
  41464d:	or     ebx,ebx
  41464f:	pop    esi
  414650:	mov    WORD PTR [edi+0x4c],ds
  414653:	in     eax,0xdb
  414655:	jne    0x4146b9
  414657:	mov    al,ds:0x4f99cd4f
  41465c:	fsub   DWORD PTR [edx+0x346151ab]
  414662:	pop    ds
  414663:	sahf   
  414664:	mov    ?,WORD PTR [ebx]
  414666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414668:	jno    0x41468d
  41466a:	add    eax,DWORD PTR [eax+eax*8+0x65]
  41466e:	ins    DWORD PTR es:[edi],dx
  41466f:	pop    eax
  414670:	add    bh,BYTE PTR [edi]
  414672:	xor    eax,0xc81c804f
  414677:	xchg   ebp,eax
  414678:	fwait
  414679:	leave  
  41467a:	test   al,0xcb
  41467c:	inc    ecx
  41467d:	push   edx
  41467e:	mov    DWORD PTR [ecx],esp
  414680:	jae    0x41465a
  414682:	mov    bl,0xc3
  414684:	out    0x8,eax
  414686:	and    eax,0x62d1b528
  41468b:	loope  0x41465b
  41468d:	push   ebp
  41468e:	add    eax,DWORD PTR ds:0xfa68eac0
  414694:	push   cs
  414695:	cwde   
  414696:	pop    esp
  414697:	in     al,0x71
  414699:	out    0xa,eax
  41469b:	test   DWORD PTR [ecx-0x9cb8253],esi
  4146a1:	ins    BYTE PTR es:[edi],dx
  4146a2:	call   0xd2b5:0x58eae952
  4146a9:	inc    esp
  4146aa:	inc    eax
  4146ab:	mov    ebx,0x1c4d08fc
  4146b0:	call   0x4127:0xb890dc39
  4146b7:	sbb    edi,ebp
  4146b9:	pusha  
  4146ba:	pop    ebp
  4146bb:	dec    edi
  4146bc:	bound  eax,QWORD PTR [esp+edi*4]
  4146bf:	ret    
  4146c0:	mov    edx,0xe0757dfe
  4146c5:	xchg   DWORD PTR [edx+0x5307a41a],edi
  4146cb:	fmul   st,st(0)
  4146cd:	add    DWORD PTR [edi+0xd2675da],0xffffffc7
  4146d4:	add    eax,0xdd0d44f4
  4146d9:	adc    eax,0x35cdc3e2
  4146de:	aas    
  4146df:	cmp    BYTE PTR [ebx],0xda
  4146e2:	pop    es
  4146e3:	dec    ecx
  4146e4:	rcr    BYTE PTR [edx],cl
  4146e6:	dec    ebp
  4146e7:	(bad)  
  4146e8:	and    BYTE PTR [esi],ch
  4146ea:	xlat   BYTE PTR ds:[ebx]
  4146eb:	pop    eax
  4146ec:	pushw  0x9c22
  4146f0:	xchg   ebp,eax
  4146f1:	daa    
  4146f2:	jnp    0x4146dd
  4146f4:	sahf   
  4146f5:	mov    ecx,0x99de3d80
  4146fa:	stos   DWORD PTR es:[edi],eax
  4146fb:	xor    BYTE PTR [esi-0x6],bh
  4146fe:	fldcw  WORD PTR [esi]
  414700:	push   ds
  414701:	fmul   DWORD PTR [eax]
  414703:	cmp    BYTE PTR [bx+di+0x1a80],ah
  414708:	dec    ebx
  414709:	mov    esi,0x52159bb5
  41470e:	or     DWORD PTR [esi+0x46],edx
  414711:	jp     0x4146da
  414713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414714:	xor    eax,0x139b9dec
  414719:	sub    cl,ah
  41471b:	mov    esi,0x24145d84
  414720:	jno    0x41472b
  414722:	enter  0xddec,0xbc
  414726:	loope  0x414747
  414728:	loop   0x4146cc
  41472a:	push   0x4da053af
  41472f:	loope  0x41472a
  414731:	test   bh,0x46
  414734:	and    al,0x8c
  414736:	leave  
  414737:	push   edi
  414738:	aas    
  414739:	push   eax
  41473a:	pop    ss
  41473b:	push   ebp
  41473c:	loope  0x41479d
  41473e:	fnstenv [edx]
  414740:	pop    eax
  414741:	rol    BYTE PTR [edx+0x25],1
  414744:	test   ebx,edx
  414746:	inc    edx
  414747:	dec    ebx
  414748:	test   eax,0x7616f4b3
  41474d:	in     al,0xd3
  41474f:	sbb    DWORD PTR [edx-0x646ab026],esp
  414755:	jbe    0x4147d2
  414757:	mov    dl,0x38
  414759:	mov    al,BYTE PTR [esi-0x1e]
  41475c:	int3   
  41475d:	iret   
  41475e:	or     DWORD PTR ds:0x2c6b77e2,0xfffffff4
  414765:	inc    ebx
  414766:	push   ecx
  414767:	leave  
  414768:	leave  
  414769:	inc    esp
  41476a:	sbb    BYTE PTR [eax-0x22e9c258],bh
  414770:	push   edx
  414771:	call   0xafbb:0x8ccad6af
  414778:	int    0x5d
  41477a:	cs pusha 
  41477c:	cmp    al,0x82
  41477e:	and    al,0x2f
  414780:	adc    dl,BYTE PTR [eax]
  414782:	repz in eax,0xec
  414785:	jge    0x414726
  414787:	mov    DWORD PTR [ebp+0x406b4ef9],ecx
  41478d:	sbb    BYTE PTR [eax+0x61],dh
  414790:	iret   
  414791:	ins    DWORD PTR es:[edi],dx
  414792:	jns    0x4147e7
  414794:	es jl  0x414806
  414797:	out    dx,eax
  414798:	xchg   BYTE PTR [ebx+0x33],ah
  41479b:	(bad)  
  41479c:	int    0x56
  41479e:	jl     0x414723
  4147a0:	xchg   esi,eax
  4147a1:	loopne 0x414723
  4147a3:	or     al,0x6f
  4147a5:	pop    ebx
  4147a6:	jmp    0x1034:0xa31c34d3
  4147ad:	xor    BYTE PTR [eax+0x1520994d],dh
  4147b3:	rcr    DWORD PTR [bx+0xd68],cl
  4147b8:	sbb    edi,DWORD PTR [ebx+0x248207b1]
  4147be:	and    al,BYTE PTR [eax-0xa78b9b1]
  4147c4:	les    eax,FWORD PTR [ecx-0x60]
  4147c7:	mov    WORD PTR [edx],es
  4147c9:	ja     0x414785
  4147cb:	adc    edx,DWORD PTR [edx+ebx*8+0x1b73c4f]
  4147d2:	(bad)  
  4147d3:	lea    ebp,[ebx]
  4147d5:	push   es
  4147d6:	xor    esi,DWORD PTR [ecx-0x12]
  4147d9:	or     DWORD PTR [eax],eax
  4147db:	ss jle 0x414823
  4147de:	mov    ebx,0xf87e131c
  4147e3:	stos   BYTE PTR es:[edi],al
  4147e4:	ret    
  4147e5:	dec    esi
  4147e6:	push   0xa2b829e5
  4147eb:	mov    al,ds:0xc025a98e
  4147f0:	es es pop edi
  4147f3:	repz mov esi,0x546d76ca
  4147f9:	call   0xd10a:0xd7937852
  414800:	mov    edx,0x58caf9b7
  414805:	mov    edi,DWORD PTR [esi+0x25]
  414808:	int    0x45
  41480a:	aaa    
  41480b:	inc    edi
  41480c:	int3   
  41480d:	or     BYTE PTR ds:0x6f4d4e9e,cl
  414813:	push   ebx
  414814:	jge    0x414814
  414816:	add    eax,0xd1fa50bc
  41481b:	in     eax,dx
  41481c:	rcl    BYTE PTR [esi+0x1a743150],cl
  414822:	fcmovb st,st(0)
  414824:	jb     0x414863
  414826:	xor    ebx,edi
  414828:	pop    esp
  414829:	and    al,0xaf
  41482b:	fdivp  st(7),st
  41482d:	add    al,0x7f
  41482f:	sbb    DWORD PTR [edi],ebp
  414831:	stc    
  414832:	push   cs
  414833:	push   cs
  414834:	jle    0x4147d0
  414836:	and    esi,DWORD PTR [esi+0xb]
  414839:	rol    DWORD PTR ds:0x421078a1,cl
  41483f:	lods   al,BYTE PTR ds:[esi]
  414840:	push   ds
  414841:	sub    eax,0xba856e2d
  414846:	pop    edi
  414847:	xchg   esp,eax
  414848:	cmp    DWORD PTR [edi+0x2f92ed60],0x27
  41484f:	xchg   DWORD PTR [edx-0x4f],edx
  414852:	adc    eax,DWORD PTR [edi+0x3e]
  414855:	iret   
  414856:	jbe    0x41483d
  414858:	cld    
  414859:	aas    
  41485a:	jecxz  0x414866
  41485c:	and    al,0xbc
  41485e:	daa    
  41485f:	pop    edi
  414860:	xchg   ebx,eax
  414861:	les    ebx,FWORD PTR [esp+ebx*1]
  414864:	sbb    BYTE PTR [edx+ecx*8],bl
  414867:	fisub  DWORD PTR [eax]
  414869:	xor    al,0x57
  41486b:	lea    esp,[eax-0x17c6663f]
  414871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414872:	jno    0x414821
  414874:	loop   0x414890
  414876:	cmp    eax,0x77dd44ff
  41487b:	scas   eax,DWORD PTR es:[edi]
  41487c:	cmp    BYTE PTR [eax+0x3719616f],bh
  414882:	xchg   DWORD PTR [edi+0xc6f3e68],esp
  414888:	shl    DWORD PTR [ecx-0x27],1
  41488b:	sbb    bl,ch
  41488d:	fucomip st,st(0)
  41488f:	and    DWORD PTR [ebx+0x233635cb],edi
  414895:	outs   dx,BYTE PTR ds:[esi]
  414896:	xor    DWORD PTR ds:0xfa60b17d,0x328703e0
  4148a0:	xchg   esi,eax
  4148a1:	push   esp
  4148a2:	cmp    eax,0x161cf7f0
  4148a7:	pop    ss
  4148a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a9:	mov    dh,0x61
  4148ab:	dec    ebp
  4148ac:	adc    BYTE PTR [ecx+0x68cc027d],ah
  4148b2:	push   eax
  4148b3:	in     eax,dx
  4148b4:	mov    ds:0x9d8d0b2e,al
  4148b9:	cmp    DWORD PTR [edx-0x4d0e3d10],ebp
  4148bf:	push   ebx
  4148c0:	ficomp DWORD PTR [edi]
  4148c2:	shl    BYTE PTR [ebx-0x64],0x75
  4148c6:	dec    eax
  4148c7:	xchg   DWORD PTR [esi-0x230e0cba],ebp
  4148cd:	retf   
  4148ce:	repz sahf 
  4148d0:	test   al,0x58
  4148d2:	cmp    ch,BYTE PTR [ebx+0x76]
  4148d5:	inc    BYTE PTR [edx]
  4148d7:	retf   
  4148d8:	sbb    bh,BYTE PTR [edi-0x29]
  4148db:	inc    ecx
  4148dc:	jb     0x4148e2
  4148de:	pop    edi
  4148df:	pop    ebx
  4148e0:	(bad)  
  4148e1:	mov    eax,0xd3e878d1
  4148e6:	into   
  4148e7:	outs   dx,DWORD PTR ds:[esi]
  4148e8:	idiv   DWORD PTR [ebp-0x60]
  4148eb:	push   esp
  4148ec:	sub    BYTE PTR [eax-0x13],dl
  4148ef:	icebp  
  4148f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148f1:	sbb    al,0xeb
  4148f3:	add    esi,ebp
  4148f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148f6:	loop   0x414891
  4148f8:	sbb    al,0x13
  4148fa:	and    DWORD PTR [eax-0x15],edx
  4148fd:	lock inc esp
  4148ff:	sar    BYTE PTR [ebx-0x54],1
  414902:	cmp    ah,BYTE PTR [edx]
  414904:	jge    0x4148c4
  414906:	jb     0x41494e
  414908:	nop    esi
  41490b:	cli    
  41490c:	hlt    
  41490d:	sub    ah,0xc0
  414910:	out    0x11,al
  414912:	in     eax,dx
  414913:	cs loop 0x4148aa
  414916:	mov    edx,0xbdd7f74e
  41491b:	rcl    DWORD PTR [edi-0x1b86471a],0xe4
  414922:	jmp    0x4148e8
  414924:	dec    ebx
  414925:	into   
  414926:	shr    DWORD PTR [ebx-0x27],0x77
  41492a:	push   ebp
  41492b:	(bad)  
  41492c:	call   0x7857:0x6b5ffa52
  414933:	jle    0x414975
  414935:	jne    0x4148ce
  414937:	lods   eax,DWORD PTR ds:[esi]
  414938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414939:	pop    ebx
  41493a:	call   0xd1ef5387
  41493f:	aaa    
  414940:	(bad)  
  414941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414942:	clc    
  414943:	das    
  414944:	push   es
  414945:	iret   
  414946:	push   edx
  414947:	(bad)
  41494a:	ret    0x7a6a
  41494d:	lahf   
  41494e:	rcl    DWORD PTR [edx+edi*2],0x2e
  414952:	sub    eax,ecx
  414954:	test   eax,0xb8f5662c
  414959:	popf   
  41495a:	cmp    DWORD PTR [edx+0xe],edi
  41495d:	or     DWORD PTR [ebx-0x48],edi
  414960:	lods   eax,DWORD PTR ds:[esi]
  414961:	repnz leave 
  414963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414964:	xlat   BYTE PTR ds:[ebx]
  414965:	jae    0x4149ae
  414967:	sbb    ah,BYTE PTR [esi]
  414969:	popf   
  41496a:	imul   DWORD PTR [edx-0x51d3a976]
  414970:	mov    bh,0x86
  414972:	rcl    BYTE PTR [edx-0x3a5408dc],1
  414978:	pop    edi
  414979:	(bad)  
  41497a:	pop    esp
  41497b:	call   0x8956:0x4a723c19
  414982:	or     edx,DWORD PTR [ecx]
  414984:	and    edi,eax
  414986:	outs   dx,BYTE PTR ds:[esi]
  414987:	popa   
  414988:	inc    ebx
  414989:	pop    eax
  41498a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498b:	dec    edx
  41498c:	mov    ds:0x55a6471c,eax
  414991:	fnsave [ebx-0x5f]
  414994:	adc    BYTE PTR [esi],bh
  414996:	(bad)  
  414997:	stos   BYTE PTR es:[edi],al
  414998:	pop    ds
  414999:	jg     0x414973
  41499b:	xor    al,0x2d
  41499d:	jae    0x41497a
  41499f:	pop    ds
  4149a0:	ins    BYTE PTR es:[edi],dx
  4149a1:	mov    bl,0xa2
  4149a3:	sar    DWORD PTR [edx-0xac57c14],0x7e
  4149aa:	lahf   
  4149ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ac:	clc    
  4149ad:	sbb    al,BYTE PTR [eax]
  4149af:	outs   dx,BYTE PTR ds:[esi]
  4149b0:	mov    ebp,0xdda226b1
  4149b5:	test   BYTE PTR [eax],bl
  4149b7:	leave  
  4149b8:	dec    edx
  4149b9:	adc    al,cl
  4149bb:	jbe    0x414a3c
  4149bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149be:	mov    ebp,ecx
  4149c0:	push   cs
  4149c1:	add    esp,DWORD PTR [ebx-0x6c5b89dd]
  4149c7:	push   ss
  4149c8:	jg     0x4149e6
  4149ca:	jp     0x4149dd
  4149cc:	sahf   
  4149cd:	push   0x15b56e79
  4149d2:	scas   al,BYTE PTR es:[edi]
  4149d3:	call   0xd221:0x9ab33e2d
  4149da:	adc    ecx,ecx
  4149dc:	sub    al,0xdd
  4149de:	mov    WORD PTR [ebp+0x7e],gs
  4149e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e2:	sbb    eax,0xf3f5b2cc
  4149e7:	std    
  4149e8:	sbb    esi,edx
  4149ea:	pop    edi
  4149eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ec:	call   0x796e12f3
  4149f1:	outs   dx,BYTE PTR ds:[esi]
  4149f2:	leave  
  4149f3:	call   0x607bf89a
  4149f8:	mov    bl,0xb9
  4149fa:	scas   eax,DWORD PTR es:[edi]
  4149fb:	sub    bl,BYTE PTR ds:0x1e74fce9
  414a01:	jno    0x4149e4
  414a03:	jge    0x414a5b
  414a05:	push   esi
  414a06:	scas   al,BYTE PTR es:[edi]
  414a07:	cmp    BYTE PTR [ecx+0x29],0x23
  414a0b:	inc    edx
  414a0c:	nop
  414a0d:	hlt    
  414a0e:	inc    cl
  414a10:	lods   al,BYTE PTR ds:[esi]
  414a11:	loop   0x4149d9
  414a13:	xor    cl,BYTE PTR [ebp-0x7b52e0e0]
  414a19:	mov    DWORD PTR [eax],eax
  414a1b:	shl    BYTE PTR [eax],1
  414a1d:	add    BYTE PTR [ebp-0x58],dl
  414a20:	retf   0x4f44
  414a23:	(bad)  
  414a24:	out    dx,eax
  414a25:	inc    esp
  414a26:	inc    esi
  414a27:	bswap  eax
  414a29:	mov    esi,0x1925cc6c
  414a2e:	cld    
  414a2f:	loope  0x414a69
  414a31:	add    al,0x38
  414a33:	mov    bh,0x9a
  414a35:	add    DWORD PTR [ecx+0x25],eax
  414a38:	rcl    ch,cl
  414a3a:	jno    0x414a02
  414a3c:	sub    ebx,esp
  414a3e:	jp     0x414a09
  414a40:	aad    0xf6
  414a42:	cli    
  414a43:	cmc    
  414a44:	shr    BYTE PTR [esi],0xc5
  414a47:	stos   BYTE PTR es:[edi],al
  414a48:	sub    al,0x7c
  414a4a:	test   BYTE PTR [esi+ebx*2-0x54],cl
  414a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4f:	mov    ch,0xd
  414a51:	icebp  
  414a52:	out    0xcc,al
  414a54:	xchg   ebx,eax
  414a55:	pop    es
  414a56:	out    dx,al
  414a57:	pop    esp
  414a58:	test   DWORD PTR [eax+ecx*4],eax
  414a5b:	inc    ebp
  414a5c:	xor    eax,0x3b005696
  414a61:	add    eax,0x7ed20d81
  414a66:	aas    
  414a67:	arpl   di,di
  414a69:	xchg   BYTE PTR [eax-0x7325acfd],ch
  414a6f:	mov    WORD PTR [ebx+0x3a],ds
  414a72:	or     ecx,DWORD PTR [ebp-0x5bec7a3d]
  414a78:	mov    al,0xac
  414a7a:	retf   
  414a7b:	mov    ebx,0x95cf304b
  414a80:	cli    
  414a81:	pusha  
  414a82:	jbe    0x414a5d
  414a84:	ins    DWORD PTR es:[edi],dx
  414a85:	(bad)  
  414a86:	cwde   
  414a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a88:	mov    ebx,0xabbd6294
  414a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a8e:	mov    ebp,0x6545f60c
  414a93:	mov    cl,BYTE PTR [edx]
  414a95:	outs   dx,DWORD PTR ds:[esi]
  414a96:	in     eax,dx
  414a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a98:	mov    ebp,0xf85731b0
  414a9d:	ds mov bh,0x54
  414aa0:	lahf   
  414aa1:	sbb    DWORD PTR [edi-0x7c194567],0x53
  414aa8:	mov    ch,0x1f
  414aaa:	into   
  414aab:	push   edx
  414aac:	ret    0xaeaa
  414aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ab0:	aad    0x2
  414ab2:	jmp    0xc34f28fe
  414ab7:	scas   eax,DWORD PTR es:[edi]
  414ab8:	or     BYTE PTR [eax],ch
  414aba:	mov    eax,0xf493f847
  414abf:	fld    TBYTE PTR [eax]
  414ac1:	xor    bh,BYTE PTR [eax+0x375b9983]
  414ac7:	sbb    DWORD PTR [esi+edi*2],0xfee6a37c
  414ace:	adc    bl,BYTE PTR [esi]
  414ad0:	or     edi,eax
  414ad2:	lds    esp,FWORD PTR [esi+0x52f7a27d]
  414ad8:	daa    
  414ad9:	pop    es
  414ada:	rcr    DWORD PTR [ebp+0x6b5467e9],cl
  414ae0:	and    DWORD PTR ds:[esi+edx*8],ebx
  414ae4:	jg     0x414a68
  414ae6:	ja     0x414a82
  414ae8:	popa   
  414ae9:	adc    DWORD PTR [ebp+0x5f],ecx
  414aec:	adc    bh,BYTE PTR [eax-0x35]
  414aef:	jo     0x414afb
  414af1:	dec    ebx
  414af2:	mov    dh,0xd9
  414af4:	shr    BYTE PTR [ecx-0x5952bf9],0x21
  414afb:	jno    0x414b00
  414afd:	push   eax
  414afe:	mov    al,ds:0x132b103f
  414b03:	and    BYTE PTR [edx+0x26],dh
  414b06:	pop    edx
  414b07:	out    dx,eax
  414b08:	les    eax,FWORD PTR [edx+eiz*4+0x6df9c69b]
  414b0f:	pushw  ss
  414b11:	mov    dl,0xbe
  414b13:	mov    ecx,0x2ed59fe2
  414b18:	loopne 0x414b59
  414b1a:	(bad)  
  414b1b:	sti    
  414b1c:	push   ss
  414b1d:	or     BYTE PTR [edi],cl
  414b1f:	mov    ebx,0xef787bfe
  414b24:	hlt    
  414b25:	call   0x5345eb66
  414b2a:	rol    BYTE PTR [ebx],cl
  414b2c:	jae    0x414b3d
  414b2e:	mov    ebx,0x2551e8c
  414b33:	push   eax
  414b34:	test   al,0xf7
  414b36:	(bad)  
  414b38:	adc    al,0xad
  414b3a:	cmp    DWORD PTR [ebp-0x7de603bb],edx
  414b40:	stos   DWORD PTR es:[edi],eax
  414b41:	mov    DWORD PTR [edx-0x5f768aa6],ebx
  414b47:	inc    esp
  414b48:	xchg   al,dl
  414b4a:	jge    0x414b06
  414b4c:	ret    
  414b4d:	or     esi,esi
  414b4f:	les    edi,FWORD PTR [eax]
  414b51:	dec    ebp
  414b52:	sbb    BYTE PTR [esi+0x5661ae21],cl
  414b58:	sbb    bl,bl
  414b5a:	xor    edi,eax
  414b5c:	pop    es
  414b5d:	(bad)  
  414b5e:	jle    0x414b64
  414b60:	jl     0x414bc5
  414b62:	push   edx
  414b63:	push   ss
  414b64:	push   0x2d12f630
  414b69:	pop    ss
  414b6a:	push   ecx
  414b6b:	and    DWORD PTR [edi+0x45],eax
  414b6e:	bnd jo 0x414bdc
  414b71:	loope  0x414b6a
  414b73:	stc    
  414b74:	adc    DWORD PTR [edx+eiz*2-0x2a6cb82f],esp
  414b7b:	in     al,0x34
  414b7d:	or     al,0x7e
  414b7f:	jg     0x414b2a
  414b81:	js     0x414bd8
  414b83:	lds    esi,FWORD PTR [edi]
  414b85:	jecxz  0x414be6
  414b87:	outs   dx,BYTE PTR ds:[esi]
  414b88:	mov    bl,0xcc
  414b8a:	in     eax,dx
  414b8b:	mov    ah,0xd8
  414b8d:	mov    al,ds:0xc1bba6d9
  414b92:	and    al,0x3a
  414b94:	pop    edi
  414b95:	jecxz  0x414bd2
  414b97:	or     dl,dl
  414b99:	hlt    
  414b9a:	mov    dl,BYTE PTR ds:0xa8777f05
  414ba0:	es add al,ch
  414ba3:	repz xchg edi,eax
  414ba5:	jns    0x414b59
  414ba7:	xor    DWORD PTR [edx-0x52493b8b],edx
  414bad:	cwde   
  414bae:	adc    ah,BYTE PTR [esi]
  414bb0:	jmp    0xbcf4e17f
  414bb5:	(bad)  
  414bb6:	mov    ds:0x373122f9,eax
  414bbb:	inc    eax
  414bbc:	call   0x2aad94ab
  414bc1:	das    
  414bc2:	and    eax,0x726abaaf
  414bc7:	cmp    eax,0x5b09dd7f
  414bcc:	stc    
  414bcd:	cld    
  414bce:	or     eax,0xcbda6e42
  414bd3:	int3   
  414bd4:	push   0x7
  414bd6:	push   0x77
  414bd8:	xchg   BYTE PTR [edi-0x69],ch
  414bdb:	sbb    DWORD PTR [ebx-0x314f2a2b],ebp
  414be1:	(bad)
  414be4:	into   
  414be5:	adc    eax,0x512ddf66
  414bea:	fstp   DWORD PTR [ecx]
  414bec:	adc    eax,0x468a5313
  414bf1:	xchg   DWORD PTR [edx+esi*8-0x62],esp
  414bf5:	cmp    eax,0x968e0720
  414bfa:	jae    0x414c00
  414bfc:	aaa    
  414bfd:	dec    ecx
  414bfe:	rcr    BYTE PTR [edi-0x20],1
  414c01:	fwait
  414c02:	addr16 dec esp
  414c04:	(bad)  
  414c05:	ficomp WORD PTR [ecx+0x4b]
  414c08:	lock pop ecx
  414c0a:	add    DWORD PTR [ebx],esi
  414c0c:	loopne 0x414c21
  414c0e:	dec    eax
  414c0f:	hlt    
  414c10:	jecxz  0x414bfd
  414c12:	ficom  DWORD PTR [edx-0x72]
  414c15:	in     al,0xf2
  414c17:	or     al,BYTE PTR [edx]
  414c19:	push   esp
  414c1a:	inc    edi
  414c1b:	(bad)  
  414c1c:	out    dx,eax
  414c1d:	aas    
  414c1e:	fmul   DWORD PTR [esi]
  414c20:	mov    al,0x67
  414c22:	loop   0x414bcf
  414c24:	mov    ebp,0x52efaacb
  414c29:	out    dx,al
  414c2a:	mov    DWORD PTR [edi],esp
  414c2c:	mov    bh,0xbb
  414c2e:	aas    
  414c2f:	loopne 0x414c99
  414c31:	fdiv   DWORD PTR [eax-0x33]
  414c34:	push   esi
  414c35:	int3   
  414c36:	mov    esi,esi
  414c38:	mov    bl,0x2c
  414c3a:	jno    0x414bf2
  414c3c:	pop    edx
  414c3d:	pop    ecx
  414c3e:	add    ah,dl
  414c40:	test   eax,0x2697dc29
  414c45:	sub    DWORD PTR [edi+0x50ac511a],edi
  414c4b:	cli    
  414c4c:	loope  0x414cb0
  414c4e:	lds    eax,FWORD PTR [edi-0x264ae52a]
  414c54:	sub    esi,ebp
  414c56:	loop   0x414be1
  414c58:	dec    ecx
  414c59:	repnz cmp dl,BYTE PTR ds:0x8ec667c9
  414c60:	jg     0x414c3a
  414c62:	int3   
  414c63:	fxch   st(1)
  414c65:	arpl   WORD PTR [esi+0x56381366],bp
  414c6b:	pop    ds
  414c6c:	xchg   esi,eax
  414c6d:	push   eax
  414c6e:	jge    0x414c11
  414c70:	pop    esp
  414c71:	in     eax,dx
  414c72:	mov    ebp,0xf9af5f0c
  414c77:	adc    BYTE PTR [ebx],cl
  414c79:	clc    
  414c7a:	rol    BYTE PTR [ebp+ebx*2+0x56],1
  414c7e:	jne    0x414c03
  414c80:	push   DWORD PTR [ecx+0x79dba0a5]
  414c86:	jge    0x414ce9
  414c88:	int3   
  414c89:	pop    es
  414c8a:	dec    eax
  414c8b:	sub    eax,0xe7efd899
  414c90:	mov    ecx,0x11a12326
  414c95:	aad    0x9
  414c97:	test   eax,0x12727a67
  414c9c:	cmp    BYTE PTR ds:0x59ea2abd,dl
  414ca2:	xchg   edx,eax
  414ca3:	jmp    0x414c89
  414ca5:	pop    esp
  414ca6:	pop    es
  414ca7:	es gs adc al,0xf0
  414cab:	nop
  414cac:	enter  0xe47c,0xe0
  414cb0:	push   edi
  414cb1:	jae    0x414c59
  414cb3:	mov    ebp,DWORD PTR [edi-0x78]
  414cb6:	ds and dh,0x9c
  414cba:	rol    esp,cl
  414cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cbd:	add    DWORD PTR [eax+ebp*4+0x69],esi
  414cc1:	fistp  QWORD PTR [edi]
  414cc3:	pmaxsw mm5,QWORD PTR [ebx+0x588d5c5]
  414cca:	pop    ebx
  414ccb:	dec    esp
  414ccc:	call   0xd596:0x9d20c6a7
  414cd3:	scas   eax,DWORD PTR es:[edi]
  414cd4:	daa    
  414cd5:	outs   dx,BYTE PTR ds:[esi]
  414cd6:	mov    eax,ds:0x97b6a05
  414cdb:	sbb    ecx,ebp
  414cdd:	std    
  414cde:	inc    edx
  414cdf:	pusha  
  414ce0:	pop    edx
  414ce1:	ds inc esi
  414ce3:	dec    esi
  414ce4:	call   0x1406:0x9d3a9616
  414ceb:	mov    eax,ds:0x100f8457
  414cf0:	jmp    0x669cf710
  414cf5:	mov    ds:0xb3f63c11,eax
  414cfa:	std    
  414cfb:	(bad)  [edx+edi*1]
  414cfe:	inc    edi
  414cff:	dec    ebp
  414d00:	or     esp,eax
  414d02:	test   cl,ch
  414d04:	fidiv  DWORD PTR [ecx+0xfca6158]
  414d0a:	push   ebx
  414d0b:	adc    cl,BYTE PTR [ebx]
  414d0d:	push   ebp
  414d0e:	and    BYTE PTR [edi+0x381b85e8],al
  414d14:	jns    0x414d8c
  414d16:	into   
  414d17:	mov    ebp,DWORD PTR [eax-0x19b71381]
  414d1d:	mul    BYTE PTR ds:0x242c5fb8
  414d23:	js     0x414d80
  414d25:	aaa    
  414d26:	adc    BYTE PTR [edi+0x2f0a8dec],bl
  414d2c:	pop    ebp
  414d2d:	stc    
  414d2e:	fistp  DWORD PTR [edi+0x8]
  414d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d32:	enter  0xfab1,0xd9
  414d36:	lock aam 0x22
  414d39:	aam    0x5b
  414d3b:	fldenv [edi+esi*8+0x6d9bcb2b]
  414d42:	ja     0x414da4
  414d44:	and    ebx,eax
  414d46:	push   edx
  414d47:	xor    al,0x4f
  414d49:	dec    ebx
  414d4a:	jle    0x414d8f
  414d4c:	dec    edi
  414d4d:	cdq    
  414d4e:	outs   dx,BYTE PTR ds:[esi]
  414d4f:	out    0x32,eax
  414d51:	rcl    BYTE PTR [edx+0x5657ec91],0x79
  414d58:	jae    0x414dc2
  414d5a:	fdiv   QWORD PTR [edx]
  414d5c:	or     edi,ebp
  414d5e:	sub    eax,edx
  414d60:	cdq    
  414d61:	daa    
  414d62:	(bad)  
  414d63:	retf   
  414d64:	and    bl,0xf4
  414d67:	ret    
  414d68:	mov    eax,ds:0x1db1c0bf
  414d6d:	hlt    
  414d6e:	push   ss
  414d6f:	nop
  414d70:	out    dx,eax
  414d71:	xchg   esi,eax
  414d72:	loop   0x414d21
  414d74:	xchg   BYTE PTR [edi+esi*4-0xf],dh
  414d78:	sbb    al,cl
  414d7a:	xchg   esp,eax
  414d7b:	lods   al,BYTE PTR ds:[esi]
  414d7c:	push   ebx
  414d7d:	fdivr  DWORD PTR [ebp+eiz*2-0x40]
  414d81:	cmp    esi,DWORD PTR [ebp+0x758ad371]
  414d87:	sbb    BYTE PTR [ecx-0x4faa31c8],al
  414d8d:	xchg   esp,eax
  414d8e:	sub    esi,0xfe7e2722
  414d94:	loopne 0x414d28
  414d96:	adc    al,0x8
  414d98:	arpl   WORD PTR [ebp+0x708b61fa],bp
  414d9e:	scas   al,BYTE PTR es:[edi]
  414d9f:	loop   0x414d72
  414da1:	nop
  414da2:	lea    ecx,[edi-0x2d]
  414da5:	icebp  
  414da6:	mov    ds:0xad1c48de,eax
  414dab:	jns    0x414da0
  414dad:	inc    ecx
  414dae:	int    0x3e
  414db0:	and    eax,0xb7afda90
  414db5:	out    dx,al
  414db6:	add    al,0x6e
  414db8:	xchg   BYTE PTR [edi+0x33e45987],cl
  414dbe:	mov    WORD PTR [edi+0x20],cs
  414dc1:	dec    eax
  414dc2:	std    
  414dc3:	cwde   
  414dc4:	sahf   
  414dc5:	sub    bl,cl
  414dc7:	clc    
  414dc8:	cmp    DWORD PTR [esi],0xb
  414dcb:	jmp    0x414d63
  414dcd:	ror    BYTE PTR [esi],0x8b
  414dd0:	jno    0x414df5
  414dd2:	pop    ecx
  414dd3:	scas   al,BYTE PTR es:[edi]
  414dd4:	xchg   edx,eax
  414dd5:	(bad)  
  414dd6:	jb     0x414dbe
  414dd8:	adc    al,0x46
  414dda:	es push ebx
  414ddc:	cwde   
  414ddd:	xchg   BYTE PTR [edx],bh
  414ddf:	sub    cl,BYTE PTR [edx]
  414de1:	fmul   QWORD PTR [esi-0x51]
  414de4:	jmp    DWORD PTR [eax+ecx*4+0x26]
  414de8:	dec    ecx
  414de9:	mov    eax,0xc977a138
  414dee:	mov    cl,0xd3
  414df0:	rol    BYTE PTR [edi+eiz*2-0x5be2c749],0x41
  414df8:	inc    ecx
  414df9:	push   0x4a
  414dfb:	inc    ecx
  414dfc:	and    al,0xc2
  414dfe:	mov    dl,0x2a
  414e00:	mov    BYTE PTR [edx-0x13],ah
  414e03:	mov    DWORD PTR ds:0x1d4bafbc,edi
  414e09:	loopne 0x414e49
  414e0b:	and    ch,dh
  414e0d:	(bad)  
  414e0e:	fdiv   QWORD PTR [esi+0x7164b668]
  414e14:	fstp   TBYTE PTR [ebx-0x24]
  414e17:	cwde   
  414e18:	rcr    BYTE PTR [ebp-0xd],1
  414e1b:	icebp  
  414e1c:	xchg   bl,al
  414e1e:	jmp    0x4502e214
  414e23:	pop    eax
  414e24:	and    dl,ch
  414e26:	sbb    BYTE PTR ds:0xf835dfe1,0x9c
  414e2d:	xor    edi,DWORD PTR [ebx-0x1f4493f9]
  414e33:	data16 sub BYTE PTR [edi],ch
  414e36:	loope  0x414df8
  414e38:	ret    0x8e51
  414e3b:	test   ch,dh
  414e3d:	or     al,0x48
  414e3f:	(bad)
  414e42:	sbb    BYTE PTR [eax+0x3a],bh
  414e45:	iret   
  414e46:	pushf  
  414e47:	fistp  QWORD PTR [edx-0x5585b61f]
  414e4d:	mov    bh,0x96
  414e4f:	sahf   
  414e50:	test   DWORD PTR [ebp-0x5c4579c],esp
  414e56:	add    DWORD PTR [edx-0x31fe3d8e],esi
  414e5c:	mov    esi,0x42711043
  414e61:	les    esp,FWORD PTR [edx+ebx*2+0x6b]
  414e65:	lods   eax,DWORD PTR ds:[esi]
  414e66:	jg     0x414ecb
  414e68:	mov    eax,ds:0xf5efdea0
  414e6d:	es clc 
  414e6f:	ins    BYTE PTR es:[edi],dx
  414e70:	jg     0x414e45
  414e72:	jb     0x414ed2
  414e74:	sar    BYTE PTR [edx+0x336d7aa2],cl
  414e7a:	repnz add eax,0x359138df
  414e80:	sahf   
  414e81:	out    dx,al
  414e82:	dec    eax
  414e83:	sahf   
  414e84:	dec    edx
  414e85:	xor    esi,DWORD PTR [edi+eiz*8]
  414e88:	fdivr  st(0),st
  414e8a:	and    dl,ah
  414e8c:	xchg   ebx,eax
  414e8d:	cdq    
  414e8e:	(bad)  
  414e8f:	xor    bl,BYTE PTR [ecx-0x6e]
  414e92:	js     0x414e8b
  414e94:	sub    eax,0xaa36b19c
  414e99:	in     al,0x59
  414e9b:	push   0x6442734f
  414ea0:	ins    BYTE PTR es:[edi],dx
  414ea1:	xchg   edi,eax
  414ea2:	or     BYTE PTR [ecx],0x2c
  414ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea6:	and    eax,0x46b9b460
  414eab:	lahf   
  414eac:	in     al,dx
  414ead:	stos   DWORD PTR es:[edi],eax
  414eae:	cmp    cl,0x4f
  414eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb2:	xchg   edx,eax
  414eb3:	ret    0x8547
  414eb6:	dec    ebx
  414eb7:	add    al,0x56
  414eb9:	mov    ?,WORD PTR [edi-0x76]
  414ebc:	jb     0x414eb5
  414ebe:	shl    DWORD PTR [edi-0x70],1
  414ec1:	or     DWORD PTR [ebx-0x3e7f743f],0x19
  414ec8:	cmp    al,0x11
  414eca:	stc    
  414ecb:	inc    esi
  414ecc:	mov    dl,0x8
  414ece:	dec    esp
  414ecf:	mov    ebx,0x33cafb9a
  414ed4:	stos   DWORD PTR es:[edi],eax
  414ed5:	jecxz  0x414f42
  414ed7:	add    ecx,DWORD PTR [edx+edi*2+0x10]
  414edb:	mov    edi,DWORD PTR [ecx-0x68]
  414ede:	xor    al,BYTE PTR [esi+0x3bda9807]
  414ee4:	push   ecx
  414ee5:	dec    ebx
  414ee6:	add    BYTE PTR [esi-0x6e],al
  414ee9:	add    eax,0x28d3340a
  414eee:	mov    edx,ds
  414ef0:	mov    cl,0xb4
  414ef2:	add    eax,0xdd188203
  414ef7:	pop    eax
  414ef9:	mov    dh,0x90
  414efb:	mov    esi,0xa7022f94
  414f00:	out    dx,al
  414f01:	jns    0x414ec9
  414f03:	cli    
  414f04:	pop    ss
  414f05:	pop    ebx
  414f06:	cs mov ebx,0x740ffa60
  414f0c:	dec    edi
  414f0d:	inc    ecx
  414f0e:	not    BYTE PTR [edi+0x1d]
  414f11:	leave  
  414f12:	addr16 jle 0x414ead
  414f15:	sbb    ecx,edi
  414f17:	lods   al,BYTE PTR ds:[esi]
  414f18:	mov    edx,0xc1882e06
  414f1d:	out    dx,al
  414f1e:	pusha  
  414f1f:	mov    ch,0x26
  414f21:	or     bh,BYTE PTR [edx-0x6802fa2]
  414f27:	inc    eax
  414f28:	sub    DWORD PTR [edx+esi*2-0x6],esi
  414f2c:	in     eax,0x74
  414f2e:	mov    bh,0xac
  414f30:	fcom   DWORD PTR [edx]
  414f32:	adc    eax,0x98800806
  414f37:	push   ebx
  414f38:	pop    ss
  414f39:	(bad)  
  414f3a:	int3   
  414f3b:	iret   
  414f3c:	out    dx,al
  414f3d:	addr16 push esp
  414f3f:	xlat   BYTE PTR ds:[ebx]
  414f40:	icebp  
  414f41:	ret    0xefbb
  414f44:	jmp    0x43ee88f
  414f49:	rcr    BYTE PTR [ecx+0x1fd604b2],0x75
  414f50:	retf   0xfacb
  414f53:	push   ds
  414f54:	popa   
  414f55:	outs   dx,BYTE PTR ds:[esi]
  414f56:	mov    ah,0x7e
  414f58:	sub    ebp,DWORD PTR [ebp-0x4277beeb]
  414f5e:	push   esi
  414f5f:	popf   
  414f60:	cmp    ebx,DWORD PTR [esi+ebx*2-0x4275def0]
  414f67:	es data16 xor al,0x73
  414f6b:	adc    al,0x97
  414f6d:	ficomp DWORD PTR [eax-0x3e]
  414f70:	and    al,0xe4
  414f72:	out    0x41,eax
  414f74:	mov    ebp,0x9b99e073
  414f79:	outs   dx,DWORD PTR ds:[esi]
  414f7a:	ins    DWORD PTR es:[edi],dx
  414f7b:	mov    eax,ds:0xac1cf8ff
  414f80:	loope  0x414f8f
  414f82:	sar    BYTE PTR [edx+0x2496d1ed],0xd8
  414f89:	fiadd  DWORD PTR [ebx-0x1d31291c]
  414f8f:	sbb    al,0x99
  414f91:	int    0xf
  414f93:	mov    DWORD PTR [edi+edx*4+0x5c],0x5f219c34
  414f9b:	push   ds
  414f9c:	fdivr  QWORD PTR [esi-0x580ba424]
  414fa2:	imul   ebp,DWORD PTR [edi+0x17],0xad14ecd3
  414fa9:	(bad)  
  414faa:	inc    ebx
  414fab:	mov    esp,0x12ea970f
  414fb0:	fcomp  DWORD PTR [ebx+0x4cf9a97a]
  414fb6:	pop    esi
  414fb7:	cmc    
  414fb8:	or     al,0xcc
  414fba:	and    cl,al
  414fbc:	add    BYTE PTR [edi-0x25c9c507],cl
  414fc2:	mov    eax,0x8764471
  414fc7:	push   es
  414fc8:	mov    eax,gs
  414fca:	sbb    al,0xeb
  414fcc:	not    ah
  414fce:	or     cl,bh
  414fd0:	sub    DWORD PTR [esi+0x68],0xffffffd4
  414fd4:	add    DWORD PTR [ebp-0x122aceff],ebx
  414fda:	push   ebx
  414fdb:	shl    BYTE PTR [edx-0x59],1
  414fde:	pop    esp
  414fdf:	in     eax,dx
  414fe0:	jb     0x414fc7
  414fe2:	sub    esp,0xffffffa0
  414fe5:	ja     0x414fcf
  414fe7:	es mov bh,0x15
  414fea:	mul    DWORD PTR [edx+0x7ac64e72]
  414ff0:	sbb    al,0xc4
  414ff2:	jl     0x414fe4
  414ff4:	out    dx,al
  414ff5:	mov    esp,0xaae422f3
  414ffa:	mov    ds:0x29d27a,eax
  414fff:	push   edx
  415000:	mov    ds:0x3c88096b,eax
  415005:	push   edx
  415006:	js     0x415031
  415008:	cmp    DWORD PTR [ebx-0x16],esp
  41500b:	jns    0x414fb5
  41500d:	enter  0x8019,0xfb
  415011:	dec    ecx
  415012:	and    esp,eax
  415014:	data16 or al,0xa
  415017:	adc    eax,0x6e53d5f7
  41501c:	xchg   DWORD PTR [edx-0x3a7dc460],ebx
  415022:	push   ecx
  415023:	jnp    0x415047
  415025:	lea    eax,[ebp+0x10]
  415028:	test   ebp,eax
  41502a:	loop   0x414fea
  41502c:	pop    esp
  41502d:	ret    
  41502e:	xchg   BYTE PTR [ebp+0x68],ch
  415031:	cld    
  415032:	adc    ebp,DWORD PTR [esi]
  415034:	sub    dh,BYTE PTR [ecx]
  415036:	push   ebx
  415037:	push   ebx
  415038:	mov    esi,0xeff09dc1
  41503d:	xor    al,0x9b
  41503f:	aas    
  415040:	in     al,0xa3
  415042:	mov    dl,0x68
  415044:	popf   
  415045:	daa    
  415046:	and    eax,0xea0083b
  41504b:	aam    0xc5
  41504d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504e:	inc    esi
  41504f:	fadd   QWORD PTR [eax-0x2d93ab82]
  415055:	and    DWORD PTR [edx-0x14],ecx
  415058:	out    dx,al
  415059:	jecxz  0x4150a6
  41505b:	lock test al,0x59
  41505e:	adc    ecx,DWORD PTR [esi+eiz*1]
  415061:	mov    ch,0x54
  415063:	aad    0xfe
  415065:	dec    ebx
  415066:	jbe    0x415036
  415068:	xor    dl,0xb5
  41506b:	cdq    
  41506c:	test   eax,0x450c085
  415071:	mov    cl,0x75
  415073:	mov    ah,0xbe
  415075:	inc    ebx
  415076:	mov    esi,0x6ad1dc51
  41507b:	lods   eax,DWORD PTR ds:[esi]
  41507c:	cdq    
  41507d:	popa   
  41507e:	push   edx
  41507f:	mov    ds:0x5bbed127,eax
  415084:	jne    0x4150a2
  415086:	imul   esp,esi,0xffffffde
  415089:	push   edi
  41508a:	adc    ebx,DWORD PTR [edx]
  41508c:	shl    BYTE PTR [ecx-0x1a740a25],cl
  415092:	mov    ebp,0x7e277cd2
  415097:	mov    ebp,0x7d965eec
  41509c:	aam    0x8b
  41509e:	hlt    
  41509f:	push   ecx
  4150a0:	(bad)  
  4150a1:	leave  
  4150a2:	jb     0x4150a3
  4150a4:	xchg   edi,eax
  4150a5:	lea    esi,[ebp-0x33ccd7e0]
  4150ab:	ficomp DWORD PTR [ebx-0x4c804bae]
  4150b1:	sub    DWORD PTR [ebp-0x37],edi
  4150b4:	pop    ebx
  4150b5:	cmp    eax,0xb609d59e
  4150ba:	push   ebp
  4150bb:	loop   0x41505f
  4150bd:	or     eax,0x760c7d9b
  4150c2:	out    0xb2,al
  4150c4:	pusha  
  4150c5:	je     0x415123
  4150c7:	js     0x4150ef
  4150c9:	sti    
  4150ca:	ror    DWORD PTR [ecx-0x60d3f90c],cl
  4150d0:	sti    
  4150d1:	ds ret 
  4150d3:	loopne 0x415063
  4150d5:	jae    0x415109
  4150d7:	inc    edx
  4150d8:	mov    BYTE PTR cs:[edx+0x54a88702],al
  4150df:	fisttp DWORD PTR [ebx+0x23fbbc3b]
  4150e5:	and    ebp,DWORD PTR [esi-0x12dda2b9]
  4150eb:	and    eax,edx
  4150ed:	int    0x37
  4150ef:	dec    esp
  4150f0:	cld    
  4150f1:	xlat   BYTE PTR ds:[ebx]
  4150f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f3:	mov    edx,DWORD PTR [eax+ebx*1+0x7a58a09e]
  4150fa:	pop    eax
  4150fb:	mov    esp,0xc7207b79
  415100:	addr16 dec ebp
  415102:	sub    eax,0x98bca18d
  415107:	popa   
  415108:	add    dl,dl
  41510a:	inc    edi
  41510b:	sbb    eax,0x726206ce
  415110:	dec    esi
  415111:	sbb    esi,ecx
  415113:	mov    bh,0x86
  415115:	and    al,0xa4
  415117:	out    dx,al
  415118:	inc    esp
  415119:	(bad)  
  41511a:	(bad)  
  41511b:	clc    
  41511c:	sub    BYTE PTR [ecx],al
  41511e:	outs   dx,DWORD PTR ds:[esi]
  41511f:	int3   
  415120:	dec    DWORD PTR [edi-0x66da1015]
  415126:	jl     0x4150f9
  415128:	idiv   edi
  41512a:	icebp  
  41512b:	addr16 jbe 0x415172
  41512e:	stos   BYTE PTR es:[edi],al
  41512f:	mov    fs,ecx
  415131:	jmp    0x74c5:0xc1265d81
  415138:	push   ebx
  415139:	gs pop esi
  41513b:	dec    edx
  41513c:	gs int 0x6a
  41513f:	jp     0x415127
  415141:	mov    ebp,0x5aa76e4c
  415146:	div    edx
  415148:	sub    BYTE PTR [edi+0x5c432ade],0x71
  41514f:	fistp  DWORD PTR [esi+0x7c9bcf6d]
  415155:	sub    al,0xef
  415157:	daa    
  415158:	pop    eax
  415159:	scas   al,BYTE PTR es:[edi]
  41515a:	mov    ebx,0xa4a449ab
  41515f:	dec    edi
  415160:	out    0xe9,eax
  415162:	daa    
  415163:	mov    cl,0x58
  415165:	cmp    dl,BYTE PTR [ebp-0x2a]
  415168:	stos   DWORD PTR es:[edi],eax
  415169:	push   edx
  41516a:	imul   BYTE PTR [edi+0x72c5a047]
  415170:	cmp    eax,0x888b4637
  415175:	pop    ds
  415176:	hlt    
  415177:	jmp    0x41513c
  415179:	inc    esp
  41517a:	les    ebx,FWORD PTR [ebp+0x1d04b300]
  415180:	sub    BYTE PTR [ebx],bl
  415182:	pop    ds
  415183:	or     al,0x77
  415185:	idiv   BYTE PTR ds:[ebp+0x1c]
  415189:	rdmsr  
  41518b:	ins    DWORD PTR es:[edi],dx
  41518c:	lods   al,BYTE PTR ds:[esi]
  41518d:	sti    
  41518e:	mov    ds:0x264dfb47,al
  415193:	push   esp
  415194:	jmp    0xd0ca:0x89f2e4c
  41519b:	(bad)  
  41519d:	bound  eax,QWORD PTR [esi]
  41519f:	loop   0x415154
  4151a1:	adc    eax,0x37528cdb
  4151a6:	add    eax,0x466ab935
  4151ab:	popa   
  4151ac:	jmp    0x6cc79372
  4151b1:	out    0x3c,al
  4151b3:	sub    bh,bh
  4151b5:	push   ebp
  4151b6:	ds dec edi
  4151b8:	push   0x52
  4151ba:	(bad)  
  4151bc:	fisttp WORD PTR [edi-0x1331b820]
  4151c2:	sbb    BYTE PTR [edi],bl
  4151c4:	enter  0xa890,0xe5
  4151c8:	jns    0x4151dd
  4151ca:	out    0xc6,al
  4151cc:	shr    esp,cl
  4151ce:	imul   eax,DWORD PTR [ebp+esi*1+0x69576590],0x9
  4151d6:	sbb    BYTE PTR ds:[eax-0x1],bl
  4151da:	cmp    eax,0xf02c1629
  4151df:	pop    ss
  4151e0:	gs dec ebx
  4151e2:	jp     0x4151a1
  4151e4:	aam    0x3a
  4151e6:	push   ebx
  4151e7:	std    
  4151e8:	push   eax
  4151e9:	lea    ecx,cs:[ecx]
  4151ec:	inc    ecx
  4151ed:	pavgb  mm0,QWORD PTR [eax+0x4e]
  4151f1:	mov    cl,0x3b
  4151f3:	push   cs
  4151f4:	xor    al,0xd9
  4151f6:	jbe    0x4151da
  4151f8:	pop    es
  4151f9:	out    dx,al
  4151fa:	mov    ds:0x568dbeaf,eax
  4151ff:	sub    eax,0x247675a
  415204:	jp     0x4151ad
  415206:	idiv   bh
  415208:	lock pop esp
  41520a:	add    eax,0xeb6ed99f
  41520f:	loopne 0x4151f3
  415211:	ds push edx
  415213:	hlt    
  415214:	es scas eax,DWORD PTR es:[edi]
  415216:	sti    
  415217:	sbb    ch,bh
  415219:	dec    ecx
  41521a:	std    
  41521b:	mov    ecx,DWORD PTR [ebp+ebx*2+0x2c]
  41521f:	mov    dh,0xff
  415221:	mov    ch,0x58
  415223:	add    al,0x8c
  415225:	add    edx,DWORD PTR [ebx+0x2c]
  415228:	or     BYTE PTR [ecx-0x43],bl
  41522b:	enter  0xcf63,0xb6
  41522f:	push   0x4b
  415231:	cmp    eax,ebp
  415233:	push   cs
  415234:	clc    
  415235:	xor    eax,0x3b4a9f17
  41523a:	in     al,0x33
  41523c:	xchg   BYTE PTR [si+0x7e99],dh
  415241:	push   ecx
  415242:	enter  0xae1f,0xe9
  415246:	push   ebx
  415247:	add    ecx,ecx
  415249:	sbb    eax,0x6a92c046
  41524e:	sub    al,0xc5
  415250:	cmp    esi,edx
  415252:	xor    al,0x7f
  415254:	xor    DWORD PTR [ecx-0x48],ebp
  415257:	mov    bl,0xe0
  415259:	mov    ebx,0x3b23605
  41525e:	aad    0xb6
  415260:	shl    DWORD PTR [ecx+0x52fe5afb],0x8a
  415267:	jne    0x415253
  415269:	retf   
  41526a:	ins    DWORD PTR es:[edi],dx
  41526b:	adc    DWORD PTR [eax+0x3c84c202],0xebac867a
  415275:	inc    esi
  415276:	in     al,0x9b
  415278:	sti    
  415279:	shl    ah,cl
  41527b:	mov    ds:0x576d79c8,al
  415280:	xchg   edx,eax
  415281:	int3   
  415282:	sbb    BYTE PTR [esi+0x71],dl
  415285:	not    DWORD PTR ds:0x8cc85705
  41528b:	stos   DWORD PTR es:[edi],eax
  41528c:	lods   eax,DWORD PTR ds:[esi]
  41528d:	sub    BYTE PTR [ebp-0x64cf7a32],ah
  415293:	test   BYTE PTR [edi+esi*2-0x4d9173a6],cl
  41529a:	call   DWORD PTR [edx-0x25c9ca80]
  4152a0:	pop    edx
  4152a1:	mov    al,ds:0x6039ac03
  4152a6:	push   es
  4152a7:	bt     DWORD PTR [edx-0x3b53262],edx
  4152ae:	sbb    BYTE PTR [ecx+0x63],ch
  4152b1:	imul   esi,ebx,0x23f71a3b
  4152b7:	dec    esi
  4152b8:	pop    edx
  4152b9:	and    DWORD PTR [ebx+0x3cec7abb],edx
  4152bf:	inc    ecx
  4152c0:	in     eax,0x11
  4152c2:	js     0x41530b
  4152c4:	and    dh,BYTE PTR [esi-0x54]
  4152c7:	or     al,0x39
  4152c9:	outs   dx,BYTE PTR ds:[esi]
  4152ca:	xchg   esi,eax
  4152cb:	xor    eax,0x6e12b6a0
  4152d0:	cmp    ah,BYTE PTR [eax]
  4152d2:	out    dx,eax
  4152d3:	sbb    DWORD PTR [ebx+0x2ee176ca],ebx
  4152d9:	mov    dh,0x98
  4152db:	lock push ds
  4152dd:	scas   al,BYTE PTR es:[edi]
  4152de:	icebp  
  4152df:	jl     0x415343
  4152e1:	(bad)  
  4152e2:	pop    ebx
  4152e3:	bnd jp 0x415352
  4152e6:	fsub   QWORD PTR [edx]
  4152e8:	jl     0x415304
  4152ea:	scas   al,BYTE PTR es:[edi]
  4152eb:	fst    st(5)
  4152ed:	mov    dl,0x2e
  4152ef:	mov    dl,0x82
  4152f1:	ja     0x415287
  4152f3:	or     bl,BYTE PTR [esi+0x1a019e2f]
  4152f9:	add    edi,DWORD PTR [esi]
  4152fb:	dec    edi
  4152fc:	inc    ebx
  4152fd:	out    0xef,al
  4152ff:	xor    edx,DWORD PTR [ebx]
  415301:	adc    dl,BYTE PTR [ecx+ecx*4-0x5a9e16fe]
  415308:	inc    ecx
  415309:	(bad)  
  41530a:	pop    ecx
  41530b:	icebp  
  41530c:	cmp    ecx,esi
  41530e:	ret    
  41530f:	xchg   edx,eax
  415310:	jne    0x4152a4
  415312:	(bad)  
  415313:	push   ecx
  415314:	fcomi  st,st(2)
  415316:	pop    ebp
  415317:	loopne 0x415370
  415319:	mov    edi,0x889f0c4e
  41531e:	push   cs
  41531f:	out    dx,eax
  415320:	xor    bh,ch
  415322:	stos   DWORD PTR es:[edi],eax
  415323:	hlt    
  415324:	lock out 0xfe,al
  415327:	or     ch,0x1d
  41532a:	scas   al,BYTE PTR es:[edi]
  41532b:	(bad)  [ebx]
  41532d:	dec    eax
  41532e:	sub    DWORD PTR [ebp-0x70bea733],edx
  415334:	jmp    0x4153b5
  415336:	adc    eax,0xe60acb26
  41533b:	je     0x4152d6
  41533d:	shr    sp,1
  415340:	out    0x57,eax
  415342:	xchg   DWORD PTR [ecx-0x57],edi
  415345:	mul    DWORD PTR [ecx-0x1f]
  415348:	xlat   BYTE PTR ds:[ebx]
  415349:	je     0x41533d
  41534b:	add    BYTE PTR [eax-0x22],bl
  41534e:	nop
  41534f:	adc    BYTE PTR [edi],cl
  415351:	in     eax,dx
  415352:	or     BYTE PTR cs:[ebx-0x64e03a14],bl
  415359:	mov    edi,0xb9ce20b4
  41535e:	popa   
  41535f:	cmp    eax,DWORD PTR [eax]
  415361:	ret    0xb375
  415364:	mov    al,0x9c
  415366:	xchg   esp,eax
  415367:	add    al,0x9e
  415369:	fistp  QWORD PTR [eax]
  41536b:	test   eax,0x11747e0b
  415370:	test   al,ah
  415372:	hlt    
  415373:	jne    0x415312
  415375:	test   al,0x6a
  415377:	sbb    eax,0x9fda163a
  41537c:	or     bh,bh
  41537e:	loopne 0x415346
  415380:	pop    ss
  415381:	push   edx
  415382:	lods   al,BYTE PTR ds:[esi]
  415383:	pop    ss
  415384:	ret    
  415385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415386:	das    
  415387:	jg     0x4153b1
  415389:	loopne 0x415376
  41538b:	and    bh,BYTE PTR [edx-0x15bc94a0]
  415391:	xchg   DWORD PTR [eax],esp
  415393:	mov    es,ebp
  415395:	xchg   ecx,eax
  415396:	or     al,0xea
  415398:	fs fwait
  41539a:	scas   al,BYTE PTR es:[edi]
  41539b:	fld    TBYTE PTR [esi]
  41539d:	lock out 0xe1,al
  4153a0:	mov    eax,0xcd6ea85b
  4153a5:	adc    al,0x88
  4153a7:	mov    edx,0x746aa9fa
  4153ad:	dec    edi
  4153ae:	js     0x415339
  4153b0:	in     al,0x1d
  4153b2:	dec    esp
  4153b3:	sbb    eax,0x626fd932
  4153b8:	adc    ebx,edx
  4153ba:	add    BYTE PTR [eax],dl
  4153bc:	add    edi,DWORD PTR [ebx-0x17]
  4153bf:	ins    DWORD PTR es:[edi],dx
  4153c0:	add    DWORD PTR [edi+0x25],0xfffffff6
  4153c4:	sub    eax,0x8ee6eebe
  4153c9:	out    dx,eax
  4153ca:	gs pop es
  4153cc:	das    
  4153cd:	jge    0x4153f1
  4153cf:	cmp    DWORD PTR [edi-0x79],edx
  4153d2:	fld    QWORD PTR [ebp+ecx*8-0x13e02d06]
  4153d9:	ins    DWORD PTR es:[edi],dx
  4153da:	(bad)  
  4153db:	rcr    BYTE PTR [esi-0x275d30cd],1
  4153e1:	cwde   
  4153e2:	test   ah,dl
  4153e4:	lods   al,BYTE PTR ds:[esi]
  4153e5:	rol    edx,1
  4153e7:	jge    0x415385
  4153e9:	mov    esp,0x3857fecb
  4153ee:	pop    edx
  4153ef:	pusha  
  4153f0:	mov    ecx,0xdbd5a460
  4153f5:	mov    ebx,0x8df68ab0
  4153fa:	push   cs
  4153fb:	push   esi
  4153fc:	(bad)  
  4153fe:	mov    BYTE PTR [eax-0x1752de21],bl
  415404:	sbb    al,dh
  415406:	cs mov ebp,0xfffaa570
  41540c:	xchg   BYTE PTR [edi-0x2e],cl
  41540f:	jle    0x41547c
  415411:	mov    ebp,0xae6522bd
  415416:	and    DWORD PTR [ecx-0x2e9867d6],ebp
  41541c:	mov    al,BYTE PTR [eax]
  41541e:	mov    ebp,DWORD PTR [ebp+0x763619c8]
  415424:	pop    ebp
  415425:	pop    ds
  415426:	stc    
  415427:	rol    BYTE PTR [eax-0x56750d30],cl
  41542d:	aad    0x11
  41542f:	adc    eax,0x1e808121
  415434:	out    0x6b,al
  415436:	(bad)  
  415437:	jns    0x4154b5
  415439:	mov    esi,0x6c65f17c
  41543e:	push   0xe011e8ae
  415443:	cmp    eax,0x8b073224
  415448:	and    al,0xce
  41544a:	jbe    0x41541c
  41544c:	call   0x473b29da
  415451:	dec    ebp
  415452:	cmp    BYTE PTR [ebx+edi*1],0x99
  415456:	jo     0x41541b
  415458:	rcl    DWORD PTR [ebp+0x7],0x5d
  41545c:	jl     0x4154af
  41545e:	bound  edi,QWORD PTR [edi]
  415460:	adc    al,0x33
  415462:	cmp    esp,esi
  415464:	sbb    al,0x0
  415466:	xor    esp,ebx
  415468:	in     eax,dx
  415469:	mov    edi,DWORD PTR [eax]
  41546b:	fwait
  41546c:	push   0x1c
  41546e:	push   0x1f
  415470:	sti    
  415471:	loopne 0x415497
  415473:	pop    ss
  415474:	dec    edx
  415475:	dec    ebp
  415476:	imul   DWORD PTR ds:0x2ecaf87b
  41547c:	scas   al,BYTE PTR es:[edi]
  41547d:	mov    ds:0xad8e22a7,al
  415482:	arpl   bp,sp
  415484:	inc    ebp
  415485:	add    edi,DWORD PTR [eax+0x3f]
  415488:	fs push 0xffffff8f
  41548b:	into   
  41548c:	test   DWORD PTR [ebp-0x63],ebp
  41548f:	fild   QWORD PTR [edi]
  415491:	mov    esi,0x72cb6baf
  415496:	leave  
  415497:	mov    al,ds:0x5ef41323
  41549c:	xor    al,BYTE PTR [ebx]
  41549e:	(bad)  
  41549f:	imul   esp,DWORD PTR [ecx+0x67],0x5e
  4154a3:	pop    eax
  4154a4:	pop    ecx
  4154a5:	mov    ds:0x3c3ad57,al
  4154aa:	daa    
  4154ab:	pusha  
  4154ac:	fst    DWORD PTR [ecx+0x47a9be41]
  4154b2:	fwait
  4154b3:	add    eax,0xbb393b26
  4154b8:	and    edi,ebx
  4154ba:	gs jp  0x4154e3
  4154bd:	iret   
  4154be:	or     eax,0xc99ea720
  4154c3:	inc    edi
  4154c4:	pop    ecx
  4154c5:	xchg   edx,eax
  4154c6:	inc    edx
  4154c7:	xchg   esp,eax
  4154c8:	or     eax,0x6c33bda1
  4154cd:	clc    
  4154ce:	dec    esp
  4154cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d0:	lods   eax,DWORD PTR ds:[esi]
  4154d1:	mov    dl,0x0
  4154d3:	call   0x392c:0x27b43f72
  4154da:	outs   dx,BYTE PTR ds:[esi]
  4154db:	mov    eax,0x32cface3
  4154e0:	leave  
  4154e1:	add    ah,ch
  4154e3:	sar    DWORD PTR [ebp+0x4],0xe4
  4154e7:	mov    ds:0x40558f9b,eax
  4154ec:	and    DWORD PTR [ebx],ebx
  4154ee:	mov    DWORD PTR [ebx+0x11a4697e],edx
  4154f4:	repnz mov al,ds:0x85624c4f
  4154fa:	push   ecx
  4154fb:	(bad)  
  4154fc:	inc    esp
  4154fd:	loop   0x41549c
  4154ff:	mov    ebx,0xfca18b1f
  415504:	pop    edi
  415505:	test   DWORD PTR [edx],0xbe8fe980
  41550b:	test   DWORD PTR [ebp+0x7c],esp
  41550e:	jae    0x415586
  415510:	retf   0xd7ef
  415513:	jecxz  0x415544
  415515:	mov    DWORD PTR [edi-0x2d],ebx
  415518:	imul   ebx,esi,0xc41968bc
  41551e:	sbb    eax,DWORD PTR [edi+0x47ec3579]
  415524:	out    0x1f,al
  415526:	mov    eax,ds:0x7519e740
  41552b:	pushf  
  41552c:	scas   al,BYTE PTR es:[edi]
  41552d:	ret    0x69d8
  415530:	adc    al,0xc2
  415532:	lea    ebp,[esp+ebp*4-0x5b4713c]
  415539:	loopne 0x41552a
  41553b:	push   ecx
  41553c:	ror    DWORD PTR [edx],1
  41553e:	cwde   
  41553f:	repnz sbb al,BYTE PTR [ecx-0x46]
  415543:	mov    bl,0x4b
  415545:	xchg   edi,eax
  415546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415547:	out    0xf5,eax
  415549:	and    edx,0xffffffd5
  41554c:	in     al,dx
  41554d:	cli    
  41554e:	test   DWORD PTR [edx-0x1d25a150],ebp
  415554:	cmp    DWORD PTR [edx+0x63],edi
  415557:	hlt    
  415558:	mov    edx,0x187c625e
  41555d:	clc    
  41555e:	call   0x61a87981
  415563:	fisubr DWORD PTR [ebp+ecx*1-0x52a75020]
  41556a:	mov    eax,fs
  41556c:	mov    esp,DWORD PTR [edx+0x1e]
  41556f:	(bad)  
  415570:	mov    bl,0x88
  415572:	xlat   BYTE PTR ds:[ebx]
  415573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415574:	call   0x99e68fc8
  415579:	xchg   ebx,eax
  41557a:	xor    al,0x97
  41557c:	add    al,0x1c
  41557e:	mov    WORD PTR [ecx],ds
  415580:	aas    
  415581:	popa   
  415582:	aad    0x68
  415584:	mov    eax,DWORD PTR [edx+0x51]
  415587:	arpl   sp,si
  415589:	popf   
  41558a:	or     ebp,DWORD PTR [eax]
  41558c:	loope  0x4155ba
  41558e:	add    BYTE PTR [esp+eax*4-0x79],dh
  415592:	and    BYTE PTR [esi+eax*2],bl
  415595:	fwait
  415596:	lock cmp bl,bh
  415599:	adc    DWORD PTR [edi+0x36ae29a3],esi
  41559f:	shl    BYTE PTR [esi+0x79],0xe6
  4155a3:	ud2    
  4155a5:	xchg   sp,ax
  4155a7:	xchg   ebx,eax
  4155a8:	xchg   ecx,eax
  4155a9:	push   esi
  4155aa:	or     ecx,eax
  4155ac:	iret   
  4155ad:	add    al,0x52
  4155af:	out    dx,eax
  4155b0:	scas   al,BYTE PTR es:[edi]
  4155b1:	xchg   edx,eax
  4155b2:	sbb    eax,0x36e3c732
  4155b7:	ss mov ebx,0xfd4c0922
  4155bd:	cmp    eax,0x17fbddf4
  4155c2:	pop    ebp
  4155c3:	mov    ds:0x69cd77d6,al
  4155c8:	xor    al,0x2f
  4155ca:	pop    ebx
  4155cb:	lock and DWORD PTR [esi+0x59],eax
  4155cf:	lds    ebx,FWORD PTR [ebp+ebp*4-0xb]
  4155d3:	stos   BYTE PTR es:[edi],al
  4155d4:	adc    edx,DWORD PTR [ebx+0x41907073]
  4155da:	shl    BYTE PTR [eax+0x6c],cl
  4155dd:	call   0xae04f8ce
  4155e2:	xor    bl,bh
  4155e4:	sahf   
  4155e5:	or     eax,0x3af87df
  4155ea:	pop    ds
  4155eb:	das    
  4155ec:	push   ebp
  4155ed:	dec    esp
  4155ee:	and    al,0x3c
  4155f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155f1:	cmp    eax,0xc90722e
  4155f6:	aam    0xd1
  4155f8:	mov    dl,0x6d
  4155fa:	pop    edi
  4155fb:	mov    ebp,0xc01d4b8d
  415600:	sub    dh,al
  415602:	test   al,cl
  415604:	mov    ds,ebp
  415606:	adc    al,0x26
  415608:	sbb    DWORD PTR [eax-0x12],0xffffffa9
  41560c:	ss (bad) 
  41560f:	pop    ecx
  415610:	pop    ss
  415611:	ret    0x28ca
  415614:	mov    esi,0x94048630
  415619:	icebp  
  41561a:	mov    edi,0x83ddd453
  41561f:	mov    ebp,0x32bbb27a
  415624:	stc    
  415625:	inc    esp
  415626:	(bad)  
  415627:	mov    esp,0xc1f7a330
  41562c:	mov    al,ds:0xfc297c5b
  415631:	loopne 0x415666
  415633:	or     ebp,DWORD PTR [ecx+0x77]
  415636:	or     eax,0x4acd9dad
  41563c:	test   BYTE PTR [esp+eiz*4+0x1a2fcde9],dh
  415643:	inc    ebp
  415644:	lea    edx,[edi-0x44fa430]
  41564a:	pop    eax
  41564b:	xchg   BYTE PTR [esi],al
  41564d:	cmp    DWORD PTR [edi-0x7b],edi
  415650:	dec    ecx
  415651:	xchg   ecx,eax
  415652:	push   es
  415653:	add    edi,DWORD PTR [eax+esi*8-0x32c099fb]
  41565a:	cmp    BYTE PTR [ebp-0x12c4cda8],0x2f
  415661:	jl     0x41564d
  415663:	or     esp,DWORD PTR [ebp+0x4dc3adc6]
  415669:	in     eax,0xec
  41566b:	loop   0x415620
  41566d:	call   0xaf936683
  415672:	xchg   BYTE PTR [eax],bl
  415674:	add    dh,dh
  415676:	mov    ebx,0x9d70d6d7
  41567b:	inc    esi
  41567c:	jp     0x4156c8
  41567e:	out    dx,eax
  41567f:	clc    
  415680:	push   esp
  415681:	mov    DWORD PTR [eax+0x40373359],ebx
  415687:	jno    0x415704
  415689:	dec    ecx
  41568a:	cdq    
  41568b:	fbstp  TBYTE PTR [ecx]
  41568d:	mov    edi,DWORD PTR [edi-0x5d306cc8]
  415693:	lahf   
  415694:	or     DWORD PTR [ebx-0x42e359f4],ecx
  41569a:	pop    ebp
  41569b:	sbb    BYTE PTR [ebp+0x1c],bl
  41569e:	mov    ebp,0x742beb21
  4156a3:	adc    eax,0xaee00021
  4156a8:	outs   dx,DWORD PTR ds:[esi]
  4156a9:	iret   
  4156aa:	cmp    DWORD PTR [edx-0x45],esi
  4156ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ae:	cmp    bh,BYTE PTR [ebx-0x20]
  4156b1:	fs enter 0x5778,0xb5
  4156b6:	pop    edi
  4156b7:	stos   BYTE PTR es:[edi],al
  4156b8:	add    BYTE PTR [eax+eax*4+0x4e],bh
  4156bc:	std    
  4156bd:	in     eax,dx
  4156be:	xchg   edx,eax
  4156bf:	out    0x17,al
  4156c1:	cmp    esi,0x3f
  4156c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c5:	pop    ds
  4156c6:	mov    al,0xa0
  4156c8:	push   ecx
  4156c9:	js     0x415724
  4156cb:	pop    ds
  4156cc:	lea    ebx,[ebx]
  4156ce:	stos   DWORD PTR es:[edi],eax
  4156cf:	push   ds
  4156d0:	sbb    bl,ch
  4156d2:	push   0xffffffbf
  4156d4:	jl     0x4156e2
  4156d6:	mov    ebp,ds
  4156d8:	inc    edx
  4156d9:	adc    edx,DWORD PTR [esi+0x525c2da1]
  4156df:	xor    ebx,esi
  4156e1:	(bad)  
  4156e2:	jne    0x415758
  4156e4:	fstp   DWORD PTR [esi+0x3c]
  4156e7:	pop    ds
  4156e8:	add    eax,0x58779413
  4156ed:	sbb    eax,ecx
  4156ef:	sbb    ebp,DWORD PTR [edx+0x380935ec]
  4156f5:	pop    ebp
  4156f6:	jo     0x4156bc
  4156f8:	leave  
  4156f9:	add    al,0xae
  4156fb:	ficom  WORD PTR [edx-0x1140cd98]
  415701:	cdq    
  415702:	stos   BYTE PTR es:[edi],al
  415703:	js     0x4156ee
  415705:	rcr    DWORD PTR [edi+0x71],cl
  415708:	leave  
  415709:	aas    
  41570a:	mov    eax,cr1
  41570d:	push   cs
  41570e:	fsubr  st(7),st
  415710:	aad    0x73
  415712:	stos   DWORD PTR es:[edi],eax
  415713:	call   0xc5f4:0x6ffe2e11
  41571a:	pop    eax
  41571b:	fdivr  QWORD PTR [ecx-0x42e953b4]
  415721:	mov    al,ds:0xbfdc340
  415726:	fwait
  415727:	aam    0x5b
  415729:	enter  0xc102,0x4d
  41572d:	mov    BYTE PTR [esi-0x4],0xa3
  415731:	mov    ah,0x7a
  415733:	add    eax,0x2e0d4e74
  415738:	mov    eax,ds:0xe34355ef
  41573d:	cmp    BYTE PTR [edi-0x347178a9],bl
  415743:	add    ebp,ebx
  415745:	daa    
  415746:	js     0x41573c
  415748:	add    bl,0xf0
  41574b:	adc    eax,0x7a966aac
  415750:	cmp    al,0x9c
  415752:	push   edi
  415753:	jo     0x4156df
  415755:	add    al,0xea
  415757:	xlat   BYTE PTR ds:[ebx]
  415758:	push   ebx
  415759:	xor    DWORD PTR [eax+0x69bca558],esi
  41575f:	fdiv   QWORD PTR [ebx+ecx*4]
  415762:	xchg   edx,eax
  415763:	jb     0x4157a2
  415765:	sbb    eax,ebp
  415767:	dec    esi
  415768:	and    DWORD PTR [edi-0x7ee561a2],esp
  41576e:	inc    edx
  41576f:	mov    ebp,0x66637138
  415774:	xchg   ecx,eax
  415775:	xor    BYTE PTR [edi-0x1f434f55],ch
  41577b:	std    
  41577c:	lock push esi
  41577e:	call   0x73fa:0x32fe2e35
  415785:	cmc    
  415786:	jecxz  0x415708
  415788:	dec    eax
  415789:	fwait
  41578a:	jnp    0x4157d6
  41578c:	cmp    BYTE PTR [eax],dl
  41578e:	ja     0x41576a
  415790:	test   eax,0xb58b4d78
  415795:	pop    ebp
  415796:	out    dx,eax
  415797:	(bad)
  41579a:	(bad)  
  41579b:	jle    0x4157bd
  41579d:	popa   
  41579e:	sub    ah,dl
  4157a0:	test   eax,0x4ad82fb7
  4157a5:	jb     0x41580d
  4157a7:	xlat   BYTE PTR ds:[ebx]
  4157a8:	rcl    DWORD PTR [ecx+0x2dd6411c],cl
  4157ae:	retf   0xb1a
  4157b1:	jmp    0x41574a
  4157b3:	pop    ecx
  4157b4:	push   ebx
  4157b5:	arpl   WORD PTR [ebp+0x1886e942],ax
  4157bb:	mov    ds:0x7da88c81,eax
  4157c0:	dec    edi
  4157c1:	jp     0x4157c8
  4157c3:	push   ecx
  4157c4:	(bad)  
  4157c5:	int3   
  4157c6:	mov    cl,0xb9
  4157c8:	pop    es
  4157c9:	test   BYTE PTR [edi-0x29],0xfc
  4157cd:	(bad)  
  4157ce:	adc    DWORD PTR [eax+0x670aca8b],0xfffffff6
  4157d5:	add    ecx,esp
  4157d7:	or     ch,dl
  4157d9:	pop    ebx
  4157da:	mov    esi,DWORD PTR [ebx]
  4157dc:	dec    esp
  4157dd:	or     al,0xc1
  4157df:	push   cs
  4157e0:	sbb    al,0x26
  4157e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e3:	xchg   ebx,eax
  4157e4:	dec    esi
  4157e5:	mov    ebp,0xe0d2ff0
  4157ea:	push   es
  4157eb:	iret   
  4157ec:	inc    ebp
  4157ed:	lock lods eax,DWORD PTR ds:[esi]
  4157ef:	mov    bl,0x11
  4157f1:	mov    cs,WORD PTR [ebx]
  4157f3:	mov    BYTE PTR ds:0x25ff8025,cl
  4157f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157fa:	aaa    
  4157fb:	fisubr WORD PTR [eax-0x42]
  4157fe:	xchg   DWORD PTR [edx-0x7beb45d2],eax
  415804:	call   0xb664a087
  415809:	dec    ebp
  41580a:	jmp    0x33a6:0x17a7cfc7
  415811:	adc    BYTE PTR [esp+edx*2+0x5881d227],cl
  415818:	inc    edx
  415819:	inc    edi
  41581a:	xor    DWORD PTR [edx+0x52],esi
  41581d:	pop    ss
  41581e:	jae    0x4157af
  415820:	xchg   edi,eax
  415821:	loopne 0x4157b5
  415823:	xchg   DWORD PTR [ebx],esi
  415825:	out    dx,al
  415826:	mov    esp,0x914ae280
  41582b:	mov    ah,0xa
  41582d:	and    bh,dh
  41582f:	mov    dh,0x65
  415831:	adc    DWORD PTR [eax+0x27],ebp
  415834:	dec    ecx
  415835:	pushf  
  415836:	not    DWORD PTR [ebx+edx*1]
  415839:	outs   dx,DWORD PTR ds:[esi]
  41583a:	stc    
  41583b:	jmp    0x415889
  41583d:	sub    eax,0x24c1eb6e
  415842:	pop    ds
  415843:	inc    eax
  415844:	xchg   edx,eax
  415845:	imul   edi,DWORD PTR [eax+0x69],0xffffffcf
  415849:	aam    0x72
  41584b:	dec    esi
  41584c:	(bad)  
  41584d:	dec    BYTE PTR [ebp-0x2bdc0b0]
  415853:	mov    ch,0x4f
  415855:	enter  0xb303,0xb5
  415859:	(bad)  
  41585a:	not    ch
  41585c:	ret    
  41585d:	pop    edi
  41585e:	loop   0x41584e
  415860:	inc    esi
  415861:	cli    
  415862:	mov    edi,0x24e5261e
  415867:	jo     0x415815
  415869:	dec    ebp
  41586a:	mov    ecx,0xd8700d32
  41586f:	pop    esi
  415870:	sbb    bl,BYTE PTR [eax]
  415872:	push   eax
  415873:	or     BYTE PTR fs:[edx-0x71],0xc9
  415878:	imul   eax,DWORD PTR [eax+0xf],0xadfef5b8
  41587f:	aas    
  415880:	rol    BYTE PTR [esp+ecx*4-0x7d],1
  415884:	arpl   WORD PTR [edx-0x77],cx
  415887:	in     eax,0x71
  415889:	cmp    al,0x3e
  41588b:	and    esi,DWORD PTR [eax-0x5b45768c]
  415891:	sub    ebx,DWORD PTR [edi]
  415893:	sbb    esp,edx
  415895:	add    eax,0x2a
  415898:	daa    
  415899:	imul   esp,edx,0x93aef3ab
  41589f:	out    dx,al
  4158a0:	shl    BYTE PTR [edx-0x4c59c44a],1
  4158a6:	(bad)  
  4158a7:	mov    ds:0x5a124bf9,eax
  4158ac:	iret   
  4158ad:	cmp    BYTE PTR [esi],ah
  4158af:	test   al,0x2a
  4158b1:	xchg   esp,eax
  4158b2:	mov    edi,0xb7a56e15
  4158b7:	mov    al,ds:0x273d3c85
  4158bc:	jns    0x415925
  4158be:	xchg   esi,eax
  4158bf:	cs popa 
  4158c1:	xchg   BYTE PTR [edi+0x2],bl
  4158c4:	jne    0x41589a
  4158c6:	sar    eax,1
  4158c8:	jns    0x4158cc
  4158ca:	(bad)  
  4158cc:	cmp    BYTE PTR [edx],0x20
  4158cf:	xchg   ebp,eax
  4158d0:	sbb    al,0x47
  4158d2:	in     eax,dx
  4158d3:	sbb    ecx,DWORD PTR [ecx]
  4158d5:	lods   al,BYTE PTR ds:[esi]
  4158d6:	sahf   
  4158d7:	popa   
  4158d8:	mov    dl,0x10
  4158da:	das    
  4158db:	adc    BYTE PTR [edx-0x1e1856c7],bh
  4158e1:	cmp    BYTE PTR [esp+edx*1],dl
  4158e4:	sub    BYTE PTR [edx+0x6f0f3db0],dl
  4158ea:	dec    esp
  4158eb:	call   0xa9c7c1be
  4158f0:	mov    bl,0xa3
  4158f2:	mov    gs,edx
  4158f4:	xor    BYTE PTR [esi+0x3b0ea1f5],0x85
  4158fb:	cmp    bh,BYTE PTR [eax]
  4158fd:	loopne 0x415946
  4158ff:	andnps xmm4,XMMWORD PTR [ebx+0x3171cfb9]
  415906:	sahf   
  415907:	js     0x415919
  415909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41590a:	(bad)  
  41590b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41590c:	loope  0x4158d0
  41590e:	ret    
  41590f:	mov    edx,0x24b0c058
  415914:	xor    eax,0xf0ea18fa
  415919:	popa   
  41591a:	xchg   edx,eax
  41591b:	sbb    ecx,edi
  41591d:	push   edx
  41591e:	popf   
  41591f:	adc    eax,0xd88c8692
  415924:	xchg   DWORD PTR [edx+esi*4],esi
  415927:	loope  0x4159a7
  415929:	or     ebp,DWORD PTR [ecx-0x6f]
  41592c:	mov    ecx,DWORD PTR [ebp+0x3532d190]
  415932:	cmp    ch,ch
  415934:	popf   
  415935:	jnp    0x4158c5
  415937:	in     eax,dx
  415938:	inc    ebx
  415939:	pop    es
  41593a:	pop    es
  41593b:	pop    ecx
  41593c:	stos   DWORD PTR es:[edi],eax
  41593d:	sahf   
  41593e:	retf   
  41593f:	add    eax,0xeb1b861b
  415944:	pop    ebx
  415945:	dec    ebx
  415946:	loopne 0x4159af
  415948:	dec    ebx
  415949:	(bad)  
  41594a:	push   DWORD PTR [edx]
  41594c:	xor    dl,BYTE PTR [edi-0x4667fb25]
  415952:	mov    dh,0x15
  415954:	mov    eax,0x980a4ee
  415959:	mov    ds:0xeec17501,eax
  41595e:	inc    edx
  41595f:	sti    
  415960:	pop    ebx
  415961:	fwait
  415962:	jbe    0x4158ee
  415964:	or     DWORD PTR [edi+0x13],eax
  415967:	mov    eax,ds:0x344fa56d
  41596c:	popw   ds
  41596e:	adc    al,0x83
  415970:	fmul   QWORD PTR [esi]
  415972:	push   ebx
  415973:	xor    BYTE PTR [ecx-0x571350f3],ch
  415979:	daa    
  41597a:	inc    esp
  41597b:	xchg   DWORD PTR [esi-0x49b2e66d],esi
  415981:	xor    esp,eax
  415983:	(bad)  
  415984:	pop    eax
  415985:	adc    ch,BYTE PTR [ecx]
  415987:	cld    
  415988:	cli    
  415989:	mov    ecx,0x93043978
  41598e:	je     0x4159da
  415990:	dec    ebp
  415991:	in     eax,0xa0
  415993:	add    cl,ah
  415995:	push   ds
  415996:	mov    esi,0x7744da2b
  41599b:	out    dx,al
  41599c:	add    al,0xbd
  41599e:	jmp    0x41599f
  4159a0:	mov    edx,0x6ed066d9
  4159a5:	movsx  ebx,BYTE PTR [ebp+0x7b]
  4159a9:	mov    ch,0x1c
  4159ab:	pop    ebp
  4159ac:	push   ds
  4159ad:	aam    0x18
  4159af:	lea    esp,[ecx]
  4159b1:	mov    ebx,DWORD PTR [eax]
  4159b3:	jle    0x415969
  4159b5:	(bad)  
  4159b7:	mov    esp,0xcdda2fd3
  4159bc:	int3   
  4159bd:	stc    
  4159be:	loop   0x415a10
  4159c0:	loopne 0x415a3a
  4159c2:	hlt    
  4159c3:	sub    ch,BYTE PTR [eax+ebp*8-0x1d9312c2]
  4159ca:	xor    BYTE PTR [ebx],bh
  4159cc:	loop   0x415a37
  4159ce:	jecxz  0x41595d
  4159d0:	adc    BYTE PTR [ebx+0x18],dl
  4159d3:	mov    fs,WORD PTR [edi+eax*2-0x52297a8c]
  4159da:	adc    al,0xfc
  4159dc:	pop    eax
  4159dd:	fcom   DWORD PTR [ebx+0x32]
  4159e0:	shl    BYTE PTR [esi-0x53],0x97
  4159e4:	jp     0x415a4e
  4159e6:	fild   QWORD PTR [edi+0x4da2aa03]
  4159ec:	stc    
  4159ed:	call   0xf87ee93f
  4159f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f3:	arpl   WORD PTR [eax+esi*4+0x1b],ax
  4159f7:	(bad)  
  4159f8:	fs ja  0x4159ee
  4159fb:	pop    esi
  4159fc:	jns    0x415989
  4159fe:	scas   al,BYTE PTR es:[edi]
  4159ff:	jo     0x415a5f
  415a01:	and    eax,DWORD PTR [ebp+eiz*1-0x35aa1446]
  415a08:	sbb    eax,ebp
  415a0a:	pop    esi
  415a0b:	cmp    eax,0x7882f20b
  415a10:	shr    DWORD PTR [eax+eiz*8],cl
  415a13:	repz xchg ebp,eax
  415a15:	dec    ebp
  415a16:	lock jmp 0x415a69
  415a19:	ret    0x10bc
  415a1c:	mov    ebx,0x638d8e2e
  415a21:	mov    esi,0x7a683fd2
  415a26:	ror    BYTE PTR [edx+0x172e140e],cl
  415a2c:	push   ebx
  415a2d:	scas   eax,DWORD PTR es:[edi]
  415a2e:	mov    esi,gs
  415a30:	sub    eax,0xfd300288
  415a35:	scas   al,BYTE PTR es:[edi]
  415a36:	xchg   BYTE PTR [ebp+0x776d43d0],ch
  415a3c:	sbb    DWORD PTR [esp+eax*1],esi
  415a3f:	ins    DWORD PTR es:[edi],dx
  415a40:	xor    eax,0x60571e4b
  415a45:	ror    DWORD PTR [esi],1
  415a47:	gs das 
  415a49:	in     eax,dx
  415a4a:	sub    eax,0x566dd6d
  415a4f:	xchg   esi,eax
  415a50:	mov    cl,0xcc
  415a52:	pushf  
  415a53:	dec    esp
  415a54:	popa   
  415a55:	push   ecx
  415a56:	or     DWORD PTR ds:0x1e01b98b,eax
  415a5c:	push   ebx
  415a5d:	fnstsw WORD PTR gs:[edi+0x77cc975d]
  415a64:	xchg   bh,dl
  415a66:	cmc    
  415a67:	sbb    al,al
  415a69:	dec    ebp
  415a6a:	mov    ebx,0x39a9edb6
  415a6f:	jl     0x415a90
  415a71:	test   al,0x9a
  415a73:	sub    eax,ebp
  415a75:	jae    0x4159fe
  415a77:	imul   ebx,ecx,0xcb9d6b46
  415a7d:	sbb    eax,DWORD PTR [edx+ebp*8]
  415a80:	les    ecx,FWORD PTR [ebp-0x7e8f52fc]
  415a86:	mov    eax,ebx
  415a88:	popf   
  415a89:	sub    ebp,DWORD PTR [edx-0x55]
  415a8c:	sbb    al,0x99
  415a8e:	xor    dh,bl
  415a90:	cmp    ebp,ecx
  415a92:	(bad)  
  415a93:	call   0x9792:0xc836f207
  415a9a:	inc    ebp
  415a9b:	sub    eax,0x55a2551
  415aa0:	aaa    
  415aa1:	(bad)  
  415aa2:	cli    
  415aa3:	shr    DWORD PTR [ecx],1
  415aa5:	imul   BYTE PTR [ebp+0x35f30200]
  415aab:	xor    ch,ah
  415aad:	ja     0x415a67
  415aaf:	jge    0x415b22
  415ab1:	adc    eax,DWORD PTR [edx]
  415ab3:	xchg   edi,eax
  415ab4:	inc    ebx
  415ab5:	xor    BYTE PTR [eax],ah
  415ab7:	adc    DWORD PTR [ecx-0x36ce2ec],ecx
  415abd:	outs   dx,BYTE PTR ds:[esi]
  415abf:	outs   dx,DWORD PTR ds:[esi]
  415ac0:	sahf   
  415ac1:	retf   
  415ac2:	repz mov ah,0xf
  415ac5:	add    ch,BYTE PTR [esi+ecx*4+0x71d28fed]
  415acc:	loope  0x415a81
  415ace:	neg    BYTE PTR [edx+0x15]
  415ad1:	frstor [ebx+0x5b870920]
  415ad7:	xchg   ch,bl
  415ad9:	add    al,BYTE PTR [esp+esi*4-0x35]
  415add:	lods   eax,DWORD PTR ds:[esi]
  415ade:	xchg   ecx,eax
  415adf:	xor    bl,BYTE PTR [esp+edi*4+0x45]
  415ae3:	lods   al,BYTE PTR ds:[esi]
  415ae4:	sbb    BYTE PTR [eax-0x7e],0x2f
  415ae8:	out    dx,eax
  415ae9:	sub    eax,0x1e91599f
  415aee:	xor    al,0x32
  415af0:	aaa    
  415af1:	and    dl,BYTE PTR [ebp+ebp*2+0x63]
  415af5:	xchg   edx,eax
  415af6:	(bad)  
  415af7:	xchg   edx,eax
  415af8:	xchg   DWORD PTR [ecx+0x3f],edi
  415afb:	fmul   QWORD PTR [ebx+0x6b44c218]
  415b01:	in     eax,0x6a
  415b03:	dec    esp
  415b04:	popa   
  415b05:	std    
  415b06:	loope  0x415ab7
  415b08:	add    DWORD PTR [esi+0x255857e3],esi
  415b0e:	leave  
  415b0f:	repz test al,0xe3
  415b12:	cmc    
  415b13:	aad    0x19
  415b15:	cmp    edi,DWORD PTR [ebx+ebx*2+0x788c00ab]
  415b1c:	cmp    BYTE PTR fs:0x6b2a90ec,bh
  415b23:	test   DWORD PTR [edi+ebp*4-0x21],esp
  415b27:	xchg   edi,eax
  415b28:	retf   0x48d6
  415b2b:	adc    eax,esp
  415b2d:	add    ah,BYTE PTR [eax]
  415b2f:	jg     0x415b80
  415b31:	mov    edi,0x742e59e1
  415b36:	sub    edi,0x39
  415b39:	call   0xf0b6:0x950ff3f1
  415b40:	shr    DWORD PTR [ebx-0x35be0654],0x97
  415b47:	icebp  
  415b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b49:	ja     0x415b9a
  415b4b:	sub    al,0x47
  415b4d:	mov    BYTE PTR [eax],dh
  415b4f:	rol    DWORD PTR [eax+0x6f019ca6],1
  415b55:	cmp    BYTE PTR [eax+0x475f3007],ah
  415b5b:	add    eax,0xec719c8b
  415b60:	jo     0x415b42
  415b62:	into   
  415b63:	(bad)  
  415b64:	out    0xab,eax
  415b66:	fist   WORD PTR [eax+0x26]
  415b69:	xchg   ecx,eax
  415b6a:	cdq    
  415b6b:	ret    
  415b6c:	push   cs
  415b6d:	js     0x415afa
  415b6f:	mov    al,0x1a
  415b71:	loope  0x415b3f
  415b73:	rcr    ah,cl
  415b75:	inc    esi
  415b76:	cmp    edx,DWORD PTR [esi-0x15919d3f]
  415b7c:	imul   edi,DWORD PTR [eax+0x145fb56a],0x37
  415b83:	xchg   edx,eax
  415b84:	cli    
  415b85:	loopne 0x415b10
  415b87:	adc    edi,eax
  415b89:	scas   al,BYTE PTR es:[edi]
  415b8a:	cmc    
  415b8b:	xor    cl,cl
  415b8d:	xchg   edx,eax
  415b8e:	sbb    dh,BYTE PTR [ecx+ebp*1+0x5074cec1]
  415b95:	lods   al,BYTE PTR ds:[esi]
  415b96:	cmp    dl,BYTE PTR [ecx-0x33f156b2]
  415b9c:	inc    edi
  415b9d:	mov    ebx,0x4ef7fc17
  415ba2:	stos   DWORD PTR es:[edi],eax
  415ba3:	sbb    ah,al
  415ba5:	fstp   QWORD PTR [ebx+ebp*4]
  415ba8:	mov    ebx,0xe9928cb2
  415bad:	test   eax,0xcb49baa
  415bb2:	and    al,0xdd
  415bb4:	clc    
  415bb5:	aam    0x43
  415bb7:	inc    eax
  415bb8:	mov    cl,0x59
  415bba:	pop    eax
  415bbb:	fiadd  WORD PTR [ebx+edx*4]
  415bbe:	mov    ecx,0x9fd0cadd
  415bc3:	ds push cs
  415bc5:	gs (bad) 
  415bc7:	lock je 0x415c00
  415bca:	(bad)  
  415bcb:	out    dx,al
  415bcc:	or     dh,BYTE PTR [esi+edx*4-0x74]
  415bd0:	arpl   WORD PTR [ebp-0x37],bp
  415bd3:	daa    
  415bd4:	test   DWORD PTR [ecx],esi
  415bd6:	cwde   
  415bd7:	pop    es
  415bd8:	sub    DWORD PTR [ecx],edx
  415bda:	or     al,0x4
  415bdc:	mov    edx,0xb8cda1e8
  415be1:	jl     0x415c18
  415be3:	scas   eax,DWORD PTR es:[edi]
  415be4:	and    BYTE PTR [ecx+0x2c],al
  415be7:	adc    ah,BYTE PTR [eax+0x721f8e35]
  415bed:	loop   0x415b91
  415bef:	aas    
  415bf0:	hlt    
  415bf1:	fwait
  415bf2:	xchg   esp,eax
  415bf3:	outs   dx,DWORD PTR ds:[esi]
  415bf4:	cmp    al,0x17
  415bf6:	scas   al,BYTE PTR es:[edi]
  415bf7:	outs   dx,BYTE PTR ds:[esi]
  415bf8:	jb     0x415b9c
  415bfa:	cmp    al,0xfb
  415bfc:	inc    ebx
  415bfd:	icebp  
  415bfe:	shr    DWORD PTR [ecx],1
  415c00:	sbb    DWORD PTR [ecx+0x434aaf3e],edx
  415c06:	pop    ebp
  415c07:	push   cs
  415c08:	enter  0x140,0x57
  415c0c:	cmp    al,0x5c
  415c0e:	nop
  415c0f:	out    0x3b,eax
  415c11:	(bad)  
  415c12:	out    0xd1,al
  415c14:	(bad)  
  415c15:	and    esp,edi
  415c17:	leave  
  415c18:	xchg   ecx,eax
  415c19:	ins    DWORD PTR es:[edi],dx
  415c1a:	adc    DWORD PTR [ecx+0xaf763b6],edx
  415c20:	push   cs
  415c21:	jl     0x415c5d
  415c23:	out    dx,al
  415c24:	retf   0x4cb5
  415c27:	xor    edx,ebx
  415c29:	adc    BYTE PTR [ebp+0x1e5df3c3],bh
  415c2f:	or     ecx,DWORD PTR [eax-0x133da5da]
  415c35:	adc    esi,DWORD PTR [edi-0x7f]
  415c38:	hlt    
  415c39:	loope  0x415c62
  415c3b:	pop    ebp
  415c3c:	xor    bl,0x4
  415c3f:	rcr    DWORD PTR [ebx],1
  415c41:	push   0x6ca33b07
  415c46:	int    0x10
  415c48:	jno    0x415c8a
  415c4a:	jo     0x415cb6
  415c4c:	out    0x4b,eax
  415c4e:	or     DWORD PTR [ebx+0x4],eax
  415c51:	dec    ebp
  415c52:	int3   
  415c53:	loope  0x415c96
  415c55:	stos   DWORD PTR es:[edi],eax
  415c56:	xchg   esi,eax
  415c57:	in     ax,0xda
  415c5a:	pop    esp
  415c5b:	(bad)  
  415c5d:	jns    0x415c73
  415c5f:	xchg   ecx,eax
  415c60:	add    edx,DWORD PTR [edx+0xc75b171]
  415c66:	mov    ebp,0x69edfa1
  415c6b:	pusha  
  415c6c:	xor    eax,0xddf379ea
  415c71:	mov    dl,0x39
  415c73:	imul   ebp,DWORD PTR [esi+edx*1],0x2193c14d
  415c7a:	cmp    bh,BYTE PTR [esi-0x6e]
  415c7d:	xchg   esi,eax
  415c7e:	xor    esi,DWORD PTR [ebp-0x200a6085]
  415c84:	lea    esp,[ebp-0x69]
  415c87:	mov    edi,DWORD PTR [eax-0x68]
  415c8a:	push   0xd377b300
  415c8f:	fistp  DWORD PTR ss:[eax+eax*1]
  415c93:	jp     0x415d06
  415c95:	inc    ebx
  415c96:	bound  eax,QWORD PTR [ebx+0x6a]
  415c99:	xchg   edi,eax
  415c9a:	daa    
  415c9b:	xchg   DWORD PTR [edx-0x26],ebx
  415c9e:	jns    0x415cfb
  415ca0:	iret   
  415ca1:	sub    al,0x8e
  415ca3:	cmp    ch,BYTE PTR [ebp-0x26d1dcd1]
  415ca9:	dec    esi
  415caa:	push   ss
  415cab:	in     eax,0x90
  415cad:	mov    bl,BYTE PTR [eax]
  415caf:	mov    dh,0x11
  415cb1:	nop
  415cb2:	out    dx,al
  415cb3:	bound  eax,QWORD PTR [ecx-0x34939b9]
  415cb9:	dec    edi
  415cba:	jb     0x415caf
  415cbc:	loop   0x415ca4
  415cbe:	jg     0x415d39
  415cc0:	or     eax,0x76570414
  415cc5:	imul   edi,DWORD PTR [eax+0x1d],0xffffffb5
  415cc9:	inc    bp
  415ccb:	sbb    BYTE PTR [ebx-0x34],ch
  415cce:	inc    edi
  415ccf:	ret    0xedb9
  415cd2:	xchg   BYTE PTR [ecx-0x4a],al
  415cd5:	int    0x2
  415cd7:	jmp    0xedf7:0x573f277
  415cde:	lds    ebp,FWORD PTR [edx-0x2d0c2594]
  415ce4:	xchg   esp,eax
  415ce5:	xchg   esi,eax
  415ce6:	jecxz  0x415cfc
  415ce8:	int    0xb2
  415cea:	imul   edi,DWORD PTR [ecx-0x1d],0x4a821cbb
  415cf1:	in     eax,dx
  415cf2:	scas   eax,DWORD PTR es:[edi]
  415cf3:	jg     0x415c99
  415cf5:	ja     0x415d72
  415cf7:	fdivr  st(0),st
  415cf9:	inc    edx
  415cfa:	mov    ecx,0xcc0b5e6
  415cff:	test   DWORD PTR [edi+0x67df15f3],eax
  415d05:	jae    0x415cd4
  415d07:	std    
  415d08:	push   ecx
  415d09:	into   
  415d0a:	xchg   esp,eax
  415d0b:	mov    esi,DWORD PTR [edi+edi*4+0x5f]
  415d0f:	fadd   QWORD PTR [eax+edi*2]
  415d12:	inc    edi
  415d13:	adc    DWORD PTR fs:[ebx+esi*4+0x259b4f92],esi
  415d1b:	retf   
  415d1c:	sub    DWORD PTR [eax-0x63],ebp
  415d1f:	aad    0xbb
  415d21:	ss jmp 0xa1b3c5ef
  415d27:	push   0x26
  415d29:	fimul  DWORD PTR [esi+0x6c70bddb]
  415d2f:	and    al,0x91
  415d31:	ror    ecx,cl
  415d33:	xchg   ebp,eax
  415d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d35:	(bad)  
  415d36:	mov    ecx,0xa9a4a977
  415d3b:	sub    edx,DWORD PTR [ebx-0x6c9bbccb]
  415d41:	test   al,0xb4
  415d43:	mov    al,0x6e
  415d45:	aas    
  415d46:	ror    BYTE PTR [esi+0x136f58ad],0x1b
  415d4d:	adc    DWORD PTR [eax-0x7443294e],esp
  415d53:	mov    ah,0xb3
  415d55:	cmp    bl,0xcd
  415d58:	cmp    al,0x13
  415d5a:	shr    eax,0x2
  415d5d:	xchg   ebp,eax
  415d5e:	push   esi
  415d5f:	jmp    0x31b23a30
  415d64:	sbb    ah,dl
  415d66:	mov    ds:0x12ca6114,eax
  415d6b:	imul   esp,DWORD PTR [edi-0x5a7bb1d9],0xc84a6494
  415d75:	imul   ebp,DWORD PTR [edi],0xffffffee
  415d78:	jmp    0x415d5f
  415d7a:	adc    edi,DWORD PTR [ebx+0x9]
  415d7d:	push   0xe208025f
  415d82:	mov    WORD PTR [eax],cs
  415d84:	(bad)  
  415d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d87:	adc    eax,0x6108bee1
  415d8c:	push   es
  415d8d:	out    0x89,eax
  415d8f:	dec    eax
  415d90:	not    DWORD PTR [esi+0x3b]
  415d93:	hlt    
  415d94:	lds    esp,FWORD PTR [ecx-0x77]
  415d97:	mov    dl,0xe1
  415d99:	or     eax,0xf22c5d8e
  415d9e:	lds    ebx,FWORD PTR [eax+eax*4]
  415da1:	and    ah,dl
  415da3:	shl    BYTE PTR [ecx+0x7fefa29],0xa5
  415daa:	mov    eax,ds:0xac76a579
  415daf:	scas   al,BYTE PTR es:[edi]
  415db0:	push   edx
  415db1:	mov    WORD PTR ds:0xa3e8e474,?
  415db7:	(bad)  
  415db8:	inc    ebp
  415db9:	aaa    
  415dba:	mov    edx,0x1ba8f97b
  415dbf:	sbb    DWORD PTR [esi-0x5a],ecx
  415dc2:	inc    esp
  415dc3:	ret    0x1786
  415dc6:	ss mov ebp,0x84ab68d1
  415dcc:	das    
  415dcd:	adc    dl,BYTE PTR [esi+0x5a]
  415dd0:	lea    ebp,[esi]
  415dd2:	out    0x97,al
  415dd4:	xor    dh,BYTE PTR [esi]
  415dd6:	mov    ds:0xc465fac9,eax
  415ddb:	aaa    
  415ddc:	inc    ebp
  415ddd:	mov    al,bl
  415ddf:	clc    
  415de0:	hlt    
  415de1:	std    
  415de2:	pushf  
  415de3:	add    esi,esp
  415de5:	outs   dx,BYTE PTR ds:[esi]
  415de6:	mov    edx,0x6fa7f6c3
  415deb:	cmc    
  415dec:	loop   0x415e39
  415dee:	lods   eax,DWORD PTR ds:[esi]
  415def:	ret    
  415df0:	adc    ecx,ebx
  415df2:	lahf   
  415df3:	sub    ecx,DWORD PTR [eax]
  415df5:	fs sti 
  415df7:	xchg   esi,eax
  415df8:	inc    eax
  415df9:	std    
  415dfa:	dec    esi
  415dfb:	xor    ebx,eax
  415dfd:	mul    DWORD PTR [ecx-0x57]
  415e00:	inc    esp
  415e01:	sbb    eax,0xb6f0e81f
  415e06:	pushf  
  415e07:	js     0x415e2b
  415e09:	rcl    DWORD PTR [edx-0x37],cl
  415e0c:	adc    eax,0x20d0ae95
  415e11:	mov    ah,0xed
  415e13:	pushf  
  415e14:	add    DWORD PTR [esi+0x59ba344c],edx
  415e1a:	or     dh,BYTE PTR [esi+ebx*8+0x2aeff5f]
  415e21:	ficom  WORD PTR [eax]
  415e23:	sub    al,0x31
  415e25:	lods   al,BYTE PTR ds:[esi]
  415e26:	call   0x449c:0xc679f67b
  415e2d:	fs inc esp
  415e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e30:	push   cs
  415e31:	mov    bl,dh
  415e33:	inc    ecx
  415e34:	push   ebp
  415e35:	adc    eax,0x2d54b8ef
  415e3a:	pop    esi
  415e3b:	aad    0x23
  415e3d:	jmp    0xd066f348
  415e42:	xlat   BYTE PTR ds:[ebx]
  415e43:	push   eax
  415e44:	test   eax,0xf8a76cd5
  415e49:	jl     0x415de3
  415e4b:	pop    ebp
  415e4c:	sub    eax,0x85e6f7f2
  415e51:	pop    edi
  415e52:	sar    DWORD PTR [ebx+ecx*4+0x2b],cl
  415e56:	and    al,BYTE PTR [edx]
  415e58:	sbb    al,0x85
  415e5a:	mov    cl,0x17
  415e5c:	fwait
  415e5d:	xlat   BYTE PTR ds:[ebx]
  415e5e:	push   cs
  415e5f:	mov    bl,0x8e
  415e61:	push   0x1
  415e63:	test   BYTE PTR [eax-0x7f],dh
  415e66:	sub    eax,0x73969c61
  415e6b:	dec    edx
  415e6c:	frstor [ecx+0x6c846fbb]
  415e72:	and    al,0x8e
  415e74:	inc    ecx
  415e75:	mov    ebx,0xc465ac77
  415e7a:	lds    ecx,FWORD PTR [ebx-0x241bb4f]
  415e80:	les    esi,FWORD PTR [edi]
  415e82:	or     eax,0x9346db6b
  415e87:	les    eax,FWORD PTR [ecx-0x74]
  415e8a:	adc    al,0x7d
  415e8c:	aas    
  415e8d:	mov    dh,0x6f
  415e8f:	lea    ebx,[bx+si]
  415e92:	push   es
  415e93:	out    0xaf,eax
  415e95:	dec    ebx
  415e96:	or     bl,BYTE PTR [edx]
  415e98:	cdq    
  415e99:	outs   dx,DWORD PTR ds:[esi]
  415e9a:	ins    BYTE PTR es:[edi],dx
  415e9b:	sub    eax,0x344a7e67
  415ea0:	dec    edx
  415ea1:	mov    cl,0xc7
  415ea3:	xchg   edx,eax
  415ea4:	loopne 0x415e68
  415ea6:	aas    
  415ea7:	lea    eax,[eax+0x46]
  415eaa:	jo     0x415e7e
  415eac:	mov    dl,0x13
  415eae:	lock pop esi
  415eb0:	call   0x8dad8df2
  415eb5:	inc    ebx
  415eb6:	xor    al,0x6f
  415eb8:	and    BYTE PTR [edx-0x69],bh
  415ebb:	inc    edi
  415ebc:	or     bl,BYTE PTR [ebx]
  415ebe:	sub    DWORD PTR [edi],ebp
  415ec0:	lahf   
  415ec1:	fstp   TBYTE PTR [ecx+0x6d]
  415ec4:	outs   dx,BYTE PTR ds:[esi]
  415ec5:	mov    edi,0xb322991f
  415eca:	jecxz  0x415f41
  415ecc:	lea    eax,[edi-0x6ec830e2]
  415ed2:	inc    edi
  415ed3:	or     al,0xa3
  415ed5:	mov    ds:0x4bb268ec,al
  415eda:	push   eax
  415edb:	inc    esp
  415edc:	xlat   BYTE PTR ds:[ebx]
  415edd:	icebp  
  415ede:	mov    WORD PTR [eax-0x1b],gs
  415ee1:	inc    esp
  415ee2:	cs call 0x41d0:0xbe5404f7
  415eea:	and    ch,bh
  415eec:	xchg   ecx,eax
  415eed:	push   ebp
  415eee:	push   eax
  415eef:	into   
  415ef0:	shl    BYTE PTR [esp+ecx*2],1
  415ef3:	sbb    dl,cl
  415ef5:	scas   eax,DWORD PTR es:[edi]
  415ef6:	scas   al,BYTE PTR es:[edi]
  415ef7:	clc    
  415ef8:	test   cl,0x84
  415efb:	jno    0x415ebf
  415efd:	inc    ebx
  415efe:	xchg   edx,eax
  415eff:	dec    eax
  415f00:	(bad)  
  415f01:	pop    ss
  415f02:	adc    eax,0xe689b81d
  415f07:	aaa    
  415f08:	test   DWORD PTR [esi],ebx
  415f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f0b:	imul   edi,DWORD PTR [edi-0x6c5003e3],0x6b
  415f12:	fwait
  415f13:	js     0x415f75
  415f15:	xor    edi,esp
  415f17:	mov    esp,0x6f823793
  415f1c:	push   esp
  415f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1e:	aaa    
  415f1f:	lock and BYTE PTR [ebp+0x18245863],cl
  415f26:	mov    ah,0xd8
  415f28:	add    al,BYTE PTR [esp+ecx*2]
  415f2b:	push   esp
  415f2c:	xlat   BYTE PTR ds:[ebx]
  415f2d:	mov    eax,0x4a069d57
  415f32:	jp     0x415f30
  415f34:	push   edi
  415f35:	test   eax,0x931740e2
  415f3a:	test   al,0x5a
  415f3c:	pop    ebx
  415f3d:	shl    bl,cl
  415f3f:	sub    ah,cl
  415f41:	xchg   ebp,eax
  415f42:	leave  
  415f43:	and    edi,ebp
  415f45:	(bad)  
  415f46:	(bad)  
  415f47:	out    0xa1,al
  415f49:	pop    esp
  415f4a:	lods   al,BYTE PTR ds:[esi]
  415f4b:	sub    edx,DWORD PTR [edx]
  415f4d:	das    
  415f4e:	push   es
  415f4f:	hlt    
  415f50:	mov    esp,0xd2dd31b2
  415f55:	cmp    al,ch
  415f57:	loope  0x415f62
  415f59:	(bad)  
  415f5a:	jg     0x415f9b
  415f5c:	fs cmp al,0x18
  415f5f:	fisttp WORD PTR [esi-0x69]
  415f62:	rcr    DWORD PTR [ebx-0x197f9e0e],0x71
  415f69:	jne    0x415f52
  415f6b:	inc    edx
  415f6c:	stos   BYTE PTR es:[edi],al
  415f6d:	pop    ds
  415f6e:	push   ss
  415f6f:	pushf  
  415f70:	sub    DWORD PTR [esi+0x40faacc3],0x34
  415f77:	sbb    eax,0x88f02f24
  415f7c:	jo     0x415ff9
  415f7e:	(bad)  
  415f80:	sti    
  415f81:	lea    edx,[edi+esi*1-0x2e]
  415f85:	jno    0x415fe5
  415f87:	pop    ebx
  415f88:	lea    ecx,cs:[ebx]
  415f8b:	adc    ch,dh
  415f8d:	cmc    
  415f8e:	and    edx,DWORD PTR [ecx+0x67]
  415f91:	mov    ds:0x8ff6a28f,eax
  415f96:	adc    edi,esi
  415f98:	adc    al,0x26
  415f9a:	aas    
  415f9b:	mov    edx,0x3a28aa1a
  415fa0:	sub    al,0x47
  415fa2:	dec    edx
  415fa3:	sbb    ax,WORD PTR ds:0x8a2d41
  415faa:	pop    edx
  415fab:	jcxz   0x415f6f
  415fae:	daa    
  415faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb0:	push   es
  415fb1:	add    DWORD PTR [ebx],esp
  415fb3:	sar    esp,cl
  415fb5:	addr16 sahf 
  415fb7:	push   edx
  415fb8:	mov    esi,?
  415fba:	cli    
  415fbb:	mov    ebx,0x243b7af3
  415fc0:	fild   WORD PTR [esp+edx*8-0x721f1f0d]
  415fc7:	jg     0x415f5f
  415fc9:	ret    
  415fca:	inc    eax
  415fcb:	jp     0x415f8f
  415fcd:	and    edi,DWORD PTR [esi+0x1f23e46f]
  415fd3:	sti    
  415fd4:	jg     0x41600e
  415fd6:	shr    BYTE PTR [ecx+0x95c6933],cl
  415fdc:	(bad)  
  415fdd:	dec    edx
  415fde:	test   al,0x62
  415fe0:	mov    ebp,DWORD PTR [edx+0x3]
  415fe3:	sbb    esp,eax
  415fe5:	adc    BYTE PTR [eax],ch
  415fe7:	imul   esi,DWORD PTR [ecx-0x38],0x7b
  415feb:	stos   DWORD PTR es:[edi],eax
  415fec:	pop    es
  415fed:	dec    edx
  415fee:	mov    cr4,ebp
  415ff1:	xchg   ebx,eax
  415ff2:	push   ds
  415ff3:	test   bh,al
  415ff5:	xor    ebx,DWORD PTR [edx+0x5f]
  415ff8:	jg     0x416013
  415ffa:	jl     0x415fca
  415ffc:	cmp    esi,esi
  415ffe:	mov    WORD PTR [edx+esi*2],?
  416001:	mov    BYTE PTR [edx],al
  416003:	fs pop es
  416005:	sbb    eax,DWORD PTR [ebp-0x56749274]
  41600b:	outs   dx,DWORD PTR ds:[esi]
  41600c:	mov    ch,0x4c
  41600e:	icebp  
  41600f:	sbb    bh,dl
  416011:	inc    ebx
  416012:	lock mov ch,0x63
  416015:	ficomp WORD PTR [ebp-0x45]
  416018:	sub    DWORD PTR [esi],ebx
  41601a:	push   esp
  41601b:	jo     0x41601e
  41601d:	adc    al,0xc6
  41601f:	pop    ds
  416020:	ror    eax,cl
  416022:	loope  0x4160a2
  416024:	or     ch,BYTE PTR [edx-0x73]
  416027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416028:	popf   
  416029:	jmp    0x415ff8
  41602b:	dec    esi
  41602c:	dec    edx
  41602d:	in     eax,0x5e
  41602f:	hlt    
  416030:	aad    0x4
  416032:	cmc    
  416033:	and    bl,BYTE PTR [ebx-0x7d]
  416036:	adc    eax,0x657eb07d
  41603b:	js     0x41605b
  41603d:	cmp    eax,0x7a17aa11
  416042:	in     eax,dx
  416043:	aas    
  416044:	sbb    DWORD PTR [edi],esp
  416046:	(bad)  
  416047:	adc    eax,DWORD PTR [ecx+ebp*4-0x63]
  41604b:	jne    0x416084
  41604d:	(bad)  
  41604e:	jp     0x4160b1
  416050:	adc    dh,ch
  416052:	mov    eax,ds:0x75ed5a43
  416057:	sub    dl,BYTE PTR [ecx]
  416059:	xchg   DWORD PTR [edx+0x576576de],edx
  41605f:	fiadd  DWORD PTR [edx-0x72]
  416062:	hlt    
  416063:	aas    
  416064:	icebp  
  416065:	jo     0x416025
  416067:	push   ebp
  416068:	in     eax,0xc4
  41606a:	mov    bh,0xcf
  41606c:	aas    
  41606d:	jmp    0x5bc3:0x680469dc
  416074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416075:	rcl    DWORD PTR [ebx+ebx*2+0x9],0xa6
  41607a:	iret   
  41607b:	icebp  
  41607c:	out    0x2c,eax
  41607e:	shr    BYTE PTR [ebp-0x13],cl
  416081:	repz pop esp
  416083:	arpl   cx,cx
  416085:	mov    eax,ds:0x360f4655
  41608a:	scas   al,BYTE PTR es:[edi]
  41608b:	add    ah,BYTE PTR [edi+0x556e9f85]
  416091:	sbb    BYTE PTR [ebx+ebp*1+0x46],dl
  416095:	enter  0xd144,0x31
  416099:	dec    ecx
  41609a:	retf   
  41609b:	icebp  
  41609c:	imul   edx,DWORD PTR [ecx+0x4f],0xcb487d38
  4160a3:	cmp    DWORD PTR [ebx-0x582521fa],ecx
  4160a9:	bnd jo 0x4160d8
  4160ac:	cmp    eax,0x7ccfb827
  4160b1:	dec    ebp
  4160b2:	jb     0x4160f3
  4160b4:	mov    DWORD PTR [edi-0xf],esp
  4160b7:	cmp    ch,BYTE PTR [ecx-0x2abef0d]
  4160bd:	dec    ebp
  4160be:	add    eax,ecx
  4160c0:	adc    eax,0x788f2dae
  4160c5:	cmp    eax,0xf7685bc6
  4160ca:	imul   edi,DWORD PTR [edx+ebp*4],0xf069aa2a
  4160d1:	(bad)  
  4160d2:	adc    al,0x32
  4160d4:	mov    ecx,0x39016209
  4160d9:	pop    es
  4160da:	enter  0x9e86,0x4
  4160de:	aam    0x1a
  4160e0:	(bad)  
  4160e1:	jmp    0x30d9b1a5
  4160e6:	adc    ah,BYTE PTR [ecx]
  4160e8:	fcomp  QWORD PTR [esi-0x3163e125]
  4160ee:	xchg   edx,eax
  4160ef:	pop    ds
  4160f0:	sub    BYTE PTR [ecx-0x53a4af7c],ah
  4160f6:	mov    al,ds:0x714720f7
  4160fb:	gs inc esp
  4160fd:	mov    ch,0x33
  4160ff:	fsubr  DWORD PTR ds:0x19f5e313
  416105:	out    dx,eax
  416106:	lods   al,BYTE PTR ds:[esi]
  416107:	jnp    0x416143
  416109:	mov    edi,cs
  41610b:	sub    ebp,DWORD PTR ds:0x2f9c4110
  416111:	push   0x6c
  416113:	adc    BYTE PTR [edx-0x6b],bh
  416116:	loopne 0x41615f
  416118:	in     al,0x88
  41611a:	jnp    0x416197
  41611c:	mov    ebp,0x5a6b505f
  416121:	leave  
  416122:	mov    cl,0x2c
  416124:	dec    ecx
  416125:	mov    dh,0xc6
  416127:	jno    0x416144
  416129:	sbb    DWORD PTR [ebx],eax
  41612b:	in     al,dx
  41612c:	adc    eax,0x79fb5dc9
  416131:	jl     0x41610e
  416133:	fnstcw WORD PTR [ebx-0x5e]
  416136:	test   eax,0x9db00c26
  41613b:	lds    ebp,FWORD PTR [ebp+ebx*1+0x5d6c368e]
  416142:	and    cl,BYTE PTR [esi-0x4e]
  416145:	test   BYTE PTR fs:[ebx],cl
  416148:	cmp    eax,0xbf1af438
  41614d:	sbb    BYTE PTR [ebp-0x287d1ab5],cl
  416153:	fist   DWORD PTR [edx-0x62f35b95]
  416159:	addr16 in eax,dx
  41615b:	xchg   ecx,eax
  41615c:	sti    
  41615d:	imul   edi
  41615f:	(bad)  
  416160:	popa   
  416161:	and    DWORD PTR [ebx],edi
  416163:	jmp    0xcfd:0x7d2a9675
  41616a:	and    edi,edx
  41616c:	jne    0x4161de
  41616e:	push   esp
  41616f:	cwde   
  416170:	loop   0x4160f3
  416172:	mov    al,0x1f
  416174:	pop    ss
  416175:	mov    dl,0x44
  416177:	nop
  416178:	inc    ecx
  416179:	inc    ebx
  41617a:	pop    esi
  41617b:	repnz xor ebx,esi
  41617e:	xchg   BYTE PTR [esi],al
  416180:	push   ds
  416181:	mov    bx,0x26df
  416185:	sub    al,BYTE PTR [eax-0x62421f3b]
  41618b:	add    BYTE PTR [edx],cl
  41618d:	addr16 or eax,0xd4b5bb87
  416193:	fisub  DWORD PTR [edi+0x131523da]
  416199:	(bad)  
  41619a:	cs mov ecx,0x3f8dbd45
  4161a0:	jnp    0x4161ee
  4161a2:	xchg   edx,eax
  4161a3:	repnz push ebx
  4161a5:	dec    ebp
  4161a6:	push   0xfffffffe
  4161a8:	add    al,0x9b
  4161aa:	adc    BYTE PTR [esi],cl
  4161ac:	jb     0x416222
  4161ae:	mov    cl,BYTE PTR [edi+0x52fe7b98]
  4161b4:	mov    ds:0x91d4832c,al
  4161b9:	dec    ebx
  4161ba:	cmp    DWORD PTR [edx+edx*1],0x63
  4161be:	js     0x416224
  4161c0:	jae    0x4161ed
  4161c2:	xchg   ecx,eax
  4161c3:	pop    edi
  4161c4:	pop    edx
  4161c5:	push   ds
  4161c6:	int3   
  4161c7:	sbb    edi,ebp
  4161c9:	or     al,0x56
  4161cb:	dec    edx
  4161cc:	mov    esi,0x9322211c
  4161d1:	retf   0xce88
  4161d4:	inc    ecx
  4161d5:	or     ecx,esp
  4161d7:	pusha  
  4161d8:	dec    esi
  4161d9:	mov    edi,0x4b97f516
  4161de:	test   ecx,esi
  4161e0:	in     al,0x62
  4161e2:	mov    DWORD PTR [ebx],ecx
  4161e4:	into   
  4161e5:	dec    DWORD PTR [eax+0x15329125]
  4161eb:	outs   dx,DWORD PTR ds:[esi]
  4161ec:	jb     0x41619f
  4161ee:	sar    DWORD PTR [edx-0x44],cl
  4161f1:	aad    0x58
  4161f3:	dec    ebp
  4161f4:	inc    edi
  4161f5:	fst    QWORD PTR [ebx-0x4b]
  4161f9:	adc    DWORD PTR [ecx+0x23],esp
  4161fc:	jl     0x416201
  4161fe:	mov    eax,ds:0x9344da0c
  416203:	dec    edi
  416204:	push   cs
  416205:	in     al,dx
  416206:	out    dx,eax
  416207:	cmp    BYTE PTR [ebx+0x17],cl
  41620a:	ins    BYTE PTR es:[edi],dx
  41620b:	and    DWORD PTR [eax-0x6b],edx
  41620e:	xchg   esp,eax
  41620f:	or     BYTE PTR [edx-0x37],dl
  416212:	adc    DWORD PTR [ebp-0x2a09d64a],esi
  416218:	inc    esi
  416219:	hlt    
  41621a:	sub    bh,ch
  41621c:	std    
  41621d:	add    dh,al
  41621f:	loopne 0x4161ae
  416221:	mov    esi,0x526ad7b2
  416226:	shl    BYTE PTR [ebx+0x773ae190],1
  41622c:	or     ecx,DWORD PTR [ebx]
  41622e:	add    BYTE PTR [esi+edx*4+0x25],bl
  416232:	out    0xfd,al
  416234:	mov    dh,0x8f
  416236:	mov    esi,0x9bc4ae83
  41623b:	or     DWORD PTR [ecx],esp
  41623d:	dec    ebx
  41623e:	mov    ah,0xea
  416240:	sti    
  416241:	call   0x9c15:0xf5c525ca
  416248:	test   BYTE PTR [edx+edi*4+0x69212b4e],ch
  41624f:	mov    DWORD PTR [ebx+ebx*8],0xca37452
  416256:	mov    cl,0x92
  416258:	sub    bh,BYTE PTR [ebp-0x18]
  41625b:	sahf   
  41625c:	(bad)  
  41625d:	cmp    edi,ebx
  41625f:	imul   esp,DWORD PTR [edx],0x68
  416262:	mov    edx,0xedf515e
  416267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416268:	pushf  
  416269:	sub    ecx,DWORD PTR [eax+0xc]
  41626c:	jbe    0x41624a
  41626e:	stos   BYTE PTR es:[edi],al
  41626f:	test   eax,0x708352cb
  416274:	sbb    DWORD PTR [edx-0x6f],edi
  416277:	mov    ch,0x80
  416279:	inc    edi
  41627a:	inc    ecx
  41627b:	cmp    ecx,DWORD PTR [edi+0x1d]
  41627e:	jecxz  0x41627f
  416280:	stos   DWORD PTR es:[edi],eax
  416281:	jns    0x416284
  416283:	scas   eax,DWORD PTR es:[edi]
  416284:	and    DWORD PTR [esi+ebp*2-0x31],edx
  416288:	dec    esi
  416289:	ror    DWORD PTR [edi],0xb4
  41628c:	mov    bl,0xad
  41628e:	out    dx,al
  41628f:	call   0x94002d
  416294:	sbb    al,0xef
  416296:	mov    ebp,0x7f33eda9
  41629b:	adc    al,0xb1
  41629d:	jnp    0x4162f6
  41629f:	xchg   esi,eax
  4162a0:	jecxz  0x41622b
  4162a2:	and    edx,DWORD PTR [esi+0x4f731bd9]
  4162a8:	jp     0x41628c
  4162aa:	add    esp,DWORD PTR [edi+0xe]
  4162ad:	(bad)  
  4162ae:	sar    ebx,cl
  4162b0:	xchg   BYTE PTR [ebp+0x8],cl
  4162b3:	jp     0x41625c
  4162b5:	mov    eax,0x1121874c
  4162ba:	(bad)
  4162bd:	mov    ah,0x7
  4162bf:	stos   BYTE PTR es:[edi],al
  4162c0:	(bad)  
  4162c1:	and    BYTE PTR [ebp-0xa],ah
  4162c4:	and    eax,0x5b0e26b2
  4162c9:	inc    ebx
  4162ca:	aad    0x65
  4162cc:	call   0xb2f4:0x942f9318
  4162d3:	leave  
  4162d4:	scas   eax,DWORD PTR es:[edi]
  4162d5:	sbb    al,0x0
  4162d8:	lahf   
  4162d9:	dec    esp
  4162da:	scas   eax,DWORD PTR es:[edi]
  4162db:	fwait
  4162dc:	ret    0xf490
  4162df:	loop   0x416352
  4162e1:	ins    BYTE PTR es:[edi],dx
  4162e2:	sar    DWORD PTR [esi],1
  4162e4:	pop    es
  4162e5:	mov    cl,0x6b
  4162e7:	fcomp  QWORD PTR [ebp+0x5ecd7439]
  4162ed:	mov    eax,ds:0xcbe3ece2
  4162f2:	lea    eax,[ecx+0x3064ea45]
  4162f8:	enter  0x6702,0x70
  4162fc:	pop    ebp
  4162fd:	mov    eax,ds:0x9bd6f231
  416302:	stos   DWORD PTR es:[edi],eax
  416303:	inc    ebx
  416304:	push   0xc3bf02ef
  416309:	jb     0x41636c
  41630b:	outs   dx,DWORD PTR ds:[esi]
  41630c:	adc    DWORD PTR [bx+di-0x150a],ecx
  416311:	and    eax,0x90f3cc0f
  416316:	in     eax,0xd9
  416318:	dec    ebx
  416319:	retf   
  41631a:	pop    edx
  41631b:	sbb    edi,ebx
  41631d:	lods   al,BYTE PTR ds:[esi]
  41631e:	(bad)  
  41631f:	pop    edi
  416320:	stos   BYTE PTR es:[edi],al
  416321:	add    al,0xe8
  416323:	jle    0x4162c3
  416325:	dec    eax
  416326:	push   cs
  416327:	xchg   ebx,eax
  416328:	aam    0x14
  41632a:	stos   DWORD PTR es:[edi],eax
  41632b:	outs   dx,BYTE PTR ds:[esi]
  41632c:	les    eax,FWORD PTR [edx+0x20]
  41632f:	dec    ecx
  416330:	ret    
  416331:	jnp    0x4163ae
  416333:	add    eax,0x9f7c73cd
  416338:	or     BYTE PTR [esi],ah
  41633a:	jg     0x4162d4
  41633c:	adc    BYTE PTR [ebp-0x36],bh
  41633f:	retf   
  416340:	push   ss
  416341:	dec    edi
  416342:	int3   
  416343:	jle    0x4163ad
  416345:	mov    ds:0x5d628c23,al
  41634a:	adc    BYTE PTR [ebp+0x8],ah
  41634d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41634e:	repnz push 0x74
  416351:	sbb    BYTE PTR [esi-0x67b2e6b],bl
  416357:	cmp    bl,BYTE PTR [ecx]
  416359:	sub    eax,0xa1a22f4b
  41635e:	loopne 0x4162ee
  416360:	adc    esp,DWORD PTR [esi-0x7e]
  416363:	mov    ch,0x55
  416365:	ficomp DWORD PTR [ebp-0x74834cbb]
  41636b:	les    esp,FWORD PTR [eax+eiz*4]
  41636e:	sub    DWORD PTR [ebx],esp
  416370:	mov    ah,0x7d
  416372:	pop    esp
  416373:	retf   
  416374:	(bad)  
  416375:	fwait
  416376:	jge    0x4163bc
  416378:	ins    BYTE PTR es:[edi],dx
  416379:	pop    esp
  41637a:	adc    al,0xe
  41637c:	adc    edx,DWORD PTR [ecx+ecx*2-0x61af675c]
  416383:	push   cs
  416384:	bound  edi,QWORD PTR [eax]
  416386:	xor    dh,ah
  416388:	adc    BYTE PTR [esi-0x18],bh
  41638b:	mov    bh,0xe5
  41638d:	lock call 0x5f0dfde
  416393:	arpl   WORD PTR [ebx-0x1a0c5dc1],di
  416399:	neg    DWORD PTR [ebx+0x45]
  41639c:	cld    
  41639d:	or     DWORD PTR [ebx],edx
  41639f:	(bad)
  4163a4:	and    edi,DWORD PTR [edx+0x586a5c4d]
  4163aa:	(bad)  
  4163ab:	repnz push edi
  4163ad:	ins    DWORD PTR es:[edi],dx
  4163ae:	ret    0x9bad
  4163b1:	xchg   ebp,eax
  4163b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b3:	icebp  
  4163b4:	xchg   edx,eax
  4163b5:	outs   dx,BYTE PTR ds:[esi]
  4163b6:	pop    edx
  4163b7:	retf   
  4163b8:	pop    ss
  4163b9:	(bad)  
  4163ba:	ins    DWORD PTR es:[edi],dx
  4163bb:	mov    bh,0x35
  4163bd:	shr    DWORD PTR [ecx+0x3f846355],0x8c
  4163c4:	mov    esp,0x8387c70e
  4163c9:	sub    bl,dl
  4163cb:	sti    
  4163cc:	sbb    cl,bl
  4163ce:	jae    0x41641e
  4163d0:	xor    eax,0xe401104d
  4163d5:	or     al,0xfc
  4163d7:	add    cl,BYTE PTR [edx]
  4163d9:	mul    DWORD PTR es:[edi]
  4163dc:	add    bl,bh
  4163de:	cmp    edi,DWORD PTR [edi+0x75]
  4163e1:	(bad)  
  4163e2:	lods   al,BYTE PTR ds:[esi]
  4163e3:	or     eax,0xd19d6a7b
  4163e8:	adc    DWORD PTR [ebx-0x5f2792a8],0x23f7751f
  4163f2:	aad    0x32
  4163f4:	test   eax,0xed7e3302
  4163f9:	fmul   DWORD PTR [ecx-0x52abd253]
  4163ff:	lds    edx,FWORD PTR [edx+0x52ba2b37]
  416405:	cwde   
  416406:	mov    esi,0x11391748
  41640b:	popf   
  41640c:	mov    ebp,0x783a3167
  416411:	pop    ebx
  416412:	mov    ds:0x6d84d6c9,eax
  416417:	int3   
  416418:	jmp    0xc828:0xb6b04ab3
  41641f:	pop    esp
  416420:	int3   
  416421:	out    0xd3,al
  416423:	inc    esp
  416424:	fild   DWORD PTR [ebx+edx*4]
  416427:	sub    al,0x70
  416429:	mov    ds:0xd5003ce,al
  41642e:	xchg   edi,eax
  41642f:	(bad)  
  416430:	cli    
  416431:	push   edi
  416432:	ds ins BYTE PTR es:[edi],dx
  416434:	and    bl,ah
  416436:	mov    bh,0xf0
  416438:	dec    ebx
  416439:	mov    edx,DWORD PTR [ecx+0x1d39a6aa]
  41643f:	lods   al,BYTE PTR ds:[esi]
  416440:	pop    edx
  416441:	inc    ecx
  416442:	push   es
  416443:	outs   dx,DWORD PTR ds:[esi]
  416444:	sub    bh,BYTE PTR [esp+eiz*4-0x31]
  416448:	aaa    
  416449:	mov    esp,0xdb2485f8
  41644e:	lods   eax,DWORD PTR ds:[esi]
  41644f:	out    dx,al
  416450:	(bad)  
  416451:	leave  
  416452:	dec    esp
  416453:	adc    BYTE PTR [ebx-0x17],al
  416456:	clc    
  416457:	inc    ecx
  416458:	or     BYTE PTR [edi],ah
  41645a:	clc    
  41645b:	fwait
  41645c:	rol    BYTE PTR [eax-0x5356064f],cl
  416462:	out    0xa,eax
  416464:	lods   al,BYTE PTR ds:[esi]
  416465:	cmp    ecx,DWORD PTR [ecx-0x4d]
  416468:	cmp    bh,BYTE PTR [edi+edi*1]
  41646b:	test   BYTE PTR [edi],al
  41646d:	repnz aam 0xf7
  416470:	xchg   edx,eax
  416471:	ret    
  416472:	cmp    ah,BYTE PTR [ebx-0x172a4567]
  416478:	or     al,0xe
  41647a:	(bad)  
  41647b:	lock adc eax,0xaaa873f9
  416481:	inc    esi
  416482:	sbb    eax,0x2998bf99
  416487:	fwait
  416488:	adc    DWORD PTR [edi],edi
  41648a:	push   0x46
  41648c:	dec    edx
  41648d:	dec    edi
  41648e:	push   edi
  41648f:	repz sbb dh,bh
  416492:	mov    esi,0xeb18850f
  416497:	mov    ebp,DWORD PTR [ebx+eax*8]
  41649a:	xchg   esp,eax
  41649b:	sub    eax,0xf52f014e
  4164a0:	or     ebx,DWORD PTR [ecx]
  4164a2:	inc    ebp
  4164a3:	mov    ds:0x285c1eb2,al
  4164a8:	int    0xfe
  4164aa:	aaa    
  4164ab:	and    DWORD PTR [eax+0x27610cb5],esi
  4164b1:	and    esi,edi
  4164b3:	fldenv [eax-0x51]
  4164b6:	push   ss
  4164b7:	push   edi
  4164b8:	jg     0x416532
  4164ba:	in     eax,0x26
  4164bc:	aam    0x81
  4164be:	xchg   cx,ax
  4164c0:	(bad)  
  4164c1:	popf   
  4164c2:	stos   DWORD PTR es:[edi],eax
  4164c3:	ds cli 
  4164c5:	sbb    BYTE PTR [ebx+0x6b],0xee
  4164c9:	dec    eax
  4164ca:	and    DWORD PTR [ebx],ecx
  4164cc:	sub    DWORD PTR [ecx-0x7c80f24],ecx
  4164d2:	add    al,0xbc
  4164d4:	mov    ch,0x99
  4164d6:	dec    esp
  4164d7:	cmp    DWORD PTR [eax+edx*2-0x42ee11b4],edi
  4164de:	jmp    0x41646b
  4164e0:	push   edi
  4164e1:	xlat   BYTE PTR ds:[ebx]
  4164e2:	or     BYTE PTR ds:0x6198a015,dh
  4164e8:	sbb    eax,0xb574f852
  4164ed:	add    eax,0x77f00c0b
  4164f2:	sub    al,0xd2
  4164f4:	data16 mov BYTE PTR [eax],dh
  4164f7:	mov    ?,WORD PTR [edx-0x20]
  4164fa:	les    eax,FWORD PTR [edi+0x10]
  4164fd:	loopne 0x41648c
  4164ff:	mov    BYTE PTR [edx+0x5e],al
  416502:	je     0x41655f
  416504:	jl     0x416521
  416506:	mov    esp,0xb572cea7
  41650b:	xchg   edi,eax
  41650c:	jl     0x4164c3
  41650e:	dec    ecx
  41650f:	pop    eax
  416510:	add    DWORD PTR [ebx],esp
  416512:	pop    es
  416513:	dec    esp
  416514:	and    bh,BYTE PTR [ebp-0x6d]
  416517:	sbb    eax,0xa5b1b8ee
  41651c:	bound  edx,QWORD PTR [edx]
  41651e:	repnz lds dx,DWORD PTR [esi-0x9]
  416523:	and    al,0xd5
  416525:	dec    edx
  416526:	(bad)  
  416527:	xor    al,0xc1
  416529:	arpl   bx,ax
  41652b:	xor    BYTE PTR [ebx-0x21],al
  41652e:	popf   
  41652f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416530:	sar    ebp,cl
  416532:	or     DWORD PTR [esp+esi*4],ecx
  416535:	add    al,ch
  416537:	and    al,0xc5
  416539:	repnz xadd ah,bl
  41653d:	cdq    
  41653e:	or     BYTE PTR [eax+0x1fce2324],dl
  416544:	retf   
  416545:	ja     0x41654f
  416547:	out    dx,al
  416548:	add    ax,0x54d6
  41654c:	push   edx
  41654d:	(bad)  
  41654e:	ss call 0xb9fb:0xf70ed257
  416556:	retf   
  416557:	mov    DWORD PTR [ecx+esi*4],edi
  41655a:	mov    bl,0xc7
  41655c:	lahf   
  41655d:	ins    BYTE PTR es:[edi],dx
  41655e:	sub    eax,0x2be29126
  416563:	inc    edx
  416564:	mov    WORD PTR [ebp-0x6818a795],ds
  41656a:	jmp    FWORD PTR [esp+esi*2+0x3c]
  41656e:	fucomp st(0)
  416570:	adc    BYTE PTR [ebx-0x478f3b7f],dl
  416576:	in     al,0xcd
  416578:	xchg   esi,eax
  416579:	or     BYTE PTR [edx-0x357f9472],al
  41657f:	push   0xffffffd4
  416581:	mov    ch,0xc0
  416583:	mov    bl,0xba
  416585:	pop    ebx
  416586:	dec    edx
  416587:	imul   esp,eax,0x2e
  41658a:	daa    
  41658b:	popf   
  41658c:	psadbw mm3,QWORD PTR [ecx-0x78527577]
  416593:	cmp    esp,DWORD PTR [ebp+0x45]
  416596:	int    0xe1
  416598:	jmp    0x70a8:0x5946e42d
  41659f:	or     eax,0xa1aa8edd
  4165a4:	jp     0x416562
  4165a6:	je     0x41659a
  4165a8:	test   DWORD PTR [eax-0x7a90d55c],ecx
  4165ae:	test   esi,eax
  4165b0:	retf   0x21e9
  4165b3:	data16 outs dx,BYTE PTR ds:[esi]
  4165b5:	cmp    eax,0xd6854939
  4165ba:	push   eax
  4165bb:	and    BYTE PTR [edx],0x1c
  4165be:	pop    ecx
  4165bf:	pushf  
  4165c0:	xchg   ebp,eax
  4165c1:	cs xor edx,ebx
  4165c4:	fisubr DWORD PTR [eax-0x55]
  4165c7:	and    eax,0xbebe2bc6
  4165cc:	xlat   BYTE PTR ds:[ebx]
  4165ce:	(bad)  
  4165cf:	out    0xc6,al
  4165d1:	or     DWORD PTR [ecx+esi*8+0x2d],ebp
  4165d5:	mov    esp,?
  4165d7:	push   esp
  4165d8:	xchg   DWORD PTR [ebp+0x2a],esp
  4165db:	lea    ebp,[ecx-0x1a00bb23]
  4165e1:	repz jmp 0xb4a3:0x58d4fe7d
  4165e9:	sub    BYTE PTR [esi-0x7ddfac19],ch
  4165ef:	pop    ecx
  4165f0:	mov    edx,0xdbe8c5cf
  4165f5:	aad    0x42
  4165f7:	sub    edi,DWORD PTR [ebp+eiz*4-0x5b]
  4165fb:	out    0x49,al
  4165fd:	sub    eax,0x7c8312ae
  416602:	sbb    eax,0x4c12a215
  416607:	jns    0x4165a9
  416609:	pop    ds
  41660a:	scas   al,BYTE PTR es:[di]
  41660c:	jae    0x416634
  41660e:	rcl    DWORD PTR es:[esi*4-0x5e9cdf8b],1
  416616:	xchg   ebx,eax
  416617:	push   0x36bfa7b6
  41661c:	jno    0x4165e4
  41661e:	inc    esi
  41661f:	mov    eax,ds:0xa242f0a6
  416624:	cs push 0xeb95c904
  41662a:	push   eax
  41662b:	add    al,0xc9
  41662d:	pop    es
  41662e:	mov    eax,ds:0x4fa9807
  416633:	inc    DWORD PTR [ecx]
  416635:	dec    ecx
  416636:	pandn  mm3,QWORD PTR [esp+esi*2]
  41663a:	(bad)  
  41663b:	add    BYTE PTR [esi-0x28],ah
  41663e:	mov    esp,0x8d40d413
  416643:	push   ecx
  416644:	mov    ebx,0xebfca628
  416649:	sar    DWORD PTR [eax],0x4e
  41664c:	outs   dx,DWORD PTR ds:[esi]
  41664d:	dec    esi
  41664e:	sbb    ecx,DWORD PTR [ebp+0x67]
  416651:	scas   eax,DWORD PTR es:[edi]
  416652:	jno    0x416691
  416654:	ret    
  416655:	(bad)  
  416657:	inc    esi
  416658:	dec    ebx
  416659:	mov    ds:0x10e1329a,eax
  41665e:	sahf   
  41665f:	ds in  eax,dx
  416661:	stos   DWORD PTR es:[edi],eax
  416662:	add    ebx,DWORD PTR [edx+0x2a]
  416665:	out    0xb8,eax
  416667:	clc    
  416668:	pop    es
  416669:	xor    bh,bl
  41666b:	out    dx,al
  41666c:	sub    esi,eax
  41666e:	sbb    al,0xa
  416670:	add    BYTE PTR [ebx+0x7dbf1aea],ah
  416676:	(bad)
  41667a:	repnz push edi
  41667c:	div    BYTE PTR [ecx+0x1ea67381]
  416682:	xchg   edi,eax
  416683:	adc    al,dh
  416685:	out    dx,eax
  416686:	nop
  416687:	or     al,BYTE PTR [edi]
  416689:	xor    BYTE PTR [ecx-0x5a59aa32],ah
  41668f:	jmp    0x8abe:0xb8053721
  416696:	or     eax,DWORD PTR gs:[ebx+0x31]
  41669a:	arpl   WORD PTR [edi+0x401cc494],di
  4166a0:	xor    eax,0x94e5fd33
  4166a5:	or     al,0x87
  4166a7:	xchg   edi,eax
  4166a8:	retf   0xaf43
  4166ab:	mov    ds:0x799dc23f,al
  4166b0:	push   edx
  4166b1:	add    eax,0x94c3f273
  4166b6:	aas    
  4166b7:	sub    al,0xfa
  4166b9:	pop    es
  4166ba:	scas   eax,DWORD PTR es:[edi]
  4166bb:	in     eax,dx
  4166bc:	add    ah,BYTE PTR [ebp+0x24]
  4166bf:	mov    bl,0x99
  4166c1:	(bad)  
  4166c2:	in     eax,dx
  4166c3:	les    esp,FWORD PTR [ecx+0x2b5bb876]
  4166c9:	add    dh,BYTE PTR [ebp-0x14565219]
  4166cf:	sbb    DWORD PTR [esi-0x69],ecx
  4166d2:	(bad)  
  4166d3:	pushf  
  4166d4:	sub    cl,ch
  4166d6:	xchg   esi,eax
  4166d7:	xor    BYTE PTR [edx+ebx*2-0x49],dh
  4166db:	xor    DWORD PTR [esi-0x5581b8bf],ecx
  4166e1:	jmp    0x4608:0xd8ce035e
  4166e8:	xor    eax,0x5198a25f
  4166ed:	mov    DWORD PTR [ecx+0x54],ecx
  4166f0:	mov    es,WORD PTR [esi-0x7a14f7a0]
  4166f6:	imul   edx,esp,0x20016962
  4166fc:	pop    ebp
  4166fd:	dec    ebp
  4166fe:	pop    edx
  4166ff:	and    al,BYTE PTR [edi+edi*1]
  416702:	xchg   DWORD PTR [ebp+0x1d],edx
  416705:	test   DWORD PTR [ebx-0x47],esp
  416708:	rol    DWORD PTR [edi+ebp*4+0x6dff341a],cl
  41670f:	in     al,0xc3
  416711:	and    ch,bl
  416713:	lahf   
  416714:	push   ecx
  416715:	jmp    FWORD PTR ds:0x92a36cc3
  41671b:	push   ebx
  41671c:	add    eax,0x64826e1
  416721:	iret   
  416722:	or     DWORD PTR [eax-0x61],eax
  416725:	ror    DWORD PTR [ecx-0x52b5cdb1],1
  41672b:	cli    
  41672c:	fstp   TBYTE PTR [edx-0x553c5bb1]
  416732:	or     BYTE PTR [eax-0x17],ch
  416735:	mov    ds:0xf1161bb5,eax
  41673a:	stos   BYTE PTR es:[edi],al
  41673b:	outs   dx,DWORD PTR ds:[esi]
  41673c:	mov    bl,0x5a
  41673e:	out    0x65,al
  416740:	je     0x416706
  416742:	sub    ch,bl
  416744:	std    
  416745:	(bad)  
  416746:	stc    
  416747:	mov    fs,WORD PTR [edx+0x3]
  41674a:	enter  0xcb60,0xa2
  41674e:	pop    es
  41674f:	pushf  
  416750:	daa    
  416751:	ret    
  416752:	mov    dh,0x8b
  416754:	adc    BYTE PTR [ecx],dl
  416756:	jns    0x4166f8
  416758:	and    ecx,ebx
  41675a:	pop    edx
  41675b:	lods   al,BYTE PTR ds:[esi]
  41675c:	jmp    eax
  41675e:	into   
  41675f:	push   edi
  416760:	clc    
  416761:	inc    edi
  416762:	in     al,dx
  416763:	pop    ebx
  416764:	xor    DWORD PTR [ebp+0x7bb69113],ebx
  41676a:	(bad)  
  41676b:	or     DWORD PTR [esi],ebp
  41676d:	ins    BYTE PTR es:[edi],dx
  41676e:	add    eax,0xd95c823c
  416773:	sbb    BYTE PTR [eax],dl
  416775:	and    DWORD PTR [edi],ecx
  416777:	fidivr DWORD PTR [edi-0x47]
  41677a:	aad    0x58
  41677c:	lods   eax,DWORD PTR ds:[esi]
  41677d:	cmp    BYTE PTR [edx+ecx*8],bh
  416780:	sub    esp,DWORD PTR [eax+0x4d]
  416783:	out    0x17,eax
  416785:	adc    bh,BYTE PTR [eax-0x26a50101]
  41678b:	es daa 
  41678d:	pop    esi
  41678e:	fcomp  QWORD PTR [ebx+0x57c40c85]
  416794:	(bad)  
  416795:	dec    esi
  416796:	adc    BYTE PTR [edi+0x45cc5e41],bl
  41679c:	mov    BYTE PTR [esi],0xc5
  41679f:	mov    al,ds:0xfe16d8f5
  4167a4:	pop    ebx
  4167a5:	push   ds
  4167a6:	popf   
  4167a7:	xor    ecx,0xd859f2db
  4167ad:	dec    ebx
  4167ae:	or     BYTE PTR [ebp-0x4a895f50],al
  4167b4:	adc    BYTE PTR [edi+ebp*8-0x30],dl
  4167b8:	ficom  WORD PTR [eax+ebx*4+0x73]
  4167bc:	mov    bl,0xf3
  4167be:	ret    0xb0eb
  4167c1:	sbb    dl,ah
  4167c3:	mov    ds:0x49177579,al
  4167c8:	(bad)  
  4167c9:	repz es (bad) 
  4167cc:	ror    ch,0x8f
  4167cf:	xchg   ecx,eax
  4167d0:	mov    es,eax
  4167d2:	cdq    
  4167d3:	dec    ebx
  4167d4:	push   esi
  4167d5:	and    eax,0xa963990c
  4167da:	push   ebp
  4167db:	push   esi
  4167dc:	xchg   BYTE PTR [eax+0x7bd8e827],ah
  4167e2:	je     0x416795
  4167e4:	mov    ds:0x94457eb2,eax
  4167e9:	mov    edi,0x66152440
  4167ee:	mov    eax,0xad3f155b
  4167f3:	xchg   edi,eax
  4167f4:	cdq    
  4167f5:	repz pop ds
  4167f7:	das    
  4167f8:	jle    0x4167b2
  4167fa:	sbb    esp,DWORD PTR [eax+eiz*4-0x5021461c]
  416801:	sub    bh,BYTE PTR [ecx]
  416803:	call   0x7b83:0x12a7ad9b
  41680a:	mov    ch,0x75
  41680c:	mov    ecx,0x9d5fee7f
  416811:	xor    BYTE PTR [ebp-0x24],ch
  416814:	not    DWORD PTR [esi-0x72]
  416817:	jnp    0x41681e
  416819:	sub    DWORD PTR ds:0x185a4e82,ebx
  41681f:	add    dh,BYTE PTR [ecx-0x39]
  416822:	sar    DWORD PTR [eax],1
  416824:	xor    al,0xb1
  416826:	pop    ebx
  416827:	pop    esp
  416828:	outs   dx,DWORD PTR ds:[esi]
  416829:	push   eax
  41682a:	mov    al,0x23
  41682c:	and    eax,0x6f7337a8
  416831:	sar    DWORD PTR [edx+0x40],0xe5
  416835:	das    
  416836:	aam    0xd0
  416838:	leave  
  416839:	or     al,0xa5
  41683b:	or     DWORD PTR [ecx],edi
  41683d:	hlt    
  41683e:	cmp    ecx,DWORD PTR [edx]
  416840:	pop    esi
  416841:	pop    ss
  416842:	and    cl,BYTE PTR [esi+0x41be2d7]
  416848:	push   ss
  416849:	test   eax,0x4c18ff4f
  41684e:	jo     0x416812
  416850:	popa   
  416851:	push   0xfb9b35b3
  416856:	imul   ebp,DWORD PTR [esi+0x2b],0x5e745f24
  41685d:	lods   al,BYTE PTR cs:[esi]
  41685f:	in     al,dx
  416860:	pop    ecx
  416861:	mov    eax,ds:0xc6a85ebd
  416866:	sbb    al,0x7d
  416868:	xor    DWORD PTR [esi],0x3f
  41686b:	ret    
  41686c:	xor    BYTE PTR [edi-0x6c32a34e],ah
  416872:	push   esi
  416873:	(bad)  
  416874:	stos   BYTE PTR es:[edi],al
  416875:	outs   dx,DWORD PTR ds:[esi]
  416876:	stos   DWORD PTR es:[edi],eax
  416877:	sub    eax,0xf8097fb9
  41687c:	mov    esi,0xf4ad6fa1
  416881:	pop    edx
  416882:	mov    WORD PTR [edx+0x77],?
  416885:	in     al,0xa2
  416887:	and    DWORD PTR [ecx+0x73],edi
  41688a:	inc    edx
  41688b:	xchg   al,ch
  41688d:	mov    edi,DWORD PTR [ebx+edx*8+0x39]
  416891:	cmp    eax,ecx
  416893:	push   0x73f80981
  416898:	pop    edi
  416899:	into   
  41689a:	push   ebx
  41689b:	pop    es
  41689c:	and    eax,0xb3248a59
  4168a1:	pop    eax
  4168a2:	sti    
  4168a3:	or     al,0x3b
  4168a5:	das    
  4168a6:	stc    
  4168a7:	xchg   BYTE PTR [esi+0x1f48438a],bh
  4168ad:	pop    ebx
  4168ae:	sbb    dh,BYTE PTR [edi+eax*4-0x5a]
  4168b2:	or     eax,0x4fe4ba17
  4168b7:	inc    edi
  4168b8:	mov    ah,0xb0
  4168ba:	lahf   
  4168bb:	test   DWORD PTR [esi+0x6f07a0d5],esi
  4168c1:	cwde   
  4168c2:	fwait
  4168c3:	xor    al,0x1f
  4168c5:	inc    eax
  4168c6:	xchg   esp,eax
  4168c7:	push   ebx
  4168c8:	test   eax,0x6f8b84b4
  4168cd:	cmp    al,0x78
  4168cf:	adc    DWORD PTR [ebp+eax*1-0x6a],eax
  4168d3:	hlt    
  4168d4:	call   0x474a:0x91e97abe
  4168db:	adc    BYTE PTR [eax+0x6d],0xfe
  4168df:	inc    edi
  4168e0:	jle    0x4168f5
  4168e2:	cmp    DWORD PTR [edx-0x1acf82b2],esp
  4168e8:	repnz fs retf 0x2ac3
  4168ed:	mov    esp,0x17c38a8e
  4168f2:	push   ds
  4168f3:	add    dh,BYTE PTR [eax+esi*1-0x1a]
  4168f7:	ja     0x41692d
  4168f9:	cmp    DWORD PTR [ecx+0x453c726f],edi
  4168ff:	std    
  416900:	jp     0x4168ef
  416902:	push   es
  416903:	sti    
  416904:	lea    edi,[ecx]
  416906:	(bad)  
  416907:	test   DWORD PTR [edx+0x1d919e30],edx
  41690d:	jo     0x4168b5
  41690f:	inc    ecx
  416910:	popf   
  416911:	pop    esp
  416912:	rcr    esi,0xb4
  416915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416916:	mov    bh,0x73
  416918:	mov    dh,0x23
  41691a:	(bad)  
  41691b:	jnp    0x4168d7
  41691d:	repz add eax,0x8cbd3c47
  416923:	and    DWORD PTR [ebx+0x63],ecx
  416926:	jmp    0x4953:0x97b51162
  41692d:	fidiv  DWORD PTR [ebx]
  41692f:	enter  0x6491,0x74
  416933:	aaa    
  416934:	jae    0x4168b8
  416936:	adc    bl,bh
  416938:	in     al,dx
  416939:	mov    ds:0x87c397b,eax
  41693e:	and    esi,DWORD PTR [ebx+0x1e]
  416941:	push   edi
  416942:	fcom   QWORD PTR [eax+0x5c]
  416945:	test   DWORD PTR [eax+0xd],ecx
  416948:	repz jmp 0xed65:0x73a4ec2f
  416950:	ret    0xa44b
  416953:	int    0xd
  416955:	idiv   BYTE PTR [eax-0x39]
  416958:	not    dl
  41695a:	jg     0x4168f2
  41695c:	push   edi
  41695d:	lods   al,BYTE PTR ds:[esi]
  41695e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41695f:	cdq    
  416960:	das    
  416961:	xchg   ecx,eax
  416962:	cmp    al,cl
  416964:	cmc    
  416965:	mov    al,0x46
  416967:	inc    esi
  416968:	in     al,0xc
  41696a:	fnop   
  41696c:	xchg   edi,edi
  41696e:	into   
  41696f:	inc    esp
  416970:	mov    eax,ds:0xaa065367
  416975:	ror    esp,cl
  416977:	cmp    eax,0x52c54920
  41697c:	add    ch,BYTE PTR [ebp+eax*8-0x240ac57f]
  416983:	mov    edx,edi
  416985:	arpl   WORD PTR [ebx+0x7c02d70e],bp
  41698b:	repz ror DWORD PTR [edi-0x2ab93bc1],cl
  416992:	shr    dh,1
  416994:	cmp    dl,0x9c
  416997:	inc    edi
  416998:	mov    ah,0x12
  41699a:	nop
  41699b:	push   ds
  41699c:	mov    cl,0x1c
  41699e:	xor    ebx,DWORD PTR [eax-0x320fdb26]
  4169a4:	int3   
  4169a5:	push   0xffffffc0
  4169a7:	or     eax,DWORD PTR [ebx+0x3c78a24d]
  4169ad:	and    al,0xf6
  4169af:	mov    eax,0x30d5f18c
  4169b4:	sbb    al,0x60
  4169b6:	push   edx
  4169b7:	retf   
  4169b8:	ret    
  4169b9:	test   eax,0x782f77b1
  4169be:	sub    ebp,ebp
  4169c0:	adc    eax,0x8c816156
  4169c5:	stos   BYTE PTR es:[edi],al
  4169c6:	dec    ebx
  4169c7:	add    ecx,DWORD PTR [ebx+esi*4-0x78]
  4169cb:	xor    esi,DWORD PTR [edx+ebx*1+0x53a47354]
  4169d2:	sahf   
  4169d3:	inc    esi
  4169d4:	stos   BYTE PTR es:[edi],al
  4169d5:	bound  edx,QWORD PTR [ecx]
  4169d7:	pop    esi
  4169d8:	lea    ecx,[ebx-0x27]
  4169db:	mov    ebp,0xd04c4123
  4169e0:	push   cs
  4169e1:	pop    esp
  4169e2:	js     0x416a00
  4169e4:	inc    ecx
  4169e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e6:	push   esp
  4169e7:	inc    ecx
  4169e8:	addr16 push ebx
  4169ea:	cli    
  4169eb:	push   ss
  4169ec:	inc    ebp
  4169ed:	add    BYTE PTR [bx],0x27
  4169f1:	rol    BYTE PTR [ecx],1
  4169f3:	xchg   ebp,eax
  4169f4:	push   DWORD PTR [eax-0x3c]
  4169f7:	and    bh,BYTE PTR [edx]
  4169f9:	pushf  
  4169fa:	scas   al,BYTE PTR es:[edi]
  4169fb:	add    eax,0x320bbca2
  416a00:	imul   edi,DWORD PTR [ebp+0x569ba97d],0x92a92c91
  416a0a:	ja     0x4169e8
  416a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0d:	xor    al,0x48
  416a0f:	add    DWORD PTR [eax],0x4aee393f
  416a15:	js     0x416a3f
  416a17:	ja     0x416a40
  416a19:	inc    ebx
  416a1a:	mov    eax,0x65fec480
  416a1f:	sbb    ah,BYTE PTR [ecx]
  416a21:	sub    bh,BYTE PTR [esi-0x68]
  416a24:	xchg   edi,eax
  416a25:	inc    edi
  416a26:	or     edi,DWORD PTR [edx]
  416a28:	push   cs
  416a29:	idiv   BYTE PTR [edx+0x7b]
  416a2c:	mov    eax,ds:0xb6ff3078
  416a31:	icebp  
  416a32:	pop    edi
  416a33:	fdiv   st,st(5)
  416a35:	in     eax,0xca
  416a37:	mov    ds,WORD PTR [ecx]
  416a39:	adc    DWORD PTR [edi+0x53],esp
  416a3c:	sbb    ah,BYTE PTR [esi-0x2d5afd24]
  416a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a43:	call   0x98f7c4d4
  416a48:	xchg   esi,eax
  416a49:	das    
  416a4a:	ret    
  416a4b:	out    0x43,al
  416a4d:	sti    
  416a4e:	sbb    ecx,edx
  416a50:	dec    edi
  416a51:	jge    0x4169f3
  416a53:	pop    edi
  416a54:	xlat   BYTE PTR ds:[ebx]
  416a55:	fwait
  416a56:	sbb    eax,0xf3fa313f
  416a5b:	jmp    0x59f2:0x9749d9e3
  416a62:	ret    
  416a63:	xchg   edx,eax
  416a64:	jbe    0x416aa2
  416a66:	pop    ecx
  416a67:	leave  
  416a68:	add    al,0x69
  416a6a:	scas   al,BYTE PTR es:[edi]
  416a6b:	jge    0x416a43
  416a6d:	das    
  416a6e:	lock popf 
  416a70:	dec    ecx
  416a71:	cmc    
  416a72:	xor    eax,0x62d28fe2
  416a77:	outs   dx,BYTE PTR ds:[esi]
  416a78:	outs   dx,BYTE PTR ds:[esi]
  416a79:	jne    0x416ac3
  416a7b:	repnz hlt 
  416a7d:	in     eax,0x13
  416a7f:	adc    al,0x45
  416a81:	cli    
  416a82:	imul   esp,eax,0x41
  416a85:	clc    
  416a86:	sub    BYTE PTR [esi],bl
  416a88:	xor    ecx,esp
  416a8a:	and    ecx,DWORD PTR [ebx+0xf]
  416a8d:	mov    dl,0xf5
  416a8f:	inc    esp
  416a90:	jno    0x416aa8
  416a92:	inc    edx
  416a93:	ds push esp
  416a95:	ret    0xd381
  416a98:	in     eax,dx
  416a99:	mov    ebp,0x440a266
  416a9e:	pusha  
  416a9f:	ret    
  416aa0:	push   ss
  416aa1:	push   esp
  416aa2:	dec    edi
  416aa3:	test   DWORD PTR [ecx-0x63e57bdb],esp
  416aa9:	iret   
  416aaa:	mov    esp,0x8291bc05
  416aaf:	pop    eax
  416ab0:	pcmpgtb mm3,QWORD PTR [eax+0x7f]
  416ab4:	sbb    cl,dh
  416ab6:	jb     0x416a9b
  416ab8:	mov    edx,0xbbcfb370
  416abd:	mov    esi,0x2cb295f2
  416ac2:	int3   
  416ac3:	rcl    DWORD PTR [edx+eiz*1],1
  416ac6:	jns    0x416a87
  416ac8:	popf   
  416ac9:	jp     0x416af9
  416acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416acc:	mov    ecx,0x3b912a6a
  416ad1:	leave  
  416ad2:	ja     0x416b53
  416ad4:	jae    0x416a9b
  416ad6:	(bad)  
  416ad8:	imul   eax,edx,0x5
  416adb:	mov    al,0x27
  416add:	cmp    eax,0x219f5529
  416ae2:	jge    0x416abf
  416ae4:	add    al,0xa
  416ae6:	scas   eax,DWORD PTR es:[edi]
  416ae7:	mov    ebx,0x55390ead
  416aec:	push   eax
  416aed:	inc    edi
  416aee:	inc    eax
  416aef:	inc    esp
  416af0:	in     eax,0x8a
  416af2:	enter  0x3d3a,0xbe
  416af6:	mov    esp,0x1aa3654
  416afb:	int3   
  416afc:	push   edx
  416afd:	out    0x22,eax
  416aff:	sbb    DWORD PTR [esi-0x1f],eax
  416b02:	mov    ds:0x2e52088f,eax
  416b07:	mov    cl,0x88
  416b09:	jl     0x416b24
  416b0b:	ja     0x416aac
  416b0d:	xchg   ecx,eax
  416b0e:	arpl   WORD PTR [edi+0x79bda137],si
  416b14:	iret   
  416b15:	in     eax,dx
  416b16:	mov    ah,0x10
  416b18:	pop    es
  416b19:	mov    dl,0x74
  416b1b:	cmp    al,BYTE PTR [edi-0xf]
  416b1e:	cwde   
  416b1f:	cmp    al,0x98
  416b21:	dec    ebx
  416b22:	stos   DWORD PTR es:[edi],eax
  416b23:	out    dx,eax
  416b24:	sub    al,0xc0
  416b26:	pop    eax
  416b27:	adc    esp,esi
  416b29:	clc    
  416b2a:	jmp    0xd48a:0x78dd1ff3
  416b31:	xchg   ebp,eax
  416b32:	les    edx,FWORD PTR [edi+0x1eabb816]
  416b38:	aad    0x5b
  416b3a:	or     eax,0x5578f66e
  416b3f:	mov    cl,0xec
  416b41:	outs   dx,DWORD PTR ds:[esi]
  416b42:	in     al,dx
  416b43:	jle    0x416b8d
  416b45:	retf   0xd261
  416b48:	lock push 0x42
  416b4b:	pop    esp
  416b4c:	push   ebp
  416b4d:	test   al,0x4b
  416b4f:	mov    BYTE PTR [ecx],dh
  416b51:	and    BYTE PTR [edi-0x69],al
  416b54:	jp     0x416bab
  416b56:	rol    DWORD PTR [eax+0x52],cl
  416b59:	dec    ebx
  416b5a:	mov    WORD PTR [ebx],es
  416b5c:	inc    ebx
  416b5d:	mov    esi,0xb240c86
  416b62:	lods   al,BYTE PTR ds:[esi]
  416b63:	cmc    
  416b64:	jge    0x416b80
  416b66:	push   ebx
  416b67:	sub    DWORD PTR es:[edx],0x3c9dfc5d
  416b6e:	dec    edi
  416b6f:	pop    ecx
  416b70:	popa   
  416b71:	in     al,dx
  416b72:	and    DWORD PTR [ecx+0x7d00dd3],eax
  416b78:	out    dx,eax
  416b79:	pop    ss
  416b7a:	in     eax,dx
  416b7b:	push   0x1bde5dbe
  416b80:	out    0xbe,al
  416b82:	inc    ecx
  416b83:	into   
  416b84:	cmp    DWORD PTR cs:[esi+ecx*2],0xadfeed50
  416b8c:	gs lods al,BYTE PTR ds:[esi]
  416b8f:	popf   
  416b90:	xchg   esi,eax
  416b91:	stos   DWORD PTR es:[edi],eax
  416b92:	jge    0x416b7e
  416b94:	popa   
  416b95:	scas   eax,DWORD PTR es:[edi]
  416b96:	xchg   ebx,eax
  416b97:	shl    edi,cl
  416b99:	repz jbe 0x416bd8
  416b9c:	sub    ah,BYTE PTR [edx]
  416b9e:	sub    bl,bl
  416ba0:	push   esp
  416ba1:	push   edi
  416ba2:	pusha  
  416ba3:	std    
  416ba4:	xor    al,0x65
  416ba6:	mov    WORD PTR [eax+eax*4+0xe],es
  416baa:	(bad)  
  416bac:	dec    ebx
  416bad:	cmp    ch,dl
  416baf:	cmp    eax,0x861f5eb0
  416bb4:	sar    ah,1
  416bb6:	fwait
  416bb7:	(bad)  
  416bb8:	out    dx,al
  416bb9:	(bad)  
  416bba:	xor    edx,DWORD PTR [edx]
  416bbc:	mov    ecx,DWORD PTR [eax]
  416bbe:	in     eax,0xad
  416bc0:	rol    BYTE PTR [ebp+0x19],0xf6
  416bc4:	sbb    al,0x74
  416bc6:	dec    eax
  416bc7:	pushw  cs
  416bc9:	sub    BYTE PTR ds:0x1be5b3d2,ch
  416bcf:	or     eax,0x89472182
  416bd4:	or     esp,DWORD PTR [eax]
  416bd6:	jns    0x416b73
  416bd8:	sbb    BYTE PTR [ecx],bh
  416bda:	sbb    bh,bl
  416bdc:	(bad)  
  416bdd:	aad    0xb2
  416bdf:	xor    DWORD PTR [edi+0x35],edx
  416be2:	and    DWORD PTR [edx+0x422e325d],edi
  416be8:	mov    cl,0x58
  416bea:	pop    ecx
  416beb:	jns    0x416bfe
  416bed:	adc    BYTE PTR [esi],cl
  416bef:	fcmovne st,st(5)
  416bf1:	retf   
  416bf2:	scas   al,BYTE PTR es:[edi]
  416bf3:	jge    0x416c1d
  416bf5:	push   eax
  416bf6:	sub    ch,BYTE PTR [ebx-0x16413a42]
  416bfc:	lods   al,BYTE PTR ds:[esi]
  416bfd:	or     ebp,ecx
  416bff:	push   esp
  416c00:	inc    eax
  416c01:	jo     0x416c7f
  416c03:	stos   BYTE PTR es:[edi],al
  416c04:	add    DWORD PTR cs:[edi],ebp
  416c07:	and    al,0x37
  416c09:	push   ss
  416c0a:	aaa    
  416c0b:	stos   BYTE PTR es:[edi],al
  416c0c:	(bad)  
  416c0d:	adc    eax,0x22a98332
  416c12:	fidiv  WORD PTR [edi-0x288dfc5a]
  416c18:	mov    bl,0xbf
  416c1a:	out    dx,eax
  416c1b:	outs   dx,DWORD PTR ds:[esi]
  416c1c:	ret    0xfd51
  416c1f:	shl    DWORD PTR [esi],1
  416c21:	int3   
  416c22:	pop    eax
  416c23:	jg     0x416c0e
  416c25:	stos   BYTE PTR es:[edi],al
  416c26:	add    DWORD PTR [ecx+0x5bf2428d],esi
  416c2c:	push   es
  416c2d:	inc    esp
  416c2e:	mov    WORD PTR [ecx-0x6b6c4816],ds
  416c34:	inc    ecx
  416c35:	cld    
  416c36:	daa    
  416c37:	jge    0x416c91
  416c39:	bound  esp,QWORD PTR [edi+ecx*2+0xb]
  416c3d:	(bad)  
  416c3e:	xchg   DWORD PTR [edi-0x5e],edi
  416c41:	xchg   ebx,eax
  416c42:	pop    eax
  416c43:	(bad)  
  416c44:	arpl   cx,cx
  416c46:	cmp    BYTE PTR [ecx+0x17704145],cl
  416c4c:	xchg   edx,eax
  416c4d:	or     al,0x9a
  416c4f:	fmul   QWORD PTR [edi+0x3]
  416c52:	aad    0xd4
  416c54:	or     al,0xd5
  416c56:	stc    
  416c57:	xor    eax,0xeeb41166
  416c5c:	hlt    
  416c5d:	lods   al,BYTE PTR ds:[esi]
  416c5e:	(bad)  
  416c5f:	repz scas al,BYTE PTR es:[edi]
  416c61:	push   es
  416c62:	imul   DWORD PTR [edx-0x65]
  416c65:	sub    bh,ch
  416c67:	xchg   esp,eax
  416c68:	lods   al,BYTE PTR ds:[esi]
  416c69:	inc    esp
  416c6a:	mov    al,0x6b
  416c6c:	cmp    BYTE PTR [edi],bl
  416c6e:	(bad)  
  416c6f:	js     0x416bfe
  416c71:	xchg   ebp,eax
  416c72:	test   BYTE PTR [ecx],dh
  416c74:	arpl   cx,bx
  416c76:	sbb    eax,0xefad2dac
  416c7b:	setbe  BYTE PTR [eax+eax*2-0x2]
  416c80:	and    ch,cl
  416c82:	or     ch,BYTE PTR [ebp-0xf]
  416c85:	xlat   BYTE PTR ds:[ebx]
  416c86:	ins    BYTE PTR es:[edi],dx
  416c87:	jg     0x416d04
  416c89:	vaddps xmm3,xmm5,XMMWORD PTR [ebx+ecx*2]
  416c8e:	xor    eax,0x39201aec
  416c93:	inc    ebx
  416c94:	stos   DWORD PTR es:[edi],eax
  416c95:	nop
  416c96:	in     eax,0x9b
  416c98:	cdq    
  416c99:	or     eax,0xb866aff3
  416c9e:	fyl2x  
  416ca0:	sbb    DWORD PTR [edi+ecx*4+0x68],edi
  416ca4:	jg     0x416c57
  416ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca7:	sub    edi,DWORD PTR [edx]
  416ca9:	retf   0xc572
  416cac:	inc    eax
  416cad:	ficomp DWORD PTR [ebp-0x79]
  416cb0:	ss (bad) 
  416cb2:	jnp    0x416cb4
  416cb4:	fisub  DWORD PTR [ebx+0x66]
  416cb7:	dec    ecx
  416cb8:	jae    0x416c57
  416cba:	mov    ah,0x50
  416cbc:	std    
  416cbd:	int3   
  416cbe:	jb     0x416d35
  416cc0:	xor    BYTE PTR [eax],ch
  416cc2:	jno    0x416c93
  416cc4:	inc    esi
  416cc5:	inc    ebp
  416cc6:	stos   DWORD PTR es:[edi],eax
  416cc7:	cld    
  416cc8:	pop    edx
  416cc9:	das    
  416cca:	lock loop 0x416d39
  416ccd:	pop    es
  416cce:	and    edx,ebp
  416cd0:	adc    cl,BYTE PTR [edi-0x2142efcd]
  416cd6:	jle    0x416c97
  416cd8:	nop
  416cd9:	fcmovu st,st(4)
  416cdb:	das    
  416cdc:	das    
  416cdd:	ins    DWORD PTR es:[edi],dx
  416cde:	cmp    eax,0xff52776d
  416ce3:	sub    al,0x10
  416ce5:	sub    edi,DWORD PTR [eax]
  416ce7:	mov    ecx,0x3e5df455
  416cec:	and    DWORD PTR [ebp+0x4ae6f77a],ebx
  416cf2:	push   esp
  416cf3:	leave  
  416cf4:	add    DWORD PTR [eax-0x6b],edx
  416cf7:	jmp    0xe79bd7ee
  416cfc:	mov    edi,0xb05afee5
  416d01:	jp     0x416c9c
  416d03:	jno    0x416cff
  416d05:	cld    
  416d06:	fidiv  DWORD PTR [ecx]
  416d08:	cmp    bh,BYTE PTR [edi]
  416d0a:	daa    
  416d0b:	mov    dl,0xe9
  416d0d:	je     0x416d3c
  416d0f:	xor    DWORD PTR [eax],ebp
  416d11:	push   esp
  416d12:	mov    ecx,0x5098eb3f
  416d17:	rol    DWORD PTR [ecx],0x2f
  416d1a:	sahf   
  416d1b:	or     DWORD PTR [eax+ebx*2],esi
  416d1e:	push   esp
  416d1f:	je     0x416d2a
  416d21:	lahf   
  416d22:	or     dl,BYTE PTR [esi-0x80]
  416d25:	je     0x416cac
  416d27:	inc    edi
  416d28:	stc    
  416d29:	fisubr WORD PTR [ecx]
  416d2b:	out    0xe2,eax
  416d2d:	and    ecx,eax
  416d2f:	es test al,0x10
  416d32:	fnstsw WORD PTR [edi+0x30]
  416d35:	sub    bh,ah
  416d37:	jle    0x416d9f
  416d39:	pop    ebp
  416d3a:	inc    esi
  416d3b:	ja     0x416d11
  416d3d:	out    dx,al
  416d3e:	lods   al,BYTE PTR ds:[esi]
  416d3f:	mov    ds:0x11c4d493,eax
  416d44:	mov    esi,0xa4044ad2
  416d49:	and    eax,DWORD PTR [edx+0x67]
  416d4c:	outs   dx,BYTE PTR ds:[esi]
  416d4d:	es mov cl,0xb7
  416d50:	cwde   
  416d51:	cmc    
  416d52:	fwait
  416d53:	pop    esp
  416d54:	data16 in al,0x67
  416d57:	push   0xffffffeb
  416d59:	fdivr  QWORD PTR [ebx+0x7e]
  416d5c:	mov    cl,0x81
  416d5e:	pop    ds
  416d5f:	enter  0x51c4,0x2d
  416d63:	or     ch,BYTE PTR [ebx-0x22]
  416d66:	mov    edi,DWORD PTR [eax-0x4e457864]
  416d6c:	(bad)  
  416d6d:	neg    BYTE PTR [ebx-0x53cfc9a2]
  416d73:	int    0xa8
  416d75:	test   DWORD PTR [ebx+0x78],ecx
  416d78:	popf   
  416d79:	pop    edx
  416d7a:	(bad)  [edx+esi*4-0x56]
  416d7e:	xor    BYTE PTR ss:[eax+0x69bc5b43],dh
  416d85:	ja     0x416d18
  416d87:	mov    cs,WORD PTR ds:0xee0c8cab
  416d8d:	pop    ebp
  416d8e:	jmp    eax
  416d90:	push   edx
  416d91:	stos   BYTE PTR es:[edi],al
  416d92:	inc    ebx
  416d93:	cmp    BYTE PTR [ebp-0x63],cl
  416d96:	repz sbb BYTE PTR [ebx-0x4f24b097],0x6e
  416d9e:	das    
  416d9f:	add    al,0xc0
  416da1:	xor    BYTE PTR [ebp-0x7f],ch
  416da4:	pop    esp
  416da5:	loopne 0x416d2d
  416da7:	pop    ebx
  416da8:	mov    edi,0x7608c5e3
  416dad:	push   0x109597a7
  416db2:	inc    bx
  416db4:	shl    BYTE PTR [ecx+0x24b0e2e1],cl
  416dba:	lahf   
  416dbb:	(bad)  
  416dbc:	popf   
  416dbd:	mov    esi,DWORD PTR [edi+eiz*2+0x6d654aaa]
  416dc4:	sbb    BYTE PTR [edx+0x5b],0x81
  416dc8:	(bad)
  416dcc:	and    esp,DWORD PTR [ecx+0x3889dcfe]
  416dd2:	add    DWORD PTR [edx-0x29193c94],ebx
  416dd8:	stc    
  416dd9:	push   eax
  416dda:	jno    0x416d90
  416ddc:	test   eax,0x86ec74dc
  416de1:	mov    eax,0x12f20900
  416de6:	scas   al,BYTE PTR es:[edi]
  416de7:	fwait
  416de8:	setb   BYTE PTR [ecx+0xf0623c6]
  416def:	sub    esi,DWORD PTR [eax]
  416df1:	je     0x416e1d
  416df3:	cmp    ebp,DWORD PTR [edi]
  416df5:	pop    ebp
  416df6:	sbb    al,ah
  416df8:	inc    esp
  416df9:	pop    edx
  416dfa:	inc    ebp
  416dfb:	and    eax,0x47119352
  416e00:	and    DWORD PTR [eax-0x14],0x6a
  416e04:	lea    edi,[ecx-0x6e905afa]
  416e0a:	mov    esp,0xadb0bba5
  416e0f:	(bad)  
  416e10:	and    eax,0xce2df3bb
  416e15:	xor    cl,BYTE PTR [edx+0x59ee553]
  416e1b:	xchg   esp,eax
  416e1c:	dec    ebp
  416e1d:	in     al,0xed
  416e1f:	add    BYTE PTR [edi+0x20],0x45
  416e23:	daa    
  416e24:	xchg   edi,eax
  416e25:	xchg   ebx,eax
  416e26:	rol    DWORD PTR ds:0x40b81feb,0xe0
  416e2d:	jecxz  0x416e2d
  416e2f:	push   0xffffffca
  416e31:	add    eax,0x1246fcae
  416e36:	jae    0x416e44
  416e38:	mov    ecx,0x15d79019
  416e3d:	repnz mov ah,0x6a
  416e40:	cmp    al,0x81
  416e42:	sbb    DWORD PTR [eax-0x57af598c],esp
  416e48:	push   ds
  416e49:	dec    esi
  416e4a:	mov    ecx,0x78a36487
  416e4f:	push   ss
  416e50:	in     eax,dx
  416e51:	cdq    
  416e52:	lock mov bl,0x50
  416e55:	dec    edi
  416e56:	and    cl,BYTE PTR [edx+0x139e7f43]
  416e5c:	mov    edx,0x365680a6
  416e61:	dec    edi
  416e62:	pop    esi
  416e63:	retf   
  416e64:	adc    DWORD PTR [edx],edi
  416e66:	mov    ds:0xc9ab4e15,eax
  416e6b:	or     BYTE PTR [ebx+0x2e3d84f],0x10
  416e72:	retf   
  416e73:	dec    edi
  416e74:	shr    BYTE PTR [esp+eax*1],0xdc
  416e78:	sub    ah,bl
  416e7a:	push   0xe45a777c
  416e7f:	cdq    
  416e80:	aaa    
  416e81:	xor    al,BYTE PTR [ecx+0x86e6b9c]
  416e87:	push   edi
  416e88:	sub    edi,0x4338d5b
  416e8e:	leave  
  416e8f:	call   DWORD PTR [esi+eiz*1]
  416e92:	add    BYTE PTR [edx-0x57],dl
  416e95:	out    dx,eax
  416e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e97:	neg    BYTE PTR [ebx+edx*2]
  416e9a:	das    
  416e9b:	mov    esi,0x9e7309cd
  416ea0:	ss pop ebp
  416ea2:	adc    eax,0x9ce95e8d
  416ea7:	mov    es,eax
  416ea9:	mov    ds:0x7ee44433,al
  416eae:	ja     0x416eb5
  416eb0:	xlat   BYTE PTR ds:[ebx]
  416eb1:	or     al,0x57
  416eb3:	mov    dl,0x88
  416eb5:	mov    fs,WORD PTR ds:0xeb7c42ab
  416ebb:	pop    ebp
  416ebd:	cld    
  416ebe:	mov    al,ds:0xb85b30f0
  416ec3:	rol    DWORD PTR [edi+0x2e89c3bd],0x7
  416eca:	mov    al,ds:0x200f81c3
  416ecf:	and    bl,BYTE PTR [edi+esi*1]
  416ed2:	mov    bh,0x28
  416ed4:	mov    al,0xb9
  416ed6:	xchg   esp,eax
  416ed7:	idiv   DWORD PTR [ecx]
  416ed9:	lahf   
  416eda:	sub    al,0x4d
  416edc:	in     eax,0x1f
  416ede:	add    al,0x63
  416ee0:	and    al,0x9f
  416ee2:	ret    0x4c25
  416ee5:	jle    0x416f51
  416ee7:	sub    ch,BYTE PTR [eax-0x519151d3]
  416eed:	pop    ss
  416eee:	fcomp  QWORD PTR [edi+ebx*1]
  416ef1:	mov    edx,0xa8ffd2c6
  416ef6:	pop    ebp
  416ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef8:	xchg   ebx,eax
  416ef9:	in     al,dx
  416efa:	enter  0x918d,0x25
  416efe:	mov    ecx,0x56fa9f3
  416f03:	push   edx
  416f04:	std    
  416f05:	mov    ?,dx
  416f08:	dec    ecx
  416f09:	mov    bh,0x5c
  416f0b:	ret    0xace1
  416f0e:	int    0xd
  416f10:	mov    edi,0x17160c3d
  416f15:	ss mov dh,0x6c
  416f18:	fmul   QWORD PTR [ebp-0x4675ec6a]
  416f1e:	into   
  416f1f:	cld    
  416f20:	cdq    
  416f21:	push   ds
  416f22:	das    
  416f23:	pop    ds
  416f24:	jmp    0x28f6266f
  416f29:	out    0xc9,eax
  416f2b:	std    
  416f2c:	add    ecx,DWORD PTR [esi-0x2face94a]
  416f32:	fild   QWORD PTR [edi]
  416f34:	add    ch,cl
  416f36:	ins    DWORD PTR es:[edi],dx
  416f37:	inc    eax
  416f38:	pop    ds
  416f39:	ficomp WORD PTR [edx]
  416f3b:	les    eax,FWORD PTR [edi]
  416f3d:	loopne 0x416fa9
  416f3f:	sub    DWORD PTR [edx],0x7afcc738
  416f45:	xchg   edi,eax
  416f46:	push   ecx
  416f47:	sub    eax,DWORD PTR [edx-0xcdea711]
  416f4d:	jl     0x416f52
  416f4f:	xchg   edx,eax
  416f50:	cmp    al,0xed
  416f52:	sti    
  416f53:	xor    ah,BYTE PTR [edx-0x1be0f604]
  416f59:	fs mov ch,0xa2
  416f5c:	push   esi
  416f5d:	jmp    0x891ae5bd
  416f62:	or     ebp,esp
  416f64:	cmp    eax,DWORD PTR [ebp+0x25d00ed]
  416f6a:	push   eax
  416f6b:	imul   ebx,edi,0x7119f6cb
  416f71:	sbb    ecx,DWORD PTR [esi+0x1ef0341]
  416f77:	out    dx,al
  416f78:	loopne 0x416fd4
  416f7a:	xor    eax,0xbb18e2d8
  416f7f:	push   0x5f
  416f81:	pop    edi
  416f82:	(bad)  
  416f84:	dec    edi
  416f85:	jnp    0x416f17
  416f87:	inc    eax
  416f88:	xchg   ebx,eax
  416f89:	sar    DWORD PTR [ebx-0x12531021],1
  416f8f:	shr    BYTE PTR [eax-0x3ae8d5d0],cl
  416f95:	cmp    al,0x0
  416f97:	sub    DWORD PTR [ebx+ebx*1-0x52],0x0
  416f9c:	in     eax,0x70
  416f9e:	ss scas al,BYTE PTR es:[edi]
  416fa0:	stos   DWORD PTR es:[edi],eax
  416fa1:	mov    dh,0xe
  416fa3:	jbe    0x416f79
  416fa5:	dec    esp
  416fa6:	nop
  416fa7:	in     al,0x49
  416fa9:	call   0x109e83f3
  416fae:	mov    dl,0x82
  416fb0:	xor    ecx,DWORD PTR [ebx+esi*4+0x3a]
  416fb4:	jae    0x417008
  416fb6:	mov    WORD PTR [edi-0x2cf80050],cs
  416fbc:	std    
  416fbd:	push   es
  416fbe:	jmp    0x416f42
  416fc0:	shl    DWORD PTR [eax-0x1b0000f8],0xd6
  416fc7:	cmp    edi,DWORD PTR [ecx+0x56f20b72]
  416fcd:	xor    ebx,DWORD PTR [ecx-0x78bdd9e5]
  416fd3:	rcr    esi,1
  416fd5:	aas    
  416fd6:	imul   eax,ecx,0x1d3f878e
  416fdc:	test   eax,0x32989cb5
  416fe1:	retf   
  416fe2:	mov    fs,WORD PTR [eax-0x52a5acf3]
  416fe8:	(bad)  [esi+0x5e0a381f]
  416fee:	mov    ch,0xe7
  416ff0:	dec    ebx
  416ff1:	cmp    eax,0x68274cec
  416ff6:	and    eax,0x4104d5bb
  416ffb:	stos   DWORD PTR es:[edi],eax
  416ffc:	push   eax
  416ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ffe:	xchg   esi,eax
  416fff:	sti    
  417000:	popf   
  417001:	pop    edx
  417002:	stos   BYTE PTR es:[edi],al
  417003:	cmp    esi,DWORD PTR [edi]
  417005:	rcl    dh,cl
  417007:	sub    edx,DWORD PTR [eax+0x39]
  41700a:	stc    
  41700b:	sti    
  41700c:	hlt    
  41700d:	aad    0xd4
  41700f:	pop    es
  417010:	and    eax,0xc92ecf91
  417015:	outs   dx,BYTE PTR ds:[esi]
  417016:	pop    ds
  417017:	cmp    DWORD PTR [eax+0x67],ebx
  41701a:	push   esp
  41701b:	rol    ch,cl
  41701d:	sbb    eax,0x3105500
  417022:	xchg   BYTE PTR ds:0x434cc424,cl
  417028:	sbb    eax,0x287aa232
  41702d:	pop    ds
  41702e:	scas   al,BYTE PTR es:[edi]
  41702f:	imul   edx,DWORD PTR ds:0x9ef69612,0x57
  417036:	fs dec edi
  417038:	jne    0x41701a
  41703a:	jecxz  0x416fbc
  41703c:	cmp    al,0x46
  41703e:	xor    bl,al
  417040:	cld    
  417041:	fwait
  417042:	jl     0x4170c3
  417044:	in     eax,0x31
  417046:	pop    esi
  417047:	pushf  
  417048:	scas   eax,DWORD PTR es:[edi]
  417049:	jp     0x417044
  41704b:	inc    esp
  41704c:	mov    ebp,0x611deea4
  417051:	lds    ebx,FWORD PTR [eax-0x19]
  417054:	invd   
  417056:	pop    esp
  417057:	shl    BYTE PTR [ebx-0x1a8e2785],0x1d
  41705e:	mov    bl,0xa3
  417060:	dec    ecx
  417061:	mov    dl,0xf9
  417063:	fstp   st(7)
  417065:	hlt    
  417066:	cmp    al,BYTE PTR [ecx+0x8]
  417069:	pop    ds
  41706a:	(bad)  
  41706b:	fs push esi
  41706d:	sbb    ecx,DWORD PTR [edi+0x12e26909]
  417073:	ret    0xf859
  417076:	div    DWORD PTR [edx+0x3bb7770f]
  41707c:	ins    DWORD PTR es:[edi],dx
  41707d:	call   0x42d6f360
  417082:	jmp    0x4170af
  417084:	(bad)  
  417085:	out    dx,eax
  417086:	xor    bl,BYTE PTR [edi+0x1e]
  417089:	jnp    0x4170ec
  41708b:	jle    0x4170c5
  41708d:	lods   eax,DWORD PTR ds:[esi]
  41708e:	dec    esi
  41708f:	or     DWORD PTR [esi],ebp
  417091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417092:	jmp    DWORD PTR [ebp-0x58]
  417095:	in     al,0x57
  417097:	dec    edi
  417098:	ficomp DWORD PTR [ebx]
  41709a:	popa   
  41709b:	jg     0x41709b
  41709d:	pop    esp
  41709e:	push   es
  41709f:	fidivr WORD PTR [eax]
  4170a1:	pop    ds
  4170a2:	fcomi  st,st(6)
  4170a4:	shl    DWORD PTR [ecx+0x47],1
  4170a7:	xor    eax,0x5b93a2e0
  4170ac:	mov    ah,0x0
  4170ae:	sub    DWORD PTR [edi],ebx
  4170b0:	ror    BYTE PTR [esp+eax*1-0x2a],1
  4170b4:	inc    ebx
  4170b5:	ins    DWORD PTR es:[edi],dx
  4170b6:	(bad)  ss:[edx-0x2b17419f]
  4170bd:	mov    ds:0x235de92c,eax
  4170c2:	test   eax,0x143f0124
  4170c7:	mov    eax,0x55497e87
  4170cc:	cdq    
  4170cd:	cmp    al,0xd6
  4170cf:	add    ebx,DWORD PTR [edx+0xf]
  4170d2:	(bad)  
  4170d3:	dec    esp
  4170d4:	mov    ah,0x73
  4170d6:	mov    dh,0x23
  4170d8:	in     al,0xf8
  4170da:	loope  0x4170ba
  4170dc:	mov    al,ds:0xd1d7e802
  4170e1:	adc    DWORD PTR [eax+0x54],ecx
  4170e4:	add    edi,ecx
  4170e6:	js     0x417163
  4170e8:	les    eax,FWORD PTR [ebp+eax*1+0x1065a102]
  4170ef:	xor    BYTE PTR [edi],cl
  4170f1:	outs   dx,BYTE PTR ds:[esi]
  4170f2:	sti    
  4170f3:	aaa    
  4170f4:	push   eax
  4170f5:	xor    DWORD PTR [edi+0x1d],edx
  4170f8:	xlat   BYTE PTR ds:[ebx]
  4170f9:	jbe    0x41716b
  4170fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170fc:	jl     0x417109
  4170fe:	push   cs
  4170ff:	(bad)  
  417100:	mov    ds:0x523fb74c,al
  417105:	mov    esi,0x4d5968e9
  41710a:	dec    esi
  41710b:	adc    al,dh
  41710d:	xor    al,0xf3
  41710f:	jecxz  0x417094
  417111:	pop    ebx
  417112:	and    eax,0x9f4d4805
  417117:	mov    ds:0x48c5816b,eax
  41711c:	ja     0x417123
  41711e:	jns    0x4170c9
  417120:	jp     0x4170f9
  417122:	dec    edi
  417123:	push   esp
  417124:	call   0xb763c0c1
  417129:	(bad)  
  41712a:	jp     0x417188
  41712c:	pop    eax
  41712d:	xor    eax,0x14285ef3
  417132:	mov    esi,0x56bb1c8d
  417137:	adc    ebp,0x88f93e85
  41713d:	mov    eax,0xfc07ab15
  417142:	icebp  
  417143:	test   al,0x26
  417145:	jno    0x417135
  417147:	addr16 add eax,0x6f026cfa
  41714d:	sub    eax,0xd54f8284
  417152:	pusha  
  417153:	mov    ds:0x5ad5a2c5,eax
  417158:	sbb    BYTE PTR [ebx+0x3d922911],0x7d
  41715f:	dec    edx
  417160:	ins    DWORD PTR es:[edi],dx
  417161:	jle    0x41713a
  417163:	ds leave 
  417165:	adc    al,0x13
  417167:	test   al,0x48
  417169:	push   ecx
  41716a:	pop    ebp
  41716b:	sbb    BYTE PTR [edx+0x3b],0x35
  41716f:	dec    edx
  417170:	fnstenv [esp+ebp*2]
  417173:	sbb    DWORD PTR [edx+0x5f8fe7d],edi
  417179:	fsubr  st,st(7)
  41717b:	into   
  41717c:	dec    ebx
  41717d:	ja     0x41714c
  41717f:	cdq    
  417180:	mov    ds:0xaf555fd9,eax
  417185:	dec    eax
  417186:	jp     0x417144
  417188:	stc    
  417189:	je     0x4171e8
  41718b:	(bad)
  41718f:	adc    BYTE PTR [ebx+0x499f3c4d],0x95
  417196:	mov    ebp,0x64bd3f57
  41719b:	test   eax,0xb13dec48
  4171a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a1:	xchg   edi,eax
  4171a2:	jbe    0x4171ec
  4171a4:	mov    WORD PTR [eax-0x15],es
  4171a7:	pop    esp
  4171a8:	test   eax,0x515d6497
  4171ad:	pop    eax
  4171ae:	and    al,0x65
  4171b0:	nop
  4171b1:	dec    esp
  4171b2:	sahf   
  4171b3:	xchg   ebp,eax
  4171b4:	(bad)  
  4171b5:	pop    edi
  4171b6:	stos   DWORD PTR es:[edi],eax
  4171b7:	cld    
  4171b8:	push   ss
  4171b9:	iret   
  4171ba:	aaa    
  4171bb:	sar    DWORD PTR [ecx+0x8],0x61
  4171bf:	xchg   edx,eax
  4171c0:	icebp  
  4171c1:	sbb    ebx,esi
  4171c3:	fild   WORD PTR [ecx+0x66]
  4171c6:	sub    cl,BYTE PTR [edi-0x5624900b]
  4171cc:	aas    
  4171cd:	mov    al,0xa7
  4171cf:	sbb    bl,bh
  4171d1:	loope  0x417215
  4171d3:	dec    ecx
  4171d4:	(bad)  
  4171d5:	daa    
  4171d6:	xor    ch,ch
  4171d8:	xor    ebp,ebp
  4171da:	mov    cl,0xa
  4171dc:	cmc    
  4171dd:	fucomip st,st(2)
  4171df:	dec    ebp
  4171e0:	imul   ebp,edx,0x25cd22b7
  4171e6:	inc    edi
  4171e7:	fcmovbe st,st(5)
  4171e9:	cmp    ecx,ecx
  4171eb:	test   esp,0xed7dbed8
  4171f1:	aas    
  4171f2:	imul   edi,DWORD PTR [eax-0x7e],0xffffffc9
  4171f6:	in     al,0xc6
  4171f8:	neg    BYTE PTR [esi+0x2103953c]
  4171fe:	xchg   ebp,eax
  4171ff:	aad    0x41
  417201:	mov    ebp,0x125ba6ce
  417206:	xchg   edx,eax
  417207:	test   DWORD PTR cs:[eax+0x356935],0x6a110578
  417212:	jne    0x4171f2
  417214:	pop    ss
  417215:	cld    
  417216:	mov    esi,0xc785e29
  41721b:	xchg   edi,eax
  41721c:	pop    ss
  41721d:	push   ebp
  41721e:	pushf  
  41721f:	inc    ecx
  417220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417221:	div    DWORD PTR [ebp+0x5eaa4a39]
  417227:	es pusha 
  417229:	lock jp 0x4171b3
  41722c:	adc    eax,0x3297aecc
  417231:	stc    
  417232:	les    esi,FWORD PTR [edx-0x8]
  417235:	lds    ecx,FWORD PTR ds:[ecx]
  417238:	or     DWORD PTR [ebp-0x7b01099a],esp
  41723e:	xor    al,0xea
  417240:	inc    ecx
  417241:	or     esp,DWORD PTR [edx]
  417243:	push   edx
  417244:	stos   BYTE PTR es:[di],al
  417246:	jb     0x41724d
  417248:	inc    ecx
  417249:	lea    edi,[ecx+0x548a8111]
  41724f:	popa   
  417250:	outs   dx,DWORD PTR ds:[esi]
  417251:	sbb    bl,dh
  417253:	cmc    
  417254:	out    dx,eax
  417255:	adc    bh,ch
  417257:	adc    eax,0x5ea30a8b
  41725c:	in     eax,0xf6
  41725e:	xchg   esi,eax
  41725f:	inc    esi
  417260:	push   ecx
  417261:	pop    esi
  417262:	sar    BYTE PTR [ebx+0x366ab44e],1
  417268:	mov    al,0x74
  41726a:	sub    esi,DWORD PTR [ebx]
  41726c:	(bad)  
  41726d:	lods   al,BYTE PTR ds:[esi]
  41726e:	data16 cli 
  417270:	cdq    
  417271:	xchg   DWORD PTR [ecx-0x5d],ebx
  417274:	adc    DWORD PTR [ebp+0x186a189f],0x4a
  41727b:	mov    eax,0x45e6e072
  417280:	enter  0x1584,0x78
  417284:	rcr    DWORD PTR [ebp-0x1],0x3e
  417288:	push   edx
  417289:	sub    ebp,DWORD PTR [edi]
  41728b:	mov    dh,0xc4
  41728d:	lea    edi,[ebp-0x45]
  417290:	push   ebx
  417291:	inc    edx
  417292:	sub    eax,0xa98619
  417297:	cwde   
  417298:	lahf   
  417299:	xchg   edi,eax
  41729a:	sbb    cl,BYTE PTR [ecx]
  41729c:	add    DWORD PTR [ebp+0x224ff96e],ebp
  4172a2:	aas    
  4172a3:	dec    esp
  4172a4:	pop    esi
  4172a5:	add    DWORD PTR [edi],esp
  4172a7:	shr    BYTE PTR ds:0xe83f0814,1
  4172ad:	xor    cl,bh
  4172af:	lock push ss
  4172b1:	fdivr  st(1),st
  4172b3:	cmp    al,0xc8
  4172b5:	pushf  
  4172b6:	test   BYTE PTR ds:[ecx+0x56],dl
  4172ba:	sbb    al,0x69
  4172bc:	inc    esp
  4172bd:	or     eax,0xcb3bfe9a
  4172c2:	in     eax,dx
  4172c3:	jecxz  0x417319
  4172c5:	and    esi,DWORD PTR [edi-0x26]
  4172c8:	test   DWORD PTR [eax+0x1b],0xc8ef7a0c
  4172cf:	adc    eax,0x44644ce0
  4172d4:	int3   
  4172d5:	pop    ebx
  4172d6:	aas    
  4172d7:	add    al,0x25
  4172d9:	je     0x4172c8
  4172db:	cmp    eax,0x20a095a6
  4172e0:	cmp    bh,bl
  4172e2:	repnz fnsave [edx+0x4a29b524]
  4172e9:	jne    0x4172f9
  4172eb:	xchg   edi,eax
  4172ec:	add    ch,BYTE PTR [edx-0x38]
  4172ef:	inc    ebx
  4172f0:	xchg   DWORD PTR [esi],ebp
  4172f2:	push   esp
  4172f3:	fcmovnbe st,st(4)
  4172f5:	stos   DWORD PTR es:[edi],eax
  4172f6:	adc    bh,BYTE PTR [eax]
  4172f8:	pop    edi
  4172f9:	dec    DWORD PTR [esi+eiz*2-0x3ba21084]
  417300:	mov    esp,0x1ab8fb04
  417305:	xchg   ecx,eax
  417306:	jp     0x417356
  417308:	mov    cl,0xc1
  41730a:	mov    ah,bh
  41730c:	popf   
  41730d:	cmp    ebp,esi
  41730f:	add    al,0x3a
  417311:	jnp    0x4172f3
  417313:	sub    al,0x8e
  417315:	lea    esi,[ebp+0x2e]
  417318:	push   0x7d536d06
  41731d:	ret    0xce9a
  417320:	bound  eax,QWORD PTR [edx-0xaa8b270]
  417326:	retf   0x76a
  417329:	idiv   BYTE PTR [edi]
  41732b:	pop    ecx
  41732c:	shl    dl,cl
  41732e:	cmp    cl,BYTE PTR [edx-0x2ca9f29b]
  417334:	pop    ecx
  417335:	push   ds
  417336:	and    esi,DWORD PTR [ecx]
  417338:	jnp    0x417391
  41733a:	adc    eax,0xe974e767
  41733f:	mov    ds:0x5a15d4ad,eax
  417344:	fistp  QWORD PTR [eax+0x3e987cd8]
  41734a:	in     eax,0x5
  41734c:	push   ebp
  41734d:	and    al,0xbf
  41734f:	mov    eax,ds:0xad9a1511
  417354:	jbe    0x41738d
  417356:	retf   0x5c06
  417359:	out    dx,al
  41735a:	cli    
  41735b:	and    bh,BYTE PTR ds:0xd43473ce
  417361:	lods   al,BYTE PTR ds:[esi]
  417362:	test   BYTE PTR [eax-0x69880b08],dh
  417368:	inc    esi
  417369:	rcl    BYTE PTR [esi],1
  41736b:	sbb    DWORD PTR [edi-0x5857ffb4],ecx
  417371:	sub    al,0xe2
  417373:	in     al,0xc4
  417375:	daa    
  417376:	(bad)  [ebp*8-0x18689119]
  41737d:	sbb    al,0xf6
  417380:	ins    DWORD PTR es:[edi],dx
  417381:	fist   WORD PTR [edi-0xb5765e1]
  417387:	je     0x417378
  417389:	das    
  41738a:	dec    ebp
  41738b:	and    BYTE PTR [ecx-0x5],dl
  41738e:	jl     0x41739b
  417390:	mov    DWORD PTR ds:0xefd0ecbc,eax
  417396:	cmp    eax,0x16d36b07
  41739b:	xchg   ecx,eax
  41739c:	jmp    0x4d1f:0x4f207a07
  4173a3:	hlt    
  4173a4:	into   
  4173a5:	push   edx
  4173a6:	dec    esi
  4173a7:	lods   eax,DWORD PTR ds:[esi]
  4173a8:	scas   eax,DWORD PTR es:[edi]
  4173a9:	out    dx,al
  4173aa:	rcl    BYTE PTR [ebx-0x5e],0x94
  4173ae:	hlt    
  4173af:	inc    edi
  4173b0:	in     eax,dx
  4173b1:	sbb    cl,BYTE PTR [eax+0x56]
  4173b4:	xor    ah,BYTE PTR [edi+ecx*1-0x191c19cc]
  4173bb:	mov    ebp,0x841d64d6
  4173c0:	das    
  4173c1:	push   ebp
  4173c2:	out    0xa7,al
  4173c4:	imul   edx,DWORD PTR [ebp-0xe],0x632c86aa
  4173cb:	mov    edi,0x3365753f
  4173d0:	inc    BYTE PTR [edi-0x4c094981]
  4173d6:	stos   DWORD PTR es:[edi],eax
  4173d7:	loop   0x417406
  4173d9:	int3   
  4173da:	mov    dl,0x13
  4173dc:	pop    DWORD PTR [eax+ecx*2+0x24]
  4173e0:	loopne 0x41742e
  4173e2:	iret   
  4173e3:	ret    0xe7c7
  4173e6:	daa    
  4173e7:	sbb    bl,BYTE PTR ds:0xb7793777
  4173ed:	jb     0x417467
  4173ef:	inc    edx
  4173f0:	stos   DWORD PTR es:[edi],eax
  4173f1:	sahf   
  4173f2:	mov    esp,DWORD PTR [ebp-0x2f398730]
  4173f8:	adc    al,0x82
  4173fa:	loopne 0x4173ab
  4173fc:	inc    eax
  4173fd:	adc    eax,0x3a42d668
  417402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417403:	(bad)  [edx+0x40]
  417406:	mov    al,BYTE PTR [edi+0x74]
  417409:	in     eax,dx
  41740a:	mov    ch,0x3c
  41740c:	add    eax,DWORD PTR [ecx+0x24]
  41740f:	and    DWORD PTR [eax],esi
  417411:	in     eax,0x71
  417413:	push   edi
  417414:	sbb    eax,0x6c15b363
  417419:	pop    ebx
  41741a:	mov    edi,0xd37af69c
  41741f:	xor    eax,0x7e823f42
  417424:	pop    esp
  417425:	adc    al,cl
  417427:	rcl    BYTE PTR [eax+0x6a],0x5
  41742b:	jecxz  0x417426
  41742d:	data16 (bad) 
  41742f:	xor    ah,BYTE PTR [ebp+0x31de9f94]
  417435:	jns    0x4174a3
  417437:	fist   DWORD PTR [ebp-0x218f5f6c]
  41743d:	xchg   ebx,eax
  41743e:	test   al,bl
  417440:	inc    esi
  417441:	add    al,0xab
  417443:	mov    dh,0x4e
  417445:	pop    es
  417446:	mov    eax,ds:0xc4dda367
  41744b:	mov    dl,0x80
  41744d:	in     eax,dx
  41744e:	jle    0x4174a0
  417450:	mov    ebx,0x6b447c5e
  417455:	outs   dx,DWORD PTR ds:[esi]
  417456:	and    ebx,DWORD PTR [edi]
  417458:	fld    DWORD PTR [ecx-0x728bd99c]
  41745e:	jp     0x417441
  417460:	jge    0x4174a7
  417462:	jge    0x417452
  417464:	scas   al,BYTE PTR es:[edi]
  417465:	inc    edx
  417466:	push   edx
  417467:	(bad)  
  417469:	dec    ebx
  41746a:	mov    eax,0x7fb6e1db
  41746f:	rol    DWORD PTR [ebx+edx*2-0x4353d247],0xb0
  417477:	dec    ecx
  417478:	sub    ebx,DWORD PTR [eax]
  41747a:	inc    edx
  41747b:	push   0xabc9bc6a
  417480:	xchg   edi,eax
  417481:	cld    
  417482:	or     ecx,DWORD PTR [edx]
  417484:	(bad)  
  417485:	mov    cl,0xf5
  417487:	fistp  WORD PTR [eax]
  417489:	int3   
  41748a:	mov    ah,0x6e
  41748c:	inc    edx
  41748d:	fistp  DWORD PTR [esi]
  41748f:	daa    
  417490:	mov    dl,0xd1
  417492:	adc    al,0x8e
  417494:	imul   esp,esi,0x40c08109
  41749a:	add    esp,ebp
  41749c:	cmp    ecx,DWORD PTR [ebp-0x370120e6]
  4174a2:	mov    ch,0x57
  4174a4:	add    al,0xd3
  4174a6:	les    ecx,FWORD PTR [ecx+eiz*4-0x12]
  4174aa:	es jne 0x41747b
  4174ad:	int    0xc8
  4174af:	cli    
  4174b0:	adc    eax,DWORD PTR [edi-0x1f56a04f]
  4174b6:	sub    eax,0xa40d4ea3
  4174bb:	dec    ecx
  4174bc:	sub    eax,0x2a
  4174bf:	dec    edi
  4174c0:	mul    dh
  4174c2:	xor    al,0x52
  4174c4:	mov    ds:0x90da6560,eax
  4174c9:	sbb    DWORD PTR [eax],edx
  4174cb:	scas   eax,DWORD PTR es:[edi]
  4174cc:	(bad)  
  4174cd:	jae    0x41754d
  4174cf:	out    0xb4,al
  4174d1:	or     ebx,DWORD PTR [edx+0x63]
  4174d4:	dec    ebp
  4174d5:	jg     0x417540
  4174d7:	push   edx
  4174d8:	and    eax,0xba4a7bb8
  4174dd:	and    al,al
  4174df:	ret    
  4174e0:	pusha  
  4174e1:	jl     0x41749d
  4174e3:	push   eax
  4174e4:	cmc    
  4174e5:	pop    esi
  4174e6:	add    eax,0x3b831760
  4174eb:	and    eax,esi
  4174ed:	dec    ecx
  4174ee:	adc    eax,0x23fd6de1
  4174f3:	mov    ecx,0x9e5153e3
  4174f8:	(bad)  
  4174f9:	sbb    ecx,DWORD PTR [edx-0x6a0d58bd]
  4174ff:	inc    ebp
  417500:	xchg   BYTE PTR [esi],ch
  417502:	imul   edi,DWORD PTR [esi+0x33],0xd5b2e8ba
  417509:	push   ebx
  41750a:	test   DWORD PTR [ebx],ebx
  41750c:	xchg   edx,eax
  41750d:	adc    bl,BYTE PTR [eax+ebp*2+0x148d48c7]
  417514:	sbb    al,0x16
  417516:	cmp    BYTE PTR [esi+0x35b3ba2b],0x39
  41751d:	pop    edx
  41751e:	std    
  41751f:	ins    DWORD PTR es:[edi],dx
  417520:	and    al,0x20
  417522:	icebp  
  417523:	aas    
  417524:	stos   DWORD PTR es:[edi],eax
  417525:	in     eax,0xfb
  417527:	pusha  
  417528:	inc    edi
  417529:	vpshlw xmm9,[esi],xmm2
  41752e:	and    eax,0x2bf154bc
  417533:	jae    0x417551
  417535:	sti    
  417536:	fdivp  st(4),st
  417538:	mov    cl,0x84
  41753a:	and    al,0x92
  41753c:	push   cs
  41753d:	add    dl,al
  41753f:	jle    0x41757a
  417541:	jo     0x4175a4
  417543:	imul   ebx,DWORD PTR [ebx],0xfffffff2
  417546:	push   ebp
  417547:	(bad)  
  417548:	mov    edx,0x95cbedc7
  41754d:	push   esp
  41754e:	fistp  DWORD PTR [edx]
  417550:	sub    eax,0xe07806c7
  417555:	mov    WORD PTR [ebp-0x648a63c1],?
  41755b:	sbb    dl,cl
  41755d:	add    DWORD PTR [esi-0x1e],eax
  417560:	jecxz  0x4175a5
  417562:	cdq    
  417563:	stc    
  417564:	and    DWORD PTR [edi+0x55d37977],edi
  41756a:	mov    edx,0xdece2e96
  41756f:	dec    esp
  417570:	(bad)  
  417571:	push   es
  417572:	test   al,0x96
  417574:	ss repz std 
  417577:	mov    eax,0xd8d2963
  41757c:	mov    al,0x9e
  41757e:	out    0x49,al
  417580:	and    BYTE PTR [eax-0x31],dh
  417583:	push   edi
  417584:	adc    edi,DWORD PTR [eax]
  417586:	call   0x69f67b58
  41758b:	push   edx
  41758c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41758e:	jnp    0x4175f4
  417590:	push   cs
  417591:	retf   0xef0b
  417594:	ds push 0xfffffff3
  417597:	push   esi
  417598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417599:	sahf   
  41759a:	add    esp,DWORD PTR [ebx+0x5640500f]
  4175a0:	push   eax
  4175a1:	mov    ds:0x1711ff5f,al
  4175a6:	sbb    al,0x29
  4175a8:	and    DWORD PTR ds:[edi],ebp
  4175ab:	cdq    
  4175ac:	cli    
  4175ad:	stos   DWORD PTR es:[edi],eax
  4175ae:	and    BYTE PTR [bx+si],cl
  4175b1:	inc    ebp
  4175b2:	dec    ebp
  4175b3:	xor    al,0x1a
  4175b5:	retf   0x6f82
  4175b8:	xchg   edx,eax
  4175b9:	repz js 0x41758f
  4175bc:	push   esi
  4175bd:	xor    al,BYTE PTR [ebx+ecx*2]
  4175c0:	mov    ecx,0xb2afcfd3
  4175c5:	hlt    
  4175c6:	sbb    bl,BYTE PTR [ebp+0x63]
  4175c9:	(bad)  [edx-0x71533ab4]
  4175cf:	jbe    0x417571
  4175d1:	pushf  
  4175d2:	into   
  4175d3:	scas   al,BYTE PTR es:[edi]
  4175d4:	dec    eax
  4175d5:	push   ss
  4175d6:	mov    ebp,0x76264be
  4175db:	pop    esi
  4175dc:	jns    0x4175da
  4175de:	data16 jae 0x41765d
  4175e1:	repnz push edx
  4175e3:	add    al,0x43
  4175e5:	into   
  4175e6:	pop    ss
  4175e7:	test   BYTE PTR [esi+0x5bbb0e61],dl
  4175ed:	mov    dl,0x3e
  4175ef:	repnz push ss
  4175f1:	adc    eax,0x2da6847
  4175f6:	xor    ecx,DWORD PTR [edx]
  4175f8:	dec    edx
  4175f9:	test   BYTE PTR [ebp+0x631c7a92],bl
  4175ff:	push   ds
  417600:	int3   
  417601:	and    al,0xea
  417603:	iret   
  417604:	sbb    al,0x2
  417606:	cmp    dl,ch
  417608:	push   ebp
  417609:	lock or DWORD PTR [eiz*2-0x555c02a0],edx
  417611:	ja     0x4175a7
  417613:	ret    
  417614:	stos   BYTE PTR es:[edi],al
  417615:	mov    bh,0x7
  417617:	mov    bh,0x8c
  417619:	cmc    
  41761a:	test   DWORD PTR [edx+0x24],0xa76f89c9
  417621:	xor    al,BYTE PTR [edi+0x114698d3]
  417627:	inc    ecx
  417628:	cmp    ch,BYTE PTR [ebp+ecx*4-0x4c7d11de]
  41762f:	inc    ecx
  417630:	adc    eax,0xfed02335
  417635:	les    edx,FWORD PTR [esp+esi*2+0x73]
  417639:	lds    eax,FWORD PTR [edi]
  41763b:	scas   eax,DWORD PTR es:[edi]
  41763c:	arpl   WORD PTR [esi-0x15],sp
  41763f:	cmp    bh,dh
  417641:	mov    ebp,0x251fd6d1
  417647:	inc    BYTE PTR [eax+0x3ee8d370]
  41764d:	adc    DWORD PTR [ebx],eax
  41764f:	adc    ebx,edx
  417651:	push   edi
  417652:	inc    ebx
  417653:	push   0x1091b462
  417658:	popa   
  417659:	jbe    0x417606
  41765b:	pushf  
  41765c:	and    al,0x54
  41765e:	xchg   DWORD PTR [ecx+esi*4-0x7f],ebx
  417662:	test   eax,0xefe0459a
  417667:	add    DWORD PTR [edi-0x6013e071],edx
  41766d:	xor    DWORD PTR [ebx],ebx
  41766f:	call   0xf831:0xa16668c
  417676:	data16 std 
  417678:	imul   ecx,DWORD PTR [edi+esi*2+0x6a],0xd
  41767d:	call   0x8b8f:0x75595399
  417684:	loop   0x417652
  417686:	pop    ebp
  417687:	pop    eax
  417688:	xor    al,0x3a
  41768a:	jmp    0x8d1f:0x337e14a8
  417691:	call   0x7e8e:0x9989b8ae
  417698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417699:	mov    dh,0x3d
  41769b:	push   es
  41769c:	mov    ah,0xaf
  41769e:	scas   eax,DWORD PTR es:[edi]
  41769f:	or     al,0xa8
  4176a1:	pop    ss
  4176a2:	bnd ja 0x4176f1
  4176a5:	xchg   esp,eax
  4176a6:	loop   0x417642
  4176a8:	xchg   esi,eax
  4176a9:	adc    bh,BYTE PTR [eax]
  4176ab:	loop   0x41771f
  4176ad:	aam    0x1
  4176af:	mov    ecx,DWORD PTR [ebx-0x3a]
  4176b2:	pop    es
  4176b3:	ffreep st(4)
  4176b5:	hlt    
  4176b6:	jnp    0x417704
  4176b8:	mov    ebp,0x1c8eac74
  4176bd:	pop    eax
  4176be:	sbb    edi,esp
  4176c0:	dec    edi
  4176c1:	dec    ebx
  4176c2:	loop   0x417690
  4176c4:	jb     0x417656
  4176c6:	in     al,0x2e
  4176c8:	and    eax,DWORD PTR [ebx]
  4176ca:	mov    cl,0x48
  4176cc:	mov    BYTE PTR [ebp+0x41e4f44f],bh
  4176d2:	and    ebp,DWORD PTR [ecx+0x32]
  4176d5:	popf   
  4176d6:	sub    ebp,eax
  4176d8:	loopne 0x41772c
  4176da:	(bad)  [ebp-0x50d5bc06]
  4176e0:	xlat   BYTE PTR ds:[ebx]
  4176e1:	addr16 enter 0x7547,0xde
  4176e6:	mov    ecx,edi
  4176e8:	sar    bh,0x66
  4176eb:	addr16 sahf 
  4176ed:	(bad)  [ecx+0x38]
  4176f0:	sbb    al,0x1d
  4176f2:	jb     0x417731
  4176f4:	sub    BYTE PTR [esi+0x38],dl
  4176f7:	or     edx,esi
  4176f9:	dec    ebx
  4176fa:	mov    ebx,0x6d705fa8
  4176ff:	bound  esi,QWORD PTR [eax-0x76]
  417702:	popf   
  417703:	ins    BYTE PTR es:[edi],dx
  417704:	xchg   ebx,eax
  417705:	xor    al,0xf6
  417707:	loope  0x41772b
  417709:	dec    esp
  41770a:	icebp  
  41770b:	in     eax,dx
  41770c:	into   
  41770d:	xor    BYTE PTR [ecx+0x28],ah
  417710:	and    al,0xd2
  417712:	rcl    BYTE PTR [esi-0x4115700f],1
  417718:	fcmovb st,st(4)
  41771a:	fwait
  41771b:	add    al,0x4d
  41771d:	pop    ebx
  41771e:	sbb    eax,0xfaaf406e
  417723:	les    esi,FWORD PTR [ebx-0x65a8eb3c]
  417729:	xor    al,0x3e
  41772b:	jle    0x417724
  41772d:	cmp    ch,cl
  41772f:	dec    eax
  417730:	int3   
  417731:	fs imul esp,ebp,0x3ef961e3
  417738:	fs inc edi
  41773a:	xchg   edi,eax
  41773b:	mov    esp,0x359ba5b6
  417740:	xchg   DWORD PTR [esi+0x77],ecx
  417743:	push   ebp
  417744:	add    bh,BYTE PTR [edi+0x29cda327]
  41774a:	sbb    esp,DWORD PTR [ebp-0x12184de8]
  417750:	push   edx
  417751:	rol    cl,cl
  417753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417754:	pop    ebp
  417755:	test   BYTE PTR [ebp+0x3e],al
  417758:	out    dx,al
  417759:	add    eax,0x5df1f176
  41775e:	packssdw mm3,QWORD PTR [eax+0x63052324]
  417765:	icebp  
  417766:	jno    0x4176f7
  417768:	call   0x8eedd7a2
  41776d:	jle    0x41778c
  41776f:	xchg   esp,eax
  417770:	popf   
  417771:	add    dl,cl
  417773:	data16 das 
  417775:	gs and bl,dl
  417778:	jmp    ebp
  41777a:	iret   
  41777b:	pushf  
  41777c:	imul   ebp,DWORD PTR [ebx+0x74],0xffffffb1
  417780:	lea    ebx,[esp+edi*8+0x227633c1]
  417787:	pop    edi
  417788:	test   BYTE PTR [ecx-0x36be0a59],ah
  41778e:	xor    BYTE PTR [ecx],dh
  417790:	jp     0x41774e
  417792:	inc    ebx
  417793:	lods   al,BYTE PTR ds:[esi]
  417794:	out    dx,al
  417795:	(bad)  
  417796:	loop   0x417762
  417798:	mov    eax,0x70c51e72
  41779d:	inc    edx
  41779e:	fstp   QWORD PTR [edi+0x1056b789]
  4177a4:	jno    0x4177e9
  4177a6:	shl    ebp,0xf
  4177a9:	stos   BYTE PTR es:[edi],al
  4177aa:	sahf   
  4177ab:	jo     0x41777c
  4177ad:	cmp    eax,0x32e183b6
  4177b2:	and    al,0xdf
  4177b4:	mov    WORD PTR [ecx+0x23],es
  4177b7:	mov    ah,0xb
  4177b9:	xchg   dl,cl
  4177bb:	xor    cl,BYTE PTR [edx+0x2233c88]
  4177c1:	adc    DWORD PTR [esi],eax
  4177c3:	sar    BYTE PTR ds:0xd6196553,1
  4177c9:	sbb    BYTE PTR [ecx+0x29a83a8],dh
  4177cf:	lods   al,BYTE PTR ds:[esi]
  4177d0:	fsubrp st(7),st
  4177d2:	jno    0x4177ac
  4177d4:	jno    0x41784a
  4177d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177d7:	mov    bh,0x34
  4177d9:	mov    ds:0x277c43fa,al
  4177de:	push   esi
  4177df:	fldenv [eax]
  4177e1:	es call 0x5cc03ac
  4177e7:	and    esp,DWORD PTR [ecx*8+0x33e77f38]
  4177ee:	stos   DWORD PTR es:[edi],eax
  4177ef:	shr    BYTE PTR [ecx],0xab
  4177f2:	mov    ebp,0xbb96bf63
  4177f7:	outs   dx,BYTE PTR fs:[esi]
  4177f9:	xchg   esi,eax
  4177fa:	test   al,0xdd
  4177fc:	ret    
  4177fd:	sub    dh,bh
  4177ff:	out    0xbe,al
  417801:	mov    BYTE PTR [esi-0x7976475a],bh
  417807:	sbb    eax,0xd8ff1582
  41780c:	add    DWORD PTR [ebx+0x5f],ebx
  41780f:	es iret 
  417811:	data16 and bl,ch
  417814:	dec    ebp
  417815:	mov    ah,0x74
  417817:	test   BYTE PTR [edi],al
  417819:	je     0x4177cf
  41781b:	and    eax,0xfd9c4a12
  417820:	pop    ds
  417821:	int    0x71
  417823:	push   0xffffffd4
  417825:	or     eax,0x57db2cf5
  41782a:	inc    esi
  41782b:	pop    ss
  41782c:	jmp    0xfa485cb2
  417831:	jp     0x41787b
  417833:	add    DWORD PTR [edx-0x61d235dc],ecx
  417839:	adc    bl,BYTE PTR [edi+0x22]
  41783c:	dec    edx
  41783d:	ficom  WORD PTR [esi-0x39]
  417840:	mov    bh,0x14
  417842:	ret    0x6c80
  417845:	rol    BYTE PTR [ecx-0x6d],1
  417848:	inc    esp
  417849:	and    eax,0x665e65a4
  41784e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41784f:	retf   0xaffb
  417852:	mov    DWORD PTR [esi],eax
  417854:	sar    DWORD PTR [esi+0x20],cl
  417857:	out    dx,al
  417858:	iret   
  417859:	mov    ebx,0xb49f2501
  41785e:	test   eax,0x4c4eb3b6
  417863:	pop    ebx
  417864:	add    DWORD PTR [ecx+0x2b],eax
  417867:	lea    esi,[eax]
  417869:	std    
  41786a:	sbb    bh,BYTE PTR [ecx-0x20]
  41786d:	xchg   ebx,eax
  41786e:	sbb    eax,0xe674c50e
  417873:	mov    al,0xa
  417875:	push   0x36359237
  41787a:	pop    esi
  41787b:	cli    
  41787c:	cli    
  41787d:	ins    DWORD PTR es:[edi],dx
  41787e:	push   edi
  41787f:	int    0xd0
  417881:	inc    eax
  417882:	mov    ch,0x89
  417884:	and    eax,0x8025f4fe
  417889:	hlt    
  41788a:	nop
  41788b:	xor    BYTE PTR [edi],al
  41788d:	out    0x8a,eax
  41788f:	sbb    al,0x33
  417891:	pop    ebp
  417892:	shl    DWORD PTR [edx],cl
  417894:	sysenter 
  417896:	inc    ebp
  417897:	mov    al,ds:0x8b9a4593
  41789c:	data16 mov al,ds:0xe4d99d65
  4178a2:	jp     0x417824
  4178a4:	xchg   edi,eax
  4178a5:	jecxz  0x41791f
  4178a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a8:	dec    ebx
  4178a9:	xchg   esi,eax
  4178aa:	mov    eax,ds:0xbcfbb68c
  4178af:	ficomp WORD PTR [esi]
  4178b1:	jmp    0x6c3aa38e
  4178b6:	jns    0x41785f
  4178b8:	mov    cl,0x4f
  4178ba:	pop    ebp
  4178bb:	sub    DWORD PTR [ecx-0x1a],ebx
  4178be:	or     BYTE PTR [esi*1+0x77a10c86],bl
  4178c5:	push   0x8c2495d6
  4178ca:	lock pop eax
  4178cc:	pop    eax
  4178cd:	jno    0x4178f4
  4178cf:	ins    DWORD PTR es:[edi],dx
  4178d0:	add    DWORD PTR ds:0x2b63940b,0x5a
  4178d7:	mov    ah,0x5f
  4178d9:	cld    
  4178da:	push   0xef27ac0e
  4178df:	xchg   edx,eax
  4178e0:	mov    al,0xb1
  4178e2:	push   ecx
  4178e3:	sar    DWORD PTR [ebx+eiz*2],cl
  4178e6:	int    0x50
  4178e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e9:	mov    ds:0x12ad7ca6,al
  4178ee:	dec    ebx
  4178ef:	jmp    0x1d61903
  4178f4:	js     0x417958
  4178f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f7:	nop
  4178f8:	push   edi
  4178f9:	ds ins DWORD PTR es:[edi],dx
  4178fb:	inc    ecx
  4178fc:	jmp    0x4178c8
  4178fe:	scas   eax,DWORD PTR es:[edi]
  4178ff:	shl    DWORD PTR [ecx],1
  417901:	mov    ecx,0xdedb0807
  417906:	in     eax,dx
  417907:	dec    edx
  417908:	out    0x68,eax
  41790a:	or     DWORD PTR [ebx+edx*2+0x12543fc4],ecx
  417911:	icebp  
  417912:	jmp    0xb26c7ecd
  417917:	mov    edi,DWORD PTR [edx+ecx*8+0x13671de5]
  41791e:	adc    edi,esp
  417920:	cmp    al,0xf6
  417922:	(bad)  
  417923:	scas   al,BYTE PTR es:[edi]
  417924:	jl     0x4178f4
  417926:	push   es
  417927:	and    BYTE PTR [ecx+0x2782ede],bh
  41792d:	imul   esp,DWORD PTR ds:0xbeb3fd94,0x388ea525
  417937:	icebp  
  417938:	sub    BYTE PTR [esi+0x59],bl
  41793b:	dec    eax
  41793c:	add    al,0x4e
  41793e:	pop    ds
  41793f:	aam    0xac
  417941:	ss mov ch,0x8f
  417944:	push   esi
  417945:	jbe    0x41795f
  417947:	and    ah,BYTE PTR [ebx+0x43fbaabd]
  41794d:	mov    al,ds:0x6c8871e6
  417952:	pop    edi
  417953:	pop    ebp
  417954:	out    dx,eax
  417955:	push   edi
  417956:	aam    0x92
  417958:	out    dx,eax
  417959:	mov    esp,0x10e82977
  41795e:	add    eax,0x473b7c9f
  417963:	xchg   esp,eax
  417964:	mov    bh,0xa0
  417966:	aaa    
  417967:	push   edx
  417968:	pop    esp
  417969:	popa   
  41796a:	(bad)  
  41796b:	rcl    DWORD PTR [eax+0x54],1
  41796e:	mov    ecx,0xe506eb84
  417973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417974:	and    BYTE PTR [esi+0x9f36eb4],bl
  41797a:	std    
  41797b:	adc    ch,ah
  41797d:	js     0x417928
  41797f:	push   edi
  417980:	cmp    BYTE PTR [ebp+0xc7ce7ac],bl
  417986:	fdiv   QWORD PTR [edi]
  417988:	pusha  
  417989:	jp     0x4179a7
  41798b:	neg    DWORD PTR [esi-0x15a11c78]
  417991:	mov    ebx,edi
  417993:	pop    ds
  417994:	add    eax,0x4cd6a260
  417999:	mov    dl,0xce
  41799b:	or     BYTE PTR [eax+0x68407dfd],al
  4179a1:	jecxz  0x4179cf
  4179a3:	cmp    DWORD PTR [ebx+0xe],eax
  4179a6:	mov    al,ds:0xbbc4d78b
  4179ab:	pop    esi
  4179ac:	aaa    
  4179ad:	xchg   DWORD PTR [edi+0x263b6691],ebp
  4179b3:	inc    edi
  4179b4:	jns    0x417a08
  4179b6:	fstp   TBYTE PTR [eax]
  4179b8:	jg     0x41796b
  4179ba:	push   edi
  4179bb:	dec    esp
  4179bc:	xor    eax,DWORD PTR [edi+eax*8-0x2e8985c8]
  4179c3:	sahf   
  4179c4:	in     al,dx
  4179c5:	add    al,0xe3
  4179c7:	mov    eax,0xacf9d8ca
  4179cc:	fcom   DWORD PTR [ebx-0x67]
  4179cf:	cld    
  4179d0:	test   DWORD PTR [edx],ebx
  4179d2:	jecxz  0x4179a0
  4179d4:	fistp  DWORD PTR [edi]
  4179d6:	sbb    BYTE PTR ds:0x20fe2790,al
  4179dc:	pop    ss
  4179dd:	cmp    ebp,ebp
  4179df:	adc    eax,0xf84f0386
  4179e4:	jb     0x41796f
  4179e6:	xchg   edi,eax
  4179e7:	or     ebp,esp
  4179e9:	xchg   edx,eax
  4179ea:	iret   
  4179eb:	adc    al,0x55
  4179ed:	dec    esp
  4179ee:	push   0x54
  4179f0:	dec    eax
  4179f1:	lds    esi,FWORD PTR [eax]
  4179f3:	(bad)  
  4179f4:	loope  0x4179f8
  4179f6:	xchg   ebx,eax
  4179f7:	cli    
  4179f8:	pcmpeqb mm2,QWORD PTR [eax-0x11]
  4179fc:	jne    0x4179f6
  4179fe:	ins    BYTE PTR es:[edi],dx
  4179ff:	inc    ebp
  417a00:	push   esi
  417a01:	push   edi
  417a02:	ss mov ch,0x52
  417a05:	jae    0x417a35
  417a07:	mov    eax,0x7bf98a9d
  417a0c:	sub    ebx,DWORD PTR [esi+0x17c4ae29]
  417a12:	mov    BYTE PTR [eax-0x31],dl
  417a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a16:	sub    DWORD PTR [ebp+0x3d],ebp
  417a19:	mov    cl,0xa5
  417a1b:	add    DWORD PTR [ebx+0x639f699e],ecx
  417a21:	fwait
  417a22:	aad    0x93
  417a24:	pop    ebp
  417a25:	jne    0x417a11
  417a27:	inc    edx
  417a28:	mov    edx,0x1cbf79c6
  417a2d:	jge    0x4179cd
  417a2f:	xor    eax,0xcb50ecb2
  417a34:	jo     0x417a99
  417a36:	add    al,0x5e
  417a38:	dec    eax
  417a39:	xor    DWORD PTR [eax],ebx
  417a3b:	cmp    al,0xa0
  417a3d:	pushf  
  417a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a3f:	popa   
  417a40:	add    eax,0xa93752cc
  417a45:	jle    0x417a18
  417a47:	shl    esp,0xd1
  417a4a:	imul   ebx,DWORD PTR [esi+0x343c2bda],0xffffffa3
  417a51:	cmp    ecx,eax
  417a53:	lahf   
  417a54:	enter  0x5fac,0x21
  417a58:	push   esi
  417a59:	sbb    dl,ah
  417a5b:	dec    ecx
  417a5c:	mov    ?,WORD PTR [edi-0x36]
  417a5f:	add    eax,0x8ab076c6
  417a64:	jge    0x417a34
  417a66:	mov    edi,0x95da3bf8
  417a6b:	ret    0xb2d1
  417a6e:	add    al,0x2e
  417a70:	(bad)  
  417a71:	xor    eax,0xc6e6720e
  417a76:	mov    al,0xd3
  417a78:	lods   al,BYTE PTR ds:[esi]
  417a79:	push   cs
  417a7a:	js     0x417a38
  417a7c:	pusha  
  417a7d:	cmp    bh,dh
  417a7f:	loope  0x417a33
  417a81:	add    cl,0x87
  417a84:	lahf   
  417a85:	pop    edi
  417a87:	jecxz  0x417aee
  417a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a8a:	push   ss
  417a8b:	pop    edx
  417a8c:	(bad)  
  417a8d:	sti    
  417a8e:	mov    ds:0x35a6d773,al
  417a93:	xor    BYTE PTR [edi+0x72],bl
  417a96:	ss icebp 
  417a98:	pusha  
  417a99:	inc    edi
  417a9a:	xchg   ebx,eax
  417a9b:	popf   
  417a9c:	xchg   edx,eax
  417a9d:	ret    0x61b4
  417aa0:	mov    ds,WORD PTR [edi-0x76]
  417aa3:	or     eax,0xf3c28ea8
  417aa8:	push   edx
  417aa9:	sti    
  417aaa:	dec    edi
  417aab:	dec    esi
  417aac:	cwde   
  417aad:	jge    0x417b0c
  417aaf:	push   ebx
  417ab0:	cdq    
  417ab1:	ja     0x417a34
  417ab3:	out    dx,eax
  417ab4:	inc    ebp
  417ab5:	jno    0x417a9c
  417ab7:	loop   0x417a6d
  417ab9:	fs xor eax,DWORD PTR cs:[esi+0x7b16f937]
  417ac1:	dec    edi
  417ac2:	call   0xdeee:0x4cb4a189
  417ac9:	test   BYTE PTR [edx],dh
  417acb:	and    BYTE PTR [esi],dl
  417acd:	sub    dl,BYTE PTR [esi-0x1e]
  417ad0:	js     0x417ad3
  417ad2:	push   esi
  417ad3:	retf   
  417ad4:	xchg   edi,eax
  417ad5:	outs   dx,BYTE PTR ds:[esi]
  417ad6:	xchg   DWORD PTR [eax-0x28],edi
  417ad9:	test   esp,eax
  417adb:	retf   0xb55f
  417ade:	jb     0x417b1b
  417ae0:	jle    0x417a63
  417ae2:	jl     0x417b4c
  417ae4:	mov    bh,0xe1
  417ae6:	cmc    
  417ae7:	push   ebp
  417ae8:	mov    dl,0x62
  417aea:	sbb    edx,ecx
  417aec:	jo     0x417b0d
  417aee:	in     eax,dx
  417aef:	fist   WORD PTR [edi+eax*8-0xf]
  417af3:	jecxz  0x417b01
  417af5:	sahf   
  417af6:	(bad)  
  417af7:	mov    esp,0xb813afe1
  417afc:	cmp    DWORD PTR [edi-0x41f76359],esp
  417b02:	inc    esi
  417b03:	push   edi
  417b04:	inc    esi
  417b05:	jnp    0x417b39
  417b07:	(bad)  [esi+ecx*2-0x53]
  417b0b:	xchg   ebp,eax
  417b0c:	bound  ecx,QWORD PTR [esi*2+0x1fe3d747]
  417b13:	div    edi
  417b15:	lods   al,BYTE PTR ds:[esi]
  417b16:	sti    
  417b17:	push   ebx
  417b18:	mov    ah,0x45
  417b1a:	pop    ebp
  417b1b:	mov    edx,0x1c501d40
  417b20:	popf   
  417b21:	call   0x56d7aef5
  417b26:	out    dx,eax
  417b27:	xor    eax,0x25d3f8be
  417b2c:	xchg   DWORD PTR [edi+eax*2-0x50a720af],eax
  417b33:	arpl   WORD PTR [eax+0x58],di
  417b36:	or     BYTE PTR [esi-0x36],0x19
  417b3a:	psubd  mm0,QWORD PTR [edi+0x31]
  417b3e:	hlt    
  417b3f:	cwde   
  417b40:	dec    edx
  417b41:	xchg   esi,eax
  417b42:	addr16 es dec edx
  417b45:	hlt    
  417b46:	ja     0x417b52
  417b48:	dec    ebp
  417b49:	in     al,dx
  417b4a:	push   esp
  417b4b:	jecxz  0x417bbc
  417b4d:	adc    ebx,DWORD PTR [esi-0x1f]
  417b50:	int3   
  417b51:	in     eax,0x3f
  417b53:	std    
  417b54:	mov    ch,0x17
  417b56:	mov    cl,0x5f
  417b58:	pop    edx
  417b59:	xchg   esp,eax
  417b5a:	std    
  417b5b:	push   ebx
  417b5c:	jg     0x417b74
  417b5e:	cwde   
  417b5f:	inc    edx
  417b60:	sbb    ch,BYTE PTR [eax+eax*2]
  417b63:	pushf  
  417b64:	add    ch,dh
  417b66:	fmul   QWORD PTR [eax+0x12]
  417b69:	xlat   BYTE PTR ds:[ebx]
  417b6a:	fsub   QWORD PTR [esi-0x3d]
  417b6d:	or     DWORD PTR [ebx],esi
  417b6f:	stc    
  417b70:	jp     0x417be6
  417b72:	(bad)  
  417b73:	fcmovbe st,st(5)
  417b75:	adc    DWORD PTR [esi-0x1c],esi
  417b78:	(bad)  [eax+esi*1+0x785977f]
  417b7f:	outs   dx,BYTE PTR ds:[esi]
  417b80:	sub    al,ah
  417b82:	jge    0x417be2
  417b84:	out    dx,eax
  417b85:	or     al,0xbf
  417b87:	repz cs das 
  417b8a:	adc    al,0xcb
  417b8c:	ror    DWORD PTR [edx-0xe],cl
  417b8f:	dec    ebx
  417b90:	adc    cl,0x7
  417b93:	jge    0x417bd9
  417b95:	inc    edx
  417b96:	fldenv [edx+0x2b]
  417b99:	fdivr  DWORD PTR [ecx-0x6e]
  417b9c:	dec    edi
  417b9d:	xchg   esi,eax
  417b9e:	lock cmp eax,0xd3aacc5
  417ba4:	mov    al,0xa1
  417ba6:	inc    eax
  417ba7:	inc    esi
  417ba8:	jns    0x417b99
  417baa:	(bad)  
  417bac:	(bad)  
  417bad:	(bad)  
  417baf:	or     eax,DWORD PTR [ebp+0x47]
  417bb2:	std    
  417bb3:	leave  
  417bb4:	pop    esp
  417bb5:	add    BYTE PTR ds:0x6172e16,dl
  417bbb:	retf   
  417bbc:	jl     0x417b45
  417bbe:	lock xchg ebx,eax
  417bc0:	jl     0x417ba6
  417bc2:	fcmovbe st,st(6)
  417bc4:	and    BYTE PTR [ecx-0x4c],bl
  417bc7:	outs   dx,BYTE PTR ds:[esi]
  417bc8:	sar    BYTE PTR [ebp-0x78],0x33
  417bcc:	add    cl,BYTE PTR ds:0x4684b527
  417bd2:	adc    eax,0x2fa7a2d3
  417bd7:	push   0xffffffe3
  417bd9:	test   al,0xd7
  417bdb:	mov    esi,0x5d595e18
  417be0:	xchg   esp,eax
  417be1:	or     eax,0x77dd4216
  417be6:	mov    esp,0x24525bc4
  417beb:	and    cl,bh
  417bed:	mov    eax,ds:0xbc6dc041
  417bf2:	mov    ebx,0x65c7d921
  417bf7:	pushf  
  417bf8:	xchg   ebp,eax
  417bf9:	out    0xcf,eax
  417bfb:	sub    BYTE PTR [edi],0x16
  417bfe:	dec    esi
  417bff:	pop    ebp
  417c00:	cmp    DWORD PTR [esi],edx
  417c02:	dec    ebp
  417c03:	pop    eax
  417c04:	pop    ecx
  417c05:	dec    eax
  417c06:	addr16 jne 0x417c27
  417c09:	jecxz  0x417bea
  417c0b:	lods   eax,DWORD PTR ds:[esi]
  417c0c:	(bad)  
  417c0d:	stc    
  417c0e:	ins    DWORD PTR es:[edi],dx
  417c0f:	mov    esp,0xe53faae8
  417c14:	test   BYTE PTR ds:0x554d67f7,0x15
  417c1b:	dec    ebp
  417c1c:	mov    ch,0xc0
  417c1e:	or     edx,DWORD PTR [eax+0x77ebe040]
  417c24:	xchg   ebx,eax
  417c25:	addr16 das 
  417c27:	scas   al,BYTE PTR es:[edi]
  417c28:	aad    0x83
  417c2a:	xchg   ebp,esp
  417c2c:	adc    eax,edx
  417c2e:	inc    DWORD PTR [edx-0xc]
  417c31:	mov    db7,eax
  417c34:	fwait
  417c35:	adc    edi,DWORD PTR [ebx]
  417c37:	add    esp,DWORD PTR [ecx]
  417c39:	mov    eax,ds:0x77d1eef1
  417c3e:	mov    bh,0xcf
  417c40:	sar    BYTE PTR [edx+ecx*1+0x5a7c1446],0x8a
  417c48:	mov    gs,WORD PTR [ecx]
  417c4a:	into   
  417c4b:	lds    eax,FWORD PTR [eax]
  417c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c4e:	shl    DWORD PTR [esi+esi*2+0x3e],cl
  417c52:	sar    DWORD PTR [ebx+0x55],1
  417c55:	and    dh,dh
  417c57:	mov    ebx,0xa9f3f2bd
  417c5c:	mov    es,WORD PTR [ebx+0x60b06dc2]
  417c62:	pop    ecx
  417c63:	cmc    
  417c64:	add    bl,BYTE PTR [ebp+0x70bacf51]
  417c6a:	lods   eax,DWORD PTR ds:[esi]
  417c6b:	popa   
  417c6c:	popf   
  417c6d:	icebp  
  417c6e:	test   DWORD PTR [ebx+eax*8-0xe],ecx
  417c72:	xor    ebp,DWORD PTR [ebx-0x75]
  417c75:	add    eax,0x777b98d4
  417c7a:	in     eax,0x32
  417c7c:	test   BYTE PTR [ebx-0x3e],dh
  417c7f:	jmp    0x417c02
  417c81:	call   0x296bac91
  417c86:	dec    esp
  417c87:	inc    eax
  417c88:	enter  0x253d,0x11
  417c8c:	daa    
  417c8d:	sub    DWORD PTR [ebp-0x6e],ecx
  417c90:	xor    eax,0x6ea69504
  417c95:	test   BYTE PTR [ecx+0x13],0xfa
  417c99:	aaa    
  417c9a:	lods   al,BYTE PTR ds:[esi]
  417c9b:	inc    eax
  417c9c:	loopne 0x417cd9
  417c9e:	aad    0xa8
  417ca0:	ret    0xf76b
  417ca3:	enter  0x1afd,0x16
  417ca7:	adc    edx,DWORD PTR [edi-0x5a87221e]
  417cad:	mov    edi,0x9f2436dd
  417cb2:	mov    ds:0x273012dc,al
  417cb7:	push   ds
  417cb8:	lods   al,BYTE PTR ds:[esi]
  417cb9:	in     eax,dx
  417cba:	repnz popf 
  417cbc:	xrelease lock adc DWORD PTR [edi-0x24428d08],eax
  417cc4:	mov    ebx,0x2999cbfe
  417cc9:	rcr    DWORD PTR ds:0xcdcf8825,1
  417ccf:	(bad)  
  417cd0:	lods   al,BYTE PTR ds:[esi]
  417cd1:	aaa    
  417cd2:	fcomp  QWORD PTR [ebp-0x1e45257d]
  417cd8:	es mov ebp,0x2d85ffaa
  417cde:	jno    0x417d2d
  417ce0:	jo     0x417cf7
  417ce2:	sbb    ch,BYTE PTR [ebp-0x52cfd903]
  417ce8:	xchg   edx,eax
  417ce9:	cli    
  417cea:	nop
  417ceb:	xor    al,0x8a
  417ced:	jo     0x417c8f
  417cef:	pusha  
  417cf0:	push   ss
  417cf1:	xor    eax,DWORD PTR [eax-0x56]
  417cf4:	test   ah,bh
  417cf6:	jmp    0x6832:0x4f1dd12a
  417cfd:	pushf  
  417cfe:	mov    ah,0xab
  417d00:	call   0xde81:0x4cd3e234
  417d07:	sub    al,0xb8
  417d09:	jmp    0x64e3:0x40d6ae2e
  417d10:	sbb    al,0x7e
  417d12:	cmp    BYTE PTR [edi-0x7c],ch
  417d15:	out    0x28,al
  417d17:	xchg   esp,eax
  417d18:	jae    0x417d8d
  417d1a:	xor    dh,BYTE PTR [edx]
  417d1c:	pop    esi
  417d1d:	xor    al,BYTE PTR es:[edx]
  417d20:	rcpps  xmm7,XMMWORD PTR [esi+ecx*1]
  417d24:	lea    esp,[esp+ecx*4-0x37a84078]
  417d2b:	das    
  417d2c:	jmp    0x13c2:0x75514097
  417d33:	es std 
  417d35:	push   ds
  417d36:	mov    ecx,0x4af1663d
  417d3b:	jns    0x417d9a
  417d3d:	dec    edi
  417d3e:	repz mov cl,0x71
  417d41:	rol    BYTE PTR [ebx-0x4c9b1aa3],cl
  417d47:	xchg   edx,eax
  417d48:	es int3 
  417d4a:	xchg   ebp,eax
  417d4b:	test   eax,0x4a3ce619
  417d50:	jmp    0x417d94
  417d52:	mov    cl,0x20
  417d54:	test   DWORD PTR [ecx+edx*8-0x54],esp
  417d58:	shl    BYTE PTR [edi],1
  417d5a:	iret   
  417d5b:	aam    0x2d
  417d5d:	es stc 
  417d5f:	shl    BYTE PTR [eax+0x2e],1
  417d62:	mov    esi,es
  417d64:	jmp    0x6f2f:0x69f65ae2
  417d6b:	js     0x417cee
  417d6d:	mov    al,0xcb
  417d6f:	mov    ecx,0x8dc4adbf
  417d75:	fidiv  WORD PTR [ebp+esi*1+0x2719b1b9]
  417d7c:	fwait
  417d7d:	arpl   WORD PTR [edi],sp
  417d7f:	mov    dh,0x21
  417d81:	sub    DWORD PTR [eax+0x45],eax
  417d84:	les    ecx,FWORD PTR [edi+ebp*2-0x41b422eb]
  417d8b:	add    DWORD PTR [ecx+0x45],ebp
  417d8e:	mov    esp,0xff95170
  417d93:	xor    al,0x3a
  417d95:	test   esi,edx
  417d97:	add    edi,DWORD PTR [eax-0x13]
  417d9a:	mov    esp,0xb407111e
  417d9f:	ins    DWORD PTR es:[edi],dx
  417da0:	fs pusha 
  417da2:	mov    DWORD PTR [edi-0x28],ecx
  417da5:	adc    dl,BYTE PTR fs:[edi-0x19]
  417da9:	ret    0x49e5
  417dac:	call   0x1273:0xb2331ebe
  417db3:	xchg   ebx,eax
  417db4:	sub    ah,BYTE PTR ds:[eax+0x7a2d3a87]
  417dbb:	lahf   
  417dbc:	jle    0x417d73
  417dbe:	sub    eax,0xa31283bd
  417dc3:	scas   eax,DWORD PTR es:[edi]
  417dc4:	add    dh,BYTE PTR [ebx+eax*8+0x6]
  417dc8:	sub    bl,BYTE PTR [edx-0x2b]
  417dcb:	pop    ecx
  417dcc:	xchg   ebx,eax
  417dcd:	pop    ss
  417dce:	outs   dx,DWORD PTR ds:[esi]
  417dcf:	mov    esi,0xeb9dd500
  417dd4:	clc    
  417dd5:	not    BYTE PTR [ebx]
  417dd7:	inc    edi
  417dd8:	iret   
  417dd9:	mov    dh,0x8b
  417ddb:	test   al,0xb9
  417ddd:	pop    ss
  417dde:	fisttp DWORD PTR [ebx]
  417de0:	scas   eax,DWORD PTR es:[edi]
  417de1:	sti    
  417de2:	inc    esi
  417de3:	push   ss
  417de4:	inc    ebx
  417de5:	aad    0x1c
  417de7:	dec    esp
  417de8:	xchg   edx,eax
  417de9:	fild   QWORD PTR [esi+ebx*8-0x3c72bd73]
  417df0:	lock dec edx
  417df2:	mov    ?,WORD PTR es:[bp+si-0x4c]
  417df7:	pusha  
  417df8:	pop    ecx
  417df9:	mov    edx,0x2610d35e
  417dfe:	cmc    
  417dff:	lahf   
  417e00:	imul   eax,DWORD PTR [ebp+0x76744df7],0xffffffc4
  417e07:	syscall 
  417e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e0a:	pop    ds
  417e0b:	push   esi
  417e0c:	shl    DWORD PTR [esi-0x39c6501c],1
  417e12:	sub    DWORD PTR [edi-0x51],0x2e
  417e16:	retf   0x4fb2
  417e19:	push   esi
  417e1a:	or     BYTE PTR ds:0x41fdc4e0,ah
  417e20:	sbb    dl,BYTE PTR ds:[edi-0x458137ed]
  417e27:	(bad)  
  417e28:	jnp    0x417df0
  417e2a:	dec    ecx
  417e2b:	pop    eax
  417e2c:	loope  0x417e10
  417e2e:	sahf   
  417e2f:	mov    WORD PTR [esi-0x41],es
  417e32:	les    esp,FWORD PTR [ecx]
  417e34:	add    DWORD PTR [eax],ebp
  417e36:	or     eax,0xd927be54
  417e3b:	fxch   st(7)
  417e3d:	mov    dl,0x91
  417e3f:	cmp    DWORD PTR [ecx],ecx
  417e41:	mov    bh,0xb1
  417e43:	sbb    al,0x4b
  417e45:	ss aam 0xd
  417e48:	jmp    DWORD PTR [edx]
  417e4a:	jmp    0xad69931e
  417e4f:	call   0xc9d1:0x838fa6fd
  417e56:	pop    esi
  417e57:	in     eax,0xac
  417e59:	mov    ah,0x5d
  417e5b:	neg    DWORD PTR [edx+esi*4+0x2c]
  417e5f:	push   cs
  417e60:	mov    ah,0xe3
  417e62:	sbb    al,0x4e
  417e64:	lods   eax,DWORD PTR ds:[esi]
  417e65:	jnp    0x417e86
  417e67:	mov    ebx,0x5138e8a8
  417e6c:	xor    dl,BYTE PTR [esi]
  417e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e6f:	xor    ah,cl
  417e71:	lods   al,BYTE PTR ds:[esi]
  417e72:	lea    ebp,ds:0x9bcba107
  417e78:	ret    
  417e79:	cmp    dh,BYTE PTR [edx-0x1d584862]
  417e7f:	arpl   di,ax
  417e81:	dec    ecx
  417e82:	lods   eax,DWORD PTR ds:[esi]
  417e83:	ins    BYTE PTR es:[edi],dx
  417e84:	sbb    cl,BYTE PTR [ebp-0x49]
  417e87:	mov    al,ds:0x91d9b52e
  417e8c:	cmp    eax,0xa4235a47
  417e91:	jbe    0x417ea6
  417e93:	scas   eax,DWORD PTR es:[edi]
  417e94:	test   bh,ah
  417e96:	add    BYTE PTR [edx],al
  417e98:	jbe    0x417e8e
  417e9a:	adc    dh,BYTE PTR [esi]
  417e9c:	in     al,dx
  417e9d:	or     BYTE PTR [edi-0x53c461f],al
  417ea3:	adc    al,0x1f
  417ea5:	mov    ebx,0x37eefd30
  417eaa:	inc    ebx
  417eab:	stos   BYTE PTR es:[edi],al
  417eac:	and    DWORD PTR [edi+esi*4-0x645454d3],esp
  417eb3:	mov    bh,0xf6
  417eb5:	lea    ecx,[esi+ebp*1+0x379596a1]
  417ebc:	push   es
  417ebd:	out    0x94,eax
  417ebf:	push   ebx
  417ec0:	pop    DWORD PTR [ecx+0x59]
  417ec3:	add    al,cl
  417ec5:	add    bh,cl
  417ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ec8:	mov    ds:0xffc81da9,eax
  417ecd:	or     eax,0x1f9ec11b
  417ed2:	in     al,dx
  417ed3:	add    DWORD PTR [ebp+0x2a],ecx
  417ed6:	xchg   esi,eax
  417ed7:	(bad)  
  417ed8:	(bad)  
  417ed9:	sub    DWORD PTR [ecx+0x1985ac41],0x45f68904
  417ee3:	push   esi
  417ee4:	or     esi,DWORD PTR [ecx+edx*8]
  417ee7:	inc    eax
  417ee8:	jl     0x417f2d
  417eea:	jecxz  0x417e9b
  417eec:	inc    esp
  417eed:	fsubr  QWORD PTR [esi-0x62]
  417ef0:	cwde   
  417ef1:	push   ecx
  417ef2:	lock xchg ebx,eax
  417ef4:	(bad)  
  417ef5:	pop    ebx
  417ef6:	jmp    0x8f6:0xfb720d20
  417efd:	jo     0x417f30
  417eff:	pushf  
  417f00:	xchg   edi,eax
  417f01:	out    0x2f,eax
  417f03:	in     eax,dx
  417f04:	xchg   edi,eax
  417f05:	iret   
  417f06:	fs mov edi,0x9fbf67fd
  417f0c:	xchg   ebp,eax
  417f0d:	in     eax,0x85
  417f0f:	adc    BYTE PTR [edx],al
  417f11:	inc    ecx
  417f12:	mov    ch,0x7b
  417f14:	shl    ch,cl
  417f16:	stos   DWORD PTR es:[edi],eax
  417f17:	mov    BYTE PTR [edx+0x53],al
  417f1a:	enter  0x1d60,0xc
  417f1e:	fidiv  WORD PTR [eax]
  417f20:	popa   
  417f21:	xchg   ebx,eax
  417f22:	icebp  
  417f23:	or     edi,0xffffffae
  417f26:	lods   eax,DWORD PTR ds:[esi]
  417f27:	repz neg BYTE PTR [esi+0xe4a6e6c]
  417f2e:	imul   ebp,DWORD PTR [ebx+0x1eac64d8],0x31
  417f35:	push   cs
  417f36:	push   ebp
  417f37:	push   0x8
  417f39:	hlt    
  417f3a:	push   ss
  417f3b:	bound  ebp,QWORD PTR [ecx+0x7d5a0a48]
  417f41:	pop    edx
  417f42:	adc    al,0xa9
  417f44:	js     0x417fa9
  417f46:	(bad)  [ebp-0x75]
  417f49:	lds    edi,FWORD PTR [ebx]
  417f4b:	xchg   esi,eax
  417f4c:	fcomp  DWORD PTR [ebp+ebx*8+0x54]
  417f50:	pop    es
  417f51:	pop    ebp
  417f52:	rcr    BYTE PTR [edx-0x3e],cl
  417f55:	and    cl,BYTE PTR ss:[ecx]
  417f58:	pop    esp
  417f59:	pop    ebp
  417f5a:	aas    
  417f5b:	retf   0xafc7
  417f5e:	fs jmp 0x417fac
  417f61:	dec    esp
  417f62:	(bad)  
  417f63:	aas    
  417f64:	fsubr  st,st(0)
  417f66:	adc    al,0x9a
  417f68:	lock int 0x60
  417f6b:	ss out 0x69,al
  417f6e:	ja     0x417f87
  417f70:	inc    ebx
  417f71:	popf   
  417f72:	in     eax,0x67
  417f74:	mov    bh,0xc3
  417f76:	mov    ah,0x70
  417f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f79:	lock aam 0x93
  417f7c:	repnz sub ecx,DWORD PTR [esi-0x6a9b2ea1]
  417f83:	pop    esp
  417f84:	lds    esp,FWORD PTR [esi-0x279a0790]
  417f8a:	and    ebx,esp
  417f8c:	pop    ebx
  417f8d:	aam    0x88
  417f8f:	xor    al,dl
  417f91:	rcr    edi,1
  417f93:	mov    esp,0x76006574
  417f98:	aad    0x3a
  417f9a:	aad    0x28
  417f9c:	jg     0x418005
  417f9e:	add    al,0xfe
  417fa0:	or     eax,0x2b1d65ac
  417fa5:	int    0xa1
  417fa7:	or     eax,0x700d2e3b
  417fac:	cdq    
  417fad:	pop    esp
  417fae:	mov    ds:0xf202a3d1,eax
  417fb3:	and    bl,BYTE PTR [ebx-0x598968ea]
  417fb9:	aas    
  417fba:	xchg   ebx,eax
  417fbb:	mov    bh,0x2a
  417fbd:	sbb    BYTE PTR [edi+ebx*2],bh
  417fc0:	cmp    DWORD PTR [ecx-0x23],esp
  417fc3:	mov    ah,BYTE PTR [edi-0x7e]
  417fc6:	and    eax,0xe38ca1c5
  417fcb:	or     ah,BYTE PTR [ebp+0x56af6e1e]
  417fd1:	rcr    esp,1
  417fd3:	inc    ebp
  417fd4:	lock gs (bad) 
  417fd7:	cli    
  417fd8:	or     al,0xe0
  417fda:	or     DWORD PTR [ebp-0x6f],0xfffffff6
  417fde:	daa    
  417fdf:	adc    al,0x56
  417fe1:	jmp    0x63baa3b0
  417fe6:	add    dh,bh
  417fe8:	xchg   esp,eax
  417fe9:	test   DWORD PTR [bx],edx
  417fec:	xlat   BYTE PTR ds:[ebx]
  417fed:	adc    edx,DWORD PTR [ebp+0x1b2f888d]
  417ff3:	and    edx,edi
  417ff5:	or     ch,BYTE PTR [ebp-0x44]
  417ff8:	mov    dl,0x28
  417ffa:	inc    eax
  417ffb:	pop    eax
  417ffc:	dec    esp
  417ffd:	cmp    ch,BYTE PTR [edi+0x2257d18d]
  418003:	jo     0x417ff8
  418005:	sahf   
  418006:	push   es
  418007:	cdq    
  418008:	mov    WORD PTR [edx-0x49886fe7],gs
  41800e:	or     DWORD PTR [edx+0x16574a24],esp
  418014:	out    dx,al
  418015:	sub    DWORD PTR [ecx-0x2f],0x8afdfb87
  41801c:	cmp    DWORD PTR [edx+0x5e009794],esp
  418022:	ins    BYTE PTR es:[edi],dx
  418023:	push   esp
  418024:	fcmove st,st(7)
  418026:	xor    al,0xbf
  418028:	push   ss
  418029:	leave  
  41802a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41802b:	sbb    esp,ebx
  41802d:	jne    0x417fb0
  41802f:	mov    edx,0x2b311d8d
  418034:	jnp    0x418068
  418036:	inc    edi
  418037:	dec    ebx
  418038:	mov    al,ds:0x296a6ec5
  41803d:	adc    eax,0x977a8a71
  418042:	pop    ecx
  418043:	and    al,ah
  418045:	dec    edi
  418046:	(bad)  
  418047:	frstor [eax+eiz*4-0x60]
  41804b:	out    dx,eax
  41804c:	leave  
  41804d:	push   0xffffffa3
  41804f:	sbb    BYTE PTR [esi],bh
  418051:	push   edx
  418052:	xor    al,0x34
  418054:	mov    cl,0x78
  418056:	adc    DWORD PTR [edi],edi
  418058:	xor    al,BYTE PTR [edi+0x5b3f5e80]
  41805e:	jmp    DWORD PTR [eax+ebp*1]
  418061:	popf   
  418062:	(bad)  
  418063:	mov    bh,0x6f
  418065:	outs   dx,DWORD PTR ds:[esi]
  418066:	(bad)  [eax+ecx*2+0x47]
  41806a:	ds mov edx,0x683828ae
  418070:	push   ebx
  418071:	jmp    0x50d6:0x19037074
  418078:	xor    al,0xa8
  41807a:	jl     0x4180b8
  41807c:	push   edi
  41807d:	bound  esp,QWORD PTR [edi+0x62e7b638]
  418083:	pop    edi
  418084:	out    0xa9,al
  418086:	pop    ss
  418087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418088:	or     DWORD PTR [eax+ebx*8],ecx
  41808b:	xchg   edx,eax
  41808c:	test   DWORD PTR [ebx+0x69],esp
  41808f:	push   ss
  418090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418091:	out    0x8a,al
  418093:	xor    al,0x27
  418095:	and    al,0xfd
  418097:	xor    dh,BYTE PTR [ebp-0x31b16151]
  41809d:	aad    0x5e
  41809f:	add    al,0x9e
  4180a1:	push   ds
  4180a2:	cwde   
  4180a3:	out    dx,eax
  4180a4:	cmp    al,0x37
  4180a6:	out    dx,al
  4180a7:	dec    ebp
  4180a8:	xor    eax,esp
  4180aa:	test   eax,0x9385ce33
  4180af:	pop    ebp
  4180b0:	cld    
  4180b1:	jp     0x4180fc
  4180b3:	cmp    eax,0xb5850661
  4180b8:	test   al,0xf8
  4180ba:	mov    WORD PTR [edx],cs
  4180bc:	dec    esp
  4180bd:	push   cs
  4180be:	in     eax,0xfe
  4180c0:	cwde   
  4180c1:	lea    esi,[ebp+0x75]
  4180c4:	out    0x18,al
  4180c6:	cmp    ecx,0x3d
  4180c9:	cmp    ah,BYTE PTR [ebp+0x2057c6a9]
  4180cf:	mov    ds:0xf46675ac,eax
  4180d4:	ss push edx
  4180d6:	xchg   ebp,eax
  4180d7:	iret   
  4180d8:	push   ss
  4180d9:	cli    
  4180da:	cli    
  4180db:	test   BYTE PTR [esi],al
  4180dd:	push   ds
  4180de:	out    dx,eax
  4180df:	jo     0x41810c
  4180e1:	dec    BYTE PTR [ecx-0x5f73bc59]
  4180e7:	jnp    0x418118
  4180e9:	xchg   edi,eax
  4180ea:	test   DWORD PTR [ebx+0x5a],ebp
  4180ed:	jmp    0xe2f8cf2f
  4180f2:	lahf   
  4180f3:	js     0x418162
  4180f5:	jmp    0x5676:0xcbe8d947
  4180fc:	mov    ecx,0x1e90a6ad
  418101:	pop    ecx
  418102:	xor    ebp,DWORD PTR [esi+0x10]
  418105:	push   ebx
  418106:	int3   
  418107:	mov    dh,0x90
  418109:	loope  0x41813f
  41810b:	sbb    edx,eax
  41810d:	inc    eax
  41810e:	sbb    DWORD PTR [ebp-0x410a76ba],ecx
  418114:	adc    al,0x3b
  418116:	pop    esi
  418117:	ja     0x418103
  418119:	loop   0x4180d2
  41811b:	scas   al,BYTE PTR es:[edi]
  41811c:	lock cmp dl,BYTE PTR [eax]
  41811f:	hlt    
  418120:	icebp  
  418121:	mov    al,0xef
  418123:	jmp    0x7308:0x4d07c762
  41812a:	retf   0x380e
  41812d:	inc    esp
  41812e:	in     eax,dx
  41812f:	vsubpd xmm2,xmm3,XMMWORD PTR [edi-0x3a]
  418134:	mov    dl,0x8d
  418136:	pop    eax
  418137:	jnp    0x41812e
  418139:	loope  0x4180f3
  41813b:	push   ebx
  41813c:	imul   ebp,esp,0x75
  41813f:	adc    al,0x7e
  418141:	jge    0x418193
  418143:	ja     0x4180c6
  418145:	shr    DWORD PTR [ebx+eiz*1+0x3],1
  418149:	xor    ebx,DWORD PTR [esi+0x5bc16860]
  41814f:	das    
  418150:	cmp    eax,0xc1dc9f7a
  418155:	xor    ah,BYTE PTR [eax]
  418157:	or     eax,0x1c74206f
  41815c:	cwde   
  41815d:	sub    edi,DWORD PTR [esi+0x37]
  418160:	xor    DWORD PTR [edi+0x531bafda],edx
  418166:	gs ss push es
  418169:	xchg   ebx,eax
  41816a:	pop    esp
  41816b:	push   edi
  41816c:	mov    dh,0xe
  41816e:	xchg   esi,eax
  41816f:	cmp    al,0x8f
  418171:	push   es
  418172:	out    0x3e,eax
  418174:	xor    al,0x61
  418176:	rcl    DWORD PTR [edx-0x2349c667],0x3d
  41817d:	push   edx
  41817e:	shl    DWORD PTR [ebp+0x79356594],cl
  418184:	and    al,0x2f
  418186:	and    DWORD PTR [ecx-0x1a],edx
  418189:	and    ah,cl
  41818b:	or     dl,BYTE PTR [edi+ecx*4+0x2236b5e9]
  418192:	adc    al,0xb4
  418194:	and    ebx,edi
  418196:	call   0x4cd297ca
  41819b:	jmp    0x19a5b2ed
  4181a0:	cwde   
  4181a1:	add    DWORD PTR [eax+0x5df207d0],0x3e2085ee
  4181ab:	popf   
  4181ac:	fs mov esp,0x179c9c3c
  4181b2:	mov    eax,0x42448b98
  4181b7:	clc    
  4181b8:	mov    ch,0x45
  4181ba:	test   BYTE PTR [ebx],bl
  4181bc:	daa    
  4181bd:	pop    ebx
  4181be:	mov    DWORD PTR [ecx+0x4a],esi
  4181c1:	dec    ebx
  4181c2:	or     BYTE PTR [edx],ah
  4181c4:	imul   esp,DWORD PTR [edi-0x51090f31],0xb5580bd3
  4181ce:	fld    TBYTE PTR [ebp+0x65]
  4181d1:	adc    BYTE PTR ds:0x846f4721,al
  4181d7:	adc    bl,BYTE PTR [esi+0x24]
  4181da:	mov    ds:0xe4158616,eax
  4181df:	mov    ch,0xf9
  4181e1:	and    esi,DWORD PTR [edx+0x74]
  4181e4:	(bad)  
  4181e5:	call   0xd876f4db
  4181ea:	push   es
  4181eb:	into   
  4181ec:	pop    eax
  4181ed:	test   al,0xbd
  4181ef:	out    dx,eax
  4181f0:	popa   
  4181f1:	into   
  4181f2:	fwait
  4181f3:	xor    ecx,DWORD PTR [esi]
  4181f5:	je     0x41825c
  4181f7:	cmp    ebx,DWORD PTR [eax]
  4181f9:	iret   
  4181fa:	adc    esp,DWORD PTR [esi-0x4f]
  4181fd:	mov    ebp,0x52130c7f
  418202:	and    DWORD PTR [ebp-0x51],esi
  418205:	push   0x7a
  418207:	push   ecx
  418208:	dec    esi
  418209:	sbb    ch,BYTE PTR [edi+0x38]
  41820c:	push   edi
  41820d:	and    edi,edi
  41820f:	(bad)  
  418210:	repz sbb ebx,DWORD PTR [ecx+edx*4-0x1]
  418215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418216:	outs   dx,DWORD PTR ds:[esi]
  418217:	push   ebx
  418218:	jnp    0x4181cd
  41821a:	sbb    BYTE PTR [ebx+0x1e],al
  41821d:	scas   al,BYTE PTR es:[edi]
  41821e:	fcom   QWORD PTR [edx+0x680f42ba]
  418224:	cmp    BYTE PTR [ecx-0x6a590857],bl
  41822a:	cli    
  41822b:	dec    esi
  41822c:	sub    cl,BYTE PTR [eax+0x79]
  41822f:	(bad)  
  418230:	fsubr  QWORD PTR ds:0xaf6624aa
  418236:	fdivp  st(5),st
  418238:	in     al,dx
  418239:	retf   
  41823a:	mov    ah,0x15
  41823c:	cmc    
  41823d:	mov    esp,0x65ba5f16
  418242:	popf   
  418243:	xchg   ebx,eax
  418244:	mov    ah,0xa
  418246:	lds    esi,FWORD PTR [edi+eax*1-0x2106a4e5]
  41824d:	ror    bh,1
  41824f:	inc    eax
  418250:	adc    DWORD PTR [ebx-0x3b],ecx
  418253:	or     al,0x80
  418255:	xchg   edx,eax
  418256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418257:	cwde   
  418258:	sub    al,0x13
  41825a:	push   ebp
  41825b:	mov    esp,cs
  41825d:	jg     0x418230
  41825f:	xchg   esi,eax
  418260:	mov    ebp,0x7fb079b9
  418265:	mov    bl,0xa0
  418267:	js     0x41820a
  418269:	add    edx,edx
  41826b:	not    DWORD PTR [ebx-0x6]
  41826e:	jge    0x4182a8
  418270:	push   edx
  418271:	fnstsw WORD PTR [ebp+ebx*2-0x30]
  418275:	cmc    
  418276:	pop    esi
  418277:	mov    BYTE PTR [ecx-0x4ba7b2af],ch
  41827d:	inc    esp
  41827e:	cdq    
  41827f:	inc    edi
  418280:	sbb    al,0x80
  418282:	out    dx,al
  418283:	mov    al,ds:0xce397dbc
  418288:	xchg   BYTE PTR [ebp-0x4f],dh
  41828b:	mov    WORD PTR [ecx-0x65],fs
  41828e:	adc    ch,bh
  418290:	mov    edi,0x69539e32
  418295:	xor    esi,eax
  418297:	fdiv   DWORD PTR [eax]
  418299:	clc    
  41829a:	pop    DWORD PTR [ebx+0x53]
  41829d:	add    esi,ebp
  41829f:	or     ah,BYTE PTR ds:0x58f3d27b
  4182a5:	fdivr  QWORD PTR [esi+esi*4+0x64]
  4182a9:	mul    DWORD PTR [ebx]
  4182ab:	pop    ss
  4182ac:	mov    gs,ecx
  4182ae:	adc    eax,0x5d8b21b2
  4182b3:	out    dx,al
  4182b4:	jecxz  0x4182fa
  4182b6:	icebp  
  4182b7:	in     eax,0xd3
  4182b9:	push   0x3d
  4182bb:	nop
  4182bc:	shr    BYTE PTR [edx-0x515522d3],0xaf
  4182c3:	imul   ebx,DWORD PTR [ebx],0xe4312321
  4182c9:	add    al,0xbc
  4182cb:	xor    al,0xc4
  4182cd:	cwde   
  4182ce:	in     al,dx
  4182cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182d0:	dec    edi
  4182d1:	in     eax,dx
  4182d2:	pop    ss
  4182d3:	inc    edi
  4182d4:	xor    eax,0x5fe44f7b
  4182d9:	enter  0xe3b5,0xd4
  4182dd:	push   ebx
  4182de:	call   DWORD PTR [ebp+0x7f]
  4182e1:	pop    edi
  4182e2:	mov    al,ds:0xd32b1afa
  4182e7:	(bad)  
  4182e8:	fld    st(4)
  4182ea:	int3   
  4182eb:	(bad)  
  4182ec:	shl    BYTE PTR ds:0xc5eb58c3,cl
  4182f2:	fcomp  QWORD PTR [edx+ebp*4+0x49]
  4182f6:	pop    ebp
  4182f7:	jns    0x418345
  4182f9:	mov    dl,0xf8
  4182fb:	dec    eax
  4182fc:	int3   
  4182fd:	push   ds
  4182fe:	pop    edi
  4182ff:	shl    DWORD PTR [edx-0x4217abda],cl
  418305:	scas   al,BYTE PTR es:[edi]
  418306:	and    eax,esp
  418308:	test   DWORD PTR [esp+esi*1-0x188eac94],ebx
  41830f:	jp     0x418359
  418311:	push   ebx
  418312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418313:	cmp    ecx,DWORD PTR [esi]
  418315:	imul   edi,DWORD PTR [ecx+ebp*4],0xfffffff2
  418319:	adc    BYTE PTR [eax],ch
  41831b:	lods   eax,DWORD PTR ds:[esi]
  41831c:	sub    BYTE PTR [edi+0xd23203e],ch
  418322:	mov    ch,0x85
  418324:	nop
  418325:	pop    edi
  418326:	btr    DWORD PTR [eax+0x3],esi
  41832a:	stos   DWORD PTR es:[edi],eax
  41832b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41832c:	(bad)  
  41832d:	fdivr  st,st(5)
  41832f:	shl    DWORD PTR [ebx+esi*2],0x7e
  418333:	push   esp
  418334:	cmp    al,0xf6
  418336:	sub    DWORD PTR [esi],edx
  418338:	call   esi
  41833a:	loopne 0x41834e
  41833c:	push   edx
  41833d:	xor    ebp,edx
  41833f:	mov    ch,BYTE PTR [edx-0x1387f95b]
  418345:	and    eax,0xfd201597
  41834a:	adc    dl,BYTE PTR [ebx]
  41834c:	repnz ror BYTE PTR [ebx-0x10dcbd9c],1
  418353:	cld    
  418354:	inc    esp
  418355:	xchg   DWORD PTR [esi+ebp*8+0x445846cd],esi
  41835c:	les    ecx,FWORD PTR [esi-0x31]
  41835f:	daa    
  418360:	fisttp QWORD PTR [eax+0x47]
  418363:	enter  0xf428,0xc7
  418367:	add    al,0x42
  418369:	cs sub bl,cl
  41836c:	std    
  41836d:	js     0x418397
  41836f:	ja     0x41835a
  418371:	test   BYTE PTR [ebx],0x36
  418374:	call   0x9a1696c5
  418379:	out    0x7d,al
  41837b:	push   edx
  41837c:	cmp    DWORD PTR [eax+0x513c629e],0xffffffca
  418383:	shl    bl,cl
  418385:	and    cl,BYTE PTR [ecx-0x496f0158]
  41838b:	stos   BYTE PTR es:[edi],al
  41838c:	jno    0x4183d5
  41838e:	cwde   
  41838f:	push   ebp
  418390:	pusha  
  418391:	clc    
  418392:	dec    eax
  418393:	outs   dx,DWORD PTR ds:[esi]
  418394:	jl     0x4183cb
  418396:	mov    bh,0x5c
  418398:	(bad)  
  418399:	cmc    
  41839a:	xor    BYTE PTR [ecx-0x5f8be44e],cl
  4183a0:	mov    dh,0xc0
  4183a2:	add    al,BYTE PTR [ecx-0x3aba528f]
  4183a8:	gs in  eax,0x19
  4183ab:	mov    esi,DWORD PTR [ebp+0x21]
  4183ae:	or     ah,BYTE PTR [ebx]
  4183b0:	mov    cl,0x87
  4183b2:	cmp    al,0x62
  4183b4:	outs   dx,BYTE PTR ds:[esi]
  4183b5:	aad    0xcc
  4183b7:	ds pop ebp
  4183b9:	ror    DWORD PTR [esp+edi*1-0x2e],cl
  4183bd:	xchg   ecx,eax
  4183be:	pushf  
  4183bf:	dec    edx
  4183c0:	fs fwait
  4183c2:	repz jge 0x4183f9
  4183c5:	ins    BYTE PTR es:[edi],dx
  4183c6:	and    BYTE PTR [eax-0x11],al
  4183c9:	dec    esi
  4183ca:	ins    DWORD PTR es:[edi],dx
  4183cb:	mov    ah,0x3
  4183cd:	es ds (bad) 
  4183d0:	push   edx
  4183d1:	adc    DWORD PTR [ecx+0x48a6acc5],ecx
  4183d7:	call   0xcc42:0xc4f6f542
  4183de:	or     ecx,DWORD PTR [ebp-0x6fe65f4b]
  4183e4:	idiv   DWORD PTR [edx-0x5]
  4183e7:	test   eax,ebp
  4183e9:	pushf  
  4183ea:	lods   al,BYTE PTR ds:[esi]
  4183eb:	xchg   ecx,eax
  4183ec:	div    BYTE PTR [edi-0xb7970f4]
  4183f2:	and    DWORD PTR [eax-0x4b79cf5],ecx
  4183f8:	xor    cl,BYTE PTR [esi]
  4183fa:	push   0xc5fe2161
  4183ff:	dec    esi
  418400:	cwde   
  418401:	iret   
  418402:	mov    eax,0xd37b7853
  418407:	inc    ebp
  418408:	xchg   esi,eax
  418409:	pop    ebx
  41840a:	bound  eax,QWORD PTR [ebx]
  41840c:	data16 ins BYTE PTR es:[edi],dx
  41840e:	cld    
  41840f:	xchg   edx,eax
  418410:	cdq    
  418411:	jmp    0xb1ab:0x9791bdf5
  418418:	sbb    eax,0x582f44c0
  41841d:	adc    edi,edx
  41841f:	mov    edi,0x871821d8
  418424:	xchg   edx,eax
  418425:	popf   
  418426:	js     0x418401
  418428:	je     0x41842e
  41842a:	shr    DWORD PTR [ebx+0x17],1
  41842d:	jnp    0x418438
  41842f:	mov    ds:0x1f18dd61,al
  418434:	pop    esp
  418435:	xchg   ebx,eax
  418436:	jmp    0x7f872c89
  41843b:	scas   al,BYTE PTR es:[edi]
  41843c:	adc    eax,0xa997d74a
  418441:	push   edx
  418442:	or     cl,BYTE PTR [ecx-0x70]
  418445:	xchg   edi,eax
  418446:	cdq    
  418447:	xchg   esp,eax
  418448:	cld    
  418449:	in     eax,0x3b
  41844b:	std    
  41844c:	xor    DWORD PTR [edx],0x2f0fa2f9
  418452:	into   
  418453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418454:	fcom   QWORD PTR [ebx+0x163fc25f]
  41845a:	sbb    al,0xa6
  41845c:	repz (bad) 
  41845f:	std    
  418460:	jecxz  0x4184d3
  418462:	cs push ebp
  418464:	ret    
  418465:	pushf  
  418466:	pop    ecx
  418467:	xor    BYTE PTR [ecx+0x7e88d5a6],ah
  41846d:	ja     0x4184e5
  41846f:	das    
  418470:	clc    
  418471:	or     BYTE PTR [eax-0x26],0x58
  418475:	xlat   BYTE PTR ds:[ebx]
  418476:	xchg   DWORD PTR [eax],ebx
  418478:	jge    0x4184df
  41847a:	add    bl,cl
  41847c:	dec    edi
  41847d:	out    dx,eax
  41847e:	shl    BYTE PTR [edi-0x1c8bb58c],1
  418484:	mov    ch,0xb
  418486:	mov    eax,ds:0x435809d4
  41848b:	add    edx,DWORD PTR [ecx]
  41848d:	daa    
  41848e:	loop   0x418470
  418490:	sahf   
  418491:	gs stos DWORD PTR es:[edi],eax
  418493:	fsubr  DWORD PTR [edi+0x386dfff6]
  418499:	(bad)  [eax-0x63]
  41849c:	pop    eax
  41849d:	pop    ecx
  41849e:	xchg   ebx,esp
  4184a0:	mov    esp,0xcd75746b
  4184a5:	pop    ebp
  4184a6:	out    0xcf,al
  4184a8:	clc    
  4184a9:	jae    0x418523
  4184ab:	fstp   QWORD PTR [esp+ecx*1-0x1e]
  4184af:	xchg   ecx,eax
  4184b0:	cld    
  4184b1:	and    eax,0x6845c31
  4184b6:	mov    al,ds:0x5dc9a440
  4184bb:	imul   eax,DWORD PTR [ebx+eiz*8+0x6436fbe2],0xffffffa3
  4184c3:	mov    dh,0xd8
  4184c5:	and    BYTE PTR [ebp-0x32],bl
  4184c8:	ins    DWORD PTR es:[edi],dx
  4184c9:	in     al,0xb1
  4184cb:	clc    
  4184cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184cd:	js     0x4184f0
  4184cf:	out    0xf,eax
  4184d1:	retf   
  4184d2:	jno    0x4184c2
  4184d4:	int    0x16
  4184d6:	inc    ebx
  4184d7:	cmp    al,0xb
  4184d9:	repnz dec edx
  4184db:	cli    
  4184dc:	push   esp
  4184dd:	cmp    eax,0x62b447b4
  4184e2:	inc    eax
  4184e3:	inc    ebp
  4184e4:	xchg   edx,eax
  4184e5:	sub    DWORD PTR [esi+0xc099],esi
  4184eb:	jns    0x418563
  4184ed:	js     0x5d46913e
  4184f3:	inc    ebp
  4184f4:	adc    ecx,eax
  4184f6:	add    BYTE PTR [ecx],bl
  4184f8:	mov    ebx,0x19381ab2
  4184fd:	cmp    esp,DWORD PTR [ebx+0xf448bae]
  418503:	inc    ebx
  418504:	imul   ebp,esi,0xffffffd6
  418507:	popf   
  418508:	test   al,0x41
  41850a:	xchg   ecx,eax
  41850b:	mov    ah,0xbc
  41850d:	and    bh,BYTE PTR [esi+eax*8-0x46dcb263]
  418514:	out    0x1c,eax
  418516:	inc    esp
  418517:	inc    edi
  418518:	es xchg esi,eax
  41851a:	lahf   
  41851b:	jo     0x4184f9
  41851d:	push   eax
  41851e:	jge    0x4184dc
  418520:	fild   DWORD PTR [edx+0x6c]
  418523:	cmp    BYTE PTR [eax],ch
  418525:	(bad)  
  418526:	dec    esi
  418527:	loop   0x41855d
  418529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41852a:	xor    ch,BYTE PTR [ebp-0x5d06de06]
  418530:	pushf  
  418531:	dec    edx
  418532:	or     DWORD PTR [eax+0x4ef23468],ecx
  418538:	ins    DWORD PTR es:[edi],dx
  418539:	pop    DWORD PTR gs:[eax+0xb1b9eb4]
  418540:	imul   ecx,DWORD PTR [edx+0x163b83f9],0x1ebe5f28
  41854a:	xor    al,0x3a
  41854c:	jle    0x418581
  41854e:	js     0x418558
  418550:	xchg   ebx,eax
  418551:	sub    DWORD PTR [ecx],0xffffffb8
  418554:	push   ecx
  418555:	push   edi
  418556:	rcr    BYTE PTR [eax],1
  418558:	dec    edi
  418559:	stos   DWORD PTR es:[edi],eax
  41855a:	pop    edi
  41855b:	test   DWORD PTR [edx+0x63],edi
  41855e:	aaa    
  41855f:	fwait
  418560:	jnp    0x418576
  418562:	jg     0x418535
  418564:	(bad)  
  418565:	dec    esi
  418566:	push   0x3fd6ff85
  41856b:	test   eax,0x2a1c5b01
  418570:	mov    ecx,0x86f5cc92
  418575:	cwde   
  418576:	pop    ecx
  418577:	retf   
  418578:	jo     0x418550
  41857a:	mov    eax,ds:0x9a273fd5
  41857f:	out    0xcb,eax
  418581:	fisttp QWORD PTR [edx+0x2bb205f1]
  418587:	(bad)  
  418588:	(bad)  
  418589:	loop   0x4185ad
  41858b:	call   FWORD PTR [edx]
  41858d:	dec    ebx
  41858e:	jbe    0x418518
  418590:	lds    ecx,FWORD PTR [ebx]
  418592:	ret    0xee5
  418595:	push   ecx
  418596:	pop    esp
  418597:	out    0xb6,al
  418599:	jmp    0xdd730103
  41859e:	adc    DWORD PTR ds:0x11caf5b,esp
  4185a4:	lods   al,BYTE PTR ds:[esi]
  4185a5:	sbb    al,0xaa
  4185a7:	xor    BYTE PTR [ebp+esi*1+0x6f],dh
  4185ab:	mov    ah,0xbb
  4185ad:	or     eax,ebx
  4185af:	mov    DWORD PTR [esi],edi
  4185b1:	fnsave [ecx-0x60678a33]
  4185b7:	lock cdq 
  4185b9:	sub    ecx,DWORD PTR [edi-0x129bae32]
  4185bf:	xchg   edx,eax
  4185c0:	mov    BYTE PTR [ecx+0x6f],0x8c
  4185c4:	call   0xe2bb:0x29b37a6f
  4185cb:	ror    DWORD PTR [edx+0x2f],1
  4185ce:	fcom   DWORD PTR [edx]
  4185d0:	push   ss
  4185d1:	add    al,0x4e
  4185d3:	int    0x16
  4185d5:	fdiv   st,st(1)
  4185d7:	push   ds
  4185d8:	pop    ds
  4185d9:	pop    ds
  4185da:	jbe    0x418626
  4185dc:	xchg   edx,eax
  4185dd:	sbb    dh,BYTE PTR [ecx-0x748336a2]
  4185e3:	inc    edx
  4185e4:	aad    0xdf
  4185e6:	add    edx,esi
  4185e8:	xlat   BYTE PTR ds:[ebx]
  4185e9:	dec    ebx
  4185ea:	imul   esi,DWORD PTR cs:[esi+0x6d],0x5
  4185ef:	mov    DWORD PTR [eax],esp
  4185f1:	or     ch,0xe
  4185f4:	pop    edi
  4185f5:	xor    al,0x39
  4185f7:	popf   
  4185f8:	in     al,0x45
  4185fa:	es test eax,0xe271a412
  418600:	mov    ebx,0x916938b8
  418605:	adc    BYTE PTR ds:0x41ec4c91,ah
  41860b:	or     bl,BYTE PTR [edx]
  41860d:	mov    ch,0x5d
  41860f:	dec    ebp
  418610:	jge    0x418593
  418612:	pusha  
  418613:	fs jmp 0x4185b9
  418616:	lahf   
  418617:	in     al,dx
  418618:	lods   eax,DWORD PTR ds:[esi]
  418619:	cmp    edi,edi
  41861b:	jl     0x418679
  41861d:	mov    ds:0x7e90ca3a,al
  418622:	jbe    0x4185b2
  418624:	movd   DWORD PTR [ecx-0x2d],mm1
  418628:	inc    edx
  418629:	pop    DWORD PTR [esi-0x6b1afbcb]
  41862f:	jbe    0x418690
  418631:	inc    eax
  418632:	cmp    DWORD PTR [ebx],edx
  418634:	test   eax,0xeb79f3ac
  418639:	shl    BYTE PTR [ebp+0x1],cl
  41863c:	push   ds
  41863d:	push   0xffffffe0
  41863f:	mov    al,ds:0x91ca6bb1
  418644:	jo     0x418601
  418646:	stc    
  418647:	(bad)  [ebp+0xc]
  41864a:	jo     0x418602
  41864c:	cdq    
  41864d:	out    dx,al
  41864e:	or     DWORD PTR [di],edi
  418651:	(bad)  
  418652:	into   
  418653:	push   0x63b9893d
  418658:	fadd   st,st(5)
  41865a:	(bad)  
  41865b:	xchg   esi,eax
  41865c:	pop    ecx
  41865d:	ins    DWORD PTR es:[edi],dx
  41865e:	pop    ebx
  41865f:	sub    al,0x5c
  418661:	pusha  
  418662:	adc    ah,dh
  418664:	jbe    0x41862f
  418666:	fnstcw WORD PTR [edi]
  418668:	jae    0x4185ff
  41866a:	adc    al,0x8b
  41866c:	sub    ebp,DWORD PTR [eax]
  41866e:	mov    edx,0xce34dc0a
  418673:	fs inc edi
  418675:	push   ds
  418676:	imul   esi,DWORD PTR [esp+ecx*4],0xddd0554d
  41867d:	ins    BYTE PTR es:[edi],dx
  41867e:	xor    DWORD PTR [ebp+0x7486947a],esp
  418684:	push   ss
  418685:	inc    ebp
  418686:	mov    eax,0x702f7efa
  41868b:	jmp    0xbb5b:0xb5e9df0b
  418692:	jnp    0x4186fb
  418694:	fldcw  WORD PTR [edi]
  418696:	imul   edi,DWORD PTR [ecx],0xffffffc6
  418699:	inc    ebp
  41869a:	add    DWORD PTR [edx-0x52],eax
  41869d:	or     DWORD PTR [ebp+0x3e],esi
  4186a0:	and    DWORD PTR [esi+edi*4],edx
  4186a3:	icebp  
  4186a4:	pop    ss
  4186a5:	rcr    BYTE PTR [edx+0xa638815],1
  4186ab:	push   ds
  4186ac:	fistp  QWORD PTR [esi]
  4186ae:	imul   edx,DWORD PTR [ebp-0x70],0x6a
  4186b2:	mov    edx,0x9627e7bf
  4186b7:	push   0xffffffd2
  4186b9:	arpl   WORD PTR [edi],ax
  4186bb:	or     dh,BYTE PTR [edi]
  4186bd:	mov    edi,0x6259d513
  4186c2:	mov    ds:0x20683596,al
  4186c7:	cmc    
  4186c8:	xor    eax,DWORD PTR [esi+edi*4-0x75fb5f2a]
  4186cf:	int    0xf
  4186d1:	pop    ecx
  4186d2:	add    ch,ah
  4186d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d5:	mov    edi,0x19c59238
  4186da:	and    DWORD PTR [ecx-0xfc00881],0xffffffb5
  4186e1:	xor    DWORD PTR [ecx],esp
  4186e3:	stos   DWORD PTR es:[edi],eax
  4186e4:	shl    ebx,1
  4186e6:	dec    edx
  4186e7:	gs es pusha 
  4186ea:	or     eax,0x5cf8533d
  4186ef:	dec    eax
  4186f0:	lds    eax,FWORD PTR [esi+0x7b5815c0]
  4186f6:	cli    
  4186f7:	ret    0x106b
  4186fa:	jae    0x418713
  4186fc:	call   0x2772:0x7d818987
  418703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418704:	mov    dl,0xea
  418706:	fimul  DWORD PTR [ebp-0x4927ae6b]
  41870c:	and    al,0x1d
  41870e:	mov    bl,0x1e
  418710:	test   al,0x33
  418712:	repnz out dx,al
  418714:	xchg   DWORD PTR [ecx+0x2e8a2f4c],edi
  41871a:	aad    0x9
  41871c:	scas   al,BYTE PTR es:[edi]
  41871d:	js     0x418741
  41871f:	in     al,dx
  418720:	shr    BYTE PTR [eax],cl
  418722:	jmp    0x10db:0xb68683bb
  418729:	ss leave 
  41872b:	icebp  
  41872c:	inc    ecx
  41872d:	test   edi,0x2474482b
  418733:	repnz cmp al,0xd8
  418736:	xchg   BYTE PTR [eax+0x7a992864],dl
  41873c:	xchg   edx,eax
  41873d:	cmp    al,0x68
  41873f:	loope  0x4186ea
  418741:	pushf  
  418742:	loopne 0x41873f
  418744:	out    dx,eax
  418745:	aad    0x60
  418747:	das    
  418748:	ins    BYTE PTR es:[edi],dx
  418749:	xor    eax,0x6baa30c0
  41874e:	jg     0x4187c8
  418750:	sbb    bl,ch
  418752:	mov    dl,0x7b
  418754:	jbe    0x418796
  418756:	pusha  
  418757:	push   edi
  418758:	push   cs
  418759:	push   es
  41875a:	and    ah,BYTE PTR [edi+ebx*8]
  41875d:	pop    ebx
  41875e:	jno    0x4186fa
  418760:	in     eax,0x86
  418762:	adc    DWORD PTR [ecx+ebp*8],ebx
  418765:	inc    ecx
  418766:	add    DWORD PTR [ebx-0x2c3e1c4a],0x5789455c
  418770:	ds mov eax,esi
  418773:	push   esp
  418774:	cli    
  418775:	inc    ebp
  418776:	dec    ebp
  418777:	jp     0x4187e7
  418779:	mov    al,0x28
  41877b:	idiv   DWORD PTR [ebx+0x14]
  41877e:	test   BYTE PTR [edx],dh
  418780:	push   ebp
  418781:	xor    DWORD PTR [esi+0x4e3a0fe],eax
  418787:	pushaw 
  418789:	fnsave [ebx+0x38]
  41878c:	and    ah,BYTE PTR [ebp+0x31]
  41878f:	neg    BYTE PTR [ebp+0x45]
  418792:	pop    es
  418793:	sub    al,0x2a
  418795:	sahf   
  418796:	ins    BYTE PTR es:[edi],dx
  418797:	sbb    al,0xcf
  418799:	sahf   
  41879a:	inc    edi
  41879b:	out    dx,al
  41879c:	add    BYTE PTR [edi],cl
  41879e:	(bad)  
  41879f:	jno    0x41873b
  4187a1:	xchg   ebx,eax
  4187a2:	cmp    DWORD PTR [edx+0x6],edi
  4187a5:	pop    eax
  4187a6:	pop    ecx
  4187a7:	cs xor eax,0xfce23066
  4187ad:	stos   BYTE PTR es:[edi],al
  4187ae:	jmp    FWORD PTR [eax-0x17]
  4187b1:	add    cl,BYTE PTR [eax]
  4187b3:	loopne 0x418806
  4187b5:	jo     0x418764
  4187b7:	in     eax,dx
  4187b8:	mov    edi,0xac5ab3e8
  4187bd:	sbb    al,0xff
  4187bf:	in     al,dx
  4187c0:	or     DWORD PTR [ecx],edi
  4187c2:	gs out dx,eax
  4187c4:	fiadd  DWORD PTR [edx+0x2d]
  4187c7:	inc    esp
  4187c8:	inc    edx
  4187c9:	mov    bl,0xf8
  4187cb:	mov    ebx,0x36cc9405
  4187d0:	or     DWORD PTR [eax],ebx
  4187d2:	adc    al,0xe2
  4187d4:	cmp    ch,ah
  4187d6:	xor    ch,BYTE PTR [edx]
  4187d8:	and    DWORD PTR [ebp-0x23e6da14],0x5616e36f
  4187e2:	and    al,0xab
  4187e5:	mov    al,ds:0x4fda534d
  4187ea:	push   ebp
  4187eb:	mov    esp,0x3a2c423
  4187f0:	mov    ch,0xb8
  4187f2:	inc    edx
  4187f3:	cmp    bl,BYTE PTR [ebp-0x28bd1952]
  4187f9:	imul   eax,DWORD PTR [edx]
  4187fc:	jnp    0x418830
  4187fe:	sub    DWORD PTR [esi+0x6c],ecx
  418801:	push   es
  418802:	in     al,0x3a
  418804:	call   0x88a4:0x78268a7c
  41880b:	cmp    ecx,DWORD PTR [ebx]
  41880d:	pop    ds
  41880e:	pop    ss
  41880f:	jo     0x41887d
  418811:	in     eax,0x79
  418813:	rol    DWORD PTR fs:[eax],1
  418816:	in     eax,0x7c
  418818:	adc    eax,0x6323178b
  41881d:	xchg   DWORD PTR [edx+0x1f492ae2],esi
  418823:	lds    ecx,FWORD PTR [edi-0x75530026]
  418829:	leave  
  41882a:	call   0x96607955
  41882f:	jns    0x4188ac
  418831:	aad    0xea
  418833:	push   ecx
  418834:	and    BYTE PTR [edi-0xc],0xfa
  418838:	jne    0x4187fc
  41883a:	popa   
  41883b:	loope  0x4187f7
  41883d:	add    DWORD PTR [ebp-0x20],0x85be90d9
  418844:	and    dl,BYTE PTR [ebp+0x62882804]
  41884a:	xor    dl,ah
  41884c:	cmovno eax,DWORD PTR [edi+0x1d50ce40]
  418853:	sar    DWORD PTR ds:0x416392ab,0x39
  41885a:	in     eax,dx
  41885b:	(bad)
  41885e:	ret    
  41885f:	sahf   
  418860:	cmp    eax,DWORD PTR [edx+0x611b45b9]
  418866:	stos   BYTE PTR es:[edi],al
  418867:	cld    
  418868:	pop    edx
  418869:	dec    ebp
  41886a:	sbb    ecx,edi
  41886c:	jmp    0xbbb653c
  418871:	loope  0x4188d4
  418873:	xor    al,BYTE PTR [edi-0x2fb1bb21]
  418879:	xchg   esi,eax
  41887a:	xor    eax,0x3a866624
  41887f:	rol    BYTE PTR [ecx],0xe3
  418882:	mov    al,ds:0x960c3fd5
  418887:	cmp    ah,al
  418889:	and    DWORD PTR [ecx-0x25a26109],ebx
  41888f:	popf   
  418890:	sbb    BYTE PTR [esi-0x7543952a],0x81
  418897:	icebp  
  418898:	add    bl,bh
  41889a:	or     al,0xca
  41889c:	stos   DWORD PTR es:[edi],eax
  41889d:	shr    DWORD PTR [ebp-0x34],cl
  4188a0:	icebp  
  4188a1:	dec    esp
  4188a2:	lea    esi,[edi]
  4188a4:	lahf   
  4188a5:	sbb    DWORD PTR [eax+0x38],eax
  4188a8:	cmp    al,0xf8
  4188aa:	sub    cl,BYTE PTR [edx]
  4188ac:	jp     0x418867
  4188ae:	pop    es
  4188af:	test   eax,0x3afdd195
  4188b4:	jb     0x418930
  4188b6:	xor    cl,bl
  4188b8:	imul   edi,DWORD PTR [edi-0x36c912eb],0x1e
  4188bf:	call   0xd57ea458
  4188c4:	in     al,dx
  4188c5:	(bad)  
  4188c6:	in     eax,0xfb
  4188c8:	push   es
  4188c9:	js     0x4188bd
  4188cb:	sahf   
  4188cc:	mov    ah,0xee
  4188ce:	das    
  4188cf:	and    esi,DWORD PTR [ecx+0x5e17bb2]
  4188d5:	xchg   edi,eax
  4188d6:	popf   
  4188d7:	mov    DWORD PTR [eiz*8+0x78605a8f],esi
  4188de:	popf   
  4188df:	lds    ebp,FWORD PTR [edi+eax*1+0x4a]
  4188e3:	stos   BYTE PTR es:[edi],al
  4188e4:	stos   DWORD PTR es:[edi],eax
  4188e5:	or     cl,BYTE PTR [ebp+0x110a5c94]
  4188eb:	mov    al,0xbd
  4188ed:	xlat   BYTE PTR ds:[ebx]
  4188ee:	push   ds
  4188ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f0:	cmp    bh,BYTE PTR [esi-0x58b716fb]
  4188f6:	and    BYTE PTR [ecx],dh
  4188f8:	push   0x787a67c
  4188fd:	mov    dh,0x1
  4188ff:	push   esp
  418900:	or     eax,0x35444a69
  418905:	jo     0x41894a
  418907:	popa   
  418908:	pop    ebp
  418909:	cs data16 in al,dx
  41890c:	mov    BYTE PTR [ecx-0x31f1b0fc],al
  418912:	mov    bl,0x41
  418914:	cwde   
  418915:	loopne 0x418930
  418917:	jne    0x4188b5
  418919:	lods   al,BYTE PTR ds:[esi]
  41891a:	xor    dl,BYTE PTR [ebp+eiz*8-0x34]
  41891e:	inc    ebx
  41891f:	fimul  WORD PTR [ebx+0x1d63234b]
  418925:	cli    
  418926:	inc    edx
  418927:	jge    0x418972
  418929:	inc    ecx
  41892a:	pop    esi
  41892b:	mov    cl,0xaa
  41892d:	outs   dx,DWORD PTR ds:[esi]
  41892e:	xchg   esi,eax
  41892f:	or     edx,0xffffffd2
  418932:	es xchg ebx,eax
  418934:	hlt    
  418935:	pop    es
  418936:	pop    ds
  418937:	ins    BYTE PTR es:[edi],dx
  418938:	retf   0xe95d
  41893b:	pop    edx
  41893c:	sbb    edx,DWORD PTR [ecx+0x6f]
  41893f:	arpl   WORD PTR ds:0xf0cc3fa,bx
  418945:	into   
  418946:	out    0x67,eax
  418948:	push   ebp
  418949:	in     eax,dx
  41894a:	aas    
  41894b:	repz and edi,edi
  41894e:	mov    WORD PTR ds:0xa2c0ff0c,ss
  418954:	stos   DWORD PTR es:[edi],eax
  418955:	daa    
  418956:	jp     0x41894a
  418958:	fidiv  DWORD PTR [ecx]
  41895a:	dec    edx
  41895b:	cmp    eax,0x707daf31
  418960:	jl     0x418911
  418962:	xchg   esi,eax
  418963:	xchg   esi,eax
  418964:	or     dl,BYTE PTR [ecx+0x711c6685]
  41896a:	sbb    eax,esi
  41896c:	aas    
  41896d:	call   DWORD PTR [edx-0x17397b10]
  418973:	mov    edi,0x144b38c7
  418978:	mov    ebx,0x22bf05c6
  41897d:	cmp    al,0xb4
  41897f:	mov    bh,0x4a
  418981:	inc    ebp
  418982:	stc    
  418983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418984:	enter  0xe86c,0x26
  418988:	cs stos BYTE PTR es:[edi],al
  41898a:	ss call 0x4d0c47b
  418990:	cmovae ebp,DWORD PTR ds:0x36802007
  418997:	ins    DWORD PTR es:[edi],dx
  418998:	push   ss
  418999:	pop    edi
  41899a:	jp     0x418a0f
  41899c:	or     DWORD PTR [esi+0x7187383f],0xffffffda
  4189a3:	sbb    al,0xc6
  4189a5:	in     eax,0xec
  4189a7:	inc    ebp
  4189a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a9:	leave  
  4189aa:	dec    esp
  4189ab:	sar    DWORD PTR [ebp-0x1d0cf997],1
  4189b1:	sub    al,dh
  4189b3:	mov    ss,WORD PTR [ecx-0xb]
  4189b6:	int3   
  4189b7:	fwait
  4189b8:	and    eax,0xed4add51
  4189bd:	ds sbb eax,0x704841a
  4189c3:	dec    ebx
  4189c4:	inc    edi
  4189c5:	push   ss
  4189c6:	ror    BYTE PTR [edi*8-0x1a61239d],0x5e
  4189ce:	push   ss
  4189cf:	loope  0x418a2c
  4189d1:	ret    
  4189d2:	add    eax,0xad680dc1
  4189d7:	xor    DWORD PTR [edi],0x41
  4189da:	push   ss
  4189db:	sbb    dl,BYTE PTR [ecx+0x253cdf95]
  4189e1:	(bad)
  4189e5:	cmc    
  4189e6:	shr    BYTE PTR ds:0xfb6a8c4a,cl
  4189ec:	retf   
  4189ed:	jmp    0x4189ad
  4189ef:	les    eax,FWORD PTR [ecx+0x7baba26b]
  4189f5:	mov    bh,BYTE PTR [ebx+0x65e0447b]
  4189fb:	mov    bl,0x96
  4189fd:	(bad)  
  4189fe:	mov    ecx,0x27323aea
  418a03:	push   ebx
  418a04:	mov    al,0x73
  418a06:	fwait
  418a07:	shl    BYTE PTR [edx+eax*2-0x36],0x28
  418a0c:	aas    
  418a0d:	mov    cl,0x41
  418a0f:	pop    ecx
  418a10:	repnz sbb ebx,DWORD PTR gs:[edi+0x6c]
  418a15:	xchg   BYTE PTR [edi],dl
  418a17:	leave  
  418a18:	push   cs
  418a19:	pusha  
  418a1a:	xchg   esp,eax
  418a1b:	lods   al,BYTE PTR ds:[esi]
  418a1d:	jb     0x418a01
  418a1f:	nop
  418a20:	mov    dl,dh
  418a22:	pop    esp
  418a23:	xor    al,0xa8
  418a25:	jmp    0xa653c7a0
  418a2a:	mov    edi,0xe6327d6a
  418a2f:	mov    dh,0xe7
  418a31:	adc    ch,BYTE PTR [esi]
  418a33:	sbb    eax,0xba33935d
  418a38:	repnz (bad) 
  418a3a:	or     al,0xa2
  418a3c:	test   al,0x4a
  418a3e:	sbb    ebp,0x35ae2f62
  418a44:	loopne 0x4189f5
  418a46:	stos   BYTE PTR es:[edi],al
  418a47:	inc    esi
  418a48:	not    BYTE PTR [esi+0x63]
  418a4b:	push   cs
  418a4c:	mov    esp,DWORD PTR [eax-0x3e]
  418a4f:	jmp    DWORD PTR [ecx-0x75]
  418a52:	jae    0x418a8e
  418a54:	push   cs
  418a55:	mov    bl,0x10
  418a57:	pop    esi
  418a58:	daa    
  418a59:	sahf   
  418a5a:	jge    0x418aa8
  418a5c:	cmc    
  418a5d:	into   
  418a5e:	aad    0xcc
  418a60:	cmp    al,0x23
  418a62:	jge    0x418a34
  418a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a65:	mov    ds:0x9fdb567e,al
  418a6a:	in     eax,dx
  418a6b:	sbb    DWORD PTR [eax-0x59],0x10
  418a6f:	test   bh,bl
  418a71:	(bad)  
  418a72:	jmp    0x3daf1c4c
  418a77:	sub    dl,BYTE PTR [ebx+0x55c26d7a]
  418a7d:	mov    esi,0x44d233e9
  418a82:	push   eax
  418a83:	or     al,ch
  418a85:	ds ret 
  418a87:	imul   eax,DWORD PTR [esi+eax*2-0x2e00c8ae],0x19e7ef20
  418a92:	xchg   ebx,eax
  418a93:	add    eax,ebp
  418a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a96:	pop    ebx
  418a97:	dec    ecx
  418a98:	hlt    
  418a99:	sahf   
  418a9a:	test   eax,0xe0440f83
  418a9f:	xor    dh,ch
  418aa1:	mov    dl,0x64
  418aa3:	pop    ss
  418aa4:	add    DWORD PTR [ebx+0x57572cbc],ebx
  418aaa:	js     0x418ad6
  418aac:	adc    dl,BYTE PTR [eax]
  418aae:	fld    DWORD PTR [ebx-0x7]
  418ab1:	jecxz  0x418a3e
  418ab3:	adc    edx,DWORD PTR [edx]
  418ab5:	es sti 
  418ab7:	cmp    eax,0x4a4e2754
  418abc:	test   eax,0xea40aa86
  418ac1:	stos   DWORD PTR es:[edi],eax
  418ac2:	inc    eax
  418ac3:	cdq    
  418ac4:	or     BYTE PTR [esi+edi*8+0x66171aff],bh
  418acb:	cmc    
  418acc:	push   ss
  418acd:	xchg   ebx,eax
  418ace:	outs   dx,BYTE PTR ds:[esi]
  418acf:	scas   al,BYTE PTR es:[edi]
  418ad0:	and    bl,BYTE PTR [esi-0x6c6da751]
  418ad6:	and    al,0x9
  418ad8:	mov    esi,0xb333526e
  418add:	test   al,0x96
  418adf:	mov    ebp,DWORD PTR [ebx]
  418ae1:	xlat   BYTE PTR ds:[ebx]
  418ae2:	leave  
  418ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae4:	and    al,0xd
  418ae6:	nop
  418ae7:	loop   0x418ad3
  418ae9:	aam    0x35
  418aeb:	out    dx,al
  418aec:	xchg   DWORD PTR [esi-0x3a],ebp
  418aef:	retf   
  418af0:	into   
  418af1:	cld    
  418af2:	xor    al,0xc7
  418af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418af5:	jl     0x418aac
  418af7:	stos   DWORD PTR es:[edi],eax
  418af8:	popf   
  418af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418afa:	pop    ebp
  418afb:	and    al,0xbf
  418afd:	mov    bh,0x1d
  418aff:	popa   
  418b00:	xchg   ecx,eax
  418b01:	(bad)  
  418b02:	clc    
  418b03:	inc    ebp
  418b04:	pop    es
  418b05:	repnz (bad) 
  418b08:	je     0x418acf
  418b0a:	(bad)  
  418b0b:	ds push ss
  418b0d:	ror    cl,cl
  418b0f:	inc    ecx
  418b10:	xor    ebp,DWORD PTR [ebx-0x2bafc420]
  418b16:	rol    DWORD PTR [ecx+ebp*2],cl
  418b19:	sbb    al,dh
  418b1b:	sbb    DWORD PTR [ebx+0x67],esi
  418b1e:	rol    BYTE PTR [edx],cl
  418b20:	pusha  
  418b21:	out    dx,eax
  418b22:	ss out dx,eax
  418b24:	jb     0x418b9f
  418b26:	adc    ch,BYTE PTR [ebx-0x476a4cd7]
  418b2c:	clc    
  418b2d:	sti    
  418b2e:	sbb    al,0xe4
  418b30:	xor    al,0x89
  418b32:	ret    
  418b33:	mov    ecx,0x879f4913
  418b38:	dec    ecx
  418b39:	jo     0x418ad8
  418b3b:	add    DWORD PTR [edx+0x1f],esi
  418b3e:	xor    ecx,edi
  418b40:	jle    0x418b8d
  418b42:	stc    
  418b43:	cli    
  418b44:	mov    ah,0xa3
  418b46:	das    
  418b47:	fabs   
  418b49:	and    ebp,ecx
  418b4b:	adc    DWORD PTR [ebx-0x44],edx
  418b4e:	imul   bh
  418b50:	(bad)  
  418b51:	aas    
  418b52:	and    BYTE PTR [ecx+0x2da1405a],0xda
  418b59:	cli    
  418b5a:	add    al,0x2b
  418b5c:	arpl   WORD PTR [esp+edx*4+0x25],ax
  418b60:	cdq    
  418b61:	mov    bl,0x34
  418b63:	dec    di
  418b65:	sub    edx,0x366f15b6
  418b6b:	jecxz  0x418b40
  418b6d:	jo     0x418b52
  418b6f:	mov    ch,BYTE PTR [eax]
  418b71:	sbb    al,0x38
  418b73:	arpl   WORD PTR [eax+0x5f],ax
  418b76:	xchg   esp,eax
  418b77:	push   ebp
  418b78:	loope  0x418b99
  418b7a:	sbb    BYTE PTR [edx],0x18
  418b7d:	mov    ebx,0x589c1092
  418b82:	inc    edx
  418b83:	pop    ebx
  418b84:	inc    ebx
  418b85:	pop    ds
  418b86:	push   ebp
  418b87:	mov    al,0xe4
  418b89:	jl     0x418b41
  418b8b:	adc    eax,0x8a6f50b6
  418b90:	add    ch,BYTE PTR [eax-0x5a7616ec]
  418b96:	in     eax,0x5d
  418b98:	push   ecx
  418b99:	pop    edi
  418b9a:	jl     0x418b6c
  418b9c:	mov    esi,DWORD PTR [edx+0x72]
  418b9f:	mov    dh,0x52
  418ba1:	xchg   ebx,eax
  418ba2:	mov    DWORD PTR [eax-0x6e],edx
  418ba5:	nop
  418ba6:	and    BYTE PTR [esi],0x3f
  418ba9:	adc    edi,DWORD PTR [ecx-0x79432c3b]
  418baf:	adc    eax,0xef8f690d
  418bb4:	rol    BYTE PTR fs:[edx+0x726e1bf],1
  418bbb:	sbb    esi,eax
  418bbd:	enter  0xd1c,0x80
  418bc1:	clc    
  418bc2:	(bad)  
  418bc3:	ins    DWORD PTR es:[edi],dx
  418bc4:	sub    eax,0x20d3ec57
  418bc9:	mov    ecx,DWORD PTR [edi]
  418bcb:	jge    0x418bb1
  418bcd:	fsubr  st(3),st
  418bcf:	and    al,BYTE PTR [edi-0x4f2fe7bc]
  418bd5:	mov    cs,WORD PTR [ebx-0x36]
  418bd8:	xor    BYTE PTR [ecx],ah
  418bda:	retf   0xc142
  418bdd:	mov    edx,0x4d089903
  418be2:	shl    DWORD PTR [eax+eax*1-0x4f],0xcb
  418be7:	inc    ebp
  418be8:	ror    DWORD PTR [eax],cl
  418bea:	stos   DWORD PTR es:[edi],eax
  418beb:	and    ebx,DWORD PTR [eax+0x37d4be95]
  418bf1:	aad    0xe2
  418bf3:	push   ds
  418bf4:	add    eax,0x3ee46e17
  418bfa:	imul   ecx,DWORD PTR [ecx],0x13
  418bfd:	cld    
  418bfe:	mov    BYTE PTR ds:0x950dfc56,ch
  418c04:	sub    al,0x4b
  418c06:	in     eax,0xf
  418c08:	mov    ds:0x6cab7f6b,eax
  418c0d:	push   ss
  418c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c0f:	fadd   st,st(1)
  418c11:	test   DWORD PTR [esp+esi*8+0x75457f2c],edi
  418c18:	hlt    
  418c19:	retf   0x587c
  418c1c:	cmp    al,0x10
  418c1e:	mov    esi,0xf31eafc9
  418c23:	leave  
  418c24:	lahf   
  418c25:	imul   ecx,DWORD PTR [eax+0x4df7893a],0x6c7a311a
  418c2f:	xor    bl,cl
  418c31:	xor    al,0x1b
  418c33:	ds into 
  418c35:	fnstsw WORD PTR [eax+0x34d56240]
  418c3b:	pop    esi
  418c3c:	fwait
  418c3d:	xchg   ebp,eax
  418c3e:	(bad)  
  418c3f:	in     al,0x32
  418c41:	popf   
  418c42:	lods   eax,DWORD PTR ds:[esi]
  418c43:	cmp    BYTE PTR [ebx-0x59],cl
  418c46:	and    eax,0x3c6052ef
  418c4b:	mov    al,0xac
  418c4d:	push   ecx
  418c4e:	ss mov ah,0xe7
  418c51:	cs icebp 
  418c53:	mov    bh,0x4d
  418c55:	test   BYTE PTR [edi],0x8
  418c58:	iret   
  418c59:	ins    BYTE PTR es:[edi],dx
  418c5a:	in     al,dx
  418c5b:	pop    eax
  418c5c:	push   ecx
  418c5d:	jle    0x418cab
  418c5f:	inc    eax
  418c60:	mov    edi,0x96b93d12
  418c65:	and    edi,DWORD PTR [eax]
  418c67:	add    al,BYTE PTR es:[esi+0x26]
  418c6b:	xlat   BYTE PTR ds:[ebx]
  418c6c:	and    al,0xc5
  418c6e:	out    0x8,eax
  418c70:	ret    0x1ba3
  418c73:	not    DWORD PTR [ebp-0x2cb0e9d8]
  418c79:	push   0x7e
  418c7b:	sub    ecx,ebp
  418c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c7e:	xor    edx,ebp
  418c80:	(bad)  
  418c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c84:	lds    esi,FWORD PTR [edi+0x4fc25c7a]
  418c8a:	xchg   ebp,eax
  418c8b:	div    BYTE PTR [esi]
  418c8d:	or     al,cl
  418c8f:	icebp  
  418c90:	imul   edx,ecx,0x37
  418c93:	dec    edx
  418c94:	and    dh,BYTE PTR [esi-0x7c]
  418c97:	pop    ss
  418c98:	daa    
  418c99:	in     eax,dx
  418c9a:	dec    ebp
  418c9b:	ret    
  418c9c:	mov    ah,0xbc
  418c9e:	mov    al,0x64
  418ca0:	mov    ecx,0xa94434b3
  418ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca6:	pop    edi
  418ca7:	test   eax,0xc256d129
  418cac:	or     al,0x6
  418cae:	mov    ?,WORD PTR [eax]
  418cb0:	jmp    0x418ce2
  418cb2:	call   0x1a9dcc46
  418cb7:	sub    eax,0x5a03f0ed
  418cbc:	pusha  
  418cbd:	gs scas eax,DWORD PTR es:[edi]
  418cbf:	jmp    0xfff16733
  418cc4:	inc    edi
  418cc5:	retf   0xc980
  418cc8:	enter  0xfc2d,0x2d
  418ccc:	lea    esp,ds:0x4539733f
  418cd2:	jmp    0xa320:0xf42d391e
  418cd9:	iret   
  418cda:	cmp    al,0x78
  418cdc:	mov    WORD PTR [edi-0x60],cs
  418cdf:	mov    ds:0x2ea8da13,eax
  418ce4:	xor    edi,0x41
  418ce7:	xor    bh,ah
  418ce9:	test   BYTE PTR [edi+0x7d],ch
  418cec:	int3   
  418ced:	loopne 0x418d65
  418cef:	inc    ebp
  418cf0:	mov    fs,WORD PTR [esi+ebp*1]
  418cf3:	xchg   edi,eax
  418cf4:	adc    eax,0x8a9c1c0d
  418cf9:	ins    DWORD PTR es:[edi],dx
  418cfa:	mov    al,0xef
  418cfc:	sti    
  418cfd:	dec    ebx
  418cfe:	enter  0x46e5,0x50
  418d02:	fldcw  WORD PTR [ebp-0x5921d58]
  418d08:	(bad)  
  418d09:	std    
  418d0a:	(bad)  
  418d0b:	and    ch,dh
  418d0d:	ins    DWORD PTR es:[edi],dx
  418d0e:	lods   eax,DWORD PTR ds:[esi]
  418d0f:	cmp    al,0x3a
  418d11:	ins    DWORD PTR es:[edi],dx
  418d12:	push   0x285a1306
  418d17:	les    eax,FWORD PTR [ecx-0x74]
  418d1a:	jmp    0x9c3e:0x5175bd18
  418d21:	or     ebx,DWORD PTR [ecx]
  418d23:	stos   DWORD PTR es:[edi],eax
  418d24:	or     esp,DWORD PTR [ebx]
  418d26:	out    dx,eax
  418d27:	dec    DWORD PTR [ebx]
  418d29:	in     al,dx
  418d2a:	xor    BYTE PTR [ecx-0x2ae531c3],bh
  418d30:	icebp  
  418d31:	and    ch,ah
  418d33:	dec    ebx
  418d34:	fcmove st,st(4)
  418d36:	adc    DWORD PTR [edi+0x7b],ebp
  418d39:	jae    0x418d60
  418d3b:	add    eax,0x6969eb46
  418d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d41:	jne    0x418da8
  418d43:	jnp    0x418d87
  418d45:	scas   eax,DWORD PTR es:[edi]
  418d46:	bound  eax,QWORD PTR [ebx+esi*2]
  418d49:	or     DWORD PTR [edi+0xc684bb6],edx
  418d4f:	fnstsw WORD PTR [ebx-0x1987a44d]
  418d55:	mov    al,ds:0xddc12b76
  418d5a:	adc    dh,bl
  418d5c:	iret   
  418d5d:	mov    esp,ebp
  418d5f:	das    
  418d60:	shr    DWORD PTR [ebp+0x5fc1a24a],cl
  418d66:	aaa    
  418d67:	lods   al,BYTE PTR ds:[esi]
  418d68:	mov    ebx,DWORD PTR [edi+0x7767e47b]
  418d6e:	cli    
  418d6f:	dec    esi
  418d70:	cwde   
  418d71:	xchg   ebp,eax
  418d72:	lock mov esp,0xf5d81211
  418d78:	retf   0xcabc
  418d7b:	add    ecx,ecx
  418d7d:	xchg   ebx,eax
  418d7e:	ja     0x418d78
  418d80:	mov    al,ds:0x2aea1ee9
  418d85:	dec    ecx
  418d86:	rol    BYTE PTR [ebx+0x3a32b175],1
  418d8c:	cld    
  418d8d:	lods   eax,DWORD PTR ds:[esi]
  418d8e:	mov    cl,0x54
  418d90:	shl    BYTE PTR [edx*4-0x5e286c5d],1
  418d97:	sbb    al,0x48
  418d99:	pop    ebp
  418d9a:	adc    eax,0x44014361
  418d9f:	mov    dl,0x61
  418da1:	jno    0x418df0
  418da3:	stc    
  418da4:	inc    ebx
  418da5:	fcomi  st,st(2)
  418da7:	or     al,0xf9
  418da9:	sub    BYTE PTR [eax+0xa],al
  418dac:	jg     0x418dec
  418dae:	xchg   ebx,eax
  418daf:	push   cs
  418db0:	lahf   
  418db1:	pushf  
  418db2:	sub    esp,edi
  418db4:	inc    esp
  418db5:	pop    ecx
  418db6:	mov    DWORD PTR [eax],ebp
  418db8:	sub    al,0x3
  418dba:	pop    ss
  418dbb:	jecxz  0x418e1c
  418dbd:	stc    
  418dbe:	xlat   BYTE PTR ds:[ebx]
  418dbf:	rcl    BYTE PTR [esp+eiz*2+0x4169fa61],0x7e
  418dc7:	inc    esi
  418dc8:	and    eax,0x48e0e125
  418dcd:	ret    0xb027
  418dd0:	jae    0x418e1a
  418dd2:	mov    bh,0xa9
  418dd4:	inc    ecx
  418dd5:	int    0xf2
  418dd7:	mov    esp,0x2eeb0c16
  418ddc:	push   esi
  418ddd:	xor    cl,dl
  418ddf:	ds lock mov cl,0x6b
  418de3:	add    eax,0xf3c109cd
  418de8:	jle    0x418d93
  418dea:	into   
  418deb:	fwait
  418dec:	adc    al,0xb4
  418dee:	mov    dl,0x75
  418df0:	jl     0x418e18
  418df2:	popa   
  418df3:	and    dh,bh
  418df5:	ds ins DWORD PTR es:[edi],dx
  418df7:	mov    esp,ebp
  418df9:	call   0xa046:0x80a7960f
  418e00:	jo     0x418df2
  418e02:	pusha  
  418e03:	mov    al,ds:0x7cee1492
  418e08:	dec    ecx
  418e09:	mov    dl,bh
  418e0b:	cmp    al,0xc9
  418e0d:	das    
  418e0e:	in     eax,0x58
  418e10:	sti    
  418e11:	fdivr  st(6),st
  418e13:	cmp    al,0x0
  418e15:	adc    al,BYTE PTR [esi]
  418e17:	scas   al,BYTE PTR es:[edi]
  418e18:	cld    
  418e19:	sbb    dh,ch
  418e1b:	sub    BYTE PTR [eax+esi*8-0x3a5cbf38],0xd7
  418e23:	or     edx,DWORD PTR [ebx]
  418e25:	dec    ecx
  418e26:	jae    0x418dcc
  418e28:	mov    DWORD PTR [esi],edi
  418e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e2b:	pop    ecx
  418e2c:	ficomp DWORD PTR [esi+0x1d]
  418e2f:	call   0x37c09b69
  418e34:	ret    0x9439
  418e37:	pop    edi
  418e38:	call   0x7c85660b
  418e3d:	mov    al,0x33
  418e3f:	sbb    eax,0x9d207420
  418e44:	adc    esi,DWORD PTR [edx]
  418e46:	in     al,dx
  418e47:	repz test BYTE PTR [di+0x2d],0xf5
  418e4d:	mov    bl,0xd
  418e4f:	sbb    al,0xbd
  418e51:	sbb    al,0x9f
  418e53:	xchg   esi,eax
  418e54:	fcom   DWORD PTR [ebp-0x526909a7]
  418e5a:	dec    edx
  418e5b:	mov    ds:0x36f0f3d2,al
  418e60:	adc    dl,BYTE PTR [ebp-0x1e]
  418e63:	push   ebp
  418e64:	test   BYTE PTR [ebx-0xfa68da8],bl
  418e6a:	test   DWORD PTR [esp+eax*1-0x66],0x683909ce
  418e72:	push   eax
  418e73:	fwait
  418e74:	push   0x72a46db8
  418e79:	bound  eax,QWORD PTR [eax+0xa]
  418e7c:	xlat   BYTE PTR ds:[ebx]
  418e7d:	xchg   ecx,eax
  418e7e:	adc    dl,BYTE PTR [edi]
  418e80:	imul   ecx,DWORD PTR [esp+ebp*1],0x10
  418e84:	rcl    DWORD PTR [ebx],0xbc
  418e87:	xor    eax,0xbe80ae22
  418e8c:	pop    ebp
  418e8d:	pushw  ss
  418e8f:	add    edi,DWORD PTR [esi-0x7924daab]
  418e95:	dec    ecx
  418e96:	adc    ch,BYTE PTR [ebp-0x25255c06]
  418e9c:	push   ss
  418e9d:	out    0x3a,eax
  418e9f:	add    edi,edi
  418ea1:	sub    BYTE PTR [edi],bl
  418ea3:	test   eax,0x32b50e57
  418ea8:	retf   0xe1e8
  418eab:	test   eax,0xb03116d6
  418eb0:	jae    0x418ee6
  418eb2:	inc    ecx
  418eb3:	inc    ebp
  418eb4:	cmp    DWORD PTR [edx-0x2671d2ec],ebp
  418eba:	mov    edx,DWORD PTR [eax-0x2a]
  418ebd:	jmp    0xeb29:0x34f22b86
  418ec4:	ret    0x35ea
  418ec7:	pcmpgtb mm1,QWORD PTR [edx+0x72]
  418ecb:	xor    eax,0xbc5faf92
  418ed0:	loope  0x418ee9
  418ed2:	(bad)  
  418ed3:	mul    ebp
  418ed5:	ds cmp ecx,ebx
  418ed8:	rol    DWORD PTR [ebx+ebx*4+0x3b04d5a8],0x29
  418ee0:	fdiv   DWORD PTR [ebp-0x1305c44f]
  418ee6:	ret    
  418ee7:	cs mov ecx,0x86d66cd
  418eed:	mov    DWORD PTR [ecx-0x26],edi
  418ef0:	cmp    BYTE PTR ds:0x25eba3d1,al
  418ef6:	dec    ecx
  418ef7:	push   0x8ff0c682
  418efc:	retf   
  418efd:	pop    esi
  418efe:	push   edx
  418eff:	jl     0x418f75
  418f01:	cs scas eax,DWORD PTR es:[edi]
  418f03:	inc    ebp
  418f04:	stos   BYTE PTR es:[edi],al
  418f05:	xchg   esi,eax
  418f06:	(bad)  
  418f07:	sub    cl,al
  418f09:	adc    eax,0xb209d2d6
  418f0e:	loop   0x418f8e
  418f10:	xchg   edi,eax
  418f11:	push   esp
  418f12:	neg    DWORD PTR [esi]
  418f14:	popa   
  418f15:	add    eax,0xc629fcf1
  418f1a:	and    al,0x37
  418f1c:	call   0xefa540b6
  418f21:	mov    bh,0xff
  418f23:	add    BYTE PTR [ebx-0x6a],0x7
  418f27:	jb     0x418f48
  418f29:	mov    esi,0xc1eacaa8
  418f2e:	test   al,0x5b
  418f30:	(bad)  
  418f31:	sbb    ah,BYTE PTR [edi+0x66]
  418f34:	sar    DWORD PTR [ecx],cl
  418f36:	mov    cl,0x91
  418f38:	jmp    0x204205c4
  418f3d:	fnstenv [ebp-0x7e20e7c2]
  418f43:	inc    ebp
  418f44:	(bad)  
  418f45:	pop    eax
  418f46:	jl     0x418f0c
  418f48:	cld    
  418f49:	jl     0x418f5e
  418f4b:	ins    BYTE PTR es:[edi],dx
  418f4c:	inc    esp
  418f4d:	popa   
  418f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f4f:	and    ebp,DWORD PTR [edx-0x70f5ac7b]
  418f55:	call   0xed46:0x5eacd325
  418f5c:	push   ecx
  418f5d:	xor    BYTE PTR [ecx+edi*1],ah
  418f60:	and    al,0x7b
  418f62:	cdq    
  418f63:	mov    ecx,DWORD PTR [ebp+0x7c5012b2]
  418f69:	xor    al,0x51
  418f6b:	inc    ebp
  418f6c:	or     ebx,edx
  418f6e:	sub    al,0x9e
  418f70:	mov    ebx,0x3abbbcca
  418f75:	cli    
  418f76:	ficomp WORD PTR [edi-0x5299a710]
  418f7c:	popa   
  418f7d:	pop    ss
  418f7e:	cmp    eax,0xc76cb9a3
  418f83:	xlat   BYTE PTR ds:[ebx]
  418f84:	in     eax,dx
  418f85:	imul   edi,DWORD PTR [edi+ebx*1+0x43],0x474be147
  418f8d:	mov    esi,0xcf799325
  418f92:	lods   eax,DWORD PTR ds:[esi]
  418f93:	sbb    eax,0x70c5b86c
  418f98:	inc    esp
  418f99:	retf   0xc565
  418f9c:	test   al,0xf7
  418f9e:	xor    al,0x97
  418fa0:	sbb    BYTE PTR [esi-0x5ffaf802],dh
  418fa6:	arpl   WORD PTR [ebx-0x287d1116],di
  418fac:	loopne 0x418f92
  418fae:	bound  edi,QWORD PTR [ecx+0x62]
  418fb1:	ins    BYTE PTR es:[edi],dx
  418fb2:	sbb    ecx,DWORD PTR [edx+0x3d]
  418fb5:	(bad)  
  418fb6:	cld    
  418fb7:	mov    al,0x87
  418fb9:	lds    ebp,FWORD PTR [ecx-0x4a34aea6]
  418fbf:	je     0x41900b
  418fc1:	add    BYTE PTR [edi-0x5d4eef12],bh
  418fc7:	sti    
  418fc8:	adc    edx,ebp
  418fca:	cmp    eax,0xf58d2250
  418fcf:	bound  eax,QWORD PTR [ebx]
  418fd1:	inc    edx
  418fd2:	fcomip st,st(6)
  418fd4:	fsubr  DWORD PTR [ebx+0x6646398d]
  418fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fdb:	jl     0x418fd3
  418fdd:	fnsave [esi+0x2e56bb10]
  418fe3:	in     eax,0x97
  418fe5:	or     ebx,DWORD PTR [edi+edi*2-0x3d70cd6]
  418fec:	gs aam 0xf4
  418fef:	out    dx,eax
  418ff0:	or     al,BYTE PTR [ecx]
  418ff2:	in     al,dx
  418ff3:	ss jo  0x418faa
  418ff6:	lea    ecx,[eax+0x22]
  418ff9:	cmove  ebx,DWORD PTR [ebx]
  418ffc:	jmp    0x418fa6
  418ffe:	popf   
  418fff:	repnz cmp ebx,edx
  419002:	push   esp
  419003:	aaa    
  419004:	stos   DWORD PTR es:[edi],eax
  419005:	sti    
  419006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419007:	jo     0x419082
  419009:	jl     0x419074
  41900b:	pop    ss
  41900c:	xchg   edx,eax
  41900d:	outs   dx,BYTE PTR ds:[esi]
  41900e:	mov    al,0xc1
  419010:	pushf  
  419011:	fstp   QWORD PTR [esi+0x2b660d4]
  419017:	sub    edi,DWORD PTR [edx]
  419019:	cmovnp ebp,DWORD PTR [ebx+0x2dabaae]
  419020:	adc    BYTE PTR [edi+eax*2+0x17],al
  419024:	lds    edi,FWORD PTR [edi+esi*1]
  419027:	sbb    ecx,ecx
  419029:	dec    edx
  41902a:	pop    ebx
  41902b:	jnp    0x418feb
  41902d:	ds popf 
  41902f:	outs   dx,BYTE PTR ds:[esi]
  419030:	jbe    0x41909c
  419032:	jbe    0x41902d
  419034:	push   es
  419035:	mul    BYTE PTR [eax-0x3d]
  419038:	out    0x6,al
  41903a:	or     esi,DWORD PTR [ebp-0x7a]
  41903d:	or     DWORD PTR [ecx+esi*2+0x675d0cec],esi
  419044:	mov    ebp,0x2ea4d511
  419049:	cmc    
  41904a:	inc    BYTE PTR [ebx-0x2]
  41904d:	xor    al,dl
  41904f:	lahf   
  419050:	data16 jb 0x41909b
  419053:	push   0x149e602
  419058:	xor    eax,0xcbfeed17
  41905d:	sub    DWORD PTR [edi],esi
  41905f:	jnp    0x419031
  419061:	pop    ecx
  419062:	out    dx,eax
  419063:	sbb    bh,BYTE PTR [esp+eiz*2+0x6c]
  419067:	rsm    
  419069:	xor    eax,DWORD PTR ds:[ebp+0x543fbb17]
  419070:	rcr    bl,1
  419072:	in     eax,dx
  419073:	je     0x41900d
  419075:	out    0x3e,al
  419077:	(bad)  
  419078:	mov    ds:0xfe901c17,al
  41907d:	aad    0xb8
  41907f:	(bad)  
  419080:	stc    
  419081:	outs   dx,DWORD PTR ds:[esi]
  419082:	push   eax
  419083:	mov    es,WORD PTR [ebx+0x1482496d]
  419089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41908a:	cwde   
  41908b:	outs   dx,BYTE PTR ds:[esi]
  41908c:	imul   BYTE PTR [esi]
  41908e:	pop    ebx
  41908f:	inc    ecx
  419090:	lods   al,BYTE PTR ds:[esi]
  419091:	mov    WORD PTR [edx],ds
  419093:	sub    eax,0xeeff65a9
  419098:	shl    cl,0x7
  41909b:	lea    ebx,[eax+0x5b]
  41909e:	sub    DWORD PTR [esi+0x5d7c971f],ebp
  4190a4:	(bad)  
  4190a5:	leave  
  4190a6:	ins    DWORD PTR es:[edi],dx
  4190a7:	and    BYTE PTR [eax+0x4c780f0b],ch
  4190ad:	mov    ds:0x8637649f,eax
  4190b2:	push   ecx
  4190b3:	sub    ah,cl
  4190b5:	dec    DWORD PTR ds:0x5518c60e
  4190bb:	cli    
  4190bc:	psraw  mm1,QWORD PTR es:[edx]
  4190c0:	sub    esi,DWORD PTR [edi+0x73]
  4190c3:	in     eax,0x41
  4190c5:	dec    esp
  4190c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190c7:	lahf   
  4190c8:	cmp    bh,dh
  4190ca:	ror    BYTE PTR [edx],cl
  4190cc:	fild   QWORD PTR [esi-0x659848a5]
  4190d2:	retf   
  4190d3:	out    dx,eax
  4190d4:	xchg   ecx,eax
  4190d5:	fldenv [eax-0x65]
  4190d8:	push   edx
  4190d9:	pop    ds
  4190da:	xor    edi,DWORD PTR [edi+edi*8]
  4190dd:	jmp    0x41906e
  4190df:	imul   edx,DWORD PTR [edi+0x4ae63c06],0x6f
  4190e6:	das    
  4190e7:	ret    
  4190e8:	pop    ss
  4190e9:	mov    bh,0x58
  4190eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190ec:	lods   eax,DWORD PTR ds:[esi]
  4190ed:	mov    ds:0x5284289,al
  4190f2:	aas    
  4190f3:	in     al,dx
  4190f4:	mov    ds:0xcab6a636,al
  4190f9:	aaa    
  4190fa:	cmp    bl,BYTE PTR [esp+eiz*8+0x2bb35dc2]
  419101:	inc    edi
  419102:	aaa    
  419103:	dec    edi
  419104:	rcl    BYTE PTR [edx],cl
  419106:	js     0x4190ea
  419108:	out    dx,al
  419109:	std    
  41910a:	aam    0xe3
  41910c:	les    edx,FWORD PTR [ecx+0x6]
  41910f:	cmp    ebx,ebx
  419111:	iret   
  419112:	add    BYTE PTR [eax-0x54],dl
  419115:	ret    0x688c
  419118:	mov    edx,0x379ef1a7
  41911d:	shr    DWORD PTR [edi-0x4cf8ce13],0xa8
  419124:	stos   DWORD PTR es:[edi],eax
  419125:	in     eax,dx
  419126:	sub    cl,BYTE PTR [edx]
  419128:	inc    ebx
  419129:	cmp    al,0x8a
  41912b:	mov    ebx,DWORD PTR [ecx]
  41912d:	adc    dh,ch
  41912f:	inc    ebx
  419130:	push   0x22cd6ef6
  419135:	xchg   edx,eax
  419136:	lods   al,BYTE PTR ds:[esi]
  419137:	bswap  eax
  419139:	mov    al,0xe2
  41913b:	lea    eax,[eax+0x72]
  41913e:	xchg   ecx,eax
  41913f:	jb     0x4191ad
  419141:	ror    BYTE PTR [eax-0x39d62713],1
  419147:	xchg   ebp,eax
  419148:	jns    0x419192
  41914a:	ins    DWORD PTR es:[edi],dx
  41914b:	adc    eax,0xa5de5023
  419150:	mov    al,ds:0x2473616a
  419155:	dec    edi
  419156:	push   eax
  419157:	dec    eax
  419158:	daa    
  419159:	xor    eax,0x8e5278a1
  41915e:	sar    edx,0x10
  419161:	lds    eax,FWORD PTR [ecx]
  419163:	ret    0x6279
  419166:	or     eax,DWORD PTR [eax+eiz*2-0x18c248c7]
  41916d:	cmp    BYTE PTR [edi],dh
  41916f:	mov    ecx,0xeb4bda8e
  419174:	jge    0x419173
  419176:	sbb    edx,DWORD PTR [eax+eax*4+0xc0e72d7]
  41917d:	test   ah,cl
  41917f:	fcom   DWORD PTR [edi-0x4a]
  419182:	jno    0x419121
  419184:	sbb    edx,DWORD PTR [ebx+0x3eb5e3db]
  41918a:	fild   QWORD PTR [edx+0x7938b2e1]
  419190:	in     eax,0xd8
  419192:	les    edx,FWORD PTR [esi]
  419194:	cli    
  419195:	fnsave [esi]
  419197:	std    
  419198:	xor    esi,ebx
  41919a:	in     eax,dx
  41919b:	push   esp
  41919c:	scas   eax,DWORD PTR es:[edi]
  41919d:	sub    ch,dl
  41919f:	dec    edx
  4191a0:	rcr    DWORD PTR [edi],0xee
  4191a3:	sbb    eax,0x62c51e2b
  4191a8:	out    0xc4,al
  4191aa:	pop    ebx
  4191ac:	leave  
  4191ad:	sbb    BYTE PTR [ebx*8+0x3c2224ed],ah
  4191b4:	add    BYTE PTR [edi+0x36],bh
  4191b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b8:	push   cs
  4191b9:	mov    bl,BYTE PTR [esi-0x3f]
  4191bc:	mov    eax,cr6
  4191bf:	outs   dx,BYTE PTR ds:[esi]
  4191c0:	sub    al,0x1f
  4191c2:	retf   
  4191c3:	test   BYTE PTR [ecx+eax*8],ah
  4191c6:	mov    ah,0xf1
  4191c8:	(bad)  
  4191c9:	xlat   BYTE PTR ds:[ebx]
  4191ca:	enter  0x62b,0x62
  4191ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191cf:	push   es
  4191d0:	jbe    0x419187
  4191d2:	dec    ebp
  4191d4:	data16 int3 
  4191d6:	loop   0x4191cb
  4191d8:	stos   BYTE PTR es:[edi],al
  4191d9:	cwde   
  4191da:	mov    ds:0x769bebd6,al
  4191df:	jle    0x419175
  4191e1:	xor    esi,DWORD PTR [edx+0x38]
  4191e4:	inc    esi
  4191e5:	ins    DWORD PTR es:[edi],dx
  4191e6:	fild   WORD PTR [esi]
  4191e8:	mov    ebx,0x391838da
  4191ed:	jge    0x41921a
  4191ef:	rol    esp,cl
  4191f1:	pop    edx
  4191f2:	xchg   edi,eax
  4191f3:	mov    cs,WORD PTR [ebp+0x66ab2ea6]
  4191f9:	fbld   TBYTE PTR [ebp+0x7c]
  4191fc:	inc    ebp
  4191fd:	and    esi,edx
  4191ff:	vmread DWORD PTR [ebp+0x10317c32],ebp
  419206:	xor    bh,BYTE PTR [edx-0x2e]
  419209:	(bad)  
  41920a:	sti    
  41920b:	xchg   esp,eax
  41920c:	(bad)  
  41920d:	push   0x2e
  41920f:	sbb    DWORD PTR [esi],0xffffffa4
  419212:	lds    edx,FWORD PTR [ecx-0x43]
  419215:	mov    fs,WORD PTR [edx+eax*8]
  419218:	inc    ebx
  419219:	cmp    eax,DWORD PTR [edi-0x78]
  41921c:	push   0xa8c2d350
  419221:	hlt    
  419222:	das    
  419223:	leave  
  419224:	(bad)  
  419225:	xchg   edi,eax
  419226:	mov    es,edx
  419228:	icebp  
  419229:	lods   al,BYTE PTR ds:[esi]
  41922a:	std    
  41922b:	loop   0x419212
  41922d:	scas   al,BYTE PTR es:[edi]
  41922e:	loopne 0x41921a
  419230:	xchg   edx,eax
  419231:	dec    esi
  419232:	test   al,0xe0
  419234:	scas   al,BYTE PTR es:[edi]
  419235:	push   ebp
  419236:	bound  esp,QWORD PTR [edx+0x4955603a]
  41923c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41923e:	jecxz  0x419284
  419240:	mov    edx,0x4c6200d6
  419245:	xchg   ecx,eax
  419246:	loopne 0x419224
  419248:	and    DWORD PTR [edi],ebx
  41924a:	mov    ah,0x58
  41924c:	jne    0x4191f8
  41924e:	mov    ebp,0x9f4603e5
  419253:	cwde   
  419254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419255:	outs   dx,DWORD PTR ds:[esi]
  419256:	jg     0x4192bb
  419258:	mov    WORD PTR [esi-0x4a],fs
  41925b:	push   ebp
  41925c:	and    BYTE PTR [eax],al
  41925e:	loopne 0x4192af
  419260:	shr    DWORD PTR [ebp+0x23fed515],0xf6
  419267:	adc    edi,ebx
  419269:	mov    dl,0x38
  41926b:	xor    bl,BYTE PTR [eax]
  41926d:	aaa    
  41926e:	stos   DWORD PTR es:[edi],eax
  41926f:	ret    0xabcd
  419272:	sub    al,0x34
  419274:	shl    esp,1
  419276:	push   edx
  419277:	jbe    0x419267
  419279:	leave  
  41927a:	stc    
  41927b:	cld    
  41927c:	xchg   edx,eax
  41927d:	add    eax,0xb137a93e
  419282:	mov    dh,0xb9
  419284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419285:	jecxz  0x4192df
  419287:	sahf   
  419288:	xchg   ebp,eax
  419289:	push   edx
  41928a:	sbb    BYTE PTR [ebx+0x172e07ad],ah
  419290:	fcom   QWORD PTR [edx+0x6e045a3a]
  419296:	or     DWORD PTR [edi-0x9eb28a5],0x53
  41929d:	xor    edx,DWORD PTR ds:0xdd22ec8c
  4192a3:	mov    dl,0x84
  4192a5:	or     DWORD PTR [eax+ebp*4-0x55b94e39],ebp
  4192ac:	popf   
  4192ad:	and    al,0x7
  4192af:	int    0x81
  4192b1:	icebp  
  4192b2:	cs or  al,0xcc
  4192b5:	ret    
  4192b6:	and    al,0x6d
  4192b8:	jmp    0x605b:0x6b80e7d6
  4192bf:	std    
  4192c0:	addr16 into 
  4192c2:	data16 jne 0x41926d
  4192c5:	pop    eax
  4192c6:	mov    edi,0xf4c0e7af
  4192cb:	inc    edi
  4192cc:	cwde   
  4192cd:	mov    eax,ds:0xa30ca32f
  4192d2:	enter  0x8e19,0xc7
  4192d6:	inc    esi
  4192d7:	sti    
  4192d8:	lods   al,BYTE PTR ds:[esi]
  4192d9:	data16 sbb cl,BYTE PTR [eax]
  4192dc:	rcl    ebx,cl
  4192de:	xor    ch,BYTE PTR [ebp-0x48]
  4192e1:	fdivrp st(2),st
  4192e3:	stc    
  4192e4:	jmp    0x4192c1
  4192e6:	retf   
  4192e7:	sti    
  4192e8:	xchg   BYTE PTR [ebp+eax*4-0x44],al
  4192ec:	popa   
  4192ed:	xchg   ebx,eax
  4192ee:	mov    ebx,esp
  4192f0:	jmp    0x4192c3
  4192f2:	nop
  4192f3:	sub    eax,0xb203e173
  4192f8:	call   DWORD PTR ds:0x96d4aad9
  4192fe:	mov    ebp,0xdee96c55
  419303:	retf   0xf484
  419306:	pop    ss
  419307:	out    dx,eax
  419308:	inc    ecx
  419309:	loope  0x4192db
  41930b:	mov    ecx,0xefe3ddb5
  419310:	les    eax,FWORD PTR [edx-0x74]
  419313:	mov    bl,0x9e
  419315:	mov    bl,0x35
  419317:	ins    BYTE PTR es:[edi],dx
  419318:	push   eax
  419319:	pushf  
  41931a:	mov    eax,ds:0xe8187080
  41931f:	mov    ebx,0x419b0dd0
  419324:	push   esp
  419325:	and    al,0x1e
  419327:	sub    dh,BYTE PTR [edx-0x372d1172]
  41932d:	sub    eax,0xbe662493
  419332:	adc    ecx,DWORD PTR es:[ecx-0x1e]
  419336:	ja     0x419378
  419338:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41933a:	rol    DWORD PTR [ebx],0x6e
  41933d:	mov    ch,0x7d
  41933f:	sub    cl,ah
  419341:	or     ecx,DWORD PTR [ebx+edx*4-0x1a4ebb0c]
  419348:	jl     0x41935c
  41934a:	push   ecx
  41934b:	cmp    eax,0xc592b278
  419350:	sbb    ecx,DWORD PTR [esi]
  419352:	and    DWORD PTR [ebx-0x44be94d],eax
  419358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419359:	nop
  41935a:	or     BYTE PTR [ebp+0x50],dl
  41935d:	jecxz  0x419378
  41935f:	push   esi
  419360:	bound  eax,QWORD PTR [esi]
  419362:	out    0x10,al
  419364:	jmp    0x4193aa
  419366:	(bad)  
  419368:	mov    dh,0x51
  41936a:	add    BYTE PTR [edx+0x19],cl
  41936d:	mov    al,0xf6
  41936f:	pop    ebx
  419370:	ins    BYTE PTR es:[edi],dx
  419371:	jo     0x4193cc
  419373:	mov    eax,ds:0x598bbc30
  419378:	data16 adc al,0x4b
  41937b:	mov    bl,0xce
  41937d:	jae    0x419368
  41937f:	sbb    BYTE PTR [ebx-0x5582d64e],0x6d
  419386:	and    DWORD PTR cs:[ecx-0x5b],ecx
  41938a:	pop    ecx
  41938b:	mov    edi,0xec213461
  419390:	push   ebx
  419391:	repz div dh
  419394:	lock cdq 
  419396:	outs   dx,DWORD PTR ds:[esi]
  419397:	jmp    0x41939e
  419399:	sbb    BYTE PTR [ebx+0x5c1b9a39],dh
  41939f:	nop
  4193a0:	stos   DWORD PTR es:[edi],eax
  4193a1:	sbb    cl,bh
  4193a3:	out    0x76,eax
  4193a5:	sub    DWORD PTR [ebp+0x1],ecx
  4193a8:	enter  0xdcf0,0x69
  4193ac:	pop    ds
  4193ad:	dec    esp
  4193ae:	fstp   DWORD PTR [ecx-0x74cca57d]
  4193b4:	sahf   
  4193b5:	out    0x70,eax
  4193b7:	imul   esp,DWORD PTR [edi-0xdda4071],0x4b
  4193be:	(bad)  
  4193bf:	fstp   TBYTE PTR [ebx-0x56]
  4193c2:	fadd   DWORD PTR [ebx-0x2d3d69ff]
  4193c8:	mov    ah,0x9b
  4193ca:	sub    BYTE PTR [edx],0xff
  4193cd:	shr    BYTE PTR [edi+0x47],0xdf
  4193d1:	mov    ds:0x870cbdf4,eax
  4193d6:	cld    
  4193d7:	cmp    cl,ah
  4193d9:	pop    ss
  4193da:	(bad)  
  4193db:	lock sub esi,DWORD PTR [edi-0x2e0d45ab]
  4193e2:	mov    ebx,DWORD PTR [ecx-0x5962fa32]
  4193e8:	xchg   ebp,eax
  4193e9:	daa    
  4193ea:	dec    ebx
  4193eb:	mov    BYTE PTR [edi+0x6c],dl
  4193ee:	adc    eax,0xfa0fbc07
  4193f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193f4:	imul   BYTE PTR [ecx]
  4193f6:	fist   DWORD PTR [ebx-0x51]
  4193f9:	sbb    DWORD PTR [edx-0x7d],ebx
  4193fc:	shl    BYTE PTR [edi+0x73],0xf
  419400:	push   ss
  419401:	test   BYTE PTR [ebx+0x57],cl
  419404:	nop
  419405:	test   BYTE PTR [eax+0x39cdcb99],bh
  41940b:	ds aad 0xb3
  41940e:	fsub   QWORD PTR [ebp-0x59]
  419411:	test   BYTE PTR [edx-0x4e710dab],dl
  419417:	xor    BYTE PTR [eax],ah
  419419:	lods   al,BYTE PTR ds:[esi]
  41941a:	leave  
  41941b:	ins    DWORD PTR es:[edi],dx
  41941c:	and    ebx,DWORD PTR [esi+0x30]
  41941f:	jo     0x41945f
  419421:	mov    ds:0x170da092,eax
  419426:	or     eax,0x1eac78ea
  41942b:	mov    dh,0x3f
  41942d:	jecxz  0x419478
  41942f:	dec    ebp
  419430:	cwde   
  419431:	pop    esi
  419432:	mov    edi,0x9bc67581
  419437:	jno    0x419498
  419439:	ss icebp 
  41943b:	push   ecx
  41943c:	push   0x8
  41943e:	cmp    esi,0xffffffc2
  419441:	out    0x41,al
  419443:	jns    0x4193d6
  419445:	inc    ecx
  419446:	iret   
  419447:	js     0x419451
  419449:	pop    ebp
  41944a:	dec    esp
  41944b:	sahf   
  41944c:	push   ebx
  41944d:	test   al,0xaa
  41944f:	js     0x419492
  419451:	mov    esp,0x71837cd5
  419456:	in     eax,0x59
  419458:	add    BYTE PTR [esi-0x1a6bef02],ah
  41945e:	test   DWORD PTR [ecx-0x4c],eax
  419461:	lds    eax,FWORD PTR [ecx]
  419463:	mov    ah,0xb9
  419465:	stos   BYTE PTR es:[edi],al
  419466:	retf   
  419467:	xlat   BYTE PTR ds:[ebx]
  419468:	or     BYTE PTR [ebx],dh
  41946a:	dec    ebp
  41946b:	dec    ecx
  41946c:	pop    esp
  41946d:	jg     0x41944a
  41946f:	ja     0x41947f
  419471:	or     BYTE PTR [eax+0x6fe19efe],al
  419477:	pop    es
  419478:	dec    esp
  419479:	retf   
  41947a:	cdq    
  41947b:	push   ebx
  41947c:	scas   al,BYTE PTR es:[edi]
  41947d:	pop    esp
  41947e:	dec    eax
  41947f:	add    DWORD PTR [edx-0x6d38b26d],edi
  419485:	daa    
  419486:	imul   cl
  419488:	(bad)  
  419489:	sub    al,0xc9
  41948b:	jmp    DWORD PTR [ecx+0x1d3f3c15]
  419491:	aaa    
  419492:	or     BYTE PTR [ecx],dl
  419494:	fnstsw WORD PTR [ecx+0x77]
  419497:	cmp    DWORD PTR [ebp+0x32fe6950],0xc7e7db61
  4194a1:	rcr    DWORD PTR [ebp+0x524da255],1
  4194a7:	xor    DWORD PTR [eax-0x36460e4d],esi
  4194ad:	aas    
  4194ae:	jnp    0x41949c
  4194b0:	mov    eax,0x9f94d87c
  4194b5:	mov    edx,DWORD PTR [ebx+0x2e0cf0cd]
  4194bb:	lock and edi,esp
  4194be:	push   ecx
  4194bf:	jp     0x419478
  4194c1:	fdiv   QWORD PTR [edi-0x22]
  4194c4:	and    eax,0x7be18b3a
  4194c9:	je     0x419514
  4194cb:	repz sub al,0xed
  4194ce:	fldcw  WORD PTR [ecx+eax*8-0x727112fd]
  4194d5:	inc    eax
  4194d6:	and    al,0x6b
  4194d8:	in     eax,dx
  4194d9:	mov    dl,0x44
  4194db:	sti    
  4194dc:	in     eax,0xfd
  4194de:	adc    esp,esi
  4194e0:	push   ecx
  4194e1:	mov    edi,0x7bbbe149
  4194e6:	mov    dl,0xb7
  4194e8:	sub    ebp,DWORD PTR [edx]
  4194ea:	mov    dl,0xba
  4194ec:	mov    edx,0x194ea427
  4194f1:	test   DWORD PTR [esi*4+0x392a00c2],0x87218a08
  4194fc:	or     eax,0xad515e1a
  419501:	or     bh,dl
  419503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419504:	rep stos DWORD PTR es:[edi],eax
  419506:	and    al,0x7
  419508:	xor    DWORD PTR [ecx+0x551228c5],edi
  41950e:	pop    es
  41950f:	sbb    al,0x50
  419511:	clc    
  419512:	inc    edi
  419513:	and    BYTE PTR [edx+0x1b7c9ca7],bl
  419519:	stos   BYTE PTR es:[edi],al
  41951a:	cs aam 0xb0
  41951d:	fdivr  DWORD PTR [ebx+edi*8]
  419520:	or     edx,DWORD PTR [ecx+0x16]
  419523:	je     0x41950f
  419525:	jmp    0x3df55350
  41952a:	ret    0x3b
  41952d:	inc    eax
  41952e:	cmp    al,BYTE PTR [ebx+0x64]
  419531:	and    eax,ebp
  419533:	xor    ecx,esp
  419535:	loopne 0x419542
  419537:	xchg   dl,bh
  419539:	sbb    edi,DWORD PTR [ebp-0x3e]
  41953c:	jne    0x41956e
  41953e:	or     ebx,0x2ec604bb
  419544:	pop    edi
  419545:	or     dl,bl
  419547:	inc    edi
  419548:	imul   DWORD PTR [esi+0x56]
  41954b:	fwait
  41954c:	jns    0x4195aa
  41954e:	dec    edx
  41954f:	stos   BYTE PTR es:[edi],al
  419550:	les    ebx,FWORD PTR [edx-0x4d]
  419553:	and    edx,eax
  419555:	cdq    
  419556:	push   eax
  419557:	add    al,0x44
  419559:	into   
  41955a:	imul   DWORD PTR [ecx]
  41955c:	ror    BYTE PTR [ebp+0x37],1
  41955f:	dec    esi
  419560:	(bad)  
  419561:	std    
  419562:	mov    ah,0xa3
  419564:	inc    ebp
  419565:	pop    esi
  419566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419567:	mov    ch,ch
  419569:	xchg   esi,eax
  41956a:	(bad)  
  41956b:	int    0x34
  41956d:	es jno 0x419581
  419570:	dec    esp
  419571:	jmp    0x956e4372
  419576:	fcom   QWORD PTR [edi]
  419578:	popf   
  419579:	mov    ebp,0x1f28e09e
  41957e:	xchg   ebp,eax
  41957f:	xchg   esp,eax
  419580:	out    0xb5,eax
  419582:	push   esp
  419583:	cmc    
  419584:	lea    edi,[edx+0x1d17c365]
  41958a:	mov    esp,0xc5524c64
  41958f:	push   esp
  419590:	dec    eax
  419591:	xchg   DWORD PTR [eax],edi
  419593:	fsubr  st,st(6)
  419595:	lds    esi,FWORD PTR [edi]
  419597:	adc    DWORD PTR [esi],edi
  419599:	test   DWORD PTR [esp+ebx*8-0x296e7c7c],eax
  4195a0:	in     eax,dx
  4195a1:	adc    eax,0x31b61c2d
  4195a6:	push   0xffffffb2
  4195a8:	xor    al,0x5
  4195aa:	ss (bad) 
  4195ac:	imul   ebp,DWORD PTR cs:[esi],0xffffffcc
  4195b0:	out    dx,al
  4195b1:	mov    ebx,0x2b7ee7ee
  4195b6:	in     eax,0xc9
  4195b8:	mov    bh,BYTE PTR [ebp-0x2b11d88a]
  4195be:	xor    ah,bh
  4195c0:	jg     0x4195c0
  4195c2:	mov    bh,0xe7
  4195c4:	cmp    eax,0x980903b7
  4195c9:	test   DWORD PTR [ebp+0x10],0x42c3b945
  4195d0:	call   0x1506dd9d
  4195d5:	mov    bl,0x5
  4195d7:	loopne 0x4195f2
  4195d9:	shl    eax,0x2a
  4195dc:	not    DWORD PTR [edx+0x6b5eed44]
  4195e2:	clc    
  4195e3:	call   0xcfe:0xb7c7dc84
  4195ea:	adc    al,0xf8
  4195ec:	fistp  DWORD PTR [edx+0x10d0acb4]
  4195f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195f3:	in     eax,dx
  4195f4:	mov    eax,ds:0x515b1b17
  4195f9:	mov    ebx,0x4b914ba7
  4195fe:	call   FWORD PTR [edx]
  419600:	cmp    BYTE PTR [ecx],bl
  419602:	push   es
  419603:	cmc    
  419604:	call   0x499f:0x5e27caca
  41960b:	fbld   TBYTE PTR [eax-0x1ce6609d]
  419611:	inc    eax
  419612:	sahf   
  419613:	xchg   ebx,eax
  419614:	push   es
  419615:	ret    
  419616:	arpl   WORD PTR [ebp+0x1a],bx
  419619:	mov    al,0x75
  41961b:	cmc    
  41961c:	fiadd  WORD PTR [ebx+eax*1-0x29]
  419620:	xchg   esi,eax
  419621:	dec    esi
  419622:	dec    edx
  419623:	mov    ecx,0x2de0c4a1
  419628:	in     al,dx
  419629:	mov    ebp,0xa92e6679
  41962e:	outs   dx,BYTE PTR ds:[esi]
  41962f:	jle    0x41966f
  419631:	sub    ebx,esi
  419633:	stos   DWORD PTR es:[edi],eax
  419634:	push   0x9605d24f
  419639:	mov    dh,0xa
  41963b:	and    BYTE PTR [edi-0x1a74b67d],al
  419641:	inc    esp
  419642:	int    0x21
  419644:	inc    eax
  419645:	cs push eax
  419647:	pushf  
  419648:	fwait
  419649:	sub    DWORD PTR [ebx-0x17d844e2],esp
  41964f:	loopne 0x4196a4
  419651:	mov    dh,0x27
  419653:	js     0x4196d4
  419655:	call   DWORD PTR [eax]
  419657:	mov    ebp,0x46c62e84
  41965c:	shl    BYTE PTR [edi+0xd358d48],cl
  419662:	mov    bh,ch
  419664:	jle    0x419685
  419666:	and    al,0xa4
  419668:	out    dx,al
  419669:	xchg   esp,eax
  41966a:	xchg   ebx,eax
  41966b:	dec    ecx
  41966c:	shl    DWORD PTR ds:0x5c93ec99,1
  419672:	je     0x41962e
  419674:	inc    ecx
  419675:	lods   al,BYTE PTR ds:[esi]
  419676:	push   cs
  419677:	js     0x41969f
  419679:	mov    esi,0x870201bd
  41967e:	mov    WORD PTR [edx-0x126d45bf],ss
  419684:	xlat   BYTE PTR ds:[ebx]
  419685:	loop   0x419701
  419687:	sbb    esp,edx
  419689:	adc    eax,0xfc06fda5
  41968e:	xchg   ebp,eax
  41968f:	push   0xea629836
  419694:	cmp    eax,0x4755b3b9
  419699:	or     bl,BYTE PTR [eax]
  41969b:	sub    DWORD PTR [esi+0x107114b6],0x425b6924
  4196a5:	dec    esi
  4196a6:	nop
  4196a7:	mov    ch,0x74
  4196a9:	dec    ebp
  4196aa:	out    dx,al
  4196ab:	push   cs
  4196ac:	mov    dh,0x8e
  4196ae:	xor    al,0xbd
  4196b0:	iret   
  4196b1:	sti    
  4196b2:	add    esi,ebp
  4196b4:	cmpxchg DWORD PTR [edi-0x5],ebx
  4196b8:	aas    
  4196b9:	in     eax,0x24
  4196bb:	xlat   BYTE PTR fs:[ebx]
  4196bd:	lahf   
  4196be:	or     eax,0xc68ebfc3
  4196c3:	dec    esi
  4196c4:	nop
  4196c5:	pop    edx
  4196c6:	(bad)  
  4196c7:	sbb    cl,BYTE PTR [ebx-0x53d9df1b]
  4196cd:	std    
  4196ce:	data16 sbb al,0x80
  4196d1:	pop    ebp
  4196d2:	pop    ebx
  4196d3:	sub    al,0xcb
  4196d5:	rol    BYTE PTR [esi],cl
  4196d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196d8:	test   DWORD PTR [edi+ebx*1+0x60],ecx
  4196dc:	in     eax,0x9
  4196de:	inc    edx
  4196df:	push   edi
  4196e0:	push   ecx
  4196e1:	cwde   
  4196e2:	rcr    BYTE PTR [ecx],0x7c
  4196e5:	xchg   esi,eax
  4196e6:	add    al,0x54
  4196e8:	push   ss
  4196e9:	mov    ebx,0x87a03e5c
  4196ee:	fcom   DWORD PTR [eax-0x34]
  4196f1:	dec    edx
  4196f2:	mov    bl,0xb6
  4196f4:	jb     0x419737
  4196f6:	xor    eax,0xfd5b006c
  4196fb:	xor    ebx,esi
  4196fd:	push   eax
  4196fe:	loop   0x419729
  419700:	push   cs
  419701:	aaa    
  419702:	add    edi,ebx
  419704:	push   es
  419705:	sub    BYTE PTR [eax],ah
  419707:	ret    
  419708:	mov    ebp,0x52f77ae3
  41970d:	cli    
  41970e:	sbb    BYTE PTR [edx+ebp*1],bl
  419711:	test   al,0xcf
  419713:	test   BYTE PTR [ebp-0x47],al
  419716:	sbb    dl,bh
  419718:	adc    ebp,ebp
  41971a:	loop   0x419718
  41971c:	aas    
  41971d:	push   ds
  41971e:	rcl    DWORD PTR [ebx+0x32],cl
  419721:	mov    DWORD PTR [ebx],edx
  419723:	hlt    
  419724:	ins    BYTE PTR es:[edi],dx
  419725:	test   bh,0xf2
  419728:	add    esi,DWORD PTR [esi+esi*8-0x3f4a81ec]
  41972f:	push   ecx
  419730:	int3   
  419731:	push   0xfded9662
  419736:	out    0x4c,eax
  419738:	or     al,0x75
  41973a:	xor    BYTE PTR [ebp+0x75],bl
  41973d:	add    DWORD PTR [eax],edi
  41973f:	inc    ecx
  419740:	aad    0x27
  419742:	dec    ebp
  419743:	pop    edx
  419744:	lods   eax,DWORD PTR ds:[esi]
  419745:	out    0x15,al
  419747:	out    dx,al
  419748:	jo     0x419713
  41974a:	test   eax,0x5d31e56a
  41974f:	lods   al,BYTE PTR ds:[esi]
  419750:	jne    0x419777
  419752:	aam    0x7c
  419754:	popa   
  419755:	sti    
  419756:	jmp    DWORD PTR [ecx-0x432e43ea]
  41975c:	loope  0x4196f5
  41975e:	clc    
  41975f:	fst    DWORD PTR [esi-0x4bf1c682]
  419765:	out    dx,al
  419766:	scas   eax,DWORD PTR es:[edi]
  419767:	cwde   
  419768:	pusha  
  419769:	push   edx
  41976a:	in     al,dx
  41976b:	pop    es
  41976c:	mov    eax,ds:0xfbc5db9e
  419771:	les    ecx,FWORD PTR [ecx-0x4]
  419774:	jb     0x4197e3
  419776:	jo     0x4196ff
  419778:	ret    0x94ae
  41977b:	aaa    
  41977c:	icebp  
  41977d:	rol    DWORD PTR [eax-0x405911b9],1
  419783:	mov    DWORD PTR [edx-0x33dcba3b],esp
  419789:	retf   0xf168
  41978c:	or     esi,DWORD PTR [edx]
  41978e:	jl     0x419735
  419790:	ds dec edi
  419792:	mov    WORD PTR [ebx],ss
  419794:	aam    0x29
  419796:	pop    ss
  419797:	popa   
  419798:	xchg   edi,eax
  419799:	mov    bl,0x3f
  41979b:	pop    ebp
  41979c:	inc    eax
  41979d:	adc    al,0xc3
  41979f:	nop
  4197a0:	add    DWORD PTR [eax-0x3d],ebx
  4197a3:	xchg   esi,eax
  4197a4:	xchg   esi,eax
  4197a5:	sahf   
  4197a6:	pop    esp
  4197a7:	mov    al,0x20
  4197a9:	pop    edx
  4197aa:	sbb    ebp,ebx
  4197ac:	xchg   edi,eax
  4197ad:	mov    WORD PTR [esi-0x24],?
  4197b0:	adc    ch,BYTE PTR [esi+0x51]
  4197b3:	cli    
  4197b4:	inc    edx
  4197b5:	arpl   WORD PTR ds:0x81d74980,bx
  4197bb:	push   edi
  4197bc:	xchg   esp,eax
  4197bd:	inc    edi
  4197be:	mov    edx,0x655fbb01
  4197c3:	in     eax,0xc
  4197c5:	mov    ebp,0xb007bbe4
  4197ca:	ja     0x419807
  4197cc:	popf   
  4197cd:	xor    esp,DWORD PTR [ecx-0x5f0fcc]
  4197d3:	repz jg 0x419850
  4197d6:	pop    ss
  4197d7:	and    al,0xee
  4197d9:	(bad)  
  4197db:	jl     0x419774
  4197dd:	push   ebp
  4197de:	and    ah,BYTE PTR [eax-0x65]
  4197e1:	jns    0x41976b
  4197e3:	xchg   esp,eax
  4197e4:	pop    ebp
  4197e5:	cmp    bh,al
  4197e7:	pop    es
  4197e8:	cs jns 0x41979e
  4197eb:	pop    ebp
  4197ec:	pop    ebp
  4197ed:	jmp    FWORD PTR [esi+0x52333805]
  4197f3:	sub    al,0x58
  4197f5:	xchg   esp,eax
  4197f6:	out    0xf2,eax
  4197f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197f9:	xchg   DWORD PTR [edx+0x1d3ccdf0],ebx
  4197ff:	enter  0x8f65,0x3b
  419803:	jg     0x419800
  419805:	cli    
  419806:	pop    es
  419807:	sbb    ah,0x87
  41980a:	and    BYTE PTR [ecx],cl
  41980c:	mov    esi,0x8f486d24
  419811:	stos   BYTE PTR es:[edi],al
  419812:	repz inc esp
  419814:	jmp    0x6493:0x13c8135a
  41981b:	(bad)  
  41981c:	popa   
  41981d:	or     DWORD PTR [ecx-0x3f75c4ee],ebx
  419823:	jg     0x4197b0
  419825:	in     al,dx
  419826:	inc    eax
  419827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419828:	cli    
  419829:	dec    ebp
  41982a:	push   ebx
  41982b:	lock stc 
  41982d:	jecxz  0x41985b
  41982f:	js     0x419877
  419831:	das    
  419832:	xor    BYTE PTR [edi+0x68cc74d8],0x67
  419839:	(bad)  
  41983a:	enter  0x8bb0,0xbc
  41983e:	dec    edx
  41983f:	adc    al,0xa
  419841:	repz pusha 
  419843:	xchg   edi,eax
  419844:	pop    ecx
  419845:	push   ds
  419846:	jo     0x41984e
  419848:	sub    eax,0x126ec683
  41984d:	or     BYTE PTR [edi-0x7f],dl
  419850:	mov    bh,0x98
  419852:	mov    bh,BYTE PTR [edx+eax*2]
  419855:	ficom  WORD PTR [ebx+0x516a5999]
  41985b:	pop    esi
  41985c:	test   eax,0x1f8d1868
  419861:	(bad)  
  419862:	loop   0x4198dc
  419864:	adc    eax,0xb4197eb9
  419869:	inc    ebp
  41986a:	sub    edx,DWORD PTR [ebx+0x2d00974a]
  419870:	fisub  WORD PTR [edi+0x5e]
  419873:	adc    al,0xcb
  419875:	mov    esp,0x8d6be538
  41987a:	cmp    al,0x84
  41987c:	popf   
  41987d:	jmp    0x419809
  41987f:	pop    esp
  419880:	dec    ecx
  419881:	pop    ebp
  419882:	push   edi
  419883:	repz mov ch,0x42
  419886:	xchg   esp,eax
  419887:	and    ch,BYTE PTR ds:0xc14676da
  41988d:	cmp    DWORD PTR [edi+0x7d3b4887],ebp
  419893:	add    DWORD PTR [edx+esi*8+0x41928f06],eax
  41989a:	mov    al,ds:0x58bfb022
  41989f:	and    BYTE PTR [eax+0x1e2e4d65],dl
  4198a5:	mov    esi,0x42df12f8
  4198aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ab:	arpl   WORD PTR ss:[ecx-0x7df1a153],ax
  4198b2:	mov    ecx,0x8c0b544d
  4198b7:	mov    ebx,0xcc14190
  4198bc:	imul   esi,DWORD PTR [edx+0x6b],0xcea12514
  4198c3:	dec    edi
  4198c4:	aad    0xd6
  4198c6:	add    edx,DWORD PTR [ecx]
  4198c8:	iret   
  4198c9:	xchg   ebp,eax
  4198ca:	iret   
  4198cb:	nop
  4198cc:	cmp    BYTE PTR [ecx+0x47],ch
  4198cf:	sub    eax,0xc10873fe
  4198d4:	rcr    DWORD PTR [ebp-0x64880f21],0x74
  4198db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198dc:	xor    ebx,DWORD PTR [bx+0x37]
  4198e0:	jne    0x4198ba
  4198e2:	add    eax,0x34d3a276
  4198e7:	dec    eax
  4198e8:	cmp    ecx,0xfdf36ac7
  4198ee:	add    BYTE PTR [esi+0x7b],dh
  4198f1:	cmc    
  4198f2:	sbb    ch,cl
  4198f4:	push   0x73ea4df0
  4198f9:	nop
  4198fa:	cdq    
  4198fb:	lahf   
  4198fc:	pop    es
  4198fd:	mov    edi,0xb6a2b00e
  419902:	and    eax,0xff1a5a9a
  419907:	mov    esp,0x346195fd
  41990c:	into   
  41990d:	ins    BYTE PTR es:[edi],dx
  41990e:	mov    bl,0x9
  419910:	popa   
  419911:	call   0xac66:0x109f025a
  419918:	push   edx
  419919:	stos   DWORD PTR es:[edi],eax
  41991a:	cmp    bl,bh
  41991c:	lods   eax,DWORD PTR ds:[esi]
  41991d:	fcmove st,st(3)
  41991f:	or     eax,0x805c1e35
  419924:	mov    dl,0xd
  419926:	loope  0x419960
  419928:	pop    es
  419929:	call   0xdf52e438
  41992e:	jmp    0x2f7d88eb
  419933:	sub    al,BYTE PTR [edi]
  419935:	retf   0x98c5
  419938:	loope  0x4199a3
  41993a:	mov    bh,0x1d
  41993c:	(bad)  
  41993d:	jge    0x4198f5
  41993f:	outs   dx,BYTE PTR ds:[esi]
  419940:	xor    DWORD PTR [esi],esp
  419942:	test   al,0xf8
  419944:	mov    ebx,0x8cbb9f12
  419949:	push   0xf7cc3fd0
  41994e:	mov    ecx,0x10fa4558
  419953:	imul   edi,esp,0x79
  419956:	xor    ebx,edi
  419958:	mov    BYTE PTR [eax+eiz*1],dh
  41995b:	jmp    0x1f223845
  419960:	hlt    
  419961:	daa    
  419962:	inc    ebp
  419963:	push   cs
  419964:	pop    eax
  419965:	add    al,0x14
  419967:	enter  0x5c73,0xa1
  41996b:	sar    DWORD PTR [esi+0xc],cl
  41996e:	loopne 0x41998c
  419970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419971:	lds    esp,FWORD PTR [ecx+0x3b]
  419974:	xor    al,0x13
  419976:	out    dx,al
  419977:	inc    ebx
  419978:	or     dl,BYTE PTR [eax+ebx*2+0x65]
  41997c:	jno    0x41998c
  41997e:	sbb    BYTE PTR [eax+ecx*1-0x7f],dl
  419982:	sbb    DWORD PTR [edi+0x32],ebp
  419985:	xchg   esp,eax
  419986:	jecxz  0x41998d
  419988:	(bad)  
  41998a:	iret   
  41998b:	xchg   ebp,eax
  41998c:	mov    ds:0x3674aff8,al
  419991:	xor    eax,0x7d2a780c
  419996:	pop    ebp
  419997:	(bad)  
  419998:	pushf  
  419999:	test   eax,0x9fb7f57f
  41999e:	ss cdq 
  4199a0:	sbb    BYTE PTR [ecx],dl
  4199a2:	stos   BYTE PTR es:[edi],al
  4199a3:	retf   
  4199a4:	sub    eax,0xd0b379fe
  4199a9:	mov    edx,0x4085c04f
  4199ae:	adc    DWORD PTR [edx+0x77],edx
  4199b1:	sti    
  4199b2:	dec    eax
  4199b3:	es icebp 
  4199b5:	(bad)  
  4199b6:	fdivr  DWORD PTR [ebx+0xd0ebf08]
  4199bc:	mov    esp,0x80205459
  4199c1:	pop    esp
  4199c2:	inc    ebx
  4199c3:	mov    ds:0x66e45fec,eax
  4199c8:	or     DWORD PTR [ecx+0x5],ebx
  4199cb:	push   edx
  4199cc:	cld    
  4199cd:	cmp    eax,0xe3d30a0c
  4199d2:	and    dl,dh
  4199d4:	pop    edx
  4199d5:	adc    ebx,DWORD PTR [ebx+ecx*1]
  4199d8:	jl     0x4199fa
  4199da:	ret    0x874a
  4199dd:	jmp    0x4199ed
  4199df:	fs jns 0x4199f7
  4199e2:	add    eax,0x332283d0
  4199e7:	cmp    DWORD PTR [eax-0x65],eax
  4199ea:	jg     0x419a53
  4199ec:	dec    ecx
  4199ed:	mov    ecx,0x40380252
  4199f2:	mov    ch,0x8a
  4199f4:	xor    esi,DWORD PTR [esi+0x11]
  4199f7:	xchg   DWORD PTR [edx-0xa2134cb],edx
  4199fd:	mov    dl,0xfb
  4199ff:	or     BYTE PTR [ebp-0x465979ec],cl
  419a05:	pop    ds
  419a06:	adc    DWORD PTR [eax+0x69],edx
  419a09:	xor    BYTE PTR [ebx+0xdefcefe],ch
  419a0f:	clc    
  419a10:	sti    
  419a11:	and    al,0x85
  419a13:	dec    ebp
  419a14:	adc    al,0x19
  419a16:	jl     0x419a75
  419a18:	mov    edi,0x7462c49
  419a1d:	neg    al
  419a1f:	lods   eax,DWORD PTR ds:[esi]
  419a20:	or     ebp,DWORD PTR gs:[edi+0x7efb97ee]
  419a27:	jbe    0x419a45
  419a29:	mov    ebp,0x79efd012
  419a2e:	push   0xffffffdc
  419a30:	mov    ch,0x8f
  419a32:	sbb    cl,BYTE PTR es:[ebx]
  419a35:	mov    al,ds:0x8d931f2b
  419a3a:	inc    ebp
  419a3b:	or     eax,0xdb96d50c
  419a40:	and    DWORD PTR [ebx],eax
  419a42:	aad    0x88
  419a44:	in     al,0xbc
  419a46:	ins    BYTE PTR es:[edi],dx
  419a47:	and    DWORD PTR [ebp-0x66b0096a],eax
  419a4d:	jmp    0x439f:0x94d38392
  419a54:	mov    ds:0xb166d5fb,eax
  419a59:	ret    0x894e
  419a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a5d:	repz inc ebx
  419a5f:	pmulhuw mm7,QWORD PTR [ecx-0x2d]
  419a63:	mov    DWORD PTR [ebp+ebx*1-0x51],ebp
  419a67:	mov    ebp,0x76ed6661
  419a6c:	sbb    al,0x78
  419a6e:	sub    al,0xd6
  419a70:	ret    
  419a71:	sub    al,0x3a
  419a73:	mov    ds:0x9aac6f47,al
  419a78:	sub    eax,0xc2eb2c90
  419a7d:	mov    esi,0x446d36c2
  419a82:	mov    ecx,0x1dcaa922
  419a87:	mov    dl,0x24
  419a89:	xchg   ecx,eax
  419a8a:	mov    ds:0x3679fd91,al
  419a8f:	pop    esp
  419a90:	xor    eax,0x371aaa00
  419a95:	data16 or bh,BYTE PTR [edi+0x18]
  419a99:	and    DWORD PTR [edx+0x50],esi
  419a9c:	inc    ecx
  419a9d:	xor    BYTE PTR [edx],ah
  419a9f:	ret    0xa863
  419aa2:	int3   
  419aa3:	mov    BYTE PTR [eax-0x6a],ah
  419aa6:	sub    BYTE PTR [eax],0xc8
  419aa9:	push   esp
  419aab:	ins    DWORD PTR es:[edi],dx
  419aac:	test   BYTE PTR [eax],bl
  419aae:	inc    esi
  419aaf:	dec    edi
  419ab0:	sub    ah,BYTE PTR [edx]
  419ab2:	ins    DWORD PTR es:[edi],dx
  419ab3:	and    al,0xb0
  419ab5:	cmp    BYTE PTR [edx-0xbe99f41],0x48
  419abc:	mov    bh,0x95
  419abe:	addr16 shr dh,1
  419ac1:	xor    esi,DWORD PTR [esi-0x7a]
  419ac4:	lea    eax,[ebx]
  419ac6:	fst    QWORD PTR [edx]
  419ac8:	xchg   esi,eax
  419ac9:	jne    0x419a85
  419acb:	add    BYTE PTR [ecx+0x7b],0x13
  419acf:	cmc    
  419ad0:	(bad)  
  419ad1:	hlt    
  419ad2:	idiv   DWORD PTR [edi+edi*1-0x3f]
  419ad6:	(bad)  
  419ad7:	xlat   BYTE PTR ds:[ebx]
  419ad8:	push   esi
  419ad9:	enter  0x3d7a,0xde
  419add:	pushf  
  419ade:	push   0xffffffc0
  419ae0:	sub    DWORD PTR [eax+0x3058929a],ebp
  419ae6:	(bad)  
  419ae7:	jmp    0xbe59:0xddc134b3
  419aee:	mov    ebx,0x43f8387f
  419af3:	adc    cl,BYTE PTR [edi-0x1e3b8b8b]
  419af9:	mov    dh,0x15
  419afb:	enter  0x782,0x34
  419aff:	dec    esi
  419b00:	cdq    
  419b01:	in     eax,dx
  419b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b03:	pop    eax
  419b04:	in     eax,dx
  419b05:	inc    esi
  419b06:	push   0xffffffe1
  419b08:	push   0xffffffc9
  419b0a:	mov    bl,0xa
  419b0c:	jmp    0x1250:0xb5a4d62f
  419b13:	jmp    0xc233:0xf07a7983
  419b1a:	adc    bl,BYTE PTR [edi]
  419b1c:	xor    bh,al
  419b1e:	call   0x37d1:0xe8c937e1
  419b25:	add    DWORD PTR [edi-0x58],esp
  419b28:	fs daa 
  419b2a:	or     eax,0x507274c7
  419b2f:	call   0x51114163
  419b34:	in     eax,dx
  419b35:	jb     0x419b33
  419b37:	lds    edx,FWORD PTR [eax]
  419b39:	inc    edi
  419b3a:	or     eax,0xbd34f942
  419b3f:	mov    eax,0x2ce9f62d
  419b44:	in     eax,0xf8
  419b46:	arpl   WORD PTR cs:[esi+0x22],di
  419b4a:	in     al,0x9b
  419b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4d:	je     0x419b3e
  419b4f:	jle    0x419b9a
  419b51:	mov    cl,0x47
  419b53:	adc    ebx,DWORD PTR ds:[ebx]
  419b56:	leave  
  419b57:	stos   BYTE PTR es:[edi],al
  419b58:	inc    edx
  419b59:	jns    0x419bce
  419b5b:	repnz in eax,dx
  419b5d:	popa   
  419b5e:	inc    eax
  419b5f:	pop    ebp
  419b60:	(bad)  
  419b61:	mov    ds:0x69b1c6d4,al
  419b66:	push   eax
  419b67:	dec    esp
  419b68:	aas    
  419b69:	fs jmp 0xf82f:0xe9810961
  419b71:	jg     0x419bd3
  419b73:	mov    ecx,esp
  419b75:	push   eax
  419b76:	add    eax,0xaa852755
  419b7b:	add    esp,ebp
  419b7d:	sub    esp,DWORD PTR [edx-0x6096797c]
  419b83:	push   ecx
  419b84:	les    ecx,FWORD PTR [ebx+0x226f135c]
  419b8a:	int    0x1d
  419b8c:	push   ss
  419b8d:	fcomp  QWORD PTR [ebp-0x779879c5]
  419b93:	in     eax,dx
  419b94:	cli    
  419b95:	add    DWORD PTR [edi-0x59],edi
  419b98:	sub    BYTE PTR [ecx+0x7f489e1e],bl
  419b9e:	sub    edx,0xffffff8d
  419ba1:	mov    ecx,DWORD PTR [edi-0x29799d22]
  419ba7:	or     BYTE PTR [eax-0x2f],dl
  419baa:	xchg   ebx,eax
  419bab:	fdivr  st,st(3)
  419bad:	pop    edi
  419bae:	aaa    
  419baf:	jae    0x419bb7
  419bb1:	sub    dl,BYTE PTR [esi-0x73]
  419bb4:	inc    ebx
  419bb5:	bound  ecx,QWORD PTR [esi-0x3835b0e8]
  419bbb:	fistp  DWORD PTR [edx]
  419bbd:	fwait
  419bbe:	cmp    al,0x69
  419bc0:	sahf   
  419bc1:	cmp    dh,BYTE PTR [ebp-0x24]
  419bc4:	test   DWORD PTR [edx+edi*8+0x51],eax
  419bc8:	add    ecx,DWORD PTR [ecx+ecx*2-0xa]
  419bcc:	mov    dl,0x9f
  419bce:	pusha  
  419bcf:	mov    ds:0x4698dfbf,al
  419bd4:	loopne 0x419bde
  419bd6:	mov    ch,0x3
  419bd8:	push   ecx
  419bd9:	sub    DWORD PTR [ecx+0x23],edx
  419bdc:	mov    DWORD PTR [ebx],eax
  419bde:	(bad)
  419be2:	out    0x57,eax
  419be4:	sub    ebp,DWORD PTR [ebp+eax*8-0x73d55972]
  419beb:	cmp    al,0x76
  419bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bee:	rcl    BYTE PTR ds:0x1e960373,0x41
  419bf5:	pop    esi
  419bf6:	push   es
  419bf7:	fnstenv [ecx+0x170417d3]
  419bfd:	xor    bh,BYTE PTR [ebx+esi*2-0x14]
  419c01:	dec    ecx
  419c02:	and    bh,ah
  419c04:	adc    al,0x61
  419c06:	repz inc esp
  419c08:	arpl   cx,bp
  419c0a:	ret    
  419c0b:	rcl    BYTE PTR [ebx-0x79],cl
  419c0e:	adc    al,0xf4
  419c10:	out    dx,eax
  419c11:	xor    al,0x7f
  419c13:	inc    esp
  419c14:	and    BYTE PTR [esi],ch
  419c16:	push   edi
  419c17:	dec    ebp
  419c18:	jns    0x419c7c
  419c1a:	leave  
  419c1b:	add    dh,bl
  419c1d:	in     al,dx
  419c1e:	adc    al,0x39
  419c20:	and    DWORD PTR [ecx+0x21f358d9],0xffffffe7
  419c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c28:	or     DWORD PTR [edi],0xd983b7c4
  419c2e:	sti    
  419c2f:	cmp    al,0xce
  419c31:	cmp    DWORD PTR [edx],edx
  419c33:	imul   edx,DWORD PTR [ebp+0x793da161],0x4c09cc80
  419c3d:	add    ecx,0xffffffa8
  419c40:	daa    
  419c41:	cdq    
  419c42:	pop    es
  419c43:	pusha  
  419c44:	pop    edx
  419c45:	dec    ebp
  419c46:	loopne 0x419ca2
  419c48:	dec    edx
  419c49:	sahf   
  419c4a:	into   
  419c4b:	pusha  
  419c4c:	fmul   QWORD PTR [esp+eax*8+0x30a73034]
  419c53:	mov    cl,0x13
  419c55:	xchg   ebp,eax
  419c56:	pop    es
  419c57:	xchg   esp,eax
  419c58:	jb     0x419c2b
  419c5a:	int    0x7c
  419c5c:	push   cs
  419c5d:	or     edi,ecx
  419c5f:	jns    0x419c71
  419c61:	addr16 ret 0xff00
  419c65:	and    ebx,esp
  419c67:	jbe    0x419c76
  419c69:	and    bl,BYTE PTR [edx+0x19]
  419c6c:	test   DWORD PTR [edx+edx*4+0x7541e318],esi
  419c73:	inc    ebx
  419c74:	hlt    
  419c75:	nop
  419c76:	mov    ebp,0x4e57b0e
  419c7b:	cmp    DWORD PTR [ecx+0x7a263e73],esp
  419c81:	push   ebx
  419c82:	lods   al,BYTE PTR ds:[esi]
  419c83:	mov    dh,0x58
  419c85:	daa    
  419c86:	arpl   WORD PTR [ebp+0x6b],bx
  419c89:	pop    esp
  419c8a:	inc    ebx
  419c8b:	out    dx,al
  419c8c:	fs dec eax
  419c8e:	iret   
  419c8f:	pushf  
  419c90:	stc    
  419c91:	mov    ds,WORD PTR [eax+0x5b]
  419c94:	cwde   
  419c95:	sbb    ebx,DWORD PTR [edi-0xf]
  419c98:	sub    eax,0xf847d729
  419c9d:	mov    dl,0x91
  419c9f:	retf   
  419ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ca1:	out    dx,al
  419ca2:	fisubr DWORD PTR [edi-0x47]
  419ca5:	push   ebp
  419ca6:	daa    
  419ca7:	add    BYTE PTR [eax],al
  419ca9:	out    dx,eax
  419caa:	inc    eax
  419cab:	sti    
  419cac:	out    0x4c,eax
  419cae:	sbb    eax,0xc2db8d6c
  419cb3:	pop    edx
  419cb4:	cwde   
  419cb5:	sub    eax,0x4585b4c2
  419cba:	inc    esi
  419cbb:	sub    ebp,DWORD PTR [ebx+0x63a3eda2]
  419cc1:	and    DWORD PTR [ebx+0x15bcc9da],0xe9b4a1a
  419ccb:	into   
  419ccc:	mov    ds,esp
  419cce:	jecxz  0x419d30
  419cd0:	pop    eax
  419cd1:	sbb    BYTE PTR [edi+0x2a],bl
  419cd4:	dec    edx
  419cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd6:	adc    DWORD PTR [eax+0x1b],edi
  419cd9:	test   eax,0xf698d266
  419cde:	mov    bl,0xf2
  419ce0:	pop    ebp
  419ce1:	cmp    BYTE PTR [edx+ebx*8-0x76],al
  419ce5:	mov    dh,BYTE PTR [edi-0x21]
  419ce8:	clc    
  419ce9:	in     eax,dx
  419cea:	arpl   WORD PTR [ebx],si
  419cec:	inc    ebp
  419ced:	jo     0x419d40
  419cef:	xchg   edi,eax
  419cf0:	mov    dh,0xba
  419cf2:	push   ebp
  419cf3:	aam    0x7
  419cf5:	arpl   WORD PTR [esi+0x3e797f92],bp
  419cfb:	call   0x90a9:0x33d1594c
  419d02:	call   0xf9509f3e
  419d07:	and    dh,BYTE PTR [edx]
  419d09:	dec    eax
  419d0a:	add    dl,BYTE PTR fs:[eax+ebx*4-0x264033ce]
  419d12:	jnp    0x419d3a
  419d14:	mov    esp,DWORD PTR [eax+0x1acf7346]
  419d1a:	mov    al,ds:0xa19f7e17
  419d1f:	mov    dl,0x50
  419d21:	mov    cl,0x8f
  419d23:	jnp    0x419cd6
  419d25:	mov    ds:0x346311b,eax
  419d2a:	hlt    
  419d2b:	jae    0x419ce8
  419d2d:	jle    0x419d3d
  419d2f:	xor    al,0x9
  419d31:	mov    ah,0xf3
  419d33:	(bad)  
  419d34:	xor    BYTE PTR ds:0xf5577b65,ch
  419d3a:	jmp    0x419cf0
  419d3c:	loop   0x419d9b
  419d3e:	sub    edx,ebx
  419d40:	bound  ebp,QWORD PTR [edi-0x7c]
  419d43:	bound  edx,QWORD PTR [esi+0x4702ae41]
  419d49:	std    
  419d4a:	mov    ecx,0x3888d9ef
  419d4f:	push   cs
  419d50:	stos   DWORD PTR es:[edi],eax
  419d51:	loope  0x419d1e
  419d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d54:	xchg   esi,eax
  419d55:	test   DWORD PTR [edi-0x62],0x58cd5d3c
  419d5c:	adc    edx,DWORD PTR [ebx+ebp*1]
  419d5f:	and    al,0x44
  419d61:	sub    eax,0xcdc75ccf
  419d66:	or     eax,0xef9946ac
  419d6b:	mov    ebx,0xcb6d5579
  419d70:	daa    
  419d71:	add    DWORD PTR [ecx+0x36af00e8],ecx
  419d77:	lds    esi,FWORD PTR [edi+0x56]
  419d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d7b:	pusha  
  419d7c:	ret    0xbcf5
  419d7f:	in     eax,dx
  419d80:	sahf   
  419d81:	rol    ch,0x56
  419d84:	in     al,dx
  419d85:	(bad)  
  419d86:	adc    DWORD PTR [eax],ecx
  419d88:	(bad)  
  419d8a:	es fwait
  419d8c:	leave  
  419d8d:	out    dx,al
  419d8e:	jmp    0x4830:0x1ab876a3
  419d95:	push   es
  419d96:	add    DWORD PTR [eax],esi
  419d98:	cmp    eax,0x6154dc4b
  419d9d:	or     ebp,DWORD PTR [ecx]
  419d9f:	mov    edx,0x8389d78e
  419da4:	adc    BYTE PTR [esp+eax*2],0x52
  419da8:	mov    ebp,0x9eec5e20
  419dad:	sahf   
  419dae:	dec    esi
  419daf:	imul   ebx,DWORD PTR [eax+0x4ecc63e7],0x2086d6a4
  419db9:	imul   ebp,ecx,0xecc39fe9
  419dbf:	jmp    0x419dd9
  419dc1:	inc    esp
  419dc2:	xor    DWORD PTR [ebp+0x7215336b],esi
  419dc8:	mov    eax,ds:0x5040c6d6
  419dcd:	pop    DWORD PTR [ecx]
  419dcf:	sti    
  419dd0:	mov    eax,0xa68e4d3f
  419dd5:	rcr    DWORD PTR [ecx+0x2990cc7],0x8f
  419ddc:	or     esp,DWORD PTR [esi+eiz*8+0x25]
  419de0:	mov    esp,0xc248fef
  419de5:	and    eax,0x7f5239e3
  419dea:	cmc    
  419deb:	inc    edx
  419dec:	test   eax,0x8fefb6d2
  419df1:	fdivr  st,st(4)
  419df3:	sti    
  419df4:	xchg   esi,eax
  419df5:	push   ss
  419df6:	into   
  419df7:	xchg   ebp,eax
  419df8:	scas   eax,DWORD PTR es:[edi]
  419df9:	iret   
  419dfa:	add    esi,DWORD PTR [edi+0x78f19c07]
  419e00:	data16 in al,dx
  419e02:	not    BYTE PTR [edx+eax*1]
  419e05:	mov    ecx,0x7dfd6a8a
  419e0a:	xchg   edx,eax
  419e0b:	dec    edi
  419e0c:	jge    0x419e55
  419e0e:	sbb    edi,DWORD PTR [esi+0x2]
  419e11:	outs   dx,DWORD PTR ds:[esi]
  419e12:	outs   dx,BYTE PTR ds:[esi]
  419e13:	nop
  419e14:	push   ebp
  419e15:	shl    BYTE PTR [edx+esi*2-0x22],cl
  419e19:	jecxz  0x419e6f
  419e1b:	int    0x63
  419e1d:	xchg   ebx,eax
  419e1e:	mov    edi,0x64bb134d
  419e23:	jno    0x419e0e
  419e25:	cmp    cl,BYTE PTR [edi-0x3e]
  419e28:	xchg   DWORD PTR [esi+0x43],ecx
  419e2b:	cmp    al,0x66
  419e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e2e:	jl     0x419de8
  419e30:	and    eax,0x834e61a4
  419e35:	lds    esi,FWORD PTR [ecx-0x1e0a1586]
  419e3b:	call   0x8bf47fc6
  419e40:	and    al,0x74
  419e42:	xor    BYTE PTR [eax],0xb7
  419e45:	add    al,ch
  419e47:	pop    edx
  419e48:	push   ecx
  419e49:	fsub   st(0),st
  419e4b:	pop    ebx
  419e4c:	mov    ds:0x93a992b4,al
  419e51:	mov    edi,0x22ae02d8
  419e56:	and    esp,DWORD PTR [eax+edi*4+0x576c5d34]
  419e5d:	adc    esp,DWORD PTR [ecx]
  419e5f:	xor    DWORD PTR [ebx+0x30d821d2],0x75
  419e66:	ficomp WORD PTR [esi+0x13]
  419e69:	mov    ch,0x9
  419e6b:	mov    dl,0x47
  419e6d:	test   DWORD PTR [edx+0x5f],ebp
  419e70:	clc    
  419e71:	xchg   ebp,eax
  419e72:	push   ebp
  419e73:	xchg   DWORD PTR [ecx],ebp
  419e75:	sbb    cl,BYTE PTR ds:0xe5312aeb
  419e7b:	call   0xd506c144
  419e80:	outs   dx,BYTE PTR ds:[esi]
  419e81:	pushf  
  419e82:	inc    edi
  419e83:	out    0x46,al
  419e85:	xchg   ebp,eax
  419e86:	mov    bh,0xe2
  419e88:	jl     0x419e35
  419e8a:	jge    0x419e47
  419e8c:	jge    0x419edc
  419e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e8f:	dec    eax
  419e90:	xchg   edi,eax
  419e91:	jge    0x419ee7
  419e93:	shl    BYTE PTR [eax-0x32369661],0x28
  419e9a:	xchg   ebp,eax
  419e9b:	test   al,0x94
  419e9d:	scas   al,BYTE PTR es:[edi]
  419e9e:	push   ebp
  419e9f:	jb     0x419ef3
  419ea1:	push   0x1
  419ea3:	mov    ecx,0xe1820f23
  419ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea9:	aad    0x79
  419eab:	or     DWORD PTR [edi-0x4b0a67b7],ebx
  419eb1:	jb     0x419e5d
  419eb3:	int3   
  419eb4:	das    
  419eb5:	add    al,0x79
  419eb7:	add    BYTE PTR [ebx-0x72],0xfb
  419ebb:	add    ch,BYTE PTR [eax]
  419ebd:	les    esp,FWORD PTR [esi]
  419ebf:	addr16 mov dh,0x9d
  419ec2:	push   ss
  419ec3:	dec    edx
  419ec4:	cmp    al,0xac
  419ec6:	xchg   BYTE PTR ds:0x74e8968f,cl
  419ecc:	fmul   st,st(5)
  419ece:	jmp    FWORD PTR [edx-0x4cf46457]
  419ed4:	dec    esi
  419ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed6:	mov    cl,0x8a
  419ed8:	ins    BYTE PTR es:[edi],dx
  419ed9:	aas    
  419eda:	dec    esp
  419edb:	mov    ds:0xda98239b,al
  419ee0:	sub    ecx,DWORD PTR [ecx+0x0]
  419ee3:	jae    0x419f50
  419ee5:	lahf   
  419ee6:	popf   
  419ee7:	je     0x419e95
  419ee9:	shl    DWORD PTR [edi+0x35326c11],1
  419eef:	and    BYTE PTR [ebp+0x6272846a],bh
  419ef5:	outs   dx,BYTE PTR ds:[esi]
  419ef6:	xor    al,0x9a
  419ef8:	push   esi
  419ef9:	push   es
  419efa:	mov    ah,0xae
  419efc:	and    cl,BYTE PTR [ebp+esi*8-0x7f2aaf89]
  419f03:	and    BYTE PTR [eax],cl
  419f05:	xchg   ebx,eax
  419f06:	xchg   BYTE PTR [edx-0x746e719d],cl
  419f0c:	lahf   
  419f0d:	jns    0x419eba
  419f0f:	shl    BYTE PTR [esi-0x5e],1
  419f12:	ror    DWORD PTR [ebp-0x11],1
  419f15:	xlat   BYTE PTR ds:[ebx]
  419f16:	or     bh,cl
  419f18:	mov    eax,ds:0xc08ae23a
  419f1d:	outs   dx,DWORD PTR ds:[esi]
  419f1e:	adc    al,bl
  419f20:	jns    0x419f24
  419f22:	inc    eax
  419f23:	dec    esp
  419f24:	inc    edi
  419f25:	xchg   esi,eax
  419f26:	adc    DWORD PTR [ebp-0x7b3224f5],eax
  419f2c:	les    eax,FWORD PTR [esi+0x60]
  419f2f:	into   
  419f30:	xchg   edi,eax
  419f31:	mov    eax,fs
  419f33:	xchg   ebp,eax
  419f34:	arpl   sp,bp
  419f36:	jg     0x419ed3
  419f38:	cwde   
  419f39:	jmp    0xc010:0x7137e2a7
  419f40:	sbb    al,0x1e
  419f42:	je     0x419f7c
  419f44:	jle    0x419f69
  419f46:	aas    
  419f47:	mov    al,ds:0x5a47e5a8
  419f4c:	mov    cl,0x69
  419f4e:	das    
  419f4f:	ins    BYTE PTR es:[edi],dx
  419f50:	movups xmm5,XMMWORD PTR [edi+0x65ed005a]
  419f57:	rcr    BYTE PTR [edi+0x61033c61],cl
  419f5d:	lock fidiv WORD PTR [esi-0x47]
  419f61:	or     BYTE PTR [edi],ch
  419f63:	cmp    DWORD PTR [ebx+0x2e211bed],ebx
  419f69:	mov    ecx,0x1e3bc39c
  419f6e:	xchg   esi,eax
  419f6f:	and    BYTE PTR ds:0x6cbc0dff,al
  419f75:	mov    al,0xbf
  419f77:	dec    edx
  419f78:	jl     0x419f99
  419f7a:	int    0xf6
  419f7c:	icebp  
  419f7d:	push   esi
  419f7e:	mov    ah,0x75
  419f80:	sub    eax,0xcdade05f
  419f85:	mov    ?,WORD PTR [esi-0x72a46d14]
  419f8b:	cmp    DWORD PTR [ebx-0xa1c8631],edi
  419f91:	jno    0x419f1a
  419f93:	ficomp DWORD PTR [ebx+esi*1+0x13]
  419f97:	jne    0x41a00b
  419f99:	out    0x92,eax
  419f9b:	pop    eax
  419f9c:	xchg   edx,eax
  419f9d:	xor    DWORD PTR [ecx+0x7d099ac0],edx
  419fa3:	jbe    0x419fd8
  419fa5:	mov    ecx,0x2e1c6a1a
  419faa:	lea    edx,[edi+0x29]
  419fad:	repz mov ebp,0x3fa25bbf
  419fb3:	sbb    BYTE PTR [eax],bh
  419fb5:	iret   
  419fb6:	jae    0x419ff5
  419fb8:	xchg   edx,eax
  419fb9:	xchg   DWORD PTR [edi-0x5d],edx
  419fbc:	sub    al,0x72
  419fbe:	mov    cl,dh
  419fc0:	outs   dx,DWORD PTR ds:[esi]
  419fc1:	and    ch,dl
  419fc3:	inc    esp
  419fc4:	div    DWORD PTR [edi+0x21382ac1]
  419fca:	or     eax,edi
  419fcc:	xor    BYTE PTR [edx],0xbc
  419fcf:	test   eax,0xe334f438
  419fd4:	adc    esp,ebx
  419fd6:	pop    ds
  419fd7:	push   ebx
  419fd8:	fidivr WORD PTR [esi-0x3c0cf983]
  419fde:	sbb    al,0xf3
  419fe0:	fsubr  DWORD PTR [esi]
  419fe2:	pop    ecx
  419fe3:	ins    DWORD PTR es:[edi],dx
  419fe4:	mov    ah,0xfe
  419fe6:	pusha  
  419fe7:	mov    dh,0x60
  419fe9:	push   eax
  419fea:	scas   eax,DWORD PTR es:[edi]
  419feb:	and    al,0xda
  419fed:	out    dx,al
  419fee:	pop    ebp
  419fef:	mov    eax,ds:0x29eb74e2
  419ff4:	dec    ebx
  419ff5:	dec    eax
  419ff6:	imul   eax,DWORD PTR [ebx+0x36],0x59c42775
  419ffd:	sbb    bh,BYTE PTR ds:0xb930b348
  41a003:	retf   0x1045
  41a006:	mov    eax,DWORD PTR ss:[eax+eax*1]
  41a00a:	mov    ecx,0xc81c186e
  41a00f:	adc    dh,BYTE PTR ds:0x88d8d56c
  41a015:	cld    
  41a016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a017:	addr16 jnp 0x41a064
  41a01a:	aam    0x4
  41a01c:	inc    eax
  41a01d:	jne    0x41a087
  41a01f:	mov    esp,0xc7f06369
  41a024:	mov    WORD PTR [edx-0x194dfbb],ss
  41a02a:	mov    cl,0x85
  41a02c:	aas    
  41a02d:	test   eax,0x3b147ff4
  41a032:	cmc    
  41a033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a034:	mov    esi,DWORD PTR [ebx+0x77971228]
  41a03a:	xlat   BYTE PTR ds:[ebx]
  41a03b:	jl     0x41a097
  41a03d:	stc    
  41a03e:	sbb    ecx,ecx
  41a040:	js     0x41a06e
  41a042:	and    ch,dl
  41a044:	mov    ds:0xef8618f9,eax
  41a049:	add    al,0xf1
  41a04b:	xchg   DWORD PTR [ebp-0x19],edi
  41a04e:	and    al,0x27
  41a050:	adc    BYTE PTR [ecx+esi*8+0x60],ah
  41a054:	pop    esi
  41a055:	sbb    al,0x86
  41a057:	push   eax
  41a058:	cli    
  41a059:	nop
  41a05a:	and    al,dh
  41a05c:	pop    edi
  41a05d:	push   edx
  41a05e:	in     eax,dx
  41a05f:	xlat   BYTE PTR ds:[ebx]
  41a060:	mov    BYTE PTR [bp+si+0x1afb],cl
  41a065:	imul   ebp,DWORD PTR [edx+eax*4-0x5e82f201],0x4a
  41a06d:	int    0xbc
  41a06f:	or     DWORD PTR ds:0xd4b546d,0x24408a38
  41a079:	inc    edx
  41a07a:	outs   dx,DWORD PTR ds:[esi]
  41a07b:	mov    ch,0xe8
  41a07d:	imul   ebp,DWORD PTR [ebx-0x54],0x60
  41a081:	pop    edx
  41a082:	sbb    eax,0x56b2b065
  41a087:	sub    dh,0xd9
  41a08a:	(bad)  
  41a08b:	cli    
  41a08c:	cmp    dl,BYTE PTR [edi]
  41a08e:	sar    BYTE PTR [ecx+0x19],cl
  41a091:	mov    edx,0xfdf0a9d7
  41a096:	xor    eax,0xe5c16263
  41a09b:	adc    BYTE PTR [eax],dh
  41a09d:	aam    0xd6
  41a09f:	dec    esi
  41a0a0:	cs push cx
  41a0a3:	xchg   esp,eax
  41a0a4:	jbe    0x41a070
  41a0a6:	xlat   BYTE PTR ds:[ebx]
  41a0a7:	mov    ?,edi
  41a0a9:	mov    cl,0x12
  41a0ab:	pop    edi
  41a0ac:	sbb    esi,0xffffffcf
  41a0af:	jbe    0x41a0e6
  41a0b1:	add    al,BYTE PTR [esi+0x5b]
  41a0b4:	sti    
  41a0b5:	sti    
  41a0b6:	stos   BYTE PTR es:[edi],al
  41a0b7:	jne    0x41a08b
  41a0b9:	in     eax,dx
  41a0ba:	fist   DWORD PTR [esi+0x33d9adc9]
  41a0c0:	cmp    eax,0xdd62a0ae
  41a0c5:	cwde   
  41a0c6:	test   BYTE PTR [edi-0x21cc3fd0],dh
  41a0cc:	retf   
  41a0cd:	aas    
  41a0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0cf:	hlt    
  41a0d0:	mov    eax,ds:0x1fb51229
  41a0d5:	push   ebp
  41a0d6:	mov    esp,0xc6d024d8
  41a0db:	loop   0x41a0f0
  41a0dd:	(bad)  
  41a0de:	fld    TBYTE PTR [ebp-0x545fc8d7]
  41a0e4:	mov    ebp,0xf6e39cfa
  41a0e9:	mov    DWORD PTR [eax+0x72],eax
  41a0ec:	adc    DWORD PTR [esi-0x64],ebp
  41a0ef:	jns    0x41a112
  41a0f1:	aad    0xd1
  41a0f3:	sub    DWORD PTR [edx],0xffffff92
  41a0f6:	dec    esp
  41a0f7:	xchg   esi,eax
  41a0f8:	mov    dl,BYTE PTR [edx]
  41a0fa:	xor    BYTE PTR [edi-0x59bbbc93],cl
  41a100:	ins    DWORD PTR es:[edi],dx
  41a101:	jg     0x41a120
  41a103:	jg     0x41a121
  41a105:	repnz push eax
  41a107:	and    esi,DWORD PTR [ebx]
  41a109:	inc    ecx
  41a10a:	pushf  
  41a10b:	pop    ds
  41a10c:	jnp    0x41a151
  41a10e:	out    0x1b,eax
  41a110:	scas   eax,DWORD PTR es:[edi]
  41a111:	fwait
  41a112:	aas    
  41a113:	mov    ds:0xa07527f6,al
  41a118:	pop    esi
  41a119:	mov    esp,0x55d4234d
  41a11e:	push   ebx
  41a11f:	sbb    eax,0xbd90971a
  41a124:	daa    
  41a125:	in     al,dx
  41a126:	cmp    DWORD PTR [esi-0x46],esp
  41a129:	pop    ebx
  41a12a:	push   ecx
  41a12b:	mov    ah,0x21
  41a12d:	fcom   DWORD PTR [esp+edx*8]
  41a130:	sbb    eax,0xb0f9eda9
  41a135:	fsub   QWORD PTR [ecx]
  41a137:	(bad)  
  41a138:	(bad)  
  41a139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a13a:	mov    esi,0xf531cd29
  41a13f:	jge    0x41a0fc
  41a141:	pop    edx
  41a142:	inc    eax
  41a143:	adc    al,0x26
  41a145:	das    
  41a146:	adc    al,BYTE PTR [esi+0x4892cb67]
  41a14c:	push   0xe6e4bdeb
  41a151:	sub    esp,DWORD PTR [ecx-0x1]
  41a154:	lds    ebp,FWORD PTR [ebx]
  41a156:	into   
  41a157:	in     al,dx
  41a158:	nop
  41a159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a15a:	in     eax,dx
  41a15b:	pop    esi
  41a15c:	aad    0xca
  41a15e:	cmp    eax,0xe5d8d4c1
  41a163:	pop    ecx
  41a164:	adc    dl,BYTE PTR [eax+0x5b]
  41a167:	ret    
  41a168:	aad    0x6
  41a16a:	fadd   QWORD PTR [ecx]
  41a16c:	psubsw mm5,QWORD PTR [esi]
  41a16f:	les    ebp,FWORD PTR [edx-0x3e]
  41a172:	xor    ebx,ecx
  41a174:	xor    edi,edi
  41a176:	lods   al,BYTE PTR ds:[esi]
  41a177:	inc    ebx
  41a178:	add    al,0xa6
  41a17a:	test   DWORD PTR [edx-0xa],esi
  41a17d:	aaa    
  41a17e:	inc    esi
  41a17f:	inc    ecx
  41a180:	into   
  41a181:	into   
  41a182:	push   0x2295bc66
  41a187:	fcomp  QWORD PTR [ecx-0x5b]
  41a18a:	inc    esi
  41a18b:	or     DWORD PTR [ebp+ebp*2-0x2cdc47ff],ebx
  41a192:	dec    esi
  41a193:	xor    al,0x8c
  41a195:	xchg   esp,eax
  41a196:	push   es
  41a197:	stos   BYTE PTR es:[edi],al
  41a198:	mov    ebx,0x9752f9a6
  41a19d:	inc    eax
  41a19e:	adc    ebx,DWORD PTR [ecx+edx*4+0x79]
  41a1a2:	mov    esp,0xbd00013b
  41a1a7:	sub    esi,DWORD PTR [ecx]
  41a1a9:	push   ss
  41a1aa:	pushf  
  41a1ab:	mov    cl,0xf1
  41a1ad:	jno    0x41a1c0
  41a1af:	mov    ebp,0xcbfa2446
  41a1b4:	add    eax,0xeb8ee164
  41a1b9:	pop    edx
  41a1ba:	inc    eax
  41a1bb:	aam    0xef
  41a1bd:	lds    esp,FWORD PTR [ebp-0x16bc65c1]
  41a1c3:	mov    ds,ecx
  41a1c5:	cmp    DWORD PTR [esi-0x49756fca],0x834ab72b
  41a1cf:	cmp    cl,BYTE PTR [ebp-0x64825547]
  41a1d5:	sbb    al,0x82
  41a1d7:	inc    eax
  41a1d8:	inc    ecx
  41a1d9:	jl     0x41a1b2
  41a1db:	outs   dx,BYTE PTR ds:[esi]
  41a1dc:	(bad)  
  41a1dd:	mov    cl,0xe1
  41a1e0:	jmp    0x41a1f4
  41a1e2:	test   eax,0x61ba1cb
  41a1e7:	add    ebp,DWORD PTR [ebx+0x56f58c19]
  41a1ed:	les    eax,FWORD PTR [edx]
  41a1ef:	xchg   ecx,eax
  41a1f0:	ficomp DWORD PTR [ebx+0x25]
  41a1f3:	retf   0x8ff
  41a1f6:	mov    BYTE PTR [ecx],0xe6
  41a1f9:	clc    
  41a1fa:	sbb    al,0x30
  41a1fc:	xor    edi,DWORD PTR [ebp-0x16730085]
  41a202:	lea    edi,[edx]
  41a204:	cmp    eax,0x301c977f
  41a209:	in     al,0xf6
  41a20b:	cs (bad) 
  41a20d:	dec    ecx
  41a20e:	test   DWORD PTR [edx+0x64],ebx
  41a211:	push   ds
  41a212:	adc    eax,0xfbe707e1
  41a217:	out    0xd5,al
  41a219:	int3   
  41a21a:	in     eax,dx
  41a21b:	popa   
  41a21c:	js     0x41a211
  41a21e:	xchg   ecx,eax
  41a21f:	in     eax,0x56
  41a221:	xchg   edi,eax
  41a222:	inc    ecx
  41a223:	scas   eax,DWORD PTR es:[edi]
  41a224:	ret    
  41a225:	(bad)  
  41a227:	adc    ch,BYTE PTR fs:[eax+0x32]
  41a22b:	out    dx,eax
  41a22c:	fbstp  TBYTE PTR [esi+0x483f7d12]
  41a232:	cdq    
  41a233:	cld    
  41a234:	and    DWORD PTR [ebx+0x2864f4f1],ebp
  41a23a:	xor    al,0x75
  41a23c:	lods   al,BYTE PTR ds:[esi]
  41a23d:	shr    ebx,0x5d
  41a240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a241:	adc    edx,DWORD PTR [ebx-0x61211423]
  41a247:	sbb    al,BYTE PTR [esi-0x4d]
  41a24a:	push   eax
  41a24b:	jl     0x41a200
  41a24d:	out    0xba,eax
  41a24f:	dec    esi
  41a250:	std    
  41a251:	mov    dh,0x52
  41a253:	sub    cl,BYTE PTR [esi-0x14]
  41a256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a257:	ja     0x41a275
  41a259:	test   BYTE PTR [edi+ecx*1],cl
  41a25c:	pop    ds
  41a25d:	and    dl,BYTE PTR [ecx-0x69fa9c26]
  41a263:	sbb    ebp,DWORD PTR [ebx]
  41a265:	(bad)  
  41a266:	mov    ds:0x6b85cb91,al
  41a26b:	enter  0xd490,0x5a
  41a26f:	mov    ah,ch
  41a271:	std    
  41a272:	pop    DWORD PTR [ebx+0x60]
  41a275:	popf   
  41a276:	dec    esp
  41a277:	dec    esi
  41a278:	lods   al,BYTE PTR ds:[esi]
  41a279:	retf   
  41a27a:	popf   
  41a27b:	jp     0x41a2c1
  41a27d:	push   edx
  41a27e:	cmp    edx,DWORD PTR [ecx+edx*8]
  41a281:	sbb    DWORD PTR [edx+edi*1+0x18f2cb78],edi
  41a288:	fdiv   QWORD PTR [esp+esi*1-0x4]
  41a28c:	clc    
  41a28d:	add    edi,DWORD PTR [ebp-0x2fc593ad]
  41a293:	sbb    bl,BYTE PTR [edi]
  41a295:	sahf   
  41a296:	xor    DWORD PTR [eax+esi*8-0x6173d7b0],0xa6475b44
  41a2a1:	ds push edi
  41a2a3:	fsubr  DWORD PTR [ecx]
  41a2a5:	sbb    eax,edi
  41a2a7:	test   eax,0x1487c0d9
  41a2ac:	dec    ebx
  41a2ad:	inc    edi
  41a2ae:	outs   dx,BYTE PTR ds:[esi]
  41a2af:	out    dx,al
  41a2b0:	mov    esp,ebp
  41a2b2:	lea    ecx,[eax+0x7]
  41a2b5:	stc    
  41a2b6:	or     BYTE PTR [ecx],ch
  41a2b8:	repz inc edi
  41a2ba:	jns    0x41a2e0
  41a2bc:	add    eax,0x90f5d71
  41a2c1:	sub    bh,0x24
  41a2c4:	mov    edx,0xb31a318d
  41a2c9:	sbb    al,0x2c
  41a2cb:	pop    ecx
  41a2cc:	or     ecx,ebp
  41a2ce:	(bad)  
  41a2cf:	push   edi
  41a2d0:	xor    DWORD PTR [ecx+0x67807cb6],esi
  41a2d6:	fstp   QWORD PTR [edi-0x5ebf6638]
  41a2dc:	push   ebx
  41a2dd:	lods   eax,DWORD PTR ds:[esi]
  41a2de:	sbb    BYTE PTR [edx],ch
  41a2e0:	fnsave [esi-0x198f2538]
  41a2e6:	and    DWORD PTR ds:0xe378da4e,esp
  41a2ec:	mov    ds:0x118ade90,eax
  41a2f1:	mov    dl,0x52
  41a2f3:	or     DWORD PTR [edi],ecx
  41a2f5:	dec    edx
  41a2f6:	out    0xe,eax
  41a2f8:	daa    
  41a2f9:	retf   0xb077
  41a2fc:	dec    DWORD PTR [edx-0xc]
  41a2ff:	jp     0x41a379
  41a301:	in     al,0x28
  41a303:	bound  ebp,QWORD PTR [eax+0x3f]
  41a306:	sti    
  41a307:	adc    eax,0xcc27ed96
  41a30c:	push   ecx
  41a30d:	ds xor eax,0x57860f95
  41a313:	jnp    0x41a32f
  41a315:	sbb    DWORD PTR ds:0x17ab846d,edi
  41a31b:	jnp    0x41a371
  41a31d:	jmp    0xb3f6dcdf
  41a322:	xchg   esp,eax
  41a323:	ds push cs
  41a325:	jmp    0xb5e28c5a
  41a32a:	nop
  41a32b:	adc    BYTE PTR [ebx+0x301b6563],ah
  41a331:	sti    
  41a332:	adc    bl,ch
  41a334:	push   edx
  41a335:	icebp  
  41a336:	lahf   
  41a337:	mov    eax,0x45178b73
  41a33c:	push   esp
  41a33d:	stc    
  41a33e:	xor    BYTE PTR [ecx-0x797e4cad],ah
  41a344:	outs   dx,BYTE PTR ds:[esi]
  41a345:	mov    cl,0x34
  41a347:	outs   dx,BYTE PTR ds:[esi]
  41a348:	and    DWORD PTR [edx],ebp
  41a34a:	xor    ebp,ebx
  41a34c:	xchg   esp,eax
  41a34d:	cmp    al,0x59
  41a34f:	hlt    
  41a350:	mov    DWORD PTR [edi+edi*8+0x17e232f7],esp
  41a357:	push   0x9727e413
  41a35c:	leave  
  41a35d:	js     0x41a3b8
  41a35f:	mov    eax,ds:0x88cd76b3
  41a364:	idiv   DWORD PTR [ebp-0x25]
  41a367:	cld    
  41a368:	sti    
  41a369:	cmp    DWORD PTR [esi+ecx*4],ebx
  41a36c:	addr16 or al,0x8a
  41a36f:	fsubp  st(1),st
  41a371:	xchg   edi,eax
  41a372:	call   0xee7ecb9a
  41a377:	adc    BYTE PTR [eax],ch
  41a379:	mov    dh,0xe5
  41a37b:	cmp    edx,DWORD PTR [edi]
  41a37d:	ins    BYTE PTR es:[di],dx
  41a37f:	lods   al,BYTE PTR ds:[esi]
  41a380:	std    
  41a381:	lods   al,BYTE PTR fs:[esi]
  41a383:	add    BYTE PTR cs:[edi],dl
  41a386:	and    DWORD PTR [ecx-0x4c],0x47bbec83
  41a38d:	pop    es
  41a38e:	mov    ebp,0xb023f04e
  41a393:	xchg   ebp,eax
  41a394:	and    eax,0xc8bc58f0
  41a399:	call   0x6f23:0xa340e332
  41a3a0:	mov    eax,0x7849a9a8
  41a3a5:	ret    0xadcb
  41a3a8:	jno    0x41a3b3
  41a3aa:	int    0xa5
  41a3ac:	mov    ebx,0x12c16d20
  41a3b1:	clc    
  41a3b2:	xor    ah,BYTE PTR [edx+0x4c]
  41a3b5:	or     ebx,DWORD PTR [edx-0x4d]
  41a3b8:	stc    
  41a3b9:	dec    esp
  41a3ba:	rol    DWORD PTR [eax-0x13],1
  41a3bd:	xchg   esp,eax
  41a3be:	adc    BYTE PTR [ebp+0x6f297f9d],ch
  41a3c4:	mov    al,0x43
  41a3c6:	in     al,dx
  41a3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c8:	test   BYTE PTR [ecx-0x4],bl
  41a3cb:	dec    esp
  41a3cc:	cdq    
  41a3cd:	jp     0x41a3c7
  41a3cf:	mov    ds:0xd51b230d,eax
  41a3d4:	cmp    esp,DWORD PTR [edi*2+0x7e596e63]
  41a3db:	daa    
  41a3dc:	fst    QWORD PTR ss:[edi-0x185aeaf9]
  41a3e3:	xchg   esi,eax
  41a3e4:	outs   dx,DWORD PTR ds:[esi]
  41a3e5:	push   ds
  41a3e6:	pop    esp
  41a3e7:	inc    edx
  41a3e8:	sub    DWORD PTR [ebx+0x36],esi
  41a3eb:	test   BYTE PTR [edx+0x30],dh
  41a3ee:	mov    ah,0xd
  41a3f0:	inc    eax
  41a3f1:	push   esp
  41a3f2:	sbb    al,0xea
  41a3f4:	push   ebp
  41a3f5:	in     al,dx
  41a3f6:	xor    edi,ebp
  41a3f8:	pop    esp
  41a3f9:	or     dl,ch
  41a3fb:	shl    BYTE PTR [ecx-0x161ad5c3],cl
  41a401:	jmp    0x41a39a
  41a403:	mov    edi,0x9d23864
  41a408:	inc    eax
  41a409:	popf   
  41a40a:	lea    edx,[ecx+ebx*1]
  41a40d:	fistp  QWORD PTR [ebx+0x529fd553]
  41a413:	(bad)  
  41a414:	das    
  41a415:	mov    al,0xb7
  41a417:	lods   eax,DWORD PTR ds:[esi]
  41a418:	push   0x928936ac
  41a41d:	aaa    
  41a41e:	push   0x5ac1725
  41a423:	sbb    dh,BYTE PTR [edx+eax*4]
  41a426:	int    0x67
  41a428:	push   eax
  41a429:	jne    0x41a3c2
  41a42b:	xchg   DWORD PTR [ebp-0x1cde7642],eax
  41a431:	pop    ebp
  41a432:	sub    DWORD PTR [edx],0xffffff90
  41a435:	inc    ebx
  41a436:	adc    DWORD PTR [ebx+0x6c04034e],esi
  41a43c:	test   ax,0x946b
  41a440:	rol    DWORD PTR [ebp+0x62],1
  41a443:	push   ss
  41a444:	inc    edi
  41a445:	scas   eax,DWORD PTR es:[edi]
  41a446:	sbb    eax,0x759222c6
  41a44b:	adc    BYTE PTR [eax+ebx*2+0x66],cl
  41a44f:	mov    edi,0x44999f7e
  41a454:	dec    ebx
  41a455:	push   ss
  41a456:	mov    ebx,0x1dba2363
  41a45b:	xchg   esp,eax
  41a45c:	pop    esp
  41a45d:	xchg   ebp,eax
  41a45e:	push   ebx
  41a45f:	adc    BYTE PTR [esi+0x79],0x30
  41a463:	not    DWORD PTR [esi+esi*2]
  41a466:	mov    ds:0x14acf0d3,al
  41a46b:	imul   BYTE PTR [ecx+0x45]
  41a46e:	(bad)  
  41a46f:	repz add eax,0x1dd1d184
  41a475:	lock iret 
  41a477:	test   ch,bl
  41a479:	sbb    al,0xd6
  41a47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47c:	jno    0x41a444
  41a47e:	mov    esp,0xd5c52872
  41a483:	les    esi,FWORD PTR [edi-0x708903a5]
  41a489:	inc    ebx
  41a48a:	out    dx,eax
  41a48b:	push   eax
  41a48c:	ret    
  41a48d:	mov    bh,0xae
  41a48f:	cmp    ecx,DWORD PTR [edi-0x79]
  41a492:	bound  ecx,QWORD PTR [ebx]
  41a494:	fmul   QWORD PTR [eax+esi*1+0x7698f49]
  41a49b:	mov    cs,ecx
  41a49d:	repnz test BYTE PTR [edi+0x1f],bl
  41a4a1:	gs jg  0x41a45f
  41a4a4:	sub    cl,BYTE PTR [ecx]
  41a4a6:	(bad)  
  41a4a7:	jg     0x41a4e2
  41a4a9:	mul    DWORD PTR [ebp-0x50b9b693]
  41a4af:	inc    esp
  41a4b0:	sub    al,0xdb
  41a4b2:	retf   
  41a4b3:	shl    ah,0xe1
  41a4b6:	ret    0x6f7a
  41a4b9:	fbld   TBYTE PTR [edi-0x51]
  41a4bc:	popa   
  41a4bd:	mov    dh,0x70
  41a4bf:	scas   eax,DWORD PTR es:[edi]
  41a4c0:	ins    DWORD PTR es:[edi],dx
  41a4c1:	mov    bh,0x45
  41a4c3:	rol    BYTE PTR [edx+0x200fd0d9],1
  41a4c9:	int3   
  41a4ca:	mov    al,0x37
  41a4cc:	mov    ds,edi
  41a4ce:	fist   WORD PTR [edi-0x1]
  41a4d1:	sbb    ch,BYTE PTR [edi-0x73]
  41a4d4:	mov    ecx,0x37e63f68
  41a4d9:	cdq    
  41a4da:	aam    0x7
  41a4dc:	out    dx,al
  41a4dd:	ins    BYTE PTR es:[edi],dx
  41a4de:	out    dx,eax
  41a4df:	shr    ebx,0x5b
  41a4e2:	int3   
  41a4e3:	and    al,dh
  41a4e5:	dec    edi
  41a4e6:	lea    esp,[edi+0xd253c34]
  41a4ec:	test   al,0x22
  41a4ee:	hlt    
  41a4ef:	std    
  41a4f0:	sbb    DWORD PTR [ecx+0x27019f0a],ebp
  41a4f6:	mov    dh,0x3
  41a4f8:	enter  0xf34e,0xe5
  41a4fc:	mov    al,0x0
  41a4fe:	inc    ebx
  41a4ff:	stos   DWORD PTR es:[edi],eax
  41a500:	scas   eax,DWORD PTR es:[edi]
  41a501:	add    ebp,DWORD PTR [edx-0x2d449572]
  41a507:	ins    BYTE PTR es:[edi],dx
  41a508:	mov    eax,ds:0x93cdba4c
  41a50d:	mov    al,ds:0xe6baf4d1
  41a512:	mov    DWORD PTR [edx-0x5b],ecx
  41a515:	enter  0xe2a8,0xf6
  41a519:	cdq    
  41a51a:	mov    bl,0x99
  41a51c:	or     al,0x4f
  41a51e:	outs   dx,BYTE PTR ds:[esi]
  41a51f:	cmp    DWORD PTR [ebp+0xf],edx
  41a522:	aad    0x37
  41a524:	cmp    al,0x75
  41a526:	and    BYTE PTR ds:0xf35cdbd5,al
  41a52c:	inc    eax
  41a52d:	loope  0x41a546
  41a52f:	dec    ecx
  41a530:	sub    DWORD PTR [ebx+0x6c],esi
  41a533:	add    eax,0x8c65ede0
  41a538:	stos   BYTE PTR es:[edi],al
  41a539:	es push cs
  41a53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a53c:	or     al,0xc3
  41a53e:	jnp    0x41a504
  41a540:	adc    eax,0x7e1fd6fb
  41a545:	in     eax,dx
  41a546:	mov    esi,0xbb751d5d
  41a54b:	aad    0x45
  41a54d:	ja     0x41a51d
  41a54f:	push   edx
  41a550:	xchg   esp,eax
  41a551:	sub    DWORD PTR [esi-0x1f9e6bd4],0xfffffffc
  41a558:	shl    edx,1
  41a55a:	push   eax
  41a55b:	jbe    0x41a4fd
  41a55d:	call   0x9f81:0x52f8e243
  41a564:	int    0x62
  41a566:	clc    
  41a567:	addr16 and al,0x82
  41a56a:	adc    bh,BYTE PTR [esi]
  41a56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a56d:	jmp    0x86d9fb53
  41a572:	loope  0x41a5bf
  41a574:	call   0xed8f:0x77cd0b0a
  41a57b:	pop    esi
  41a57c:	cld    
  41a57d:	xchg   ebx,eax
  41a57e:	imul   ebp,DWORD PTR [edx+ecx*2-0x3e9f0ea7],0x9506ef2f
  41a589:	repnz and al,0xb1
  41a58c:	aaa    
  41a58d:	push   cs
  41a58e:	xchg   edx,eax
  41a58f:	adc    dl,al
  41a591:	xchg   edx,eax
  41a592:	hlt    
  41a593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a594:	mov    ch,0x30
  41a596:	pop    ecx
  41a597:	dec    ebp
  41a598:	icebp  
  41a599:	dec    ebx
  41a59a:	sub    DWORD PTR [ecx-0x7a],0xffffffa9
  41a59e:	xlat   BYTE PTR ds:[ebx]
  41a59f:	imul   esp,DWORD PTR [esi],0xffffffcd
  41a5a2:	clc    
  41a5a3:	pop    edi
  41a5a4:	push   ss
  41a5a5:	out    0x41,al
  41a5a7:	loop   0x41a5ca
  41a5a9:	sbb    BYTE PTR [esi+esi*4-0x32706618],cl
  41a5b0:	jb     0x41a60a
  41a5b2:	xchg   ebp,eax
  41a5b3:	gs adc ebx,eax
  41a5b6:	icebp  
  41a5b7:	push   0xd73c4afa
  41a5bc:	mov    WORD PTR [ebx-0x2d],ss
  41a5bf:	pop    ecx
  41a5c0:	aaa    
  41a5c1:	fs rcr dl,1
  41a5c4:	rcl    BYTE PTR [ebx+0x3db84f80],0xce
  41a5cb:	mov    eax,0x4acb447e
  41a5d0:	and    eax,0xa46ceb57
  41a5d5:	and    DWORD PTR [edx+0x25],esp
  41a5d8:	sub    ch,BYTE PTR [ecx+0x9]
  41a5db:	test   al,0xa0
  41a5dd:	std    
  41a5de:	jmp    0x41a57a
  41a5e0:	cmp    al,0x7a
  41a5e2:	mov    esi,0x96a092e2
  41a5e7:	push   ds
  41a5e8:	jnp    0x41a5f8
  41a5ea:	mov    ebx,0xbf46c7d5
  41a5ef:	adc    ebp,eax
  41a5f1:	aas    
  41a5f2:	out    dx,eax
  41a5f3:	popf   
  41a5f4:	xchg   ebp,eax
  41a5f5:	rol    edx,1
  41a5f7:	xor    cl,dl
  41a5f9:	mov    bh,0xd
  41a5fb:	stos   BYTE PTR es:[edi],al
  41a5fc:	xor    ecx,DWORD PTR [eax+edx*1+0xba3791d]
  41a603:	ret    0xfe46
  41a606:	(bad)
  41a60a:	or     dl,bh
  41a60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a60d:	icebp  
  41a60e:	and    esp,esp
  41a610:	and    eax,0x34f7d7e2
  41a615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a616:	shl    edx,cl
  41a618:	sbb    DWORD PTR [esi-0x6f],edx
  41a61b:	add    eax,0x9392ebd3
  41a620:	ja     0x41a68a
  41a622:	mov    ah,0x41
  41a624:	jl     0x41a5a6
  41a626:	fidiv  DWORD PTR [ebp+0x50]
  41a629:	push   ds
  41a62a:	or     DWORD PTR [eax-0x7014fac6],0xffffffdc
  41a631:	cs push ss
  41a633:	rcr    edi,cl
  41a635:	fld    DWORD PTR [ebp-0x1e]
  41a638:	data16 ins BYTE PTR es:[edi],dx
  41a63a:	clts   
  41a63c:	setl   BYTE PTR [edx+0x59c7220e]
  41a643:	fdivr  st,st(7)
  41a645:	xlat   BYTE PTR ds:[ebx]
  41a646:	mov    eax,ds:0xe5c2d309
  41a64b:	jl     0x41a618
  41a64d:	mov    ds:0xc7e728bc,eax
  41a652:	lods   eax,DWORD PTR ds:[esi]
  41a653:	cld    
  41a654:	sbb    esi,DWORD PTR [eax+0x43670cec]
  41a65a:	push   eax
  41a65b:	xchg   esp,eax
  41a65c:	ins    BYTE PTR es:[edi],dx
  41a65d:	push   ecx
  41a65e:	or     eax,0x8a135499
  41a663:	cli    
  41a664:	sbb    dh,bl
  41a666:	mov    al,0x1a
  41a668:	and    eax,0xe714c91a
  41a66d:	lock nop
  41a66f:	lods   eax,DWORD PTR ds:[esi]
  41a670:	mov    DWORD PTR [ecx],esp
  41a672:	hlt    
  41a673:	mov    al,0xf7
  41a675:	fadd   DWORD PTR [esi-0x13]
  41a678:	xchg   ebx,eax
  41a679:	mul    BYTE PTR [edx+0x56]
  41a67c:	loop   0x41a616
  41a67e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a67f:	or     BYTE PTR ds:0xae169fa7,dh
  41a685:	mov    ds:0xa570afff,eax
  41a68a:	test   DWORD PTR [eax],0x14caac4d
  41a690:	add    eax,0xdc6c98b9
  41a695:	adc    DWORD PTR [ebx+0x3bd1b10f],0xffffffa8
  41a69c:	popa   
  41a69d:	das    
  41a69e:	mov    ebp,0x852f7c93
  41a6a3:	push   ss
  41a6a4:	adc    bl,dl
  41a6a6:	dec    esp
  41a6a7:	cmp    dh,BYTE PTR [edx-0x33]
  41a6aa:	(bad)  
  41a6ac:	scas   eax,DWORD PTR es:[edi]
  41a6ad:	inc    eax
  41a6ae:	fild   WORD PTR [eax-0x7663caa]
  41a6b4:	jp     0x41a6cb
  41a6b6:	pop    eax
  41a6b7:	push   0x16
  41a6b9:	add    DWORD PTR [esi+ebx*4+0x4a],edx
  41a6bd:	xchg   ebp,eax
  41a6be:	dec    esp
  41a6bf:	(bad)  
  41a6c0:	mov    esi,0xd40a943d
  41a6c5:	push   es
  41a6c6:	mov    ebp,0x29c59273
  41a6cb:	sub    al,0x8
  41a6cd:	dec    eax
  41a6ce:	xchg   edi,eax
  41a6cf:	jb     0x41a6d1
  41a6d1:	enter  0xd517,0x75
  41a6d5:	int    0xbb
  41a6d7:	add    al,0x5
  41a6d9:	das    
  41a6da:	mov    gs,WORD PTR [ecx-0x5d11755e]
  41a6e0:	stos   BYTE PTR es:[edi],al
  41a6e1:	cmc    
  41a6e2:	test   bl,dh
  41a6e4:	in     eax,dx
  41a6e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e6:	stc    
  41a6e7:	mov    cl,BYTE PTR [ecx+0x23]
  41a6ea:	mov    edi,0x467d1ba6
  41a6ef:	mov    edx,0x470fde28
  41a6f4:	ds dec esi
  41a6f6:	test   BYTE PTR [eax-0x786b19bd],dl
  41a6fc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a6fe:	mov    ah,0x99
  41a700:	mov    esi,0xd0167f60
  41a705:	push   esi
  41a706:	xor    al,0x56
  41a708:	leave  
  41a709:	nop
  41a70a:	aam    0x46
  41a70c:	fsub   st,st(6)
  41a70e:	sbb    al,0x3f
  41a710:	sahf   
  41a711:	iret   
  41a712:	rcl    DWORD PTR [esi],cl
  41a714:	loopne 0x41a70d
  41a716:	mov    cl,0x5b
  41a718:	or     BYTE PTR [edx+esi*1],dl
  41a71b:	or     ebx,ecx
  41a71d:	push   ecx
  41a71e:	push   ebx
  41a71f:	arpl   WORD PTR [eax-0x29864f81],sp
  41a725:	(bad)  
  41a726:	loopne 0x41a797
  41a728:	mov    ds:0x848f357d,al
  41a72d:	mov    esi,0xaa9351e6
  41a732:	push   cs
  41a733:	push   edi
  41a734:	cs aas 
  41a736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a737:	stos   BYTE PTR es:[edi],al
  41a738:	mov    cl,bh
  41a73a:	cli    
  41a73b:	out    0x4f,al
  41a73d:	push   esi
  41a73e:	mov    BYTE PTR [edi-0x5472987a],ch
  41a744:	es aad 0xe0
  41a747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a748:	dec    eax
  41a749:	inc    edi
  41a74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a74b:	in     al,0x3a
  41a74d:	out    dx,eax
  41a74e:	inc    ecx
  41a74f:	mov    bh,0xdf
  41a751:	mov    edi,0x9928e9f2
  41a756:	jmp    0x29393190
  41a75b:	test   DWORD PTR [edi+ecx*1-0x6e8e7b93],ebp
  41a762:	aas    
  41a763:	jnp    0x41a76d
  41a765:	xchg   edi,eax
  41a766:	gs enter 0x2c33,0x59
  41a76b:	jge    0x41a764
  41a76d:	push   es
  41a76e:	popf   
  41a76f:	mov    eax,0xc2ce4cff
  41a774:	sub    BYTE PTR ds:0x2e276592,dh
  41a77a:	test   al,0x3e
  41a77c:	xor    al,0xc3
  41a77e:	pop    ss
  41a77f:	cli    
  41a780:	loopne 0x41a7b8
  41a782:	mov    eax,ds:0xcb5fe646
  41a787:	in     al,dx
  41a788:	(bad)  
  41a789:	fadd   DWORD PTR [esi-0x13d4390e]
  41a78f:	sub    eax,0xed65ab77
  41a794:	mov    eax,0x20c124d2
  41a799:	ins    DWORD PTR es:[edi],dx
  41a79a:	mov    ebp,0x64633ee4
  41a79f:	sub    eax,0xe3962087
  41a7a4:	push   ebx
  41a7a5:	dec    ebp
  41a7a6:	inc    esp
  41a7a7:	aas    
  41a7a8:	out    dx,al
  41a7a9:	icebp  
  41a7aa:	adc    DWORD PTR [ebx],ecx
  41a7ac:	sbb    bh,dh
  41a7ae:	hlt    
  41a7af:	sub    BYTE PTR [ebp+0x5b],ch
  41a7b2:	nop
  41a7b3:	xchg   BYTE PTR [edx-0x2c2e8743],ch
  41a7b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ba:	or     ecx,DWORD PTR [ebp+0x4c]
  41a7bd:	test   al,0xcd
  41a7bf:	ret    0xf494
  41a7c2:	mov    ds:0xcbc896c0,al
  41a7c7:	mov    eax,ds:0x496d017
  41a7cc:	retf   0xe2fc
  41a7cf:	shr    DWORD PTR [eax+edx*8],cl
  41a7d2:	das    
  41a7d3:	push   ds
  41a7d4:	imul   sp,WORD PTR [ebx],0xc1ed
  41a7d9:	aad    0x21
  41a7db:	sbb    al,0x98
  41a7dd:	push   0xffffffac
  41a7df:	stos   BYTE PTR es:[edi],al
  41a7e0:	pop    eax
  41a7e1:	rcl    BYTE PTR [ebx-0x4ad1748f],cl
  41a7e7:	mov    ah,0xcb
  41a7e9:	push   eax
  41a7ea:	in     al,0x78
  41a7ec:	les    ebx,FWORD PTR [eax]
  41a7ee:	mul    DWORD PTR [edi+ebx*1+0x68d429fe]
  41a7f5:	and    al,0x14
  41a7f7:	cmovb  edi,DWORD PTR [edi-0x70]
  41a7fb:	std    
  41a7fc:	sti    
  41a7fd:	call   0x61d67cae
  41a802:	pop    ds
  41a803:	sahf   
  41a804:	xor    esp,DWORD PTR [esi+0x6b]
  41a807:	mov    eax,0xd7f86e83
  41a80c:	cmp    esi,ebp
  41a80e:	jno    0x41a7c6
  41a810:	jno    0x41a835
  41a812:	lock xor ah,BYTE PTR [ebx+edx*8-0x1a]
  41a817:	cli    
  41a818:	mov    ecx,edi
  41a81a:	adc    DWORD PTR [edx],ebp
  41a81c:	fsubr  st,st(1)
  41a81e:	pop    ebp
  41a81f:	push   es
  41a820:	and    dh,cl
  41a822:	mov    cl,dl
  41a824:	xchg   esp,eax
  41a825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a827:	aad    0x49
  41a829:	jnp    0x41a7f4
  41a82b:	lods   eax,DWORD PTR ds:[esi]
  41a82c:	hlt    
  41a82d:	cli    
  41a82e:	inc    edx
  41a82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a830:	aas    
  41a831:	into   
  41a832:	and    DWORD PTR [ecx+0x59],eax
  41a835:	repz test BYTE PTR [esi+esi*8],0x7b
  41a83a:	fdivr  QWORD PTR [ebx+edx*2+0x7df2828f]
  41a841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a842:	sub    al,0x96
  41a844:	xor    BYTE PTR [esp+eax*1],dh
  41a847:	cmp    DWORD PTR [edx+0x0],esp
  41a84a:	xchg   BYTE PTR [ecx-0x3a],bl
  41a84d:	mov    esp,0x22cf741a
  41a852:	out    0x8c,eax
  41a854:	bnd jl 0x41a852
  41a857:	inc    esi
  41a858:	es jns 0x41a860
  41a85b:	pop    ds
  41a85c:	cwde   
  41a85d:	mov    edx,0x8eaf9158
  41a862:	or     al,0xf4
  41a864:	ja     0x41a8d9
  41a866:	xor    al,0xe1
  41a868:	mov    ebx,0x496ecdd6
  41a86d:	aam    0xb6
  41a86f:	jecxz  0x41a801
  41a871:	jge    0x41a8c8
  41a873:	out    0xd3,al
  41a875:	std    
  41a876:	test   BYTE PTR [edi],0x33
  41a879:	mov    al,0x90
  41a87b:	int    0xe6
  41a87d:	(bad)  
  41a87e:	out    dx,al
  41a87f:	push   edx
  41a880:	inc    esp
  41a881:	std    
  41a882:	xor    ax,0x4dd9
  41a886:	inc    ebp
  41a887:	and    eax,0x71612952
  41a88c:	outs   dx,DWORD PTR ds:[esi]
  41a88d:	rcl    BYTE PTR [eax+0x4b],cl
  41a890:	cwde   
  41a891:	nop
  41a892:	test   eax,0x2bb01431
  41a897:	shr    DWORD PTR ds:0x79e6f0cb,cl
  41a89d:	push   ebp
  41a89e:	jae    0x41a8e9
  41a8a0:	sbb    BYTE PTR ds:0xabe40338,0xbe
  41a8a7:	rcl    DWORD PTR [ebp-0x3e61b0eb],1
  41a8ad:	stos   DWORD PTR es:[edi],eax
  41a8ae:	mov    al,0x55
  41a8b0:	retf   0x4d31
  41a8b3:	jns    0x41a8f9
  41a8b5:	dec    ebp
  41a8b6:	and    DWORD PTR [edi-0x4b],ebp
  41a8b9:	shr    BYTE PTR [ebp+0x5],0xd9
  41a8bd:	fisttp WORD PTR [edx+0x11]
  41a8c0:	cmp    esi,DWORD PTR [esi+ebp*2-0x35]
  41a8c4:	push   ds
  41a8c5:	cs aas 
  41a8c7:	clc    
  41a8c8:	or     eax,0x70b4840d
  41a8cd:	add    eax,0xc03ef935
  41a8d2:	inc    ebp
  41a8d3:	add    edi,DWORD PTR [edx-0x554e7108]
  41a8d9:	fwait
  41a8da:	mov    al,ds:0x1660b32a
  41a8df:	dec    eax
  41a8e0:	xchg   DWORD PTR [eax+ebp*2+0x59],eax
  41a8e4:	out    0x7e,al
  41a8e6:	dec    edi
  41a8e7:	enter  0x8d06,0xef
  41a8eb:	and    DWORD PTR [ebp+0x1],0xffffffaa
  41a8ef:	pusha  
  41a8f0:	pusha  
  41a8f1:	add    al,0xb9
  41a8f3:	ins    DWORD PTR es:[edi],dx
  41a8f4:	jno    0x41a928
  41a8f6:	sbb    bh,dh
  41a8f8:	scas   al,BYTE PTR es:[edi]
  41a8f9:	jo     0x41a8ca
  41a8fb:	das    
  41a8fc:	dec    ebp
  41a8fd:	cld    
  41a8fe:	mov    DWORD PTR [edx-0x530a0efb],esi
  41a904:	popa   
  41a905:	rcr    DWORD PTR [eax-0x51],1
  41a908:	call   0x371d7885
  41a90d:	outs   dx,BYTE PTR ds:[esi]
  41a90e:	jl     0x41a890
  41a910:	int3   
  41a911:	or     eax,DWORD PTR [ecx-0x690cd0d9]
  41a917:	nop
  41a918:	xchg   ebx,eax
  41a919:	or     al,0x7d
  41a91b:	sbb    dl,ah
  41a91d:	outs   dx,DWORD PTR ds:[esi]
  41a91e:	xchg   ebp,eax
  41a91f:	jp     0x41a96f
  41a921:	jno    0x41a8c2
  41a923:	or     DWORD PTR [edx+0x12],ecx
  41a926:	cmp    cl,ch
  41a928:	or     ah,BYTE PTR ss:[edx-0x658a2821]
  41a92f:	inc    ebp
  41a930:	(bad)  
  41a931:	sub    esi,edi
  41a933:	iret   
  41a934:	mov    esi,0x4800c135
  41a939:	jmp    0x41a913
  41a93b:	sbb    BYTE PTR [edx],ah
  41a93d:	pop    eax
  41a93e:	add    DWORD PTR [ecx-0x5bccea0b],esi
  41a944:	repnz xor ecx,DWORD PTR [edi]
  41a947:	stos   BYTE PTR es:[edi],al
  41a948:	or     al,al
  41a94a:	sahf   
  41a94b:	cld    
  41a94c:	outs   dx,BYTE PTR ds:[esi]
  41a94d:	(bad)  
  41a94e:	mov    bl,0x18
  41a950:	xchg   ebx,eax
  41a951:	loopne 0x41a90d
  41a953:	sti    
  41a954:	aam    0x7f
  41a956:	fsubrp st(5),st
  41a958:	call   0x1f3323e7
  41a95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a95e:	ins    BYTE PTR es:[edi],dx
  41a95f:	sar    edi,1
  41a961:	mov    bh,0xdb
  41a963:	mov    edx,0x5cebc08f
  41a968:	pusha  
  41a969:	sub    bl,BYTE PTR [ebx]
  41a96b:	or     edx,ecx
  41a96d:	and    eax,0x99161087
  41a972:	addr16 fwait
  41a974:	stos   BYTE PTR es:[edi],al
  41a975:	inc    ecx
  41a976:	xchg   DWORD PTR [edi],edx
  41a978:	sbb    al,0xed
  41a97a:	dec    edx
  41a97b:	pop    es
  41a97c:	lods   eax,DWORD PTR ds:[esi]
  41a97d:	push   ss
  41a97e:	pop    edi
  41a97f:	xor    esi,ecx
  41a981:	das    
  41a982:	out    dx,al
  41a983:	aam    0x91
  41a985:	pusha  
  41a986:	int3   
  41a987:	push   edx
  41a988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a989:	pop    es
  41a98a:	repz ret 0x4ed8
  41a98e:	mov    al,0x32
  41a990:	std    
  41a991:	aad    0x19
  41a993:	jb     0x41a9a9
  41a995:	mov    ah,BYTE PTR [esi+0x5b]
  41a998:	dec    ecx
  41a999:	ja     0x41a97f
  41a99b:	xchg   DWORD PTR [edi-0x552e18c1],ebx
  41a9a1:	hlt    
  41a9a2:	scas   al,BYTE PTR es:[edi]
  41a9a3:	cld    
  41a9a4:	test   eax,0x8e26d39
  41a9a9:	sti    
  41a9aa:	mov    cl,0x82
  41a9ac:	jbe    0x41a9a2
  41a9ae:	aad    0xb9
  41a9b0:	xchg   edx,eax
  41a9b1:	ror    BYTE PTR [edx+0x12ad514d],1
  41a9b7:	test   DWORD PTR [ecx-0x2f381eb2],0xada804ec
  41a9c1:	scas   al,BYTE PTR es:[edi]
  41a9c2:	test   BYTE PTR [esi],ah
  41a9c4:	pop    ds
  41a9c5:	sub    eax,0xbba818b1
  41a9ca:	shl    edi,1
  41a9cc:	or     eax,0x8dfb8e1f
  41a9d1:	rcl    DWORD PTR [ebx],cl
  41a9d3:	sub    bl,dh
  41a9d5:	xchg   ebx,eax
  41a9d6:	inc    edi
  41a9d7:	inc    esp
  41a9d8:	repz ret 
  41a9da:	xchg   DWORD PTR [ecx+0xb],edx
  41a9dd:	lds    ecx,FWORD PTR [edx]
  41a9df:	push   0x8ba9043
  41a9e4:	div    BYTE PTR [esi]
  41a9e6:	pop    esp
  41a9e7:	xor    DWORD PTR [esi+0x16],ecx
  41a9ea:	dec    esp
  41a9eb:	sbb    ah,0x4b
  41a9ee:	add    eax,0x4e44fb2b
  41a9f3:	sbb    eax,0x6fd66d63
  41a9f8:	int    0xfa
  41a9fa:	and    ebx,eax
  41a9fc:	mov    dh,0xec
  41a9fe:	hlt    
  41a9ff:	push   esi
  41aa00:	or     eax,0xe26254c7
  41aa05:	mov    ecx,0xa62ce1f1
  41aa0a:	adc    ecx,DWORD PTR [ecx]
  41aa0c:	xor    al,0x5b
  41aa0e:	std    
  41aa0f:	xor    DWORD PTR [ebx-0x7f],ecx
  41aa12:	add    edx,0x30
  41aa15:	jg     0x41aa8c
  41aa17:	cmp    BYTE PTR [ecx+0x57d6d256],bl
  41aa1d:	out    0x3,eax
  41aa1f:	inc    ecx
  41aa20:	sub    DWORD PTR [eax-0x4f2674c8],0x8ee675b3
  41aa2a:	push   ds
  41aa2b:	pop    esp
  41aa2c:	ficomp WORD PTR [eax-0x7fb9c7a9]
  41aa32:	xor    DWORD PTR [ecx-0x26898bc5],edx
  41aa38:	xchg   edx,eax
  41aa39:	and    eax,0x9309de62
  41aa3e:	(bad)  
  41aa3f:	dec    eax
  41aa40:	push   ss
  41aa41:	stos   BYTE PTR es:[edi],al
  41aa42:	div    bh
  41aa44:	mov    ss,WORD PTR [ecx]
  41aa46:	cmp    eax,0xd4290f43
  41aa4b:	and    al,0xc7
  41aa4d:	retf   0x15cf
  41aa50:	jmp    FWORD PTR [ecx+esi*2+0x755cb1dd]
  41aa57:	aaa    
  41aa58:	push   esp
  41aa59:	mov    esi,0x2bfb3d7b
  41aa5e:	jecxz  0x41aad3
  41aa60:	retf   
  41aa61:	jo     0x41aa12
  41aa63:	pop    ds
  41aa64:	dec    esi
  41aa65:	dec    edx
  41aa66:	cmp    ecx,DWORD PTR [esi-0xe]
  41aa69:	or     ecx,ebp
  41aa6b:	lods   eax,DWORD PTR ds:[esi]
  41aa6c:	neg    BYTE PTR [ebx-0x6a9feb91]
  41aa72:	jle    0x41aa8c
  41aa74:	dec    esi
  41aa75:	push   ss
  41aa76:	sbb    eax,0xb7d37fb3
  41aa7b:	fidiv  WORD PTR [edi-0x6c9762a5]
  41aa81:	mov    ds:0x4f0f2458,al
  41aa86:	sub    DWORD PTR [esi],ecx
  41aa88:	jb     0x41aa57
  41aa8a:	ror    DWORD PTR [eax+0x7],cl
  41aa8d:	frstor [edi-0x1b1a6662]
  41aa93:	sub    ebx,DWORD PTR [esi+0x61]
  41aa96:	sub    DWORD PTR [edx+0xfd3007e],esp
  41aa9c:	add    bl,BYTE PTR [edi+0x7eff9b99]
  41aaa2:	fwait
  41aaa3:	push   ecx
  41aaa4:	or     ecx,DWORD PTR [eax-0x4e968ac3]
  41aaaa:	lods   al,BYTE PTR ds:[esi]
  41aaab:	cmp    BYTE PTR [ecx+0x40e51b73],bh
  41aab1:	es test eax,0x8b250eb3
  41aab7:	mov    ds:0x509ac45c,al
  41aabc:	ret    0x4f79
  41aabf:	(bad)  
  41aac0:	mov    ds:0xc510305a,eax
  41aac5:	outs   dx,BYTE PTR ds:[esi]
  41aac6:	aaa    
  41aac7:	in     al,dx
  41aac8:	sub    BYTE PTR [edx],bh
  41aaca:	hlt    
  41aacb:	icebp  
  41aacc:	(bad)  
  41aacd:	jmp    0x4eea:0x40dad2f
  41aad4:	or     DWORD PTR [ebx+0x3e],0xb8b59544
  41aadb:	cmp    al,0xed
  41aadd:	call   0xad067bf2
  41aae2:	out    0x6c,eax
  41aae4:	and    eax,esp
  41aae6:	ins    BYTE PTR es:[edi],dx
  41aae7:	call   0x1cc611a0
  41aaec:	push   esi
  41aaed:	fnstcw WORD PTR [ecx+eax*2]
  41aaf0:	adc    eax,0x78766db2
  41aaf5:	adc    ecx,DWORD PTR [ecx]
  41aaf7:	mov    bh,0x53
  41aaf9:	xchg   edx,eax
  41aafa:	inc    ecx
  41aafb:	add    bh,BYTE PTR [ebx]
  41aafd:	xor    bl,BYTE PTR [edx+0x49dbce03]
  41ab03:	call   0xb0d:0xe831b462
  41ab0a:	imul   eax,edx,0x9e512d6a
  41ab10:	dec    ecx
  41ab11:	push   es
  41ab12:	mov    edx,0x2572ea23
  41ab17:	out    dx,eax
  41ab18:	aaa    
  41ab19:	cmp    al,0x3b
  41ab1b:	cmp    al,al
  41ab1d:	js     0x41ab7a
  41ab1f:	jb     0x41aaa1
  41ab21:	mov    ch,0x47
  41ab23:	jbe    0x41ab10
  41ab25:	das    
  41ab26:	jae    0x41ab6c
  41ab28:	and    ecx,DWORD PTR [eax]
  41ab2a:	cmp    ebx,DWORD PTR [ecx+ebp*8-0xbeced85]
  41ab31:	pop    edx
  41ab32:	rcr    BYTE PTR [ecx],cl
  41ab34:	in     eax,dx
  41ab35:	das    
  41ab36:	jmp    0x41ab2e
  41ab38:	pop    ebp
  41ab39:	lea    eax,[ebp-0x7f]
  41ab3c:	aam    0xcc
  41ab3e:	or     eax,DWORD PTR [ecx-0x4c9725d6]
  41ab44:	leave  
  41ab45:	sub    esp,DWORD PTR [esp+edi*2+0xf57451f]
  41ab4c:	in     al,0x31
  41ab4e:	sbb    BYTE PTR [edi+esi*8+0xa666de2],cl
  41ab55:	jno    0x41aba5
  41ab57:	gs ds cwde 
  41ab5a:	or     eax,0x82dcb04f
  41ab5f:	pop    edi
  41ab60:	fs in  al,0xc4
  41ab63:	imul   edx,DWORD PTR [edx+0x7c04eb4],0xffffffe3
  41ab6a:	cld    
  41ab6b:	scas   eax,DWORD PTR es:[edi]
  41ab6c:	xor    eax,ebp
  41ab6e:	mov    al,0xdc
  41ab70:	sub    DWORD PTR [esi-0x32],esi
  41ab73:	jl     0x41ab26
  41ab75:	aas    
  41ab76:	sub    eax,0x26ab26ff
  41ab7b:	neg    ebx
  41ab7d:	or     BYTE PTR [ecx+eax*1+0x7c],bl
  41ab81:	xchg   ebx,eax
  41ab82:	mov    bh,0x5a
  41ab84:	cmc    
  41ab85:	mov    ds:0x42185873,al
  41ab8a:	clc    
  41ab8b:	lahf   
  41ab8c:	rcr    DWORD PTR [ebp-0x62],1
  41ab8f:	sub    ah,bl
  41ab91:	dec    edi
  41ab92:	cwde   
  41ab93:	push   ecx
  41ab94:	ins    BYTE PTR es:[edi],dx
  41ab95:	in     al,dx
  41ab96:	mov    ecx,ecx
  41ab98:	inc    esp
  41ab99:	rcl    BYTE PTR [ebp-0x3135bc58],cl
  41ab9f:	outs   dx,BYTE PTR ds:[esi]
  41aba0:	stos   DWORD PTR es:[edi],eax
  41aba1:	imul   DWORD PTR [eax-0x58]
  41aba4:	pop    ss
  41aba5:	cld    
  41aba6:	push   ebp
  41aba7:	nop
  41aba8:	cmc    
  41aba9:	shl    DWORD PTR [ebx+0x51],1
  41abac:	daa    
  41abad:	(bad)  
  41abae:	adc    edi,DWORD PTR [ebp+0x6a]
  41abb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb2:	call   0xcf9a:0xc5f1f3c2
  41abb9:	xor    BYTE PTR [ebp+0x7a],ch
  41abbc:	and    DWORD PTR [ebx-0x47f03ab6],0x98d1265b
  41abc6:	lods   eax,DWORD PTR ds:[esi]
  41abc7:	xor    ch,cl
  41abc9:	ss aaa 
  41abcb:	ds push ebx
  41abcd:	mov    bl,0x2e
  41abcf:	sub    eax,0x4c74a20
  41abd4:	ds (bad) 
  41abd6:	fld    TBYTE PTR [ebp-0x763d865e]
  41abdc:	xor    DWORD PTR [ebx+0x360fd188],esi
  41abe2:	push   ds
  41abe3:	call   eax
  41abe5:	idiv   DWORD PTR [edx+0x39d427c]
  41abeb:	inc    esi
  41abec:	stos   BYTE PTR es:[edi],al
  41abed:	(bad)  
  41abee:	shl    DWORD PTR [ebx],1
  41abf0:	(bad)  
  41abf1:	jmp    0x639dc85f
  41abf6:	imul   edx,edi,0xffffffd9
  41abf9:	std    
  41abfa:	dec    ecx
  41abfb:	xchg   edi,eax
  41abfc:	and    al,0x27
  41abfe:	loopne 0x41ac3a
  41ac00:	push   ebp
  41ac01:	loope  0x41ac23
  41ac03:	cdq    
  41ac04:	rol    DWORD PTR [ecx+0x10],1
  41ac07:	rcr    DWORD PTR [esi+ecx*2-0x6e5fba7a],0x24
  41ac0f:	leave  
  41ac10:	test   eax,0xc72407d9
  41ac15:	daa    
  41ac16:	fisub  DWORD PTR [ebx-0x3f]
  41ac19:	in     eax,dx
  41ac1a:	xlat   BYTE PTR ds:[ebx]
  41ac1b:	js     0x41ac3f
  41ac1d:	or     BYTE PTR [ebx-0x78663dc8],al
  41ac23:	(bad)  
  41ac24:	pop    ss
  41ac25:	jns    0x41ac81
  41ac27:	ret    
  41ac28:	adc    ch,bh
  41ac2a:	sub    ch,BYTE PTR [eax+0x548aa07]
  41ac30:	adc    BYTE PTR [esi-0x5e8200e2],cl
  41ac36:	stc    
  41ac37:	into   
  41ac38:	jecxz  0x41abdd
  41ac3a:	mov    ebx,0x27b3379
  41ac3f:	pop    ebx
  41ac40:	mov    dl,0x23
  41ac42:	pop    edi
  41ac43:	sub    eax,0xcfa0fc2a
  41ac48:	xchg   edi,eax
  41ac49:	imul   esi,DWORD PTR [ebx+0xc],0x877df62a
  41ac50:	popa   
  41ac51:	xor    BYTE PTR [ebx],ch
  41ac53:	push   esi
  41ac54:	cld    
  41ac55:	inc    esp
  41ac56:	push   ss
  41ac57:	cli    
  41ac58:	fs jnp 0x41ac58
  41ac5b:	push   es
  41ac5c:	add    eax,0x9aaef65a
  41ac61:	dec    ebx
  41ac62:	mov    dh,0x28
  41ac64:	xor    DWORD PTR [eax+0x45bd47c3],eax
  41ac6a:	jno    0x41acc4
  41ac6c:	(bad)  
  41ac6d:	mov    DWORD PTR [ebx+0x9],0x72bdca29
  41ac74:	dec    ebp
  41ac75:	cld    
  41ac76:	mov    ebx,0x6f7b9a1f
  41ac7b:	adc    ah,al
  41ac7d:	(bad)
  41ac80:	cs ja  0x41acda
  41ac83:	popf   
  41ac84:	and    ch,dh
  41ac86:	mov    bl,0x6c
  41ac88:	call   0x7e891597
  41ac8d:	fs jnp 0x41ac99
  41ac90:	imul   ecx,DWORD PTR [ebx],0x78efe33c
  41ac96:	or     BYTE PTR ds:0x3063a745,bl
  41ac9c:	aaa    
  41ac9d:	stos   BYTE PTR es:[edi],al
  41ac9e:	push   cs
  41ac9f:	std    
  41aca0:	sub    eax,0x753f1211
  41aca5:	add    al,dh
  41aca7:	mov    cl,bl
  41aca9:	inc    edi
  41acaa:	jmp    0x41ac61
  41acac:	stc    
  41acad:	ror    ch,1
  41acaf:	jp     0x41ad1c
  41acb1:	sbb    al,0x9e
  41acb3:	enter  0x8fb7,0xb1
  41acb7:	xor    BYTE PTR [esi+0x54],0x5e
  41acbb:	ja     0x41acf8
  41acbd:	jo     0x41accd
  41acbf:	xchg   ecx,eax
  41acc0:	in     eax,dx
  41acc1:	mov    BYTE PTR [eax+eiz*2-0x2c],dh
  41acc5:	ds jns 0x41acb3
  41acc8:	(bad)  
  41acc9:	push   ebp
  41acca:	(bad)  [edx+esi*8-0x4f]
  41acce:	or     al,0x6d
  41acd0:	imul   edi,DWORD PTR [ecx-0x2df68406],0xbc9084f7
  41acda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acdb:	dec    eax
  41acdc:	ins    DWORD PTR es:[edi],dx
  41acdd:	int3   
  41acde:	add    dh,BYTE PTR [eax]
  41ace0:	fdiv   st(4),st
  41ace2:	rol    DWORD PTR [edi],1
  41ace4:	cmp    al,0xe6
  41ace6:	inc    edi
  41ace7:	pop    es
  41ace8:	loop   0x41ad2b
  41acea:	cmp    eax,0x6e51025c
  41acef:	pop    esi
  41acf0:	xchg   ebp,edi
  41acf2:	daa    
  41acf3:	leave  
  41acf4:	pop    edi
  41acf5:	or     dh,BYTE PTR [ebp+0x2e]
  41acf8:	ins    DWORD PTR es:[edi],dx
  41acf9:	xor    al,0xb1
  41acfb:	cwde   
  41acfc:	pushf  
  41acfd:	cmp    esp,eax
  41acff:	xchg   ebx,eax
  41ad00:	jp     0x41ad33
  41ad02:	ret    0xd80f
  41ad05:	adc    edx,ecx
  41ad07:	xchg   esp,eax
  41ad08:	inc    di
  41ad0a:	or     eax,edi
  41ad0c:	cmp    DWORD PTR [eax],edi
  41ad0e:	popf   
  41ad0f:	or     eax,DWORD PTR [eax+0x79]
  41ad12:	xlat   BYTE PTR ds:[ebx]
  41ad13:	mov    ebp,0xea056110
  41ad18:	scas   al,BYTE PTR es:[edi]
  41ad19:	in     al,0xbc
  41ad1b:	sub    BYTE PTR [edx],al
  41ad1d:	mov    edx,0x1a21409c
  41ad22:	call   0x58e4ef05
  41ad27:	adc    eax,0xd17dd295
  41ad2c:	js     0x41ad21
  41ad2e:	push   ebx
  41ad2f:	lods   al,BYTE PTR ds:[esi]
  41ad30:	xchg   ecx,eax
  41ad31:	sub    BYTE PTR [ebx+edi*4-0x21],ah
  41ad35:	test   al,0x84
  41ad37:	addr16 jns 0x41ad64
  41ad3a:	pop    eax
  41ad3b:	push   edx
  41ad3c:	mov    dl,0xbb
  41ad3e:	cmp    bh,BYTE PTR [edx+0x1]
  41ad41:	rcr    BYTE PTR [edi],cl
  41ad43:	push   esp
  41ad44:	mov    DWORD PTR [edx-0x4768bab9],edx
  41ad4a:	cmp    edx,DWORD PTR [ebp-0x6f]
  41ad4d:	sbb    BYTE PTR [ecx-0x56f12cea],dl
  41ad53:	dec    esp
  41ad54:	fs pop ebx
  41ad56:	(bad)  
  41ad58:	and    eax,0x1129a9fe
  41ad5d:	sub    al,ch
  41ad5f:	push   edx
  41ad60:	loopne 0x41acf4
  41ad62:	cmp    eax,ebp
  41ad64:	hlt    
  41ad65:	cs retf 
  41ad67:	mov    ebp,0x4c1f6d3b
  41ad6c:	add    BYTE PTR [ebx-0x27a3763c],0xe
  41ad73:	imul   ebx,DWORD PTR [esi],0x70
  41ad76:	and    ecx,DWORD PTR [ebp+0x1a]
  41ad79:	mov    WORD PTR [ebp-0x6454b145],ds
  41ad7f:	push   ds
  41ad80:	mul    DWORD PTR [eax+0x177afcf8]
  41ad86:	sub    eax,DWORD PTR [ebx]
  41ad88:	(bad)  
  41ad89:	cmp    edx,DWORD PTR [ebx-0x1d89bf18]
  41ad8f:	imul   eax,DWORD PTR [ebp-0x27],0xfc1e649b
  41ad96:	push   0x85636e9c
  41ad9b:	mov    fs,WORD PTR [eax+0x50e9595f]
  41ada1:	ins    BYTE PTR es:[edi],dx
  41ada2:	mov    al,ds:0x650b24a1
  41ada7:	xor    bh,BYTE PTR [edi+0x57]
  41adaa:	push   ebp
  41adab:	adc    dh,BYTE PTR [esi]
  41adad:	leave  
  41adae:	mov    ebp,0xa74522c4
  41adb3:	xor    BYTE PTR [eax+edx*8-0x51],bh
  41adb7:	cmc    
  41adb8:	sbb    eax,0x852d7ef0
  41adbd:	cmp    al,0xca
  41adbf:	sub    ecx,DWORD PTR [ebp+0x36]
  41adc2:	inc    edi
  41adc3:	mov    bl,0xb1
  41adc5:	dec    ecx
  41adc6:	mov    ds,WORD PTR [eax-0x62735738]
  41adcc:	fdivr  st,st(3)
  41adce:	or     BYTE PTR [esi-0x23],ch
  41add1:	hlt    
  41add2:	in     eax,dx
  41add3:	pop    esp
  41add4:	inc    ecx
  41add5:	dec    ebx
  41add6:	push   DWORD PTR [ebp+ebp*4-0x73b8d400]
  41addd:	not    DWORD PTR [edi-0x7a]
  41ade0:	and    BYTE PTR [edx+0x3558ca2e],dh
  41ade6:	lods   eax,DWORD PTR ds:[esi]
  41ade7:	int    0xae
  41ade9:	mov    ebp,0x5e7b4d44
  41adee:	cmc    
  41adef:	jge    0x41ae5e
  41adf1:	popa   
  41adf2:	iret   
  41adf3:	cs pop edi
  41adf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf6:	int    0x51
  41adf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf9:	add    ecx,edi
  41adfb:	addr16 xor ah,cl
  41adfe:	mov    esi,0x5fdba96
  41ae03:	cmp    esp,DWORD PTR [edi+0x79]
  41ae06:	ja     0x41adbd
  41ae08:	ret    
  41ae09:	cmp    eax,DWORD PTR ds:0xb2aacfca
  41ae0f:	sar    BYTE PTR [edi],1
  41ae11:	sbb    dh,BYTE PTR [esi+ecx*2+0x42bad64f]
  41ae18:	cmp    ah,BYTE PTR [edx-0x46125c12]
  41ae1e:	imul   esi,DWORD PTR [edi-0x1e],0xb9c9878f
  41ae25:	xor    esi,DWORD PTR cs:[esi-0x2a2620e9]
  41ae2c:	adc    al,0xaf
  41ae2e:	int    0xb0
  41ae30:	pop    ds
  41ae31:	retf   
  41ae32:	and    DWORD PTR [eax-0x7a75309c],ebx
  41ae38:	xchg   DWORD PTR [ebx+0x56],edx
  41ae3b:	jg     0x41add7
  41ae3d:	jg     0x41adf1
  41ae3f:	outs   dx,DWORD PTR ds:[esi]
  41ae40:	lods   eax,DWORD PTR ds:[esi]
  41ae41:	adc    ah,bh
  41ae43:	inc    esi
  41ae44:	stc    
  41ae45:	pop    es
  41ae46:	mov    al,ds:0x3eabf03a
  41ae4b:	sbb    bh,ah
  41ae4d:	int3   
  41ae4e:	pop    ss
  41ae4f:	sbb    ebx,DWORD PTR [ecx+0x66f45235]
  41ae55:	icebp  
  41ae56:	pop    ebp
  41ae57:	dec    ebx
  41ae58:	mov    cl,0xda
  41ae5a:	xor    al,0xf1
  41ae5c:	test   cl,ch
  41ae5e:	fcomp  QWORD PTR [ecx+ecx*2+0x21e55403]
  41ae65:	or     ah,dh
  41ae67:	(bad)  [edx+0x2d]
  41ae6a:	in     eax,0x64
  41ae6c:	mov    dl,0xa7
  41ae6e:	mov    gs,WORD PTR ss:[edx+0x76]
  41ae72:	enter  0xd237,0xe8
  41ae76:	shr    BYTE PTR [edx],cl
  41ae78:	aaa    
  41ae79:	or     DWORD PTR [esi],ebp
  41ae7b:	in     al,0x21
  41ae7d:	add    BYTE PTR [ebx+0x3b8cf11d],bh
  41ae83:	xor    dl,BYTE PTR [edi+eax*8+0x5f8abc1f]
  41ae8a:	inc    eax
  41ae8b:	pop    es
  41ae8c:	shr    al,1
  41ae8e:	retf   0x662
  41ae91:	lods   eax,DWORD PTR ds:[esi]
  41ae92:	es push 0xffffffc6
  41ae95:	loopne 0x41aea9
  41ae97:	arpl   WORD PTR [ebp-0x2c],di
  41ae9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae9b:	sbb    ebp,DWORD PTR [ecx-0x713ae1a8]
  41aea1:	int3   
  41aea2:	adc    al,0xe0
  41aea5:	jg     0x41aeca
  41aea7:	jg     0x41ae59
  41aea9:	(bad)  
  41aeaa:	push   esi
  41aeab:	out    dx,eax
  41aeac:	inc    ebx
  41aead:	pop    DWORD PTR [edx+0x16f57db0]
  41aeb3:	and    DWORD PTR [ebp-0x33],edi
  41aeb6:	outs   dx,BYTE PTR ds:[esi]
  41aeb7:	popa   
  41aeb8:	ret    
  41aeb9:	icebp  
  41aeba:	(bad)  
  41aebb:	pop    eax
  41aebc:	call   0x66c7:0x28e7d569
  41aec3:	adc    DWORD PTR [ebx+ebp*1+0x15],ecx
  41aec7:	jae    0x41ae92
  41aec9:	mov    esp,0xd0b95bb4
  41aece:	repz pusha 
  41aed0:	or     al,0x8f
  41aed2:	(bad)  
  41aed3:	jmp    0x8b90da25
  41aed8:	jb     0x41af18
  41aeda:	mov    eax,0xbb026cdb
  41aedf:	imul   eax,DWORD PTR [ebx+0x66492f0d],0x48
  41aee6:	inc    edi
  41aee7:	add    eax,0x36d93a75
  41aeec:	inc    esp
  41aeed:	pop    ebp
  41aeee:	call   0xe41ea0c2
  41aef3:	cwde   
  41aef4:	daa    
  41aef5:	jmp    0x41aef8
  41aef7:	xchg   edx,eax
  41aef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef9:	mov    BYTE PTR [eax-0x61],bh
  41aefc:	into   
  41aefd:	jo     0x41aee4
  41aeff:	and    ecx,DWORD PTR [ecx]
  41af01:	jg     0x41aea2
  41af03:	jae    0x41af1a
  41af05:	in     eax,0xd3
  41af07:	or     al,0xb2
  41af09:	loopne 0x41af50
  41af0b:	push   es
  41af0c:	inc    eax
  41af0d:	retf   
  41af0e:	xlat   BYTE PTR ds:[ebx]
  41af0f:	push   eax
  41af10:	es cld 
  41af12:	sub    edx,DWORD PTR [ebx+0x45]
  41af15:	mov    BYTE PTR ds:[ecx],0xa3
  41af19:	jg     0x41af2e
  41af1b:	fisub  DWORD PTR [edi-0x37]
  41af1e:	cmc    
  41af1f:	add    BYTE PTR [esi+0x10],al
  41af22:	mov    BYTE PTR [esp+0x15bc3d31],ah
  41af29:	loop   0x41af1d
  41af2b:	push   es
  41af2c:	inc    ecx
  41af2d:	add    eax,0x17cbedbc
  41af32:	push   cs
  41af33:	pop    ds
  41af34:	push   0xad234efe
  41af39:	sbb    eax,0x60d5152a
  41af3e:	push   cs
  41af3f:	inc    ebx
  41af40:	jbe    0x41aeea
  41af42:	adc    eax,0x3d3cd030
  41af47:	mov    cl,0xe5
  41af49:	sub    cl,BYTE PTR [ebx]
  41af4b:	cmp    eax,0x1b928749
  41af50:	(bad)  
  41af52:	enter  0x67b,0x88
  41af56:	in     eax,0x6f
  41af58:	jne    0x41afba
  41af5a:	sub    BYTE PTR [ebp-0x72],dl
  41af5d:	mov    dl,0x7e
  41af5f:	daa    
  41af60:	imul   edi,DWORD PTR ds:0x498b06d7,0xf3ebe414
  41af6a:	stos   BYTE PTR es:[edi],al
  41af6b:	xchg   ebx,eax
  41af6c:	and    bl,BYTE PTR [ecx]
  41af6e:	jmp    0x41afd7
  41af70:	ss (bad) 
  41af72:	sbb    DWORD PTR [eax+0x13],ebx
  41af75:	test   al,0xb5
  41af77:	data16 js 0x41afc3
  41af7a:	push   cs
  41af7b:	addr16 dec esi
  41af7d:	sub    BYTE PTR [ebx+eiz*8-0xb52554e],bh
  41af84:	add    BYTE PTR [eax-0x7cfc95f3],ch
  41af8a:	jecxz  0x41afd3
  41af8c:	fist   DWORD PTR [ebx-0x13]
  41af8f:	nop
  41af90:	call   0x86e4:0x809387cd
  41af97:	add    BYTE PTR [ebx+0x2ba0dc61],al
  41af9d:	rol    esp,0x91
  41afa0:	push   cs
  41afa1:	xor    al,0xbb
  41afa3:	pop    ecx
  41afa4:	outs   dx,DWORD PTR ds:[esi]
  41afa5:	fldenv [edx-0x2b6cfdf5]
  41afab:	jl     0x41afa1
  41afad:	push   eax
  41afae:	lahf   
  41afaf:	imul   eax,DWORD PTR [eax-0x51a28383],0xffffffe4
  41afb6:	lods   al,BYTE PTR ds:[esi]
  41afb7:	(bad)  
  41afb8:	push   eax
  41afb9:	or     eax,0x1000f3b7
  41afbe:	add    eax,0xa9c28a4a
  41afc3:	pop    ds
  41afc4:	jmp    0x9b76:0x8dbde450
  41afcb:	(bad)  
  41afcc:	dec    esi
  41afcd:	mov    ebx,0x7a2ce59b
  41afd2:	gs std 
  41afd4:	push   es
  41afd5:	or     eax,0x238c2a9f
  41afda:	adc    bl,BYTE PTR [ebx-0x7c]
  41afdd:	xchg   BYTE PTR [edx+eax*1-0x1a],bh
  41afe1:	xchg   eax,ecx
  41afe3:	ins    DWORD PTR es:[edi],dx
  41afe4:	call   0x9b4a:0xe25cdf48
  41afeb:	fst    QWORD PTR [esi+0x62c1e80e]
  41aff1:	mov    ss,WORD PTR [edx+ebp*2-0x34b550d0]
  41aff8:	mov    ecx,0xc961fb5a
  41affd:	xor    cl,bl
  41afff:	mov    bl,0x8c
  41b001:	js     0x41afe2
  41b003:	sub    ebp,DWORD PTR [eax+0xc3b5bcd]
  41b009:	in     eax,dx
  41b00a:	scas   eax,DWORD PTR es:[edi]
  41b00b:	rol    BYTE PTR [eax-0x2c],1
  41b00e:	mov    ecx,0xd217002
  41b013:	js     0x41b04a
  41b015:	inc    edx
  41b016:	add    DWORD PTR [ebp-0x36],edi
  41b019:	jp     0x41afd2
  41b01b:	push   ds
  41b01c:	jg     0x41b00e
  41b01e:	scas   al,BYTE PTR es:[edi]
  41b01f:	enter  0x87e5,0xd1
  41b023:	dec    edx
  41b024:	loope  0x41b01c
  41b026:	addr16 pop ss
  41b028:	pop    ds
  41b029:	or     al,0xcf
  41b02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02c:	jns    0x41afdb
  41b02e:	jno    0x41b06e
  41b030:	mov    ah,0xd3
  41b032:	sub    dl,dl
  41b034:	ficomp DWORD PTR [edx]
  41b036:	push   esi
  41b037:	mov    ebp,0xa03b025b
  41b03c:	sti    
  41b03d:	shl    DWORD PTR [ebp-0x653b645d],0x35
  41b044:	mov    ch,0xeb
  41b046:	xchg   edx,eax
  41b047:	add    eax,DWORD PTR [edx+0x2b]
  41b04a:	add    eax,0x310c978a
  41b04f:	mov    dl,0xab
  41b051:	xor    eax,0xb1293590
  41b056:	gs call 0xbebe62d7
  41b05c:	inc    ebx
  41b05d:	int3   
  41b05e:	sbb    DWORD PTR [edx],esp
  41b060:	retf   
  41b061:	or     eax,0x28d5727c
  41b066:	fs cs pop edi
  41b069:	mov    ebx,0xb9ded4e1
  41b06e:	mov    ecx,0xf25feb6
  41b073:	test   BYTE PTR [edx],ch
  41b075:	daa    
  41b076:	or     bl,bl
  41b078:	dec    edi
  41b079:	push   0x90dc3aa
  41b07e:	mov    esi,0xe215cef8
  41b083:	outs   dx,BYTE PTR ds:[esi]
  41b084:	scas   al,BYTE PTR es:[edi]
  41b085:	js     0x41b0e3
  41b087:	dec    ebp
  41b088:	pusha  
  41b089:	(bad)  
  41b08a:	mov    ebx,0x322e0373
  41b08f:	mov    ebx,cs
  41b091:	push   0xffffffa8
  41b093:	pop    es
  41b094:	out    0x3,eax
  41b096:	out    0x5b,al
  41b098:	and    DWORD PTR [ebp-0x49422f47],eax
  41b09e:	in     al,0xcf
  41b0a0:	pop    DWORD PTR [esi-0x4d]
  41b0a3:	sar    BYTE PTR [ebx-0x76],0x7b
  41b0a7:	rcr    DWORD PTR [ecx+eax*8],1
  41b0aa:	push   ss
  41b0ab:	iret   
  41b0ac:	cmp    ebx,DWORD PTR [edx+0x7a]
  41b0af:	jl     0x41b10c
  41b0b1:	push   cs
  41b0b2:	cmp    BYTE PTR [ecx],ch
  41b0b4:	push   ecx
  41b0b5:	sub    al,dh
  41b0b7:	mov    dl,0x8b
  41b0b9:	fcmovbe st,st(4)
  41b0bb:	inc    edx
  41b0bc:	mov    ?,WORD PTR [edx+0x44137fc1]
  41b0c2:	daa    
  41b0c3:	mov    ah,0x3d
  41b0c5:	lods   al,BYTE PTR ds:[esi]
  41b0c6:	jb     0x41b142
  41b0c8:	sub    al,0x3f
  41b0ca:	fisttp DWORD PTR [ebx-0x32]
  41b0cd:	imul   ecx,eax,0xffffffd7
  41b0d0:	xchg   BYTE PTR [ecx],al
  41b0d2:	sub    BYTE PTR [eax],ch
  41b0d4:	push   eax
  41b0d5:	xchg   BYTE PTR [edx+0x6f],dl
  41b0d8:	shl    BYTE PTR [edx+edi*2-0x60abf8a],0xd9
  41b0e0:	dec    bx
  41b0e2:	stos   BYTE PTR es:[edi],al
  41b0e3:	nop
  41b0e4:	gs repnz clc 
  41b0e7:	imul   BYTE PTR [ecx+0x3f]
  41b0ea:	out    dx,al
  41b0eb:	dec    ebx
  41b0ec:	stc    
  41b0ed:	xchg   ebp,eax
  41b0ee:	in     eax,dx
  41b0ef:	test   BYTE PTR [ecx+edx*2+0x400b5456],0x1c
  41b0f7:	jg     0x41b111
  41b0f9:	mov    al,0xe0
  41b0fb:	ins    DWORD PTR es:[edi],dx
  41b0fc:	and    eax,0xf0bfccc4
  41b101:	inc    esp
  41b102:	popf   
  41b103:	and    cl,0xc3
  41b106:	pop    es
  41b107:	mov    ebp,0xbe7c53bb
  41b10c:	mov    ds:0xf53e51f9,al
  41b111:	lahf   
  41b112:	push   ss
  41b113:	cs inc ebp
  41b115:	fs daa 
  41b117:	dec    eax
  41b118:	data16 jmp 0x41b12c
  41b11b:	pop    ss
  41b11c:	in     eax,dx
  41b11d:	test   eax,0x539b7205
  41b122:	cld    
  41b123:	cld    
  41b124:	pop    edi
  41b125:	pop    ebp
  41b126:	pop    ds
  41b127:	add    al,0xd3
  41b129:	ja     0x41b19d
  41b12b:	xor    eax,0x75f5bcd9
  41b130:	sub    BYTE PTR [edi+0x63],dh
  41b133:	in     al,0xba
  41b135:	mov    esp,ebp
  41b137:	ss cmp eax,0x6da07f1e
  41b13d:	retf   0xc8f4
  41b140:	mov    dh,0x89
  41b142:	dec    ebp
  41b143:	nop
  41b144:	add    bh,dh
  41b146:	sahf   
  41b147:	cmp    cl,BYTE PTR [ebx+edx*8-0x80]
  41b14b:	mov    ebx,0xdf2b9269
  41b150:	add    al,0x37
  41b152:	stos   BYTE PTR es:[edi],al
  41b153:	cmp    DWORD PTR [eax+0x6bb69390],esi
  41b159:	mov    ds:0x851d0b0a,al
  41b15e:	pusha  
  41b15f:	jmp    DWORD PTR [ebx-0x63d3baa7]
  41b165:	call   0xb4dc5fab
  41b16a:	(bad)  
  41b16b:	hlt    
  41b16c:	sub    esi,DWORD PTR [edi+0x23152a6a]
  41b172:	or     ah,ch
  41b174:	sub    al,0xaa
  41b176:	clc    
  41b177:	fldcw  WORD PTR [ebx+eiz*8]
  41b17a:	loope  0x41b1f8
  41b17c:	mov    dh,0x39
  41b17e:	add    DWORD PTR [ebx+0x6b2f2eb0],esi
  41b184:	xchg   edi,eax
  41b185:	imul   ebp,DWORD PTR [ebx-0x3b602b92],0x78
  41b18c:	adc    al,0x29
  41b18e:	loop   0x41b1a9
  41b190:	aam    0x95
  41b192:	loope  0x41b121
  41b194:	and    DWORD PTR [ebp+0x71],eax
  41b197:	cmp    bl,BYTE PTR [edi+0x33a41511]
  41b19d:	jmp    0x6e5eb69b
  41b1a2:	ja     0x41b153
  41b1a4:	out    0xf6,eax
  41b1a6:	fnsave [edi]
  41b1a8:	test   BYTE PTR [esi+0x7f01d4a4],ch
  41b1ae:	mov    ch,0xd8
  41b1b0:	mov    ebx,0xcc825363
  41b1b5:	adc    al,0x7a
  41b1b7:	sub    eax,0x5684b21b
  41b1bc:	mov    esi,eax
  41b1be:	cmp    ecx,eax
  41b1c0:	push   esi
  41b1c1:	xchg   edx,eax
  41b1c2:	lods   eax,DWORD PTR ds:[esi]
  41b1c3:	out    0xb,eax
  41b1c5:	inc    edi
  41b1c6:	sbb    al,0x1e
  41b1c8:	lods   al,BYTE PTR ds:[esi]
  41b1c9:	cmp    ah,BYTE PTR [esi+ebp*2-0x3a]
  41b1cd:	fsub   QWORD PTR [edi+0x47]
  41b1d0:	xor    DWORD PTR [ebp-0x68],0x6a
  41b1d4:	call   0x2e9a:0x6f515f0
  41b1db:	push   eax
  41b1dc:	pop    esi
  41b1dd:	std    
  41b1de:	mov    ds:0xb48b9d81,eax
  41b1e3:	and    ebp,DWORD PTR [edx]
  41b1e5:	popf   
  41b1e6:	lahf   
  41b1e7:	sti    
  41b1e8:	in     eax,dx
  41b1e9:	jle    0x41b1c9
  41b1eb:	mov    eax,ds:0xa0c50f16
  41b1f0:	dec    edi
  41b1f1:	mov    eax,ds:0x592ee994
  41b1f6:	xchg   ecx,eax
  41b1f7:	dec    ecx
  41b1f8:	mov    al,ds:0xe5350b4f
  41b1fd:	fsubr  DWORD PTR [esp+ecx*2-0x2c4774be]
  41b204:	xor    al,0x87
  41b206:	mov    edx,0xcd89b1a3
  41b20b:	jp     0x41b25b
  41b20d:	loopne 0x41b1c0
  41b20f:	jle    0x41b1f6
  41b211:	fcmovne st,st(6)
  41b213:	clc    
  41b214:	std    
  41b215:	out    0xed,al
  41b217:	cmp    bl,BYTE PTR [edi-0x391129d0]
  41b21d:	xchg   esp,eax
  41b21e:	mov    bh,0x88
  41b220:	sbb    DWORD PTR [ecx+esi*2],edi
  41b223:	adc    BYTE PTR [ecx+eax*4+0x513ee561],0xfb
  41b22b:	or     al,0x82
  41b22d:	xchg   BYTE PTR [edi-0x6bc67d7],al
  41b233:	jle    0x41b201
  41b235:	int    0xfd
  41b237:	jnp    0x41b21d
  41b239:	dec    eax
  41b23a:	jmp    0xec7a:0xf19a9cb5
  41b241:	adc    esp,esi
  41b243:	cmp    eax,0x8779a6d6
  41b248:	or     BYTE PTR [esi+eiz*8-0x3f],al
  41b24c:	popa   
  41b24d:	adc    dh,BYTE PTR [esp+ebx*4-0x27]
  41b251:	sub    BYTE PTR [edx-0xd],cl
  41b254:	outs   dx,BYTE PTR ds:[esi]
  41b255:	push   ebx
  41b256:	xchg   esi,eax
  41b257:	sub    BYTE PTR [ebp+0x38a265e4],ch
  41b25d:	ror    ebp,cl
  41b25f:	adc    eax,esp
  41b261:	dec    ebx
  41b262:	outs   dx,DWORD PTR ds:[esi]
  41b263:	pushf  
  41b264:	jle    0x41b2d0
  41b266:	mov    ah,0x9e
  41b268:	xor    DWORD PTR [ecx],ebp
  41b26a:	mov    edx,0xb52bbd16
  41b26f:	sub    esp,DWORD PTR [eax]
  41b271:	(bad)  
  41b272:	inc    DWORD PTR [ebx+0x36e64e76]
  41b278:	pop    ebp
  41b279:	into   
  41b27a:	out    0x62,eax
  41b27c:	cmp    al,0x9c
  41b27e:	mov    cl,0x68
  41b280:	jb     0x41b24a
  41b282:	xchg   DWORD PTR [edi+0x5d],edx
  41b285:	fisttp QWORD PTR [ebx-0x64]
  41b288:	inc    edx
  41b289:	xchg   ecx,eax
  41b28a:	std    
  41b28b:	xchg   esi,eax
  41b28c:	call   0xc343:0x2c913883
  41b293:	fbld   TBYTE PTR [edx+0x63]
  41b296:	sbb    ecx,DWORD PTR [edx-0xefae912]
  41b29c:	mov    eax,0xe8281ed2
  41b2a1:	jno    0x41b274
  41b2a3:	std    
  41b2a4:	jp     0x41b28a
  41b2a6:	(bad)  [edx+0x252b988e]
  41b2ac:	or     BYTE PTR [eax],dh
  41b2ae:	lahf   
  41b2af:	fmul   QWORD PTR [edx+0x5b]
  41b2b2:	es cmp al,0xef
  41b2b5:	mov    dl,0x87
  41b2b7:	mov    al,0x12
  41b2b9:	and    BYTE PTR [eax+0x55],bl
  41b2bc:	mov    dh,0x31
  41b2be:	mov    ebp,0x76e1e427
  41b2c3:	leave  
  41b2c4:	jae    0xf94eae88
  41b2ca:	jle    0x41b270
  41b2cc:	mov    edi,0x1f9b1121
  41b2d1:	lods   eax,DWORD PTR ds:[esi]
  41b2d2:	int    0x84
  41b2d4:	jbe    0x41b2e9
  41b2d6:	sub    DWORD PTR [esi+esi*2+0x19],0xffffffed
  41b2db:	pop    ebx
  41b2dc:	icebp  
  41b2dd:	sub    eax,0xe7e892ac
  41b2e2:	inc    esp
  41b2e3:	stc    
  41b2e4:	loopne 0x41b27c
  41b2e6:	nop
  41b2e7:	popa   
  41b2e8:	jns    0x41b2a3
  41b2ea:	out    dx,al
  41b2eb:	bound  esp,QWORD PTR [ebx-0x27]
  41b2ee:	pushf  
  41b2ef:	fsub   st(1),st
  41b2f1:	sub    ebx,edi
  41b2f3:	and    al,0xc0
  41b2f5:	rcl    edi,1
  41b2f7:	popf   
  41b2f8:	or     eax,0xcd87b188
  41b2fd:	mov    esp,0xd80b438a
  41b302:	mov    ecx,0x56384f68
  41b307:	rcr    BYTE PTR [ecx],cl
  41b309:	fist   WORD PTR [eax]
  41b30b:	ja     0x41b330
  41b30d:	lock jae 0x41b366
  41b310:	cs fcomip st,st(6)
  41b313:	dec    edi
  41b314:	jne    0x41b33c
  41b316:	push   ecx
  41b317:	pop    ds
  41b318:	shl    DWORD PTR [edx],cl
  41b31a:	test   al,0x17
  41b31c:	mov    bh,0x60
  41b31e:	add    al,0xf3
  41b320:	mov    DWORD PTR [edx+0x2b6b5675],eax
  41b326:	(bad)  [edi]
  41b328:	mov    ch,bl
  41b32a:	fisttp WORD PTR [ebx+0x62ac13b5]
  41b330:	daa    
  41b331:	sahf   
  41b332:	inc    eax
  41b333:	jae    0x41b2b6
  41b335:	mov    eax,0x9af004f5
  41b33a:	add    esi,DWORD PTR [ecx-0x61ea0a8e]
  41b340:	clc    
  41b341:	mov    ch,0xcf
  41b343:	or     DWORD PTR [eax+edi*1],ebx
  41b346:	mov    bl,0xb8
  41b348:	push   esp
  41b349:	push   cs
  41b34a:	add    bl,BYTE PTR [eax+0x70]
  41b34d:	test   eax,0x4160c2a4
  41b352:	out    dx,al
  41b353:	int3   
  41b354:	push   ebp
  41b355:	bnd ret 0xf071
  41b359:	sub    BYTE PTR [ecx+esi*8],0x94
  41b35d:	add    BYTE PTR [ecx+0x44d491c2],ah
  41b363:	ins    DWORD PTR es:[edi],dx
  41b364:	sti    
  41b365:	lods   al,BYTE PTR ds:[esi]
  41b366:	test   BYTE PTR [esp+edx*2-0x5e403994],dh
  41b36d:	(bad)  
  41b36e:	outs   dx,DWORD PTR ds:[esi]
  41b36f:	ret    0xa00c
  41b372:	cmp    bh,cl
  41b374:	into   
  41b375:	jmp    0x1fe9:0x84506226
  41b37c:	pop    edi
  41b37d:	cmp    BYTE PTR [ecx-0x446013c],cl
  41b383:	mov    eax,0x3d1e5524
  41b388:	ins    DWORD PTR es:[edi],dx
  41b389:	fidiv  DWORD PTR [edi-0x21]
  41b38c:	xchg   DWORD PTR [ecx-0x2ebc005b],eax
  41b392:	inc    ebp
  41b393:	mov    al,BYTE PTR [ecx-0x6]
  41b396:	ret    0xb91
  41b399:	nop
  41b39a:	jne    0x41b352
  41b39c:	shr    ecx,1
  41b39e:	xchg   edx,eax
  41b39f:	push   ebx
  41b3a0:	sahf   
  41b3a1:	sbb    edx,DWORD PTR [ebx-0x6]
  41b3a4:	mov    WORD PTR [edx-0x4b],?
  41b3a7:	ins    DWORD PTR es:[edi],dx
  41b3a8:	test   eax,0x3424accd
  41b3ad:	stc    
  41b3ae:	jmp    0x41b3fb
  41b3b0:	inc    esi
  41b3b1:	sti    
  41b3b2:	sti    
  41b3b3:	xor    al,BYTE PTR [esi-0x52]
  41b3b6:	jmp    0x41b417
  41b3b8:	pop    edi
  41b3b9:	cmp    eax,0x5b1a61ce
  41b3be:	or     al,0xf
  41b3c0:	xchg   esp,eax
  41b3c1:	das    
  41b3c2:	or     BYTE PTR [ebp+0x4b],dh
  41b3c5:	outs   dx,BYTE PTR ds:[esi]
  41b3c6:	inc    eax
  41b3c7:	dec    edx
  41b3c8:	sub    ax,0x69ae
  41b3cc:	stos   DWORD PTR es:[edi],eax
  41b3cd:	sbb    DWORD PTR [edi+edx*1-0x7c],ebp
  41b3d1:	pop    ebp
  41b3d2:	jl     0x41b36a
  41b3d4:	mov    WORD PTR [edx+edx*8+0x675e4eb4],es
  41b3db:	stos   DWORD PTR es:[edi],eax
  41b3dc:	dec    eax
  41b3dd:	inc    edi
  41b3de:	imul   esp,DWORD PTR [ebx],0x8d5c78e2
  41b3e4:	out    0xa3,eax
  41b3e6:	mov    ds:0xcc725644,al
  41b3eb:	shl    ebp,0xcf
  41b3ee:	mov    ebp,0xb7e9e80d
  41b3f3:	in     al,0x8
  41b3f5:	fimul  DWORD PTR ds:0xcd0bd6e2
  41b3fb:	jb     0x41b38e
  41b3fd:	test   al,0xe1
  41b3ff:	sti    
  41b400:	jb     0x41b3bc
  41b402:	push   edi
  41b403:	or     al,0xdb
  41b405:	sbb    al,0x6e
  41b407:	je     0x41b3f2
  41b409:	mov    edi,DWORD PTR [ecx-0x975b7d2]
  41b40f:	ss mov edi,0x489b0722
  41b415:	jnp    0x41b414
  41b417:	pop    ebx
  41b418:	scas   eax,DWORD PTR es:[edi]
  41b419:	arpl   WORD PTR [eax+0x795f0b02],ax
  41b41f:	mov    DWORD PTR [esi+eiz*4-0x719597fd],0xe78c7efa
  41b42a:	iret   
  41b42b:	rol    DWORD PTR [edi+0x1],1
  41b42e:	aas    
  41b42f:	xchg   DWORD PTR [esi-0x16],edi
  41b432:	icebp  
  41b433:	and    DWORD PTR [edx-0x8],ebx
  41b436:	rol    DWORD PTR [eax+0x1c],0x32
  41b43a:	or     al,0x14
  41b43c:	test   BYTE PTR [edx-0x5b],bl
  41b43f:	aam    0x88
  41b441:	adc    al,0xbc
  41b443:	call   0x12379258
  41b448:	mov    eax,0x4b710afa
  41b44d:	gs adc al,0xdb
  41b450:	or     dh,BYTE PTR [ecx-0x14aff8cf]
  41b456:	scas   eax,DWORD PTR es:[edi]
  41b457:	(bad)  
  41b458:	sbb    al,0x47
  41b45a:	retf   0x1780
  41b45d:	sbb    al,BYTE PTR [ecx+esi*1+0x2b7b8303]
  41b464:	mov    ah,0x33
  41b466:	out    dx,eax
  41b467:	pop    eax
  41b468:	or     ch,al
  41b46a:	adc    ecx,eax
  41b46c:	mov    bl,0x7e
  41b46e:	adc    eax,0x295f065a
  41b473:	int3   
  41b474:	sub    DWORD PTR [esi-0x35],ecx
  41b477:	dec    ebp
  41b478:	(bad)  
  41b479:	xor    eax,0x87e8000
  41b47e:	xchg   ebx,eax
  41b47f:	adc    BYTE PTR [esp+ebx*4],cl
  41b482:	jb     0x41b43e
  41b484:	repnz out 0xed,al
  41b487:	test   BYTE PTR [edx],ch
  41b489:	ror    DWORD PTR [eax],0x20
  41b48c:	cld    
  41b48d:	jp     0x41b418
  41b48f:	clc    
  41b490:	in     eax,0x91
  41b492:	mov    cl,bh
  41b494:	imul   ecx,DWORD PTR [edi+0xc],0x431c2ac1
  41b49b:	mov    ?,edi
  41b49d:	data16 or dh,ah
  41b4a0:	push   edi
  41b4a1:	mov    edx,0xb876d4a5
  41b4a6:	xchg   BYTE PTR ds:[edx+0x2c6fc889],bh
  41b4ad:	push   eax
  41b4ae:	push   0xffffffd8
  41b4b0:	call   0x2d7d:0x453519ce
  41b4b7:	mov    esp,gs
  41b4b9:	ins    BYTE PTR es:[edi],dx
  41b4ba:	xor    al,0x90
  41b4bc:	aas    
  41b4bd:	ins    BYTE PTR es:[edi],dx
  41b4be:	in     al,0x32
  41b4c0:	sub    eax,0xc0439bf7
  41b4c5:	jae    0x41b4e5
  41b4c7:	aaa    
  41b4c8:	call   0xb04b86cd
  41b4cd:	shr    BYTE PTR [ecx+edx*8],cl
  41b4d0:	(bad)  
  41b4d1:	and    bl,BYTE PTR [ebx+0x1f]
  41b4d4:	imul   ecx,DWORD PTR [edi+0x46],0xce56707b
  41b4db:	or     BYTE PTR [edx+0x3cfc374e],dh
  41b4e1:	push   ecx
  41b4e2:	ds mov eax,0xff6aabb8
  41b4e8:	mov    dh,0x63
  41b4ea:	add    edi,DWORD PTR [ebx-0x14]
  41b4ed:	test   al,0xac
  41b4ef:	push   edx
  41b4f0:	dec    ecx
  41b4f1:	push   edi
  41b4f2:	pop    edx
  41b4f3:	mov    esi,DWORD PTR ds:[ebp+0x55]
  41b4f7:	out    0x9f,eax
  41b4f9:	lea    edx,[esi]
  41b4fb:	mov    edx,0xa6f4cf93
  41b500:	mov    dl,0xeb
  41b502:	jae    0x41b4bf
  41b504:	mov    ecx,0x67f141ce
  41b509:	ret    0x9b19
  41b50c:	push   esp
  41b50d:	ds sub eax,0x8c1b001e
  41b513:	or     eax,esi
  41b515:	xor    BYTE PTR [ecx],bh
  41b517:	ror    DWORD PTR gs:[ecx+0x70],1
  41b51b:	push   ds
  41b51c:	icebp  
  41b51d:	fstp   QWORD PTR [edi-0x64]
  41b520:	popa   
  41b521:	sbb    BYTE PTR [esi-0x2c],ah
  41b524:	scas   al,BYTE PTR es:[edi]
  41b525:	mov    bh,0x68
  41b527:	xchg   ebx,eax
  41b528:	xor    eax,0x7a38347b
  41b52d:	popf   
  41b52e:	lods   eax,DWORD PTR ds:[esi]
  41b52f:	inc    edi
  41b530:	int    0x8b
  41b532:	(bad)  
  41b533:	adc    edi,esi
  41b535:	pop    es
  41b536:	pushf  
  41b537:	mov    esi,0x480a57df
  41b53c:	and    DWORD PTR [esi+0x7cdd5e34],0xffffffb2
  41b543:	mov    eax,0x798f597e
  41b548:	push   0x19d38b4a
  41b54d:	fidivr WORD PTR [esp+ecx*8+0x1a]
  41b551:	and    eax,0x13ce40d
  41b556:	jl     0x41b560
  41b558:	jle    0x41b519
  41b55a:	push   ebx
  41b55b:	and    ah,bh
  41b55d:	and    DWORD PTR [edx+0x1b5ed1a7],0x9e8c59ec
  41b567:	push   esi
  41b568:	test   DWORD PTR [edx],ebp
  41b56a:	inc    edx
  41b56b:	sbb    DWORD PTR [eax-0x4a8f4157],esp
  41b571:	and    BYTE PTR [ebx-0xec16258],dl
  41b577:	pop    ss
  41b578:	sbb    eax,0xbc686bb
  41b57d:	xchg   esi,eax
  41b57e:	sbb    eax,0xc0465a37
  41b583:	aaa    
  41b584:	xchg   BYTE PTR [eax],dl
  41b586:	adc    DWORD PTR [edx],ecx
  41b588:	call   0x62b7:0x499391ee
  41b58f:	idiv   DWORD PTR [eax]
  41b591:	mul    BYTE PTR [edi-0x23]
  41b594:	inc    ebp
  41b595:	mov    bh,0xb4
  41b597:	in     al,0xa1
  41b599:	adc    bh,cl
  41b59b:	add    DWORD PTR [ebx],edi
  41b59d:	mov    BYTE PTR [edx*1+0x5dc2177c],ah
  41b5a4:	(bad)  
  41b5a5:	xor    eax,0xb4ecf8c7
  41b5aa:	iretw  
  41b5ac:	fwait
  41b5ad:	xor    al,0x85
  41b5af:	shl    DWORD PTR [ebx+0x617a42b5],0xb7
  41b5b6:	pop    edi
  41b5b7:	rcr    DWORD PTR [ecx+0x17],0x5c
  41b5bb:	push   esp
  41b5bc:	sahf   
  41b5bd:	(bad)
  41b5c1:	fs popa 
  41b5c3:	sahf   
  41b5c4:	das    
  41b5c5:	out    0x34,al
  41b5c7:	cmp    ebp,DWORD PTR [edi-0x2971b022]
  41b5cd:	dec    edx
  41b5ce:	xchg   DWORD PTR [ecx],eax
  41b5d0:	pop    edi
  41b5d1:	dec    ebp
  41b5d2:	and    BYTE PTR [esi+0x5093cee9],cl
  41b5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5d9:	out    dx,eax
  41b5da:	in     al,dx
  41b5db:	sub    al,0xd7
  41b5dd:	jae    0x41b657
  41b5df:	iret   
  41b5e0:	mov    ch,0x3
  41b5e2:	out    dx,eax
  41b5e3:	mov    edi,0xf14f1525
  41b5e8:	loope  0x41b5bf
  41b5ea:	jg     0x41b58b
  41b5ec:	xor    eax,0x878faeb9
  41b5f1:	adc    eax,0x6ac9a166
  41b5f6:	aaa    
  41b5f7:	sbb    ah,BYTE PTR [esi+0x179e06d2]
  41b5fd:	scas   al,BYTE PTR es:[edi]
  41b5fe:	xor    al,0xc
  41b600:	call   0xdef8c791
  41b605:	outs   dx,BYTE PTR ds:[esi]
  41b606:	or     dl,BYTE PTR [eax+0x4b30bd3]
  41b60c:	or     DWORD PTR ds:0x53970d03,edx
  41b612:	sub    DWORD PTR [edx],ebx
  41b614:	pop    edi
  41b615:	sahf   
  41b616:	imul   edi
  41b618:	test   DWORD PTR [edi-0x479b74bc],esi
  41b61e:	icebp  
  41b61f:	jo     0x41b61e
  41b621:	out    0x4f,eax
  41b623:	adc    BYTE PTR es:[ebp+0x5f],bh
  41b627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b628:	test   DWORD PTR [edi-0x48863c0],edi
  41b62e:	outs   dx,BYTE PTR ds:[esi]
  41b62f:	loop   0x41b691
  41b631:	out    dx,eax
  41b632:	and    BYTE PTR [edi-0x182eb2b6],dl
  41b638:	lds    eax,FWORD PTR [edx+0x34f3baca]
  41b63e:	jecxz  0x41b634
  41b640:	ins    DWORD PTR es:[edi],dx
  41b641:	push   cs
  41b642:	cmp    al,ch
  41b644:	retf   
  41b645:	lahf   
  41b646:	xor    bl,BYTE PTR [ecx]
  41b648:	ins    BYTE PTR es:[edi],dx
  41b649:	(bad)  
  41b64a:	outs   dx,BYTE PTR ds:[esi]
  41b64b:	mov    BYTE PTR [edi+0x2a04a507],dl
  41b651:	cld    
  41b652:	xor    dh,BYTE PTR [esp+eax*4-0x21]
  41b656:	lea    ecx,[ecx]
  41b658:	jecxz  0x41b66a
  41b65a:	iret   
  41b65b:	fisttp WORD PTR [ebx+edi*4-0x584be794]
  41b662:	test   al,0x75
  41b664:	jns    0x41b63f
  41b666:	pop    ecx
  41b667:	jnp    0x41b668
  41b669:	mov    edi,DWORD PTR [ebx-0x2cda4bf5]
  41b66f:	(bad)  
  41b670:	int    0xb5
  41b672:	jno    0x41b5fa
  41b674:	xchg   ecx,eax
  41b675:	(bad)  
  41b676:	je     0x41b614
  41b678:	pop    esi
  41b679:	addr16 add ebx,ebx
  41b67c:	xor    cl,BYTE PTR [ecx+0x70]
  41b67f:	dec    eax
  41b680:	mov    ecx,?
  41b682:	xchg   bl,dl
  41b684:	xchg   DWORD PTR [edx+0x1ab1f699],esi
  41b68a:	(bad)  [edi]
  41b68c:	sub    ch,ah
  41b68e:	push   es
  41b68f:	ret    
  41b690:	call   DWORD PTR ds:0x35041ea0
  41b696:	ins    BYTE PTR es:[edi],dx
  41b697:	cwde   
  41b698:	pop    es
  41b699:	outs   dx,BYTE PTR ds:[si]
  41b69b:	aaa    
  41b69c:	bound  edx,QWORD PTR [edi+0x7751eac2]
  41b6a2:	in     al,dx
  41b6a3:	lea    esi,[ebx-0x79]
  41b6a6:	xchg   ebp,edi
  41b6a8:	(bad)  
  41b6a9:	push   cs
  41b6aa:	mov    WORD PTR [edx+0x52],?
  41b6ad:	inc    ebp
  41b6ae:	shl    BYTE PTR [esi+0x6f51f4cd],1
  41b6b4:	xchg   ebp,eax
  41b6b5:	leave  
  41b6b6:	int    0xb6
  41b6b8:	outs   dx,DWORD PTR ds:[esi]
  41b6b9:	jo     0x41b68a
  41b6bb:	jmp    0x41b6d0
  41b6bd:	cmp    dh,cl
  41b6bf:	push   edi
  41b6c0:	jecxz  0x41b671
  41b6c2:	jae    0x41b723
  41b6c4:	call   0x327a:0x958b7136
  41b6cb:	jbe    0x41b659
  41b6cd:	cdq    
  41b6ce:	(bad)  
  41b6cf:	stc    
  41b6d0:	and    DWORD PTR [ebx+ecx*1+0x63ca2200],0xe173fa15
  41b6db:	push   edx
  41b6dc:	pop    es
  41b6dd:	rol    DWORD PTR [ebx],0x63
  41b6e0:	scas   al,BYTE PTR es:[edi]
  41b6e1:	shr    DWORD PTR [ebx],1
  41b6e3:	sub    cl,al
  41b6e5:	shr    BYTE PTR [ebx+0x6c4a3c1b],cl
  41b6eb:	rol    eax,cl
  41b6ed:	pop    es
  41b6ee:	retf   
  41b6ef:	lahf   
  41b6f0:	imul   DWORD PTR [edi]
  41b6f2:	xor    eax,0xc50585ca
  41b6f7:	xor    eax,0x6e7c8857
  41b6fc:	inc    eax
  41b6fd:	fwait
  41b6fe:	leave  
  41b6ff:	jmp    FWORD PTR [esi-0x3f]
  41b702:	in     al,0xdf
  41b704:	mov    bl,0x58
  41b706:	pop    ds
  41b707:	mul    BYTE PTR [edi]
  41b709:	mov    eax,0x2a9291b1
  41b70e:	xchg   DWORD PTR [edx],ecx
  41b710:	adc    BYTE PTR [ebx+0x6c2f3da7],cl
  41b716:	dec    eax
  41b717:	mov    WORD PTR [ebx+eax*4+0x3af0cb05],fs
  41b71e:	cli    
  41b71f:	or     DWORD PTR [esi-0x51b304a6],ebx
  41b725:	add    DWORD PTR [edx],esp
  41b727:	inc    esi
  41b728:	or     al,0x3a
  41b72a:	mov    bl,0x2e
  41b72c:	ins    BYTE PTR es:[edi],dx
  41b72d:	xchg   ecx,eax
  41b72e:	inc    esi
  41b72f:	sar    BYTE PTR [edi+0x4c174b79],0xfa
  41b736:	call   0xa1c3:0xda0d1d39
  41b73d:	adc    al,BYTE PTR [edx-0x79ffa28e]
  41b743:	xor    ebp,ebp
  41b745:	sbb    bl,ch
  41b747:	dec    ebx
  41b748:	inc    edx
  41b749:	call   0x21adeaba
  41b74e:	cwde   
  41b74f:	add    esp,eax
  41b751:	mov    ecx,0x44e5d1e2
  41b756:	inc    esp
  41b757:	(bad)  [ebp-0x3a]
  41b75a:	inc    edi
  41b75b:	jmp    0x96f8:0xa90408a5
  41b762:	aas    
  41b763:	mov    DWORD PTR [ebp+0x75],esp
  41b766:	inc    edi
  41b767:	(bad)  
  41b768:	sti    
  41b769:	js     0x41b722
  41b76b:	sub    al,0x52
  41b76d:	xchg   edi,eax
  41b76e:	stos   DWORD PTR es:[edi],eax
  41b76f:	xchg   esp,eax
  41b770:	jle    0x41b6fb
  41b772:	mov    bh,0x9a
  41b774:	or     BYTE PTR [edx+0x6f],cl
  41b777:	lds    edi,FWORD PTR [edi+0x56]
  41b77a:	pop    esi
  41b77b:	sbb    DWORD PTR [edx+0x57cc49d2],ebp
  41b781:	shrd   DWORD PTR [eax+0x47],eax,cl
  41b785:	xor    cl,bh
  41b787:	lock dec edx
  41b789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b78a:	xor    dl,bh
  41b78c:	cs retf 0xd0
  41b790:	jns    0x41b7fb
  41b792:	mov    eax,ds:0x880c0aec
  41b797:	sbb    bh,BYTE PTR [ecx]
  41b799:	cdq    
  41b79a:	or     edi,esp
  41b79c:	mov    eax,ds:0xbd31461a
  41b7a1:	into   
  41b7a2:	cs test cl,0x34
  41b7a6:	lahf   
  41b7a7:	inc    edi
  41b7a8:	outs   dx,DWORD PTR ds:[esi]
  41b7a9:	bound  edi,QWORD PTR [esp+ebp*4+0x68c5b17f]
  41b7b0:	mov    bl,0x16
  41b7b2:	cmp    esi,DWORD PTR [edx-0x3e]
  41b7b5:	aaa    
  41b7b6:	add    edx,0x7b8d39f7
  41b7bc:	mov    eax,0x2c8e4fd7
  41b7c1:	scas   al,BYTE PTR es:[edi]
  41b7c2:	data16 jns 0x41b745
  41b7c5:	fs je  0x41b79f
  41b7c8:	bound  eax,QWORD PTR [ebx+0x4ed28211]
  41b7ce:	push   ebx
  41b7cf:	mov    edx,0xab0bf53b
  41b7d4:	int    0xc8
  41b7d6:	(bad)  
  41b7d8:	fmul   DWORD PTR [ebx+0x36e82843]
  41b7de:	cwde   
  41b7df:	jle    0x41b76d
  41b7e1:	or     DWORD PTR [edx+0x11c08e1],eax
  41b7e7:	cs icebp 
  41b7e9:	fst    DWORD PTR [esi-0x435d9588]
  41b7ef:	xlat   BYTE PTR ds:[ebx]
  41b7f0:	xchg   ebp,eax
  41b7f1:	sbb    al,bl
  41b7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7f4:	push   cs
  41b7f5:	pop    edx
  41b7f6:	xchg   ecx,eax
  41b7f7:	lods   eax,DWORD PTR ds:[esi]
  41b7f8:	jb     0x41b835
  41b7fa:	cld    
  41b7fb:	mov    dh,al
  41b7fd:	mov    al,ds:0x562579bb
  41b802:	lods   al,BYTE PTR ds:[esi]
  41b803:	sub    BYTE PTR [esi],bl
  41b805:	inc    edi
  41b806:	adc    DWORD PTR [esi],0xd7543221
  41b80c:	ds loop 0x41b831
  41b80f:	and    eax,0xc6f419a6
  41b814:	ins    BYTE PTR es:[edi],dx
  41b815:	push   es
  41b816:	jge    0x41b80d
  41b818:	or     DWORD PTR [esi+0x1e],ebp
  41b81b:	mov    bl,0x2
  41b81d:	fwait
  41b81e:	iret   
  41b81f:	call   0x77b5:0x24179ff2
  41b826:	xor    BYTE PTR [ebx-0x4d],ch
  41b829:	or     BYTE PTR [eax],ch
  41b82b:	adc    dh,cl
  41b82d:	cld    
  41b82e:	test   al,0x4b
  41b830:	add    al,0x2a
  41b832:	shl    ah,0xd9
  41b835:	xor    edx,edx
  41b837:	xchg   ecx,eax
  41b838:	mov    cl,0x9c
  41b83a:	retf   
  41b83b:	jp     0x41b897
  41b83d:	daa    
  41b83e:	push   edi
  41b83f:	stos   DWORD PTR es:[edi],eax
  41b840:	jmp    0x1499:0x46b9e0c6
  41b847:	int3   
  41b848:	ret    0xaf66
  41b84b:	pusha  
  41b84c:	out    dx,al
  41b84d:	jbe    0x41b836
  41b84f:	jb     0x41b84c
  41b851:	fwait
  41b852:	enter  0x5e3e,0xb0
  41b856:	sbb    BYTE PTR [edx],bh
  41b858:	inc    ebx
  41b859:	sbb    BYTE PTR [edi+0x9],bh
  41b85c:	arpl   WORD PTR [ecx+0x5a69bfd7],di
  41b862:	mov    dh,0x4a
  41b864:	loop   0x41b887
  41b866:	into   
  41b867:	sbb    bl,BYTE PTR [esi-0x58b3df68]
  41b86d:	cmp    BYTE PTR [edx+0x29],al
  41b870:	push   ss
  41b871:	push   ds
  41b872:	je     0x41b845
  41b874:	mov    ch,0x24
  41b876:	xor    eax,0x4b9369b1
  41b87b:	aas    
  41b87c:	add    bh,BYTE PTR [esi+0x1d7bff59]
  41b882:	popa   
  41b883:	xchg   ebx,eax
  41b884:	sahf   
  41b885:	jae    0x41b83b
  41b887:	mov    cl,0xca
  41b889:	sub    BYTE PTR [edx+0x60],cl
  41b88c:	rcr    DWORD PTR [esi-0x7c],1
  41b88f:	xor    al,0x9
  41b891:	sbb    BYTE PTR [edx+0x59],al
  41b894:	loope  0x41b84b
  41b896:	test   eax,0xd1068004
  41b89b:	jae    0x41b909
  41b89d:	dec    ebp
  41b89e:	dec    ebp
  41b89f:	or     edx,DWORD PTR [ecx+0x44]
  41b8a2:	pop    edi
  41b8a3:	pop    edx
  41b8a4:	clc    
  41b8a5:	imul   esi,DWORD PTR [edx-0x56da1024],0x7f
  41b8ac:	neg    ebx
  41b8ae:	xchg   esp,eax
  41b8af:	cmp    al,0x1f
  41b8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8b2:	xchg   esi,eax
  41b8b3:	push   esi
  41b8b4:	adc    al,BYTE PTR [ebp+0x49]
  41b8b7:	xor    dl,BYTE PTR [ebp-0x3f813d36]
  41b8bd:	inc    ebp
  41b8be:	sbb    al,0x3
  41b8c0:	mov    edi,0xeb893ec6
  41b8c5:	fwait
  41b8c6:	stos   BYTE PTR es:[edi],al
  41b8c7:	in     eax,dx
  41b8c8:	mov    dl,0x1c
  41b8ca:	push   cs
  41b8cb:	mov    dh,0xea
  41b8cd:	call   DWORD PTR [edx]
  41b8cf:	bnd jp 0x41b8f3
  41b8d2:	and    bl,cl
  41b8d4:	mov    ebp,0xb15010ef
  41b8d9:	pop    esi
  41b8da:	mov    cl,0x42
  41b8dc:	aad    0xbe
  41b8de:	xchg   ebp,eax
  41b8df:	inc    esi
  41b8e0:	jne    0x41b934
  41b8e2:	jo     0x41b915
  41b8e4:	mov    esi,0x84eb4b82
  41b8e9:	pop    esp
  41b8ea:	mov    BYTE PTR [ebp+0x28f3b114],cl
  41b8f0:	pop    ebp
  41b8f1:	outs   dx,DWORD PTR ds:[esi]
  41b8f2:	call   0xb2d43f41
  41b8f7:	or     edx,esi
  41b8f9:	sti    
  41b8fa:	fld    TBYTE PTR [ebx]
  41b8fc:	stc    
  41b8fd:	bnd jge 0x41b926
  41b900:	xchg   ebx,eax
  41b901:	(bad)  
  41b902:	cs adc ch,dl
  41b905:	std    
  41b906:	cld    
  41b907:	or     BYTE PTR [esi],al
  41b909:	mov    ds:0xcddae759,al
  41b90e:	adc    al,0xf8
  41b910:	jo     0x41b8bb
  41b912:	sbb    DWORD PTR [ecx-0x2eb44ae0],edi
  41b918:	sub    DWORD PTR [edx],ecx
  41b91a:	lods   eax,DWORD PTR ds:[esi]
  41b91b:	icebp  
  41b91c:	pop    ecx
  41b91d:	cli    
  41b91e:	ror    DWORD PTR [esi+ebx*1],cl
  41b921:	iret   
  41b922:	ror    ah,0xae
  41b925:	fwait
  41b926:	scas   al,BYTE PTR es:[edi]
  41b927:	sar    DWORD PTR [esi],1
  41b929:	adc    BYTE PTR [ecx],ah
  41b92b:	push   ecx
  41b92c:	mov    esi,0x614a49f
  41b931:	ins    DWORD PTR es:[edi],dx
  41b932:	enter  0xcf51,0x39
  41b936:	sbb    edi,edi
  41b938:	inc    eax
  41b939:	adc    edx,DWORD PTR [edi+0x694bd7f]
  41b93f:	(bad)  
  41b942:	outs   dx,BYTE PTR ds:[esi]
  41b943:	add    edi,DWORD PTR [esp+ecx*8]
  41b946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b947:	iret   
  41b948:	cmp    ch,bh
  41b94a:	sub    eax,DWORD PTR [eax-0x72]
  41b94d:	xor    al,0x90
  41b94f:	jg     0x41b92a
  41b951:	outs   dx,BYTE PTR ds:[esi]
  41b952:	(bad)  
  41b953:	arpl   WORD PTR [ebp+0x0],cx
  41b956:	mov    al,ds:0xfff121b8
  41b95b:	mov    al,0x23
  41b95d:	mov    ebp,0x23fad2fd
  41b962:	(bad)  
  41b963:	mov    bh,0x48
  41b965:	ret    
  41b966:	scas   al,BYTE PTR es:[edi]
  41b967:	mov    BYTE PTR [ebp+0x100809ca],ah
  41b96d:	cmp    eax,0x95301fec
  41b972:	or     eax,0x82e31e3
  41b977:	popf   
  41b978:	fcom   st(0)
  41b97a:	aas    
  41b97b:	neg    DWORD PTR [eax+0x45]
  41b97e:	inc    esi
  41b97f:	pop    edx
  41b980:	jecxz  0x41b99f
  41b982:	dec    esi
  41b983:	ja     0x41b9cb
  41b985:	lea    esp,[esi+0x31dc830f]
  41b98b:	jb     0x41b9ab
  41b98d:	push   eax
  41b98e:	inc    edx
  41b98f:	inc    ebx
  41b990:	aaa    
  41b991:	std    
  41b992:	js     0x41b9da
  41b994:	clc    
  41b995:	lods   al,BYTE PTR ds:[esi]
  41b996:	pop    edi
  41b997:	les    edx,FWORD PTR [edx-0x578c777c]
  41b99d:	mov    ds:0xd15da824,eax
  41b9a2:	inc    ebp
  41b9a3:	mov    eax,ds:0xbf794b6f
  41b9a8:	pop    edi
  41b9a9:	test   al,0x3e
  41b9ab:	aaa    
  41b9ac:	into   
  41b9ad:	out    dx,al
  41b9ae:	cmp    al,0x6e
  41b9b0:	inc    ebp
  41b9b1:	sub    BYTE PTR [ebx-0x56289a7d],ch
  41b9b7:	sbb    dl,BYTE PTR [esi-0x6b]
  41b9ba:	adc    BYTE PTR [esi+0x21],dh
  41b9bd:	adc    al,0xbe
  41b9c0:	scas   eax,DWORD PTR es:[edi]
  41b9c1:	push   esp
  41b9c2:	pusha  
  41b9c3:	sub    dh,BYTE PTR [edi-0x387b903]
  41b9c9:	dec    esi
  41b9ca:	jmp    0x7d77:0xc8750cb
  41b9d1:	cs jp  0x41b991
  41b9d4:	mov    bh,0xe4
  41b9d6:	fistp  QWORD PTR [edi+edx*2]
  41b9d9:	jmp    0x33ca:0x2eb2084
  41b9e0:	out    0xd5,al
  41b9e2:	int    0xc1
  41b9e4:	and    ecx,eax
  41b9e6:	addr16 in eax,dx
  41b9e8:	mov    al,0x2b
  41b9ea:	push   esi
  41b9eb:	mov    BYTE PTR [edi+0x33b8b190],bl
  41b9f1:	fs jbe 0x41ba3d
  41b9f4:	test   al,0x9d
  41b9f6:	ins    BYTE PTR es:[edi],dx
  41b9f7:	fwait
  41b9f8:	xor    ebp,DWORD PTR [edi]
  41b9fa:	mov    bl,0x17
  41b9fc:	pop    es
  41b9fd:	xor    al,0x79
  41b9ff:	mov    dl,0xff
  41ba01:	das    
  41ba02:	push   eax
  41ba03:	imul   ecx,DWORD PTR [ebp+0x2f647678],0x1342bcb6
  41ba0d:	inc    eax
  41ba0e:	mov    cl,BYTE PTR [ebx]
  41ba10:	ss ss xchg esp,eax
  41ba13:	dec    ecx
  41ba14:	fcmovne st,st(2)
  41ba16:	iret   
  41ba17:	jmp    0x41b9b7
  41ba19:	sub    bh,BYTE PTR [eax+0x63484901]
  41ba1f:	or     BYTE PTR [edi+0x3e],cl
  41ba22:	pushf  
  41ba23:	ret    0xb022
  41ba26:	lea    ebx,[edx]
  41ba28:	pop    ds
  41ba29:	out    dx,eax
  41ba2a:	mov    edx,?
  41ba2c:	mov    dl,0xeb
  41ba2e:	push   ax
  41ba30:	sub    al,0x79
  41ba32:	aad    0xc5
  41ba34:	sub    ecx,eax
  41ba36:	fiadd  DWORD PTR [ecx]
  41ba38:	xor    BYTE PTR [esp+esi*4],0x40
  41ba3c:	sbb    eax,0xc96c99f6
  41ba41:	push   ecx
  41ba42:	or     BYTE PTR [ebp-0x32],al
  41ba45:	rcl    BYTE PTR [ecx],cl
  41ba47:	and    BYTE PTR ds:0xcb33eeb7,0x3
  41ba4e:	test   edi,eax
  41ba50:	xor    DWORD PTR [ecx+0x347cebb7],ebx
  41ba56:	or     eax,0x4e091516
  41ba5b:	lods   eax,DWORD PTR ds:[esi]
  41ba5c:	cmp    ebx,DWORD PTR [eax-0x27d94e78]
  41ba62:	retf   0x600e
  41ba65:	jp     0x41ba45
  41ba67:	jp     0x41ba40
  41ba69:	mov    bl,0x46
  41ba6b:	das    
  41ba6c:	(bad)  
  41ba6d:	jo     0x41ba57
  41ba6f:	inc    ebp
  41ba70:	sub    ah,BYTE PTR fs:[ebx]
  41ba73:	fisub  WORD PTR [ebp+0x78]
  41ba76:	call   FWORD PTR [edx-0x59]
  41ba79:	mov    esp,0x2dde9e85
  41ba7e:	mov    dl,0xa9
  41ba80:	fadd   st,st(2)
  41ba82:	pushf  
  41ba83:	cmp    DWORD PTR [eax-0x6acb80b8],edi
  41ba89:	add    al,0x9a
  41ba8b:	jae    0x41ba0f
  41ba8d:	out    0xb2,al
  41ba8f:	xor    bh,BYTE PTR [edx+edi*2-0x7c]
  41ba93:	dec    ebx
  41ba94:	mov    ebp,0xc96fe22
  41ba99:	cld    
  41ba9a:	test   DWORD PTR [ebp+0x61],ecx
  41ba9d:	or     cl,bl
  41ba9f:	xchg   esi,eax
  41baa0:	add    ebp,DWORD PTR ds:0x2efac800
  41baa6:	add    ebp,ebp
  41baa8:	xchg   esp,eax
  41baa9:	and    al,0xb0
  41baab:	fdivr  st(4),st
  41baad:	in     eax,dx
  41baae:	cmp    BYTE PTR [ecx-0x162c6857],0xf6
  41bab5:	clc    
  41bab6:	mov    eax,ds:0x55fa080b
  41babb:	or     bh,BYTE PTR [edx]
  41babd:	out    0x99,al
  41babf:	and    al,0x3d
  41bac1:	cld    
  41bac2:	es int3 
  41bac4:	pop    ebp
  41bac5:	pop    esi
  41bac6:	mov    esi,0xbc9a16e1
  41bacb:	dec    edi
  41bacc:	add    DWORD PTR [ebx+0x6b],edx
  41bacf:	adc    eax,0x1245b418
  41bad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bad5:	lds    esi,FWORD PTR [eax+edi*1]
  41bad8:	hlt    
  41bad9:	cmp    eax,0xbc186961
  41bade:	jne    0x41bb55
  41bae0:	fs pop edi
  41bae2:	pop    esi
  41bae3:	jns    0x41bb04
  41bae5:	adc    edx,DWORD PTR [ecx+0x31]
  41bae8:	out    dx,eax
  41bae9:	mov    bl,0xac
  41baeb:	(bad)  
  41baec:	cmp    BYTE PTR [esi],ch
  41baee:	fnsave [ecx+0x35]
  41baf1:	fisub  DWORD PTR [ebp+0x79]
  41baf4:	cli    
  41baf5:	inc    edi
  41baf6:	add    BYTE PTR ds:0x124f952,bh
  41bafc:	mov    cl,0x6d
  41bafe:	push   eax
  41baff:	into   
  41bb00:	outs   dx,DWORD PTR ds:[esi]
  41bb01:	push   esp
  41bb02:	mov    ecx,0xf1d830be
  41bb07:	mov    al,0xfd
  41bb09:	test   BYTE PTR [edx],ah
  41bb0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0c:	sub    edi,DWORD PTR [ebx]
  41bb0e:	sub    ah,al
  41bb10:	xchg   DWORD PTR [ecx],esi
  41bb12:	cmp    eax,0x81f1bce
  41bb17:	mov    eax,ds:0xa98a897b
  41bb1c:	inc    eax
  41bb1d:	push   esp
  41bb1e:	sbb    al,0x4b
  41bb20:	adc    DWORD PTR [eax],ebp
  41bb22:	jge    0x41bb05
  41bb24:	mov    al,ds:0x73771100
  41bb29:	test   al,0xf6
  41bb2b:	mov    dl,BYTE PTR [esi-0x362057ef]
  41bb31:	dec    esp
  41bb32:	xchg   edx,eax
  41bb33:	fdivr  QWORD PTR [edx+0x2d2d5286]
  41bb39:	mov    edi,0x94ab9db2
  41bb3e:	mov    dl,0x59
  41bb40:	in     al,0x86
  41bb42:	out    dx,eax
  41bb43:	pop    ss
  41bb44:	and    edx,esi
  41bb46:	add    dl,bh
  41bb48:	or     eax,0x6d3b52f3
  41bb4d:	in     eax,0x96
  41bb4f:	and    al,0xf7
  41bb51:	adc    BYTE PTR [ebp+0x2c33c00d],cl
  41bb57:	cli    
  41bb58:	add    eax,0x5214e002
  41bb5d:	mov    DWORD PTR [esi],ebp
  41bb5f:	xor    edx,esi
  41bb61:	pop    edi
  41bb62:	in     eax,0x3e
  41bb64:	push   0x69
  41bb66:	bound  esi,QWORD PTR [ecx-0x223b860]
  41bb6c:	scas   al,BYTE PTR es:[edi]
  41bb6d:	js     0x41bb3f
  41bb6f:	dec    ebp
  41bb70:	and    DWORD PTR [edi-0x7f],edx
  41bb73:	call   0x7d1fcbbe
  41bb78:	jl     0x41bafa
  41bb7a:	or     BYTE PTR [eax-0x4e],al
  41bb7d:	or     DWORD PTR [ebp-0x67],edi
  41bb80:	inc    ecx
  41bb81:	aas    
  41bb82:	mul    esp
  41bb84:	repz push 0x2
  41bb87:	pop    edx
  41bb88:	sub    BYTE PTR [ebp-0x362e9490],dl
  41bb8e:	cmp    bh,BYTE PTR [ecx]
  41bb90:	sub    al,0x99
  41bb92:	pop    ss
  41bb93:	aam    0x5
  41bb95:	mov    es,WORD PTR [ebx]
  41bb97:	jg     0x41bba6
  41bb99:	jmp    0x41bb97
  41bb9b:	ja     0x41bb56
  41bb9d:	(bad)  
  41bb9e:	rcr    BYTE PTR [esi-0x11c2b72],0x32
  41bba5:	ja     0x41bbba
  41bba7:	xor    BYTE PTR [esi-0x30],dl
  41bbaa:	inc    esp
  41bbab:	or     BYTE PTR [ebx+0x6c54e464],bh
  41bbb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbb2:	xchg   ebp,eax
  41bbb3:	pop    ss
  41bbb4:	shr    ch,cl
  41bbb6:	aaa    
  41bbb7:	push   ss
  41bbb8:	sbb    eax,0x1244767a
  41bbbd:	and    DWORD PTR [esi-0x7a3081a4],edx
  41bbc3:	sub    BYTE PTR [ebx-0x117b3cd6],bh
  41bbc9:	loope  0x41bc41
  41bbcb:	out    dx,al
  41bbcc:	or     DWORD PTR [esp+edi*2],esi
  41bbcf:	leave  
  41bbd0:	ret    
  41bbd1:	inc    eax
  41bbd2:	xor    eax,0x675e6c35
  41bbd7:	push   ds
  41bbd8:	test   DWORD PTR [edi-0x690c0d5c],ebx
  41bbde:	outs   dx,DWORD PTR ds:[esi]
  41bbdf:	es mov ?,edi
  41bbe2:	mov    esp,ecx
  41bbe4:	dec    edi
  41bbe5:	sar    DWORD PTR [esi+0x6111911e],1
  41bbeb:	xchg   ebp,eax
  41bbed:	rcr    ebp,0xc9
  41bbf0:	jnp    0x41bc0a
  41bbf2:	out    0x16,al
  41bbf4:	xchg   edx,eax
  41bbf5:	xlat   BYTE PTR ds:[ebx]
  41bbf6:	cmp    eax,0x303b4242
  41bbfb:	jne    0x41bc04
  41bbfd:	pushf  
  41bbfe:	jle    0x41bbd4
  41bc00:	enter  0x7a75,0x2
  41bc04:	mov    eax,ds:0x3f9ec199
  41bc09:	mov    dh,0x23
  41bc0b:	push   edx
  41bc0c:	add    BYTE PTR [ecx-0x54341ba2],0x62
  41bc13:	js     0x41bbe6
  41bc15:	imul   esi,ecx,0xffffffef
  41bc18:	stos   DWORD PTR es:[edi],eax
  41bc19:	or     eax,0x2cfab27e
  41bc1e:	push   edi
  41bc1f:	scas   eax,DWORD PTR es:[edi]
  41bc20:	pop    ss
  41bc21:	sub    al,0x2
  41bc23:	sub    DWORD PTR [ebx],esp
  41bc25:	out    0x3e,al
  41bc27:	mov    cl,0x58
  41bc29:	aam    0xf9
  41bc2b:	add    dh,dh
  41bc2d:	inc    ecx
  41bc2e:	dec    ecx
  41bc2f:	jae    0x41bc04
  41bc31:	retf   0x5da7
  41bc34:	imul   esp,DWORD PTR [ebp+0xcd470b3],0x3dac6388
  41bc3e:	add    al,BYTE PTR [ebp+0x2bedc91e]
  41bc44:	test   edx,edx
  41bc46:	fldcw  WORD PTR ds:0xd1262b8a
  41bc4c:	jmp    0x41bcba
  41bc4e:	fisttp WORD PTR [ebp+0x7c]
  41bc51:	lahf   
  41bc52:	jbe    0x41bbeb
  41bc54:	loop   0x41bbfd
  41bc56:	mov    bh,0x7f
  41bc58:	xchg   edx,eax
  41bc59:	and    bl,cl
  41bc5b:	add    al,0x60
  41bc5d:	dec    ebx
  41bc5e:	fsubr  DWORD PTR [esp+esi*1+0x687006ec]
  41bc65:	push   0xb7a84a6e
  41bc6a:	ds jle 0x41bc93
  41bc6d:	lods   eax,DWORD PTR ds:[esi]
  41bc6e:	xor    esp,eax
  41bc70:	mov    ch,0x7e
  41bc72:	test   eax,0x855d3e50
  41bc77:	aad    0x5b
  41bc79:	stos   BYTE PTR es:[edi],al
  41bc7a:	or     al,0xb4
  41bc7c:	jle    0x41bcc6
  41bc7e:	inc    ebx
  41bc7f:	mov    ds:0x2de72591,al
  41bc84:	add    edi,DWORD PTR [esi-0x5e57d9c5]
  41bc8a:	cmp    dh,BYTE PTR [ecx-0x9]
  41bc8d:	add    DWORD PTR [edi+0x5],ebx
  41bc90:	out    0xc7,al
  41bc92:	daa    
  41bc93:	pop    esi
  41bc94:	loop   0x41bd05
  41bc96:	sbb    BYTE PTR [edx+0x5c],al
  41bc99:	inc    edi
  41bc9a:	mov    cl,0x90
  41bc9c:	or     ebx,DWORD PTR [eax+0x7e]
  41bc9f:	pop    ss
  41bca0:	or     al,0xc7
  41bca2:	lds    esi,FWORD PTR [ecx+0x19]
  41bca5:	sub    BYTE PTR [ebp+0x7c],cl
  41bca8:	cdq    
  41bca9:	das    
  41bcaa:	jmp    0x1e788130
  41bcaf:	dec    edx
  41bcb0:	mov    cl,0x2
  41bcb2:	push   ss
  41bcb3:	add    ebp,esi
  41bcb5:	test   al,0x51
  41bcb7:	repnz cmp al,0x7a
  41bcba:	inc    esi
  41bcbb:	mov    cl,0xcc
  41bcbd:	in     al,0x41
  41bcbf:	rol    BYTE PTR [edi-0x29],1
  41bcc2:	or     al,0xf4
  41bcc4:	shl    DWORD PTR [ebx+0x3a4f98a2],cl
  41bcca:	dec    eax
  41bccb:	mov    DWORD PTR [ecx+0xc6a2360],esi
  41bcd1:	xchg   ebx,eax
  41bcd2:	add    al,0x34
  41bcd4:	mov    ebx,0xd3e5e9ad
  41bcd9:	xchg   esi,eax
  41bcda:	repnz dec ecx
  41bcdc:	test   DWORD PTR [di],0x10f33ea2
  41bce3:	jne    0x41bd2e
  41bce5:	stc    
  41bce6:	adc    ch,BYTE PTR fs:[ebx+0x64]
  41bcea:	(bad)  
  41bceb:	out    0xe7,eax
  41bced:	mov    edx,0x674767bb
  41bcf2:	or     DWORD PTR [edx-0x57],edi
  41bcf5:	adc    ah,BYTE PTR [ebx-0x2dd3ced5]
  41bcfb:	cld    
  41bcfc:	stos   BYTE PTR es:[edi],al
  41bcfd:	add    BYTE PTR [edi+ecx*4-0x55],0x52
  41bd02:	push   0x9c7f01b3
  41bd07:	fstp   QWORD PTR [ebx]
  41bd09:	fcom   QWORD PTR [ecx+0x679382ee]
  41bd0f:	out    0xe4,al
  41bd11:	mov    edi,0x7591f53
  41bd16:	cmc    
  41bd17:	jns    0x41bd22
  41bd19:	xor    al,0xe6
  41bd1b:	sbb    DWORD PTR [edi],esp
  41bd1d:	add    eax,0x2a86e7ab
  41bd22:	adc    DWORD PTR [ebx],0xffffff93
  41bd25:	pop    eax
  41bd26:	or     BYTE PTR [edi],0xdd
  41bd29:	and    al,0xf1
  41bd2b:	in     eax,dx
  41bd2c:	adc    DWORD PTR [eax+0x2b5e7137],eax
  41bd32:	aam    0x2d
  41bd34:	imul   esi,DWORD PTR [edx-0x35],0xffffff83
  41bd38:	mov    edi,0x1c502f02
  41bd3d:	popf   
  41bd3e:	mov    ah,0x82
  41bd40:	pop    edx
  41bd41:	imul   ebp,edx,0x9a547b12
  41bd47:	lds    edx,FWORD PTR [edi-0x600ace1]
  41bd4d:	test   BYTE PTR [eax+edi*2+0x5d0a2ab6],0xaf
  41bd55:	inc    eax
  41bd56:	mov    ebp,ebp
  41bd58:	fs lock jne 0x41bdae
  41bd5c:	xchg   edx,eax
  41bd5d:	push   edi
  41bd5e:	ror    DWORD PTR [eax-0x53cebebb],1
  41bd64:	xor    eax,0x2c71d668
  41bd69:	sbb    BYTE PTR [edx+ecx*4+0x3fe9694b],0xbf
  41bd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd72:	test   eax,esp
  41bd74:	inc    edx
  41bd75:	icebp  
  41bd76:	sti    
  41bd77:	aad    0x28
  41bd79:	jle    0x41bd73
  41bd7b:	xor    edx,DWORD PTR [edi]
  41bd7d:	and    ebp,DWORD PTR [esi-0x3]
  41bd80:	xchg   ecx,eax
  41bd81:	pusha  
  41bd82:	dec    BYTE PTR ds:0x1c990558
  41bd88:	push   esi
  41bd89:	dec    eax
  41bd8a:	push   ss
  41bd8b:	mov    ebx,0xd814f947
  41bd90:	push   ecx
  41bd91:	out    dx,eax
  41bd92:	les    ebx,FWORD PTR [edi-0x8]
  41bd95:	sbb    ebx,ebp
  41bd97:	inc    esp
  41bd98:	test   eax,0xf84d46dd
  41bd9d:	les    ebx,FWORD PTR [esi+edx*1]
  41bda0:	and    BYTE PTR [ebx-0xb],0xca
  41bda4:	mov    al,ds:0xc6ce60f2
  41bda9:	mov    cl,0xac
  41bdab:	jns    0x41bdc1
  41bdad:	fbstp  TBYTE PTR [eax+0x5db4d994]
  41bdb3:	or     bl,BYTE PTR [ebp-0x542b49be]
  41bdb9:	adc    eax,0x78b1c022
  41bdbe:	xor    edi,DWORD PTR [ebp-0x6]
  41bdc1:	add    BYTE PTR [ecx],ah
  41bdc3:	retf   0xf52f
  41bdc6:	cwde   
  41bdc7:	rol    BYTE PTR [edi-0x66],cl
  41bdca:	repnz int3 
  41bdcc:	mov    dh,0x4e
  41bdce:	sub    eax,0x6df41855
  41bdd3:	cli    
  41bdd4:	pop    ss
  41bdd5:	dec    ebx
  41bdd6:	cld    
  41bdd7:	nop
  41bdd8:	bound  esi,QWORD PTR [edx+eax*2]
  41bddb:	ficomp DWORD PTR [ebx]
  41bddd:	push   esp
  41bdde:	pushf  
  41bddf:	and    ecx,DWORD PTR [esi+0x3]
  41bde2:	xor    BYTE PTR [edi+esi*2],dh
  41bde5:	and    DWORD PTR [ecx],edi
  41bde7:	or     al,0x82
  41bde9:	or     eax,0xb5ddc748
  41bdee:	inc    edx
  41bdef:	mov    edi,eax
  41bdf1:	mov    esp,0x3d3a8435
  41bdf6:	stc    
  41bdf7:	mov    bl,0xca
  41bdf9:	push   edx
  41bdfa:	jl     0x41be69
  41bdfc:	fiadd  DWORD PTR [edx+0x16]
  41bdff:	push   ebp
  41be00:	pop    edi
  41be01:	xchg   esi,eax
  41be02:	mov    al,0x78
  41be04:	push   ss
  41be05:	shl    BYTE PTR [edi+0x11],1
  41be08:	add    ecx,DWORD PTR [edx-0x36c6937c]
  41be0e:	shr    dl,cl
  41be10:	ss loop 0x41be09
  41be13:	cwde   
  41be14:	sub    al,0xc9
  41be16:	mov    ecx,0x4cfb1f8
  41be1b:	dec    BYTE PTR [eax-0x1017a7ca]
  41be21:	shl    BYTE PTR [ebx+0x4c4e281],0xa1
  41be28:	je     0x41be8d
  41be2a:	jb     0x41be02
  41be2c:	mov    esp,0xeafbb78a
  41be31:	popa   
  41be32:	cmp    cl,0x30
  41be35:	in     al,dx
  41be36:	adc    dl,BYTE PTR es:[esi+0x7b]
  41be3a:	adc    eax,0x6cc7f648
  41be3f:	cmp    BYTE PTR [ebx-0x522f3746],ah
  41be45:	dec    ecx
  41be46:	ret    0x34d4
  41be49:	ror    esi,0xfe
  41be4c:	and    BYTE PTR [ecx-0x28da6289],0x17
  41be53:	pop    ecx
  41be54:	adc    eax,0xea46ca4d
  41be59:	ror    BYTE PTR [edi-0x36],1
  41be5c:	jne    0x41becd
  41be5e:	cmp    ch,BYTE PTR [edi-0x36]
  41be61:	adc    BYTE PTR [ecx-0x80],ah
  41be64:	test   eax,0xe462b66e
  41be69:	pop    eax
  41be6a:	test   eax,0xcf95a15b
  41be6f:	test   BYTE PTR [edx-0x50358c18],dh
  41be75:	test   DWORD PTR [ebx-0x50c41eeb],edx
  41be7b:	mov    eax,es
  41be7d:	xchg   ebp,eax
  41be7e:	dec    esp
  41be7f:	mov    esp,0x5d48214
  41be84:	ret    
  41be85:	loop   0x41bed5
  41be87:	fwait
  41be88:	not    ebx
  41be8a:	xlat   BYTE PTR ds:[ebx]
  41be8b:	leave  
  41be8c:	clc    
  41be8d:	idiv   esp
  41be8f:	mov    BYTE PTR ds:0xe6cf4d66,ch
  41be95:	xor    eax,0xbac8105e
  41be9a:	sbb    DWORD PTR [esi-0x4493240f],edi
  41bea0:	ret    0x5c0f
  41bea3:	pop    edx
  41bea4:	mov    WORD PTR [edi],es
  41bea6:	jmp    0x70f4e331
  41beab:	xor    DWORD PTR [esi+0x74],0x56cf3930
  41beb2:	push   0x2c6b5c8
  41beb7:	outs   dx,DWORD PTR ds:[esi]
  41beb8:	call   0x4b949163
  41bebd:	nop
  41bebe:	xchg   ebx,eax
  41bebf:	stc    
  41bec0:	jb     0x41beef
  41bec2:	in     al,0x8a
  41bec4:	rol    ah,1
  41bec6:	dec    ecx
  41bec7:	test   BYTE PTR [ecx],dh
  41bec9:	ins    DWORD PTR es:[edi],dx
  41beca:	mov    dl,0x7e
  41becc:	ins    BYTE PTR es:[edi],dx
  41becd:	jns    0x41bed5
  41becf:	pop    eax
  41bed0:	sahf   
  41bed1:	sub    al,0x44
  41bed3:	dec    esp
  41bed4:	lods   al,BYTE PTR ds:[esi]
  41bed5:	and    ebx,ecx
  41bed7:	xlat   BYTE PTR ds:[ebx]
  41bed8:	jae    0x41bec4
  41beda:	loope  0x41beac
  41bedc:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41bede:	call   0x406de8bb
  41bee3:	add    ebp,DWORD PTR [edi-0x6e]
  41bee6:	xor    dh,0x68
  41bee9:	pusha  
  41beea:	sub    ecx,0x32
  41beed:	call   0x2f5cd410
  41bef2:	in     eax,0x90
  41bef4:	lock sub eax,0xa0155b24
  41befa:	mov    eax,0xccdb254a
  41beff:	aad    0xa1
  41bf01:	mov    ecx,0xf6b912eb
  41bf06:	push   0x5e
  41bf08:	sub    ebx,esi
  41bf0a:	dec    ebp
  41bf0b:	mov    dh,BYTE PTR [ebp+ebx*4-0x59f9f2c1]
  41bf12:	dec    esi
  41bf13:	push   cs
  41bf14:	imul   ecx,DWORD PTR [eax],0x44e941a8
  41bf1a:	xchg   ebx,eax
  41bf1b:	repz or esp,DWORD PTR [ebx+0x48]
  41bf1f:	adc    DWORD PTR [edx],esi
  41bf21:	mov    edx,0x9a013f10
  41bf26:	sti    
  41bf27:	sub    BYTE PTR [edx-0x6],0x20
  41bf2b:	js     0x41bec2
  41bf2d:	fwait
  41bf2e:	std    
  41bf2f:	lods   al,BYTE PTR ds:[esi]
  41bf30:	sub    DWORD PTR [eax-0x2138cafc],0xe2d9c9a0
  41bf3a:	inc    edi
  41bf3b:	out    dx,eax
  41bf3c:	sbb    eax,0x95068394
  41bf41:	xor    dl,BYTE PTR ds:0x7a07d920
  41bf47:	cmp    esi,ebp
  41bf49:	shl    ebx,cl
  41bf4b:	cwde   
  41bf4c:	dec    edx
  41bf4d:	addr16 dec ebx
  41bf4f:	jg     0x41bf65
  41bf51:	dec    esi
  41bf52:	aaa    
  41bf53:	loope  0x41bedb
  41bf55:	and    edi,DWORD PTR [eax]
  41bf57:	pop    esi
  41bf58:	push   cs
  41bf59:	aaa    
  41bf5a:	(bad)  
  41bf5b:	(bad)  [ecx-0x4de1d67f]
  41bf61:	in     al,dx
  41bf62:	sub    BYTE PTR [ecx+ebp*4-0x5],0xce
  41bf67:	test   al,0x7e
  41bf69:	or     DWORD PTR [edi+0x1f],esi
  41bf6c:	js     0x41beff
  41bf6e:	dec    ebp
  41bf6f:	inc    esi
  41bf70:	pop    ebx
  41bf71:	sub    ebp,DWORD PTR [esi+0x6af9d71b]
  41bf77:	lds    ecx,FWORD PTR [ebp-0x78393854]
  41bf7d:	iret   
  41bf7e:	or     dh,dh
  41bf80:	outs   dx,BYTE PTR ds:[esi]
  41bf81:	dec    ebp
  41bf82:	and    cl,0x9
  41bf85:	pop    edx
  41bf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf87:	loopne 0x41bffe
  41bf89:	dec    edi
  41bf8a:	or     edi,esi
  41bf8c:	lods   al,BYTE PTR ds:[esi]
  41bf8d:	push   ebp
  41bf8e:	or     dh,0x7
  41bf91:	aam    0x8e
  41bf93:	sub    BYTE PTR [edx],bl
  41bf95:	fldcw  WORD PTR [esi]
  41bf97:	pop    ebp
  41bf98:	fnstenv [ebx-0x4cca8177]
  41bf9e:	sbb    DWORD PTR [esp+ecx*2],ecx
  41bfa1:	mov    edx,0x916e076c
  41bfa6:	pop    edx
  41bfa7:	ds gs jo 0x41bf3e
  41bfab:	dec    edi
  41bfac:	and    edi,eax
  41bfae:	sbb    eax,0xc65e71a3
  41bfb3:	mov    edx,0x448d74
  41bfb8:	adc    al,0x7c
  41bfba:	enter  0xefd7,0x1e
  41bfbe:	fnstcw WORD PTR [ecx-0x1b]
  41bfc1:	mov    ebp,0x6fd95abb
  41bfc6:	shl    edx,1
  41bfc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfc9:	or     bl,ch
  41bfcb:	cmp    ebp,esi
  41bfcd:	inc    eax
  41bfce:	fs popa 
  41bfd0:	enter  0x8d3c,0x44
  41bfd4:	mov    edi,DWORD PTR [eax+0x71b8e6f3]
  41bfda:	pop    ss
  41bfdb:	pop    ebx
  41bfdc:	test   eax,0x54a30c4e
  41bfe1:	std    
  41bfe2:	stos   DWORD PTR es:[edi],eax
  41bfe3:	ja     0x41c04b
  41bfe5:	push   edi
  41bfe6:	and    eax,0xf869beaf
  41bfeb:	push   0x3b40c00c
  41bff0:	pop    esi
  41bff1:	repz sub esp,0xffffffbb
  41bff5:	mov    eax,0x419e863a
  41bffa:	mov    ds:0xa17ab765,al
  41bfff:	xchg   ecx,eax
  41c000:	mov    dl,0xf7
  41c002:	ret    
  41c003:	adc    esp,DWORD PTR [edx]
  41c005:	cs sahf 
  41c007:	pop    edx
  41c008:	jns    0x41c057
  41c00a:	inc    ebp
  41c00b:	test   BYTE PTR [ebx],dl
  41c00d:	repnz dec ebx
  41c00f:	xchg   DWORD PTR [edi+0x7],ebp
  41c012:	jg     0x41bfc0
  41c014:	xchg   ecx,eax
  41c015:	aam    0xbc
  41c017:	xor    DWORD PTR [esi-0x9bf1ed1],esi
  41c01d:	fwait
  41c01e:	and    ch,BYTE PTR [ebp-0xf]
  41c021:	cwde   
  41c022:	mov    ?,WORD PTR [ebx-0x7c]
  41c025:	test   esi,edx
  41c027:	lahf   
  41c028:	sahf   
  41c029:	popa   
  41c02a:	cmovp  ebp,esp
  41c02d:	fucomp st(6)
  41c02f:	add    eax,0xb1f3f696
  41c034:	sbb    al,0x4
  41c036:	icebp  
  41c037:	add    eax,0xdcdfad08
  41c03c:	scas   al,BYTE PTR es:[edi]
  41c03d:	mov    ds:0xadeac38d,eax
  41c042:	push   ecx
  41c043:	pop    esp
  41c044:	xchg   esi,eax
  41c045:	push   0x3d05bf39
  41c04a:	cmp    al,cl
  41c04c:	(bad)  
  41c04d:	mov    ebp,DWORD PTR [esi+ecx*2+0x18631375]
  41c054:	jns    0x41c093
  41c056:	scas   eax,DWORD PTR es:[edi]
  41c057:	in     al,dx
  41c058:	imul   ebx,DWORD PTR [edi+0x3a],0x78c69d22
  41c05f:	add    BYTE PTR [ebp+0x7c],0xe3
  41c063:	hlt    
  41c064:	mov    BYTE PTR [ebx],dh
  41c066:	mov    ch,0x46
  41c068:	sahf   
  41c069:	mov    ebp,0x2e570c2e
  41c06e:	inc    esi
  41c06f:	mov    cx,0x103b
  41c073:	ins    DWORD PTR es:[edi],dx
  41c074:	stos   DWORD PTR es:[edi],eax
  41c075:	mov    esp,0x6fd84275
  41c07a:	inc    ebx
  41c07b:	inc    esi
  41c07c:	cmp    DWORD PTR [ecx+0x11],edx
  41c07f:	sbb    eax,0xc61cf3af
  41c084:	stos   BYTE PTR es:[edi],al
  41c085:	lea    ebx,[ebx+0x6812f749]
  41c08b:	cwde   
  41c08c:	call   DWORD PTR [esi+0x6cfd1fe3]
  41c092:	stc    
  41c093:	mov    edx,es
  41c095:	in     al,dx
  41c096:	push   ebx
  41c097:	pop    eax
  41c098:	mov    esp,0x336cff76
  41c09d:	adc    DWORD PTR [eax+0x6c],esp
  41c0a0:	dec    eax
  41c0a1:	into   
  41c0a2:	inc    edx
  41c0a3:	cs jg  0x41c07e
  41c0a6:	add    al,BYTE PTR [esi+0x21]
  41c0a9:	rcl    DWORD PTR [edx+0x1cd3e23f],1
  41c0af:	push   es
  41c0b0:	bound  eax,QWORD PTR [esi]
  41c0b2:	xor    BYTE PTR [edx+0x51],dl
  41c0b5:	lods   al,BYTE PTR ds:[esi]
  41c0b6:	imul   esi,DWORD PTR [ecx],0x705c4595
  41c0bc:	fdivr  QWORD PTR ds:0xb296fd2
  41c0c2:	xchg   DWORD PTR [edi-0x521afc5b],edi
  41c0c8:	addr16 in al,dx
  41c0ca:	rcr    BYTE PTR [eax+edi*2-0x3f],0xfc
  41c0cf:	or     ch,ah
  41c0d1:	lock into 
  41c0d3:	sub    dl,BYTE PTR [edi+0x242a0f92]
  41c0d9:	icebp  
  41c0da:	lock mov dh,0x80
  41c0dd:	inc    esi
  41c0de:	mov    ss,WORD PTR [ebx]
  41c0e0:	mov    bh,0xa4
  41c0e2:	add    eax,0x4bb68154
  41c0e7:	mov    esp,0x1d965e0
  41c0ec:	cmc    
  41c0ed:	mov    esp,0xab304ca4
  41c0f2:	test   eax,0x66c7971c
  41c0f7:	sub    dl,BYTE PTR [edx]
  41c0f9:	push   ss
  41c0fa:	leave  
  41c0fb:	xor    ah,BYTE PTR [edx-0x6fc48c3b]
  41c101:	ins    WORD PTR es:[edi],dx
  41c103:	mov    ch,BYTE PTR [ecx-0x25553dd4]
  41c109:	fistp  WORD PTR [ebp+ebx*8-0x58b63677]
  41c110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c111:	out    dx,eax
  41c112:	call   0xc7f92ee9
  41c117:	enter  0x256,0x46
  41c11b:	jmp    0x3b5ed56a
  41c120:	je     0x41c0d7
  41c122:	test   DWORD PTR [esi-0x29471e60],esi
  41c128:	dec    esi
  41c129:	sar    BYTE PTR [ecx+0x7],1
  41c12c:	mov    dh,0x9a
  41c12e:	xor    al,0xc5
  41c130:	mov    WORD PTR ds:0x7c3ae483,es
  41c136:	add    DWORD PTR [ecx],edx
  41c138:	lods   al,BYTE PTR ds:[esi]
  41c139:	pop    DWORD PTR [ecx-0x2f]
  41c13c:	enter  0x9b27,0xcc
  41c140:	lea    eax,[ecx]
  41c142:	fwait
  41c143:	jnp    0x41c11e
  41c145:	hlt    
  41c146:	sub    al,0xf2
  41c148:	xchg   eax,esi
  41c14a:	mov    dl,0x69
  41c14c:	mov    dl,0x48
  41c14e:	xchg   edx,eax
  41c14f:	(bad)  
  41c150:	(bad)
  41c153:	addr16 mov ch,0x32
  41c156:	sub    DWORD PTR [esi+0x7a],ebp
  41c159:	sar    BYTE PTR [edi],cl
  41c15b:	(bad)  
  41c15c:	ja     0x41c1a7
  41c15e:	fiadd  DWORD PTR [edx]
  41c160:	cdq    
  41c161:	icebp  
  41c162:	icebp  
  41c163:	pop    eax
  41c164:	push   edi
  41c165:	add    esp,edx
  41c167:	jmp    0xe2cd:0x18410895
  41c16e:	mov    dh,0x3b
  41c170:	sbb    esi,edi
  41c172:	xor    cl,bl
  41c174:	cmp    DWORD PTR [ebx-0x18],eax
  41c177:	mov    eax,ds:0x8a230b7e
  41c17c:	(bad)  
  41c17d:	in     al,dx
  41c17e:	sbb    al,0xb7
  41c180:	mov    dh,0xea
  41c182:	fs mov BYTE PTR ss:[edx],al
  41c186:	sub    al,0x2b
  41c188:	daa    
  41c189:	cwde   
  41c18a:	nop
  41c18b:	xchg   cl,al
  41c18d:	mov    eax,0x9d1a456d
  41c192:	repz sbb eax,0xa02f374f
  41c198:	push   eax
  41c199:	jl     0x41c195
  41c19b:	inc    BYTE PTR [edi+eiz*8+0x1e09ed]
  41c1a2:	ret    0x3f78
  41c1a5:	xchg   edi,eax
  41c1a6:	ja     0x41c131
  41c1a8:	mov    ds:0x53133292,eax
  41c1ad:	mov    ch,bh
  41c1af:	je     0x41c221
  41c1b1:	mov    edx,?
  41c1b3:	data16 es jl 0x41c210
  41c1b7:	jbe    0x41c18d
  41c1b9:	mov    ebp,0x16f570ce
  41c1be:	pop    ecx
  41c1bf:	and    BYTE PTR [edi-0x54e95f4a],ah
  41c1c5:	out    0x54,al
  41c1c7:	mov    cl,0x1d
  41c1c9:	xchg   BYTE PTR [edi+esi*8],al
  41c1cc:	adc    BYTE PTR [esi+ecx*4],al
  41c1cf:	pusha  
  41c1d0:	jle    0x41c1f1
  41c1d2:	mov    dl,0x8
  41c1d4:	cmc    
  41c1d5:	cmc    
  41c1d6:	in     eax,dx
  41c1d7:	sahf   
  41c1d8:	lods   al,BYTE PTR ds:[esi]
  41c1d9:	inc    esi
  41c1da:	and    BYTE PTR [esi+0xd1f0312],bh
  41c1e0:	add    eax,0xb2002073
  41c1e5:	jnp    0x41c1fa
  41c1e7:	pop    ecx
  41c1e8:	pop    es
  41c1e9:	call   0xfaba2c75
  41c1ee:	xchg   ebx,eax
  41c1ef:	dec    edi
  41c1f0:	sbb    ecx,DWORD PTR [ebx+ebp*1]
  41c1f3:	je     0x41c227
  41c1f5:	loope  0x41c184
  41c1f7:	imul   esi,DWORD PTR [edi-0x6a],0x2a
  41c1fb:	das    
  41c1fc:	popa   
  41c1fd:	fdivr  QWORD PTR [ebx]
  41c1ff:	fistp  QWORD PTR [esi+ebx*1-0x27]
  41c203:	(bad)  
  41c204:	leave  
  41c205:	loope  0x41c20a
  41c207:	dec    esp
  41c208:	mov    dh,0x8b
  41c20a:	pop    ebp
  41c20b:	test   al,0x6e
  41c20d:	mov    bl,0x56
  41c20f:	icebp  
  41c210:	in     al,dx
  41c211:	and    dl,cl
  41c213:	jb     0x41c1e3
  41c215:	pop    eax
  41c216:	cmp    edi,DWORD PTR [edi+0x5048f37d]
  41c21c:	mov    edx,0xdb87123c
  41c221:	(bad)  
  41c223:	les    edi,FWORD PTR [edi]
  41c225:	pop    ds
  41c226:	clc    
  41c227:	dec    ecx
  41c228:	shl    bh,cl
  41c22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c22b:	dec    ebx
  41c22c:	mov    cs,WORD PTR [ecx+0x48]
  41c22f:	xchg   esi,eax
  41c230:	jge    0x41c1da
  41c232:	sbb    BYTE PTR ds:0x528559f3,ch
  41c238:	leave  
  41c239:	add    al,BYTE PTR [ebp-0x19fbd070]
  41c23f:	jmp    0x41c1d4
  41c241:	jmp    0x41c29f
  41c243:	jmp    0x41c253
  41c245:	jmp    0x201e24a9
  41c24a:	push   0x42
  41c24c:	mov    al,ds:0xa7604004
  41c251:	out    dx,eax
  41c252:	sti    
  41c253:	or     ch,BYTE PTR [eax+0x8]
  41c256:	adc    BYTE PTR [ecx+ebp*8],0xd0
  41c25a:	xor    BYTE PTR [ecx],0x9f
  41c25d:	xchg   edi,eax
  41c25e:	adc    al,0xe1
  41c260:	adc    edx,DWORD PTR [ebp-0x66]
  41c263:	and    BYTE PTR [edi+0x68fc77b0],al
  41c269:	cmp    edx,esi
  41c26b:	ins    BYTE PTR es:[edi],dx
  41c26c:	xor    eax,0x513ffddf
  41c271:	nop
  41c272:	and    ch,BYTE PTR [ebp+0x2f]
  41c275:	add    ebp,esp
  41c277:	rcl    BYTE PTR [eax+0x49a2a0f6],0xc2
  41c27e:	push   esp
  41c27f:	mov    edx,edx
  41c281:	inc    esp
  41c282:	jmp    0xeb5:0x4b2f4136
  41c289:	mov    ebx,DWORD PTR [ebx+0x5d68e30e]
  41c28f:	test   eax,0x6bf5600d
  41c294:	sahf   
  41c295:	dec    eax
  41c296:	fmul   QWORD PTR [edx-0x9]
  41c299:	jae    0x41c2e7
  41c29b:	jns    0x41c27b
  41c29d:	cmp    BYTE PTR [ebx+ebp*1+0x14],0x41
  41c2a2:	bound  esi,QWORD PTR [ebp+0x5d]
  41c2a5:	leave  
  41c2a6:	(bad)  
  41c2a7:	retf   
  41c2a8:	mov    ebp,0x1023c618
  41c2ad:	shl    BYTE PTR [edi-0x743bc968],0x3e
  41c2b4:	and    BYTE PTR [ebx-0x29],0xb7
  41c2b8:	int3   
  41c2b9:	push   ds
  41c2ba:	mov    al,ds:0x70ba52ce
  41c2bf:	or     ebx,eax
  41c2c1:	push   eax
  41c2c2:	mov    esp,0x14a0df73
  41c2c7:	in     al,0x98
  41c2c9:	xchg   DWORD PTR [ecx],ebx
  41c2cb:	add    bh,BYTE PTR [esi]
  41c2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2ce:	call   0x323c6c41
  41c2d3:	jae    0x41c26b
  41c2d5:	loop   0x41c2a4
  41c2d7:	data16 xor al,0x61
  41c2da:	xor    BYTE PTR [ebp+0x59],cl
  41c2dd:	push   edi
  41c2de:	add    ecx,edi
  41c2e0:	(bad)  
  41c2e2:	sub    dl,BYTE PTR [edi]
  41c2e4:	inc    esp
  41c2e5:	es or  ebx,ecx
  41c2e8:	xchg   esi,eax
  41c2e9:	je     0x41c316
  41c2eb:	jbe    0x41c2b8
  41c2ed:	push   ebx
  41c2ee:	inc    eax
  41c2ef:	pop    es
  41c2f0:	js     0x41c349
  41c2f2:	scas   al,BYTE PTR es:[edi]
  41c2f3:	repnz into 
  41c2f5:	sbb    bh,dl
  41c2f7:	les    eax,FWORD PTR fs:[ebx-0x53422ffe]
  41c2fe:	sub    edx,DWORD PTR [ecx+0x7f]
  41c301:	fnstenv [edi+0x7d]
  41c304:	ja     0x41c2a3
  41c306:	enter  0x7956,0x30
  41c30a:	fs or  ebp,ebp
  41c30d:	fdiv   QWORD PTR [esi-0x80]
  41c310:	iret   
  41c311:	jae    0x41c35d
  41c313:	sub    al,0x67
  41c315:	xor    eax,DWORD PTR [edx-0x454c56da]
  41c31b:	ror    BYTE PTR [ebx],cl
  41c31d:	int    0xbb
  41c31f:	mov    edx,0x78f27e80
  41c324:	cwde   
  41c325:	fstp   QWORD PTR [ecx-0x7d068023]
  41c32b:	stos   BYTE PTR es:[edi],al
  41c32c:	cld    
  41c32d:	jl     0x41c32f
  41c32f:	pop    eax
  41c330:	(bad)  
  41c332:	fcom   DWORD PTR [edx+0x19]
  41c335:	(bad)  
  41c336:	stc    
  41c337:	sub    DWORD PTR [esi+edx*4],eax
  41c33a:	pushf  
  41c33b:	dec    esi
  41c33c:	cmc    
  41c33d:	xor    dl,BYTE PTR [esp+edx*2+0x20]
  41c341:	dec    edi
  41c342:	sub    BYTE PTR [ebp-0x52a7f682],ch
  41c348:	inc    edi
  41c349:	jns    0x41c358
  41c34b:	scas   eax,DWORD PTR es:[edi]
  41c34c:	xor    eax,0x7d2732e1
  41c351:	pushf  
  41c352:	push   esp
  41c353:	mov    ah,0xf2
  41c355:	leave  
  41c356:	mul    edx
  41c358:	fdiv   DWORD PTR [ebx+esi*4+0x52]
  41c35c:	arpl   WORD PTR [ebx+0x20],sp
  41c35f:	jmp    0xdb1c286d
  41c364:	jmp    0x41c321
  41c366:	aaa    
  41c367:	push   ebp
  41c368:	daa    
  41c369:	popf   
  41c36a:	loopne 0x41c357
  41c36c:	enter  0x43e5,0x78
  41c370:	mov    edi,0xa4e40b7a
  41c375:	mov    eax,0xce621429
  41c37a:	sub    edi,edi
  41c37c:	inc    ebx
  41c37d:	mov    bh,BYTE PTR [esi-0x39]
  41c380:	inc    edi
  41c381:	(bad)  
  41c382:	push   DWORD PTR [edi]
  41c384:	imul   ebp,DWORD PTR [edx-0x4ef8f8a4],0x7a
  41c38b:	(bad)  [esi]
  41c38d:	ins    DWORD PTR es:[edi],dx
  41c38e:	inc    edx
  41c38f:	push   edx
  41c390:	stc    
  41c391:	jo     0x41c3b3
  41c393:	lds    eax,FWORD PTR [ecx]
  41c395:	jmp    0xd72f:0xba25ea14
  41c39c:	(bad)  
  41c39e:	addr16 add eax,0xa0ac0312
  41c3a4:	imul   esp,DWORD PTR [ecx+0x27],0x9b82996
  41c3ab:	retf   
  41c3ac:	leave  
  41c3ad:	or     cl,BYTE PTR ds:0x609fd094
  41c3b3:	popf   
  41c3b4:	fld    st(0)
  41c3b6:	into   
  41c3b7:	lock aam 0x4c
  41c3ba:	dec    ecx
  41c3bb:	daa    
  41c3bc:	fcmovu st,st(3)
  41c3be:	clc    
  41c3bf:	cld    
  41c3c0:	out    0x1c,al
  41c3c2:	jb     0x41c3db
  41c3c4:	mov    ebp,0x9d14260e
  41c3c9:	jno    0x41c37e
  41c3cb:	stc    
  41c3cc:	mov    esi,0xb2262aac
  41c3d1:	and    DWORD PTR [eax+0xb],edi
  41c3d4:	push   eax
  41c3d5:	test   esi,0xabee850
  41c3db:	mov    ds:0xde4110c7,al
  41c3e0:	inc    esp
  41c3e1:	addr16 leave 
  41c3e3:	clc    
  41c3e4:	xor    eax,0x8863bcde
  41c3e9:	pop    esi
  41c3ea:	call   0x4ae2efb5
  41c3ef:	add    DWORD PTR [ebx],eax
  41c3f1:	mov    al,0x8c
  41c3f3:	mov    esi,esp
  41c3f5:	mov    ds:0xb902bd7,eax
  41c3fa:	es into 
  41c3fc:	mov    ebp,0x6eeb7944
  41c401:	idiv   DWORD PTR [ebx-0x58d46e76]
  41c407:	cmp    al,0x7
  41c409:	clc    
  41c40a:	add    bl,BYTE PTR [edi+0x1e]
  41c40d:	and    BYTE PTR [ecx-0x24beff8d],bh
  41c413:	jl     0x41c3b6
  41c415:	adc    al,0xc8
  41c417:	mov    ah,0x1b
  41c419:	dec    ebx
  41c41a:	dec    eax
  41c41b:	loopne 0x41c3d8
  41c41d:	and    bh,BYTE PTR [ebx+0x72110fa9]
  41c423:	popa   
  41c424:	pop    eax
  41c425:	rcr    esp,cl
  41c427:	mov    fs,esi
  41c429:	popf   
  41c42a:	sti    
  41c42b:	retf   
  41c42c:	inc    edx
  41c42d:	pop    ebp
  41c42e:	xor    DWORD PTR [eax+0x1bbc6603],ebx
  41c434:	jecxz  0x41c4b4
  41c436:	xlat   BYTE PTR ds:[ebx]
  41c437:	std    
  41c438:	xor    cl,BYTE PTR [eax+0x3e4be728]
  41c43e:	dec    ebx
  41c43f:	sbb    al,BYTE PTR [esi]
  41c441:	inc    eax
  41c442:	daa    
  41c443:	inc    eax
  41c444:	(bad)  
  41c445:	mov    bh,BYTE PTR [edi+0xb52de7d]
  41c44b:	inc    ecx
  41c44c:	rol    BYTE PTR [ebp+0x51],cl
  41c44f:	adc    DWORD PTR [eax],ecx
  41c451:	jbe    0x41c450
  41c453:	shl    DWORD PTR [edi-0x33],cl
  41c456:	fisttp DWORD PTR [edi+edi*1+0x5a7a1d2c]
  41c45d:	fcomp  DWORD PTR [edi]
  41c45f:	nop
  41c460:	arpl   WORD PTR [ebp-0x32021492],bp
  41c466:	gs ret 
  41c468:	cwde   
  41c469:	pusha  
  41c46a:	inc    eax
  41c46b:	pop    es
  41c46c:	xchg   ebp,eax
  41c46d:	mov    eax,0x323e9fef
  41c472:	add    al,0xc7
  41c474:	(bad)  
  41c475:	dec    esp
  41c476:	jns    0x41c442
  41c478:	jg     0x41c46c
  41c47a:	inc    esi
  41c47b:	rcl    DWORD PTR ds:0x6779120d,cl
  41c481:	(bad)  ds:0x76472ccd
  41c487:	jmp    0xee20:0x5785d2c2
  41c48e:	imul   ebx,ebp,0xdfd54765
  41c494:	xchg   edi,eax
  41c495:	jae    0x41c457
  41c497:	jp     0x41c422
  41c499:	mov    ecx,0x51734b85
  41c49e:	cwde   
  41c49f:	test   al,0xbe
  41c4a1:	add    al,0xce
  41c4a3:	inc    cx
  41c4a5:	test   al,0xf9
  41c4a7:	test   DWORD PTR [esi],0xe12ddad5
  41c4ad:	mov    ds:0x2e3e57cc,al
  41c4b2:	jae    0x41c4d3
  41c4b4:	xor    eax,0x1c75c507
  41c4b9:	mov    dh,bl
  41c4bb:	add    edi,DWORD PTR [ecx+ebp*2+0x716b4ce5]
  41c4c2:	call   0x862d:0xe51d1f5c
  41c4c9:	iret   
  41c4ca:	cmp    eax,0x85cef0a1
  41c4cf:	in     eax,dx
  41c4d0:	jle    0x41c4b2
  41c4d2:	mov    ecx,0xf8c73771
  41c4d7:	out    dx,eax
  41c4d8:	mov    ah,0xcd
  41c4da:	pusha  
  41c4db:	imul   edx,DWORD PTR [eax],0xefc4a6cd
  41c4e1:	jl     0x41c4cc
  41c4e3:	adc    eax,DWORD PTR [eax]
  41c4e5:	sub    dh,dh
  41c4e7:	adc    ecx,DWORD PTR [esi+0x7a25b389]
  41c4ed:	adc    cl,bh
  41c4ef:	icebp  
  41c4f0:	stc    
  41c4f1:	xlat   BYTE PTR ds:[ebx]
  41c4f2:	jo     0x41c504
  41c4f4:	xchg   esp,eax
  41c4f5:	in     eax,0x5
  41c4f7:	in     eax,0x8f
  41c4f9:	mov    dl,0x13
  41c4fb:	cs out 0xfa,eax
  41c4fe:	sbb    dl,dl
  41c500:	xchg   esi,eax
  41c501:	push   ds
  41c502:	xor    ebp,esi
  41c504:	add    bh,BYTE PTR [esi]
  41c506:	pop    esi
  41c507:	loopne 0x41c56c
  41c509:	pop    ebx
  41c50a:	out    0xd9,eax
  41c50c:	adc    DWORD PTR [edi-0x34],0xcbcc7423
  41c513:	xchg   DWORD PTR [eax+0x459ab8d7],ebx
  41c519:	jl     0x9a05a957
  41c51f:	aam    0x7
  41c521:	and    BYTE PTR [edi-0x32137add],ah
  41c527:	and    DWORD PTR [edi+0x6e588fd3],esi
  41c52d:	adc    eax,0x5030ef9e
  41c532:	xchg   edx,eax
  41c533:	mov    al,ds:0x23137dce
  41c538:	push   esi
  41c539:	mov    BYTE PTR [edi],cl
  41c53b:	mov    esi,0xc1f1026e
  41c540:	xor    al,0xab
  41c542:	test   al,0x6e
  41c544:	adc    eax,0x25
  41c547:	imul   edx,eax,0xffffff98
  41c54a:	sbb    ah,BYTE PTR [ebx]
  41c54c:	add    ch,BYTE PTR [edx]
  41c54e:	outs   dx,BYTE PTR ds:[esi]
  41c54f:	sbb    DWORD PTR [esi],ecx
  41c551:	mov    bl,0x82
  41c553:	sbb    BYTE PTR [ebp-0x4e],dl
  41c556:	stos   BYTE PTR es:[edi],al
  41c557:	cwde   
  41c558:	adc    al,0x55
  41c55a:	adc    DWORD PTR [ebx],esi
  41c55c:	ins    BYTE PTR es:[edi],dx
  41c55d:	add    DWORD PTR [ebx],ecx
  41c55f:	dec    ebx
  41c560:	outs   dx,BYTE PTR ds:[esi]
  41c561:	jne    0x41c58a
  41c563:	adc    eax,DWORD PTR [ecx-0x36]
  41c566:	jae    0x41c521
  41c568:	inc    eax
  41c569:	dec    esp
  41c56a:	ins    BYTE PTR es:[edi],dx
  41c56b:	loop   0x41c51f
  41c56d:	dec    edx
  41c56e:	aad    0x86
  41c570:	jmp    0x41c557
  41c572:	adc    DWORD PTR gs:[ebp+0x6],edi
  41c576:	into   
  41c577:	add    BYTE PTR [edx-0x47],al
  41c57a:	sbb    ecx,edx
  41c57c:	fst    DWORD PTR [edi]
  41c57e:	fst    DWORD PTR [ebp+0x58]
  41c581:	fimul  DWORD PTR [ebp-0x50e23e4c]
  41c587:	(bad)  [edi-0x5a]
  41c58a:	xor    eax,0xd6a7b1f0
  41c58f:	jg     0x41c5cb
  41c591:	ins    DWORD PTR es:[edi],dx
  41c592:	and    ah,dh
  41c594:	add    al,BYTE PTR [ecx+esi*2-0x3ad5f440]
  41c59b:	adc    eax,0x97e9de6f
  41c5a0:	mov    ch,BYTE PTR [esi+0x1589019]
  41c5a6:	or     BYTE PTR [ebx+0xc819b4],0x8
  41c5ad:	test   DWORD PTR [ebp-0x37370767],0xe41f32eb
  41c5b7:	mov    WORD PTR [ebp-0x6d],es
  41c5ba:	lock clc 
  41c5bc:	jns    0x41c583
  41c5be:	aam    0xca
  41c5c0:	xor    al,0x31
  41c5c2:	inc    esp
  41c5c3:	rcl    BYTE PTR [esi-0x3c],1
  41c5c6:	ds ins BYTE PTR es:[edi],dx
  41c5c8:	idiv   BYTE PTR [edi-0x62]
  41c5cb:	loop   0x41c5d5
  41c5cd:	sbb    al,0x4a
  41c5cf:	jp     0x41c63d
  41c5d1:	in     al,dx
  41c5d2:	leave  
  41c5d3:	pop    ebx
  41c5d4:	outs   dx,BYTE PTR ds:[esi]
  41c5d5:	cdq    
  41c5d6:	aad    0x83
  41c5d8:	ror    ecx,1
  41c5da:	cmp    eax,DWORD PTR [ecx+0x3e3c4a5f]
  41c5e0:	add    dl,ah
  41c5e2:	je     0x41c62a
  41c5e4:	popa   
  41c5e5:	add    DWORD PTR [ebp-0x7d927434],edx
  41c5eb:	sti    
  41c5ec:	fs mov bh,0x89
  41c5ef:	and    bh,BYTE PTR cs:[edx-0x53]
  41c5f3:	mov    al,0xc1
  41c5f5:	jae    0x41c5b6
  41c5f7:	mov    edx,0x9d62a726
  41c5fc:	and    BYTE PTR [edx-0x33],bh
  41c5ff:	mov    ebp,ecx
  41c601:	cmp    edi,DWORD PTR [ecx]
  41c603:	sub    DWORD PTR [ebp+eiz*1-0x75],esp
  41c607:	or     DWORD PTR [eax],esp
  41c609:	push   ss
  41c60a:	add    al,0x45
  41c60c:	or     al,0xa9
  41c60e:	jg     0x41c628
  41c610:	jne    0x41c68c
  41c612:	pop    edi
  41c613:	adc    ebx,DWORD PTR [edx+eiz*4+0x28]
  41c617:	or     al,0x3e
  41c619:	xchg   edx,eax
  41c61a:	sbb    BYTE PTR [esi+0x7c],0xa
  41c61e:	inc    esp
  41c61f:	stc    
  41c620:	mov    ah,0x7a
  41c622:	loopne 0x41c682
  41c624:	bound  esp,QWORD PTR [ecx-0xdc7b93]
  41c62a:	jae    0x41c5f1
  41c62c:	push   0xffffffef
  41c62e:	ss stos BYTE PTR es:[edi],al
  41c630:	leave  
  41c631:	xchg   ebp,eax
  41c632:	pop    ebp
  41c633:	cmp    al,0x14
  41c635:	adc    ecx,DWORD PTR [edi+0x631996b3]
  41c63b:	mov    bh,0xf3
  41c63d:	jno    0x41c5c3
  41c63f:	and    edi,DWORD PTR [ebp-0x48]
  41c642:	sbb    esp,DWORD PTR [edx+0x35cfe7a3]
  41c648:	jns    0x41c643
  41c64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c64b:	inc    esi
  41c64c:	fs xor al,0xd5
  41c64f:	imul   esp,DWORD PTR [esi+0x2f],0xffffffee
  41c653:	addr16 dec ebx
  41c655:	std    
  41c656:	adc    BYTE PTR [edx+0x7],0xc9
  41c65a:	cmp    al,0x70
  41c65c:	cli    
  41c65d:	mov    bh,0xbc
  41c65f:	ins    BYTE PTR es:[edi],dx
  41c660:	shl    DWORD PTR [edx+0x70],0x50
  41c664:	adc    BYTE PTR [eax-0x2828a12d],bl
  41c66a:	mov    DWORD PTR [esi-0x4f41fa66],ebp
  41c670:	and    bh,BYTE PTR [esi-0x5f]
  41c673:	sub    eax,0xc26d473f
  41c678:	test   esp,0xe58f95b2
  41c67e:	test   al,0x85
  41c680:	mov    cs,WORD PTR [edi]
  41c682:	mov    eax,0x97b1dae8
  41c687:	jnp    0x41c662
  41c689:	dec    esi
  41c68a:	imul   edi,DWORD PTR [ebx+edx*1],0xdee9555
  41c691:	inc    esi
  41c692:	or     dh,BYTE PTR [esi+0x36]
  41c695:	enter  0xdc77,0x80
  41c699:	repz jl 0x41c676
  41c69c:	sbb    ebp,DWORD PTR [ebx]
  41c69e:	adc    al,0xea
  41c6a0:	int3   
  41c6a1:	(bad)
  41c6a4:	sti    
  41c6a5:	(bad)  
  41c6a6:	jmp    0x68ea:0x7aa388d9
  41c6ad:	ins    BYTE PTR es:[edi],dx
  41c6ae:	sub    DWORD PTR ds:0x9e5c75b7,ebp
  41c6b4:	test   BYTE PTR [eax],dl
  41c6b6:	ret    0x1ad9
  41c6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ba:	stos   DWORD PTR es:[edi],eax
  41c6bb:	add    ebp,DWORD PTR ds:0x678ec883
  41c6c1:	xor    al,0xd2
  41c6c3:	rcr    DWORD PTR ds:0xcc05d9c8,0xe7
  41c6ca:	cld    
  41c6cb:	jbe    0x41c665
  41c6cd:	adc    DWORD PTR [ebx+0x76],edi
  41c6d0:	dec    ebx
  41c6d1:	imul   eax,DWORD PTR [edx+0x483fc49c],0x19e37f0d
  41c6db:	sub    BYTE PTR [esi],dh
  41c6dd:	jp     0x41c725
  41c6df:	push   ss
  41c6e0:	mov    ds:0x3a5eb17a,al
  41c6e5:	xlat   BYTE PTR ds:[ebx]
  41c6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6e7:	pop    eax
  41c6e8:	xor    bl,BYTE PTR [eax]
  41c6ea:	pop    ebp
  41c6eb:	aaa    
  41c6ec:	mov    esp,0x27a04e5e
  41c6f1:	lahf   
  41c6f2:	mov    esi,0x3f2c20e4
  41c6f7:	enter  0xadbf,0xe1
  41c6fb:	pop    eax
  41c6fc:	push   ebx
  41c6fd:	cmp    BYTE PTR [ecx+eiz*1-0x78],bl
  41c701:	or     dh,BYTE PTR [ecx]
  41c703:	inc    ecx
  41c704:	cmp    esp,DWORD PTR [ebp+ebp*4+0x25]
  41c708:	add    bh,al
  41c70a:	sub    ecx,DWORD PTR [ebx+0x56]
  41c70d:	inc    esp
  41c70e:	jnp    0x41c766
  41c710:	or     ecx,0xe79d96f7
  41c716:	sub    esi,eax
  41c718:	out    0x87,al
  41c71a:	leave  
  41c71b:	loopne 0x41c75b
  41c71d:	pop    edi
  41c71e:	es xchg esi,eax
  41c720:	fnstcw WORD PTR [esi+0x773548]
  41c726:	nop
  41c727:	jmp    0x326d:0x1ac7c7fb
  41c72e:	push   edi
  41c72f:	mov    cl,0x54
  41c731:	sub    eax,0xb9314b96
  41c736:	ins    DWORD PTR es:[edi],dx
  41c737:	sti    
  41c738:	out    dx,al
  41c739:	add    eax,0x5ca9ae4
  41c73e:	sbb    eax,0x7176b520
  41c743:	rol    ecx,cl
  41c745:	mov    ecx,0x978ee08e
  41c74a:	push   eax
  41c74b:	adc    al,0x35
  41c74d:	xor    BYTE PTR [edi+esi*2],0xa7
  41c751:	into   
  41c752:	std    
  41c753:	mov    ebx,0x1fe73124
  41c758:	cli    
  41c759:	mov    eax,DWORD PTR [eax+0x265f59b2]
  41c75f:	pop    es
  41c760:	in     eax,0xc9
  41c762:	bound  edx,QWORD PTR [edx-0x15f12716]
  41c768:	jmp    0x41c70d
  41c76a:	ror    DWORD PTR [esi],cl
  41c76c:	push   ebx
  41c76d:	cwde   
  41c76e:	dec    eax
  41c76f:	xchg   DWORD PTR [ecx+eiz*1+0x68],ebx
  41c773:	(bad)
  41c776:	jle    0x41c75a
  41c778:	icebp  
  41c779:	sub    eax,0x517ef7e7
  41c77e:	push   0xffffff96
  41c780:	mov    dh,BYTE PTR [eax+0x28]
  41c783:	(bad)  
  41c784:	push   ss
  41c785:	iret   
  41c786:	int    0x16
  41c788:	(bad)  
  41c78a:	out    0xd3,al
  41c78c:	mov    ds:0xf433bb8e,al
  41c791:	fistp  WORD PTR [edx+esi*1-0x36]
  41c795:	jne    0x41c79a
  41c797:	and    DWORD PTR [edx-0x2],ebp
  41c79a:	hlt    
  41c79b:	popf   
  41c79c:	mov    esp,0x7af9d4cb
  41c7a1:	loopne 0x41c776
  41c7a3:	clc    
  41c7a4:	sti    
  41c7a5:	cmp    BYTE PTR [ecx+eiz*8+0x62db7eee],0x4a
  41c7ad:	cs sub esi,ebp
  41c7b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7b1:	mov    ds:0xb7cc40f7,al
  41c7b6:	ret    0x2768
  41c7b9:	push   edi
  41c7ba:	pop    es
  41c7bb:	xor    edx,esp
  41c7bd:	dec    ebx
  41c7be:	rcl    ebx,cl
  41c7c0:	jns    0x41c760
  41c7c2:	sbb    BYTE PTR [eax],ah
  41c7c4:	mov    dh,0x6c
  41c7c6:	scas   eax,DWORD PTR es:[edi]
  41c7c7:	ret    0x6778
  41c7ca:	mov    ?,WORD PTR [ecx]
  41c7cc:	clc    
  41c7cd:	jl     0x41c7a7
  41c7cf:	pop    DWORD PTR ds:0xc673198b
  41c7d5:	push   cs
  41c7d6:	ror    DWORD PTR [edi],1
  41c7d8:	in     eax,dx
  41c7d9:	fimul  WORD PTR [edx-0x2edafde1]
  41c7df:	icebp  
  41c7e0:	aaa    
  41c7e1:	or     DWORD PTR [edx+0x54],esi
  41c7e4:	sbb    al,0xfa
  41c7e6:	add    ebp,DWORD PTR [ebp-0x28]
  41c7e9:	mul    BYTE PTR ds:0xf930b08c
  41c7ef:	xchg   BYTE PTR [ebx+eax*4+0x4d900f27],dh
  41c7f6:	mov    bl,0xcf
  41c7f8:	(bad)  
  41c7f9:	rcl    DWORD PTR [esi],cl
  41c7fb:	or     eax,0x619be1bd
  41c800:	std    
  41c801:	mov    ecx,0xfe4032cd
  41c806:	cmp    DWORD PTR [ebx],ebp
  41c808:	adc    al,0x4
  41c80a:	inc    eax
  41c80b:	je     0x41c82f
  41c80d:	cmp    esi,ebp
  41c80f:	and    BYTE PTR [ebp+0x192679d4],bh
  41c815:	mov    dh,0x24
  41c817:	dec    esi
  41c818:	xor    ecx,DWORD PTR [ecx-0x7e]
  41c81b:	mov    cl,0xe0
  41c81d:	mov    DWORD PTR [eax+0x1c4c6814],0xd5609a6a
  41c827:	fcmovnb st,st(4)
  41c829:	lods   eax,DWORD PTR ds:[esi]
  41c82a:	cmp    DWORD PTR ds:0x62ffdc07,0x84587778
  41c834:	add    cl,BYTE PTR [edx-0x42]
  41c837:	jmp    0xa078:0x964191e6
  41c83e:	mov    ds:0xdb56751f,eax
  41c843:	not    ch
  41c845:	mov    bh,0xc3
  41c847:	addr16 sbb eax,0xf4910ac2
  41c84d:	mov    esi,0xea844940
  41c852:	clc    
  41c853:	fiadd  WORD PTR [edx+eax*4+0x26]
  41c857:	ret    0x774b
  41c85a:	push   0x7682d3ed
  41c85f:	in     eax,dx
  41c860:	(bad)  
  41c861:	pop    ecx
  41c862:	inc    esi
  41c863:	jg     0x41c854
  41c865:	aam    0x52
  41c867:	jle    0x41c823
  41c869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86a:	rol    esp,0xc8
  41c86d:	sub    ah,BYTE PTR [edi-0x7b]
  41c870:	scas   eax,DWORD PTR es:[edi]
  41c871:	mov    esp,0x55e44e39
  41c876:	mov    esp,0x4bb37bf3
  41c87b:	and    eax,0xa08c8b82
  41c880:	or     BYTE PTR [edi-0x32],ah
  41c883:	mov    edi,0xf2c4f1ea
  41c888:	or     edx,DWORD PTR [esi-0x13]
  41c88b:	shl    BYTE PTR [edx-0x256df7ab],cl
  41c891:	xchg   esp,eax
  41c892:	and    al,0xb4
  41c894:	lds    ebx,FWORD PTR [eax+ebx*2+0x71]
  41c898:	xor    ecx,DWORD PTR [eax+0x3f]
  41c89b:	add    dl,dl
  41c89d:	ss jge 0x41c8aa
  41c8a0:	push   es
  41c8a1:	and    bh,dh
  41c8a3:	jbe    0x41c90c
  41c8a5:	clc    
  41c8a6:	cmc    
  41c8a7:	enter  0x12c0,0x73
  41c8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ac:	dec    ecx
  41c8ad:	inc    esi
  41c8ae:	arpl   WORD PTR [ecx-0xfa8cd4c],cx
  41c8b4:	cli    
  41c8b5:	sub    ah,al
  41c8b7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c8b9:	gs pop ecx
  41c8bb:	stos   BYTE PTR es:[edi],al
  41c8bc:	add    eax,0xb41dc329
  41c8c1:	jecxz  0x41c85f
  41c8c3:	les    esi,FWORD PTR [ebp+0x58c10397]
  41c8c9:	add    eax,0x85fda6d3
  41c8ce:	dec    ebx
  41c8cf:	xchg   ecx,eax
  41c8d0:	dec    ebp
  41c8d1:	pusha  
  41c8d2:	mov    eax,0xa7fb720e
  41c8d7:	xchg   edx,eax
  41c8d8:	je     0x41c914
  41c8da:	mov    al,0x2f
  41c8dc:	out    dx,al
  41c8dd:	ss sti 
  41c8df:	jmp    0x1313:0x71457c0
  41c8e6:	jle    0x41c943
  41c8e8:	and    al,0xd2
  41c8ea:	xlat   BYTE PTR ds:[ebx]
  41c8eb:	cld    
  41c8ec:	push   esi
  41c8ed:	mov    dl,0xfb
  41c8ef:	jnp    0x41c8ec
  41c8f1:	retf   
  41c8f2:	cmp    BYTE PTR [ecx],ah
  41c8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f6:	jp     0x41c88a
  41c8f8:	dec    eax
  41c8f9:	in     eax,dx
  41c8fa:	xlat   BYTE PTR ds:[ebx]
  41c8fb:	cld    
  41c8fc:	int3   
  41c8fd:	push   ss
  41c8fe:	js     0x41c91b
  41c900:	cmc    
  41c901:	mov    al,ds:0x9e87943f
  41c906:	(bad)  
  41c907:	in     eax,dx
  41c908:	mov    bh,0x96
  41c90a:	push   esp
  41c90b:	outs   dx,DWORD PTR ds:[esi]
  41c90c:	fisub  DWORD PTR [esi+edi*4-0x7a]
  41c910:	push   ss
  41c911:	push   0x8efc4427
  41c916:	fcomp  DWORD PTR [edi]
  41c918:	(bad)  
  41c919:	pop    edi
  41c91a:	pop    esi
  41c91b:	jae    0x41c978
  41c91d:	arpl   bp,dx
  41c91f:	ror    DWORD PTR [edx+ecx*4],0x33
  41c923:	and    BYTE PTR [edx+0x1bd956da],cl
  41c929:	fldlg2 
  41c92b:	xor    eax,0x199dc407
  41c930:	mov    al,ds:0x56b3b5fc
  41c935:	push   ecx
  41c936:	dec    edx
  41c937:	lds    esi,FWORD PTR [ecx+edx*1+0x7a]
  41c93b:	sub    BYTE PTR [edi-0x273e4ada],dl
  41c941:	test   al,0xd0
  41c943:	mov    ds:0xa24ca2e6,al
  41c948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c949:	sbb    esi,DWORD PTR [ecx-0x6a]
  41c94c:	fsub   DWORD PTR [eax]
  41c94e:	cmp    al,0x3b
  41c950:	pop    ss
  41c951:	test   eax,0x88124bfc
  41c956:	pushf  
  41c957:	xor    DWORD PTR [ebp-0x36c5d94b],esi
  41c95d:	push   edx
  41c95e:	iret   
  41c95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c960:	dec    ebp
  41c961:	ins    DWORD PTR es:[edi],dx
  41c962:	arpl   WORD PTR [eax],cx
  41c964:	(bad)  
  41c965:	shl    BYTE PTR [ebx],1
  41c967:	popf   
  41c968:	js     0x41c8ed
  41c96a:	leave  
  41c96b:	xor    al,0xb5
  41c96d:	call   eax
  41c96f:	mov    ah,0x72
  41c971:	xchg   edx,eax
  41c972:	arpl   di,bp
  41c974:	jnp    0x41c97b
  41c976:	outs   dx,DWORD PTR ds:[esi]
  41c977:	ret    0x5f94
  41c97a:	inc    esi
  41c97b:	and    BYTE PTR [eax-0x28],0xfd
  41c97f:	cmp    al,0xd2
  41c981:	mov    esp,0x95eaf15d
  41c986:	mov    ss,WORD PTR [ebx+0x775e0d8]
  41c98c:	call   0xf0ff:0xf640882b
  41c993:	scas   al,BYTE PTR es:[edi]
  41c994:	mov    ecx,0x353b45c2
  41c999:	stc    
  41c99a:	jecxz  0x41c962
  41c99c:	xchg   edx,eax
  41c99d:	scas   al,BYTE PTR es:[edi]
  41c99e:	outs   dx,BYTE PTR ds:[esi]
  41c99f:	jecxz  0x41c926
  41c9a1:	retf   
  41c9a2:	inc    ebx
  41c9a3:	xchg   DWORD PTR [ecx+0x10],ebp
  41c9a6:	push   ebp
  41c9a7:	mov    ah,0x4
  41c9a9:	stc    
  41c9aa:	ret    
  41c9ab:	iret   
  41c9ac:	xchg   ebp,eax
  41c9ad:	inc    edx
  41c9ae:	imul   ecx,DWORD PTR ds:0xd8e96be0,0x5fdb591d
  41c9b8:	call   0xbf7b:0x8e72
  41c9be:	rcl    edx,cl
  41c9c0:	cmp    ebp,esi
  41c9c2:	push   ebp
  41c9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c4:	add    DWORD PTR [ecx+0x5296e4e0],edx
  41c9ca:	push   ebx
  41c9cb:	ins    BYTE PTR es:[edi],dx
  41c9cc:	jnp    0x41c967
  41c9ce:	scas   eax,DWORD PTR es:[edi]
  41c9cf:	icebp  
  41c9d0:	add    DWORD PTR ds:[ecx+0xe0a1127],esi
  41c9d7:	stos   BYTE PTR es:[edi],al
  41c9d8:	into   
  41c9d9:	fldenv [ebp+0x1ea4846b]
  41c9df:	or     BYTE PTR [ecx-0x25],bl
  41c9e2:	push   esi
  41c9e3:	fimul  WORD PTR [ecx+0x24]
  41c9e6:	mov    BYTE PTR [ecx+0x5ca07b7b],bh
  41c9ec:	add    bl,BYTE PTR [esi]
  41c9ee:	out    dx,eax
  41c9ef:	ror    DWORD PTR [eax],cl
  41c9f1:	sub    DWORD PTR [ebp-0x6167f516],ebx
  41c9f7:	retf   0xe041
  41c9fa:	pop    ecx
  41c9fb:	fisub  WORD PTR [esi-0x5b0c48fc]
  41ca01:	adc    ebx,ebp
  41ca03:	ja     0x41ca15
  41ca05:	sub    eax,0xf003eb6e
  41ca0a:	pop    ecx
  41ca0b:	xor    al,0x76
  41ca0d:	push   0xffffffea
  41ca0f:	add    eax,0xf37a4adb
  41ca14:	add    BYTE PTR [eax+eiz*8+0x2d],ah
  41ca18:	pop    esp
  41ca19:	jge    0x41ca78
  41ca1b:	les    edi,FWORD PTR [esi-0x7474e552]
  41ca21:	repnz mov edx,0x33c3ad3
  41ca27:	pop    ebx
  41ca28:	ins    DWORD PTR es:[edi],dx
  41ca29:	sbb    DWORD PTR [esi-0x3bdbf330],ebp
  41ca2f:	pop    ebp
  41ca30:	push   ecx
  41ca31:	pop    ebx
  41ca32:	lods   eax,DWORD PTR ds:[esi]
  41ca33:	mov    ah,BYTE PTR [ebp+0x158029ba]
  41ca39:	mov    ah,BYTE PTR [esi+0x648da6b]
  41ca3f:	mov    ecx,0x6539f4e3
  41ca44:	jmp    0xdf16775d
  41ca49:	xor    eax,0xa039da7
  41ca4e:	outs   dx,DWORD PTR ds:[si]
  41ca50:	icebp  
  41ca51:	(bad)  
  41ca52:	sub    DWORD PTR [esi+0x6cba80d8],ebp
  41ca58:	or     bl,BYTE PTR [esi-0x2c]
  41ca5b:	in     al,dx
  41ca5c:	xor    BYTE PTR [edx-0x8],0x18
  41ca60:	ja     0x41cabd
  41ca62:	xor    DWORD PTR [ebp+0xabae3d1],esp
  41ca68:	out    0xae,eax
  41ca6a:	shl    DWORD PTR [eax],0x74
  41ca6d:	loopne 0x41ca08
  41ca6f:	add    edx,eax
  41ca71:	retf   
  41ca72:	(bad)  
  41ca73:	push   eax
  41ca74:	adc    DWORD PTR [eax],0x9aa6ff52
  41ca7a:	loop   0x41cae1
  41ca7c:	dec    edx
  41ca7d:	mov    WORD PTR [ecx],gs
  41ca7f:	cdq    
  41ca80:	push   cs
  41ca81:	fcmovb st,st(7)
  41ca83:	loop   0x41ca8d
  41ca85:	and    al,0xe2
  41ca87:	mov    cl,0xc5
  41ca89:	and    DWORD PTR [ebx],esp
  41ca8b:	or     DWORD PTR [edx-0x28],0x46
  41ca8f:	inc    edx
  41ca90:	rep stos DWORD PTR es:[edi],eax
  41ca92:	imul   edx,DWORD PTR [eax],0x4d79a92c
  41ca98:	retf   
  41ca99:	xor    DWORD PTR [ecx],eax
  41ca9b:	dec    eax
  41ca9c:	inc    esp
  41ca9d:	push   esi
  41ca9e:	out    dx,eax
  41ca9f:	mov    eax,0xdbc9f731
  41caa4:	ret    0x436e
  41caa7:	cli    
  41caa8:	sahf   
  41caa9:	gs cmp al,0xf1
  41caac:	or     eax,0xe9cd96dd
  41cab1:	dec    ebx
  41cab2:	jae    0x41cb04
  41cab4:	add    DWORD PTR [esi+0x5c],0xff44b215
  41cabb:	mov    eax,0x643e9b27
  41cac0:	mov    ch,BYTE PTR [eax+0x1c]
  41cac3:	jge    0x41caa9
  41cac5:	enter  0x42f4,0x60
  41cac9:	and    dl,dl
  41cacb:	xchg   ecx,ebp
  41cacd:	xor    ah,0x33
  41cad0:	cmp    BYTE PTR [esi],bh
  41cad2:	jg     0x41cad6
  41cad4:	xchg   ebx,eax
  41cad5:	ret    0x6db8
  41cad8:	scas   eax,DWORD PTR es:[edi]
  41cad9:	cli    
  41cada:	sub    eax,0x7aea6933
  41cadf:	add    eax,0x2ae68977
  41cae4:	inc    edi
  41cae5:	push   edx
  41cae6:	pop    ebp
  41cae7:	xor    cl,BYTE PTR [esi-0x4b]
  41caea:	cwde   
  41caeb:	in     eax,0x45
  41caed:	fdivr  QWORD PTR [edx+0x63]
  41caf0:	dec    eax
  41caf1:	aad    0x3b
  41caf3:	xchg   ebx,eax
  41caf4:	popf   
  41caf5:	test   eax,0xc26fa32d
  41cafa:	sub    eax,0x82d15d6
  41caff:	mov    fs,WORD PTR [eax*2+0x32a2949c]
  41cb06:	mov    WORD PTR [ebx+0x13],ss
  41cb09:	adc    bl,BYTE PTR [edx]
  41cb0b:	repnz (bad) 
  41cb0d:	fisub  DWORD PTR [edx+0x26fc6dc]
  41cb13:	test   BYTE PTR [edi-0x62],0x19
  41cb17:	lock mov ecx,0x24ac58fc
  41cb1d:	push   esp
  41cb1e:	jbe    0x41cb9e
  41cb20:	ror    DWORD PTR [edx-0x25],cl
  41cb23:	pop    eax
  41cb24:	xchg   ecx,eax
  41cb25:	scas   eax,DWORD PTR es:[edi]
  41cb26:	mov    ch,0xbe
  41cb28:	loop   0x41cb55
  41cb2a:	and    edx,DWORD PTR [ecx-0x6278397f]
  41cb30:	retf   0x5d75
  41cb33:	pop    esp
  41cb34:	data16 das 
  41cb36:	aad    0x7d
  41cb38:	ja     0x41cb55
  41cb3a:	jg     0x41cb6f
  41cb3c:	cli    
  41cb3d:	stc    
  41cb3e:	adc    ebp,DWORD PTR ds:0x2351226f
  41cb44:	mov    ecx,0x38f16457
  41cb49:	jb     0x41cbba
  41cb4b:	cs mov edi,0xa42f89e0
  41cb51:	jmp    0x5710e528
  41cb56:	int3   
  41cb57:	mov    dl,0xbe
  41cb59:	pop    ebp
  41cb5a:	dec    ebx
  41cb5b:	fcmovnb st,st(3)
  41cb5d:	mov    es,WORD PTR [edi]
  41cb5f:	mov    al,bh
  41cb61:	pop    ss
  41cb62:	imul   ebx,DWORD PTR [ecx],0xffffffc1
  41cb65:	popf   
  41cb66:	hlt    
  41cb67:	jno    0x41cbcd
  41cb69:	cmp    al,0xf6
  41cb6b:	mov    cl,dl
  41cb6d:	mul    al
  41cb6f:	dec    esi
  41cb70:	and    ebp,esp
  41cb72:	add    edx,DWORD PTR [edx-0x66]
  41cb75:	cwde   
  41cb76:	idiv   DWORD PTR [edx+eax*8-0x7816bba6]
  41cb7d:	and    al,0x54
  41cb7f:	sbb    esp,DWORD PTR [ecx+0x3]
  41cb82:	push   esp
  41cb83:	clc    
  41cb84:	cs fs call 0xb0a3ba16
  41cb8b:	adc    dl,BYTE PTR [edx-0x44]
  41cb8e:	(bad)  
  41cb8f:	stos   BYTE PTR es:[edi],al
  41cb90:	xor    eax,edx
  41cb92:	lock cli 
  41cb94:	inc    ebx
  41cb95:	cs push eax
  41cb97:	mov    dl,0x8d
  41cb99:	(bad)  
  41cb9a:	cmp    eax,DWORD PTR [ebp+0x74a642c6]
  41cba0:	xor    al,0x28
  41cba2:	and    eax,0x7f493419
  41cba7:	push   ebp
  41cba8:	retf   0xa252
  41cbab:	and    ah,BYTE PTR [edi]
  41cbad:	and    BYTE PTR [edi+0x5a72b487],bl
  41cbb3:	adc    DWORD PTR [edi],esp
  41cbb5:	mov    bl,0xe8
  41cbb7:	mov    esp,0xb3170163
  41cbbc:	leave  
  41cbbd:	mov    dl,0xf9
  41cbbf:	stos   DWORD PTR es:[edi],eax
  41cbc0:	dec    ecx
  41cbc1:	daa    
  41cbc2:	in     al,0x6
  41cbc4:	jge    0x41cbf3
  41cbc6:	hlt    
  41cbc7:	mov    ebx,ds
  41cbc9:	out    0x75,eax
  41cbcb:	cwde   
  41cbcc:	jmp    0xed79561
  41cbd1:	jno    0x41cb71
  41cbd3:	loopne 0x41cc26
  41cbd5:	xor    eax,0xcaeb7960
  41cbda:	stos   BYTE PTR es:[edi],al
  41cbdb:	push   eax
  41cbdc:	mov    dl,BYTE PTR [esi+0x49]
  41cbdf:	jmp    0x41cc30
  41cbe1:	jne    0x41cc08
  41cbe3:	xor    DWORD PTR [ebx+0x17eb3e71],esp
  41cbe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbea:	popf   
  41cbeb:	add    bh,bh
  41cbed:	mov    esi,DWORD PTR [ecx+0x3d688a2b]
  41cbf3:	jne    0x41cb84
  41cbf5:	scas   eax,DWORD PTR es:[edi]
  41cbf6:	sti    
  41cbf7:	into   
  41cbf8:	add    eax,0xadb676cf
  41cbfd:	and    BYTE PTR [ecx+0x1e],bh
  41cc00:	out    0x63,eax
  41cc02:	cmp    cl,bl
  41cc04:	jnp    0x41cbbd
  41cc06:	or     BYTE PTR [esi],ch
  41cc08:	cmp    BYTE PTR [eax+0x68087cc],dh
  41cc0e:	xlat   BYTE PTR ds:[ebx]
  41cc0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc10:	(bad)  
  41cc11:	mov    esi,0xc3f7b4f1
  41cc16:	cmp    esp,DWORD PTR [ecx+0x66]
  41cc19:	jo     0x41cc7f
  41cc1b:	neg    BYTE PTR [ecx-0x5811503f]
  41cc21:	add    al,0xee
  41cc23:	adc    eax,0x7bbdb5bc
  41cc28:	mov    ah,0x62
  41cc2a:	dec    ebx
  41cc2b:	stos   BYTE PTR es:[edi],al
  41cc2c:	sbb    eax,0x7c3d0b0c
  41cc31:	cmp    ebx,DWORD PTR [esi-0x2f]
  41cc34:	lea    ecx,[edx]
  41cc36:	es mov ah,0x9
  41cc39:	pop    esp
  41cc3a:	cs inc edx
  41cc3c:	mov    DWORD PTR [ecx],ebx
  41cc3e:	cmc    
  41cc3f:	push   ecx
  41cc40:	add    al,0x6e
  41cc42:	xchg   edi,eax
  41cc43:	cmp    bh,cl
  41cc45:	pop    edx
  41cc46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc47:	pop    ebp
  41cc48:	mov    bl,0x69
  41cc4a:	pop    si
  41cc4c:	xchg   edx,eax
  41cc4d:	jg     0x41cc83
  41cc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc50:	in     eax,dx
  41cc51:	pop    ss
  41cc52:	or     dh,cl
  41cc54:	ins    BYTE PTR es:[edi],dx
  41cc55:	sbb    BYTE PTR [ecx-0x47],dh
  41cc58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc59:	xchg   esp,eax
  41cc5a:	dec    esp
  41cc5b:	test   eax,0x1ef1fb91
  41cc60:	mov    cr3,edx
  41cc63:	dec    eax
  41cc64:	lahf   
  41cc65:	pop    ds
  41cc66:	lods   eax,DWORD PTR ds:[esi]
  41cc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc68:	in     eax,0x43
  41cc6a:	mov    al,ds:0xb7973872
  41cc6f:	clc    
  41cc70:	cmp    BYTE PTR [esi-0x4b],al
  41cc73:	popf   
  41cc74:	or     DWORD PTR [eax-0x18],edx
  41cc77:	pushf  
  41cc78:	mov    cl,0xc5
  41cc7a:	in     eax,0xd1
  41cc7c:	dec    edi
  41cc7d:	rcr    DWORD PTR [edx+eax*1+0x2d3c0737],0x7a
  41cc85:	clc    
  41cc86:	pop    eax
  41cc87:	shl    BYTE PTR [ebx+eiz*2-0x53884656],cl
  41cc8e:	mov    edi,0xd0b12bda
  41cc93:	not    DWORD PTR [edi+0x5156c1c8]
  41cc99:	mov    ch,0xf9
  41cc9b:	jle    0x41cc99
  41cc9d:	jge    0x41cc2b
  41cc9f:	sbb    esp,DWORD PTR [ebx+0x5f3172f8]
  41cca5:	push   es
  41cca6:	stc    
  41cca7:	test   al,0x7e
  41cca9:	push   edx
  41ccaa:	xchg   esi,eax
  41ccab:	fmul   QWORD PTR [ebx]
  41ccad:	mov    bh,0xf8
  41ccaf:	nop
  41ccb0:	test   al,0x18
  41ccb2:	mov    ah,0x90
  41ccb4:	xchg   edi,eax
  41ccb5:	call   0xc39f5571
  41ccba:	mov    cl,0x1b
  41ccbc:	and    eax,DWORD PTR [edi]
  41ccbe:	clc    
  41ccbf:	cmp    ebx,DWORD PTR [edx+ebp*1+0x9a13da9]
  41ccc6:	push   esp
  41ccc7:	cwde   
  41ccc8:	pop    ebx
  41ccc9:	pop    ebp
  41ccca:	dec    edi
  41cccb:	sub    al,0xed
  41cccd:	retf   
  41ccce:	into   
  41cccf:	inc    esp
  41ccd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccd1:	jmp    0x41cc61
  41ccd3:	cmp    DWORD PTR [esi-0x4a],esi
  41ccd6:	(bad)  
  41ccd8:	pop    ebp
  41ccd9:	sbb    ecx,ebp
  41ccdb:	hlt    
  41ccdc:	dec    edx
  41ccdd:	dec    edx
  41ccde:	pushf  
  41ccdf:	(bad)  
  41cce0:	in     al,0x51
  41cce2:	and    al,0xfe
  41cce4:	out    dx,eax
  41cce5:	test   al,0xef
  41cce7:	lahf   
  41cce8:	add    edi,DWORD PTR [ecx]
  41ccea:	ds add al,0x58
  41cced:	sbb    ebp,ecx
  41ccef:	mov    ds:0xf4e93912,al
  41ccf4:	pop    esi
  41ccf5:	gs jne 0x41cd17
  41ccf8:	icebp  
  41ccf9:	push   ecx
  41ccfa:	shl    DWORD PTR [eax],cl
  41ccfc:	addr16 dec esi
  41ccfe:	pop    edx
  41ccff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd00:	loope  0x41cd7f
  41cd02:	mov    dl,BYTE PTR [ebx-0x7e1bd1b0]
  41cd08:	in     al,0x9b
  41cd0a:	imul   edi,DWORD PTR [ebp-0xb],0xd9dbdedf
  41cd11:	xchg   edi,eax
  41cd12:	(bad)  
  41cd13:	jmp    0x41ccfa
  41cd15:	(bad)  
  41cd16:	shl    BYTE PTR [ebx-0x35],1
  41cd19:	mul    BYTE PTR [ecx-0x26]
  41cd1c:	ins    BYTE PTR es:[edi],dx
  41cd1d:	dec    edx
  41cd1e:	inc    esi
  41cd1f:	jo     0x41cd62
  41cd21:	(bad)  
  41cd22:	data16 out 0x17,al
  41cd25:	ja     0x41cd40
  41cd27:	out    dx,eax
  41cd28:	lds    edx,FWORD PTR [ebx+0x730bffeb]
  41cd2e:	je     0x41cd22
  41cd30:	or     esp,DWORD PTR ds:0x2623252c
  41cd36:	sbb    eax,0x6a2bd7ab
  41cd3b:	pop    ss
  41cd3c:	je     0x41cd78
  41cd3e:	sbb    esp,esi
  41cd40:	push   es
  41cd41:	mov    dh,0x1c
  41cd43:	and    esi,DWORD PTR [edx-0x38]
  41cd46:	xor    edx,DWORD PTR [ebp-0x79151c12]
  41cd4c:	adc    ebp,ecx
  41cd4e:	and    bh,BYTE PTR [ecx]
  41cd50:	ja     0x41cd65
  41cd52:	aad    0xa
  41cd54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd55:	lds    eax,FWORD PTR [eax+eiz*8+0x57]
  41cd59:	add    eax,0xaebc9ae8
  41cd5e:	cwde   
  41cd5f:	in     eax,0x5b
  41cd61:	lahf   
  41cd62:	cmp    cl,0x6c
  41cd65:	lahf   
  41cd66:	push   edx
  41cd67:	inc    edi
  41cd68:	mov    ch,0x1
  41cd6a:	pushf  
  41cd6b:	not    DWORD PTR [ebx]
  41cd6d:	inc    ecx
  41cd6e:	fwait
  41cd6f:	push   edx
  41cd70:	sub    ebp,esi
  41cd72:	enter  0xe81e,0xbd
  41cd76:	mov    esi,0x9f4ea6fe
  41cd7b:	push   0xffffff82
  41cd7d:	mov    ah,0xab
  41cd7f:	push   ds
  41cd80:	scas   eax,DWORD PTR es:[edi]
  41cd81:	jb     0x41cd59
  41cd83:	pushf  
  41cd84:	add    bh,BYTE PTR [edx+esi*8]
  41cd87:	ins    DWORD PTR es:[edi],dx
  41cd88:	dec    esi
  41cd89:	je     0x41cd1b
  41cd8b:	pop    esp
  41cd8c:	pop    edi
  41cd8d:	or     al,0x12
  41cd8f:	pop    edx
  41cd90:	std    
  41cd91:	in     eax,dx
  41cd92:	ins    DWORD PTR es:[edi],dx
  41cd93:	ror    DWORD PTR [ebx+0x78463541],cl
  41cd99:	mov    al,0xb6
  41cd9b:	rol    BYTE PTR [ebx+0x76],cl
  41cd9e:	mov    eax,0x3bd27f68
  41cda3:	jae    0x41cd3b
  41cda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda6:	adc    eax,0x102944e5
  41cdab:	mov    al,0x65
  41cdad:	xor    ch,BYTE PTR [edx]
  41cdaf:	gs retf 
  41cdb1:	mov    bh,0xc4
  41cdb3:	dec    ecx
  41cdb4:	fisub  DWORD PTR [ebp+0x757018d4]
  41cdba:	sub    bl,dl
  41cdbc:	sahf   
  41cdbd:	xchg   BYTE PTR [ecx+0x1e59a43c],bl
  41cdc3:	mov    ch,0x6f
  41cdc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdc6:	(bad)  
  41cdc7:	mov    al,0x29
  41cdc9:	in     eax,dx
  41cdca:	cmp    eax,0xfc685588
  41cdd0:	test   BYTE PTR [edi+0x65],0x17
  41cdd4:	xchg   esi,eax
  41cdd5:	out    dx,eax
  41cdd6:	xor    eax,0x575aae32
  41cddb:	(bad)  
  41cddc:	loope  0x41cd84
  41cdde:	adc    al,0x32
  41cde0:	loop   0x41cdbd
  41cde2:	pusha  
  41cde3:	loop   0x41ce48
  41cde5:	cwde   
  41cde6:	jae    0x41cd97
  41cde8:	pop    ds
  41cde9:	adc    ebp,DWORD PTR [edx+0x9]
  41cdec:	out    dx,al
  41cded:	add    BYTE PTR [esi],dl
  41cdef:	(bad)  
  41cdf0:	outs   dx,DWORD PTR ds:[esi]
  41cdf1:	fnstsw WORD PTR [esi-0x30355414]
  41cdf7:	fs mov bh,0xbd
  41cdfa:	loop   0x41ce29
  41cdfc:	call   0x961ef949
  41ce01:	jl     0x41ce3e
  41ce03:	inc    ebp
  41ce04:	xchg   ebp,eax
  41ce05:	jg     0x41cd99
  41ce07:	fnstenv [ebx+0x6ed1841b]
  41ce0d:	sar    DWORD PTR [ebp+0x57],0x1b
  41ce11:	test   eax,0xadcd0b0e
  41ce16:	pop    ss
  41ce17:	pop    ebp
  41ce18:	push   0x144b94dd
  41ce1d:	test   al,0x24
  41ce1f:	iret   
  41ce20:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41ce22:	and    dl,BYTE PTR [esi]
  41ce24:	arpl   WORD PTR [ebx+0x767874ac],bx
  41ce2a:	stos   DWORD PTR es:[edi],eax
  41ce2b:	add    BYTE PTR [esi-0x10],bh
  41ce2e:	add    dh,bh
  41ce30:	repz pusha 
  41ce32:	fs jmp 0x2bce2e56
  41ce38:	fsubr  QWORD PTR [ecx]
  41ce3a:	or     eax,0xa74f9851
  41ce3f:	xor    ch,BYTE PTR [esi-0x58]
  41ce42:	pop    esi
  41ce43:	aas    
  41ce44:	aad    0xb1
  41ce46:	dec    edx
  41ce47:	call   0x8644:0x5e258a5b
  41ce4e:	or     al,0xc9
  41ce50:	mov    esi,0x4ffb8ad3
  41ce55:	inc    BYTE PTR [edx+0x74]
  41ce58:	ins    BYTE PTR es:[edi],dx
  41ce59:	not    DWORD PTR [eax-0x2f]
  41ce5c:	push   ebx
  41ce5d:	mov    edi,0xe3c79719
  41ce62:	sub    BYTE PTR [ebp+0x31],0x79
  41ce66:	int3   
  41ce67:	aam    0x17
  41ce69:	nop
  41ce6a:	cmp    DWORD PTR [eax-0x53],ecx
  41ce6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce6e:	jg     0x41ceac
  41ce70:	scas   al,BYTE PTR es:[edi]
  41ce71:	xor    ebx,esi
  41ce73:	stos   DWORD PTR es:[edi],eax
  41ce74:	nop
  41ce75:	dec    ebp
  41ce76:	fsubr  st,st(6)
  41ce78:	repnz aas 
  41ce7a:	jge    0x41ce35
  41ce7c:	adc    ah,BYTE PTR ds:0x9caa9a0e
  41ce82:	xchg   edx,eax
  41ce83:	out    dx,al
  41ce84:	mov    dl,0x96
  41ce86:	xor    DWORD PTR [ebp-0x29],0xa
  41ce8a:	into   
  41ce8b:	lock shl ah,cl
  41ce8e:	xchg   edx,eax
  41ce8f:	jg     0x41ce60
  41ce91:	push   es
  41ce92:	sub    ebp,DWORD PTR gs:[ebx-0x12f21620]
  41ce99:	dec    ebp
  41ce9a:	jb     0x41cee7
  41ce9c:	icebp  
  41ce9d:	and    BYTE PTR ds:[ecx],0x9b
  41cea1:	aam    0x25
  41cea3:	stos   DWORD PTR es:[edi],eax
  41cea4:	mov    ch,cl
  41cea6:	int    0xa9
  41cea8:	into   
  41cea9:	sbb    ecx,DWORD PTR [edx-0x48]
  41ceac:	scas   al,BYTE PTR es:[edi]
  41cead:	push   ecx
  41ceae:	sub    eax,0x71d94771
  41ceb3:	stos   DWORD PTR es:[edi],eax
  41ceb4:	test   edx,esi
  41ceb6:	xlat   BYTE PTR ds:[ebx]
  41ceb7:	xchg   esi,eax
  41ceb8:	pop    ecx
  41ceb9:	mov    edx,0x163430d1
  41cebe:	push   edx
  41cebf:	push   ebx
  41cec0:	inc    ebx
  41cec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec2:	fnstenv [esi+0x56983be]
  41cec8:	loop   0x41cf43
  41ceca:	data16 and al,0x75
  41cecd:	popa   
  41cece:	xchg   esi,eax
  41cecf:	aam    0xc6
  41ced1:	sbb    bl,BYTE PTR [eax]
  41ced3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ced4:	dec    ebp
  41ced5:	inc    esi
  41ced6:	test   BYTE PTR [esi-0x55],cl
  41ced9:	shl    BYTE PTR [ebx-0x7c404f78],0xf7
  41cee0:	inc    BYTE PTR [edi+ebp*1+0x60]
  41cee4:	and    eax,0xe4ab8973
  41cee9:	or     cl,dh
  41ceeb:	xchg   edx,eax
  41ceec:	jns    0x41cf51
  41ceee:	fxch   st(5)
  41cef0:	cdq    
  41cef1:	and    al,0xf2
  41cef3:	pop    es
  41cef4:	cmp    DWORD PTR [esp+eiz*4],ebp
  41cef7:	sub    ebx,DWORD PTR [ebp+ebx*1+0x2f80d9ae]
  41cefe:	sub    DWORD PTR [ecx-0x4e],ebx
  41cf01:	inc    ecx
  41cf02:	or     edi,DWORD PTR [eax]
  41cf04:	fmul   st(1),st
  41cf06:	add    al,0x63
  41cf08:	or     al,0x88
  41cf0a:	pop    esp
  41cf0b:	imul   esp,ebx,0x2591cae1
  41cf11:	(bad)  
  41cf13:	mov    al,0x15
  41cf15:	dec    eax
  41cf16:	call   0x9c495f03
  41cf1b:	xchg   esi,esi
  41cf1d:	mov    eax,ds:0x2e80bd71
  41cf22:	push   0xbe91a4b
  41cf27:	js     0x41cee0
  41cf29:	mov    ah,0x71
  41cf2b:	rcr    DWORD PTR [edi-0x31d6bec9],0x29
  41cf32:	or     al,BYTE PTR [esi+0x39f565a]
  41cf38:	xor    BYTE PTR [eax+0x70],ah
  41cf3b:	sub    esp,DWORD PTR [ebx-0x298917f1]
  41cf41:	push   0x7f
  41cf43:	adc    ecx,esi
  41cf45:	ret    
  41cf46:	retf   0xdaeb
  41cf49:	arpl   WORD PTR [ecx-0x2b],di
  41cf4c:	cmc    
  41cf4d:	jnp    0x41cfc0
  41cf4f:	call   0xbb10a8f8
  41cf54:	xor    BYTE PTR [di-0x50bd],ch
  41cf59:	dec    ecx
  41cf5a:	sbb    al,BYTE PTR [ecx-0x777fa70]
  41cf60:	sahf   
  41cf61:	mov    ds,WORD PTR [ebx]
  41cf63:	fild   DWORD PTR [ebx-0xa]
  41cf66:	push   esp
  41cf67:	mov    eax,ds:0x73f2515c
  41cf6c:	sbb    bh,BYTE PTR [edx]
  41cf6e:	fcom   st(0)
  41cf70:	inc    esp
  41cf71:	adc    DWORD PTR [ebp-0x60ecfb10],esp
  41cf77:	imul   ebp,DWORD PTR [eax+ecx*8-0x6060fe55],0x19
  41cf7f:	xchg   edx,eax
  41cf80:	sub    al,0x20
  41cf82:	fst    DWORD PTR ds:0x9af1116b
  41cf88:	add    BYTE PTR [edi-0x20],bh
  41cf8b:	pushf  
  41cf8c:	ret    
  41cf8d:	pop    ecx
  41cf8e:	push   0xffffffcc
  41cf90:	retf   0x6534
  41cf93:	push   ss
  41cf94:	push   ebp
  41cf95:	inc    eax
  41cf96:	scas   al,BYTE PTR es:[edi]
  41cf97:	mov    esi,0x9341130f
  41cf9c:	dec    ebp
  41cf9d:	mov    ebx,0x8bd5a435
  41cfa2:	xor    al,0x62
  41cfa4:	sbb    al,0x6a
  41cfa6:	push   esi
  41cfa7:	enter  0xd7c1,0x1d
  41cfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfac:	xchg   BYTE PTR [ecx-0x6e618afc],bl
  41cfb2:	inc    ebp
  41cfb3:	dec    ebp
  41cfb4:	ins    BYTE PTR es:[edi],dx
  41cfb5:	fwait
  41cfb6:	sti    
  41cfb7:	ins    DWORD PTR es:[edi],dx
  41cfb8:	sub    eax,0x171b306e
  41cfbd:	or     esp,edi
  41cfbf:	mov    DWORD PTR [edx],esi
  41cfc1:	jg     0x41d00c
  41cfc3:	adc    al,0x0
  41cfc5:	pop    es
  41cfc6:	fdiv   QWORD PTR [edi]
  41cfc8:	or     bl,BYTE PTR [esi-0x57]
  41cfcb:	adc    BYTE PTR [ecx],al
  41cfcd:	jns    0x41cf69
  41cfcf:	shr    DWORD PTR [eax-0x5e2b1755],1
  41cfd5:	jp     0x41d00d
  41cfd7:	aad    0xf7
  41cfd9:	retf   
  41cfda:	iret   
  41cfdb:	sti    
  41cfdc:	test   BYTE PTR [ebx+0x7b],dl
  41cfdf:	sbb    BYTE PTR [edi+0x529fbd53],ch
  41cfe5:	xlat   BYTE PTR ds:[ebx]
  41cfe6:	cld    
  41cfe7:	push   edi
  41cfe8:	nop
  41cfe9:	or     eax,0x46cab0b2
  41cfee:	cdq    
  41cfef:	daa    
  41cff0:	sbb    ebp,ebp
  41cff2:	mov    edx,0x6dbdf306
  41cff7:	pop    ecx
  41cff8:	mov    gs,WORD PTR [edx-0x1a8c969]
  41cffe:	scas   al,BYTE PTR es:[edi]
  41cfff:	mov    ah,0xdb
  41d001:	push   cs
  41d002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d003:	repz je 0x41d02c
  41d006:	fisttp WORD PTR [ecx+0x36517e56]
  41d00c:	loopne 0x41d020
  41d00e:	int3   
  41d00f:	push   edx
  41d010:	mov    ah,0xab
  41d012:	adc    DWORD PTR [edi-0x33915cdd],esi
  41d018:	or     al,0xec
  41d01a:	jns    0x41cfec
  41d01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d01d:	(bad)  
  41d01e:	lea    esp,[eax]
  41d020:	pop    eax
  41d021:	cdq    
  41d022:	ins    DWORD PTR es:[edi],dx
  41d023:	cmp    DWORD PTR [ecx-0x63],edi
  41d026:	test   al,0x1a
  41d028:	cli    
  41d029:	daa    
  41d02a:	mov    esi,0xb06b0d22
  41d02f:	bound  esp,QWORD PTR [ebp-0x4d950e4b]
  41d035:	imul   ecx,DWORD PTR [ebp-0x473509c1],0x7b
  41d03c:	mov    cs,edx
  41d03e:	adc    edi,DWORD PTR ds:0x6847bfcf
  41d044:	mov    ch,bl
  41d046:	sti    
  41d047:	ret    
  41d048:	ret    
  41d049:	jge    0x41cfe4
  41d04b:	push   es
  41d04c:	adc    dh,bh
  41d04e:	pop    edx
  41d04f:	aas    
  41d050:	adc    DWORD PTR [eax+ebp*4],edx
  41d053:	out    dx,eax
  41d054:	and    al,0x9d
  41d056:	in     eax,0xd8
  41d058:	xor    BYTE PTR [esi+0x33a18040],ch
  41d05e:	xor    bh,BYTE PTR [esp+ebx*1-0x1cd8ce67]
  41d065:	rcr    DWORD PTR [ebp-0x24cbdbb9],cl
  41d06b:	push   ebx
  41d06c:	pop    ss
  41d06d:	lods   al,BYTE PTR ds:[esi]
  41d06e:	outs   dx,DWORD PTR ds:[esi]
  41d06f:	mov    edx,0x59d9bc11
  41d074:	lock icebp 
  41d076:	dec    eax
  41d077:	jbe    0x41d099
  41d079:	jecxz  0x41d065
  41d07b:	test   eax,0xe804919a
  41d080:	adc    al,0xdb
  41d082:	outs   dx,BYTE PTR ds:[esi]
  41d083:	dec    ebx
  41d084:	push   edx
  41d085:	mov    edi,0x62a7ee4c
  41d08a:	movnti DWORD PTR [edx-0x10f10c1a],esi
  41d091:	sbb    ch,BYTE PTR [edi-0x2ab330ba]
  41d097:	pop    eax
  41d098:	dec    edx
  41d099:	sbb    BYTE PTR [ebp-0x2e],bl
  41d09c:	push   ss
  41d09d:	shr    DWORD PTR [edx+0x53daaa30],1
  41d0a3:	mov    al,0x86
  41d0a5:	data16 jge 0x41d0cd
  41d0a8:	js     0x41d11c
  41d0aa:	es aad 0x78
  41d0ad:	bound  esp,QWORD PTR [edi+0xc]
  41d0b0:	es mov bl,0x83
  41d0b3:	outs   dx,DWORD PTR gs:[esi]
  41d0b5:	jle    0x41d0ad
  41d0b7:	sahf   
  41d0b8:	in     al,0x7c
  41d0ba:	jle    0x41d12b
  41d0bc:	xchg   DWORD PTR [ecx-0x1648c9d8],ebp
  41d0c2:	inc    esp
  41d0c3:	fldenv [ebp+eiz*2-0x1b79fbc3]
  41d0ca:	mov    ecx,0x5c48c5be
  41d0cf:	clc    
  41d0d0:	mov    BYTE PTR [esp+edx*2],0x59
  41d0d4:	fdiv   st(1),st
  41d0d6:	fst    DWORD PTR [ebx]
  41d0d8:	rcr    DWORD PTR [eax-0x6d],1
  41d0db:	shl    BYTE PTR [eax+0x7ab82951],0xdd
  41d0e2:	cmp    eax,0x9d04f55e
  41d0e7:	sbb    eax,0xb74056a7
  41d0ec:	mov    BYTE PTR [ebp+ecx*4-0x335b57d0],cl
  41d0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0f4:	rcr    DWORD PTR [ebp-0x39],1
  41d0f7:	jbe    0x41d114
  41d0f9:	push   cs
  41d0fa:	dec    esi
  41d0fb:	cmc    
  41d0fc:	inc    edi
  41d0fd:	mov    al,ds:0x14cc49c3
  41d102:	ror    DWORD PTR [ecx],0x24
  41d105:	(bad)
  41d108:	adc    bl,BYTE PTR [ebx]
  41d10a:	(bad)
  41d10d:	jle    0x41d0a5
  41d10f:	sti    
  41d110:	dec    ebp
  41d111:	cdq    
  41d112:	add    eax,0x1965a3e7
  41d117:	push   0xffffffda
  41d119:	jg     0x41d190
  41d11b:	fs and bl,cl
  41d11e:	mov    edx,0x3be9f8ab
  41d123:	arpl   WORD PTR [edi-0x62000f4b],bp
  41d129:	fidivr WORD PTR [edx-0x746ce766]
  41d12f:	cmp    DWORD PTR [ecx],esi
  41d131:	jge    0x41d0c4
  41d133:	pop    eax
  41d134:	push   ecx
  41d135:	call   0x4515:0xd9b26f32
  41d13c:	push   edx
  41d13d:	into   
  41d13e:	pop    eax
  41d13f:	mov    dl,0x50
  41d141:	call   0x769ec32e
  41d146:	sub    ah,BYTE PTR [ecx+0x6e]
  41d149:	jmp    0x41d153
  41d14b:	jne    0x41d1ca
  41d14d:	xchg   ecx,eax
  41d14e:	das    
  41d14f:	xlat   BYTE PTR ds:[ebx]
  41d150:	out    dx,al
  41d151:	nop
  41d152:	addr16 inc ebp
  41d154:	aaa    
  41d155:	sbb    DWORD PTR [edi+0x65],esi
  41d158:	imul   esi,DWORD PTR [eax],0x7fa874ac
  41d15e:	pop    edi
  41d15f:	mov    al,0xe1
  41d161:	mov    esp,0xdee0e9e9
  41d166:	push   0xffffffd9
  41d168:	mov    BYTE PTR [ecx-0x76674b94],bh
  41d16e:	pop    esp
  41d16f:	jbe    0x41d12d
  41d171:	jle    0x41d13a
  41d173:	pop    ss
  41d174:	hlt    
  41d175:	addr16 sahf 
  41d177:	repnz or BYTE PTR [edx-0x33],cl
  41d17b:	or     ebp,ebp
  41d17d:	ret    0x4daa
  41d180:	not    dh
  41d182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d183:	retf   0x366f
  41d186:	xchg   ebx,eax
  41d187:	lds    ebx,FWORD PTR [ebp+eiz*1+0x60]
  41d18b:	jbe    0x41d1b7
  41d18d:	add    eax,0xe9ea2083
  41d192:	(bad)  
  41d193:	mov    dl,0xe0
  41d195:	adc    al,0x65
  41d197:	rcl    DWORD PTR [ebp+0x139cf356],cl
  41d19d:	pop    ecx
  41d19e:	shr    DWORD PTR [edi+edx*1+0x2b],0xe2
  41d1a3:	iret   
  41d1a4:	add    BYTE PTR [edx+0x76],0x15
  41d1a8:	pusha  
  41d1a9:	aad    0xdc
  41d1ab:	les    esi,FWORD PTR [ebx]
  41d1ad:	test   eax,0x6aa7a52c
  41d1b2:	push   cs
  41d1b3:	hlt    
  41d1b4:	retf   0x497e
  41d1b7:	xchg   DWORD PTR [ecx-0x7fde7a3b],eax
  41d1bd:	mov    al,0x51
  41d1bf:	rcl    DWORD PTR [edi+0x3a],1
  41d1c2:	call   0x5659afb9
  41d1c7:	sbb    al,BYTE PTR [ebx-0x3d]
  41d1ca:	jne    0x41d166
  41d1cc:	push   edi
  41d1cd:	sub    BYTE PTR [esi-0x328bfbea],al
  41d1d3:	mov    ah,0xed
  41d1d5:	pusha  
  41d1d6:	daa    
  41d1d7:	cli    
  41d1d8:	cdq    
  41d1d9:	jnp    0x41d15e
  41d1db:	sbb    eax,0x6e9280d6
  41d1e0:	je     0x41d1fb
  41d1e2:	xchg   DWORD PTR [eax],esp
  41d1e4:	cwde   
  41d1e5:	outs   dx,BYTE PTR ds:[esi]
  41d1e6:	bnd jle 0x41d247
  41d1e9:	(bad)  
  41d1ea:	cwde   
  41d1eb:	add    BYTE PTR [ebp+0x18],dl
  41d1ee:	ja     0x41d1f2
  41d1f0:	popa   
  41d1f1:	push   es
  41d1f2:	repnz cmp ah,BYTE PTR [eax-0x2a]
  41d1f6:	sub    al,0x3f
  41d1f8:	ins    DWORD PTR es:[edi],dx
  41d1f9:	aad    0xb4
  41d1fb:	lea    ecx,[ecx]
  41d1fd:	(bad)  
  41d1fe:	mov    eax,0xc5b27dae
  41d203:	in     eax,dx
  41d204:	fcomp  QWORD PTR [edi+0x4b5a00a3]
  41d20a:	dec    ebp
  41d20b:	push   ss
  41d20c:	sbb    ch,BYTE PTR [edi+eax*4-0x60]
  41d210:	jge    0x41d214
  41d212:	cmc    
  41d213:	div    DWORD PTR [esp+ebp*4]
  41d216:	mov    edx,edi
  41d218:	out    dx,eax
  41d219:	adc    ecx,eax
  41d21b:	pushf  
  41d21c:	sbb    ecx,DWORD PTR [ecx]
  41d21e:	pop    ds
  41d21f:	aad    0x2d
  41d221:	loopne 0x41d1d1
  41d223:	icebp  
  41d224:	and    DWORD PTR [esi+0x476df890],esp
  41d22a:	stos   DWORD PTR es:[edi],eax
  41d22b:	cmp    BYTE PTR [ecx],dl
  41d22d:	inc    esi
  41d22e:	inc    edi
  41d22f:	ja     0x41d295
  41d231:	xor    cl,bl
  41d233:	ins    BYTE PTR es:[edi],dx
  41d234:	in     al,0xac
  41d236:	jmp    0x5488:0x611217f2
  41d23d:	push   ecx
  41d23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23f:	xor    al,0x69
  41d241:	jecxz  0x41d207
  41d243:	mov    DWORD PTR [edx+ecx*2+0x3c37712a],esp
  41d24a:	int    0x7c
  41d24c:	push   ebp
  41d24d:	adc    DWORD PTR [esi],ebx
  41d24f:	sbb    ebx,DWORD PTR [eax+0x10d9213c]
  41d255:	nop
  41d256:	loopne 0x41d210
  41d258:	and    BYTE PTR [eax+0x30a0d5d5],dh
  41d25e:	js     0x41d231
  41d260:	lds    edi,FWORD PTR [esi-0x30]
  41d263:	xchg   esi,eax
  41d264:	jmp    0xc45c:0x62d719f9
  41d26b:	mov    ?,eax
  41d26d:	add    ecx,ebx
  41d26f:	dec    edi
  41d270:	fidivr WORD PTR [eax]
  41d272:	test   DWORD PTR [eax+0x31],esp
  41d275:	xlat   BYTE PTR ds:[ebx]
  41d276:	add    esp,ebp
  41d278:	inc    ebp
  41d279:	stos   DWORD PTR es:[edi],eax
  41d27a:	in     al,dx
  41d27b:	lock jb 0x41d226
  41d27e:	je     0x41d278
  41d280:	dec    ebp
  41d281:	imul   esp,DWORD PTR [ebx-0x1b],0xc5f50fd3
  41d288:	stc    
  41d289:	scas   al,BYTE PTR es:[edi]
  41d28a:	icebp  
  41d28b:	loopne 0x41d258
  41d28d:	sub    DWORD PTR [edx*8-0x5fc39bbc],eax
  41d294:	or     esi,DWORD PTR [edx]
  41d296:	jecxz  0x41d2b6
  41d298:	add    eax,0x13c71f98
  41d29d:	or     BYTE PTR [esi+ebp*2+0x275a5068],0xb8
  41d2a5:	sti    
  41d2a6:	mov    al,0x4e
  41d2a8:	fwait
  41d2a9:	xor    DWORD PTR [edx+0x5f],esi
  41d2ac:	leave  
  41d2ad:	xor    ebp,DWORD PTR [ebp+0x33aa6aa7]
  41d2b3:	sub    DWORD PTR [eax+0x73],edx
  41d2b6:	or     ah,bh
  41d2b8:	and    DWORD PTR [ebx],esi
  41d2ba:	and    esi,DWORD PTR [edi-0xeacb83d]
  41d2c0:	int3   
  41d2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c2:	mov    ss:0x552bdc16,al
  41d2c8:	dec    edi
  41d2c9:	ins    BYTE PTR es:[edi],dx
  41d2ca:	repnz cmp esi,DWORD PTR [edx-0x45d090ff]
  41d2d1:	sbb    ebp,ebp
  41d2d3:	mov    bl,0x45
  41d2d5:	sub    BYTE PTR [edx+0x4dde2d37],ch
  41d2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2dc:	in     eax,dx
  41d2dd:	call   0xa078:0x436c9294
  41d2e4:	xor    al,0x50
  41d2e6:	lock sbb al,0x30
  41d2e9:	in     al,0x1b
  41d2eb:	and    DWORD PTR [ebp+0x3be5895f],0x516d4422
  41d2f5:	data16 mov dh,0x57
  41d2f8:	clc    
  41d2f9:	je     0x41d301
  41d2fb:	popf   
  41d2fc:	mov    bl,BYTE PTR [ebx]
  41d2fe:	test   BYTE PTR [ebx],ch
  41d300:	sub    dl,ch
  41d302:	inc    ebx
  41d303:	xchg   ecx,eax
  41d304:	sub    eax,0x2f922092
  41d309:	pop    ecx
  41d30a:	into   
  41d30b:	out    0xed,eax
  41d30d:	xor    al,0x7e
  41d30f:	jmp    0xbd78c868
  41d314:	scas   al,BYTE PTR es:[edi]
  41d315:	mov    esi,DWORD PTR [edx+ecx*4-0x17]
  41d319:	test   al,0x8c
  41d31b:	jo     0x41d2cb
  41d31d:	xor    WORD PTR [eax+edx*4-0x302e54fb],0x9898
  41d327:	mov    WORD PTR [ebx*8-0x75976683],?
  41d32e:	mov    al,ds:0xd5240161
  41d333:	xchg   esp,eax
  41d334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d335:	adc    al,0x25
  41d337:	cmc    
  41d338:	aaa    
  41d339:	sbb    esp,DWORD PTR [ebx+0x68bba731]
  41d33f:	adc    esp,DWORD PTR [edx+0x18]
  41d342:	shr    DWORD PTR [edi],cl
  41d344:	push   ds
  41d345:	jmp    0xe673:0x656a04c0
  41d34c:	cmp    ch,BYTE PTR [eax-0x6cc03dbd]
  41d352:	mov    dl,0x3
  41d354:	std    
  41d355:	dec    eax
  41d356:	aad    0xfb
  41d358:	pop    esi
  41d359:	push   ecx
  41d35a:	mov    DWORD PTR [ebp+0x36c0f731],esp
  41d360:	ret    
  41d361:	mov    esp,0x737486b
  41d366:	pop    edx
  41d367:	popa   
  41d368:	push   eax
  41d369:	cmp    al,bh
  41d36b:	dec    esi
  41d36c:	cdq    
  41d36d:	sub    DWORD PTR [esi+0x2d],eax
  41d370:	les    esi,FWORD PTR [eax-0x31a137c1]
  41d376:	ror    ah,0xf8
  41d379:	xchg   esi,eax
  41d37a:	pop    edi
  41d37b:	xchg   ecx,eax
  41d37c:	cmp    esp,ecx
  41d37e:	mov    DWORD PTR [ebx-0x3ba83434],eax
  41d384:	add    ecx,DWORD PTR [esi]
  41d386:	retf   0x3351
  41d389:	push   es
  41d38a:	outs   dx,BYTE PTR ds:[esi]
  41d38b:	dec    edi
  41d38c:	in     eax,dx
  41d38d:	cmp    al,dl
  41d38f:	or     BYTE PTR [ebx],ah
  41d391:	mov    cl,0xe8
  41d393:	mov    ds:0x282e0fea,eax
  41d398:	lea    esp,[edi-0x79]
  41d39b:	xchg   ebx,eax
  41d39c:	stos   BYTE PTR es:[edi],al
  41d39d:	jns    0x41d33f
  41d39f:	scas   eax,DWORD PTR es:[edi]
  41d3a0:	or     esp,DWORD PTR [edi]
  41d3a2:	mov    cl,0xdc
  41d3a4:	pushf  
  41d3a5:	ja     0x41d375
  41d3a7:	pop    edi
  41d3a8:	aaa    
  41d3a9:	rcr    BYTE PTR [ecx-0xbc7098c],cl
  41d3af:	pop    ecx
  41d3b0:	daa    
  41d3b1:	ret    0x2816
  41d3b4:	pop    esp
  41d3b5:	shl    DWORD PTR [edi],cl
  41d3b7:	dec    ebp
  41d3b8:	and    BYTE PTR [edi],ah
  41d3ba:	xchg   edx,eax
  41d3bb:	inc    edx
  41d3bc:	retf   
  41d3bd:	imul   ebx,ebx,0xfffffff3
  41d3c0:	pop    edx
  41d3c1:	xor    DWORD PTR es:[ecx-0x16],edx
  41d3c5:	icebp  
  41d3c6:	in     eax,0x9e
  41d3c8:	push   es
  41d3c9:	out    dx,eax
  41d3ca:	xor    dl,BYTE PTR ds:0x1b129259
  41d3d0:	repnz fnsave [esi]
  41d3d3:	je     0x41d3ee
  41d3d5:	ret    
  41d3d6:	pop    esi
  41d3d7:	outs   dx,BYTE PTR ds:[esi]
  41d3d8:	mov    ebx,0xeb11e114
  41d3dd:	sbb    BYTE PTR [esi+0x7fc2b82e],dh
  41d3e3:	bound  ebx,QWORD PTR [ecx-0x13]
  41d3e6:	mov    ebx,0xc079b0b9
  41d3eb:	or     eax,0xf81fe1be
  41d3f0:	and    BYTE PTR ds:0x9b39009b,0x2b
  41d3f7:	fcom   DWORD PTR ds:[ebx-0x27]
  41d3fb:	iret   
  41d3fc:	stos   BYTE PTR es:[edi],al
  41d3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3fe:	push   esp
  41d3ff:	leave  
  41d400:	push   ecx
  41d401:	mov    edi,0xdb428239
  41d406:	pop    ebp
  41d407:	or     dl,BYTE PTR [edx+eiz*8]
  41d40a:	es sub al,0x4c
  41d40d:	cmp    al,0x85
  41d40f:	adc    DWORD PTR [edx-0x78],eax
  41d412:	adc    bl,BYTE PTR [ecx-0x18]
  41d415:	shl    DWORD PTR [ebx],cl
  41d417:	sub    al,0x7d
  41d419:	test   al,0x88
  41d41b:	fnstenv [esi-0x7b94c01]
  41d421:	rcl    BYTE PTR [ebx],cl
  41d423:	std    
  41d424:	inc    edi
  41d425:	add    DWORD PTR [ecx-0x6c],ebx
  41d428:	add    ch,ah
  41d42a:	mov    ds:0x293a53cf,al
  41d42f:	sbb    eax,0xc5ef6bff
  41d434:	mov    esp,0xe9808ee7
  41d439:	add    al,0x12
  41d43b:	cmp    al,0x1e
  41d43d:	stos   DWORD PTR es:[edi],eax
  41d43e:	jo     0x41d48a
  41d440:	dec    ecx
  41d441:	pop    ds
  41d442:	popf   
  41d443:	push   ss
  41d444:	fadd   st,st(2)
  41d446:	shl    DWORD PTR [eax],1
  41d448:	rcr    BYTE PTR [ebx+ebp*8+0x12],1
  41d44c:	(bad)  
  41d44d:	push   esp
  41d44e:	jno    0x41d4c6
  41d450:	sar    DWORD PTR [eax+0x4d],1
  41d453:	inc    ecx
  41d454:	fld    QWORD PTR [ebp+0x594e0cdc]
  41d45a:	push   edi
  41d45b:	in     eax,dx
  41d45c:	aam    0xfb
  41d45e:	mov    al,ds:0x74ed17ac
  41d463:	dec    edx
  41d464:	sbb    al,0x9e
  41d466:	cmp    dl,BYTE PTR [eax+0x35]
  41d469:	imul   BYTE PTR [edx-0x73]
  41d46c:	popa   
  41d46d:	xchg   esi,eax
  41d46e:	inc    ebx
  41d46f:	jns    0x41d4aa
  41d471:	jnp    0x41d4e7
  41d473:	int    0x65
  41d475:	xchg   esp,eax
  41d476:	pop    ebp
  41d477:	mov    ebp,0x7b67eea4
  41d47c:	sub    al,ah
  41d47e:	in     al,0xf
  41d480:	das    
  41d481:	adc    eax,DWORD PTR [ebx+0x48d499bc]
  41d487:	aad    0x53
  41d489:	pop    es
  41d48a:	or     eax,0x9298e9c5
  41d48f:	cmp    BYTE PTR [ebp*4+0x53aae4d1],ch
  41d496:	ds push cs
  41d498:	mov    ebp,0xaa7cca2f
  41d49d:	adc    al,0x6a
  41d49f:	pop    ebp
  41d4a0:	jmp    0xbf58:0x587ccb40
  41d4a7:	inc    ebx
  41d4a8:	popa   
  41d4a9:	sbb    edi,DWORD PTR [edx-0x5e92ca73]
  41d4af:	push   esp
  41d4b0:	mov    edi,0x27431b9
  41d4b5:	xchg   DWORD PTR [edx+0x5e905378],esi
  41d4bb:	jle    0x41d52d
  41d4bd:	mov    ah,0xee
  41d4bf:	imul   ebx,edx,0xffffff85
  41d4c2:	xor    DWORD PTR [esi],edi
  41d4c4:	test   al,0x79
  41d4c6:	loop   0x41d4c3
  41d4c8:	jp     0x41d4af
  41d4ca:	inc    esi
  41d4cb:	mov    esi,0x625e1cdb
  41d4d0:	cmp    eax,0xdddadf43
  41d4d5:	call   0x3882a194
  41d4da:	sub    BYTE PTR [ebp+0x27],bh
  41d4dd:	or     esp,esi
  41d4df:	push   es
  41d4e0:	loop   0x41d464
  41d4e2:	repz lock mov bl,0x92
  41d4e6:	add    bl,BYTE PTR [edi-0x50]
  41d4e9:	dec    esi
  41d4ea:	and    al,0x46
  41d4ec:	xchg   edi,eax
  41d4ed:	or     eax,0x99ae3c26
  41d4f2:	loopne 0x41d544
  41d4f4:	nop    DWORD PTR [ebx+0x43]
  41d4f8:	or     BYTE PTR [esi+0x5],ah
  41d4fb:	dec    edx
  41d4fc:	dec    ecx
  41d4fd:	pause  
  41d4ff:	pop    ds
  41d500:	outs   dx,BYTE PTR ds:[esi]
  41d501:	xchg   edi,eax
  41d502:	pop    ecx
  41d503:	and    eax,0xe79ade5d
  41d508:	dec    ebx
  41d509:	xchg   esp,eax
  41d50a:	mov    edx,?
  41d50c:	jo     0x41d53b
  41d50e:	mov    bh,0x44
  41d510:	hlt    
  41d511:	cmp    DWORD PTR [eax-0x4072dd81],edi
  41d517:	stos   BYTE PTR es:[edi],al
  41d518:	pop    ebx
  41d519:	lods   eax,DWORD PTR ds:[esi]
  41d51a:	dec    esi
  41d51b:	test   al,0x8d
  41d51d:	jae    0x41d593
  41d51f:	ja     0x41d581
  41d521:	add    eax,0xfb5743a
  41d526:	xchg   ecx,eax
  41d527:	outs   dx,DWORD PTR ds:[esi]
  41d528:	cmp    edx,DWORD PTR [edi]
  41d52a:	xchg   ebp,eax
  41d52b:	repnz sub eax,0x3acaa6b7
  41d531:	cwde   
  41d532:	or     bl,BYTE PTR [esi-0x4]
  41d535:	fdivr  DWORD PTR [ecx+ecx*4+0x26]
  41d539:	sub    edi,esp
  41d53b:	bound  ebx,QWORD PTR [eax-0x29d1e5aa]
  41d541:	pop    ecx
  41d542:	into   
  41d543:	push   ebp
  41d544:	add    bh,BYTE PTR [esi]
  41d546:	xor    eax,0x5b0bb01f
  41d54b:	or     eax,0x28b75c47
  41d550:	pop    ecx
  41d551:	inc    edi
  41d552:	popa   
  41d553:	cmp    bh,0xb0
  41d556:	fisub  DWORD PTR [esi]
  41d558:	rcr    al,1
  41d55a:	adc    eax,0x8acc82e0
  41d55f:	sub    al,0x4c
  41d561:	push   ds
  41d562:	mov    ds:0x4e4f1911,eax
  41d567:	in     eax,0x31
  41d569:	or     BYTE PTR [ebp-0x66e2eeba],0xe6
  41d570:	mov    bh,ah
  41d572:	dec    esi
  41d573:	inc    ebx
  41d574:	mov    eax,ds:0xe612b3fb
  41d579:	ja     0x41d56c
  41d57b:	xchg   ecx,eax
  41d57c:	call   0xa41:0x779b1bbe
  41d583:	arpl   WORD PTR [ecx+0x78],ax
  41d586:	or     ebp,DWORD PTR [edx+0x55]
  41d589:	xor    BYTE PTR [edx],ah
  41d58b:	jmp    0x4807ad22
  41d590:	pusha  
  41d591:	push   ecx
  41d592:	test   bl,cl
  41d594:	and    edx,DWORD PTR [esp+ecx*4]
  41d597:	sbb    DWORD PTR [ebx],esi
  41d599:	pop    esp
  41d59a:	retf   0x7bc6
  41d59d:	mov    DWORD PTR [ecx+0x56c65ff2],esp
  41d5a3:	int3   
  41d5a4:	mov    ebx,0x106486fb
  41d5a9:	fmul   st,st(4)
  41d5ab:	nop
  41d5ac:	mov    eax,0xd9a5717c
  41d5b1:	les    eax,FWORD PTR [edi+0x48e0343f]
  41d5b7:	dec    ecx
  41d5b8:	sbb    BYTE PTR [ecx],0x70
  41d5bb:	xchg   ebp,eax
  41d5bc:	setle  BYTE PTR fs:[eax]
  41d5c0:	cmp    cl,al
  41d5c2:	dec    ebx
  41d5c3:	xchg   esi,eax
  41d5c4:	mov    BYTE PTR [ecx-0x4be762cf],cl
  41d5ca:	jb     0x41d56e
  41d5cc:	xor    al,0xbb
  41d5ce:	pop    ebp
  41d5cf:	push   cs
  41d5d0:	push   edi
  41d5d1:	sbb    ecx,ebp
  41d5d3:	adc    eax,0x5483aa1a
  41d5d8:	jle    0x41d5b5
  41d5da:	fucomip st,st(4)
  41d5dc:	iret   
  41d5dd:	mov    ecx,0x5acf51ec
  41d5e2:	jp     0x41d5bf
  41d5e4:	(bad)  
  41d5e5:	mov    ebx,0x25e18b32
  41d5ea:	jo     0x41d611
  41d5ec:	cs fs dec esp
  41d5ef:	ret    0x9af1
  41d5f2:	loope  0x41d65d
  41d5f4:	mov    esi,0x2142d0b0
  41d5f9:	or     ebp,DWORD PTR [ebx+0x5]
  41d5fc:	and    eax,0x257624da
  41d601:	scas   al,BYTE PTR es:[edi]
  41d602:	fstp   TBYTE PTR [ebx+0xc6e258f]
  41d608:	mov    eax,0xefd76ea
  41d60d:	xor    bl,BYTE PTR [ecx+0x68fd78c5]
  41d613:	xor    ecx,ebx
  41d615:	jbe    0x41d59c
  41d617:	sub    BYTE PTR [esp+ebx*1-0x33beed38],0x1e
  41d61f:	outs   dx,DWORD PTR ds:[esi]
  41d620:	xor    eax,0xbb9ae35d
  41d625:	lea    eax,[edi+0x7c64878f]
  41d62b:	mov    dl,0x3f
  41d62d:	adc    al,0x4
  41d62f:	pop    ds
  41d630:	push   edx
  41d631:	cmp    esi,DWORD PTR [ebx]
  41d633:	sbb    eax,0xc51d97dc
  41d638:	imul   edi,eax,0x6d
  41d63b:	push   ebp
  41d63c:	das    
  41d63d:	jno    0x41d60f
  41d63f:	das    
  41d640:	jle    0x41d630
  41d642:	dec    esi
  41d643:	outs   dx,BYTE PTR ds:[esi]
  41d644:	dec    ebp
  41d645:	jae    0x41d6a4
  41d647:	pop    esp
  41d648:	sub    ch,dl
  41d64a:	fs add al,0x62
  41d64d:	aam    0x8d
  41d64f:	or     dh,0xb6
  41d652:	adc    bl,dl
  41d654:	xor    eax,0x825fa15a
  41d659:	or     BYTE PTR [edi],dh
  41d65b:	dec    esi
  41d65c:	push   ss
  41d65d:	mov    ebx,0xd6c0ada9
  41d662:	mov    al,0xbe
  41d664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d665:	pop    ebx
  41d666:	scas   eax,DWORD PTR es:[edi]
  41d667:	pop    edi
  41d668:	push   cs
  41d669:	test   DWORD PTR [ebx+0x1cc07f96],0x7fdceef0
  41d673:	inc    edx
  41d674:	mov    edi,0x8c36ba74
  41d679:	jb     0x41d699
  41d67b:	jb     0x41d6c5
  41d67d:	call   0x99b3:0x3d69941b
  41d684:	sub    DWORD PTR [eax+0x61],edi
  41d687:	jae    0x41d672
  41d689:	pop    es
  41d68a:	repz fiadd WORD PTR [esi-0x2f208964]
  41d691:	repz fld DWORD PTR [edi-0x44ef2e33]
  41d698:	into   
  41d699:	in     eax,0x15
  41d69b:	fiadd  WORD PTR [esi+0x56]
  41d69e:	dec    ebp
  41d69f:	push   eax
  41d6a0:	lods   eax,DWORD PTR ds:[esi]
  41d6a1:	in     al,dx
  41d6a2:	adc    ebx,DWORD PTR [eax]
  41d6a4:	repnz aaa 
  41d6a6:	bound  edx,QWORD PTR [eax+0x2d]
  41d6a9:	cmp    DWORD PTR [esi],edi
  41d6ab:	jmp    0x41d6c1
  41d6ad:	ret    
  41d6ae:	bound  esp,QWORD PTR [ebp-0x7285bdde]
  41d6b4:	outs   dx,DWORD PTR ds:[esi]
  41d6b5:	xlat   BYTE PTR ds:[ebx]
  41d6b6:	shr    BYTE PTR [edx+0x55],cl
  41d6b9:	scas   al,BYTE PTR es:[edi]
  41d6ba:	cmp    dl,BYTE PTR [esi]
  41d6bc:	jl     0x41d733
  41d6be:	and    bl,ah
  41d6c0:	adc    dl,bl
  41d6c2:	ins    DWORD PTR es:[edi],dx
  41d6c3:	int    0xba
  41d6c5:	sbb    edx,DWORD PTR [esi+0x46]
  41d6c8:	fwait
  41d6c9:	aas    
  41d6ca:	(bad)  
  41d6cb:	pop    ecx
  41d6cc:	add    al,0x70
  41d6ce:	mov    esi,0x5c595f16
  41d6d3:	pop    esi
  41d6d4:	loop   0x41d721
  41d6d6:	add    bl,bh
  41d6d8:	jp     0x41d6d0
  41d6da:	int3   
  41d6db:	dec    esp
  41d6dc:	xchg   eax,ebx
  41d6de:	and    BYTE PTR [esi+0x26],ah
  41d6e1:	sub    al,0x68
  41d6e3:	sbb    edi,ecx
  41d6e5:	scas   al,BYTE PTR es:[edi]
  41d6e6:	cmp    ebx,ecx
  41d6e8:	popf   
  41d6e9:	inc    ebp
  41d6ea:	add    BYTE PTR [eax],0xe1
  41d6ed:	les    ecx,FWORD PTR [edx+0x1dcd2e5e]
  41d6f3:	imul   ecx,DWORD PTR [eax],0x4f79f639
  41d6f9:	pop    ebx
  41d6fa:	lahf   
  41d6fb:	ins    BYTE PTR es:[edi],dx
  41d6fc:	js     0x41d716
  41d6fe:	out    dx,al
  41d6ff:	pop    ecx
  41d700:	jns    0x41d687
  41d702:	shr    BYTE PTR [ebp+edi*1+0x75],cl
  41d706:	out    dx,al
  41d707:	cwde   
  41d708:	out    dx,eax
  41d709:	xlat   BYTE PTR ds:[ebx]
  41d70a:	inc    edi
  41d70b:	fs enter 0x15ec,0x7f
  41d710:	jmp    0x998c78f2
  41d715:	xor    DWORD PTR [edx],ecx
  41d717:	xchg   DWORD PTR [edi],esi
  41d719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d71a:	stos   BYTE PTR es:[edi],al
  41d71b:	mov    edi,0x7657df5
  41d720:	mov    edi,0xa7a3061f
  41d725:	lods   al,BYTE PTR ds:[esi]
  41d726:	out    dx,eax
  41d727:	es scas eax,DWORD PTR es:[edi]
  41d729:	fisttp QWORD PTR ds:0x265040a9
  41d72f:	test   eax,0xe979a7e5
  41d734:	adc    al,0xbb
  41d736:	cmp    al,0xc5
  41d738:	inc    edi
  41d739:	jg     0x41d745
  41d73b:	shr    ebp,cl
  41d73d:	sub    al,0x6e
  41d73f:	mov    eax,ds:0x609dc539
  41d744:	imul   esp,DWORD PTR [ecx-0x284d2313],0xa1280ce
  41d74e:	sbb    ch,BYTE PTR [ebx+ecx*8]
  41d751:	(bad)  
  41d753:	push   ecx
  41d754:	ror    BYTE PTR [edx+ebp*2],0xd
  41d758:	lock lahf 
  41d75a:	pop    DWORD PTR [ecx+eax*2+0x3c554bc2]
  41d761:	ss mov dl,0xc9
  41d764:	jmp    0x41d7cb
  41d766:	inc    ebx
  41d767:	(bad)  
  41d768:	fcmovne st,st(5)
  41d76a:	mov    al,ds:0x775ef0d7
  41d76f:	jmp    0x5df9412f
  41d774:	cmc    
  41d775:	jg     0x41d6f9
  41d777:	scas   eax,DWORD PTR es:[edi]
  41d778:	cmp    BYTE PTR [edi],ah
  41d77a:	pop    edx
  41d77b:	pushf  
  41d77c:	(bad)  
  41d77d:	ror    ebp,0x97
  41d780:	and    al,0xee
  41d782:	cmp    dh,BYTE PTR [eax-0x32]
  41d785:	bound  esi,QWORD PTR [edi+esi*8]
  41d788:	mov    eax,0x43b5cc86
  41d78d:	push   eax
  41d78e:	cli    
  41d78f:	int    0x1
  41d791:	inc    edi
  41d792:	aam    0x32
  41d794:	xor    eax,0x95873f22
  41d799:	pop    es
  41d79a:	or     BYTE PTR [ebp-0x436af672],bh
  41d7a0:	stos   BYTE PTR es:[edi],al
  41d7a1:	fiadd  WORD PTR [esi+0x34359a13]
  41d7a7:	adc    dl,al
  41d7a9:	mov    eax,ds:0xab0dd6fb
  41d7ae:	(bad)  
  41d7af:	mov    edi,0xa03fc30d
  41d7b4:	shl    edx,0x83
  41d7b7:	rcl    DWORD PTR [ebp+0x7571fa4b],0xb0
  41d7be:	cmc    
  41d7bf:	xor    al,0x9b
  41d7c1:	(bad)  
  41d7c2:	cli    
  41d7c3:	cmp    bl,ch
  41d7c5:	test   al,0x66
  41d7c7:	in     al,dx
  41d7c8:	ror    BYTE PTR [edx-0x23],0x1
  41d7cc:	fnstsw WORD PTR [edx]
  41d7ce:	jbe    0x41d82a
  41d7d0:	ja     0x41d7f8
  41d7d2:	or     al,BYTE PTR [edi+0x4b]
  41d7d5:	cs stos BYTE PTR es:[edi],al
  41d7d7:	fcmovbe st,st(1)
  41d7d9:	scas   eax,DWORD PTR es:[edi]
  41d7da:	fisub  DWORD PTR [ebx-0x2a]
  41d7dd:	lods   al,BYTE PTR ds:[esi]
  41d7de:	xor    ecx,DWORD PTR [ecx]
  41d7e0:	sbb    BYTE PTR [esi+0x76],0xdc
  41d7e4:	stos   BYTE PTR es:[edi],al
  41d7e5:	and    BYTE PTR [edi-0x3f],ch
  41d7e8:	adc    eax,0xb0596b0b
  41d7ed:	je     0x41d808
  41d7ef:	mov    edx,0xa820a8d6
  41d7f4:	(bad)  
  41d7f5:	(bad)  
  41d7f7:	add    eax,0xd089ece7
  41d7fc:	adc    al,0x90
  41d7fe:	jno    0x41d81f
  41d800:	lea    ebp,[edi]
  41d802:	jl     0x41d846
  41d804:	sar    BYTE PTR [edx],cl
  41d806:	inc    edx
  41d807:	inc    eax
  41d808:	xchg   esi,eax
  41d809:	inc    ecx
  41d80a:	shl    DWORD PTR [edx],1
  41d80c:	sbb    DWORD PTR [esi+0x2daa626c],ebp
  41d812:	dec    ebx
  41d813:	les    eax,FWORD PTR [edx]
  41d815:	adc    BYTE PTR [eax+0x31],dl
  41d818:	lods   eax,DWORD PTR ds:[esi]
  41d819:	js     0x41d811
  41d81b:	inc    ebx
  41d81c:	(bad)  
  41d81d:	adc    edx,esp
  41d81f:	mov    edx,DWORD PTR [esi+edx*8+0x75]
  41d823:	lock jmp 0x94a:0x5a4bb9c4
  41d82b:	mov    ebp,?
  41d82d:	test   eax,0x98355d37
  41d832:	mov    dl,0xb6
  41d834:	xor    esi,DWORD PTR [edx]
  41d836:	add    esi,DWORD PTR ds:0x62751c6c
  41d83c:	push   esi
  41d83d:	addr16 pop esp
  41d83f:	pop    eax
  41d840:	daa    
  41d841:	push   0xffffffde
  41d843:	les    eax,FWORD PTR [edx]
  41d845:	xor    al,0x48
  41d847:	ret    
  41d848:	jne    0x41d84c
  41d84a:	dec    edx
  41d84b:	sbb    eax,0x6414eac
  41d850:	enter  0x8c54,0x3e
  41d854:	sub    DWORD PTR [ecx-0x28c76c93],edx
  41d85a:	nop
  41d85b:	outs   dx,BYTE PTR ds:[esi]
  41d85c:	mov    eax,ds:0xfc2fcbcc
  41d861:	arpl   WORD PTR [esp+ebp*8+0xf8752c3],bx
  41d868:	fadd   DWORD PTR [ecx]
  41d86a:	sub    BYTE PTR [edi-0x6433d882],0xa8
  41d871:	je     0x41d8af
  41d873:	fld    DWORD PTR [edi-0x52]
  41d876:	aad    0x59
  41d878:	mov    es:0x72325f17,eax
  41d87e:	gs sub ebp,ebx
  41d881:	jne    0x41d847
  41d883:	jne    0x41d85a
  41d885:	jg     0x41d902
  41d887:	sub    DWORD PTR [edi],0x12bf09d8
  41d88d:	sti    
  41d88e:	dec    esp
  41d88f:	daa    
  41d890:	cmp    BYTE PTR [ebx],ah
  41d892:	sub    bl,BYTE PTR [ecx-0x47]
  41d895:	(bad)
  41d898:	mov    ds:0xa324fca,al
  41d89d:	pop    edi
  41d89e:	data16 test al,0xc1
  41d8a1:	fisub  DWORD PTR [ebp+0x1a]
  41d8a4:	pop    es
  41d8a5:	cmp    DWORD PTR ds:0xd90ee278,ebp
  41d8ab:	je     0x41d833
  41d8ad:	jno    0x41d86f
  41d8af:	add    DWORD PTR [eax+esi*2+0x157d6efd],edi
  41d8b6:	stos   DWORD PTR es:[edi],eax
  41d8b7:	sahf   
  41d8b8:	jmp    0x41d8b1
  41d8ba:	jbe    0x41d85c
  41d8bc:	lods   eax,DWORD PTR ds:[esi]
  41d8bd:	fistp  QWORD PTR [eax+ecx*8-0x35]
  41d8c1:	fiadd  DWORD PTR [ebp-0xc2bb345]
  41d8c7:	fmul   DWORD PTR ds:0x8673953b
  41d8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8ce:	test   eax,0x9ec2f600
  41d8d3:	jl     0x41d899
  41d8d5:	sub    BYTE PTR [eax-0x53],bl
  41d8d8:	ins    BYTE PTR es:[edi],dx
  41d8d9:	call   0x8d4ea48f
  41d8de:	push   0x23a62d62
  41d8e3:	mov    BYTE PTR [ebx-0x666fd670],ah
  41d8e9:	mul    BYTE PTR [edi+0x6b1c0a7c]
  41d8ef:	popa   
  41d8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8f1:	inc    BYTE PTR [edx+0xc]
  41d8f4:	adc    eax,0xb476929a
  41d8f9:	add    al,0x95
  41d8fb:	and    eax,0x5e9448ba
  41d900:	call   0x78f2:0x65f1e967
  41d907:	fwait
  41d908:	cwde   
  41d909:	mov    eax,ds:0x4960caa4
  41d90e:	stos   DWORD PTR es:[edi],eax
  41d90f:	ffree  st(4)
  41d911:	scas   eax,DWORD PTR es:[edi]
  41d912:	std    
  41d913:	sub    al,0x86
  41d915:	jae    0x41d954
  41d917:	jo     0x41d90b
  41d919:	lods   eax,DWORD PTR ds:[esi]
  41d91a:	xchg   esi,eax
  41d91b:	inc    eax
  41d91c:	pop    edi
  41d91d:	outs   dx,DWORD PTR ds:[esi]
  41d91e:	adc    eax,0xb285a9ee
  41d923:	jmp    0x41d8e0
  41d925:	loop   0x41d8b7
  41d927:	retf   
  41d928:	icebp  
  41d929:	push   ss
  41d92a:	xor    DWORD PTR [ebp+0x1c329f1a],esp
  41d930:	add    al,0x32
  41d932:	xchg   edi,eax
  41d933:	mov    ah,BYTE PTR [ebx+0x5dde14a9]
  41d939:	ret    0x59d8
  41d93c:	add    al,BYTE PTR [eax+0x4da87460]
  41d942:	and    BYTE PTR [ebp+0x1c],0x14
  41d946:	(bad)
  41d94b:	xor    BYTE PTR [edx+0x65666c41],0x66
  41d952:	std    
  41d953:	dec    ecx
  41d954:	cld    
  41d955:	jb     0x41d9b6
  41d957:	in     al,dx
  41d958:	mov    ecx,0x94819956
  41d95d:	sub    al,0xc1
  41d95f:	pushf  
  41d960:	push   ss
  41d961:	mov    bh,0x27
  41d963:	xchg   ebp,eax
  41d964:	jge    0x41d9cf
  41d966:	jno    0x41d999
  41d968:	pop    edx
  41d969:	sub    bl,BYTE PTR [edi+edi*8]
  41d96c:	jl     0x41d949
  41d96e:	and    ah,dl
  41d970:	in     al,0xfa
  41d972:	xor    eax,0x98f0bfcd
  41d977:	cmp    ebp,DWORD PTR [ecx]
  41d979:	ins    DWORD PTR es:[edi],dx
  41d97a:	sbb    al,0x83
  41d97c:	(bad)
  41d981:	fcom   DWORD PTR [ebx-0x2ba29505]
  41d987:	data16 sub dl,dh
  41d98a:	or     eax,0x29f2c83b
  41d98f:	push   edi
  41d990:	jne    0x41d923
  41d992:	adc    ah,BYTE PTR [eax+0x44]
  41d995:	push   edi
  41d996:	enter  0x42c9,0xeb
  41d99a:	adc    al,0xf5
  41d99c:	mov    BYTE PTR [ecx+0x7facbef0],bh
  41d9a2:	pusha  
  41d9a3:	fs add al,0xd9
  41d9a6:	fs aas 
  41d9a8:	dec    esp
  41d9a9:	ins    DWORD PTR es:[edi],dx
  41d9aa:	jne    0x41d9dd
  41d9ac:	fmul   QWORD PTR [ecx-0x15]
  41d9af:	push   esi
  41d9b0:	adc    BYTE PTR [esi-0x66c30e40],ch
  41d9b6:	bound  ebp,QWORD PTR ds:0x5cb86d73
  41d9bc:	push   ds
  41d9bd:	xchg   edi,eax
  41d9be:	jns    0x41d94c
  41d9c0:	add    al,0xaf
  41d9c2:	xchg   ecx,eax
  41d9c3:	ja     0x41da2d
  41d9c5:	addr16 mov esi,0x226e2e9e
  41d9cb:	lods   eax,DWORD PTR ds:[esi]
  41d9cc:	neg    BYTE PTR [esi+0x5cd15e42]
  41d9d2:	and    eax,0x1d0fe8b3
  41d9d7:	jnp    0x41d9d3
  41d9d9:	data16 test BYTE PTR [edx-0x2fe3a6a5],dl
  41d9e0:	pop    ss
  41d9e1:	fucom  st(3)
  41d9e3:	into   
  41d9e4:	or     al,0x26
  41d9e6:	cmp    cl,ch
  41d9e8:	repnz cld 
  41d9ea:	cli    
  41d9eb:	shl    esp,1
  41d9ed:	jne    0x41d99f
  41d9ef:	adc    al,0x38
  41d9f1:	jo     0x41da58
  41d9f3:	enter  0x40,0x37
  41d9f7:	(bad)  
  41d9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9f9:	nop
  41d9fa:	add    DWORD PTR ds:0xf3fc72c3,0x61264747
  41da04:	xchg   esi,eax
  41da05:	in     eax,dx
  41da06:	xor    ebp,DWORD PTR [esp+ecx*1]
  41da09:	xor    al,0x15
  41da0b:	stos   DWORD PTR es:[edi],eax
  41da0c:	aaa    
  41da0d:	push   ebx
  41da0e:	mov    ecx,0x65065fff
  41da13:	or     BYTE PTR [edi],0x35
  41da16:	jp     0x41da17
  41da18:	push   edx
  41da19:	jl     0x41d9e0
  41da1b:	cmp    BYTE PTR [ebx],bl
  41da1d:	sub    eax,0xf721392b
  41da22:	push   ebx
  41da23:	loop   0x41da8a
  41da25:	and    al,0xed
  41da27:	pop    edi
  41da28:	cmp    esp,DWORD PTR [edx+0x36353b65]
  41da2e:	lock jo 0x41da10
  41da31:	inc    edi
  41da32:	xchg   ecx,eax
  41da33:	sbb    ah,BYTE PTR [eax]
  41da35:	aas    
  41da36:	sub    BYTE PTR [eax+0x35],bl
  41da39:	outs   dx,DWORD PTR ds:[esi]
  41da3a:	into   
  41da3b:	adc    BYTE PTR [eax+0x2c96b42e],dl
  41da41:	mov    cl,0x1f
  41da43:	in     eax,dx
  41da44:	push   ss
  41da45:	dec    esp
  41da46:	aaa    
  41da47:	pushf  
  41da48:	lahf   
  41da49:	push   esi
  41da4a:	inc    esi
  41da4b:	mov    dl,0x29
  41da4d:	mov    edx,0xe106139f
  41da52:	imul   ecx,DWORD PTR [esi-0x4e],0x9c0b1023
  41da59:	and    BYTE PTR ss:[ecx-0x6],cl
  41da5d:	jo     0x41d9fa
  41da5f:	not    DWORD PTR [edx-0xc80a32f]
  41da65:	cmp    DWORD PTR [ebp-0x3f],ebp
  41da68:	dec    edi
  41da69:	sub    edi,DWORD PTR [edx+0x45]
  41da6c:	iret   
  41da6d:	sub    eax,0x9b8fb8cb
  41da72:	in     al,0xbd
  41da74:	inc    ebp
  41da75:	or     bh,BYTE PTR ds:0xa1a923e4
  41da7b:	pop    esp
  41da7c:	in     eax,0x6f
  41da7e:	(bad)  
  41da7f:	fbstp  TBYTE PTR [ebx]
  41da81:	cmp    eax,0x90c77e72
  41da86:	rol    ecx,cl
  41da88:	mov    DWORD PTR [edx-0x43e1e61e],esi
  41da8e:	test   al,0xfd
  41da90:	rcl    DWORD PTR [ebx+ecx*2+0x71],1
  41da94:	aam    0x7d
  41da96:	sub    edi,ebx
  41da98:	je     0x41dada
  41da9a:	pop    eax
  41da9b:	cwde   
  41da9c:	into   
  41da9d:	les    ebp,FWORD PTR [ebx+0x6d]
  41daa0:	push   ecx
  41daa1:	push   esi
  41daa2:	in     eax,dx
  41daa3:	call   0x36e2:0x1d90123e
  41daaa:	add    DWORD PTR [ecx-0x56],0xcd5d3476
  41dab1:	sbb    al,0xe7
  41dab3:	out    dx,eax
  41dab4:	sbb    DWORD PTR [ecx+ebx*8],0xe0c04cff
  41dabb:	inc    ecx
  41dabc:	dec    eax
  41dabd:	sbb    BYTE PTR [ebx],bl
  41dabf:	jmp    0x3516:0xf83a8bc5
  41dac6:	cmc    
  41dac7:	jb     0x41da59
  41dac9:	push   esi
  41daca:	adc    BYTE PTR [esi+0x4c],0xe9
  41dace:	or     DWORD PTR [ebx-0x41],0x7a
  41dad2:	jp     0x41db44
  41dad4:	fwait
  41dad5:	lods   eax,DWORD PTR ds:[esi]
  41dad6:	out    0xb,al
  41dad8:	xchg   ecx,eax
  41dad9:	ror    BYTE PTR [ecx+ebp*4+0x13],cl
  41dadd:	pop    ebx
  41dade:	lods   eax,DWORD PTR ds:[esi]
  41dadf:	push   edi
  41dae0:	jecxz  0x41dab7
  41dae2:	ins    DWORD PTR es:[edi],dx
  41dae3:	and    eax,0xc2796b99
  41dae8:	xchg   ecx,eax
  41dae9:	sbb    edi,ebp
  41daeb:	std    
  41daec:	clc    
  41daed:	ds mov al,0xf6
  41daf0:	inc    edi
  41daf1:	(bad)  
  41daf2:	cwde   
  41daf3:	cmp    DWORD PTR [edx+0x69],0xe8aec7ed
  41dafa:	xchg   edx,eax
  41dafb:	loop   0x41db02
  41dafd:	xchg   edi,eax
  41dafe:	mov    ds:0xd6f2a33f,eax
  41db03:	inc    esp
  41db04:	or     edx,ebp
  41db06:	jmp    0x30f7d0f9
  41db0b:	int    0xe7
  41db0d:	xor    esi,esp
  41db0f:	or     BYTE PTR [ebx-0x6a],ch
  41db12:	sbb    dh,bl
  41db14:	cld    
  41db15:	mov    cs,ebx
  41db17:	sbb    al,0x7f
  41db19:	std    
  41db1a:	out    dx,eax
  41db1b:	xchg   ecx,eax
  41db1c:	pop    ebx
  41db1d:	lods   al,BYTE PTR ds:[esi]
  41db1e:	test   dl,ah
  41db20:	je     0x41dad1
  41db22:	cs jle 0x41daca
  41db25:	jnp    0x41dac9
  41db27:	mov    eax,DWORD PTR [edx+ebp*4-0x47]
  41db2b:	test   al,bh
  41db2d:	xchg   ebp,eax
  41db2e:	mov    ah,0xb
  41db30:	lahf   
  41db31:	mov    WORD PTR [edi-0x4bc76012],?
  41db37:	ror    edx,0x80
  41db3a:	sub    eax,0xcdda5a52
  41db3f:	test   DWORD PTR [edi+0x64cfac48],ebx
  41db45:	add    BYTE PTR ds:0xfe763893,0xd
  41db4c:	pop    ebp
  41db4d:	inc    edx
  41db4e:	and    DWORD PTR [ebp-0x63649ea3],ebx
  41db54:	mov    eax,0x771d80fc
  41db59:	sbb    edx,DWORD PTR [ebx+0x7920eb34]
  41db5f:	std    
  41db60:	cli    
  41db61:	push   edx
  41db62:	sar    DWORD PTR [ecx],cl
  41db64:	push   ss
  41db65:	mov    al,ds:0x899f5651
  41db6a:	pop    esp
  41db6b:	adc    eax,0xc767816c
  41db70:	dec    edi
  41db71:	push   esi
  41db72:	into   
  41db73:	aam    0xda
  41db75:	jbe    0x41db18
  41db77:	jp     0x41dbd7
  41db79:	daa    
  41db7a:	xchg   edx,eax
  41db7b:	inc    ebx
  41db7c:	jl     0x41dbb7
  41db7e:	dec    edx
  41db7f:	(bad)  
  41db80:	stc    
  41db81:	mov    al,0x63
  41db83:	jne    0x41db46
  41db85:	inc    edx
  41db86:	retf   
  41db87:	rcl    BYTE PTR [esi],0x0
  41db8a:	xchg   ebp,eax
  41db8b:	cli    
  41db8c:	ds xchg ecx,eax
  41db8e:	out    0x9b,al
  41db90:	stc    
  41db91:	inc    ecx
  41db92:	ja     0x41db27
  41db94:	(bad)  
  41db95:	scas   al,BYTE PTR es:[edi]
  41db96:	inc    esi
  41db97:	push   edx
  41db98:	retf   
  41db99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db9a:	in     eax,0x3f
  41db9c:	xchg   edi,eax
  41db9d:	div    bl
  41db9f:	jl     0x41dbc9
  41dba1:	je     0x41db9e
  41dba3:	push   0xffffffb6
  41dba5:	imul   esi,DWORD PTR [ebx+0x65],0x565ce3ae
  41dbac:	sub    ecx,edx
  41dbae:	ja     0x41dbc6
  41dbb0:	pushf  
  41dbb1:	scas   eax,DWORD PTR es:[edi]
  41dbb2:	sub    eax,0xbf9dedd7
  41dbb7:	sub    al,0x53
  41dbb9:	cmp    esi,esp
  41dbbb:	(bad)  
  41dbbd:	mov    es,WORD PTR [esi-0xdfb5094]
  41dbc3:	sbb    esp,ebp
  41dbc5:	xchg   esp,eax
  41dbc6:	ss pop ds
  41dbc8:	lods   al,BYTE PTR ds:[esi]
  41dbc9:	popa   
  41dbca:	cmp    eax,0xa77502fa
  41dbcf:	bound  esp,QWORD PTR [ebx+0x43]
  41dbd2:	mov    dh,BYTE PTR [ecx]
  41dbd4:	cmp    dh,BYTE PTR [eax+0x2544657]
  41dbda:	pop    edx
  41dbdb:	pop    ebp
  41dbdc:	inc    ebp
  41dbdd:	xchg   ebx,eax
  41dbde:	pop    ecx
  41dbdf:	mov    edx,0x687dd9d4
  41dbe4:	add    eax,DWORD PTR [edi-0x6a17a196]
  41dbea:	neg    BYTE PTR [edx+eiz*4-0x4c0552a2]
  41dbf1:	sahf   
  41dbf2:	mov    bl,0x7c
  41dbf4:	aaa    
  41dbf5:	or     cl,cl
  41dbf7:	mov    esp,0x43a5166d
  41dbfc:	loopne 0x41dc46
  41dbfe:	adc    cl,BYTE PTR [ecx+0x55bab93]
  41dc04:	jnp    0x41dbba
  41dc06:	outs   dx,BYTE PTR ds:[esi]
  41dc07:	sahf   
  41dc08:	sbb    al,BYTE PTR ds:0x9567e035
  41dc0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc0f:	dec    ecx
  41dc10:	mov    ds:0x2f5222f9,al
  41dc15:	ret    
  41dc16:	inc    ecx
  41dc17:	adc    al,0xb
  41dc19:	dec    ebp
  41dc1a:	jno    0x41dc3a
  41dc1c:	cwde   
  41dc1d:	sub    bl,BYTE PTR [esp+esi*4-0x63]
  41dc21:	sti    
  41dc22:	mov    eax,ds:0x68611d63
  41dc27:	pop    ebp
  41dc28:	xor    BYTE PTR [edi+edi*1],dh
  41dc2b:	dec    edx
  41dc2c:	dec    edx
  41dc2d:	shr    BYTE PTR [esi-0x178bc355],cl
  41dc33:	and    BYTE PTR [ebx-0x2632c963],cl
  41dc39:	sub    DWORD PTR [edi+eax*4-0x6c],eax
  41dc3d:	xchg   edx,eax
  41dc3e:	dec    eax
  41dc3f:	aam    0x2d
  41dc41:	sub    BYTE PTR [esi-0x7ad26117],cl
  41dc47:	out    0xed,al
  41dc49:	pop    ecx
  41dc4a:	xor    BYTE PTR [ebx+0x1c397995],bl
  41dc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc51:	pop    es
  41dc52:	lds    esp,FWORD PTR [edi+0x7b1db08e]
  41dc58:	mov    edi,0x962d27a3
  41dc5d:	(bad)  
  41dc5e:	cld    
  41dc5f:	hlt    
  41dc60:	inc    ebx
  41dc61:	ins    BYTE PTR es:[edi],dx
  41dc62:	icebp  
  41dc63:	leave  
  41dc64:	inc    edx
  41dc65:	inc    edx
  41dc66:	xchg   DWORD PTR [ebp+0x17],ebp
  41dc69:	adc    DWORD PTR [ecx],esi
  41dc6b:	pop    edi
  41dc6c:	xor    BYTE PTR [edi+0x3c],0x74
  41dc70:	inc    ecx
  41dc71:	pop    DWORD PTR [eax+ebp*8+0xd]
  41dc75:	aam    0x51
  41dc77:	ret    0x965d
  41dc7a:	push   ecx
  41dc7b:	je     0x41dc4a
  41dc7d:	jmp    0x71c4:0x8a0b6f96
  41dc84:	cli    
  41dc85:	test   eax,0x2881ee4e
  41dc8a:	stos   BYTE PTR es:[edi],al
  41dc8b:	imul   esi,DWORD PTR [edi-0x6],0x3e316df8
  41dc92:	or     bh,BYTE PTR [ecx-0x1b885136]
  41dc98:	pop    eax
  41dc99:	stos   DWORD PTR es:[edi],eax
  41dc9a:	mov    bh,BYTE PTR [edx+0x11c155a0]
  41dca0:	mov    eax,ds:0xb6c5343
  41dca5:	shr    esp,cl
  41dca7:	mov    ebx,0x7af2e99d
  41dcac:	int    0xd8
  41dcae:	(bad)  
  41dcaf:	mov    edx,0x6ba82cc7
  41dcb4:	or     BYTE PTR [eax+0x7af84e59],0x6a
  41dcbb:	push   cs
  41dcbc:	fst    DWORD PTR [ecx-0x47b10e2c]
  41dcc2:	out    0x7b,eax
  41dcc4:	stc    
  41dcc5:	xchg   BYTE PTR [edx-0x62f0c605],dl
  41dccb:	or     al,0x94
  41dccd:	test   eax,0xe731c251
  41dcd2:	sbb    al,BYTE PTR [edi-0x40405991]
  41dcd8:	into   
  41dcd9:	dec    edi
  41dcda:	repz dec eax
  41dcdc:	jns    0x41dce1
  41dcde:	mov    ebp,0xd3ef8fd7
  41dce3:	pop    edx
  41dce4:	inc    ecx
  41dce5:	push   ss
  41dce6:	xor    ebx,edx
  41dce8:	pushf  
  41dce9:	pop    eax
  41dcea:	push   ebp
  41dceb:	mov    esi,0xa240ab82
  41dcf0:	or     DWORD PTR [esi-0x5f],eax
  41dcf3:	xchg   ecx,eax
  41dcf4:	sub    BYTE PTR [edi],bh
  41dcf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcf7:	pop    ss
  41dcf8:	call   0xa406aa35
  41dcfd:	(bad)  
  41dcfe:	mov    cl,0x3d
  41dd00:	inc    edx
  41dd01:	push   edx
  41dd02:	inc    esi
  41dd03:	stos   BYTE PTR es:[edi],al
  41dd04:	lods   al,BYTE PTR ds:[esi]
  41dd05:	fisttp DWORD PTR [ecx-0x140c81c0]
  41dd0b:	lea    edi,[ecx-0x7717f7af]
  41dd11:	xchg   esi,eax
  41dd12:	adc    BYTE PTR [ebx],dl
  41dd14:	pop    ss
  41dd15:	jmp    0x3c8c:0x32cb7cd
  41dd1c:	in     eax,dx
  41dd1d:	pop    esi
  41dd1e:	dec    edi
  41dd1f:	mov    eax,0xec4bd6ea
  41dd24:	mov    DWORD PTR [esi],edx
  41dd26:	add    eax,0x429565cd
  41dd2b:	test   BYTE PTR [edx+esi*8+0x29328626],al
  41dd32:	adc    ah,ah
  41dd34:	rcr    BYTE PTR [edx+0x59],1
  41dd37:	xor    ch,BYTE PTR [edx+0x4e]
  41dd3a:	sub    DWORD PTR [esi],ecx
  41dd3c:	popf   
  41dd3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd3e:	stos   DWORD PTR es:[edi],eax
  41dd3f:	jnp    0x41dd57
  41dd41:	in     eax,0xd3
  41dd43:	sbb    eax,0x96152b18
  41dd48:	out    0x1,al
  41dd4a:	push   es
  41dd4b:	out    dx,eax
  41dd4c:	xchg   DWORD PTR [edi],edx
  41dd4e:	mov    eax,ds:0x715a2db5
  41dd53:	stc    
  41dd54:	pop    edx
  41dd55:	mov    dl,0xf6
  41dd57:	or     eax,0xaa0e3d70
  41dd5c:	adc    bl,BYTE PTR [edx-0x29a034ef]
  41dd62:	ds scas eax,DWORD PTR es:[edi]
  41dd64:	mov    ch,0x85
  41dd66:	add    BYTE PTR [edx+edi*4],ah
  41dd69:	push   ebp
  41dd6a:	push   cs
  41dd6b:	mov    edx,0x74c64791
  41dd70:	lds    esi,FWORD PTR [edx]
  41dd72:	sub    DWORD PTR [ecx+0x602ab984],0x4f7c4732
  41dd7c:	dec    ebx
  41dd7d:	push   ebx
  41dd7e:	ret    
  41dd7f:	xor    DWORD PTR [eax],eax
  41dd81:	pop    eax
  41dd82:	test   eax,0xb016d12e
  41dd87:	sub    dl,cl
  41dd89:	test   al,0x93
  41dd8b:	cdq    
  41dd8c:	dec    ebx
  41dd8d:	mov    al,0x49
  41dd8f:	push   edx
  41dd90:	repz not DWORD PTR [esi-0x2b9fda5a]
  41dd97:	cmp    BYTE PTR [esi+eax*4-0x13411145],0x62
  41dd9f:	aas    
  41dda0:	int    0xe8
  41dda2:	shl    DWORD PTR [edi-0x75],cl
  41dda5:	push   es
  41dda6:	outs   dx,DWORD PTR ds:[esi]
  41dda7:	jo     0x41dd5a
  41dda9:	(bad)  
  41ddaa:	fcomp  QWORD PTR [ecx+0x46]
  41ddad:	add    al,0x5f
  41ddaf:	daa    
  41ddb0:	loope  0x41ddc3
  41ddb2:	dec    esi
  41ddb3:	mov    ch,0x29
  41ddb5:	shl    DWORD PTR [ecx-0x5f],cl
  41ddb8:	popf   
  41ddb9:	test   DWORD PTR [edi],esp
  41ddbb:	test   ecx,0x851f95db
  41ddc1:	mov    ah,0xa9
  41ddc3:	jp     0x41dd7d
  41ddc5:	ret    
  41ddc6:	fdiv   DWORD PTR [edi-0x2a985134]
  41ddcc:	(bad)  
  41ddcd:	jno    0x41dd75
  41ddcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd0:	cdq    
  41ddd1:	sbb    dh,BYTE PTR [ebx-0x1f]
  41ddd4:	push   cs
  41ddd5:	and    ah,dh
  41ddd7:	mov    edx,0xefc68f43
  41dddc:	scas   al,BYTE PTR es:[edi]
  41dddd:	dec    edi
  41ddde:	(bad)  [esi-0x22]
  41dde1:	jbe    0x41de2c
  41dde3:	mov    ch,0xec
  41dde5:	lods   eax,DWORD PTR ds:[esi]
  41dde6:	lods   eax,DWORD PTR ds:[esi]
  41dde7:	ror    edi,0xbf
  41ddea:	pop    edx
  41ddeb:	mov    dh,0x4
  41dded:	mov    cs,WORD PTR [ebp+0x1cc90ec0]
  41ddf3:	daa    
  41ddf4:	adc    DWORD PTR [edi-0x47],0xffffffe0
  41ddf8:	and    al,0x1d
  41ddfa:	xor    DWORD PTR [ebp+0x40],esi
  41ddfd:	fdivr  st(5),st
  41ddff:	pop    edx
  41de00:	inc    edx
  41de01:	xor    edx,DWORD PTR [edi-0x3026517e]
  41de07:	sbb    BYTE PTR [eax],al
  41de09:	push   ecx
  41de0a:	icebp  
  41de0b:	clc    
  41de0c:	add    eax,0x77c96669
  41de11:	pop    edi
  41de12:	jbe    0x41de13
  41de14:	jns    0x41de0c
  41de16:	sbb    BYTE PTR [ebx-0x2a],0x5
  41de1a:	fs jns 0x41ddfb
  41de1d:	cmp    al,0x23
  41de1f:	ja     0x41ddec
  41de21:	cli    
  41de22:	mov    ch,0x48
  41de24:	push   ebx
  41de25:	pop    es
  41de26:	xor    DWORD PTR [ecx],0xbcf6eab1
  41de2c:	push   esi
  41de2d:	xchg   ecx,eax
  41de2e:	push   eax
  41de2f:	div    eax
  41de31:	sar    eax,cl
  41de33:	fcom   QWORD PTR [ebx]
  41de35:	inc    esi
  41de36:	mov    al,ds:0x613e805e
  41de3b:	lahf   
  41de3c:	clc    
  41de3d:	jge    0x41dea1
  41de3f:	pop    ds
  41de40:	jmp    0x1eb5:0x39107908
  41de47:	mov    al,0xad
  41de49:	dec    esi
  41de4a:	adc    DWORD PTR [ecx],edi
  41de4c:	cmp    ebp,ebp
  41de4e:	test   al,0x44
  41de50:	pop    esp
  41de51:	stos   BYTE PTR es:[edi],al
  41de52:	push   eax
  41de53:	(bad)  
  41de56:	aaa    
  41de57:	popf   
  41de58:	push   ds
  41de59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de5a:	inc    edx
  41de5b:	stc    
  41de5c:	sub    ebp,DWORD PTR [eax+esi*8+0x22]
  41de60:	arpl   WORD PTR [edx],si
  41de62:	jo     0x41de94
  41de64:	or     cl,cl
  41de66:	mov    eax,ds:0xcf227899
  41de6b:	mov    ebx,0xf0ac7a0a
  41de70:	fs jg  0x41de43
  41de73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de74:	ror    BYTE PTR [ecx+0x7591193b],1
  41de7a:	sub    al,0xb0
  41de7c:	leave  
  41de7d:	mov    ebp,DWORD PTR [edx+0xdad9cbe]
  41de83:	mov    eax,ds:0x2a6a9b40
  41de88:	mov    dl,0xe9
  41de8a:	add    ebx,DWORD PTR [ebp-0x20]
  41de8d:	loope  0x41def0
  41de8f:	jnp    0x41def0
  41de91:	add    DWORD PTR [eax+0x55],eax
  41de94:	pop    ecx
  41de95:	sub    cl,BYTE PTR fs:[eax-0x6b]
  41de99:	or     esi,DWORD PTR [ecx+0x10baaeb1]
  41de9f:	mov    bh,0x7e
  41dea1:	fistp  DWORD PTR [esi+ecx*2+0x1]
  41dea5:	dec    ebx
  41dea6:	lods   al,BYTE PTR ds:[esi]
  41dea7:	arpl   WORD PTR [edx],dx
  41dea9:	mov    esp,0xf67b50d4
  41deae:	clc    
  41deaf:	jns    0x41debb
  41deb1:	xchg   ecx,eax
  41deb2:	pop    ds
  41deb3:	adc    dl,BYTE PTR [edi-0x9bc1e45]
  41deb9:	mov    eax,ds:0xa4741efa
  41debe:	sub    al,0xcc
  41dec0:	mov    BYTE PTR [ebx],bh
  41dec2:	rcl    BYTE PTR [ebp-0x200072ab],0x2b
  41dec9:	jne    0x41deb1
  41decb:	mov    DWORD PTR [esi+eax*4+0x2d],ecx
  41decf:	ds mov edx,0xd2fa6ae5
  41ded5:	cmp    eax,DWORD PTR [edi]
  41ded7:	into   
  41ded8:	or     al,0xe2
  41deda:	cmp    ebp,DWORD PTR [edi-0x44471b33]
  41dee0:	mov    esp,0x8aeb6d9a
  41dee5:	std    
  41dee6:	adc    eax,0xa37bd9e1
  41deec:	mov    eax,ds:0x3a8a6375
  41def1:	xchg   esp,eax
  41def2:	add    esp,DWORD PTR [ebx+esi*4-0x3f0af684]
  41def9:	jmp    0x2870:0xfe405be3
  41df00:	jecxz  0x41ded8
  41df02:	inc    DWORD PTR [ecx-0x3962f8e1]
  41df08:	fsub   DWORD PTR [esi+0xa]
  41df0b:	loop   0x41df89
  41df0d:	mov    DWORD PTR [esi-0x4f],esp
  41df10:	int3   
  41df11:	cmp    BYTE PTR [eax+0x6e],0x2f
  41df15:	fldcw  WORD PTR [edx]
  41df17:	mov    ebx,0x4e70873c
  41df1c:	dec    edi
  41df1d:	inc    ecx
  41df1e:	and    DWORD PTR [ecx],esp
  41df20:	test   al,0x85
  41df22:	mov    al,ds:0x67057db3
  41df27:	or     esp,DWORD PTR [edi+0x35f3e79]
  41df2d:	(bad)  
  41df2f:	cmp    BYTE PTR [eax],dh
  41df31:	adc    eax,0x108746f5
  41df36:	mov    ch,0x37
  41df38:	clc    
  41df39:	sbb    eax,0x868d4ff2
  41df3e:	xor    BYTE PTR [esp+ecx*8-0xb2b2b27],bh
  41df45:	jo     0x41def9
  41df47:	in     eax,0x53
  41df49:	and    bh,BYTE PTR [eax]
  41df4b:	jns    0x41df19
  41df4d:	jle    0x41df24
  41df4f:	push   ds
  41df50:	fwait
  41df51:	and    BYTE PTR [edi-0x65e1fcbf],dl
  41df57:	inc    eax
  41df58:	push   0xf3ca70a4
  41df5d:	sbb    DWORD PTR [ebx-0x37],edx
  41df60:	jecxz  0x41df00
  41df62:	mov    ch,0xb2
  41df64:	test   al,0xbf
  41df66:	fwait
  41df67:	sub    DWORD PTR [esi],ebx
  41df69:	(bad)  
  41df6a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df6c:	mov    ds:0xdd875953,al
  41df71:	sub    al,0xef
  41df73:	push   cs
  41df74:	jo     0x41dfc6
  41df76:	rcr    DWORD PTR [ecx+edx*1+0x34],1
  41df7a:	add    eax,0x357e2d0e
  41df7f:	inc    ebp
  41df80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df81:	inc    edx
  41df82:	icebp  
  41df83:	out    dx,eax
  41df84:	shr    BYTE PTR [eax-0x56],1
  41df87:	xchg   esp,eax
  41df88:	in     al,0xb0
  41df8a:	inc    ecx
  41df8b:	cmp    ch,cl
  41df8d:	icebp  
  41df8e:	inc    esp
  41df8f:	or     DWORD PTR [ebx],esp
  41df91:	pop    eax
  41df92:	push   es
  41df93:	sbb    BYTE PTR [ecx],ah
  41df95:	jb     0x41df5b
  41df97:	xchg   ebp,eax
  41df98:	jae    0x41df7a
  41df9a:	aam    0x69
  41df9c:	test   esp,edx
  41df9e:	push   0xbf7c55bd
  41dfa3:	cmp    eax,0x5b7518dc
  41dfa8:	adc    esp,DWORD PTR [esi-0x30f2fc92]
  41dfae:	add    DWORD PTR [eax+0x53442da7],edx
  41dfb4:	mov    eax,0xc9d0581e
  41dfb9:	leave  
  41dfba:	shl    DWORD PTR [ebx],cl
  41dfbc:	outs   dx,BYTE PTR ds:[esi]
  41dfbd:	xor    BYTE PTR [ebx],bl
  41dfbf:	mov    eax,ebp
  41dfc1:	out    0xc1,al
  41dfc3:	xchg   ecx,eax
  41dfc4:	leave  
  41dfc5:	addr16 add eax,0xf5cf9132
  41dfcb:	push   cs
  41dfcc:	lods   al,BYTE PTR ds:[esi]
  41dfcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfce:	mov    cl,0x47
  41dfd0:	jp     0x41df57
  41dfd2:	iret   
  41dfd3:	mov    ch,BYTE PTR [edx-0x31e3969e]
  41dfd9:	cmp    BYTE PTR [edi],ch
  41dfdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfdc:	jne    0x41df9a
  41dfde:	mov    esi,0x7405eeee
  41dfe3:	fnsave [ebp-0x5a5ecdc3]
  41dfe9:	call   0x91ae3e6d
  41dfee:	fbld   TBYTE PTR [ebx]
  41dff0:	std    
  41dff1:	jge    0x41dfe0
  41dff3:	scas   al,BYTE PTR es:[edi]
  41dff4:	imul   ecx,DWORD PTR [edi+0x4212e70e],0x88506a9a
  41dffe:	xchg   ebp,eax
  41dfff:	mov    esi,0xe2c49bbb
  41e004:	lea    esp,[ebx]
  41e006:	hlt    
  41e007:	mov    ch,0x6d
  41e009:	or     ah,bl
  41e00b:	mov    edx,0x7379bab7
  41e010:	jmp    0x41e01a
  41e012:	imul   eax,DWORD PTR [edi],0x263b9b6d
  41e018:	inc    ebx
  41e019:	ins    DWORD PTR es:[edi],dx
  41e01a:	(bad)  
  41e01c:	clc    
  41e01d:	mov    edx,0xf93c151e
  41e022:	cmc    
  41e023:	mov    ch,dh
  41e025:	xor    ebp,DWORD PTR [esi]
  41e027:	cmp    al,0xab
  41e029:	out    0xf1,al
  41e02b:	fcom   st(1)
  41e02d:	or     BYTE PTR [edi],al
  41e02f:	lea    edi,[ebp+0x5b]
  41e032:	cwde   
  41e033:	dec    ebp
  41e034:	(bad)  
  41e035:	xor    eax,0xf0def2b1
  41e03a:	gs jle 0x41dfeb
  41e03d:	jp     0x41e0a2
  41e03f:	popa   
  41e040:	or     al,0x54
  41e042:	jge    0x41e002
  41e044:	retf   
  41e045:	stc    
  41e046:	inc    edi
  41e047:	cwde   
  41e048:	in     al,dx
  41e049:	es into 
  41e04b:	jmp    0x4a656303
  41e050:	cdq    
  41e051:	cmp    DWORD PTR [ebx-0x68],ebp
  41e054:	add    ebp,esp
  41e056:	scas   eax,DWORD PTR es:[edi]
  41e057:	aas    
  41e058:	and    dl,BYTE PTR [esi]
  41e05a:	xchg   DWORD PTR [esi-0x62],eax
  41e05d:	test   al,0xc2
  41e05f:	test   DWORD PTR [ebx],edx
  41e061:	push   eax
  41e062:	dec    edx
  41e063:	sub    DWORD PTR ds:0x3b149e88,eax
  41e069:	in     al,dx
  41e06a:	xchg   edi,eax
  41e06b:	shl    DWORD PTR [ebx+0x10],1
  41e06e:	mov    ah,0xcc
  41e070:	ss ja  0x41e050
  41e073:	(bad)  
  41e075:	or     BYTE PTR [ebx-0x18c11a22],ch
  41e07b:	jecxz  0x41e018
  41e07d:	daa    
  41e07e:	sti    
  41e07f:	jmp    0xaff5fc8
  41e084:	cwde   
  41e085:	xor    dh,BYTE PTR [ebp-0x7d55cb4d]
  41e08b:	arpl   WORD PTR [eax],di
  41e08d:	fwait
  41e08e:	mov    bl,0x7a
  41e090:	mov    ds:0xf2ef1e7c,al
  41e095:	jecxz  0x41e0c3
  41e097:	or     eax,0x9f71fa95
  41e09c:	xchg   ebx,eax
  41e09d:	mov    ds:0x6e4448d5,al
  41e0a2:	xchg   ebp,eax
  41e0a3:	popf   
  41e0a4:	jb     0x41e0b3
  41e0a6:	xor    cl,ah
  41e0a8:	je     0x41e03c
  41e0aa:	(bad)  [ecx+0x33]
  41e0ad:	aaa    
  41e0ae:	lea    esi,[ebp+0x5e0d2f36]
  41e0b4:	ret    
  41e0b5:	push   ds
  41e0b6:	add    DWORD PTR [edx],0xffffffd6
  41e0b9:	(bad)  
  41e0bb:	sub    al,0xbe
  41e0bd:	jne    0x41e048
  41e0bf:	dec    ebx
  41e0c0:	fcmove st,st(2)
  41e0c2:	ret    0x2c6c
  41e0c5:	lds    ebp,FWORD PTR [esi+0x1c]
  41e0c8:	and    eax,0xba161baa
  41e0cd:	cmp    DWORD PTR [ebx+0xbcfedbe],eax
  41e0d3:	inc    esi
  41e0d4:	pusha  
  41e0d5:	xor    BYTE PTR [esi+0x1a31d4a7],dl
  41e0db:	mov    bh,0xae
  41e0dd:	jmp    0xb4c6:0xa6589b1c
  41e0e4:	sti    
  41e0e5:	xor    eax,0xdbc83a15
  41e0ea:	mov    cl,0x26
  41e0ec:	in     eax,0x6c
  41e0ee:	aaa    
  41e0ef:	int3   
  41e0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0f1:	inc    eax
  41e0f2:	icebp  
  41e0f3:	icebp  
  41e0f4:	fidiv  DWORD PTR [ecx+esi*1]
  41e0f7:	fidivr DWORD PTR [ebp+0x2b]
  41e0fa:	mov    al,0x61
  41e0fc:	bswap  edi
  41e0fe:	jmp    0x56a1:0x81e79cb9
  41e105:	aaa    
  41e106:	pop    edi
  41e107:	mov    ah,0x94
  41e109:	out    0x86,eax
  41e10b:	and    DWORD PTR [ebx+0x66],0xafc7c92d
  41e112:	jecxz  0x41e0d8
  41e114:	cdq    
  41e115:	inc    esp
  41e116:	pop    es
  41e117:	daa    
  41e118:	push   ss
  41e119:	in     eax,dx
  41e11a:	rcr    DWORD PTR [eax],0xda
  41e11d:	mov    esi,?
  41e11f:	cld    
  41e120:	es jo  0x41e16a
  41e123:	dec    esi
  41e124:	xchg   esp,eax
  41e125:	fs (bad) 
  41e127:	std    
  41e128:	push   ds
  41e129:	push   esi
  41e12a:	aas    
  41e12b:	and    eax,0x2a1dec60
  41e130:	xor    BYTE PTR [edx-0x1120e7fa],bl
  41e136:	arpl   WORD PTR [ecx+0x0],ax
  41e139:	push   ebx
  41e13a:	out    dx,al
  41e13b:	sub    ebx,DWORD PTR gs:[ecx+0x5f]
  41e13f:	xlat   BYTE PTR ds:[ebx]
  41e140:	ins    DWORD PTR es:[edi],dx
  41e141:	xchg   edi,eax
  41e142:	jmp    0x41e193
  41e144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e145:	cmc    
  41e146:	ret    0x20c3
  41e149:	xchg   esp,eax
  41e14a:	arpl   WORD PTR [ebx-0x68],si
  41e14d:	dec    edi
  41e14e:	in     eax,0x9d
  41e150:	add    bl,BYTE PTR [edx+eiz*1+0x127aa1e2]
  41e157:	add    ebp,ecx
  41e159:	jmp    0x830c0194
  41e15e:	sub    DWORD PTR [ebx-0x11],edx
  41e161:	mov    edx,0x433a99e0
  41e166:	pop    edi
  41e167:	aad    0xa2
  41e169:	jnp    0x41e1d3
  41e16b:	pop    ebx
  41e16c:	stc    
  41e16d:	popa   
  41e16e:	pop    ecx
  41e16f:	push   ds
  41e170:	cmp    al,0x8d
  41e172:	xor    DWORD PTR [eax+0x60],ebx
  41e175:	aas    
  41e176:	(bad)  
  41e177:	jne    0x41e1d3
  41e179:	shl    DWORD PTR ds:0x8b07bc19,cl
  41e17f:	sbb    eax,0xb29ce336
  41e184:	(bad)  
  41e185:	cwde   
  41e186:	jmp    0x486f0dc7
  41e18b:	xor    bl,BYTE PTR [ebx+0x4d]
  41e18e:	xor    al,0x1
  41e190:	loope  0x41e145
  41e192:	cmp    al,0x80
  41e194:	std    
  41e195:	jns    0x41e127
  41e197:	mov    ebp,0x94916ba4
  41e19c:	adc    al,0x81
  41e19e:	xor    al,BYTE PTR [edx+0x1c]
  41e1a1:	push   0xffffffd5
  41e1a3:	and    esp,DWORD PTR [esi+0x42]
  41e1a6:	sub    BYTE PTR [bx+0x81f],0xd2
  41e1ac:	arpl   WORD PTR [esi-0x1d3f2475],dx
  41e1b2:	stc    
  41e1b3:	jb     0x41e1b0
  41e1b5:	mov    dl,0x8c
  41e1b7:	sub    al,0x7e
  41e1b9:	jg     0x41e149
  41e1bb:	lock adc al,0x4f
  41e1be:	inc    ecx
  41e1bf:	out    0x11,al
  41e1c1:	iret   
  41e1c2:	aas    
  41e1c3:	fild   QWORD PTR [eax+edi*1+0x4b]
  41e1c7:	out    0xca,al
  41e1c9:	push   edx
  41e1ca:	mov    esp,0x4f74a194
  41e1cf:	cmp    al,BYTE PTR [eax+eax*2+0x2ba6f5ed]
  41e1d6:	in     al,0xe9
  41e1d8:	xchg   esp,eax
  41e1d9:	ffreep st(2)
  41e1db:	sub    eax,0x66910252
  41e1e0:	les    edx,FWORD PTR [eax+0x4a]
  41e1e3:	in     eax,0x27
  41e1e5:	pop    ds
  41e1e6:	pop    eax
  41e1e7:	mov    ecx,0x87be608b
  41e1ec:	test   DWORD PTR ds:0xd5f4b2e2,ebx
  41e1f2:	jge    0x41e190
  41e1f4:	sbb    eax,0x8f683c95
  41e1f9:	or     edi,ebx
  41e1fb:	cmc    
  41e1fc:	or     al,0x1b
  41e1fe:	daa    
  41e1ff:	aas    
  41e200:	mov    ds:0x1c2e7723,al
  41e205:	arpl   dx,ax
  41e207:	jmp    0xbbba:0xe425b700
  41e20e:	loope  0x41e1e5
  41e210:	pusha  
  41e211:	stos   BYTE PTR es:[edi],al
  41e212:	push   ebx
  41e213:	xchg   edi,eax
  41e214:	jne    0x41e27c
  41e216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e217:	inc    ebx
  41e218:	xchg   ecx,eax
  41e219:	pop    ss
  41e21a:	(bad)  
  41e21b:	pop    edi
  41e21c:	dec    esp
  41e21d:	lock int3 
  41e21f:	test   DWORD PTR [eax],eax
  41e221:	jmp    0x41e1bc
  41e223:	pusha  
  41e224:	mov    cl,dh
  41e226:	mov    dh,0x3e
  41e228:	and    ah,BYTE PTR [edx]
  41e22a:	or     ah,BYTE PTR [esi]
  41e22c:	and    BYTE PTR [ebp+0x51cc99ed],bl
  41e232:	xor    DWORD PTR [ecx-0x930cf2d],edi
  41e238:	(bad)  
  41e23a:	push   edi
  41e23b:	hlt    
  41e23c:	xor    dh,dh
  41e23e:	dec    esp
  41e23f:	daa    
  41e240:	in     al,0xbc
  41e242:	dec    eax
  41e243:	dec    ecx
  41e244:	jg     0x41e261
  41e246:	pop    ss
  41e247:	fsubr  QWORD PTR [edx+0x67]
  41e24a:	iret   
  41e24b:	jbe    0x41e29e
  41e24d:	xchg   edi,eax
  41e24e:	push   cs
  41e24f:	sbb    DWORD PTR [eax-0x3f08bc71],ebp
  41e255:	and    ebx,DWORD PTR ds:0x7e623559
  41e25b:	add    ebp,DWORD PTR [edi+edx*4]
  41e25e:	pop    ebp
  41e25f:	retf   0x34d7
  41e262:	jecxz  0x41e2a9
  41e264:	pushf  
  41e265:	(bad)  [edi]
  41e267:	fpatan 
  41e269:	jo     0x41e2a9
  41e26b:	jl     0x41e26a
  41e26d:	ins    DWORD PTR es:[edi],dx
  41e26e:	daa    
  41e26f:	jno    0x41e209
  41e271:	mov    ch,0x3f
  41e273:	in     al,0x43
  41e275:	inc    esp
  41e276:	ins    DWORD PTR es:[edi],dx
  41e277:	ret    
  41e278:	popa   
  41e279:	or     BYTE PTR [eax+0x50],al
  41e27c:	push   ds
  41e27d:	sbb    dl,BYTE PTR [eax+0x38aa07d]
  41e283:	addr16 (bad) 
  41e285:	test   al,0x4a
  41e287:	and    ah,ah
  41e289:	push   eax
  41e28a:	inc    esp
  41e28b:	(bad)  
  41e28c:	mov    eax,ds:0x5b2d5b68
  41e291:	or     BYTE PTR [eax-0x4e],ah
  41e294:	push   cs
  41e295:	cli    
  41e296:	or     eax,0x5d29bb5a
  41e29b:	call   0x88e5:0xfa13f4b5
  41e2a2:	iret   
  41e2a3:	xchg   edx,eax
  41e2a4:	enter  0x3369,0xfa
  41e2a8:	cmp    DWORD PTR [edx-0x73],ebx
  41e2ab:	stos   DWORD PTR es:[edi],eax
  41e2ac:	sar    BYTE PTR [ebp-0x26],0x8b
  41e2b0:	fwait
  41e2b1:	(bad)  
  41e2b2:	rcr    DWORD PTR [ecx+0x4eeca322],1
  41e2b8:	out    0xba,eax
  41e2ba:	cmp    dh,BYTE PTR [edi-0x68]
  41e2bd:	scas   eax,DWORD PTR es:[edi]
  41e2be:	xlat   BYTE PTR ds:[ebx]
  41e2bf:	cs repz pop edx
  41e2c2:	int3   
  41e2c3:	sbb    esp,edi
  41e2c5:	mov    ecx,0xdfdffda9
  41e2ca:	cli    
  41e2cb:	mov    al,0x2e
  41e2cd:	cmp    DWORD PTR [edx+0x5f2f1880],ecx
  41e2d3:	adc    BYTE PTR [eax+0x1e],al
  41e2d6:	mov    ah,0x95
  41e2d8:	inc    ecx
  41e2d9:	in     al,dx
  41e2da:	xor    eax,0x1c81ec82
  41e2df:	es inc ecx
  41e2e1:	or     al,0x6f
  41e2e3:	xchg   esi,eax
  41e2e4:	pop    ds
  41e2e5:	bound  esp,QWORD PTR [eax]
  41e2e7:	clc    
  41e2e8:	cmp    esi,esi
  41e2ea:	xor    al,bh
  41e2ec:	push   0xa25beb7
  41e2f1:	push   ebp
  41e2f2:	inc    ecx
  41e2f3:	jmp    0x8757:0xe2bf088b
  41e2fa:	pushf  
  41e2fb:	scas   al,BYTE PTR es:[edi]
  41e2fc:	sub    al,0x95
  41e2fe:	sub    al,0x3d
  41e300:	sub    al,0xc1
  41e302:	test   ch,ch
  41e304:	cli    
  41e305:	into   
  41e306:	test   al,0x96
  41e308:	xor    DWORD PTR [ecx],esi
  41e30a:	mov    ebp,0x23d678f
  41e30f:	cdq    
  41e310:	(bad)  [esi+0x2753e5ae]
  41e316:	(bad)  
  41e317:	nop
  41e318:	call   0xf7d1:0x53a5af99
  41e31f:	xchg   ebx,eax
  41e320:	mov    ebp,esi
  41e322:	sbb    dl,BYTE PTR [edi+0x428a070]
  41e328:	push   edx
  41e329:	aas    
  41e32a:	cmp    al,0x35
  41e32c:	xchg   DWORD PTR [ecx],edx
  41e32e:	pushf  
  41e32f:	pop    ebp
  41e330:	jnp    0x41e2d8
  41e332:	bound  esp,QWORD PTR [edi]
  41e334:	or     eax,0x3719c537
  41e339:	loopne 0x41e35c
  41e33b:	sbb    BYTE PTR [eax],0x74
  41e33e:	pop    ebx
  41e33f:	ins    BYTE PTR es:[edi],dx
  41e340:	gs (bad) 
  41e342:	jg     0x41e339
  41e344:	(bad)  
  41e345:	adc    eax,0xb51c1735
  41e34a:	and    eax,0x7c38c21d
  41e34f:	cs xchg esp,eax
  41e351:	mov    bl,BYTE PTR [eax]
  41e353:	xor    bl,BYTE PTR [ebx]
  41e355:	les    ebp,FWORD PTR [ecx]
  41e357:	cmp    cl,BYTE PTR [ecx]
  41e359:	cld    
  41e35a:	mov    WORD PTR [ecx],fs
  41e35c:	mov    ebx,0xfd216ab2
  41e361:	jne    0x41e394
  41e363:	jge    0x41e30d
  41e365:	jg     0x41e326
  41e367:	xchg   BYTE PTR [eax],cl
  41e369:	loope  0x41e34f
  41e36b:	arpl   WORD PTR [esi+ecx*1-0x37],ax
  41e36f:	and    eax,0xc5f62908
  41e374:	cmp    dl,BYTE PTR [ebx-0x5e]
  41e377:	outs   dx,DWORD PTR ds:[esi]
  41e378:	fs pusha 
  41e37a:	xchg   ecx,eax
  41e37b:	mov    BYTE PTR [edx+0x167198c2],al
  41e381:	rcr    BYTE PTR ds:0x6d5bc819,1
  41e387:	loopne 0x41e3fe
  41e389:	mov    eax,ds:0x9a9e80af
  41e38e:	and    eax,edi
  41e390:	out    0x40,eax
  41e392:	mov    edi,0xa0b9ee5f
  41e397:	sbb    DWORD PTR [ebx+0x689060bf],ebx
  41e39d:	mov    dl,0x32
  41e39f:	push   ss
  41e3a0:	sar    edx,1
  41e3a2:	dec    edi
  41e3a3:	test   BYTE PTR [ebx-0x6bbccc2c],bh
  41e3a9:	mov    edi,0x1102d752
  41e3ae:	lds    eax,FWORD PTR [eax-0x510cd0c5]
  41e3b4:	push   esp
  41e3b5:	mov    eax,gs
  41e3b7:	mov    cl,0x5f
  41e3b9:	ja     0x41e42b
  41e3bb:	arpl   WORD PTR [eax-0x41241358],dx
  41e3c1:	or     BYTE PTR [eax],ah
  41e3c3:	jp     0x41e3c6
  41e3c5:	retf   0x6f27
  41e3c8:	scas   eax,DWORD PTR es:[edi]
  41e3c9:	fisubr WORD PTR [esp+eax*8+0x1e]
  41e3cd:	xor    dh,0xbc
  41e3d0:	sti    
  41e3d1:	retf   
  41e3d2:	mov    al,0x39
  41e3d4:	pop    ds
  41e3d5:	jbe    0x41e3d0
  41e3d7:	fmul   st,st(2)
  41e3d9:	jecxz  0x41e3a4
  41e3db:	adc    DWORD PTR [esi-0x40],edi
  41e3de:	aas    
  41e3df:	cmp    eax,0x72553b5c
  41e3e4:	out    dx,al
  41e3e5:	mov    eax,0xd59fa2f4
  41e3ea:	das    
  41e3eb:	jle    0x41e438
  41e3ed:	sbb    BYTE PTR [edi+eiz*2-0x3c],dl
  41e3f1:	xacquire xchg DWORD PTR [ebx+0x71e5a889],ebp
  41e3f8:	in     eax,0xfc
  41e3fa:	bound  ecx,QWORD PTR [edx+0x9a1b991]
  41e400:	(bad)  
  41e401:	call   FWORD PTR [esi+0x33996301]
  41e407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e408:	lods   eax,DWORD PTR ds:[esi]
  41e409:	xchg   BYTE PTR [edi+0x6a309590],cl
  41e40f:	shl    BYTE PTR [esi],0x68
  41e412:	int    0x35
  41e414:	cld    
  41e415:	jbe    0x41e48c
  41e417:	call   0x5bc37e96
  41e41c:	lock js 0x41e3c9
  41e41f:	and    DWORD PTR [ebx+0x27743141],esp
  41e425:	loopne 0x41e3ee
  41e427:	inc    esi
  41e428:	pop    ds
  41e429:	test   eax,0x329c91e1
  41e42e:	dec    edi
  41e42f:	in     eax,dx
  41e430:	(bad)  
  41e431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e432:	pushf  
  41e433:	push   0x32cf0e57
  41e438:	mov    ch,0xa0
  41e43a:	mov    ah,0xf8
  41e43c:	xor    DWORD PTR [eax],ecx
  41e43e:	cwde   
  41e43f:	in     al,dx
  41e440:	inc    ecx
  41e441:	pop    ecx
  41e442:	icebp  
  41e443:	daa    
  41e444:	jmp    0x4ece:0xcd5680ad
  41e44b:	lea    esp,[ebx+0x589cb9b8]
  41e451:	test   DWORD PTR [eax+0x18],edi
  41e454:	mov    edx,0x6a07d1fe
  41e459:	ja     0x41e3f0
  41e45b:	xchg   ecx,eax
  41e45c:	test   al,0x77
  41e45e:	into   
  41e45f:	xor    BYTE PTR [ebx],ch
  41e461:	fsubp  st(4),st
  41e463:	mov    ecx,0xf8c7a988
  41e468:	mov    eax,0x585398a6
  41e46d:	add    al,0xd5
  41e46f:	sbb    DWORD PTR [esi],0xffffff87
  41e472:	les    edx,FWORD PTR [ebx]
  41e474:	mov    edi,edi
  41e476:	mov    ?,WORD PTR [ebp+0x23]
  41e479:	jmp    0xcc1b:0x87a69878
  41e480:	addr16 xchg edx,eax
  41e482:	shr    BYTE PTR [ecx+0x18028fa6],cl
  41e488:	ss mov esi,0xa5bf100a
  41e48e:	jge    0x41e4d5
  41e490:	lods   al,BYTE PTR ds:[esi]
  41e491:	dec    ecx
  41e492:	push   edx
  41e493:	xchg   edx,eax
  41e494:	outs   dx,DWORD PTR ds:[esi]
  41e495:	ret    
  41e496:	sub    eax,0x36e38462
  41e49b:	and    DWORD PTR [eiz*4+0x7586cd9],0x33
  41e4a3:	and    ch,dh
  41e4a5:	aaa    
  41e4a6:	pop    ecx
  41e4a7:	jb     0x41e42d
  41e4a9:	jle    0x41e4ca
  41e4ab:	aad    0x48
  41e4ad:	sbb    bl,BYTE PTR [eax-0x5b]
  41e4b0:	add    ch,BYTE PTR [eax+0x371eab0e]
  41e4b6:	and    BYTE PTR [edx-0x6be4f06e],ah
  41e4bc:	jnp    0x41e472
  41e4be:	pop    ds
  41e4bf:	test   al,0xe1
  41e4c1:	jecxz  0x41e4e1
  41e4c3:	das    
  41e4c4:	fist   WORD PTR ds:0x81213ad0
  41e4ca:	or     esi,DWORD PTR [esi+ecx*8]
  41e4cd:	xchg   ebx,eax
  41e4ce:	and    ah,al
  41e4d0:	mov    dl,0xaf
  41e4d2:	or     eax,0x259ca890
  41e4d7:	in     al,dx
  41e4d8:	sar    esp,cl
  41e4da:	push   ds
  41e4db:	dec    edi
  41e4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4dd:	mov    bl,0x48
  41e4df:	addr16 or al,0x56
  41e4e2:	cld    
  41e4e3:	out    0x5c,eax
  41e4e5:	sar    BYTE PTR [eax+0x20915e1d],cl
  41e4eb:	pop    esp
  41e4ec:	mov    ds:0x2995f5a,al
  41e4f1:	xchg   ebx,eax
  41e4f2:	sti    
  41e4f3:	hlt    
  41e4f4:	push   es
  41e4f5:	scas   eax,DWORD PTR es:[edi]
  41e4f6:	add    edi,DWORD PTR [esi+0x30804160]
  41e4fc:	push   eax
  41e4fd:	pop    es
  41e4fe:	pop    ebp
  41e4ff:	xlat   BYTE PTR ds:[ebx]
  41e500:	(bad)  
  41e501:	xchg   ebx,eax
  41e502:	xchg   bh,dh
  41e504:	outs   dx,BYTE PTR ds:[esi]
  41e505:	scas   eax,DWORD PTR es:[edi]
  41e506:	fnstenv [edi-0x184d1596]
  41e50c:	dec    edx
  41e50d:	scas   al,BYTE PTR es:[edi]
  41e50e:	out    dx,al
  41e50f:	push   eax
  41e510:	xor    ch,BYTE PTR [eax+0x79]
  41e513:	in     eax,dx
  41e514:	mov    DWORD PTR [eax+0x32],ebp
  41e517:	xor    cl,dl
  41e519:	push   esi
  41e51a:	ficomp DWORD PTR [esi]
  41e51c:	push   ebx
  41e51d:	jne    0x41e4b0
  41e51f:	lods   al,BYTE PTR ds:[esi]
  41e520:	mov    ds:0xa7e8dfdd,eax
  41e525:	fwait
  41e526:	mov    cl,0x45
  41e528:	mov    esp,edi
  41e52a:	fwait
  41e52b:	sbb    cl,BYTE PTR [edx]
  41e52d:	lahf   
  41e52e:	and    dl,0x97
  41e531:	popf   
  41e532:	add    DWORD PTR [eax+0x5d891341],edi
  41e538:	xor    BYTE PTR [edi],0x69
  41e53b:	pop    edi
  41e53c:	or     al,0x56
  41e53e:	mov    ah,0xb9
  41e540:	mov    DWORD PTR [esi+ebp*2],ebx
  41e543:	and    ecx,DWORD PTR [esi-0xdc11a42]
  41e549:	lea    eax,[edi+0x448caddd]
  41e54f:	ffreep st(1)
  41e551:	xchg   edx,eax
  41e552:	hlt    
  41e553:	sar    DWORD PTR [ebx],1
  41e555:	mov    bh,0x64
  41e557:	(bad)  
  41e559:	dec    esi
  41e55a:	and    ecx,0xdf39ecc2
  41e560:	fld    TBYTE PTR [eax-0x3da5b598]
  41e566:	cs dec esi
  41e568:	and    eax,0xb6f6b133
  41e56d:	aam    0xab
  41e56f:	das    
  41e570:	sar    DWORD PTR [edi+0x4e],cl
  41e573:	xchg   al,bl
  41e575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e576:	jg     0x41e506
  41e578:	jnp    0x41e5ce
  41e57a:	repz enter 0x40b2,0xe5
  41e57f:	adc    eax,0x9179efd
  41e584:	sub    al,0xaf
  41e586:	sub    edx,DWORD PTR ss:[eax]
  41e589:	shl    al,1
  41e58b:	dec    DWORD PTR [ecx]
  41e58d:	jmp    0xd6b7a24d
  41e592:	xchg   edi,eax
  41e593:	dec    edx
  41e594:	xor    BYTE PTR [ecx],0x77
  41e597:	add    ah,cl
  41e599:	repnz push ecx
  41e59b:	push   esp
  41e59c:	retf   0x99c4
  41e59f:	pushf  
  41e5a0:	mov    ds:0xf06b17d9,eax
  41e5a5:	jo     0x41e5f5
  41e5a7:	shl    dl,1
  41e5a9:	addr16 jp 0x41e55f
  41e5ac:	in     al,0x8a
  41e5ae:	(bad)  
  41e5af:	(bad)  
  41e5b0:	pop    ds
  41e5b1:	mov    WORD PTR [eax-0x6581aeaa],ss
  41e5b7:	icebp  
  41e5b8:	and    eax,0xa1cbd5bc
  41e5bd:	neg    ecx
  41e5bf:	fs sti 
  41e5c1:	inc    edi
  41e5c2:	scas   al,BYTE PTR es:[edi]
  41e5c3:	dec    ebp
  41e5c4:	xchg   ebx,eax
  41e5c5:	ss sbb esp,edx
  41e5c8:	jmp    0x41e574
  41e5ca:	sbb    eax,0x694bb5b3
  41e5cf:	fdivr  st,st(4)
  41e5d1:	inc    ebp
  41e5d2:	dec    ecx
  41e5d3:	xor    al,0xb1
  41e5d5:	int    0x54
  41e5d7:	cs cdq 
  41e5d9:	push   edi
  41e5da:	fcom   DWORD PTR [ebp+0x79b94227]
  41e5e0:	cmp    bh,al
  41e5e2:	adc    ebx,DWORD PTR [esi]
  41e5e4:	ds daa 
  41e5e6:	push   0xc5a91731
  41e5eb:	and    edx,DWORD PTR [edx]
  41e5ed:	in     al,dx
  41e5ee:	pop    eax
  41e5ef:	jbe    0x41e5a0
  41e5f1:	ss cwde 
  41e5f3:	mov    eax,0xaf245745
  41e5f8:	inc    esp
  41e5f9:	and    al,0xb0
  41e5fb:	retf   
  41e5fc:	and    BYTE PTR [esi-0x478b6d72],bh
  41e602:	lea    ecx,[edx-0x34]
  41e605:	fdivrp st(7),st
  41e608:	cmp    BYTE PTR [ecx],0xe4
  41e60b:	imul   ecx,DWORD PTR [esi],0x337915e3
  41e611:	fisubr DWORD PTR [eax+0xe0fc8ee]
  41e617:	rcr    DWORD PTR [esi+0x16],0x14
  41e61b:	test   BYTE PTR [ebx+0x580e5fd2],bl
  41e621:	cli    
  41e622:	mov    esi,0x1161cc97
  41e627:	add    ebx,DWORD PTR [esi+0x5f]
  41e62a:	adc    esi,DWORD PTR [ecx+0x5c3a0a3]
  41e630:	pusha  
  41e631:	test   DWORD PTR [esi+0x1e],edi
  41e634:	(bad)
  41e637:	pop    ecx
  41e638:	aas    
  41e639:	sbb    BYTE PTR [ebx+edx*1],dh
  41e63c:	xlat   BYTE PTR ds:[ebx]
  41e63d:	(bad)  
  41e63e:	sbb    ah,BYTE PTR [edx-0x70d57c6b]
  41e644:	push   cs
  41e645:	and    eax,0xf912f856
  41e64a:	or     BYTE PTR [edi+0x22],0x52
  41e64e:	imul   DWORD PTR [esi]
  41e650:	out    0xf4,al
  41e652:	and    al,BYTE PTR [ebp-0x7431e3f4]
  41e658:	loope  0x41e6d5
  41e65a:	or     cl,BYTE PTR [ecx]
  41e65c:	pop    eax
  41e65d:	(bad)  
  41e65e:	faddp  st(4),st
  41e660:	jbe    0x41e6cd
  41e662:	test   esi,esp
  41e664:	sbb    bl,BYTE PTR [eax+0x64]
  41e667:	aam    0xf6
  41e669:	popf   
  41e66a:	vmwrite edi,DWORD PTR [edi+edi*2-0x2]
  41e66f:	imul   edi,DWORD PTR [edi+0x6f],0xffffffd8
  41e673:	imul   esi,DWORD PTR [ebp+eiz*8+0x7d39547c],0xe31e4855
  41e67e:	leave  
  41e67f:	int3   
  41e680:	add    edi,DWORD PTR [edx-0x5d]
  41e683:	sbb    DWORD PTR ds:0xdc646f2f,ebp
  41e689:	xlat   BYTE PTR ds:[ebx]
  41e68a:	xor    cl,BYTE PTR [ecx]
  41e68c:	je     0x41e6a5
  41e68e:	and    ecx,edi
  41e690:	mov    dl,0x80
  41e692:	fisub  DWORD PTR [ebp+0x5f]
  41e695:	hlt    
  41e696:	push   cs
  41e697:	(bad)  
  41e698:	(bad)  
  41e699:	jp     0x41e6af
  41e69b:	push   esp
  41e69c:	cmp    al,0xae
  41e69e:	retf   0x8353
  41e6a1:	add    ebx,edi
  41e6a3:	dec    edi
  41e6a4:	xchg   ebx,eax
  41e6a5:	shl    ebx,0x80
  41e6a8:	xor    ah,ch
  41e6aa:	sbb    edx,DWORD PTR [esi-0x7a06bb84]
  41e6b0:	mov    dl,0xf0
  41e6b2:	gs push ds
  41e6b4:	mov    al,ds:0xee0b9f70
  41e6b9:	clc    
  41e6ba:	inc    ebp
  41e6bb:	or     BYTE PTR [ecx-0x6db26c98],bl
  41e6c1:	test   al,0x23
  41e6c3:	dec    ebx
  41e6c4:	not    edi
  41e6c6:	add    DWORD PTR [esi-0x78],edi
  41e6c9:	aas    
  41e6ca:	jecxz  0x41e731
  41e6cc:	out    dx,eax
  41e6cd:	pop    esi
  41e6ce:	sub    eax,0xb050011f
  41e6d3:	fistp  WORD PTR [edx+0x638a899c]
  41e6d9:	jne    0x41e6df
  41e6db:	mov    ds:0xfda0c317,eax
  41e6e0:	pop    ebx
  41e6e1:	loop   0x41e6c1
  41e6e3:	fcomp  QWORD PTR [ecx+0x5]
  41e6e6:	je     0x29fb13e0
  41e6ec:	call   0xe267:0x6bbe5f65
  41e6f3:	sub    BYTE PTR [ebx-0xca35676],ch
  41e6f9:	into   
  41e6fa:	jmp    0xd096af56
  41e6ff:	dec    esp
  41e700:	lds    esp,FWORD PTR [edx]
  41e702:	sbb    DWORD PTR [edi-0x390b5dd7],ebp
  41e708:	test   al,0x4e
  41e70a:	mov    es,ecx
  41e70c:	imul   ecx,DWORD PTR [ecx],0xab70857b
  41e712:	add    DWORD PTR [ebx+0x4cbae871],esi
  41e718:	mov    ecx,0xabe8529c
  41e71d:	xchg   BYTE PTR [ebx+0x516c8d32],ah
  41e723:	and    BYTE PTR [edx+0x63],dh
  41e726:	cwde   
  41e727:	test   al,0x7c
  41e729:	push   es
  41e72a:	cli    
  41e72b:	in     eax,0xf0
  41e72d:	aas    
  41e72e:	jg     0x41e71e
  41e730:	sub    BYTE PTR [ecx],ch
  41e732:	xchg   esp,eax
  41e733:	rol    BYTE PTR [ebx],cl
  41e735:	aad    0xf2
  41e737:	ret    
  41e738:	stos   DWORD PTR es:[edi],eax
  41e739:	or     al,0x12
  41e73b:	push   ecx
  41e73c:	xlat   BYTE PTR ds:[ebx]
  41e73d:	pusha  
  41e73e:	dec    esp
  41e73f:	mov    DWORD PTR [esi],ebp
  41e741:	sti    
  41e742:	mov    cs,edx
  41e744:	mov    eax,0x31861df2
  41e749:	out    0x32,eax
  41e74b:	dec    ebp
  41e74c:	inc    edi
  41e74d:	push   ss
  41e74e:	dec    esi
  41e74f:	(bad)  
  41e750:	sbb    ecx,DWORD PTR [edi]
  41e752:	nop
  41e753:	seto   BYTE PTR [edx+edi*8]
  41e757:	sbb    bl,BYTE PTR [ebx]
  41e759:	shr    BYTE PTR [ebx-0x67],1
  41e75c:	dec    esp
  41e75d:	xor    BYTE PTR [edx-0x21],dl
  41e760:	ins    DWORD PTR es:[edi],dx
  41e761:	rol    esi,1
  41e763:	(bad)  
  41e764:	sahf   
  41e765:	aad    0xa3
  41e767:	push   0x635d1eb4
  41e76c:	mov    eax,ds:0x5e88816d
  41e771:	inc    edx
  41e772:	mov    eax,0xa1b5e118
  41e777:	outs   dx,BYTE PTR ds:[esi]
  41e778:	ds push cs
  41e77a:	mov    dl,0x4f
  41e77c:	push   ss
  41e77d:	fmul   QWORD PTR [ebx-0x70]
  41e780:	popf   
  41e781:	dec    esp
  41e782:	call   0x79c8d8b1
  41e787:	lds    ebp,FWORD PTR [edx+0x26]
  41e78a:	pushf  
  41e78b:	cmp    eax,0xb85d0949
  41e790:	and    DWORD PTR [edx+0x19],eax
  41e793:	mov    al,ds:0x39dd0fb7
  41e798:	mov    ?,WORD PTR [ebp-0x26]
  41e79b:	fild   QWORD PTR [esi-0x3c]
  41e79e:	hlt    
  41e79f:	dec    esi
  41e7a0:	rol    BYTE PTR [ecx-0x17d26251],0x24
  41e7a7:	add    ah,dh
  41e7a9:	repnz clc 
  41e7ab:	inc    ebp
  41e7ac:	enter  0xfd1c,0xba
  41e7b0:	push   edi
  41e7b1:	pop    esi
  41e7b2:	xchg   esp,eax
  41e7b3:	dec    ecx
  41e7b4:	add    BYTE PTR [edx+0x1b],0xcb
  41e7b8:	mov    esi,0x2ab95237
  41e7bd:	sub    eax,0x70212766
  41e7c2:	xchg   DWORD PTR [ebx-0x6d6ec555],esi
  41e7c8:	mov    ebx,DWORD PTR [edi-0x7d]
  41e7cb:	or     eax,0x981ac277
  41e7d0:	test   BYTE PTR [edx-0x59],ch
  41e7d3:	ret    
  41e7d4:	aad    0xbf
  41e7d6:	xor    ecx,DWORD PTR [ebx+eiz*2+0x5c]
  41e7da:	loop   0x41e7a1
  41e7dc:	das    
  41e7dd:	pop    eax
  41e7de:	out    dx,al
  41e7df:	aas    
  41e7e0:	jbe    0x41e83a
  41e7e2:	in     eax,dx
  41e7e3:	(bad)  
  41e7e5:	aas    
  41e7e6:	xchg   ecx,eax
  41e7e7:	ds mov esp,0xc34f0c82
  41e7ed:	sub    eax,0x153170
  41e7f2:	jg     0x41e81a
  41e7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f5:	scas   eax,DWORD PTR es:[edi]
  41e7f6:	mov    cs,edi
  41e7f8:	adc    DWORD PTR [ebx],esi
  41e7fa:	mov    esp,0xbff56b65
  41e7ff:	cmp    ah,BYTE PTR [edi]
  41e801:	fiadd  WORD PTR [edi]
  41e803:	xor    esp,0x4b
  41e806:	and    al,0x58
  41e808:	std    
  41e809:	adc    al,0xbb
  41e80b:	pop    ebp
  41e80c:	mov    ah,0x27
  41e80e:	jne    0x41e7d7
  41e810:	mov    cl,0xd3
  41e812:	mov    cl,0xc6
  41e814:	(bad)  
  41e815:	pushf  
  41e816:	loope  0x41e84f
  41e818:	xchg   edx,eax
  41e819:	push   ss
  41e81a:	dec    ebx
  41e81b:	mov    al,0xa1
  41e81d:	test   eax,0x5ab0cc3f
  41e822:	inc    ecx
  41e823:	sub    ch,bh
  41e825:	arpl   WORD PTR [ebp+0x4f],sp
  41e828:	test   DWORD PTR [esp+esi*2-0x21e987c8],ebx
  41e82f:	lea    ebx,[ecx-0x9a31cc5]
  41e835:	lock mov al,0xff
  41e838:	or     edi,DWORD PTR [edi-0x1a]
  41e83b:	aas    
  41e83c:	dec    eax
  41e83d:	pop    ebx
  41e83e:	push   esi
  41e83f:	repz xor bl,al
  41e842:	stos   BYTE PTR es:[edi],al
  41e843:	test   BYTE PTR [edi-0x62],cl
  41e846:	push   ecx
  41e847:	daa    
  41e848:	push   ecx
  41e849:	(bad)  
  41e84a:	jno    0x41e808
  41e84c:	faddp  st(5),st
  41e84e:	les    edx,FWORD PTR [ebx+0x52]
  41e851:	push   ds
  41e852:	sub    eax,0x274604c8
  41e857:	xchg   ecx,eax
  41e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e859:	lods   al,BYTE PTR ds:[esi]
  41e85a:	outs   dx,DWORD PTR ds:[esi]
  41e85b:	adc    BYTE PTR [edx+0x6b],cl
  41e85e:	(bad)  
  41e85f:	and    al,0xfc
  41e861:	jmp    0x41e89c
  41e863:	mov    edi,0xd59b8ead
  41e868:	inc    esp
  41e869:	mov    cl,0x18
  41e86b:	int3   
  41e86c:	jb     0x41e810
  41e86e:	bound  esi,QWORD PTR [eax-0x7c08f67d]
  41e874:	pop    ecx
  41e875:	(bad)  
  41e877:	mov    eax,0x6495ebc2
  41e87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87d:	in     eax,dx
  41e87e:	aas    
  41e87f:	pop    ds
  41e880:	ds aam 0x5d
  41e883:	call   0x90ef:0x1275288a
  41e88a:	adc    DWORD PTR [ebx+0x70],0xfffffffe
  41e88e:	in     eax,dx
  41e88f:	and    al,cl
  41e891:	mov    ebp,0x59cdeabc
  41e896:	mov    edx,ebp
  41e898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e899:	push   ebp
  41e89a:	retf   
  41e89b:	fild   QWORD PTR [ebx+0x66]
  41e89e:	loope  0x41e914
  41e8a0:	xchg   edi,eax
  41e8a1:	jg     0x41e8c8
  41e8a3:	(bad)  
  41e8a4:	dec    esp
  41e8a5:	rcl    al,cl
  41e8a7:	sub    DWORD PTR [eax+0x14],edi
  41e8aa:	pop    eax
  41e8ab:	dec    edx
  41e8ac:	popa   
  41e8ad:	adc    BYTE PTR [eax+0x1a],al
  41e8b0:	test   eax,0x5c7458b6
  41e8b5:	setg   ch
  41e8b8:	push   ss
  41e8b9:	scas   al,BYTE PTR es:[edi]
  41e8ba:	xchg   esp,eax
  41e8bb:	lods   al,BYTE PTR ds:[esi]
  41e8bc:	(bad)  
  41e8bd:	mov    ecx,0x3843db5c
  41e8c2:	mov    al,0xad
  41e8c4:	rcr    DWORD PTR [esi-0x3c6fdc47],1
  41e8ca:	std    
  41e8cb:	pop    ss
  41e8cc:	shl    BYTE PTR [edi-0x245c2951],0x12
  41e8d3:	test   al,0x9f
  41e8d5:	adc    bl,BYTE PTR [ecx]
  41e8d7:	in     eax,dx
  41e8d8:	test   DWORD PTR [ebx-0xfb34f33],esp
  41e8de:	aas    
  41e8df:	jb     0x41e868
  41e8e1:	jle    0x41e8a1
  41e8e3:	stos   DWORD PTR es:[edi],eax
  41e8e4:	repz mov dl,0xf4
  41e8e7:	pushf  
  41e8e8:	mov    edx,0xf0b29a60
  41e8ed:	sti    
  41e8ee:	clc    
  41e8ef:	sar    BYTE PTR [ebx],1
  41e8f1:	push   edi
  41e8f2:	xor    al,0xca
  41e8f4:	and    eax,0x3d22c1fd
  41e8f9:	leave  
  41e8fa:	cli    
  41e8fb:	pop    ebp
  41e8fc:	fwait
  41e8fd:	mov    cl,0x0
  41e8ff:	mov    ds:0x6ff2e5d1,al
  41e904:	mov    dl,0x95
  41e906:	ins    DWORD PTR es:[edi],dx
  41e907:	out    0x23,al
  41e909:	repnz addr16 mov ch,0x5e
  41e90d:	fisttp WORD PTR [esi]
  41e90f:	or     eax,0xe6cc2918
  41e914:	fadd   QWORD PTR [esi]
  41e916:	xor    BYTE PTR [edi+0x6b5ee02f],ch
  41e91c:	mov    ah,0xd4
  41e91e:	int3   
  41e91f:	dec    edi
  41e920:	and    ebx,DWORD PTR [edi+0x32]
  41e923:	sub    al,0x27
  41e925:	adc    bh,BYTE PTR [eax+ebx*8+0x46]
  41e929:	mov    BYTE PTR [eax+0x30],ch
  41e92c:	ins    BYTE PTR es:[edi],dx
  41e92d:	push   ecx
  41e92e:	xchg   ebx,eax
  41e92f:	ins    DWORD PTR es:[edi],dx
  41e930:	cmp    edi,DWORD PTR [ecx]
  41e932:	sub    al,0xbd
  41e934:	and    edx,esi
  41e936:	iret   
  41e937:	addps  xmm5,xmm0
  41e93a:	push   0xc366a164
  41e93f:	mov    dl,0x59
  41e941:	xchg   ebx,eax
  41e942:	cwde   
  41e943:	stc    
  41e944:	pop    edx
  41e945:	xor    eax,0x6b13fbcf
  41e94a:	push   esi
  41e94b:	sub    ecx,DWORD PTR [esi]
  41e94d:	not    BYTE PTR [eax]
  41e94f:	shl    DWORD PTR [ebx-0x57],1
  41e952:	aad    0xf1
  41e954:	jmp    0xc987cb87
  41e959:	clc    
  41e95a:	jae    0x41e8f0
  41e95c:	jne    0x41e941
  41e95e:	jo     0x41e9db
  41e960:	aaa    
  41e961:	xchg   BYTE PTR [edi+0x1f],cl
  41e964:	mov    ah,0x4e
  41e966:	int3   
  41e967:	cmc    
  41e968:	or     eax,DWORD PTR [edx]
  41e96a:	outs   dx,DWORD PTR ds:[esi]
  41e96b:	adc    eax,0xfffffff1
  41e96e:	mov    ebp,0x4a957238
  41e973:	jae    0x41e907
  41e975:	add    ah,dl
  41e977:	sbb    DWORD PTR [edx+0x37006ce0],edi
  41e97d:	dec    ebp
  41e97e:	mov    al,0xab
  41e980:	nop
  41e981:	mov    ds:0xaf94d84a,eax
  41e986:	fbld   TBYTE PTR [ebp-0x10]
  41e989:	pop    eax
  41e98a:	cmp    al,0x97
  41e98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e98d:	mov    WORD PTR [ecx],?
  41e98f:	mov    ds:0x13aee5a8,eax
  41e994:	mov    al,ds:0x347d5d79
  41e999:	dec    eax
  41e99a:	xor    al,ch
  41e99c:	mov    ch,0x3c
  41e99e:	loope  0x41e988
  41e9a0:	stos   BYTE PTR es:[edi],al
  41e9a1:	fldcw  WORD PTR [ebx-0xb]
  41e9a4:	sbb    DWORD PTR [ebx+0x11],edx
  41e9a7:	test   eax,0x966eeeac
  41e9ac:	and    al,0x40
  41e9ae:	or     al,0xee
  41e9b0:	sub    DWORD PTR [ebx-0x14],esi
  41e9b3:	retf   
  41e9b4:	(bad)  
  41e9b5:	enter  0xe24a,0x8b
  41e9b9:	jg     0x41e95e
  41e9bb:	and    ecx,DWORD PTR [eax+0x29]
  41e9be:	cmc    
  41e9bf:	test   eax,0xbd10d675
  41e9c4:	mov    ds:0x9c2b94f2,al
  41e9c9:	adc    DWORD PTR [ebp-0x197c5147],ebp
  41e9cf:	pop    ebx
  41e9d0:	popf   
  41e9d1:	mov    esp,0x98720718
  41e9d6:	lds    ebx,FWORD PTR ds:0x7c4c8c90
  41e9dc:	(bad)  
  41e9dd:	clc    
  41e9de:	mov    edi,0x6b25f651
  41e9e3:	push   edi
  41e9e4:	icebp  
  41e9e5:	adc    cl,BYTE PTR [ecx+0x3ac6d736]
  41e9eb:	push   edi
  41e9ec:	outs   dx,DWORD PTR ds:[esi]
  41e9ed:	iret   
  41e9ee:	cld    
  41e9ef:	xchg   esp,eax
  41e9f0:	lods   eax,DWORD PTR ds:[esi]
  41e9f1:	pop    esp
  41e9f2:	icebp  
  41e9f3:	retf   
  41e9f4:	adc    bl,BYTE PTR [eax-0x164bc3f6]
  41e9fa:	adc    al,0xfe
  41e9fc:	int    0x3c
  41e9fe:	mov    al,ds:0x5f6f025e
  41ea03:	adc    BYTE PTR [edx+0x48],bh
  41ea06:	dec    esi
  41ea07:	add    bh,0xea
  41ea0a:	fcmovne st,st(1)
  41ea0c:	cmp    eax,0x406d8ba7
  41ea11:	in     eax,dx
  41ea12:	iret   
  41ea13:	int3   
  41ea14:	adc    ecx,edx
  41ea16:	popa   
  41ea17:	and    DWORD PTR [eax+0x4c],0x9e2fe0a2
  41ea1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea1f:	addr16 xor eax,0x686936b4
  41ea25:	int    0x7b
  41ea27:	fwait
  41ea28:	idiv   DWORD PTR [eax-0x380c53c0]
  41ea2e:	pop    ss
  41ea2f:	retf   
  41ea30:	ret    0x4e07
  41ea33:	cmc    
  41ea34:	dec    edx
  41ea35:	xchg   esi,eax
  41ea36:	xchg   edi,eax
  41ea37:	mov    ah,0x39
  41ea39:	dec    eax
  41ea3a:	sbb    al,0x7b
  41ea3c:	or     dl,BYTE PTR [ebp-0x358db4e4]
  41ea42:	psrlw  mm4,mm0
  41ea45:	rcl    DWORD PTR [esi+eiz*4-0x2018ca66],1
  41ea4c:	and    ecx,eax
  41ea4e:	xor    DWORD PTR [ebx],ecx
  41ea50:	jns    0x41eaa1
  41ea52:	dec    ecx
  41ea53:	mov    DWORD PTR [esp+edx*1],edx
  41ea56:	mov    bh,0x2
  41ea58:	gs ins DWORD PTR es:[edi],dx
  41ea5a:	pop    ebx
  41ea5b:	and    cl,ch
  41ea5d:	sbb    ecx,edx
  41ea5f:	scas   eax,DWORD PTR es:[edi]
  41ea60:	sbb    bl,BYTE PTR [edi+0x75]
  41ea63:	and    DWORD PTR es:[ebp-0x61],edx
  41ea67:	or     dl,ah
  41ea69:	push   cs
  41ea6a:	and    ecx,DWORD PTR [edx]
  41ea6c:	(bad)  
  41ea6d:	je     0x41ead3
  41ea6f:	mov    dl,0xfa
  41ea71:	ror    DWORD PTR [esi],0x3d
  41ea74:	ret    0xc68d
  41ea77:	xor    eax,0xba8d14bd
  41ea7c:	retf   0x4356
  41ea7f:	pop    eax
  41ea80:	mov    ebp,0x8b868a35
  41ea85:	sahf   
  41ea86:	icebp  
  41ea87:	test   al,0xad
  41ea89:	(bad)  
  41ea8a:	sub    edi,0x7f
  41ea8d:	aaa    
  41ea8e:	mov    esi,0x4f4838ce
  41ea93:	push   0xfb98628a
  41ea98:	pushf  
  41ea99:	mov    ebp,0xe4892d33
  41ea9e:	push   esp
  41ea9f:	mov    esp,0xbe7f906c
  41eaa4:	push   esp
  41eaa5:	jne    0x41eaeb
  41eaa7:	sbb    ch,BYTE PTR [esi]
  41eaa9:	call   esi
  41eaab:	inc    edx
  41eaac:	adc    esp,0x4c
  41eaaf:	dec    ebp
  41eab0:	fst    QWORD PTR [esi+0x73]
  41eab3:	xor    BYTE PTR [edi],bh
  41eab5:	pop    edi
  41eab6:	sub    BYTE PTR [edx],ch
  41eab8:	xchg   esi,eax
  41eab9:	xchg   ecx,eax
  41eaba:	xor    eax,0x760a41c7
  41eabf:	xchg   DWORD PTR ds:[ebx+0x37bda1cf],edi
  41eac6:	mov    dl,0xdc
  41eac8:	pusha  
  41eac9:	sbb    BYTE PTR [ecx],dh
  41eacb:	ret    0xe58e
  41eace:	mov    ebx,0xa63c5507
  41ead3:	add    edx,ecx
  41ead5:	or     ebp,DWORD PTR [eax+0x44]
  41ead8:	enter  0xeea7,0x2b
  41eadc:	xchg   edi,eax
  41eadd:	pop    ss
  41eade:	xchg   esp,eax
  41eadf:	ret    0xde3a
  41eae2:	push   eax
  41eae3:	dec    ebp
  41eae4:	pushf  
  41eae5:	cmp    DWORD PTR [ebx-0x42],eax
  41eae8:	test   al,0xc5
  41eaea:	sahf   
  41eaeb:	cmp    DWORD PTR [ebp-0x80],ebp
  41eaee:	and    DWORD PTR [eax-0x3751aa2a],ebp
  41eaf4:	xchg   ebx,eax
  41eaf5:	(bad)  
  41eaf6:	cld    
  41eaf7:	inc    esi
  41eaf8:	xchg   DWORD PTR [esp+esi*2-0xc5676e5],ecx
  41eaff:	lock dec esp
  41eb01:	cli    
  41eb02:	ss cmp al,0x42
  41eb05:	test   eax,0x33a91d31
  41eb0a:	(bad)  
  41eb0b:	out    0xd3,eax
  41eb0d:	mov    ecx,0x5d1f13bb
  41eb12:	aaa    
  41eb13:	or     DWORD PTR [esp+edx*8+0x59],esp
  41eb17:	dec    BYTE PTR [esi+0x5ee9ee1]
  41eb1d:	cmp    BYTE PTR [esp+esi*4],al
  41eb20:	fsubr  st(4),st
  41eb22:	sar    DWORD PTR [eax],1
  41eb24:	lds    ecx,FWORD PTR [eax]
  41eb26:	push   ss
  41eb27:	xchg   ebp,eax
  41eb28:	mov    ch,bl
  41eb2a:	ret    0x75a6
  41eb2d:	sbb    eax,0x9b542c47
  41eb32:	fucomp st(5)
  41eb34:	dec    ecx
  41eb35:	ins    BYTE PTR es:[edi],dx
  41eb36:	fld    TBYTE PTR [edi-0xf596f9d]
  41eb3c:	or     eax,0x34e9eaad
  41eb41:	push   eax
  41eb42:	mov    bh,0x24
  41eb44:	sbb    BYTE PTR [ebp-0x291445bd],0xd3
  41eb4b:	mov    bh,0xd8
  41eb4d:	mov    ebp,0x21fb33d8
  41eb52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb53:	lock js 0x41ebae
  41eb56:	mov    ah,0xb6
  41eb58:	fs stos DWORD PTR es:[edi],eax
  41eb5a:	cs sub al,ah
  41eb5d:	iret   
  41eb5e:	jns    0x41ebd2
  41eb60:	pop    esi
  41eb61:	inc    ebx
  41eb62:	or     al,0x59
  41eb64:	nop
  41eb65:	or     BYTE PTR [ebp+ebp*8-0x50bc801e],dl
  41eb6c:	xor    edi,edi
  41eb6e:	ret    
  41eb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb70:	or     ch,dh
  41eb72:	addr16 cwde 
  41eb74:	sbb    eax,0x8b7aba1f
  41eb79:	leave  
  41eb7a:	aas    
  41eb7b:	int3   
  41eb7c:	repnz xor ecx,esp
  41eb7f:	push   es
  41eb80:	mov    ebx,DWORD PTR [ecx+0x69]
  41eb83:	cmp    dh,dl
  41eb85:	inc    edx
  41eb86:	in     al,0x69
  41eb88:	mov    dl,0xa9
  41eb8a:	xor    al,0xd7
  41eb8c:	push   0x6a
  41eb8e:	loop   0x41ec0b
  41eb90:	enter  0x7f64,0x70
  41eb94:	sbb    al,0x73
  41eb96:	sbb    al,BYTE PTR [ebp-0x32b5dc7b]
  41eb9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb9d:	mov    bh,0xec
  41eb9f:	(bad)  
  41eba0:	out    dx,al
  41eba1:	aaa    
  41eba2:	mov    bh,BYTE PTR [ebx]
  41eba4:	cvtps2pd xmm4,QWORD PTR [ebp-0x6a]
  41eba8:	loop   0x41ebb8
  41ebaa:	fadd   QWORD PTR [esi-0x35]
  41ebad:	repz add BYTE PTR [edx+0x27ace595],cl
  41ebb4:	out    dx,eax
  41ebb5:	add    bl,bl
  41ebb7:	call   0x9414221d
  41ebbc:	pop    ds
  41ebbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebbe:	xchg   ebx,eax
  41ebbf:	ins    DWORD PTR es:[edi],dx
  41ebc0:	arpl   WORD PTR [esi],si
  41ebc2:	repnz mov al,0xc7
  41ebc5:	lea    edx,[ecx+eiz*4-0x63aa893a]
  41ebcc:	sub    dl,BYTE PTR [eax+0x3e666d8f]
  41ebd2:	or     BYTE PTR ds:0xdbb64b81,bh
  41ebd8:	push   ss
  41ebd9:	xchg   esp,eax
  41ebda:	addr16 push edx
  41ebdc:	sub    BYTE PTR [edx-0x637228bd],ch
  41ebe2:	(bad)  
  41ebe3:	push   edi
  41ebe4:	lds    eax,FWORD PTR [ebp+0x23]
  41ebe7:	cmp    BYTE PTR [ebp+ecx*4+0x7a19cc5],bl
  41ebee:	push   esp
  41ebef:	test   DWORD PTR [edx],edi
  41ebf1:	push   es
  41ebf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf4:	xchg   ebx,eax
  41ebf5:	inc    edx
  41ebf6:	jo     0x41ec21
  41ebf8:	outs   dx,BYTE PTR ds:[esi]
  41ebf9:	inc    esi
  41ebfa:	mov    eax,0xcc89a646
  41ebff:	jns    0x41eb91
  41ec01:	(bad)  
  41ec02:	pop    esi
  41ec03:	mov    eax,0x414c79f4
  41ec08:	test   DWORD PTR [ecx-0x726ceb11],ebp
  41ec0e:	data16 (bad) 
  41ec11:	sub    DWORD PTR [edx-0x4d262b5],esi
  41ec17:	gs (bad) 
  41ec19:	mov    esp,0x1a83a1b7
  41ec1e:	dec    bh
  41ec20:	sub    DWORD PTR [edi+0x3fe0ce78],ebp
  41ec26:	jne    0x41ec09
  41ec28:	xor    DWORD PTR [esi],edx
  41ec2a:	icebp  
  41ec2b:	lods   eax,DWORD PTR ds:[esi]
  41ec2c:	add    al,0x50
  41ec2e:	js     0x41ebb0
  41ec30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec31:	aaa    
  41ec32:	outs   dx,BYTE PTR ds:[esi]
  41ec33:	jbe    0x41ec9e
  41ec35:	ret    
  41ec36:	xchg   esi,eax
  41ec37:	cli    
  41ec38:	and    al,0xdc
  41ec3a:	cdq    
  41ec3b:	imul   eax,DWORD PTR [ebp+0x70731412],0x784c92e8
  41ec45:	addr16 cmp eax,0x45af8dba
  41ec4b:	not    DWORD PTR [edi-0x45]
  41ec4e:	mov    al,ds:0x113c352
  41ec53:	adc    al,0x7f
  41ec55:	mov    ch,0x56
  41ec57:	rcl    BYTE PTR [ebx],cl
  41ec59:	push   edx
  41ec5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec5b:	jmp    0x6b352436
  41ec60:	jecxz  0x41ec03
  41ec62:	nop
  41ec63:	(bad)  
  41ec64:	aas    
  41ec65:	or     eax,DWORD PTR ds:0x483868ee
  41ec6b:	xchg   edi,eax
  41ec6c:	fcom   DWORD PTR [ecx+0x18]
  41ec6f:	add    DWORD PTR [eax-0x448247dc],esi
  41ec75:	or     DWORD PTR [ebp+0x69],eax
  41ec78:	xor    DWORD PTR [eax+0x4c],0x72
  41ec7c:	inc    ebx
  41ec7d:	push   cs
  41ec7e:	pop    es
  41ec7f:	xor    esi,DWORD PTR ds:0xda062d7
  41ec85:	xor    bl,BYTE PTR [ebx-0x61b51db3]
  41ec8b:	out    dx,eax
  41ec8c:	push   esp
  41ec8d:	mov    edx,0xd4de9cd9
  41ec92:	out    0xe0,al
  41ec94:	cli    
  41ec95:	into   
  41ec96:	add    esp,edi
  41ec98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec99:	xchg   ecx,esi
  41ec9b:	mov    ebp,0xc929a836
  41eca0:	(bad)  
  41eca1:	push   ds
  41eca2:	push   ecx
  41eca3:	shl    BYTE PTR [esi+edi*4],0x4f
  41eca7:	inc    edi
  41eca8:	dec    ebp
  41eca9:	mov    ds:0xf979b96f,al
  41ecae:	sub    bl,al
  41ecb0:	ja     0x41ed1f
  41ecb2:	inc    esi
  41ecb3:	and    BYTE PTR [edi-0x4e],0xde
  41ecb7:	das    
  41ecb8:	ins    BYTE PTR es:[edi],dx
  41ecb9:	rcr    WORD PTR [edi+0x4],0xb8
  41ecbe:	jp     0x41ed20
  41ecc0:	popa   
  41ecc1:	adc    DWORD PTR [ebp+esi*1+0x45],esi
  41ecc5:	pop    ss
  41ecc6:	and    dl,bh
  41ecc8:	pop    edi
  41ecc9:	ret    0xb787
  41eccc:	out    0xe5,eax
  41ecce:	stos   BYTE PTR es:[edi],al
  41eccf:	mov    cl,0xfb
  41ecd1:	ret    0xa2ef
  41ecd4:	jecxz  0x41ecb8
  41ecd6:	inc    edi
  41ecd7:	jle    0x41eccd
  41ecd9:	pop    ss
  41ecda:	clc    
  41ecdb:	fcmovnbe st,st(7)
  41ecdd:	add    bh,BYTE PTR [esi+0x5c]
  41ece0:	addr16 push es
  41ece2:	jge    0x41ed50
  41ece4:	pop    es
  41ece5:	psrlw  mm5,QWORD PTR [ebp+0x73]
  41ece9:	out    dx,al
  41ecea:	sbb    DWORD PTR [ebp+0x5d9e3700],edi
  41ecf0:	push   ds
  41ecf1:	dec    ebx
  41ecf2:	sbb    eax,0xce7467c4
  41ecf7:	popf   
  41ecf8:	and    eax,0xa8ee33b5
  41ecfd:	jecxz  0x41eccf
  41ecff:	out    0xa9,eax
  41ed01:	push   es
  41ed02:	loopne 0x41ed40
  41ed04:	mov    ecx,0x40ec3988
  41ed09:	pushf  
  41ed0a:	push   esp
  41ed0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed0c:	call   0x53044cf1
  41ed11:	mov    bl,0x5f
  41ed13:	inc    eax
  41ed14:	sbb    al,0x83
  41ed16:	sbb    dl,bl
  41ed18:	cdq    
  41ed19:	rcl    DWORD PTR [edx],0x47
  41ed1c:	imul   eax,DWORD PTR [eax+0x57],0xffffffd6
  41ed20:	(bad)  
  41ed22:	leave  
  41ed23:	idiv   ecx
  41ed25:	inc    esp
  41ed26:	lahf   
  41ed27:	mov    eax,0x65a06e07
  41ed2c:	aam    0x45
  41ed2e:	fmul   QWORD PTR [ecx-0x15]
  41ed31:	add    eax,0xaea93dbe
  41ed36:	clc    
  41ed37:	enter  0x1bc9,0xd1
  41ed3b:	xor    al,0x3c
  41ed3d:	rol    BYTE PTR [edi-0x2f],cl
  41ed40:	aas    
  41ed41:	jmp    0xa63f8361
  41ed46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed47:	aam    0xc0
  41ed49:	repnz int3 
  41ed4b:	and    ecx,ebx
  41ed4d:	xchg   edx,eax
  41ed4e:	cmp    al,0x8a
  41ed50:	sub    al,0x9e
  41ed52:	push   esi
  41ed53:	jmp    0x322e:0x16a15ad
  41ed5a:	mov    al,ds:0xd562c1b5
  41ed5f:	sub    al,0x9e
  41ed61:	push   edx
  41ed62:	mov    WORD PTR [esi+edi*8],?
  41ed65:	mov    esi,0x66fd3a84
  41ed6a:	push   ecx
  41ed6b:	aas    
  41ed6c:	pop    ss
  41ed6d:	jg     0x41ed2f
  41ed6f:	lods   al,BYTE PTR ds:[esi]
  41ed70:	int3   
  41ed71:	ins    DWORD PTR es:[edi],dx
  41ed72:	out    0x23,eax
  41ed74:	or     bh,BYTE PTR [ebx]
  41ed76:	in     al,0x49
  41ed78:	fwait
  41ed79:	(bad)  
  41ed7a:	xchg   ebx,eax
  41ed7b:	ins    DWORD PTR es:[edi],dx
  41ed7c:	xchg   DWORD PTR [ebp-0x66fe7a74],ecx
  41ed82:	sub    BYTE PTR [edi-0x73a5a8fc],0xda
  41ed89:	addr16 or ebp,ecx
  41ed8c:	daa    
  41ed8d:	and    al,0x64
  41ed8f:	ins    DWORD PTR es:[edi],dx
  41ed90:	retf   
  41ed91:	jbe    0x41ede1
  41ed93:	cmp    DWORD PTR [ebx+0xa5340e8],0xffffff8d
  41ed9a:	repz dec edi
  41ed9c:	and    al,0x88
  41ed9e:	dec    esp
  41ed9f:	mov    ah,0x49
  41eda1:	cmc    
  41eda2:	scas   al,BYTE PTR es:[edi]
  41eda3:	inc    edx
  41eda4:	mov    al,0x3f
  41eda6:	pushf  
  41eda7:	sub    BYTE PTR [ebp-0x4e],dl
  41edaa:	mov    edx,0x7b48b206
  41edaf:	and    cl,BYTE PTR [eax+0x372f765b]
  41edb5:	mov    cs,WORD PTR [esi]
  41edb7:	aas    
  41edb8:	ret    
  41edb9:	(bad)  
  41edba:	out    0x38,al
  41edbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edbd:	jmp    edi
  41edbf:	je     0x41edff
  41edc1:	and    ch,BYTE PTR [ebx+eiz*8-0x32]
  41edc5:	or     esp,0xffffffae
  41edc8:	add    BYTE PTR [edx-0x1ee52884],bh
  41edce:	jp     0x41ed5f
  41edd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edd1:	mov    al,0x92
  41edd3:	addr16 jne 0x41ee33
  41edd6:	pop    eax
  41edd7:	xor    al,0xa3
  41edd9:	inc    ebx
  41edda:	scas   eax,DWORD PTR es:[edi]
  41eddb:	mov    bh,0xb7
  41eddd:	icebp  
  41edde:	sbb    eax,0xd3e21a1
  41ede3:	xor    eax,0x4b272e5b
  41ede8:	jnp    0x41ee0c
  41edea:	std    
  41edeb:	(bad)  
  41edec:	repnz or DWORD PTR [ebp+esi*1-0x39b78c9e],ebp
  41edf4:	outs   dx,BYTE PTR ds:[esi]
  41edf5:	mov    ecx,0x592fece0
  41edfa:	or     DWORD PTR [ebx+0x1662098],eax
  41ee00:	xchg   DWORD PTR [edx+0x13],esp
  41ee03:	cmc    
  41ee04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee05:	mov    eax,0x562de304
  41ee0a:	xchg   esp,eax
  41ee0b:	add    ebx,DWORD PTR [edx]
  41ee0d:	pop    ebp
  41ee0e:	mov    ch,0x88
  41ee10:	adc    eax,DWORD PTR [eax]
  41ee12:	lock and dl,BYTE PTR [edi-0x4f34263a]
  41ee19:	xor    eax,DWORD PTR [eax+0x5b]
  41ee1c:	xchg   edi,eax
  41ee1d:	jp     0x41ee1c
  41ee1f:	aas    
  41ee20:	push   edx
  41ee21:	cli    
  41ee22:	test   eax,0x6bde7b71
  41ee27:	outs   dx,DWORD PTR ds:[esi]
  41ee28:	ds (bad) 
  41ee2a:	jmp    0x41ee42
  41ee2c:	mov    bh,0x6d
  41ee2e:	enter  0xe83,0x78
  41ee32:	ins    DWORD PTR es:[edi],dx
  41ee33:	add    BYTE PTR ds:[ebx-0x78634da4],dh
  41ee3a:	cmp    eax,0xcc036c35
  41ee3f:	sub    bh,BYTE PTR [edi]
  41ee41:	inc    ebp
  41ee42:	shr    dh,1
  41ee44:	inc    esi
  41ee45:	call   0x2d99a3e5
  41ee4a:	cwde   
  41ee4b:	xchg   edx,eax
  41ee4c:	dec    esp
  41ee4d:	xchg   esi,eax
  41ee4e:	retf   
  41ee4f:	out    0xc0,eax
  41ee51:	inc    ecx
  41ee52:	stos   BYTE PTR es:[edi],al
  41ee53:	inc    edx
  41ee54:	lods   al,BYTE PTR ds:[esi]
  41ee55:	leave  
  41ee56:	in     eax,0x55
  41ee58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee59:	popf   
  41ee5a:	mov    bl,0x8a
  41ee5c:	mul    ebx
  41ee5e:	pop    eax
  41ee5f:	push   edi
  41ee60:	cdq    
  41ee61:	fimul  DWORD PTR [ebx+0x2e]
  41ee64:	fnstenv [esi-0x3b]
  41ee67:	ret    
  41ee68:	xor    al,0x8d
  41ee6a:	aad    0x7d
  41ee6c:	dec    ebp
  41ee6d:	aaa    
  41ee6e:	xor    eax,0x58b401ca
  41ee73:	inc    ebx
  41ee74:	xor    BYTE PTR [edx+0x7],al
  41ee77:	ins    DWORD PTR es:[edi],dx
  41ee78:	push   ebx
  41ee79:	fist   WORD PTR [edi+0x7c]
  41ee7c:	int3   
  41ee7d:	mov    bh,BYTE PTR [ecx+esi*1+0x671ecc6f]
  41ee84:	shl    al,1
  41ee86:	sbb    ecx,0x9d9733aa
  41ee8c:	pop    ebx
  41ee8d:	aaa    
  41ee8e:	fcmovnu st,st(7)
  41ee90:	cs sub al,0xa
  41ee93:	iret   
  41ee94:	dec    ebp
  41ee95:	mov    WORD PTR [esp+ebx*2-0x4e1fb637],es
  41ee9c:	loopne 0x41ee62
  41ee9e:	adc    ch,BYTE PTR [ebx+0x538f2764]
  41eea4:	xchg   esp,eax
  41eea5:	pop    edx
  41eea6:	jl     0x41ee31
  41eea8:	arpl   WORD PTR [edx+0x29],dx
  41eeab:	pop    esi
  41eeac:	bound  esi,QWORD PTR [ebp-0x30]
  41eeaf:	inc    edx
  41eeb0:	xlat   BYTE PTR ss:[ebx]
  41eeb2:	cmc    
  41eeb3:	mov    ds:0x7759a3db,eax
  41eeb8:	outs   dx,BYTE PTR ds:[esi]
  41eeb9:	sbb    eax,0xe603fe62
  41eebe:	mov    ecx,0xa0401af5
  41eec3:	and    DWORD PTR [esi],esi
  41eec5:	mov    eax,0x821fcc9b
  41eeca:	sbb    bh,bl
  41eecc:	retf   0xd774
  41eecf:	es dec ecx
  41eed1:	scas   al,BYTE PTR es:[edi]
  41eed2:	aam    0xe
  41eed4:	fidivr DWORD PTR [eax+0x59e049ca]
  41eeda:	cmc    
  41eedb:	test   DWORD PTR [edi],esi
  41eedd:	mov    esi,0xf7239103
  41eee2:	mov    dh,0x22
  41eee4:	jns    0x41eef4
  41eee6:	inc    ebp
  41eee7:	in     al,0xcc
  41eee9:	mov    dh,0x1
  41eeeb:	push   edi
  41eeec:	xor    eax,0xe738dfd2
  41eef1:	das    
  41eef2:	(bad)  [ebx]
  41eef4:	(bad)  
  41eef5:	push   ebx
  41eef6:	xor    eax,0xd8ad17ef
  41eefb:	scas   al,BYTE PTR es:[edi]
  41eefc:	daa    
  41eefd:	mov    esi,0x9fef377
  41ef02:	out    0x37,eax
  41ef04:	xchg   edi,ebx
  41ef06:	sahf   
  41ef07:	xchg   esp,eax
  41ef08:	sbb    BYTE PTR ds:0xcea4faa7,ah
  41ef0e:	jmp    0xc1a833dd
  41ef13:	cs je  0x41eee7
  41ef16:	test   eax,0x37a08dac
  41ef1b:	lods   eax,DWORD PTR ds:[esi]
  41ef1c:	jl     0x41eef8
  41ef1e:	loopne 0x41eeb7
  41ef20:	xchg   BYTE PTR [eax-0x3a],bl
  41ef23:	xor    ecx,DWORD PTR [ecx+0x5881f4a2]
  41ef29:	retf   
  41ef2a:	je     0x41ef39
  41ef2c:	les    ecx,FWORD PTR [edi-0x4f9fc824]
  41ef32:	xor    ah,BYTE PTR [ebp-0x640b75a8]
  41ef38:	and    BYTE PTR [ecx+0xf3b70a4],cl
  41ef3e:	mov    edi,0xf1f05717
  41ef43:	adc    al,BYTE PTR cs:[edx+0x4f]
  41ef47:	(bad)  
  41ef48:	clc    
  41ef49:	or     ecx,DWORD PTR [ebp-0x21]
  41ef4c:	cli    
  41ef4d:	sub    dh,BYTE PTR [eax+0x53db20eb]
  41ef53:	inc    ebx
  41ef54:	xchg   ecx,eax
  41ef55:	cli    
  41ef56:	xor    al,0xa7
  41ef58:	cmp    DWORD PTR [ebx],ebx
  41ef5a:	add    BYTE PTR [ecx-0x45],bl
  41ef5d:	pop    ss
  41ef5e:	in     eax,0x27
  41ef60:	retf   0x195d
  41ef63:	jno    0x41ef0f
  41ef65:	mov    BYTE PTR [edi+ebx*8+0x260f3e0a],al
  41ef6c:	pop    ss
  41ef6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef6e:	popa   
  41ef6f:	dec    edi
  41ef70:	popf   
  41ef71:	fadd   DWORD PTR [edx-0x7a042a3a]
  41ef77:	es sahf 
  41ef79:	in     eax,0xc6
  41ef7b:	jmp    0xc8b10044
  41ef80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef81:	jne    0x41ef47
  41ef83:	addr16 jmp 0xfa86:0xc200365b
  41ef8b:	fbstp  TBYTE PTR [edx+0x1d]
  41ef8e:	xchg   esp,eax
  41ef8f:	ins    BYTE PTR es:[edi],dx
  41ef90:	(bad)  
  41ef91:	xor    dh,BYTE PTR [esi+0x63]
  41ef94:	dec    DWORD PTR [edi-0x6d]
  41ef97:	popf   
  41ef98:	push   eax
  41ef99:	jns    0x41ef6d
  41ef9b:	xchg   edi,eax
  41ef9c:	jg     0x41efab
  41ef9e:	test   BYTE PTR [edi+0x60],ch
  41efa1:	pop    esi
  41efa2:	mov    al,ds:0x7ec98fef
  41efa7:	mov    al,ds:0x1990f40c
  41efac:	mov    ecx,0xa5304f31
  41efb1:	sub    eax,0xac730ce5
  41efb6:	cld    
  41efb7:	pop    ds
  41efb8:	mov    ah,0xaa
  41efba:	fwait
  41efbb:	jo     0x41ef89
  41efbd:	xor    BYTE PTR [ecx],0xd6
  41efc0:	ss push ds
  41efc2:	rcl    cl,0xd7
  41efc5:	dec    ebp
  41efc6:	mov    ebx,0x6c37fba5
  41efcb:	push   ds
  41efcc:	dec    esp
  41efcd:	pop    edi
  41efce:	mov    ch,0x3f
  41efd0:	fs loop 0x41f031
  41efd3:	nop
  41efd4:	cmp    al,0x26
  41efd6:	cmp    bl,ah
  41efd8:	fdiv   QWORD PTR [esi-0x583ce109]
  41efde:	xor    eax,DWORD PTR [eax-0x1178a05d]
  41efe4:	and    al,0x77
  41efe6:	aad    0xc4
  41efe8:	add    DWORD PTR [eax-0x4f],edx
  41efeb:	(bad)  
  41efec:	sti    
  41efed:	sar    BYTE PTR [edi+0x2e23d2a9],0xb9
  41eff4:	lock xchg ecx,eax
  41eff6:	es retf 
  41eff8:	adc    DWORD PTR [ebx+0x52d42c7f],esi
  41effe:	push   esp
  41efff:	xchg   bl,al
  41f001:	sbb    eax,0x33e0e961
  41f006:	popf   
  41f007:	scas   eax,DWORD PTR es:[edi]
  41f008:	stos   DWORD PTR es:[edi],eax
  41f009:	outs   dx,DWORD PTR ds:[esi]
  41f00a:	out    dx,al
  41f00b:	mov    ebx,0x2c90cfe0
  41f010:	into   
  41f011:	ret    0xc2d7
  41f014:	pushf  
  41f015:	test   eax,0x9db1cb32
  41f01a:	(bad)  
  41f01c:	imul   eax,DWORD PTR [ebx],0x33
  41f01f:	rcl    DWORD PTR [eax],cl
  41f021:	add    DWORD PTR [edx+eax*1],edx
  41f024:	sbb    al,0x94
  41f026:	inc    ecx
  41f027:	in     eax,0x5c
  41f029:	and    ebx,DWORD PTR [esi+ebx*8+0x76]
  41f02d:	cmp    BYTE PTR [ecx],0x3c
  41f030:	jl     0x41efef
  41f032:	inc    ebp
  41f033:	in     eax,dx
  41f034:	test   al,bh
  41f036:	arpl   WORD PTR [edi+0x4337ba3b],dx
  41f03c:	sbb    DWORD PTR [ebp-0x24329fc6],0x3b051f48
  41f046:	mov    bl,0x5b
  41f048:	mov    dh,BYTE PTR [esi]
  41f04a:	jge    0x41effe
  41f04c:	inc    eax
  41f04d:	rol    DWORD PTR [esi+edx*4],0x49
  41f051:	add    eax,DWORD PTR [edi-0x3]
  41f054:	daa    
  41f055:	loop   0x41f049
  41f057:	mov    ch,0xb0
  41f059:	(bad)  
  41f05a:	jae    0x41f089
  41f05c:	cdq    
  41f05d:	fwait
  41f05e:	imul   eax,DWORD PTR [edi],0xffffffdb
  41f061:	div    DWORD PTR [ebp+0x73]
  41f064:	nop
  41f065:	cmp    al,0x8a
  41f067:	mov    al,ds:0x27ac4327
  41f06c:	int3   
  41f06d:	idiv   DWORD PTR fs:[edi+0x785f78e3]
  41f074:	fidiv  DWORD PTR [esi+0x50be8ba6]
  41f07a:	add    dl,BYTE PTR [ebx-0x3b]
  41f07d:	not    BYTE PTR [esi]
  41f07f:	pop    esp
  41f080:	mov    cl,0x15
  41f082:	mov    al,0x15
  41f084:	mov    ah,0xf0
  41f086:	addr16 fwait
  41f088:	mov    ebp,edx
  41f08a:	call   0x5ce0:0xa42b475b
  41f091:	bound  ebx,QWORD PTR [edx-0x61]
  41f094:	repnz adc BYTE PTR [ecx],ah
  41f097:	std    
  41f098:	arpl   ax,sp
  41f09a:	xchg   esi,eax
  41f09b:	mov    ds:0x5d75786d,al
  41f0a0:	mov    dh,bh
  41f0a2:	fdivr  DWORD PTR [edi+ebp*1+0x35048fe9]
  41f0a9:	mov    bl,BYTE PTR [ebp+0x531466a1]
  41f0af:	add    BYTE PTR [ebx+0x5c],0x60
  41f0b3:	sub    ebp,DWORD PTR [ebp+0x45852fc1]
  41f0b9:	out    0x74,al
  41f0bb:	mov    dh,0xce
  41f0bd:	push   eax
  41f0be:	push   cs
  41f0bf:	sub    edi,edi
  41f0c1:	jge    0x41f10b
  41f0c3:	cld    
  41f0c4:	in     eax,dx
  41f0c5:	cmp    al,0x90
  41f0c7:	lods   eax,DWORD PTR ds:[esi]
  41f0c8:	mov    al,0x99
  41f0ca:	adc    edi,DWORD PTR [edi+0x78]
  41f0cd:	out    dx,eax
  41f0ce:	and    BYTE PTR [edx+0x5e],bl
  41f0d1:	pop    edx
  41f0d2:	ror    DWORD PTR [ebp+ebx*2+0x9],0x49
  41f0d7:	aam    0x17
  41f0d9:	sbb    dl,BYTE PTR [eax+0x625a0d38]
  41f0df:	inc    ebp
  41f0e0:	jge    0x41f0af
  41f0e2:	jecxz  0x41f0a5
  41f0e4:	push   cs
  41f0e5:	cmp    bh,BYTE PTR [ebx]
  41f0e7:	lods   al,BYTE PTR ds:[esi]
  41f0e8:	add    eax,ebx
  41f0ea:	scas   al,BYTE PTR es:[edi]
  41f0eb:	adc    ch,BYTE PTR [eax]
  41f0ed:	add    DWORD PTR [edi],ebp
  41f0ef:	fcomi  st,st(3)
  41f0f1:	bound  eax,QWORD PTR [edi+ebp*1+0x10b6ae4a]
  41f0f8:	xchg   ebp,eax
  41f0f9:	jns    0x41f175
  41f0fb:	sbb    edx,ecx
  41f0fd:	cli    
  41f0fe:	stos   BYTE PTR es:[edi],al
  41f0ff:	popf   
  41f100:	dec    esp
  41f101:	xchg   esp,eax
  41f102:	outs   dx,BYTE PTR ds:[esi]
  41f103:	inc    eax
  41f104:	xchg   ebx,eax
  41f105:	dec    ecx
  41f106:	les    esi,FWORD PTR [ebx-0x42a2fb7d]
  41f10c:	adc    BYTE PTR [edi-0x48],ah
  41f10f:	jg     0x41f168
  41f111:	cmc    
  41f112:	jecxz  0x41f09f
  41f114:	and    eax,0xe2c00f92
  41f119:	jmp    0x41f172
  41f11b:	js     0x41f17b
  41f11d:	dec    eax
  41f11e:	je     0x41f132
  41f120:	fst    DWORD PTR [ebp-0x63]
  41f123:	dec    edx
  41f124:	data16 ins BYTE PTR es:[edi],dx
  41f126:	jp     0x41f144
  41f128:	or     al,0x75
  41f12a:	push   es
  41f12b:	push   edi
  41f12c:	(bad)  
  41f12d:	sar    DWORD PTR [edi*8-0x2734c7c1],cl
  41f134:	test   al,0xc3
  41f136:	loope  0x41f0e5
  41f138:	test   DWORD PTR [ebp+0x2b],esi
  41f13b:	pusha  
  41f13c:	adc    al,0x0
  41f13e:	xchg   BYTE PTR [ebx],dh
  41f140:	cmp    ebp,ebp
  41f142:	lock cmp BYTE PTR [edi-0x542de4c2],bh
  41f149:	test   al,0x74
  41f14b:	jmp    0x682653c6
  41f150:	push   eax
  41f151:	xchg   ecx,eax
  41f152:	pusha  
  41f153:	pop    ebx
  41f154:	(bad)  
  41f155:	call   0x4d6925f1
  41f15a:	push   ecx
  41f15b:	rcr    DWORD PTR [ecx+ebx*2-0x6d8df8f1],1
  41f162:	loopne 0x41f0fa
  41f164:	neg    BYTE PTR [ebx-0x2a]
  41f167:	jbe    0x41f187
  41f169:	ins    BYTE PTR es:[edi],dx
  41f16a:	mov    bl,0x30
  41f16c:	cwde   
  41f16d:	(bad)  
  41f16f:	mov    dh,0x55
  41f171:	bnd ret 0x339d
  41f175:	mov    esi,0x797d9c9
  41f17a:	pop    ss
  41f17b:	mov    ds:0xf8c5e9f1,eax
  41f180:	dec    eax
  41f181:	in     ax,0x3f
  41f184:	and    eax,0x5efc3b65
  41f189:	fisubr WORD PTR [eax+0x36]
  41f18c:	sbb    DWORD PTR [esi],esp
  41f18e:	mov    ebx,0xdf259bfd
  41f193:	mov    ah,0xd7
  41f195:	call   0xd83:0xa11c1706
  41f19c:	pop    esi
  41f19d:	mov    ch,0x8a
  41f19f:	sub    eax,0xe228f9d7
  41f1a4:	and    bl,BYTE PTR [edi]
  41f1a6:	mov    ebx,edi
  41f1a8:	add    al,0xac
  41f1aa:	mov    ds:0x892653d4,al
  41f1af:	jbe    0x41f181
  41f1b1:	sub    edx,DWORD PTR [edx]
  41f1b3:	jno    0x41f1e3
  41f1b5:	dec    ecx
  41f1b6:	rcr    DWORD PTR [edx+0x12b0ccd3],0x3c
  41f1bd:	imul   ecx,DWORD PTR [ebp+0x7135d7d],0x52
  41f1c4:	enter  0xa201,0x4d
  41f1c8:	cdq    
  41f1c9:	sbb    eax,0x9e52e5e7
  41f1ce:	mov    dh,cl
  41f1d0:	cmc    
  41f1d1:	sub    BYTE PTR [esi-0x19],cl
  41f1d4:	iret   
  41f1d5:	js     0x41f225
  41f1d7:	xor    al,0xcd
  41f1d9:	sbb    DWORD PTR [eax+0x3f],0x1a
  41f1dd:	ins    DWORD PTR es:[edi],dx
  41f1de:	(bad)  
  41f1df:	xchg   ecx,eax
  41f1e0:	test   DWORD PTR [ebx+0x2409ba38],esp
  41f1e6:	mov    eax,0xc23eada9
  41f1eb:	mov    DWORD PTR [esi-0x3d],edi
  41f1ee:	out    dx,al
  41f1ef:	sahf   
  41f1f0:	jno    0x41f1fb
  41f1f2:	jo     0x41f237
  41f1f4:	out    0x7c,eax
  41f1f6:	xchg   BYTE PTR [eax],bh
  41f1f8:	imul   eax,DWORD PTR [esi+0x443ac1e8],0x84c10206
  41f202:	inc    eax
  41f203:	inc    eax
  41f204:	arpl   WORD PTR [edx+ebp*2-0x76a89604],bp
  41f20b:	out    0xbb,al
  41f20d:	xor    bl,BYTE PTR [edi-0x57e197e3]
  41f213:	push   ebx
  41f214:	push   eax
  41f215:	out    dx,al
  41f216:	jo     0x41f294
  41f218:	xchg   esi,eax
  41f219:	dec    bh
  41f21b:	adc    DWORD PTR [ebp-0x23],esp
  41f21e:	aaa    
  41f21f:	daa    
  41f220:	je     0x41f1a7
  41f222:	cs xchg edi,eax
  41f224:	xchg   ebx,eax
  41f225:	int    0x31
  41f227:	pop    esi
  41f228:	in     al,dx
  41f229:	fild   QWORD PTR [eax]
  41f22b:	fisubr DWORD PTR [edx-0x20b38f00]
  41f231:	aas    
  41f232:	call   0x4a048c50
  41f237:	sub    dh,dh
  41f239:	mov    ecx,0x881f400b
  41f23e:	mov    WORD PTR [ebx+0x7ca187ec],es
  41f244:	out    dx,al
  41f245:	outs   dx,BYTE PTR ds:[esi]
  41f246:	and    ch,BYTE PTR [eax-0x12]
  41f249:	xlat   BYTE PTR ds:[ebx]
  41f24a:	fiadd  WORD PTR [esi+0xca8e371]
  41f250:	arpl   WORD PTR [eax-0x52617773],cx
  41f256:	das    
  41f257:	int3   
  41f258:	aas    
  41f259:	ja     0x41f2ba
  41f25b:	xchg   esi,eax
  41f25c:	pop    ds
  41f25d:	hlt    
  41f25e:	popa   
  41f25f:	dec    esi
  41f260:	ja     0x41f2cf
  41f262:	mov    eax,0x565c7e4d
  41f267:	and    DWORD PTR [edx],0xffffffcd
  41f26a:	jg     0x41f264
  41f26c:	sub    BYTE PTR [ebx-0x69],dl
  41f26f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f270:	aad    0x92
  41f272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f273:	lods   al,BYTE PTR ds:[esi]
  41f274:	dec    ecx
  41f275:	std    
  41f276:	xor    DWORD PTR [edx],0xe29d94fc
  41f27c:	xor    eax,0x7d33ac8b
  41f281:	mov    ecx,0xffd9140b
  41f286:	mov    bh,0x69
  41f288:	jae    0x41f230
  41f28a:	(bad)  
  41f28b:	jl     0x41f27c
  41f28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f28e:	not    BYTE PTR [edx-0x3f0ae7ad]
  41f294:	cmc    
  41f295:	div    BYTE PTR ds:0xf8226055
  41f29b:	(bad)  
  41f29c:	mov    bh,0x4
  41f29e:	mov    al,ds:0x5df53d22
  41f2a3:	push   eax
  41f2a4:	outs   dx,DWORD PTR ds:[esi]
  41f2a5:	jb     0x41f2b4
  41f2a7:	push   cs
  41f2a8:	bound  edx,QWORD PTR [ebp+0x3e]
  41f2ab:	adc    edi,DWORD PTR [eax+0x1b9f2d42]
  41f2b1:	xlat   BYTE PTR ds:[ebx]
  41f2b2:	mov    al,0xdf
  41f2b4:	dec    sp
  41f2b6:	add    eax,0x45606623
  41f2bb:	dec    edi
  41f2bc:	das    
  41f2bd:	(bad)  
  41f2be:	jns    0x41f2d0
  41f2c0:	and    DWORD PTR [esi+0x3d82ff2],eax
  41f2c6:	add    ch,BYTE PTR [ecx-0x29243630]
  41f2cc:	and    BYTE PTR [edx+0x2],bh
  41f2cf:	dec    ebx
  41f2d0:	aas    
  41f2d1:	add    bl,BYTE PTR [ecx+0x2e]
  41f2d4:	push   esp
  41f2d5:	cmp    ch,BYTE PTR [edi-0x2b]
  41f2d8:	rcr    BYTE PTR [edi-0x11],0xdc
  41f2dc:	or     dl,BYTE PTR [eax]
  41f2de:	push   edx
  41f2df:	pop    es
  41f2e0:	(bad)  
  41f2e1:	aas    
  41f2e2:	cmp    al,0xc7
  41f2e4:	xor    dl,BYTE PTR [eax-0x531b5540]
  41f2ea:	mov    edi,0x55f9c5d5
  41f2ef:	push   esi
  41f2f0:	xchg   ecx,eax
  41f2f1:	pusha  
  41f2f2:	repnz or edi,ebp
  41f2f5:	adc    eax,0x28c52a8b
  41f2fa:	fs mov esp,0x623d7398
  41f300:	imul   ebp,DWORD PTR ds:0xd9e521de,0x6c
  41f307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f308:	hlt    
  41f309:	pop    ebp
  41f30a:	cmp    ebp,DWORD PTR [edx+0x63]
  41f30d:	cwde   
  41f30e:	push   ds
  41f30f:	jp     0x41f307
  41f311:	adc    ax,WORD PTR [ecx+0x5c]
  41f315:	push   ebp
  41f316:	scas   eax,DWORD PTR es:[edi]
  41f317:	dec    ebp
  41f318:	and    ebx,DWORD PTR [ecx+esi*1-0x14]
  41f31c:	inc    ebp
  41f31d:	mov    esi,0xf19c617a
  41f322:	retf   
  41f323:	fsub   QWORD PTR [edi]
  41f325:	mov    dl,0xd1
  41f327:	pop    ebp
  41f328:	leave  
  41f329:	xchg   DWORD PTR ds:0xdc73440d,ebx
  41f32f:	int    0xd5
  41f331:	jg     0x41f35a
  41f333:	loope  0x41f377
  41f335:	or     eax,0x4f13ed09
  41f33a:	outs   dx,DWORD PTR ds:[esi]
  41f33b:	sub    edx,DWORD PTR [eax-0x722017c5]
  41f341:	test   DWORD PTR [edi+ebx*2+0x6a28987b],ecx
  41f348:	retf   0x16d0
  41f34b:	sar    BYTE PTR [ebp+0x5c],0xa0
  41f34f:	sub    ch,BYTE PTR [ebx]
  41f351:	pop    ecx
  41f352:	gs pop ss
  41f354:	repnz sub DWORD PTR [ebp+0x45226604],0xc9a76271
  41f35f:	out    dx,eax
  41f360:	out    0x65,eax
  41f362:	pop    ebx
  41f363:	and    cl,bh
  41f365:	push   ss
  41f366:	xchg   edx,eax
  41f367:	mov    ds:0x55abb201,al
  41f36c:	push   cs
  41f36d:	push   ebp
  41f36e:	or     BYTE PTR [ecx+0x1b08d98d],0xac
  41f375:	aaa    
  41f376:	push   edi
  41f377:	jno    0x41f3c5
  41f379:	cs pop esi
  41f37b:	push   edx
  41f37c:	gs or  al,ah
  41f37f:	cmc    
  41f380:	inc    ebp
  41f381:	jnp    0x41f31d
  41f383:	push   ecx
  41f384:	xchg   ecx,eax
  41f385:	dec    eax
  41f386:	aas    
  41f387:	mov    esi,0x6b851238
  41f38c:	loopne 0x41f361
  41f38e:	mov    esi,0xb74363e1
  41f393:	je     0x41f34e
  41f395:	scas   eax,DWORD PTR es:[edi]
  41f396:	adc    al,0xc2
  41f398:	sbb    esp,edx
  41f39a:	push   0xd3c1adea
  41f39f:	or     DWORD PTR [ecx+0x39],ebp
  41f3a2:	pop    esi
  41f3a3:	jge    0x41f362
  41f3a5:	sbb    eax,DWORD PTR [ecx-0x2fd43924]
  41f3ab:	into   
  41f3ac:	inc    edi
  41f3ad:	ins    DWORD PTR es:[edi],dx
  41f3ae:	or     al,BYTE PTR [esi]
  41f3b0:	push   ecx
  41f3b1:	ins    DWORD PTR es:[di],dx
  41f3b3:	test   DWORD PTR [esi],esi
  41f3b5:	dec    esi
  41f3b6:	cmp    ch,BYTE PTR [ecx]
  41f3b8:	adc    cl,al
  41f3ba:	push   ebx
  41f3bb:	pop    edi
  41f3bc:	out    dx,al
  41f3bd:	adc    eax,0x79d369c6
  41f3c2:	or     al,0xba
  41f3c4:	ret    0x68fc
  41f3c7:	stos   DWORD PTR es:[edi],eax
  41f3c8:	bound  esp,QWORD PTR [edi+0x5aaac929]
  41f3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3cf:	(bad)  
  41f3d0:	mov    edx,0x1085f17f
  41f3d5:	sbb    esi,DWORD PTR [edi]
  41f3d7:	xor    DWORD PTR [eax-0x26efcb3d],edx
  41f3dd:	dec    eax
  41f3de:	shr    DWORD PTR [ecx-0x4ba91262],1
  41f3e4:	out    0x55,al
  41f3e6:	dec    eax
  41f3e7:	lahf   
  41f3e8:	cmc    
  41f3e9:	fbstp  TBYTE PTR [eax-0x6e]
  41f3ec:	adc    al,0x6e
  41f3ee:	cli    
  41f3ef:	ds push eax
  41f3f1:	mov    eax,0xd7bb989b
  41f3f6:	out    0xa9,eax
  41f3f8:	pop    edx
  41f3f9:	std    
  41f3fa:	push   esp
  41f3fb:	push   edi
  41f3fc:	(bad)  
  41f3fd:	retf   
  41f3fe:	lds    ebx,FWORD PTR [ecx+0x6ead8040]
  41f404:	sbb    eax,DWORD PTR [edi]
  41f406:	enter  0x664e,0xcf
  41f40a:	lods   al,BYTE PTR ds:[esi]
  41f40b:	pusha  
  41f40c:	pop    esi
  41f40d:	inc    eax
  41f40e:	and    DWORD PTR [ebx-0x14],0x9
  41f412:	mov    bh,0xa8
  41f414:	sar    DWORD PTR [esi-0x3],1
  41f417:	and    eax,0xd963410e
  41f41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f41d:	sar    ch,1
  41f41f:	jne    0x41f434
  41f421:	and    al,0x88
  41f423:	mov    ebp,0x7825884f
  41f428:	mov    ecx,0x62aacd2
  41f42d:	repnz sbb BYTE PTR [ebx-0x68],ah
  41f431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f432:	dec    ebp
  41f433:	add    BYTE PTR [edx+0x7f],bh
  41f436:	xchg   ebx,eax
  41f437:	pop    edi
  41f438:	ret    
  41f439:	pop    ebx
  41f43a:	add    eax,0x42b619dd
  41f43f:	ficom  DWORD PTR [esi]
  41f441:	xor    al,0x4d
  41f443:	ins    BYTE PTR es:[edi],dx
  41f444:	(bad)
  41f447:	mov    esi,0x599dd917
  41f44c:	cmp    eax,0xf7099fa5
  41f451:	inc    esi
  41f452:	cmp    al,0x29
  41f454:	cli    
  41f455:	mov    ebx,0x77865605
  41f45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f45b:	pusha  
  41f45c:	or     ebp,DWORD PTR [ecx]
  41f45e:	mov    eax,0xd746215f
  41f463:	or     eax,0x6cd79832
  41f468:	and    eax,0x3b7fd40a
  41f46d:	mov    ecx,0x26a46bf1
  41f472:	adc    DWORD PTR [ebx+0x5462d781],0xea4f3ff0
  41f47c:	(bad)  
  41f47d:	pop    ebx
  41f47e:	sbb    edi,edx
  41f480:	(bad)  
  41f481:	jbe    0x41f46b
  41f483:	pop    eax
  41f484:	mov    ds:0xf6fdc154,eax
  41f489:	jmp    0xe4b75393
  41f48e:	scas   al,BYTE PTR es:[edi]
  41f48f:	pop    esp
  41f490:	lea    ebp,[esi-0x53]
  41f493:	aaa    
  41f494:	cld    
  41f495:	add    eax,0x515c1fa7
  41f49a:	retf   0xc63e
  41f49d:	loope  0x41f451
  41f49f:	inc    edx
  41f4a0:	cwde   
  41f4a1:	xchg   ecx,eax
  41f4a2:	mov    edx,0x86a98ed6
  41f4a7:	push   ss
  41f4a8:	pop    es
  41f4a9:	mov    ds:0x55f74de9,al
  41f4ae:	fadd   st(7),st
  41f4b0:	jnp    0x41f474
  41f4b2:	jg     0x41f460
  41f4b4:	(bad)  
  41f4b5:	mov    dl,0x19
  41f4b7:	inc    esi
  41f4b8:	call   0xa69e:0x6db6cc3e
  41f4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c0:	bnd jno 0x41f483
  41f4c3:	ja     0x41f4eb
  41f4c5:	xchg   DWORD PTR [eax-0x1c10bb0],ebp
  41f4cb:	gs test eax,0xa8e73cff
  41f4d1:	jecxz  0x41f4d9
  41f4d3:	pop    eax
  41f4d4:	ins    BYTE PTR es:[edi],dx
  41f4d5:	fdivp  st(0),st
  41f4d7:	popa   
  41f4d8:	out    dx,eax
  41f4d9:	jg     0x41f519
  41f4db:	aam    0xca
  41f4dd:	(bad)
  41f4e1:	mov    ecx,0x4d83349
  41f4e6:	jp     0x41f498
  41f4e8:	sbb    eax,0x7bdf33f8
  41f4ed:	jbe    0x41f471
  41f4ef:	cmp    DWORD PTR [edx+0xb],ecx
  41f4f2:	mov    ds:0x44b3156d,al
  41f4f7:	sar    DWORD PTR [ebx+ebx*8-0x4c],0xf3
  41f4fc:	adc    DWORD PTR [ebp+0x52],0xfffffff1
  41f500:	mov    ebx,gs
  41f502:	dec    ebp
  41f503:	scas   al,BYTE PTR es:[edi]
  41f504:	sub    BYTE PTR [edi+edi*4-0x24],dh
  41f508:	jmp    0x30432d8e
  41f50d:	and    bl,BYTE PTR [edi+0x13]
  41f510:	add    DWORD PTR [edi],esi
  41f512:	retf   
  41f513:	add    DWORD PTR [ecx],ebx
  41f515:	ja     0x41f579
  41f517:	adc    eax,0xa2bd3d6f
  41f51c:	mov    ebp,0x1531f27c
  41f521:	sahf   
  41f522:	ficom  DWORD PTR [eax-0x7a8ba90f]
  41f528:	add    BYTE PTR [ebp+0x3ecc2dc0],ah
  41f52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f52f:	lds    esi,FWORD PTR ds:0xd4a65ff3
  41f535:	xor    eax,0x4443736b
  41f53a:	pop    es
  41f53b:	jge    0x41f4e5
  41f53d:	aad    0x1b
  41f53f:	jmp    0x205bd083
  41f544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f545:	xchg   esp,eax
  41f546:	and    DWORD PTR [ebx+0x7e],esp
  41f549:	stos   DWORD PTR es:[edi],eax
  41f54a:	ud0    ebx,DWORD PTR [edi+0x25]
  41f54e:	or     al,0x10
  41f550:	(bad)  
  41f551:	aad    0xbb
  41f553:	cs dec esi
  41f555:	aam    0x35
  41f557:	mov    eax,fs
  41f559:	aam    0x87
  41f55b:	enter  0xa2b2,0x91
  41f55f:	out    0x89,al
  41f561:	xchg   edi,eax
  41f562:	dec    esp
  41f563:	popa   
  41f564:	out    dx,al
  41f565:	jle    0x41f4f0
  41f567:	jl     0x41f58c
  41f569:	lods   eax,DWORD PTR cs:[si]
  41f56c:	cli    
  41f56d:	int    0xd3
  41f56f:	(bad)  
  41f570:	jp     0x41f52e
  41f572:	and    al,BYTE PTR [ebx+0xfdc690a]
  41f578:	cmp    eax,0xee59080a
  41f57d:	(bad)  
  41f57e:	and    al,0x3c
  41f580:	adc    eax,0x758c07a8
  41f585:	inc    edi
  41f586:	call   0x9c6850dc
  41f58b:	hlt    
  41f58c:	clc    
  41f58d:	idiv   DWORD PTR [ebx+0x7f]
  41f590:	mov    al,ds:0xfecabc0c
  41f595:	mov    edi,fs
  41f597:	and    DWORD PTR [ebp+0x7750119],edx
  41f59d:	mov    eax,ds:0xc657a9ee
  41f5a2:	push   es
  41f5a3:	sub    edx,DWORD PTR [esi-0x618f8216]
  41f5a9:	inc    ebp
  41f5aa:	ror    BYTE PTR [edi+0x5b],cl
  41f5ad:	add    cl,0xfd
  41f5b0:	fistp  WORD PTR [esi+0x67caf198]
  41f5b6:	jbe    0x41f61c
  41f5b8:	lods   al,BYTE PTR ds:[esi]
  41f5b9:	into   
  41f5ba:	das    
  41f5bb:	jmp    0xaa5d:0x4f34ad88
  41f5c2:	add    BYTE PTR [edx+0x73],ch
  41f5c5:	pop    ss
  41f5c6:	push   edx
  41f5c7:	jp     0x41f605
  41f5c9:	loopne 0x41f5bf
  41f5cb:	loopne 0x41f5fb
  41f5cd:	jmp    0x7c2c:0xef1d5af8
  41f5d4:	mov    edx,0xf9834bf8
  41f5d9:	push   0xe621fc14
  41f5de:	(bad)  
  41f5df:	pop    esp
  41f5e0:	les    ebx,FWORD PTR [ebx+eiz*4+0x2e]
  41f5e4:	out    dx,eax
  41f5e5:	mov    DWORD PTR [edi],ecx
  41f5e7:	jo     0x41f648
  41f5e9:	jecxz  0x41f5e7
  41f5eb:	jno    0x41f58c
  41f5ed:	ret    0x840d
  41f5f0:	mov    ?,WORD PTR [eax+0x6814bb90]
  41f5f6:	(bad)  
  41f5f7:	lock mov cl,BYTE PTR [edx-0x1cf1e8c6]
  41f5fe:	ins    BYTE PTR es:[edi],dx
  41f5ff:	or     eax,0x320d50ad
  41f604:	and    esi,ebx
  41f606:	imul   ecx,DWORD PTR [edi-0x37],0x6
  41f60a:	fsub   DWORD PTR [ecx+0x63]
  41f60d:	sub    ebp,DWORD PTR [edx-0x27]
  41f610:	data16 outs dx,BYTE PTR ds:[esi]
  41f612:	in     eax,dx
  41f613:	into   
  41f614:	fisub  WORD PTR [ecx-0x747d99fe]
  41f61a:	xchg   edx,eax
  41f61b:	lock test eax,0xe10f0005
  41f621:	aas    
  41f622:	fs stos BYTE PTR es:[edi],al
  41f624:	hlt    
  41f625:	pop    ss
  41f626:	sub    eax,0x14356f3c
  41f62b:	pop    ecx
  41f62c:	jnp    0x41f65d
  41f62e:	pop    esp
  41f62f:	mov    esp,0xe8ec6ec1
  41f634:	jl     0x41f6b2
  41f636:	out    dx,eax
  41f637:	call   FWORD PTR [ecx]
  41f639:	pop    esi
  41f63a:	push   esi
  41f63b:	inc    esp
  41f63c:	push   esp
  41f63d:	in     eax,dx
  41f63e:	fiadd  DWORD PTR [esi]
  41f640:	xchg   ecx,eax
  41f641:	popf   
  41f642:	push   cs
  41f643:	push   cs
  41f644:	push   ebp
  41f645:	mov    ?,ecx
  41f647:	xor    eax,DWORD PTR [esi-0x6d3deac3]
  41f64d:	(bad)  
  41f64e:	ja     0x41f627
  41f650:	pop    esp
  41f651:	push   ebp
  41f652:	(bad)  
  41f653:	in     al,0xcf
  41f655:	or     al,0xcb
  41f657:	fidiv  WORD PTR [edi]
  41f659:	mov    ah,0xa7
  41f65b:	xchg   ebx,eax
  41f65c:	lock cmp eax,0x97f1f732
  41f662:	adc    al,0x2e
  41f664:	ss loope 0x41f5ea
  41f667:	lods   al,BYTE PTR ds:[esi]
  41f668:	adc    eax,0xbb4cd286
  41f66d:	rol    edx,0x18
  41f670:	and    DWORD PTR ds:0x8ffc6be8,edi
  41f676:	or     al,0xde
  41f678:	push   es
  41f679:	adc    DWORD PTR [esi+edx*8],ebx
  41f67c:	mov    ds:0x2904df8a,al
  41f681:	imul   esp,DWORD PTR [eax-0x5b],0xffffff8c
  41f685:	mov    dh,0x70
  41f687:	sbb    al,0x6d
  41f689:	push   esp
  41f68a:	sbb    bl,BYTE PTR [ebp+0x2f]
  41f68d:	mov    bh,0xa3
  41f68f:	popa   
  41f690:	sub    BYTE PTR [edx+0x2298e176],0x62
  41f697:	jp     0x41f62c
  41f699:	ds inc eax
  41f69b:	jae    0x41f62f
  41f69d:	mov    edx,0xd5c0320e
  41f6a2:	idiv   DWORD PTR [esi]
  41f6a4:	cmp    DWORD PTR [edi],eax
  41f6a6:	or     dl,bl
  41f6a8:	mov    bl,0xb9
  41f6aa:	sub    edx,DWORD PTR [ebp-0x75]
  41f6ad:	and    DWORD PTR cs:[edx],ecx
  41f6b0:	addr16 nop
  41f6b2:	pop    ss
  41f6b3:	inc    ebx
  41f6b4:	sbb    ecx,eax
  41f6b6:	inc    ecx
  41f6b7:	push   ecx
  41f6b8:	ins    DWORD PTR es:[edi],dx
  41f6b9:	cmp    DWORD PTR [ebp+0x49d017bb],0x668ed03f
  41f6c3:	xchg   DWORD PTR [edi],ebp
  41f6c5:	mov    bh,0xbe
  41f6c7:	outs   dx,BYTE PTR ds:[esi]
  41f6c8:	jmp    0x41f6dc
  41f6ca:	lods   al,BYTE PTR ds:[esi]
  41f6cb:	(bad)  [esi+0x20]
  41f6ce:	loope  0x41f695
  41f6d0:	fwait
  41f6d1:	jmp    0xc835:0xa22862cf
  41f6d8:	inc    edi
  41f6d9:	mov    ds:0xd7f7594a,al
  41f6de:	inc    ebx
  41f6df:	add    esi,ebp
  41f6e1:	adc    al,0xd7
  41f6e3:	outs   dx,DWORD PTR ds:[esi]
  41f6e4:	test   BYTE PTR [esi-0x19],dh
  41f6e7:	jp     0x41f6fe
  41f6e9:	sub    al,0x9c
  41f6eb:	fadd   st(6),st
  41f6ed:	jbe    0x41f6b3
  41f6ef:	out    0x61,eax
  41f6f1:	loop   0x41f6cc
  41f6f3:	clc    
  41f6f4:	xor    ebx,DWORD PTR [ebp+0xb]
  41f6f7:	xor    DWORD PTR ds:0xfd25bbe0,ecx
  41f6fd:	cmp    BYTE PTR [edi+0x6c],al
  41f700:	cmp    ch,al
  41f702:	xor    DWORD PTR ds:[ebp+eax*8-0x7d238af7],esp
  41f70a:	sti    
  41f70b:	cmc    
  41f70c:	rcl    DWORD PTR [ebx-0x55],1
  41f70f:	arpl   WORD PTR [esi],bp
  41f711:	cmp    DWORD PTR [eax+0x53],esi
  41f714:	xchg   ebp,eax
  41f715:	inc    esi
  41f716:	pop    edx
  41f717:	cmp    ecx,DWORD PTR ds:0x495aafed
  41f71d:	or     esp,DWORD PTR [ecx-0x188fd09e]
  41f723:	fdivr  DWORD PTR [esi+0x22]
  41f726:	pop    ebp
  41f727:	fmul   st,st(6)
  41f729:	ins    DWORD PTR es:[edi],dx
  41f72a:	pushf  
  41f72b:	fldcw  WORD PTR [eax+0x58]
  41f72e:	imul   edi,DWORD PTR [ebp-0x259bdf76],0x5
  41f735:	xchg   esi,eax
  41f736:	adc    DWORD PTR [ebp-0x3722169c],esi
  41f73c:	inc    eax
  41f73d:	jo     0x41f79d
  41f73f:	aas    
  41f740:	mov    edi,0x82a113fd
  41f745:	nop
  41f746:	arpl   WORD PTR [ecx],cx
  41f748:	sub    DWORD PTR [edi+0x52afd0ee],eax
  41f74e:	test   DWORD PTR [esp+eax*8-0x13],eax
  41f752:	sub    ebx,esp
  41f754:	icebp  
  41f755:	rcr    DWORD PTR [esi+0xc],cl
  41f758:	adc    edi,DWORD PTR [eax]
  41f75a:	es lahf 
  41f75c:	std    
  41f75d:	cld    
  41f75e:	ja     0x41f6fe
  41f760:	ins    BYTE PTR es:[edi],dx
  41f761:	jmp    0x1030b879
  41f766:	test   al,0xbe
  41f768:	cmp    ax,0x7b7
  41f76c:	popa   
  41f76d:	ret    
  41f76e:	adc    BYTE PTR ss:0x72e4d47c,cl
  41f775:	xor    esi,eax
  41f777:	xadd   BYTE PTR [ebp+0x6b77237d],cl
  41f77e:	dec    ebp
  41f77f:	sub    ah,BYTE PTR ds:0x63839823
  41f785:	dec    edx
  41f786:	mov    edx,0x7b1e471
  41f78b:	mov    WORD PTR [eax-0x3e],fs
  41f78e:	adc    edi,DWORD PTR [esi]
  41f790:	cdq    
  41f791:	mov    ah,0x57
  41f793:	sti    
  41f794:	mov    ecx,cs
  41f796:	rcr    cl,cl
  41f798:	mov    eax,ds:0x857e6eb5
  41f79d:	jbe    0x41f7c7
  41f79f:	bnd jmp 0x41f7a8
  41f7a2:	inc    esi
  41f7a3:	(bad)  
  41f7a5:	xlat   BYTE PTR ds:[ebx]
  41f7a6:	repz jmp 0x9b56:0xab6350c3
  41f7ae:	clc    
  41f7af:	aam    0x88
  41f7b1:	add    cl,BYTE PTR [ebp-0x13]
  41f7b4:	dec    ebx
  41f7b5:	out    0xd3,eax
  41f7b7:	mov    edx,0xd4db7afa
  41f7bc:	push   ds
  41f7bd:	mov    edx,0x706e8d2f
  41f7c2:	mov    edx,0x3d1e093a
  41f7c7:	dec    edx
  41f7c8:	imul   ebx,DWORD PTR [ebx],0xcde5919d
  41f7ce:	in     al,0x8e
  41f7d0:	push   0xffffffa4
  41f7d2:	idiv   BYTE PTR [ebx]
  41f7d4:	fisttp QWORD PTR [edx-0x7d3ff749]
  41f7da:	fist   DWORD PTR [bx+di]
  41f7dd:	cwde   
  41f7de:	fdivr  st(0),st
  41f7e0:	add    BYTE PTR [edi-0x34],0x4d
  41f7e4:	push   0x22
  41f7e6:	mov    dl,0x41
  41f7e8:	xchg   ebp,eax
  41f7e9:	repnz pop ss
  41f7eb:	loop   0x41f7ac
  41f7ed:	les    ebx,FWORD PTR [edi+eax*2+0x53]
  41f7f1:	je     0x41f82d
  41f7f3:	mov    ds:0x10073664,al
  41f7f8:	sub    al,BYTE PTR [esi-0x2de3bab7]
  41f7fe:	sbb    eax,0xc9c3815f
  41f803:	xor    dl,bh
  41f805:	sub    ch,0x83
  41f808:	cmp    bl,ah
  41f80a:	or     dl,BYTE PTR [ebx+ebx*2-0x2b]
  41f80e:	xchg   ecx,eax
  41f80f:	fmul   st(6),st
  41f811:	in     eax,0x9e
  41f813:	in     al,dx
  41f814:	pushf  
  41f815:	add    BYTE PTR [edx-0x2],dh
  41f818:	pusha  
  41f819:	adc    esi,DWORD PTR [edi+0x56b0667c]
  41f81f:	pusha  
  41f820:	push   edi
  41f821:	rcr    BYTE PTR fs:[edx-0x61154eba],cl
  41f828:	add    ebp,DWORD PTR [esp+eax*1]
  41f82b:	xchg   ebx,eax
  41f82c:	mov    eax,DWORD PTR [ecx]
  41f82e:	fadd   st(5),st
  41f830:	push   0x5a
  41f832:	mov    edx,0xcd7d811d
  41f837:	mov    ah,0x13
  41f839:	push   esi
  41f83a:	sbb    edi,esi
  41f83c:	(bad)  
  41f83d:	mov    esp,0x49bdca18
  41f842:	push   esp
  41f843:	and    DWORD PTR [edx+0x2b],eax
  41f846:	and    eax,0x796181ae
  41f84b:	mov    BYTE PTR [edx+0x52],dh
  41f84e:	xor    DWORD PTR [ebp-0xe],ebx
  41f851:	rcr    DWORD PTR [ecx],0xf9
  41f854:	sub    BYTE PTR [ebp+edi*4+0x474aa964],al
  41f85b:	shl    BYTE PTR [edi+eax*2],1
  41f85e:	(bad)  
  41f85f:	fsubr  QWORD PTR [esp+eax*2]
  41f862:	(bad)  
  41f863:	sahf   
  41f864:	jne    0x41f832
  41f866:	(bad)  
  41f867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f868:	ficomp DWORD PTR [edx+0x29e7cb18]
  41f86e:	add    BYTE PTR [eax],0xb9
  41f871:	mov    DWORD PTR ds:0xa7f7c081,esp
  41f877:	push   ss
  41f878:	push   ebx
  41f879:	pop    eax
  41f87a:	clc    
  41f87b:	(bad)  
  41f87c:	out    dx,al
  41f87d:	adc    esp,DWORD PTR [ebx]
  41f87f:	jmp    0xb26f:0x3c3a90e6
  41f886:	call   DWORD PTR [eax+0xc3f551a]
  41f88c:	xor    eax,0x834593fb
  41f891:	jno    0xfdc8ad5e
  41f897:	xor    al,0x51
  41f899:	test   eax,ebp
  41f89b:	jb     0x41f872
  41f89d:	sub    eax,0xfe8f5b3
  41f8a2:	daa    
  41f8a3:	push   ebp
  41f8a4:	aam    0xd
  41f8a6:	xchg   ebx,eax
  41f8a7:	das    
  41f8a8:	in     eax,dx
  41f8a9:	aad    0xcf
  41f8ab:	pop    esi
  41f8ac:	aas    
  41f8ad:	inc    eax
  41f8ae:	out    0xf6,eax
  41f8b0:	mov    ebp,0x5f9e140c
  41f8b5:	cli    
  41f8b6:	inc    ecx
  41f8b7:	clc    
  41f8b8:	ds or  BYTE PTR fs:[ebx+0x46],bl
  41f8bd:	jmp    0x41f885
  41f8bf:	jmp    0xdbbc7b1a
  41f8c4:	outs   dx,BYTE PTR ds:[esi]
  41f8c5:	fs jne 0x41f8d9
  41f8c8:	icebp  
  41f8c9:	xor    eax,0x9edb4630
  41f8ce:	or     eax,0xf4d0b3d3
  41f8d3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8d5:	(bad)
  41f8da:	xchg   ecx,eax
  41f8db:	ds pop ebp
  41f8dd:	mov    ch,0xca
  41f8df:	imul   edi,edi,0x44
  41f8e2:	mov    ebp,0x79b7ad4e
  41f8e7:	mov    bh,0x51
  41f8e9:	mov    cl,0x32
  41f8eb:	popf   
  41f8ec:	jmp    0xb87b:0xf99032ad
  41f8f3:	iret   
  41f8f4:	daa    
  41f8f5:	test   edi,eax
  41f8f7:	add    dl,BYTE PTR [ebx]
  41f8f9:	mov    ecx,0x8eae9fda
  41f8fe:	mov    DWORD PTR [esi+0x5c],ecx
  41f901:	pop    edx
  41f902:	or     BYTE PTR [ebx],ah
  41f904:	aaa    
  41f905:	(bad)  
  41f906:	fs (bad) 
  41f908:	daa    
  41f909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90a:	add    DWORD PTR [ebx-0x3],edi
  41f90d:	loopne 0x41f934
  41f90f:	rcl    DWORD PTR [ebp+0x7984bdc3],0xbb
  41f916:	dec    ebp
  41f917:	sub    DWORD PTR [ecx+ebx*1+0x32bcd080],edx
  41f91e:	vunpcklps xmm3,xmm1,XMMWORD PTR [edx]
  41f922:	ret    
  41f923:	loope  0x41f929
  41f925:	xor    eax,0x916a03bd
  41f92a:	(bad)  
  41f92b:	es std 
  41f92d:	loopne 0x41f996
  41f92f:	push   ss
  41f930:	mov    esi,0x14c97f84
  41f935:	mov    esi,0x3a0f2a07
  41f93a:	jp     0x41f9a3
  41f93c:	mov    dh,0x36
  41f93e:	inc    edi
  41f93f:	xchg   edx,eax
  41f940:	add    eax,0x185961f2
  41f945:	xchg   ecx,eax
  41f946:	sub    DWORD PTR ds:0x4bbeace6,ebx
  41f94c:	push   edi
  41f94d:	mov    al,ds:0xe694b2c4
  41f952:	loope  0x41f8e1
  41f954:	mov    dl,0xa8
  41f956:	push   0xffffff90
  41f958:	es (bad) 
  41f95a:	sub    esi,DWORD PTR [edi+0x2eae6f53]
  41f960:	movsx  ebx,BYTE PTR [eax+0x3904155c]
  41f967:	mov    ebp,DWORD PTR [edi+0x7a]
  41f96a:	jl     0x41f931
  41f96c:	neg    DWORD PTR [ebx-0x54ca60b6]
  41f972:	pushf  
  41f973:	in     al,0x69
  41f975:	jl     0x41f9e7
  41f977:	mov    WORD PTR ds:0xcff04eb7,cs
  41f97d:	(bad)  
  41f97f:	jb     0x41f943
  41f981:	lea    ebx,[edi]
  41f983:	out    0x40,eax
  41f985:	rcr    eax,0x15
  41f988:	sub    DWORD PTR [esi+0xe59292a],0x9ac93d55
  41f992:	xchg   esi,eax
  41f993:	jp     0x41f938
  41f995:	mov    BYTE PTR [edx+0x4855576a],ch
  41f99b:	fimul  WORD PTR [edx+ecx*4+0x3d38aa7b]
  41f9a2:	test   DWORD PTR [ebp-0x61f1b6e6],0x1c25034b
  41f9ac:	mov    DWORD PTR [ebx],esp
  41f9ae:	add    ebp,ebp
  41f9b0:	enter  0xc638,0x48
  41f9b4:	out    dx,eax
  41f9b5:	and    eax,0x5bab3bc6
  41f9ba:	lds    ebp,FWORD PTR [ebp-0x1]
  41f9bd:	push   ebx
  41f9be:	xor    al,0xe5
  41f9c0:	stc    
  41f9c1:	xchg   esp,eax
  41f9c2:	jp     0x41fa2e
  41f9c4:	xchg   ecx,eax
  41f9c5:	or     BYTE PTR [edx-0x533a0992],0x7
  41f9cc:	adc    eax,0x7860e2e5
  41f9d1:	sbb    DWORD PTR [edi-0x70925cc4],edi
  41f9d7:	pop    ss
  41f9d8:	mov    edx,DWORD PTR [eax+0x56]
  41f9db:	push   ss
  41f9dc:	mov    ecx,0x86243ed7
  41f9e1:	pop    esp
  41f9e2:	mov    esp,0x9a8e5ff8
  41f9e7:	and    esi,DWORD PTR [edi+0x4f]
  41f9ea:	sub    DWORD PTR [ebp-0x2],edx
  41f9ed:	scas   al,BYTE PTR es:[edi]
  41f9ee:	jmp    0x41fa03
  41f9f0:	rcl    DWORD PTR [eax-0x5734c59f],0xfa
  41f9f7:	xlat   BYTE PTR ds:[ebx]
  41f9f8:	leave  
  41f9f9:	call   0x3859:0x68dc3965
  41fa00:	pop    ds
  41fa01:	and    al,0xb4
  41fa03:	pop    ss
  41fa04:	mov    ah,0xc4
  41fa06:	mov    dh,0x22
  41fa08:	iret   
  41fa09:	daa    
  41fa0a:	leave  
  41fa0b:	pop    es
  41fa0c:	stc    
  41fa0d:	adc    BYTE PTR [eax],dl
  41fa0f:	pushf  
  41fa10:	and    DWORD PTR [ecx],0x33b3bccd
  41fa16:	stc    
  41fa17:	xor    edi,DWORD PTR [eax+0x32]
  41fa1a:	dec    ecx
  41fa1b:	or     eax,0x4b3e8817
  41fa20:	sub    eax,ebx
  41fa22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa23:	push   es
  41fa24:	lods   eax,DWORD PTR ds:[esi]
  41fa25:	(bad)  
  41fa26:	out    0xc6,al
  41fa28:	rol    edx,cl
  41fa2a:	(bad)  
  41fa2b:	adc    dh,BYTE PTR [edi+eax*2+0x77]
  41fa2f:	aam    0x7
  41fa31:	mov    al,ds:0xbf977307
  41fa36:	(bad)  
  41fa37:	sbb    DWORD PTR [edi+edx*1-0x341e8d24],edi
  41fa3e:	int    0x99
  41fa40:	mov    ah,0xf0
  41fa42:	add    eax,0x20e742cc
  41fa47:	(bad)  
  41fa48:	aad    0xce
  41fa4a:	jg     0x41fa36
  41fa4c:	sti    
  41fa4d:	cmp    eax,0xef2bcb38
  41fa52:	in     eax,0xb
  41fa54:	xor    esi,esp
  41fa56:	popa   
  41fa57:	add    edi,DWORD PTR [ecx+esi*4]
  41fa5a:	adc    cl,BYTE PTR [ecx-0x4925c4c4]
  41fa60:	pusha  
  41fa61:	push   edx
  41fa62:	dec    eax
  41fa63:	test   eax,0x6231faa4
  41fa68:	loope  0x41fa8f
  41fa6a:	fistp  WORD PTR [bp+si+0x34]
  41fa6e:	(bad)  
  41fa6f:	pop    esp
  41fa70:	not    DWORD PTR gs:0x8a0637ce
  41fa77:	(bad)
  41fa7a:	mov    eax,ds:0xed0437ed
  41fa7f:	call   0xaf4e:0x90bb8c3a
  41fa86:	dec    esi
  41fa87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa88:	jecxz  0x41fb05
  41fa8a:	fisub  DWORD PTR [esi-0x2]
  41fa8d:	repz fsubr st,st(3)
  41fa90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa91:	fs dec eax
  41fa93:	pop    ds
  41fa94:	inc    ecx
  41fa95:	outs   dx,BYTE PTR ds:[esi]
  41fa96:	push   ecx
  41fa97:	retw   
  41fa99:	sub    DWORD PTR [edi+esi*1+0x6fcaeaae],edi
  41faa0:	in     eax,0x27
  41faa2:	aaa    
  41faa3:	jg     0x41fa45
  41faa5:	mov    ebx,0x3996a328
  41faaa:	jb     0x41fa61
  41faac:	push   ss
  41faad:	mov    ah,0xdb
  41faaf:	xchg   ebx,eax
  41fab0:	fistp  DWORD PTR [ebx+0xfe147a4]
  41fab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fab7:	xchg   ebp,eax
  41fab8:	and    BYTE PTR [edi+0x3b1a27e0],0x6
  41fabf:	jno    0x41faef
  41fac1:	mov    ebp,0x4ecb03da
  41fac6:	inc    eax
  41fac7:	xchg   edx,edx
  41fac9:	cmp    DWORD PTR [ebp+0x3fcda1f8],ecx
  41facf:	pop    ss
  41fad0:	cmc    
  41fad1:	imul   ecx,DWORD PTR [edi],0xffffff8a
  41fad4:	inc    esp
  41fad5:	sub    BYTE PTR ds:0xb55ee25d,dl
  41fadb:	popf   
  41fadc:	scas   al,BYTE PTR es:[edi]
  41fadd:	repz jle 0x41fa74
  41fae0:	rdtsc  
  41fae2:	jl     0x41fae9
  41fae4:	adc    bl,ch
  41fae6:	arpl   WORD PTR [edx+0x195648d3],sp
  41faec:	sbb    eax,0x6ba7e0e0
  41faf1:	loope  0x41fafb
  41faf3:	ror    ch,1
  41faf5:	int3   
  41faf6:	pop    edi
  41faf7:	jno    0x41fb3e
  41faf9:	stc    
  41fafa:	and    BYTE PTR [ebx+0x7d58d1f7],ah
  41fb00:	push   ds
  41fb01:	mov    DWORD PTR [edi],esi
  41fb03:	imul   ebp,DWORD PTR [eax+0x5d],0x2da7fdd
  41fb0a:	mov    ecx,0xbf9ed575
  41fb0f:	dec    BYTE PTR ds:0x300bbaa7
  41fb15:	adc    BYTE PTR ss:[edi+0x3284740d],ch
  41fb1c:	jecxz  0x41fadd
  41fb1e:	jne    0x41fb53
  41fb20:	and    ch,BYTE PTR [esi-0x7208bc21]
  41fb26:	adc    dl,BYTE PTR [ebp+0x4c]
  41fb29:	ins    BYTE PTR es:[edi],dx
  41fb2a:	or     al,0x55
  41fb2c:	xor    ah,bl
  41fb2e:	mov    eax,ds:0xb52444f0
  41fb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb34:	sub    DWORD PTR [ebx+0x28],0x69
  41fb38:	or     ecx,DWORD PTR [ecx-0x10]
  41fb3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb3c:	dec    ebx
  41fb3d:	inc    ebx
  41fb3e:	push   ss
  41fb3f:	popf   
  41fb40:	cmp    edx,ecx
  41fb42:	jmp    0x5be5:0x5f1356b9
  41fb49:	sub    edi,DWORD PTR [eax-0x22]
  41fb4c:	mov    eax,ds:0x14b6f9ec
  41fb51:	jb     0x41fb20
  41fb53:	add    eax,0x678ff063
  41fb58:	sbb    eax,0x97a1dfd1
  41fb5d:	aad    0x54
  41fb5f:	mov    BYTE PTR [ebp+0x7c1cafeb],bh
  41fb65:	bound  edi,QWORD PTR [esi+0x1a30bd12]
  41fb6b:	or     DWORD PTR [ebx+0x7e],edx
  41fb6e:	jae    0x41fbdf
  41fb70:	stc    
  41fb71:	add    al,0x50
  41fb73:	add    al,0x79
  41fb75:	xor    al,0xa4
  41fb77:	jae    0x41fbb9
  41fb79:	punpckldq mm5,mm3
  41fb7c:	ins    BYTE PTR es:[edi],dx
  41fb7d:	rol    BYTE PTR [ecx+edi*2-0x7fa33068],1
  41fb84:	sub    esp,DWORD PTR [esi+0x4b5e2591]
  41fb8a:	push   0x2f259607
  41fb8f:	and    eax,0xd99d06d0
  41fb94:	dec    edx
  41fb95:	aaa    
  41fb96:	mov    ds:0xf3e7907e,eax
  41fb9b:	mov    ds:0x78ed6eee,eax
  41fba0:	push   ebp
  41fba1:	cmp    edx,esi
  41fba3:	xchg   esi,eax
  41fba4:	sub    edx,eax
  41fba6:	test   eax,0x440837f
  41fbab:	test   eax,0x8c452023
  41fbb0:	out    0x7e,al
  41fbb2:	popf   
  41fbb3:	cmp    ebx,ebx
  41fbb5:	pop    esp
  41fbb6:	inc    ebx
  41fbb7:	pop    esp
  41fbb8:	xchg   ecx,eax
  41fbb9:	fidiv  WORD PTR [ebp-0x6a]
  41fbbc:	and    esi,DWORD PTR [esi+0x15e296d6]
  41fbc2:	leave  
  41fbc3:	loopne 0x41fc02
  41fbc5:	enter  0x2b23,0x78
  41fbc9:	mov    ebx,0xff2d6c2c
  41fbce:	addr16 mov ebx,0x95eb9cf6
  41fbd4:	xor    dl,BYTE PTR [ecx+0x44b6c3ab]
  41fbda:	fstp   DWORD PTR [ebx-0x51]
  41fbdd:	cmp    ebp,DWORD PTR [edi-0x48d3024f]
  41fbe3:	mov    ch,0xa2
  41fbe5:	jl     0x41fbb3
  41fbe7:	mov    WORD PTR [ecx-0x6942026],ds
  41fbed:	push   esp
  41fbee:	inc    ecx
  41fbef:	xchg   edi,eax
  41fbf0:	sahf   
  41fbf1:	sbb    dh,bl
  41fbf3:	scas   al,BYTE PTR es:[edi]
  41fbf4:	xor    BYTE PTR [edi+0x543c36aa],bl
  41fbfa:	xchg   edi,eax
  41fbfb:	cld    
  41fbfc:	or     DWORD PTR [edi],esi
  41fbfe:	xchg   edx,eax
  41fbff:	int    0x8a
  41fc01:	mov    WORD PTR [eax+0x2a2a0b11],es
  41fc07:	cdq    
  41fc08:	iret   
  41fc09:	xor    al,dl
  41fc0b:	aaa    
  41fc0c:	(bad)  
  41fc0d:	jbe    0x41fc5f
  41fc0f:	mov    al,ds:0x1211d04e
  41fc14:	cli    
  41fc15:	xlat   BYTE PTR ds:[ebx]
  41fc16:	shr    BYTE PTR [eax+0x4627f576],1
  41fc1c:	test   eax,0xf6b1caa8
  41fc21:	xor    eax,0x455ca214
  41fc26:	push   ss
  41fc27:	lahf   
  41fc28:	lods   eax,DWORD PTR ds:[esi]
  41fc29:	(bad)  
  41fc2b:	sar    DWORD PTR [esi-0x43],cl
  41fc2e:	cld    
  41fc2f:	mov    DWORD PTR [edi+0x75c720cc],ecx
  41fc35:	in     eax,dx
  41fc36:	aam    0xc7
  41fc38:	sbb    al,0x75
  41fc3a:	push   edi
  41fc3b:	loope  0x41fc91
  41fc3d:	mov    eax,ds:0x61a716b7
  41fc42:	add    esp,esi
  41fc44:	(bad)  
  41fc45:	cli    
  41fc46:	pop    es
  41fc47:	mov    es,WORD PTR cs:[ebx-0x79]
  41fc4b:	lar    esi,WORD PTR [ebx+0x92fd74f]
  41fc52:	icebp  
  41fc53:	adc    esi,DWORD PTR [ebp-0x5be78d3a]
  41fc59:	add    ah,bh
  41fc5b:	xchg   ebp,eax
  41fc5c:	xlat   BYTE PTR ds:[ebx]
  41fc5d:	daa    
  41fc5e:	push   esp
  41fc5f:	shr    DWORD PTR [ebx],1
  41fc61:	mov    bl,0xca
  41fc63:	imul   esp,DWORD PTR [eax+ebp*8],0xffffff9a
  41fc67:	pop    ebx
  41fc68:	lea    eax,es:[ebx+ecx*2-0x34]
  41fc6d:	pop    esi
  41fc6e:	clc    
  41fc6f:	out    dx,al
  41fc70:	sbb    eax,0x6364cb0d
  41fc75:	repnz aaa 
  41fc77:	mov    bh,0xb5
  41fc79:	and    eax,0x54c6c174
  41fc7e:	fs push esi
  41fc80:	call   0x644c1519
  41fc85:	iret   
  41fc86:	inc    edx
  41fc87:	or     BYTE PTR [eax],ch
  41fc89:	mov    bl,0x8f
  41fc8b:	popf   
  41fc8c:	(bad)  
  41fc8e:	sbb    DWORD PTR [edx+ebx*4+0x2523b192],0x2f
  41fc96:	ja     0x41fc8e
  41fc98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc99:	xchg   esp,eax
  41fc9a:	xchg   esi,eax
  41fc9b:	adc    al,0x86
  41fc9d:	rcl    DWORD PTR [edi+0x60c54be6],1
  41fca3:	ror    DWORD PTR [ecx-0x20],0xc9
  41fca7:	pop    ds
  41fca8:	mov    edx,DWORD PTR [esp+edx*8]
  41fcab:	jnp    0x41fc33
  41fcad:	add    al,0x1c
  41fcaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb0:	cmp    esp,DWORD PTR [edi]
  41fcb2:	popa   
  41fcb3:	add    BYTE PTR [edi-0x60],0xc0
  41fcb7:	xchg   edx,eax
  41fcb8:	sub    bl,BYTE PTR [ecx]
  41fcba:	mov    ah,0x9d
  41fcbc:	dec    ebp
  41fcbd:	cmp    al,BYTE PTR [ebx+eiz*4-0x6f7d6f2a]
  41fcc4:	lahf   
  41fcc5:	fiadd  WORD PTR [esp+edx*1+0x7e8fee76]
  41fccc:	mov    BYTE PTR [edi],bh
  41fcce:	pop    edi
  41fccf:	inc    ebx
  41fcd0:	push   edx
  41fcd1:	(bad)  
  41fcd3:	in     eax,0xe1
  41fcd5:	shl    DWORD PTR [eax*8+0x7525b784],0x17
  41fcdd:	lea    ebx,[edx-0x2b0956ed]
  41fce3:	push   es
  41fce4:	fidivr WORD PTR [eax]
  41fce6:	sbb    edx,DWORD PTR [edi+0x689be5c7]
  41fcec:	mov    al,0x91
  41fcee:	dec    ebx
  41fcef:	xor    DWORD PTR [esi+0x43],esi
  41fcf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcf3:	scas   eax,DWORD PTR es:[edi]
  41fcf4:	sbb    BYTE PTR [ebx],ah
  41fcf6:	jb     0x41fcfb
  41fcf8:	jecxz  0x41fcc5
  41fcfa:	fbstp  TBYTE PTR [edi+0x61]
  41fcfd:	pop    ds
  41fcfe:	sub    al,0x5c
  41fd00:	xor    eax,ebx
  41fd02:	retf   
  41fd03:	pop    ebx
  41fd04:	dec    edx
  41fd05:	sar    BYTE PTR ds:0xe9bf5043,0x90
  41fd0c:	pop    esp
  41fd0d:	push   ds
  41fd0e:	retf   0x42bc
  41fd11:	sahf   
  41fd12:	or     al,0x71
  41fd14:	mov    BYTE PTR [ebp-0x35],dh
  41fd17:	adc    bh,dh
  41fd19:	sbb    DWORD PTR [edx],0xffffffac
  41fd1c:	scas   eax,DWORD PTR es:[edi]
  41fd1d:	mov    WORD PTR [eax+0x128bd1bc],cs
  41fd23:	ret    0xee33
  41fd26:	cdq    
  41fd27:	xchg   ebx,edx
  41fd29:	js     0x41fcec
  41fd2b:	sbb    BYTE PTR [edi+0x7c4613cd],bh
  41fd31:	inc    edi
  41fd32:	je     0x41fd4d
  41fd34:	sti    
  41fd35:	dec    edx
  41fd36:	sbb    BYTE PTR [eax+ecx*1+0xb4175e9],ch
  41fd3d:	push   cs
  41fd3e:	mov    dh,0xe0
  41fd40:	adc    ecx,DWORD PTR [edi-0x6cb3afca]
  41fd46:	and    eax,eax
  41fd48:	sbb    eax,0x621819b3
  41fd4d:	mov    DWORD PTR [edx],esp
  41fd4f:	aam    0xaa
  41fd51:	out    0xd9,eax
  41fd53:	std    
  41fd54:	push   eax
  41fd55:	mov    esi,0xc69e2ebd
  41fd5a:	ss sahf 
  41fd5c:	pushf  
  41fd5d:	mov    ecx,0xbebd836e
  41fd62:	in     eax,dx
  41fd63:	not    DWORD PTR ds:0x5638a9e3
  41fd69:	push   ss
  41fd6a:	jae    0x41fd99
  41fd6c:	jmp    0x9d0c:0xd096f6e9
  41fd73:	mov    ebx,0x74ae6234
  41fd78:	enter  0xc13a,0xa0
  41fd7c:	repnz adc al,0x3d
  41fd7f:	int    0xb9
  41fd81:	aam    0xd2
  41fd83:	cmc    
  41fd84:	adc    al,0x3d
  41fd86:	xchg   edx,eax
  41fd87:	test   al,0x56
  41fd89:	jns    0x41fd24
  41fd8b:	in     al,0x6
  41fd8d:	retf   
  41fd8e:	loopne 0x41fdf7
  41fd90:	scas   al,BYTE PTR es:[edi]
  41fd91:	add    bl,bh
  41fd93:	in     eax,dx
  41fd94:	adc    BYTE PTR [edi+edi*8-0x47],bh
  41fd98:	xchg   edx,eax
  41fd99:	mov    edi,0xc717dafa
  41fd9e:	(bad)  
  41fd9f:	(bad)  
  41fda0:	iret   
  41fda1:	xor    eax,0x294db93
  41fda6:	mov    WORD PTR [ebx],gs
  41fda8:	cdq    
  41fda9:	cdq    
  41fdaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdab:	mov    bh,0x30
  41fdad:	(bad)  
  41fdae:	out    0x1f,al
  41fdb0:	jnp    0x41fd64
  41fdb2:	mov    dh,0xc
  41fdb4:	ror    BYTE PTR [edx-0x8],1
  41fdb7:	bswap  ecx
  41fdb9:	stos   DWORD PTR es:[edi],eax
  41fdba:	sahf   
  41fdbb:	or     al,0xc4
  41fdbd:	mov    DWORD PTR [edx],edi
  41fdbf:	aas    
  41fdc0:	daa    
  41fdc1:	stos   BYTE PTR es:[edi],al
  41fdc2:	cli    
  41fdc3:	in     eax,dx
  41fdc4:	push   ecx
  41fdc5:	and    bh,bl
  41fdc7:	push   es
  41fdc8:	and    bh,bl
  41fdca:	add    BYTE PTR [eax+0x4e],ah
  41fdcd:	out    0x60,eax
  41fdcf:	(bad)  
  41fdd0:	and    edx,DWORD PTR [esi+0x60]
  41fdd3:	rcl    DWORD PTR [ebp+0x6232b14b],0x7b
  41fdda:	imul   edi,eax,0xe2569d1b
  41fde0:	inc    eax
  41fde1:	and    DWORD PTR [ecx+0x342379a4],edx
  41fde7:	ins    BYTE PTR es:[edi],dx
  41fde8:	adc    BYTE PTR [eax-0x6250b233],0xe9
  41fdef:	jecxz  0x41fe3c
  41fdf1:	add    ch,BYTE PTR [edi]
  41fdf3:	sub    al,0x41
  41fdf5:	jno    0x41fde3
  41fdf7:	adc    al,ch
  41fdf9:	adc    DWORD PTR [edi-0x2ba7394b],ecx
  41fdff:	jp     0x41fe52
  41fe01:	scas   eax,DWORD PTR es:[edi]
  41fe02:	jbe    0x41fe46
  41fe04:	mov    ch,0x87
  41fe06:	and    bl,BYTE PTR [edx]
  41fe08:	out    dx,al
  41fe09:	mov    ds:0x464a5891,al
  41fe0e:	push   0xf1723c57
  41fe13:	test   al,0x2e
  41fe15:	int3   
  41fe16:	inc    ebx
  41fe17:	mov    bl,0x2a
  41fe19:	cdq    
  41fe1a:	pop    ebp
  41fe1b:	or     BYTE PTR [ebp-0x4e],al
  41fe1e:	mov    al,0x22
  41fe20:	sahf   
  41fe21:	shl    DWORD PTR [ecx-0x46],0x1a
  41fe25:	cmp    ah,0x45
  41fe28:	push   ss
  41fe29:	jno    0x41fdc9
  41fe2b:	imul   ecx,esp,0xffffffd2
  41fe2e:	add    eax,0x5734d797
  41fe33:	test   BYTE PTR ds:0x5461f1a9,dh
  41fe39:	cdq    
  41fe3a:	sub    ebp,ebp
  41fe3c:	clc    
  41fe3d:	je     0x41fdf3
  41fe3f:	jbe    0x41fdd0
  41fe41:	shl    DWORD PTR [esi+0x75de8697],cl
  41fe47:	js     0x41fea5
  41fe49:	fimul  DWORD PTR [ecx-0x3c]
  41fe4c:	lods   al,BYTE PTR ds:[esi]
  41fe4d:	mov    eax,0x6a1fd6fc
  41fe52:	leave  
  41fe53:	xchg   ebx,eax
  41fe54:	nop
  41fe55:	add    BYTE PTR [ecx-0x7f],bl
  41fe58:	sbb    al,0x14
  41fe5a:	xchg   edx,eax
  41fe5b:	xchg   esi,eax
  41fe5c:	cdq    
  41fe5d:	rcr    DWORD PTR [ebp+0x11],1
  41fe60:	or     ebx,DWORD PTR [esi]
  41fe62:	repz cld 
  41fe64:	fs inc eax
  41fe66:	pop    ecx
  41fe67:	jbe    0x41fe0d
  41fe69:	push   cs
  41fe6a:	xor    ebx,DWORD PTR [edx+esi*2-0x4b1bb576]
  41fe71:	adc    cl,ch
  41fe73:	xor    dl,BYTE PTR [eax]
  41fe75:	leave  
  41fe76:	add    dh,BYTE PTR ds:[eax]
  41fe79:	cli    
  41fe7a:	sub    BYTE PTR [esi+0x2905c5f1],dl
  41fe80:	xchg   edx,eax
  41fe81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe82:	dec    ebp
  41fe83:	(bad)  
  41fe84:	fwait
  41fe85:	xchg   ebx,eax
  41fe86:	mov    ds:0x2adb8a6a,al
  41fe8b:	add    ebp,ebp
  41fe8d:	rcl    DWORD PTR [edi+0x39],1
  41fe90:	add    DWORD PTR [ebp-0x704ed68f],esi
  41fe96:	xchg   ebx,eax
  41fe97:	cli    
  41fe98:	addr16 je 0x41fe1c
  41fe9b:	pop    ebx
  41fe9c:	fnstenv [ebx+esi*8-0x73a7afa3]
  41fea3:	stos   BYTE PTR es:[edi],al
  41fea4:	xor    BYTE PTR [ecx-0x1c],ch
  41fea7:	jmp    0xdaaa:0x3ac5f73f
  41feae:	xchg   ebp,eax
  41feaf:	jbe    0x41fe5c
  41feb1:	and    edx,DWORD PTR [esi]
  41feb3:	cmc    
  41feb4:	mov    dl,0xcb
  41feb6:	xchg   edi,eax
  41feb7:	dec    edi
  41feb8:	add    BYTE PTR [edi+0x7c301b52],al
  41febe:	mov    ds:0xb518671b,al
  41fec3:	inc    edx
  41fec4:	mov    eax,0x2d5d4287
  41fec9:	jno    0x41ff23
  41fecb:	jg     0x41fed1
  41fecd:	push   ecx
  41fece:	or     al,0x46
  41fed0:	ins    DWORD PTR es:[edi],dx
  41fed1:	dec    esp
  41fed2:	jle    0x41fe87
  41fed4:	sbb    eax,0xd9575791
  41fed9:	lahf   
  41feda:	rcl    BYTE PTR [edi-0x783ab2cc],0xc2
  41fee1:	jne    0x41febd
  41fee3:	mov    bh,0x38
  41fee5:	or     al,0x8a
  41fee7:	inc    edx
  41fee8:	jmp    0x41ff5a
  41feea:	out    0xe9,al
  41feec:	sti    
  41feed:	push   ds
  41feee:	mov    dl,0x39
  41fef0:	pop    esi
  41fef1:	clc    
  41fef2:	icebp  
  41fef3:	jmp    0x41fef8
  41fef5:	add    dl,BYTE PTR fs:[esi-0x4ee7d017]
  41fefc:	xchg   edi,eax
  41fefd:	or     eax,DWORD PTR [ebx]
  41feff:	hlt    
  41ff00:	enter  0x1bd0,0x8d
  41ff04:	addr16 mov dl,0xdd
  41ff07:	pop    esi
  41ff08:	mov    ebp,DWORD PTR [eax]
  41ff0a:	cmp    esp,ebx
  41ff0c:	stc    
  41ff0d:	jle    0x41ff1c
  41ff0f:	loope  0x41fe96
  41ff11:	sbb    BYTE PTR [esi+eax*2-0x55a89983],0x1f
  41ff19:	mov    ebx,0xd1b6d8f6
  41ff1e:	push   ss
  41ff1f:	stc    
  41ff20:	mov    ebp,0x966d0508
  41ff25:	pop    ebp
  41ff26:	inc    ebp
  41ff27:	cli    
  41ff28:	fisub  DWORD PTR [ecx+0x28]
  41ff2b:	add    eax,0x1a4cda58
  41ff30:	(bad)  
  41ff32:	je     0x41ff32
  41ff34:	mov    cl,0xc8
  41ff36:	mul    DWORD PTR [ecx-0x6a]
  41ff39:	xchg   BYTE PTR [eax+ebp*8+0x11558fc3],cl
  41ff40:	sbb    eax,0xa0eef76f
  41ff45:	pushf  
  41ff46:	gs test esp,eax
  41ff49:	mov    dl,0x40
  41ff4b:	div    DWORD PTR [ebp-0x4c]
  41ff4e:	shl    BYTE PTR [ebx],0x38
  41ff51:	xchg   esp,eax
  41ff52:	retf   0xf659
  41ff55:	call   0xe4866149
  41ff5a:	inc    eax
  41ff5b:	mov    ebp,0x3d8ef6f5
  41ff60:	sub    al,0xb9
  41ff62:	into   
  41ff63:	adc    edx,DWORD PTR [eax-0x72e900c3]
  41ff69:	ret    
  41ff6a:	add    esp,DWORD PTR [edx]
  41ff6c:	and    esp,DWORD PTR [eax]
  41ff6e:	fsubp  st(3),st
  41ff70:	jp     0x41ff13
  41ff72:	iret   
  41ff73:	inc    esp
  41ff74:	mov    ah,0x8f
  41ff76:	and    DWORD PTR [edi],eax
  41ff78:	add    dh,BYTE PTR [esi-0x465a8327]
  41ff7e:	hlt    
  41ff7f:	stos   DWORD PTR es:[edi],eax
  41ff80:	jo     0x41ff7c
  41ff82:	mov    fs,WORD PTR [edi]
  41ff84:	jp     0x420002
  41ff86:	push   ds
  41ff87:	dec    esp
  41ff88:	mov    ecx,0x10fa8740
  41ff8d:	in     eax,dx
  41ff8e:	lods   eax,DWORD PTR ds:[esi]
  41ff8f:	mov    eax,0x86d69b37
  41ff94:	aam    0xde
  41ff96:	push   0xc4805577
  41ff9b:	pusha  
  41ff9c:	cli    
  41ff9d:	fidivr WORD PTR [esi-0x664fa4e]
  41ffa3:	push   cs
  41ffa4:	aad    0xff
  41ffa6:	and    eax,0xb38fb260
  41ffab:	mov    ebp,0x5382e0d3
  41ffb0:	xchg   ebp,eax
  41ffb1:	inc    eax
  41ffb2:	pop    es
  41ffb3:	ret    
  41ffb4:	bound  edi,QWORD PTR [ebp+edi*4+0x3c2b104b]
  41ffbb:	fidiv  WORD PTR [ebx+0x6d]
  41ffbe:	daa    
  41ffbf:	retf   0xb9a7
  41ffc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc3:	in     al,0x5c
  41ffc5:	mov    ebp,0x9e12c80d
  41ffca:	mov    esi,0x4c135c85
  41ffcf:	data16 fldcw WORD PTR [ebx]
  41ffd2:	pcmpgtd mm7,mm3
  41ffd5:	push   edi
  41ffd6:	pop    ecx
  41ffd7:	scas   al,BYTE PTR es:[edi]
  41ffd8:	jbe    0x41ff74
  41ffda:	add    al,BYTE PTR [ecx+edi*1+0x688f14b3]
  41ffe1:	mov    ah,0xd0
  41ffe3:	fs ds xor edi,esi
  41ffe7:	jne    0x420040
  41ffe9:	repnz adc BYTE PTR [ebp-0x14ab628e],cl
  41fff0:	rcl    BYTE PTR ds:0x98d9,cl
  41fff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff6:	cmp    DWORD PTR [edx-0x3a8f0a50],ecx
  41fffc:	(bad)  
  41fffd:	and    ebx,DWORD PTR [esi-0x2a]
  420000:	retf   
  420001:	shr    ch,0x6f
  420004:	dec    esp
  420005:	icebp  
  420006:	mov    ebp,0x2be8c17d
  42000b:	(bad)  
  42000c:	jecxz  0x42003a
  42000e:	cli    
  42000f:	ja     0x420070
  420011:	jp     0x420056
  420013:	push   ebx
  420014:	les    edi,FWORD PTR [ebp+0x2b5a7549]
  42001a:	test   DWORD PTR [edx-0x17],ebp
  42001d:	adc    edi,esp
  42001f:	cld    
  420020:	lods   al,BYTE PTR ds:[esi]
  420021:	xor    eax,0xedce9b34
  420026:	ins    BYTE PTR es:[edi],dx
  420027:	adc    esp,ecx
  420029:	call   0x6c00f8a
  42002e:	leave  
  42002f:	(bad)
  420032:	inc    ecx
  420033:	data16 gs arpl sp,dx
  420037:	adc    eax,0xf62a3464
  42003c:	pop    edi
  42003d:	mov    cl,0x73
  42003f:	test   eax,0xd04e804e
  420044:	fdiv   DWORD PTR ds:[edi]
  420047:	mov    al,ds:0x40d703b3
  42004c:	dec    ecx
  42004d:	lods   eax,DWORD PTR ds:[esi]
  42004e:	add    al,0x86
  420050:	repnz nop
  420052:	jne    0x420032
  420054:	arpl   sp,dx
  420056:	cmp    ch,BYTE PTR [ebp+0xb]
  420059:	dec    ebx
  42005a:	(bad)  
  42005b:	fisubr DWORD PTR [esi]
  42005d:	adc    al,0x95
  42005f:	(bad)  [edi-0x5a]
  420062:	or     bl,BYTE PTR [edx+0x1a368f53]
  420068:	mov    ecx,DWORD PTR [ebp+0x4a]
  42006b:	jecxz  0x4200ea
  42006d:	stc    
  42006e:	(bad)  [ecx]
  420070:	xchg   ebp,eax
  420071:	js     0x420084
  420073:	cmp    al,0x70
  420075:	inc    edx
  420076:	dec    esp
  420077:	push   es
  420078:	push   esi
  420079:	jmp    0x25362632
  42007e:	xor    ebp,DWORD PTR [ebp-0x72]
  420081:	mov    ch,BYTE PTR ds:0xdfec4c12
  420087:	add    al,0xcb
  420089:	(bad)  
  42008a:	fsub   QWORD PTR [ecx+0x53]
  42008d:	jns    0x42003e
  42008f:	push   cs
  420090:	leave  
  420091:	inc    cx
  420093:	mov    edx,0xfa174586
  420098:	pop    esi
  420099:	sbb    bl,BYTE PTR es:[edi+0x70c0d59]
  4200a0:	add    DWORD PTR [eax+0x6f],edi
  4200a3:	(bad)  
  4200a4:	pusha  
  4200a5:	mov    edi,0xe9c1cf7d
  4200aa:	sbb    ebp,DWORD PTR [ebp+0x26]
  4200ad:	xlat   BYTE PTR ds:[ebx]
  4200ae:	fs xchg edx,eax
  4200b0:	mov    al,0x82
  4200b2:	neg    DWORD PTR [ecx+0x10]
  4200b5:	js     0x420098
  4200b7:	leave  
  4200b8:	adc    ecx,esi
  4200ba:	xor    eax,0x5dfa86a2
  4200bf:	fcomp  QWORD PTR [esi-0x75]
  4200c2:	pop    es
  4200c3:	dec    esi
  4200c4:	push   0x39
  4200c6:	out    0x25,eax
  4200c8:	inc    eax
  4200c9:	dec    edx
  4200ca:	lods   eax,DWORD PTR ds:[esi]
  4200cb:	and    BYTE PTR [eax-0x40fb15fe],cl
  4200d1:	test   al,0xc7
  4200d3:	push   es
  4200d4:	adc    BYTE PTR [edx-0x1f],cl
  4200d7:	in     al,dx
  4200d8:	imul   edi,DWORD PTR [esi-0x11],0x494734d9
  4200df:	lock pusha 
  4200e1:	add    DWORD PTR [ecx],0x51d5a290
  4200e7:	or     BYTE PTR [ebx+0x61],0xe5
  4200eb:	cmc    
  4200ec:	dec    ebx
  4200ed:	push   esp
  4200ee:	dec    edi
  4200ef:	inc    ebp
  4200f0:	or     BYTE PTR [eax],0xd7
  4200f3:	mov    al,0x4a
  4200f5:	sub    ch,BYTE PTR [edi]
  4200f7:	dec    eax
  4200f8:	or     BYTE PTR [edi+0x29293aa9],dl
  4200fe:	cmp    DWORD PTR [esi+0x33],ebx
  420101:	mov    edx,0xc680cea3
  420106:	mov    al,ds:0x7a5016a5
  42010b:	clc    
  42010c:	in     eax,dx
  42010d:	dec    ebp
  42010e:	add    eax,0x8718a39b
  420113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420114:	sub    ah,al
  420116:	(bad)  
  420117:	das    
  420118:	xor    edi,DWORD PTR [edi]
  42011a:	sub    BYTE PTR [edi+0x16],dl
  42011d:	das    
  42011e:	stos   BYTE PTR es:[edi],al
  42011f:	cmp    eax,0x8c48d834
  420124:	mov    al,BYTE PTR [ebx]
  420126:	adc    DWORD PTR [eax-0x7b],eax
  420129:	test   BYTE PTR [edx-0x7f765edd],ch
  42012f:	(bad)  
  420130:	xchg   edi,eax
  420131:	imul   esp,DWORD PTR [edx],0x1e
  420134:	xor    eax,0xcd05bc15
  420139:	aam    0x3b
  42013b:	retf   
  42013c:	stos   BYTE PTR es:[edi],al
  42013d:	xor    al,0x94
  42013f:	in     al,0x78
  420141:	and    ch,cl
  420143:	inc    edi
  420144:	pop    eax
  420145:	sbb    eax,0x1fa99b18
  42014a:	leave  
  42014b:	js     0x4200ec
  42014d:	cli    
  42014e:	dec    esp
  42014f:	mov    cl,0x80
  420151:	sbb    ebx,DWORD PTR [edx-0x68]
  420154:	or     DWORD PTR [ebp-0x29],0xa1e2a72a
  42015b:	cmp    dh,0x8d
  42015e:	dec    edi
  42015f:	test   bl,ah
  420161:	aaa    
  420162:	ins    BYTE PTR es:[edi],dx
  420163:	call   0x394769af
  420168:	test   eax,0x6647a604
  42016d:	int3   
  42016e:	fisttp QWORD PTR [esi-0x1f]
  420171:	add    eax,0x95b99967
  420176:	pop    esi
  420177:	int3   
  420178:	push   edi
  420179:	enter  0x73e9,0xa1
  42017d:	or     esp,DWORD PTR [esi+0x5e]
  420180:	adc    BYTE PTR [ecx+0x67e9ad7a],ch
  420186:	xor    dh,BYTE PTR [ebx-0x5f]
  420189:	jno    0x420137
  42018b:	jecxz  0x420185
  42018d:	jb     0x420142
  42018f:	push   ebx
  420190:	scas   eax,DWORD PTR es:[edi]
  420191:	add    dl,0x3a
  420194:	jp     0x42011a
  420196:	lods   al,BYTE PTR ds:[esi]
  420197:	mov    ss,ebp
  420199:	andnps xmm7,xmm0
  42019c:	jmp    0x4201b7
  42019e:	cdq    
  42019f:	push   0xffffff8b
  4201a1:	sti    
  4201a2:	cmp    BYTE PTR [ebx-0x2b],dh
  4201a5:	stc    
  4201a6:	test   BYTE PTR [edx],ah
  4201a8:	mov    esi,0xa12cbbe
  4201ae:	jbe    0x4201ec
  4201b0:	(bad)  [ebp-0x26c17976]
  4201b6:	mov    ecx,0xcc170006
  4201bb:	mov    ecx,0x8cdfcc47
  4201c0:	rcr    DWORD PTR ds:0xaf6d799c,0x99
  4201c7:	repz jo 0x420181
  4201ca:	loopne 0x420188
  4201cc:	aam    0x69
  4201ce:	cmp    edi,DWORD PTR [ecx-0x686ff225]
  4201d4:	or     eax,0x72fcd79a
  4201d9:	mov    al,BYTE PTR [ecx-0x12]
  4201dc:	cmp    edi,DWORD PTR [esi-0x25]
  4201df:	out    dx,eax
  4201e0:	xchg   DWORD PTR [esi-0x43],ebx
  4201e3:	dec    ebx
  4201e4:	enter  0x6806,0x80
  4201e8:	sbb    DWORD PTR [edx],0x60
  4201eb:	add    DWORD PTR ds:[ebx-0x506158aa],eax
  4201f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201f3:	mov    edx,0xfba01f1
  4201f8:	mov    ds:0x91add8b8,al
  4201fd:	in     eax,0xee
  4201ff:	and    DWORD PTR [ecx],0x2c5e0839
  420205:	(bad)  
  420206:	push   ebx
  420207:	sub    eax,0x9a47d4a5
  42020c:	mov    dl,0xdd
  42020e:	ret    
  42020f:	jge    0x4201f6
  420211:	jge    0x4201a0
  420213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420214:	into   
  420215:	imul   ecx,DWORD PTR [edx+0x45],0xffffff81
  420219:	and    DWORD PTR [edi-0x55ddac83],0x56
  420220:	jp     0x4201d6
  420222:	div    DWORD PTR [esi+0x7e]
  420225:	stc    
  420226:	mov    al,0xe2
  420228:	pop    edx
  420229:	in     al,dx
  42022a:	cmp    al,0x6d
  42022c:	je     0x42029f
  42022e:	rol    DWORD PTR [ecx+0x6ce2f0f6],cl
  420234:	pminsw mm4,QWORD PTR [ecx-0x33cd2942]
  42023b:	xchg   ebp,eax
  42023c:	xor    ch,BYTE PTR [esi-0x2135609b]
  420242:	mov    DWORD PTR [edx],edi
  420244:	mov    esp,DWORD PTR [ecx]
  420246:	out    dx,al
  420247:	retf   
  420248:	jmp    0x42026f
  42024a:	mov    cl,0xe6
  42024c:	xchg   ebp,eax
  42024d:	test   BYTE PTR [edx],ch
  42024f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420250:	inc    edi
  420251:	loope  0x420215
  420253:	js     0x42024b
  420255:	stc    
  420256:	cmc    
  420257:	cmp    esi,DWORD PTR [esp+ecx*4+0x2890c37b]
  42025e:	(bad)  
  42025f:	call   0x22ba:0x4872b65b
  420266:	(bad)
  420269:	lea    eax,[ebx-0x530416b9]
  42026f:	in     eax,dx
  420270:	outs   dx,BYTE PTR es:[esi]
  420272:	xlat   BYTE PTR ds:[ebx]
  420273:	daa    
  420274:	dec    esi
  420275:	mov    ch,0x1a
  420277:	hlt    
  420278:	mov    ch,dh
  42027a:	xchg   BYTE PTR ds:0x2ec77630,al
  420280:	xor    eax,0xc947e361
  420285:	sar    edx,cl
  420287:	cwde   
  420288:	ficomp WORD PTR [edx-0x66ef8464]
  42028e:	fisubr WORD PTR [esp+esi*8-0x5c958229]
  420295:	push   ecx
  420296:	jo     0x4202f7
  420298:	push   0xfffffff8
  42029a:	fstp   st(1)
  42029c:	arpl   WORD PTR [eax-0x2ed12809],cx
  4202a2:	sub    dh,al
  4202a4:	out    dx,eax
  4202a5:	sbb    al,0xf2
  4202a7:	pop    esi
  4202a8:	out    dx,eax
  4202a9:	bound  ecx,QWORD PTR [esi-0x1c82ea78]
  4202af:	retf   
  4202b0:	lods   al,BYTE PTR ds:[esi]
  4202b1:	arpl   WORD PTR [ebx+0x344d9a86],di
  4202b7:	rcr    al,1
  4202b9:	xor    al,0x6b
  4202bb:	arpl   WORD PTR [ecx-0x2a],bp
  4202be:	dec    eax
  4202bf:	lock int3 
  4202c1:	ret    
  4202c2:	push   edi
  4202c3:	test   BYTE PTR [ebx],0x74
  4202c6:	imul   esp,edx,0xfffffffe
  4202c9:	pop    ebx
  4202ca:	(bad)  
  4202cb:	mov    al,0xed
  4202cd:	sub    BYTE PTR [esi+0x443ffb80],0xb9
  4202d4:	dec    eax
  4202d5:	sbb    DWORD PTR [ecx+0x3a968392],0x2d
  4202dc:	sbb    BYTE PTR [eax+0x23ab0b7e],bh
  4202e2:	fstp   DWORD PTR [ebx-0x4794eecf]
  4202e8:	shr    BYTE PTR [esi+0x1dddbe0a],cl
  4202ee:	pop    ds
  4202ef:	fcom   st(0)
  4202f1:	xchg   edi,eax
  4202f2:	jle    0x420368
  4202f4:	adc    al,0xca
  4202f6:	or     al,0x31
  4202f8:	cld    
  4202f9:	adc    eax,0x937378cf
  4202fe:	xchg   esi,edx
  420300:	enter  0xd02,0x9
  420304:	push   0x2e46b067
  420309:	sbb    BYTE PTR [edi+0x4f8df5cc],ah
  42030f:	ins    DWORD PTR es:[edi],dx
  420310:	mov    dh,0x31
  420312:	test   al,0x96
  420314:	in     al,0xde
  420316:	(bad)  
  420317:	popa   
  420318:	lods   al,BYTE PTR ds:[esi]
  420319:	inc    ecx
  42031a:	rcl    bl,0x80
  42031d:	inc    edx
  42031e:	add    DWORD PTR [ecx-0x26],ebx
  420321:	leave  
  420322:	cmp    ebx,eax
  420324:	xor    DWORD PTR [ebx+0x423d7cd5],esi
  42032a:	mov    ecx,0xb8b56ea7
  42032f:	fwait
  420330:	pop    eax
  420331:	test   al,0x1
  420333:	adc    esi,DWORD PTR [ebp+0x5d2287cb]
  420339:	(bad)
  42033c:	enter  0x97d0,0x2c
  420340:	pop    ss
  420341:	pop    ds
  420342:	retf   0x7ea1
  420345:	sbb    al,0xe5
  420347:	lds    ebx,FWORD PTR [ebx-0x78]
  42034a:	dec    ebx
  42034b:	lods   eax,DWORD PTR ds:[esi]
  42034c:	mov    ah,0x4
  42034e:	es and al,0x1c
  420351:	outs   dx,DWORD PTR ds:[esi]
  420352:	ret    
  420353:	mov    ah,0x1d
  420355:	push   ebx
  420356:	xchg   ebp,ebp
  420358:	add    BYTE PTR [eax],al
  42035a:	and    BYTE PTR [ecx+esi*2],ch
  42035d:	retf   
  42035e:	ins    DWORD PTR es:[edi],dx
  42035f:	push   0xda838344
  420364:	sub    BYTE PTR ds:0x3afacd99,bh
  42036a:	mov    ebx,0x97f5bab4
  42036f:	mov    ecx,0xcd723423
  420374:	rcl    DWORD PTR [edx+0x2026ba6b],0xce
  42037b:	std    
  42037c:	mov    dl,0xff
  42037e:	sbb    eax,0xeddb45c6
  420383:	sbb    BYTE PTR [ebp+0x6c],bl
  420386:	xchg   ecx,eax
  420387:	in     eax,0xfc
  420389:	pusha  
  42038a:	xor    eax,0x7c562b93
  42038f:	sub    edx,DWORD PTR [edi]
  420391:	mul    BYTE PTR [ecx]
  420393:	retf   
  420394:	(bad)  
  420395:	mov    ebp,0x84863d28
  42039a:	mov    ecx,0xdafc0798
  42039f:	inc    esi
  4203a0:	ss aam 0x66
  4203a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a4:	pop    ds
  4203a5:	dec    ebx
  4203a6:	cs push ss
  4203a8:	or     eax,0x15a597a3
  4203ad:	push   ds
  4203ae:	inc    ebx
  4203af:	mov    edx,0x12134f79
  4203b4:	fdiv   DWORD PTR [esi-0x4df9f353]
  4203ba:	sub    esi,DWORD PTR [ecx+0x26]
  4203bd:	dec    ebx
  4203be:	fwait
  4203bf:	sub    al,BYTE PTR [edx+0x24abc70e]
  4203c5:	or     dh,cl
  4203c7:	enter  0xc009,0x8c
  4203cb:	ret    0x6e27
  4203ce:	sti    
  4203cf:	daa    
  4203d0:	xchg   ebx,eax
  4203d1:	jne    0x420435
  4203d3:	sbb    eax,0xb450f915
  4203d8:	leave  
  4203d9:	popa   
  4203da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203db:	lods   eax,DWORD PTR ds:[esi]
  4203dc:	into   
  4203dd:	jbe    0x4203ab
  4203df:	sbb    esi,0xbccf959c
  4203e5:	jb     0x4203da
  4203e7:	inc    eax
  4203e8:	lods   al,BYTE PTR ds:[esi]
  4203e9:	xor    eax,eax
  4203eb:	fisttp QWORD PTR ds:0x301f49aa
  4203f1:	xchg   esp,eax
  4203f2:	test   eax,0x1b4d8efe
  4203f7:	jae    0x42045f
  4203f9:	jmp    0x1c4aa54e
  4203fe:	dec    edi
  4203ff:	cmc    
  420400:	dec    edx
  420401:	retf   0xcab0
  420404:	xchg   DWORD PTR [eax+edi*8],esi
  420407:	mov    ds:0xa4d0e80b,eax
  42040c:	adc    BYTE PTR [eax+edi*2-0x2acca9c7],al
  420413:	xor    bl,BYTE PTR [eax+0x3a4ae9a2]
  420419:	inc    edx
  42041a:	sub    ebp,DWORD PTR [eax+0x39]
  42041d:	sub    ah,BYTE PTR [eax-0x74]
  420420:	cmp    ah,bl
  420422:	sahf   
  420423:	repz sbb al,0xd6
  420426:	inc    esi
  420427:	retf   0x2928
  42042a:	inc    eax
  42042b:	sahf   
  42042c:	sub    DWORD PTR [eax+edx*2],esi
  42042f:	sar    BYTE PTR [ebx],1
  420431:	dec    edi
  420432:	push   ds
  420433:	ins    DWORD PTR es:[edi],dx
  420434:	adc    al,0x41
  420436:	pushf  
  420437:	push   eax
  420438:	jl     0x420471
  42043a:	mov    eax,0x8e113bd6
  42043f:	test   DWORD PTR [edi+0x68],ebp
  420442:	or     al,0x85
  420444:	adc    cl,bl
  420446:	je     0x42040c
  420448:	xor    DWORD PTR [edx-0x30],ebx
  42044b:	in     al,dx
  42044c:	scas   al,BYTE PTR es:[edi]
  42044d:	xchg   ecx,eax
  42044e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42044f:	in     al,0xec
  420451:	sub    eax,0x4fe69a53
  420456:	rcl    DWORD PTR [edi-0x46ae2e9],1
  42045c:	push   cs
  42045d:	fisubr DWORD PTR [eax-0x7a493d72]
  420463:	cmp    al,0xfc
  420465:	inc    edi
  420466:	sub    eax,0xeda34660
  42046b:	pop    esp
  42046c:	sub    edx,DWORD PTR [ebp+eax*8-0x18]
  420470:	pop    esp
  420471:	adc    DWORD PTR [edi-0x6dd4d01c],ebp
  420477:	jo     0x4204b9
  420479:	xchg   ebp,eax
  42047a:	rol    BYTE PTR [ebp+0x2040e07d],cl
  420480:	sub    ebp,DWORD PTR [esi]
  420482:	scas   al,BYTE PTR es:[edi]
  420483:	mov    WORD PTR [edx+eax*4+0x2a],es
  420487:	out    dx,al
  420488:	sbb    al,0xbf
  42048a:	add    al,0xa9
  42048c:	push   es
  42048d:	loope  0x420423
  42048f:	call   DWORD PTR [ebx+0x4da84d8f]
  420495:	(bad)  
  420496:	daa    
  420497:	and    ebx,ebp
  420499:	fs cmp al,0xa9
  42049c:	lock mov ch,0x3a
  42049f:	adc    edx,DWORD PTR [eax-0x56b3afa9]
  4204a5:	mov    edi,0x3f96424f
  4204aa:	(bad)  
  4204ab:	test   eax,0xd09eccbf
  4204b0:	sti    
  4204b1:	(bad)  
  4204b2:	jg     0x4204db
  4204b4:	enter  0x71d6,0xd8
  4204b8:	sub    al,0x74
  4204ba:	cmp    eax,0x9c281bc2
  4204bf:	out    0x4c,eax
  4204c1:	pusha  
  4204c2:	in     al,0x4c
  4204c4:	jae    0x4204da
  4204c6:	fdiv   QWORD PTR fs:[ebp-0x25]
  4204ca:	test   al,0x45
  4204cc:	pop    ds
  4204cd:	icebp  
  4204ce:	into   
  4204cf:	or     eax,0xb23150bc
  4204d4:	jb     0x420528
  4204d6:	ins    DWORD PTR es:[edi],dx
  4204d7:	into   
  4204d8:	mov    edx,esi
  4204da:	xlat   BYTE PTR ds:[ebx]
  4204db:	into   
  4204dc:	mov    dl,0xa6
  4204de:	pop    esi
  4204df:	jmp    0x42054a
  4204e1:	mov    al,ds:0x3578227c
  4204e6:	sbb    eax,0x2b8487f2
  4204eb:	mov    eax,0x4fd842ef
  4204f0:	test   al,0x3f
  4204f2:	pop    es
  4204f3:	(bad)  
  4204f4:	sbb    DWORD PTR [ecx-0x49],edx
  4204f7:	les    edi,FWORD PTR [ecx-0x26]
  4204fa:	in     eax,0xe4
  4204fc:	pop    ss
  4204fd:	loopne 0x420557
  4204ff:	cdq    
  420500:	ins    DWORD PTR es:[edi],dx
  420501:	or     ebp,DWORD PTR [eax+0x25]
  420504:	(bad)  
  420505:	and    bh,al
  420507:	nop
  420508:	adc    edi,DWORD PTR [eax*4+0x2f9572be]
  42050f:	js     0x42053d
  420511:	test   BYTE PTR [edx-0x46f398ea],ah
  420517:	add    al,0x41
  420519:	mov    DWORD PTR [esi],edi
  42051b:	push   0xd55d3a07
  420520:	jmp    0x420545
  420522:	cmp    ch,BYTE PTR [ebx+0x41]
  420525:	lods   eax,DWORD PTR ds:[esi]
  420526:	ror    bl,0x87
  420529:	arpl   sp,sp
  42052b:	in     al,dx
  42052c:	in     al,0x46
  42052e:	(bad)  
  42052f:	jl     0x4204e6
  420531:	push   ebx
  420532:	lahf   
  420533:	xor    eax,0x79dd3c71
  420538:	jbe    0x420599
  42053a:	xchg   esp,eax
  42053b:	not    BYTE PTR [eax+eiz*4-0x8]
  42053f:	(bad)  
  420540:	jmp    0x4205ac
  420542:	sbb    BYTE PTR [eax],0x5c
  420545:	push   ds
  420546:	cmp    al,0xc5
  420548:	test   DWORD PTR ds:0xc2245249,edi
  42054e:	xchg   esp,eax
  42054f:	xor    ebp,DWORD PTR [edx]
  420551:	call   0x4252bf2
  420556:	adc    BYTE PTR [esi+eiz*4+0x2cde243a],cl
  42055d:	sub    DWORD PTR [edi+0x485bfbe4],edi
  420563:	adc    edx,esp
  420565:	pop    eax
  420566:	lea    edi,[ebp-0x444ba1af]
  42056c:	xor    ebx,ebp
  42056e:	push   0x6e
  420570:	jno    0x420539
  420572:	mov    eax,ds:0x32c9dad1
  420577:	inc    ecx
  420578:	mov    bl,0xc1
  42057a:	arpl   WORD PTR [esi+0x614bc149],si
  420580:	lahf   
  420581:	lds    esi,FWORD PTR cs:[eax]
  420584:	sbb    al,0x3
  420586:	leave  
  420587:	lds    esi,FWORD PTR [edi]
  420589:	int    0xe4
  42058b:	stc    
  42058c:	in     al,0x24
  42058e:	cld    
  42058f:	add    DWORD PTR [edi-0x66eb47ec],eax
  420595:	jbe    0x4205f4
  420597:	mov    esp,0x3d5405d7
  42059c:	push   0xffffffac
  42059e:	adc    BYTE PTR [eax-0x43eff09e],ch
  4205a4:	data16 in al,dx
  4205a6:	sub    eax,DWORD PTR [ecx+0x2059b779]
  4205ac:	addr16 mov ds:0x68a,al
  4205b0:	test   esp,esi
  4205b2:	jae    0x420579
  4205b4:	push   esp
  4205b5:	stos   DWORD PTR es:[edi],eax
  4205b6:	mov    ch,0x3
  4205b8:	xor    ecx,DWORD PTR [edi]
  4205ba:	mov    ss:0x418cfcb1,eax
  4205c0:	adc    ebp,DWORD PTR [ebx-0x8724287]
  4205c6:	outs   dx,BYTE PTR ds:[esi]
  4205c7:	push   ebx
  4205c8:	mov    al,ds:0x2ae2096
  4205cd:	je     0x4205ba
  4205cf:	shl    BYTE PTR [edi],1
  4205d1:	inc    eax
  4205d2:	mov    cl,0xbb
  4205d4:	add    BYTE PTR [ebx],cl
  4205d6:	js     0x4205ef
  4205d8:	and    al,0xd6
  4205da:	sahf   
  4205db:	test   al,0xfb
  4205dd:	mov    ch,0x19
  4205df:	dec    ecx
  4205e0:	fldcw  WORD PTR [esp+ebx*8-0x61]
  4205e4:	inc    ebx
  4205e5:	fadd   st,st(0)
  4205e7:	inc    ecx
  4205e8:	bound  esp,QWORD PTR [edi]
  4205ea:	mov    bl,0xfe
  4205ec:	fidiv  WORD PTR [ecx-0x678e23d6]
  4205f2:	jbe    0x4205c6
  4205f4:	xchg   edi,eax
  4205f5:	div    DWORD PTR [esi-0x7161b709]
  4205fb:	mov    al,ds:0xab98072
  420600:	jmp    0xe7982a71
  420605:	mov    ebx,0x2e851135
  42060a:	clc    
  42060b:	sub    al,0xa8
  42060d:	mov    ch,0x9
  42060f:	or     al,0x31
  420611:	push   ebx
  420612:	(bad)  
  420614:	retf   
  420615:	retf   0x5ef9
  420618:	and    BYTE PTR [ecx],bl
  42061a:	mov    ds:0x8a102ea8,al
  42061f:	adc    DWORD PTR [ebp-0x5b],0x43
  420623:	xchg   edx,eax
  420624:	adc    BYTE PTR [eax-0x52],bl
  420627:	call   0x911a:0x967dba74
  42062e:	mov    edx,0x5af88157
  420633:	leave  
  420634:	add    al,0xa4
  420636:	cli    
  420637:	ror    BYTE PTR ds:0x9dad3f26,cl
  42063d:	(bad)  
  42063e:	mov    ecx,0x7a39c0a1
  420643:	mov    WORD PTR [eax+ecx*2],gs
  420646:	xlat   BYTE PTR ds:[ebx]
  420647:	jbe    0x4206ac
  420649:	mov    al,0x2c
  42064b:	push   esi
  42064c:	xor    eax,0xa266eb37
  420651:	jno    0x42061e
  420653:	cmp    BYTE PTR [ebx+eax*2-0x33],cl
  420657:	and    eax,0xd68dd664
  42065c:	shl    edi,0xa5
  42065f:	aaa    
  420660:	xchg   ebx,eax
  420661:	inc    esp
  420662:	shl    ebp,cl
  420664:	mov    cl,BYTE PTR [ecx+0x31f8bd78]
  42066a:	push   esi
  42066b:	sub    DWORD PTR [ebx+eax*8-0x404ced88],ebp
  420672:	retf   0xf2c0
  420675:	xor    ecx,edx
  420677:	and    DWORD PTR [edi+edi*1+0x613a155],ecx
  42067e:	jmp    0x420690
  420680:	mov    esp,0xa44961a3
  420685:	xchg   BYTE PTR [edx-0x7f08a025],bh
  42068b:	mov    eax,ds:0x82f486c3
  420690:	aaa    
  420691:	cmp    BYTE PTR [edi-0x69],bl
  420694:	push   edx
  420695:	cmp    eax,0xd033d2ef
  42069a:	adc    ebx,DWORD PTR [edi-0x1fd4e202]
  4206a0:	pop    ecx
  4206a1:	xchg   ebp,eax
  4206a2:	jmp    0x17954ed9
  4206a7:	call   edi
  4206a9:	or     al,0x21
  4206ac:	mov    WORD PTR [edx+eax*2],?
  4206af:	scas   eax,DWORD PTR es:[edi]
  4206b0:	sub    ebx,0x91973aa6
  4206b6:	ss js  0x42068a
  4206b9:	outs   dx,DWORD PTR ds:[esi]
  4206ba:	cdq    
  4206bb:	ret    0x7d1c
  4206be:	push   ss
  4206bf:	and    al,0xfb
  4206c1:	mov    eax,0x32187eb8
  4206c6:	xchg   esi,eax
  4206c7:	rol    edx,1
  4206c9:	imul   esp,DWORD PTR [esi+0x17],0x3fc86181
  4206d0:	or     bl,BYTE PTR gs:[ebp+0x9]
  4206d4:	cmp    ebp,edx
  4206d6:	ins    DWORD PTR es:[edi],dx
  4206d7:	jle    0x420665
  4206d9:	call   0xfae7:0x601d7306
  4206e0:	sub    DWORD PTR [esi-0x4d],0xffffffb1
  4206e4:	out    dx,al
  4206e5:	pop    edx
  4206e6:	add    BYTE PTR [eax+ecx*4+0x3b79b28e],al
  4206ed:	pop    esi
  4206ee:	shl    bh,1
  4206f0:	stos   DWORD PTR es:[edi],eax
  4206f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f2:	xor    al,0x6
  4206f4:	jge    0x4206af
  4206f6:	test   al,0x4a
  4206f8:	hlt    
  4206f9:	bound  esp,QWORD PTR [eax]
  4206fb:	iret   
  4206fc:	lock mov al,0x6b
  4206ff:	push   0xd1be2011
  420704:	sahf   
  420705:	dec    ecx
  420706:	fiadd  WORD PTR [ecx+0x77f07c05]
  42070c:	(bad)  
  42070d:	cs mov bh,ch
  420710:	jp     0x42078f
  420712:	xor    eax,0x23a8ba30
  420717:	imul   esi,DWORD PTR [ebx],0x44
  42071a:	sbb    BYTE PTR [edx+0xc],ch
  42071d:	(bad)  
  42071e:	fsubr  QWORD PTR [ebp+0x69]
  420721:	ret    
  420722:	in     al,0x79
  420724:	pop    ebp
  420725:	mov    esp,0xffc84f62
  42072a:	xor    ecx,esp
  42072c:	add    al,0x6d
  42072e:	cwde   
  42072f:	push   ecx
  420730:	test   al,0x68
  420732:	call   0x90deca6c
  420737:	add    al,0xc9
  420739:	iret   
  42073a:	dec    edx
  42073b:	push   ss
  42073c:	pop    esi
  42073d:	xchg   ebp,eax
  42073e:	jo     0x4207a0
  420740:	repz test BYTE PTR [ecx],cl
  420743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420744:	jb     0x4207ad
  420746:	jmp    0x6284d767
  42074b:	sbb    dh,BYTE PTR [edx-0x30d9c3ed]
  420751:	scas   al,BYTE PTR es:[edi]
  420752:	lock mov bl,0x43
  420755:	mov    WORD PTR [ecx+0xc],ss
  420758:	ins    WORD PTR es:[edi],dx
  42075a:	into   
  42075b:	cmp    DWORD PTR [ebx-0x1f946836],ebp
  420761:	mov    WORD PTR [edx],?
  420763:	or     BYTE PTR [ebx-0x10b25680],bh
  420769:	inc    ecx
  42076a:	lahf   
  42076b:	stos   BYTE PTR es:[edi],al
  42076c:	mov    ah,0x2a
  42076e:	(bad)  
  42076f:	sbb    bh,BYTE PTR [ecx+ebp*1-0x15]
  420773:	add    BYTE PTR [edi+edx*1],al
  420776:	jl     0x4207b1
  420778:	xor    esp,ebp
  42077a:	mov    al,0x99
  42077c:	call   0x9be00e6c
  420781:	pop    ebx
  420782:	dec    ecx
  420783:	scas   al,BYTE PTR es:[edi]
  420784:	mov    esp,edi
  420786:	push   0xa376d732
  42078b:	cmp    ah,dh
  42078d:	add    DWORD PTR [ebp+0x3e],edi
  420790:	test   BYTE PTR [edi-0x148d2f44],0x48
  420797:	hlt    
  420798:	idiv   BYTE PTR [ebx]
  42079a:	jnp    0x4207e3
  42079c:	shl    BYTE PTR [ecx],0xb5
  42079f:	dec    ebp
  4207a0:	sub    al,BYTE PTR [esi-0x49611819]
  4207a6:	add    DWORD PTR [edx+edi*8],edi
  4207a9:	outs   dx,BYTE PTR ds:[esi]
  4207aa:	and    eax,0x6eaf2094
  4207af:	xchg   edx,eax
  4207b0:	jnp    0x420829
  4207b2:	(bad)  
  4207b3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4207b5:	mov    ebp,0x35d51600
  4207ba:	idiv   BYTE PTR [edi+0x757ae484]
  4207c0:	scas   al,BYTE PTR es:[edi]
  4207c1:	mov    bh,0x21
  4207c3:	mov    ecx,ebp
  4207c5:	test   eax,0xa6963dbb
  4207ca:	sbb    DWORD PTR gs:[ebp-0x4aeb3fe7],0xffffffa9
  4207d2:	mov    eax,0xe48c4148
  4207d7:	add    ebp,ebx
  4207d9:	push   es
  4207da:	inc    eax
  4207db:	inc    edx
  4207dc:	call   0xd9d:0x612c7998
  4207e3:	jle    0x42080c
  4207e5:	pop    ebx
  4207e6:	pushf  
  4207e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207e8:	bound  ebx,QWORD PTR [ebx+edi*4-0x34]
  4207ec:	pop    ebp
  4207ed:	push   ss
  4207ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ef:	outs   dx,BYTE PTR ds:[esi]
  4207f0:	mov    eax,DWORD PTR [ecx+0x77]
  4207f3:	ret    
  4207f4:	mov    DWORD PTR [esi],ebp
  4207f6:	cwde   
  4207f7:	mov    edx,es
  4207f9:	push   ebp
  4207fa:	xchg   edi,eax
  4207fb:	mov    dh,0x85
  4207fd:	jns    0x4207a9
  4207ff:	sub    bl,dh
  420801:	inc    edx
  420802:	(bad)  
  420803:	cmp    BYTE PTR [esi+eax*2],dl
  420806:	xchg   ebx,eax
  420807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420808:	pop    esp
  420809:	fs adc al,0xa9
  42080c:	jb     0x420802
  42080e:	pop    edx
  42080f:	or     edx,DWORD PTR [edx+eiz*8]
  420812:	push   es
  420813:	dec    esi
  420814:	mov    esp,0x96804b24
  420819:	sub    ecx,ebp
  42081b:	icebp  
  42081c:	jecxz  0x420805
  42081e:	addr16 popa 
  420820:	retf   
  420821:	aaa    
  420822:	pop    esi
  420823:	sbb    BYTE PTR [edi+0x67],ah
  420826:	jl     0x4207f7
  420828:	mov    esi,0xea7a3d13
  42082d:	retf   0xf22a
  420830:	pop    eax
  420831:	(bad)  
  420832:	mov    ds:0xb43669f8,eax
  420837:	mov    esp,0x56eea32
  42083c:	(bad)  
  42083d:	loope  0x4208b7
  42083f:	push   0x64
  420841:	imul   edi,DWORD PTR [edi-0x67],0x31
  420845:	pop    ds
  420846:	lods   al,BYTE PTR ds:[esi]
  420847:	lock lea edx,[edx-0x4f]
  42084b:	out    dx,al
  42084c:	jmp    0x420895
  42084e:	imul   ecx,DWORD PTR [ecx+0xe334063],0xe402af49
  420858:	jmp    0xed30:0x3d397012
  42085f:	fdivr  st(4),st
  420861:	ss (bad) 
  420864:	inc    eax
  420865:	xchg   edx,eax
  420866:	pushf  
  420867:	fs (bad) 
  42086c:	inc    esi
  42086d:	xor    al,0x95
  42086f:	into   
  420870:	fwait
  420871:	jb     0x420861
  420873:	fsubr  DWORD PTR [edx+0x9e9bb94]
  420879:	leave  
  42087a:	idiv   DWORD PTR [ebx+0x5f]
  42087d:	fcomp  QWORD PTR [ecx]
  42087f:	add    ebx,ebx
  420881:	outs   dx,BYTE PTR ds:[esi]
  420882:	or     ch,BYTE PTR [ecx]
  420884:	xlat   BYTE PTR ds:[ebx]
  420885:	push   edi
  420886:	dec    edx
  420887:	rol    cl,cl
  420889:	sub    DWORD PTR [eax],0xffffffad
  42088c:	jecxz  0x420837
  42088e:	xchg   esi,eax
  42088f:	ret    
  420890:	popa   
  420891:	js     0x4208aa
  420893:	cdq    
  420894:	mov    BYTE PTR [edi+esi*2+0x1d32ca97],ch
  42089b:	jmp    0x56bc:0x9a3e9d63
  4208a2:	ret    
  4208a3:	xchg   ebx,eax
  4208a4:	pop    edi
  4208a5:	je     0x42082c
  4208a7:	mov    DWORD PTR [edx],edi
  4208a9:	or     DWORD PTR [ecx+ebx*4+0x6e],eax
  4208ad:	push   ecx
  4208ae:	jle    0x4208ad
  4208b0:	push   0x26df1066
  4208b5:	lea    edx,[eax+ecx*2+0x7b26399d]
  4208bc:	or     eax,DWORD PTR [edx+0x34]
  4208bf:	mov    al,0xbf
  4208c1:	addr16 repnz mov ah,0x78
  4208c5:	or     BYTE PTR [ebp-0x5e],bl
  4208c8:	(bad)  
  4208c9:	icebp  
  4208ca:	test   BYTE PTR [edi],0x65
  4208cd:	jl     0x420942
  4208cf:	(bad)  
  4208d0:	mov    gs,WORD PTR [esi+0x72da625f]
  4208d6:	xlat   BYTE PTR ds:[ebx]
  4208d7:	cmp    ebp,DWORD PTR [esi]
  4208d9:	xchg   edi,eax
  4208da:	retf   0xdf15
  4208dd:	push   cs
  4208de:	push   edx
  4208df:	and    esp,ebx
  4208e1:	in     al,dx
  4208e2:	or     al,0x26
  4208e4:	xor    al,0x43
  4208e6:	mov    ebp,0x97ae94a
  4208eb:	cli    
  4208ec:	add    edx,DWORD PTR [ebx+0x3a09ff8e]
  4208f2:	mov    esp,0xe633171b
  4208f7:	mov    eax,0x70518e71
  4208fc:	xchg   ebp,eax
  4208fd:	loop   0x420947
  4208ff:	dec    esi
  420900:	mov    ah,0xd2
  420902:	and    dl,al
  420904:	daa    
  420905:	jmp    0x42091f
  420907:	cli    
  420908:	addr16 (bad) 
  42090a:	fwait
  42090b:	pop    ebx
  42090c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42090d:	adc    dl,BYTE PTR [ecx]
  42090f:	and    ebx,DWORD PTR [esi-0x2aa1d167]
  420915:	imul   BYTE PTR [esi+ebp*8+0x77]
  420919:	and    DWORD PTR [edx-0xaa3528],0x1fe995b0
  420923:	sbb    ah,dl
  420925:	push   0xe1007cad
  42092a:	adc    esi,DWORD PTR [ebp-0x73034371]
  420930:	inc    edx
  420931:	aaa    
  420932:	cmp    DWORD PTR [eax-0x26977057],0x3a
  420939:	push   0xffffffa5
  42093b:	(bad)  
  42093c:	mov    ds:0xdc50de72,al
  420941:	xchg   edi,eax
  420942:	pushf  
  420943:	jnp    0x420982
  420945:	inc    ebp
  420946:	fisubr WORD PTR [edx-0x10]
  420949:	fcos   
  42094b:	mov    eax,ds:0x2c13a822
  420950:	pop    esp
  420951:	lods   eax,DWORD PTR ds:[esi]
  420952:	stos   DWORD PTR es:[edi],eax
  420953:	pop    edi
  420954:	inc    edi
  420955:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420957:	add    BYTE PTR gs:0xe5c724d8,0xc0
  42095f:	pop    esp
  420960:	mov    DWORD PTR [edx-0x3c],esp
  420963:	in     eax,0x2f
  420965:	js     0x420999
  420967:	or     DWORD PTR [edi],esi
  420969:	loop   0x42098f
  42096b:	popa   
  42096c:	sbb    cl,ch
  42096e:	jg     0x420997
  420970:	repz test BYTE PTR ss:[ebp+0x17],0x61
  420976:	xchg   ecx,eax
  420977:	push   0xffffffad
  420979:	mov    edi,0x89c39404
  42097e:	push   eax
  42097f:	mov    dh,0xce
  420981:	cdq    
  420982:	or     BYTE PTR ds:0xa6d1c9be,dl
  420988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420989:	pop    es
  42098a:	sbb    bh,ch
  42098c:	sti    
  42098d:	int3   
  42098e:	pop    ecx
  42098f:	cmp    eax,0x45903ce5
  420994:	jb     0x420a06
  420996:	in     eax,0x10
  420998:	mov    ebx,0x1a425787
  42099d:	jmp    0x420a0a
  42099f:	cmc    
  4209a0:	jmp    0x2bc129e2
  4209a5:	jae    0x420a21
  4209a7:	repz dec edx
  4209a9:	sbb    edx,ecx
  4209ab:	loop   0x4209ee
  4209ad:	add    DWORD PTR [ebx+0x43b16a0e],esp
  4209b3:	nop
  4209b4:	adc    DWORD PTR [edi+0x546a7d02],eax
  4209ba:	inc    eax
  4209bb:	imul   esi,edi,0x2e
  4209be:	adc    dl,bh
  4209c0:	pusha  
  4209c1:	xchg   esp,eax
  4209c2:	xor    eax,0xee92a0a1
  4209c7:	shl    DWORD PTR [eax-0x62],1
  4209ca:	icebp  
  4209cb:	mov    BYTE PTR [ebx-0x2270b1f8],al
  4209d1:	mov    ebx,0x1365903f
  4209d6:	nop
  4209d7:	leave  
  4209d8:	cmp    al,0x3b
  4209da:	and    al,0x56
  4209dc:	fdivr  DWORD PTR [ecx]
  4209de:	adc    ecx,DWORD PTR [eax]
  4209e0:	push   edi
  4209e1:	mov    al,BYTE PTR [esp+eax*1-0x4865f6b4]
  4209e8:	mov    dl,0xf
  4209ea:	xchg   ecx,eax
  4209eb:	mov    ah,0xb3
  4209ed:	lods   eax,DWORD PTR ds:[esi]
  4209ee:	lock test eax,0xe604e1f1
  4209f4:	div    cl
  4209f6:	mov    ds:0xc1addf1c,al
  4209fb:	inc    edx
  4209fc:	(bad)  
  4209fd:	ficom  DWORD PTR [edi-0x7e]
  420a00:	fs xchg esp,eax
  420a02:	push   esi
  420a03:	mov    ch,0x6b
  420a05:	jns    0x420998
  420a07:	sbb    esp,DWORD PTR [ecx-0x27a7a4a]
  420a0d:	xchg   ebx,eax
  420a0e:	test   DWORD PTR [edx],0xcce53abf
  420a14:	or     eax,DWORD PTR [edx]
  420a16:	adc    DWORD PTR [esp+eax*8-0x54022ddc],0xffffffaa
  420a1e:	jb     0x4209ff
  420a20:	lea    ebp,[edx+0xb]
  420a23:	xchg   edx,eax
  420a24:	aam    0x3c
  420a26:	pop    edi
  420a27:	jns    0x4209ff
  420a29:	test   eax,0xf21d4ea
  420a2e:	or     ebx,esi
  420a30:	enter  0xbd57,0xe4
  420a34:	pop    es
  420a35:	mov    ch,0xe
  420a37:	xchg   esp,eax
  420a38:	jmp    0xd54df5ca
  420a3d:	in     al,0xd8
  420a3f:	out    dx,al
  420a40:	js     0x420a1d
  420a42:	add    eax,0xd21bce6d
  420a47:	pop    esp
  420a48:	lock push esp
  420a4a:	mov    bh,0x61
  420a4c:	out    dx,al
  420a4d:	lea    ecx,[ebp+0x359a3b0d]
  420a53:	adc    al,BYTE PTR [esi+ebx*8+0x2fae323d]
  420a5a:	sbb    eax,DWORD PTR [ebx+esi*8+0x7dced03a]
  420a61:	rol    BYTE PTR [esi+0x35],1
  420a64:	ror    esi,0x4
  420a67:	lods   eax,DWORD PTR ds:[esi]
  420a68:	mov    al,0xee
  420a6a:	imul   DWORD PTR [esi+0x57e5e10c]
  420a70:	add    BYTE PTR [bx+0x2c],dl
  420a74:	or     eax,0x5f892722
  420a79:	ret    0xbc50
  420a7c:	fcmovb st,st(2)
  420a7e:	inc    esp
  420a7f:	jecxz  0x420a88
  420a81:	xor    ecx,DWORD PTR [ebp+ebp*4+0x472b99f0]
  420a88:	div    BYTE PTR [esi]
  420a8a:	and    DWORD PTR [edx],esi
  420a8c:	fmul   QWORD PTR [ebp+0x145aff12]
  420a92:	sub    DWORD PTR [edi-0x3b],edx
  420a95:	xchg   edi,eax
  420a96:	sub    BYTE PTR [esi],ch
  420a98:	xchg   ebx,eax
  420a99:	(bad)  
  420a9b:	cmp    eax,0x7613c51a
  420aa0:	cs sahf 
  420aa2:	mov    ds:0x9c3e52e8,al
  420aa7:	mov    edi,0xd82af6eb
  420aac:	popf   
  420aad:	xchg   ebx,eax
  420aae:	repz xchg esp,eax
  420ab0:	xor    edi,eax
  420ab2:	sub    al,0xff
  420ab4:	cli    
  420ab5:	rcr    DWORD PTR [ebx+0x7f],0xa8
  420ab9:	sub    DWORD PTR [esi+0x32e3d999],ecx
  420abf:	in     al,dx
  420ac0:	stos   BYTE PTR es:[edi],al
  420ac1:	sub    BYTE PTR ds:0x63277490,bl
  420ac7:	jmp    0x86ab:0x4b9e0bbc
  420ace:	retf   0x1ea1
  420ad1:	mov    edi,DWORD PTR [ebp+0x1f0ae71]
  420ad7:	push   es
  420ad8:	leave  
  420ad9:	in     eax,0x50
  420adb:	mov    BYTE PTR [esi],0x69
  420ade:	cld    
  420adf:	punpckhdq mm0,QWORD PTR [edi]
  420ae2:	ins    DWORD PTR es:[edi],dx
  420ae3:	or     BYTE PTR [ecx],al
  420ae5:	push   0xffffffa1
  420ae7:	data16 jo 0x420adb
  420aea:	popa   
  420aeb:	lock mov eax,0xbd3f53c
  420af1:	imul   eax,DWORD PTR [esi],0xc0789fb7
  420af7:	icebp  
  420af8:	stos   DWORD PTR es:[edi],eax
  420af9:	xor    DWORD PTR [ecx],ebp
  420afb:	push   edi
  420afc:	popf   
  420afd:	int3   
  420afe:	adc    dh,BYTE PTR [ebx-0x57dfce0]
  420b04:	xor    al,0x26
  420b06:	add    esp,DWORD PTR [edx-0x3a]
  420b09:	xchg   edi,eax
  420b0a:	jge    0x420b04
  420b0c:	test   al,0xfe
  420b0e:	ror    BYTE PTR ss:[esi],cl
  420b11:	dec    edi
  420b12:	mov    al,0xfc
  420b14:	or     eax,0x4c3dc73a
  420b19:	sbb    al,0x76
  420b1b:	pop    ebx
  420b1c:	inc    eax
  420b1d:	xchg   ebx,eax
  420b1e:	test   al,0x3a
  420b20:	or     DWORD PTR [ecx-0x558863fe],eax
  420b26:	and    cl,dh
  420b28:	pop    esp
  420b29:	dec    ecx
  420b2a:	and    BYTE PTR [edx+eax*8-0x26],dh
  420b2e:	int3   
  420b2f:	xchg   edx,eax
  420b30:	sub    al,BYTE PTR [ebp+0x682137f1]
  420b36:	cli    
  420b37:	xchg   edx,eax
  420b38:	rcr    BYTE PTR [esi-0x48e7c2b9],1
  420b3e:	les    edi,FWORD PTR [eax]
  420b40:	out    0x44,al
  420b42:	sub    dh,al
  420b44:	adc    edi,edi
  420b46:	mov    eax,ds:0xc87dd4c
  420b4b:	test   edx,edx
  420b4d:	jle    0x420b48
  420b4f:	mov    ebx,0x9067205d
  420b54:	push   ebp
  420b55:	jl     0x420b6b
  420b57:	mov    al,ds:0xf4e96a6a
  420b5c:	mov    ch,0x19
  420b5e:	inc    edx
  420b5f:	cmp    bl,BYTE PTR [esi]
  420b61:	mov    dh,0x6c
  420b63:	aad    0x5e
  420b65:	and    eax,0xf5bc317a
  420b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b6b:	push   ds
  420b6c:	adc    al,0xf4
  420b6e:	fimul  WORD PTR [eax+0x3947bb8f]
  420b74:	push   esi
  420b75:	mov    al,ds:0xee780581
  420b7a:	movzx  esp,dl
  420b7d:	sbb    esi,ecx
  420b7f:	fnstenv [ecx+0x6d85406a]
  420b85:	or     DWORD PTR [eax],ebp
  420b87:	call   0x9b5ffd23
  420b8c:	clc    
  420b8d:	ins    DWORD PTR es:[edi],dx
  420b8e:	mov    cl,0x67
  420b90:	cmp    al,BYTE PTR fs:[ecx+eiz*2]
  420b94:	mov    ch,0x1b
  420b96:	cdq    
  420b97:	pop    ss
  420b98:	push   cs
  420b99:	push   ebp
  420b9a:	add    bh,bl
  420b9c:	add    eax,DWORD PTR [ebp+0x3b]
  420b9f:	cdq    
  420ba0:	ss jns 0x420b4a
  420ba3:	jmp    0xcb92:0x123f7a6c
  420baa:	sub    DWORD PTR [ebx+ecx*4],ebx
  420bad:	fisttp QWORD PTR [ebx]
  420baf:	push   ebx
  420bb0:	in     eax,dx
  420bb1:	dec    ecx
  420bb2:	mov    al,0x73
  420bb4:	in     eax,0xa6
  420bb6:	dec    eax
  420bb7:	inc    ebx
  420bb8:	cmp    dh,BYTE PTR [ebx+0x38f7b60c]
  420bbe:	add    DWORD PTR [esi-0x7b],eax
  420bc1:	add    al,0x4e
  420bc3:	sub    DWORD PTR [edx+0x25],0xe0f031b9
  420bca:	mul    BYTE PTR [eax]
  420bcc:	ret    0x73bc
  420bcf:	mov    cl,0xc9
  420bd1:	xchg   edx,eax
  420bd2:	(bad)  
  420bd3:	idiv   BYTE PTR [edi-0x18]
  420bd6:	sub    eax,0xd1690c8d
  420bdb:	push   ds
  420bdc:	lea    esp,[ecx+ebp*1+0x393cd24b]
  420be3:	sbb    esp,DWORD PTR [edi+0x2d]
  420be6:	loop   0x420c3f
  420be8:	adc    eax,0x94c31723
  420bed:	in     eax,0x73
  420bef:	xchg   ebx,eax
  420bf0:	mov    ah,0x64
  420bf2:	adc    al,0x8
  420bf4:	jecxz  0x420c56
  420bf6:	xchg   cl,dl
  420bf8:	xchg   edx,eax
  420bf9:	cmp    eax,0xb4cc27f5
  420bfe:	test   BYTE PTR [ecx+ebx*2-0x4d39b536],cl
  420c05:	ret    
  420c06:	ret    
  420c07:	mov    es,WORD PTR [ebx]
  420c09:	or     eax,0xf08c8ff1
  420c0e:	loop   0x420bd2
  420c10:	std    
  420c11:	into   
  420c12:	outs   dx,DWORD PTR ds:[esi]
  420c13:	push   esi
  420c14:	int    0xb0
  420c16:	push   eax
  420c17:	gs push edi
  420c19:	retf   
  420c1a:	fwait
  420c1b:	pop    eax
  420c1c:	shl    eax,cl
  420c1e:	test   BYTE PTR [ebx+esi*8],0x40
  420c22:	imul   edx,DWORD PTR [esi-0x4c],0x89d09398
  420c29:	fadd   DWORD PTR [esi-0x6e]
  420c2c:	shl    DWORD PTR [ecx+0x68],0x3a
  420c30:	pop    ebx
  420c31:	mov    edi,0x90c81724
  420c36:	out    0x24,al
  420c38:	loope  0x420c74
  420c3a:	mov    WORD PTR [edx],ss
  420c3c:	jecxz  0x420c55
  420c3e:	pop    ebp
  420c3f:	adc    bl,bh
  420c41:	xlat   BYTE PTR ds:[ebx]
  420c42:	pminub mm1,QWORD PTR [esp+eax*8]
  420c46:	pop    es
  420c47:	std    
  420c48:	repnz aam 0x87
  420c4b:	adc    edx,0x70
  420c4e:	stc    
  420c4f:	enter  0xe339,0x35
  420c53:	xor    al,0x2a
  420c55:	std    
  420c56:	mov    eax,0x49e8d4d6
  420c5b:	xchg   ebp,eax
  420c5c:	pop    edi
  420c5d:	xchg   esp,eax
  420c5e:	xchg   ecx,eax
  420c5f:	ins    BYTE PTR es:[edi],dx
  420c60:	sbb    cl,ah
  420c62:	dec    esi
  420c63:	loopne 0x420c72
  420c65:	sbb    BYTE PTR [ebx],dl
  420c67:	scas   eax,DWORD PTR es:[edi]
  420c68:	pop    es
  420c69:	fisubr DWORD PTR [ecx-0x15542e51]
  420c6f:	int    0x7d
  420c71:	mov    al,0x13
  420c73:	add    BYTE PTR [ebx],ch
  420c75:	out    0x8b,al
  420c77:	push   ecx
  420c78:	ret    0xbe27
  420c7b:	cmp    al,0xff
  420c7d:	(bad)  
  420c7e:	test   DWORD PTR [edx-0x62],0xd3416108
  420c85:	sub    al,BYTE PTR [ecx]
  420c87:	dec    ecx
  420c88:	push   edi
  420c89:	push   cs
  420c8a:	push   edi
  420c8b:	out    0x88,al
  420c8d:	call   0xd082:0x2c7e86a8
  420c94:	sub    al,0x5a
  420c96:	pop    esi
  420c97:	iret   
  420c98:	xchg   ebx,eax
  420c99:	dec    edi
  420c9a:	loopne 0x420c48
  420c9c:	push   ebp
  420c9d:	push   edx
  420c9e:	pop    esp
  420c9f:	xchg   esi,eax
  420ca0:	jmp    0x420ce2
  420ca2:	xor    al,BYTE PTR [edi+0x1b5dde5d]
  420ca8:	ds adc cl,bl
  420cab:	repnz push es
  420cad:	mov    BYTE PTR [edx],ah
  420caf:	ja     0x420cfd
  420cb1:	mov    ds:0xd98ab767,eax
  420cb6:	arpl   bp,bx
  420cb8:	push   es
  420cb9:	ret    0xd185
  420cbc:	icebp  
  420cbd:	mov    bh,0x3b
  420cbf:	sub    bl,BYTE PTR [ebx-0x2cff1e2c]
  420cc5:	xchg   edi,eax
  420cc6:	sar    BYTE PTR [edx],1
  420cc8:	imul   esi,DWORD PTR [eax],0xffffffa7
  420ccb:	mov    esi,0x44038a4d
  420cd0:	mov    ds:0xdae8f5c5,al
  420cd5:	cld    
  420cd6:	in     eax,0xc3
  420cd8:	adc    ebx,0xffffffd8
  420cdb:	inc    edx
  420cdc:	rcl    edi,cl
  420cde:	jnp    0x420cef
  420ce0:	and    ch,BYTE PTR [eax+eax*4+0x51733900]
  420ce7:	enter  0x22a0,0x2d
  420ceb:	hlt    
  420cec:	fsubrp st(3),st
  420cee:	adc    dh,dh
  420cf0:	jmp    0x75f1b996
  420cf5:	add    ebp,ebx
  420cf7:	dec    edx
  420cf8:	sti    
  420cf9:	jl     0x420d72
  420cfb:	fucomp st(6)
  420cfd:	leave  
  420cfe:	(bad)  
  420cff:	retf   
  420d00:	and    al,0xe7
  420d02:	ins    DWORD PTR es:[edi],dx
  420d03:	add    al,BYTE PTR [ebp-0x9]
  420d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d07:	adc    al,0x10
  420d09:	xchg   ebp,ecx
  420d0b:	out    dx,eax
  420d0c:	mov    bl,ah
  420d0e:	(bad)  
  420d0f:	(bad)  
  420d10:	out    dx,al
  420d11:	dec    ebx
  420d12:	scas   al,BYTE PTR es:[di]
  420d14:	pop    ebp
  420d15:	call   0xe4bc:0x824fe523
  420d1c:	adc    BYTE PTR [ebx],al
  420d1e:	mov    al,BYTE PTR [esi]
  420d20:	fild   DWORD PTR [edi]
  420d22:	and    ecx,DWORD PTR [ebx+edx*8]
  420d25:	jns    0x420cd9
  420d27:	xchg   ecx,eax
  420d28:	push   es
  420d29:	jbe    0x420cd5
  420d2b:	jge    0x420cbe
  420d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d2e:	pop    edx
  420d2f:	ret    0xc563
  420d32:	neg    BYTE PTR [ecx+esi*2]
  420d35:	pop    eax
  420d36:	jp     0x420cdc
  420d38:	jmp    0x7a727613
  420d3d:	test   DWORD PTR [esi-0x13d13e9c],ecx
  420d43:	inc    ebx
  420d44:	mov    ds:0xe5c4a1b,eax
  420d49:	gs cdq 
  420d4b:	dec    ebp
  420d4c:	(bad)  
  420d4d:	pushf  
  420d4e:	pusha  
  420d4f:	dec    ebp
  420d50:	hlt    
  420d51:	sub    DWORD PTR [ecx],ecx
  420d53:	or     dl,BYTE PTR [eax-0x72e37adf]
  420d59:	unpcklps xmm1,xmm0
  420d5c:	mov    esi,0x712bdd24
  420d61:	(bad)  
  420d62:	int    0x6e
  420d64:	jnp    0x420d47
  420d66:	sub    al,0x6b
  420d68:	cmp    BYTE PTR [edi],bl
  420d6a:	xchg   edi,eax
  420d6b:	repz popa 
  420d6d:	xor    edi,DWORD PTR [edi-0x34]
  420d70:	mov    ebp,DWORD PTR [esi]
  420d72:	fwait
  420d73:	add    al,0x14
  420d75:	addr16 retf 
  420d77:	cmp    dl,BYTE PTR [edx-0x52]
  420d7a:	xchg   ecx,eax
  420d7b:	dec    ebp
  420d7c:	adc    al,0x2c
  420d7e:	test   al,0xbc
  420d80:	leave  
  420d81:	push   edi
  420d82:	stos   DWORD PTR es:[edi],eax
  420d83:	push   esp
  420d84:	outs   dx,BYTE PTR ds:[esi]
  420d85:	sbb    BYTE PTR [ebp+0x39],ch
  420d88:	push   edi
  420d89:	ja     0x420d1b
  420d8b:	cli    
  420d8c:	dec    al
  420d8e:	(bad)  
  420d8f:	push   ss
  420d90:	shl    DWORD PTR [ebx-0x53057c7f],cl
  420d96:	loop   0x420d1a
  420d98:	sub    DWORD PTR [esi+0x75],ebx
  420d9b:	pop    ecx
  420d9c:	mov    ecx,cs
  420d9e:	jge    0x420d30
  420da0:	je     0x420dda
  420da2:	and    DWORD PTR [eax],ecx
  420da4:	test   BYTE PTR [edi+0x6f],0x74
  420da8:	or     eax,0xa6dacdd
  420dad:	and    al,0xc
  420daf:	push   ss
  420db0:	pop    ss
  420db1:	bound  edx,QWORD PTR [ebp-0x12]
  420db4:	xor    BYTE PTR [ebx+0x3aa2ee81],0x6d
  420dbb:	test   BYTE PTR [ebp+0x4dbee73d],al
  420dc1:	mov    ds,WORD PTR [eax+0x3a]
  420dc4:	inc    ebp
  420dc5:	and    BYTE PTR [eax],ch
  420dc7:	stc    
  420dc8:	stc    
  420dc9:	inc    ebp
  420dca:	xor    al,0x5c
  420dcc:	mov    cl,0x8a
  420dce:	imul   BYTE PTR [eax-0x7500bf33]
  420dd4:	cdq    
  420dd5:	mov    esi,0x24d7901f
  420dda:	out    dx,al
  420ddb:	ret    0xec48
  420dde:	scas   al,BYTE PTR es:[edi]
  420ddf:	jge    0x420e40
  420de1:	inc    esp
  420de2:	aad    0x98
  420de4:	pop    ss
  420de5:	xchg   edx,eax
  420de6:	mov    eax,ds:0x38ff4659
  420deb:	pop    esi
  420dec:	mov    esi,0xbbf16490
  420df1:	pop    edi
  420df2:	addr16 mov edi,0xfcbe5a68
  420df8:	xor    dl,ah
  420dfa:	(bad)  
  420dfb:	das    
  420dfc:	imul   edi,DWORD PTR [ecx-0x2f],0x6f548f2c
  420e03:	and    eax,0xb37b554b
  420e08:	test   BYTE PTR [edx],dl
  420e0a:	sub    ebp,edi
  420e0c:	std    
  420e0d:	sub    BYTE PTR [ebp+0x38],0x6e
  420e11:	popa   
  420e12:	popf   
  420e13:	in     eax,dx
  420e14:	std    
  420e15:	gs out dx,eax
  420e17:	test   BYTE PTR [edi-0x34],ah
  420e1a:	lahf   
  420e1b:	mov    WORD PTR [edx+edx*8+0xb4c28bf],ss
  420e22:	jb     0x420dd3
  420e24:	adc    al,0xe1
  420e26:	mov    ah,0x36
  420e28:	ins    DWORD PTR es:[edi],dx
  420e29:	adc    DWORD PTR [eax],esp
  420e2b:	arpl   sp,dx
  420e2d:	fild   DWORD PTR [ebx]
  420e2f:	out    dx,al
  420e30:	inc    edx
  420e31:	repnz sbb bl,dh
  420e34:	mov    edx,0xe7c3d41e
  420e39:	adc    eax,0x17e4bd4b
  420e3e:	sub    ebp,DWORD PTR ds:0x19d04842
  420e44:	xchg   ebx,eax
  420e45:	mov    DWORD PTR [edx-0x8b447a1],eax
  420e4b:	xor    eax,0x17cc891
  420e50:	and    eax,0x926f9107
  420e55:	ret    
  420e56:	in     al,dx
  420e57:	icebp  
  420e58:	sahf   
  420e59:	lahf   
  420e5a:	popa   
  420e5b:	sbb    DWORD PTR [ecx+ebx*8-0x30c772ae],0x8e5092cb
  420e66:	hlt    
  420e67:	sbb    edi,DWORD PTR [esi+0x1068f09a]
  420e6d:	call   0x57f59959
  420e72:	inc    eax
  420e73:	adc    DWORD PTR [edi],esi
  420e75:	push   esp
  420e76:	sbb    BYTE PTR [ebx-0x258397c],bl
  420e7c:	inc    esi
  420e7d:	outs   dx,BYTE PTR ds:[esi]
  420e7e:	pop    ebx
  420e7f:	adc    BYTE PTR [ebx],0x1e
  420e82:	fld    TBYTE PTR [bx-0x5dc8]
  420e87:	fidiv  DWORD PTR [edi+0x177a196f]
  420e8d:	sbb    edi,0xece772d0
  420e93:	add    eax,0x169ff99b
  420e98:	lods   al,BYTE PTR ds:[esi]
  420e99:	mov    ecx,0xb497f212
  420e9e:	or     eax,0x10fc5e5a
  420ea3:	stos   DWORD PTR es:[edi],eax
  420ea4:	pop    ds
  420ea5:	mov    ecx,0x48ebdd0b
  420eaa:	jno    0x420e53
  420eac:	ja     0x420f02
  420eae:	js     0x420e3d
  420eb0:	push   eax
  420eb1:	in     eax,dx
  420eb2:	in     al,0xfd
  420eb4:	shl    DWORD PTR [ebx-0x41481fb6],1
  420eba:	mov    gs,WORD PTR [edi]
  420ebc:	cwde   
  420ebd:	test   al,0x7d
  420ebf:	mov    ch,0xb4
  420ec1:	sbb    DWORD PTR [edx],edi
  420ec3:	mov    BYTE PTR [edi+0x7d2730fb],ch
  420ec9:	cmp    DWORD PTR [edi],edx
  420ecb:	jno    0x420f41
  420ecd:	xor    BYTE PTR [eax],dl
  420ecf:	mov    ah,0xa
  420ed1:	push   cs
  420ed2:	mov    al,ds:0x33cbcace
  420ed7:	jg     0x420f2c
  420ed9:	cwde   
  420eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420edb:	add    bh,BYTE PTR [eax]
  420edd:	or     al,0x81
  420edf:	pusha  
  420ee0:	cmp    ah,BYTE PTR [ebp+esi*1+0x79]
  420ee4:	sbb    DWORD PTR [edi+0x1d248557],ebp
  420eea:	scas   eax,DWORD PTR es:[edi]
  420eeb:	pop    edi
  420eec:	outs   dx,DWORD PTR ds:[esi]
  420eed:	cmc    
  420eee:	adc    dl,BYTE PTR [esp+eax*4]
  420ef1:	fs out 0xe7,eax
  420ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef5:	dec    ecx
  420ef6:	cmp    BYTE PTR [ecx],ch
  420ef8:	loopne 0x420ecf
  420efa:	in     al,0x6b
  420efc:	shl    BYTE PTR ss:[ecx-0x79],0xc7
  420f01:	test   DWORD PTR [edi+edi*1],ebx
  420f04:	cmc    
  420f05:	ins    DWORD PTR es:[edi],dx
  420f06:	pop    edi
  420f07:	inc    ebp
  420f08:	stos   DWORD PTR es:[edi],eax
  420f09:	mov    ebx,cs
  420f0b:	sub    BYTE PTR [eax-0x3f327fac],dl
  420f11:	fs daa 
  420f13:	and    al,0x60
  420f15:	dec    ebp
  420f16:	pop    eax
  420f17:	pop    es
  420f18:	shl    eax,0xa8
  420f1b:	lods   eax,DWORD PTR ds:[esi]
  420f1c:	pop    ebp
  420f1d:	leave  
  420f1e:	call   0xa18a7619
  420f23:	aam    0xc1
  420f25:	sbb    BYTE PTR [ecx],ch
  420f27:	mov    esi,0xd889a49c
  420f2c:	push   edi
  420f2d:	jno    0x420fa1
  420f2f:	into   
  420f30:	xchg   ax,ax
  420f32:	ret    0x2735
  420f35:	sub    edx,DWORD PTR [ebx+eax*8+0x32689e44]
  420f3c:	dec    eax
  420f3d:	cmp    eax,0xe03f39e0
  420f42:	clc    
  420f43:	in     eax,0xaf
  420f45:	lock pop ss
  420f47:	xchg   esp,eax
  420f48:	fld    DWORD PTR [ebx+ecx*4+0x52]
  420f4c:	(bad)  
  420f4d:	ror    ebx,1
  420f4f:	inc    esp
  420f50:	test   BYTE PTR [ecx+0x4],dh
  420f53:	(bad)  
  420f55:	retf   
  420f56:	out    dx,al
  420f57:	repnz fwait
  420f59:	not    BYTE PTR [eax+0x1baeccef]
  420f5f:	stos   DWORD PTR es:[edi],eax
  420f60:	ins    DWORD PTR es:[edi],dx
  420f61:	ret    0x857e
  420f64:	cmp    dh,BYTE PTR [ebp+0x289f056d]
  420f6a:	sub    eax,0x2119c423
  420f6f:	sub    cl,BYTE PTR [esi]
  420f71:	hlt    
  420f72:	inc    edx
  420f73:	jo     0x420fb4
  420f75:	int3   
  420f76:	dec    edx
  420f77:	add    eax,0xbf6efbf0
  420f7c:	pusha  
  420f7d:	inc    ebx
  420f7e:	inc    ebp
  420f7f:	pushf  
  420f80:	mul    DWORD PTR [ecx+eiz*8-0x6fbc660c]
  420f87:	jecxz  0x420fc0
  420f89:	cwde   
  420f8a:	dec    ecx
  420f8b:	(bad)  
  420f8c:	int    0xb8
  420f8e:	sub    DWORD PTR ds:0xbe8a9fd6,0xffffff8e
  420f95:	fisttp DWORD PTR [esi+0x12]
  420f98:	jp     0x421016
  420f9a:	daa    
  420f9b:	daa    
  420f9c:	xchg   BYTE PTR [esi-0x5b67a50],ah
  420fa2:	std    
  420fa3:	(bad)  
  420fa4:	popf   
  420fa5:	pop    edi
  420fa6:	mov    eax,cs
  420fa8:	or     ebx,esp
  420faa:	push   0xc57b7082
  420faf:	scas   al,BYTE PTR es:[edi]
  420fb0:	sbb    bh,al
  420fb2:	xor    DWORD PTR [edi-0x40c42139],esp
  420fb8:	scas   eax,DWORD PTR es:[edi]
  420fb9:	(bad)  
  420fba:	in     eax,dx
  420fbb:	sahf   
  420fbc:	shr    BYTE PTR [edi+0x126ebb2d],0xeb
  420fc3:	xor    DWORD PTR [edi+edx*4+0x1ac7ebd2],edx
  420fca:	push   eax
  420fcb:	push   ebx
  420fcc:	cld    
  420fcd:	mov    ds:0xf0e673c5,al
  420fd2:	loop   0x420fa4
  420fd4:	xor    DWORD PTR [edx+0x4bad61b6],0xffffff82
  420fdb:	cmp    esi,DWORD PTR [esi]
  420fdd:	loope  0x420fd8
  420fdf:	mov    esi,0xc1445ce1
  420fe4:	jno    0x420faa
  420fe6:	ficom  DWORD PTR [edx+edx*2+0x7a18e14a]
  420fed:	mov    ds:0xd8d1c2a9,al
  420ff2:	aad    0x7a
  420ff4:	push   ds
  420ff5:	dec    eax
  420ff6:	pusha  
  420ff7:	test   eax,0x9a90d881
  420ffc:	push   0x34
  420ffe:	jge    0x420fb2
  421000:	dec    ebp
  421001:	xchg   esp,eax
  421002:	or     eax,0xf095ff69
  421007:	sbb    DWORD PTR [esi-0x53],ecx
  42100a:	fisttp DWORD PTR [ebx+ecx*1+0x7843e008]
  421011:	gs stos DWORD PTR es:[edi],eax
  421013:	inc    esp
  421014:	inc    edi
  421015:	inc    eax
  421016:	or     BYTE PTR [ecx-0x49],cl
  421019:	ins    BYTE PTR es:[edi],dx
  42101a:	mov    ds:0xa36f750d,al
  42101f:	lock ds pop edx
  421022:	and    bl,BYTE PTR [ecx+0x1c11c568]
  421028:	and    al,0x4
  42102a:	mov    dl,BYTE PTR [edi+0xa]
  42102d:	js     0x4210a7
  42102f:	mov    ebx,DWORD PTR [ebx+0x34cdde5f]
  421035:	mov    ?,WORD PTR [ebp-0x60]
  421038:	mov    bl,cl
  42103a:	fisttp QWORD PTR [ecx+0x73]
  42103d:	and    bh,dl
  42103f:	test   BYTE PTR [edi],ch
  421041:	pop    ebx
  421042:	cld    
  421043:	mov    BYTE PTR [eax+eax*4-0x7519f9e8],0xc9
  42104b:	out    0xe3,al
  42104d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42104e:	dec    edx
  42104f:	(bad)  
  421050:	xchg   edx,eax
  421051:	shl    BYTE PTR [edi+ecx*4+0x281e7a64],cl
  421058:	pop    esp
  421059:	dec    esp
  42105a:	fsubr  QWORD PTR [edi-0x584af845]
  421060:	cdq    
  421061:	retf   0x7c8d
  421064:	add    DWORD PTR [ebx+0x5a],0x24
  421068:	jg     0x42108c
  42106a:	enter  0xed7b,0xbe
  42106e:	mov    ebx,0xa5d931ba
  421073:	(bad)  
  421075:	mov    esp,0xaa561302
  42107a:	mov    BYTE PTR [ecx],cl
  42107c:	stc    
  42107d:	add    DWORD PTR [esi+0x44],ebp
  421080:	mov    ah,0x38
  421082:	pop    eax
  421083:	cmp    ch,BYTE PTR [edi+0x7c]
  421086:	jmp    0xe4bb2633
  42108b:	mov    al,0x93
  42108d:	jnp    0x4210c5
  42108f:	das    
  421090:	ins    DWORD PTR es:[edi],dx
  421091:	push   esp
  421092:	enter  0x40d1,0x30
  421096:	shr    BYTE PTR [eax],cl
  421098:	push   edx
  421099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42109a:	jecxz  0x4210ac
  42109c:	sbb    eax,0x39a351e2
  4210a1:	rcl    BYTE PTR [ebx-0xd],0xd3
  4210a5:	out    0x51,eax
  4210a7:	jge    0x4210ae
  4210a9:	xchg   ecx,eax
  4210aa:	fldcw  WORD PTR [ecx]
  4210ac:	push   ds
  4210ad:	sub    eax,0xfe7530fb
  4210b2:	pop    ecx
  4210b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210b4:	inc    ebp
  4210b5:	mov    DWORD PTR [edx-0x662d2c0c],0xa0ff106f
  4210bf:	mov    al,ds:0xf1a5109f
  4210c4:	mov    eax,ds:0x2be27674
  4210c9:	neg    BYTE PTR gs:[ebx+0x71]
  4210cd:	das    
  4210ce:	scas   al,BYTE PTR es:[edi]
  4210cf:	mov    al,0x43
  4210d1:	jp     0x42114b
  4210d3:	mov    edx,DWORD PTR [edi]
  4210d5:	jmp    0xe939:0x69f125de
  4210dc:	inc    eax
  4210dd:	scas   al,BYTE PTR es:[edi]
  4210de:	mov    edi,0xac2469dd
  4210e3:	push   ss
  4210e4:	fidivr DWORD PTR [eax]
  4210e6:	rol    bh,cl
  4210e8:	dec    ecx
  4210e9:	cmp    DWORD PTR [eax],0xfa5bbb1c
  4210ef:	mov    ds:0x8fcb0e97,al
  4210f4:	ror    DWORD PTR fs:[ebp+0x438ec5ec],cl
  4210fb:	lods   al,BYTE PTR ds:[esi]
  4210fc:	cmc    
  4210fd:	mov    edi,0xbf2f9702
  421102:	fdivr  QWORD PTR [edx-0x7938e63a]
  421108:	ret    0x619a
  42110b:	add    eax,0x7952d2e2
  421110:	mov    ds:0xf86686db,al
  421115:	ins    DWORD PTR es:[edi],dx
  421116:	inc    edi
  421117:	in     al,0xac
  421119:	(bad)  
  42111a:	pop    ebp
  42111b:	xchg   ebp,eax
  42111c:	rcl    DWORD PTR [eax-0x76],1
  42111f:	cmp    eax,0x5d68db3c
  421124:	leave  
  421125:	cwde   
  421126:	sbb    BYTE PTR [esi],ah
  421128:	or     al,0x9
  42112a:	gs retf 
  42112c:	sbb    ah,BYTE PTR [edx+0x36]
  42112f:	hlt    
  421130:	add    DWORD PTR [eax+0x66],esi
  421133:	lea    ebx,[ecx+0x34]
  421136:	je     0x42111f
  421138:	sbb    DWORD PTR [eax],esp
  42113a:	push   0xe68cc62
  42113f:	xor    BYTE PTR [ebp-0x26b4281b],ah
  421145:	mov    al,BYTE PTR [ecx+0x5b]
  421148:	cld    
  421149:	sti    
  42114a:	int3   
  42114b:	xchg   edx,eax
  42114c:	leave  
  42114d:	xchg   esp,eax
  42114e:	jmp    0x42118a
  421150:	imul   eax,esi,0xffffffe1
  421153:	lods   al,BYTE PTR ds:[esi]
  421154:	inc    edi
  421155:	mov    DWORD PTR [edi+0xb615b4c],ecx
  42115b:	mov    ss,WORD PTR ss:[esi]
  42115e:	sbb    DWORD PTR [ebp-0x4a],ebp
  421161:	cdq    
  421162:	je     0x421142
  421164:	lods   eax,DWORD PTR ds:[esi]
  421165:	mov    ebp,0xed77bad
  42116a:	adc    edx,DWORD PTR [eax+0x748c1dda]
  421170:	fwait
  421171:	lock sbb esp,DWORD PTR [ecx]
  421174:	sbb    ch,bl
  421176:	pop    ds
  421177:	sbb    eax,esp
  421179:	pusha  
  42117a:	xchg   esp,eax
  42117b:	cmp    DWORD PTR [edx],ecx
  42117d:	nop
  42117e:	dec    edx
  42117f:	push   ds
  421180:	inc    ebp
  421181:	sub    eax,0xf8106c48
  421186:	aas    
  421187:	or     eax,0xf09acf58
  42118c:	(bad)  [ecx+0x15fc30d]
  421192:	or     BYTE PTR [edx],ah
  421194:	mov    ecx,0xe1b34717
  421199:	xlat   BYTE PTR ds:[ebx]
  42119a:	jno    0x421132
  42119c:	call   0x3314:0xcce00c6c
  4211a3:	gs cs push ds
  4211a6:	jbe    0x4211fd
  4211a8:	jle    0x42115d
  4211aa:	test   BYTE PTR cs:[ebx+0x2],ch
  4211ae:	pop    ds
  4211af:	jae    0x421145
  4211b1:	and    ch,ch
  4211b3:	scas   eax,DWORD PTR es:[edi]
  4211b4:	mov    cl,0x97
  4211b6:	stc    
  4211b7:	sub    edi,edi
  4211b9:	sub    eax,DWORD PTR [edx+0x71]
  4211bc:	sbb    cl,BYTE PTR [edx-0x157b7dcb]
  4211c2:	or     edx,DWORD PTR ds:0x9ba17830
  4211c8:	push   edx
  4211c9:	mov    bl,0x10
  4211cb:	and    ebx,DWORD PTR [eax]
  4211cd:	inc    edi
  4211ce:	in     eax,0xc9
  4211d0:	das    
  4211d1:	aad    0x8a
  4211d3:	sub    eax,DWORD PTR [eax-0x5d206c70]
  4211d9:	pop    es
  4211da:	pop    ds
  4211db:	fild   WORD PTR ds:0x2ece3a1e
  4211e1:	jne    0x421239
  4211e3:	or     eax,0xc915f185
  4211e8:	ds scas al,BYTE PTR es:[edi]
  4211ea:	test   eax,0x974ca015
  4211ef:	pop    ecx
  4211f0:	test   al,0xac
  4211f2:	sub    BYTE PTR [ecx],ah
  4211f4:	test   edx,ecx
  4211f6:	test   DWORD PTR [ebp-0x5a0a1a1d],ecx
  4211fc:	daa    
  4211fd:	jne    0x421197
  4211ff:	(bad)  
  421201:	mov    ah,dh
  421203:	jno    0x4211be
  421205:	push   ss
  421206:	add    DWORD PTR [edi+0x22],eax
  421209:	cmp    esi,ebp
  42120b:	shl    DWORD PTR [edi],cl
  42120d:	adc    al,0x5d
  42120f:	test   DWORD PTR [esi-0x2a],edx
  421212:	aaa    
  421213:	arpl   WORD PTR [ebp+eax*4+0x66f8789f],sp
  42121a:	test   eax,0xc7cebba4
  42121f:	bound  ebx,QWORD PTR [eax]
  421221:	jns    0x4211af
  421223:	mov    bh,0xc
  421225:	jno    0x421232
  421227:	jg     0x4211db
  421229:	cmp    esp,ecx
  42122b:	in     eax,0xe
  42122d:	bound  esp,QWORD PTR [ebp-0x76b0dfe0]
  421233:	popa   
  421234:	jmp    0xf417:0xbe02181e
  42123b:	sbb    BYTE PTR [edx+0x33f42b5d],cl
  421241:	cli    
  421242:	loopne 0x4212b0
  421244:	cmp    eax,0xa49689fd
  421249:	repnz adc al,0x7c
  42124c:	xlat   BYTE PTR ds:[ebx]
  42124d:	inc    ecx
  42124e:	xchg   edi,eax
  42124f:	jmp    DWORD PTR [ecx]
  421251:	fild   QWORD PTR [eax+0x2f]
  421254:	push   ds
  421255:	pop    ebx
  421256:	int    0xeb
  421258:	sub    DWORD PTR [ecx+0x50722d53],esi
  42125e:	pushf  
  42125f:	push   edx
  421260:	sar    al,1
  421262:	iret   
  421263:	xchg   BYTE PTR [ecx],bl
  421265:	jae    0x421258
  421267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421268:	xchg   ebx,esi
  42126a:	pop    ebp
  42126b:	into   
  42126c:	repnz cmp eax,0x60a3b871
  421272:	je     0x421243
  421274:	pop    ebx
  421275:	inc    edi
  421276:	jl     0x4212b6
  421278:	mov    eax,0xc5f789fc
  42127d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42127e:	out    0x94,eax
  421280:	push   ss
  421281:	neg    ecx
  421283:	int3   
  421284:	cli    
  421285:	push   es
  421286:	jecxz  0x4212c5
  421288:	pop    edx
  421289:	or     esp,edi
  42128b:	cdq    
  42128c:	rcl    DWORD PTR [esi],0x46
  42128f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421290:	fnstsw WORD PTR [ebp+0x656d9048]
  421296:	jecxz  0x4212d3
  421298:	daa    
  421299:	sbb    eax,0xc44b95c0
  42129e:	(bad)  
  42129f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a1:	imul   eax,DWORD PTR [edi],0xffffffb8
  4212a4:	push   esi
  4212a5:	mov    cl,0x79
  4212a7:	jne    0x421252
  4212a9:	in     al,0xa8
  4212ab:	mov    edx,0x52311c63
  4212b0:	test   eax,0x1db89bf4
  4212b5:	repz mov ebx,0x432d45b8
  4212bb:	fistp  WORD PTR [ebx-0x70d169ed]
  4212c1:	push   ebx
  4212c2:	shr    eax,1
  4212c4:	ja     0x421246
  4212c6:	loope  0x421315
  4212c8:	xor    DWORD PTR ds:0x181de676,ecx
  4212ce:	clc    
  4212cf:	fild   QWORD PTR [ebp-0x6dac3a9b]
  4212d5:	popa   
  4212d6:	push   ebp
  4212d7:	xchg   eax,edi
  4212d9:	cmc    
  4212da:	pop    eax
  4212db:	pop    ds
  4212dc:	cmp    al,0xd9
  4212de:	(bad)  
  4212df:	dec    ebx
  4212e0:	push   ecx
  4212e1:	xchg   ebp,eax
  4212e2:	lods   al,BYTE PTR ds:[esi]
  4212e3:	jb     0x421280
  4212e5:	imul   ebx,DWORD PTR ds:0xc4daf8a5,0x25768d6b
  4212ef:	jl     0x421305
  4212f1:	outs   dx,DWORD PTR ds:[esi]
  4212f2:	lods   al,BYTE PTR ds:[esi]
  4212f3:	jnp    0x4212c1
  4212f5:	mov    bh,ah
  4212f7:	xlat   BYTE PTR ds:[ebx]
  4212f8:	gs aad 0x8e
  4212fb:	xor    DWORD PTR [edx],edi
  4212fd:	icebp  
  4212fe:	sbb    BYTE PTR [esi+0x57],ah
  421301:	or     DWORD PTR [edx],eax
  421303:	in     al,0x8e
  421305:	fmulp  st(3),st
  421307:	popa   
  421308:	xchg   ebp,eax
  421309:	adc    DWORD PTR [ecx],esp
  42130b:	shl    BYTE PTR [edi-0x7b],1
  42130e:	ds aam 0x6b
  421311:	or     DWORD PTR [ebx],0x43b62c41
  421317:	push   esi
  421318:	and    DWORD PTR [edi+0x34],ebx
  42131b:	sbb    eax,0x5ccf7f0
  421320:	pop    ecx
  421321:	adc    al,0xb5
  421323:	das    
  421324:	xor    al,0x1b
  421326:	add    al,0x87
  421328:	inc    edx
  421329:	aad    0xb4
  42132b:	add    ebx,DWORD PTR [edi]
  42132d:	int    0x66
  42132f:	outs   dx,BYTE PTR ds:[esi]
  421330:	xchg   edi,eax
  421331:	test   BYTE PTR [edx+edx*8+0xec52ef],dl
  421338:	or     al,0x58
  42133a:	and    DWORD PTR [edx+0x121d45d7],edi
  421340:	enter  0xde7,0x68
  421344:	pop    ebx
  421345:	cmp    ch,BYTE PTR ds:0xd6191020
  42134b:	jne    0x4212d7
  42134d:	cmp    DWORD PTR [edi],eax
  42134f:	jp     0x421371
  421351:	xchg   dh,bh
  421353:	or     al,0x56
  421355:	cmp    cl,BYTE PTR [edx-0x4d]
  421358:	test   al,0xc4
  42135a:	int3   
  42135b:	push   ds
  42135c:	nop
  42135d:	jnp    0x421382
  42135f:	inc    esi
  421360:	outs   dx,BYTE PTR ds:[esi]
  421361:	or     eax,0x5406b3c2
  421366:	pop    ebp
  421367:	push   0xbbd57cd
  42136c:	mov    ebx,0xe9eefacd
  421371:	out    0x54,eax
  421373:	cmp    DWORD PTR [eax+0x15],eax
  421376:	stc    
  421377:	(bad)  
  421378:	hlt    
  421379:	lea    edi,[ebx+0x63]
  42137c:	mov    bh,BYTE PTR [esi+eax*8]
  42137f:	imul   DWORD PTR [esi]
  421381:	call   0x88ed:0x3cf65125
  421388:	push   esi
  421389:	ret    0x5a46
  42138c:	test   eax,0x25035929
  421391:	test   dh,cl
  421393:	les    ebx,FWORD PTR [esi-0x2ecb09d4]
  421399:	jmp    0x7bd7:0x7de8b5b3
  4213a0:	dec    esp
  4213a1:	popf   
  4213a2:	fldenv [ecx+0xf]
  4213a5:	and    eax,0x2abee74a
  4213aa:	into   
  4213ab:	call   0x8d645347
  4213b0:	sbb    esi,edi
  4213b2:	nop
  4213b3:	push   esi
  4213b4:	fstp   TBYTE PTR [edi+0x16]
  4213b7:	div    bh
  4213b9:	cwde   
  4213ba:	daa    
  4213bb:	mov    edi,0xb14ddfd4
  4213c0:	push   0x1b1c111b
  4213c5:	call   0x3f2e:0x97d0b1f2
  4213cc:	cmp    edx,DWORD PTR [edi-0x21]
  4213cf:	push   ds
  4213d0:	out    0x3f,eax
  4213d2:	fsub   QWORD PTR [ebx+0x7]
  4213d5:	cmp    ah,BYTE PTR [ebx-0x5b]
  4213d8:	addr16 leave 
  4213da:	inc    edi
  4213db:	sti    
  4213dc:	es stc 
  4213de:	mov    al,ds:0xf1198c87
  4213e3:	in     eax,dx
  4213e4:	xchg   BYTE PTR [ebx],cl
  4213e6:	imul   edi,DWORD PTR [esi+0x7fecccf],0xffffffd5
  4213ed:	neg    DWORD PTR [ebx+0x68]
  4213f0:	push   ss
  4213f1:	int3   
  4213f2:	mov    bl,0x64
  4213f4:	xchg   edx,eax
  4213f5:	dec    edx
  4213f6:	jns    0x421453
  4213f8:	and    ebp,DWORD PTR [ecx-0x2e]
  4213fb:	stc    
  4213fc:	cli    
  4213fd:	(bad)  
  4213fe:	mov    edx,DWORD PTR [esi-0xef06b84]
  421404:	jle    0x421435
  421406:	rcl    dh,cl
  421408:	icebp  
  421409:	pop    esi
  42140a:	arpl   WORD PTR [ecx],ax
  42140c:	xchg   DWORD PTR [esi],ecx
  42140e:	push   ds
  42140f:	test   eax,0xff9981ac
  421414:	xchg   esp,eax
  421415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421416:	outs   dx,DWORD PTR ds:[esi]
  421417:	fldlg2 
  421419:	fistp  QWORD PTR [ecx]
  42141b:	std    
  42141c:	pop    ebp
  42141d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42141e:	leave  
  42141f:	idiv   cl
  421421:	adc    eax,0xdc2713e5
  421426:	or     ecx,DWORD PTR [esp+eax*1-0xfcb0cd]
  42142d:	ret    
  42142e:	inc    ecx
  42142f:	jge    0x42141e
  421431:	lea    ebp,[eax-0x53653b9]
  421437:	xchg   edi,eax
  421438:	ret    
  421439:	jns    0x421407
  42143b:	shl    BYTE PTR [edx-0x4baeea3c],0x88
  421442:	push   eax
  421443:	rcr    DWORD PTR [eax+0x38],0x6d
  421447:	sbb    eax,0x27153d72
  42144c:	or     DWORD PTR [edx],0xfffffff5
  42144f:	mov    esp,0x8eb3242
  421454:	sbb    al,0xf8
  421456:	sbb    al,0xc
  421458:	enter  0x3881,0x9f
  42145c:	outs   dx,DWORD PTR ds:[esi]
  42145d:	xchg   bl,bl
  42145f:	xor    bl,bh
  421461:	and    eax,0x5571bc75
  421466:	repz mov eax,ds:0xe1c47784
  42146c:	pmaxsw mm3,QWORD PTR [ebx]
  42146f:	sbb    eax,0xc480ee5f
  421474:	sub    eax,ebp
  421476:	xchg   esp,eax
  421477:	test   DWORD PTR [edx+edx*2-0x25],edx
  42147b:	aaa    
  42147c:	sbb    al,0xf0
  42147e:	nop
  42147f:	xlat   BYTE PTR ds:[ebx]
  421480:	push   ss
  421481:	(bad)  
  421483:	das    
  421484:	add    esi,DWORD PTR [edi]
  421486:	mov    edi,0x9f4e909e
  42148b:	cmp    DWORD PTR [ebp+0x2592092a],esp
  421491:	inc    esi
  421492:	cwde   
  421493:	ret    
  421494:	outs   dx,DWORD PTR gs:[esi]
  421496:	jno    0x42143a
  421498:	es scas al,BYTE PTR es:[edi]
  42149a:	xor    DWORD PTR [edi-0x51],0xffffffa2
  42149e:	xchg   esp,eax
  42149f:	cmp    BYTE PTR [esp+ebp*1-0x5e],ch
  4214a3:	jmp    0x1dd439e4
  4214a8:	mov    ch,0x61
  4214aa:	outs   dx,DWORD PTR ds:[esi]
  4214ab:	into   
  4214ac:	cmp    DWORD PTR fs:[eax+0x51],ecx
  4214b0:	mov    edx,?
  4214b2:	ret    
  4214b3:	jmp    DWORD PTR [esi-0xb]
  4214b6:	out    0x1d,al
  4214b8:	xchg   DWORD PTR [ebx],ebx
  4214ba:	sub    ch,dh
  4214bc:	add    eax,0x40f33b34
  4214c1:	cmp    ecx,esp
  4214c3:	jmp    0x42145c
  4214c5:	hlt    
  4214c6:	or     eax,0xc0336df3
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x276102ac
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xebc9de8c
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   FWORD PTR [eax-0xb]
  421830:	fcmove st,st(3)
  421832:	mov    edx,0xc5e83b69
  421837:	bound  ecx,QWORD PTR [esi-0x5015e310]
  42183d:	dec    edx
  42183e:	jae    0x4217f9
  421840:	imul   edi,DWORD PTR [ebx],0x8e62c1e8
  421846:	mov    al,0xe3
  421848:	adc    eax,0xb9cb4aaf
  42184d:	imul   edi,DWORD PTR [ebx],0x8e62c1e8
  421853:	lock jecxz 0x42186b
  421856:	scas   eax,DWORD PTR es:[edi]
  421857:	dec    edx
  421858:	retf   
  421859:	mov    ecx,0xc1e83b69
  42185e:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421864:	dec    edx
  421865:	retf   
  421866:	mov    ecx,0x39e83b69
  42186b:	bound  ecx,QWORD PTR [esi+0x150aedf0]
  421871:	inc    esp
  421872:	retf   
  421873:	or     eax,0x79c9f660
  421878:	arpl   dx,ax
  42187a:	cmp    eax,0x23c741c2
  42187f:	mov    eax,0x87491999
  421884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421885:	adc    bh,ch
  421887:	popf   
  421888:	ret    
  421889:	jbe    0x421859
  42188b:	and    al,0xa5
  42188d:	(bad)  
  42188e:	sbb    eax,0x42a48a1b
  421893:	cld    
  421894:	test   DWORD PTR [ebp-0x14db39cb],ecx
  42189a:	std    
  42189b:	es push 0xea0dacc8
  4218a1:	xchg   ebp,eax
  4218a2:	int    0x18
  4218a4:	mov    ds:0x69b9ef40,al
  4218a9:	cmp    ebp,eax
  4218ab:	shl    DWORD PTR [edx-0x72],0xf7
  4218af:	jp     0x42189a
  4218b1:	test   BYTE PTR [ecx],0x33
  4218b4:	sub    esp,DWORD PTR [ebx+0x78]
  4218b7:	adc    BYTE PTR [ebx+0x68],dl
  4218ba:	int    0x8
  4218bc:	jno    0x4218dd
  4218be:	imul   DWORD PTR [edi]
  4218c0:	(bad)  
  4218c1:	mov    bl,0x36
  4218c3:	ret    
  4218c4:	jp     0x421891
  4218c6:	cmp    ch,bl
  4218c8:	enter  0xd7e9,0x57
  4218cc:	fadd   st,st(1)
  4218ce:	loope  0x4218dc
  4218d0:	add    ah,dl
  4218d2:	test   eax,0xcffa1c9a
  4218d7:	fwait
  4218d8:	xchg   esi,eax
  4218d9:	inc    eax
  4218da:	lea    eax,[ecx-0x5]
  4218dd:	xor    DWORD PTR [edx-0x457b8cbf],esp
  4218e3:	sbb    eax,DWORD PTR [edi-0x47b4ff5b]
  4218e9:	arpl   WORD PTR [ebx+0x10],sp
  4218ec:	push   ebx
  4218ed:	push   0x1f7008cd
  4218f2:	xchg   DWORD PTR [ebx-0x1c294ca7],esi
  4218f8:	push   0x62762fcb
  4218fd:	jmp    0xc1b9e34f
  421902:	mov    cl,0x91
  421904:	test   eax,0x860799e2
  421909:	cli    
  42190a:	mov    eax,ds:0x93403ded
  42190f:	fsub   QWORD PTR [esi+0x31]
  421912:	stos   BYTE PTR es:[edi],al
  421913:	cmp    eax,esi
  421915:	test   BYTE PTR [edx+0x9c7768a],ah
  42191b:	xor    ebp,DWORD PTR [ebx]
  42191d:	arpl   WORD PTR [ebx],di
  42191f:	call   0xf0d07be5
  421924:	jecxz  0x42193b
  421926:	dec    DWORD PTR [edi]
  421928:	retf   
  421929:	mov    ecx,0xc1ea3a25
  42192e:	ret    0x9b5e
  421931:	lods   al,BYTE PTR ds:[esi]
  421932:	adc    eax,0xb9cb4aaf
  421937:	imul   edi,DWORD PTR [ebx],0x8d6221e8
  42193d:	icebp  
  42193e:	call   0xcb8cbe57
  421943:	push   edi
  421944:	ins    DWORD PTR es:[edi],dx
  421945:	cmp    ebp,eax
  421947:	jge    0x4219ad
  421949:	mov    ?,eax
  42194b:	jecxz  0x421962
  42194d:	scas   eax,DWORD PTR es:[edi]
  42194e:	pop    ebx
  42194f:	jbe    0x42190a
  421951:	imul   edi,DWORD PTR [ebx],0x8e62c1f8
  421957:	lock out 0x15,al
  42195a:	scas   eax,DWORD PTR es:[edi]
  42195b:	dec    edx
  42195c:	mov    bh,BYTE PTR [ecx-0x3e17d497]
  421962:	bound  ecx,QWORD PTR [eax+esi*8+0x4baf10e3]
  421969:	retf   
  42196a:	mov    ecx,0xc4e83b69
  42196f:	bound  ecx,QWORD PTR [edi-0x50ea1c10]
  421975:	dec    edx
  421976:	retf   
  421977:	jmp    0xc62a54e1
  42197c:	bound  ecx,QWORD PTR [esi-0x50eff80f]
  421982:	dec    eax
  421983:	retf   
  421984:	mov    ecx,0xd1e83be9
  421989:	bound  ecx,QWORD PTR [esi-0x50ea1c20]
  42198f:	dec    edx
  421990:	fstp   TBYTE PTR [ecx-0x3e17d497]
  421996:	bound  ecx,QWORD PTR [esi-0x50fa1c10]
  42199c:	dec    edx
  42199d:	retf   
  42199e:	mov    ecx,0xc1e83b69
  4219a3:	bound  ecx,QWORD PTR [esi-0x5cd3e810]
  4219a9:	dec    edx
  4219aa:	mov    ds:0xe83b69ba,al
  4219af:	xor    DWORD PTR [ecx-0x72],ebp
  4219b2:	mov    edi,0x4aaf15aa
  4219b7:	retf   
  4219b8:	mov    ecx,0xc1e83b69
  4219bd:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  4219c3:	dec    edx
  4219c4:	retf   
  4219c5:	mov    ecx,0xc1e83b69
  4219ca:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  4219d0:	dec    edx
  4219d1:	retf   
  4219d2:	mov    ecx,0xc1e83b69
  4219d7:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  4219dd:	dec    edx
  4219de:	retf   
  4219df:	mov    ecx,0xc1e83b69
  4219e4:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  4219ea:	dec    edx
  4219eb:	retf   
  4219ec:	mov    ecx,0xc1e83b69
  4219f1:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  4219f7:	dec    edx
  4219f8:	retf   
  4219f9:	mov    ecx,0xc1e83b69
  4219fe:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421a04:	dec    edx
  421a05:	retf   
  421a06:	mov    ecx,0xc1e83b69
  421a0b:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421a11:	dec    edx
  421a12:	retf   
  421a13:	mov    ecx,0xc1e83b69
  421a18:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421a1e:	fs mov edi,0xe84f11dc
  421a24:	shl    DWORD PTR [edx-0x72],0x10
  421a28:	call   0xcb9cc942
  421a2d:	mov    ecx,0xc1ecef69
  421a32:	bound  ecx,QWORD PTR [edx-0x15ba1c10]
  421a38:	or     ecx,edi
  421a3a:	in     eax,dx
  421a3b:	es cmp ebp,eax
  421a3e:	shl    DWORD PTR [edx-0x72],0xf0
  421a42:	ret    
  421a43:	adc    eax,0xcbe5aaaf
  421a48:	sbb    cl,BYTE PTR [ecx-0x75]
  421a4b:	shl    DWORD PTR [edx-0x72],0xf0
  421a4f:	adc    DWORD PTR ds:0xb23b4aaf,0x69
  421a56:	cmp    esi,DWORD PTR [edx+0x288e62c1]
  421a5c:	out    0x15,eax
  421a5e:	scas   eax,DWORD PTR es:[edi]
  421a5f:	dec    edx
  421a60:	retf   
  421a61:	mov    ecx,0xc1e83b69
  421a66:	bound  ecx,QWORD PTR [esi-0x50ca1c10]
  421a6c:	dec    edx
  421a6d:	sub    edi,DWORD PTR [ecx-0x3e17c497]
  421a73:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421a79:	dec    edx
  421a7a:	retf   
  421a7b:	mov    ecx,0xc1e83b69
  421a80:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421a86:	dec    edx
  421a87:	retf   
  421a88:	mov    ecx,0xc1e83b69
  421a8d:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421a93:	dec    edx
  421a94:	retf   
  421a95:	mov    ecx,0xc1e83b69
  421a9a:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421aa0:	dec    edx
  421aa1:	retf   
  421aa2:	mov    ecx,0xc1e83b69
  421aa7:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421aad:	dec    edx
  421aae:	retf   
  421aaf:	mov    ecx,0xc1e83b69
  421ab4:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421aba:	dec    edx
  421abb:	retf   
  421abc:	mov    ecx,0xc1e83b69
  421ac1:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421ac7:	dec    edx
  421ac8:	retf   
  421ac9:	mov    ecx,0xc1e83b69
  421ace:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421ad4:	dec    edx
  421ad5:	retf   
  421ad6:	mov    ecx,0xc1e83b69
  421adb:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421ae1:	dec    edx
  421ae2:	retf   
  421ae3:	mov    ecx,0xc1e83b69
  421ae8:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421aee:	dec    edx
  421aef:	retf   
  421af0:	mov    ecx,0xc1e83b69
  421af5:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421afb:	dec    edx
  421afc:	retf   
  421afd:	mov    ecx,0xc1e83b69
  421b02:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b08:	dec    edx
  421b09:	retf   
  421b0a:	mov    ecx,0xc1e83b69
  421b0f:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b15:	dec    edx
  421b16:	retf   
  421b17:	mov    ecx,0xc1e83b69
  421b1c:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b22:	dec    edx
  421b23:	retf   
  421b24:	mov    ecx,0xc1e83b69
  421b29:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b2f:	dec    edx
  421b30:	retf   
  421b31:	mov    ecx,0xc1e83b69
  421b36:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b3c:	dec    edx
  421b3d:	retf   
  421b3e:	mov    ecx,0xc1e83b69
  421b43:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b49:	dec    edx
  421b4a:	retf   
  421b4b:	mov    ecx,0xc1e83b69
  421b50:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b56:	dec    edx
  421b57:	retf   
  421b58:	mov    ecx,0xc1e83b69
  421b5d:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b63:	dec    edx
  421b64:	retf   
  421b65:	mov    ecx,0xc1e83b69
  421b6a:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b70:	dec    edx
  421b71:	retf   
  421b72:	mov    ecx,0xc1e83b69
  421b77:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b7d:	dec    edx
  421b7e:	retf   
  421b7f:	mov    ecx,0xc1e83b69
  421b84:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b8a:	dec    edx
  421b8b:	retf   
  421b8c:	mov    ecx,0xc1e83b69
  421b91:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421b97:	dec    edx
  421b98:	retf   
  421b99:	mov    ecx,0xc1e83b69
  421b9e:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421ba4:	dec    edx
  421ba5:	retf   
  421ba6:	mov    ecx,0xc1e83b69
  421bab:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421bb1:	dec    edx
  421bb2:	retf   
  421bb3:	mov    ecx,0xc1e83b69
  421bb8:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421bbe:	dec    edx
  421bbf:	retf   
  421bc0:	mov    ecx,0xc1e83b69
  421bc5:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421bcb:	dec    edx
  421bcc:	retf   
  421bcd:	mov    ecx,0xc1e83b69
  421bd2:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421bd8:	dec    edx
  421bd9:	retf   
  421bda:	mov    ecx,0xc1e83b69
  421bdf:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421be5:	dec    edx
  421be6:	retf   
  421be7:	mov    ecx,0xc1e83b69
  421bec:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421bf2:	dec    edx
  421bf3:	retf   
  421bf4:	mov    ecx,0xc1e83b69
  421bf9:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421bff:	dec    edx
  421c00:	retf   
  421c01:	mov    ecx,0xc1e83b69
  421c06:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421c0c:	dec    edx
  421c0d:	retf   
  421c0e:	mov    ecx,0xc1e83b69
  421c13:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421c19:	dec    edx
  421c1a:	retf   
  421c1b:	mov    ecx,0xc1e83b69
  421c20:	bound  ecx,QWORD PTR [esi-0x50ea1c10]
  421c26:	dec    edx
  421c27:	retf   
  421c28:	mov    ecx,0xc1e83b69
  421c2d:	(bad)  
  421c2f:	pop    eax
  421c30:	call   0xcb8c9c4a
  421c35:	test   eax,0x63c23b69
  421c3a:	mov    eax,0x381c96ff
  421c3f:	xor    ebp,ecx
  421c41:	fwait
  421c42:	push   esp
  421c43:	pop    edi
  421c44:	sar    ebx,cl
  421c46:	jne    0x421c3f
  421c48:	call   0xbc9183ce
  421c4d:	sti    
  421c4e:	jl     0x421bff
  421c50:	add    al,0xdf
  421c52:	bound  eax,QWORD PTR [eax-0x5c]
  421c55:	mov    al,ds:0x962a7392
  421c5a:	jns    0x421be0
  421c5c:	or     BYTE PTR [esi+0x19],bh
  421c5f:	call   0xa548e24a
  421c64:	mov    dl,0x78
  421c66:	push   es
  421c67:	js     0x421c5f
  421c69:	fs jge 0x421bf6
  421c6c:	mov    dh,cl
  421c6e:	mov    esp,0xc6af4baa
  421c73:	push   0x65
  421c75:	xor    esp,DWORD PTR [edi]
  421c77:	arpl   sp,dx
  421c79:	mov    ecx,fs
  421c7b:	rol    DWORD PTR [ecx-0x15c7b6ff],0x32
  421c82:	(bad)  
  421c83:	call   0x879c11b2
  421c88:	dec    ebx
  421c89:	rep ins DWORD PTR es:[edi],dx
  421c8b:	bound  ecx,QWORD PTR [edi+0x4d]
  421c8e:	dec    ebp
  421c8f:	jg     0x421ccc
  421c91:	pop    edx
  421c92:	push   eax
  421c93:	or     al,0xe0
  421c95:	xchg   edx,eax
  421c96:	out    dx,eax
  421c97:	jnp    0x421c1c
  421c99:	mov    bl,0xbb
  421c9b:	data16 sub al,0x12
  421c9e:	inc    ecx
  421c9f:	jo     0x421cb0
  421ca1:	inc    dl
  421ca3:	xchg   ebp,eax
  421ca4:	scas   eax,DWORD PTR es:[edi]
  421ca5:	push   ecx
  421ca6:	scas   eax,DWORD PTR es:[edi]
  421ca7:	jmp    0x2bd2cda2
  421cac:	adc    eax,0x4253f017
  421cb1:	inc    edi
  421cb2:	in     al,dx
  421cb3:	jnp    0x421cc2
  421cb5:	adc    al,0x76
  421cb7:	xchg   esp,eax
  421cb8:	arpl   WORD PTR [esi+0x2c],di
  421cbb:	push   esp
  421cbc:	sub    eax,DWORD PTR [ecx]
  421cbe:	ret    
  421cbf:	xchg   DWORD PTR [esi],eax
  421cc1:	fcmovne st,st(5)
  421cc3:	jecxz  0x421cc0
  421cc5:	xor    eax,0x90ec55bd
  421cca:	test   BYTE PTR [edx+esi*4+0xd],bh
  421cce:	sbb    al,0x4c
  421cd0:	fs repz cdq 
  421cd3:	and    DWORD PTR [ecx-0x7f],esp
  421cd6:	sub    eax,0xff55dc96
  421cdb:	pop    ss
  421cdc:	xor    bh,ah
  421cde:	das    
  421cdf:	cwde   
  421ce0:	mov    ah,0x82
  421ce2:	icebp  
  421ce3:	ja     0x421c89
  421ce5:	not    DWORD PTR [esi-0xa05a282]
  421ceb:	sub    ebp,DWORD PTR [edx+0x7cc814f0]
  421cf1:	or     al,0x32
  421cf3:	mov    eax,ds:0x6664a58c
  421cf9:	mov    eax,0xac97c0b4
  421cfe:	push   edx
  421cff:	fs hlt 
  421d01:	outs   dx,DWORD PTR ds:[esi]
  421d02:	xchg   edx,eax
  421d03:	mov    esp,0x9b9dfec5
  421d08:	sti    
  421d09:	dec    edx
  421d0a:	iret   
  421d0b:	xor    esp,DWORD PTR [edi+0x6b]
  421d0e:	push   ss
  421d0f:	repnz mov ds:0x777bc13c,al
  421d15:	cli    
  421d16:	daa    
  421d17:	pushf  
  421d18:	popa   
  421d19:	mov    al,ds:0xa1de9d13
  421d1e:	fimul  DWORD PTR [ebp-0x4b]
  421d21:	fcmove st,st(0)
  421d23:	mov    ds:0x9ed497be,eax
  421d28:	pop    edi
  421d29:	inc    esi
  421d2a:	jbe    0x421d74
  421d2c:	popa   
  421d2d:	push   edx
  421d2e:	or     BYTE PTR [ebx+0x7590e47],bh
  421d34:	inc    edi
  421d35:	mov    eax,ds:0xf2d5e029
  421d3a:	mov    al,ds:0x4401a9a5
  421d3f:	inc    eax
  421d40:	push   edi
  421d41:	push   edx
  421d42:	mov    dh,0xd1
  421d44:	out    dx,al
  421d45:	xchg   ecx,eax
  421d46:	sub    DWORD PTR [ebp+0x6172f434],edx
  421d4c:	mov    dl,0x69
  421d4e:	lahf   
  421d4f:	pop    eax
  421d50:	call   0xb352:0x686dcbd3
  421d57:	push   ss
  421d58:	xchg   ebx,eax
  421d59:	sbb    edi,edi
  421d5b:	outs   dx,WORD PTR ds:[esi]
  421d5d:	imul   ecx,DWORD PTR [ebx-0x21cbd06],0x6d
  421d64:	adc    BYTE PTR [ebx],0x69
  421d67:	fidivr WORD PTR [ecx]
  421d69:	push   edx
  421d6a:	pop    esi
  421d6b:	sti    
  421d6c:	xor    bl,BYTE PTR [eax]
  421d6e:	js     0x421d65
  421d70:	in     eax,dx
  421d71:	jnp    0x421d09
  421d73:	sti    
  421d74:	mov    esi,0x1d7a212f
  421d79:	sbb    eax,edi
  421d7b:	popf   
  421d7c:	ja     0x421dc0
  421d7e:	lock out dx,al
  421d80:	out    0x2,eax
  421d82:	fstp   TBYTE PTR [edx]
  421d84:	shr    ch,cl
  421d86:	push   eax
  421d87:	mov    bh,0x47
  421d89:	or     eax,DWORD PTR [eax-0x56]
  421d8c:	mov    edi,0x5927e491
  421d91:	mov    ebp,DWORD PTR [edi+0x6466d110]
  421d97:	jp     0x421d1f
  421d99:	jnp    0x421e11
  421d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d9c:	in     eax,0x99
  421d9e:	ins    BYTE PTR es:[edi],dx
  421d9f:	arpl   WORD PTR ds:0x8b8a1ed4,cx
  421da5:	jle    0x421da5
  421da7:	and    al,0x76
  421da9:	daa    
  421daa:	pop    eax
  421dab:	in     al,0x74
  421dad:	mov    ebp,0xbd45ad18
  421db2:	in     eax,0x35
  421db4:	fcmovu st,st(5)
  421db6:	in     eax,dx
  421db7:	pushf  
  421db8:	(bad)  
  421dba:	xchg   edi,eax
  421dbb:	adc    edi,DWORD PTR [eax+0x11efee32]
  421dc1:	xor    DWORD PTR [esi],ecx
  421dc3:	xchg   ebx,eax
  421dc4:	pop    ebp
  421dc5:	sar    ah,1
  421dc7:	pop    edx
  421dc8:	idiv   DWORD PTR ds:0x10b1e08c
  421dce:	dec    ecx
  421dcf:	mov    dh,0xe7
  421dd1:	aaa    
  421dd2:	(bad)  
  421dd3:	loope  0x421dbe
  421dd5:	fidiv  DWORD PTR [eax+0x11]
  421dd8:	aad    0x2e
  421dda:	test   al,dh
  421ddc:	dec    ecx
  421ddd:	mov    dl,BYTE PTR [edi-0x3752f05c]
  421de3:	out    dx,eax
  421de4:	test   eax,0xf4c3a817
  421de9:	sbb    al,0x35
  421deb:	aaa    
  421dec:	in     al,0x37
  421dee:	pop    ecx
  421def:	fdiv   DWORD PTR [esi+0x7e]
  421df2:	out    0x3d,al
  421df4:	outs   dx,DWORD PTR ds:[esi]
  421df5:	outs   dx,BYTE PTR es:[esi]
  421df7:	imul   edx,DWORD PTR [edi],0xb9b3daea
  421dfd:	cmp    al,0x52
  421dff:	outs   dx,DWORD PTR ds:[esi]
  421e00:	add    eax,0x386eafb4
  421e05:	cwde   
  421e06:	test   al,0xdc
  421e08:	adc    DWORD PTR [esi],ecx
  421e0a:	jg     0x421e77
  421e0c:	jae    0x421e8c
  421e0e:	mov    ah,0x13
  421e10:	hlt    
  421e11:	lea    edi,[ebp+0x15]
  421e14:	and    BYTE PTR [ebx],ah
  421e16:	jecxz  0x421e2d
  421e18:	jecxz  0x421dcc
  421e1a:	test   BYTE PTR [edi+0x26b06f0f],dl
  421e20:	push   esi
  421e21:	sti    
  421e22:	pusha  
  421e23:	cmc    
  421e24:	in     eax,0xee
  421e26:	daa    
  421e27:	mov    dl,0xa0
  421e29:	neg    eax
  421e2b:	add    DWORD PTR [eax],ebx
  421e2d:	inc    edx
  421e2e:	xlat   BYTE PTR ds:[ebx]
  421e2f:	inc    edi
  421e30:	ja     0x421dea
  421e32:	inc    eax
  421e33:	call   0x2c18:0x3c061a49
  421e3a:	retfw  0xba2e
  421e3e:	add    ecx,edi
  421e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e41:	or     al,0x7d
  421e43:	mov    ebp,0x50cda36
  421e48:	push   esi
  421e49:	or     BYTE PTR [edi],bh
  421e4b:	mov    ds:0x4eca54b4,eax
  421e50:	pushf  
  421e51:	loope  0x421e9f
  421e53:	pop    ebx
  421e54:	jmp    0xdc76:0xb4ede5d2
  421e5b:	mov    dl,0x7c
  421e5d:	outs   dx,DWORD PTR ds:[esi]
  421e5e:	mov    bl,0xef
  421e60:	dec    esi
  421e61:	dec    edi
  421e62:	push   esi
  421e63:	jge    0x421e00
  421e65:	dec    esi
  421e66:	add    esi,esi
  421e68:	dec    esi
  421e69:	and    esi,DWORD PTR [eax]
  421e6b:	xchg   ebx,eax
  421e6c:	xchg   edi,eax
  421e6d:	or     BYTE PTR [esi],ah
  421e6f:	jle    0x421e8e
  421e71:	cs mov dh,0x64
  421e74:	sti    
  421e75:	shl    DWORD PTR [eax+ebx*2],cl
  421e78:	in     eax,dx
  421e79:	xor    dl,cl
  421e7b:	(bad)  
  421e7c:	mov    ds:0x3d51fc6a,eax
  421e81:	out    0xba,eax
  421e83:	leave  
  421e84:	into   
  421e85:	(bad)  
  421e86:	xchg   edi,eax
  421e87:	int3   
  421e88:	imul   ecx
  421e8a:	sar    bl,1
  421e8c:	push   0x3dcd346d
  421e91:	pop    ds
  421e92:	ror    BYTE PTR [ecx+0x70],0xb2
  421e96:	ja     0x421e20
  421e98:	inc    ecx
  421e99:	xchg   edi,eax
  421e9a:	xor    dh,bl
  421e9c:	fiadd  DWORD PTR [ecx]
  421e9e:	mov    cl,0x17
  421ea0:	sbb    dh,BYTE PTR [esi-0x3f21caa5]
  421ea6:	xchg   edi,eax
  421ea7:	imul   ebp,edi,0x59
  421eaa:	lods   eax,DWORD PTR ds:[esi]
  421eab:	(bad)  
  421eac:	pop    edi
  421ead:	cmp    bh,bh
  421eaf:	ret    
  421eb0:	ss aaa 
  421eb2:	add    eax,0xfb3caa29
  421eb7:	imul   esi,DWORD PTR [esp+eiz*8],0x2c636e41
  421ebe:	jg     0x421e8d
  421ec0:	sub    DWORD PTR [ebx-0x3b4d7569],0xffffff88
  421ec7:	pop    ebx
  421ec8:	xchg   ecx,eax
  421ec9:	pop    esp
  421eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ecb:	mov    eax,ds:0x6e77eea6
  421ed0:	mov    ?,WORD PTR [ebp+0x69]
  421ed3:	mov    eax,ds:0x4a391d4e
  421ed8:	jbe    0x421efa
  421eda:	ret    
  421edb:	dec    esp
  421edc:	(bad)  
  421edd:	fucomi st,st(2)
  421edf:	mov    ecx,?
  421ee1:	mov    ds:0x3f8285fd,al
  421ee6:	cli    
  421ee7:	and    BYTE PTR [eax-0x41316a45],al
  421eed:	pop    ebx
  421eee:	clc    
  421eef:	gs dec edx
  421ef1:	pop    ebp
  421ef2:	mov    dl,0xdc
  421ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ef5:	mov    dh,0x85
  421ef7:	xlat   BYTE PTR ds:[ebx]
  421ef8:	das    
  421ef9:	inc    eax
  421efa:	ja     0x421f04
  421efc:	(bad)  
  421efd:	neg    DWORD PTR [ecx-0x64]
  421f00:	(bad)  [ebx+0x2a]
  421f03:	push   eax
  421f04:	mov    edx,0x195405e3
  421f09:	add    cl,BYTE PTR [edi-0x4e6ef130]
  421f0f:	mov    edi,0xee753692
  421f14:	pop    edi
  421f15:	loopne 0x421e9d
  421f17:	jmp    FWORD PTR [edi]
  421f19:	fdivr  DWORD PTR [esi+0x1b0cc481]
  421f1f:	gs lock push edx
  421f22:	test   DWORD PTR [edi],eax
  421f24:	fidivr DWORD PTR [esi]
  421f26:	je     0x421f0f
  421f28:	lea    ebp,[edx+ebp*2+0x59]
  421f2c:	mov    BYTE PTR [ebp-0x3a],dl
  421f2f:	inc    edx
  421f30:	std    
  421f31:	inc    edi
  421f32:	push   esp
  421f33:	mov    ds:0x9f247439,eax
  421f38:	mov    ds:0x73d7868a,al
  421f3d:	jecxz  0x421fb0
  421f3f:	sti    
  421f40:	inc    ebx
  421f41:	(bad)
  421f44:	retf   0xb9e8
  421f47:	cmp    bh,dh
  421f49:	aad    0xf
  421f4b:	and    eax,0xafabde5c
  421f50:	mov    esi,0x16ac02c0
  421f55:	pop    ds
  421f56:	xchg   DWORD PTR [eax],edi
  421f58:	test   eax,0x1649aea6
  421f5d:	mov    bl,0x35
  421f5f:	xchg   edx,eax
  421f60:	leave  
  421f61:	jmp    0x82bd492e
  421f66:	xchg   esi,eax
  421f67:	in     eax,dx
  421f68:	mov    bh,0xa0
  421f6a:	out    0xaf,eax
  421f6c:	pop    esp
  421f6d:	in     eax,0xcc
  421f6f:	sub    al,0x3e
  421f71:	pop    ecx
  421f72:	jmp    0xab6b4a94
  421f77:	cli    
  421f78:	pop    ds
  421f79:	jl     0x421fe7
  421f7b:	ss mov ah,0xfa
  421f7e:	out    0x70,eax
  421f80:	(bad)  
  421f81:	jo     0x421ff9
  421f83:	inc    esp
  421f84:	pushf  
  421f85:	call   0x9bcf:0x27a6fe81
  421f8c:	retf   
  421f8d:	mov    dh,0x66
  421f8f:	inc    esi
  421f90:	jno    0x421f8f
  421f92:	add    BYTE PTR [eax+0x6a],ah
  421f95:	add    DWORD PTR [esi+0x11],0x1042d51b
  421f9c:	pavgb  mm0,QWORD PTR [esi+0x3e657701]
  421fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa4:	test   eax,0xbca0d04d
  421fa9:	mov    dl,0x46
  421fab:	mov    dl,dh
  421fad:	div    DWORD PTR [ebx+0x45bffd45]
  421fb3:	sub    eax,0x240214a7
  421fb8:	fisttp WORD PTR [ebx-0x53]
  421fbb:	test   DWORD PTR ds:0x5e036e67,eax
  421fc1:	call   0xc735:0x6123aa4b
  421fc8:	xor    bh,ch
  421fca:	lods   eax,DWORD PTR ds:[esi]
  421fcb:	add    BYTE PTR [edx+0xe],cl
  421fce:	fsub   QWORD PTR ds:0xa5801450
  421fd4:	mov    bh,0xf1
  421fd6:	add    al,0x9d
  421fd8:	inc    ebx
  421fd9:	shl    DWORD PTR cs:[ecx-0x28f59d23],0x7b
  421fe1:	mov    bh,0x87
  421fe3:	push   esi
  421fe4:	and    DWORD PTR [eax],esi
  421fe6:	add    al,0xdc
  421fe8:	mov    esp,0xb1baaa33
  421fed:	cmp    eax,0xf8d6e899
  421ff2:	pop    ecx
  421ff3:	jb     0x42204c
  421ff5:	push   ds
  421ff6:	xor    DWORD PTR [edx],eax
  421ff8:	ror    edx,cl
  421ffa:	int3   
  421ffb:	lahf   
  421ffc:	jmp    0x421ff8
  421ffe:	fs aad 0x15
  422001:	mov    dl,0xb2
  422003:	mov    ecx,0x3ee17c4e
  422008:	or     ah,BYTE PTR [ebx]
  42200a:	mov    al,ds:0xb1b20d50
  42200f:	mov    esi,0x14e8780
  422014:	adc    DWORD PTR [eax],0x3a439d0f
  42201a:	lods   al,BYTE PTR ds:[esi]
  42201b:	cmp    eax,0x862843e5
  422020:	rcl    DWORD PTR [ecx-0x7e7bebe9],0x0
  422027:	retf   
  422028:	xchg   ch,dl
  42202a:	shl    DWORD PTR [esi],cl
  42202c:	scas   al,BYTE PTR es:[edi]
  42202d:	jl     0x422021
  42202f:	(bad)  
  422030:	jnp    0x421fdb
  422032:	scas   eax,DWORD PTR es:[edi]
  422033:	sub    eax,0x92709f6b
  422038:	mov    ah,0xe7
  42203a:	arpl   WORD PTR [edi-0x7d1b5c28],di
  422040:	xor    eax,0x50f952fa
  422045:	mov    al,ds:0x96afc083
  42204a:	inc    esp
  42204b:	jmp    0xa94:0x35131756
  422052:	inc    esi
  422053:	cmp    al,0xe1
  422055:	std    
  422056:	in     al,0x6
  422058:	adc    eax,0x46006e9e
  42205d:	call   0x2c81:0xce5fac13
  422064:	add    DWORD PTR [ebx+ebp*4],esp
  422067:	outs   dx,BYTE PTR ds:[esi]
  422068:	mov    eax,0x89547106
  42206d:	cli    
  42206e:	mov    ecx,0x10f4c8a6
  422073:	les    ebx,FWORD PTR [ebx+0x12]
  422076:	mov    ch,0x11
  422078:	iret   
  422079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42207a:	rcr    ecx,0xb2
  42207d:	jno    0x4220b4
  42207f:	in     al,0xe4
  422081:	cdq    
  422082:	sbb    al,0xb9
  422084:	les    esp,FWORD PTR [edi]
  422086:	jne    0x4220e1
  422088:	mov    ah,0xd2
  42208a:	push   ss
  42208b:	ss xchg esp,eax
  42208d:	stos   BYTE PTR es:[edi],al
  42208e:	int3   
  42208f:	cmp    DWORD PTR [ebx+ecx*8+0xd],ebx
  422093:	inc    eax
  422094:	rcl    BYTE PTR ds:0x19be5243,0xfa
  42209b:	mov    dl,al
  42209d:	lds    esi,FWORD PTR [ebx+eiz*4-0x43c78dea]
  4220a4:	push   ebx
  4220a5:	jno    0x422079
  4220a7:	pushf  
  4220a8:	int    0xad
  4220aa:	bound  eax,QWORD PTR [ecx]
  4220ac:	cwde   
  4220ad:	lods   eax,DWORD PTR ds:[esi]
  4220ae:	out    dx,al
  4220af:	into   
  4220b0:	stos   DWORD PTR es:[edi],eax
  4220b1:	jp     0x42203f
  4220b3:	and    BYTE PTR [ecx],ah
  4220b5:	push   0x2271df2c
  4220ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220bb:	mov    dh,0x4b
  4220bd:	inc    ebx
  4220be:	add    dl,BYTE PTR [edi+0x54]
  4220c1:	push   edi
  4220c2:	xchg   edx,eax
  4220c3:	push   ebx
  4220c4:	mov    ebp,0xadc09d5
  4220c9:	aaa    
  4220ca:	gs popa 
  4220cc:	(bad)  
  4220cd:	push   0x24
  4220cf:	(bad)  
  4220d0:	out    dx,al
  4220d1:	fucomip st,st(2)
  4220d3:	mov    ch,0xec
  4220d5:	lock sbb edi,DWORD PTR [ebx-0x32]
  4220d9:	mov    ?,WORD PTR [edi+ecx*4+0x5]
  4220dd:	fisttp DWORD PTR [eax+0x3f]
  4220e0:	out    0x8,eax
  4220e2:	(bad)  
  4220e3:	xlat   BYTE PTR ds:[ebx]
  4220e4:	sahf   
  4220e5:	sub    eax,0x47bf9a4e
  4220ea:	sub    dh,BYTE PTR [eax]
  4220ec:	mov    esp,0xd460c5aa
  4220f1:	push   eax
  4220f2:	(bad)  
  4220f3:	lods   al,BYTE PTR ds:[esi]
  4220f4:	or     dl,BYTE PTR [esi+0x497b2cfe]
  4220fa:	shl    DWORD PTR [ecx+edi*8+0x5],cl
  4220fe:	add    edx,edx
  422100:	ret    
  422101:	mov    edx,0xb927957d
  422106:	jmp    0x2e470acd
  42210b:	retf   0xce67
  42210e:	and    ebp,edx
  422110:	fucomp st(5)
  422112:	aas    
  422113:	leave  
  422114:	xor    DWORD PTR [ebp-0x6b],ebp
  422117:	pop    eax
  422118:	pop    ebp
  422119:	les    edi,FWORD PTR [ecx+0x2]
  42211c:	clc    
  42211d:	push   ecx
  42211e:	and    DWORD PTR [esi+0x3fffbe3a],esp
  422124:	int3   
  422125:	adc    ecx,eax
  422127:	inc    ebx
  422128:	add    al,0x61
  42212a:	mov    al,ah
  42212c:	sub    BYTE PTR [eax+0x3dd8f467],0xca
  422133:	and    eax,0xe5bd4bef
  422138:	and    eax,0x3d9803b2
  42213d:	or     eax,0x77581e2e
  422142:	sub    eax,esp
  422144:	arpl   WORD PTR [edx-0x60],cx
  422147:	jmp    0xd1a670bf
  42214c:	mov    bh,0x6
  42214e:	jbe    0x422197
  422150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422151:	cmp    DWORD PTR [esi],ebp
  422153:	add    bl,bl
  422155:	xchg   dl,bh
  422157:	push   0x16
  422159:	in     eax,0x0
  42215b:	aad    0x27
  42215d:	or     DWORD PTR [esp+eax*4],eax
  422160:	mov    ds:0x61f4b907,eax
  422165:	xor    ch,BYTE PTR [edx+0x10]
  422168:	xlat   BYTE PTR ds:[ebx]
  422169:	add    BYTE PTR [eax-0x1e],al
  42216c:	push   ss
  42216d:	in     eax,0x37
  42216f:	aam    0xc6
  422171:	fdiv   QWORD PTR [esi*4+0x4f709f36]
  422178:	das    
  422179:	cmp    eax,0x2fa1286a
  42217e:	mov    edx,0x2755506e
  422183:	and    DWORD PTR [eax-0x70],eax
  422186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422187:	ret    0x3d7b
  42218a:	add    al,0xc
  42218c:	xor    BYTE PTR [edx],0xa4
  42218f:	xchg   edi,eax
  422190:	mov    ecx,0x52740801
  422195:	mov    ebp,0x43dab4bb
  42219a:	push   ebx
  42219b:	push   esp
  42219c:	pop    ebx
  42219d:	cmc    
  42219e:	loop   0x422140
  4221a0:	jae    0x42213e
  4221a2:	xchg   edi,eax
  4221a3:	jmp    0x8092884a
  4221a8:	and    eax,0x8e6ceab2
  4221ad:	push   ebx
  4221ae:	stos   DWORD PTR es:[edi],eax
  4221af:	inc    edx
  4221b0:	out    0x5f,al
  4221b2:	mov    al,0xb8
  4221b4:	jl     0x422188
  4221b6:	ret    0xb95e
  4221b9:	imul   BYTE PTR [ebp+0x54c72a54]
  4221bf:	mov    bh,BYTE PTR [esi]
  4221c1:	inc    ebp
  4221c2:	mov    ebp,0x3d47a04e
  4221c7:	cdq    
  4221c8:	mov    ecx,0xe23f1d89
  4221cd:	xchg   BYTE PTR [ebp+edi*1+0x3ca9c96],dh
  4221d4:	jb     0x4221a4
  4221d6:	lods   al,BYTE PTR ds:[esi]
  4221d7:	fisub  DWORD PTR [ebp+0x42688b13]
  4221dd:	adc    BYTE PTR ds:[ebp-0x6a503858],cl
  4221e4:	mov    ch,0x8b
  4221e6:	es inc edx
  4221e8:	sbb    BYTE PTR [ecx-0x32],ch
  4221eb:	adc    esp,esp
  4221ed:	call   0xa94a:0xeaab8ee
  4221f4:	dec    eax
  4221f5:	adc    al,dh
  4221f7:	and    edi,eax
  4221f9:	mul    cl
  4221fb:	push   0xffffffa4
  4221fd:	imul   edx,DWORD PTR ds:0xb4ddcfdf,0x5f
  422204:	rcr    BYTE PTR [ecx-0x7f257a3e],cl
  42220a:	pop    ss
  42220b:	pop    esp
  42220c:	sub    al,0xaa
  42220e:	lahf   
  42220f:	adc    eax,DWORD PTR [ecx+esi*2]
  422212:	fs gs (bad) 
  422215:	in     al,dx
  422216:	sar    DWORD PTR gs:[ebx-0x2b],1
  42221a:	and    BYTE PTR [esi-0x63],ch
  42221d:	lods   eax,DWORD PTR ds:[esi]
  42221e:	hlt    
  42221f:	mov    WORD PTR [ebx],fs
  422221:	call   0xd60a:0xf43303e5
  422228:	sbb    BYTE PTR [edi+ecx*1+0x72032b5f],0x27
  422230:	push   edi
  422231:	mov    esi,0x2de177f6
  422236:	mov    esi,0x94233c2c
  42223b:	daa    
  42223c:	fs fs ss int3 
  422240:	mov    ebx,0x2a4114c5
  422245:	in     eax,dx
  422246:	lods   al,BYTE PTR ds:[esi]
  422247:	cld    
  422248:	inc    ebp
  422249:	push   edi
  42224a:	dec    BYTE PTR [ebp+0x46]
  42224d:	or     DWORD PTR [ecx-0x40],eax
  422250:	ins    BYTE PTR es:[edi],dx
  422251:	jp     0x42224f
  422253:	mov    DWORD PTR [edx],ecx
  422255:	ds mov ch,0x91
  422258:	retf   
  422259:	push   ss
  42225a:	lods   al,BYTE PTR ds:[esi]
  42225b:	out    0x46,al
  42225d:	add    BYTE PTR [ecx],dh
  42225f:	dec    esi
  422260:	jae    0x42223e
  422262:	mov    esi,0x6fa3df2a
  422267:	mov    ds:0xf1b1dffd,eax
  42226c:	(bad)  
  42226d:	mov    eax,0x942a103
  422272:	xor    al,bh
  422274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422275:	xor    esi,esp
  422277:	call   0x594a:0x9026a379
  42227e:	fnstsw WORD PTR [ecx]
  422280:	imul   ebx,DWORD PTR [esi+0x45a32908],0xfffffffb
  422287:	sub    al,ch
  422289:	jnp    0x4222ea
  42228b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42228c:	imul   ecx,DWORD PTR [ebx-0x4338205a],0x5d29766
  422296:	ins    DWORD PTR es:[edi],dx
  422297:	or     eax,0xb079a356
  42229c:	jecxz  0x422271
  42229e:	cmp    al,0x6d
  4222a0:	xchg   ebp,eax
  4222a1:	aad    0x36
  4222a3:	jnp    0x4222c5
  4222a5:	into   
  4222a6:	jp     0x42227f
  4222a8:	xchg   DWORD PTR [ecx+0x5fe2d932],esp
  4222ae:	fistp  DWORD PTR ds:0x68fb65b2
  4222b4:	push   ss
  4222b5:	sbb    bl,BYTE PTR [edi+0x3f]
  4222b8:	es ret 
  4222ba:	xchg   BYTE PTR [edx-0x178dab55],cl
  4222c0:	xchg   edx,eax
  4222c1:	outs   dx,BYTE PTR ds:[esi]
  4222c2:	out    dx,eax
  4222c3:	and    ebp,eax
  4222c5:	push   ss
  4222c6:	aam    0x85
  4222c8:	add    edx,DWORD PTR [edi]
  4222ca:	add    ebp,DWORD PTR [ebx-0x676799cc]
  4222d0:	loop   0x4222b8
  4222d2:	test   DWORD PTR fs:[edx],edx
  4222d5:	jp     0x422341
  4222d7:	retf   
  4222d8:	jecxz  0x4222a5
  4222da:	sub    DWORD PTR [eax-0x4d0dfdc7],0x3f9f6c1e
  4222e4:	js     0x4222d4
  4222e6:	add    eax,esi
  4222e8:	mov    edx,0x7af93e7
  4222ed:	pop    ss
  4222ee:	out    0x8,al
  4222f0:	mov    ah,0xff
  4222f2:	inc    ebx
  4222f3:	test   al,0xba
  4222f5:	inc    ebx
  4222f6:	lock ds in ax,0xfe
  4222fb:	int3   
  4222fc:	adc    DWORD PTR [esi],eax
  4222fe:	in     eax,0x4d
  422300:	pop    es
  422301:	(bad)  
  422303:	stos   BYTE PTR es:[edi],al
  422304:	push   edi
  422305:	test   dl,ch
  422307:	xlat   BYTE PTR ds:[ebx]
  422308:	inc    edi
  422309:	lock mov ebx,0x7223943f
  42230f:	iret   
  422310:	(bad)  
  422311:	div    cl
  422313:	jg     0x422392
  422315:	mov    dl,0x90
  422317:	mov    esi,0x70a11f25
  42231c:	loope  0x422349
  42231e:	jge    0x4222c8
  422320:	mov    bh,0x30
  422322:	jae    0x4222d9
  422324:	add    al,0x24
  422326:	jae    0x42235b
  422328:	adc    ebx,DWORD PTR [eax+0x79b2442e]
  42232e:	push   cs
  42232f:	jns    0x422342
  422331:	inc    ecx
  422332:	inc    eax
  422333:	popf   
  422334:	mov    ebx,0x22d362fd
  422339:	dec    edi
  42233a:	(bad)  
  42233b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42233c:	cmp    BYTE PTR [ecx-0x73d8f618],bl
  422342:	pop    eax
  422343:	pop    ebx
  422344:	fwait
  422345:	loopne 0x42234d
  422347:	adc    DWORD PTR [ebx-0x3],edi
  42234a:	inc    ebp
  42234b:	repz or edi,DWORD PTR [ebx+0x50]
  42234f:	dec    edi
  422350:	inc    BYTE PTR [edi-0x6e89fc91]
  422356:	jp     0x42233e
  422358:	bound  esp,QWORD PTR [ecx]
  42235a:	fucomp st(7)
  42235c:	outs   dx,DWORD PTR ds:[esi]
  42235d:	mov    edx,0xd16e0d43
  422362:	dec    ecx
  422363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422364:	mov    cl,0xfe
  422366:	outs   dx,BYTE PTR ds:[esi]
  422367:	adc    DWORD PTR [ecx],edx
  422369:	adc    ebx,eax
  42236b:	ins    DWORD PTR es:[edi],dx
  42236c:	or     cl,dl
  42236e:	or     ch,BYTE PTR [ebp+0xc9a4080]
  422374:	pop    esi
  422375:	jae    0x422368
  422377:	idiv   DWORD PTR [ebx]
  422379:	xor    eax,0x1c688196
  42237e:	ror    DWORD PTR [edx-0x66],cl
  422381:	shr    BYTE PTR [edx-0x46def416],0xca
  422388:	fnstenv [edx+0x51]
  42238b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42238c:	push   esi
  42238d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42238e:	enter  0xe59a,0x1a
  422392:	push   edi
  422393:	call   0x38e:0x8e6cabb3
  42239a:	test   DWORD PTR [edx-0x18fd1977],edx
  4223a0:	int    0xb1
  4223a2:	add    al,0xec
  4223a4:	jnp    0x422332
  4223a6:	in     eax,0x34
  4223a8:	push   cs
  4223a9:	adc    BYTE PTR [edx+0x72],dl
  4223ac:	fsub   DWORD PTR [ecx+0x54]
  4223af:	mov    DWORD PTR [esi+0x761c9a4c],0xc54eb5da
  4223b9:	inc    ebp
  4223ba:	sbb    eax,0x29fd765e
  4223bf:	fstp   TBYTE PTR [edx]
  4223c1:	ret    0x1f18
  4223c4:	test   al,0xa
  4223c6:	jo     0x422419
  4223c8:	xchg   dl,dh
  4223ca:	jmp    0x7b84:0xc012c768
  4223d1:	lods   al,BYTE PTR ds:[esi]
  4223d2:	sbb    eax,0x6f8ebdf2
  4223d7:	nop
  4223d8:	inc    edx
  4223d9:	push   ebp
  4223da:	pop    edx
  4223db:	sbb    DWORD PTR ds:0x5a029839,ecx
  4223e1:	jmp    0x422369
  4223e3:	xchg   ecx,eax
  4223e4:	sahf   
  4223e5:	or     BYTE PTR [edi-0x34],0x94
  4223e9:	sub    BYTE PTR ds:0xced5d6b6,0x4b
  4223f0:	push   esi
  4223f1:	mov    ecx,0xc600c2aa
  4223f6:	sbb    ch,BYTE PTR [edx+0x1748b075]
  4223fc:	mov    edx,DWORD PTR fs:[ebx+eiz*4+0xd]
  422401:	popa   
  422402:	mov    bl,dl
  422404:	sar    BYTE PTR [ebp+0x7d8e3831],1
  42240a:	or     BYTE PTR [edx-0x20ef7409],ah
  422410:	fistp  QWORD PTR [esi]
  422412:	xor    edx,DWORD PTR [edi+0x6a]
  422415:	fcomp  DWORD PTR [ecx]
  422417:	test   BYTE PTR [eax],dh
  422419:	call   0xbd22:0x62e956db
  422420:	bound  edx,QWORD PTR [ebx]
  422422:	stos   DWORD PTR es:[edi],eax
  422423:	jno    0x422485
  422425:	es sbb al,0x11
  422428:	js     0x422447
  42242a:	arpl   ax,bp
  42242c:	pop    es
  42242d:	(bad)  
  42242e:	mov    fs,ebx
  422430:	cmp    DWORD PTR [esi-0x5],ebp
  422433:	and    al,BYTE PTR [ebx-0x148b77e6]
  422439:	loop   0x422468
  42243b:	cmp    DWORD PTR [esp+esi*8],ecx
  42243e:	icebp  
  42243f:	adc    edx,DWORD PTR [edx-0x37]
  422442:	outs   dx,DWORD PTR ds:[esi]
  422443:	jl     0x42246b
  422445:	in     al,0x62
  422447:	adc    BYTE PTR [ebp-0x65b65c13],ah
  42244d:	or     eax,0xf81f096c
  422452:	(bad)  
  422453:	aam    0xf7
  422455:	inc    esi
  422456:	loopne 0x42245f
  422458:	sahf   
  422459:	aas    
  42245a:	scas   al,BYTE PTR es:[edi]
  42245b:	dec    edi
  42245c:	cli    
  42245d:	ss sbb al,0xef
  422460:	rcl    DWORD PTR [ecx+0x1],0x2b
  422464:	add    al,0xa7
  422466:	mov    esp,0xb8141101
  42246b:	fiadd  DWORD PTR [edx-0x5d0618c8]
  422471:	lea    esp,[edi-0x36]
  422474:	xor    al,0x2d
  422476:	inc    ebp
  422477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422478:	xor    BYTE PTR [edx],bl
  42247a:	xchg   edx,eax
  42247b:	mov    esi,edi
  42247d:	mov    ah,0xd0
  42247f:	adc    dl,BYTE PTR [edx+0x76]
  422482:	(bad)  
  422483:	imul   eax,edi,0x72bd3e3a
  422489:	dec    esi
  42248a:	inc    eax
  42248b:	and    ecx,DWORD PTR [ebx+0x25]
  42248e:	test   eax,0xc1c105c9
  422493:	add    ch,bl
  422495:	pop    edi
  422496:	aam    0x96
  422498:	out    dx,al
  422499:	sub    ecx,esi
  42249b:	adc    al,BYTE PTR [edx+0x6d7d6497]
  4224a1:	pop    DWORD PTR [ecx]
  4224a3:	jns    0x4224b6
  4224a5:	fcmovne st,st(4)
  4224a7:	fistp  QWORD PTR [edx-0x2c]
  4224aa:	jmp    0x703360c5
  4224af:	xor    eax,DWORD PTR [edx+0x48f7e7bc]
  4224b5:	fwait
  4224b6:	repz inc ebx
  4224b8:	dec    edi
  4224b9:	dec    edx
  4224ba:	mov    al,0x2f
  4224bc:	lods   al,BYTE PTR ds:[esi]
  4224bd:	les    ecx,FWORD PTR [ebp+0x68812596]
  4224c3:	and    BYTE PTR [edx+eax*1+0x5],dl
  4224c7:	js     0x422471
  4224c9:	push   ecx
  4224ca:	xor    dh,BYTE PTR [ecx-0x26]
  4224cd:	retf   
  4224ce:	mov    bl,0xc3
  4224d0:	jmpw   0xde18
  4224d4:	and    al,0x31
  4224d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224d7:	jae    0x42245e
  4224d9:	outs   dx,DWORD PTR ds:[esi]
  4224da:	or     DWORD PTR [edx+0x3796a965],edi
  4224e0:	je     0x422522
  4224e2:	jne    0x4224f2
  4224e4:	sub    esi,esp
  4224e6:	leave  
  4224e7:	icebp  
  4224e8:	mov    BYTE PTR [ebp+0x33],al
  4224eb:	daa    
  4224ec:	das    
  4224ed:	std    
  4224ee:	or     eax,0xc658a3b9
  4224f3:	dec    ecx
  4224f4:	cmp    ebp,ebx
  4224f6:	sbb    DWORD PTR [ebx-0x662f1e1f],esi
  4224fc:	test   DWORD PTR [ecx-0x78],eax
  4224ff:	jmp    0x149d:0x27ef3da8
  422506:	out    0x16,al
  422508:	test   BYTE PTR [ebp+0x142a86bd],0xf7
  42250f:	pop    eax
  422510:	xchg   ebx,eax
  422511:	(bad)  
  422512:	push   ebx
  422513:	dec    edx
  422514:	xchg   edx,eax
  422515:	outs   dx,DWORD PTR ds:[esi]
  422516:	jbe    0x42253c
  422518:	into   
  422519:	ficom  DWORD PTR [edi+0x5e93530c]
  42251f:	leave  
  422520:	pop    ds
  422521:	inc    ecx
  422522:	cmp    DWORD PTR [ecx+0x78],0xcf4e170d
  422529:	aas    
  42252a:	outs   dx,DWORD PTR ds:[esi]
  42252b:	icebp  
  42252c:	and    BYTE PTR [eax],bl
  42252e:	sub    esp,DWORD PTR [ebx-0x5e]
  422531:	pop    ebx
  422532:	lds    ebx,FWORD PTR [eax-0x3e97c4c7]
  422538:	or     dh,BYTE PTR [ecx-0x7c0a5255]
  42253e:	mov    bh,0x3b
  422540:	lahf   
  422541:	add    eax,0xd07f5b83
  422546:	mov    dh,0x59
  422548:	push   ss
  422549:	js     0x4225c3
  42254b:	pop    ebp
  42254c:	add    ch,BYTE PTR [ebp-0x6a559d1d]
  422552:	cmp    eax,0xb20282f7
  422557:	lahf   
  422558:	aam    0x11
  42255a:	mov    dl,0xb8
  42255c:	jge    0x422521
  42255e:	sub    DWORD PTR [ebx+0xb],ebx
  422561:	outs   dx,DWORD PTR ds:[esi]
  422562:	ret    
  422563:	and    eax,0x47928cea
  422568:	inc    ebx
  422569:	xchg   edx,eax
  42256a:	add    al,0xf9
  42256c:	lock test DWORD PTR [edx+0x6e664334],0x6316dbb6
  422577:	xchg   ecx,eax
  422578:	push   cs
  422579:	fstp   QWORD PTR [edi]
  42257b:	and    al,0x8a
  42257d:	retf   
  42257e:	sti    
  42257f:	and    DWORD PTR [edi+0x30],ecx
  422582:	sahf   
  422583:	adc    al,0xb7
  422585:	push   0xf0e6f4f7
  42258a:	add    DWORD PTR ds:0xf360658,eax
  422590:	mov    edi,0xf20c7ffc
  422595:	(bad)  
  422597:	jg     0x42255d
  422599:	pop    esi
  42259a:	pop    ecx
  42259b:	rcl    cl,cl
  42259d:	mov    ds,esi
  42259f:	add    BYTE PTR [edx-0x61],ah
  4225a2:	aas    
  4225a3:	dec    esp
  4225a4:	loop   0x42261b
  4225a6:	les    eax,FWORD PTR [edx-0x26646646]
  4225ac:	mov    dl,cl
  4225ae:	lds    edx,FWORD PTR [ebx]
  4225b0:	cld    
  4225b1:	lods   al,BYTE PTR ds:[esi]
  4225b2:	hlt    
  4225b3:	out    dx,al
  4225b4:	out    0x24,eax
  4225b6:	neg    BYTE PTR [ebp+0x7d]
  4225b9:	jp     0x4225b7
  4225bb:	and    BYTE PTR [ebx+0x1a65c4e9],0xcf
  4225c2:	cmc    
  4225c3:	les    edx,FWORD PTR [ebx]
  4225c5:	lea    ecx,[esi]
  4225c7:	xchg   esi,eax
  4225c8:	arpl   WORD PTR [ecx-0x23],dx
  4225cb:	int3   
  4225cc:	jle    0x422632
  4225ce:	(bad)  
  4225cf:	fidiv  DWORD PTR [esp+ecx*1+0x3a79f04a]
  4225d6:	repz mov ds:0x724e8b0e,eax
  4225dc:	mov    dl,0xa0
  4225de:	jl     0x42261a
  4225e0:	clc    
  4225e1:	sahf   
  4225e2:	rcl    DWORD PTR [ecx-0x1],0xd1
  4225e6:	dec    ebx
  4225e7:	xchg   ecx,eax
  4225e8:	jo     0x422573
  4225ea:	cmp    esp,DWORD PTR [eax+eiz*2+0x4f]
  4225ee:	loopne 0x422575
  4225f0:	(bad)  
  4225f2:	dec    ebp
  4225f3:	jp     0x42262d
  4225f5:	sub    BYTE PTR [esi+0x4],dh
  4225f8:	retf   
  4225f9:	push   ss
  4225fa:	adc    bh,BYTE PTR [ecx]
  4225fc:	xchg   esp,eax
  4225fd:	fcomi  st,st(4)
  4225ff:	inc    esi
  422600:	jg     0x42259f
  422602:	mov    ecx,0xa94d61fb
  422607:	int3   
  422608:	jge    0x422648
  42260a:	sub    al,0x24
  42260c:	dec    esi
  42260d:	mov    eax,ds:0xb15ff20e
  422612:	inc    ecx
  422613:	adc    al,0x74
  422615:	jne    0x4225be
  422617:	adc    al,0xa2
  422619:	pop    ebp
  42261a:	test   DWORD PTR [eax],0x65caba30
  422620:	rcr    BYTE PTR gs:[esi+0x54],cl
  422624:	lods   al,BYTE PTR ds:[esi]
  422625:	push   esp
  422626:	pop    es
  422627:	xchg   edx,eax
  422628:	jbe    0x422638
  42262a:	inc    esp
  42262b:	jmp    0x4226a5
  42262d:	dec    edi
  42262e:	jbe    0x4225c0
  422630:	push   0x6f
  422632:	frstor [ecx+0x7c]
  422635:	addr16 jle 0x4225d5
  422638:	test   eax,edx
  42263a:	nop
  42263b:	pop    ds
  42263c:	pop    ebx
  42263d:	ins    BYTE PTR es:[edi],dx
  42263e:	jg     0x4225cb
  422640:	push   edi
  422641:	mov    bl,0x8c
  422643:	ror    DWORD PTR [edi-0x57],0x60
  422647:	pop    edi
  422648:	(bad)  [esi+ecx*1-0x76]
  42264c:	push   edi
  42264d:	(bad)  
  42264e:	les    esp,FWORD PTR [eax-0x439becea]
  422654:	add    esp,DWORD PTR [edi+0x20]
  422657:	xchg   BYTE PTR [ebp+0x61],cl
  42265a:	mov    ?,WORD PTR [eax-0x12]
  42265d:	dec    esi
  42265f:	pusha  
  422660:	retf   0x5449
  422663:	into   
  422664:	mov    ds:0x40f83ffc,al
  422669:	popf   
  42266a:	jo     0x4226c0
  42266c:	in     al,0x60
  42266e:	inc    BYTE PTR [eax-0xa14c7cb]
  422674:	std    
  422675:	neg    DWORD PTR [edx+0x35e4d564]
  42267b:	aaa    
  42267c:	pop    eax
  42267d:	sbb    al,0xd5
  42267f:	adc    dl,cl
  422681:	test   al,0x51
  422683:	push   esp
  422685:	loopne 0x422706
  422687:	push   ss
  422688:	icebp  
  422689:	loop   0x42261f
  42268b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268c:	(bad)  
  42268d:	cli    
  42268e:	cmp    al,BYTE PTR [edx+0x35]
  422691:	ror    DWORD PTR [ebx],1
  422693:	fsub   QWORD PTR [esi]
  422695:	jp     0x42262f
  422697:	push   esp
  422698:	mov    ds:0x6b8d1dd9,eax
  42269d:	lock mov eax,0x7c936610
  4226a3:	das    
  4226a4:	lods   al,BYTE PTR ds:[esi]
  4226a5:	enter  0x6b2c,0x60
  4226a9:	dec    esi
  4226aa:	outs   dx,BYTE PTR ds:[esi]
  4226ab:	cmp    BYTE PTR [esi-0x56],cl
  4226ae:	jo     0x422707
  4226b0:	inc    ecx
  4226b1:	mov    ebp,0xfbdba5d4
  4226b6:	lea    eax,[ecx]
  4226b8:	xor    eax,DWORD PTR [esi-0xc]
  4226bb:	lds    ebx,FWORD PTR [ebp+0x464828c6]
  4226c1:	adc    eax,0xaef94db6
  4226c6:	and    ch,BYTE PTR [ebx+0x78]
  4226c9:	mov    ds:0x91704f98,eax
  4226ce:	lea    ebp,[edx-0x60]
  4226d1:	inc    edi
  4226d2:	in     al,dx
  4226d3:	cmp    bl,BYTE PTR [edx-0x2c]
  4226d6:	stc    
  4226d7:	cmp    ecx,DWORD PTR [ebx]
  4226d9:	xor    esp,DWORD PTR [edi+0x5f]
  4226dc:	enter  0x3abc,0x5a
  4226e0:	mov    al,ds:0x1e003630
  4226e5:	dec    ebp
  4226e6:	push   esp
  4226e7:	jmp    0x4226b4
  4226e9:	push   cs
  4226ea:	xchg   ecx,eax
  4226eb:	and    BYTE PTR [edi+0x3a356047],bh
  4226f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226f2:	ss add al,0xd4
  4226f5:	lds    ebp,FWORD PTR [ebx]
  4226f7:	mov    eax,ds:0x2c8acc39
  4226fc:	adc    al,0x93
  4226fe:	or     al,BYTE PTR [ecx+0x37]
  422701:	xchg   DWORD PTR [ebx-0x43999373],edi
  422707:	out    dx,eax
  422708:	(bad)  
  422709:	repnz pop ecx
  42270b:	or     esp,DWORD PTR [ecx+eax*1]
  42270e:	pop    ss
  42270f:	repnz xchg edi,eax
  422711:	div    edx
  422713:	(bad)  
  422715:	mov    eax,0x944bf114
  42271a:	sbb    al,0xca
  42271c:	push   ss
  42271d:	dec    esp
  42271e:	xchg   esi,eax
  42271f:	dec    edi
  422720:	mov    ebp,0xf94677b7
  422725:	cwde   
  422726:	in     eax,0xe6
  422728:	mov    cl,0xae
  42272a:	sbb    al,0xd8
  42272c:	in     al,0xb0
  42272e:	add    al,BYTE PTR [edx+0x4723309]
  422734:	push   edi
  422735:	xor    DWORD PTR [ebp-0x2f],0x6d
  422739:	inc    esi
  42273a:	sbb    cl,BYTE PTR [ecx+0x67295499]
  422740:	mov    edx,0xf5f29c69
  422745:	pop    eax
  422746:	inc    ecx
  422747:	(bad)  
  422748:	mul    DWORD PTR [edi]
  42274a:	jno    0x4227a7
  42274c:	sbb    eax,0x9446b872
  422751:	jns    0x42276b
  422753:	xor    cl,BYTE PTR [ecx]
  422755:	sbb    BYTE PTR [ebx-0x7d],0x97
  422759:	xchg   DWORD PTR [esi],edx
  42275b:	outs   dx,DWORD PTR ds:[esi]
  42275c:	push   eax
  42275d:	scas   al,BYTE PTR es:[edi]
  42275e:	add    al,0x6b
  422760:	and    BYTE PTR [edi],dh
  422762:	imul   ebp,DWORD PTR [ecx],0xffffff89
  422765:	nop
  422766:	jns    0x4226fd
  422768:	jecxz  0x422735
  42276a:	jo     0x42271c
  42276c:	fcmove st,st(7)
  42276e:	dec    edx
  42276f:	mov    al,0xc6
  422771:	ins    BYTE PTR es:[edi],dx
  422772:	arpl   WORD PTR [edi+0x1],si
  422775:	out    0xcf,eax
  422777:	cmp    DWORD PTR [ecx*8-0x5b06cbd],esp
  42277e:	or     bh,BYTE PTR [edx]
  422780:	mov    edi,0x384b05e8
  422785:	push   0x6f
  422787:	jmp    0x5979:0xd3356af1
  42278e:	and    BYTE PTR [ebp+0x28992fc9],dh
  422794:	mov    ds:0xb893a69d,eax
  422799:	mov    edi,fs
  42279b:	push   cs
  42279c:	stos   DWORD PTR es:[edi],eax
  42279d:	push   ss
  42279e:	push   ecx
  42279f:	add    al,0x16
  4227a1:	sub    edx,DWORD PTR [edi]
  4227a3:	std    
  4227a4:	jge    0x4227fd
  4227a6:	jns    0x4227ce
  4227a8:	repz mov eax,0x28a4fa2f
  4227ae:	loop   0x4227c6
  4227b0:	cmp    DWORD PTR [esi],ebp
  4227b2:	shr    BYTE PTR [esi+0x3f3d6afa],1
  4227b8:	and    esp,esp
  4227ba:	xchg   esi,eax
  4227bb:	mov    ds:0x539946a7,al
  4227c0:	pushf  
  4227c1:	push   0xb4467776
  4227c6:	push   edx
  4227c7:	xchg   esi,eax
  4227c8:	out    dx,eax
  4227c9:	int    0x5d
  4227cb:	xchg   esp,eax
  4227cc:	lahf   
  4227cd:	or     al,0x85
  4227cf:	push   0x77
  4227d1:	sub    eax,0xc42cae72
  4227d6:	xlat   BYTE PTR ds:[ebx]
  4227d7:	sti    
  4227d8:	(bad)  
  4227da:	push   ebp
  4227db:	out    dx,eax
  4227dc:	push   ebx
  4227dd:	pushf  
  4227de:	inc    eax
  4227df:	xchg   BYTE PTR [esi-0x50d102c7],bh
  4227e5:	push   ebx
  4227e6:	adc    esi,DWORD PTR [eax-0x681df523]
  4227ec:	enter  0x23b,0xe5
  4227f0:	out    0xe2,eax
  4227f2:	syscall 
  4227f4:	aad    0xad
  4227f6:	xor    BYTE PTR [ebp+0x95bf17e],0xd6
  4227fd:	loop   0x4227ed
  4227ff:	cmp    eax,0x4c50b78a
  422804:	inc    eax
  422805:	mov    ecx,0x86927494
  42280a:	or     DWORD PTR [ebx-0x1c0f906a],0x7df4968a
  422814:	test   DWORD PTR [edi*4+0x7ddcfe5e],ebp
  42281b:	mov    ebx,0x47bc1be9
  422820:	mov    ds:0xd68269d,eax
  422825:	adc    BYTE PTR [ebp-0x468b92d1],0x5
  42282c:	dec    ebx
  42282d:	aam    0xac
  42282f:	fidiv  WORD PTR [edx]
  422831:	ins    BYTE PTR es:[edi],dx
  422832:	inc    edx
  422833:	cs push 0x164d998e
  422839:	out    0xf0,eax
  42283b:	fstp   QWORD PTR [edx-0x33]
  42283e:	stc    
  42283f:	add    eax,0x301bf1f9
  422844:	or     bh,BYTE PTR [ecx+esi*4]
  422847:	icebp  
  422848:	sub    DWORD PTR [esi],ebx
  42284a:	mov    ah,0x12
  42284c:	test   esp,0xc0706fe0
  422852:	cli    
  422853:	popf   
  422854:	popa   
  422855:	add    edx,DWORD PTR [esi+0x161ec238]
  42285b:	xchg   edi,eax
  42285c:	lea    esp,[ecx]
  42285e:	xor    ch,BYTE PTR [ecx]
  422860:	mov    dh,0x6a
  422862:	sub    al,0x9f
  422864:	or     DWORD PTR [edx-0xa],ecx
  422867:	xchg   ebx,eax
  422868:	inc    ebx
  422869:	cmp    ebp,DWORD PTR [edx]
  42286b:	or     eax,0x664bde9
  422870:	cwde   
  422871:	retf   0x3006
  422874:	add    al,0x27
  422876:	sbb    al,0x82
  422878:	ja     0x4227fc
  42287a:	push   ss
  42287b:	loop   0x4228b6
  42287d:	loopne 0x422862
  42287f:	mov    ds,WORD PTR [esi]
  422881:	neg    bl
  422883:	mov    esi,0xe60d17c0
  422888:	add    DWORD PTR [ebx],ebx
  42288a:	inc    ebx
  42288b:	add    BYTE PTR [ecx],bh
  42288d:	int3   
  42288e:	push   edi
  42288f:	mov    BYTE PTR [eax+eiz*1],ch
  422892:	dec    ebx
  422893:	outs   dx,BYTE PTR ds:[esi]
  422894:	adc    eax,0xa791adb2
  422899:	mov    ch,0x2a
  42289b:	bound  bp,DWORD PTR [edx-0xa]
  42289f:	sbb    al,BYTE PTR [edx+edi*8]
  4228a2:	and    eax,0x519f6130
  4228a7:	sbb    eax,0xcbff1d1
  4228ac:	and    eax,0x5c5b772c
  4228b1:	outs   dx,BYTE PTR ds:[esi]
  4228b2:	sti    
  4228b3:	pusha  
  4228b4:	(bad)  
  4228b5:	fdiv   QWORD PTR [ecx-0x59]
  4228b8:	sbb    dh,BYTE PTR [ecx+0x1d]
  4228bb:	fisubr DWORD PTR [ebx+0x13]
  4228be:	inc    esi
  4228bf:	dec    edi
  4228c0:	ss and eax,0x1d84716e
  4228c6:	(bad)  
  4228c8:	xor    al,0x50
  4228ca:	push   cs
  4228cb:	out    0xc3,eax
  4228cd:	mov    bh,0xba
  4228cf:	test   BYTE PTR [esi-0x24b27b88],bl
  4228d5:	retf   0x635b
  4228d8:	cmp    DWORD PTR [edi],eax
  4228da:	xor    ch,BYTE PTR [esi-0x1a]
  4228dd:	cld    
  4228de:	pop    es
  4228df:	push   ds
  4228e0:	retf   
  4228e1:	repnz retf 
  4228e3:	mov    esp,0xfc47f91c
  4228e8:	mov    ds:0xa20c2e39,al
  4228ed:	inc    ebp
  4228ee:	daa    
  4228ef:	test   eax,0xee1615a1
  4228f4:	hlt    
  4228f5:	sub    BYTE PTR cs:[edx+0x1f],al
  4228f9:	std    
  4228fa:	pop    edi
  4228fb:	mov    ds:0x30b73ae4,eax
  422900:	clc    
  422901:	sub    BYTE PTR [ebp-0x25],bh
  422904:	adc    esp,DWORD PTR [edx]
  422906:	dec    eax
  422907:	aad    0xf4
  422909:	lds    ebp,FWORD PTR [ecx+0x37]
  42290c:	hlt    
  42290d:	xchg   edi,eax
  42290e:	fmul   QWORD PTR [ebp-0x674235f4]
  422914:	inc    esi
  422915:	mov    cl,0xbd
  422917:	jmp    0x9fc89ad5
  42291c:	add    eax,0x8bbbb6c5
  422921:	add    eax,0xc57eead0
  422926:	rsqrtps xmm3,XMMWORD PTR [edi-0x1c]
  42292a:	scas   al,BYTE PTR es:[edi]
  42292b:	mov    eax,0x86dd9b2b
  422930:	les    ebx,FWORD PTR [ebx+0x4c09ab86]
  422936:	jg     0x4228db
  422938:	mov    ch,0x8
  42293a:	mov    edx,0xa39992f8
  42293f:	mov    ds:0xe79c1080,eax
  422944:	mov    ds:0x6dde5f2e,eax
  422949:	cmc    
  42294a:	fild   WORD PTR [edx]
  42294c:	jmp    0xaa60:0xb1874144
  422953:	loopne 0x42295e
  422955:	push   0x31935495
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
